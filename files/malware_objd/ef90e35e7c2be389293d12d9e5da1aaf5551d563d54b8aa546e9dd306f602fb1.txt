
ef90e35e7c2be389293d12d9e5da1aaf5551d563d54b8aa546e9dd306f602fb1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	push   ecx
  401004:	mov    DWORD PTR [ebp-0x4],0x4
  40100b:	mov    eax,DWORD PTR [ebp-0x4]
  40100e:	add    eax,0x40dcda
  401013:	mov    ds:0x42418c,eax
  401018:	mov    esp,ebp
  40101a:	pop    ebp
  40101b:	ret    
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	push   ecx
  401024:	mov    DWORD PTR [ebp-0x4],0x4
  40102b:	mov    eax,DWORD PTR [ebp-0x4]
  40102e:	add    eax,0x40dacc
  401033:	mov    ds:0x42418c,eax
  401038:	mov    esp,ebp
  40103a:	pop    ebp
  40103b:	ret    
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    eax,DWORD PTR [ebp+0x8]
  401049:	mov    DWORD PTR [ebp-0x8],eax
  40104c:	mov    ecx,DWORD PTR [ebp+0xc]
  40104f:	mov    DWORD PTR [ebp-0xc],ecx
  401052:	mov    DWORD PTR [ebp-0x4],0x22b
  401059:	mov    edx,DWORD PTR [ebp-0x8]
  40105c:	cmp    edx,DWORD PTR [ebp-0xc]
  40105f:	jae    0x40106f
  401061:	mov    DWORD PTR [ebp-0x4],0x22b
  401068:	mov    eax,DWORD PTR [ebp-0x8]
  40106b:	jmp    0x401079
  40106d:	jmp    0x401079
  40106f:	mov    DWORD PTR [ebp-0x4],0x22b
  401076:	mov    eax,DWORD PTR [ebp-0xc]
  401079:	mov    esp,ebp
  40107b:	pop    ebp
  40107c:	ret    
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	sub    esp,0xc
  401086:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40108d:	mov    DWORD PTR [ebp-0xc],0x3000
  401094:	mov    DWORD PTR [ebp-0x4],0x40
  40109b:	mov    eax,DWORD PTR [ebp-0x4]
  40109e:	push   eax
  40109f:	mov    ecx,DWORD PTR [ebp-0xc]
  4010a2:	push   ecx
  4010a3:	mov    edx,DWORD PTR [ebp+0x8]
  4010a6:	push   edx
  4010a7:	push   0x0
  4010a9:	push   0xffffffff
  4010ab:	call   DWORD PTR ds:0x424100
  4010b1:	mov    esp,ebp
  4010b3:	pop    ebp
  4010b4:	ret    
  4010b5:	int3   
  4010b6:	int3   
  4010b7:	int3   
  4010b8:	int3   
  4010b9:	int3   
  4010ba:	int3   
  4010bb:	int3   
  4010bc:	int3   
  4010bd:	int3   
  4010be:	int3   
  4010bf:	int3   
  4010c0:	push   ebp
  4010c1:	mov    ebp,esp
  4010c3:	pop    ebp
  4010c4:	ret    
  4010c5:	int3   
  4010c6:	int3   
  4010c7:	int3   
  4010c8:	int3   
  4010c9:	int3   
  4010ca:	int3   
  4010cb:	int3   
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	mov    eax,DWORD PTR [ebp+0x8]
  4010d6:	mov    eax,DWORD PTR [eax-0x4]
  4010d9:	pop    ebp
  4010da:	ret    
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	mov    eax,ds:0x424190
  4010e8:	mov    ecx,DWORD PTR ds:0x424194
  4010ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4010f2:	pop    ebp
  4010f3:	ret    
  4010f4:	int3   
  4010f5:	int3   
  4010f6:	int3   
  4010f7:	int3   
  4010f8:	int3   
  4010f9:	int3   
  4010fa:	int3   
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	mov    esp,ecx
  401105:	pop    ecx
  401106:	jmp    eax
  401108:	pop    ebp
  401109:	ret    
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	sub    esp,0x38
  401116:	mov    DWORD PTR [ebp-0x8],0x11cb
  40111d:	mov    DWORD PTR [ebp-0x8],0xc83e
  401124:	mov    DWORD PTR [ebp-0x10],0x0
  40112b:	jmp    0x401136
  40112d:	mov    eax,DWORD PTR [ebp-0x10]
  401130:	add    eax,0x4
  401133:	mov    DWORD PTR [ebp-0x10],eax
  401136:	mov    ecx,DWORD PTR [ebp-0x10]
  401139:	cmp    ecx,DWORD PTR [ebp+0xc]
  40113c:	jae    0x401236
  401142:	mov    DWORD PTR [ebp-0x8],0xc83e
  401149:	mov    edx,DWORD PTR [ebp-0x10]
  40114c:	add    edx,0x947
  401152:	mov    DWORD PTR [ebp-0x2c],edx
  401155:	mov    eax,DWORD PTR [ebp-0x2c]
  401158:	mov    DWORD PTR [ebp-0x28],eax
  40115b:	mov    ecx,DWORD PTR [ebp-0x28]
  40115e:	mov    DWORD PTR [ebp-0x24],ecx
  401161:	mov    DWORD PTR [ebp-0x8],0xc83e
  401168:	mov    edx,DWORD PTR [ebp-0x24]
  40116b:	mov    DWORD PTR [ebp-0x20],edx
  40116e:	mov    DWORD PTR [ebp-0x8],0xc83e
  401175:	cmp    DWORD PTR [ebp-0x10],0x0
  401179:	jne    0x4011e8
  40117b:	mov    DWORD PTR [ebp-0x38],0x424000
  401182:	push   0x104
  401187:	push   0x424198
  40118c:	call   DWORD PTR ds:0x424104
  401192:	mov    eax,0x5c
  401197:	mov    ecx,DWORD PTR [ebp-0x38]
  40119a:	mov    WORD PTR [ecx],ax
  40119d:	mov    edx,0x73
  4011a2:	mov    eax,DWORD PTR [ebp-0x38]
  4011a5:	mov    WORD PTR [eax+0x2],dx
  4011a9:	mov    ecx,DWORD PTR [ebp-0x38]
  4011ac:	push   ecx
  4011ad:	push   0x424198
  4011b2:	call   DWORD PTR ds:0x424108
  4011b8:	push   0x0
  4011ba:	push   0x80
  4011bf:	push   0x3
  4011c1:	push   0x0
  4011c3:	push   0x3
  4011c5:	push   0x1
  4011c7:	push   0x424198
  4011cc:	call   DWORD PTR ds:0x42410c
  4011d2:	mov    DWORD PTR [ebp-0x4],eax
  4011d5:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4011d9:	je     0x4011e1
  4011db:	cmp    DWORD PTR [ebp-0x4],0x0
  4011df:	jne    0x4011e8
  4011e1:	mov    eax,0x42
  4011e6:	jmp    0x401236
  4011e8:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011ef:	mov    edx,DWORD PTR [ebp-0x20]
  4011f2:	mov    DWORD PTR [ebp-0x34],edx
  4011f5:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011fc:	mov    eax,DWORD PTR [ebp-0x34]
  4011ff:	mov    DWORD PTR [ebp-0x18],eax
  401202:	mov    ecx,DWORD PTR [ebp-0x34]
  401205:	mov    DWORD PTR [ebp-0x14],ecx
  401208:	mov    edx,DWORD PTR [ebp-0x10]
  40120b:	mov    DWORD PTR [ebp-0x1c],edx
  40120e:	mov    eax,DWORD PTR [ebp+0x8]
  401211:	add    eax,DWORD PTR [ebp-0x10]
  401214:	mov    DWORD PTR [ebp-0x30],eax
  401217:	mov    ecx,DWORD PTR [ebp-0x30]
  40121a:	mov    edx,DWORD PTR [ecx]
  40121c:	add    edx,DWORD PTR [ebp-0x1c]
  40121f:	mov    eax,DWORD PTR [ebp-0x30]
  401222:	mov    DWORD PTR [eax],edx
  401224:	mov    ecx,DWORD PTR [ebp-0x30]
  401227:	mov    edx,DWORD PTR [ecx]
  401229:	xor    edx,DWORD PTR [ebp-0x14]
  40122c:	mov    eax,DWORD PTR [ebp-0x30]
  40122f:	mov    DWORD PTR [eax],edx
  401231:	jmp    0x40112d
  401236:	mov    esp,ebp
  401238:	pop    ebp
  401239:	ret    
  40123a:	int3   
  40123b:	int3   
  40123c:	int3   
  40123d:	int3   
  40123e:	int3   
  40123f:	int3   
  401240:	push   ebp
  401241:	mov    ebp,esp
  401243:	sub    esp,0x10
  401246:	cmp    DWORD PTR [ebp+0xc],0x1
  40124a:	jne    0x401254
  40124c:	mov    eax,ds:0x42429c
  401251:	mov    DWORD PTR [ebp+0xc],eax
  401254:	mov    ecx,DWORD PTR [ebp+0x8]
  401257:	cmp    DWORD PTR [ecx+0x4],0x0
  40125b:	je     0x4012a4
  40125d:	mov    DWORD PTR [ebp-0x10],0x2a1
  401264:	mov    edx,DWORD PTR [ebp+0x8]
  401267:	mov    eax,DWORD PTR [edx+0x4]
  40126a:	sub    eax,0x8
  40126d:	shr    eax,1
  40126f:	mov    DWORD PTR [ebp-0xc],eax
  401272:	mov    ecx,DWORD PTR [ebp+0x8]
  401275:	add    ecx,0x8
  401278:	mov    DWORD PTR ds:0x424194,ecx
  40127e:	mov    edx,DWORD PTR [ebp+0x8]
  401281:	push   edx
  401282:	mov    eax,DWORD PTR [ebp+0x10]
  401285:	push   eax
  401286:	mov    ecx,DWORD PTR [ebp+0xc]
  401289:	push   ecx
  40128a:	mov    edx,DWORD PTR [ebp-0xc]
  40128d:	push   edx
  40128e:	call   0x4012b0
  401293:	add    esp,0x10
  401296:	mov    eax,DWORD PTR [ebp+0x8]
  401299:	mov    ecx,DWORD PTR [ebp+0x8]
  40129c:	add    ecx,DWORD PTR [eax+0x4]
  40129f:	mov    DWORD PTR [ebp+0x8],ecx
  4012a2:	jmp    0x401254
  4012a4:	mov    esp,ebp
  4012a6:	pop    ebp
  4012a7:	ret    
  4012a8:	int3   
  4012a9:	int3   
  4012aa:	int3   
  4012ab:	int3   
  4012ac:	int3   
  4012ad:	int3   
  4012ae:	int3   
  4012af:	int3   
  4012b0:	push   ebp
  4012b1:	mov    ebp,esp
  4012b3:	sub    esp,0x10
  4012b6:	mov    DWORD PTR ds:0x424190,0x0
  4012c0:	jmp    0x4012cf
  4012c2:	mov    eax,ds:0x424190
  4012c7:	add    eax,0x1
  4012ca:	mov    ds:0x424190,eax
  4012cf:	mov    ecx,DWORD PTR ds:0x424190
  4012d5:	cmp    ecx,DWORD PTR [ebp+0x8]
  4012d8:	jae    0x401354
  4012da:	mov    edx,DWORD PTR ds:0x424190
  4012e0:	mov    eax,ds:0x424194
  4012e5:	movzx  ecx,WORD PTR [eax+edx*2]
  4012e9:	sar    ecx,0xc
  4012ec:	cmp    ecx,0x3
  4012ef:	jne    0x40134f
  4012f1:	mov    DWORD PTR [ebp-0x10],0xfff
  4012f8:	mov    DWORD PTR [ebp-0xc],0x3107
  4012ff:	mov    DWORD PTR [ebp-0xc],0x3107
  401306:	mov    edx,DWORD PTR ds:0x424190
  40130c:	mov    eax,ds:0x424194
  401311:	movzx  ecx,WORD PTR [eax+edx*2]
  401315:	and    ecx,DWORD PTR [ebp-0x10]
  401318:	add    ecx,0x2d23
  40131e:	mov    DWORD PTR [ebp-0x8],ecx
  401321:	mov    DWORD PTR [ebp-0xc],0x3107
  401328:	mov    edx,DWORD PTR [ebp+0x14]
  40132b:	mov    eax,DWORD PTR [ebp+0xc]
  40132e:	add    eax,DWORD PTR [edx]
  401330:	mov    ecx,DWORD PTR [ebp-0x8]
  401333:	mov    edx,DWORD PTR [eax+ecx*1-0x2d23]
  40133a:	add    edx,DWORD PTR [ebp+0x10]
  40133d:	mov    eax,DWORD PTR [ebp+0x14]
  401340:	mov    ecx,DWORD PTR [ebp+0xc]
  401343:	add    ecx,DWORD PTR [eax]
  401345:	mov    eax,DWORD PTR [ebp-0x8]
  401348:	mov    DWORD PTR [ecx+eax*1-0x2d23],edx
  40134f:	jmp    0x4012c2
  401354:	mov    esp,ebp
  401356:	pop    ebp
  401357:	ret    
  401358:	int3   
  401359:	int3   
  40135a:	int3   
  40135b:	int3   
  40135c:	int3   
  40135d:	int3   
  40135e:	int3   
  40135f:	int3   
  401360:	push   ebp
  401361:	mov    ebp,esp
  401363:	sub    esp,0x22c
  401369:	mov    DWORD PTR [ebp-0x220],0x7c
  401373:	mov    DWORD PTR [ebp-0x214],0x0
  40137d:	mov    DWORD PTR [ebp-0x228],0x0
  401387:	jmp    0x401398
  401389:	mov    eax,DWORD PTR [ebp-0x228]
  40138f:	add    eax,0x1
  401392:	mov    DWORD PTR [ebp-0x228],eax
  401398:	mov    ecx,DWORD PTR [ebp-0x228]
  40139e:	cmp    ecx,DWORD PTR [ebp+0x10]
  4013a1:	jge    0x4013dc
  4013a3:	mov    edx,DWORD PTR [ebp+0xc]
  4013a6:	add    edx,DWORD PTR [ebp-0x228]
  4013ac:	movzx  eax,BYTE PTR [edx]
  4013af:	mov    DWORD PTR [ebp-0x22c],eax
  4013b5:	mov    DWORD PTR [ebp-0x220],0x7c
  4013bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013c2:	add    ecx,DWORD PTR [ebp-0x228]
  4013c8:	mov    dl,BYTE PTR [ebp-0x22c]
  4013ce:	mov    BYTE PTR [ecx],dl
  4013d0:	mov    DWORD PTR [ebp-0x220],0x33
  4013da:	jmp    0x401389
  4013dc:	mov    esp,ebp
  4013de:	pop    ebp
  4013df:	ret    
  4013e0:	push   ebp
  4013e1:	mov    ebp,esp
  4013e3:	pop    ebp
  4013e4:	ret    0x10
  4013e7:	int3   
  4013e8:	int3   
  4013e9:	int3   
  4013ea:	int3   
  4013eb:	int3   
  4013ec:	int3   
  4013ed:	int3   
  4013ee:	int3   
  4013ef:	int3   
  4013f0:	push   ebp
  4013f1:	mov    ebp,esp
  4013f3:	sub    esp,0xd0
  4013f9:	push   ebx
  4013fa:	push   esi
  4013fb:	push   edi
  4013fc:	mov    DWORD PTR ds:0x4242a0,ebp
  401402:	pusha  
  401403:	mov    DWORD PTR [ebp-0x8c],0x0
  40140d:	mov    DWORD PTR [ebp-0xa0],0x80000002
  401417:	mov    eax,ds:0x424114
  40141c:	mov    DWORD PTR [ebp-0xb8],eax
  401422:	mov    ecx,DWORD PTR ds:0x424114
  401428:	mov    DWORD PTR [ebp-0xbc],ecx
  40142e:	mov    DWORD PTR [ebp-0xb0],0x424030
  401438:	mov    edx,DWORD PTR [ebp-0xbc]
  40143e:	movzx  eax,BYTE PTR [edx]
  401441:	cmp    eax,0x8b
  401446:	je     0x40145d
  401448:	mov    ecx,DWORD PTR [ebp-0xbc]
  40144e:	movzx  edx,BYTE PTR [ecx]
  401451:	cmp    edx,0x55
  401454:	je     0x40145d
  401456:	xor    eax,eax
  401458:	jmp    0x401775
  40145d:	mov    eax,0x53
  401462:	mov    ecx,DWORD PTR [ebp-0xb0]
  401468:	mov    WORD PTR [ecx+0x4],ax
  40146c:	mov    edx,0x49
  401471:	mov    eax,DWORD PTR [ebp-0xb0]
  401477:	mov    WORD PTR [eax+0x6],dx
  40147b:	lea    ecx,[ebp-0xb4]
  401481:	push   ecx
  401482:	mov    edx,DWORD PTR [ebp-0xb0]
  401488:	push   edx
  401489:	push   0x80000000
  40148e:	call   DWORD PTR [ebp-0xb8]
  401494:	test   eax,eax
  401496:	je     0x40149d
  401498:	call   0x4013f0
  40149d:	call   0x401000
  4014a2:	mov    DWORD PTR [ebp-0x80],0x64
  4014a9:	mov    DWORD PTR [ebp-0x1c],0x2
  4014b0:	mov    DWORD PTR [ebp-0x8c],0x0
  4014ba:	mov    DWORD PTR [ebp-0x54],0x0
  4014c1:	mov    DWORD PTR [ebp-0x7c],0x1
  4014c8:	mov    DWORD PTR [ebp-0x14],0x0
  4014cf:	mov    DWORD PTR [ebp-0x80],0x64
  4014d6:	mov    DWORD PTR [ebp-0x1c],0x2
  4014dd:	mov    DWORD PTR [ebp-0x8c],0x0
  4014e7:	mov    DWORD PTR [ebp-0x54],0x0
  4014ee:	mov    DWORD PTR [ebp-0x7c],0x1
  4014f5:	mov    DWORD PTR [ebp-0x18],0x3
  4014fc:	mov    DWORD PTR [ebp-0x14],0x0
  401503:	mov    DWORD PTR [ebp-0x80],0x64
  40150a:	mov    DWORD PTR [ebp-0x1c],0x2
  401511:	mov    DWORD PTR [ebp-0x8c],0x0
  40151b:	mov    DWORD PTR [ebp-0x54],0x0
  401522:	mov    DWORD PTR [ebp-0x7c],0x1
  401529:	mov    DWORD PTR [ebp-0x18],0x3
  401530:	mov    eax,ds:0x42418c
  401535:	push   eax
  401536:	call   0x4010d0
  40153b:	add    esp,0x4
  40153e:	mov    DWORD PTR [ebp-0x90],eax
  401544:	mov    ecx,DWORD PTR [ebp-0x90]
  40154a:	push   ecx
  40154b:	call   0x401080
  401550:	add    esp,0x4
  401553:	mov    DWORD PTR [ebp-0x88],eax
  401559:	mov    edx,DWORD PTR [ebp-0x90]
  40155f:	push   edx
  401560:	push   0x0
  401562:	mov    eax,DWORD PTR [ebp-0x88]
  401568:	push   eax
  401569:	call   0x4010c0
  40156e:	add    esp,0xc
  401571:	mov    ecx,DWORD PTR [ebp-0x90]
  401577:	mov    DWORD PTR [ebp-0x98],ecx
  40157d:	mov    edx,DWORD PTR [ebp-0x8c]
  401583:	cmp    edx,DWORD PTR [ebp-0x90]
  401589:	jae    0x4015f8
  40158b:	mov    eax,DWORD PTR [ebp-0x98]
  401591:	push   eax
  401592:	mov    ecx,DWORD PTR [ebp-0x80]
  401595:	push   ecx
  401596:	call   0x401040
  40159b:	add    esp,0x8
  40159e:	mov    DWORD PTR [ebp-0x9c],eax
  4015a4:	mov    edx,DWORD PTR [ebp-0x9c]
  4015aa:	push   edx
  4015ab:	mov    eax,ds:0x42418c
  4015b0:	add    eax,DWORD PTR [ebp-0x54]
  4015b3:	push   eax
  4015b4:	mov    ecx,DWORD PTR [ebp-0x88]
  4015ba:	add    ecx,DWORD PTR [ebp-0x8c]
  4015c0:	push   ecx
  4015c1:	call   0x401360
  4015c6:	add    esp,0xc
  4015c9:	mov    edx,DWORD PTR [ebp-0x1c]
  4015cc:	add    edx,DWORD PTR [ebp-0x80]
  4015cf:	add    edx,DWORD PTR [ebp-0x54]
  4015d2:	mov    DWORD PTR [ebp-0x54],edx
  4015d5:	mov    eax,DWORD PTR [ebp-0x8c]
  4015db:	add    eax,DWORD PTR [ebp-0x80]
  4015de:	mov    DWORD PTR [ebp-0x8c],eax
  4015e4:	mov    ecx,DWORD PTR [ebp-0x98]
  4015ea:	sub    ecx,DWORD PTR [ebp-0x9c]
  4015f0:	mov    DWORD PTR [ebp-0x98],ecx
  4015f6:	jmp    0x40157d
  4015f8:	mov    edx,DWORD PTR [ebp-0x90]
  4015fe:	push   edx
  4015ff:	mov    eax,DWORD PTR [ebp-0x88]
  401605:	push   eax
  401606:	call   0x401110
  40160b:	add    esp,0x8
  40160e:	mov    DWORD PTR [ebp-0x54],0x0
  401615:	mov    DWORD PTR [ebp-0xc0],0x0
  40161f:	call   0x401020
  401624:	mov    ecx,DWORD PTR ds:0x42418c
  40162a:	push   ecx
  40162b:	call   0x4010d0
  401630:	add    esp,0x4
  401633:	mov    DWORD PTR [ebp-0xc4],eax
  401639:	mov    edx,DWORD PTR [ebp-0xc4]
  40163f:	push   edx
  401640:	call   0x401080
  401645:	add    esp,0x4
  401648:	mov    DWORD PTR [ebp-0x50],eax
  40164b:	mov    eax,DWORD PTR [ebp-0xc4]
  401651:	push   eax
  401652:	push   0x0
  401654:	mov    ecx,DWORD PTR [ebp-0x50]
  401657:	push   ecx
  401658:	call   0x4010c0
  40165d:	add    esp,0xc
  401660:	mov    edx,DWORD PTR [ebp-0xc4]
  401666:	mov    DWORD PTR [ebp-0xcc],edx
  40166c:	mov    eax,DWORD PTR [ebp-0xc0]
  401672:	cmp    eax,DWORD PTR [ebp-0xc4]
  401678:	jae    0x4016e5
  40167a:	mov    ecx,DWORD PTR [ebp-0xcc]
  401680:	push   ecx
  401681:	mov    edx,DWORD PTR [ebp-0x80]
  401684:	push   edx
  401685:	call   0x401040
  40168a:	add    esp,0x8
  40168d:	mov    DWORD PTR [ebp-0xd0],eax
  401693:	mov    eax,DWORD PTR [ebp-0xd0]
  401699:	push   eax
  40169a:	mov    ecx,DWORD PTR ds:0x42418c
  4016a0:	add    ecx,DWORD PTR [ebp-0x54]
  4016a3:	push   ecx
  4016a4:	mov    edx,DWORD PTR [ebp-0x50]
  4016a7:	add    edx,DWORD PTR [ebp-0xc0]
  4016ad:	push   edx
  4016ae:	call   0x401360
  4016b3:	add    esp,0xc
  4016b6:	mov    eax,DWORD PTR [ebp-0x1c]
  4016b9:	add    eax,DWORD PTR [ebp-0x80]
  4016bc:	add    eax,DWORD PTR [ebp-0x54]
  4016bf:	mov    DWORD PTR [ebp-0x54],eax
  4016c2:	mov    ecx,DWORD PTR [ebp-0xc0]
  4016c8:	add    ecx,DWORD PTR [ebp-0x80]
  4016cb:	mov    DWORD PTR [ebp-0xc0],ecx
  4016d1:	mov    edx,DWORD PTR [ebp-0xcc]
  4016d7:	sub    edx,DWORD PTR [ebp-0xd0]
  4016dd:	mov    DWORD PTR [ebp-0xcc],edx
  4016e3:	jmp    0x40166c
  4016e5:	mov    eax,DWORD PTR [ebp-0xc4]
  4016eb:	push   eax
  4016ec:	mov    ecx,DWORD PTR [ebp-0x50]
  4016ef:	push   ecx
  4016f0:	call   0x401110
  4016f5:	add    esp,0x8
  4016f8:	mov    edx,DWORD PTR [ebp-0x88]
  4016fe:	mov    eax,DWORD PTR [ebp-0x50]
  401701:	mov    DWORD PTR [edx],eax
  401703:	push   0x17000
  401708:	call   0x401080
  40170d:	add    esp,0x4
  401710:	mov    ds:0x42429c,eax
  401715:	push   0x15500
  40171a:	mov    ecx,DWORD PTR [ebp-0x88]
  401720:	push   ecx
  401721:	mov    edx,DWORD PTR ds:0x42429c
  401727:	add    edx,0x200
  40172d:	push   edx
  40172e:	call   0x401360
  401733:	add    esp,0xc
  401736:	mov    eax,ds:0x42429c
  40173b:	sub    eax,0x400000
  401740:	mov    DWORD PTR [ebp-0xc],eax
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	push   ecx
  401747:	push   0x1
  401749:	mov    edx,DWORD PTR [ebp-0x50]
  40174c:	push   edx
  40174d:	call   0x401240
  401752:	add    esp,0xc
  401755:	popa   
  401756:	mov    eax,ds:0x4242a0
  40175b:	mov    ecx,eax
  40175d:	xor    eax,eax
  40175f:	je     0x401762
  401761:	ret    
  401762:	mov    eax,ds:0x42429c
  401767:	add    eax,0x15350
  40176c:	xor    edx,edx
  40176e:	dec    edx
  40176f:	jne    0x401100
  401775:	pop    edi
  401776:	pop    esi
  401777:	pop    ebx
  401778:	mov    esp,ebp
  40177a:	pop    ebp
  40177b:	ret    
	...
  40dacc:	add    BYTE PTR [edx],al
  40dace:	add    BYTE PTR [eax],al
  40dad0:	inc    edi
  40dad1:	or     DWORD PTR [eax],eax
  40dad3:	add    BYTE PTR [edi+0x9],cl
  40dad6:	add    BYTE PTR [eax],al
  40dad8:	mov    ebx,0xbb32903b
  40dadd:	cmp    ebx,DWORD PTR [eax-0x5fc444ce]
  40dae3:	xor    ch,bl
  40dae5:	cmp    ebp,DWORD PTR [eax+0x1494732]
  40daeb:	add    BYTE PTR [edi],dl
  40daed:	or     DWORD PTR [eax],eax
  40daef:	add    BYTE PTR [ebx+esi*1+0x4b],ah
  40daf3:	cmp    edx,DWORD PTR [edi]
  40daf5:	xor    bl,BYTE PTR [edx+0x3b]
  40daf8:	or     BYTE PTR [edx],dh
  40dafa:	push   0x9331f13b
  40daff:	cmp    edi,DWORD PTR [ecx-0x74c457ce]
  40db05:	xor    ch,ch
  40db07:	cmp    edi,DWORD PTR [esi*1+0x355e3c11]
  40db0e:	popf   
  40db0f:	cmp    al,0xe3
  40db11:	xor    eax,DWORD PTR [edi-0x6ac93dc2]
  40db17:	add    esi,DWORD PTR ds:[edi]
  40db1a:	int    0x3e
  40db1c:	sub    BYTE PTR [edi],dh
  40db1e:	jle    0x40db5f
  40db20:	les    esi,FWORD PTR ds:0x35de3f9b
  40db26:	scas   eax,DWORD PTR es:[edi]
  40db27:	aas    
  40db28:	enter  0xcc35,0x3f
  40db2c:	adc    eax,0xf63fe636
  40db31:	xor    eax,0x3ff9
  40db36:	lock xor eax,0x59470000
  40db3c:	add    DWORD PTR [eax],eax
  40db3e:	fwait
  40db3f:	or     BYTE PTR [eax],al
  40db41:	add    BYTE PTR [edx+0x39],al
  40db44:	sbb    BYTE PTR [eax],dh
  40db46:	(bad)  
  40db47:	cmp    BYTE PTR [edi+0x4b388130],al
  40db4d:	xor    DWORD PTR [edx],esp
  40db4f:	cmp    BYTE PTR [esi+0x31],ah
  40db52:	aaa    
  40db53:	cmp    BYTE PTR [ebp-0x55c814cf],cl
  40db59:	xor    DWORD PTR [ebp+0x5131e137],eax
  40db5f:	cmp    edx,DWORD PTR [edi]
  40db61:	xor    bh,BYTE PTR [ebx]
  40db63:	cmp    esp,DWORD PTR [ebx]
  40db65:	xor    cl,BYTE PTR [esi+0x3b]
  40db68:	inc    edx
  40db69:	xor    bh,bh
  40db6b:	cmp    dl,BYTE PTR [ecx+0x32]
  40db6e:	sbb    BYTE PTR [ebx],bh
  40db70:	pop    esi
  40db71:	xor    ch,dl
  40db73:	cmp    bh,BYTE PTR [ebp+0x32]
  40db76:	lds    edi,FWORD PTR [edx]
  40db78:	xchg   esp,eax
  40db79:	xor    cl,dl
  40db7b:	cmp    ah,BYTE PTR [edi-0x3dc566ce]
  40db81:	xor    dh,BYTE PTR [edi+0x3a]
  40db84:	or     BYTE PTR [ebx],dh
  40db86:	inc    ecx
  40db87:	cmp    dl,BYTE PTR [ebx+esi*1]
  40db8a:	and    bh,BYTE PTR [edx]
  40db8c:	sub    dh,BYTE PTR [ebx]
  40db8e:	test   DWORD PTR [eax],edi
  40db90:	jle    0x40dbc5
  40db92:	iret   
  40db93:	cmp    BYTE PTR [ebp-0x54c719cd],dl
  40db99:	xor    eax,DWORD PTR [eax]
  40db9b:	add    bl,dh
  40db9d:	cmp    BYTE PTR [esi-0x31c6f1cd],bh
  40dba3:	xor    esi,ebx
  40dba5:	cmp    ch,bl
  40dba7:	xor    esp,DWORD PTR [eax]
  40dba9:	cmp    esp,esi
  40dbab:	xor    ecx,DWORD PTR ds:0x4a33ff39
  40dbb1:	cmp    eax,0x3d493409
  40dbb6:	adc    al,0x34
  40dbb8:	and    eax,0x1a34283d
  40dbbd:	cmp    eax,0x3d903432
  40dbc2:	pop    edx
  40dbc3:	xor    al,0xc1
  40dbc5:	cmp    eax,0x3db5348c
  40dbca:	pushf  
  40dbcb:	xor    al,0x1
  40dbcd:	ds jmp 0x40dc04
  40dbd0:	mov    edi,0x51350c3d
  40dbd5:	and    esi,DWORD PTR ds:0x35313e5e
  40dbdc:	outs   dx,BYTE PTR ds:[esi]
  40dbdd:	ds inc esp
  40dbdf:	xor    eax,0x355d3e13
  40dbe4:	and    eax,0xca35713e
  40dbe9:	mov    ?,WORD PTR ds:0x35a53eb1
  40dbf0:	inc    edi
  40dbf1:	or     DWORD PTR [eax],eax
  40dbf3:	add    BYTE PTR [edi+0x9],al
  40dbf6:	add    BYTE PTR [eax],al
  40dbf8:	inc    edi
  40dbf9:	or     DWORD PTR [eax],eax
  40dbfb:	add    BYTE PTR [edi+0x9],al
  40dbfe:	add    BYTE PTR [eax],al
  40dc00:	add    BYTE PTR [eax],al
  40dc02:	inc    edi
  40dc03:	or     DWORD PTR [eax],eax
  40dc05:	add    BYTE PTR [edi+0x9],al
  40dc08:	add    BYTE PTR [eax],al
  40dc0a:	inc    edi
  40dc0b:	or     DWORD PTR [eax],eax
  40dc0d:	add    BYTE PTR [edi+0x9],al
  40dc10:	add    BYTE PTR [eax],al
  40dc12:	inc    edi
  40dc13:	or     DWORD PTR [eax],eax
  40dc15:	add    BYTE PTR [edi+0x9],al
  40dc18:	add    BYTE PTR [eax],al
  40dc1a:	inc    edi
  40dc1b:	or     DWORD PTR [eax],eax
  40dc1d:	add    BYTE PTR [edi+0x9],al
  40dc20:	add    BYTE PTR [eax],al
  40dc22:	inc    edi
  40dc23:	or     DWORD PTR [eax],eax
  40dc25:	add    BYTE PTR [edi+0x9],al
  40dc28:	add    BYTE PTR [eax],al
  40dc2a:	inc    edi
  40dc2b:	or     DWORD PTR [eax],eax
  40dc2d:	add    BYTE PTR [edi+0x9],al
  40dc30:	add    BYTE PTR [eax],al
  40dc32:	inc    edi
  40dc33:	or     DWORD PTR [eax],eax
  40dc35:	add    BYTE PTR [edi+0x9],al
  40dc38:	add    BYTE PTR [eax],al
  40dc3a:	inc    edi
  40dc3b:	or     DWORD PTR [eax],eax
  40dc3d:	add    BYTE PTR [edi+0x9],al
  40dc40:	add    BYTE PTR [eax],al
  40dc42:	inc    edi
  40dc43:	or     DWORD PTR [eax],eax
  40dc45:	add    BYTE PTR [edi+0x9],al
  40dc48:	add    BYTE PTR [eax],al
  40dc4a:	inc    edi
  40dc4b:	or     DWORD PTR [eax],eax
  40dc4d:	add    BYTE PTR [edi+0x9],al
  40dc50:	add    BYTE PTR [eax],al
  40dc52:	inc    edi
  40dc53:	or     DWORD PTR [eax],eax
  40dc55:	add    BYTE PTR [edi+0x9],al
  40dc58:	add    BYTE PTR [eax],al
  40dc5a:	inc    edi
  40dc5b:	or     DWORD PTR [eax],eax
  40dc5d:	add    BYTE PTR [edi+0x9],al
  40dc60:	add    BYTE PTR [eax],al
  40dc62:	inc    edi
  40dc63:	or     DWORD PTR [eax],eax
  40dc65:	add    BYTE PTR [eax],al
  40dc67:	add    BYTE PTR [edi+0x9],al
  40dc6a:	add    BYTE PTR [eax],al
  40dc6c:	inc    edi
  40dc6d:	or     DWORD PTR [eax],eax
  40dc6f:	add    BYTE PTR [edi+0x9],al
  40dc72:	add    BYTE PTR [eax],al
  40dc74:	inc    edi
  40dc75:	or     DWORD PTR [eax],eax
  40dc77:	add    BYTE PTR [edi+0x9],al
  40dc7a:	add    BYTE PTR [eax],al
  40dc7c:	inc    edi
  40dc7d:	or     DWORD PTR [eax],eax
  40dc7f:	add    BYTE PTR [edi+0x9],al
  40dc82:	add    BYTE PTR [eax],al
  40dc84:	inc    edi
  40dc85:	or     DWORD PTR [eax],eax
  40dc87:	add    BYTE PTR [edi+0x9],al
  40dc8a:	add    BYTE PTR [eax],al
  40dc8c:	inc    edi
  40dc8d:	or     DWORD PTR [eax],eax
  40dc8f:	add    BYTE PTR [edi+0x9],al
  40dc92:	add    BYTE PTR [eax],al
  40dc94:	inc    edi
  40dc95:	or     DWORD PTR [eax],eax
  40dc97:	add    BYTE PTR [edi+0x9],al
  40dc9a:	add    BYTE PTR [eax],al
  40dc9c:	inc    edi
  40dc9d:	or     DWORD PTR [eax],eax
  40dc9f:	add    BYTE PTR [edi+0x9],al
  40dca2:	add    BYTE PTR [eax],al
  40dca4:	inc    edi
  40dca5:	or     DWORD PTR [eax],eax
  40dca7:	add    BYTE PTR [edi+0x9],al
  40dcaa:	add    BYTE PTR [eax],al
  40dcac:	inc    edi
  40dcad:	or     DWORD PTR [eax],eax
  40dcaf:	add    BYTE PTR [edi+0x9],al
  40dcb2:	add    BYTE PTR [eax],al
  40dcb4:	inc    edi
  40dcb5:	or     DWORD PTR [eax],eax
  40dcb7:	add    BYTE PTR [edi+0x9],al
  40dcba:	add    BYTE PTR [eax],al
  40dcbc:	inc    edi
  40dcbd:	or     DWORD PTR [eax],eax
  40dcbf:	add    BYTE PTR [edi+0x9],al
  40dcc2:	add    BYTE PTR [eax],al
  40dcc4:	inc    edi
  40dcc5:	or     DWORD PTR [eax],eax
  40dcc7:	add    BYTE PTR [edi+0x9],al
  40dcca:	add    BYTE PTR [eax],al
  40dccc:	add    BYTE PTR [eax],al
  40dcce:	inc    edi
  40dccf:	or     DWORD PTR [eax],eax
  40dcd1:	add    BYTE PTR [edi+0x9],al
  40dcd4:	add    BYTE PTR [eax],al
  40dcd6:	inc    edi
  40dcd7:	or     DWORD PTR [eax],eax
  40dcd9:	add    BYTE PTR [eax],al
  40dcdb:	push   ebp
  40dcdc:	add    DWORD PTR [eax],eax
  40dcde:	inc    edi
  40dcdf:	pop    esi
  40dce0:	inc    ecx
  40dce1:	add    BYTE PTR [eax],cl
  40dce3:	ins    BYTE PTR es:[edi],dx
  40dce4:	je     0x40dd36
  40dce6:	xor    eax,0x2b416366
  40dceb:	ins    DWORD PTR es:[edi],dx
  40dcec:	jb     0x40dd53
  40dcee:	adc    al,0x7a
  40dcf0:	add    BYTE PTR [eax],al
  40dcf2:	add    esp,DWORD PTR [esi+0x61]
  40dcf5:	fs sti 
  40dcf7:	pop    edi
  40dcf8:	bound  esi,QWORD PTR [edx-0x1a]
  40dcfb:	jp     0x40dd76
  40dcfd:	inc    ebp
  40dcfe:	inc    DWORD PTR [edi+0x0]
  40dd01:	add    BYTE PTR [ebx],al
  40dd03:	popaw  
  40dd05:	fs sti 
  40dd07:	pop    edi
  40dd08:	bound  esi,QWORD PTR [edx-0x1a]
  40dd0b:	jp     0x40dd86
  40dd0d:	inc    ebp
  40dd0e:	fistp  WORD PTR [ebp+0x0]
  40dd11:	add    BYTE PTR [eax],cl
  40dd13:	ins    BYTE PTR es:[edi],dx
  40dd14:	je     0x40dd63
  40dd16:	fsubr  DWORD PTR [ebp+esi*2+0x6c]
  40dd1a:	stos   BYTE PTR es:[edi],al
  40dd1b:	inc    ecx
  40dd1c:	popa   
  40dd1d:	outs   dx,BYTE PTR ds:[esi]
  40dd1e:	mov    ds:0x47416565,eax
  40dd23:	or     DWORD PTR [eax],eax
  40dd25:	add    BYTE PTR [ebx+edi*2+0x6c9b6165],al
  40dd2c:	inc    esi
  40dd2d:	imul   ebp,DWORD PTR [ebx-0x5cffbe94],0xa472747a
  40dd37:	push   0x9474174
  40dd3c:	add    BYTE PTR [eax],al
  40dd3e:	sub    BYTE PTR [esp+esi*2+0x57],0x0
  40dd43:	add    BYTE PTR [esi+0x67],bl
  40dd46:	outs   dx,DWORD PTR fs:[esi]
  40dd48:	jo     0x40ddc4
  40dd4a:	inc    esp
  40dd4b:	imul   edx,DWORD PTR [ebp+0x6c],0x7b687463
  40dd52:	jns    0x40dd95
  40dd54:	inc    edi
  40dd55:	or     DWORD PTR [eax],eax
  40dd57:	add    BYTE PTR [eax+0x304d746c],al
  40dd5d:	ins    DWORD PTR es:[edi],dx
  40dd5e:	jne    0x40ddcc
  40dd60:	and    al,BYTE PTR [ecx+0x61]
  40dd63:	outs   dx,BYTE PTR ds:[esi]
  40dd64:	sub    esp,DWORD PTR [ebp+0x65]
  40dd67:	push   edi
  40dd68:	inc    edi
  40dd69:	or     DWORD PTR [eax],eax
  40dd6b:	add    BYTE PTR [ebx+0xb],cl
  40dd6e:	inc    eax
  40dd6f:	add    BYTE PTR [ebx],dh
  40dd71:	or     eax,DWORD PTR [eax+0x0]
  40dd74:	imul   ecx,DWORD PTR [ebx],0x40
  40dd77:	add    BYTE PTR [ebx+0xb],dl
  40dd7a:	inc    eax
  40dd7b:	add    BYTE PTR [edi],cl
  40dd7d:	or     eax,DWORD PTR [eax+0x0]
  40dd80:	adc    ecx,DWORD PTR [ebx]
  40dd82:	inc    eax
  40dd83:	add    bh,ah
  40dd85:	or     al,BYTE PTR [eax+0x0]
  40dd88:	out    dx,eax
  40dd89:	or     al,BYTE PTR [eax+0x0]
  40dd8c:	or     BYTE PTR [esp+esi*2+0x50],ch
  40dd90:	aad    0x65
  40dd92:	arpl   WORD PTR [ecx-0x15],ax
  40dd95:	ins    BYTE PTR es:[edi],dx
  40dd96:	jb     0x40ddfd
  40dd98:	aam    0x79
  40dd9a:	add    BYTE PTR [eax],al
  40dd9c:	xchg   ebx,eax
  40dd9d:	fs popa 
  40dd9f:	mov    esp,DWORD PTR fs:[edx+0x62]
  40dda3:	jb     0x40dd4b
  40dda5:	ja     0x40de20
  40dda7:	inc    ebp
  40dda8:	add    BYTE PTR [eax],al
  40ddaa:	scas   eax,DWORD PTR es:[edi]
  40ddab:	dec    edx
  40ddac:	add    BYTE PTR [eax],al
  40ddae:	lods   al,BYTE PTR ds:[esi]
  40ddaf:	outs   dx,BYTE PTR ds:[esi]
  40ddb0:	jb     0x40de20
  40ddb2:	mov    ds:0x61323365,al
  40ddb7:	ins    DWORD PTR es:[edi],dx
  40ddb8:	ins    BYTE PTR es:[edi],dx
  40ddb9:	ins    BYTE PTR es:[edi],dx
  40ddba:	inc    edi
  40ddbb:	or     DWORD PTR [eax],eax
  40ddbd:	add    BYTE PTR [edx+0x78],dh
  40ddc0:	jbe    0x40de25
  40ddc2:	jne    0x40de41
  40ddc4:	cs arpl WORD PTR fs:[ebp+0x0],sp
  40ddc9:	add    BYTE PTR [edx+0x6e],bl
  40ddcc:	ins    DWORD PTR es:[edi],dx
  40ddcd:	jae    0x40de39
  40ddcf:	jge    0x40ddd1
  40ddd1:	add    BYTE PTR [edx+0x78],ch
  40ddd4:	jbe    0x40de39
  40ddd6:	push   ebp
  40ddd7:	jge    0x40de07
  40ddd9:	fs pop ebx
  40dddb:	add    BYTE PTR gs:[eax],al
  40ddde:	xor    ch,BYTE PTR [esi+0x6d]
  40dde1:	arpl   WORD PTR [edi],si
  40dde3:	jb     0x40dde5
  40dde5:	add    BYTE PTR [ecx],bl
  40dde7:	bound  esi,QWORD PTR [edx+0x74]
  40ddea:	xor    ch,BYTE PTR [edx+0x6c]
  40dded:	inc    ecx
  40ddee:	xor    esp,DWORD PTR [ebp+0x6f]
  40ddf1:	arpl   WORD PTR [edi+0x9],ax
  40ddf4:	add    BYTE PTR [eax],al
  40ddf6:	stc    
  40ddf7:	popa   
  40ddf8:	jb     0x40de6e
  40ddfa:	adc    ch,BYTE PTR [edx+0x6c]
  40ddfd:	inc    ecx
  40ddfe:	rep outs dx,DWORD PTR fs:[esi]
  40de01:	arpl   WORD PTR [edi+0x9],ax
  40de04:	add    BYTE PTR [eax],al
  40de06:	sbb    ah,BYTE PTR [ebx+0x6d]
  40de09:	popa   
  40de0a:	neg    DWORD PTR [edx+0x69]
  40de0d:	add    BYTE PTR gs:[eax],al
  40de10:	fadd   DWORD PTR [ebx+0x66]
  40de13:	inc    esi
  40de14:	out    dx,al
  40de15:	fs gs add cl,bh
  40de19:	popa   
  40de1a:	jb     0x40de90
  40de1c:	shr    BYTE PTR [ecx+0x6c],cl
  40de1f:	push   eax
  40de20:	mov    ch,0x64
  40de22:	je     0x40de89
  40de24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de25:	jge    0x40de27
  40de27:	add    BYTE PTR [edi+0x6e],bh
  40de2a:	popa   
  40de2b:	jo     0x40ddb3
  40de2d:	gs ins BYTE PTR es:[edi],dx
  40de2f:	outs   dx,DWORD PTR ds:[esi]
  40de30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de31:	or     DWORD PTR [eax],eax
  40de33:	add    BYTE PTR [esi+ebp*2+0x65aa6e72],ch
  40de3a:	xor    esi,DWORD PTR [edx]
  40de3c:	pop    ecx
  40de3d:	ins    DWORD PTR es:[edi],dx
  40de3e:	ins    BYTE PTR es:[edi],dx
  40de3f:	ins    BYTE PTR es:[edi],dx
  40de40:	inc    edi
  40de41:	or     DWORD PTR [eax],eax
  40de43:	add    BYTE PTR [eax+0x7550746e],al
  40de49:	arpl   WORD PTR fs:[ebp+0x74],sp
  40de4d:	js     0x40de97
  40de4f:	gs data16 jns 0x40de53
  40de53:	add    BYTE PTR [edi+0x9],al
  40de56:	inc    esp
  40de57:	add    DWORD PTR [edi-0x53],eax
  40de5a:	pop    ecx
  40de5b:	nop
  40de5c:	inc    edi
  40de5d:	fild   WORD PTR [ebx]
  40de5f:	add    BYTE PTR [edi-0x1a],al
  40de62:	add    eax,DWORD PTR [eax]
  40de64:	inc    edi
  40de65:	repz sti 
  40de67:	add    BYTE PTR [edi+0x3a],al
  40de6a:	add    eax,DWORD PTR [eax]
  40de6c:	inc    edi
  40de6d:	loop   0x40de72
  40de6f:	add    BYTE PTR [edi+0x22],al
  40de72:	add    al,0x0
  40de74:	add    BYTE PTR [eax],al
  40de76:	inc    edi
  40de77:	loop   0x40de7c
  40de79:	add    BYTE PTR [edi-0x1e],al
  40de7c:	add    eax,DWORD PTR [eax]
  40de7e:	inc    edi
  40de7f:	loop   0x40de84
  40de81:	add    BYTE PTR [edi-0x1e],al
  40de84:	add    eax,DWORD PTR [eax]
  40de86:	inc    edi
  40de87:	loop   0x40de8c
  40de89:	add    BYTE PTR [edi-0x1e],al
  40de8c:	add    eax,DWORD PTR [eax]
  40de8e:	inc    edi
  40de8f:	loop   0x40de94
  40de91:	add    BYTE PTR [edi-0x1e],al
  40de94:	add    eax,DWORD PTR [eax]
  40de96:	inc    edi
  40de97:	bound  eax,QWORD PTR [eax+eax*1]
  40de9a:	inc    edi
  40de9b:	in     al,dx
  40de9c:	sbb    bh,BYTE PTR [edx+0x9afe239]
  40dea2:	adc    al,dl
  40dea4:	mov    ebx,0x25a58b01
  40dea9:	push   esp
  40deaa:	lahf   
  40deab:	or     DWORD PTR [edi+0x20],esi
  40deae:	mov    bh,0xee
  40deb0:	push   0x67
  40deb2:	xchg   ebp,eax
  40deb3:	shr    DWORD PTR [eax+0x20],0xa4
  40deb7:	shr    DWORD PTR [ecx+0x6e],0xa0
  40debb:	aam    0x23
  40debd:	bound  esp,QWORD PTR [edx+0x71757600]
  40dec3:	add    BYTE PTR [ebp+0x6e],ch
  40dec6:	daa    
  40dec7:	lods   al,BYTE PTR ds:[esi]
  40dec8:	dec    edx
  40dec9:	push   ebx
  40deca:	daa    
  40decb:	int    0x6a
  40decd:	fs (bad) 
  40ded0:	or     BYTE PTR ds:0x3cd094d,cl
  40ded6:	inc    edi
  40ded7:	or     ecx,ebp
  40ded9:	add    eax,DWORD PTR [eax]
  40dedb:	add    BYTE PTR [edi+0x9],al
  40dede:	mov    ecx,0x9d094740
  40dee3:	add    al,0x44
  40dee5:	or     ecx,esi
  40dee7:	int    0xec
  40dee9:	inc    edx
  40deea:	jmp    0xe94a25f2
  40deef:	add    eax,DWORD PTR [edi+0x9]
  40def2:	or     DWORD PTR [eax+edx*2],eax
  40def5:	or     dl,dh
  40def7:	add    al,0x45
  40def9:	aaa    
  40defa:	jmp    0xe94a26f8
  40deff:	dec    ebp
  40df00:	inc    edi
  40df01:	or     ecx,ebp
  40df03:	add    eax,DWORD PTR [edi+0x9]
  40df06:	push   ebp
  40df07:	in     eax,dx
  40df08:	inc    edi
  40df09:	or     ecx,ebp
  40df0b:	adc    eax,DWORD PTR [edi+0x9]
  40df0e:	jmp    0xe94a2526
  40df13:	add    eax,DWORD PTR [edi]
  40df15:	or     ecx,ebp
  40df17:	adc    eax,DWORD PTR [edi+0x9]
  40df1a:	jmp    0xed4a2624
  40df1f:	add    eax,DWORD PTR [edi+0x9]
  40df22:	jmp    0xed4a262a
  40df27:	add    eax,DWORD PTR [edi+0x9]
  40df2a:	jmp    0xe94a2632
  40df2f:	jae    0x40df77
  40df31:	or     ecx,ebp
  40df33:	add    eax,0x48dd0947
  40df38:	inc    esi
  40df39:	or     ebx,ebp
  40df3b:	add    eax,DWORD PTR [edi+0x9]
  40df3e:	jmp    0x3740df46
  40df43:	or     ecx,ebp
  40df45:	adc    eax,DWORD PTR [edi+0x9]
  40df48:	jmp    0xe94a3650
  40df4d:	adc    eax,DWORD PTR [edi+0x9]
  40df50:	add    cl,ch
  40df52:	inc    esp
  40df53:	or     DWORD PTR [eax],eax
  40df55:	fld    DWORD PTR [ecx+ecx*1+0x0]
  40df59:	jmp    0xe940e8a2
  40df5e:	inc    esp
  40df5f:	or     DWORD PTR [eax],eax
  40df61:	xor    eax,0x21000876
  40df66:	inc    esp
  40df67:	or     DWORD PTR [eax],eax
  40df69:	jmp    0xe940e8b2
  40df6e:	inc    esp
  40df6f:	or     DWORD PTR [eax],eax
  40df71:	jmp    0xe940e8ba
  40df76:	inc    esp
  40df77:	or     DWORD PTR [eax],eax
  40df79:	jmp    0xe940e8c2
  40df7e:	inc    esp
  40df7f:	or     DWORD PTR [eax],eax
  40df81:	jmp    0xe940e8ca
  40df86:	inc    esp
  40df87:	or     DWORD PTR [eax],eax
  40df89:	jmp    0xe940e8d2
  40df8e:	inc    esp
  40df8f:	or     DWORD PTR [eax],eax
  40df91:	jmp    0xe940e8da
  40df96:	inc    esp
  40df97:	or     DWORD PTR [eax],eax
  40df99:	jmp    0xe940e8e2
  40df9e:	inc    esp
  40df9f:	or     DWORD PTR [eax],eax
  40dfa1:	jmp    0xe940e8ea
  40dfa6:	add    BYTE PTR [eax],al
  40dfa8:	inc    esp
  40dfa9:	or     DWORD PTR [eax],eax
  40dfab:	jmp    0xe940e8f4
  40dfb0:	inc    esp
  40dfb1:	or     DWORD PTR [eax],eax
  40dfb3:	jmp    0xe940e8fc
  40dfb8:	inc    esp
  40dfb9:	or     DWORD PTR [eax],eax
  40dfbb:	sbb    DWORD PTR [edx+ecx*1+0x0],edi
  40dfbf:	ins    DWORD PTR es:[edi],dx
  40dfc0:	inc    esp
  40dfc1:	or     DWORD PTR [eax],eax
  40dfc3:	jmp    0xe940e90c
  40dfc8:	inc    esp
  40dfc9:	or     DWORD PTR [eax],eax
  40dfcb:	add    dh,ch
  40dfcd:	or     al,0x0
  40dfcf:	add    dh,bl
  40dfd1:	or     al,0x0
  40dfd3:	add    dh,bl
  40dfd5:	or     al,0x0
  40dfd7:	add    dh,ch
  40dfd9:	or     al,0x0
  40dfdb:	add    al,dh
  40dfdd:	pusha  
  40dfde:	gs js  0x40df9b
  40dfe1:	or     al,0x0
  40dfe3:	add    BYTE PTR [ebp-0x8],ah
  40dfe6:	add    BYTE PTR [eax],al
  40dfe8:	scas   al,BYTE PTR es:[edi]
  40dfe9:	sbb    al,0x0
  40dfeb:	add    BYTE PTR [esi-0x61ffff0e],ch
  40dff1:	push   es
  40dff2:	add    BYTE PTR [eax],al
  40dff4:	sahf   
  40dff5:	or     al,0x0
  40dff7:	add    BYTE PTR [esi-0x51fffff4],ch
  40dffd:	or     al,0x0
  40dfff:	add    BYTE PTR [esi],bh
  40e001:	add    eax,0x77406000
  40e006:	fs popa 
  40e008:	sbb    ch,BYTE PTR [eax+eax*1+0x0]
  40e00c:	add    BYTE PTR [eax],al
  40e00e:	outs   dx,BYTE PTR ds:[esi]
  40e00f:	or     eax,DWORD PTR [eax]
  40e011:	add    BYTE PTR [esi+0x1c],bl
  40e014:	add    DWORD PTR [eax],eax
  40e016:	pop    esi
  40e017:	push   es
  40e018:	add    BYTE PTR [eax],al
  40e01a:	outs   dx,BYTE PTR ds:[esi]
  40e01b:	or     al,0x1
  40e01d:	add    BYTE PTR [esi+0xc],ch
  40e020:	add    BYTE PTR [eax],al
  40e022:	pop    esi
  40e023:	or     al,0x0
  40e025:	add    BYTE PTR [esi+0xc],bl
  40e028:	add    BYTE PTR [eax],al
  40e02a:	outs   dx,BYTE PTR ds:[esi]
  40e02b:	add    eax,0x50104000
  40e030:	popa   
  40e031:	je     0x40e072
  40e033:	add    eax,0x4a360000
  40e038:	add    BYTE PTR [eax],al
  40e03a:	cs sub al,0x1
  40e03d:	add    BYTE PTR [esi],ch
  40e03f:	inc    esi
  40e040:	add    BYTE PTR [eax],al
  40e042:	push   ds
  40e043:	push   es
  40e044:	add    DWORD PTR [eax],eax
  40e046:	inc    edi
  40e047:	loop   0x40e04c
  40e049:	add    BYTE PTR [edi-0x1e],al
  40e04c:	add    eax,DWORD PTR [eax]
  40e04e:	inc    edi
  40e04f:	loop   0x40e054
  40e051:	add    BYTE PTR [edi-0x5e],al
  40e054:	add    eax,DWORD PTR [eax]
  40e056:	pop    es
  40e057:	loop   0x40e05c
  40e059:	add    BYTE PTR [edi-0x1e],al
  40e05c:	add    eax,DWORD PTR [eax]
  40e05e:	inc    edi
  40e05f:	loop   0x40e064
  40e061:	add    BYTE PTR [edi-0x1e],al
  40e064:	add    eax,DWORD PTR [eax]
  40e066:	inc    edi
  40e067:	lods   eax,DWORD PTR ds:[esi]
  40e068:	mov    esp,gs
  40e06a:	das    
  40e06b:	int    0x13
  40e06d:	inc    eax
  40e06e:	inc    edi
  40e06f:	or     dh,BYTE PTR [ebp+0x1]
  40e072:	add    BYTE PTR [eax],al
  40e074:	test   dh,ch
  40e076:	div    DWORD PTR [ebp+0x3f]
  40e079:	mov    WORD PTR [edx],es
  40e07b:	push   0x47
  40e07d:	or     bh,BYTE PTR [edx+ebx*8-0x3d331db9]
  40e084:	dec    ebx
  40e085:	loop   0x40e0d7
  40e087:	mov    ebx,DWORD PTR [ebx+0x7102a49]
  40e08d:	loop   0x40e08a
  40e08f:	jb     0x40e0d7
  40e091:	mov    ds:0xf9f283f7,eax
  40e096:	add    esi,DWORD PTR [esp+edi*1+0x6b]
  40e09a:	push   ecx
  40e09b:	or     ah,cl
  40e09d:	shl    esi,cl
  40e09f:	jne    0x40e0f0
  40e0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0a2:	push   edx
  40e0a3:	or     BYTE PTR [esi-0x5d],bh
  40e0a6:	add    BYTE PTR [eax],al
  40e0a8:	repnz push 0xffffffe8
  40e0ab:	or     DWORD PTR [ebx],0xffffff99
  40e0ae:	ins    BYTE PTR es:[edi],dx
  40e0af:	dec    edi
  40e0b0:	push   edi
  40e0b1:	and    BYTE PTR [eax+edi*8],al
  40e0b4:	mov    ch,0xe1
  40e0b6:	ret    0x28ff
  40e0b9:	out    dx,al
  40e0ba:	pop    es
  40e0bb:	(bad)  
  40e0bf:	inc    ebp
  40e0c0:	sbb    ecx,DWORD PTR [edx]
  40e0c2:	jmp    0x724a27ca
  40e0c7:	push   ecx
  40e0c8:	aas    
  40e0c9:	cmp    bl,0x69
  40e0cc:	inc    edi
  40e0cd:	out    dx,al
  40e0ce:	aam    0x13
  40e0d0:	clc    
  40e0d1:	je     0x40e118
  40e0d3:	idiv   DWORD PTR [edx-0xf]
  40e0d6:	ds jno 0x40e0d9
  40e0d9:	add    BYTE PTR [edi],bh
  40e0db:	out    dx,al
  40e0dc:	fwait
  40e0dd:	femms  
  40e0df:	int3   
  40e0e0:	fld    QWORD PTR [ebx]
  40e0e2:	jb     0x40e066
  40e0e4:	adc    eax,0x91f20b83
  40e0e9:	jge    0x40e122
  40e0eb:	dec    ecx
  40e0ec:	jmp    0x2a4916ec
  40e0f1:	test   DWORD PTR [eax+0x47040144],0x2bee909
  40e0fb:	in     eax,dx
  40e0fc:	jmp    0x624a2804
  40e101:	push   ecx
  40e102:	dec    edi
  40e103:	cmp    bl,0x88
  40e106:	or     dh,cl
  40e108:	cmp    DWORD PTR [edx+0x45],ebp
  40e10b:	out    dx,al
  40e10c:	pop    esp
  40e10d:	clc    
  40e10e:	xor    BYTE PTR [ecx+edx*8-0xa],0xf2
  40e113:	add    dh,al
  40e115:	push   ecx
  40e116:	pop    ebx
  40e117:	and    BYTE PTR [esp+edi*8],0x7e
  40e11b:	retf   
  40e11c:	in     eax,dx
  40e11d:	add    edi,edx
  40e11f:	cmp    DWORD PTR [ebp+0x11f18382],0xe94937c2
  40e129:	sti    
  40e12a:	aad    0x7
  40e12c:	stos   BYTE PTR es:[edi],al
  40e12d:	test   BYTE PTR [eax],0x44
  40e130:	xchg   ecx,eax
  40e131:	add    eax,DWORD PTR [edi+0x9]
  40e134:	jmp    0xea2e6bf7
  40e139:	add    eax,DWORD PTR [edi+0x9]
  40e13c:	add    BYTE PTR [edx+0x0],ah
  40e13f:	add    BYTE PTR [edi+0x1],dh
  40e142:	mov    ebx,ebx
  40e144:	iret   
  40e145:	inc    ebx
  40e146:	clc    
  40e147:	mov    ecx,0xd4ff089e
  40e14c:	adc    dh,ch
  40e14e:	jne    0x40e1a1
  40e150:	stc    
  40e151:	jae    0x40e15b
  40e153:	dec    esi
  40e154:	xchg   esi,eax
  40e155:	adc    eax,0xe13cbcff
  40e15a:	xchg   DWORD PTR [esi],edi
  40e15c:	icebp  
  40e15d:	in     eax,dx
  40e15e:	push   eax
  40e15f:	bound  esi,QWORD PTR [edi+0x1]
  40e162:	mov    ebx,ebx
  40e164:	outs   dx,BYTE PTR ds:[esi]
  40e165:	or     DWORD PTR [edx-0x17],ebp
  40e168:	fnstenv [ebx-0x4]
  40e16b:	push   ds
  40e16c:	push   edi
  40e16d:	icebp  
  40e16e:	call   FWORD PTR [esp+ecx*2+0x1cf552ee]
  40e175:	adc    BYTE PTR [ebp+0x1],0x45
  40e179:	push   esp
  40e17a:	or     al,0xc2
  40e17c:	xchg   esp,eax
  40e17d:	jbe    0x40e185
  40e17f:	ret    0xbf84
  40e182:	ret    0x44e1
  40e185:	mov    cl,0x1
  40e187:	jmp    0xac09ead0
  40e18c:	cmp    ecx,DWORD PTR [ecx]
  40e18e:	push   ebp
  40e18f:	bound  ebp,QWORD PTR [edi-0x77]
  40e192:	(bad)  
  40e193:	int    0xeb
  40e195:	sbb    eax,0xf14b2911
  40e19a:	jb     0x40e184
  40e19c:	xchg   ebp,ebp
  40e19e:	(bad)  
  40e19f:	cmp    al,0x3b
  40e1a1:	out    dx,al
  40e1a2:	jne    0x40e185
  40e1a4:	add    BYTE PTR [eax],al
  40e1a6:	ins    BYTE PTR es:[edi],dx
  40e1a7:	jo     0x40e1a8
  40e1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1aa:	pop    edx
  40e1ab:	add    eax,eax
  40e1ad:	adc    al,0x47
  40e1af:	rol    dl,0xe5
  40e1b2:	inc    esp
  40e1b3:	adc    BYTE PTR [ebp-0x1f],0xcf
  40e1b7:	pop    ss
  40e1b8:	lea    eax,[eax]
  40e1ba:	arpl   cx,si
  40e1bc:	push   eax
  40e1bd:	push   DWORD PTR [ebx]
  40e1bf:	sbb    edi,edi
  40e1c1:	jne    0x40e1ed
  40e1c3:	div    BYTE PTR [ebp+0x8]
  40e1c6:	test   eax,0x5e850c57
  40e1cb:	ins    DWORD PTR es:[edi],dx
  40e1cc:	adc    ecx,DWORD PTR [ebx+0x453bf4e3]
  40e1d2:	(bad)  
  40e1d3:	pop    ebx
  40e1d4:	pop    es
  40e1d5:	mov    eax,0x8ef
  40e1da:	xchg   ebp,eax
  40e1db:	jmp    0x40e207
  40e1dd:	rcl    BYTE PTR [ebp+0x27c02b07],0xc7
  40e1e4:	or     al,0x0
  40e1e6:	mov    bl,0x81
  40e1e8:	in     al,dx
  40e1e9:	and    DWORD PTR [edx],0xfffffff1
  40e1ec:	push   esi
  40e1ed:	push   0x401863
  40e1f2:	push   esi
  40e1f3:	ja     0x40e1f6
  40e1f5:	ret    
  40e1f6:	dec    ecx
  40e1f7:	mov    bh,BYTE PTR [ebp+0xc]
  40e1fa:	sahf   
  40e1fb:	pop    esp
  40e1fc:	push   es
  40e1fd:	sub    DWORD PTR [ebx],0x0
  40e200:	add    BYTE PTR [ebp-0x4f],dh
  40e203:	and    eax,eax
  40e205:	pop    esi
  40e206:	addr16 (bad) 
  40e208:	or     al,0x0
  40e20a:	add    BYTE PTR [eax],al
  40e20c:	sbb    eax,0xf3001073
  40e211:	(bad)  
  40e212:	mov    bh,0x1
  40e214:	outs   dx,BYTE PTR ds:[esi]
  40e215:	or     BYTE PTR [eax],al
  40e217:	pop    esi
  40e218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e219:	retf   0xc
  40e21c:	cmc    
  40e21d:	pop    edx
  40e21e:	or     al,0xc7
  40e220:	and    esi,ecx
  40e222:	add    BYTE PTR [eax],al
  40e224:	outs   dx,BYTE PTR ds:[esi]
  40e225:	or     BYTE PTR [ebx+0x12816655],cl
  40e22b:	lea    esp,[ebx]
  40e22d:	icebp  
  40e22e:	push   eax
  40e22f:	push   DWORD PTR [ebx]
  40e231:	adc    eax,0xd47ff56
  40e236:	or     al,0xff
  40e238:	xchg   ebp,eax
  40e239:	bnd jle 0x40e1fc
  40e23c:	scas   al,BYTE PTR es:[edi]
  40e23d:	fld    TBYTE PTR [eax]
  40e23f:	ror    BYTE PTR [ecx+0x470cc1b9],0x5f
  40e246:	jbe    0x40e244
  40e248:	inc    edi
  40e249:	cmc    
  40e24a:	cld    
  40e24b:	sub    al,BYTE PTR [edi]
  40e24d:	(bad)  
  40e24e:	retf   0x3bc2
  40e251:	loop   0x40e1db
  40e253:	inc    ebp
  40e254:	add    ebx,edi
  40e256:	repz sub DWORD PTR [edx-0x503b910e],eax
  40e25d:	loopne 0x40e262
  40e25f:	add    BYTE PTR [edi-0x74],al
  40e262:	retf   0x53c2
  40e265:	loop   0x40e2b5
  40e267:	mov    ebp,ebx
  40e269:	pusha  
  40e26a:	mov    edi,0xf422e0f8
  40e26f:	push   0xf0430000
  40e274:	inc    ebx
  40e275:	add    BYTE PTR [edi-0x473cfd71],bh
  40e27b:	xchg   DWORD PTR [ebx],eax
  40e27d:	push   0x47
  40e27f:	cwde   
  40e280:	add    BYTE PTR [edx+0x47],ch
  40e283:	cwde   
  40e284:	add    BYTE PTR [eax+0x47],ch
  40e287:	loop   0x40e28c
  40e289:	sbb    BYTE PTR [eax-0x3917f48c],0xaa
  40e290:	add    al,0x0
  40e292:	mov    esi,0xfa40f024
  40e297:	fnstsw WORD PTR [edx+eax*8+0x5de24f]
  40e29e:	ret    0xec1c
  40e2a1:	push   eax
  40e2a2:	(bad)  
  40e2a4:	adc    eax,DWORD PTR [eax]
  40e2a6:	inc    edi
  40e2a7:	gs mov eax,edi
  40e2aa:	push   0x5050f39a
  40e2af:	or     BYTE PTR [eax+esi*8],bl
  40e2b2:	pop    edi
  40e2b3:	addr16 mov dh,0x4
  40e2b6:	inc    edi
  40e2b7:	(bad)  
  40e2b8:	test   al,0x79
  40e2ba:	dec    ecx
  40e2bb:	jmp    0x49e:0x4d1ff014
  40e2c2:	inc    edi
  40e2c3:	push   ds
  40e2c4:	test   eax,0xe90205bd
  40e2c9:	repnz xchg edx,eax
  40e2cb:	icebp  
  40e2cc:	pop    esp
  40e2cd:	mov    DWORD PTR [edi],ecx
  40e2cf:	(bad)  [esi-0xd]
  40e2d2:	ja     0x40e2be
  40e2d4:	aam    0xff
  40e2d6:	add    BYTE PTR [eax],al
  40e2d8:	call   0xf93438f5
  40e2dd:	xchg   ah,cl
  40e2df:	jmp    0x40e328
  40e2e1:	je     0x40e268
  40e2e3:	repz jb 0x40e2d3
  40e2e6:	push   ecx
  40e2e7:	cmp    edi,eax
  40e2e9:	or     ecx,ebp
  40e2eb:	stos   DWORD PTR es:[edi],eax
  40e2ec:	inc    esi
  40e2ed:	or     ecx,ebp
  40e2ef:	add    edi,esi
  40e2f1:	(bad)  
  40e2f2:	icebp  
  40e2f3:	add    esi,DWORD PTR [edx+0x7e]
  40e2f6:	or     eax,0xa917c85c
  40e2fb:	add    edi,DWORD PTR [edi-0x4f391789]
  40e301:	pop    edi
  40e302:	jmp    0x40e361
  40e304:	inc    edi
  40e305:	jmp    0xf2f4:0x9da8fb74
  40e30c:	cwde   
  40e30d:	shr    BYTE PTR [ebx],0x8
  40e310:	inc    edi
  40e311:	push   esp
  40e312:	jb     0x40e2f3
  40e314:	pop    ds
  40e315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e316:	sti    
  40e317:	inc    ebx
  40e318:	inc    edi
  40e319:	icebp  
  40e31a:	pop    ebx
  40e31b:	add    eax,0x443ea84
  40e320:	fisttp QWORD PTR [eax]
  40e322:	(bad)  
  40e323:	js     0x40e364
  40e325:	loope  0x40e395
  40e327:	lock pusha 
  40e329:	jmp    0x1400:0x582a000
  40e330:	rcr    ah,1
  40e332:	sub    DWORD PTR [ebp-0x43b9ea4],0xffffff84
  40e339:	or     eax,edi
  40e33b:	sbb    eax,DWORD PTR [eax]
  40e33d:	add    BYTE PTR [edx-0x3a],al
  40e340:	dec    DWORD PTR [esi+0x2c8efdaf]
  40e346:	sbb    eax,edx
  40e348:	inc    ebp
  40e349:	jge    0x40e38f
  40e34b:	or     DWORD PTR [eax],eax
  40e34d:	jmp    0xf53feccc
  40e352:	adc    bl,ch
  40e354:	jne    0x40e347
  40e356:	in     al,dx
  40e357:	addr16 std 
  40e359:	pop    esi
  40e35a:	cmc    
  40e35b:	jge    0x40e3b2
  40e35d:	loope  0x40e3d8
  40e35f:	pop    ss
  40e360:	call   esp
  40e362:	loopne 0x40e34d
  40e364:	jne    0x40e3a7
  40e366:	cmc    
  40e367:	jae    0x40e371
  40e369:	ds jp  0x40e37d
  40e36c:	leave  
  40e36d:	sub    ebx,esp
  40e36f:	jmp    0x613145c8
  40e374:	add    dl,bh
  40e376:	test   BYTE PTR [ecx],cl
  40e378:	clc    
  40e379:	fwait
  40e37a:	dec    ebx
  40e37b:	(bad)  
  40e37c:	inc    DWORD PTR [ebx-0x1e8a15bc]
  40e382:	mov    WORD PTR [esi-0x404af901],ds
  40e388:	ret    0x44e5
  40e38b:	push   esp
  40e38c:	mov    eax,DWORD PTR ds:0x6a145419
  40e392:	bound  ecx,QWORD PTR [ecx]
  40e394:	jne    0x40e383
  40e396:	int    0xc6
  40e398:	adc    cl,ch
  40e39a:	ja     0x40e40f
  40e39c:	adc    dh,dl
  40e39e:	lock cld 
  40e3a0:	(bad)  
  40e3a1:	push   esp
  40e3a2:	add    BYTE PTR [eax],al
  40e3a4:	jae    0x40e387
  40e3a6:	hlt    
  40e3a7:	add    BYTE PTR [ebx+0x3b8bfff7],al
  40e3ad:	adc    DWORD PTR [ecx],esp
  40e3af:	add    ah,BYTE PTR [edi+0x3b0010c2]
  40e3b5:	ins    BYTE PTR es:[edi],dx
  40e3b6:	in     al,dx
  40e3b7:	sbb    DWORD PTR [edx+0x3275fff8],0x47
  40e3be:	add    al,0x8d
  40e3c0:	imul   ebx,ecx,0x50
  40e3c3:	call   FWORD PTR [ebx-0x1b]
  40e3c6:	out    0xc3,eax
  40e3c8:	rcr    edx,0xff
  40e3cb:	mov    ebp,DWORD PTR [ebx+0x9]
  40e3ce:	cmp    DWORD PTR [eax],0x2e
  40e3d1:	popa   
  40e3d2:	pop    es
  40e3d3:	mov    ebp,DWORD PTR [ebx-0x27]
  40e3d6:	bswap  eax
  40e3d8:	jne    0x40e3e9
  40e3da:	sub    eax,eax
  40e3dc:	aaa    
  40e3dd:	iret   
  40e3de:	or     BYTE PTR [eax],al
  40e3e0:	mov    ebx,0x2a83ec65
  40e3e5:	fcos   
  40e3e7:	jne    0x40e3db
  40e3e9:	inc    esi
  40e3ea:	add    cl,BYTE PTR [ebp-0xaf2555]
  40e3f0:	fwait
  40e3f1:	in     al,0xe7
  40e3f3:	xchg   edi,eax
  40e3f4:	and    edx,ebx
  40e3f6:	dec    DWORD PTR [ebx+0x3882e89b]
  40e3fc:	scas   al,BYTE PTR es:[edi]
  40e3fd:	pusha  
  40e3fe:	or     BYTE PTR [edi],cl
  40e400:	sbb    DWORD PTR [eax-0x2],edx
  40e403:	xchg   BYTE PTR [edx-0x3a],ch
  40e406:	add    ch,BYTE PTR [ebx]
  40e408:	add    BYTE PTR [eax],al
  40e40a:	pop    esi
  40e40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e40c:	ret    0xae08
  40e40f:	aas    
  40e410:	mov    ebp,esp
  40e412:	sub    eax,0x1bfffcd1
  40e417:	call   0x4f53e585
  40e41c:	call   DWORD PTR [eax-0x5f]
  40e41f:	pop    edi
  40e420:	or     al,ch
  40e422:	inc    edi
  40e423:	dec    esp
  40e424:	icebp  
  40e425:	push   DWORD PTR [eax+0x6b]
  40e428:	inc    esi
  40e429:	or     al,0xc4
  40e42b:	or     al,BYTE PTR [esp+esi*2]
  40e42e:	dec    ecx
  40e42f:	idiv   DWORD PTR [ecx+0x5cb5845]
  40e435:	sub    eax,DWORD PTR [edi+0x4708c5a9]
  40e43b:	and    eax,0x1cccec7d
  40e440:	adc    al,0x83
  40e442:	jge    0x40e436
  40e444:	jbe    0x40e44a
  40e446:	(bad)  
  40e447:	mov    bl,0xff
  40e449:	jmp    FWORD PTR [ecx]
  40e44b:	in     eax,0xff
  40e44d:	(bad)  
  40e44e:	call   0xf05f:0x1be0dbda
  40e455:	or     eax,DWORD PTR [edi]
  40e457:	(bad)  
  40e459:	mov    dh,BYTE PTR [edx-0x1e]
  40e45c:	enter  0x4702,0xf2
  40e460:	add    eax,DWORD PTR [eax]
  40e462:	in     al,dx
  40e463:	in     al,dx
  40e464:	pop    ebp
  40e465:	add    eax,esi
  40e467:	mov    esp,0xda72feff
  40e46c:	fist   DWORD PTR [ecx+0x0]
  40e46f:	add    bl,ah
  40e471:	es lock leave 
  40e474:	add    eax,0xbc5503ee
  40e479:	and    eax,0xa7cbc484
  40e47e:	jl     0x40e4f5
  40e480:	push   ebx
  40e481:	jl     0x40e486
  40e483:	lea    eax,[edx]
  40e485:	(bad)  
  40e486:	push   edx
  40e487:	(bad)  
  40e488:	cmp    ah,dl
  40e48a:	pop    ecx
  40e48b:	push   DWORD PTR [edx]
  40e48d:	fcmovu st,st(3)
  40e48f:	mov    al,ds:0xb03f17a
  40e494:	xchg   DWORD PTR [ebp+0x9],esp
  40e497:	adc    DWORD PTR [edx],0xfffffff6
  40e49a:	add    dh,BYTE PTR [ebp+0x40]
  40e49d:	or     DWORD PTR [edx],edx
  40e49f:	les    esp,FWORD PTR [ecx]
  40e4a1:	shr    BYTE PTR [ebx+0x2c944700],cl
  40e4a7:	lock inc esp
  40e4a9:	fld    DWORD PTR [eax]
  40e4ab:	dec    ecx
  40e4ac:	push   edi
  40e4ad:	pop    esi
  40e4ae:	call   0xf903:0xe90946ac
  40e4b5:	shr    DWORD PTR [ebx+0x623e4700],1
  40e4bb:	loopne 0x40e483
  40e4bd:	int3   
  40e4be:	and    edi,ebp
  40e4c0:	inc    eax
  40e4c1:	out    0x3a,eax
  40e4c3:	sbb    ebx,DWORD PTR [esp+esi*2]
  40e4c6:	jmp    0xebb42c24
  40e4cb:	pop    ecx
  40e4cc:	inc    edi
  40e4cd:	jae    0x40e4b9
  40e4cf:	pop    ebx
  40e4d0:	inc    edi
  40e4d1:	or     ecx,ebp
  40e4d3:	ret    
  40e4d4:	add    BYTE PTR [eax],al
  40e4d6:	sbb    BYTE PTR [ebp-0x1b],bl
  40e4d9:	fisttp DWORD PTR [ecx-0x41fc1644]
  40e4df:	dec    esp
  40e4e0:	gs inc esp
  40e4e2:	jnp    0x40e51e
  40e4e4:	pop    esi
  40e4e5:	jns    0x40e536
  40e4e7:	icebp  
  40e4e8:	sbb    ch,dh
  40e4ea:	lock out 0x26,al
  40e4ed:	dec    ecx
  40e4ee:	out    dx,eax
  40e4ef:	or     ecx,ebp
  40e4f1:	add    eax,DWORD PTR [edi-0x6e]
  40e4f4:	xchg   esp,eax
  40e4f5:	sti    
  40e4f6:	int    0xfb
  40e4f8:	arpl   WORD PTR [ecx-0x31],cx
  40e4fb:	cmp    ecx,eax
  40e4fd:	add    DWORD PTR [edi+0x9],0xffffffe9
  40e501:	or     dl,0x61
  40e504:	push   ds
  40e505:	out    dx,eax
  40e506:	mov    eax,0x3f791639
  40e50b:	out    0xbb,al
  40e50d:	inc    ebp
  40e50f:	add    DWORD PTR fs:[edx+ebx*1],eax
  40e513:	or     ch,BYTE PTR [edx+0xe63fda]
  40e519:	jl     0x40e4b7
  40e51b:	xchg   esp,eax
  40e51c:	test   DWORD PTR [ecx-0x67],esi
  40e51f:	out    0xff,al
  40e521:	cmp    DWORD PTR [eax+0x5c],esi
  40e524:	cld    
  40e525:	rcl    DWORD PTR [ebx],1
  40e527:	out    0xff,al
  40e529:	(bad)  
  40e52a:	ins    DWORD PTR es:[edi],dx
  40e52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e52c:	je     0x40e519
  40e52e:	lea    esp,[edi+edi*8-0x60ea8c4]
  40e535:	xchg   ebp,eax
  40e536:	inc    esp
  40e537:	or     DWORD PTR [ebx-0x2ffff56],ecx
  40e53d:	iret   
  40e53e:	ret    0x44e1
  40e541:	cmp    al,0x8b
  40e543:	xchg   ebp,eax
  40e544:	(bad)
  40e547:	sahf   
  40e548:	mov    edi,0x1d5be815
  40e54d:	out    0xff,al
  40e54f:	pusha  
  40e550:	jg     0x40e533
  40e552:	(bad)  
  40e553:	sub    al,0x17
  40e555:	or     DWORD PTR [eax],eax
  40e557:	jmp    0xe5b6cba0
  40e55c:	in     al,dx
  40e55d:	(bad)  
  40e55e:	std    
  40e55f:	outs   dx,BYTE PTR ds:[esi]
  40e560:	sbb    DWORD PTR [edx-0x4820aab],edx
  40e566:	imul   ebp,ecx,0xdcff099e
  40e56c:	loopne 0x40e553
  40e56e:	jne    0x40e5c1
  40e570:	fstp   DWORD PTR [ebx+0x8]
  40e573:	inc    esi
  40e574:	pop    edi
  40e575:	adc    eax,0xd0489bff
  40e57a:	ret    0x44e1
  40e57d:	cmp    al,0x8b
  40e57f:	cmp    eax,0x2ef8ccc5
  40e584:	psraw  mm0,QWORD PTR [eax]
  40e587:	jmp    0xad07eed0
  40e58c:	mov    al,ds:0x44e90008
  40e591:	xchg   edx,eax
  40e592:	push   ebp
  40e593:	add    BYTE PTR [esi-0x1c72ed9e],dl
  40e599:	icebp  
  40e59a:	push   eax
  40e59b:	push   0xffffff9f
  40e59d:	div    BYTE PTR [ebp-0x4]
  40e5a0:	add    BYTE PTR [eax],al
  40e5a2:	cdq    
  40e5a3:	pop    ebp
  40e5a4:	clc    
  40e5a5:	jmp    DWORD PTR [ebx]
  40e5a7:	in     eax,0xfe
  40e5a9:	push   edx
  40e5aa:	jb     0x40e60c
  40e5ac:	inc    ebp
  40e5ad:	clc    
  40e5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5af:	retf   0x4
  40e5b2:	xor    esp,DWORD PTR [eax-0x14]
  40e5b5:	push   0x6f
  40e5b7:	inc    bp
  40e5b9:	or     al,0x3e
  40e5bb:	hlt    
  40e5bc:	jne    0x40e5c6
  40e5be:	xchg   BYTE PTR [ebx],dh
  40e5c0:	cld    
  40e5c1:	call   FWORD PTR [ecx+0x2e08c2a1]
  40e5c7:	cmp    al,0x8b
  40e5c9:	in     al,dx
  40e5ca:	push   esp
  40e5cb:	adc    DWORD PTR [ebp-0xc6d5bb],ecx
  40e5d1:	jne    0x40e5f9
  40e5d3:	shr    DWORD PTR [edx],0xfc
  40e5d6:	leave  
  40e5d7:	test   cl,0xc2
  40e5da:	push   ss
  40e5db:	or     DWORD PTR [ebp-0x75],edx
  40e5de:	retf   0x7d8a
  40e5e1:	or     al,0x1e
  40e5e3:	pop    ebp
  40e5e4:	adc    al,0x83
  40e5e6:	jmp    0x40e5e0
  40e5e8:	push   DWORD PTR [ebx-0x18]
  40e5eb:	cmc    
  40e5ec:	jne    0x40e5fe
  40e5ee:	cdq    
  40e5ef:	pop    esp
  40e5f0:	or     al,0xff
  40e5f2:	adc    esp,ecx
  40e5f4:	out    0x9,eax
  40e5f6:	mov    dh,dh
  40e5f8:	dec    ecx
  40e5fa:	sub    al,0x9
  40e5fc:	add    BYTE PTR [ebp+0x65],dl
  40e5ff:	jmp    0xf62f5c03
  40e604:	jne    0x40e60e
  40e606:	add    BYTE PTR [eax],al
  40e608:	push   esi
  40e609:	cdq    
  40e60a:	(bad)  
  40e60b:	call   FWORD PTR [ecx-0x76]
  40e60e:	jge    0x40e620
  40e610:	inc    edi
  40e611:	bnd ja 0x40e628
  40e614:	les    edx,FWORD PTR [ebp-0x23eb0001]
  40e61a:	in     al,dx
  40e61b:	jne    0x40e654
  40e61d:	jecxz  0x40e695
  40e61f:	or     al,0x90
  40e621:	gs sti 
  40e623:	out    0xd0,eax
  40e625:	repz in al,dx
  40e627:	dec    DWORD PTR [esi+0x13ffffb0]
  40e62d:	push   edi
  40e62e:	fild   WORD PTR [ebx+0x7403edf2]
  40e634:	cmp    eax,0x6f0c76d3
  40e639:	fcmovbe st,st(7)
  40e63b:	add    BYTE PTR [edi-0x49],al
  40e63e:	add    DWORD PTR [ebx],ebp
  40e640:	xchg   DWORD PTR [edx],eax
  40e642:	in     eax,dx
  40e643:	jne    0x40e680
  40e645:	mov    bl,0x76
  40e647:	or     BYTE PTR [edi],ch
  40e649:	aas    
  40e64a:	in     al,dx
  40e64b:	(bad)  
  40e64c:	cmp    BYTE PTR [ecx+0x254708c1],bl
  40e652:	jns    0x40e640
  40e654:	les    edx,FWORD PTR [esp+edx*1]
  40e657:	call   FWORD PTR [edx+0x4b75ecdd]
  40e65d:	arpl   WORD PTR [esi+0x8],si
  40e660:	pop    ds
  40e661:	mov    bl,0xec
  40e663:	dec    DWORD PTR [eax]
  40e665:	xchg   ebp,edi
  40e667:	(bad)  
  40e668:	jp     0x40e64c
  40e66a:	in     al,dx
  40e66b:	jne    0x40e66d
  40e66d:	add    BYTE PTR [ebx+0x43],cl
  40e670:	jbe    0x40e67a
  40e672:	fbld   TBYTE PTR [esi-0x14]
  40e675:	(bad)  
  40e676:	call   0x474da7a3
  40e67b:	test   DWORD PTR [eax-0x14],edi
  40e67e:	fcomp  DWORD PTR [ebx+edi*8-0x13e42f19]
  40e685:	push   DWORD PTR [edi-0x38]
  40e688:	sti    
  40e689:	addr16 addr16 or ecx,edx
  40e68d:	inc    edx
  40e68e:	inc    edi
  40e68f:	in     al,0x94
  40e691:	sti    
  40e692:	test   al,0x4f
  40e694:	push   ss
  40e695:	in     al,dx
  40e696:	test   al,0x6e
  40e698:	jmp    0x11520189
  40e69d:	pop    ds
  40e69e:	cwde   
  40e69f:	jecxz  0x40e69f
  40e6a1:	pop    eax
  40e6a2:	inc    ebp
  40e6a3:	xchg   esi,eax
  40e6a4:	lods   al,BYTE PTR ds:[esi]
  40e6a5:	(bad)  
  40e6a6:	clc    
  40e6a7:	jecxz  0x40e71d
  40e6a9:	sti    
  40e6aa:	push   0x78ebe617
  40e6af:	outs   dx,BYTE PTR ds:[esi]
  40e6b0:	jmp    0x40e72a
  40e6b2:	or     bh,cl
  40e6b4:	cmp    bl,ch
  40e6b6:	repnz adc cl,al
  40e6b9:	and    DWORD PTR [eax-0x1d],esp
  40e6bc:	(bad)  
  40e6bd:	dec    esp
  40e6be:	mov    es,esi
  40e6c0:	in     eax,dx
  40e6c1:	add    edi,edx
  40e6c3:	pop    ebp
  40e6c5:	xchg   DWORD PTR [ebx+0x4f71aee4],eax
  40e6cb:	icebp  
  40e6cc:	jecxz  0x40e6bb
  40e6ce:	cmp    bl,ah
  40e6d0:	rol    BYTE PTR [eax+0x0],cl
  40e6d3:	add    BYTE PTR [ebx-0x70],al
  40e6d6:	sub    al,0xe8
  40e6d8:	les    ecx,FWORD PTR [ebp+ebx*8-0x5]
  40e6dc:	scas   al,BYTE PTR es:[edi]
  40e6dd:	or     DWORD PTR [esi-0xb1db48f],eax
  40e6e3:	sti    
  40e6e4:	sub    dh,dh
  40e6e6:	jo     0x40e6d3
  40e6e8:	or     bl,ah
  40e6ea:	hlt    
  40e6eb:	out    0x0,eax
  40e6ed:	pop    ebp
  40e6ee:	icebp  
  40e6ef:	fistp  DWORD PTR [esp+eiz*8]
  40e6f2:	pop    esi
  40e6f3:	jmp    0x40e6e5
  40e6f5:	pop    esp
  40e6f6:	loope  0x40e6d3
  40e6f8:	push   ebx
  40e6f9:	in     eax,0x4e
  40e6fb:	jmp    0x40e6c9
  40e6fd:	dec    esp
  40e6fe:	inc    ebp
  40e6ff:	mov    ebp,0x50e91205
  40e704:	mov    esp,0x76a00f5
  40e709:	faddp  st(7),st
  40e70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e70c:	mov    al,0x9
  40e70e:	add    cl,ch
  40e710:	inc    esp
  40e711:	xchg   esp,eax
  40e712:	inc    ebp
  40e713:	sbb    eax,0xe175e21b
  40e718:	mov    WORD PTR ds:0x8c44e9d4,?
  40e71e:	rol    BYTE PTR [ecx-0xe8a1dc1],0x6c
  40e725:	in     eax,dx
  40e726:	stc    
  40e727:	neg    BYTE PTR [ebp+0x6df14590]
  40e72d:	pop    esp
  40e72e:	cld    
  40e72f:	ror    DWORD PTR [edi-0x4a],1
  40e732:	add    cl,ch
  40e734:	jno    0x40e6d8
  40e736:	je     0x40e737
  40e738:	add    BYTE PTR [eax],al
  40e73a:	pop    ebp
  40e73b:	pop    esp
  40e73c:	clc    
  40e73d:	cmp    DWORD PTR [ecx],eax
  40e73f:	or     eax,ebp
  40e741:	cmp    BYTE PTR [esi+0x9],al
  40e744:	add    BYTE PTR [eax+0x7],dh
  40e747:	(bad)  
  40e749:	cmp    al,0x5f
  40e74b:	icebp  
  40e74c:	or     DWORD PTR [edx+0x1cff0944],ebx
  40e752:	cmp    ebp,edx
  40e754:	mov    ebx,0x8be21da2
  40e759:	sub    al,0x37
  40e75b:	adc    cl,al
  40e75d:	xchg   esi,eax
  40e75e:	hlt    
  40e75f:	cmp    bh,bh
  40e761:	cld    
  40e762:	sbb    al,0xea
  40e764:	push   0x7f
  40e766:	sbb    eax,0x8abc9e2
  40e76b:	loop   0x40e7c1
  40e76d:	bound  ebx,QWORD PTR [eax]
  40e76f:	xchg   ah,al
  40e771:	pop    ecx
  40e772:	add    eax,0x44e9f44c
  40e777:	or     DWORD PTR [eax],eax
  40e779:	fs xchg ebp,esp
  40e77c:	push   eax
  40e77d:	dec    esi
  40e77e:	push   edi
  40e77f:	adc    eax,ebp
  40e781:	add    BYTE PTR [eax-0x45],dh
  40e784:	add    BYTE PTR [eax],al
  40e786:	imul   eax,esi,0x78
  40e789:	dec    ebp
  40e78a:	adc    DWORD PTR [ecx+0x8],ebx
  40e78d:	call   0x40dc82
  40e792:	aaa    
  40e793:	dec    ecx
  40e794:	clc    
  40e795:	adc    ebx,0xffffffed
  40e798:	add    al,0x72
  40e79a:	or     BYTE PTR [edx+0xf86d],0xaa
  40e7a1:	out    dx,al
  40e7a2:	jne    0x40e7a0
  40e7a4:	ss adc edx,0xbfe29e00
  40e7ab:	je     0x40e779
  40e7ad:	out    dx,al
  40e7ae:	jne    0x40e7a8
  40e7b0:	fiadd  WORD PTR [ebx+0x0]
  40e7b3:	call   0x40ca27
  40e7b8:	popa   
  40e7b9:	popf   
  40e7ba:	not    eax
  40e7bc:	out    0x21,eax
  40e7be:	hlt    
  40e7bf:	(bad)  
  40e7c0:	sti    
  40e7c1:	lock call 0x4da45c
  40e7c7:	jmp    0x40e841
  40e7c9:	lock jne 0x40e7d4
  40e7cc:	xchg   BYTE PTR [ecx],ah
  40e7ce:	sti    
  40e7cf:	push   ecx
  40e7d1:	(bad)  
  40e7d2:	mov    edi,0x9ecc9
  40e7d7:	jmp    0x40e801
  40e7d9:	(bad)  
  40e7da:	mov    edi,0x9dcc9
  40e7df:	push   0x2c
  40e7e1:	aas    
  40e7e2:	cld    
  40e7e3:	call   FWORD PTR [ebx]
  40e7e5:	in     eax,0xe7
  40e7e7:	lock (bad) 
  40e7e9:	repnz inc edi
  40e7ec:	pop    ebx
  40e7ed:	aad    0x1
  40e7ef:	add    dh,ch
  40e7f1:	or     al,0x8d
  40e7f3:	inc    ebp
  40e7f4:	sahf   
  40e7f5:	xor    eax,0xc4f675ff
  40e7fa:	sar    bl,cl
  40e7fc:	inc    edi
  40e7fd:	aaa    
  40e7fe:	jmp    0x4834a86
  40e803:	je     0x40e805
  40e805:	add    BYTE PTR ds:0x8a3bbbd7,dh
  40e80b:	push   ss
  40e80c:	outs   dx,DWORD PTR ds:[esi]
  40e80d:	pop    es
  40e80e:	(bad)  
  40e80f:	icebp  
  40e810:	add    eax,DWORD PTR [eax]
  40e812:	inc    edi
  40e813:	dec    ebx
  40e814:	add    ch,BYTE PTR [ebx]
  40e816:	xchg   ebx,edi
  40e818:	add    eax,0xc619872b
  40e81d:	add    al,0x47
  40e81f:	popf   
  40e820:	jl     0x40e80e
  40e822:	les    esp,FWORD PTR [esi]
  40e824:	in     al,dx
  40e825:	lea    eax,[edx]
  40e827:	push   es
  40e828:	push   esp
  40e829:	call   FWORD PTR [edx]
  40e82b:	fcmovu st,st(3)
  40e82d:	dec    eax
  40e82e:	je     0x40e822
  40e830:	add    eax,DWORD PTR [ebp-0xe3a579]
  40e836:	repnz (bad) 
  40e839:	fsubr  DWORD PTR [edi-0x41]
  40e83c:	call   0xe8faeaca
  40e841:	jne    0x40e8a6
  40e843:	retf   0xd212
  40e846:	inc    edi
  40e847:	repnz cld 
  40e849:	mov    edi,0x75e8b5db
  40e84e:	cmp    edx,DWORD PTR [edi-0x35680792]
  40e854:	pop    ss
  40e855:	or     eax,DWORD PTR [edi-0xe]
  40e858:	call   0xe8bb1bd2
  40e85d:	rol    DWORD PTR [edi-0xe],1
  40e860:	call   0xb2cb37da
  40e865:	cli    
  40e866:	sbb    BYTE PTR [edi+0xc2ba],al
  40e86c:	aas    
  40e86d:	repnz dec esi
  40e86f:	mov    ebx,DWORD PTR [ebx]
  40e871:	jae    0x40e832
  40e873:	call   0x8e0db40c
  40e878:	or     BYTE PTR [ecx],0x65
  40e87b:	push   ebx
  40e87c:	lock push ebp
  40e87e:	icebp  
  40e87f:	fucomi st,st(7)
  40e881:	mov    edx,0xc8ca03e9
  40e886:	fidivr WORD PTR [ebx-0x70]
  40e889:	or     cl,ch
  40e88b:	add    edx,eax
  40e88d:	push   ebp
  40e88e:	icebp  
  40e88f:	fcmovnb st,st(3)
  40e891:	loopne 0x40e8c9
  40e893:	call   0xe8762e66
  40e898:	xor    bl,ch
  40e89a:	adc    DWORD PTR [esi-0x316f76a],esp
  40e8a0:	call   0x47c855b4
  40e8a5:	or     ecx,ebp
  40e8a7:	jp     0x40e8ab
  40e8a9:	fld    DWORD PTR [esi]
  40e8ab:	outs   dx,BYTE PTR ds:[esi]
  40e8ac:	fwait
  40e8ad:	lock sub ebx,edx
  40e8b0:	inc    edi
  40e8b1:	or     DWORD PTR [edx-0x41],ebp
  40e8b4:	dec    ebx
  40e8b5:	push   es
  40e8b6:	jmp    0x3949ffbe
  40e8bb:	fcomp  QWORD PTR [esi-0x41fc16f8]
  40e8c1:	inc    ebp
  40e8c2:	(bad)
  40e8c5:	aam    0xc1
  40e8c7:	xchg   edi,eax
  40e8c8:	outs   dx,BYTE PTR ds:[esi]
  40e8c9:	or     cl,ch
  40e8cb:	or     BYTE PTR [ebx+0x3e404],0x0
  40e8d2:	inc    edi
  40e8d3:	stc    
  40e8d4:	call   0xe9bb182c
  40e8d9:	add    eax,DWORD PTR [edi-0x70]
  40e8dc:	sub    al,0xdc
  40e8de:	popf   
  40e8df:	or     DWORD PTR [esi+0x1cdf1b71],ebx
  40e8e5:	lock and BYTE PTR [ebp-0x7f],dl
  40e8e9:	out    0x92,eax
  40e8eb:	fst    DWORD PTR [ecx-0x16f5e173]
  40e8f1:	add    BYTE PTR [ebx],0xf6
  40e8f4:	call   FWORD PTR [edi-0x7a]
  40e8f7:	loope  0x40e8f8
  40e8f9:	hlt    
  40e8fa:	loopne 0x40e8ed
  40e8fc:	cmp    BYTE PTR gs:[ebx+0x9],cl
  40e900:	call   esp
  40e902:	in     al,dx
  40e903:	out    0x90,al
  40e905:	push   ebx
  40e906:	call   0x7d2253e9
  40e90b:	or     ebp,DWORD PTR [eax]
  40e90d:	test   al,0x44
  40e90f:	fidiv  WORD PTR [ebp-0xf]
  40e912:	in     al,dx
  40e913:	mov    ebp,0x12a836fc
  40e918:	fsubr  DWORD PTR [esi]
  40e91a:	ss aad 0xff
  40e91d:	pushf  
  40e91e:	lods   al,BYTE PTR ds:[esi]
  40e91f:	out    0xba,al
  40e921:	sbb    eax,0x3123dea0
  40e926:	test   al,0x54
  40e928:	clc    
  40e929:	push   cs
  40e92a:	push   ss
  40e92b:	icebp  
  40e92c:	(bad)  
  40e92d:	jl     0x40e8bb
  40e92f:	out    0xe0,al
  40e931:	std    
  40e932:	mov    eax,ds:0x1123de
  40e937:	add    BYTE PTR [eax+0x54],ch
  40e93a:	in     al,dx
  40e93b:	add    DWORD PTR [eax+0x9],ecx
  40e93e:	add    cl,ch
  40e940:	imul   edx,DWORD PTR [eax+ebp*8-0x2f],0xe9ffde71
  40e948:	imul   edx,DWORD PTR [eax+ecx*1-0x3f],0xc6ffe073
  40e950:	int    0xc9
  40e952:	pop    ebx
  40e953:	mov    al,0x86
  40e955:	add    eax,0xedbc1c00
  40e95a:	sub    DWORD PTR [ebx+edi*1],0xffffffde
  40e95e:	jae    0x40e951
  40e960:	sub    DWORD PTR [eax+ecx*1-0x6f],edx
  40e964:	inc    edi
  40e965:	mov    eax,0xc93de900
  40e96a:	leave  
  40e96b:	stos   DWORD PTR es:[edi],eax
  40e96c:	sbb    dh,bl
  40e96e:	push   esp
  40e96f:	add    BYTE PTR [ebp+0x16458bb6],dl
  40e975:	or     DWORD PTR [eax+0x5009ee00],eax
  40e97b:	push   0x2e
  40e97d:	mov    ebp,0x9ded0f2
  40e982:	leave  
  40e983:	ret    0x9e2
  40e986:	push   ebp
  40e987:	mov    ecx,DWORD PTR [edx+0xb8bfc4f]
  40e98d:	loop   0x40e919
  40e98f:	dec    ebp
  40e990:	(bad)  
  40e992:	push   cs
  40e993:	push   ecx
  40e994:	pop    ds
  40e995:	mov    ebp,0xdb6e2b02
  40e99a:	stos   DWORD PTR es:[edi],eax
  40e99b:	pop    ecx
  40e99c:	add    BYTE PTR [eax],al
  40e99e:	sub    eax,0x14f303e5
  40e9a3:	inc    edi
  40e9a4:	leave  
  40e9a5:	ret    0x9b6
  40e9a8:	push   ebp
  40e9a9:	mov    ecx,DWORD PTR [edx+0x4c]
  40e9ac:	push   edi
  40e9ad:	mov    ecx,ebx
  40e9af:	aad    0xfb
  40e9b1:	mov    edx,DWORD PTR [ebx]
  40e9b3:	loop   0x40e93f
  40e9b5:	dec    ebp
  40e9b6:	outs   dx,BYTE PTR ds:[esi]
  40e9b7:	jmp    0xc95e:0x4712f302
  40e9be:	sub    al,0xd6
  40e9c0:	call   DWORD PTR [ebp+esi*8-0x40]
  40e9c4:	push   esi
  40e9c5:	push   edi
  40e9c6:	cmc    
  40e9c7:	ins    DWORD PTR es:[edi],dx
  40e9c8:	or     ah,bh
  40e9ca:	in     eax,0x15
  40e9cc:	adc    BYTE PTR [ebx],ch
  40e9ce:	scas   al,BYTE PTR es:[edi]
  40e9cf:	pop    edi
  40e9d0:	jge    0x40e9de
  40e9d2:	jge    0x40e9de
  40e9d4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9d6:	push   ebp
  40e9d7:	mov    ds:0x466e0175,al
  40e9dc:	pop    esi
  40e9dd:	leave  
  40e9de:	in     al,dx
  40e9df:	loope  0x40e9e0
  40e9e1:	push   esp
  40e9e2:	mov    ch,0xc1
  40e9e4:	add    esp,0xffffffca
  40e9e7:	dec    ebx
  40e9e8:	push   edi
  40e9e9:	push   ebx
  40e9ea:	inc    edi
  40e9eb:	or     al,BYTE PTR [edx]
  40e9ed:	add    DWORD PTR [edi-0xe],eax
  40e9f0:	in     al,0x75
  40e9f2:	aas    
  40e9f3:	jp     0x40e988
  40e9f5:	dec    DWORD PTR [eax]
  40e9f7:	pop    esp
  40e9f8:	jns    0x40ea77
  40e9fa:	dec    edi
  40e9fb:	sub    edi,DWORD PTR ds:0x41a152b
  40ea01:	add    DWORD PTR [eax],eax
  40ea03:	add    BYTE PTR [edi-0xe],al
  40ea06:	jnp    0x40ea1c
  40ea08:	sub    eax,0xdee2c23c
  40ea0d:	addr16 or BYTE PTR [bx+si+0x78a3],al
  40ea13:	jne    0x40ea58
  40ea15:	sub    al,0x3f
  40ea17:	inc    BYTE PTR [edi-0x9]
  40ea1a:	mov    edx,0x689c2b
  40ea1f:	cmp    ecx,edi
  40ea21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea22:	in     al,0x0
  40ea24:	or     ah,BYTE PTR [edx+edi*2]
  40ea27:	add    al,0x76
  40ea29:	repnz ds (bad) 
  40ea2c:	push   eax
  40ea2d:	cmp    al,0x4f
  40ea2f:	dec    ch
  40ea31:	out    0x29,al
  40ea33:	mov    BYTE PTR [ebx-0x39],cl
  40ea36:	jns    0x40ea7d
  40ea38:	mov    BYTE PTR [edx+0x0],bl
  40ea3b:	cmp    al,BYTE PTR [esi]
  40ea3d:	xchg   edi,eax
  40ea3e:	ss adc ch,dh
  40ea41:	out    dx,eax
  40ea42:	sbb    cl,cl
  40ea44:	jno    0x40e9f5
  40ea46:	outs   dx,BYTE PTR ds:[esi]
  40ea47:	aad    0xc
  40ea49:	sbb    eax,DWORD PTR [esi-0x37]
  40ea4c:	test   esi,esp
  40ea4e:	add    edx,DWORD PTR [ebp-0x34]
  40ea51:	sahf   
  40ea52:	add    ah,0x4f
  40ea55:	dec    DWORD PTR [ebp+0x57]
  40ea58:	dec    eax
  40ea59:	adc    eax,0xeecd5afc
  40ea5e:	jnp    0x40eaa5
  40ea60:	cmp    ch,BYTE PTR [eax+0x40]
  40ea63:	add    DWORD PTR [edi+0xe82c08],edi
  40ea69:	add    BYTE PTR [edi+ebx*8+0x55cc3d26],bh
  40ea70:	in     eax,0xbc
  40ea72:	and    cl,0xe9
  40ea75:	add    eax,DWORD PTR [edi+0x9]
  40ea78:	jb     0x40eab0
  40ea7a:	aaa    
  40ea7b:	call   0xdecbd0a9
  40ea80:	out    0xad,al
  40ea82:	sbb    dh,0xde
  40ea85:	lods   eax,DWORD PTR ds:[esi]
  40ea86:	pop    ebx
  40ea87:	and    DWORD PTR [ecx+0x4e],esi
  40ea8a:	call   0x51289e97
  40ea8f:	xchg   ebx,eax
  40ea90:	lods   al,BYTE PTR ds:[esi]
  40ea91:	out    0xcd,eax
  40ea93:	hlt    
  40ea94:	adc    BYTE PTR [edx+edi*2-0x25],bh
  40ea98:	imul   BYTE PTR [ebp+0xf71de82]
  40ea9e:	jg     0x40eaac
  40eaa0:	jg     0x40eae0
  40eaa2:	mov    ebx,0xbfe4948e
  40eaa7:	hlt    
  40eaa8:	loopne 0x40eb23
  40eaaa:	adc    bl,ah
  40eaac:	jmp    0x40eafc
  40eaae:	mov    eax,ds:0xcc29fd8e
  40eab3:	inc    ebp
  40eab4:	adc    DWORD PTR [ebx],esi
  40eab6:	cmp    ebx,DWORD PTR [ecx]
  40eab8:	push   es
  40eab9:	ds (bad) 
  40eabb:	out    0x29,al
  40eabd:	jns    0x40eac9
  40eabf:	fisub  WORD PTR [ecx+0x0]
  40eac2:	int    0x45
  40eac4:	in     eax,dx
  40eac5:	jp     0x40eacb
  40eac7:	or     al,BYTE PTR [esi+0x42]
  40eaca:	or     al,0xd2
  40eacc:	stos   DWORD PTR es:[edi],eax
  40eacd:	adc    BYTE PTR [eax],al
  40eacf:	add    BYTE PTR [edi+0x36],al
  40ead2:	(bad)  
  40ead3:	lock mov ah,0xbd
  40ead7:	loop   0x40eb29
  40ead9:	fistp  DWORD PTR [edx]
  40eadb:	das    
  40eadc:	ins    BYTE PTR es:[edi],dx
  40eadd:	lea    esp,[eax+eiz*8]
  40eae0:	xchg   edi,eax
  40eae1:	fiadd  DWORD PTR [eax]
  40eae3:	cmp    al,0x4b
  40eae5:	icebp  
  40eae6:	mov    ds:0x85094b99,eax
  40eaeb:	test   eax,0xe9969154
  40eaf0:	inc    esp
  40eaf1:	or     edi,edi
  40eaf3:	sbb    al,0x4b
  40eaf5:	icebp  
  40eaf6:	das    
  40eaf7:	xchg   edi,eax
  40eaf8:	and    al,0xdb
  40eafa:	mov    DWORD PTR [edi+ebp*8],ebp
  40eafd:	fidiv  DWORD PTR [ebp+0x7d]
  40eb00:	repz jno 0x40ead2
  40eb03:	jmp    0xf600f94c
  40eb08:	gs nop
  40eb0a:	inc    ebp
  40eb0b:	pop    ecx
  40eb0c:	in     al,0x54
  40eb0e:	hlt    
  40eb0f:	push   ecx
  40eb10:	ins    DWORD PTR es:[edi],dx
  40eb11:	(bad)  
  40eb13:	push   esi
  40eb14:	retf   0xf844
  40eb17:	dec    esi
  40eb18:	outs   dx,BYTE PTR ds:[esi]
  40eb19:	aad    0xff
  40eb1b:	mov    esp,0x3975daec
  40eb20:	mov    bl,0x8d
  40eb22:	(bad)  
  40eb23:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40eb25:	fidiv  DWORD PTR [ebp+0x2d]
  40eb28:	mov    ds:0x44e9cf43,eax
  40eb2d:	fidiv  DWORD PTR [ebp-0x13]
  40eb30:	lods   al,BYTE PTR ds:[esi]
  40eb31:	pop    ss
  40eb32:	iret   
  40eb33:	jmp    0x3984eb38
  40eb38:	call   DWORD PTR [eax+eax*2-0x5ae87a74]
  40eb3f:	(bad)  
  40eb41:	cdq    
  40eb42:	ins    BYTE PTR es:[edi],dx
  40eb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb44:	(bad)  
  40eb45:	mul    BYTE PTR [ebp-0x26]
  40eb48:	jne    0x40eb3f
  40eb4a:	gs push esp
  40eb4c:	clc    
  40eb4d:	je     0x40eb0e
  40eb4f:	jmp    0x40eb4f
  40eb51:	fisub  WORD PTR [ebp+0x39]
  40eb54:	call   0x1b5230
  40eb59:	into   
  40eb5a:	out    dx,eax
  40eb5b:	adc    al,ch
  40eb5d:	add    BYTE PTR [ecx],bl
  40eb5f:	mov    ebp,0xd94ffff
  40eb64:	push   0x44460d
  40eb69:	(bad)  
  40eb6a:	jnp    0x40eb79
  40eb6c:	call   0x27d004
  40eb71:	or     eax,DWORD PTR [esi]
  40eb73:	out    0x75,eax
  40eb75:	hlt    
  40eb76:	mov    cl,0x40
  40eb78:	clc    
  40eb79:	(bad)  
  40eb7a:	cmp    ecx,DWORD PTR ds:0xe6c483e8
  40eb80:	jmp    DWORD PTR [ebx]
  40eb82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb83:	out    0x75,al
  40eb85:	clc    
  40eb86:	(bad)  
  40eb87:	call   0x875:0xe761fffd
  40eb8e:	xchg   esi,eax
  40eb8f:	mov    edi,esi
  40eb91:	inc    DWORD PTR [ecx+0x275bc38b]
  40eb97:	les    ecx,FWORD PTR [eax]
  40eb99:	add    BYTE PTR [eax],al
  40eb9b:	add    BYTE PTR [ebx+0x1a83ec8a],bl
  40eba1:	mov    dl,0x57
  40eba3:	mov    ebp,ebx
  40eba5:	ror    DWORD PTR [edx],1
  40eba7:	sar    dl,0xf
  40ebaa:	mov    DWORD PTR [eax],0x59e
  40ebb0:	xchg   ebp,eax
  40ebb1:	out    0x83,al
  40ebb3:	jge    0x40ebfb
  40ebb5:	add    al,0x75
  40ebb7:	pop    es
  40ebb8:	hlt    
  40ebb9:	add    eax,0xea9e0002
  40ebbe:	jae    0x7542c987
  40ebc4:	imul   edi,DWORD PTR [ebx+0x0],0xeb056e01
  40ebcb:	add    al,BYTE PTR [ebp+0x47ca8193]
  40ebd1:	add    eax,0x41f30002
  40ebd6:	cld    
  40ebd7:	push   eax
  40ebd8:	inc    edi
  40ebd9:	push   ds
  40ebda:	outs   dx,BYTE PTR ds:[esi]
  40ebdb:	add    BYTE PTR [eax+0x34],dl
  40ebde:	adc    bh,bh
  40ebe0:	rcl    bh,cl
  40ebe2:	jmp    0x40ebb4
  40ebe4:	adc    bl,ah
  40ebe6:	add    ecx,DWORD PTR [ebx]
  40ebe8:	pop    es
  40ebe9:	push   ss
  40ebea:	jno    0x40eb79
  40ebec:	mov    bl,BYTE PTR [edx+0x5d476a34]
  40ebf2:	inc    edi
  40ebf3:	hlt    
  40ebf4:	ja     0x40ebf2
  40ebf6:	add    edi,edi
  40ebf8:	xchg   edx,eax
  40ebf9:	shl    al,cl
  40ebfb:	jne    0x40ec10
  40ebfd:	mov    ebx,DWORD PTR [ebp+0x470000cf]
  40ec03:	loop   0x40ec11
  40ec05:	sar    BYTE PTR [edx+0x26],0x85
  40ec09:	jge    0x40ec0a
  40ec0b:	loop   0x40ec64
  40ec0d:	inc    esi
  40ec0e:	(bad)  
  40ec0f:	in     eax,0xd7
  40ec11:	add    DWORD PTR [edx-0x18],esi
  40ec14:	test   BYTE PTR [ebp-0x21],bh
  40ec17:	loope  0x40ec70
  40ec19:	cmp    cl,ah
  40ec1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec1c:	fild   DWORD PTR [eax+0x77]
  40ec1f:	dec    edx
  40ec20:	inc    edx
  40ec21:	std    
  40ec22:	enter  0x8d4f,0xf8
  40ec26:	shr    BYTE PTR [ebp-0x33efaf25],cl
  40ec2c:	add    ebp,DWORD PTR [edx+0x47]
  40ec2f:	daa    
  40ec30:	push   edi
  40ec31:	adc    BYTE PTR [eax-0x3517208b],ch
  40ec37:	daa    
  40ec38:	add    al,0x0
  40ec3a:	dec    esp
  40ec3b:	and    bl,BYTE PTR [eax+0xa]
  40ec3e:	clc    
  40ec3f:	or     DWORD PTR [ecx],ebp
  40ec41:	std    
  40ec42:	mov    BYTE PTR [edi],cl
  40ec44:	sub    eax,0x8ce66cff
  40ec49:	inc    ebp
  40ec4a:	push   ebx
  40ec4b:	jmp    0x40ec10
  40ec4d:	je     0x40ec99
  40ec4f:	out    0x56,eax
  40ec51:	clc    
  40ec52:	mov    eax,0xdae0e909
  40ec57:	aam    0xd1
  40ec59:	push   0xffffff88
  40ec5b:	or     ecx,ebp
  40ec5d:	mov    WORD PTR [eax+0x2b56a904],cs
  40ec63:	mov    WORD PTR [esp+edi*8+0x0],es
  40ec67:	add    BYTE PTR [esi+0x5c],al
  40ec6a:	xlat   BYTE PTR ds:[ebx]
  40ec6b:	mov    WORD PTR [edx+0x303428f1],es
  40ec71:	pop    esi
  40ec72:	aad    0xe0
  40ec74:	mov    dl,0xf9
  40ec76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec77:	push   esi
  40ec78:	push   ebx
  40ec79:	fcom   DWORD PTR [esp+ecx*1]
  40ec7c:	das    
  40ec7d:	sub    dl,BYTE PTR [esi-0x5fc7ef20]
  40ec83:	lds    esi,FWORD PTR [ebx]
  40ec85:	or     DWORD PTR [ecx*4+0xbfc89f3],ebx
  40ec8c:	inc    esi
  40ec8d:	or     ecx,ebp
  40ec8f:	cmp    DWORD PTR [edx+0x2],0x6e
  40ec93:	push   ss
  40ec94:	cmp    BYTE PTR [edx],ah
  40ec96:	test   al,0x3
  40ec98:	ror    BYTE PTR [ebp-0xf],1
  40ec9b:	ins    DWORD PTR es:[edi],dx
  40ec9c:	inc    edi
  40ec9d:	fcomp  st(4)
  40ec9f:	not    ecx
  40eca1:	pop    ebp
  40eca2:	stc    
  40eca3:	loopne 0x40ecf7
  40eca5:	add    eax,0xe14f5646
  40ecaa:	xor    eax,0x20d7b8e1
  40ecaf:	lds    edx,FWORD PTR [edi+0x9]
  40ecb2:	add    al,ah
  40ecb4:	mov    esp,0xdee538b8
  40ecb9:	add    ecx,ebp
  40ecbb:	add    eax,DWORD PTR [edi-0x46]
  40ecbe:	add    edx,DWORD PTR [ebx+eax*2-0x76]
  40ecc2:	sbb    edx,DWORD PTR [edx]
  40ecc4:	mov    ch,0xa1
  40ecc6:	add    eax,0xd7f97582
  40eccb:	repnz add BYTE PTR [eax],al
  40ecce:	push   edi
  40eccf:	jmp    0x40ecd1
  40ecd1:	pop    es
  40ecd2:	mov    ebp,0xe5d984fc
  40ecd7:	dec    ecx
  40ecd8:	add    bh,ah
  40ecda:	mov    ebx,DWORD PTR [ebp-0x26]
  40ecdd:	stos   BYTE PTR es:[edi],al
  40ecde:	push   ds
  40ecdf:	test   ah,ch
  40ece1:	ds mov esp,0x93d6084d
  40ece7:	cmp    DWORD PTR [ebp-0xb],0xffffffcd
  40eceb:	inc    esp
  40ecec:	adc    dl,dh
  40ecee:	or     ebx,DWORD PTR [esi+0x18]
  40ecf1:	(bad)  
  40ecf2:	sti    
  40ecf3:	enter  0xe1ea,0x56
  40ecf7:	push   cs
  40ecf8:	and    eax,0x94ba6
  40ecfd:	jb     0x40ed4e
  40ecff:	mov    WORD PTR [eax],ss
  40ed01:	or     BYTE PTR [edx-0x7f54ccf7],cl
  40ed07:	jmp    0x40ecf1
  40ed09:	jle    0x40ecc6
  40ed0b:	ss leave 
  40ed0d:	stos   DWORD PTR es:[edi],eax
  40ed0e:	push   edi
  40ed0f:	or     DWORD PTR [ebp+0x62],edx
  40ed12:	idiv   DWORD PTR [edx]
  40ed14:	sub    esp,0x3c
  40ed17:	or     DWORD PTR [ebp-0x12],esi
  40ed1a:	or     DWORD PTR [ebp+0x8],ecx
  40ed1d:	imul   ebp,DWORD PTR [ebx],0x48
  40ed20:	add    BYTE PTR [edx+0x66],ch
  40ed23:	add    eax,0xce41d400
  40ed28:	inc    ebp
  40ed29:	cmc    
  40ed2a:	(bad)  
  40ed2b:	and    DWORD PTR [ecx-0x17],eax
  40ed2e:	cdq    
  40ed2f:	pop    esp
  40ed30:	or     BYTE PTR [ecx+0x0],al
  40ed33:	add    BYTE PTR [eax-0x3c],dl
  40ed36:	add    cl,ch
  40ed38:	mov    ebp,0x509cffb1
  40ed3d:	loope  0x40ed74
  40ed3f:	sub    al,0x43
  40ed41:	or     DWORD PTR [ebx],eax
  40ed43:	xor    DWORD PTR [edx+edi*1],eax
  40ed46:	call   0x175619
  40ed4b:	add    ch,dh
  40ed4d:	xchg   esp,eax
  40ed4e:	push   DWORD PTR [ebp+0x76]
  40ed51:	sbb    ebp,eax
  40ed53:	aas    
  40ed54:	sub    ecx,DWORD PTR ds:0x5f3ff00
  40ed5a:	push   ebx
  40ed5b:	call   0x41a58a
  40ed60:	aad    0xca
  40ed62:	pop    ebx
  40ed63:	leave  
  40ed64:	pushf  
  40ed65:	add    al,BYTE PTR [eax]
  40ed67:	push   ebp
  40ed68:	in     eax,0xe5
  40ed6a:	push   ebx
  40ed6b:	or     DWORD PTR [ebx+0x21750005],0xffffffcf
  40ed72:	inc    ebp
  40ed73:	or     BYTE PTR [edx+eiz*1+0x699d0041],bl
  40ed7a:	or     al,0x0
  40ed7c:	inc    ebx
  40ed7d:	push   cs
  40ed7e:	mov    DWORD PTR [ebp+0x2a],0x1e412888
  40ed85:	mov    bh,0x75
  40ed87:	or     dh,al
  40ed89:	loop   0x40ed57
  40ed8b:	add    dh,ch
  40ed8d:	sbb    al,0xff
  40ed90:	repz add eax,0x9aae1e8
  40ed96:	add    BYTE PTR [ebx],al
  40ed98:	add    BYTE PTR [eax],al
  40ed9a:	(bad)  
  40ed9b:	dec    edx
  40ed9c:	push   ebx
  40ed9d:	call   0x40a117
  40eda2:	push   ebp
  40eda3:	xchg   edx,eax
  40eda4:	push   DWORD PTR [ebp-0x1a]
  40eda7:	sbb    ch,al
  40eda9:	jmp    0x40edd5
  40edab:	or     al,BYTE PTR [eax]
  40edad:	inc    DWORD PTR [ebx]
  40edaf:	push   es
  40edb0:	push   ebx
  40edb1:	call   0x41b3cc
  40edb6:	jns    0x40ede9
  40edb8:	or     al,ch
  40edba:	ss mov bl,0xff
  40edbd:	call   DWORD PTR ds:0x6cc95bcb
  40edc3:	add    al,BYTE PTR [eax]
  40edc5:	push   ebp
  40edc6:	inc    edi
  40edc7:	imul   ebp,edi,0xffffff83
  40edca:	add    DWORD PTR [ebx],0x36
  40edcd:	push   0x3e14a
  40edd2:	outs   dx,DWORD PTR ds:[esi]
  40edd3:	push   ds
  40edd4:	(bad)  
  40edd6:	jo     0x40ee40
  40edd8:	dec    eax
  40edd9:	cld    
  40edda:	les    esp,FWORD PTR [esp+edx*1+0x3e00629]
  40ede1:	jne    0x40ee28
  40ede3:	mov    ebx,0xbbdafef6
  40ede8:	push   0x0
  40edea:	fstp   st(7)
  40edec:	fdiv   QWORD PTR [ebp+0x4f]
  40edef:	cmp    BYTE PTR [edi+edi*8],al
  40edf2:	push   edx
  40edf3:	shr    DWORD PTR [edx],1
  40edf5:	inc    ecx
  40edf6:	inc    edi
  40edf7:	les    edi,FWORD PTR gs:[ecx+0x7f]
  40edfb:	mov    ds:0xfc57,eax
  40ee00:	das    
  40ee01:	neg    eax
  40ee03:	call   FWORD PTR [eax]
  40ee05:	lods   al,BYTE PTR ds:[esi]
  40ee06:	inc    edi
  40ee07:	cld    
  40ee08:	inc    edi
  40ee09:	loop   0x40ee0e
  40ee0b:	add    al,cl
  40ee0d:	mov    ebp,0x7747412a
  40ee12:	das    
  40ee13:	mov    edx,DWORD PTR [eax+0x57]
  40ee16:	inc    edi
  40ee17:	or     BYTE PTR [edx],ch
  40ee19:	pop    ebx
  40ee1a:	pop    ebp
  40ee1b:	(bad)  
  40ee1c:	call   0x5a452fba
  40ee21:	pop    es
  40ee22:	push   0x0
  40ee24:	retf   0xba0
  40ee27:	push   eax
  40ee28:	pop    edi
  40ee29:	popa   
  40ee2a:	sub    al,BYTE PTR [ecx+0x47]
  40ee2d:	inc    ebx
  40ee2e:	adc    ch,al
  40ee30:	and    cl,BYTE PTR [ebp+ebx*8-0x1]
  40ee34:	dec    esp
  40ee35:	and    bl,BYTE PTR [eax+0x5]
  40ee38:	mov    esi,0x3febdfa5
  40ee3d:	pop    edi
  40ee3e:	lds    eax,FWORD PTR [esp+eax*8]
  40ee41:	or     esi,esp
  40ee43:	add    edx,DWORD PTR [edx]
  40ee45:	ret    
  40ee46:	jb     0x40ee8f
  40ee48:	xchg   ebx,eax
  40ee49:	xor    al,0x20
  40ee4b:	ret    0x943
  40ee4e:	mov    ah,0x88
  40ee50:	jae    0x40ee8a
  40ee52:	jb     0x40ee9b
  40ee54:	dec    edi
  40ee55:	add    BYTE PTR [ecx],ch
  40ee57:	pop    eax
  40ee58:	dec    edx
  40ee59:	mov    DWORD PTR [ecx+0x30fef203],esi
  40ee5f:	add    al,0x47
  40ee61:	or     ecx,ebp
  40ee63:	cmp    BYTE PTR [eax],al
  40ee65:	add    BYTE PTR [esi-0x22fc1a39],cl
  40ee6b:	or     BYTE PTR [ebx+0x4],al
  40ee6e:	fld    QWORD PTR [edi]
  40ee70:	inc    ebx
  40ee71:	add    al,0xad
  40ee73:	or     DWORD PTR [ecx-0x7c],edx
  40ee76:	inc    edi
  40ee77:	or     ecx,ebp
  40ee79:	fdivr  QWORD PTR [edx-0x31b3eff]
  40ee7f:	or     cl,ch
  40ee81:	mov    bh,bh
  40ee83:	pop    ds
  40ee84:	test   eax,0x3a009340
  40ee89:	in     al,dx
  40ee8a:	sub    eax,eax
  40ee8c:	jmp    0xe94abd94
  40ee91:	add    eax,DWORD PTR [edi+0x30]
  40ee94:	mov    al,0xc1
  40ee96:	inc    ebx
  40ee97:	or     DWORD PTR [ecx+ecx*4],edx
  40ee9a:	jecxz  0x40ef1b
  40ee9c:	sub    al,0xc
  40ee9e:	cmp    al,0xc9
  40eea0:	cmc    
  40eea1:	push   es
  40eea2:	(bad)  
  40eea3:	adc    cl,ch
  40eea5:	push   esi
  40eea6:	dec    esi
  40eea7:	xchg   ecx,eax
  40eea8:	jmp    0x204a35b0
  40eead:	rol    DWORD PTR [ebx+0x9],0x4e
  40eeb1:	push   esi
  40eeb2:	dec    edi
  40eeb3:	loope  0x40eef0
  40eeb5:	enter  0x947,0x6a
  40eeb9:	(bad)  [eax-0x221bffa4]
  40eebf:	clc    
  40eec0:	(bad)  
  40eec1:	call   0x29d5f30a
  40eec6:	dec    ebx
  40eec7:	fwait
  40eec8:	rcl    BYTE PTR [edx],0x0
  40eecb:	add    BYTE PTR [ecx-0x6f],cl
  40eece:	add    cl,ch
  40eed0:	inc    esp
  40eed1:	or     ecx,ecx
  40eed3:	sub    ecx,DWORD PTR [eax+0x9]
  40eed6:	push   ebp
  40eed7:	jb     0x40ef41
  40eed9:	xchg   esp,eax
  40eedb:	std    
  40eedc:	fisttp WORD PTR [eax]
  40eede:	push   0xffffffe9
  40eee0:	mov    ebx,DWORD PTR [ebp+0x8]
  40eee3:	add    DWORD PTR [edi+0x49e900bf],ecx
  40eee9:	leave  
  40eeea:	je     0x40eeff
  40eeec:	sbb    edi,DWORD PTR [ecx]
  40eeee:	call   0x14587d
  40eef3:	pusha  
  40eef4:	xchg   ch,dl
  40eef6:	pop    eax
  40eef7:	sbb    DWORD PTR [ebx*2+0x196befc],ebx
  40eefe:	call   0x4ae77c
  40ef03:	loop   0x40ef09
  40ef05:	pop    ebp
  40ef06:	or     al,0xa6
  40ef08:	jbe    0x40eedf
  40ef0a:	call   0x13e028
  40ef0f:	ret    0xdf04
  40ef12:	add    esp,DWORD PTR [edx-0x7a]
  40ef15:	aad    0xc9
  40ef17:	stos   DWORD PTR es:[edi],eax
  40ef18:	inc    edi
  40ef19:	or     DWORD PTR [ebp+0x72],edx
  40ef1c:	fbstp  TBYTE PTR [esi]
  40ef1e:	mov    edx,DWORD PTR [edi+edi*1]
  40ef21:	pop    edi
  40ef22:	adc    BYTE PTR [edx],bl
  40ef24:	repz (bad) 
  40ef26:	cli    
  40ef27:	data16 cld 
  40ef29:	pop    edi
  40ef2a:	add    bl,dl
  40ef2c:	inc    esp
  40ef2d:	pop    edi
  40ef2e:	add    eax,ebx
  40ef30:	add    BYTE PTR [eax],al
  40ef32:	inc    esp
  40ef33:	pop    edi
  40ef34:	add    eax,ecx
  40ef36:	inc    esp
  40ef37:	or     DWORD PTR [eax],eax
  40ef39:	add    BYTE PTR [esi],ch
  40ef3b:	scas   al,BYTE PTR es:[edi]
  40ef3c:	jne    0x40ef46
  40ef3e:	push   ss
  40ef3f:	and    cl,bl
  40ef41:	add    BYTE PTR [esi-0x25bffc7b],bl
  40ef47:	sbb    ch,BYTE PTR [edx+0x0]
  40ef4a:	(bad)  
  40ef4c:	ins    BYTE PTR es:[edi],dx
  40ef4d:	retf   
  40ef4e:	sahf   
  40ef4f:	push   es
  40ef50:	mov    DWORD PTR [ebx-0x5e],eax
  40ef53:	add    BYTE PTR fs:[edx+0x6e],ch
  40ef57:	add    BYTE PTR fs:[edx+0x6c],ch
  40ef5b:	fs add bh,bh
  40ef5e:	lods   eax,DWORD PTR ds:[esi]
  40ef5f:	ficomp WORD PTR [esi-0x35]
  40ef62:	pop    esi
  40ef63:	push   es
  40ef64:	or     eax,eax
  40ef66:	ficomp DWORD PTR [esi]
  40ef68:	mov    DWORD PTR [ebx+0x6a],eax
  40ef6b:	add    BYTE PTR fs:[edx+0x5e],ch
  40ef6f:	add    BYTE PTR fs:[edx+0x5a],ch
  40ef73:	push   ss
  40ef74:	call   0x46d4c8
  40ef79:	mov    DWORD PTR [ebp+0x5],ebp
  40ef7c:	or     eax,eax
  40ef7e:	jnp    0x40efa9
  40ef80:	push   DWORD PTR [ebx+0x1a]
  40ef83:	fdivrp st(2),st
  40ef85:	retf   0x62e
  40ef88:	push   DWORD PTR [ebx]
  40ef8a:	mov    dh,0xe2
  40ef8c:	retf   0x1e00
  40ef8f:	mov    DWORD PTR [ebx],0xffaeb1ff
  40ef95:	jmp    0x40ef97
  40ef97:	add    BYTE PTR [ebx],ah
  40ef99:	scas   eax,DWORD PTR es:[edi]
  40ef9a:	xor    ebp,eax
  40ef9c:	mov    ds:0xa90000c3,al
  40efa1:	or     bh,bh
  40efa3:	push   DWORD PTR [ecx-0x51]
  40efa6:	sub    eax,eax
  40efa8:	xchg   edi,eax
  40efa9:	dec    edx
  40efaa:	or     BYTE PTR [edi],cl
  40efac:	pop    ebx
  40efad:	(bad)  
  40efae:	pop    ebx
  40efaf:	leave  
  40efb0:	sbb    al,0xfe
  40efb2:	call   DWORD PTR [edi+eax*2+0x67]
  40efb6:	out    0x53,eax
  40efb8:	int3   
  40efb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efba:	or     eax,DWORD PTR [ebx+0x174f4b7c]
  40efc0:	mov    al,0x8e
  40efc2:	or     ebp,eax
  40efc4:	ds daa 
  40efc6:	add    eax,DWORD PTR [eax]
  40efc8:	mov    al,ds:0xeae7ff8e
  40efcd:	adc    eax,0xae900003
  40efd2:	jmp    0x40ef7a
  40efd4:	jge    0x40efb5
  40efd6:	add    ebx,DWORD PTR [ebx-0x72]
  40efd9:	sbb    eax,0x5713ffff
  40efde:	out    0x81,eax
  40efe0:	mov    edi,edi
  40efe2:	jmp    0x32b258e6
  40efe7:	and    DWORD PTR [edx],0xffffffc8
  40efea:	sub    eax,DWORD PTR [ecx+0x47]
  40efed:	loopne 0x40f03e
  40efef:	adc    eax,0x282bfc50
  40eff4:	push   es
  40eff5:	loopne 0x40efe2
  40eff7:	mov    bh,BYTE PTR [esi]
  40eff9:	rcr    cl,0xc7
  40effc:	add    BYTE PTR [eax],al
  40effe:	inc    edx
  40efff:	cli    
  40f000:	sub    eax,DWORD PTR [ecx+0x47]
  40f003:	loop   0x40f008
  40f005:	add    BYTE PTR [edi+0x63],al
  40f008:	pop    ss
  40f009:	sub    al,0x6f
  40f00b:	and    DWORD PTR [eax+eax*1],eax
  40f00e:	xchg   ebx,eax
  40f00f:	int    0xd8
  40f011:	xor    eax,0x42ba63
  40f016:	pop    ds
  40f017:	pop    es
  40f018:	(bad)  
  40f01a:	add    BYTE PTR [eax+0x212f2bff],ch
  40f020:	add    al,0x0
  40f022:	inc    edi
  40f023:	loop   0x40f028
  40f025:	(bad)  
  40f026:	ret    0xe952
  40f029:	jmp    eax
  40f02b:	bnd jmp 0x40efd4
  40f02e:	xlat   BYTE PTR ds:[ebx]
  40f02f:	or     DWORD PTR [esi-0x27],esp
  40f032:	ret    0x4d86
  40f035:	jmp    0xebfac102
  40f03a:	fstp   st(1)
  40f03c:	dec    esi
  40f03d:	fxch   st(2)
  40f03f:	inc    esi
  40f040:	inc    ebp
  40f041:	xor    al,0x1f
  40f043:	sbb    DWORD PTR [ecx],edx
  40f045:	inc    ebx
  40f046:	inc    edi
  40f047:	popa   
  40f048:	jmp    0x40f04d
  40f04a:	inc    edi
  40f04b:	mov    DWORD PTR [ecx+0x71],eax
  40f04e:	mov    WORD PTR [ecx],cs
  40f050:	jmp    0x64417761
  40f055:	cmp    eax,0xc0e90946
  40f05a:	retf   0xfed5
  40f05d:	fdivr  DWORD PTR [eax+0x9]
  40f060:	jmp    0x4740f068
  40f065:	enter  0xdc64,0x58
  40f069:	shl    dh,1
  40f06b:	fcom   DWORD PTR [eax+0x9]
  40f06e:	jmp    0xe9a437e0
  40f073:	ins    DWORD PTR es:[edi],dx
  40f074:	inc    edi
  40f075:	arpl   cx,bp
  40f077:	xchg   dl,al
  40f079:	rol    esi,1
  40f07b:	fadd   DWORD PTR [eax+0x39]
  40f07e:	pop    esp
  40f07f:	jle    0x40f0bc
  40f081:	loopne 0x40f049
  40f083:	fcom   DWORD PTR [edi+0x18cf74d0]
  40f089:	shl    BYTE PTR [esi-0x3e326528],1
  40f08f:	ss or  al,0x9
  40f092:	jmp    0x6440f7a3
  40f097:	hlt    
  40f098:	inc    edi
  40f099:	or     ecx,ebp
  40f09b:	imul   eax,edi,0x20
  40f09e:	sub    BYTE PTR [edi+ebp*2],al
  40f0a1:	sbb    ecx,edx
  40f0a3:	inc    edx
  40f0a4:	inc    edi
  40f0a5:	loope  0x40f0a5
  40f0a7:	xlat   BYTE PTR ds:[ebx]
  40f0a8:	call   0x522f17c
  40f0ad:	add    BYTE PTR [eax+edi*2+0x72000944],al
  40f0b4:	xchg   esp,eax
  40f0b5:	jge    0x40f03c
  40f0b7:	pop    ebp
  40f0b8:	(bad)  
  40f0ba:	(bad)  
  40f0bb:	mov    ecx,0x4dbce17a
  40f0c0:	lahf   
  40f0c1:	iret   
  40f0c2:	or     ebp,DWORD PTR [ecx]
  40f0c4:	aas    
  40f0c5:	test   edx,ebx
  40f0c7:	jmp    0x984f0cc
  40f0cc:	mov    DWORD PTR [esp+eiz*4-0x21],ebp
  40f0d0:	jmp    FWORD PTR [esi]
  40f0d2:	rol    DWORD PTR [ebp-0x3090e918],0x50
  40f0d9:	xchg   ecx,eax
  40f0da:	call   0xa02a31ff
  40f0df:	xchg   ebp,eax
  40f0e0:	loopne 0x40f0e0
  40f0e2:	nop
  40f0e3:	iret   
  40f0e4:	push   0x800944eb
  40f0e9:	adc    edi,edx
  40f0eb:	sar    edi,cl
  40f0ed:	test   BYTE PTR [ecx+ecx*8+0xf],0x65
  40f0f2:	mov    ecx,0xc5e90008
  40f0f7:	rol    BYTE PTR [ecx],1
  40f0f9:	out    dx,al
  40f0fa:	retf   0x6c
  40f0fd:	jmp    0x95402a46
  40f102:	sub    ebx,edi
  40f104:	inc    esi
  40f106:	jnp    0x40f0d6
  40f108:	mov    ch,0xb9
  40f10a:	and    bh,cl
  40f10c:	inc    ecx
  40f10e:	and    dl,dh
  40f110:	jmp    FWORD PTR [esi-0x69177b32]
  40f116:	clc    
  40f117:	into   
  40f118:	push   eax
  40f119:	adc    DWORD PTR [edi+0x21],esi
  40f11c:	inc    ecx
  40f11d:	jmp    0x7f21863b
  40f122:	adc    bh,cl
  40f124:	push   0xadc00
  40f129:	adc    dh,0x3e
  40f12c:	sti    
  40f12d:	inc    DWORD PTR [eax]
  40f12f:	add    BYTE PTR [ecx+0x2],bl
  40f132:	shl    BYTE PTR [edx+eiz*1-0x76],0xbd
  40f137:	call   0x240a7b5
  40f13c:	lock repz dec edi
  40f13f:	push   eax
  40f140:	sub    ecx,DWORD PTR [eax-0x49f61004]
  40f146:	push   eax
  40f147:	call   0x41af42
  40f14c:	into   
  40f14d:	add    DWORD PTR [ebp-0x49f604],0xec786950
  40f157:	out    dx,eax
  40f158:	imul   esi,DWORD PTR [esi-0x49cd3018],0x785958ff
  40f162:	call   0x50f73b56
  40f167:	push   DWORD PTR [ebx]
  40f169:	loope  0x40f15a
  40f16b:	jmp    FWORD PTR [ecx-0x1e]
  40f16e:	mov    esp,0xe8b759f4
  40f173:	sbb    DWORD PTR [esi-0x49],edx
  40f176:	(bad)  
  40f177:	jmp    0x40f1b7
  40f179:	add    BYTE PTR [ebp-0x488604],0x50
  40f180:	push   es
  40f181:	pop    es
  40f182:	leave  
  40f183:	add    BYTE PTR [esi],ch
  40f185:	dec    edx
  40f186:	push   eax
  40f187:	lea    esp,[ebx-0x1600104a]
  40f18d:	sbb    edi,edi
  40f18f:	mov    ch,0xa
  40f191:	out    0xff,eax
  40f193:	inc    DWORD PTR [eax]
  40f195:	add    BYTE PTR [esi],al
  40f197:	pop    ecx
  40f198:	hlt    
  40f199:	(bad)  
  40f19a:	jmp    0xaa38e480
  40f19f:	mov    dh,0xff
  40f1a1:	mov    ch,0x47
  40f1a3:	and    dh,0xff
  40f1a6:	clc    
  40f1a7:	xchg   esi,ebx
  40f1a9:	div    eax
  40f1ab:	xchg   dh,dl
  40f1ad:	test   ebx,esi
  40f1af:	jle    0x40f187
  40f1b1:	(bad)  
  40f1b2:	out    dx,al
  40f1b3:	push   cs
  40f1b4:	aad    0xff
  40f1b6:	fcomp  DWORD PTR [esi+0x50]
  40f1b9:	cld    
  40f1ba:	fcomip st,st(5)
  40f1bc:	leave  
  40f1bd:	add    BYTE PTR [edi-0x46],al
  40f1c0:	add    edi,edi
  40f1c2:	cli    
  40f1c3:	das    
  40f1c4:	out    0xff,al
  40f1c6:	mov    eax,0xb0f43347
  40f1cb:	inc    esi
  40f1cc:	imul   eax,DWORD PTR [eax],0xefe754a8
  40f1d2:	mov    al,ds:0x9343eb16
  40f1d7:	push   ds
  40f1d8:	(bad)  
  40f1d9:	(bad)  
  40f1da:	retf   0xe5fb
  40f1dd:	dec    DWORD PTR [eax+0x77b5d68f]
  40f1e3:	push   es
  40f1e4:	(bad)  
  40f1e5:	jmp    FWORD PTR [edi+0x11]
  40f1e8:	int3   
  40f1e9:	add    BYTE PTR [edi+0x5d],al
  40f1ec:	ret    
  40f1ed:	js     0x40f1eb
  40f1ef:	into   
  40f1f0:	(bad)  
  40f1f1:	lock jo 0x40f1ca
  40f1f4:	aad    0xe8
  40f1f6:	clc    
  40f1f7:	into   
  40f1f8:	aad    0xff
  40f1fa:	add    BYTE PTR [eax],al
  40f1fc:	mov    esi,0x48efec5c
  40f201:	scas   al,BYTE PTR es:[edi]
  40f202:	aad    0xb5
  40f204:	das    
  40f205:	(bad)  
  40f206:	aad    0xff
  40f208:	das    
  40f209:	pop    esp
  40f20a:	int    0xff
  40f20c:	xor    BYTE PTR [eax-0x1d79d7d4],al
  40f212:	aam    0xb5
  40f214:	sub    eax,esp
  40f216:	aad    0xff
  40f218:	das    
  40f219:	popa   
  40f21a:	int3   
  40f21b:	add    BYTE PTR [edi+0x9],al
  40f21e:	bnd ret 
  40f220:	xchg   ebx,eax
  40f221:	lock jno 0x40f1ab
  40f224:	out    dx,eax
  40f225:	fcom   QWORD PTR [esi+0x62d9ccd5]
  40f22b:	pop    ss
  40f22c:	pop    ds
  40f22d:	and    DWORD PTR [eax],ebp
  40f22f:	add    al,0xf4
  40f231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f232:	jle    0x40f1c3
  40f234:	jmp    0x40f212
  40f236:	jbe    0x40f20d
  40f238:	out    dx,eax
  40f239:	bound  esp,QWORD PTR [ecx+0x6c7e4704]
  40f23f:	loopne 0x40f219
  40f241:	int3   
  40f242:	pop    esi
  40f243:	xor    al,0xc0
  40f245:	xchg   esi,eax
  40f246:	inc    ebp
  40f247:	in     eax,0xb8
  40f249:	int3   
  40f24a:	inc    ecx
  40f24b:	push   ebx
  40f24c:	jle    0x40f257
  40f24e:	jmp    0xb29279d1
  40f253:	aam    0xda
  40f255:	fld    QWORD PTR [esi-0x2b]
  40f258:	cwde   
  40f259:	loope  0x40f28a
  40f25b:	out    0x90,al
  40f25d:	int3   
  40f25e:	jo     0x40f2df
  40f260:	add    BYTE PTR [eax],al
  40f262:	lahf   
  40f263:	fcomp  QWORD PTR [esi]
  40f265:	aad    0x80
  40f267:	xchg   esi,eax
  40f268:	add    ebp,esp
  40f26a:	js     0x40f238
  40f26c:	add    DWORD PTR [esi],edx
  40f26e:	js     0x40f23c
  40f270:	push   es
  40f271:	mov    eax,ds:0x3a8211b
  40f276:	pusha  
  40f277:	xchg   esi,eax
  40f278:	or     eax,0x1cc58e5
  40f27d:	and    edi,DWORD PTR [edi+0x9]
  40f280:	jmp    0x296798d
  40f285:	mov    edx,edx
  40f287:	loopne 0x40f24f
  40f289:	aam    0x38
  40f28b:	sbb    cl,0x88
  40f28e:	jb     0x40f2ad
  40f290:	adc    DWORD PTR [ebx+0x47],eax
  40f293:	fadd   DWORD PTR [ebp+0xe4dad4]
  40f299:	(bad)  
  40f29a:	repz retf 
  40f29c:	call   0x49ef82
  40f2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a2:	mov    ecx,0x1b9eefd8
  40f2a7:	loope  0x40f303
  40f2a9:	xchg   DWORD PTR [ebx],edx
  40f2ab:	int3   
  40f2ac:	call   DWORD PTR [eax+ebp*8-0x25]
  40f2b0:	inc    DWORD PTR [esi+0x7eee3bdc]
  40f2b6:	sti    
  40f2b7:	sub    ebx,DWORD PTR [esi-0x60]
  40f2ba:	pop    es
  40f2bb:	mov    edi,DWORD PTR ss:[ebp+0x5e]
  40f2bf:	add    eax,ebp
  40f2c1:	push   edx
  40f2c2:	cli    
  40f2c3:	retf   
  40f2c4:	push   DWORD PTR [edx+0x0]
  40f2c7:	add    ah,dh
  40f2c9:	retf   
  40f2ca:	xor    eax,0x4a6c6f
  40f2cf:	pop    esi
  40f2d0:	inc    esi
  40f2d1:	int3   
  40f2d2:	jne    0x40f2c5
  40f2d4:	ret    
  40f2d5:	inc    esi
  40f2d6:	add    al,0x70
  40f2d8:	mov    cl,0x85
  40f2da:	sub    BYTE PTR [eax-0x1a3d3dbc],ch
  40f2e0:	inc    esp
  40f2e1:	mov    edx,DWORD PTR ss:0xb6f8c4c7
  40f2e8:	ret    
  40f2e9:	inc    ebp
  40f2ea:	clc    
  40f2eb:	jmp    0x6a40fc34
  40f2f0:	sbb    DWORD PTR [ecx],eax
  40f2f2:	add    BYTE PTR [ebp+0x76],bh
  40f2f5:	retf   0xed75
  40f2f8:	jnp    0x40f34f
  40f2fa:	or     BYTE PTR [ebx-0xcf91ebc],al
  40f300:	je     0x40f2cd
  40f302:	mov    DWORD PTR [edi+esi*2],ebp
  40f305:	fild   WORD PTR [edi]
  40f307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f308:	mov    cs,ebp
  40f30a:	add    cl,ch
  40f30c:	inc    esp
  40f30d:	or     DWORD PTR [ebx+0x4121bd0c],ecx
  40f313:	add    BYTE PTR [esi],bl
  40f315:	lods   al,BYTE PTR ds:[esi]
  40f316:	adc    ecx,DWORD PTR [ebx+0x473bb96b]
  40f31c:	sub    dh,BYTE PTR [edx]
  40f31e:	or     edi,eax
  40f320:	imul   edi,DWORD PTR [ebp+0x71e0001],0xffffffeb
  40f327:	push   es
  40f328:	jne    0x40f320
  40f32a:	or     bh,bh
  40f32c:	add    BYTE PTR [eax],al
  40f32e:	pop    ebx
  40f32f:	lods   al,BYTE PTR ds:[esi]
  40f330:	cmp    DWORD PTR [ebp-0x2a],0x5
  40f334:	jne    0x40f33e
  40f336:	shl    DWORD PTR [eax],0xfc
  40f339:	call   0x40a9aa
  40f33e:	gs inc eax
  40f340:	clc    
  40f341:	pop    edi
  40f342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f343:	ret    
  40f344:	or     BYTE PTR [eax],al
  40f346:	mov    DWORD PTR [ebx+0x3d],ecx
  40f349:	xchg   BYTE PTR [esi+0x44],dl
  40f34c:	add    bl,ch
  40f34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f34f:	jnp    0xf67ef994
  40f355:	inc    DWORD PTR [ecx]
  40f357:	retf   0x75fe
  40f35a:	pop    edx
  40f35b:	mov    esi,0x44468605
  40f360:	add    BYTE PTR [eax],al
  40f362:	sahf   
  40f363:	push   es
  40f364:	add    BYTE PTR [edi+0x5d],bl
  40f367:	adc    BYTE PTR [ebx+0x6a10b9ec],cl
  40f36d:	add    BYTE PTR [ecx+0x30],dl
  40f370:	or     al,ch
  40f372:	sub    DWORD PTR [edi+edi*8-0x430a01],edi
  40f379:	jne    0x40f3d1
  40f37b:	scas   al,BYTE PTR es:[edi]
  40f37c:	and    al,bh
  40f37e:	outs   dx,BYTE PTR ds:[esi]
  40f37f:	push   es
  40f380:	cmp    eax,0x5f
  40f383:	xor    BYTE PTR [edi],cl
  40f385:	push   edi
  40f386:	fdivrp st(6),st
  40f388:	and    DWORD PTR [ebp+0x36],esi
  40f38b:	mov    edx,0xe147778d
  40f390:	jle    0x40f35a
  40f392:	add    BYTE PTR [eax],al
  40f394:	xor    al,0x84
  40f396:	xor    ch,BYTE PTR [eax+0x32]
  40f399:	clc    
  40f39a:	inc    esp
  40f39b:	add    BYTE PTR [eax-0x48],bh
  40f39e:	outs   dx,BYTE PTR ds:[esi]
  40f39f:	enter  0xe047,0xfe
  40f3a3:	mov    edi,0x40c9e49b
  40f3a8:	inc    ebx
  40f3a9:	loopne 0x40f408
  40f3ab:	pop    esp
  40f3ac:	ins    DWORD PTR es:[edi],dx
  40f3ad:	loopne 0x40f3e9
  40f3af:	call   0x449b7c
  40f3b4:	cmp    al,0xa0
  40f3b6:	push   edi
  40f3b7:	add    eax,0xeb03e001
  40f3bc:	inc    esp
  40f3bd:	mov    ds:0x8870000a,al
  40f3c2:	mov    dl,0xc6
  40f3c4:	inc    edi
  40f3c5:	loopne 0x40f34d
  40f3c7:	clc    
  40f3c8:	inc    esp
  40f3c9:	stos   DWORD PTR es:[edi],eax
  40f3ca:	push   es
  40f3cb:	(bad)  
  40f3cc:	dec    eax
  40f3cd:	loopne 0x40f44d
  40f3cf:	(bad)  
  40f3d0:	sbb    DWORD PTR [ebx-0x1fb43d44],edx
  40f3d6:	cmp    BYTE PTR [ebx-0x338a165],cl
  40f3dc:	int3   
  40f3dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3de:	inc    DWORD PTR [edi+eax*2]
  40f3e1:	mov    al,0x3
  40f3e3:	add    bh,dh
  40f3e5:	inc    edi
  40f3e6:	shl    ebp,0x88
  40f3e9:	and    bh,BYTE PTR [ebp+eax*2-0x7d]
  40f3ed:	jmp    0xffcf:0x6c780c57
  40f3f4:	cli    
  40f3f5:	out    0xdb,eax
  40f3f7:	hlt    
  40f3f8:	add    BYTE PTR [eax],al
  40f3fa:	jb     0x40f3fe
  40f3fc:	sar    bh,cl
  40f3fe:	fisubr DWORD PTR [edi-0x2cb48a2e]
  40f404:	push   edi
  40f405:	cld    
  40f406:	pop    edi
  40f407:	or     BYTE PTR [bx+si],al
  40f40a:	inc    edi
  40f40b:	or     esi,esp
  40f40d:	push   edi
  40f40e:	inc    ebx
  40f40f:	mov    dl,0x79
  40f411:	xlat   BYTE PTR ds:[ebx]
  40f412:	cmp    cl,cl
  40f414:	mov    al,ds:0x3a0943c6
  40f419:	pop    esp
  40f41a:	adc    eax,0x2f0427f2
  40f41f:	frstor [edi-0x56ebb8fc]
  40f425:	pop    eax
  40f426:	xor    eax,0xe95c9194
  40f42b:	icebp  
  40f42c:	daa    
  40f42d:	add    al,0x94
  40f42f:	mov    cl,0xb1
  40f431:	retf   0x947
  40f434:	dec    edx
  40f435:	rcr    DWORD PTR [edi],cl
  40f437:	dec    edx
  40f438:	jmp    0x729ff869
  40f43d:	loopne 0x40f4b8
  40f43f:	pop    esp
  40f440:	push   ss
  40f441:	rcl    DWORD PTR [edx+0x11],1
  40f444:	sbb    DWORD PTR [edi+0x73e90a09],0x8dcc93c
  40f44e:	and    BYTE PTR [edi+edi*4-0x46],ah
  40f452:	test   DWORD PTR [ecx],edx
  40f454:	jmp    0x795226d5
  40f459:	jge    0x40f3ea
  40f45b:	cdq    
  40f45c:	jb     0x40f4b5
  40f45e:	add    BYTE PTR [eax],al
  40f460:	push   ebx
  40f461:	hlt    
  40f462:	sub    al,dl
  40f464:	fmulp  st(0),st
  40f466:	rcl    DWORD PTR ss:[eax-0x485dc467],1
  40f46d:	mov    esi,esp
  40f46f:	add    edi,ebx
  40f471:	and    DWORD PTR [esi+0x2f8e6f34],esi
  40f477:	add    al,0x47
  40f479:	adc    al,0x29
  40f47b:	push   edi
  40f47c:	inc    eax
  40f47d:	push   0xcb8e31a2
  40f482:	icebp  
  40f483:	add    ecx,esi
  40f485:	verw   WORD PTR [edx+0x7d]
  40f489:	or     eax,0xabb17eb
  40f48e:	add    cl,ch
  40f490:	inc    esp
  40f491:	push   0xcafc3f5b
  40f496:	or     cl,ch
  40f498:	jns    0x40f42e
  40f49a:	in     al,dx
  40f49b:	bound  eax,QWORD PTR [ecx+0x78a90b11]
  40f4a1:	push   cs
  40f4a2:	add    BYTE PTR [ecx],0x43
  40f4a5:	or     DWORD PTR ds:[ecx+0x44],esi
  40f4a9:	or     DWORD PTR [eax],eax
  40f4ab:	jmp    0xe945bf7d
  40f4b0:	arpl   bx,bx
  40f4b2:	jmp    0x40f4aa
  40f4b4:	les    eax,FWORD PTR [eax]
  40f4b6:	pop    esp
  40f4b7:	sbb    eax,0xbe388948
  40f4bc:	xchg   ecx,eax
  40f4bd:	adc    BYTE PTR [edx+0x944e8],bh
  40f4c3:	xchg   edx,eax
  40f4c4:	add    BYTE PTR [eax],al
  40f4c6:	inc    ecx
  40f4c7:	add    DWORD PTR [eax],0xffffffe9
  40f4ca:	inc    esp
  40f4cb:	or     DWORD PTR [eax+0x69],eax
  40f4ce:	cmp    al,0x9
  40f4d0:	jne    0x40f51f
  40f4d2:	inc    ebx
  40f4d3:	retf   
  40f4d4:	leave  
  40f4d5:	sub    eax,DWORD PTR [eax+0x9]
  40f4d8:	push   ebp
  40f4d9:	bound  edx,QWORD PTR [eax+0x2bba565f]
  40f4df:	dec    esi
  40f4e0:	or     al,0xec
  40f4e2:	inc    esp
  40f4e3:	or     eax,0xa8d5e900
  40f4e8:	push   eax
  40f4e9:	inc    ecx
  40f4ea:	fidivr DWORD PTR [edi+edi*8-0x743ef4d2]
  40f4f1:	inc    ecx
  40f4f2:	add    edi,DWORD PTR [esi]
  40f4f4:	or     BYTE PTR [edx+0x39],dh
  40f4f7:	adc    eax,0x51a8ebeb
  40f4fc:	or     esp,DWORD PTR [eax]
  40f4fe:	adc    BYTE PTR [esi],cl
  40f500:	add    BYTE PTR [eax],0x88
  40f503:	lds    esi,FWORD PTR [ebp+esi*8+0x55]
  40f507:	xor    BYTE PTR [edx+eax*1+0x2],0x3
  40f50c:	sub    eax,eax
  40f50e:	add    al,0x8f
  40f510:	leave  
  40f511:	jne    0x40f523
  40f513:	inc    ebx
  40f514:	ret    
  40f515:	pop    ebx
  40f516:	js     0x40f50e
  40f518:	enter  0x26c2,0xb
  40f51c:	push   ebx
  40f51d:	push   esi
  40f51e:	xlat   BYTE PTR ds:[ebx]
  40f51f:	adc    DWORD PTR [eax],eax
  40f521:	add    BYTE PTR [esi],ch
  40f523:	cmp    esi,DWORD PTR [ebx]
  40f525:	sar    BYTE PTR [esi+0x1a],cl
  40f528:	fist   DWORD PTR [eax+0x3dca0000]
  40f52e:	movzx  ebx,dh
  40f531:	cmp    eax,0x607e2b3c
  40f536:	push   es
  40f537:	nop
  40f538:	ins    DWORD PTR es:[edi],dx
  40f539:	retf   
  40f53a:	ds nop
  40f53c:	sbb    eax,0x53902f19
  40f541:	seto   BYTE PTR [ebx+0x439016ac]
  40f548:	call   0x3916:0xe47c901a
  40f54f:	nop
  40f550:	fst    DWORD PTR [ecx]
  40f552:	add    al,0x4
  40f554:	lods   eax,DWORD PTR ds:[esi]
  40f555:	jp     0x40f59a
  40f557:	cmp    al,0xef
  40f559:	cmp    bh,BYTE PTR [ebx+ecx*1+0x5a]
  40f55d:	repz (bad) 
  40f55f:	jg     0x40f501
  40f561:	es inc ecx
  40f563:	nop
  40f564:	lods   eax,DWORD PTR ds:[esi]
  40f565:	jp     0x40f5aa
  40f567:	cmp    al,0x8f
  40f569:	cmp    bh,BYTE PTR [edx+ecx*1-0x66]
  40f56d:	push   eax
  40f56e:	nop
  40f56f:	jg     0x40f514
  40f571:	es inc edi
  40f573:	add    edi,DWORD PTR [esi]
  40f575:	dec    edx
  40f576:	rol    edx,0x60
  40f579:	test   al,0xb1
  40f57b:	rol    DWORD PTR [edi-0x16],0x5
  40f57f:	mov    eax,DWORD PTR [ebp+0x6fc1bbe7]
  40f585:	mov    eax,0xfbcc903a
  40f58a:	jae    0x40f5ea
  40f58c:	in     al,dx
  40f58d:	repnz cmp BYTE PTR [ebx-0x5ca50000],cl
  40f594:	ss push esi
  40f596:	inc    ebx
  40f597:	cmp    ebx,DWORD PTR [eax+0x8]
  40f59a:	xlat   BYTE PTR ds:[ebx]
  40f59b:	cmp    dl,BYTE PTR [eax+0x10]
  40f59e:	xlat   BYTE PTR ds:[ebx]
  40f59f:	sub    al,BYTE PTR [eax+0xc]
  40f5a2:	xlat   BYTE PTR ds:[ebx]
  40f5a3:	and    ch,BYTE PTR [ebx+0x346065e3]
  40f5a9:	nop
  40f5aa:	das    
  40f5ab:	add    cl,bh
  40f5ad:	call   DWORD PTR [eax]
  40f5af:	pusha  
  40f5b0:	mov    cl,cl
  40f5b2:	mov    DWORD PTR [eax-0x48103e67],ebp
  40f5b8:	jae    0x40f5fd
  40f5ba:	in     eax,0x67
  40f5bc:	jae    0x40f617
  40f5be:	xlat   BYTE PTR ds:[ebx]
  40f5bf:	xor    al,ch
  40f5c1:	add    al,0xd7
  40f5c3:	xor    bl,ah
  40f5c5:	add    al,0xb7
  40f5c7:	push   cs
  40f5c8:	scas   al,BYTE PTR es:[edi]
  40f5c9:	nop
  40f5ca:	int3   
  40f5cb:	jb     0x40f640
  40f5cd:	pop    esi
  40f5ce:	jo     0x40f5eb
  40f5d0:	mov    ebp,0x38b03bc2
  40f5d5:	mov    esi,DWORD PTR [ebx-0x461338d0]
  40f5db:	data16 into 
  40f5dd:	push   ebx
  40f5de:	pop    esp
  40f5df:	sti    
  40f5e0:	jg     0x40f627
  40f5e2:	stos   DWORD PTR es:[edi],eax
  40f5e3:	jg     0x40f640
  40f5e5:	cli    
  40f5e6:	outs   dx,DWORD PTR ds:[esi]
  40f5e7:	jno    0x40f5ec
  40f5e9:	call   DWORD PTR [edx-0x49]
  40f5ec:	sbb    al,0x41
  40f5ee:	inc    edi
  40f5ef:	dec    eax
  40f5f0:	mov    BYTE PTR es:[edi-0x50],0xfa
  40f5f5:	mov    edi,0x8fa0000
  40f5fa:	retf   
  40f5fb:	into   
  40f5fc:	repnz sbb BYTE PTR [esi],bl
  40f5ff:	pop    eax
  40f600:	inc    ebx
  40f601:	xor    ebp,edx
  40f603:	pop    ecx
  40f604:	inc    edi
  40f605:	(bad)  
  40f606:	xchg   esp,eax
  40f607:	sti    
  40f608:	popa   
  40f609:	cmp    eax,DWORD PTR ds:0xe9cf33db
  40f60f:	add    edi,DWORD PTR [ecx+ecx*8]
  40f612:	jl     0x40f618
  40f614:	add    al,0xc6
  40f616:	je     0x40f5e7
  40f618:	das    
  40f619:	mov    ch,0xac
  40f61b:	add    al,0x47
  40f61d:	adc    dl,al
  40f61f:	std    
  40f620:	retf   
  40f621:	into   
  40f622:	jmp    0x64d73d2a
  40f627:	shl    DWORD PTR [ecx],1
  40f629:	(bad)
  40f62c:	scas   eax,DWORD PTR es:[edi]
  40f62d:	or     eax,0xb14703e8
  40f632:	xchg   ebx,eax
  40f633:	enter  0x947,0xe2
  40f637:	ret    
  40f638:	push   eax
  40f639:	lea    edx,[ebp+0x4]
  40f63c:	inc    edi
  40f63d:	or     esp,ebx
  40f63f:	pop    es
  40f640:	inc    esi
  40f641:	or     ecx,ebp
  40f643:	cld    
  40f644:	shr    DWORD PTR [edx-0x17],0x3
  40f648:	inc    edi
  40f649:	das    
  40f64a:	jmp    0x7ff9b8cd
  40f64f:	int    0xd0
  40f651:	pop    ecx
  40f652:	or     DWORD PTR [ebp+0x7ee90a03],0xcd67b8ca
  40f65c:	add    BYTE PTR [eax],al
  40f65e:	mov    eax,0xb1445159
  40f663:	les    edx,FWORD PTR [esi-0x7]
  40f666:	call   0xc79ce3a9
  40f66b:	icebp  
  40f66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66d:	add    ecx,edx
  40f66f:	mov    ?,WORD PTR [edx]
  40f671:	into   
  40f672:	nop
  40f673:	les    eax,FWORD PTR [eax]
  40f675:	cdq    
  40f676:	ins    BYTE PTR es:[edi],dx
  40f677:	loop   0x40f66f
  40f679:	cs xchg edx,eax
  40f67b:	les    esi,FWORD PTR [ebp-0xf]
  40f67e:	xor    al,0xb1
  40f680:	and    al,0x16
  40f682:	add    ah,0xeb
  40f685:	out    0x7b,al
  40f687:	or     BYTE PTR ds:[eax+ecx*8-0x48],bl
  40f68c:	inc    BYTE PTR [esi]
  40f68e:	mov    bl,BYTE PTR [ecx-0x18]
  40f691:	ds jns 0x40f658
  40f694:	jmp    DWORD PTR [eax-0x40]
  40f697:	mov    ch,0xfe
  40f699:	out    dx,al
  40f69a:	adc    ebp,DWORD PTR [edi]
  40f69c:	add    BYTE PTR [ebx+0x43],dl
  40f69f:	das    
  40f6a0:	add    dl,BYTE PTR [ebx+0x4b]
  40f6a3:	das    
  40f6a4:	add    eax,DWORD PTR [ecx+0x43]
  40f6a7:	or     DWORD PTR [eax],eax
  40f6a9:	test   eax,0xc7ec7e13
  40f6ae:	or     eax,esp
  40f6b0:	call   0x49fe82
  40f6b5:	pusha  
  40f6b6:	add    ecx,0xc2f33540
  40f6bc:	jne    0x40f6b7
  40f6be:	or     edi,DWORD PTR [esi]
  40f6c0:	or     al,0x9e
  40f6c2:	add    BYTE PTR [eax],al
  40f6c4:	cdq    
  40f6c5:	shr    eax,0xc7
  40f6c8:	or     al,ah
  40f6ca:	jmp    DWORD PTR [edx-0x54]
  40f6cd:	ret    
  40f6ce:	jne    0x40f651
  40f6d0:	cld    
  40f6d1:	faddp  st(3),st
  40f6d3:	jmp    0xfd1c071c
  40f6d8:	iret   
  40f6d9:	ret    0x7db5
  40f6dc:	xchg   edx,eax
  40f6dd:	ret    
  40f6de:	call   DWORD PTR [ecx+0x49]
  40f6e1:	int    0x0
  40f6e3:	jmp    0x582d746b
  40f6e8:	jnp    0x40f6ad
  40f6ea:	call   0x46d10
  40f6ef:	add    BYTE PTR ds:0x5cc95bc9,dl
  40f6f5:	(bad)  
  40f6f6:	call   DWORD PTR [ebp+eiz*1-0x1c]
  40f6fa:	add    esp,0xffffd642
  40f700:	mov    ebp,0x510c75d4
  40f705:	pop    ebx
  40f706:	or     BYTE PTR [eax+0x54],ch
  40f709:	and    BYTE PTR [ecx+0x0],al
  40f70c:	push   ecx
  40f70d:	sbb    ecx,DWORD PTR [edi]
  40f70f:	sub    DWORD PTR [edi+0x5bb9e807],ebp
  40f715:	iret   
  40f716:	dec    DWORD PTR [ebx]
  40f718:	push   ds
  40f719:	lds    eax,FWORD PTR [edx+ebx*8+0x2b00072e]
  40f720:	add    eax,0x10ef8541
  40f725:	iret   
  40f726:	call   DWORD PTR [eax+0x0]
  40f729:	add    BYTE PTR [esi+0x2e000109],al
  40f72f:	(bad)  
  40f731:	ret    
  40f732:	cs pop es
  40f734:	or     eax,eax
  40f736:	and    DWORD PTR [ebx-0x43],eax
  40f739:	add    BYTE PTR [esi],bl
  40f73b:	pop    es
  40f73c:	cmp    eax,0x6ef04
  40f741:	punpckhwd mm3,QWORD PTR [ebx+0x41de0000]
  40f748:	inc    ebp
  40f749:	cld    
  40f74a:	cs in  eax,0xba
  40f74d:	jmp    0x85cec623
  40f752:	mov    cl,0xcf
  40f754:	(bad)  
  40f755:	jmp    FWORD PTR [esi]
  40f757:	in     eax,0x4f
  40f759:	std    
  40f75a:	push   ecx
  40f75b:	into   
  40f75c:	or     eax,eax
  40f75e:	mov    ebx,0x568067aa
  40f763:	dec    esp
  40f764:	add    BYTE PTR [ebp-0x121d5],cl
  40f76a:	inc    edi
  40f76b:	pop    ebx
  40f76c:	xor    al,0xe8
  40f76e:	scas   eax,DWORD PTR es:[edi]
  40f76f:	pop    ebp
  40f770:	retf   
  40f771:	call   FWORD PTR [eax-0x60b0047b]
  40f777:	mov    edi,0x4788ffd1
  40f77c:	sti    
  40f77d:	(bad)  
  40f77e:	cli    
  40f77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f780:	js     0x40f707
  40f782:	push   0x17ffcaea
  40f787:	sbb    BYTE PTR [edx+0x341b68f5],bh
  40f78d:	inc    DWORD PTR [eax]
  40f78f:	add    dl,bl
  40f791:	adc    esi,DWORD PTR [eax+ebp*8]
  40f794:	loope  0x40f7ac
  40f796:	retf   
  40f797:	(bad)  
  40f798:	cmp    al,0xf0
  40f79a:	dec    edi
  40f79b:	push   ebx
  40f79c:	dec    eax
  40f79d:	inc    ebp
  40f79e:	(bad)  
  40f79f:	call   0xc00c4
  40f7a4:	into   
  40f7a5:	hlt    
  40f7a6:	retf   
  40f7a7:	xor    DWORD PTR [edx-0x7a8bfc58],0x2d
  40f7ae:	inc    eax
  40f7af:	hlt    
  40f7b0:	ja     0x40f785
  40f7b2:	push   eax
  40f7b3:	cld    
  40f7b4:	das    
  40f7b5:	sbb    al,al
  40f7b7:	add    BYTE PTR [edi+0x2d],al
  40f7ba:	ret    
  40f7bb:	js     0x40f812
  40f7bd:	jnp    0x40f80f
  40f7bf:	hlt    
  40f7c0:	out    dx,eax
  40f7c1:	lods   eax,DWORD PTR ds:[esi]
  40f7c2:	mov    BYTE PTR [eax],0x47
  40f7c5:	mov    bh,0xc3
  40f7c7:	je     0x40f7f2
  40f7c9:	add    bl,cl
  40f7cb:	jne    0x40f7bc
  40f7cd:	xchg   DWORD PTR ds:0x7e92e0f2,eax
  40f7d3:	fdivr  DWORD PTR [edi-0x75]
  40f7d6:	push   eax
  40f7d7:	clc    
  40f7d8:	je     0x40f7fa
  40f7da:	fsubr  QWORD PTR [edx*8+0x3affca3a]
  40f7e1:	cmp    al,0xdb
  40f7e3:	out    0x85,al
  40f7e5:	or     cl,ch
  40f7e7:	add    edi,DWORD PTR [ebx+ecx*2-0x3ecd3513]
  40f7ee:	add    bp,WORD PTR [edi+0xca58cf]
  40f7f5:	add    BYTE PTR [eax-0x6038433f],bl
  40f7fb:	repnz dec edi
  40f7fd:	retf   0x8d88
  40f800:	sub    ch,BYTE PTR [esi]
  40f802:	mov    es,esi
  40f804:	loope  0x40f809
  40f806:	adc    cl,BYTE PTR [esi+0x43bc3215]
  40f80c:	icebp  
  40f80d:	ficom  WORD PTR [esi+0x5a]
  40f810:	add    al,BYTE PTR [ecx]
  40f812:	int    0x49
  40f814:	call   0x698b3894
  40f819:	or     al,BYTE PTR [edi+0x3c]
  40f81c:	hlt    
  40f81d:	sub    eax,edi
  40f81f:	dec    ecx
  40f820:	imul   ecx,DWORD PTR [edx],0x83033567
  40f826:	js     0x40f836
  40f828:	pop    ebp
  40f829:	ffreep st(7)
  40f82b:	add    bl,dh
  40f82d:	dec    edi
  40f82e:	daa    
  40f82f:	mov    dl,BYTE PTR [esi]
  40f831:	sti    
  40f832:	xchg   esp,eax
  40f833:	in     al,0x62
  40f835:	inc    edi
  40f836:	dec    edi
  40f837:	sar    BYTE PTR [esp+edi*8],0x28
  40f83b:	xchg   DWORD PTR [ebx-0x4e73b8fc],ebp
  40f841:	add    al,0x79
  40f843:	call   0xc08040b0
  40f848:	leave  
  40f849:	dec    edi
  40f84a:	pop    edx
  40f84b:	mov    DWORD PTR ds:0x1d0ee80c,ebx
  40f851:	cli    
  40f852:	pusha  
  40f853:	cmp    eax,0x354dc8d1
  40f858:	out    dx,al
  40f859:	add    DWORD PTR [eax],0x0
  40f85c:	push   ebx
  40f85d:	add    DWORD PTR [esi-0x5],edi
  40f860:	push   ebx
  40f861:	or     BYTE PTR [eax],al
  40f863:	scas   eax,DWORD PTR es:[edi]
  40f864:	pop    es
  40f865:	add    edi,edi
  40f867:	jmp    0xec2c0407
  40f86c:	xchg   ebx,eax
  40f86d:	int    0x5f
  40f86f:	xor    BYTE PTR [ecx+0x23bc0005],al
  40f875:	lods   eax,DWORD PTR ds:[esi]
  40f876:	and    DWORD PTR ds:0x4835ca7,0xffffffb8
  40f87d:	out    dx,eax
  40f87e:	inc    eax
  40f87f:	jmp    0x6a532dc8
  40f884:	dec    eax
  40f885:	jp     0x40f8b5
  40f887:	test   al,0x44
  40f889:	or     DWORD PTR [eax+esi*8-0x35],esi
  40f88d:	(bad)  
  40f88e:	cwde   
  40f88f:	iret   
  40f890:	add    eax,0x479c0009
  40f895:	hlt    
  40f896:	mov    edi,0x8cb9db2
  40f89b:	jmp    0xa508dcd3
  40f8a0:	js     0x40f8ab
  40f8a2:	add    cl,ch
  40f8a4:	inc    esp
  40f8a5:	mov    es,WORD PTR [ebp-0xf]
  40f8a8:	je     0x40f86a
  40f8aa:	jne    0x40f89d
  40f8ac:	xchg   edx,eax
  40f8ad:	or     edi,edi
  40f8af:	hlt    
  40f8b0:	shr    esi,1
  40f8b2:	inc    eax
  40f8b3:	jmp    0x32b578db
  40f8b8:	sti    
  40f8b9:	ss ret 0x44e9
  40f8bd:	xchg   esp,eax
  40f8be:	shr    BYTE PTR [eax+eax*1+0x0],1
  40f8c2:	dec    ecx
  40f8c3:	mov    ch,0x50
  40f8c5:	inc    ebx
  40f8c6:	sub    ebx,DWORD PTR [ebx-0x1]
  40f8c9:	aam    0x6d
  40f8cb:	out    dx,eax
  40f8cc:	inc    eax
  40f8cd:	jmp    0xd0b578c5
  40f8d2:	pop    es
  40f8d3:	inc    esi
  40f8d4:	in     al,0xe8
  40f8d6:	inc    esp
  40f8d7:	or     DWORD PTR [eax],eax
  40f8d9:	mov    cs,WORD PTR [ecx+0x23008fc1]
  40f8df:	(bad)  
  40f8e1:	jne    0x40f92d
  40f8e3:	inc    ecx
  40f8e4:	inc    ebp
  40f8e5:	in     al,dx
  40f8e6:	sub    eax,0xb2000c47
  40f8eb:	ret    0x45c6
  40f8ee:	push   cs
  40f8ef:	push   es
  40f8f0:	add    BYTE PTR [eax],al
  40f8f2:	sahf   
  40f8f3:	fadd   QWORD PTR [edi]
  40f8f5:	(bad)  
  40f8f6:	repz fild DWORD PTR [eax]
  40f8f9:	add    BYTE PTR [esi+0x74006a0b],ch
  40f8ff:	or     ebp,DWORD PTR [edx+0x10]
  40f902:	sbb    edi,edi
  40f904:	jecxz  0x40f956
  40f906:	test   BYTE PTR [ebx],cl
  40f908:	push   DWORD PTR [ebp+0x32]
  40f90b:	rcl    DWORD PTR ds:0x4a98b1,1
  40f911:	or     ebx,DWORD PTR [esi]
  40f913:	push   eax
  40f914:	add    DWORD PTR [ebx-0x13],eax
  40f917:	inc    esi
  40f918:	hlt    
  40f919:	add    BYTE PTR [edx+0x5275fec3],dh
  40f91f:	loop   0x40f8bb
  40f921:	rcr    DWORD PTR [esi+0xb],0x8b
  40f925:	ret    
  40f926:	add    BYTE PTR [eax],al
  40f928:	aad    0x83
  40f92a:	ret    0x2e08
  40f92d:	lock mov ch,ah
  40f930:	sub    DWORD PTR [ecx+0x8],ebx
  40f933:	call   0x41bdea
  40f938:	outs   dx,BYTE PTR ds:[esi]
  40f939:	cmc    
  40f93a:	out    0xa0,eax
  40f93c:	inc    dh
  40f93e:	call   DWORD PTR [eax+0x9]
  40f941:	pop    ecx
  40f942:	or     BYTE PTR [eax-0xa],dl
  40f945:	rol    DWORD PTR fs:[eax],0xee
  40f949:	repnz enter 0xe2c2,0xa
  40f94e:	push   ebp
  40f94f:	mov    ebx,edx
  40f951:	mov    al,ah
  40f953:	cld    
  40f954:	sub    eax,0x47087d8a
  40f959:	mov    al,0x50
  40f95b:	pop    es
  40f95c:	sub    al,0x70
  40f95e:	sub    ecx,ecx
  40f960:	add    eax,0xec2b03ad
  40f965:	sbb    al,BYTE PTR [edx+ebp*2]
  40f968:	inc    edi
  40f969:	or     al,BYTE PTR [edx+ebp*2]
  40f96c:	inc    edi
  40f96d:	or     al,bh
  40f96f:	(bad)  
  40f970:	cmp    bh,BYTE PTR [eax-0x4fe2ffa7]
  40f976:	fcmovnb st,st(4)
  40f978:	xchg   BYTE PTR [eax-0x2b78f4fd],dh
  40f97e:	adc    cl,BYTE PTR [ecx+0x75c7440a]
  40f984:	mov    ebx,DWORD PTR [eax+0x2e]
  40f987:	lock xor bh,0xfa
  40f98b:	mov    edi,0x3f30000
  40f990:	jnp    0x40f96a
  40f992:	(bad)  [edi-0x6a97ffa7]
  40f998:	(bad)  
  40f999:	push   ebx
  40f99a:	in     eax,dx
  40f99b:	push   ss
  40f99c:	(bad)  
  40f99d:	jne    0x40f9ee
  40f99f:	mov    al,BYTE PTR [ebx]
  40f9a1:	push   0x47
  40f9a3:	sbb    BYTE PTR [ebp-0x3f],ch
  40f9a6:	inc    edi
  40f9a7:	mov    al,0xfa
  40f9a9:	mov    edi,0xe832a8ba
  40f9ae:	pop    esi
  40f9af:	rol    dh,0xff
  40f9b2:	pop    esp
  40f9b3:	retf   
  40f9b4:	jp     0x40f979
  40f9b6:	mov    WORD PTR [ecx-0x3f],?
  40f9b9:	add    al,0x47
  40f9bb:	std    
  40f9bc:	jp     0x40f9aa
  40f9be:	les    esp,FWORD PTR [ebx-0x29]
  40f9c1:	push   eax
  40f9c2:	je     0x40f9e5
  40f9c4:	xor    dl,BYTE PTR [edi+0x71]
  40f9c7:	cmp    eax,DWORD PTR [eax+0xc]
  40f9ca:	shl    BYTE PTR [edi],cl
  40f9cc:	add    DWORD PTR [eax],0x47
  40f9cf:	mov    al,0x78
  40f9d1:	adc    al,0xa
  40f9d3:	or     ecx,ebp
  40f9d5:	add    eax,DWORD PTR [edi+0x9]
  40f9d8:	jb     0x40f985
  40f9da:	int3   
  40f9db:	shr    BYTE PTR [eax+0x249041db],1
  40f9e1:	fdivr  DWORD PTR [ebx+edi*1-0x3931fd0f]
  40f9e8:	out    0x83,al
  40f9ea:	les    ebp,FWORD PTR [ecx-0x7643e54a]
  40f9f0:	jb     0x40f9fd
  40f9f2:	add    BYTE PTR [eax],al
  40f9f4:	xor    eax,0xefcaea0f
  40f9f9:	dec    eax
  40f9fa:	jmp    0x2a334102
  40f9ff:	add    bl,BYTE PTR [edi-0x41285b43]
  40fa05:	push   ebp
  40fa06:	add    DWORD PTR [ecx+0x12],edi
  40fa09:	mov    ecx,0xea47fd26
  40fa0e:	stos   DWORD PTR es:[edi],eax
  40fa0f:	pop    esi
  40fa10:	add    BYTE PTR [esi-0x1b],0x7c
  40fa14:	pushf  
  40fa15:	retf   
  40fa16:	push   ss
  40fa17:	mov    esi,0xa71f1101
  40fa1c:	popf   
  40fa1d:	mov    al,ds:0x374b3d2e
  40fa22:	mov    ch,0x11
  40fa24:	aaa    
  40fa25:	mov    esi,0x3348d77c
  40fa2a:	icebp  
  40fa2b:	js     0x40f9b7
  40fa2d:	mov    ecx,0x952db99
  40fa32:	jmp    0xedc42d3a
  40fa37:	add    eax,DWORD PTR [edi+0x9]
  40fa3a:	jb     0x40fa83
  40fa3c:	aaa    
  40fa3d:	mov    eax,0x5f78268c
  40fa42:	xor    BYTE PTR [ecx],ch
  40fa44:	outs   dx,DWORD PTR ds:[esi]
  40fa45:	shr    BYTE PTR [ebx+0x725608f8],cl
  40fa4b:	fadd   st,st(4)
  40fa4d:	lds    eax,FWORD PTR [eax]
  40fa4f:	mov    ch,0x29
  40fa51:	push   esp
  40fa52:	push   eax
  40fa53:	sbb    dh,BYTE PTR [edi+edx*2]
  40fa56:	mov    ebx,DWORD PTR [eax+eax*1]
  40fa59:	add    bh,ch
  40fa5b:	(bad)  
  40fa5c:	jge    0x40fa4f
  40fa5e:	pop    edi
  40fa5f:	inc    esi
  40fa60:	adc    BYTE PTR [eax+0x18],ah
  40fa63:	mov    ebp,0x5c4fe68b
  40fa68:	add    al,0x72
  40fa6a:	adc    dl,BYTE PTR [ecx]
  40fa6c:	mov    edx,DWORD PTR [esi]
  40fa6e:	mov    edi,0x8ebaf98f
  40fa73:	call   0x8ebfb572
  40fa78:	test   dh,ch
  40fa7a:	cld    
  40fa7b:	fs push 0x36
  40fa7e:	inc    esi
  40fa7f:	add    eax,ecx
  40fa81:	sub    DWORD PTR [edx+0x7e62c307],ebx
  40fa87:	clc    
  40fa88:	clc    
  40fa89:	or     bh,BYTE PTR [ebx-0x8]
  40fa8c:	clc    
  40fa8d:	ins    BYTE PTR es:[edi],dx
  40fa8e:	not    DWORD PTR [ebx]
  40fa90:	push   esi
  40fa91:	jle    0x40fa4d
  40fa93:	mov    cl,0x3
  40fa95:	xchg   edi,eax
  40fa96:	jo     0x40fa61
  40fa98:	ret    0x47f5
  40fa9b:	(bad)  [ebx+0x23c03621]
  40faa1:	adc    esi,DWORD PTR [esi]
  40faa3:	ror    BYTE PTR [ebp+0x70df5a5d],0xc9
  40faaa:	sub    BYTE PTR [eax],cl
  40faac:	dec    esi
  40faad:	icebp  
  40faae:	add    eax,0xfeea11ca
  40fab3:	(bad)  
  40fab4:	cli    
  40fab5:	mov    edx,0x1af8e7fc
  40faba:	sti    
  40fabb:	lea    ebx,[esi+edi*8-0x35060000]
  40fac2:	mov    ebp,0xc5b47a8
  40fac7:	test   al,0x7
  40fac9:	adc    eax,DWORD PTR [ebx]
  40facb:	add    bh,ah
  40facd:	inc    eax
  40face:	stc    
  40facf:	xor    eax,DWORD PTR [ecx+ebp*8]
  40fad2:	cli    
  40fad3:	xor    esi,DWORD PTR [edx+esi*1-0x4a8ef87c]
  40fada:	jnp    0x40fad1
  40fadc:	(bad)  
  40fade:	xadd   DWORD PTR [esi+0x65c302bc],ebp
  40fae5:	shl    DWORD PTR [ebx],1
  40fae7:	stc    
  40fae8:	std    
  40fae9:	iret   
  40faea:	xor    edi,ecx
  40faec:	push   ebx
  40faed:	sub    al,0x17
  40faef:	sub    ch,al
  40faf1:	cmp    al,0x47
  40faf3:	add    ebx,DWORD PTR [eax-0x47]
  40faf6:	rol    dl,0x92
  40faf9:	or     al,dl
  40fafb:	mov    esp,DWORD PTR [esi]
  40fafd:	sbb    ebx,edi
  40faff:	and    esp,DWORD PTR [ecx+ebx*1]
  40fb02:	sti    
  40fb03:	lea    esp,[edx]
  40fb05:	mov    ch,0x12
  40fb07:	inc    esi
  40fb08:	cs popf 
  40fb0a:	add    ecx,DWORD PTR [esi-0x5a]
  40fb0d:	mov    cl,0x11
  40fb10:	ins    DWORD PTR es:[edi],dx
  40fb11:	or     DWORD PTR [ebx+0x23cf7dfa],0x8dcf6df9
  40fb1b:	pushf  
  40fb1c:	inc    ecx
  40fb1d:	or     BYTE PTR [ebp+0x5e094346],dl
  40fb23:	sbb    al,0x0
  40fb25:	add    BYTE PTR [edi],ch
  40fb27:	leave  
  40fb28:	push   ss
  40fb29:	add    edx,DWORD PTR [edi]
  40fb2b:	inc    ecx
  40fb2c:	stc    
  40fb2d:	xor    eax,DWORD PTR [ecx+ebp*8-0x6]
  40fb31:	xor    eax,DWORD PTR [ebx+esi*1-0x7c]
  40fb35:	pop    es
  40fb36:	push   esi
  40fb37:	sub    BYTE PTR cs:[ecx+0x1d],0xfd
  40fb3c:	pop    ds
  40fb3d:	rcr    esi,0xe
  40fb40:	add    eax,ebx
  40fb42:	xchg   ebp,eax
  40fb43:	jp     0x40fb78
  40fb45:	stc    
  40fb46:	inc    edi
  40fb47:	bsf    esi,DWORD PTR [ebx]
  40fb4a:	push   cs
  40fb4b:	pop    esi
  40fb4c:	cwde   
  40fb4d:	pop    ss
  40fb4e:	fdivr  DWORD PTR [ebx+0x48]
  40fb51:	mov    eax,DWORD PTR [edx+edx*1-0x18]
  40fb55:	rol    BYTE PTR ds:0xbcd006a5,0x78
  40fb5c:	idiv   edx
  40fb5e:	and    al,0x66
  40fb60:	idiv   edx
  40fb62:	shr    BYTE PTR [ebx+edx*1],cl
  40fb65:	mov    cl,0x7c
  40fb67:	xchg   ebx,eax
  40fb68:	ret    
  40fb69:	add    eax,DWORD PTR [ecx+0x36c1c4c8]
  40fb6f:	scas   eax,DWORD PTR es:[edi]
  40fb70:	int    0x8b
  40fb72:	mov    ebp,0xbe23bb7f
  40fb77:	jg     0x40fb34
  40fb79:	(bad)  
  40fb7a:	ror    ebx,cl
  40fb7c:	adc    edi,0x5e07390b
  40fb82:	jae    0x40fb75
  40fb84:	(bad)  
  40fb85:	push   ss
  40fb86:	inc    esp
  40fb87:	stc    
  40fb88:	mov    ?,ecx
  40fb8a:	add    BYTE PTR [eax],al
  40fb8c:	push   esp
  40fb8d:	push   esi
  40fb8e:	out    0xfa,eax
  40fb90:	push   esp
  40fb91:	inc    esi
  40fb92:	xchg   ecx,eax
  40fb93:	test   BYTE PTR [eax+0xe],cl
  40fb96:	adc    eax,0x49aeec90
  40fb9b:	xor    BYTE PTR [esi-0x7bfcf510],al
  40fba1:	aaa    
  40fba2:	mov    edi,0xbbcf5e33
  40fba7:	xor    ebx,DWORD PTR [esi+0x25]
  40fbaa:	cwde   
  40fbab:	pop    ss
  40fbac:	mov    ah,0xa1
  40fbae:	fwait
  40fbaf:	std    
  40fbb0:	inc    esp
  40fbb1:	call   0xd006:0xac05c0f7
  40fbb8:	int3   
  40fbb9:	mov    bh,0xf6
  40fbbb:	cli    
  40fbbc:	fs mov dh,0xf6
  40fbbf:	cli    
  40fbc0:	mov    edx,0xd1127508
  40fbc5:	inc    ebp
  40fbc6:	pusha  
  40fbc7:	push   0x44
  40fbc9:	dec    ebx
  40fbca:	adc    ebp,eax
  40fbcc:	push   es
  40fbcd:	sbb    dl,ch
  40fbcf:	int    0xbc
  40fbd1:	mov    esi,0xc024bbfa
  40fbd6:	cli    
  40fbd7:	mov    ebx,0xe4d69cca
  40fbdc:	dec    eax
  40fbdd:	jne    0x40fbff
  40fbdf:	pop    es
  40fbe0:	mov    ebp,edi
  40fbe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe3:	(bad)  
  40fbe4:	cmp    DWORD PTR [esi],eax
  40fbe6:	ror    BYTE PTR [esi-0x196e0a22],0xce
  40fbed:	cmc    
  40fbee:	(bad)  
  40fbef:	nop
  40fbf0:	add    BYTE PTR [eax],al
  40fbf2:	ret    
  40fbf3:	add    DWORD PTR [ebx],ecx
  40fbf5:	jmp    0x4a2baf5c
  40fbfa:	inc    ebx
  40fbfb:	enter  0x8a9,0x44
  40fbff:	(bad)  
  40fc00:	bound  edi,QWORD PTR [esi-0x42f53e8c]
  40fc06:	push   esp
  40fc07:	mov    esi,0x4930976c
  40fc0c:	call   0x861b:0xb7058743
  40fc13:	(bad)  
  40fc14:	lock push es
  40fc16:	xchg   edi,eax
  40fc17:	lea    eax,[ecx-0xa]
  40fc1a:	jle    0x40fc01
  40fc1c:	xor    esi,esi
  40fc1e:	js     0x40fbab
  40fc20:	pop    ebp
  40fc21:	adc    dl,BYTE PTR [esi]
  40fc23:	pop    edi
  40fc24:	(bad)  
  40fc25:	jmp    0xc50e476f
  40fc2a:	xchg   BYTE PTR [edx],cl
  40fc2c:	jmp    0x24bc:0xdabebccd
  40fc33:	sar    DWORD PTR [edx-0x216a2d43],0x6d
  40fc3a:	add    BYTE PTR [eax+0x17490000],al
  40fc40:	shr    DWORD PTR [edx],0x50
  40fc43:	or     al,0xd9
  40fc45:	jb     0x40fc23
  40fc47:	cld    
  40fc48:	cli    
  40fc49:	or     bl,cl
  40fc4b:	cld    
  40fc4c:	clc    
  40fc4d:	fs mov edi,0x17f95d10
  40fc53:	fild   WORD PTR [ebx]
  40fc55:	das    
  40fc56:	add    BYTE PTR [eax],al
  40fc58:	pop    edi
  40fc59:	retf   0xe4c0
  40fc5c:	inc    ebx
  40fc5d:	int3   
  40fc5e:	mov    esi,DWORD PTR [edx-0x4fdc3f06]
  40fc64:	repnz mov bl,0x8d
  40fc67:	jge    0x40fca7
  40fc69:	pop    esp
  40fc6a:	adc    al,0x25
  40fc6c:	inc    ecx
  40fc6d:	or     al,0x56
  40fc6f:	rol    DWORD PTR ds:0xf4ea09cc,0x84
  40fc76:	clc    
  40fc77:	mov    edx,0xbafaed02
  40fc7c:	cld    
  40fc7d:	xchg   BYTE PTR [esi+eiz*8-0x6e5e503b],cl
  40fc84:	inc    edx
  40fc85:	inc    edi
  40fc86:	cmp    al,0x28
  40fc88:	test   BYTE PTR [edi],al
  40fc8a:	add    esi,DWORD PTR [ebx]
  40fc8c:	retf   0x33b3
  40fc8f:	push   eax
  40fc90:	stos   BYTE PTR es:[edi],al
  40fc91:	shl    BYTE PTR [ebx],0x53
  40fc94:	mov    eax,0xc2311f95
  40fc99:	fsubr  st(7),st
  40fc9b:	jmp    0xc4f:0x2ac118e6
  40fca2:	fldenv [edx-0x54]
  40fca5:	cld    
  40fca6:	cli    
  40fca7:	retf   0xfca2
  40fcaa:	clc    
  40fcab:	ins    BYTE PTR es:[edi],dx
  40fcac:	iret   
  40fcad:	adc    dh,ah
  40fcaf:	and    al,0xa4
  40fcb1:	jmp    0xc0:0xc960a702
  40fcb8:	xor    ecx,DWORD PTR ds:0x8bc3
  40fcbe:	inc    ebp
  40fcbf:	mov    esi,0xbd3723f7
  40fcc4:	cli    
  40fcc5:	lea    edx,[edx+0x4107d612]
  40fccb:	into   
  40fccc:	add    edx,DWORD PTR [esi+0x66]
  40fccf:	int3   
  40fcd0:	ret    0x1d09
  40fcd3:	fmul   QWORD PTR [ebx+0x23772df8]
  40fcd9:	sti    
  40fcda:	std    
  40fcdb:	jae    0x40fc6a
  40fcdd:	mov    ecx,gs
  40fcdf:	or     BYTE PTR ds:0x4e0cb2d5,0xc
  40fce6:	lahf   
  40fce7:	retf   0x30e
  40fcea:	xchg   esp,eax
  40fceb:	test   dl,bh
  40fced:	xor    esp,DWORD PTR [edi-0x4bcc0854]
  40fcf3:	xchg   BYTE PTR [edi+ebx*1+0x455a204b],bl
  40fcfa:	lods   eax,DWORD PTR ds:[esi]
  40fcfb:	sub    DWORD PTR [eax],esp
  40fcfd:	shr    ebp,0x1f
  40fd00:	add    ebx,ecx
  40fd02:	and    eax,0x7dfb3373
  40fd07:	jne    0x40fd3c
  40fd09:	stc    
  40fd0a:	sbb    edx,DWORD PTR [eax+0x6cf70507]
  40fd10:	test   eax,0xc0bfe003
  40fd15:	shl    BYTE PTR [ebx+0x58bc30c],0xbd
  40fd1c:	mul    DWORD PTR [ebx]
  40fd1e:	pop    es
  40fd1f:	mov    ebp,0x8dfa
  40fd24:	adc    dl,BYTE PTR [ecx]
  40fd26:	clc    
  40fd27:	mov    ds:0x56037829,eax
  40fd2c:	push   esi
  40fd2d:	retf   0x9c2
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	fisttp DWORD PTR [ebx-0x422cb808]
  40fd37:	and    ecx,DWORD PTR [edx+edx*8-0x45]
  40fd3b:	(bad)  
  40fd3c:	sar    DWORD PTR [edi-0x7057fd26],cl
  40fd42:	add    al,0x4e
  40fd44:	push   ebx
  40fd45:	loope  0x40fd08
  40fd47:	push   cs
  40fd48:	inc    esp
  40fd49:	jmp    0xf7e3:0xa954fa8b
  40fd50:	push   esp
  40fd51:	stos   BYTE PTR es:[edi],al
  40fd52:	xchg   ecx,eax
  40fd53:	pushf  
  40fd54:	xor    BYTE PTR [edx],ch
  40fd56:	push   eax
  40fd57:	sub    bh,BYTE PTR [edx+0x6305da3]
  40fd5d:	sbb    BYTE PTR fs:[ebx],al
  40fd60:	push   ds
  40fd61:	cmp    al,0xbd
  40fd63:	xor    ebp,ebp
  40fd65:	mov    bl,0xba
  40fd67:	(bad)  
  40fd68:	ret    
  40fd69:	scas   eax,DWORD PTR es:[edi]
  40fd6a:	inc    ecx
  40fd6b:	cmp    ebp,ebx
  40fd6d:	outs   dx,DWORD PTR ds:[esi]
  40fd6e:	add    eax,DWORD PTR [esi+0x33]
  40fd71:	popa   
  40fd72:	les    eax,FWORD PTR [esp+eax*2]
  40fd75:	arpl   WORD PTR [ebx-0xc66eb05],cx
  40fd7b:	not    edx
  40fd7d:	push   esp
  40fd7e:	pop    ss
  40fd7f:	xor    DWORD PTR [ecx+0x190386b1],0xc2c4c0
  40fd89:	add    BYTE PTR [ebx+eiz*4],bh
  40fd8c:	ror    DWORD PTR [ebx+0x33bb139f],cl
  40fd92:	popf   
  40fd93:	and    eax,0xc1650f90
  40fd98:	mov    al,ds:0xef96446d
  40fd9d:	rol    BYTE PTR [esi-0x3335fd30],0x4a
  40fda4:	repz div DWORD PTR [ecx+edi*8]
  40fda8:	nop
  40fda9:	pushf  
  40fdaa:	dec    eax
  40fdab:	aam    0xfb
  40fdad:	in     al,0x62
  40fdaf:	or     edx,ebp
  40fdb1:	pop    ebp
  40fdb2:	pop    ds
  40fdb3:	enter  0x172a,0x44
  40fdb7:	shl    BYTE PTR [edx-0x43],1
  40fdba:	adc    al,0xb3
  40fdbc:	fidivr DWORD PTR [edx+0x47ee8cd2]
  40fdc2:	sub    eax,0x89034577
  40fdc7:	or     eax,0xa43c428
  40fdcc:	sub    cl,BYTE PTR [ebx-0xd2005e4]
  40fdd2:	adc    BYTE PTR [ebp+esi*2-0x483a21ea],al
  40fdd9:	dec    edx
  40fdda:	inc    esp
  40fddb:	pop    edi
  40fddc:	stc    
  40fddd:	les    eax,FWORD PTR ds:0xccd3ea02
  40fde3:	mov    al,0xfa
  40fde5:	mov    edx,0x8f64b334
  40fdea:	cmp    BYTE PTR [ecx],ch
  40fdec:	and    bh,BYTE PTR [ebx+0x0]
  40fdef:	add    cl,bl
  40fdf1:	or     DWORD PTR [edi],esi
  40fdf3:	and    BYTE PTR [esi],al
  40fdf5:	enter  0x2f9,0xfd
  40fdf9:	adc    DWORD PTR [ebx-0x70062f0e],0xf915e390
  40fe03:	jg     0x40fdfd
  40fe05:	jbe    0x40fdf1
  40fe07:	pop    ebp
  40fe08:	pop    edi
  40fe09:	enter  0x16aa,0x44
  40fe0d:	shl    BYTE PTR [edx-0x44],1
  40fe10:	push   esp
  40fe11:	mov    bl,0x1a
  40fe13:	mov    ebx,0xc5e68cca
  40fe18:	adc    DWORD PTR [edx-0x2fefcff],edx
  40fe1e:	daa    
  40fe1f:	ret    
  40fe20:	dec    ebx
  40fe21:	or     ch,BYTE PTR [edx]
  40fe23:	mov    bh,BYTE PTR [ecx+edi*8+0x3f]
  40fe27:	bnd js 0x40fdad
  40fe2a:	add    BYTE PTR [ebp+0x51],bl
  40fe2d:	mov    bl,0x27
  40fe2f:	mov    BYTE PTR [esi-0x79d7e9f7],ch
  40fe35:	add    DWORD PTR [ebx],eax
  40fe37:	cmp    DWORD PTR [ebp+0x551233b0],edi
  40fe3d:	scas   eax,DWORD PTR es:[edi]
  40fe3e:	lea    ebx,[ebp+0x51]
  40fe41:	mov    ?,WORD PTR [eax]
  40fe43:	push   ss
  40fe44:	adc    BYTE PTR [ecx],cl
  40fe46:	dec    esi
  40fe47:	in     eax,dx
  40fe48:	or     ecx,ebx
  40fe4a:	adc    dl,ch
  40fe4c:	inc    BYTE PTR [eax-0x7234506]
  40fe52:	clc    
  40fe53:	je     0x40fe55
  40fe55:	add    bh,ah
  40fe57:	adc    al,0x5
  40fe59:	cld    
  40fe5a:	mov    esp,0x2b37030d
  40fe5f:	retf   0xf6c3
  40fe62:	inc    edi
  40fe63:	ror    BYTE PTR [ebx+0x33b2f6c0],cl
  40fe69:	ret    0x8dc0
  40fe6c:	pop    es
  40fe6d:	lock adc al,0xde
  40fe70:	fldl2e 
  40fe72:	mov    ch,ch
  40fe74:	shr    BYTE PTR [ecx+0x72c3084f],0x8e
  40fe7b:	clc    
  40fe7c:	clc    
  40fe7d:	fimul  DWORD PTR [esi+eax*4-0x6d16096c]
  40fe84:	fisttp DWORD PTR [edi-0x57cfa4ba]
  40fe8a:	test   DWORD PTR [eax],eax
  40fe8c:	add    ebx,DWORD PTR [ecx+0x7233b1be]
  40fe92:	xchg   esi,eax
  40fe93:	mov    dl,0x8d
  40fe95:	jne    0x40fee1
  40fe97:	mov    cl,0x7c
  40fe99:	mov    esi,DWORD PTR [edx]
  40fe9b:	or     BYTE PTR [esi+0x15],cl
  40fe9e:	test   dl,cl
  40fea0:	adc    dl,ch
  40fea2:	mov    es,WORD PTR [eax+0x707d00fa]
  40fea8:	xor    edi,ecx
  40feaa:	jecxz  0x40ff14
  40feac:	pop    ds
  40fead:	gs enter 0xc424,0x3
  40feb2:	rol    BYTE PTR [eax],1
  40feb4:	rol    ebx,0x59
  40feb7:	or     ecx,ebx
  40feb9:	mov    edi,0x76310000
  40febe:	(bad)  
  40febf:	jmp    FWORD PTR [ebp+0x72]
  40fec2:	or     edi,ebx
  40fec4:	sbb    eax,0x29848d6f
  40fec9:	dec    esp
  40feca:	and    ch,BYTE PTR [ecx]
  40fecc:	cmp    cl,BYTE PTR [ecx]
  40fece:	push   es
  40fecf:	rcr    DWORD PTR [esi+0xb],0x3
  40fed3:	ret    
  40fed4:	jno    0x40ff4c
  40fed6:	(bad)  
  40fed7:	jmp    DWORD PTR [ecx]
  40fed9:	mov    ecx,0xb9260bf8
  40fede:	cli    
  40fedf:	lea    ecx,[edx+0x44ff971d]
  40fee5:	dec    edx
  40fee6:	add    edx,DWORD PTR [esi-0x1e]
  40fee9:	mov    dl,0xa
  40feec:	fst    st(7)
  40feee:	mov    edi,0xff74b1ff
  40fef3:	xor    edx,DWORD PTR [ebp-0x59cc0600]
  40fef9:	or     BYTE PTR [edi+ecx*1-0x546c5677],0xdd
  40ff01:	inc    ebp
  40ff02:	cmp    cl,al
  40ff04:	out    dx,eax
  40ff05:	add    al,0x3
  40ff07:	retf   0x7501
  40ff0a:	(bad)  
  40ff0b:	push   DWORD PTR [ecx]
  40ff0d:	mov    ecx,0xb9370bf7
  40ff12:	stc    
  40ff13:	lea    edx,[edx]
  40ff15:	adc    eax,0x741da039
  40ff1a:	add    ebx,DWORD PTR [esi-0x66]
  40ff1d:	mov    bl,0x15
  40ff20:	add    BYTE PTR [eax],al
  40ff22:	inc    edi
  40ff23:	lahf   
  40ff24:	fidivr DWORD PTR [edi-0x43bd80]
  40ff2a:	xor    al,0x48
  40ff2c:	or     bl,bh
  40ff2e:	xor    al,0x49
  40ff30:	mov    es,WORD PTR [eax+eax*2-0x15a4a621]
  40ff37:	sahf   
  40ff38:	inc    ebp
  40ff39:	xor    BYTE PTR [esi-0x7bfcfb1f],al
  40ff3f:	push   edx
  40ff40:	mov    esp,0xf01a48ff
  40ff45:	clc    
  40ff46:	dec    esp
  40ff47:	sbb    al,dh
  40ff49:	cli    
  40ff4a:	retf   0x1454
  40ff4d:	xchg   edx,eax
  40ff4e:	add    esp,DWORD PTR [ebp-0x536efc74]
  40ff54:	ret    0x4dc2
  40ff57:	lahf   
  40ff58:	sar    DWORD PTR [edi-0x4453e8],cl
  40ff5e:	push   esp
  40ff5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff60:	psubd  mm2,QWORD PTR [eax+ebx*8-0x77]
  40ff65:	mov    WORD PTR [eax+0x45],ss
  40ff68:	mov    al,0xef
  40ff6a:	clc    
  40ff6b:	lahf   
  40ff6c:	dec    ecx
  40ff6d:	sub    BYTE PTR [esi],al
  40ff6f:	bound  ecx,QWORD PTR [ebx]
  40ff71:	add    edi,ebp
  40ff73:	cmp    edi,DWORD PTR [ebx-0x89c1f01]
  40ff79:	test   DWORD PTR [ecx+ebp*2-0x9],0x1b34c2f9
  40ff81:	shr    DWORD PTR [edx+0x24],1
  40ff84:	add    DWORD PTR [ebx],0xac210000
  40ff8a:	(bad)
  40ff8e:	fdivr  QWORD PTR [edi-0x44cc50]
  40ff94:	je     0x40ffcc
  40ff96:	psubq  mm2,QWORD PTR [ecx+edi*1-0x77]
  40ff9b:	test   BYTE PTR [eax+0x9],al
  40ff9e:	mov    dh,0x39
  40ffa0:	fbld   TBYTE PTR [edx]
  40ffa2:	jmp    0x4402:0x29c86741
  40ffa9:	(bad)  
  40ffaa:	mov    ?,WORD PTR [ebx-0x8b94d88]
  40ffb0:	outs   dx,DWORD PTR ds:[esi]
  40ffb1:	inc    BYTE PTR [eax-0x9]
  40ffb4:	ins    DWORD PTR es:[edi],dx
  40ffb5:	test   BYTE PTR [ebp+0x13],bl
  40ffb8:	stos   DWORD PTR es:[di],eax
  40ffba:	std    
  40ffbb:	mov    ecx,0xc4e55b44
  40ffc0:	test   edi,edi
  40ffc2:	jmp    0x16f3889a
  40ffc7:	mov    ebx,0xf11f640
  40ffcc:	cmp    eax,0xc38900f6
  40ffd1:	add    ebp,edx
  40ffd3:	inc    esi
  40ffd4:	inc    esi
  40ffd5:	jmp    0x28c8:0x3f49
  40ffdb:	or     eax,DWORD PTR [edi+edi*4-0x5a]
  40ffdf:	mov    edx,0xf6deb210
  40ffe4:	adc    dh,bh
  40ffe6:	iret   
  40ffe7:	idiv   dh
  40ffe9:	sub    DWORD PTR [ebp+0x1a],0x0
  40ffed:	add    BYTE PTR [esi+0x4449f117],ah
  40fff3:	push   ebx
  40fff4:	cmc    
  40fff5:	les    eax,FWORD PTR [esp+ebx*1]
  40fff8:	jmp    0xd8ba:0xaeb1a0dc
  40ffff:	cmc    
  410000:	mov    ds:0x9ff5cc0e,al
  410005:	mov    bl,al
  410007:	or     DWORD PTR [ebx+0x39],ebp
  41000a:	adc    al,0xba
  41000c:	jmp    0x4401:0xa9c85741
  410013:	(bad)  
  410014:	ds mov edx,0x7600b1a8
  41001a:	cdq    
  41001b:	mov    al,0xb
  41001d:	jno    0x40ffb0
  41001f:	scas   al,BYTE PTR es:[edi]
  410020:	lea    edi,[ebp+0x35]
  410023:	cld    
  410024:	icebp  
  410025:	and    ecx,DWORD PTR [esi]
  410027:	push   es
  410028:	push   esi
  410029:	add    eax,0xea0ac68a
  41002e:	xchg   esp,eax
  41002f:	jno    0x410030
  410031:	inc    esi
  410032:	lods   eax,DWORD PTR ds:[esi]
  410033:	mov    cl,0x33
  410035:	inc    edx
  410036:	cmp    DWORD PTR [edi-0x7b30cecd],ebp
  41003c:	(bad)  
  41003e:	jb     0x410019
  410040:	sub    ch,dl
  410042:	inc    BYTE PTR [eax]
  410044:	shr    DWORD PTR [eax],0x3d
  410047:	push   es
  410048:	retf   0xfd56
  41004b:	mov    al,0xff
  41004d:	push   cs
  41004e:	xor    DWORD PTR [ecx+0xb],edi
  410054:	cmp    DWORD PTR [ebx-0x65b2a273],esi
  41005a:	shr    DWORD PTR [edi-0xf],cl
  41005d:	or     al,0x5e
  41005f:	lds    eax,FWORD PTR [ebx]
  410061:	int    0x15
  410063:	jmp    0x845:0xf17d84ed
  41006a:	add    DWORD PTR [esi],esi
  41006c:	inc    edi
  41006d:	or     cl,BYTE PTR [edi-0x1f]
  410070:	inc    ebp
  410071:	pop    eax
  410072:	or     al,0xc6
  410074:	mov    BYTE PTR [ebp+0x83378d],ch
  41007a:	mov    esi,esp
  41007c:	mov    ds:0x7c13ffb0,al
  410081:	push   esp
  410082:	pop    eax
  410083:	inc    esi
  410084:	ins    DWORD PTR es:[edi],dx
  410085:	ret    0xedc2
  410088:	inc    esp
  410089:	push   esi
  41008a:	mov    eax,DWORD PTR [ebp+0x36f8c5ca]
  410090:	adc    eax,0x6300c75c
  410095:	jno    0x410097
  410097:	add    BYTE PTR [esi-0x558a00f4],bl
  41009d:	add    DWORD PTR [ebp-0x8],0x650fb0e1
  4100a4:	fisttp WORD PTR [ecx+eax*1]
  4100a7:	and    esp,ebx
  4100a9:	jmp    0xfc30674
  4100ae:	inc    ecx
  4100af:	add    bh,ah
  4100b1:	sbb    eax,0xb021efcd
  4100b6:	pop    ss
  4100b7:	add    BYTE PTR gs:[eax],al
  4100ba:	lahf   
  4100bb:	or     al,0xfe
  4100bd:	(bad)  
  4100bf:	mov    edi,es
  4100c1:	add    eax,0x410f8a
  4100c6:	mov    al,0x40
  4100c8:	xor    dl,BYTE PTR [eax]
  4100ca:	and    DWORD PTR [eax+0xbef651f],esi
  4100d0:	lock loope 0x41014f
  4100d3:	(bad)  
  4100d4:	jmp    0x4100f2
  4100d6:	mov    ch,0xf0
  4100d8:	pop    es
  4100d9:	add    esp,ebx
  4100db:	ja     0x410147
  4100dd:	inc    eax
  4100de:	(bad)  
  4100df:	iret   
  4100e0:	fs inc ecx
  4100e2:	cs pop esp
  4100e4:	call   0xffb1f84c
  4100e9:	and    DWORD PTR [ebx+0x71],0x40
  4100ed:	call   0x410c9c
  4100f2:	ins    DWORD PTR es:[edi],dx
  4100f3:	out    0xf7,eax
  4100f5:	inc    eax
  4100f6:	sub    eax,0x65d8bd3
  4100fb:	test   ebx,eax
  4100fd:	inc    eax
  4100fe:	gs out dx,eax
  410100:	pop    es
  410101:	add    esp,DWORD PTR [ebx]
  410103:	jno    0x410158
  410105:	push   0x410f02
  41010a:	push   cs
  41010b:	pop    ebp
  41010c:	cmp    al,0xe9
  41010e:	inc    edi
  41010f:	xchg   edi,eax
  410110:	mov    eax,0xc17e1a01
  410115:	sub    DWORD PTR [ebx-0x3],0x42
  410119:	add    bh,al
  41011b:	and    ch,BYTE PTR [edi+esi*1-0x24e70000]
  410122:	test   bl,ch
  410124:	dec    edi
  410125:	mov    dh,0xd
  410127:	and    ah,0xbd
  41012a:	push   ds
  41012b:	inc    ecx
  41012c:	inc    edi
  41012d:	mov    ds:0x49797844,al
  410132:	mov    WORD PTR [eax],es
  410134:	inc    edi
  410135:	mov    ds:0x4670c87c,al
  41013a:	mov    eax,0xd7645eb
  41013f:	and    BYTE PTR [ebp+edx*4-0x5db8bee2],0x44
  410147:	js     0x4101a2
  410149:	cmp    bh,BYTE PTR [esi]
  41014b:	or     al,0x8e
  41014d:	mov    ecx,0xd3470003
  410152:	aad    0xf7
  410154:	es ror bl,1
  410157:	paddw  mm0,QWORD PTR [ebx+0x23]
  41015b:	xchg   BYTE PTR gs:[eax+0x7d83158a],ah
  410162:	inc    edx
  410163:	add    BYTE PTR [edi],ch
  410165:	cdq    
  410166:	add    eax,DWORD PTR [eax]
  410168:	inc    edi
  410169:	adc    DWORD PTR [eiz*2+0x158aa086],0x453d5b
  410174:	int3   
  410175:	int    0x1b
  410177:	xchg   BYTE PTR gs:[eax+0x7a38c806],ah
  41017e:	pop    es
  41017f:	leave  
  410180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410181:	shl    BYTE PTR [eax],1
  410183:	inc    ecx
  410184:	add    BYTE PTR [eax],al
  410186:	inc    edi
  410187:	sub    DWORD PTR [ecx],edx
  410189:	adc    al,0x6a
  41018b:	or     DWORD PTR [eax],ebp
  41018d:	add    al,0xbe
  41018f:	cld    
  410190:	add    BYTE PTR [ecx],ah
  410192:	push   es
  410193:	or     DWORD PTR [eax+0x18],ecx
  410196:	and    cl,BYTE PTR [eax-0x17]
  410199:	mov    bl,BYTE PTR [edx-0x17]
  41019c:	or     eax,DWORD PTR [ebp+0x47]
  41019f:	(bad)  
  4101a0:	mov    al,0x7
  4101a2:	lea    ebp,[edx-0x2b]
  4101a5:	and    BYTE PTR [esi],al
  4101a7:	or     DWORD PTR [eax+0x11],esp
  4101aa:	addr16 and al,0xa8
  4101ad:	add    ebx,DWORD PTR ds:0x57315e15
  4101b3:	and    ecx,edi
  4101b5:	and    BYTE PTR [esi],al
  4101b7:	or     DWORD PTR [ecx-0x6f],eax
  4101ba:	pop    edi
  4101bb:	scas   al,BYTE PTR es:[edi]
  4101bc:	inc    esi
  4101bd:	pop    ebx
  4101be:	or     DWORD PTR [esi+0x30],ecx
  4101c1:	ret    0x953
  4101c4:	pushf  
  4101c5:	mov    ch,BYTE PTR [ebx-0x76]
  4101c8:	and    eax,0x26b18ebc
  4101cd:	mov    bh,0x48
  4101cf:	and    ch,0xc8
  4101d2:	stos   DWORD PTR es:[edi],eax
  4101d3:	and    al,0xa8
  4101d5:	add    ecx,esp
  4101d7:	adc    al,0x1c
  4101d9:	sub    al,0xaa
  4101db:	dec    eax
  4101dc:	jmp    0x333f00e7
  4101e1:	lea    ecx,[ebx-0x44]
  4101e4:	lea    esp,[eax]
  4101e6:	xchg   BYTE PTR [ecx],cl
  4101e8:	pusha  
  4101e9:	adc    BYTE PTR [eax],al
  4101eb:	add    BYTE PTR [edx],al
  4101ed:	and    DWORD PTR [ebp+eax*2+0x47],ecx
  4101f1:	dec    eax
  4101f2:	push   esp
  4101f3:	fnstcw WORD PTR [esi-0x7492938]
  4101f9:	and    ebp,0x28278f88
  4101ff:	add    al,0xbc
  410201:	adc    al,0x6c
  410203:	aas    
  410204:	imul   ecx,DWORD PTR [eax+0x0],0x8d09d5e9
  41020b:	std    
  41020c:	xor    cl,BYTE PTR [eax+0x0]
  41020f:	fidivr DWORD PTR [eax]
  410211:	jl     0x410237
  410213:	pop    es
  410214:	or     cl,BYTE PTR [ecx]
  410216:	xor    ebp,DWORD PTR [ebx-0x1a76376d]
  41021c:	mov    edi,0x43286624
  410221:	dec    eax
  410222:	jne    0x4101bb
  410224:	int    0xb
  410226:	adc    BYTE PTR [edx+eax*1],cl
  410229:	or     DWORD PTR [ebx+0x412440b4],ecx
  41022f:	jmp    0xc458edf1
  410234:	or     ecx,DWORD PTR [ecx]
  410236:	call   FWORD PTR [edi+ebx*2]
  410239:	and    al,0x41
  41023b:	jmp    0x473d4609
  410240:	ja     0x41024f
  410242:	gs test al,0x44
  410245:	jle    0x41028c
  410247:	xor    ebx,ebx
  410249:	pushf  
  41024a:	jmp    FWORD PTR [esi]
  41024c:	cdq    
  41024d:	adc    esi,0x89000072
  410253:	mov    ch,0xd2
  410255:	retf   0xe902
  410258:	push   esp
  410259:	adc    eax,0xe503c74d
  41025e:	mov    edi,0x44a86535
  410263:	or     BYTE PTR [ebp+0x1],al
  410266:	inc    edi
  410267:	xchg   edx,eax
  410268:	jns    0x4102d5
  41026a:	jle    0x410218
  41026c:	jne    0x41025b
  41026e:	retf   0xf846
  410271:	jo     0x4102c3
  410273:	lods   eax,DWORD PTR ds:[esi]
  410274:	shl    DWORD PTR [edi+0x62fe8059],0xb6
  41027b:	retf   0xe4c3
  41027e:	inc    edi
  41027f:	rol    DWORD PTR [ecx+0x0],1
  410282:	sub    eax,ecx
  410284:	mov    ecx,0xff76a1ec
  410289:	mov    ebp,DWORD PTR [eax+0x2b33d782]
  41028f:	jno    0x4102c4
  410291:	ret    0xacdd
  410294:	mov    esp,es
  410296:	dec    ebx
  410297:	dec    eax
  410298:	add    BYTE PTR [ebx],al
  41029a:	imul   ebp,DWORD PTR [ebp+0x5],0xffffffa1
  41029e:	(bad)
  4102a1:	jmp    FWORD PTR [ebx-0x39ba708c]
  4102a7:	cmp    BYTE PTR [ebp-0x4],0xef
  4102ab:	imul   ebx,DWORD PTR [esi],0xffffff8b
  4102ae:	and    BYTE PTR [edx-0x53a23e0d],al
  4102b4:	add    bl,al
  4102b6:	add    BYTE PTR [eax],al
  4102b8:	scas   eax,DWORD PTR es:[edi]
  4102b9:	fcmovne st,st(7)
  4102bb:	mov    ecx,0xffff7602
  4102c0:	in     eax,0x6d
  4102c2:	mov    edx,DWORD PTR [ebp+0x2]
  4102c5:	add    al,BYTE PTR [ebp-0x4]
  4102c8:	dec    ebp
  4102c9:	mov    esi,0xca65c623
  4102ce:	add    eax,DWORD PTR [ebx+esi*8]
  4102d1:	sbb    BYTE PTR [esi+0x41],ah
  4102d4:	pop    esi
  4102d5:	or     DWORD PTR [ebp-0x8],eax
  4102d8:	sub    edx,esp
  4102da:	mov    esp,0x7576a11b
  4102df:	cld    
  4102e0:	xchg   ecx,eax
  4102e1:	in     al,dx
  4102e2:	test   DWORD PTR [ecx-0x393e8c3d],0x8bfe8100
  4102ec:	sbb    eax,0x1d05c3c7
  4102f1:	rol    BYTE PTR [ecx+0x75],1
  4102f4:	aad    0x2e
  4102f6:	in     al,dx
  4102f7:	jmp    DWORD PTR [ecx]
  4102f9:	jne    0x410286
  4102fb:	mov    BYTE PTR [edi+0x27],0xcc
  4102ff:	xor    ecx,DWORD PTR [edx+0x44c1f0be]
  410305:	sahf   
  410306:	xchg   BYTE PTR [ecx+ebp*2-0x1f],ah
  41030a:	add    eax,DWORD PTR [ebx]
  41030c:	cmp    BYTE PTR [edx-0x2],0xd5
  410310:	push   es
  410311:	inc    eax
  410312:	retf   0x52ff
  410315:	data16 test BYTE PTR [ebp-0x41],al
  410319:	cmp    BYTE PTR [esi],dh
  41031b:	cld    
  41031c:	add    BYTE PTR [eax],al
  41031e:	xchg   BYTE PTR [ebx+0x15],bl
  410321:	mov    esi,DWORD PTR [ecx-0x7b3e4fda]
  410327:	pushf  
  410328:	add    al,bl
  41032a:	push   es
  41032b:	mov    ch,0xd3
  41032d:	add    DWORD PTR [edx],edi
  41032f:	rcr    BYTE PTR [esi],cl
  410331:	inc    ecx
  410332:	inc    edi
  410333:	mov    eax,ds:0x612213ee
  410338:	add    eax,DWORD PTR [ecx]
  41033a:	inc    edx
  41033b:	or     bl,BYTE PTR [edi]
  41033d:	inc    ecx
  41033e:	inc    edi
  41033f:	daa    
  410340:	ds cld 
  410342:	inc    esi
  410343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410344:	pop    ss
  410345:	gs push es
  410347:	mov    ds:0xa05f4588,al
  41034c:	(bad)  
  41034d:	pop    ds
  41034e:	loop   0x4103b0
  410350:	add    ecx,ecx
  410352:	test   BYTE PTR [eax+ecx*4+0xb8c48ec],dl
  410359:	call   0x442d14
  41035e:	les    ebx,FWORD PTR [eax]
  410360:	mov    ah,0x75
  410362:	imul   edi,ebx,0x971f082d
  410368:	jp     0x41036a
  41036a:	inc    edi
  41036b:	mov    bh,0xc3
  41036d:	jne    0x4103af
  41036f:	clc    
  410370:	mov    bl,0xff
  410372:	adc    BYTE PTR [edi+eiz*4+0x2909bc13],bl
  410379:	add    bh,dl
  41037b:	(bad)  
  41037c:	test   al,0x39
  41037e:	inc    eax
  41037f:	jno    0x410357
  410381:	mov    bl,0x0
  410383:	add    al,dh
  410385:	stos   BYTE PTR es:[edi],al
  410386:	ret    0xbc08
  410389:	or     DWORD PTR [edx+0x4],esi
  41038c:	push   cs
  41038d:	enter  0x3e5,0x72
  410391:	jle    0x410358
  410393:	xchg   DWORD PTR [ebx],ecx
  410395:	mov    edx,0x1fedf71a
  41039a:	out    dx,eax
  41039b:	sbb    eax,0x9beb1f46
  4103a0:	jge    0x410412
  4103a2:	jmp    0x8ef2c7aa
  4103a7:	cmp    DWORD PTR [ebp-0x62],eax
  4103aa:	or     edi,DWORD PTR [edi+0x7f]
  4103ad:	pop    ds
  4103ae:	fld    DWORD PTR [eax-0x63e646fe]
  4103b4:	mov    edi,0x21b36ea3
  4103b9:	ret    0xb3ac
  4103bc:	inc    ebp
  4103bd:	or     DWORD PTR [edx+0x41],esi
  4103c0:	push   edi
  4103c1:	and    DWORD PTR [edx+ebp*1],0xffffffbe
  4103c5:	cmp    al,0x5b
  4103c7:	xchg   edx,ebp
  4103c9:	cld    
  4103ca:	call   0xa4bf4e06
  4103cf:	jmp    FWORD PTR [ebp+0xa]
  4103d2:	push   0x31
  4103d4:	inc    ebx
  4103d5:	or     DWORD PTR [ebp+edi*8+0x3f12cc5],esi
  4103dc:	mov    edx,0x2de91205
  4103e1:	cli    
  4103e2:	adc    eax,0x7da13f39
  4103e7:	mov    dl,0x0
  4103e9:	add    BYTE PTR [eax],ch
  4103eb:	stos   BYTE PTR es:[edi],al
  4103ec:	push   0xffffffac
  4103ee:	and    BYTE PTR [ebx+ebp*8],dh
  4103f1:	sahf   
  4103f2:	xor    eax,DWORD PTR [eax+0x1ed8ac00]
  4103f8:	adc    BYTE PTR [esi+edi*2-0x47],bl
  4103fc:	push   eax
  4103fd:	cmp    ah,bl
  4103ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410400:	mov    eax,0xf88644e9
  410405:	(bad)  
  410406:	das    
  410407:	add    DWORD PTR [ebx-0x3f],edx
  41040a:	adc    eax,0xd9e90071
  41040f:	into   
  410410:	mov    ebp,DWORD PTR [edx-0x1a3d3f77]
  410416:	inc    esp
  410417:	push   esp
  410418:	mov    edi,DWORD PTR [ebp+0x24835271]
  41041e:	pop    ebx
  41041f:	or     DWORD PTR [ebp-0xe],esi
  410422:	sub    al,0x8
  410424:	add    cl,ch
  410426:	inc    esp
  410427:	dec    edx
  410428:	pop    ebx
  410429:	mov    al,ds:0x71fffc82
  41042e:	push   edi
  41042f:	std    
  410430:	mov    edx,0x944e9
  410435:	add    ecx,DWORD PTR [ebx-0x56]
  410438:	jne    0x410413
  41043a:	in     eax,dx
  41043b:	test   eax,0x78dcf175
  410440:	mov    eax,0xc08444e9
  410445:	xlat   BYTE PTR ds:[ebx]
  410446:	pop    eax
  410447:	push   es
  410448:	clc    
  410449:	add    dh,bh
  41044b:	sbb    BYTE PTR [ebx+0x340000c4],al
  410451:	or     DWORD PTR [ebp-0x1a],esi
  410454:	jmp    0x452a0460
  410459:	sahf   
  41045a:	add    al,BYTE PTR [edx+0x7a]
  41045d:	jge    0x410422
  41045f:	(bad)  
  410460:	xchg   ecx,eax
  410461:	rol    dl,cl
  410463:	in     eax,dx
  410464:	inc    esp
  410465:	mov    eax,DWORD PTR ds:0xff4cdcb
  41046c:	cmc    
  41046d:	test   al,0xff
  41046f:	add    BYTE PTR [ebx+0x12858ea8],ah
  410475:	pop    edx
  410476:	(bad)  
  410477:	jmp    DWORD PTR [ecx-0x6f]
  41047a:	clc    
  41047b:	(bad)  
  41047c:	sbb    DWORD PTR [ebx+0x0],ebx
  41047f:	add    dh,ch
  410481:	or     al,0xc7
  410483:	test   DWORD PTR [edx],ebx
  410485:	pop    esp
  410486:	(bad)  
  410487:	(bad)  
  410488:	fisttp WORD PTR [eax+eax*1]
  41048b:	add    BYTE PTR [ebx+0x9ff0090],cl
  410491:	pop    ebx
  410492:	push   DWORD PTR [ebp-0x2a]
  410495:	mov    DWORD PTR [eax],eax
  410497:	lea    esp,[ebx+0x61]
  41049a:	(bad)  
  41049b:	call   FWORD PTR [ecx+0x54006a3d]
  4104a1:	or     eax,0x5bda858d
  4104a6:	(bad)  
  4104a7:	jmp    FWORD PTR [esi+0x7]
  4104aa:	add    al,ch
  4104ac:	dec    edx
  4104ad:	xor    eax,0x752d0000
  4104b2:	push   DWORD PTR [eax+eax*1+0x0]
  4104b6:	mov    ds:0xa275bfa5,al
  4104bb:	popf   
  4104bc:	mov    edi,0x134a3eb
  4104c1:	add    BYTE PTR [esi+0xc],ch
  4104c4:	leave  
  4104c5:	ret    0xc76
  4104c8:	push   ebp
  4104c9:	mov    ecx,DWORD PTR [edx]
  4104cb:	mov    es,esp
  4104cd:	cld    
  4104ce:	lods   eax,DWORD PTR ds:[esi]
  4104cf:	(bad)
  4104d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104d3:	pop    ecx
  4104d4:	jne    0x4104de
  4104d6:	mul    BYTE PTR [edi]
  4104d8:	(bad)  
  4104d9:	call   FWORD PTR [ecx]
  4104db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104dc:	mov    edi,0x5a06b274
  4104e1:	jmp    ebx
  4104e3:	mov    ds:0x5a597fe7,eax
  4104e8:	dec    DWORD PTR [ebx]
  4104ea:	inc    edi
  4104eb:	repnz add bl,BYTE PTR ss:[esi+ebp*2]
  4104f0:	sbb    eax,0x7eb1ad00
  4104f5:	inc    ebp
  4104f6:	sbb    BYTE PTR [edx+0xa3f75b0],al
  4104fc:	pop    es
  4104fd:	mov    eax,0xc086b247
  410502:	add    DWORD PTR [edx],0xea53457d
  410508:	inc    esi
  410509:	(bad)  
  41050a:	jp     0x4104c0
  41050c:	je     0x41050f
  41050e:	mov    esp,0x358affdc
  410513:	cmp    al,0x4
  410515:	push   0x46
  410517:	xor    eax,0xff46
  41051c:	ja     0x41057d
  41051e:	ss or  al,0xc8
  410521:	add    edx,DWORD PTR [edi+edi*8]
  410524:	cmp    bl,BYTE PTR [esi-0x79644765]
  41052a:	mov    al,0x3b
  41052c:	or     ah,BYTE PTR [edx-0x5263fdcb]
  410532:	xchg   bl,bl
  410534:	sbb    edi,DWORD PTR [esi]
  410536:	jl     0x4104fb
  410538:	cld    
  410539:	pop    eax
  41053a:	lds    edx,FWORD PTR [edi+eax*2]
  41053d:	add    eax,0x6dc6ec7d
  410542:	add    edi,eax
  410544:	sub    BYTE PTR [esi],0x54
  410547:	sub    ebx,DWORD PTR [ebx+edi*4-0x560500b3]
  41054e:	fwait
  41054f:	sbb    BYTE PTR [eax+0x56],ch
  410552:	mov    al,0xb
  410554:	xchg   DWORD PTR [ebp+0x28],esp
  410557:	push   0xfffffffd
  410559:	out    0x35,al
  41055b:	or     BYTE PTR [edi-0x55],bl
  41055e:	mov    al,0xff
  410560:	dec    eax
  410561:	stos   BYTE PTR es:[edi],al
  410562:	ret    
  410563:	jne    0x4105aa
  410565:	or     DWORD PTR [edx],edx
  410567:	pop    eax
  410568:	(bad)  
  410569:	and    al,0xf9
  41056b:	add    edi,DWORD PTR [edi]
  41056d:	or     ecx,ebp
  41056f:	cmp    DWORD PTR [eax+0x61],eax
  410572:	jmp    0x12e82672
  410577:	add    al,0xcc
  410579:	dec    esp
  41057a:	fstp   DWORD PTR ds:0x86643947
  410580:	add    BYTE PTR [eax],al
  410582:	inc    edi
  410583:	mov    eax,ds:0xa697afee
  410588:	pop    esp
  410589:	cld    
  41058a:	loopne 0x4105ae
  41058c:	xchg   esi,eax
  41058d:	add    al,0x47
  41058f:	mov    WORD PTR [ecx-0x24dbad3],gs
  410595:	cmp    BYTE PTR [edx+ecx*2-0x2e],al
  410599:	out    0x88,eax
  41059b:	xchg   edx,eax
  41059c:	adc    al,0x0
  41059e:	mov    esp,0x770442fb
  4105a3:	xchg   esp,eax
  4105a4:	fs add al,0xbf
  4105a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a9:	push   esp
  4105aa:	mov    eax,0x15aeed1c
  4105af:	stc    
  4105b0:	xor    ch,bl
  4105b2:	add    edi,ecx
  4105b4:	imul   esi,DWORD PTR [ecx],0x2fc0937
  4105ba:	add    al,0xb2
  4105bc:	in     eax,0x88
  4105be:	ins    BYTE PTR es:[edi],dx
  4105bf:	sbb    eax,0x42847b50
  4105c4:	mov    al,ds:0xbc0953c2
  4105c9:	jp     0x410636
  4105cb:	mov    ah,BYTE PTR ds:0x55da18ac
  4105d1:	sbb    al,BYTE PTR [edi+0x3e]
  4105d4:	dec    esi
  4105d5:	cmp    DWORD PTR [edi-0x4f],ecx
  4105d8:	sbb    cl,bl
  4105da:	pop    eax
  4105db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105dc:	es dec ecx
  4105de:	push   ebx
  4105df:	or     DWORD PTR [eax],eax
  4105e1:	jmp    0x94cc0f2a
  4105e6:	add    BYTE PTR [eax],al
  4105e8:	cmp    al,0x93
  4105ea:	adc    dh,BYTE PTR [esi+ecx*4-0x5f]
  4105ee:	push   eax
  4105ef:	xchg   ebx,eax
  4105f0:	dec    eax
  4105f1:	xchg   esp,eax
  4105f2:	inc    ebp
  4105f3:	adc    eax,0xe175a693
  4105f8:	icebp  
  4105f9:	cmp    cl,BYTE PTR [esi+ebp*4]
  4105fc:	ret    
  4105fd:	and    edi,esp
  4105ff:	in     al,dx
  410600:	push   cs
  410601:	adc    eax,0x8b0e7d0a
  410606:	jge    0x4105f9
  410608:	inc    esp
  410609:	sbb    al,0xc9
  41060b:	sbb    al,BYTE PTR [ebx]
  41060d:	mov    dl,0x5
  41060f:	jb     0x41061a
  410611:	mov    al,al
  410613:	jmp    0x3c44:0xe5c2d079
  41061a:	mov    edx,ebp
  41061c:	(bad)
  41061f:	sbb    bh,BYTE PTR [eax+0x31]
  410622:	cwde   
  410623:	repz inc esp
  410625:	or     eax,ebp
  410627:	fsubp  st(0),st
  410629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41062a:	push   DWORD PTR [eax+0xf]
  41062d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41062e:	lea    esp,[edi+ebp*8]
  410631:	cmp    al,ch
  410633:	aad    0x7d
  410635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410636:	(bad)  
  410637:	fimul  DWORD PTR [ebp-0x62ece1ce]
  41063d:	sub    eax,0x9448300
  410642:	(bad)  
  410643:	cld    
  410644:	shl    BYTE PTR [ebp-0x73231e8b],1
  41064a:	(bad)  
  41064b:	data16 add BYTE PTR [eax],al
  41064e:	test   eax,0xc8eec08b
  410653:	fadd   DWORD PTR [eax]
  410655:	jmp    0x55b6ac9e
  41065a:	mov    esp,0x100db94
  41065f:	ja     0x41069e
  410661:	add    BYTE PTR [edx+ecx*1],al
  410664:	add    BYTE PTR [esi+0x5b],dh
  410667:	test   BYTE PTR [ecx+eax*1],bl
  41066a:	cs or  edi,edi
  41066d:	jne    0x4106c9
  41066f:	sbb    BYTE PTR [edx-0x1],0x51
  410673:	jae    0x4105fa
  410675:	ror    dl,0xcc
  410678:	push   DWORD PTR [ebp+0x3a]
  41067b:	or     BYTE PTR [ebp-0x748cbe23],0x55
  410682:	sbb    ah,BYTE PTR [ebx]
  410684:	adc    ch,BYTE PTR [edx+0x1e]
  410687:	add    DWORD PTR [ecx+eiz*1],esi
  41068a:	out    dx,al
  41068b:	or     bh,bh
  41068d:	jne    0x410671
  41068f:	jbe    0x410706
  410691:	hlt    
  410692:	adc    DWORD PTR [eax],edi
  410694:	or     al,0xc7
  410696:	sbb    esi,DWORD PTR [ebp+0x0]
  410699:	add    dh,ch
  41069b:	or     BYTE PTR [eax-0x4a],ch
  41069e:	xor    eax,0x1bff0048
  4106a3:	pop    ecx
  4106a4:	call   0x4e4ec2
  4106a9:	push   ebx
  4106aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ab:	enter  0x3674,0x35
  4106af:	jne    0x410719
  4106b1:	mov    dh,0x0
  4106b3:	add    BYTE PTR [ebp+0x4ee80047],dl
  4106b9:	and    DWORD PTR [eax],eax
  4106bb:	add    BYTE PTR [ebp+0x15475770],ch
  4106c1:	(bad)  
  4106c2:	mov    ecx,0x86f94
  4106c7:	mov    al,0xa3
  4106c9:	pop    edx
  4106ca:	scas   al,BYTE PTR es:[edi]
  4106cb:	mov    eax,0xfffff81a
  4106d0:	push   ebp
  4106d1:	enter  0x47c6,0x11
  4106d5:	or     eax,0x4a475357
  4106da:	mov    cl,0xb5
  4106dc:	inc    edi
  4106dd:	mov    dl,0x7a
  4106df:	inc    ebp
  4106e0:	pop    edi
  4106e1:	imul   eax,ebp,0x47
  4106e4:	push   eax
  4106e5:	mov    ch,0x4c
  4106e7:	pop    ebx
  4106e8:	fcomip st,st(3)
  4106ea:	fadd   DWORD PTR [eax+0x47]
  4106ed:	repz ss cld 
  4106f0:	das    
  4106f1:	loop   0x410769
  4106f3:	add    BYTE PTR [edi+0x5f],al
  4106f6:	clc    
  4106f7:	mov    edi,0xf87876b3
  4106fc:	scas   eax,DWORD PTR es:[edi]
  4106fd:	in     al,dx
  4106fe:	fadd   DWORD PTR [eax+0x47]
  410701:	cli    
  410702:	in     al,0xb3
  410704:	inc    edi
  410705:	mov    dl,0x0
  410707:	clc    
  410708:	jo     0x41077d
  41070a:	js     0x4106eb
  41070c:	mov    esi,0x4700133d
  410711:	cmp    dh,0xf1
  410714:	mov    eax,ds:0x119769
  410719:	add    BYTE PTR [edi-0x4e],al
  41071c:	fadd   st,st(0)
  41071e:	or     ebx,ebp
  410720:	lods   al,BYTE PTR ds:[esi]
  410721:	add    BYTE PTR [eax-0x1],dh
  410724:	fwait
  410725:	addr16 aad 0x62
  410728:	lods   al,BYTE PTR ds:[esi]
  410729:	mov    esi,DWORD PTR [edx-0x3e]
  41072c:	clc    
  41072d:	sar    DWORD PTR [ebx],1
  41072f:	scas   al,BYTE PTR es:[edi]
  410730:	jp     0x410734
  410732:	lods   al,BYTE PTR ds:[esi]
  410733:	mov    bl,0x53
  410735:	call   0xffed96f0
  41073a:	or     BYTE PTR [esp+eax*2-0x1],dh
  41073e:	push   edx
  41073f:	repz dec eax
  410741:	call   DWORD PTR [edx]
  410743:	es fwait
  410745:	and    eax,0x83ac2272
  41074a:	or     bl,BYTE PTR [edx]
  41074c:	add    esi,DWORD PTR [edi+0x48]
  41074f:	imul   eax,DWORD PTR [esi-0x8],0x47
  410753:	or     ecx,ebp
  410755:	arpl   WORD PTR [edi-0x5c],ax
  410758:	aam    0xab
  41075a:	push   0xdaac5d1d
  41075f:	adc    BYTE PTR [ecx-0x5c],al
  410762:	pop    edx
  410763:	mov    ds:0x9cdaac46,eax
  410768:	push   ecx
  410769:	xchg   BYTE PTR [ebp-0x5d],ch
  41076c:	ss clc 
  41076e:	add    BYTE PTR ds:0xe5c98eb,bl
  410774:	sub    DWORD PTR [edi],esi
  410776:	pop    eax
  410777:	mov    ?,WORD PTR [edi+esi*4+0x3615f7bc]
  41077e:	add    BYTE PTR [eax],al
  410780:	push   ebx
  410781:	mov    ds:0x3818b794,al
  410786:	mov    ebp,0xe4220786
  41078b:	push   0x3e90946
  410790:	int3   
  410791:	cmp    al,0xf5
  410793:	ja     0x4107ea
  410795:	mov    ds:0x37f0b05c,al
  41079a:	icebp  
  41079b:	stos   BYTE PTR es:[edi],al
  41079c:	jb     0x410743
  41079e:	sar    DWORD PTR [edi-0x1b],0xa2
  4107a2:	into   
  4107a3:	jg     0x4107a9
  4107a5:	inc    ebx
  4107a6:	and    bh,BYTE PTR [ebp+0x50e91605]
  4107ac:	mov    esp,0xf7c06ab5
  4107b1:	cmp    bl,BYTE PTR [edx]
  4107b3:	fistp  WORD PTR [ebp-0x4f1c16cf]
  4107b9:	mov    ds:0xa2a58291,al
  4107be:	xchg   esi,eax
  4107bf:	jge    0x4107cb
  4107c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c2:	add    DWORD PTR [edi+eiz*2],eax
  4107c5:	or     ecx,ebp
  4107c7:	fwait
  4107c8:	push   cs
  4107c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ca:	jle    0x410777
  4107cc:	mov    esi,0x633d004c
  4107d1:	or     DWORD PTR [eax],esp
  4107d3:	jmp    0x4badb91c
  4107d8:	pushf  
  4107d9:	mov    ds:0x93e0a489,al
  4107de:	jge    0x410809
  4107e0:	repnz in al,0xff
  4107e3:	call   0xd68507e8
  4107e8:	mov    edi,0x45c9f13a
  4107ed:	sub    DWORD PTR [edi-0x5e],ebx
  4107f0:	(bad)  
  4107f1:	jmp    0x2f1553fb
  4107f6:	dec    esp
  4107f7:	or     DWORD PTR [eax],eax
  4107f9:	xchg   BYTE PTR cs:[ecx+0x944feff],bl
  410800:	call   FWORD PTR [eax+ebp*8-0x13c6ba6f]
  410807:	sbb    esi,DWORD PTR [esi+esi*2-0x5b724a7a]
  41080e:	add    al,0x39
  410810:	push   0x800944e9
  410815:	add    DWORD PTR [edx+eiz*4+0x75],0xfffffff1
  41081a:	int3   
  41081b:	data16 mov ah,0xe9
  41081e:	inc    esp
  41081f:	push   cs
  410820:	rcr    BYTE PTR [ebp+0x45],0x86
  410824:	jge    0x4107df
  410826:	inc    esp
  410827:	sbb    al,0x5
  410829:	ror    BYTE PTR [esi+0x5e90008],1
  41082f:	dec    esp
  410830:	mov    al,0xb6
  410832:	dec    ebp
  410833:	or     DWORD PTR [eax],eax
  410835:	pop    esp
  410836:	pop    es
  410837:	pop    ecx
  410838:	push   eax
  410839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41083a:	ja     0x4108a1
  41083c:	push   0x800944e9
  410841:	fs pop es
  410843:	leave  
  410844:	push   eax
  410845:	sub    DWORD PTR [edi+0x5d],0x0
  41084c:	sahf   
  41084d:	mov    ds:0x84a375bf,al
  410852:	test   eax,0x8b056e00
  410857:	inc    ebp
  410858:	xor    cl,al
  41085a:	add    BYTE PTR [eax],al
  41085c:	sti    
  41085d:	lock mov edi,0xd4ab9
  410863:	add    BYTE PTR ds:0x21aaf3cd,bh
  410869:	dec    ecx
  41086a:	sar    BYTE PTR [esi+ebx*2],0x5
  41086e:	add    bh,bh
  410870:	xchg   ebx,eax
  410871:	xor    DWORD PTR [edi+0x45cb8a45],ecx
  410877:	aam    0x69
  410879:	adc    eax,DWORD PTR [eax]
  41087b:	add    BYTE PTR [ecx+0x49],ah
  41087e:	lock jmp FWORD PTR [ecx]
  410881:	or     eax,0xccf38d00
  410886:	push   eax
  410887:	push   0x2e
  410889:	(bad)  
  41088a:	(bad)  
  41088b:	(bad)  
  41088c:	xchg   ebx,eax
  41088d:	sub    al,ch
  41088f:	xor    DWORD PTR [edx+0xc],edx
  410892:	add    BYTE PTR [ebx],cl
  410894:	cs lock add eax,0xbc6b83
  41089b:	jne    0x410879
  41089d:	jge    0x4108ff
  41089f:	call   DWORD PTR [ebx-0x3d8a008f]
  4108a5:	std    
  4108a6:	iret   
  4108a7:	sub    ebp,DWORD PTR [edi]
  4108a9:	add    eax,0x7dca75ff
  4108ae:	retf   0xb3
  4108b1:	add    dh,bl
  4108b3:	or     al,0x83
  4108b5:	les    ebx,FWORD PTR [esi-0x29ba495f]
  4108bb:	xor    eax,0xf0e9006a
  4108c0:	sti    
  4108c1:	call   0x40787e
  4108c6:	inc    edi
  4108c7:	stos   DWORD PTR es:[edi],eax
  4108c8:	ret    
  4108c9:	jne    0x410910
  4108cb:	mov    ebp,edi
  4108cd:	mov    BYTE PTR [edx],cl
  4108cf:	dec    edx
  4108d0:	test   eax,0x257acb75
  4108d5:	mov    dl,0x47
  4108d7:	mov    dl,0x53
  4108d9:	push   edx
  4108db:	in     eax,dx
  4108dc:	test   al,0x75
  4108de:	scas   eax,DWORD PTR es:[edi]
  4108df:	cmp    cl,BYTE PTR [edi-0x5]
  4108e2:	push   0xdabffd3f
  4108e7:	mov    bl,0x9c
  4108e9:	adc    BYTE PTR [eax-0x4b],bl
  4108ec:	adc    edi,edi
  4108ee:	ficom  DWORD PTR [ebp+0x3a8f75a8]
  4108f4:	out    dx,eax
  4108f5:	cld    
  4108f6:	inc    eax
  4108f7:	xlat   BYTE PTR ds:[ebx]
  4108f8:	jl     0x4108d2
  4108fa:	cmp    BYTE PTR [ebp+0x6b],dl
  4108fd:	call   0x454744
  410902:	sub    BYTE PTR [ebp+0x6f],dh
  410905:	call   0xffea1a7c
  41090a:	sbb    BYTE PTR [ebp+0x67],dh
  41090d:	call   0xffea1a7c
  410912:	or     BYTE PTR ds:0xe8a7,dl
  410918:	bound  edx,QWORD PTR [ecx]
  41091a:	test   eax,0x4cf2ccff
  41091f:	pop    edi
  410920:	(bad)  
  410921:	jae    0x41091a
  410923:	call   DWORD PTR [ebx+0xb83971b]
  410929:	mov    dh,0x7c
  41092b:	inc    ebp
  41092c:	dec    ebx
  41092d:	stos   DWORD PTR es:[edi],eax
  41092e:	ret    
  41092f:	je     0x41097a
  410931:	outs   dx,DWORD PTR ds:[esi]
  410932:	add    eax,DWORD PTR [eax]
  410934:	inc    edi
  410935:	mov    dl,0x3
  410937:	(bad)  
  410938:	or     dl,BYTE PTR [esi+0x3]
  41093b:	add    BYTE PTR [edi-0x4e],al
  41093e:	jbe    0x410985
  410940:	mov    bl,0x8
  410942:	cmp    DWORD PTR [ecx+0x2e9e0d32],ebp
  410948:	dec    edi
  410949:	mov    cl,0x0
  41094b:	stos   BYTE PTR es:[edi],al
  41094c:	cwde   
  41094d:	lahf   
  41094e:	push   0x26
  410950:	xchg   ebx,eax
  410951:	or     ch,bh
  410953:	adc    BYTE PTR ds:0x532e7e09,bl
  410959:	mov    al,ds:0x366fa7fc
  41095e:	outs   dx,DWORD PTR ds:[esi]
  41095f:	test   al,0x70
  410961:	cmp    BYTE PTR [esi+0x2e],ah
  410964:	imul   esi,DWORD PTR [eax-0x609f5cc7],0xffffffb1
  41096b:	mov    edx,0x4ee91085
  410970:	mov    esp,0x4bbf6aac
  410975:	es es ds inc ebx
  410979:	or     ecx,ebp
  41097b:	and    DWORD PTR [eax],eax
  41097d:	add    BYTE PTR [eax],al
  41097f:	inc    ebp
  410980:	das    
  410981:	or     DWORD PTR [edi+0x33],eax
  410984:	in     eax,dx
  410985:	jbe    0x410909
  410987:	popf   
  410988:	mov    ecx,0xe909c71b
  41098d:	add    ebp,DWORD PTR [edi+0x47030e9e]
  410993:	sahf   
  410994:	jl     0x410991
  410996:	and    BYTE PTR [ecx+0x3a],bh
  410999:	add    eax,DWORD PTR [edi-0x30]
  41099c:	sub    edi,edi
  41099e:	clc    
  41099f:	xor    eax,0xc5c49762
  4109a4:	xchg   ebp,eax
  4109a5:	dec    edi
  4109a6:	xchg   esp,eax
  4109a7:	(bad)  
  4109a8:	and    al,0x58
  4109aa:	inc    edi
  4109ab:	or     ecx,ebp
  4109ad:	add    edx,DWORD PTR [edx+eax*8]
  4109b0:	inc    ecx
  4109b1:	add    al,0x37
  4109b3:	or     ecx,ebp
  4109b5:	fwait
  4109b6:	scas   al,BYTE PTR es:[edi]
  4109b7:	test   eax,0x44cea7be
  4109bc:	add    BYTE PTR [ecx-0x16eff6a5],ch
  4109c2:	inc    esp
  4109c3:	mov    cl,0x8c
  4109c5:	mov    eax,esp
  4109c7:	sahf   
  4109c8:	mov    DWORD PTR [ebx+esi*1],esp
  4109cb:	xor    DWORD PTR [eax],eax
  4109cd:	stc    
  4109ce:	inc    esp
  4109cf:	or     eax,ebp
  4109d1:	push   cs
  4109d2:	jmp    0x410972
  4109d4:	push   DWORD PTR [eax+0x6]
  4109d7:	pop    ebp
  4109d8:	(bad)  
  4109d9:	cld    
  4109da:	shl    BYTE PTR [eax+0x3c],0xe9
  4109de:	inc    esp
  4109df:	or     DWORD PTR [ebx],esi
  4109e1:	test   eax,0x73b40000
  4109e6:	(bad)  
  4109e7:	lods   al,BYTE PTR ds:[esi]
  4109e8:	test   al,0xdd
  4109ea:	(bad)  
  4109eb:	call   0x29b6a834
  4109f0:	rol    BYTE PTR [ebx-0x2c],1
  4109f3:	dec    esi
  4109f4:	push   ss
  4109f5:	popa   
  4109f6:	(bad)  
  4109f7:	lods   al,BYTE PTR ds:[esi]
  4109f8:	xchg   esp,eax
  4109f9:	mov    BYTE PTR [ebp+0x21],0xe8
  4109fd:	or     eax,0x43f9e900
  410a02:	hlt    
  410a03:	cmp    BYTE PTR cs:[esi-0x3a798b01],bl
  410a0a:	push   eax
  410a0b:	xchg   ecx,eax
  410a0c:	inc    esp
  410a0d:	or     DWORD PTR [eax],eax
  410a0f:	imul   edi,DWORD PTR ds:0xc94ff09,0x433bb5a6
  410a19:	or     DWORD PTR [ebx],ecx
  410a1b:	sub    DWORD PTR [edi],esi
  410a1d:	pop    es
  410a1e:	xor    DWORD PTR [eax+ecx*1+0x9],0x75
  410a23:	in     al,0xd3
  410a25:	fwait
  410a26:	add    cl,ch
  410a28:	inc    esp
  410a29:	mov    BYTE PTR [ebp-0x67],0xa9
  410a2d:	or     eax,0x445fe900
  410a32:	mov    al,0x39
  410a34:	test   al,0x13
  410a36:	mov    esp,0x57600
  410a3b:	add    BYTE PTR [esi],ch
  410a3d:	and    DWORD PTR [ebp-0x3c],eax
  410a40:	pop    esi
  410a41:	jge    0x4109d3
  410a43:	mov    dl,0x9e
  410a45:	or     DWORD PTR [ebx],ecx
  410a47:	rol    BYTE PTR [eax],0x0
  410a4a:	dec    ebx
  410a4b:	or     cl,ch
  410a4d:	fsubr  DWORD PTR [esi+0x6b8b0009]
  410a53:	sub    eax,0x209e00c6
  410a58:	jge    0x410a1e
  410a5a:	pop    es
  410a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a5c:	(bad)  
  410a5d:	jmp    FWORD PTR [esi-0x66]
  410a60:	mov    edi,0x455f04f3
  410a65:	les    esp,FWORD PTR [edx-0x1efffff7]
  410a6b:	fdiv   DWORD PTR [edi-0x38a65471]
  410a71:	inc    ebp
  410a72:	push   ss
  410a73:	ltr    WORD PTR [bp+0x5e]
  410a78:	inc    ebp
  410a79:	hlt    
  410a7a:	add    DWORD PTR [edi+0x49b3ffff],edx
  410a80:	les    edx,FWORD PTR [eax+0x4]
  410a83:	or     DWORD PTR [edx+0x0],ebp
  410a86:	popa   
  410a87:	fnstcw WORD PTR [ebx+0x1adae8]
  410a8d:	add    BYTE PTR ds:0xad0674c9,dl
  410a93:	icebp  
  410a94:	rol    DWORD PTR [eax],cl
  410a96:	mov    ebx,0x1e8ce909
  410a9b:	or     DWORD PTR [eax],eax
  410a9d:	(bad)  
  410a9e:	jnp    0x410a98
  410aa0:	(bad)  
  410aa1:	jne    0x410ad1
  410aa3:	arpl   WORD PTR [ebp-0x48],si
  410aa6:	(bad)  
  410aa7:	retf   0x412a
  410aaa:	fisub  WORD PTR [ebp+0x75]
  410aad:	mov    esp,0xcef60000
  410ab2:	mov    cl,0x0
  410ab4:	inc    edi
  410ab5:	mov    dl,0x80
  410ab7:	les    edi,FWORD PTR [ebx]
  410ab9:	mov    ebx,0x2eb456c
  410abe:	sbb    al,BYTE PTR [eax]
  410ac0:	rcl    ch,0xc3
  410ac3:	call   0xffe66584
  410ac8:	cmp    al,0x72
  410aca:	das    
  410acb:	add    bl,BYTE PTR [esp+eax*2+0x7bdb457b]
  410ad2:	das    
  410ad3:	mov    ah,0xaf
  410ad5:	push   ecx
  410ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ad7:	call   DWORD PTR [eax-0x6043d075]
  410add:	cli    
  410ade:	jae    0x410ae0
  410ae0:	inc    edi
  410ae1:	add    ah,BYTE PTR [ebp+0x2f13bb75]
  410ae7:	mov    ah,0x5f
  410ae9:	clc    
  410aea:	stos   BYTE PTR es:[edi],al
  410aeb:	jmp    FWORD PTR [eax-0x69]
  410aee:	ret    
  410aef:	jne    0x410b36
  410af1:	aaa    
  410af2:	repz sbb dl,0xa1
  410af6:	add    esi,DWORD PTR [ebx+edi*1+0x4b]
  410afa:	das    
  410afb:	adc    BYTE PTR [eax+0x5d],cl
  410afe:	idiv   esi
  410b00:	mov    edx,0x3e409c16
  410b05:	shl    DWORD PTR [ebx+ecx*1-0x14feaaf9],cl
  410b0c:	push   eax
  410b0d:	pop    ss
  410b0e:	int3   
  410b0f:	or     edi,esp
  410b11:	jne    0x410b25
  410b13:	lea    eax,[eax]
  410b15:	add    BYTE PTR [edx-0x6500abba],al
  410b1b:	xchg   esi,eax
  410b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b1d:	jne    0x410af2
  410b1f:	stc    
  410b20:	or     bh,bl
  410b22:	add    BYTE PTR [ebx+0x1cf8d878],bl
  410b28:	outs   dx,DWORD PTR ds:[esi]
  410b29:	call   0x44ec24
  410b2e:	call   0xf005673b
  410b33:	stc    
  410b34:	mov    ebp,0x5c9bd8a4
  410b39:	push   0xa4ae11df
  410b3e:	enter  0x3c9b,0x6c
  410b42:	scas   eax,DWORD PTR es:[edi]
  410b43:	or     DWORD PTR [esi+0x3487b8a4],ebx
  410b49:	pop    eax
  410b4a:	inc    edi
  410b4b:	adc    eax,0x6d32a4e1
  410b50:	xchg   ecx,eax
  410b51:	mov    al,0x81
  410b53:	fwait
  410b54:	sahf   
  410b55:	js     0x410adb
  410b57:	aas    
  410b58:	ss mov ebx,0x4ee8f885
  410b5e:	mov    esp,0x7fbf6aac
  410b63:	aaa    
  410b64:	ror    al,cl
  410b66:	les    ebx,FWORD PTR ds:0x4afb03e5
  410b6c:	push   0x26
  410b6e:	push   edi
  410b6f:	or     ebp,ebx
  410b71:	cmp    edx,edx
  410b73:	inc    ebp
  410b74:	pop    ebp
  410b75:	push   ebx
  410b76:	pop    eax
  410b77:	adc    eax,0x9be5
  410b7c:	pop    ebx
  410b7d:	pop    eax
  410b7e:	jmp    0xc209cd86
  410b83:	repz inc ecx
  410b85:	adc    eax,0xb3c39bed
  410b8a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410b8c:	mov    esi,0xb2a43144
  410b91:	popf   
  410b92:	adc    DWORD PTR [esi-0x10],esp
  410b95:	or     ecx,ebp
  410b97:	clc    
  410b98:	fcom   DWORD PTR ds:0xf99aa4f0
  410b9e:	or     eax,0x63a0f2e
  410ba3:	cs dec edi
  410ba5:	mov    cl,0xea
  410ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ba8:	clc    
  410ba9:	call   0xed75:0x9afc6200
  410bb0:	int    0x63
  410bb2:	scas   eax,DWORD PTR es:[edi]
  410bb3:	jmp    0xedb6a5fc
  410bb8:	lods   al,BYTE PTR ds:[esi]
  410bb9:	inc    ecx
  410bba:	fcom   st(6)
  410bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bbd:	mov    es,ebx
  410bbf:	xor    bh,dl
  410bc1:	(bad)  
  410bc2:	or     al,0xe9
  410bc4:	jg     0x410b54
  410bc6:	in     al,dx
  410bc7:	push   0xb6fe198f
  410bcc:	in     al,0x8c
  410bce:	test   DWORD PTR [ebx],edi
  410bd0:	in     eax,0x9a
  410bd2:	(bad)  
  410bd3:	cmp    DWORD PTR [ebx+0x8],esi
  410bd6:	add    ecx,ebp
  410bd8:	inc    esp
  410bd9:	mov    cl,0x63
  410bdb:	pop    eax
  410bdc:	dec    ebx
  410bdd:	or     ecx,ecx
  410bdf:	stos   BYTE PTR es:[edi],al
  410be0:	add    BYTE PTR [eax],al
  410be2:	dec    esi
  410be3:	mov    gs,esp
  410be5:	push   0x26
  410be7:	adc    DWORD PTR [eax],eax
  410be9:	cmc    
  410bea:	inc    ebp
  410beb:	xchg   BYTE PTR [ebp-0x27],bh
  410bee:	inc    esp
  410bef:	adc    eax,0xf54e6e19
  410bf4:	(bad)  
  410bf5:	fmul   QWORD PTR [ecx+esi*4-0x26]
  410bf9:	inc    ebx
  410bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bfb:	call   0xdd75:0x9b54dcff
  410c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c03:	adc    al,0x8
  410c05:	push   ecx
  410c06:	dec    ecx
  410c07:	mov    esi,0xc70a3eff
  410c0c:	adc    cl,ch
  410c0e:	outs   dx,DWORD PTR ds:[esi]
  410c0f:	mov    gs,esp
  410c11:	push   0x66
  410c13:	adc    DWORD PTR [eax],eax
  410c15:	popf   
  410c16:	and    BYTE PTR [edi+0x1544ed7d],al
  410c1c:	push   ss
  410c1d:	push   ss
  410c1e:	cs stc 
  410c20:	(bad)  
  410c21:	xchg   esp,eax
  410c22:	cmp    al,0xb1
  410c24:	scas   al,BYTE PTR es:[edi]
  410c25:	add    BYTE PTR [esi+eiz*2],ah
  410c28:	(bad)  
  410c29:	push   DWORD PTR [ebx+0xa]
  410c2c:	push   DWORD PTR [ebp-0x1a]
  410c2f:	ins    DWORD PTR es:[edi],dx
  410c30:	add    eax,0xc966d9db
  410c35:	ret    0x5da
  410c38:	push   ebp
  410c39:	mov    ecx,DWORD PTR [edx]
  410c3b:	add    esp,0xfffffff0
  410c3e:	stc    
  410c3f:	add    BYTE PTR [eax+ebp*8],cl
  410c42:	sbb    DWORD PTR [edx-0x1],esp
  410c45:	inc    DWORD PTR [eax]
  410c47:	add    BYTE PTR [edi],dh
  410c49:	push   ecx
  410c4a:	or     al,0x83
  410c4c:	jnp    0x410c47
  410c4e:	push   DWORD PTR [ebx+0x50]
  410c51:	data16 jne 0x410c60
  410c54:	xchg   dl,cl
  410c56:	loop   0x410c57
  410c58:	jmp    0x6cb5cc67
  410c5d:	js     0x410ca4
  410c5f:	lock dec esi
  410c61:	data16 jne 0x410c70
  410c64:	mov    BYTE PTR [ebx+0xac9ffe3],0xc0
  410c6b:	je     0x410c29
  410c6d:	test   BYTE PTR [ebp-0x4],bh
  410c70:	pop    esi
  410c71:	add    eax,0xa56d0010
  410c76:	(bad)  
  410c77:	jne    0x410c63
  410c79:	data16 jne 0x410c74
  410c7c:	mul    BYTE PTR [eax+0xaf9ffe6]
  410c82:	shl    BYTE PTR [ebp+0x4f],0x66
  410c86:	jne    0x410c98
  410c88:	mov    ecx,esi
  410c8a:	sti    
  410c8b:	push   ebx
  410c8d:	je     0x410c8e
  410c8f:	jne    0x410cb7
  410c91:	gs dec edi
  410c93:	call   FWORD PTR [ecx+0x6b]
  410c96:	lea    eax,[ebp+0x3e]
  410c99:	fsubr  st(7),st
  410c9b:	loopne 0x410cea
  410c9d:	imul   edi,edi,0xffffffff
  410ca0:	inc    edi
  410ca1:	jne    0x410cb2
  410ca3:	call   0xffe2f286
  410ca8:	push   cs
  410ca9:	in     eax,0xe
  410cab:	add    BYTE PTR [eax],al
  410cad:	add    BYTE PTR [edx+0xb83af1b],dl
  410cb3:	xchg   ebx,eax
  410cb4:	mov    eax,ds:0xb10a3b75
  410cb9:	loop   0x410c9b
  410cbb:	scas   eax,DWORD PTR es:[edi]
  410cbc:	mov    eax,DWORD PTR [ebp+0x4b]
  410cbf:	and    ebx,DWORD PTR [edi]
  410cc1:	or     al,0x47
  410cc3:	ss dec ecx
  410cc5:	call   DWORD PTR [edx-0x4a]
  410cc8:	stos   DWORD PTR es:[edi],eax
  410cc9:	pop    edx
  410cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ccb:	iret   
  410ccc:	mov    eax,ds:0xd4de870b
  410cd1:	mov    WORD PTR [edx],cs
  410cd3:	push   edx
  410cd4:	xor    al,0xff
  410cd6:	xor    dh,BYTE PTR [esi+0x6fa411ab]
  410cdc:	mov    eax,ds:0xe4fe870b
  410ce1:	adc    BYTE PTR [edx],0x7e
  410ce4:	add    al,0x0
  410ce6:	aaa    
  410ce7:	mov    ds:0x95801114,al
  410cec:	repz (bad) 
  410cee:	repnz adc eax,0x1f6f75a1
  410cf4:	pop    ss
  410cf5:	or     BYTE PTR [edi+0x15],bl
  410cf8:	mov    ds:0x471d60ff,al
  410cfd:	lock idiv DWORD PTR [ecx]
  410d00:	and    ah,bl
  410d02:	push   eax
  410d03:	aas    
  410d04:	mov    eax,ds:0x494a3b75
  410d09:	fld    QWORD PTR [eax+0x4f]
  410d0c:	retf   
  410d0d:	ret    0xa24b
  410d10:	mov    eax,DWORD PTR ss:[eax]
  410d13:	add    BYTE PTR [ebx],ah
  410d15:	and    ecx,eax
  410d17:	lock xchg esp,eax
  410d19:	or     edi,DWORD PTR [ebp-0xef66501]
  410d1f:	stos   DWORD PTR es:[edi],eax
  410d20:	into   
  410d21:	stos   BYTE PTR es:[edi],al
  410d22:	push   ds
  410d23:	mov    eax,ds:0x84e14dbe
  410d28:	mov    al,BYTE PTR [ecx]
  410d2a:	jmp    0x7cd99646
  410d2f:	or     ebp,edi
  410d31:	popf   
  410d32:	or     BYTE PTR [ecx+0x182903f0],ah
  410d38:	xor    eax,0x7793a486
  410d3d:	cwde   
  410d3e:	pop    esp
  410d3f:	or     al,0xef
  410d41:	fs retf 
  410d43:	mov    al,ds:0x17a903d0
  410d48:	and    eax,0x47a04c8a
  410d4d:	or     ecx,ebx
  410d4f:	add    esi,DWORD PTR [ecx+edi*8]
  410d52:	mov    ebp,0x3c97b316
  410d57:	pushf  
  410d58:	lahf   
  410d59:	xlat   BYTE PTR ds:[ebx]
  410d5a:	(bad)  
  410d5b:	mov    al,ds:0x17a903a0
  410d60:	inc    esi
  410d61:	dec    esp
  410d62:	ins    BYTE PTR es:[edi],dx
  410d63:	inc    esi
  410d64:	xchg   edi,eax
  410d65:	cmp    BYTE PTR [ecx-0x71685a03],al
  410d6b:	mov    al,ds:0xa49100fa
  410d70:	fwait
  410d71:	xchg   edi,eax
  410d72:	jle    0x410d00
  410d74:	test   BYTE PTR [ebx],dh
  410d76:	mov    al,ds:0x430000c5
  410d7b:	or     DWORD PTR [ecx*4+0x572d8973],edx
  410d82:	pop    ecx
  410d83:	xchg   edi,eax
  410d84:	pop    esi
  410d85:	enter  0x50ca,0x57
  410d89:	mov    al,ds:0x3e90848
  410d8e:	inc    edi
  410d8f:	sub    BYTE PTR [edi+ecx*1+0x6b5c94c],0xc7
  410d97:	sar    edi,1
  410d99:	call   0xb22a19ef
  410d9e:	inc    ebp
  410d9f:	or     DWORD PTR [eax],eax
  410da1:	xor    DWORD PTR es:0x96df48e8,eax
  410da8:	jmp    edx
  410daa:	add    al,0x1d
  410dac:	jno    0xe981f307
  410db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db3:	sbb    al,0xc
  410db5:	adc    esi,esp
  410db7:	mov    dh,0xff
  410db9:	neg    BYTE PTR [esp+eax*1+0x49f07768]
  410dc0:	add    dh,ah
  410dc2:	ds add eax,0x96ab0ee8
  410dc8:	jmp    DWORD PTR [eax-0x42]
  410dcb:	push   ecx
  410dcc:	dec    dh
  410dce:	loopne 0x410df1
  410dd0:	ds call 0x64ce171a
  410dd6:	test   DWORD PTR [edi-0x5e8c4901],edx
  410ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ddd:	lea    eax,[eax]
  410ddf:	add    al,al
  410de1:	xchg   esi,eax
  410de2:	lea    ebp,[ebp+eax*4-0x69]
  410de6:	call   FWORD PTR [esi+0x51b5965b]
  410dec:	test   eax,0xa481ff96
  410df1:	fs add cl,ch
  410df4:	retf   
  410df5:	mov    WORD PTR [edi+edi*2-0x19bf6930],?
  410dfc:	shl    bl,0x0
  410dff:	jmp    0x2bd69248
  410e04:	mov    ecx,0x4556ff96
  410e09:	stc    
  410e0a:	(bad)  
  410e0b:	call   0x6ac51454
  410e10:	dec    ebx
  410e11:	or     DWORD PTR [eax],eax
  410e13:	add    BYTE PTR [ebx+0x16502c4b],dh
  410e19:	out    0x2b,al
  410e1b:	inc    ecx
  410e1c:	push   ds
  410e1d:	bound  edi,QWORD PTR [ebp+ebp*4-0x3ff4f5d2]
  410e24:	mov    ebx,0x1ecce900
  410e29:	or     al,BYTE PTR [eax]
  410e2b:	lea    ecx,[ebx+0x51fffecb]
  410e31:	js     0x410e75
  410e33:	sub    al,0xde
  410e35:	loope  0x410ea4
  410e37:	sub    al,0x9f
  410e39:	or     eax,ebp
  410e3b:	lahf   
  410e3c:	or     DWORD PTR ds:0xf02e0b00,0x4
  410e43:	jmp    0x9f20e48
  410e48:	add    BYTE PTR [eax],al
  410e4a:	icebp  
  410e4b:	lock or ebp,eax
  410e4e:	repz imul edi,edi,0xffffffff
  410e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e53:	leave  
  410e54:	jne    0x410e65
  410e56:	push   ss
  410e57:	lea    ebp,[eax]
  410e59:	inc    ecx
  410e5a:	sahf   
  410e5b:	jbe    0x410ed2
  410e5d:	or     al,0x86
  410e5f:	pandn  mm7,mm7
  410e62:	icebp  
  410e63:	bound  ecx,QWORD PTR [edx]
  410e65:	push   0xffffffae
  410e67:	jbe    0x410ede
  410e69:	or     al,0xb6
  410e6b:	sbb    edi,0xffffffff
  410e6e:	mov    cl,0x78
  410e70:	xchg   ebp,eax
  410e71:	ret    0x76d0
  410e74:	dec    DWORD PTR [ebp+0x5051995c]
  410e7a:	(bad)  
  410e7b:	push   edi
  410e7c:	(bad)  
  410e7e:	icebp  
  410e7f:	fsin   
  410e81:	jne    0x410ef9
  410e83:	jbe    0x410efa
  410e85:	adc    al,0xe1
  410e87:	lock movmskps esi,xmm1
  410e8b:	lock pop es
  410e8d:	call   0xffde3ed9
  410e92:	inc    eax
  410e93:	dec    ebx
  410e94:	(bad)  
  410e95:	fstp   TBYTE PTR [eax]
  410e97:	dec    esp
  410e98:	stos   BYTE PTR es:[edi],al
  410e99:	pusha  
  410e9a:	ret    0xef60
  410e9d:	mov    dl,al
  410e9f:	push   ss
  410ea0:	popf   
  410ea1:	jmp    DWORD PTR [eax]
  410ea3:	and    BYTE PTR [eax],ah
  410ea5:	adc    BYTE PTR [edi+0x75],al
  410ea8:	add    ebx,ebp
  410eaa:	add    BYTE PTR [eax],al
  410eac:	xor    eax,0x81017f3
  410eb1:	ss push edi
  410eb3:	inc    BYTE PTR [eax]
  410eb5:	add    al,0xab
  410eb7:	inc    edx
  410eb8:	test   eax,0x70b03a2
  410ebd:	pop    ds
  410ebe:	loopne 0x410f27
  410ec0:	(bad)  
  410ec1:	retf   0x44
  410ec4:	loopne 0x410ee3
  410ec6:	psubsb mm2,QWORD PTR [ebx]
  410ec9:	retf   
  410eca:	popf   
  410ecb:	call   eax
  410ecd:	jge    0x410f27
  410ecf:	dec    al
  410ed1:	mov    ebx,0x6343e834
  410ed6:	popf   
  410ed7:	call   DWORD PTR [edi]
  410ed9:	pop    ds
  410eda:	pop    ds
  410edb:	sbb    BYTE PTR [edi-0x22],al
  410ede:	ud0    esi,DWORD PTR [edx]
  410ee1:	mov    dh,0x33
  410ee3:	call   FWORD PTR [edx]
  410ee5:	stos   BYTE PTR es:[edi],al
  410ee6:	pushf  
  410ee7:	push   ebp
  410ee8:	aas    
  410ee9:	ja     0x410efb
  410eeb:	call   FWORD PTR [edx]
  410eed:	sahf   
  410eee:	xor    edi,edi
  410ef0:	adc    ch,BYTE PTR [edx-0x7c7dab55]
  410ef6:	popf   
  410ef7:	call   0xffde75de
  410efc:	ret    0xc22d
  410eff:	(bad)  
  410f00:	push   0x9aff341b
  410f05:	out    0x9d,al
  410f07:	call   FWORD PTR [eax+0x9]
  410f0a:	push   ecx
  410f0b:	mov    ecx,0x86e909a3
  410f10:	add    BYTE PTR [eax],al
  410f12:	xchg   DWORD PTR [esp+ebp*2],eax
  410f15:	xchg   ebx,eax
  410f16:	inc    ecx
  410f17:	xchg   esp,eax
  410f18:	dec    esi
  410f19:	popf   
  410f1a:	repnz push esp
  410f1c:	inc    edi
  410f1d:	popf   
  410f1e:	xor    BYTE PTR [ecx+0x947702f],ah
  410f24:	ss push edi
  410f26:	fist   WORD PTR [edx-0x21d062d2]
  410f2c:	inc    ecx
  410f2d:	popf   
  410f2e:	adc    dl,al
  410f30:	sub    edi,eax
  410f32:	or     BYTE PTR ds:0x96db062,bh
  410f38:	push   cs
  410f39:	pop    ss
  410f3a:	push   ebx
  410f3b:	xchg   esp,eax
  410f3c:	jl     0x410f31
  410f3e:	icebp  
  410f3f:	sbb    eax,0x1729ced
  410f44:	add    ebp,ebx
  410f46:	loop   0x410edb
  410f48:	out    dx,al
  410f49:	retf   0xf905
  410f4c:	call   0xdee5cb87
  410f51:	push   ss
  410f52:	cmp    esp,DWORD PTR [ecx-0x6c3f42ce]
  410f58:	loop   0x410f1d
  410f5a:	xor    esi,ebx
  410f5c:	lds    edx,FWORD PTR [esi]
  410f5e:	push   edi
  410f5f:	cmp    ecx,edx
  410f61:	xchg   ecx,eax
  410f62:	mov    DWORD PTR [ebx+0x1da033b6],edx
  410f68:	rcr    DWORD PTR [edx+edx*1+0x1a9d38fd],1
  410f6f:	add    DWORD PTR [ecx-0x696c77a3],edx
  410f75:	stos   DWORD PTR es:[edi],eax
  410f76:	add    BYTE PTR [eax],al
  410f78:	ins    DWORD PTR es:[edi],dx
  410f79:	scas   al,BYTE PTR es:[edi]
  410f7a:	mov    ds,WORD PTR [esi+ecx*4+0x1a03ddc6]
  410f81:	or     BYTE PTR [ebp-0x30d64],0x75
  410f88:	cmp    ecx,edi
  410f8a:	(bad)  
  410f8b:	hlt    
  410f8c:	dec    eax
  410f8d:	pop    ds
  410f8e:	sbb    ah,BYTE PTR [esi+0x39]
  410f91:	add    eax,ebp
  410f93:	mov    al,ds:0x56ff93ab
  410f98:	pop    ecx
  410f99:	std    
  410f9a:	(bad)  
  410f9b:	aam    0x34
  410f9d:	xchg   esp,eax
  410f9e:	jne    0x410f95
  410fa0:	pop    esi
  410fa1:	out    0xfe,al
  410fa3:	mov    ah,0x3c
  410fa5:	mov    eax,ds:0x92c336a6
  410faa:	push   DWORD PTR [eax+edx*1-0x4c068a6c]
  410fb1:	sbb    al,0xc
  410fb3:	xchg   ebx,eax
  410fb4:	or     BYTE PTR [ebp+esi*2-0x89531f],dl
  410fbb:	push   cs
  410fbc:	fcmovnb st,st(0)
  410fbe:	ret    0x44d9
  410fc1:	cmp    al,0x8b
  410fc3:	or     eax,0x9af0cdc7
  410fc8:	sbb    bh,BYTE PTR [edx]
  410fca:	sub    edx,DWORD PTR [edx]
  410fcc:	iret   
  410fcd:	dec    esp
  410fce:	or     al,0xe6
  410fd0:	sti    
  410fd1:	add    DWORD PTR [ebp-0x1f],0xffffffac
  410fd5:	sbb    al,0x8
  410fd7:	pushw  es
  410fd9:	xchg   ebp,eax
  410fda:	(bad)  
  410fdb:	and    al,0x0
  410fdd:	add    bh,dl
  410fdf:	or     DWORD PTR [eax],eax
  410fe1:	jmp    0xb87e962a
  410fe6:	fwait
  410fe7:	dec    ecx
  410fe8:	add    cl,ch
  410fea:	push   eax
  410feb:	xor    eax,0x94b2c83
  410ff0:	je     0x411031
  410ff2:	mov    esi,0x5939f04c
  410ff7:	or     BYTE PTR [edx-0x17],ch
  410ffa:	xor    cl,BYTE PTR [ecx]
  410ffc:	or     DWORD PTR [ebx+esi*2],0xffffff92
  411000:	jae    0x411002
  411002:	arpl   WORD PTR [edi+0x75],bp
  411005:	adc    ch,dl
  411007:	or     ebp,DWORD PTR [edx+0x0]
  41100a:	inc    esp
  41100b:	or     eax,0xdcd6458d
  411010:	(bad)  
  411011:	adc    eax,0x40a4ef
  411016:	push   ebp
  411017:	(bad)  
  411018:	je     0x411049
  41101a:	lods   eax,DWORD PTR ds:[esi]
  41101b:	lock xrelease add BYTE PTR [edx],dl
  41101f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411020:	mov    al,BYTE PTR [ebp+0x3a]
  411023:	or     DWORD PTR [ebp-0x10],0x45
  411027:	add    eax,0x79ed1777
  41102c:	mov    esi,DWORD PTR [ebp+0x52]
  41102f:	cmp    BYTE PTR [ebp+0x8],0x95
  411033:	inc    eax
  411034:	lock jecxz 0x411053
  411037:	jnp    0x410fdd
  411039:	mov    esi,DWORD PTR [ebx+0x5e75ff09]
  41103f:	jle    0x411041
  411041:	inc    DWORD PTR [eax]
  411043:	add    BYTE PTR [ebx-0x7e],dh
  411046:	call   0x4ea582
  41104b:	mov    ebp,DWORD PTR ds:0x275b5dce
  411051:	retf   
  411052:	or     al,0x0
  411054:	adc    eax,DWORD PTR [edx+0x79a283ec]
  41105a:	push   ebx
  41105b:	push   esi
  41105c:	and    ebp,0xd6f2f10
  411062:	call   0x46e600
  411067:	mov    esp,esi
  411069:	mov    BYTE PTR [ebp-0x4],0xae
  41106d:	add    eax,0xc5a50000
  411072:	je     0x4110b2
  411074:	ss jo  0x4110a5
  411077:	inc    ecx
  411078:	sahf   
  411079:	(bad)  
  41107b:	inc    ebp
  41107c:	inc    edi
  41107d:	inc    edi
  41107e:	add    eax,DWORD PTR [eax]
  411080:	dec    esp
  411081:	pusha  
  411082:	comiss xmm7,DWORD PTR [edi+ecx*1-0x1ee7e1d5]
  41108a:	add    edx,DWORD PTR [ebx+0x6f]
  41108d:	push   ebx
  41108e:	outs   dx,BYTE PTR ds:[esi]
  41108f:	add    BYTE PTR [edi-0x59],al
  411092:	ret    
  411093:	je     0x4110c6
  411095:	pop    ss
  411096:	fwait
  411097:	lea    eax,[edx]
  411099:	xor    al,0x33
  41109b:	call   0x449c22
  4110a0:	xchg   edi,eax
  4110a1:	aas    
  4110a2:	mov    dl,0x83
  4110a4:	mov    dl,0x46
  4110a6:	add    esi,DWORD PTR [eax+eax*1+0x0]
  4110aa:	cmp    eax,0x4700048a
  4110af:	mov    ds:0xe97c5e3a,al
  4110b4:	lds    edi,FWORD PTR [eax+0x3a247]
  4110ba:	push   0x4c93e50
  4110bf:	dec    esi
  4110c0:	mov    gs,esp
  4110c2:	(bad)  
  4110c3:	out    0x92,al
  4110c5:	xor    DWORD PTR [edx],0x11
  4110c8:	jmp    0xfe3580d
  4110cd:	adc    al,ah
  4110cf:	push   ebp
  4110d0:	adc    BYTE PTR [esi],ch
  4110d2:	xchg   BYTE PTR [edx+0x233e7403],ah
  4110d8:	xlat   BYTE PTR ds:[ebx]
  4110d9:	js     0x4110f4
  4110db:	loope  0x4110e0
  4110dd:	add    BYTE PTR [edx],bh
  4110df:	lahf   
  4110e0:	pop    ebx
  4110e1:	add    DWORD PTR [edi-0x5e],eax
  4110e4:	add    ecx,ecx
  4110e6:	test   BYTE PTR ds:0xa281fa3f,dl
  4110ec:	add    eax,esi
  4110ee:	pop    es
  4110ef:	mov    eax,ds:0xa407c603
  4110f4:	add    eax,esi
  4110f6:	pop    es
  4110f7:	or     edx,ebp
  4110f9:	add    eax,DWORD PTR [ecx-0x76fc1ab7]
  4110ff:	dec    ecx
  411100:	in     al,dx
  411101:	dec    bl
  411103:	inc    esi
  411104:	xchg   ebp,eax
  411105:	xor    al,0xdd
  411107:	or     BYTE PTR [ebx],dl
  411109:	add    al,0xdd
  41110b:	or     BYTE PTR [ebx],dl
  41110d:	add    al,0x0
  41110f:	add    ch,ch
  411111:	or     BYTE PTR [ebx],al
  411113:	add    al,0xef
  411115:	call   0x23881504
  41111a:	or     DWORD PTR [esi],ebp
  41111c:	inc    ebp
  41111d:	jle    0x4110c3
  41111f:	popf   
  411120:	xchg   edi,eax
  411121:	nop
  411122:	cld    
  411123:	adc    ch,BYTE PTR [ecx+0x4a]
  411126:	jmp    0xeb571837
  41112b:	retf   0xc804
  41112e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112f:	xchg   ebx,eax
  411130:	inc    edi
  411131:	or     ecx,ebp
  411133:	add    ecx,edx
  411135:	inc    ebp
  411136:	cmp    DWORD PTR [eax+edx*1],esi
  411139:	push   ss
  41113a:	sbb    eax,0xf490472e
  41113f:	push   cs
  411140:	xor    DWORD PTR [edx-0x17],ecx
  411143:	or     al,0x7
  411145:	push   ss
  411146:	out    0xc0,al
  411148:	mov    bl,BYTE PTR [ecx+0x94703e9]
  41114e:	dec    BYTE PTR [esi]
  411150:	fisttp DWORD PTR [edi+0x4a291adc]
  411156:	jmp    0xb0da9be7
  41115b:	les    esi,FWORD PTR [edx-0x7c]
  41115e:	int    0x84
  411160:	mov    eax,DWORD PTR [eax+0x38cf3e64]
  411166:	inc    ecx
  411167:	mov    edi,0xabe94a61
  41116c:	push   es
  41116d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116e:	mov    esi,0x3f798
  411173:	test   eax,0x7480000
  411178:	sub    DWORD PTR [ebx+eax*8],0xfffffff4
  41117c:	jbe    0x411190
  41117e:	rol    BYTE PTR [ebp-0x10],0x39
  411182:	mov    bl,0xee
  411184:	stos   BYTE PTR es:[edi],al
  411185:	jmp    0x120197ce
  41118a:	sub    eax,0xce2cb600
  41118f:	cmp    BYTE PTR [edi],cl
  411191:	aaa    
  411192:	and    DWORD PTR [edi+0x45f6e650],ecx
  411198:	std    
  411199:	sbb    DWORD PTR [esi],edi
  41119b:	push   edi
  41119c:	inc    ebp
  41119d:	gs adc al,0x0
  4111a0:	mov    dh,0xa4
  4111a2:	jecxz  0x4111dd
  4111a4:	setg   BYTE PTR [ecx-0x6d]
  4111a8:	push   eax
  4111a9:	ficom  WORD PTR [esi+0x3f99f944]
  4111af:	push   edi
  4111b0:	inc    ebp
  4111b1:	inc    ecx
  4111b2:	push   esp
  4111b3:	(bad)  
  4111b4:	mov    dh,0xac
  4111b6:	mov    dh,0x39
  4111b8:	pcmpeqd mm2,QWORD PTR [ecx-0x6b]
  4111bc:	push   eax
  4111bd:	cmp    DWORD PTR es:[ecx+0x49ee3368],ebx
  4111c4:	add    BYTE PTR [ecx+edi*1+0x7d],ah
  4111c8:	push   eax
  4111c9:	add    DWORD PTR [edi-0x3c16ff9d],ebx
  4111cf:	lds    esi,FWORD PTR [esp+ebp*2]
  4111d2:	and    DWORD PTR [ebp+0x50],edi
  4111d5:	add    DWORD PTR [edi+0x60],ebx
  4111d8:	add    cl,ch
  4111da:	add    BYTE PTR [eax],al
  4111dc:	adc    al,0x7c
  4111de:	inc    ebp
  4111df:	jne    0x4111f4
  4111e1:	and    ebp,eax
  4111e3:	(bad)  
  4111e5:	or     eax,ebp
  4111e7:	cwde   
  4111e8:	out    0x8e,eax
  4111ea:	inc    ecx
  4111ec:	xor    BYTE PTR [ecx-0x437eff01],dh
  4111f2:	ret    
  4111f3:	push   ebp
  4111f4:	adc    eax,0x42c48161
  4111f9:	jbe    0x4111fa
  4111fb:	jmp    FWORD PTR ds:0x340069de
  411201:	add    eax,0x627675ff
  411206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411207:	aad    0xd1
  411209:	jbe    0x411194
  41120b:	inc    ebp
  41120c:	ret    0xdd
  41120f:	add    cl,dl
  411211:	aaa    
  411212:	push   DWORD PTR [ebp+0x56]
  411215:	(bad)  
  411216:	out    0xd4,eax
  411218:	shl    DWORD PTR [ebp+0x68],1
  41121b:	pushf  
  41121c:	pop    esi
  41121d:	or     al,BYTE PTR [eax]
  41121f:	(bad)  
  411220:	fnsetpm(287 only) 
  411222:	(bad)  
  411223:	jmp    DWORD PTR [ecx+0x767be7d5]
  411229:	jbe    0x41122a
  41122b:	(bad)  
  41122c:	stos   DWORD PTR es:[edi],eax
  41122d:	in     eax,0xfe
  41122f:	inc    DWORD PTR [ecx+0x2e000011]
  411235:	add    DWORD PTR [ebp-0x89aea0],0xa9548650
  41123f:	add    BYTE PTR [eax],al
  411241:	add    BYTE PTR [esi],bl
  411243:	mov    ds:0x803c2bc8,eax
  411248:	mov    ebp,0xff765174
  41124d:	jmp    0x41123c
  41124f:	mov    DWORD PTR [edi],edi
  411251:	add    BYTE PTR [ebx+0x9],ch
  411254:	mov    edx,0x9ee01
  411259:	or     edi,DWORD PTR [ecx+edi*8]
  41125c:	add    al,dh
  41125e:	jmp    0x5f82596c
  411263:	ins    DWORD PTR es:[edi],dx
  411264:	add    BYTE PTR [eax],0xae
  411267:	or     DWORD PTR [edx-0x1b],esi
  41126a:	inc    edi
  41126b:	stos   DWORD PTR es:[edi],eax
  41126c:	ret    
  41126d:	je     0x4112c8
  41126f:	dec    eax
  411270:	js     0x411272
  411272:	inc    edi
  411273:	mov    al,ds:0x4f278588
  411278:	xchg   esi,eax
  411279:	push   edi
  41127b:	push   esi
  41127c:	adc    BYTE PTR [eax],cl
  41127e:	lahf   
  41127f:	push   ss
  411280:	scas   eax,DWORD PTR es:[edi]
  411281:	dec    DWORD PTR [eax+0x476a077a]
  411287:	cli    
  411288:	add    edi,edi
  41128a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41128c:	stos   DWORD PTR es:[edi],eax
  41128d:	test   eax,0xe8967e9b
  411292:	jp     0x411218
  411294:	xchg   esi,eax
  411295:	push   edi
  411297:	push   cs
  411298:	adc    BYTE PTR [eax],cl
  41129a:	outs   dx,DWORD PTR ds:[esi]
  41129b:	cld    
  41129c:	scas   eax,DWORD PTR es:[edi]
  41129d:	call   DWORD PTR [eax+0x7]
  4112a0:	add    al,0x4
  4112a2:	inc    edi
  4112a3:	mov    al,ds:0xe9ab
  4112a8:	sbb    BYTE PTR [esi+edx*4],ch
  4112ab:	mov    edx,eax
  4112ad:	push   esi
  4112ae:	xchg   esi,eax
  4112af:	push   DWORD PTR [eax]
  4112b1:	retf   
  4112b2:	xchg   esi,eax
  4112b3:	add    eax,DWORD PTR [edi-0x5e]
  4112b6:	xchg   esi,eax
  4112b7:	mov    ch,0x83
  4112b9:	retf   
  4112ba:	xchg   ebp,eax
  4112bb:	jmp    FWORD PTR [edi+0x10fff3a0]
  4112c1:	retf   
  4112c2:	add    eax,DWORD PTR [edi+eax*2]
  4112c5:	mov    ds:0xa2ae52ab,al
  4112ca:	add    edx,DWORD PTR [eax-0x8]
  4112cd:	sub    eax,0xfbf0ff37
  4112d2:	xchg   ebp,eax
  4112d3:	jne    0x411314
  4112d5:	cli    
  4112d6:	and    ah,dl
  4112d8:	loopne 0x411265
  4112da:	sub    bh,bh
  4112dc:	inc    esp
  4112dd:	mov    ds:0x7e9aff03,al
  4112e2:	xchg   esi,eax
  4112e3:	dec    eax
  4112e5:	or     DWORD PTR [ecx+0x3],edx
  4112e8:	push   edi
  4112e9:	or     ecx,ebp
  4112eb:	sub    eax,DWORD PTR [edi+0x5]
  4112ee:	jmp    0x8023b1f6
  4112f3:	add    al,0x47
  4112f5:	cmp    esi,eax
  4112f7:	dec    edi
  4112f8:	add    ecx,DWORD PTR [esi+edi*4-0x1ee9676b]
  4112ff:	stos   DWORD PTR es:[edi],eax
  411300:	dec    esi
  411301:	mov    ch,0xae
  411303:	xchg   ebp,eax
  411304:	lahf   
  411305:	(bad)  
  411306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411307:	xchg   ebp,eax
  411308:	cmp    BYTE PTR [ecx],0x9e
  41130b:	sldt   WORD PTR [eax]
  41130e:	dec    edi
  41130f:	mov    eax,ds:0x8c70b19c
  411314:	xor    DWORD PTR [ebx],0x87868c69
  41131a:	retf   0x7e31
  41131d:	xchg   ebp,eax
  41131e:	pop    eax
  41131f:	cmp    DWORD PTR [ecx],eax
  411321:	mov    edi,0xabe94a21
  411326:	mov    dl,0xa5
  411328:	xchg   bp,ax
  41132a:	into   
  41132b:	test   DWORD PTR [ebp+0x6a8c3894],esi
  411331:	push   edi
  411332:	fwait
  411333:	mov    WORD PTR [esi-0x6b],cs
  411336:	inc    edi
  411337:	adc    eax,0x30e280ac
  41133c:	ds xchg ebp,eax
  41133e:	sbb    ch,dh
  411340:	mov    edx,0x9185c5d7
  411345:	xchg   esp,eax
  411346:	or     BYTE PTR [ebp+ebp*8+0x1e30ba94],cl
  41134d:	xchg   ebp,eax
  41134e:	clc    
  41134f:	mov    ebx,DWORD PTR [ebx+ecx*1-0x6ac5a921]
  411356:	call   0xe07d67e2
  41135b:	mov    edi,esi
  41135d:	jmp    FWORD PTR [esi-0x74]
  411360:	add    dh,dh
  411362:	inc    ecx
  411363:	add    eax,ebp
  411365:	dec    eax
  411366:	xchg   esi,eax
  411367:	mov    edi,edi
  411369:	out    0x11,al
  41136b:	xor    edi,edi
  41136d:	(bad)  
  41136f:	mov    esi,DWORD PTR [ebp-0x25ffffc3]
  411375:	mov    edi,edi
  411377:	into   
  411378:	cmp    DWORD PTR [ecx],eax
  41137a:	call   0xffcceb0a
  41137f:	rol    BYTE PTR [eax+0x1f],cl
  411382:	add    BYTE PTR [ebx+0x4b],al
  411385:	mov    WORD PTR [ebp-0x1f],?
  411388:	fcom   QWORD PTR [ebp-0x2d]
  41138b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41138c:	fisttp DWORD PTR [ebx-0x742dca4b]
  411392:	inc    DWORD PTR [ecx-0x71004d61]
  411398:	rcl    DWORD PTR [ebp+0x5c],cl
  41139b:	xchg   BYTE PTR [ebx-0x55761775],bh
  4113a1:	mov    edi,edi
  4113a3:	ret    0x208f
  4113a6:	adc    DWORD PTR [esi-0x2e17f6fb],edi
  4113ac:	lods   al,BYTE PTR ds:[esi]
  4113ad:	or     DWORD PTR [eax],eax
  4113af:	jo     0x41136a
  4113b1:	(bad)  
  4113b3:	push   esi
  4113b4:	fild   DWORD PTR [esi-0x752c0243]
  4113ba:	(bad)  
  4113bb:	jmp    0x3ca8ff10
  4113c0:	and    cl,BYTE PTR [edx+0x0]
  4113c3:	ss sbb ebp,0xa1b32efe
  4113ca:	or     eax,0xb094451
  4113cf:	sub    DWORD PTR [eax-0x1],ecx
  4113d2:	mov    WORD PTR [esp+edx*1-0x74],?
  4113d6:	dec    DWORD PTR [esi]
  4113d8:	add    BYTE PTR [eax],al
  4113da:	ss mov dl,al
  4113dd:	add    BYTE PTR [ebp-0x158a24ff],ch
  4113e3:	add    DWORD PTR [ebp-0x8926d0],0x50
  4113ea:	inc    esi
  4113eb:	mov    bl,0xa7
  4113ed:	add    BYTE PTR [esi+0x238d23ec],ch
  4113f3:	mov    ch,0xfe
  4113f5:	call   FWORD PTR [ecx-0x598a012b]
  4113fb:	outs   dx,BYTE PTR ds:[esi]
  4113fc:	inc    ebp
  4113fd:	ror    DWORD PTR [ecx-0x258a008a],cl
  411403:	jbe    0x41147a
  411405:	or     BYTE PTR [esi-0x26002c84],al
  41140b:	(bad)  
  41140c:	pop    edx
  41140d:	leave  
  41140e:	lods   al,BYTE PTR ds:[esi]
  41140f:	add    DWORD PTR [eax],eax
  411411:	push   ebp
  411412:	cmc    
  411413:	push   0x6ec6c481
  411418:	(bad)  
  411419:	dec    DWORD PTR [ebx]
  41141b:	inc    eax
  41141c:	cld    
  41141d:	push   eax
  41141e:	leave  
  41141f:	lock or edi,edi
  411422:	xchg   ebx,eax
  411423:	pop    es
  411424:	sub    DWORD PTR [ecx+0x5e],eax
  411427:	outs   dx,BYTE PTR ds:[esi]
  411428:	mov    edx,0xb065ea8
  41142d:	sar    BYTE PTR [ecx],0x81
  411430:	out    0x0,eax
  411432:	cs push es
  411434:	mov    DWORD PTR [ebp-0x6a],0x1e000005
  41143b:	mov    edi,0xf445
  411440:	mov    esi,edi
  411442:	(bad)  
  411443:	push   esp
  411445:	add    eax,0x80ab006a
  41144a:	in     al,dx
  41144b:	neg    DWORD PTR [ecx+0x76]
  41144e:	push   eax
  41144f:	push   0xffffffee
  411451:	mov    BYTE PTR [ebp-0xc],al
  411454:	mov    esi,0x47f48588
  411459:	jmp    0x4113ed
  41145b:	call   DWORD PTR [edi-0x1f07e705]
  411461:	or     al,0x8f
  411463:	call   0x454c26
  411468:	cmp    al,0xe0
  41146a:	pop    ss
  41146b:	add    eax,0x444de
  411470:	inc    edi
  411471:	pop    ds
  411472:	push   eax
  411473:	in     al,dx
  411474:	mov    al,0xaa
  411476:	xchg   edx,eax
  411477:	add    DWORD PTR [ebx],edi
  411479:	mov    ds:0xb29bbd86,al
  41147e:	xchg   edx,eax
  41147f:	dec    DWORD PTR [eax-0x34]
  411482:	or     bh,bh
  411484:	add    cl,al
  411486:	sahf   
  411487:	mov    dh,0x1f
  411489:	ins    BYTE PTR es:[edi],dx
  41148a:	loop   0x4114cc
  41148c:	inc    edi
  41148d:	sub    eax,0x6278f488
  411492:	xchg   edx,eax
  411493:	push   eax
  411494:	outs   dx,DWORD PTR ds:[esi]
  411495:	sbb    ebx,DWORD PTR [ebx+0x0]
  411498:	inc    edi
  411499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41149a:	ret    
  41149b:	je     0x411493
  41149d:	sub    al,0x88
  41149f:	call   0x50d396fc
  4114a4:	add    BYTE PTR [eax],al
  4114a6:	retf   0x9724
  4114a9:	not    DWORD PTR [eax+0x12]
  4114ac:	xor    edi,edi
  4114ae:	shr    BYTE PTR [ebx+0x19503592],cl
  4114b4:	inc    ebp
  4114b5:	add    BYTE PTR [edi],ch
  4114b7:	fld    TBYTE PTR [edx-0x3c93cf01]
  4114bd:	je     0x411455
  4114bf:	jmp    0xd05a054b
  4114c4:	xchg   ecx,eax
  4114c5:	push   0xbea27246
  4114ca:	adc    dh,al
  4114cc:	sti    
  4114cd:	out    0x85,eax
  4114cf:	and    al,0x92
  4114d1:	inc    esp
  4114d3:	or     DWORD PTR [edi+ebx*4-0x10],esp
  4114d7:	mov    BYTE PTR [esi],bl
  4114d9:	add    al,0x7a
  4114db:	adc    eax,0xfee80383
  4114e0:	loopne 0x41147d
  4114e2:	xor    BYTE PTR [ebx+0x6],bl
  4114e5:	xchg   edx,eax
  4114e6:	in     al,dx
  4114e7:	adc    edx,DWORD PTR [ebx-0x1f012ffc]
  4114ed:	fwait
  4114ee:	and    al,0x5b
  4114f0:	out    dx,al
  4114f1:	xchg   ecx,eax
  4114f2:	sar    BYTE PTR [esi-0x7747662f],0xde
  4114f9:	push   edi
  4114fa:	mov    bh,0x80
  4114fc:	(bad)  
  4114fd:	xchg   ecx,eax
  4114fe:	test   al,0xfe
  411500:	loopne 0x41149d
  411502:	or     bl,BYTE PTR [ebx-0x3a]
  411505:	xchg   ecx,eax
  411506:	cwde   
  411507:	mov    esi,0x99b9
  41150c:	nop
  41150d:	mov    cl,al
  41150f:	or     eax,0x91ae8872
  411514:	or     al,BYTE PTR [ecx-0x77862370]
  41151a:	sahf   
  41151b:	xchg   ecx,eax
  41151c:	cli    
  41151d:	test   BYTE PTR [ecx-0x16f65f39],al
  411523:	mov    edx,0x36e91185
  411528:	int3   
  411529:	jne    0x411593
  41152b:	enter  0x806b,0x76
  41152f:	xchg   ecx,eax
  411530:	mov    edx,0x40346cce
  411535:	(bad)  
  411536:	hlt    
  411537:	nop
  411538:	jb     0x411552
  41153a:	adc    BYTE PTR [ebx+0x47],al
  41153d:	jno    0x4114c4
  41153f:	imul   eax,DWORD PTR [edi+0x9],0x8e50c3e2
  411546:	call   0xf47:0x26094702
  41154d:	or     DWORD PTR [eax],eax
  41154f:	jmp    0xa5081e98
  411554:	fadd   DWORD PTR [edi-0xcbb16f9]
  41155a:	call   DWORD PTR [edx-0x7d000cbc]
  411560:	inc    esp
  411561:	xchg   esi,eax
  411562:	inc    ebp
  411563:	adc    eax,0xfd85961b
  411568:	mov    edi,0xb799ff87
  41156d:	std    
  41156e:	div    esi
  411570:	add    BYTE PTR [eax],al
  411572:	xor    DWORD PTR [ebp+0x92f6fe8],eax
  411578:	add    dl,dh
  41157a:	test   ah,bh
  41157c:	add    al,0xd0
  41157e:	scas   al,BYTE PTR es:[edi]
  41157f:	or     BYTE PTR [eax],al
  411581:	jmp    0x28699ed2
  411586:	dec    ebx
  411587:	mov    BYTE PTR [ebp-0xb],dh
  41158a:	mov    esp,0xb7bed8a9
  41158f:	fmul   DWORD PTR [edx-0xb71f667]
  411595:	mov    dh,0xd7
  411597:	xchg   DWORD PTR [eax+0x3b],edx
  41159a:	fistp  DWORD PTR [ecx-0x6e286128]
  4115a0:	test   DWORD PTR [ecx-0x7e007831],ebx
  4115a6:	scas   eax,DWORD PTR es:[edi]
  4115a7:	pop    esp
  4115a8:	inc    DWORD PTR [esi+0x3c68093a]
  4115ae:	addr16 enter 0x75ff,0xf1
  4115b3:	js     0x4115ac
  4115b5:	outs   dx,BYTE PTR ds:[esi]
  4115b6:	xlat   BYTE PTR ds:[ebx]
  4115b7:	xchg   BYTE PTR ds:0xffca1df6,dh
  4115bd:	push   eax
  4115be:	fistp  WORD PTR [esi-0x1]
  4115c1:	push   esi
  4115c2:	lods   eax,DWORD PTR ds:[esi]
  4115c3:	mov    esp,fs
  4115c5:	push   esi
  4115c6:	mov    bh,0x86
  4115c8:	push   0x0
  4115ca:	cs and eax,esi
  4115cd:	das    
  4115ce:	fisttp WORD PTR [edx]
  4115d0:	push   DWORD PTR [ebp-0x5eb2]
  4115d6:	add    BYTE PTR [eax],al
  4115d8:	xor    DWORD PTR [edi+0xe],ebx
  4115db:	sub    DWORD PTR [edi+0x39c9e80a],ebp
  4115e1:	cdq    
  4115e2:	dec    DWORD PTR [ecx-0x859a5]
  4115e8:	push   ecx
  4115e9:	and    al,0x0
  4115eb:	push   0x406911
  4115f0:	rcr    esp,1
  4115f2:	out    dx,eax
  4115f3:	not    ecx
  4115f5:	xchg   esi,eax
  4115f6:	push   DWORD PTR ds:0x4063a1
  4115fc:	xchg   esi,eax
  4115fd:	loop   0x4115d5
  4115ff:	call   DWORD PTR [ecx-0x76177afc]
  411605:	xchg   esi,eax
  411606:	inc    DWORD PTR [ebx-0x84e2d]
  41160c:	or     DWORD PTR ds:0xd81d4974,0x96d1f7eb
  411616:	add    BYTE PTR [esi+ebp*1-0x76],dh
  41161a:	mov    ebp,0xff96d9e8
  41161f:	add    BYTE PTR [edx+0x5e],bl
  411622:	add    BYTE PTR [bp-0x59],bl
  411626:	mov    esi,0xe7853bff
  41162b:	out    dx,al
  41162c:	mov    esi,0x1bffff96
  411631:	test   eax,0x95d1fff7
  411636:	jne    0x411640
  411638:	(bad)  
  411639:	retf   0xffd0
  41163c:	add    BYTE PTR [eax],al
  41163e:	mov    eax,ds:0x99e8b596
  411643:	xchg   esi,eax
  411644:	(bad)  
  411645:	inc    DWORD PTR [edi+0x65]
  411648:	sti    
  411649:	out    0x5b,eax
  41164b:	inc    ecx
  41164c:	(bad)  
  41164d:	call   FWORD PTR [eax]
  41164f:	add    eax,0x4710f7a8
  411654:	(bad)  
  411655:	jne    0x411696
  411657:	enter  0xd0e5,0x0
  41165b:	aaa    
  41165c:	(bad)  
  41165d:	mov    ch,0xe3
  41165f:	es (bad) 
  411661:	(bad)  
  411662:	fistp  WORD PTR [edi-0x49]
  411665:	(bad)  
  411666:	call   0xd92d6f89
  41166b:	push   ss
  41166c:	(bad)
  411670:	(bad)  
  411671:	call   eax
  411673:	cmp    al,0x9c
  411675:	test   eax,0x9b1a9b7e
  41167b:	jbe    0x41160b
  41167d:	push   edx
  41167f:	pop    edi
  411680:	xchg   esi,eax
  411681:	push   DWORD PTR [eax-0x60f7e79a]
  411687:	xchg   esp,eax
  411688:	(bad)  
  411689:	jmp    DWORD PTR [eax-0x6f0fa7aa]
  41168f:	dec    esi
  411690:	mov    gs,eax
  411692:	inc    esi
  411693:	pushf  
  411694:	mov    ?,edi
  411696:	mov    BYTE PTR [esp+ecx*4],dh
  411699:	jmp    0xffcfcc61
  41169e:	js     0x4116c4
  4116a0:	nop
  4116a1:	call   0xce3d16a6
  4116a6:	add    al,BYTE PTR [eax]
  4116a8:	jle    0x41165b
  4116aa:	sti    
  4116ab:	(bad)  
  4116ac:	sti    
  4116ad:	jmp    0x19:0x8b83839e
  4116b4:	fnsave [eax-0x72]
  4116b7:	jne    0x4116f8
  4116b9:	mov    dl,dh
  4116bb:	rol    BYTE PTR [eax-0xc],1
  4116be:	jnp    0x411705
  4116c0:	cmp    ecx,DWORD PTR [edx]
  4116c2:	shl    eax,1
  4116c4:	popa   
  4116c5:	retf   0x8ee8
  4116c8:	mov    dl,0x11
  4116ca:	inc    ecx
  4116cb:	daa    
  4116cc:	and    DWORD PTR [ebp+0x348b1b4e],eax
  4116d2:	test   al,0x3
  4116d4:	adc    bh,bh
  4116d6:	lock fwait
  4116d8:	jo     0x41165d
  4116da:	mov    gs,WORD PTR ss:[edi-0xb]
  4116de:	std    
  4116df:	inc    esp
  4116e0:	inc    edi
  4116e1:	test   BYTE PTR [ebx+edi*8-0x71e3ba18],bl
  4116e8:	call   0x881f93de
  4116ed:	or     DWORD PTR [esi],ecx
  4116ef:	sbb    BYTE PTR [edi+0x71],cl
  4116f2:	(bad)  
  4116f3:	nop
  4116f4:	rol    BYTE PTR [esi+edi*8+0x7c84cb17],1
  4116fb:	sti    
  4116fc:	test   al,0x1c
  4116fe:	sbb    BYTE PTR [esi+0x8ab52b8],cl
  411704:	inc    edi
  411705:	fidiv  WORD PTR [ecx-0x60]
  411708:	add    BYTE PTR [eax],al
  41170a:	pop    ds
  41170b:	or     ecx,ebp
  41170d:	pushf  
  41170e:	loope  0x411694
  411710:	push   esp
  411711:	add    BYTE PTR [eax+0x239bf0fe],bl
  411717:	jle    0x4116d7
  411719:	lea    edi,[esi+0x47]
  41171c:	loope  0x411721
  41171e:	sbb    dl,BYTE PTR [eax+0x14fa81bd]
  411724:	jmp    0xe868dc25
  411729:	add    eax,DWORD PTR [edi-0x7c]
  41172c:	sbb    al,0x0
  41172e:	outs   dx,DWORD PTR ds:[esi]
  41172f:	fild   QWORD PTR [esi-0x56efa773]
  411735:	pop    ss
  411736:	aaa    
  411737:	icebp  
  411738:	push   0x907dc
  41173d:	jbe    0x411797
  41173f:	adc    eax,0x83f222e8
  411744:	push   DWORD PTR [eax-0x78]
  411747:	adc    eax,0x824ce96a
  41174c:	das    
  41174d:	test   al,0x44
  41174f:	icebp  
  411750:	add    ebx,DWORD PTR [ecx]
  411752:	test   BYTE PTR [ecx],cl
  411754:	(bad)  
  411755:	cld    
  411756:	adc    esi,DWORD PTR [ecx]
  411758:	inc    ecx
  411759:	jmp    0x3716f20a
  41175e:	ror    BYTE PTR [edi],cl
  411760:	shl    BYTE PTR [ebp+0x264fd3ea],0x58
  411767:	adc    eax,0x83b12ee8
  41176c:	(bad)  
  41176d:	mov    ecx,0x84140000
  411772:	jne    0x411755
  411774:	mov    esp,0xc206ff99
  411779:	jo     0x41179c
  41177b:	sbb    bh,BYTE PTR [edx-0x82a177d]
  411781:	cmp    edi,0xffffff83
  411784:	inc    esp
  411785:	icebp  
  411786:	clc    
  411787:	push   ss
  411788:	add    al,0x9
  41178a:	push   0xffc894e5
  41178f:	inc    eax
  411790:	inc    ebp
  411791:	or     DWORD PTR [eax],eax
  411793:	imul   edi,DWORD PTR [edx+eiz*1+0xfc3c6d6],0xd39935c0
  41179e:	dec    edi
  41179f:	mov    dh,0x59
  4117a1:	adc    eax,0x83b256e8
  4117a6:	(bad)  
  4117a7:	cmp    DWORD PTR [ebx],edi
  4117a9:	test   BYTE PTR [ebp-0xf],dh
  4117ac:	int3   
  4117ad:	loope  0x4117ad
  4117af:	xchg   esi,eax
  4117b0:	shl    DWORD PTR [eax-0x17],cl
  4117b3:	mov    ebx,0xe883cb
  4117b8:	ret    0xffb9
  4117bb:	push   DWORD PTR [ecx*1-0x37f60698]
  4117c2:	jmp    DWORD PTR [edi+0x1]
  4117c5:	push   edi
  4117c6:	inc    eax
  4117c7:	add    BYTE PTR [ecx-0x20d6f1a5],ch
  4117cd:	push   es
  4117ce:	call   0xffd67bb8
  4117d3:	or     eax,DWORD PTR [eax]
  4117d5:	add    BYTE PTR [esi+0x1a],ch
  4117d8:	push   ds
  4117d9:	push   eax
  4117da:	scas   al,BYTE PTR es:[edi]
  4117db:	xchg   ebp,eax
  4117dc:	jne    0x4117ea
  4117de:	jbe    0x411814
  4117e0:	(bad)  
  4117e1:	(bad)  
  4117e2:	cmp    DWORD PTR [esi],esi
  4117e4:	push   eax
  4117e5:	push   DWORD PTR [ebx+0x2920e77e]
  4117eb:	xchg   ebp,eax
  4117ec:	(bad)  
  4117ed:	call   0x40d080
  4117f2:	inc    esi
  4117f3:	loope  0x4117c6
  4117f5:	dec    DWORD PTR [ecx+0x20]
  4117f8:	add    BYTE PTR [eax+0x47],ch
  4117fb:	gs inc eax
  4117fd:	add    BYTE PTR [esi-0x51bed093],dh
  411803:	push   ds
  411804:	add    al,BYTE PTR [eax]
  411806:	scas   al,BYTE PTR es:[edi]
  411807:	xchg   al,ch
  411809:	lods   eax,DWORD PTR ds:[esi]
  41180a:	repz mov ?,edi
  41180d:	or     ebx,esi
  41180f:	sbb    DWORD PTR [esi],ebx
  411811:	push   eax
  411812:	pop    esi
  411813:	mov    ?,WORD PTR [ebp+0xc]
  411816:	xchg   BYTE PTR [edi-0x2b],ah
  411819:	dec    DWORD PTR [ecx+0x53ff503d]
  41181f:	test   edi,esp
  411821:	call   0xe940a6de
  411826:	ss mov ebx,0x1ad6ffff
  41182c:	sar    bh,cl
  41182e:	leave  
  41182f:	and    eax,0x31472fd9
  411834:	add    al,0xff
  411836:	shl    BYTE PTR [ebx-0x65],cl
  411839:	add    eax,0x8b790000
  41183e:	mov    edx,DWORD PTR [eax-0x9]
  411841:	add    dl,BYTE PTR [ecx]
  411843:	or     BYTE PTR [edi],ch
  411845:	mov    bl,0x8a
  411847:	(bad)  
  411848:	cmp    BYTE PTR [eax-0x14cf2dcd],cl
  41184e:	mov    dh,BYTE PTR [ebp+0x3b]
  411851:	fdivr  DWORD PTR [edx]
  411853:	shl    BYTE PTR [eax],cl
  411855:	fstp   TBYTE PTR [edx+eax*8-0x74cf8fb1]
  41185c:	and    ebp,edi
  41185e:	mov    edi,0x1d709df4
  411863:	add    al,BYTE PTR [eax]
  411865:	(bad)  
  411868:	jbe    0x41188d
  41186a:	mov    edi,edi
  41186c:	mov    esi,0x426887b4
  411871:	jno    0x411876
  411873:	add    bh,ch
  411875:	scas   al,BYTE PTR es:[edi]
  411876:	mov    ch,0xff
  411878:	fsubr  st,st(0)
  41187a:	inc    eax
  41187b:	clc    
  41187c:	pop    edi
  41187d:	je     0x411883
  41187f:	add    BYTE PTR [edi-0x7d],al
  411882:	adc    al,bh
  411884:	scas   eax,DWORD PTR es:[edi]
  411885:	daa    
  411886:	add    BYTE PTR [bx+0x67],al
  41188a:	ret    
  41188b:	je     0x4118e8
  41188d:	sub    eax,0x70470100
  411892:	adc    cl,BYTE PTR ds:0xff8be4a0
  411898:	adc    ch,BYTE PTR [eax-0x65]
  41189b:	mov    BYTE PTR [ecx+0xeb8a4a],dl
  4118a1:	add    BYTE PTR [edi],bh
  4118a3:	ret    
  4118a4:	adc    al,bh
  4118a6:	outs   dx,DWORD PTR ds:[esi]
  4118a7:	mov    ebx,0xc578ffb4
  4118ac:	(bad)  
  4118ae:	or     ecx,DWORD PTR [ecx]
  4118b0:	mov    edi,0x9dd8688a
  4118b5:	adc    BYTE PTR [edi+0x71],cl
  4118b8:	pop    es
  4118b9:	mov    bl,BYTE PTR [eax-0x7f]
  4118bc:	add    ebp,esi
  4118be:	push   0x488a9f3c
  4118c3:	or     eax,0xf15b0fa9
  4118c8:	mov    ebx,edx
  4118ca:	xchg   DWORD PTR [ecx],ecx
  4118cc:	sbb    DWORD PTR [esi+edi*8-0x687599aa],ebx
  4118d3:	adc    ah,0xfb
  4118d6:	sub    cl,dl
  4118d8:	push   esi
  4118d9:	mov    bl,BYTE PTR [eax]
  4118db:	hlt    
  4118dc:	or     DWORD PTR [edx+edi*1+0x3c8a4657],ebx
  4118e3:	dec    ecx
  4118e4:	mov    ch,0xef
  4118e6:	push   0x47450666
  4118eb:	fld    DWORD PTR [eax+0x5d]
  4118ee:	sbb    al,BYTE PTR [ecx-0x917ccda]
  4118f4:	lock fwait
  4118f6:	pop    ss
  4118f7:	jg     0x41190f
  4118f9:	mov    ch,BYTE PTR [ebp+0x1d]
  4118fc:	add    DWORD PTR [ecx-0x1f97f06],edx
  411902:	mov    ch,dh
  411904:	aam    0x1b
  411906:	add    BYTE PTR [eax],al
  411908:	stos   BYTE PTR es:[edi],al
  411909:	xor    BYTE PTR [eax+0x62711703],ch
  41190f:	mov    al,0xb0
  411911:	cmp    BYTE PTR [ecx],0x89
  411914:	xor    dl,BYTE PTR [ecx]
  411916:	shl    ebx,1
  411918:	mov    ds:0x471ed680,al
  41191d:	icebp  
  41191e:	mov    esi,0x510907d9
  411923:	add    BYTE PTR [edi-0x36],dl
  411926:	call   0x5153b3
  41192b:	add    BYTE PTR [ecx+ecx*1],al
  41192e:	call   0xffc1d08c
  411933:	cmp    DWORD PTR [esi-0x4b6ef80a],edi
  411939:	jle    0x41193a
  41193b:	xchg   esi,eax
  41193c:	cmp    DWORD PTR [ecx],ecx
  41193e:	push   0xffc96e90
  411943:	adc    BYTE PTR [edi+0x39],al
  411946:	inc    ecx
  411947:	jmp    0xc0504f1b
  41194c:	test   DWORD PTR [ecx],ecx
  41194e:	call   0xffc0fa4c
  411953:	repnz add al,0xf5
  411956:	adc    eax,0xff756070
  41195b:	fmul   st(0),st
  41195d:	jg     0x4119d4
  41195f:	loope  0x41190d
  411961:	mov    ecx,0x7fbe46fd
  411966:	jne    0x41199d
  411968:	jecxz  0x4119a8
  41196a:	shl    DWORD PTR [esi],1
  41196c:	add    BYTE PTR [eax],al
  41196e:	into   
  41196f:	repnz inc eax
  411972:	into   
  411973:	das    
  411974:	inc    ecx
  411975:	jmp    0xa87141c6
  41197a:	inc    esp
  41197b:	xor    BYTE PTR ds:0xffc8fde6,0x0
  411982:	(bad)  
  411983:	pop    ebx
  411984:	inc    DWORD PTR [esi]
  411986:	adc    eax,DWORD PTR [eax-0x57230e8b]
  41198c:	std    
  41198d:	test   bh,0xf2
  411990:	inc    DWORD PTR [eax-0x16bed043]
  411996:	dec    esp
  411997:	sub    BYTE PTR [eax],dh
  411999:	sub    BYTE PTR [ebx-0x80],cl
  41199c:	xor    eax,0xffc87de6
  4119a1:	rcr    BYTE PTR [edi-0x7eff00a5],0x7c
  4119a8:	mov    edi,0x45029874
  4119ad:	hlt    
  4119ae:	mov    cl,0xe
  4119b0:	hlt    
  4119b1:	(bad)  
  4119b2:	cmp    edi,DWORD PTR [ebp-0x19]
  4119b5:	pusha  
  4119b6:	mov    ds:0x3bffff90,eax
  4119bb:	cdq    
  4119bc:	call   0xffd1b8ae
  4119c1:	push   0x5e
  4119c3:	and    ebp,esi
  4119c5:	das    
  4119c6:	pop    ds
  4119c7:	add    eax,0xcbfe0468
  4119cc:	jmp    DWORD PTR [edi+0x2c]
  4119cf:	or     eax,DWORD PTR [eax]
  4119d1:	add    BYTE PTR [eax],0x0
  4119d4:	(bad)  
  4119d5:	mov    eax,ds:0x3aa1ffd3
  4119da:	push   DWORD PTR [ebp+0x16]
  4119dd:	mov    ds:0x9171fd50,eax
  4119e2:	push   0x0
  4119e4:	push   es
  4119e5:	xchg   esp,eax
  4119e6:	das    
  4119e7:	inc    ecx
  4119e8:	push   ds
  4119e9:	and    eax,DWORD PTR [eax+esi*1]
  4119ec:	scas   eax,DWORD PTR es:[edi]
  4119ed:	or     ch,BYTE PTR [eax+0x2]
  4119f0:	out    dx,al
  4119f1:	or     al,BYTE PTR [eax-0x4ab118]
  4119f7:	push   ebp
  4119f9:	dec    edx
  4119fa:	je     0x411a12
  4119fc:	push   edi
  4119fd:	aas    
  4119fe:	hlt    
  4119ff:	(bad)  
  411a00:	mov    ebx,0xe675ff8e
  411a05:	mov    ds:0x9141fd11,al
  411a0a:	push   DWORD PTR [ebp-0x46]
  411a0d:	mov    ds:0x86b1d09e,eax
  411a12:	push   0x0
  411a14:	(bad)  
  411a15:	mov    al,ds:0x229e412f
  411a1a:	daa    
  411a1b:	xor    BYTE PTR [edi+0x5],ch
  411a1e:	push   0x3704702
  411a23:	sbb    BYTE PTR [edi-0x77004c70],0x20
  411a2a:	xchg   DWORD PTR [ebp+0x4f],esi
  411a2d:	pop    eax
  411a2e:	add    eax,0x1ab778fd
  411a33:	add    bh,bl
  411a35:	mov    eax,0x40d7
  411a3a:	inc    edi
  411a3b:	sbb    bh,bl
  411a3d:	das    
  411a3e:	push   es
  411a3f:	jo     0x411a5c
  411a41:	add    al,BYTE PTR [edi+0x70]
  411a44:	sub    eax,0xffffffc6
  411a47:	ret    
  411a48:	xchg   edi,edi
  411a4a:	cmp    al,0xb0
  411a4c:	adc    BYTE PTR [esi],dl
  411a4e:	into   
  411a4f:	and    al,0x90
  411a51:	push   DWORD PTR [edx+0x3f7586fc]
  411a57:	mov    dl,al
  411a59:	cld    
  411a5a:	sub    bh,ah
  411a5c:	xchg   BYTE PTR [ebp+0x1b],dh
  411a5f:	fdiv   DWORD PTR [esi]
  411a61:	rcr    BYTE PTR [eax],1
  411a63:	xlat   BYTE PTR ds:[ebx]
  411a64:	xchg   BYTE PTR [ebp+0x13],dh
  411a67:	iret   
  411a68:	adc    BYTE PTR [eax],cl
  411a6a:	pop    ds
  411a6b:	xor    bh,BYTE PTR [ecx-0x3dc6ff01]
  411a71:	add    al,0x47
  411a73:	popf   
  411a74:	jp     0x411a62
  411a76:	pop    edi
  411a77:	jo     0x411a7c
  411a79:	out    dx,eax
  411a7a:	test   eax,0xe00c1126
  411a7f:	xchg   esp,eax
  411a80:	sti    
  411a81:	out    0x30,eax
  411a83:	and    al,BYTE PTR [edi-0x3ce0101]
  411a89:	push   DWORD PTR [ebx-0x5]
  411a8c:	xchg   edi,eax
  411a8d:	or     DWORD PTR [ebx-0x470079cd],0xb1b8812e
  411a97:	outs   dx,BYTE PTR ds:[esi]
  411a98:	xchg   BYTE PTR [eax],al
  411a9a:	inc    edi
  411a9b:	or     ecx,ebp
  411a9d:	add    eax,DWORD PTR [eax]
  411a9f:	add    ah,cl
  411aa1:	ret    
  411aa2:	in     al,dx
  411aa3:	cli    
  411aa4:	fdiv   st,st(4)
  411aa6:	jmp    0x411a2b
  411aa8:	dec    edi
  411aa9:	or     DWORD PTR [ecx+eax*1-0x62],edx
  411aad:	(bad)  
  411aaf:	add    eax,DWORD PTR [edi+0x7e]
  411ab2:	xor    al,0xf8
  411ab4:	pusha  
  411ab5:	outs   dx,BYTE PTR ds:[esi]
  411ab6:	xchg   ebx,eax
  411ab7:	xchg   BYTE PTR [eax+0x11],dh
  411aba:	test   eax,0x17f13810
  411abf:	fadd   DWORD PTR [edi]
  411ac1:	or     DWORD PTR [esi+0x62714b10],ebx
  411ac7:	mov    dl,0x50
  411ac9:	jge    0x411a4d
  411acb:	clc    
  411acc:	loopne 0x411ac4
  411ace:	aam    0x44
  411ad0:	inc    edi
  411ad1:	jl     0x411ac7
  411ad3:	mul    DWORD PTR [eax]
  411ad5:	(bad)  
  411ad6:	cdq    
  411ad7:	xchg   BYTE PTR [eax],dh
  411ad9:	xchg   ebx,eax
  411ada:	fs dec ebx
  411adc:	sub    DWORD PTR [ebp+0x66],edi
  411adf:	sbb    esp,DWORD PTR [ecx+0xa]
  411ae2:	jmp    0x2bc7e4ea
  411ae7:	test   DWORD PTR [eax],edx
  411ae9:	jge    0x411aa4
  411aeb:	fwait
  411aec:	adc    ecx,DWORD PTR [ebp+0x46]
  411aef:	xchg   dl,dl
  411af1:	xchg   BYTE PTR [ebx],ch
  411af3:	test   eax,edi
  411af5:	jl     0x411a90
  411af7:	xchg   BYTE PTR [edx-0x1779d03f],bh
  411afd:	jno    0x411ad8
  411aff:	fs inc edi
  411b01:	or     DWORD PTR [eax-0x80],esi
  411b04:	add    BYTE PTR [eax],al
  411b06:	fwait
  411b07:	jnp    0x411b1f
  411b09:	xchg   BYTE PTR [edi+0x478a650c],al
  411b0f:	or     ecx,ebp
  411b11:	js     0x411aed
  411b13:	inc    edi
  411b14:	inc    DWORD PTR [ebp-0x14ff8b48]
  411b1a:	mov    ah,0x7c
  411b1c:	(bad)  
  411b1d:	jmp    0x2bce015a
  411b22:	jg     0x411af0
  411b24:	addr16 dec ebp
  411b26:	jg     0x411af1
  411b28:	inc    eax
  411b2a:	cwde   
  411b2b:	test   eax,0xbc8fe900
  411b30:	jne    0x411b1e
  411b32:	fnstsw WORD PTR [edx-0x71bb1700]
  411b38:	xchg   ebp,eax
  411b39:	stos   DWORD PTR es:[edi],eax
  411b3a:	leave  
  411b3b:	jl     0x411b3c
  411b3d:	pop    esp
  411b3e:	add    eax,0x3911502d
  411b43:	sub    eax,0x79bce941
  411b48:	mov    al,ds:0xc01044e9
  411b4d:	adc    al,0x48
  411b4f:	jno    0x411ae5
  411b51:	jmp    0x69a9249a
  411b56:	sbb    ecx,ecx
  411b58:	push   DWORD PTR [ebp+0x40]
  411b5b:	or     eax,0x7bf576e8
  411b60:	push   DWORD PTR [eax+esi*4+0x47]
  411b64:	(bad)  
  411b65:	pop    esi
  411b66:	ret    0x528d
  411b69:	add    eax,0xd9550000
  411b6e:	out    0x12,eax
  411b70:	(bad)  
  411b71:	jnp    0x411b72
  411b73:	cdq    
  411b74:	retf   
  411b75:	cmc    
  411b76:	setns  bl
  411b79:	cmc    
  411b7a:	pop    es
  411b7b:	inc    ecx
  411b7c:	cmc    
  411b7d:	jp     0x411b7e
  411b7f:	cs retf 
  411b81:	xor    cl,bh
  411b83:	es retf 0x636f
  411b87:	ins    BYTE PTR es:[edi],dx
  411b88:	test   DWORD PTR ds:0x7b776c89,ebp
  411b8e:	dec    DWORD PTR [esi]
  411b90:	sub    edi,eax
  411b92:	das    
  411b93:	add    bh,ch
  411b95:	pop    es
  411b96:	push   DWORD PTR [ebp-0x7c8e]
  411b9c:	inc    esi
  411b9d:	into   
  411b9e:	mov    al,ds:0xbf809e00
  411ba3:	je     0x411c15
  411ba5:	sbb    eax,0x56f2880
  411baa:	push   DWORD PTR [ebp-0x56]
  411bad:	lahf   
  411bae:	test   eax,0xff8479d2
  411bb3:	mov    ch,0x2
  411bb5:	xchg   bh,bh
  411bb7:	call   FWORD PTR [esi-0x63]
  411bba:	icebp  
  411bbb:	sar    BYTE PTR [ecx-0x22afaf7c],cl
  411bc1:	add    dl,BYTE PTR [eax]
  411bc3:	add    BYTE PTR [edx+0x74],al
  411bc6:	addr16 push edx
  411bc8:	jle    0x411b90
  411bca:	dec    DWORD PTR [edi-0x3a]
  411bcd:	cld    
  411bce:	mov    al,ds:0x5e000000
  411bd3:	mov    al,ds:0x72fb805
  411bd8:	add    BYTE PTR [eax],al
  411bda:	cmp    BYTE PTR fs:[edi-0xc6d88c],0x75
  411be2:	es lahf 
  411be4:	xchg   esi,eax
  411be5:	(bad)  
  411be6:	test   eax,0x68d1e885
  411beb:	test   edi,edi
  411bed:	lea    esp,[ebx+0x79fffe48]
  411bf3:	push   DWORD PTR ss:[ebp-0x7b36]
  411bfa:	xchg   esi,eax
  411bfb:	cmp    eax,0xfbde00a0
  411c00:	mov    edi,0xfe76630f
  411c05:	jmp    FWORD PTR [ecx]
  411c07:	test   DWORD PTR [ebp-0x7ac744],esi
  411c0d:	call   0xa47259
  411c12:	inc    edi
  411c13:	or     ecx,DWORD PTR [esi-0x48]
  411c16:	rol    DWORD PTR [ebx],0x84
  411c19:	call   0xffc54704
  411c1e:	jle    0x411c4e
  411c20:	idiv   edi
  411c22:	adc    esp,edi
  411c24:	xchg   esi,eax
  411c25:	or     DWORD PTR [ebx-0x64bab49c],0x70
  411c2c:	add    eax,DWORD PTR [eax]
  411c2e:	inc    edi
  411c2f:	push   ebx
  411c30:	stc    
  411c31:	or     ebx,DWORD PTR [edi+0xff56b3]
  411c37:	add    BYTE PTR [eax+0x5d744377],al
  411c3d:	stc    
  411c3e:	enter  0x70fb,0x3d
  411c42:	adc    al,0xff
  411c44:	repnz stos DWORD PTR es:[edi],eax
  411c46:	ins    BYTE PTR es:[edi],dx
  411c47:	adc    eax,0x5083a375
  411c4c:	pop    eax
  411c4d:	adc    eax,0xa1e2e880
  411c52:	cmp    edi,0xffffffb8
  411c55:	and    eax,0x83466a80
  411c5a:	stc    
  411c5b:	sti    
  411c5c:	cmp    BYTE PTR [ebp+0xb],dh
  411c5f:	call   0xffc40edf
  411c64:	sub    BYTE PTR [ebp+0x7f],dh
  411c67:	call   0xffc44ee6
  411c6c:	push   cs
  411c6d:	adc    BYTE PTR cs:[eax],al
  411c70:	jp     0x411c59
  411c72:	outs   dx,DWORD PTR ds:[esi]
  411c73:	add    DWORD PTR [ebx],0xff81e0
  411c79:	push   esi
  411c7a:	add    ebp,DWORD PTR [edx+0x44]
  411c7d:	cmp    edi,ecx
  411c7f:	pop    es
  411c80:	fistp  QWORD PTR [ebx-0x171700b2]
  411c86:	enter  0x6ffb,0x9
  411c8a:	in     eax,dx
  411c8b:	add    al,0x47
  411c8d:	or     DWORD PTR [ecx+ecx*4-0x28],ebp
  411c91:	jp     0x411ca9
  411c93:	xor    DWORD PTR [edi+0x71],0x35
  411c97:	mov    ds:0x43f20947,eax
  411c9c:	add    BYTE PTR [eax],al
  411c9e:	dec    eax
  411c9f:	test   DWORD PTR [edx+0x4],ecx
  411ca2:	inc    edi
  411ca3:	or     DWORD PTR [edi+eax*1+0x12e90946],esi
  411caa:	enter  0xe9a0,0x3
  411cae:	inc    edi
  411caf:	icebp  
  411cb0:	push   edx
  411cb1:	xor    al,0x6
  411cb3:	or     DWORD PTR [eax+ecx*4-0x70],esp
  411cb7:	jp     0x411c87
  411cb9:	adc    BYTE PTR [edi],0x71
  411cbc:	mov    dl,BYTE PTR [eax+edi*2+0x79]
  411cc0:	jo     0x411c4a
  411cc2:	ja     0x411d3e
  411cc4:	mov    dh,0x82
  411cc6:	push   0x6081b9b3
  411ccb:	jns    0x411cde
  411ccd:	or     BYTE PTR [esi+0x9],al
  411cd0:	jmp    0x97b2e765
  411cd5:	or     BYTE PTR [eax-0x28],0x0
  411cd9:	xchg   BYTE PTR [edi-0x36],ch
  411cdc:	call   0x287ad6cc
  411ce1:	add    al,0x9f
  411ce3:	icebp  
  411ce4:	mov    eax,0x637128c4
  411ce9:	mov    ds:0x43f20947,al
  411cee:	xchg   ebx,eax
  411cef:	sbb    dl,bl
  411cf1:	add    eax,edx
  411cf3:	mov    ds,WORD PTR [esi-0x7f]
  411cf6:	or     BYTE PTR [ecx-0x47],bh
  411cf9:	cmp    BYTE PTR [edx+0x1],0x51
  411cfd:	popf   
  411cfe:	cli    
  411cff:	js     0x411d3f
  411d01:	add    BYTE PTR [eax],0x0
  411d04:	mov    edx,0xc5370079
  411d09:	js     0x411d73
  411d0b:	in     eax,0x4b
  411d0d:	or     DWORD PTR [eax],eax
  411d0f:	je     0x411ce0
  411d11:	cmp    dh,0x1e
  411d14:	vpackuswb xmm5,xmm4,XMMWORD PTR [ebx+0x1c]
  411d19:	retf   0x80ff
  411d1c:	leave  
  411d1d:	cmp    DWORD PTR [ecx-0x17],eax
  411d20:	lods   al,BYTE PTR ds:[esi]
  411d21:	add    BYTE PTR [eax],dh
  411d23:	test   al,0x44
  411d25:	popa   
  411d26:	dec    edi
  411d27:	push   esi
  411d28:	inc    esp
  411d29:	or     DWORD PTR [ebx],ecx
  411d2b:	sub    DWORD PTR [eax-0x361695e7],ebx
  411d31:	mov    ?,edi
  411d33:	ffreep st(6)
  411d35:	js     0x411d87
  411d37:	(bad)  
  411d38:	nop
  411d39:	adc    al,ch
  411d3b:	add    BYTE PTR cs:[eax-0x1],bh
  411d3f:	(bad)  
  411d40:	mov    al,0x79
  411d42:	(bad)  
  411d43:	mov    esi,0xa47d61c6
  411d48:	(bad)  
  411d49:	js     0x411db5
  411d4b:	add    dh,bl
  411d4d:	dec    ebp
  411d4e:	shl    DWORD PTR [esi+0x15c004c6],1
  411d54:	daa    
  411d55:	loope  0x411daf
  411d57:	fld    DWORD PTR [ebp+0x21814f78]
  411d5d:	pop    ecx
  411d5e:	inc    DWORD PTR [esi+0x18ffe213]
  411d64:	(bad)  
  411d65:	std    
  411d66:	pop    es
  411d67:	add    DWORD PTR [eax],0xff767100
  411d6d:	outs   dx,BYTE PTR ds:[esi]
  411d6e:	mov    bl,0xdf
  411d70:	int3   
  411d71:	data16 (bad) 
  411d73:	loopne 0x411dbc
  411d75:	sbb    DWORD PTR [eax+edi*2],eax
  411d78:	imul   esi,ebx,0x4107fdc7
  411d7e:	mov    cl,0x76
  411d80:	inc    DWORD PTR [eax]
  411d82:	and    DWORD PTR [ebp+0x47],0x6a0b9f30
  411d89:	and    esi,DWORD PTR [ecx]
  411d8b:	add    BYTE PTR [edi],0xe8
  411d8e:	jne    0x411d1b
  411d90:	(bad)  
  411d91:	push   DWORD PTR [esi-0x21bed0bd]
  411d97:	gs sbb edi,edi
  411d9a:	stos   DWORD PTR es:[edi],eax
  411d9b:	add    ebp,eax
  411d9d:	mov    WORD PTR [eax-0x76],ss
  411da0:	(bad)  
  411da1:	(bad)  
  411da2:	cmp    edi,eax
  411da4:	(bad)  
  411da5:	jne    0x411d5d
  411da7:	jecxz  0x411d44
  411da9:	retf   0x88b1
  411dac:	leave  
  411dad:	ret    0xbaa
  411db0:	push   ebp
  411db1:	mov    esi,DWORD PTR [edx+0x63]
  411db4:	(bad)  
  411db5:	inc    DWORD PTR [ecx-0x5d8a00b7]
  411dbb:	mov    BYTE PTR [ebp+0x8],dh
  411dbe:	xchg   dl,bh
  411dc0:	in     eax,dx
  411dc1:	inc    DWORD PTR [ecx+0x5e08c1c2]
  411dc7:	pop    esi
  411dc8:	mov    ch,ah
  411dca:	(bad)  
  411dcc:	test   edi,0x892b0000
  411dd2:	add    BYTE PTR [eax],al
  411dd4:	outs   dx,BYTE PTR ds:[esi]
  411dd5:	or     ecx,DWORD PTR [ebp+0x675bb245]
  411ddb:	xchg   edx,eax
  411ddc:	outs   dx,BYTE PTR ds:[esi]
  411ddd:	dec    edx
  411dde:	(bad)  
  411ddf:	(bad)  
  411de0:	pop    ebx
  411de1:	sbb    edi,edi
  411de3:	xor    eax,0x412431
  411de8:	(bad)  
  411de9:	icebp  
  411dea:	into   
  411deb:	push   DWORD PTR [ecx+0x1074c005]
  411df1:	test   BYTE PTR [ebp-0x8],al
  411df4:	test   BYTE PTR [ebx],0x0
  411df7:	out    dx,eax
  411df8:	mov    al,0x89
  411dfa:	jne    0x411df8
  411dfc:	inc    edi
  411dfd:	fcomip st,st(5)
  411dff:	test   DWORD PTR [eax],0x9de80b5e
  411e05:	fidivr WORD PTR [edi-0x1]
  411e08:	lock mov ebp,0x2caae87b
  411e0e:	cmp    bh,0xe
  411e11:	and    ecx,DWORD PTR [ebx]
  411e13:	add    BYTE PTR [edx-0x5],dh
  411e16:	outs   dx,BYTE PTR ds:[esi]
  411e17:	or     DWORD PTR [ebx],0xc8ff80dd
  411e1d:	daa    
  411e1e:	xchg   BYTE PTR [eax+0x8007c1],bh
  411e24:	inc    edi
  411e25:	pusha  
  411e26:	add    ecx,DWORD PTR [ebx-0x3ff39bf6]
  411e2c:	xor    esp,DWORD PTR [ebp-0x7d]
  411e2f:	cmp    BYTE PTR [edi-0x3],al
  411e32:	add    eax,0x430000e9
  411e37:	popa   
  411e38:	add    eax,DWORD PTR [eax]
  411e3a:	nop
  411e3b:	fst    QWORD PTR [ebx]
  411e3d:	call   DWORD PTR [edx]
  411e3f:	ins    BYTE PTR es:[edi],dx
  411e40:	imul   ebp,DWORD PTR [ecx],0xffffff97
  411e43:	inc    edi
  411e44:	jg     0x411e96
  411e46:	pop    ss
  411e47:	dec    edi
  411e48:	stc    
  411e49:	pop    es
  411e4a:	pop    edi
  411e4b:	into   
  411e4c:	jle    0x411e4d
  411e4e:	push   0x60cbfb48
  411e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e54:	in     al,dx
  411e55:	jo     0x411e82
  411e57:	and    DWORD PTR [edi+edi*8],eax
  411e5a:	fisub  DWORD PTR [ebx+0x6b]
  411e5d:	or     eax,0x897f9f77
  411e62:	retf   0x7dd7
  411e65:	(bad)  
  411e66:	cmp    BYTE PTR [eax],bl
  411e68:	add    DWORD PTR ds:[edi+0x60],eax
  411e6c:	nop
  411e6d:	test   DWORD PTR ds:0x77ff7efe,eax
  411e73:	mov    BYTE PTR [ecx+0x660918cc],cl
  411e79:	xchg   ecx,eax
  411e7a:	retf   0x5f4a
  411e7d:	jg     0x411e87
  411e7f:	fst    DWORD PTR [ebp-0x47]
  411e82:	mov    edi,0xef7f4e76
  411e87:	inc    edi
  411e88:	fs add al,0x47
  411e8b:	and    BYTE PTR [eax+eax*8-0x17],0x75
  411e90:	les    edx,FWORD PTR ss:[ecx-0x73]
  411e94:	xchg   BYTE PTR [edi+eax*2],al
  411e97:	or     DWORD PTR [ecx+ebx*4+0x0],esi
  411e9b:	add    BYTE PTR ds:0xd07f1e77,al
  411ea1:	or     bh,cl
  411ea3:	add    eax,DWORD PTR [edi+0x9]
  411ea6:	xchg   ebp,eax
  411ea7:	test   ebx,0xb07e2b9b
  411ead:	jne    0x411f1b
  411eaf:	ret    0xd95c
  411eb2:	sub    bh,0x6c
  411eb5:	enter  0x6be8,0xbf
  411eb9:	xchg   ebx,eax
  411eba:	jmp    0x548a5ac2
  411ebf:	add    bl,BYTE PTR [edx+edx*8+0x76859863]
  411ec6:	into   
  411ec7:	jle    0x411e93
  411ec9:	retf   0xd414
  411ecc:	call   0x69062bb7
  411ed1:	ins    DWORD PTR es:[edi],dx
  411ed2:	aaa    
  411ed3:	mov    eax,ds:0x43e20947
  411ed8:	ror    BYTE PTR [edx],cl
  411eda:	xchg   edx,eax
  411edb:	ret    
  411edc:	ret    
  411edd:	fwait
  411ede:	stos   DWORD PTR es:[edi],eax
  411edf:	jge    0x411f29
  411ee1:	jne    0x411f47
  411ee3:	shr    DWORD PTR [edx+eax*4+0x64],0xb7
  411ee8:	cmp    DWORD PTR [ebp-0x7a],esi
  411eeb:	jmp    0x411e9d
  411eed:	and    DWORD PTR [eax],ebp
  411eef:	add    al,0x28
  411ef1:	(bad)  
  411ef2:	jmp    esp
  411ef4:	lods   al,BYTE PTR ds:[esi]
  411ef5:	repnz into 
  411ef7:	outs   dx,BYTE PTR ds:[esi]
  411ef8:	cdq    
  411ef9:	je     0x411eb0
  411efb:	popf   
  411efc:	xchg   edx,eax
  411efd:	je     0x411efe
  411eff:	mov    ecx,0x4a9c0000
  411f04:	iret   
  411f05:	push   esi
  411f06:	xor    DWORD PTR [ebp+esi*2-0x7],0x36b86d14
  411f0e:	jno    0x411f84
  411f10:	push   eax
  411f11:	cdq    
  411f12:	imul   edi,esi,0x73ab4107
  411f18:	jmp    FWORD PTR [esi]
  411f1a:	ins    BYTE PTR es:[edi],dx
  411f1b:	mov    ebx,0x865126cb
  411f20:	test   DWORD PTR [ebx],ebp
  411f22:	dec    edx
  411f23:	je     0x411f24
  411f25:	mov    ecx,0xfbcbe41
  411f2a:	cmp    DWORD PTR [eax+ebp*8-0x2b],esi
  411f2e:	out    0x9,eax
  411f30:	add    BYTE PTR [esp+eax*1+0x4],ah
  411f34:	test   DWORD PTR [ebp-0x11008bdf],ecx
  411f3a:	shl    BYTE PTR [ebp+0x6112e6fe],1
  411f40:	pop    ds
  411f41:	jl     0x411f86
  411f43:	or     edi,edi
  411f45:	pushf  
  411f46:	ret    
  411f47:	jae    0x411f48
  411f49:	into   
  411f4a:	jmp    0x411ed6
  411f4c:	retf   
  411f4d:	(bad)  
  411f4e:	repnz inc ecx
  411f50:	ret    0x44ed
  411f53:	fimul  WORD PTR [edx-0x3b2393b]
  411f59:	scas   al,BYTE PTR es:[edi]
  411f5a:	push   eax
  411f5b:	add    al,ch
  411f5d:	stos   BYTE PTR es:[edi],al
  411f5e:	add    dh,BYTE PTR [edi+edi*8+0x70]
  411f62:	xor    BYTE PTR [eax+0xb],0xa9
  411f66:	add    BYTE PTR [eax],al
  411f68:	push   edx
  411f69:	lea    ecx,[ecx+ebp*8+0x680944]
  411f70:	div    BYTE PTR [edi]
  411f72:	inc    ecx
  411f73:	add    BYTE PTR [ecx-0x6a170484],ch
  411f79:	ret    
  411f7a:	(bad)  
  411f7b:	(bad)  
  411f7c:	ds sbb BYTE PTR gs:[edx],dh
  411f80:	fild   WORD PTR [edi]
  411f82:	push   eax
  411f83:	push   ebx
  411f85:	jmp    edi
  411f87:	xchg   esp,eax
  411f88:	cwde   
  411f89:	idiv   dh
  411f8b:	call   0x3fe036
  411f90:	push   ss
  411f91:	shl    DWORD PTR [eax],cl
  411f93:	inc    ecx
  411f94:	fdivrp st(4),st
  411f96:	je     0x411f94
  411f98:	xchg   bh,cl
  411f9a:	int    0xff
  411f9c:	sub    DWORD PTR [ebp+0x67],ebx
  411f9f:	sbb    esp,ebp
  411fa1:	inc    esi
  411fa2:	dec    DWORD PTR [edi+0x29]
  411fa5:	jl     0x411fae
  411fa7:	call   0x401589
  411fac:	inc    esi
  411fad:	cs retf 
  411faf:	dec    DWORD PTR [ecx+0x65]
  411fb2:	cmc    
  411fb3:	xor    edi,ebx
  411fb5:	pop    es
  411fb6:	push   DWORD PTR [ebp-0x66]
  411fb9:	fistp  QWORD PTR [eax+0x4ff4a9ce]
  411fbf:	push   0x413747
  411fc4:	dec    esi
  411fc5:	div    BYTE PTR [eax+ecx*1-0x7a]
  411fc9:	pop    ecx
  411fca:	std    
  411fcb:	inc    DWORD PTR [eax]
  411fcd:	add    BYTE PTR [ecx-0x7634fa21],cl
  411fd3:	hlt    
  411fd4:	adc    BYTE PTR [si+0x46],ch
  411fd8:	(bad)  
  411fd9:	(bad)  
  411fda:	and    ecx,DWORD PTR [ecx-0xb476718]
  411fe0:	(bad)  
  411fe1:	push   eax
  411fe2:	adc    BYTE PTR ss:[edx],dh
  411fe5:	inc    ecx
  411fe6:	pop    esi
  411fe7:	push   edi
  411fe8:	(bad)  
  411fe9:	jne    0x412032
  411feb:	push   0x8439316b
  411ff0:	jl     0x411fda
  411ff2:	sub    dh,BYTE PTR [edi+0x7e28ff7c]
  411ff8:	jg     0x411fe2
  411ffa:	add    ah,BYTE PTR [edi-0x60f10084]
  412000:	or     eax,DWORD PTR [eax]
  412002:	jp     0x411ffb
  412004:	outs   dx,BYTE PTR ds:[esi]
  412005:	add    DWORD PTR [ebx],0xffffffd5
  412008:	shr    DWORD PTR [ecx+0x47],cl
  41200b:	inc    esi
  41200c:	pop    es
  41200d:	push   DWORD PTR [edx+0x68]
  412010:	imul   edi,esi,0x8
  412013:	int3   
  412014:	jnp    0x411f9f
  412016:	xor    BYTE PTR [eax+ecx*4],0x3d
  41201a:	das    
  41201b:	or     bl,al
  41201d:	call   FWORD PTR [eax+0x63]
  412020:	add    esi,DWORD PTR [esp+ecx*1-0x68]
  412024:	mov    DWORD PTR [eax],esi
  412026:	xchg   BYTE PTR [eax-0x2c],ah
  412029:	out    0xe,eax
  41202b:	std    
  41202c:	add    al,BYTE PTR [eax]
  41202e:	dec    esp
  41202f:	and    bh,dh
  412031:	sbb    eax,0x18180000
  412036:	out    dx,eax
  412037:	shr    DWORD PTR [eax+0x1bc00773],cl
  41203d:	push   esp
  41203e:	shl    DWORD PTR [edi+0x3e],cl
  412041:	scas   al,BYTE PTR es:[edi]
  412042:	ret    0xff
  412045:	imul   esi,ecx,0x7
  412048:	lahf   
  412049:	mov    ebx,0x4880ff79
  41204e:	(bad)  
  412052:	js     0x412087
  412054:	xchg   DWORD PTR [ecx-0x4c970085],ecx
  41205a:	jbe    0x41200a
  41205c:	pop    ds
  41205d:	arpl   ax,si
  41205f:	(bad)  
  412060:	in     eax,dx
  412061:	push   ebp
  412062:	jp     0x4120d9
  412064:	aas    
  412065:	or     DWORD PTR [ecx-0x618db68b],edx
  41206b:	out    dx,al
  41206c:	gs jb  0x41208b
  41206f:	or     al,0x2f
  412071:	push   0xffffff8f
  412073:	jnp    0x4120a5
  412075:	(bad)  
  412077:	jp     0x41202b
  412079:	add    DWORD PTR [ecx+0x76722159],edx
  41207f:	out    dx,al
  412080:	bound  esi,QWORD PTR [edx-0xc]
  412083:	or     ebx,DWORD PTR [edi]
  412085:	push   esi
  412086:	addr16 jnp 0x412091
  412089:	loope  0x412107
  41208b:	xor    al,0x86
  41208d:	or     DWORD PTR [esi-0xf],edx
  412090:	inc    eax
  412091:	popa   
  412092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412093:	js     0x412085
  412095:	jno    0x412068
  412097:	dec    ebp
  412098:	add    BYTE PTR [eax],al
  41209a:	aaa    
  41209b:	enter  0x7ae8,0x5a
  41209f:	add    DWORD PTR [ecx+0x3c],eax
  4120a2:	fidiv  DWORD PTR [ecx+0x2e]
  4120a5:	in     al,dx
  4120a6:	sar    BYTE PTR [eax],1
  4120a8:	test   al,0x3
  4120aa:	enter  0xf0fb,0x6b
  4120ae:	ins    BYTE PTR es:[edi],dx
  4120af:	je     0x4120c7
  4120b1:	jnp    0x4120e2
  4120b3:	and    ebx,eax
  4120b5:	les    esi,FWORD PTR [eax-0x60f4838e]
  4120bb:	adc    bh,ah
  4120bd:	jp     0x41205f
  4120bf:	loopne 0x41204d
  4120c1:	xor    al,0x6
  4120c3:	or     esi,ebp
  4120c5:	lock dec eax
  4120c7:	popa   
  4120c8:	clc    
  4120c9:	js     0x412053
  4120cb:	jno    0x41211e
  4120cd:	xchg   esi,eax
  4120ce:	ss enter 0x7ae8,0xf2
  4120d3:	add    cl,al
  4120d5:	push   DWORD PTR [ebx+0x71]
  4120d8:	(bad)  
  4120d9:	jp     0x4120cd
  4120db:	je     0x41209b
  4120dd:	lock dec eax
  4120df:	popa   
  4120e0:	add    BYTE PTR [ebx],dh
  4120e2:	add    al,0x72
  4120e4:	dec    DWORD PTR [esi]
  4120e6:	add    al,BYTE PTR [edi+0x4]
  4120e9:	jmp    0x6b2d9f65
  4120ee:	aas    
  4120ef:	add    eax,0x70551d00
  4120f4:	jne    0x4120ef
  4120f6:	lods   eax,DWORD PTR ds:[esi]
  4120f7:	test   BYTE PTR [ebx],0x86
  4120fa:	aaa    
  4120fb:	or     eax,ebp
  4120fd:	mov    bl,0x0
  4120ff:	add    BYTE PTR [ecx+0x1776ff70],dh
  412105:	add    eax,0x708391e8
  41210a:	push   DWORD PTR [eax]
  41210c:	cmp    ch,0xff
  41210f:	mov    bl,0xd1
  412111:	pop    ebp
  412112:	sub    DWORD PTR ds:0x4dffe370,0xfffffff7
  412119:	sbb    al,0xff
  41211b:	mov    esp,0xed757054
  412120:	ins    BYTE PTR es:[edi],dx
  412121:	push   edi
  412122:	int3   
  412123:	ss pop ebp
  412125:	add    al,0xc0
  412127:	mov    ch,0xf8
  412129:	add    DWORD PTR [ebp+0x25],0xa83282dc
  412130:	inc    esp
  412131:	jo     0x4121a8
  412133:	adc    eax,0xeccc22c
  412138:	sub    eax,0x1de8ffe1
  41213d:	scas   eax,DWORD PTR es:[edi]
  41213e:	push   eax
  41213f:	(bad)  
  412140:	mov    al,0x8
  412142:	call   0xffb13e93
  412147:	xor    DWORD PTR [edi+0xfe9413b],0x2dd1fbf6
  412151:	notrack call esi
  412154:	imul   ecx,DWORD PTR [ecx],0x0
  412157:	mov    esi,0xfed9ad
  41215c:	sub    edi,ebp
  41215e:	out    0x8a,eax
  412160:	mov    eax,ds:0x68fef2
  412165:	add    dh,cl
  412167:	aaa    
  412168:	inc    ecx
  412169:	add    BYTE PTR [ecx+0x4de8fb60],ah
  41216f:	(bad)  
  412170:	(bad)  
  412171:	call   DWORD PTR [esi+0x7]
  412174:	add    bh,ch
  412176:	nop
  412177:	push   ebp
  412178:	(bad)  
  412179:	jne    0x4121a1
  41217b:	in     al,0x6e
  41217d:	inc    ecx
  41217f:	icebp  
  412180:	(bad)  
  412181:	jne    0x412125
  412183:	fstp   QWORD PTR [ebp-0x37]
  412186:	xchg   ecx,eax
  412187:	repnz enter 0xeec2,0xb
  41218c:	push   ebp
  41218d:	mov    esi,DWORD PTR [edx+0x5d]
  412190:	lods   al,BYTE PTR ds:[esi]
  412191:	xor    ch,BYTE PTR [edi-0x1d8a00f5]
  412197:	jecxz  0x412181
  412199:	int3   
  41219a:	xor    edx,0x5c0e75fe
  4121a0:	out    0x34,eax
  4121a2:	xor    esi,edx
  4121a4:	(bad)  
  4121a5:	call   FWORD PTR [ebx-0x6400b001]
  4121ab:	add    ebp,eax
  4121ad:	ds and edx,esi
  4121b0:	(bad)  
  4121b1:	push   0x413727
  4121b6:	push   ecx
  4121b7:	pusha  
  4121b8:	or     ebp,eax
  4121ba:	imul   eax,ecx,0x6041fffe
  4121c0:	(bad)  
  4121c2:	ss pop ss
  4121c4:	int    0xff
  4121c6:	xchg   ecx,eax
  4121c7:	lock je 0x4121de
  4121ca:	add    BYTE PTR [eax],al
  4121cc:	scas   al,BYTE PTR es:[edi]
  4121cd:	lock je 0x4121d8
  4121d0:	jbe    0x4121e9
  4121d2:	(bad)  
  4121d3:	jmp    DWORD PTR [ecx+0x4710c1c2]
  4121d9:	(bad)  
  4121da:	into   
  4121db:	mov    ah,BYTE PTR [ebx-0x1e]
  4121de:	ds cld 
  4121e0:	push   0xf7e8082c
  4121e5:	pushf  
  4121e6:	js     0x4121e7
  4121e8:	dec    esp
  4121e9:	mov    ds:0x24be49ef,al
  4121ee:	js     0x412258
  4121f0:	inc    edi
  4121f1:	bound  ebp,QWORD PTR [eax-0x42]
  4121f4:	scas   eax,DWORD PTR es:[edi]
  4121f5:	cli    
  4121f6:	xor    al,0x41
  4121f8:	inc    edi
  4121f9:	xchg   edi,eax
  4121fa:	out    dx,al
  4121fb:	sti    
  4121fc:	xor    BYTE PTR [esi],dl
  4121fe:	or     al,0xe8
  412200:	mov    esp,0xafff7887
  412205:	popa   
  412206:	add    ebp,edi
  412208:	(bad)  [eax]
  41220a:	(bad)  
  41220b:	xor    al,BYTE PTR [esi+0xb757860]
  412211:	call   0x57302a03
  412216:	js     0x412217
  412218:	clc    
  412219:	dec    eax
  41221a:	add    eax,0xeb7ee000
  41221f:	lahf   
  412220:	xor    eax,0x5aff03a1
  412225:	sub    al,0x78
  412227:	jne    0x412278
  412229:	enter  0xfee1,0xd0
  41222d:	pop    ds
  41222e:	js     0x4122a5
  412230:	add    BYTE PTR [eax],al
  412232:	retf   
  412233:	sbb    BYTE PTR [eax+ecx*8-0x3db5f040],dh
  41223a:	dec    edi
  41223b:	pusha  
  41223c:	into   
  41223d:	mov    ah,BYTE PTR [ebx+0x1dfc3ee3]
  412243:	pusha  
  412244:	in     eax,dx
  412245:	add    al,0xa0
  412247:	cmc    
  412248:	or     ch,al
  41224a:	jb     0x412269
  41224c:	js     0x41224d
  41224e:	mov    esi,0xec6877a5
  412253:	or     BYTE PTR [ebx],bl
  412255:	lds    eax,FWORD PTR [eax+0x63207e6]
  41225b:	or     esi,edx
  41225d:	xor    DWORD PTR [eax+0x20],eax
  412260:	sub    BYTE PTR [eax+ebp*2],al
  412263:	hlt    
  412264:	lock imul esi,DWORD PTR [ecx-0x10884191],0xffffffdb
  41226c:	cli    
  41226d:	les    edx,FWORD PTR [eax-0x1a]
  412270:	repz xor DWORD PTR [esi],eax
  412273:	or     DWORD PTR [esi+0x28205031],esp
  412279:	add    al,0x38
  41227b:	hlt    
  41227c:	loopne 0x4122e9
  41227e:	fldcw  WORD PTR [esi-0x72]
  412281:	ja     0x412222
  412283:	sti    
  412284:	mov    edx,0xc7e620c4
  412289:	xor    DWORD PTR [esi+0x40317609],eax
  41228f:	and    BYTE PTR [eax],ch
  412291:	add    al,0x8
  412293:	hlt    
  412294:	lock imul eax,DWORD PTR [eax],0x0
  412298:	sub    DWORD PTR [edi+0x5e],0x1aee6f77
  41229f:	(bad)
  4122a2:	pop    es
  4122a3:	xor    al,BYTE PTR [esi+0x50314609]
  4122a9:	and    BYTE PTR [eax-0x1f0c27fd],ch
  4122af:	imul   ebp,DWORD PTR [ecx+0x6f],0x2e
  4122b3:	ja     0x412314
  4122b5:	rcr    dl,cl
  4122b7:	(bad)  
  4122b8:	shl    ch,0xa5
  4122bb:	xor    DWORD PTR [esi],eax
  4122bd:	or     DWORD PTR [esi],edx
  4122bf:	xor    DWORD PTR [eax+0x20],eax
  4122c2:	test   al,0x3
  4122c4:	test   al,0xf3
  4122c6:	lock imul edx,DWORD PTR [ecx],0x6f
  4122ca:	(bad)  
  4122cb:	jbe    0x4122fc
  4122cd:	fdiv   st(7),st
  4122cf:	mov    edx,0xa6676d8b
  4122d4:	push   esi
  4122d5:	enter  0xe5ff,0x37
  4122d9:	(bad)  
  4122da:	sub    BYTE PTR [eax],ch
  4122dc:	inc    ebx
  4122dd:	outs   dx,BYTE PTR ds:[esi]
  4122de:	jne    0x4122c1
  4122e0:	fdiv   QWORD PTR [esi]
  4122e2:	dec    dh
  4122e4:	icebp  
  4122e5:	loopne 0x412358
  4122e7:	sti    
  4122e8:	mov    ebp,DWORD PTR [ebp+0x67]
  4122eb:	es adc eax,0x17b5ffc8
  4122f1:	(bad)  
  4122f2:	sub    BYTE PTR [eax],ch
  4122f4:	inc    ebx
  4122f5:	outs   dx,BYTE PTR ds:[esi]
  4122f6:	jne    0x4122e9
  4122f8:	lods   al,BYTE PTR ds:[esi]
  4122f9:	or     edi,esi
  4122fb:	sahf   
  4122fc:	add    BYTE PTR [eax],al
  4122fe:	mov    cl,0xe1
  412300:	jle    0x4122dd
  412302:	or     ebp,DWORD PTR [ebp+0x67]
  412305:	es jne 0x4122d2
  412308:	inc    DWORD PTR [ebp+0x2828fc57]
  41230e:	inc    ebx
  41230f:	ins    BYTE PTR es:[edi],dx
  412310:	jne    0x4122f3
  412312:	pushf  
  412313:	add    edi,esi
  412315:	outs   dx,BYTE PTR ds:[esi]
  412316:	xchg   ecx,eax
  412317:	loope  0x412373
  412319:	sbb    ecx,DWORD PTR [edx]
  41231b:	ins    DWORD PTR es:[edi],dx
  41231c:	or     BYTE PTR [di],dh
  41231f:	retf   0xc0ff
  412322:	inc    esi
  412323:	or     DWORD PTR [eax],eax
  412325:	imul   esi,DWORD PTR [ecx-0xa],0x6e695107
  41232c:	(bad)  
  41232d:	ds in  al,dx
  41232f:	fnsave [ecx]
  412331:	test   al,0x44
  412333:	loope  0x412369
  412335:	sti    
  412336:	add    ebp,DWORD PTR [ebp+0x67]
  412339:	jmp    0x41237f
  41233b:	or     DWORD PTR [eax-0x17fb48e2],eax
  412341:	xor    DWORD PTR [edi],ebp
  412343:	ins    BYTE PTR es:[edi],dx
  412344:	inc    DWORD PTR [ecx+0x413ab6]
  41234a:	scas   al,BYTE PTR es:[edi]
  41234b:	pusha  
  41234c:	and    BYTE PTR [edx],dh
  41234e:	out    dx,eax
  41234f:	or     BYTE PTR [eax+0x2],ch
  412352:	sahf   
  412353:	or     BYTE PTR [eax-0x17ffec01],al
  412359:	shr    DWORD PTR [ebx-0xa],0xfe
  41235d:	push   0x413719
  412362:	add    BYTE PTR [eax],al
  412364:	push   es
  412365:	sub    BYTE PTR [edx],dh
  412367:	inc    ecx
  412368:	pop    esi
  412369:	pusha  
  41236a:	add    DWORD PTR [eax],eax
  41236c:	outs   dx,BYTE PTR ds:[esi]
  41236d:	mov    bh,bh
  41236f:	jne    0x4123c7
  412371:	loopne 0x41231c
  412373:	std    
  412374:	cdq    
  412375:	mul    BYTE PTR [edi+0x5b]
  412378:	dec    esp
  412379:	inc    edi
  41237a:	jmp    DWORD PTR [edi+0x71]
  41237d:	aaa    
  41237e:	inc    ecx
  41237f:	add    BYTE PTR [esi+0x7],dl
  412382:	add    BYTE PTR [eax],al
  412384:	sahf   
  412385:	div    BYTE PTR [eax+ecx*1-0x3a]
  412389:	cdq    
  41238a:	std    
  41238b:	dec    ecx
  41238d:	pop    esp
  41238e:	ins    BYTE PTR es:[edi],dx
  41238f:	xor    ch,BYTE PTR [edi+0x5]
  412392:	push   0xff46cc47
  412397:	addr16 sbb al,0x8
  41239a:	add    BYTE PTR [eax-0x17f8a397],al
  4123a0:	sbb    dh,bl
  4123a2:	(bad)  
  4123a3:	inc    DWORD PTR [esi]
  4123a5:	jp     0x4123d8
  4123a7:	inc    ecx
  4123a8:	ficomp WORD PTR [edi+0x46]
  4123ab:	xor    ch,BYTE PTR [edi-0x11fd97f9]
  4123b1:	pop    es
  4123b2:	cmp    bh,0x93
  4123b5:	jmp    edi
  4123b7:	gs sbb esi,esi
  4123ba:	(bad)  
  4123bb:	push   0x4139e9
  4123c0:	(bad)  
  4123c1:	lods   al,BYTE PTR ds:[esi]
  4123c2:	xor    DWORD PTR [ecx+0x47],eax
  4123c5:	(bad)  
  4123c6:	jmp    0x4123c9
  4123c8:	add    BYTE PTR [eax],al
  4123ca:	inc    edi
  4123cb:	bound  eax,QWORD PTR [ebx+0x6b7a1aff]
  4123d1:	dec    esi
  4123d2:	call   0xee73:0x2d6a746a
  4123d9:	pop    es
  4123da:	lahf   
  4123db:	push   0xd780ff75
  4123e0:	and    bh,bh
  4123e2:	bnd jns 0x412450
  4123e5:	push   DWORD PTR [edx+0x52]
  4123e8:	je     0x412454
  4123ea:	dec    ebx
  4123eb:	cmp    ebp,esi
  4123ed:	pop    es
  4123ee:	outs   dx,DWORD PTR ds:[esi]
  4123ef:	lods   al,BYTE PTR ds:[esi]
  4123f0:	jbe    0x4123f1
  4123f2:	pop    eax
  4123f3:	stos   BYTE PTR es:[edi],al
  4123f4:	out    dx,al
  4123f5:	sti    
  4123f6:	push   eax
  4123f7:	sub    al,0xc
  4123f9:	call   0xffb5c9ce
  4123fe:	push   cs
  4123ff:	lahf   
  412400:	(bad)  
  412401:	call   DWORD PTR [ebx-0x4d7c9909]
  412407:	add    esi,DWORD PTR fs:[esp+eiz*4+0x8]
  41240c:	push   esp
  41240d:	xor    al,BYTE PTR [esi+0x4b757460]
  412413:	cwde   
  412414:	cmc    
  412415:	leave  
  412416:	adc    ah,dh
  412418:	shl    BYTE PTR [edi+0x47],cl
  41241b:	pusha  
  41241c:	fs mov esi,0x7ede397
  412422:	out    dx,eax
  412423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412424:	imul   edi,edi,0xfffffff0
  412427:	enter  0xc647,0xe8
  41242b:	mov    ebx,0xe0ea
  412430:	adc    eax,0x52ff03a1
  412435:	pop    esp
  412436:	imul   ebx,DWORD PTR [ebp-0x3],0x33
  41243a:	je     0x41248c
  41243c:	pop    edi
  41243d:	popa   
  41243e:	add    ebp,edi
  412440:	add    DWORD PTR [edx],ecx
  412442:	mov    ecx,0x11013274
  412447:	call   0x43dd:0x6b166a9f
  41244e:	push   cs
  41244f:	je     0x412480
  412451:	jne    0x41240e
  412453:	ret    0x6b98
  412456:	je     0x41245f
  412458:	lahf   
  412459:	sub    eax,0xd9887423
  41245e:	add    BYTE PTR [ecx],0x47
  412461:	pop    edx
  412462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412463:	aam    0x79
  412465:	hlt    
  412466:	lock pop ebx
  412468:	out    dx,eax
  412469:	pusha  
  41246a:	(bad)  
  41246b:	jae    0x4124cc
  41246d:	and    BYTE PTR [edi-0x54bf9f8d],0xfc
  412474:	pop    eax
  412475:	aad    0x71
  412477:	pusha  
  412478:	push   eax
  412479:	hlt    
  41247a:	in     al,0x5b
  41247c:	jle    0x4124bd
  41247e:	scas   al,BYTE PTR es:[edi]
  41247f:	jae    0x4124cd
  412481:	dec    ecx
  412482:	sbb    eax,0xdb44af0e
  412487:	les    esi,FWORD PTR [eax]
  412489:	mov    edx,0x69fed280
  41248e:	mov    ss,esp
  412490:	nop
  412491:	push   0xfffffffc
  412493:	sti    
  412494:	add    BYTE PTR [eax],al
  412496:	and    ch,bl
  412498:	jge    0x41250d
  41249a:	adc    BYTE PTR [ecx+0x15],ah
  41249d:	dec    edx
  41249e:	or     BYTE PTR [edx-0x60],ch
  4124a1:	inc    esi
  4124a2:	dec    edi
  4124a3:	or     DWORD PTR [esi+edi*2+0x642585eb],edi
  4124aa:	pop    ebp
  4124ab:	or     DWORD PTR [esi-0x7],edx
  4124ae:	cmp    BYTE PTR [edx-0x2c],ch
  4124b1:	jmp    ecx
  4124b3:	xor    esi,esi
  4124b5:	sbb    al,0x86
  4124b7:	or     DWORD PTR [ecx-0x25],edx
  4124ba:	jmp    FWORD PTR [ecx+0x0]
  4124bd:	ss dec edx
  4124bf:	(bad)  
  4124c0:	repz ret 
  4124c2:	inc    esp
  4124c3:	push   0x75
  4124c5:	std    
  4124c6:	xor    eax,0x6e1e0bf4
  4124cb:	cli    
  4124cc:	sub    BYTE PTR [eax+0x20416144],ch
  4124d2:	adc    al,0x6a
  4124d4:	mov    DWORD PTR [eax+ebp*1-0x70020021],ebp
  4124db:	adc    edi,edi
  4124dd:	jl     0x412467
  4124df:	push   0x35
  4124e1:	fisub  WORD PTR [ebx-0x38]
  4124e4:	call   eax
  4124e6:	pop    ecx
  4124e7:	inc    eax
  4124e8:	(bad)  
  4124e9:	fdivrp st(3),st
  4124eb:	ret    
  4124ec:	mul    DWORD PTR [edi+edi*2+0x61]
  4124f0:	push   eax
  4124f1:	into   
  4124f2:	pop    edi
  4124f3:	or     eax,0x6a473cff
  4124f8:	xor    eax,0x330000ee
  4124fd:	enter  0xc0ff,0x31
  412501:	inc    eax
  412502:	jmp    FWORD PTR [esi+0x13efcec3]
  412508:	inc    ebx
  412509:	push   0xdeb5c975
  41250e:	or     edx,DWORD PTR [esi+0x2829186f]
  412514:	dec    ebx
  412515:	jno    0x412514
  412517:	mov    cl,0x95
  412519:	push   0x96a72489
  41251e:	inc    ebp
  41251f:	mov    esp,esi
  412521:	addr16 jne 0x4124e9
  412524:	jne    0x412504
  412526:	or     esp,DWORD PTR [esi+0x3f]
  412529:	sbb    BYTE PTR [ecx],ch
  41252b:	test   al,0x44
  41252d:	jno    0x412514
  41252f:	and    DWORD PTR [ebp+0x68],esi
  412532:	mov    DWORD PTR [eax+ebp*2-0x7dff8274],esp
  412539:	or     al,0xf
  41253b:	test   BYTE PTR [edx+0xc],bh
  41253e:	add    BYTE PTR [eax],al
  412540:	pop    ebp
  412541:	pop    ecx
  412542:	test   DWORD PTR [eax],0x8a90a1
  412548:	scas   al,BYTE PTR es:[edi]
  412549:	or     al,0x83
  41254b:	jge    0x4125a7
  41254d:	or     al,0xf
  41254f:	test   BYTE PTR [esi],bl
  412551:	or     al,0x0
  412553:	add    BYTE PTR [ecx+0x61],dl
  412556:	daa    
  412557:	call   FWORD PTR [ebx]
  412559:	fs out 0x2a,eax
  41255c:	pop    esp
  41255d:	(bad)  
  41255f:	inc    DWORD PTR [eax]
  412561:	add    BYTE PTR [ebx],cl
  412563:	clc    
  412564:	(bad)  
  412565:	jne    0x4125cd
  412567:	les    eax,FWORD PTR [eax-0x1259e3e]
  41256d:	jne    0x4125d5
  41256f:	fidiv  DWORD PTR [eax+ecx*1-0x7a]
  412573:	arpl   cx,ax
  412575:	call   DWORD PTR [ecx-0x7e0b8b26]
  41257b:	pusha  
  41257c:	pop    es
  41257d:	call   0x3ff477
  412582:	fbstp  TBYTE PTR [edi+0x27]
  412585:	adc    ebp,DWORD PTR [esi]
  412587:	jmp    0xd9749b49
  41258c:	je     0x41257e
  41258e:	rcr    DWORD PTR [edi+0x7],1
  412591:	call   0x3ff4ff
  412596:	lds    ecx,FWORD PTR [edx]
  412598:	push   DWORD PTR [ebp-0x4a]
  41259b:	fnstenv [eax+esi*8-0x6f]
  41259f:	pusha  
  4125a0:	pop    es
  4125a1:	call   0x3ff39b
  4125a6:	jno    0x412608
  4125a8:	jmp    0x4125a9
  4125aa:	sbb    esp,DWORD PTR [edi+eiz*8+0x3c]
  4125ae:	sbb    al,0xda
  4125b0:	inc    BYTE PTR [ebx+0x673d47]
  4125b6:	pop    ebx
  4125b7:	pop    ebp
  4125b8:	test   BYTE PTR [ebp-0x19],bh
  4125bb:	jne    0x4125b3
  4125bd:	push   cs
  4125be:	mov    esp,0x17ff67ac
  4125c3:	pop    ds
  4125c4:	test   DWORD PTR [edi],0x30af0000
  4125ca:	inc    ebx
  4125cb:	(bad)  
  4125cc:	mov    eax,0x4769fdfa
  4125d1:	pop    es
  4125d2:	test   DWORD PTR [edi],0xff42c49f
  4125d8:	mov    al,ds:0xaff3f716
  4125dd:	push   ebp
  4125de:	inc    esi
  4125df:	call   DWORD PTR [eax-0x6004099a]
  4125e5:	cmp    eax,0x7680ff46
  4125ea:	div    bh
  4125ec:	outs   dx,DWORD PTR ds:[esi]
  4125ed:	gs inc esi
  4125ef:	push   DWORD PTR [eax+0x46]
  4125f2:	imul   bh
  4125f4:	pop    edi
  4125f5:	ins    DWORD PTR es:[edi],dx
  4125f6:	inc    esi
  4125f7:	jmp    DWORD PTR [eax+0x56]
  4125fa:	imul   bl
  4125fc:	outs   dx,DWORD PTR ds:[esi]
  4125fd:	jne    0x412645
  4125ff:	call   DWORD PTR [eax-0x5a]
  412602:	mul    bl
  412604:	pop    edi
  412605:	popf   
  412606:	inc    edi
  412607:	inc    DWORD PTR [eax-0x56]
  41260a:	inc    ebp
  41260b:	and    al,0x47
  41260d:	and    eax,0xacc6ec7d
  412612:	jae    0x41260b
  412614:	sub    BYTE PTR [eax-0x18b8ed25],al
  41261a:	mov    al,0x68
  41261c:	jl     0x4125c1
  41261e:	ret    0xa8ff
  412621:	add    BYTE PTR ds:0xbd084741,dh
  412627:	xor    al,BYTE PTR [esi+0x40db70]
  41262d:	add    BYTE PTR [ecx+ecx*1],dh
  412630:	test   al,0x3
  412632:	pop    edi
  412633:	and    eax,0xeee8c31a
  412638:	scas   al,BYTE PTR es:[edi]
  412639:	xor    al,0x86
  41263b:	or     DWORD PTR [esi-0xa],ecx
  41263e:	dec    esp
  41263f:	mov    sp,0xe8fb
  412643:	lock ds jo 0x41260f
  412647:	icebp  
  412648:	fld    DWORD PTR [ebx]
  41264a:	mov    al,0xa7
  41264c:	ror    DWORD PTR [edi-0x2417378c],0xd9
  412653:	sbb    ch,BYTE PTR [eax-0x256de0fd]
  412659:	ret    0xeea0
  41265c:	cdq    
  41265d:	xor    al,0x6
  41265f:	or     DWORD PTR [ecx-0x1737aa18],edx
  412665:	fisttp DWORD PTR [ecx]
  412667:	sbb    ch,BYTE PTR [eax-0x23237ffd]
  41266d:	jo     0x412661
  41266f:	adc    cl,dl
  412671:	sub    esi,DWORD PTR [ecx+0x66]
  412674:	(bad)  
  412676:	push   esp
  412677:	or     esi,eax
  412679:	scas   al,BYTE PTR es:[edi]
  41267a:	out    dx,eax
  41267b:	fs sbb al,ch
  41267e:	pop    eax
  41267f:	out    dx,al
  412680:	shl    DWORD PTR [ebx],1
  412682:	push   es
  412683:	or     DWORD PTR [ecx+0x4a],edx
  412686:	adc    al,0xc8
  412688:	call   0x285b1f68
  41268d:	add    al,0xaf
  41268f:	scas   al,BYTE PTR es:[edi]
  412690:	fcmovb st,st(4)
  412692:	add    BYTE PTR [eax],al
  412694:	xor    dh,ch
  412696:	scas   eax,DWORD PTR es:[edi]
  412697:	xor    eax,DWORD PTR [esi+0x4cf99609]
  41269d:	data16 adc al,0xfc
  4126a0:	and    BYTE PTR [edi+eax*4],dl
  4126a3:	outs   dx,DWORD PTR ds:[esi]
  4126a4:	adc    BYTE PTR [esp+0x667770],dl
  4126ab:	cld    
  4126ac:	add    BYTE PTR [edi+0x35],ah
  4126af:	ficomp WORD PTR [ebx-0x38]
  4126b2:	call   DWORD PTR [eax-0x4c]
  4126b5:	jle    0x4126b7
  4126b7:	jmp    0xd3b6cca9
  4126bc:	mov    esp,ecx
  4126be:	imul   ecx
  4126c0:	inc    esp
  4126c1:	or     DWORD PTR [eax],eax
  4126c3:	cs (bad) 
  4126c5:	pop    ecx
  4126c6:	jmp    esi
  4126c8:	inc    esp
  4126c9:	or     DWORD PTR [edx-0x17],ebp
  4126cc:	sahf   
  4126cd:	gs imul ebp,ecx,0xac8c659e
  4126d4:	cmp    BYTE PTR [ecx+0x5e2f648c],bh
  4126da:	call   DWORD PTR [esi]
  4126dc:	jnp    0x412744
  4126de:	jne    0x4126f1
  4126e0:	sub    ah,bl
  4126e2:	sti    
  4126e3:	adc    DWORD PTR [edx],edx
  4126e5:	jg     0x4126e7
  4126e7:	jmp    0xebb5cc79
  4126ec:	sbb    eax,0x5b6967c9
  4126f1:	enter  0xe5ff,0x6f
  4126f5:	adc    eax,ebp
  4126f7:	mov    es,WORD PTR [eax]
  4126f9:	add    BYTE PTR [ecx],al
  4126fb:	jmp    WORD PTR [edx-0xc]
  4126ff:	xchg   ebx,eax
  412700:	test   ebp,edx
  412702:	shl    DWORD PTR [ebp-0x1],1
  412705:	sbb    DWORD PTR [ebp+0x6d],esi
  412708:	hlt    
  412709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41270a:	fldenv [ebp-0x77]
  41270d:	ins    BYTE PTR es:[edi],dx
  41270e:	mov    ah,0x5c
  412710:	jmp    FWORD PTR [esi-0x610f6157]
  412716:	mov    eax,ds:0x2b14ff64
  41271b:	ins    DWORD PTR es:[edi],dx
  41271c:	cmc    
  41271d:	xchg   edi,eax
  41271e:	mov    cl,0x64
  412720:	call   DWORD PTR [esp+edx*4+0x5c]
  412724:	inc    DWORD PTR [eax]
  412726:	leave  
  412727:	shl    cl,0xc3
  41272a:	mov    ebx,esi
  41272c:	inc    BYTE PTR [ebp+0x76]
  41272f:	mov    edi,0xf4f3ff94
  412734:	out    0x2f,eax
  412736:	jo     0x412740
  412738:	add    cl,cl
  41273a:	sbb    al,0x60
  41273c:	call   DWORD PTR [ebp+eiz*2-0x3c]
  412740:	add    ah,0x8a
  412743:	inc    edx
  412744:	jmp    FWORD PTR [ecx-0x20]
  412747:	repz je 0x412752
  41274a:	jbe    0x412727
  41274c:	mov    edi,0x44e579ff
  412751:	cld    
  412752:	xchg   BYTE PTR [edi],al
  412754:	xor    eax,DWORD PTR [ecx-0x62]
  412757:	repz je 0x412762
  41275a:	push   esi
  41275b:	fwait
  41275c:	(bad)  
  41275d:	inc    DWORD PTR [eax]
  41275f:	add    BYTE PTR [ecx],bh
  412761:	inc    edx
  412762:	jmp    DWORD PTR [edi+0x7e]
  412765:	pop    ss
  412766:	inc    ecx
  412767:	add    BYTE PTR [esi-0x61beccf9],dh
  41276d:	repz xor al,0xf
  412770:	xchg   DWORD PTR [ebp-0x1],ecx
  412773:	out    0x3e,eax
  412775:	into   
  412776:	(bad)  
  412777:	push   DWORD PTR [ebp-0x38]
  41277a:	jae    0x41278b
  41277c:	cs cmp eax,0xc06675fe
  412782:	xchg   esp,eax
  412783:	cld    
  412784:	mov    esi,esi
  412786:	out    0x85,eax
  412788:	popf   
  412789:	idiv   dh
  41278b:	push   0x5e
  41278d:	inc    eax
  41278e:	sub    DWORD PTR [eax],0x16680d6f
  412794:	cmp    eax,0x13feff47
  412799:	sub    BYTE PTR gs:[ecx+0x1e],al
  41279d:	rol    BYTE PTR [ebp+0x6d7b47c6],0xb
  4127a4:	pop    es
  4127a5:	(bad)  
  4127a6:	cld    
  4127a7:	dec    edi
  4127a8:	ja     0x412735
  4127aa:	test   DWORD PTR [edi],0xff6ff71f
  4127b0:	add    BYTE PTR [edx-0xd073d37],cl
  4127b6:	fcos   
  4127b8:	push   0x47413102
  4127bd:	cmp    al,BYTE PTR [eax]
  4127bf:	xor    eax,DWORD PTR [esi+0x1db72]
  4127c5:	add    BYTE PTR [edi+0x72],al
  4127c8:	sub    eax,0x72
  4127cb:	xor    al,0x6d
  4127cd:	(bad)  
  4127ce:	cmp    al,0x32
  4127d0:	clc    
  4127d1:	push   cs
  4127d2:	pop    ss
  4127d3:	sub    BYTE PTR [ebp+esi*2+0x4f],0xca
  4127d8:	sar    ebx,0xb0
  4127db:	sub    bl,BYTE PTR [edx+esi*1-0x7c]
  4127df:	add    ch,BYTE PTR [ebp+0x6a]
  4127e2:	inc    edi
  4127e3:	mov    al,BYTE PTR [ecx-0x248df9d8]
  4127e9:	adc    eax,0x6803b154
  4127ee:	inc    ebp
  4127ef:	jb     0x4127f4
  4127f1:	sub    BYTE PTR [edi-0x5b],0x45
  4127f5:	(bad)  
  4127f6:	js     0x41285e
  4127f8:	inc    ebx
  4127f9:	je     0x41283b
  4127fb:	and    dl,ah
  4127fd:	(bad)  
  4127fe:	repnz pop ecx
  412800:	pop    ebx
  412801:	sbb    DWORD PTR [ebx+0x3a],esp
  412804:	ins    BYTE PTR es:[edi],dx
  412805:	call   0xffadd758
  41280a:	frstor [edi+0x6c]
  41280d:	jne    0x41284e
  41280f:	cmp    ch,cl
  412811:	sti    
  412812:	inc    eax
  412813:	pushf  
  412814:	fldenv [edx]
  412816:	cmp    BYTE PTR [esi],bl
  412818:	cld    
  412819:	out    0xb7,eax
  41281b:	or     DWORD PTR [ebp-0x30fd794],esp
  412821:	ins    BYTE PTR es:[edi],dx
  412822:	call   0x8e63:0x1ce58111
  412829:	ins    BYTE PTR es:[edi],dx
  41282a:	add    BYTE PTR [eax],al
  41282c:	call   0x1f71:0x40f68665
  412833:	inc    esp
  412834:	add    BYTE PTR [ebx-0x60],ah
  412837:	inc    ecx
  412838:	inc    ebx
  412839:	or     DWORD PTR [ecx+edi*2],edx
  41283c:	jecxz  0x4127c4
  41283e:	sub    eax,0xd2ba916f
  412843:	add    ebp,DWORD PTR [ebp+0xa]
  412846:	push   esi
  412847:	test   BYTE PTR [eax+0x71],0xe9
  41284b:	inc    ebx
  41284c:	shl    BYTE PTR [edx+0x70],1
  41284f:	(bad)  
  412850:	int3   
  412851:	mov    ?,esp
  412853:	sbb    ebp,DWORD PTR [edi-0x38]
  412856:	call   0x176a2d3
  41285b:	ret    
  41285c:	mov    al,0xe2
  41285e:	in     eax,0x3
  412860:	xor    edx,esi
  412862:	nop
  412863:	(bad)  
  412864:	push   esp
  412865:	enter  0xd4e8,0xa0
  412869:	int3   
  41286a:	jae    0x41286f
  41286c:	inc    edi
  41286d:	push   cs
  41286e:	sub    edi,esi
  412870:	sub    DWORD PTR [ebx+0x628cdb10],edi
  412876:	not    dl
  412878:	loopne 0x412882
  41287a:	jmp    0x1032d9db
  41287f:	xor    BYTE PTR [esi],al
  412881:	or     DWORD PTR [ecx],edi
  412883:	imul   ebx,edx,0x10
  412886:	ror    esi,0x61
  412889:	(bad)  
  41288a:	into   
  41288b:	pop    esp
  41288c:	leave  
  41288d:	inc    edi
  41288e:	(bad)  
  41288f:	imul   eax,DWORD PTR [eax],0x0
  412892:	(bad)  
  412894:	hlt    
  412895:	les    eax,FWORD PTR [eax-0x45]
  412898:	inc    eax
  41289a:	push   esp
  41289b:	jl     0x41289d
  41289d:	jmp    0x6b5cad3
  4128a2:	adc    eax,0xacad3a6a
  4128a7:	bound  edx,QWORD PTR [eax+0x1]
  4128aa:	inc    ebx
  4128ab:	or     edi,ebp
  4128ad:	dec    edi
  4128ae:	repz xor BYTE PTR [eax+ebp*1],dh
  4128b2:	inc    ebx
  4128b3:	mov    ecx,0x69fcf4fe
  4128b8:	sub    al,0x8e
  4128ba:	ins    BYTE PTR es:[edi],dx
  4128bb:	(bad)  
  4128bc:	call   0xffa3b1d2
  4128c1:	push   edx
  4128c2:	inc    edx
  4128c3:	retf   
  4128c4:	jg     0x4128e5
  4128c6:	dec    ebx
  4128c7:	fdiv   st(1),st
  4128c9:	scas   eax,DWORD PTR es:[edi]
  4128ca:	pusha  
  4128cb:	push   ss
  4128cc:	rcl    BYTE PTR [eax+0x46ff625c],0x51
  4128d3:	mov    bl,0x38
  4128d5:	out    0xb7,al
  4128d7:	xchg   esp,eax
  4128d8:	(bad)  
  4128d9:	mov    esp,0xe1756220
  4128de:	or     al,0x9d
  4128e0:	mov    edi,0x5dc21c26
  4128e5:	xor    BYTE PTR [ecx],cl
  4128e7:	or     eax,0x7519bc00
  4128ec:	push   0xbe7244e9
  4128f1:	xchg   ecx,eax
  4128f2:	leave  
  4128f3:	adc    eax,0xe941
  4128f8:	in     eax,dx
  4128f9:	fisttp DWORD PTR [ebx]
  4128fb:	div    BYTE PTR [edi+0x9]
  4128fe:	call   0xffa30e09
  412903:	push   ecx
  412904:	inc    edx
  412905:	or     edi,ebp
  412907:	lahf   
  412908:	jl     0x4128db
  41290a:	xor    ebp,DWORD PTR [eax]
  41290c:	inc    ebx
  41290d:	bound  esi,QWORD PTR [ebp-0x23]
  412910:	fstp   st(3)
  412912:	pop    es
  412913:	add    BYTE PTR [esi-0x45],dh
  412916:	in     eax,0xff
  412918:	add    DWORD PTR [esi],ebx
  41291a:	ret    0x2e08
  41291d:	cmp    cl,BYTE PTR [edx+0xb59e1ec]
  412923:	call   0x3ff485
  412928:	adc    eax,0x461a73cd
  41292d:	sbb    dh,BYTE PTR [ecx+eax*2]
  412930:	push   ds
  412931:	cmp    eax,0xf3dbd8e7
  412936:	(bad)  
  412937:	push   eax
  412938:	pop    esi
  412939:	hlt    
  41293a:	je     0x412944
  41293c:	(bad)  
  41293d:	jg     0x41293e
  41293f:	jmp    DWORD PTR [ecx-0x3c]
  412942:	aad    0xc1
  412944:	popa   
  412945:	repz enter 0xd6c2,0xc
  41294a:	push   ebp
  41294b:	mov    eax,DWORD PTR [edx+0x4fcc487]
  412951:	or     eax,0x5981086a
  412956:	pop    es
  412957:	call   0x40db62
  41295c:	add    BYTE PTR [eax],al
  41295e:	daa    
  41295f:	dec    ecx
  412960:	sti    
  412961:	push   0xffffff9e
  412963:	inc    esp
  412964:	daa    
  412965:	xor    eax,0x55680cdf
  41296a:	jp     0x4129b1
  41296c:	(bad)  
  41296d:	(bad)  
  41296e:	jnp    0x4129d3
  412970:	sub    BYTE PTR [ecx-0x62],al
  412973:	les    edi,FWORD PTR [ebp+0xaf341c4]
  412979:	sar    dl,0xf
  41297c:	push   eax
  41297d:	push   0xbeef0c6f
  412982:	into   
  412983:	repz je 0x41298e
  412986:	xchg   esi,eax
  412987:	push   0xbd81ffe2
  41298c:	(bad)  
  41298d:	rol    DWORD PTR [edi+0x37],0x69
  412991:	push   0x47
  412993:	retf   0x351b
  412996:	push   es
  412997:	jb     0x412974
  412999:	jns    0x412a16
  41299b:	xor    DWORD PTR [edi+edi*8],eax
  41299e:	jb     0x412a07
  4129a0:	sbb    al,BYTE PTR [ecx+0x47]
  4129a3:	dec    edx
  4129a4:	jns    0x41296a
  4129a6:	sub    BYTE PTR [edi+0x569bbffd],ah
  4129ac:	shl    DWORD PTR [edi+0x46],cl
  4129af:	jb     0x412a09
  4129b1:	mov    esi,0x7ef8f77
  4129b6:	pop    ds
  4129b7:	sbb    BYTE PTR [ebp-0x1],ah
  4129ba:	add    BYTE PTR [edx-0x37],bh
  4129bd:	sar    al,0xd6
  4129c0:	(bad)  
  4129c2:	add    BYTE PTR [eax],al
  4129c4:	push   0x47412e9a
  4129c9:	cmp    ch,BYTE PTR [edi+0x68728634]
  4129cf:	xor    eax,0xffc30948
  4129d4:	call   0xc940692a
  4129d9:	pop    edx
  4129da:	inc    ebx
  4129db:	je     0x412a2d
  4129dd:	adc    bl,0xfe
  4129e0:	xor    ch,BYTE PTR [edx+0x5b]
  4129e3:	or     dh,BYTE PTR [eax+0x72e8692e]
  4129e9:	xor    DWORD PTR [ecx-0x1],ebp
  4129ec:	sub    eax,0x5237db72
  4129f1:	mov    cl,0x3
  4129f3:	push   0xffc23573
  4129f8:	mov    DWORD PTR [eax+edi*8+0x5b720628],ebx
  4129ff:	adc    DWORD PTR ss:[esi+0x68],0xb
  412a04:	xchg   ebp,edx
  412a06:	test   DWORD PTR [edi+0x17],0x48eee609
  412a0d:	jno    0x4129d8
  412a0f:	imul   ebx,DWORD PTR [eax+0x5f],0x5f87fcc1
  412a16:	into   
  412a17:	fisttp QWORD PTR [eax-0x19]
  412a1a:	daa    
  412a1b:	das    
  412a1c:	xchg   BYTE PTR [ecx],cl
  412a1e:	push   ecx
  412a1f:	or     esi,DWORD PTR [edx-0x38]
  412a22:	call   0x4fa48f
  412a27:	ret    
  412a28:	add    BYTE PTR [eax],al
  412a2a:	sub    BYTE PTR [edi-0xb],ah
  412a2d:	aas    
  412a2e:	and    BYTE PTR [edi-0xe],bl
  412a31:	inc    ebx
  412a32:	xchg   ebx,eax
  412a33:	push   cs
  412a34:	cmp    esp,edx
  412a36:	adc    ebp,edx
  412a38:	loopne 0x412a95
  412a3a:	rcr    DWORD PTR [edi-0x7a],1
  412a3d:	push   0x68a968ef
  412a42:	clc    
  412a43:	repz aam 0x68
  412a46:	jp     0x412a59
  412a48:	or     DWORD PTR [ebx-0x17],0x3edd665e
  412a4f:	pop    esi
  412a50:	aam    0xfb
  412a52:	loopne 0x412aa3
  412a54:	push   edi
  412a55:	push   0x6909f3d0
  412a5a:	push   edx
  412a5b:	adc    DWORD PTR [ecx+0x3f],edx
  412a5e:	rcr    DWORD PTR [esi+0x3e],0x68
  412a62:	xor    bl,BYTE PTR [ebp+0x36]
  412a65:	out    dx,al
  412a66:	dec    eax
  412a67:	jno    0x412a60
  412a69:	test   eax,0x45305ea8
  412a6e:	dec    ebx
  412a6f:	or     DWORD PTR [esp+edi*2-0x863a155],esi
  412a76:	test   al,0x61
  412a78:	and    eax,0x29128868
  412a7d:	out    dx,eax
  412a7e:	adc    dh,cl
  412a80:	call   0xc99:0x9062e
  412a87:	mov    esp,es
  412a89:	out    dx,al
  412a8a:	loopne 0x412a44
  412a8c:	dec    edi
  412a8d:	cmp    DWORD PTR [eax],eax
  412a8f:	add    BYTE PTR [ebx-0x5e3100a2],al
  412a95:	icebp  
  412a96:	dec    esp
  412a97:	sbb    al,0x8a
  412a99:	pop    esi
  412a9a:	dec    edi
  412a9b:	into   
  412a9c:	push   esi
  412a9d:	push   es
  412a9e:	call   0xff9fd0bd
  412aa3:	and    DWORD PTR [ebx],ebx
  412aa5:	or     DWORD PTR [eax],eax
  412aa7:	(bad)  
  412aa8:	jmp    0x435869d
  412aad:	pop    esi
  412aae:	dec    edi
  412aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab0:	push   ss
  412ab1:	push   es
  412ab2:	call   0xff9fd295
  412ab7:	xor    ebx,esi
  412ab9:	pop    es
  412aba:	add    BYTE PTR [esi-0x1f],bh
  412abd:	lock imul edi,DWORD PTR [ebx+ecx*1-0x981b0a2],0x67c2e805
  412ac9:	pop    esi
  412aca:	inc    DWORD PTR [ecx+0x66ff9df8]
  412ad0:	and    cl,BYTE PTR [ebx+0x8]
  412ad3:	jmp    0x6b2dbdcf
  412ad8:	xchg   DWORD PTR [ebp+0x6a],ebx
  412adb:	jmp    0xbd403bce
  412ae0:	mov    esp,0x207c7965
  412ae5:	pop    esi
  412ae6:	mov    DWORD PTR [eax+ebp*1-0x49d1e60d],ebp
  412aed:	add    eax,0x5e2869e8
  412af2:	call   DWORD PTR [ebx+0x5e650000]
  412af8:	jne    0x412adb
  412afa:	in     al,dx
  412afb:	(bad)  
  412afc:	dec    BYTE PTR [esi]
  412afe:	and    bl,dh
  412b00:	sbb    eax,DWORD PTR [eax]
  412b02:	dec    ecx
  412b03:	pop    eax
  412b04:	pop    es
  412b05:	call   0x4011d4
  412b0a:	jns    0x412b64
  412b0c:	sti    
  412b0d:	push   ebx
  412b0f:	popa   
  412b10:	out    0x93,eax
  412b12:	stos   DWORD PTR es:[edi],eax
  412b13:	out    0xfe,al
  412b15:	leave  
  412b16:	lods   al,BYTE PTR ds:[esi]
  412b17:	pop    ebp
  412b18:	call   DWORD PTR [ebp+eiz*8-0x4b]
  412b1c:	imul   eax,DWORD PTR [eax],0x41357e06
  412b22:	cs inc ecx
  412b24:	xchg   esp,eax
  412b25:	xor    eax,0x35ff056f
  412b2a:	sub    esi,edi
  412b2c:	inc    eax
  412b2d:	add    BYTE PTR [esi],al
  412b2f:	push   esp
  412b30:	ret    0xe9ff
  412b33:	pop    edi
  412b34:	mov    edi,0xfe391374
  412b39:	jne    0x412b49
  412b3b:	in     al,0x74
  412b3d:	or     al,0x4e
  412b3f:	in     al,0x74
  412b41:	or     dh,dl
  412b43:	call   0xbfdd:0xc079ffe4
  412b4a:	jns    0x412b2f
  412b4c:	imul   eax,DWORD PTR [eax],0x41357c46
  412b52:	out    dx,al
  412b53:	inc    eax
  412b54:	xchg   esp,eax
  412b55:	xor    eax,0x26808af
  412b5a:	add    BYTE PTR [eax],al
  412b5c:	fimul  WORD PTR [eax]
  412b5e:	sub    al,0x7e
  412b61:	retf   0xfffe
  412b64:	mov    ch,0xc8
  412b66:	jae    0x412b7d
  412b68:	fsubrp st(3),st
  412b6a:	je     0x412b7c
  412b6c:	jns    0x412bc7
  412b6e:	or     edx,DWORD PTR [eax+0x59]
  412b71:	pop    ecx
  412b72:	pop    es
  412b73:	call   0x3fe7a5
  412b78:	ss jae 0x412b3a
  412b7b:	inc    DWORD PTR [edi-0xd]
  412b7e:	gs jne 0x412bb8
  412b81:	or     esi,eax
  412b83:	or     ebp,edi
  412b85:	(bad)  
  412b86:	das    
  412b87:	inc    ecx
  412b88:	inc    edi
  412b89:	pop    ebx
  412b8a:	out    dx,eax
  412b8b:	pop    es
  412b8c:	pop    edi
  412b8d:	sbb    al,0x5f
  412b8f:	jmp    FWORD PTR [eax+0x29]
  412b92:	inc    ecx
  412b93:	or     al,0x47
  412b95:	sbb    eax,0xa6c4ec79
  412b9a:	push   0xf9c8476a
  412b9f:	(bad)  
  412ba0:	shr    BYTE PTR [ecx+0x5b],cl
  412ba3:	mov    esi,0x89654303
  412ba8:	sbb    BYTE PTR [esi+0x4330ffdc],0xa6
  412baf:	push   0xffc255b1
  412bb4:	and    ebp,edi
  412bb6:	sti    
  412bb7:	out    0xa7,eax
  412bb9:	jnp    0x412c20
  412bbb:	call   FWORD PTR [edi+0xef0371]
  412bc1:	add    cl,cl
  412bc3:	or     DWORD PTR [ebx+0x64728635],eax
  412bc9:	jne    0x412c1a
  412bcb:	jp     0x412b83
  412bcd:	(bad)  
  412bce:	lock shl BYTE PTR [ebp+esi*2-0x15],cl
  412bd3:	jmp    0xffa8:0x1fef07ee
  412bda:	fcomp  DWORD PTR [eax]
  412bdc:	inc    edx
  412bdd:	add    al,0x47
  412bdf:	popf   
  412be0:	js     0x412bce
  412be2:	(bad)  
  412be3:	and    eax,0xc2c0f74c
  412be8:	jbe    0x412c2f
  412bea:	mov    ebx,0x43756481
  412bef:	adc    ebp,DWORD PTR [edi]
  412bf1:	divps  xmm6,XMMWORD PTR [ecx+0x8bae803]
  412bf8:	js     0x412bfe
  412bfa:	inc    edi
  412bfb:	adc    BYTE PTR [ecx],ch
  412bfd:	cmc    
  412bfe:	retf   
  412bff:	inc    eax
  412c00:	call   0xa4857308
  412c05:	imul   eax,DWORD PTR [edi+0x9],0xffffffe9
  412c09:	add    eax,DWORD PTR [eax+0x4864f4c5]
  412c0f:	or     ecx,ebp
  412c11:	fldcw  WORD PTR [eax-0xf]
  412c14:	call   0xe9328cf2
  412c19:	jbe    0x412c1d
  412c1b:	push   ebp
  412c1c:	cmp    DWORD PTR [edi-0x36],esi
  412c1f:	push   esp
  412c20:	fisub  WORD PTR [eax+ecx*2-0x48]
  412c24:	int    0xee
  412c26:	add    BYTE PTR [eax],al
  412c28:	cmp    BYTE PTR [ebx+0x3c],bl
  412c2b:	push   0x357e32f
  412c30:	inc    edi
  412c31:	push   cs
  412c32:	test   eax,0x527043ef
  412c37:	add    al,BYTE PTR [edi+0x9]
  412c3a:	adc    DWORD PTR [edi+ebp*2-0x659b1738],eax
  412c41:	or     eax,0x5b057981
  412c46:	mov    ss,ebx
  412c48:	int    0x39
  412c4a:	je     0x412cca
  412c4c:	repz push edx
  412c4e:	jle    0x412cb4
  412c50:	xchg   edi,eax
  412c51:	mov    bh,0x80
  412c53:	jmp    0x7aaf875e
  412c58:	retf   0x5e59
  412c5b:	fdiv   DWORD PTR fs:[ecx+0x39]
  412c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c60:	rcr    BYTE PTR [edx-0x3d],1
  412c63:	add    ebx,DWORD PTR [edi+0x7]
  412c66:	pop    ss
  412c67:	ret    
  412c68:	rcr    BYTE PTR [ebx+0x7c],0x73
  412c6c:	mov    al,0x5a
  412c6e:	ds fs jp 0x412c7c
  412c72:	add    BYTE PTR [eax],al
  412c74:	test   BYTE PTR [edx-0x19],bl
  412c77:	sbb    DWORD PTR ds:0x1970ff5a,eax
  412c7d:	neg    DWORD PTR gs:[esi]
  412c80:	sub    ebp,edi
  412c82:	inc    DWORD PTR [eax-0x16beecc8]
  412c88:	jmp    0x412c1d
  412c8a:	lock inc BYTE PTR [eax]
  412c8d:	add    ah,ah
  412c8f:	pop    ecx
  412c90:	push   DWORD PTR [ebx+edi*2+0xce94131]
  412c97:	xchg   edi,eax
  412c98:	shr    esi,0xe4
  412c9b:	pop    DWORD PTR [ebp-0xa6032b]
  412ca1:	push   ebx
  412ca2:	dec    ebx
  412ca3:	icebp  
  412ca4:	or     bl,BYTE PTR [edi]
  412ca6:	sbb    BYTE PTR [edx-0x2],0x94
  412caa:	fwait
  412cab:	push   edx
  412cac:	inc    esi
  412cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412caf:	adc    al,0xf
  412cb1:	adc    BYTE PTR [edx],cl
  412cb3:	pop    edx
  412cb4:	out    0x5d,eax
  412cb6:	sbb    BYTE PTR [edx-0x1],0x60
  412cba:	into   
  412cbb:	jo     0x412cb4
  412cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbf:	out    dx,eax
  412cc0:	call   DWORD PTR [eax]
  412cc2:	inc    esi
  412cc3:	adc    eax,DWORD PTR [ecx-0x17]
  412cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cc7:	xchg   esp,eax
  412cc8:	lock xchg esi,eax
  412cca:	fs pop edx
  412ccc:	(bad)  
  412ccd:	mov    esp,0xe9413055
  412cd2:	pop    esp
  412cd3:	rol    eax,cl
  412cd5:	jbe    0x412d3b
  412cd7:	nop
  412cd8:	test   DWORD PTR [ecx+0x74ff5a7c],ecx
  412cde:	into   
  412cdf:	inc    eax
  412ce0:	neg    DWORD PTR [esi+0x64]
  412ce3:	mov    ecx,0xc82d0e67
  412ce8:	dec    DWORD PTR [ebp-0x22]
  412ceb:	pop    eax
  412cec:	test   DWORD PTR [eax],0x35fee601
  412cf2:	add    BYTE PTR [eax],al
  412cf4:	mov    eax,ds:0x600412c
  412cf9:	xchg   edx,eax
  412cfa:	sar    bh,0x71
  412cfd:	or     al,al
  412cff:	je     0x412d48
  412d01:	cmp    BYTE PTR [ebp-0x119c628],0x4
  412d08:	stos   DWORD PTR es:[edi],eax
  412d09:	push   ebp
  412d0a:	(bad)  
  412d0b:	xor    BYTE PTR [ecx],ah
  412d0d:	nop
  412d0e:	fdivr  st(7),st
  412d10:	inc    ecx
  412d11:	out    0x4f,al
  412d13:	call   0x40d496
  412d18:	inc    ebp
  412d19:	popa   
  412d1a:	or     al,al
  412d1c:	fimul  DWORD PTR [edi]
  412d1e:	push   eax
  412d1f:	call   0x40d47e
  412d24:	test   eax,0x71f7dc90
  412d29:	out    0x14,al
  412d2b:	add    BYTE PTR [esi],ch
  412d2d:	or     eax,0xb40abd83
  412d32:	(bad)  
  412d33:	call   FWORD PTR [esi]
  412d35:	inc    ecx
  412d36:	xor    DWORD PTR fs:[ebx-0xe000918],0xc
  412d3e:	je     0x412d9c
  412d40:	lods   eax,DWORD PTR ds:[esi]
  412d41:	test   eax,0xebb1f7e8
  412d46:	push   DWORD PTR [ebx+0x4d]
  412d49:	gs (bad) 
  412d4b:	inc    DWORD PTR [ecx-0x98a0056]
  412d51:	in     al,0x6a
  412d53:	mov    edx,0xb5feeb71
  412d58:	add    BYTE PTR [eax],al
  412d5a:	ret    0xfeb3
  412d5d:	push   DWORD PTR [ecx+0x31]
  412d60:	pop    es
  412d61:	call   0x40a407
  412d66:	jno    0x412dd9
  412d68:	call   0x62007564
  412d6d:	(bad)  
  412d6e:	cmp    ch,BYTE PTR [edx+0x6b]
  412d71:	mov    cl,0xfd
  412d73:	iret   
  412d74:	popa   
  412d75:	(bad)  
  412d76:	cli    
  412d77:	into   
  412d78:	pop    ecx
  412d79:	jmp    FWORD PTR [eax-0x50f827e1]
  412d7f:	sbb    DWORD PTR [ebp-0x67d06701],0xffffffe0
  412d86:	cwde   
  412d87:	mul    DWORD PTR [ecx-0x1]
  412d8a:	adc    ch,BYTE PTR [edx+0x6b]
  412d8d:	xchg   ebp,eax
  412d8e:	mov    ebp,0xb2ff6207
  412d93:	cs pop edx
  412d95:	push   DWORD PTR [eax+0x57]
  412d98:	xlat   BYTE PTR ds:[ebx]
  412d99:	pop    es
  412d9a:	pop    edi
  412d9b:	inc    ebp
  412d9c:	popf   
  412d9d:	jmp    DWORD PTR [eax+0x67]
  412da0:	xchg   edi,eax
  412da1:	in     al,0x50
  412da3:	outs   dx,DWORD PTR ds:[esi]
  412da4:	popa   
  412da5:	call   0xffa2a360
  412daa:	dec    eax
  412dab:	jne    0x412e1d
  412dad:	test   DWORD PTR [eax+0x47],0x4efa866c
  412db4:	popa   
  412db5:	(bad)  
  412db6:	cli    
  412db7:	cmp    DWORD PTR [ecx-0x1],ebx
  412dba:	sub    BYTE PTR [edx-0x23],cl
  412dbd:	mov    esp,0xa7200000
  412dc2:	popa   
  412dc3:	mov    ch,0x27
  412dc5:	ja     0x412e28
  412dc7:	call   FWORD PTR [edi]
  412dc9:	repnz sahf 
  412dcb:	dec    DWORD PTR [eax]
  412dcd:	jg     0x412d66
  412dcf:	lock clc 
  412dd1:	xchg   BYTE PTR [ecx-0x18],ah
  412dd4:	(bad)  
  412dd5:	int    0x60
  412dd7:	push   eax
  412dd9:	sub    al,0x5c
  412ddb:	jmp    0xffa20e10
  412de0:	loopne 0x412e3e
  412de2:	pop    edi
  412de3:	call   0x4b73690
  412de8:	inc    edi
  412de9:	inc    edx
  412dea:	sub    ecx,DWORD PTR [edi+eax*2]
  412ded:	mov    esi,0x4cc47061
  412df2:	push   ecx
  412df3:	out    dx,al
  412df4:	mov    eax,0x3a60f1e1
  412df9:	add    DWORD PTR [ecx-0x27],edx
  412dfc:	out    dx,al
  412dfd:	push   edi
  412dfe:	mov    ecx,DWORD PTR ss:[edx]
  412e01:	push   ebp
  412e02:	pop    esp
  412e03:	(bad)  
  412e04:	nop
  412e05:	mov    eax,0xca5a4890
  412e0a:	call   0xa85f03fa
  412e0f:	add    eax,DWORD PTR [eax+0x62ade1d]
  412e15:	or     DWORD PTR [ecx],edx
  412e17:	sbb    eax,0xcfe5787
  412e1c:	xchg   esp,ebx
  412e1e:	fnsave [ebx+0x70e909e8]
  412e24:	add    BYTE PTR [eax],al
  412e26:	cdq    
  412e27:	push   edi
  412e28:	pop    esp
  412e29:	pop    esp
  412e2a:	not    DWORD PTR [edi+0x54]
  412e2d:	or     al,0x5f
  412e2f:	stos   BYTE PTR es:[edi],al
  412e30:	mov    bh,0x60
  412e32:	inc    eax
  412e33:	(bad)
  412e38:	je     0x412e00
  412e3a:	cmp    BYTE PTR [edx-0x378dc5b0],bh
  412e40:	call   0x285e0430
  412e45:	add    al,0x18
  412e47:	sbb    eax,0x9862af6
  412e4c:	xchg   ecx,eax
  412e4d:	or     BYTE PTR [edi],al
  412e4f:	push   edi
  412e50:	xchg   esi,eax
  412e51:	or     al,0x7
  412e53:	fdivrp st(5),st
  412e55:	mov    bl,0x60
  412e57:	or     ebp,ecx
  412e59:	jo     0x412e0c
  412e5b:	push   esi
  412e5c:	hlt    
  412e5d:	pop    ebx
  412e5e:	xchg   edi,eax
  412e5f:	push   esi
  412e60:	add    ah,bh
  412e62:	dec    esp
  412e63:	popa   
  412e64:	outs   dx,BYTE PTR ds:[esi]
  412e65:	(bad)  
  412e66:	addr16 push esi
  412e68:	call   0xff97deaa
  412e6d:	rcr    DWORD PTR [esi+0x1c],1
  412e70:	inc    ecx
  412e71:	jmp    0x41490a9d
  412e76:	lahf   
  412e77:	push   ebp
  412e78:	inc    DWORD PTR [esi+0x27]
  412e7b:	fdiv   st(3),st
  412e7d:	ds xchg ecx,eax
  412e7f:	push   cs
  412e80:	call   0xff97f178
  412e85:	and    BYTE PTR [edx],al
  412e87:	or     eax,0xbc00
  412e8c:	ret    
  412e8d:	and    DWORD PTR gs:0x16ff5e48,0xb9fbccd1
  412e98:	out    0xdb,eax
  412e9a:	or     eax,DWORD PTR [esi]
  412e9c:	pop    ecx
  412e9d:	push   es
  412e9e:	sub    DWORD PTR [eax+0x67fd6144],ebp
  412ea4:	inc    esp
  412ea5:	or     DWORD PTR [ebx],ecx
  412ea7:	sub    DWORD PTR [edi],esi
  412ea9:	mov    ecx,es
  412eab:	call   0x250837f4
  412eb0:	jmp    0x412eba
  412eb2:	add    cl,ch
  412eb4:	inc    esp
  412eb5:	dec    esi
  412eb6:	inc    ebp
  412eb7:	aad    0x98
  412eb9:	push   cs
  412eba:	add    cl,ch
  412ebc:	push   ds
  412ebd:	push   esi
  412ebe:	imul   ebp,ecx,0xe969561e
  412ec4:	mov    bh,0xcb
  412ec6:	repz sbb DWORD PTR [esi+0x709ef48b],esi
  412ecd:	push   esi
  412ece:	push   eax
  412ecf:	sahf   
  412ed0:	out    dx,al
  412ed1:	pop    ebp
  412ed2:	call   FWORD PTR [edi+eiz*2]
  412ed5:	popa   
  412ed6:	iret   
  412ed7:	pop    edi
  412ed8:	inc    ebx
  412ed9:	or     DWORD PTR [ebx],ecx
  412edb:	add    BYTE PTR [esi+0x62e90430],bl
  412ee1:	or     al,0x0
  412ee3:	add    BYTE PTR [esi-0x73],al
  412ee6:	sub    BYTE PTR [ecx-0x12],al
  412ee9:	mov    dh,0x74
  412eeb:	or     al,0x76
  412eed:	mov    ebx,0xffbe
  412ef2:	imul   ebx,DWORD PTR [ebp-0x7fd42f76],0xb609f7f4
  412efc:	dec    edi
  412efd:	push   edx
  412efe:	push   ss
  412eff:	jmp    0x412ebf
  412f01:	jmp    FWORD PTR [ecx-0x7c]
  412f04:	test   eax,esi
  412f06:	popa   
  412f07:	mov    dh,0xfe
  412f09:	call   0x40a4a4
  412f0e:	mov    ah,0x9
  412f10:	push   0xff4c7043
  412f15:	(bad)  
  412f16:	and    edi,DWORD PTR [ebp-0x49b6000a]
  412f1c:	xor    al,0xf
  412f1e:	xchg   edi,eax
  412f1f:	dec    esp
  412f20:	jmp    edi
  412f22:	xchg   BYTE PTR [esi-0x1],dh
  412f25:	jmp    edi
  412f27:	jg     0x412f0d
  412f29:	imul   DWORD PTR [ecx-0x4a]
  412f2c:	imul   eax,DWORD PTR [eax],0x413618f6
  412f32:	pop    esi
  412f33:	mov    dh,0xb4
  412f35:	lock and DWORD PTR [esi+edi*8+0x290453ff],esi
  412f3d:	inc    ecx
  412f3e:	push   ds
  412f3f:	loope  0x412f5a
  412f41:	mov    edi,0x8588b3e9
  412f46:	or     bh,BYTE PTR [esi+edi*8+0x680d84ff]
  412f4d:	xor    eax,0xfeff4df0
  412f52:	jae    0x412f0c
  412f54:	idiv   bh
  412f56:	add    BYTE PTR [eax],al
  412f58:	inc    edi
  412f59:	jnp    0x412fb9
  412f5b:	xor    eax,0xffc44948
  412f60:	call   0xe940ccf3
  412f65:	fld    DWORD PTR [edi+0x5ddbd8e0]
  412f6b:	push   0x47
  412f6d:	or     bl,BYTE PTR [edx]
  412f6f:	xchg   BYTE PTR ss:[edx+0x5e],ah
  412f73:	mov    ch,0xd7
  412f75:	mov    ebx,0xf5c0ff5d
  412f7a:	push   cs
  412f7b:	sub    DWORD PTR [esi],eax
  412f7d:	bound  ebp,QWORD PTR [ebx-0x22]
  412f80:	icebp  
  412f81:	retf   
  412f82:	pop    ebp
  412f83:	mov    edx,eax
  412f85:	mov    edx,0x48a0ff55
  412f8a:	add    ebp,DWORD PTR [eax+0xb]
  412f8d:	pop    esp
  412f8e:	(bad)  
  412f8f:	call   DWORD PTR [ecx-0x7708ad4b]
  412f95:	repz pop ebp
  412f97:	xor    eax,0xffc44950
  412f9c:	pusha  
  412f9d:	and    bl,BYTE PTR [ebp-0x78268f01]
  412fa3:	fdiv   QWORD PTR [eax+0x53]
  412fa6:	pop    ebp
  412fa7:	and    DWORD PTR [edx+0x58ff5606],0x62
  412fae:	xlat   BYTE PTR ds:[ebx]
  412faf:	les    ebp,FWORD PTR fs:[ebp+0x3348f770]
  412fb6:	add    al,0x74
  412fb8:	mov    ds:0xe89edf,eax
  412fbd:	add    BYTE PTR [eax],dh
  412fbf:	inc    ebx
  412fc0:	pop    ebp
  412fc1:	add    BYTE PTR [ebx+0x28ffebef],bh
  412fc7:	inc    ebx
  412fc8:	sahf   
  412fc9:	call   FWORD PTR [edx-0x20fc9496]
  412fcf:	mov    ds:0x8daff5d,al
  412fd4:	xchg   ebp,eax
  412fd5:	push   ebp
  412fd6:	or     BYTE PTR [esi+ebx*4-0x29],dl
  412fda:	dec    eax
  412fdb:	popa   
  412fdc:	ds pushf 
  412fde:	clc    
  412fdf:	push   ebx
  412fe0:	mov    ss,WORD PTR [edi+0x5d865bdf]
  412fe6:	call   0x8ead20c8
  412feb:	xchg   ecx,eax
  412fec:	jbe    0x41304b
  412fee:	fcomp  DWORD PTR [ebp+0x53d05585]
  412ff4:	data16 xlat BYTE PTR ds:[ebx]
  412ff6:	inc    eax
  412ff7:	popa   
  412ff8:	and    bl,BYTE PTR [eax+eax*8-0x5868a9ad]
  412fff:	pop    ebx
  413000:	dec    esi
  413001:	pop    ebp
  413002:	mov    al,0xdd
  413004:	lock imul ebx,DWORD PTR [edx-0x6f],0x3e
  413009:	pop    ebp
  41300a:	mov    al,ds:0x9855159d
  41300f:	push   ebx
  413010:	xlat   BYTE PTR cs:[ebx]
  413012:	dec    eax
  413013:	popa   
  413014:	push   es
  413015:	pushf  
  413016:	mov    BYTE PTR [ebx+0x1e],dl
  413019:	xchg   edi,eax
  41301a:	imul   ebx,DWORD PTR [ebx+0x16],0x5d
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	and    DWORD PTR [edx+0x5d],edx
  413022:	add    BYTE PTR [eax],al
  413024:	jo     0x413079
  413026:	cmp    al,0x70
  413028:	jo     0x41307d
  41302a:	(bad)  
  41302b:	imul   eax,DWORD PTR [ecx-0x70],0xfffffff6
  41302f:	pop    esp
  413030:	pop    eax
  413031:	popf   
  413032:	add    DWORD PTR [ebp+0x50],edx
  413035:	push   ebx
  413036:	shl    eax,1
  413038:	lea    edx,[ebx-0x22]
  41303b:	pop    esp
  41303c:	cli    
  41303d:	imul   ebx,esi,0xe162385c
  413043:	cwde   
  413044:	xor    BYTE PTR [ebx-0x3a],dl
  413047:	xchg   esi,eax
  413048:	or     ebx,DWORD PTR [ebx-0x42]
  41304b:	pop    esp
  41304c:	das    
  41304d:	push   ebp
  41304e:	add    BYTE PTR [ebx+0x7b],dh
  413051:	push   edx
  413052:	push   DWORD PTR [esp+esi*2+0x5a]
  413056:	jmp    DWORD PTR [esi-0x6ef82395]
  41305c:	pop    ebx
  41305d:	push   ebx
  41305e:	call   DWORD PTR [esi-0x690f6365]
  413064:	xchg   ebx,eax
  413065:	push   edx
  413066:	call   0xff93fef8
  41306b:	jle    0x413076
  41306d:	pop    ebx
  41306e:	jmp    0xff93a99a
  413073:	outs   dx,BYTE PTR ds:[esi]
  413074:	stc    
  413075:	dec    esi
  413076:	call   0x4ae892
  41307b:	xor    BYTE PTR [esi],al
  41307d:	add    DWORD PTR [eax],eax
  41307f:	mov    esp,0x258365cf
  413084:	adc    bh,bl
  413086:	call   edx
  413088:	add    BYTE PTR [eax],al
  41308a:	cmp    BYTE PTR [edx+0x75],dl
  41308d:	icebp  
  41308e:	sub    al,0x5b
  413090:	mov    bh,0x36
  413092:	sti    
  413093:	jg     0x4130da
  413095:	sub    eax,0xa835ba9c
  41309a:	inc    esp
  41309b:	push   edx
  41309c:	jne    0x41308f
  41309e:	in     al,dx
  41309f:	pop    edx
  4130a0:	std    
  4130a1:	push   ss
  4130a2:	sbb    edx,DWORD PTR [edx+0x75]
  4130a5:	or     eax,0x1107dc13
  4130aa:	and    eax,0xefeff91
  4130af:	inc    edi
  4130b0:	add    al,0xe9
  4130b2:	xchg   ecx,eax
  4130b3:	jg     0x4130a1
  4130b5:	push   0xe6f73908
  4130ba:	in     al,dx
  4130bb:	add    DWORD PTR [ebp-0x23],0xfffffffb
  4130bf:	push   edx
  4130c0:	jne    0x4130a7
  4130c2:	popf   
  4130c3:	sbb    al,0xf
  4130c5:	add    BYTE PTR [edx],cl
  4130c7:	push   edx
  4130c8:	out    0x0,eax
  4130ca:	cli    
  4130cb:	add    BYTE PTR [eax],0x0
  4130ce:	adc    eax,0x14850ec6
  4130d3:	or     al,0x0
  4130d5:	add    cl,ch
  4130d7:	inc    edi
  4130d8:	test   DWORD PTR [eax],0xc700061e
  4130de:	sub    edi,DWORD PTR [ecx+0x5ee07fe]
  4130e4:	push   0x0
  4130e6:	inc    esp
  4130e7:	or     eax,0xd54006a
  4130ec:	lea    eax,[ebp+0x0]
  4130ef:	add    BYTE PTR [edx-0x63],bl
  4130f2:	mov    WORD PTR [ebp-0x149a6],es
  4130f8:	cs scas al,BYTE PTR es:[edi]
  4130fa:	je     0x4130f4
  4130fc:	popa   
  4130fd:	cmp    bl,bh
  4130ff:	call   0x41b1dc
  413104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413105:	lds    esi,FWORD PTR [ebx+0x5]
  413108:	pop    es
  413109:	mov    al,0x0
  41310b:	add    BYTE PTR [esi-0x10d780a3],bl
  413111:	add    eax,0xdda275ff
  413116:	fdivr  DWORD PTR [ebp-0x2f75519f]
  41311c:	adc    ecx,DWORD PTR [eax-0x519e080c]
  413122:	dec    edi
  413123:	push   edx
  413124:	inc    esi
  413125:	dec    edi
  413126:	mov    ebp,0x858441ff
  41312b:	lock imul ebp,DWORD PTR [esi+0x5d6e6afe],0x5af36b3
  413136:	push   DWORD PTR [ebp-0x149b2]
  41313c:	popa   
  41313d:	clc    
  41313e:	push   cs
  41313f:	sub    DWORD PTR [edi+0x5],ebp
  413142:	call   0x5ab6786c
  413147:	(bad)  
  413148:	mov    esi,0x28f75ee5
  41314d:	dec    eax
  41314e:	in     eax,dx
  41314f:	jmp    FWORD PTR [eax+0x411185]
  413155:	add    BYTE PTR [edi-0x69],al
  413158:	nop
  413159:	lock sbb BYTE PTR [eax+0x5752ff5a],ah
  413160:	sub    al,0x41
  413162:	inc    edi
  413163:	jp     0x413167
  413165:	mov    ebp,0x858c77f8
  41316a:	jecxz  0x4131e3
  41316c:	pop    edx
  41316d:	call   FWORD PTR [ebp+0x62]
  413170:	jmp    0x41311b
  413172:	sbb    DWORD PTR [ecx],esp
  413174:	add    al,0xff
  413176:	xchg   edx,eax
  413177:	rcl    BYTE PTR [ecx-0x1],cl
  41317a:	rcr    bh,1
  41317c:	(bad)  
  41317d:	nop    DWORD PTR [ecx+0x6eaee803]
  413184:	pop    edx
  413185:	dec    esi
  413187:	(bad)  [edx-0x9]
  41318a:	mov    al,0xbf
  41318c:	in     al,dx
  41318d:	jmp    DWORD PTR [eax]
  41318f:	iret   
  413190:	adc    BYTE PTR [ecx+0x47],al
  413193:	seto   al
  413196:	nop
  413197:	pop    ss
  413198:	pop    edx
  413199:	call   FWORD PTR [edx+0x2f]
  41319c:	sub    al,0x41
  41319e:	inc    edi
  41319f:	cli    
  4131a0:	dec    ebp
  4131a1:	mov    esp,0x858bef80
  4131a6:	addr16 out dx,eax
  4131a8:	pop    ecx
  4131a9:	inc    edx
  4131ab:	in     eax,0x2e
  4131ad:	imul   DWORD PTR [eax+0x7]
  4131b0:	mov    bl,0x67
  4131b2:	mov    al,0x98
  4131b4:	(bad)  
  4131b5:	call   FWORD PTR [ecx+0xd]
  4131b8:	push   ebx
  4131b9:	test   DWORD PTR [eax],0x595f5000
  4131bf:	xor    eax,0xc3100938
  4131c4:	inc    eax
  4131c5:	push   0x50389891
  4131ca:	loop   0x41320f
  4131cc:	mov    ebx,0x139769f2
  4131d1:	pop    eax
  4131d2:	(bad)  
  4131d3:	pop    ecx
  4131d4:	dec    ebx
  4131d5:	(bad)  
  4131d6:	fcomp  DWORD PTR [eax+0x57]
  4131d9:	sub    BYTE PTR [eax+edi*1+0x18],0x50
  4131de:	scas   al,BYTE PTR es:[edi]
  4131df:	mov    ah,0x20
  4131e1:	(bad)  
  4131e2:	pop    edi
  4131e3:	pop    ecx
  4131e4:	add    BYTE PTR [ebp+esi*8+0xc],ah
  4131e8:	pop    es
  4131e9:	aad    0xee
  4131eb:	mov    bl,0xe8
  4131ed:	loope  0x41323e
  4131ef:	pop    ecx
  4131f0:	call   0xd8799e3c
  4131f5:	dec    edi
  4131f6:	jle    0x4131e7
  4131f8:	fmul   DWORD PTR [edi-0x17]
  4131fb:	xchg   dl,cl
  4131fd:	cmp    BYTE PTR [esi+0x59],dh
  413200:	enter  0xd0b8,0x97
  413204:	jns    0x4131d0
  413206:	call   0x5e9a2463
  41320b:	pop    ecx
  41320c:	mov    al,0x4f
  41320e:	adc    al,0x9
  413210:	pop    esi
  413211:	retf   0x6be8
  413214:	std    
  413215:	mov    WORD PTR [esi],?
  413217:	pop    ecx
  413218:	into   
  413219:	test   DWORD PTR [ecx],edx
  41321b:	push   ecx
  41321c:	nop
  41321d:	dec    edi
  41321e:	push   0xffffff97
  413220:	add    BYTE PTR [eax],al
  413222:	mov    ds:0x47592657,eax
  413227:	add    BYTE PTR [ebp+0x7d],ah
  41322a:	inc    edi
  41322b:	or     ecx,ebp
  41322d:	test   BYTE PTR [edx+0x6859165c],dh
  413233:	or     dh,dh
  413235:	jg     0x413208
  413237:	or     cl,ch
  413239:	add    eax,esp
  41323b:	lea    eax,[eax]
  41323d:	add    esi,esi
  41323f:	dec    edi
  413240:	(bad)  
  413241:	jmp    0xe9c2b785
  413246:	inc    esp
  413247:	or     DWORD PTR [eax-0x7],ebp
  41324a:	inc    esp
  41324b:	pop    esi
  41324c:	mov    esi,0xe80701d6
  413251:	js     0x41320c
  413253:	dec    esi
  413254:	inc    esi
  413256:	rcr    DWORD PTR [ebp-0x9],1
  413259:	mov    esi,0xe1754e7f
  41325e:	pushf  
  41325f:	fs mov ch,0xae
  413262:	outs   dx,DWORD PTR ds:[esi]
  413263:	dec    esi
  413264:	mov    ch,0x91
  413266:	xchg   edi,eax
  413267:	dec    esi
  413268:	call   FWORD PTR [esi-0x4117f8f7]
  41326e:	ror    DWORD PTR [esi-0x1],0x8e
  413272:	mov    ecx,0x7f86f765
  413277:	dec    esi
  413278:	jne    0x41326b
  41327a:	ins    BYTE PTR es:[edi],dx
  41327b:	inc    eax
  41327c:	mov    ch,0x76
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	dec    esi
  413280:	mov    ch,0x8d
  413282:	ja     0x4132d2
  413284:	jmp    DWORD PTR [esi+0x0]
  413287:	add    BYTE PTR [ecx-0x363f17fa],dl
  41328d:	dec    esi
  41328e:	call   DWORD PTR [esi-0x3f]
  413291:	imul   esi,edi,0x754e0f4e
  413297:	icebp  
  413298:	sub    al,0x9c
  41329a:	mov    ch,0x3e
  41329c:	dec    DWORD PTR [ecx+0x4df711bd]
  4132a2:	(bad)  
  4132a3:	jmp    0x64c42620
  4132a8:	xor    al,0x56
  4132aa:	call   FWORD PTR [esi]
  4132ac:	js     0x413283
  4132ae:	adc    DWORD PTR [edx-0xf],esp
  4132b1:	xor    bh,dh
  4132b3:	push   cs
  4132b4:	cmovle esi,DWORD PTR [eax]
  4132b7:	add    BYTE PTR [ecx+0x3f],cl
  4132ba:	pop    es
  4132bb:	call   0x40b237
  4132c0:	inc    ebp
  4132c1:	cld    
  4132c2:	imul   eax,DWORD PTR [eax],0xe8073c59
  4132c8:	dec    ebx
  4132c9:	js     0x4132ca
  4132cb:	call   FWORD PTR [ecx]
  4132cd:	js     0x4132b3
  4132cf:	neg    DWORD PTR [ecx]
  4132d1:	mov    dh,0xe7
  4132d3:	mov    esi,edx
  4132d5:	mov    ch,0xfe
  4132d7:	jmp    DWORD PTR [ebx-0x2600091f]
  4132dd:	fdivr  QWORD PTR [ebp-0x48]
  4132e0:	fnstenv [ebp-0x41f94a02]
  4132e6:	(bad)  
  4132e7:	call   esi
  4132e9:	cmp    DWORD PTR [edi-0x26ffff01],esi
  4132ef:	mov    ch,0xb4
  4132f1:	loopne 0x4132c4
  4132f3:	mov    ch,0xfe
  4132f5:	call   0x40a040
  4132fa:	leave  
  4132fb:	ja     0x4132d5
  4132fd:	neg    DWORD PTR [ecx-0x4a]
  413300:	out    0x5d,eax
  413302:	push   ss
  413303:	mov    dh,0xfe
  413305:	call   DWORD PTR [ebx]
  413307:	mov    ch,0xf6
  413309:	jmp    FWORD PTR [ecx]
  41330b:	fst    QWORD PTR [ecx-0x48]
  41330e:	sbb    DWORD PTR [esi-0x23e9ba02],esi
  413314:	aam    0xfd
  413316:	stc    
  413317:	mov    ch,0xfe
  413319:	jne    0x413325
  41331b:	fstp   QWORD PTR [ebx-0x36f65176]
  413321:	ret    0x9a6
  413324:	push   ebp
  413325:	mov    ecx,DWORD PTR [edx-0x76]
  413328:	(bad)  
  413329:	cld    
  41332a:	aam    0x9
  41332c:	push   0xd
  41332e:	pop    ecx
  41332f:	cmp    BYTE PTR [edi],al
  413331:	call   0xffd1af7d
  413336:	push   0xeffbc0e8
  41333b:	fisttp QWORD PTR ds:0xd04f4741
  413341:	pop    es
  413342:	pop    edi
  413343:	aam    0x57
  413345:	dec    DWORD PTR [eax+0x5e]
  413348:	sar    bl,1
  41334a:	inc    eax
  41334b:	scas   al,BYTE PTR es:[edi]
  41334c:	or     ebp,eax
  41334e:	enter  0x5675,0xff
  413352:	add    BYTE PTR [eax],al
  413354:	(bad)  
  413355:	mov    al,ds:0xe793ffff
  41335a:	or     WORD PTR [ebx],0x4e97
  41335f:	call   FWORD PTR [eax]
  413361:	fidivr WORD PTR [edi-0x2f6c8805]
  413367:	or     ecx,DWORD PTR [eax]
  413369:	push   esi
  41336a:	push   es
  41336b:	sub    DWORD PTR [esi-0x32ad949e],eax
  413371:	bound  eax,QWORD PTR [ebx]
  413373:	or     eax,DWORD PTR [edi]
  413375:	sbb    BYTE PTR fs:[edi+0x45],0x62
  41337a:	add    eax,edi
  41337c:	mov    cl,BYTE PTR [edx+0x62470003]
  413382:	ds inc ebp
  413384:	fcmovnbe st,st(3)
  413386:	std    
  413387:	dec    eax
  413389:	or     BYTE PTR [edx+ebp*2],al
  41338c:	inc    edi
  41338d:	cmp    BYTE PTR [ebx],al
  41338f:	push   0x47
  413391:	fnstsw WORD PTR [edi+0x7fe517f3]
  413397:	hlt    
  413398:	mov    al,0xbb
  41339a:	push   ebp
  41339b:	push   eax
  41339c:	mov    al,ds:0x12ff5b8d
  4133a1:	push   cs
  4133a2:	imul   esp,DWORD PTR [edi*4-0x78f4fc9e],0xffffff96
  4133aa:	add    cl,ch
  4133ac:	and    eax,0x4703eb09
  4133b1:	loope  0x41341b
  4133b3:	sub    eax,DWORD PTR [esi]
  4133b5:	or     DWORD PTR [esi],edx
  4133b7:	rol    BYTE PTR [eax],1
  4133b9:	add    BYTE PTR [ecx+eiz*2],bh
  4133bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133bd:	call   0x86ca:0x33724c60
  4133c4:	cmc    
  4133c5:	dec    ebp
  4133c6:	push   eax
  4133c7:	dec    esp
  4133c8:	cdq    
  4133c9:	mov    cl,0x60
  4133cb:	jge    0x4133ff
  4133cd:	push   esi
  4133ce:	inc    eax
  4133cf:	sub    BYTE PTR [esp+edx*2+0x30],0x4c
  4133d4:	fiadd  WORD PTR [edi+0x55de3cca]
  4133da:	sub    BYTE PTR [ecx-0x35a7e9c0],bh
  4133e0:	call   0xb69a0639
  4133e5:	push   ebp
  4133e6:	adc    BYTE PTR [esp+edi*8+0x4],cl
  4133ea:	pop    esi
  4133eb:	retf   0x6be8
  4133ee:	ror    DWORD PTR [esi-0x7a31aa5a],1
  4133f4:	test   DWORD PTR [ebp-0x10],ecx
  4133f7:	dec    ebx
  4133f8:	add    eax,DWORD PTR [edi+ebx*2]
  4133fb:	mov    ch,0xd5
  4133fd:	ret    0x4ae0
  413400:	cmp    al,0x54
  413402:	ror    BYTE PTR [ebx+0x7e],1
  413405:	push   ebp
  413406:	sbb    bh,ah
  413408:	mov    edi,0xf963c8c2
  41340d:	cdq    
  41340e:	ror    BYTE PTR [ebx+0x70],0x7f
  413412:	stos   DWORD PTR es:[edi],eax
  413413:	push   ebx
  413414:	pop    esi
  413415:	push   ebp
  413416:	sbb    eax,0x71bac109
  41341b:	retf   0x54e8
  41341e:	add    BYTE PTR [eax],al
  413420:	ficomp DWORD PTR [eax+0x3e]
  413423:	push   ebp
  413424:	cwde   
  413425:	dec    ebx
  413426:	hlt    
  413427:	add    al,0x5e
  413429:	retf   0xe8ff
  41342c:	sbb    al,0xb7
  41342e:	mov    ecx,0x85821a2e
  413433:	adc    DWORD PTR [edx],ecx
  413435:	dec    esp
  413436:	call   DWORD PTR [ebx-0x219c1ebc]
  41343c:	test   DWORD PTR [ebx-0x2],ecx
  41343f:	push   esp
  413440:	sti    
  413441:	push   ebx
  413442:	inc    DWORD PTR [esi]
  413444:	repnz adc eax,0x4b85d00f
  41344a:	out    0xbd,eax
  41344c:	scas   al,BYTE PTR es:[edi]
  41344d:	dec    ebx
  41344e:	jmp    DWORD PTR [eax-0x40]
  413451:	imul   esi,edi,0x857c93e6
  413457:	rol    DWORD PTR [ebx+0x1b39ff4a],0xac
  41345e:	sub    BYTE PTR ss:[ebx+0x4a],cl
  413462:	mov    ch,0xb9
  413464:	mov    ecx,DWORD PTR [edx-0x1]
  413467:	mov    esi,0x2828fa41
  41346c:	inc    ebx
  41346d:	popa   
  41346e:	adc    DWORD PTR [ebx-0x65],esi
  413471:	dec    edx
  413472:	or     ebp,DWORD PTR [ecx+0x5c82f808]
  413478:	sub    al,0x52
  41347a:	call   DWORD PTR [esi-0x71f62a18]
  413480:	xor    al,0x7a
  413482:	test   DWORD PTR [ebp+0x4a8b0000],esp
  413488:	call   DWORD PTR [edx-0x6a7abdc2]
  41348e:	jnp    0x4134da
  413490:	call   esp
  413492:	inc    esp
  413493:	or     DWORD PTR [eax],eax
  413495:	mov    ecx,0x5eb6372c
  41349a:	sbb    edi,DWORD PTR [ebp+eax*4+0x39]
  41349e:	sti    
  41349f:	dec    ecx
  4134a0:	(bad)  
  4134a1:	mov    ecx,0x36c3ac
  4134a6:	out    dx,eax
  4134a7:	push   es
  4134a8:	push   DWORD PTR [ebp-0x142b2]
  4134ae:	push   ecx
  4134af:	sti    
  4134b0:	push   cs
  4134b1:	sub    DWORD PTR [edi-0x183217fa],ebp
  4134b7:	mov    ah,0xfe
  4134b9:	or     ebx,DWORD PTR [esi]
  4134bb:	cmp    dl,BYTE PTR [edx]
  4134bd:	adc    DWORD PTR [ebx],0x16
  4134c0:	idiv   edi
  4134c2:	push   ecx
  4134c3:	dec    edx
  4134c4:	je     0x4134d0
  4134c6:	inc    ecx
  4134c7:	test   BYTE PTR [esi-0x142c57b],0xff
  4134ce:	inc    ebp
  4134cf:	add    bh,al
  4134d1:	test   DWORD PTR [edx-0x43],ebx
  4134d4:	(bad)  
  4134d5:	jmp    FWORD PTR [esi]
  4134d7:	push   es
  4134d8:	add    BYTE PTR [eax],al
  4134da:	outs   dx,BYTE PTR ds:[esi]
  4134db:	lods   eax,DWORD PTR ds:[esi]
  4134dc:	lea    esi,[esi-0x427d49ef]
  4134e2:	or     ch,BYTE PTR [esi+0x322efffe]
  4134e8:	add    DWORD PTR ds:[eax],0x0
  4134ec:	xchg   ebx,eax
  4134ed:	adc    edi,esi
  4134ef:	call   ecx
  4134f1:	add    dh,BYTE PTR [ebp+0x36]
  4134f4:	test   BYTE PTR ds:0xadb2858d,al
  4134fa:	(bad)  
  4134fb:	jmp    FWORD PTR [esi]
  4134fd:	mov    dh,0xb4
  4134ff:	in     al,0xc9
  413501:	mov    ch,0xfe
  413503:	call   0x404eb4
  413508:	aad    0xc5
  41350a:	jae    0x413515
  41350c:	pop    ebp
  41350d:	js     0x4134db
  41350f:	not    DWORD PTR [ecx-0x4a]
  413512:	push   DWORD PTR [ebx+ebx*4-0x4a]
  413516:	mov    ah,0xe4
  413518:	sbb    DWORD PTR [esi+0x6feee8fe],esi
  41351e:	(bad)  
  41351f:	inc    DWORD PTR [edi+0x1b]
  413522:	mov    esp,esp
  413524:	cwde   
  413525:	mov    edx,0x60470052
  41352a:	add    eax,DWORD PTR [ebx-0xa53c2e]
  413530:	mov    BYTE PTR [edi-0x29],bl
  413533:	push   0xffffffc4
  413535:	fcomp  QWORD PTR [edi-0x9]
  413538:	js     0x41355c
  41353a:	add    al,0x74
  41353c:	in     eax,0xde
  41353e:	nop
  41353f:	call   0x9427b4
  413544:	fistp  DWORD PTR [eax-0xcb8fe25]
  41354a:	xchg   ecx,eax
  41354b:	(bad)  
  41354c:	ficom  DWORD PTR [edi+0x5b]
  41354f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413550:	add    BYTE PTR [eax],al
  413552:	xchg   ebp,eax
  413553:	push   edx
  413554:	push   edx
  413555:	(bad)  
  413556:	cli    
  413557:	inc    esi
  413558:	pop    edx
  413559:	(bad)  
  41355a:	cmp    BYTE PTR [eax],dh
  41355c:	fadd   DWORD PTR [edi]
  41355e:	pop    ds
  41355f:	sub    al,0x95
  413561:	jmp    FWORD PTR [eax]
  413563:	pusha  
  413564:	cwde   
  413565:	call   0xff938d82
  41356a:	xchg   edx,eax
  41356b:	cmp    bl,BYTE PTR [ebx-0x13]
  41356e:	aad    0x87
  413570:	push   edx
  413571:	call   edx
  413573:	outs   dx,BYTE PTR ds:[esi]
  413574:	pop    edx
  413575:	inc    DWORD PTR [eax]
  413577:	js     0x413511
  413579:	in     al,0xf0
  41357b:	outs   dx,DWORD PTR ds:[esi]
  41357c:	push   edx
  41357d:	(bad)  
  41357e:	jp     0x4135ba
  413580:	pop    ebx
  413581:	lods   eax,DWORD PTR ds:[esi]
  413582:	mov    ch,0x9f
  413584:	push   edx
  413585:	call   FWORD PTR [edx-0x2700a58a]
  41358b:	(bad)  
  41358c:	fadd   DWORD PTR [edi]
  41358e:	fistp  WORD PTR [ecx]
  413590:	xchg   esi,eax
  413591:	dec    eax
  413593:	mov    edi,0xb7b8e097
  413598:	push   ecx
  413599:	push   DWORD PTR [edx]
  41359b:	or     ecx,esi
  41359d:	pop    ebx
  41359e:	bnd jnp 0x4135ff
  4135a1:	push   edx
  4135a2:	test   al,0x7e
  4135a4:	dec    ebp
  4135a5:	pop    edx
  4135a6:	mov    al,ds:0xd24a4148
  4135ab:	dec    eax
  4135ac:	inc    esi
  4135ad:	push   edx
  4135ae:	fidiv  DWORD PTR ds:0x31885236
  4135b4:	jne    0x41354e
  4135b6:	add    BYTE PTR [eax],al
  4135b8:	or     BYTE PTR [eax+0x2e],0x98
  4135bc:	outs   dx,DWORD PTR ds:[esi]
  4135bd:	inc    eax
  4135be:	es push edx
  4135c0:	pop    edi
  4135c1:	jp     0x413617
  4135c3:	push   edx
  4135c4:	push   0x58635c48
  4135c9:	dec    eax
  4135ca:	push   cs
  4135cb:	pop    ebx
  4135cc:	mov    eax,ds:0x5052067e
  4135d1:	jle    0x4135cc
  4135d3:	pop    ecx
  4135d4:	dec    eax
  4135d5:	dec    eax
  4135d6:	add    DWORD PTR [esi-0x6],ebp
  4135d9:	inc    edi
  4135da:	out    dx,al
  4135db:	push   ecx
  4135dc:	add    BYTE PTR [ecx-0x30],0x94
  4135e0:	xor    cl,BYTE PTR [eax-0x22]
  4135e3:	push   ecx
  4135e4:	mov    dl,0x45
  4135e6:	shl    DWORD PTR [edi-0x38],0x8
  4135ea:	jmp    0xe9523b29
  4135ef:	mov    dh,0xbd
  4135f1:	xor    al,0x6a
  4135f3:	dec    eax
  4135f4:	adc    esi,DWORD PTR [ebx+0x4852dde8]
  4135fa:	xor    al,0xfc
  4135fc:	loopne 0x413673
  4135fe:	pop    ebx
  4135ff:	push   ecx
  413600:	lock xchg ecx,eax
  413602:	and    al,0x50
  413604:	pop    edi
  413605:	or     ecx,ebp
  413607:	pusha  
  413608:	mov    eax,ds:0x861aa8b0
  41360d:	or     DWORD PTR [ecx],edx
  41360f:	aas    
  413610:	sbb    edx,ecx
  413612:	call   0x528867
  413617:	sbb    DWORD PTR [eax+0x6eff61],0xf7ce3800
  413621:	mov    ecx,0xa8371e8c
  413626:	inc    esp
  413627:	mov    cl,0xda
  413629:	pop    ds
  41362a:	test   BYTE PTR [edi-0x2],al
  41362d:	adc    al,0x46
  41362f:	repnz inc eax
  413631:	jmp    0x3ef91922
  413636:	not    BYTE PTR [ebx]
  413638:	sar    BYTE PTR [ebp+0x3545922e],0x9b
  41363f:	or     BYTE PTR [eax],al
  413641:	push   ss
  413642:	aad    0x47
  413644:	jne    0x413637
  413646:	or     al,0x80
  413648:	mov    cl,0x16
  41364a:	test   BYTE PTR [edi+0x75],0x11
  41364e:	idiv   BYTE PTR [ebp+0xf7806f3]
  413654:	call   0xff88ea77
  413659:	neg    BYTE PTR [ecx]
  41365b:	cmp    ebp,eax
  41365d:	rcl    ecx,1
  41365f:	inc    esi
  413660:	call   DWORD PTR [ecx+0x36]
  413663:	add    BYTE PTR [ecx-0x17],al
  413666:	xchg   edi,eax
  413667:	mov    esp,0x4576c107
  41366c:	dec    esi
  41366e:	ja     0x41362c
  413670:	sti    
  413671:	(bad)  
  413672:	stc    
  413673:	push   cs
  413674:	call   0xff87e7b8
  413679:	mov    al,ds:0x14000d8a
  41367e:	jp     0x4136b5
  413680:	sub    DWORD PTR [ebp-0x4c800000],0xffffffff
  413687:	adc    al,BYTE PTR [esi+0x46]
  41368a:	jne    0x41366d
  41368c:	jl     0x413679
  41368e:	mov    cl,0x8e
  413690:	ja     0x413622
  413692:	inc    ebp
  413693:	add    dl,cl
  413695:	(bad)  
  413696:	(bad)  
  413697:	(bad)  
  413698:	mov    ecx,0x1706898
  41369d:	dec    esp
  41369e:	jmp    DWORD PTR [edi-0x56]
  4136a1:	and    DWORD PTR [ecx+0x0],eax
  4136a4:	sub    DWORD PTR [edi+0x7],ebx
  4136a7:	call   0x4029c0
  4136ac:	stc    
  4136ad:	pop    esi
  4136ae:	sti    
  4136af:	push   DWORD PTR [ebx+0x42]
  4136b2:	out    0x43,eax
  4136b4:	or     al,0xd9
  4136b6:	dec    cl
  4136b8:	pop    esp
  4136b9:	push   cs
  4136ba:	add    BYTE PTR [ebp-0x1b],dl
  4136bd:	in     eax,0x82
  4136bf:	les    ebp,FWORD PTR [edx]
  4136c1:	jmp    FWORD PTR fs:[ecx+0x6e]
  4136c5:	fnstenv [eax+ecx*1+0x56]
  4136c9:	mov    cl,0xb0
  4136cb:	(bad)  
  4136cc:	cmp    ebx,eax
  4136ce:	inc    esp
  4136cf:	cld    
  4136d0:	(bad)  
  4136d1:	or     al,BYTE PTR [eax]
  4136d3:	out    dx,eax
  4136d4:	or     BYTE PTR [edx-0x7b],ah
  4136d7:	aaa    
  4136d8:	lahf   
  4136d9:	or     ch,BYTE PTR [eax-0x75]
  4136dc:	add    DWORD PTR [ebx-0x1],ecx
  4136df:	(bad)  
  4136e0:	mov    bl,0x42
  4136e2:	out    0xaf,eax
  4136e4:	pop    es
  4136e5:	(bad)  
  4136e6:	(bad)  
  4136e7:	push   0x0
  4136e9:	add    BYTE PTR [esi],bl
  4136eb:	(bad)  
  4136ec:	(bad)  
  4136ed:	aaa    
  4136ee:	outs   dx,DWORD PTR ds:[esi]
  4136ef:	or     eax,0x4c31ae68
  4136f4:	(bad)  
  4136f5:	(bad)  
  4136f6:	adc    eax,DWORD PTR [edi+0x28]
  4136f9:	inc    ecx
  4136fa:	push   ds
  4136fb:	loop   0x413692
  4136fd:	mov    bh,0xb9
  4136ff:	aad    0xa
  413701:	shl    BYTE PTR [edx],0xf1
  413704:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413706:	adc    DWORD PTR [ebp-0x1],ecx
  413709:	dec    edi
  41370a:	(bad)  
  41370b:	sub    dh,BYTE PTR [edi-0x4b60b801]
  413711:	addr16 inc edi
  413713:	xor    BYTE PTR [esi-0x42],bl
  413716:	pop    edi
  413717:	mov    dh,0x16
  413719:	inc    ecx
  41371a:	inc    edi
  41371b:	and    BYTE PTR [edi+0x75],cl
  41371e:	dec    edi
  41371f:	mov    BYTE PTR [edx],bl
  413721:	fnstcw WORD PTR [eax-0x4a9a44a]
  413727:	scas   al,BYTE PTR es:[edi]
  413728:	dec    esi
  413729:	push   DWORD PTR [edx]
  41372b:	in     al,0x4e
  41372d:	jne    0x41377e
  41372f:	enter  0xb13c,0x98
  413733:	(bad)  
  413734:	cmp    al,0xc2
  413736:	dec    ebx
  413737:	xor    BYTE PTR [eax+0x47b29b8a],bh
  41373d:	cld    
  41373e:	sbb    DWORD PTR [edi+0x60eeffd9],esp
  413744:	dec    esi
  413745:	jne    0x413786
  413747:	sbb    bl,bl
  413749:	mov    al,0x68
  41374b:	es jge 0x413793
  41374e:	add    BYTE PTR [eax],al
  413750:	arpl   WORD PTR [edx+0x712f2818],bp
  413756:	add    ecx,DWORD PTR [ebx+0x411b5c12]
  41375c:	inc    edi
  41375d:	mov    al,0xe
  41375f:	add    BYTE PTR [ebx+0x70d3db67],bh
  413765:	jno    0x41376a
  413767:	push   edi
  413768:	pop    ds
  413769:	mov    ds:0x37470085,eax
  41376e:	inc    ebx
  41376f:	je     0x4137db
  413771:	add    al,0x5c
  413773:	rcr    edx,cl
  413775:	push   ebx
  413776:	dec    esi
  413777:	push   0xffc443f2
  41377c:	js     0x4137d8
  41377e:	push   ecx
  41377f:	mov    bh,0x0
  413781:	jl     0x413736
  413783:	addr16 inc edi
  413785:	xor    bl,BYTE PTR [esi-0x42]
  413788:	xchg   edi,eax
  413789:	or     DWORD PTR [esi-0x3ccebf28],esp
  41378f:	cmp    al,ah
  413791:	inc    esp
  413792:	sbb    DWORD PTR [edx-0x6c],0x465a8e44
  413799:	retf   
  41379a:	push   0x82be470d
  41379f:	lds    edi,FWORD PTR [eax+edi*8+0x44b88ca8]
  4137a6:	outs   dx,BYTE PTR ds:[esi]
  4137a7:	dec    esi
  4137a8:	mov    ch,0x73
  4137aa:	and    DWORD PTR [edi],eax
  4137ac:	xor    bh,BYTE PTR [esi+0x5e]
  4137af:	fcomp  DWORD PTR [esp+eax*2+0xfbdc]
  4137b6:	mov    al,ds:0x904e97cc
  4137bb:	in     al,0xa6
  4137bd:	cmp    al,0x85
  4137bf:	or     eax,0x35cdb8e9
  4137c4:	push   0x47
  4137c6:	jnp    0x413777
  4137c8:	call   0x9c858ea6
  4137cd:	sti    
  4137ce:	pusha  
  4137cf:	xor    bl,BYTE PTR [ecx+0x4e]
  4137d2:	pusha  
  4137d3:	xchg   edx,eax
  4137d4:	lods   al,BYTE PTR ds:[esi]
  4137d5:	dec    edi
  4137d6:	out    dx,eax
  4137d7:	or     cl,ch
  4137d9:	pop    esi
  4137da:	xchg   ecx,eax
  4137db:	mov    cl,0xf7
  4137dd:	adc    eax,0x5b910906
  4137e2:	js     0x4137ae
  4137e4:	call   0x152ea37
  4137e9:	xchg   esp,eax
  4137ea:	cmove  esp,esi
  4137ed:	dec    ebp
  4137ee:	mov    dl,0x45
  4137f0:	(bad)  
  4137f2:	dec    eax
  4137f3:	xor    ebx,esp
  4137f5:	xchg   edx,eax
  4137f6:	sbb    BYTE PTR [eax+eiz*4+0x42],al
  4137fa:	dec    ebx
  4137fb:	or     DWORD PTR [ecx+edi*2],ebx
  4137fe:	sbb    ecx,DWORD PTR [edx+0x43f830a5]
  413804:	add    BYTE PTR [esi+0x19fbce78],dh
  41380a:	cmp    BYTE PTR [esi+0x1450a60b],0x29
  413811:	sub    BYTE PTR [ebx+0x31],cl
  413814:	int    0x6c
  413816:	inc    ebx
  413817:	or     DWORD PTR [ebx],ecx
  413819:	test   eax,0x8cd20000
  41381e:	mov    eax,ds:0xc70944e8
  413823:	and    al,0x13
  413825:	or     DWORD PTR [eax],eax
  413827:	jmp    0x75868470
  41382c:	add    cl,BYTE PTR [eax+eax*1]
  41382f:	jmp    0xe9aa7bc2
  413834:	jle    0x413879
  413836:	imul   ebp,ecx,0xb9f3ce19
  41383c:	adc    DWORD PTR [esi+0x43fa3ef4],ecx
  413842:	push   eax
  413843:	ds cwde 
  413845:	cmp    edi,edi
  413847:	mov    esp,0x649f3108
  41384c:	dec    ebx
  41384d:	or     DWORD PTR [ebx],ecx
  41384f:	sub    DWORD PTR [edi+0x4585e90c],ecx
  413855:	or     DWORD PTR [eax],eax
  413857:	add    esp,0x3e940f0
  41385d:	mov    esi,0x7b05110b
  413862:	(bad)  
  413863:	(bad)  
  413864:	hlt    
  413865:	(bad)  
  413866:	shl    BYTE PTR [eax+eax*8+0x3d],1
  41386a:	imul   esi
  41386c:	sbb    ecx,0x51
  41386f:	rcl    esi,1
  413871:	jnp    0x413872
  413873:	ficomp WORD PTR [ebp-0x74210f74]
  413879:	inc    edx
  41387a:	call   0xff83f060
  41387f:	add    BYTE PTR [eax],al
  413881:	add    BYTE PTR [ebp+ecx*1+0x68],dh
  413885:	push   cs
  413886:	inc    esi
  413887:	inc    esi
  413888:	(bad)  
  413889:	(bad)  
  41388a:	jnp    0x413862
  41388c:	idiv   bh
  41388e:	mov    eax,ds:0x170f34d5
  413893:	dec    eax
  413894:	jmp    edi
  413896:	(bad)  
  413897:	pushf  
  413898:	(bad)  
  413899:	jmp    DWORD PTR [edi-0x75]
  41389c:	in     al,0xf7
  41389e:	rcl    ebp,0x69
  4138a1:	add    BYTE PTR [esi],dh
  4138a3:	shl    DWORD PTR [esi],cl
  4138a5:	inc    ecx
  4138a6:	scas   al,BYTE PTR es:[edi]
  4138a7:	aad    0xb4
  4138a9:	lock cmp ebp,edx
  4138ac:	(bad)  
  4138ad:	(bad)  
  4138ae:	sti    
  4138af:	inc    ebp
  4138b0:	sub    BYTE PTR [ecx-0x62],al
  4138b3:	fsubp  st(1),st
  4138b5:	mov    ch,0x1
  4138b7:	aad    0x88
  4138b9:	test   DWORD PTR [edx],eax
  4138bb:	(bad)  
  4138bd:	inc    DWORD PTR [esi+eax*1+0x46460568]
  4138c4:	(bad)  
  4138c5:	(bad)  
  4138c6:	sti    
  4138c7:	aad    0xf6
  4138c9:	push   DWORD PTR [ecx]
  4138cb:	aad    0x34
  4138cd:	cmova  eax,DWORD PTR [esi-0x1]
  4138d1:	out    0x32,eax
  4138d3:	fwait
  4138d4:	(bad)  
  4138d5:	call   edi
  4138d7:	mov    ch,al
  4138d9:	div    DWORD PTR [ecx]
  4138db:	aad    0x8c
  4138dd:	test   DWORD PTR [edx],esp
  4138df:	(bad)  
  4138e1:	jmp    FWORD PTR [esi+0x38165e]
  4138e7:	add    bh,ch
  4138e9:	add    eax,0xd63eb5ff
  4138ee:	(bad)  
  4138ef:	jmp    DWORD PTR [ecx]
  4138f1:	sbb    al,0xf
  4138f3:	sub    DWORD PTR [edi+0xd],ebx
  4138f6:	call   0xff0ef4a4
  4138fb:	or     eax,DWORD PTR [edi+0x70]
  4138fe:	rcr    BYTE PTR [eax],1
  413900:	les    edx,FWORD PTR [eax+ebp*1+0x4b08f7]
  413907:	jne    0x413960
  413909:	adc    DWORD PTR [edi+ecx*4],0xffffffc2
  41390d:	dec    edi
  41390e:	push   ebx
  41390f:	push   eax
  413911:	pop    ds
  413912:	pop    esp
  413913:	jbe    0x4138ca
  413915:	push   0x4b
  413917:	jmp    0x413954
  413919:	aaa    
  41391a:	inc    ebx
  41391b:	je     0x41395e
  41391d:	add    BYTE PTR [edx+ebp*2-0x6b],bl
  413921:	xchg   edx,eax
  413922:	dec    ebx
  413923:	mov    edx,0xc0ff538f
  413929:	pop    esp
  41392a:	add    eax,DWORD PTR [eax]
  41392c:	inc    edi
  41392d:	scas   eax,DWORD PTR es:[edi]
  41392e:	mov    ah,ah
  413930:	mov    eax,0x33004ab2
  413935:	add    DWORD PTR [esi+0x4adab3bd],0xffffffff
  41393c:	inc    edi
  41393d:	fs mov ecx,0x52c7d282
  413943:	dec    DWORD PTR [eax-0x10bb30d1]
  413949:	das    
  41394a:	add    ebp,edi
  41394c:	add    BYTE PTR [eax],al
  41394e:	mov    ecx,0x5f07d0fa
  413953:	lock cdq 
  413955:	jmp    FWORD PTR [eax-0x16]
  413958:	nop
  413959:	in     al,dx
  41395a:	pop    eax
  41395b:	and    cl,BYTE PTR [ebx-0x1]
  41395e:	shl    BYTE PTR [edi],cl
  413960:	pop    ebx
  413961:	adc    eax,0xff4b12a0
  413966:	xchg   edx,eax
  413967:	pop    ss
  413968:	push   ebx
  413969:	inc    DWORD PTR [eax+0x40]
  41396c:	rol    BYTE PTR [edi],1
  41396e:	das    
  41396f:	xor    BYTE PTR [edx-0x6fcfcf01],bl
  413975:	in     al,0x30
  413977:	or     ah,dh
  413979:	dec    edx
  41397a:	and    BYTE PTR [edi+0x701e5bf0],dh
  413980:	(bad)  
  413981:	dec    edx
  413982:	adc    BYTE PTR [edi-0x37],dh
  413985:	push   edx
  413986:	or     BYTE PTR [ecx-0x3a],al
  413989:	ror    BYTE PTR [eax+0x31],1
  41398c:	jo     0x413927
  41398e:	clc    
  41398f:	inc    eax
  413990:	mov    dh,0x90
  413992:	jmp    0x4139cc
  413994:	scas   al,BYTE PTR es:[edi]
  413995:	dec    edx
  413996:	fbstp  TBYTE PTR [esi]
  413998:	pop    eax
  413999:	dec    edx
  41399a:	loopne 0x4139dc
  41399c:	push   esp
  41399d:	push   edi
  41399e:	rol    BYTE PTR [eax-0x6a],1
  4139a1:	pop    ebx
  4139a2:	fnstsw WORD PTR [edx-0x72]
  4139a5:	dec    edx
  4139a6:	enter  0x9176,0x52
  4139aa:	rol    BYTE PTR [eax-0x6f],0x2a
  4139ae:	test   BYTE PTR [eax+0x76],0x4a
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	cli    
  4139b5:	cmp    DWORD PTR [esi+0x4a],esi
  4139b8:	test   al,0x31
  4139ba:	cmp    eax,0x5e40a094
  4139bf:	rcl    BYTE PTR [eax-0x6fb638ce],0x40
  4139c6:	dec    esi
  4139c7:	ror    BYTE PTR [ecx+esi*1+0x9477fe7],1
  4139ce:	xor    BYTE PTR [ebp+0x4f],al
  4139d1:	or     DWORD PTR [esi+edi*2+0x47258c63],ebx
  4139d8:	fisttp QWORD PTR [eax]
  4139da:	xchg   ebx,eax
  4139db:	mul    BYTE PTR [ecx-0x4a]
  4139de:	lock pop ebx
  4139e0:	popa   
  4139e1:	outs   dx,DWORD PTR ds:[esi]
  4139e2:	push   ss
  4139e3:	dec    edx
  4139e4:	mov    esi,0x29db0cc6
  4139e9:	add    DWORD PTR [eax-0xf49bffd],ebp
  4139ef:	pop    ebx
  4139f0:	push   ecx
  4139f1:	aas    
  4139f2:	add    dh,dh
  4139f4:	jle    0x413a36
  4139f6:	jne    0x4139e5
  4139f8:	jle    0x4139b0
  4139fa:	pop    es
  4139fb:	rcl    DWORD PTR [edi+ebp*2],1
  4139fe:	(bad)  
  4139ff:	ficomp WORD PTR [ebx+ecx*2+0x4]
  413a03:	jmp    0x6b2dcce9
  413a08:	xchg   DWORD PTR ds:0x1c22e96a,edi
  413a0e:	push   DWORD PTR [ebx+edi*8]
  413a11:	daa    
  413a12:	mov    ch,0x87
  413a14:	jle    0x413a56
  413a16:	mov    DWORD PTR [eax+eax*1],esp
  413a19:	add    BYTE PTR [edi-0x4f],bh
  413a1c:	(bad)  
  413a1d:	call   0x30a9b9a1
  413a22:	dec    ebx
  413a23:	retf   0xff
  413a26:	add    DWORD PTR ds:[ecx-0x17],eax
  413a2a:	jg     0x4139e2
  413a2c:	pop    es
  413a2d:	xchg   ecx,eax
  413a2e:	mov    BYTE PTR [ebp-0x1],dl
  413a31:	jle    0x413a41
  413a33:	mov    dh,0xfb
  413a35:	jbe    0x4139b7
  413a37:	pop    es
  413a38:	call   0xff8107d4
  413a3d:	xor    BYTE PTR [ecx],cl
  413a3f:	add    eax,0x2d1bb400
  413a44:	sub    DWORD PTR ds:0x4eff3863,0x99fbc610
  413a4e:	movzx  ecx,BYTE PTR [ebx]
  413a51:	ds dec eax
  413a53:	adc    BYTE PTR [ecx],ch
  413a55:	test   al,0x44
  413a57:	xor    DWORD PTR [ecx+0xb09436a],ebx
  413a5d:	sub    DWORD PTR [esi-0x7c],ebx
  413a60:	int    0xe8
  413a62:	inc    esp
  413a63:	or     edi,eax
  413a65:	lods   al,BYTE PTR ds:[esi]
  413a66:	cld    
  413a67:	or     BYTE PTR [eax],al
  413a69:	jmp    0x8682b2
  413a6e:	inc    edx
  413a6f:	rol    BYTE PTR [esi],cl
  413a71:	add    BYTE PTR [esi],ch
  413a73:	pop    ebp
  413a74:	jmp    FWORD PTR [ecx+0x1e]
  413a77:	pop    ebp
  413a78:	jmp    FWORD PTR [ecx+0x1e]
  413a7b:	mov    eax,0xf444
  413a80:	pop    esi
  413a81:	mov    dh,0x84
  413a83:	hlt    
  413a84:	icebp  
  413a85:	sar    esi,1
  413a87:	push   eax
  413a88:	stc    
  413a89:	dec    edi
  413a8a:	idiv   edi
  413a8c:	jae    0x413a5f
  413a8e:	out    0x6b,eax
  413a90:	ins    DWORD PTR es:[edi],dx
  413a91:	or     al,BYTE PTR [eax]
  413a93:	or     ebp,DWORD PTR [esi-0x7116fbb2]
  413a99:	or     eax,DWORD PTR [eax]
  413a9b:	add    BYTE PTR [esi-0x11bed77b],al
  413aa1:	shl    DWORD PTR [esp+ecx*1-0x4a],1
  413aa5:	shl    BYTE PTR [ebx-0x75854601],0xd0
  413aac:	imul   edi,DWORD PTR [edi-0x2e36080d],0x4f
  413ab3:	push   edx
  413ab4:	(bad)  
  413ab5:	push   eax
  413ab6:	mov    bl,0xff
  413ab8:	cmp    ebx,eax
  413aba:	test   al,dh
  413abc:	xor    ecx,edx
  413abe:	(bad)  
  413abf:	call   0x40d526
  413ac4:	sub    edi,DWORD PTR [edi-0x2f060829]
  413aca:	dec    edi
  413acb:	push   0x411281
  413ad0:	or     DWORD PTR [edi-0x2ec60810],ecx
  413ad6:	(bad)  
  413ad7:	xor    eax,0x412369
  413adc:	push   es
  413add:	add    DWORD PTR [ebx-0x7b3cd601],esi
  413ae3:	in     al,0x0
  413ae5:	add    BYTE PTR [ecx],dh
  413ae7:	sar    esi,1
  413ae9:	push   0x47
  413aeb:	xor    bl,bl
  413aed:	push   esp
  413aee:	(bad)  
  413af0:	add    edi,edi
  413af2:	cli    
  413af3:	aas    
  413af4:	dec    edi
  413af5:	(bad)  
  413af6:	cmp    BYTE PTR [edi],bh
  413af8:	or     eax,0x3715e0f
  413afd:	call   0xff893df8
  413b02:	into   
  413b03:	lods   al,BYTE PTR ds:[esi]
  413b04:	push   edi
  413b05:	neg    DWORD PTR [eax]
  413b07:	pop    edi
  413b08:	(bad)  
  413b0a:	test   al,0xf6
  413b0c:	or     eax,DWORD PTR [ecx+0x47]
  413b0f:	dec    edi
  413b10:	xchg   ecx,eax
  413b11:	lock clc 
  413b13:	inc    esi
  413b14:	inc    edi
  413b15:	push   DWORD PTR [edx]
  413b17:	das    
  413b18:	sbb    al,0x41
  413b1a:	inc    edi
  413b1b:	dec    eax
  413b1c:	jae    0x413ad1
  413b1e:	call   0xefc6b891
  413b23:	sahf   
  413b24:	inc    edi
  413b25:	dec    edx
  413b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b28:	daa    
  413b29:	not    eax
  413b2b:	xchg   esi,eax
  413b2c:	mov    ah,0x67
  413b2e:	push   edi
  413b2f:	pop    eax
  413b30:	(bad)  
  413b31:	inc    ecx
  413b33:	cld    
  413b34:	push   ebx
  413b35:	idiv   DWORD PTR [eax+0x403546be]
  413b3b:	dec    ecx
  413b3c:	(bad)  
  413b3d:	jmp    DWORD PTR [eax-0x5f006dc1]
  413b43:	cmp    al,BYTE PTR [ebx+0x74]
  413b46:	ds mov bl,0x88
  413b49:	fadd   QWORD PTR [eax]
  413b4b:	add    BYTE PTR [eax+0x120446d6],bl
  413b51:	inc    eax
  413b52:	inc    esi
  413b53:	xor    al,dl
  413b55:	lods   al,BYTE PTR ds:[esi]
  413b56:	arpl   di,si
  413b58:	js     0x413b58
  413b5a:	mov    bl,0xe7
  413b5c:	xor    al,al
  413b5e:	inc    esi
  413b5f:	call   FWORD PTR [ebx+edx*2-0x6]
  413b63:	mov    edi,0xb3ef08db
  413b68:	pusha  
  413b69:	neg    DWORD PTR [eax+0x47]
  413b6c:	push   eax
  413b6d:	inc    ebp
  413b6e:	ins    BYTE PTR es:[edi],dx
  413b6f:	fs push eax
  413b71:	cmp    eax,0x3d40f10e
  413b76:	jmp    0xf66735fd
  413b7b:	inc    esi
  413b7c:	xor    BYTE PTR [edx],cl
  413b7e:	jge    0x413b45
  413b80:	lds    edi,FWORD PTR [esi-0x3]
  413b83:	dec    esi
  413b84:	and    BYTE PTR ds:0x8893cfe9,bh
  413b8a:	pushf  
  413b8b:	pop    ebx
  413b8c:	sbb    BYTE PTR ds:0xad9303d6,bh
  413b92:	inc    edx
  413b93:	add    al,0xd2
  413b95:	xchg   BYTE PTR [ecx+0x193cf84e],ah
  413b9b:	inc    edi
  413b9c:	mov    edx,0xe846be25
  413ba1:	xor    DWORD PTR [ebx],ebx
  413ba3:	xor    eax,esp
  413ba5:	cmp    al,0xf2
  413ba7:	inc    ebx
  413ba8:	push   ebx
  413ba9:	aad    0x69
  413bab:	mov    bh,ch
  413bad:	xor    al,0x96
  413baf:	inc    esi
  413bb0:	add    BYTE PTR [eax],al
  413bb2:	inc    edi
  413bb3:	mov    ch,0x21
  413bb5:	fadd   st(0),st
  413bb7:	cmp    al,0x96
  413bb9:	test   DWORD PTR [eax+0x285bf0b6],edi
  413bbf:	ins    DWORD PTR es:[edi],dx
  413bc0:	jbe    0x413c08
  413bc2:	test   al,0x76
  413bc4:	jge    0x413c14
  413bc6:	mov    al,ds:0x40d0663c
  413bcb:	xor    DWORD PTR [edx+0x563c9097],esp
  413bd1:	nop
  413bd2:	lahf   
  413bd3:	xor    al,0x4e
  413bd5:	inc    esi
  413bd6:	xor    BYTE PTR [esi+0x6daa5bf0],0x3e
  413bdd:	inc    esi
  413bde:	jo     0x413c56
  413be0:	add    BYTE PTR [ecx],dl
  413be2:	stc    
  413be3:	cmp    edi,edi
  413be5:	cs mov bh,0x25
  413be8:	mul    DWORD PTR [esi]
  413bea:	add    DWORD PTR [esi*2-0x5452130f],edi
  413bf1:	push   ss
  413bf2:	add    DWORD PTR [esi*4-0xc36ef7],edi
  413bf9:	push   es
  413bfa:	pop    ss
  413bfb:	add    al,0xe8
  413bfd:	rcr    al,1
  413bff:	cmp    edi,edi
  413c01:	idiv   BYTE PTR [eax-0x751108dc]
  413c07:	xor    DWORD PTR [ebp-0xc37d6a],edx
  413c0d:	xchg   esp,eax
  413c0e:	outs   dx,DWORD PTR ds:[esi]
  413c0f:	xor    al,0xff
  413c11:	(bad)  
  413c12:	imul   ecx,DWORD PTR [edi+0xceaf],0xffffff8a
  413c19:	cmp    al,0xb5
  413c1b:	ror    DWORD PTR [edx+0xad1ff3c],1
  413c21:	imul   edi,edi,0xffffffb6
  413c24:	xor    BYTE PTR [esi-0x10],0xb6
  413c28:	mov    bh,BYTE PTR [eax+ebp*8]
  413c2b:	sbb    eax,0x9eff3bb2
  413c30:	nop
  413c31:	xor    ebp,ecx
  413c33:	sub    eax,DWORD PTR [ecx-0x6f7100c4]
  413c39:	aas    
  413c3a:	call   0x4a0086
  413c3f:	mov    al,0x5
  413c41:	adc    DWORD PTR [eax],eax
  413c43:	sbb    al,0x2e
  413c45:	sub    eax,0x3bf7a583
  413c4a:	jne    0x413c41
  413c4c:	cld    
  413c4d:	sar    BYTE PTR [edi-0x17],cl
  413c50:	inc    esp
  413c51:	xchg   edx,eax
  413c52:	inc    ebp
  413c53:	push   ecx
  413c54:	add    dh,BYTE PTR [esi+0x6aa941f7]
  413c5a:	inc    DWORD PTR [eax]
  413c5c:	add    eax,eax
  413c5e:	inc    esp
  413c5f:	cld    
  413c60:	xor    DWORD PTR [ebx+edi*8-0x1],ecx
  413c64:	stos   DWORD PTR es:[edi],eax
  413c65:	iret   
  413c66:	(bad)  
  413c67:	jne    0x413beb
  413c69:	fist   WORD PTR [esi]
  413c6b:	mov    ebx,0xc00ac621
  413c70:	mov    edx,0x2a458905
  413c75:	pop    edi
  413c76:	dec    DWORD PTR [ebx+ebp*8+0xff4fca]
  413c7d:	add    BYTE PTR [ebx+0x5a7be7c2],bh
  413c83:	(bad)  
  413c84:	dec    BYTE PTR [ebx]
  413c86:	pop    esi
  413c87:	pop    ecx
  413c88:	sub    BYTE PTR [eax+0x2e],ch
  413c8b:	aaa    
  413c8c:	out    dx,al
  413c8d:	mov    esi,0xe8074c21
  413c92:	(bad)  
  413c93:	mov    eax,ds:0x4bf1ffff
  413c98:	idiv   edi
  413c9a:	fwait
  413c9b:	inc    ecx
  413c9c:	(bad)  
  413c9d:	jne    0x413c95
  413c9f:	faddp  st(0),st
  413ca1:	stos   DWORD PTR es:[edi],eax
  413ca2:	mov    cl,0xc5
  413ca4:	(bad)  
  413ca5:	jne    0x413c51
  413ca7:	lds    esi,FWORD PTR [esp+edi*8-0x4f]
  413cab:	dec    ebx
  413cac:	pop    es
  413cad:	call   0x40de2f
  413cb2:	mov    cl,0x4b
  413cb4:	sti    
  413cb5:	call   0x40d17c
  413cba:	out    0xc8,eax
  413cbc:	pop    es
  413cbd:	add    BYTE PTR [ebx-0x40],bl
  413cc0:	jmp    0x413c45
  413cc2:	jmp    0xe732:0xabff55de
  413cc9:	lods   eax,DWORD PTR ds:[esi]
  413cca:	pop    ebp
  413ccb:	(bad)  
  413cce:	outs   dx,BYTE PTR ds:[esi]
  413ccf:	dec    ebx
  413cd0:	add    al,0x5e
  413cd2:	push   edi
  413cd3:	enter  0x7,0x47
  413cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd8:	mov    ebp,0xcdcb17ef
  413cdd:	or     ebp,DWORD PTR [edi+0x63]
  413ce0:	(bad)  
  413ce1:	inc    DWORD PTR [eax]
  413ce3:	add    BYTE PTR [eax+0x37],dh
  413ce6:	inc    ebx
  413ce7:	(bad)  
  413ce9:	(bad)  
  413cea:	add    al,BYTE PTR [eax]
  413cec:	inc    edi
  413ced:	jmp    0x413cbc
  413cef:	sti    
  413cf0:	outs   dx,DWORD PTR ds:[esi]
  413cf1:	not    DWORD PTR [edi+edi*8-0x144246b0]
  413cf8:	dec    eax
  413cf9:	popf   
  413cfa:	inc    edi
  413cfb:	(bad)  
  413cfc:	mov    edx,0x3f75433c
  413d01:	sbb    BYTE PTR [edx-0x52],dl
  413d04:	xor    BYTE PTR [ebx],bh
  413d06:	ja     0x413d7d
  413d08:	sbb    eax,DWORD PTR [edi]
  413d0a:	mov    edx,0xc277ee67
  413d0f:	push   DWORD PTR [edx+0x58]
  413d12:	lds    eax,FWORD PTR [eax-0x3ff1cfb9]
  413d18:	xchg   edx,eax
  413d19:	cs cs cmp eax,0xa8ac5fcc
  413d20:	aas    
  413d21:	icebp  
  413d22:	add    ebp,eax
  413d24:	retf   0x3fa
  413d27:	add    BYTE PTR [eax+eax*4-0x73],al
  413d2b:	jne    0x413d1c
  413d2d:	(bad)  
  413d2e:	jnp    0x413d68
  413d30:	xchg   BYTE PTR [eax],dh
  413d32:	(bad)  
  413d34:	xor    BYTE PTR [ecx+0x703c0003],dh
  413d3a:	mov    ecx,0x8d36ac01
  413d3f:	adc    BYTE PTR [ecx+0x1550032f],al
  413d45:	mov    ebx,0xe7b8
  413d4a:	test   al,0x3c
  413d4c:	or     ebp,eax
  413d4e:	sahf   
  413d4f:	test   eax,0x8fdff42
  413d54:	ror    DWORD PTR [ebx+0x41f8937],0x12
  413d5b:	ja     0x413d1e
  413d5d:	add    al,0x57
  413d5f:	sub    cl,BYTE PTR [edi+0x5110f243]
  413d65:	push   eax
  413d66:	popf   
  413d67:	cmp    DWORD PTR [esi],edi
  413d69:	inc    ebx
  413d6a:	repnz cmp al,0x36
  413d6d:	mov    ecx,0xbb4396c
  413d72:	outs   dx,DWORD PTR ds:[esi]
  413d73:	xor    al,0x53
  413d75:	inc    ebx
  413d76:	push   eax
  413d77:	cmp    DWORD PTR [edi+ebp*1+0x4346eb5f],edx
  413d7e:	inc    eax
  413d7f:	xchg   DWORD PTR [ebx+esi*1+0x779a2197],esp
  413d86:	xor    BYTE PTR [ecx],bh
  413d88:	adc    al,BYTE PTR [ecx+ecx*4]
  413d8b:	inc    edx
  413d8c:	sub    ecx,DWORD PTR [edi+eax*2]
  413d8f:	fisub  WORD PTR [ecx+0x30]
  413d92:	les    ecx,FWORD PTR [ebp-0x1b]
  413d95:	lods   eax,DWORD PTR ds:[esi]
  413d96:	adc    BYTE PTR [ebx+0x19242f3],ah
  413d9c:	rol    esi,0xad
  413d9f:	cmp    dh,cl
  413da1:	mov    WORD PTR [edx+0x38b95135],es
  413da7:	retf   0x42e8
  413daa:	jb     0x413dad
  413dac:	shr    DWORD PTR [edx+0x0],0x0
  413db0:	jecxz  0x413dea
  413db2:	scas   al,BYTE PTR es:[edi]
  413db3:	lods   eax,DWORD PTR ds:[esi]
  413db4:	fdiv   DWORD PTR [eax+0x987fbb5]
  413dba:	adc    DWORD PTR [edi+0xf],edi
  413dbd:	retf   0x42e8
  413dc0:	jp     0x413dca
  413dc2:	rol    ah,0xb8
  413dc5:	xor    BYTE PTR [ebp-0xdc74f8d],al
  413dcb:	inc    ebx
  413dcc:	xor    edx,DWORD PTR [ebx]
  413dce:	add    BYTE PTR [ecx],al
  413dd0:	in     eax,0xf1
  413dd2:	inc    eax
  413dd3:	jmp    0x99096e4c
  413dd8:	add    eax,0x5b95038
  413ddd:	mov    esi,0x37294107
  413de2:	dec    DWORD PTR [esi+0x2c]
  413de5:	dec    edi
  413de6:	lods   eax,DWORD PTR ds:[esi]
  413de7:	inc    esi
  413de8:	add    eax,0x565119a3
  413ded:	jnp    0x413dee
  413def:	ss push ecx
  413df1:	dec    ecx
  413df2:	je     0x413df8
  413df4:	stos   DWORD PTR es:[edi],eax
  413df5:	call   0x4ae7:0xd944a838
  413dfc:	shl    DWORD PTR [edi],cl
  413dfe:	inc    DWORD PTR [ecx-0x16bf0f1a]
  413e04:	adc    al,0x30
  413e06:	cwde   
  413e07:	cmp    BYTE PTR [ebp-0x7a66afc8],al
  413e0d:	mov    esi,0x37990107
  413e12:	(bad)  
  413e13:	out    dx,al
  413e14:	add    BYTE PTR [eax],al
  413e16:	ins    DWORD PTR es:[edi],dx
  413e17:	lahf   
  413e18:	lods   eax,DWORD PTR ds:[esi]
  413e19:	out    0x86,al
  413e1b:	mov    ds:0x7aa5d11b,eax
  413e20:	call   esi
  413e22:	push   edx
  413e23:	dec    ecx
  413e24:	je     0x413e2a
  413e26:	stos   DWORD PTR es:[edi],eax
  413e27:	cdq    
  413e28:	cmp    BYTE PTR [eax],ch
  413e2a:	dec    ebx
  413e2b:	(bad)  
  413e2d:	cmp    dh,BYTE PTR [eax+edi*1-0x1]
  413e31:	inc    ecx
  413e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e33:	lock inc eax
  413e35:	jmp    0x58a96e2e
  413e3a:	xchg   BYTE PTR [eax],bh
  413e3c:	push   eax
  413e3d:	cmp    DWORD PTR [esi-0x357ef842],eax
  413e43:	dec    DWORD PTR ss:[esi+0xacaf6b]
  413e4a:	leave  
  413e4b:	leave  
  413e4c:	imul   esp,DWORD PTR [ebx],0xffb0bad6
  413e52:	sbb    DWORD PTR [esi],eax
  413e54:	shl    BYTE PTR [ebx+eax*4+0x63],0x91
  413e59:	cmp    bh,bl
  413e5b:	or     edx,DWORD PTR [eax-0x18]
  413e5e:	fnstsw WORD PTR [edx+0x6986fffe]
  413e64:	cmp    BYTE PTR [ecx+0x6e],al
  413e67:	pop    ebx
  413e68:	out    0x38,eax
  413e6a:	out    dx,eax
  413e6b:	leave  
  413e6c:	(bad)  
  413e6d:	push   eax
  413e6e:	into   
  413e6f:	enter  0x874,0x6
  413e73:	pop    esi
  413e74:	std    
  413e75:	jmp    FWORD PTR [ecx]
  413e77:	in     eax,0x35
  413e79:	lods   eax,DWORD PTR ds:[esi]
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	sub    edx,ecx
  413e7e:	(bad)  
  413e7f:	jne    0x413eab
  413e81:	retf   0x874
  413e84:	inc    esi
  413e85:	mov    ds:0xc249ffa9,al
  413e8a:	rol    DWORD PTR [esi+ebx*1],0x60
  413e8e:	mov    ch,ah
  413e90:	lahf   
  413e91:	rcr    ebx,0xf7
  413e94:	sbb    edx,ecx
  413e96:	mov    WORD PTR [ebp+0x2a],es
  413e99:	pop    ebx
  413e9a:	(bad)  
  413e9b:	jne    0x413eab
  413e9d:	retf   0xc74
  413ea0:	idiv   BYTE PTR [ecx+0x7e]
  413ea3:	add    dh,ch
  413ea5:	add    eax,0x88630fc0
  413eaa:	add    DWORD PTR [eax],eax
  413eac:	faddp  st(1),st
  413eae:	inc    esp
  413eaf:	clc    
  413eb0:	fimul  WORD PTR [edx]
  413eb2:	add    BYTE PTR [eax],al
  413eb4:	mov    cl,0x4f
  413eb6:	repz jmp ecx
  413eb9:	or     al,BYTE PTR [eax]
  413ebb:	push   0xffffffde
  413ebd:	jmp    FWORD PTR fs:[ecx-0x22]
  413ec1:	dec    DWORD PTR fs:[edi+eax*2-0x35afc81b]
  413ec9:	lods   eax,DWORD PTR ds:[esi]
  413eca:	div    DWORD PTR ss:[eax+0x32fed38f]
  413ed1:	mov    BYTE PTR [eax+0x75],al
  413ed4:	mov    ds:0x477ec288,eax
  413ed9:	and    BYTE PTR [eax+eax*8],cl
  413edc:	sbb    esp,DWORD PTR ds:0x812a
  413ee2:	inc    esi
  413ee3:	and    BYTE PTR [ebx],al
  413ee5:	push   0xffc308c7
  413eea:	jns    0x413f49
  413eec:	adc    ebp,eax
  413eee:	jmp    0x413e9f
  413ef0:	aas    
  413ef1:	call   DWORD PTR [edi]
  413ef3:	mov    ebx,0xf4ca8d52
  413ef8:	aaa    
  413ef9:	call   FWORD PTR [eax-0x70]
  413efc:	aad    0xe7
  413efe:	sti    
  413eff:	iret   
  413f00:	aas    
  413f01:	(bad)  
  413f02:	mov    esi,0x40f732ad
  413f07:	pop    ds
  413f08:	sub    ebp,DWORD PTR [edx+0x6a4006eb]
  413f0e:	inc    edi
  413f0f:	cwde   
  413f10:	xor    BYTE PTR [eax],bh
  413f12:	xchg   BYTE PTR [eax],ah
  413f14:	inc    eax
  413f15:	mov    ch,0x17
  413f17:	aaa    
  413f18:	aas    
  413f19:	call   FWORD PTR [eax]
  413f1b:	mov    ebp,0x9ee2e80e
  413f20:	aas    
  413f21:	(bad)  
  413f22:	mov    esi,0xf727ac
  413f27:	pop    edi
  413f28:	stos   BYTE PTR es:[edi],al
  413f29:	jmp    DWORD PTR [eax+0x58]
  413f2c:	cld    
  413f2d:	inc    eax
  413f2e:	inc    edi
  413f2f:	dec    edi
  413f30:	jns    0x413f22
  413f32:	lock jbe 0x413f74
  413f35:	call   FWORD PTR [edx+0x2c]
  413f38:	sub    edx,DWORD PTR [edx-0x76c09958]
  413f3e:	retf   0x8908
  413f41:	aaa    
  413f42:	enter  0x1335,0x4
  413f46:	add    BYTE PTR [eax],al
  413f48:	das    
  413f49:	push   esi
  413f4a:	rol    esp,1
  413f4c:	mov    eax,0xb8345436
  413f51:	xor    eax,0x5323f86
  413f56:	xchg   ecx,eax
  413f57:	mov    bh,0xf1
  413f59:	xor    eax,0x24c28d76
  413f5e:	jbe    0x413f9f
  413f60:	nop
  413f61:	mov    ds:0xf0a2abe8,al
  413f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f67:	add    eax,DWORD PTR [eax+0x7837597b]
  413f6d:	xor    eax,0x213cb94e
  413f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f73:	outs   dx,BYTE PTR ds:[esi]
  413f74:	push   0x6f897035
  413f79:	cmp    eax,0x8ed3f36
  413f7e:	rol    DWORD PTR [ecx],0xe
  413f81:	enter  0x3ee8,0x92
  413f85:	cmp    BYTE PTR [esi],dl
  413f87:	aas    
  413f88:	inc    eax
  413f89:	xor    eax,0xcb2f0f9c
  413f8e:	cmp    eax,0x6c83303f
  413f93:	pusha  
  413f94:	xor    BYTE PTR ds:0x2de282fe,dh
  413f9a:	(bad)  
  413f9b:	sbb    BYTE PTR ds:[edx],cl
  413f9e:	je     0x413fac
  413fa0:	les    esi,FWORD PTR [esi-0x37]
  413fa3:	or     BYTE PTR ss:0x886bb7e9,dh
  413faa:	xchg   esp,eax
  413fab:	das    
  413fac:	add    BYTE PTR [eax],al
  413fae:	lock xor al,0xce
  413fb1:	add    edi,DWORD PTR [ebx-0x2b]
  413fb4:	imul   eax,DWORD PTR [eax+0x3ebe3cdf],0x19ffbd47
  413fbe:	stos   DWORD PTR es:[edi],eax
  413fbf:	xor    al,0xff
  413fc1:	mov    esi,0xf1753452
  413fc6:	sbb    al,0xb0
  413fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc9:	sahf   
  413fca:	xor    DWORD PTR [esi*4-0xcb8e7b],0xe80cef8e
  413fd5:	mov    dh,0x1c
  413fd7:	xor    al,0xff
  413fd9:	jle    0x413ffa
  413fdb:	and    edi,esi
  413fdd:	jbe    0x414038
  413fdf:	xor    al,0x75
  413fe1:	loope  0x41403f
  413fe3:	dec    edx
  413fe4:	test   al,0x66
  413fe6:	dec    ecx
  413fe7:	xor    al,0xb5
  413fe9:	inc    ebp
  413fea:	cmp    DWORD PTR [edi+edi*8],esi
  413fed:	push   esi
  413fee:	mov    edi,0xdc9ae80c
  413ff3:	xor    edi,edi
  413ff5:	inc    esi
  413ff6:	out    dx,eax
  413ff7:	sub    bh,dh
  413ff9:	and    DWORD PTR ds:[esi*2-0x5791d31f],esi
  414001:	adc    DWORD PTR cs:[esi*4-0xcbeebb],esi
  414009:	push   ds
  41400a:	dec    DWORD PTR [ebx]
  41400c:	call   0xff75ec8f
  414011:	push   cs
  414012:	add    BYTE PTR [eax],al
  414014:	scas   eax,DWORD PTR es:[edi]
  414015:	sub    eax,0x216906f7
  41401a:	mov    eax,ds:0xff346152
  41401f:	cmp    al,0x64
  414021:	cmp    al,0xff
  414023:	out    dx,al
  414024:	pop    ebp
  414025:	fwait
  414026:	stos   DWORD PTR es:[edi],eax
  414027:	out    0x4a,al
  414029:	xor    al,0xb5
  41402b:	int    0x3a
  41402d:	xor    al,0xff
  41402f:	ror    esi,0x5f
  414032:	dec    esi
  414034:	xor    bh,BYTE PTR [esi-0x18]
  414037:	add    BYTE PTR [ecx+0x6ee8fef5],ch
  41403d:	mov    ds:0xbb91fffe,al
  414042:	fcomi  st,st(7)
  414044:	mov    eax,ds:0x7575e7f5
  414049:	idiv   dh
  41404b:	call   FWORD PTR [ebx]
  41404d:	std    
  41404e:	idiv   bh
  414050:	shl    ebp,1
  414052:	je     0x414060
  414054:	sar    DWORD PTR [ebx+0x7],0xe8
  414058:	xor    ebp,0xfffffffe
  41405b:	jmp    DWORD PTR [ecx]
  41405d:	mov    esp,0xf611f7ef
  414062:	out    0x59,eax
  414064:	add    eax,0xdbfffef6
  414069:	out    dx,eax
  41406a:	call   0xff3760c0
  41406f:	call   FWORD PTR [ebx-0x7c5c180d]
  414075:	pop    es
  414076:	add    cl,cl
  414078:	add    BYTE PTR [eax],al
  41407a:	sbb    al,0x19
  41407c:	add    BYTE PTR [ebp-0x2b],dl
  41407f:	clc    
  414080:	add    ah,0x12
  414083:	pop    edi
  414084:	jmp    FWORD PTR [ecx+0x78]
  414087:	hlt    
  414088:	je     0x414092
  41408a:	bound  esp,QWORD PTR ss:[edi+0x457e61ff]
  414091:	cld    
  414092:	mov    BYTE PTR [edx],0x39
  414095:	inc    ecx
  414096:	push   ds
  414097:	pop    edi
  414098:	add    DWORD PTR [eax],eax
  41409a:	push   ds
  41409b:	xchg   edi,edi
  41409d:	jne    0x4140b5
  41409f:	fcomip st,st(6)
  4140a1:	std    
  4140a2:	adc    esi,esi
  4140a4:	addr16 or al,0xd7
  4140a7:	inc    edi
  4140a8:	(bad)  
  4140a9:	(bad)  
  4140aa:	sub    eax,DWORD PTR [ecx+ebp*1]
  4140ad:	inc    ecx
  4140ae:	out    dx,al
  4140af:	cmc    
  4140b0:	je     0x4140ba
  4140b2:	inc    edi
  4140b3:	dec    eax
  4140b4:	daa    
  4140b5:	std    
  4140b6:	lock inc ebx
  4140b8:	cmp    al,0x75
  4140ba:	jmp    0x414107
  4140bc:	mov    dh,0x7
  4140be:	out    dx,eax
  4140bf:	repnz imul edi,edi,0xffffffd8
  4140c3:	imul   eax,DWORD PTR [ecx+0x4],0xec891d47
  4140ca:	(bad)  
  4140cb:	fs pop edi
  4140cd:	test   eax,0xbb458e93
  4140d3:	lock cmp al,0x75
  4140d6:	push   edi
  4140d7:	xor    DWORD PTR [esi-0x411b60f5],0xffffffff
  4140de:	add    BYTE PTR [eax],al
  4140e0:	mov    al,ds:0xc20f4337
  4140e5:	cli    
  4140e6:	add    DWORD PTR [eax],eax
  4140e8:	inc    edi
  4140e9:	imul   eax,esi,0xfffffff7
  4140ec:	inc    edi
  4140ed:	and    BYTE PTR [ebx],al
  4140ef:	add    BYTE PTR [eax+0x40ff376d],cl
  4140f5:	and    BYTE PTR [ebx],al
  4140f7:	push   0x47
  4140f9:	inc    esi
  4140fa:	add    ebp,DWORD PTR [edx+0x47]
  4140fd:	push   esi
  4140fe:	add    ecx,DWORD PTR [ebp-0x732d03f6]
  414104:	ret    0x33f4
  414107:	call   DWORD PTR [eax-0x70]
  41410a:	cmp    al,0x75
  41410c:	dec    edi
  41410d:	jmp    0x4140c4
  41410f:	sti    
  414110:	das    
  414111:	cmp    bh,BYTE PTR [esi+0x432738ff]
  414117:	je     0x414163
  414119:	or     DWORD PTR [edx-0x54dfb8ff],eax
  41411f:	jg     0x414190
  414121:	popa   
  414122:	add    edi,edi
  414124:	xchg   edx,eax
  414125:	push   eax
  414126:	sub    edi,DWORD PTR [ecx]
  414128:	loope  0x41414c
  41412a:	cmp    edx,DWORD PTR [eax-0x44]
  41412d:	or     BYTE PTR [ecx-0x29c33577],bh
  414133:	cmp    edi,eax
  414135:	fdivr  DWORD PTR [edx]
  414137:	sub    al,0x1e
  414139:	arpl   si,cx
  41413b:	cmp    edi,DWORD PTR [esi-0x1fcc4675]
  414141:	xor    ecx,edx
  414143:	mov    ebx,0x31ae0000
  414148:	mov    dh,0xae
  41414a:	shr    BYTE PTR [ecx+0x987fd1d],1
  414150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414151:	jno    0x41410a
  414153:	cmp    DWORD PTR [esi-0x1b4447c5],ebx
  414159:	sub    eax,ebp
  41415b:	arpl   WORD PTR [esi-0x727441c5],cx
  414161:	xor    esp,DWORD PTR [eax+0x2f041331]
  414167:	into   
  414168:	scas   eax,DWORD PTR es:[edi]
  414169:	les    edx,FWORD PTR [eax-0x6fcbcbce]
  41416f:	xor    DWORD PTR [esi+0x3b],esp
  414172:	cli    
  414173:	add    al,0x51
  414175:	mov    ds:0x8d5631ab,eax
  41417a:	retf   0x5628
  41417d:	cmp    ebp,DWORD PTR [eax-0x62]
  414180:	call   0xa8316130
  414185:	add    ebx,DWORD PTR [eax+0x7b]
  414188:	cmp    DWORD PTR [ebx],esi
  41418a:	push   eax
  41418b:	xor    DWORD PTR [esi],ebp
  41418d:	mov    cl,0x3c
  41418f:	and    DWORD PTR [ebp+0x70314068],esi
  414195:	sub    DWORD PTR [ebx],0x9d3b1639
  41419b:	or     DWORD PTR [ecx-0x1735903a],eax
  4141a1:	cmp    bl,dl
  4141a3:	cmp    esi,esi
  4141a5:	cmp    bl,BYTE PTR [eax]
  4141a7:	xor    DWORD PTR [eax],eax
  4141a9:	jl     0x4141ab
  4141ab:	add    BYTE PTR [eax+0x21],cl
  4141ae:	xor    DWORD PTR [esp+ecx*2],edi
  4141b1:	xor    BYTE PTR [ecx-0xc7d394],cl
  4141b7:	fisubr WORD PTR [edx-0xdbe98d0]
  4141bd:	leave  
  4141be:	dec    ebp
  4141c0:	ja     0x4141fb
  4141c2:	test   esi,0xed75301d
  4141c8:	sub    al,0x17
  4141ca:	lods   eax,DWORD PTR ds:[esi]
  4141cb:	mov    dh,0xd
  4141cd:	add    BYTE PTR [ebp-0xcfea73],0x6a
  4141d4:	aas    
  4141d5:	and    eax,0x97d9ef7
  4141da:	jne    0x4141bc
  4141dc:	leave  
  4141dd:	outs   dx,BYTE PTR ds:[esi]
  4141de:	loopne 0x414176
  4141e0:	ins    DWORD PTR es:[edi],dx
  4141e1:	xor    BYTE PTR [eax],al
  4141e3:	std    
  4141e4:	out    0x8b,eax
  4141e6:	mov    ebp,0xff30558d
  4141eb:	jmp    0x2cc416d0
  4141f0:	pop    esp
  4141f1:	cmp    bh,bh
  4141f3:	inc    sp
  4141f5:	mov    ch,0x52
  4141f7:	rol    DWORD PTR [ecx+ecx*1-0x11],1
  4141fb:	xchg   edi,eax
  4141fc:	sub    eax,0x944107b6
  414201:	inc    WORD PTR [esi+0x1d]
  414205:	jbe    0x4141f3
  414207:	ss sbb eax,0x3cbcff30
  41420d:	and    DWORD PTR [edi+eax*4+0x300d0000],esp
  414214:	call   FWORD PTR [esp+ebp*2+0x38]
  414218:	call   FWORD PTR [esi]
  41421a:	jge    0x4141d2
  41421c:	pop    es
  41421d:	add    esi,edx
  41421f:	dec    WORD PTR [esi]
  414222:	ins    DWORD PTR es:[edi],dx
  414223:	jbe    0x414209
  414225:	add    BYTE PTR [ecx],ah
  414227:	repnz (bad) 
  414229:	call   DWORD PTR [ebx-0x7f7717fc]
  41422f:	repz (bad) 
  414231:	call   DWORD PTR [ebx-0x14]
  414234:	idiv   bh
  414236:	jmp    0x1649b72c
  41423b:	outs   dx,DWORD PTR ds:[esi]
  41423c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41423d:	call   FWORD PTR [ecx]
  41423f:	repnz mov ah,0xdc
  414242:	adc    edx,esi
  414244:	(bad)  
  414245:	jmp    DWORD PTR [ebx]
  414247:	std    
  414248:	out    0x6c,eax
  41424a:	shl    cl,0xfe
  41424d:	call   DWORD PTR [ebx-0x17]
  414250:	idiv   bh
  414252:	cdq    
  414253:	fdiv   QWORD PTR [ebp-0x57]
  414256:	jmp    0xcef7414c
  41425b:	stc    
  41425c:	(bad)  
  41425d:	inc    esi
  41425f:	pop    ebp
  414260:	test   al,0xff
  414262:	mov    ecx,0x21ecb4f1
  414267:	repnz (bad) 
  414269:	call   0x3fe6bc
  41426e:	sbb    DWORD PTR [eax-0xde60819],esp
  414274:	out    0x55,eax
  414276:	add    BYTE PTR [eax],al
  414278:	xlat   BYTE PTR ds:[ebx]
  414279:	icebp  
  41427a:	(bad)  
  41427b:	call   ebx
  41427d:	shl    dh,1
  41427f:	call   FWORD PTR [ecx]
  414281:	fisttp QWORD PTR [ecx-0x57]
  414284:	stc    
  414285:	icebp  
  414286:	(bad)  
  414287:	mov    ch,0x1e
  414289:	cli    
  41428a:	(bad)  
  41428b:	call   FWORD PTR [ecx]
  41428d:	pusha  
  41428e:	or     edi,edi
  414290:	xchg   ebx,eax
  414291:	add    ebp,eax
  414293:	cmp    eax,0xfffef218
  414298:	mov    ds:0x59fff6f5,eax
  41429d:	(bad)  ds:0x391747a9
  4142a3:	inc    DWORD PTR [edx+0x21512b18]
  4142a9:	or     BYTE PTR [ecx],bh
  4142ab:	call   DWORD PTR [edx-0x7387d4d4]
  4142b1:	and    BYTE PTR [ebx],al
  4142b3:	leave  
  4142b4:	add    eax,0xcc55034d
  4142b9:	push   esp
  4142ba:	test   ah,al
  4142bc:	sti    
  4142bd:	fiadd  DWORD PTR [ebx]
  4142bf:	push   0x58
  4142c1:	push   edi
  4142c2:	scas   al,BYTE PTR es:[edi]
  4142c3:	pop    es
  4142c4:	fnstsw ax
  4142c6:	popa   
  4142c7:	jmp    eax
  4142c9:	mov    ecx,0xf56ffbbd
  4142ce:	cli    
  4142cf:	inc    eax
  4142d0:	inc    edi
  4142d1:	ja     0x4142c1
  4142d3:	push   cs
  4142d4:	push   ds
  4142d5:	loope  0x4142da
  4142d7:	(bad)  
  4142d8:	cmp    bh,BYTE PTR [eax]
  4142da:	sub    esi,esi
  4142dc:	add    BYTE PTR [eax],al
  4142de:	mov    edx,0x3a68388f
  4142e3:	pop    ecx
  4142e4:	ret    0x20ff
  4142e7:	and    al,BYTE PTR [ebx]
  4142e9:	add    bh,al
  4142eb:	xchg   DWORD PTR [esi+0x3684af07],ebp
  4142f1:	call   DWORD PTR [eax-0x77045249]
  4142f7:	xor    eax,0x7e14e80b
  4142fc:	cmp    bh,bh
  4142fe:	mov    fs,edx
  414300:	(bad)  
  414301:	call   FWORD PTR [ebx]
  414303:	stos   DWORD PTR es:[edi],eax
  414304:	add    DWORD PTR es:[ebx+0x60ff2fec],0xf7fbbdb5
  41430f:	out    dx,al
  414310:	lods   eax,DWORD PTR ds:[esi]
  414311:	(bad)  
  414313:	ins    DWORD PTR es:[edi],dx
  414314:	pop    es
  414315:	call   0x44be48
  41431a:	dec    esp
  41431b:	or     DWORD PTR [ecx],ebp
  41431d:	or     dl,al
  41431f:	jge    0x41430a
  414321:	add    eax,DWORD PTR [edi+0x46]
  414324:	lods   al,BYTE PTR ds:[esi]
  414325:	cmp    eax,DWORD PTR [edi+0x9]
  414328:	jmp    0xfd054b30
  41432d:	aaa    
  41432e:	inc    eax
  41432f:	or     ecx,ebp
  414331:	lods   eax,DWORD PTR ds:[esi]
  414332:	adc    BYTE PTR [eax-0x5ff75218],ah
  414338:	call   0x3976cdc3
  41433d:	mov    edx,eax
  41433f:	xor    al,0xd6
  414341:	aaa    
  414342:	add    BYTE PTR [eax],al
  414344:	lock fcom st(5)
  414347:	mov    cl,0xf0
  414349:	sub    eax,0x2bef3854
  41434e:	inc    ebx
  41434f:	add    al,0x47
  414351:	add    ch,BYTE PTR [ecx+0x1c2246b0]
  414357:	mov    edx,eax
  414359:	sbb    al,0xb6
  41435b:	aaa    
  41435c:	rcr    al,0x73
  41435f:	xor    DWORD PTR [ebx+0x17379e35],0xa8141c2e
  414369:	mov    bl,0xdc
  41436b:	sub    esp,DWORD PTR [ecx]
  41436d:	bound  eax,QWORD PTR [esi+0x7983ce37]
  414373:	das    
  414374:	nop
  414375:	sub    eax,0xeb1343e2
  41437a:	imul   edi,DWORD PTR [ecx+0x73],0x47376635
  414381:	mov    ch,0xff
  414383:	stos   DWORD PTR es:[edi],eax
  414384:	jo     0x4143b3
  414386:	inc    esi
  414387:	jbe    0x4143f1
  414389:	jae    0x4143c8
  41438b:	das    
  41438c:	pusha  
  41438d:	sub    eax,0x35577146
  414392:	ds aaa 
  414394:	push   eax
  414395:	mov    bl,0xff
  414397:	loopne 0x4143b5
  414399:	ds leave 
  41439b:	cs js  0x4143ca
  41439e:	mov    ch,0x19
  4143a0:	push   0x2811ff2c
  4143a5:	call   DWORD PTR gs:[esi]
  4143a8:	add    BYTE PTR [eax],al
  4143aa:	jo     0x414372
  4143ac:	test   DWORD PTR [edx],0x5752ccb
  4143b2:	imul   ebp,DWORD PTR [ebp+0x4244e979],0xffffffc2
  4143b9:	in     eax,0x44
  4143bb:	(bad)  
  4143bc:	mov    bh,ch
  4143be:	lds    eax,FWORD PTR [ebp-0x4]
  4143c1:	push   ebx
  4143c2:	inc    ebx
  4143c3:	lahf   
  4143c4:	pop    ss
  4143c5:	fidiv  WORD PTR [edi+0x662de804]
  4143cb:	sub    al,0xff
  4143cd:	pusha  
  4143ce:	pop    es
  4143cf:	xor    DWORD PTR [eax+0x63],ebp
  4143d2:	fcmovne st,st(1)
  4143d4:	(bad)  
  4143d5:	mov    ebp,0x2828fbd7
  4143da:	inc    ebx
  4143db:	sub    al,0x75
  4143dd:	loope  0x41444b
  4143df:	out    0xfe,al
  4143e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143e2:	jno    0x414385
  4143e4:	cdq    
  4143e5:	loopne 0x414372
  4143e7:	sub    al,0x67
  4143e9:	jmp    0x41442f
  4143eb:	or     DWORD PTR [eax-0x17fb2872],eax
  4143f1:	ficom  DWORD PTR [ecx+0x2c]
  4143f4:	call   DWORD PTR [ecx]
  4143f6:	adc    al,0xf2
  4143f8:	inc    eax
  4143f9:	jmp    0xc0503a4f
  4143fe:	mov    ebp,DWORD PTR [esi+edi*8]
  414401:	fmul   QWORD PTR [ecx+eiz*1+0x0]
  414405:	pop    esi
  414406:	cmp    DWORD PTR [eax+ebp*2],ebp
  414409:	call   0x0:0xc0ffc96b
  414410:	inc    esi
  414411:	or     DWORD PTR [eax],eax
  414413:	add    dh,ch
  414415:	bnd je 0x414420
  414418:	mul    ch
  41441a:	std    
  41441b:	call   DWORD PTR [ecx]
  41441d:	repz je 0x41441c
  414420:	jno    0x41449b
  414422:	pop    es
  414423:	call   0x3fed44
  414428:	ja     0x4143f4
  41442a:	add    eax,DWORD PTR [eax]
  41442c:	jmp    0x4144ac
  41442e:	in     al,dx
  41442f:	(bad)  
  414430:	mov    ebx,0x75f4e803
  414435:	repz dec BYTE PTR [ebx]
  414438:	pop    esi
  414439:	pop    esp
  41443a:	cmp    BYTE PTR [eax+0x3e],ch
  41443d:	sub    eax,0xdfde0040
  414442:	mov    BYTE PTR [ebx+0x504ff5e1],ch
  414448:	xchg   esi,eax
  414449:	add    eax,0x5cd0ef00
  41444e:	aad    0x39
  414450:	das    
  414451:	add    eax,0xfd1bff50
  414456:	out    0x50,eax
  414458:	mov    ds:0x8658fef5,al
  41445d:	or     BYTE PTR [eax],al
  41445f:	out    dx,eax
  414460:	xor    BYTE PTR [ebp-0x26],bl
  414463:	cmp    DWORD PTR [edi+0x5],ebp
  414466:	push   eax
  414467:	call   FWORD PTR [ebx-0x3]
  41446a:	out    0x3c,eax
  41446c:	loop   0x414463
  41446e:	(bad)  
  41446f:	call   0x4012ba
  414474:	add    BYTE PTR [eax],al
  414476:	xlat   BYTE PTR ds:[ebx]
  414477:	mov    BYTE PTR [edi],0x0
  41447a:	cmp    eax,DWORD PTR [edx-0xf257c14]
  414480:	imul   eax,DWORD PTR [eax],0x75ff1044
  414486:	jbe    0x414467
  414488:	mov    DWORD PTR [ecx+edx*1+0x474588f6],esp
  41448f:	(bad)  
  414490:	test   eax,0xb546019
  414495:	call   0xff76074c
  41449a:	(bad)  
  41449c:	xor    al,0x75
  41449e:	aas    
  41449f:	retf   0xff88
  4144a2:	inc    eax
  4144a3:	fsubr  QWORD PTR [ecx+0xb8e381b]
  4144a9:	call   0xff765074
  4144ae:	sub    BYTE PTR [esi+0x289aff37],cl
  4144b4:	sub    esp,DWORD PTR [ebx+eiz*8+0x5c93503]
  4144bb:	and    eax,0x4bc5503
  4144c0:	add    esp,0xbae1c03
  4144c6:	out    dx,eax
  4144c7:	mov    edi,0x37f0ff68
  4144cc:	inc    ebx
  4144cd:	movnti DWORD PTR [edi+0x3],edi
  4144d1:	add    BYTE PTR [edi-0x57],al
  4144d4:	mov    ebp,0x13c5c4fb
  4144d9:	add    BYTE PTR [eax],al
  4144db:	add    BYTE PTR [ebx+0x1a],bl
  4144de:	xor    al,0x75
  4144e0:	aaa    
  4144e1:	jae    0x414491
  4144e3:	sti    
  4144e4:	scas   eax,DWORD PTR es:[edi]
  4144e5:	inc    edi
  4144e6:	imul   edi,edi,0xfbbdb9b8
  4144ec:	pop    ds
  4144ed:	addr16 cli 
  4144ef:	inc    eax
  4144f0:	inc    edi
  4144f1:	xchg   ebx,eax
  4144f2:	scas   al,BYTE PTR es:[edi]
  4144f3:	sti    
  4144f4:	scas   eax,DWORD PTR es:[edi]
  4144f5:	mov    ds:0x1098ff68,eax
  4144fa:	lods   al,BYTE PTR ds:[esi]
  4144fb:	call   DWORD PTR [eax-0x77af8a85]
  414501:	sub    eax,0x6884e80b
  414506:	xor    al,0xff
  414508:	outs   dx,DWORD PTR ds:[esi]
  414509:	or     DWORD PTR ds:0xd12a705d,edi
  41450f:	jmp    0x2cda:0x34e8c82e
  414516:	inc    ecx
  414517:	popf   
  414518:	scas   al,BYTE PTR es:[edi]
  414519:	sub    al,BYTE PTR [esi-0x2d]
  41451c:	call   0x89662e28
  414521:	fnstenv ds:0x8b2148ae
  414527:	dec    ebx
  414528:	cmp    BYTE PTR [edx],ch
  41452a:	adc    DWORD PTR [eax-0x17],esi
  41452d:	sub    DWORD PTR [esi],ebx
  41452f:	stos   DWORD PTR es:[edi],eax
  414530:	cmp    edi,ebp
  414532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414533:	add    esp,DWORD PTR [eax]
  414535:	mov    ah,0xc
  414537:	sub    eax,DWORD PTR [edx+0x7734065f]
  41453d:	mov    eax,ds:0x3e8
  414542:	sbb    BYTE PTR [ebx-0x67],ch
  414545:	xor    al,0x7a
  414547:	add    DWORD PTR [ecx],eax
  414549:	or     BYTE PTR [edi],0x2a
  41454c:	out    0x1c,al
  41454e:	aad    0x62
  414550:	fidiv  WORD PTR [ebx]
  414552:	pop    edi
  414553:	leave  
  414554:	adc    al,ch
  414556:	loopne 0x414582
  414558:	push   esp
  414559:	xor    bh,ch
  41455b:	in     al,0x92
  41455d:	xor    edx,eax
  41455f:	fcom   DWORD PTR [eax+0x5]
  414562:	inc    edi
  414563:	sbb    dh,BYTE PTR [edi-0x2c]
  414566:	shl    DWORD PTR [ebx+0x41271be0],0xa6
  41456d:	xor    ebx,DWORD PTR [edi-0x57ccb949]
  414573:	sub    DWORD PTR [eax+esi*1],ebx
  414576:	scas   eax,DWORD PTR es:[edi]
  414577:	lahf   
  414578:	inc    esi
  414579:	xor    ebx,DWORD PTR [eax+0x4700ab3f]
  41457f:	aam    0x71
  414581:	and    ah,al
  414583:	inc    esp
  414584:	add    BYTE PTR [ebp-0x1f],dh
  414587:	sub    DWORD PTR [ecx-0x2d],ebp
  41458a:	xor    eax,0xf05107b4
  41458f:	call   FWORD PTR gs:[esi-0x16]
  414593:	ret    
  414594:	sti    
  414595:	ret    
  414596:	inc    esp
  414597:	lahf   
  414598:	sbb    DWORD PTR [esi-0x62],ecx
  41459b:	add    eax,ebp
  41459d:	or     edx,DWORD PTR [edx+ebp*1]
  4145a0:	call   ebx
  4145a2:	inc    esp
  4145a3:	lahf   
  4145a4:	and    dh,BYTE PTR [esi]
  4145a6:	add    BYTE PTR [eax],al
  4145a8:	(bad)  
  4145a9:	adc    al,ch
  4145ab:	xlat   BYTE PTR ds:[ebx]
  4145ac:	jne    0x4145d6
  4145ae:	call   DWORD PTR [ebx+0x1e1bb344]
  4145b4:	out    dx,al
  4145b5:	adc    al,ch
  4145b7:	jecxz  0x41460e
  4145b9:	sub    bh,bh
  4145bb:	xor    edi,0xb2e940e2
  4145c1:	add    bh,bh
  4145c3:	je     0x4145d1
  4145c5:	xor    ebx,edi
  4145c7:	div    DWORD PTR ds:0xea8c6828
  4145cd:	leave  
  4145ce:	call   DWORD PTR [edx-0x18]
  4145d1:	daa    
  4145d2:	jne    0x4145c5
  4145d4:	dec    esp
  4145d5:	xor    eax,0xb115d6fe
  4145da:	pop    esp
  4145db:	adc    eax,DWORD PTR [edx]
  4145dd:	sub    DWORD PTR [ecx-0x1b],ebp
  4145e0:	adc    eax,0x77d1079e
  4145e5:	daa    
  4145e6:	push   DWORD PTR [esi-0x5104618b]
  4145ec:	call   DWORD PTR [eax]
  4145ee:	call   0xff696e0e
  4145f3:	mov    al,0x2
  4145f5:	or     eax,0x35203c00
  4145fa:	and    DWORD PTR [ebp+0xff203c],0xfc4589c9
  414604:	fdiv   QWORD PTR cs:[eax+edx*1-0x7]
  414609:	pusha  
  41460a:	or     ebp,eax
  41460c:	add    BYTE PTR [eax],al
  41460e:	mov    dh,0x74
  414610:	(bad)  
  414611:	push   DWORD PTR [ebp-0x34]
  414614:	push   cs
  414615:	test   DWORD PTR [ecx+0x3100000d],esp
  41461b:	push   ecx
  41461c:	test   DWORD PTR [eax],0xc7000c6e
  414622:	mov    ds:0x5e07fee0,eax
  414627:	or     al,0x6a
  414629:	add    BYTE PTR [esp+ecx*1],al
  41462c:	push   0x0
  41462e:	add    al,0xc
  414630:	lea    eax,[ebp+0x52]
  414633:	cmp    al,0x8c
  414635:	test   DWORD PTR [edx-0x1d],edx
  414638:	(bad)  
  414639:	(bad)  
  41463a:	(bad)  
  41463c:	je     0x414636
  41463e:	dec    ecx
  41463f:	popa   
  414640:	sti    
  414641:	call   0x40ba5a
  414646:	adc    eax,0x470573cc
  41464b:	add    BYTE PTR es:[eax],al
  41464e:	out    dx,al
  41464f:	cmp    DWORD PTR [edi+0x28],0x1f
  414653:	or     eax,0x3ee75ff
  414658:	sub    eax,0x4fd9f9a9
  41465d:	mov    ebx,DWORD PTR [esi-0x6e0b7b59]
  414663:	fsin   
  414665:	push   eax
  414666:	sub    al,0x5
  414668:	sbb    eax,0x88d9f9a9
  41466d:	test   esi,edi
  41466f:	loope  0x41466f
  414671:	inc    DWORD PTR [eax]
  414673:	add    dh,dl
  414675:	pop    ebp
  414676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414677:	dec    ecx
  414679:	xchg   bh,bh
  41467b:	addr16 inc edi
  41467d:	mov    esi,0x974740ed
  414682:	ja     0x414674
  414684:	cwde   
  414685:	mov    ?,WORD PTR [ecx]
  414687:	call   DWORD PTR [edx]
  414689:	sbb    esi,DWORD PTR ss:[esi-0x51]
  41468d:	sahf   
  41468e:	xor    BYTE PTR [ecx-0xc75a3e],cl
  414694:	jo     0x4146d1
  414696:	add    ebp,DWORD PTR [eax+0x7f]
  414699:	jmp    0x41465d
  41469b:	jmp    DWORD PTR [ecx-0x7c]
  41469e:	xor    al,0xf7
  4146a0:	pop    eax
  4146a1:	(bad)  
  4146a2:	xor    BYTE PTR [ebp+0x43],dh
  4146a5:	mov    edx,0xe648a7cc
  4146aa:	jp     0x414631
  4146ac:	das    
  4146ad:	call   0xb60645e2
  4146b2:	pop    ds
  4146b3:	div    DWORD PTR [eax]
  4146b5:	lock add esi,DWORD PTR [edi+esi*2+0x78]
  4146ba:	add    eax,DWORD PTR [eax]
  4146bc:	xor    BYTE PTR [edi+0x715d839b],bh
  4146c2:	add    edi,edi
  4146c4:	(bad)  
  4146c6:	cmp    bh,bh
  4146c8:	or     BYTE PTR [eax],ch
  4146ca:	mov    dh,0x7
  4146cc:	out    dx,eax
  4146cd:	or     edi,DWORD PTR [ebx]
  4146cf:	(bad)  
  4146d0:	clc    
  4146d1:	mov    BYTE PTR [edx],al
  4146d3:	add    al,ah
  4146d5:	outs   dx,BYTE PTR ds:[esi]
  4146d6:	fwait
  4146d7:	lea    eax,[eax]
  4146d9:	add    BYTE PTR ds:0x9aff03f1,ch
  4146df:	dec    esp
  4146e0:	cmp    bh,bh
  4146e2:	fcom   DWORD PTR [edi-0x4a]
  4146e5:	pop    es
  4146e6:	fild   WORD PTR [ebx-0x4c3700c6]
  4146ec:	ins    DWORD PTR es:[edi],dx
  4146ed:	call   0x71a6aa
  4146f2:	xor    esp,DWORD PTR [eax]
  4146f4:	fwait
  4146f5:	push   DWORD PTR [eax+0x1f719609]
  4146fb:	(bad)  
  4146fc:	jecxz  0x4146c0
  4146fe:	mov    al,ds:0x901b5c27
  414703:	mov    ?,WORD PTR es:[eax]
  414706:	sbb    dl,BYTE PTR [ecx]
  414708:	xchg   ecx,eax
  414709:	jne    0x414789
  41470b:	es jle 0x4146a9
  41470e:	inc    edi
  41470f:	or     DWORD PTR [esi-0x4c69108f],eax
  414715:	ret    0x2770
  414718:	pushf  
  414719:	sbb    esi,DWORD PTR [eax+0x26]
  41471c:	pop    esi
  41471d:	xor    dl,bl
  41471f:	adc    BYTE PTR [ecx-0x73],al
  414722:	mov    fs,WORD PTR [esi]
  414724:	dec    esi
  414725:	xor    BYTE PTR [edx+0x48303e35],bl
  41472b:	xor    DWORD PTR [ecx],ebp
  41472d:	addr16 inc eax
  41472f:	es ss jbe 0x414762
  414733:	push   ds
  414734:	xor    BYTE PTR cs:[edi],bl
  414737:	pop    esp
  414738:	dec    ebp
  414739:	xor    BYTE PTR [eax],ch
  41473b:	es push esp
  41473d:	xor    eax,DWORD PTR [eax]
  41473f:	add    BYTE PTR [eax],bl
  414741:	es push ss
  414743:	xor    BYTE PTR [edx+0x48b60e15],dl
  414749:	xor    DWORD PTR ds:0xfe260831,edi
  41474f:	jne    0x414748
  414751:	sbb    eax,0x7fef2ff6
  414756:	inc    ebp
  414757:	xor    al,dh
  414759:	and    eax,0x50de2c2c
  41475e:	fild   QWORD PTR [edi]
  414760:	loopne 0x414787
  414762:	pop    esp
  414763:	xor    bh,ch
  414765:	sub    DWORD PTR [edi+0x4],edx
  414768:	inc    edi
  414769:	push   eax
  41476a:	stos   DWORD PTR es:[edi],eax
  41476b:	add    BYTE PTR [edi-0x44],al
  41476e:	jno    0x414790
  414770:	rcr    BYTE PTR [ebx+0x505ce4ff],0xa8
  414777:	scas   al,BYTE PTR es:[edi]
  414778:	pusha  
  414779:	adc    al,al
  41477b:	sbb    eax,0xe397ad9a
  414780:	mov    esp,DWORD PTR ds:0x6d89814f
  414786:	dec    DWORD PTR [esi-0x16982a85]
  41478c:	inc    esp
  41478d:	ss mov esi,0x40e2cf11
  414793:	jmp    0xe1b66e2c
  414798:	dec    esp
  414799:	in     al,dx
  41479a:	enter  0x1866,0xc1
  41479e:	addr16 call 0xc1ff7de8
  4147a4:	add    BYTE PTR [eax],al
  4147a6:	(bad)  
  4147a8:	inc    eax
  4147a9:	jmp    0xf1b66e22
  4147ae:	sub    al,0xf8
  4147b0:	enter  0x703e,0x31
  4147b4:	cmp    eax,0xc924688d
  4147b9:	sub    esi,DWORD PTR [ebx]
  4147bb:	and    eax,0x88677254
  4147c0:	les    ebx,FWORD PTR ds:0xe969bbf9
  4147c6:	mov    esi,0xc94feff
  4147cb:	sub    eax,0x2458485d
  4147d0:	mov    DWORD PTR [eax+esi*1+0x1cc13590],esp
  4147d7:	retf   0x61ff
  4147da:	div    al
  4147dc:	daa    
  4147dd:	sub    BYTE PTR [ebx-0x77],al
  4147e0:	aas    
  4147e1:	jmp    0xe9fcd0c7
  4147e6:	inc    esp
  4147e7:	or     DWORD PTR [eax+0x50],ebp
  4147ea:	(bad)  
  4147ec:	(bad)  
  4147ed:	jmp    FWORD PTR [eax]
  4147ef:	add    eax,0x8ae76b0
  4147f4:	or     eax,eax
  4147f6:	jp     0x41485b
  4147f8:	aas    
  4147f9:	xor    BYTE PTR [esi+0x19840f08],0x8
  414800:	add    BYTE PTR [eax],al
  414802:	pop    esi
  414803:	test   DWORD PTR [eax+0x3a],edi
  414806:	outs   dx,DWORD PTR ds:[esi]
  414807:	or     eax,0xede8
  41480c:	cmp    cl,BYTE PTR ds:0xca9d5a00
  414812:	dec    edi
  414813:	call   0x3ff12f
  414818:	pop    esi
  414819:	cmp    eax,0x35e0067
  41481e:	mov    esi,0x4031da68
  414823:	add    BYTE PTR [esi+0x60874f3],bl
  414829:	xchg   edx,eax
  41482a:	enter  0x1ff,0x50
  41482e:	add    DWORD PTR [bp+0x3],ebx
  414832:	mov    esi,0x4032b068
  414837:	add    dh,bl
  414839:	bnd je 0x414844
  41483c:	xchg   BYTE PTR [esi+0x61ffc8],cl
  414842:	mov    dl,0xa3
  414844:	inc    ecx
  414845:	repz jmp 0x1e41:0x395cc643
  41484d:	cmp    esp,edi
  41484f:	inc    ecx
  414850:	mov    BYTE PTR [eax],cl
  414852:	add    BYTE PTR [ebx],cl
  414854:	cs pop esp
  414856:	xor    edx,DWORD PTR [esi+0x46]
  414859:	ins    BYTE PTR es:[edi],dx
  41485a:	lods   al,BYTE PTR ds:[esi]
  41485b:	jmp    ecx
  41485d:	ss dec edi
  41485f:	push   0xbeef07de
  414864:	jbe    0x4147f7
  414866:	cmp    al,BYTE PTR [ecx+0x47]
  414869:	xor    dl,bl
  41486b:	(bad)  
  41486c:	pop    edx
  41486d:	sub    bl,BYTE PTR [ebx]
  41486f:	push   ebp
  414870:	add    BYTE PTR [eax],al
  414872:	dec    DWORD PTR [edx+0x2d]
  414875:	pop    eax
  414876:	das    
  414877:	xor    DWORD PTR [ebx],eax
  414879:	out    dx,eax
  41487a:	stc    
  41487b:	leave  
  41487c:	jge    0x4148b8
  41487e:	push   es
  41487f:	xor    dl,bl
  414881:	(bad)  
  414882:	xor    bl,BYTE PTR [edx]
  414884:	sbb    eax,DWORD PTR [ecx-0x71]
  414887:	sub    BYTE PTR ds:0x2ccf2ae8,0xff
  41488e:	pushf  
  41488f:	xor    ch,al
  414891:	jg     0x4148dc
  414893:	xor    dh,BYTE PTR [esi-0xf59f607]
  414899:	mov    edi,0xff2c9abe
  41489e:	jo     0x41483f
  4148a0:	pop    ebp
  4148a1:	cmp    BYTE PTR [eax+0x1b],al
  4148a4:	xchg   BYTE PTR [ebp+0x60],al
  4148a7:	ret    0x6a2c
  4148aa:	cmp    eax,0x5f07b6bb
  4148af:	out    dx,al
  4148b0:	sub    eax,0xe03748ff
  4148b5:	(bad)  
  4148b6:	mov    edx,0x39b91b18
  4148bb:	fsubr  QWORD PTR [edx+ebp*2]
  4148be:	push   ebx
  4148bf:	repz mov dh,0x7
  4148c2:	pop    ds
  4148c3:	mov    esp,0x7920ff2d
  4148c8:	pop    ecx
  4148c9:	cmp    al,BYTE PTR [esi+0x40352c30]
  4148cf:	dec    ecx
  4148d0:	ret    0x9ff
  4148d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d4:	cli    
  4148d5:	out    0x0,eax
  4148d7:	add    BYTE PTR [esi],dh
  4148d9:	and    eax,0xc66fff2c
  4148de:	jmp    0x1c99023
  4148e3:	add    BYTE PTR [edi+0x9],al
  4148e6:	imul   ebp,DWORD PTR [edx+ebx*2],0xda0cd111
  4148ed:	and    dl,dh
  4148ef:	sub    al,0x5a
  4148f1:	and    eax,0x3140b6ce
  4148f6:	imul   esp,DWORD PTR [ebx-0x40],0x22
  4148fa:	push   ds
  4148fb:	into   
  4148fc:	pop    DWORD PTR [edi-0x13]
  4148ff:	add    ebx,DWORD PTR [edx]
  414901:	mov    ?,WORD PTR [ebp-0x61c67c7e]
  414907:	sub    al,0xa0
  414909:	xchg   esp,eax
  41490a:	and    al,0x30
  41490c:	mul    DWORD PTR [ecx]
  41490e:	sbb    al,0x14
  414910:	nop
  414911:	pushf  
  414912:	fcomp  QWORD PTR [ebx]
  414914:	add    DWORD PTR [eax+ebp*8-0x11b6b3fd],ebx
  41491b:	xchg   BYTE PTR ds:0x8803e907,al
  414921:	int3   
  414922:	jo     0x414927
  414924:	inc    edi
  414925:	or     ecx,ebp
  414927:	inc    esp
  414928:	or     bl,BYTE PTR ds:0x947045e
  41492e:	ret    
  41492f:	add    ebx,ebp
  414931:	or     bl,al
  414933:	add    ebx,ebp
  414935:	or     BYTE PTR [esi+eax*8+0x34],dh
  414939:	mov    ecx,0x866b
  41493e:	xor    ebx,DWORD PTR [edx]
  414940:	ss sub al,0x97
  414943:	and    dh,BYTE PTR [ebx+ebp*1+0x1b249c28]
  41494a:	aas    
  41494b:	pushf  
  41494c:	call   0x9d8a9554
  414951:	push   es
  414952:	push   ds
  414953:	or     al,0xeb
  414955:	add    eax,DWORD PTR [edi-0x4f]
  414958:	push   0xfe0987db
  41495d:	mov    ch,0x48
  41495f:	xor    DWORD PTR [eax],eax
  414961:	mov    dl,0x6a
  414963:	and    bh,bh
  414965:	cdq    
  414966:	outs   dx,DWORD PTR ds:[esi]
  414967:	cmp    DWORD PTR [ebp-0xe5e894],ecx
  41496d:	fdivrp st(3),st
  41496f:	mov    bh,0xe7
  414971:	add    ah,BYTE PTR [ebp+0x22]
  414974:	jmp    DWORD PTR [eax-0x3a]
  414977:	sbb    bh,dh
  414979:	(bad)  
  41497a:	ins    BYTE PTR es:[edi],dx
  41497b:	xor    DWORD PTR [ecx+0x6a226c8b],eax
  414981:	jmp    0x287b9b52
  414986:	inc    ebx
  414987:	and    dh,BYTE PTR [ebp-0xddab67]
  41498d:	sahf   
  41498e:	(bad)  
  41498f:	or     eax,0x22266de8
  414994:	jmp    DWORD PTR [eax-0x3a]
  414997:	sub    al,0xf7
  414999:	xchg   BYTE PTR [edi+ebp*4],ch
  41499c:	call   DWORD PTR [eax]
  41499e:	or     bl,bh
  4149a0:	inc    eax
  4149a1:	jmp    0x5c5e49a6
  4149a6:	lock jbe 0x4149c5
  4149a9:	and    bh,bh
  4149ab:	fcomp  QWORD PTR [eax+0x29]
  4149ae:	imul   eax,DWORD PTR [esp+ebp*1+0x2f6c8922],0xa94eff1a
  4149b9:	and    DWORD PTR [edi+0x4b],esp
  4149bc:	xor    edx,ecx
  4149be:	(bad)  
  4149bf:	cmp    eax,0x36f719b6
  4149c4:	pop    esp
  4149c5:	and    BYTE PTR [ebp-0x23],dh
  4149c8:	dec    esp
  4149c9:	iret   
  4149ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149cb:	es ins BYTE PTR es:[edi],dx
  4149cd:	xchg   edx,eax
  4149ce:	test   DWORD PTR [ecx],edx
  4149d0:	push   esp
  4149d1:	and    bh,bh
  4149d3:	add    DWORD PTR [ecx+esi*4-0x16],0xffffffd3
  4149d8:	add    esp,DWORD PTR [ecx]
  4149da:	inc    BYTE PTR [eax]
  4149dc:	inc    ebx
  4149dd:	aad    0xf6
  4149df:	(bad)  
  4149e0:	stc    
  4149e1:	repz je 0x4149f0
  4149e4:	inc    esi
  4149e5:	sbb    BYTE PTR [edi+edi*8-0x237b6227],ah
  4149ec:	add    esp,esi
  4149ee:	dec    BYTE PTR [ebp-0x9139d]
  4149f4:	stc    
  4149f5:	cmp    al,0x67
  4149f7:	sti    
  4149f8:	xor    al,0x46
  4149fa:	(bad)  
  4149fb:	inc    BYTE PTR [ebx-0x24]
  4149fe:	idiv   bh
  414a00:	stc    
  414a01:	repz xor al,0xf
  414a04:	inc    edi
  414a05:	inc    esi
  414a06:	jmp    edi
  414a08:	add    BYTE PTR [eax],al
  414a0a:	mov    gs,WORD PTR [ecx-0x336a0002]
  414a10:	jae    0x414a2b
  414a12:	sub    eax,0xb9f7dfb1
  414a17:	repz add esi,DWORD PTR [ebp-0x72]
  414a1b:	repz das 
  414a1d:	(bad)  
  414a1e:	repz shl esi,cl
  414a21:	(bad)  
  414a22:	stc    
  414a23:	cmp    esp,edi
  414a25:	(bad)  
  414a27:	repnz (bad) 
  414a29:	jmp    0x4149bd
  414a2b:	pop    ds
  414a2c:	mov    edi,0xe73c7074
  414a31:	ror    edi,1
  414a33:	repz inc bh
  414a36:	jecxz  0x414a0b
  414a38:	idiv   bh
  414a3a:	stc    
  414a3b:	clc    
  414a3c:	(bad)  
  414a3d:	jmp    FWORD PTR [esi]
  414a3f:	mov    eax,ds:0xf371d084
  414a44:	(bad)  
  414a45:	push   eax
  414a46:	push   es
  414a47:	or     bh,BYTE PTR [ebx]
  414a49:	inc    ecx
  414a4a:	push   ds
  414a4b:	repz mov ah,0xf0
  414a4e:	inc    ecx
  414a4f:	repz (bad) 
  414a51:	push   DWORD PTR [ebx+0x47c5e717]
  414a57:	into   
  414a58:	sub    edi,edi
  414a5a:	mov    esi,0xf74ea4
  414a5f:	pop    es
  414a60:	xchg   BYTE PTR [ebp-0xd6e91d],bh
  414a66:	inc    edi
  414a67:	daa    
  414a68:	jg     0x414a05
  414a6a:	inc    edi
  414a6b:	xor    al,BYTE PTR [ebx]
  414a6d:	add    DWORD PTR [eax],0x0
  414a70:	mov    ds:0xd8ff3135,al
  414a75:	xor    eax,edi
  414a77:	add    ecx,0x31
  414a7a:	add    eax,DWORD PTR [eax]
  414a7c:	les    ecx,FWORD PTR [esp+ebx*1+0x446c0f7]
  414a83:	movnti DWORD PTR [eax-0x35b8fffd],esi
  414a8a:	adc    eax,DWORD PTR [eax]
  414a8c:	cwde   
  414a8d:	scas   eax,DWORD PTR es:[edi]
  414a8e:	sub    BYTE PTR [ebp+0x4f],dh
  414a91:	jp     0x414abb
  414a93:	popf   
  414a94:	cwde   
  414a95:	jle    0x414ac0
  414a97:	mov    ch,0xa3
  414a99:	jle    0x414ac4
  414a9b:	dec    DWORD PTR [eax+0x17e7fbf4]
  414aa1:	test   al,0x28
  414aa3:	(bad)  
  414aa4:	js     0x414a7a
  414aa6:	sbb    esi,edi
  414aa8:	jo     0x414a40
  414aaa:	sub    BYTE PTR [ebp+0x3f],dh
  414aad:	mov    al,dh
  414aaf:	popf   
  414ab0:	pusha  
  414ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab2:	sub    BYTE PTR [ebp-0xd7499d],dh
  414ab8:	push   eax
  414ab9:	cmp    al,0xfb
  414abb:	out    0x13,eax
  414abd:	mov    al,0x28
  414abf:	inc    DWORD PTR [eax-0x62]
  414ac2:	dec    ebx
  414ac3:	idiv   DWORD PTR [eax]
  414ac5:	loopne 0x414aef
  414ac7:	jne    0x414b08
  414ac9:	enter  0x9d3f,0x28
  414acd:	lock sub BYTE PTR [ebp+0x291e0a03],dh
  414ad4:	add    BYTE PTR [eax],al
  414ad6:	sbb    BYTE PTR [edi],bl
  414ad8:	xchg   esp,eax
  414ad9:	sti    
  414ada:	sub    BYTE PTR [edx],al
  414adc:	ja     0x414b07
  414ade:	or     BYTE PTR [ebx+0x1ef8504c],cl
  414ae4:	push   es
  414ae5:	add    al,0x73
  414ae7:	add    ch,BYTE PTR [edx+0x67]
  414aea:	pop    ss
  414aeb:	pop    ss
  414aec:	imul   BYTE PTR [eax]
  414aee:	inc    ebx
  414aef:	xchg   esp,eax
  414af0:	fidivr DWORD PTR [edx+ecx*8+0x35]
  414af4:	fisubr WORD PTR [eax]
  414af6:	fcomp  DWORD PTR [esi]
  414af8:	sbb    DWORD PTR [ecx],ebp
  414afa:	pop    edx
  414afb:	adc    ecx,eax
  414afd:	(bad)
  414b01:	sbb    al,0x4d
  414b03:	mov    bl,0xe8
  414b05:	sub    BYTE PTR [edx],dh
  414b07:	adc    ecx,edx
  414b09:	jnp    0x414add
  414b0b:	push   ds
  414b0c:	mov    dh,0x28
  414b0e:	repnz and eax,0x31a028b6
  414b14:	popf   
  414b15:	arpl   WORD PTR [eax-0x5c9161e2],bx
  414b1b:	push   ss
  414b1c:	xchg   esi,eax
  414b1d:	sub    BYTE PTR [edi-0x7fd7b6d0],bl
  414b23:	push   ds
  414b24:	cmp    al,0x1b
  414b26:	jo     0x414b46
  414b28:	jle    0x414b45
  414b2a:	xchg   ecx,eax
  414b2b:	imul   esi,DWORD PTR [esi+0x28],0x308d5468
  414b32:	pusha  
  414b33:	push   ds
  414b34:	push   ecx
  414b35:	push   esp
  414b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b37:	push   ds
  414b38:	pop    esi
  414b39:	sub    BYTE PTR [eax],al
  414b3b:	add    BYTE PTR [edx+0x48285e35],bl
  414b41:	xor    DWORD PTR [ecx],esp
  414b43:	arpl   WORD PTR [eax+0x1e],ax
  414b46:	inc    esi
  414b47:	outs   dx,BYTE PTR ds:[esi]
  414b48:	aaa    
  414b49:	push   ss
  414b4a:	sub    BYTE PTR ds:[eax],dh
  414b4d:	xchg   esp,eax
  414b4e:	jmp    esp
  414b50:	pop    edi
  414b51:	xchg   esp,eax
  414b52:	pop    es
  414b53:	inc    ecx
  414b54:	lods   eax,DWORD PTR ds:[esi]
  414b55:	sbb    al,0xff
  414b57:	outs   dx,DWORD PTR es:[esi]
  414b59:	push   esp
  414b5a:	lock push ss
  414b5c:	pop    edi
  414b5d:	push   ds
  414b5e:	call   0xff5fefa8
  414b63:	push   cs
  414b64:	rcl    DWORD PTR ds:0x1e2134e9,0xff
  414b6b:	(bad)  
  414b6c:	mov    ds:0xb3ffe821,al
  414b71:	sbb    eax,0xd8a20ff
  414b76:	add    BYTE PTR [esp+ebx*2],bh
  414b79:	sub    eax,0xb31fa583
  414b7e:	inc    DWORD PTR [edx+0x3f]
  414b81:	push   ds
  414b82:	jne    0x414b65
  414b84:	pop    esp
  414b85:	pop    edi
  414b86:	popf   
  414b87:	(bad)  
  414b88:	pusha  
  414b89:	nop
  414b8a:	inc    ebp
  414b8b:	mov    ebp,0x283af8d3
  414b90:	inc    ebx
  414b91:	push   ds
  414b92:	xor    eax,0xffc883de
  414b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b98:	(bad)  
  414b99:	add    eax,0x1e5e1be8
  414b9e:	inc    DWORD PTR [ecx]
  414ba0:	add    BYTE PTR [eax],al
  414ba2:	xor    ah,dl
  414ba4:	inc    eax
  414ba5:	jmp    0xe9415386
  414baa:	les    ebx,FWORD PTR ds:0xa94cf175
  414bb0:	cld    
  414bb1:	jbe    0x414bd3
  414bb3:	push   ds
  414bb4:	jne    0x414c23
  414bb6:	sub    BYTE PTR [edi+eax*1-0x840daf],dl
  414bbd:	pop    esi
  414bbe:	adc    cl,BYTE PTR [ebx+0x4]
  414bc1:	jmp    0x692dde3d
  414bc6:	xchg   DWORD PTR ds:0xe48100fe,edx
  414bcc:	imul   eax,DWORD PTR [eax],0x75ff1214
  414bd2:	add    DWORD PTR es:[edx-0x63],esi
  414bd6:	jno    0x414bbc
  414bd8:	mov    BYTE PTR [ebp+0x62],al
  414bdb:	jge    0x414be0
  414bdd:	add    DWORD PTR [esi],ebx
  414bdf:	or     DWORD PTR [ebp-0x11cd67b],ecx
  414be5:	(bad)  
  414be6:	mov    esi,0xee71d200
  414beb:	or     BYTE PTR [ebx],cl
  414bed:	sar    BYTE PTR [edx+0x34],0x3c
  414bf1:	add    al,0xdf
  414bf3:	or     BYTE PTR [eax],al
  414bf5:	ja     0x414c02
  414bf7:	sub    DWORD PTR [eax],0x8d052f3b
  414bfd:	test   ecx,edi
  414bff:	out    0xfe,al
  414c01:	dec    DWORD PTR [esi]
  414c03:	std    
  414c04:	test   al,0xa3
  414c06:	add    BYTE PTR [eax],al
  414c08:	xchg   ecx,eax
  414c09:	jecxz  0x414c5a
  414c0b:	push   0xbeef08ae
  414c10:	dec    esi
  414c11:	in     al,0x74
  414c13:	or     BYTE PTR [esi-0xe003f17],al
  414c19:	add    dh,dh
  414c1b:	lahf   
  414c1c:	loope  0x414c01
  414c1e:	(bad)  
  414c1f:	jne    0x414bd3
  414c21:	jecxz  0x414c97
  414c23:	or     dh,al
  414c25:	jge    0x414bc3
  414c27:	call   ecx
  414c29:	ffree  st(1)
  414c2b:	add    al,0x6e
  414c2d:	cmp    DWORD PTR [edx-0x4242214],ecx
  414c33:	push   0x5e
  414c35:	sbb    BYTE PTR ds:0xe7205bff,0xd
  414c3c:	ret    
  414c3d:	jecxz  0x414c3d
  414c3f:	mov    DWORD PTR [ebx+0x470067e4],ebp
  414c45:	xor    dl,BYTE PTR [esi]
  414c47:	mov    esi,0x40eaf3af
  414c4c:	inc    edi
  414c4d:	cmp    al,dl
  414c4f:	cmp    al,BYTE PTR [esi+0x3f752632]
  414c55:	retf   0xc44f
  414c58:	and    bl,ch
  414c5a:	and    eax,0xafe31b75
  414c5f:	pop    es
  414c60:	pop    ds
  414c61:	dec    esp
  414c62:	mov    bh,bh
  414c64:	or     cl,ch
  414c66:	inc    eax
  414c67:	add    al,0x47
  414c69:	push   ebp
  414c6a:	jp     0x414c58
  414c6c:	add    BYTE PTR [eax],al
  414c6e:	(bad)  
  414c6f:	in     eax,dx
  414c70:	dec    esi
  414c71:	div    eax
  414c73:	sbb    dh,BYTE PTR [edi+0x45]
  414c76:	jmp    0x414bf9
  414c78:	es jne 0x414cb2
  414c7b:	sub    ebp,DWORD PTR [edi-0x4cc210f5]
  414c81:	call   eax
  414c83:	push   ss
  414c84:	inc    ebx
  414c85:	cmpps  xmm7,XMMWORD PTR ds:0x63470003,0xbf
  414c8d:	test   DWORD PTR [edi+0x32],0xe4880003
  414c94:	das    
  414c95:	inc    DWORD PTR [eax+0x32]
  414c98:	add    ebp,DWORD PTR [edx+0x47]
  414c9b:	enter  0x6a03,0x47
  414c9f:	clc    
  414ca0:	add    ecx,DWORD PTR [ebp-0x732b89f6]
  414ca6:	ret    0x2d7d
  414ca9:	inc    DWORD PTR [eax+0x7f7524e1]
  414caf:	sub    BYTE PTR [edi-0x4c9ca005],0xff
  414cb6:	push   0x4a744326
  414cbb:	mov    DWORD PTR [ebp+0x1],ebp
  414cbe:	inc    edi
  414cbf:	or     ecx,ebp
  414cc1:	fwait
  414cc2:	shl    al,1
  414cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cc5:	add    ecx,DWORD PTR [eax-0x6b]
  414cc8:	clc    
  414cc9:	sbb    ebp,DWORD PTR [esi]
  414ccb:	push   0x8e97254e
  414cd0:	sbb    DWORD PTR [edi+0x0],esi
  414cd3:	add    dl,cl
  414cd5:	adc    eax,0xba282536
  414cda:	call   0xce25:0x2e67fe1b
  414ce1:	test   BYTE PTR [ecx],bl
  414ce3:	sub    eax,0xd5111b10
  414ce8:	test   eax,0xca77161a
  414ced:	sub    DWORD PTR [esi],edx
  414cef:	and    eax,0xb690b9f8
  414cf4:	sub    eax,0xb224e8c8
  414cf9:	sbb    esi,edi
  414cfb:	and    al,0xe0
  414cfd:	sbb    dh,BYTE PTR [edi+esi*8-0x20]
  414d01:	in     al,dx
  414d02:	mov    ah,BYTE PTR [eax+edx*8]
  414d05:	nop
  414d06:	fs pop ds
  414d08:	rcr    BYTE PTR [edx],1
  414d0a:	(bad)  
  414d0b:	cdq    
  414d0c:	shl    BYTE PTR [edx+0x907e936],0xc6
  414d13:	outs   dx,BYTE PTR ds:[esi]
  414d14:	mov    bh,0x12
  414d16:	mov    esi,0xe494a824
  414d1b:	sbb    esi,DWORD PTR ds:0xce24ae67
  414d21:	test   BYTE PTR [ebp+0x131a902c],dl
  414d27:	add    al,0x1f
  414d29:	mov    edi,0x1b80c2d1
  414d2e:	push   esp
  414d2f:	xor    esi,DWORD PTR [eax+0x1a]
  414d32:	xchg   BYTE PTR [edx+edi*8],ah
  414d35:	or     al,0x91
  414d37:	sub    al,0x0
  414d39:	add    BYTE PTR [esi-0x2289ffe6],ah
  414d3f:	sub    eax,0x76
  414d42:	and    ebx,DWORD PTR [edx]
  414d44:	push   0xffffffe9
  414d46:	lods   al,BYTE PTR ds:[esi]
  414d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d48:	cmp    ch,BYTE PTR [eax+0x59b51a44]
  414d4e:	jae    0x414d6a
  414d50:	dec    DWORD PTR [esi-0x17]
  414d53:	or     eax,0x1aa525e8
  414d58:	push   DWORD PTR [eax-0x57]
  414d5b:	cmp    eax,0xaf6b36f7
  414d60:	inc    eax
  414d62:	aad    0xde
  414d64:	inc    eax
  414d65:	jmp    0x1731a1d5
  414d6a:	arpl   WORD PTR [edx],bx
  414d6c:	call   FWORD PTR [eax+edi*8+0x2348c121]
  414d73:	sbb    cl,BYTE PTR [ecx-0xed8394]
  414d79:	dec    bh
  414d7b:	sbb    DWORD PTR [edi+0x44],esp
  414d7e:	out    dx,eax
  414d7f:	enter  0xedff,0x6a
  414d83:	sbb    edi,esi
  414d85:	out    0x24,al
  414d87:	sbb    dh,BYTE PTR [ebp-0x13]
  414d8a:	sbb    al,0x63
  414d8c:	mov    eax,ds:0x859064d6
  414d91:	mov    ch,0x5c
  414d93:	sbb    bh,bh
  414d95:	push   0x26
  414d97:	and    eax,0x964bef7
  414d9c:	je     0x414dce
  414d9e:	add    BYTE PTR [eax],al
  414da0:	enter  0xec5b,0xb6
  414da4:	sbb    al,BYTE PTR fs:[eax]
  414da7:	sbb    eax,0x91bd86bb
  414dac:	sub    al,0x1a
  414dae:	(bad)  
  414daf:	jmp    0xf9a8f08c
  414db4:	inc    esp
  414db5:	sub    bh,BYTE PTR [esi+0x77fc900]
  414dbb:	call   0x3fe897
  414dc0:	fnstcw WORD PTR [edi-0x1a160815]
  414dc6:	(bad)  
  414dc7:	jne    0x414e1f
  414dc9:	in     eax,dx
  414dca:	cmp    al,0x9b
  414dcc:	jmp    0x86f74cb6
  414dd1:	hlt    
  414dd2:	(bad)  
  414dd3:	dec    DWORD PTR [ecx+0x59e80772]
  414dd9:	cwde   
  414dda:	(bad)  
  414ddb:	jmp    FWORD PTR [ecx-0x4e]
  414dde:	fcomip st,st(7)
  414de0:	pop    ecx
  414de1:	in     al,dx
  414de2:	(bad)  
  414de3:	mov    ch,0x82
  414de5:	hlt    
  414de6:	(bad)  
  414de7:	jmp    FWORD PTR [ecx+0x72]
  414dea:	pop    es
  414deb:	call   0x3fe529
  414df0:	pop    ecx
  414df1:	mov    dl,0xd7
  414df3:	test   DWORD PTR [ecx-0x14],0xe4f675fe
  414dfa:	or     al,0x9b
  414dfc:	jmp    0x3af74cec
  414e01:	hlt    
  414e02:	(bad)  
  414e03:	inc    DWORD PTR [eax]
  414e05:	add    cl,ch
  414e07:	jno    0x414e10
  414e09:	call   0x3fe4f7
  414e0e:	jmp    0x9a3921c4
  414e13:	jmp    0x414e13
  414e15:	jne    0x414dbd
  414e17:	in     al,0xf0
  414e19:	call   0xf382:0xb5feeb89
  414e20:	(bad)  
  414e21:	inc    DWORD PTR [esi-0x16006309]
  414e27:	jmp    0x414ddd
  414e29:	in     al,dx
  414e2a:	mov    cl,0xeb
  414e2c:	(bad)  
  414e2d:	call   0x40d7e0
  414e32:	inc    edi
  414e33:	jg     0x414e8d
  414e35:	call   0xe863d5aa
  414e3a:	push   0xffffffad
  414e3c:	and    edi,edi
  414e3e:	push   0x60f73edd
  414e43:	lahf   
  414e44:	sub    bl,dl
  414e46:	mov    edx,0x9aff21a7
  414e4b:	retf   0xff19
  414e4e:	dec    eax
  414e4f:	mov    edx,0xbf409d51
  414e54:	and    DWORD PTR [ebp-0xde40ed],esi
  414e5a:	pop    ds
  414e5b:	out    0x7f,al
  414e5d:	jmp    FWORD PTR [eax]
  414e5f:	xlat   BYTE PTR ds:[ebx]
  414e60:	push   edi
  414e61:	lock sbb bh,bl
  414e64:	and    edi,edi
  414e66:	xchg   edx,eax
  414e67:	and    dh,BYTE PTR ss:[ebp+0x0]
  414e6b:	add    BYTE PTR [edi],bh
  414e6d:	cli    
  414e6e:	or     esi,edi
  414e70:	or     bh,dh
  414e72:	and    DWORD PTR [ebp-0xde0909],esi
  414e78:	out    dx,eax
  414e79:	leave  
  414e7a:	jg     0x414e7b
  414e7c:	lock push cs
  414e7e:	enter  0xdef7,0x2a
  414e82:	and    edi,edi
  414e84:	loopne 0x414ea4
  414e86:	xchg   edi,eax
  414e87:	sti    
  414e88:	out    dx,eax
  414e89:	adc    esi,DWORD PTR [ecx+0x4658d0ff]
  414e8f:	or     al,0x47
  414e91:	fisttp QWORD PTR [esp+ebp*8+0x6a2065c4]
  414e98:	inc    edi
  414e99:	int3   
  414e9a:	add    bh,bh
  414e9c:	cmp    bl,BYTE PTR [edx]
  414e9e:	sub    edi,DWORD PTR [edx-0x76dea933]
  414ea4:	or     bl,BYTE PTR [esi-0x54]
  414ea7:	jne    0x414f05
  414ea9:	loope  0x414eae
  414eab:	call   FWORD PTR [edx+0x9]
  414eae:	imul   dl
  414eb0:	pop    es
  414eb1:	or     DWORD PTR [esi-0x56deb769],ebx
  414eb7:	pop    ds
  414eb8:	js     0x414ed1
  414eba:	add    DWORD PTR [edx-0x541735d3],ebx
  414ec0:	inc    esi
  414ec1:	or     ecx,ebp
  414ec3:	and    DWORD PTR [eax-0x63],0xffffffe0
  414ec7:	sub    ebp,DWORD PTR [ecx+0x50216e15]
  414ecd:	popf   
  414ece:	and    DWORD PTR fs:[eax],eax
  414ed1:	add    dl,dl
  414ed3:	add    BYTE PTR [ecx+0x4f],dl
  414ed6:	fst    QWORD PTR [esi]
  414ed8:	push   esi
  414ed9:	dec    ebx
  414eda:	add    eax,0xbdb6e90e
  414edf:	and    eax,0xc02b486a
  414ee4:	xchg   ebp,eax
  414ee5:	lods   eax,DWORD PTR ds:[esi]
  414ee6:	and    BYTE PTR [ecx+0x1922108],ah
  414eec:	inc    ecx
  414eed:	mov    cl,0xae
  414eef:	push   ss
  414ef0:	mov    eax,DWORD PTR es:[edx+0x28d77215]
  414ef7:	loope  0x414ea0
  414ef9:	add    ecx,esp
  414efb:	aam    0xbc
  414efd:	jmp    0x414e86
  414eff:	or     DWORD PTR [ecx-0x1f],ebp
  414f02:	call   0x4ecd6a1
  414f07:	shl    DWORD PTR [edi+0x35217103],cl
  414f0d:	mov    cl,0xd0
  414f0f:	push   ss
  414f10:	cmp    DWORD PTR [eax+edx*4+0x180427d2],ebp
  414f17:	and    DWORD PTR [ecx+0x3316b8b0],eax
  414f1d:	or     eax,0xcec9c87
  414f22:	xchg   ebp,eax
  414f23:	popf   
  414f24:	adc    bh,BYTE PTR [edx-0x70ffb058]
  414f2a:	addr16 push ss
  414f2c:	push   0xffc97399
  414f31:	cmp    BYTE PTR [ebx+0x2c],bl
  414f34:	mov    al,ds:0x2700009e
  414f39:	mov    ecx,0x2644e967
  414f3e:	mov    esi,0x40d20201
  414f43:	jmp    0xf1b666fc
  414f48:	sub    al,0x64
  414f4a:	shl    DWORD PTR [esi+0x27],0x21
  414f4e:	(bad)  [ebp+0x27]
  414f51:	push   ss
  414f52:	jmp    0x414f3c
  414f54:	jle    0x414eec
  414f56:	cmp    eax,0x460fd9e9
  414f5b:	push   ebp
  414f5c:	adc    edx,DWORD PTR [esi-0x47]
  414f5f:	dec    esi
  414f60:	addr16 push ss
  414f62:	(bad)  
  414f63:	cmp    esi,DWORD PTR [esi-0x384bf92f]
  414f69:	adc    eax,0x9c673575
  414f6e:	pop    es
  414f6f:	inc    ecx
  414f70:	stc    
  414f71:	outs   dx,DWORD PTR ds:[esi]
  414f72:	jmp    DWORD PTR [esi]
  414f74:	pop    es
  414f75:	mov    ah,0xc8
  414f77:	sub    ecx,DWORD PTR [eax+0x9]
  414f7a:	push   ebp
  414f7b:	bound  ebp,QWORD PTR [eax]
  414f7d:	mov    al,ah
  414f7f:	or     eax,0x60b9c27
  414f84:	ror    DWORD PTR ds:0x165fc5e8,1
  414f8a:	jmp    DWORD PTR [eax+0x1]
  414f8d:	adc    bh,bh
  414f8f:	je     0x414fc1
  414f91:	push   ss
  414f92:	jne    0x414f85
  414f94:	sbb    al,0x7d
  414f96:	xchg   esp,eax
  414f97:	fisub  WORD PTR [eax-0x7e]
  414f9a:	dec    ebp
  414f9b:	in     eax,0x0
  414f9d:	add    BYTE PTR [ebp+0x49],cl
  414fa0:	je     0x414fcd
  414fa2:	(bad)  
  414fa3:	iret   
  414fa4:	(bad)  
  414fa5:	jmp    FWORD PTR [edx+0x28]
  414fa8:	(bad)  
  414fa9:	jne    0x414f8d
  414fab:	in     al,0x94
  414fad:	pushf  
  414fae:	shl    ebp,1
  414fb0:	dec    edi
  414fb1:	call   FWORD PTR [ebx-0x7]
  414fb4:	(bad)  
  414fb5:	jne    0x414f99
  414fb7:	pop    esp
  414fb8:	(bad)  
  414fb9:	jne    0x415031
  414fbb:	loope  0x414f88
  414fbd:	xchg   esi,eax
  414fbe:	shl    ebp,1
  414fc0:	pop    ecx
  414fc1:	mov    edx,DWORD PTR [ebx-0x7]
  414fc4:	cmp    BYTE PTR [ecx],0x5e
  414fc7:	jo     0x414fd2
  414fc9:	push   edx
  414fca:	mov    dh,0x55
  414fcc:	fwait
  414fcd:	call   ecx
  414fcf:	and    DWORD PTR [edi+0x7d8a7aeb],edi
  414fd5:	adc    BYTE PTR [esi+0x7d],bl
  414fd8:	pop    es
  414fd9:	mov    ebp,ebx
  414fdb:	sbb    dh,bh
  414fdd:	jne    0x414f71
  414fdf:	test   BYTE PTR [eax],al
  414fe1:	mov    ebx,DWORD PTR [eax+eiz*8+0x1]
  414fe5:	sub    ebx,DWORD PTR [esi-0x3a]
  414fe8:	ror    DWORD PTR [esi+ebp*1],0x52
  414fec:	mov    ch,ah
  414fee:	push   ecx
  414fef:	jb     0x414ffc
  414ff1:	(bad)  
  414ff2:	fild   DWORD PTR [eax]
  414ff4:	call   0xff35d8b2
  414ff9:	(bad)  
  414ffa:	fild   DWORD PTR [eax+edx*2]
  414ffd:	(bad)  
  414ffe:	fild   DWORD PTR [eax]
  415000:	call   0x79415036
  415005:	hlt    
  415006:	dec    cl
  415008:	sbb    al,0x5
  41500a:	add    BYTE PTR [ebp+0x55],dl
  41500d:	fld    DWORD PTR [edx+0x565b2ec4]
  415013:	push   ebx
  415014:	pop    ebp
  415015:	push   0x7
  415017:	add    BYTE PTR [edx+0x17],ch
  41501a:	cmp    BYTE PTR [ebp-0x4e],0x8
  41501e:	je     0x41502c
  415020:	inc    edi
  415021:	lahf   
  415022:	lahf   
  415023:	cmova  edi,DWORD PTR [esi+0x362a8305]
  41502a:	add    esi,DWORD PTR [ebp+0x4e]
  41502d:	test   DWORD PTR [ebx+0x5b],0xc24cfbf8
  415034:	aaa    
  415035:	and    cl,BYTE PTR [edx+0x229f3b45]
  41503b:	pop    es
  41503c:	(bad)  
  41503d:	cmc    
  41503e:	(bad)  
  415040:	repz and eax,0x28fbc00a
  415046:	jmp    0x85c8:0xbdeb0cbf
  41504d:	xor    al,BYTE PTR [ebx]
  41504f:	mov    eax,DWORD PTR [edx]
  415051:	ss and al,0x48
  415055:	lahf   
  415056:	lahf   
  415057:	adc    eax,DWORD PTR [edi+0x36]
  41505a:	pop    es
  41505b:	or     eax,DWORD PTR [edi]
  41505d:	ds or  al,0x2b
  415060:	pop    es
  415061:	push   edi
  415062:	mov    esi,0xf2dffe5d
  415067:	inc    DWORD PTR [eax]
  415069:	add    BYTE PTR [ebp-0x19],bl
  41506c:	sbb    eax,0xc7a35375
  415071:	mov    edi,0xb4364c4
  415076:	adc    BYTE PTR [ebp+0x43],bl
  415079:	call   0xff5fd779
  41507e:	add    ebx,DWORD PTR [ecx+0x7cccc3c7]
  415084:	inc    edi
  415085:	mov    esi,0xffc4370d
  41508a:	scas   eax,DWORD PTR es:[edi]
  41508b:	push   ss
  41508c:	add    eax,DWORD PTR [eax]
  41508e:	inc    edi
  41508f:	pcmpgtd mm1,QWORD PTR [ebx+0x4d8a2a52]
  415096:	inc    ebx
  415097:	pcmpgtd mm1,QWORD PTR [ebp-0x4b26f67e]
  41509e:	rcr    DWORD PTR [ebp+0x4d321da8],0xc1
  4150a5:	inc    esp
  4150a6:	jmp    0xd14d:0x321dce13
  4150ad:	cmp    DWORD PTR [ebx+edx*1+0x5121dbe],0x87d0c766
  4150b8:	and    al,0x44
  4150ba:	sub    al,0x14
  4150bc:	sbb    al,0x44
  4150be:	outs   dx,DWORD PTR ds:[esi]
  4150bf:	add    BYTE PTR [edx+0x2c81781d],0x48
  4150c6:	jae    0x415049
  4150c8:	and    al,0x48
  4150ca:	mov    edx,0x89789d
  4150cf:	add    dl,ah
  4150d1:	dec    esp
  4150d2:	inc    eax
  4150d3:	hlt    
  4150d4:	pop    eax
  4150d5:	adc    ebp,ecx
  4150d7:	adc    BYTE PTR [ebx+0x7d99352],ch
  4150dd:	or     DWORD PTR [eax-0x16f6b8f7],esp
  4150e3:	adc    bl,ah
  4150e5:	jle    0x4150c3
  4150e7:	or     edi,DWORD PTR [esp+eax*8-0x7b1cef24]
  4150ee:	lods   al,BYTE PTR ds:[esi]
  4150ef:	and    esi,DWORD PTR [edi+0x12]
  4150f2:	mov    ah,0x43
  4150f4:	sbb    BYTE PTR [ebp+0x6ca02c2c],bl
  4150fa:	cs sbb eax,0x2c2c9d08
  415100:	xor    eax,0xfb1d1e6e
  415105:	test   BYTE PTR [ebx+edx*1+0x5b2094c2],bl
  41510c:	push   edi
  41510d:	or     ecx,ebp
  41510f:	add    edx,esp
  415111:	ins    DWORD PTR es:[edi],dx
  415112:	ins    BYTE PTR es:[edi],dx
  415113:	xchg   edi,eax
  415114:	clc    
  415115:	push   eax
  415116:	add    cl,ah
  415118:	inc    esp
  415119:	or     DWORD PTR [eax],eax
  41511b:	cli    
  41511c:	pusha  
  41511d:	lahf   
  41511e:	add    BYTE PTR [ecx+ecx*4+0x4a],dh
  415122:	push   eax
  415123:	shr    DWORD PTR [esi-0x7b],1
  415126:	add    cl,ch
  415128:	mov    edi,0xc9620f9c
  41512d:	test   al,0xd6
  415130:	inc    edi
  415131:	(bad)  
  415132:	(bad)  
  415133:	xor    eax,0x1fe20000
  415138:	pcmpgtb mm1,QWORD PTR [ecx-0x2ee8afd6]
  41513f:	sub    bh,BYTE PTR [ebx+0x76]
  415142:	inc    esp
  415143:	or     DWORD PTR [ebx+0xac24ca7],eax
  415149:	xchg   esi,eax
  41514a:	fldenv ds:0x1382570f
  415150:	add    DWORD PTR [ecx-0x2dfe65b4],0x34
  415157:	fidiv  WORD PTR [ecx+ebx*8+0x15]
  41515b:	and    ebp,DWORD PTR [edx-0x17]
  41515e:	sahf   
  41515f:	adc    ch,BYTE PTR [ecx-0x17]
  415162:	out    dx,al
  415163:	adc    DWORD PTR [ebp+0x5e],edx
  415166:	rol    DWORD PTR [ecx],1
  415168:	push   0xffffffe9
  41516a:	ficom  WORD PTR [ecx]
  41516c:	out    0xf,eax
  41516e:	not    DWORD PTR [ecx]
  415170:	push   edx
  415172:	test   BYTE PTR [ebp+0x29d49928],bl
  415178:	aam    0x53
  41517a:	xor    edx,DWORD PTR [edx]
  41517c:	mov    edx,DWORD PTR [ecx]
  41517e:	int    0x9f
  415180:	call   DWORD PTR [edx-0x48ad47bc]
  415186:	pop    ebx
  415187:	pushf  
  415188:	jae    0x140f0d2
  41518e:	jmp    0xef415130
  415193:	add    al,al
  415195:	jne    0x41516d
  415197:	pop    eax
  415198:	out    0x9d,eax
  41519a:	add    BYTE PTR [eax],al
  41519c:	je     0x415193
  41519e:	(bad)  
  41519f:	sub    esi,DWORD PTR ds:0x95bc381
  4151a5:	dec    edi
  4151a6:	enter  0xbec2,0x5
  4151aa:	push   ebp
  4151ab:	mov    ecx,DWORD PTR [edx+0x71f0c489]
  4151b1:	pop    edx
  4151b2:	sub    bl,bl
  4151b4:	mov    DWORD PTR [edi+0xb],esi
  4151b7:	call   DWORD PTR [ebx+0x5]
  4151ba:	call   0xff2f44c0
  4151bf:	push   eax
  4151c0:	fnstenv [edi+0x7]
  4151c3:	call   0x3fe8e8
  4151c8:	cmc    
  4151c9:	hlt    
  4151ca:	push   edi
  4151cb:	add    edx,esi
  4151cd:	add    eax,eax
  4151cf:	je     0x4151f2
  4151d1:	add    BYTE PTR [ebp-0xc],0x3e
  4151d5:	out    dx,al
  4151d6:	je     0x4151e4
  4151d8:	fnstenv [edi+0x7]
  4151db:	call   0x4041e5
  4151e0:	out    0x47,eax
  4151e2:	sti    
  4151e3:	(bad)  
  4151e4:	repz cld 
  4151e6:	dec    edi
  4151e7:	call   DWORD PTR [ebx]
  4151e9:	or     edi,edi
  4151eb:	jne    0x415213
  4151ed:	in     eax,0x98
  4151ef:	std    
  4151f0:	jns    0x4151e6
  4151f2:	mov    BYTE PTR [ebp-0x7a],al
  4151f5:	hlt    
  4151f6:	je     0x4151e8
  4151f8:	pop    ecx
  4151f9:	jp     0x4151f2
  4151fb:	call   ebx
  4151fd:	add    bh,bh
  4151ff:	jne    0x415201
  415201:	add    BYTE PTR [edx-0x23],bl
  415204:	adc    dh,bh
  415206:	sub    esp,esi
  415208:	mov    bl,al
  41520a:	pop    ecx
  41520b:	jp     0x415208
  41520d:	call   0xffbe9859
  415212:	call   0xf038e316
  415217:	ds jge 0x415219
  41521a:	fdivr  DWORD PTR [ebx+eax*1+0x57]
  41521e:	ror    BYTE PTR [ebp-0x4e6017f6],1
  415224:	sbb    bh,bh
  415226:	int3   
  415227:	arpl   WORD PTR [esi+0xb648e5e],di
  41522d:	add    BYTE PTR [edx],bl
  41522f:	stos   DWORD PTR es:[edi],eax
  415230:	sub    DWORD PTR es:[edx],0x2e
  415234:	add    DWORD PTR [edx+0x66],esi
  415237:	inc    edi
  415238:	nop
  415239:	sets   ch
  41523c:	or     ebp,eax
  41523e:	(bad)  
  41523f:	scas   al,BYTE PTR es:[edi]
  415240:	sbb    edi,edi
  415242:	mov    ch,dl
  415244:	repz (bad) 
  415246:	cli    
  415247:	sbb    DWORD PTR [ebx],ebp
  415249:	scas   eax,DWORD PTR es:[edi]
  41524a:	jp     0x4152bb
  41524c:	sbb    bh,bh
  41524e:	cli    
  41524f:	adc    DWORD PTR [edx],ebx
  415251:	jne    0x415292
  415253:	mov    bl,BYTE PTR [edi-0x3]
  415256:	pusha  
  415257:	xchg   DWORD PTR [edx],ebx
  415259:	jne    0x415292
  41525b:	(bad)  
  41525c:	pop    DWORD PTR [edi]
  41525e:	pop    edi
  41525f:	in     al,dx
  415260:	sbb    bh,bh
  415262:	dec    eax
  415263:	stos   DWORD PTR es:[edi],eax
  415264:	scas   eax,DWORD PTR es:[edi]
  415265:	adc    eax,DWORD PTR [eax]
  415267:	add    dh,cl
  415269:	and    ebx,DWORD PTR [edx]
  41526b:	jne    0x4152c4
  41526d:	scas   eax,DWORD PTR es:[edi]
  41526e:	pop    DWORD PTR [edi]
  415270:	pop    ds
  415271:	test   eax,0xa328ff17
  415276:	xchg   edi,eax
  415277:	or     eax,DWORD PTR [eax+edx*2-0xf]
  41527b:	(bad)  
  41527c:	xchg   edx,eax
  41527d:	xor    bl,BYTE PTR [edx]
  41527f:	jne    0x4152c0
  415281:	retf   0xfc9a
  415284:	or     bh,bl
  415286:	sbb    DWORD PTR [ebp+0x57],esi
  415289:	or     DWORD PTR [esi],esp
  41528b:	nop
  41528c:	inc    eax
  41528d:	and    DWORD PTR [eax+ebx*1-0x6fe9f010],ecx
  415294:	cmp    BYTE PTR [ebx+0x15a1af0],ah
  41529a:	adc    DWORD PTR [esi-0x4d],ebp
  41529d:	paddd  mm3,QWORD PTR [ecx]
  4152a0:	pop    edx
  4152a1:	stc    
  4152a2:	cmc    
  4152a3:	pop    DWORD PTR [eax+0x21]
  4152a6:	int    0x6f
  4152a8:	ror    BYTE PTR [edi],0xb0
  4152ab:	inc    esi
  4152ac:	push   edi
  4152ad:	or     DWORD PTR [ecx*4+0x85c0fa3],esi
  4152b4:	sbb    eax,0x488fce0a
  4152b9:	and    DWORD PTR [ebp+0x70],esi
  4152bc:	cwde   
  4152bd:	movsx  ecx,BYTE PTR [edi+0xc3c103c]
  4152c4:	lahf   
  4152c5:	daa    
  4152c6:	scas   eax,DWORD PTR es:[edi]
  4152c7:	sbb    DWORD PTR [eax+0xf43c83],eax
  4152cd:	add    bh,cl
  4152cf:	or     bl,BYTE PTR [esi+0x1c103c8f]
  4152d5:	or     al,0x5f
  4152d7:	aaa    
  4152d8:	(bad)  
  4152d9:	sbb    DWORD PTR [eax-0x7d],esp
  4152dc:	sbb    al,0xf0
  4152de:	iret   
  4152df:	or     bh,BYTE PTR [esi-0x71]
  4152e2:	cmp    al,0x10
  4152e4:	cld    
  4152e5:	or     ebx,DWORD PTR [edi+0x47]
  4152e8:	outs   dx,DWORD PTR ds:[esi]
  4152e9:	sbb    DWORD PTR [eax-0x7d],eax
  4152ec:	mov    esp,0x300bcffb
  4152f1:	inc    esi
  4152f2:	pop    ebx
  4152f3:	or     DWORD PTR [esp+ecx*4+0x28258b1b],edi
  4152fa:	jns    0x4152b2
  4152fc:	inc    ebp
  4152fd:	(bad)  
  4152fe:	xor    al,0xa3
  415300:	out    0x18,eax
  415302:	call   0xff7b:0x2410001
  415309:	cs pop esi
  41530b:	xchg   esp,eax
  41530c:	adc    esp,DWORD PTR [esi]
  41530e:	enter  0xe806,0x55
  415312:	jp     0x415322
  415314:	jmp    DWORD PTR [edx+0x53]
  415317:	and    BYTE PTR [ebx],bh
  415319:	call   0xaccc5c62
  41531e:	call   0xc22a8bae
  415323:	add    eax,0x945bfe9
  415328:	add    BYTE PTR [esi],ah
  41532a:	add    BYTE PTR [ebx],dl
  41532c:	add    cl,ch
  41532e:	inc    esp
  41532f:	or     DWORD PTR [ebp+0x4f000024],ecx
  415335:	mov    ecx,0xfb75cfe
  41533a:	jne    0x415335
  41533c:	aas    
  41533d:	xchg   esp,eax
  41533e:	pop    es
  41533f:	shl    DWORD PTR [edx],1
  415341:	ud0    edi,DWORD PTR [esi+0x348311c3]
  415348:	das    
  415349:	or     DWORD PTR [edx+ecx*1-0x4d],esi
  41534d:	and    eax,0xe43283b
  415352:	jne    0x4152f1
  415354:	sbb    al,0x83
  415356:	imul   ebp,ecx,0x44
  415359:	add    al,al
  41535b:	adc    al,0x48
  41535d:	mov    eax,ds:0xe85c2ec
  415362:	(bad)  
  415363:	hlt    
  415364:	cmp    BYTE PTR [ecx],ah
  415366:	jns    0x41536a
  415368:	inc    ebx
  415369:	or     DWORD PTR [ecx+0x7226f24],ecx
  41536f:	cs stc 
  415371:	and    DWORD PTR [eax],eax
  415373:	jmp    0xd4c45cbc
  415378:	pusha  
  415379:	or     DWORD PTR [ecx+esi*8-0x14],esi
  41537d:	or     BYTE PTR [eax],al
  41537f:	add    BYTE PTR [ecx-0x50],dh
  415382:	(bad)  
  415383:	jne    0x4153a7
  415385:	loop   0x4153cd
  415387:	xchg   ebp,eax
  415388:	push   ecx
  415389:	icebp  
  41538a:	(bad)  
  41538b:	jne    0x4153bf
  41538d:	icebp  
  41538e:	je     0x41539c
  415390:	push   esi
  415391:	nop
  415392:	xchg   esp,eax
  415393:	call   DWORD PTR [ecx-0x1d]
  415396:	mov    al,BYTE PTR [eax]
  415398:	add    BYTE PTR [eax],al
  41539a:	fimul  WORD PTR [ecx]
  41539c:	mov    eax,DWORD PTR [ebp-0x26]
  41539f:	test   BYTE PTR [eax],bh
  4153a1:	add    BYTE PTR [ebx+0xf],bl
  4153a4:	call   0x4b322f
  4153a9:	(bad)  
  4153aa:	fwait
  4153ab:	icebp  
  4153ac:	(bad)  
  4153ad:	jmp    FWORD PTR [esi-0x65ba38f7]
  4153b3:	add    al,0x0
  4153b5:	add    BYTE PTR [esi-0x610fbb32],bl
  4153bb:	or     DWORD PTR [eax],eax
  4153bd:	add    BYTE PTR [ebx],al
  4153bf:	dec    eax
  4153c0:	out    dx,eax
  4153c1:	push   eax
  4153c2:	adc    ecx,DWORD PTR [eax-0xd]
  4153c5:	push   eax
  4153c6:	and    ecx,DWORD PTR [eax-0x9]
  4153c9:	push   eax
  4153ca:	shl    DWORD PTR [edi+0x13],1
  4153cd:	(bad)  
  4153ce:	cmp    edi,ebp
  4153d0:	out    0xe1,eax
  4153d2:	mov    al,ds:0x5383fef5
  4153d7:	loope  0x4153d8
  4153d9:	jae    0x415368
  4153db:	mov    bh,BYTE PTR [ebp-0x8]
  4153de:	outs   dx,BYTE PTR ds:[esi]
  4153df:	jge    0x41540d
  4153e1:	add    DWORD PTR [ebx-0x7],0xffffffff
  4153e5:	je     0x41544f
  4153e7:	mov    bh,BYTE PTR [ebp-0x10]
  4153ea:	pop    esi
  4153eb:	jge    0x41540d
  4153ed:	(bad)  
  4153ee:	cmp    esi,ecx
  4153f0:	(bad)  
  4153f1:	jne    0x415425
  4153f3:	loope  0x415431
  4153f5:	xchg   ebp,eax
  4153f6:	xchg   ecx,eax
  4153f7:	hlt    
  4153f8:	(bad)  
  4153f9:	jne    0x415442
  4153fb:	scas   al,BYTE PTR es:[edi]
  4153fc:	push   ss
  4153fd:	jne    0x4153ff
  4153ff:	add    BYTE PTR [ebx-0x36],dl
  415402:	rcl    DWORD PTR [eax+ebx*1+0x177516c4],1
  415409:	int3   
  41540a:	nop
  41540b:	or     ebx,DWORD PTR [edi]
  41540d:	cld    
  41540e:	jo     0x41540f
  415410:	add    ah,bl
  415412:	nop
  415413:	imul   edi
  415415:	cs jnp 0x415417
  415418:	lock jmp 0x4153ab
  41541b:	repz fild WORD PTR [esi+0x7b]
  41541f:	jmp    eax
  415421:	sti    
  415422:	nop
  415423:	out    dx,eax
  415424:	out    dx,eax
  415425:	ds jnp 0x415427
  415428:	rcr    BYTE PTR [ebx+0xa],1
  41542b:	(bad)  
  41542c:	cmp    BYTE PTR [ebp+0x1bc0fea8],bl
  415432:	cmp    BYTE PTR [ebp-0x55],0x22
  415436:	(bad)  
  415437:	sbb    eax,0x7516221d
  41543c:	cmp    ecx,DWORD PTR [edx+0x6f]
  41543f:	xchg   esp,eax
  415440:	mov    al,ds:0x99ffa93b
  415445:	int    0x7
  415447:	call   0xff570b09
  41544c:	sbb    eax,0x53751622
  415451:	dec    edx
  415452:	adc    DWORD PTR [eax+edi*2+0x73751663],0x7a
  41545a:	es xchg edi,eax
  41545c:	push   0x590ac573
  415461:	sub    eax,DWORD PTR [eax+0x590000bd]
  415467:	adc    DWORD PTR [esi],0x5f
  41546a:	icebp  
  41546b:	pop    eax
  41546c:	inc    ecx
  41546d:	adc    BYTE PTR [edi-0x13],al
  415470:	mov    ch,ah
  415472:	les    esp,FWORD PTR [ebp+0x1f]
  415475:	push   esi
  415476:	cmp    BYTE PTR [ecx],cl
  415478:	fmul   QWORD PTR [ebx]
  41547a:	pop    ds
  41547b:	je     0x4154eb
  41547d:	push   ss
  41547e:	sub    BYTE PTR [edx-0x723bf054],al
  415484:	push   esp
  415485:	repz xchg ebp,eax
  415487:	inc    DWORD PTR [eax-0x16f6b8fc]
  41548d:	mov    ch,0xff
  41548f:	inc    esi
  415490:	loope  0x415495
  415492:	add    BYTE PTR [esi+0x79da2be0],dl
  415498:	es push ss
  41549a:	or     dh,al
  41549c:	and    BYTE PTR [edi+eax*2],al
  41549f:	or     ecx,ebp
  4154a1:	mov    BYTE PTR [edx+0x5216b911],cl
  4154a7:	add    DWORD PTR [ecx],edx
  4154a9:	fidiv  WORD PTR [esi-0x7d7401f5]
  4154af:	or     eax,0x8b8986a
  4154b4:	jne    0x4154bd
  4154b6:	les    ecx,FWORD PTR [ebp+0x33502e4]
  4154bc:	push   0xffffff97
  4154be:	lods   al,BYTE PTR ds:[esi]
  4154bf:	add    bl,BYTE PTR [edi+0xa]
  4154c2:	fisttp WORD PTR [ecx]
  4154c4:	jmp    0xafec9bcc
  4154c9:	inc    edx
  4154ca:	add    BYTE PTR [eax],al
  4154cc:	aas    
  4154cd:	or     DWORD PTR [edi+edi*4-0x70],ebp
  4154d1:	mov    eax,0x21488fb5
  4154d6:	lods   eax,DWORD PTR ds:[esi]
  4154d7:	jae    0x415551
  4154d9:	or     ebp,DWORD PTR [edx-0x69]
  4154dc:	js     0x4154e6
  4154de:	adc    eax,0x1d493c00
  4154e3:	or     bl,BYTE PTR [edi+0x4703e909]
  4154e9:	stos   DWORD PTR es:[edi],eax
  4154ea:	scas   eax,DWORD PTR es:[edi]
  4154eb:	inc    edx
  4154ec:	aas    
  4154ed:	or     DWORD PTR [edx-0x69],ebp
  4154f0:	dec    esp
  4154f1:	add    eax,0x7e3bfb00
  4154f6:	inc    ebp
  4154f7:	jno    0x4154ec
  4154f9:	mov    al,ds:0x2c06617
  4154fe:	call   0xff4c0bc4
  415503:	fs loopne 0x415518
  415506:	push   eax
  415507:	dec    esi
  415508:	enter  0xe802,0x31
  41550c:	xchg   esp,eax
  41550d:	or     bh,bh
  41550f:	jo     0x4154d9
  415511:	es jmp 0x4154e8
  415514:	leave  
  415515:	(bad)  
  415516:	neg    DWORD PTR [ecx+0x11079453]
  41551c:	cmp    BYTE PTR [eax-0x1],0x1e
  415520:	mov    esp,0xa064e3c4
  415525:	adc    dl,BYTE PTR [eax-0x7d]
  415528:	fmul   DWORD PTR [ebx]
  41552a:	jne    0x41551d
  41552c:	sbb    al,0xdf
  41552e:	xchg   ecx,eax
  41552f:	inc    BYTE PTR [eax]
  415531:	add    BYTE PTR [ebx],dh
  415533:	jl     0x41557a
  415535:	icebp  
  415536:	hlt    
  415537:	or     esi,DWORD PTR [ebp-0x1f]
  41553a:	ins    BYTE PTR es:[edi],dx
  41553b:	ss cli 
  41553d:	out    0x5b,al
  41553f:	xchg   BYTE PTR [ebp-0x3b],bh
  415542:	inc    ebp
  415543:	xchg   esp,eax
  415544:	sbb    eax,0x5012e164
  415549:	into   
  41554a:	leave  
  41554b:	push   cs
  41554c:	(bad)  
  41554d:	cmp    al,0x3f
  41554f:	or     dh,BYTE PTR [ebp-0xf]
  415552:	pop    esp
  415553:	pop    ebx
  415554:	std    
  415555:	mov    dh,0x5b
  415557:	jl     0x41559e
  415559:	mov    cl,0xb4
  41555b:	or     esi,DWORD PTR [ebp-0xf]
  41555e:	sbb    al,0x5a
  415560:	cli    
  415561:	sahf   
  415562:	push   ebx
  415563:	xchg   BYTE PTR [ebp-0x6f],bh
  415566:	inc    esp
  415567:	xchg   esp,eax
  415568:	or     DWORD PTR [ecx+0x44],edx
  41556b:	or     DWORD PTR [eax],eax
  41556d:	add    BYTE PTR [esi+0x54],bl
  415570:	enter  0x56c2,0x6
  415574:	lea    eax,[ebp-0x4a]
  415577:	push   esi
  415578:	(bad)  
  415579:	jne    0x415525
  41557b:	cmc    
  41557c:	je     0x41558a
  41557e:	test   eax,0x9ee8077b
  415583:	repz (bad) 
  415585:	jmp    FWORD PTR [ebp-0xcff088d]
  41558b:	push   DWORD PTR [edi+0x61e00]
  415591:	pop    esi
  415592:	push   edi
  415593:	enter  0x7,0x0
  415597:	add    BYTE PTR [ebx+0x4b],ch
  41559a:	not    DWORD PTR [eax+0x29]
  41559d:	jnp    0x4155a6
  41559f:	call   0x3fec8a
  4155a4:	jne    0x41559c
  4155a6:	call   0x4744a6
  4155ab:	push   DWORD PTR [ebx+0x6ce7e7fd]
  4155b1:	cmc    
  4155b2:	(bad)  
  4155b3:	cmp    esp,DWORD PTR [ebx+0x470574f9]
  4155b9:	std    
  4155ba:	(bad)  
  4155bb:	jmp    FWORD PTR [esi-0x5f038278]
  4155c1:	jae    0x4155e6
  4155c3:	lea    esp,[ebx-0x3]
  4155c6:	dec    edi
  4155c7:	inc    DWORD PTR [ebx]
  4155c9:	or     eax,0xf61f0de7
  4155ce:	dec    BYTE PTR [ebp-0xb0029d]
  4155d4:	push   ebx
  4155d5:	or     eax,0xf5b43ae7
  4155da:	dec    BYTE PTR [ebp-0xb002dd]
  4155e0:	push   ebx
  4155e1:	or     eax,0xf5a42ee7
  4155e6:	dec    BYTE PTR [ebp+0x500bdd47]
  4155ec:	pop    eax
  4155ed:	hlt    
  4155ee:	sti    
  4155ef:	out    0x74,eax
  4155f1:	xchg   BYTE PTR [ebx],dl
  4155f3:	(bad)  
  4155f4:	mov    esi,0x8a8d13e4
  4155f9:	jp     0x4155af
  4155fb:	inc    BYTE PTR [eax]
  4155fd:	add    BYTE PTR [edx+0x2cc41aea],dh
  415603:	jo     0x415618
  415605:	mov    DWORD PTR [edx+0x1f458156],eax
  41560b:	ret    
  41560c:	adc    DWORD PTR [ebp+0x4f],esi
  41560f:	dec    edx
  415610:	pop    ecx
  415611:	sti    
  415612:	adc    BYTE PTR [eax+0x7d],dl
  415615:	inc    ebp
  415616:	pop    ds
  415617:	je     0x4155aa
  415619:	out    dx,eax
  41561a:	inc    edi
  41561b:	(bad)  
  41561c:	xchg   ebp,eax
  41561d:	cmp    BYTE PTR [edx+0x46],0x4
  415621:	je     0x415685
  415623:	jae    0x4155b6
  415625:	out    0x47,eax
  415627:	sahf   
  415628:	test   eax,0x41a6282
  41562d:	je     0x415695
  41562f:	mov    bl,BYTE PTR [eax]
  415631:	cmp    eax,DWORD PTR [esi-0x288aee0e]
  415637:	sbb    cl,BYTE PTR [edi+0x68]
  41563a:	inc    edi
  41563b:	repnz std 
  41563d:	mov    edi,0xe49ad832
  415642:	ins    BYTE PTR es:[edi],dx
  415643:	xor    DWORD PTR [edi+edi*8],eax
  415646:	xor    ah,dl
  415648:	sbb    ch,BYTE PTR [edx+0xb02f22f]
  41564e:	xchg   DWORD PTR [ebp+0x1],ebx
  415651:	push   0xffc50ba2
  415656:	mov    DWORD PTR ds:0x4adee814,edi
  41565c:	add    al,0x0
  41565e:	dec    esp
  41565f:	mov    dl,0x96
  415661:	sub    eax,0x8df0000
  415666:	jmp    0x9e08ae6e
  41566b:	cwde   
  41566c:	dec    esp
  41566d:	icebp  
  41566e:	sbb    esi,DWORD PTR [esi+0x58]
  415671:	or     BYTE PTR [esi-0x3f79f68],cl
  415677:	jmp    DWORD PTR [eax-0x2b]
  41567a:	pop    edx
  41567b:	adc    al,BYTE PTR [eax+0x8]
  41567e:	cld    
  41567f:	pop    ds
  415680:	cmp    BYTE PTR [esi-0x23],bh
  415683:	sbb    eax,DWORD PTR [esi]
  415685:	fwait
  415686:	adc    ch,BYTE PTR gs:[eax]
  415689:	jle    0x4156dc
  41568b:	adc    bl,BYTE PTR [edx-0x4aa6beeb]
  415691:	pop    es
  415692:	dec    esi
  415693:	adc    bl,BYTE PTR [edx-0x4db9af07]
  415699:	pop    es
  41569a:	adc    bh,BYTE PTR ds:[edx-0xb]
  41569e:	inc    eax
  41569f:	dec    esi
  4156a0:	rol    BYTE PTR [edi],cl
  4156a2:	adc    bh,BYTE PTR cs:[edx-0xf]
  4156a6:	adc    BYTE PTR [esi-0x2e],dl
  4156a9:	pop    es
  4156aa:	push   ds
  4156ab:	rol    ebp,0x85
  4156ae:	adc    DWORD PTR [ebx],eax
  4156b0:	push   ebx
  4156b1:	adc    edx,esp
  4156b3:	sbb    DWORD PTR [eax-0x72],eax
  4156b6:	std    
  4156b7:	adc    al,cl
  4156b9:	pop    es
  4156ba:	jb     0x415684
  4156bc:	mov    eax,0x4f452066
  4156c1:	or     DWORD PTR [esi+edi*2+0x10ac8ba3],edx
  4156c8:	add    BYTE PTR [eax],al
  4156ca:	test   al,0x7d
  4156cc:	in     eax,dx
  4156cd:	sbb    ecx,DWORD PTR [ecx+eax*8]
  4156d0:	aad    0x11
  4156d2:	dec    esp
  4156d3:	leave  
  4156d4:	push   ebx
  4156d5:	rol    ebx,1
  4156d7:	dec    ebp
  4156d8:	lds    esi,FWORD PTR [eax+eiz*4-0x7fee9327]
  4156df:	pop    es
  4156e0:	add    BYTE PTR [edi+edx*2],bh
  4156e3:	or     BYTE PTR [ebp-0x23],dh
  4156e6:	dec    esp
  4156e7:	ror    BYTE PTR [ebp-0x3feba95a],0x15
  4156ee:	push   esi
  4156ef:	push   es
  4156f0:	jne    0x4156d3
  4156f2:	aaa    
  4156f3:	jle    0x4156f1
  4156f5:	cmp    DWORD PTR [esi+0x4a86ff05],0xdcd974c7
  4156ff:	push   es
  415700:	jbe    0xddb65d9b
  415706:	push   edi
  415707:	jl     0x415711
  415709:	push   ecx
  41570a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41570b:	mov    esi,0x7c365efe
  415710:	cld    
  415711:	inc    ecx
  415712:	mov    edx,DWORD PTR [ebp-0x34b3b102]
  415718:	pop    es
  415719:	jmp    0x692ceaef
  41571e:	(bad)  
  41571f:	mov    ebp,0xce5636fd
  415724:	test   BYTE PTR [ecx+0x55],dh
  415727:	push   es
  415728:	(bad)  
  415729:	jmp    0x72416072
  41572e:	add    BYTE PTR [eax],al
  415730:	or     BYTE PTR [ebx],dl
  415732:	or     ebp,DWORD PTR [ecx]
  415734:	mov    edi,0x44d1800d
  415739:	jl     0x415740
  41573b:	adc    BYTE PTR [ecx+ecx*1+0x7c57e900],dl
  415742:	or     al,0x1
  415744:	inc    edi
  415745:	test   eax,0xc6b3eefe
  41574a:	je     0x415742
  41574c:	int3   
  41574d:	jns    0x41577b
  41574f:	sub    BYTE PTR [ebx+0x6],cl
  415752:	jne    0x415739
  415754:	cmp    al,0xb0
  415756:	xchg   edi,eax
  415757:	into   
  415758:	aaa    
  415759:	repnz or al,0x0
  41575c:	mul    BYTE PTR [edx+0x196e412a]
  415762:	jne    0x415770
  415764:	xchg   BYTE PTR [eax+ebx*4-0x1],dh
  415768:	mov    eax,ds:0xa0b88583
  41576d:	sbb    edi,edi
  41576f:	push   0xb80
  415774:	jecxz  0x415704
  415776:	sar    esi,0xc1
  415779:	sbb    DWORD PTR [eax-0x18],edx
  41577c:	ins    BYTE PTR es:[edi],dx
  41577d:	jg     0x41577e
  41577f:	push   DWORD PTR [ebx-0x4e013e71]
  415785:	sbb    DWORD PTR [eax-0x1],edx
  415788:	jnp    0x4157dc
  41578a:	(bad)  
  41578b:	jmp    DWORD PTR [ecx+0x2e664e22]
  415791:	or     cl,BYTE PTR [ecx-0x4dffff7b]
  415797:	pop    ss
  415798:	(bad)  
  415799:	(bad)  
  41579a:	fimul  WORD PTR [eax]
  41579c:	test   bl,dh
  41579e:	push   ds
  41579f:	or     al,BYTE PTR [eax]
  4157a1:	lea    ebx,[ebx+0x31fffe4c]
  4157a7:	and    DWORD PTR [edx],eax
  4157a9:	adc    dh,bl
  4157ab:	or     DWORD PTR [eax],eax
  4157ad:	je     0x415752
  4157af:	xchg   BYTE PTR [edx+0x2c],al
  4157b2:	sahf   
  4157b3:	mov    eax,ds:0x9af2c6a
  4157b8:	call   0x4b1fe8
  4157bd:	or     ebx,DWORD PTR [esi]
  4157bf:	lahf   
  4157c0:	add    ebp,ecx
  4157c2:	pop    ss
  4157c3:	or     al,BYTE PTR [eax]
  4157c5:	add    BYTE PTR [ebx],ah
  4157c7:	jg     0x41578b
  4157c9:	(bad)  
  4157ca:	mov    eax,ds:0x52428d15
  4157cf:	mov    ebp,0xcc526e66
  4157d4:	(bad)  
  4157d5:	out    0x47,eax
  4157d7:	out    dx,al
  4157d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157d9:	call   DWORD PTR [eax+0x427542ea]
  4157df:	fnstcw WORD PTR [edi+0x0]
  4157e2:	inc    edi
  4157e3:	lock or eax,0x9fc84b75
  4157e9:	sahf   
  4157ea:	jo     0x4157a2
  4157ec:	cli    
  4157ed:	mov    edi,0x7f9afef2
  4157f2:	das    
  4157f3:	xor    DWORD PTR [edi+edi*8],eax
  4157f6:	shr    bl,cl
  4157f8:	sbb    cl,BYTE PTR [ecx]
  4157fa:	add    BYTE PTR [eax],al
  4157fc:	scas   eax,DWORD PTR es:[edi]
  4157fd:	xchg   esi,eax
  4157fe:	push   cs
  4157ff:	jmp    0x41583e
  415801:	sbb    al,BYTE PTR [edi+edi*8]
  415804:	mov    edx,0xd0fd1af6
  415809:	jnp    0x41581a
  41580b:	(bad)  
  41580c:	fidiv  DWORD PTR [eax+0x7e28ff0d]
  415812:	mov    dl,0x2b
  415814:	jne    0x4157d8
  415816:	sbb    al,BYTE PTR [ecx-0x41]
  415819:	pop    ebx
  41581a:	(bad)  
  41581c:	adc    dh,bl
  41581e:	repnz dec edi
  415820:	or     dh,al
  415822:	cli    
  415823:	out    0xfd,eax
  415825:	inc    esp
  415826:	ud0    ebp,edi
  415829:	(bad)  
  41582a:	jbe    0x41582b
  41582c:	lock inc edi
  41582e:	ret    
  41582f:	mov    WORD PTR [ebp-0x647a8422],es
  415835:	and    al,0xf
  415837:	(bad)  
  415838:	fsub   DWORD PTR [ebp+0x5e9afef2]
  41583e:	push   cs
  41583f:	dec    eax
  415841:	sbb    cl,BYTE PTR [edi+0x66]
  415844:	inc    edi
  415845:	repnz stc 
  415847:	mov    edi,0x7f9aca33
  41584c:	pop    edi
  41584d:	mov    cl,0x2
  41584f:	push   DWORD PTR [edx]
  415851:	or     ebp,esi
  415853:	sbb    edx,esi
  415855:	pushf  
  415856:	fisttp QWORD PTR [esi]
  415858:	cwde   
  415859:	mov    esi,0x4900d9c
  41585e:	cmp    DWORD PTR [eax+eax*1],ebx
  415861:	add    BYTE PTR [esi+0x170ec59c],cl
  415867:	pop    ecx
  415868:	mov    esi,0x48f14098
  41586d:	push   cs
  41586e:	jo     0x415874
  415870:	rcl    DWORD PTR [esi],0xd4
  415873:	add    al,0xa6
  415875:	or     dl,0xc7
  415878:	sahf   
  415879:	push   cs
  41587a:	pop    eax
  41587b:	pop    ecx
  41587c:	xchg   esi,eax
  41587d:	pop    eax
  41587e:	xchg   ebx,eax
  41587f:	add    ecx,DWORD PTR [esi+0xc765f0e]
  415885:	add    al,0x47
  415887:	mov    gs,WORD PTR [eax+0x7620c3fe]
  41588d:	push   cs
  41588e:	xor    BYTE PTR [esp+esi*1],al
  415891:	dec    edi
  415892:	sub    DWORD PTR [esi+eiz*2],eax
  415895:	sbb    esp,DWORD PTR [edi+0x1803e96e]
  41589b:	mov    esi,0x4100d90
  4158a0:	inc    ecx
  4158a1:	inc    esi
  4158a2:	mov    ah,0x3
  4158a4:	inc    esi
  4158a5:	cmp    al,0x5
  4158a7:	adc    eax,0xf4cdb8e9
  4158ac:	addr16 inc edi
  4158ae:	mov    bh,0x2
  4158b0:	cs push cs
  4158b2:	add    BYTE PTR [esi+0x3e00d60],cl
  4158b8:	jmp    0x624a9fc0
  4158bd:	enter  0x103c,0x29
  4158c1:	xchg   edi,eax
  4158c2:	inc    ebx
  4158c3:	mov    eax,eax
  4158c5:	add    eax,DWORD PTR [eax]
  4158c7:	add    BYTE PTR [edx],bh
  4158c9:	push   cs
  4158ca:	adc    ah,bh
  4158cc:	inc    edi
  4158cd:	or     DWORD PTR [eax],eax
  4158cf:	jmp    0xa86dd1a0
  4158d4:	inc    esp
  4158d5:	add    al,0x75
  4158d7:	cmc    
  4158d8:	cmp    al,0x3a
  4158da:	xchg   edi,eax
  4158db:	fimul  WORD PTR [edx-0x6e]
  4158de:	test   BYTE PTR [ecx+0x41ff0441],dl
  4158e4:	jns    0x4158ee
  4158e6:	add    cl,ch
  4158e8:	add    DWORD PTR [esi+0x44abfc1],ecx
  4158ee:	push   eax
  4158ef:	ror    DWORD PTR [eax+ebx*4],0xfe
  4158f3:	scas   al,BYTE PTR es:[edi]
  4158f4:	call   0x52e91a86
  4158f9:	add    al,0x50
  4158fb:	sahf   
  4158fc:	lock sar ch,0x96
  415900:	inc    edx
  415901:	icebp  
  415902:	in     al,0x5
  415904:	inc    ebx
  415905:	or     DWORD PTR [ecx-0xfc6894],ecx
  41590b:	jle    0x415910
  41590d:	adc    al,0x84
  41590f:	scas   eax,DWORD PTR es:[edi]
  415910:	dec    ebx
  415911:	or     DWORD PTR [eax],eax
  415913:	pop    esp
  415914:	mov    al,0xc7
  415916:	std    
  415917:	push   dx
  415919:	cli    
  41591a:	add    ecx,edi
  41591c:	inc    esp
  41591d:	or     DWORD PTR [eax],eax
  41591f:	out    0xc8,al
  415921:	xchg   edx,eax
  415922:	(bad)  
  415923:	call   0x2bd5ed6c
  415928:	push   ecx
  415929:	add    bh,bh
  41592b:	ins    BYTE PTR es:[edi],dx
  41592c:	add    BYTE PTR [eax],al
  41592e:	add    eax,0xd0c1502f
  415933:	cs inc ecx
  415935:	jmp    0xe9a51a86
  41593a:	inc    esp
  41593b:	push   cs
  41593c:	rcl    BYTE PTR [esi+eax*2+0x586474ee],0xc7
  415944:	std    
  415945:	push   cs
  415946:	cmp    dl,BYTE PTR [ecx+eax*2+0x66b69a00]
  41594d:	outs   dx,BYTE PTR ds:[esi]
  41594e:	mov    al,bh
  415950:	(bad)  
  415951:	out    0x18,eax
  415953:	mov    cl,0xfe
  415955:	jmp    DWORD PTR [ebp+0x75027546]
  41595b:	mov    cl,0x8b
  41595d:	xchg   ebp,eax
  41595e:	in     al,dx
  41595f:	adc    al,0xff
  415961:	jmp    FWORD PTR [ebx]
  415963:	enter  0x892a,0x23
  415967:	pop    edx
  415968:	(bad)  
  415969:	dec    DWORD PTR [ecx+0x2f287e9e]
  41596f:	or     eax,0x1e6a75ff
  415974:	cdq    
  415975:	xchg   esi,eax
  415976:	cdq    
  415977:	adc    eax,0x1402b5ff
  41597c:	(bad)  
  41597d:	call   FWORD PTR [esi]
  41597f:	and    eax,0x15b996e1
  415984:	mov    DWORD PTR [ebp-0xec12],eax
  41598a:	pop    esi
  41598b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598c:	sti    
  41598d:	cmp    ebp,DWORD PTR [edi+0xd]
  415990:	push   DWORD PTR [ebp+0x146e0000]
  415996:	(bad)  
  415997:	inc    esi
  415999:	cwde   
  41599a:	arpl   WORD PTR [eax],ax
  41599c:	add    DWORD PTR cs:[edi+0x19e1d74],edi
  4159a3:	cmp    al,0xdf
  4159a5:	add    eax,0x13aeb5ff
  4159aa:	(bad)  
  4159ab:	dec    DWORD PTR [ecx+0x7e8069b]
  4159b1:	adc    edi,edi
  4159b3:	inc    DWORD PTR [esi+0x19ff9251]
  4159b9:	add    DWORD PTR [ebp-0xead73e],0x50
  4159c0:	cmp    DWORD PTR [ebx-0x44],ebx
  4159c3:	inc    BYTE PTR [edi+0x1b]
  4159c6:	or     al,0xe8
  4159c8:	push   ss
  4159c9:	mov    WORD PTR [edx],es
  4159cb:	add    dl,cl
  4159cd:	das    
  4159ce:	cld    
  4159cf:	test   BYTE PTR [edx],al
  4159d1:	add    ecx,DWORD PTR [ebx]
  4159d3:	push   DWORD PTR [eax-0x5701b0bc]
  4159d9:	repnz sbb DWORD PTR [ebx+ebp*1],esp
  4159dd:	lock add bh,bh
  4159e0:	shl    BYTE PTR [edi-0x386f00f7],cl
  4159e6:	jle    0x41597a
  4159e8:	mov    dl,dl
  4159ea:	cmp    al,0xc2
  4159ec:	dec    edi
  4159ed:	lock scas eax,DWORD PTR es:[edi]
  4159ef:	mov    ch,BYTE PTR [ebx-0x3e]
  4159f2:	nop
  4159f3:	or     ebx,DWORD PTR [edi-0x5a]
  4159f6:	jno    0x4159f7
  4159f8:	add    BYTE PTR [eax],al
  4159fa:	push   0x507442e6
  4159ff:	inc    eax
  415a00:	mov    ah,0xfe
  415a02:	shl    bh,cl
  415a04:	sbb    ch,BYTE PTR [ebx-0x17f565af]
  415a0a:	fidivr WORD PTR [ebp+0xb]
  415a0d:	dec    DWORD PTR [esi]
  415a0f:	mov    ch,0xfb
  415a11:	call   DWORD PTR [ebx+0xb83187b]
  415a17:	ja     0x4159b7
  415a19:	call   FWORD PTR [esi+0x4f7509d1]
  415a1f:	pop    edx
  415a20:	jg     0x4159b1
  415a22:	sbb    BYTE PTR [eax+0x7d],ah
  415a25:	inc    ebp
  415a26:	adc    ecx,ebp
  415a28:	in     al,dx
  415a29:	(bad)  
  415a2a:	xchg   edx,eax
  415a2b:	jmp    0x6a0b:0x4800bf1a
  415a32:	and    al,0x3f
  415a34:	xchg   ecx,eax
  415a35:	pop    es
  415a36:	fistp  QWORD PTR [ebp+0xb]
  415a39:	(bad)  
  415a3a:	call   0x5b40410b
  415a3f:	or     ecx,esi
  415a41:	sbb    ebp,DWORD PTR [eax+eax*1+0x95d0b1e]
  415a48:	and    eax,0x9be94a0c
  415a4e:	push   ebx
  415a4f:	cmp    eax,0x36b803a8
  415a54:	out    dx,al
  415a55:	fadd   QWORD PTR [edi]
  415a57:	or     DWORD PTR [ecx],eax
  415a59:	xlat   BYTE PTR ds:[ebx]
  415a5a:	rol    DWORD PTR [eax],cl
  415a5c:	out    dx,al
  415a5d:	inc    BYTE PTR [eax]
  415a5f:	add    al,ah
  415a61:	jne    0x415a60
  415a63:	mov    bl,0x20
  415a65:	or     al,0x1d
  415a67:	lds    edx,FWORD PTR [eax+0x4090d650]
  415a6d:	icebp  
  415a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a6f:	pop    es
  415a70:	add    BYTE PTR [eax],0xd1
  415a73:	push   es
  415a74:	aad    0x0
  415a76:	mov    esi,0xfc68709d
  415a7b:	mov    DWORD PTR [edi],0x1cf94109
  415a81:	dec    edx
  415a82:	jmp    0xd0516c91
  415a87:	les    edx,FWORD PTR [eax-0x18]
  415a8a:	in     al,dx
  415a8b:	jo     0x415ad5
  415a8d:	add    dl,ah
  415a8f:	inc    ebx
  415a90:	mov    ebx,0x459c1915
  415a95:	cmp    eax,0x970428
  415a9a:	cld    
  415a9b:	sti    
  415a9c:	and    BYTE PTR [ebx-0xedff594],bl
  415aa2:	cmp    al,0x74
  415aa4:	sbb    BYTE PTR [eax],al
  415aa6:	rol    DWORD PTR [ebx],cl
  415aa8:	popf   
  415aa9:	or     ecx,eax
  415aab:	ret    0x4a4c
  415aae:	jmp    0xe9415b4e
  415ab3:	sub    edi,0xffffffe1
  415ab6:	push   esp
  415ab7:	or     dh,al
  415ab9:	adc    eax,DWORD PTR [eax]
  415abb:	sub    DWORD PTR [eax+0x3c99502b],edi
  415ac1:	sbb    BYTE PTR [ebx+0x4d000026],0x14
  415ac8:	rcl    BYTE PTR [ebp-0x1597b020],0x0
  415acf:	dec    ecx
  415ad0:	add    BYTE PTR [ecx+0x1108764d],bh
  415ad6:	loopne 0x415adb
  415ad8:	(bad)  
  415ad9:	dec    BYTE PTR [ebp-0x61]
  415adc:	nop
  415add:	idiv   BYTE PTR [esi]
  415adf:	icebp  
  415ae0:	cwde   
  415ae1:	pop    eax
  415ae2:	dec    ebp
  415ae3:	add    bh,bh
  415ae5:	pop    esp
  415ae6:	dec    edi
  415ae7:	add    BYTE PTR [ebp-0xf],dh
  415aea:	sub    al,0xd
  415aec:	(bad)  
  415aed:	(bad)  
  415aee:	ds rol cl,cl
  415af1:	in     eax,0x44
  415af3:	push   esi
  415af4:	mov    edx,ebp
  415af6:	(bad)  
  415af7:	(bad)  
  415af8:	jmp    0x415ab0
  415afa:	add    BYTE PTR ds:[ebp-0xa6c0d4],cl
  415b01:	xor    al,0x5b
  415b03:	(bad)  
  415b04:	je     0x415afb
  415b06:	cmp    al,0xdb
  415b08:	(bad)  
  415b09:	jmp    0xe7016f52
  415b0e:	leave  
  415b0f:	sar    edi,cl
  415b11:	call   0x8186215a
  415b16:	inc    ebx
  415b17:	or     DWORD PTR [eax],eax
  415b19:	jmp    0x77359fa5
  415b1e:	inc    esi
  415b1f:	or     DWORD PTR [eax],eax
  415b21:	add    ecx,DWORD PTR [ebx+0x73]
  415b24:	add    bl,dl
  415b26:	inc    esp
  415b27:	jae    0x415b29
  415b29:	ins    BYTE PTR es:[edi],dx
  415b2a:	add    BYTE PTR [eax],al
  415b2c:	sar    dl,1
  415b2e:	dec    edi
  415b2f:	fs mov ch,dh
  415b32:	test   BYTE PTR [esi+0x4e],0x59
  415b36:	inc    DWORD PTR [eax]
  415b38:	mov    ebx,0x3275ff12
  415b3d:	sbb    eax,0xade63a4
  415b42:	or     eax,eax
  415b44:	call   0xa:0xee8ee7ff
  415b4b:	push   0x3fdd5e
  415b50:	xor    DWORD PTR [esi+0x7969e80e],ecx
  415b56:	(bad)  
  415b57:	(bad)  
  415b58:	fidivr WORD PTR [ebp-0x30]
  415b5b:	lea    ebp,[ebx]
  415b5d:	sbb    edi,esi
  415b5f:	push   DWORD PTR [ecx+0x59e850ba]
  415b65:	jns    0x415b66
  415b67:	call   DWORD PTR [edi]
  415b69:	jg     0x415b5b
  415b6b:	div    DWORD PTR [ecx+0x11]
  415b6e:	call   0xff526a80
  415b73:	push   0x6e
  415b75:	mov    ds:0x52f3c8b,al
  415b7a:	push   DWORD PTR [ebp-0xe652]
  415b80:	mov    cl,0x8f
  415b82:	or     ch,al
  415b84:	jle    0x415bf4
  415b86:	(bad)  
  415b87:	call   edi
  415b89:	jle    0x415b77
  415b8b:	div    DWORD PTR [ecx+0xbd8311]
  415b91:	add    dl,al
  415b93:	sbb    edi,edi
  415b95:	jmp    FWORD PTR [esi]
  415b97:	mov    ss,WORD PTR [ecx]
  415b99:	push   0xbeef0a2f
  415b9e:	mov    cl,0x4f
  415ba0:	in     al,dx
  415ba1:	div    DWORD PTR [ecx+0x2675ff11]
  415ba7:	and    dl,BYTE PTR [edi-0xee5e4e]
  415bad:	mov    ch,0x82
  415baf:	sbb    edi,edi
  415bb1:	inc    DWORD PTR [edi+0x48]
  415bb4:	cmp    al,0x90
  415bb6:	add    BYTE PTR [edi+0x8],cl
  415bb9:	mov    ch,0xf7
  415bbb:	ds or  bh,bh
  415bbe:	lock mov ah,0xf6
  415bc1:	(bad)  
  415bc2:	jb     0x415bac
  415bc4:	sbb    dh,BYTE PTR [eax]
  415bc6:	loopne 0x415bf6
  415bc8:	or     bh,bh
  415bca:	xchg   edx,eax
  415bcb:	pop    ds
  415bcc:	adc    bh,bh
  415bce:	rcl    BYTE PTR [edi],1
  415bd0:	pop    eax
  415bd1:	nop
  415bd2:	enter  0x816,0x45
  415bd6:	mov    edi,0xb8febf08
  415bdb:	push   es
  415bdc:	or     BYTE PTR [ebp-0x4d],dh
  415bdf:	pop    ss
  415be0:	or     ah,BYTE PTR [edx+0x47]
  415be3:	lock cmp edx,eax
  415be6:	push   ebx
  415be7:	lock lods eax,DWORD PTR ds:[esi]
  415be9:	mov    ch,BYTE PTR [ebx-0x6717bf90]
  415bef:	fiadd  WORD PTR [esi]
  415bf1:	lea    eax,[edx]
  415bf3:	aam    0xb3
  415bf5:	inc    BYTE PTR [eax]
  415bf7:	add    dl,bh
  415bf9:	inc    DWORD PTR ds:0x22d84b75
  415bff:	bound  eax,QWORD PTR [edi-0x10]
  415c02:	stc    
  415c03:	mov    edi,0xe66d38
  415c08:	inc    edi
  415c09:	lock cmp eax,0x2ef5f45
  415c0f:	add    BYTE PTR [edi-0x59],al
  415c12:	shl    bl,0x48
  415c15:	out    dx,al
  415c16:	add    al,BYTE PTR [eax]
  415c18:	lods   eax,DWORD PTR ds:[esi]
  415c19:	repnz cwde 
  415c1b:	jmp    FWORD PTR [esi-0x3c00670e]
  415c21:	and    eax,0x6dba5010
  415c26:	adc    bh,dh
  415c28:	and    BYTE PTR [esp+esi*4-0x2],ch
  415c2c:	xchg   edx,eax
  415c2d:	or     DWORD PTR [ecx+0x7],esp
  415c30:	call   0xe909:0xa55150fd
  415c37:	cli    
  415c38:	shl    BYTE PTR [ebp-0x1c],0x1c
  415c3c:	out    0x9,al
  415c3e:	jmp    0x10cabb46
  415c43:	(bad)
  415c46:	mov    ebx,0x59e1e8f3
  415c4b:	pop    es
  415c4c:	fcomp  DWORD PTR [ecx+0x72]
  415c4f:	xor    al,0xc2
  415c51:	xchg   BYTE PTR [edi+ecx*1],dl
  415c54:	enter  0xb8fc,0xb1
  415c58:	test   al,0xd1
  415c5a:	jns    0x415c63
  415c5c:	add    BYTE PTR [eax],al
  415c5e:	mov    eax,0xb8146b92
  415c63:	cld    
  415c64:	std    
  415c65:	sbb    ecx,DWORD PTR [ecx-0x67]
  415c68:	cmc    
  415c69:	push   es
  415c6a:	sub    eax,0x98038309
  415c6f:	mov    dh,0xd8
  415c71:	push   cs
  415c72:	nop
  415c73:	cld    
  415c74:	fst    QWORD PTR [eax+0x730cf13c]
  415c7a:	cmp    ah,0x5f
  415c7d:	sub    BYTE PTR [ebx-0xc],0xc5
  415c81:	push   es
  415c82:	jo     0x415c3a
  415c84:	int3   
  415c85:	push   cs
  415c86:	push   0xbe3fc0fc
  415c8b:	cld    
  415c8c:	lods   eax,DWORD PTR ds:[esi]
  415c8d:	cli    
  415c8e:	cwde   
  415c8f:	jne    0x415c9b
  415c91:	mov    ah,0xbf
  415c93:	xchg   BYTE PTR [eax-0x6a03b7f2],dl
  415c99:	push   eax
  415c9a:	das    
  415c9b:	hlt    
  415c9c:	lea    eax,[esi]
  415c9e:	das    
  415c9f:	or     bl,BYTE PTR [esi+eax*1+0x30]
  415ca3:	adc    BYTE PTR [ecx+0x71808f],ch
  415ca9:	jmp    0x415cef
  415cab:	in     al,dx
  415cac:	mov    ebp,0x413d1201
  415cb1:	jmp    0x572912ff
  415cb6:	inc    ecx
  415cb7:	cld    
  415cb8:	(bad)  
  415cb9:	fdiv   st(4),st
  415cbb:	jecxz  0x415c54
  415cbd:	xchg   ebp,eax
  415cbe:	inc    ecx
  415cbf:	cld    
  415cc0:	addr16 jmp 0x415cc3
  415cc3:	add    BYTE PTR [esp+ebp*8-0x43],al
  415cc7:	shl    ebx,1
  415cc9:	cmp    al,0x41
  415ccb:	jmp    0x37291319
  415cd0:	inc    ecx
  415cd1:	cld    
  415cd2:	(bad)  
  415cd3:	pushf  
  415cd4:	int3   
  415cd5:	jecxz  0x415d56
  415cd7:	push   ebp
  415cd8:	inc    ecx
  415cd9:	cld    
  415cda:	addr16 jmp 0x81ff4924
  415ce0:	out    0x3f,eax
  415ce2:	inc    ecx
  415ce3:	jmp    0xf7291331
  415ce8:	inc    edx
  415ce9:	cld    
  415cea:	(bad)  
  415ceb:	jl     0x415c89
  415ced:	jecxz  0x415d56
  415cef:	xor    eax,0x7de7fc41
  415cf4:	sbb    bh,ah
  415cf6:	(bad)  
  415cf7:	fdivp  st(0),st
  415cf9:	in     al,dx
  415cfa:	not    dh
  415cfc:	dec    edx
  415cfd:	icebp  
  415cfe:	mov    BYTE PTR [esi+0x42],bl
  415d01:	cld    
  415d02:	(bad)  
  415d03:	jl     0x415d60
  415d05:	hlt    
  415d06:	(bad)  
  415d07:	mov    esi,0xb60c7642
  415d0c:	rol    BYTE PTR [ebx],1
  415d0e:	call   0xff3d9e9f
  415d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d14:	add    cl,bh
  415d16:	neg    BYTE PTR [esi+0x666cf142]
  415d1c:	dec    edx
  415d1d:	cli    
  415d1e:	(bad)  
  415d1f:	and    al,0x4b
  415d21:	lock lock add al,cl
  415d25:	add    al,0xff
  415d27:	inc    DWORD PTR [eax]
  415d29:	add    BYTE PTR [ebx],dh
  415d2b:	add    ebp,eax
  415d2d:	mov    bh,0x4f
  415d2f:	add    eax,0x1ecc900
  415d34:	call   DWORD PTR [ebp+edx*4+0x21]
  415d38:	add    esp,0x6a
  415d3b:	lahf   
  415d3c:	(bad)  
  415d3d:	imul   ecx,DWORD PTR [esp+eax*1+0x75],0x8a848608
  415d45:	dec    DWORD PTR [ecx+0x16fc457e]
  415d4b:	pop    es
  415d4c:	add    bh,ch
  415d4e:	pop    eax
  415d4f:	popf   
  415d50:	arpl   WORD PTR [edi+ebp*4],di
  415d53:	push   es
  415d54:	push   0xfec7ea75
  415d59:	(bad)  
  415d5a:	mov    bl,0xfe
  415d5c:	out    0x47,al
  415d5e:	and    al,BYTE PTR [edi+edi*8]
  415d61:	push   0x3fc2cb
  415d66:	dec    ecx
  415d67:	retf   0x290d
  415d6a:	fild   WORD PTR [esi]
  415d6c:	push   DWORD PTR [ebp-0x5a]
  415d6f:	push   ds
  415d70:	nop
  415d71:	std    
  415d72:	test   eax,0x6a7d6805
  415d77:	(bad)  
  415d78:	(bad)  
  415d79:	addr16 pushf 
  415d7b:	push   es
  415d7c:	add    BYTE PTR [eax-0x17f97467],al
  415d82:	or     BYTE PTR [edx],al
  415d84:	(bad)  
  415d85:	call   DWORD PTR [esi]
  415d87:	jbe    0x415dc5
  415d89:	inc    ecx
  415d8a:	pop    esi
  415d8b:	sahf   
  415d8c:	add    BYTE PTR [eax],al
  415d8e:	add    BYTE PTR [eax],al
  415d90:	outs   dx,BYTE PTR ds:[esi]
  415d91:	xchg   dh,bh
  415d93:	jne    0x415dfb
  415d95:	push   ds
  415d96:	pop    ebx
  415d97:	(bad)  
  415d98:	test   eax,0x6ad16805
  415d9d:	(bad)  
  415d9e:	(bad)  
  415d9f:	addr16 inc edi
  415da1:	out    dx,al
  415da2:	add    al,BYTE PTR [eax]
  415da4:	(bad)  
  415da5:	mov    cl,BYTE PTR [ebp+0x6391f07]
  415dab:	jmp    FWORD PTR [eax]
  415dad:	jnp    0x415d3d
  415daf:	sti    
  415db0:	and    ch,bh
  415db2:	cli    
  415db3:	out    0x70,eax
  415db5:	pop    esp
  415db6:	add    al,0xff
  415db8:	(bad)  
  415db9:	sub    eax,0x7773ffff
  415dbe:	pop    ss
  415dbf:	(bad)  
  415dc0:	jp     0x415da6
  415dc2:	sbb    bl,BYTE PTR [ecx]
  415dc4:	aam    0x4a
  415dc6:	add    al,0xb
  415dc8:	pop    es
  415dc9:	mov    esp,0xfd7d67c9
  415dce:	sar    edi,0x90
  415dd1:	dec    eax
  415dd2:	push   ebp
  415dd3:	xchg   edx,eax
  415dd4:	fsubr  DWORD PTR [edx]
  415dd6:	mov    bl,0x4f
  415dd8:	pop    edi
  415dd9:	lock add ch,bh
  415ddc:	mov    DWORD PTR [edi-0xff9c32b],edx
  415de2:	mov    dl,0xfe
  415de4:	xor    ch,al
  415de6:	sbb    dh,BYTE PTR [ebp-0xc]
  415de9:	add    al,BYTE PTR [eax+ebx*2]
  415dec:	pop    ds
  415ded:	icebp  
  415dee:	add    ch,bh
  415df0:	loope  0x415d79
  415df2:	(bad)  
  415df3:	cmp    al,0x0
  415df5:	add    BYTE PTR [esi],al
  415df7:	lock mov dl,0xfe
  415dfa:	sbb    bh,al
  415dfc:	jmp    0xd2e8:0x2dad460
  415e03:	popa   
  415e04:	add    edi,edi
  415e06:	mov    gs,WORD PTR [ebp+0x771a000b]
  415e0c:	lock add BYTE PTR [ebx-0x12ff9245],0xe
  415e14:	add    esi,DWORD PTR [ebp+0x4f]
  415e17:	enter  0x8ab2,0x50
  415e1b:	or     BYTE PTR [esi+0x12fd038d],ah
  415e21:	push   ds
  415e22:	inc    eax
  415e23:	jg     0x415e06
  415e25:	jmp    0x415dfa
  415e27:	clc    
  415e28:	lea    eax,[ebx]
  415e2a:	popf   
  415e2b:	sub    al,0x86
  415e2d:	jns    0x415e6e
  415e2f:	loope  0x415ea2
  415e31:	add    esp,DWORD PTR [eax]
  415e33:	stc    
  415e34:	add    ah,BYTE PTR [eax]
  415e36:	sbb    BYTE PTR [edi-0x1f],bh
  415e39:	jmp    0x415e02
  415e3b:	clc    
  415e3c:	add    ecx,DWORD PTR gs:[eax]
  415e3f:	jg     0x415e9e
  415e41:	add    edi,DWORD PTR [edx+0x1]
  415e44:	inc    ecx
  415e45:	int    0xcd
  415e47:	clc    
  415e48:	dec    ebp
  415e49:	int    0x6
  415e4b:	push   cs
  415e4c:	jmp    0x9a271aa9
  415e51:	retf   0xd4b
  415e54:	test   BYTE PTR [edi+eax*2+0x9],0xe9
  415e59:	add    eax,DWORD PTR [eax]
  415e5b:	add    BYTE PTR [edi+0x24],al
  415e5e:	inc    edx
  415e5f:	add    edx,DWORD PTR [edx+0x1]
  415e62:	adc    DWORD PTR [edi],esi
  415e64:	and    BYTE PTR [ecx],cl
  415e66:	jmp    0x6a4271f9
  415e6b:	cld    
  415e6c:	inc    esi
  415e6d:	jg     0x415e47
  415e6f:	push   es
  415e70:	xchg   edi,eax
  415e71:	mov    WORD PTR [edx],ss
  415e73:	push   es
  415e74:	sub    DWORD PTR [edx+0x7dfb5fb2],ecx
  415e7a:	in     al,0x69
  415e7c:	mov    BYTE PTR [ebx],cl
  415e7e:	inc    ebp
  415e7f:	add    al,0x88
  415e81:	jle    0x415e70
  415e83:	jmp    0x415e0f
  415e85:	pop    eax
  415e86:	jmp    0xc234d8e
  415e8b:	inc    ebp
  415e8c:	inc    edi
  415e8d:	popa   
  415e8e:	and    BYTE PTR [ecx+0x6],al
  415e91:	or     ecx,edx
  415e93:	cdq    
  415e94:	mov    eax,0x49b5fff8
  415e99:	leave  
  415e9a:	jae    0x415ee0
  415e9c:	inc    esp
  415e9d:	jle    0x415ea7
  415e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea0:	das    
  415ea1:	loop   0x415edf
  415ea3:	sub    BYTE PTR [ebx-0x74],cl
  415ea6:	ret    
  415ea7:	in     eax,dx
  415ea8:	dec    ecx
  415ea9:	leave  
  415eaa:	je     0x415ee0
  415eac:	inc    esp
  415ead:	push   ds
  415eae:	stc    
  415eaf:	les    eax,FWORD PTR [ebx-0x7a1a5cf7]
  415eb5:	dec    edx
  415eb6:	add    BYTE PTR [edx-0x79],ch
  415eb9:	or     eax,0x94b283f
  415ebe:	jne    0x415eb1
  415ec0:	add    BYTE PTR [eax],al
  415ec2:	inc    ebp
  415ec3:	push   ds
  415ec4:	in     eax,dx
  415ec5:	sbb    al,0x8a
  415ec7:	or     ebx,ebp
  415ec9:	adc    BYTE PTR [ecx+0x9],ch
  415ecc:	push   0xffffffe8
  415ece:	inc    ebp
  415ecf:	ds add al,0x6
  415ed2:	or     BYTE PTR [ecx],0xff
  415ed5:	aam    0x47
  415ed7:	ss inc ecx
  415ed9:	jmp    0xe24d2a9f
  415ede:	add    al,0x7c
  415ee0:	and    DWORD PTR [esi],esp
  415ee2:	prefetch BYTE PTR [edi]
  415ee5:	test   al,0x44
  415ee7:	clc    
  415ee8:	adc    al,0xec
  415eea:	push   es
  415eeb:	dec    edx
  415eec:	add    BYTE PTR [edx-0x78],ch
  415eef:	or     edi,edi
  415ef1:	fdiv   QWORD PTR [edi-0x7216becc]
  415ef7:	or     al,0x4
  415ef9:	mov    dh,0x3
  415efb:	or     DWORD PTR [eax],eax
  415efd:	jmp    0xe92c6846
  415f02:	add    eax,DWORD PTR [edx+eax*8+0x7c98c42]
  415f09:	jmp    0xe4593d1
  415f0e:	add    al,0x9
  415f10:	add    BYTE PTR [eax],al
  415f12:	sub    ch,BYTE PTR [edx]
  415f14:	push   DWORD PTR ds:0x41486a
  415f1a:	xchg   ecx,eax
  415f1b:	pop    ds
  415f1c:	add    eax,0x830d1f3e
  415f21:	les    ebx,FWORD PTR [edx+0x8]
  415f24:	adc    eax,0x230000ed
  415f29:	dec    esp
  415f2a:	add    bh,al
  415f2c:	sub    ecx,DWORD PTR [edi]
  415f2e:	aas    
  415f2f:	inc    ecx
  415f30:	push   ds
  415f31:	or     eax,DWORD PTR [eax]
  415f33:	add    BYTE PTR [esi],bl
  415f35:	into   
  415f36:	push   ebx
  415f37:	mov    edx,edx
  415f39:	mov    edx,es
  415f3b:	lock cmp eax,0x25084384
  415f41:	retf   
  415f42:	jb     0x415f4f
  415f44:	popf   
  415f45:	jbe    0x415f53
  415f47:	add    BYTE PTR [edx],bl
  415f49:	adc    BYTE PTR [eax+0x77fee38],al
  415f4f:	sub    ebx,DWORD PTR [esi]
  415f51:	push   esp
  415f52:	leave  
  415f53:	ret    0xaf6
  415f56:	cmp    BYTE PTR [eax],0xa0
  415f59:	jle    0x415f6b
  415f5b:	adc    ebx,0xe
  415f5e:	aas    
  415f5f:	inc    ecx
  415f60:	fimul  WORD PTR [edx]
  415f62:	jne    0x415f6b
  415f64:	cmc    
  415f65:	retf   0xc959
  415f68:	ins    BYTE PTR es:[edi],dx
  415f69:	add    eax,0x88968000
  415f6e:	je     0x415fae
  415f70:	and    eax,0x1d4a0c5e
  415f75:	out    dx,eax
  415f76:	add    DWORD PTR [ebx],ecx
  415f78:	cmp    al,0x7e
  415f7a:	push   es
  415f7b:	adc    DWORD PTR [ebx],0x6
  415f7e:	add    DWORD PTR [ebp-0x56],esi
  415f81:	and    eax,0x83aebc0
  415f86:	dec    ebp
  415f87:	or     al,0xf5
  415f89:	dec    esi
  415f8a:	or     al,0x5
  415f8c:	add    BYTE PTR [eax],al
  415f8e:	inc    edi
  415f8f:	loopne 0x415f97
  415f91:	add    BYTE PTR [edi-0x5f],al
  415f94:	loop   0x415f97
  415f96:	pop    ss
  415f97:	fcomp  DWORD PTR [ecx*4-0x74ad48a0]
  415f9e:	repnz out 0x44,eax
  415fa1:	push   eax
  415fa2:	push   eax
  415fa3:	cmp    eax,0xb55f5210
  415fa8:	call   0x5c9:0x5d4840fe
  415faf:	call   0x874d8ab6
  415fb4:	jne    0x415fc2
  415fb6:	sub    ch,dh
  415fb8:	or     ch,BYTE PTR [edx+0x47]
  415fbb:	sbb    al,BYTE PTR [edi+edi*8]
  415fbe:	xor    dh,BYTE PTR [ecx+0x3e]
  415fc1:	inc    ecx
  415fc2:	inc    edi
  415fc3:	arpl   di,ax
  415fc5:	(bad)  
  415fc7:	and    BYTE PTR [edi+0x65],dh
  415fca:	into   
  415fcb:	lods   al,BYTE PTR ds:[esi]
  415fcc:	(bad)  
  415fcd:	imul   ecx,DWORD PTR [ebx+0x6d],0x4897f046
  415fd4:	test   BYTE PTR [ebx+0x6d4ee8],0xd2
  415fdb:	lods   al,BYTE PTR ds:[esi]
  415fdc:	repnz dec edi
  415fde:	fdiv   DWORD PTR [esi+edi*8+0x40e13afe]
  415fe5:	inc    ecx
  415fe6:	inc    edi
  415fe7:	arpl   di,ax
  415fe9:	or     ecx,DWORD PTR [eax+eiz*1+0x76]
  415fed:	xor    ecx,edx
  415fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ff0:	repnz add BYTE PTR [eax],0x0
  415ff4:	das    
  415ff5:	in     al,dx
  415ff6:	add    dh,BYTE PTR [esp+ecx*2+0x7b]
  415ffa:	inc    ebx
  415ffb:	or     BYTE PTR [edi],al
  415ffd:	nop
  415ffe:	jmp    0x6f8a:0xfefecbb4
  416005:	push   esp
  416006:	inc    esi
  416007:	lock mov BYTE PTR [eax],cl
  41600a:	pop    ecx
  41600b:	or     al,0x14
  41600d:	neg    BYTE PTR [eax+0x8]
  416010:	outs   dx,DWORD PTR ds:[esi]
  416011:	shl    DWORD PTR [edi+edi*8+0x71],1
  416015:	(bad)  
  416016:	jmp    0x193a63ab
  41601b:	(bad)  
  41601c:	cmp    edi,esp
  41601e:	sti    
  41601f:	inc    esp
  416020:	inc    edi
  416021:	mov    ch,BYTE PTR [esp+ecx*1+0x79ae07dd]
  416028:	dec    ebx
  416029:	cmc    
  41602a:	sti    
  41602b:	clc    
  41602c:	or     DWORD PTR [edx-0x17],0xffffff82
  416030:	add    al,0x2
  416032:	(bad)
  416037:	or     al,0x47
  416039:	pop    esi
  41603a:	jb     0x41602c
  41603c:	and    DWORD PTR [edi-0x13],edi
  41603f:	(bad)  
  416040:	xchg   ebx,eax
  416041:	add    DWORD PTR [esi+0x19],esi
  416044:	adc    esi,DWORD PTR [eax+ebp*1]
  416047:	add    al,0xc4
  416049:	int    0xf0
  41604b:	push   ebx
  41604c:	add    BYTE PTR [edi-0x13],bh
  41604f:	(bad)  
  416050:	jae    0x416053
  416052:	push   esi
  416053:	sbb    edi,ebp
  416055:	xor    ebp,DWORD PTR [eax-0x3bfffffd]
  41605b:	int    0xf0
  41605d:	mov    bh,BYTE PTR [ebx+0x19]
  416060:	jo     0x416064
  416062:	jg     0x416026
  416064:	sub    dl,BYTE PTR [eax]
  416066:	inc    edi
  416067:	pop    esi
  416068:	(bad)  
  416069:	(bad)
  41606d:	(bad)  
  41606e:	cmp    eax,DWORD PTR ds:0xf4d60311
  416074:	adc    eax,0xe57e870b
  416079:	int3   
  41607a:	xchg   BYTE PTR [ecx],bl
  41607c:	jmp    0x11467c7f
  416081:	loopne 0x41606d
  416083:	hlt    
  416084:	push   ebp
  416086:	cmp    eax,0x7be573c9
  41608b:	retf   0xe90f
  41608e:	cmp    DWORD PTR [ebp+0x14],0xe818ffde
  416095:	lods   al,BYTE PTR ds:[esi]
  416096:	inc    edi
  416097:	hlt    
  416098:	(bad)  
  416099:	loop   0x41601f
  41609b:	jge    0x4160a1
  41609d:	mov    al,0x86
  41609f:	add    al,0x0
  4160a1:	push   ecx
  4160a2:	imul   esi,DWORD PTR [esi],0x41
  4160a5:	jmp    0x287fdc86
  4160aa:	inc    ebx
  4160ab:	loope  0x416038
  4160ad:	jg     0x4160f0
  4160af:	repz or ch,BYTE PTR [ecx-0x7e97fb41]
  4160b6:	jb     0x416102
  4160b8:	add    BYTE PTR [ecx],al
  4160ba:	cmp    dh,BYTE PTR [ebx]
  4160bc:	inc    ecx
  4160bd:	jmp    0x716d60c2
  4160c2:	xchg   esi,eax
  4160c3:	jle    0x4160de
  4160c5:	(bad)  
  4160c6:	mov    edi,0xa2c8e6
  4160cb:	jmp    0x6585e714
  4160d0:	xchg   esp,eax
  4160d1:	hlt    
  4160d2:	je     0x4160c1
  4160d4:	stc    
  4160d5:	sbb    al,0xe8
  4160d7:	pop    ss
  4160d8:	mov    cl,BYTE PTR [ecx]
  4160da:	and    DWORD PTR ds:0xf6c0003c,0xffffffcf
  4160e1:	call   0x6400:0x5f44e900
  4160e8:	jg     0x4160db
  4160ea:	dec    edi
  4160eb:	ret    
  4160ec:	leave  
  4160ed:	imul   edi,DWORD PTR [eax-0x1a],0xb
  4160f1:	or     edi,edi
  4160f3:	xchg   esp,eax
  4160f4:	mov    eax,0x721914f2
  4160f9:	dec    edx
  4160fa:	add    BYTE PTR [edx-0x80],ch
  4160fd:	pop    ss
  4160fe:	or     eax,DWORD PTR [eax]
  416100:	outs   dx,BYTE PTR ds:[esi]
  416101:	add    eax,DWORD PTR [ebp+0x7af6a]
  416107:	call   DWORD PTR [ebx]
  416109:	lock std 
  41610b:	adc    eax,0x413492
  416110:	in     eax,dx
  416111:	rol    BYTE PTR [edx],0x83
  416114:	pushaw 
  416116:	je     0x41611d
  416118:	xchg   DWORD PTR [eax+0x1],edx
  41611b:	add    BYTE PTR [esi-0x7e],bl
  41611e:	inc    ebx
  41611f:	hlt    
  416120:	ds pop edi
  416122:	add    bh,bh
  416124:	add    BYTE PTR [eax],al
  416126:	adc    esi,ebp
  416128:	out    0x14,al
  41612a:	cdq    
  41612b:	cmc    
  41612c:	std    
  41612d:	or     ebx,DWORD PTR [esi+0x2f398405]
  416133:	pop    es
  416134:	add    BYTE PTR [ebx+0xefef15b],al
  41613a:	mov    ds:0x1e000124,al
  41613f:	xchg   DWORD PTR [esi],esi
  416141:	add    BYTE PTR [ecx],bl
  416143:	mov    esp,DWORD PTR [ecx+eax*1]
  416146:	cs pop es
  416148:	push   eax
  416149:	mov    esi,DWORD PTR [ebx]
  41614b:	icebp  
  41614c:	inc    eax
  41614d:	push   edx
  41614e:	(bad)  
  41614f:	arpl   WORD PTR [ebx-0x76b09601],cx
  416155:	inc    ebp
  416156:	xchg   esi,eax
  416157:	hlt    
  416158:	jae    0x41614e
  41615a:	cdq    
  41615b:	jp     0x416145
  41615d:	push   edx
  41615e:	xchg   BYTE PTR [edx-0x33760077],bl
  416164:	inc    ebx
  416165:	lock out dx,al
  416167:	push   es
  416168:	add    BYTE PTR [eax],al
  41616a:	and    DWORD PTR [edx-0x14],ecx
  41616d:	add    dh,bl
  41616f:	push   es
  416170:	add    BYTE PTR [ebx+0x413f06ab],al
  416176:	scas   al,BYTE PTR es:[edi]
  416177:	push   es
  416178:	jne    0x4161cc
  41617a:	inc    edi
  41617b:	mov    ch,ch
  41617d:	ds push es
  41617f:	loopne 0x41616b
  416181:	sub    DWORD PTR [ebx],eax
  416183:	loopne 0x416187
  416185:	push   eax
  416186:	das    
  416187:	add    eax,0x413d
  41618c:	inc    edi
  41618d:	sti    
  41618e:	jne    0x416178
  416190:	lahf   
  416191:	adc    al,0x5f
  416193:	add    BYTE PTR [edi-0x9],al
  416196:	ret    0x5f73
  416199:	pop    eax
  41619a:	clc    
  41619b:	ds push es
  41619d:	loopne 0x416189
  41619f:	or     eax,0x5002e00b
  4161a4:	out    dx,eax
  4161a5:	mov    bl,0x3b
  4161a7:	inc    ecx
  4161a8:	inc    edi
  4161a9:	mov    bl,0x75
  4161ab:	call   0x9fd20f
  4161b0:	inc    edi
  4161b1:	out    0xc2,eax
  4161b3:	jae    0x41622a
  4161b5:	sbb    BYTE PTR [eax],al
  4161b7:	aas    
  4161b8:	xchg   al,ah
  4161ba:	jmp    0x9f50:0x2e08cf1
  4161c1:	test   BYTE PTR [ebx],bh
  4161c3:	inc    ecx
  4161c4:	inc    edi
  4161c5:	mov    esi,DWORD PTR [ebp-0x18]
  4161c8:	das    
  4161c9:	pop    esp
  4161ca:	pop    esi
  4161cb:	add    BYTE PTR [edi-0x79],al
  4161ce:	sbb    ch,BYTE PTR [eax+0x42]
  4161d1:	and    BYTE PTR [ebx+0x0],al
  4161d4:	out    dx,eax
  4161d5:	inc    edi
  4161d6:	pop    eax
  4161d7:	add    BYTE PTR [edi-0x50],al
  4161da:	push   0x5
  4161dc:	xchg   DWORD PTR [ecx+0x4872ff02],esp
  4161e2:	jmp    0x41625d
  4161e4:	and    al,0x2
  4161e7:	or     eax,DWORD PTR [edi]
  4161e9:	mov    ebp,0x348a8d6c
  4161ee:	push   ebx
  4161ef:	push   0x0
  4161f1:	add    BYTE PTR [esi+0x23],al
  4161f4:	jbe    0x4161ee
  4161f6:	scas   eax,DWORD PTR es:[edi]
  4161f7:	or     BYTE PTR [edx+0x1df1b9fd],dh
  4161fd:	jbe    0x4161ba
  4161ff:	pop    eax
  416200:	add    DWORD PTR [esi-0x56],eax
  416203:	icebp  
  416204:	or     eax,0x73f90b8a
  416209:	inc    esi
  41620a:	xchg   ebx,eax
  41620b:	pop    eax
  41620c:	xchg   ebx,eax
  41620d:	add    DWORD PTR [eax+0x57eaf17b],edx
  416213:	repz in eax,dx
  416215:	sti    
  416216:	cmp    DWORD PTR [ebx-0x23],0xdc1d6f54
  41621d:	sti    
  41621e:	jno    0x41629f
  416220:	sub    ebp,eax
  416222:	lds    esi,FWORD PTR [ebx-0x3f]
  416225:	add    al,0xdb
  416227:	cmp    al,0x6a
  416229:	jns    0x416296
  41622b:	or     BYTE PTR ds:0xe908df2a,dh
  416231:	jmp    0xf02f:0xc33f18a
  416238:	outs   dx,BYTE PTR ds:[esi]
  416239:	sti    
  41623a:	cmp    ecx,esi
  41623c:	adc    ebp,esp
  41623e:	xor    DWORD PTR [edi-0x1f],esi
  416241:	jmp    0x4161d6
  416243:	mov    BYTE PTR [ebp+0x797721fb],cl
  416249:	sti    
  41624a:	xchg   ebx,eax
  41624b:	add    DWORD PTR [ecx+0x75f0c84e],edx
  416251:	sti    
  416252:	xchg   ebx,eax
  416253:	(bad)  [ebp+0x71]
  416256:	add    BYTE PTR [eax],al
  416258:	dec    edi
  416259:	loope  0x416280
  41625b:	cmp    ecx,0xfffffff0
  41625e:	pop    ebp
  41625f:	jno    0x416258
  416261:	loope  0x416207
  416263:	(bad)  
  416264:	jmp    0xf3b2b059
  416269:	loope  0x416217
  41626b:	(bad)  
  41626c:	f2xm1  
  41626e:	cmp    eax,0xffe1df71
  416273:	hlt    
  416274:	mov    edx,0xd540feef
  416279:	out    dx,al
  41627a:	(bad)  
  41627b:	es mov esp,0x561efc75
  416281:	fnstsw WORD PTR ds:0xc38c44a8
  416287:	in     eax,0xac
  416289:	xchg   edi,eax
  41628a:	sti    
  41628b:	push   es
  41628c:	pushf  
  41628d:	rol    ecx,0xd9
  416290:	inc    esp
  416291:	push   esi
  416292:	mov    eax,DWORD PTR ds:0xee0062f0
  416298:	test   DWORD PTR [eax],0xefcf9ae8
  41629e:	(bad)  
  41629f:	jb     0x41622d
  4162a1:	pop    ebx
  4162a2:	call   0x4a6ca0
  4162a7:	loop   0x41622d
  4162a9:	jl     0x4162c6
  4162ab:	jmp    0x38c4:0xdbeb4881
  4162b2:	or     eax,0x3789463d
  4162b7:	jecxz  0x416270
  4162b9:	push   es
  4162ba:	(bad)  
  4162bb:	jmp    0xe48562c0
  4162c0:	add    DWORD PTR [edx-0x55c4beb9],edx
  4162c6:	mov    cl,0xe3
  4162c8:	mov    ch,BYTE PTR [edx-0x123e3d7f]
  4162ce:	inc    esp
  4162cf:	push   esi
  4162d0:	mov    ecx,DWORD PTR [ebp+0x1eb3cbc9]
  4162d6:	or     al,0x75
  4162d8:	or     al,0x81
  4162da:	mov    cl,0x7d
  4162dc:	(bad)  
  4162dd:	dec    cx
  4162df:	leave  
  4162e0:	je     0x4162c6
  4162e2:	(bad)  
  4162e3:	ret    0xf9c1
  4162e6:	inc    esp
  4162e7:	lock je 0x4162c7
  4162ea:	in     al,dx
  4162eb:	mov    ch,BYTE PTR [ebx+0x9f38100]
  4162f1:	rcr    BYTE PTR [edx+0x1cc95f08],0x1c
  4162f8:	add    bh,bh
  4162fa:	sti    
  4162fb:	(bad)  
  4162fc:	(bad)  
  4162fd:	jne    0x4162bd
  4162ff:	jecxz  0x41636a
  416301:	sti    
  416302:	push   ecx
  416303:	repz mov eax,DWORD PTR [ebp+0x4e]
  416307:	pop    esp
  416308:	push   DWORD PTR [ebp-0x7e]
  41630b:	jecxz  0x41634c
  41630d:	pop    DWORD PTR [ecx-0xd]
  416310:	or     eax,eax
  416312:	mov    eax,ds:0x9e02fa6f
  416317:	or     edi,edi
  416319:	jne    0x41638d
  41631b:	icebp  
  41631c:	jae    0x416316
  41631e:	xchg   esi,eax
  41631f:	(bad)  
  416320:	xchg   edx,eax
  416321:	inc    DWORD PTR [eax]
  416323:	add    BYTE PTR [ecx-0x25f04003],dl
  416329:	rol    DWORD PTR [eax],1
  41632b:	add    BYTE PTR [esi-0x7e],ch
  41632e:	inc    ebx
  41632f:	in     al,dx
  416330:	aad    0xec
  416332:	jle    0x416373
  416334:	pop    esi
  416335:	add    BYTE PTR [ecx+ecx*8+0x57000b5c],al
  41633c:	push   es
  41633d:	aas    
  41633e:	(bad)  
  41633f:	jmp    ecx
  416341:	add    BYTE PTR [ebx-0x30],0xd1
  416345:	pop    esi
  416346:	shr    BYTE PTR [eax+0x42],1
  416349:	xor    BYTE PTR [ecx+0x0],al
  41634c:	(bad)  
  41634d:	push   cs
  41634e:	pop    ebx
  41634f:	add    BYTE PTR [esi],ch
  416351:	pop    ebx
  416352:	push   DWORD PTR [ebp-0x52]
  416355:	pop    ebp
  416356:	jo     0x416397
  416358:	pop    edi
  416359:	add    eax,0x55517e8
  41635e:	add    BYTE PTR [eax+0x61],dl
  416361:	pop    esi
  416362:	shr    BYTE PTR [eax+0x1a],1
  416365:	xor    al,BYTE PTR [ecx+0x0]
  416368:	inc    edi
  416369:	dec    eax
  41636a:	or     ebx,DWORD PTR [ebx+0x47]
  41636d:	loopne 0x4163cb
  41636f:	pop    ecx
  416370:	dec    esp
  416371:	and    BYTE PTR [eax+0xc],dh
  416374:	cmp    al,0x12
  416376:	jo     0x416380
  416378:	cmp    al,0x29
  41637a:	or     DWORD PTR [ebp+0x2e242],eax
  416380:	dec    esp
  416381:	cmp    DWORD PTR [edi+0x9],ebp
  416384:	mov    BYTE PTR [ebp+0xae],ah
  41638a:	inc    edi
  41638b:	loopne 0x41638f
  41638d:	jmp    0x4163d7
  41638f:	daa    
  416390:	aas    
  416391:	mov    ah,0x47
  416393:	loopne 0x416397
  416395:	add    BYTE PTR [ebx-0x77473d4d],dl
  41639b:	div    edi
  41639d:	(bad)  
  41639e:	jne    0x4163ce
  4163a0:	cmp    al,0x7
  4163a2:	repnz fistp QWORD PTR [edi+0x2e05f44]
  4163a9:	add    BYTE PTR [edi+0x60],al
  4163ac:	cmp    BYTE PTR [eax],al
  4163ae:	push   eax
  4163af:	fs dec esp
  4163b1:	add    al,BYTE PTR [edi-0x20]
  4163b4:	dec    edi
  4163b5:	call   0xff39122a
  4163ba:	mov    esi,0xc282c81d
  4163bf:	enter  0x7502,0x66
  4163c3:	sbb    BYTE PTR [eax+0x2c],ch
  4163c6:	xchg   al,ah
  4163c8:	div    DWORD PTR [ebx+edi*8-0x79]
  4163cc:	test   eax,0xbe04759
  4163d1:	ror    BYTE PTR [eax+0x5d],0x6
  4163d5:	add    al,BYTE PTR [edi-0x20]
  4163d8:	mov    edi,0x2e11f44
  4163dd:	add    BYTE PTR [edi-0x77],al
  4163e0:	add    DWORD PTR [edx],eax
  4163e2:	inc    edi
  4163e3:	or     ecx,ebp
  4163e5:	test   BYTE PTR [ebx-0x1f],dh
  4163e8:	out    0x6e,eax
  4163ea:	cmp    BYTE PTR [eax+0xdfd3],al
  4163f0:	or     DWORD PTR [ecx+eax*2+0x5],eax
  4163f4:	inc    edi
  4163f5:	or     ecx,ebp
  4163f7:	jmp    0x6bc4:0x3e9079a
  4163fe:	inc    ecx
  4163ff:	add    eax,0x765ffe3a
  416404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416405:	lds    ebp,FWORD PTR [ebx-0x16f6ba15]
  41640b:	add    ebx,DWORD PTR [esi+0x4703e7a7]
  416411:	mov    cl,BYTE PTR [ebx-0x98bba15]
  416417:	mov    dl,BYTE PTR [ebx]
  416419:	int    0x25
  41641b:	ds lahf 
  41641d:	add    al,0xe9
  41641f:	add    eax,DWORD PTR [edi-0x20]
  416422:	pop    esp
  416423:	add    al,BYTE PTR [edi+0x9]
  416426:	push   0x79
  416428:	pop    edi
  416429:	add    al,0x54
  41642b:	pop    es
  41642c:	mov    esi,0xbbfb16b
  416431:	loope  0x416416
  416433:	add    eax,DWORD PTR [edi+0x9]
  416436:	shr    BYTE PTR [edi+0x46],1
  416439:	or     ecx,ebp
  41643b:	or     bl,0xe0
  41643e:	jmp    0x416446
  416440:	retf   0xe869
  416443:	add    eax,DWORD PTR [edi-0x7e]
  416446:	and    edx,eax
  416448:	lds    ebp,FWORD PTR [esi+0x55]
  41644b:	add    al,0xb3
  41644d:	add    ch,BYTE PTR [esi-0x16f7d0bf]
  416453:	add    eax,DWORD PTR [eax]
  416455:	add    BYTE PTR [edi-0x20],al
  416458:	in     eax,dx
  416459:	mov    esi,0x3e6e18b
  41645e:	inc    edi
  41645f:	or     DWORD PTR [eax],eax
  416461:	scas   al,BYTE PTR es:[edi]
  416462:	xchg   cl,cl
  416464:	(bad)  
  416465:	call   0xad086dae
  41646a:	cld    
  41646b:	in     al,dx
  41646c:	(bad)  
  41646d:	jmp    0x2d8628b6
  416472:	dec    ebx
  416473:	or     DWORD PTR [eax],eax
  416475:	jmp    0xe9fdaa13
  41647a:	inc    esp
  41647b:	or     DWORD PTR [eax],eax
  41647d:	xchg   BYTE PTR es:[ecx+0x944e8ff],dh
  416484:	push   DWORD PTR [eax+ebx*4-0x47d8ed1c]
  41648b:	jmp    0x416415
  41648d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41648e:	test   bl,ch
  416490:	je     0x4164c7
  416492:	mov    bl,0x4
  416494:	dec    BYTE PTR [esi]
  416496:	nop
  416497:	add    DWORD PTR [ecx+esi*1-0x68],0x8e11d475
  41649f:	in     eax,dx
  4164a0:	(bad)  
  4164a1:	not    bl
  4164a3:	inc    ebp
  4164a4:	les    ebp,FWORD PTR [edx+0x3e]
  4164a7:	or     DWORD PTR [edi],edi
  4164a9:	sub    BYTE PTR [ebx+0x9],cl
  4164ac:	jne    0x4164e9
  4164ae:	fcmovnu st,st(5)
  4164b0:	sub    BYTE PTR ds:[ebx-0x1f],cl
  4164b4:	or     al,0x30
  4164b6:	inc    ebx
  4164b7:	or     DWORD PTR [eax+0x51],edx
  4164ba:	add    BYTE PTR [eax],al
  4164bc:	pop    esi
  4164bd:	sub    eax,DWORD PTR [ecx-0x17]
  4164c0:	push   ecx
  4164c1:	jne    0x416483
  4164c3:	shr    ecx,0x51
  4164c6:	add    cl,ch
  4164c8:	dec    ebp
  4164c9:	leave  
  4164ca:	jae    0x4164cd
  4164cc:	mov    ds:0x43283ef5,eax
  4164d1:	loope  0x4164c3
  4164d3:	xor    DWORD PTR [ebx+0x9],ecx
  4164d6:	push   eax
  4164d7:	add    DWORD PTR [edi],edx
  4164d9:	sub    eax,DWORD PTR [ecx+0x0]
  4164dc:	push   ds
  4164dd:	repz jae 0x4164a0
  4164e0:	mov    dh,0x96
  4164e2:	pop    eax
  4164e3:	add    dh,ch
  4164e5:	(bad)  
  4164e6:	mov    edi,0xfc5fbc74
  4164eb:	aas    
  4164ec:	lahf   
  4164ed:	pop    es
  4164ee:	call   0x496bc8
  4164f3:	push   eax
  4164f4:	push   es
  4164f5:	hlt    
  4164f6:	cmp    eax,0x73f2ee41
  4164fb:	shl    BYTE PTR [esi+0x5b],0x5a
  4164ff:	add    dh,bl
  416501:	ficom  WORD PTR [esi]
  416503:	push   0x4147b3
  416508:	push   es
  416509:	scas   eax,DWORD PTR es:[edi]
  41650a:	push   esi
  41650b:	add    BYTE PTR [esi-0x21fa97a9],bl
  416511:	inc    esp
  416512:	add    bh,bh
  416514:	ret    
  416515:	(bad)  
  416516:	out    0x5d,al
  416518:	aam    0x7
  41651a:	add    BYTE PTR [ebx],cl
  41651c:	pop    esi
  41651d:	jns    0x416581
  41651f:	inc    DWORD PTR [eax]
  416521:	add    BYTE PTR [ebx],dl
  416523:	shl    dh,0xa1
  416526:	(bad)  
  416527:	pop    es
  416528:	add    BYTE PTR [eax+0x69],dl
  41652b:	pop    ebx
  41652c:	enter  0x58e8,0xef
  416530:	std    
  416531:	push   edi
  416533:	sub    edi,DWORD PTR [edi+edi*8-0x721936fd]
  41653a:	push   ss
  41653b:	add    eax,0x5b895000
  416540:	(bad)  
  416541:	call   0x3f56aa
  416546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416547:	sub    bh,BYTE PTR [eax-0x13a947d]
  41654d:	jae    0x416561
  41654f:	mov    bh,BYTE PTR [ebx-0x48]
  416552:	push   ds
  416553:	pop    ebx
  416554:	cs push 0xef02e047
  41655a:	fnstcw WORD PTR [ebx+0x6e]
  41655d:	or     BYTE PTR [edi],bl
  41655f:	xchg   esi,eax
  416560:	cmp    dh,0x8
  416563:	ins    BYTE PTR es:[edi],dx
  416564:	outs   dx,DWORD PTR ds:[esi]
  416565:	rol    BYTE PTR [eax],0xee
  416568:	or     ch,al
  41656a:	and    DWORD PTR [ebp+esi*8-0x2],0xfffffff0
  41656f:	int    0xb6
  416571:	(bad)  
  416572:	jb     0x41656c
  416574:	jmp    0x52fe:0xf553cb38
  41657b:	cwde   
  41657c:	hlt    
  41657d:	je     0x4165be
  41657f:	pop    eax
  416580:	es test al,cl
  416583:	sub    esi,ebp
  416585:	je     0x416587
  416587:	add    BYTE PTR [edi-0x4778c6b8],al
  41658d:	sbb    esi,ebp
  41658f:	je     0x416610
  416591:	sbb    BYTE PTR [ecx],dh
  416593:	xchg   DWORD PTR [eax-0x748b0af5],ebp
  416599:	or     BYTE PTR [ecx],ch
  41659b:	xchg   DWORD PTR [eax-0x2c8b0b05],ebx
  4165a1:	sbb    BYTE PTR [ecx],ah
  4165a3:	xchg   DWORD PTR [eax-0x408b0c15],ecx
  4165a9:	or     BYTE PTR [ecx],bl
  4165ab:	xchg   DWORD PTR [eax-0x25],edi
  4165ae:	out    0xc,eax
  4165b0:	les    esp,FWORD PTR [ebp-0x14]
  4165b3:	add    eax,0x44bbe2f2
  4165b8:	outs   dx,DWORD PTR ds:[esi]
  4165b9:	fiadd  WORD PTR [edx]
  4165bb:	add    BYTE PTR [edi+0x5f],al
  4165be:	jbe    0x4165a8
  4165c0:	inc    edi
  4165c1:	sub    al,0x34
  4165c3:	push   0x42fbdb
  4165c8:	inc    eax
  4165c9:	sub    eax,0x17f0e7c8
  4165ce:	add    al,0x0
  4165d0:	cmp    al,0x9
  4165d2:	test   eax,0x23c2406e
  4165d7:	in     al,dx
  4165d8:	inc    edi
  4165d9:	or     ecx,ebp
  4165db:	add    ebp,DWORD PTR [edi+0x4742cde0]
  4165e1:	jmp    0x420:0x8a20c7fb
  4165e8:	inc    edi
  4165e9:	(bad)  
  4165ea:	test   al,0x6e
  4165ec:	add    BYTE PTR [eax],al
  4165ee:	inc    eax
  4165ef:	ret    0xec23
  4165f2:	inc    esi
  4165f3:	or     ecx,ebp
  4165f5:	add    ebp,eax
  4165f7:	jae    0x416626
  4165f9:	jmp    0x41660d
  4165fb:	adc    DWORD PTR [ebp-0xc],0xffffffdc
  4165ff:	xor    eax,0xe9d1ba29
  416604:	inc    ebp
  416605:	hlt    
  416606:	(bad)  
  416607:	call   0xf684:0x8451fd00
  41660e:	mov    ecx,0x976e2de9
  416613:	loopne 0x416671
  416615:	jge    0x4165c0
  416617:	jmp    0xe0f4d439
  41661c:	inc    esp
  41661d:	jge    0x4165b8
  41661f:	jmp    0x58d8a47f
  416624:	adc    ecx,edx
  416626:	mov    esp,0x51eafde9
  41662b:	lock cmc 
  41662d:	repz sbb eax,eax
  416630:	sub    dl,BYTE PTR [ebx]
  416632:	inc    edi
  416633:	push   esp
  416634:	jb     0x416616
  416636:	mov    esp,0xe961f294
  41663c:	lods   eax,DWORD PTR ds:[esi]
  41663d:	mov    DWORD PTR [eax+0x50f3cdea],edx
  416643:	jmp    0x43fd6a30
  416648:	aad    0xfe
  41664a:	add    BYTE PTR [esi+0x0],bl
  41664d:	in     al,dx
  41664e:	les    esp,FWORD PTR [eax]
  416650:	add    BYTE PTR [eax+eax*1],dh
  416653:	add    BYTE PTR [esi],bh
  416655:	repnz hlt 
  416657:	call   0x15406fa0
  41665c:	aas    
  41665d:	icebp  
  41665e:	pop    ebp
  41665f:	js     0x416675
  416661:	call   0x18d00f70
  416666:	push   0x4a28f8
  41666b:	jle    0x4166eb
  41666d:	std    
  41666e:	out    0x72,eax
  416670:	jp     0x416659
  416672:	inc    BYTE PTR [edx+0x15767146]
  416678:	or     BYTE PTR [ecx],0xff
  41667b:	aam    0x38
  41667d:	icebp  
  41667e:	jmp    0x4166e0
  416680:	aam    0xe7
  416682:	mov    BYTE PTR [ebx+eiz*4-0x1a],ah
  416686:	inc    BYTE PTR [esi+0x6b]
  416689:	daa    
  41668a:	add    ecx,ebp
  41668c:	inc    esp
  41668d:	xchg   esi,eax
  41668e:	test   BYTE PTR [ebx],ch
  416690:	mov    ch,0xe7
  416692:	(bad)  
  416693:	cdq    
  416694:	mov    WORD PTR [esi+eax*4+0x26],gs
  416698:	mov    ah,0x95
  41669a:	test   BYTE PTR [ebx],ch
  41669c:	xchg   ebp,eax
  41669d:	out    0xfe,eax
  41669f:	mov    ecx,0xfb79d95
  4166a4:	xchg   esp,eax
  4166a5:	out    0xe7,eax
  4166a7:	dec    ecx
  4166a8:	in     al,dx
  4166a9:	or     BYTE PTR [eax],al
  4166ab:	jo     0x41667b
  4166ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ae:	std    
  4166af:	div    BYTE PTR [ebp+0x28]
  4166b2:	pcmpgtw mm1,mm4
  4166b5:	or     DWORD PTR [eax],eax
  4166b7:	jmp    0x7e0866bc
  4166bc:	rcr    edi,0x55
  4166bf:	out    0xf6,eax
  4166c1:	jmp    0x4166f7
  4166c3:	or     DWORD PTR [eax],eax
  4166c5:	jmp    0xc3f40f
  4166ca:	pop    esi
  4166cb:	or     al,0x0
  4166cd:	lea    ebp,[ecx+ebp*1+0x50]
  4166d1:	push   0x412982
  4166d6:	push   es
  4166d7:	jne    0x416730
  4166d9:	add    BYTE PTR [esi],bl
  4166db:	out    0xbe,eax
  4166dd:	jne    0x41670a
  4166df:	lds    eax,FWORD PTR [edi+0x1]
  4166e2:	cs or  al,0x8d
  4166e5:	xchg   ebp,eax
  4166e6:	(bad)  
  4166e8:	std    
  4166e9:	call   DWORD PTR [ebx+0x56502c4e]
  4166ef:	imul   ebp,DWORD PTR [ecx+eax*2],0xffffffee
  4166f3:	ret    
  4166f4:	pop    edx
  4166f5:	push   edi
  4166f6:	fimul  WORD PTR [ebx]
  4166f8:	or     eax,eax
  4166fa:	or     edx,DWORD PTR [ecx]
  4166fc:	jmp    0x4d562d
  416701:	(bad)  
  416702:	sti    
  416703:	jmp    edi
  416705:	mov    edx,0xbfddb4e
  41670a:	push   ds
  41670b:	popa   
  41670c:	punpckhbw mm5,QWORD PTR [esi]
  41670f:	add    al,0x41
  416711:	add    BYTE PTR [ecx+0x61],dh
  416714:	adc    al,0xe8
  416716:	fldenv [esi+edi*8-0x1]
  41671a:	push   ebp
  41671b:	out    0x68,al
  41671d:	add    BYTE PTR [eax],al
  41671f:	add    BYTE PTR [ecx+0x61],al
  416722:	adc    al,0xe8
  416724:	in     eax,0x64
  416726:	(bad)  
  416727:	push   ebx
  416729:	add    al,0xfe
  41672c:	inc    ecx
  41672d:	fisttp DWORD PTR [ebx+0x503d9252]
  416733:	call   0x3fcc19
  416738:	into   
  416739:	cmp    edi,edi
  41673b:	jne    0x4167ab
  41673d:	fdiv   DWORD PTR [ebx+0xc]
  416740:	sbb    DWORD PTR [edi+0x8],0xf1c347e8
  416747:	(bad)  
  416748:	push   eax
  416749:	leave  
  41674a:	mov    BYTE PTR [eax+ecx*2+0x47dcdace],al
  416751:	lock add cl,BYTE PTR [ebp-0x7b84f37b]
  416758:	sti    
  416759:	mov    dh,0xf0
  41675b:	(bad)  
  41675c:	lahf   
  41675d:	(bad)  
  41675e:	das    
  41675f:	inc    ecx
  416760:	inc    edi
  416761:	xchg   DWORD PTR [esi-0xf7fe64d],esi
  416767:	out    0x4a,eax
  416769:	sbb    BYTE PTR [eax+eax*1],al
  41676c:	cmp    al,0xb0
  41676e:	ja     0x41679e
  416770:	outs   dx,DWORD PTR ds:[esi]
  416771:	jo     0x41678f
  416773:	inc    ecx
  416774:	inc    edi
  416775:	pop    edi
  416776:	ja     0x41678c
  416778:	fistp  WORD PTR [edi+0x7c]
  41677b:	(bad)  
  41677c:	call   0xe1f51ef0
  416781:	inc    edi
  416782:	icebp  
  416783:	dec    edi
  416784:	add    BYTE PTR [eax],al
  416786:	out    dx,eax
  416787:	(bad)  
  416788:	jp     0x416788
  41678a:	shl    BYTE PTR [eax+0x4f3774ef],1
  416790:	ja     0x41679e
  416792:	pop    ss
  416793:	daa    
  416794:	ja     0x41679e
  416796:	scas   eax,DWORD PTR es:[edi]
  416797:	pop    ds
  416798:	in     al,dx
  416799:	(bad)  
  41679a:	mov    al,0x48
  41679c:	cmp    DWORD PTR [ebp-0x4b0ed058],eax
  4167a2:	fild   DWORD PTR [esi]
  4167a4:	icebp  
  4167a5:	(bad)  
  4167a6:	scas   eax,DWORD PTR es:[edi]
  4167a7:	rcr    BYTE PTR [eax+0x0],0x47
  4167ab:	jae    0x416799
  4167ad:	add    DWORD PTR ds:0xbb947bc4,edx
  4167b3:	out    0xef,al
  4167b5:	inc    BYTE PTR [eax+eax*1-0x7b]
  4167b9:	jmp    0x39c2f603
  4167be:	sbb    DWORD PTR [ecx],ecx
  4167c0:	pop    edx
  4167c1:	ja     0x416808
  4167c3:	repnz sub BYTE PTR [ecx+eax*1+0x26],bl
  4167c8:	sub    BYTE PTR [eax+edx*2],al
  4167cb:	pushf  
  4167cc:	xchg   esp,eax
  4167cd:	icebp  
  4167ce:	dec    ecx
  4167cf:	out    0xd0,al
  4167d1:	nop
  4167d2:	cdq    
  4167d3:	or     ecx,ebp
  4167d5:	push   ebx
  4167d6:	scas   eax,DWORD PTR es:[edi]
  4167d7:	cmp    esi,esi
  4167d9:	inc    edx
  4167da:	inc    edi
  4167db:	out    0x73,al
  4167dd:	mov    bh,0x2a
  4167df:	out    0xa5,al
  4167e1:	fcmovnbe st,st(2)
  4167e3:	cmp    eax,0x717703e9
  4167e8:	xor    DWORD PTR ss:[eax],eax
  4167eb:	add    BYTE PTR [esi-0x2b4971f7],al
  4167f1:	out    0x85,al
  4167f3:	lock call 0x47457e5c
  4167f9:	inc    ebx
  4167fa:	adc    ch,bh
  4167fc:	mov    al,0x5b
  4167fe:	loope  0x4167fc
  416800:	push   ss
  416801:	pop    esp
  416802:	in     eax,dx
  416803:	cld    
  416804:	minps  xmm1,XMMWORD PTR [edi]
  416807:	pop    esp
  416808:	(bad)  
  416809:	xor    BYTE PTR [eax-0xaa42ffd],ch
  41680f:	(bad)  [ebx-0x6f]
  416812:	inc    ebp
  416813:	lock rcr DWORD PTR [ebx-0x1a460e8c],0x98
  41681b:	fninit 
  41681d:	nop
  41681e:	sub    eax,0x9be5f8f0
  416823:	adc    esp,DWORD PTR [eax-0x67ac12a5]
  416829:	pop    ebx
  41682a:	loope  0x416807
  41682c:	test   dl,ah
  41682e:	or     eax,0x6caba0f0
  416833:	lock adc DWORD PTR [ebx-0x1a853a9d],0xe615f5ff
  41683e:	mov    ah,0x2d
  416840:	jbe    0x416828
  416842:	(bad)  
  416843:	ror    DWORD PTR [edi+edi*1+0x0],1
  416847:	jmp    0x6c500e1b
  41684c:	iret   
  41684d:	out    0xfe,al
  41684f:	into   
  416850:	add    BYTE PTR [eax],al
  416852:	pop    eax
  416853:	pushf  
  416854:	mov    ebx,0xe7e430c7
  416859:	out    dx,eax
  41685a:	xchg   edx,eax
  41685b:	or     DWORD PTR [eax],eax
  41685d:	mov    dh,0xee
  41685f:	pushf  
  416860:	std    
  416861:	scas   al,BYTE PTR es:[edi]
  416862:	sbb    ch,ch
  416864:	je     0x4168d3
  416866:	xor    ah,ah
  416868:	enter  0x33ab,0x9
  41686c:	push   ebp
  41686d:	bound  esp,QWORD PTR [edi]
  41686f:	in     al,0x74
  416871:	fstp   QWORD PTR [ecx]
  416873:	pop    esi
  416874:	adc    BYTE PTR [esi-0xb00ea82],al
  41687a:	cld    
  41687b:	in     al,dx
  41687c:	ret    
  41687d:	je     0x41685f
  41687f:	jecxz  0x416849
  416881:	stos   DWORD PTR es:[edi],eax
  416882:	inc    edi
  416883:	or     DWORD PTR [ebp+0x72],edx
  416886:	out    0x87,eax
  416888:	ret    
  416889:	pop    ecx
  41688a:	jo     0x416870
  41688c:	je     0x416873
  41688e:	in     al,dx
  41688f:	outs   dx,BYTE PTR ds:[esi]
  416890:	mov    DWORD PTR [esi-0x28],ecx
  416893:	xadd   BYTE PTR [edi+ecx*2+0x472bc944],bh
  41689b:	or     edi,edi
  41689d:	mov    esp,0x6054f154
  4168a2:	cwde   
  4168a3:	jecxz  0x4168af
  4168a5:	sub    DWORD PTR [esi],ebx
  4168a7:	push   cs
  4168a8:	pop    edi
  4168a9:	xor    BYTE PTR [ebp+0xe160010],al
  4168af:	adc    eax,0xe309f0e8
  4168b4:	inc    BYTE PTR [eax]
  4168b6:	add    BYTE PTR [eax],al
  4168b8:	jne    0x416882
  4168ba:	jae    0x4168cb
  4168bc:	(bad)  
  4168bd:	mov    BYTE PTR [esi],ah
  4168bf:	inc    ecx
  4168c0:	pop    esi
  4168c1:	repz jae 0x4168d0
  4168c4:	inc    esi
  4168c5:	fwait
  4168c6:	test   edi,edi
  4168c8:	imul   edi,DWORD PTR [edi-0xc9195f8],0x82860c73
  4168d2:	test   edi,edi
  4168d4:	jns    0x41693b
  4168d6:	inc    esp
  4168d7:	hlt    
  4168d8:	xchg   esi,eax
  4168d9:	in     eax,0x3d
  4168db:	inc    ecx
  4168dc:	cs repz jae 0x4168d4
  4168e0:	push   es
  4168e1:	xchg   edx,eax
  4168e2:	test   edi,edi
  4168e4:	fldenv [esp+eax*2-0x8]
  4168e8:	ss mov edi,0xc02e00fb
  4168ee:	add    eax,DWORD PTR [ecx+edi*4-0x45ba780e]
  4168f5:	aas    
  4168f6:	add    BYTE PTR [eax],dl
  4168f8:	out    dx,al
  4168f9:	pop    es
  4168fa:	call   0xfe34d6f7
  4168ff:	mov    DWORD PTR [ebx],esp
  416901:	(bad)  
  416903:	jne    0x41697b
  416905:	shr    BYTE PTR [eax+0x9f36988],0xc0
  41690c:	jmp    0xde42249c
  416911:	pop    es
  416912:	push   DWORD PTR [ebp+0x76]
  416915:	inc    eax
  416916:	call   0xff491818
  41691b:	jne    0x41691d
  41691d:	add    BYTE PTR [edx-0x40],bh
  416920:	adc    BYTE PTR [ebp-0x62],0x7
  416924:	cmp    eax,0xffffff9c
  416927:	loop   0x4168ad
  416929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41692a:	scas   al,BYTE PTR es:[edi]
  41692b:	pop    es
  41692c:	add    BYTE PTR [ebx+0x3f7ef3bb],cl
  416932:	inc    edi
  416933:	repnz std 
  416935:	sub    DWORD PTR [edi-0x10fffd0f],0xffffffc4
  41693c:	sub    eax,0xda7b4741
  416941:	cmp    DWORD PTR [ecx],ebx
  416943:	repnz add cl,BYTE PTR [ebx]
  416946:	xchg   DWORD PTR [ebp+0x76],ebx
  416949:	(bad)  
  41694a:	fucompp 
  41694c:	pop    ebx
  41694d:	dec    DWORD PTR [eax-0xe]
  416950:	add    bh,bh
  416952:	fcmovb st,st(1)
  416954:	pop    ebx
  416955:	sbb    BYTE PTR [edi],0x31
  416958:	add    al,0x68
  41695a:	outs   dx,DWORD PTR ds:[esi]
  41695b:	or     eax,DWORD PTR [ebx+0x0]
  41695e:	nop
  41695f:	mov    eax,0xf0475532
  416964:	idiv   DWORD PTR [edi+0x74ecf8b3]
  41696a:	pop    ds
  41696b:	test   DWORD PTR [edx],0x41c33a68
  416971:	add    BYTE PTR [eax-0x78],bh
  416974:	ss push ebp
  416976:	inc    edi
  416977:	lock jg 0x416971
  41697a:	inc    esi
  41697b:	in     eax,0x35
  41697d:	push   DWORD PTR [edx+0x60]
  416980:	in     eax,dx
  416981:	je     0x416983
  416983:	add    bl,bh
  416985:	mov    cl,ch
  416987:	test   eax,ebp
  416989:	jae    0x4169df
  41698b:	mov    esi,edi
  41698d:	aaa    
  41698e:	sti    
  41698f:	jg     0x4169ae
  416991:	adc    esi,DWORD PTR [edi+0x3]
  416994:	or     edi,ebp
  416996:	dec    esi
  416997:	inc    edx
  416998:	cmp    al,0x1e
  41699a:	js     0x4169a1
  41699c:	mov    DWORD PTR [esi],0x23a97504
  4169a2:	ja     0x4169b4
  4169a4:	pop    ss
  4169a5:	sbb    esi,DWORD PTR [edi+0x8]
  4169a8:	lahf   
  4169a9:	sub    ebp,esi
  4169ab:	(bad)  
  4169ac:	mov    al,ds:0xc4311109
  4169b1:	loop   0x4169d0
  4169b3:	fld    DWORD PTR [edx-0x1e]
  4169b6:	fwait
  4169b7:	adc    ecx,DWORD PTR [eax-0x412e6a4]
  4169bd:	adc    BYTE PTR [ecx],dl
  4169bf:	mov    dl,0x7a
  4169c1:	loop   0x4169c0
  4169c3:	out    dx,eax
  4169c4:	xor    eax,0x69ed2fc9
  4169c9:	loop   0x4169b8
  4169cb:	icebp  
  4169cc:	mov    dl,0x21
  4169ce:	out    dx,al
  4169cf:	cld    
  4169d0:	ret    
  4169d1:	jno    0x4169b1
  4169d3:	in     al,dx
  4169d4:	push   ecx
  4169d5:	loop   0x416a32
  4169d7:	clc    
  4169d8:	pusha  
  4169d9:	adc    BYTE PTR [edx-0x14],ch
  4169dc:	inc    ecx
  4169dd:	loop   0x416a1a
  4169df:	hlt    
  4169e0:	and    BYTE PTR [eax],cl
  4169e2:	push   0xffffffec
  4169e4:	xor    edx,esp
  4169e6:	cmp    ebp,esp
  4169e8:	add    BYTE PTR [eax],al
  4169ea:	and    al,ah
  4169ec:	push   0xffffffec
  4169ee:	and    edx,esp
  4169f0:	sbb    esi,eax
  4169f2:	and    al,bl
  4169f4:	push   0xffffffec
  4169f6:	adc    edx,esp
  4169f8:	sbb    edx,DWORD PTR [eax+ecx*1]
  4169fb:	pop    esp
  4169fc:	fucomp st(4)
  4169fe:	jnp    0x416a11
  416a00:	xchg   ecx,eax
  416a01:	jno    0x4169fc
  416a03:	loope  0x416a82
  416a05:	dec    esp
  416a06:	inc    dh
  416a08:	in     al,0x3
  416a0a:	xchg   edx,eax
  416a0b:	mov    ?,WORD PTR [eax+eax*4+0x4]
  416a0f:	icebp  
  416a10:	gs jbe 0x416a46
  416a13:	loop   0x4169e8
  416a15:	adc    ebx,edi
  416a17:	outs   dx,DWORD PTR ds:[esi]
  416a18:	mov    esp,0x290e4703
  416a1d:	ja     0x416a37
  416a1f:	outs   dx,DWORD PTR ds:[esi]
  416a20:	jmp    0xa863d480
  416a25:	add    esi,DWORD PTR [eax-0x6426ffa5]
  416a2b:	pop    esp
  416a2c:	or     al,0x41
  416a2e:	jecxz  0x4169bc
  416a30:	(bad)  
  416a31:	es lahf 
  416a33:	mov    eax,ds:0x38f4a873
  416a38:	call   0xff2472d9
  416a3d:	loop   0x4169c3
  416a3f:	push   ebp
  416a40:	xor    DWORD PTR [eax+0x1],esi
  416a43:	icebp  
  416a44:	imul   esp,ebx,0xf685f48c
  416a4a:	pop    esp
  416a4b:	push   cs
  416a4c:	shl    BYTE PTR [ebp+0x0],0x0
  416a50:	dec    edi
  416a51:	loop   0x416ac7
  416a53:	add    ebx,esi
  416a55:	lock and DWORD PTR [edi+0x5c],0xffffffe2
  416a5a:	dec    edi
  416a5b:	(bad)  
  416a5c:	(bad)  
  416a5d:	lock dec edi
  416a5f:	into   
  416a60:	mov    dh,0x11
  416a62:	call   0xff219779
  416a67:	rcr    DWORD PTR [ebx+ecx*4+0x561cb6fe],1
  416a6e:	call   0xfeccff34
  416a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a74:	sti    
  416a75:	pop    edx
  416a76:	sbb    BYTE PTR [esi-0x1eff96e4],0x44
  416a7d:	or     eax,ebp
  416a7f:	push   cs
  416a80:	leave  
  416a81:	(bad)  
  416a83:	jo     0x416a0b
  416a85:	loope  0x416a13
  416a87:	and    al,0xdf
  416a89:	push   eax
  416a8a:	(bad)  
  416a8b:	cld    
  416a8c:	push   esp
  416a8d:	loopne 0x416b03
  416a8f:	(bad)  
  416a91:	xchg   esi,eax
  416a92:	push   ebx
  416a93:	jmp    0xd5017edc
  416a98:	push   esp
  416a99:	enter  0x5944,0x43
  416a9d:	or     DWORD PTR [eax],eax
  416a9f:	jmp    0x135b029
  416aa4:	add    DWORD PTR [eax+eax*1],ecx
  416aa7:	add    BYTE PTR [esp+ecx*1+0xc84006a],dl
  416aae:	push   0x0
  416ab0:	add    ecx,DWORD PTR [edx-0xc]
  416ab3:	push   eax
  416ab4:	add    BYTE PTR [eax],al
  416ab6:	popa   
  416ab7:	pop    edx
  416ab8:	clc    
  416ab9:	(bad)  
  416aba:	mov    ebx,0x3275fddc
  416abf:	mov    ebp,0xc6e548e
  416ac4:	or     eax,eax
  416ac6:	cli    
  416ac7:	add    eax,0x8cd63aeb
  416acc:	es inc ecx
  416ace:	pop    esi
  416acf:	repz jae 0x416ae2
  416ad2:	inc    esi
  416ad3:	fwait
  416ad4:	cmp    edi,0x61
  416ad7:	repz jae 0x416ad2
  416ada:	push   cs
  416adb:	mov    ebp,0xf37185ff
  416ae0:	xchg   DWORD PTR [ebp+0x2],eax
  416ae3:	repz jae 0x416afe
  416ae6:	add    DWORD PTR [ecx+0x14],ebx
  416ae9:	(bad)  
  416aea:	jnp    0x416aad
  416aec:	std    
  416aed:	jne    0x416b11
  416aef:	repz jae 0x416afa
  416af2:	push   es
  416af3:	or     eax,0xf2e1ffff
  416af8:	jae    0x416ae6
  416afa:	mov    dh,0xc2
  416afc:	jg     0x416afd
  416afe:	mov    cl,0xf2
  416b00:	inc    ebx
  416b01:	lock lds edx,FWORD PTR [edx-0x3c3d8a03]
  416b08:	cmp    dl,BYTE PTR [esi+ebx*8+0xb]
  416b0c:	push   DWORD PTR [ebp+0x76]
  416b0f:	(bad)  
  416b10:	fadd   DWORD PTR [ecx-0x3d380c8f]
  416b16:	fimul  DWORD PTR [ebx]
  416b18:	push   ebp
  416b19:	mov    eax,DWORD PTR [eax]
  416b1b:	add    BYTE PTR [edx+0x47f4c285],al
  416b21:	cmp    dl,ch
  416b23:	(bad)  
  416b24:	sub    eax,0xb8245cf2
  416b29:	pushf  
  416b2a:	cli    
  416b2b:	out    0xae,eax
  416b2d:	lahf   
  416b2e:	jmp    0xe6ee2a31
  416b33:	(bad)  
  416b34:	dec    edx
  416b35:	repnz sub DWORD PTR [ecx+0x47],eax
  416b39:	repnz add al,BYTE PTR [eax]
  416b3c:	inc    edi
  416b3d:	ins    DWORD PTR es:[edi],dx
  416b3e:	xor    dh,0x89
  416b41:	imul   cl
  416b43:	dec    edi
  416b44:	out    dx,eax
  416b45:	in     eax,0x3
  416b47:	add    BYTE PTR [edi-0x6],al
  416b4a:	jne    0x416b9f
  416b4c:	inc    edi
  416b4d:	repnz pop edx
  416b4f:	(bad)  
  416b50:	sub    BYTE PTR [ecx-0x515e97fe],dh
  416b56:	inc    ebx
  416b57:	add    bh,ch
  416b59:	leave  
  416b5a:	sub    BYTE PTR [ecx+0x47],al
  416b5d:	mov    edi,0x311e0f2e
  416b62:	add    al,0xff
  416b64:	mov    edx,0x39a7dae8
  416b69:	enter  0x67e8,0x9
  416b6d:	loopne 0x416bb0
  416b6f:	add    BYTE PTR [edi+0x47412956],bl
  416b75:	dec    eax
  416b76:	int3   
  416b77:	ds xchg al,dh
  416b7a:	pop    edx
  416b7b:	add    al,BYTE PTR [edi-0x10]
  416b7e:	cmp    dh,0x0
  416b81:	add    BYTE PTR [edx+0x18bdae8],dl
  416b87:	nop
  416b88:	call   0xeaa12e19
  416b8d:	(bad)  
  416b8e:	lock add ah,bl
  416b91:	adc    eax,0xff02f094
  416b96:	pop    edx
  416b97:	ins    BYTE PTR es:[edi],dx
  416b98:	jmp    0x514abb11
  416b9d:	rcl    DWORD PTR [edx-0x22],cl
  416ba0:	pop    ebp
  416ba1:	mov    ebx,0x4ee90606
  416ba6:	int3   
  416ba7:	in     eax,dx
  416ba8:	shl    BYTE PTR [si+0x45df],0xe9
  416bae:	push   ds
  416baf:	or     ebx,edx
  416bb1:	push   ds
  416bb2:	test   al,0x54
  416bb4:	loope  0x416b91
  416bb6:	push   ss
  416bb7:	pop    edi
  416bb8:	cs jmp 0x5e66b08d
  416bbe:	sub    eax,0x897e9df1
  416bc3:	fsubrp st(1),st
  416bc5:	ret    
  416bc6:	hlt    
  416bc7:	and    al,0x81
  416bc9:	sar    DWORD PTR [ecx],0x48
  416bcc:	jmp    0x6436cb24
  416bd1:	jmp    0x3c2a53f
  416bd6:	aaa    
  416bd7:	out    dx,al
  416bd8:	cs pop esp
  416bda:	dec    ebp
  416bdb:	dec    ecx
  416bdc:	sub    BYTE PTR [edi+esi*8],al
  416bdf:	fst    QWORD PTR [ebx-0x4]
  416be2:	pusha  
  416be3:	mov    ebp,0xe88b
  416be8:	inc    ecx
  416be9:	icebp  
  416bea:	loopne 0x416b6e
  416bec:	cmp    esi,ebx
  416bee:	lods   eax,DWORD PTR ds:[esi]
  416bef:	(bad)  
  416bf0:	xor    BYTE PTR [edi],bl
  416bf2:	sub    BYTE PTR [esi+eax*2],al
  416bf5:	or     ecx,ebp
  416bf7:	add    edx,edx
  416bf9:	xor    DWORD PTR [ebp+0x38de19e9],0x5c
  416c00:	dec    ebx
  416c01:	or     cl,ch
  416c03:	add    ebx,DWORD PTR [edi]
  416c05:	pushf  
  416c06:	cmp    al,BYTE PTR [edi+eax*2]
  416c09:	jno    0x416bb2
  416c0b:	sub    BYTE PTR [esi+0x31aa1109],al
  416c11:	dec    eax
  416c12:	jmp    0x5f7b72
  416c17:	sub    BYTE PTR [ebx-0x22],cl
  416c1a:	xor    al,0xde
  416c1c:	cmp    eax,0x61660048
  416c21:	adc    eax,ebp
  416c23:	pop    ebx
  416c24:	loope  0x416c04
  416c26:	inc    cl
  416c28:	xchg   BYTE PTR [esi],bl
  416c2a:	inc    ecx
  416c2b:	jmp    0xa8800b4c
  416c30:	inc    esp
  416c31:	jno    0x416c0b
  416c33:	inc    BYTE PTR ds:0x44eb6809
  416c39:	or     DWORD PTR [eax-0x17eed6d2],eax
  416c3f:	aas    
  416c40:	test   eax,0x96cfede
  416c45:	xlat   BYTE PTR ds:[ebx]
  416c46:	std    
  416c47:	push   ss
  416c48:	outs   dx,DWORD PTR ds:[esi]
  416c49:	dec    ebp
  416c4a:	call   0x12416cd8
  416c4f:	or     DWORD PTR [eax],eax
  416c51:	push   es
  416c52:	loope  0x416c30
  416c54:	(bad)  
  416c55:	je     0x416cc3
  416c57:	in     eax,0x1a
  416c59:	ja     0x416cca
  416c5b:	fmulp  st(0),st
  416c5d:	sub    ebx,DWORD PTR [eax-0x23]
  416c60:	push   ebx
  416c61:	jb     0x416cd2
  416c63:	mov    bl,al
  416c65:	aad    0x61
  416c67:	fdivp  st(6),st
  416c69:	inc    ebx
  416c6a:	dec    ebx
  416c6b:	outs   dx,DWORD PTR ds:[esi]
  416c6c:	es into 
  416c6e:	mov    dh,0x11
  416c70:	call   0xff1e0afa
  416c75:	jo     0x416bfd
  416c77:	ffree  st(6)
  416c79:	in     al,dx
  416c7a:	inc    esp
  416c7b:	sbb    al,0x41
  416c7d:	jmp    0xe94175c6
  416c82:	pop    DWORD PTR [ebp-0x23df600a]
  416c88:	dec    edi
  416c89:	add    DWORD PTR [edi+0xa],eax
  416c8c:	add    cl,ch
  416c8e:	sbb    al,0x17
  416c90:	push   edx
  416c91:	add    dh,bl
  416c93:	or     BYTE PTR [eax+0x25],ch
  416c96:	push   ds
  416c97:	inc    esi
  416c98:	add    BYTE PTR [eax-0xb],ch
  416c9b:	dec    eax
  416c9c:	inc    ecx
  416c9d:	add    BYTE PTR [esi-0x33],al
  416ca0:	cmp    eax,0x33e3de41
  416ca5:	getsec 
  416ca7:	inc    esi
  416ca8:	add    bh,bh
  416caa:	mov    ds:0xb6be6e0,eax
  416caf:	in     al,0xfd
  416cb1:	push   0x45430000
  416cb6:	inc    ecx
  416cb7:	add    BYTE PTR [esi-0x51bebff1],dl
  416cbd:	inc    eax
  416cbe:	fdivr  DWORD PTR [edi]
  416cc0:	out    dx,eax
  416cc1:	or     BYTE PTR [eax+0x2],ch
  416cc4:	sahf   
  416cc5:	or     BYTE PTR [eax-0x191f4c01],al
  416ccb:	dec    edi
  416ccc:	pop    ebx
  416ccd:	in     al,0xfd
  416ccf:	(bad)  
  416cd0:	jecxz  0x416cbd
  416cd2:	cld    
  416cd3:	dec    DWORD PTR [ecx+0x35]
  416cd6:	call   0x4a3cb4
  416cdb:	jmp    ebx
  416cdd:	jecxz  0x416cdc
  416cdf:	jne    0x416d47
  416ce1:	rcl    BYTE PTR [edx-0x381c9683],0xc2
  416ce8:	bound  ecx,QWORD PTR [eax]
  416cea:	push   ebp
  416ceb:	mov    ecx,DWORD PTR [edx]
  416ced:	test   edx,eax
  416cef:	hlt    
  416cf0:	or     bl,ah
  416cf2:	std    
  416cf3:	push   0x1e
  416cf5:	inc    edx
  416cf6:	daa    
  416cf7:	push   DWORD PTR [ebx-0x23]
  416cfa:	out    0x35,al
  416cfc:	pop    ebx
  416cfd:	in     al,0xfd
  416cff:	mov    DWORD PTR [ebx-0xf],esp
  416d02:	lds    eax,FWORD PTR ds:0x41231e
  416d08:	push   ds
  416d09:	or     BYTE PTR [eax],al
  416d0b:	add    BYTE PTR [edi+0x65],al
  416d0e:	xor    dh,0xf9
  416d11:	mov    ah,ch
  416d13:	dec    edi
  416d14:	pop    edi
  416d15:	out    dx,al
  416d16:	add    eax,DWORD PTR [eax]
  416d18:	add    BYTE PTR [eax],al
  416d1a:	inc    edi
  416d1b:	jp     0x416cb2
  416d1d:	push   eax
  416d1e:	inc    edi
  416d1f:	repnz pop edx
  416d21:	aas    
  416d22:	xchg   DWORD PTR [ecx],esi
  416d24:	add    al,0x68
  416d26:	push   cs
  416d27:	mov    dl,0x43
  416d29:	add    BYTE PTR [edi+0x4a],bl
  416d2c:	es inc ecx
  416d2e:	inc    edi
  416d2f:	xor    esi,DWORD PTR [eax]
  416d31:	movd   mm6,DWORD PTR [ecx-0x25c500fe]
  416d38:	(bad)  
  416d3a:	stos   DWORD PTR es:[edi],eax
  416d3b:	sbb    ah,dh
  416d3d:	addr16 pusha 
  416d3f:	mov    dl,0x43
  416d41:	add    BYTE PTR [edi],ch
  416d43:	fld    DWORD PTR [edx+0x41]
  416d46:	inc    edi
  416d47:	jp     0x416d13
  416d49:	ds push es
  416d4b:	repnz pop edx
  416d4d:	add    al,BYTE PTR [edi-0xe]
  416d50:	cmp    dh,0xf2
  416d53:	jmp    0x2b53532
  416d58:	out    0x8c,al
  416d5a:	ret    0xe3d2
  416d5d:	(bad)  
  416d5e:	pusha  
  416d5f:	sbb    edx,0x2f1f651
  416d65:	(bad)  
  416d66:	(bad)  
  416d68:	in     al,0x74
  416d6a:	aas    
  416d6b:	mov    edx,0xb4407cf6
  416d70:	mov    edx,0x4df043c1
  416d75:	mov    esp,DWORD PTR [ebx]
  416d77:	jb     0x416d39
  416d79:	repz sub DWORD PTR [esp+eiz*8+0x47000069],ebx
  416d81:	inc    esi
  416d82:	sbb    al,0xff
  416d84:	xchg   edx,eax
  416d85:	call   0x9d51b64
  416d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d8b:	in     eax,0xbf
  416d8d:	inc    esp
  416d8e:	popf   
  416d8f:	mov    ebp,0x42d6094b
  416d94:	inc    edi
  416d95:	or     ecx,ebp
  416d97:	add    eax,DWORD PTR [edi-0x74]
  416d9a:	imul   ebp,ebp,0xffffffea
  416d9d:	fidivr DWORD PTR [ebp+0x54]
  416da0:	outs   dx,DWORD PTR ds:[esi]
  416da1:	add    eax,0xf14703e8
  416da6:	rcl    BYTE PTR [edx+0x47],0x9
  416daa:	ror    DWORD PTR [edi+eax*4+0x48],1
  416dae:	jmp    0xa88a7e0e
  416db3:	add    ebp,DWORD PTR [edi]
  416db5:	ror    DWORD PTR ds:0xfbda4743,0xf4
  416dbc:	pop    edi
  416dbd:	dec    eax
  416dbe:	jmp    0x415289a7
  416dc3:	inc    edi
  416dc4:	fisubr DWORD PTR ds:0xa848f85c
  416dcb:	add    ebx,DWORD PTR [edi]
  416dcd:	dec    edx
  416dce:	test   eax,0x31714742
  416dd3:	and    eax,0x1810906
  416dd8:	inc    edi
  416dd9:	or     DWORD PTR [ecx-0x1b],ebp
  416ddc:	repz adc BYTE PTR [ecx],dl
  416ddf:	inc    ebx
  416de0:	arpl   dx,bx
  416de2:	cmc    
  416de3:	jbe    0x416de5
  416de5:	add    bl,al
  416de7:	shr    dh,cl
  416de9:	in     al,0x51
  416deb:	cmp    ecx,edx
  416ded:	mov    eax,0xe4e908f8
  416df2:	mov    ebx,0x4f6ed5dd
  416df7:	icebp  
  416df8:	data16 addr16 xor dl,bl
  416dfc:	scas   eax,DWORD PTR es:[edi]
  416dfd:	rol    DWORD PTR [ecx+ecx*1+0x14],0x79
  416e02:	sub    al,0x86
  416e04:	jmp    FWORD PTR [eax+eiz*1+0x2c430070]
  416e0b:	fidiv  DWORD PTR [ecx+esi*8-0x14]
  416e0f:	das    
  416e10:	jl     0x416db0
  416e12:	jmp    0x416da4
  416e14:	inc    esp
  416e15:	xchg   ebp,eax
  416e16:	sahf   
  416e17:	or     DWORD PTR [eax+0xd],ebp
  416e1a:	mov    ecx,DWORD PTR [eax+0x0]
  416e1d:	adc    DWORD PTR [ebp-0x1416beb7],ecx
  416e23:	adc    al,0xf
  416e25:	rol    BYTE PTR [ebp-0x3a8617f7],0xda
  416e2c:	(bad)  
  416e2d:	repnz add al,0x56
  416e30:	sbb    DWORD PTR [ecx+0x4600091c],edi
  416e36:	loop   0x416e99
  416e38:	mov    WORD PTR [ecx+0x46500905],gs
  416e3e:	sbb    DWORD PTR [ecx],edx
  416e40:	call   0xff1c55b3
  416e45:	inc    ecx
  416e46:	out    dx,eax
  416e47:	pop    ebx
  416e48:	jmp    FWORD PTR [esi]
  416e4a:	add    BYTE PTR [eax],al
  416e4c:	out    dx,al
  416e4d:	or     BYTE PTR [eax+0x6a],ch
  416e50:	add    al,0x48
  416e52:	add    BYTE PTR [ecx-0x16beb6e2],dl
  416e58:	arpl   WORD PTR [edi+ecx*1],dx
  416e5b:	rol    BYTE PTR ds:0xc545e809,0xda
  416e62:	(bad)  
  416e63:	repnz test BYTE PTR [ebp+0x19],dl
  416e67:	cdq    
  416e68:	cld    
  416e69:	or     BYTE PTR [eax],al
  416e6b:	(bad)  
  416e6c:	stos   DWORD PTR es:[edi],eax
  416e6d:	popa   
  416e6e:	mov    WORD PTR [ecx],gs
  416e70:	add    cl,BYTE PTR [ecx]
  416e72:	push   eax
  416e73:	ficomp WORD PTR [esi-0x1fcd17ff]
  416e79:	xlat   BYTE PTR ds:[ebx]
  416e7a:	inc    cl
  416e7c:	mov    esp,0x100ff56
  416e81:	in     eax,dx
  416e82:	jae    0x416e80
  416e84:	loope  0x416eb8
  416e86:	or     al,ch
  416e88:	aam    0x38
  416e8a:	(bad)  
  416e8b:	jmp    edi
  416e8d:	iret   
  416e8e:	add    al,BYTE PTR [eax]
  416e90:	dec    ebx
  416e91:	mov    dl,ch
  416e93:	sub    DWORD PTR [edx+0x445754e9],0xd
  416e9a:	push   0x2a
  416e9c:	shl    DWORD PTR [edx],0x8
  416e9f:	call   0x40a706
  416ea4:	push   edi
  416ea5:	inc    edx
  416ea6:	cld    
  416ea7:	push   0xffffffee
  416ea9:	in     al,0xa7
  416eab:	and    BYTE PTR [ecx-0x14],0x9
  416eaf:	rol    BYTE PTR [eax],0x0
  416eb2:	jmp    0xef0c:0xae684ed5
  416eb9:	mov    esi,0x413f5586
  416ebe:	sahf   
  416ebf:	sbb    al,0xff
  416ec1:	jne    0x416e79
  416ec3:	in     al,0xf
  416ec5:	mov    ds:0x3de6ec61,eax
  416eca:	shr    bl,1
  416ecc:	std    
  416ecd:	mov    ebx,DWORD PTR [ebx-0x61bed7dc]
  416ed3:	xchg   DWORD PTR [ebx],edi
  416ed5:	sub    al,0x96
  416ed7:	dec    ebp
  416ed8:	add    BYTE PTR [eax+0x45740c91],al
  416ede:	(bad)  
  416edf:	mov    ds:0x135e413e,al
  416ee4:	call   0x4e2da6
  416ee9:	or     ebp,DWORD PTR [esi]
  416eeb:	xor    DWORD PTR [edi],ebx
  416eed:	push   esi
  416eee:	inc    esi
  416eef:	in     eax,dx
  416ef0:	test   edi,edi
  416ef2:	popa   
  416ef3:	sbb    al,0x68
  416ef5:	add    BYTE PTR [esi],ch
  416ef7:	fstp   TBYTE PTR [eax+ebp*2+0x41435947]
  416efe:	inc    edi
  416eff:	adc    ah,bl
  416f01:	je     0x416f42
  416f03:	mov    edx,0x9720a1b4
  416f08:	jmp    0x46ea:0xe19f9afd
  416f0f:	xor    BYTE PTR [ebp+edi*1+0x45ddf547],al
  416f16:	add    BYTE PTR [eax],al
  416f18:	add    esi,DWORD PTR [ebx+0x7ef8b8c2]
  416f1e:	loope  0x416f1e
  416f20:	cmc    
  416f21:	pop    ss
  416f22:	sbb    eax,DWORD PTR [edi]
  416f24:	jb     0x416f71
  416f26:	loop   0x416f9c
  416f28:	jecxz  0x416f80
  416f2a:	pop    eax
  416f2b:	or     bh,ch
  416f2d:	sti    
  416f2e:	pop    esi
  416f2f:	call   eax
  416f31:	push   es
  416f32:	inc    edx
  416f33:	leave  
  416f34:	add    eax,0xcc5502e6
  416f39:	inc    ebp
  416f3a:	xchg   bl,al
  416f3c:	mov    ebx,0x476a3997
  416f41:	int3   
  416f42:	sub    eax,0xeada32ff
  416f47:	stc    
  416f48:	sbb    eax,0x288e217
  416f4d:	push   ds
  416f4e:	mov    ?,WORD PTR [edi+ebx*2]
  416f51:	or     al,BYTE PTR [ebp+0x0]
  416f54:	mov    esp,0x6282eec
  416f59:	loop   0x416edd
  416f5b:	ds inc edi
  416f5d:	jbe    0x416fa6
  416f5f:	push   0x43a1ae
  416f64:	adc    dl,bh
  416f66:	and    DWORD PTR [eax+0x47],edx
  416f69:	loop   0x416f78
  416f6b:	rcl    bl,0xbe
  416f6e:	cmp    al,ch
  416f70:	in     eax,0x6e
  416f72:	loop   0x416f72
  416f74:	test   DWORD PTR [eax],0xe6470451
  416f7a:	sahf   
  416f7b:	ins    BYTE PTR es:[edi],dx
  416f7c:	add    BYTE PTR [eax],al
  416f7e:	in     al,dx
  416f7f:	dec    ecx
  416f80:	sub    BYTE PTR [edi+edx*4],al
  416f83:	(bad)  
  416f84:	push   ebx
  416f85:	or     al,0x1f
  416f87:	ds mov esp,ecx
  416f8a:	and    edx,esp
  416f8c:	push   0xc1d7185f
  416f91:	add    ecx,DWORD PTR [ecx-0x6dfc1177]
  416f97:	shr    DWORD PTR [esi],cl
  416f99:	loopne 0x416fd0
  416f9b:	leave  
  416f9c:	pop    edi
  416f9d:	loope  0x416f98
  416f9f:	(bad)  
  416fa0:	xchg   ebp,eax
  416fa1:	(bad)  
  416fa2:	mov    ds:0xac56e611,al
  416fa7:	(bad)  
  416fa8:	sti    
  416fa9:	(bad)  
  416fab:	pop    esp
  416fac:	icebp  
  416fad:	jmp    0x416fab
  416faf:	push   ebx
  416fb0:	jbe    0x416f93
  416fb2:	jno    0x416feb
  416fb4:	mov    al,ds:0xbc0944c6
  416fb9:	mov    WORD PTR [edx+ecx*4+0x92ee024],gs
  416fc0:	ret    
  416fc1:	das    
  416fc2:	mov    al,0x5c
  416fc4:	loope  0x416fb1
  416fc6:	sub    dl,BYTE PTR [ebx+0x46]
  416fc9:	loope  0x416f9a
  416fcb:	dec    esp
  416fcc:	cmp    eax,0xe963476e
  416fd1:	imul   edi,DWORD PTR [esi+0x49],0xffffffa8
  416fd5:	add    ebx,DWORD PTR [edi]
  416fd7:	or     ecx,ebp
  416fd9:	add    eax,edi
  416fdb:	loope  0x416f8d
  416fdd:	cmp    DWORD PTR [ecx-0x2a],0xffffffe1
  416fe1:	ret    
  416fe2:	add    BYTE PTR [eax],al
  416fe4:	hlt    
  416fe5:	cmc    
  416fe6:	mov    eax,0x58f59eb
  416feb:	loope  0x416ffd
  416fed:	popa   
  416fee:	jmp    0xffd8d7f6
  416ff3:	add    BYTE PTR [esi+edx*1-0x29eb16bf],0x74
  416ffb:	icebp  
  416ffc:	sub    al,0xe9
  416ffe:	mov    al,ds:0xcee27de
  417003:	push   esp
  417004:	xlat   BYTE PTR es:[ebx]
  417006:	(bad)  
  417007:	push   esp
  417008:	daa    
  417009:	xlat   BYTE PTR ds:[ebx]
  41700a:	je     0x416ffd
  41700c:	sub    al,0x56
  41700e:	jp     0x416fce
  417010:	daa    
  417011:	rol    ecx,0xed
  417014:	inc    esp
  417015:	cmp    al,0x8b
  417017:	mov    ebp,0x13fbc9c3
  41701c:	dec    ebx
  41701d:	arpl   WORD PTR ds:0xe801919e,bp
  417023:	int    0x92
  417025:	(bad)  
  417026:	(bad)  
  417027:	pusha  
  417028:	adc    ebp,0xe644e967
  41702e:	mov    ebp,0x41484011
  417033:	jmp    0x28826894
  417038:	inc    ebx
  417039:	(bad)  
  41703a:	je     0x41702d
  41703c:	lods   al,BYTE PTR ds:[esi]
  41703d:	loope  0x416fdf
  41703f:	pop    esi
  417040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417041:	(bad)  
  417042:	je     0x417099
  417044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417045:	pop    esp
  417046:	or     BYTE PTR [ecx+0x0],al
  417049:	add    BYTE PTR [ecx],al
  41704b:	push   ebx
  41704c:	inc    DWORD PTR [esi-0x73]
  41704f:	mov    DWORD PTR [ebx],0xeb8251e9
  417055:	push   0xffffff88
  417057:	shr    DWORD PTR [ecx-0x17],1
  41705a:	sbb    ah,BYTE PTR [edi]
  41705c:	call   FWORD PTR [esp+ecx*2+0x67a0e8e1]
  417063:	(bad)  
  417064:	mov    BYTE PTR [eax+edx*4+0x77e9006d],ch
  41706b:	xchg   ebx,eax
  41706c:	add    BYTE PTR [bp+si+0x4a],ch
  417070:	inc    ecx
  417071:	add    BYTE PTR [esi+0x5e4140fa],dh
  417077:	call   0x7b8778ef
  41707c:	lahf   
  41707d:	jmp    FWORD PTR [ecx]
  41707f:	data16 add BYTE PTR [eax],al
  417082:	or     DWORD PTR [esi+eiz*2+0x27],esi
  417086:	pop    edi
  417087:	dec    esi
  417088:	add    BYTE PTR [eax+0x4f],ch
  41708b:	dec    esi
  41708c:	inc    ecx
  41708d:	add    BYTE PTR [ecx],cl
  41708f:	xor    ecx,DWORD PTR [eax]
  417091:	call   0x3f1f3a
  417096:	fnstenv [edx]
  417098:	cld    
  417099:	call   DWORD PTR [ebx+0x5]
  41709c:	call   0xfdf59894
  4170a1:	leave  
  4170a2:	lods   al,BYTE PTR ds:[esi]
  4170a3:	add    DWORD PTR [eax],eax
  4170a5:	push   ebp
  4170a6:	fld    DWORD PTR gs:[ecx+0x5380bac4]
  4170ad:	adc    BYTE PTR [eax],al
  4170af:	add    BYTE PTR [ebp-0x29],dl
  4170b2:	push   0xfc426b00
  4170b7:	push   eax
  4170b8:	pop    ecx
  4170b9:	xor    cl,BYTE PTR [eax]
  4170bb:	push   0xffffffde
  4170bd:	mov    bl,0x73
  4170bf:	adc    BYTE PTR [ecx],ch
  4170c1:	pop    ss
  4170c2:	sbb    al,0x85
  4170c4:	outs   dx,BYTE PTR ds:[esi]
  4170c5:	xor    ah,BYTE PTR [edi]
  4170c7:	mov    esi,ebx
  4170c9:	mov    ah,0x8e
  4170cb:	push   0xffffff9e
  4170cd:	bound  eax,QWORD PTR [eax]
  4170cf:	push   0x809
  4170d4:	pop    ecx
  4170d5:	xor    cl,BYTE PTR [edx+ebp*2]
  4170d8:	pop    ecx
  4170d9:	mov    ah,0x70
  4170db:	add    al,0x84
  4170dd:	or     BYTE PTR [edx+0x0],ch
  4170e0:	push   esi
  4170e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e2:	dec    ebx
  4170e3:	add    BYTE PTR [esi+0x58],ch
  4170e6:	(bad)  
  4170e7:	jne    0x417130
  4170e9:	(bad)  
  4170ea:	jmp    0x41714b
  4170ec:	stc    
  4170ed:	loope  0x4170f1
  4170ef:	leave  
  4170f0:	test   esi,ebx
  4170f2:	add    dl,BYTE PTR [ebp-0x34]
  4170f5:	push   es
  4170f6:	add    ebx,0x53
  4170f9:	cmp    DWORD PTR [si],edx
  4170fc:	mov    esp,0xd20068b0
  417101:	and    al,0xe0
  417103:	dec    edi
  417104:	cmp    BYTE PTR ds:0xeabaff10,bh
  41710a:	push   0xf83d2800
  41710f:	(bad)  
  417110:	jne    0x41710c
  417112:	mov    BYTE PTR [edi+0xb920000],bh
  417118:	mov    edx,DWORD PTR [ebx+edx*1+0x32]
  41711c:	imul   eax,DWORD PTR [eax],0xff6ae29d
  417122:	inc    esp
  417123:	loop   0x417127
  417125:	push   DWORD PTR [edx-0x2e]
  417128:	push   0x7eff0ff
  41712d:	push   0x47
  41712f:	or     BYTE PTR [eax+ebp*8],al
  417132:	jl     0x417151
  417134:	add    al,0x0
  417136:	mov    bh,0x52
  417138:	pop    eax
  417139:	cld    
  41713a:	fild   QWORD PTR [edi-0x56b8ffb4]
  417140:	ror    BYTE PTR [edi],0x47
  417143:	xchg   ebp,eax
  417144:	mov    ebx,ebp
  417146:	mov    eax,0x3aff0abc
  41714b:	(bad)  
  41714d:	push   edx
  41714e:	das    
  41714f:	inc    ebx
  417150:	fdivp  st(6),st
  417152:	sbb    bl,dh
  417154:	jmp    0xa7d1:0x2e20a97
  41715b:	pop    esi
  41715c:	ret    
  41715d:	add    edi,esi
  41715f:	and    bl,BYTE PTR [eax+0xc]
  417162:	or     BYTE PTR [eax],0x9c
  417165:	sti    
  417166:	pusha  
  417167:	pop    eax
  417168:	mov    eax,ds:0x9bd371de
  41716d:	imul   DWORD PTR [ecx+0x5d]
  417170:	stc    
  417171:	(bad)  
  417173:	lock adc BYTE PTR [ecx-0x21],ah
  417177:	sar    ebp,cl
  417179:	retf   
  41717a:	add    BYTE PTR [eax],al
  41717c:	xchg   ah,bh
  41717e:	call   0xee262dbb
  417183:	push   edi
  417184:	dec    edi
  417185:	rcr    BYTE PTR [ebx-0x4],cl
  417188:	and    al,dh
  41718a:	pusha  
  41718b:	fnsave [ecx]
  41718d:	rcr    DWORD PTR [ebx+0x10],cl
  417190:	pop    ds
  417191:	test   DWORD PTR [esp+eax*1],ebx
  417194:	inc    edi
  417195:	dec    ecx
  417196:	sbb    ebp,ebx
  417198:	xchg   ebx,eax
  417199:	add    eax,0xe12f57be
  41719e:	icebp  
  41719f:	pop    ebx
  4171a0:	or     bl,dl
  4171a2:	lods   eax,DWORD PTR ds:[esi]
  4171a3:	push   edi
  4171a4:	pop    ebx
  4171a5:	rcr    BYTE PTR [ebx],cl
  4171a7:	hlt    
  4171a8:	stc    
  4171a9:	pop    esp
  4171aa:	add    esp,ebp
  4171ac:	and    edx,DWORD PTR [ecx-0x6a]
  4171af:	(bad)  
  4171b1:	(bad)  
  4171b2:	hlt    
  4171b3:	add    edi,DWORD PTR [edx+0x7e]
  4171b6:	xchg   esp,eax
  4171b7:	add    DWORD PTR [esi+edi*4],0x79
  4171bb:	fst    st(1)
  4171bd:	sar    bl,cl
  4171bf:	sti    
  4171c0:	mov    ebx,0xc1dfe88c
  4171c5:	sar    BYTE PTR [eax+0x510133dc],cl
  4171cb:	mov    esi,0xdd55d2b2
  4171d0:	xor    esi,ecx
  4171d2:	pop    ebx
  4171d3:	xchg   DWORD PTR [eax+0x8dd45da],esp
  4171d9:	shl    BYTE PTR [ebx+0x5c900f],cl
  4171df:	loope  0x4171e1
  4171e1:	add    BYTE PTR [esi+esi*8+0x60a22efe],bl
  4171e8:	add    BYTE PTR [ebx-0x15009ebc],dl
  4171ee:	inc    esp
  4171ef:	or     DWORD PTR [ebp-0x122bc94],ecx
  4171f5:	push   cs
  4171f6:	sbb    ebx,DWORD PTR [edi-0x1]
  4171f9:	push   es
  4171fa:	lock clc 
  4171fc:	imul   ebp,ecx,0x5be808de
  417202:	test   DWORD PTR [eax],0xe1c82600
  417208:	repnz out 0x1b,al
  41720b:	add    al,BYTE PTR [eax]
  41720d:	jmp    0xddc63c56
  417212:	pop    ss
  417213:	sar    esi,cl
  417215:	jmp    0x41725b
  417217:	or     DWORD PTR [eax],eax
  417219:	scas   al,BYTE PTR es:[edi]
  41721a:	rcr    ecx,0xf2
  41721d:	mov    esi,0xe9fed1f3
  417222:	inc    esp
  417223:	retf   0xad84
  417226:	pop    ss
  417227:	sar    esi,cl
  417229:	jmp    0x72417b72
  41722e:	cmp    ecx,esi
  417230:	mov    bh,bl
  417232:	pop    esi
  417233:	or     DWORD PTR [ebp-0x1290b9c],ecx
  417239:	xchg   BYTE PTR [esp+eax*4],dl
  41723c:	test   BYTE PTR [ebp+0x19fed2f7],cl
  417242:	mov    eax,0x7ae78c
  417247:	add    BYTE PTR [ebx+0x11664fd2],ah
  41724d:	stc    
  41724e:	(bad)  
  41724f:	aam    0x40
  417251:	shl    BYTE PTR [ecx+eiz*8+0x1e],cl
  417255:	or     edi,edi
  417257:	aam    0x9c
  417259:	rcl    BYTE PTR [ecx+0x0],cl
  41725c:	jmp    0xfdb5:0x4de8bb88
  417263:	add    BYTE PTR [ecx+0x6e011a89],ah
  417269:	add    eax,0xb952bd83
  41726e:	std    
  41726f:	call   FWORD PTR [esi+0x4]
  417272:	test   BYTE PTR [edi],cl
  417274:	pop    edi
  417275:	add    eax,0x99ebc700
  41727a:	icebp  
  41727b:	inc    DWORD PTR [ecx+0x6]
  41727e:	add    bh,ch
  417280:	adc    BYTE PTR [esi+0x40],bl
  417283:	inc    ecx
  417284:	lahf   
  417285:	add    eax,0xb12e858d
  41728a:	std    
  41728b:	(bad)  
  41728c:	jle    0x41726b
  41728e:	adc    cl,BYTE PTR [esi+ebx*1+0xd]
  417292:	test   eax,eax
  417294:	mov    al,BYTE PTR [edi-0x39]
  417297:	test   edx,ebx
  417299:	mov    eax,0xd2ffffd
  41729e:	out    dx,eax
  41729f:	mov    esi,0x41411776
  4172a4:	push   ds
  4172a5:	add    BYTE PTR [ebx-0x24b4e00],0x50
  4172ac:	add    BYTE PTR [eax],al
  4172ae:	(bad)  
  4172af:	mov    edx,0x89de0049
  4172b4:	mov    esi,0x83cbfd74
  4172b9:	aam    0xbd
  4172bb:	mov    ah,0xfd
  4172bd:	add    ch,dh
  4172bf:	jecxz  0x41727d
  4172c1:	push   0x414634
  4172c6:	arpl   WORD PTR [edx-0x4bce0402],cx
  4172cc:	dec    esi
  4172cd:	call   0x41b34a
  4172d2:	sub    eax,ebp
  4172d4:	or     eax,0x3834785
  4172d9:	add    BYTE PTR [edi-0x36],al
  4172dc:	pop    eax
  4172dd:	inc    ecx
  4172de:	push   es
  4172df:	loop   0x417268
  4172e1:	test   BYTE PTR [edi+0x16],al
  4172e4:	(bad)  
  4172e6:	test   DWORD PTR [ecx-0x4d],0xde2474b
  4172ed:	shl    bl,0x70
  4172f0:	test   DWORD PTR [esi+edi*2],edi
  4172f3:	mov    eax,ds:0xe7470043
  4172f8:	jle    0x41727a
  4172fa:	inc    edi
  4172fb:	loop   0x4172ff
  4172fd:	call   DWORD PTR [edx+0x50fed6fa]
  417303:	pop    edi
  417304:	sbb    edi,0xfed9d754
  41730a:	cli    
  41730b:	int    0xd5
  41730d:	(bad)  
  41730e:	cmp    BYTE PTR [edi-0x80],dl
  417311:	jecxz  0x417313
  417313:	add    BYTE PTR [edi+ebp*4],dh
  417316:	(bad)  [edx+eax*8+0x20fed599]
  41731d:	adc    ch,BYTE PTR [esi+0x1]
  417320:	lods   eax,DWORD PTR ds:[esi]
  417321:	loop   0x41738f
  417323:	add    BYTE PTR [ebp-0x45ff931e],bl
  417329:	pop    esp
  41732a:	jecxz  0x41731e
  41732c:	add    BYTE PTR [edi-0x66ad00ce],bl
  417332:	inc    ebx
  417333:	inc    ecx
  417334:	inc    edi
  417335:	fcmovnb st,st(2)
  417337:	jae    0x4172b9
  417339:	ja     0x41738a
  41733b:	adc    al,0xe0
  41733d:	xor    al,0xbb
  41733f:	repnz fadd DWORD PTR [esi+0x52f3b4d9]
  417346:	(bad)  
  417348:	enter  0xf2cc,0xfe
  41734c:	cli    
  41734d:	jne    0x417324
  41734f:	(bad)  
  417350:	mov    eax,0xb3de5108
  417355:	iret   
  417356:	pop    ebp
  417357:	(bad)  
  417359:	lods   al,BYTE PTR ds:[esi]
  41735a:	pop    ecx
  41735b:	fisub  DWORD PTR [ecx+0x474d2ee0]
  417361:	or     DWORD PTR [edx-0x8],edx
  417364:	xchg   ecx,eax
  417365:	push   ebp
  417366:	aad    0xda
  417368:	shl    eax,cl
  41736a:	cmp    edx,ebx
  41736c:	or     edi,0xcf75e773
  417372:	and    eax,0x1df8fbda
  417377:	nop
  417378:	add    BYTE PTR [eax],al
  41737a:	xchg   esp,eax
  41737b:	fist   DWORD PTR ds:0xbb968da
  417381:	ficomp DWORD PTR [ecx-0x31]
  417384:	cmp    esp,edi
  417386:	push   ebp
  417387:	iret   
  417388:	std    
  417389:	jmp    0xcc0e:0x3e94374
  417390:	aam    0x3
  417392:	xchg   edx,eax
  417393:	adc    ah,0x85
  417396:	add    al,0x92
  417398:	xor    eax,0x61f5938d
  41739d:	not    bl
  41739f:	inc    esp
  4173a0:	xchg   ecx,eax
  4173a1:	xor    al,0xad
  4173a3:	or     esi,eax
  4173a5:	dec    edi
  4173a6:	inc    ebx
  4173a7:	into   
  4173a8:	xor    ecx,DWORD PTR [ebx*4+0x5b4fb609]
  4173af:	into   
  4173b0:	sbb    dh,BYTE PTR [eax]
  4173b2:	ret    0x1bc9
  4173b5:	xor    BYTE PTR [eax],cl
  4173b7:	inc    ebp
  4173b8:	pop    ebp
  4173b9:	add    al,0x47
  4173bb:	or     ecx,ebp
  4173bd:	mov    WORD PTR [ebx-0x6f],?
  4173c0:	popa   
  4173c1:	test   bl,0x44
  4173c4:	inc    ebp
  4173c5:	xor    al,0xc2
  4173c7:	inc    esp
  4173c8:	test   eax,0xfff95d34
  4173cd:	jne    0x4173df
  4173cf:	xchg   ecx,eax
  4173d0:	(bad)  
  4173d1:	sbb    ecx,DWORD PTR [edi-0x76]
  4173d4:	jl     0x41737b
  4173d6:	dec    ebx
  4173d7:	push   ebp
  4173d8:	daa    
  4173d9:	ins    BYTE PTR es:[edi],dx
  4173da:	adc    cl,cl
  4173dc:	(bad)  
  4173dd:	fadd   QWORD PTR [eax]
  4173df:	add    BYTE PTR [eax+0x7ff974cf],dh
  4173e5:	pop    ss
  4173e6:	(bad)  
  4173e7:	mov    esp,0xf174ce48
  4173ec:	pushf  
  4173ed:	mov    edx,0xcf9e36fc
  4173f2:	ss inc ecx
  4173f4:	loopne 0x417437
  4173f6:	add    cl,ch
  4173f8:	retf   
  4173f9:	mov    DWORD PTR [ebx],0x748d001e
  4173ff:	aaa    
  417400:	jb     0x417399
  417402:	mov    dh,BYTE PTR [esp+edi*4+0x61183]
  417409:	xchg   ecx,eax
  41740a:	(bad)  
  41740b:	fwait
  41740c:	cmp    al,0x2e
  41740e:	leave  
  41740f:	sub    edi,DWORD PTR [ebx]
  417411:	into   
  417412:	push   ebx
  417413:	bound  ebp,QWORD PTR [edi]
  417415:	mov    ebx,eax
  417417:	loope  0x417427
  417419:	iret   
  41741a:	(bad)  
  41741b:	ss mov edx,0x1a621034
  417421:	jge    0x4173a7
  417423:	sar    esi,1
  417425:	into   
  417426:	(bad)  
  417427:	sbb    DWORD PTR [ecx+0x3b34ff09],esp
  41742d:	arpl   WORD PTR [eax],ax
  41742f:	mov    dh,0x91
  417431:	stc    
  417432:	(bad)  
  417433:	sbb    ebx,DWORD PTR [edi-0x7c]
  417436:	mov    edi,0x84c6661c
  41743b:	popf   
  41743c:	push   cs
  41743d:	iret   
  41743e:	(bad)  
  41743f:	jmp    0x62417d88
  417444:	add    BYTE PTR [eax],al
  417446:	imul   edx,esi,0xb0c900fd
  41744c:	mov    DWORD PTR [edx],edx
  41744e:	pop    ebx
  41744f:	dec    edi
  417450:	sti    
  417451:	(bad)  
  417452:	cmp    DWORD PTR [ecx+0xa238d4e],esi
  417458:	(bad)  
  417459:	jmp    FWORD PTR [ecx]
  41745b:	sbb    ch,BYTE PTR [edx+0x10]
  41745e:	or     DWORD PTR [edi-0xa],edi
  417461:	(bad)  
  417462:	stc    
  417463:	mov    al,0xfd
  417465:	push   edx
  417466:	jp     0x4173ec
  417468:	mov    ebx,0xfdb108fc
  41746d:	add    dl,dl
  41746f:	and    ecx,DWORD PTR [ebp-0x24f9143]
  417475:	jmp    FWORD PTR [ecx]
  417477:	aas    
  417478:	adc    bh,bh
  41747a:	rol    DWORD PTR ds:0x1d3ff57,cl
  417480:	call   0xfdf2ad98
  417485:	and    DWORD PTR [ecx],0xffffffda
  417488:	std    
  417489:	lea    ecx,[edx-0x50]
  41748c:	std    
  41748d:	call   ebx
  41748f:	out    0xe9,eax
  417491:	stos   BYTE PTR es:[edi],al
  417492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417493:	pop    ebx
  417494:	idiv   esi
  417496:	sub    DWORD PTR [ebp+0x7b291289],esi
  41749c:	idiv   dh
  41749e:	or     DWORD PTR [ebp+0x142652fd],esi
  4174a4:	leave  
  4174a5:	ret    0x8fa
  4174a8:	push   ebp
  4174a9:	mov    eax,DWORD PTR [eax]
  4174ab:	add    dl,bh
  4174ad:	xchg   dl,al
  4174af:	clc    
  4174b0:	enter  0xfdb4,0x57
  4174b4:	sbb    cl,BYTE PTR gs:[ebx+ecx*4]
  4174b8:	sbb    al,0x82
  4174ba:	cmp    eax,0xffffffa8
  4174bd:	mov    ah,0xfd
  4174bf:	push   eax
  4174c0:	push   esp
  4174c1:	add    eax,0x7347006a
  4174c6:	push   eax
  4174c7:	or     al,0xd8
  4174c9:	adc    BYTE PTR [eax*4-0x38ca31f9],bl
  4174d0:	or     BYTE PTR [esi+0x4],0x0
  4174d4:	inc    edi
  4174d5:	loop   0x417549
  4174d7:	mov    dl,dl
  4174d9:	pop    edx
  4174da:	(bad)  
  4174db:	(bad)  
  4174dc:	mov    al,0x57
  4174de:	repnz mov WORD PTR [edx],es
  4174e1:	cs xor al,0x8d
  4174e4:	retf   0xd636
  4174e7:	(bad)  
  4174e8:	cwde   
  4174e9:	xchg   edx,eax
  4174ea:	push   0xdc4d9010
  4174ef:	std    
  4174f0:	mov    BYTE PTR [ebx],cl
  4174f2:	xlat   BYTE PTR ds:[ebx]
  4174f3:	push   ecx
  4174f4:	push   ebx
  4174f5:	xor    al,BYTE PTR [ebx+0x72e27b7c]
  4174fb:	jae    0x417524
  4174fd:	push   ebp
  4174fe:	cdq    
  4174ff:	sti    
  417500:	imul   ebp,ebx,0x6d608fd6
  417506:	push   es
  417507:	call   edx
  417509:	jmp    0x3815d3b
  41750e:	xlat   BYTE PTR ds:[ebx]
  41750f:	inc    BYTE PTR [eax]
  417511:	add    ah,al
  417513:	and    esi,esp
  417515:	pop    DWORD PTR [eax-0x5b]
  417518:	(bad)  
  417519:	(bad)  
  41751a:	mov    dl,0x9
  41751c:	je     0x417508
  41751e:	cmc    
  41751f:	push   esi
  417520:	jo     0x417519
  417522:	sub    DWORD PTR [ebx-0x4cca752b],ebp
  417528:	(bad)  
  417529:	neg    DWORD PTR [ecx]
  41752b:	mov    ebx,0xda75fed5
  417530:	xor    eax,0x2da05c9
  417535:	push   ebp
  417536:	int3   
  417537:	lds    eax,FWORD PTR [ecx-0x290c483d]
  41753d:	je     0x417582
  41753f:	or     DWORD PTR [ecx-0x16f68034],edx
  417545:	or     al,BYTE PTR [edi]
  417547:	push   esi
  417548:	in     al,dx
  417549:	xor    eax,0x3dcc70e
  41754e:	imul   al
  417550:	imul   eax,ebx,0x88988046
  417556:	or     ebx,ebp
  417558:	sbb    BYTE PTR [edx],dh
  41755a:	mov    eax,0x24ebdd55
  41755f:	jnp    0x4175c6
  417561:	(bad)  
  417562:	pop    ebp
  417563:	ret    0x486f
  417566:	jnp    0x417547
  417568:	loop   0x417577
  41756a:	dec    eax
  41756b:	xchg   ebx,eax
  41756c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41756d:	sub    al,0xa3
  41756f:	or     DWORD PTR [edi+ebp*4-0x10c077f9],ebp
  417576:	add    BYTE PTR [eax],al
  417578:	neg    cl
  41757a:	add    esi,ecx
  41757c:	iret   
  41757d:	push   ebp
  41757e:	sbb    edx,ebp
  417580:	sub    BYTE PTR [ebx],dl
  417582:	test   BYTE PTR [ebp+0x330d1b04],0xef
  417589:	add    eax,0x7e4744ab
  41758e:	mov    ds:0x14e100bb,eax
  417593:	dec    esp
  417594:	inc    edi
  417595:	or     DWORD PTR [edx-0x41],ebp
  417598:	dec    esp
  417599:	jl     0x417546
  41759b:	mov    ebx,0xb373ca88
  4175a0:	sub    BYTE PTR [edx-0x7ed62a9f],al
  4175a6:	and    esi,DWORD PTR [edx+ecx*4-0x690f297a]
  4175ad:	mov    dh,0x67
  4175af:	pop    edi
  4175b0:	sti    
  4175b1:	retf   0x3e8
  4175b4:	inc    edi
  4175b5:	retf   0xb033
  4175b8:	push   0x842b0004
  4175bd:	or     DWORD PTR [ebp-0x17c54cdc],ecx
  4175c3:	gs jl  0x4175cf
  4175c6:	add    BYTE PTR [edx+0x7],ch
  4175c9:	dec    DWORD PTR [esp+ebp*1+0x14ff3a9b]
  4175d0:	fwait
  4175d1:	loop   0x41762a
  4175d3:	add    dh,dl
  4175d5:	retf   
  4175d6:	mov    BYTE PTR [ebx+edi*8],ah
  4175d9:	jge    0x41761f
  4175db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175dc:	add    BYTE PTR [eax],al
  4175de:	jae    0x4175aa
  4175e0:	je     0x41757b
  4175e2:	and    edi,edi
  4175e4:	inc    ecx
  4175e5:	test   al,0x44
  4175e7:	retf   0xee34
  4175ea:	ins    DWORD PTR es:[edi],dx
  4175eb:	dec    eax
  4175ec:	add    BYTE PTR [ecx+0x26],al
  4175ef:	dec    edi
  4175f0:	dec    DWORD PTR [esi+0x3e]
  4175f3:	leave  
  4175f4:	push   cs
  4175f5:	ins    DWORD PTR es:[edi],dx
  4175f6:	sbb    cl,dl
  4175f8:	(bad)  
  4175f9:	jmp    0x6b09bbcb
  4175fe:	adc    BYTE PTR [ebp-0x780f2201],bh
  417604:	(bad)  
  417605:	call   0xedb6404e
  41760a:	ins    BYTE PTR es:[edi],dx
  41760b:	push   es
  41760c:	dec    ecx
  41760d:	jmp    0x6b212e56
  417612:	mov    ecx,DWORD PTR [eax]
  417614:	mov    DWORD PTR [esp+esi*4-0x34128b35],ebp
  41761b:	inc    esp
  41761c:	mov    ah,0xf6
  41761e:	mov    DWORD PTR [ebp-0x34fb5b72],edi
  417624:	je     0x4175d7
  417626:	ret    
  417627:	inc    esp
  417628:	les    esp,FWORD PTR [esi-0x1700729f]
  41762e:	inc    esp
  41762f:	or     DWORD PTR [ebx+0x4121f40c],eax
  417635:	add    BYTE PTR [esi],bl
  417637:	push   es
  417638:	je     0x41768a
  41763a:	jae    0x417647
  41763c:	mov    eax,0x6a068450
  417641:	add    BYTE PTR [eax],al
  417643:	add    BYTE PTR [ebp+eax*1+0x168e458d],al
  41764a:	push   0x0
  41764c:	jae    0x417659
  41764e:	rcl    BYTE PTR [eax-0x4f],0xda
  417652:	out    dx,eax
  417653:	sub    BYTE PTR [edi],bl
  417655:	add    eax,0xf7cac00b
  41765a:	cmp    BYTE PTR [ebp-0x7e],0x6
  41765e:	je     0x41768c
  417660:	sub    eax,0xba001033
  417665:	std    
  417666:	mov    dl,BYTE PTR [ebp-0x52]
  417669:	sub    eax,edi
  41766b:	add    al,BYTE PTR [ecx+0x5]
  41766e:	push   DWORD PTR [ebp-0x5a]
  417671:	mov    ah,0x73
  417673:	mov    eax,0xffbc3b01
  417678:	retf   
  417679:	add    DWORD PTR [eax+0x3],ebp
  41767c:	outs   dx,BYTE PTR ds:[esi]
  41767d:	in     al,0xbc
  41767f:	call   0x3f268e
  417684:	and    DWORD PTR [ebx],edi
  417686:	mov    esp,0xd34e8
  41768b:	add    BYTE PTR [ecx+0x3b],al
  41768e:	enter  0x2e8,0x3c
  417692:	(bad)  
  417693:	inc    DWORD PTR [ecx+0x3b]
  417696:	shr    al,1
  417698:	cli    
  417699:	cmp    edi,edi
  41769b:	jmp    eax
  41769d:	rol    eax,cl
  41769f:	or     al,0x2e
  4176a1:	clc    
  4176a2:	mov    ch,ah
  4176a4:	popf   
  4176a5:	mov    dh,al
  4176a7:	lea    eax,[eax]
  4176a9:	add    BYTE PTR [ebx-0x27],bl
  4176ac:	dec    esi
  4176ad:	push   0x414f0f
  4176b2:	inc    edi
  4176b3:	dec    esp
  4176b4:	or     DWORD PTR [edx+0x47],ebp
  4176b7:	dec    edx
  4176b8:	mov    ch,0x40
  4176ba:	xchg   BYTE PTR [edx-0x4d704226],dh
  4176c0:	add    al,BYTE PTR [ebp-0x40854ff9]
  4176c6:	inc    edi
  4176c7:	mov    dl,0x2
  4176c9:	mov    edx,DWORD PTR [edx-0x2dee8192]
  4176cf:	in     eax,dx
  4176d0:	retf   
  4176d1:	dec    edi
  4176d2:	fsub   DWORD PTR ds:0xb675fed0
  4176d8:	xchg   DWORD PTR [edi-0x8dc5c8],edi
  4176de:	shl    BYTE PTR [edx-0x4d40837b],0x1
  4176e5:	test   bl,bl
  4176e7:	mov    dl,0x2
  4176e9:	add    BYTE PTR [eax-0x5f00498b],al
  4176ef:	mov    dl,0x2
  4176f1:	mov    DWORD PTR [edx],0x470003fa
  4176f7:	mov    dl,0xc9
  4176f9:	inc    esp
  4176fa:	ja     0x417716
  4176fc:	add    al,0x0
  4176fe:	inc    edi
  4176ff:	out    dx,eax
  417700:	dec    eax
  417701:	int3   
  417702:	inc    edi
  417703:	mov    dl,0x2
  417705:	add    BYTE PTR [ebp+ebx*4+0x3d558aca],bh
  41770c:	dec    ecx
  41770d:	int3   
  41770e:	add    BYTE PTR [eax],al
  417710:	div    DWORD PTR [ecx+ecx*2]
  417713:	shl    bh,1
  417715:	mov    eax,DWORD PTR [ebx]
  417717:	(bad)  
  417718:	ficomp DWORD PTR [ecx]
  41771a:	rcl    DWORD PTR [ecx+0x3b],cl
  41771d:	mov    ebx,0x339b74c2
  417722:	push   ecx
  417723:	int3   
  417724:	inc    esi
  417725:	inc    ebp
  417726:	inc    ecx
  417727:	xor    DWORD PTR [edx-0x7e8bfbe2],0x9
  41772e:	push   ecx
  41772f:	add    eax,0xd2e94a85
  417734:	xchg   ebx,eax
  417735:	ffree  st(0)
  417737:	enter  0x988,0xe9
  41773b:	dec    al
  41773d:	cmp    al,0xf3
  41773f:	imul   ecx,DWORD PTR [eax],0xce03e909
  417745:	dec    ebp
  417746:	mov    eax,ds:0x23d049de
  41774b:	mov    esp,0x3e8c7e8
  417750:	loopne 0x41778f
  417752:	mov    cl,0xd2
  417754:	push   ebx
  417755:	fst    QWORD PTR [ebp-0x794ec0a8]
  41775b:	ror    cl,1
  41775d:	mov    DWORD PTR [ebp-0x294f64a8],0x6a09473b
  417767:	push   eax
  417768:	(bad)
  41776c:	test   eax,0x48db413d
  417771:	push   ecx
  417772:	jmp    0xac41777a
  417777:	xchg   esp,eax
  417778:	popa   
  417779:	cmp    BYTE PTR [edi+0x13d2fa93],cl
  41777f:	rol    DWORD PTR [ebp+0x35],0x4f
  417783:	xchg   esp,eax
  417784:	xchg   ebx,eax
  417785:	iret   
  417786:	int    0x1a
  417788:	ss pop eax
  41778a:	jae    0x417753
  41778c:	call   0xfa03:0xecca7ffb
  417793:	xchg   ebx,eax
  417794:	or     al,0x86
  417796:	test   BYTE PTR [eax+0x4e1386be],ch
  41779c:	stos   DWORD PTR es:[edi],eax
  41779d:	inc    esp
  41779e:	inc    edi
  41779f:	or     DWORD PTR [ecx+esi*8+0x9],edi
  4177a3:	or     eax,0x98645a4
  4177a8:	add    al,ch
  4177aa:	inc    esp
  4177ab:	or     DWORD PTR [eax],eax
  4177ad:	das    
  4177ae:	imul   ecx,DWORD PTR [ebx+0x41],0xffffffe9
  4177b2:	add    edx,DWORD PTR [eax]
  4177b4:	data16 test al,0x6d
  4177b7:	or     eax,DWORD PTR [ebx-0x7cd0b651]
  4177bd:	cmovae edi,DWORD PTR [ebx+esi*8]
  4177c1:	push   0x50
  4177c3:	mov    BYTE PTR ds:0xf094328,ch
  4177c9:	ins    DWORD PTR es:[edi],dx
  4177ca:	add    al,bh
  4177cc:	(bad)  
  4177cd:	jmp    0xd7be7d95
  4177d2:	test   DWORD PTR [ecx],ecx
  4177d4:	add    dh,ch
  4177d6:	shl    BYTE PTR [edi+edi*8+0x440000e8],0x8a
  4177de:	cmp    al,0x98
  4177e0:	sub    ecx,DWORD PTR [eax+0x0]
  4177e3:	jmp    0xea22052f
  4177e8:	inc    esp
  4177e9:	or     edi,eax
  4177eb:	sub    al,0x97
  4177ed:	(bad)  
  4177ee:	(bad)  
  4177ef:	jmp    0x61864638
  4177f4:	dec    ebx
  4177f5:	or     DWORD PTR [eax],eax
  4177f7:	jmp    0xba3dc515
  4177fc:	adc    DWORD PTR [ebp-0x8],ecx
  4177ff:	mov    ecx,0x5a6808ea
  417804:	or     DWORD PTR [eax+0x0],ecx
  417807:	ds jo  0x41784f
  41780a:	cs test al,0x44
  41780d:	adc    al,al
  41780f:	faddp  st(0),st
  417811:	jl     0x417812
  417813:	call   0x21be025c
  417818:	inc    ebx
  417819:	push   ss
  41781a:	test   BYTE PTR [ebp+0x4b],al
  41781d:	or     DWORD PTR [eax],eax
  41781f:	push   0xfffffff8
  417821:	(bad)  
  417822:	(bad)  
  417823:	(bad)  
  417824:	cmp    DWORD PTR [esi+0xa2e00a0],ecx
  41782a:	mov    esi,DWORD PTR [ebp+0x3a]
  41782d:	jecxz  0x4177af
  41782f:	add    BYTE PTR [esi],bl
  417831:	or     dl,BYTE PTR [esi-0x75]
  417834:	inc    eax
  417835:	fdiv   DWORD PTR [eax+ebx*1-0x57]
  417839:	dec    edi
  41783a:	lock push DWORD PTR [eax-0x47]
  41783e:	lea    eax,[ebp+0x0]
  417841:	add    dl,dh
  417843:	popa   
  417844:	dec    ecx
  417845:	inc    edx
  417846:	das    
  417847:	or     eax,0xd20d7e8
  41784c:	add    cl,dl
  41784e:	dec    BYTE PTR [esi+edi*4-0x1fb098fe]
  417855:	push   0x414f17
  41785a:	imul   ecx,DWORD PTR [edi-0x1c],0xfea923c7
  417861:	(bad)  
  417862:	fimul  WORD PTR [ecx]
  417864:	lea    eax,[ebp-0x2a]
  417867:	stc    
  417868:	imul   eax,DWORD PTR [ecx],0x6a0d54
  41786e:	sub    ecx,DWORD PTR [edi-0x20]
  417871:	push   eax
  417872:	inc    esp
  417873:	or     eax,0xf9fe458d
  417878:	(bad)  
  417879:	adc    eax,0x4121ff
  41787e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41787f:	leave  
  417880:	jb     0x4178af
  417882:	sbb    eax,0xc200ec57
  417887:	lock mov bh,0x1
  41788a:	outs   dx,BYTE PTR ds:[esi]
  41788b:	or     DWORD PTR [eax],eax
  41788d:	or     ebx,DWORD PTR [esi]
  41788f:	pop    esi
  417890:	push   ss
  417891:	push   DWORD PTR [ebx+0x3675fdc1]
  417897:	fnstenv [ebx-0x14]
  41789a:	cmp    DWORD PTR [eax+0x8],esp
  41789d:	push   0xef02b447
  4178a2:	mov    DWORD PTR [edi],eax
  4178a4:	sti    
  4178a5:	clc    
  4178a6:	add    BYTE PTR [eax],al
  4178a8:	inc    eax
  4178a9:	or     al,0xd0
  4178ab:	je     0x4178d8
  4178ad:	sbb    edx,DWORD PTR [esi+0x30b24744]
  4178b3:	(bad)  
  4178b4:	jp     0x417870
  4178b6:	add    ch,0x4b
  4178b9:	das    
  4178ba:	push   ecx
  4178bb:	clc    
  4178bc:	inc    edi
  4178bd:	pop    esi
  4178be:	std    
  4178bf:	adc    BYTE PTR [ecx-0x4e],0xfd
  4178c3:	test   BYTE PTR [eax+0xfeced3],bl
  4178c9:	push   es
  4178ca:	sar    dh,1
  4178cc:	push   edx
  4178cd:	xor    DWORD PTR [esi],ebx
  4178cf:	inc    ecx
  4178d0:	inc    edi
  4178d1:	sbb    al,0xbd
  4178d3:	rol    DWORD PTR [ebx-0x4e],0x37
  4178d7:	mov    esi,ebx
  4178d9:	das    
  4178da:	enter  0x6df7,0xb2
  4178de:	pop    eax
  4178df:	das    
  4178e0:	shl    BYTE PTR ds:0x21a6e7fc,1
  4178e6:	iret   
  4178e7:	dec    dh
  4178e9:	cmc    
  4178ea:	iret   
  4178eb:	jg     0x417967
  4178ed:	jp     0x417933
  4178ef:	inc    ecx
  4178f0:	inc    edi
  4178f1:	mov    dl,0x57
  4178f3:	sub    DWORD PTR [edi],ebx
  4178f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f6:	inc    esp
  4178f7:	inc    ecx
  4178f8:	inc    edi
  4178f9:	fiadd  DWORD PTR [eax+eax*2-0x1b254dfa]
  417900:	adc    DWORD PTR [ebx-0x31],ebx
  417903:	test   BYTE PTR [edi-0x7197d422],al
  417909:	jno    0x41794e
  41790b:	add    BYTE PTR [eax],al
  41790d:	add    bh,ch
  41790f:	cdq    
  417910:	inc    esp
  417911:	inc    ecx
  417912:	inc    edi
  417913:	dec    edx
  417914:	mov    dl,0x7d
  417916:	push   0x8f04c5f3
  41791b:	or     DWORD PTR [eax+0x6a0a4744],ebp
  417921:	adc    DWORD PTR [edx+0x4703a84a],eax
  417927:	cmp    eax,0xc18bc6d3
  41792c:	call   0xd24ac034
  417931:	ret    
  417932:	sbb    BYTE PTR [ecx-0x67],0x80
  417936:	xchg   ebx,eax
  417937:	rcr    DWORD PTR [edx+0x27d63bce],0x45
  41793e:	inc    edi
  41793f:	mov    gs,WORD PTR [eax-0x94fbab4]
  417945:	or     BYTE PTR [ebx+0x4558e8c1],0xb0
  41794c:	fmulp  st(6),st
  41794e:	jae    0x417911
  417950:	mov    ebp,0x3ab13f58
  417955:	retf   
  417956:	jmp    0xdf79db1e
  41795b:	(bad)  
  41795c:	cli    
  41795d:	into   
  41795e:	push   ebx
  41795f:	rcr    DWORD PTR [ebp+0x1bc43f31],0xfc
  417966:	loopne 0x4179b6
  417968:	mov    esi,cs
  41796a:	rol    ebx,0xfb
  41796d:	sti    
  41796e:	mov    al,ds:0xce7eef
  417973:	add    BYTE PTR [ecx-0x5630043d],dh
  417979:	cmp    eax,0x39f4dbe1
  41797e:	data16 into 
  417980:	pop    esi
  417982:	in     al,0x3
  417984:	cli    
  417985:	pop    DWORD PTR [edx+eax*4-0x7c]
  417989:	mov    eax,0x901436b6
  41798e:	fwait
  41798f:	inc    DWORD PTR [ecx+0x4703e906]
  417995:	or     DWORD PTR [eax],eax
  417997:	ss movups xmm0,xmm5
  41799b:	ins    DWORD PTR es:[edi],dx
  41799c:	or     BYTE PTR [ecx],cl
  41799e:	add    BYTE PTR [edx-0x74],ch
  4179a1:	or     BYTE PTR [edi-0x10],dh
  4179a4:	sub    eax,0x1ab65ac9
  4179a9:	rol    cl,cl
  4179ab:	loope  0x4179f1
  4179ad:	fsub   st,st(7)
  4179af:	jb     0x417a30
  4179b1:	adc    eax,0xdaadeb89
  4179b6:	push   cs
  4179b7:	imul   ebx,esi,0xffffffc2
  4179ba:	(bad)  
  4179bb:	jmp    0x7249b75d
  4179c0:	mov    BYTE PTR [ecx],dl
  4179c2:	jmp    0x417a07
  4179c4:	test   eax,0xf769058e
  4179c9:	bnd jno 0x4179af
  4179cc:	les    edi,FWORD PTR [esi-0x76bfc1c8]
  4179d2:	jmp    0x4179cd
  4179d4:	mov    eax,cr0
  4179d7:	mov    ch,0x0
  4179d9:	add    BYTE PTR [edi+esi*1+0x4cf7690d],al
  4179e0:	ja     0x4179d3
  4179e2:	les    ebp,FWORD PTR [esi+0x10ff6940]
  4179e8:	jmp    0x4179ca
  4179ea:	das    
  4179eb:	leave  
  4179ec:	pop    edx
  4179ed:	cs jno 0x4179c0
  4179f0:	shl    ecx,0x44
  4179f3:	add    eax,0xfeacfb30
  4179f8:	cmp    dh,bh
  4179fa:	inc    eax
  4179fb:	cmc    
  4179fc:	das    
  4179fd:	sbb    BYTE PTR [edx-0x6124bf02],0xfe
  417a04:	inc    ebp
  417a05:	(bad)  
  417a06:	dec    edx
  417a07:	cmc    
  417a08:	inc    eax
  417a09:	in     eax,dx
  417a0a:	mov    gs,WORD PTR [edi+0x5f8b0208]
  417a10:	pop    edi
  417a11:	add    BYTE PTR [eax+0x5e08c07f],ah
  417a17:	(bad)  
  417a18:	fiadd  WORD PTR [esp+eiz*2]
  417a1b:	retf   0x4ba8
  417a1e:	in     eax,dx
  417a1f:	retf   0xb00
  417a22:	add    eax,0xab8ba25a
  417a27:	ret    0x30fd
  417a2a:	loope  0x417a75
  417a2c:	clc    
  417a2d:	(bad)  
  417a2e:	fstp   TBYTE PTR [ebp-0x33bdba73]
  417a34:	inc    ebx
  417a35:	hlt    
  417a36:	push   ds
  417a37:	push   es
  417a38:	add    BYTE PTR [eax],al
  417a3a:	popf   
  417a3b:	adc    dh,cl
  417a3d:	sub    BYTE PTR [eax],al
  417a3f:	add    bh,ch
  417a41:	add    eax,0x42587400
  417a46:	inc    esp
  417a47:	lock dec esi
  417a49:	pop    edi
  417a4a:	add    DWORD PTR [edx+0x1e],ebp
  417a4d:	pusha  
  417a4e:	add    BYTE PTR [edx-0x12],ch
  417a51:	pop    edi
  417a52:	add    BYTE PTR [ebp-0xb12ad5],cl
  417a58:	sbb    edx,edi
  417a5a:	es inc ecx
  417a5c:	faddp  st(0),st
  417a5e:	mov    esi,0x7b88d474
  417a63:	hlt    
  417a64:	out    dx,al
  417a65:	pop    ecx
  417a66:	xor    al,0x8b
  417a68:	sub    ecx,DWORD PTR [ecx]
  417a6a:	mov    ecx,DWORD PTR [ebp-0x52]
  417a6d:	adc    BYTE PTR [eax],cl
  417a6f:	ja     0x4179f5
  417a71:	ror    DWORD PTR [ecx+0x7c413a75],1
  417a77:	or     BYTE PTR ds:0x9ce3f003,dh
  417a7d:	fsub   DWORD PTR [edx-0xf69475]
  417a83:	jne    0x417a83
  417a85:	inc    esp
  417a86:	(bad)  
  417a87:	(bad)  
  417a88:	jnp    0x417a63
  417a8a:	out    0xe3,al
  417a8c:	inc    edi
  417a8d:	outs   dx,DWORD PTR ds:[esi]
  417a8e:	add    al,BYTE PTR [eax]
  417a90:	mov    edi,0x470002b0
  417a95:	sub    ebx,DWORD PTR [bp+0x7e]
  417a99:	in     eax,dx
  417a9a:	cli    
  417a9b:	call   FWORD PTR ds:0x15f27f0
  417aa1:	jmp    0x418266
  417aa6:	inc    edi
  417aa7:	test   DWORD PTR [edi-0x15],esi
  417aaa:	(bad)  
  417aab:	jmp    0x417a6f
  417aad:	addr16 inc edi
  417aaf:	rol    BYTE PTR [edx],1
  417ab1:	add    BYTE PTR [edi],ch
  417ab3:	push   eax
  417ab4:	push   ecx
  417ab5:	(bad)  
  417ab6:	cmp    BYTE PTR [edx],bh
  417ab8:	inc    esi
  417ab9:	cld    
  417aba:	lahf   
  417abb:	mov    dl,0x22
  417abd:	add    BYTE PTR [edi+0xa],al
  417ac0:	xchg   ecx,eax
  417ac1:	jno    0x417ae3
  417ac3:	mov    al,0x78
  417ac5:	inc    esp
  417ac6:	pop    ds
  417ac7:	pop    ebx
  417ac8:	add    al,0x20
  417aca:	inc    edi
  417acb:	mov    dl,0xda
  417acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ace:	xchg   ebp,eax
  417acf:	xlat   BYTE PTR ds:[ebx]
  417ad0:	retf   0x8a88
  417ad3:	(bad)  
  417ad4:	pop    ebx
  417ad5:	add    BYTE PTR [edi],ah
  417ad7:	mov    dl,0x2
  417ad9:	call   0xff0c7fad
  417ade:	mov    esi,0x4767d3ed
  417ae3:	adc    al,BYTE PTR [eax+eax*1]
  417ae6:	out    dx,eax
  417ae7:	cmp    edx,DWORD PTR [esi-0x1]
  417aea:	sar    BYTE PTR [ecx],1
  417aec:	inc    ecx
  417aed:	in     al,dx
  417aee:	pop    edi
  417aef:	mov    dl,0x22
  417af1:	add    BYTE PTR [edi-0x76],al
  417af4:	dec    ecx
  417af5:	jb     0x417aaf
  417af7:	xchg   DWORD PTR [esp+eax*2-0x61],edi
  417afb:	sbb    al,BYTE PTR [eax+eiz*1]
  417afe:	inc    edi
  417aff:	mov    dl,0xda
  417b01:	jo     0x417b18
  417b03:	das    
  417b04:	retf   
  417b05:	mov    BYTE PTR [edx],al
  417b07:	or     DWORD PTR [ebp-0x35],ecx
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	sbb    ebx,DWORD PTR [ecx]
  417b0e:	shl    DWORD PTR [ebx-0x3516b5fa],1
  417b14:	sti    
  417b15:	mov    esp,0x9047b40
  417b1a:	jmp    0x3e4effa5
  417b1f:	push   ecx
  417b20:	push   edi
  417b21:	xor    DWORD PTR [edx+0x46],ecx
  417b24:	push   es
  417b25:	or     DWORD PTR [esi],ebp
  417b27:	push   ecx
  417b28:	pop    edi
  417b29:	mov    cl,0xa4
  417b2b:	aas    
  417b2c:	inc    edi
  417b2d:	or     DWORD PTR [edx-0x40],ebp
  417b30:	cmp    al,0xc0
  417b32:	fwait
  417b33:	repz test al,0xc1
  417b36:	stos   BYTE PTR es:[edi],al
  417b37:	inc    esp
  417b38:	inc    edi
  417b39:	sar    BYTE PTR [ebx-0x31],0x28
  417b3d:	xor    ah,BYTE PTR [ebp+0x2c8c4703]
  417b43:	clc    
  417b44:	and    DWORD PTR [esi],esi
  417b46:	fstp   DWORD PTR [ebx+0x30]
  417b49:	dec    esp
  417b4a:	sub    BYTE PTR [eax+edx*1],al
  417b4d:	ss (bad) 
  417b50:	jb     0x417b97
  417b52:	jmp    0xdd063f5a
  417b57:	retf   0x1973
  417b5a:	push   ecx
  417b5b:	push   ds
  417b5c:	test   BYTE PTR [edx-0x17],cl
  417b5f:	retf   0xad73
  417b62:	rol    BYTE PTR [esi-0x75],0x9
  417b66:	jmp    0xa64e7ff1
  417b6b:	push   eax
  417b6c:	inc    ebx
  417b6d:	xor    DWORD PTR [ecx],ebp
  417b6f:	inc    edi
  417b70:	add    BYTE PTR [eax],al
  417b72:	xchg   BYTE PTR [ecx],cl
  417b74:	xchg   esi,eax
  417b75:	push   eax
  417b76:	scas   eax,DWORD PTR es:[edi]
  417b77:	mov    al,0xd8
  417b79:	aas    
  417b7a:	inc    edi
  417b7b:	or     DWORD PTR [edx-0x41],ebp
  417b7e:	cmp    al,0xc0
  417b80:	repz repz and BYTE PTR [ebp+0x0],cl
  417b85:	sub    cl,BYTE PTR [edx]
  417b87:	or     edi,edi
  417b89:	hlt    
  417b8a:	js     0x417b33
  417b8c:	sbb    al,0xad
  417b8e:	inc    esp
  417b8f:	or     DWORD PTR [ebx+0x319025],eax
  417b95:	push   esi
  417b96:	pop    ss
  417b97:	mov    ebp,0xbe70d4fe
  417b9c:	xor    al,0xf6
  417b9e:	push   ebx
  417b9f:	dec    edx
  417ba0:	add    BYTE PTR [ecx-0x4b],dl
  417ba3:	cmp    edi,edi
  417ba5:	ss jecxz 0x417bec
  417ba8:	loopne 0x417b6d
  417baa:	inc    esp
  417bab:	shl    BYTE PTR [ecx+eiz*1+0x7d],0x34
  417bb0:	or     al,0x1e
  417bb2:	aaa    
  417bb3:	adc    BYTE PTR [ecx],ch
  417bb5:	test   al,0x44
  417bb7:	mov    cl,0xc0
  417bb9:	xchg   ebp,eax
  417bba:	or     eax,0xe8ac88c0
  417bbf:	xor    BYTE PTR [eax],al
  417bc1:	(bad)  
  417bc2:	js     0x417b79
  417bc4:	(bad)  
  417bc5:	jl     0x417bdf
  417bc7:	shl    BYTE PTR [esi+ebx*8],0x3b
  417bcb:	dec    eax
  417bcc:	add    cl,dl
  417bce:	mov    dl,0x3a
  417bd0:	(bad)  
  417bd1:	fimul  WORD PTR [ebp+eax*2+0x43d8]
  417bd8:	dec    ebx
  417bd9:	mov    esi,0x360ed974
  417bde:	call   0x294fbca9
  417be3:	sub    BYTE PTR [ebx-0x4f],al
  417be6:	xchg   esp,eax
  417be7:	cmp    eax,0x2488c00e
  417bec:	xchg   edi,eax
  417bed:	xor    BYTE PTR [eax],al
  417bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bf0:	sub    BYTE PTR [ebp-0x4014eb02],0x34
  417bf7:	out    0x5d,al
  417bf9:	dec    eax
  417bfa:	add    BYTE PTR [ecx+0xff350e],al
  417c00:	leave  
  417c01:	inc    edx
  417c02:	inc    esp
  417c03:	rcr    BYTE PTR [ebx],1
  417c05:	(bad)  
  417c06:	mov    edi,0xe44e1950
  417c0b:	call   DWORD PTR [ebx-0x66ca024a]
  417c11:	and    eax,DWORD PTR [ecx+0x0]
  417c14:	mul    BYTE PTR [edi]
  417c16:	je     0x417c17
  417c18:	sbb    DWORD PTR [edx+0x44],eax
  417c1b:	int3   
  417c1c:	in     eax,dx
  417c1d:	inc    ebp
  417c1e:	loopne 0x417c20
  417c20:	jns    0x417c60
  417c22:	mov    dh,0x0
  417c24:	pop    esi
  417c25:	or     al,BYTE PTR [ebx+0xf05427d]
  417c2b:	test   bl,bl
  417c2d:	add    al,0x0
  417c2f:	add    ch,bl
  417c31:	inc    ebp
  417c32:	rol    BYTE PTR [eax],1
  417c34:	pop    ecx
  417c35:	mov    ds:0x8d0a2e00,al
  417c3b:	inc    ebp
  417c3c:	add    BYTE PTR [eax],al
  417c3e:	(bad)  
  417c3f:	cmc    
  417c40:	(bad)  
  417c41:	jne    0x417c95
  417c43:	fisttp QWORD PTR [esi-0x3]
  417c46:	sub    ecx,edx
  417c48:	or     eax,eax
  417c4a:	sub    DWORD PTR [esi],edi
  417c4c:	mov    es,WORD PTR [eax]
  417c4e:	or     al,BYTE PTR cs:[ebx+0xf09e27d]
  417c55:	test   BYTE PTR [ebx+0x6b00000a],ah
  417c5b:	inc    edi
  417c5d:	push   eax
  417c5e:	or     DWORD PTR [edi-0x30],ecx
  417c61:	call   0x3f4352
  417c66:	cmc    
  417c67:	leave  
  417c68:	jb     0x417cdf
  417c6a:	ins    DWORD PTR es:[edi],dx
  417c6b:	inc    edi
  417c6c:	enter  0x1200,0x60
  417c70:	push   0xbce0de10
  417c75:	push   DWORD PTR [ebx]
  417c77:	mov    ebp,0x54776e6
  417c7c:	leave  
  417c7d:	(bad)  
  417c7e:	mov    eax,0x3afee414
  417c83:	mov    eax,0x3f1accda
  417c88:	enter  0x1afe,0x94
  417c8c:	(bad)  
  417c8d:	je     0x417cde
  417c8f:	mov    ah,al
  417c91:	ins    BYTE PTR es:[edi],dx
  417c92:	nop
  417c93:	es enter 0x6f74,0x5e
  417c98:	dec    esi
  417c99:	or     BYTE PTR [edi-0x62],ch
  417c9c:	push   ebp
  417c9d:	(bad)  
  417c9e:	js     0x417cee
  417ca0:	dec    esi
  417ca1:	les    eax,FWORD PTR [eax]
  417ca3:	add    BYTE PTR [eax+0x7c],dh
  417ca6:	scas   al,BYTE PTR es:[edi]
  417ca7:	(bad)  
  417ca8:	repnz mov bh,0xda
  417cab:	jl     0x417c9f
  417cad:	test   bh,0xfe
  417cb0:	shl    bh,cl
  417cb2:	(bad)  
  417cb3:	je     0x417d2c
  417cb5:	out    0x4d,al
  417cb7:	or     BYTE PTR [edi-0x72],bl
  417cba:	push   ebp
  417cbb:	inc    DWORD PTR [eax+0x30]
  417cbe:	inc    esi
  417cbf:	int3   
  417cc0:	inc    edi
  417cc1:	xchg   esi,eax
  417cc2:	in     eax,dx
  417cc3:	xor    BYTE PTR [edx+0x3874fef2],0x37
  417cca:	ds int3 
  417ccc:	and    BYTE PTR [ebx+0xa4f74c7],al
  417cd2:	and    ebp,DWORD PTR [ebp+0x10]
  417cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd6:	fimul  DWORD PTR [ecx]
  417cd8:	popf   
  417cd9:	mov    dl,0xc5
  417cdb:	je     0x417d2c
  417cdd:	retf   0x6cef
  417ce0:	clc    
  417ce1:	retf   
  417ce2:	(bad)  
  417ce3:	je     0x417cd8
  417ce5:	fiadd  DWORD PTR [edx-0x39841791]
  417ceb:	je     0x417ccc
  417ced:	retf   0x704a
  417cf0:	fsubr  DWORD PTR [ebx-0x3a]
  417cf3:	je     0x417cd0
  417cf5:	or     DWORD PTR [ecx-0x6243a8ad],edx
  417cfb:	(bad)  
  417cfc:	cmp    edi,DWORD PTR [ecx-0x43c8a480]
  417d02:	(bad)  
  417d03:	(bad)  
  417d04:	cmp    ebp,DWORD PTR [ebp+0x6390]
  417d0a:	aaa    
  417d0b:	mov    esp,0xb11bc77d
  417d10:	sub    BYTE PTR [ebx],0x17
  417d13:	mov    esp,0xa51bc76d
  417d18:	push   eax
  417d19:	xor    edx,DWORD PTR [edi]
  417d1b:	mov    esp,0xa8fbc75d
  417d20:	inc    eax
  417d21:	cmp    esi,edi
  417d23:	mov    ebx,0xdcfbc74d
  417d28:	push   eax
  417d29:	inc    ebx
  417d2a:	idiv   DWORD PTR [ebx-0x1f2438c3]
  417d30:	inc    eax
  417d31:	or     edx,edi
  417d33:	mov    ebx,0xd4dbc72d
  417d38:	adc    BYTE PTR [ebx],dl
  417d3a:	xlat   BYTE PTR ds:[ebx]
  417d3b:	mov    ebx,0xd9bbc71d
  417d40:	add    BYTE PTR [ebx],bl
  417d42:	mov    bh,0xbc
  417d44:	or     eax,0x10cdbbc7
  417d49:	and    esi,DWORD PTR [edi+0x6bcfdbc]
  417d4f:	or     eax,0xaccc30e9
  417d54:	shr    BYTE PTR [bx+si],0xb4
  417d58:	in     eax,0xc6
  417d5a:	mov    ebx,0x33dd45
  417d5f:	ss in  eax,0xc6
  417d62:	xor    ecx,DWORD PTR [eax+eax*1]
  417d65:	inc    ebp
  417d66:	inc    edi
  417d67:	mov    cl,0x4c
  417d69:	inc    edx
  417d6a:	inc    edi
  417d6b:	or     edx,esi
  417d6d:	ret    
  417d6e:	add    BYTE PTR [eax],al
  417d70:	push   ecx
  417d71:	xchg   bh,bh
  417d73:	fadd   QWORD PTR [ebx+0x9]
  417d76:	add    BYTE PTR [esi-0x17003e79],ah
  417d7c:	inc    esp
  417d7d:	or     edi,eax
  417d7f:	and    al,0x97
  417d81:	mov    edx,0x2f44e906
  417d86:	add    BYTE PTR [ebx],al
  417d88:	dec    ebx
  417d89:	das    
  417d8a:	add    BYTE PTR [ebx],dl
  417d8c:	inc    ebx
  417d8d:	mov    es,WORD PTR [ebp+esi*2+0x54]
  417d91:	mov    es,WORD PTR [ecx+edi*2+0x19feba89]
  417d98:	mov    BYTE PTR [eax+edi*8],dh
  417d9b:	idiv   WORD PTR [edi+eiz*8+0x90517]
  417da3:	loop   0x417d29
  417da5:	aaa    
  417da6:	add    eax,0xfebba140
  417dab:	jmp    0xa86906bc
  417db0:	inc    esp
  417db1:	mov    esp,0x607ce574
  417db6:	jae    0x417de6
  417db8:	mov    DWORD PTR [ebx-0x75],ecx
  417dbb:	cmp    edi,ecx
  417dbd:	test   bh,ch
  417dbf:	push   ss
  417dc0:	or     DWORD PTR [edi+ecx*2+0x73521cbb],edi
  417dc7:	push   cs
  417dc8:	or     DWORD PTR [edx-0x4406ee7c],edx
  417dce:	(bad)  
  417dcf:	adc    DWORD PTR [ecx+0xf6ff2b],ebp
  417dd5:	add    BYTE PTR [eax+0x6c99f045],dl
  417ddb:	lds    eax,FWORD PTR [ecx+0x28]
  417dde:	inc    ebx
  417ddf:	mov    edx,0xbc12d1b4
  417de4:	(bad)  
  417de5:	(bad)  
  417de6:	dec    eax
  417de7:	or     ch,BYTE PTR [ecx]
  417de9:	sub    BYTE PTR [ebx-0x4f],cl
  417dec:	pushf  
  417ded:	add    BYTE PTR [esp+eax*8],ch
  417df0:	std    
  417df1:	mov    DWORD PTR [ebx-0x1f],ebp
  417df4:	cmc    
  417df5:	call   DWORD PTR [ecx-0x66134478]
  417dfb:	(bad)  
  417dfc:	std    
  417dfd:	add    BYTE PTR [edx],ch
  417dff:	out    dx,eax
  417e00:	cmp    BYTE PTR [ebp-0x22],0x9
  417e04:	jne    0x417e4f
  417e06:	and    eax,0xc1f7eb3a
  417e0b:	(bad)  
  417e0c:	std    
  417e0d:	xor    BYTE PTR [ecx],dh
  417e0f:	cmp    ch,bl
  417e11:	mul    DWORD PTR [ecx]
  417e13:	les    edi,FWORD PTR [edi-0x43]
  417e16:	ret    0xfdcc
  417e19:	inc    esi
  417e1b:	or     BYTE PTR [eax],al
  417e1d:	add    BYTE PTR [eax-0x40],ch
  417e20:	lds    eax,FWORD PTR [ebp-0x233ee]
  417e26:	push   es
  417e27:	or     BYTE PTR [eax],al
  417e29:	add    BYTE PTR ds:0x128dfdaf,al
  417e2f:	int3   
  417e30:	std    
  417e31:	jmp    DWORD PTR [ecx]
  417e33:	mov    ch,dl
  417e35:	not    DWORD PTR [ecx]
  417e37:	(bad)  
  417e38:	std    
  417e39:	mov    ch,0x0
  417e3b:	add    BYTE PTR [esi],al
  417e3d:	int3   
  417e3e:	std    
  417e3f:	jmp    DWORD PTR [ecx]
  417e41:	dec    edx
  417e42:	or     al,ch
  417e44:	out    0xc1,al
  417e46:	std    
  417e47:	jmp    FWORD PTR [ebp+0x41f7ea82]
  417e4d:	(bad)  
  417e4e:	(bad)  
  417e4f:	je     0x417eb4
  417e51:	les    esi,FWORD PTR [ebx-0x23ae614]
  417e57:	call   0x40d34e
  417e5c:	and    DWORD PTR [ebx-0x3ade0816],ecx
  417e62:	out    0x11,al
  417e64:	xchg   ecx,eax
  417e65:	(bad)  
  417e66:	std    
  417e67:	inc    DWORD PTR [edi-0x63]
  417e6a:	(bad)  
  417e6c:	lock retf 0x74c3
  417e70:	aas    
  417e71:	fcomp  st(6)
  417e73:	std    
  417e74:	loopne 0x417ef0
  417e76:	ret    
  417e77:	mov    ah,0xef
  417e79:	jp     0x417e3e
  417e7b:	(bad)  
  417e7c:	fbstp  TBYTE PTR [edi+0x54]
  417e7f:	dec    eax
  417e81:	bound  edi,QWORD PTR ds:0xc466aef8
  417e87:	(bad)  
  417e88:	mov    eax,0x9ffc4d92
  417e8d:	in     eax,dx
  417e8e:	inc    edx
  417e8f:	add    BYTE PTR [edi+0x79],al
  417e92:	rol    BYTE PTR [edi],0x47
  417e95:	adc    eax,0x6bc4eb79
  417e9a:	(bad)  
  417e9b:	imul   eax,DWORD PTR [edi+0x6],0xff14
  417ea2:	adc    bh,BYTE PTR [eax+0x5af309da]
  417ea8:	les    ecx,FWORD PTR [eax-0x51a4abfe]
  417eae:	add    eax,0xf2ff0271
  417eb3:	mov    bh,0xda
  417eb5:	mov    ds:0xfec3fa61,al
  417eba:	shl    bl,cl
  417ebc:	ret    
  417ebd:	je     0x417efe
  417ebf:	dec    eax
  417ec0:	push   cs
  417ec1:	ins    BYTE PTR es:[edi],dx
  417ec2:	dec    eax
  417ec3:	loop   0x417e7e
  417ec5:	ror    DWORD PTR [ebx-0x5e],0x2d
  417ec9:	mov    ebp,DWORD PTR [ebx]
  417ecb:	and    al,0xbf
  417ecd:	sti    
  417ece:	cdq    
  417ecf:	jg     0x417f29
  417ed1:	add    BYTE PTR [ebp+0x4f74c371],bl
  417ed7:	sbb    ch,BYTE PTR [edx+ebp*2+0x4478c018]
  417ede:	adc    ebp,DWORD PTR [esi+ecx*1]
  417ee1:	sub    BYTE PTR [edi+0x9],bl
  417ee4:	sub    BYTE PTR [esp+ecx*8],al
  417ee7:	test   BYTE PTR [esp+ebp*8],0x87
  417eeb:	or     DWORD PTR [ecx+0x3],ebp
  417eee:	inc    edi
  417eef:	cmp    eax,0x4c882c24
  417ef4:	sub    BYTE PTR [eax+edi*2],al
  417ef7:	mov    eax,ds:0x94744dc
  417efc:	loop   0x417ec1
  417efe:	push   esp
  417eff:	sbb    BYTE PTR [edi],dl
  417f01:	lods   al,BYTE PTR ds:[esi]
  417f02:	or     DWORD PTR [ecx],esi
  417f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f05:	ret    
  417f06:	add    BYTE PTR [eax],al
  417f08:	adc    BYTE PTR [ecx],ah
  417f0a:	jmp    0xb92712
  417f0f:	sub    eax,0x53e94a04
  417f14:	test   al,0x3e
  417f16:	icebp  
  417f17:	stos   DWORD PTR es:[edi],eax
  417f18:	push   edi
  417f19:	pushf  
  417f1a:	jge    0x417edf
  417f1c:	mov    al,ds:0x91c30756
  417f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f22:	out    0x49,eax
  417f24:	(bad)  
  417f25:	imul   eax
  417f27:	cmp    BYTE PTR [ebp+0x4f],bh
  417f2a:	pop    ebp
  417f2b:	idiv   DWORD PTR [eax+0x71c35572]
  417f31:	mov    eax,0x1030725a
  417f36:	mov    esp,0x3d3e617e
  417f3b:	ret    
  417f3c:	rol    DWORD PTR [eax],cl
  417f3e:	inc    ecx
  417f3f:	jge    0x417f1e
  417f41:	mov    bh,0x2d
  417f43:	arpl   cx,bp
  417f45:	shr    DWORD PTR [edx],0x8
  417f48:	inc    edi
  417f49:	pop    esi
  417f4a:	jb     0x417efc
  417f4c:	(bad)
  417f4f:	push   edi
  417f50:	or     BYTE PTR [esi+0x11],cl
  417f53:	add    al,0x47
  417f55:	or     ecx,ebp
  417f57:	retf   0xb58b
  417f5a:	call   0x4ac662
  417f5f:	bound  edi,QWORD PTR [esi+0x5]
  417f62:	xor    DWORD PTR [ecx+0x12093e44],0xb
  417f69:	jecxz  0x417f3c
  417f6b:	inc    edx
  417f6c:	add    BYTE PTR [eax],al
  417f6e:	or     cl,dl
  417f70:	or     ebp,ecx
  417f72:	jno    0x417f7d
  417f74:	add    cl,ch
  417f76:	inc    esp
  417f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f78:	pusha  
  417f79:	push   0xffffff87
  417f7b:	sbb    DWORD PTR [eax],eax
  417f7d:	xor    eax,0xd944844e
  417f82:	ret    
  417f83:	pop    ds
  417f84:	push   DWORD PTR [edi+esi*1]
  417f87:	mov    eax,0xc6ecf174
  417f8c:	addr16 sahf 
  417f8e:	test   DWORD PTR [edx+0xe6fe0fa],ecx
  417f94:	or     DWORD PTR [ebx+ebp*8],esp
  417f97:	mov    ds:0x36ae1945,al
  417f9c:	(bad)  
  417f9d:	jle    0x417f24
  417f9f:	add    BYTE PTR [ebp+0x71],al
  417fa2:	in     al,dx
  417fa3:	popa   
  417fa4:	jg     0x417f8f
  417fa6:	inc    esp
  417fa7:	or     DWORD PTR [ebp-0x15],esi
  417faa:	mov    cl,0xfa
  417fac:	and    BYTE PTR [edx+0x4c],0x3e
  417fb0:	adc    eax,0x8ab0ff62
  417fb5:	mov    ah,0xa8
  417fb7:	push   es
  417fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb9:	sub    ecx,DWORD PTR [edx+ecx*8-0x21]
  417fbd:	icebp  
  417fbe:	retf   
  417fbf:	dec    esp
  417fc0:	clc    
  417fc1:	pusha  
  417fc2:	out    dx,eax
  417fc3:	mov    ah,0xea
  417fc5:	fidivr DWORD PTR [ecx-0x608d07b4]
  417fcb:	mov    ch,0xe
  417fcd:	inc    ebp
  417fce:	add    dl,BYTE PTR [eax]
  417fd0:	ror    DWORD PTR [ecx],0x0
  417fd3:	add    BYTE PTR ds:0xbb114480,bh
  417fd9:	pop    ebp
  417fda:	cld    
  417fdb:	add    ch,ch
  417fdd:	(bad)  
  417fde:	stc    
  417fdf:	or     DWORD PTR [eax+0x2a458994],edx
  417fe5:	nop
  417fe6:	add    BYTE PTR ss:[ebx+0x55c02b00],dl
  417fed:	fucomip st,st(1)
  417fef:	push   es
  417ff0:	jne    0x418040
  417ff2:	clc    
  417ff3:	mov    esi,DWORD PTR [ebx]
  417ff5:	leave  
  417ff6:	pop    ecx
  417ff7:	leave  
  417ff8:	pushf  
  417ff9:	sbb    DWORD PTR [eax],eax
  417ffb:	push   ebp
  417ffc:	push   ebp
  417ffd:	jns    0x417f80
  417fff:	les    edx,FWORD PTR [edx+0x1f66632a]
  418005:	or     eax,0xf0ea4539
  41800a:	add    eax,0xc0c2ee2b
  41800f:	adc    BYTE PTR [esi+0x406433c9],ch
  418015:	dec    edx
  418016:	add    al,ch
  418018:	cmp    esi,esp
  41801a:	(bad)  
  41801b:	call   DWORD PTR [edi]
  41801d:	dec    esi
  41801e:	clc    
  41801f:	lea    esp,[ebx-0x37]
  418022:	dec    esi
  418023:	call   0x406132
  418028:	sbb    esi,edi
  41802a:	adc    edi,edi
  41802c:	mov    ds:0xe675ff06,eax
  418031:	(bad)  
  418032:	jae    0x41803c
  418034:	push   es
  418035:	and    ah,BYTE PTR [esi-0x1]
  418038:	add    BYTE PTR [eax],al
  41803a:	stc    
  41803b:	add    eax,eax
  41803d:	pslld  mm4,QWORD PTR [edx]
  418040:	(bad)  
  418041:	jmp    FWORD PTR [esi-0x37]
  418044:	jae    0x418052
  418046:	sbb    esi,edi
  418048:	idiv   edi
  41804a:	xchg   ebx,eax
  41804b:	jbe    0x418033
  41804d:	stc    
  41804e:	ror    eax,cl
  418050:	std    
  418051:	mov    esp,ebx
  418053:	add    eax,0xb047453b
  418058:	jae    0x442041
  41805e:	and    BYTE PTR ds:0xb892ff17,dh
  418064:	stos   BYTE PTR es:[edi],al
  418065:	mov    eax,ds:0x88bfbfa8
  41806a:	cmp    BYTE PTR [ebx+ebp*4-0x4802ff8d],0x2a
  418072:	adc    eax,0xf8f4463b
  418077:	add    al,0x28
  418079:	data16 xchg BYTE PTR [eax-0x5da42df5],ah
  418080:	stos   DWORD PTR es:[edi],eax
  418081:	ins    DWORD PTR es:[di],dx
  418083:	mov    al,ds:0xa85aff52
  418088:	stos   BYTE PTR es:[edi],al
  418089:	mov    BYTE PTR [ebx+0x67],ah
  41808c:	mov    edi,0xbfb43afe
  418091:	je     0x4180e2
  418093:	cwde   
  418094:	xor    esp,DWORD PTR [edi-0x50]
  418097:	sahf   
  418098:	mov    edx,DWORD PTR [ebx+edx*2+0x23]
  41809c:	std    
  41809d:	inc    DWORD PTR [eax]
  41809f:	add    BYTE PTR [ebx],bl
  4180a1:	mov    ds:0xecce47ab,al
  4180a6:	mov    bh,0x8a
  4180a8:	inc    edx
  4180a9:	add    al,0x2a
  4180ab:	inc    ecx
  4180ac:	inc    edi
  4180ad:	and    ebp,DWORD PTR [edx+0x362f1603]
  4180b3:	adc    al,0x16
  4180b5:	push   edi
  4180b6:	ss clc 
  4180b8:	jo     0x41808e
  4180ba:	or     ch,al
  4180bc:	and    bh,cl
  4180be:	mov    edi,0xc2bafefe
  4180c3:	je     0x41810a
  4180c5:	pop    ebx
  4180c6:	out    0x50,al
  4180c8:	push   eax
  4180c9:	je     0x418085
  4180cb:	(bad)  
  4180cc:	shl    bl,cl
  4180ce:	stos   BYTE PTR es:[edi],al
  4180cf:	jns    0x41807b
  4180d1:	or     DWORD PTR [esi],esp
  4180d3:	sar    BYTE PTR [ecx],0x3f
  4180d6:	sbb    eax,0x162db4ab
  4180db:	shr    BYTE PTR [ebx+0x9],0xe9
  4180df:	inc    ebx
  4180e0:	dec    ecx
  4180e1:	cmp    ebp,ebx
  4180e3:	lods   al,BYTE PTR ds:[esi]
  4180e4:	inc    eax
  4180e5:	mov    BYTE PTR [ebx-0x49],bh
  4180e8:	adc    BYTE PTR [esi],bh
  4180ea:	outs   dx,DWORD PTR ds:[esi]
  4180eb:	lods   al,BYTE PTR ds:[esi]
  4180ec:	xor    BYTE PTR [ebx+esi*2+0x4d07e8bf],dh
  4180f3:	mov    edi,0xc023ccf9
  4180f8:	lock mov ah,0xe8
  4180fb:	add    edi,DWORD PTR [esi+ecx*2-0x4b1f390b]
  418102:	call   0x4741810a
  418107:	mov    ah,0x33
  418109:	mov    esp,0xbf4536e8
  41810e:	leave  
  41810f:	and    BYTE PTR [ebx],0xc0
  418112:	pop    edi
  418114:	clc    
  418115:	add    edx,DWORD PTR [edx]
  418117:	or     BYTE PTR [edi+edx*2-0x7d1ab144],0xe8
  41811f:	add    DWORD PTR [ecx],edi
  418121:	lods   al,BYTE PTR ds:[esi]
  418122:	and    esp,DWORD PTR ds:0xb1cdbf86
  418128:	jge    0x418163
  41812a:	inc    ebx
  41812b:	test   ch,ch
  41812d:	mov    esi,0x475e1913
  418132:	dec    ebx
  418133:	mov    bl,ah
  418135:	cmova  edi,DWORD PTR ds:0x4fbbeee
  41813c:	fs inc edi
  41813e:	aas    
  41813f:	pop    ecx
  418140:	dec    esi
  418141:	cmp    DWORD PTR [edi-0x5f],ecx
  418144:	pop    edx
  418145:	xor    BYTE PTR [eax-0x4c],bl
  418148:	jno    0x418193
  41814a:	cmp    eax,DWORD PTR [edx+0x8ccf0ff]
  418150:	add    cl,ch
  418152:	inc    esp
  418153:	push   esp
  418154:	leave  
  418155:	sub    edx,DWORD PTR [ebx+0x9]
  418158:	push   ebp
  418159:	jb     0x418152
  41815b:	xchg   bl,al
  41815d:	sbb    eax,0x26145cbc
  418162:	inc    ebp
  418163:	or     DWORD PTR [eax],eax
  418165:	jmp    0xf71361ae
  41816a:	add    BYTE PTR [eax],al
  41816c:	jg     0x418173
  41816e:	add    ecx,ebp
  418170:	inc    esp
  418171:	or     DWORD PTR [edi],ecx
  418173:	push   ebp
  418174:	add    eax,0x44f57c87
  418179:	ds adc ebx,esi
  41817c:	das    
  41817d:	sbb    eax,0x91eea6a
  418182:	push   0xffffffe9
  418184:	lods   al,BYTE PTR ds:[esi]
  418185:	cmp    esi,0xffffffc6
  418188:	cdq    
  418189:	mov    al,ds:0x944eb28
  41818e:	xor    DWORD PTR [edi+esi*1],0xa
  418192:	jne    0x41819e
  418194:	add    BYTE PTR ds:0x17fa610,bh
  41819a:	call   0xfef5ec4b
  41819f:	pusha  
  4181a0:	push   DWORD PTR [esi+edi*8+0x1f3f14]
  4181a7:	adc    ecx,DWORD PTR [edi-0x7a]
  4181aa:	inc    esp
  4181ab:	jge    0x4181a1
  4181ad:	mov    al,ds:0xb2c97666
  4181b2:	call   0x4ac8a0
  4181b7:	push   0x7
  4181b9:	add    eax,0xb265d402
  4181be:	je     0x4181b9
  4181c0:	test   eax,0x1941083c
  4181c5:	sub    edi,edi
  4181c7:	add    BYTE PTR [ecx],al
  4181c9:	test   DWORD PTR [ebx-0x4],eax
  4181cc:	adc    ecx,esi
  4181ce:	adc    ebp,DWORD PTR [edx+0x0]
  4181d1:	add    BYTE PTR [esi-0x1f],bl
  4181d4:	add    ecx,DWORD PTR [ebp-0x17b18d15]
  4181da:	and    BYTE PTR [ebp+edi*8-0x1],dh
  4181de:	push   edi
  4181df:	(bad)  
  4181e1:	call   FWORD PTR [esi]
  4181e3:	mov    BYTE PTR [ebx+0xc],bh
  4181e6:	sub    eax,0x9bff1ff2
  4181eb:	push   ss
  4181ec:	push   0x3
  4181ee:	adc    ebx,edi
  4181f0:	pop    es
  4181f1:	call   0x406e70
  4181f6:	icebp  
  4181f7:	cli    
  4181f8:	adc    ebp,DWORD PTR [edx-0x13]
  4181fb:	loopne 0x4181fc
  4181fd:	imul   ebx,esi,0x11ff165e
  418203:	jne    0x4181ec
  418205:	mov    cl,0xef
  418207:	push   es
  418208:	add    BYTE PTR [ebx+0x75041983],al
  41820e:	cmp    eax,0x91107374
  418213:	cli    
  418214:	pop    es
  418215:	call   0x406d0c
  41821a:	aaa    
  41821b:	dec    edx
  41821c:	cld    
  41821d:	call   FWORD PTR [ebx+0x11]
  418220:	push   0x0
  418222:	inc    esp
  418223:	add    DWORD PTR [ebp-0x17a22dbb],ecx
  418229:	out    dx,eax
  41822a:	shl    BYTE PTR [ebp+edi*8-0x17],0x16
  41822f:	push   es
  418230:	add    BYTE PTR [eax],al
  418232:	sbb    eax,0x50bf2
  418237:	add    BYTE PTR [ebx+0x1d],bh
  41823a:	push   DWORD PTR [ebp+0x7e]
  41823d:	loopne 0x418244
  41823f:	call   FWORD PTR [ebx+0x4755e7fe]
  418245:	ret    0xfebb
  418248:	lahf   
  418249:	mov    eax,ds:0x59470002
  41824e:	sub    DWORD PTR [ecx],eax
  418250:	inc    edi
  418251:	mov    al,ds:0xa23b7c7f
  418256:	xor    eax,0x127d4020
  41825b:	push   0x4f
  41825d:	jmp    0x418295
  41825f:	or     BYTE PTR [edi],bl
  418261:	test   al,0x24
  418263:	jmp    FWORD PTR [eax]
  418265:	sbb    esi,DWORD PTR [edi]
  418267:	adc    al,0xad
  418269:	lahf   
  41826a:	sub    BYTE PTR [eax],al
  41826c:	lods   eax,DWORD PTR ds:[esi]
  41826d:	mov    al,ds:0xb311abaa
  418272:	mov    ebx,0x2a182e8
  418277:	add    ah,al
  418279:	and    al,0xf
  41827b:	pop    es
  41827c:	jb     0x41827e
  41827e:	mov    ebp,0xc565774
  418283:	push   DWORD PTR [edx-0x58]
  418286:	stos   BYTE PTR es:[edi],al
  418287:	adc    DWORD PTR [ecx-0x3d],ebp
  41828a:	mov    ebx,0x28d452fe
  41828f:	add    ebx,DWORD PTR [ebp-0x60]
  418292:	sub    BYTE PTR [eax],al
  418294:	fbld   TBYTE PTR [ecx]
  418296:	mov    ebp,0x1bc8c0fe
  41829b:	add    DWORD PTR [eax],eax
  41829d:	add    BYTE PTR [edi-0x60],al
  4182a0:	jg     0x41831e
  4182a2:	inc    ebx
  4182a3:	mov    eax,0xe4801c35
  4182a8:	mov    edi,0x29fa0ff
  4182ad:	call   DWORD PTR [edx]
  4182af:	aam    0x28
  4182b1:	add    BYTE PTR ds:0x8b448dac,bl
  4182b7:	shrd   DWORD PTR [ebx-0x7f],esp,0x22
  4182bc:	mov    esp,0xe9087ae8
  4182c1:	add    eax,DWORD PTR [edi-0x7a]
  4182c4:	fisttp DWORD PTR [edi]
  4182c6:	ds cmp al,0xf5
  4182c9:	les    ecx,FWORD PTR [ebx]
  4182cb:	mov    ch,0xe7
  4182cd:	add    eax,DWORD PTR [edi+0x9]
  4182d0:	inc    esi
  4182d1:	cmp    ebx,DWORD PTR ss:[edi]
  4182d4:	jmp    0xabc5c602
  4182d9:	mov    edi,0xbdaaa190
  4182de:	cmp    DWORD PTR [ecx-0x4ecf27f1],esi
  4182e4:	call   0xe33f2e69
  4182e9:	ss dec ebp
  4182eb:	jno    0x4182d5
  4182ed:	add    eax,DWORD PTR [edi+0x9]
  4182f0:	adc    al,cl
  4182f2:	adc    BYTE PTR [ecx-0x2747f18],dh
  4182f8:	loope  0x418330
  4182fa:	dec    ebp
  4182fb:	jno    0x4182e5
  4182fd:	add    eax,DWORD PTR [edi+0x9]
  418300:	sar    BYTE PTR [edi+0x0],1
  418303:	add    al,dh
  418305:	mov    al,0xe8
  418307:	xchg   BYTE PTR [ebx-0x3],ch
  41830a:	in     al,0x35
  41830c:	jp     0x418312
  41830e:	mov    ebx,0x438a7630
  418313:	or     BYTE PTR [edi+0x9],al
  418316:	sub    DWORD PTR [edx],eax
  418318:	push   esp
  418319:	inc    ecx
  41831a:	mov    dh,0x31
  41831c:	push   ebx
  41831d:	and    BYTE PTR [ebx],0xb0
  418320:	lds    ebx,FWORD PTR [esi]
  418322:	popf   
  418323:	or     BYTE PTR [esi+0x33bb951e],dl
  418329:	mov    ch,0x80
  41832b:	xchg   BYTE PTR [esi],ch
  41832d:	mov    al,0x8d
  41832f:	lea    eax,[ebx]
  418331:	mov    cl,0x85
  418333:	xor    DWORD PTR [edi],esi
  418335:	mov    al,0xf3
  418337:	scas   eax,DWORD PTR es:[edi]
  418338:	mov    DWORD PTR [esi],esi
  41833a:	add    BYTE PTR [ecx-0x44],dh
  41833d:	xor    eax,0x2bf68108
  418342:	jmp    DWORD PTR [esi-0x54]
  418345:	xor    eax,0xb042d314
  41834a:	je     0x4183a9
  41834c:	pushf  
  41834d:	xor    eax,0xad7241f8
  418352:	inc    BYTE PTR [esi-0x74]
  418355:	xor    eax,0x224c51f8
  41835a:	push   DWORD PTR [esi]
  41835c:	ret    
  41835d:	or     DWORD PTR [eax],eax
  41835f:	jmp    0x6aa127a8
  418364:	outs   dx,BYTE PTR ds:[esi]
  418365:	std    
  418366:	or     al,0x9b
  418368:	add    BYTE PTR [eax],al
  41836a:	xchg   edi,eax
  41836b:	add    al,0xd2
  41836d:	pushf  
  41836e:	jnp    0x4182fa
  418370:	jl     0x41834f
  418372:	inc    esp
  418373:	or     DWORD PTR [eax-0x11],eax
  418376:	pop    ecx
  418377:	inc    ecx
  418378:	push   DWORD PTR [eax+eax*2-0x80]
  41837c:	inc    esp
  41837d:	std    
  41837e:	leave  
  41837f:	sbb    al,0xf4
  418381:	fcom   QWORD PTR [ebx]
  418383:	sbb    eax,0xb537e6f4
  418388:	out    0x6,eax
  41838a:	sbb    DWORD PTR [eax-0x4e789f02],esi
  418390:	(bad)  
  418391:	push   esp
  418392:	xor    esi,DWORD PTR [eax+0x348dbd74]
  418398:	clc    
  418399:	mov    esi,0x13e80117
  41839e:	addr16 mov al,0xfe
  4183a1:	scas   al,BYTE PTR es:[edi]
  4183a2:	ja     0x4183b9
  4183a4:	push   0xffffffe8
  4183a6:	in     eax,dx
  4183a7:	xor    al,0xf4
  4183a9:	sahf   
  4183aa:	ja     0x41835d
  4183ac:	out    0x1f,eax
  4183ae:	fisubr WORD PTR [esi-0x4ea87102]
  4183b4:	out    0x0,eax
  4183b6:	ret    0xfedc
  4183b9:	inc    DWORD PTR [esi]
  4183bb:	add    eax,0x5e6e0000
  4183c0:	add    edi,DWORD PTR [eax+0xb6e]
  4183c6:	aaa    
  4183c7:	(bad)  
  4183c8:	push   cs
  4183c9:	add    BYTE PTR [ebx+0x56ea7e],dh
  4183cf:	add    ch,ch
  4183d1:	lock pop es
  4183d3:	add    BYTE PTR [ebx+0x8],dh
  4183d6:	pop    esi
  4183d7:	leave  
  4183d8:	sbb    al,0xb0
  4183da:	dec    BYTE PTR [edx+0xaeb0393]
  4183e0:	jns    0x41839a
  4183e2:	out    0xb9,al
  4183e4:	pop    es
  4183e5:	je     0x4183e4
  4183e7:	and    DWORD PTR [eax-0x52],0xffffff81
  4183eb:	ds push ds
  4183ed:	cli    
  4183ee:	lock inc ebx
  4183f1:	add    ch,al
  4183f3:	test   eax,0x5efd73c7
  4183f8:	push   edi
  4183f9:	les    eax,FWORD PTR [edx]
  4183fb:	add    BYTE PTR [ebx-0x4c741581],dh
  418401:	add    cl,BYTE PTR [ebx+0x2801a55]
  418407:	nop
  418408:	pop    ebp
  418409:	test   BYTE PTR [edi],0x0
  41840c:	xchg   edx,eax
  41840d:	or     BYTE PTR [ebx+0x2e71de55],cl
  418413:	(bad)  
  418414:	in     al,dx
  418415:	test   DWORD PTR [ebx+0x14],edi
  418418:	(bad)  
  41841a:	pop    es
  41841b:	mov    esi,DWORD PTR [ebx]
  41841d:	sbb    edi,edi
  41841f:	jo     0x4183d3
  418421:	add    DWORD PTR [eax],0xd6b83
  418427:	je     0x4183e0
  418429:	jge    0x41847e
  41842b:	sbb    BYTE PTR [esi-0x80],ch
  41842e:	add    BYTE PTR [ebx-0x36f55db9],al
  418434:	add    BYTE PTR [eax],al
  418436:	test   DWORD PTR [edx+eax*1-0x7b6b43ab],esi
  41843d:	ret    
  41843e:	imul   edx,DWORD PTR [edi],0x52
  418441:	mov    ecx,DWORD PTR [edx]
  418443:	sar    BYTE PTR [edi+0x2a078ff],1
  418449:	add    BYTE PTR [ebp+ebx*2-0x5fb838fa],bh
  418450:	add    al,BYTE PTR [eax]
  418452:	inc    edi
  418453:	and    esi,DWORD PTR [edi]
  418455:	or     BYTE PTR [edi-0x2b],al
  418458:	or     ch,BYTE PTR [ebx]
  41845a:	xchg   DWORD PTR [esi+0x57],esp
  41845d:	leave  
  41845e:	test   DWORD PTR [edx+eax*1-0x55574501],ebx
  418465:	jmp    DWORD PTR [edi+0x70ab8df]
  41846b:	lea    ecx,[edx]
  41846d:	sub    eax,DWORD PTR [edi]
  41846f:	outs   dx,BYTE PTR ds:[esi]
  418470:	push   edi
  418471:	leave  
  418472:	add    eax,0x828902a4
  418477:	sbb    BYTE PTR [ecx+0xe183f74],bh
  41847d:	arpl   WORD PTR [eax],cx
  41847f:	scas   eax,DWORD PTR es:[edi]
  418480:	mov    edi,0x2a0fb44
  418485:	add    BYTE PTR [edi+0x4d],al
  418488:	aas    
  418489:	in     al,dx
  41848a:	xchg   edi,eax
  41848b:	xor    eax,0xcf97f43e
  418490:	sub    eax,0xbc6eef08
  418495:	(bad)  
  418496:	fcomp  DWORD PTR [eax]
  418498:	aas    
  418499:	in     al,dx
  41849a:	add    BYTE PTR [eax],al
  41849c:	pop    eax
  41849d:	mov    edx,0x9fd37c83
  4184a2:	cs add al,0x4c
  4184a5:	xchg   edx,eax
  4184a6:	or     BYTE PTR cs:[eax+eiz*2+0x58],ch
  4184ab:	pop    edi
  4184ac:	jle    0x4184b6
  4184ae:	stos   DWORD PTR es:[edi],eax
  4184af:	pop    es
  4184b0:	inc    edi
  4184b1:	loop   0x4184d6
  4184b3:	test   al,0xcf
  4184b5:	inc    ebx
  4184b6:	add    DWORD PTR [edx+0x3e8a11b],0xbff08e7
  4184c0:	pop    esp
  4184c1:	leave  
  4184c2:	push   ds
  4184c3:	pop    ecx
  4184c4:	mov    cs,edx
  4184c6:	in     al,0x3
  4184c8:	int3   
  4184c9:	inc    ebx
  4184ca:	add    edx,0xabb90a90
  4184d0:	pop    edi
  4184d1:	and    BYTE PTR [esi-0x48],bl
  4184d4:	iret   
  4184d5:	inc    ebx
  4184d6:	push   ebp
  4184d7:	mov    WORD PTR [eax-0x3b],ss
  4184da:	mov    ds:0xe8ad509f,eax
  4184df:	add    ebx,DWORD PTR [ecx+edi*8+0x6b]
  4184e3:	ds aaa 
  4184e5:	pop    edx
  4184e6:	fs xor ebx,DWORD PTR ds:[edx+0x2e]
  4184eb:	cs aas 
  4184ed:	mov    eax,ds:0xad29bda5
  4184f2:	jno    0x41853a
  4184f4:	pop    ss
  4184f5:	icebp  
  4184f6:	mov    ds:0xe20591ab,eax
  4184fb:	aad    0x94
  4184fd:	sbb    DWORD PTR [esi],eax
  4184ff:	add    BYTE PTR cs:[eax],al
  418502:	or     esp,DWORD PTR [edx-0x52ffd4b8]
  418508:	rol    ebx,0x9a
  41850b:	dec    esp
  41850c:	and    ch,al
  41850e:	cmp    al,0x9
  418510:	adc    BYTE PTR [ecx-0x21],cl
  418513:	lods   al,BYTE PTR ds:[esi]
  418514:	and    esp,DWORD PTR [eax-0x53ac7753]
  41851a:	fdiv   DWORD PTR [esi]
  41851c:	out    0x82,eax
  41851e:	push   ebx
  41851f:	mov    ch,0xe8
  418521:	xor    BYTE PTR [esi],al
  418523:	mov    DWORD PTR [ebx],edi
  418525:	lods   al,BYTE PTR ds:[esi]
  418526:	shl    BYTE PTR ds:0x2dc5ef00,0xf4
  41852d:	jmp    0x1d409ea9
  418532:	out    dx,eax
  418533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418534:	jo     0x418547
  418536:	fsubr  DWORD PTR [ebx+0x4bf1a92a]
  41853c:	leave  
  41853d:	stos   DWORD PTR es:[edi],eax
  41853e:	aas    
  41853f:	or     DWORD PTR [ebx+0x73ace704],eax
  418545:	in     al,0xb3
  418547:	jg     0x418548
  418549:	call   0xd9860592
  41854e:	mov    ecx,0x4376e435
  418553:	add    BYTE PTR [ebp+eax*2-0x76],0xcc
  418558:	add    DWORD PTR [ecx+0x4e6829ac],edi
  41855e:	cwde   
  41855f:	add    DWORD PTR [ebp+eiz*1-0x44],0x72dc2d
  418567:	add    BYTE PTR [esi-0x53],dh
  41856a:	jmp    0x8626:0xcf7faf91
  418571:	test   eax,0x944e8ff
  418576:	lea    esp,[esp+eiz*8-0x175372c5]
  41857d:	cmp    edx,DWORD PTR [edx+0xe]
  418580:	push   esi
  418581:	add    eax,ebp
  418583:	push   ss
  418584:	int3   
  418585:	stos   BYTE PTR es:[edi],al
  418586:	(bad)  
  418587:	repnz add al,0x38
  41858a:	or     al,0x6a
  41858c:	ds mov ch,0xff
  41858f:	je     0x418583
  418591:	xchg   BYTE PTR [ecx+ecx*8+0x44],bh
  418595:	ss es push 0x1f
  418599:	test   eax,0xac4b5cff
  41859e:	je     0x418569
  4185a0:	pushf  
  4185a1:	add    eax,0x73010068
  4185a6:	std    
  4185a7:	jne    0x41858b
  4185a9:	pop    edi
  4185aa:	sub    dh,bh
  4185ac:	icebp  
  4185ad:	jb     0x4185ac
  4185af:	jne    0x418593
  4185b1:	pop    edi
  4185b2:	hlt    
  4185b3:	addr16 loope 0x418628
  4185b6:	sub    eax,eax
  4185b8:	pusha  
  4185b9:	push   esp
  4185ba:	leave  
  4185bb:	ret    0x7a2
  4185be:	mov    eax,DWORD PTR [ebp-0x42]
  4185c1:	push   ds
  4185c2:	dec    BYTE PTR [ebp-0x46]
  4185c5:	xchg   BYTE PTR [ebx-0x1c],bh
  4185c8:	outs   dx,BYTE PTR ds:[esi]
  4185c9:	fild   DWORD PTR ds:0x73000083
  4185cf:	pop    ebx
  4185d0:	(bad)  
  4185d1:	je     0x4185d5
  4185d3:	jg     0x418618
  4185d5:	or     al,0xe1
  4185d7:	clc    
  4185d8:	fisttp DWORD PTR [edi-0x38c8d92]
  4185de:	push   es
  4185df:	mov    edi,0x3001ff65
  4185e4:	add    BYTE PTR [eax],al
  4185e6:	pop    esi
  4185e7:	pop    es
  4185e8:	pop    esi
  4185e9:	pop    edi
  4185ea:	ja     0x4185b4
  4185ec:	or     al,BYTE PTR [eax]
  4185ee:	fstp   TBYTE PTR [edi-0x16]
  4185f1:	sub    DWORD PTR [edx-0x42],0x55
  4185f5:	and    ebx,0x16
  4185f8:	add    BYTE PTR [ebp+0x14],dh
  4185fb:	das    
  4185fc:	add    BYTE PTR [eax],al
  4185fe:	cs pop es
  418600:	pop    edi
  418601:	leave  
  418602:	pop    esp
  418603:	cli    
  418604:	(bad)  
  418605:	(bad)  
  418606:	rcl    DWORD PTR [esi],cl
  418608:	sub    edx,edx
  41860a:	jne    0x418655
  41860c:	adc    bh,dh
  41860e:	or     ecx,DWORD PTR [ebx]
  418610:	inc    cx
  418612:	fidivr WORD PTR [ebp+0x43]
  418615:	lock xchg esp,eax
  418617:	add    eax,0x74fe75ff
  41861c:	jae    0x418626
  41861e:	inc    edi
  41861f:	enter  0x5f19,0xd0
  418623:	mov    ebx,0xa0377c80
  418628:	sub    eax,0x28a12d0c
  41862d:	fs mov eax,0xe80bed
  418633:	add    BYTE PTR [edi],bh
  418635:	sti    
  418636:	mov    ah,0xfe
  418638:	test   al,0xd
  41863a:	adc    bh,bh
  41863c:	sbb    bh,BYTE PTR [eax-0x6cdab556]
  418642:	mov    ah,0x88
  418644:	or     bh,BYTE PTR [esp+esi*4+0x74]
  418648:	xor    eax,DWORD PTR [ebx-0x2f90f7d2]
  41864e:	and    bh,bh
  418650:	js     0x418685
  418652:	das    
  418653:	adc    al,0x70
  418655:	mov    ch,0xa
  418657:	call   0xfef5449e
  41865c:	into   
  41865d:	gs mov edx,0xb3abd2fe
  418663:	je     0x4186a4
  418665:	dec    eax
  418666:	lods   eax,DWORD PTR ds:[esi]
  418667:	pusha  
  418668:	dec    eax
  418669:	inc    ebx
  41866a:	mov    ch,0x74
  41866c:	pop    ebx
  41866d:	jmp    0x41869d
  41866f:	or     BYTE PTR [edi],ch
  418671:	fldenv [eax]
  418673:	push   DWORD PTR [eax]
  418675:	daa    
  418676:	aas    
  418677:	adc    al,0xc4
  418679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41867a:	add    dh,BYTE PTR [ebx+edx*2+0x1f]
  41867e:	aaa    
  41867f:	cld    
  418680:	dec    edx
  418681:	mov    WORD PTR ds:0xfefc9283,es
  418687:	jae    0x4186c9
  418689:	xlat   BYTE PTR ds:[ebx]
  41868a:	ret    0xe5e
  41868d:	fimul  WORD PTR [edi]
  41868f:	add    BYTE PTR [esi+0x47411c7b],ah
  418695:	adc    DWORD PTR [eax+edi*1+0x9820000],ebp
  41869c:	loope  0x4186cb
  41869e:	dec    eax
  41869f:	fisubr WORD PTR [eax-0x338f1ac]
  4186a5:	add    eax,esp
  4186a7:	sub    ecx,ebp
  4186a9:	(bad)  
  4186aa:	push   ebx
  4186ab:	sti    
  4186ac:	lds    ebp,FWORD PTR [esi]
  4186ae:	pop    ebx
  4186af:	stos   BYTE PTR es:[edi],al
  4186b0:	xor    ecx,DWORD PTR [edi+ebp*4]
  4186b3:	xchg   DWORD PTR [edi-0x4b],eax
  4186b6:	mov    cl,0x7f
  4186b8:	and    ecx,esp
  4186ba:	and    BYTE PTR [ecx],cl
  4186bc:	jmp    0xe5e2cdc3
  4186c1:	sbb    al,0x98
  4186c3:	test   eax,0xdd9b3e5f
  4186c8:	lea    ebp,[eax+0xffbaa36]
  4186ce:	xor    BYTE PTR [ebx],0xf1
  4186d1:	stos   DWORD PTR es:[edi],eax
  4186d2:	retf   0x7627
  4186d5:	mov    ah,0xbd
  4186d7:	push   ebx
  4186d8:	jne    0x418664
  4186da:	inc    esp
  4186db:	outs   dx,DWORD PTR ds:[esi]
  4186dc:	lods   eax,DWORD PTR ds:[esi]
  4186dd:	clc    
  4186de:	jecxz  0x418690
  4186e0:	fisubr DWORD PTR [edx-0x7f02bc33]
  4186e6:	sbb    BYTE PTR [ecx],cl
  4186e8:	aam    0x4
  4186ea:	dec    eax
  4186eb:	xor    edi,DWORD PTR ds:0x3e3006ab
  4186f1:	mov    ah,0x6d
  4186f3:	leave  
  4186f4:	xchg   ebp,eax
  4186f5:	retf   0xfe06
  4186f8:	call   0xebe7327d
  4186fd:	add    al,0x0
  4186ff:	add    dl,cl
  418701:	jo     0x4186eb
  418703:	add    eax,DWORD PTR [edi-0xc]
  418706:	adc    eax,0xb394a2a8
  41870b:	scas   eax,DWORD PTR es:[edi]
  41870c:	mov    ebp,0x8a00430d
  418711:	cdq    
  418712:	xchg   edx,eax
  418713:	add    edx,DWORD PTR [edi+0x3c7bffa8]
  418719:	mov    cl,0x27
  41871b:	(bad)  
  41871c:	mov    bl,0xa7
  41871e:	(bad)  
  41871f:	pop    esp
  418720:	aas    
  418721:	test   al,0x74
  418723:	icebp  
  418724:	mov    esp,0x94d660fa
  418729:	xchg   ecx,eax
  41872a:	inc    esp
  41872b:	popf   
  41872c:	sub    DWORD PTR [ecx],ecx
  41872e:	(bad)  
  41872f:	cmp    al,0x5f
  418731:	test   al,0x74
  418733:	icebp  
  418734:	fcom   QWORD PTR [ecx-0x8]
  418737:	mov    dh,0xf4
  418739:	xchg   ebx,eax
  41873a:	dec    esp
  41873b:	aad    0xc1
  41873d:	loope  0x41873e
  41873f:	sbb    eax,DWORD PTR [eax+ebp*4+0x74]
  418743:	xchg   ebp,eax
  418744:	mov    ebx,0xd4966636
  418749:	repz mov edi,0x13caca2e
  41874f:	jmp    0x7e59a509
  418754:	ds std 
  418756:	(bad)  
  418757:	cld    
  418758:	mov    al,0xa7
  41875a:	je     0x418739
  41875c:	mov    ch,0x1d
  41875e:	or     BYTE PTR [ecx-0x48],dl
  418761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418762:	(bad)  
  418763:	pop    esi
  418764:	add    BYTE PTR [eax],al
  418766:	pop    eax
  418767:	push   0x1d95e674
  41876c:	hlt    
  41876d:	inc    ecx
  41876e:	cld    
  41876f:	inc    DWORD PTR cs:[esi+0x20]
  418773:	push   0xfc01305e
  418778:	jmp    FWORD PTR [ebp-0x4407dadf]
  41877e:	(bad)  
  41877f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418780:	je     0x418783
  418782:	aam    0x1c
  418784:	adc    al,0x1e
  418786:	pop    esi
  418787:	sar    esi,1
  418789:	pushf  
  41878a:	adc    BYTE PTR [edi+0x2dace174],ah
  418790:	inc    BYTE PTR [eax]
  418792:	dec    ecx
  418793:	pop    esp
  418794:	or     eax,eax
  418796:	jmp    0xde42d82b
  41879b:	or     edi,edi
  41879d:	jne    0x418791
  41879f:	adc    DWORD PTR [esi+eiz*2],0xffffffe9
  4187a3:	pop    edx
  4187a4:	sub    eax,eax
  4187a6:	sbb    DWORD PTR [esi-0x40],esp
  4187a9:	adc    al,0xde
  4187ab:	test   BYTE PTR [ecx+eax*1],bh
  4187ae:	fimul  WORD PTR [ebx]
  4187b0:	cmp    DWORD PTR [ebp-0x76],0x8
  4187b4:	jne    0x41946c
  4187ba:	inc    ebp
  4187bb:	pop    esp
  4187bc:	out    0x24,eax
  4187be:	lahf   
  4187bf:	or     eax,DWORD PTR [eax]
  4187c1:	mov    esp,DWORD PTR [ebx+0x61]
  4187c4:	mov    DWORD PTR [esp],eax
  4187c7:	cmovne esi,eax
  4187ca:	add    BYTE PTR [eax],al
  4187cc:	inc    esp
  4187cd:	or     eax,0xa533ff50
  4187d2:	out    0x74,al
  4187d4:	sub    ebx,DWORD PTR [ebp+edi*8+0x6a]
  4187d8:	outs   dx,BYTE PTR ds:[esi]
  4187d9:	pop    edx
  4187da:	jae    0x4187f0
  4187dc:	stc    
  4187dd:	loopne 0x4187e6
  4187df:	call   0x3eeae1
  4187e4:	aad    0x48
  4187e6:	adc    al,0x83
  4187e8:	daa    
  4187e9:	or     eax,0xe0f90f75
  4187ee:	repz call 0x40791a
  4187f4:	push   ebp
  4187f5:	int    0x5d
  4187f7:	leave  
  4187f8:	ins    BYTE PTR es:[edi],dx
  4187f9:	(bad)  
  4187fa:	dec    DWORD PTR [edx]
  4187fc:	dec    esp
  4187fd:	fiadd  WORD PTR [ecx+ebp*8]
  418800:	push   0xa
  418802:	add    BYTE PTR [eax],al
  418804:	xchg   edi,eax
  418805:	push   ecx
  418806:	in     al,dx
  418807:	push   0x2e
  418809:	pop    esp
  41880a:	jae    0x418820
  41880c:	inc    edi
  41880d:	push   DWORD PTR [edi]
  41880f:	or     BYTE PTR [edi],bl
  418811:	test   BYTE PTR [ecx+0x401c00fe],bh
  418817:	adc    al,0xc4
  418819:	leave  
  41881a:	add    dh,BYTE PTR [ebp+0x40]
  41881d:	lahf   
  41881e:	ss hlt 
  418820:	fistp  QWORD PTR [eax]
  418822:	sub    bh,bh
  418824:	loopne 0x418821
  418826:	ret    
  418827:	pop    esi
  418828:	push   cs
  418829:	jae    0x418842
  41882b:	add    al,dl
  41882d:	add    eax,0x6628
  418832:	xchg   BYTE PTR [eax+0x1baf447f],dh
  418838:	inc    edi
  418839:	call   0xc1414102
  41883e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41883f:	mov    ch,0xdb
  418841:	shr    esi,1
  418843:	ja     0x418848
  418845:	add    BYTE PTR [edi-0x79],al
  418848:	mov    dl,0x82
  41884a:	scas   eax,DWORD PTR es:[edi]
  41884b:	lahf   
  41884c:	jns    0x418892
  41884e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41884f:	xor    ebx,DWORD PTR [edi]
  418851:	call   0xec88b3ba
  418856:	cmp    al,0xf5
  418858:	fwait
  418859:	jbe    0x4188a0
  41885b:	jnp    0x418837
  41885d:	sub    dl,BYTE PTR [ebp+0x1cec472b]
  418863:	in     eax,dx
  418864:	mov    ds:0x8538128a,eax
  418869:	shl    BYTE PTR [ebx+esi*1],0x9b
  41886d:	add    ebx,DWORD PTR [eax+0x41]
  418870:	add    eax,0x57296755
  418875:	in     al,0xcc
  418877:	je     0x418813
  418879:	cmp    al,BYTE PTR [edx-0x43facab4]
  41887f:	je     0x418823
  418881:	jmp    0x920:0xe4472b44
  418888:	pushf  
  418889:	pop    ss
  41888a:	sbb    BYTE PTR [ecx*1-0x1ee3efac],bl
  418891:	fwait
  418892:	out    0x9d,eax
  418894:	or     eax,0x4d0000b1
  418899:	leave  
  41889a:	jnp    0x41889c
  41889c:	clc    
  41889d:	sbb    esi,ebp
  41889f:	fwait
  4188a0:	push   edx
  4188a1:	sub    al,0xf6
  4188a3:	mov    al,0x1d
  4188a5:	leave  
  4188a6:	lea    edi,[edx+0x7ae8fd06]
  4188ac:	add    ebp,0x71
  4188af:	rol    ebx,cl
  4188b1:	dec    ebx
  4188b2:	mov    ebp,0xb14bba53
  4188b7:	push   ebx
  4188b8:	adc    eax,0xb9ac62b1
  4188bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188be:	outs   dx,DWORD PTR ds:[esi]
  4188bf:	inc    esi
  4188c0:	xchg   edi,eax
  4188c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188c2:	cmp    edx,eax
  4188c4:	mov    al,ds:0xa1b10d2e
  4188c9:	mov    DWORD PTR [ebx],esp
  4188cb:	aam    0x98
  4188cd:	sbb    esp,edi
  4188cf:	test   BYTE PTR [ebx],dl
  4188d1:	shr    eax,0x37
  4188d4:	xor    BYTE PTR [esi+0x1b81d813],ah
  4188da:	mov    eax,ds:0x7e14f3b0
  4188df:	ss aas 
  4188e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188e2:	sbb    ecx,DWORD PTR [eax+ebp*2]
  4188e5:	sbb    edx,DWORD PTR [ecx+0x65a2469b]
  4188eb:	mov    al,0x1
  4188ed:	loop   0x4188ca
  4188ef:	stos   DWORD PTR es:[edi],eax
  4188f0:	inc    ecx
  4188f1:	mov    edi,DWORD PTR [ecx]
  4188f3:	mov    cl,0x49
  4188f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f6:	dec    ebp
  4188f7:	cmp    esi,DWORD PTR ss:[edx+0x272c]
  4188fe:	cmp    BYTE PTR [ebp+0x9470280],ah
  418904:	add    cl,ch
  418906:	xchg   edi,eax
  418907:	rol    cl,cl
  418909:	aad    0x44
  41890b:	mov    edx,DWORD PTR ds:0xf174a47f
  418912:	lods   al,BYTE PTR ds:[esi]
  418913:	cwde   
  418914:	jno    0x41892c
  418916:	xlat   BYTE PTR ds:[ebx]
  418917:	sub    al,0xa1
  418919:	stos   BYTE PTR es:[edi],al
  41891a:	test   DWORD PTR [ecx],ecx
  41891c:	(bad)  
  41891d:	jl     0x41891b
  41891f:	lods   al,BYTE PTR ds:[esi]
  418920:	cmp    al,0xb6
  418922:	inc    esp
  418923:	or     DWORD PTR [ebx],ecx
  418925:	sub    DWORD PTR [ecx],esi
  418927:	push   cs
  418928:	pop    edi
  418929:	and    BYTE PTR [edx],cl
  41892b:	or     eax,0x943af00
  418930:	call   DWORD PTR [ebx+edx*8-0x54]
  418934:	rcr    BYTE PTR [ebx-0x68],cl
  418937:	mov    ds:0x4a048abe,eax
  41893c:	add    dh,al
  41893e:	jle    0x418951
  418940:	push   edi
  418941:	ror    DWORD PTR [edx-0x25],1
  418944:	(bad)  
  418945:	call   0xe4b5edf7
  41894a:	adc    edx,edx
  41894c:	shl    ecx,0x44
  41894f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418950:	xor    ch,BYTE PTR [ecx-0x69015cde]
  418956:	fcomp  DWORD PTR [edx+0x1e49d1ad]
  41895c:	loopne 0x4188e4
  41895e:	ds adc eax,ebp
  418961:	add    eax,0xa46e0000
  418966:	(bad)  
  418967:	loop   0x4188ed
  418969:	sbb    eax,0xcaa20e05
  41896e:	pop    es
  41896f:	jmp    0xa88441b0
  418974:	inc    esp
  418975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418976:	je     0x418959
  418978:	lods   al,BYTE PTR ds:[esi]
  418979:	shl    BYTE PTR [ecx+ebp*8],1
  41897c:	inc    esp
  41897d:	adc    al,al
  41897f:	add    bl,bh
  418981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418982:	std    
  418983:	jne    0x4189a7
  418985:	and    eax,DWORD PTR [esp+ebp*2]
  418988:	clc    
  418989:	dec    esp
  41898a:	add    BYTE PTR [eax+0x50],ch
  41898d:	dec    eax
  41898e:	inc    ecx
  41898f:	add    BYTE PTR [ecx-0x1e],ah
  418992:	pop    es
  418993:	call   0x402c04
  418998:	and    eax,0x510973c8
  41899d:	loop   0x4189aa
  41899f:	(bad)  
  4189a0:	jmp    0x418979
  4189a2:	gs inc ecx
  4189a4:	fdivp  st(7),st
  4189a6:	in     al,dx
  4189a7:	inc    ebx
  4189a8:	lahf   
  4189a9:	pop    es
  4189aa:	push   DWORD PTR [ebp-0x1a]
  4189ad:	jg     0x418945
  4189af:	xor    eax,0xc00b07ee
  4189b4:	jnp    0x41895c
  4189b6:	std    
  4189b7:	jne    0x41899b
  4189b9:	and    al,BYTE PTR [esp+esi*2]
  4189bc:	or     BYTE PTR [esi+0x0],cl
  4189bf:	mov    eax,0x7af
  4189c4:	push   ecx
  4189c5:	data16 ror BYTE PTR [eax],0x0
  4189c9:	add    BYTE PTR [esi+0x2dec8b40],bl
  4189cf:	int3   
  4189d0:	repnz push esi
  4189d2:	pop    ecx
  4189d3:	add    eax,0xd5f439d
  4189d8:	push   DWORD PTR [ebp-0x5a]
  4189db:	jg     0x418961
  4189dd:	outs   dx,BYTE PTR ss:[esi]
  4189df:	pop    es
  4189e0:	or     eax,eax
  4189e2:	jnp    0x4189f1
  4189e4:	pop    edi
  4189e5:	pop    esi
  4189e6:	mov    bh,0xc9
  4189e8:	add    al,BYTE PTR [eax]
  4189ea:	push   ds
  4189eb:	and    bh,ch
  4189ed:	mov    esi,DWORD PTR [ebx-0x61]
  4189f0:	jmp    0x3cc953f6
  4189f5:	add    BYTE PTR [ebx+0x71],bh
  4189f8:	mov    ds:0x421b4768,al
  4189fd:	inc    ecx
  4189fe:	inc    edi
  4189ff:	push   ebx
  418a00:	cmp    BYTE PTR [eax],cl
  418a02:	das    
  418a03:	shl    esp,1
  418a05:	push   DWORD PTR [eax]
  418a07:	cwde   
  418a08:	ret    0x4174
  418a0b:	jnp    0x418a59
  418a0d:	leave  
  418a0e:	add    eax,0x9a8b02ad
  418a13:	cwde   
  418a14:	cdq    
  418a15:	and    edi,eax
  418a17:	ret    
  418a18:	sti    
  418a19:	jae    0x418a49
  418a1b:	xor    dh,ch
  418a1d:	or     al,0x7b
  418a1f:	pushf  
  418a20:	cmp    BYTE PTR [esi],0x4d
  418a23:	and    al,0xfe
  418a25:	jg     0x418a57
  418a27:	addr16 ss or al,bh
  418a2b:	pop    ebx
  418a2c:	dec    edi
  418a2d:	je     0x418a2f
  418a2f:	add    BYTE PTR [edx+0x30],cl
  418a32:	out    dx,al
  418a33:	pop    edi
  418a34:	push   edx
  418a35:	scas   eax,DWORD PTR es:[edi]
  418a36:	les    eax,FWORD PTR [esi]
  418a38:	daa    
  418a39:	jmp    0x4189be
  418a3b:	ds inc edi
  418a3d:	inc    ebp
  418a3e:	retf   
  418a3f:	(bad)  
  418a40:	or     dl,ah
  418a42:	add    eax,DWORD PTR [eax]
  418a44:	inc    edi
  418a45:	mov    al,0xc3
  418a47:	inc    esp
  418a48:	scas   eax,DWORD PTR es:[edi]
  418a49:	mov    al,0x2
  418a4b:	add    BYTE PTR [edi+0x27],al
  418a4e:	das    
  418a4f:	or     BYTE PTR [edi+eiz*8+0x5603e83],ch
  418a56:	fld    DWORD PTR [edx+0x75038412]
  418a5c:	xor    eax,0x46f84683
  418a61:	mov    al,0x2
  418a63:	add    dl,dh
  418a65:	stos   DWORD PTR es:[edi],eax
  418a66:	ret    
  418a67:	inc    esp
  418a68:	jae    0x418a1b
  418a6a:	add    al,BYTE PTR [eax]
  418a6c:	inc    edi
  418a6d:	xchg   DWORD PTR [eax],edx
  418a6f:	test   DWORD PTR [edx],0x47000318
  418a75:	or     ecx,ebp
  418a77:	ss cmp eax,0x81e3e5cb
  418a7d:	dec    esp
  418a7e:	push   ebp
  418a7f:	add    al,0x47
  418a81:	or     ecx,ebp
  418a83:	cmp    DWORD PTR [ecx+0x45],0xffffffbc
  418a87:	push   es
  418a88:	xor    BYTE PTR [ecx+eax*2-0x67],cl
  418a8c:	inc    ecx
  418a8d:	retf   0xabab
  418a90:	and    BYTE PTR [edx+0x3e8],ah
  418a96:	les    esp,FWORD PTR [ebx]
  418a98:	and    eax,0x27069a03
  418a9d:	add    eax,0xed694a67
  418aa2:	add    BYTE PTR ds:0x117b7959,bl
  418aa8:	adc    dl,BYTE PTR [eax]
  418aaa:	(bad)  
  418aab:	loope  0x418a75
  418aad:	ss push ecx
  418aaf:	mov    DWORD PTR [ebp+0x2],esi
  418ab2:	daa    
  418ab3:	sbb    al,0xd9
  418ab5:	push   esp
  418ab6:	in     al,dx
  418ab7:	or     dh,BYTE PTR [ebx+0x44]
  418aba:	inc    esi
  418abb:	xchg   ecx,eax
  418abc:	in     eax,0x44
  418abe:	(bad)  
  418abf:	loope  0x418aa9
  418ac1:	ss mov edx,0xc7451e41
  418ac7:	loope  0x418ab1
  418ac9:	ss nop
  418acb:	leave  
  418acc:	and    edi,DWORD PTR [eax+0x3e8a1a8]
  418ad2:	int3   
  418ad3:	sbb    esp,ecx
  418ad5:	js     0x418af2
  418ad7:	adc    DWORD PTR [edx-0x331def1f],edx
  418add:	ss sub ecx,ebx
  418ae0:	in     eax,dx
  418ae1:	add    eax,DWORD PTR [eax+0x6f55951b]
  418ae7:	in     eax,dx
  418ae8:	xchg   BYTE PTR [ecx+esi*2+0x4136a90d],ch
  418aef:	inc    edx
  418af0:	add    BYTE PTR [edi],dl
  418af2:	pushf  
  418af3:	mov    DWORD PTR [ebx],0x459adfe9
  418af9:	data16 add BYTE PTR [eax],al
  418afc:	or     DWORD PTR [ebp-0x5ea496ba],ebx
  418b02:	jae    0x418b34
  418b04:	repz adc eax,0x14dcb7f4
  418b0a:	inc    BYTE PTR [esi-0x1d]
  418b0d:	aas    
  418b0e:	pop    esi
  418b0f:	xor    BYTE PTR [esi],al
  418b11:	or     eax,0xb49f9c00
  418b16:	and    BYTE PTR ds:0x6a5736dc,0x61
  418b1d:	cmc    
  418b1e:	call   DWORD PTR [ebp+ecx*1+0x1c183c8c]
  418b25:	dec    edx
  418b26:	add    cl,ch
  418b28:	xor    DWORD PTR [edi],eax
  418b2a:	pop    edi
  418b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b2c:	lods   eax,DWORD PTR ds:[esi]
  418b2d:	retf   0xe90f
  418b30:	outs   dx,DWORD PTR ds:[esi]
  418b31:	inc    ebp
  418b32:	adc    al,0xb0
  418b34:	dec    ecx
  418b35:	sub    eax,0x1044a866
  418b3a:	or     DWORD PTR [edx+0x2000094a],0x46
  418b41:	sbb    DWORD PTR [esi+0x28],esp
  418b44:	dec    ebx
  418b45:	adc    BYTE PTR [ebx+0x94276],al
  418b4b:	add    BYTE PTR [esi+0x15],al
  418b4e:	data16 sub BYTE PTR [ebx+0x10],al
  418b52:	and    DWORD PTR [edx+0x4a],0x9
  418b56:	add    BYTE PTR [esi+eax*1-0x6b],bl
  418b5a:	dec    edi
  418b5b:	je     0x418b63
  418b5d:	mov    eax,ds:0x6c4f
  418b62:	push   es
  418b63:	popf   
  418b64:	dec    edi
  418b65:	xchg   esi,eax
  418b66:	jbe    0x418b9c
  418b68:	data16 sub BYTE PTR [ebx-0x60],al
  418b6c:	je     0x418b6e
  418b6e:	mov    es,WORD PTR [esp+edi*4-0x748c1608]
  418b75:	inc    ebp
  418b76:	(bad)  
  418b77:	xor    eax,0x34da458d
  418b7c:	lea    eax,[ebp-0x12]
  418b7f:	xor    al,0xff
  418b81:	xor    eax,0x40ea72
  418b86:	cdq    
  418b87:	fimul  DWORD PTR [edi]
  418b89:	call   0x3ef850
  418b8e:	mov    ebx,0x9b50dc4a
  418b93:	dec    edx
  418b94:	loopne 0x418be6
  418b96:	stos   DWORD PTR es:[edi],eax
  418b97:	dec    edx
  418b98:	in     al,0x50
  418b9a:	imul   ebx,DWORD PTR [edx+0xbdf666e],0x840e75ff
  418ba4:	mov    al,bh
  418ba6:	pop    ecx
  418ba7:	je     0x418ba6
  418ba9:	jne    0x418bed
  418bab:	and    al,0x44
  418bad:	aam    0x49
  418baf:	fcmovu st,st(3)
  418bb1:	(bad)  
  418bb2:	mov    ds:0x3e45c5d3,eax
  418bb7:	add    eax,0x20ee0000
  418bbc:	inc    esp
  418bbd:	int3   
  418bbe:	push   cs
  418bbf:	inc    DWORD PTR [eax]
  418bc1:	push   0xffffffde
  418bc3:	std    
  418bc4:	jmp    FWORD PTR [ecx+0x0]
  418bc7:	add    BYTE PTR [esi+0x638cfffd],ch
  418bcd:	mov    ecx,0x5493ff4e
  418bd2:	es inc ecx
  418bd4:	sahf   
  418bd5:	sahf   
  418bd6:	mov    esi,0xff9e320f
  418bdb:	jmp    FWORD PTR [esi-0x612f847a]
  418be1:	mov    ds:0xb9f0082,al
  418be6:	add    BYTE PTR [ebx+0x3ab7e547],cl
  418bec:	or     al,BYTE PTR [esi-0x4e847907]
  418bf2:	add    al,BYTE PTR [eax]
  418bf4:	imul   ebx,DWORD PTR [edx],0x30
  418bf7:	ror    ah,1
  418bf9:	xchg   esp,eax
  418bfa:	(bad)  
  418bfb:	mov    cl,BYTE PTR [edx]
  418bfd:	jle    0x418ba4
  418bff:	add    DWORD PTR [ebp+ecx*4-0x57],edx
  418c03:	je     0x418c80
  418c05:	cs inc eax
  418c07:	in     al,0x40
  418c09:	mov    esi,0x318e7d2
  418c0e:	add    al,0x0
  418c10:	(bad)  
  418c11:	lds    esp,FWORD PTR [esi-0x46dbc601]
  418c17:	jmp    DWORD PTR [eax]
  418c19:	mov    cl,0x85
  418c1b:	jl     0x418c34
  418c1d:	mov    cl,0xf9
  418c1f:	or     DWORD PTR [ebx],0xffffffb1
  418c22:	add    al,BYTE PTR [eax]
  418c24:	les    edi,FWORD PTR [ebp-0x62]
  418c27:	call   DWORD PTR [ecx+0x2c]
  418c2a:	ins    DWORD PTR es:[edi],dx
  418c2b:	inc    DWORD PTR [eax]
  418c2d:	add    al,bh
  418c2f:	mov    al,0xa9
  418c31:	je     0x418c26
  418c33:	clc    
  418c34:	ins    BYTE PTR es:[edi],dx
  418c35:	pusha  
  418c36:	call   0xf8606da
  418c3b:	cwde   
  418c3c:	cs cld 
  418c3e:	fcom   DWORD PTR ds:0xbc5afebb
  418c44:	fbld   TBYTE PTR [esi-0x41]
  418c48:	test   al,0x67
  418c4a:	ret    
  418c4b:	repz inc edx
  418c4d:	add    BYTE PTR [edi-0x4f0009c4],ch
  418c53:	add    BYTE PTR [esp+edi*8],bl
  418c56:	add    al,0xf1
  418c58:	add    edi,edi
  418c5a:	sbb    ch,BYTE PTR [eax-0x65]
  418c5d:	sub    eax,0xb02b053
  418c62:	xchg   DWORD PTR [ecx],ecx
  418c64:	sbb    eax,0x250a1f0c
  418c69:	inc    ebx
  418c6a:	inc    edi
  418c6b:	mov    cl,0x18
  418c6d:	idiv   BYTE PTR [eax-0x62]
  418c70:	cmp    BYTE PTR [esp+eax*2],bl
  418c73:	inc    ebp
  418c74:	sub    BYTE PTR [eax+ebp*2],al
  418c77:	adc    al,0xb1
  418c79:	pushf  
  418c7a:	ss aad 0xe8
  418c7d:	add    ecx,DWORD PTR [ecx+ecx*8-0xc]
  418c81:	or     ebx,edi
  418c83:	adc    DWORD PTR [ebp-0x4b4eb8be],ebp
  418c89:	cmc    
  418c8a:	inc    eax
  418c8b:	sahf   
  418c8c:	mov    eax,0xa8454c1b
  418c91:	add    eax,DWORD PTR [eax]
  418c93:	add    BYTE PTR [eax],dh
  418c95:	adc    al,0x31
  418c97:	pushf  
  418c98:	xor    bl,dl
  418c9a:	call   0xbc0ad8a2
  418c9f:	ds scas eax,DWORD PTR es:[edi]
  418ca1:	or     ecx,ebp
  418ca3:	cwde   
  418ca4:	rcr    BYTE PTR [ebp+0x6320f79b],cl
  418caa:	mov    ebx,0xdb9e01a8
  418caf:	sbb    esp,DWORD PTR [ecx+0x48]
  418cb2:	jmp    0x114f085f
  418cb7:	pop    eax
  418cb8:	mov    ebx,DWORD PTR [esi-0x62a45703]
  418cbe:	cmc    
  418cbf:	rcr    DWORD PTR cs:[ebp-0x4b17088d],cl
  418cc6:	inc    ebx
  418cc7:	test   eax,0xb4539dc9
  418ccc:	rcl    DWORD PTR [ebx],0xc1
  418ccf:	test   al,0x33
  418cd1:	or     eax,0x9e13c1c1
  418cd6:	lds    ebp,FWORD PTR [eax+0x2ebda533]
  418cdc:	sbb    DWORD PTR [ebp-0x5a60c401],0xffffffb7
  418ce3:	or     al,0xde
  418ce5:	sahf   
  418ce6:	(bad)  
  418ce7:	sbb    al,0xcb
  418ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cea:	lock or DWORD PTR [esi-0x43c8a162],ebp
  418cf1:	(bad)  
  418cf2:	psubsw mm0,QWORD PTR [ecx]
  418cf5:	xchg   edx,eax
  418cf6:	jmp    0x418d62
  418cf8:	add    BYTE PTR [eax],al
  418cfa:	test   al,0xa5
  418cfc:	cmp    ah,0x50
  418cff:	add    al,0xf
  418d01:	ins    BYTE PTR es:[edi],dx
  418d02:	xor    ecx,DWORD PTR [eax]
  418d04:	add    cl,ch
  418d06:	fld    DWORD PTR [esp+esi*8-0x47]
  418d0a:	rol    DWORD PTR [eax+edi*8-0x47],1
  418d0e:	mov    ecx,0x5ab9fc45
  418d13:	pop    es
  418d14:	call   esp
  418d16:	push   esp
  418d17:	mov    cl,0x20
  418d19:	fistp  WORD PTR ds:[ebx+0x9ecbc82]
  418d20:	(bad)  
  418d22:	rcr    DWORD PTR [esi+edi*8-0xbea2017],cl
  418d29:	jbe    0x418d74
  418d2b:	cdq    
  418d2c:	addr16 sub eax,0x16004a8b
  418d32:	sub    DWORD PTR [ecx-0x63053c19],ebx
  418d38:	(bad)  
  418d39:	repnz add al,0xc
  418d3c:	test   DWORD PTR [ecx],esp
  418d3e:	inc    esp
  418d3f:	or     DWORD PTR [eax],eax
  418d41:	sbb    DWORD PTR fs:[ebp-0x5eeea3b1],edx
  418d48:	dec    edi
  418d49:	je     0x418cd1
  418d4b:	popf   
  418d4c:	dec    edi
  418d4d:	push   ebx
  418d4e:	dec    ebx
  418d4f:	pushf  
  418d50:	je     0x418d4b
  418d52:	fsub   QWORD PTR [esi-0x7817310b]
  418d58:	jl     0x418d5a
  418d5a:	xchg   BYTE PTR [esi],al
  418d5c:	jne    0x6078d62
  418d62:	add    BYTE PTR [eax],al
  418d64:	rcr    edx,1
  418d66:	repz push 0x4147f9
  418d6c:	mov    dh,0x96
  418d6e:	xor    BYTE PTR [eax],al
  418d70:	outs   dx,BYTE PTR ds:[esi]
  418d71:	lahf   
  418d72:	mov    esi,0xff27eb0f
  418d77:	call   FWORD PTR [esi+0x21]
  418d7a:	inc    esp
  418d7b:	hlt    
  418d7c:	dec    esi
  418d7d:	and    al,BYTE PTR [eax+edi*8+0x3e]
  418d81:	and    al,BYTE PTR [esp+edi*8+0x3e]
  418d85:	inc    DWORD PTR [edx]
  418d87:	call   FWORD PTR [ebx-0x8]
  418d8a:	out    0xb1,eax
  418d8c:	call   0x23c58af4
  418d91:	jo     0x418d91
  418d93:	push   cs
  418d94:	stos   DWORD PTR es:[edi],eax
  418d95:	mov    dh,bh
  418d97:	call   FWORD PTR [esi]
  418d99:	pop    ds
  418d9a:	inc    esp
  418d9b:	hlt    
  418d9c:	adc    DWORD PTR [ebp+0x2292458d],0x20bef444
  418da6:	inc    esp
  418da7:	clc    
  418da8:	scas   al,BYTE PTR es:[edi]
  418da9:	and    BYTE PTR [esp+edi*8-0x32],al
  418dad:	add    DWORD PTR [edi+edi*8],eax
  418db0:	fcomi  st,st(7)
  418db2:	out    0x89,eax
  418db4:	pop    eax
  418db5:	fs std 
  418db7:	add    ebx,0x6f
  418dba:	push   DWORD PTR [ecx+eiz*4+0x5a]
  418dbe:	add    ebp,DWORD PTR [eax+ecx*8+0x44]
  418dc2:	add    bh,bh
  418dc4:	add    BYTE PTR [eax],al
  418dc6:	shl    DWORD PTR [edx-0x3],1
  418dc9:	(bad)  
  418dca:	jmp    0x418da3
  418dcc:	gs inc ecx
  418dce:	fisub  WORD PTR [edx-0x3]
  418dd1:	jmp    DWORD PTR [ecx+0x4774035a]
  418dd7:	dec    esp
  418dd8:	inc    ebp
  418dd9:	add    BYTE PTR [eax-0x57015a36],dh
  418ddf:	fsubr  QWORD PTR [edi-0x5aa1ba19]
  418de5:	inc    BYTE PTR [eax+0x47009bec]
  418deb:	mov    dl,0x2
  418ded:	or     DWORD PTR [edx-0xa],0x1d
  418df1:	inc    ecx
  418df2:	inc    edi
  418df3:	jnp    0x418e23
  418df5:	sub    esp,eax
  418df7:	mov    ah,0x32
  418df9:	pushw  es
  418dfb:	mov    dl,0xa5
  418dfd:	jae    0x418e26
  418dff:	das    
  418e00:	call   0x4327778
  418e05:	call   ebx
  418e07:	mov    edx,0xf19af01a
  418e0c:	add    ecx,DWORD PTR [ebp-0xacc5fe]
  418e12:	mov    edx,0x4b74a64c
  418e17:	xor    esi,DWORD PTR [eax]
  418e19:	or     BYTE PTR [edi],bl
  418e1b:	test   eax,0xda28feaa
  418e20:	ror    BYTE PTR [edi],0x47
  418e23:	jne    0x418e9e
  418e25:	jmp    0x418deb
  418e27:	in     al,dx
  418e28:	xchg   esi,eax
  418e29:	inc    BYTE PTR [eax]
  418e2b:	add    BYTE PTR [edx+0x6e9c9aa8],bl
  418e31:	jecxz  0x418dd8
  418e33:	imul   edx,DWORD PTR [edi+0x2d],0xf397f040
  418e3a:	das    
  418e3b:	or     bh,bl
  418e3d:	xchg   ebx,eax
  418e3e:	dec    edx
  418e3f:	(bad)  
  418e40:	call   0x4bb650dc
  418e45:	fld    st(0)
  418e47:	pop    es
  418e48:	inc    edi
  418e49:	xchg   BYTE PTR [edx],dl
  418e4b:	push   0x436fc8
  418e50:	mov    edx,0x10b42c09
  418e55:	mov    cl,0xd5
  418e57:	inc    ebp
  418e58:	mov    eax,0x3bc3e19a
  418e5d:	add    eax,0x940c2a0
  418e62:	scas   al,BYTE PTR es:[edi]
  418e63:	aas    
  418e64:	mov    bl,0x8
  418e66:	jmp    0x2bcdd56e
  418e6b:	cwde   
  418e6c:	add    BYTE PTR [edx-0x1b5f03cd],bl
  418e72:	inc    edx
  418e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e74:	or     DWORD PTR [esi],0x864130a9
  418e7a:	adc    ebx,DWORD PTR [eax-0x2718ea90]
  418e80:	test   al,0xd0
  418e82:	stos   BYTE PTR es:[edi],al
  418e83:	cld    
  418e84:	pusha  
  418e85:	dec    edx
  418e86:	sar    BYTE PTR [edx-0x6367fb93],cl
  418e8c:	aad    0x7
  418e8e:	sub    cl,bh
  418e90:	add    BYTE PTR [eax],al
  418e92:	mov    BYTE PTR [esi+ebx*2],dl
  418e95:	dec    esp
  418e96:	les    esp,FWORD PTR [eax+0x61422ee7]
  418e9c:	call   0x6a4ad4a4
  418ea1:	stos   DWORD PTR es:[edi],eax
  418ea2:	inc    edi
  418ea3:	adc    eax,0xcfe0d8ef
  418ea8:	sub    bh,ah
  418eaa:	sbb    BYTE PTR [edi-0x34],ah
  418ead:	sbb    eax,0x3f5c0986
  418eb2:	sbb    edi,DWORD PTR [ecx]
  418eb4:	es das 
  418eb6:	dec    edi
  418eb7:	mov    cl,0xeb
  418eb9:	dec    ecx
  418eba:	clc    
  418ebb:	cdq    
  418ebc:	imul   ebp,DWORD PTR [edi+eax*2-0xf7f1beb],0xc5fd7c06
  418ec7:	sbb    ecx,DWORD PTR ds:0x35204
  418ecd:	ret    0xd104
  418ed0:	shl    ecx,0x44
  418ed3:	mov    WORD PTR [ebp+edx*8+0x14],es
  418ed7:	call   0xd658:0xaedcf174
  418ede:	jmp    0x418e66
  418ee0:	imul   eax
  418ee2:	pop    eax
  418ee3:	add    al,0x83
  418ee5:	rol    DWORD PTR [esi+0x14],0x6
  418ee9:	push   0x61
  418eeb:	lods   eax,DWORD PTR ds:[esi]
  418eec:	(bad)  
  418eed:	cmp    edx,DWORD PTR [ecx-0x795f4012]
  418ef3:	add    DWORD PTR [eax],eax
  418ef5:	je     0x418ef7
  418ef7:	add    BYTE PTR [ecx-0x53],al
  418efa:	dec    edi
  418efb:	sahf   
  418efc:	sub    DWORD PTR [ecx],edx
  418efe:	call   0xfedb8ca3
  418f03:	loop   0x418e89
  418f05:	adc    al,0x6
  418f07:	push   0x29
  418f09:	lods   eax,DWORD PTR ds:[esi]
  418f0a:	push   ebx
  418f0c:	pop    edx
  418f0d:	out    dx,al
  418f0e:	mov    edi,0x186a0
  418f13:	pop    esp
  418f14:	or     DWORD PTR [ebp+0x171664f],ebp
  418f1a:	call   0xfeda1cab
  418f1f:	push   0xffffffdc
  418f21:	fdiv   DWORD PTR [edi+eiz*8-0x39]
  418f25:	adc    eax,0xf71e9ec
  418f2a:	sub    ebp,DWORD PTR [ecx]
  418f2c:	(bad)  
  418f2e:	pop    es
  418f2f:	jmp    0x9a2ddccd
  418f34:	jecxz  0x418f53
  418f36:	or     BYTE PTR [ecx],dl
  418f38:	aam    0x31
  418f3a:	call   FWORD PTR [esi]
  418f3c:	(bad)  
  418f3d:	mov    al,ds:0x8bf29c1f
  418f42:	jl     0x418f41
  418f44:	inc    ebp
  418f45:	push   ds
  418f46:	push   es
  418f47:	add    ch,dh
  418f49:	int3   
  418f4a:	mov    edx,0x458d0cd6
  418f50:	dec    edx
  418f51:	cmp    al,0xff
  418f53:	jne    0x418f3b
  418f55:	je     0x418fc8
  418f57:	pop    ecx
  418f58:	test   eax,0xf8816c
  418f5d:	add    BYTE PTR [esi-0xe],cl
  418f60:	add    eax,0xfe591b83
  418f65:	je     0x418f07
  418f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f68:	mov    esi,0x5ecc9
  418f6d:	lea    esp,[ebx+0x59]
  418f70:	dec    esi
  418f71:	push   0x3e
  418f73:	ins    BYTE PTR es:[edi],dx
  418f74:	jae    0x418f7e
  418f76:	xchg   ah,ch
  418f78:	pop    eax
  418f79:	jmp    FWORD PTR [ecx+0x3eec437a]
  418f7f:	ins    BYTE PTR es:[edi],dx
  418f80:	jae    0x418f8a
  418f82:	(bad)  
  418f83:	pop    esp
  418f84:	push   esi
  418f85:	(bad)  
  418f86:	mov    ecx,0x5c01f690
  418f8b:	pop    es
  418f8c:	cmp    eax,0x6d
  418f8f:	repz add eax,0xfe685b83
  418f95:	je     0x418ff7
  418f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f98:	mov    esi,0x56cc9
  418f9d:	mov    ds:0x40e216,eax
  418fa2:	stos   DWORD PTR es:[edi],eax
  418fa3:	inc    edx
  418fa4:	in     al,dx
  418fa5:	push   eax
  418fa6:	add    al,0xa4
  418fa8:	std    
  418fa9:	jne    0x418fc1
  418fab:	fs dec eax
  418fad:	pop    ecx
  418fae:	pop    ecx
  418faf:	ins    BYTE PTR es:[edi],dx
  418fb0:	lds    dx,DWORD PTR [ecx-0x1c72ffb3]
  418fb7:	addr16 dec esi
  418fb9:	push   0xffffffef
  418fbb:	push   0x73
  418fbd:	or     al,0x59
  418fbf:	repnz pop es
  418fc1:	call   0x8e888fc6
  418fc6:	cwde   
  418fc7:	(bad)  
  418fc8:	call   0x474955b5
  418fcd:	jne    0x418f5c
  418fcf:	jmp    0x418f95
  418fd1:	in     eax,dx
  418fd2:	lahf   
  418fd3:	mov    WORD PTR [edx+0x5ee8329e],cs
  418fd9:	jge    0x418f7c
  418fdb:	inc    al
  418fdd:	xor    al,0xa0
  418fdf:	(bad)  
  418fe0:	xor    ah,BYTE PTR [esi-0x40e7b156]
  418fe6:	mov    eax,ds:0x133d870a
  418feb:	call   FWORD PTR [edx]
  418fed:	call   0xfddd:0xb99b74a1
  418ff4:	nop
  418ff5:	pop    esi
  418ff6:	or     eax,0xa1a212c0
  418ffb:	je     0x418f80
  418ffd:	jns    0x419021
  418fff:	push   ebp
  419000:	js     0x419078
  419002:	retf   
  419003:	rol    DWORD PTR [ebx-0x5e],0x37
  419007:	mov    ebx,DWORD PTR [ebx-0x7a]
  41900a:	pop    ss
  41900b:	or     al,0x6f
  41900d:	push   edx
  41900e:	and    al,0xff
  419010:	pop    eax
  419011:	call   0x1018:0x1f2473c2
  419018:	test   DWORD PTR [ecx+0x304060cc],0x6acf6833
  419022:	inc    edx
  419023:	add    BYTE PTR [eax],dh
  419025:	mov    dh,0xfa
  419027:	inc    BYTE PTR [eax]
  419029:	add    BYTE PTR [edx-0x6500cd64],dh
  41902f:	cwde   
  419030:	stos   BYTE PTR es:[edi],al
  419031:	in     eax,0xc7
  419033:	xlat   BYTE PTR ds:[ebx]
  419034:	mov    eax,ds:0xa17dd2e7
  419039:	(bad)  
  41903a:	(bad)  
  41903b:	loop   0x419033
  41903d:	call   FWORD PTR [ebx+0x60af7209]
  419043:	or     ecx,ebp
  419045:	mov    dl,0xb2
  419047:	and    DWORD PTR [edx+0xe098646],ebx
  41904d:	sbb    BYTE PTR [ebx+0x23],dl
  419050:	jecxz  0x418ff4
  419052:	push   ebx
  419053:	add    DWORD PTR [ecx],edx
  419055:	push   ebx
  419056:	rcl    DWORD PTR [esi+0x9472af5],1
  41905c:	(bad)  
  41905d:	pusha  
  41905e:	sub    BYTE PTR ds:0x9647432a,dl
  419064:	push   ebx
  419065:	adc    BYTE PTR ds:0x3f17d5f3,bl
  41906b:	mov    eax,ds:0x96a1a16f
  419070:	push   eax
  419071:	add    al,0x47
  419073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419074:	jle    0x4190a2
  419076:	adc    al,0x4a
  419078:	sub    BYTE PTR [eax+ecx*4],al
  41907b:	sbb    al,0xdd
  41907d:	sub    eax,0xc1b9663
  419082:	outs   dx,DWORD PTR ds:[esi]
  419083:	mov    ebx,DWORD PTR [ebp-0x16de8e5f]
  419089:	add    ebx,DWORD PTR [eax+0x57]
  41908c:	add    BYTE PTR [eax],ah
  41908e:	add    BYTE PTR [eax],al
  419090:	add    al,0x48
  419092:	jmp    0x13466437
  419097:	add    BYTE PTR [eax+0x1c],dl
  41909a:	loope  0x419047
  41909c:	fst    QWORD PTR [ebp+0x9a8a16d]
  4190a2:	jmp    0xda628b57
  4190a7:	inc    esp
  4190a8:	xchg   BYTE PTR [ecx],cl
  4190aa:	push   esi
  4190ab:	pop    ss
  4190ac:	cmp    esp,DWORD PTR [ebx]
  4190ae:	or     ah,BYTE PTR [ecx+0x3851019b]
  4190b4:	sbb    BYTE PTR [esi+0x9472c3d],dl
  4190ba:	add    BYTE PTR [esi-0x5b],al
  4190bd:	cs jl  0x41906a
  4190c0:	test   DWORD PTR [ecx],ecx
  4190c2:	call   FWORD PTR [eax+ecx*2+0x581e2323]
  4190c9:	add    eax,ebp
  4190cb:	aam    0xa7
  4190cd:	xchg   esi,eax
  4190ce:	(bad)  
  4190cf:	and    BYTE PTR [ecx],cl
  4190d1:	push   cs
  4190d2:	add    BYTE PTR [ebx+ecx*8-0x58da7d5f],bl
  4190d9:	pop    ds
  4190da:	add    BYTE PTR [ebx-0x1e8b690e],al
  4190e0:	in     al,dx
  4190e1:	inc    ebx
  4190e2:	pop    edx
  4190e3:	out    0xe7,al
  4190e5:	add    BYTE PTR [ebp+ebx*8+0x5c],0xfd
  4190ea:	inc    ebx
  4190eb:	sub    BYTE PTR [ebx-0x6a],al
  4190ee:	je     0x4190d1
  4190f0:	in     al,dx
  4190f1:	inc    esp
  4190f2:	inc    esi
  4190f4:	add    BYTE PTR [eax],al
  4190f6:	out    0x96,eax
  4190f8:	je     0x4190b7
  4190fa:	out    0x1c,eax
  4190fc:	or     cl,al
  4190fe:	sub    eax,0x8daeff33
  419103:	mov    DWORD PTR [ebx],0xeb8231e9
  419109:	push   0xffffff88
  41910b:	xchg   ecx,eax
  41910c:	imul   ebp,ecx,0x14feda1a
  419112:	push   ebx
  419113:	mov    eax,ds:0x96a6231c
  419118:	mov    BYTE PTR [edi+eiz*4],ah
  41911b:	sub    eax,0x9042d23
  419120:	push   esp
  419122:	dec    esp
  419123:	mov    eax,ds:0x93e7661b
  419128:	(bad)  
  419129:	aam    0xd0
  41912b:	xchg   ebx,eax
  41912c:	je     0x41910f
  41912e:	fmul   QWORD PTR [edx+ebx*2+0x4e]
  419132:	out    0xc1,eax
  419134:	rol    DWORD PTR [eax],0x2a
  419137:	or     DWORD PTR [ebp-0x75],edx
  41913a:	or     BYTE PTR [ebp+0x904f8c2],0x6a
  419141:	xor    al,0x31
  419143:	sti    
  419144:	pop    es
  419145:	call   0x40609c
  41914a:	ja     0x419197
  41914c:	cld    
  41914d:	push   0x414d03
  419152:	push   ecx
  419153:	sti    
  419154:	pop    es
  419155:	call   0x3efb8f
  41915a:	add    BYTE PTR [eax],al
  41915c:	mov    ah,0x8
  41915e:	push   0x479a4d
  419163:	push   0x414cf7
  419168:	mov    eax,ds:0x5f290db2
  41916d:	or     eax,0x7471a5e8
  419172:	std    
  419173:	or     ebp,esi
  419175:	icebp  
  419176:	mov    DWORD PTR ds:[ebx+0x75],ebp
  41917a:	data16 mov ah,al
  41917d:	dec    ebp
  41917e:	add    BYTE PTR [eax-0x62],ch
  419181:	or     bh,ch
  419183:	mov    esi,0x4142f806
  419188:	outs   dx,BYTE PTR ds:[esi]
  419189:	jae    0x4191fe
  41918b:	clc    
  41918c:	shl    edx,1
  41918e:	pop    es
  41918f:	call   0x408582
  419194:	inc    esi
  419195:	test   DWORD PTR [eax-0x1f91c0],edi
  41919b:	inc    ecx
  41919d:	xor    esp,DWORD PTR [edi+0x7c]
  4191a0:	sbb    eax,0x3bff004e
  4191a5:	jo     0x4191a4
  4191a7:	jne    0x4191df
  4191a9:	pusha  
  4191aa:	je     0x41922b
  4191ac:	xchg   ecx,eax
  4191ad:	je     0x4191ac
  4191af:	jne    0x4191f8
  4191b1:	cmp    ch,BYTE PTR [ecx+ecx*2-0x160bc7d]
  4191b8:	xchg   edx,eax
  4191b9:	dec    esi
  4191ba:	lahf   
  4191bb:	je     0x4191fc
  4191bd:	cmp    ah,BYTE PTR [ecx+0x58]
  4191c0:	add    BYTE PTR [eax],al
  4191c2:	or     bl,bl
  4191c4:	int3   
  4191c5:	ror    DWORD PTR [ebx-0x5e],0x37
  4191c9:	mov    ebp,ebx
  4191cb:	push   ds
  4191cc:	enter  0x5dfb,0xa2
  4191d0:	sub    BYTE PTR ds:0xe80a74e8,dh
  4191d6:	pop    cx
  4191d8:	popf   
  4191d9:	dec    dh
  4191db:	fs sahf 
  4191dd:	outs   dx,BYTE PTR ds:[si]
  4191df:	outs   dx,BYTE PTR ds:[esi]
  4191e0:	inc    ebx
  4191e1:	add    al,cl
  4191e3:	adc    al,0xb
  4191e5:	call   0xfedf3611
  4191ea:	mov    eax,0x3afea034
  4191ef:	call   0xc89d:0xbb0e8baa
  4191f6:	test   DWORD PTR [ebp-0x4233aafe],ebp
  4191fc:	add    ebx,0x6a043793
  419202:	push   ecx
  419203:	pop    ebx
  419204:	pop    ss
  419205:	or     BYTE PTR [edi-0x6f],ch
  419208:	cmp    edi,edi
  41920a:	js     0x419224
  41920c:	dec    eax
  41920d:	cld    
  41920e:	(bad)  
  419210:	inc    edi
  419211:	inc    ecx
  419212:	inc    edi
  419213:	jnp    0x41922c
  419215:	or     BYTE PTR [edi+0x52],ch
  419218:	pushf  
  419219:	(bad)  
  41921a:	pop    eax
  41921b:	mov    dl,BYTE PTR [edi]
  41921d:	cld    
  41921e:	push   eax
  41921f:	pushf  
  419220:	or     ch,al
  419222:	in     al,dx
  419223:	clc    
  419224:	sahf   
  419225:	inc    BYTE PTR [eax]
  419227:	add    BYTE PTR [esi],cl
  419229:	pop    edi
  41922a:	push   es
  41922b:	add    BYTE PTR [edx-0x3a508df7],dl
  419231:	int    0x5c
  419233:	sub    DWORD PTR [edi+0x1f],eax
  419236:	push   ds
  419237:	lahf   
  419238:	fwait
  419239:	add    DWORD PTR [ecx-0x62],eax
  41923c:	jo     0x4191d0
  41923e:	inc    ebp
  41923f:	mov    WORD PTR [ebx-0x7cd02f6b],cs
  419245:	dec    eax
  419246:	jmp    0x41430de9
  41924b:	popf   
  41924c:	sti    
  41924d:	xchg   edx,eax
  41924e:	and    eax,0x1d957b9e
  419253:	sbb    BYTE PTR [edi],bh
  419255:	mov    eax,ds:0x92e03cc2
  41925a:	pop    ds
  41925b:	rol    DWORD PTR [ecx+ecx*1-0x64],0x8a
  419260:	fadd   QWORD PTR [esi+0x95e9f24]
  419266:	sbb    ebx,0xffffffc1
  419269:	sbb    al,0xe1
  41926b:	stos   DWORD PTR es:[edi],eax
  41926c:	mov    dh,BYTE PTR [ecx]
  41926e:	out    0x9d,al
  419270:	mov    edi,0x332cdd4c
  419275:	dec    ebp
  419276:	sub    BYTE PTR [eax+eiz*4],al
  419279:	sbb    al,0xe1
  41927b:	stos   DWORD PTR es:[edi],eax
  41927c:	mov    edx,DWORD PTR [ebp+eax*8-0x42e36e63]
  419283:	popf   
  419284:	adc    eax,DWORD PTR [ecx]
  419286:	rcr    DWORD PTR [ebx-0x34526de8],0x0
  41928d:	add    BYTE PTR [esi-0x43c916f3],al
  419293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419294:	popf   
  419295:	pop    ss
  419296:	cmp    esp,DWORD PTR [ecx-0x6d9fc2af]
  41929c:	loope  0x419261
  41929e:	aam    0xf3
  4192a0:	adc    BYTE PTR [ebp+0x33e94804],al
  4192a6:	pop    edi
  4192a7:	cmp    DWORD PTR [eax],eax
  4192a9:	push   ss
  4192aa:	loop   0x41923e
  4192ac:	dec    edi
  4192ad:	outs   dx,BYTE PTR ds:[esi]
  4192ae:	push   eax
  4192af:	stc    
  4192b0:	dec    edi
  4192b1:	pop    ax
  4192b3:	add    eax,ebp
  4192b5:	push   esi
  4192b6:	icebp  
  4192b7:	xchg   edx,eax
  4192b8:	inc    BYTE PTR [ecx-0x72]
  4192bb:	dec    DWORD PTR cs:[esi+0xc]
  4192bf:	enter  0xe90b,0x59
  4192c3:	jle    0x4192b0
  4192c5:	push   0xffffffff
  4192c7:	cdq    
  4192c8:	push   esi
  4192c9:	ret    
  4192ca:	inc    esp
  4192cb:	pop    ds
  4192cc:	cmp    DWORD PTR [esi],ebp
  4192ce:	push   eax
  4192cf:	add    eax,ebp
  4192d1:	xchg   ebp,eax
  4192d2:	sub    al,0x92
  4192d4:	(bad)  
  4192d5:	jo     0x419257
  4192d7:	xchg   ebp,eax
  4192d8:	mov    dl,ah
  4192da:	in     al,dx
  4192db:	jmp    0xd3067c20
  4192e0:	(bad)  
  4192e1:	jl     0x419313
  4192e3:	and    DWORD PTR [esi-0x5b],edi
  4192e6:	test   DWORD PTR [ecx],ecx
  4192e8:	push   edi
  4192e9:	add    DWORD PTR [edx],ebx
  4192eb:	in     eax,0xff
  4192ed:	call   0x46b55c41
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	jp     0x419297
  4192f6:	fld    DWORD PTR [ebp-0x36]
  4192f9:	xchg   edx,eax
  4192fa:	or     ch,BYTE PTR [ecx+0x24893c38]
  419300:	mov    ebx,0x5ec17492
  419305:	out    dx,eax
  419306:	(bad)  
  419307:	xor    al,0x3b
  419309:	mov    eax,ds:0x92e3b685
  41930e:	(bad)  
  41930f:	xor    al,0xdb
  419311:	pop    ds
  419312:	sbb    al,0xa6
  419314:	pop    ecx
  419315:	add    eax,ebp
  419317:	and    dl,cl
  419319:	xchg   edx,eax
  41931a:	(bad)  
  41931b:	xchg   esi,eax
  41931c:	cmp    DWORD PTR [ecx+0x1cbbca69],edx
  419322:	or     BYTE PTR [eax],al
  419324:	mov    dh,0xe1
  419326:	(bad)  
  419327:	dec    ecx
  419329:	fst    QWORD PTR [eax-0xfa90bc]
  41932f:	jne    0x4192e7
  419331:	fs jae 0x419392
  419334:	test   eax,0x12c0096d
  419339:	fwait
  41933a:	dec    esi
  41933b:	inc    DWORD PTR [ebx]
  41933d:	jne    0x41938d
  41933f:	push   ebx
  419341:	add    al,0xe8
  419343:	ins    BYTE PTR es:[edi],dx
  419344:	xor    BYTE PTR [ebp-0x3],ch
  419347:	call   0x4065aa
  41934c:	cmp    edi,esi
  41934e:	imul   eax
  419350:	jbe    0x419324
  419352:	(bad)  
  419353:	jmp    FWORD PTR [edx]
  419355:	mov    ecx,0xb9be
  41935a:	dec    ecx
  41935b:	ins    DWORD PTR es:[edi],dx
  41935c:	std    
  41935d:	(bad)  
  41935e:	cmp    al,0x1e
  419360:	aaa    
  419361:	pop    es
  419362:	mov    bl,0x88
  419364:	std    
  419365:	jne    0x4193b1
  419367:	ins    DWORD PTR es:[edi],dx
  419368:	jae    0x419372
  41936a:	ss (bad) 
  41936c:	push   esi
  41936d:	(bad)  
  41936e:	mov    ecx,0xa2c2c8d4
  419373:	or     al,0x55
  419375:	mov    ebx,DWORD PTR [edx-0x69f38c8c]
  41937b:	push   ebx
  41937c:	pop    esp
  41937d:	(bad)  
  41937e:	jns    0x419380
  419380:	shl    BYTE PTR [ebx+ebp*4-0x1c],0x9f
  419385:	inc    esp
  419386:	pop    edi
  419387:	add    eax,0xd34de850
  41938c:	(bad)  
  41938d:	call   FWORD PTR [esi+0x74]
  419390:	jae    0x4193a2
  419392:	pop    esi
  419393:	je     0x419408
  419395:	or     dh,dl
  419397:	(bad)  
  419398:	aam    0xff
  41939a:	leave  
  41939b:	pop    ebp
  41939c:	ins    BYTE PTR es:[edi],dx
  41939d:	pop    edx
  41939e:	inc    edi
  41939f:	ja     0x41933b
  4193a1:	enter  0xae85,0x2
  4193a5:	push   ebp
  4193a6:	mov    esp,0x4fc38676
  4193ab:	imul   DWORD PTR ds:0x995cad00
  4193b1:	je     0x419402
  4193b3:	mov    cl,BYTE PTR [edx-0x72d8cfaa]
  4193b9:	inc    esp
  4193ba:	sub    ebx,DWORD PTR [ebx]
  4193bc:	fldenv [edi]
  4193be:	add    BYTE PTR [eax],al
  4193c0:	outs   dx,DWORD PTR ds:[esi]
  4193c1:	popa   
  4193c2:	add    al,BYTE PTR [eax+0x590ea258]
  4193c8:	lahf   
  4193c9:	sub    eax,DWORD PTR [eax+0x41]
  4193cc:	inc    edi
  4193cd:	ja     0x419379
  4193cf:	fnstenv [ebx]
  4193d1:	mov    ds:0x56070b02,al
  4193d6:	(bad)  
  4193d7:	push   esi
  4193d8:	(bad)  
  4193da:	es (bad) 
  4193dc:	call   0x15b5567b
  4193e1:	sub    DWORD PTR [ecx-0x8],eax
  4193e4:	fdiv   DWORD PTR [edx+ebx*4+0x69]
  4193e8:	sub    eax,0xdf081107
  4193ed:	daa    
  4193ee:	fwait
  4193ef:	inc    al
  4193f1:	xchg   esi,eax
  4193f2:	psubb  mm5,QWORD PTR ds:0x3f7499be
  4193f9:	mov    edx,0xaea8ff1b
  4193fe:	cdq    
  4193ff:	je     0x4193a0
  419401:	dec    ebx
  419402:	out    0xfe,eax
  419404:	adc    ch,BYTE PTR [edx-0x396f9456]
  41940a:	cdq    
  41940b:	(bad)  
  41940c:	adc    cl,dl
  41940e:	stos   BYTE PTR es:[edi],al
  41940f:	std    
  419410:	push   ds
  419411:	push   edi
  419412:	cdq    
  419413:	sti    
  419414:	xor    al,0x62
  419416:	pop    ebx
  419417:	(bad)  
  419418:	jo     0x419422
  41941a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41941b:	call   0x67da:0x2e05e76
  419422:	xchg   ebp,eax
  419423:	adc    BYTE PTR [eax],al
  419425:	add    BYTE PTR [ebx-0x71],bl
  419428:	adc    ecx,DWORD PTR [edi+ebx*2]
  41942b:	sub    ebx,DWORD PTR [esi]
  41942d:	fwait
  41942e:	dec    ecx
  41942f:	das    
  419430:	mov    al,0xc5
  419432:	inc    esp
  419433:	or     DWORD PTR [edi+ecx*4],ebx
  419436:	sub    al,0x8b
  419438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419439:	xchg   edi,eax
  41943a:	cdq    
  41943b:	and    ebp,ecx
  41943d:	sub    eax,0xbd38e6c
  419442:	das    
  419443:	add    eax,0x81199abe
  419448:	mov    ds:0x10ccbd97,eax
  41944d:	in     al,dx
  41944e:	xchg   DWORD PTR [ecx],ecx
  419450:	imul   ebx,edx,0x2ba91b00
  419456:	lods   al,BYTE PTR ds:[esi]
  419457:	inc    ebp
  419458:	test   al,0x3
  41945a:	cwde   
  41945b:	mov    eax,ds:0x8ee8e7b8
  419460:	icebp  
  419461:	ret    
  419462:	push   esp
  419463:	jmp    0x9a0e:0x2a55abbd
  41946a:	cmp    eax,0x78fc7cc9
  41946f:	and    ecx,ebp
  419471:	add    esi,DWORD PTR [eax+0x450804f]
  419477:	dec    eax
  419478:	jmp    0xf15644b0
  41947d:	stos   DWORD PTR es:[edi],eax
  41947e:	daa    
  41947f:	pmaxub mm3,QWORD PTR [ecx-0x66d08358]
  419486:	cdq    
  419487:	lea    ebx,[ecx]
  419489:	les    eax,FWORD PTR [eax]
  41948b:	add    bh,cl
  41948d:	mov    es,ebp
  41948f:	cdq    
  419490:	mov    DWORD PTR [ebx+0x1449dc8e],ebx
  419496:	add    BYTE PTR [ecx-0x5103ea22],ch
  41949c:	inc    eax
  41949d:	add    eax,ebp
  41949f:	fwait
  4194a0:	xor    eax,0x8c3efe8e
  4194a5:	enter  0xe903,0x29
  4194a9:	sub    bl,0x6a
  4194ac:	xchg   DWORD PTR [esi-0x20de3b7e],esp
  4194b2:	inc    eax
  4194b3:	jmp    0xa045a8fc
  4194b8:	add    DWORD PTR [edx],eax
  4194ba:	add    BYTE PTR [ebx],al
  4194bc:	dec    ebx
  4194bd:	and    eax,DWORD PTR [eax]
  4194bf:	ror    edi,cl
  4194c1:	mov    ?,WORD PTR [ebp+ebp*8+0x72]
  4194c5:	or     DWORD PTR [edx-0x17],ebp
  4194c8:	in     al,dx
  4194c9:	jecxz  0x4194f5
  4194cb:	jmp    0x41861514
  4194d0:	scas   al,BYTE PTR es:[edi]
  4194d1:	adc    al,0xf8
  4194d3:	push   ecx
  4194d4:	xor    eax,0xcc36ff30
  4194d9:	inc    esp
  4194da:	cld    
  4194db:	cs inc eax
  4194dd:	xchg   ecx,eax
  4194de:	(bad)  
  4194df:	pushf  
  4194e0:	rcr    BYTE PTR [edi],1
  4194e2:	call   FWORD PTR [esi]
  4194e4:	push   eax
  4194e5:	std    
  4194e6:	imul   ebp,ecx,0xe5e8092a
  4194ec:	jecxz  0x41947b
  4194ee:	(bad)  
  4194ef:	je     0x4194f1
  4194f1:	add    BYTE PTR [eax],cl
  4194f3:	xchg   ebp,eax
  4194f4:	dec    edi
  4194f5:	xchg   ebx,eax
  4194f6:	inc    esp
  4194f7:	and    eax,DWORD PTR [eax]
  4194f9:	xor    DWORD PTR [edx+0x41ee001f],0xffffff8d
  419500:	(bad)  
  419501:	cld    
  419502:	popa   
  419503:	fild   WORD PTR [eax-0x17]
  419506:	and    DWORD PTR [esi+0xe],ecx
  419509:	popa   
  41950a:	int3   
  41950b:	(bad)  
  41950c:	(bad)  
  41950d:	jmp    0x135c9d5
  419512:	adc    eax,0xbe458b94
  419517:	fldcw  WORD PTR [ecx+0x0]
  41951a:	add    al,0x97
  41951c:	push   0x424f0600
  419521:	inc    ecx
  419522:	pop    esi
  419523:	jo     0x419598
  419525:	hlt    
  419526:	rcl    ebx,0xf
  419529:	test   DWORD PTR [esi+0x3bff5ef1],ebp
  41952f:	jne    0x419517
  419531:	stos   DWORD PTR es:[edi],eax
  419532:	cs jo  0x419532
  419535:	mov    DWORD PTR [ebx+0x5d],ebp
  419538:	or     eax,eax
  41953a:	cmp    al,BYTE PTR [ecx-0x1]
  41953d:	jne    0x419505
  41953f:	pusha  
  419540:	jmp    0x41959a
  419542:	mov    eax,ds:0x92458771
  419547:	jno    0x4195bc
  419549:	lock xchg BYTE PTR [esi],dh
  41954c:	push   ecx
  41954d:	inc    DWORD PTR [ecx-0x7e178c8f]
  419553:	sti    
  419554:	jmp    0x419555
  419556:	add    BYTE PTR [eax],al
  419558:	mov    ebx,0xdf2ce678
  41955d:	jno    0x41955c
  41955f:	or     ebx,DWORD PTR [esi]
  419561:	cld    
  419562:	sbb    ch,BYTE PTR [eax-0x22]
  419565:	or     bh,ch
  419567:	mov    esi,0xe807fb41
  41956c:	sti    
  41956d:	(bad)  
  41956f:	inc    DWORD PTR [ecx-0x5]
  419572:	out    0xff,eax
  419574:	dec    ebx
  419575:	fs std 
  419577:	jne    0x41952f
  419579:	pusha  
  41957a:	pop    ebx
  41957b:	push   ebp
  41957c:	mov    cl,0x74
  41957e:	std    
  41957f:	jne    0x419533
  419581:	pop    edi
  419582:	xchg   esp,eax
  419583:	pop    eax
  419584:	mov    eax,ds:0x7e75fd74
  419589:	pop    ebp
  41958a:	stc    
  41958b:	dec    edi
  41958c:	inc    edi
  41958d:	mov    bl,0x96
  41958f:	mov    bh,dl
  419591:	mov    ch,0x8a
  419593:	adc    DWORD PTR [eax+0x15fe8fcd],ecx
  419599:	call   0x581a:0xca7b7495
  4195a0:	jo     0x4195fd
  4195a2:	int3   
  4195a3:	sar    DWORD PTR [ebx],0xa2
  4195a6:	das    
  4195a7:	mov    esi,DWORD PTR [ebx+0x6b]
  4195aa:	adc    BYTE PTR [edi+ebp*2],cl
  4195ad:	aaa    
  4195ae:	cmp    bh,bh
  4195b0:	push   eax
  4195b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195b2:	ret    0x1e73
  4195b5:	cli    
  4195b6:	push   esi
  4195b7:	inc    ebx
  4195b8:	xchg   BYTE PTR [edx+0xe832],ah
  4195be:	xchg   edi,eax
  4195bf:	not    BYTE PTR [esi+0x450a97fe]
  4195c5:	mov    edi,0x2aa287
  4195ca:	inc    edi
  4195cb:	cmp    edx,DWORD PTR [esi+0x67]
  4195ce:	repnz pop ebp
  4195d0:	inc    ebx
  4195d1:	add    BYTE PTR [edi+0x3b],dh
  4195d4:	adc    DWORD PTR [eax],ecx
  4195d6:	pop    ds
  4195d7:	mov    edx,0x3a00ff19
  4195dc:	xlat   BYTE PTR ds:[ebx]
  4195dd:	push   edi
  4195de:	clc    
  4195df:	rcl    BYTE PTR [esi+0x7e4a4374],cl
  4195e5:	pop    ebx
  4195e6:	call   0x5c01a0cd
  4195eb:	mov    ecx,0x6183c62a
  4195f0:	add    dl,BYTE PTR [eax-0x21]
  4195f3:	xchg   esi,eax
  4195f4:	ss dec eax
  4195f7:	jno    0x419623
  4195f9:	inc    ecx
  4195fa:	add    BYTE PTR [edx+0x2],ah
  4195fd:	push   0xbda5a247
  419602:	pop    ds
  419603:	cmc    
  419604:	aas    
  419605:	inc    ecx
  419606:	inc    edi
  419607:	or     DWORD PTR [ecx],edi
  419609:	xchg   edi,eax
  41960a:	sbb    eax,DWORD PTR [ecx]
  41960c:	rcl    edx,1
  41960e:	sbb    eax,0x3eabd58c
  419613:	xor    esi,ecx
  419615:	xchg   esi,eax
  419616:	jg     0x4195de
  419618:	lock add ebx,DWORD PTR [edx]
  41961b:	or     ah,0x82
  41961e:	test   BYTE PTR [edx+eax*2-0x22fffffc],cl
  419625:	int3   
  419626:	lods   eax,DWORD PTR ds:[esi]
  419627:	adc    BYTE PTR [edi],bh
  419629:	mov    eax,ds:0x8b6030d4
  41962e:	outs   dx,DWORD PTR ds:[esi]
  41962f:	inc    eax
  419630:	pop    ebx
  419631:	push   ds
  419632:	repz xchg esi,eax
  419634:	fild   DWORD PTR [eax]
  419636:	adc    DWORD PTR [ebx],0x29858b48
  41963c:	fs mov dh,bl
  41963f:	or     ebp,DWORD PTR [edi]
  419641:	and    al,0x76
  419643:	xchg   esi,eax
  419644:	xor    DWORD PTR [eax],esp
  419646:	int    0x96
  419648:	mov    bl,0x1
  41964a:	push   ecx
  41964b:	aaa    
  41964c:	and    BYTE PTR [ebx-0x726c69a3],cl
  419652:	push   ebp
  419653:	adc    BYTE PTR [edi],bh
  419655:	mov    eax,ds:0x8b0830a6
  41965a:	das    
  41965b:	rol    DWORD PTR [ecx+ecx*1-0x6c],0x8a
  419660:	in     al,dx
  419661:	mov    bh,BYTE PTR [ebx-0x72fe20f9]
  419667:	xchg   esi,eax
  419668:	jmp    0x2b50bf6b
  41966d:	and    DWORD PTR ds:0xb909863f,ecx
  419673:	stos   DWORD PTR es:[edi],eax
  419674:	mov    bl,0x2e
  419676:	push   cs
  419677:	xchg   esi,eax
  419678:	js     0x41969b
  41967a:	jmp    0x908d4682
  41967f:	xchg   esi,eax
  419680:	add    al,0x48
  419682:	add    cl,ch
  419684:	je     0x419610
  419686:	je     0x419669
  419688:	add    BYTE PTR [eax],al
  41968a:	fsub   QWORD PTR ds:0xa2bae67c
  419690:	nop
  419691:	ss mov dl,0x8b
  419694:	enter  0x43ab,0x9
  419698:	push   ebp
  419699:	(bad)  
  41969a:	fild   WORD PTR [edi+0x92dc5c3]
  4196a0:	push   0xfffffffc
  4196a2:	rcl    DWORD PTR ds:0x3616c108,cl
  4196a8:	jmp    FWORD PTR [esi+0x13fc45bc]
  4196ae:	pop    ebp
  4196af:	mov    esi,DWORD PTR [ecx+esi*8-0x54]
  4196b3:	pusha  
  4196b4:	(bad)  
  4196b5:	xchg   esi,eax
  4196b6:	mov    edx,0x388e2320
  4196bb:	add    eax,ebp
  4196bd:	dec    ecx
  4196be:	fimul  DWORD PTR [edx-0x74c0ec02]
  4196c4:	je     0x4196a7
  4196c6:	fdiv   QWORD PTR [ebx-0x2]
  4196c9:	outs   dx,BYTE PTR ds:[esi]
  4196ca:	ror    BYTE PTR [edx+0x14ba6574],cl
  4196d0:	or     BYTE PTR [ecx+0x0],dl
  4196d3:	call   DWORD PTR ss:[esi-0x4]
  4196d7:	mov    DWORD PTR [ebx],0xeb7e59e9
  4196dd:	push   0x7
  4196df:	xchg   edx,eax
  4196e0:	push   esi
  4196e1:	rol    DWORD PTR [edi+ebx*1+0x3e],cl
  4196e5:	ss inc eax
  4196e7:	add    eax,ebp
  4196e9:	mov    ecx,0x70fe8a18
  4196ee:	add    BYTE PTR [eax],al
  4196f0:	and    BYTE PTR [ebp-0x1e132376],cl
  4196f6:	inc    eax
  4196f7:	jmp    0x954161c0
  4196fc:	or     esp,DWORD PTR [ecx]
  4196fe:	pop    es
  4196ff:	add    bl,dh
  419701:	inc    esi
  419702:	add    BYTE PTR [edi+0x56],dl
  419705:	xor    BYTE PTR [eax],ch
  419707:	add    BYTE PTR [esi-0x7b8b4000],bl
  41970d:	fsubr  st(7),st
  41970f:	fimul  WORD PTR [esi]
  419711:	je     0x419710
  419713:	or     ebp,esi
  419715:	stc    
  419716:	pop    ds
  419717:	mov    DWORD PTR [ebx+0x6d],esp
  41971a:	data16 add BYTE PTR [esi-0x6197439c],bl
  419721:	retf   0x40
  419724:	mov    ecx,0x33fff7fa
  419729:	std    
  41972a:	out    0xc8,eax
  41972c:	xor    eax,0x43fffd74
  419731:	ins    DWORD PTR es:[edi],dx
  419732:	out    0xf1,al
  419734:	adc    BYTE PTR [ebp+edi*8-0x4],dh
  419738:	ins    DWORD PTR es:[edi],dx
  419739:	lds    esi,FWORD PTR [edi-0x28b4601]
  41973f:	repnz cwde 
  419741:	fs add eax,0x739d8775
  419747:	cld    
  419748:	mov    ecx,0x50e80817
  41974d:	cmp    edi,edi
  41974f:	dec    DWORD PTR [ecx]
  419751:	push   esp
  419752:	rol    BYTE PTR [eax+eax*1],0x0
  419756:	cmp    BYTE PTR cs:[ebx-0x1d376214],cl
  41975d:	push   edi
  41975e:	add    al,0xd
  419760:	push   0x3f
  419762:	mov    DWORD PTR [edi],edx
  419764:	or     al,ch
  419766:	xchg   BYTE PTR [ecx],bh
  419768:	(bad)  
  419769:	jmp    DWORD PTR [edi+0x47]
  41976c:	cld    
  41976d:	mov    ebx,ebx
  41976f:	je     0x419797
  419771:	inc    ecx
  419772:	out    dx,al
  419773:	mov    WORD PTR ds:0x6845b200,?
  419779:	adc    eax,0x41b547
  41977e:	jo     0x41978a
  419780:	inc    eax
  419781:	sub    DWORD PTR [edi+0x72],eax
  419784:	pop    es
  419785:	shl    BYTE PTR [ebx],0x5c
  419788:	sub    ebp,eax
  41978a:	sub    DWORD PTR [edx+0x323cfe93],edx
  419790:	mov    esi,cr1
  419793:	xor    eax,0x7247678c
  419798:	mov    eax,ds:0x47801fbd
  41979d:	inc    ecx
  41979e:	inc    edi
  41979f:	push   edi
  4197a0:	sbb    al,bh
  4197a2:	add    BYTE PTR [ebp-0x4],0xe7
  4197a6:	pop    ss
  4197a7:	retf   
  4197a8:	xchg   edx,eax
  4197a9:	(bad)  
  4197aa:	jo     0x4197f1
  4197ac:	mov    edi,fs
  4197ae:	out    dx,al
  4197af:	pop    ds
  4197b0:	xchg   ebx,eax
  4197b1:	(bad)  
  4197b2:	arpl   WORD PTR [ebx-0x3e],sp
  4197b5:	mov    eax,0xfe92a758
  4197ba:	add    BYTE PTR [eax],al
  4197bc:	push   ebp
  4197bd:	ror    bl,1
  4197bf:	push   es
  4197c0:	rcr    al,cl
  4197c2:	sbb    eax,DWORD PTR [eax]
  4197c4:	inc    edi
  4197c5:	lahf   
  4197c6:	push   ecx
  4197c7:	addr16 pop ecx
  4197c9:	sub    eax,0x879f0045
  4197ce:	inc    edi
  4197cf:	inc    ecx
  4197d0:	inc    edi
  4197d1:	neg    DWORD PTR [eax]
  4197d3:	or     BYTE PTR [edi],ch
  4197d5:	pusha  
  4197d6:	or     eax,0x25c18ff
  4197db:	push   0x43b568
  4197e0:	lahf   
  4197e1:	les    eax,FWORD PTR [edi+0x41]
  4197e4:	inc    edi
  4197e5:	iret   
  4197e6:	fmul   DWORD PTR [esi]
  4197e8:	cs mov cl,0x2
  4197eb:	call   0xfed3318a
  4197f0:	mov    esi,0x47699eac
  4197f5:	or     DWORD PTR [ecx-0x17357c29],edx
  4197fb:	sbb    esi,DWORD PTR [ebp-0x32]
  4197fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ff:	add    ecx,eax
  419801:	cmp    eax,0x907dcde
  419806:	adc    edi,ecx
  419808:	pop    ds
  419809:	mov    ch,bh
  41980b:	jl     0x419818
  41980d:	jge    0x419791
  41980f:	add    ebx,DWORD PTR [edi]
  419811:	leave  
  419812:	mov    ds:0x3af14744,eax
  419817:	dec    ecx
  419818:	push   es
  419819:	or     esi,ebx
  41981b:	fadd   DWORD PTR [ecx+0x32]
  41981e:	sub    BYTE PTR [eax+eax*1],al
  419821:	add    BYTE PTR [edi-0x7e6ccfd7],bl
  419827:	xchg   ecx,eax
  419828:	sub    edx,DWORD PTR [ebx+ecx*8-0x20cc3b33]
  41982f:	shr    DWORD PTR [ebx],1
  419831:	inc    ebp
  419832:	inc    edi
  419833:	icebp  
  419834:	sbb    cl,BYTE PTR [ecx+0x6]
  419837:	or     DWORD PTR [esi+0x283249d8],esp
  41983d:	add    al,0x5f
  41983f:	or     eax,0x91499330
  419844:	and    ebx,DWORD PTR [ebp+eax*8-0x4cfc82fc]
  41984b:	shr    DWORD PTR [ecx+0x10],1
  41984e:	aaa    
  41984f:	or     bh,ch
  419851:	inc    ebp
  419852:	les    eax,FWORD PTR [edi*2-0x2eba64fd]
  419859:	add    al,0x47
  41985b:	jbe    0x4197fb
  41985d:	xchg   edx,eax
  41985e:	fwait
  41985f:	adc    DWORD PTR [ecx+0x37],eax
  419862:	jne    0x4197ea
  419864:	dec    ebp
  419865:	xchg   edx,eax
  419866:	jnp    0x4198e5
  419868:	inc    ebp
  419869:	sbb    BYTE PTR [edi+0x71],cl
  41986c:	xchg   ecx,eax
  41986d:	xor    eax,0x35ff86f0
  419872:	dec    edi
  419873:	jns    0x419873
  419875:	mov    ah,0xdc
  419877:	outs   dx,BYTE PTR ds:[esi]
  419878:	lahf   
  419879:	mov    ebx,0x94fe87b5
  41987e:	mov    al,0x87
  419880:	je     0x419863
  419882:	lods   al,BYTE PTR ds:[esi]
  419883:	popf   
  419884:	push   ecx
  419885:	push   cs
  419886:	add    BYTE PTR [eax],al
  419888:	aad    0x87
  41988a:	je     0x419899
  41988c:	aad    0xfd
  41988e:	out    0xfe,eax
  419890:	pop    eax
  419891:	adc    eax,ebp
  419893:	xchg   edx,eax
  419894:	jb     0x41981c
  419896:	(bad)  
  419897:	out    dx,al
  419898:	cmp    BYTE PTR [ebp-0x19],dh
  41989b:	jge    0x4198ed
  41989d:	xchg   dh,bh
  41989f:	fidivr WORD PTR [eax]
  4198a1:	jge    0x41988a
  4198a3:	gs push eax
  4198a5:	xchg   dh,bh
  4198a7:	into   
  4198a8:	pop    eax
  4198a9:	jns    0x419892
  4198ab:	ins    DWORD PTR es:[edi],dx
  4198ac:	xor    BYTE PTR [esi+0x7158befe],al
  4198b2:	out    0x35,eax
  4198b4:	xor    BYTE PTR [esi-0x7ac75102],al
  4198ba:	(bad)  
  4198bb:	sbb    al,0x5b
  4198bd:	outs   dx,BYTE PTR ds:[esi]
  4198be:	out    dx,al
  4198bf:	cmp    esi,DWORD PTR [esi-0x7e5fa179]
  4198c5:	or     al,BYTE PTR [eax]
  4198c7:	xor    al,0xc2
  4198c9:	jb     0x41984d
  4198cb:	lods   eax,DWORD PTR ds:[esi]
  4198cc:	xlat   BYTE PTR ds:[ebx]
  4198cd:	out    dx,eax
  4198ce:	call   DWORD PTR [edx]
  4198d0:	mov    eax,DWORD PTR [esi-0x68331e8c]
  4198d6:	push   ecx
  4198d7:	outs   dx,BYTE PTR ds:[esi]
  4198d8:	mov    dh,0x90
  4198da:	inc    esp
  4198db:	cmp    DWORD PTR gs:[ecx],ecx
  4198de:	push   0xffffffe9
  4198e0:	sub    al,0x8f
  4198e2:	inc    esp
  4198e3:	test   al,0x44
  4198e5:	icebp  
  4198e6:	(bad)  
  4198e7:	call   0x1292230
  4198ec:	add    BYTE PTR [eax],al
  4198ee:	mov    ds:0xf5ffff31,al
  4198f3:	dec    ecx
  4198f4:	jb     0x419919
  4198f6:	into   
  4198f7:	mov    eax,ds:0x98315f01
  4198fc:	or     eax,eax
  4198fe:	mov    edx,0xde684e72
  419903:	or     edi,ebp
  419905:	mov    esi,0x41438ac6
  41990a:	scas   al,BYTE PTR es:[edi]
  41990b:	cmp    edi,edi
  41990d:	jne    0x4198c5
  41990f:	mov    eax,ds:0x98b179ef
  419914:	out    0x1d,al
  419916:	retf   
  419917:	cwde   
  419918:	std    
  419919:	call   FWORD PTR [ebx]
  41991b:	xchg   esi,eax
  41991c:	std    
  41991d:	jne    0x4198b5
  41991f:	mov    eax,ds:0x9871528e
  419924:	mov    edx,0x8b55099a
  41992a:	ret    0xc28c
  41992d:	cld    
  41992e:	pop    ecx
  41992f:	daa    
  419930:	add    BYTE PTR [edx+0x1f],ch
  419933:	cwde   
  419934:	jae    0x41993e
  419936:	xchg   BYTE PTR [eax+edx*2-0x1],bl
  41993a:	mov    cl,0x2
  41993c:	inc    esp
  41993d:	cld    
  41993e:	aad    0x56
  419940:	sub    BYTE PTR es:[edi],bl
  419943:	or     eax,0x1d5e3f80
  419948:	inc    eax
  419949:	push   0x40cb8a
  41994e:	pop    ecx
  41994f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419950:	jl     0x419979
  419952:	add    BYTE PTR [eax],al
  419954:	push   ds
  419955:	or     DWORD PTR [ebx],ecx
  419957:	shr    BYTE PTR [edx],0x6e
  41995a:	push   ebp
  41995b:	call   0x40d3ef
  419960:	adc    eax,0xce197249
  419965:	and    BYTE PTR [eax],al
  419967:	add    BYTE PTR [edi-0x35],al
  41996a:	push   eax
  41996b:	lods   eax,DWORD PTR ds:[si]
  41996d:	lods   eax,DWORD PTR ds:[esi]
  41996e:	inc    ecx
  41996f:	add    BYTE PTR [edi-0x20f7ea35],dl
  419975:	repz or edi,edi
  419978:	call   0xe094e547
  41997d:	xor    ecx,DWORD PTR [edi-0x7015f8ce]
  419983:	(bad)  
  419984:	shl    BYTE PTR [ebx],1
  419986:	xchg   ebp,eax
  419987:	lods   eax,DWORD PTR ds:[esi]
  419988:	(bad)  
  41998a:	adc    eax,0x8e9dc0c0
  41998f:	(bad)  
  419990:	xor    bh,BYTE PTR [edx-0x66]
  419993:	pop    ds
  419994:	adc    eax,0x7e5e8e83
  419999:	xor    BYTE PTR [edi],al
  41999b:	add    dl,bh
  41999d:	out    0x9e,al
  41999f:	add    BYTE PTR [ebx+0x476a366e],0xd8
  4199a6:	inc    ecx
  4199a7:	call   DWORD PTR [edx]
  4199a9:	push   0xffffff9a
  4199ab:	rcl    DWORD PTR [esi],0x53
  4199ae:	mov    cs,WORD PTR [eax+0x3c7a4e02]
  4199b4:	pop    ds
  4199b5:	sbb    al,BYTE PTR [ebp+0x0]
  4199b8:	add    BYTE PTR [eax],al
  4199ba:	(bad)  
  4199bb:	jnp    0x4199bf
  4199bd:	je     0x4199c6
  4199bf:	retf   0x4449
  4199c2:	push   es
  4199c3:	jb     0x4199fa
  4199c5:	call   0x43e50c
  4199ca:	cmp    al,0xb2
  4199cc:	pop    ss
  4199cd:	and    ebx,DWORD PTR [eax+0x385dd38a]
  4199d3:	mov    edi,edx
  4199d5:	mov    edi,0x683269bb
  4199da:	inc    edi
  4199db:	jb     0x41997a
  4199dd:	mov    ebp,0x4148b1af
  4199e2:	inc    edi
  4199e3:	or     DWORD PTR [ecx+0x51119b8e],edi
  4199e9:	out    dx,al
  4199ea:	pop    DWORD PTR [ebp+edx*2+0x4ddd8e9c]
  4199f1:	(bad)  
  4199f2:	cld    
  4199f3:	aaa    
  4199f4:	sub    DWORD PTR [ebp-0xf],ecx
  4199f7:	cmp    DWORD PTR ds:0xf0b2f68f,0x6
  4199fe:	pop    edx
  4199ff:	dec    ecx
  419a00:	ret    0xe0e2
  419a03:	mov    eax,es
  419a05:	mov    ss,ecx
  419a07:	movaps XMMWORD PTR [eax],xmm3
  419a0a:	and    esi,ecx
  419a0c:	and    DWORD PTR [ecx+0x6],ecx
  419a0f:	or     DWORD PTR [ecx+0x5e15f9b],edi
  419a15:	pop    DWORD PTR [eax]
  419a17:	icebp  
  419a18:	call   0x81043220
  419a1d:	les    eax,FWORD PTR [eax]
  419a1f:	add    BYTE PTR [ebx],cl
  419a21:	retf   0x33e8
  419a24:	cwde   
  419a25:	std    
  419a26:	lock fwait
  419a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a29:	add    dh,bl
  419a2b:	mov    fs,WORD PTR [eax-0x7e70c2eb]
  419a31:	out    dx,al
  419a32:	or     DWORD PTR [ebx+edx*1+0x3d8ec5e1],ebx
  419a39:	dec    ecx
  419a3a:	xor    al,0xe8
  419a3c:	loopne 0x419a95
  419a3e:	sub    eax,DWORD PTR [ebp+0x47]
  419a41:	fld    st(0)
  419a43:	cdq    
  419a44:	icebp  
  419a45:	and    DWORD PTR [ebp-0x16f720cd],0xffffff9e
  419a4c:	mov    dh,al
  419a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a4f:	dec    eax
  419a50:	xchg   BYTE PTR [ecx],cl
  419a52:	cmp    DWORD PTR [edi+0x519111b3],ecx
  419a58:	mov    eax,0xa9b7d82
  419a5d:	xlat   BYTE PTR ds:[ebx]
  419a5e:	push   DWORD PTR [ebp-0x2f]
  419a61:	xor    DWORD PTR [ebp+ebp*2-0x37],0xfffffffd
  419a66:	pop    es
  419a67:	push   ecx
  419a68:	pop    ebx
  419a69:	fdivr  st,st(6)
  419a6b:	pop    esi
  419a6c:	pop    ecx
  419a6d:	push   eax
  419a6e:	shr    ebp,0x44
  419a71:	fmul   QWORD PTR [edx-0x10b93ac3]
  419a77:	je     0x419af8
  419a79:	jns    0x419aca
  419a7b:	ds dec edi
  419a7d:	adc    eax,0x82339ee8
  419a82:	(bad)  
  419a83:	loop   0x419a85
  419a85:	add    BYTE PTR [edi+esi*8],al
  419a88:	xor    DWORD PTR [edx+0x37],ebp
  419a8b:	test   DWORD PTR [ecx],eax
  419a8d:	xchg   edi,eax
  419a8e:	in     eax,0x8f
  419a90:	inc    esp
  419a91:	adc    DWORD PTR [edx-0x78],ebp
  419a94:	aaa    
  419a95:	mov    ebp,0x618fda6
  419a9a:	dec    edi
  419a9b:	sbb    edi,edi
  419a9d:	je     0x419a4b
  419a9f:	push   0x25
  419aa1:	cdq    
  419aa2:	rol    DWORD PTR [ebx-0x7c378b02],1
  419aa8:	je     0x419a8b
  419aaa:	ret    0x7fd
  419aad:	ror    DWORD PTR [ecx-0x27],1
  419ab0:	(bad)  
  419ab1:	(bad)  
  419ab2:	add    ch,cl
  419ab4:	out    dx,eax
  419ab5:	cmp    ebx,ebx
  419ab7:	mov    ebp,0x51c2c658
  419abc:	shr    ebp,0x44
  419abf:	fmul   QWORD PTR [edx-0x8b9393b]
  419ac5:	inc    ebx
  419ac6:	inc    ebx
  419ac7:	out    dx,eax
  419ac8:	inc    edx
  419ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aca:	cmp    BYTE PTR [ecx],dl
  419acc:	call   0xfec3ae22
  419ad1:	pusha  
  419ad2:	mov    BYTE PTR [ebp+0x95ee969],al
  419ad8:	push   0x40c9bf00
  419add:	add    BYTE PTR [esi+0x7],dl
  419ae0:	add    BYTE PTR [eax],al
  419ae2:	scas   al,BYTE PTR es:[edi]
  419ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae4:	jo     0x419b3c
  419ae6:	test   eax,0xc00994
  419aeb:	add    dl,dh
  419aed:	push   esp
  419aee:	xchg   DWORD PTR [ebp-0x5a],eax
  419af1:	and    eax,0x5af462d
  419af6:	push   DWORD PTR [ebp-0x6a]
  419af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419afa:	loopne 0x419b21
  419afc:	fiadd  WORD PTR ds:0x68b2c00b
  419b02:	std    
  419b03:	jne    0x419b1b
  419b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b06:	add    DWORD PTR [ebp+0x29],ebx
  419b09:	xchg   esp,eax
  419b0a:	dec    esi
  419b0b:	push   0x3e513c
  419b10:	mov    dh,0x5
  419b12:	add    bh,ch
  419b14:	sbb    BYTE PTR [edi],bl
  419b16:	add    BYTE PTR [eax+0x49],dl
  419b19:	sbb    cl,BYTE PTR [eax]
  419b1b:	call   0x40b716
  419b20:	push   esi
  419b21:	je     0x419b74
  419b23:	call   FWORD PTR [ecx+0x46f87394]
  419b29:	jl     0x419b7c
  419b2b:	jmp    FWORD PTR [ecx+0x69fc7394]
  419b31:	sbb    cl,BYTE PTR [eax]
  419b33:	call   0x40d11c
  419b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b39:	inc    edi
  419b3a:	add    al,BYTE PTR [eax]
  419b3c:	push   ebx
  419b3d:	add    bl,ch
  419b3f:	and    DWORD PTR [edx+0x4006891],0xffffffd1
  419b46:	(bad)  
  419b47:	jne    0x419baf
  419b49:	popf   
  419b4a:	sub    al,0x50
  419b4c:	test   eax,0x458794
  419b51:	add    BYTE PTR [edx+0x4700001d],ch
  419b57:	xchg   DWORD PTR [edi+eiz*2-0x79],ecx
  419b5b:	sub    BYTE PTR [ebx+0x0],al
  419b5e:	lahf   
  419b5f:	mov    ebp,0xff474144
  419b64:	adc    eax,0x14012f08
  419b69:	call   FWORD PTR [eax]
  419b6b:	lock adc eax,0xfa5e10fc
  419b71:	out    0x78,eax
  419b73:	ret    0xfe8b
  419b76:	push   cs
  419b77:	xor    eax,0xeb920007
  419b7c:	sahf   
  419b7d:	or     BYTE PTR [ebx],0xcb
  419b80:	sbb    al,BYTE PTR [eax]
  419b82:	inc    edi
  419b83:	iret   
  419b84:	dec    esp
  419b85:	(bad)  
  419b86:	pop    edx
  419b87:	push   0xffffff9a
  419b89:	inc    edx
  419b8a:	mov    BYTE PTR [edi],ch
  419b8c:	mov    esi,?
  419b8e:	pop    edx
  419b8f:	jbe    0x419b1c
  419b91:	je     0x419bd2
  419b93:	sbb    ch,BYTE PTR [ecx+0x4e]
  419b96:	rcl    BYTE PTR [edi],0x8c
  419b99:	je     0x419bf2
  419b9b:	movhps xmm1,QWORD PTR [eax]
  419b9e:	lahf   
  419b9f:	idiv   DWORD PTR [ebx]
  419ba1:	jmp    FWORD PTR [eax-0x5fe7eb81]
  419ba7:	std    
  419ba8:	idiv   dh
  419baa:	adc    ch,BYTE PTR [edx-0x66]
  419bad:	push   esp
  419bae:	add    BYTE PTR [edi-0x76],ah
  419bb1:	or     BYTE PTR [bx+si],ch
  419bb4:	inc    ebp
  419bb5:	add    BYTE PTR [eax],al
  419bb7:	add    BYTE PTR [eax+0x22e7f3dd],al
  419bbd:	add    eax,0xb23c0004
  419bc2:	adc    BYTE PTR [ebp-0x21],ah
  419bc5:	lock inc ecx
  419bc7:	inc    ecx
  419bc8:	inc    edi
  419bc9:	dec    edx
  419bca:	or     ah,BYTE PTR [ebx]
  419bcc:	inc    edi
  419bcd:	jb     0x419c4a
  419bcf:	inc    esp
  419bd0:	dec    edi
  419bd1:	or     DWORD PTR [ecx],edx
  419bd3:	test   DWORD PTR [edx],eax
  419bd5:	retf   0x8ae8
  419bd8:	mov    ebx,0x62038119
  419bdd:	or     ecx,ebp
  419bdf:	(bad)  
  419be0:	lock hlt 
  419be2:	out    dx,al
  419be3:	push   es
  419be4:	add    BYTE PTR [ecx-0x7fc8be91],0xfb
  419beb:	repz and BYTE PTR [esi-0x73ee74ff],bl
  419bf2:	pusha  
  419bf3:	mov    edx,DWORD PTR [ebp+esi*1-0xefcbe90]
  419bfa:	out    0x3,eax
  419bfc:	call   0x3f52e9bf
  419c01:	jno    0x419c36
  419c03:	cmp    ch,al
  419c05:	jg     0x419c44
  419c07:	adc    DWORD PTR [ebx-0x80],edx
  419c0a:	mov    ebx,0x9e24e0fb
  419c0f:	mov    dl,cl
  419c11:	jg     0x419bae
  419c13:	xchg   ecx,ecx
  419c15:	cmc    
  419c16:	lock fwait
  419c18:	stc    
  419c19:	into   
  419c1a:	adc    eax,0xb900008b
  419c1f:	cmc    
  419c20:	lock mov bh,BYTE PTR [ebx]
  419c23:	adc    eax,0x713f1106
  419c28:	sbb    eax,0x1f7fa03a
  419c2d:	(bad)  
  419c2e:	xor    al,0x9
  419c30:	xchg   esp,eax
  419c31:	jle    0x419bcf
  419c33:	mov    ebp,DWORD PTR [ebx+ecx*4-0x7ae4740e]
  419c3a:	xor    cl,dl
  419c3c:	call   0x6a3e8f44
  419c41:	enter  0x2ef3,0x28
  419c45:	add    al,0x47
  419c47:	cmc    
  419c48:	cmp    DWORD PTR [edi+0xff7a23],eax
  419c4e:	add    cl,BYTE PTR [ecx]
  419c50:	add    BYTE PTR ds:0xa5444831,dh
  419c56:	inc    esp
  419c57:	or     DWORD PTR [eax],eax
  419c59:	jmp    0xea396263
  419c5e:	inc    esp
  419c5f:	or     DWORD PTR [eax],eax
  419c61:	pop    esp
  419c62:	xchg   DWORD PTR [ebp+0x4f],edi
  419c65:	je     0x419bee
  419c67:	or     DWORD PTR [edi+0x13],0x2f49f14b
  419c6e:	or     BYTE PTR [ecx],0xff
  419c71:	aam    0x3f
  419c73:	das    
  419c74:	inc    ecx
  419c75:	jmp    0xaab55b83
  419c7a:	leave  
  419c7b:	std    
  419c7c:	imul   ecx
  419c7e:	dec    eax
  419c7f:	cmp    al,0x83
  419c81:	int3   
  419c82:	add    BYTE PTR [eax],al
  419c84:	enter  0x727e,0xfe
  419c88:	imul   esi,ebp,0xd4ee52fb
  419c8e:	mov    bh,bh
  419c90:	int    0xf4
  419c92:	pop    ss
  419c93:	cs ss sbb eax,0x7fcc9fff
  419c9a:	jne    0x419c75
  419c9c:	int    0xf5
  419c9e:	pop    es
  419c9f:	add    esi,ebp
  419ca1:	jl     0x419ca1
  419ca3:	push   cs
  419ca4:	pop    esi
  419ca5:	jle    0x419cf3
  419ca7:	add    ecx,eax
  419ca9:	inc    esp
  419caa:	add    ebp,DWORD PTR [edx+0x4f]
  419cad:	cmp    edi,0x3d8a477c
  419cb3:	jmp    0x5d3ff2ef
  419cb8:	mov    edi,0x9d68147f
  419cbd:	leave  
  419cbe:	push   DWORD PTR [esi]
  419cc0:	mov    esp,0x21e90348
  419cc5:	xchg   edx,eax
  419cc6:	jmp    0x419cc8
  419cc8:	fisttp QWORD PTR [eax-0xe]
  419ccb:	push   ebx
  419ccc:	test   eax,0x6e00f83e
  419cd1:	or     al,BYTE PTR [eax]
  419cd3:	(bad)  
  419cd4:	sub    ebx,DWORD PTR [ecx+0xa5efffe]
  419cda:	push   DWORD PTR [ebp+0x3e]
  419cdd:	add    DWORD PTR [esp+edi*8-0x1],eax
  419ce1:	adc    eax,0x1c1e6afc
  419ce6:	add    BYTE PTR [edx+0x0],ch
  419ce9:	add    BYTE PTR [esi],bl
  419ceb:	sbb    al,0x0
  419ced:	call   FWORD PTR [ebx]
  419cef:	xchg   ch,bh
  419cf1:	jne    0x419d15
  419cf3:	sbb    al,0x0
  419cf5:	push   0x1e
  419cf7:	mov    ds:0xa1e22ca,al
  419cfc:	or     eax,eax
  419cfe:	sbb    cl,BYTE PTR [edi+0x4e]
  419d01:	push   eax
  419d02:	xchg   BYTE PTR [edi],ah
  419d04:	push   ecx
  419d05:	inc    DWORD PTR [ecx-0x5807bbfe]
  419d0b:	sbb    eax,DWORD PTR [eax]
  419d0d:	push   0xffffffee
  419d0f:	cmp    bh,bh
  419d11:	jne    0x419d29
  419d13:	nop
  419d14:	jae    0x419d12
  419d16:	and    DWORD PTR [esi],ecx
  419d18:	or     al,0x6a
  419d1a:	ficomp WORD PTR [ebx]
  419d1c:	add    al,ch
  419d1e:	or     BYTE PTR [edi-0x2],ah
  419d21:	jmp    DWORD PTR [ebp+0x410f7349]
  419d27:	push   cs
  419d28:	clc    
  419d29:	call   0x40d7a8
  419d2e:	imul   edi,DWORD PTR [esi],0x9ae00f8
  419d34:	add    BYTE PTR [ebx+0x73fe9223],al
  419d3a:	push   eax
  419d3b:	nop
  419d3c:	jae    0x419d46
  419d3e:	mov    eax,ds:0x47e8f80e
  419d43:	mov    bl,ah
  419d45:	push   DWORD PTR [eax+0x6a]
  419d48:	ret    0x2873
  419d4b:	and    BYTE PTR [ecx+0x4f000074],cl
  419d51:	pop    eax
  419d52:	add    esp,DWORD PTR [edx]
  419d54:	inc    edi
  419d55:	jo     0x419d80
  419d57:	add    eax,DWORD PTR [esi+0x1deaaaea]
  419d5d:	lock retf 0xba0c
  419d61:	inc    esi
  419d62:	sar    bh,0x38
  419d65:	inc    eax
  419d66:	pushf  
  419d67:	in     eax,dx
  419d68:	data16 jb 0x419d6d
  419d6b:	or     eax,DWORD PTR [edi]
  419d6d:	jg     0x419d5c
  419d6f:	dec    edi
  419d70:	ja     0x419d0c
  419d72:	nop
  419d73:	dec    edi
  419d74:	sbb    ah,dh
  419d76:	jns    0x419dbc
  419d78:	sbb    ebx,DWORD PTR [edx]
  419d7a:	xor    edi,edi
  419d7c:	xchg   edx,eax
  419d7d:	fidiv  WORD PTR [ebx]
  419d7f:	call   0xfec95ee4
  419d84:	in     al,dx
  419d85:	ins    BYTE PTR es:[edi],dx
  419d86:	inc    edx
  419d87:	sub    BYTE PTR [edi],0x72
  419d8a:	or     eax,0x8abde8d1
  419d8f:	out    0x6,eax
  419d91:	mov    ds:0xadccfe87,eax
  419d96:	mov    ds,WORD PTR [edx-0x2]
  419d99:	xor    bh,dh
  419d9b:	push   DWORD PTR [ebx-0x9]
  419d9e:	xchg   esi,eax
  419d9f:	or     BYTE PTR [ebx-0x3ba8ceca],0x55
  419da6:	xchg   ecx,eax
  419da7:	daa    
  419da8:	push   es
  419da9:	jb     0x419dad
  419dab:	jne    0x419dee
  419dad:	mov    ds:0x6e85c928,eax
  419db2:	add    cl,BYTE PTR [ebp-0x7dfe0000]
  419db8:	xor    edi,edi
  419dba:	sbb    bl,BYTE PTR [esi-0x66]
  419dbd:	xor    cl,dh
  419dbf:	or     dh,ah
  419dc1:	xchg   DWORD PTR [ebp+0x49],ecx
  419dc4:	in     eax,dx
  419dc5:	jg     0x419df2
  419dc7:	or     ch,cl
  419dc9:	add    eax,esi
  419dcb:	dec    ah
  419dcd:	add    al,0x47
  419dcf:	sbb    ecx,ebp
  419dd1:	test   ch,0x14
  419dd4:	call   0x3bbde4dc
  419dd9:	mov    BYTE PTR [ecx-0xa],dl
  419ddc:	mov    al,0x9c
  419dde:	mov    edx,fs
  419de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de1:	xchg   DWORD PTR [ebp+0x49],ecx
  419de4:	in     eax,dx
  419de5:	add    BYTE PTR [edx+ecx*1-0x17],0x3
  419dea:	xor    dh,dh
  419dec:	mov    WORD PTR [edi+0x231081b3],es
  419df2:	mov    edx,ecx
  419df4:	call   0x75bc9394
  419df9:	xchg   DWORD PTR [edi-0x6c78833b],edi
  419dff:	jge    0x419e66
  419e01:	adc    edi,edi
  419e03:	lock mov ah,0x3d
  419e06:	xchg   BYTE PTR [ecx],cl
  419e08:	inc    ecx
  419e09:	(bad)  
  419e0a:	bnd jnp 0x419e5a
  419e0d:	jge    0x419d92
  419e0f:	jno    0x419e56
  419e11:	adc    ebx,esp
  419e13:	jnp    0x419dc8
  419e15:	mov    esp,DWORD PTR [eax-0x14]
  419e18:	scas   al,BYTE PTR es:[edi]
  419e19:	inc    esp
  419e1a:	add    BYTE PTR [eax],al
  419e1c:	inc    edi
  419e1d:	jno    0x419e9a
  419e1f:	xchg   cl,cl
  419e21:	jnp    0x419e92
  419e23:	inc    ecx
  419e24:	stos   DWORD PTR es:[edi],eax
  419e25:	xchg   DWORD PTR [ebx+0x6d0ab897],ebx
  419e2b:	pop    ebp
  419e2c:	mov    al,0x7b
  419e2e:	call   0xe8b2c9b5
  419e33:	test   ah,0x9b
  419e36:	call   0xffc9e53e
  419e3b:	jae    0x419ded
  419e3d:	jnp    0x419e4c
  419e3f:	gs push ss
  419e41:	jl     0x419e41
  419e43:	jmp    0xd2299311
  419e48:	jne    0x419e72
  419e4a:	add    cl,ch
  419e4c:	in     eax,dx
  419e4d:	hlt    
  419e4e:	out    0x62,eax
  419e50:	ret    0xc78e
  419e53:	cwde   
  419e54:	ret    
  419e55:	fsubr  st,st(2)
  419e57:	(bad)  
  419e59:	scas   al,BYTE PTR es:[edi]
  419e5a:	cmp    edi,ecx
  419e5c:	adc    DWORD PTR ss:[eax+esi*8],edi
  419e60:	cmp    DWORD PTR ds:0x6ddd92c,eax
  419e66:	sub    al,0x28
  419e68:	inc    edi
  419e69:	jo     0xa3ab304
  419e6f:	imul   eax,eax,0xc4ec7741
  419e75:	outs   dx,BYTE PTR ds:[esi]
  419e76:	das    
  419e77:	xchg   edx,eax
  419e78:	sbb    bh,bl
  419e7a:	jmp    0x419ea4
  419e7c:	retf   
  419e7d:	inc    esi
  419e7e:	or     DWORD PTR [ecx+0x6e40000],ebp
  419e84:	or     ch,BYTE PTR ds:0x300ad19e
  419e8a:	push   edi
  419e8b:	dec    ebx
  419e8c:	pop    eax
  419e8d:	pusha  
  419e8e:	das    
  419e8f:	pop    ebp
  419e90:	(bad)  
  419e91:	aam    0xcc
  419e93:	mov    eax,DWORD PTR [ecx+ecx*2-0x5f]
  419e97:	(bad)
  419e9a:	inc    esp
  419e9b:	or     DWORD PTR [eax],eax
  419e9d:	xchg   DWORD PTR fs:[ebp+0x4f],edx
  419ea1:	ret    
  419ea2:	inc    ebx
  419ea3:	out    dx,eax
  419ea4:	call   DWORD PTR [edx-0x6d0010bc]
  419eaa:	inc    esp
  419eab:	mov    WORD PTR [ebp+esi*1+0x74],es
  419eaf:	jp     0x419ec5
  419eb1:	sbb    BYTE PTR [ecx+ecx*8+0x4695ffff],cl
  419eb8:	jb     0x419edc
  419eba:	sub    eax,0x1200d811
  419ebf:	(bad)  
  419ec0:	std    
  419ec1:	jne    0x419ef5
  419ec3:	xor    DWORD PTR [ebx-0x28],0x69
  419ec7:	or     ah,ah
  419ec9:	call   DWORD PTR [ebx]
  419ecb:	mov    eax,ds:0x9e6675fd
  419ed0:	mov    ebx,0xfd8479fc
  419ed5:	jne    0x419e7d
  419ed7:	popf   
  419ed8:	xchg   esi,eax
  419ed9:	and    BYTE PTR [esi+0x6],ch
  419edc:	push   DWORD PTR [ebp-0x76]
  419edf:	popf   
  419ee0:	js     0x419f31
  419ee2:	cdq    
  419ee3:	test   ch,bh
  419ee5:	jne    0x419ee7
  419ee7:	add    dh,dl
  419ee9:	pushf  
  419eea:	jo     0x419f3b
  419eec:	fld    DWORD PTR [ebx-0x633d8a03]
  419ef2:	push   0x8b83b94f
  419ef7:	inc    ebp
  419ef8:	sahf   
  419ef9:	xor    eax,0x843390e8
  419efe:	std    
  419eff:	pop    edi
  419f00:	cmp    BYTE PTR [esi+0x2b1e0cc0],bh
  419f06:	mov    ebp,esp
  419f08:	ins    DWORD PTR es:[edi],dx
  419f09:	dec    ecx
  419f0a:	cli    
  419f0b:	push   0xffffffee
  419f0d:	pop    ds
  419f0e:	inc    ebp
  419f0f:	call   DWORD PTR [ebx]
  419f11:	jle    0x419ef9
  419f13:	or     edx,0xb389fd84
  419f19:	cmp    ebp,0x209dd675
  419f1f:	std    
  419f20:	sbb    DWORD PTR [eax+ebp*2+0x51fb8605],eax
  419f27:	jmp    FWORD PTR [ecx-0x80]
  419f2a:	mov    esi,0x6835b874
  419f2f:	test   DWORD PTR [edi+0x2b],0x701f0044
  419f36:	add    ch,bh
  419f38:	loope  0x419ed1
  419f3a:	cmp    eax,0x32700646
  419f3f:	call   FWORD PTR [edx]
  419f41:	push   0x6b153d9a
  419f46:	and    edi,0x5a
  419f49:	xor    eax,DWORD PTR [ebp+0x780000fe]
  419f4f:	aam    0x87
  419f51:	(bad)  
  419f52:	cli    
  419f53:	addr16 call 0x85c8:0x834afb87
  419f5b:	imul   eax,DWORD PTR [edx],0x55
  419f5e:	int3   
  419f5f:	dec    ebx
  419f60:	jg     0x419f25
  419f62:	push   ebx
  419f63:	sbb    bl,BYTE PTR [edx]
  419f65:	add    ch,bl
  419f67:	and    DWORD PTR [ebp-0x2865b08c],eax
  419f6d:	dec    ebx
  419f6e:	cmp    BYTE PTR [eax-0x13ccbb87],bl
  419f74:	lds    esp,FWORD PTR [edi]
  419f76:	pop    edi
  419f77:	and    DWORD PTR [eax+eax*4],eax
  419f7a:	pusha  
  419f7b:	bound  ecx,QWORD PTR [esi]
  419f7d:	push   ecx
  419f7e:	scas   eax,DWORD PTR es:[edi]
  419f7f:	aam    0x3c
  419f81:	inc    ecx
  419f82:	inc    edi
  419f83:	pop    ss
  419f84:	pushf  
  419f85:	jne    0x419fed
  419f87:	bound  eax,QWORD PTR [edx]
  419f89:	or     eax,DWORD PTR [edi]
  419f8b:	push   edi
  419f8c:	add    bl,ch
  419f8e:	dec    eax
  419f8f:	pop    edx
  419f90:	js     0x419fd7
  419f92:	xchg   BYTE PTR [edx+0x2b],ah
  419f95:	call   0x45a0fc
  419f9a:	dec    esp
  419f9b:	and    cl,BYTE PTR [edi]
  419f9d:	and    esi,DWORD PTR [eax-0x26]
  419fa0:	jp     0x419ff9
  419fa2:	sar    BYTE PTR [edi],1
  419fa4:	clc    
  419fa5:	mov    edi,0x68325953
  419faa:	inc    edi
  419fab:	or     ecx,ebp
  419fad:	xchg   esp,eax
  419fae:	cli    
  419faf:	loope  0x41a030
  419fb1:	cmp    eax,0x9060000
  419fb6:	mov    ecx,0x1013384
  419fbb:	or     eax,0x9b057814
  419fc0:	out    0xc7,al
  419fc2:	std    
  419fc3:	or     DWORD PTR [esp+edi*1+0x78894a29],0xffffffed
  419fcb:	xor    DWORD PTR [esi-0x59],0x20
  419fcf:	or     esi,edx
  419fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fd2:	(bad)  
  419fd4:	ins    BYTE PTR es:[edi],dx
  419fd5:	js     0x41a032
  419fd7:	or     al,0x5f
  419fd9:	adc    BYTE PTR ds:0xafd86183,bl
  419fdf:	inc    esi
  419fe0:	inc    esp
  419fe1:	or     DWORD PTR [edi+ecx*4],edx
  419fe4:	pop    esp
  419fe5:	mov    ch,BYTE PTR [esp+edx*2-0x6e5287af]
  419fec:	mov    esi,DWORD PTR [ebp+0x38]
  419fef:	xor    DWORD PTR [ebx+0x3cf99e19],0x61
  419ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff7:	and    al,0x47
  419ff9:	or     edx,esp
  419ffb:	inc    ebx
  419ffc:	push   ecx
  419ffd:	mov    ?,WORD PTR [ebx-0x59f6b8fb]
  41a003:	leave  
  41a004:	sbb    BYTE PTR [ecx],cl
  41a006:	jmp    0x2391e70e
  41a00b:	je     0x41a00e
  41a00d:	adc    cl,ch
  41a00f:	add    ebp,DWORD PTR [ebp+0x9]
  41a012:	rol    DWORD PTR [ebx],cl
  41a014:	pop    ebp
  41a015:	or     ebx,eax
  41a017:	add    eax,DWORD PTR [eax]
  41a019:	add    BYTE PTR [edx-0x2c2ba733],bh
  41a01f:	lea    edi,[eax]
  41a021:	jnp    0x419ffc
  41a023:	ja     0x419fbd
  41a025:	sbb    BYTE PTR [ebx+0x71],0xff
  41a029:	xor    eax,0x4fe773ce
  41a02e:	imul   ecx,DWORD PTR [ecx],0x0
  41a031:	repnz add al,0xfc
  41a034:	add    al,0x10
  41a036:	xor    ecx,DWORD PTR [ecx]
  41a038:	add    cl,ch
  41a03a:	pushf  
  41a03b:	mul    DWORD PTR [edi]
  41a03d:	test   al,0x44
  41a03f:	js     0x41a0b5
  41a041:	fldcw  WORD PTR [ecx+ecx*2]
  41a044:	push   eax
  41a045:	inc    ch
  41a047:	(bad)  
  41a048:	mov    bl,BYTE PTR [ecx]
  41a04a:	mov    dh,0x8c
  41a04c:	out    dx,eax
  41a04d:	test   ch,0x76
  41a050:	dec    edi
  41a051:	cmp    ebp,ebx
  41a053:	mov    eax,0x80c5de50
  41a058:	test   ch,al
  41a05a:	in     eax,dx
  41a05b:	jbe    0x41a05b
  41a05d:	ror    DWORD PTR [ebp-0x39],0xfe
  41a061:	(bad)  
  41a062:	mov    bh,0xcc
  41a064:	repz sbb DWORD PTR [ebx+0x7e],esp
  41a068:	inc    ebp
  41a069:	sub    BYTE PTR [ebx+0x78],al
  41a06c:	mov    ah,0xbd
  41a06e:	mov    ebp,0x3fa6fe77
  41a073:	add    ebp,eax
  41a075:	icebp  
  41a076:	sbb    edi,DWORD PTR [eax-0x2]
  41a079:	pusha  
  41a07a:	mov    edi,0x8ef65e
  41a07f:	add    ch,al
  41a081:	loopne 0x41a082
  41a083:	adc    BYTE PTR [ebx-0x32],al
  41a086:	inc    eax
  41a087:	jmp    0x7f2d5e51
  41a08c:	lds    esi,FWORD PTR [edi-0x2]
  41a08f:	hlt    
  41a090:	push   eax
  41a091:	popa   
  41a092:	in     al,dx
  41a093:	mov    ecx,0x648877c5
  41a098:	pop    esp
  41a099:	jg     0x41a099
  41a09b:	push   esi
  41a09c:	fidiv  DWORD PTR [esi+0x66]
  41a09f:	loop   0x41a0ae
  41a0a1:	retf   0xffff
  41a0a4:	xor    DWORD PTR [ecx-0x74ee0816],0xe2e275fd
  41a0ae:	rcl    BYTE PTR [eax+0x71],1
  41a0b1:	mov    eax,DWORD PTR [edi-0x20cb57b]
  41a0b7:	jmp    DWORD PTR [ebx]
  41a0b9:	adc    edx,0x4e8b51f7
  41a0bf:	push   0x3f438d
  41a0c4:	inc    ecx
  41a0c5:	mov    cl,0xea
  41a0c7:	not    DWORD PTR [ecx-0x5d8a0278]
  41a0cd:	loop   0x41a07f
  41a0cf:	push   eax
  41a0d0:	jno    0x41a05a
  41a0d2:	or     eax,eax
  41a0d4:	sbb    dl,BYTE PTR [edx]
  41a0d6:	cmp    DWORD PTR [ebp-0x20f46],0x5a
  41a0dd:	jg     0x41a0ed
  41a0df:	(bad)  
  41a0e0:	ds cwde 
  41a0e2:	and    eax,0x0
  41a0e5:	add    BYTE PTR [ecx+0x7650fd88],bl
  41a0eb:	or     BYTE PTR [ebp-0x1],cl
  41a0ee:	xchg   ecx,eax
  41a0ef:	in     al,0x12
  41a0f1:	or     ebp,esi
  41a0f3:	jo     0x41a0f9
  41a0f5:	push   eax
  41a0f6:	(bad)  
  41a0f7:	jnp    0x41a144
  41a0f9:	call   ecx
  41a0fb:	mov    edi,0x87c9e083
  41a100:	std    
  41a101:	adc    eax,0x6a000a2e
  41a106:	bound  edx,QWORD PTR cs:[eax]
  41a109:	inc    edi
  41a10a:	pop    edi
  41a10b:	or     eax,0xefc2b5ff
  41a110:	std    
  41a111:	push   DWORD PTR [ecx+0x7e]
  41a114:	or     ch,al
  41a116:	adc    bl,BYTE PTR [edx-0x3]
  41a119:	push   DWORD PTR [edi-0x72]
  41a11c:	(bad)  
  41a11e:	inc    edi
  41a11f:	fild   WORD PTR [eax+0x30484769]
  41a125:	inc    edi
  41a126:	xchg   BYTE PTR [eax+0x7f],ah
  41a129:	mov    ah,0xe3
  41a12b:	ds cmp esi,0xe80eb4c8
  41a132:	push   ss
  41a133:	nop
  41a134:	jg     0x41a134
  41a136:	into   
  41a137:	in     al,0x53
  41a139:	div    BYTE PTR [eax-0x70437aea]
  41a13f:	push   ss
  41a140:	cmp    esi,0x93865747
  41a146:	inc    edi
  41a147:	pusha  
  41a148:	add    ch,BYTE PTR [eax+0x0]
  41a14b:	add    BYTE PTR [esi-0x51],cl
  41a14e:	sar    edi,0xbb
  41a151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a152:	jbe    0x41a1a3
  41a154:	cmp    BYTE PTR [esp+ebx*2],0xf6
  41a158:	js     0x41a1c8
  41a15a:	push   0x6b
  41a15c:	cmc    
  41a15d:	push   esi
  41a15e:	jg     0x41a16a
  41a160:	xchg   ebx,edx
  41a162:	inc    DWORD PTR [edx+0x74025be2]
  41a168:	shl    edx,1
  41a16a:	mov    ebp,0x7fb658e3
  41a16f:	call   esp
  41a171:	int3   
  41a172:	test   BYTE PTR [edi+ebp*1+0x47fe7fbc],bh
  41a179:	push   ss
  41a17a:	call   0x6fa3f8e6
  41a17f:	mov    ebp,0xe80c1628
  41a184:	xchg   ebp,eax
  41a185:	sub    DWORD PTR [ecx+0x6b3618fe],eax
  41a18b:	not    BYTE PTR [eax]
  41a18d:	hlt    
  41a18e:	jg     0x41a204
  41a190:	aas    
  41a191:	mov    cl,BYTE PTR [eax+0x48]
  41a194:	add    ah,ah
  41a196:	jg     0x41a14c
  41a198:	jecxz  0x41a1a3
  41a19a:	pop    esi
  41a19b:	xor    cl,0x74
  41a19e:	ror    DWORD PTR [ebx],cl
  41a1a0:	fbstp  TBYTE PTR [ecx+0x74e1809f]
  41a1a6:	shl    DWORD PTR [edi-0x27],cl
  41a1a9:	mov    esi,0x74d17820
  41a1ae:	cmp    eax,0x400000f6
  41a1b3:	popa   
  41a1b4:	mov    cl,0xca
  41a1b6:	shl    DWORD PTR [ebp+ebp*1-0x4a],0x98
  41a1bb:	jl     0x41a1e2
  41a1bd:	xor    BYTE PTR [ecx+0x716bf0fe],0xc2
  41a1c4:	adc    eax,0x2cbea180
  41a1c9:	js     0x41a164
  41a1cb:	je     0x41a1d2
  41a1cd:	test   BYTE PTR [eax+0x61],0x71
  41a1d1:	retf   0x7489
  41a1d4:	cmc    
  41a1d5:	mov    ch,0x90
  41a1d7:	jl     0x41a1c6
  41a1d9:	jg     0x41a254
  41a1db:	(bad)  
  41a1dc:	lock imul esi,ebx,0xffffffc1
  41a1e0:	fnstsw WORD PTR [edi+0x69]
  41a1e3:	mov    esi,0x746177b0
  41a1e8:	rol    BYTE PTR [edi+0x7fc5740c],0x9b
  41a1ef:	popa   
  41a1f0:	mov    ch,0x7f
  41a1f2:	dec    ecx
  41a1f3:	popa   
  41a1f4:	xor    al,0xd0
  41a1f6:	inc    ecx
  41a1f7:	je     0x41a1a6
  41a1f9:	mov    ecx,0x7fa57c1c
  41a1fe:	sub    dl,bh
  41a200:	sub    al,0x7f
  41a202:	sub    DWORD PTR [ebx+ebx*2+0x68],esi
  41a206:	sbb    DWORD PTR [ebp+ecx*4+0x6c],esi
  41a20a:	mov    ds:0x117f85c5,al
  41a20f:	mov    esi,0x74097798
  41a214:	inc    DWORD PTR [eax-0x3fe40000]
  41a21a:	(bad)  
  41a21b:	outs   dx,BYTE PTR ds:[esi]
  41a21c:	js     0x41a1db
  41a21e:	jmp    0x41a27e
  41a220:	jo     0x41a295
  41a222:	(bad)  
  41a223:	aam    0x38
  41a225:	je     0x41a29b
  41a227:	loope  0x41a295
  41a229:	dec    esi
  41a22a:	cld    
  41a22b:	dec    esi
  41a22c:	pop    eax
  41a22d:	jae    0x41a1e3
  41a22f:	push   ebp
  41a230:	pop    eax
  41a231:	jae    0x41a231
  41a233:	push   ecx
  41a234:	or     ch,al
  41a236:	(bad)  
  41a237:	ss inc eax
  41a239:	int    0xf7
  41a23b:	inc    eax
  41a23c:	sbb    eax,0x3026fe75
  41a241:	std    
  41a242:	sti    
  41a243:	adc    DWORD PTR [edx+0x13e90015],edi
  41a249:	dec    edx
  41a24a:	or     ebp,ecx
  41a24c:	jg     0x41a2cc
  41a24e:	jmp    0x41a2ba
  41a250:	jmp    DWORD PTR [edi-0x74]
  41a253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a254:	or     ah,al
  41a256:	or     ecx,DWORD PTR [bx+di-0x38]
  41a25b:	and    BYTE PTR [ebp-0xe16bf33],0xfc
  41a262:	or     edx,ecx
  41a264:	and    esp,eax
  41a266:	(bad)  
  41a267:	(bad)  
  41a268:	dec    ebp
  41a269:	dec    ecx
  41a26a:	jae    0x41a2ae
  41a26c:	jae    0x41a1f4
  41a26e:	jl     0x41a235
  41a270:	dec    eax
  41a271:	(bad)  
  41a272:	pop    esi
  41a273:	mov    esi,0xb1448414
  41a278:	retf   
  41a279:	cmc    
  41a27a:	div    DWORD PTR [ebp+0x9430000]
  41a280:	add    BYTE PTR [edi],bl
  41a282:	dec    eax
  41a283:	dec    edx
  41a284:	inc    esp
  41a285:	mov    eax,ds:0xe90009b0
  41a28a:	lods   eax,DWORD PTR ds:[esi]
  41a28b:	enter  0x14fe,0x9b
  41a28f:	jmp    0x8cfe:0x4c6000eb
  41a296:	arpl   cx,sp
  41a298:	dec    esi
  41a299:	call   0x41b7b0
  41a29e:	ins    DWORD PTR es:[edi],dx
  41a29f:	retf   0x6a0a
  41a2a2:	ficomp WORD PTR [ecx+0x5eaee443]
  41a2a8:	mov    eax,ds:0xff06af46
  41a2ad:	jne    0x41a2a9
  41a2af:	(bad)  
  41a2b1:	dec    esi
  41a2b2:	mov    ebx,esi
  41a2b4:	or     eax,eax
  41a2b6:	xchg   edx,eax
  41a2b7:	sbb    dl,BYTE PTR [eax+0x68]
  41a2ba:	scas   eax,DWORD PTR es:[edi]
  41a2bb:	push   es
  41a2bc:	out    dx,eax
  41a2bd:	mov    esi,0x873f3de
  41a2c2:	push   esi
  41a2c3:	test   eax,0xde49ff6b
  41a2c8:	lods   al,BYTE PTR ds:[esi]
  41a2c9:	dec    ebx
  41a2ca:	cmp    ebx,esi
  41a2cc:	std    
  41a2cd:	dec    ebp
  41a2ce:	xchg   DWORD PTR ss:[ebx-0x8],edi
  41a2d2:	sahf   
  41a2d3:	jno    0x41a28b
  41a2d5:	call   0x3ee1d8
  41a2da:	daa    
  41a2db:	enter  0x6,0xd3
  41a2df:	jg     0x41a2cb
  41a2e1:	add    DWORD PTR [eax],0x0
  41a2e4:	mov    ds:0x14006889,al
  41a2e9:	dec    esp
  41a2ea:	std    
  41a2eb:	jne    0x41a353
  41a2ed:	faddp  st(0),st
  41a2ef:	dec    eax
  41a2f0:	mov    esp,esi
  41a2f2:	xchg   DWORD PTR [ebp-0x76],eax
  41a2f5:	gs mov edi,0xff0d1f46
  41a2fb:	xor    eax,0x411f29
  41a300:	jmp    0xcf29a97e
  41a305:	mov    ch,bh
  41a307:	call   DWORD PTR [esi-0x3a]
  41a30a:	inc    esp
  41a30b:	inc    ecx
  41a30c:	inc    edi
  41a30d:	pusha  
  41a30e:	jmp    0x9afe:0x82604701
  41a315:	js     0x41a381
  41a317:	fisttp QWORD PTR [ebx]
  41a319:	repz jl 0x41a31a
  41a31c:	cmp    ch,BYTE PTR [ebx+0x29]
  41a31f:	inc    ecx
  41a320:	inc    edi
  41a321:	jecxz  0x41a319
  41a323:	pop    es
  41a324:	fistp  WORD PTR [eax]
  41a326:	jge    0x41a326
  41a328:	call   0x4741a384
  41a32d:	loopne 0x41a3ab
  41a32f:	je     0x41a380
  41a331:	enter  0xff1f,0xd0
  41a335:	retf   0x747c
  41a338:	retf   
  41a339:	xor    dh,bh
  41a33b:	pop    es
  41a33c:	scas   eax,DWORD PTR es:[edi]
  41a33d:	cmc    
  41a33e:	retf   
  41a33f:	(bad)  
  41a340:	mov    eax,0x47034228
  41a345:	mov    ch,0x87
  41a347:	jmp    0x41a349
  41a349:	add    ah,al
  41a34b:	sub    esp,DWORD PTR [eax+0x55]
  41a34e:	clc    
  41a34f:	test   DWORD PTR [edx],eax
  41a351:	push   0xf
  41a353:	add    esi,edi
  41a355:	pop    es
  41a356:	lahf   
  41a357:	stos   DWORD PTR es:[edi],eax
  41a358:	retf   0x88fe
  41a35b:	clc    
  41a35c:	(bad)  
  41a35d:	sti    
  41a35e:	les    edi,FWORD PTR [ebp+esi*4+0x260062d]
  41a365:	bswap  ebx
  41a367:	mov    esp,0xdf470001
  41a36c:	cmp    eax,0x42131b9
  41a371:	add    BYTE PTR [eax-0x14],cl
  41a374:	inc    edx
  41a375:	add    BYTE PTR [edi+0x60],al
  41a378:	jg     0x41a3b6
  41a37a:	xchg   BYTE PTR [ecx],al
  41a37c:	ret    
  41a37d:	inc    DWORD PTR [eax+0x68]
  41a380:	xchg   BYTE PTR [edx-0x7cfd9dba],dh
  41a386:	jb     0x41a391
  41a388:	ins    BYTE PTR es:[edi],dx
  41a389:	sub    eax,0xce90986
  41a38e:	retf   
  41a38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a390:	out    0x3,eax
  41a392:	inc    edi
  41a393:	mov    ebx,cs
  41a395:	mov    ah,BYTE PTR [edx-0x36]
  41a398:	call   0x5fc6dba0
  41a39d:	add    al,BYTE PTR [edi+0x9]
  41a3a0:	push   0x3e
  41a3a2:	retf   0x281f
  41a3a5:	add    al,0x47
  41a3a7:	add    BYTE PTR [ebp-0x71],ch
  41a3aa:	inc    edi
  41a3ab:	or     ecx,ebp
  41a3ad:	add    BYTE PTR [eax],0x0
  41a3b0:	and    ebx,DWORD PTR [edx+0x70d8c306]
  41a3b6:	fld    QWORD PTR [edi+0x3e90a51]
  41a3bc:	les    ebp,FWORD PTR [esi]
  41a3be:	jl     0x41a3ed
  41a3c0:	push   es
  41a3c1:	or     ecx,ebp
  41a3c3:	or     al,0xc3
  41a3c5:	sti    
  41a3c6:	out    0x3,eax
  41a3c8:	inc    edi
  41a3c9:	loope  0x41a382
  41a3cb:	les    eax,FWORD PTR [edi]
  41a3cd:	or     DWORD PTR [ebx+0x5c16a003],edx
  41a3d3:	sub    eax,0xc6600906
  41a3d8:	cwde   
  41a3d9:	mov    WORD PTR [ebx+0x64ff887b],es
  41a3df:	fild   DWORD PTR [edi+0x9]
  41a3e2:	jmp    0xee19150f
  41a3e7:	cmc    
  41a3e8:	js     0x41a45a
  41a3ea:	sti    
  41a3eb:	mov    esp,0x8ee8ca1a
  41a3f0:	jo     0x41a3f6
  41a3f2:	fcomip st,st(1)
  41a3f4:	inc    ebx
  41a3f5:	bound  edx,QWORD PTR [esi]
  41a3f7:	add    eax,0xd2720947
  41a3fc:	cmp    al,0x84
  41a3fe:	xor    ch,ah
  41a400:	int    0xf2
  41a402:	inc    DWORD PTR [edx+ecx*8-0x44]
  41a406:	repz loop 0x41a3b6
  41a409:	inc    DWORD PTR [ebx+0x94204]
  41a40f:	nop
  41a410:	dec    ebp
  41a411:	or     al,BYTE PTR [eax]
  41a413:	jmp    0xdc6da418
  41a418:	inc    esi
  41a419:	sub    BYTE PTR [ebx+0x70],cl
  41a41c:	ss xchg ecx,eax
  41a41e:	bound  ecx,QWORD PTR ds:0x4951e900
  41a424:	push   cs
  41a425:	ins    BYTE PTR es:[edi],dx
  41a426:	ja     0x41a498
  41a428:	(bad)  
  41a429:	jmp    0xe94992f7
  41a42e:	cmp    eax,0x44e9e985
  41a433:	or     edi,edi
  41a435:	fimul  WORD PTR [ecx+eiz*2+0x5f]
  41a439:	mov    ds:0xac886f4d,eax
  41a43e:	push   esp
  41a43f:	outs   dx,DWORD PTR ds:[esi]
  41a440:	jbe    0x41a433
  41a442:	cmp    eax,0xb436eff5
  41a447:	add    ebp,eax
  41a449:	sub    DWORD PTR [bp-0x2],0x40c68e91
  41a451:	jmp    0x2319973
  41a456:	sub    dl,BYTE PTR [ebx]
  41a458:	add    cl,ch
  41a45a:	inc    ecx
  41a45b:	dec    ecx
  41a45c:	push   cs
  41a45d:	ins    BYTE PTR es:[edi],dx
  41a45e:	xlat   BYTE PTR ds:[ebx]
  41a45f:	outs   dx,DWORD PTR ds:[esi]
  41a460:	(bad)  
  41a461:	jmp    0xaccd13d8
  41a466:	in     al,dx
  41a467:	mov    edi,0xbfe8a48c
  41a46c:	imul   ebp,ecx,0xde546f5a
  41a472:	aaa    
  41a473:	dec    edx
  41a474:	sub    eax,0xc0044328
  41a479:	fiadd  WORD PTR [eax]
  41a47b:	add    al,dl
  41a47d:	xchg   esi,eax
  41a47e:	(bad)  
  41a47f:	call   FWORD PTR [esi+0xb]
  41a482:	lea    eax,[ebp+0xa]
  41a485:	pop    ebx
  41a486:	std    
  41a487:	jne    0x41a48f
  41a489:	hlt    
  41a48a:	jae    0x41a478
  41a48c:	loope  0x41a4a7
  41a48e:	test   DWORD PTR [esi],ebp
  41a490:	pop    edi
  41a491:	add    eax,0x6d3ac00b
  41a496:	mov    eax,DWORD PTR [ebp-0x32]
  41a499:	pop    edx
  41a49a:	push   0x6a054400
  41a49f:	pop    es
  41a4a0:	xor    al,0x5
  41a4a2:	push   DWORD PTR [ebp-0x36]
  41a4a5:	repz adc ecx,DWORD PTR [ecx+0xafe4600]
  41a4ac:	sahf   
  41a4ad:	pop    esi
  41a4ae:	push   esp
  41a4af:	dec    DWORD PTR [ebx]
  41a4b1:	jmp    0x41a499
  41a4b3:	call   0x8a3f984f
  41a4b8:	stos   DWORD PTR es:[edi],eax
  41a4b9:	(bad)  
  41a4ba:	mov    eax,DWORD PTR [ebp+0x7e]
  41a4bd:	pop    edx
  41a4be:	std    
  41a4bf:	jne    0x41a4e3
  41a4c1:	pop    esp
  41a4c2:	(bad)  
  41a4c3:	imul   ebp,DWORD PTR [ecx-0x40101a4],0x2715fdce
  41a4cd:	and    BYTE PTR [ecx+0x0],al
  41a4d0:	mov    ch,0xca
  41a4d2:	jb     0x41a4fd
  41a4d4:	mov    dh,0xa
  41a4d6:	add    bh,ch
  41a4d8:	lock bnd jae 0x41a4e4
  41a4dc:	inc    esi
  41a4dd:	cmp    al,BYTE PTR [esi-0x1]
  41a4e0:	add    BYTE PTR [eax],al
  41a4e2:	inc    ecx
  41a4e3:	repz je 0x41a4ee
  41a4e6:	cmp    DWORD PTR [ecx+0x2],0xe801fbff
  41a4ed:	pop    eax
  41a4ee:	test   al,0xf3
  41a4f0:	std    
  41a4f1:	dec    DWORD PTR [ebx]
  41a4f3:	in     eax,0xfd
  41a4f5:	jne    0x41a499
  41a4f7:	lock jae 0x41a502
  41a4fa:	inc    edi
  41a4fb:	dec    eax
  41a4fc:	int    0x45
  41a4fe:	push   eax
  41a4ff:	aas    
  41a500:	js     0x41a576
  41a502:	imul   ebx,DWORD PTR [eax-0x7c],0x48
  41a506:	inc    eax
  41a507:	scas   eax,DWORD PTR es:[edi]
  41a508:	js     0x41a57e
  41a50a:	and    esi,DWORD PTR [edi+0x21618d0e]
  41a510:	add    al,0x6a
  41a512:	inc    edi
  41a513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a514:	out    dx,al
  41a515:	jmp    0x41a537
  41a517:	jne    0x41a4aa
  41a519:	sub    eax,0x74776086
  41a51e:	pop    ss
  41a51f:	mov    al,ah
  41a521:	dec    eax
  41a522:	or     BYTE PTR [edi-0x10a8397c],al
  41a528:	(bad)  
  41a529:	repz les esi,FWORD PTR [esi+ebp*2-0x1]
  41a52e:	inc    ecx
  41a52f:	in     eax,0x6b
  41a531:	std    
  41a532:	call   0xe1f6101d
  41a537:	into   
  41a538:	js     0x41a5a3
  41a53a:	inc    edi
  41a53b:	xlat   BYTE PTR ds:[ebx]
  41a53c:	out    dx,al
  41a53d:	not    eax
  41a53f:	je     0x41a4f6
  41a541:	sub    eax,0x74776086
  41a546:	add    BYTE PTR [eax],al
  41a548:	ret    
  41a549:	cs out dx,eax
  41a54b:	pop    es
  41a54c:	scas   eax,DWORD PTR es:[edi]
  41a54d:	stc    
  41a54e:	sar    esi,0xb0
  41a551:	jle    0x41a52b
  41a553:	enter  0x5b85,0x2
  41a557:	push   ebp
  41a558:	int3   
  41a559:	sti    
  41a55a:	add    bl,0x7b
  41a55d:	push   cs
  41a55e:	jns    0x41a55e
  41a560:	ret    0x76a4
  41a563:	dec    edi
  41a564:	mov    ah,ch
  41a566:	push   es
  41a567:	(bad)  
  41a568:	cmp    bl,BYTE PTR [edi+0x29]
  41a56b:	inc    ecx
  41a56c:	inc    edi
  41a56d:	or     ch,bh
  41a56f:	sbb    al,BYTE PTR [edi+0x60]
  41a572:	or     eax,eax
  41a574:	cmp    BYTE PTR [ecx],cl
  41a576:	ins    BYTE PTR es:[edi],dx
  41a577:	test   al,0x47
  41a579:	or     ecx,ebp
  41a57b:	inc    eax
  41a57c:	add    esi,DWORD PTR [ecx-0x18]
  41a57f:	add    eax,DWORD PTR [edi+0x9]
  41a582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a583:	mov    esi,0x3ed6d54
  41a588:	inc    edi
  41a589:	fucomip st,st(0)
  41a58b:	in     eax,dx
  41a58c:	cmp    bl,ah
  41a58e:	call   0x23bfd680
  41a593:	jo     0x41a60d
  41a595:	jle    0x41a602
  41a597:	outs   dx,DWORD PTR ds:[esi]
  41a598:	sbb    DWORD PTR [ebp-0x63],ebp
  41a59b:	rcr    DWORD PTR [ecx],cl
  41a59d:	not    DWORD PTR [eax-0x7f926488]
  41a5a3:	(bad)  
  41a5a4:	sub    eax,0x70ce909
  41a5a9:	mul    bl
  41a5ab:	push   0x0
  41a5ad:	add    BYTE PTR [esi+0xa],dh
  41a5b0:	jmp    0xc0cb04b8
  41a5b5:	ret    0x6be8
  41a5b8:	fild   DWORD PTR [edi]
  41a5ba:	out    dx,eax
  41a5bb:	stc    
  41a5bc:	lods   al,BYTE PTR ds:[esi]
  41a5bd:	js     0x41a598
  41a5bf:	fldenv [ecx+0x53]
  41a5c2:	ret    
  41a5c3:	xchg   BYTE PTR [eax+esi*2-0x37],dl
  41a5c7:	ins    BYTE PTR es:[edi],dx
  41a5c8:	cwde   
  41a5c9:	aad    0xa8
  41a5cb:	jmp    0x82fb1e7c
  41a5d0:	imul   edx,DWORD PTR [edi-0x47],0x6c
  41a5d4:	sub    eax,0x25c1f26b
  41a5d9:	js     0x41a609
  41a5db:	or     DWORD PTR [ecx-0x1735fe73],edx
  41a5e1:	js     0x41a5be
  41a5e3:	dec    ebp
  41a5e4:	adc    eax,0xbb6c8978
  41a5e9:	or     BYTE PTR [esi],ch
  41a5eb:	retf   0x6be8
  41a5ee:	mov    dl,0xc0
  41a5f0:	push   ebp
  41a5f2:	clc    
  41a5f3:	add    BYTE PTR [ecx+edi*8+0x53fe6ad8],0x4b
  41a5fb:	loope  0x41a58b
  41a5fd:	sub    BYTE PTR es:[ebp+edi*8-0x64],0xef
  41a603:	jb     0x41a603
  41a605:	into   
  41a606:	shl    BYTE PTR [edi+ecx*1],1
  41a609:	adc    BYTE PTR [edx],cl
  41a60b:	ins    BYTE PTR es:[edi],dx
  41a60c:	out    0x61,al
  41a60e:	or     al,0x6b
  41a610:	(bad)  
  41a611:	pusha  
  41a612:	add    BYTE PTR [eax],al
  41a614:	(bad)  
  41a615:	pop    edi
  41a616:	imul   BYTE PTR [esi+0x10ffe2b0]
  41a61c:	mov    bh,0xc2
  41a61e:	inc    eax
  41a61f:	jmp    0x9f1d5bb5
  41a624:	cwde   
  41a625:	imul   edi,esi,0xffffffd4
  41a628:	inc    ecx
  41a629:	and    al,BYTE PTR [ecx-0x17]
  41a62c:	ins    BYTE PTR es:[edi],dx
  41a62d:	repnz dec edx
  41a62f:	jle    0x41a6a1
  41a631:	add    DWORD PTR [ecx+eax*4+0x3fe6b60],0xae98e143
  41a63c:	or     ebp,DWORD PTR [ebp+edi*8-0x6c]
  41a640:	jg     0x41a6b5
  41a642:	(bad)  
  41a643:	push   esi
  41a644:	pop    eax
  41a645:	xor    eax,0x6c02000f
  41a64a:	out    0xa5,al
  41a64c:	lea    ebp,[edx-0x2]
  41a64f:	jo     0x41a617
  41a651:	div    BYTE PTR ds:0xe238
  41a656:	inc    eax
  41a658:	rol    dl,cl
  41a65a:	inc    eax
  41a65b:	jmp    0x171d5b79
  41a660:	adc    BYTE PTR [ebx-0x2],ch
  41a663:	fmul   QWORD PTR [ecx+0x22]
  41a666:	inc    ecx
  41a667:	jmp    0x8cd488
  41a66c:	dec    ecx
  41a66d:	hlt    
  41a66e:	xchg   DWORD PTR [ebp-0x223b2],eax
  41a674:	fnsave [ecx+0xf7ea]
  41a67a:	pop    ecx
  41a67b:	repnz (bad) 
  41a67d:	jae    0x41a69c
  41a67f:	pop    ebp
  41a680:	(bad)  
  41a681:	dec    DWORD PTR [ecx+0x6675fdb5]
  41a687:	fist   WORD PTR [ecx-0x20d86bc]
  41a68d:	mov    ch,0xfe
  41a68f:	(bad)  
  41a691:	(bad)  
  41a692:	stc    
  41a693:	jns    0x41a69b
  41a695:	call   0x3f519b
  41a69a:	fnstcw WORD PTR [ecx-0xc160816]
  41a6a0:	std    
  41a6a1:	jne    0x41a6b9
  41a6a3:	(bad)  
  41a6a5:	inc    esp
  41a6a6:	mov    ecx,0xc6b5fdf3
  41a6ab:	(bad)  
  41a6ad:	dec    ecx
  41a6af:	jns    0x41a6b7
  41a6b1:	call   0x3f516b
  41a6b6:	jns    0x41a671
  41a6b8:	loop   0x41a6b1
  41a6ba:	pop    ecx
  41a6bb:	repz std 
  41a6bd:	jne    0x41a695
  41a6bf:	fidivr WORD PTR [ebx-0x20c86bc]
  41a6c5:	mov    ch,0x7e
  41a6c7:	(bad)  
  41a6c9:	(bad)  
  41a6ca:	jns    0x41a745
  41a6cc:	push   es
  41a6cd:	call   0x3f51ab
  41a6d2:	jns    0x41a68d
  41a6d4:	(bad)  
  41a6d6:	jns    0x41a6cb
  41a6d8:	std    
  41a6d9:	jne    0x41a681
  41a6db:	fidivr WORD PTR [esi-0x2]
  41a6de:	add    BYTE PTR [eax],al
  41a6e0:	imul   esi,ebx,0xdb5ab5fd
  41a6e6:	std    
  41a6e7:	inc    DWORD PTR [edi+0x8]
  41a6ea:	stos   BYTE PTR es:[edi],al
  41a6eb:	inc    esi
  41a6ec:	mov    bl,bh
  41a6ee:	jne    0x41a6a4
  41a6f0:	ja     0x41a75d
  41a6f2:	je     0x41a6f2
  41a6f4:	outs   dx,DWORD PTR ds:[esi]
  41a6f5:	sar    BYTE PTR [ebp-0x518c8f02],0xeb
  41a6fc:	jo     0x41a759
  41a6fe:	je     0x41a6e7
  41a700:	mov    edx,0x58fe751b
  41a705:	xchg   ebp,eax
  41a706:	imul   esi,esi,0x50
  41a709:	push   ebx
  41a70a:	imul   ecx,DWORD PTR [ecx-0x18bc500],0xfffffffa
  41a711:	cmp    ebp,DWORD PTR [esi+edi*8+0x38]
  41a715:	pop    eax
  41a716:	hlt    
  41a717:	inc    esi
  41a718:	xor    BYTE PTR [ebx-0x4cd84b8c],dh
  41a71e:	je     0x41a71e
  41a720:	das    
  41a721:	or     al,0xbd
  41a723:	(bad)  
  41a724:	sbb    BYTE PTR [ebx+0x1ef7be],cl
  41a72a:	jbe    0x41a72a
  41a72c:	or     BYTE PTR [ebx-0x12],bh
  41a72f:	sti    
  41a730:	out    dx,eax
  41a731:	rcr    DWORD PTR [edx],0x0
  41a734:	inc    edi
  41a735:	mov    ecx,0xd470741
  41a73a:	mov    ebx,ebp
  41a73c:	les    esp,FWORD PTR [ebx+0x56476977]
  41a742:	leave  
  41a743:	inc    BYTE PTR [eax]
  41a745:	add    BYTE PTR [edx+0x78],dl
  41a748:	push   0xffffff85
  41a74a:	mov    edx,ebx
  41a74c:	je     0x41a6d6
  41a74e:	cmp    BYTE PTR [ebx+ebp*8+0x2a1086a],0xff
  41a756:	xor    bh,BYTE PTR [eax+0x6a]
  41a759:	pop    es
  41a75a:	mov    cl,0x32
  41a75c:	jne    0x41a75c
  41a75e:	xor    bl,BYTE PTR [esi*2+0x11094f74]
  41a765:	mov    bl,0x4
  41a767:	push   0x1d
  41a769:	dec    ebx
  41a76a:	xchg   BYTE PTR [ecx+ebp*8],al
  41a76d:	into   
  41a76e:	mov    ebp,0x7440695c
  41a773:	imul   edi,DWORD PTR [ebx+0x7],0x3e1236f
  41a77a:	inc    edi
  41a77b:	(bad)  
  41a77c:	sub    bh,ch
  41a77e:	inc    esp
  41a77f:	inc    eax
  41a780:	sub    cl,BYTE PTR [eax]
  41a782:	inc    edi
  41a783:	push   0x5b
  41a785:	adc    al,0x6f
  41a787:	adc    eax,DWORD PTR [ecx]
  41a789:	add    al,0x47
  41a78b:	(bad)  
  41a78c:	test   al,0xee
  41a78e:	inc    esp
  41a78f:	inc    eax
  41a790:	stos   BYTE PTR es:[edi],al
  41a791:	pop    es
  41a792:	inc    edi
  41a793:	xchg   edx,eax
  41a794:	sub    edi,DWORD PTR [ecx+edi*1-0x21]
  41a798:	shr    BYTE PTR [ebx+0x5b],0xd0
  41a79c:	mov    ch,0x74
  41a79e:	mov    edi,0x9b74acce
  41a7a3:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41a7a5:	out    dx,al
  41a7a6:	adc    BYTE PTR [ecx+0x13],ch
  41a7a9:	adc    al,0x0
  41a7ab:	add    BYTE PTR [edi],bl
  41a7ad:	pop    eax
  41a7ae:	cmp    dh,BYTE PTR [ebp+0x9]
  41a7b1:	adc    eax,0x923defa9
  41a7b6:	sub    esi,DWORD PTR [eax+0x6e]
  41a7b9:	or     DWORD PTR [esi+edi*4-0xc],ebp
  41a7bd:	mov    ecx,0x71ecee75
  41a7c2:	mov    edx,0xf168e1e7
  41a7c7:	inc    ebx
  41a7c8:	push   esp
  41a7c9:	das    
  41a7ca:	rol    DWORD PTR [ebx],1
  41a7cc:	aaa    
  41a7cd:	js     0x41a765
  41a7cf:	je     0x41a824
  41a7d1:	adc    DWORD PTR [ecx-0x2d],eax
  41a7d4:	add    eax,0x33744568
  41a7d9:	adc    eax,0x7148ee3e
  41a7de:	dec    DWORD PTR [ebp+0x2efe6787]
  41a7e4:	mov    cl,0x5c
  41a7e6:	(bad)  
  41a7e7:	pushf  
  41a7e8:	adc    BYTE PTR [edi+0x74],ah
  41a7eb:	icebp  
  41a7ec:	sbb    al,0xf5
  41a7ee:	inc    edx
  41a7ef:	push   ss
  41a7f0:	adc    esp,DWORD PTR [edi+0x74]
  41a7f3:	or     eax,0x645adec
  41a7f8:	repz push eax
  41a7fa:	shr    ebp,0x44
  41a7fd:	mov    esi,0x4cc7058a
  41a802:	rcl    DWORD PTR [edi-0x2ef42325],cl
  41a808:	ins    BYTE PTR es:[edi],dx
  41a809:	sar    esi,cl
  41a80b:	ficom  WORD PTR [eax-0x58]
  41a80e:	je     0x41a7fc
  41a810:	add    BYTE PTR [eax],al
  41a812:	jbe    0x41a865
  41a814:	rcr    ebp,0x44
  41a817:	xchg   esi,eax
  41a818:	inc    esp
  41a819:	mov    ecx,0xed746713
  41a81e:	mov    WORD PTR [ecx],es
  41a820:	dec    esp
  41a821:	mov    dh,0xb4
  41a823:	adc    eax,eax
  41a825:	fmulp  st(0),st
  41a827:	inc    edi
  41a828:	(bad)  
  41a829:	call   0x9db61072
  41a82e:	jae    0x41a7bd
  41a830:	inc    ebp
  41a831:	xchg   esi,eax
  41a832:	xchg   esp,eax
  41a833:	xchg   ecx,eax
  41a834:	inc    esp
  41a835:	jge    0x41a8ab
  41a837:	(bad)  
  41a839:	xchg   dh,bh
  41a83b:	jae    0x41a83b
  41a83d:	hlt    
  41a83e:	pop    esp
  41a83f:	jo     0x41a7eb
  41a841:	das    
  41a842:	je     0x41a8ab
  41a844:	mov    dh,ah
  41a846:	xor    BYTE PTR [ecx-0x5e],0xe9
  41a84a:	inc    esp
  41a84b:	or     DWORD PTR [eax+0x27],ebp
  41a84e:	cld    
  41a84f:	enter  0xbeff,0x6c
  41a853:	pusha  
  41a854:	pop    ss
  41a855:	jmp    0x101bc9e
  41a85a:	sti    
  41a85b:	adc    cl,ch
  41a85d:	cwde   
  41a85e:	sahf   
  41a85f:	or     eax,DWORD PTR [eax]
  41a861:	mov    ebp,DWORD PTR [esi+0x45]
  41a864:	les    eax,FWORD PTR [edi-0x11]
  41a867:	or     ebp,eax
  41a869:	cmp    DWORD PTR [ecx+0x2e03000b],ebx
  41a86f:	out    0x73,al
  41a871:	call   0x41876a3c
  41a876:	add    BYTE PTR [eax],al
  41a878:	outs   dx,BYTE PTR ds:[esi]
  41a879:	inc    ecx
  41a87a:	out    0xd3,al
  41a87c:	or     ax,WORD PTR [eax]
  41a87f:	or     ebx,DWORD PTR [esi]
  41a881:	bound  eax,QWORD PTR [eax]
  41a883:	jmp    0x41a86d
  41a885:	in     eax,0xe
  41a887:	mov    BYTE PTR [ebx-0x75ba7812],bh
  41a88d:	inc    ebx
  41a88e:	(bad)  
  41a88f:	inc    edi
  41a890:	pop    ds
  41a891:	or     eax,0x13b4e856
  41a896:	add    BYTE PTR [eax],al
  41a898:	and    eax,0x150273cb
  41a89d:	cmp    cl,BYTE PTR [ecx+0x45d596f0]
  41a8a3:	inc    ecx
  41a8a4:	push   ds
  41a8a5:	ret    
  41a8a6:	cld    
  41a8a7:	push   ss
  41a8a8:	or     eax,DWORD PTR cs:[ebx]
  41a8ab:	lock xchg edi,eax
  41a8ad:	popa   
  41a8ae:	fisubr DWORD PTR [eax-0x28]
  41a8b1:	push   ebx
  41a8b2:	aas    
  41a8b3:	add    BYTE PTR [eax-0x3b],cl
  41a8b6:	xchg   esi,eax
  41a8b7:	sbb    dh,ch
  41a8b9:	or     cl,BYTE PTR [ebx]
  41a8bb:	sar    bl,0xc
  41a8be:	jmp    0x41a8fb
  41a8c0:	je     0x41a8bc
  41a8c2:	xchg   DWORD PTR [ebp-0x37],edx
  41a8c5:	in     eax,0x43
  41a8c7:	fsub   DWORD PTR [ebp+0x51]
  41a8ca:	loop   0x41a892
  41a8cc:	out    dx,al
  41a8cd:	or     cl,BYTE PTR [ebx-0x12f79bb]
  41a8d3:	inc    DWORD PTR [edi-0x41]
  41a8d6:	neg    ebx
  41a8d8:	sar    BYTE PTR ds:0xfe5a,0x32
  41a8df:	pop    eax
  41a8e0:	pop    edx
  41a8e1:	xchg   edx,eax
  41a8e2:	mov    cl,0x27
  41a8e4:	jb     0x41a86f
  41a8e6:	adc    dl,bl
  41a8e8:	jge    0x41a92e
  41a8ea:	stos   DWORD PTR es:[edi],eax
  41a8eb:	call   0x27343302
  41a8f0:	jle    0x41a936
  41a8f2:	outs   dx,DWORD PTR ds:[esi]
  41a8f3:	fcom   DWORD PTR [edx]
  41a8f5:	or     BYTE PTR [ecx+0x70],0x1
  41a8f9:	test   DWORD PTR [ebx],ebx
  41a8fb:	pop    ss
  41a8fc:	jb     0x41a8fc
  41a8fe:	js     0x41a8e5
  41a900:	pop    esi
  41a901:	out    0xa6,eax
  41a903:	lods   eax,DWORD PTR ds:[esi]
  41a904:	jno    0x41a904
  41a906:	mov    edx,0x6f4f72b5
  41a90b:	das    
  41a90c:	mov    esi,0x33b58fe
  41a911:	pop    esi
  41a912:	jle    0x41a8c6
  41a914:	(bad)  
  41a915:	push   edx
  41a917:	jmp    0xd45a:0x44bafe5f
  41a91e:	mov    cs,WORD PTR [edi+0x70]
  41a921:	or     al,BYTE PTR [edi]
  41a923:	sbb    al,0x1b
  41a925:	push   0xffc336de
  41a92a:	nop
  41a92b:	dec    eax
  41a92c:	fisttp QWORD PTR [eax+0x18]
  41a92f:	scas   eax,DWORD PTR es:[edi]
  41a930:	shl    DWORD PTR [edi+0x41],cl
  41a933:	mov    ds:0x70a0ffc3,al
  41a938:	add    ch,bh
  41a93a:	rol    DWORD PTR [edi],0xae
  41a93d:	inc    esi
  41a93e:	xchg   BYTE PTR [eax-0x2e],dh
  41a941:	inc    BYTE PTR [eax]
  41a943:	add    BYTE PTR [edx+0x58],bh
  41a946:	pop    edx
  41a947:	sbb    DWORD PTR [edi-0x21],0x2d7ee770
  41a94e:	jno    0x41a94e
  41a950:	push   cs
  41a951:	or     DWORD PTR [ebx],ebp
  41a953:	cld    
  41a954:	sar    BYTE PTR [ecx+esi*2+0x544cc560],1
  41a95b:	faddp  st(0),st
  41a95d:	out    dx,eax
  41a95e:	mov    ds:0x51113370,al
  41a963:	in     eax,dx
  41a964:	push   es
  41a965:	cmp    ax,0x37b
  41a969:	gs ret 0xa00d
  41a96d:	fneni(8087 only) 
  41a96f:	pop    ebx
  41a970:	jecxz  0x41a9d7
  41a972:	and    eax,0x1e2a1e71
  41a977:	test   DWORD PTR [eax+0x71],0x65817171
  41a97e:	or     BYTE PTR [edi],0x78
  41a981:	fcomi  st,st(0)
  41a983:	pop    ebx
  41a984:	xlat   BYTE PTR ds:[ebx]
  41a985:	gs std 
  41a987:	jo     0x41a969
  41a989:	or     cl,ch
  41a98b:	pusha  
  41a98c:	mov    ds:0x7c934f0,al
  41a991:	or     DWORD PTR [ecx-0x65],edx
  41a994:	or     eax,ecx
  41a996:	call   0xc1527d0b
  41a99b:	lods   eax,DWORD PTR es:[esi]
  41a99d:	fs int 0x70
  41a9a0:	mov    bl,0x65
  41a9a2:	(bad)
  41a9a5:	jno    0x41a9e5
  41a9a7:	mov    BYTE PTR [eax],0x0
  41a9aa:	sub    DWORD PTR [ebp-0x61],esp
  41a9ad:	inc    ebp
  41a9ae:	inc    esp
  41a9af:	or     DWORD PTR [edi*2+0x4bac8b2c],edx
  41a9b6:	sbb    DWORD PTR [ebp-0x63],esp
  41a9b9:	jle    0x41a93e
  41a9bb:	cmp    BYTE PTR gs:[ecx+0x7b],dh
  41a9bf:	adc    eax,0x7140f68e
  41a9c4:	sub    al,0x19
  41a9c6:	inc    edi
  41a9c7:	or     edx,esi
  41a9c9:	inc    ebx
  41a9ca:	cmp    DWORD PTR [esi+0x945a8ff],ecx
  41a9d0:	add    BYTE PTR [esi-0x1700a2ff],ah
  41a9d6:	inc    esp
  41a9d7:	or     edi,eax
  41a9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9da:	push   eax
  41a9db:	arpl   WORD PTR [esi],ax
  41a9dd:	jmp    0xc3419926
  41a9e2:	inc    esp
  41a9e3:	out    dx,eax
  41a9e4:	call   edx
  41a9e6:	inc    esp
  41a9e7:	xchg   esi,eax
  41a9e8:	inc    esp
  41a9e9:	xor    eax,0x3d849594
  41a9ee:	pop    ds
  41a9ef:	arpl   si,di
  41a9f1:	cdq    
  41a9f2:	pop    ss
  41a9f3:	(bad)  
  41a9f5:	es cdq 
  41a9f7:	pusha  
  41a9f8:	out    0xf7,eax
  41a9fa:	das    
  41a9fb:	or     DWORD PTR [eax],eax
  41a9fd:	loop   0x41aa03
  41a9ff:	fadd   DWORD PTR [eax+eax*1]
  41aa02:	ret    
  41aa03:	or     DWORD PTR [eax],eax
  41aa05:	jmp    0xa8698e96
  41aa0a:	inc    esp
  41aa0b:	fs je  0x41a9f3
  41aa0e:	add    BYTE PTR [eax],al
  41aa10:	cld    
  41aa11:	and    BYTE PTR [eax-0x12],cl
  41aa14:	call   0xc6fb34ec
  41aa19:	(bad)  
  41aa1a:	repz (bad) 
  41aa1c:	fsub   DWORD PTR [edx+0x4f]
  41aa1f:	cmp    esp,DWORD PTR [ebx-0x5731b7cf]
  41aa25:	xchg   ecx,eax
  41aa26:	test   BYTE PTR [ecx-0x2e019c48],ah
  41aa2c:	sbb    al,cl
  41aa2e:	(bad)  
  41aa2f:	mov    dh,0xfd
  41aa31:	arpl   WORD PTR [esi-0x1b],sp
  41aa34:	fmul   st(0),st
  41aa36:	jmp    DWORD PTR [ebp-0x6109c432]
  41aa3c:	cwde   
  41aa3d:	arpl   WORD PTR [ecx+eiz*8-0x64],si
  41aa41:	mov    al,BYTE PTR [esi-0x72]
  41aa44:	push   0x6e008491
  41aa49:	fdiv   st(5),st
  41aa4b:	call   DWORD PTR [ebp+ecx*1+0x68]
  41aa4f:	or     eax,0xfefe4e26
  41aa54:	adc    edx,ebp
  41aa56:	cmc    
  41aa57:	jmp    FWORD PTR [ecx-0xc]
  41aa5a:	jae    0x41aa64
  41aa5c:	jbe    0x41aaca
  41aa5e:	inc    ebp
  41aa5f:	call   FWORD PTR [ecx]
  41aa61:	out    0x83,al
  41aa63:	in     al,dx
  41aa64:	adc    esp,esi
  41aa66:	std    
  41aa67:	push   0xffffff9e
  41aa69:	aas    
  41aa6a:	adc    al,0x48
  41aa6c:	fild   WORD PTR [edi]
  41aa6e:	push   DWORD PTR [ebp-0x223ca]
  41aa74:	add    BYTE PTR [eax],al
  41aa76:	imul   esp,DWORD PTR [edx+0x6],0xfd4adae8
  41aa7d:	call   DWORD PTR [edi]
  41aa7f:	xchg   edx,eax
  41aa80:	out    0xf7,al
  41aa82:	pop    ecx
  41aa83:	hlt    
  41aa84:	mov    eax,DWORD PTR [ebp-0x223d6]
  41aa8a:	into   
  41aa8b:	aas    
  41aa8c:	sbb    eax,0xff079f48
  41aa91:	mov    ch,0x36
  41aa93:	fdiv   st(5),st
  41aa95:	jmp    FWORD PTR [ecx+0x60]
  41aa98:	push   es
  41aa99:	call   0x3ef6d8
  41aa9e:	xlat   BYTE PTR ds:[ebx]
  41aa9f:	nop
  41aaa0:	loop   0x41aa99
  41aaa2:	sbb    esp,esi
  41aaa4:	push   0x47ff8600
  41aaa9:	inc    ecx
  41aaaa:	push   ds
  41aaab:	hlt    
  41aaac:	mov    bl,0xd8
  41aaae:	icebp  
  41aaaf:	repz std 
  41aab1:	jmp    DWORD PTR [ebx+0x65]
  41aab4:	out    0x11,al
  41aab6:	popa   
  41aab7:	repnz std 
  41aab9:	mov    DWORD PTR [ebx-0x56000a1a],esp
  41aabf:	xchg   DWORD PTR [ebx+0x6d8347f0],edi
  41aac5:	inc    BYTE PTR [edi-0x4]
  41aac8:	fiadd  DWORD PTR [edx-0x18a834e]
  41aace:	call   0xc4a3a143
  41aad3:	sbb    eax,0xf3d8f65b
  41aad8:	add    dh,BYTE PTR [eax+eax*1+0x0]
  41aadc:	outs   dx,BYTE PTR ds:[esi]
  41aadd:	cmp    BYTE PTR [edx],al
  41aadf:	add    al,bl
  41aae1:	sub    BYTE PTR [ebp+0x74],0x57
  41aae5:	enter  0x3fd6,0xb8
  41aae9:	shr    DWORD PTR [ebp-0x4c],cl
  41aaec:	mov    bh,0x23
  41aaee:	outs   dx,BYTE PTR ds:[esi]
  41aaef:	(bad)  
  41aaf0:	test   al,0x9d
  41aaf2:	adc    ch,al
  41aaf4:	out    dx,eax
  41aaf5:	mov    al,0x6d
  41aaf7:	(bad)  
  41aaf8:	cwde   
  41aaf9:	fstp   QWORD PTR [esi-0xa]
  41aafc:	nop
  41aafd:	sub    ebp,DWORD PTR [esi+0x74]
  41ab00:	aaa    
  41ab01:	clc    
  41ab02:	mov    BYTE PTR [edi],bh
  41ab04:	cmp    bl,0x6d
  41ab07:	mov    ah,0x6f
  41ab09:	sti    
  41ab0a:	ins    DWORD PTR es:[edi],dx
  41ab0b:	(bad)  
  41ab0c:	jo     0x41aaf3
  41ab0e:	adc    ch,al
  41ab10:	mov    ebx,0x60fe6db0
  41ab15:	and    eax,0x7358f64f
  41ab1a:	ins    BYTE PTR es:[edi],dx
  41ab1b:	mov    ah,0x6b
  41ab1d:	inc    ebx
  41ab1e:	ins    BYTE PTR es:[edi],dx
  41ab1f:	dec    BYTE PTR [eax-0x43]
  41ab22:	adc    ebp,eax
  41ab24:	xchg   ebx,eax
  41ab25:	xor    BYTE PTR [ebp-0x2],ch
  41ab28:	cmp    BYTE PTR [ebp+0x63],bh
  41ab2b:	div    BYTE PTR [eax]
  41ab2d:	dec    ebx
  41ab2e:	ins    BYTE PTR es:[edi],dx
  41ab2f:	je     0x41ab88
  41ab31:	cmp    cl,bl
  41ab33:	aas    
  41ab34:	and    BYTE PTR [ebx-0x4cc88b94],bl
  41ab3a:	mov    dh,0xd7
  41ab3c:	sbb    BYTE PTR [ecx],cl
  41ab3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab3f:	ins    DWORD PTR es:[edi],dx
  41ab40:	add    BYTE PTR [eax],al
  41ab42:	or     esp,ebx
  41ab44:	lock pop ebx
  41ab46:	jbe    0x41abab
  41ab48:	xchg   ebp,eax
  41ab49:	ins    DWORD PTR es:[edi],dx
  41ab4a:	stc    
  41ab4b:	fwait
  41ab4c:	mov    al,0x75
  41ab4e:	icebp  
  41ab4f:	popa   
  41ab50:	nop
  41ab51:	loope  0x41aad8
  41ab53:	bound  edi,QWORD PTR [ebp+0x6d]
  41ab56:	fwait
  41ab57:	pop    eax
  41ab58:	jge    0x41abc7
  41ab5a:	fnstenv [eax+0x10]
  41ab5d:	rcl    ecx,0x61
  41ab60:	gs mov bh,0xdc
  41ab63:	pop    ecx
  41ab64:	pop    ebp
  41ab65:	ins    DWORD PTR es:[edi],dx
  41ab66:	test   al,0xd3
  41ab68:	test   eax,0x9361b96c
  41ab6d:	pop    esp
  41ab6e:	mov    ecx,0x65c4561
  41ab73:	(bad)  
  41ab74:	cmp    eax,0x4c9ba16d
  41ab79:	jne    0x41ab14
  41ab7b:	popa   
  41ab7c:	inc    eax
  41ab7d:	xor    eax,0x6d256204
  41ab82:	shr    DWORD PTR [eax+0x15],cl
  41ab85:	ins    DWORD PTR es:[edi],dx
  41ab86:	xor    DWORD PTR [eax-0x3c],0xd6179c0
  41ab8d:	(bad)  
  41ab8e:	js     0x41abff
  41ab90:	mov    ch,0x6d
  41ab92:	imul   esp,DWORD PTR [ecx-0x3],0x7e705cf6
  41ab99:	push   ss
  41ab9a:	inc    edi
  41ab9b:	or     DWORD PTR [eax],esp
  41ab9d:	inc    edx
  41ab9e:	cmp    al,0x9
  41aba0:	cmp    al,0x79
  41aba2:	pop    esp
  41aba3:	test   DWORD PTR [edi+ebp*2+0x9ae0000],esp
  41abaa:	inc    ebx
  41abab:	mov    ecx,0x5be0d739
  41abb0:	jb     0x41ab7b
  41abb2:	lds    ebp,FWORD PTR [edi+edi*4-0x3a]
  41abb6:	mov    esp,0x119b6c
  41abbb:	inc    ecx
  41abbc:	mov    ds:0xa3e940c7,eax
  41abc1:	adc    eax,0x6105d00f
  41abc6:	out    0x95,al
  41abc8:	jno    0x41ac29
  41abca:	(bad)  
  41abcb:	xchg   esi,eax
  41abcc:	icebp  
  41abcd:	or     BYTE PTR [eax-0x77],ch
  41abd0:	or     ecx,edx
  41abd2:	call   DWORD PTR [eax]
  41abd4:	inc    ebp
  41abd5:	or     DWORD PTR [eax],eax
  41abd7:	imul   edi,DWORD PTR [edx+ebp*2-0x4],0x745f6b76
  41abdf:	ins    DWORD PTR es:[edi],dx
  41abe0:	arpl   bp,dx
  41abe2:	pop    es
  41abe3:	push   ecx
  41abe4:	cmc    
  41abe5:	and    bh,bh
  41abe7:	pop    esi
  41abe8:	jge    0x41ac34
  41abea:	add    ebp,ecx
  41abec:	xchg   ecx,eax
  41abed:	xchg   ebx,eax
  41abee:	jmp    0x41ac5a
  41abf0:	or     BYTE PTR [ecx+ebp*2-0x17],ah
  41abf4:	mov    ss,esp
  41abf6:	(bad)  
  41abf7:	mov    ah,0x9c
  41abf9:	push   0x5f2bf6f4
  41abfe:	mov    BYTE PTR [eax+eiz*1-0x14170018],ah
  41ac05:	popf   
  41ac06:	addr16 (bad) 
  41ac08:	mov    esp,0x80ffc9
  41ac0d:	add    BYTE PTR [esi-0x1c16bf38],al
  41ac13:	aam    0x7
  41ac15:	adc    DWORD PTR [ecx-0x13010119],ebx
  41ac1b:	aam    0xfb
  41ac1d:	not    BYTE PTR [edx+0x8]
  41ac20:	call   0xfea130fc
  41ac25:	mov    al,0x1
  41ac27:	or     al,0x0
  41ac29:	xor    al,0xc0
  41ac2b:	je     0x41abad
  41ac2d:	lods   eax,DWORD PTR ds:[esi]
  41ac2e:	xchg   ebx,eax
  41ac2f:	push   edi
  41ac30:	dec    dh
  41ac32:	scas   al,BYTE PTR es:[edi]
  41ac33:	(bad)  
  41ac36:	dec    esi
  41ac37:	hlt    
  41ac38:	jae    0x41ac46
  41ac3a:	loope  0x41ac95
  41ac3c:	push   es
  41ac3d:	call   0x41a4f4
  41ac42:	and    eax,0xb850dcc
  41ac47:	push   es
  41ac48:	add    BYTE PTR [eax],al
  41ac4a:	test   eax,0xee00f649
  41ac4f:	or     eax,DWORD PTR [eax]
  41ac51:	(bad)  
  41ac52:	sub    ebx,ecx
  41ac54:	std    
  41ac55:	pop    es
  41ac56:	fimul  WORD PTR [ebx]
  41ac58:	push   0x0
  41ac5a:	xor    al,0x5
  41ac5c:	push   0x0
  41ac5e:	inc    esp
  41ac5f:	add    eax,0x355a458d
  41ac64:	mov    eax,DWORD PTR [ebp-0x22396]
  41ac6a:	(bad)  
  41ac6b:	bnd jae 0x41ac66
  41ac6e:	adc    DWORD PTR [edx-0x6],ebx
  41ac71:	call   0xf971ac76
  41ac76:	(bad)  
  41ac77:	push   DWORD PTR [ebp-0x8fa8d35]
  41ac7d:	int3   
  41ac7e:	(bad)  
  41ac7f:	jmp    FWORD PTR [esi-0x20d781bd]
  41ac85:	or     edi,edi
  41ac87:	jne    0x41ac1b
  41ac89:	ret    
  41ac8a:	iret   
  41ac8b:	inc    ebp
  41ac8c:	popa   
  41ac8d:	hlt    
  41ac8e:	dec    esi
  41ac8f:	mov    edi,DWORD PTR [esi]
  41ac91:	loop   0x41ac16
  41ac93:	hlt    
  41ac94:	pop    ecx
  41ac95:	hlt    
  41ac96:	std    
  41ac97:	push   eax
  41ac98:	int3   
  41ac99:	ret    
  41ac9a:	mov    edi,0x87f26145
  41ac9f:	test   DWORD PTR [esi],esi
  41aca1:	fdiv   st(5),st
  41aca3:	inc    DWORD PTR [esi-0x4]
  41aca6:	inc    ecx
  41aca7:	jmp    DWORD PTR [ecx+0x3d]
  41acaa:	(bad)  
  41acab:	addr16 xchg edi,eax
  41acad:	popf   
  41acae:	aas    
  41acaf:	add    BYTE PTR [edi+0x37],al
  41acb2:	scas   eax,DWORD PTR es:[edi]
  41acb3:	xlat   BYTE PTR ds:[ebx]
  41acb4:	cmp    BYTE PTR [eax+0x69],dl
  41acb7:	(bad)  
  41acb8:	mov    dl,0x58
  41acba:	pop    edx
  41acbb:	sbb    DWORD PTR [edx-0x3d779661],ecx
  41acc1:	mov    al,ds:0xcb10fe71
  41acc6:	add    ebp,DWORD PTR [eax-0x39]
  41acc9:	sbb    ch,al
  41accb:	inc    DWORD PTR [ecx]
  41accd:	mov    dh,0x4a
  41accf:	idiv   al
  41acd1:	ja     0x41ad3c
  41acd3:	je     0x41ad14
  41acd5:	mov    BYTE PTR [ecx+0x43],ch
  41acd8:	add    BYTE PTR [eax],al
  41acda:	call   0xf3c62866
  41acdf:	xlat   BYTE PTR ds:[ebx]
  41ace0:	imul   edi,esi,0x94da706d
  41ace6:	jg     0x41ad19
  41ace8:	add    al,0xff
  41acea:	xchg   edx,eax
  41aceb:	enter  0xfe71,0xc0
  41acef:	mov    edi,0xccaf07ef
  41acf4:	mov    esi,0x7fe9b0fe
  41acf9:	out    0xb0,eax
  41acfb:	(bad)  
  41acfc:	imul   ecx,DWORD PTR [edx+ecx*8-0x67018e04],0xffadda80
  41ad07:	mov    al,0x2
  41ad09:	call   edx
  41ad0b:	enter  0xfe71,0x80
  41ad0f:	(bad)  
  41ad10:	out    dx,eax
  41ad11:	pop    es
  41ad12:	outs   dx,DWORD PTR ds:[esi]
  41ad13:	sub    al,0xbf
  41ad15:	(bad)  
  41ad16:	jo     0x41ad01
  41ad18:	jg     0x41acfd
  41ad1a:	jo     0x41ad23
  41ad1c:	push   0x69
  41ad1e:	inc    edi
  41ad1f:	js     0x41ad66
  41ad21:	inc    edi
  41ad22:	push   es
  41ad23:	jo     0x41ad8e
  41ad25:	mov    ah,0x6f
  41ad27:	push   edi
  41ad28:	push   0x5c0948fe
  41ad2d:	cld    
  41ad2e:	sub    BYTE PTR [eax-0x6fc696dc],dh
  41ad34:	imul   esp,DWORD PTR [ecx+edi*1+0x5e],0xffffffcd
  41ad39:	ja     0x41acfe
  41ad3b:	cmp    BYTE PTR [ebp+0x21000069],bh
  41ad41:	mov    ecx,0xc8804d50
  41ad46:	call   0xb58288b3
  41ad4b:	imul   ecx,DWORD PTR [ecx],0xe8fc1b5e
  41ad51:	(bad)  
  41ad52:	and    al,0x69
  41ad54:	stc    
  41ad55:	(bad)  
  41ad56:	imul   edx,DWORD PTR [eax-0x7],0x5d
  41ad5a:	lea    eax,[ebp+0x697d58ab]
  41ad60:	loope  0x41ad6a
  41ad62:	cmc    
  41ad63:	fadd   st(5),st
  41ad65:	fwait
  41ad66:	test   BYTE PTR [ecx-0x2f],dh
  41ad69:	pop    ebp
  41ad6a:	call   0xa3cc145e
  41ad6f:	pop    esp
  41ad70:	mov    ecx,0x33045d5d
  41ad75:	rol    al,0x3
  41ad78:	inc    edi
  41ad79:	outs   dx,BYTE PTR ds:[esi]
  41ad7a:	mov    gs,WORD PTR [ecx+0x33]
  41ad7d:	stc    
  41ad7e:	push   eax
  41ad7f:	cmp    BYTE PTR [ebx+0x5e],ah
  41ad82:	cmp    eax,0x3d58d369
  41ad87:	imul   edx,DWORD PTR [ecx-0x60ec4ca3],0x8168e728
  41ad91:	pop    ebp
  41ad92:	push   ebx
  41ad93:	pop    eax
  41ad94:	jno    0x41adf3
  41ad96:	adc    eax,0xf8fb69
  41ad9b:	push   ss
  41ad9c:	sub    DWORD PTR [esi+0x5],ebx
  41ad9f:	imul   ebx,DWORD PTR [ebx+0x68f570],0xff5d5900
  41ada9:	jnp    0x41addf
  41adab:	jno    0x41adb0
  41adad:	scas   eax,DWORD PTR es:[edi]
  41adae:	fistp  WORD PTR [esi-0x2]
  41adb1:	pushf  
  41adb2:	mov    BYTE PTR [ebx-0x2],dl
  41adb5:	fisubr WORD PTR [edi-0x60211c6b]
  41adbb:	pop    ebx
  41adbc:	(bad)  
  41adbd:	push   esp
  41adbe:	push   ebx
  41adbf:	jno    0x41ad84
  41adc1:	add    al,0xae
  41adc3:	pop    ebx
  41adc4:	(bad)  
  41adc5:	je     0x41ad6b
  41adc7:	push   ebx
  41adc8:	(bad)  
  41adc9:	mov    dh,0x9f
  41adcb:	aad    0xf
  41adcd:	shl    DWORD PTR [edx-0x345900e3],0x9d
  41add4:	iret   
  41add5:	xchg   esi,eax
  41add6:	outs   dx,DWORD PTR ds:[esi]
  41add7:	pop    ebx
  41add8:	call   FWORD PTR [esp]
  41addb:	icebp  
  41addc:	add    cl,ch
  41adde:	(bad)  
  41addf:	sahf   
  41ade0:	(bad)  
  41ade1:	cld    
  41ade2:	xor    al,0x71
  41ade4:	imul   edi,DWORD PTR [edi+ebp*2+0x743cfe5b],0x5f6efe53
  41adef:	xchg   ebp,eax
  41adf0:	rcr    DWORD PTR [esi+0x2f],cl
  41adf3:	pop    ebx
  41adf4:	(bad)  
  41adf5:	aam    0x54
  41adf7:	jno    0x41ad84
  41adf9:	adc    al,0x1e
  41adfb:	pop    ebx
  41adfc:	(bad)  
  41adfd:	aam    0x54
  41adff:	pop    esp
  41ae00:	mov    ah,0x21
  41ae02:	pop    ss
  41ae03:	pop    ebx
  41ae04:	(bad)  
  41ae05:	ds test eax,0x1e804
  41ae0b:	add    BYTE PTR ds:0xd92efe5b,bl
  41ae11:	xor    al,0xf6
  41ae13:	es out dx,eax
  41ae15:	arpl   WORD PTR [eax-0x1a51057],si
  41ae1b:	pop    esp
  41ae1c:	hlt    
  41ae1d:	push   edx
  41ae1e:	dec    BYTE PTR [esi]
  41ae20:	or     al,0xa6
  41ae22:	aas    
  41ae23:	add    BYTE PTR [ecx-0xf],cl
  41ae26:	std    
  41ae27:	mov    ch,0x4a
  41ae29:	fscale 
  41ae2b:	inc    DWORD PTR [esi-0x73]
  41ae2e:	call   FWORD PTR ds:[ecx-0x1c]
  41ae32:	mov    bl,0xe8
  41ae34:	and    esp,esp
  41ae36:	std    
  41ae37:	call   0x3ef3fa
  41ae3c:	sbb    DWORD PTR [edx-0x1c06081e],ebx
  41ae42:	out    0x85,al
  41ae44:	outs   dx,BYTE PTR ds:[esi]
  41ae45:	in     al,0xfd
  41ae47:	call   DWORD PTR [ebx-0x26000a1b]
  41ae4d:	mov    esp,0xe3d94078
  41ae52:	std    
  41ae53:	mov    ch,0xc2
  41ae55:	jmp    0x41ae54
  41ae57:	call   esi
  41ae59:	xor    edi,DWORD PTR [esi]
  41ae5b:	(bad)  
  41ae5c:	(bad)  
  41ae5e:	inc    ebx
  41ae5f:	clc    
  41ae60:	(bad)  
  41ae61:	out    dx,al
  41ae62:	sti    
  41ae63:	dec    ecx
  41ae65:	jecxz  0x41aeda
  41ae67:	cld    
  41ae68:	mov    dh,0xad
  41ae6a:	adc    BYTE PTR [eax],al
  41ae6c:	ficomp WORD PTR [ecx+eax*8]
  41ae6f:	or     al,0x0
  41ae71:	add    dh,bl
  41ae73:	cmp    BYTE PTR [ecx-0x536d214],cl
  41ae79:	push   0xffffffae
  41ae7b:	inc    ecx
  41ae7c:	dec    ebx
  41ae7d:	call   DWORD PTR [ebx+0x3b81e65f]
  41ae83:	in     al,0xfd
  41ae85:	mov    ebx,esi
  41ae87:	jecxz  0x41ae86
  41ae89:	jne    0x41ae21
  41ae8b:	aas    
  41ae8c:	dec    ebx
  41ae8d:	dec    eax
  41ae8e:	fild   WORD PTR [edi]
  41ae90:	push   DWORD PTR ds:0x40fc69
  41ae96:	push   esi
  41ae97:	test   bl,bh
  41ae99:	call   FWORD PTR [ecx-0x1c]
  41ae9c:	jae    0x41aea6
  41ae9e:	inc    edi
  41ae9f:	mov    dh,BYTE PTR [edi-0x258df9b9]
  41aea5:	add    DWORD PTR [edi+0x72],eax
  41aea8:	and    bh,0xca
  41aeab:	pop    esp
  41aeac:	gs (bad) 
  41aeae:	push   eax
  41aeaf:	fsub   QWORD PTR [esi-0x2]
  41aeb2:	shr    BYTE PTR [ecx+0x5a],cl
  41aeb5:	xchg   ebx,eax
  41aeb6:	and    BYTE PTR [ebx+0x65],0xc8
  41aeba:	add    eax,0xbc550265
  41aebf:	inc    esp
  41aec0:	add    ebx,0x69cf132b
  41aec6:	inc    edi
  41aec7:	mov    dh,0xb5
  41aec9:	(bad)  
  41aeca:	xchg   edx,eax
  41aecb:	pop    eax
  41aecc:	pop    edx
  41aecd:	xor    eax,0x88659352
  41aed2:	sub    BYTE PTR [ecx+edi*2+0x2f000034],0x38
  41aeda:	ret    
  41aedb:	dec    ebp
  41aedd:	cmp    eax,0x70862816
  41aee2:	cmp    BYTE PTR [esi],0x47
  41aee5:	hlt    
  41aee6:	shl    BYTE PTR [edi-0x11],0x18
  41aeea:	(bad)  
  41aeed:	js     0x41aed8
  41aeef:	adc    DWORD PTR [edi+0x70],eax
  41aef2:	stc    
  41aef3:	mov    edi,0xe7cc4b53
  41aef8:	loope  0x41ae93
  41aefa:	gs (bad) 
  41aefc:	pop    ss
  41aefd:	cmp    BYTE PTR [edx],al
  41aeff:	add    BYTE PTR [eax-0xf258e],ah
  41af05:	mov    al,0x2
  41af07:	push   eax
  41af08:	mov    al,ds:0xb7e7fa9d
  41af0d:	inc    esp
  41af0e:	gs (bad) 
  41af10:	lahf   
  41af11:	aam    0x25
  41af13:	dec    DWORD PTR [eax-0x38b9fc39]
  41af19:	or     edi,esp
  41af1b:	add    esi,edx
  41af1d:	pop    esi
  41af1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af1f:	addr16 xor eax,0x69664f49
  41af25:	pop    edx
  41af26:	or     eax,0xee21b271
  41af2b:	lock popf 
  41af2d:	pop    edx
  41af2e:	jae    0x41af97
  41af30:	push   ecx
  41af31:	aam    0xe0
  41af33:	pop    ebx
  41af34:	xor    BYTE PTR [esi+ebp*8],bl
  41af37:	mov    eax,gs:0x42afbb
  41af3d:	add    BYTE PTR [ecx+ecx*1+0x34],al
  41af41:	jns    0x41af5f
  41af43:	xchg   BYTE PTR [eax+ebp*2-0x4abcf662],ch
  41af4a:	and    esp,edx
  41af4c:	lock pop ebx
  41af4e:	ficomp WORD PTR [esi+edi*4]
  41af51:	gs mov edi,0x8dab4c3
  41af57:	loop   0x41af27
  41af59:	mov    edx,0x66110987
  41af5e:	or     al,0xe8
  41af61:	cmp    ecx,DWORD PTR fs:[edx]
  41af64:	rol    dl,0xe8
  41af67:	popa   
  41af68:	push   0xf159e1c2
  41af6d:	inc    ebx
  41af6e:	push   esp
  41af6f:	add    BYTE PTR [ecx],bl
  41af71:	(bad)  
  41af73:	pop    ecx
  41af74:	test   DWORD PTR [esi-0x3cdfd5a0],esp
  41af7a:	ror    cl,0x65
  41af7d:	out    dx,eax
  41af7e:	inc    eax
  41af7f:	jno    0x41af7e
  41af81:	fbstp  TBYTE PTR [ecx+0x69b94059]
  41af87:	pop    edx
  41af88:	dec    ebp
  41af89:	fsub   QWORD PTR [eax+0x20a65559]
  41af8f:	sub    dh,BYTE PTR [eax-0x1e6f3e]
  41af95:	push   cs
  41af96:	int3   
  41af97:	enter  0x2dff,0x70
  41af9b:	add    eax,ebp
  41af9d:	mov    bh,0x98
  41af9f:	pop    edx
  41afa0:	(bad)  
  41afa1:	push   ds
  41afa2:	add    BYTE PTR [eax],al
  41afa4:	pusha  
  41afa5:	pop    ebp
  41afa6:	(bad)  
  41afa7:	pushf  
  41afa8:	ins    BYTE PTR es:[edi],dx
  41afa9:	popa   
  41afaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afab:	int    0xeb
  41afad:	pop    edx
  41afae:	enter  0x472b,0x9
  41afb2:	push   ebp
  41afb3:	jb     0x41afa4
  41afb5:	xchg   bl,al
  41afb7:	cmc    
  41afb8:	jp     0x41af6c
  41afba:	imul   ebp,ecx,0x5cfec91e
  41afc0:	cmp    esi,DWORD PTR [ecx+0x48]
  41afc3:	sbb    eax,0x2c8857aa
  41afc8:	lahf   
  41afc9:	xor    DWORD PTR [ecx+eax*1],0x43
  41afcd:	retf   0x71ff
  41afd0:	popa   
  41afd1:	and    eax,0x894b2828
  41afd6:	ds jmp 0xefa97df4
  41afdc:	mov    ebp,0x9b3dffc9
  41afe1:	xchg   BYTE PTR [eax],dl
  41afe3:	jmp    0x1e01b42c
  41afe8:	inc    edx
  41afe9:	mov    edi,0x579c58e7
  41afee:	(bad)  
  41afef:	sbb    ebx,edi
  41aff1:	pop    eax
  41aff2:	dec    BYTE PTR [esi+0x2047f0aa]
  41aff8:	add    al,0x59
  41affa:	dec    esi
  41affb:	outs   dx,BYTE PTR ds:[esi]
  41affc:	mov    cl,0x10
  41affe:	call   0xfe99578d
  41b003:	push   ecx
  41b004:	jnp    0x41b01c
  41b006:	call   DWORD PTR [esi+0x0]
  41b009:	add    BYTE PTR [edi],cl
  41b00b:	or     DWORD PTR [esi+0x69],eax
  41b00e:	push   0x9
  41b010:	jne    0x41b012
  41b012:	add    al,0x96
  41b014:	cli    
  41b015:	xor    ebx,DWORD PTR [esi-0x5d]
  41b018:	std    
  41b019:	call   DWORD PTR [ecx-0x13]
  41b01c:	lock scas al,BYTE PTR es:[edi]
  41b01e:	jbe    0x41b075
  41b020:	jae    0x41afdd
  41b022:	and    DWORD PTR [edi-0x6],esp
  41b025:	(bad)  
  41b026:	fist   DWORD PTR [esi+eiz*8+0x2b]
  41b02a:	xchg   edx,eax
  41b02b:	in     eax,dx
  41b02c:	std    
  41b02d:	pop    edi
  41b02e:	mov    al,0x13
  41b030:	rol    DWORD PTR [esi+ebp*2],0x47
  41b034:	mov    esp,ebp
  41b036:	fst    QWORD PTR [edi]
  41b038:	sti    
  41b039:	push   esi
  41b03a:	test   eax,0xdf69fe32
  41b03f:	in     al,dx
  41b040:	jae    0x41b04a
  41b042:	push   ss
  41b043:	enter  0xff39,0x11
  41b047:	xchg   BYTE PTR [ebx-0x4],al
  41b04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b04b:	repnz daa 
  41b04d:	sub    BYTE PTR [edi+0xd],ch
  41b050:	mov    edi,DWORD PTR ds:0x412532
  41b056:	sahf   
  41b057:	sub    al,0x0
  41b059:	je     0x41b0b6
  41b05b:	gs push edx
  41b05d:	dec    ecx
  41b05e:	das    
  41b05f:	or     eax,0x5cfee857
  41b064:	(bad)  
  41b065:	push   ebp
  41b067:	retf   
  41b068:	jb     0x41b089
  41b06a:	sub    ch,ah
  41b06c:	xor    DWORD PTR [eax+0x0],ecx
  41b06f:	add    cl,dl
  41b071:	jmp    0x41b0c1
  41b073:	push   0xbeef0bee
  41b078:	arpl   WORD PTR ss:[edi+0x41],ax
  41b07c:	ficomp WORD PTR [ebx-0x1c598a03]
  41b082:	and    esp,DWORD PTR [ebx+0x21]
  41b085:	in     al,dx
  41b086:	out    0x51,al
  41b088:	push   eax
  41b089:	in     al,dx
  41b08a:	std    
  41b08b:	jmp    0x41b0d4
  41b08d:	popa   
  41b08e:	enter  0x617f,0x62
  41b092:	xlat   BYTE PTR ds:[ebx]
  41b093:	stc    
  41b094:	add    esi,ecx
  41b096:	push   ss
  41b097:	ror    dh,0x16
  41b09a:	arpl   si,di
  41b09c:	mov    BYTE PTR [ebx],dl
  41b09e:	mov    dl,0x37
  41b0a0:	dec    eax
  41b0a1:	popf   
  41b0a2:	popf   
  41b0a3:	(bad)  
  41b0a4:	repnz sub eax,0xfa3f7463
  41b0aa:	mov    al,0x3a
  41b0ac:	push   0x8e5dc2fe
  41b0b1:	and    ecx,DWORD PTR [eax]
  41b0b3:	add    dl,dh
  41b0b5:	fisubr DWORD PTR [edi-0x7e]
  41b0b8:	mov    edx,DWORD PTR [ebp-0x14]
  41b0bb:	(bad)  
  41b0bc:	fidiv  WORD PTR [ebx+0x61]
  41b0bf:	je     0x41b110
  41b0c1:	or     bl,dl
  41b0c3:	cmp    bh,BYTE PTR [eax]
  41b0c5:	jo     0x41b052
  41b0c7:	inc    esp
  41b0c8:	xor    edi,DWORD PTR [ecx+0x608648d4]
  41b0ce:	popa   
  41b0cf:	je     0x41b120
  41b0d1:	dec    eax
  41b0d2:	rcr    bh,1
  41b0d4:	add    BYTE PTR [eax],al
  41b0d6:	sbb    BYTE PTR [eax+0x61],dl
  41b0d9:	je     0x41b0ee
  41b0db:	cwde   
  41b0dc:	xlat   BYTE PTR ds:[ebx]
  41b0dd:	pop    es
  41b0de:	pop    ds
  41b0df:	sbb    ebx,DWORD PTR [edi]
  41b0e1:	inc    DWORD PTR [eax]
  41b0e3:	stos   BYTE PTR es:[edi],al
  41b0e4:	inc    esp
  41b0e5:	add    eax,DWORD PTR [edi+0x15]
  41b0e8:	(bad)  
  41b0e9:	jmp    0x41b0af
  41b0eb:	lods   al,BYTE PTR ds:[esi]
  41b0ec:	pop    esi
  41b0ed:	push   esi
  41b0ee:	pop    edi
  41b0ef:	test   eax,0x78473f3c
  41b0f4:	aam    0x0
  41b0f6:	add    al,0x90
  41b0f8:	dec    ecx
  41b0f9:	inc    esp
  41b0fa:	shl    DWORD PTR [eax+0x2],cl
  41b0fd:	add    BYTE PTR [edi+0x1f],al
  41b100:	mov    WORD PTR [eax+0x6],cs
  41b103:	pusha  
  41b104:	popa   
  41b105:	je     0x41b156
  41b107:	or     DWORD PTR [esi+0x8],esi
  41b10a:	xchg   edx,eax
  41b10b:	ret    
  41b10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b10d:	add    esp,DWORD PTR [ebx]
  41b10f:	test   al,0x18
  41b111:	add    al,0x47
  41b113:	or     DWORD PTR [ecx-0x25],ebp
  41b116:	inc    esi
  41b117:	or     DWORD PTR [ebp-0xf236ff5],edi
  41b11d:	imul   ebx,DWORD PTR [ebp+0x1c],0x36
  41b121:	bound  ebp,QWORD PTR [edi-0x6f]
  41b124:	call   0xc4a2f82c
  41b129:	retf   0x5671
  41b12c:	sbb    eax,0x66140d8
  41b131:	sbb    al,0x60
  41b133:	push   esi
  41b134:	dec    ecx
  41b135:	cmp    al,0xe
  41b137:	enter  0xe7e8,0x0
  41b13b:	add    BYTE PTR [ecx+0x1c],dl
  41b13e:	jmp    0x624af846
  41b143:	inc    edi
  41b144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b145:	push   esi
  41b146:	mov    bl,0x3
  41b148:	inc    edi
  41b149:	or     ecx,ebp
  41b14b:	mov    dh,0x80
  41b14d:	loope  0x41b0d2
  41b14f:	cmp    eax,0xc2410968
  41b154:	std    
  41b155:	enter  0xb3e8,0xa4
  41b159:	or     BYTE PTR [ebx],0x4
  41b15c:	inc    edi
  41b15d:	or     ecx,ebp
  41b15f:	pusha  
  41b160:	xchg   ebx,eax
  41b161:	add    DWORD PTR [esi+0x215c7f9],esi
  41b167:	les    edi,FWORD PTR [eax]
  41b169:	or     DWORD PTR ds:0xf850c401,ebx
  41b16f:	xlat   BYTE PTR ds:[ebx]
  41b170:	aas    
  41b171:	dec    esi
  41b172:	sub    esp,DWORD PTR [eax+0x47]
  41b175:	or     ecx,ebp
  41b177:	add    ebp,esp
  41b179:	test   DWORD PTR [ebp+0x27c2ee17],0x1bc804
  41b183:	xchg   esp,eax
  41b184:	xchg   ecx,eax
  41b185:	enter  0x80ff,0xfa
  41b189:	push   ds
  41b18a:	jmp    DWORD PTR [esi-0x36]
  41b18d:	dec    ecx
  41b18e:	pop    ss
  41b18f:	push   edx
  41b190:	jle    0x41b14e
  41b192:	mov    al,BYTE PTR [ebp-0x2e]
  41b195:	mov    esp,0x580620b
  41b19a:	(bad)  
  41b19b:	mov    ebx,0x817f863c
  41b1a0:	add    BYTE PTR [eax],al
  41b1a2:	inc    ebx
  41b1a3:	or     DWORD PTR [eax],eax
  41b1a5:	ss cdq 
  41b1a7:	add    DWORD PTR [edi-0x1a9f097],ecx
  41b1ad:	jmp    0x6e518999
  41b1b2:	ret    
  41b1b3:	cdq    
  41b1b4:	(bad)  
  41b1b5:	call   0x2c7e3bfe
  41b1ba:	mov    eax,ecx
  41b1bc:	(bad)  
  41b1bd:	call   0xb540aa3a
  41b1c2:	or     eax,0xa7e940c0
  41b1c7:	sbb    eax,0x5505a3dd
  41b1cc:	out    0x1,al
  41b1ce:	dec    esi
  41b1cf:	push   esp
  41b1d0:	(bad)  
  41b1d1:	mov    eax,ds:0xe9000944
  41b1d6:	loope  0x41b222
  41b1d8:	and    ebp,ecx
  41b1da:	and    BYTE PTR [esp+eax*1+0x944e9],al
  41b1e1:	push   0x7f
  41b1e3:	or     BYTE PTR [ebx-0x7afbbb0a],al
  41b1e9:	out    dx,al
  41b1ea:	addr16 push ebx
  41b1ec:	(bad)  
  41b1ed:	jb     0x41b1f8
  41b1ef:	push   ecx
  41b1f0:	pop    esi
  41b1f1:	mov    al,0x82
  41b1f3:	or     BYTE PTR [eax],al
  41b1f5:	aas    
  41b1f6:	repz aas 
  41b1f8:	fisubr DWORD PTR [ecx]
  41b1fa:	inc    ebx
  41b1fb:	push   ecx
  41b1fc:	jno    0x41b1fe
  41b1fe:	(bad)  
  41b200:	std    
  41b201:	mov    edx,DWORD PTR [edi+0x8bf625]
  41b207:	add    bh,ah
  41b209:	pusha  
  41b20a:	jle    0x41b1b4
  41b20c:	pushf  
  41b20d:	pop    es
  41b20e:	mov    ecx,ecx
  41b210:	mov    BYTE PTR [ebp-0x79b91439],al
  41b216:	mov    DWORD PTR [ebx],0x50c78570
  41b21c:	and    eax,0x98a7e6bf
  41b221:	or     BYTE PTR [eax],al
  41b223:	mov    edx,DWORD PTR [edi-0x70]
  41b226:	mov    ecx,ecx
  41b228:	ins    DWORD PTR es:[edi],dx
  41b229:	into   
  41b22a:	mov    ecx,ecx
  41b22c:	fadd   DWORD PTR ds:0x4a4275f6
  41b232:	rcl    DWORD PTR [ebp-0xb],0xe3
  41b236:	data16 or BYTE PTR [edx],bl
  41b239:	dec    eax
  41b23a:	(bad)  
  41b23b:	idiv   DWORD PTR [edi+eax*1+0x4ad5ffc3]
  41b242:	push   es
  41b243:	or     ebx,DWORD PTR [esi]
  41b245:	cmp    al,0xa
  41b247:	jmp    0x41b27c
  41b249:	jmp    0x387e:0x4826fe06
  41b250:	push   ds
  41b251:	xor    esp,esi
  41b253:	leave  
  41b254:	fadd   QWORD PTR [eax]
  41b256:	add    BYTE PTR [ebp-0x5b],dl
  41b259:	fld    DWORD PTR [ecx+0x6697f2c4]
  41b25f:	xor    dl,ch
  41b261:	dec    esp
  41b262:	(bad)  
  41b263:	test   DWORD PTR [esi+ecx*1-0x3d],0xf241b1ff
  41b26b:	add    BYTE PTR [eax],al
  41b26d:	add    dh,ch
  41b26f:	pop    es
  41b270:	add    BYTE PTR [ebx],ch
  41b272:	add    eax,0x2efc437a
  41b277:	mov    ah,0x73
  41b279:	or     BYTE PTR [edi-0x76],al
  41b27c:	js     0x41b28b
  41b27e:	inc    edi
  41b27f:	bound  eax,QWORD PTR [edi+0x5d954fbf]
  41b285:	je     0x41b2c6
  41b287:	jp     0x41b2b1
  41b289:	xor    al,0xc0
  41b28b:	fimul  DWORD PTR [esp+eax*2-0x184bde41]
  41b292:	and    ebp,DWORD PTR [esi]
  41b294:	pop    edi
  41b295:	(bad)  
  41b296:	mov    esi,0x1afe56ac
  41b29b:	mov    esi,0x624a536b
  41b2a0:	add    cl,BYTE PTR [ebx]
  41b2a2:	xchg   DWORD PTR [ebp-0x35ed010a],edx
  41b2a8:	pop    esi
  41b2a9:	je     0x41b326
  41b2ab:	jno    0x41b317
  41b2ad:	xchg   DWORD PTR [ebx],edi
  41b2af:	and    ebx,DWORD PTR [edi-0x2]
  41b2b2:	cli    
  41b2b3:	sub    eax,0x623a416c
  41b2b8:	add    bh,bh
  41b2ba:	fisubr DWORD PTR [ecx+0x6a]
  41b2bd:	repz adc al,BYTE PTR [ebx]
  41b2c0:	pop    edi
  41b2c1:	adc    dl,0x55
  41b2c4:	add    dh,BYTE PTR [ecx+ebp*1+0x7a]
  41b2c8:	push   edi
  41b2c9:	dec    ecx
  41b2ca:	xchg   BYTE PTR [eax+0x5d],ah
  41b2cd:	je     0x41b302
  41b2cf:	or     DWORD PTR [ebx+0x4700000d],edx
  41b2d5:	pusha  
  41b2d6:	or     eax,eax
  41b2d8:	mov    bl,0x6d
  41b2da:	cdq    
  41b2db:	add    BYTE PTR [edi+0x60],al
  41b2de:	add    bh,bh
  41b2e0:	xchg   edx,eax
  41b2e1:	cmp    al,0x6a
  41b2e3:	add    eax,0x8a5d4b53
  41b2e8:	add    al,0x28
  41b2ea:	dec    ebp
  41b2eb:	ror    DWORD PTR [ebx+0x60],0xb7
  41b2ef:	mov    ch,bl
  41b2f1:	enter  0xdb9d,0x87
  41b2f5:	or     ecx,ebp
  41b2f7:	pop    ebx
  41b2f8:	jbe    0x41b302
  41b2fa:	stos   BYTE PTR es:[edi],al
  41b2fb:	pop    esi
  41b2fc:	loope  0x41b2da
  41b2fe:	loopne 0x41b36b
  41b300:	sub    ebx,DWORD PTR [ebx]
  41b302:	mov    ds,WORD PTR [esi+0x5e]
  41b305:	add    DWORD PTR [ecx],edx
  41b307:	push   edi
  41b308:	and    eax,ecx
  41b30a:	call   0x8142ee6d
  41b30f:	fdiv   QWORD PTR [eax+0x52]
  41b312:	ins    DWORD PTR es:[edi],dx
  41b313:	jmp    0x2c429460
  41b318:	push   es
  41b319:	or     DWORD PTR [esi-0x28],ebx
  41b31c:	dec    eax
  41b31d:	popa   
  41b31e:	ret    0x981b
  41b321:	push   edx
  41b322:	dec    ebp
  41b323:	fmul   DWORD PTR [eax+0x61]
  41b326:	xor    al,0x60
  41b328:	mov    DWORD PTR [edx-0x80],edx
  41b32b:	add    al,0x47
  41b32d:	or     ecx,ebp
  41b32f:	dec    esp
  41b330:	xchg   BYTE PTR ds:0x65bdb8e9,cl
  41b336:	imul   eax,DWORD PTR [edi+0x0],0xe3e17000
  41b33d:	inc    eax
  41b33e:	and    BYTE PTR [ecx],cl
  41b340:	adc    ecx,edx
  41b342:	inc    edi
  41b343:	inc    esi
  41b344:	or     eax,0x604db5e
  41b349:	fadd   DWORD PTR [eax+0x61]
  41b34c:	js     0x41b367
  41b34e:	inc    eax
  41b34f:	push   edx
  41b350:	sub    eax,0xe9083cc8
  41b355:	add    eax,DWORD PTR [edi-0x7c]
  41b358:	sub    ebx,DWORD PTR [eax+edi*2-0x1f]
  41b35c:	iret   
  41b35d:	retf   0x987
  41b360:	ror    DWORD PTR [edx-0x80],0x52
  41b364:	int    0x9
  41b366:	pop    es
  41b367:	fisttp QWORD PTR [edx]
  41b369:	mov    ah,0xc5
  41b36b:	rol    eax,cl
  41b36d:	hlt    
  41b36e:	jnp    0x41b36b
  41b370:	inc    DWORD PTR [edx-0xd]
  41b373:	sar    esi,0x34
  41b376:	push   edi
  41b377:	popa   
  41b378:	fnclex 
  41b37a:	mov    edx,DWORD PTR [ebx+0xa]
  41b37d:	test   eax,0x2cc70aff
  41b382:	addr16 push edx
  41b384:	(bad)  
  41b385:	jmp    0xc2a614ce
  41b38a:	imul   edx,DWORD PTR [ebx-0x76],0x24
  41b38e:	daa    
  41b38f:	inc    ecx
  41b390:	shl    ecx,0x44
  41b393:	mov    esp,0xe9f67d8a
  41b398:	pop    edi
  41b399:	inc    esp
  41b39a:	adc    DWORD PTR [ecx-0xa],0xffffffdb
  41b39e:	add    BYTE PTR [eax],al
  41b3a0:	inc    ebp
  41b3a1:	inc    esi
  41b3a2:	inc    BYTE PTR [edx]
  41b3a4:	pop    esi
  41b3a5:	push   ebx
  41b3a6:	je     0x41b389
  41b3a8:	sbb    al,0xcb
  41b3aa:	inc    BYTE PTR [esi-0x16]
  41b3ad:	(bad)  
  41b3ae:	mov    edi,0xff7bc8ee
  41b3b3:	call   0xe1b605fc
  41b3b8:	fmul   QWORD PTR [ebp+0x31]
  41b3bb:	es or  bh,bh
  41b3be:	mov    edi,0x89604994
  41b3c3:	jmp    0x9540bd0c
  41b3c8:	inc    eax
  41b3c9:	push   edx
  41b3ca:	je     0x41b3bd
  41b3cc:	fsub   st(2),st
  41b3ce:	(bad)  
  41b3cf:	(bad)  
  41b3d0:	mov    ds:0xace1744f,eax
  41b3d5:	pop    ss
  41b3d6:	cmp    ch,dh
  41b3d8:	xchg   ebx,eax
  41b3d9:	add    eax,eax
  41b3db:	pop    esp
  41b3dc:	inc    ebp
  41b3dd:	fs jo  0x41b3be
  41b3e0:	stc    
  41b3e1:	or     al,ch
  41b3e3:	mov    al,ds:0xe2fe503c
  41b3e8:	test   ch,dl
  41b3ea:	add    DWORD PTR [eax],eax
  41b3ec:	cmc    
  41b3ed:	imul   edi,ebp,0x1fe4f675
  41b3f3:	cmp    DWORD PTR [ecx+0x3bc009ad],esi
  41b3f9:	or     ebp,ebx
  41b3fb:	push   ebp
  41b3fc:	push   esi
  41b3fd:	xchg   edi,eax
  41b3fe:	and    eax,0x73adee41
  41b403:	or     BYTE PTR [eax],al
  41b405:	add    dh,al
  41b407:	xchg   edx,eax
  41b408:	cmp    bh,bh
  41b40a:	rol    DWORD PTR [ecx],0xc0
  41b40d:	jne    0x41b3eb
  41b40f:	loope  0x41b451
  41b411:	(bad)  
  41b412:	mov    ebx,0xf69ae804
  41b417:	lods   eax,DWORD PTR ds:[esi]
  41b418:	std    
  41b419:	or     ebx,esi
  41b41b:	aaa    
  41b41c:	add    bl,ch
  41b41e:	dec    edx
  41b41f:	scas   al,BYTE PTR es:[edi]
  41b420:	jae    0x41b42a
  41b422:	idiv   BYTE PTR [ecx+0xf1ff36]
  41b428:	shl    BYTE PTR [ebp-0x64],0xe1
  41b42c:	and    al,0xff
  41b42e:	retf   
  41b42f:	add    al,0xe8
  41b431:	xchg   DWORD PTR [ebp+ebp*4-0x3],edi
  41b435:	xor    DWORD PTR [esi],0x2c
  41b438:	ja     0x41b43c
  41b43a:	inc    ebp
  41b43b:	lds    ecx,FWORD PTR [ecx]
  41b43d:	ror    dl,0x59
  41b440:	cmp    eax,DWORD PTR [eax]
  41b442:	outs   dx,BYTE PTR ds:[esi]
  41b443:	pop    esp
  41b444:	(bad)  
  41b445:	jb     0x41b4a9
  41b447:	jno    0x41b448
  41b449:	call   FWORD PTR [esi+0xc]
  41b44c:	jmp    0x41b453
  41b44e:	add    eax,0x2e000009
  41b453:	add    ecx,0x6ca675b
  41b459:	add    bl,bl
  41b45b:	sub    dl,0x68
  41b45e:	aas    
  41b45f:	adc    edi,DWORD PTR [edi]
  41b461:	add    BYTE PTR [esi],ah
  41b463:	aaa    
  41b464:	inc    edx
  41b466:	inc    edi
  41b467:	aaa    
  41b468:	pop    edx
  41b469:	je     0x41b46b
  41b46b:	add    BYTE PTR [ebx+0x3f],al
  41b46e:	rol    BYTE PTR [edi],1
  41b470:	pop    ds
  41b471:	add    BYTE PTR [ebx-0x2],bl
  41b474:	add    BYTE PTR [ebx+0x42],bl
  41b477:	je     0x41b4d6
  41b479:	xchg   edi,eax
  41b47a:	ror    BYTE PTR [ebx],1
  41b47c:	lock adc al,0xc
  41b47f:	call   0xfe9c5bd4
  41b484:	dec    esp
  41b485:	mov    ds:0xecd80ad0,al
  41b48a:	pop    es
  41b48b:	call   FWORD PTR [edx+0x6a]
  41b48e:	push   0x7
  41b490:	enter  0x5a86,0xc8
  41b494:	test   DWORD PTR [ecx+0x2],ebx
  41b497:	push   ebp
  41b498:	int3   
  41b499:	test   DWORD PTR [esi-0x4d0d543d],eax
  41b49f:	addr16 daa 
  41b4a1:	enter  0xffc3,0x98
  41b4a5:	xor    eax,DWORD PTR [ebx]
  41b4a7:	ret    
  41b4a8:	cwde   
  41b4a9:	or     bh,BYTE PTR [edi]
  41b4ab:	out    0x85,eax
  41b4ad:	call   0xff66:0x9c80fe59
  41b4b4:	and    BYTE PTR [ecx+0x2],0x8d
  41b4b8:	add    al,dh
  41b4ba:	mov    bl,0xe7
  41b4bc:	mov    esi,0xc4fe5950
  41b4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c2:	data16 (bad) 
  41b4c4:	fisttp DWORD PTR [ecx]
  41b4c6:	mov    DWORD PTR [ebx+ebp*2-0x6f],eax
  41b4ca:	push   0x79
  41b4cc:	push   ss
  41b4cd:	call   FWORD PTR [edx-0x7e]
  41b4d0:	add    BYTE PTR [eax],al
  41b4d2:	retf   0x3f5
  41b4d5:	jne    0x41b525
  41b4d7:	ffree  st(0)
  41b4d9:	jmp    0x41b472
  41b4db:	or     bh,ch
  41b4dd:	xor    BYTE PTR [eax],dh
  41b4df:	pusha  
  41b4e0:	test   DWORD PTR [ebx+ebx*1+0xa],edi
  41b4e4:	jmp    0xe8c17ff3
  41b4e9:	add    eax,DWORD PTR [edi+0x7c]
  41b4ec:	sub    edx,DWORD PTR [eax+eax*4+0x4e]
  41b4f0:	push   ebx
  41b4f1:	push   0x5ac5e120
  41b4f6:	add    DWORD PTR [ebx-0x338dfb40],ecx
  41b4fc:	jne    0x41b4e3
  41b4fe:	sub    eax,ecx
  41b500:	call   0x2b884473
  41b505:	pusha  
  41b506:	dec    esi
  41b507:	or     ecx,ebp
  41b509:	add    eax,DWORD PTR [eax]
  41b50b:	lds    eax,FWORD PTR [eax-0x16f6b8fd]
  41b511:	mov    BYTE PTR [ebx+0x3b5b1861],al
  41b517:	pop    ebp
  41b518:	adc    eax,0x75b3b56c
  41b51d:	pop    edx
  41b51e:	cmp    eax,0xc5f3f449
  41b523:	int3   
  41b524:	push   eax
  41b525:	add    ebx,DWORD PTR [ebx]
  41b527:	add    ebx,DWORD PTR [esi-0x30]
  41b52a:	mov    al,ds:0x91591161
  41b52f:	dec    esi
  41b530:	popa   
  41b531:	cmp    ecx,DWORD PTR [ecx+0x6b50d4]
  41b537:	add    BYTE PTR [ecx],dh
  41b539:	sbb    BYTE PTR [esi],bh
  41b53b:	pop    edx
  41b53c:	dec    ebp
  41b53d:	xor    bh,BYTE PTR [ebx+0x44ccc5f0]
  41b543:	add    esi,ebx
  41b545:	std    
  41b546:	and    eax,0x70e164c8
  41b54b:	neg    BYTE PTR [eax+0x4e]
  41b54e:	add    BYTE PTR [esi+0x3d],dh
  41b551:	or     ecx,ebp
  41b553:	outs   dx,BYTE PTR ds:[esi]
  41b554:	xchg   ecx,eax
  41b555:	(bad)  
  41b556:	out    0xc2,eax
  41b558:	ror    BYTE PTR [esi],0xe9
  41b55b:	sar    BYTE PTR [esi],1
  41b55d:	(bad)  
  41b55e:	jmp    FWORD PTR [eax+0x4d]
  41b561:	or     DWORD PTR [ebp+eiz*8+0x39],esi
  41b565:	xor    dh,BYTE PTR [ebx-0x79]
  41b568:	push   edx
  41b569:	xor    dh,BYTE PTR [ebx-0x7]
  41b56c:	sub    bh,dh
  41b56e:	mov    WORD PTR [ebx+edi*2],gs
  41b571:	mov    esi,0xc8f9c067
  41b576:	call   eax
  41b578:	mov    bl,0xc4
  41b57a:	(bad)  
  41b57b:	mov    esi,0xc1ebd59e
  41b580:	arpl   WORD PTR [esi],bx
  41b582:	jmp    FWORD PTR [esi+0x425e4aba]
  41b588:	mov    WORD PTR [ebx+0x54],cs
  41b58b:	jb     0x41b5fc
  41b58d:	mov    ebx,eax
  41b58f:	dec    ecx
  41b590:	ins    DWORD PTR es:[edi],dx
  41b591:	dec    edi
  41b592:	(bad)  
  41b593:	ss xchg ebp,eax
  41b595:	in     eax,0x4f
  41b597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b598:	mov    ecx,DWORD PTR [ebp-0xa]
  41b59b:	sti    
  41b59c:	add    BYTE PTR [eax],al
  41b59e:	inc    ebp
  41b59f:	dec    edx
  41b5a0:	(bad)  
  41b5a1:	frstor ss:[esi]
  41b5a4:	inc    ecx
  41b5a5:	jmp    0xf641c46e
  41b5aa:	and    BYTE PTR [ebx+0x0],al
  41b5ad:	jmp    0x5dc631f6
  41b5b2:	in     eax,dx
  41b5b3:	dec    esi
  41b5b4:	(bad)  
  41b5b5:	mov    ecx,0xa12f65d7
  41b5ba:	pop    ds
  41b5bb:	dec    edi
  41b5bc:	or     ch,BYTE PTR [ecx]
  41b5be:	dec    esi
  41b5bf:	test   DWORD PTR [ebx-0x7cf6bb18],esp
  41b5c5:	ins    BYTE PTR es:[edi],dx
  41b5c6:	pop    ss
  41b5c7:	dec    esp
  41b5c8:	(bad)  
  41b5c9:	es dec ebx
  41b5cb:	inc    BYTE PTR [ebx+0x94476]
  41b5d1:	shl    BYTE PTR fs:[ebp-0x4211f103],1
  41b5d8:	inc    BYTE PTR [eax]
  41b5da:	cmp    DWORD PTR [ecx-0x1ec60004],0xffffffec
  41b5e1:	aaa    
  41b5e2:	cmp    DWORD PTR [edx+0x7ca7f629],esi
  41b5e8:	mov    ds:0xe9b229fe,al
  41b5ed:	aaa    
  41b5ee:	xor    BYTE PTR [edx],al
  41b5f0:	mov    dh,0x84
  41b5f2:	dec    eax
  41b5f3:	popf   
  41b5f4:	cld    
  41b5f5:	(bad)  
  41b5f6:	stc    
  41b5f7:	cwde   
  41b5f8:	or     ax,0x4835
  41b5fc:	dec    BYTE PTR [ebx+eiz*2+0xfffcc6]
  41b603:	add    BYTE PTR [ecx-0x1abe1968],bh
  41b609:	or     BYTE PTR [eax],al
  41b60b:	xor    DWORD PTR [edx-0x537a72fc],0xffffffb2
  41b612:	std    
  41b613:	dec    DWORD PTR [esi]
  41b615:	mov    dl,0xb3
  41b617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b618:	mov    eax,0xe1e8fdb1
  41b61d:	hlt    
  41b61e:	(bad)  
  41b61f:	push   DWORD PTR [edi]
  41b621:	retf   
  41b622:	mov    ds:0x44b139fe,al
  41b627:	sbb    DWORD PTR [eax],0x58
  41b62a:	jo     0x41b5f0
  41b62c:	sub    DWORD PTR [ebx-0xe],edi
  41b62f:	(bad)  
  41b630:	stc    
  41b631:	mov    al,0xe6
  41b633:	mov    ah,0x2c
  41b635:	mov    dl,0xfd
  41b637:	(bad)  
  41b638:	and    esi,DWORD PTR [eax-0x4]
  41b63b:	dec    DWORD PTR [ecx]
  41b63d:	or     BYTE PTR [eax],al
  41b63f:	add    BYTE PTR [esi+0x5e],ch
  41b642:	add    BYTE PTR [ebp-0x3901d],cl
  41b648:	sbb    DWORD PTR [eax-0x4dbd4a03],ebx
  41b64e:	std    
  41b64f:	push   DWORD PTR [esi]
  41b651:	push   edx
  41b652:	das    
  41b653:	inc    DWORD PTR [edi-0xd]
  41b656:	or     eax,eax
  41b658:	cmp    dh,ah
  41b65a:	pop    edx
  41b65b:	inc    DWORD PTR [eax+0x62]
  41b65e:	cmp    DWORD PTR [edi+edi*8-0x7d01a9b5],0x278
  41b669:	add    BYTE PTR [eax],bh
  41b66b:	in     eax,0x6a
  41b66d:	jmp    DWORD PTR [eax]
  41b66f:	bound  eax,QWORD PTR [edi+0x562c1c84]
  41b675:	(bad)  
  41b676:	ja     0x41b642
  41b678:	inc    DWORD PTR [eax]
  41b67a:	inc    edi
  41b67b:	bound  ebp,QWORD PTR [edx-0x1d]
  41b67e:	dec    esi
  41b67f:	bound  eax,QWORD PTR [edx]
  41b681:	or     eax,DWORD PTR [edi]
  41b683:	pop    ebx
  41b684:	jle    0x41b654
  41b686:	inc    edi
  41b687:	bound  eax,QWORD PTR [edx]
  41b689:	cmp    eax,0x26143
  41b68e:	push   eax
  41b68f:	fstp   TBYTE PTR [edi]
  41b691:	(bad)  
  41b692:	fsub   DWORD PTR [ecx+0x6a]
  41b695:	dec    edi
  41b696:	cmp    eax,0x5f500262
  41b69b:	fs leave 
  41b69d:	inc    eax
  41b69e:	inc    edi
  41b69f:	aad    0x80
  41b6a1:	sar    DWORD PTR [ecx-0x60b0a936],0xbd
  41b6a8:	or     DWORD PTR [eax],eax
  41b6aa:	inc    edi
  41b6ab:	fistp  QWORD PTR [edi]
  41b6ad:	or     ebp,DWORD PTR ds:0x9c848762
  41b6b3:	stos   DWORD PTR es:[edi],eax
  41b6b4:	push   esi
  41b6b5:	(bad)  
  41b6b6:	test   ecx,0x624708a6
  41b6bc:	xchg   DWORD PTR [esp+edi*2+0x17fe56c3],eax
  41b6c3:	mov    edx,0x12704313
  41b6c8:	or     eax,eax
  41b6ca:	repnz add esp,ebp
  41b6cd:	jg     0x41b6cf
  41b6cf:	add    BYTE PTR [edi],ch
  41b6d1:	or     DWORD PTR [eax+0x2185ca03],ebp
  41b6d7:	push   esi
  41b6d8:	push   ecx
  41b6d9:	dec    ebx
  41b6da:	mov    eax,0xe0f7f6b
  41b6df:	push   edi
  41b6e0:	shl    DWORD PTR [edx+ebp*1+0x56],cl
  41b6e4:	cmp    DWORD PTR [ebx-0x66],ecx
  41b6e7:	mov    bl,0x28
  41b6e9:	cli    
  41b6ea:	mov    ah,0x56
  41b6ec:	sub    DWORD PTR [edi-0x27],ebx
  41b6ef:	mov    bl,cl
  41b6f1:	inc    edi
  41b6f2:	out    0x56,al
  41b6f4:	sbb    DWORD PTR [edx+0x4c0d806b],edi
  41b6fa:	aad    0x56
  41b6fc:	js     0x41b75f
  41b6fe:	test   DWORD PTR [edx],ebx
  41b700:	add    BYTE PTR [ebx+0x6f],cl
  41b703:	cmp    BYTE PTR [ebx+ecx*2-0x6b0ea943],0x74
  41b70b:	push   ebp
  41b70c:	jmp    0xd4d2645b
  41b711:	dec    ebx
  41b712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b713:	push   esi
  41b714:	loopne 0x41b6eb
  41b716:	fst    DWORD PTR [esi-0x2f]
  41b719:	(bad)  
  41b71a:	test   al,0xcf
  41b71c:	adc    eax,0x7cafae1
  41b721:	or     DWORD PTR [ecx-0x16f6bfa2],edx
  41b727:	mov    bl,0x28
  41b729:	mul    DWORD PTR [ecx]
  41b72b:	lds    ebp,FWORD PTR [eax-0x5d60ccb5]
  41b731:	dec    edx
  41b732:	imul   eax,DWORD PTR gs:[eax],0x0
  41b736:	xchg   ecx,eax
  41b737:	(bad)  
  41b738:	pop    ebp
  41b739:	push   esi
  41b73a:	push   ds
  41b73b:	or     bl,al
  41b73d:	add    ebx,DWORD PTR ds:0xbc904e09
  41b743:	dec    ebx
  41b744:	inc    ebp
  41b745:	push   esi
  41b746:	loopne 0x41b746
  41b748:	pextrw esi,(bad),0xc5
  41b74a:	jo     0x41b72c
  41b74c:	(bad)  
  41b74d:	call   0xe94b7d2e
  41b752:	inc    esp
  41b753:	dec    edx
  41b754:	mov    ah,0x65
  41b756:	repnz dec edx
  41b758:	(bad)  
  41b759:	adc    DWORD PTR [ecx-0xee900ed],ebp
  41b75f:	xchg   esp,eax
  41b760:	mov    ds:0xe74b990f,eax
  41b765:	dec    ebp
  41b766:	dec    ecx
  41b767:	dec    edx
  41b768:	(bad)  
  41b769:	inc    al
  41b76b:	push   ebp
  41b76c:	std    
  41b76d:	not    BYTE PTR [edx+0x79be0562]
  41b773:	dec    ebx
  41b774:	sti    
  41b775:	sbb    al,BYTE PTR [ebx+0x7adefe91]
  41b77b:	dec    ebx
  41b77c:	icebp  
  41b77d:	xchg   DWORD PTR [ebx],ebp
  41b77f:	add    cl,BYTE PTR [edi]
  41b781:	fs push eax
  41b783:	dec    ebx
  41b784:	inc    dh
  41b786:	mov    cl,0xaa
  41b788:	enter  0xa0aa,0x7e
  41b78c:	jmp    0x41b7f8
  41b78e:	xchg   DWORD PTR [edx+0x67],ebx
  41b791:	in     al,dx
  41b792:	or     al,BYTE PTR gs:[eax]
  41b795:	mov    eax,ds:0x9ec308f5
  41b79a:	add    BYTE PTR [eax],al
  41b79c:	mov    esi,0x45ec6737
  41b7a1:	or     DWORD PTR [eax],eax
  41b7a3:	sbb    DWORD PTR [ecx-0x317900ee],0xf248837
  41b7ad:	jg     0x41b780
  41b7af:	add    DWORD PTR [eax+0x2ce90008],ebp
  41b7b5:	fnsave [esi]
  41b7b7:	data16 bnd jle 0x41b78c
  41b7bb:	jo     0x41b78d
  41b7bd:	pop    ecx
  41b7be:	addr16 in al,dx
  41b7c0:	inc    ebp
  41b7c1:	or     DWORD PTR [eax],eax
  41b7c3:	inc    ecx
  41b7c4:	mov    ecx,0x100ff12
  41b7c9:	adc    al,0x8b
  41b7cc:	dec    esp
  41b7cd:	jle    0x41b812
  41b7cf:	clc    
  41b7d0:	in     eax,0x16
  41b7d2:	mov    dl,dl
  41b7d4:	xchg   BYTE PTR [ecx-0x1],cl
  41b7d7:	jmp    FWORD PTR [esi-0x4c]
  41b7da:	jae    0x41b7d8
  41b7dc:	mov    ah,0x5
  41b7de:	call   0x471efe
  41b7e3:	mov    edi,DWORD PTR [edx+edx*4-0x30]
  41b7e7:	(bad)  
  41b7e8:	mov    ebx,0x1f0466dc
  41b7ed:	or     eax,0x14b4e800
  41b7f2:	add    BYTE PTR [eax],al
  41b7f4:	and    eax,0x950f72cd
  41b7f9:	cli    
  41b7fa:	popw   ss
  41b7fc:	push   ebp
  41b7fd:	dec    esp
  41b7fe:	(bad)  
  41b7ff:	inc    BYTE PTR [eax]
  41b801:	add    BYTE PTR [ebx-0x23],ch
  41b804:	out    0x31,al
  41b806:	out    0xc,al
  41b808:	add    BYTE PTR [ebx+0x69fe32dc],cl
  41b80e:	fidiv  WORD PTR [edx]
  41b810:	add    BYTE PTR [edx-0x22],ch
  41b813:	xor    al,BYTE PTR [ecx]
  41b815:	push   0xc0000cee
  41b81a:	mov    eax,ds:0x92e8ee57
  41b81f:	inc    ebp
  41b820:	(bad)  
  41b821:	jmp    DWORD PTR [edi-0x79]
  41b824:	repnz inc eax
  41b826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b827:	int3   
  41b828:	jae    0x41b86e
  41b82a:	rcl    DWORD PTR [edi-0x6],0xff
  41b82e:	mov    ebx,0x99ffe6dc
  41b833:	or     al,0x0
  41b835:	push   0x52
  41b837:	xor    edi,esi
  41b839:	(bad)  
  41b83a:	jnp    0x41b818
  41b83c:	out    0x73,al
  41b83e:	xchg   edi,eax
  41b83f:	or     al,0x0
  41b841:	or     eax,DWORD PTR [edi-0xe]
  41b844:	into   
  41b845:	or     eax,DWORD PTR [edi]
  41b847:	dec    edx
  41b848:	jmp    0x41b894
  41b84a:	push   es
  41b84b:	xor    dh,BYTE PTR [edx+0x22f64e7]
  41b851:	add    ch,bl
  41b853:	xor    eax,ebp
  41b855:	(bad)  
  41b856:	out    dx,al
  41b857:	xor    ebp,eax
  41b859:	(bad)  
  41b85a:	out    dx,al
  41b85b:	xor    ch,dl
  41b85d:	call   DWORD PTR [eax+0x32]
  41b860:	inc    edx
  41b861:	(bad)  
  41b862:	shl    BYTE PTR [ecx],cl
  41b864:	imul   edx,DWORD PTR [ebp+0x32480000],0x2
  41b86b:	mov    DWORD PTR [edx-0x638c3eba],eax
  41b871:	call   0x9d6a:0x32864af3
  41b878:	dec    eax
  41b879:	xor    al,BYTE PTR [edx]
  41b87b:	push   eax
  41b87c:	scas   eax,DWORD PTR es:[edi]
  41b87d:	movsx  eax,WORD PTR [eax+0x47]
  41b881:	addr16 fdiv st,st(3)
  41b884:	pop    ds
  41b885:	jo     0x41b89b
  41b887:	inc    DWORD PTR [eax]
  41b889:	add    dl,BYTE PTR [ebx+0x74]
  41b88c:	repz pop ecx
  41b88e:	into   
  41b88f:	push   es
  41b890:	inc    edi
  41b891:	xor    ch,BYTE PTR [edx+0x605070a]
  41b897:	jmp    0x41b81d
  41b899:	ja     0x41b873
  41b89b:	sti    
  41b89c:	outs   dx,DWORD PTR ds:[esi]
  41b89d:	pop    ss
  41b89e:	mov    edi,0xd8a74740
  41b8a3:	neg    edi
  41b8a5:	in     eax,0xfb
  41b8a7:	inc    eax
  41b8a9:	mov    dl,0x47
  41b8ab:	or     ebp,DWORD PTR [edi]
  41b8ad:	mov    cl,0xbe
  41b8af:	inc    eax
  41b8b0:	inc    edi
  41b8b1:	call   0xbffd:0x32470694
  41b8b8:	sbb    edx,DWORD PTR [edx+ebx*8+0x72]
  41b8bc:	or     al,0x9
  41b8be:	test   al,0x3
  41b8c0:	div    DWORD PTR [eax]
  41b8c2:	nop
  41b8c3:	or     eax,DWORD PTR [edi+0x9]
  41b8c6:	loop   0x41b90b
  41b8c8:	hlt    
  41b8c9:	sbb    eax,ebx
  41b8cb:	add    eax,DWORD PTR [eax]
  41b8cd:	add    ch,ch
  41b8cf:	or     BYTE PTR [esi-0x27],al
  41b8d2:	js     0x41b91b
  41b8d4:	mov    bl,0x53
  41b8d6:	loopne 0x41b8ea
  41b8d8:	add    ch,al
  41b8da:	pusha  
  41b8db:	mov    cl,0xe8
  41b8dd:	push   edx
  41b8de:	mov    BYTE PTR [edi-0x65],al
  41b8e1:	dec    edi
  41b8e2:	push   0x4952d6f9
  41b8e7:	inc    edi
  41b8e8:	fwait
  41b8e9:	push   ebx
  41b8ea:	sub    cl,dh
  41b8ec:	(bad)  
  41b8ed:	push   edx
  41b8ee:	cmp    DWORD PTR [edi+0x7b],eax
  41b8f1:	dec    ebx
  41b8f2:	sub    cl,ch
  41b8f4:	mov    dh,0x52
  41b8f6:	sub    DWORD PTR [ecx+0x29],edx
  41b8f9:	mov    ebx,0x664bb175
  41b8fe:	pop    eax
  41b8ff:	or     ecx,esp
  41b901:	aad    0x47
  41b903:	dec    edx
  41b904:	fisttp QWORD PTR [esi+0x3e90947]
  41b90a:	shr    BYTE PTR [esi+0x21],0xc5
  41b90e:	clc    
  41b90f:	mov    al,0xe7
  41b911:	mov    edx,0x532478e8
  41b916:	jmp    0x15914a05
  41b91b:	dec    ecx
  41b91c:	outs   dx,DWORD PTR ds:[esi]
  41b91d:	push   edx
  41b91e:	fld    DWORD PTR [esi-0x5b]
  41b921:	push   ebp
  41b922:	mov    ds:0xe0d8e601,al
  41b927:	xchg   edx,eax
  41b928:	test   eax,0x334a21ae
  41b92d:	jg     0x41b8db
  41b92f:	mov    ch,BYTE PTR [ebx+edx*2-0x4eeb0000]
  41b936:	xchg   ebx,eax
  41b937:	gs push 0x7a710009
  41b93d:	or     ebx,eax
  41b93f:	outs   dx,BYTE PTR ds:[esi]
  41b940:	rol    DWORD PTR ds:0x468a1799,0xfe
  41b947:	aad    0x92
  41b949:	mov    edi,DWORD PTR [eax+ecx*4]
  41b94c:	es enter 0xe8ff,0x90
  41b951:	adc    DWORD PTR [ebx+0x40f49e04],eax
  41b957:	jmp    0x24675a0
  41b95c:	or     esp,ebx
  41b95e:	enter  0x392a,0x62
  41b962:	out    0xcd,eax
  41b964:	cmp    eax,0x8f6c0009
  41b969:	inc    edx
  41b96a:	push   ecx
  41b96b:	cmp    DWORD PTR [esi+edx*8],0xfffffffe
  41b96f:	hlt    
  41b970:	stos   DWORD PTR es:[edi],eax
  41b971:	hlt    
  41b972:	inc    eax
  41b973:	jmp    0x65503fa9
  41b978:	mov    ah,0x46
  41b97a:	(bad)  
  41b97b:	jmp    0xea39870d
  41b980:	inc    esp
  41b981:	or     DWORD PTR [eax],eax
  41b983:	je     0x41b98d
  41b985:	ds dec edi
  41b987:	push   ebx
  41b988:	inc    ebx
  41b989:	mov    bl,0xff
  41b98b:	inc    edx
  41b98c:	inc    esp
  41b98d:	inc    esi
  41b98e:	je     0x41b95d
  41b990:	xchg   esi,eax
  41b991:	sbb    eax,0x460417a1
  41b996:	or     DWORD PTR [ecx-0x4ff00000],ebp
  41b99c:	out    0x39,eax
  41b99e:	dec    esi
  41b99f:	or     DWORD PTR [eax],eax
  41b9a1:	push   0xffffff8b
  41b9a3:	shl    BYTE PTR [ecx+ecx*1-0x36],0xc4
  41b9a8:	imul   ecx
  41b9aa:	lock (bad) 
  41b9ad:	sbb    al,0x13
  41b9af:	cs jg  0x41b986
  41b9b2:	pop    ss
  41b9b3:	inc    edi
  41b9b4:	mov    BYTE PTR [eax],al
  41b9b6:	arpl   cx,sp
  41b9b8:	mov    eax,DWORD PTR [ebp-0x3a]
  41b9bb:	jl     0x41b9ba
  41b9bd:	jne    0x41b9d5
  41b9bf:	fdiv   DWORD PTR [ebx-0xc]
  41b9c2:	inc    esp
  41b9c3:	or     bh,bh
  41b9c5:	jne    0x41b9f1
  41b9c7:	fcom   DWORD PTR [ebx]
  41b9c9:	mov    eax,ds:0xafe4a38
  41b9ce:	cs popa 
  41b9d0:	sub    al,0x8b
  41b9d2:	mov    ds:0xfb1089dd,eax
  41b9d7:	dec    ebp
  41b9d8:	out    dx,al
  41b9d9:	push   eax
  41b9da:	int3   
  41b9db:	fcom   DWORD PTR [ebx]
  41b9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9de:	dec    eax
  41b9df:	dec    edx
  41b9e0:	dec    BYTE PTR [edx]
  41b9e2:	cs popa 
  41b9e4:	sbb    BYTE PTR [eax-0x3c],ch
  41b9e7:	cmp    DWORD PTR [edi],0x0
  41b9ea:	sub    DWORD PTR [esi-0x12],ebx
  41b9ed:	call   0x41c936
  41b9f2:	and    eax,0xdd0173c9
  41b9f7:	fnstenv [ebx-0x10]
  41b9fa:	push   esi
  41b9fb:	sbb    al,0x6
  41b9fd:	add    BYTE PTR [eax],al
  41b9ff:	add    BYTE PTR [esi],ch
  41ba01:	fidiv  DWORD PTR [ebx-0xc]
  41ba04:	inc    esi
  41ba05:	inc    edx
  41ba06:	xor    edi,edi
  41ba08:	sub    edx,ebx
  41ba0a:	jae    0x41ba08
  41ba0c:	not    BYTE PTR [ecx]
  41ba0e:	push   es
  41ba0f:	add    dh,ch
  41ba11:	(bad)
  41ba14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba15:	int    0x53
  41ba17:	mov    ebx,DWORD PTR [edx]
  41ba19:	mov    dl,al
  41ba1b:	shr    BYTE PTR [eax-0x79ac0227],0x93
  41ba22:	loope  0x41ba64
  41ba24:	out    dx,al
  41ba25:	shl    BYTE PTR [eax+0x1],1
  41ba28:	popf   
  41ba29:	fld    DWORD PTR [ecx+0x4120943d]
  41ba2f:	add    BYTE PTR [edi+0x32],al
  41ba32:	(bad)  
  41ba33:	sbb    al,ah
  41ba35:	push   ebp
  41ba36:	inc    eax
  41ba37:	daa    
  41ba38:	push   es
  41ba39:	xor    al,BYTE PTR [edx]
  41ba3b:	je     0x41ba92
  41ba3d:	scas   eax,DWORD PTR es:[edi]
  41ba3e:	or     eax,0x3f17199
  41ba43:	add    BYTE PTR [ebx],dl
  41ba45:	sub    DWORD PTR [ebx-0x3ce34dc4],eax
  41ba4b:	dec    DWORD PTR [eax-0x78d4faa3]
  41ba51:	ja     0x41ba8c
  41ba53:	ret    0xf72c
  41ba56:	dec    edi
  41ba57:	adc    al,0x7d
  41ba59:	sbb    al,bl
  41ba5b:	(bad)  
  41ba5c:	mov    edi,0xcac6566d
  41ba61:	out    dx,al
  41ba62:	push   eax
  41ba63:	inc    BYTE PTR [eax]
  41ba65:	add    BYTE PTR [eax+0xa],bl
  41ba68:	add    eax,DWORD PTR [eax]
  41ba6a:	inc    edi
  41ba6b:	cwde   
  41ba6c:	add    ch,BYTE PTR [edx+0x45]
  41ba6f:	sbb    bl,BYTE PTR [edx-0x7ccdb8fb]
  41ba75:	idiv   DWORD PTR [eax]
  41ba77:	arpl   WORD PTR [esi+0x232461d],ax
  41ba7d:	mov    edx,eax
  41ba7f:	stc    
  41ba80:	push   eax
  41ba81:	(bad)  
  41ba82:	and    BYTE PTR [ebp+0x3319cb85],ch
  41ba88:	dec    esi
  41ba89:	dec    edi
  41ba8a:	adc    BYTE PTR [ebp+0x6308fd3b],ah
  41ba90:	pop    ebx
  41ba91:	lea    ecx,[ecx+0x32]
  41ba94:	add    cl,BYTE PTR [ebx]
  41ba96:	pop    es
  41ba97:	arpl   WORD PTR [esi+0x23247f2],ax
  41ba9d:	push   0xffc4f6ba
  41baa2:	shl    DWORD PTR [ebx+edx*2-0x4c8d2703],cl
  41baa9:	out    0x36,eax
  41baab:	or     esi,ebp
  41baad:	add    eax,DWORD PTR [edi+0x10]
  41bab0:	test   eax,0xe847c4ff
  41bab5:	add    eax,DWORD PTR [edi+0x4c]
  41bab8:	arpl   WORD PTR [eax-0x4e],cx
  41babb:	inc    ebx
  41babc:	test   DWORD PTR [edi+eax*2],eax
  41babf:	or     ecx,ebp
  41bac1:	or     bl,0x4c
  41bac4:	jbe    0x41bb15
  41bac6:	cdq    
  41bac7:	fsubr  DWORD PTR [ebp-0x67]
  41baca:	add    BYTE PTR [eax],al
  41bacc:	je     0x41bb10
  41bace:	gs dec edi
  41bad0:	mov    DWORD PTR ds:0x9061c2f,ebx
  41bad6:	bound  edi,QWORD PTR [ecx-0x7c]
  41bad9:	inc    edx
  41bada:	dec    ebp
  41badb:	dec    edi
  41badc:	cmp    eax,0xd087f549
  41bae1:	or     cl,ch
  41bae3:	add    ebx,DWORD PTR [esi+ebx*8]
  41bae6:	cmp    al,0xff
  41bae8:	ret    
  41bae9:	xchg   ebx,eax
  41baea:	call   0x5b8601f2
  41baef:	cmp    BYTE PTR [edx+0x43],cl
  41baf2:	sbb    eax,0xe8ab40da
  41baf7:	add    eax,DWORD PTR [edi+0x7]
  41bafa:	add    DWORD PTR [ecx],esp
  41bafc:	dec    ecx
  41bafd:	or     ecx,ebp
  41baff:	cli    
  41bb00:	call   0x8bbe3ac2
  41bb05:	inc    ecx
  41bb06:	arpl   cx,cx
  41bb08:	sbb    al,0xda
  41bb0a:	sbb    BYTE PTR [edx+0x47],0x7
  41bb0e:	jmp    0xdd834e61
  41bb13:	clc    
  41bb14:	fcomip st,st(3)
  41bb16:	daa    
  41bb17:	add    al,0x4c
  41bb19:	dec    ecx
  41bb1a:	push   esp
  41bb1b:	lods   al,BYTE PTR ds:[esi]
  41bb1c:	icebp  
  41bb1d:	mov    esp,0xa4534ec4
  41bb22:	push   cs
  41bb23:	(bad)
  41bb26:	add    BYTE PTR [ecx-0x59bcfe10],ch
  41bb2c:	mov    edi,0xa6fd82
  41bb31:	add    BYTE PTR [ecx+0x42],bh
  41bb34:	(bad)  
  41bb35:	jmp    0xa9c64f7e
  41bb3a:	or     al,BYTE PTR [ebx-0x2]
  41bb3d:	cmp    DWORD PTR [ebx+0x44f60003],edx
  41bb43:	xor    DWORD PTR [esi-0x19],ebx
  41bb46:	inc    esp
  41bb47:	or     DWORD PTR [ebx],ecx
  41bb49:	test   eax,0x2c831d7f
  41bb4e:	add    al,0x44
  41bb50:	(bad)  
  41bb51:	inc    sp
  41bb53:	mov    ebp,0x82df5e0b
  41bb58:	std    
  41bb59:	push   esi
  41bb5a:	or     DWORD PTR [ebx-0x37ac21fc],edx
  41bb60:	call   DWORD PTR [ecx+0x55]
  41bb63:	sbb    DWORD PTR cs:[esi],edi
  41bb66:	jg     0x41bba6
  41bb68:	out    0x7d,eax
  41bb6a:	inc    eax
  41bb6b:	or     DWORD PTR [eax],eax
  41bb6d:	outs   dx,DWORD PTR cs:[esi]
  41bb6f:	cmp    ah,bh
  41bb71:	push   ebp
  41bb72:	inc    eax
  41bb73:	or     DWORD PTR [eax],eax
  41bb75:	adc    bh,BYTE PTR [ebx+eax*2]
  41bb78:	je     0x41bb8b
  41bb7a:	pushf  
  41bb7b:	push   0x9444e903
  41bb80:	test   BYTE PTR ds:0x99fe437a,dh
  41bb86:	xchg   ecx,eax
  41bb87:	jge    0x41bb50
  41bb89:	test   DWORD PTR [edx+0x3f45e743],0x40d00009
  41bb93:	inc    edx
  41bb94:	(bad)  
  41bb95:	fiadd  WORD PTR [eax]
  41bb97:	add    BYTE PTR [edx-0x75283883],dl
  41bb9d:	inc    ebx
  41bb9e:	out    0x69,eax
  41bba0:	aas    
  41bba1:	or     DWORD PTR [eax],eax
  41bba3:	add    BYTE PTR [ebp-0x38],dh
  41bba6:	pop    ecx
  41bba7:	leave  
  41bba8:	lods   eax,DWORD PTR ds:[esi]
  41bba9:	jns    0x41bb34
  41bbab:	in     al,dx
  41bbac:	ins    DWORD PTR es:[edi],dx
  41bbad:	rcr    esi,1
  41bbaf:	push   ebx
  41bbb0:	xchg   BYTE PTR [ebx],dl
  41bbb2:	in     eax,0x40
  41bbb4:	fmulp  st(5),st
  41bbb6:	jo     0x41bbb9
  41bbb8:	in     eax,dx
  41bbb9:	rol    DWORD PTR [ecx+0x4123473d],cl
  41bbbf:	add    BYTE PTR [esi-0x7c7cf8a7],bl
  41bbc5:	sub    ch,BYTE PTR [ecx+eax*2]
  41bbc8:	scas   al,BYTE PTR es:[edi]
  41bbc9:	add    eax,0xc5850575
  41bbce:	pop    ecx
  41bbcf:	leave  
  41bbd0:	(bad)  
  41bbd2:	inc    ebx
  41bbd3:	cld    
  41bbd4:	sahf   
  41bbd5:	add    eax,0x4a290000
  41bbda:	test   BYTE PTR [eax],0x6e
  41bbdd:	add    eax,0xe1abc700
  41bbe2:	(bad)  
  41bbe3:	call   FWORD PTR [esi+0x5]
  41bbe6:	mov    DWORD PTR [ebp+0x1a],0x6e00000d
  41bbed:	int3   
  41bbee:	inc    ebx
  41bbef:	lock pop esi
  41bbf1:	add    eax,0x49d30000
  41bbf6:	out    dx,al
  41bbf7:	push   eax
  41bbf8:	mov    bl,0x48
  41bbfa:	repnz push eax
  41bbfc:	add    BYTE PTR [eax],al
  41bbfe:	mov    ds:0xc450ea48,eax
  41bc03:	int    0x8b
  41bc05:	inc    ebp
  41bc06:	inc    edx
  41bc07:	jne    0x41bc71
  41bc09:	add    dh,BYTE PTR [ecx+ecx*1+0x3811006a]
  41bc10:	fisttp WORD PTR cs:[si]
  41bc14:	mov    DWORD PTR [ebp-0xa],eax
  41bc17:	mov    DWORD PTR [ebx-0x18],edi
  41bc1a:	out    dx,al
  41bc1b:	pop    eax
  41bc1c:	pop    es
  41bc1d:	add    DWORD PTR [edi-0x2b],0x3247e95b
  41bc24:	add    dh,BYTE PTR [ebp+0x73]
  41bc27:	inc    edi
  41bc28:	aad    0xfb
  41bc2a:	shl    ch,1
  41bc2c:	dec    ebx
  41bc2d:	sbb    BYTE PTR [edx+0x7a],0x2
  41bc31:	je     0x41bca0
  41bc33:	stos   DWORD PTR es:[edi],eax
  41bc34:	lods   eax,DWORD PTR ds:[esi]
  41bc35:	neg    esp
  41bc37:	daa    
  41bc38:	dec    ebx
  41bc39:	jb     0x41bc6a
  41bc3b:	call   0x4479:0x97b841d5
  41bc42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc43:	(bad)  
  41bc44:	psubsb mm3,QWORD PTR [esp+esi*8]
  41bc48:	dec    esp
  41bc49:	dec    BYTE PTR [edx+esi*2-0x2a]
  41bc4d:	and    cl,dh
  41bc4f:	in     eax,dx
  41bc50:	imul   eax,DWORD PTR [bp+di-0x76],0xa788315c
  41bc58:	dec    ebx
  41bc59:	je     0x41bcc2
  41bc5b:	scas   eax,DWORD PTR es:[edi]
  41bc5c:	ret    0x7807
  41bc5f:	pop    ebp
  41bc60:	data16 mov es,WORD PTR [eax]
  41bc63:	add    BYTE PTR [edi],al
  41bc65:	es dec ebx
  41bc67:	xor    al,0x66
  41bc69:	jl     0x41bc2c
  41bc6b:	call   ecx
  41bc6d:	xor    bl,BYTE PTR [edi+0x2710de0]
  41bc73:	add    DWORD PTR [esi+esi*2-0x4ca4b3b5],0xffffffcd
  41bc7b:	jmp    0x41bcc4
  41bc7d:	xchg   ebp,eax
  41bc7e:	xchg   esi,edi
  41bc80:	mov    dl,0x16
  41bc82:	dec    esp
  41bc83:	adc    al,0xaa
  41bc85:	add    cl,0xff
  41bc88:	add    DWORD PTR [ebp+0x4e],ebp
  41bc8b:	jmp    DWORD PTR [eax]
  41bc8d:	xor    al,BYTE PTR [edx]
  41bc8f:	sbb    DWORD PTR [edx+0x10ff590a],0x1e04d532
  41bc99:	or     DWORD PTR [ebp+0x4b],eax
  41bc9c:	add    DWORD PTR [eax+0x69],eax
  41bc9f:	leave  
  41bca0:	cld    
  41bca1:	or     BYTE PTR [ebp-0x3],bl
  41bca4:	icebp  
  41bca5:	mov    ch,0xcc
  41bca7:	dec    ebx
  41bca8:	push   ebx
  41bca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcaa:	push   ss
  41bcab:	(bad)
  41bcae:	out    0x3,eax
  41bcb0:	inc    edi
  41bcb1:	or     DWORD PTR [edx],edx
  41bcb3:	cmp    eax,0x5861d605
  41bcb8:	lds    eax,FWORD PTR [esp+edi*4-0x49]
  41bcbc:	sbb    DWORD PTR [ecx+0x9786223],esi
  41bcc2:	xchg   ecx,eax
  41bcc3:	(bad)  
  41bcc4:	inc    edi
  41bcc5:	dec    esp
  41bcc6:	lea    eax,[edi-0x61950000]
  41bccc:	(bad)  
  41bccd:	les    esp,FWORD PTR [eax-0x3a030bc1]
  41bcd3:	std    
  41bcd4:	aas    
  41bcd5:	sbb    al,BYTE PTR [esi]
  41bcd7:	or     ecx,ebp
  41bcd9:	rol    BYTE PTR [edx-0xc],1
  41bcdc:	sub    BYTE PTR [ebx+0x7f29521d],ch
  41bce2:	pop    ebx
  41bce3:	sub    ah,BYTE PTR [edx+0x773070c4]
  41bce9:	add    eax,0x20510947
  41bcee:	arpl   WORD PTR [edi],di
  41bcf0:	cmp    eax,0xa2261b87
  41bcf5:	les    edx,FWORD PTR [eax+0x3f]
  41bcf8:	mov    ah,0xf2
  41bcfa:	dec    ecx
  41bcfb:	mov    ebx,0x247b4aec
  41bd00:	mov    dl,0xc4
  41bd02:	cmp    BYTE PTR [edi],ah
  41bd04:	inc    esi
  41bd05:	pop    es
  41bd06:	inc    edi
  41bd07:	or     edx,esp
  41bd09:	inc    ebx
  41bd0a:	mov    bl,0x4
  41bd0c:	adc    dh,bl
  41bd0e:	inc    edi
  41bd0f:	or     ecx,ebp
  41bd11:	inc    edx
  41bd12:	cmp    DWORD PTR ds:0x944e8ff,0x0
  41bd19:	pop    esp
  41bd1a:	push   es
  41bd1b:	inc    ebx
  41bd1c:	dec    edi
  41bd1d:	push   ebx
  41bd1e:	dec    ebx
  41bd1f:	mov    bl,0x1
  41bd21:	ficom  WORD PTR [ecx]
  41bd23:	or     ebp,DWORD PTR [edx-0x17]
  41bd26:	jge    0x41bce3
  41bd28:	add    ecx,esi
  41bd2a:	div    DWORD PTR [ecx+0x2d]
  41bd2d:	sub    BYTE PTR [eax],al
  41bd2f:	add    BYTE PTR [ebx+0x12],cl
  41bd32:	shl    BYTE PTR ds:0xe9883046,0x44
  41bd39:	or     edi,edi
  41bd3b:	cmp    al,BYTE PTR [edi+0x31]
  41bd3e:	pop    ecx
  41bd3f:	sub    BYTE PTR [edi+edi*1],cl
  41bd42:	mov    BYTE PTR [ebx+ecx*1],ah
  41bd45:	aas    
  41bd46:	jb     0x41bd35
  41bd48:	or     al,0x2c
  41bd4a:	add    ecx,ebp
  41bd4c:	inc    esp
  41bd4d:	fsin   
  41bd4f:	cld    
  41bd50:	or     al,0xce
  41bd52:	(bad)  
  41bd53:	cli    
  41bd54:	cwde   
  41bd55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd56:	jmp    edi
  41bd58:	inc    esp
  41bd59:	or     DWORD PTR [eax-0x17],ebp
  41bd5c:	mov    BYTE PTR [esi],bh
  41bd5e:	(bad)  
  41bd5f:	push   ecx
  41bd60:	out    0xa,eax
  41bd62:	add    cl,ch
  41bd64:	jns    0x41bde4
  41bd66:	jae    0x41bd6a
  41bd68:	add    al,0xc5
  41bd6a:	sti    
  41bd6b:	jmp    0x7441c6b4
  41bd70:	xchg   DWORD PTR [edx+0x4f],eax
  41bd73:	rol    DWORD PTR [ebx+esi*4+0x1],cl
  41bd77:	ss ja  0x41bdb0
  41bd7a:	imul   ebp,ecx,0x2603bafd
  41bd80:	aaa    
  41bd81:	jno    0x41bdb0
  41bd83:	test   al,0x44
  41bd85:	adc    al,al
  41bd87:	popf   
  41bd88:	xor    bh,BYTE PTR [edi]
  41bd8a:	je     0x41bd9d
  41bd8c:	mov    WORD PTR [eax+esi*1+0x0],fs
  41bd90:	dec    ecx
  41bd91:	shr    ecx,cl
  41bd93:	xor    BYTE PTR [eax],al
  41bd95:	add    BYTE PTR [ecx],bl
  41bd97:	dec    esi
  41bd98:	imul   al
  41bd9a:	jp     0x41bdb1
  41bd9c:	(bad)  
  41bd9d:	call   FWORD PTR [ecx+0xa]
  41bda0:	and    BYTE PTR [ecx-0x12],al
  41bda3:	enter  0xfc43,0xee
  41bda7:	or     DWORD PTR [eax],eax
  41bda9:	add    BYTE PTR [ebx+0x7e],ch
  41bdac:	cli    
  41bdad:	push   eax
  41bdae:	test   BYTE PTR ds:0x5f41026a,al
  41bdb4:	(bad)  
  41bdb5:	(bad)  
  41bdb6:	sbb    eax,0xc715ff09
  41bdbb:	and    al,BYTE PTR [ecx+0x0]
  41bdbe:	in     eax,0xc9
  41bdc0:	or     eax,0x51784
  41bdc5:	add    cl,ah
  41bdc7:	jge    0x41bd9f
  41bdc9:	and    BYTE PTR [esi+0x63c70009],bl
  41bdcf:	icebp  
  41bdd0:	(bad)  
  41bdd1:	jmp    FWORD PTR [esi-0x5d8c00f7]
  41bdd7:	rol    BYTE PTR [ebx-0x20],0x19
  41bddb:	push   esp
  41bddc:	push   es
  41bddd:	(bad)  
  41bdde:	arpl   WORD PTR [ecx+0x51645c5],bp
  41bde4:	add    BYTE PTR [eax],al
  41bde6:	outs   dx,BYTE PTR ds:[esi]
  41bde7:	enter  0xec43,0x5e
  41bdeb:	or     DWORD PTR [eax],eax
  41bded:	add    BYTE PTR [ecx],ah
  41bdef:	jle    0x41bddf
  41bdf1:	add    BYTE PTR [esi+0x9],ch
  41bdf4:	add    bh,al
  41bdf6:	mov    ds:0xfffecd,eax
  41bdfb:	add    BYTE PTR [esi+0x9],bl
  41bdfe:	lea    eax,[ebp+0x36]
  41be01:	jne    0x41be00
  41be03:	jne    0x41be6f
  41be05:	(bad)  [esp+eax*1]
  41be08:	or     DWORD PTR cs:[ebx],ecx
  41be0b:	rol    BYTE PTR [edi-0x62],0xea
  41be0f:	sub    BYTE PTR [edx+0x4e740416],0x3
  41be16:	iret   
  41be17:	repz enter 0xf725,0x28
  41be1c:	xchg   BYTE PTR [edx],dh
  41be1e:	aas    
  41be1f:	inc    esp
  41be20:	repz xor DWORD PTR [edx],eax
  41be23:	add    BYTE PTR [edi+0x57],al
  41be26:	inc    esi
  41be28:	xor    BYTE PTR [esi+0x2],0x0
  41be2c:	inc    edi
  41be2d:	xor    al,BYTE PTR [edi+0x74]
  41be30:	jmp    0x41be7d
  41be32:	in     eax,dx
  41be33:	pushf  
  41be34:	xor    ecx,esi
  41be36:	add    ecx,DWORD PTR [ebx]
  41be38:	pop    es
  41be39:	imul   ecx
  41be3b:	out    0xac,eax
  41be3d:	jl     0x41be86
  41be3f:	inc    ah
  41be41:	sub    eax,0x32062d6d
  41be46:	add    dh,BYTE PTR [ecx+eax*2-0x65]
  41be4a:	in     eax,dx
  41be4b:	xchg   esp,eax
  41be4c:	popa   
  41be4d:	icebp  
  41be4e:	add    eax,edi
  41be50:	inc    edx
  41be51:	pop    ebx
  41be52:	sbb    DWORD PTR [ecx+0x47],eax
  41be55:	xor    DWORD PTR [edx],eax
  41be57:	add    bh,al
  41be59:	scas   eax,DWORD PTR es:[edi]
  41be5a:	(bad)
  41be5d:	ds sti 
  41be5f:	inc    BYTE PTR [eax]
  41be61:	add    BYTE PTR [edx],dl
  41be63:	mov    dh,0x47
  41be65:	je     0x41bdea
  41be67:	fisubr DWORD PTR ds:0x47324702
  41be6d:	je     0x41bee2
  41be6f:	retf   0x43
  41be72:	inc    edi
  41be73:	xor    al,BYTE PTR [esi+0x32]
  41be76:	xchg   DWORD PTR [ecx-0x4a701b9],ecx
  41be7c:	push   esp
  41be7d:	lods   eax,DWORD PTR ds:[esi]
  41be7e:	(bad)  
  41be80:	test   DWORD PTR [ebp+eiz*1-0x3301b815],0x1dfd0208
  41be8b:	or     al,0x64
  41be8d:	loopne 0x41bec1
  41be8f:	cmp    al,0x15
  41be91:	mov    eax,DWORD PTR [edi+0x9]
  41be94:	jmp    0x30223e9c
  41be99:	inc    esp
  41be9a:	jae    0x41be2c
  41be9c:	or     al,0x84
  41be9e:	add    al,0x3d
  41bea0:	sub    ch,0x20
  41bea3:	leave  
  41bea4:	call   0xaa4c34f4
  41bea9:	inc    edi
  41beaa:	outs   dx,BYTE PTR ds:[esi]
  41beab:	or     ecx,edx
  41bead:	xor    eax,0x5be90946
  41beb2:	jmp    0xb995:0xe847cdfe
  41beb9:	inc    edi
  41beba:	fnstenv [eax+0x986164b]
  41bec0:	inc    ecx
  41bec1:	mov    eax,ds:0x5be8ca1c
  41bec6:	add    BYTE PTR [eax],al
  41bec8:	push   ebx
  41bec9:	add    BYTE PTR [esi-0x3189dfb9],ah
  41becf:	les    esi,FWORD PTR [eax+0x6199ea3]
  41bed5:	or     DWORD PTR [ecx-0x7ac3a1ba],eax
  41bedb:	fcom   QWORD PTR [edi]
  41bedd:	jmp    0x41bf06
  41bedf:	add    al,0x1f
  41bee1:	jl     0x41bea7
  41bee3:	les    ecx,FWORD PTR [eax-0x7ff582dd]
  41bee9:	cmp    edx,eax
  41beeb:	adc    al,0x2e
  41beed:	retf   0xdbe8
  41bef0:	push   ebp
  41bef1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bef3:	add    ebx,DWORD PTR [edi+0x28]
  41bef6:	adc    al,BYTE PTR [edi+0x61]
  41bef9:	mov    al,0xcb
  41befb:	adc    eax,0xc9d10906
  41bf00:	sbb    al,0xca
  41bf02:	(bad)  
  41bf03:	call   0x2e7b17f4
  41bf08:	mov    BYTE PTR [edx+0x3b03d1c9],ah
  41bf0e:	data16 jae 0x41bf64
  41bf11:	enter  0xff,0x85
  41bf15:	add    bh,bh
  41bf17:	push   cs
  41bf18:	add    DWORD PTR [ebx],0xfffffffa
  41bf1b:	push   es
  41bf1c:	and    BYTE PTR [edx],0x34
  41bf1f:	add    ecx,DWORD PTR [eax-0x8d6f5c5]
  41bf25:	pop    ss
  41bf26:	call   0xfe7d4d0a
  41bf2b:	repnz add BYTE PTR [eax],al
  41bf2e:	test   BYTE PTR [esi+0x6647a609],dh
  41bf34:	dec    edx
  41bf35:	sub    BYTE PTR [ebx+0x8],al
  41bf38:	add    cl,ch
  41bf3a:	inc    esp
  41bf3b:	mov    cl,0x0
  41bf3d:	call   0xd729c886
  41bf42:	xor    al,0x3a
  41bf44:	dec    BYTE PTR [edx-0x16bf2f99]
  41bf4a:	add    ebp,0x943e8fb
  41bf50:	add    BYTE PTR [edi+eax*4+0x3e],ch
  41bf54:	dec    edi
  41bf55:	xchg   esi,eax
  41bf56:	push   edi
  41bf57:	and    al,0x49
  41bf59:	sub    BYTE PTR [ebx+0x31],cl
  41bf5c:	push   0xb0944eb
  41bf61:	test   eax,0xbcff1577
  41bf66:	daa    
  41bf67:	rol    BYTE PTR [eax-0x17],1
  41bf6a:	sbb    al,0x54
  41bf6c:	add    WORD PTR cs:[ebx+0x4],ax
  41bf71:	inc    esp
  41bf72:	scas   al,BYTE PTR es:[edi]
  41bf73:	leave  
  41bf74:	(bad)  
  41bf75:	call   0x4141c8be
  41bf7a:	push   0xfffffff4
  41bf7c:	inc    BYTE PTR [eax]
  41bf7e:	add    esi,ebx
  41bf80:	add    al,0x33
  41bf82:	adc    ebx,eax
  41bf84:	push   si
  41bf86:	cmp    DWORD PTR [esi+edi*8-0x19],eax
  41bf8a:	sub    eax,0x77fffdd7
  41bf8f:	(bad)  
  41bf90:	push   ebx
  41bf91:	mov    eax,DWORD PTR [eax]
  41bf93:	add    BYTE PTR [edx+0x5e],al
  41bf96:	add    eax,0xf805dee9
  41bf9b:	jb     0x41bfcc
  41bf9d:	(bad)  
  41bf9e:	std    
  41bf9f:	push   0x2e
  41bfa1:	fidivr WORD PTR [eax-0x47f9e1ff]
  41bfa7:	add    BYTE PTR [esi],bl
  41bfa9:	push   es
  41bfaa:	add    cl,cl
  41bfac:	sub    al,0x3a
  41bfae:	(bad)  
  41bfaf:	addr16 dec edi
  41bfb1:	fidivr WORD PTR [esi]
  41bfb3:	add    dh,ah
  41bfb5:	push   esi
  41bfb6:	inc    edx
  41bfb8:	adc    DWORD PTR [ebp-0x8],ebx
  41bfbb:	call   0xa429c4ee
  41bfc0:	out    dx,eax
  41bfc1:	add    eax,0xc2a4e800
  41bfc6:	std    
  41bfc7:	inc    DWORD PTR [esi]
  41bfc9:	shl    al,0xff
  41bfcc:	icebp  
  41bfcd:	fcom   QWORD PTR [edx]
  41bfcf:	cmc    
  41bfd0:	loope  0x41bf95
  41bfd2:	out    0xfc,al
  41bfd4:	fcmovnb st,st(3)
  41bfd6:	std    
  41bfd7:	adc    DWORD PTR [ebx-0x51beb698],0x5
  41bfde:	je     0x41bff9
  41bfe0:	sub    eax,0x5f2e9502
  41bfe5:	add    eax,0xc4987400
  41bfea:	adc    edx,DWORD PTR [ebp-0x3901b940]
  41bff0:	imul   esi,DWORD PTR [edi+eiz*1],0x41
  41bff4:	pop    esi
  41bff5:	push   es
  41bff6:	add    BYTE PTR [eax],al
  41bff8:	add    BYTE PTR [eax],al
  41bffa:	inc    edi
  41bffb:	mov    al,0x5b
  41bffd:	(bad)  
  41bffe:	pop    esp
  41bfff:	retf   0xe744
  41c002:	pop    ebx
  41c004:	inc    esp
  41c005:	inc    BYTE PTR [edi+edx*2+0x3007e8cc]
  41c00c:	dec    edx
  41c00d:	jno    0x41c055
  41c00f:	jecxz  0x41c055
  41c011:	out    0x50,eax
  41c013:	and    DWORD PTR [edx],eax
  41c015:	add    BYTE PTR [ebp+0x152aa92d],bl
  41c01b:	sbb    BYTE PTR [ebx-0x7e],dl
  41c01e:	sbb    eax,0x2c01cd2f
  41c023:	and    eax,0xb01fea57
  41c028:	inc    esp
  41c029:	dec    BYTE PTR [eax]
  41c02b:	or     ebp,DWORD PTR [esi+esi*8+0x0]
  41c02f:	sub    al,bl
  41c031:	jmp    eax
  41c033:	push   ds
  41c034:	add    eax,DWORD PTR [eax]
  41c036:	inc    edi
  41c037:	push   edi
  41c038:	sbb    eax,0x3e18e30
  41c03d:	jmp    FWORD PTR [edx]
  41c03f:	push   ds
  41c040:	stos   DWORD PTR es:[edi],eax
  41c041:	inc    eax
  41c042:	inc    edi
  41c043:	dec    edi
  41c044:	sbb    eax,0x3e16e38
  41c049:	jmp    DWORD PTR [edx]
  41c04b:	ds test eax,0x1d674740
  41c051:	inc    eax
  41c052:	push   ds
  41c053:	loope  0x41c058
  41c055:	jmp    FWORD PTR [edx-0x12]
  41c058:	stos   BYTE PTR es:[edi],al
  41c059:	inc    eax
  41c05a:	inc    edi
  41c05b:	lahf   
  41c05c:	sbb    eax,0xfe000048
  41c061:	loopne 0x41c066
  41c063:	jmp    DWORD PTR [edx-0x2]
  41c066:	stos   BYTE PTR es:[edi],al
  41c067:	inc    eax
  41c068:	inc    edi
  41c069:	mov    bh,0x1d
  41c06b:	push   eax
  41c06c:	out    dx,al
  41c06d:	loopne 0x41c072
  41c06f:	jmp    FWORD PTR [edx]
  41c071:	push   ds
  41c072:	stos   DWORD PTR es:[edi],eax
  41c073:	inc    eax
  41c074:	inc    edi
  41c075:	or     DWORD PTR [esi+0x1e],esp
  41c078:	psrld  mm4,QWORD PTR [edi-0x4b1197fd]
  41c07f:	stos   BYTE PTR es:[edi],al
  41c080:	pop    es
  41c081:	or     DWORD PTR [esi+0x1e],ecx
  41c084:	out    0xd1,eax
  41c086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c087:	add    edx,DWORD PTR [eax-0x12]
  41c08a:	les    ebp,FWORD PTR [edx+0x1e360907]
  41c090:	scas   eax,DWORD PTR es:[edi]
  41c091:	shl    BYTE PTR [edi-0x6b11c7fd],cl
  41c097:	stos   BYTE PTR es:[edi],al
  41c098:	xchg   DWORD PTR [ecx],ecx
  41c09a:	push   ds
  41c09b:	push   ds
  41c09c:	mov    bh,0xd2
  41c09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c09f:	add    esp,DWORD PTR [eax]
  41c0a1:	out    dx,al
  41c0a2:	xchg   esp,eax
  41c0a3:	stos   BYTE PTR es:[edi],al
  41c0a4:	xchg   DWORD PTR [ecx],ecx
  41c0a6:	push   es
  41c0a7:	push   ds
  41c0a8:	(bad)  
  41c0a9:	shl    BYTE PTR [edi+0x74ee0803],cl
  41c0af:	stos   BYTE PTR es:[edi],al
  41c0b0:	xchg   DWORD PTR [ecx],ecx
  41c0b2:	out    dx,al
  41c0b3:	sbb    eax,0x427d1c7
  41c0b8:	lock in eax,dx
  41c0ba:	fld    QWORD PTR fs:[edi-0x371629f7]
  41c0c1:	shl    DWORD PTR [edi],1
  41c0c3:	add    al,0x0
  41c0c5:	add    al,bl
  41c0c7:	in     eax,dx
  41c0c8:	je     0x41c0a7
  41c0ca:	xchg   DWORD PTR [ecx],ecx
  41c0cc:	mov    esi,0x27d1b8e9
  41c0d1:	add    al,0xc0
  41c0d3:	in     eax,dx
  41c0d4:	push   esp
  41c0d5:	fld    QWORD PTR [edi]
  41c0d7:	or     DWORD PTR [esi+0x27d1d8e9],esp
  41c0dd:	add    al,0xa8
  41c0df:	in     eax,dx
  41c0e0:	je     0x41c0bf
  41c0e2:	pop    es
  41c0e3:	or     DWORD PTR [esi+0x27d1b8e9],ecx
  41c0e9:	add    al,0x90
  41c0eb:	in     eax,dx
  41c0ec:	inc    esp
  41c0ed:	fld    QWORD PTR [edi]
  41c0ef:	or     DWORD PTR [eax],eax
  41c0f1:	jbe    0x41c161
  41c0f3:	outs   dx,DWORD PTR ds:[esi]
  41c0f4:	pop    eax
  41c0f5:	sub    BYTE PTR [ebx+0x38],al
  41c0f8:	and    al,0x95
  41c0fa:	xchg   edx,eax
  41c0fb:	enter  0x5dff,0x5e
  41c0ff:	addr16 pop eax
  41c101:	test   al,0x44
  41c103:	cmp    BYTE PTR [edx*4+0x45ffc87a],ah
  41c10a:	pop    esi
  41c10b:	jg     0x41c165
  41c10d:	test   al,0x44
  41c10f:	cmp    BYTE PTR [esi*2+0x2dffca22],ah
  41c116:	cs ja  0x41c171
  41c119:	test   al,0x44
  41c11b:	ss and al,0x25
  41c11e:	or     cl,dl
  41c120:	call   DWORD PTR ds:0xa8584f2e
  41c126:	inc    esp
  41c127:	ss and al,0x35
  41c12a:	add    BYTE PTR [eax],al
  41c12c:	repnz leave 
  41c12e:	(bad)  
  41c12f:	std    
  41c130:	pop    ds
  41c131:	inc    edi
  41c132:	pop    eax
  41c133:	test   al,0x44
  41c135:	ss and al,0x15
  41c138:	sbb    cl,dl
  41c13a:	jmp    ebp
  41c13c:	fistp  WORD PTR [esi+0x58]
  41c13f:	sub    BYTE PTR [ebx+0x36],al
  41c142:	and    al,0xb5
  41c144:	add    ecx,edx
  41c146:	dec    ebp
  41c148:	out    dx,eax
  41c149:	push   esi
  41c14a:	pop    eax
  41c14b:	sub    BYTE PTR [ebx+0x36],cl
  41c14e:	and    al,0xc5
  41c150:	jmp    0x41c11b
  41c152:	push   DWORD PTR [ebp+0x28582eaf]
  41c158:	inc    ebx
  41c159:	ss and al,0x95
  41c15c:	xchg   ebx,eax
  41c15d:	leave  
  41c15e:	call   FWORD PTR [ebp+0x2858269f]
  41c164:	dec    ebx
  41c165:	ss and al,0x95
  41c168:	jnp    0x41c133
  41c16a:	(bad)  
  41c16b:	dec    ecx
  41c16d:	and    esi,esi
  41c16f:	pop    ecx
  41c170:	pop    edi
  41c171:	or     eax,0x54fa25ff
  41c176:	aas    
  41c177:	add    cl,ch
  41c179:	and    BYTE PTR [edx],al
  41c17b:	pop    edx
  41c17c:	lahf   
  41c17d:	or     bh,bh
  41c17f:	and    eax,0x3f5476
  41c184:	stc    
  41c185:	and    BYTE PTR [edx],cl
  41c187:	pop    edx
  41c188:	scas   eax,DWORD PTR es:[edi]
  41c189:	or     bh,bh
  41c18b:	and    eax,0x3f546e
  41c190:	add    BYTE PTR [eax],al
  41c192:	or     DWORD PTR [ecx],esp
  41c194:	adc    bl,BYTE PTR [edx-0x11]
  41c197:	or     edi,edi
  41c199:	and    eax,0x3f5416
  41c19e:	imul   esp,DWORD PTR [ecx],0x9df5a1e
  41c1a4:	jmp    DWORD PTR ds:0x3f5406
  41c1aa:	dec    ecx
  41c1ab:	and    DWORD PTR [edx],ebp
  41c1ad:	pop    edx
  41c1ae:	fisttp WORD PTR [ecx]
  41c1b0:	jmp    DWORD PTR ds:0x3f53ce
  41c1b6:	stc    
  41c1b7:	sub    eax,0x9af5a32
  41c1bc:	jmp    DWORD PTR ds:0x3f5726
  41c1c2:	or     DWORD PTR [esi],ebp
  41c1c4:	cmp    bl,BYTE PTR [edx+0x2f]
  41c1c7:	or     eax,0x572e25ff
  41c1cc:	aas    
  41c1cd:	add    BYTE PTR [ecx],cl
  41c1cf:	cs inc edx
  41c1d1:	pop    edx
  41c1d2:	pop    ds
  41c1d3:	or     eax,0x576625ff
  41c1d8:	aas    
  41c1d9:	add    cl,ch
  41c1db:	sub    eax,0xd5f5a4a
  41c1e0:	jmp    DWORD PTR ds:0x3f5772
  41c1e6:	inc    edi
  41c1e7:	lahf   
  41c1e8:	out    0x5b,al
  41c1ea:	std    
  41c1eb:	loopne 0x41c1f0
  41c1ed:	jmp    FWORD PTR [edx+0x0]
  41c1f0:	fiadd  WORD PTR [eax+0x47]
  41c1f3:	mov    bh,0xe6
  41c1f5:	add    BYTE PTR [bx+si],al
  41c1f8:	sbb    eax,0x22ff03e1
  41c1fd:	xor    al,0xdc
  41c1ff:	inc    eax
  41c200:	inc    edi
  41c201:	scas   eax,DWORD PTR es:[edi]
  41c202:	out    0x6f,al
  41c204:	or     eax,0x2aff0261
  41c209:	push   esp
  41c20a:	fadd   QWORD PTR [eax+0x47]
  41c20d:	(bad)  
  41c20e:	out    0x77,al
  41c210:	in     eax,dx
  41c211:	pusha  
  41c212:	add    bh,bh
  41c214:	and    dh,BYTE PTR [esp+ebx*8+0x40]
  41c218:	inc    edi
  41c219:	sti    
  41c21a:	out    0x83,al
  41c21c:	popf   
  41c21d:	popa   
  41c21e:	add    bh,bh
  41c220:	push   0xffffffba
  41c222:	fld    QWORD PTR [eax+0x47]
  41c225:	adc    esp,edi
  41c227:	mov    edi,DWORD PTR [ebp+0x61]
  41c22a:	add    bh,bh
  41c22c:	bound  esi,QWORD PTR [edx+0xb4740dd]
  41c232:	out    0x93,eax
  41c234:	ins    DWORD PTR es:[edi],dx
  41c235:	popa   
  41c236:	add    bh,bh
  41c238:	sub    bl,dl
  41c23a:	fld    QWORD PTR [eax+0x47]
  41c23d:	and    esp,ebp
  41c23f:	fwait
  41c240:	(bad)  
  41c241:	loope  0x41c246
  41c243:	jmp    DWORD PTR [edx]
  41c245:	sbb    ah,0x40
  41c248:	inc    edi
  41c249:	pop    ebx
  41c24a:	in     eax,0xa3
  41c24c:	jge    0x41c22f
  41c24e:	add    edi,edi
  41c250:	sub    bl,BYTE PTR [edx+0x734740dc]
  41c256:	in     eax,0xaf
  41c258:	sbb    eax,0xff03e1
  41c25d:	add    BYTE PTR [edx-0x42],ah
  41c260:	fadd   QWORD PTR [eax+0x47]
  41c263:	or     DWORD PTR [ebp-0x53ba83b1],esi
  41c269:	dec    edi
  41c26a:	mov    WORD PTR [ebp+0x61],es
  41c26d:	(bad)  
  41c26e:	fs or  eax,0xb6463b6a
  41c274:	lock jnp 0x41c29b
  41c277:	or     ecx,ebp
  41c279:	add    eax,DWORD PTR [ebp+0x7084e90d]
  41c27f:	or     eax,0x7af0bec
  41c284:	jmp    0xe489098c
  41c289:	add    eax,esp
  41c28b:	xor    eax,esp
  41c28d:	mov    esi,0x3e47140
  41c292:	inc    edi
  41c293:	or     DWORD PTR [ebx],ebp
  41c295:	pop    es
  41c296:	inc    edi
  41c297:	mov    BYTE PTR [eax+0x13],al
  41c29a:	ret    0x7101
  41c29d:	or     DWORD PTR [edi+0x9],eax
  41c2a0:	jmp    0x6a4b06ea
  41c2a5:	cmp    ecx,DWORD PTR [eax-0x4a]
  41c2a8:	lock jnp 0x41c2f3
  41c2ab:	or     ecx,ebp
  41c2ad:	add    eax,DWORD PTR ds:0x1884e90d
  41c2b3:	leave  
  41c2b4:	or     DWORD PTR [ebx],0xffffffcf
  41c2b7:	(bad)  
  41c2b8:	call   0xec8909c0
  41c2bd:	add    edi,DWORD PTR [edx]
  41c2bf:	mov    eax,ebp
  41c2c1:	add    eax,DWORD PTR [eax]
  41c2c3:	add    BYTE PTR [edi-0x4a],al
  41c2c6:	lock jnp 0x41c305
  41c2c9:	or     ecx,ebp
  41c2cb:	add    eax,DWORD PTR ds:0x4700e90d
  41c2d1:	or     ch,cl
  41c2d3:	add    edx,DWORD PTR [edx+0x1]
  41c2d6:	or     DWORD PTR [esi],0x41e90947
  41c2dc:	inc    esp
  41c2dd:	or     DWORD PTR [eax],eax
  41c2df:	hlt    
  41c2e0:	inc    esp
  41c2e1:	pop    es
  41c2e2:	add    cl,ch
  41c2e4:	xchg   DWORD PTR [ebx],ecx
  41c2e6:	mov    eax,0x944f9
  41c2eb:	stos   DWORD PTR es:[edi],eax
  41c2ec:	dec    edi
  41c2ed:	or     DWORD PTR ds:0x940e9,edi
  41c2f3:	or     al,0x43
  41c2f5:	jno    0x41c308
  41c2f7:	jmp    0xe603cc40
  41c2fc:	inc    esp
  41c2fd:	idiv   bh
  41c2ff:	loopne 0x41c345
  41c301:	or     DWORD PTR [ebp-0x1f],edi
  41c304:	in     al,dx
  41c305:	pop    ss
  41c306:	add    cl,ch
  41c308:	inc    esp
  41c309:	inc    edi
  41c30a:	add    ebp,ecx
  41c30c:	inc    edi
  41c30d:	or     DWORD PTR [eax],edx
  41c30f:	jmp    0x91497958
  41c314:	cmp    DWORD PTR [ecx],ecx
  41c316:	add    cl,ch
  41c318:	push   es
  41c319:	or     BYTE PTR [eax],al
  41c31b:	cld    
  41c31c:	inc    esp
  41c31d:	jmp    0xb49ac21
  41c322:	mov    eax,0x944d1
  41c327:	sub    eax,DWORD PTR [eax]
  41c329:	add    BYTE PTR [edi],bh
  41c32b:	or     DWORD PTR ds:0xfe3304e9,edi
  41c331:	xchg   esp,eax
  41c332:	dec    esp
  41c333:	jno    0x41c34e
  41c335:	jmp    0xee03cc7e
  41c33a:	inc    esp
  41c33b:	hlt    
  41c33c:	jmp    FWORD PTR [eax+0x4b]
  41c33f:	or     DWORD PTR [ebp-0x1f],edi
  41c342:	jl     0x41c352
  41c344:	add    cl,ch
  41c346:	inc    esp
  41c347:	inc    edi
  41c348:	add    ebp,ecx
  41c34a:	cmc    
  41c34b:	inc    ecx
  41c34c:	cmp    al,0xe9
  41c34e:	inc    esp
  41c34f:	or     BYTE PTR [eax],al
  41c351:	out    0xa7,al
  41c353:	dec    ecx
  41c354:	mov    WORD PTR ds:0x8b1342,ds
  41c35a:	lahf   
  41c35b:	enter  0x2,0x2d
  41c35f:	lea    ebx,[edx]
  41c361:	add    al,0xae
  41c363:	push   es
  41c364:	push   DWORD PTR [ebp-0x7d]
  41c367:	jg     0x41c3e8
  41c369:	adc    BYTE PTR [edx+0x2f890006],bl
  41c36f:	push   cs
  41c370:	add    al,0x0
  41c372:	scas   al,BYTE PTR es:[edi]
  41c373:	inc    esi
  41c374:	lds    eax,FWORD PTR [ecx+0xaa2]
  41c37a:	xchg   esi,eax
  41c37b:	push   es
  41c37c:	add    BYTE PTR [eax],al
  41c37e:	test   DWORD PTR [esi+ecx*1-0x7cf991fc],0xa8a7c
  41c389:	mov    esi,edi
  41c38b:	or     eax,0x4
  41c390:	outs   dx,BYTE PTR ds:[esi]
  41c391:	jp     0x41c39c
  41c393:	mov    ch,BYTE PTR [edi+0x8]
  41c396:	sar    dh,0x1e
  41c399:	jle    0x41c39a
  41c39b:	rcr    DWORD PTR [edx+0x6],0xd0
  41c39f:	and    DWORD PTR [edx+ecx*1+0x0],ebp
  41c3a3:	sub    DWORD PTR [edi+0x1e000412],0xfffffff3
  41c3aa:	jae    0x41c3c9
  41c3ac:	mov    ch,0x8d
  41c3ae:	push   cs
  41c3af:	add    al,0x2e
  41c3b1:	push   es
  41c3b2:	mov    DWORD PTR [ecx+0xa16],eax
  41c3b8:	fmulp  st(2),st
  41c3ba:	jg     0x41c3d8
  41c3bc:	sbb    al,BYTE PTR [esi]
  41c3be:	add    BYTE PTR [eax],cl
  41c3c0:	out    dx,al
  41c3c1:	add    eax,0x166f8900
  41c3c6:	add    al,0x0
  41c3c8:	fidivr WORD PTR [esi-0x79]
  41c3cb:	sbb    dl,bl
  41c3cd:	add    eax,0xc84fd000
  41c3d2:	add    DWORD PTR [ecx+0x63c47],0x1cb64347
  41c3dc:	mov    esp,0x470413a0
  41c3e1:	and    BYTE PTR [ecx+0x2245f80],cl
  41c3e7:	add    BYTE PTR [edi],al
  41c3e9:	imul   eax,DWORD PTR [edx+0x220431b],0x8
  41c3f0:	inc    edi
  41c3f1:	and    BYTE PTR [edx],al
  41c3f3:	mov    DWORD PTR [eax],eax
  41c3f5:	add    dh,al
  41c3f7:	das    
  41c3f8:	push   es
  41c3f9:	add    BYTE PTR [edi-0x59],al
  41c3fc:	mov    dl,BYTE PTR [edi]
  41c3fe:	inc    ebx
  41c3ff:	and    BYTE PTR [edx],al
  41c401:	mov    al,BYTE PTR [esi+0x1e]
  41c404:	inc    edx
  41c405:	std    
  41c406:	xchg   DWORD PTR [edi-0x14433cfe],esp
  41c40c:	out    0x3,eax
  41c40e:	mov    esp,0xfa03e673
  41c413:	jns    0x41c3e8
  41c415:	xor    dl,BYTE PTR [ecx-0x54]
  41c418:	retf   0xbdff
  41c41b:	xlat   BYTE PTR ds:[ebx]
  41c41c:	and    dh,0x46
  41c41f:	adc    DWORD PTR [eax*2-0x7d2ca92e],ebp
  41c426:	aas    
  41c427:	and    dh,BYTE PTR [ebx+0x2f0c4ef]
  41c42d:	mov    ebp,0xfe3ce828
  41c432:	ror    BYTE PTR [ebp+0x73957409],cl
  41c438:	xchg   esi,edi
  41c43a:	inc    esi
  41c43b:	leave  
  41c43c:	pop    ds
  41c43d:	add    al,0x47
  41c43f:	and    dh,BYTE PTR [ebp+0x13a1cc18]
  41c445:	add    al,0x47
  41c447:	and    cl,BYTE PTR [ecx+0x2264f80]
  41c44d:	add    BYTE PTR [edi+0x3c7a7009],al
  41c453:	add    eax,0x8ace03e9
  41c458:	clc    
  41c459:	pop    es
  41c45a:	add    BYTE PTR [eax],al
  41c45c:	inc    edi
  41c45d:	or     DWORD PTR [edx-0x7e],esp
  41c460:	xor    BYTE PTR ds:0x4bb903e9,al
  41c466:	out    0xb7,eax
  41c468:	dec    esi
  41c469:	adc    eax,0x1
  41c46c:	mov    WORD PTR [edi],gs
  41c46e:	test   eax,0xea24508b
  41c473:	push   ebx
  41c474:	inc    eax
  41c475:	or     dl,BYTE PTR [eax+0x1f]
  41c478:	inc    ebx
  41c479:	or     ecx,ebp
  41c47b:	mov    dh,0x2f
  41c47d:	test   BYTE PTR [edi+0x13],ah
  41c480:	inc    ebx
  41c481:	or     ecx,ebp
  41c483:	mov    al,bh
  41c485:	adc    ebp,esp
  41c487:	add    eax,DWORD PTR [edi-0x37]
  41c48a:	pop    edi
  41c48b:	jp     0x41c4d9
  41c48d:	add    eax,0x8abe03e9
  41c492:	clc    
  41c493:	pop    es
  41c494:	inc    edi
  41c495:	or     DWORD PTR [edx-0x7e],esi
  41c498:	xor    BYTE PTR ds:0x11bd03e9,al
  41c49e:	jmp    0x41c4f8
  41c4a0:	dec    edx
  41c4a1:	dec    esp
  41c4a2:	pop    ss
  41c4a3:	sub    ebp,eax
  41c4a5:	push   ds
  41c4a6:	out    0x8b,eax
  41c4a8:	push   eax
  41c4a9:	mov    dh,0x5a
  41c4ab:	fadd   DWORD PTR [edi+0x62]
  41c4ae:	int3   
  41c4af:	pop    es
  41c4b0:	inc    edi
  41c4b1:	or     DWORD PTR [edx+ebx*1+0x7f889cc],ebx
  41c4b8:	inc    edi
  41c4b9:	or     DWORD PTR [eax-0x7e],esp
  41c4bc:	cmp    BYTE PTR ds:0x3e9,al
  41c4c2:	xchg   DWORD PTR [edx+0x94b1f3f],eax
  41c4c8:	jmp    0x5a8c57
  41c4cd:	in     eax,dx
  41c4ce:	inc    esp
  41c4cf:	or     DWORD PTR [ebx+0x54c68],ecx
  41c4d5:	jmp    0x55420ef0
  41c4da:	dec    ecx
  41c4db:	or     DWORD PTR [edi],0xffffffeb
  41c4de:	jp     0x41c50e
  41c4e0:	shl    DWORD PTR [ecx+0x33],0x24
  41c4e4:	add    DWORD PTR [ecx-0x2256f755],ebx
  41c4ea:	mov    eax,0x523cfe2f
  41c4ef:	test   BYTE PTR [eax-0x1d05727],al
  41c4f5:	jo     0x41c4c1
  41c4f7:	pop    ss
  41c4f8:	add    al,0xe9
  41c4fa:	inc    esp
  41c4fb:	leave  
  41c4fc:	mov    BYTE PTR [eax+0x2f],dl
  41c4ff:	add    eax,0x88bbe900
  41c504:	paddsw mm0,QWORD PTR [ecx+ecx*1-0x75]
  41c509:	jo     0x41c566
  41c50b:	add    eax,0xe914e900
  41c510:	pop    esi
  41c511:	jle    0x7a2ac860
  41c517:	aam    0x8a
  41c519:	int    0x78
  41c51b:	call   DWORD PTR [ebp+0x1a]
  41c51e:	or     edx,edi
  41c520:	or     BYTE PTR [esp+edi*1-0x49],0x4
  41c525:	test   BYTE PTR [eax],al
  41c527:	add    BYTE PTR [ecx+ecx*1+0x0],cl
  41c52b:	jmp    0xdd6577f9
  41c530:	shl    DWORD PTR [edi],0x2a
  41c533:	xor    al,0xbe
  41c535:	stos   BYTE PTR es:[edi],al
  41c536:	and    ebp,ecx
  41c538:	ror    BYTE PTR [edi],cl
  41c53a:	test   BYTE PTR [edx-0x29],al
  41c53d:	push   cs
  41c53e:	mov    esp,DWORD PTR [eax+eax*8]
  41c541:	push   esp
  41c542:	mov    WORD PTR [edx+0x43],?
  41c545:	or     DWORD PTR [eax],eax
  41c547:	add    dh,ch
  41c549:	sub    al,0x18
  41c54b:	je     0x41c52d
  41c54d:	cmp    eax,0x78278540
  41c552:	hlt    
  41c553:	sbb    DWORD PTR [esi],0xa
  41c556:	test   ecx,ecx
  41c558:	cmp    ebp,0xffffff82
  41c55b:	shr    ah,0xdf
  41c55e:	add    DWORD PTR [ebx+0x46470b9e],eax
  41c564:	pop    ebp
  41c565:	data16 and bl,BYTE PTR [edi+ebp*4]
  41c569:	jns    0x41c537
  41c56b:	pop    edi
  41c56c:	pop    eax
  41c56d:	push   eax
  41c56e:	pop    ecx
  41c56f:	ret    0xaaa
  41c572:	mov    edx,DWORD PTR [edx+eax*2+0x9]
  41c576:	push   ebp
  41c577:	push   esi
  41c578:	adc    eax,0x7686c5f5
  41c57d:	cs (bad) 
  41c57f:	call   FWORD PTR [esi+0x2400000a]
  41c585:	cld    
  41c586:	or     ecx,0x79
  41c589:	scas   al,BYTE PTR es:[edi]
  41c58a:	add    DWORD PTR cs:[eax],eax
  41c58d:	add    BYTE PTR [esi+0xa],ch
  41c590:	push   edi
  41c591:	mov    edi,DWORD PTR [edx+0x4e]
  41c594:	adc    al,BYTE PTR [ebx+0x57602d9]
  41c59a:	test   eax,0x6e000003
  41c59f:	jg     0x41c561
  41c5a1:	sub    esp,DWORD PTR [ecx]
  41c5a3:	call   0x404d:0x3c720838
  41c5aa:	mov    bl,0xf3
  41c5ac:	jae    0x41c5a4
  41c5ae:	lods   eax,DWORD PTR ds:[esi]
  41c5af:	mov    BYTE PTR [edx],bl
  41c5b1:	add    al,0x1e
  41c5b3:	or     bh,bh
  41c5b5:	jne    0x41c5b2
  41c5b7:	jle    0x41c53d
  41c5b9:	adc    BYTE PTR [edx],dh
  41c5bb:	or     al,BYTE PTR [eax]
  41c5bd:	mov    DWORD PTR [eax+0x47000412],esp
  41c5c3:	and    dl,al
  41c5c5:	mov    cl,0x1b
  41c5c8:	(bad)  
  41c5c9:	inc    DWORD PTR [eax]
  41c5cb:	cmp    BYTE PTR [edx],al
  41c5cd:	add    BYTE PTR [edi-0x47],al
  41c5d0:	or     BYTE PTR [edi],0x4b
  41c5d3:	and    BYTE PTR [edx],al
  41c5d5:	mov    eax,ecx
  41c5d7:	push   edi
  41c5d8:	(bad)  
  41c5d9:	jmp    eax
  41c5db:	outs   dx,DWORD PTR ds:[esi]
  41c5dc:	jecxz  0x41c568
  41c5de:	shr    DWORD PTR [edi],0xfe
  41c5e1:	call   eax
  41c5e3:	test   eax,0x27bf5f0d
  41c5e8:	aaa    
  41c5e9:	test   DWORD PTR [edi+0x1c],edx
  41c5ec:	add    al,BYTE PTR [eax]
  41c5ee:	sbb    DWORD PTR ds:0x746,ecx
  41c5f4:	inc    edi
  41c5f5:	popf   
  41c5f6:	cmp    BYTE PTR [ebx-0x11],dh
  41c5f9:	mov    ds:0xb646fe4a,al
  41c5fe:	pop    ss
  41c5ff:	add    al,0x47
  41c601:	and    BYTE PTR [ebp+0x1b0d3e68],al
  41c607:	mov    eax,ecx
  41c609:	das    
  41c60a:	(bad)  
  41c60b:	inc    DWORD PTR [eax+0x431781b8]
  41c611:	and    BYTE PTR [edx],al
  41c613:	inc    eax
  41c614:	mov    esi,0x470417c5
  41c619:	and    BYTE PTR [ecx+0x21c3785],cl
  41c61f:	add    ah,cl
  41c621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c622:	sbb    eax,DWORD PTR [edi+eax*2]
  41c625:	and    BYTE PTR [edi+ecx*1-0x3ec60dbb],cl
  41c62c:	iret   
  41c62d:	push   edx
  41c62e:	add    DWORD PTR [esi+0x2265b],ecx
  41c634:	mov    edx,0x57858b59
  41c639:	add    al,BYTE PTR es:[eax]
  41c63c:	into   
  41c63d:	or     DWORD PTR [edi+0x1c],ebp
  41c640:	inc    ebx
  41c641:	or     ecx,ebp
  41c643:	ret    
  41c644:	mov    edi,0x8fff45b
  41c649:	sub    eax,0x550825f
  41c64e:	jmp    0xe0c59256
  41c653:	push   eax
  41c655:	sub    al,0x62
  41c657:	adc    al,0x0
  41c659:	add    BYTE PTR [ebp+0x57],al
  41c65c:	out    dx,al
  41c65d:	inc    ebp
  41c65e:	enter  0xe819,0x89
  41c662:	cmp    al,0x5
  41c664:	jmp    0x6254206c
  41c669:	cmp    DWORD PTR [eax],0xce03e905
  41c66f:	and    eax,0xffffffff
  41c672:	mov    eax,0xe28b282c
  41c677:	or     eax,0x824703ed
  41c67c:	adc    cx,WORD PTR [ebx+0x9]
  41c680:	jmp    0xe5538911
  41c685:	add    eax,DWORD PTR [edi+0x7f]
  41c688:	loopne 0x41c68f
  41c68a:	jle    0x41c6b7
  41c68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c68d:	mov    WORD PTR [ecx+0x408b9be8],ds
  41c693:	xlat   BYTE PTR ds:[ebx]
  41c694:	jno    0x41c6df
  41c696:	push   0x69387452
  41c69b:	and    BYTE PTR [ebp-0x46fa7f7c],0x8c
  41c6a2:	mov    ah,BYTE PTR [ecx]
  41c6a4:	sub    al,0x37
  41c6a6:	push   ecx
  41c6a7:	sub    al,0x61
  41c6a9:	dec    eax
  41c6aa:	lds    ebp,FWORD PTR [edx]
  41c6ac:	jmp    0x3c78:0x503acdd2
  41c6b3:	sub    al,0x3d
  41c6b5:	test   BYTE PTR [ecx],ch
  41c6b7:	or     al,BYTE PTR [eax]
  41c6b9:	sahf   
  41c6ba:	mov    ebx,0x75e73d
  41c6bf:	add    BYTE PTR [eax+0x2b],bl
  41c6c2:	inc    dh
  41c6c4:	dec    ah
  41c6c6:	shl    ecx,0x44
  41c6c9:	mov    al,cl
  41c6cb:	push   ss
  41c6cc:	inc    ebp
  41c6cd:	jnp    0x41c6ea
  41c6cf:	in     eax,0x44
  41c6d1:	or     DWORD PTR [ebp+0x18b64d90],ecx
  41c6d7:	jb     0x41c69f
  41c6d9:	sti    
  41c6da:	add    ebp,ecx
  41c6dc:	inc    esp
  41c6dd:	add    BYTE PTR [ebp-0x1d41f2f],0x29
  41c6e4:	retf   0x1b5d
  41c6e7:	in     eax,0x44
  41c6e9:	or     DWORD PTR [ecx+0x5336f],ecx
  41c6ef:	jmp    0xed594cc1
  41c6f4:	inc    esp
  41c6f5:	or     DWORD PTR [edx-0x2a8b927],ecx
  41c6fb:	stos   DWORD PTR es:[edi],eax
  41c6fc:	mov    ebx,0x3f5f00fb
  41c701:	add    eax,0x10d7e900
  41c706:	mov    esp,DWORD PTR [edi+0x3b]
  41c709:	add    eax,0x85bbe900
  41c70e:	pop    ss
  41c70f:	in     eax,0x44
  41c711:	or     DWORD PTR [eax+0x70],eax
  41c714:	loope  0x41c725
  41c716:	add    al,0xe9
  41c718:	inc    esp
  41c719:	add    BYTE PTR [ebp-0x1d49727],0x62
  41c720:	loope  0x41c735
  41c722:	add    al,0xe9
  41c724:	add    BYTE PTR [eax],al
  41c726:	inc    esp
  41c727:	jg     0x41c738
  41c729:	jmp    0x41c721
  41c72b:	sub    eax,0xa3361c1
  41c730:	mov    gs,ebp
  41c732:	inc    eax
  41c733:	sub    edi,esi
  41c735:	add    bl,bh
  41c737:	or     eax,0x2b0e868b
  41c73c:	(bad)  
  41c73d:	jmp    DWORD PTR [edi+0x2e0416ab]
  41c743:	pop    es
  41c744:	inc    eax
  41c745:	mov    DWORD PTR [eax+0x11],esi
  41c748:	add    al,0x0
  41c74a:	push   ds
  41c74b:	jle    0x41c6d1
  41c74d:	adc    BYTE PTR [edx],bl
  41c74f:	pop    es
  41c750:	add    BYTE PTR [ebx+0x40d68],cl
  41c756:	out    dx,al
  41c757:	or     BYTE PTR [esi],0x2
  41c75a:	dec    esp
  41c75b:	repz ror BYTE PTR [eax+0x1c8e060e],0xea
  41c763:	push   es
  41c764:	add    BYTE PTR [ebp+0x47],dh
  41c767:	jle    0x41c6ed
  41c769:	adc    dl,ch
  41c76b:	push   es
  41c76c:	add    BYTE PTR [ecx+0x40e58],cl
  41c772:	scas   al,BYTE PTR es:[edi]
  41c773:	inc    esi
  41c774:	xchg   DWORD PTR [esi-0x1d55e],ebp
  41c77a:	aaa    
  41c77b:	lods   al,BYTE PTR ds:[esi]
  41c77c:	push   cs
  41c77d:	add    al,0x9e
  41c77f:	push   es
  41c780:	mov    eax,DWORD PTR [esi-0x1d58a]
  41c786:	fisub  WORD PTR [esi]
  41c788:	dec    DWORD PTR [ebp+0x2a920000]
  41c78e:	(bad)  
  41c78f:	jmp    FWORD PTR [ebx]
  41c791:	or     al,0x8b
  41c793:	xchg   BYTE PTR [esi+0x2a],bh
  41c796:	(bad)  
  41c797:	push   edi
  41c799:	stos   DWORD PTR es:[edi],eax
  41c79a:	push   ss
  41c79b:	add    al,0x5e
  41c79d:	push   es
  41c79e:	inc    eax
  41c79f:	mov    DWORD PTR [eax],eax
  41c7a1:	adc    al,BYTE PTR [eax+eax*1]
  41c7a4:	outs   dx,BYTE PTR ds:[esi]
  41c7a5:	jge    0x41c72b
  41c7a7:	adc    BYTE PTR [edx+0x6],ch
  41c7aa:	add    BYTE PTR [ebx+0x40de8],cl
  41c7b0:	inc    edi
  41c7b1:	and    BYTE PTR [edx+0x1f],dl
  41c7b4:	inc    esi
  41c7b5:	retf   0x416
  41c7b8:	inc    edi
  41c7b9:	and    BYTE PTR [edi+0x12a1bc18],ch
  41c7bf:	add    al,0x47
  41c7c1:	and    BYTE PTR [ebx+0x2243f85],cl
  41c7c7:	add    BYTE PTR [edi+0x4b1b64b9],al
  41c7cd:	and    BYTE PTR [edx],al
  41c7cf:	mov    ecx,eax
  41c7d1:	das    
  41c7d2:	(bad)  
  41c7d3:	inc    DWORD PTR [eax]
  41c7d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d6:	jl     0x41c7ef
  41c7d8:	inc    ebx
  41c7d9:	and    BYTE PTR [edx],al
  41c7db:	shl    BYTE PTR [edi],1
  41c7dd:	and    DWORD PTR [ebx+ebx*1+0x75022043],eax
  41c7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e6:	jl     0x41c7f7
  41c7e8:	inc    ebx
  41c7e9:	and    BYTE PTR [edx],al
  41c7eb:	mov    ecx,ecx
  41c7ed:	pop    es
  41c7ee:	add    BYTE PTR [eax],al
  41c7f0:	add    BYTE PTR [eax],al
  41c7f2:	inc    edi
  41c7f3:	loopne 0x41c77f
  41c7f5:	lods   eax,DWORD PTR ds:[esi]
  41c7f6:	arpl   WORD PTR [edx+eax*1],sp
  41c7f9:	add    dh,cl
  41c7fb:	cdq    
  41c7fc:	adc    eax,DWORD PTR [edi+eax*2]
  41c7ff:	and    BYTE PTR [edi+0x21c4fb5],al
  41c805:	add    BYTE PTR [edi+0x1],dh
  41c808:	(bad)  
  41c809:	pop    esp
  41c80a:	test   DWORD PTR [edi],esi
  41c80c:	add    cl,BYTE PTR [ebx+0x55fe440b]
  41c812:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c814:	mov    bh,0x23
  41c816:	push   edi
  41c817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c818:	xor    bh,BYTE PTR [edi+eax*8]
  41c81b:	pop    ds
  41c81c:	add    al,BYTE PTR [eax]
  41c81e:	hlt    
  41c81f:	dec    ebx
  41c820:	jg     0x41c820
  41c822:	inc    ebx
  41c823:	das    
  41c824:	or     edi,DWORD PTR [ebx]
  41c826:	leave  
  41c827:	inc    ebx
  41c828:	(bad)  
  41c829:	call   FWORD PTR [eax+0x8]
  41c82c:	(bad)  
  41c82e:	pop    ecx
  41c82f:	push   eax
  41c830:	add    DWORD PTR [ebp+eax*8+0x28],eax
  41c834:	out    dx,al
  41c835:	aam    0xc5
  41c837:	dec    ecx
  41c838:	jecxz  0x41c80f
  41c83a:	push   es
  41c83b:	adc    ch,cl
  41c83d:	clc    
  41c83e:	retf   0xe4ed
  41c841:	add    eax,DWORD PTR [edi-0x63]
  41c844:	repz mul BYTE PTR [eax-0x6bfc16f7]
  41c84b:	push   cs
  41c84c:	push   0x25
  41c84e:	inc    esi
  41c84f:	xor    al,0xf8
  41c851:	test   BYTE PTR [eax],0xe
  41c854:	jmp    0x7541c85c
  41c859:	or     bl,BYTE PTR [esi-0x175a070a]
  41c85f:	add    esi,DWORD PTR [ebp+0xa]
  41c862:	scas   al,BYTE PTR es:[edi]
  41c863:	inc    edx
  41c864:	loopne 0x41c877
  41c866:	call   0x222b:0x990ca080
  41c86d:	and    esp,ebp
  41c86f:	xor    al,0x79
  41c871:	xchg   esp,eax
  41c872:	scas   al,BYTE PTR es:[edi]
  41c873:	mov    al,dh
  41c875:	xor    esp,esi
  41c877:	cmp    ecx,eax
  41c879:	sub    BYTE PTR [ebx-0x41],bl
  41c87c:	push   eax
  41c87d:	adc    esp,DWORD PTR [edx]
  41c87f:	aad    0x12
  41c881:	dec    ebx
  41c882:	lock add edx,DWORD PTR [eax]
  41c885:	xor    esp,esp
  41c887:	cmp    DWORD PTR [ecx-0x277ef2d8],esp
  41c88d:	or     eax,0x9484247
  41c892:	cmp    cl,BYTE PTR [ecx-0x311f1314]
  41c898:	sbb    dl,BYTE PTR [edi+edx*4-0x130e4580]
  41c89f:	add    eax,DWORD PTR [edi+0x9]
  41c8a2:	push   ss
  41c8a3:	add    eax,0xe80004c3
  41c8a8:	inc    esp
  41c8a9:	or     DWORD PTR [ecx-0x1d73b8e],eax
  41c8af:	jmp    0xddc4924b
  41c8b4:	push   0x3eda0400
  41c8b9:	xor    BYTE PTR [esi],dh
  41c8bb:	push   edx
  41c8bc:	add    BYTE PTR [eax],al
  41c8be:	jae    0x41c8e7
  41c8c0:	mov    dh,BYTE PTR [edi]
  41c8c2:	pop    esp
  41c8c3:	clc    
  41c8c4:	cli    
  41c8c5:	ds jae 0x41c85b
  41c8c8:	int    0x41
  41c8ca:	pop    esi
  41c8cb:	and    bh,dh
  41c8cd:	cs into 
  41c8cf:	retf   
  41c8d0:	and    eax,DWORD PTR [ecx]
  41c8d2:	mov    esi,0x44e50f7d
  41c8d7:	or     DWORD PTR [edx+0x2092022],ecx
  41c8dd:	and    BYTE PTR [esi+0x4a],al
  41c8e0:	pop    esi
  41c8e1:	jno    0x41c929
  41c8e3:	sub    BYTE PTR [ebp-0x1d81727],al
  41c8e9:	pusha  
  41c8ea:	mov    edx,0x44e903eb
  41c8ef:	(bad)  
  41c8f0:	pop    esp
  41c8f1:	inc    edx
  41c8f2:	mov    DWORD PTR [eax],edx
  41c8f4:	add    BYTE PTR [edx-0x7c],ch
  41c8f7:	daa    
  41c8f8:	add    BYTE PTR [edi-0x16fff2a9],dl
  41c8fe:	(bad)  
  41c8ff:	mov    dh,0x8
  41c901:	cmp    al,0x42
  41c903:	xchg   esp,eax
  41c904:	test   ecx,ebx
  41c906:	inc    eax
  41c907:	or     DWORD PTR [eax],eax
  41c909:	pusha  
  41c90a:	int    0xff
  41c90c:	add    ebp,ecx
  41c90e:	inc    esp
  41c90f:	leave  
  41c910:	mov    BYTE PTR [edi+0x37],dl
  41c913:	or     eax,0x8e0be900
  41c918:	paddsw mm0,QWORD PTR [ecx+ecx*1-0x75]
  41c91d:	addr16 dec ebx
  41c91f:	or     eax,0x0
  41c924:	pop    esi
  41c925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c926:	push   es
  41c927:	add    dh,BYTE PTR [edi+0x6688bfda]
  41c92d:	or     al,0xbe
  41c92f:	sbb    al,0x62
  41c931:	or     eax,DWORD PTR [eax]
  41c933:	jne    0x41c97c
  41c935:	test   al,0x84
  41c937:	adc    BYTE PTR [edx+0xb],ah
  41c93a:	add    BYTE PTR [ecx+0x415b0],cl
  41c940:	cs dec ebx
  41c942:	xchg   DWORD PTR [esi+0xf2a],ebp
  41c948:	mov    bh,0x93
  41c94a:	push   cs
  41c94b:	add    al,0x2e
  41c94d:	or     ecx,DWORD PTR [ebx+0xef686]
  41c953:	add    BYTE PTR [esi+0x2d],cl
  41c956:	mov    ebx,edx
  41c958:	pop    edi
  41c959:	pop    es
  41c95a:	pop    es
  41c95b:	sub    DWORD PTR [edi+ecx*1],0x52
  41c95f:	mov    ebx,DWORD PTR [eax+0x5]
  41c962:	enter  0x49fa,0xda
  41c966:	mov    DWORD PTR [esi+0xf0e],eax
  41c96c:	adc    ax,0x1b8
  41c970:	out    dx,al
  41c971:	or     al,BYTE PTR [eax]
  41c973:	add    DWORD PTR [eax-0x6],esp
  41c976:	add    eax,DWORD PTR [eax]
  41c978:	fisub  WORD PTR [ebp+0xab2249c]
  41c97e:	add    BYTE PTR [ecx-0x1756b],al
  41c984:	sahf   
  41c985:	pop    edi
  41c986:	push   ss
  41c987:	add    DWORD PTR [eax],0x0
  41c98a:	cli    
  41c98b:	xor    BYTE PTR [esi],dl
  41c98d:	add    ah,BYTE PTR ds:0x3f182266
  41c993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c994:	int3   
  41c995:	call   0x3fbdab
  41c99a:	dec    ecx
  41c99b:	cmp    ebx,DWORD PTR [ebx+0x5b]
  41c99e:	inc    edi
  41c99f:	jb     0x41c99b
  41c9a1:	inc    edi
  41c9a3:	jnp    0x41c9a7
  41c9a5:	add    eax,0x3b43047
  41c9aa:	push   ds
  41c9ab:	in     al,dx
  41c9ac:	out    0x17,eax
  41c9ae:	(bad)  
  41c9af:	fwait
  41c9b0:	add    bh,BYTE PTR [ebp+0x47]
  41c9b3:	xor    BYTE PTR [ebx+eax*1+0x17e6741e],dh
  41c9ba:	mov    esp,0x9617e674
  41c9bf:	stos   DWORD PTR es:[edi],eax
  41c9c0:	inc    eax
  41c9c1:	out    0xab,eax
  41c9c3:	mov    edx,0x6e90fe31
  41c9c8:	iret   
  41c9c9:	pop    edx
  41c9ca:	add    eax,0xc9c70218
  41c9cf:	pop    es
  41c9d0:	or     BYTE PTR [eax],al
  41c9d2:	inc    edi
  41c9d3:	xor    DWORD PTR [edx],eax
  41c9d5:	add    BYTE PTR [edi-0x4f],al
  41c9d8:	sub    eax,0x230477f
  41c9dd:	jae    0x41c96d
  41c9df:	mov    bl,0xae
  41c9e1:	and    ebx,DWORD PTR [edi+0x2c]
  41c9e4:	mov    ch,0x41
  41c9e6:	sub    al,0xae
  41c9e8:	out    0x3,al
  41c9ea:	inc    edi
  41c9eb:	xor    BYTE PTR [esi-0x10ffffc7],dh
  41c9f1:	sub    DWORD PTR [esi+edi*8],ebp
  41c9f4:	fsubr  DWORD PTR [edx+0x2a44e740]
  41c9fa:	xor    dh,bh
  41c9fc:	mov    esp,0xbecc1b75
  41ca01:	xor    BYTE PTR ds:[ecx-0x74f3f3fd],cl
  41ca08:	sar    DWORD PTR [edi],0x6
  41ca0b:	add    BYTE PTR [edi-0x66],al
  41ca0e:	push   esp
  41ca0f:	and    eax,DWORD PTR [esi+0x32]
  41ca12:	push   esp
  41ca13:	add    DWORD PTR [ebp-0x6fff83ea],eax
  41ca19:	or     BYTE PTR [edi+0x14],ch
  41ca1c:	inc    ebx
  41ca1d:	or     ecx,ebp
  41ca1f:	jp     0x41ca03
  41ca21:	in     al,dx
  41ca22:	in     al,dx
  41ca23:	add    eax,DWORD PTR [edi-0x39]
  41ca26:	sub    ecx,ebp
  41ca28:	xchg   BYTE PTR [eax],dl
  41ca2a:	jmp    0xe76743b3
  41ca2f:	jno    0x41ca6d
  41ca31:	or     eax,0xb5ca03e9
  41ca36:	fbstp  TBYTE PTR [esi+0x146e922f]
  41ca3c:	inc    ebx
  41ca3d:	or     ecx,ebp
  41ca3f:	jp     0x41ca0b
  41ca41:	add    ebp,ebp
  41ca43:	add    eax,DWORD PTR [edi-0x37]
  41ca46:	pop    edi
  41ca47:	bound  ecx,QWORD PTR [ebp+ecx*1-0x17]
  41ca4b:	add    edi,DWORD PTR [esi+0x4707d88b]
  41ca51:	or     DWORD PTR [edx-0x76],esp
  41ca54:	add    BYTE PTR [eax],al
  41ca56:	xor    BYTE PTR ds:0xf9bd03e9,cl
  41ca5c:	jmp    0x4614:0x70480a55
  41ca63:	arpl   sp,si
  41ca65:	pop    es
  41ca66:	inc    edi
  41ca67:	or     DWORD PTR [edx+ecx*1+0x7d88bbc],edx
  41ca6e:	inc    edi
  41ca6f:	or     DWORD PTR [eax-0x76],esi
  41ca72:	cmp    BYTE PTR ds:0x928703e9,cl
  41ca78:	adc    BYTE PTR ds:[ebx+0x9],cl
  41ca7c:	jmp    0xe53b8cfb
  41ca81:	add    eax,DWORD PTR [edi-0x70]
  41ca84:	outs   dx,BYTE PTR ds:[esi]
  41ca85:	or     eax,DWORD PTR [ebx+0x9]
  41ca88:	jmp    0x67221ae0
  41ca8d:	out    0x44,eax
  41ca8f:	or     ecx,ebp
  41ca91:	mov    bh,0x16
  41ca93:	nop
  41ca94:	jmp    FWORD PTR [ecx+0x6a072c05]
  41ca9a:	add    al,0x7
  41ca9c:	push   eax
  41ca9d:	xchg   ecx,eax
  41ca9e:	scas   al,BYTE PTR es:[edi]
  41ca9f:	and    esi,edi
  41caa1:	sahf   
  41caa2:	add    edx,DWORD PTR [esi+0x944ed0f]
  41caa8:	mov    al,dh
  41caaa:	fmul   QWORD PTR [eax]
  41caac:	add    cl,ch
  41caae:	inc    esp
  41caaf:	or     al,BYTE PTR [esi+0x948d9]
  41cab5:	pusha  
  41cab6:	mov    dh,0xe8
  41cab8:	add    ebp,ecx
  41caba:	add    BYTE PTR [eax],al
  41cabc:	inc    esp
  41cabd:	mov    bh,dl
  41cabf:	imul   eax,DWORD PTR [ecx+ecx*1+0x0],0x6b884cda
  41cac7:	or     eax,0xb58b074b
  41cacc:	sub    ah,bh
  41cace:	push   ecx
  41cacf:	jb     0x41ca57
  41cad1:	sub    al,0x63
  41cad3:	inc    eax
  41cad4:	push   edi
  41cad5:	and    ebx,DWORD PTR [esi-0x69]
  41cad8:	or     DWORD PTR [edi-0x75bb1e3f],edi
  41cade:	cli    
  41cadf:	jmp    0x9b41d425
  41cae4:	dec    eax
  41cae5:	repnz inc ebx
  41cae7:	int    0x4c
  41cae9:	mov    bh,dl
  41caeb:	jmp    0x7c3fee91
  41caf0:	int    0xf0
  41caf2:	inc    ebx
  41caf3:	lds    ecx,FWORD PTR [eax+edx*4+0x53]
  41caf7:	int    0x4c
  41caf9:	mov    bh,0x8a
  41cafb:	pop    ds
  41cafc:	sub    al,0xe1
  41cafe:	clc    
  41caff:	out    0x18,al
  41cb01:	ret    
  41cb02:	pop    ebp
  41cb03:	cmp    al,0x8c
  41cb05:	dec    ecx
  41cb06:	pop    es
  41cb07:	jmp    0xe55d2e4f
  41cb0c:	inc    esp
  41cb0d:	or     DWORD PTR [ebp+0x0],esi
  41cb10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb11:	sahf   
  41cb12:	test   BYTE PTR [eax],dl
  41cb14:	stos   BYTE PTR es:[edi],al
  41cb15:	pop    es
  41cb16:	add    BYTE PTR [ecx+0x41528],cl
  41cb1c:	sahf   
  41cb1d:	inc    edi
  41cb1e:	xchg   DWORD PTR [esi+0x11420000],ebp
  41cb24:	add    BYTE PTR [eax],al
  41cb26:	test   DWORD PTR [edx+0x76e040e],0xb76868b
  41cb30:	add    BYTE PTR [eax],al
  41cb32:	into   
  41cb33:	sub    al,0xff
  41cb35:	mov    ebp,0xb82
  41cb3a:	pop    ebx
  41cb3b:	adc    al,0x8b
  41cb3d:	xchg   BYTE PTR [esi+0xb],ch
  41cb40:	add    BYTE PTR [eax],al
  41cb42:	xlat   BYTE PTR ds:[ebx]
  41cb43:	mov    dl,BYTE PTR [esi]
  41cb45:	add    al,0x2e
  41cb47:	pop    es
  41cb48:	inc    eax
  41cb49:	mov    eax,eax
  41cb4b:	stc    
  41cb4c:	add    eax,DWORD PTR [eax]
  41cb4e:	push   ds
  41cb4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb50:	test   BYTE PTR [eax],dl
  41cb52:	sbb    al,BYTE PTR [edi]
  41cb54:	add    BYTE PTR [ebx+0x415a8],cl
  41cb5a:	cs mov bh,0x1e
  41cb5d:	mov    edi,DWORD PTR [edx-0x6aade9d6]
  41cb63:	jecxz  0x41cb4b
  41cb65:	aam    0x26
  41cb67:	repnz std 
  41cb69:	pop    edi
  41cb6a:	mov    al,0x39
  41cb6c:	pop    ecx
  41cb6d:	ret    0x6e6
  41cb70:	mov    eax,DWORD PTR [edx+edi*8+0xa]
  41cb74:	lea    edx,[eax-0x8112]
  41cb7a:	xchg   ebp,eax
  41cb7b:	jge    0x41cb7f
  41cb7d:	add    al,0xde
  41cb7f:	push   es
  41cb80:	jbe    0x41cb9b
  41cb82:	push   ebp
  41cb83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb84:	or     al,BYTE PTR [eax+eax*1]
  41cb87:	add    BYTE PTR [esi+0x47c13b06],ch
  41cb8d:	ret    0x2b08
  41cb90:	xchg   BYTE PTR [esi+0x6],ch
  41cb93:	add    BYTE PTR [ecx+esi*2+0x7],bl
  41cb97:	add    BYTE PTR [edi],ch
  41cb99:	xor    DWORD PTR [edx],eax
  41cb9b:	ret    0x3043
  41cb9e:	icebp  
  41cb9f:	mov    edi,0x83022c85
  41cba4:	fwait
  41cba5:	and    cl,dl
  41cba7:	push   esp
  41cba8:	int3   
  41cba9:	adc    al,0xe8
  41cbab:	pop    ds
  41cbac:	adc    DWORD PTR [edi],edi
  41cbae:	dec    ecx
  41cbaf:	mov    dh,BYTE PTR [esi-0x25]
  41cbb2:	jl     0x41cc0f
  41cbb4:	and    eax,DWORD PTR [eax+0x7b]
  41cbb7:	pop    ebx
  41cbb8:	sub    ebp,DWORD PTR [eax]
  41cbba:	jmp    0x41cb69
  41cbbc:	dec    edi
  41cbbd:	xor    al,0x2
  41cbbf:	add    BYTE PTR [eax-0x51],al
  41cbc2:	popa   
  41cbc3:	dec    DWORD PTR [eax+0x30]
  41cbc6:	sbb    DWORD PTR [edx],ecx
  41cbc8:	ror    BYTE PTR [ebx+0x3038ffe6],cl
  41cbce:	add    cl,BYTE PTR [ebp-0x74fbf355]
  41cbd4:	shl    DWORD PTR [ebx],0x6
  41cbd7:	add    BYTE PTR [edi-0x4b],al
  41cbda:	jp     0x41cbdb
  41cbdc:	mov    al,ds:0xff3b0231
  41cbe1:	pop    ecx
  41cbe2:	adc    eax,0x61bb98b
  41cbe7:	add    BYTE PTR [edi+0x27],al
  41cbea:	inc    ebx
  41cbeb:	jne    0x41cbed
  41cbed:	add    BYTE PTR [ebx+0x47],al
  41cbf0:	inc    ebx
  41cbf1:	jmp    0x7847:0x443473c
  41cbf8:	add    eax,DWORD PTR [eax]
  41cbfa:	in     al,dx
  41cbfb:	sub    eax,0xa9ccbff1
  41cc00:	cli    
  41cc01:	add    eax,DWORD PTR [edi+0x30]
  41cc04:	std    
  41cc05:	mov    ch,0x36
  41cc07:	or     esi,esi
  41cc09:	jne    0x41cc1a
  41cc0b:	or     BYTE PTR [edx-0x28],dh
  41cc0e:	ror    BYTE PTR [edx+eiz*2],cl
  41cc11:	add    BYTE PTR [ebp+0x3c7b0e8d],bh
  41cc17:	mov    dh,BYTE PTR [ecx-0x7a]
  41cc1a:	dec    eax
  41cc1b:	or     eax,0x5b4803e9
  41cc20:	fdivr  st,st(4)
  41cc22:	fcmove st,st(0)
  41cc24:	out    0x78,eax
  41cc26:	cld    
  41cc27:	jp     0x41cc15
  41cc29:	js     0x41cc05
  41cc2b:	or     al,0xe5
  41cc2d:	add    eax,DWORD PTR [edi-0x70]
  41cc30:	cld    
  41cc31:	sub    BYTE PTR [edi+0x4703e907],0x8
  41cc38:	ja     0x41cc42
  41cc3a:	dec    ebx
  41cc3b:	or     ecx,ebp
  41cc3d:	add    cl,cl
  41cc3f:	adc    ch,ch
  41cc41:	add    eax,DWORD PTR [edi-0x72]
  41cc44:	data16 or BYTE PTR [ebx+0x9],al
  41cc48:	jmp    0x6f36d4c5
  41cc4d:	add    BYTE PTR [ebx+0x9],al
  41cc50:	jmp    0x2f41ccd7
  41cc55:	or     al,cl
  41cc57:	add    al,BYTE PTR [edi-0x69]
  41cc5a:	in     eax,dx
  41cc5b:	mov    ebx,0x7ec87cf
  41cc60:	inc    edi
  41cc61:	or     eax,esi
  41cc63:	pop    ebp
  41cc64:	dec    eax
  41cc65:	add    eax,0x8b3803e9
  41cc6a:	xchg   edx,eax
  41cc6b:	sub    al,0x1
  41cc6d:	and    DWORD PTR [ecx-0x38],esi
  41cc70:	and    al,0xd9
  41cc72:	push   edx
  41cc73:	add    al,0x68
  41cc75:	or     ch,cl
  41cc77:	call   0x7b306482
  41cc7c:	je     0x41cc63
  41cc7e:	mov    eax,0xff8c4f18
  41cc83:	lock inc ebp
  41cc85:	adc    BYTE PTR [esi+0x94423],al
  41cc8b:	idiv   BYTE PTR [edx]
  41cc8d:	(bad)  
  41cc90:	xor    cl,ch
  41cc92:	add    BYTE PTR [edx-0x78],ah
  41cc95:	xchg   BYTE PTR [ebx],al
  41cc97:	bound  ebx,QWORD PTR [eax-0x5c3dc578]
  41cc9d:	mov    WORD PTR [edx-0x74f6bb18],?
  41cca3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41cca5:	or     al,0x0
  41cca7:	jmp    0xae50d8b5
  41ccac:	mov    ah,ch
  41ccae:	sbb    ebp,ecx
  41ccb0:	jl     0x41ccd2
  41ccb2:	(bad)  
  41ccb3:	ror    BYTE PTR [ecx],cl
  41ccb5:	call   0xe31b:0x6239
  41ccbc:	cli    
  41ccbd:	std    
  41ccbe:	pop    eax
  41ccbf:	lea    eax,[esi+0x9bce9]
  41ccc5:	mov    dl,0xca
  41ccc7:	or     al,0x4
  41ccc9:	jmp    0x72596412
  41ccce:	retf   0x413
  41ccd1:	jmp    0xe039b11a
  41ccd6:	dec    eax
  41ccd7:	hlt    
  41ccd8:	test   DWORD PTR [edx+0x28],0x8b68f7f3
  41ccdf:	and    BYTE PTR [esi-0x18],ah
  41cce2:	inc    esp
  41cce3:	xor    al,0x1
  41cce5:	cli    
  41cce6:	arpl   WORD PTR [ebx+0x58186205],dx
  41ccec:	mov    ebp,gs
  41ccee:	add    esp,ebx
  41ccf0:	les    ebx,FWORD PTR [edx-0x32ac1ec4]
  41ccf6:	adc    BYTE PTR [esi-0x13ef9ffd],dl
  41ccfc:	sub    eax,DWORD PTR [eax]
  41ccfe:	add    eax,0xbc840df1
  41cd03:	or     al,BYTE PTR [eax]
  41cd05:	add    BYTE PTR [ebx-0x6f],ch
  41cd08:	(bad)  
  41cd09:	(bad)  
  41cd0a:	fimul  WORD PTR [ebx]
  41cd0c:	mov    ecx,ebp
  41cd0e:	push   ebp
  41cd0f:	fld    QWORD PTR [edi+0x3af9424c]
  41cd15:	dec    esp
  41cd16:	inc    edx
  41cd17:	inc    ecx
  41cd18:	or     eax,0x65487
  41cd1d:	add    BYTE PTR [eax],al
  41cd1f:	add    BYTE PTR ds:0x14102261,dl
  41cd25:	stc    
  41cd26:	add    BYTE PTR [edx],bh
  41cd28:	xor    ah,BYTE PTR [edx]
  41cd2a:	dec    BYTE PTR [edx-0x44edd6d6]
  41cd30:	ins    BYTE PTR es:[edi],dx
  41cd31:	or     eax,DWORD PTR [eax]
  41cd33:	add    BYTE PTR [edx+0x21],dl
  41cd36:	cmp    DWORD PTR [esi-0x1e07e],ecx
  41cd3c:	mov    DWORD PTR [eax+0xb6e00c8],ecx
  41cd42:	mov    edx,DWORD PTR [edx+eax*4+0x1b]
  41cd46:	cmp    edx,ebx
  41cd48:	dec    ebp
  41cd49:	and    al,0x8b
  41cd4b:	dec    ebp
  41cd4c:	pop    esp
  41cd4d:	sahf   
  41cd4e:	out    0x2b,al
  41cd50:	sbb    bh,BYTE PTR [edi]
  41cd52:	es mov ah,dl
  41cd55:	and    esi,edi
  41cd57:	cmp    DWORD PTR [edi],ebx
  41cd59:	pop    edx
  41cd5a:	add    al,0x43
  41cd5c:	fild   QWORD PTR [edi]
  41cd5e:	fdiv   DWORD PTR [edx+0x5c]
  41cd61:	sahf   
  41cd62:	dec    edx
  41cd63:	and    al,0xf2
  41cd65:	lahf   
  41cd66:	push   0x24
  41cd68:	inc    esi
  41cd69:	fmul   DWORD PTR cs:[edi]
  41cd6c:	mov    ds:0xeefffee4,al
  41cd71:	das    
  41cd72:	pop    edx
  41cd73:	and    al,0xfe
  41cd75:	pop    eax
  41cd76:	inc    ebp
  41cd77:	push   ebx
  41cd78:	inc    edi
  41cd79:	popa   
  41cd7a:	jge    0x41cd49
  41cd7c:	ffreep st(2)
  41cd7e:	sub    eax,0xb79be0fe
  41cd83:	and    eax,DWORD PTR [eax]
  41cd85:	add    BYTE PTR [edi],dh
  41cd87:	fwait
  41cd88:	iret   
  41cd89:	and    ebp,DWORD PTR [edi]
  41cd8b:	adc    esp,0x1babf98a
  41cd91:	out    0xe0,eax
  41cd93:	sub    ch,BYTE PTR [ecx]
  41cd95:	(bad)  
  41cd96:	ins    BYTE PTR es:[edi],dx
  41cd97:	cmp    BYTE PTR [ebp+0x4b],bh
  41cd9a:	imul   ebx,DWORD PTR [eax*1+0x17ffefed],0xffffffc3
  41cda2:	adc    DWORD PTR [edi+0x17],ebx
  41cda5:	mov    ch,BYTE PTR [ebx]
  41cda7:	add    al,0xdc
  41cda9:	ror    BYTE PTR [ebp-0x793e82ce],0x48
  41cdb0:	or     DWORD PTR [ebx],eax
  41cdb2:	test   DWORD PTR [ebx],esi
  41cdb4:	mov    esi,0x4a2b5723
  41cdb9:	jne    0x41ce04
  41cdbb:	test   eax,0x8b4f23b6
  41cdc0:	mov    esp,0xfe4cd13a
  41cdc5:	call   FWORD PTR [eax+0x15]
  41cdc8:	rcl    BYTE PTR [edx-0xa],0xaa
  41cdcc:	cmp    bh,ah
  41cdce:	in     al,0x99
  41cdd0:	sub    esi,edi
  41cdd2:	int3   
  41cdd3:	pop    ebx
  41cdd4:	fimul  WORD PTR [edi]
  41cdd6:	int3   
  41cdd7:	mov    bh,0x7d
  41cdd9:	inc    ebx
  41cdda:	imul   ebx,DWORD PTR [eax],0xffffffd4
  41cddd:	dec    edi
  41cdde:	mov    esp,0x1d4f1afd
  41cde3:	(bad)  
  41cde4:	sub    DWORD PTR [edx-0x75c704f1],ecx
  41cdea:	add    BYTE PTR [eax],al
  41cdec:	mov    ds:0xdcb7dc0c,eax
  41cdf1:	mov    DWORD PTR [ecx+ebp*1-0x8],ebx
  41cdf5:	or     BYTE PTR [eax],dl
  41cdf7:	jle    0x41ce07
  41cdf9:	dec    eax
  41cdfa:	(bad)  
  41cdfc:	inc    esp
  41cdfd:	push   ebx
  41cdfe:	jmp    0xc50efb41
  41ce03:	adc    edx,DWORD PTR [ebp+0xd]
  41ce06:	jb     0x41cdd7
  41ce08:	and    al,0xf5
  41ce0a:	outs   dx,DWORD PTR ds:[esi]
  41ce0b:	iret   
  41ce0c:	and    al,0x1
  41ce0e:	pusha  
  41ce0f:	(bad)  
  41ce10:	and    al,0xf9
  41ce12:	pop    ebx
  41ce13:	add    al,0xa5
  41ce16:	out    0x3,eax
  41ce18:	jl     0x41cda1
  41ce1a:	in     al,0xff
  41ce1c:	mov    al,0x1d
  41ce1e:	pop    esi
  41ce1f:	or     al,0xbc
  41ce21:	xchg   ah,bl
  41ce23:	jmp    DWORD PTR [eax+0x122c011d]
  41ce29:	add    eax,0xc9d2c12
  41ce2e:	add    ch,BYTE PTR [edi+eax*8]
  41ce31:	inc    ebp
  41ce32:	call   0x924b15d2
  41ce37:	push   es
  41ce38:	xor    al,0x1e
  41ce3a:	jno    0x41ce36
  41ce3c:	mov    ebp,0xc27d4fdc
  41ce41:	call   0xa88d22a
  41ce46:	scas   al,BYTE PTR es:[edi]
  41ce47:	test   esp,ebp
  41ce49:	in     al,0xdc
  41ce4b:	add    bl,bl
  41ce4d:	cli    
  41ce4e:	imul   ebp,DWORD PTR [ecx],0x0
  41ce51:	add    BYTE PTR [ecx],bh
  41ce53:	test   BYTE PTR [esi],ch
  41ce55:	sub    al,BYTE PTR [ecx+0x1d]
  41ce58:	push   ecx
  41ce59:	cld    
  41ce5a:	iret   
  41ce5b:	int    0x4
  41ce5d:	or     al,0xbe
  41ce5f:	mov    ebp,0xc5bc140c
  41ce64:	add    al,0xe0
  41ce66:	int    0xb5
  41ce68:	or     al,0x14
  41ce6a:	int3   
  41ce6b:	int    0x4
  41ce6d:	or     al,0x70
  41ce6f:	mov    ebx,0xcc8d93ff
  41ce74:	add    esp,DWORD PTR [eax+0x3]
  41ce77:	rol    BYTE PTR [edx+0xf47532d],0xe9
  41ce7e:	retf   
  41ce7f:	xor    BYTE PTR [edi],dh
  41ce81:	push   0xffffff9f
  41ce83:	call   0x9038b7cb
  41ce88:	lock jl 0x41ce68
  41ce8b:	xlat   BYTE PTR ds:[ebx]
  41ce8c:	mov    edi,0x3748cb9f
  41ce91:	sub    edi,DWORD PTR [ebx]
  41ce93:	or     DWORD PTR [ebx-0x7b235f5b],ecx
  41ce99:	test   eax,0xb18312e9
  41ce9e:	pop    edi
  41ce9f:	mov    esi,0x4a9cad82
  41cea4:	pop    ss
  41cea5:	jmp    0x2d659ecd
  41ceaa:	sbb    BYTE PTR [ecx+0x73],dl
  41cead:	iret   
  41ceae:	adc    edi,DWORD PTR [eax+0x3a082523]
  41ceb4:	jae    0x41ce7d
  41ceb6:	add    BYTE PTR [eax],al
  41ceb8:	std    
  41ceb9:	test   DWORD PTR [ebx],edx
  41cebb:	in     eax,dx
  41cebc:	inc    esp
  41cebd:	or     DWORD PTR [eax+0x70],ecx
  41cec0:	(bad)  
  41cec1:	cld    
  41cec2:	add    ebp,ecx
  41cec4:	inc    esp
  41cec5:	xchg   edx,eax
  41cec6:	(bad)  
  41cec7:	stc    
  41cec8:	pusha  
  41cec9:	sbb    al,0xfe
  41cecb:	inc    ecx
  41cecc:	ds pop ds
  41cece:	in     eax,dx
  41cecf:	push   edx
  41ced0:	pop    ebx
  41ced1:	push   ecx
  41ced2:	push   esi
  41ced3:	out    0xd6,al
  41ced5:	pusha  
  41ced6:	(bad)  
  41ced7:	fadd   DWORD PTR ds:0x3329cf1c
  41cedd:	inc    ebx
  41cede:	push   cs
  41cedf:	xchg   edi,eax
  41cee0:	popf   
  41cee1:	or     DWORD PTR [eax],edx
  41cee3:	test   al,0x44
  41cee5:	cmp    bh,BYTE PTR [edi-0x49f479e6]
  41ceeb:	add    bh,al
  41ceed:	add    eax,0xb71e4110
  41cef2:	mov    esi,0xb4215933
  41cef7:	mov    ecx,0x40f7ed
  41cefc:	aas    
  41cefd:	enter  0xc181,0xea
  41cf01:	adc    al,0xc5
  41cf03:	adc    DWORD PTR [edi+0x8],0x55ee0001
  41cf0a:	mov    DWORD PTR [ebp-0x447cded2],0x530007d7
  41cf14:	addr16 cli 
  41cf16:	mov    WORD PTR [esi-0x56],cs
  41cf19:	xchg   al,al
  41cf1b:	sbb    BYTE PTR [eax],al
  41cf1d:	add    dh,cl
  41cf1f:	or     DWORD PTR [eax],eax
  41cf21:	mov    edi,0x49e
  41cf26:	and    ecx,DWORD PTR [ebp-0x1]
  41cf29:	push   esp
  41cf2a:	daa    
  41cf2b:	div    BYTE PTR [edx]
  41cf2d:	shr    BYTE PTR [ebx-0x61fffff9],0x9e
  41cf34:	daa    
  41cf35:	(bad)  
  41cf36:	pop    edx
  41cf37:	or     al,BYTE PTR [eax]
  41cf39:	add    BYTE PTR [esi+0x7],ch
  41cf3c:	add    BYTE PTR [ebx+0x3d08ae],al
  41cf42:	push   0x7
  41cf44:	add    BYTE PTR [edx-0x3e],dh
  41cf47:	test   eax,eax
  41cf49:	add    BYTE PTR [edx+0x7],ch
  41cf4c:	add    BYTE PTR [ebx-0x4d4f751],al
  41cf52:	pop    ebx
  41cf53:	int    0x89
  41cf55:	mov    gs,WORD PTR [edx+0x1b]
  41cf58:	(bad)  
  41cf59:	jmp    DWORD PTR [ebp-0x5e377cf5]
  41cf5f:	pushf  
  41cf60:	test   BYTE PTR [edx+ebp*1],ah
  41cf63:	pop    es
  41cf64:	add    BYTE PTR [ecx+0x3fba247],cl
  41cf6a:	inc    edi
  41cf6b:	xor    BYTE PTR [ebx-0x63],bh
  41cf6e:	inc    ebx
  41cf6f:	sub    al,0x2
  41cf71:	add    BYTE PTR [esi+0x4703f79a],bh
  41cf77:	xor    BYTE PTR [ebx+0x39],bh
  41cf7a:	int3   
  41cf7b:	mov    edx,0x3047040f
  41cf80:	jns    0x41cf17
  41cf82:	add    BYTE PTR [eax],al
  41cf84:	push   edi
  41cf85:	and    al,0x2
  41cf87:	add    BYTE PTR [esi+0x4703dbb2],bh
  41cf8d:	xor    BYTE PTR [eax+0x8],bh
  41cf90:	into   
  41cf91:	ins    BYTE PTR es:[edi],dx
  41cf92:	ficomp WORD PTR [ebx]
  41cf94:	mov    esp,0xbf53de64
  41cf99:	add    ebx,DWORD PTR es:[esi+0x2245b]
  41cfa0:	inc    esi
  41cfa1:	adc    BYTE PTR [edx],0x4
  41cfa4:	inc    edi
  41cfa5:	xor    BYTE PTR [edx+0x140c2b88],bh
  41cfab:	mov    DWORD PTR [ebx],esp
  41cfad:	add    al,0xc
  41cfaf:	mov    DWORD PTR [ecx-0x6f0001dc],edi
  41cfb5:	cdq    
  41cfb6:	(bad)  
  41cfb7:	and    ebp,edi
  41cfb9:	push   ss
  41cfba:	inc    ecx
  41cfbb:	push   cs
  41cfbc:	leave  
  41cfbd:	pop    edi
  41cfbe:	std    
  41cfbf:	(bad)  
  41cfc0:	js     0x41cf57
  41cfc2:	mov    edi,edi
  41cfc4:	jo     0x41cff6
  41cfc6:	add    cl,BYTE PTR [ebx-0x7b39b3fd]
  41cfcc:	xchg   esp,esi
  41cfce:	jmp    0xa8ddb5d
  41cfd3:	inc    ecx
  41cfd4:	mov    esi,0xc317dfec
  41cfd9:	imul   ebp,DWORD PTR [edi-0x200c33d4],0x7708cc5f
  41cfe3:	adc    ecx,DWORD PTR [ebx+0x9]
  41cfe6:	jmp    0x7c41d0c5
  41cfeb:	in     eax,0xb8
  41cfed:	ror    ebp,1
  41cfef:	jb     0x41cfe5
  41cff1:	call   FWORD PTR [eax]
  41cff3:	sbb    dl,BYTE PTR [ecx]
  41cff5:	shl    BYTE PTR [ecx+edi*4-0x69],1
  41cff9:	jp     0x41d077
  41cffb:	in     eax,0x94
  41cffd:	rcl    DWORD PTR [edi+0x482181a],1
  41d003:	stc    
  41d004:	imul   eax,DWORD PTR [ebx+0x41],0xffffff85
  41d008:	xchg   ebx,eax
  41d009:	(bad)  
  41d00a:	call   0x2509a128
  41d00f:	std    
  41d010:	xchg   ebx,eax
  41d011:	adc    esp,ecx
  41d013:	lods   al,BYTE PTR ds:[esi]
  41d014:	int3   
  41d015:	mov    edi,0xc3c4b4bd
  41d01a:	mov    edi,0xcfd7ccac
  41d01f:	mov    ah,0xc4
  41d021:	fld    TBYTE PTR [ebp+0x64c071f9]
  41d027:	mov    ch,0x71
  41d029:	jbe    0x41d07f
  41d02b:	add    eax,0x466c03e9
  41d030:	cmp    cl,dl
  41d032:	test   DWORD PTR [ebx-0x48ab1fe4],0x85a03671
  41d03c:	mov    cl,0x25
  41d03e:	or     DWORD PTR [ebp-0x79d31fc4],0x8d4002a3
  41d048:	inc    esi
  41d049:	jmp    FWORD PTR [eax+0x19]
  41d04c:	popa   
  41d04d:	jle    0x41d04f
  41d04f:	add    BYTE PTR [eax*1-0x3b7ffc17],ah
  41d056:	int3   
  41d057:	cmova  ecx,DWORD PTR [ecx]
  41d05a:	jmp    0x6de62
  41d05f:	int3   
  41d060:	sbb    al,0x9e
  41d062:	popa   
  41d063:	push   0x62
  41d065:	or     DWORD PTR [edi],ecx
  41d067:	outs   dx,DWORD PTR ds:[esi]
  41d068:	adc    eax,0x1de9000c
  41d06d:	int    0x23
  41d06f:	adc    DWORD PTR [edx],ebx
  41d071:	lea    eax,[edi-0x16]
  41d074:	inc    esp
  41d075:	or     DWORD PTR [ebx+0x5708f0ad],ecx
  41d07b:	adc    al,BYTE PTR [edx+0x39624fbb]
  41d081:	xor    cl,ah
  41d083:	xor    eax,0xb58a1722
  41d088:	adc    cl,ah
  41d08a:	push   esi
  41d08b:	mov    eax,0x318a466f
  41d090:	inc    ebx
  41d091:	pop    esp
  41d092:	test   BYTE PTR [esi],0x22
  41d095:	rol    edx,cl
  41d097:	neg    BYTE PTR [ecx-0xb]
  41d09a:	add    ch,cl
  41d09c:	inc    esp
  41d09d:	test   BYTE PTR [ebx-0x33],al
  41d0a0:	lods   al,BYTE PTR ds:[esi]
  41d0a1:	aad    0xff
  41d0a3:	jecxz  0x41d0e9
  41d0a5:	or     DWORD PTR [eax+esi*8-0x39],edi
  41d0a9:	pop    ss
  41d0aa:	add    esi,ebp
  41d0ac:	sub    BYTE PTR [ecx],al
  41d0ae:	add    ebp,ecx
  41d0b0:	inc    esp
  41d0b1:	(bad)  
  41d0b2:	dec    DWORD PTR [ebx+0x0]
  41d0b5:	add    BYTE PTR [ebx+0x9],al
  41d0b8:	jl     0x41d0aa
  41d0ba:	(bad)  
  41d0bb:	pop    ss
  41d0bc:	add    ch,dh
  41d0be:	or     BYTE PTR [ecx],dl
  41d0c0:	add    ecx,ebp
  41d0c2:	inc    esp
  41d0c3:	test   BYTE PTR [ebx+0x5],bl
  41d0c6:	mov    eax,DWORD PTR [ebx-0x7c7f32bd]
  41d0cc:	xchg   ebp,eax
  41d0cd:	cmc    
  41d0ce:	push   0x7c2fe18
  41d0d3:	add    DWORD PTR [ebx-0x3b],0x4fd064
  41d0da:	fist   DWORD PTR [eax-0x1]
  41d0dd:	push   eax
  41d0de:	sbb    al,0x3b
  41d0e0:	mov    eax,DWORD PTR [edx+edx*1+0x60]
  41d0e4:	dec    esi
  41d0e5:	mov    ebx,eax
  41d0e7:	repz (bad) 
  41d0ea:	test   eax,0x424c89ed
  41d0ef:	xor    eax,0x4d524c37
  41d0f4:	mov    eax,DWORD PTR [ebx+0x2f]
  41d0f7:	xchg   ebx,eax
  41d0f8:	inc    edx
  41d0f9:	and    al,0x2a
  41d0fb:	inc    edi
  41d0fc:	jp     0x41d137
  41d0fe:	xchg   ebp,eax
  41d0ff:	mov    ebx,0xf4288b50
  41d104:	inc    edx
  41d105:	imul   DWORD PTR [ecx]
  41d107:	in     eax,dx
  41d108:	mov    DWORD PTR [edx+eax*1+0x4c],ecx
  41d10c:	xchg   DWORD PTR [edx+eax*1+0x38],eax
  41d110:	mov    DWORD PTR [edx+edx*1+0x58],eax
  41d114:	dec    esi
  41d115:	push   ecx
  41d116:	gs fsubrp st(6),st
  41d119:	das    
  41d11a:	add    BYTE PTR [eax],al
  41d11c:	shr    ebx,1
  41d11e:	std    
  41d11f:	mov    ebx,DWORD PTR [edx+0x662b2237]
  41d125:	or     ecx,ecx
  41d127:	mov    eax,0x38e19df7
  41d12c:	xchg   ecx,eax
  41d12d:	in     eax,0xcf
  41d12f:	cli    
  41d130:	xor    eax,0x99e8bfcf
  41d135:	push   cs
  41d136:	ret    0x3eeb
  41d139:	mov    BYTE PTR [edx+0x24],cl
  41d13c:	cmp    bl,BYTE PTR [esi-0x77]
  41d13f:	into   
  41d140:	jbe    0x41d147
  41d142:	idiv   edi
  41d144:	mov    ecx,0x22245287
  41d149:	mov    dh,dl
  41d14b:	mov    esp,DWORD PTR [edx]
  41d14d:	and    DWORD PTR [esi],edi
  41d14f:	push   edx
  41d150:	cs mov ah,cl
  41d153:	call   0xfe5b499f
  41d158:	pop    eax
  41d159:	dec    edx
  41d15a:	cmp    cl,BYTE PTR [edx+0x23bf9a84]
  41d160:	out    dx,eax
  41d161:	test   al,0x86
  41d163:	loope  0x41d1a9
  41d165:	and    eax,DWORD PTR [eax+eax*8+0x3f]
  41d169:	and    eax,DWORD PTR ds:0xdd646b44
  41d16f:	out    0xaa,eax
  41d171:	sbb    BYTE PTR [ecx+0x43],cl
  41d174:	imul   edx,DWORD PTR [ebx+eax*1],0x0
  41d178:	inc    edi
  41d179:	and    BYTE PTR [edi-0x22f76602],al
  41d17f:	imul   eax,DWORD PTR [eax],0x0
  41d182:	arpl   WORD PTR [esi+ebx*4+0x2f],bp
  41d186:	int3   
  41d187:	ins    BYTE PTR es:[edi],dx
  41d188:	out    0x27,al
  41d18a:	xchg   edx,eax
  41d18b:	jno    0x41d11a
  41d18d:	int    0xdf
  41d18f:	scas   al,BYTE PTR es:[edi]
  41d190:	sbb    esi,edi
  41d192:	call   0x8b658932
  41d197:	stos   DWORD PTR es:[edi],eax
  41d198:	cmp    ecx,DWORD PTR [edx+0x51c24c83]
  41d19e:	ja     0x41d13b
  41d1a0:	push   ecx
  41d1a1:	out    0x9c,eax
  41d1a3:	push   ds
  41d1a4:	and    esi,edi
  41d1a6:	jl     0x41d18b
  41d1a8:	mov    ds,WORD PTR [ebx+0x63]
  41d1ab:	js     0x41d14c
  41d1ad:	pop    es
  41d1ae:	mov    ah,ah
  41d1b0:	out    0x13,eax
  41d1b2:	inc    esi
  41d1b3:	and    BYTE PTR [edx],al
  41d1b5:	add    dl,cl
  41d1b7:	aas    
  41d1b8:	xchg   edi,eax
  41d1b9:	dec    esp
  41d1ba:	pop    esi
  41d1bb:	aam    0xe7
  41d1bd:	inc    ebx
  41d1be:	adc    ah,bh
  41d1c0:	mov    cs,WORD PTR [ebp+0x22c33]
  41d1c6:	in     eax,dx
  41d1c7:	and    BYTE PTR [ebp+0x2a76cc50],dh
  41d1cd:	sahf   
  41d1ce:	je     0x41d1d9
  41d1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1d1:	and    bh,BYTE PTR [ebp-0x32383b43]
  41d1d7:	xor    DWORD PTR [ecx-0x39],esp
  41d1da:	and    al,0xc9
  41d1dc:	cmp    dh,BYTE PTR [ebp+edi*4+0x52b09047]
  41d1e3:	push   ss
  41d1e4:	jge    0x41d174
  41d1e6:	add    BYTE PTR [eax],al
  41d1e8:	mov    ebp,gs
  41d1ea:	sar    BYTE PTR [eax-0x6f617d69],0x8c
  41d1f1:	icebp  
  41d1f2:	out    0x2b,eax
  41d1f4:	mov    WORD PTR [edi],ds
  41d1f6:	pop    ebp
  41d1f7:	and    bl,BYTE PTR [ebp+0x31]
  41d1fa:	popa   
  41d1fb:	mov    edi,0xdceb164
  41d200:	or     ch,cl
  41d202:	or     al,0xf8
  41d204:	or     BYTE PTR [esi],dl
  41d206:	call   0x6a43be0e
  41d20b:	lahf   
  41d20c:	and    al,0xfd
  41d20e:	call   0xe9889c25
  41d213:	add    eax,DWORD PTR [edi-0x76]
  41d216:	sbb    eax,DWORD PTR ds:0x4418750
  41d21c:	inc    edi
  41d21d:	or     DWORD PTR [edx-0x49],esp
  41d220:	and    al,0xe9
  41d222:	jno    0x41d1ad
  41d224:	xor    al,0xd
  41d226:	jmp    0xf68c962e
  41d22b:	mov    ah,0xc5
  41d22d:	dec    ecx
  41d22e:	jmp    0xbbb3:0xea48c5b6
  41d235:	les    eax,FWORD PTR [eax+eiz*8]
  41d238:	test   DWORD PTR [ecx+0xfc82ca6],0xccbd21cd
  41d242:	or     al,0xd4
  41d244:	dec    ebp
  41d245:	int    0x4
  41d247:	in     al,dx
  41d248:	int    0xbc
  41d24a:	dec    DWORD PTR [eax+eax*1]
  41d24d:	add    BYTE PTR [edi-0x44607549],bl
  41d253:	xchg   ecx,eax
  41d254:	and    dl,BYTE PTR [ecx-0x6101e2b8]
  41d25a:	sar    BYTE PTR ds:0xed6f2d8a,cl
  41d260:	push   esp
  41d261:	cmp    edx,eax
  41d263:	inc    ebx
  41d264:	out    0x97,eax
  41d266:	xor    BYTE PTR [edi],dl
  41d268:	(bad)  
  41d269:	ror    BYTE PTR [ebx+0x428b8271],cl
  41d26f:	or     dl,al
  41d271:	bound  eax,QWORD PTR [ebx+0x5bebf849]
  41d277:	loop   0x41d260
  41d279:	inc    ebx
  41d27a:	cmp    BYTE PTR [ebx],dl
  41d27c:	(bad)  
  41d27d:	bound  ebx,QWORD PTR [ebx+0x7f]
  41d280:	inc    ebx
  41d281:	add    eax,0x724fbe23
  41d286:	jne    0x41d2b4
  41d288:	retf   0x2634
  41d28b:	adc    ecx,DWORD PTR [edx+0x23fea21]
  41d291:	and    BYTE PTR [ebx-0xa8d5edf],dl
  41d297:	sbb    ebp,eax
  41d299:	cmp    BYTE PTR [ecx+0x7f],al
  41d29c:	leave  
  41d29d:	sub    BYTE PTR [ebx+esi*8],ch
  41d2a0:	add    ah,BYTE PTR [ebx]
  41d2a2:	ret    0x23c8
  41d2a5:	mov    ebp,0x103a4143
  41d2aa:	loopne 0x41d2b8
  41d2ac:	(bad)  
  41d2ad:	lods   eax,DWORD PTR ds:[esi]
  41d2ae:	mov    al,ds:0xe900f8
  41d2b3:	add    BYTE PTR [ecx+ecx*1-0x7b],al
  41d2b7:	out    0xce,al
  41d2b9:	in     al,dx
  41d2ba:	cmp    ah,BYTE PTR [eax+eax*8-0x50c27518]
  41d2c1:	in     al,0x4f
  41d2c3:	cmp    eax,edx
  41d2c5:	inc    esi
  41d2c6:	out    0x0,eax
  41d2c8:	adc    bl,bh
  41d2ca:	std    
  41d2cb:	push   ebp
  41d2cd:	iret   
  41d2ce:	mov    DWORD PTR [edx+ecx*2+0x25],eax
  41d2d2:	push   ebx
  41d2d3:	push   eax
  41d2d4:	in     eax,0xb9
  41d2d6:	out    0x7f,al
  41d2d8:	retf   
  41d2d9:	jmp    0xf9c80edb
  41d2de:	mov    eax,DWORD PTR [edx]
  41d2e0:	ins    DWORD PTR es:[edi],dx
  41d2e1:	or     BYTE PTR [eax],al
  41d2e3:	add    DWORD PTR [edx+0x21],0x12
  41d2e7:	add    BYTE PTR [ecx-0x75],dl
  41d2ea:	cmc    
  41d2eb:	add    ch,BYTE PTR [esi]
  41d2ed:	or     BYTE PTR [ebx-0x7206d203],al
  41d2f3:	aam    0x1e
  41d2f5:	or     BYTE PTR [eax],al
  41d2f7:	mov    esi,edx
  41d2f9:	sub    ebx,DWORD PTR [esi]
  41d2fb:	mov    ebx,edx
  41d2fd:	sub    edx,DWORD PTR [esi-0x75]
  41d300:	test   al,0x1c
  41d302:	add    al,BYTE PTR [eax]
  41d304:	push   ds
  41d305:	lea    edi,[edi-0x3f735003]
  41d30b:	add    ebx,esp
  41d30d:	mov    WORD PTR [esi+0x4a82de03],?
  41d313:	and    al,0xe2
  41d315:	push   esi
  41d316:	mov    esi,ecx
  41d318:	add    BYTE PTR [eax],al
  41d31a:	push   esi
  41d31b:	scas   eax,DWORD PTR es:[edi]
  41d31c:	idiv   bh
  41d31e:	inc    ecx
  41d31f:	test   DWORD PTR [edx+0x24],eax
  41d322:	inc    BYTE PTR [edx+edx*2+0x5a84fa24]
  41d329:	and    al,0xf6
  41d32b:	xor    al,0xc1
  41d32d:	push   edx
  41d32e:	xor    eax,0x8b7c4eba
  41d333:	fbld   TBYTE PTR [edx]
  41d335:	cmc    
  41d336:	mov    eax,ds:0x355353f3
  41d33b:	ret    
  41d33c:	xchg   DWORD PTR [edx+ecx*2+0x19],eax
  41d340:	out    0x17,al
  41d342:	inc    edi
  41d343:	xor    eax,0xf5bcfe1e
  41d348:	out    0x23,eax
  41d34a:	pop    esp
  41d34b:	popa   
  41d34c:	jl     0x41d2d0
  41d34e:	gs push ds
  41d350:	add    edx,eax
  41d352:	int3   
  41d353:	imul   eax,DWORD PTR [eax+edi*8+0x45],0x68e7ef47
  41d35b:	jne    0x41d37b
  41d35d:	(bad)  
  41d35e:	cli    
  41d35f:	into   
  41d360:	mov    cl,ch
  41d362:	into   
  41d363:	in     eax,0xe7
  41d365:	sub    ebx,DWORD PTR [edi+0x6f]
  41d368:	pop    ss
  41d369:	dec    BYTE PTR [eax-0x6a]
  41d36c:	dec    ebx
  41d36d:	mov    cl,BYTE PTR [ebx+0xf2ae64c]
  41d373:	and    BYTE PTR [ebx-0x49],cl
  41d376:	push   ds
  41d377:	mov    edi,0xba302d8a
  41d37c:	xor    al,0xf9
  41d37e:	add    BYTE PTR [eax],al
  41d380:	int3   
  41d381:	(bad)  
  41d382:	inc    esp
  41d383:	call   0x8a89f2c0
  41d388:	mov    ecx,DWORD PTR [eax+ebx*8]
  41d38b:	add    bh,bh
  41d38d:	pop    es
  41d38e:	sub    eax,0xc7eb4f7c
  41d393:	and    edx,DWORD PTR [ebx+0x21]
  41d396:	add    al,BYTE PTR [eax]
  41d398:	inc    edi
  41d399:	lods   eax,DWORD PTR ds:[esi]
  41d39a:	push   ds
  41d39b:	jne    0x41d3bc
  41d39d:	daa    
  41d39e:	inc    edi
  41d39f:	jnp    0x41d3cc
  41d3a1:	xchg   edi,eax
  41d3a2:	mov    bh,0x23
  41d3a4:	pop    ss
  41d3a5:	push   eax
  41d3a6:	mov    al,0x8a
  41d3a8:	add    DWORD PTR [ecx],ecx
  41d3aa:	push   ebp
  41d3ab:	repz enter 0x8b0b,0xd7
  41d3b0:	int3   
  41d3b1:	ins    BYTE PTR es:[edi],dx
  41d3b2:	out    0x27,al
  41d3b4:	adc    dh,BYTE PTR [eax-0x77]
  41d3b7:	int    0x9f
  41d3b9:	mov    esi,0x9a8fe17
  41d3be:	and    bh,BYTE PTR [ecx+edx*2]
  41d3c1:	test   DWORD PTR [ebx],eax
  41d3c3:	add    al,BYTE PTR [edi+0x9]
  41d3c6:	push   0xffffff9f
  41d3c8:	fs std 
  41d3ca:	call   0xeb3195dd
  41d3cf:	add    eax,DWORD PTR [edi+0x7e]
  41d3d2:	sbb    al,0xe8
  41d3d4:	adc    BYTE PTR [ebp+esi*4-0x186134f2],cl
  41d3db:	add    eax,DWORD PTR [edi-0x7a]
  41d3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3df:	add    al,0x50
  41d3e1:	mov    edi,DWORD PTR [eax]
  41d3e3:	add    eax,0x9470000
  41d3e8:	bound  esi,QWORD PTR [edi+0x4e61bd24]
  41d3ee:	sbb    eax,0x4d07733e
  41d3f3:	into   
  41d3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3f5:	xchg   ebp,eax
  41d3f6:	inc    esi
  41d3f7:	jle    0x41d3a6
  41d3f9:	mov    bl,0xbd
  41d3fb:	int3   
  41d3fc:	(bad)  
  41d3fd:	neg    DWORD PTR [ebp+0x32]
  41d400:	mov    ecx,0x4c4d3b3
  41d405:	loopne 0x41d47e
  41d407:	jle    0x41d42f
  41d409:	mov    WORD PTR [ebp+ebp*8+0x4],gs
  41d40d:	sub    al,0xfc
  41d40f:	sbb    DWORD PTR [ebp+0x1e],eax
  41d412:	aas    
  41d413:	xchg   ebp,eax
  41d414:	add    al,0xd8
  41d416:	jbe    0x41d3f5
  41d418:	popa   
  41d419:	mov    bh,0x24
  41d41b:	fst    DWORD PTR [ebp+0x1042bdb1]
  41d421:	loopne 0x41d3f7
  41d423:	adc    DWORD PTR ds:0xac7df08a,ebx
  41d429:	out    0x18,eax
  41d42b:	mov    edx,0x20fa8ab8
  41d430:	(bad)  
  41d431:	pop    ss
  41d432:	rcl    DWORD PTR [ecx],0xc1
  41d435:	inc    edx
  41d436:	int    0xb4
  41d438:	dec    esp
  41d43a:	mov    eax,0x78620f93
  41d43f:	in     eax,0x2f
  41d441:	jb     0x41d422
  41d443:	in     eax,0x33
  41d445:	jo     0x41d4be
  41d447:	in     eax,0x37
  41d449:	pusha  
  41d44a:	add    BYTE PTR [eax],al
  41d44c:	iret   
  41d44d:	in     eax,0x3b
  41d44f:	bound  edi,QWORD PTR [edi-0x1b]
  41d452:	nop    DWORD PTR [esi+0x2baf8ac1]
  41d459:	jmp    0x41d44b
  41d45b:	mov    dh,0x52
  41d45d:	jg     0x41d4aa
  41d45f:	add    eax,0x7250ba8b
  41d464:	adc    DWORD PTR [edi-0x29],edi
  41d467:	xchg   ecx,eax
  41d468:	cmp    al,0x17
  41d46a:	(bad)  
  41d46b:	xchg   esi,eax
  41d46c:	outs   dx,BYTE PTR ds:[esi]
  41d46d:	inc    esi
  41d46e:	push   cs
  41d46f:	pop    esp
  41d470:	loop   0x41d483
  41d472:	(bad)  
  41d473:	jmp    0xd1658947
  41d478:	pop    ds
  41d479:	outs   dx,DWORD PTR ds:[esi]
  41d47a:	and    ebp,ebp
  41d47c:	inc    esp
  41d47d:	or     DWORD PTR [ebp+0x11],esi
  41d480:	mov    esi,0xcffd23bc
  41d485:	int3   
  41d486:	and    edi,ecx
  41d488:	sar    DWORD PTR [edx+0x2881624f],cl
  41d48e:	icebp  
  41d48f:	pop    ecx
  41d490:	sub    cl,BYTE PTR [edi]
  41d492:	push   esp
  41d493:	call   0xe4e0:0xa5883ecf
  41d49a:	out    0x2f,eax
  41d49c:	push   esi
  41d49d:	paddd  mm4,QWORD PTR [edx+0x17]
  41d4a1:	in     eax,dx
  41d4a2:	and    ebp,edx
  41d4a4:	mov    WORD PTR [ebx-0x7df94b2e],es
  41d4aa:	dec    ebx
  41d4ab:	int    0xdc
  41d4ad:	mov    edx,0x1f8a
  41d4b2:	sbb    esp,DWORD PTR [eax-0xe]
  41d4b5:	add    BYTE PTR [ecx-0x12],cl
  41d4b8:	mov    eax,ebx
  41d4ba:	xor    eax,0xd1382241
  41d4bf:	pop    esp
  41d4c0:	mov    esi,ecx
  41d4c2:	inc    esi
  41d4c3:	lods   al,BYTE PTR ds:[esi]
  41d4c4:	icebp  
  41d4c5:	jmp    FWORD PTR [ecx+0x4a246a81]
  41d4cb:	or     bl,al
  41d4cd:	mov    esp,DWORD PTR [edx+0x21]
  41d4d0:	and    bh,BYTE PTR [ebx]
  41d4d2:	fld    QWORD PTR [ecx+0x6f26245a]
  41d4d8:	inc    edi
  41d4d9:	jmp    0x41d53d
  41d4db:	sbb    DWORD PTR [edx+0x24],0x24428256
  41d4e2:	jbe    0x41d515
  41d4e4:	test   BYTE PTR [edx+esi*2],ah
  41d4e7:	or     al,0x0
  41d4e9:	jne    0x41d542
  41d4eb:	mov    DWORD PTR [eax+ebp*1+0xc62],edi
  41d4f2:	xor    dl,BYTE PTR [edx]
  41d4f4:	cmp    eax,DWORD PTR [eax]
  41d4f6:	xor    ecx,DWORD PTR [eax+eax*1]
  41d4f9:	jl     0x41d51e
  41d4fb:	mov    ebp,edi
  41d4fd:	add    dh,BYTE PTR [edx]
  41d4ff:	sub    bh,BYTE PTR [edi+0x7c]
  41d502:	add    dh,BYTE PTR [esi+edi*8]
  41d505:	jl     0x41d535
  41d507:	or     al,0x7c
  41d509:	add    eax,0x7401edad
  41d50e:	or     eax,0x36244a81
  41d513:	push   esi
  41d514:	dec    edi
  41d515:	mov    eax,DWORD PTR [eax]
  41d517:	add    BYTE PTR [eax],bh
  41d519:	in     al,0xcc
  41d51b:	repz cmp ebp,ebp
  41d51e:	jmp    0x22923a53
  41d523:	pop    eax
  41d524:	gs dec eax
  41d526:	and    dl,BYTE PTR [eax]
  41d528:	push   ebp
  41d529:	fldcw  WORD PTR [ecx]
  41d52b:	xlat   BYTE PTR ds:[ebx]
  41d52c:	pushf  
  41d52d:	pop    ebx
  41d52e:	mov    esi,ecx
  41d530:	inc    edi
  41d531:	or     ch,BYTE PTR [esi-0x11]
  41d534:	enter  0x1bfe,0x43
  41d538:	imul   esi,DWORD PTR [edx],0x7f
  41d53b:	out    dx,al
  41d53c:	inc    esi
  41d53d:	xchg   ebp,eax
  41d53e:	and    al,0xea
  41d540:	push   ebp
  41d541:	stos   DWORD PTR es:[edi],eax
  41d542:	mov    dh,0x23
  41d544:	push   edi
  41d545:	lods   eax,DWORD PTR ds:[esi]
  41d546:	(bad)  
  41d547:	(bad)  
  41d548:	not    bl
  41d54a:	mov    cs,ebp
  41d54c:	scas   eax,DWORD PTR es:[edi]
  41d54d:	xchg   ebx,eax
  41d54e:	adc    edi,esi
  41d550:	nop
  41d551:	repnz sbb al,BYTE PTR [edx-0x70f6dd76]
  41d558:	(bad)  
  41d559:	and    DWORD PTR [edx],eax
  41d55b:	add    ah,cl
  41d55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d55e:	out    dx,eax
  41d55f:	add    eax,DWORD PTR [edi+0x22]
  41d562:	scas   eax,DWORD PTR es:[edi]
  41d563:	push   edx
  41d564:	pop    ss
  41d565:	stos   DWORD PTR es:[edi],eax
  41d566:	dec    ecx
  41d567:	out    0x41,eax
  41d569:	jb     0x41d585
  41d56b:	dec    ah
  41d56d:	fstp   st(7)
  41d56f:	daa    
  41d570:	cli    
  41d571:	ror    BYTE PTR [esi+0x2b59bccd],1
  41d577:	out    dx,eax
  41d578:	xor    eax,0x3a1a88
  41d57d:	add    BYTE PTR [eax+edx*1],al
  41d580:	jmp    0xc13a:0xea3c8b8a
  41d587:	inc    esp
  41d588:	(bad)  
  41d589:	jmp    DWORD PTR [eax]
  41d58b:	or     eax,DWORD PTR cs:[ebx-0x727]
  41d592:	inc    edi
  41d593:	and    BYTE PTR [esi-0xdfb5bc],cl
  41d599:	inc    DWORD PTR [edi+0x44]
  41d59c:	inc    DWORD PTR [edx+0x68e22fa]
  41d5a2:	xor    ah,BYTE PTR [eax]
  41d5a4:	xchg   edi,eax
  41d5a5:	(bad)  
  41d5a6:	call   0x83ccaa07
  41d5ab:	or     ebp,ecx
  41d5ad:	mov    ebx,0xefc49dcf
  41d5b2:	retf   
  41d5b3:	sbb    al,0x9c
  41d5b5:	jecxz  0x41d574
  41d5b7:	ja     0x41d5ad
  41d5b9:	inc    eax
  41d5bb:	push   cs
  41d5bc:	cdq    
  41d5bd:	mov    ch,0xcd
  41d5bf:	aas    
  41d5c0:	adc    ch,ah
  41d5c2:	mov    al,ds:0x475bf50e
  41d5c7:	or     ecx,ebp
  41d5c9:	add    eax,DWORD PTR [esi-0x79]
  41d5cc:	cld    
  41d5cd:	call   FWORD PTR [eax+0x64c00f0e]
  41d5d3:	cmc    
  41d5d4:	pop    ebx
  41d5d5:	and    al,0xbb
  41d5d7:	lods   eax,DWORD PTR ds:[esi]
  41d5d8:	jmp    0x41d5f4
  41d5da:	ins    DWORD PTR es:[edi],dx
  41d5db:	mov    bl,0x71
  41d5dd:	mov    bh,0x24
  41d5df:	mov    cl,0x71
  41d5e1:	mov    edi,0xe1240000
  41d5e6:	sbb    esi,DWORD PTR [ebp+edi*4+0x5406c03f]
  41d5ed:	push   cs
  41d5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ef:	add    al,0xa9
  41d5f1:	cmc    
  41d5f2:	in     al,0x3
  41d5f4:	inc    edi
  41d5f5:	jl     0x41d62b
  41d5f7:	stc    
  41d5f8:	dec    ecx
  41d5f9:	and    cl,bl
  41d5fb:	mov    ds,WORD PTR [ebp+eiz*8-0x6bc67ee0]
  41d602:	(bad)  
  41d603:	mov    ?,WORD PTR [ebp+eiz*8-0x40]
  41d607:	mov    ss,edx
  41d609:	hlt    
  41d60a:	in     al,0x3
  41d60c:	inc    edi
  41d60d:	adc    ah,0xdf
  41d610:	pop    esp
  41d611:	sub    BYTE PTR [edi+ebx*8-0x20437fa8],0x38
  41d619:	mov    BYTE PTR [ecx-0xf],0xcb
  41d61d:	or     eax,0x228006bc
  41d622:	in     eax,dx
  41d623:	mov    cs,edx
  41d625:	hlt    
  41d626:	(bad)  
  41d627:	in     al,dx
  41d628:	inc    esp
  41d629:	or     DWORD PTR [ebx-0x67],edx
  41d62c:	sar    DWORD PTR [ebx],1
  41d62e:	out    0x5f,eax
  41d630:	sub    eax,0xc61efe0f
  41d635:	stc    
  41d636:	add    ebp,ecx
  41d638:	inc    esp
  41d639:	test   dh,bh
  41d63b:	fiadd  WORD PTR [eax+0x23]
  41d63e:	(bad)  
  41d63f:	call   0xc5bda888
  41d644:	cwde   
  41d645:	inc    BYTE PTR [eax+ecx*1+0x9440000]
  41d64c:	add    BYTE PTR [edx-0x10],ah
  41d64f:	jmp    0xe35048a7
  41d654:	retf   0x476c
  41d657:	add    edi,DWORD PTR [ebx]
  41d659:	scas   al,BYTE PTR es:[edi]
  41d65a:	mov    ch,0x7
  41d65c:	mov    esp,DWORD PTR [esi+0xd4382bb]
  41d662:	ja     0x41d5e6
  41d664:	jmp    0x7f64:0x4fb51e12
  41d66b:	jmp    0x3c13eeab
  41d670:	mov    BYTE PTR ds:0x17e7e967,dl
  41d676:	inc    eax
  41d677:	paddd  mm2,mm0
  41d67a:	mov    al,0xe9
  41d67c:	xor    ebx,DWORD PTR [ebx]
  41d67e:	pop    ss
  41d67f:	adc    BYTE PTR [ebx-0x33],0x14
  41d683:	mov    ah,0x51
  41d685:	jb     0x41d704
  41d687:	and    al,0xe6
  41d689:	js     0x41d6d9
  41d68b:	or     ecx,DWORD PTR [edx+0x23c8d281]
  41d691:	and    esi,edx
  41d693:	mov    esp,0x34632f8a
  41d698:	lock push esi
  41d69a:	cs iret 
  41d69c:	les    esp,FWORD PTR [edx-0x51]
  41d69f:	call   0x1941d6b7
  41d6a4:	mov    DWORD PTR [edx+ecx*2+0x35],ecx
  41d6a8:	mov    DWORD PTR [edx+edi*1+0x39],edx
  41d6ac:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
  41d6b0:	dec    edx
  41d6b1:	sub    eax,0x350a5487
  41d6b6:	mov    DWORD PTR [edx+ecx*1+0x19],eax
  41d6ba:	push   ebp
  41d6bb:	push   ebp
  41d6bc:	mov    ?,WORD PTR [ebp-0x34]
  41d6bf:	call   0x3fb643
  41d6c4:	xor    eax,0xd9382241
  41d6c9:	push   edi
  41d6ca:	mov    esi,ecx
  41d6cc:	and    eax,0x9fa3e6dd
  41d6d1:	icebp  
  41d6d2:	std    
  41d6d3:	cmp    ebp,ebx
  41d6d5:	jae    0x41d70f
  41d6d7:	mov    ebp,DWORD PTR [edx+0x29]
  41d6da:	cmp    ebx,DWORD PTR ss:[eax]
  41d6dd:	sub    al,0x2
  41d6df:	add    BYTE PTR [esi+0x7b],ch
  41d6e2:	pop    es
  41d6e3:	add    eax,0x20
  41d6e6:	add    al,BYTE PTR [eax]
  41d6e8:	pop    esi
  41d6e9:	or     BYTE PTR [eax+ebx*1+0x73],dh
  41d6ed:	or     BYTE PTR ds:0x3746e00,al
  41d6f3:	and    DWORD PTR [ecx+0x73197406],0x8
  41d6fa:	jge    0x41d6fc
  41d6fc:	pop    esi
  41d6fd:	je     0x41d702
  41d6ff:	adc    ecx,0x4
  41d702:	je     0x41d711
  41d704:	pop    ecx
  41d705:	push   ebp
  41d706:	mov    esi,ecx
  41d708:	(bad)  
  41d709:	fsub   st(7),st
  41d70b:	push   DWORD PTR [ecx+0xeebfd35]
  41d711:	jge    0x41d77d
  41d713:	and    al,0x0
  41d715:	add    BYTE PTR [esi],bl
  41d717:	or     edi,esi
  41d719:	call   FWORD PTR [esi]
  41d71b:	or     BYTE PTR [ebx+0x310747d3],cl
  41d721:	push   ecx
  41d722:	call   0x17b4:0xe748a7
  41d729:	dec    BYTE PTR [edx+0x7200279f]
  41d72f:	lds    ecx,FWORD PTR [ecx-0x74cdd495]
  41d735:	inc    ebx
  41d736:	and    ecx,DWORD PTR [esi-0x3d]
  41d739:	inc    edi
  41d73a:	mov    esi,0xc57de4d
  41d73f:	fiadd  DWORD PTR [edi]
  41d741:	cmp    al,0xf9
  41d744:	pop    ss
  41d745:	inc    dl
  41d747:	add    cl,BYTE PTR [eax]
  41d749:	test   bl,dl
  41d74b:	and    DWORD PTR [edx],eax
  41d74d:	add    ah,al
  41d74f:	adc    al,BYTE PTR [eax]
  41d751:	bswap  ecx
  41d753:	sahf   
  41d754:	add    al,BYTE PTR [eax]
  41d756:	inc    edi
  41d757:	xchg   edi,eax
  41d758:	(bad)  
  41d759:	and    esi,DWORD PTR [edi]
  41d75b:	ror    DWORD PTR [edx-0x4ca4a33e],cl
  41d761:	push   eax
  41d762:	int3   
  41d763:	imul   ebp,DWORD PTR [ebx],0x2e
  41d766:	imul   eax,DWORD PTR [edx+0x16],0xdc061b8a
  41d76d:	push   esi
  41d76e:	adc    eax,0x6f8a45a7
  41d773:	dec    ecx
  41d774:	add    al,0xf1
  41d776:	pop    eax
  41d777:	(bad)  
  41d778:	fcmovb st,st(4)
  41d77a:	add    BYTE PTR [eax],al
  41d77c:	shl    ah,1
  41d77e:	mov    al,BYTE PTR [ebx+0x23]
  41d781:	cmp    bl,cl
  41d783:	test   DWORD PTR [ebx+0x24],ebp
  41d786:	add    al,BYTE PTR [eax]
  41d788:	mov    dl,0x19
  41d78a:	cmp    DWORD PTR [ebp+0x2245f],0x3cfa0c47
  41d794:	inc    edi
  41d795:	and    eax,0x99b0002
  41d79a:	in     al,dx
  41d79b:	adc    BYTE PTR [ecx],0x8
  41d79e:	aad    0xdf
  41d7a0:	dec    ebx
  41d7a1:	or     esp,edx
  41d7a3:	add    eax,DWORD PTR [edi-0x73]
  41d7a6:	jecxz  0x41d72a
  41d7a8:	stc    
  41d7a9:	push   es
  41d7aa:	mov    ebp,0x71b999fb
  41d7af:	inc    esi
  41d7b0:	loopne 0x41d772
  41d7b2:	aaa    
  41d7b3:	pop    ss
  41d7b4:	loope  0x41d7d4
  41d7b6:	idiv   BYTE PTR [eax+0x4c69aa7d]
  41d7bc:	shr    DWORD PTR [ebx+0x47104069],1
  41d7c2:	lock add ecx,esp
  41d7c5:	popf   
  41d7c6:	(bad)  
  41d7c7:	repz int 0x46
  41d7ca:	sar    DWORD PTR [esi],1
  41d7cc:	add    BYTE PTR [ecx+esi*2+0x6eaa046],dh
  41d7d3:	pop    ss
  41d7d4:	mov    eax,ds:0x472769c4
  41d7d9:	xchg   esp,eax
  41d7da:	shr    DWORD PTR [edx],cl
  41d7dc:	inc    eax
  41d7dd:	jle    0x41d813
  41d7df:	loopne 0x41d7e1
  41d7e1:	add    BYTE PTR [eax],bh
  41d7e3:	jl     0x41d806
  41d7e5:	pop    ss
  41d7e6:	pop    ss
  41d7e7:	mov    bh,0x61
  41d7e9:	inc    ebp
  41d7ea:	pusha  
  41d7eb:	add    dl,bh
  41d7ed:	push   ss
  41d7ee:	jno    0x41d86e
  41d7f0:	cmp    al,0xe0
  41d7f2:	adc    al,0x4c
  41d7f4:	out    0x3,eax
  41d7f6:	inc    edi
  41d7f7:	or     edx,esi
  41d7f9:	ss aad 0xe7
  41d7fc:	jae    0x41d878
  41d7fe:	push   eax
  41d7ff:	or     ch,al
  41d801:	add    edi,DWORD PTR [ebx+eax*4+0xa40fffc]
  41d808:	cmp    DWORD PTR [ebp+ecx*8+0x2320903a],esi
  41d80f:	or     bh,BYTE PTR [ebp+0x4]
  41d812:	fxtract 
  41d814:	(bad)  
  41d815:	in     al,dx
  41d816:	inc    esp
  41d817:	or     DWORD PTR [ebx],eax
  41d819:	mov    ebp,?
  41d81b:	sub    dh,BYTE PTR [ecx+0x4c]
  41d81e:	lds    edi,FWORD PTR [esi]
  41d820:	(bad)  
  41d821:	call   0xe945c6b8
  41d826:	inc    esp
  41d827:	jl     0x41d873
  41d829:	loopne 0x41d802
  41d82b:	lock mov ch,BYTE PTR [edi-0xc]
  41d82f:	add    eax,0x83bbe900
  41d834:	pop    ss
  41d835:	in     eax,dx
  41d836:	inc    esp
  41d837:	or     DWORD PTR [eax+0x60],eax
  41d83a:	ret    0x3ed
  41d83d:	jmp    0xf9c75886
  41d842:	enter  0xfe09,0x62
  41d846:	add    BYTE PTR [eax],al
  41d848:	inc    edx
  41d849:	repnz add ebp,ecx
  41d84c:	inc    esp
  41d84d:	jg     0x41d85e
  41d84f:	jmp    0x41d8c7
  41d851:	or     al,0xc1
  41d853:	jno    0x41d809
  41d855:	or     BYTE PTR [esi-0x1f65f2b],bl
  41d85b:	je     0x41d7f8
  41d85d:	jle    0x41d7e4
  41d85f:	stc    
  41d860:	nop
  41d861:	or     esi,edi
  41d863:	jo     0x41d86e
  41d865:	repnz add ebp,ecx
  41d868:	inc    esp
  41d869:	leave  
  41d86a:	mov    BYTE PTR [edi+0x7f],bl
  41d86d:	add    eax,0x83bde900
  41d872:	pmulhw mm0,QWORD PTR [ecx+ecx*1-0x75]
  41d877:	outs   dx,DWORD PTR ds:[esi]
  41d878:	arpl   WORD PTR ds:0xf9cee900,ax
  41d87e:	add    DWORD PTR [ebx-0x678b7c7],edi
  41d884:	inc    ebp
  41d885:	imul   ebx,DWORD PTR [ebx],0xffffffed
  41d888:	inc    esp
  41d889:	or     DWORD PTR [ebx-0x10],esi
  41d88c:	iret   
  41d88d:	mov    ss,WORD PTR [eax]
  41d88f:	add    BYTE PTR [edx],ah
  41d891:	or     eax,0x5a08900
  41d896:	add    al,BYTE PTR [eax]
  41d898:	cs int 0x88
  41d89b:	mov    cs,WORD PTR [edx]
  41d89d:	or     esi,edi
  41d89f:	call   DWORD PTR [edi+0x1e040d87]
  41d8a5:	or     eax,0x8f68689
  41d8aa:	(bad)  
  41d8ab:	inc    DWORD PTR [eax]
  41d8ad:	add    BYTE PTR [esi],bh
  41d8af:	in     eax,dx
  41d8b0:	mov    al,BYTE PTR [esi-0x1f6f2]
  41d8b6:	and    BYTE PTR ds:0x1688b00,cl
  41d8bc:	add    al,BYTE PTR [eax]
  41d8be:	out    dx,al
  41d8bf:	xchg   ecx,eax
  41d8c0:	sbb    DWORD PTR [eax],0xffffffe2
  41d8c3:	or     al,0x0
  41d8c5:	add    DWORD PTR [eax-0x3],edi
  41d8c8:	add    DWORD PTR [eax],eax
  41d8ca:	scas   al,BYTE PTR es:[edi]
  41d8cb:	icebp  
  41d8cc:	int3   
  41d8cd:	ror    BYTE PTR [esi-0x15dbbe6f],cl
  41d8d3:	xchg   DWORD PTR [ebp+0x4991ef74],edi
  41d8d9:	and    al,0xce
  41d8db:	xchg   ecx,eax
  41d8dc:	xchg   ebx,eax
  41d8dd:	adc    BYTE PTR [edx+0x522b000c],ah
  41d8e3:	jmp    0x8e572a35
  41d8e8:	adc    DWORD PTR [esi+ebp*2],eax
  41d8eb:	or     al,0x29
  41d8ed:	dec    esp
  41d8ee:	inc    edx
  41d8ef:	mov    ebp,0x1e51514f
  41d8f4:	int    0x83
  41d8f6:	mov    ds:0x23c084fc,al
  41d8fb:	adc    DWORD PTR [ebx-0x75],ebx
  41d8fe:	lods   eax,DWORD PTR ds:[esi]
  41d8ff:	rcr    DWORD PTR [esi+0x5e],0xdd
  41d903:	inc    edi
  41d904:	xor    eax,0x890d46c2
  41d909:	xchg   BYTE PTR [edi+0x2],al
  41d90c:	(bad)  
  41d90d:	(bad)  
  41d90e:	cmp    bl,cl
  41d910:	mov    ebp,0x97000023
  41d915:	sub    eax,0x73895eb7
  41d91a:	cmp    eax,0x1da0537
  41d91f:	mov    eax,0x7f247
  41d924:	add    al,0x7b
  41d926:	mov    ebp,0x497b4323
  41d92b:	shr    dh,0xf2
  41d92e:	xchg   BYTE PTR [ebx+0x4f],al
  41d931:	mov    dl,0x40
  41d933:	mov    cl,BYTE PTR [ebx-0x247ef7ea]
  41d939:	adc    eax,0x75470000
  41d93e:	inc    ecx
  41d93f:	je     0x41d981
  41d941:	jno    0x41d980
  41d943:	sub    ecx,DWORD PTR [ebx-0xe]
  41d946:	add    ebx,eax
  41d948:	mov    esp,0x4b43dd75
  41d94d:	repnz add DWORD PTR [ebx+0x3c1cdd3],ecx
  41d954:	inc    edi
  41d955:	repnz mov dl,0x8a
  41d958:	mov    ebx,0x4703c1cd
  41d95d:	repnz scas eax,DWORD PTR es:[edi]
  41d95f:	mov    dh,BYTE PTR [ebx+0x4703d5cd]
  41d965:	repnz mov ah,0x4f
  41d968:	mov    esp,0x4b3fe86d
  41d96d:	repnz add DWORD PTR [edx+0x17],edx
  41d971:	shl    BYTE PTR gs:[ebx],0x4f
  41d975:	fidiv  DWORD PTR [esp+esi*8-0x39980000]
  41d97c:	add    ebx,0x33
  41d97f:	test   BYTE PTR [ecx],0x0
  41d982:	test   BYTE PTR [ebp+0x883cb40],ah
  41d988:	mov    bl,0x40
  41d98a:	jl     0x41d960
  41d98c:	stos   DWORD PTR es:[edi],eax
  41d98d:	inc    eax
  41d98e:	or     al,0xd6
  41d990:	cmp    al,0x7d
  41d992:	and    ecx,DWORD PTR [ecx+0x730147b]
  41d998:	call   0x72a06c53
  41d99d:	mov    ecx,0x3923848
  41d9a2:	sar    DWORD PTR [edx+0x987c203],1
  41d9a8:	jo     0x41d9be
  41d9aa:	pop    es
  41d9ab:	add    ch,bl
  41d9ad:	add    bh,BYTE PTR [ecx-0x88308f3]
  41d9b3:	mov    cl,BYTE PTR [eax+0xb]
  41d9b6:	inc    eax
  41d9b7:	mov    esi,0x54f4fd73
  41d9bc:	test   al,0x3
  41d9be:	retf   0xe6d1
  41d9c1:	js     0x41d9ba
  41d9c3:	push   ss
  41d9c4:	jne    0x41da0b
  41d9c6:	enter  0x44d,0x3c
  41d9ca:	test   DWORD PTR [edx-0x27c333de],ecx
  41d9d0:	fdiv   DWORD PTR ds:0xff8c8a22
  41d9d6:	inc    edi
  41d9d7:	jl     0x41d9ca
  41d9d9:	jl     0x41da53
  41d9db:	(bad)  
  41d9dc:	pop    ds
  41d9dd:	add    DWORD PTR [eax],0xd5090c00
  41d9e3:	push   ds
  41d9e4:	inc    ebp
  41d9e5:	xchg   esp,eax
  41d9e6:	fcomi  st,st(5)
  41d9e8:	ret    
  41d9e9:	sub    al,0x86
  41d9ec:	in     al,0xc4
  41d9ee:	not    DWORD PTR [edx]
  41d9f0:	add    DWORD PTR [esi],0x94a486e8
  41d9f6:	not    DWORD PTR [edx]
  41d9f8:	jno    0x41da00
  41d9fa:	call   0x755867d3
  41d9ff:	test   DWORD PTR [edi+edx*2-0x6bbcd800],edi
  41da06:	xor    al,0xd1
  41da08:	leave  
  41da09:	add    al,0x1d
  41da0b:	and    al,0x49
  41da0d:	nop
  41da0e:	inc    esp
  41da0f:	aam    0x7c
  41da11:	mov    es,WORD PTR [esp+esi*8-0x4c]
  41da15:	repz or BYTE PTR [ebx+0x8],ah
  41da19:	cmp    eax,0x250071ac
  41da1e:	nop
  41da1f:	sub    cl,al
  41da21:	add    bl,BYTE PTR ds:0x1cc36bf5
  41da27:	jmp    0x9f4ee370
  41da2c:	ret    0x4ea1
  41da2f:	test   al,0x44
  41da31:	xchg   esp,eax
  41da32:	xor    al,0xf1
  41da34:	rol    DWORD PTR [ebx],0x39
  41da37:	int3   
  41da38:	repnz pop DWORD PTR [esp+edi*8+0x2c]
  41da3d:	mov    es,WORD PTR [esp+ebx*8+0x54]
  41da41:	repz or BYTE PTR [ebx+0x0],ah
  41da45:	add    BYTE PTR [eax],al
  41da47:	cmp    eax,0x250861ac
  41da4c:	nop
  41da4d:	stos   BYTE PTR es:[edi],al
  41da4e:	rol    DWORD PTR [edx],0x39
  41da51:	popf   
  41da52:	jae    0x41da8d
  41da54:	(bad)  
  41da56:	push   ds
  41da57:	mov    ebp,DWORD PTR [edi+ebx*4-0x7a81fa75]
  41da5e:	aas    
  41da5f:	cdq    
  41da60:	add    BYTE PTR [ebp+0x46],dh
  41da63:	xchg   edx,eax
  41da64:	add    al,0x54
  41da66:	inc    eax
  41da67:	push   edi
  41da68:	aas    
  41da69:	jmp    0xf9cd6401
  41da6e:	aaa    
  41da6f:	pop    es
  41da70:	(bad)  
  41da71:	out    dx,al
  41da72:	push   ds
  41da73:	mov    eax,esp
  41da75:	daa    
  41da76:	test   BYTE PTR ds:0x99484d7e,al
  41da7c:	add    BYTE PTR [eax],al
  41da7e:	sub    cl,BYTE PTR [ebx]
  41da80:	mov    DWORD PTR [ebx+eax*1],eax
  41da83:	adc    DWORD PTR [esi+0x41],ecx
  41da86:	outs   dx,BYTE PTR ds:[esi]
  41da87:	add    al,BYTE PTR [edx-0x1e79143]
  41da8d:	call   FWORD PTR ds:0x6218fa8c
  41da93:	dec    ebx
  41da94:	aas    
  41da95:	adc    esp,0xfffffffd
  41da98:	push   cs
  41da99:	mov    WORD PTR [edx+ebx*1],ss
  41da9c:	(bad)  
  41da9d:	push   DWORD PTR [ebx-0x5e00f274]
  41daa3:	sbb    cl,BYTE PTR [ebp-0x18]
  41daa6:	daa    
  41daa7:	or     DWORD PTR [eax],eax
  41daa9:	add    BYTE PTR [eax],al
  41daab:	add    BYTE PTR [ecx-0x49],al
  41daae:	pop    edx
  41daaf:	mov    DWORD PTR [edx-0x4c],esi
  41dab2:	mov    edi,0x88bbee08
  41dab7:	in     eax,0x6f
  41dab9:	sub    DWORD PTR [ebp+0x0],edi
  41dabc:	fimul  WORD PTR [eax]
  41dabe:	push   ecx
  41dabf:	push   esi
  41dac0:	leave  
  41dac1:	test   DWORD PTR [eax+ecx*1+0x73],eax
  41dac5:	mov    esp,0x8feb97d
  41daca:	add    BYTE PTR [eax],al
  41dacc:	addr16 dec esi
  41dace:	add    al,0xda
  41dad1:	test   DWORD PTR [edx],esi
  41dad3:	or     DWORD PTR [eax+0xd],0x47aefc00
  41dada:	jecxz  0x41dae2
  41dadc:	and    eax,0x5ee780d6
  41dae1:	or     al,BYTE PTR [eax]
  41dae3:	add    BYTE PTR [edi+0x32],ch
  41dae6:	pop    es
  41dae7:	or     DWORD PTR [eax+0x49813585],edx
  41daed:	or     eax,0x479efc00
  41daf2:	out    dx,al
  41daf3:	or     dh,BYTE PTR [edi+0x1a]
  41daf6:	mov    BYTE PTR [edx],dh
  41daf8:	inc    edi
  41daf9:	imul   esi,DWORD PTR [edi],0x7cee8582
  41daff:	aaa    
  41db00:	(bad)  
  41db01:	rol    DWORD PTR [ecx+0xe],cl
  41db04:	inc    edi
  41db05:	repnz inc edx
  41db07:	out    dx,al
  41db08:	inc    ecx
  41db09:	out    0xcf,eax
  41db0b:	mov    BYTE PTR [ecx],dl
  41db0d:	addr16 aam 0x80
  41db10:	add    BYTE PTR [eax],al
  41db12:	popa   
  41db13:	repnz adc DWORD PTR [edx],eax
  41db16:	inc    edi
  41db17:	mov    cl,0x27
  41db19:	or     ecx,esp
  41db1b:	test   BYTE PTR [edx+eiz*8+0xf24b170],0x3e
  41db23:	lods   al,BYTE PTR ds:[esi]
  41db24:	jl     0x41db3d
  41db26:	(bad)  
  41db27:	mov    es,WORD PTR [ecx]
  41db29:	lock inc esp
  41db2b:	repnz inc edx
  41db2d:	jmp    0x7955:0x882fe94b
  41db34:	xor    al,0x82
  41db36:	add    eax,0xc42f7cee
  41db3b:	push   ebx
  41db3c:	ror    BYTE PTR [edx],1
  41db3e:	xor    al,0x69
  41db40:	aam    0x48
  41db42:	les    esi,FWORD PTR [ecx]
  41db44:	add    eax,0x87bd0e85
  41db49:	mov    WORD PTR [edx+0x28e7b172],es
  41db4f:	repnz add DWORD PTR [eax],eax
  41db52:	push   0xb388accc
  41db57:	les    eax,FWORD PTR [ebx+0x3]
  41db5a:	inc    edi
  41db5b:	lds    esp,FWORD PTR [bp+di]
  41db5e:	dec    ebx
  41db5f:	pop    eax
  41db60:	lods   eax,DWORD PTR ds:[esi]
  41db61:	dec    ebx
  41db62:	push   es
  41db63:	bnd jl 0x41db6f
  41db66:	into   
  41db67:	stc    
  41db68:	test   cl,al
  41db6a:	inc    ebx
  41db6b:	outs   dx,DWORD PTR ds:[esi]
  41db6c:	inc    ecx
  41db6d:	add    eax,esi
  41db6f:	imul   DWORD PTR [esi]
  41db71:	dec    ebx
  41db72:	push   es
  41db73:	or     edi,esp
  41db75:	xchg   ecx,eax
  41db76:	add    BYTE PTR [eax],al
  41db78:	jb     0x41db40
  41db7a:	jecxz  0x41db7f
  41db7c:	int3   
  41db7d:	dec    esp
  41db7e:	or     ecx,DWORD PTR [eax]
  41db80:	lods   eax,DWORD PTR ds:[esi]
  41db81:	fs sbb eax,ebp
  41db84:	push   0x4e7cef8e
  41db89:	mov    BYTE PTR [edi-0x14393bf8],ah
  41db8f:	test   BYTE PTR [esi-0x1c],cl
  41db92:	sbb    eax,ebp
  41db94:	dec    eax
  41db95:	jns    0x41db2c
  41db97:	inc    edx
  41db98:	inc    esp
  41db99:	or     DWORD PTR [edi*2-0x4cc8a5dd],esi
  41dba0:	mov    ebp,0x8b7adf4c
  41dba5:	adc    eax,0x5818b974
  41dbaa:	pop    ss
  41dbab:	sbb    al,0x39
  41dbad:	or     edi,esp
  41dbaf:	add    ebx,DWORD PTR [edi+0x8c51b65]
  41dbb5:	xchg   esi,eax
  41dbb6:	lods   al,BYTE PTR ds:[esi]
  41dbb7:	or     edx,DWORD PTR [eax+0x470430f1]
  41dbbd:	or     DWORD PTR [edx-0x47fe7480],edi
  41dbc3:	sbb    ebx,DWORD PTR [eax+0x9]
  41dbc6:	out    0x3,eax
  41dbc8:	jl     0x41db5a
  41dbca:	dec    ebx
  41dbcb:	mov    cl,0x6
  41dbcd:	adc    ah,bh
  41dbcf:	mov    dl,0xbd
  41dbd1:	dec    ebp
  41dbd2:	add    edi,esp
  41dbd4:	mov    ebp,0xcfffcb5d
  41dbd9:	enter  0xfea7,0x0
  41dbdd:	add    dl,dh
  41dbdf:	adc    BYTE PTR [eax],ch
  41dbe1:	and    eax,0x7ce19058
  41dbe6:	xchg   DWORD PTR [ecx-0xa],ecx
  41dbe9:	push   ebp
  41dbea:	dec    edi
  41dbeb:	enter  0xf408,0x4d
  41dbef:	verr   WORD PTR [eax-0x73]
  41dbf3:	xchg   ecx,eax
  41dbf4:	mov    edi,0x7bc89a9
  41dbf9:	test   al,0x2b
  41dbfb:	or     cl,BYTE PTR [ecx]
  41dbfd:	repz sti 
  41dbff:	ja     0x50aa1bd
  41dc05:	pusha  
  41dc06:	add    eax,0x6d7f0d42
  41dc0b:	adc    DWORD PTR [edi],edx
  41dc0d:	jo     0x41dc12
  41dc0f:	inc    edx
  41dc10:	or     eax,0xdfc9537f
  41dc15:	ror    ebx,1
  41dc17:	ja     0xb654e0c5
  41dc1d:	lock sub ecx,0x10
  41dc21:	loop   0x41dc51
  41dc23:	xchg   ecx,eax
  41dc24:	or     ah,BYTE PTR [eax-0x7d]
  41dc27:	inc    edx
  41dc28:	or     eax,0xdfc9233f
  41dc2d:	icebp  
  41dc2e:	sbb    eax,0x443f0d10
  41dc33:	adc    BYTE PTR [edi-0x3da0f1a0],bh
  41dc39:	icebp  
  41dc3a:	inc    esp
  41dc3b:	push   esi
  41dc3c:	mov    DWORD PTR [ebp-0x5a76f620],esi
  41dc42:	add    BYTE PTR [eax],al
  41dc44:	call   0x842d6556
  41dc49:	jmp    0xeb89:0x484b7118
  41dc50:	sub    edx,0x10
  41dc53:	popa   
  41dc54:	dec    ebx
  41dc55:	dec    eax
  41dc56:	mov    ebx,ebp
  41dc58:	sub    edx,0x8
  41dc5b:	jno    0x41dca8
  41dc5d:	dec    eax
  41dc5e:	xchg   DWORD PTR [edx],esi
  41dc60:	adc    DWORD PTR [eax+0x6066ad0],0xffffff89
  41dc67:	jmp    0xcae398
  41dc6c:	lods   al,BYTE PTR ds:[esi]
  41dc6d:	dec    esp
  41dc6e:	in     eax,0x18
  41dc70:	push   ss
  41dc71:	or     eax,0x4c9c8b3f
  41dc76:	in     eax,0x10
  41dc78:	es or  eax,0x466c8b3f
  41dc7e:	in     eax,0x8
  41dc80:	test   BYTE PTR ds:0x7d6c8b3f,0xcd
  41dc87:	mov    BYTE PTR [edi-0x50],bl
  41dc8a:	mov    edi,0x88ba6e08
  41dc8f:	in     eax,0xed
  41dc91:	sub    BYTE PTR [ecx],cl
  41dc93:	push   ebx
  41dc94:	xor    BYTE PTR [edx+ecx*4+0x54806a45],bh
  41dc9b:	or     BYTE PTR [ebp+0x364d8afb],dh
  41dca1:	or     BYTE PTR [eax+0x4],0xa7
  41dca5:	cmp    al,al
  41dca7:	jmp    0x41dca9
  41dca9:	add    BYTE PTR [edx],ah
  41dcab:	fmul   st(2),st
  41dcad:	or     ebp,0x290f0efe
  41dcb3:	(bad)  
  41dcb5:	mov    DWORD PTR [eax-0x30fb1cb4],edi
  41dcbb:	sbb    cl,BYTE PTR [eax+0xd1f2fd6]
  41dcc1:	xor    DWORD PTR [eax],ebp
  41dcc3:	test   dl,dh
  41dcc5:	cmp    DWORD PTR [ebp+0xe],0xdbde00fe
  41dccc:	fmul   DWORD PTR [ecx+0x10e34c28]
  41dcd2:	fistp  WORD PTR [edx]
  41dcd4:	mov    dh,cl
  41dcd6:	pop    ds
  41dcd7:	pop    ds
  41dcd8:	push   DWORD PTR [eax]
  41dcda:	xor    BYTE PTR [edx+esi*8+0x32da4d81],al
  41dce1:	xor    ebx,DWORD PTR [ebp+0x4789d7db]
  41dce7:	cmp    BYTE PTR [ecx-0x1b],al
  41dcea:	inc    ebp
  41dceb:	loope  0x41dcff
  41dced:	mov    BYTE PTR [ecx+0x56071e31],dl
  41dcf3:	sbb    BYTE PTR [ecx-0xe],bh
  41dcf6:	(bad)  
  41dcf7:	adc    ecx,DWORD PTR [ebx]
  41dcf9:	dec    DWORD PTR [ecx-0x31262d0e]
  41dcff:	enter  0xe542,0x4f
  41dd03:	and    DWORD PTR [esi],edi
  41dd05:	mov    dl,bh
  41dd07:	aad    0x2
  41dd09:	idiv   BYTE PTR [ebp+ecx*2+0xc010]
  41dd10:	jo     0x41dcf9
  41dd12:	and    dh,0x46
  41dd15:	jns    0x41dd29
  41dd17:	or     BYTE PTR [esi+0x69],cl
  41dd1a:	xor    esi,DWORD PTR [eax]
  41dd1c:	jns    0x41dd87
  41dd1e:	adc    BYTE PTR [eax-0x56a8a3dc],al
  41dd24:	in     eax,dx
  41dd25:	loopne 0x41dd4e
  41dd27:	xor    BYTE PTR [esi],cl
  41dd29:	gs aad 0x11
  41dd2c:	mov    esi,0x40ee42b6
  41dd31:	jae    0x41dd57
  41dd33:	add    dh,cl
  41dd35:	cmp    edx,0xfffffff9
  41dd38:	or     BYTE PTR ds:0xf247070c,ch
  41dd3e:	add    DWORD PTR [ecx+0x1b233111],ecx
  41dd44:	into   
  41dd45:	cs inc edx
  41dd47:	out    dx,al
  41dd48:	dec    ebx
  41dd49:	imul   edx,DWORD PTR [eax],0x4368ec08
  41dd4f:	add    BYTE PTR [edi],0xee
  41dd52:	rcr    BYTE PTR ds:0xe5801fce,1
  41dd58:	adc    BYTE PTR [ebx-0x2b],ch
  41dd5b:	mov    ah,0xeb
  41dd5d:	xchg   ebp,eax
  41dd5e:	ret    0xcfff
  41dd61:	or     BYTE PTR [esi+0x42],al
  41dd64:	test   eax,0xac246806
  41dd69:	or     bh,ah
  41dd6b:	add    edi,DWORD PTR [eax+edi*4]
  41dd6e:	sub    esi,DWORD PTR [ecx+0x2c700907]
  41dd74:	add    BYTE PTR [eax],al
  41dd76:	xchg   edi,ebp
  41dd78:	in     eax,dx
  41dd79:	sub    BYTE PTR [ecx+0x4703e7fc],0x14
  41dd80:	ss das 
  41dd82:	adc    BYTE PTR [edx-0x19],cl
  41dd85:	jl     0x41dd20
  41dd87:	leave  
  41dd88:	into   
  41dd89:	repnz (bad) 
  41dd8b:	out    0xd3,eax
  41dd8d:	add    al,0x47
  41dd8f:	or     edx,esp
  41dd91:	push   edx
  41dd92:	jl     0x41dde2
  41dd94:	sub    BYTE PTR [esi+ecx*8],al
  41dd97:	jne    0x41dd4c
  41dd99:	jge    0x41dd25
  41dd9b:	mov    esp,DWORD PTR [edi-0x52c4200]
  41dda1:	jmp    0x22acbd75
  41dda6:	jns    0x41dd3a
  41dda8:	rcl    DWORD PTR [eax+0xc],cl
  41ddab:	push   ebp
  41ddac:	sub    BYTE PTR [esp+edi*1],al
  41ddaf:	je     0x41dd44
  41ddb1:	jge    0x41ddb4
  41ddb3:	leave  
  41ddb4:	xchg   esi,eax
  41ddb5:	add    al,dh
  41ddb7:	out    0x7b,al
  41ddb9:	add    al,0x47
  41ddbb:	or     edx,esp
  41ddbd:	push   edx
  41ddbe:	in     al,dx
  41ddbf:	pop    edx
  41ddc0:	sub    BYTE PTR [esi+ecx*8],al
  41ddc3:	fisubr WORD PTR [eax]
  41ddc5:	sbb    ecx,DWORD PTR [edx-0x78]
  41ddc8:	inc    esi
  41ddc9:	or     al,dh
  41ddcb:	(bad)  
  41ddcc:	out    0xfe,eax
  41ddce:	mov    cl,0xdd
  41ddd0:	mov    eax,0x2691e0c4
  41ddd5:	inc    ebp
  41ddd6:	jmp    0x6545f2
  41dddb:	add    ah,cl
  41dddd:	or     DWORD PTR [eax],eax
  41dddf:	jmp    0xdf6f028
  41dde4:	cld    
  41dde5:	dec    ecx
  41dde6:	add    al,bl
  41dde8:	push   edx
  41dde9:	xchg   ecx,eax
  41ddea:	(bad)  
  41ddeb:	sub    BYTE PTR [ebp+0x22],ah
  41ddee:	xchg   DWORD PTR [esi],edi
  41ddf0:	add    ch,bh
  41ddf2:	add    al,0x60
  41ddf4:	cmp    BYTE PTR [ecx],dl
  41ddf6:	stc    
  41ddf7:	jo     0x41ddfe
  41ddf9:	mov    eax,eax
  41ddfb:	in     eax,0x79
  41ddfd:	sbb    al,0x87
  41ddff:	pop    ss
  41de00:	shl    ah,0x3d
  41de03:	bound  edx,QWORD PTR [edi-0x7dc2234b]
  41de09:	dec    BYTE PTR [eax+0x6ef0bbe]
  41de0f:	push   0xe9010225
  41de14:	inc    esp
  41de15:	adc    dh,BYTE PTR [ebp+0x4992a5]
  41de1b:	jo     0x41de3a
  41de1d:	leave  
  41de1e:	in     eax,dx
  41de1f:	out    0xc3,eax
  41de21:	out    0xfc,eax
  41de23:	jmp    0x5e4ae76c
  41de28:	pusha  
  41de29:	dec    esi
  41de2a:	aas    
  41de2b:	jmp    0x8701bde3
  41de30:	ss mov ebp,esp
  41de33:	lea    eax,[ecx+ecx*1+0x0]
  41de37:	bnd jne 0x41de1c
  41de3a:	dec    esi
  41de3b:	sub    BYTE PTR [ebx-0x70],cl
  41de3e:	jae    0x41debd
  41de40:	add    BYTE PTR [eax],al
  41de42:	mov    eax,esp
  41de44:	sub    DWORD PTR [ecx+0x1ad19100],0x6ade90ed
  41de4e:	es aas 
  41de50:	mov    DWORD PTR ds:0xa853e296,ebx
  41de56:	inc    esp
  41de57:	adc    dh,BYTE PTR [ebx+0x0]
  41de5a:	sbb    bh,BYTE PTR [ebp-0x22]
  41de5d:	rol    DWORD PTR [ecx+0x12e77f08],0xa
  41de64:	add    BYTE PTR [eax],al
  41de66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de67:	pop    edx
  41de68:	fst    DWORD PTR [ebx-0x11]
  41de6b:	or     DWORD PTR [edi+0xb235fdf],eax
  41de71:	cmp    DWORD PTR [ecx],0xaefffd06
  41de77:	(bad)  
  41de78:	mov    dh,0xdc
  41de7a:	mov    edi,0x3188fdc4
  41de7f:	inc    ebp
  41de80:	out    dx,al
  41de81:	push   ss
  41de82:	pop    ds
  41de83:	sub    edi,ecx
  41de85:	add    BYTE PTR [esi+0x9],ch
  41de88:	or     DWORD PTR [edi+0x40bf82],esi
  41de8e:	dec    edi
  41de8f:	sbb    bh,dh
  41de91:	dec    ebp
  41de92:	xchg   esi,eax
  41de93:	cmp    DWORD PTR [eax+edi*8+0x6e],0x0
  41de98:	test   DWORD PTR [ebx-0x7601f080],ebp
  41de9e:	xchg   esi,eax
  41de9f:	dec    ecx
  41dea0:	fstp   QWORD PTR [edi]
  41dea2:	out    0x42,eax
  41dea4:	shr    dh,1
  41dea6:	add    BYTE PTR [eax],al
  41dea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dea9:	dec    eax
  41deaa:	or     cl,dh
  41deac:	mov    bh,0x35
  41deae:	xor    al,cl
  41deb0:	mov    bh,0x46
  41deb2:	and    bl,0x84
  41deb5:	pop    ebx
  41deb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb7:	stos   BYTE PTR es:[edi],al
  41deb8:	jmp    FWORD PTR [esi]
  41deba:	xor    cl,bl
  41debc:	xchg   edi,eax
  41debd:	xor    eax,0x7ff1e0c0
  41dec2:	rcl    ecx,cl
  41dec4:	rol    BYTE PTR [eax-0x7f83f641],0xcd
  41decb:	rcl    DWORD PTR [esi+0x77c830fd],0x46
  41ded2:	and    bl,0x47
  41ded5:	push   ebx
  41ded6:	add    al,0xff
  41ded8:	inc    edi
  41ded9:	and    DWORD PTR [ecx],ebp
  41dedb:	mov    bh,bh
  41dedd:	xor    DWORD PTR [edi+eax*1],esp
  41dee0:	push   ss
  41dee1:	xor    BYTE PTR [ecx-0x31],bh
  41dee4:	push   es
  41dee5:	dec    ebx
  41dee6:	push   es
  41dee7:	xor    DWORD PTR [edi-0x5b7fbc97],ecx
  41deed:	(bad)  
  41deef:	xor    dh,BYTE PTR [ecx+eiz*8+0x2a]
  41def3:	mov    BYTE PTR [edi+0x56012431],cl
  41def9:	xor    BYTE PTR [ecx-0x39],bh
  41defc:	xchg   BYTE PTR [edx],bl
  41defe:	hlt    
  41deff:	xor    BYTE PTR [edi+0x79],dh
  41df02:	inc    ebx
  41df03:	and    BYTE PTR [ebx+esi*8-0x3e7f00f8],0x2b
  41df0b:	mov    BYTE PTR [eax],al
  41df0d:	add    BYTE PTR [edi+0x360f21b1],bl
  41df13:	mov    cl,0x7a
  41df15:	mov    DWORD PTR [esi+0x7730fdca],0x64804469
  41df1f:	repz clc 
  41df21:	push   cs
  41df22:	inc    eax
  41df23:	add    DWORD PTR [edx+ecx*4],ebp
  41df26:	add    ch,dl
  41df28:	inc    edx
  41df29:	loop   0x41df76
  41df2b:	add    DWORD PTR ds:0xbe6f5f88,edi
  41df31:	pop    es
  41df32:	dec    ebx
  41df33:	ja     0x41def3
  41df35:	pop    es
  41df36:	mov    esi,0x7c5da901
  41df3b:	imul   edx,DWORD PTR ds:0x1fa055c,0xa5777953
  41df45:	and    edi,DWORD PTR [ebx]
  41df47:	or     al,0x7b
  41df49:	jae    0x41df76
  41df4b:	loop   0x41deec
  41df4d:	test   cl,dh
  41df4f:	or     dh,dh
  41df51:	outs   dx,DWORD PTR ds:[esi]
  41df52:	pop    ss
  41df53:	or     al,0x95
  41df55:	inc    edx
  41df56:	cmp    DWORD PTR [edi+eiz*1-0x20b82c4d],esi
  41df5d:	mov    bl,0xe0
  41df5f:	push   ebp
  41df60:	inc    ecx
  41df61:	or     cl,dl
  41df63:	jo     0x41df80
  41df65:	mov    bh,0x87
  41df67:	or     DWORD PTR [edi],edi
  41df69:	cld    
  41df6a:	mov    esp,0xf1f82efb
  41df6f:	repnz mov ebp,0xa80000b4
  41df75:	dec    ecx
  41df76:	and    DWORD PTR [eax],ecx
  41df78:	test   eax,0x7b6b370
  41df7d:	or     edi,edi
  41df7f:	setge  bl
  41df82:	push   es
  41df83:	test   eax,0x3efc6ed
  41df88:	repnz xchg ecx,eax
  41df8a:	or     al,0xb3
  41df8c:	adc    BYTE PTR [eax+0x62],bl
  41df8f:	mov    esi,0xf8449040
  41df94:	ret    
  41df95:	push   ebp
  41df96:	fbstp  TBYTE PTR [edx+0x824f0f8]
  41df9c:	popa   
  41df9d:	sti    
  41df9e:	aas    
  41df9f:	test   al,0xc
  41dfa1:	dec    edx
  41dfa2:	out    0x78,eax
  41dfa4:	or     eax,DWORD PTR [ecx]
  41dfa6:	sbb    BYTE PTR [ecx+edx*2],bl
  41dfa9:	cld    
  41dfaa:	mov    dh,0x7
  41dfac:	test   al,0xdd
  41dfae:	sbb    eax,ebp
  41dfb0:	cmp    BYTE PTR [esi-0xe7ff3d4],cl
  41dfb6:	nop
  41dfb7:	or     BYTE PTR [ecx],ch
  41dfb9:	sti    
  41dfba:	jmp    DWORD PTR [edi+0x78e74893]
  41dfc0:	add    DWORD PTR [ecx],0x18
  41dfc3:	sbb    al,0xed
  41dfc5:	std    
  41dfc6:	jle    0x41dfcf
  41dfc8:	jne    0x41df56
  41dfca:	add    BYTE PTR [ebx+edx*2],ch
  41dfcd:	dec    edx
  41dfce:	call   0xfe3d2f3e
  41dfd3:	ret    0xee73
  41dfd6:	pop    ebx
  41dfd7:	sub    eax,DWORD PTR [eax]
  41dfd9:	add    bl,ch
  41dfdb:	cli    
  41dfdc:	push   esp
  41dfdd:	pusha  
  41dfde:	es xchg esp,ebp
  41dfe1:	stc    
  41dfe2:	xchg   ebp,eax
  41dfe3:	push   esp
  41dfe4:	mov    DWORD PTR [esp+ecx*8+0x4fed738f],esp
  41dfeb:	inc    ebp
  41dfec:	clc    
  41dfed:	cdq    
  41dfee:	cmc    
  41dfef:	loop   0x41dfeb
  41dff1:	xor    al,BYTE PTR [eax-0x5]
  41dff4:	mov    ebp,DWORD PTR [esp+edx*2-0x54d57eb6]
  41dffb:	push   edi
  41dffc:	call   0xfe3d2c05
  41e001:	and    eax,0xfe93f4e
  41e007:	inc    ebp
  41e008:	clc    
  41e009:	cdq    
  41e00a:	sub    al,0x93
  41e00c:	cld    
  41e00d:	test   BYTE PTR [ecx+0x62],0x5c
  41e011:	popf   
  41e012:	cmp    edx,0xffffff8c
  41e015:	sub    al,0x5b
  41e017:	dec    edx
  41e018:	call   0xfe3d208d
  41e01d:	bound  ebp,QWORD PTR [edi+0x332489fe]
  41e023:	xchg   ecx,eax
  41e024:	inc    ebx
  41e025:	vsubsd xmm6,xmm5,xmm0
  41e029:	push   ecx
  41e02a:	pop    ds
  41e02b:	dec    esi
  41e02c:	aas    
  41e02d:	jmp    0x1a3a25f1
  41e032:	pop    ebx
  41e033:	imul   edi,esp,0xffffffa6
  41e036:	dec    ecx
  41e037:	(bad)  
  41e038:	fsubr  QWORD PTR ds:0x2c8cfa02
  41e03e:	add    BYTE PTR [eax],al
  41e040:	cmp    ecx,DWORD PTR [edx-0x18]
  41e043:	or     BYTE PTR [edi-0x5],cl
  41e046:	std    
  41e047:	add    BYTE PTR [ebp+0x638bf9b1],dl
  41e04d:	adc    eax,0x7d7a4588
  41e052:	pop    esp
  41e053:	lock inc esi
  41e055:	mov    cl,0x4c
  41e057:	inc    ecx
  41e058:	fiadd  WORD PTR [eax+0x1daef844]
  41e05e:	inc    esi
  41e05f:	cld    
  41e060:	jns    0x41e065
  41e062:	gs pop esp
  41e064:	mov    ebx,0xa38cfdc4
  41e069:	adc    eax,0x1147e84d
  41e06e:	(bad)  
  41e06f:	jmp    eax
  41e071:	add    BYTE PTR [eax+edi*8-0x22],0x1d
  41e076:	(bad)  
  41e078:	imul   eax,DWORD PTR [ebx],0xabb6c682
  41e07e:	mov    WORD PTR [ebp+0x3e],es
  41e081:	mov    dh,0xe5
  41e083:	shl    DWORD PTR ds:0xe55efe03,cl
  41e089:	jl     0x41e074
  41e08b:	pop    ebp
  41e08c:	pop    esp
  41e08d:	(bad)  
  41e08e:	std    
  41e08f:	push   esp
  41e090:	out    0x28,eax
  41e092:	sub    ah,0x1a
  41e095:	add    eax,0xab2d0000
  41e09a:	push   esi
  41e09b:	mov    ebp,DWORD PTR [ebx]
  41e09d:	std    
  41e09e:	mov    dh,BYTE PTR [ebp+0x6a]
  41e0a1:	jb     0x41e027
  41e0a3:	add    BYTE PTR [eax],0x0
  41e0a6:	mov    BYTE PTR [ebx],al
  41e0a8:	(bad)  
  41e0a9:	push   eax
  41e0aa:	jbe    0x41e0ed
  41e0ac:	add    BYTE PTR [eax],al
  41e0ae:	pop    esi
  41e0af:	lahf   
  41e0b0:	std    
  41e0b1:	addr16 fcmovb st,st(0)
  41e0b4:	inc    eax
  41e0b5:	add    BYTE PTR [esi],al
  41e0b7:	jge    0x41e0b4
  41e0b9:	(bad)  
  41e0ba:	jmp    0x9cccb09b
  41e0bf:	and    DWORD PTR [ecx+eax*2+0x47],ecx
  41e0c3:	loop   0x41e13e
  41e0c5:	add    edx,DWORD PTR [ebp+0x24]
  41e0c8:	jg     0x41e0c3
  41e0ca:	aas    
  41e0cb:	push   cs
  41e0cc:	adc    esi,eax
  41e0ce:	ret    0x60a
  41e0d1:	inc    BYTE PTR [eax]
  41e0d3:	loop   0x41e0d6
  41e0d5:	add    BYTE PTR [edi-0x75],al
  41e0d8:	mov    al,0x88
  41e0da:	idiv   DWORD PTR [ecx+0x7d]
  41e0dd:	jae    0x41e0c8
  41e0df:	push   edi
  41e0e0:	add    esi,DWORD PTR [eax]
  41e0e2:	cmc    
  41e0e3:	dec    ebx
  41e0e4:	aam    0x8a
  41e0e6:	ret    0x3de
  41e0e9:	(bad)  
  41e0ea:	sar    BYTE PTR [ecx+0x7d],1
  41e0ed:	jnp    0x41e0b8
  41e0ef:	aaa    
  41e0f0:	add    edi,esi
  41e0f2:	retf   0x3b6
  41e0f5:	(bad)  
  41e0f6:	mov    eax,0xb17b756b
  41e0fb:	das    
  41e0fc:	add    ecx,DWORD PTR [esi]
  41e0fe:	jmp    0x212161e6
  41e103:	imul   eax,DWORD PTR [ebp+0x7b],0xffffff99
  41e107:	pop    es
  41e108:	add    ecx,DWORD PTR [esi]
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	fxch   st(7)
  41e10e:	shl    bh,cl
  41e110:	mov    edi,0x47023be1
  41e115:	mov    ds:0xea7d82bf,eax
  41e11a:	xchg   BYTE PTR [edi+eax*8],al
  41e11d:	sub    eax,DWORD PTR [esi*2-0x1851bf7f]
  41e124:	in     al,dx
  41e125:	fild   WORD PTR [esi+edi*8]
  41e128:	les    ecx,FWORD PTR [ebp-0x30af0277]
  41e12e:	add    DWORD PTR [eax-0x59711df4],eax
  41e134:	les    edi,FWORD PTR [ecx+ecx*4-0x3]
  41e138:	cmp    BYTE PTR [edi+0x8d17501],ah
  41e13e:	je     0x41e1be
  41e140:	test   al,0xf7
  41e142:	sahf   
  41e143:	add    al,0x90
  41e145:	loope  0x41e155
  41e147:	add    eax,DWORD PTR [edi+0x9]
  41e14a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e14c:	ins    DWORD PTR es:[edi],dx
  41e14d:	adc    BYTE PTR [ebx-0x18fef95a],0xae
  41e154:	iret   
  41e155:	in     eax,dx
  41e156:	push   0xe709cc17
  41e15b:	add    edx,DWORD PTR [edi+ebx*2+0x18b78be]
  41e162:	jb     0x41e0f2
  41e164:	dec    esp
  41e165:	xchg   BYTE PTR [ebx+eax*4-0x26],ch
  41e169:	test   DWORD PTR [esi-0x4d],0x3e7f7e8
  41e170:	add    BYTE PTR [eax],al
  41e172:	inc    edi
  41e173:	arpl   di,sp
  41e175:	fwait
  41e176:	pushf  
  41e177:	inc    ebp
  41e178:	test   al,0x3
  41e17a:	scas   eax,DWORD PTR es:[edi]
  41e17b:	fld    TBYTE PTR [esp+eax*1]
  41e17e:	mov    cl,0x39
  41e180:	cmp    DWORD PTR [ecx-0x3a],edi
  41e183:	aam    0xac
  41e185:	ret    0x8fa0
  41e188:	jmp    0x41e15b
  41e18a:	push   es
  41e18b:	mov    WORD PTR [ecx],ss
  41e18d:	repz or al,0xfa
  41e190:	cs jle 0x41e1a3
  41e193:	idiv   esi
  41e195:	add    eax,DWORD PTR [edi+0x9]
  41e198:	out    0x3,eax
  41e19a:	ins    BYTE PTR es:[edi],dx
  41e19b:	pop    esp
  41e19c:	pusha  
  41e19d:	adc    edi,DWORD PTR [edi+0x69025b8d]
  41e1a3:	neg    DWORD PTR [eax]
  41e1a5:	(bad)  
  41e1a6:	outs   dx,BYTE PTR ds:[esi]
  41e1a7:	cmp    BYTE PTR [edx-0x77],ah
  41e1aa:	shl    esi,cl
  41e1ac:	into   
  41e1ad:	add    edi,DWORD PTR [edi+0x4902438d]
  41e1b3:	idiv   DWORD PTR [esi+0xf7bb89]
  41e1b9:	mov    dh,0x44
  41e1bb:	or     DWORD PTR [ebx-0x208bad3],0xfffffff6
  41e1c2:	push   es
  41e1c3:	or     DWORD PTR [ecx-0x447f3b77],eax
  41e1c9:	adc    eax,0xdefdf745
  41e1ce:	into   
  41e1cf:	xor    al,0x2f
  41e1d1:	cmp    DWORD PTR [ebx+0xeac3f6],0x42484400
  41e1db:	push   0xfffffff9
  41e1dd:	sbb    DWORD PTR [ebx-0x1c],edi
  41e1e0:	les    esi,FWORD PTR [eax]
  41e1e2:	add    ah,bl
  41e1e4:	(bad)  
  41e1e5:	pop    edi
  41e1e6:	push   esi
  41e1e7:	push   ecx
  41e1e8:	inc    ebp
  41e1e9:	cmc    
  41e1ea:	std    
  41e1eb:	push   esi
  41e1ec:	shr    BYTE PTR [edx-0x8bbb088],0x0
  41e1f3:	imul   ecx,DWORD PTR [eax],0xc8867309
  41e1f9:	mov    dl,0x78
  41e1fb:	aaa    
  41e1fc:	inc    esp
  41e1fd:	test   DWORD PTR [eax],0x8382e6b4
  41e203:	imul   eax,DWORD PTR [ebp-0x9],0xaeacb9fd
  41e20a:	add    cl,ch
  41e20c:	inc    esp
  41e20d:	push   esp
  41e20e:	pop    esi
  41e20f:	mov    dl,0xc3
  41e211:	in     eax,0x5b
  41e213:	sub    edi,DWORD PTR [ebx]
  41e215:	or     DWORD PTR [ecx-0x69],edx
  41e218:	sbb    eax,0x54cd4480
  41e21d:	outs   dx,DWORD PTR ds:[esi]
  41e21e:	mov    DWORD PTR [ebp+0x6c661d28],ecx
  41e224:	mov    DWORD PTR [edx+0x9],edi
  41e227:	jo     0x41e1b7
  41e229:	cmp    BYTE PTR [eax-0x7],0xee
  41e22d:	mov    dl,0xff
  41e22f:	call   0xcce395
  41e234:	push   cs
  41e235:	sbb    eax,0x3c88c785
  41e23a:	ror    BYTE PTR [edi],cl
  41e23c:	add    BYTE PTR [eax],al
  41e23e:	mov    ecx,0xde8352dc
  41e243:	add    DWORD PTR [eax-0x18],edx
  41e246:	call   0x4ce9:0x36fffbf3
  41e24d:	inc    ecx
  41e24e:	cs loop 0x41e28b
  41e251:	stc    
  41e252:	ror    DWORD PTR [edx],0xe
  41e255:	mov    bh,0xe5
  41e257:	pop    esi
  41e258:	push   ebx
  41e259:	call   0x3dd55c
  41e25e:	inc    esi
  41e25f:	imul   ecx,DWORD PTR [ecx+0x41],0xf926e1de
  41e266:	popa   
  41e267:	or     ecx,DWORD PTR [esi]
  41e269:	mov    bh,0x85
  41e26b:	pop    edi
  41e26c:	push   esi
  41e26d:	call   0x3dd504
  41e272:	mov    eax,ds:0xd6c25767
  41e277:	or     DWORD PTR [edi-0x75],ecx
  41e27a:	loop   0x41e2a9
  41e27c:	or     BYTE PTR [ebx+0x6],dl
  41e27f:	pop    es
  41e280:	cmc    
  41e281:	jmp    DWORD PTR [ecx-0x73]
  41e284:	mov    edi,0x99e80
  41e289:	mov    eax,0x3d4662
  41e28e:	and    eax,0x1d13851a
  41e293:	retf   0x8304
  41e296:	pop    ebp
  41e297:	push   cs
  41e298:	cmp    DWORD PTR [ebx+esi*4+0x4c],ebx
  41e29c:	add    BYTE PTR [edx+0x41],dh
  41e29f:	mov    dl,0x5c
  41e2a1:	dec    ebp
  41e2a2:	add    BYTE PTR [eax],al
  41e2a4:	lahf   
  41e2a5:	or     DWORD PTR [edi+0x7f1bf710],eax
  41e2ab:	shr    BYTE PTR [edx-0x74],0xbf
  41e2af:	add    al,0x47
  41e2b1:	sbb    eax,0xe0064be0
  41e2b6:	jae    0x41e2a5
  41e2b8:	in     al,dx
  41e2b9:	mov    eax,ds:0x77940008
  41e2be:	pusha  
  41e2bf:	and    al,0x4f
  41e2c1:	paddsb mm5,mm0
  41e2c4:	das    
  41e2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c6:	(bad)  
  41e2c7:	jg     0x41e2cd
  41e2c9:	arpl   WORD PTR [eax+eax*1],ax
  41e2cc:	inc    edi
  41e2cd:	push   0xffffffe0
  41e2cf:	dec    esp
  41e2d0:	xchg   dl,ah
  41e2d2:	mov    WORD PTR [ecx],ss
  41e2d4:	mov    esi,0x43c184f2
  41e2d9:	pop    edi
  41e2da:	les    eax,FWORD PTR [edx+eax*2]
  41e2dd:	push   ss
  41e2de:	dec    ebp
  41e2df:	aas    
  41e2e0:	inc    edi
  41e2e1:	lock lock mov eax,0x411593
  41e2e8:	mov    esp,0xc4108aef
  41e2ed:	pop    ds
  41e2ee:	or     BYTE PTR [ecx-0x23c118f9],al
  41e2f4:	and    BYTE PTR [ecx-0x58278dff],0xc3
  41e2fb:	add    al,0x47
  41e2fd:	popf   
  41e2fe:	mov    ah,bl
  41e300:	les    ecx,FWORD PTR [esi+0x1c]
  41e303:	push   ecx
  41e304:	sbb    DWORD PTR [edi+0x5d],esp
  41e307:	or     BYTE PTR [eax],al
  41e309:	add    BYTE PTR [ebp+edx*4+0x2a0a8b0d],bh
  41e310:	push   esp
  41e311:	push   ecx
  41e312:	scas   eax,DWORD PTR es:[edi]
  41e313:	or     eax,0x5590fdfc
  41e318:	inc    ebp
  41e319:	lock idiv DWORD PTR [ebx+eax*2+0x8]
  41e31e:	pop    ss
  41e31f:	sbb    ah,ah
  41e321:	clc    
  41e322:	js     0x41e31f
  41e324:	mov    es,WORD PTR [ebx+0x5f]
  41e327:	xchg   edx,eax
  41e328:	test   cl,al
  41e32a:	push   edi
  41e32b:	or     DWORD PTR [edx],edi
  41e32d:	in     al,dx
  41e32e:	jbe    0x41e321
  41e330:	fiadd  WORD PTR [eax]
  41e332:	out    dx,al
  41e333:	push   esp
  41e334:	and    eax,DWORD PTR [ebx+0x47]
  41e337:	xchg   BYTE PTR [esp+edi*8],ah
  41e33a:	mul    eax
  41e33c:	inc    esp
  41e33d:	sti    
  41e33e:	inc    edx
  41e33f:	hlt    
  41e340:	dec    edi
  41e341:	pusha  
  41e342:	mov    ecx,DWORD PTR [edx-0x19]
  41e345:	mov    es,WORD PTR [ecx+edi*8-0xd6513e9]
  41e34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e34d:	add    BYTE PTR [esi+0x47432b55],ch
  41e353:	xchg   BYTE PTR [esp+ebp*8],ch
  41e356:	ja     0x41e339
  41e358:	or     bl,bh
  41e35a:	or     dh,ah
  41e35c:	jb     0x41e3bc
  41e35e:	add    eax,DWORD PTR [eax+0x4dc0f424]
  41e364:	jae    0x41e2f0
  41e366:	mov    ecx,?
  41e368:	bound  ebx,QWORD PTR [esi-0xd]
  41e36b:	jg     0x41e319
  41e36d:	jmp    0x41e36f
  41e36f:	add    al,cl
  41e371:	dec    ebp
  41e372:	push   ebx
  41e373:	mov    bh,BYTE PTR [ecx+eiz*8-0x41]
  41e377:	fild   WORD PTR [ebx-0x7b7118b6]
  41e37d:	icebp  
  41e37e:	xchg   edi,eax
  41e37f:	jmp    0x41e3ff
  41e381:	repnz add BYTE PTR ds:[esi],ch
  41e385:	aad    0xa3
  41e387:	inc    edx
  41e388:	inc    edi
  41e389:	xchg   BYTE PTR [ebx+esi*8-0x52b1ee9],ah
  41e390:	mov    ds:0xbdf8ff3,al
  41e395:	dec    edx
  41e396:	out    0x8e,eax
  41e398:	add    al,0xe1
  41e39a:	mov    bh,0xeb
  41e39c:	sub    dh,dl
  41e39e:	push   es
  41e39f:	add    ch,cl
  41e3a1:	push   ebp
  41e3a2:	sti    
  41e3a3:	mov    eax,DWORD PTR [ecx+edi*8]
  41e3a6:	add    BYTE PTR [eax+0x9],ah
  41e3a9:	cmc    
  41e3aa:	xchg   DWORD PTR [esp+esi*2-0x3322a47f],ecx
  41e3b1:	inc    edi
  41e3b2:	call   0x883ef227
  41e3b7:	xor    al,0x63
  41e3b9:	pusha  
  41e3ba:	pop    esp
  41e3bb:	sbb    al,0x2
  41e3bd:	or     DWORD PTR [ebx-0x17a5bcd4],ecx
  41e3c3:	sar    BYTE PTR [ebx],0xf5
  41e3c6:	std    
  41e3c7:	inc    ecx
  41e3c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c9:	ds aas 
  41e3cb:	jmp    0x3a322aa7
  41e3d0:	xor    esp,ecx
  41e3d2:	clc    
  41e3d3:	sahf   
  41e3d4:	add    BYTE PTR [eax],al
  41e3d6:	sbb    BYTE PTR [edx+0x5c],ah
  41e3d9:	and    al,0x8a
  41e3db:	or     DWORD PTR [ebx-0x17a5e4dc],ecx
  41e3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e2:	add    esi,ebp
  41e3e4:	std    
  41e3e5:	pop    ss
  41e3e6:	(bad)  
  41e3e7:	inc    esi
  41e3e8:	clc    
  41e3e9:	sbb    ebx,esp
  41e3eb:	(bad)  
  41e3ec:	clc    
  41e3ed:	outs   dx,BYTE PTR ds:[esi]
  41e3ee:	call   0x75332a71
  41e3f3:	jle    0x41e438
  41e3f5:	pop    ecx
  41e3f6:	jae    0x41e3d9
  41e3f8:	jne    0x41e44b
  41e3fa:	shl    ah,1
  41e3fc:	and    DWORD PTR [edi],0xac8b5b33
  41e402:	lods   al,BYTE PTR ds:[esi]
  41e403:	pop    ecx
  41e404:	call   0xfe36a0dc
  41e409:	xchg   edi,eax
  41e40a:	or     eax,0x868cec8a
  41e40f:	add    DWORD PTR [eax],eax
  41e411:	mov    esp,0xd7fe6d3
  41e416:	mov    bh,0xf2
  41e418:	std    
  41e419:	jmp    0x62973f13
  41e41e:	add    DWORD PTR es:[ecx-0x76fdfd00],ecx
  41e425:	test   esi,ebp
  41e427:	repnz sti 
  41e429:	dec    esi
  41e42b:	ficom  WORD PTR [esi+edi*8+0x59]
  41e42f:	repz push 0x0
  41e432:	imul   al
  41e434:	dec    ecx
  41e435:	inc    ecx
  41e436:	outs   dx,BYTE PTR ds:[esi]
  41e437:	fsubrp st(5),st
  41e439:	std    
  41e43a:	add    BYTE PTR [eax],al
  41e43c:	jns    0x41e431
  41e43e:	sub    eax,0xdc87e4d2
  41e443:	dec    ebp
  41e444:	outs   dx,DWORD PTR ds:[esi]
  41e445:	or     eax,0x483c0488
  41e44a:	jg     0x41e446
  41e44c:	push   ss
  41e44d:	jb     0x41e43c
  41e44f:	(bad)  
  41e450:	mov    ds:0xe9fffe6e,eax
  41e455:	or     al,0x0
  41e457:	add    BYTE PTR [esi],ch
  41e459:	fist   WORD PTR [ecx+ecx*4-0x52]
  41e45d:	test   BYTE PTR [ecx-0x40d478c],al
  41e463:	xor    esp,ebx
  41e465:	fidiv  WORD PTR [eax]
  41e467:	mov    esp,DWORD PTR [ebx+0x7a]
  41e46a:	(bad)  
  41e46b:	(bad)  
  41e46c:	jns    0x41e3f3
  41e46e:	cmp    DWORD PTR [eax+ebx*2-0xd],0x7a73fffb
  41e476:	(bad)  
  41e477:	(bad)  
  41e478:	jns    0x41e4f9
  41e47a:	mov    DWORD PTR [eax+edi*2-0xd],edi
  41e47e:	sti    
  41e47f:	(bad)  
  41e481:	push   es
  41e482:	jg     0x41e464
  41e484:	mov    DWORD PTR [esi-0x47],edi
  41e487:	jl     0x41e501
  41e489:	repz sti 
  41e48b:	wrmsr  
  41e48d:	xor    ebp,DWORD PTR ds:0xc60d26f8
  41e493:	add    ebp,DWORD PTR [esi+0x64834246]
  41e499:	push   cs
  41e49a:	jns    0x41e4a1
  41e49c:	inc    edi
  41e49d:	pusha  
  41e49e:	cmp    al,BYTE PTR [eax]
  41e4a0:	add    BYTE PTR [eax],al
  41e4a2:	adc    ch,BYTE PTR [edx]
  41e4a4:	push   ebx
  41e4a5:	push   esi
  41e4a6:	outs   dx,DWORD PTR ds:[esi]
  41e4a7:	jg     0x41e4a4
  41e4a9:	std    
  41e4aa:	js     0x41e50a
  41e4ac:	test   al,0x78
  41e4ae:	jno    0x41e4aa
  41e4b0:	sti    
  41e4b1:	add    bh,al
  41e4b3:	mov    dh,0x1
  41e4b5:	jae    0x41e45f
  41e4b7:	pop    esi
  41e4b8:	mov    ebp,0xfbd25978
  41e4bd:	add    dl,bl
  41e4bf:	jns    0x41e44e
  41e4c1:	add    edi,0xffffffc1
  41e4c4:	sti    
  41e4c5:	std    
  41e4c6:	xchg   edi,eax
  41e4c7:	(bad)  
  41e4c9:	sti    
  41e4ca:	cmp    BYTE PTR [eax+0x698c5e5b],dh
  41e4d0:	lock pop ebx
  41e4d2:	add    eax,0xce5301eb
  41e4d7:	jge    0x41e52d
  41e4d9:	push   eax
  41e4da:	je     0x41e514
  41e4dc:	xchg   DWORD PTR [ebx+0x3f],edx
  41e4df:	imul   ebx,DWORD PTR [ebp+0xc],0xffffffbc
  41e4e3:	adc    eax,0x7d0e2f14
  41e4e8:	or     BYTE PTR [edi],cl
  41e4ea:	iret   
  41e4eb:	es or  eax,0x12debdf8
  41e4f1:	mov    BYTE PTR [ebx-0x27],al
  41e4f4:	inc    edx
  41e4f5:	sbb    esi,0x74eb7dfa
  41e4fb:	mov    ah,0xe9
  41e4fd:	lods   al,BYTE PTR ds:[esi]
  41e4fe:	int    0x57
  41e500:	sti    
  41e501:	das    
  41e502:	cmc    
  41e503:	dec    ebp
  41e504:	adc    BYTE PTR [edx],bl
  41e506:	add    BYTE PTR [eax],al
  41e508:	int    0xde
  41e50a:	das    
  41e50b:	xor    al,BYTE PTR [esi+0x7a]
  41e50e:	add    DWORD PTR [edx-0x3c],eax
  41e511:	cmp    al,0xc
  41e513:	jl     0x41e4cc
  41e515:	icebp  
  41e516:	iret   
  41e517:	mov    cl,BYTE PTR [ebx]
  41e519:	or     esp,edi
  41e51b:	sti    
  41e51c:	iret   
  41e51d:	add    eax,0xf3c641d9
  41e522:	fistp  QWORD PTR [edi-0x6a]
  41e525:	dec    edi
  41e526:	mov    dl,0x8a
  41e528:	jae    0x41e578
  41e52a:	sub    DWORD PTR [eax],edx
  41e52c:	inc    edi
  41e52d:	or     edi,esp
  41e52f:	add    eax,DWORD PTR [edi+0x9]
  41e532:	out    0x3,eax
  41e534:	inc    edi
  41e535:	or     edi,esp
  41e537:	add    eax,DWORD PTR [edi+0x9]
  41e53a:	out    0x3,eax
  41e53c:	inc    edi
  41e53d:	or     edi,esp
  41e53f:	add    eax,DWORD PTR [edi+0x9]
  41e542:	out    0x3,eax
  41e544:	inc    edi
  41e545:	or     edi,esp
  41e547:	add    eax,DWORD PTR [edi+0x9]
  41e54a:	out    0x3,eax
  41e54c:	inc    edi
  41e54d:	or     edi,esp
  41e54f:	add    eax,DWORD PTR [edi+0x9]
  41e552:	out    0x3,eax
  41e554:	inc    edi
  41e555:	or     edi,esp
  41e557:	add    eax,DWORD PTR [edi+0x9]
  41e55a:	out    0x3,eax
  41e55c:	inc    edi
  41e55d:	or     edi,esp
  41e55f:	add    eax,DWORD PTR [edi+0x9]
  41e562:	out    0x3,eax
  41e564:	inc    edi
  41e565:	or     edi,esp
  41e567:	add    eax,DWORD PTR [edi+0x9]
  41e56a:	out    0x3,eax
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	inc    edi
  41e56f:	or     edi,esp
  41e571:	add    eax,DWORD PTR [edi+0x9]
  41e574:	out    0x3,eax
  41e576:	inc    edi
  41e577:	or     edi,esp
  41e579:	add    eax,DWORD PTR [edi+0x9]
  41e57c:	out    0x3,eax
  41e57e:	inc    edi
  41e57f:	or     edi,esp
  41e581:	add    eax,DWORD PTR [edi+0x9]
  41e584:	out    0x3,eax
  41e586:	inc    edi
  41e587:	or     edi,esp
  41e589:	add    eax,DWORD PTR [edi+0x9]
  41e58c:	out    0x3,eax
  41e58e:	inc    edi
  41e58f:	or     edi,esp
  41e591:	add    eax,DWORD PTR [edi+0x9]
  41e594:	add    cl,ch
  41e596:	inc    esp
  41e597:	or     DWORD PTR [eax],eax
  41e599:	jmp    0xe941eee2
  41e59e:	inc    esp
  41e59f:	or     DWORD PTR [eax],eax
  41e5a1:	jmp    0xe441eeea
  41e5a6:	ds add al,0xa
  41e5a9:	mov    BYTE PTR [edi*1+0x77248b67],dl
  41e5b0:	das    
  41e5b1:	iret   
  41e5b2:	xor    al,0x20
  41e5b4:	and    cl,cl
  41e5b6:	sbb    DWORD PTR [ecx],ebp
  41e5b8:	and    BYTE PTR [ebp-0x14],dh
  41e5bb:	imul   esp,DWORD PTR [eax],0x5a
  41e5be:	out    dx,al
  41e5bf:	dec    edi
  41e5c0:	ins    BYTE PTR es:[edi],dx
  41e5c1:	dec    ebp
  41e5c2:	out    0x7a,al
  41e5c4:	and    BYTE PTR [ebp-0x25],bl
  41e5c7:	imul   esp,DWORD PTR [eax],0x4b
  41e5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5cb:	jne    0x41e641
  41e5cd:	dec    esp
  41e5ce:	mov    cl,0x29
  41e5d0:	cmp    dl,BYTE PTR [eax]
  41e5d2:	add    BYTE PTR [eax],al
  41e5d4:	add    eax,DWORD PTR ds:[ecx+0x46]
  41e5d8:	mov    bl,0x76
  41e5da:	jb     0x41e61c
  41e5dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5dd:	popa   
  41e5de:	je     0x41e5a9
  41e5e0:	ins    BYTE PTR es:[edi],dx
  41e5e1:	push   0x365bc927
  41e5e6:	aaa    
  41e5e7:	rcr    DWORD PTR [edi+0x3b],1
  41e5ea:	xor    cl,bl
  41e5ec:	inc    ebx
  41e5ed:	sub    DWORD PTR [edx+0x0],esp
  41e5f0:	and    eax,DWORD PTR [ebx+0x6d]
  41e5f3:	add    al,0x79
  41e5f5:	arpl   WORD PTR fs:[edi],ax
  41e5f8:	and    eax,DWORD PTR [esi+0x62]
  41e5fb:	cli    
  41e5fc:	addr16 pop edi
  41e5fe:	sub    al,0x9
  41e600:	sbb    BYTE PTR [ebp+0x6c],0x9
  41e604:	jns    0x41e66c
  41e606:	rcr    DWORD PTR gs:[eax+0x78],0x20
  41e60b:	mov    ebx,0x637827
  41e610:	cld    
  41e611:	js     0x41e674
  41e613:	fs inc eax
  41e615:	add    BYTE PTR [edx],cl
  41e617:	or     eax,0x726b41a4
  41e61c:	mov    ebp,DWORD PTR [edx]
  41e61e:	outs   dx,BYTE PTR gs:[esi]
  41e620:	enter  0x7263,0x6d
  41e624:	mov    edi,0xc06f655e
  41e629:	sub    al,0x20
  41e62b:	push   0x3a705eda
  41e630:	xchg   ecx,eax
  41e631:	and    esi,DWORD PTR [ebx+0x77]
  41e634:	stc    
  41e635:	pop    ds
  41e636:	bound  eax,QWORD PTR gs:[eax]
  41e639:	add    ch,ch
  41e63b:	push   0x67e1736e
  41e640:	je     0x41e6b9
  41e642:	emms   
  41e644:	popa   
  41e645:	cs std 
  41e647:	popa   
  41e648:	imul   ebp,DWORD PTR [edi],0xa08fc63
  41e64e:	or     al,BYTE PTR cs:[eax]
  41e651:	add    BYTE PTR [esi],ch
  41e653:	or     al,BYTE PTR [eax]
  41e655:	add    BYTE PTR [esi],bl
  41e657:	or     al,BYTE PTR [eax]
  41e659:	add    BYTE PTR [esi],bl
  41e65b:	or     al,BYTE PTR [eax]
  41e65d:	add    BYTE PTR [esi],ch
  41e65f:	or     al,BYTE PTR [eax]
  41e661:	add    BYTE PTR [esi],ch
  41e663:	or     al,BYTE PTR [eax]
  41e665:	add    BYTE PTR [esi],bl
  41e667:	or     al,BYTE PTR [eax]
  41e669:	add    BYTE PTR [esi],bl
  41e66b:	or     al,BYTE PTR [eax]
  41e66d:	add    dh,ch
  41e66f:	or     DWORD PTR [eax],eax
  41e671:	add    dh,ch
  41e673:	or     DWORD PTR [eax],eax
  41e675:	add    dh,bl
  41e677:	or     DWORD PTR [eax],eax
  41e679:	add    dh,bl
  41e67b:	or     DWORD PTR [eax],eax
  41e67d:	add    dh,ch
  41e67f:	or     DWORD PTR [eax],eax
  41e681:	add    dh,ch
  41e683:	or     DWORD PTR [eax],eax
  41e685:	add    dh,bl
  41e687:	or     DWORD PTR [eax],eax
  41e689:	add    BYTE PTR [edi-0x6b],al
  41e68c:	mov    dl,0x4e
  41e68e:	sub    al,0x21
  41e690:	and    BYTE PTR [ebx],ch
  41e692:	inc    ebx
  41e693:	cs iret 
  41e695:	push   esp
  41e696:	mov    ds:0x5a62a30c,eax
  41e69b:	mov    DWORD PTR [eax-0x7fffff7],0x36080bec
  41e6a5:	pushf  
  41e6a6:	or     ch,BYTE PTR [eax-0x55]
  41e6a9:	mov    bh,0x7b
  41e6ab:	push   ecx
  41e6ac:	mov    ecx,0x470001df
  41e6b1:	loopne 0x41e6b4
  41e6b3:	add    BYTE PTR [edi-0x20],al
  41e6b6:	add    DWORD PTR [eax],eax
  41e6b8:	inc    edi
  41e6b9:	loopne 0x41e6bc
  41e6bb:	add    BYTE PTR [edi-0x20],al
  41e6be:	add    DWORD PTR [eax],eax
  41e6c0:	inc    edi
  41e6c1:	loopne 0x41e6c4
  41e6c3:	add    BYTE PTR [edi-0x20],al
  41e6c6:	add    DWORD PTR [eax],eax
  41e6c8:	inc    edi
  41e6c9:	loopne 0x41e6cc
  41e6cb:	add    BYTE PTR [edi-0x20],al
  41e6ce:	add    DWORD PTR [eax],eax
  41e6d0:	inc    edi
  41e6d1:	loop   0x41e6d4
  41e6d3:	add    BYTE PTR [edi-0x1e],al
  41e6d6:	add    DWORD PTR [eax],eax
  41e6d8:	inc    edi
  41e6d9:	loop   0x41e6dc
  41e6db:	add    BYTE PTR [edi-0x1e],al
  41e6de:	add    DWORD PTR [eax],eax
  41e6e0:	inc    edi
  41e6e1:	loop   0x41e6e4
  41e6e3:	add    BYTE PTR [edi-0x1e],al
  41e6e6:	add    DWORD PTR [eax],eax
  41e6e8:	inc    edi
  41e6e9:	loop   0x41e6ec
  41e6eb:	add    BYTE PTR [edi-0x1e],al
  41e6ee:	add    DWORD PTR [eax],eax
  41e6f0:	inc    edi
  41e6f1:	loop   0x41e6f4
  41e6f3:	add    BYTE PTR [edi-0x1e],al
  41e6f6:	add    DWORD PTR [eax],eax
  41e6f8:	inc    edi
  41e6f9:	loop   0x41e6fc
  41e6fb:	add    BYTE PTR [edi-0x1e],al
  41e6fe:	add    DWORD PTR [eax],eax
  41e700:	inc    edi
  41e701:	loop   0x41e704
  41e703:	add    BYTE PTR [eax],al
  41e705:	add    BYTE PTR [edi+0x9],al
  41e708:	out    0x3,eax
  41e70a:	inc    edi
  41e70b:	or     edi,esp
  41e70d:	add    eax,DWORD PTR [edi+0x9]
  41e710:	out    0x3,eax
  41e712:	inc    edi
  41e713:	or     edi,esp
  41e715:	add    eax,DWORD PTR [edi+0x9]
  41e718:	out    0x3,eax
  41e71a:	inc    edi
  41e71b:	or     edi,esp
  41e71d:	add    eax,DWORD PTR [edi+0x9]
  41e720:	out    0x3,eax
  41e722:	inc    edi
  41e723:	or     edi,esp
  41e725:	add    eax,DWORD PTR [edi+0x9]
  41e728:	out    0x3,eax
  41e72a:	inc    edi
  41e72b:	or     edi,esp
  41e72d:	add    eax,DWORD PTR [edi+0x9]
  41e730:	out    0x3,eax
  41e732:	inc    edi
  41e733:	or     edi,esp
  41e735:	add    eax,DWORD PTR [edi+0x9]
  41e738:	out    0x3,eax
  41e73a:	inc    edi
  41e73b:	or     edi,esp
  41e73d:	add    eax,DWORD PTR [edi+0x9]
  41e740:	out    0x3,eax
  41e742:	inc    edi
  41e743:	or     edi,esp
  41e745:	add    eax,DWORD PTR [edi+0x9]
  41e748:	out    0x3,eax
  41e74a:	inc    edi
  41e74b:	or     edi,esp
  41e74d:	add    eax,DWORD PTR [edi+0x9]
  41e750:	out    0x3,eax
  41e752:	inc    edi
  41e753:	or     edi,esp
  41e755:	add    eax,DWORD PTR [edi+0x9]
  41e758:	out    0x3,eax
  41e75a:	inc    edi
  41e75b:	or     edi,esp
  41e75d:	add    eax,DWORD PTR [edi+0x9]
  41e760:	out    0x3,eax
  41e762:	inc    edi
  41e763:	or     edi,esp
  41e765:	add    eax,DWORD PTR [edi+0x9]
  41e768:	out    0x3,eax
  41e76a:	add    BYTE PTR [eax],al
  41e76c:	inc    edi
  41e76d:	or     edi,esp
  41e76f:	add    eax,DWORD PTR [edi+0x9]
  41e772:	out    0x3,eax
  41e774:	inc    edi
  41e775:	or     edi,esp
  41e777:	add    eax,DWORD PTR [edi+0x9]
  41e77a:	out    0x3,eax
  41e77c:	inc    edi
  41e77d:	or     edi,esp
  41e77f:	add    eax,DWORD PTR [edi+0x9]
  41e782:	add    cl,ch
  41e784:	inc    esp
  41e785:	or     DWORD PTR [eax],eax
  41e787:	jmp    0xe941f0d0
  41e78c:	inc    esp
  41e78d:	or     DWORD PTR [eax],eax
  41e78f:	jmp    0xe941f0d8
  41e794:	inc    esp
  41e795:	or     DWORD PTR [eax],eax
  41e797:	jmp    0xe941f0e0
  41e79c:	inc    esp
  41e79d:	or     DWORD PTR [eax],eax
  41e79f:	jmp    0xe941f0e8
  41e7a4:	inc    esp
  41e7a5:	or     DWORD PTR [eax],eax
  41e7a7:	jmp    0xe941f0f0
  41e7ac:	inc    esp
  41e7ad:	or     DWORD PTR [eax],eax
  41e7af:	jmp    0xd841f0f8
  41e7b4:	cmp    bh,BYTE PTR [edx]
  41e7b6:	xor    al,0xd4
  41e7b8:	or     DWORD PTR ss:[eax-0x78],esi
  41e7bc:	sti    
  41e7bd:	jns    0x41e834
  41e7bf:	mov    ?,edx
  41e7c1:	add    BYTE PTR fs:[ecx-0x14],bh
  41e7c5:	js     0x41e829
  41e7c7:	mov    eax,DWORD PTR [esp+ebx*2+0x75]
  41e7cb:	dec    esp
  41e7cc:	aad    0x74
  41e7ce:	ja     0x41e7b9
  41e7d0:	add    BYTE PTR [eax],al
  41e7d2:	adc    esi,DWORD PTR [edi]
  41e7d4:	xor    DWORD PTR ds:0x446a0976,ebx
  41e7da:	mov    ah,0x76
  41e7dc:	jno    0x41e7c7
  41e7de:	jnp    0x41e817
  41e7e0:	xor    ebp,esi
  41e7e2:	ja     0x41e817
  41e7e4:	xor    eax,0x321a44f1
  41e7e9:	cli    
  41e7ea:	push   0xa40b5f09
  41e7ef:	sbb    dh,BYTE PTR [edx]
  41e7f1:	fiadd  DWORD PTR [ebp+ebx*2+0x63]
  41e7f5:	sbb    eax,0xff67666e
  41e7fa:	inc    esp
  41e7fb:	jne    0x41e860
  41e7fd:	add    ch,ch
  41e7ff:	pop    edx
  41e800:	add    BYTE PTR [ecx+edi*1+0x5b],ch
  41e804:	popa   
  41e805:	add    BYTE PTR [edi-0x21ffd0c8],bl
  41e80b:	outs   dx,DWORD PTR gs:[esi]
  41e80d:	jae    0x41e800
  41e80f:	arpl   WORD PTR [edx+0x64],si
  41e812:	das    
  41e813:	add    eax,0x628a6568
  41e818:	imul   eax,DWORD PTR [eax],0xfffffffb
  41e81b:	arpl   WORD PTR [esi+0x6b],bp
  41e81e:	sub    DWORD PTR [ebp+0x0],0x64
  41e822:	in     al,dx
  41e823:	arpl   WORD PTR gs:[edi-0x78],bp
  41e827:	push   es
  41e828:	je     0x41e89c
  41e82a:	shl    DWORD PTR [edi+0x74],cl
  41e82d:	outs   dx,BYTE PTR ds:[esi]
  41e82e:	mov    ecx,0x6f310035
  41e833:	xor    eax,0x312d
  41e838:	lahf   
  41e839:	push   es
  41e83a:	gs ins BYTE PTR es:[edi],dx
  41e83c:	stc    
  41e83d:	pop    ebx
  41e83e:	popa   
  41e83f:	jns    0x41e81a
  41e841:	jns    0x41e843
  41e843:	xor    DWORD PTR [edi+esi*1+0x1ba03534],ebp
  41e84a:	add    BYTE PTR [ebx-0x3a],dh
  41e84d:	gs outs dx,DWORD PTR fs:[esi]
  41e850:	icebp  
  41e851:	add    al,0x2d
  41e853:	xor    ch,BYTE PTR ds:0x61363139
  41e859:	sub    eax,0x5d8d0035
  41e85e:	jb     0x41e8c9
  41e860:	ins    DWORD PTR es:[edi],dx
  41e861:	jns    0x41e863
  41e863:	jae    0x41e8d8
  41e865:	arpl   WORD PTR [edi+0x68],bp
  41e868:	xchg   DWORD PTR [ebx+0x61],esp
  41e86b:	add    BYTE PTR [ebx+0x64],bl
  41e86e:	outs   dx,DWORD PTR ds:[esi]
  41e86f:	je     0x41e8b4
  41e871:	ja     0x41e873
  41e873:	arpl   WORD PTR [ecx],di
  41e875:	pusha  
  41e876:	jo     0x41e8ed
  41e878:	inc    edi
  41e879:	or     al,0x5f
  41e87b:	jb     0x41e8c4
  41e87d:	adc    BYTE PTR [edx+0x67],dh
  41e880:	popa   
  41e881:	call   FWORD PTR [esi+0x71]
  41e884:	je     0x41e866
  41e886:	ins    DWORD PTR es:[edi],dx
  41e887:	addr16 push 0x47725efb
  41e88d:	add    ah,BYTE PTR [ebp+0x6d]
  41e890:	pop    ebx
  41e891:	mov    esi,0xe05b6c64
  41e896:	outs   dx,BYTE PTR fs:[esi]
  41e898:	sub    BYTE PTR [ebp+0x65],bh
  41e89e:	sub    eax,0x347372c5
  41e8a3:	icebp  
  41e8a4:	add    DWORD PTR [edi],ebp
  41e8a6:	jne    0x41e897
  41e8a8:	xor    al,0x32
  41e8aa:	push   esp
  41e8ab:	loopne 0x41e91b
  41e8ad:	push   0x7660b426
  41e8b2:	sub    cl,BYTE PTR [esi-0x7aea99ff]
  41e8b8:	pusha  
  41e8b9:	lock test BYTE PTR fs:[ecx],al
  41e8bd:	imul   ebp,esi,0xf563656b
  41e8c3:	fbld   TBYTE PTR [ecx+esi*2-0x1d]
  41e8c7:	add    DWORD PTR [ecx],0x627ef071
  41e8cd:	arpl   bp,dx
  41e8cf:	fbstp  TBYTE PTR [edx+0x73]
  41e8d2:	xlat   BYTE PTR ds:[ebx]
  41e8d3:	cmp    al,0x72
  41e8d5:	imul   esp,esi,0x39
  41e8d8:	add    al,0x6b
  41e8da:	scas   al,BYTE PTR es:[edi]
  41e8db:	push   ebx
  41e8dc:	ins    BYTE PTR es:[edi],dx
  41e8dd:	pop    edi
  41e8de:	mov    ds:0x9f610426,al
  41e8e3:	push   ebp
  41e8e4:	pop    ebp
  41e8e5:	jno    0x41e889
  41e8e7:	repnz push 0x6e
  41e8ea:	fwait
  41e8eb:	push   ebp
  41e8ec:	jb     0x41e95c
  41e8ee:	mov    ds:0xa06a041e,al
  41e8f3:	or     DWORD PTR [edx],ebx
  41e8f5:	ins    BYTE PTR es:[edi],dx
  41e8f6:	xchg   esp,eax
  41e8f7:	push   0xffffffe7
  41e8f9:	pop    ebp
  41e8fa:	je     0x41e968
  41e8fc:	add    bh,BYTE PTR [ebx+0x6a]
  41e8ff:	pop    esi
  41e900:	out    0x61,eax
  41e902:	add    BYTE PTR [eax],al
  41e904:	arpl   WORD PTR [esi-0x6],bp
  41e907:	jo     0x41e96d
  41e909:	ins    DWORD PTR es:[edi],dx
  41e90a:	out    0x61,eax
  41e90c:	sbb    BYTE PTR [esp+ecx*1+0x62],0x78
  41e911:	jne    0x41e90e
  41e913:	add    edx,DWORD PTR [esi+0x5d]
  41e916:	enter  0x5271,0x6a
  41e91a:	fnstenv [eax+0x47]
  41e91d:	sbb    DWORD PTR [edi],edx
  41e91f:	xor    al,0x77
  41e921:	sbb    DWORD PTR [edi],edx
  41e923:	add    al,0x37
  41e925:	pop    esi
  41e926:	mov    ecx,0xe76e1b73
  41e92b:	imul   esi,DWORD PTR [edx],0x2962cb5b
  41e931:	or     ebp,eax
  41e933:	bound  ebp,QWORD PTR [eax]
  41e935:	pop    ebp
  41e936:	pop    DWORD PTR [ebx]
  41e938:	push   ss
  41e939:	pop    esi
  41e93a:	mov    WORD PTR [esi-0x1c],fs
  41e93d:	pop    edx
  41e93e:	out    0x62,eax
  41e940:	div    BYTE PTR [eax+0x7b]
  41e943:	pop    esi
  41e944:	clc    
  41e945:	or     BYTE PTR [ecx-0x7ba30992],cl
  41e94b:	jno    0x41e994
  41e94d:	jno    0x41e8db
  41e94f:	(bad)
  41e954:	xlat   BYTE PTR ds:[ebx]
  41e955:	ins    DWORD PTR es:[edi],dx
  41e956:	push   edi
  41e957:	je     0x41e93d
  41e959:	pop    edx
  41e95a:	out    0x2c,eax
  41e95c:	jp     0x41e97e
  41e95e:	push   ds
  41e95f:	sub    eax,0x6be72072
  41e964:	mov    ah,0x77
  41e966:	cmp    ebx,DWORD PTR [edi+0x0]
  41e969:	add    BYTE PTR [ebp-0x669ab4f7],dh
  41e96f:	outs   dx,BYTE PTR ds:[esi]
  41e970:	add    BYTE PTR [ebp-0x64],al
  41e973:	or     DWORD PTR [edi+0x3f],ebx
  41e976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e977:	pop    ebx
  41e978:	arpl   WORD PTR [esi],bx
  41e97a:	inc    ebx
  41e97b:	pop    ebp
  41e97c:	push   0x7148680e
  41e981:	jmp    0x4a760eb
  41e986:	pop    edi
  41e987:	pop    edx
  41e988:	add    BYTE PTR [edx],cl
  41e98a:	pop    ebx
  41e98b:	dec    eax
  41e98c:	jb     0x41e99b
  41e98e:	ins    BYTE PTR es:[edi],dx
  41e98f:	ins    BYTE PTR es:[edi],dx
  41e990:	add    BYTE PTR ds:0x4677764,cl
  41e996:	pop    edi
  41e997:	or     DWORD PTR [edi],ebp
  41e999:	sbb    BYTE PTR [eax+edi*1],dl
  41e99c:	add    bl,dl
  41e99e:	and    DWORD PTR [edi+0x6e],esi
  41e9a1:	rcr    BYTE PTR [edx],0x6c
  41e9a4:	jb     0x41e98f
  41e9a6:	aaa    
  41e9a7:	jo     0x41ea17
  41e9a9:	into   
  41e9aa:	and    BYTE PTR [eax+eax*1-0x2f],ch
  41e9ae:	and    eax,0x2cc86e77
  41e9b3:	or     DWORD PTR [edi-0x38],ebp
  41e9b6:	push   cs
  41e9b7:	pop    esi
  41e9b8:	jno    0x41e95b
  41e9ba:	inc    esp
  41e9bb:	jno    0x41ea1c
  41e9bd:	cdq    
  41e9be:	hlt    
  41e9bf:	pop    edi
  41e9c0:	add    BYTE PTR [ebp+eiz*8-0x137f8da4],al
  41e9c7:	or     BYTE PTR [eax-0x78],dh
  41e9ca:	neg    DWORD PTR [ecx+0x0]
  41e9cd:	mov    BYTE PTR [eax],al
  41e9cf:	add    ch,ah
  41e9d1:	inc    edi
  41e9d2:	pop    edi
  41e9d3:	mov    ch,ah
  41e9d5:	or     BYTE PTR [esi],dh
  41e9d7:	mov    ah,0x20
  41e9d9:	sbb    dh,BYTE PTR [edx]
  41e9db:	sbb    BYTE PTR [ebx+0x48],al
  41e9de:	imul   ecx,DWORD PTR [eax-0x5b],0x6d
  41e9e2:	pop    edi
  41e9e3:	jmp    0x41b65e8e
  41e9e8:	xchg   edx,eax
  41e9e9:	ja     0x41ea50
  41e9eb:	add    BYTE PTR [esi],bl
  41e9ed:	je     0x41ea54
  41e9ef:	outs   dx,BYTE PTR ds:[esi]
  41e9f0:	mov    DWORD PTR [eax+0x72],esi
  41e9f3:	add    BYTE PTR [ebx-0x74978b96],al
  41e9f9:	pop    edi
  41e9fa:	add    BYTE PTR [ebx+0x30],dh
  41e9fd:	push   0x6b
  41e9ff:	jo     0x41ea28
  41ea01:	or     eax,0x5e5d656a
  41ea06:	arpl   WORD PTR gs:[edi],di
  41ea09:	or     eax,0x6e526573
  41ea0e:	imul   ebp,DWORD PTR [ebp+0x4b],0xd
  41ea12:	jo     0x41ea83
  41ea14:	inc    ebp
  41ea15:	jo     0x41ea80
  41ea17:	outs   dx,DWORD PTR ds:[esi]
  41ea18:	ror    BYTE PTR [edx],1
  41ea1a:	gs ins BYTE PTR es:[edi],dx
  41ea1c:	icebp  
  41ea1d:	pusha  
  41ea1e:	popa   
  41ea1f:	jns    0x41e9b2
  41ea21:	popa   
  41ea22:	sub    eax,0x2d1c5f00
  41ea27:	xor    DWORD PTR [edi+0xd],ecx
  41ea2a:	imul   esi,DWORD PTR [ebp-0x13],0x896e5d5e
  41ea31:	or     ch,BYTE PTR [eax+0x65]
  41ea34:	add    BYTE PTR [eax],al
  41ea36:	sbb    BYTE PTR [edx+0x69],0x65
  41ea3a:	sahf   
  41ea3b:	inc    esp
  41ea3c:	jno    0x41eab1
  41ea3e:	stos   BYTE PTR es:[edi],al
  41ea3f:	inc    ebp
  41ea40:	outs   dx,BYTE PTR ds:[esi]
  41ea41:	add    ah,dl
  41ea43:	ins    DWORD PTR es:[edi],dx
  41ea44:	outs   dx,DWORD PTR ds:[esi]
  41ea45:	ins    DWORD PTR es:[edi],dx
  41ea46:	(bad)  
  41ea47:	push   0x5bf10061
  41ea4c:	pop    ebp
  41ea4d:	outs   dx,BYTE PTR ds:[esi]
  41ea4e:	mov    ecx,0xcb740071
  41ea53:	pop    edi
  41ea54:	je     0x41eabf
  41ea56:	shl    BYTE PTR [ebx+0x0],0x61
  41ea5a:	into   
  41ea5b:	pop    ecx
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	gs pop esi
  41ea5f:	imul   esp,DWORD PTR [ebp+0x63],0x6c6c7096
  41ea66:	inc    edi
  41ea67:	push   ebp
  41ea68:	add    al,0x70
  41ea6a:	stos   BYTE PTR es:[edi],al
  41ea6b:	push   ecx
  41ea6c:	arpl   WORD PTR gs:[edi+0x23],ax
  41ea70:	addr16 popa 
  41ea72:	xchg   ebp,eax
  41ea73:	dec    ebp
  41ea74:	js     0x41ea76
  41ea76:	push   esi
  41ea77:	lock push 0x72
  41ea7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea7b:	push   ebx
  41ea7c:	add    BYTE PTR [bx+si+0x5ff9],dl
  41ea81:	ins    BYTE PTR es:[edi],dx
  41ea82:	outs   dx,BYTE PTR ds:[esi]
  41ea83:	adc    DWORD PTR [edi+0x0],ebx
  41ea86:	outs   dx,BYTE PTR ds:[esi]
  41ea87:	or     al,0x61
  41ea89:	jbe    0x41eaf5
  41ea8b:	stc    
  41ea8c:	pusha  
  41ea8d:	jae    0x41eac4
  41ea8f:	lock pop edi
  41ea91:	addr16 fs pop ss
  41ea94:	pusha  
  41ea95:	arpl   WORD PTR [edi-0x5a],ax
  41ea98:	aaa    
  41ea99:	add    BYTE PTR ss:[eax],al
  41ea9c:	sbb    DWORD PTR [esi-0x3aa5ffc9],ebx
  41eaa2:	addr16 data16 cs (bad) 
  41eaa6:	add    DWORD PTR [ebp+0x26],esp
  41eaa9:	les    ebp,FWORD PTR [eax+0x75]
  41eaac:	es mov ecx,0xd3326601
  41eab2:	pop    esi
  41eab3:	ja     0x41eae5
  41eab5:	popf   
  41eab6:	xor    al,0x0
  41eab8:	mov    es:0xa4206876,eax
  41eabe:	push   0x59911f00
  41eac3:	pop    edi
  41eac4:	out    dx,eax
  41eac5:	nop
  41eac6:	add    DWORD PTR [eax-0x18],esi
  41eac9:	mov    ?,WORD PTR [ecx+0x0]
  41eacc:	in     eax,0x63
  41eace:	push   0x5f78f471
  41ead3:	gs inc edi
  41ead5:	xchg   edx,eax
  41ead6:	pop    ebp
  41ead7:	pop    edi
  41ead8:	out    dx,eax
  41ead9:	xchg   ecx,eax
  41eada:	pop    ebp
  41eadb:	pop    edi
  41eadc:	fucomip st,st(7)
  41eade:	pusha  
  41eadf:	ja     0x41eab5
  41eae1:	or     BYTE PTR [edi+0x63],dl
  41eae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae5:	outs   dx,BYTE PTR ds:[esi]
  41eae6:	sbb    BYTE PTR [esp+ebp*4],al
  41eae9:	push   0x5b
  41eaeb:	js     0x41ea8c
  41eaed:	outs   dx,BYTE PTR ds:[esi]
  41eaee:	push   esi
  41eaef:	add    al,0xa6
  41eaf1:	push   0x55
  41eaf3:	arpl   WORD PTR [ebx-0x5f8b1896],bp
  41eaf9:	jne    0x41eb38
  41eafb:	addr16 xchg ebp,eax
  41eafd:	or     DWORD PTR [ecx],edi
  41eaff:	popa   
  41eb00:	add    BYTE PTR [eax],al
  41eb02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb03:	outs   dx,BYTE PTR ds:[esi]
  41eb04:	sbb    DWORD PTR [eax+0x47],edi
  41eb07:	imul   ecx,DWORD PTR [esi],0x76
  41eb0a:	fs pop ebx
  41eb0c:	or     al,0x76
  41eb0e:	inc    edi
  41eb0f:	push   0x1a
  41eb11:	push   0x40f6c61
  41eb16:	push   ebp
  41eb17:	push   0xa
  41eb19:	pop    esp
  41eb1a:	fs jne 0x41eb04
  41eb1d:	jne    0x41eb8f
  41eb1f:	jb     0x41eb1e
  41eb21:	gs pop edx
  41eb23:	pop    esp
  41eb24:	out    0x68,eax
  41eb26:	xor    al,0x72
  41eb28:	shl    DWORD PTR [edx+0x35],cl
  41eb2b:	or     edi,edx
  41eb2d:	data16 adc BYTE PTR [ebx-0x2c],dh
  41eb31:	ja     0x41eb7a
  41eb33:	addr16 enter 0x2c77,0x6a
  41eb38:	int    0x3
  41eb3a:	es je  0x41eb03
  41eb3d:	pop    esp
  41eb3e:	sub    BYTE PTR [esi-0x19],ch
  41eb41:	gs call 0xf8a87eb8
  41eb47:	or     BYTE PTR [edx-0x739819a0],bl
  41eb4d:	jne    0x41eb6f
  41eb4f:	or     DWORD PTR [edx+ebx*2-0x1a],edi
  41eb53:	outs   dx,DWORD PTR ds:[esi]
  41eb54:	mov    WORD PTR [edx+0x47],gs
  41eb57:	addr16 nop
  41eb59:	ja     0x41eb3f
  41eb5b:	jne    0x41eb5d
  41eb5d:	mov    WORD PTR [ecx+esi*2+0x63],es
  41eb61:	jge    0x41eb4b
  41eb63:	jne    0x41eb94
  41eb65:	jmp    0x70eaeb6a
  41eb6a:	addr16 dec edi
  41eb6c:	mov    al,ds:0xa44d0070
  41eb71:	jb     0x41ebe0
  41eb73:	push   ebp
  41eb74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb75:	or     DWORD PTR [ecx+0x48],esi
  41eb78:	add    BYTE PTR [esi+ebp*2+0x35],0x7b
  41eb7d:	inc    esp
  41eb7e:	add    BYTE PTR [edx-0x5a],cl
  41eb81:	jo     0x41ebf3
  41eb83:	dec    eax
  41eb84:	xchg   esp,eax
  41eb85:	or     DWORD PTR [eax+edx*1+0x64],esp
  41eb89:	jo     0x41ebf8
  41eb8b:	movq   mm1,QWORD PTR [ecx]
  41eb8e:	je     0x41eb98
  41eb90:	pop    esp
  41eb91:	jne    0x41ec00
  41eb93:	sbb    eax,DWORD PTR [ebx+0x6b]
  41eb96:	ins    DWORD PTR es:[edi],dx
  41eb97:	sti    
  41eb98:	pop    ecx
  41eb99:	jo     0x41eb9b
  41eb9b:	adc    esp,DWORD PTR [esi+0x71]
  41eb9e:	outs   dx,BYTE PTR ds:[esi]
  41eb9f:	mov    edx,0xfb001b15
  41eba4:	ins    DWORD PTR es:[edi],dx
  41eba5:	push   0x68
  41eba7:	enter  0x6d3a,0x0
  41ebab:	retf   
  41ebac:	sbb    BYTE PTR [esi+ebp*2-0x3e],ch
  41ebb0:	jne    0x41ebd3
  41ebb2:	xor    ch,cl
  41ebb4:	xor    al,0x68
  41ebb6:	pop    edi
  41ebb7:	retf   0x67fc
  41ebba:	jno    0x41eba5
  41ebbc:	and    esi,DWORD PTR [esi+0x6d]
  41ebbf:	lds    eax,FWORD PTR [ebx+ebp*2+0x6c]
  41ebc3:	mov    esi,0xe972680f
  41ebc8:	sti    
  41ebc9:	imul   ebp,DWORD PTR [ebp-0x72],0x67f00000
  41ebd0:	jb     0x41ebbb
  41ebd2:	jmp    0x43:0xe6886e43
  41ebd9:	add    BYTE PTR [esi+eiz*2+0x7dd6569],dh
  41ebe0:	pop    ebp
  41ebe1:	jae    0x41eba5
  41ebe3:	jno    0x41ec42
  41ebe5:	jae    0x41eba9
  41ebe7:	jno    0x41ebe9
  41ebe9:	jbe    0x41eb82
  41ebeb:	data16 je 0x41ec5d
  41ebee:	pushf  
  41ebef:	je     0x41ebf1
  41ebf1:	ins    BYTE PTR es:[edi],dx
  41ebf2:	mov    DWORD PTR [ebx+0x64],eax
  41ebf5:	outs   dx,DWORD PTR ds:[esi]
  41ebf6:	push   0x1d322d0d
  41ebfb:	pop    esi
  41ebfc:	jae    0x41ec63
  41ebfe:	cs push ds
  41ec00:	xor    dh,BYTE PTR [ebx]
  41ec02:	or     eax,0x4d002d19
  41ec07:	popa   
  41ec08:	pop    ebp
  41ec09:	jb     0x41ec6d
  41ec0b:	push   edi
  41ec0c:	popa   
  41ec0d:	imul   ebp,esi,0x6b
  41ec10:	popa   
  41ec11:	outs   dx,DWORD PTR ds:[esi]
  41ec12:	dec    esp
  41ec13:	push   0x61
  41ec15:	add    BYTE PTR [ecx+0x44],dl
  41ec18:	outs   dx,BYTE PTR ds:[esi]
  41ec19:	outs   dx,BYTE PTR ds:[esi]
  41ec1a:	push   ebx
  41ec1b:	push   edi
  41ec1c:	add    BYTE PTR [ebp+0x4f],ch
  41ec1f:	push   0x63
  41ec21:	imul   eax,DWORD PTR [ebx+0xd],0x43477274
  41ec28:	gs je  0x41ebd2
  41ec2b:	push   es
  41ec2c:	imul   ebp,DWORD PTR [esi-0x76],0x45
  41ec30:	outs   dx,BYTE PTR ds:[esi]
  41ec31:	add    BYTE PTR gs:[eax],al
  41ec34:	sahf   
  41ec35:	sbb    eax,0x687f3332
  41ec3a:	pop    edi
  41ec3b:	add    BYTE PTR [ebp+0x7563653e],cl
  41ec41:	jno    0x41ecb1
  41ec43:	add    BYTE PTR [ecx+eiz*2+0x58c9696e],al
  41ec4a:	add    BYTE PTR [ebx-0x2a],ah
  41ec4d:	pop    eax
  41ec4e:	gs jae 0x41ecbf
  41ec51:	push   esi
  41ec52:	pop    ebp
  41ec53:	jae    0x41ec9c
  41ec55:	jg     0x41eccd
  41ec57:	xor    ch,dh
  41ec59:	mov    eax,DWORD PTR [ecx]
  41ec5b:	pop    edi
  41ec5c:	ficomp DWORD PTR [esi+0x75]
  41ec5f:	addr16 jmp 0xe6b25f54
  41ec65:	pop    ebp
  41ec66:	pop    edx
  41ec67:	ja     0x41ecb0
  41ec69:	xchg   ecx,eax
  41ec6a:	imul   ebp,DWORD PTR gs:[esi-0x5d94fbc6],0x3e
  41ec72:	pusha  
  41ec73:	addr16 mov eax,ds:0x66f0
  41ec77:	ins    DWORD PTR es:[edi],dx
  41ec78:	cwde   
  41ec79:	dec    ebx
  41ec7a:	pusha  
  41ec7b:	arpl   WORD PTR [edi+0x52],ax
  41ec7e:	jb     0x41ece7
  41ec80:	mov    ds:0x47716852,al
  41ec85:	dec    eax
  41ec86:	pop    ebp
  41ec87:	jo     0x41ec2b
  41ec89:	lock jb 0x41ecf4
  41ec8c:	data16 cld 
  41ec8e:	pop    esp
  41ec8f:	imul   eax,DWORD PTR [edi+0x12],0x5b
  41ec93:	outs   dx,BYTE PTR ds:[esi]
  41ec94:	jnp    0x41ecab
  41ec96:	pop    esi
  41ec97:	add    BYTE PTR fs:[eax],al
  41ec9a:	pop    eax
  41ec9b:	lock pop ebp
  41ec9d:	ins    DWORD PTR es:[edi],dx
  41ec9e:	jo     0x41ec97
  41eca0:	pop    edx
  41eca1:	outs   dx,BYTE PTR ds:[esi]
  41eca2:	pusha  
  41eca3:	lock pop ecx
  41eca5:	pop    edi
  41eca6:	push   ebp
  41eca7:	or     al,0x67
  41eca9:	ja     0x41ecf2
  41ecab:	fbld   TBYTE PTR [eax+0x6d]
  41ecae:	sub    al,0xd5
  41ecb0:	ins    BYTE PTR es:[edi],dx
  41ecb1:	add    BYTE PTR [eax-0x5],dh
  41ecb4:	xor    al,0x35
  41ecb6:	inc    edi
  41ecb7:	(bad)  
  41ecb8:	pop    esi
  41ecb9:	jno    0x41ecdd
  41ecbb:	rcr    BYTE PTR [ecx+0x0],0x33
  41ecbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc0:	bound  ebp,QWORD PTR [ecx+0x1e]
  41ecc3:	lock gs addr16 sub cl,cl
  41ecc8:	jne    0x41ed29
  41ecca:	sbb    esi,eax
  41eccc:	fs add bl,bh
  41eccf:	or     BYTE PTR [edi-0x7b931688],cl
  41ecd5:	jno    0x41ed1e
  41ecd7:	push   esi
  41ecd8:	xchg   edi,eax
  41ecd9:	pop    esp
  41ecda:	cmc    
  41ecdb:	outs   dx,DWORD PTR ds:[esi]
  41ecdc:	xchg   ebx,eax
  41ecdd:	add    esp,ebp
  41ecdf:	addr16 xchg ebp,eax
  41ece1:	addr16 loopne 0x41ed40
  41ece4:	out    0x68,eax
  41ece6:	loope  0x41ed44
  41ece8:	mov    WORD PTR [ecx+0x47],?
  41eceb:	push   0x70af777d
  41ecf0:	push   ebp
  41ecf1:	imul   eax,DWORD PTR [edi+0x6c],0x4e
  41ecf5:	jb     0x41ecb0
  41ecf7:	pop    bx
  41ecf9:	js     0x41ec9f
  41ecfb:	or     DWORD PTR [edi],edi
  41ecfd:	pop    ebp
  41ecfe:	add    BYTE PTR [eax],al
  41ed00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed01:	je     0x41ed4f
  41ed03:	imul   eax,DWORD PTR [edi+0x59],0x4e
  41ed07:	jne    0x41ecad
  41ed09:	pop    ebx
  41ed0a:	out    0x61,eax
  41ed0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed0d:	outs   dx,DWORD PTR ds:[esi]
  41ed0e:	inc    ecx
  41ed0f:	arpl   WORD PTR [edx+esi*2+0x15],bp
  41ed13:	add    al,0x60
  41ed15:	ins    DWORD PTR es:[edi],dx
  41ed16:	push   cs
  41ed17:	jbe    0x41ed7d
  41ed19:	bound  eax,QWORD PTR [esi]
  41ed1b:	ja     0x41ed65
  41ed1d:	or     eax,ebx
  41ed1f:	jb     0x41ed36
  41ed21:	pop    eax
  41ed22:	mov    edx,0x10574766
  41ed27:	je     0x41ed8d
  41ed29:	pop    ebx
  41ed2a:	out    0x64,eax
  41ed2c:	outs   dx,DWORD PTR fs:[esi]
  41ed2e:	add    al,0x71
  41ed30:	sub    BYTE PTR [edi+eiz*8+0x58],bl
  41ed34:	sub    DWORD PTR [edx-0x3a],esi
  41ed37:	pop    ebx
  41ed38:	cmp    ecx,DWORD PTR [ecx]
  41ed3a:	fdiv   DWORD PTR [esp+0x5b]
  41ed3e:	shr    DWORD PTR [edx+0x70],cl
  41ed41:	or     edx,ecx
  41ed43:	jno    0x41ed69
  41ed45:	push   0xffffffb3
  41ed47:	pop    edx
  41ed48:	sbb    DWORD PTR [esi+0x0],esp
  41ed4b:	jmp    0xcbaf5b72
  41ed50:	in     eax,0x5a
  41ed52:	add    BYTE PTR [eax-0x779b9820],cl
  41ed58:	test   DWORD PTR [eax],0x67f08672
  41ed5e:	imul   eax,DWORD PTR [eax-0x7793a5bc],0x0
  41ed65:	add    ch,ch
  41ed67:	imul   esi,DWORD PTR [edx-0x17],0xffffffdb
  41ed6b:	addr16 jno 0x41ecfb
  41ed6e:	jmp    0x41ede3
  41ed70:	add    BYTE PTR [ecx-0x4a],bh
  41ed73:	inc    eax
  41ed74:	addr16 pop edx
  41ed76:	mov    al,ds:0xa6617a09
  41ed7b:	push   edi
  41ed7c:	bound  eax,QWORD PTR [edi-0x78]
  41ed7f:	or     DWORD PTR [ecx+0x48],esi
  41ed82:	sbb    BYTE PTR [ebx+eiz*2+0x55],0x43
  41ed87:	je     0x41edf0
  41ed89:	push   edx
  41ed8a:	test   al,0x9
  41ed8c:	fs dec eax
  41ed8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed8f:	ins    DWORD PTR es:[edi],dx
  41ed90:	pop    edi
  41ed91:	cmp    cl,BYTE PTR [ebx+0x66]
  41ed94:	jb     0x41eda2
  41ed96:	pusha  
  41ed97:	outs   dx,DWORD PTR ds:[esi]
  41ed98:	add    BYTE PTR ds:0x1d745a68,dl
  41ed9e:	pusha  
  41ed9f:	pop    edx
  41eda0:	je     0x41ed8b
  41eda2:	add    DWORD PTR [eax+0x76],0x6168550c
  41eda9:	adc    cl,BYTE PTR [ebx+0x6e]
  41edac:	outs   dx,BYTE PTR ds:[esi]
  41edad:	or     al,0x67
  41edaf:	outs   dx,BYTE PTR ds:[esi]
  41edb0:	jbe    0x41edb6
  41edb2:	dec    ebx
  41edb3:	gs pop edi
  41edb5:	fistp  WORD PTR ds:0x1dcc0065
  41edbb:	ins    DWORD PTR es:[edi],dx
  41edbc:	ins    DWORD PTR es:[edi],dx
  41edbd:	fbld   TBYTE PTR [ecx]
  41edbf:	or     DWORD PTR [ecx-0x3f],esp
  41edc2:	sbb    DWORD PTR [ebx+0x61],ebx
  41edc5:	add    BYTE PTR [esi+0xb],dh
  41edc8:	data16 jb 0x41edcb
  41edcb:	add    BYTE PTR [edi+0x66],dh
  41edce:	outs   dx,BYTE PTR ds:[esi]
  41edcf:	fs sahf 
  41edd1:	imul   esp,DWORD PTR fs:[esi+ebp*2+0x67],0x61
  41edd7:	jae    0x41edb3
  41edd9:	inc    edx
  41edda:	outs   dx,BYTE PTR ds:[esi]
  41eddb:	jns    0x41ee3b
  41eddd:	cmp    eax,0xbbb6e6b
  41ede2:	imul   ebp,DWORD PTR [ecx-0x33],0xb1736b59
  41ede9:	gs je  0x41edec
  41edec:	mov    WORD PTR [ecx],ds
  41edee:	xor    dh,BYTE PTR [edx]
  41edf0:	mov    WORD PTR [ecx],ds
  41edf2:	add    BYTE PTR [edx-0x45],ah
  41edf5:	push   0x568b6c62
  41edfa:	add    BYTE PTR [ecx],dh
  41edfc:	dec    edi
  41edfd:	adc    al,0x2d
  41edff:	xor    DWORD PTR [edi+0x14],ecx
  41ee02:	sub    eax,0x5f428d00
  41ee07:	popa   
  41ee08:	lea    eax,[edx+0x6c]
  41ee0b:	popa   
  41ee0c:	push   ds
  41ee0d:	cmp    eax,0x647a726b
  41ee12:	outs   dx,BYTE PTR ds:[esi]
  41ee13:	xor    bh,ch
  41ee15:	or     ah,BYTE PTR [ebp+0x6c]
  41ee18:	push   ecx
  41ee19:	pop    ebx
  41ee1a:	popa   
  41ee1b:	addr16 inc ecx
  41ee1d:	imul   eax,DWORD PTR [eax],0x74424166
  41ee23:	bound  ecx,QWORD PTR [edi+0x41]
  41ee26:	ins    BYTE PTR es:[edi],dx
  41ee27:	xor    esi,ebp
  41ee29:	imul   esi,DWORD PTR ss:[esi+0x37],0x43
  41ee2e:	arpl   WORD PTR [eax],ax
  41ee30:	add    BYTE PTR [eax],al
  41ee32:	inc    eax
  41ee33:	fs je  0x41ee9e
  41ee36:	dec    edi
  41ee37:	inc    ebx
  41ee38:	add    BYTE PTR [ebp-0x6d],ah
  41ee3b:	inc    ecx
  41ee3c:	pop    ebp
  41ee3d:	outs   dx,BYTE PTR ds:[esi]
  41ee3e:	fwait
  41ee3f:	imul   ebp,DWORD PTR [eax+eax*1+0x47],0x306d66c3
  41ee47:	shr    BYTE PTR [eax+eax*1+0x21],cl
  41ee4b:	popf   
  41ee4c:	imul   sp,WORD PTR [eax],0x5fc6
  41ee51:	add    BYTE PTR [ecx+edx*8],dl
  41ee54:	pop    eax
  41ee55:	imul   edi,esi,0xffffffef
  41ee58:	pop    eax
  41ee59:	pop    edi
  41ee5a:	(bad)  
  41ee5b:	jle    0x41eebd
  41ee5d:	ins    BYTE PTR es:[edi],dx
  41ee5e:	jecxz  0x41ee4f
  41ee60:	pop    ebx
  41ee61:	pop    edi
  41ee62:	hlt    
  41ee63:	xchg   BYTE PTR [edi+0x0],dl
  41ee66:	in     eax,dx
  41ee67:	pop    esi
  41ee68:	pop    ecx
  41ee69:	outs   dx,BYTE PTR ds:[esi]
  41ee6a:	inc    edi
  41ee6b:	mov    eax,ds:0xa2d83274
  41ee70:	pusha  
  41ee71:	xor    al,0xd5
  41ee73:	out    dx,eax
  41ee74:	arpl   WORD PTR [edi-0x5b],bx
  41ee77:	pop    ecx
  41ee78:	add    DWORD PTR [edx-0x5e],esi
  41ee7b:	dec    esp
  41ee7c:	xor    esi,DWORD PTR [edx]
  41ee7e:	je     0x41ee70
  41ee80:	arpl   WORD PTR [esi+eiz*4+0x52],bp
  41ee84:	pop    eax
  41ee85:	pop    edi
  41ee86:	inc    edi
  41ee87:	inc    eax
  41ee88:	jbe    0x41eef1
  41ee8a:	test   eax,0x96005f53
  41ee8f:	pop    ss
  41ee90:	pop    edi
  41ee91:	jb     0x41ee26
  41ee93:	lock pushw 0x0
  41ee98:	push   0x1c
  41ee9a:	jne    0x41eeff
  41ee9c:	data16 lock xor BYTE PTR [ebx],dh
  41eea0:	cmp    dh,BYTE PTR [ebp+0x6660030]
  41eea6:	popa   
  41eea7:	arpl   WORD PTR [ebx-0x3f],si
  41eeaa:	add    DWORD PTR [eax+0x66],ebp
  41eead:	loop   0x41ef0c
  41eeaf:	popa   
  41eeb0:	pusha  
  41eeb1:	loop   0x41ef13
  41eeb3:	add    BYTE PTR [ebx+0xd],ah
  41eeb6:	ins    BYTE PTR es:[edi],dx
  41eeb7:	je     0x41eee3
  41eeb9:	loop   0x41eebc
  41eebb:	jno    0x41eee3
  41eebd:	or     ebp,ebx
  41eebf:	pusha  
  41eec0:	sub    ecx,DWORD PTR [ecx]
  41eec2:	sbb    BYTE PTR ds:0x371a1b75,dh
  41eec8:	inc    edi
  41eec9:	jno    0x41ee93
  41eecb:	push   edi
  41eecc:	sub    ebp,DWORD PTR [esi-0x19]
  41eecf:	pop    ebp
  41eed0:	lock pop ecx
  41eed2:	mov    bh,0x60
  41eed4:	adc    eax,0xf164cb09
  41eed9:	outs   dx,DWORD PTR ds:[esi]
  41eeda:	les    edx,FWORD PTR [edi-0x15]
  41eedd:	arpl   di,sp
  41eedf:	pop    esi
  41eee0:	call   0xd9a28239
  41eee5:	or     BYTE PTR [edx-0x7fa6299c],cl
  41eeeb:	pusha  
  41eeec:	inc    edi
  41eeed:	pop    edx
  41eeee:	jnp    0x41ef50
  41eef0:	jecxz  0x41ef5e
  41eef2:	mov    BYTE PTR [ebx],al
  41eef4:	xlat   BYTE PTR ds:[ebx]
  41eef5:	pop    edx
  41eef6:	mov    BYTE PTR [esp+eiz*4+0x57],ch
  41eefa:	out    0x5b,eax
  41eefc:	add    BYTE PTR [eax],al
  41eefe:	stos   BYTE PTR es:[edi],al
  41eeff:	push   ebp
  41ef00:	dec    ebx
  41ef01:	pop    ecx
  41ef02:	stos   BYTE PTR es:[edi],al
  41ef03:	or     DWORD PTR [esi+0x5b],edx
  41ef06:	cdq    
  41ef07:	gs inc esi
  41ef09:	jno    0x41eea1
  41ef0b:	or     DWORD PTR [edi+ebp*2],edi
  41ef0e:	xchg   esi,eax
  41ef0f:	push   ebp
  41ef10:	dec    ebx
  41ef11:	pop    ebx
  41ef12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef13:	or     DWORD PTR [esi+0x63],eax
  41ef16:	xchg   ebx,eax
  41ef17:	data16 cmp al,BYTE PTR [eiz*2+0x62583b72]
  41ef1f:	push   0x1b
  41ef21:	pop    edi
  41ef22:	jbe    0x41ef2d
  41ef24:	push   es
  41ef25:	pop    esp
  41ef26:	gs sbb ebx,DWORD PTR gs:[edx+0x47]
  41ef2b:	fs add eax,0x14706d5c
  41ef31:	add    al,0x20
  41ef33:	pop    ss
  41ef34:	mov    edx,0x13142f
  41ef39:	mov    esi,0xe930146c
  41ef3e:	inc    esp
  41ef3f:	push   0x533ae274
  41ef44:	imul   ecx,esi,0xdc756b32
  41ef4a:	inc    esp
  41ef4b:	jno    0x41efc1
  41ef4d:	aad    0x14
  41ef4f:	pop    ds
  41ef50:	sub    eax,0x2e215c16
  41ef55:	clc    
  41ef56:	pop    ecx
  41ef57:	and    DWORD PTR [esi],ebp
  41ef59:	clc    
  41ef5a:	cmp    dl,BYTE PTR [esi+ebp*1]
  41ef5d:	clc    
  41ef5e:	aaa    
  41ef5f:	pop    ds
  41ef60:	cmp    cl,bl
  41ef62:	add    BYTE PTR [eax],al
  41ef64:	sbb    al,0x19
  41ef66:	sub    eax,0x776b0f99
  41ef6b:	(bad)  
  41ef6c:	out    0x3b,eax
  41ef6e:	je     0x41eef4
  41ef70:	ds pop ecx
  41ef72:	push   0x74714479
  41ef77:	jne    0x41ef4d
  41ef79:	push   ds
  41ef7a:	sub    eax,0x2e1476c6
  41ef7f:	mov    eax,0x182e156d
  41ef84:	pop    esp
  41ef85:	adc    eax,0x2e73202e
  41ef8a:	jo     0x41efd2
  41ef8c:	jge    0x41efe2
  41ef8e:	sub    eax,0x6355a446
  41ef93:	pop    ss
  41ef94:	fwait
  41ef95:	jno    0x41f007
  41ef97:	jmp    0x3db660e0
  41ef9c:	jnp    0x41efbd
  41ef9e:	sub    eax,0x636a65fe
  41efa3:	sbb    bh,BYTE PTR [edx+0x6e]
  41efa6:	ins    BYTE PTR es:[edi],dx
  41efa7:	push   cs
  41efa8:	mov    DWORD PTR [esi+esi*2],edi
  41efab:	add    BYTE PTR [ecx+0x55],bl
  41efae:	jae    0x41efb8
  41efb0:	jg     0x41efdd
  41efb2:	popa   
  41efb3:	add    BYTE PTR [ecx],bh
  41efb5:	xor    al,0x2e
  41efb7:	(bad)  
  41efb8:	int3   
  41efb9:	add    BYTE PTR [ecx+0x76],ah
  41efbc:	jae    0x41efbd
  41efbe:	pusha  
  41efbf:	js     0x41f004
  41efc1:	add    eax,0x57927468
  41efc6:	cmp    ch,BYTE PTR [edi]
  41efc8:	add    BYTE PTR [eax],al
  41efca:	cmp    DWORD PTR [ecx+0x5d],ebp
  41efcd:	xchg   DWORD PTR fs:[ebp+0x72],esp
  41efd1:	popa   
  41efd2:	cwde   
  41efd3:	imul   ebp,DWORD PTR fs:[ebp+0x39],0x14
  41efd8:	pop    edi
  41efd9:	(bad)  
  41efda:	aam    0x3b
  41efdc:	cs gs mov dh,0x3a
  41efe0:	add    BYTE PTR [eax],al
  41efe2:	xlat   BYTE PTR ds:[ebx]
  41efe3:	dec    edx
  41efe4:	inc    ebp
  41efe5:	push   eax
  41efe6:	mov    cl,0x1b
  41efe8:	inc    esi
  41efe9:	dec    ecx
  41efea:	call   0x501e:0xa359301a
  41eff1:	dec    ebx
  41eff2:	mov    ds:0xa34c4549,al
  41eff7:	pop    ss
  41eff8:	push   ebp
  41eff9:	push   ebp
  41effa:	xchg   edi,eax
  41effb:	inc    esp
  41effc:	push   edx
  41effd:	pop    ecx
  41effe:	fimul  WORD PTR [edx+0x41]
  41f001:	inc    esp
  41f002:	dec    BYTE PTR [edi+0x51]
  41f005:	dec    ecx
  41f006:	dec    edi
  41f007:	repz das 
  41f009:	add    BYTE PTR [esi],bl
  41f00b:	pop    es
  41f00c:	add    BYTE PTR [eax],al
  41f00e:	sub    al,0x7
  41f010:	dec    ecx
  41f011:	dec    edi
  41f012:	bound  edi,QWORD PTR [eax]
  41f014:	std    
  41f015:	add    BYTE PTR [esi],bl
  41f017:	pop    es
  41f018:	add    BYTE PTR [eax],al
  41f01a:	push   ds
  41f01b:	pop    es
  41f01c:	add    BYTE PTR [eax],al
  41f01e:	pop    ebp
  41f01f:	adc    al,BYTE PTR [esi+0x54]
  41f022:	push   ecx
  41f023:	inc    esp
  41f024:	push   edx
  41f025:	inc    ebp
  41f026:	mov    ah,BYTE PTR [eax]
  41f028:	arpl   WORD PTR gs:[edx+esi*1+0x6f],cx
  41f02d:	outs   dx,DWORD PTR ds:[esi]
  41f02e:	add    BYTE PTR [eax],al
  41f030:	inc    edi
  41f031:	or     dh,BYTE PTR [eax+0x5c]
  41f034:	jo     0x41f03f
  41f036:	push   esi
  41f037:	fs pusha 
  41f039:	(bad)  [edx+0x5c]
  41f03c:	test   ch,dl
  41f03e:	outs   dx,DWORD PTR ds:[esi]
  41f03f:	jb     0x41f06b
  41f041:	add    dh,BYTE PTR [eax+0x56]
  41f044:	and    bl,dh
  41f046:	jb     0x41f0af
  41f048:	and    BYTE PTR [edx-0x46e6acbb],dh
  41f04e:	push   ebx
  41f04f:	jno    0x41f06c
  41f051:	rcl    DWORD PTR [ebp+0x6c],1
  41f054:	inc    edi
  41f055:	xchg   ebp,eax
  41f056:	push   ebx
  41f057:	and    DWORD PTR [bx+0x5f6d],ebx
  41f05c:	sbb    ecx,esp
  41f05e:	push   edx
  41f05f:	je     0x41f056
  41f061:	enter  0x6553,0x47
  41f065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f066:	pop    esp
  41f067:	jno    0x41f060
  41f069:	jae    0x41f0cf
  41f06b:	ja     0x41f066
  41f06d:	nop
  41f06e:	pop    eax
  41f06f:	arpl   WORD PTR [edi-0x6c],ax
  41f072:	add    DWORD PTR [eax],eax
  41f074:	inc    edi
  41f075:	lock add DWORD PTR [eax],eax
  41f078:	inc    edi
  41f079:	lock add DWORD PTR [ecx-0x1e],ebp
  41f07d:	pop    ebp
  41f07e:	push   ebx
  41f07f:	arpl   WORD PTR [ebx-0x5cd1d061],si
  41f085:	pop    esp
  41f086:	push   ebp
  41f087:	add    BYTE PTR [eax-0x5dbaaee4],bl
  41f08d:	xor    al,0x43
  41f08f:	popa   
  41f090:	fwait
  41f091:	dec    ecx
  41f092:	outs   dx,BYTE PTR ds:[esi]
  41f093:	arpl   WORD PTR [eax],ax
  41f095:	add    BYTE PTR [ebx+ebx*1+0x34a07156],al
  41f09c:	pop    edi
  41f09d:	push   ecx
  41f09e:	mov    ds:0x7067711f,al
  41f0a3:	inc    edx
  41f0a4:	cmp    esp,DWORD PTR [edi+eax*2+0x0]
  41f0a8:	jb     0x41f117
  41f0aa:	or     DWORD PTR fs:[ebx+esi*2],ecx
  41f0ae:	jbe    0x41f100
  41f0b0:	add    edx,DWORD PTR [eax+0x72]
  41f0b3:	ss or  al,0x73
  41f0b6:	push   esi
  41f0b7:	jo     0x41f0b7
  41f0b9:	push   ebp
  41f0ba:	mov    BYTE PTR [ebp-0x19],ah
  41f0bd:	add    eax,DWORD PTR [edi+0x9]
  41f0c0:	out    0x3,eax
  41f0c2:	inc    edi
  41f0c3:	or     edi,esp
  41f0c5:	add    esp,DWORD PTR [esi]
  41f0c7:	push   edi
  41f0c8:	lock jae 0x41f106
  41f0cb:	push   ss
  41f0cc:	sbb    DWORD PTR [esi],edx
  41f0ce:	and    ebp,DWORD PTR [ebp-0x35]
  41f0d1:	add    eax,DWORD PTR [esi]
  41f0d3:	push   edi
  41f0d4:	shl    BYTE PTR [ebx+0x13],1
  41f0d7:	xor    al,0xbd
  41f0d9:	jae    0x41f0f0
  41f0db:	push   0xffffffbb
  41f0dd:	pusha  
  41f0de:	es push ebp
  41f0e0:	mov    ds:0xe767fb64,eax
  41f0e5:	add    eax,DWORD PTR [edi+0x9]
  41f0e8:	out    0x15,eax
  41f0ea:	in     al,0x60
  41f0ec:	mov    WORD PTR [ebx],es
  41f0ee:	push   ss
  41f0ef:	push   0xffffff85
  41f0f1:	outs   dx,DWORD PTR ds:[esi]
  41f0f2:	fisub  DWORD PTR [edi-0x67]
  41f0f5:	pusha  
  41f0f6:	sti    
  41f0f7:	xor    DWORD PTR [eax-0xaffffab],eax
  41f0fd:	inc    edi
  41f0fe:	cdq    
  41f0ff:	add    ebx,edx
  41f101:	pop    eax
  41f102:	test   BYTE PTR [ebp+0x47],dl
  41f105:	or     ah,bh
  41f107:	add    eax,edi
  41f109:	pop    esp
  41f10a:	jg     0x41f16c
  41f10c:	mov    ds:0x59321a65,eax
  41f111:	ins    DWORD PTR es:[edi],dx
  41f112:	dec    ebx
  41f113:	pop    eax
  41f114:	inc    edi
  41f115:	cmp    al,0x1f
  41f117:	cmp    eax,0x55255da4
  41f11c:	mov    ds:0x77724c6d,eax
  41f121:	push   0x33
  41f123:	pop    esp
  41f124:	inc    eax
  41f125:	or     DWORD PTR [eax],eax
  41f127:	jmp    0xe941fa70
  41f12c:	cdq    
  41f12d:	xor    BYTE PTR [edi],bh
  41f12f:	jmp    0xe98121fa
  41f134:	mov    dh,0x30
  41f136:	aas    
  41f137:	jmp    0xe98121f8
  41f13c:	mov    ds:0x8ae93f30,al
  41f141:	xor    BYTE PTR [edi],bh
  41f143:	jmp    0xe98121da
  41f148:	lahf   
  41f149:	xor    BYTE PTR [edi],bh
  41f14b:	jmp    0xe9811496
  41f150:	cmp    ah,BYTE PTR [ebx]
  41f152:	aas    
  41f153:	jmp    0xe9811493
  41f158:	mul    DWORD PTR [edx]
  41f15a:	aas    
  41f15b:	jmp    0xe9811474
  41f160:	add    BYTE PTR [eax],al
  41f162:	inc    esp
  41f163:	or     DWORD PTR [eax],eax
  41f165:	jmp    0x6941faaf
  41f16a:	js     0x41f144
  41f16c:	std    
  41f16d:	jmp    0xad6251ab
  41f172:	adc    ebp,DWORD PTR [edx+0x73]
  41f175:	mov    WORD PTR [ecx],es
  41f177:	addr16 je 0x41f114
  41f17a:	inc    esp
  41f17b:	fdivr  st,st(5)
  41f17d:	jmp    0xe941e546
  41f182:	inc    esp
  41f183:	sbb    BYTE PTR [eax+0x79],dh
  41f186:	cmp    BYTE PTR [eax],0x74
  41f189:	mov    BYTE PTR [eax+ebx*8-0x3],al
  41f18d:	jmp    0xe941e656
  41f192:	inc    esp
  41f193:	inc    ebp
  41f194:	ins    DWORD PTR es:[edi],dx
  41f195:	dec    edx
  41f196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f197:	and    BYTE PTR gs:[eax],ch
  41f19a:	xchg   ebx,eax
  41f19b:	pop    ecx
  41f19c:	inc    esp
  41f19d:	dec    eax
  41f19e:	xchg   edi,eax
  41f19f:	cmp    BYTE PTR [eax],al
  41f1a1:	add    BYTE PTR [edi],bl
  41f1a3:	or     al,0x0
  41f1a5:	or     BYTE PTR [esi+0xd],0x0
  41f1a9:	add    BYTE PTR ds:0x8b685f6c,ch
  41f1af:	or     eax,0x8bdefffd
  41f1b4:	sbb    eax,0x3f0bee00
  41f1b9:	outs   dx,DWORD PTR ds:[esi]
  41f1ba:	inc    ecx
  41f1bb:	xor    ah,BYTE PTR [ebp+0x65]
  41f1be:	sub    eax,0xdefffd0d
  41f1c3:	mov    esp,DWORD PTR [edx]
  41f1c5:	add    BYTE PTR [eax],al
  41f1c7:	add    BYTE PTR [esi-0x4296b7f5],ch
  41f1cd:	imul   esi,DWORD PTR [bp+si-0x49],0xb
  41f1d2:	add    al,BYTE PTR [eax]
  41f1d4:	sahf   
  41f1d5:	mov    eax,DWORD PTR [ecx]
  41f1d7:	add    BYTE PTR [esi+0x4e79490b],ch
  41f1dd:	dec    ecx
  41f1de:	imul   esp,DWORD PTR [ebx+0x7b],0x3e
  41f1e2:	popa   
  41f1e3:	outs   dx,BYTE PTR ds:[esi]
  41f1e4:	retf   0x58
  41f1e7:	add    ch,BYTE PTR [esi+0xb]
  41f1ea:	and    BYTE PTR [ebx],0x6e
  41f1ed:	or     eax,DWORD PTR [eax]
  41f1ef:	inc    ebx
  41f1f0:	mov    cl,0x3e
  41f1f2:	imul   ebp,DWORD PTR [edi-0x30],0xbe703d2b
  41f1f9:	pop    ss
  41f1fa:	pop    ebp
  41f1fb:	je     0x41f1cc
  41f1fd:	or     edi,ebp
  41f1ff:	call   FWORD PTR [esi-0x75]
  41f202:	and    eax,DWORD PTR [eax]
  41f204:	pop    esi
  41f205:	or     ecx,DWORD PTR [ecx+0x79]
  41f208:	push   cs
  41f209:	cmp    esp,DWORD PTR [ebp+0x63]
  41f20c:	mov    edx,0xad657267
  41f211:	or     al,BYTE PTR [edx]
  41f213:	add    BYTE PTR [esi],bl
  41f215:	mov    ebp,DWORD PTR [esi]
  41f217:	add    BYTE PTR [esi],ch
  41f219:	or     edi,DWORD PTR [edi]
  41f21b:	outs   dx,DWORD PTR ds:[esi]
  41f21c:	inc    edi
  41f21d:	dec    ebp
  41f21e:	outs   dx,DWORD PTR ds:[esi]
  41f21f:	ins    DWORD PTR es:[edi],dx
  41f220:	mov    eax,ds:0xa46d4800
  41f225:	adc    eax,0x1c71636f
  41f22a:	push   ebp
  41f22b:	add    BYTE PTR [eax],al
  41f22d:	add    BYTE PTR [ebp-0x20],al
  41f230:	add    DWORD PTR [eax+0x1e020],eax
  41f236:	test   bh,bh
  41f238:	outs   dx,BYTE PTR ds:[esi]
  41f239:	imul   esi,DWORD PTR [eax+0x6],0x24
  41f23d:	aas    
  41f23e:	arpl   WORD PTR ds:0xf35e6e6b,cx
  41f244:	push   edi
  41f245:	jb     0x41f2ad
  41f247:	aam    0x6c
  41f249:	jbe    0x41f275
  41f24b:	shl    BYTE PTR ds:0x550c286d,0x0
  41f252:	inc    esi
  41f253:	loopne 0x41f256
  41f255:	xor    BYTE PTR [edi-0x20],0x1
  41f259:	add    BYTE PTR [esi],al
  41f25b:	int3   
  41f25c:	jo     0x41f2c5
  41f25e:	sub    ecx,ecx
  41f260:	push   esi
  41f261:	je     0x41f278
  41f263:	rcl    DWORD PTR [ebp+0x67],0x11
  41f267:	lds    esp,FWORD PTR [ecx]
  41f269:	push   esp
  41f26a:	lock (bad) 
  41f26c:	ins    DWORD PTR es:[edi],dx
  41f26d:	jno    0x41f2b6
  41f26f:	loope  0x41f272
  41f271:	add    bh,al
  41f273:	in     eax,dx
  41f274:	add    DWORD PTR [eax],eax
  41f276:	inc    edi
  41f277:	nop
  41f278:	push   0x6f86d472
  41f27d:	pop    edi
  41f27e:	jmp    0x41f25f
  41f280:	ss ins DWORD PTR es:[edi],dx
  41f282:	jmp    0xd5a14d02
  41f287:	test   BYTE PTR ds:0x5383ae4b,bh
  41f28d:	ins    DWORD PTR es:[edi],dx
  41f28e:	mov    ah,0x8f
  41f290:	addr16 je 0x41f293
  41f293:	add    BYTE PTR [ebx-0x5c919381],dl
  41f299:	or     DWORD PTR [esi+0x5b],edx
  41f29c:	xchg   esi,eax
  41f29d:	xor    eax,0x5b95592a
  41f2a2:	dec    esp
  41f2a3:	jb     0x41f240
  41f2a5:	aas    
  41f2a6:	inc    esp
  41f2a7:	push   esi
  41f2a8:	xchg   esi,eax
  41f2a9:	pusha  
  41f2aa:	push   esi
  41f2ab:	jb     0x41f250
  41f2ad:	dec    esp
  41f2ae:	aas    
  41f2af:	push   esp
  41f2b0:	imul   esp,DWORD PTR [esi+0x39],0x69
  41f2b4:	jne    0x41f2eb
  41f2b6:	sbb    ch,BYTE PTR [esp+eiz*2+0x65]
  41f2ba:	adc    esp,DWORD PTR [ecx+ecx*4]
  41f2bd:	or     bp,WORD PTR [eax+0x64]
  41f2c1:	pop    ebx
  41f2c2:	sbb    al,BYTE PTR [edi+esi*2]
  41f2c5:	inc    esi
  41f2c6:	cmp    bh,BYTE PTR [eax]
  41f2c8:	daa    
  41f2c9:	sub    al,0xfa
  41f2cb:	and    ecx,DWORD PTR [edi]
  41f2cd:	cmp    eax,0x186a3413
  41f2d2:	lds    edx,FWORD PTR [ebx]
  41f2d4:	cmp    al,0x3
  41f2d6:	pop    ds
  41f2d7:	jae    0x41f30f
  41f2d9:	pop    ebp
  41f2da:	and    DWORD PTR [esp+eiz*2],esp
  41f2dd:	pop    edx
  41f2de:	in     al,dx
  41f2df:	or     eax,0x68ca6a58
  41f2e4:	pop    ss
  41f2e5:	pop    ebp
  41f2e6:	adc    DWORD PTR [ebx*2+0x4d111126],esp
  41f2ed:	dec    eax
  41f2ee:	retf   0xe466
  41f2f1:	pop    eax
  41f2f2:	mov    ebx,0xca670430
  41f2f7:	jb     0x41f2f9
  41f2f9:	add    bl,ah
  41f2fb:	pop    edi
  41f2fc:	xchg   ebp,eax
  41f2fd:	push   0x1d
  41f2ff:	sub    DWORD PTR [eax-0x64991b99],edx
  41f305:	ins    BYTE PTR es:[edi],dx
  41f306:	fisttp DWORD PTR [edi-0x45]
  41f309:	and    ebx,DWORD PTR ds:0x77207812
  41f30f:	push   es
  41f310:	icebp  
  41f311:	inc    esi
  41f312:	stos   BYTE PTR es:[edi],al
  41f313:	arpl   WORD PTR [eax],ax
  41f315:	jge    0x41f2b6
  41f317:	arpl   WORD PTR [esp+edi*4+0x78],si
  41f31b:	push   0x617f4e6e
  41f320:	cmp    cl,BYTE PTR [ecx]
  41f322:	pusha  
  41f323:	gs jae 0x41f30a
  41f326:	inc    edx
  41f327:	dec    edx
  41f328:	ins    DWORD PTR es:[edi],dx
  41f329:	aas    
  41f32a:	xchg   ebp,eax
  41f32b:	push   0x666c3d61
  41f330:	outs   dx,BYTE PTR ds:[esi]
  41f331:	add    esp,DWORD PTR [ebx]
  41f333:	push   0x6c
  41f335:	inc    esi
  41f336:	call   0x6e66:0x83e30b68
  41f33d:	sbb    eax,0xcc746368
  41f342:	adc    BYTE PTR [eax+esi*2+0xc],bl
  41f346:	xor    DWORD PTR [ecx],ebp
  41f348:	pop    edi
  41f349:	sbb    DWORD PTR [ebx+0x65],esi
  41f34c:	or     ah,BYTE PTR [si]
  41f34f:	pop    ebp
  41f350:	addr16 push cs
  41f352:	xor    eax,0xf0a6d26
  41f357:	push   0x5d13bc74
  41f35c:	jb     0x41f32a
  41f35e:	add    BYTE PTR [eax],al
  41f360:	and    eax,0x3f30b60
  41f365:	data16 outs dx,BYTE PTR ds:[esi]
  41f367:	(bad)  [ecx]
  41f369:	arpl   WORD PTR [esp+edi*8+0x1],si
  41f36d:	arpl   WORD PTR [ecx-0x2a],sp
  41f370:	call   0x5b0861e0
  41f375:	sub    DWORD PTR [edx-0x40],esp
  41f378:	div    BYTE PTR [ebx]
  41f37a:	jb     0x41f32c
  41f37c:	cmp    edi,edi
  41f37e:	push   edx
  41f37f:	call   0x67ef:0xa82b56e9
  41f386:	outs   dx,BYTE PTR ds:[esi]
  41f387:	popf   
  41f388:	xor    ch,BYTE PTR [ecx]
  41f38a:	dec    ebx
  41f38b:	jle    0x41f377
  41f38d:	imul   ebp,DWORD PTR [eax+eax*1-0x26],0x66
  41f392:	sub    esi,DWORD PTR [eax+ecx*1]
  41f395:	clc    
  41f396:	pop    ds
  41f397:	sub    BYTE PTR [ebp-0x408f96a8],bh
  41f39d:	cmp    esp,DWORD PTR [ebp+0x62]
  41f3a0:	jp     0x41f40e
  41f3a2:	aaa    
  41f3a3:	and    BYTE PTR [ebx+0x1e],ch
  41f3a6:	inc    ebp
  41f3a7:	inc    ebp
  41f3a8:	ds cld 
  41f3aa:	sub    eax,0x532d3530
  41f3af:	imul   ebx,DWORD PTR [eax+0x3d776b61],0x4738352d
  41f3b9:	add    al,0xa
  41f3bb:	or     eax,0x6f3f07e4
  41f3c0:	cmp    BYTE PTR [ecx],dh
  41f3c2:	popa   
  41f3c3:	outs   dx,BYTE PTR ds:[esi]
  41f3c4:	add    BYTE PTR [eax],al
  41f3c6:	xor    ah,BYTE PTR [esp+ecx*2]
  41f3c9:	gs dec eax
  41f3cb:	bound  esi,QWORD PTR [eax+ebp*2-0xc]
  41f3cf:	pop    es
  41f3d0:	dec    esp
  41f3d1:	outs   dx,DWORD PTR ds:[esi]
  41f3d2:	dec    ebp
  41f3d3:	push   0x57496974
  41f3d8:	cmp    al,BYTE PTR [eax]
  41f3da:	popa   
  41f3db:	dec    esp
  41f3dc:	push   esp
  41f3dd:	and    BYTE PTR [ebx-0x1db7dfc4],al
  41f3e3:	sbb    edx,DWORD PTR [eax+0x2f]
  41f3e6:	aas    
  41f3e7:	pop    ss
  41f3e8:	xor    BYTE PTR ds:0x736b3fa4,cl
  41f3ee:	jb     0x41f3e5
  41f3f0:	pop    ds
  41f3f1:	and    eax,0x410a02bd
  41f3f6:	lea    ebp,[ecx+eiz*2+0x70]
  41f3fa:	mov    dl,0xf5
  41f3fc:	pop    ds
  41f3fd:	sub    ch,BYTE PTR [ecx+0x25]
  41f400:	or     DWORD PTR [edx],ecx
  41f402:	scas   eax,DWORD PTR es:[edi]
  41f403:	ins    BYTE PTR es:[edi],dx
  41f404:	pop    edi
  41f405:	gs mov esi,0x4745293b
  41f40b:	mov    WORD PTR [ebp+ebp*2-0x1d],fs
  41f40f:	mov    BYTE PTR [edi+0x65],ch
  41f412:	jge    0x41f3d4
  41f414:	push   0x64
  41f416:	mov    ds:0xbb675582,al
  41f41b:	pop    ecx
  41f41c:	sub    eax,0x52975d20
  41f421:	cmp    edx,DWORD PTR [edi-0x23]
  41f424:	pop    es
  41f425:	inc    ecx
  41f426:	test   al,0x42
  41f428:	outs   dx,BYTE PTR ds:[esi]
  41f429:	arpl   WORD PTR [eax],ax
  41f42b:	add    BYTE PTR [esp+esi*1-0x9669295],ah
  41f432:	and    esp,DWORD PTR [ecx+0x73]
  41f435:	cmp    edx,DWORD PTR [ecx+0x63]
  41f438:	dec    edx
  41f439:	(bad)  
  41f43a:	cmp    BYTE PTR [ecx+0x6a],dh
  41f43d:	push   cs
  41f43e:	das    
  41f43f:	aas    
  41f440:	pusha  
  41f441:	dec    ebp
  41f442:	outs   dx,BYTE PTR ds:[esi]
  41f443:	je     0x41f462
  41f445:	rcl    BYTE PTR [eax+0x6d],0x5d
  41f449:	stc    
  41f44a:	outs   dx,DWORD PTR ds:[esi]
  41f44b:	ins    BYTE PTR es:[edi],dx
  41f44c:	retfw  
  41f44e:	adc    eax,0x29c0172e
  41f453:	popa   
  41f454:	xor    ch,bh
  41f456:	push   ebx
  41f457:	pop    edi
  41f458:	xor    edi,ecx
  41f45a:	popa   
  41f45b:	ins    BYTE PTR es:[edi],dx
  41f45c:	sub    dl,BYTE PTR [edi+0x29144b21]
  41f462:	inc    edi
  41f463:	and    BYTE PTR [edx-0x6],bl
  41f466:	adc    edi,DWORD PTR [ecx]
  41f468:	addr16 fwait
  41f46a:	ins    BYTE PTR es:[edi],dx
  41f46b:	outs   dx,BYTE PTR ds:[esi]
  41f46c:	sub    ecx,ebx
  41f46e:	push   esi
  41f46f:	jno    0x41f4d8
  41f471:	stc    
  41f472:	sbb    esp,DWORD PTR [edi]
  41f474:	push   edx
  41f475:	(bad)  
  41f476:	adc    BYTE PTR [edx],cl
  41f478:	inc    edi
  41f479:	add    al,BYTE PTR [esi+ebp*1]
  41f47c:	and    eax,esp
  41f47e:	cmp    eax,0x406192a
  41f483:	sub    dh,BYTE PTR [ecx]
  41f485:	or     ecx,edx
  41f487:	add    ebp,ecx
  41f489:	imul   edx,DWORD PTR [ebx-0x25a0289c],0x11
  41f490:	add    BYTE PTR [eax],al
  41f492:	sbb    DWORD PTR [ebp+0x7b],ebp
  41f495:	outs   dx,DWORD PTR ds:[esi]
  41f496:	inc    edi
  41f497:	inc    ebx
  41f498:	mov    WORD PTR [edi+0x78],ss
  41f49b:	pop    ecx
  41f49c:	nop
  41f49d:	inc    ecx
  41f49e:	mov    ah,0x6b
  41f4a0:	lea    ebp,[eax-0x4b]
  41f4a3:	dec    ebx
  41f4a4:	jns    0x41f50e
  41f4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4a7:	or     DWORD PTR ds:0x5a3c9369,esi
  41f4ad:	imul   edx,DWORD PTR [ebp-0x63a6bab4],0x736ee709
  41f4b7:	ins    BYTE PTR es:[edi],dx
  41f4b8:	cli    
  41f4b9:	adc    DWORD PTR [ecx],ebp
  41f4bb:	ins    DWORD PTR es:[edi],dx
  41f4bc:	dec    ebx
  41f4bd:	jo     0x41f506
  41f4bf:	cmp    esp,DWORD PTR ss:[edi+0x7a]
  41f4c3:	pop    ecx
  41f4c4:	inc    esp
  41f4c5:	outs   dx,BYTE PTR ds:[esi]
  41f4c6:	jbe    0x41f525
  41f4c8:	push   ss
  41f4c9:	push   edx
  41f4ca:	js     0x41f536
  41f4cc:	add    al,0x4
  41f4ce:	inc    edi
  41f4cf:	push   0x5968560b
  41f4d4:	add    BYTE PTR [ebx],dl
  41f4d6:	jne    0x41f4fb
  41f4d8:	or     esi,DWORD PTR [eax+0x2b]
  41f4db:	or     DWORD PTR [eax],ebp
  41f4dd:	jo     0x41f502
  41f4df:	bound  ecx,QWORD PTR [edx]
  41f4e1:	xor    ebp,DWORD PTR gs:[eax+ebp*1+0x6e]
  41f4e6:	sub    eax,DWORD PTR [eax-0x2b]
  41f4e9:	ins    BYTE PTR es:[edi],dx
  41f4ea:	adc    esp,DWORD PTR [eax-0x38]
  41f4ed:	outs   dx,DWORD PTR ds:[esi]
  41f4ee:	sub    BYTE PTR [edi-0x34],cl
  41f4f1:	xor    ah,BYTE PTR [eax]
  41f4f3:	ins    DWORD PTR es:[edi],dx
  41f4f4:	out    0x42,eax
  41f4f6:	add    BYTE PTR [eax],al
  41f4f8:	out    dx,eax
  41f4f9:	imul   ecx,edx,0x6a
  41f4fc:	adc    esp,DWORD PTR [edx-0x2e]
  41f4ff:	push   0xcc0043e1
  41f504:	mul    DWORD PTR [esi+0x63]
  41f507:	mov    ebx,0x996760f5
  41f50c:	inc    esp
  41f50d:	dec    ebx
  41f50e:	jb     0x41f494
  41f510:	fbstp  TBYTE PTR [edi]
  41f512:	lea    eax,[si+0x48]
  41f516:	jb     0x41f49c
  41f518:	test   al,0x4c
  41f51a:	outs   dx,BYTE PTR ds:[esi]
  41f51b:	jl     0x41f4d4
  41f51d:	ins    BYTE PTR es:[edi],dx
  41f51e:	jb     0x41f4a8
  41f520:	cwde   
  41f521:	ins    BYTE PTR es:[edi],dx
  41f522:	aas    
  41f523:	jmp    0x85a550ad
  41f528:	mov    bl,BYTE PTR [ebx+0x63]
  41f52b:	dec    esp
  41f52c:	inc    ebx
  41f52d:	dec    edx
  41f52e:	jb     0x41f590
  41f530:	jnp    0x41f587
  41f532:	inc    ebp
  41f533:	dec    esp
  41f534:	outs   dx,DWORD PTR ds:[esi]
  41f535:	cmp    al,0x71
  41f537:	inc    esp
  41f538:	xchg   ebp,eax
  41f539:	inc    edx
  41f53a:	arpl   WORD PTR [eax+0x43],ax
  41f53d:	dec    edx
  41f53e:	jb     0x41f580
  41f540:	fwait
  41f541:	push   ebp
  41f542:	inc    ebx
  41f543:	xor    DWORD PTR [ebx-0x71ca8da2],edx
  41f549:	ins    BYTE PTR es:[edi],dx
  41f54a:	ja     0x41f535
  41f54c:	xchg   DWORD PTR [ebx+0x77],ebx
  41f54f:	sbb    DWORD PTR [edi+0x45],ebp
  41f552:	arpl   WORD PTR [edx],bx
  41f554:	outs   dx,DWORD PTR ds:[esi]
  41f555:	pop    ebx
  41f556:	ins    DWORD PTR es:[edi],dx
  41f557:	adc    BYTE PTR [esi],cl
  41f559:	ins    BYTE PTR es:[edi],dx
  41f55a:	ja     0x41f545
  41f55c:	add    BYTE PTR [eax],al
  41f55e:	pop    es
  41f55f:	pop    ebx
  41f560:	ja     0x41f55b
  41f562:	sbb    BYTE PTR [ebx],bh
  41f564:	arpl   WORD PTR ds:0x4713020,ax
  41f56a:	push   es
  41f56b:	pop    esi
  41f56c:	outs   dx,BYTE PTR ds:[esi]
  41f56d:	frstor [ecx]
  41f56f:	push   ecx
  41f570:	je     0x41f55b
  41f572:	push   esi
  41f573:	ins    BYTE PTR es:[edi],dx
  41f574:	jbe    0x41f542
  41f576:	not    BYTE PTR [esp+edx*2-0x42]
  41f57a:	aaa    
  41f57b:	ins    BYTE PTR es:[edi],dx
  41f57c:	ins    BYTE PTR es:[edi],dx
  41f57d:	add    BYTE PTR [eax-0x748fb4f4],cl
  41f583:	pop    esi
  41f584:	push   eax
  41f585:	jb     0x41f508
  41f587:	imul   esp,DWORD PTR [ecx+0x73],0x6b6b189d
  41f58e:	retf   
  41f58f:	pop    esi
  41f590:	add    BYTE PTR [ecx-0x3d],cl
  41f593:	cmp    al,0x61
  41f595:	jb     0x41f544
  41f597:	pop    ebp
  41f598:	outs   dx,BYTE PTR ds:[esi]
  41f599:	popa   
  41f59a:	fisub  DWORD PTR [esi+0x4c]
  41f59d:	outs   dx,DWORD PTR ds:[esi]
  41f59e:	leave  
  41f59f:	fs popa 
  41f5a1:	fs loope 0x41f601
  41f5a4:	push   ecx
  41f5a5:	jae    0x41f562
  41f5a7:	cmp    DWORD PTR [eax],eax
  41f5a9:	inc    edi
  41f5aa:	retf   
  41f5ab:	aaa    
  41f5ac:	push   esp
  41f5ad:	outs   dx,DWORD PTR ds:[esi]
  41f5ae:	jne    0x41f618
  41f5b0:	outs   dx,BYTE PTR ds:[esi]
  41f5b1:	dec    ecx
  41f5b2:	and    BYTE PTR [edi+0x6b],0x72
  41f5b6:	sub    DWORD PTR [esp+esi*2+0x69],0x41
  41f5bb:	pop    edi
  41f5bc:	add    BYTE PTR [ebx-0x6f],al
  41f5bf:	pop    edi
  41f5c0:	jbe    0x41f627
  41f5c2:	add    BYTE PTR [eax],al
  41f5c4:	sub    al,0x31
  41f5c6:	dec    edi
  41f5c7:	imul   edi,DWORD PTR [edx+0x11],0x3b1a536b
  41f5ce:	outs   dx,BYTE PTR gs:[esi]
  41f5d0:	dec    ecx
  41f5d1:	sbb    ah,BYTE PTR [ebp+0x64]
  41f5d4:	pop    ds
  41f5d5:	add    eax,0x5e396f4c
  41f5da:	outs   dx,BYTE PTR ds:[esi]
  41f5db:	push   ebp
  41f5dc:	pop    ebp
  41f5dd:	push   0x3fae4172
  41f5e2:	imul   ebp,DWORD PTR [edi+0x55],0x38
  41f5e6:	jo     0x41f638
  41f5e8:	lods   al,BYTE PTR ds:[esi]
  41f5e9:	bound  esi,QWORD PTR [esi+0x69]
  41f5ec:	mov    ds:0xd8656366,al
  41f5f1:	push   0x6c
  41f5f3:	jne    0x41f580
  41f5f5:	dec    edx
  41f5f6:	add    BYTE PTR [ecx+0x47],al
  41f5f9:	mov    esi,0xb5f47367
  41f5fe:	xor    eax,0x6bbcec6d
  41f603:	push   eax
  41f604:	cmc    
  41f605:	mov    eax,0xbcdb6753
  41f60a:	fs arpl sp,dx
  41f60d:	loope  0x41f610
  41f60f:	popa   
  41f610:	aad    0xa8
  41f612:	push   ecx
  41f613:	je     0x41f629
  41f615:	mov    ah,0x2b
  41f617:	fild   DWORD PTR fs:[ebp+0x72aa4101]
  41f61e:	push   ebp
  41f61f:	dec    ebp
  41f620:	mov    bh,0x7d
  41f622:	imul   edx,DWORD PTR [ecx-0x52],0x53
  41f626:	push   ebp
  41f627:	arpl   WORD PTR [eax],ax
  41f629:	add    BYTE PTR [edx-0x6a92aa8d],bl
  41f62f:	test   DWORD PTR [edx+0x0],eax
  41f632:	test   BYTE PTR ds:0x3e8a7456,bh
  41f638:	dec    edi
  41f639:	imul   eax,DWORD PTR [ebp+edi*1+0x466e7456],0x6b
  41f641:	popa   
  41f642:	data16 or al,0x5f
  41f645:	jno    0x41f6c5
  41f647:	ds xor eax,0x5f125874
  41f64d:	add    BYTE PTR [ebp+eax*2-0xb7b8baa],al
  41f654:	push   0x50136a71
  41f659:	ins    DWORD PTR es:[edi],dx
  41f65a:	push   ebp
  41f65b:	std    
  41f65c:	add    eax,DWORD PTR [ecx+0x35]
  41f65f:	stc    
  41f660:	push   ebx
  41f661:	je     0x41f669
  41f663:	add    edx,DWORD PTR [ebx+0x73]
  41f666:	push   ds
  41f667:	shl    BYTE PTR [eax+0x41],cl
  41f66a:	and    dl,dl
  41f66c:	dec    ebp
  41f66d:	sub    DWORD PTR [bx+di],ecx
  41f670:	gs pop edi
  41f672:	adc    ecx,DWORD PTR [ecx]
  41f674:	int3   
  41f675:	xor    edx,DWORD PTR ds:0x1364d560
  41f67b:	mov    fs:0xe708f860,al
  41f681:	add    eax,DWORD PTR [edi+0x9]
  41f684:	out    0x3,eax
  41f686:	inc    edi
  41f687:	or     edi,esp
  41f689:	add    eax,DWORD PTR [edi+0x9]
  41f68c:	out    0x3,eax
  41f68e:	add    BYTE PTR [eax],al
  41f690:	inc    edi
  41f691:	or     edi,esp
  41f693:	add    eax,DWORD PTR [edi+0x9]
  41f696:	out    0x3,eax
  41f698:	inc    edi
  41f699:	or     edi,esp
  41f69b:	add    eax,DWORD PTR [edi+0x9]
  41f69e:	out    0x3,eax
  41f6a0:	inc    edi
  41f6a1:	or     edi,esp
  41f6a3:	add    eax,DWORD PTR [edi+0x9]
  41f6a6:	out    0x3,eax
  41f6a8:	inc    edi
  41f6a9:	or     edi,esp
  41f6ab:	add    eax,DWORD PTR [edi+0x9]
  41f6ae:	out    0x3,eax
  41f6b0:	inc    edi
  41f6b1:	or     edi,esp
  41f6b3:	add    eax,DWORD PTR [edi+0x9]
  41f6b6:	out    0x3,eax
  41f6b8:	inc    edi
  41f6b9:	or     edi,esp
  41f6bb:	add    eax,DWORD PTR [edi+0x9]
  41f6be:	out    0x3,eax
  41f6c0:	inc    edi
  41f6c1:	or     edi,esp
  41f6c3:	add    eax,DWORD PTR [edi+0x9]
  41f6c6:	out    0x3,eax
  41f6c8:	inc    edi
  41f6c9:	or     edi,esp
  41f6cb:	add    eax,DWORD PTR [edi+0x9]
  41f6ce:	out    0x3,eax
  41f6d0:	inc    edi
  41f6d1:	or     edi,esp
  41f6d3:	add    eax,DWORD PTR [edi+0x9]
  41f6d6:	out    0x3,eax
  41f6d8:	inc    edi
  41f6d9:	or     edi,esp
  41f6db:	add    eax,DWORD PTR [edi+0x9]
  41f6de:	out    0x3,eax
  41f6e0:	inc    edi
  41f6e1:	or     edi,esp
  41f6e3:	dec    ebx
  41f6e4:	adc    al,BYTE PTR [eax+0x2b]
  41f6e7:	add    al,0x2e
  41f6e9:	and    al,0xb7
  41f6eb:	sbb    ecx,DWORD PTR [edi]
  41f6ed:	sbb    al,0x0
  41f6ef:	int3   
  41f6f0:	xor    al,0x15
  41f6f2:	pop    eax
  41f6f3:	mov    esp,0x19670000
  41f6f8:	xor    al,0xc1
  41f6fa:	pop    edi
  41f6fb:	sub    dh,BYTE PTR [eax]
  41f6fd:	sbb    ecx,DWORD PTR [ebx+0x2a]
  41f700:	xor    BYTE PTR [ebx],bl
  41f702:	inc    ebx
  41f703:	and    ah,BYTE PTR [ebx]
  41f705:	sbb    DWORD PTR [ecx+0x31],edx
  41f708:	and    edi,ecx
  41f70a:	pop    edx
  41f70b:	xor    DWORD PTR [ebx],esp
  41f70d:	stc    
  41f70e:	push   edx
  41f70f:	xor    DWORD PTR [ebx],esp
  41f711:	stc    
  41f712:	cmp    dh,BYTE PTR [ecx]
  41f714:	and    edi,ecx
  41f716:	xor    dh,BYTE PTR [ecx]
  41f718:	and    ebx,ecx
  41f71a:	cmp    dh,BYTE PTR [ecx]
  41f71c:	jnp    0x41f707
  41f71e:	add    eax,0xaba7746a
  41f723:	push   ebp
  41f724:	addr16 xchg edi,eax
  41f726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f727:	cmp    dh,BYTE PTR [edi+0x7a]
  41f72a:	sub    BYTE PTR [eax+0x6b],0xb0
  41f72e:	sahf   
  41f72f:	arpl   WORD PTR [ebp-0x17],bp
  41f732:	mov    cl,0x68
  41f734:	jb     0x41f7b5
  41f736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f737:	pop    ebp
  41f738:	xor    DWORD PTR [ebx],ebx
  41f73a:	pop    ebp
  41f73b:	gs ins BYTE PTR es:[edi],dx
  41f73d:	dec    ebp
  41f73e:	inc    ebx
  41f73f:	inc    esp
  41f740:	jno    0x41f780
  41f742:	outs   dx,BYTE PTR ds:[esi]
  41f743:	push   esi
  41f744:	ss adc eax,0x4a6d5733
  41f74a:	nop
  41f74b:	pop    edx
  41f74c:	jno    0x41f737
  41f74e:	xor    ebx,DWORD PTR [esi+0x66]
  41f751:	cmp    eax,0x44722c76
  41f756:	pop    ds
  41f757:	inc    ebx
  41f758:	pop    edi
  41f759:	sbb    eax,DWORD PTR [eax]
  41f75b:	add    BYTE PTR [edi],cl
  41f75d:	cmp    DWORD PTR [esp+edx*1+0x66],ebp
  41f761:	outs   dx,BYTE PTR fs:[esi]
  41f763:	sbb    bh,BYTE PTR [edi+0x43]
  41f766:	push   esp
  41f767:	cmp    DWORD PTR [edi+0x41],edi
  41f76a:	ins    DWORD PTR es:[edi],dx
  41f76b:	add    BYTE PTR [ebp+0x4d006f3c],ch
  41f771:	bound  esp,QWORD PTR [esi+0x74]
  41f774:	mov    eax,ds:0x4a657267
  41f779:	inc    edi
  41f77a:	pop    ebp
  41f77b:	jb     0x41f7a9
  41f77d:	adc    DWORD PTR [eax+0x6c],edx
  41f780:	jae    0x41f7eb
  41f782:	outs   dx,BYTE PTR gs:[esi]
  41f784:	popf   
  41f785:	adc    al,0x46
  41f787:	push   esp
  41f788:	mov    esi,0xad6f4814
  41f78d:	cmp    al,0x6f
  41f78f:	add    ch,cl
  41f791:	popa   
  41f792:	data16 je 0x41f736
  41f795:	addr16 jb 0x41f7fd
  41f798:	retf   0x5d4a
  41f79b:	jb     0x41f727
  41f79d:	adc    eax,0x2cc3765d
  41f7a2:	inc    esp
  41f7a3:	imul   ecx,edi,0xe6676b63
  41f7a9:	pop    esi
  41f7aa:	outs   dx,DWORD PTR ds:[esi]
  41f7ab:	je     0x41f786
  41f7ad:	xor    eax,0x1be05c75
  41f7b2:	push   eax
  41f7b3:	dec    eax
  41f7b4:	leave  
  41f7b5:	xor    al,0x74
  41f7b7:	add    BYTE PTR [ebp+0x71746660],bh
  41f7bd:	push   0x6572
  41f7c2:	dec    edx
  41f7c3:	inc    edi
  41f7c4:	pop    ebp
  41f7c5:	jb     0x41f823
  41f7c7:	adc    DWORD PTR [edi+0x61],ecx
  41f7ca:	nop
  41f7cb:	sub    al,0x64
  41f7cd:	inc    esp
  41f7ce:	xchg   edi,eax
  41f7cf:	push   0x3d816f6c
  41f7d4:	gs jae 0x41f7f9
  41f7d7:	bound  esi,QWORD PTR [edx+0x79]
  41f7da:	dec    edx
  41f7db:	inc    edi
  41f7dc:	push   esp
  41f7dd:	push   eax
  41f7de:	push   ss
  41f7df:	bound  ebp,QWORD PTR [edi+0x74]
  41f7e2:	ficom  WORD PTR [edi]
  41f7e4:	pop    ebp
  41f7e5:	jae    0x41f82e
  41f7e7:	out    dx,eax
  41f7e8:	dec    esi
  41f7e9:	ins    DWORD PTR es:[edi],dx
  41f7ea:	xor    eax,0x20480406
  41f7ef:	iret   
  41f7f0:	dec    ebp
  41f7f1:	dec    esi
  41f7f2:	es std 
  41f7f4:	pop    esp
  41f7f5:	add    dl,bh
  41f7f7:	into   
  41f7f8:	pop    esi
  41f7f9:	jb     0x41f842
  41f7fb:	out    dx,al
  41f7fc:	push   0x50e22a6e
  41f801:	popa   
  41f802:	jnp    0x4396c67
  41f808:	imul   ebp,DWORD PTR [esi-0x12],0xff4535e1
  41f80f:	cwde   
  41f810:	xor    al,0x4c
  41f812:	add    dh,BYTE PTR [eax+0x1]
  41f815:	inc    edi
  41f816:	icebp  
  41f817:	mov    cs,WORD PTR [ebp+0x5f]
  41f81a:	jmp    0x41f7a9
  41f81c:	cmp    eax,0x3fe1d567
  41f821:	je     0x41f7fa
  41f823:	cwde   
  41f824:	addr16 add BYTE PTR [bx+si],al
  41f828:	xchg   ecx,eax
  41f829:	and    DWORD PTR [esi+0x63],0x66688f47
  41f830:	mov    ebx,0xa272624b
  41f835:	ins    BYTE PTR es:[edi],dx
  41f836:	inc    eax
  41f837:	push   0x63654fae
  41f83c:	xchg   ebp,eax
  41f83d:	jl     0x41f86f
  41f83f:	addr16 mov eax,ds:0x653c
  41f843:	jne    0x41f7d9
  41f845:	add    BYTE PTR [ecx+0x6d],al
  41f848:	jb     0x41f88f
  41f84a:	arpl   WORD PTR [esi+0x63],bp
  41f84d:	inc    ebp
  41f84e:	push   edx
  41f84f:	add    BYTE PTR [ebx+esi*1+0x4170745e],dl
  41f856:	push   edx
  41f857:	arpl   WORD PTR [ebx+0x54676c1b],ax
  41f85d:	or     al,0x5f
  41f85f:	jb     0x41f8d4
  41f861:	or     DWORD PTR [ebx],edi
  41f863:	addr16 push ebx
  41f865:	push   0x5a06240b
  41f86a:	add    al,0x69
  41f86c:	sbb    BYTE PTR [ebx+0x3],bl
  41f86f:	popa   
  41f870:	xor    eax,0x374d2309
  41f875:	push   esi
  41f876:	imul   BYTE PTR [ebx+ebx*1+0x66]
  41f87a:	inc    DWORD PTR [ebx]
  41f87c:	neg    BYTE PTR [edi-0xd]
  41f87f:	pusha  
  41f880:	push   ss
  41f881:	sub    eax,0x590037e7
  41f886:	fimul  DWORD PTR [esi-0x18]
  41f889:	push   esp
  41f88a:	retf   0x6b
  41f88d:	add    BYTE PTR [ebx],bl
  41f88f:	xor    bh,BYTE PTR [edx-0x68caf6ca]
  41f895:	add    ecx,DWORD PTR [ebx]
  41f897:	push   edx
  41f898:	shl    BYTE PTR [ebp+0x31],1
  41f89b:	pusha  
  41f89c:	lds    ebp,FWORD PTR [edi+eax*2+0x1b]
  41f8a0:	shl    BYTE PTR [ebp-0x18],0x8
  41f8a4:	mov    esi,0xb342ea32
  41f8a9:	xor    eax,DWORD PTR [edi+0x45]
  41f8ac:	mov    al,ds:0xa4454731
  41f8b1:	cmp    eax,0x399408b
  41f8b6:	xchg   BYTE PTR [ebx+edx*4],dh
  41f8b9:	inc    eax
  41f8ba:	mov    DWORD PTR ds:0x46880397,esi
  41f8c0:	lahf   
  41f8c1:	ins    BYTE PTR es:[edi],dx
  41f8c2:	xchg   esi,eax
  41f8c3:	push   ebp
  41f8c4:	push   esi
  41f8c5:	push   edx
  41f8c6:	nop
  41f8c7:	or     DWORD PTR [edx],edi
  41f8c9:	imul   edx,DWORD PTR [di+0x5e],0x2b647565
  41f8d1:	aas    
  41f8d2:	arpl   WORD PTR [edx+0x49],bx
  41f8d5:	gs pop ebx
  41f8d7:	sub    al,BYTE PTR ss:[ebp+0x77]
  41f8db:	inc    esp
  41f8dc:	add    BYTE PTR ds:0x44745684,dl
  41f8e2:	adc    DWORD PTR ds:0x293ac950,esi
  41f8e8:	dec    eax
  41f8e9:	push   cs
  41f8ea:	cs pop sp
  41f8ed:	cmp    BYTE PTR [esi*1+0xfe6d],al
  41f8f4:	sub    BYTE PTR [edi+0x5f],ah
  41f8f7:	sti    
  41f8f8:	inc    esp
  41f8f9:	cmp    BYTE PTR [ebp+0x7],ch
  41f8fc:	not    DWORD PTR [ebx+0x5f]
  41f8ff:	sti    
  41f900:	daa    
  41f901:	sub    eax,0x6729fd45
  41f906:	pop    edi
  41f907:	aad    0x55
  41f909:	dec    eax
  41f90a:	aas    
  41f90b:	mov    ecx,0xdc412d07
  41f910:	or     BYTE PTR [esi+0x46],ah
  41f913:	mov    ch,0x34
  41f915:	sub    DWORD PTR [esi],esi
  41f917:	or     DWORD PTR [ebx],esi
  41f919:	push   edi
  41f91a:	ins    DWORD PTR es:[edi],dx
  41f91b:	(bad)  
  41f91c:	out    0x57,eax
  41f91e:	jno    0x41f8e0
  41f920:	loope  0x41f97c
  41f922:	pop    edi
  41f923:	mov    ebp,0xbd413a18
  41f928:	loope  0x41f985
  41f92a:	ins    BYTE PTR es:[edi],dx
  41f92b:	mov    ebp,DWORD PTR [ebx-0x5e45ffc5]
  41f931:	das    
  41f932:	je     0x41f8ca
  41f934:	stos   DWORD PTR es:[edi],eax
  41f935:	cmp    esp,DWORD PTR [ebx-0x5b]
  41f938:	imul   esi,DWORD PTR ds:0x35ab8b6d,0x5983aa51
  41f942:	inc    ebx
  41f943:	lea    eax,[ebp+0x494c743c]
  41f949:	pop    ebp
  41f94a:	push   eax
  41f94b:	or     DWORD PTR [edx-0x17],edx
  41f94e:	inc    edi
  41f94f:	inc    esi
  41f950:	pusha  
  41f951:	sub    al,0x5c
  41f953:	cmp    BYTE PTR [esi+0x6d5d],al
  41f959:	add    BYTE PTR [ecx+0x1c616231],dl
  41f95f:	or     eax,0x59886f4f
  41f964:	jae    0x41f9c7
  41f966:	or     al,0x68
  41f968:	pop    esp
  41f969:	inc    edi
  41f96a:	xor    ch,BYTE PTR [esi]
  41f96c:	bound  esp,QWORD PTR [ecx+0x52]
  41f96f:	cli    
  41f970:	ds inc ecx
  41f972:	jle    0x41f97c
  41f974:	pop    esp
  41f975:	inc    ebx
  41f976:	pop    ebx
  41f977:	pop    ecx
  41f978:	popa   
  41f979:	inc    esi
  41f97a:	dec    edx
  41f97b:	std    
  41f97c:	pop    ds
  41f97d:	aaa    
  41f97e:	mov    ?,esp
  41f980:	jno    0x41f9f1
  41f982:	dec    eax
  41f983:	push   0x2e47736f
  41f988:	outs   dx,BYTE PTR ds:[esi]
  41f989:	popa   
  41f98a:	jb     0x41f98c
  41f98c:	dec    ebp
  41f98d:	inc    ebx
  41f98e:	mov    edx,0x8c6c6b2d
  41f993:	sub    esi,DWORD PTR [edx+0x0]
  41f996:	lods   eax,DWORD PTR ds:[esi]
  41f997:	sub    eax,0x2ba97466
  41f99c:	jb     0x41fa03
  41f99e:	ret    0x6c05
  41f9a1:	outs   dx,DWORD PTR ds:[esi]
  41f9a2:	mov    WORD PTR [ebx],gs
  41f9a4:	ins    BYTE PTR es:[edi],dx
  41f9a5:	push   ebx
  41f9a6:	popf   
  41f9a7:	dec    ebx
  41f9a8:	push   eax
  41f9a9:	inc    ebp
  41f9aa:	or     BYTE PTR [ecx+0x71],0x74
  41f9ae:	retf   
  41f9af:	add    eax,0x240e5054
  41f9b4:	and    BYTE PTR [eax-0x4f],cl
  41f9b7:	das    
  41f9b8:	popa   
  41f9b9:	pop    esp
  41f9ba:	iret   
  41f9bb:	dec    eax
  41f9bc:	push   esp
  41f9bd:	outs   dx,DWORD PTR ds:[esi]
  41f9be:	add    BYTE PTR [eax],al
  41f9c0:	shr    DWORD PTR [edi],1
  41f9c2:	bound  esp,QWORD PTR [ecx-0x64]
  41f9c5:	or     al,0x4f
  41f9c7:	outs   dx,DWORD PTR ds:[esi]
  41f9c8:	enter  0x7357,0x61
  41f9cc:	ins    BYTE PTR es:[edi],dx
  41f9cd:	push   0x2e92475c
  41f9d2:	bound  esp,QWORD PTR [ecx+0x47]
  41f9d5:	dec    esi
  41f9d6:	das    
  41f9d7:	inc    ecx
  41f9d8:	xchg   BYTE PTR [edx],al
  41f9da:	cmp    eax,0x5005845c
  41f9df:	arpl   WORD PTR [ecx+0x1f20341e],cx
  41f9e5:	adc    dh,BYTE PTR [edx+esi*2]
  41f9e8:	pusha  
  41f9e9:	push   eax
  41f9ea:	pop    ebp
  41f9eb:	jno    0x41fa41
  41f9ed:	sbb    DWORD PTR [ebx+0x6e],esp
  41f9f0:	es push ss
  41f9f2:	cmp    BYTE PTR [edi+0x4],cl
  41f9f5:	push   es
  41f9f6:	arpl   WORD PTR [ebp+0x23],bp
  41f9f9:	adc    al,0x61
  41f9fb:	jb     0x41fa44
  41f9fd:	out    dx,al
  41f9fe:	cmp    ch,BYTE PTR [eax+esi*1+0x14]
  41fa02:	popa   
  41fa03:	ins    BYTE PTR es:[edi],dx
  41fa04:	hlt    
  41fa05:	repnz inc eax
  41fa07:	push   eax
  41fa08:	or     dl,BYTE PTR [esi]
  41fa0a:	aas    
  41fa0b:	jae    0x41fa20
  41fa0d:	aad    0x3b
  41fa0f:	push   esp
  41fa10:	pop    ss
  41fa11:	mov    dl,0x35
  41fa13:	inc    ebp
  41fa14:	jmp    0x41f9e4
  41fa16:	pop    edi
  41fa17:	pop    edi
  41fa18:	jecxz  0x41f99c
  41fa1a:	inc    eax
  41fa1b:	aas    
  41fa1c:	pop    ss
  41fa1d:	jne    0x41fa54
  41fa1f:	inc    ecx
  41fa20:	fidivr DWORD PTR [ebp+0x5e]
  41fa23:	inc    esi
  41fa24:	add    BYTE PTR [eax],al
  41fa26:	repz mov eax,ds:0x86d55021
  41fa2c:	add    DWORD PTR [eax+eax*1-0x62],ebx
  41fa30:	bound  esp,QWORD PTR fs:[esi-0x79becf6c]
  41fa37:	cmp    BYTE PTR [esi],0x5c
  41fa3a:	test   BYTE PTR [ebp-0x5b7e9cb3],bl
  41fa40:	xor    DWORD PTR [eax],esp
  41fa42:	xchg   ebx,eax
  41fa43:	cdq    
  41fa44:	dec    ebp
  41fa45:	arpl   WORD PTR [edi-0x64],ax
  41fa48:	inc    eax
  41fa49:	jae    0x41f9e6
  41fa4b:	lea    edi,[ebx]
  41fa4d:	push   esp
  41fa4e:	ja     0x41fa59
  41fa50:	out    0x2f,eax
  41fa52:	jbe    0x41fa88
  41fa54:	or     eax,0xe73d9868
  41fa59:	bound  ebp,QWORD PTR ss:[edi]
  41fa5c:	push   ebx
  41fa5d:	pop    ebx
  41fa5e:	mov    BYTE PTR [ebx],bh
  41fa60:	dec    esp
  41fa61:	xor    BYTE PTR [ecx+0x6f574835],cl
  41fa67:	dec    edi
  41fa68:	sysenter 
  41fa6a:	jae    0x41fa66
  41fa6c:	out    0x36,al
  41fa6e:	pop    edx
  41fa6f:	das    
  41fa70:	sbb    ebx,DWORD PTR [ebx+0x20]
  41fa73:	cmp    eax,DWORD PTR [eax+esi*1]
  41fa76:	add    DWORD PTR ds:0x4f1f5708,esi
  41fa7c:	das    
  41fa7d:	xor    al,0x47
  41fa7f:	pop    edx
  41fa80:	push   ss
  41fa81:	push   0x1b
  41fa83:	or     BYTE PTR ds:[esi+0x24],dl
  41fa87:	gs sub eax,0xf0000060
  41fa8d:	cmp    edi,edi
  41fa8f:	dec    ecx
  41fa90:	out    dx,eax
  41fa91:	pop    eax
  41fa92:	ret    
  41fa93:	pop    ss
  41fa94:	inc    edi
  41fa95:	push   eax
  41fa96:	int    0x56
  41fa98:	repz daa 
  41fa9a:	ret    
  41fa9b:	pop    edi
  41fa9c:	in     al,0x3a
  41fa9e:	mov    ds:0x9730f364,eax
  41faa3:	(bad)  fs:[eax]
  41faa6:	out    0x53,eax
  41faa8:	clc    
  41faa9:	cmp    al,0xbf
  41faab:	add    ecx,DWORD PTR [eax]
  41faad:	aaa    
  41faae:	mov    edx,0x9334e857
  41fab3:	and    edx,DWORD PTR [edi+0x475b9328]
  41fab9:	dec    ebp
  41faba:	mov    BYTE PTR [edi-0x70],dl
  41fabd:	dec    edi
  41fabe:	jle    0x41fb1f
  41fac0:	mov    ds:0x8303792c,eax
  41fac5:	pop    edx
  41fac6:	nop
  41fac7:	push   edi
  41fac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac9:	cmp    al,BYTE PTR [eax]
  41facb:	(bad)  
  41facc:	test   al,0x66
  41face:	je     0x41fab9
  41fad0:	pop    eax
  41fad1:	push   esi
  41fad2:	jae    0x41fb24
  41fad4:	push   0x62452e30
  41fad9:	cmp    eax,0x2e333500
  41fade:	jno    0x41fb35
  41fae0:	cmp    esi,DWORD PTR fs:[edi+0x17]
  41fae4:	outs   dx,DWORD PTR ds:[esi]
  41fae5:	data16 je 0x41fad1
  41fae8:	sub    BYTE PTR [edi+0x6c],cl
  41faeb:	dec    eax
  41faec:	js     0x41fb1f
  41faee:	inc    esi
  41faef:	adc    DWORD PTR [eax],eax
  41faf1:	add    BYTE PTR [ebx],dl
  41faf3:	gs xor ecx,ebp
  41faf6:	jo     0x41fb47
  41faf8:	ins    BYTE PTR es:[edi],dx
  41faf9:	or     BYTE PTR [eax],dl
  41fafb:	xor    DWORD PTR [esi+0x31],eax
  41fafe:	jnp    0x41fb65
  41fb00:	xor    al,0xe9
  41fb02:	pop    eax
  41fb03:	dec    edi
  41fb04:	addr16 adc eax,0xd67632e
  41fb0a:	daa    
  41fb0b:	data16 add BYTE PTR ds:0x4742df8,dl
  41fb12:	data16 outs dx,BYTE PTR es:[esi]
  41fb15:	enter  0x29ed,0x72
  41fb19:	ud2    
  41fb1b:	xor    ch,BYTE PTR [ecx+ebp*8+0x20]
  41fb1f:	cmp    esp,DWORD PTR [ebx-0x36]
  41fb22:	fbstp  TBYTE PTR [esi]
  41fb24:	je     0x41fae0
  41fb26:	out    dx,eax
  41fb27:	cmp    dh,BYTE PTR [esi-0x3c]
  41fb2a:	repnz aaa 
  41fb2c:	cs mov cl,0xe7
  41fb2f:	xor    al,0x0
  41fb31:	(bad)  
  41fb32:	fisubr WORD PTR ds:0x2c928c6c
  41fb38:	ins    BYTE PTR es:[edi],dx
  41fb39:	lea    esp,[ebx-0x6f7b880d]
  41fb3f:	or     DWORD PTR [ecx+0x7e],edx
  41fb42:	sahf   
  41fb43:	cmp    eax,0x5ecf0075
  41fb48:	popa   
  41fb49:	pop    esp
  41fb4a:	loopne 0x41fbb1
  41fb4c:	ins    BYTE PTR es:[edi],dx
  41fb4d:	gs mov ah,0x65
  41fb50:	ins    BYTE PTR es:[edi],dx
  41fb51:	ins    BYTE PTR es:[edi],dx
  41fb52:	mov    edi,0x6f4f08
  41fb57:	add    BYTE PTR [eax-0x639e8c9f],dl
  41fb5d:	sub    al,0x5c
  41fb5f:	inc    esi
  41fb60:	xchg   DWORD PTR [ecx],ebp
  41fb62:	popa   
  41fb63:	pop    edx
  41fb64:	xchg   DWORD PTR [ecx],ebp
  41fb66:	ins    BYTE PTR es:[edi],dx
  41fb67:	popa   
  41fb68:	dec    esi
  41fb69:	dec    esi
  41fb6a:	ins    BYTE PTR es:[edi],dx
  41fb6b:	imul   eax,DWORD PTR [ebx+0x27007427],0x7f746f27
  41fb75:	sub    DWORD PTR [edi+ebx*2+0x72],ebp
  41fb79:	pusha  
  41fb7a:	jb     0x41fb7c
  41fb7c:	jbe    0x41fba8
  41fb7e:	outs   dx,DWORD PTR ds:[esi]
  41fb7f:	je     0x41fb1f
  41fb81:	sti    
  41fb82:	outs   dx,BYTE PTR ds:[esi]
  41fb83:	gs dec esp
  41fb85:	or     eax,0x5d9d6150
  41fb8a:	add    BYTE PTR [eax+0x49],dl
  41fb8d:	pop    ebx
  41fb8e:	je     0x41fb90
  41fb90:	sub    al,0x2c
  41fb92:	imul   ebp,DWORD PTR [edi-0x6e],0x9744202b
  41fb99:	pop    esi
  41fb9a:	add    BYTE PTR [ebx-0x7d],dl
  41fb9d:	pop    esi
  41fb9e:	jbe    0x41fc05
  41fba0:	mov    eax,gs
  41fba2:	push   ebx
  41fba3:	jns    0x41fb33
  41fba5:	sub    eax,DWORD PTR [eax]
  41fba7:	push   ebx
  41fba8:	xchg   ebx,eax
  41fba9:	pop    esi
  41fbaa:	jbe    0x41fc11
  41fbac:	pushf  
  41fbad:	jmp    0x5300:0x5c8d6f47
  41fbb4:	sbb    DWORD PTR [esi+0x76],0x65
  41fbb8:	fsub   st(1),st
  41fbba:	push   eax
  41fbbb:	jae    0x41fbbd
  41fbbd:	add    bl,al
  41fbbf:	pop    ebp
  41fbc0:	add    BYTE PTR [ebx+0x47],dl
  41fbc3:	xchg   ebp,eax
  41fbc4:	push   ebx
  41fbc5:	jbe    0x41fb69
  41fbc7:	mov    al,ds:0x3fa6501f
  41fbcc:	push   esp
  41fbcd:	add    BYTE PTR [ebp+ecx*4+0x53],dh
  41fbd1:	jbe    0x41fb7d
  41fbd3:	inc    eax
  41fbd4:	pop    ds
  41fbd5:	push   eax
  41fbd6:	cwde   
  41fbd7:	inc    eax
  41fbd8:	push   ebp
  41fbd9:	add    BYTE PTR [edi+0x47685851],dl
  41fbdf:	jmp    DWORD PTR [edx+esi*2+0x79]
  41fbe3:	push   ebp
  41fbe4:	push   esi
  41fbe5:	push   esp
  41fbe6:	outs   dx,BYTE PTR ds:[esi]
  41fbe7:	bound  esp,QWORD PTR [ebp+0x0]
  41fbea:	xchg   ebx,eax
  41fbeb:	push   ecx
  41fbec:	push   ebx
  41fbed:	je     0x41fc16
  41fbef:	pop    ds
  41fbf0:	gs jb  0x41fc4c
  41fbf3:	push   ebp
  41fbf4:	push   esi
  41fbf5:	and    BYTE PTR [edi+0x3],bh
  41fbf8:	push   ebx
  41fbf9:	je     0x41fc42
  41fbfb:	(bad)  
  41fbfc:	pusha  
  41fbfd:	jno    0x41fc32
  41fbff:	shl    BYTE PTR [ebx+eiz*2],cl
  41fc02:	xor    eax,0x67726524
  41fc07:	std    
  41fc08:	push   edx
  41fc09:	arpl   WORD PTR ds:0x145f3db2,dx
  41fc0f:	mov    esi,0xc02a5121
  41fc14:	push   edi
  41fc15:	arpl   WORD PTR ds:0xf45f31d2,dx
  41fc1b:	fiadd  WORD PTR [ecx]
  41fc1d:	dec    esp
  41fc1e:	out    0xde,al
  41fc20:	push   ebp
  41fc21:	and    BYTE PTR [eax],al
  41fc23:	add    BYTE PTR [edx*8-0x201d89ad],dl
  41fc2a:	and    DWORD PTR [eax-0x10],edx
  41fc2d:	jg     0x41fc84
  41fc2f:	add    BYTE PTR [ebx],cl
  41fc31:	rcl    DWORD PTR [esp+esi*2+0x27],1
  41fc35:	lahf   
  41fc36:	data16 jb 0x41fc0a
  41fc39:	int3   
  41fc3a:	push   ebx
  41fc3b:	and    BYTE PTR [edi-0x50a877f7],dl
  41fc41:	or     DWORD PTR [ebx-0x38c2499e],ebp
  41fc47:	xor    al,0xa4
  41fc49:	aaa    
  41fc4a:	xchg   ebp,eax
  41fc4b:	xchg   bp,ax
  41fc4d:	jmp    0x2cd946ec
  41fc52:	out    0x49,eax
  41fc54:	jnp    0x41fcaf
  41fc56:	mov    DWORD PTR [ecx+0x68],0xa068803b
  41fc5d:	cmp    eax,0x4b475256
  41fc62:	xor    esi,DWORD PTR [edi+eiz*1]
  41fc65:	inc    esi
  41fc66:	inc    esi
  41fc67:	popa   
  41fc68:	pop    esp
  41fc69:	sub    BYTE PTR ds:0xe7376468,bh
  41fc6f:	gs push ebx
  41fc71:	cmp    DWORD PTR [ebx+0x5d],ecx
  41fc74:	push   esi
  41fc75:	cmp    eax,0x3d4f5805
  41fc7a:	out    0x2f,eax
  41fc7c:	add    eax,0x2460133c
  41fc81:	cmp    eax,0x32225237
  41fc86:	or     eax,0x16000024
  41fc8b:	xor    al,BYTE PTR ds:0xf9281a58
  41fc91:	push   0x6502f347
  41fc96:	sbb    ecx,DWORD PTR [ecx]
  41fc98:	lds    esp,FWORD PTR [ecx+0x17]
  41fc9b:	ss out 0x32,eax
  41fc9e:	repnz sub bl,bl
  41fca1:	push   esi
  41fca2:	sbb    BYTE PTR [edi],dh
  41fca4:	les    ebp,FWORD PTR [edi]
  41fca6:	add    eax,0x1737ad59
  41fcab:	gs test eax,0xcc34f358
  41fcb1:	push   edi
  41fcb2:	daa    
  41fcb3:	pop    ecx
  41fcb4:	mov    ecx,0x2ae25e
  41fcb9:	or     DWORD PTR [ecx],eax
  41fcbb:	pop    ebp
  41fcbc:	push   eax
  41fcbd:	lea    eax,[edi+0x44976762]
  41fcc3:	pop    eax
  41fcc4:	ins    DWORD PTR es:[edi],dx
  41fcc5:	xchg   DWORD PTR [eax-0x6064a0c4],ebx
  41fccb:	gs inc edx
  41fccd:	xchg   esp,eax
  41fcce:	xor    BYTE PTR ds:0x37547d63,0x6d
  41fcd5:	mov    gs,WORD PTR [edx-0x5d79af17]
  41fcdb:	cmp    eax,0x26968875
  41fce0:	pop    esp
  41fce1:	sub    ebx,DWORD PTR [esi-0x70bb93cb]
  41fce7:	pop    ecx
  41fce8:	jb     0x41fd30
  41fcea:	mov    BYTE PTR [ebx],ch
  41fcec:	and    BYTE PTR [edi],ah
  41fcee:	add    BYTE PTR [eax],al
  41fcf0:	pop    ds
  41fcf1:	pop    ecx
  41fcf2:	and    BYTE PTR [edx],ch
  41fcf4:	sub    ah,BYTE PTR [bp+di+0x4f]
  41fcf8:	outs   dx,DWORD PTR ds:[esi]
  41fcf9:	gs dec ebx
  41fcfb:	dec    eax
  41fcfc:	push   0x33
  41fcfe:	add    BYTE PTR [edx],bl
  41fd00:	and    BYTE PTR [ebx],ch
  41fd02:	je     0x41fd22
  41fd04:	and    dh,BYTE PTR [edi]
  41fd06:	arpl   WORD PTR ds:0x3d465905,di
  41fd0c:	jae    0x41fd73
  41fd0e:	inc    edx
  41fd0f:	adc    al,0x27
  41fd11:	xor    eax,0x5964fd63
  41fd16:	jb     0x41fd26
  41fd18:	lock sub ah,BYTE PTR [eax]
  41fd1b:	das    
  41fd1c:	dec    edi
  41fd1d:	pop    ecx
  41fd1e:	pop    esp
  41fd1f:	push   ds
  41fd20:	sbb    edi,DWORD PTR ds:0x381ad667
  41fd26:	add    BYTE PTR [edx-0x218bd4ef],bh
  41fd2c:	jecxz  0x41fd64
  41fd2e:	arpl   WORD PTR [ebp+0x6c3606],bp
  41fd34:	jb     0x41fd66
  41fd36:	je     0x41fd88
  41fd38:	mov    WORD PTR [edx+0x6b],fs
  41fd3b:	data16 imul BYTE PTR ds:[edx+0x66]
  41fd40:	cli    
  41fd41:	push   edi
  41fd42:	pop    ebp
  41fd43:	jb     0x41fd10
  41fd45:	lock inc ecx
  41fd47:	jne    0x41fd0b
  41fd49:	pusha  
  41fd4a:	popa   
  41fd4b:	je     0x41fd3b
  41fd4d:	pop    edx
  41fd4e:	imul   ebp,DWORD PTR [edi-0x38],0xffffffec
  41fd52:	inc    ebp
  41fd53:	push   esp
  41fd54:	add    BYTE PTR [eax],al
  41fd56:	mov    esi,0xb76c3eec
  41fd5b:	xor    DWORD PTR [esi+0x74],ebp
  41fd5e:	mov    dl,0xff
  41fd60:	outs   dx,DWORD PTR ds:[esi]
  41fd61:	je     0x41fd2a
  41fd63:	pop    edi
  41fd64:	outs   dx,BYTE PTR ds:[esi]
  41fd65:	jae    0x41fd55
  41fd67:	stc    
  41fd68:	push   0x66
  41fd6a:	call   0x41f9:0x7b725d56
  41fd71:	push   eax
  41fd72:	sub    BYTE PTR [ecx],al
  41fd74:	push   eax
  41fd75:	add    BYTE PTR [edx],dl
  41fd77:	sub    al,0x6f
  41fd79:	je     0x41fda8
  41fd7b:	sub    BYTE PTR [edi+0x73],ch
  41fd7e:	xchg   DWORD PTR [esi+0x6e],ebx
  41fd81:	inc    esi
  41fd82:	pop    es
  41fd83:	sub    DWORD PTR [ecx+0x0],esp
  41fd86:	jge    0x41fdec
  41fd88:	je     0x41fdef
  41fd8a:	dec    ebp
  41fd8b:	push   ecx
  41fd8c:	gs jb  0x41fd2d
  41fd8f:	add    ebp,DWORD PTR [esi+0x73]
  41fd92:	cmp    ch,BYTE PTR [esp+ebp*2]
  41fd95:	ins    BYTE PTR es:[edi],dx
  41fd96:	push   0x64
  41fd98:	jb     0x41fdcb
  41fd9a:	sahf   
  41fd9b:	push   ds
  41fd9c:	js     0x41fe0b
  41fd9e:	inc    edx
  41fd9f:	add    eax,0x2b83535c
  41fda4:	jb     0x41fe1a
  41fda6:	test   al,0xf8
  41fda8:	dec    edi
  41fda9:	add    BYTE PTR [eax+0x476f762b],ch
  41fdaf:	in     al,0x5a
  41fdb1:	je     0x41fd9d
  41fdb3:	loop   0x41fdd0
  41fdb5:	fs out 0x7d,al
  41fdb8:	add    DWORD PTR [eax+0x0],ecx
  41fdbb:	add    dh,bl
  41fdbd:	adc    BYTE PTR [ebp+0x6d],0xd5
  41fdc1:	js     0x41fdde
  41fdc3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41fdc5:	jbe    0x41fdc8
  41fdc7:	pop    edi
  41fdc8:	mov    ds:0x9c624f8e,eax
  41fdcd:	shl    BYTE PTR [ebp+0x5f],1
  41fdd0:	mov    bl,0xb2
  41fdd2:	push   edx
  41fdd3:	jae    0x41fd83
  41fdd5:	xchg   ebx,eax
  41fdd6:	pop    eax
  41fdd7:	mov    cs:0x73005591,eax
  41fddd:	xchg   esi,eax
  41fdde:	push   esi
  41fddf:	jb     0x41fd86
  41fde1:	xchg   DWORD PTR [ebx+0x54],eax
  41fde4:	xchg   edi,eax
  41fde5:	mov    dl,0x30
  41fde7:	ins    DWORD PTR es:[edi],dx
  41fde8:	popa   
  41fde9:	pop    esi
  41fdea:	push   ebx
  41fdeb:	pop    edi
  41fdec:	jne    0x41fe33
  41fdee:	xor    BYTE PTR [edx+esi*2+0x64],dl
  41fdf2:	bound  ebp,QWORD PTR [ebp-0x77]
  41fdf5:	div    BYTE PTR [ebx]
  41fdf7:	add    BYTE PTR [esi+0x58],ch
  41fdfa:	dec    edi
  41fdfb:	je     0x41fe63
  41fdfd:	dec    esi
  41fdfe:	pusha  
  41fdff:	jo     0x41fe67
  41fe01:	(bad)  
  41fe02:	pop    ebx
  41fe03:	add    BYTE PTR [edi+edi*8],dl
  41fe06:	gs je  0x41fe39
  41fe09:	adc    DWORD PTR [edx+0x63],edx
  41fe0c:	adc    eax,DWORD PTR [ebx]
  41fe0e:	pop    ebx
  41fe0f:	je     0x41fe37
  41fe11:	test   BYTE PTR [ebp+0x46],0x9
  41fe15:	div    BYTE PTR [ebx]
  41fe17:	add    BYTE PTR [esp+eax*8],al
  41fe1a:	data16 sub dl,BYTE PTR fs:[eax]
  41fe1e:	pop    eax
  41fe1f:	add    BYTE PTR [bx+si],al
  41fe22:	es push es
  41fe24:	das    
  41fe25:	pop    edi
  41fe26:	repz mov ch,0x1
  41fe29:	inc    ecx
  41fe2a:	cmc    
  41fe2b:	or     ah,cl
  41fe2d:	addr16 in al,0x2e
  41fe30:	rcr    DWORD PTR [edx+0x8],cl
  41fe33:	sub    eax,0x2be45baa
  41fe38:	ret    0xf603
  41fe3b:	das    
  41fe3c:	int    0x57
  41fe3e:	fisubr DWORD PTR [ecx]
  41fe40:	mov    ecx,0xc65beb66
  41fe45:	push   edi
  41fe46:	mov    al,ds:0x8145a55d
  41fe4b:	push   ebp
  41fe4c:	mov    bh,0x2f
  41fe4e:	cmp    BYTE PTR [ecx],0x93
  41fe51:	pop    edx
  41fe52:	call   0x9a28:0x77039a2f
  41fe59:	push   eax
  41fe5a:	xchg   edx,eax
  41fe5b:	cs jns 0x41fec5
  41fe5e:	inc    edi
  41fe5f:	push   esp
  41fe60:	jp     0x41fec8
  41fe62:	xchg   ebp,eax
  41fe63:	dec    edi
  41fe64:	mov    BYTE PTR [esi+0x64],bl
  41fe67:	or     DWORD PTR [edi+0x2835765c],ebx
  41fe6d:	pusha  
  41fe6e:	jne    0x41feaa
  41fe70:	out    0x35,eax
  41fe72:	fs sub al,0x46
  41fe75:	push   eax
  41fe76:	fs inc ebp
  41fe78:	inc    eax
  41fe79:	push   esi
  41fe7a:	inc    edi
  41fe7b:	pop    ecx
  41fe7c:	push   esi
  41fe7d:	push   esi
  41fe7e:	pop    ebx
  41fe7f:	or     DWORD PTR [edi],ebp
  41fe81:	pop    ebx
  41fe82:	push   esi
  41fe83:	xor    eax,0x6525
  41fe88:	sub    al,0x24
  41fe8a:	out    0x33,eax
  41fe8c:	sub    bh,BYTE PTR [ebx]
  41fe8e:	sbb    eax,DWORD PTR [esp+edx*1]
  41fe91:	cmp    al,BYTE PTR [esi+edx*2]
  41fe94:	sbb    DWORD PTR [eax],ebp
  41fe96:	add    al,0x61
  41fe98:	inc    edi
  41fe99:	pop    ecx
  41fe9a:	or     BYTE PTR [edi+0x16],dl
  41fe9d:	ss push ss
  41fe9f:	push   esi
  41fea0:	sub    ecx,DWORD PTR [ecx]
  41fea2:	das    
  41fea3:	pop    ebx
  41fea4:	push   ss
  41fea5:	xor    eax,0x3b222d00
  41feaa:	dec    esi
  41feab:	or     BYTE PTR [esi],bl
  41fead:	sub    al,BYTE PTR [eax]
  41feaf:	mov    edx,0xd674270d
  41feb4:	jecxz  0x41fef0
  41feb6:	arpl   WORD PTR [ebp-0x3899d3f7],si
  41febc:	out    0x29,eax
  41febe:	inc    ecx
  41febf:	mov    esp,0xce50e8f4
  41fec4:	out    0x34,al
  41fec6:	jne    0x41fe90
  41fec8:	call   0x6335:0x9ea05c2a
  41fecf:	fwait
  41fed0:	mov    gs,WORD PTR [edx]
  41fed2:	je     0x41fe91
  41fed4:	je     0x41ff11
  41fed6:	ins    DWORD PTR es:[edi],dx
  41fed7:	pop    DWORD PTR [ebx+0x449a632d]
  41fedd:	pop    eax
  41fede:	ins    DWORD PTR es:[edi],dx
  41fedf:	pop    DWORD PTR [eax-0x5884a0cc]
  41fee5:	pop    ebp
  41fee6:	inc    esi
  41fee7:	popf   
  41fee8:	xor    al,0x54
  41feea:	pop    edi
  41feeb:	jnp    0x41feed
  41feed:	add    BYTE PTR [edi+0x5d],ah
  41fef0:	inc    ecx
  41fef1:	cmp    DWORD PTR ss:[edx+0x46],ecx
  41fef5:	xor    eax,0x40515d33
  41fefa:	ja     0x41ff26
  41fefc:	jno    0x41fee7
  41fefe:	sbb    al,0x2c
  41ff00:	jno    0x41ff3f
  41ff02:	dec    ebx
  41ff03:	pop    edx
  41ff04:	jno    0x41ff4a
  41ff06:	jno    0x41ff11
  41ff08:	push   eax
  41ff09:	inc    esi
  41ff0a:	sbb    DWORD PTR ds:0x9741900,esi
  41ff10:	push   eax
  41ff11:	sbb    eax,0x3a005b13
  41ff16:	jo     0x41ff69
  41ff18:	add    BYTE PTR [ecx],bl
  41ff1a:	stc    
  41ff1b:	sub    esp,DWORD PTR [esi+0x0]
  41ff1e:	jmp    FWORD PTR [ecx]
  41ff20:	jno    0x41ff22
  41ff22:	js     0x41ff75
  41ff24:	imul   ebp,DWORD PTR [esi+ebx*4-0x1b],0xe55e5445
  41ff2c:	inc    eax
  41ff2d:	js     0x41ffad
  41ff2f:	push   ebp
  41ff30:	imul   esi,DWORD PTR [edx-0x7d],0x53
  41ff34:	add    BYTE PTR [ebx+0x79],dl
  41ff37:	daa    
  41ff38:	je     0x41ffb1
  41ff3a:	(bad)  
  41ff3b:	push   ebx
  41ff3c:	popa   
  41ff3d:	pop    esp
  41ff3e:	mov    al,ds:0xa3204fed
  41ff43:	push   ecx
  41ff44:	jo     0x41ffb2
  41ff46:	jns    0x41ff9b
  41ff48:	popa   
  41ff49:	jb     0x41ff25
  41ff4b:	dec    edx
  41ff4c:	push   esp
  41ff4d:	push   eax
  41ff4e:	dec    esi
  41ff4f:	dec    edx
  41ff50:	js     0x41ffc2
  41ff52:	add    BYTE PTR [eax],al
  41ff54:	ficomp DWORD PTR [edi+0x72]
  41ff57:	gs int3 
  41ff59:	in     al,0x52
  41ff5b:	outs   dx,DWORD PTR ds:[esi]
  41ff5c:	mov    esp,0xcf706f5b
  41ff61:	and    esp,DWORD PTR [ecx+0x5c]
  41ff64:	fisttp DWORD PTR [edx+0x3f]
  41ff67:	push   esp
  41ff68:	mov    ecx,0xcf426c5f
  41ff6d:	push   esi
  41ff6e:	sub    DWORD PTR [edx],esi
  41ff70:	mov    esp,0x9342000c
  41ff75:	pop    ecx
  41ff76:	je     0x41ffe7
  41ff78:	js     0x41ffd0
  41ff7a:	add    BYTE PTR [ebx-0x77],dl
  41ff7d:	daa    
  41ff7e:	je     0x41fff7
  41ff80:	(bad)  
  41ff81:	push   ebx
  41ff82:	popa   
  41ff83:	pop    esp
  41ff84:	and    cl,bh
  41ff86:	dec    edi
  41ff87:	and    BYTE PTR [ebx],ah
  41ff89:	dec    ebp
  41ff8a:	jo     0x41fff8
  41ff8c:	or     DWORD PTR [ebx+0x61],edx
  41ff8f:	jb     0x41ffdb
  41ff91:	cmc    
  41ff92:	jno    0x420003
  41ff94:	inc    eax
  41ff95:	pusha  
  41ff96:	ins    BYTE PTR es:[edi],dx
  41ff97:	gs dec ebp
  41ff99:	add    eax,0x1f476150
  41ff9e:	push   ebx
  41ff9f:	jne    0x41ffc9
  41ffa1:	and    BYTE PTR [eax+0x0],ah
  41ffa4:	not    DWORD PTR [eax]
  41ffa6:	push   ebx
  41ffa7:	jno    0x41ffb9
  41ffa9:	or     edx,DWORD PTR [esi+0x64]
  41ffac:	sbb    edi,DWORD PTR [ecx-0x15b89caf]
  41ffb2:	push   esi
  41ffb3:	jno    0x41ffb0
  41ffb5:	mov    cl,0x35
  41ffb7:	ins    DWORD PTR es:[edi],dx
  41ffb8:	add    BYTE PTR [eax],al
  41ffba:	loopne 0x41ff94
  41ffbc:	push   edi
  41ffbd:	add    bh,dh
  41ffbf:	ret    0x7453
  41ffc2:	inc    edi
  41ffc3:	imul   edx,DWORD PTR [edi+0x67],0x6c62d8db
  41ffca:	not    eax
  41ffcc:	dec    ebp
  41ffcd:	push   0x704d6c47
  41ffd2:	xchg   esp,eax
  41ffd3:	leave  
  41ffd4:	dec    ebp
  41ffd5:	arpl   WORD PTR [ecx+0x6a],sp
  41ffd8:	push   esi
  41ffd9:	ins    BYTE PTR es:[edi],dx
  41ffda:	inc    edi
  41ffdb:	jle    0x42001c
  41ffdd:	jb     0x41ff8d
  41ffdf:	mov    esp,DWORD PTR [edx+0x74]
  41ffe2:	mov    ds:0x9e2e01df,al
  41ffe7:	xchg   esp,eax
  41ffe8:	pop    edx
  41ffe9:	add    BYTE PTR [ebx-0x6c],ch
  41ffec:	bound  ebp,QWORD PTR [esi-0x75]
  41ffef:	cmp    DWORD PTR [ebx+eiz*2-0x65],ebx
  41fff3:	outs   dx,DWORD PTR ds:[esi]
  41fff4:	pop    eax
  41fff5:	outs   dx,BYTE PTR ds:[esi]
  41fff6:	imul   ebx,DWORD PTR [ecx+0x5f],0x5345945c
  41fffd:	jno    0x42006d
  41ffff:	inc    ebx
  420000:	pop    edx
  420001:	jno    0x42004a
  420003:	out    dx,al
  420004:	xor    ah,BYTE PTR [ebx+0x54]
  420007:	call   FWORD PTR [eax+0x6d]
  42000a:	pop    ecx
  42000b:	inc    DWORD PTR [ebx]
  42000d:	push   ecx
  42000e:	xor    BYTE PTR [eax+edx*2+0x75],cl
  420012:	add    BYTE PTR es:[ebp+0x5c],bl
  420016:	sbb    DWORD PTR [ecx],ecx
  420018:	or     BYTE PTR [edx+0x3],bl
  42001b:	inc    edx
  42001c:	adc    bl,BYTE PTR [edi+0x0]
  42001f:	add    BYTE PTR [ebx],al
  420021:	pop    eax
  420022:	or     al,0x65
  420024:	adc    al,0x37
  420026:	add    al,0x42
  420028:	out    dx,eax
  420029:	or     BYTE PTR [edx],ch
  42002b:	pop    ecx
  42002c:	sbb    DWORD PTR [ebx],esp
  42002e:	adc    BYTE PTR [ecx+0x27],ah
  420031:	pop    ecx
  420032:	or     BYTE PTR [eax-0x11],dl
  420035:	or     BYTE PTR [eax+ebx*2],dl
  420038:	sti    
  420039:	ss enter 0xf41,0x59
  42003e:	out    0x27,eax
  420040:	(bad)  
  420041:	xor    ebx,ebx
  420043:	pop    esi
  420044:	(bad)  
  420045:	jmp    0x41a3:0x8e356ce
  42004c:	repz pop eax
  42004e:	cdq    
  42004f:	dec    esi
  420050:	mov    dh,0x31
  420052:	out    0x35,eax
  420054:	mov    ah,0x36
  420056:	mov    edi,0x8c35a834
  42005b:	sbb    DWORD PTR [edi+0x76038b2c],ebp
  420061:	and    al,0x99
  420063:	push   ecx
  420064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420065:	aaa    
  420066:	out    0x2e,eax
  420068:	xchg   esi,eax
  420069:	and    al,0x79
  42006b:	pop    ecx
  42006c:	push   0x9703842c
  420071:	sub    BYTE PTR [edx+0x54],bh
  420074:	jb     0x4200a0
  420076:	jns    0x4200d7
  420078:	inc    edi
  420079:	inc    ebx
  42007a:	pop    ebx
  42007b:	push   esp
  42007c:	xchg   edi,eax
  42007d:	sub    bl,BYTE PTR [ecx+0x50]
  420080:	inc    edi
  420081:	push   esi
  420082:	inc    esi
  420083:	pop    esi
  420084:	add    BYTE PTR [eax],al
  420086:	push   ebx
  420087:	xor    cl,BYTE PTR [eax+0x52]
  42008a:	fs pop ebp
  42008c:	sub    dl,BYTE PTR [edx+0x50]
  42008f:	and    al,0x39
  420091:	sub    BYTE PTR [edx],bl
  420093:	and    al,0x0
  420095:	dec    ebx
  420096:	je     0x4200ba
  420098:	je     0x4200de
  42009a:	jnp    0x4200d2
  42009c:	bound  edx,QWORD PTR ds:0x468380a
  4200a2:	cmc    
  4200a3:	or     BYTE PTR [ebx+ebp*1-0x6],bl
  4200a7:	xor    al,0x49
  4200a9:	add    cl,bh
  4200ab:	and    eax,0x2226e978
  4200b0:	je     0x4200c4
  4200b2:	and    ch,BYTE PTR [ebx]
  4200b4:	arpl   cx,si
  4200b6:	push   edx
  4200b7:	and    eax,0x2c2ce971
  4200bc:	jno    0x42009b
  4200be:	adc    bl,BYTE PTR [edx+0x6b]
  4200c1:	les    eax,FWORD PTR [esi+edx*2+0x71]
  4200c5:	int3   
  4200c6:	imul   BYTE PTR [edx]
  4200c8:	pop    edi
  4200c9:	mov    esp,0xc85008e7
  4200ce:	cmc    
  4200cf:	aaa    
  4200d0:	jne    0x4200a0
  4200d2:	xchg   esi,eax
  4200d3:	and    eax,0x37919900
  4200d8:	je     0x4200c3
  4200da:	jne    0x420108
  4200dc:	popfw  
  4200de:	jns    0x42013a
  4200e0:	jb     0x420066
  4200e2:	push   0xa3997846
  4200e7:	sub    eax,DWORD PTR [ebx+ebx*4+0x0]
  4200eb:	add    BYTE PTR [ebx+0x33],dh
  4200ee:	arpl   WORD PTR [ebp+0x7a712655],sp
  4200f4:	mov    ds:0x447a6e2c,eax
  4200f9:	pop    ebp
  4200fa:	inc    ebx
  4200fb:	jno    0x420091
  4200fd:	pop    edx
  4200fe:	outs   dx,BYTE PTR ds:[esi]
  4200ff:	sub    eax,0x44762295
  420104:	dec    ebx
  420105:	pop    ebp
  420106:	fs pop ebx
  420108:	jp     0x42013d
  42010a:	arpl   WORD PTR [edx+0x39],bx
  42010d:	das    
  42010e:	jno    0x420110
  420110:	fsubrp st(7),st
  420112:	outs   dx,DWORD PTR ds:[esi]
  420113:	popa   
  420114:	jge    0x42016c
  420116:	jae    0x420187
  420118:	jl     0x420143
  42011a:	and    ah,BYTE PTR [eax]
  42011c:	mov    ah,0xe5
  42011e:	and    DWORD PTR [eax],eax
  420120:	jl     0x420133
  420122:	add    BYTE PTR [ebx+0x51],dl
  420125:	pop    ebx
  420126:	je     0x42019f
  420128:	dec    edi
  420129:	push   edi
  42012a:	popa   
  42012b:	pop    esp
  42012c:	imul   ecx,DWORD PTR [ebp+0x70],0x61
  420130:	xor    BYTE PTR [ecx+0x72],cl
  420133:	imul   edi,DWORD PTR [eax+0x28],0x55764500
  42013a:	pop    ebp
  42013b:	outs   dx,BYTE PTR ds:[esi]
  42013c:	sub    dl,BYTE PTR [edi+0x65]
  42013f:	jbe    0x4201bc
  420141:	loop   0x42018a
  420143:	outs   dx,DWORD PTR ds:[esi]
  420144:	xchg   ebx,eax
  420145:	sub    BYTE PTR [eax],al
  420147:	push   ebx
  420148:	mov    edx,DWORD PTR [edi+0x76]
  42014b:	gs ins BYTE PTR es:[edi],dx
  42014d:	add    eax,0x7351
  420152:	jnp    0x4201ab
  420154:	dec    esi
  420155:	popa   
  420156:	adc    ebp,DWORD PTR [edx]
  420158:	add    BYTE PTR [eax+0xf],dl
  42015b:	pop    esp
  42015c:	outs   dx,DWORD PTR ds:[esi]
  42015d:	ja     0x420150
  42015f:	pop    edx
  420160:	add    BYTE PTR fs:[ecx],al
  420163:	std    
  420164:	pop    esp
  420165:	jae    0x420124
  420167:	inc    edi
  420168:	imul   esi,DWORD PTR [edx-0x36],0xc
  42016c:	inc    esp
  42016d:	imul   ebp,DWORD PTR [ecx+ebp*1+0x5ab1745f],0x5fdd0075
  420178:	data16 je 0x4201f4
  42017b:	sub    eax,0xfec26572
  420180:	ds dec eax
  420182:	ds cli 
  420184:	push   0x66
  420186:	jp     0x4201ce
  420188:	pop    ebp
  420189:	jb     0x4201d2
  42018b:	inc    ebp
  42018c:	sub    BYTE PTR [ecx+0x63],al
  42018f:	inc    ecx
  420190:	dec    edi
  420191:	jno    0x4201f1
  420193:	inc    ebx
  420194:	ds push esp
  420196:	pop    ss
  420197:	push   ss
  420198:	ds push esp
  42019a:	pop    ss
  42019b:	loope  0x4201fb
  42019d:	popa   
  42019e:	and    ch,bh
  4201a0:	push   ebp
  4201a1:	je     0x4201d7
  4201a3:	mov    ds:0xf317743b,al
  4201a8:	pop    esp
  4201a9:	jb     0x4201bc
  4201ab:	add    eax,0x1e090052
  4201b0:	push   esp
  4201b1:	push   ebx
  4201b2:	adc    al,0x5
  4201b4:	push   edx
  4201b5:	dec    esi
  4201b6:	add    BYTE PTR [eax],al
  4201b8:	out    0x4,al
  4201ba:	pop    ebp
  4201bb:	add    BYTE PTR [ecx],al
  4201bd:	mov    dh,0x51
  4201bf:	push   eax
  4201c0:	out    0xb2,al
  4201c2:	push   eax
  4201c3:	jne    0x42019d
  4201c5:	rcr    DWORD PTR [ebp+0x0],cl
  4201c8:	add    BYTE PTR [eax+0x4d],dh
  4201cb:	jo     0x4201c4
  4201cd:	rcl    BYTE PTR [eax+0x71],0xd8
  4201d1:	jbe    0x420222
  4201d3:	fs inc edi
  4201d5:	push   0xd98b704d
  4201da:	dec    edi
  4201db:	arpl   WORD PTR [esi+esi*2-0x5d518dac],sp
  4201e2:	xor    BYTE PTR [ebp-0x7f],cl
  4201e5:	jbe    0x420213
  4201e7:	aas    
  4201e8:	jne    0x420257
  4201ea:	and    eax,0x216a844e
  4201ef:	push   ecx
  4201f0:	mov    al,ds:0xa6754d90
  4201f5:	xor    al,0x5e
  4201f7:	pop    esp
  4201f8:	mov    DWORD PTR [esi-0x619f91a6],eax
  4201fe:	inc    edx
  4201ff:	popa   
  420200:	fs aaa 
  420202:	dec    esi
  420203:	outs   dx,BYTE PTR ds:[esi]
  420204:	jae    0x42020f
  420206:	pop    edx
  420207:	add    al,0x76
  420209:	sub    BYTE PTR [ebp+0x50],al
  42020c:	push   edx
  42020d:	sub    bl,BYTE PTR [ecx+0x5f]
  420210:	jae    0x420261
  420212:	xor    esi,DWORD PTR [esi+eax*4]
  420215:	and    eax,0x3d315f50
  42021a:	sbb    esi,DWORD PTR [ecx]
  42021c:	add    BYTE PTR [eax],al
  42021e:	and    BYTE PTR ds:0x5c47514c,bh
  420224:	ds pop esi
  420226:	xor    eax,DWORD PTR [eax+0x8]
  420229:	push   edx
  42022a:	and    al,0x55
  42022c:	cmp    dl,BYTE PTR [ebp+0x21]
  42022f:	cmp    eax,0x3b22162f
  420234:	push   es
  420235:	sub    BYTE PTR [ecx],al
  420237:	pop    ebp
  420238:	pop    ss
  420239:	inc    ecx
  42023a:	repz and DWORD PTR [esi+edx*2],eax
  42023e:	repz push esp
  420240:	sbb    bl,BYTE PTR [ebx-0x5]
  420243:	sub    eax,0x281903fa
  420248:	fbld   TBYTE PTR [eax+0x47]
  42024b:	out    0xcd,eax
  42024d:	push   edi
  42024e:	jmp    0x420258
  420250:	mov    bl,0x3c
  420252:	neg    DWORD PTR [ebx-0x42]
  420255:	pop    ebp
  420256:	sar    DWORD PTR [edi],cl
  420258:	enter  0xa451,0x55
  42025c:	mov    ds:0xca2cb55a,eax
  420261:	dec    edi
  420262:	mov    ds:0x7a23b03b,al
  420267:	cmp    DWORD PTR [eax+edx*2+0x5bba5547],ebx
  42026e:	js     0x4202ab
  420270:	mov    WORD PTR [edi+0x76],ds
  420273:	sub    al,0x93
  420275:	dec    edi
  420276:	mov    al,ds:0x31508e27
  42027b:	sub    cl,BYTE PTR [edx+0x554750]
  420281:	call   0x8472:0x568c0000
  420288:	mov    BYTE PTR [eax+0x63],bl
  42028b:	pop    ebp
  42028c:	pop    ds
  42028d:	outs   dx,BYTE PTR cs:[esi]
  42028f:	inc    esi
  420290:	adc    BYTE PTR [edi+ebp*1+0x36],dl
  420294:	fist   DWORD PTR [ebp+0x33]
  420297:	jmp    DWORD PTR [ecx]
  420299:	sub    BYTE PTR [ecx-0x17],dh
  42029c:	and    BYTE PTR [eax+0x68],bl
  42029f:	dec    eax
  4202a0:	jno    0x4202cc
  4202a2:	sbb    bl,BYTE PTR fs:[esi+0x3d]
  4202a6:	je     0x4202e8
  4202a8:	jne    0x4202d6
  4202aa:	jno    0x420283
  4202ac:	pop    ecx
  4202ad:	es ins BYTE PTR es:[edi],dx
  4202af:	adc    BYTE PTR [edi+0x2a],bl
  4202b2:	add    BYTE PTR ds:0x1b5f20f8,dh
  4202b8:	pop    esi
  4202b9:	sub    eax,0x3d3f0c51
  4202be:	cvttps2pi mm7,QWORD PTR [bx+si]
  4202c2:	pop    ebp
  4202c3:	mov    eax,0xb45cf8e5
  4202c8:	jbe    0x420303
  4202ca:	outs   dx,DWORD PTR ds:[esi]
  4202cb:	aad    0x33
  4202cd:	cmp    eax,0x47f8e963
  4202d2:	ins    DWORD PTR es:[edi],dx
  4202d3:	iret   
  4202d4:	push   ds
  4202d5:	sub    ah,BYTE PTR [ebx-0x56]
  4202d8:	(bad)  
  4202da:	and    BYTE PTR [edx-0x498bd08b],bl
  4202e0:	arpl   WORD PTR [ebx],di
  4202e2:	arpl   cx,bp
  4202e4:	pusha  
  4202e5:	sub    bl,BYTE PTR [edi-0x47]
  4202e8:	add    BYTE PTR [eax],al
  4202ea:	pop    esi
  4202eb:	cmp    eax,0x275fe970
  4202f0:	ins    BYTE PTR es:[edi],dx
  4202f1:	test   BYTE PTR [ebx+0x39],ah
  4202f4:	mov    WORD PTR cs:[edx+ebp*1+0x0],cs
  4202f9:	call   0xb87d:0x633d5b
  420300:	popa   
  420301:	popa   
  420302:	jb     0x42030e
  420304:	outs   dx,DWORD PTR ds:[esi]
  420305:	imul   esi,DWORD PTR [edx-0x1f],0xf7c72e6e
  42030c:	add    BYTE PTR fs:[edx+0x7e616159],cl
  420313:	push   edx
  420314:	pop    ebp
  420315:	jb     0x42029a
  420317:	sub    DWORD PTR [ebp+eiz*2+0x7f],ecx
  42031b:	std    
  42031c:	inc    ebp
  42031d:	push   esp
  42031e:	pop    esi
  42031f:	or     eax,0x51604f4f
  420324:	push   ebx
  420325:	inc    ecx
  420326:	dec    esp
  420327:	inc    eax
  420328:	pop    esp
  420329:	dec    esp
  42032a:	add    ebp,esp
  42032c:	outs   dx,DWORD PTR ds:[esi]
  42032d:	push   edi
  42032e:	dec    edi
  42032f:	jmp    DWORD PTR [eax+0x0]
  420332:	push   edi
  420333:	sti    
  420334:	outs   dx,BYTE PTR ds:[esi]
  420335:	je     0x420376
  420337:	stc    
  420338:	imul   edx,DWORD PTR [eax+0x3f],0xfffffff1
  42033c:	add    BYTE PTR [bp+si],dh
  42033f:	in     al,dx
  420340:	jae    0x4203a3
  420342:	and    ah,ah
  420344:	jno    0x420346
  420346:	dec    esi
  420347:	in     al,dx
  420348:	outs   dx,BYTE PTR ds:[esi]
  420349:	jae    0x4203bc
  42034b:	cli    
  42034c:	jno    0x4203b2
  42034e:	add    BYTE PTR [eax],al
  420350:	outs   dx,BYTE PTR ds:[esi]
  420351:	inc    ecx
  420352:	imul   esi,DWORD PTR [ebx+0x72],0x57
  420356:	pop    ebp
  420357:	ins    DWORD PTR es:[edi],dx
  420358:	or     DWORD PTR [ecx],0x51
  42035b:	jae    0x4202e0
  42035d:	sti    
  42035e:	dec    ebp
  42035f:	popa   
  420360:	sbb    esp,edx
  420362:	call   DWORD PTR [ecx+0x3]
  420365:	cli    
  420366:	push   0x74
  420368:	add    ecx,DWORD PTR [ebp+0x65]
  42036b:	jb     0x420370
  42036d:	in     al,dx
  42036e:	jae    0x4203df
  420370:	mov    esp,0xc94ffff5
  420375:	(bad)  
  420376:	jae    0x4203c6
  420378:	inc    edi
  420379:	xchg   ebp,eax
  42037a:	xor    BYTE PTR [edx-0x5e],ah
  42037d:	nop
  42037e:	add    DWORD PTR [esi-0x6c],eax
  420381:	xchg   edx,eax
  420382:	xor    ebp,DWORD PTR [ebp+0x73]
  420385:	and    DWORD PTR [esi],0x6d
  420388:	arpl   WORD PTR [edx+0x3e616d56],sp
  42038e:	cmp    bl,BYTE PTR [edi+0x55]
  420391:	inc    ebp
  420392:	pusha  
  420393:	dec    ebx
  420394:	push   ax
  420396:	cmp    BYTE PTR [edi+0x61],ah
  420399:	add    dl,BYTE PTR [edx+esi*2+0x5e]
  42039d:	inc    edi
  42039e:	ss ja  0x4203d4
  4203a1:	mov    ds:0xe075315d,al
  4203a6:	sub    BYTE PTR [ecx+ecx*1-0xa],dh
  4203aa:	xor    ebp,DWORD PTR [esi]
  4203ac:	push   ds
  4203ad:	hlt    
  4203ae:	sub    BYTE PTR [eax],al
  4203b0:	adc    esi,esp
  4203b2:	push   edx
  4203b3:	add    BYTE PTR [bx+si],al
  4203b6:	adc    ecx,DWORD PTR ds:0xc1e2e33
  4203bc:	sub    DWORD PTR [eax],eax
  4203be:	jmp    0x4203d3
  4203c0:	and    eax,0x2ab00b74
  4203c5:	jbe    0x4203a9
  4203c7:	mov    eax,ds:0xaef45f51
  4203cc:	pop    eax
  4203cd:	ins    DWORD PTR es:[edi],dx
  4203ce:	cmc    
  4203cf:	or     eax,0xddd55304
  4203d4:	add    DWORD PTR [ebx-0x2c],edx
  4203d7:	int3   
  4203d8:	xor    ecx,DWORD PTR [esi-0x1a]
  4203db:	int3   
  4203dc:	es add ch,dh
  4203df:	jb     0x420411
  4203e1:	je     0x42036e
  4203e3:	fnstenv [ebx]
  4203e5:	arpl   WORD PTR [esi+edi*2-0x5d518dd0],sp
  4203ec:	push   ecx
  4203ed:	ins    DWORD PTR es:[edi],dx
  4203ee:	mov    ch,0x7e
  4203f0:	add    DWORD PTR [ecx-0x50],edx
  4203f3:	or     DWORD PTR [ebp-0x66d56dc9],ecx
  4203f9:	es jae 0x420454
  4203fc:	xchg   BYTE PTR [esi],dh
  4203fe:	xchg   ebx,eax
  4203ff:	and    edi,eax
  420401:	push   ebp
  420402:	push   0x27358c3b
  420407:	pop    ebp
  420408:	test   BYTE PTR [edi+ebx*2],ah
  42040b:	and    eax,DWORD PTR [esi-0x7fd3a5d1]
  420411:	es push esi
  420413:	push   ebp
  420414:	ds daa 
  420416:	gs dec ebp
  420418:	pop    ecx
  420419:	sub    eax,DWORD PTR [eax]
  42041b:	add    BYTE PTR [ecx+0x2e],bl
  42041e:	xor    eax,DWORD PTR [ebp+0x5a]
  420421:	and    edi,DWORD PTR ds:0x503d2627
  420427:	xor    DWORD PTR [ecx],ebp
  420429:	cmp    bh,ah
  42042b:	push   esp
  42042c:	and    al,0x37
  42042e:	cmp    eax,0x305d3527
  420433:	xor    al,0x24
  420435:	or     DWORD PTR ds:0x29e8f758,ebp
  42043b:	push   ecx
  42043c:	add    DWORD PTR [ebp+0x39],ebx
  42043f:	push   ecx
  420440:	sti    
  420441:	or     BYTE PTR ds:0x36481758,ah
  420447:	push   edx
  420448:	inc    edi
  420449:	jecxz  0x420441
  42044b:	xor    eax,0x541308e9
  420450:	cmc    
  420451:	and    eax,DWORD PTR ds:0xda2df32b
  420457:	add    eax,esi
  420459:	xor    eax,0x77c1105b
  42045e:	aas    
  42045f:	sub    dl,dh
  420461:	arpl   WORD PTR [esi+0x2b],cx
  420464:	mov    ebx,0x6bfdb73d
  420469:	loop   0x420451
  42046b:	sub    edi,DWORD PTR [ebx+0x73b9003d]
  420471:	out    dx,eax
  420472:	sub    al,0xfe
  420474:	inc    esp
  420475:	sub    esi,DWORD PTR [ecx+ebx*4+0x1a]
  420479:	out    0x2c,al
  42047b:	jmp    0x9ba53dd7
  420480:	add    BYTE PTR [eax],al
  420482:	or     DWORD PTR gs:[ebp-0x78],esi
  420486:	ss sub eax,0x3d258d2e
  42048c:	add    BYTE PTR [esi+0x7d66249b],bl
  420492:	das    
  420493:	push   edx
  420494:	jb     0x42041a
  420496:	add    BYTE PTR [eax+esi*2+0x4c],0x15
  42049b:	push   edx
  42049c:	and    BYTE PTR [edx],bh
  42049e:	and    BYTE PTR [ebx],ch
  4204a0:	je     0x420500
  4204a2:	and    dh,BYTE PTR [edi]
  4204a4:	arpl   cx,bp
  4204a6:	adc    BYTE PTR [edx+0x71],dl
  4204a9:	cmp    eax,0x3b6746a3
  4204ae:	pop    esi
  4204af:	sub    BYTE PTR [esi+eax*2+0x75],dh
  4204b3:	cmp    dh,BYTE PTR [ecx]
  4204b5:	jmp    0x1db356ca
  4204ba:	mov    ds:0x4f1a6e4b,eax
  4204bf:	push   edx
  4204c0:	ins    BYTE PTR es:[edi],dx
  4204c1:	add    eax,0x155f42a3
  4204c6:	xor    ecx,DWORD PTR [ecx]
  4204c8:	dec    ebp
  4204c9:	stc    
  4204ca:	das    
  4204cb:	aaa    
  4204cc:	pop    edi
  4204cd:	iret   
  4204ce:	cld    
  4204cf:	pop    esp
  4204d0:	dec    ebx
  4204d1:	and    eax,0x46837e7
  4204d6:	pop    ss
  4204d7:	and    eax,0x2614d65c
  4204dc:	outs   dx,BYTE PTR ds:[esi]
  4204dd:	mov    ebp,0xc46b2425
  4204e2:	and    esp,DWORD PTR [ebx]
  4204e4:	fs jmp 0x2abb04ea
  4204ea:	jno    0x4204ec
  4204ec:	or     ebp,esp
  4204ee:	jae    0x420560
  4204f0:	in     eax,dx
  4204f1:	div    DWORD PTR [ebp+0x73]
  4204f4:	inc    eax
  4204f5:	out    0x64,eax
  4204f7:	outs   dx,BYTE PTR ds:[esi]
  4204f8:	cs push edx
  4204fa:	cmp    eax,0x4547cb63
  4204ff:	push   esp
  420500:	push   ds
  420501:	push   edi
  420502:	imul   esp,DWORD PTR [esi-0x56],0xfffffffa
  420506:	pop    esp
  420507:	jb     0x4204d4
  420509:	push   ecx
  42050a:	cmp    eax,0x4547cb63
  42050f:	push   esp
  420510:	ficomp WORD PTR [eax+0x52]
  420513:	push   ebp
  420514:	ficom  WORD PTR [esi+0x4b]
  420517:	inc    esi
  420518:	mov    edx,0x2b523d5a
  42051d:	sub    DWORD PTR [edi],edi
  42051f:	ins    BYTE PTR es:[edi],dx
  420520:	jg     0x420518
  420522:	outs   dx,BYTE PTR ds:[esi]
  420523:	gs ins DWORD PTR es:[edi],dx
  420525:	sub    DWORD PTR [ecx+edi*2+0x1e],edx
  420529:	loopne 0x420576
  42052b:	imul   ecx,DWORD PTR [ecx+ebp*1],0xbc5c4377
  420532:	inc    ebx
  420533:	xor    bl,BYTE PTR [ebp-0x43]
  420536:	inc    ebx
  420537:	sub    eax,0x3436b596
  42053c:	jae    0x4204f7
  42053e:	ds inc ecx
  420540:	pop    ebp
  420541:	mov    eax,0xb058433f
  420546:	sub    dh,BYTE PTR [edi+ebx*4]
  420549:	dec    esp
  42054a:	ss xor al,0x0
  42054d:	add    BYTE PTR [ebx],ch
  42054f:	mov    bh,0x34
  420551:	inc    esi
  420552:	mov    ecx,0x5e7d34ba
  420557:	push   esi
  420558:	dec    ebx
  420559:	inc    esi
  42055a:	cmp    bl,BYTE PTR [edx+0x3d]
  42055d:	push   edx
  42055e:	stos   DWORD PTR es:[edi],eax
  42055f:	push   ecx
  420560:	aas    
  420561:	ins    BYTE PTR es:[edi],dx
  420562:	jg     0x42055a
  420564:	outs   dx,BYTE PTR ds:[esi]
  420565:	gs inc edi
  420567:	iret   
  420568:	pop    ebp
  420569:	push   esp
  42056a:	mov    esi,0xae4c28d2
  42056f:	les    ebx,FWORD PTR [ebp+0x79]
  420572:	outs   dx,BYTE PTR ds:[esi]
  420573:	gs inc esp
  420575:	xor    esi,DWORD PTR [edx-0x53]
  420578:	out    dx,eax
  420579:	ss jb  0x4205e1
  42057c:	hlt    
  42057d:	xor    DWORD PTR [ebp-0x2b],edx
  420580:	cmc    
  420581:	xor    al,0x5a
  420583:	xlat   BYTE PTR ds:[ebx]
  420584:	lock inc ecx
  420586:	test   bh,cl
  420588:	cld    
  420589:	sub    cl,BYTE PTR [edx+0x3231f9d6]
  42058f:	pusha  
  420590:	stc    
  420591:	das    
  420592:	cmp    BYTE PTR [ebx-0x11],dh
  420595:	inc    eax
  420596:	push   0xffffffa2
  420598:	ss addr16 push esp
  42059b:	test   DWORD PTR [ebx],esp
  42059d:	je     0x4205f6
  42059f:	push   ebx
  4205a0:	xor    dh,BYTE PTR [esi+0x54]
  4205a3:	add    BYTE PTR [ecx],ch
  4205a5:	outs   dx,BYTE PTR ds:[esi]
  4205a6:	pop    esi
  4205a7:	mov    ds:0x45346734,al
  4205ac:	es je  0x4205e6
  4205af:	sbb    BYTE PTR [ecx],ch
  4205b1:	outs   dx,BYTE PTR ds:[esi]
  4205b2:	add    BYTE PTR [eax],al
  4205b4:	push   ds
  4205b5:	mov    ds:0x10175443,al
  4205ba:	sub    esi,DWORD PTR [edi+0x26]
  4205bd:	inc    edi
  4205be:	and    eax,0x38006972
  4205c3:	jo     0x42060c
  4205c5:	call   0x7335621
  4205ca:	cmp    DWORD PTR [edi-0x18],ebx
  4205cd:	add    al,0x32
  4205cf:	test   BYTE PTR cs:[edx],0x4
  4205d3:	pop    esp
  4205d4:	adc    eax,0xd86e291a
  4205d9:	adc    ch,BYTE PTR [ebx]
  4205db:	data16 fld TBYTE PTR [edi+0x20]
  4205df:	ins    DWORD PTR es:[edi],dx
  4205e0:	jmp    0x1a3b:0xd62de708
  4205e7:	out    dx,al
  4205e8:	in     al,0x1c
  4205ea:	ret    
  4205eb:	add    edx,DWORD PTR [ecx-0x7fa345a4]
  4205f1:	pop    ds
  4205f2:	shl    BYTE PTR [edi],1
  4205f4:	inc    edi
  4205f5:	aas    
  4205f6:	call   0x9b36:0xbf5c8a50
  4205fd:	and    eax,0x9a934be
  420602:	mov    ch,0x50
  420604:	jbe    0x420651
  420606:	mov    BYTE PTR [eax],dh
  420608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420609:	neg    edx
  42060b:	pop    esp
  42060c:	mov    esp,DWORD PTR [esi]
  42060e:	mov    ch,BYTE PTR [ebx+eiz*2]
  420611:	es test eax,0x84276936
  420617:	xor    DWORD PTR [eax],eax
  420619:	add    BYTE PTR [edi+0x5c],al
  42061c:	lods   al,BYTE PTR ds:[esi]
  42061d:	inc    eax
  42061e:	mov    BYTE PTR [ebp-0x5c],dl
  420621:	dec    esi
  420622:	jp     0x42066b
  420624:	pop    ecx
  420625:	daa    
  420626:	fs inc edx
  420628:	push   ebx
  420629:	daa    
  42062a:	pop    esp
  42062b:	or     DWORD PTR [edi],esi
  42062d:	dec    ecx
  42062e:	jo     0x42062a
  420630:	sub    eax,0x30352445
  420635:	cmp    esp,DWORD PTR cs:[esi]
  420638:	cmp    DWORD PTR [esi],ebp
  42063a:	or     BYTE PTR ds:0x5c182722,bl
  420640:	cmp    ebp,DWORD PTR ds:0x49370913
  420646:	pusha  
  420647:	cli    
  420648:	cmp    eax,0xff351443
  42064d:	es icebp 
  42064f:	xor    al,0x0
  420651:	and    DWORD PTR [eax],ebx
  420653:	xor    eax,0x4417040c
  420658:	mov    eax,0x4517f2
  42065d:	sbb    eax,DWORD PTR [edx]
  42065f:	inc    ebp
  420660:	arpl   WORD PTR [edx],cx
  420662:	adc    eax,0x44dd7038
  420667:	pop    ecx
  420668:	dec    ecx
  420669:	sbb    BYTE PTR [esp+ecx*2+0x46],dl
  42066d:	fld    TBYTE PTR [ecx+0x2a]
  420670:	push   ecx
  420671:	mov    ebp,0xe900356b
  420676:	inc    esp
  420677:	or     DWORD PTR [eax],eax
  420679:	jmp    0xe9420fc2
  42067e:	add    BYTE PTR [eax],al
  420680:	inc    esp
  420681:	or     DWORD PTR [eax],eax
  420683:	jmp    0xe9420fcc
  420688:	inc    esp
  420689:	or     DWORD PTR [eax],eax
  42068b:	jmp    0xe9420fd4
  420690:	inc    esp
  420691:	or     DWORD PTR [eax],eax
  420693:	jmp    0xe9420fdc
  420698:	aaa    
  420699:	push   ds
  42069a:	ins    BYTE PTR es:[edi],dx
  42069b:	nop
  42069c:	xor    BYTE PTR [edx],ch
  42069e:	xor    edi,eax
  4206a0:	sub    BYTE PTR ds:0x1e17e96c,bl
  4206a6:	ins    BYTE PTR es:[edi],dx
  4206a7:	push   eax
  4206a8:	pop    ss
  4206a9:	sub    dh,BYTE PTR [ecx]
  4206ab:	ds sbb al,0x39
  4206ae:	arpl   WORD PTR [edi+0x4b],ax
  4206b1:	cmp    BYTE PTR [edi+0x3d],ch
  4206b4:	push   0x35
  4206b6:	arpl   dx,di
  4206b8:	or     eax,0x704e6c28
  4206bd:	sub    al,BYTE PTR [eax]
  4206bf:	cmp    bl,BYTE PTR [edx+0x1d]
  4206c2:	addr16 xor eax,0x195cf866
  4206c8:	pop    ecx
  4206c9:	sub    dh,BYTE PTR [eax+0x8]
  4206cc:	push   ecx
  4206cd:	sub    al,BYTE PTR [eax]
  4206cf:	sbb    bh,BYTE PTR [edx]
  4206d1:	sbb    eax,0xf8261567
  4206d6:	pop    esp
  4206d7:	add    BYTE PTR [ebp-0x22],ch
  4206da:	pusha  
  4206db:	jo     0x42073b
  4206dd:	imul   DWORD PTR [esp+ebp*2+0x47]
  4206e1:	stc    
  4206e2:	pusha  
  4206e3:	xor    eax,DWORD PTR [eax]
  4206e5:	add    BYTE PTR [ecx-0x1a],cl
  4206e8:	push   0x6c
  4206ea:	jae    0x4206cd
  4206ec:	ins    DWORD PTR es:[edi],dx
  4206ed:	pop    edi
  4206ee:	jl     0x4206dd
  4206f0:	jae    0x420757
  4206f2:	sbb    eax,0xfa716f0a
  4206f7:	fdiv   QWORD PTR [ebx+0x65]
  4206fa:	sub    eax,0xfa6f5f53
  4206ff:	clc    
  420700:	push   0x6be3b96e
  420705:	outs   dx,DWORD PTR ds:[esi]
  420706:	or     al,0xa
  420708:	add    BYTE PTR [ebp-0x47],ch
  42070b:	jmp    0x42077b
  42070d:	jno    0x4206c9
  42070f:	fdiv   QWORD PTR [ebx+0x65]
  420712:	sbb    eax,0x7a6c61a0
  420717:	or     ch,BYTE PTR [edi+0x71]
  42071a:	fcmovu st,st(4)
  42071c:	jae    0x420783
  42071e:	lods   eax,DWORD PTR ds:[esi]
  42071f:	push   edx
  420720:	imul   esi,DWORD PTR [eax-0x2d],0xffffffdf
  420724:	push   DWORD PTR [edx+0x5f]
  420727:	out    0x64,al
  420729:	je     0x4206ae
  42072b:	mov    dh,0x5c
  42072d:	arpl   WORD PTR [edx-0x1e],di
  420730:	outs   dx,BYTE PTR ds:[esi]
  420731:	gs scas al,BYTE PTR es:[edi]
  420733:	imul   BYTE PTR [esp+ebp*2+0x7]
  420737:	stc    
  420738:	pusha  
  420739:	xor    ebp,DWORD PTR [ecx-0xb]
  42073c:	jno    0x4207a3
  42073e:	outs   dx,BYTE PTR ds:[esi]
  42073f:	in     al,0x71
  420741:	gs scas al,BYTE PTR es:[edi]
  420743:	imul   BYTE PTR [esp+ebp*2+0x7]
  420747:	stc    
  420748:	pusha  
  420749:	xor    eax,DWORD PTR [eax]
  42074b:	add    BYTE PTR [ecx],cl
  42074d:	div    BYTE PTR [ebx+0x65]
  420750:	cs add eax,0x447716f
  420756:	sub    esi,DWORD PTR [edx+eiz*8-0x2e]
  42075a:	pop    edx
  42075b:	popa   
  42075c:	loopne 0x420771
  42075e:	das    
  42075f:	imul   ebx,ecx,0xe
  420762:	es ja  0x420740
  420765:	cld    
  420766:	xor    al,0x0
  420768:	aam    0xb0
  42076a:	and    eax,0xf6bcdb67
  42076f:	pop    esp
  420770:	in     al,0xbe
  420772:	and    eax,0x5ac4b273
  420777:	bound  ebp,QWORD PTR [ebx+0x4700236b]
  42077d:	mov    ds:0xa2470001,al
  420782:	add    DWORD PTR [eax],eax
  420784:	inc    edi
  420785:	mov    ds:0xa2470001,al
  42078a:	add    DWORD PTR [eax],eax
  42078c:	inc    edi
  42078d:	mov    ds:0xa2470001,al
  420792:	add    DWORD PTR [eax],eax
  420794:	inc    edi
  420795:	mov    ds:0xa2470001,al
  42079a:	add    DWORD PTR [eax],eax
  42079c:	inc    edi
  42079d:	xor    dh,BYTE PTR [ebx]
  42079f:	ins    DWORD PTR es:[edi],dx
  4207a0:	popa   
  4207a1:	cdq    
  4207a2:	and    eax,0x2cc45463
  4207a7:	outs   dx,BYTE PTR ds:[esi]
  4207a8:	outs   dx,BYTE PTR ds:[esi]
  4207a9:	mov    ds:0x3c607251,al
  4207ae:	sub    DWORD PTR [eax+eax*1+0x0],ebp
  4207b2:	bound  esp,QWORD PTR [edx+0x3d15714a]
  4207b8:	sub    BYTE PTR [edi+0x33],bl
  4207bb:	dec    ecx
  4207bc:	xor    ah,BYTE PTR [ebx+0x47]
  4207bf:	adc    ah,BYTE PTR [ecx]
  4207c1:	je     0x4207e2
  4207c3:	mov    ds:0x4a1b5f51,al
  4207c8:	push   eax
  4207c9:	ins    DWORD PTR es:[edi],dx
  4207ca:	add    bh,dl
  4207cc:	sbb    al,0x0
  4207ce:	adc    al,0x9
  4207d0:	adc    BYTE PTR [ecx],ah
  4207d2:	sbb    DWORD PTR [ecx*1+0x18383135],ebx
  4207d9:	sub    al,ah
  4207db:	xor    al,0x4
  4207dd:	add    al,0xf6
  4207df:	and    DWORD PTR [esi],ecx
  4207e1:	sub    bl,dl
  4207e3:	sbb    bh,dl
  4207e5:	jmp    0x43d38be
  4207ea:	(bad)  
  4207eb:	and    DWORD PTR [esi],eax
  4207ed:	sub    ah,dl
  4207ef:	sbb    bl,dl
  4207f1:	cmc    
  4207f2:	sbb    dh,BYTE PTR ds:0x38472fdf
  4207f8:	shl    BYTE PTR [eax],0xa9
  4207fb:	sbb    al,0xbd
  4207fd:	xor    al,0x76
  4207ff:	fstp   TBYTE PTR [edx+0xa09b33b]
  420805:	mul    BYTE PTR [edi-0x5b09f5f7]
  42080b:	or     DWORD PTR [edx],ecx
  42080d:	mul    BYTE PTR [ebp+0x7b3eba09]
  420813:	inc    esi
  420814:	stos   BYTE PTR es:[edi],al
  420815:	dec    edi
  420816:	add    BYTE PTR [eax],al
  420818:	daa    
  420819:	and    DWORD PTR [esi-0x77e48ccc],eax
  42081f:	es fs ffree st(6)
  420823:	push   ds
  420824:	pop    ecx
  420825:	sub    BYTE PTR [ecx+0x3a],bh
  420828:	push   edi
  420829:	xor    eax,0x38741f8c
  42082e:	test   BYTE PTR ds:0x1f542a61,dh
  420834:	sbb    ebp,ecx
  420836:	inc    ebx
  420837:	sub    ah,BYTE PTR [esi]
  420839:	aaa    
  42083a:	push   eax
  42083b:	xor    al,0x33
  42083d:	es inc ebx
  42083f:	push   esp
  420840:	adc    BYTE PTR [eax],bh
  420842:	cmp    dh,BYTE PTR [ecx]
  420844:	sbb    dh,BYTE PTR [edi]
  420846:	inc    ebx
  420847:	in     al,0xa
  420849:	push   edi
  42084a:	add    BYTE PTR [esi],ah
  42084c:	add    cl,ch
  42084e:	push   0x3e
  420850:	push   ecx
  420851:	dec    esi
  420852:	ins    BYTE PTR es:[edi],dx
  420853:	push   ss
  420854:	data16 and al,0x6e
  420857:	sbb    cl,BYTE PTR [ebx+0x43]
  42085a:	sbb    ebx,DWORD PTR [bx+si+0x23]
  42085e:	ins    DWORD PTR es:[edi],dx
  42085f:	adc    DWORD PTR [ebx+0x4d],ecx
  420862:	dec    ebx
  420863:	push   ss
  420864:	sub    DWORD PTR [esp+ebp*2],esp
  420867:	or     eax,0x464d24
  42086c:	adc    DWORD PTR [eax],ebp
  42086e:	data16 dec BYTE PTR [ecx*2+0x231fba00]
  420876:	je     0x42084e
  420878:	gs aaa 
  42087a:	arpl   WORD PTR [ebp+0x1c810000],si
  420880:	jp     0x420842
  420882:	push   0x21e95f1d
  420887:	loopne 0x4208b3
  420889:	jmp    0xf3b23df4
  42088e:	das    
  42088f:	fdivp  st(7),st
  420891:	shl    BYTE PTR [eax+0x35],0x70
  420895:	jecxz  0x4208b6
  420897:	fdivp  st(7),st
  420899:	nop
  42089a:	xor    BYTE PTR ds:0xddfa9a70,dh
  4208a0:	sub    al,0xe9
  4208a2:	es xor eax,0x2344d770
  4208a8:	addr16 jnp 0x4208ec
  4208ab:	inc    ebx
  4208ac:	push   esp
  4208ad:	cdq    
  4208ae:	adc    esp,DWORD PTR [edx]
  4208b0:	je     0x420836
  4208b2:	sbb    ebx,ebx
  4208b4:	arpl   WORD PTR [eax+0x17],cx
  4208b7:	or     DWORD PTR [ecx+0x44],edx
  4208ba:	push   0x3e
  4208bc:	ins    DWORD PTR es:[edi],dx
  4208bd:	inc    edi
  4208be:	ins    BYTE PTR es:[edi],dx
  4208bf:	es ja  0x4208ab
  4208c2:	sbb    BYTE PTR [esi],bh
  4208c4:	ins    DWORD PTR es:[edi],dx
  4208c5:	add    BYTE PTR [esp+ebx*8],al
  4208c8:	imul   ebp,DWORD PTR [edi+ecx*1+0x51],0x4f
  4208cd:	cmovo  ebp,DWORD PTR gs:[ebx+0x6e]
  4208d2:	add    eax,0x9e5c74e8
  4208d7:	in     al,dx
  4208d8:	imul   ebp,DWORD PTR [edi+0x4d],0xffffffde
  4208dc:	call   FWORD PTR [ebx+0x28]
  4208df:	loope  0x42094b
  4208e1:	arpl   WORD PTR [eax],ax
  4208e3:	add    BYTE PTR [ebp+0x51],al
  4208e6:	inc    edx
  4208e7:	jb     0x42093a
  4208e9:	fisubr DWORD PTR [esi+0x65]
  4208ec:	pop    esp
  4208ed:	push   edx
  4208ee:	add    BYTE PTR [ebp+0x41],cl
  4208f1:	out    dx,eax
  4208f2:	fs ins BYTE PTR es:[edi],dx
  4208f4:	push   edx
  4208f5:	in     eax,0xff
  4208f7:	pop    ebx
  4208f8:	xchg   ebx,eax
  4208f9:	jecxz  0x420974
  4208fb:	imul   edx,DWORD PTR [edx],0xfe5c5ce2
  420901:	imul   DWORD PTR [edx+0x66]
  420904:	pop    es
  420905:	loop   0x420967
  420907:	jae    0x4208eb
  420909:	add    eax,0xda086f4f
  42090e:	jb     0x420971
  420910:	fsub   st(0),st
  420912:	pop    ebx
  420913:	dec    esp
  420914:	or     ebp,ecx
  420916:	pop    esi
  420917:	push   0x5039d8
  42091c:	scas   eax,DWORD PTR es:[edi]
  42091d:	cmc    
  42091e:	outs   dx,DWORD PTR ds:[esi]
  42091f:	inc    esp
  420920:	(bad)  
  420921:	idiv   edi
  420923:	dec    ebx
  420924:	jno    0x42090d
  420926:	pop    esp
  420927:	ins    BYTE PTR es:[edi],dx
  420928:	call   0x6ae2:0xcc0071dc
  42092f:	imul   eax,ebx,0xffffffe4
  420932:	jno    0x42099f
  420934:	nop
  420935:	or     DWORD PTR [ebp+0x74],ebx
  420938:	ficom  WORD PTR [esi+0x65]
  42093b:	je     0x420948
  42093d:	cmp    al,0x6e
  42093f:	inc    di
  420941:	inc    ebx
  420942:	out    0x4e,al
  420944:	or     eax,esi
  420946:	add    ecx,DWORD PTR [ebp+0x0]
  420949:	add    BYTE PTR [ebx],ah
  42094b:	pop    ecx
  42094c:	add    BYTE PTR es:[ecx],cl
  42094f:	inc    ecx
  420950:	cs ins DWORD PTR es:[edi],dx
  420952:	adc    eax,0x14633049
  420957:	stos   BYTE PTR es:[edi],al
  420958:	sbb    eax,0x4ea0135f
  42095d:	addr16 icebp 
  42095f:	loope  0x4209b0
  420961:	push   eax
  420962:	inc    edi
  420963:	movntps XMMWORD PTR [edx+ebp*8+0xe],xmm6
  420968:	out    0x63,al
  42096a:	in     eax,0x9f
  42096c:	inc    edx
  42096d:	dec    esp
  42096e:	hlt    
  42096f:	clc    
  420970:	aas    
  420971:	pop    esp
  420972:	fdiv   QWORD PTR [eax-0xc]
  420975:	inc    eax
  420976:	push   ss
  420977:	in     al,0xec
  420979:	xor    edx,DWORD PTR [esi]
  42097b:	adc    eax,0x747a3743
  420980:	call   0xf0187fb3
  420985:	sub    ch,BYTE PTR [edi+0x71]
  420988:	stc    
  420989:	das    
  42098a:	pop    edx
  42098b:	mov    ds:0x715737f1,al
  420990:	cmp    eax,0x3ba45442
  420995:	inc    esi
  420996:	pop    ebx
  420997:	jne    0x4209ee
  420999:	inc    edi
  42099a:	cdq    
  42099b:	bound  ebp,QWORD PTR [edi]
  42099d:	ins    DWORD PTR es:[edi],dx
  42099e:	arpl   WORD PTR fs:[eax],sp
  4209a1:	jb     0x420a14
  4209a3:	xchg   ebp,eax
  4209a4:	das    
  4209a5:	xor    DWORD PTR ds:0x756332b2,esi
  4209ab:	sub    BYTE PTR [eax],ah
  4209ad:	jb     0x4209af
  4209af:	add    BYTE PTR [eax+ebx*8+0x39],dl
  4209b3:	imul   ebp,DWORD PTR [ebx-0x4e],0x55
  4209b7:	inc    esi
  4209b8:	jnp    0x42093c
  4209ba:	arpl   WORD PTR ds:[ebx+0x9],dx
  4209be:	pop    ebx
  4209bf:	pop    ds
  4209c0:	xor    eax,0x13512409
  4209c5:	sub    eax,0x2d62f249
  4209ca:	dec    eax
  4209cb:	xor    BYTE PTR [edi+0x3a],al
  4209ce:	sub    esp,DWORD PTR [ebx]
  4209d0:	sbb    ebp,DWORD PTR [edx]
  4209d2:	or     eax,0xe71cf820
  4209d7:	push   edi
  4209d8:	add    al,0x1c
  4209da:	xor    esi,DWORD PTR [ecx]
  4209dc:	sbb    ch,BYTE PTR [edi]
  4209de:	sbb    ebx,DWORD PTR [eax+0x40]
  4209e1:	push   ebp
  4209e2:	and    eax,0x20091750
  4209e7:	es sti 
  4209e9:	sub    eax,0x1ce42619
  4209ee:	(bad)  
  4209ef:	fistp  WORD PTR ds:[eax]
  4209f2:	or     esp,DWORD PTR ds:0x3f92dd5
  4209f8:	cli    
  4209f9:	xor    ebp,edi
  4209fb:	sub    bl,cl
  4209fd:	sub    eax,0x2ca040db
  420a02:	iret   
  420a03:	push   ds
  420a04:	xchg   BYTE PTR [ebx],bl
  420a06:	int3   
  420a07:	pop    ds
  420a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a09:	aaa    
  420a0a:	shr    DWORD PTR [edx],cl
  420a0c:	mov    BYTE PTR ds:0x3c8c03ba,dh
  420a12:	pop    es
  420a13:	dec    ebx
  420a14:	add    BYTE PTR [eax],al
  420a16:	test   cl,ch
  420a18:	lods   al,BYTE PTR ds:[esi]
  420a19:	dec    edi
  420a1a:	ja     0x420a05
  420a1c:	xchg   esi,eax
  420a1d:	and    dl,BYTE PTR [esi+0x75249e1c]
  420a23:	sub    eax,0x3983039a
  420a28:	test   al,0x53
  420a2a:	mov    bl,ah
  420a2c:	mov    BYTE PTR [ebx],0x77
  420a2f:	sbb    al,0x7b
  420a31:	and    al,0x55
  420a33:	cs mov ah,ch
  420a36:	fs xor eax,0x39448500
  420a3c:	push   ecx
  420a3d:	jne    0x420a62
  420a3f:	sbb    esp,DWORD PTR [ebx+0x2a]
  420a42:	jne    0x420a70
  420a44:	pop    edi
  420a45:	push   ebp
  420a46:	pop    eax
  420a47:	push   eax
  420a48:	outs   dx,BYTE PTR ds:[esi]
  420a49:	pop    edx
  420a4a:	ja     0x420a94
  420a4c:	outs   dx,BYTE PTR ds:[esi]
  420a4d:	dec    edx
  420a4e:	dec    eax
  420a4f:	or     DWORD PTR [eax],eax
  420a51:	dec    edx
  420a52:	push   ebp
  420a53:	and    BYTE PTR [eax+0x35],dh
  420a56:	xchg   esi,eax
  420a57:	fldcw  WORD PTR ds:0x355f4d
  420a5d:	sub    dl,BYTE PTR [ebp+0x20]
  420a60:	jo     0x420a7f
  420a62:	adc    BYTE PTR [edi],dh
  420a64:	jo     0x420a81
  420a66:	and    bl,BYTE PTR ds:0x4d370a63
  420a6c:	pop    edi
  420a6d:	adc    eax,0xe9000924
  420a72:	inc    esp
  420a73:	or     DWORD PTR [eax],eax
  420a75:	jmp    0xe94213be
  420a7a:	add    BYTE PTR [eax],al
  420a7c:	add    al,0x53
  420a7e:	xor    eax,0xcd62a8ad
  420a83:	clc    
  420a84:	mov    ebx,0x44930022
  420a89:	cs inc esi
  420a8b:	inc    edi
  420a8c:	test   DWORD PTR [ebx+0x35],edx
  420a8f:	or     eax,0xd8cd63e7
  420a94:	fwait
  420a95:	and    al,BYTE PTR [eax]
  420a97:	xchg   ebx,eax
  420a98:	inc    esp
  420a99:	cs inc esi
  420a9b:	inc    edi
  420a9c:	xchg   BYTE PTR [ebx+0x35],dl
  420a9f:	in     eax,dx
  420aa0:	test   al,0x63
  420aa2:	int    0xf8
  420aa4:	jnp    0x420ac8
  420aa6:	add    BYTE PTR [ebx+0x44],dl
  420aa9:	cs inc esi
  420aab:	pop    es
  420aac:	sti    
  420aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aae:	std    
  420aaf:	jmp    0x7401bd
  420ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ab5:	or     cl,BYTE PTR [edi+0x6f]
  420ab8:	shl    dh,0x72
  420abb:	popa   
  420abc:	dec    esp
  420abd:	pop    es
  420abe:	pop    esp
  420abf:	dec    ebp
  420ac0:	(bad)  
  420ac1:	jmp    0xea5f7a37
  420ac6:	gs je  0x420b43
  420ac9:	in     al,0x6d
  420acb:	je     0x420ad0
  420acd:	fild   QWORD PTR [ebp+0x65]
  420ad0:	adc    ch,BYTE PTR [ebp-0x16a187be]
  420ad6:	push   0x72
  420ad8:	add    ebx,edi
  420ada:	pop    ebx
  420adb:	dec    ecx
  420adc:	or     cl,ah
  420ade:	pusha  
  420adf:	ins    BYTE PTR es:[edi],dx
  420ae0:	add    BYTE PTR [eax],al
  420ae2:	dec    edx
  420ae3:	add    al,0x46
  420ae5:	outs   dx,DWORD PTR ds:[esi]
  420ae6:	pop    esp
  420ae7:	call   0xe17f675a
  420aec:	push   0x72
  420aee:	aas    
  420aef:	repnz pusha 
  420af1:	xor    bl,BYTE PTR [esi+0xa]
  420af4:	add    BYTE PTR [eax],al
  420af6:	outs   dx,BYTE PTR ds:[esi]
  420af7:	in     eax,dx
  420af8:	jmp    DWORD PTR [ecx+0x6e]
  420afb:	icebp  
  420afc:	push   DWORD PTR [ecx]
  420afe:	pop    esi
  420aff:	mov    dl,0xfd
  420b01:	xor    eax,0x65fdb55e
  420b06:	cs test eax,0xec2e38fd
  420b0c:	push   DWORD PTR [ebx]
  420b0e:	push   ds
  420b0f:	mov    ds:0x9e1e2cfd,eax
  420b14:	std    
  420b15:	bound  ebp,QWORD PTR [esi]
  420b17:	out    dx,al
  420b18:	(bad)  
  420b19:	cmp    BYTE PTR [esi],ch
  420b1b:	test   eax,0x9f1e60fd
  420b20:	std    
  420b21:	xor    al,0x1e
  420b23:	mov    dl,0xfd
  420b25:	sub    al,0xee
  420b27:	out    dx,al
  420b28:	push   DWORD PTR [ecx]
  420b2a:	out    dx,al
  420b2b:	fwait
  420b2c:	std    
  420b2d:	cmp    BYTE PTR [edi-0x50],al
  420b30:	icebp  
  420b31:	push   DWORD PTR [eax+esi*4]
  420b34:	and    eax,0x24b06500
  420b39:	add    BYTE PTR [eax],dl
  420b3b:	mov    al,0x27
  420b3d:	add    BYTE PTR [eax],bl
  420b3f:	mov    al,0x1
  420b41:	add    BYTE PTR [edx-0x77],bh
  420b44:	es jb  0x420b47
  420b47:	add    BYTE PTR [eax],dh
  420b49:	inc    ebx
  420b4a:	and    DWORD PTR [esi+0x33],esp
  420b4d:	out    0x58,eax
  420b4f:	addr16 and ecx,ebp
  420b52:	and    DWORD PTR [ebx+0x33],esp
  420b55:	neg    ebp
  420b57:	jmp    FWORD PTR [edx]
  420b59:	in     al,0x33
  420b5b:	cmp    ch,BYTE PTR [eax+0x17]
  420b5e:	add    al,0x51
  420b60:	and    BYTE PTR [esi+0x38],dl
  420b63:	jne    0x420b8b
  420b65:	loop   0x420b8d
  420b67:	pop    esp
  420b68:	push   es
  420b69:	adc    al,0x21
  420b6b:	(bad)  
  420b6d:	jecxz  0x420bb3
  420b6f:	ins    DWORD PTR es:[edi],dx
  420b70:	loop   0x420b7e
  420b72:	and    DWORD PTR [esi+0x47],ebp
  420b75:	jecxz  0x420b91
  420b77:	je     0x420b63
  420b79:	add    ah,BYTE PTR [edi]
  420b7b:	jb     0x420b4e
  420b7d:	or     al,0x36
  420b7f:	jno    0x420bc8
  420b81:	add    ebx,DWORD PTR [ebx]
  420b83:	je     0x420b67
  420b85:	add    ah,BYTE PTR [edi]
  420b87:	jb     0x420b42
  420b89:	aad    0x33
  420b8b:	and    BYTE PTR [edx-0x32],ah
  420b8e:	dec    ebp
  420b8f:	dec    eax
  420b90:	mov    al,ds:0x940035bf
  420b95:	leave  
  420b96:	xor    eax,0x33d57463
  420b9b:	jbe    0x420b3f
  420b9d:	pusha  
  420b9e:	loope  0x420bc2
  420ba0:	stos   DWORD PTR es:[edi],eax
  420ba1:	jle    0x420bfd
  420ba3:	arpl   WORD PTR [ebp+0x476c337d],sp
  420ba9:	or     DWORD PTR [edx+0x7300001c],edi
  420baf:	cs mov edx,0x8c1b7528
  420bb5:	xor    eax,0x4f82ee27
  420bba:	jne    0x420bea
  420bbc:	xchg   esp,eax
  420bbd:	and    dl,BYTE PTR [ebx+0x2e]
  420bc0:	mov    DWORD PTR [edi+0x68],0x53268c17
  420bc7:	xor    al,0x79
  420bc9:	sub    al,0x47
  420bcb:	cmp    BYTE PTR [eax+0x38],dl
  420bce:	and    al,0x38
  420bd0:	inc    esp
  420bd1:	cmp    DWORD PTR ss:[esi],ebp
  420bd4:	pop    ecx
  420bd5:	in     al,0x65
  420bd7:	sub    eax,0x2e1656fc
  420bdc:	cmp    DWORD PTR [esi+esi*8],eax
  420bdf:	xor    DWORD PTR [ebx],esi
  420be1:	daa    
  420be2:	imul   BYTE PTR ds:0x17243a39
  420be8:	pop    es
  420be9:	out    0xe4,eax
  420beb:	cmc    
  420bec:	cmp    esi,DWORD PTR ds:0x53c716e4
  420bf2:	sbb    cl,BYTE PTR [ecx]
  420bf4:	int3   
  420bf5:	xor    al,0xb
  420bf7:	push   eax
  420bf8:	add    al,0x2b
  420bfa:	out    0x30,al
  420bfc:	or     BYTE PTR [ebx],bl
  420bfe:	jmp    0xdb5d260b
  420c03:	sub    eax,0x1ad5271a
  420c08:	add    al,0x36
  420c0a:	addr16 out dx,al
  420c0c:	retf   0x964f
  420c0f:	dec    ebx
  420c10:	mov    bl,0x53
  420c12:	add    BYTE PTR [eax],al
  420c14:	inc    edi
  420c15:	dec    ebp
  420c16:	int3   
  420c17:	pop    ds
  420c18:	mov    ah,0x21
  420c1a:	les    ecx,FWORD PTR [ecx+0x7b]
  420c1d:	cmp    edi,esp
  420c1f:	xor    al,0xa0
  420c21:	sbb    eax,0x216134c4
  420c26:	add    ah,al
  420c28:	sub    BYTE PTR [ecx],cl
  420c2a:	push   ebp
  420c2b:	les    ebp,FWORD PTR [edx]
  420c2d:	jmp    0x44729475
  420c32:	add    BYTE PTR [ebp-0x7898d1d9],ch
  420c38:	in     al,0x47
  420c3a:	pop    edi
  420c3b:	xchg   ebp,eax
  420c3c:	and    eax,0x18985109
  420c41:	sub    al,0x74
  420c43:	test   ah,ah
  420c45:	sub    eax,0x44297b6d
  420c4a:	je     0x420c15
  420c4c:	mov    ebx,0x614871a3
  420c51:	xor    eax,0xa38ce963
  420c56:	sub    cl,ch
  420c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c59:	mov    ds:0x3a051e42,eax
  420c5e:	push   esp
  420c5f:	sbb    eax,DWORD PTR [esp+ecx*2]
  420c62:	dec    esi
  420c63:	adc    eax,0x2052394b
  420c68:	dec    eax
  420c69:	in     al,0x51
  420c6b:	adc    BYTE PTR [ebx+0x38],cl
  420c6e:	dec    esi
  420c6f:	xor    BYTE PTR [eax+edi*1],dl
  420c72:	inc    ebx
  420c73:	jmp    0x2a855d83
  420c78:	add    BYTE PTR [eax],al
  420c7a:	sub    cl,BYTE PTR [ecx]
  420c7c:	inc    esi
  420c7d:	push   ds
  420c7e:	stc    
  420c7f:	inc    edi
  420c80:	inc    edi
  420c81:	cs add eax,0x260d0009
  420c87:	cs addr16 pop es
  420c8a:	adc    cl,BYTE PTR [ecx]
  420c8c:	ins    DWORD PTR es:[edi],dx
  420c8d:	sti    
  420c8e:	pop    ebp
  420c8f:	sub    al,0x67
  420c91:	xlat   BYTE PTR ds:[ebx]
  420c92:	xchg   edi,eax
  420c93:	push   ss
  420c94:	jb     0x420c63
  420c96:	inc    esp
  420c97:	sbb    DWORD PTR [edi-0x26],ebx
  420c9a:	jae    0x420cb8
  420c9c:	ins    DWORD PTR es:[edi],dx
  420c9d:	fld    TBYTE PTR [eax+0x44]
  420ca0:	jbe    0x420ca2
  420ca2:	lsl    esi,WORD PTR [ecx+0x65]
  420ca6:	push   ds
  420ca7:	fsubr  QWORD PTR [esi+0x65]
  420caa:	int3   
  420cab:	call   0x3a4d7a0c
  420cb0:	jbe    0x420d13
  420cb2:	rcr    bl,cl
  420cb4:	pusha  
  420cb5:	add    al,cl
  420cb7:	fisubr DWORD PTR [edi+0x3a]
  420cba:	add    DWORD PTR [edx-0x25459803],ebp
  420cc0:	outs   dx,DWORD PTR ds:[esi]
  420cc1:	cmp    dh,cl
  420cc3:	test   eax,0xda5a67fd
  420cc8:	outs   dx,DWORD PTR ds:[esi]
  420cc9:	jae    0x420c5f
  420ccb:	test   eax,0x51d2002c
  420cd0:	imul   ebp,DWORD PTR [edi+0x9],0xffffffe9
  420cd4:	pusha  
  420cd5:	pop    esp
  420cd6:	pop    ebp
  420cd7:	add    eax,0xf0036f72
  420cdc:	call   FWORD PTR [ebx+0x0]
  420cdf:	add    BYTE PTR [ebp+0x5],ch
  420ce2:	jb     0x420d53
  420ce4:	repz add esi,DWORD PTR [ecx+0x6d]
  420ce8:	sahf   
  420ce9:	push   edx
  420cea:	aas    
  420ceb:	push   0x6569024c
  420cf0:	pop    esi
  420cf1:	jmp    0x37b08066
  420cf6:	imul   esp,DWORD PTR [esi+0x5a],0xffffffda
  420cfa:	pop    esp
  420cfb:	jb     0x420d38
  420cfd:	cmp    DWORD PTR [edi],edi
  420cff:	push   0x6569023c
  420d04:	ds jmp 0xe5a0807a
  420d0a:	ins    DWORD PTR es:[edi],dx
  420d0b:	jae    0x420d57
  420d0d:	in     eax,dx
  420d0e:	imul   ebp,DWORD PTR [ecx+edx*2+0x51],0x65
  420d13:	jb     0x420d43
  420d15:	push   edx
  420d16:	inc    edx
  420d17:	jb     0x420d1a
  420d19:	jmp    0xcd898282
  420d1e:	add    DWORD PTR [ecx+edx*4-0x37],ebx
  420d22:	and    ch,BYTE PTR [eax-0x6b]
  420d25:	mov    ebx,0x84476320
  420d2a:	inc    edx
  420d2b:	ins    DWORD PTR es:[edi],dx
  420d2c:	call   0x4f94:0x476d25cb
  420d33:	ins    DWORD PTR es:[edi],dx
  420d34:	fs ja  0x420d77
  420d37:	arpl   WORD PTR [ebx+0x7c],sp
  420d3a:	add    DWORD PTR [ecx+0x1a],ecx
  420d3d:	ins    DWORD PTR es:[edi],dx
  420d3e:	sub    BYTE PTR [edx+ebp*2+0x23],ch
  420d42:	sbb    eax,DWORD PTR [eax]
  420d44:	add    BYTE PTR [eax],al
  420d46:	jnp    0x420d9f
  420d48:	loopne 0x420d94
  420d4a:	push   0xffffff94
  420d4c:	sub    BYTE PTR [ebp+0x59],ch
  420d4f:	mov    al,0x4d
  420d51:	push   eax
  420d52:	xor    eax,0x2b672323
  420d57:	push   ebp
  420d58:	xor    DWORD PTR [eax],eax
  420d5a:	or     al,BYTE PTR [eax+0x1b]
  420d5d:	popa   
  420d5e:	inc    edi
  420d5f:	fadd   QWORD PTR [esi+0x70]
  420d62:	cs dec edi
  420d64:	push   eax
  420d65:	inc    ebx
  420d66:	pop    ss
  420d67:	cmp    DWORD PTR [ecx],esp
  420d69:	add    ah,dh
  420d6b:	(bad)  [edx]
  420d6d:	and    WORD PTR ds:0xb0175446,cx
  420d74:	xor    ah,BYTE PTR [edi-0xd]
  420d77:	adc    al,0x31
  420d79:	ficom  WORD PTR cs:[ecx]
  420d7c:	sbb    eax,DWORD PTR [eax]
  420d7e:	or     ebx,edi
  420d80:	sbb    dh,BYTE PTR [edx+ebp*8-0x2]
  420d84:	add    ebx,DWORD PTR [ecx+esi*8-0x8]
  420d88:	xor    BYTE PTR [edi-0x1c],ah
  420d8b:	adc    bl,BYTE PTR [edi]
  420d8d:	and    dl,bh
  420d8f:	adc    al,0x28
  420d91:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  420d93:	mov    dl,0xdb
  420d95:	gs mov bl,0x9
  420d98:	xlat   BYTE PTR ds:[ebx]
  420d99:	add    edx,DWORD PTR [esi-0x4cfc3bf7]
  420d9f:	or     ebx,ebx
  420da1:	add    ebp,DWORD PTR [eax-0x5dfc42f7]
  420da7:	or     DWORD PTR [edx+0x47000003],edi
  420dad:	or     DWORD PTR [ebx-0x36cf64ba],ebx
  420db3:	and    al,0x73
  420db5:	jmp    0x2fb42c5c
  420dba:	xchg   ebx,eax
  420dbb:	push   ds
  420dbc:	nop
  420dbd:	and    eax,0x3c473184
  420dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dc3:	fld    QWORD PTR [ecx+0x471b8a1b]
  420dc9:	inc    edi
  420dca:	jns    0x420df4
  420dcc:	push   esi
  420dcd:	xor    DWORD PTR [ebp-0x3af688a9],esp
  420dd3:	push   edx
  420dd4:	or     al,0x47
  420dd6:	out    0x41,eax
  420dd8:	sub    ebp,DWORD PTR [edx]
  420dda:	popa   
  420ddb:	daa    
  420ddc:	or     DWORD PTR ds:0x32360457,edx
  420de2:	pop    ebx
  420de3:	daa    
  420de4:	jno    0x420e0b
  420de6:	dec    eax
  420de7:	cmp    BYTE PTR [edi+0x4d],al
  420dea:	dec    eax
  420deb:	xor    DWORD PTR [ebx],ebx
  420ded:	cmp    DWORD PTR [eax+0x31],ecx
  420df0:	push   ss
  420df1:	sbb    BYTE PTR [esi+0x32],al
  420df4:	jmp    0x420dfe
  420df6:	sbb    esp,DWORD PTR [ebx]
  420df8:	not    BYTE PTR [eax+ebp*1]
  420dfb:	sub    bl,ch
  420dfd:	sbb    al,BYTE PTR [ecx+esi*1]
  420e00:	test   BYTE PTR [eax],0x23
  420e03:	and    edx,esi
  420e05:	adc    al,0x34
  420e07:	xor    esp,esp
  420e09:	sbb    ah,bh
  420e0b:	aas    
  420e0c:	lock sbb esi,ebx
  420e0f:	push   ebx
  420e10:	add    BYTE PTR [eax],al
  420e12:	ficomp DWORD PTR [edx]
  420e14:	add    ch,bh
  420e16:	inc    esp
  420e17:	cmp    ch,BYTE PTR [ebp+0x7]
  420e1a:	jg     0x420e32
  420e1c:	pop    edi
  420e1d:	fld    TBYTE PTR [ecx+0x3d]
  420e20:	inc    esi
  420e21:	int    0x65
  420e23:	sbb    ch,BYTE PTR [eax-0x47]
  420e26:	imul   eax,DWORD PTR [eax+0x69],0x5f2d86ad
  420e2d:	ret    
  420e2e:	imul   eax,DWORD PTR [edi+0x74],0x633a78b9
  420e35:	mov    ebp,0xc66e2838
  420e3a:	aaa    
  420e3b:	or     DWORD PTR [ebx+ebp*4+0x50],ebx
  420e3f:	inc    eax
  420e40:	jp     0x420dc6
  420e42:	adc    BYTE PTR ds:0x2602e970,0x70
  420e49:	jge    0x420e8f
  420e4b:	inc    edi
  420e4c:	push   esp
  420e4d:	cdq    
  420e4e:	out    dx,eax
  420e4f:	lock sub eax,0x692f2dad
  420e55:	xchg   ebp,eax
  420e56:	ja     0x420e89
  420e58:	arpl   WORD PTR [ebp+0x58],di
  420e5b:	cmp    eax,0x2f68596d
  420e60:	pop    esp
  420e61:	dec    edx
  420e62:	dec    edx
  420e63:	xor    al,0x6b
  420e65:	dec    eax
  420e66:	inc    ecx
  420e67:	and    eax,0x473a2600
  420e6c:	push   esp
  420e6d:	sbb    DWORD PTR [ebx+0x4a],ecx
  420e70:	ins    DWORD PTR es:[edi],dx
  420e71:	dec    edi
  420e72:	sub    DWORD PTR [ecx+eiz*2],ebp
  420e75:	cmp    eax,0x2e5c0000
  420e7a:	outs   dx,BYTE PTR ds:[esi]
  420e7b:	cmp    bl,BYTE PTR [ecx+0x4b1d781b]
  420e81:	fiadd  DWORD PTR [ebx-0x34]
  420e84:	add    dh,BYTE PTR ds:0x2817e950
  420e8a:	je     0x420e90
  420e8c:	push   ss
  420e8d:	out    dx,eax
  420e8e:	data16 add BYTE PTR [eax],bh
  420e91:	add    al,0x0
  420e93:	pop    esp
  420e94:	lea    eax,[edi+0x29]
  420e97:	inc    esi
  420e98:	bound  esi,QWORD PTR ds:0x25d5c00
  420e9e:	je     0x420f05
  420ea0:	loop   0x420e89
  420ea2:	outs   dx,BYTE PTR ds:[esi]
  420ea3:	imul   eax,DWORD PTR [ecx],0x2e7260fd
  420ea9:	cmp    cl,BYTE PTR [ebx+0x46]
  420eac:	shl    BYTE PTR ds:0x4ee3523d,cl
  420eb2:	aas    
  420eb3:	ins    BYTE PTR es:[edi],dx
  420eb4:	(bad)  
  420eb5:	fldcw  WORD PTR [esi+0x65]
  420eb8:	mov    ebp,0xbe79544e
  420ebd:	out    0x4b,eax
  420ebf:	imul   edi,DWORD PTR [esi+ecx*2-0x6518b989],0xb2ad3331
  420eca:	xor    eax,0x4394a02d
  420ecf:	xor    bh,bl
  420ed1:	fwait
  420ed2:	sub    eax,0x3ebf9f31
  420ed7:	xor    ebp,ebp
  420ed9:	mov    bl,0x2a
  420edb:	xor    BYTE PTR [eax],al
  420edd:	add    dh,dh
  420edf:	call   0x3443:0x975c322d
  420ee6:	addr16 dec ebx
  420ee8:	inc    edx
  420ee9:	jge    0x420f45
  420eeb:	xchg   esp,eax
  420eec:	sub    esi,DWORD PTR [edx]
  420eee:	push   0xffffff95
  420ef0:	pop    ecx
  420ef1:	ja     0x420eea
  420ef3:	add    ch,BYTE PTR [edi]
  420ef5:	xor    bl,BYTE PTR [esi+0x37735d49]
  420efb:	dec    ebx
  420efc:	push   esp
  420efd:	push   eax
  420efe:	outs   dx,BYTE PTR ds:[esi]
  420eff:	inc    esi
  420f00:	dec    esi
  420f01:	gs push edx
  420f03:	ss pop ebp
  420f05:	jb     0x420f46
  420f07:	add    esp,DWORD PTR [ebx+0x0]
  420f0a:	inc    edi
  420f0b:	(bad)  
  420f0c:	sub    DWORD PTR [esi-0x29],esp
  420f0f:	scas   eax,DWORD PTR es:[edi]
  420f10:	xlat   BYTE PTR ds:[ebx]
  420f11:	jno    0x420efe
  420f13:	lahf   
  420f14:	add    DWORD PTR [edx+eax*1+0x2],edx
  420f18:	aaa    
  420f19:	push   ecx
  420f1a:	xchg   ebp,eax
  420f1b:	(bad)  
  420f1c:	fsubr  DWORD PTR [ecx]
  420f1e:	inc    edi
  420f1f:	mov    al,ds:0xbfb47124
  420f24:	sbb    dh,BYTE PTR [edx-0x5d]
  420f27:	adc    bh,ch
  420f29:	cs pop ebp
  420f2b:	shr    bl,cl
  420f2d:	call   DWORD PTR [ebx-0x5e8ddf3d]
  420f33:	rcr    DWORD PTR [eax],1
  420f35:	arpl   WORD PTR [ebp+0x63],cx
  420f38:	jmp    0x420f39
  420f3a:	push   0x5d
  420f3c:	adc    eax,0x1dd1276c
  420f41:	add    BYTE PTR fs:[eax],al
  420f44:	jne    0x420ed3
  420f46:	ss jno 0x420f76
  420f49:	sub    ebx,0xffffffff
  420f4c:	xor    dh,BYTE PTR [eax+0x7d75434d]
  420f52:	push   esi
  420f53:	push   edx
  420f54:	jns    0x420f0d
  420f56:	add    DWORD PTR [esi+0x73],eax
  420f59:	and    cl,0x4d
  420f5c:	xor    BYTE PTR [edi],bl
  420f5e:	add    DWORD PTR [esi+0x13],eax
  420f61:	xor    BYTE PTR [edi],0x6d
  420f64:	cmp    BYTE PTR [eax+0x45336736],dh
  420f6a:	xor    eax,0x18451f2e
  420f6f:	add    ah,dh
  420f71:	inc    BYTE PTR [ecx+0x54]
  420f74:	clc    
  420f75:	lock push ebp
  420f77:	inc    ebx
  420f78:	jmp    0x420f7b
  420f7a:	sbb    DWORD PTR [edx-0x10],esp
  420f7d:	add    al,0x42
  420f7f:	push   esp
  420f80:	pop    ss
  420f81:	adc    ch,dh
  420f83:	sub    eax,0x57430938
  420f88:	out    0x1a,al
  420f8a:	adc    BYTE PTR [ebx+ebx*8],dh
  420f8d:	sbb    edi,esp
  420f8f:	push   esi
  420f90:	or     al,BYTE PTR [edi+0x33]
  420f93:	push   ebx
  420f94:	adc    BYTE PTR [ebx],bh
  420f96:	sub    al,0x48
  420f98:	cmc    
  420f99:	sub    eax,0x436c1b09
  420f9e:	sbb    edx,DWORD PTR [edi+eiz*2-0x28]
  420fa2:	mov    esp,0xbb438cf2
  420fa7:	push   ebx
  420fa8:	add    BYTE PTR [eax],al
  420faa:	xchg   esi,eax
  420fab:	fnstenv es:[ecx]
  420fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420faf:	pop    ss
  420fb0:	fiadd  DWORD PTR [ebx]
  420fb2:	xor    DWORD PTR ds:0x2c87e3b7,0x99319bc
  420fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fbd:	dec    edi
  420fbe:	xchg   edi,eax
  420fbf:	jmp    0x26ad2c70
  420fc4:	add    al,0x20
  420fc6:	inc    edi
  420fc7:	cmp    DWORD PTR [eax-0x71eb89ca],ecx
  420fcd:	xor    eax,0x20ba096b
  420fd2:	push   ebp
  420fd3:	adc    eax,DWORD PTR [ebp+esi*1+0x20942a81]
  420fda:	inc    edi
  420fdb:	ss jp  0x420ffe
  420fde:	xor    eax,0x3ab52
  420fe3:	sub    eax,DWORD PTR [eax+0x532a282f]
  420fe9:	inc    eax
  420fea:	and    BYTE PTR [edi],dl
  420fec:	inc    esp
  420fed:	and    eax,0x2b592c1b
  420ff2:	inc    edi
  420ff3:	cmp    DWORD PTR [esi],edi
  420ff5:	sbb    ecx,DWORD PTR ss:[ebx+0x3c]
  420ff9:	pop    ss
  420ffa:	and    eax,0x16043926
  420fff:	add    BYTE PTR es:[ebx],bh
  421002:	xor    eax,0x1c157228
  421007:	sbb    DWORD PTR [ebx-0x17],esp
  42100a:	push   esp
  42100b:	or     DWORD PTR [eax],eax
  42100d:	jmp    0x46471012
  421012:	aas    
  421013:	jmp    0xcd13852
  421018:	les    eax,FWORD PTR [esi+0x4c]
  42101b:	(bad)  
  42101c:	(bad)  
  42101d:	mov    bl,0x5
  42101f:	dec    ecx
  421020:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421022:	ror    DWORD PTR [edi],1
  421024:	jo     0x42105a
  421026:	add    BYTE PTR [ebx+0x1b2dd70e],bh
  42102c:	sbb    al,0xee
  42102e:	xor    BYTE PTR [esi],dl
  421030:	dec    ebx
  421031:	(bad)  [ecx]
  421033:	out    dx,eax
  421034:	sbb    al,0xf1
  421036:	add    eax,0x50711e8
  42103b:	jmp    0x1526:0xce510943
  421042:	jne    0x42100c
  421044:	xor    ch,BYTE PTR [eax]
  421046:	pop    esp
  421047:	popf   
  421048:	dec    ebp
  421049:	sub    ebx,DWORD PTR [edi-0x66]
  42104c:	xchg   BYTE PTR ds:0x247bbd50,dh
  421052:	je     0x420fe0
  421054:	in     al,0x4e
  421056:	pop    edi
  421057:	jg     0x42107e
  421059:	arpl   WORD PTR es:[ebx+0x44],di
  42105d:	push   ecx
  42105e:	ins    DWORD PTR es:[edi],dx
  42105f:	jp     0x4210d1
  421061:	or     DWORD PTR [ebx+0x7a],edx
  421064:	pop    ecx
  421065:	pop    ss
  421066:	add    BYTE PTR [ecx-0x168ee59b],bl
  42106c:	adc    al,0x2e
  42106e:	jb     0x4210c5
  421070:	dec    ebx
  421071:	aaa    
  421072:	arpl   WORD PTR [eax+eax*1+0x0],ax
  421076:	ds adc eax,0x24070963
  42107c:	jb     0x42107e
  42107e:	sahf   
  42107f:	inc    ebx
  421080:	aas    
  421081:	jns    0x42108f
  421083:	cld    
  421084:	jno    0x4210ea
  421086:	cmp    esp,esi
  421088:	data16 add BYTE PTR [eax-0x5],dh
  42108c:	jo     0x4210f1
  42108e:	push   ebp
  42108f:	add    eax,0xd34b7371
  421094:	sub    eax,0x65ff4163
  421099:	imul   ecx,DWORD PTR [ecx+0x5],0xd93b733c
  4210a0:	jae    0x42110b
  4210a2:	push   eax
  4210a3:	call   0xf2917ec7
  4210a8:	pusha  
  4210a9:	cmp    eax,0x2206fc
  4210ae:	or     al,ch
  4210b0:	imul   esi,DWORD PTR [ebp+0xb],0xffffffa4
  4210b4:	pop    ds
  4210b5:	add    ch,bl
  4210b7:	add    DWORD PTR [esi+0x74],esp
  4210ba:	stc    
  4210bb:	out    0x71,eax
  4210bd:	gs loop 0x4210f5
  4210c0:	gs ins DWORD PTR es:[edi],dx
  4210c2:	adc    DWORD PTR [ecx],eax
  4210c4:	push   esp
  4210c5:	popa   
  4210c6:	mov    edx,0xc26d5cfe
  4210cb:	ss jno 0x421122
  4210ce:	stos   BYTE PTR es:[edi],al
  4210cf:	dec    edi
  4210d0:	pop    esp
  4210d1:	push   ebx
  4210d2:	retf   
  4210d3:	aad    0x6e
  4210d5:	imul   eax,ecx,0x6f00
  4210db:	add    BYTE PTR [esi-0x6f8b90ff],ah
  4210e1:	out    0x68,eax
  4210e3:	gs scas al,BYTE PTR es:[edi]
  4210e5:	dec    ebx
  4210e6:	outs   dx,DWORD PTR ds:[esi]
  4210e7:	gs cmp al,0xe0
  4210ea:	pop    esp
  4210eb:	ins    DWORD PTR es:[edi],dx
  4210ec:	retf   
  4210ed:	push   es
  4210ee:	push   eax
  4210ef:	popa   
  4210f0:	or     eax,0xfc6f72d6
  4210f5:	call   0x438960f9
  4210fa:	xor    dh,BYTE PTR [ecx+eax*1+0x35]
  4210fe:	pop    ss
  4210ff:	bound  esp,QWORD PTR [edx]
  421101:	fiadd  WORD PTR [ebx]
  421103:	push   esp
  421104:	jmp    0x1850:0xe96716dd
  42110b:	push   esp
  42110c:	out    dx,al
  42110d:	fistp  WORD PTR [esi]
  42110f:	add    cl,bh
  421111:	push   DWORD PTR [ebx]
  421113:	inc    esi
  421114:	sti    
  421115:	(bad)  
  421117:	ja     0x421103
  421119:	add    eax,DWORD PTR [esp+ebx*2]
  42111c:	add    DWORD PTR [ebx+0x10d7632d],ebx
  421122:	and    BYTE PTR [ecx],ch
  421124:	ins    BYTE PTR es:[edi],dx
  421125:	mov    al,0x52
  421127:	ins    DWORD PTR es:[edi],dx
  421128:	mov    eax,ds:0xb55f2e9c
  42112d:	add    eax,0xca984148
  421132:	sbb    esp,DWORD PTR [ebx-0x56]
  421135:	outs   dx,DWORD PTR ds:[esi]
  421136:	xor    BYTE PTR [eax+0x67],dh
  421139:	pop    edi
  42113a:	push   ss
  42113b:	data16 fwait
  42113d:	mov    bl,0x24
  42113f:	jb     0x421141
  421141:	add    BYTE PTR [edx-0x68abc450],ah
  421147:	adc    BYTE PTR [eax],ah
  421149:	arpl   WORD PTR [esp+ebx*2+0x1c],si
  42114d:	outs   dx,BYTE PTR ds:[esi]
  42114e:	push   sp
  421150:	sbb    al,0x6d
  421152:	pop    ecx
  421153:	shl    BYTE PTR [edx],1
  421155:	arpl   WORD PTR [ebp+0x72],dx
  421158:	and    BYTE PTR [edx+0x47],dh
  42115b:	push   0x4d
  42115d:	push   eax
  42115e:	daa    
  42115f:	test   BYTE PTR [eax],ah
  421161:	jno    0x4211b6
  421163:	jns    0x421178
  421165:	pop    edi
  421166:	cmp    edi,DWORD PTR [ecx+0x16]
  421169:	outs   dx,BYTE PTR ds:[esi]
  42116a:	addr16 sbb eax,0xb0356332
  421170:	cmp    edx,DWORD PTR [edi+edx*1+0x9]
  421174:	pop    es
  421175:	and    BYTE PTR [esi+edx*1],ah
  421178:	push   ebx
  421179:	sbb    eax,0x1d5b2829
  42117e:	and    ch,BYTE PTR [ebx]
  421180:	pop    es
  421181:	xor    al,0xe8
  421183:	adc    eax,0x16f22f3a
  421188:	inc    ebx
  421189:	add    al,0x1
  42118b:	xor    eax,0x23e4e417
  421190:	cmp    dh,BYTE PTR [eax]
  421192:	loopne 0x4211be
  421194:	or     BYTE PTR [eax],dh
  421196:	call   0xe9261ec4
  42119b:	sub    DWORD PTR [ecx],ebx
  42119d:	xor    BYTE PTR [edi+0x43],al
  4211a0:	xor    edx,DWORD PTR [edi+eiz*1+0x25]
  4211a4:	or     al,0x33
  4211a6:	add    BYTE PTR [eax],al
  4211a8:	mov    ebx,0xb3250d22
  4211ad:	and    al,BYTE PTR [esi]
  4211af:	push   ss
  4211b0:	addr16 sub al,0x8
  4211b3:	xor    BYTE PTR [eax+0x471ed625],cl
  4211b9:	dec    edi
  4211ba:	mov    bl,0x53
  4211bc:	addr16 sbb ecx,ebx
  4211bf:	push   ss
  4211c0:	test   eax,0x9620bb22
  4211c5:	or     DWORD PTR [ebp-0x30c368b1],ebp
  4211cb:	and    BYTE PTR [ebx+0x25],ch
  4211ce:	out    0x1d,eax
  4211d0:	jnp    0x4211eb
  4211d2:	mov    edx,0x9325641b
  4211d7:	aad    0x6a
  4211d9:	sbb    al,0x90
  4211db:	add    esi,DWORD PTR [esi+0x28]
  4211de:	lea    ebp,[edi]
  4211e0:	pop    edx
  4211e1:	sub    bl,BYTE PTR [ecx-0x57b994e0]
  4211e7:	push   edx
  4211e8:	ins    BYTE PTR es:[edi],dx
  4211e9:	cmp    al,0x8e
  4211eb:	sbb    eax,0xaf003533
  4211f0:	add    BYTE PTR [ecx],bh
  4211f2:	inc    edi
  4211f3:	jg     0x42123f
  4211f5:	es pop esp
  4211f7:	cmp    al,BYTE PTR [eax+0x1d]
  4211fa:	jae    0x421255
  4211fc:	inc    ebx
  4211fd:	dec    ebp
  4211fe:	pop    edi
  4211ff:	pop    ebp
  421200:	fs dec ebp
  421202:	addr16 pop ebx
  421204:	inc    ebx
  421205:	xor    eax,0x501b1d46
  42120a:	outs   dx,BYTE PTR ds:[esi]
  42120b:	inc    edi
  42120c:	add    BYTE PTR [eax],al
  42120e:	push   edx
  42120f:	or     DWORD PTR [ecx+0x4c],edx
  421212:	xor    eax,0x2f3b631f
  421217:	xor    BYTE PTR [ecx+0x1d],dh
  42121a:	jns    0x42123c
  42121c:	imul   ecx,DWORD PTR ds:0x11634743,0x20
  421223:	sbb    al,BYTE PTR [esi+0x0]
  421226:	das    
  421227:	sub    al,0x0
  421229:	emms   
  42122b:	sbb    DWORD PTR [ecx+0x10],esi
  42122e:	ja     0x42125c
  421230:	add    BYTE PTR cs:[ecx+0x30],bl
  421234:	add    BYTE PTR [edi],ah
  421236:	sbb    dh,BYTE PTR fs:[edx+edi*4+0x70]
  42123b:	outs   dx,BYTE PTR es:[esi]
  42123d:	les    esp,FWORD PTR [edx+ecx*2]
  421240:	jb     0x421208
  421242:	arpl   WORD PTR [edx],bx
  421244:	arpl   bx,bx
  421246:	inc    esp
  421247:	dec    edi
  421248:	push   esp
  421249:	cdq    
  42124a:	cmp    BYTE PTR [eax],dh
  42124c:	jno    0x421203
  42124e:	adc    ch,BYTE PTR [edx+eiz*2]
  421251:	jmp    0xb9a156de
  421256:	push   eax
  421257:	sub    al,0x51
  421259:	popf   
  42125a:	xor    DWORD PTR ds:0x4a808e67,ebp
  421260:	push   0x63243b9b
  421265:	mov    ecx,0x711c30
  42126a:	scas   al,BYTE PTR es:[edi]
  42126b:	mov    al,0x3d
  42126d:	inc    eax
  42126e:	scas   al,BYTE PTR es:[edi]
  42126f:	enter  0x4044,0x0
  421273:	add    BYTE PTR [esi-0x61bfba0a],bl
  421279:	dec    esp
  42127a:	dec    edx
  42127b:	inc    eax
  42127c:	scas   al,BYTE PTR es:[edi]
  42127d:	les    ecx,FWORD PTR [ecx+0x40]
  421280:	scas   al,BYTE PTR es:[edi]
  421281:	or     dl,BYTE PTR [eax+0x40]
  421284:	sahf   
  421285:	int3   
  421286:	push   esp
  421287:	inc    eax
  421288:	sahf   
  421289:	(bad)  
  42128a:	push   ecx
  42128b:	inc    eax
  42128c:	outs   dx,BYTE PTR ds:[esi]
  42128d:	int    0x56
  42128f:	inc    eax
  421290:	outs   dx,BYTE PTR ds:[esi]
  421291:	dec    esi
  421292:	pop    eax
  421293:	inc    eax
  421294:	pop    esi
  421295:	add    edx,DWORD PTR [ebp+0x40]
  421298:	pop    esi
  421299:	dec    esp
  42129a:	push   edi
  42129b:	inc    eax
  42129c:	outs   dx,BYTE PTR ds:[esi]
  42129d:	imul   ebx,DWORD PTR [ecx+0x40],0x6e
  4212a1:	fstp   DWORD PTR [edi+0x40]
  4212a4:	pop    esi
  4212a5:	mov    dl,0x60
  4212a7:	inc    eax
  4212a8:	pop    esi
  4212a9:	daa    
  4212aa:	pop    edi
  4212ab:	inc    eax
  4212ac:	cs jle 0x42130e
  4212af:	inc    eax
  4212b0:	cs hlt 
  4212b2:	arpl   WORD PTR [eax+0x1e],ax
  4212b5:	and    BYTE PTR [eax+eax*2+0x1e],0x5b
  4212ba:	inc    ax
  4212bc:	lods   al,BYTE PTR cs:[esi]
  4212be:	fs inc eax
  4212c0:	cs jp  0x42132d
  4212c3:	inc    eax
  4212c4:	push   ds
  4212c5:	repnz push 0x6b851e40
  4212cb:	inc    eax
  4212cc:	out    dx,al
  4212cd:	js     0x42133f
  4212cf:	inc    eax
  4212d0:	out    dx,al
  4212d1:	fisubr WORD PTR [eax+eax*2-0x22]
  4212d5:	shl    DWORD PTR [ecx+0x40],1
  4212d8:	add    BYTE PTR [eax],al
  4212da:	fsubrp st(5),st
  4212dc:	jae    0x42131e
  4212de:	out    dx,al
  4212df:	add    bh,BYTE PTR [eax+0x40]
  4212e2:	out    dx,al
  4212e3:	jmp    0x42135c
  4212e5:	inc    eax
  4212e6:	inc    edi
  4212e7:	mov    al,ds:0xa08778ba
  4212ec:	add    eax,0x1ea00779
  4212f1:	jns    0x4212fa
  4212f3:	mov    al,ds:0xa0078638
  4212f8:	dec    esp
  4212f9:	xchg   DWORD PTR [edi],eax
  4212fb:	mov    al,ds:0xa00789dc
  421300:	mov    ebx,0x24a00796
  421305:	xchg   ebp,eax
  421306:	pop    es
  421307:	mov    al,ds:0xa00797fa
  42130c:	jg     0x4212a6
  42130e:	pop    es
  42130f:	mov    al,ds:0xa00796e8
  421314:	ins    DWORD PTR es:[edi],dx
  421315:	xchg   edi,eax
  421316:	pop    es
  421317:	mov    al,ds:0xa00799d9
  42131c:	mov    ebx,0x39a0079a
  421321:	cdq    
  421322:	pop    es
  421323:	mov    al,ds:0xa0079953
  421328:	mov    al,0x99
  42132a:	pop    es
  42132b:	mov    al,ds:0xa087a3d8
  421330:	int    0xa7
  421332:	xchg   DWORD PTR [eax-0x5f785860],esp
  421338:	mov    DWORD PTR [ecx-0x46a35f79],edi
  42133e:	add    BYTE PTR [eax],al
  421340:	xchg   DWORD PTR [eax-0x5f784655],esp
  421346:	sbb    BYTE PTR [edi+eax*4-0x78439860],bh
  42134d:	mov    al,ds:0xa087bcba
  421352:	or     DWORD PTR [ebx-0x44d35f79],edi
  421358:	xchg   DWORD PTR [eax-0x5f7841b9],esp
  42135e:	mov    cl,0xbe
  421360:	xchg   DWORD PTR [ecx],ecx
  421362:	out    0x6d,eax
  421364:	pop    es
  421365:	dec    ecx
  421366:	out    0xe6,eax
  421368:	xchg   ecx,eax
  421369:	dec    eax
  42136a:	out    0x28,eax
  42136c:	mov    BYTE PTR [eax-0x19],cl
  42136f:	rol    BYTE PTR [eax],0x49
  421372:	out    0x47,eax
  421374:	xchg   BYTE PTR [eax-0x19],cl
  421377:	xchg   BYTE PTR gs:[eax-0x19],cl
  42137b:	test   BYTE PTR [eax+ecx*2+0x4885f1e7],0xe7
  421383:	imul   eax,DWORD PTR [eax+ecx*2+0x488838e7],0xffffffe7
  42138b:	ins    DWORD PTR es:[edi],dx
  42138c:	or     BYTE PTR [eax-0x19],0xf7
  421390:	lea    ecx,[eax-0x19]
  421393:	sbb    ecx,DWORD PTR [eax+ecx*2+0x488033e7]
  42139a:	out    0x3e,eax
  42139c:	xchg   esi,eax
  42139d:	dec    eax
  42139e:	out    0x7b,eax
  4213a0:	je     0x4213ea
  4213a2:	out    0xa4,eax
  4213a4:	add    BYTE PTR [eax],al
  4213a6:	je     0x4213f0
  4213a8:	out    0x38,eax
  4213aa:	outs   dx,DWORD PTR ds:[esi]
  4213ab:	dec    eax
  4213ac:	out    0x81,eax
  4213ae:	outs   dx,DWORD PTR ds:[esi]
  4213af:	dec    eax
  4213b0:	out    0xff,eax
  4213b2:	sbb    DWORD PTR [edx-0x19],ecx
  4213b5:	mov    ss,WORD PTR [eax]
  4213b7:	dec    edx
  4213b8:	out    0xc,eax
  4213ba:	or     eax,0xd8ae74a
  4213bf:	dec    edx
  4213c0:	out    0x3,eax
  4213c2:	inc    edi
  4213c3:	or     edi,esp
  4213c5:	add    eax,DWORD PTR [edi+0x9]
  4213c8:	out    0x3,eax
  4213ca:	inc    edi
  4213cb:	or     edi,esp
  4213cd:	add    eax,DWORD PTR [edi+0x9]
  4213d0:	out    0x3,eax
  4213d2:	inc    edi
  4213d3:	or     edi,esp
  4213d5:	inc    esi
  4213d6:	imul   esp,DWORD PTR [edx],0xffffffc4
  4213d9:	xor    DWORD PTR [ebx-0x17],edi
  4213dc:	jmp    DWORD PTR [eax-0x1697e5dd]
  4213e2:	sbb    DWORD PTR ds:0x3a1fbd3f,edi
  4213e8:	sub    esi,DWORD PTR [eax-0x44b2c689]
  4213ee:	adc    al,ah
  4213f0:	dec    esp
  4213f1:	mov    ds:0xd763e844,al
  4213f6:	outs   dx,DWORD PTR ds:[esi]
  4213f7:	adc    DWORD PTR [ebx-0x17],esp
  4213fa:	lahf   
  4213fb:	in     al,0x31
  4213fd:	xchg   ecx,eax
  4213fe:	inc    esp
  4213ff:	sbb    eax,0x96f7472
  421404:	ins    DWORD PTR es:[edi],dx
  421405:	push   eax
  421406:	outs   dx,DWORD PTR ds:[esi]
  421407:	jecxz  0x42146a
  421409:	dec    eax
  42140a:	add    BYTE PTR [eax],al
  42140c:	das    
  42140d:	or     DWORD PTR [edi],eax
  42140f:	loopne 0x42144a
  421411:	dec    DWORD PTR [edx]
  421413:	jecxz  0x421462
  421415:	jmp    0x24926a53
  42141a:	and    ah,ch
  42141c:	inc    edx
  42141d:	jmp    0xe9796085
  421422:	push   es
  421423:	add    al,0x74
  421425:	hlt    
  421426:	pop    ds
  421427:	hlt    
  421428:	dec    edx
  421429:	or     al,0x67
  42142b:	pop    es
  42142c:	imul   ecx,DWORD PTR [ebx],0x20
  42142f:	or     al,0x2b
  421431:	sub    al,0x71
  421433:	adc    eax,0xc9200b2b
  421438:	and    ebx,esp
  42143a:	pop    ds
  42143b:	lock and al,0xf4
  42143e:	fs push es
  421440:	dec    edi
  421441:	es and al,ah
  421444:	and    al,0x25
  421446:	jae    0x421420
  421448:	dec    ebp
  421449:	add    BYTE PTR [edx],cl
  42144b:	or     DWORD PTR [edi+0x28],ebx
  42144e:	ins    BYTE PTR es:[edi],dx
  42144f:	or     DWORD PTR [ecx+ebp*8],edi
  421452:	and    bl,BYTE PTR [ecx]
  421454:	jmp    0x4213e9
  421456:	sbb    eax,0x22ab4e00
  42145b:	jae    0x421499
  42145d:	lods   eax,DWORD PTR ds:[esi]
  42145e:	sbb    eax,0xfdad3e20
  421463:	push   edx
  421464:	push   es
  421465:	jmp    0x4214d2
  421467:	ins    BYTE PTR es:[edi],dx
  421468:	stos   DWORD PTR es:[edi],eax
  421469:	out    dx,eax
  42146a:	pusha  
  42146b:	arpl   WORD PTR [ebx+0x4160fb],di
  421471:	add    dh,bl
  421473:	cld    
  421474:	addr16 gs inc edx
  421477:	in     al,0x2e
  421479:	xor    dl,BYTE PTR [eax-0x61939415]
  42147f:	jmp    0x6571:0xd8c27077
  421486:	sbb    al,0x9a
  421488:	bound  edi,QWORD PTR [eax+0xb]
  42148b:	or     eax,0xa42f2d4f
  421490:	xor    ch,BYTE PTR ds:0xfffdb52f
  421496:	outs   dx,BYTE PTR ds:[esi]
  421497:	pop    es
  421498:	add    BYTE PTR [ebx+0xb],dl
  42149b:	inc    eax
  42149c:	imul   esi,DWORD PTR [eax+0xb],0x6f6efb
  4214a3:	call   0xfb807a1b
  4214a8:	fs jbe 0x4214e2
  4214ab:	fldenv [eax+0x67]
  4214ae:	dec    ebx
  4214af:	or     eax,0xee0a654f
  4214b4:	popa   
  4214b5:	push   eax
  4214b6:	pop    esp
  4214b7:	fidiv  WORD PTR [ebp+0x69]
  4214ba:	push   edx
  4214bb:	jmp    0x4360:0xde1e6562
  4214c2:	inc    esi
  4214c3:	out    0x6d,al
  4214c5:	addr16 dec ebx
  4214c7:	aaa    
  4214c8:	imul   esi,DWORD PTR [edi+esi*8-0x20],0x74
  4214cd:	push   eax
  4214ce:	in     al,dx
  4214cf:	fbstp  TBYTE PTR [ebp+0x69]
  4214d2:	inc    edi
  4214d3:	int3   
  4214d4:	es add BYTE PTR gs:[eax],al
  4214d8:	push   0xffffffa0
  4214da:	xor    al,0x63
  4214dc:	test   BYTE PTR [esi+0x26],cl
  4214df:	pop    edi
  4214e0:	jnp    0x4214af
  4214e2:	xor    eax,0x2fc55c6d
  4214e7:	push   eax
  4214e8:	push   ebp
  4214e9:	leave  
  4214ea:	pop    ss
  4214eb:	imul   eax,DWORD PTR [di+0x6328],0x47
  4214f1:	dec    edi
  4214f2:	es inc edx
  4214f4:	data16 jg 0x421523
  4214f7:	jae    0x421530
  4214f9:	push   eax
  4214fa:	adc    esp,DWORD PTR [edi+0x31]
  4214fd:	jns    0x42152c
  4214ff:	arpl   WORD PTR [eax],bp
  421501:	lea    eax,[ecx]
  421503:	push   ecx
  421504:	and    ch,BYTE PTR [esi+0x26]
  421507:	jno    0x421524
  421509:	adc    edx,DWORD PTR [ebx]
  42150b:	arpl   di,si
  42150d:	sub    eax,0x441e762b
  421512:	daa    
  421513:	and    ah,BYTE PTR gs:[eax-0x2df19cce]
  42151a:	and    BYTE PTR [edx-0x1e],dh
  42151d:	inc    eax
  42151e:	adc    DWORD PTR [ebx+0x16],esp
  421521:	(bad)  [esp+esi*2]
  421524:	out    0xef,al
  421526:	adc    DWORD PTR [edi-0x27],esp
  421529:	dec    eax
  42152a:	xor    BYTE PTR [ebx-0x20],ah
  42152d:	add    al,0x4
  42152f:	push   ecx
  421530:	jmp    0x2e02:0xde7110e0
  421537:	push   eax
  421538:	mov    ch,0x9
  42153a:	das    
  42153b:	pop    edi
  42153c:	add    BYTE PTR [eax],al
  42153e:	mov    ch,0x9
  421540:	cmp    BYTE PTR [ebp-0x64],ch
  421543:	or     eax,0x9b5502e
  421548:	push   ss
  421549:	addr16 mov bl,0xd
  42154c:	and    eax,0xe7094763
  421551:	add    eax,DWORD PTR [edi+0x9]
  421554:	out    0x3,eax
  421556:	inc    edi
  421557:	or     edi,esp
  421559:	add    eax,DWORD PTR [edi+0x9]
  42155c:	out    0x3,eax
  42155e:	inc    edi
  42155f:	or     edi,esp
  421561:	add    eax,DWORD PTR [edi+0x9]
  421564:	out    0x3,eax
  421566:	inc    edi
  421567:	or     edi,esp
  421569:	add    eax,DWORD PTR [edi+0x9]
  42156c:	out    0x3,eax
  42156e:	inc    edi
  42156f:	or     edi,esp
  421571:	add    eax,DWORD PTR [edi+0x9]
  421574:	out    0x3,eax
  421576:	inc    edi
  421577:	or     edi,esp
  421579:	add    eax,DWORD PTR [edi+0x9]
  42157c:	out    0x3,eax
  42157e:	inc    edi
  42157f:	or     edi,esp
  421581:	add    eax,DWORD PTR [edi+0x9]
  421584:	out    0x3,eax
  421586:	inc    edi
  421587:	or     edi,esp
  421589:	add    eax,DWORD PTR [edi+0x9]
  42158c:	out    0x3,eax
  42158e:	inc    edi
  42158f:	or     edi,esp
  421591:	add    eax,DWORD PTR [edi+0x9]
  421594:	out    0x3,eax
  421596:	inc    edi
  421597:	or     edi,esp
  421599:	add    eax,DWORD PTR [edi+0x9]
  42159c:	out    0x3,eax
  42159e:	inc    edi
  42159f:	or     edi,esp
  4215a1:	add    eax,DWORD PTR [eax]
  4215a3:	add    BYTE PTR [edi+0x9],al
  4215a6:	out    0x3,eax
  4215a8:	inc    edi
  4215a9:	or     edi,esp
  4215ab:	add    eax,DWORD PTR [edi+0x9]
  4215ae:	out    0x3,eax
  4215b0:	inc    edi
  4215b1:	or     edi,esp
  4215b3:	add    eax,DWORD PTR [edi+0x9]
  4215b6:	out    0x3,eax
  4215b8:	inc    edi
  4215b9:	or     edi,esp
  4215bb:	add    eax,DWORD PTR [edi+0x9]
  4215be:	out    0x3,eax
  4215c0:	inc    edi
  4215c1:	or     edi,esp
  4215c3:	add    eax,DWORD PTR [edi+0x9]
  4215c6:	out    0x3,eax
  4215c8:	inc    edi
  4215c9:	or     DWORD PTR [eax],eax
  4215cb:	jmp    0xe9421f14
  4215d0:	inc    esp
  4215d1:	or     DWORD PTR [eax],eax
  4215d3:	jmp    0xe9421f1c
  4215d8:	inc    esp
  4215d9:	or     DWORD PTR [eax],eax
  4215db:	jmp    0xe9421f24
  4215e0:	inc    esp
  4215e1:	or     DWORD PTR [eax],eax
  4215e3:	jmp    0xe9421f2c
  4215e8:	inc    esp
  4215e9:	or     DWORD PTR [eax],eax
  4215eb:	jmp    0xe9421f34
  4215f0:	inc    esp
  4215f1:	or     DWORD PTR [eax],eax
  4215f3:	jmp    0xe9421f3c
  4215f8:	inc    esp
  4215f9:	or     DWORD PTR [eax],eax
  4215fb:	jmp    0xe9421f44
  421600:	inc    esp
  421601:	or     DWORD PTR [eax],eax
  421603:	jmp    0xe9421f4c
  421608:	add    BYTE PTR [eax],al
  42160a:	inc    esp
  42160b:	or     DWORD PTR [eax],eax
  42160d:	jmp    0xe9421f56
  421612:	inc    esp
  421613:	or     DWORD PTR [eax],eax
  421615:	jmp    0xe9421f5e
  42161a:	inc    esp
  42161b:	or     DWORD PTR [eax],eax
  42161d:	jmp    0xe9421f66
  421622:	inc    esp
  421623:	or     DWORD PTR [eax],eax
  421625:	jmp    0xe9421f6e
  42162a:	inc    esp
  42162b:	or     DWORD PTR [eax],eax
  42162d:	jmp    0xe9421f76
  421632:	inc    esp
  421633:	or     DWORD PTR [eax],eax
  421635:	jmp    0xe9421f7e
  42163a:	inc    esp
  42163b:	or     DWORD PTR [eax],eax
  42163d:	jmp    0xe9421f86
  421642:	inc    esp
  421643:	or     DWORD PTR [eax],eax
  421645:	add    BYTE PTR [esi],bl
  421647:	or     al,0x0
  421649:	add    BYTE PTR [esi],bl
  42164b:	or     al,0x0
  42164d:	add    BYTE PTR [esi],ch
  42164f:	or     al,0x0
  421651:	add    BYTE PTR [esi],ch
  421653:	or     al,0x0
  421655:	add    BYTE PTR [esi],bl
  421657:	or     al,0x0
  421659:	add    BYTE PTR [esi],bl
  42165b:	or     al,0x0
  42165d:	add    dh,ch
  42165f:	or     eax,DWORD PTR [eax]
  421661:	add    dh,ch
  421663:	or     eax,DWORD PTR [eax]
  421665:	add    dh,bl
  421667:	or     eax,DWORD PTR [eax]
  421669:	add    dh,bl
  42166b:	or     eax,DWORD PTR [eax]
  42166d:	add    BYTE PTR [eax],al
  42166f:	add    dh,ch
  421671:	or     eax,DWORD PTR [eax]
  421673:	add    dh,ch
  421675:	or     eax,DWORD PTR [eax]
  421677:	add    dh,bl
  421679:	or     eax,DWORD PTR [eax]
  42167b:	add    dh,bl
  42167d:	or     eax,DWORD PTR [eax]
  42167f:	add    BYTE PTR [esi-0x51fffff5],ch
  421685:	or     eax,DWORD PTR [eax]
  421687:	add    BYTE PTR [esi-0x61fffff5],bl
  42168d:	or     eax,DWORD PTR [eax]
  42168f:	add    BYTE PTR [esi-0x51fffff5],ch
  421695:	or     eax,DWORD PTR [eax]
  421697:	add    BYTE PTR [esi-0x61fffff5],bl
  42169d:	or     eax,DWORD PTR [eax]
  42169f:	add    BYTE PTR [esi+0xb],ch
  4216a2:	add    BYTE PTR [eax],al
  4216a4:	outs   dx,BYTE PTR ds:[esi]
  4216a5:	or     eax,DWORD PTR [eax]
  4216a7:	add    BYTE PTR [esi+0xb],bl
  4216aa:	add    BYTE PTR [eax],al
  4216ac:	pop    esi
  4216ad:	or     eax,DWORD PTR [eax]
  4216af:	add    BYTE PTR [esi+0xb],ch
  4216b2:	add    BYTE PTR [eax],al
  4216b4:	outs   dx,BYTE PTR ds:[esi]
  4216b5:	or     eax,DWORD PTR [eax]
  4216b7:	add    BYTE PTR [esi+0xb],bl
  4216ba:	add    BYTE PTR [eax],al
  4216bc:	pop    esi
  4216bd:	or     eax,DWORD PTR [eax]
  4216bf:	add    BYTE PTR [edi-0x60],al
  4216c2:	add    DWORD PTR [eax],eax
  4216c4:	inc    edi
  4216c5:	mov    al,ds:0xa0470001
  4216ca:	add    DWORD PTR [eax],eax
  4216cc:	inc    edi
  4216cd:	mov    al,ds:0xa0470001
  4216d2:	add    DWORD PTR [eax],eax
  4216d4:	add    BYTE PTR [eax],al
  4216d6:	inc    edi
  4216d7:	mov    al,ds:0xa0470001
  4216dc:	add    DWORD PTR [eax],eax
  4216de:	inc    edi
  4216df:	mov    eax,ds:0x296842e0
  4216e4:	push   0xbd3ee8cb
  4216e9:	mov    edx,0x32354ecf
  4216ee:	push   edi
  4216ef:	sbb    DWORD PTR [eax-0x35],ebp
  4216f2:	lock mov eax,ds:0x206042e0
  4216f8:	add    DWORD PTR [eax+0x47],eax
  4216fb:	rol    BYTE PTR [ecx],0x10
  4216fe:	inc    edi
  4216ff:	cwde   
  421700:	add    DWORD PTR [edi+eax*2],eax
  421703:	mov    ds:0xa0b8ff01,al
  421708:	add    DWORD PTR [eax+0x4001a047],eax
  42170e:	inc    edi
  42170f:	mov    al,ds:0xa0472001
  421714:	add    DWORD PTR [eax],edx
  421716:	inc    edi
  421717:	mov    al,ds:0xa0470801
  42171c:	add    DWORD PTR [edi+eax*2],eax
  42171f:	mov    al,ds:0xa0470201
  421724:	add    edi,edi
  421726:	js     0x4216c8
  421728:	add    DWORD PTR [eax],0x41a047
  42172e:	inc    edi
  42172f:	mov    al,ds:0xa060ffe1
  421734:	icebp  
  421735:	call   FWORD PTR [eax-0x60]
  421738:	or     DWORD PTR [eax],eax
  42173a:	add    BYTE PTR [eax],al
  42173c:	inc    edi
  42173d:	or     edi,esp
  42173f:	dec    DWORD PTR [eax-0x72]
  421742:	out    0x5,eax
  421744:	inc    edi
  421745:	or     edi,esp
  421747:	add    al,0x47
  421749:	or     DWORD PTR [edi+0x4],esp
  42174c:	inc    edi
  42174d:	or     DWORD PTR [edi],esp
  42174f:	add    al,0x47
  421751:	or     edi,eax
  421753:	add    eax,DWORD PTR [edi+0x9]
  421756:	xlat   BYTE PTR ds:[ebx]
  421757:	add    eax,DWORD PTR [edi+0x9]
  42175a:	fild   WORD PTR [ebx]
  42175c:	inc    edi
  42175d:	or     ebx,ebp
  42175f:	add    eax,DWORD PTR [edi+0x9]
  421762:	jmp    0xe84b5e6a
  421767:	add    eax,DWORD PTR [edi+0x9]
  42176a:	paddq  mm5,QWORD PTR [eax]
  42176d:	jmp    0x9830b50
  421772:	add    ch,dl
  421774:	sub    eax,ebp
  421776:	iret   
  421777:	hlt    
  421778:	inc    ecx
  421779:	or     cl,dh
  42177b:	aad    0x1e
  42177d:	jmp    0x42177f
  42177f:	idiv   BYTE PTR [esi]
  421781:	or     esp,edx
  421783:	(bad)  
  421784:	outs   dx,DWORD PTR ds:[esi]
  421785:	jmp    0xf1ec:0xe76ad1d4
  42178c:	inc    edx
  42178d:	pop    es
  42178e:	(bad)  
  42178f:	rcr    BYTE PTR [ebp-0x1c],1
  421792:	fcomi  st,st(0)
  421794:	dec    ebp
  421795:	add    al,0xb3
  421797:	iret   
  421798:	ins    BYTE PTR es:[edi],dx
  421799:	in     eax,0xca
  42179b:	out    dx,eax
  42179c:	cmp    al,0x5
  42179e:	add    dh,bh
  4217a0:	add    BYTE PTR [eax],al
  4217a2:	aas    
  4217a3:	or     ch,al
  4217a5:	add    eax,0xddf074b
  4217aa:	dec    ebx
  4217ab:	(bad)  
  4217ac:	(bad)  
  4217ae:	push   edi
  4217af:	hlt    
  4217b0:	(bad)  
  4217b2:	dec    edi
  4217b3:	in     eax,dx
  4217b4:	jmp    0x4217a9
  4217b6:	dec    esi
  4217b7:	idiv   bh
  4217b9:	call   0xdf5b1f16
  4217be:	inc    edi
  4217bf:	cmc    
  4217c0:	push   es
  4217c1:	call   DWORD PTR [edx+0x0]
  4217c4:	add    DWORD PTR [eax],eax
  4217c6:	inc    esp
  4217c7:	inc    BYTE PTR ds:0xff0131f3
  4217cd:	rcr    BYTE PTR [ecx],0xef
  4217d0:	and    edx,edi
  4217d2:	push   ss
  4217d3:	lock and al,0xbb
  4217d6:	sub    ch,ch
  4217d8:	sub    al,0xc2
  4217da:	hlt    
  4217db:	out    0x34,al
  4217dd:	enter  0xe000,0x26
  4217e1:	sbb    BYTE PTR [eax],ah
  4217e3:	icebp  
  4217e4:	sbb    al,0xe9
  4217e6:	add    BYTE PTR [eax+eax*1+0x944e9],cl
  4217ed:	jmp    0xee3fa436
  4217f2:	call   0x45271882
  4217f7:	mov    WORD PTR [eax],es
  4217f9:	in     eax,dx
  4217fa:	fmul   DWORD PTR [ebx+0x944e5fd]
  421800:	add    cl,ch
  421802:	inc    esp
  421803:	mov    ebp,?
  421805:	jmp    0x8d02180a
  42180a:	std    
  42180b:	jmp    0xe542a3c8
  421810:	mov    al,0x8b
  421812:	add    cl,ch
  421814:	test   al,0x8c
  421816:	std    
  421817:	in     eax,0xa0
  421819:	mov    WORD PTR [eax],es
  42181b:	in     eax,dx
  42181c:	inc    esp
  42181d:	mov    WORD PTR [eax],es
  42181f:	jmp    0xed412168
  421824:	inc    esp
  421825:	or     DWORD PTR [eax],eax
  421827:	in     eax,0x80
  421829:	mov    ebp,?
  42182b:	jmp    0xe942a4a8
  421830:	jo     0x4217be
  421832:	add    BYTE PTR [eax],al
  421834:	pop    esi
  421835:	mov    esi,?
  421837:	jmp    FWORD PTR [esi-0x74]
  42183a:	(bad)  
  42183b:	jmp    FWORD PTR [esi+0x8]
  42183e:	std    
  42183f:	add    BYTE PTR [esi+0x8],bl
  421842:	std    
  421843:	add    BYTE PTR [edx-0x74],bl
  421846:	std    
  421847:	add    BYTE PTR [edx],ch
  421849:	or     ch,bh
  42184b:	jmp    FWORD PTR [edx]
  42184d:	or     BYTE PTR [eax],al
  42184f:	add    DWORD PTR [edx],ebp
  421851:	or     BYTE PTR [eax],al
  421853:	add    DWORD PTR [edx],ebx
  421855:	or     ch,bh
  421857:	jmp    FWORD PTR [esi]
  421859:	or     BYTE PTR [eax],al
  42185b:	add    BYTE PTR [edx],ch
  42185d:	mov    ebp,?
  42185f:	jmp    FWORD PTR [edx]
  421861:	mov    esi,?
  421863:	call   FWORD PTR [esi]
  421865:	or     BYTE PTR [eax],al
  421867:	add    esi,ebp
  421869:	pop    es
  42186a:	std    
  42186b:	inc    DWORD PTR [eax]
  42186d:	add    dl,ch
  42186f:	mov    edi,esi
  421871:	add    dl,ch
  421873:	pop    es
  421874:	add    BYTE PTR [eax],al
  421876:	fiadd  WORD PTR [edi]
  421878:	std    
  421879:	add    dh,ch
  42187b:	mov    edi,esi
  42187d:	add    dh,ch
  42187f:	pop    es
  421880:	add    BYTE PTR [ecx],al
  421882:	fiadd  WORD PTR [edi]
  421884:	add    BYTE PTR [ecx],al
  421886:	fimul  WORD PTR [ebx+0x7aafffd]
  42188c:	std    
  42188d:	add    BYTE PTR [esi-0x610002f9],ch
  421893:	mov    edi,esi
  421895:	call   FWORD PTR [edx-0x51fefff9]
  42189b:	mov    edi,ebp
  42189d:	jmp    FWORD PTR [edx-0x55fffff9]
  4218a3:	mov    edi,ebp
  4218a5:	add    BYTE PTR [edx+0x6afffe8b],bl
  4218ab:	mov    edi,esi
  4218ad:	add    BYTE PTR [edi-0x62],al
  4218b0:	add    edi,edi
  4218b2:	jo     0x421855
  4218b4:	add    edi,edi
  4218b6:	inc    edi
  4218b7:	sahf   
  4218b8:	std    
  4218b9:	inc    DWORD PTR [edi-0x5a]
  4218bc:	add    DWORD PTR [eax],eax
  4218be:	inc    esi
  4218bf:	sahf   
  4218c0:	std    
  4218c1:	call   DWORD PTR [eax-0x5b]
  4218c4:	std    
  4218c5:	dec    BYTE PTR [eax-0x5f]
  4218c8:	std    
  4218c9:	inc    BYTE PTR [edi-0x5c]
  4218cc:	std    
  4218cd:	(bad)  
  4218ce:	cmp    BYTE PTR [ecx+0xfffd],ah
  4218d4:	inc    edi
  4218d5:	mov    al,ds:0xa047fffd
  4218da:	add    DWORD PTR [eax],eax
  4218dc:	inc    edi
  4218dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218de:	add    edi,edi
  4218e0:	sbb    BYTE PTR [ecx-0x5eef0103],ah
  4218e6:	add    DWORD PTR [eax],eax
  4218e8:	inc    edi
  4218e9:	pushf  
  4218ea:	add    edi,edi
  4218ec:	inc    edi
  4218ed:	add    BYTE PTR [eax+edx*1+0x81a0c7],al
  4218f4:	(bad)  
  4218f5:	mov    al,ds:0x470081
  4218fa:	test   BYTE PTR [eax],dl
  4218fc:	inc    edi
  4218fd:	mov    al,ds:0x471001
  421902:	add    al,0x0
  421904:	inc    edi
  421905:	add    BYTE PTR [eax+edx*1],al
  421908:	mov    eax,0xc0c70081
  42190e:	add    DWORD PTR [eax],eax
  421910:	mov    eax,0xa0c71081
  421916:	adc    DWORD PTR [eax],0x1a0c7
  42191c:	(bad)  
  42191d:	mov    al,ds:0xa0c70081
  421922:	add    DWORD PTR [eax],edx
  421924:	inc    edi
  421925:	rol    BYTE PTR [ecx],0x0
  421928:	inc    edi
  421929:	or     DWORD PTR [edi],eax
  42192b:	add    al,0x57
  42192d:	mov    edi,esp
  42192f:	adc    DWORD PTR [edi+0x9],0x7
  421933:	add    al,0x57
  421935:	or     DWORD PTR [edi],eax
  421937:	test   BYTE PTR [eax],al
  421939:	add    BYTE PTR [edi-0x77],al
  42193c:	out    0x3,eax
  42193e:	inc    edi
  42193f:	or     edi,esp
  421941:	add    eax,DWORD PTR [edi-0x77]
  421944:	out    0x83,eax
  421946:	inc    edi
  421947:	or     DWORD PTR [edi],eax
  421949:	test   BYTE PTR [edi],dh
  42194b:	or     edi,esp
  42194d:	add    edx,DWORD PTR [edi-0x77]
  421950:	mov    DWORD PTR [ebx],0x3c70957
  421956:	inc    edi
  421957:	mov    edi,esp
  421959:	add    eax,DWORD PTR [edi+0x9]
  42195c:	out    0x83,eax
  42195e:	aaa    
  42195f:	or     edi,eax
  421961:	add    DWORD PTR [edi+0x9],0xffffffe7
  421965:	xor    DWORD PTR [edi],0xffffff89
  421968:	out    0x3,eax
  42196a:	aaa    
  42196b:	mov    DWORD PTR [edi],eax
  42196d:	test   BYTE PTR [edi+0x9],al
  421970:	out    0x3,eax
  421972:	inc    edi
  421973:	or     DWORD PTR [edi],eax
  421975:	test   BYTE PTR [edi+0x9],dl
  421978:	pop    es
  421979:	add    al,0x57
  42197b:	mov    edi,esp
  42197d:	add    esi,DWORD PTR [edi]
  42197f:	or     DWORD PTR [edi],eax
  421981:	test   BYTE PTR [edi-0x77],al
  421984:	out    0x3,eax
  421986:	aaa    
  421987:	mov    edi,esp
  421989:	xor    DWORD PTR [edi],0xffffff89
  42198c:	out    0x83,eax
  42198e:	inc    edi
  42198f:	or     edi,esp
  421991:	add    edx,DWORD PTR [edi-0x77]
  421994:	out    0x83,eax
  421996:	inc    edi
  421997:	mov    edi,eax
  421999:	add    eax,DWORD PTR [edi+0x9]
  42199c:	mov    DWORD PTR [ebx-0x76c90000],0x93783c7
  4219a6:	add    cl,cl
  4219a8:	inc    esp
  4219a9:	or     DWORD PTR [eax],eax
  4219ab:	jmp    0xe9422274
  4219b0:	inc    esp
  4219b1:	or     DWORD PTR [eax+0x8c309],eax
  4219b7:	jmp    0xe9c21280
  4219bc:	inc    esp
  4219bd:	stc    
  4219be:	dec    DWORD PTR [eax]
  4219c0:	dec    ebx
  4219c1:	or     DWORD PTR [eax-0x6bcf7],eax
  4219c7:	or     bl,cl
  4219c9:	or     BYTE PTR [eax-0x7ff6bcf7],al
  4219cf:	leave  
  4219d0:	inc    esp
  4219d1:	sbb    DWORD PTR [eax],eax
  4219d3:	jmp    0xe942339c
  4219d8:	inc    esp
  4219d9:	or     DWORD PTR [eax],eax
  4219db:	jmp    0xc9c223a4
  4219e0:	les    ecx,FWORD PTR [ecx]
  4219e2:	add    cl,ch
  4219e4:	inc    esp
  4219e5:	or     DWORD PTR [eax-0x7fe6bb37],eax
  4219eb:	leave  
  4219ec:	les    ebx,FWORD PTR [ecx]
  4219ee:	sub    cl,0xc4
  4219f1:	sbb    DWORD PTR [eax],eax
  4219f3:	icebp  
  4219f4:	inc    esi
  4219f5:	or     DWORD PTR [eax],eax
  4219f7:	jmp    0xe94a2542
  4219fc:	inc    esp
  4219fd:	or     DWORD PTR [eax],eax
  4219ff:	icebp  
  421a00:	inc    esp
  421a01:	or     ecx,DWORD PTR [eax]
  421a03:	jmp    0x9881a08
  421a08:	or     cl,ch
  421a0a:	inc    esp
  421a0b:	or     DWORD PTR [eax],eax
  421a0d:	loope  0x421a55
  421a0f:	or     eax,DWORD PTR [eax]
  421a11:	jmp    0xf14a235c
  421a16:	inc    esp
  421a17:	or     eax,DWORD PTR [eax]
  421a19:	loope  0x421a5f
  421a1b:	or     DWORD PTR [eax],ecx
  421a1d:	loope  0x421a63
  421a1f:	or     DWORD PTR [eax],ecx
  421a21:	add    BYTE PTR [esi-0x69fffdf4],ch
  421a27:	or     al,BYTE PTR [edx]
  421a29:	or     BYTE PTR [esi-0x61fffdf4],ah
  421a2f:	or     al,0x2
  421a31:	or     BYTE PTR [esi+0xa],dh
  421a34:	add    BYTE PTR [eax],al
  421a36:	outs   dx,BYTE PTR ds:[esi]
  421a37:	or     al,0x0
  421a39:	or     BYTE PTR [esi+0xc],ah
  421a3c:	add    BYTE PTR [eax],al
  421a3e:	pop    esi
  421a3f:	or     al,BYTE PTR [edx]
  421a41:	or     BYTE PTR [esi+0xa],ch
  421a44:	add    BYTE PTR [eax],al
  421a46:	outs   dx,BYTE PTR ds:[esi]
  421a47:	or     al,BYTE PTR [edx]
  421a49:	add    BYTE PTR [esi+0xc],bl
  421a4c:	add    cl,BYTE PTR [eax]
  421a4e:	data16 or al,0x2
  421a51:	or     BYTE PTR [esi],dh
  421a53:	or     al,BYTE PTR [edx]
  421a55:	add    BYTE PTR [esi],dh
  421a57:	or     al,BYTE PTR [eax]
  421a59:	or     BYTE PTR [esi],bl
  421a5b:	or     al,BYTE PTR [edx]
  421a5d:	add    BYTE PTR [esi],bl
  421a5f:	or     al,0x2
  421a61:	add    BYTE PTR [esi],dl
  421a63:	or     al,BYTE PTR [eax]
  421a65:	or     BYTE PTR [esi],dl
  421a67:	or     al,0x0
  421a69:	add    BYTE PTR [eax],al
  421a6b:	add    BYTE PTR [esi],ah
  421a6d:	or     al,BYTE PTR [edx]
  421a6f:	or     BYTE PTR [esi],bl
  421a71:	or     al,BYTE PTR [eax]
  421a73:	add    dh,ch
  421a75:	or     eax,DWORD PTR [eax]
  421a77:	or     dh,ch
  421a79:	or     DWORD PTR [edx],eax
  421a7b:	or     dh,bl
  421a7d:	or     eax,DWORD PTR [eax]
  421a7f:	or     dh,ah
  421a81:	or     eax,DWORD PTR [edx]
  421a83:	add    dh,dl
  421a85:	or     DWORD PTR [eax],eax
  421a87:	add    dh,ch
  421a89:	or     eax,DWORD PTR [edx]
  421a8b:	add    dh,bl
  421a8d:	or     DWORD PTR [edx],eax
  421a8f:	or     dh,bl
  421a91:	or     DWORD PTR [eax],eax
  421a93:	or     BYTE PTR [esi-0x51fffff5],ch
  421a99:	or     DWORD PTR [eax],eax
  421a9b:	add    BYTE PTR [edi+0x6a],al
  421a9e:	add    DWORD PTR [edx],eax
  421aa0:	inc    edi
  421aa1:	push   0xffffffff
  421aa3:	add    DWORD PTR [edi+0x72],ecx
  421aa6:	(bad)  
  421aa7:	dec    DWORD PTR [edi+0x7a]
  421aaa:	add    DWORD PTR [eax],eax
  421aac:	aas    
  421aad:	jb     0x421aae
  421aaf:	inc    DWORD PTR [edi+0x72]
  421ab2:	add    DWORD PTR [eax],eax
  421ab4:	inc    edi
  421ab5:	jp     0x421ab8
  421ab7:	add    cl,BYTE PTR [edi+0x7a]
  421aba:	(bad)  
  421abb:	(bad)  
  421abc:	aas    
  421abd:	jb     0x421ac0
  421abf:	add    al,BYTE PTR [edi+0x72]
  421ac2:	add    DWORD PTR [eax],eax
  421ac4:	dec    edi
  421ac5:	jp     0x421ac6
  421ac7:	add    DWORD PTR [edi+0x7a],ecx
  421aca:	add    DWORD PTR [eax],eax
  421acc:	inc    edi
  421acd:	push   0xffffffff
  421acf:	add    DWORD PTR [eax],eax
  421ad1:	add    BYTE PTR [edi+0x72],al
  421ad4:	inc    DWORD PTR [ecx]
  421ad6:	inc    edi
  421ad7:	js     0x421ada
  421ad9:	add    BYTE PTR [edi+0x70],cl
  421adc:	add    DWORD PTR [edx],eax
  421ade:	aas    
  421adf:	push   0x683fffff
  421ae4:	(bad)  
  421ae5:	inc    DWORD PTR [edi+0x70]
  421ae8:	add    DWORD PTR [edx],eax
  421aea:	dec    edi
  421aeb:	js     0x421aec
  421aed:	add    DWORD PTR [edi+0x68],eax
  421af0:	add    DWORD PTR [eax],eax
  421af2:	inc    edi
  421af3:	push   0x704f0201
  421af8:	inc    DWORD PTR [ecx]
  421afa:	inc    edi
  421afb:	jno    0x421ade
  421afd:	jg     0x421b46
  421aff:	icebp  
  421b00:	loopne 0x421b01
  421b02:	call   0xe141fbf8
  421b07:	lock add BYTE PTR [eax],al
  421b0a:	inc    edi
  421b0b:	lock loopne 0x421b8d
  421b0e:	inc    edi
  421b0f:	icebp  
  421b10:	add    BYTE PTR [eax-0x7ffe8eb9],al
  421b16:	inc    edi
  421b17:	or     eax,ebp
  421b19:	jecxz  0x421ad3
  421b1b:	xchg   bh,ah
  421b1d:	add    eax,DWORD PTR [edi+0x9]
  421b20:	out    0xe3,eax
  421b22:	sub    BYTE PTR [ecx],cl
  421b24:	out    0xe3,eax
  421b26:	and    BYTE PTR [ecx],cl
  421b28:	push   0x680918e3
  421b2d:	add    eax,DWORD PTR [edi+0x9]
  421b30:	out    0x3,eax
  421b32:	inc    edi
  421b33:	or     DWORD PTR [edi+0x3],esp
  421b36:	add    BYTE PTR [eax],al
  421b38:	(bad)  
  421b39:	or     eax,ebp
  421b3b:	add    eax,edi
  421b3d:	or     eax,ebp
  421b3f:	add    eax,DWORD PTR [edi+0x9]
  421b42:	out    0xe3,eax
  421b44:	push   0xc703e786
  421b49:	or     eax,ebp
  421b4b:	jecxz  0x421b25
  421b4d:	or     BYTE PTR [edi+0x4],ah
  421b50:	inc    edi
  421b51:	or     edi,esp
  421b53:	add    eax,edi
  421b55:	or     eax,ebp
  421b57:	jecxz  0x421b99
  421b59:	xchg   BYTE PTR [edi-0x1c],ah
  421b5c:	cmp    BYTE PTR [esi+0x8c70468],al
  421b62:	call   0x674b626a
  421b67:	in     al,0x20
  421b69:	xchg   BYTE PTR [edi+0x4],ah
  421b6c:	(bad)  
  421b6d:	or     bh,ah
  421b6f:	jecxz  0x421b81
  421b71:	xchg   BYTE PTR [edi-0x1c],ah
  421b74:	mov    BYTE PTR [ecx],cl
  421b76:	push   0x680980e4
  421b7b:	add    al,0x47
  421b7d:	or     DWORD PTR [edi+0x4],esp
  421b80:	(bad)  
  421b81:	or     al,ch
  421b83:	add    eax,edi
  421b85:	or     bh,ah
  421b87:	jecxz  0x421be9
  421b89:	or     DWORD PTR [eax-0x1c],ebp
  421b8c:	pop    eax
  421b8d:	or     DWORD PTR [eax+0x4],ebp
  421b90:	inc    edi
  421b91:	or     DWORD PTR [eax],eax
  421b93:	jmp    0xe94224dc
  421b98:	inc    esp
  421b99:	or     DWORD PTR [eax],eax
  421b9b:	jmp    0x5e61ba0
  421ba0:	add    BYTE PTR [ecx-0x55],ch
  421ba3:	test   ebp,edi
  421ba5:	imul   eax,DWORD PTR [ebx-0x77],0x894b6800
  421bac:	add    al,ch
  421bae:	inc    esp
  421baf:	or     DWORD PTR [eax],eax
  421bb1:	call   0x6842215a
  421bb6:	mov    ds:0x6b68fd85,eax
  421bbb:	test   ebp,edi
  421bbd:	imul   eax,DWORD PTR [ecx+ecx*1+0x0],0x56468
  421bc5:	push   0xe8000944
  421bca:	inc    esp
  421bcb:	or     DWORD PTR [eax],eax
  421bcd:	jmp    0xe93fa136
  421bd2:	inc    esp
  421bd3:	mov    DWORD PTR [eax],eax
  421bd5:	call   0x6a3fa13e
  421bda:	and    al,0x5
  421bdc:	add    BYTE PTR [eax+0x44],ch
  421bdf:	mov    DWORD PTR [eax],eax
  421be1:	call   0x6a3fa10a
  421be6:	and    al,0x85
  421be8:	std    
  421be9:	jmp    0xe842a532
  421bee:	and    al,0x5
  421bf0:	add    BYTE PTR [ecx+0x44],ch
  421bf3:	or     DWORD PTR [eax],eax
  421bf5:	jmp    0xe942a53e
  421bfa:	in     al,0x84
  421bfc:	std    
  421bfd:	imul   esp,esp,0xe90004
  421c03:	add    BYTE PTR [ebx+0x9],cl
  421c06:	add    cl,ch
  421c08:	inc    ebx
  421c09:	adc    DWORD PTR [edx],eax
  421c0b:	jmp    0x442d54
  421c10:	out    dx,al
  421c11:	or     eax,0x8de4200
  421c16:	or     BYTE PTR [eax],al
  421c18:	fimul  WORD PTR ds:0x8ae0000
  421c1e:	add    BYTE PTR [eax-0x52],al
  421c21:	or     BYTE PTR [eax],cl
  421c23:	add    bl,BYTE PTR [esi-0x61bff7f3]
  421c29:	or     BYTE PTR [eax],cl
  421c2b:	add    BYTE PTR [esi-0x51fdfff3],ch
  421c31:	or     eax,0xd9e4008
  421c36:	add    BYTE PTR [edx-0x62],al
  421c39:	or     BYTE PTR [eax],cl
  421c3b:	inc    edx
  421c3c:	outs   dx,BYTE PTR ds:[esi]
  421c3d:	or     eax,0x86e0008
  421c42:	add    BYTE PTR [eax+0x5e],al
  421c45:	or     BYTE PTR [eax],al
  421c47:	add    bl,BYTE PTR [esi+0x8]
  421c4a:	or     BYTE PTR [eax+0x6e],al
  421c4d:	or     BYTE PTR [eax],cl
  421c4f:	inc    eax
  421c50:	outs   dx,BYTE PTR ds:[esi]
  421c51:	or     BYTE PTR [eax],al
  421c53:	add    BYTE PTR [esi+0x7],bl
  421c56:	add    BYTE PTR [eax+0x5e],al
  421c59:	pop    es
  421c5a:	or     BYTE PTR [edx+0x2e],al
  421c5d:	pop    es
  421c5e:	or     BYTE PTR [edx+0x2e],al
  421c61:	pop    es
  421c62:	add    BYTE PTR [edx],al
  421c64:	push   ds
  421c65:	or     BYTE PTR [eax],cl
  421c67:	inc    edx
  421c68:	add    BYTE PTR [eax],al
  421c6a:	push   ds
  421c6b:	pop    es
  421c6c:	add    BYTE PTR [eax+0x2e],al
  421c6f:	or     BYTE PTR [eax],al
  421c71:	add    BYTE PTR [esi],ch
  421c73:	or     BYTE PTR [eax],al
  421c75:	inc    edx
  421c76:	push   ds
  421c77:	pop    es
  421c78:	or     BYTE PTR [edx],al
  421c7a:	push   ds
  421c7b:	or     BYTE PTR [eax],al
  421c7d:	add    ch,dh
  421c7f:	pop    es
  421c80:	add    BYTE PTR [edx-0x12],al
  421c83:	push   es
  421c84:	or     BYTE PTR [eax],al
  421c86:	fiadd  WORD PTR [edi]
  421c88:	or     BYTE PTR [eax],al
  421c8a:	inc    edi
  421c8b:	jb     0x421c8f
  421c8d:	add    BYTE PTR [ebp+0x47000272],al
  421c93:	jb     0x421c96
  421c95:	add    BYTE PTR [ebp+0x72],al
  421c98:	add    DWORD PTR [eax],eax
  421c9a:	xchg   DWORD PTR [edx+0x1],esi
  421c9d:	or     BYTE PTR [ebp+0x72],al
  421ca0:	add    al,BYTE PTR [eax]
  421ca2:	add    eax,0x7080272
  421ca7:	jb     0x421cab
  421ca9:	add    BYTE PTR [ebp+0x72],al
  421cac:	add    DWORD PTR [eax],eax
  421cae:	pop    es
  421caf:	jb     0x421cb2
  421cb1:	or     BYTE PTR ds:0x45080272,al
  421cb7:	jb     0x421cbb
  421cb9:	or     BYTE PTR [edi],al
  421cbb:	jb     0x421cbf
  421cbd:	add    BYTE PTR [edi+0x72],al
  421cc0:	add    DWORD PTR [eax],eax
  421cc2:	inc    ebp
  421cc3:	jb     0x421cc6
  421cc5:	or     BYTE PTR ds:0x5080272,al
  421ccb:	jb     0x421ccf
  421ccd:	or     BYTE PTR [eax],al
  421ccf:	add    BYTE PTR [edi+0x72],al
  421cd2:	add    DWORD PTR [eax],eax
  421cd4:	add    eax,0x5080272
  421cd9:	jb     0x421cdc
  421cdb:	or     BYTE PTR [ebp+0x72],al
  421cde:	add    DWORD PTR [eax],eax
  421ce0:	inc    edi
  421ce1:	jo     0x421ce4
  421ce3:	or     BYTE PTR [edi-0x7afffe90],al
  421ce9:	jo     0x421ced
  421ceb:	or     BYTE PTR [edi+0x70],al
  421cee:	add    al,BYTE PTR [eax]
  421cf0:	inc    ebp
  421cf1:	jo     0x421cf5
  421cf3:	add    BYTE PTR [edi+0x47080170],al
  421cf9:	jo     0x421cfc
  421cfb:	add    BYTE PTR [edi+0x70],al
  421cfe:	add    DWORD PTR [eax],ecx
  421d00:	xchg   DWORD PTR [eax+0x2],esi
  421d03:	or     BYTE PTR [ebp+0x9],al
  421d06:	out    0x2,eax
  421d08:	inc    edi
  421d09:	leave  
  421d0a:	test   BYTE PTR [ebx],0x47
  421d0d:	sub    edi,esp
  421d0f:	add    eax,DWORD PTR [edi+0x4743e729]
  421d15:	or     edi,edx
  421d17:	inc    ebx
  421d18:	xchg   DWORD PTR [ecx],ebp
  421d1a:	out    0x3,eax
  421d1c:	xchg   DWORD PTR [ecx],ebp
  421d1e:	xlat   BYTE PTR ds:[ebx]
  421d1f:	add    eax,DWORD PTR [edi+0x9]
  421d22:	xlat   BYTE PTR ds:[ebx]
  421d23:	inc    ebx
  421d24:	pop    es
  421d25:	sub    edi,esp
  421d27:	add    eax,DWORD PTR [edi]
  421d29:	or     edi,esp
  421d2b:	inc    ebx
  421d2c:	inc    edi
  421d2d:	sub    edi,esi
  421d2f:	inc    ebx
  421d30:	pop    es
  421d31:	or     edi,esp
  421d33:	add    eax,DWORD PTR [eax]
  421d35:	add    BYTE PTR [edi],al
  421d37:	or     edi,edx
  421d39:	add    eax,DWORD PTR [edi+0x29]
  421d3c:	xlat   BYTE PTR ds:[ebx]
  421d3d:	add    eax,DWORD PTR [edi]
  421d3f:	or     edi,esp
  421d41:	inc    ebx
  421d42:	inc    edi
  421d43:	sub    edi,esp
  421d45:	add    eax,DWORD PTR [edi+0x29]
  421d48:	test   DWORD PTR [ebx+0x47],0x4703e709
  421d4f:	or     edi,esi
  421d51:	add    eax,DWORD PTR [edi]
  421d53:	or     edi,esi
  421d55:	inc    ebx
  421d56:	inc    edi
  421d57:	sub    edi,esp
  421d59:	inc    ebx
  421d5a:	inc    edi
  421d5b:	or     edi,esp
  421d5d:	inc    ebx
  421d5e:	pop    es
  421d5f:	or     edi,edx
  421d61:	inc    ebx
  421d62:	inc    edi
  421d63:	sub    edi,edx
  421d65:	add    eax,DWORD PTR [edi+0x9]
  421d68:	test   DWORD PTR [ebx],0x3f72987
  421d6e:	xchg   DWORD PTR [ecx],ebp
  421d70:	out    0x3,eax
  421d72:	inc    edi
  421d73:	or     edi,esi
  421d75:	inc    ebx
  421d76:	xchg   DWORD PTR [ecx],ecx
  421d78:	out    0x43,eax
  421d7a:	xchg   DWORD PTR [ecx],ebp
  421d7c:	xlat   BYTE PTR ds:[ebx]
  421d7d:	inc    ebx
  421d7e:	inc    edi
  421d7f:	or     DWORD PTR [eax],eax
  421d81:	jmp    0xe941e70a
  421d86:	test   cl,cl
  421d88:	pop    ds
  421d89:	jmp    0xe96226d2
  421d8e:	test   BYTE PTR [ecx],cl
  421d90:	and    cl,bh
  421d92:	inc    esp
  421d93:	or     DWORD PTR [eax],eax
  421d95:	stc    
  421d96:	inc    esp
  421d97:	leave  
  421d98:	pop    ds
  421d99:	jmp    0xc9c61d9e
  421d9e:	(bad)  
  421d9f:	fadd   DWORD PTR [ecx+ecx*8-0x36bb16e1]
  421da6:	(bad)  
  421da7:	fadd   DWORD PTR [ecx+ecx*1]
  421daa:	add    cl,bh
  421dac:	inc    esp
  421dad:	or     DWORD PTR [eax],esp
  421daf:	jmp    0xe941e6f8
  421db4:	add    al,0x9
  421db6:	and    cl,ch
  421db8:	inc    esp
  421db9:	or     DWORD PTR [eax],esp
  421dbb:	fld    DWORD PTR [ecx+ecx*1]
  421dbe:	add    cl,bl
  421dc0:	inc    esp
  421dc1:	or     DWORD PTR [eax],esp
  421dc3:	fld    DWORD PTR [ecx+ecx*8]
  421dc6:	pop    ds
  421dc7:	jmp    0xe941e6d0
  421dcc:	inc    esp
  421dcd:	leave  
  421dce:	pop    ds
  421dcf:	stc    
  421dd0:	add    al,0xc9
  421dd2:	(bad)  
  421dd3:	call   0xe961e6dc
  421dd8:	inc    esp
  421dd9:	or     DWORD PTR [eax],eax
  421ddb:	fld    DWORD PTR [ecx+ecx*8+0x1f]
  421ddf:	fld    DWORD PTR [ecx+ecx*1+0x0]
  421de3:	jmp    0xe942276c
  421de8:	inc    esp
  421de9:	leave  
  421dea:	pop    ds
  421deb:	stc    
  421dec:	test   cl,cl
  421dee:	(bad)  
  421def:	call   0xf9422778
  421df4:	inc    esp
  421df5:	leave  
  421df6:	(bad)  
  421df7:	clc    
  421df8:	test   BYTE PTR [ecx],cl
  421dfa:	and    BYTE PTR [eax],al
  421dfc:	push   ds
  421dfd:	or     eax,0x0
  421e02:	push   ds
  421e03:	int    0x3f
  421e05:	and    dh,ch
  421e07:	or     al,0x0
  421e09:	and    BYTE PTR [esi],bl
  421e0b:	or     eax,0xccee0040
  421e10:	call   FWORD PTR [edi]
  421e12:	fimul  WORD PTR [eax+eiz*1]
  421e15:	add    ah,ch
  421e17:	or     al,0x20
  421e19:	add    al,0xec
  421e1b:	test   ch,bh
  421e1d:	add    ebx,esi
  421e1f:	or     al,0x0
  421e21:	add    dh,bl
  421e23:	test   ch,bh
  421e25:	jmp    FWORD PTR [esp+eax*4-0x7b53fc03]
  421e2c:	sbb    eax,0x1d849e00
  421e31:	add    al,0x9c
  421e33:	test   BYTE PTR ds:0x200cae04,bl
  421e39:	add    BYTE PTR [esi-0x63fffff4],ch
  421e3f:	or     al,0x0
  421e41:	add    al,0x9c
  421e43:	or     al,0x0
  421e45:	add    BYTE PTR [esi+0xc],ch
  421e48:	add    BYTE PTR [esp+ebp*2],al
  421e4b:	or     al,0x20
  421e4d:	add    al,0x5c
  421e4f:	test   ch,bh
  421e51:	call   FWORD PTR [esi-0x7c]
  421e54:	std    
  421e55:	add    ebp,DWORD PTR [esp+eax*4+0x1d]
  421e59:	add    BYTE PTR [esp+ecx*1+0x20],ch
  421e5d:	add    BYTE PTR [esi-0x7c],bl
  421e60:	std    
  421e61:	add    ebx,DWORD PTR [esp+ecx*1+0x0]
  421e65:	add    al,0x0
  421e67:	add    BYTE PTR [esi],ch
  421e69:	or     al,0x20
  421e6b:	add    al,0x2e
  421e6d:	test   BYTE PTR ds:0x200c1c04,bl
  421e73:	add    BYTE PTR [esi],bl
  421e75:	or     al,0x20
  421e77:	add    al,0x47
  421e79:	jb     0x421e74
  421e7b:	call   FWORD PTR [eax]
  421e7d:	je     0x421e78
  421e7f:	call   DWORD PTR [eax]
  421e81:	je     0x421e7c
  421e83:	pop    ds
  421e84:	inc    ebx
  421e85:	jb     0x421e80
  421e87:	pop    ds
  421e88:	inc    edi
  421e89:	je     0x421e8c
  421e8b:	add    BYTE PTR [edi+0x72],al
  421e8e:	add    DWORD PTR [eax],eax
  421e90:	dec    ebx
  421e91:	jb     0x421e8c
  421e93:	pop    ds
  421e94:	inc    edi
  421e95:	jb     0x421e98
  421e97:	add    BYTE PTR [ebx+0x72],cl
  421e9a:	stc    
  421e9b:	pop    ds
  421e9c:	inc    edi
  421e9d:	jb     0x421ea0
  421e9f:	and    BYTE PTR [edi+0x74],al
  421ea2:	stc    
  421ea3:	inc    DWORD PTR [esp+esi*2-0x7]
  421ea7:	inc    DWORD PTR [esp+esi*2+0x1]
  421eab:	and    BYTE PTR [ebx+0x74],al
  421eae:	add    DWORD PTR [eax],esp
  421eb0:	dec    ebx
  421eb1:	je     0x421eb4
  421eb3:	add    BYTE PTR [edi+0x74],al
  421eb6:	add    DWORD PTR [eax],esp
  421eb8:	inc    edi
  421eb9:	jb     0x421ebc
  421ebb:	add    BYTE PTR [ebx+0x72],al
  421ebe:	stc    
  421ebf:	inc    DWORD PTR [edx+esi*2+0x1]
  421ec3:	and    BYTE PTR [edi+0x72],al
  421ec6:	stc    
  421ec7:	pop    ds
  421ec8:	dec    ebx
  421ec9:	je     0x421ec4
  421ecb:	inc    DWORD PTR [eax]
  421ecd:	add    BYTE PTR [eax+0x73],bh
  421ed0:	stc    
  421ed1:	pop    ds
  421ed2:	inc    edi
  421ed3:	jb     0x421ece
  421ed5:	pop    ds
  421ed6:	inc    ebx
  421ed7:	je     0x421ed2
  421ed9:	jmp    DWORD PTR [eax+0x73]
  421edc:	add    DWORD PTR [eax],eax
  421ede:	inc    ebx
  421edf:	je     0x421eda
  421ee1:	pop    ds
  421ee2:	dec    ebx
  421ee3:	jb     0x421ee6
  421ee5:	and    BYTE PTR [ebx+0x72],al
  421ee8:	stc    
  421ee9:	pop    ds
  421eea:	inc    edi
  421eeb:	jo     0x421eee
  421eed:	add    BYTE PTR [edi+0x72],al
  421ef0:	add    DWORD PTR [eax],eax
  421ef2:	inc    edi
  421ef3:	or     ecx,ebp
  421ef5:	sti    
  421ef6:	dec    eax
  421ef7:	add    eax,0x94703e7
  421efc:	jmp    0xe74b57fc
  421f01:	add    esp,DWORD PTR [edi+0x5]
  421f04:	out    0xfb,eax
  421f06:	or     BYTE PTR [edi-0x17],bh
  421f09:	add    eax,DWORD PTR [edi+0x5]
  421f0c:	out    0xfb,eax
  421f0e:	clc    
  421f0f:	or     ah,bh
  421f11:	sti    
  421f12:	lock jle 0x421efe
  421f15:	add    esp,DWORD PTR [edi]
  421f17:	or     DWORD PTR [edi-0x18f11f0d],esp
  421f1d:	repz fdivr DWORD PTR [esi-0x19]
  421f21:	add    ecx,DWORD PTR [ebx+0x9]
  421f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f25:	repz inc esp
  421f27:	sbb    edi,esp
  421f29:	add    eax,DWORD PTR [edi+0x19]
  421f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f2d:	repz mov eax,0x3a70e
  421f33:	add    BYTE PTR [edi+0x9],al
  421f36:	out    0x3,eax
  421f38:	inc    edi
  421f39:	sbb    DWORD PTR [edi-0x18f6b4fd],esp
  421f3f:	add    eax,DWORD PTR [ebx+0x19]
  421f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f43:	repz inc esp
  421f45:	sbb    edi,esp
  421f47:	repz inc esp
  421f49:	or     edi,esp
  421f4b:	repz inc esp
  421f4d:	sbb    DWORD PTR [edi-0x18f6bb0d],esp
  421f53:	repz jo 0x421fd4
  421f56:	daa    
  421f57:	add    al,0x47
  421f59:	or     edi,esp
  421f5b:	add    ecx,DWORD PTR [ebx+0x19]
  421f5e:	daa    
  421f5f:	add    al,0x47
  421f61:	sbb    edi,esp
  421f63:	repz push eax
  421f65:	push   cs
  421f66:	daa    
  421f67:	hlt    
  421f68:	dec    eax
  421f69:	jle    0x421f52
  421f6b:	repz inc esp
  421f6d:	or     DWORD PTR [eax],eax
  421f6f:	sub    DWORD PTR [ebx+0x5],eax
  421f72:	add    BYTE PTR [ecx],ch
  421f74:	dec    ebx
  421f75:	add    eax,0xa34e910
  421f7a:	adc    BYTE PTR [ecx],ch
  421f7c:	sbb    edi,DWORD PTR [esi-0x3]
  421f7f:	jmp    0xe94228c8
  421f84:	inc    esp
  421f85:	or     DWORD PTR [eax],eax
  421f87:	sub    DWORD PTR [ebx+0x5],eax
  421f8a:	adc    BYTE PTR [ecx],ch
  421f8c:	dec    ebx
  421f8d:	or     DWORD PTR [eax],edx
  421f8f:	jmp    0x294f9d88
  421f94:	sti    
  421f95:	or     DWORD PTR [eax],eax
  421f97:	jmp    0x5861f9c
  421f9c:	add    BYTE PTR [ecx-0x16fff62c],ch
  421fa2:	inc    esp
  421fa3:	add    eax,0x9d4e900
  421fa8:	adc    cl,ch
  421faa:	aam    0x7d
  421fac:	std    
  421fad:	test   eax,0xa9000944
  421fb2:	inc    esp
  421fb3:	add    eax,0x7db4e910
  421fb8:	std    
  421fb9:	test   eax,0xe90009b4
  421fbe:	xchg   esp,eax
  421fbf:	jge    0x421fce
  421fc1:	test   eax,0xa9000944
  421fc6:	inc    esp
  421fc7:	or     DWORD PTR [eax],edx
  421fc9:	jmp    0xa9522512
  421fce:	inc    esp
  421fcf:	add    eax,0x944e910
  421fd4:	adc    cl,ch
  421fd6:	inc    esp
  421fd7:	add    eax,0x7d732900
  421fdc:	or     eax,0x944e9
  421fe1:	sub    DWORD PTR [ebx+0x9],edx
  421fe4:	adc    BYTE PTR [ecx],ch
  421fe6:	dec    ebx
  421fe7:	add    eax,0x51e0000
  421fec:	add    BYTE PTR [eax],dl
  421fee:	or     DWORD PTR cs:[eax+edx*1],eax
  421ff2:	cs jns 0x421ff2
  421ff5:	divps  xmm6,XMMWORD PTR [ebp-0x3]
  421ff9:	nop    DWORD PTR [ecx]
  421ffc:	add    BYTE PTR [eax],al
  421ffe:	add    BYTE PTR [eax],al
  422000:	outs   dx,BYTE PTR ds:[esi]
  422001:	jne    0x422004
  422003:	adc    BYTE PTR [esi],ch
  422005:	jns    0x422008
  422007:	add    BYTE PTR [esi],bl
  422009:	jns    0x42200c
  42200b:	add    BYTE PTR [esi+0x75],bl
  42200e:	std    
  42200f:	jmp    FWORD PTR [esi]
  422011:	jne    0x422010
  422013:	jmp    FWORD PTR [esi]
  422015:	add    eax,0x8de0004
  42201a:	add    BYTE PTR [eax],dl
  42201c:	fidivr WORD PTR [eax+0x1]
  42201f:	adc    dl,cl
  422021:	aaa    
  422022:	std    
  422023:	(bad)  
  422024:	out    dx,al
  422025:	or     BYTE PTR [eax],al
  422027:	add    dh,bl
  422029:	or     BYTE PTR [eax],al
  42202b:	add    BYTE PTR [edx-0x410002ce],ch
  422031:	sub    eax,0x30f6fffd
  422036:	std    
  422037:	call   FWORD PTR [esi-0x61fffff8]
  42203d:	or     BYTE PTR [eax],al
  42203f:	add    BYTE PTR [eax+0x32],bl
  422042:	std    
  422043:	jmp    FWORD PTR [edx+0x1afffd2e]
  422049:	xor    ch,bh
  42204b:	call   FWORD PTR [esi+0x6e000008]
  422051:	or     BYTE PTR [eax],al
  422053:	add    BYTE PTR [edx+0x32],al
  422056:	std    
  422057:	(bad)  
  422058:	jle    0x422088
  42205a:	std    
  42205b:	inc    edx
  42205d:	sub    eax,0x86efffd
  422062:	add    BYTE PTR [eax],al
  422064:	add    BYTE PTR [eax],al
  422066:	inc    edi
  422067:	jb     0x42206a
  422069:	add    BYTE PTR [edi-0x6e],al
  42206c:	daa    
  42206d:	dec    DWORD PTR [eax+0x1a]
  422070:	inc    DWORD PTR cs:[eax-0x46]
  422074:	sub    al,0xff
  422076:	cmp    BYTE PTR [edx+0x1],dh
  422079:	add    BYTE PTR [edi+0x72],al
  42207c:	add    DWORD PTR [eax],eax
  42207e:	inc    edi
  42207f:	in     al,0x26
  422081:	jmp    DWORD PTR [eax]
  422083:	ss call FWORD PTR cs:[eax]
  422087:	ret    0xff2c
  42208a:	adc    BYTE PTR [edx+0x1],dh
  42208d:	add    BYTE PTR [edi+0x72],al
  422090:	add    DWORD PTR [eax],eax
  422092:	inc    edi
  422093:	mul    BYTE PTR [esi]
  422095:	(bad)  
  422096:	clc    
  422097:	adc    eax,0x8df0ff2e
  42209c:	sub    al,0xff
  42209e:	call   0x47422214
  4220a3:	jb     0x4220a6
  4220a5:	add    BYTE PTR [edi-0x54],al
  4220a8:	and    edi,edi
  4220aa:	ror    BYTE PTR [ecx+0x2b],1
  4220ad:	dec    eax
  4220af:	leave  
  4220b0:	sub    edi,edi
  4220b2:	shl    BYTE PTR [ecx+0x1],0x0
  4220b6:	inc    edi
  4220b7:	jb     0x4220ba
  4220b9:	add    BYTE PTR [edi+0x24],al
  4220bc:	and    al,0xff
  4220be:	test   al,0xed
  4220c0:	sub    eax,0x2a45a0ff
  4220c5:	call   FWORD PTR [eax+0x171]
  4220cb:	add    BYTE PTR [edi+0x72],al
  4220ce:	add    DWORD PTR [eax],eax
  4220d0:	inc    edi
  4220d1:	or     BYTE PTR [edi+edi*8],ah
  4220d4:	add    BYTE PTR [ecx+0x2e],0xff
  4220d8:	js     0x42214b
  4220da:	add    DWORD PTR [eax],eax
  4220dc:	inc    edi
  4220dd:	jb     0x4220e0
  4220df:	add    BYTE PTR [edi+0x9],al
  4220e2:	out    0x3,eax
  4220e4:	inc    edi
  4220e5:	or     edi,esp
  4220e7:	add    eax,DWORD PTR [edi+0x9]
  4220ea:	out    0x3,eax
  4220ec:	inc    edi
  4220ed:	or     DWORD PTR [ebx-0x4e84b7d3],ecx
  4220f3:	sub    eax,0x2d957b40
  4220f8:	cmp    BYTE PTR [ebx-0x35],bh
  4220fb:	sub    eax,0x2db77b30
  422100:	sub    BYTE PTR [ebx-0x5d],bh
  422103:	sub    eax,0x2cf17b20
  422108:	sbb    BYTE PTR [ebx-0xf],bh
  42210b:	sub    al,0x10
  42210d:	jnp    0x4220d4
  42210f:	sub    al,0x8
  422111:	jnp    0x4220ce
  422113:	sub    al,0x0
  422115:	jnp    0x42213e
  422117:	sub    eax,0x2d237af8
  42211c:	lock jp 0x422128
  42211f:	sub    eax,0x2ce57ae8
  422124:	loopne 0x4221a0
  422126:	imul   ebp,DWORD PTR [eax+ebx*8],0x7a
  42212a:	mov    DWORD PTR [eax+edx*8],ebp
  42212d:	jp     0x4220c8
  42212f:	sub    al,0x0
  422131:	add    al,cl
  422133:	jp     0x422160
  422135:	sub    al,0xc0
  422137:	jp     0x42214c
  422139:	sub    al,0xb8
  42213b:	jp     0x42218a
  42213d:	sub    al,0xb0
  42213f:	jp     0x422176
  422141:	sub    al,0xa8
  422143:	jp     0x422136
  422145:	daa    
  422146:	mov    al,ds:0x9827ff7a
  42214b:	jp     0x422110
  42214d:	daa    
  42214e:	nop
  42214f:	jp     0x4220fa
  422151:	daa    
  422152:	mov    BYTE PTR [edx-0x65],bh
  422155:	daa    
  422156:	cmp    BYTE PTR [edx-0x79],0x27
  42215a:	js     0x4221d6
  42215c:	add    BYTE PTR [ecx+0x28],bh
  42215f:	jp     0x42215e
  422161:	ins    DWORD PTR es:[edi],dx
  422162:	and    BYTE PTR [edx-0x3],bh
  422165:	jns    0x422196
  422167:	jp     0x422166
  422169:	mov    DWORD PTR [edi],ebp
  42216b:	jp     0x42216a
  42216d:	fwait
  42216e:	pop    ds
  42216f:	jp     0x42216e
  422171:	stos   DWORD PTR es:[edi],eax
  422172:	pop    ds
  422173:	jp     0x422172
  422175:	mov    ds:0xb7fd7a6f,eax
  42217a:	outs   dx,DWORD PTR ds:[esi]
  42217b:	jp     0x42217a
  42217d:	out    0x5f,eax
  42217f:	jp     0x42217e
  422181:	rcr    DWORD PTR [edi+0x7a],cl
  422184:	std    
  422185:	in     eax,0x6f
  422187:	jp     0x422186
  422189:	xor    eax,0x5fd7a6e
  42218e:	pop    esi
  42218f:	jp     0x42218e
  422191:	adc    DWORD PTR [esi+0x7a],ebx
  422194:	std    
  422195:	ja     0x422197
  422197:	add    BYTE PTR [esi],ch
  422199:	jp     0x422198
  42219b:	pop    edi
  42219c:	cs jp  0x42219c
  42219f:	dec    edi
  4221a0:	push   ds
  4221a1:	jp     0x4221a0
  4221a3:	sub    eax,0x35fd7a1e
  4221a8:	cs jp  0x4221a8
  4221ab:	push   ecx
  4221ac:	cs jp  0x4221ac
  4221af:	push   ebx
  4221b0:	push   ds
  4221b1:	jp     0x4221b0
  4221b3:	loope  0x4221d7
  4221b5:	jp     0x4221b4
  4221b7:	loope  0x422223
  4221b9:	jp     0x4221b8
  4221bb:	adc    DWORD PTR [ecx+0x7a],esp
  4221be:	std    
  4221bf:	jmp    FWORD PTR [edx+0x7a]
  4221c2:	std    
  4221c3:	jmp    0x8b422b0c
  4221c8:	push   0x7a
  4221ca:	std    
  4221cb:	mov    ds:0x7bfd7a62,eax
  4221d0:	imul   edi,DWORD PTR [edx-0x3],0xfd7a614b
  4221d7:	add    BYTE PTR [ebx+eiz*1],bh
  4221da:	std    
  4221db:	jmp    DWORD PTR [eax]
  4221dd:	and    edi,ebp
  4221df:	call   FWORD PTR [esi+0x5]
  4221e2:	add    BYTE PTR [eax],al
  4221e4:	ds and edi,ebp
  4221e7:	jmp    FWORD PTR [esi+0x5]
  4221ea:	add    BYTE PTR [eax],al
  4221ec:	and    di,bp
  4221ef:	jmp    DWORD PTR [esi+0x22]
  4221f2:	std    
  4221f3:	call   FWORD PTR [edx+0x22]
  4221f6:	std    
  4221f7:	call   DWORD PTR [eax+esi*1-0x3]
  4221fb:	inc    DWORD PTR [eax]
  4221fd:	add    BYTE PTR [esi+0x30],al
  422200:	std    
  422201:	jmp    DWORD PTR [esi+0x30]
  422204:	std    
  422205:	call   DWORD PTR [esi+0x30]
  422208:	std    
  422209:	push   DWORD PTR [eax+esi*1]
  42220c:	std    
  42220d:	jmp    DWORD PTR [eax+esi*1-0x3]
  422211:	dec    DWORD PTR [esi+0x1efffd2f]
  422217:	or     eax,0x2f980000
  42221c:	std    
  42221d:	(bad)  
  42221e:	out    dx,al
  42221f:	or     al,0x0
  422221:	add    BYTE PTR [edi+ebp*1+0x2fb8fffd],ah
  422228:	std    
  422229:	(bad)  
  42222a:	out    dx,al
  42222b:	or     al,0x0
  42222d:	add    dh,ch
  42222f:	sub    al,0xfd
  422231:	(bad)  
  422232:	jmp    0xfd2c:0xd6fffd2c
  422239:	call   DWORD PTR [edx+0x2d]
  42223c:	std    
  42223d:	dec    DWORD PTR [eax+0x2d]
  422240:	std    
  422241:	push   DWORD PTR [esp+ebp*1+0xc9efffd]
  422248:	add    BYTE PTR [eax],al
  42224a:	fsubr  QWORD PTR [edi*8-0x2d32701]
  422251:	inc    DWORD PTR [edi-0x70]
  422254:	and    edi,edi
  422256:	mov    BYTE PTR [edx-0x1b7f00df],bl
  42225c:	and    bh,bh
  42225e:	js     0x422232
  422260:	and    bh,bh
  422262:	add    BYTE PTR [eax],al
  422264:	jo     0x422240
  422266:	and    bh,bh
  422268:	push   0x60ff20c4
  42226d:	pushf  
  42226e:	and    al,0xff
  422270:	pop    eax
  422271:	stos   BYTE PTR es:[edi],al
  422272:	and    al,0xff
  422274:	push   eax
  422275:	bound  eax,QWORD PTR [ecx]
  422277:	add    BYTE PTR [edi-0x4c],al
  42227a:	and    al,0xff
  42227c:	inc    eax
  42227d:	dec    eax
  42227e:	and    al,0xff
  422280:	cmp    BYTE PTR [edx+0x1],ah
  422283:	add    BYTE PTR [edi-0x2],al
  422286:	sub    edi,edi
  422288:	sub    BYTE PTR [edx+ebp*1+0x2ab820ff],ch
  42228f:	call   FWORD PTR [eax]
  422291:	mov    gs,WORD PTR [edx]
  422293:	call   DWORD PTR [eax]
  422295:	xchg   edx,eax
  422296:	sub    bh,bh
  422298:	or     BYTE PTR [esi+0x7c00ff2a],al
  42229e:	sub    bh,bh
  4222a0:	clc    
  4222a1:	imul   ebp,DWORD PTR [eax],0xffffffff
  4222a4:	lock inc edi
  4222a6:	sub    bh,bh
  4222a8:	call   0xe1414b6a
  4222ad:	mov    eax,ds:0xa5d8ff28
  4222b2:	sub    bh,bh
  4222b4:	rol    BYTE PTR [ebx+0x28],1
  4222b7:	dec    eax
  4222b9:	inc    edi
  4222ba:	sub    bh,bh
  4222bc:	sar    ch,0x26
  4222bf:	(bad)  
  4222c0:	mov    eax,0xb0ff2783
  4222c5:	repz inc DWORD PTR es:[eax]
  4222c9:	add    BYTE PTR [eax-0x5f00d8d3],ch
  4222cf:	or     BYTE PTR [ebx],bh
  4222d1:	sub    DWORD PTR [eax-0x6fd6fa89],ebx
  4222d7:	ja     0x4222f6
  4222d9:	sub    DWORD PTR [eax-0x7fd81e89],ecx
  4222df:	ja     0x4222c0
  4222e1:	daa    
  4222e2:	js     0x42235b
  4222e4:	retf   
  4222e5:	daa    
  4222e6:	jo     0x42235f
  4222e8:	test   eax,0x93776827
  4222ed:	daa    
  4222ee:	pusha  
  4222ef:	ja     0x422338
  4222f1:	sub    BYTE PTR [eax+0x77],bl
  4222f4:	push   edi
  4222f5:	sub    BYTE PTR [eax+0x77],dl
  4222f8:	push   ebx
  4222f9:	sub    BYTE PTR [eax+0x77],cl
  4222fc:	ja     0x422325
  4222fe:	inc    eax
  4222ff:	ja     0x422288
  422301:	daa    
  422302:	cmp    BYTE PTR [edi+0x79],dh
  422305:	daa    
  422306:	xor    BYTE PTR [edi-0x57],dh
  422309:	daa    
  42230a:	sub    BYTE PTR [edi-0x6f],dh
  42230d:	daa    
  42230e:	and    BYTE PTR [edi-0x63],dh
  422311:	daa    
  422312:	sbb    BYTE PTR [edi-0x13],dh
  422315:	adc    BYTE PTR es:[edi-0xf],dh
  422319:	or     BYTE PTR es:[edi-0x35],dh
  42231d:	add    BYTE PTR es:[edi+0x1b],dh
  422321:	daa    
  422322:	clc    
  422323:	jbe    0x422330
  422325:	daa    
  422326:	lock jbe 0x422318
  422329:	es call 0x6880a5
  42232f:	add    al,ah
  422331:	jbe    0x4222b8
  422333:	fdiv   DWORD PTR es:[esi-0x7b]
  422337:	shl    BYTE PTR es:[esi-0x6d],1
  42233b:	es enter 0x1b76,0x26
  422340:	shl    BYTE PTR [esi+0x4f],0x26
  422344:	mov    eax,0xb0264176
  422349:	jbe    0x42234b
  42234b:	loope  0x4223af
  42234d:	jbe    0x42234c
  42234f:	shr    DWORD PTR [edx+0x76],1
  422352:	std    
  422353:	shl    DWORD PTR [edx+0x76],1
  422356:	std    
  422357:	xlat   BYTE PTR ds:[ebx]
  422358:	push   0x76
  42235a:	std    
  42235b:	jmp    0x8b422ca4
  422360:	sub    dh,BYTE PTR [esi-0x3]
  422363:	and    DWORD PTR [edx],0x76
  422366:	std    
  422367:	pop    ebx
  422368:	sub    dh,BYTE PTR [esi-0x3]
  42236b:	dec    ebx
  42236c:	and    dh,BYTE PTR [esi-0x3]
  42236f:	cmp    ebp,DWORD PTR [edx]
  422371:	jbe    0x422370
  422373:	scas   eax,DWORD PTR es:[edi]
  422374:	gs ja  0x422374
  422377:	jmp    0xc9422cc0
  42237c:	gs ja  0x42237c
  42237f:	jmp    0xc1422cc8
  422384:	and    eax,0x25f1fd77
  422389:	ja     0x422388
  42238b:	aad    0x25
  42238d:	ja     0x42238c
  42238f:	add    esp,DWORD PTR [edi+esi*2]
  422392:	std    
  422393:	loope  0x422395
  422395:	add    BYTE PTR ds:0x2431fd77,ah
  42239b:	ja     0x42239a
  42239d:	xor    DWORD PTR [edi+esi*2],esp
  4223a0:	std    
  4223a1:	add    esp,esp
  4223a3:	jbe    0x4223a2
  4223a5:	add    esp,esp
  4223a7:	jbe    0x4223a6
  4223a9:	pop    ecx
  4223aa:	in     al,0x76
  4223ac:	std    
  4223ad:	jmp    0x3f422cf6
  4223b2:	in     al,0x76
  4223b4:	std    
  4223b5:	jmp    0x33422cfe
  4223ba:	in     al,0x76
  4223bc:	std    
  4223bd:	aaa    
  4223be:	in     al,0x76
  4223c0:	std    
  4223c1:	jmp    0x422d0a
  4223c6:	scas   al,BYTE PTR es:[edi]
  4223c7:	imul   edi,esi,0xfe69a2ff
  4223cd:	call   DWORD PTR [esi+0x4afffe69]
  4223d3:	ins    DWORD PTR es:[edi],dx
  4223d4:	(bad)  
  4223d5:	push   DWORD PTR [eax+0x69]
  4223d8:	(bad)  
  4223d9:	jmp    DWORD PTR [ecx+ebp*2+0x99efffe]
  4223e0:	add    BYTE PTR [eax],al
  4223e2:	mov    esp,0xa0fffe69
  4223e7:	imul   edi,esi,0xfe69c0ff
  4223ed:	push   esi
  4223ef:	imul   edi,esi,0xfe6cecff
  4223f5:	(bad)  
  4223f6:	fisubr WORD PTR [ecx-0x2]
  4223f9:	inc    DWORD PTR [eax]
  4223fb:	add    dh,al
  4223fd:	imul   edi,esi,0xfe69bcff
  422403:	inc    esp
  422405:	push   0x68c6fffe
  42240a:	(bad)  
  42240b:	call   FWORD PTR [esi]
  42240d:	or     DWORD PTR [eax],eax
  42240f:	add    ah,cl
  422411:	push   0x6908fffe
  422416:	(bad)  
  422417:	jmp    FWORD PTR [esi]
  422419:	or     DWORD PTR [eax],eax
  42241b:	add    bl,dh
  42241d:	or     BYTE PTR [edi],bh
  42241f:	jb     0x42245c
  422421:	outs   dx,BYTE PTR ds:[esi]
  422422:	jno    0x422489
  422424:	sub    BYTE PTR [esi+0x69],ah
  422427:	gs das 
  422429:	or     eax,0x624c023d
  42242e:	pop    esi
  42242f:	sbb    BYTE PTR fs:[esi+0x69],ah
  422433:	gs out dx,al
  422435:	or     BYTE PTR [edi],bl
  422437:	add    BYTE PTR [ebp+0xb736c64],ch
  42243d:	inc    ecx
  42243e:	pop    esi
  42243f:	outs   dx,BYTE PTR ds:[esi]
  422440:	inc    edi
  422441:	inc    esi
  422442:	in     eax,dx
  422443:	bound  eax,QWORD PTR [edi-0x29]
  422446:	add    dl,BYTE PTR [ebp+0x35]
  422449:	pop    ecx
  42244a:	cmc    
  42244b:	bound  ecx,QWORD PTR [ecx]
  42244d:	pop    ecx
  42244e:	in     eax,dx
  42244f:	bound  eax,QWORD PTR [edi+0x5d]
  422452:	push   es
  422453:	ins    BYTE PTR es:[edi],dx
  422454:	adc    al,0xbe
  422456:	repz imul esp,DWORD PTR [edx],0xffffff9c
  42245a:	(bad)  
  42245b:	call   DWORD PTR [eax+0x4503d2]
  422461:	add    BYTE PTR [ebx],bl
  422463:	mov    esp,ebx
  422465:	pop    esi
  422466:	repz xchg ebp,eax
  422468:	repnz pusha 
  42246a:	in     al,dx
  42246b:	popa   
  42246c:	add    DWORD PTR [ebp+0x6cedab46],esi
  422472:	in     eax,0x80
  422474:	in     eax,dx
  422475:	push   edx
  422476:	icebp  
  422477:	cmc    
  422478:	icebp  
  422479:	pusha  
  42247a:	in     al,dx
  42247b:	popa   
  42247c:	add    esp,esi
  42247e:	inc    esi
  42247f:	es out dx,eax
  422481:	pusha  
  422482:	out    0xcd,al
  422484:	leave  
  422485:	jno    0x422431
  422487:	int    0x3
  422489:	lock inc esi
  42248b:	ds out dx,eax
  42248d:	pusha  
  42248e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42248f:	mov    al,0x6b
  422492:	fwait
  422493:	retf   
  422494:	loop   0x422495
  422496:	and    BYTE PTR [ecx+0x4],bl
  422499:	ins    BYTE PTR es:[edi],dx
  42249a:	xchg   esp,eax
  42249b:	push   ss
  42249c:	mul    BYTE PTR [eax-0x69]
  42249f:	sub    ecx,eax
  4224a1:	dec    DWORD PTR [eax]
  4224a3:	outs   dx,DWORD PTR ds:[esi]
  4224a4:	add    al,0x6c
  4224a6:	je     0x4224c6
  4224a8:	mul    BYTE PTR [eax+0x66]
  4224ab:	jbe    0x42246f
  4224ad:	push   eax
  4224af:	pop    edx
  4224b0:	add    al,BYTE PTR [ebp+0x62]
  4224b3:	jbe    0x42247c
  4224b5:	data16 jae 0x4224c5
  4224b8:	shl    DWORD PTR [ebx+0x53],0x9
  4224bc:	fldl2e 
  4224be:	data16 (bad) 
  4224c0:	shl    dh,cl
  4224c2:	push   edi
  4224c3:	retf   0x3e6
  4224c6:	add    BYTE PTR [eax],al
  4224c8:	fmul   QWORD PTR [eax]
  4224ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224cb:	sti    
  4224cc:	sub    dl,ch
  4224ce:	aam    0xe7
  4224d0:	add    eax,0x36eab4e3
  4224d5:	in     al,0xc4
  4224d7:	out    dx,al
  4224d8:	and    eax,0x14d4b2e3
  4224dd:	test   DWORD PTR [edi-0x5807d40f],0xae0a2b03
  4224e7:	out    0xf4,al
  4224e9:	retf   0xef7f
  4224ec:	in     eax,0xd7
  4224ee:	(bad)  
  4224ef:	std    
  4224f0:	in     eax,0x8
  4224f2:	mov    ebp,0x8bf70603
  4224f7:	loop   0x4224cd
  4224f9:	in     eax,dx
  4224fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fb:	jmp    0xf8e0:0xe333edec
  422502:	dec    edi
  422503:	repnz jecxz 0x4224cf
  422506:	out    0x3,al
  422508:	inc    edi
  422509:	pop    es
  42250a:	sbb    al,0xe3
  42250c:	test   al,0xdb
  42250e:	dec    edi
  42250f:	out    0xbb,eax
  422511:	ret    0xca44
  422514:	mov    eax,ds:0xf6044be5
  422519:	pop    es
  42251a:	adc    al,0xf2
  42251c:	lods   eax,DWORD PTR ds:[esi]
  42251d:	call   0xecebff38
  422522:	adc    eax,0xffcba2d1
  422527:	out    dx,eax
  422528:	or     DWORD PTR gs:[ecx-0x74fffffe],eax
  42252f:	loop   0x422538
  422531:	call   0xf64b05b2
  422536:	mov    edi,esi
  422538:	(bad)  
  422539:	out    dx,eax
  42253a:	add    eax,0x441afd73
  42253f:	int3   
  422540:	(bad)  
  422541:	(bad)  
  422543:	clc    
  422544:	ins    BYTE PTR es:[edi],dx
  422545:	retf   0xe705
  422548:	arpl   bx,bx
  42254a:	test   eax,0x44e970f9
  42254f:	(bad)  
  422550:	jmp    FWORD PTR [ebp-0x3bac0957]
  422556:	cdq    
  422557:	loop   0x4225a8
  422559:	enter  0xea98,0x3e
  42255d:	jmp    0xaa425ba6
  422562:	call   0x66c6:0xa1955ee7
  422569:	fwait
  42256a:	imul   ebp,ecx,0xfb727e73
  422570:	ds jmp 0xa5420fba
  422576:	popa   
  422577:	fisub  WORD PTR [edx+0x7d]
  42257a:	imul   ecx,esp,0x33617d66
  422580:	add    cl,ch
  422582:	dec    ebx
  422583:	int3   
  422584:	bound  edx,QWORD PTR [ebp-0x7c]
  422587:	div    DWORD PTR [ecx+0x5b]
  42258a:	cs in  al,0x73
  42258d:	cmp    DWORD PTR ds:0x4c60e5,esi
  422593:	add    BYTE PTR [ecx+edi*8],dh
  422596:	(bad)  
  422597:	mov    eax,0x4d66dc45
  42259c:	cs leave 
  42259e:	addr16 dec eax
  4225a0:	adc    eax,0xe346cd6
  4225a5:	fidiv  WORD PTR [ebx+0x10]
  4225a8:	add    eax,0x4b0c73fb
  4225ad:	mov    ds:0xe3ea2700,al
  4225b2:	arpl   WORD PTR [eax],ax
  4225b4:	and    BYTE PTR [edi+ebp*2+0x73],ah
  4225b8:	repnz dec ebx
  4225ba:	data16 ins BYTE PTR es:[edi],dx
  4225bc:	push   ebx
  4225bd:	dec    esp
  4225be:	std    
  4225bf:	push   ecx
  4225c1:	push   es
  4225c2:	ins    BYTE PTR es:[edi],dx
  4225c3:	jae    0x4225b7
  4225c5:	ja     0x422627
  4225c7:	ins    DWORD PTR es:[edi],dx
  4225c8:	out    dx,al
  4225c9:	fs ds add ah,dl
  4225cd:	or     al,0x46
  4225cf:	imul   edi,eax,0x86654b69
  4225d5:	jns    0x42261a
  4225d7:	imul   edi,DWORD PTR [edx+0x60],0xccb003e
  4225de:	inc    esi
  4225df:	imul   ebx,eax,0xb96c4069
  4225e5:	jbe    0x422649
  4225e7:	add    BYTE PTR [edx+0xc],dh
  4225ea:	inc    ebx
  4225eb:	gs loop 0x422646
  4225ee:	ins    BYTE PTR es:[edi],dx
  4225ef:	shl    DWORD PTR fs:[ecx+0x62],cl
  4225f3:	dec    eax
  4225f4:	mov    edi,0x6c6163
  4225f9:	add    bl,al
  4225fb:	dec    esp
  4225fc:	std    
  4225fd:	inc    DWORD PTR [eax]
  4225ff:	or     al,0x43
  422601:	rcr    BYTE PTR gs:[ebx+0x62],cl
  422605:	jb     0x4225f4
  422607:	arpl   WORD PTR [esi+ebp*2+0x23],bp
  42260b:	jne    0x42264b
  42260d:	add    BYTE PTR [esi+eax*1+0x43],al
  422611:	gs xchg edx,eax
  422613:	pop    ecx
  422614:	ins    BYTE PTR es:[edi],dx
  422615:	arpl   WORD PTR [edi+0x79],di
  422618:	bound  ecx,QWORD PTR [ecx+0x78]
  42261b:	ins    BYTE PTR es:[di],dx
  42261d:	inc    ecx
  42261e:	cs or  eax,0x62610174
  422624:	jno    0x422679
  422626:	addr16 jl 0x42269a
  422629:	cmp    edi,DWORD PTR gs:[esi]
  42262c:	imul   esp,DWORD PTR [esi+0x47],0x7
  422630:	add    al,0xa0
  422632:	inc    esi
  422633:	daa    
  422634:	out    0x73,eax
  422636:	cwde   
  422637:	sbb    esi,ebp
  422639:	arpl   WORD PTR [eax+0x77],bx
  42263c:	repnz inc ebx
  42263e:	outs   dx,BYTE PTR ds:[esi]
  42263f:	je     0x422629
  422641:	pusha  
  422642:	push   ebx
  422643:	outs   dx,DWORD PTR ds:[esi]
  422644:	out    dx,eax
  422645:	jbe    0x4225cd
  422647:	bound  eax,QWORD PTR [ecx]
  422649:	dec    ebp
  42264a:	inc    esi
  42264b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42264c:	call   0xec963dc4
  422651:	jne    0x422679
  422653:	push   esi
  422654:	call   0xe3995ba8
  422659:	sbb    ax,WORD PTR [ebp-0x2e]
  42265d:	jae    0x42265f
  42265f:	add    BYTE PTR ds:0x664eb49,dl
  422665:	bound  eax,QWORD PTR [ecx]
  422667:	jp     0x4226ae
  422669:	mov    bl,0xe8
  42266b:	jae    0x422671
  42266d:	xchg   ebp,eax
  42266e:	out    dx,eax
  42266f:	jno    0x42265b
  422671:	xchg   ebp,esi
  422673:	inc    ebx
  422674:	out    dx,al
  422675:	xchg   ebx,eax
  422676:	call   0xefd921db
  42267b:	jbe    0x422683
  42267d:	bound  eax,QWORD PTR [ecx]
  42267f:	adc    eax,DWORD PTR [esi+eax*4-0xe]
  422683:	jae    0x42265a
  422685:	xor    al,0x6f
  422688:	push   es
  422689:	bound  eax,QWORD PTR [ecx]
  42268b:	dec    esp
  42268c:	inc    esi
  42268d:	daa    
  42268e:	in     eax,0x73
  422690:	xchg   edi,eax
  422691:	aam    0xe8
  422693:	jne    0x42263b
  422695:	(bad)  
  422696:	in     al,0x4f
  422698:	mov    ch,0xd7
  42269a:	in     eax,0x66
  42269c:	fwait
  42269d:	(bad)
  4226a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a1:	cs jmp 0xe152d013
  4226a7:	push   0xffffffaa
  4226a9:	or     DWORD PTR [edx],ebx
  4226ab:	ret    
  4226ac:	or     BYTE PTR [eax+0x30],dh
  4226af:	add    ecx,DWORD PTR [edx+0x76d41ae6]
  4226b5:	loop   0x4226cb
  4226b7:	jecxz  0x42272d
  4226b9:	out    0x16,al
  4226bb:	repnz pop ebx
  4226bd:	out    0xf,eax
  4226bf:	lock gs ret 0xf804
  4226c4:	add    BYTE PTR [eax],al
  4226c6:	sbb    DWORD PTR [ecx],ecx
  4226c8:	ins    DWORD PTR es:[edi],dx
  4226c9:	add    al,0x8a
  4226cb:	out    0xda,al
  4226cd:	rcl    BYTE PTR [ebp-0x5],0xd8
  4226d1:	out    0x32,al
  4226d3:	cmc    
  4226d4:	stos   BYTE PTR es:[edi],al
  4226d5:	jmp    0xfb23:0xf7c9e636
  4226dc:	mov    edi,0xdd6fa8c2
  4226e1:	add    BYTE PTR [ebx],dh
  4226e3:	cld    
  4226e4:	mov    edx,0xbce62cf1
  4226e9:	aam    0x90
  4226eb:	outs   dx,DWORD PTR ds:[esi]
  4226ec:	hlt    
  4226ed:	add    esp,edi
  4226ef:	cmc    
  4226f0:	mov    dh,bh
  4226f2:	jmp    0xe639b6c1
  4226f7:	aam    0x7d
  4226f9:	aam    0xe9
  4226fb:	in     al,0x8b
  4226fd:	shl    al,0xe9
  422700:	js     0x422705
  422702:	int3   
  422703:	or     DWORD PTR [esi+0x7fd4d4e6],ebp
  422709:	loopne 0x4226ea
  42270b:	retf   
  42270c:	push   ebp
  42270d:	neg    edx
  42270f:	hlt    
  422710:	out    0x3,al
  422712:	dec    BYTE PTR [ebx]
  422714:	cmp    dh,al
  422716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422717:	in     al,0x56
  422719:	add    al,0x75
  42271b:	or     BYTE PTR [esi],ch
  42271d:	out    0xb4,eax
  42271f:	mov    esp,0xdd95e84d
  422724:	dec    DWORD PTR [ebx+0x1]
  422727:	call   0x426b97
  42272c:	add    eax,edx
  42272e:	push   0xc
  422730:	add    al,0x6f
  422732:	std    
  422733:	rol    DWORD PTR [ebp-0x3c],1
  422736:	bound  ebx,QWORD PTR ds:0x1570d017
  42273c:	or     cl,bh
  42273e:	jno    0x422756
  422740:	cmc    
  422741:	outs   dx,BYTE PTR ds:[esi]
  422742:	std    
  422743:	and    BYTE PTR [ebx-0x38],cl
  422746:	jno    0x422754
  422748:	in     al,0xfa
  42274a:	bound  edx,QWORD PTR ds:0xd16bdde2
  422750:	loope  0x422734
  422752:	outs   dx,DWORD PTR ds:[esi]
  422753:	sbb    dh,BYTE PTR [ebp-0x28]
  422756:	ins    DWORD PTR es:[edi],dx
  422757:	enter  0xf9b4,0x67
  42275b:	mov    esi,0xcfd6eb8
  422760:	inc    ebp
  422761:	fnstenv [ecx-0x32]
  422764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422765:	jmp    0x4227d7
  422767:	mov    edx,0xc0463b57
  42276c:	xchg   esi,eax
  42276d:	stc    
  42276e:	jae    0x422759
  422770:	inc    esp
  422771:	adc    DWORD PTR [edx],eax
  422773:	scas   al,BYTE PTR es:[edi]
  422774:	je     0x422761
  422776:	ins    DWORD PTR es:[edi],dx
  422777:	mov    ecx,0x8460dd76
  42277c:	ja     0x422777
  42277e:	dec    ebp
  422780:	inc    esi
  422781:	fnstenv [ecx-0x72]
  422784:	addr16 jmp 0x4227f7
  422787:	jp     0x4227a0
  422789:	cmp    ecx,DWORD PTR [esi-0x7c]
  42278c:	dec    esp
  42278d:	cli    
  42278e:	dec    ebp
  422790:	add    BYTE PTR [eax],al
  422792:	inc    edx
  422793:	mov    ebp,0xde2a2c40
  422798:	push   eax
  422799:	pop    ebp
  42279a:	xor    edi,esp
  42279c:	ins    DWORD PTR es:[edi],dx
  42279d:	inc    esi
  42279e:	or     ch,BYTE PTR [esi-0x3]
  4227a1:	add    BYTE PTR [ebp+0x77784105],ah
  4227a7:	jns    0x4227f6
  4227a9:	jb     0x42272c
  4227ab:	bound  si,DWORD PTR [ebx+0x4d]
  4227af:	add    eax,0x684d02ad
  4227b4:	jno    0x42280b
  4227b6:	push   eax
  4227b7:	pop    ebp
  4227b8:	pop    esi
  4227b9:	outs   dx,BYTE PTR ds:[esi]
  4227ba:	dec    edx
  4227bb:	popa   
  4227bc:	bound  esp,QWORD PTR [ebx+ebp*1+0x6d]
  4227c0:	pusha  
  4227c1:	gs out dx,al
  4227c3:	pop    ebp
  4227c4:	outs   dx,WORD PTR ds:[esi]
  4227c6:	push   eax
  4227c7:	dec    ebx
  4227c8:	data16 ins BYTE PTR es:[edi],dx
  4227ca:	fisubr DWORD PTR [eax+0x6f]
  4227cd:	add    BYTE PTR [ebp+0x68],al
  4227d0:	outs   dx,DWORD PTR ds:[esi]
  4227d1:	outs   dx,BYTE PTR ds:[esi]
  4227d2:	sti    
  4227d3:	xor    BYTE PTR gs:[edx],dh
  4227d6:	push   eax
  4227d7:	imul   ebp,DWORD PTR [ecx+0x6c],0x8709ae
  4227de:	fnsave [ebx+0x62]
  4227e1:	popa   
  4227e2:	jmp    0x5e68:0xdc745068
  4227e9:	ins    DWORD PTR es:[edi],dx
  4227ea:	loope  0x42284b
  4227ec:	inc    ebp
  4227ed:	inc    edi
  4227ee:	shl    BYTE PTR [edx+0x5f],cl
  4227f1:	popa   
  4227f2:	mov    dl,0x9
  4227f4:	xchg   ebx,eax
  4227f5:	add    BYTE PTR [eax],al
  4227f7:	add    BYTE PTR [ecx-0x56b78e98],ch
  4227fd:	gs ins BYTE PTR es:[edi],dx
  4227ff:	bound  edi,QWORD PTR [edi-0x2e8dbc9b]
  422805:	pusha  
  422806:	push   eax
  422807:	je     0x4227e5
  422809:	push   0x96e6d5e
  42280e:	push   cs
  42280f:	add    BYTE PTR [ebp-0x48dbf9e],bl
  422815:	arpl   WORD PTR [ecx+0x65],si
  422818:	imul   edi,DWORD PTR [edx+0x66],0x1624764
  42281f:	pusha  
  422820:	inc    edi
  422821:	pop    ds
  422822:	jmp    0xed71ce7a
  422827:	dec    edx
  422828:	stos   BYTE PTR es:[edi],al
  422829:	mov    ebp,0xbda271c1
  42282e:	add    ecx,DWORD PTR ds:0x40e91f47
  422834:	xchg   ebp,eax
  422835:	std    
  422836:	loop   0x4228ab
  422838:	push   0x39
  42283a:	jmp    0x6a60:0xea017370
  422841:	bound  eax,QWORD PTR [ecx]
  422843:	icebp  
  422844:	inc    edi
  422845:	xor    ebp,eax
  422847:	bound  ecx,QWORD PTR [esi+0x6e73eafc]
  42284d:	add    eax,ebp
  42284f:	dec    bp
  422851:	add    eax,0x3d5b6d04
  422856:	xor    dh,BYTE PTR ss:[ecx+0x46]
  42285a:	in     eax,0x6b
  42285c:	add    BYTE PTR [eax],al
  42285e:	inc    edi
  42285f:	push   ebp
  422860:	add    esi,DWORD PTR [ebp+0x34]
  422863:	push   edx
  422864:	repz sbb WORD PTR [esi-0x4ab8c121],bp
  42286c:	mul    BYTE PTR [edx+0x15]
  42286f:	outs   dx,DWORD PTR ds:[esi]
  422870:	xor    ebp,DWORD PTR [esi]
  422872:	sub    ebp,DWORD PTR [esi+0x3288ffe5]
  422878:	add    al,0x52
  42287a:	jmp    0xce83:0xe26fca82
  422881:	(bad)  
  422882:	out    dx,al
  422883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422884:	stc    
  422885:	ds inc edi
  422887:	sub    BYTE PTR [edx+edx*2],al
  42288a:	jmp    0xfbef:0xe272d482
  422891:	push   ebp
  422892:	out    0xed,al
  422894:	out    dx,eax
  422895:	bound  eax,QWORD PTR [edx]
  422897:	or     DWORD PTR [edi-0x3d],ebx
  42289a:	inc    eax
  42289b:	ins    BYTE PTR es:[edi],dx
  42289c:	xchg   esi,eax
  42289d:	add    edx,DWORD PTR [ebp-0x633ab21a]
  4228a3:	fcomp  QWORD PTR [ecx-0x21]
  4228a6:	jg     0x42288e
  4228a8:	aas    
  4228a9:	add    al,0x12
  4228ab:	or     bl,BYTE PTR [ecx]
  4228ad:	fbld   TBYTE PTR [ebx-0x5d20c944]
  4228b3:	rol    BYTE PTR [ebx-0x5],0x49
  4228b7:	or     DWORD PTR [ebx+0x5e69503],ebp
  4228bd:	mov    edi,0xcd03f66a
  4228c2:	add    BYTE PTR [eax],al
  4228c4:	gs repnz and edi,esp
  4228c8:	sub    DWORD PTR [ecx],ecx
  4228ca:	inc    ecx
  4228cb:	add    esi,DWORD PTR [ebp-0x1a]
  4228ce:	add    eax,0x7e656c5
  4228d3:	lock rol BYTE PTR gs:[ebx],0xfb
  4228d8:	or     DWORD PTR [ecx],ecx
  4228da:	dec    esi
  4228db:	add    edx,DWORD PTR ds:0x25d4c5e6
  4228e1:	cmc    
  4228e2:	mov    esp,0xc3f61ce2
  4228e7:	mov    esi,0x3e6ca30
  4228ec:	mov    cl,BYTE PTR [ecx]
  4228ee:	cdq    
  4228ef:	fisub  WORD PTR [ebx]
  4228f1:	mov    ah,0xee
  4228f4:	sbb    eax,0x15e7c7d3
  4228f9:	out    0xa7,al
  4228fb:	add    edx,DWORD PTR [ecx-0x1c2146f7]
  422901:	mov    ebx,0xc7e2de96
  422906:	xchg   ebx,eax
  422907:	cmc    
  422908:	mul    ch
  42290a:	xchg   esp,eax
  42290b:	out    dx,eax
  42290c:	cmc    
  42290d:	test   DWORD PTR [ebx+0x6b58f5],0x62c645d2
  422917:	jne    0x422992
  422919:	clc    
  42291a:	bound  ebx,QWORD PTR [ebx+0xd]
  42291d:	int3   
  42291e:	push   0x44
  422920:	add    al,0x6b
  422922:	std    
  422923:	dec    eax
  422924:	daa    
  422925:	cmc    
  422926:	pop    esi
  422927:	pop    ecx
  422928:	add    BYTE PTR [eax],al
  42292a:	sbb    al,0x3a
  42292c:	xor    dl,BYTE PTR [edi]
  42292e:	daa    
  42292f:	fild   QWORD PTR [ebx-0x17]
  422932:	inc    esp
  422933:	push   edx
  422934:	add    BYTE PTR [edx],bl
  422936:	and    ebp,eax
  422938:	imul   edi,DWORD PTR ds:0xa62f2c8,0xfffffff0
  42293f:	mul    BYTE PTR [edx+0x28]
  422942:	inc    ebx
  422943:	clc    
  422944:	addr16 or al,0xdf
  422947:	fidiv  WORD PTR [eax]
  422949:	fistp  DWORD PTR [esi]
  42294b:	in     eax,0x6b
  42294d:	adc    eax,0x2ffff24b
  422952:	in     eax,dx
  422953:	mul    BYTE PTR [edx-0x5]
  422956:	fsubrp st(7),st
  422958:	jae    0x422984
  42295a:	ror    ebx,1
  42295c:	pusha  
  42295d:	rcl    BYTE PTR [ecx+0x44a86bf8],cl
  422963:	lock call FWORD PTR [edi-0x249d0962]
  42296a:	sahf   
  42296b:	out    0x73,eax
  42296d:	stos   BYTE PTR es:[edi],al
  42296e:	call   0x71d7:0x79b55ee7
  422975:	lds    eax,FWORD PTR [ebp-0x62490296]
  42297b:	fsub   QWORD PTR [esi-0x69]
  42297e:	mov    eax,ds:0x60852df6
  422983:	fdivp  st(7),st
  422985:	jecxz  0x4229cc
  422987:	fdiv   DWORD PTR [ebx-0x65]
  42298a:	xchg   ebx,eax
  42298b:	div    BYTE PTR [ecx+0x0]
  42298e:	add    BYTE PTR [eax],al
  422990:	xchg   edi,eax
  422991:	inc    edi
  422992:	std    
  422993:	jmp    FWORD PTR [esi+0x7]
  422996:	dec    edi
  422997:	je     0x422965
  422999:	push   ebx
  42299a:	inc    eax
  42299b:	push   0x3e3ecc
  4229a0:	inc    edx
  4229a1:	add    eax,0x599c744f
  4229a6:	ins    BYTE PTR es:[edi],dx
  4229a7:	dec    ecx
  4229a8:	mov    BYTE PTR [ecx+0x3e],bh
  4229ab:	add    BYTE PTR [edx],cl
  4229ad:	add    eax,0x565c744f
  4229b2:	jno    0x422a26
  4229b4:	outs   dx,DWORD PTR ds:[esi]
  4229b5:	add    eax,0x792d00ea
  4229ba:	outs   dx,DWORD PTR ds:[esi]
  4229bb:	inc    ebx
  4229bc:	dec    ebx
  4229bd:	jne    0x422a0a
  4229bf:	dec    ecx
  4229c0:	das    
  4229c1:	add    eax,0x793d010e
  4229c6:	outs   dx,DWORD PTR ds:[esi]
  4229c7:	push   ebx
  4229c8:	push   edx
  4229c9:	ja     0x422a11
  4229cb:	push   edi
  4229cc:	fiadd  WORD PTR ds:0x5a3a686f
  4229d2:	pop    esi
  4229d3:	jo     0x422a0c
  4229d5:	and    esp,DWORD PTR [esp+ebp*2+0x4a]
  4229d9:	add    eax,0x63470036
  4229de:	bound  esi,QWORD PTR [ecx+ecx*4+0x64]
  4229e2:	popa   
  4229e3:	fs pushf 
  4229e5:	add    eax,0x6881002a
  4229ea:	jno    0x422a54
  4229ec:	jmp    0x87a49b67
  4229f1:	arpl   WORD PTR [esi+0x6d],bx
  4229f4:	add    BYTE PTR [eax],al
  4229f6:	add    DWORD PTR ds:0x62cd0045,0x60
  4229fd:	imul   eax,DWORD PTR [ebx-0x6e0002a7],0x5
  422a04:	pop    edi
  422a05:	outs   dx,DWORD PTR ds:[esi]
  422a06:	enter  0x6263,0x63
  422a0a:	inc    edi
  422a0b:	mov    WORD PTR [ecx],es
  422a0d:	es inc edi
  422a0f:	jg     0x4229f6
  422a11:	ins    BYTE PTR es:[edi],dx
  422a12:	aam    0x7c
  422a14:	repnz ins BYTE PTR es:[edi],dx
  422a16:	in     al,0x96
  422a18:	loopne 0x422a8d
  422a1a:	inc    edi
  422a1b:	pushf  
  422a1c:	add    DWORD PTR [ecx-0x1e],esi
  422a1f:	jmp    0x34832a00
  422a24:	add    al,0x71
  422a26:	mov    ds:0xbb60ded6,al
  422a2b:	jb     0x422a2e
  422a2d:	ds inc edi
  422a2f:	(bad)  
  422a30:	fisub  WORD PTR [eax-0x67]
  422a33:	jb     0x422a36
  422a35:	inc    ebp
  422a36:	inc    edi
  422a37:	and    ebx,edi
  422a39:	jae    0x4229cf
  422a3b:	iret   
  422a3c:	loopne 0x422aa6
  422a3e:	cwde   
  422a3f:	and    dh,al
  422a41:	inc    DWORD PTR [eax]
  422a43:	push   edx
  422a44:	add    DWORD PTR [ebp-0x6c],edx
  422a47:	xor    ecx,edx
  422a49:	jae    0x422ab1
  422a4b:	add    al,0xf0
  422a4d:	jb     0x422ac6
  422a4f:	jb     0x422a52
  422a51:	jne    0x422aa7
  422a53:	jmp    eax
  422a55:	push   0x6423a414
  422a5a:	add    BYTE PTR [eax],al
  422a5c:	arpl   WORD PTR [esi],cx
  422a5e:	add    al,0x4b
  422a60:	inc    edi
  422a61:	push   es
  422a62:	in     eax,0x5e
  422a64:	sub    esp,DWORD PTR [ebp-0x5dca9d0e]
  422a6a:	out    dx,eax
  422a6b:	ins    BYTE PTR es:[edi],dx
  422a6c:	sub    DWORD PTR [ecx-0x1b],ecx
  422a6f:	bound  eax,QWORD PTR [esi]
  422a71:	jb     0x422a74
  422a73:	pop    edi
  422a74:	inc    edi
  422a75:	test   ebx,esp
  422a77:	imul   ebp,DWORD PTR [eax],0x51
  422a7a:	fst    QWORD PTR [edx+0x14]
  422a7d:	push   ebp
  422a7e:	out    dx,eax
  422a7f:	dec    edi
  422a80:	adc    eax,0xf366dba7
  422a85:	or     BYTE PTR [ebx+eax*1-0xe7c240c],cl
  422a8c:	in     eax,0xf6
  422a8e:	pushf  
  422a8f:	and    eax,0x37af4e3
  422a94:	inc    edi
  422a95:	or     edi,esp
  422a97:	add    eax,DWORD PTR [edi+0x9]
  422a9a:	out    0x3,eax
  422a9c:	inc    edi
  422a9d:	or     edi,esp
  422a9f:	add    eax,DWORD PTR [edi+0x9]
  422aa2:	out    0x3,eax
  422aa4:	inc    edi
  422aa5:	or     edi,esp
  422aa7:	add    eax,DWORD PTR [edi+0x9]
  422aaa:	out    0x3,eax
  422aac:	inc    edi
  422aad:	or     edi,esp
  422aaf:	add    eax,DWORD PTR [edi+0x9]
  422ab2:	out    0x3,eax
  422ab4:	inc    edi
  422ab5:	or     edi,esp
  422ab7:	add    eax,DWORD PTR [edi+0x9]
  422aba:	out    0x3,eax
  422abc:	inc    edi
  422abd:	or     edi,esp
  422abf:	add    eax,DWORD PTR [eax]
  422ac1:	add    BYTE PTR [edi+0x9],al
  422ac4:	out    0x3,eax
  422ac6:	inc    edi
  422ac7:	or     edi,esp
  422ac9:	add    eax,DWORD PTR [edi+0x9]
  422acc:	out    0x3,eax
  422ace:	inc    edi
  422acf:	or     edi,esp
  422ad1:	add    eax,DWORD PTR [edi+0x9]
  422ad4:	out    0x3,eax
  422ad6:	inc    edi
  422ad7:	or     edi,esp
  422ad9:	add    eax,DWORD PTR [edi+0x9]
  422adc:	out    0x3,eax
  422ade:	inc    edi
  422adf:	or     edi,esp
  422ae1:	add    eax,DWORD PTR [edi+0x9]
  422ae4:	out    0x3,eax
  422ae6:	inc    edi
  422ae7:	or     edi,esp
  422ae9:	add    eax,DWORD PTR [edi+0x9]
  422aec:	out    0x3,eax
  422aee:	inc    edi
  422aef:	or     edi,esp
  422af1:	add    eax,DWORD PTR [edi+0x9]
  422af4:	out    0x3,eax
  422af6:	inc    edi
  422af7:	or     edi,esp
  422af9:	add    eax,DWORD PTR [edi+0x9]
  422afc:	out    0x3,eax
  422afe:	inc    edi
  422aff:	or     DWORD PTR [eax],eax
  422b01:	jmp    0xe942344a
  422b06:	inc    esp
  422b07:	or     DWORD PTR [eax],eax
  422b09:	jmp    0xe9423452
  422b0e:	inc    esp
  422b0f:	or     DWORD PTR [eax],eax
  422b11:	jmp    0xe942345a
  422b16:	inc    esp
  422b17:	or     DWORD PTR [eax],eax
  422b19:	jmp    0xe9423462
  422b1e:	inc    esp
  422b1f:	or     DWORD PTR [eax],eax
  422b21:	jmp    0xe942346a
  422b26:	add    BYTE PTR [eax],al
  422b28:	inc    esp
  422b29:	or     DWORD PTR [eax],eax
  422b2b:	jmp    0xe9423474
  422b30:	inc    esp
  422b31:	or     DWORD PTR [eax],eax
  422b33:	jmp    0xe942347c
  422b38:	inc    esp
  422b39:	or     DWORD PTR [eax],eax
  422b3b:	jmp    0xe9423484
  422b40:	inc    esp
  422b41:	or     DWORD PTR [eax],eax
  422b43:	jmp    0xe942348c
  422b48:	inc    esp
  422b49:	or     DWORD PTR [eax],eax
  422b4b:	jmp    0xe9423494
  422b50:	inc    esp
  422b51:	or     DWORD PTR [eax],eax
  422b53:	jmp    0xe942349c
  422b58:	inc    esp
  422b59:	or     DWORD PTR [eax],eax
  422b5b:	jmp    0xe94234a4
  422b60:	inc    esp
  422b61:	or     DWORD PTR [eax],eax
  422b63:	jmp    0xe94234ac
  422b68:	inc    esp
  422b69:	or     DWORD PTR [eax],eax
  422b6b:	jmp    0xe94234b4
  422b70:	inc    esp
  422b71:	or     DWORD PTR [eax],eax
  422b73:	jmp    0xe94234bc
  422b78:	inc    esp
  422b79:	or     DWORD PTR [eax],eax
  422b7b:	add    BYTE PTR [esi-0x61fffff6],ch
  422b81:	or     al,BYTE PTR [eax]
  422b83:	add    BYTE PTR [esi+0x6e00000a],bl
  422b89:	or     al,BYTE PTR [eax]
  422b8b:	add    BYTE PTR [eax],al
  422b8d:	add    BYTE PTR [esi+0xa],ch
  422b90:	add    BYTE PTR [eax],al
  422b92:	pop    esi
  422b93:	or     al,BYTE PTR [eax]
  422b95:	add    BYTE PTR [ebx+0x55],bh
  422b98:	int3   
  422b99:	int3   
  422b9a:	xchg   ebx,eax
  422b9b:	push   ebp
  422b9c:	int3   
  422b9d:	int3   
  422b9e:	repnz xchg ecx,eax
  422ba0:	in     al,dx
  422ba1:	push   ecx
  422ba2:	mov    esp,0x3f8a07cc
  422ba7:	xchg   ecx,eax
  422ba8:	dec    ebx
  422ba9:	dec    esp
  422bab:	imul   ebx,DWORD PTR [ebx-0x3d],0xffffff92
  422baf:	xchg   edx,eax
  422bb0:	in     al,dx
  422bb1:	push   ecx
  422bb2:	cdq    
  422bb3:	mov    esi,0x92a3c930
  422bb8:	outs   dx,DWORD PTR ds:[esi]
  422bb9:	xor    ah,cl
  422bbb:	fimul  WORD PTR [ebx]
  422bbd:	mov    edx,DWORD PTR [ecx+0x3f468905]
  422bc3:	nop
  422bc4:	inc    ebx
  422bc5:	cld    
  422bc6:	mov    esp,0x398b1fe6
  422bcb:	mov    DWORD PTR ds:0x800e736b,edi
  422bd1:	aas    
  422bd2:	jl     0x422bb1
  422bd4:	add    ebx,ebp
  422bd6:	faddp  st(5),st
  422bd8:	pop    ebp
  422bd9:	mov    ebp,edx
  422bdb:	ret    
  422bdc:	ror    ah,0x72
  422bdf:	xchg   edx,eax
  422be0:	in     al,dx
  422be1:	and    ebx,0x2c
  422be4:	mov    DWORD PTR [ebp+0x3f],eax
  422be7:	nop
  422be8:	inc    ebx
  422be9:	loopne 0x422bb7
  422beb:	rcr    edi,cl
  422bed:	mov    edx,DWORD PTR [edx]
  422bef:	imul   eax,DWORD PTR [ecx],0x73000051
  422bf5:	nop
  422bf6:	push   ebx
  422bf7:	in     al,0xbc
  422bf9:	retf   
  422bfa:	jecxz  0x422b87
  422bfc:	psraw  mm0,QWORD PTR [eax]
  422bff:	dec    ebp
  422c00:	dec    edi
  422c01:	nop
  422c02:	dec    ebx
  422c03:	clc    
  422c04:	mov    esp,0x58bf7bb
  422c09:	sub    eax,0x904f4501
  422c0e:	inc    ebx
  422c0f:	call   0x8c39ffe0
  422c14:	push   ss
  422c15:	sub    DWORD PTR [ecx],eax
  422c17:	push   ebp
  422c18:	aas    
  422c19:	nop
  422c1a:	push   ebx
  422c1b:	lock int3 
  422c1d:	retf   
  422c1e:	test   DWORD PTR [ebx+0x4d01050f],0xfc4b903f
  422c28:	or     bl,0xf3
  422c2b:	add    BYTE PTR [edi+0x9],al
  422c2e:	add    bl,ch
  422c30:	dec    esi
  422c31:	nop
  422c32:	push   ebx
  422c33:	hlt    
  422c34:	les    eax,FWORD PTR [edi-0x1]
  422c37:	mov    BYTE PTR [edx+0x1f45895d],dl
  422c3d:	xchg   ecx,eax
  422c3e:	dec    ebx
  422c3f:	hlt    
  422c40:	pop    esp
  422c41:	rcl    DWORD PTR [edi],1
  422c43:	jae    0x422cc4
  422c45:	nop
  422c46:	push   ebx
  422c47:	lock mov esp,0x4f450107
  422c4d:	xchg   edx,eax
  422c4e:	inc    ebx
  422c4f:	fsubr  QWORD PTR [ebp+0x13]
  422c52:	push   0xffc945ac
  422c57:	mov    al,BYTE PTR [eax]
  422c59:	add    BYTE PTR [edx+0x45],bh
  422c5c:	dec    edi
  422c5d:	call   0x4236d9
  422c62:	les    ecx,FWORD PTR [ebp+0xc]
  422c65:	test   DWORD PTR [edi],eax
  422c67:	fistp  WORD PTR [eax]
  422c69:	mov    esi,DWORD PTR [edx+0x5d]
  422c6c:	mov    DWORD PTR [ebp-0x51],eax
  422c6f:	adc    al,0xb5
  422c71:	or     al,0x17
  422c73:	xchg   edx,eax
  422c74:	dec    ebx
  422c75:	in     al,dx
  422c76:	mov    esp,0x28bebbe
  422c7b:	mov    DWORD PTR gs:[edi+esi*4],eax
  422c7f:	or     BYTE PTR [ebx+0x8],al
  422c82:	lods   al,BYTE PTR ds:[esi]
  422c83:	push   ss
  422c84:	mov    DWORD PTR [ebp-0x69],ecx
  422c87:	mov    BYTE PTR [edi-0x102941fc],bh
  422c8d:	jmp    0x422c3a
  422c8f:	sbb    al,al
  422c91:	mov    esp,DWORD PTR [edx-0x3a]
  422c94:	ror    ah,0x83
  422c97:	push   ebp
  422c98:	int3   
  422c99:	int3   
  422c9a:	jnp    0x422cf1
  422c9c:	int3   
  422c9d:	int3   
  422c9e:	xchg   ebx,eax
  422c9f:	push   ebp
  422ca0:	int3   
  422ca1:	int3   
  422ca2:	repnz (bad) 
  422ca4:	in     al,dx
  422ca5:	and    DWORD PTR [ebx+0x1],0xffffffe8
  422ca9:	add    eax,0x89fd6448
  422cae:	mov    dh,BYTE PTR [ecx-0x77]
  422cb1:	inc    ebp
  422cb2:	das    
  422cb3:	mov    ecx,0x643029e7
  422cb8:	std    
  422cb9:	add    DWORD PTR [ebx],0xd
  422cbc:	mov    eax,ds:0x7a0000b4
  422cc1:	retf   0x67ff
  422cc4:	fild   DWORD PTR [esi]
  422cc6:	inc    eax
  422cc7:	add    BYTE PTR [ebp+edx*8-0x1f7ae19],bh
  422cce:	mov    bl,0x55
  422cd0:	xchg   BYTE PTR [ecx],cl
  422cd2:	mov    eax,ds:0xffca92b8
  422cd7:	imul   eax,DWORD PTR [edi-0x11],0x6fb67ff
  422cde:	inc    eax
  422cdf:	add    al,ah
  422ce1:	std    
  422ce2:	mov    bh,0x55
  422ce4:	xchg   BYTE PTR [ecx],cl
  422ce6:	xchg   DWORD PTR [ebp-0x21],eax
  422ce9:	dec    ebx
  422cea:	inc    ebx
  422ceb:	cld    
  422cec:	inc    edi
  422ced:	or     DWORD PTR [eax],eax
  422cef:	add    BYTE PTR [ecx+edx*1-0x7844aa77],ch
  422cf6:	ret    0xbe01
  422cf9:	mov    ebp,0x652a83fb
  422cfe:	or     BYTE PTR [ebx+0x66],dh
  422d01:	nop
  422d02:	inc    ebx
  422d03:	cld    
  422d04:	int3   
  422d05:	adc    al,0x83
  422d07:	mov    WORD PTR [ebp-0x37],es
  422d0a:	call   DWORD PTR [eax-0x44]
  422d0d:	mov    ebp,0xfd8052e7
  422d12:	mov    bl,0x55
  422d14:	push   es
  422d15:	or     DWORD PTR [ecx+0x491734d],ecx
  422d1b:	lea    esi,[ebx+0x6c003ebd]
  422d21:	cmp    BYTE PTR [ecx-0x5ffff1b],cl
  422d27:	inc    edi
  422d28:	int3   
  422d29:	int3   
  422d2a:	adc    DWORD PTR [esp+ecx*8-0x34],0x7b
  422d2f:	push   esp
  422d30:	int3   
  422d31:	int3   
  422d32:	adc    edx,DWORD PTR [esi-0x34]
  422d35:	int3   
  422d36:	xchg   edx,eax
  422d37:	mov    gs,esp
  422d39:	mov    eax,ds:0x3ebb57
  422d3e:	imul   ecx,DWORD PTR [esi-0x2b33cfc0],0xd1ce3e07
  422d48:	pop    es
  422d49:	pop    ebp
  422d4a:	add    al,0x56
  422d4c:	int3   
  422d4d:	int3   
  422d4e:	sti    
  422d4f:	push   ebp
  422d50:	int3   
  422d51:	int3   
  422d52:	adc    edx,DWORD PTR [esi-0x34]
  422d55:	int3   
  422d56:	xchg   edx,eax
  422d57:	mov    gs,esp
  422d59:	mov    ecx,DWORD PTR [edx+0x7a8b5015]
  422d5f:	adc    DWORD PTR [edi-0x1],ecx
  422d62:	cmp    bl,BYTE PTR [ebp-0x3bb8bead]
  422d68:	ror    ah,0x3
  422d6b:	push   esi
  422d6c:	int3   
  422d6d:	int3   
  422d6e:	sti    
  422d6f:	push   ebp
  422d70:	int3   
  422d71:	int3   
  422d72:	xchg   ebx,eax
  422d73:	push   ebp
  422d74:	int3   
  422d75:	int3   
  422d76:	adc    cl,BYTE PTR [esi+0x11a383ec]
  422d7c:	push   0x0
  422d7e:	sbb    eax,0x45dc6809
  422d83:	leave  
  422d84:	(bad)  
  422d85:	(bad)  
  422d86:	xor    ah,BYTE PTR [ecx+0x4153]
  422d8c:	inc    edi
  422d8d:	nop
  422d8e:	inc    ebx
  422d8f:	clc    
  422d90:	pop    ds
  422d91:	jno    0x422d95
  422d93:	inc    eax
  422d94:	inc    edi
  422d95:	mov    es,WORD PTR [ebx-0x8]
  422d98:	pop    ss
  422d99:	jno    0x422d55
  422d9b:	push   DWORD PTR [eax+0x62]
  422d9e:	add    esp,0xfc43903f
  422da4:	int3   
  422da5:	aam    0xf
  422da7:	push   ecx
  422da8:	int3   
  422da9:	mov    esp,0xccbc520b
  422dae:	pop    es
  422daf:	push   eax
  422db0:	dec    eax
  422db1:	mov    esp,0xc42a8bfb
  422db6:	ror    ah,0x92
  422db9:	mov    gs,esp
  422dbb:	push   ecx
  422dbc:	or     ah,cl
  422dbe:	sti    
  422dbf:	add    BYTE PTR [edi+0x9],al
  422dc2:	add    bl,ch
  422dc4:	dec    esi
  422dc5:	mov    es,WORD PTR [ebx-0x4]
  422dc8:	les    ecx,FWORD PTR [eax-0x1]
  422dcb:	mov    BYTE PTR [edx+0xb4d8965],cl
  422dd1:	push   ds
  422dd2:	dec    ebx
  422dd3:	adc    BYTE PTR [edx+eax*1-0x77],dh
  422dd7:	push   ebp
  422dd8:	dec    edi
  422dd9:	push   es
  422dda:	push   ebx
  422ddb:	cld    
  422ddc:	inc    eax
  422ddd:	fwait
  422dde:	add    cl,BYTE PTR [ebx+0x4d01157a]
  422de4:	jecxz  0x422df7
  422de6:	mov    dh,0x11
  422de8:	sbb    al,0x47
  422dea:	je     0x422df3
  422dec:	pop    DWORD PTR [edi]
  422dee:	add    BYTE PTR [eax],al
  422df0:	add    BYTE PTR [eax],al
  422df2:	inc    edi
  422df3:	outs   dx,BYTE PTR ds:[esi]
  422df4:	add    al,0xeb
  422df6:	xchg   edi,eax
  422df7:	adc    eax,0xc3a28bc0
  422dfc:	ror    ah,0x83
  422dff:	push   esp
  422e00:	int3   
  422e01:	int3   
  422e02:	jnp    0x422e58
  422e04:	int3   
  422e05:	int3   
  422e06:	xchg   ebx,eax
  422e07:	push   esp
  422e08:	int3   
  422e09:	int3   
  422e0a:	repnz (bad) 
  422e0c:	in     al,dx
  422e0d:	mov    ecx,0x92f
  422e12:	and    ecx,DWORD PTR [esi-0x6ad76f9]
  422e18:	push   ebp
  422e19:	inc    ecx
  422e1a:	inc    edi
  422e1b:	(bad)  
  422e1c:	ror    ah,0x83
  422e1f:	push   esp
  422e20:	int3   
  422e21:	int3   
  422e22:	jnp    0x422e78
  422e24:	int3   
  422e25:	int3   
  422e26:	xchg   ebx,eax
  422e27:	push   esp
  422e28:	int3   
  422e29:	int3   
  422e2a:	repnz (bad) 
  422e2c:	in     al,dx
  422e2d:	and    DWORD PTR [ebx-0x8],0xffffff88
  422e31:	inc    ebp
  422e32:	aas    
  422e33:	xchg   BYTE PTR [eax+0x4],bh
  422e36:	inc    edi
  422e37:	adc    BYTE PTR [eax+ecx*4-0x74fff6b9],al
  422e3e:	adc    BYTE PTR [ecx],0x89
  422e41:	push   ecx
  422e42:	inc    ebx
  422e43:	mov    edx,gs
  422e45:	or     dh,dh
  422e47:	jae    0x422dd0
  422e49:	push   ebp
  422e4a:	adc    edx,DWORD PTR [ebp+0x49c40843]
  422e50:	or     BYTE PTR [ecx+0x45c55982],cl
  422e56:	add    BYTE PTR [eax],al
  422e58:	add    ecx,DWORD PTR [edx]
  422e5a:	add    BYTE PTR [eax],al
  422e5c:	inc    edi
  422e5d:	je     0x422e66
  422e5f:	mov    eax,DWORD PTR [edx+0x46c1815d]
  422e65:	xchg   edx,eax
  422e66:	dec    ebx
  422e67:	cld    
  422e68:	int3   
  422e69:	mov    dh,0xfb
  422e6b:	cmp    esi,DWORD PTR [edx+0x55]
  422e6e:	jno    0x422eb6
  422e70:	mov    esp,0x7a8bfbc6
  422e75:	pop    ecx
  422e76:	or     eax,0xbeca5bb7
  422e7b:	cli    
  422e7c:	dec    ebx
  422e7d:	mov    edx,?
  422e7f:	add    edi,DWORD PTR [edx]
  422e81:	sbb    ecx,DWORD PTR [ecx+0x4b94ab45]
  422e87:	lock push eax
  422e89:	cwde   
  422e8a:	adc    al,0x41
  422e8c:	(bad)  
  422e8d:	imul   edi,ebp,0xf
  422e90:	inc    edi
  422e91:	or     DWORD PTR [edi+0x43948f55],eax
  422e97:	or     ah,cl
  422e99:	into   
  422e9a:	or     eax,DWORD PTR [ebx]
  422e9c:	dec    edi
  422e9d:	xchg   esp,eax
  422e9e:	push   ebx
  422e9f:	clc    
  422ea0:	mov    esp,0x2030f05
  422ea5:	stc    
  422ea6:	mov    BYTE PTR [ebp+0x4f],cl
  422ea9:	xchg   esp,eax
  422eaa:	push   ebx
  422eab:	or     al,0x44
  422ead:	cli    
  422eae:	mov    BYTE PTR [ebp+0x4f],cl
  422eb1:	xchg   edx,eax
  422eb2:	add    al,0xa
  422eb4:	pop    esp
  422eb5:	mov    dl,0x89
  422eb7:	push   ebp
  422eb8:	dec    edi
  422eb9:	xchg   esp,eax
  422eba:	inc    ebx
  422ebb:	or     BYTE PTR [eax],al
  422ebd:	add    BYTE PTR [ebx+ecx*8+0x3],al
  422ec1:	mov    DWORD PTR [edx+0x286be711],ecx
  422ec7:	pusha  
  422ec8:	std    
  422ec9:	mov    ebp,DWORD PTR [edx]
  422ecb:	mov    esi,0x9472ccc0
  422ed0:	in     al,dx
  422ed1:	and    DWORD PTR [ebx],0x25
  422ed4:	mov    DWORD PTR [ebp+0x3f],eax
  422ed7:	xchg   edx,eax
  422ed8:	inc    ebx
  422ed9:	in     al,0xcc
  422edb:	int    0xe3
  422edd:	mov    edx,DWORD PTR [edx+0x33510165]
  422ee3:	xchg   edx,eax
  422ee4:	push   ebx
  422ee5:	call   0x8c29f4a6
  422eea:	iret   
  422eeb:	mov    BYTE PTR [eax],al
  422eed:	add    BYTE PTR [edi-0x6e],al
  422ef0:	dec    ebx
  422ef1:	lock (bad) 
  422ef3:	fucomp st(7)
  422ef5:	add    BYTE PTR [eax],bh
  422ef7:	test   ecx,edi
  422ef9:	add    BYTE PTR [edi+0x9],al
  422efc:	mov    DWORD PTR [ebp+0x4f],edx
  422eff:	or     al,0x53
  422f01:	lock mov esi,0x28bdfb5
  422f07:	imul   eax,DWORD PTR [ecx+0xd093778],0x8a284
  422f11:	add    BYTE PTR ds:0xbc006a09,bl
  422f17:	int    0xdf
  422f19:	mov    ebx,DWORD PTR [edx]
  422f1b:	adc    DWORD PTR [ecx],eax
  422f1d:	push   ecx
  422f1e:	dec    ebx
  422f1f:	mov    ebx,0x15fc
  422f24:	scas   eax,DWORD PTR es:[edi]
  422f25:	mov    ch,0x3e
  422f27:	add    BYTE PTR [esi+0xa8bfbc5],bh
  422f2d:	imul   eax,DWORD PTR [ecx+0x16d54738],0x8969028b
  422f37:	push   ebp
  422f38:	aas    
  422f39:	or     al,0xf
  422f3b:	mov    DWORD PTR [edx+0x2745896d],ebx
  422f41:	xchg   ebx,eax
  422f42:	dec    ebx
  422f43:	or     BYTE PTR [ecx+edx*8+0xf],al
  422f47:	mov    DWORD PTR [edx+0x55],edi
  422f4a:	jmp    0xdff6fb66
  422f4f:	mov    eax,DWORD PTR [edx+0x37420111]
  422f55:	nop
  422f56:	inc    ebx
  422f57:	hlt    
  422f58:	mov    esp,0x9a8bdfcc
  422f5d:	adc    DWORD PTR [ecx],eax
  422f5f:	adc    esi,ecx
  422f61:	mov    ah,0xeb
  422f63:	(bad)  
  422f64:	mov    ah,BYTE PTR [ecx+0x0]
  422f67:	add    BYTE PTR [edi+0x9],al
  422f6a:	mov    DWORD PTR [ebp-0x19],eax
  422f6d:	mov    bh,BYTE PTR [eax+0x10]
  422f70:	inc    edi
  422f71:	aad    0xc
  422f73:	mov    eax,DWORD PTR [edx+0x47398169]
  422f79:	aad    0x4
  422f7b:	(bad)  
  422f7c:	or     ah,BYTE PTR [ecx-0x1]
  422f7f:	inc    DWORD PTR [edi+0x9]
  422f82:	mov    DWORD PTR [ebp-0x45],edx
  422f85:	mov    bh,BYTE PTR [edx]
  422f87:	add    BYTE PTR [eax],al
  422f89:	add    BYTE PTR [ebx],dh
  422f8b:	call   0x92dd7518
  422f90:	or     BYTE PTR [ecx+0x9a6],al
  422f96:	(bad)  
  422f97:	aad    0x1b
  422f99:	mov    esi,edx
  422f9b:	push   esp
  422f9c:	mov    DWORD PTR [edx],eax
  422f9e:	sub    bl,BYTE PTR [esi-0x3]
  422fa1:	(bad)  
  422fa2:	clc    
  422fa3:	mov    eax,0xb8734d88
  422fa8:	out    0xb5,eax
  422faa:	push   0x5e
  422fac:	std    
  422fad:	or     DWORD PTR [ebx+0x7b458711],0x72
  422fb4:	sbb    al,0x8b
  422fb6:	cli    
  422fb7:	push   esp
  422fb8:	mov    DWORD PTR [edx],eax
  422fba:	mov    esp,0x9b8d07cc
  422fbf:	adc    DWORD PTR [edx],eax
  422fc1:	push   edx
  422fc2:	int3   
  422fc3:	ret    
  422fc4:	sti    
  422fc5:	push   eax
  422fc6:	pop    ds
  422fc7:	jbe    0x422fc4
  422fc9:	jmp    FWORD PTR [eax]
  422fcb:	mov    al,ah
  422fcd:	or     dh,cl
  422fcf:	ret    
  422fd0:	fisttp DWORD PTR [ebx+0x5589558a]
  422fd6:	repz (bad) 
  422fd8:	jnp    0xc0c38560
  422fde:	dec    ebx
  422fdf:	nop
  422fe0:	inc    ebx
  422fe1:	hlt    
  422fe2:	int3   
  422fe3:	retf   
  422fe4:	jmp    0x422f69
  422fe6:	push   es
  422fe7:	add    eax,0x71db4d87
  422fec:	xchg   ebp,eax
  422fed:	mov    eax,DWORD PTR [eax]
  422fef:	add    BYTE PTR [edx+0x69],bh
  422ff2:	add    edx,0xe0539033
  422ff8:	fimul  WORD PTR [esi]
  422ffa:	std    
  422ffb:	dec    eax
  422ffd:	xchg   ecx,eax
  422ffe:	jecxz  0x42305d
  423000:	test   BYTE PTR [esp+ecx*8-0x34],cl
  423004:	adc    dl,BYTE PTR [edx+0x10a383ec]
  42300a:	push   0xffc945f0
  42300f:	(bad)  
  423010:	cmp    cl,BYTE PTR [ecx+0x53]
  423013:	inc    ecx
  423014:	inc    edi
  423015:	nop
  423016:	inc    ebx
  423017:	clc    
  423018:	pop    ds
  423019:	pop    ebp
  42301a:	add    al,BYTE PTR [eax+0x47]
  42301d:	xchg   edx,eax
  42301e:	inc    ebx
  42301f:	clc    
  423020:	pop    ss
  423021:	jno    0x423061
  423023:	std    
  423024:	js     0x423083
  423026:	add    esp,0xfc43903f
  42302c:	mov    esp,0xcc510fcb
  423031:	mov    bl,0xb
  423033:	push   edx
  423034:	int3   
  423035:	ret    
  423036:	pop    es
  423037:	push   eax
  423038:	push   eax
  423039:	mov    bl,0xfb
  42303b:	mov    esp,DWORD PTR [edx-0x45]
  42303e:	ror    ah,0x13
  423041:	dec    esi
  423042:	int3   
  423043:	int3   
  423044:	xchg   edx,eax
  423045:	nop
  423046:	in     al,dx
  423047:	mov    eax,ds:0x3eb353
  42304c:	add    DWORD PTR [edx],ecx
  42304e:	push   0x55f53a8b
  423053:	inc    ecx
  423054:	add    BYTE PTR [eax],al
  423056:	inc    edi
  423057:	xchg   edx,eax
  423058:	push   eax
  423059:	add    ebp,edx
  42305b:	dec    eax
  42305c:	mov    BYTE PTR [eax+0x42],dl
  42305f:	mov    esi,0x4e13ccc0
  423064:	int3   
  423065:	int3   
  423066:	xchg   edx,eax
  423067:	nop
  423068:	in     al,dx
  423069:	and    ebx,0xd
  42306c:	lahf   
  42306d:	adc    BYTE PTR [ecx-0xa750036],dl
  423073:	sbb    bh,al
  423075:	ds int3 
  423077:	leave  
  423078:	das    
  423079:	mov    esi,ebp
  42307b:	nop
  42307c:	sar    BYTE PTR [esi],cl
  42307e:	mov    esp,0x958b0bd1
  423083:	xchg   edx,eax
  423084:	dec    ebx
  423085:	hlt    
  423086:	int3   
  423087:	(bad)  
  423088:	repz mov edi,edi
  42308b:	or     al,0x87
  42308d:	dec    ebp
  42308e:	scas   eax,DWORD PTR es:[edi]
  42308f:	nop
  423090:	push   ebx
  423091:	clc    
  423092:	into   
  423093:	mov    dh,0xfb
  423095:	mov    eax,0x946
  42309a:	retf   0x7449
  42309d:	inc    esp
  42309e:	(bad)  
  42309f:	fdivrp st(7),st
  4230a1:	add    dl,bh
  4230a3:	add    al,0x31
  4230a5:	shr    BYTE PTR [ebp+ebx*1-0x77],0x4d
  4230aa:	outs   dx,DWORD PTR ds:[esi]
  4230ab:	nop
  4230ac:	dec    edi
  4230ad:	sbb    BYTE PTR [esi+esi*4],ch
  4230b0:	pop    es
  4230b1:	jne    0x4230f1
  4230b3:	nop
  4230b4:	inc    ebx
  4230b5:	clc    
  4230b6:	int3   
  4230b7:	into   
  4230b8:	or     ecx,DWORD PTR [ecx-0x3010000]
  4230be:	mov    BYTE PTR [ebp+0x4f],dl
  4230c1:	nop
  4230c2:	inc    ebx
  4230c3:	adc    dh,cl
  4230c5:	(bad)  
  4230c6:	pop    ss
  4230c7:	mov    eax,0x946
  4230cc:	sbb    al,0x1
  4230ce:	mov    DWORD PTR [ebp+0x2f],ecx
  4230d1:	nop
  4230d2:	jns    0x45cb9252
  4230d8:	pop    ds
  4230d9:	and    BYTE PTR [ebx-0x4],al
  4230dc:	call   0xe905:0x1cc03105
  4230e3:	mov    bl,0x34
  4230e5:	dec    ecx
  4230e6:	mov    ebp,esp
  4230e8:	call   0xcc4d:0x3cccc48
  4230ef:	int3   
  4230f0:	sti    
  4230f1:	dec    esp
  4230f2:	int3   
  4230f3:	int3   
  4230f4:	adc    ecx,DWORD PTR [ebp-0x34]
  4230f7:	int3   
  4230f8:	jb     0x42308a
  4230fa:	in     al,dx
  4230fb:	and    ebx,0x0
  4230fe:	lds    eax,FWORD PTR [ebp-0x31]
  423101:	or     BYTE PTR [eax],dh
  423103:	add    BYTE PTR [edi-0xf],al
  423106:	add    eax,DWORD PTR [ebx]
  423108:	pop    es
  423109:	or     DWORD PTR [edi-0x35e504],ebx
  42310f:	dec    edi
  423110:	lahf   
  423111:	mov    bh,0xfb
  423113:	jmp    DWORD PTR [eax-0x31f73b79]
  423119:	(bad)
  42311c:	pop    es
  42311d:	nop
  42311e:	dec    ebx
  42311f:	clc    
  423120:	add    BYTE PTR [eax],al
  423122:	test   BYTE PTR [edi-0x35e523ed],0xff
  423129:	mov    al,BYTE PTR ds:0x476a4fb9
  42312f:	pop    esp
  423130:	push   ebx
  423131:	hlt    
  423132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423133:	xor    al,0x53
  423135:	inc    ecx
  423136:	inc    edi
  423137:	mov    BYTE PTR [ebx],bh
  423139:	aam    0xf2
  42313b:	leave  
  42313c:	(bad)  
  42313d:	(bad)  
  42313e:	fiadd  DWORD PTR [ebx]
  423140:	mov    eax,0x94702
  423145:	jmp    0x4230f4
  423147:	mov    cs,WORD PTR [ebx]
  423149:	add    BYTE PTR [ebp-0x37],al
  42314c:	dec    DWORD PTR [eax+0x685982]
  423152:	xchg   edx,eax
  423153:	or     BYTE PTR [eax],al
  423155:	push   0x400747
  42315a:	int3   
  42315b:	hlt    
  42315c:	rcl    DWORD PTR [ebp-0x7a],cl
  42315f:	or     DWORD PTR [edi-0x3e],edi
  423162:	inc    edi
  423163:	pop    es
  423164:	add    BYTE PTR [eax],al
  423166:	xchg   ebp,eax
  423167:	jno    0x423107
  423169:	(bad)  
  42316a:	clc    
  42316b:	pop    edx
  42316c:	add    esp,0x200a143
  423172:	xchg   DWORD PTR [ecx],ecx
  423174:	sub    eax,DWORD PTR [eax]
  423176:	inc    ebp
  423177:	or     DWORD PTR [eax],eax
  423179:	mov    ecx,DWORD PTR [edx+0x35]
  42317c:	push   ebx
  42317d:	inc    ecx
  42317e:	inc    edi
  42317f:	cs enter 0x3a89,0x5
  423184:	push   esi
  423185:	inc    ecx
  423186:	add    BYTE PTR [eax],al
  423188:	inc    edi
  423189:	mov    ss,WORD PTR [ebx]
  42318b:	add    al,0x11
  42318d:	enter  0x51ff,0xe6
  423191:	xor    eax,0xb9474153
  423196:	mov    BYTE PTR [ebp-0x69],cl
  423199:	mov    eax,0x5a9b9de7
  42319e:	std    
  42319f:	or     DWORD PTR [ebx+0x7315890d],0xffffffb4
  4231a6:	add    BYTE PTR ds:[esp+esi*4+0x7],al
  4231ab:	mov    DWORD PTR [edx],edx
  4231ad:	jno    0x423138
  4231af:	push   ebp
  4231b0:	pop    edi
  4231b1:	pop    edx
  4231b2:	loop   0x42313f
  4231b4:	bound  edi,QWORD PTR [eax+eax*8-0x33b26c34]
  4231bb:	int3   
  4231bc:	repnz (bad) 
  4231be:	in     al,dx
  4231bf:	mov    ecx,DWORD PTR [edx]
  4231c1:	adc    DWORD PTR [ecx],edi
  4231c3:	inc    ebp
  4231c4:	cmp    edx,esi
  4231c6:	add    al,0x8b
  4231c8:	mov    dl,BYTE PTR [ecx]
  4231ca:	jmp    0x89485dd4
  4231cf:	inc    ebp
  4231d0:	inc    ebx
  4231d1:	mov    esp,0x4cfbccc0
  4231d6:	int3   
  4231d7:	int3   
  4231d8:	adc    ecx,DWORD PTR [ebp-0x34]
  4231db:	int3   
  4231dc:	jb     0x42316c
  4231de:	in     al,dx
  4231df:	and    DWORD PTR [ebx],0x2d
  4231e2:	lds    eax,FWORD PTR [ebp+0xb]
  4231e5:	or     DWORD PTR [eax+0x1],esi
  4231e8:	inc    edi
  4231e9:	mov    es,WORD PTR [ebx+0x8]
  4231ec:	add    BYTE PTR [eax],al
  4231ee:	into   
  4231ef:	ret    
  4231f0:	xlat   BYTE PTR ds:[ebx]
  4231f1:	mov    eax,DWORD PTR [edx+0x3f558941]
  4231f7:	push   es
  4231f8:	dec    edi
  4231f9:	cmp    al,0xce
  4231fb:	mov    bl,0xdf
  4231fd:	mov    eax,DWORD PTR [edx+0x7fb70d69]
  423203:	cmc    
  423204:	mov    BYTE PTR [ebp-0x19],dl
  423207:	mov    eax,DWORD PTR [edx+ecx*1+0x5f]
  42320b:	nop
  42320c:	inc    ebx
  42320d:	call   0x40432741
  423212:	inc    edi
  423213:	mov    cs,WORD PTR [ebx]
  423215:	cld    
  423216:	adc    cl,al
  423218:	call   DWORD PTR [eax-0x51]
  42321b:	leave  
  42321c:	clc    
  42321d:	call   FWORD PTR [eax-0x41f73b7b]
  423223:	ret    
  423224:	out    dx,eax
  423225:	push   0x7
  423227:	icebp  
  423228:	jmp    FWORD PTR [edi]
  42322a:	inc    edi
  42322b:	or     DWORD PTR [eax+0x0],ebp
  42322e:	test   DWORD PTR [edi],0x5a476a00
  423234:	push   ebx
  423235:	lock mov esi,0xfa8be3c3
  42323b:	push   0xb8f34289
  423240:	mov    BYTE PTR [ebp+0x3f],cl
  423243:	mov    eax,0xb6635588
  423248:	out    0xc1,eax
  42324a:	inc    edx
  42324b:	pop    ecx
  42324c:	std    
  42324d:	add    DWORD PTR [ebx],0x6
  423250:	lds    eax,FWORD PTR [ebp+0x0]
  423253:	add    BYTE PTR [ebx],bh
  423255:	or     al,BYTE PTR [eax]
  423257:	add    BYTE PTR [edi+0x64],al
  42325a:	pop    es
  42325b:	mov    ecx,DWORD PTR [edx+0x46c0815d]
  423261:	add    BYTE PTR [ebx-0xc],0xbc
  423265:	(bad)  
  423266:	fisttp WORD PTR [edi]
  423268:	sar    BYTE PTR [edx+0x5d9a3905],1
  42326e:	jno    0x4232c9
  423270:	int3   
  423271:	into   
  423272:	out    0x83,eax
  423274:	outs   dx,DWORD PTR ds:[esi]
  423275:	std    
  423276:	push   DWORD PTR [ebx-0x7e]
  423279:	test   BYTE PTR [ebx-0x18],cl
  42327c:	(bad)  
  42327d:	ror    BYTE PTR [edi],cl
  42327f:	add    BYTE PTR [ebx+0x15],dl
  423282:	mov    DWORD PTR [ebp-0x21],edx
  423285:	test   BYTE PTR [edx+0x10],al
  423288:	mov    esp,0x168bdfc6
  42328d:	adc    eax,0x5857448b
  423292:	mov    DWORD PTR [ebp-0x59],ecx
  423295:	sbb    al,0xd2
  423297:	div    DWORD PTR [esi]
  423299:	adc    eax,0x8a75589
  42329e:	lods   eax,DWORD PTR ds:[esi]
  42329f:	inc    edx
  4232a0:	pop    ebx
  4232a1:	mov    ecx,0x849f4588
  4232a6:	dec    ebx
  4232a7:	or     BYTE PTR [ecx+eax*8+0x13],al
  4232ab:	push   ecx
  4232ac:	int3   
  4232ad:	mov    esi,0x6d028be7
  4232b2:	add    DWORD PTR [edx+0x43],eax
  4232b5:	mov    ecx,0x55e7
  4232ba:	push   0x58
  4232bc:	std    
  4232bd:	or     DWORD PTR [ebx+0x6f4d8905],0xffffff8c
  4232c4:	mov    edi,0xe7c6be28
  4232c9:	jmp    0x423280
  4232cb:	test   BYTE PTR [ebx-0x1c],dl
  4232ce:	xchg   ebp,eax
  4232cf:	popa   
  4232d0:	push   cs
  4232d1:	cld    
  4232d2:	cmp    BYTE PTR [eax-0x7f],bl
  4232d5:	les    ecx,FWORD PTR [ebx-0x1f]
  4232d8:	and    eax,DWORD PTR [ebx]
  4232da:	xchg   DWORD PTR [ecx],ecx
  4232dc:	lahf   
  4232dd:	cld    
  4232de:	jp     0x4232aa
  4232e0:	dec    DWORD PTR [edi+0x2f]
  4232e3:	test   dl,bh
  4232e5:	call   DWORD PTR [eax]
  4232e7:	mov    esp,es
  4232e9:	or     BYTE PTR [esi+0x4283dbcd],bh
  4232ef:	push   ecx
  4232f0:	push   ebx
  4232f1:	inc    ecx
  4232f2:	inc    edi
  4232f3:	or     DWORD PTR [ebx+0xa],esi
  4232f6:	mov    esp,0x8655f005
  4232fb:	or     DWORD PTR [edi-0x1],ecx
  4232fe:	jp     0x423335
  423300:	cmp    DWORD PTR ds:0x3ebddf,0x6a1bde47
  42330a:	xchg   ecx,esp
  42330c:	jmp    FWORD PTR [edi]
  42330e:	inc    edi
  42330f:	or     DWORD PTR [ecx-0x774544ab],ecx
  423315:	inc    ebp
  423316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423317:	or     DWORD PTR [eax+0x34],0x16
  42331b:	pop    eax
  42331c:	push   ebx
  42331d:	lock add BYTE PTR [eax],al
  423320:	in     al,0x3c
  423322:	push   ebx
  423323:	inc    ecx
  423324:	inc    edi
  423325:	adc    ebp,DWORD PTR fs:[edx+0x7]
  423329:	loope  0x42332a
  42332b:	das    
  42332c:	inc    edi
  42332d:	or     DWORD PTR [ecx+0x69ba8355],ecx
  423333:	add    BYTE PTR [eax-0x43],bh
  423336:	out    dx,eax
  423337:	mov    ds:0x3ebd9b,eax
  42333c:	les    edx,FWORD PTR ds:0x90655d4
  423342:	add    BYTE PTR [ebp+0x32],dh
  423345:	jecxz  0x423386
  423347:	push   0x1947
  42334c:	mov    esp,0xad50fbcd
  423351:	or     ebp,edi
  423353:	push   ebp
  423354:	aaa    
  423355:	stos   DWORD PTR es:[edi],eax
  423356:	aam    0x55
  423358:	xchg   BYTE PTR [ecx],cl
  42335a:	mov    DWORD PTR [ebp+0x23],ecx
  42335d:	or     DWORD PTR [ebx-0x28],0x8bd7bccc
  423364:	xor    BYTE PTR [ecx],0x1
  423367:	inc    edx
  423368:	push   ebx
  423369:	add    BYTE PTR [ebx-0x20],0xbc
  42336d:	(bad)  
  42336e:	sti    
  42336f:	push   ecx
  423370:	int3   
  423371:	mov    esp,0x3da652e3
  423376:	push   ebx
  423377:	inc    ecx
  423378:	inc    edi
  423379:	mov    ecx,0x56eb95e7
  42337e:	std    
  42337f:	or     DWORD PTR [ebx],0x6
  423382:	mov    DWORD PTR [ebp+0x0],ecx
  423385:	add    bh,ah
  423387:	mov    dh,BYTE PTR [edi+0x947a4]
  42338d:	add    BYTE PTR [ebx+0x13],dl
  423390:	mov    DWORD PTR [ebp-0x59],edx
  423393:	add    BYTE PTR [ebx-0x28],0x44
  423397:	mov    esp,DWORD PTR [eax-0x78f6b900]
  42339d:	inc    ebp
  42339e:	fwait
  42339f:	or     BYTE PTR [ebx-0x20],0xcc
  4233a3:	cld    
  4233a4:	rcl    DWORD PTR [ebp+0x6],cl
  4233a7:	or     DWORD PTR [ecx],ebp
  4233a9:	push   ecx
  4233aa:	pop    ebx
  4233ab:	adc    BYTE PTR [ebx],0x4
  4233ae:	icebp  
  4233af:	(bad)  
  4233b0:	jmp    DWORD PTR [eax+0x3ebf4b]
  4233b6:	pop    ss
  4233b7:	or     BYTE PTR [ebx],0xd4
  4233ba:	sbb    cl,al
  4233bc:	call   DWORD PTR [eax-0x44]
  4233bf:	mov    esp,0xd66f52eb
  4233c4:	stc    
  4233c5:	call   FWORD PTR [eax-0x76]
  4233c8:	les    ecx,FWORD PTR [esp+edi*4]
  4233cb:	int3   
  4233cc:	fisttp WORD PTR [ebx+0x41533d3a]
  4233d2:	inc    edi
  4233d3:	or     cl,BYTE PTR [eax+0x28]
  4233d6:	into   
  4233d7:	add    edx,DWORD PTR [esi+edx*2]
  4233da:	xchg   BYTE PTR [ecx],cl
  4233dc:	cmp    DWORD PTR ds:0x3ebc2f,0x8b2adc47
  4233e6:	xor    bh,BYTE PTR ds:0x4153
  4233ec:	inc    edi
  4233ed:	mov    ebx,0xc871149e
  4233f2:	dec    DWORD PTR [edi-0x34]
  4233f5:	add    esi,eax
  4233f7:	push   ebp
  4233f8:	xchg   BYTE PTR [ecx],cl
  4233fa:	dec    edi
  4233fb:	call   0x3f896f
  423400:	les    ecx,FWORD PTR [esp+ecx*1-0x75]
  423404:	cmp    bh,BYTE PTR ds:0xbb474153
  42340a:	out    0x49,eax
  42340c:	into   
  42340d:	push   ebp
  42340e:	std    
  42340f:	add    DWORD PTR [ebx],0xd
  423412:	jmp    0x15f6378
  423417:	inc    eax
  423418:	inc    edi
  423419:	test   al,0xfc
  42341b:	push   ebp
  42341c:	push   es
  42341d:	or     DWORD PTR [eax-0x18],edx
  423420:	adc    edx,DWORD PTR [eax-0x3]
  423423:	inc    esp
  423425:	dec    esp
  423426:	or     BYTE PTR [ecx+0xd893d02],cl
  42342c:	jnp    0x4233e9
  42342e:	ds add dh,dh
  423431:	adc    DWORD PTR [ebx-0x20],0x41533ca6
  423438:	inc    edi
  423439:	or     al,BYTE PTR [edx+0x28]
  42343c:	pop    ss
  42343d:	or     BYTE PTR [ebx],0xf0
  423440:	adc    cl,al
  423442:	call   DWORD PTR [eax+0x6f]
  423445:	and    eax,0x8958fffc
  42344a:	les    ecx,FWORD PTR [esp+edi*4]
  42344d:	sti    
  42344e:	out    dx,eax
  42344f:	push   ebp
  423450:	add    BYTE PTR [eax],al
  423452:	push   es
  423453:	or     DWORD PTR [edi-0x3e],edi
  423456:	xchg   edi,eax
  423457:	mov    eax,0xfecefffe
  42345c:	sbb    edx,DWORD PTR [esi-0x7a]
  42345f:	or     DWORD PTR [ebx+0x69ba2f45],ecx
  423465:	inc    eax
  423466:	lods   eax,DWORD PTR ds:[esi]
  423467:	or     ecx,DWORD PTR [ecx+0x3ebb3b0d]
  42346d:	add    BYTE PTR [esi+0x54],dh
  423470:	push   ebx
  423471:	aam    0x1f
  423473:	imul   edi,ecx,0xff9200ff
  423479:	inc    DWORD PTR [edi+0x9]
  42347c:	mov    ebp,esp
  42347e:	xchg   edx,eax
  42347f:	inc    edi
  423480:	add    al,0x0
  423482:	sti    
  423483:	inc    ebp
  423484:	int3   
  423485:	int3   
  423486:	adc    eax,DWORD PTR [esi-0x34]
  423489:	int3   
  42348a:	jb     0x42340c
  42348c:	in     al,dx
  42348d:	mov    ecx,DWORD PTR [edx-0x34bf76ff]
  423493:	mov    dh,0xc0
  423495:	int3   
  423496:	xchg   ebx,eax
  423497:	inc    ebp
  423498:	int3   
  423499:	int3   
  42349a:	adc    al,BYTE PTR [eax-0x43e6ac14]
  4234a0:	mov    BYTE PTR ds:0x3ebea7,bh
  4234a6:	int3   
  4234a7:	imul   bl
  4234a9:	push   ebp
  4234aa:	push   es
  4234ab:	or     DWORD PTR [ecx+0x3ebe6f35],ecx
  4234b1:	add    al,ch
  4234b3:	mov    dl,0x58
  4234b5:	pop    ebp
  4234b6:	add    BYTE PTR [eax],al
  4234b8:	test   BYTE PTR [ebp-0x34],al
  4234bb:	int3   
  4234bc:	adc    al,BYTE PTR [eax-0x3320ae14]
  4234c2:	add    BYTE PTR [eax+0x47],al
  4234c5:	stos   BYTE PTR es:[edi],al
  4234c6:	cld    
  4234c7:	push   ebp
  4234c8:	push   es
  4234c9:	or     DWORD PTR [eax-0x18],edx
  4234cc:	stos   DWORD PTR es:[edi],eax
  4234cd:	push   ecx
  4234ce:	std    
  4234cf:	inc    esp
  4234d1:	dec    ebp
  4234d2:	or     BYTE PTR [ecx+0x4d895502],cl
  4234d8:	dec    edi
  4234d9:	mov    edx,0xfdcc0069
  4234de:	pop    ss
  4234df:	push   esi
  4234e0:	xchg   BYTE PTR [ecx],cl
  4234e2:	push   edx
  4234e3:	call   DWORD PTR [edx-0x7d1a76ab]
  4234e9:	dec    eax
  4234ea:	int3   
  4234eb:	int3   
  4234ec:	jb     0x42346e
  4234ee:	in     al,dx
  4234ef:	and    DWORD PTR [ebx],0x2d
  4234f2:	lds    eax,FWORD PTR [ebp+0xf]
  4234f5:	or     DWORD PTR [eax],eax
  4234f7:	add    BYTE PTR [edi+0x4c],al
  4234fa:	inc    ebx
  4234fb:	fdivr  QWORD PTR [edi+0x9]
  4234fe:	add    BYTE PTR [eax],al
  423500:	or     dh,cl
  423502:	repz add DWORD PTR [edi+0x9],eax
  423506:	add    bh,al
  423508:	mov    dl,BYTE PTR [ebp+0x0]
  42350b:	add    BYTE PTR [edi+0x9],al
  42350e:	lds    eax,FWORD PTR [ebp-0x15]
  423511:	or     BYTE PTR [eax],al
  423513:	add    BYTE PTR [edi-0x80],al
  423516:	dec    ebx
  423517:	or     dh,cl
  423519:	add    eax,0x55f0
  42351e:	push   es
  42351f:	or     eax,ebp
  423521:	test   eax,0xa1fd53b8
  423526:	mov    bh,0xbd
  423528:	add    BYTE PTR ds:[edx+0x54],ch
  42352c:	std    
  42352d:	add    BYTE PTR [edi-0x23],al
  423530:	or     eax,edi
  423532:	dec    edx
  423533:	push   ecx
  423534:	push   ebx
  423535:	inc    ecx
  423536:	inc    edi
  423537:	or     DWORD PTR [eax],eax
  423539:	add    BYTE PTR [edi+0x60],al
  42353c:	or     al,bh
  42353e:	inc    edx
  42353f:	push   ecx
  423540:	push   ebx
  423541:	inc    ecx
  423542:	inc    edi
  423543:	or     al,BYTE PTR [eax]
  423545:	add    BYTE PTR [edi-0x78],al
  423548:	cmp    esi,eax
  42354a:	cli    
  42354b:	leave  
  42354c:	(bad)  
  42354d:	call   edx
  42354f:	inc    ah
  423551:	add    eax,0x3ebd4f
  423556:	inc    edi
  423557:	or     DWORD PTR [eax],eax
  423559:	add    ah,al
  42355b:	adc    al,0xf8
  42355d:	push   ebp
  42355e:	xchg   BYTE PTR [ecx],cl
  423560:	add    BYTE PTR [ebp+0x42],dh
  423563:	(bad)  
  423565:	(bad)  
  423566:	push   edx
  423567:	dec    ecx
  423568:	push   ebx
  423569:	inc    ecx
  42356a:	inc    edi
  42356b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42356c:	lock push ebp
  42356e:	xchg   BYTE PTR [ecx],cl
  423570:	mov    DWORD PTR ds:0x3ebd17,ecx
  423576:	mov    esi,0x5a8be7c4
  42357b:	pop    ecx
  42357c:	push   ebx
  42357d:	inc    ecx
  42357e:	inc    edi
  42357f:	jle    0x4235c4
  423581:	call   0xc7863586
  423586:	cmp    ecx,DWORD PTR [ecx+0x4d896182]
  42358c:	out    dx,eax
  42358d:	or     BYTE PTR [ebx],0xdc
  423590:	jb     0x42355a
  423592:	jmp    DWORD PTR [edi+0x77]
  423595:	push   es
  423596:	inc    eax
  423597:	add    al,cl
  423599:	cld    
  42359a:	mov    edi,0xa1090655
  42359f:	cld    
  4235a0:	adc    cl,al
  4235a2:	inc    esi
  4235a4:	dec    edx
  4235a5:	add    eax,0xdc474156
  4235aa:	add    BYTE PTR [eax+0x47],al
  4235ad:	loope  0x42360e
  4235af:	add    eax,DWORD PTR [edi]
  4235b1:	or     DWORD PTR [ecx+0x3ebc9315],ecx
  4235b7:	add    ch,dh
  4235b9:	pusha  
  4235ba:	ret    0x80f7
  4235bd:	push   edx
  4235be:	add    esp,0x5608a64f
  4235c4:	push   es
  4235c5:	or     ebp,edi
  4235c7:	adc    eax,0x3ebb3f
  4235cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235cd:	icebp  
  4235ce:	push   ebp
  4235cf:	inc    ecx
  4235d0:	inc    edi
  4235d1:	test   al,0xc
  4235d3:	push   esi
  4235d4:	push   es
  4235d5:	or     DWORD PTR [eax-0x18],edx
  4235d8:	xchg   ebx,eax
  4235d9:	push   ebx
  4235da:	std    
  4235db:	inc    esp
  4235dd:	dec    esp
  4235de:	add    al,0x89
  4235e0:	sbb    BYTE PTR [ecx-0x77],0x4d
  4235e4:	aaa    
  4235e5:	mov    eax,0xd5e7
  4235ea:	sub    DWORD PTR [edx-0x3],edx
  4235ed:	or     DWORD PTR [ebx],0xd
  4235f0:	mov    eax,ds:0xffc872f4
  4235f5:	mov    bh,BYTE PTR [edx+0x59]
  4235f8:	push   edx
  4235f9:	push   0x47
  4235fb:	test   al,0xf4
  4235fd:	push   ebp
  4235fe:	xchg   BYTE PTR [ecx],cl
  423600:	push   eax
  423601:	call   0x3f8fe1
  423606:	les    ecx,FWORD PTR [esp+ecx*1-0x75]
  42360a:	jp     0x423665
  42360c:	xchg   DWORD PTR [ebp-0x19],ecx
  42360f:	jge    0x423664
  423611:	cld    
  423612:	sbb    al,0xbc
  423614:	out    dx,eax
  423615:	jae    0x423684
  423617:	jle    0x42365c
  423619:	loopne 0x423692
  42361b:	jle    0x423668
  42361d:	fcom   QWORD PTR [esi]
  42361f:	popa   
  423620:	scas   al,BYTE PTR es:[edi]
  423621:	sti    
  423622:	mov    eax,0x3fc48151
  423627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423628:	add    BYTE PTR [esi+0x6],dl
  42362b:	or     DWORD PTR [ecx+0x3ebb4715],ecx
  423631:	add    ch,dh
  423633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423634:	or     al,0x56
  423636:	push   es
  423637:	or     DWORD PTR [ecx],eax
  423639:	inc    ebp
  42363a:	mov    ds:0x7b0d88b8,eax
  42363f:	mov    ebx,0xc444003e
  423644:	sti    
  423645:	push   ecx
  423646:	pop    edi
  423647:	cmp    edi,esi
  423649:	jmp    FWORD PTR [eax-0x7b]
  42364c:	les    ecx,FWORD PTR [eax+eax*1]
  42364f:	add    ah,cl
  423651:	mov    ebx,0x34f203f3
  423656:	add    DWORD PTR [ebp+0x6b],edx
  423659:	jg     0x4236ae
  42365b:	in     al,0xbc
  42365d:	retf   
  42365e:	sti    
  42365f:	add    ecx,DWORD PTR [edx+0x3b45872d]
  423665:	test   DWORD PTR [ebx-0x20],ecx
  423668:	pop    esp
  423669:	(bad)  
  42366a:	call   DWORD PTR [ebp-0x7a]
  42366d:	or     DWORD PTR [edi-0x619ad8b3],eax
  423673:	mov    DWORD PTR [edx+0x47000051],0xbc09e909
  42367d:	mov    dh,0xf7
  42367f:	add    DWORD PTR ds:0xff558706,0xffffff84
  423686:	inc    ebx
  423687:	clc    
  423688:	sub    al,0xc6
  42368a:	out    dx,eax
  42368b:	jae    0x4236bc
  42368d:	test   BYTE PTR [ebx],cl
  42368f:	hlt    
  423690:	jp     0x42365c
  423692:	inc    DWORD PTR [edx]
  423694:	mov    dl,BYTE PTR [ecx-0x77]
  423697:	adc    DWORD PTR [esi+esi*4-0x9],eax
  42369b:	mov    eax,ds:0x3eb6d3
  4236a0:	inc    esp
  4236a1:	(bad)  
  4236a2:	test   DWORD PTR [ecx-0x7b47ba9],0x3e74ac6
  4236ac:	inc    edi
  4236ad:	or     DWORD PTR [ecx+0x3eb69b15],ecx
  4236b3:	add    BYTE PTR [eax],al
  4236b5:	add    BYTE PTR [esi+esi*4-0x9],al
  4236b9:	xor    edi,DWORD PTR ds:0x655f4aa
  4236bf:	or     DWORD PTR [ecx],eax
  4236c1:	inc    ebp
  4236c2:	jg     0x423646
  4236c4:	or     bl,ch
  4236c6:	mov    al,0x82
  4236c8:	sub    esp,esp
  4236ca:	sbb    cl,dl
  4236cc:	dec    DWORD PTR [eax+0x4153692a]
  4236d2:	inc    edi
  4236d3:	sbb    al,0xc7
  4236d5:	mov    DWORD PTR [edx],edx
  4236d7:	xor    DWORD PTR [ebx+0x41],edx
  4236da:	inc    edi
  4236db:	sbb    al,0xc7
  4236dd:	mov    DWORD PTR [edx],ebp
  4236df:	pop    ebp
  4236e0:	push   ebx
  4236e1:	inc    ecx
  4236e2:	inc    edi
  4236e3:	popa   
  4236e4:	dec    esi
  4236e5:	idiv   DWORD PTR [eax]
  4236e7:	push   eax
  4236e8:	mov    ecx,DWORD PTR ds:0x3eb6a0
  4236ee:	mov    esi,0x47b9f7bd
  4236f3:	or     eax,DWORD PTR [eax+0x0]
  4236f6:	(bad)  
  4236f7:	popa   
  4236f8:	add    BYTE PTR [edx],al
  4236fa:	inc    edi
  4236fb:	or     DWORD PTR [ecx-0x30dbf0ab],ecx
  423701:	mov    DWORD PTR [edx+0x61],ebx
  423704:	push   ebx
  423705:	inc    ecx
  423706:	inc    edi
  423707:	stos   BYTE PTR es:[edi],al
  423708:	call   0x504bbd62
  42370d:	call   0x3f8a55
  423712:	les    eax,FWORD PTR [esp+eax*1-0x75]
  423716:	dec    edx
  423717:	push   ebp
  423718:	push   ebx
  423719:	inc    ecx
  42371a:	add    BYTE PTR [eax],al
  42371c:	inc    edi
  42371d:	mov    edx,0x4fcdd5e7
  423722:	std    
  423723:	test   DWORD PTR [edi-0x78ccfc2b],eax
  423729:	arpl   WORD PTR [edx],bp
  42372b:	mov    ebp,DWORD PTR [edx+0x65]
  42372e:	push   ebx
  42372f:	inc    ecx
  423730:	inc    edi
  423731:	mov    esp,es
  423733:	add    al,0xc4
  423735:	or     eax,0x90655f8
  42373a:	add    BYTE PTR [esi+edi*1-0x56],dh
  42373e:	aam    0x55
  423740:	push   es
  423741:	or     DWORD PTR [edi-0x17fad4bc],eax
  423747:	pop    ebp
  423748:	jp     0x423799
  42374a:	std    
  42374b:	mov    ebx,DWORD PTR [edx-0xb]
  42374e:	push   ebp
  42374f:	inc    ecx
  423750:	inc    edi
  423751:	mov    ebx,0x838733c0
  423756:	jecxz  0x4237b5
  423758:	test   BYTE PTR [esp+ecx*8],bh
  42375b:	int3   
  42375c:	inc    edi
  42375d:	or     DWORD PTR [eax],eax
  42375f:	add    BYTE PTR [edi+0x9],al
  423762:	add    BYTE PTR [eax],al
  423764:	inc    edi
  423765:	or     DWORD PTR [eax],eax
  423767:	add    BYTE PTR [edi+0x9],al
  42376a:	add    BYTE PTR [eax],al
  42376c:	inc    edi
  42376d:	or     DWORD PTR [eax],eax
  42376f:	add    BYTE PTR [edi+0x9],al
  423772:	add    BYTE PTR [eax],al
  423774:	inc    edi
  423775:	or     DWORD PTR [eax],eax
  423777:	add    BYTE PTR [edi+0x9],al
  42377a:	add    BYTE PTR [eax],al
  42377c:	inc    edi
  42377d:	or     DWORD PTR [eax],eax
  42377f:	add    BYTE PTR [eax],al
  423781:	add    BYTE PTR [edi+0x9],al
  423784:	add    BYTE PTR [eax],al
  423786:	inc    edi
  423787:	or     DWORD PTR [eax],eax
  423789:	add    BYTE PTR [edi+0x9],al
  42378c:	add    BYTE PTR [eax],al
  42378e:	inc    edi
  42378f:	or     DWORD PTR [eax],eax
  423791:	add    BYTE PTR [edi+0x9],al
  423794:	add    BYTE PTR [eax],al
  423796:	inc    edi
  423797:	or     DWORD PTR [eax],eax
  423799:	add    BYTE PTR [edi+0x9],al
  42379c:	add    BYTE PTR [eax],al
  42379e:	inc    edi
  42379f:	or     DWORD PTR [eax],eax
  4237a1:	add    BYTE PTR [edi+0x9],al
  4237a4:	add    BYTE PTR [eax],al
  4237a6:	inc    edi
  4237a7:	or     DWORD PTR [eax],eax
  4237a9:	add    BYTE PTR [edi+0x9],al
  4237ac:	add    BYTE PTR [eax],al
  4237ae:	inc    edi
  4237af:	or     DWORD PTR [eax],eax
  4237b1:	add    BYTE PTR [edi+0x9],al
  4237b4:	add    BYTE PTR [eax],al
  4237b6:	inc    edi
  4237b7:	or     DWORD PTR [eax],eax
  4237b9:	add    BYTE PTR [edi+0x9],al
  4237bc:	add    BYTE PTR [eax],al
  4237be:	inc    edi
  4237bf:	or     DWORD PTR [eax],eax
  4237c1:	add    BYTE PTR [edi+0x9],al
  4237c4:	add    BYTE PTR [eax],al
  4237c6:	inc    edi
  4237c7:	or     DWORD PTR [eax],eax
  4237c9:	add    BYTE PTR [edi+0x9],al
  4237cc:	add    BYTE PTR [eax],al
  4237ce:	inc    edi
  4237cf:	or     DWORD PTR [eax],eax
  4237d1:	add    BYTE PTR [edi+0x9],al
  4237d4:	add    BYTE PTR [eax],al
  4237d6:	inc    edi
  4237d7:	or     DWORD PTR [eax],eax
  4237d9:	add    BYTE PTR [edi+0x9],al
  4237dc:	add    BYTE PTR [eax],al
  4237de:	inc    edi
  4237df:	or     DWORD PTR [eax],eax
  4237e1:	add    BYTE PTR [edi+0x9],al
  4237e4:	add    BYTE PTR [eax],al
  4237e6:	add    BYTE PTR [eax],al
  4237e8:	inc    edi
  4237e9:	or     DWORD PTR [eax],eax
  4237eb:	add    BYTE PTR [edi+0x9],al
  4237ee:	add    BYTE PTR [eax],al
  4237f0:	inc    edi
  4237f1:	or     DWORD PTR [eax],eax
  4237f3:	add    BYTE PTR [edi+0x9],al
  4237f6:	add    BYTE PTR [eax],al
  4237f8:	inc    edi
  4237f9:	or     DWORD PTR [eax],eax
  4237fb:	add    BYTE PTR [edi+0x9],al
  4237fe:	add    BYTE PTR [eax],al
  423800:	inc    edi
  423801:	or     DWORD PTR [eax],eax
  423803:	add    BYTE PTR [edi+0x9],al
  423806:	add    BYTE PTR [eax],al
  423808:	inc    edi
  423809:	or     DWORD PTR [eax],eax
  42380b:	add    BYTE PTR [edi+0x9],al
  42380e:	add    BYTE PTR [eax],al
  423810:	inc    edi
  423811:	or     DWORD PTR [eax],eax
  423813:	add    BYTE PTR [edi+0x9],al
  423816:	add    BYTE PTR [eax],al
  423818:	inc    edi
  423819:	or     DWORD PTR [eax],eax
  42381b:	add    BYTE PTR [edi+0x9],al
  42381e:	add    BYTE PTR [eax],al
  423820:	inc    edi
  423821:	or     DWORD PTR [eax],eax
  423823:	add    BYTE PTR [edi+0x9],al
  423826:	add    BYTE PTR [eax],al
  423828:	inc    edi
  423829:	or     DWORD PTR [eax],eax
  42382b:	add    BYTE PTR [edi+0x9],al
  42382e:	add    BYTE PTR [eax],al
  423830:	inc    edi
  423831:	or     DWORD PTR [eax],eax
  423833:	add    BYTE PTR [edi+0x9],al
  423836:	add    BYTE PTR [eax],al
  423838:	inc    edi
  423839:	or     DWORD PTR [eax],eax
  42383b:	add    BYTE PTR [edi+0x9],al
  42383e:	add    BYTE PTR [eax],al
  423840:	inc    edi
  423841:	or     DWORD PTR [eax],eax
  423843:	add    BYTE PTR [edi+0x9],al
  423846:	add    BYTE PTR [eax],al
  423848:	inc    edi
  423849:	or     DWORD PTR [eax],eax
  42384b:	add    BYTE PTR [eax],al
  42384d:	add    BYTE PTR [edi+0x9],al
  423850:	add    BYTE PTR [eax],al
  423852:	inc    edi
  423853:	or     DWORD PTR [eax],eax
  423855:	add    BYTE PTR [edi+0x9],al
  423858:	add    BYTE PTR [eax],al
  42385a:	inc    edi
  42385b:	or     DWORD PTR [eax],eax
  42385d:	add    BYTE PTR [edi+0x9],al
  423860:	add    BYTE PTR [eax],al
  423862:	inc    edi
  423863:	or     DWORD PTR [eax],eax
  423865:	add    BYTE PTR [edi+0x9],al
  423868:	add    BYTE PTR [eax],al
  42386a:	inc    edi
  42386b:	or     DWORD PTR [eax],eax
  42386d:	add    BYTE PTR [edi+0x9],al
  423870:	add    BYTE PTR [eax],al
  423872:	inc    edi
  423873:	or     DWORD PTR [eax],eax
  423875:	add    BYTE PTR [edi+0x9],al
  423878:	add    BYTE PTR [eax],al
  42387a:	inc    edi
  42387b:	or     DWORD PTR [eax],eax
  42387d:	add    BYTE PTR [edi+0x9],al
  423880:	add    BYTE PTR [eax],al
  423882:	inc    edi
  423883:	or     DWORD PTR [eax],eax
  423885:	add    BYTE PTR [edi+0x9],al
  423888:	add    BYTE PTR [eax],al
  42388a:	inc    edi
  42388b:	or     DWORD PTR [eax],eax
  42388d:	add    BYTE PTR [edi+0x9],al
  423890:	add    BYTE PTR [eax],al
  423892:	inc    edi
  423893:	or     DWORD PTR [eax],eax
  423895:	add    BYTE PTR [edi+0x9],al
  423898:	add    BYTE PTR [eax],al
  42389a:	inc    edi
  42389b:	or     DWORD PTR [eax],eax
  42389d:	add    BYTE PTR [edi+0x9],al
  4238a0:	add    BYTE PTR [eax],al
  4238a2:	inc    edi
  4238a3:	or     DWORD PTR [eax],eax
  4238a5:	add    BYTE PTR [edi+0x9],al
  4238a8:	add    BYTE PTR [eax],al
  4238aa:	inc    edi
  4238ab:	or     DWORD PTR [eax],eax
  4238ad:	add    bh,bh
  4238af:	and    eax,0x424100
  4238b4:	jmp    DWORD PTR ds:0x424104
  4238ba:	jmp    DWORD PTR ds:0x424108
  4238c0:	jmp    DWORD PTR ds:0x42410c
  4238c6:	jmp    DWORD PTR ds:0x424114
