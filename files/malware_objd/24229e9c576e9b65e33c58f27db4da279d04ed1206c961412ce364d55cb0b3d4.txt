
24229e9c576e9b65e33c58f27db4da279d04ed1206c961412ce364d55cb0b3d4.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	add    dl,ch
  411002:	test   BYTE PTR [eax],ch
  411004:	into   
  411005:	and    cl,BYTE PTR [ebx-0x2290fd5d]
  41100b:	lods   al,BYTE PTR ds:[esi]
  41100c:	jp     0x410f8e
  41100e:	xchg   edx,eax
  41100f:	ficom  DWORD PTR [edi]
  411011:	jae    0x411078
  411013:	and    bh,cl
  411015:	xor    BYTE PTR ds:0xf749158c,bh
  41101b:	rcl    BYTE PTR [esi+ebx*8-0x4a3b285a],cl
  411022:	loope  0x410fb5
  411024:	ds and eax,0xc410bec2
  41102a:	push   ebx
  41102b:	pop    ss
  41102c:	mov    cl,0xa3
  41102e:	test   BYTE PTR [esi],ah
  411030:	enter  0x5233,0x8e
  411034:	or     eax,0xfe8daceb
  411039:	ret    
  41103a:	adc    cl,BYTE PTR [eax]
  41103c:	jnp    0x411077
  41103e:	pushf  
  41103f:	jg     0x410ff8
  411041:	xchg   DWORD PTR ds:[eax+0x3a5f0f4a],esi
  411048:	pop    edx
  411049:	ret    
  41104a:	mov    cl,0x46
  41104c:	mov    ebp,edi
  41104e:	fstp   DWORD PTR [ebx]
  411050:	pop    ecx
  411051:	test   BYTE PTR [esi],al
  411053:	mov    edx,0x7b564159
  411058:	pop    ss
  411059:	nop
  41105a:	xor    bl,0xe8
  41105d:	push   ebx
  41105e:	push   ds
  41105f:	mov    BYTE PTR ss:[eax],dh
  411062:	sub    BYTE PTR [edi+ebx*2],dh
  411065:	cdq    
  411066:	adc    DWORD PTR [ebp+0x7a],ebp
  411069:	loope  0x411049
  41106b:	pop    ss
  41106c:	pusha  
  41106d:	aad    0xcf
  41106f:	xchg   ecx,eax
  411070:	mov    ds:0x8a127cfd,eax
  411075:	jecxz  0x41102b
  411077:	or     eax,0x5ffabd53
  41107c:	jmp    0x2c7e:0xb046b1eb
  411083:	inc    ebp
  411084:	popa   
  411085:	cmp    eax,0xf778fc0e
  41108a:	dec    ebx
  41108b:	adc    DWORD PTR [esi+0x5f],ecx
  41108e:	sub    esi,DWORD PTR ds:0x614ca09c
  411094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411095:	fwait
  411096:	jmp    0x5f43fe5e
  41109b:	aam    0x56
  41109d:	pusha  
  41109e:	or     eax,0x9722ad8f
  4110a3:	cmp    ch,dl
  4110a5:	icebp  
  4110a6:	ja     0x4110f6
  4110a8:	sbb    DWORD PTR [ebp+ebp*1-0x46],edi
  4110ac:	push   cs
  4110ad:	pop    ss
  4110ae:	popa   
  4110af:	sti    
  4110b0:	gs scas al,BYTE PTR es:[edi]
  4110b2:	stos   DWORD PTR es:[edi],eax
  4110b3:	sti    
  4110b4:	add    eax,0x20cadc49
  4110b9:	push   ebx
  4110ba:	adc    al,0xed
  4110bc:	repnz or eax,0xfa6e0db2
  4110c2:	mov    ah,0x92
  4110c4:	and    ebp,DWORD PTR [edx-0x10]
  4110c7:	dec    edx
  4110c8:	dec    eax
  4110c9:	cwde   
  4110ca:	push   esi
  4110cb:	test   bl,0xe0
  4110ce:	pop    eax
  4110cf:	fistp  QWORD PTR [ecx]
  4110d1:	shr    BYTE PTR [eax+0x1d92892a],1
  4110d7:	loop   0x41106b
  4110d9:	add    dl,al
  4110db:	lods   al,BYTE PTR ds:[esi]
  4110dc:	jmp    0xdb49:0x2414506f
  4110e3:	mov    dl,0x74
  4110e5:	jmp    ebx
  4110e7:	je     0x41110b
  4110e9:	(bad)  
  4110ea:	shl    BYTE PTR [ecx-0x6e],1
  4110ed:	inc    esp
  4110ee:	jmp    0x411123
  4110f0:	imul   DWORD PTR [edx+0x6861d40e]
  4110f6:	mov    eax,?
  4110f8:	cmp    eax,0x89bd322b
  4110fd:	in     al,dx
  4110fe:	aam    0xcb
  411100:	push   esi
  411101:	xchg   esp,ecx
  411103:	xchg   esp,eax
  411104:	ds lahf 
  411106:	xor    al,bl
  411108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411109:	fs (bad) 
  41110b:	ins    DWORD PTR es:[edi],dx
  41110c:	fdivp  st(3),st
  41110e:	pop    gs
  411110:	and    eax,DWORD PTR [edx+esi*2]
  411113:	loop   0x411175
  411115:	inc    esp
  411116:	inc    esp
  411117:	add    al,0xb6
  411119:	fwait
  41111a:	xchg   esp,eax
  41111b:	jp     0x4110f3
  41111d:	in     al,dx
  41111e:	push   ecx
  41111f:	in     eax,dx
  411120:	adc    dl,BYTE PTR [esi+0x740ec7a6]
  411126:	pop    esi
  411127:	das    
  411128:	cld    
  411129:	pop    esp
  41112a:	repnz xor BYTE PTR [ecx-0x78ca62f1],bl
  411131:	imul   ecx,DWORD PTR [ecx+eax*8+0x48],0x3d
  411136:	jbe    0x41117c
  411138:	sub    DWORD PTR [ebx+0x60],0xad1e1f46
  41113f:	jne    0x41111c
  411141:	(bad)  
  411142:	push   ds
  411143:	les    edx,FWORD PTR [edi+0x3b]
  411146:	idiv   BYTE PTR [esi+ebx*1-0x283ddff1]
  41114d:	out    dx,eax
  41114e:	xchg   edi,eax
  41114f:	test   eax,0x50de88ea
  411154:	sub    edi,DWORD PTR [ebp+0x3b170657]
  41115a:	aaa    
  41115b:	imul   edx,DWORD PTR [edx+ebx*2],0x5c9d65b6
  411162:	lock xchg ebx,eax
  411164:	adc    al,al
  411166:	aas    
  411167:	cmc    
  411168:	out    dx,al
  411169:	sub    eax,0x94f54d07
  41116e:	adc    DWORD PTR [esi-0x7f7a3ab0],esi
  411174:	popa   
  411175:	pusha  
  411176:	mov    ds:0x3d5c70a4,eax
  41117b:	add    BYTE PTR [ecx],0xd9
  41117e:	(bad)  
  411180:	xor    esi,esi
  411182:	sub    DWORD PTR [edi-0x66fd009a],edx
  411188:	lock push cs
  41118a:	sbb    al,0xc4
  41118c:	lea    edx,[edi*4-0x415cf7f]
  411193:	and    cl,BYTE PTR [ebp+0x4206b758]
  411199:	test   ah,cl
  41119b:	inc    ebx
  41119c:	(bad)  
  41119e:	sbb    BYTE PTR [ebx+0x7bb12a6e],cl
  4111a4:	xchg   bh,ch
  4111a6:	xchg   BYTE PTR [esi-0x43],al
  4111a9:	scas   eax,DWORD PTR es:[edi]
  4111aa:	adc    DWORD PTR [ebx-0x5185d854],esp
  4111b0:	mov    ebx,0xee116b7
  4111b5:	sbb    al,0x6
  4111b7:	imul   ecx,DWORD PTR [edi+0x1d],0xc48606e2
  4111be:	idiv   ah
  4111c0:	test   DWORD PTR [ecx+0x21],ebp
  4111c3:	xchg   ebx,eax
  4111c4:	mov    cl,BYTE PTR ds:0xc9125c39
  4111ca:	mov    ds:0xf902c18b,eax
  4111cf:	xor    eax,0x769c1d13
  4111d4:	pop    es
  4111d5:	(bad)  
  4111d6:	xchg   DWORD PTR [eax+0x5e66c8d6],eax
  4111dc:	mov    ?,ebp
  4111de:	and    DWORD PTR [ebp+0xcdcf0bd],esi
  4111e4:	int3   
  4111e5:	cmp    cl,BYTE PTR [esi+0x1caa162f]
  4111eb:	out    dx,eax
  4111ec:	xlat   BYTE PTR ds:[ebx]
  4111ed:	popf   
  4111ee:	enter  0x4b00,0x2f
  4111f2:	or     eax,0xf16f5546
  4111f7:	mov    ch,0x26
  4111f9:	cmp    BYTE PTR [edi+esi*4],al
  4111fc:	out    0x5b,al
  4111fe:	xor    eax,0x64eea206
  411203:	and    eax,0xbc959154
  411208:	fadd   DWORD PTR [ebp+0x34ee708e]
  41120e:	mov    bh,0xfe
  411210:	scas   al,BYTE PTR es:[edi]
  411211:	mov    ?,edx
  411213:	sti    
  411214:	dec    ecx
  411215:	adc    al,0x39
  411217:	sub    ecx,edx
  411219:	inc    ebx
  41121a:	and    eax,0x50c609a7
  41121f:	jno    0x4111d5
  411221:	push   0x13
  411223:	inc    ebp
  411224:	jno    0x41124e
  411226:	sahf   
  411227:	arpl   WORD PTR [edi],dx
  411229:	add    eax,0x7767f381
  41122e:	popa   
  41122f:	test   al,0x4
  411231:	in     eax,dx
  411232:	dec    esi
  411233:	aad    0x76
  411235:	cmovb  edi,DWORD PTR [edi-0x53fe2b9]
  41123c:	imul   ebx,DWORD PTR [edi-0x17],0x54
  411240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411241:	dec    ebp
  411242:	dec    ebp
  411243:	fwait
  411244:	(bad)  
  411245:	and    ch,BYTE PTR [eax-0x5e]
  411248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411249:	fild   WORD PTR [edx+0x4a]
  41124c:	loope  0x41122b
  41124e:	jmp    0x40d9:0x754d087f
  411255:	inc    edx
  411256:	xlat   BYTE PTR ds:[ebx]
  411257:	jb     0x4111f9
  411259:	inc    eax
  41125a:	mov    edi,0x47a1e85d
  41125f:	shr    DWORD PTR [ebx+0x32],1
  411262:	fmul   DWORD PTR [edi-0x33]
  411265:	mov    ss,ecx
  411267:	xchg   esi,eax
  411268:	mov    bh,0x61
  41126a:	push   edi
  41126b:	add    dl,BYTE PTR [eax]
  41126d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41126e:	cmp    DWORD PTR [edx],edi
  411270:	jge    0x4112b2
  411272:	inc    edx
  411273:	jge    0x411208
  411275:	inc    ebx
  411276:	and    BYTE PTR [ecx],bh
  411278:	data16 adc BYTE PTR [ebp-0x6e],dl
  41127c:	fstp   TBYTE PTR [ebx-0x14084019]
  411282:	push   cs
  411283:	xor    DWORD PTR [esi+0xf2e38ad],0x47ca6b71
  41128d:	ins    BYTE PTR es:[edi],dx
  41128e:	xlat   BYTE PTR ds:[ebx]
  41128f:	lods   eax,DWORD PTR ds:[esi]
  411290:	and    eax,DWORD PTR [ebx]
  411292:	fsubp  st(4),st
  411294:	jb     0x411243
  411296:	out    0x3a,al
  411298:	push   eax
  411299:	shl    BYTE PTR ds:0xfd96abb8,cl
  41129f:	jns    0x411240
  4112a1:	adc    DWORD PTR [ebp+0x7b],edi
  4112a4:	ret    0x3abc
  4112a7:	push   cs
  4112a8:	sub    esp,edx
  4112aa:	and    ah,dl
  4112ac:	fsub   QWORD PTR [edi+0x223be265]
  4112b2:	and    cl,0xf6
  4112b5:	outs   dx,BYTE PTR ds:[esi]
  4112b6:	or     eax,0x4fd394df
  4112bb:	jmp    0x6bae:0x4701d05b
  4112c2:	dec    edi
  4112c3:	rcr    DWORD PTR [ebp-0x6e],1
  4112c6:	pop    ds
  4112c7:	pop    es
  4112c8:	dec    esp
  4112c9:	lds    edx,FWORD PTR [ebx-0x58e267ca]
  4112cf:	mov    esp,0xfe51a059
  4112d4:	cmp    bl,BYTE PTR [esi]
  4112d6:	cmp    DWORD PTR [ebx-0x46f572d],eax
  4112dc:	xchg   DWORD PTR [ebp-0x54],ebx
  4112df:	adc    eax,0x738dc836
  4112e4:	adc    eax,0xc585f804
  4112e9:	(bad)  
  4112ea:	fist   DWORD PTR [esi-0xf]
  4112ed:	je     0x4112b1
  4112ef:	ins    BYTE PTR es:[edi],dx
  4112f0:	call   0xa0b8:0xc14316e9
  4112f7:	int    0xfa
  4112f9:	ror    cl,cl
  4112fb:	ret    0xd8d7
  4112fe:	jecxz  0x41136e
  411300:	and    DWORD PTR [esi-0x2b],ebx
  411303:	imul   BYTE PTR [eax-0x71]
  411306:	jbe    0x41134f
  411308:	pop    esi
  411309:	sbb    esi,DWORD PTR [edx+0x7a]
  41130c:	sbb    esi,ebx
  41130e:	mov    bl,BYTE PTR [edx-0x5e]
  411311:	mov    BYTE PTR [ebx+0x63],cl
  411314:	dec    eax
  411315:	sub    DWORD PTR [eax+edi*1+0x46],ecx
  411319:	dec    edi
  41131a:	cdq    
  41131b:	daa    
  41131c:	outs   dx,BYTE PTR ds:[esi]
  41131d:	fisttp DWORD PTR [edx]
  41131f:	loop   0x4112e3
  411321:	fld    QWORD PTR [ebx-0xf]
  411324:	mov    ah,0x49
  411326:	add    bl,BYTE PTR [edx-0x18]
  411329:	std    
  41132a:	(bad)  
  41132b:	mov    cl,0x95
  41132d:	cmp    DWORD PTR [edx],ebp
  41132f:	ja     0x4112ba
  411331:	nop
  411332:	mov    bh,0xa3
  411334:	ins    DWORD PTR es:[edi],dx
  411335:	dec    edi
  411336:	xchg   edx,eax
  411337:	sub    eax,0x124daa8d
  41133c:	test   eax,0x98917833
  411341:	icebp  
  411342:	inc    edx
  411343:	pop    esi
  411344:	inc    esi
  411345:	sbb    BYTE PTR [edi],ch
  411347:	xor    al,0x9c
  411349:	push   esp
  41134a:	jmp    0x411392
  41134c:	jp     0x41133c
  41134e:	xor    bl,BYTE PTR [ebx]
  411350:	mov    BYTE PTR [ecx-0x58],dl
  411353:	dec    ebx
  411354:	ss push 0x687495dc
  41135a:	(bad)  
  41135b:	test   al,0x1
  41135d:	jmp    0xa440d809
  411362:	int    0xf9
  411364:	cmp    DWORD PTR [ebx+0x4aa0eb2d],ecx
  41136a:	adc    edi,DWORD PTR [ebx]
  41136c:	pop    ss
  41136d:	inc    ecx
  41136e:	into   
  41136f:	add    edx,0x33083305
  411375:	in     al,dx
  411376:	or     BYTE PTR [ecx+edx*8-0x1c],0xcb
  41137b:	out    dx,al
  41137c:	imul   edi,DWORD PTR [ecx],0x2b
  41137f:	mov    ch,0xd0
  411381:	xor    ebp,DWORD PTR ds:0x9dda11a
  411387:	fcomp  QWORD PTR [esi-0x3d]
  41138a:	mov    ss,WORD PTR [edx]
  41138c:	add    edi,ebp
  41138e:	mov    bh,BYTE PTR [eax+0x72f72ac]
  411394:	pop    ebx
  411395:	jbe    0x4113d0
  411397:	dec    eax
  411398:	fstp   DWORD PTR ds:0xa03f55d4
  41139e:	sub    al,dh
  4113a0:	in     al,dx
  4113a1:	loopne 0x41140c
  4113a3:	cdq    
  4113a4:	xchg   BYTE PTR [ebp+0x1],ch
  4113a7:	and    al,BYTE PTR [esi+0x35]
  4113aa:	pop    ebx
  4113ab:	stos   DWORD PTR es:[edi],eax
  4113ac:	call   0x46e21683
  4113b1:	jo     0x4113b9
  4113b3:	xor    eax,0x13208af2
  4113b8:	or     bh,BYTE PTR [eax-0x47]
  4113bb:	jp     0x4113b7
  4113bd:	out    dx,eax
  4113be:	nop
  4113bf:	add    DWORD PTR [esp+ebp*2-0x534e2b75],ecx
  4113c6:	pop    edi
  4113c7:	mov    eax,0x2e3273cc
  4113cc:	add    al,dh
  4113ce:	mov    WORD PTR [esp+eax*8-0x2335d171],fs
  4113d5:	retf   
  4113d6:	pusha  
  4113d7:	cwde   
  4113d8:	cld    
  4113d9:	loop   0x411426
  4113db:	jae    0x41143d
  4113dd:	lods   al,BYTE PTR ds:[esi]
  4113de:	mov    dh,0x78
  4113e0:	retf   
  4113e1:	add    cl,BYTE PTR ds:0x195a34d2
  4113e7:	js     0x41137c
  4113e9:	dec    eax
  4113ea:	rol    BYTE PTR [ebp+0x66],0x6c
  4113ee:	cmp    ebx,DWORD PTR [edx-0x37]
  4113f1:	cs jl  0x4113bb
  4113f4:	push   ebp
  4113f5:	dec    esi
  4113f6:	cdq    
  4113f7:	add    eax,0x216eed37
  4113fc:	mov    ah,0xae
  4113fe:	adc    al,0x55
  411400:	pop    ebx
  411401:	adc    ecx,DWORD PTR [eax+edx*4+0x6c2d281a]
  411408:	imul   ebp,DWORD PTR [ecx],0x781ed49
  41140e:	jmp    0xf1e9:0x69ef2d01
  411415:	jmp    0x80724a01
  41141a:	fstp   TBYTE PTR ss:[ebx]
  41141d:	push   0xbb4213c2
  411422:	dec    ecx
  411423:	imul   esi,eax,0x1f
  411426:	mov    esi,0x10d5c657
  41142b:	or     bh,BYTE PTR [ebx]
  41142d:	fnstsw WORD PTR [edx+0x5]
  411430:	jno    0x411488
  411432:	add    DWORD PTR [ebx+ebp*1],ebp
  411435:	adc    al,BYTE PTR [eax+0x28303b29]
  41143b:	and    al,BYTE PTR [edx+ecx*2+0x60]
  41143f:	in     al,0x18
  411441:	xchg   ebx,eax
  411442:	rol    eax,cl
  411444:	dec    edx
  411445:	shr    BYTE PTR [esi-0x1c],0x32
  411449:	pop    esp
  41144a:	adc    esp,DWORD PTR [eax-0x13]
  41144d:	outs   dx,DWORD PTR ds:[esi]
  41144e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41144f:	(bad)  
  411450:	int3   
  411451:	lea    ebx,[esi]
  411453:	inc    eax
  411454:	xor    eax,eax
  411456:	std    
  411457:	retf   
  411458:	popf   
  411459:	clc    
  41145a:	ins    DWORD PTR es:[edi],dx
  41145b:	cld    
  41145c:	xor    al,BYTE PTR [edx]
  41145e:	mov    eax,ds:0x7f9ca4c2
  411463:	dec    ebp
  411464:	jne    0x4113eb
  411466:	and    eax,0xe992b485
  41146b:	mov    ch,BYTE PTR [ebp+esi*1-0xa]
  41146f:	retf   
  411470:	(bad)  
  411471:	mov    ah,0xc1
  411473:	xlat   BYTE PTR ds:[bx]
  411475:	xor    dh,BYTE PTR [esi+edi*4-0x4ae76d3b]
  41147c:	fwait
  41147d:	fs push esi
  41147f:	dec    ecx
  411480:	in     al,0x9d
  411482:	pusha  
  411483:	mov    esp,0xf30827e
  411488:	in     al,dx
  411489:	or     DWORD PTR [ecx],esp
  41148b:	test   eax,0x8254cc79
  411490:	fidiv  DWORD PTR [eax+edx*2+0x6fb29f59]
  411497:	sbb    ch,bh
  411499:	imul   edi,DWORD PTR [eax+eax*2],0xffffffa3
  41149d:	mov    ebp,0x4f0e7a35
  4114a2:	xchg   ecx,eax
  4114a3:	and    al,BYTE PTR [eax-0xb0466e5]
  4114a9:	sbb    BYTE PTR [esp+ebp*1-0x2e],0x3
  4114ae:	mov    al,ds:0x936e4834
  4114b3:	mov    ds:0x58c06de6,al
  4114b8:	inc    edx
  4114b9:	mov    edx,DWORD PTR [edx]
  4114bb:	mov    es,WORD PTR [ecx+0x62]
  4114be:	pop    ss
  4114bf:	cmp    edx,edi
  4114c1:	adc    BYTE PTR [edx],bl
  4114c3:	dec    esp
  4114c4:	scas   al,BYTE PTR es:[edi]
  4114c5:	push   es
  4114c6:	or     eax,0x60b4ad17
  4114cb:	(bad)  
  4114cc:	out    0x69,eax
  4114ce:	cmp    eax,0x33
  4114d1:	mov    ecx,0x811754b8
  4114d6:	mulps  xmm2,XMMWORD PTR [edi-0x4ab61f5c]
  4114dd:	adc    dl,al
  4114df:	lods   eax,DWORD PTR ds:[esi]
  4114e0:	or     edx,edx
  4114e2:	pusha  
  4114e3:	sub    esi,DWORD PTR [ebp+0xb]
  4114e6:	mov    ebx,0xf6345c06
  4114eb:	jp     0x411550
  4114ed:	lock call 0xa47b:0xcb5954e
  4114f5:	xor    BYTE PTR [eax+ebp*4-0x7],0xf6
  4114fa:	add    di,WORD PTR [edi]
  4114fd:	in     al,dx
  4114fe:	pop    edx
  4114ff:	cmp    BYTE PTR [edx-0x364c1f75],bh
  411505:	add    DWORD PTR [ebx+ecx*1+0x38],eax
  411509:	mov    al,0x60
  41150b:	add    bl,BYTE PTR [esi+ebp*4+0x3b]
  41150f:	sub    al,0xd7
  411511:	out    dx,eax
  411512:	fnstenv [eax]
  411514:	and    edi,edi
  411516:	and    ebx,DWORD PTR [ecx-0x4ee2aa19]
  41151c:	xchg   esi,eax
  41151d:	jle    0x4114bd
  41151f:	inc    ecx
  411520:	adc    al,0xa4
  411522:	cmp    dh,ch
  411524:	sbb    eax,0x63b5b9f
  411529:	push   ebp
  41152a:	mov    dh,0x61
  41152c:	in     al,0xb9
  41152e:	mov    edx,0xa9d45f2d
  411533:	not    DWORD PTR [edx]
  411535:	mov    cs,WORD PTR [eax]
  411537:	(bad)  
  411539:	mul    esp
  41153b:	mov    dh,0x24
  41153d:	xchg   ecx,eax
  41153e:	pop    ecx
  41153f:	mov    ecx,0x78559dac
  411544:	adc    esp,DWORD PTR [edi-0x25]
  411547:	rol    BYTE PTR [eax+0x40],cl
  41154a:	push   ebx
  41154b:	out    0xec,eax
  41154d:	cmp    BYTE PTR [edx+0x58ed172b],al
  411553:	ds stos BYTE PTR es:[edi],al
  411555:	gs push es
  411557:	inc    esp
  411558:	pop    ebp
  411559:	xchg   esi,eax
  41155a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41155b:	repnz pop ecx
  41155d:	xor    DWORD PTR [edx-0x55e50f4d],0xffffffb5
  411564:	aas    
  411565:	imul   edi,DWORD PTR [esi],0x72ceba75
  41156b:	(bad)  
  41156c:	lods   al,BYTE PTR ds:[esi]
  41156e:	sbb    al,0xb2
  411570:	push   ss
  411571:	xchg   edx,eax
  411572:	jno    0x411509
  411574:	mov    cl,0x72
  411576:	shl    DWORD PTR [ebx-0x6345314d],cl
  41157c:	icebp  
  41157d:	mov    ch,0x3
  41157f:	mul    ecx
  411581:	ror    DWORD PTR [ebx+0x51],0x71
  411585:	hlt    
  411586:	fsubrp st(6),st
  411588:	mov    edi,0x68d14983
  41158d:	mov    BYTE PTR [esp+esi*4-0x27],ch
  411591:	pop    ebp
  411592:	jbe    0x41159d
  411594:	jg     0x411519
  411596:	adc    ebp,DWORD PTR [edi-0x3762301]
  41159c:	and    DWORD PTR [ebx],edx
  41159e:	jae    0x41160a
  4115a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a1:	(bad)  
  4115a2:	ret    0x157a
  4115a5:	inc    ebp
  4115a6:	(bad)  
  4115a7:	xchg   edi,eax
  4115a8:	aas    
  4115a9:	add    dh,dl
  4115ab:	add    eax,0xf2ae0a03
  4115b0:	lods   eax,DWORD PTR ds:[esi]
  4115b1:	add    eax,0xb0fb0c9b
  4115b6:	loopne 0x41153b
  4115b8:	dec    eax
  4115b9:	xor    al,0x50
  4115bb:	xor    ah,dh
  4115bd:	loope  0x411567
  4115bf:	mov    edi,0x361fb9aa
  4115c4:	hlt    
  4115c5:	dec    ebp
  4115c6:	add    ebp,ebx
  4115c8:	sub    bh,0x15
  4115cb:	or     DWORD PTR [ebx-0x326b94be],edx
  4115d1:	mov    WORD PTR [ebp+0x244d40c],?
  4115d7:	cwde   
  4115d8:	xor    al,0x1
  4115da:	sub    ah,dl
  4115dc:	mov    ecx,DWORD PTR [edx-0x77]
  4115df:	ret    
  4115e0:	add    al,0x25
  4115e2:	mov    bl,cl
  4115e4:	sbb    BYTE PTR [edi],0x81
  4115e7:	int3   
  4115e8:	sbb    bl,BYTE PTR [ecx+0x539426d]
  4115ee:	shl    esi,1
  4115f0:	adc    DWORD PTR [edi],edi
  4115f2:	or     eax,0xc59d437a
  4115f7:	mov    al,ch
  4115f9:	pop    edi
  4115fa:	ret    0x7b73
  4115fd:	call   DWORD PTR [ebx+0x48]
  411600:	xchg   esi,eax
  411601:	jnp    0x1a90ffeb
  411607:	jmp    0x9430:0x1d30f275
  41160e:	jmp    0x55d0:0x92a2120
  411615:	xchg   BYTE PTR [edx+0x58920f50],bl
  41161b:	out    dx,eax
  41161c:	sbb    al,0x9a
  41161e:	adc    esi,DWORD PTR [edx+0x38]
  411621:	adc    eax,DWORD PTR [eax+0x417caaf6]
  411627:	into   
  411628:	sti    
  411629:	ja     0x4115bb
  41162b:	out    dx,al
  41162c:	fnsave [ecx+eax*8+0x2c]
  411630:	dec    eax
  411631:	shl    DWORD PTR [esi+eax*1],0x33
  411635:	mov    BYTE PTR [edi-0xe060cab],bl
  41163b:	push   edx
  41163c:	and    al,BYTE PTR [edi]
  41163e:	mov    al,ds:0x47852245
  411643:	lahf   
  411644:	adc    eax,0xf3f18a67
  411649:	mov    esp,0x3c095cc0
  41164e:	cli    
  41164f:	out    dx,eax
  411650:	cmc    
  411651:	adc    eax,0x10e2a7fb
  411656:	fcom   QWORD PTR ds:0x52020aae
  41165c:	imul   edi,DWORD PTR [ebx],0x70754545
  411662:	test   al,0x59
  411664:	sbb    BYTE PTR [ebx],bl
  411666:	sbb    al,0xee
  411668:	jo     0x41162b
  41166a:	out    0x40,eax
  41166c:	rol    BYTE PTR [eax+esi*2+0x6b],0xa8
  411671:	fbstp  TBYTE PTR [esi+edx*8-0x684b2acb]
  411678:	pop    ebx
  411679:	xchg   edi,eax
  41167a:	(bad)  
  41167c:	inc    eax
  41167d:	cdq    
  41167e:	jb     0x4116ed
  411680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411681:	ja     0x411620
  411683:	jno    0x4116c1
  411685:	and    al,cl
  411687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411688:	jne    0x41162a
  41168a:	jge    0x4116b4
  41168c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41168d:	stc    
  41168e:	out    dx,al
  41168f:	(bad)  
  411691:	mov    ch,dh
  411693:	jne    0x411661
  411695:	rcr    esi,0x5e
  411698:	adc    cl,bh
  41169a:	mov    edi,0xde97b410
  41169f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a1:	fst    st(6)
  4116a3:	add    al,0xbf
  4116a5:	adc    DWORD PTR [ecx-0x5c],ebp
  4116a8:	push   0x1b
  4116aa:	loopne 0x411636
  4116ac:	dec    ecx
  4116ad:	inc    eax
  4116ae:	sbb    BYTE PTR [esi+edi*1-0x59],dl
  4116b2:	arpl   WORD PTR [eax+0x39],ax
  4116b5:	pop    edi
  4116b6:	fst    QWORD PTR [ecx-0x14c79a5c]
  4116bc:	cmp    BYTE PTR [eax],ch
  4116be:	xor    esp,DWORD PTR [ebx-0x40]
  4116c1:	in     eax,dx
  4116c2:	add    al,0x3f
  4116c4:	aam    0x65
  4116c6:	xchg   ebp,eax
  4116c7:	hlt    
  4116c8:	push   cs
  4116c9:	test   DWORD PTR [esi],esp
  4116cb:	jmp    FWORD PTR [eax]
  4116cd:	rcr    BYTE PTR [ebx+0x77],cl
  4116d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116d1:	adc    eax,0xb9d7daaa
  4116d6:	ins    BYTE PTR es:[edi],dx
  4116d7:	pop    es
  4116d8:	in     al,dx
  4116d9:	pop    ebp
  4116da:	jae    0x411705
  4116dc:	inc    esi
  4116dd:	rol    DWORD PTR [esi+esi*1-0x5d],0x27
  4116e2:	(bad)  
  4116e3:	lods   eax,DWORD PTR ds:[esi]
  4116e4:	out    0x58,al
  4116e6:	inc    edx
  4116e7:	arpl   cx,di
  4116e9:	add    cl,dl
  4116eb:	mov    eax,ds:0x5de6fbd5
  4116f0:	imul   esi,edi,0xb5113478
  4116f6:	and    bl,cl
  4116f8:	ror    BYTE PTR [eax-0x4a],1
  4116fb:	and    al,BYTE PTR [edi]
  4116fd:	cli    
  4116fe:	call   0x31a838dd
  411703:	mov    dh,0x65
  411705:	push   ecx
  411706:	scas   eax,DWORD PTR es:[edi]
  411707:	in     al,0x15
  411709:	mov    bl,BYTE PTR [edi+ecx*4+0x76]
  41170d:	pop    edi
  41170e:	push   es
  41170f:	mov    cl,BYTE PTR [ebp+0x7db9d411]
  411715:	xchg   esi,eax
  411716:	inc    ebx
  411717:	xchg   ecx,esi
  411719:	inc    ebx
  41171a:	xchg   ebp,eax
  41171b:	xchg   ebx,eax
  41171c:	js     0x411785
  41171e:	and    DWORD PTR [ebx],edi
  411720:	popf   
  411721:	push   es
  411722:	dec    esi
  411723:	jg     0x41171b
  411725:	pop    eax
  411726:	or     ch,dh
  411728:	inc    BYTE PTR [ebp+0x24]
  41172b:	sahf   
  41172c:	int    0xf0
  41172e:	jecxz  0x411788
  411730:	push   edx
  411731:	add    eax,DWORD PTR ds:[ecx+edi*2-0x35cc8d39]
  411739:	lahf   
  41173a:	push   edi
  41173b:	mov    ebp,DWORD PTR [edx+ecx*8+0x644f4ca3]
  411742:	(bad)  [ecx]
  411744:	or     DWORD PTR [ebx],0x4d6101e7
  41174a:	xchg   ebx,eax
  41174b:	iret   
  41174c:	scas   eax,DWORD PTR es:[edi]
  41174d:	in     eax,dx
  41174e:	int    0x2b
  411750:	idiv   BYTE PTR [esi]
  411752:	mov    bh,0xc5
  411754:	push   0xea1092dd
  411759:	and    DWORD PTR [ebp+0x78186cb1],ebp
  41175f:	cmp    esi,0x67
  411762:	jecxz  0x411783
  411764:	cmc    
  411765:	pop    ds
  411766:	icebp  
  411767:	jp     0x4117a9
  411769:	stc    
  41176a:	call   0x40b4:0xde7aaaec
  411771:	aad    0xb9
  411773:	ret    
  411774:	push   esp
  411775:	xor    bl,BYTE PTR [ebp-0x51beb120]
  41177b:	pop    ebp
  41177c:	or     al,0xd3
  41177e:	div    DWORD PTR cs:[eax]
  411781:	fsubrp st(7),st
  411783:	sbb    eax,0xcd3d6849
  411788:	cmp    edi,edi
  41178a:	jle    0x411713
  41178c:	dec    edi
  41178d:	mov    ?,WORD PTR [ebp+0x45210af5]
  411793:	lahf   
  411794:	pop    edx
  411795:	pop    fs
  411797:	mov    al,0xf5
  411799:	jbe    0x4117cf
  41179b:	call   0xb80eddfc
  4117a0:	ret    
  4117a1:	adc    DWORD PTR [edi],0xffffffed
  4117a4:	ins    DWORD PTR es:[edi],dx
  4117a5:	sar    BYTE PTR [esi+0x6d],cl
  4117a8:	enter  0xe730,0xde
  4117ac:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4117ae:	outs   dx,DWORD PTR ds:[esi]
  4117af:	in     al,dx
  4117b0:	in     al,dx
  4117b1:	test   al,0xef
  4117b3:	fwait
  4117b4:	pusha  
  4117b5:	xchg   edi,eax
  4117b6:	outs   dx,BYTE PTR ds:[esi]
  4117b7:	arpl   WORD PTR [ecx-0x3f2e3ba4],di
  4117bd:	iret   
  4117be:	imul   ebp,DWORD PTR [bx+0xf61],0xfffffff2
  4117c4:	or     ecx,DWORD PTR [ebp+0x32eb98ab]
  4117ca:	dec    edi
  4117cb:	mov    gs,WORD PTR [edi]
  4117cd:	add    BYTE PTR [esi+0x58],ch
  4117d0:	fs push cs
  4117d2:	mov    edi,0x6a14a3fd
  4117d7:	dec    edi
  4117d8:	sbb    BYTE PTR [edi-0x5e],0xec
  4117dc:	sbb    BYTE PTR [eax-0x22],bl
  4117df:	dec    BYTE PTR [edi+0x6]
  4117e2:	mov    ch,0x68
  4117e4:	mov    dh,0x97
  4117e6:	arpl   di,si
  4117e8:	outs   dx,DWORD PTR ds:[esi]
  4117e9:	xchg   esi,eax
  4117ea:	iret   
  4117eb:	or     ah,bh
  4117ed:	inc    ebp
  4117ee:	test   BYTE PTR fs:[ebp-0x1b],al
  4117f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f3:	mov    BYTE PTR [edx+eiz*8],dl
  4117f6:	add    DWORD PTR [edi-0x21],esp
  4117f9:	xchg   esi,eax
  4117fa:	fidivr WORD PTR [ecx+0x5353381c]
  411800:	mov    ds:0x2761ae76,al
  411805:	dec    esp
  411806:	sbb    ebx,edi
  411808:	or     ah,ch
  41180a:	popf   
  41180b:	loop   0x4117f1
  41180d:	push   0x9e678f1d
  411812:	xchg   edx,eax
  411813:	out    dx,al
  411814:	sbb    al,0xd6
  411816:	or     al,0x6b
  411818:	xor    al,0x26
  41181a:	out    0x3c,eax
  41181c:	or     cl,BYTE PTR [ecx]
  41181e:	add    al,0x1a
  411820:	xchg   ecx,eax
  411821:	mov    esp,0x331d8036
  411826:	mov    BYTE PTR [ebp+0x15],bl
  411829:	jne    0x411825
  41182b:	and    eax,0x70b15346
  411830:	adc    DWORD PTR [ecx],ecx
  411832:	in     al,0x5f
  411834:	cmp    DWORD PTR [edi-0x42],esp
  411837:	jge    0x411879
  411839:	mul    DWORD PTR [ebp-0x18]
  41183c:	rol    eax,0x82
  41183f:	push   edi
  411840:	cmp    eax,0xa534e75c
  411845:	adc    BYTE PTR [ebx+0x7757ee0],al
  41184b:	adc    BYTE PTR [edi-0x3534d9b3],ah
  411851:	stc    
  411852:	fnstsw WORD PTR ds:0x98936564
  411858:	(bad)  
  411859:	in     al,0x31
  41185b:	fwait
  41185c:	sbb    al,0xfc
  41185e:	mov    esp,0xa85a7930
  411863:	cmp    al,0xfa
  411865:	inc    edx
  411866:	fisub  WORD PTR [esi+eax*4]
  411869:	dec    ebx
  41186a:	cmp    ebp,DWORD PTR [esi]
  41186c:	out    dx,eax
  41186d:	push   ebx
  41186e:	ins    BYTE PTR es:[edi],dx
  41186f:	xchg   esi,eax
  411870:	adc    al,0x8b
  411872:	fs popa 
  411874:	mov    al,0x2f
  411876:	mov    WORD PTR [ecx+0x5b],?
  411879:	test   DWORD PTR [edi-0x2f212d57],edx
  41187f:	fmulp  st(5),st
  411881:	mov    dl,0xf
  411883:	shr    BYTE PTR [eax],0xd0
  411886:	test   DWORD PTR [ebx+0x54],edx
  411889:	(bad)  
  41188a:	stos   BYTE PTR es:[edi],al
  41188b:	or     esp,esi
  41188d:	and    al,0x8
  41188f:	lock xlat BYTE PTR ds:[ebx]
  411891:	push   esp
  411892:	mov    WORD PTR [ecx+0x12],fs
  411895:	sub    dh,BYTE PTR [ebx-0x62139206]
  41189b:	repnz cmp DWORD PTR [ebp+0x35730764],ebp
  4118a2:	xchg   bh,al
  4118a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a5:	sahf   
  4118a6:	cs clc 
  4118a8:	mov    al,ds:0x96d16008
  4118ad:	sub    al,0x23
  4118af:	or     BYTE PTR [ecx-0x6c1d3990],bh
  4118b5:	push   ebp
  4118b6:	leave  
  4118b7:	add    DWORD PTR [edx+0x3bafd969],0x13
  4118be:	and    DWORD PTR [edi+0x62a3adb],eax
  4118c4:	sbb    ecx,edx
  4118c6:	pop    eax
  4118c7:	outs   dx,BYTE PTR ds:[esi]
  4118c8:	xchg   ebx,eax
  4118c9:	sub    dh,dl
  4118cb:	pop    ecx
  4118cc:	pop    edi
  4118cd:	out    0x2a,eax
  4118cf:	fld    st(0)
  4118d1:	data16 cmc 
  4118d3:	cmp    dh,BYTE PTR [esi-0x1f]
  4118d6:	je     0x411858
  4118d8:	push   ss
  4118d9:	imul   ebx,eax,0xffffffd3
  4118dc:	or     al,0x97
  4118de:	jmp    0xc4647808
  4118e3:	inc    esp
  4118e4:	lods   eax,DWORD PTR ds:[esi]
  4118e5:	jecxz  0x411935
  4118e7:	call   eax
  4118e9:	leave  
  4118ea:	mov    cl,0xed
  4118ec:	or     BYTE PTR [esp+eax*2+0x2d212d15],bl
  4118f3:	xor    al,0x40
  4118f5:	in     al,0x18
  4118f7:	jns    0x411886
  4118f9:	dec    ebp
  4118fa:	stc    
  4118fb:	mov    edx,0x5f9ba26
  411900:	adc    eax,0xca07733f
  411905:	push   ss
  411906:	sbb    ah,BYTE PTR [edi+0x32]
  411909:	in     al,0x5a
  41190b:	aam    0xa
  41190d:	push   es
  41190e:	pusha  
  41190f:	add    eax,0x8a4b76f
  411914:	jb     0x41194f
  411916:	enter  0xc89c,0x9c
  41191a:	hlt    
  41191b:	pop    ebp
  41191c:	dec    ebx
  41191d:	add    BYTE PTR [ebx-0x13],0xdd
  411921:	ret    0x52d9
  411924:	mov    esp,0x672b545b
  411929:	mov    cl,0x56
  41192b:	pop    edx
  41192c:	scas   eax,DWORD PTR es:[edi]
  41192d:	xor    edx,edi
  41192f:	mov    dl,0x85
  411931:	lea    esi,[esi]
  411933:	sub    ah,al
  411935:	push   0xf
  411937:	cmp    ch,BYTE PTR [ecx-0x50]
  41193a:	or     BYTE PTR [ecx-0x28cfa62b],0x67
  411941:	test   al,0x25
  411943:	jg     0x4118d9
  411945:	inc    ebp
  411946:	ja     0x41194c
  411948:	fmul   QWORD PTR [ecx]
  41194a:	ret    0xe40d
  41194d:	fxch   st(0)
  41194f:	addr16 gs arpl bx,dx
  411953:	call   0xac4:0x2f108d51
  41195a:	aas    
  41195b:	cmc    
  41195c:	(bad)  
  41195e:	loop   0x4119c0
  411960:	mov    DWORD PTR [ebx],esi
  411962:	pushf  
  411963:	into   
  411964:	inc    ebp
  411965:	aaa    
  411966:	fcomp  QWORD PTR [esi-0x2b]
  411969:	mov    dl,0xf5
  41196b:	add    DWORD PTR [ebx-0x16],edi
  41196e:	mov    ebp,0xb669c917
  411973:	daa    
  411974:	fcom   DWORD PTR [edi]
  411976:	loopne 0x41195e
  411978:	ins    DWORD PTR es:[edi],dx
  411979:	test   al,0x80
  41197b:	xchg   ecx,eax
  41197c:	mov    esi,0x912fa459
  411981:	jle    0x4119e7
  411983:	cmp    eax,0x1662eac
  411988:	adc    dl,BYTE PTR [ebp+ecx*2-0x50]
  41198c:	sbb    DWORD PTR [ecx],ebp
  41198e:	and    dl,BYTE PTR [ecx+ecx*2-0x73]
  411992:	adc    dl,BYTE PTR [esi+0x7309c619]
  411998:	sbb    al,0xaf
  41199a:	mov    al,ds:0xbc481d62
  41199f:	push   cs
  4119a0:	dec    edi
  4119a1:	fstp   TBYTE PTR [ebp+0x3cbd3e7f]
  4119a7:	xchg   edi,eax
  4119a8:	xor    dl,ch
  4119aa:	lods   eax,DWORD PTR ds:[esi]
  4119ab:	stc    
  4119ac:	cmp    al,0xec
  4119ae:	sar    BYTE PTR [ebx],1
  4119b0:	es shl eax,1
  4119b3:	sub    eax,DWORD PTR [esi+esi*1]
  4119b6:	mov    ah,0x33
  4119b8:	(bad)  
  4119ba:	stc    
  4119bb:	sbb    BYTE PTR [ecx-0x6c],ch
  4119be:	in     eax,0x87
  4119c0:	jne    0x411987
  4119c2:	xchg   esp,eax
  4119c3:	shl    BYTE PTR [ecx+ebx*1-0x26],1
  4119c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c8:	xor    ch,bl
  4119ca:	in     eax,dx
  4119cb:	mov    al,ds:0xd2489eca
  4119d0:	retf   
  4119d1:	std    
  4119d2:	sbb    BYTE PTR [esi+0x51],bh
  4119d5:	push   eax
  4119d6:	(bad)  
  4119d7:	ret    0xba40
  4119da:	jecxz  0x411a12
  4119dc:	inc    ebp
  4119dd:	mov    ds:0x70953b8a,al
  4119e2:	test   al,0xa2
  4119e4:	adc    al,0x95
  4119e6:	sub    eax,0x55247929
  4119eb:	or     eax,0x186d66b3
  4119f0:	retf   
  4119f1:	xchg   esi,eax
  4119f2:	adc    eax,0xe1b1a3b7
  4119f7:	push   esp
  4119f8:	sti    
  4119f9:	add    al,0xf4
  4119fb:	mul    BYTE PTR [ebx]
  4119fd:	lock mov ecx,0x63408f29
  411a03:	daa    
  411a04:	syscall 
  411a06:	imul   esp,DWORD PTR ds:0x3914394b,0x17
  411a0d:	jp     0x411a4a
  411a0f:	popa   
  411a10:	rcr    esp,cl
  411a12:	repnz ror ch,1
  411a15:	push   cs
  411a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a17:	push   ebx
  411a18:	xchg   edi,eax
  411a19:	fsubr  QWORD PTR ds:0xd171b53c
  411a1f:	stc    
  411a20:	inc    ebx
  411a22:	shl    BYTE PTR [eax-0x268ae63c],0xf4
  411a29:	xor    al,0xcc
  411a2b:	cs dec ebx
  411a2d:	jp     0x4119ef
  411a2f:	xchg   edx,eax
  411a30:	pop    ds
  411a31:	adc    eax,0x2911e442
  411a36:	jne    0x2470cfec
  411a3c:	ins    BYTE PTR es:[edi],dx
  411a3d:	in     eax,0xed
  411a3f:	leave  
  411a40:	and    eax,0x3259d7bc
  411a45:	out    0xdd,al
  411a47:	in     eax,dx
  411a48:	test   BYTE PTR [ecx],dh
  411a4a:	mov    BYTE PTR [edi],cl
  411a4c:	jl     0x411a42
  411a4e:	xchg   edi,eax
  411a4f:	inc    eax
  411a50:	mov    eax,ds:0xb3c06de8
  411a55:	xlat   BYTE PTR ds:[ebx]
  411a56:	nop
  411a57:	xchg   ebp,eax
  411a58:	push   edx
  411a59:	les    eax,FWORD PTR [eax+0x33658ed4]
  411a5f:	add    BYTE PTR [ecx+0x7e7aab23],dh
  411a65:	fist   WORD PTR [ecx+ebx*2]
  411a68:	mov    bl,dl
  411a6a:	aad    0x2d
  411a6c:	and    eax,0xa6cab73e
  411a71:	jmp    0x367ca3f2
  411a76:	push   ss
  411a77:	inc    edi
  411a78:	xchg   edi,eax
  411a79:	mov    dh,0x6c
  411a7b:	inc    ecx
  411a7c:	and    ebp,ecx
  411a7e:	lds    ebp,FWORD PTR [edx+0x6063a431]
  411a84:	pop    edi
  411a85:	pop    esi
  411a86:	sti    
  411a87:	xchg   BYTE PTR [edx+esi*1+0x29],dl
  411a8b:	jle    0x411a78
  411a8d:	mov    cl,0x3b
  411a8f:	sbb    ebx,DWORD PTR [edi+0x4f]
  411a92:	pushf  
  411a93:	loope  0x411a37
  411a95:	aas    
  411a96:	and    al,0xba
  411a98:	imul   esi,edx,0x4b
  411a9b:	or     esp,eax
  411a9d:	lods   eax,DWORD PTR ds:[esi]
  411a9e:	pop    ebp
  411a9f:	cmp    eax,0xf138b0fc
  411aa4:	push   ds
  411aa5:	lahf   
  411aa6:	sbb    eax,0xa04376f1
  411aab:	lahf   
  411aac:	in     al,0x72
  411aae:	mov    bl,0x90
  411ab0:	leave  
  411ab1:	(bad)  
  411ab2:	ror    cl,cl
  411ab4:	lock mov esi,0x9fd5ca2
  411aba:	nop
  411abb:	int3   
  411abc:	popf   
  411abd:	gs int3 
  411abf:	cmc    
  411ac0:	cmp    bl,BYTE PTR [edi+edi*4]
  411ac3:	xchg   edi,eax
  411ac4:	lods   al,BYTE PTR ds:[esi]
  411ac5:	rcr    DWORD PTR [edx-0x2601c4f1],1
  411acb:	popaw  
  411acd:	rcr    DWORD PTR [edx-0x4f],cl
  411ad0:	imul   ebp,DWORD PTR [edx+0x7ef90f2a],0xffffffa6
  411ad7:	pop    ss
  411ad8:	xchg   ecx,eax
  411ad9:	mov    edx,0x20bdedb0
  411ade:	xchg   DWORD PTR [ebp+0x3e844adb],edx
  411ae4:	fstp   TBYTE PTR [edx-0x64]
  411ae7:	call   0xba5d38cd
  411aec:	pushf  
  411aed:	push   esi
  411aee:	mov    esp,0x9170f70a
  411af3:	jecxz  0x411a95
  411af5:	xchg   esp,eax
  411af6:	mov    fs,WORD PTR [esi+0x230e998]
  411afc:	xchg   edi,eax
  411afd:	mov    bh,0x21
  411aff:	sub    dl,BYTE PTR [esp+eax*4+0x5e]
  411b03:	pop    edx
  411b04:	and    bh,BYTE PTR [esi+0x4d]
  411b07:	jae    0x411b87
  411b09:	ror    DWORD PTR [ecx+0x35],0xf4
  411b0d:	sbb    BYTE PTR [eax+ebp*2+0x5e780e3e],dl
  411b14:	mov    ah,0x8b
  411b16:	inc    eax
  411b17:	sbb    BYTE PTR ds:0x72011db2,dh
  411b1d:	push   ebx
  411b1e:	(bad)  
  411b1f:	int    0x18
  411b21:	fiadd  WORD PTR es:[ebp-0x6677812]
  411b28:	sub    BYTE PTR [eax],0x19
  411b2b:	pop    esi
  411b2c:	(bad)  
  411b2d:	mov    ch,0x0
  411b2f:	inc    esi
  411b30:	in     al,0xba
  411b32:	daa    
  411b33:	daa    
  411b34:	aas    
  411b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b36:	(bad)  
  411b37:	mov    cl,0x99
  411b39:	ja     0x411b95
  411b3b:	mov    esp,0x788a3302
  411b40:	(bad)  
  411b42:	push   esp
  411b43:	pushf  
  411b44:	sbb    al,0x59
  411b46:	xchg   esp,eax
  411b47:	outs   dx,DWORD PTR ds:[esi]
  411b48:	adc    BYTE PTR [ecx-0x66c7d4f0],ch
  411b4e:	sub    al,0x77
  411b50:	scas   eax,DWORD PTR es:[edi]
  411b51:	cdq    
  411b52:	mov    cl,0x7c
  411b54:	(bad)  
  411b55:	and    dl,BYTE PTR [edx]
  411b57:	fwait
  411b58:	and    eax,0x7b917172
  411b5d:	das    
  411b5e:	cs mov cl,0xaf
  411b61:	sub    eax,0x766afc99
  411b66:	mov    ebp,0xa4f5eab2
  411b6b:	stos   DWORD PTR es:[edi],eax
  411b6c:	outs   dx,BYTE PTR ds:[esi]
  411b6d:	out    dx,eax
  411b6e:	fucomip st,st(1)
  411b70:	pop    ecx
  411b71:	std    
  411b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b73:	(bad)
  411b76:	jmp    0x411baf
  411b78:	xor    eax,0x7a601fa3
  411b7d:	adc    eax,0x2fd45141
  411b82:	mov    es,WORD PTR [edx]
  411b84:	jo     0x411bcd
  411b86:	mov    dl,0x88
  411b88:	cdq    
  411b89:	(bad)  
  411b8a:	cdq    
  411b8b:	test   DWORD PTR [edx-0x29222dd8],ebp
  411b91:	jns    0x411b6e
  411b93:	jnp    0x411b31
  411b95:	mov    ds:0x31451f4f,al
  411b9a:	scas   eax,DWORD PTR es:[edi]
  411b9b:	push   ebp
  411b9c:	fwait
  411b9d:	jle    0x411bca
  411b9f:	pop    ebp
  411ba0:	lods   al,BYTE PTR ds:[esi]
  411ba1:	cmp    BYTE PTR [edi-0x1b2a25ff],ah
  411ba7:	sub    BYTE PTR [edi-0x43c76abc],ah
  411bad:	xor    BYTE PTR [ecx+0x5d0a4f7f],bh
  411bb3:	sbb    ah,bh
  411bb5:	fs loope 0x411c03
  411bb8:	and    BYTE PTR [edi-0x7f],dl
  411bbb:	mov    ds:0x1d76c307,eax
  411bc0:	push   es
  411bc1:	aas    
  411bc2:	retf   
  411bc3:	test   DWORD PTR [ebx-0x70001057],esp
  411bc9:	mov    BYTE PTR [ecx-0x7fbb4fde],0xe9
  411bd0:	fmul   DWORD PTR [edi]
  411bd2:	and    cl,BYTE PTR [edi+0x1d]
  411bd5:	push   ds
  411bd6:	gs nop
  411bd8:	pop    edi
  411bd9:	xor    al,0x94
  411bdb:	cmp    BYTE PTR [esi-0x24879617],0x8a
  411be2:	cmp    BYTE PTR [edi+edi*4+0x1c0fdac9],dh
  411be9:	stc    
  411bea:	dec    esi
  411beb:	pop    esi
  411bec:	pushf  
  411bed:	addr16 jmp 0x6dbd9de9
  411bf3:	pop    ebx
  411bf4:	shl    ecx,0xfb
  411bf7:	adc    al,0xea
  411bf9:	inc    ebx
  411bfa:	pushf  
  411bfb:	add    al,BYTE PTR ds:0x12063cb7
  411c01:	push   ss
  411c02:	ins    BYTE PTR es:[edi],dx
  411c03:	lods   al,BYTE PTR ds:[esi]
  411c04:	inc    edx
  411c05:	mov    esp,0xe742892e
  411c0a:	(bad)  
  411c0b:	push   cs
  411c0c:	add    esi,DWORD PTR [edx+0x3b]
  411c0f:	sbb    BYTE PTR [eax-0xca46a00],dl
  411c15:	xor    al,0x3b
  411c17:	jg     0x411c2a
  411c19:	sbb    DWORD PTR [esi+0x13],0x127166d6
  411c20:	call   0x501af8d0
  411c25:	mov    ecx,0xd7e54ec
  411c2a:	xchg   esp,eax
  411c2b:	fwait
  411c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c2d:	ins    BYTE PTR es:[edi],dx
  411c2e:	out    dx,eax
  411c2f:	mov    dh,0x45
  411c31:	icebp  
  411c32:	push   esi
  411c33:	mov    eax,ds:0x32e0919c
  411c38:	ror    cl,1
  411c3a:	jge    0x411c1f
  411c3c:	xchg   esi,eax
  411c3d:	inc    edx
  411c3e:	stos   DWORD PTR es:[edi],eax
  411c3f:	jp     0x411bd1
  411c41:	push   cs
  411c42:	lea    edx,[esi-0x6203764e]
  411c48:	xlat   BYTE PTR ds:[ebx]
  411c49:	xor    eax,0x2f6f51f3
  411c4e:	rcl    al,1
  411c50:	js     0x411cc9
  411c52:	inc    edx
  411c53:	cmc    
  411c54:	push   esp
  411c55:	cmc    
  411c56:	dec    esp
  411c57:	daa    
  411c58:	lock xor eax,0x80c97dff
  411c5e:	cmp    DWORD PTR [ebx],0xffffff9c
  411c61:	loope  0x411c61
  411c63:	mov    ah,0x67
  411c65:	sar    dh,cl
  411c67:	jp     0x411c6f
  411c69:	push   cs
  411c6a:	clc    
  411c6b:	pop    eax
  411c6c:	leave  
  411c6d:	sbb    al,0x31
  411c6f:	sub    cl,BYTE PTR gs:[ebp-0x51]
  411c73:	out    dx,eax
  411c74:	addr16 idiv dl
  411c77:	adc    ebx,DWORD PTR [esi+ebp*4-0x1]
  411c7b:	adc    al,BYTE PTR [esi-0x5f1367ad]
  411c81:	xchg   esi,eax
  411c82:	fdivr  QWORD PTR [eax+0x76]
  411c85:	add    eax,0x7ff5854c
  411c8a:	std    
  411c8b:	mov    edx,0xe0c5af9e
  411c90:	jno    0x411c2a
  411c92:	fidiv  DWORD PTR [edi]
  411c94:	add    eax,0xda7a1237
  411c99:	mov    dl,0xb9
  411c9b:	adc    ch,BYTE PTR [ecx]
  411c9d:	retf   
  411c9e:	imul   ebp,DWORD PTR [edx+0x671a2b1c],0xffffffd0
  411ca5:	inc    ebx
  411ca6:	mov    cl,0x3a
  411ca8:	sti    
  411ca9:	rcr    DWORD PTR [ebx+ecx*4+0x51],cl
  411cad:	pop    ebp
  411cae:	out    dx,eax
  411caf:	xchg   edi,eax
  411cb0:	(bad)  
  411cb1:	in     al,dx
  411cb2:	mov    edx,0xe97d3ec1
  411cb7:	imul   ebp,ecx,0xbb95c825
  411cbd:	pop    esi
  411cbe:	mov    bh,0x3b
  411cc0:	hlt    
  411cc1:	fimul  DWORD PTR [ebx+0x7efda9af]
  411cc7:	fwait
  411cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc9:	jbe    0x411cd8
  411ccb:	mov    edi,0x5fccca29
  411cd0:	loop   0x411ca7
  411cd2:	in     al,0x27
  411cd4:	cld    
  411cd5:	pop    ss
  411cd6:	lahf   
  411cd7:	mov    esp,0x352a9997
  411cdc:	push   ss
  411cdd:	int3   
  411cde:	xchg   edx,eax
  411cdf:	mov    ebx,0x5bf6bc49
  411ce4:	xor    eax,0x2db4a7e5
  411ce9:	inc    ecx
  411cea:	add    DWORD PTR [ebp-0xfe044a5],0xc7dcc52b
  411cf4:	and    al,0xc1
  411cf6:	rol    DWORD PTR [eax],cl
  411cf8:	mov    ebp,0x7fd20cef
  411cfd:	mov    dh,0xec
  411cff:	cli    
  411d00:	pop    eax
  411d01:	xor    DWORD PTR [edx],ecx
  411d03:	inc    eax
  411d04:	inc    ebx
  411d05:	(bad)  
  411d06:	and    DWORD PTR [edi+0x6134fa23],0x64
  411d0d:	and    BYTE PTR [edx],bl
  411d0f:	fist   DWORD PTR [esi+edx*8]
  411d12:	out    0xf1,eax
  411d14:	adc    BYTE PTR [esi],ah
  411d16:	aaa    
  411d17:	stc    
  411d18:	sub    BYTE PTR [esi+0x2604d8f7],bh
  411d1e:	lahf   
  411d1f:	push   ebx
  411d20:	popf   
  411d21:	cwde   
  411d22:	mov    edx,0xc6956c6a
  411d27:	fmul   st,st(4)
  411d29:	sbb    ah,BYTE PTR [esi+0x73]
  411d2c:	test   al,0x9c
  411d2e:	neg    BYTE PTR [edx-0x78de88d1]
  411d34:	pop    ds
  411d35:	cmp    dl,BYTE PTR [ebx]
  411d37:	xor    BYTE PTR [edi+esi*2+0x3e45cd2c],0x5d
  411d3f:	or     al,0x93
  411d41:	std    
  411d42:	je     0x411d95
  411d44:	pop    ecx
  411d45:	js     0x411d8f
  411d47:	inc    esi
  411d48:	and    eax,DWORD PTR [esi]
  411d4a:	inc    DWORD PTR [edx-0xd]
  411d4d:	out    dx,eax
  411d4e:	fcomp  QWORD PTR [ebx-0x2]
  411d51:	pop    eax
  411d52:	pop    edx
  411d53:	fdivr  QWORD PTR [esi+0x9]
  411d56:	stos   BYTE PTR es:[edi],al
  411d57:	sub    ecx,DWORD PTR [esi+0x24]
  411d5a:	sbb    al,0xbc
  411d5c:	outs   dx,DWORD PTR ds:[esi]
  411d5d:	les    eax,FWORD PTR [edx]
  411d5f:	cmp    DWORD PTR [esi+0x33dbada2],edx
  411d65:	mov    ?,WORD PTR [ecx*4-0x6d53193e]
  411d6c:	xchg   esp,eax
  411d6d:	adc    BYTE PTR [eax],0x44
  411d70:	popf   
  411d71:	jmp    0x5991:0x1175f10a
  411d78:	sub    ah,BYTE PTR [ebp-0x480b43e1]
  411d7e:	push   ecx
  411d7f:	popf   
  411d80:	sbb    esi,DWORD PTR [edi]
  411d82:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411d84:	fs mov ah,0x57
  411d87:	add    ah,cl
  411d89:	sbb    edx,DWORD PTR [edi+0x66]
  411d8c:	gs add eax,0x4734e8ab
  411d92:	je     0x411dd4
  411d94:	test   DWORD PTR [edx-0x601d162a],edx
  411d9a:	push   es
  411d9b:	push   0x61817e5d
  411da0:	loop   0x411d26
  411da2:	fstp   DWORD PTR [esp+eax*4-0x61]
  411da6:	cmp    al,0xa0
  411da8:	fild   DWORD PTR [edx-0x2433ba72]
  411dae:	add    DWORD PTR [eax-0x11],0x7
  411db2:	ret    0x9b5d
  411db5:	add    DWORD PTR [ebp-0x68],ebp
  411db8:	out    0x70,al
  411dba:	xor    dh,bh
  411dbc:	mov    edi,0xb6b9f9c5
  411dc1:	cmp    ch,bl
  411dc3:	imul   DWORD PTR [edi-0x28ecd694]
  411dc9:	fisub  WORD PTR [ecx+eax*4+0x2e]
  411dcd:	xlat   BYTE PTR ds:[ebx]
  411dce:	int3   
  411dcf:	jns    0x411e40
  411dd1:	mov    WORD PTR [esi+0x24],ds
  411dd4:	enter  0x3659,0xc2
  411dd8:	xlat   BYTE PTR ds:[ebx]
  411dd9:	add    DWORD PTR ss:[ebp-0x39],0x72e78822
  411de1:	push   es
  411de2:	jbe    0x411d7b
  411de4:	int3   
  411de5:	inc    ebp
  411de6:	adc    dl,0x6d
  411de9:	fdivr  QWORD PTR [esi]
  411deb:	and    eax,0x662ff90d
  411df0:	mov    ds:0xc688d6e7,al
  411df5:	inc    edi
  411df6:	retf   
  411df7:	aas    
  411df8:	popf   
  411df9:	pop    esp
  411dfa:	push   edi
  411dfb:	jnp    0x411da3
  411dfd:	mov    dl,BYTE PTR [eax+edx*2-0x295f8fa8]
  411e04:	test   DWORD PTR [eax+0x43],0x5d98f3d6
  411e0b:	mov    al,0xd9
  411e0d:	out    0xa2,al
  411e0f:	fld    QWORD PTR [ebx-0x28]
  411e12:	bound  edx,QWORD PTR [edx]
  411e14:	ret    0x845a
  411e17:	das    
  411e18:	jns    0x411e87
  411e1a:	cmp    al,0x8e
  411e1c:	(bad)  
  411e1d:	push   ds
  411e1e:	in     eax,dx
  411e1f:	mov    edx,eax
  411e21:	rcr    bl,1
  411e23:	pusha  
  411e24:	push   esp
  411e25:	mov    ebx,0x8af5d8de
  411e2a:	jne    0x411db8
  411e2c:	push   es
  411e2d:	lea    eax,[esi+esi*4+0x46814de5]
  411e34:	add    cl,BYTE PTR [ecx]
  411e36:	scas   al,BYTE PTR es:[edi]
  411e37:	and    dh,BYTE PTR [edi-0x20e3ad0e]
  411e3d:	push   edx
  411e3e:	inc    ecx
  411e3f:	mov    ah,0x37
  411e41:	jo     0x411e03
  411e43:	pop    ss
  411e44:	jnp    0x411dd3
  411e46:	cli    
  411e47:	jnp    0x411e9a
  411e49:	adc    eax,0x1f13043f
  411e4e:	stc    
  411e4f:	pop    ds
  411e50:	jg     0x411e2a
  411e52:	sbb    ecx,DWORD PTR [ebx+edi*2-0x49eca15c]
  411e59:	(bad)  
  411e5a:	mul    dh
  411e5c:	pusha  
  411e5d:	shl    DWORD PTR [edi+0xd256879],0xfb
  411e64:	mov    ebp,0x7fed2233
  411e69:	outs   dx,BYTE PTR ds:[esi]
  411e6a:	or     DWORD PTR [esp+eax*1+0x13],edi
  411e6e:	ins    DWORD PTR es:[edi],dx
  411e6f:	out    dx,al
  411e70:	js     0x411ece
  411e72:	ret    0x847c
  411e75:	inc    esp
  411e76:	retf   
  411e77:	xchg   ebp,eax
  411e78:	outs   dx,DWORD PTR ds:[esi]
  411e79:	pop    edx
  411e7a:	mov    dl,0x9
  411e7c:	retf   
  411e7d:	repnz sbb DWORD PTR [eax],ebp
  411e80:	push   ebx
  411e81:	mov    bl,0x5c
  411e83:	sub    BYTE PTR [ebp+0x21eb5585],0x4e
  411e8a:	inc    esp
  411e8b:	repnz mov esp,0x804d7064
  411e91:	xchg   ebp,eax
  411e92:	push   ebp
  411e93:	fadd   st,st(7)
  411e95:	imul   ecx,eax,0x2f
  411e98:	mov    al,0x55
  411e9a:	cli    
  411e9b:	xchg   BYTE PTR [edx-0x6a28b58d],dh
  411ea1:	data16 (bad) 
  411ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea6:	push   ebx
  411ea7:	out    dx,al
  411ea8:	cmp    eax,0xb573eb8d
  411ead:	cwde   
  411eae:	mov    BYTE PTR [esi-0x7a],dh
  411eb1:	push   ebp
  411eb2:	ror    DWORD PTR [ebx],0x76
  411eb5:	mov    ch,ch
  411eb7:	jno    0x411e58
  411eb9:	mov    ah,0xb0
  411ebb:	or     bh,BYTE PTR [edi+0x7a]
  411ebe:	lock inc ebp
  411ec0:	mov    es,ebx
  411ec2:	cld    
  411ec3:	jmp    DWORD PTR ds:0x14488d6c
  411ec9:	(bad)  
  411eca:	mov    dh,0x4e
  411ecc:	xor    bl,al
  411ece:	imul   esp,DWORD PTR [ecx],0xb
  411ed1:	dec    eax
  411ed2:	and    DWORD PTR [ebx+0x391cb90f],esp
  411ed8:	ret    0x24cc
  411edb:	sbb    ebp,ecx
  411edd:	xlat   BYTE PTR ds:[ebx]
  411ede:	jmp    0x5580a99d
  411ee3:	sbb    BYTE PTR [edx],dh
  411ee5:	gs cmp dh,ah
  411ee8:	repz imul edi,esp,0x99fbd6f4
  411eef:	retf   0x7379
  411ef2:	popa   
  411ef3:	push   edi
  411ef4:	jno    0x411f36
  411ef6:	sub    ah,bh
  411ef8:	lods   eax,DWORD PTR ds:[esi]
  411ef9:	call   0x5096:0x14a2c888
  411f00:	fsubr  DWORD PTR [esi+0x34fc1694]
  411f06:	cmp    bl,0xfd
  411f09:	fcomp  st(3)
  411f0b:	ss dec ebx
  411f0d:	popa   
  411f0e:	lock in eax,dx
  411f10:	sub    DWORD PTR [edx-0x15],0xffffffa3
  411f14:	mov    ds:0xc52d6a41,al
  411f19:	int    0xa9
  411f1b:	fistp  WORD PTR [edi]
  411f1d:	inc    ecx
  411f1e:	stos   BYTE PTR es:[edi],al
  411f1f:	lods   al,BYTE PTR ds:[esi]
  411f20:	adc    BYTE PTR [eax+0x26a48b0],ch
  411f26:	xchg   edi,eax
  411f27:	in     eax,0x62
  411f29:	ins    BYTE PTR es:[edi],dx
  411f2a:	lds    edi,FWORD PTR [ecx]
  411f2c:	mov    ds:0x70587b0c,al
  411f31:	cmp    esp,esp
  411f33:	arpl   WORD PTR [edx+0x59],bp
  411f36:	sub    ecx,DWORD PTR [ebx+0x1afc2c1c]
  411f3c:	sbb    dl,BYTE PTR [ebx]
  411f3e:	xor    al,0xe6
  411f40:	dec    ecx
  411f41:	outs   dx,BYTE PTR ds:[esi]
  411f42:	rcr    BYTE PTR ds:0xa91ea09b,1
  411f48:	fild   QWORD PTR [eax-0x50]
  411f4b:	cmp    ch,0x69
  411f4e:	int3   
  411f4f:	stc    
  411f50:	mov    ebp,0xa74f91bf
  411f55:	sti    
  411f56:	adc    ebp,esp
  411f58:	or     DWORD PTR ds:0xf54c7cb6,0x17
  411f5f:	je     0x411f86
  411f61:	pop    ds
  411f62:	shl    DWORD PTR [eax+0x3a],0x41
  411f66:	mov    ebp,0x55e5e96c
  411f6b:	xchg   edx,eax
  411f6c:	add    dh,dl
  411f6e:	lods   al,BYTE PTR fs:[esi]
  411f70:	mov    esi,0x370fee63
  411f75:	mov    ch,BYTE PTR [ebx+0x54]
  411f78:	mov    al,ds:0x5238c8a9
  411f7d:	fisttp DWORD PTR [edx+0x6d]
  411f80:	mov    bp,0x6620
  411f84:	sbb    bh,BYTE PTR [esi+eax*8]
  411f87:	aam    0x3e
  411f89:	cmp    esp,eax
  411f8b:	mov    esp,0x38e4854b
  411f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f91:	or     BYTE PTR [esi+0xf4a3818],0x24
  411f98:	nop
  411f99:	push   edx
  411f9a:	mov    esp,esi
  411f9c:	ret    0xcb1d
  411f9f:	inc    edi
  411fa0:	xor    DWORD PTR [esi],ebp
  411fa2:	xlat   BYTE PTR ds:[ebx]
  411fa3:	and    BYTE PTR [esi],ch
  411fa5:	clc    
  411fa6:	jb     0x411f3f
  411fa8:	cmp    BYTE PTR [esi+0x42],0x6e
  411fac:	xchg   ecx,eax
  411fad:	ficomp DWORD PTR [eax-0x71]
  411fb0:	xor    dh,dl
  411fb2:	int    0x36
  411fb4:	add    ah,BYTE PTR [edx]
  411fb6:	int3   
  411fb7:	xchg   edx,eax
  411fb8:	pop    esp
  411fb9:	dec    ecx
  411fba:	aad    0x61
  411fbc:	outs   dx,BYTE PTR ds:[esi]
  411fbd:	pop    ss
  411fbe:	test   al,0x98
  411fc0:	pop    ebp
  411fc1:	sub    eax,DWORD PTR [ecx-0x38]
  411fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc5:	shl    BYTE PTR [esi],0xec
  411fc8:	addr16 jbe 0x411f77
  411fcb:	test   al,0x53
  411fcd:	rcl    bl,0x34
  411fd0:	mov    fs,WORD PTR [ebp+0xc89db0a]
  411fd6:	pop    ebx
  411fd7:	inc    ebx
  411fd8:	lock retf 0x14f9
  411fdc:	aam    0x95
  411fde:	pop    ss
  411fdf:	jle    0x41202a
  411fe1:	mov    bl,0x4
  411fe3:	pop    ss
  411fe4:	mov    ecx,0x7bbfee60
  411fe9:	dec    edi
  411fea:	daa    
  411feb:	push   ds
  411fec:	bound  ebx,QWORD PTR [ecx-0x4e]
  411fef:	(bad)  
  411ff0:	in     eax,dx
  411ff1:	xchg   ebx,eax
  411ff2:	out    dx,eax
  411ff3:	leave  
  411ff4:	or     dh,0xa1
  411ff7:	je     0x412003
  411ff9:	(bad)  
  411ffa:	mov    ebp,0x4e65aa14
  411fff:	mov    ebx,0xfc3d90e3
  412004:	push   es
  412005:	mov    BYTE PTR [edi+0x30],dl
  412008:	nop
  412009:	(bad)  
  41200a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41200b:	lea    esp,[edi+0x15]
  41200e:	mov    esi,0xa2846392
  412013:	fsubr  st(3),st
  412015:	dec    eax
  412016:	jae    0x411feb
  412018:	xchg   edx,eax
  412019:	add    ebx,ebp
  41201b:	jmp    FWORD PTR [ebx-0x28]
  41201e:	push   eax
  41201f:	(bad)  
  412020:	rol    DWORD PTR ds:0x686ef64c,cl
  412026:	ret    
  412027:	pushf  
  412028:	data16 out dx,al
  41202a:	push   0xffffffb5
  41202c:	lods   eax,DWORD PTR ds:[esi]
  41202d:	xchg   edx,eax
  41202e:	jmp    0x7b71:0x66bf4b37
  412035:	cmp    dl,bl
  412037:	ja     0x412050
  412039:	imul   ebx,esi,0x52
  41203c:	cmp    al,0xe0
  41203e:	pop    edx
  41203f:	mov    al,0x15
  412041:	out    0x87,eax
  412043:	mov    fs,WORD PTR [eax-0x313c7005]
  412049:	icebp  
  41204a:	lods   al,BYTE PTR ds:[esi]
  41204b:	sbb    dh,0xf6
  41204e:	fsubr  DWORD PTR [edx]
  412050:	in     al,dx
  412051:	cli    
  412052:	or     dh,BYTE PTR [ecx+0x65]
  412055:	mov    edx,0x4e35d3e
  41205a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41205b:	xchg   ebx,eax
  41205c:	fild   WORD PTR [esi-0x4750e093]
  412062:	mov    ch,0xc6
  412064:	or     BYTE PTR [ecx],al
  412066:	lds    edx,FWORD PTR [edi+eax*4]
  412069:	pushf  
  41206a:	adc    DWORD PTR [edi],eax
  41206c:	lahf   
  41206d:	imul   ebp,DWORD PTR [ebx-0x3d1114a7],0xffffff93
  412074:	jnp    0x412063
  412076:	lahf   
  412077:	shl    BYTE PTR [edx-0x44],cl
  41207a:	das    
  41207b:	mov    ah,0x95
  41207d:	add    ebx,DWORD PTR [ebp+0x78a10936]
  412083:	sub    edx,edx
  412085:	adc    DWORD PTR ds:0x37022334,ecx
  41208b:	mov    bh,0xde
  41208d:	mov    al,0x14
  41208f:	pop    ebp
  412090:	push   esi
  412091:	lds    edx,FWORD PTR [edi-0x4b]
  412094:	or     edi,esp
  412096:	popf   
  412097:	nop
  412098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412099:	leave  
  41209a:	daa    
  41209b:	mov    esp,0x75d15509
  4120a0:	retf   
  4120a1:	rcl    DWORD PTR [edi],1
  4120a3:	mov    ch,0x6c
  4120a5:	je     0x412105
  4120a7:	sbb    edi,DWORD PTR [edi+eax*4+0x389e24a1]
  4120ae:	in     al,dx
  4120af:	stos   BYTE PTR es:[edi],al
  4120b0:	mov    ebx,0x62f341db
  4120b5:	out    dx,al
  4120b6:	test   DWORD PTR [esp+eax*8-0x5d32ac2c],ebp
  4120bd:	cmc    
  4120be:	and    ebp,ebx
  4120c0:	ror    BYTE PTR [ebp-0x24915b1e],cl
  4120c6:	or     al,0xcb
  4120c8:	or     DWORD PTR [ebx+0x13],ebp
  4120cb:	xchg   esp,eax
  4120cc:	in     eax,0xa4
  4120ce:	inc    ebx
  4120cf:	push   0xffffff94
  4120d1:	pop    ss
  4120d2:	push   0x6bbddae8
  4120d7:	cmp    ah,dh
  4120d9:	loopne 0x4120b1
  4120db:	push   ds
  4120dc:	popa   
  4120dd:	gs cli 
  4120df:	bound  ecx,QWORD PTR [eax-0xf]
  4120e2:	cmp    ebp,DWORD PTR [ebp+0x2]
  4120e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120e6:	test   BYTE PTR [edi+eax*1+0x38],0xa0
  4120eb:	dec    eax
  4120ec:	fsub   DWORD PTR [edi-0x6860888f]
  4120f2:	cmp    dh,BYTE PTR [ebp+0x51230347]
  4120f8:	fwait
  4120f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120fa:	scas   eax,DWORD PTR es:[edi]
  4120fb:	pop    ebx
  4120fc:	(bad)  
  4120fd:	and    al,dl
  4120ff:	or     esp,DWORD PTR [edi-0x4d]
  412102:	ss out dx,eax
  412104:	sub    cl,cl
  412106:	std    
  412107:	leave  
  412108:	push   esi
  412109:	pusha  
  41210a:	idiv   DWORD PTR [edi]
  41210c:	or     dl,ah
  41210e:	pop    es
  41210f:	out    dx,al
  412110:	cmp    eax,0x9990b845
  412115:	sbb    ah,bl
  412117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412118:	cmp    al,BYTE PTR ds:0xbdcdddb8
  41211e:	inc    eax
  41211f:	pop    ecx
  412120:	cmp    edx,edi
  412122:	mov    dl,0x62
  412124:	inc    eax
  412125:	push   0x9
  412127:	push   ecx
  412128:	or     eax,0x75943c1b
  41212d:	(bad)  
  41212f:	inc    esi
  412130:	jp     0x41212b
  412132:	in     eax,dx
  412133:	(bad)  
  412135:	sar    ebx,cl
  412137:	pusha  
  412138:	ins    DWORD PTR es:[edi],dx
  412139:	sub    cl,BYTE PTR [ecx]
  41213b:	fcomp  DWORD PTR [ebx]
  41213d:	test   edi,ecx
  41213f:	fwait
  412140:	je     0x412197
  412142:	addr16 pushw cs
  412145:	and    al,0x21
  412147:	fs and edx,0x1ea845ab
  41214e:	jp     0x4120f3
  412150:	mov    bl,0xfb
  412152:	out    dx,al
  412153:	jmp    0x5c798cc2
  412158:	push   0xffffffc4
  41215a:	mov    ah,0x21
  41215c:	sub    DWORD PTR [ecx],esp
  41215e:	add    al,0xbb
  412160:	add    BYTE PTR [ecx],cl
  412162:	and    al,0x82
  412164:	cli    
  412165:	jnp    0x412102
  412167:	dec    eax
  412168:	xchg   esi,eax
  412169:	pop    esp
  41216a:	out    0xc1,eax
  41216c:	popf   
  41216d:	clc    
  41216e:	or     DWORD PTR ds:0x8cd65995,esp
  412174:	in     al,0x1e
  412176:	repz test DWORD PTR [esi+0x1a8742b6],0xe309cbb4
  412181:	xchg   ebx,eax
  412182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412183:	fwait
  412184:	mov    edi,0x4d6702b1
  412189:	call   0x9c1d:0x353892ed
  412190:	inc    eax
  412191:	cs in  eax,dx
  412193:	aam    0x61
  412195:	jae    0x412147
  412197:	fwait
  412198:	scas   al,BYTE PTR es:[edi]
  412199:	xchg   DWORD PTR gs:[eax],ebx
  41219c:	jg     0x41219f
  41219e:	aam    0x56
  4121a0:	not    esi
  4121a2:	mov    DWORD PTR [eax+0x57da99a8],ebx
  4121a8:	dec    esi
  4121a9:	push   esp
  4121aa:	mov    esi,0x37df11a
  4121af:	dec    edx
  4121b0:	les    ebp,FWORD PTR [esi+0x51]
  4121b3:	rol    al,1
  4121b5:	jno    0x412161
  4121b7:	out    0xa0,al
  4121b9:	sub    edx,ebx
  4121bb:	(bad)  
  4121bc:	pusha  
  4121bd:	xor    cl,BYTE PTR [esp+ebx*2]
  4121c0:	jg     0x4121d9
  4121c2:	bound  edi,QWORD PTR [ebp+0x6f]
  4121c5:	mov    ebx,ds
  4121c7:	add    eax,0x1ff01909
  4121cc:	sbb    dh,BYTE PTR [esi+edi*4+0x1e5c6a8e]
  4121d3:	lods   al,BYTE PTR ds:[esi]
  4121d4:	daa    
  4121d5:	jge    0x4121c1
  4121d7:	retf   0xf62f
  4121da:	sahf   
  4121db:	xor    bh,bh
  4121dd:	imul   esi,DWORD PTR [esi+0x3fe22cb9],0x76
  4121e4:	jecxz  0x4121d1
  4121e6:	push   es
  4121e7:	push   es
  4121e8:	lea    eax,[edi+0x3562f7ba]
  4121ee:	jb     0x412205
  4121f0:	mov    bh,0x6e
  4121f2:	test   bl,cl
  4121f4:	inc    eax
  4121f5:	jbe    0x4121ed
  4121f7:	dec    esp
  4121f8:	iret   
  4121f9:	pop    ebp
  4121fa:	fcom   QWORD PTR [esi]
  4121fc:	retf   0x95f6
  4121ff:	push   edx
  412200:	push   ebx
  412201:	push   ebx
  412202:	sub    BYTE PTR ds:0x516cd2ad,dl
  412208:	sub    eax,0x219ed4ef
  41220d:	cs jns 0x412216
  412210:	dec    esi
  412211:	xchg   edx,eax
  412212:	sahf   
  412213:	popa   
  412214:	arpl   WORD PTR [edi],ax
  412216:	in     al,dx
  412217:	jle    0x41227c
  412219:	fiadd  WORD PTR [eax+ebp*2]
  41221c:	rcr    BYTE PTR [ebp-0x55258c28],cl
  412222:	jns    0x4121ce
  412224:	into   
  412225:	int3   
  412226:	jbe    0x412204
  412228:	enter  0xecef,0xc2
  41222c:	inc    edi
  41222d:	xchg   ebp,eax
  41222e:	push   eax
  41222f:	test   DWORD PTR [esi-0x6fed1a95],ebp
  412235:	cs pop ebx
  412237:	mov    esi,0xd6b6ce63
  41223c:	jge    0x41225b
  41223e:	sbb    DWORD PTR [edx-0x51],edx
  412241:	mov    esp,DWORD PTR [ebx]
  412243:	lock push esi
  412245:	jle    0x41222c
  412247:	xchg   cl,dh
  412249:	in     al,0x84
  41224b:	shl    DWORD PTR [eax+ebx*8-0x54],1
  41224f:	add    BYTE PTR [esi+0x43],0x7c
  412253:	mov    esi,0xb4f24edb
  412258:	or     BYTE PTR [ebp-0x11],bh
  41225b:	call   0xc107bfb9
  412260:	mov    ds:0xc3c2a5b7,al
  412265:	push   ebp
  412266:	popf   
  412267:	mov    ds:0x1851cff9,al
  41226c:	ds ss pop ecx
  41226f:	jae    0x412201
  412271:	cmp    DWORD PTR [ebx],0xffffffdf
  412274:	(bad)  
  412275:	std    
  412276:	push   edi
  412277:	add    bl,ah
  412279:	fdivr  DWORD PTR [eax+0x75]
  41227c:	ret    
  41227d:	adc    al,BYTE PTR [ebx-0x51b360c5]
  412283:	jb     0x4122ec
  412285:	fnsave [edx+0xe4ca042]
  41228b:	lahf   
  41228c:	call   0x1e2e:0xa96277b6
  412293:	(bad)  
  412294:	out    0x69,al
  412296:	fwait
  412297:	rcr    DWORD PTR [ecx+0x77],1
  41229a:	stc    
  41229b:	mov    db1,esi
  41229e:	push   cs
  41229f:	aam    0xed
  4122a1:	ja     0x412299
  4122a3:	mov    ch,0x5e
  4122a5:	dec    edi
  4122a6:	adc    eax,0x5e9471fe
  4122ab:	pop    edi
  4122ac:	lods   eax,DWORD PTR ds:[esi]
  4122ad:	js     0x412277
  4122af:	mov    cl,0xde
  4122b1:	out    dx,al
  4122b2:	and    al,0xac
  4122b4:	or     BYTE PTR [esi],cl
  4122b6:	mov    ecx,0xf96e6766
  4122bb:	pop    ss
  4122bc:	stos   DWORD PTR es:[edi],eax
  4122bd:	sub    al,0x68
  4122bf:	stos   DWORD PTR es:[edi],eax
  4122c0:	pop    esi
  4122c1:	ss popa 
  4122c3:	mov    WORD PTR [esi-0x6f],fs
  4122c6:	mov    ds:0xbb8e3ffd,al
  4122cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122cc:	add    DWORD PTR [eax],edi
  4122ce:	sbb    dh,BYTE PTR es:[ebx+0x77]
  4122d2:	jb     0x412325
  4122d4:	in     eax,0x38
  4122d6:	jno    0x41231b
  4122d8:	dec    ebx
  4122d9:	pavgb  mm0,QWORD PTR [edx-0x2b]
  4122dd:	jae    0x4122a2
  4122df:	xor    al,0x62
  4122e1:	dec    ecx
  4122e2:	mov    ah,0x48
  4122e4:	sbb    esi,DWORD PTR [ebp-0x46]
  4122e7:	add    ah,BYTE PTR [ebx+0x74]
  4122ea:	add    al,0xa4
  4122ec:	retf   0x202
  4122ef:	or     BYTE PTR [edi],0xb3
  4122f2:	sub    al,0xd3
  4122f4:	push   0xffa6e70e
  4122f9:	pop    es
  4122fa:	mov    al,0x81
  4122fc:	sbb    BYTE PTR [ebp-0x4a],ch
  4122ff:	pop    esp
  412300:	cli    
  412301:	sub    BYTE PTR ds:0x4ef8be73,0xc1
  412308:	das    
  412309:	fdiv   QWORD PTR [ebx+ebx*2+0x38bca505]
  412310:	ins    DWORD PTR es:[edi],dx
  412311:	mov    bl,0x8f
  412313:	retf   
  412314:	xchg   edi,eax
  412315:	mov    al,ds:0x79974587
  41231a:	cli    
  41231b:	ins    DWORD PTR es:[edi],dx
  41231c:	add    al,0x74
  41231e:	jmp    0x412303
  412320:	loopne 0x41236a
  412322:	enter  0x2478,0xff
  412326:	repnz out 0x58,al
  412329:	and    BYTE PTR [esi+0x6fe64ba3],dl
  41232f:	aam    0x3f
  412331:	daa    
  412332:	clc    
  412333:	mov    ecx,DWORD PTR [esi+0x42]
  412336:	outs   dx,DWORD PTR ds:[esi]
  412337:	fwait
  412338:	mov    ebx,0x1189f192
  41233d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41233e:	push   ss
  41233f:	adc    bh,BYTE PTR [edi-0x3b]
  412342:	rcr    BYTE PTR [esi-0x3],0x56
  412346:	mov    bl,0xe
  412348:	sub    al,0xe2
  41234a:	mov    ah,BYTE PTR [edx+0x55]
  41234d:	mov    edx,0x2db410f3
  412352:	(bad)  
  412353:	and    DWORD PTR [ecx],ecx
  412355:	(bad)  
  412356:	imul   BYTE PTR [eax-0x39]
  412359:	mov    dl,0xdc
  41235b:	push   cs
  41235c:	dec    ebx
  41235d:	dec    ebp
  41235e:	dec    ebx
  41235f:	fnstcw WORD PTR [ecx+0x4]
  412362:	in     al,dx
  412363:	stos   DWORD PTR es:[edi],eax
  412364:	or     BYTE PTR ds:0x9da3fb48,0x61
  41236b:	out    0x32,al
  41236d:	jmp    0xea99035b
  412372:	loope  0x41232d
  412374:	(bad)  
  412375:	lds    edx,FWORD PTR [edx-0x1ab6a97a]
  41237b:	cmp    eax,0xd14c9c88
  412380:	ror    ebx,1
  412382:	mov    dl,0x1e
  412384:	jle    0x412315
  412386:	sbb    BYTE PTR [esi],dh
  412388:	popa   
  412389:	pop    esi
  41238a:	sub    edx,DWORD PTR [edi-0x7a]
  41238d:	call   0xc2e8112
  412392:	and    dh,BYTE PTR [edi]
  412394:	mov    esi,0x3efd8e91
  412399:	inc    edi
  41239a:	xor    dl,bh
  41239c:	dec    edi
  41239d:	test   al,0xd0
  41239f:	cli    
  4123a0:	push   ecx
  4123a1:	jmp    0x1341:0x884e9ce3
  4123a8:	adc    eax,0x2082d09c
  4123ad:	std    
  4123ae:	xor    cl,cl
  4123b0:	push   0x111ad6ba
  4123b5:	mov    ebp,edi
  4123b7:	push   ebx
  4123b8:	(bad)  [ecx+0x60]
  4123bb:	jmp    0xfcf5:0x9ef29d9a
  4123c2:	ror    BYTE PTR [eax+eiz*2+0x227a853c],0x49
  4123ca:	push   DWORD PTR [edx]
  4123cc:	loopne 0x412437
  4123ce:	dec    esi
  4123cf:	fisttp QWORD PTR [ecx+0x1e]
  4123d2:	push   esi
  4123d3:	mov    ebp,0x42f5873
  4123d8:	pop    edx
  4123d9:	js     0x4123ac
  4123db:	xchg   edx,eax
  4123dc:	adc    DWORD PTR [ecx-0x5a651220],edi
  4123e2:	push   cs
  4123e3:	mov    ecx,edi
  4123e5:	xor    eax,0xc7066488
  4123ea:	fadd   QWORD PTR gs:[ebx+edi*2+0x72219254]
  4123f2:	pushf  
  4123f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f4:	jmp    0x5d7d:0x1597677b
  4123fb:	test   BYTE PTR [edx-0x2a],bl
  4123fe:	rcl    edi,0x8d
  412401:	lahf   
  412402:	ror    ch,0x15
  412405:	fnstenv [edi+edx*8]
  412408:	push   eax
  412409:	call   0xa4bc0244
  41240e:	mov    ds:0xd37a5231,al
  412413:	not    dh
  412415:	jne    0x41242c
  412417:	jg     0x412422
  412419:	and    cl,BYTE PTR ds:[eax]
  41241c:	and    eax,0x7a4f5e1a
  412421:	push   ss
  412422:	hlt    
  412423:	sub    BYTE PTR [eax-0x31a52f93],ah
  412429:	jge    0x412425
  41242b:	es pmuludq mm4,mm0
  41242f:	dec    ecx
  412430:	push   0x761d3f67
  412435:	test   BYTE PTR [esi],al
  412437:	and    al,0x6b
  412439:	cmp    eax,0x25b8bb77
  41243e:	scas   eax,DWORD PTR es:[edi]
  41243f:	retf   0x9d20
  412442:	jp     0x412412
  412444:	mov    eax,ds:0xffb2bcdd
  412449:	rol    DWORD PTR gs:[ebx],0x83
  41244d:	mov    esp,0xa724cc06
  412452:	dec    eax
  412453:	dec    esi
  412454:	push   edi
  412455:	(bad)  
  412457:	je     0x412486
  412459:	mov    ebx,0x75b81a6a
  41245e:	mov    DWORD PTR [edi+eiz*8+0x32],edx
  412462:	xor    DWORD PTR [ebx],ebp
  412464:	cmp    ebp,DWORD PTR [ebp-0x1c]
  412467:	pop    esi
  412468:	add    DWORD PTR [eax-0x6d],0x50395360
  41246f:	jo     0x4124e3
  412471:	xchg   ebx,eax
  412472:	lock pop es
  412474:	fucomip st,st(3)
  412476:	jmp    0x9dbb:0xa63dd742
  41247d:	cwde   
  41247e:	fwait
  41247f:	aad    0x76
  412481:	push   cs
  412482:	push   ss
  412483:	test   BYTE PTR [ecx],0xb9
  412486:	lods   eax,DWORD PTR ds:[esi]
  412487:	jg     0x412456
  412489:	repz add ax,0xa95f
  41248e:	mov    ds:0xab3da3f9,eax
  412493:	mov    ah,0xbd
  412495:	mov    ebp,0xf8e65f46
  41249a:	hlt    
  41249b:	iret   
  41249c:	inc    ebp
  41249d:	and    BYTE PTR [ebx+0x5d626591],0x84
  4124a4:	cwde   
  4124a5:	inc    eax
  4124a6:	mov    esp,DWORD PTR [ecx+0x5f]
  4124a9:	sbb    DWORD PTR [ebx],edi
  4124ab:	cli    
  4124ac:	ud1    ebp,ecx
  4124af:	outs   dx,DWORD PTR ds:[esi]
  4124b0:	sahf   
  4124b1:	fucomp st(2)
  4124b3:	jmp    ebp
  4124b5:	adc    ah,BYTE PTR [esi-0x2dd7fafa]
  4124bb:	sbb    BYTE PTR [ecx+0x3f92748a],bl
  4124c1:	pop    edi
  4124c2:	in     eax,dx
  4124c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124c4:	fidiv  WORD PTR [esi-0x3]
  4124c7:	mov    esp,?
  4124c9:	push   ecx
  4124ca:	sar    BYTE PTR [edi],cl
  4124cc:	cmp    BYTE PTR [edx],dh
  4124ce:	stos   DWORD PTR es:[edi],eax
  4124cf:	mov    ah,0x9e
  4124d1:	daa    
  4124d2:	xor    eax,0x239a0d4a
  4124d7:	pop    ebp
  4124d8:	xchg   ebx,eax
  4124d9:	rcl    DWORD PTR [eax-0x2b],cl
  4124dc:	xor    eax,0xf080c86f
  4124e1:	xor    ebx,DWORD PTR [ebx+ebp*1]
  4124e4:	sub    dl,BYTE PTR [ebx-0x61ef0f4e]
  4124ea:	cmp    dl,ah
  4124ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ed:	loope  0x4124d6
  4124ef:	cmc    
  4124f0:	sar    ebx,0x7e
  4124f3:	fwait
  4124f4:	(bad)  
  4124f5:	mov    edx,0x259494c4
  4124fa:	rcl    ecx,0xa4
  4124fd:	pop    esi
  4124fe:	ror    DWORD PTR [edi+0x47a11539],cl
  412504:	jne    0x4124c2
  412506:	mov    ecx,0x4d4d29f3
  41250b:	inc    ebp
  41250c:	out    0xe8,al
  41250e:	icebp  
  41250f:	or     DWORD PTR ds:0x791ef57,esi
  412515:	and    dh,ch
  412517:	xchg   ecx,eax
  412518:	or     eax,0x6f597417
  41251d:	mov    bl,0x53
  41251f:	mov    bh,0xa6
  412521:	jmp    0xb660:0xc2d9dd6c
  412528:	or     DWORD PTR [esi-0x7c],edx
  41252b:	test   DWORD PTR [ebp-0x78],esp
  41252e:	idiv   BYTE PTR [ecx+ebp*2]
  412531:	std    
  412532:	xor    ecx,edi
  412534:	enter  0x7a45,0xcc
  412538:	cmp    DWORD PTR [edx-0x6a],esp
  41253b:	test   al,0xbb
  41253d:	pop    es
  41253e:	dec    edi
  41253f:	loopne 0x41254f
  412541:	and    DWORD PTR [edx],edx
  412543:	mov    ah,0xab
  412545:	mov    ah,0x1c
  412547:	xor    BYTE PTR [edi+0x694f98f4],dh
  41254d:	test   eax,0xeb9e7a21
  412552:	in     al,0x89
  412554:	loope  0x4124ef
  412556:	mov    al,BYTE PTR [ebx+0x708f1cf6]
  41255c:	push   cs
  41255d:	ins    BYTE PTR es:[edi],dx
  41255e:	pop    es
  41255f:	sahf   
  412560:	std    
  412561:	xchg   edi,eax
  412562:	mov    edx,0xacc9849a
  412567:	hlt    
  412568:	gs xor dl,cl
  41256b:	outs   dx,DWORD PTR ds:[esi]
  41256c:	mov    ah,0x45
  41256e:	nop
  41256f:	retf   0x2473
  412572:	dec    esi
  412573:	cdq    
  412574:	adc    eax,0x97f05dc3
  412579:	(bad)  
  41257a:	sbb    eax,0xc2f39362
  41257f:	rcl    DWORD PTR ds:0x40fc1015,cl
  412585:	sar    cl,cl
  412587:	retf   
  412588:	adc    cl,BYTE PTR [ebp+0x6e]
  41258b:	ret    
  41258c:	ss cld 
  41258e:	push   es
  41258f:	dec    esp
  412590:	mov    ebp,0xf9a3af58
  412595:	fstp   DWORD PTR [ecx+0x5a9eab71]
  41259b:	cld    
  41259c:	ror    DWORD PTR [ebx+ebp*1+0x39f9596f],cl
  4125a3:	or     cl,BYTE PTR [edi+0x65e4c230]
  4125a9:	mov    es,WORD PTR [ebx-0x24309cbc]
  4125af:	test   al,0xcd
  4125b1:	sbb    BYTE PTR [edi+0xb],dh
  4125b4:	(bad)  
  4125b5:	xchg   BYTE PTR [eax],bl
  4125b7:	mov    edx,DWORD PTR [ebx+0x7f72c60b]
  4125bd:	(bad)  
  4125be:	mov    BYTE PTR [esi+0x42],0xcb
  4125c2:	outs   dx,BYTE PTR ds:[esi]
  4125c3:	mov    edx,ebp
  4125c5:	push   ds
  4125c6:	jno    0x412587
  4125c8:	sbb    BYTE PTR [ecx],al
  4125ca:	cmp    ah,al
  4125cc:	mov    cl,0xb5
  4125ce:	mov    ch,0x44
  4125d0:	aaa    
  4125d1:	fcomp  DWORD PTR [ebx]
  4125d3:	push   esp
  4125d4:	push   edi
  4125d5:	call   0x8542:0xd35820ff
  4125dc:	neg    DWORD PTR [esp+ecx*1-0x4fe4bc90]
  4125e3:	(bad)  [ecx]
  4125e5:	mov    DWORD PTR [ebp-0x2d],edi
  4125e8:	adc    DWORD PTR [edx],ebx
  4125ea:	sub    bl,BYTE PTR [eax-0x41]
  4125ed:	jae    0x41265a
  4125ef:	aas    
  4125f0:	pop    eax
  4125f1:	test   BYTE PTR [edi],ah
  4125f3:	das    
  4125f4:	mov    BYTE PTR [esi+0xf],cl
  4125f7:	adc    al,0xf0
  4125f9:	iret   
  4125fa:	pop    es
  4125fb:	mov    dl,bh
  4125fd:	int3   
  4125fe:	jg     0x4125d5
  412600:	inc    edi
  412601:	xchg   BYTE PTR [ebp+ebp*2+0x52],dl
  412605:	into   
  412606:	jle    0x412663
  412608:	dec    eax
  412609:	pushf  
  41260a:	xor    ecx,0xaa90f04d
  412610:	cmp    DWORD PTR [ebx+ebp*4+0x642added],ebx
  412617:	ja     0x412605
  412619:	or     al,0x5c
  41261b:	arpl   WORD PTR [ecx-0x3a0d3308],cx
  412621:	push   ds
  412622:	mov    esp,0x8d2ecae6
  412627:	or     DWORD PTR [edi],0x648f6ae0
  41262d:	out    0x5,eax
  41262f:	inc    ecx
  412630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412631:	sar    ecx,1
  412633:	inc    esi
  412634:	and    eax,0xf2455d68
  412639:	pop    edi
  41263a:	or     esi,ebx
  41263c:	das    
  41263d:	cmp    al,0x55
  41263f:	or     BYTE PTR [ebx+0x7f],bh
  412642:	mov    al,0x81
  412644:	es dec ebp
  412646:	out    dx,al
  412647:	cmp    ebx,esp
  412649:	pop    ds
  41264a:	jnp    0x412662
  41264c:	fs xor bh,al
  41264f:	or     esi,DWORD PTR [eax-0x172cb3f]
  412655:	das    
  412656:	mov    ecx,0x8a0d133a
  41265b:	in     al,dx
  41265c:	or     bh,bh
  41265e:	dec    edx
  41265f:	ja     0x412656
  412661:	xchg   ebp,eax
  412662:	or     al,al
  412664:	cmp    ch,BYTE PTR [edi]
  412666:	or     edx,eax
  412668:	push   es
  412669:	dec    ecx
  41266a:	not    BYTE PTR [ecx+0x3a]
  41266d:	in     eax,0xe4
  41266f:	jbe    0x412632
  412671:	inc    esi
  412672:	inc    edi
  412673:	repz jg 0x41263a
  412676:	loop   0x4126b2
  412678:	jecxz  0x41265b
  41267a:	gs dec edi
  41267c:	ror    DWORD PTR [edx+0x17],0x2a
  412680:	stos   BYTE PTR es:[edi],al
  412681:	iret   
  412682:	call   0xc1baf5ae
  412687:	loopne 0x4126cf
  412689:	or     ebp,DWORD PTR [esi]
  41268b:	mov    ah,0x78
  41268d:	out    0x86,al
  41268f:	xchg   edi,eax
  412690:	call   0x914a:0x2bbd9d77
  412697:	push   ecx
  412698:	sbb    eax,0x9e24aa12
  41269d:	mov    esi,0xb94b92eb
  4126a2:	(bad)  
  4126a3:	xchg   ebx,eax
  4126a4:	loop   0x41263c
  4126a6:	sub    DWORD PTR [ebp+ebp*1+0x35276084],esi
  4126ad:	sbb    ecx,eax
  4126af:	and    bl,BYTE PTR [edx-0x6e527e12]
  4126b5:	pushf  
  4126b6:	mov    ah,0x6d
  4126b8:	sbb    ecx,DWORD PTR [esp+esi*1]
  4126bb:	sbb    eax,0xe5911ec4
  4126c0:	test   eax,0x62eb9a8d
  4126c5:	mov    WORD PTR [esi+eax*8+0x69],ds
  4126c9:	push   edi
  4126ca:	ja     0x412734
  4126cc:	sbb    BYTE PTR [ebx+0x1e],cl
  4126cf:	jnp    0x4126ab
  4126d1:	loop   0x4126d7
  4126d3:	bnd jne 0x4126f7
  4126d6:	jg     0x41268e
  4126d8:	test   al,0x22
  4126da:	shr    BYTE PTR [edx+0xf],0xa9
  4126de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126df:	jnp    0x412750
  4126e1:	pop    ecx
  4126e2:	stc    
  4126e3:	(bad)  
  4126e4:	or     al,0x9d
  4126e6:	or     DWORD PTR [edx+0x50],edi
  4126e9:	test   al,0x6a
  4126eb:	adc    ebx,edx
  4126ed:	dec    esp
  4126ee:	mov    ecx,0x49f2c4c
  4126f3:	inc    ebp
  4126f4:	mov    ebx,0xf4703f9b
  4126f9:	pop    edx
  4126fa:	mov    bl,0xdc
  4126fc:	aam    0xd9
  4126fe:	test   DWORD PTR [ebx-0x2c],ebx
  412701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412702:	sub    ecx,DWORD PTR [edx-0x3e7462f4]
  412708:	jmp    0xec81de27
  41270d:	jns    0x4126c9
  41270f:	stos   BYTE PTR es:[edi],al
  412710:	adc    edx,DWORD PTR [esi+0x62f1f71b]
  412716:	lods   al,BYTE PTR ds:[esi]
  412717:	shl    bh,cl
  412719:	fcom   DWORD PTR [edx]
  41271b:	ret    0x848c
  41271e:	cmp    esi,edx
  412720:	gs fwait
  412722:	scas   al,BYTE PTR es:[edi]
  412723:	call   0x4727:0xe35bda8a
  41272a:	repz div DWORD PTR ds:0xd4917a16
  412731:	fild   QWORD PTR [edx+0x62]
  412734:	inc    edx
  412735:	xor    DWORD PTR [edx-0x20df098],edi
  41273b:	ins    BYTE PTR es:[edi],dx
  41273c:	test   DWORD PTR [esi+0x73],edx
  41273f:	jno    0x412781
  412741:	inc    edi
  412742:	add    ebx,ecx
  412744:	push   0x9c6e6bca
  412749:	fucomip st,st(1)
  41274b:	(bad)  
  41274d:	xor    BYTE PTR ds:0x2b9d9d81,ch
  412753:	pshufd xmm3,XMMWORD PTR [edx],0x34
  412758:	mov    esp,0xc81017d4
  41275d:	loopne 0x412799
  41275f:	mov    DWORD PTR [ebx],edx
  412761:	xor    ch,BYTE PTR [edx-0x7a]
  412764:	dec    eax
  412765:	add    DWORD PTR [eax+0x63da9372],edx
  41276b:	and    al,0xf4
  41276d:	neg    BYTE PTR [ebp+0x76074614]
  412773:	shr    DWORD PTR [eax-0x26],0x59
  412777:	xchg   esp,eax
  412778:	mov    eax,0x3093f34d
  41277d:	jle    0x41277b
  41277f:	and    esp,DWORD PTR [edi+0x551418aa]
  412785:	sahf   
  412786:	movhps QWORD PTR [esi],xmm3
  412789:	mov    edx,eax
  41278b:	ret    0xbff4
  41278e:	push   ebp
  41278f:	xor    al,0x2c
  412791:	mov    ecx,DWORD PTR [ecx-0x5b369faa]
  412797:	je     0x41278e
  412799:	fisub  DWORD PTR ds:0x99aa67c5
  41279f:	out    0xc6,al
  4127a1:	mov    eax,ds:0x25bb5373
  4127a6:	mov    eax,ds
  4127a8:	or     BYTE PTR [ebp+esi*1+0x1c00407e],al
  4127af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b0:	not    BYTE PTR [eax-0x7408b771]
  4127b6:	xlat   BYTE PTR ds:[ebx]
  4127b7:	dec    ebp
  4127b8:	lods   eax,DWORD PTR ds:[esi]
  4127b9:	push   ebp
  4127ba:	mov    ds:0xc27c12a6,al
  4127bf:	int    0x78
  4127c1:	add    DWORD PTR [edi],ebp
  4127c3:	int    0xe1
  4127c5:	cmp    al,0x5d
  4127c7:	out    dx,eax
  4127c8:	xor    al,0xe2
  4127ca:	cdq    
  4127cb:	stc    
  4127cc:	push   esp
  4127cd:	mov    ch,BYTE PTR [edi]
  4127cf:	test   DWORD PTR [ebx-0x5272ec3],esp
  4127d5:	jno    0x4127c6
  4127d7:	xlat   BYTE PTR ds:[ebx]
  4127d8:	lea    esi,[esi+0x4212a179]
  4127de:	or     eax,DWORD PTR [edx]
  4127e0:	mov    ?,edi
  4127e2:	stos   BYTE PTR es:[edi],al
  4127e3:	dec    esp
  4127e4:	or     eax,DWORD PTR [edx+ebp*2]
  4127e7:	mov    dh,0xe7
  4127e9:	mov    bh,0x94
  4127eb:	mov    edi,0xa780e222
  4127f0:	xor    BYTE PTR [edi+ebx*2],ch
  4127f3:	sti    
  4127f4:	xchg   ebp,eax
  4127f5:	pop    edi
  4127f6:	or     ch,BYTE PTR [ebp+0x1f]
  4127f9:	jg     0x4127aa
  4127fb:	fnsave [eax]
  4127fd:	mov    dl,0xcb
  4127ff:	xor    eax,0x3408fb96
  412804:	mov    ecx,0xaac0292d
  412809:	push   ds
  41280a:	fucomip st,st(5)
  41280c:	fidivr WORD PTR [edx]
  41280e:	push   edx
  41280f:	xchg   ecx,eax
  412810:	dec    esi
  412811:	and    al,al
  412813:	aas    
  412814:	cdq    
  412815:	cmc    
  412816:	sub    edx,0xfffffff4
  412819:	out    dx,al
  41281a:	test   eax,0xa90bc602
  41281f:	sbb    dl,0x55
  412822:	mov    al,0xc1
  412824:	stos   DWORD PTR es:[edi],eax
  412825:	je     0x412884
  412827:	out    0xe4,eax
  412829:	sub    al,0x1a
  41282b:	and    al,0x9a
  41282d:	stc    
  41282e:	xchg   ecx,eax
  41282f:	pop    ss
  412830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412831:	fucomi st,st(6)
  412833:	fsub   DWORD PTR [edi]
  412835:	push   es
  412836:	jo     0x41282f
  412838:	loope  0x41280e
  41283a:	sbb    al,0xb
  41283c:	add    eax,0xc5c7273e
  412841:	mov    eax,ds:0x59262222
  412846:	sti    
  412847:	or     DWORD PTR [edx+0x10],eax
  41284a:	pop    ecx
  41284b:	jae    0x4128bb
  41284d:	aas    
  41284e:	cdq    
  41284f:	or     ah,BYTE PTR [edx+0x15]
  412852:	retf   0x65d8
  412855:	or     ebx,ebx
  412857:	(bad)  
  412858:	or     eax,0x51c96fbd
  41285d:	leave  
  41285e:	xchg   edi,eax
  41285f:	and    bh,al
  412861:	adc    DWORD PTR [ebx-0x70],ebx
  412864:	xchg   edx,eax
  412865:	int    0x7b
  412867:	inc    esp
  412868:	in     al,0x90
  41286a:	hlt    
  41286b:	dec    edx
  41286c:	(bad)  
  41286d:	xchg   ecx,eax
  41286e:	mov    edi,0x70aff67b
  412873:	dec    esi
  412874:	mov    bl,BYTE PTR [esi-0x6ebb325d]
  41287a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41287b:	cmc    
  41287c:	xchg   ebp,eax
  41287d:	stc    
  41287e:	imul   ecx,DWORD PTR [edi-0x74eb01cd],0xffffffdd
  412885:	mov    eax,ds:0x707c33a
  41288a:	jno    0x41287f
  41288c:	and    BYTE PTR [ebx],ah
  41288e:	cmp    BYTE PTR [edx],ah
  412890:	daa    
  412891:	loop   0x41282b
  412893:	jno    0x41283a
  412895:	mov    ds:0x10cc045a,eax
  41289a:	mov    esi,0xec9cb96a
  41289f:	cli    
  4128a0:	dec    ebp
  4128a1:	dec    eax
  4128a2:	sbb    BYTE PTR [ecx+0x18],al
  4128a5:	outs   dx,BYTE PTR ds:[esi]
  4128a6:	cmp    dl,BYTE PTR [ebx+0x884154f]
  4128ac:	mov    dh,0xdd
  4128ae:	adc    BYTE PTR [eax+eax*1],0x45
  4128b2:	sbb    esi,DWORD PTR ds:0x6ab30e15
  4128b8:	xchg   edi,eax
  4128b9:	in     al,dx
  4128ba:	out    dx,eax
  4128bb:	ficom  WORD PTR [esi]
  4128bd:	and    esp,eax
  4128bf:	pop    edi
  4128c0:	cmp    cl,bl
  4128c2:	pusha  
  4128c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c4:	loope  0x4128e5
  4128c6:	iret   
  4128c7:	and    al,0x43
  4128c9:	retf   0x87bd
  4128cc:	jle    0x41286f
  4128ce:	xchg   esi,eax
  4128cf:	vpsubw xmm6{k5},xmm7,XMMWORD PTR [ebx-0x3c987a54]
  4128d9:	or     eax,0x16bc65de
  4128de:	xor    esi,DWORD PTR [esi+eax*4]
  4128e1:	ret    0x7a54
  4128e4:	mov    BYTE PTR [edi+0x29],ch
  4128e7:	loop   0x41295c
  4128e9:	push   ss
  4128ea:	sub    esi,edi
  4128ec:	pop    ebx
  4128ed:	daa    
  4128ee:	clc    
  4128ef:	test   al,dl
  4128f1:	mov    ecx,esp
  4128f3:	in     eax,0x1f
  4128f5:	out    0x4f,al
  4128f7:	jmp    0x412937
  4128f9:	jae    0x412925
  4128fb:	mov    gs,WORD PTR [ecx+0x1c604582]
  412901:	sub    bl,bl
  412903:	cmp    dl,BYTE PTR [edx-0x21]
  412906:	sub    edi,edx
  412908:	mov    edx,0x8a5ace7c
  41290d:	mov    ch,bh
  41290f:	jb     0x41295f
  412911:	shr    DWORD PTR [edx+0x35],cl
  412914:	ss and ah,bl
  412917:	add    DWORD PTR [edx+0x5e1bb22b],ebp
  41291d:	cmp    DWORD PTR [ebx-0x18],eax
  412920:	rol    dh,cl
  412922:	test   al,0xf
  412924:	cmp    ebp,DWORD PTR [edi-0xa]
  412927:	xchg   edx,eax
  412928:	rcr    BYTE PTR [eax],cl
  41292a:	add    al,0x2f
  41292c:	inc    ebp
  41292d:	xchg   DWORD PTR [ebp-0x6bd6791d],esi
  412933:	jmp    0x82acbec4
  412938:	and    al,0x90
  41293a:	sub    al,0x22
  41293c:	xlat   BYTE PTR ds:[ebx]
  41293d:	stos   BYTE PTR es:[edi],al
  41293e:	clc    
  41293f:	outs   dx,DWORD PTR ds:[esi]
  412940:	mov    al,0xf5
  412942:	xchg   esi,eax
  412943:	pop    edx
  412944:	cmp    eax,0x307ffc9d
  412949:	maxps  xmm2,xmm6
  41294c:	dec    ebp
  41294d:	push   edx
  41294e:	xor    esp,edi
  412950:	sahf   
  412951:	cwde   
  412952:	and    eax,DWORD PTR [edx]
  412954:	xchg   ebp,eax
  412955:	test   eax,0xe03a3697
  41295a:	cdq    
  41295b:	xchg   BYTE PTR [ecx-0x16ae8c8f],ah
  412961:	xchg   ecx,eax
  412962:	pop    edi
  412963:	mov    edi,edx
  412965:	popf   
  412966:	pop    esp
  412967:	or     al,0xbf
  412969:	mov    ebp,0x32fb8e61
  41296e:	hlt    
  41296f:	adc    BYTE PTR [ecx+0x342793ab],0xdb
  412976:	inc    edi
  412977:	xor    ah,BYTE PTR [edx+0x3e]
  41297a:	fimul  DWORD PTR [esi+0x59cd1d2e]
  412980:	in     eax,dx
  412981:	cld    
  412982:	lods   eax,DWORD PTR ds:[esi]
  412983:	or     DWORD PTR [ebx-0x68b19bb1],edi
  412989:	or     al,0xbb
  41298b:	lods   al,BYTE PTR ds:[esi]
  41298c:	fcom   DWORD PTR [ebx]
  41298e:	lods   eax,DWORD PTR ds:[esi]
  41298f:	inc    ebx
  412990:	into   
  412991:	sbb    ebx,ebp
  412993:	push   edi
  412994:	inc    eax
  412995:	test   al,0x73
  412997:	imul   edx,DWORD PTR [ecx+ecx*1-0x44],0x3c
  41299c:	dec    esp
  41299d:	mov    eax,ds:0xde029200
  4129a2:	mov    ecx,0x8ae0ab6d
  4129a7:	pop    ecx
  4129a8:	sub    BYTE PTR [ebx-0x73],bl
  4129ab:	dec    ecx
  4129ac:	dec    edi
  4129ad:	sbb    BYTE PTR [edi],dl
  4129af:	xor    eax,0x85c545ba
  4129b4:	and    al,cl
  4129b6:	mov    esi,0xb1a5f663
  4129bb:	sahf   
  4129bc:	dec    eax
  4129bd:	pop    edx
  4129be:	add    al,0x53
  4129c0:	stos   BYTE PTR es:[edi],al
  4129c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c2:	add    ebx,DWORD PTR [ebx+0x24]
  4129c5:	pop    esi
  4129c6:	push   edi
  4129c7:	xchg   BYTE PTR ds:0x3628ea09,bh
  4129cd:	out    dx,al
  4129ce:	adc    BYTE PTR [eax+0x48],0xbc
  4129d2:	dec    ebp
  4129d3:	cli    
  4129d4:	xchg   edx,eax
  4129d5:	lods   al,BYTE PTR ds:[esi]
  4129d6:	(bad)  
  4129d7:	test   al,0xaa
  4129d9:	mov    ebx,0x4a0832e
  4129de:	loope  0x4129c6
  4129e0:	pop    ebp
  4129e1:	shl    DWORD PTR [edx],0xaa
  4129e4:	pop    ebp
  4129e5:	inc    ebx
  4129e6:	inc    DWORD PTR [ecx-0x532cad3b]
  4129ec:	retf   
  4129ed:	call   0x5cf:0x98d42b5b
  4129f4:	lock (bad) 
  4129f6:	mov    esp,0x6e21298e
  4129fb:	xchg   ax,ax
  4129fd:	lea    esp,[eax-0x17]
  412a00:	lock add al,0x79
  412a03:	or     edx,DWORD PTR [eax]
  412a05:	retf   
  412a06:	retf   
  412a07:	outs   dx,DWORD PTR ds:[esi]
  412a08:	test   eax,0xf8f236e
  412a0d:	aaa    
  412a0e:	out    dx,eax
  412a0f:	add    BYTE PTR [ebp-0x1],0xe3
  412a13:	xchg   edx,eax
  412a14:	dec    ecx
  412a15:	push   ds
  412a16:	mov    ?,esi
  412a18:	push   edi
  412a19:	loop   0x4129ce
  412a1b:	andnps xmm6,xmm3
  412a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a1f:	enter  0x728e,0x78
  412a23:	pusha  
  412a24:	call   0x2a308b08
  412a29:	and    BYTE PTR [ecx+0x5c703838],al
  412a2f:	sub    ebp,DWORD PTR [eax+ebx*2]
  412a32:	cmp    DWORD PTR [edx+edi*4],0x27
  412a36:	cmp    dl,BYTE PTR [ecx]
  412a38:	or     ebx,DWORD PTR ds:0xa6518847
  412a3e:	mov    bl,al
  412a40:	(bad)  
  412a41:	ja     0x412aa2
  412a43:	pop    eax
  412a44:	mov    al,0x95
  412a46:	fcmovbe st,st(6)
  412a48:	mov    DWORD PTR [ebx-0x44122acd],eax
  412a4e:	jmp    0x89d3:0x8f5e4cf0
  412a55:	sbb    ebx,DWORD PTR [edx+edi*1+0x59b1b39c]
  412a5c:	mov    edi,0x7b35f0fd
  412a61:	mov    dl,0x49
  412a63:	mov    ebx,0x7a218fa
  412a68:	data16 out dx,al
  412a6a:	nop
  412a6b:	hlt    
  412a6c:	and    DWORD PTR ds:0xa7144935,esp
  412a72:	jmp    0x29115683
  412a77:	and    ebp,eax
  412a79:	push   cs
  412a7a:	xchg   ecx,eax
  412a7b:	add    eax,0x9797c441
  412a80:	kxnorw k2,k7,k7
  412a84:	aaa    
  412a85:	call   0x7715b739
  412a8a:	arpl   WORD PTR [esp+eax*4],bp
  412a8d:	xor    eax,0x32afcc31
  412a92:	ret    0x917
  412a95:	cmp    eax,0xdd7e455d
  412a9a:	sub    esi,DWORD PTR [ecx-0x32]
  412a9d:	adc    eax,0x880b546e
  412aa2:	fcom   QWORD PTR [eax-0x4c]
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	and    eax,0xa58bb6d6
  412aab:	pop    ds
  412aac:	shl    DWORD PTR [ecx+0x30f64dd1],1
  412ab2:	fisubr DWORD PTR [ebx+0x20]
  412ab5:	outs   dx,BYTE PTR ds:[esi]
  412ab6:	and    BYTE PTR [edi-0x63],bl
  412ab9:	mov    ch,0x8f
  412abb:	xchg   edi,eax
  412abc:	xchg   ecx,eax
  412abd:	pop    ebp
  412abe:	pushf  
  412abf:	mov    eax,0x6282de11
  412ac4:	inc    edx
  412ac5:	mov    cl,dl
  412ac7:	inc    ebp
  412ac8:	int3   
  412ac9:	enter  0xffa3,0x81
  412acd:	pop    ds
  412ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412acf:	sub    DWORD PTR [esi-0x4a],esi
  412ad2:	sbb    BYTE PTR [eax+0x3c],ch
  412ad5:	loop   0x412b38
  412ad7:	loope  0x412a8f
  412ad9:	cmp    ah,BYTE PTR [esp+eax*4-0x64fd7574]
  412ae0:	sbb    ebp,DWORD PTR ds:0xf17dea10
  412ae6:	bound  edx,QWORD PTR [ebx-0x43610e68]
  412aec:	imul   esp,DWORD PTR [esp+edi*1],0xffffffab
  412af0:	add    al,0xde
  412af2:	sub    BYTE PTR [esi],bl
  412af4:	test   eax,0x1a7a8ff9
  412af9:	or     esi,ebp
  412afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afc:	pop    ecx
  412afd:	push   ds
  412afe:	push   esp
  412aff:	adc    eax,0x9e626cbc
  412b04:	mov    eax,0xf27802fd
  412b09:	and    BYTE PTR [eax+0x61a0ac4b],dl
  412b0f:	out    0xd,eax
  412b11:	jl     0x412a9a
  412b13:	enter  0xe514,0xca
  412b17:	xchg   ecx,eax
  412b18:	stos   DWORD PTR es:[edi],eax
  412b19:	adc    DWORD PTR [edx],eax
  412b1b:	jmp    0x3d35dd9
  412b20:	and    eax,0xd65c0c83
  412b25:	pushf  
  412b26:	pushf  
  412b27:	pop    eax
  412b28:	dec    esp
  412b29:	push   esp
  412b2a:	imul   eax,DWORD PTR [edx+ecx*4+0x2c09fe5d],0xf57dea9a
  412b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b36:	push   eax
  412b37:	loop   0x412b9e
  412b39:	fcom   DWORD PTR [esp+eax*4+0x4ec5db66]
  412b40:	sub    ebx,DWORD PTR [edx]
  412b42:	fisttp DWORD PTR [ecx]
  412b44:	push   edi
  412b45:	push   es
  412b46:	and    ch,0x1c
  412b49:	aaa    
  412b4a:	call   0xaca6:0xf4f2392f
  412b51:	inc    edx
  412b52:	add    edx,esp
  412b54:	std    
  412b55:	jecxz  0x412b6f
  412b57:	mov    al,ds:0xf53f40c1
  412b5c:	arpl   WORD PTR [ecx-0x6e],di
  412b5f:	loope  0x412ae3
  412b61:	sub    BYTE PTR [eax],ch
  412b63:	pop    ecx
  412b64:	ret    
  412b65:	inc    eax
  412b66:	call   0x9bcf5ba1
  412b6b:	popa   
  412b6c:	mov    dl,0xe5
  412b6e:	dec    esp
  412b6f:	xor    al,0x17
  412b71:	mov    esp,0x40b95f61
  412b76:	not    BYTE PTR [ecx]
  412b78:	jno    0x412b78
  412b7a:	(bad)  
  412b7c:	pop    ss
  412b7d:	repnz cmp ebx,DWORD PTR cs:[ebx-0x41bb0ad3]
  412b85:	cs out dx,eax
  412b87:	adc    ch,BYTE PTR [esi-0x3b]
  412b8a:	mov    al,0x35
  412b8c:	shl    DWORD PTR [eax+0x33364e8f],0x52
  412b93:	(bad)
  412b97:	fsub   DWORD PTR [edx+edx*4]
  412b9a:	cdq    
  412b9b:	pop    esp
  412b9c:	stos   BYTE PTR es:[edi],al
  412b9d:	fld    DWORD PTR [ebp-0xf5bc917]
  412ba3:	ret    
  412ba4:	aad    0x26
  412ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba7:	stos   DWORD PTR es:[edi],eax
  412ba8:	cmp    DWORD PTR [ebx-0x5b],0xcfcfa85e
  412baf:	rcr    esi,cl
  412bb1:	dec    ebp
  412bb2:	adc    eax,0x4e177f12
  412bb7:	cdq    
  412bb8:	pop    edi
  412bb9:	inc    esp
  412bba:	inc    ebx
  412bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbc:	inc    edi
  412bbd:	mov    dh,0xcf
  412bbf:	(bad)  
  412bc0:	arpl   WORD PTR [ebx],di
  412bc2:	js     0x412b53
  412bc4:	mov    al,ds:0xf39dff45
  412bc9:	mov    eax,ds:0x5d18dc52
  412bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bcf:	sub    DWORD PTR [eax+0xfca652],edx
  412bd5:	jl     0x412c52
  412bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd8:	jg     0x412bc5
  412bda:	or     edx,DWORD PTR [ecx]
  412bdc:	jg     0x412b87
  412bde:	daa    
  412bdf:	and    eax,DWORD PTR [edi+0xb]
  412be2:	mov    ebx,0xd1119e43
  412be7:	cwde   
  412be8:	and    eax,0xcd4eaef7
  412bed:	xlat   BYTE PTR ds:[ebx]
  412bee:	les    ecx,FWORD PTR [ecx+0x7328438e]
  412bf4:	adc    DWORD PTR [edx],esp
  412bf6:	push   edx
  412bf7:	dec    ebx
  412bf8:	xor    ecx,esi
  412bfa:	(bad)  
  412bfb:	out    dx,al
  412bfc:	push   0xffffff98
  412bfe:	arpl   WORD PTR ds:0x751f0906,bx
  412c04:	push   edx
  412c05:	aad    0xa8
  412c07:	fist   DWORD PTR [edx+0x49]
  412c0a:	ror    BYTE PTR [ecx],0x94
  412c0d:	jmp    0x412c7e
  412c0f:	je     0x412c41
  412c11:	mov    ecx,0xcb2809a6
  412c16:	dec    ecx
  412c17:	cmp    ch,BYTE PTR [edi+0x2397344e]
  412c1d:	repz cld 
  412c1f:	jmp    0xd92f:0xb4cc57e4
  412c26:	retf   
  412c27:	cmp    esp,DWORD PTR [ebx+0x3eceff46]
  412c2d:	pop    es
  412c2e:	call   0xfdf7:0x8c3f7218
  412c35:	push   esp
  412c36:	std    
  412c37:	mov    eax,ds:0x54e3fcb9
  412c3c:	jl     0x412c75
  412c3e:	jno    0x412c66
  412c40:	pop    edx
  412c41:	lods   eax,DWORD PTR ds:[esi]
  412c42:	mov    al,ds:0xde61873f
  412c47:	cmp    BYTE PTR [edx],ah
  412c49:	dec    edi
  412c4a:	jmp    0x6fbad972
  412c4f:	push   ebx
  412c50:	arpl   WORD PTR [edx],ax
  412c52:	jae    0x412cbc
  412c54:	cmp    ah,BYTE PTR [esi]
  412c56:	push   eax
  412c57:	hlt    
  412c58:	sub    eax,DWORD PTR [edx+0x1fbd2e60]
  412c5e:	aas    
  412c5f:	les    esi,FWORD PTR [eax+0x4ad7eb88]
  412c65:	lahf   
  412c66:	movq   QWORD PTR [esi-0x23],mm1
  412c6a:	cdq    
  412c6b:	std    
  412c6c:	add    edx,DWORD PTR [ebx-0x58f02d3d]
  412c72:	pop    esi
  412c73:	pop    DWORD PTR [esi-0x41]
  412c76:	dec    esp
  412c77:	fst    QWORD PTR [ecx+0xa76e647]
  412c7d:	mov    dh,0x46
  412c7f:	inc    edi
  412c80:	push   ebx
  412c81:	jecxz  0x412c58
  412c83:	(bad)  
  412c84:	jmp    0x412c33
  412c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c87:	sar    DWORD PTR [ebx+0x3a0462a6],1
  412c8d:	lods   eax,DWORD PTR ds:[esi]
  412c8e:	mov    ah,0x97
  412c90:	add    bh,BYTE PTR [ebx]
  412c92:	sar    DWORD PTR [ebp+0x3846a450],0xd1
  412c99:	add    edi,DWORD PTR [edi+0x18157f76]
  412c9f:	push   es
  412ca0:	or     DWORD PTR [ebx+0x20],ebx
  412ca3:	into   
  412ca4:	in     eax,dx
  412ca5:	push   cs
  412ca6:	xor    esi,edi
  412ca8:	out    0x1a,al
  412caa:	test   DWORD PTR [eax],ebp
  412cac:	imul   esp,DWORD PTR [ebx],0x165835e3
  412cb2:	xlat   BYTE PTR ds:[ebx]
  412cb3:	les    esp,FWORD PTR ds:0xd4f1dfea
  412cb9:	pusha  
  412cba:	jecxz  0x412cf2
  412cbc:	retf   
  412cbd:	test   al,0xf0
  412cbf:	test   DWORD PTR [ebp-0x10c80bf7],0x29334b4c
  412cc9:	push   ebp
  412cca:	es es jae 0x412ca5
  412cce:	mov    ebx,0xd3d07ca6
  412cd3:	dec    ebx
  412cd4:	stos   DWORD PTR es:[edi],eax
  412cd5:	and    cl,cl
  412cd7:	imul   ebx,DWORD PTR [ebp+edi*2-0x321b12bf],0xb372922c
  412ce2:	sti    
  412ce3:	jg     0x412ca4
  412ce5:	xor    eax,0x525a3188
  412cea:	outs   dx,BYTE PTR ds:[esi]
  412ceb:	xlat   BYTE PTR ds:[ebx]
  412cec:	xchg   DWORD PTR [ebx+0x23],edx
  412cef:	aas    
  412cf0:	or     edi,DWORD PTR [edi+0x3a7987e9]
  412cf6:	repz fstp st(5)
  412cf9:	(bad)  
  412cfa:	pushf  
  412cfb:	sbb    bh,bl
  412cfd:	ins    BYTE PTR es:[edi],dx
  412cfe:	std    
  412cff:	add    BYTE PTR [ecx-0x6],cl
  412d02:	push   0x4516e5f5
  412d07:	add    bl,BYTE PTR [eax+0x6d]
  412d0a:	rcr    DWORD PTR [edi+0x68],0x4b
  412d0e:	into   
  412d0f:	bound  ebp,QWORD PTR ds:0x7c32be3e
  412d15:	out    dx,al
  412d16:	bound  edi,QWORD PTR [esp+eax*2]
  412d19:	test   eax,0x3c6a9798
  412d1e:	xchg   ebp,eax
  412d1f:	mov    al,ds:0x5e1330e4
  412d24:	and    DWORD PTR [edx-0x48],ebp
  412d27:	in     al,0x9d
  412d29:	sub    BYTE PTR [ecx-0x74],ah
  412d2c:	out    dx,eax
  412d2d:	mov    ecx,ecx
  412d2f:	in     eax,dx
  412d30:	fs xor al,0xe3
  412d33:	xchg   ebx,ebx
  412d35:	cwde   
  412d36:	push   ss
  412d37:	jmp    0x7da004b6
  412d3c:	ss inc esp
  412d3e:	ret    
  412d3f:	mov    bh,0x61
  412d41:	and    BYTE PTR [esi+0x2a],0x2c
  412d45:	add    DWORD PTR [ebx-0x315e445f],0xd2b8f51b
  412d4f:	pop    edx
  412d50:	sub    ch,cl
  412d52:	daa    
  412d53:	inc    esi
  412d54:	or     esp,DWORD PTR gs:[edi]
  412d57:	shr    BYTE PTR [esi-0xbd5d0ee],cl
  412d5d:	mov    eax,ds:0xb6ccee3b
  412d63:	jbe    0x412d4a
  412d65:	cli    
  412d66:	lahf   
  412d67:	mov    ah,0x28
  412d69:	inc    eax
  412d6a:	out    dx,eax
  412d6b:	cmp    DWORD PTR [eax],ebp
  412d6d:	xor    eax,DWORD PTR [ecx]
  412d6f:	out    0x2d,al
  412d71:	fadd   st,st(5)
  412d73:	mov    edi,0xc833076f
  412d78:	and    al,0x5b
  412d7a:	mov    esi,0x3b7ad9bc
  412d7f:	jne    0x412d85
  412d81:	cmp    BYTE PTR [esi],al
  412d83:	cmp    BYTE PTR [edx-0x414fe617],cl
  412d89:	mov    ah,0x18
  412d8b:	dec    edx
  412d8c:	add    edi,DWORD PTR [eax]
  412d8e:	icebp  
  412d8f:	or     DWORD PTR [edx-0x731a1ce],esi
  412d95:	fisttp QWORD PTR [ecx+0x24ddf001]
  412d9b:	lods   al,BYTE PTR ds:[esi]
  412d9c:	xchg   ebx,eax
  412d9d:	out    0x9d,eax
  412d9f:	adc    BYTE PTR [eax+0x50af247c],dh
  412da5:	cmp    bl,BYTE PTR [edi+0x7e]
  412da8:	sbb    edx,esp
  412daa:	inc    edx
  412dab:	outs   dx,BYTE PTR ds:[esi]
  412dac:	mov    cl,0xe5
  412dae:	pop    edi
  412daf:	popa   
  412db0:	xchg   ecx,eax
  412db1:	mov    bh,0xe3
  412db3:	add    eax,0x511cb76
  412db8:	lds    ecx,FWORD PTR [ecx]
  412dba:	jecxz  0x412e0b
  412dbc:	dec    esp
  412dbd:	vmwrite esi,DWORD PTR [edx-0x461bd460]
  412dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc5:	mov    DWORD PTR [ebx],edi
  412dc7:	jmp    0x412d62
  412dc9:	sbb    edi,esi
  412dcb:	adc    DWORD PTR [esi],0xc9f4cfe2
  412dd1:	rcl    DWORD PTR [edi+ebp*2],1
  412dd4:	cmp    ecx,esp
  412dd6:	pusha  
  412dd7:	js     0x412d8f
  412dd9:	pop    ecx
  412dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ddb:	and    DWORD PTR [edi+0x18],esi
  412dde:	mov    edx,DWORD PTR [edx-0xe3cf7c9]
  412de4:	jg     0x412d7d
  412de6:	fs adc al,0xcf
  412de9:	xchg   esp,eax
  412dea:	into   
  412deb:	jns    0x412d96
  412ded:	outs   dx,DWORD PTR ds:[esi]
  412dee:	cmp    ebp,DWORD PTR [ecx+edx*8-0x46]
  412df2:	jae    0x412d9e
  412df4:	enter  0x554e,0xb9
  412df8:	or     DWORD PTR [eax+0x724a72e4],esi
  412dfe:	pop    edi
  412dff:	mov    edi,0xea2ae465
  412e05:	mov    ch,0xd3
  412e07:	aam    0x2d
  412e09:	test   eax,0x16d8a531
  412e0e:	jge    0x412e48
  412e10:	repnz aam 0x11
  412e13:	push   eax
  412e14:	xchg   edx,eax
  412e15:	aaa    
  412e16:	pop    ecx
  412e17:	jmp    0xe226:0x426a9996
  412e1e:	mov    dl,0x84
  412e20:	popa   
  412e21:	or     al,0xa9
  412e23:	jp     0x412de4
  412e25:	leave  
  412e26:	std    
  412e27:	callw  0x4dd6
  412e2b:	lods   eax,DWORD PTR ds:[esi]
  412e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e2d:	dec    ecx
  412e2e:	sub    eax,0xaebab568
  412e33:	mov    ecx,0x58db0e9d
  412e38:	leave  
  412e39:	lods   eax,DWORD PTR ds:[esi]
  412e3a:	push   edi
  412e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e3c:	adc    al,0xe
  412e3e:	push   esi
  412e3f:	sub    eax,ebp
  412e41:	xchg   ebx,eax
  412e42:	push   0xc
  412e44:	or     ah,0x89
  412e47:	push   cs
  412e48:	test   eax,0x7b94e963
  412e4d:	and    edi,edi
  412e4f:	push   esi
  412e50:	cmp    ebp,0x93ef6b45
  412e56:	jae    0x412e7f
  412e58:	clc    
  412e59:	in     al,dx
  412e5a:	add    al,0xda
  412e5c:	fidivr DWORD PTR [esi+0x5a7a3d4d]
  412e62:	adc    eax,0x6eeab26c
  412e67:	add    eax,0x1598fa7d
  412e6c:	fld    DWORD PTR [ecx-0x25]
  412e6f:	outs   dx,DWORD PTR ds:[esi]
  412e70:	stos   BYTE PTR es:[edi],al
  412e71:	xchg   esp,eax
  412e72:	stc    
  412e73:	sbb    BYTE PTR [edx-0x4d],bh
  412e76:	sub    ecx,DWORD PTR [esi+0x69c43f5e]
  412e7c:	fsubr  QWORD PTR [edi+edi*4]
  412e7f:	mov    cl,0x8a
  412e81:	xor    DWORD PTR [edi+0x3f4c0d27],ebx
  412e87:	into   
  412e88:	(bad)  
  412e89:	loope  0x412e26
  412e8b:	mov    eax,ds:0x7f3af881
  412e90:	aam    0xee
  412e92:	add    edi,DWORD PTR ds:0x4afe1c81
  412e98:	fild   DWORD PTR [ebp-0x6ff74a30]
  412e9e:	xor    edx,DWORD PTR [ebx]
  412ea0:	pop    es
  412ea1:	lds    esp,FWORD PTR [eax+0x73]
  412ea4:	data16 adc ch,BYTE PTR ds:[ebx]
  412ea8:	inc    ecx
  412ea9:	mov    ds:0xf93a7248,eax
  412eae:	jmp    0x3d52:0x655beed4
  412eb5:	or     eax,0x49d4165f
  412eba:	sbb    edx,DWORD PTR ds:0x33e513a3
  412ec0:	xchg   bl,ch
  412ec2:	and    DWORD PTR cs:[ebp-0x4f9096e9],0x40b6b3c0
  412ecd:	call   0x49f7c989
  412ed2:	mov    bh,0x9b
  412ed4:	mov    esi,0xec889b8c
  412ed9:	dec    ebx
  412eda:	(bad)  
  412edb:	jge    0x412f27
  412edd:	iret   
  412ede:	pop    edi
  412edf:	loope  0x412eeb
  412ee1:	pop    edi
  412ee2:	pop    eax
  412ee3:	imul   edi,DWORD PTR [edx],0x12
  412ee6:	arpl   WORD PTR [edi+0x434fda68],di
  412eec:	aad    0xa7
  412eee:	into   
  412eef:	hlt    
  412ef0:	jp     0x412ec4
  412ef2:	add    bh,BYTE PTR [edx+edx*1]
  412ef5:	jae    0x412f72
  412ef7:	pop    ebp
  412ef8:	mov    al,0x56
  412efa:	mov    DWORD PTR [ecx],esi
  412efc:	xchg   ebp,eax
  412efd:	or     eax,0x6b3a28b1
  412f02:	and    BYTE PTR [esi],0x12
  412f05:	bound  edx,QWORD PTR [eax+0x709b5da2]
  412f0b:	dec    esp
  412f0c:	xchg   edi,eax
  412f0d:	xor    ebp,DWORD PTR [edx+0x4b]
  412f10:	es popf 
  412f12:	sar    eax,0x1b
  412f15:	mov    dl,0x48
  412f17:	(bad)  
  412f18:	in     eax,0x35
  412f1a:	and    DWORD PTR [ebp-0x763c218e],edx
  412f20:	ss enter 0x4c22,0x19
  412f25:	mov    ebp,0x207c57fb
  412f2a:	xchg   edx,eax
  412f2b:	pop    edi
  412f2c:	out    dx,eax
  412f2d:	inc    ebx
  412f2e:	mov    al,0xd7
  412f30:	lea    esp,[eax+ebx*4+0x75]
  412f34:	out    0x44,al
  412f36:	and    al,0xe2
  412f38:	iret   
  412f39:	mov    ah,0xae
  412f3b:	pop    ds
  412f3c:	xchg   edi,eax
  412f3d:	adc    ch,BYTE PTR [ecx-0x7a]
  412f40:	mov    ebp,ecx
  412f42:	jnp    0x412ee7
  412f44:	add    eax,0xc895d432
  412f49:	xor    BYTE PTR [edx+0x49],ah
  412f4c:	xchg   ecx,eax
  412f4d:	or     cl,BYTE PTR [edx]
  412f4f:	pop    edi
  412f50:	and    eax,0xadbf0bcb
  412f55:	mov    esp,0xc1b2f58e
  412f5a:	fwait
  412f5b:	clc    
  412f5c:	aaa    
  412f5d:	jle    0x412fac
  412f5f:	out    dx,eax
  412f60:	xchg   BYTE PTR [edi],dh
  412f62:	and    al,BYTE PTR [edi]
  412f64:	and    eax,0xc145288a
  412f69:	dec    edi
  412f6a:	jp     0x412f8f
  412f6c:	gs in  eax,0x60
  412f6f:	pushf  
  412f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f71:	mov    esp,0xc9a5c60f
  412f76:	cmp    eax,0xae6db404
  412f7b:	dec    esp
  412f7c:	jns    0x412fca
  412f7e:	mov    edi,0x492d88f9
  412f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f84:	aam    0xc2
  412f86:	gs ret 
  412f88:	ja     0x413008
  412f8a:	pop    eax
  412f8b:	aam    0xc4
  412f8d:	push   ebp
  412f8e:	xor    al,0x52
  412f90:	mov    ecx,0x1184b5e4
  412f95:	xchg   edi,eax
  412f96:	shl    edi,cl
  412f98:	or     cl,BYTE PTR [edx]
  412f9a:	sbb    BYTE PTR [edx],bh
  412f9c:	xor    DWORD PTR [eax+edi*8-0x27],ebp
  412fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa1:	sbb    ebx,ebp
  412fa3:	fist   WORD PTR [ecx]
  412fa5:	add    DWORD PTR [esp+edi*1],esp
  412fa8:	dec    ebp
  412fa9:	out    dx,al
  412faa:	or     al,0x79
  412fac:	loopne 0x412fb2
  412fae:	hlt    
  412faf:	icebp  
  412fb0:	jno    0x412fb9
  412fb2:	sub    DWORD PTR ss:[esi+ebp*4],0xd6f748ff
  412fba:	dec    ebx
  412fbb:	sub    DWORD PTR [ebx+0x59b1385a],edx
  412fc1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc3:	xchg   BYTE PTR [ebp+0x75],dl
  412fc6:	pusha  
  412fc7:	cmp    edx,DWORD PTR [edi-0x595838fc]
  412fcd:	xchg   DWORD PTR [ebx+edi*8],edx
  412fd0:	adc    al,0xa8
  412fd2:	(bad)  
  412fd3:	jl     0x412ffd
  412fd5:	popf   
  412fd6:	lds    ebp,FWORD PTR ds:0xce2a171e
  412fdc:	xchg   ebx,eax
  412fdd:	repnz xor BYTE PTR [edi-0xd],al
  412fe1:	push   ebx
  412fe2:	mov    eax,0xf35f8bad
  412fe7:	ret    0xa31
  412fea:	mov    bh,0xad
  412fec:	retf   
  412fed:	(bad)  
  412fee:	jmp    0xe3146796
  412ff3:	mov    ds:0x6e70a2ab,al
  412ff8:	inc    ebp
  412ff9:	fnsave [esi-0x957dd1d]
  412fff:	add    edx,DWORD PTR [edi-0x19]
  413002:	lods   eax,DWORD PTR ds:[esi]
  413003:	out    dx,al
  413004:	jmp    0xea00:0x35018608
  41300b:	sbb    ch,ah
  41300d:	sub    eax,0x3f6216a6
  413012:	fild   QWORD PTR [edx+0x779294cd]
  413018:	push   edx
  413019:	adc    esp,ebp
  41301b:	pushf  
  41301c:	and    DWORD PTR [esi-0x916bb89],edx
  413022:	lods   eax,DWORD PTR ds:[esi]
  413023:	out    0x9a,eax
  413025:	jle    0x413078
  413027:	mov    ah,0xb
  413029:	nop
  41302a:	add    DWORD PTR [edx],edx
  41302c:	jbe    0x41305d
  41302e:	pop    ebx
  41302f:	and    bh,BYTE PTR [edi+0x2c]
  413032:	arpl   WORD PTR [eax+0x1b],cx
  413035:	retf   
  413036:	rcr    DWORD PTR [eax+edi*4],0x1
  41303a:	retf   0xae43
  41303d:	arpl   WORD PTR [esi-0x36],bp
  413040:	cs push ecx
  413042:	jle    0x41302f
  413044:	popf   
  413045:	repnz scas al,BYTE PTR es:[edi]
  413047:	mov    dl,0xa5
  413049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304a:	call   0x76b7:0x2acaa626
  413051:	outs   dx,DWORD PTR ds:[esi]
  413052:	fcom   DWORD PTR [eax+edi*4+0x5debc3b6]
  413059:	mov    al,ds:0x1e6b2173
  41305e:	push   esp
  41305f:	ss cmp al,0x8e
  413062:	mov    bh,0x10
  413064:	mov    cl,0xf
  413066:	cli    
  413067:	add    DWORD PTR [eax-0x512a330],eax
  41306d:	cdq    
  41306e:	xchg   ecx,eax
  41306f:	mov    esp,0x9e5e1116
  413074:	lods   eax,DWORD PTR ds:[esi]
  413075:	pop    eax
  413076:	in     al,dx
  413077:	cmp    cl,cl
  413079:	push   es
  41307a:	lock adc al,BYTE PTR ds:0xe48c8ca
  413081:	xor    esi,esi
  413083:	ss clc 
  413085:	xchg   esi,eax
  413086:	popf   
  413087:	or     al,BYTE PTR [edx-0x2e]
  41308a:	dec    edi
  41308b:	inc    eax
  41308c:	test   eax,eax
  41308e:	sbb    ebx,eax
  413090:	cdq    
  413091:	and    cl,BYTE PTR [esi+0x64]
  413094:	mov    ?,WORD PTR [edx+0x718fc35f]
  41309a:	stc    
  41309b:	fistp  QWORD PTR [ebx+eiz*2+0xd]
  41309f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130a0:	fisubr WORD PTR [ebp+0x68]
  4130a3:	cmc    
  4130a4:	mov    ?,WORD PTR [edx-0x7f3f0f63]
  4130aa:	out    dx,eax
  4130ab:	imul   edx,DWORD PTR [esi],0xffffffe2
  4130ae:	push   edi
  4130af:	push   ss
  4130b0:	loop   0x41305a
  4130b2:	lods   al,BYTE PTR ds:[esi]
  4130b3:	mov    ah,0xd9
  4130b5:	sub    DWORD PTR [esi],0x3f
  4130b8:	out    0xc6,al
  4130ba:	push   es
  4130bb:	fdivr  DWORD PTR [ebp+ebp*8+0x76c0d95a]
  4130c2:	push   ss
  4130c3:	inc    esp
  4130c4:	stos   DWORD PTR es:[edi],eax
  4130c5:	aad    0x98
  4130c7:	or     dl,BYTE PTR [ebx-0x2]
  4130ca:	outs   dx,BYTE PTR ds:[esi]
  4130cb:	mov    dl,0xaa
  4130cd:	mov    ecx,0x4a6de80
  4130d2:	cwde   
  4130d3:	mov    ebp,0x76fb3c71
  4130d8:	(bad)  
  4130d9:	add    ebx,DWORD PTR [esi-0x4a3d3e18]
  4130df:	jecxz  0x4130f3
  4130e1:	in     al,dx
  4130e2:	ret    
  4130e3:	inc    esp
  4130e4:	push   0x33
  4130e6:	test   DWORD PTR [edi-0x3d],eax
  4130e9:	dec    ebx
  4130ea:	push   ebp
  4130eb:	lea    edi,[ebx+0x1098e331]
  4130f1:	fidiv  DWORD PTR [eax-0x5d]
  4130f4:	jp     0x413102
  4130f6:	cmc    
  4130f7:	cmp    cl,BYTE PTR [edx-0x6e]
  4130fa:	push   ds
  4130fb:	push   eax
  4130fc:	(bad)  
  4130fd:	mov    ecx,0xd181daac
  413102:	ins    BYTE PTR es:[edi],dx
  413103:	inc    edx
  413104:	sub    ecx,DWORD PTR [esi+0x64ef6dd7]
  41310a:	clc    
  41310b:	stos   BYTE PTR es:[edi],al
  41310c:	mov    ebp,0x24707064
  413111:	sahf   
  413112:	dec    ebx
  413113:	push   ss
  413114:	lods   eax,DWORD PTR ds:[esi]
  413115:	scas   al,BYTE PTR es:[edi]
  413116:	(bad)  
  413117:	retf   
  413118:	mov    ah,0x78
  41311a:	fidiv  WORD PTR [ebx+eiz*8+0x21ce338b]
  413121:	fwait
  413122:	push   esi
  413123:	cmp    al,0x93
  413125:	icebp  
  413126:	bound  esp,QWORD PTR [edx]
  413128:	and    ebp,DWORD PTR [ebp-0xc]
  41312b:	sbb    al,0x43
  41312d:	push   ds
  41312e:	mov    esp,0x6ccb94b6
  413133:	repnz sti 
  413135:	clc    
  413136:	rol    DWORD PTR [ecx],1
  413138:	inc    esp
  413139:	psllq  mm5,0x21
  41313d:	jno    0x90a4045
  413143:	bound  edi,QWORD PTR [esi-0x7c]
  413146:	mov    bh,0x9f
  413148:	fstp   st(4)
  41314a:	imul   ebx,DWORD PTR [ecx],0xe2a1be12
  413150:	cmp    eax,0xafdc5da4
  413155:	mov    dl,0xe
  413157:	dec    ebp
  413158:	shl    DWORD PTR [eax-0x42],0x57
  41315c:	mov    ebx,0x52c0c8c3
  413161:	dec    ebp
  413162:	mov    eax,ds:0x79856905
  413167:	jmp    0x4131aa
  413169:	pop    ss
  41316a:	mov    dl,0xaf
  41316c:	lods   al,BYTE PTR ds:[esi]
  41316d:	daa    
  41316e:	sub    bh,BYTE PTR [ebp+0x457ff49f]
  413174:	jge    0x413135
  413176:	or     BYTE PTR [ebx+0x46e8c3d7],0x7f
  41317d:	push   es
  41317e:	inc    edi
  41317f:	xchg   ebx,eax
  413180:	sub    DWORD PTR [esi+0x0],0xffffffca
  413184:	fidivr DWORD PTR [eax-0x354d12ac]
  41318a:	imul   esi,DWORD PTR [ebx],0xffffffba
  41318d:	mov    eax,0x189be1
  413192:	jns    0x41316c
  413194:	ret    0xe8a3
  413197:	push   0xd4f39f32
  41319c:	sbb    eax,0x33e414f4
  4131a1:	mov    ds:0x67e25070,eax
  4131a6:	dec    edi
  4131a7:	call   0xaabb:0x7b0b05ed
  4131ae:	inc    esi
  4131af:	xor    BYTE PTR [eax],ah
  4131b1:	cld    
  4131b2:	aad    0xba
  4131b4:	jno    0x413226
  4131b6:	int    0x25
  4131b8:	sbb    DWORD PTR [ebx-0x108a8bb0],edx
  4131be:	push   ebx
  4131bf:	pop    eax
  4131c0:	push   DWORD PTR [ebx]
  4131c2:	jae    0x4131cc
  4131c4:	aas    
  4131c5:	add    BYTE PTR [edi],dh
  4131c7:	fs addr16 mov esi,0x8be1dd35
  4131ce:	adc    ebp,edx
  4131d0:	in     al,0x8f
  4131d2:	and    al,0x5f
  4131d4:	scas   eax,DWORD PTR es:[edi]
  4131d5:	xor    DWORD PTR ds:0x8ddbe0e6,eax
  4131db:	dec    ebp
  4131dc:	aam    0x8e
  4131de:	push   0x73449ff2
  4131e3:	stos   DWORD PTR es:[edi],eax
  4131e4:	push   0x63
  4131e6:	push   ds
  4131e7:	loop   0x4131ae
  4131e9:	push   ebp
  4131ea:	pop    eax
  4131eb:	mov    esp,0x758cb340
  4131f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131f1:	pop    esi
  4131f2:	inc    ebp
  4131f3:	std    
  4131f4:	cmp    al,dl
  4131f6:	dec    edx
  4131f7:	cdq    
  4131f8:	pusha  
  4131f9:	pop    edi
  4131fa:	imul   ecx,DWORD PTR [eax+0x50d44061],0x209f812c
  413204:	lods   eax,DWORD PTR ds:[esi]
  413205:	sub    al,0x51
  413207:	mov    esp,0x2cbe7f6d
  41320c:	ins    DWORD PTR es:[edi],dx
  41320d:	xor    eax,DWORD PTR [esi-0x79da3401]
  413213:	cwde   
  413214:	mov    al,0x82
  413216:	fisub  DWORD PTR [esp+edi*4-0x2c45fea6]
  41321d:	push   ds
  41321e:	xor    bl,BYTE PTR [edi+ecx*4]
  413221:	mov    ebp,0xfcbdd082
  413226:	sbb    al,0xc0
  413228:	not    DWORD PTR [ebp-0x68f3d4c8]
  41322e:	sub    dh,BYTE PTR ds:0x7197dde7
  413234:	mov    dl,0x89
  413236:	push   0x6a996e75
  41323b:	(bad)  [edi]
  41323d:	xor    eax,0x39c7af0c
  413242:	fwait
  413243:	les    esp,FWORD PTR [esi-0x604731d4]
  413249:	data16 loope 0x4132b5
  41324c:	mov    al,ds:0x1c2ab1e
  413251:	mov    esi,0x616586e4
  413256:	jns    0x413264
  413258:	cmp    eax,0xbc55db3d
  41325d:	pop    edx
  41325e:	xchg   ecx,eax
  41325f:	jnp    0x4132d8
  413261:	jecxz  0x4131fd
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	pop    eax
  413265:	xor    BYTE PTR [edi],bh
  413267:	sub    BYTE PTR [ebx-0x3b2c7688],ch
  41326d:	data16 sbb al,0x22
  413270:	(bad)  
  413271:	pushf  
  413272:	mov    bl,BYTE PTR [ebp-0x67220c2c]
  413278:	stc    
  413279:	stos   BYTE PTR es:[edi],al
  41327a:	xchg   esp,eax
  41327b:	xor    bl,BYTE PTR [edi-0x3e]
  41327e:	call   0x3dc42033
  413283:	xchg   ebx,eax
  413284:	test   BYTE PTR [eax-0x2c],bh
  413287:	jg     0x4132f9
  413289:	(bad)  [ebp+0xb060c3c]
  41328f:	ins    BYTE PTR es:[edi],dx
  413290:	jmp    0x4132ac
  413292:	push   ss
  413293:	xor    esp,DWORD PTR [ecx+0x1bb28091]
  413299:	jmp    0xfae037fc
  41329e:	jmp    0x4d8f:0xd2d99155
  4132a5:	jbe    0x41330e
  4132a7:	cmp    BYTE PTR [ecx+eax*8],0xe
  4132ab:	dec    esp
  4132ac:	pop    es
  4132ad:	outs   dx,BYTE PTR ds:[esi]
  4132ae:	push   esp
  4132af:	sub    BYTE PTR [eax+0x52],ah
  4132b2:	and    al,ah
  4132b4:	daa    
  4132b5:	fdiv   st(4),st
  4132b7:	je     0x4132a3
  4132b9:	mov    dh,0x82
  4132bb:	clc    
  4132bc:	adc    bl,BYTE PTR [ebp-0x68]
  4132bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c0:	cmc    
  4132c1:	jp     0x41326b
  4132c3:	es or  BYTE PTR gs:[eax],cl
  4132c7:	mov    eax,ds:0x3467147a
  4132cc:	outs   dx,DWORD PTR ds:[esi]
  4132cd:	fstp   TBYTE PTR [ebp-0x2f]
  4132d0:	mov    ecx,edx
  4132d2:	inc    edi
  4132d3:	repz cmp eax,0x312b4df0
  4132d9:	ja     0x41332e
  4132db:	push   ecx
  4132dc:	and    ecx,esi
  4132de:	mov    esp,DWORD PTR [esi+0x33]
  4132e1:	in     eax,0x45
  4132e3:	call   0xf11c4d39
  4132e8:	sbb    edx,ebp
  4132ea:	push   ecx
  4132eb:	dec    esi
  4132ec:	out    0xf,ax
  4132ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f0:	push   ebx
  4132f1:	div    BYTE PTR [ecx-0x31]
  4132f4:	mov    ecx,0x5bd85624
  4132f9:	lods   eax,DWORD PTR ds:[esi]
  4132fa:	add    ah,BYTE PTR [eax]
  4132fc:	fisub  DWORD PTR [ecx]
  4132fe:	adc    esp,esi
  413300:	push   0x9577cd1c
  413305:	shl    DWORD PTR [ebx-0x47e0f115],cl
  41330b:	dec    ebx
  41330c:	mov    edi,0x95e0e5ec
  413311:	pop    ebx
  413312:	sbb    ebx,edx
  413314:	pop    ds
  413315:	mov    ebx,0x6a1f6959
  41331a:	outs   dx,BYTE PTR ds:[esi]
  41331b:	imul   esi,DWORD PTR [edi],0xffffffe1
  41331e:	test   DWORD PTR [edi+0x73],esp
  413321:	mov    esi,0x2264e519
  413326:	clc    
  413327:	mov    esp,0xc1ebe81b
  41332c:	sbb    al,0xd5
  41332e:	push   ebx
  41332f:	inc    DWORD PTR [esi+0x62ed18f8]
  413335:	ret    
  413336:	cmc    
  413337:	(bad)  
  413338:	cli    
  413339:	push   ebp
  41333a:	outs   dx,DWORD PTR ds:[esi]
  41333b:	retf   0x9328
  41333e:	sub    al,0x9a
  413340:	pop    ss
  413341:	cwde   
  413342:	ja     0x4132f3
  413344:	dec    ebp
  413345:	mov    dl,0xf5
  413347:	int3   
  413348:	xor    esp,esp
  41334a:	or     eax,edi
  41334c:	or     al,0xe8
  41334e:	and    ebp,esi
  413350:	das    
  413351:	and    BYTE PTR [eax],bl
  413353:	ret    
  413354:	xchg   ecx,eax
  413355:	je     0x41337b
  413357:	stos   BYTE PTR es:[edi],al
  413358:	fcmovnbe st,st(0)
  41335a:	pop    es
  41335b:	scas   al,BYTE PTR es:[edi]
  41335c:	aad    0x47
  41335e:	sub    bl,bl
  413360:	sbb    al,0xb1
  413362:	das    
  413363:	mov    ebp,0x61ca5576
  413368:	dec    ebp
  413369:	out    0xca,eax
  41336b:	sbb    edi,ecx
  41336d:	mov    ebp,0xcaf8f07
  413372:	adc    DWORD PTR ds:[eax+ebx*2],ebx
  413376:	mov    al,0xc5
  413378:	push   edx
  413379:	mov    BYTE PTR [eax-0x2b],dl
  41337c:	mov    ah,0xa4
  41337e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337f:	(bad)  
  413380:	push   0x5c6eed45
  413385:	out    dx,al
  413386:	mov    dh,0x9a
  413388:	sahf   
  413389:	enter  0x79c3,0xf5
  41338d:	test   al,0x2b
  41338f:	and    eax,0x599b2b4d
  413394:	add    al,0xca
  413396:	xchg   edx,eax
  413397:	push   ds
  413398:	out    dx,eax
  413399:	je     0x413404
  41339b:	sbb    al,0xe
  41339d:	jns    0x4133aa
  41339f:	je     0x4133e5
  4133a1:	jge    0x413355
  4133a3:	cmp    edx,esi
  4133a5:	adc    ah,al
  4133a7:	icebp  
  4133a8:	push   ebp
  4133a9:	ja     0x4133e8
  4133ab:	ret    0x43d4
  4133ae:	mov    BYTE PTR [ebp-0x45],bl
  4133b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133b2:	mov    ecx,0x8e3203f6
  4133b7:	mov    esi,0x2b29ee95
  4133bc:	lds    edx,FWORD PTR [edi]
  4133be:	or     al,0xd2
  4133c0:	iret   
  4133c1:	pop    ss
  4133c2:	cmp    DWORD PTR [esi+0x69b495a3],ebx
  4133c8:	push   edx
  4133c9:	and    ebp,DWORD PTR [edi+0x31]
  4133cc:	or     cl,BYTE PTR [edi-0x2a2b79c4]
  4133d2:	call   DWORD PTR [ebx+eiz*4+0x3b]
  4133d6:	or     esi,ebp
  4133d8:	out    0x26,al
  4133da:	xor    al,0x70
  4133dc:	daa    
  4133dd:	cmp    eax,0xad48e6a2
  4133e2:	push   esi
  4133e3:	call   0xc2a9:0x2d60365
  4133ea:	pop    esp
  4133eb:	push   esi
  4133ec:	ja     0x413440
  4133ee:	sub    BYTE PTR [eax+0x3a],bh
  4133f1:	mov    ds:0xe87351c2,eax
  4133f6:	sub    DWORD PTR [eax+edi*4+0x78bd2207],edi
  4133fd:	dec    esi
  4133fe:	mov    esi,0x306235d0
  413403:	cli    
  413404:	inc    ebx
  413405:	jmp    0x91df:0x823a8b4a
  41340c:	jno    0x4133fb
  41340e:	mul    BYTE PTR [edi-0x77d99400]
  413414:	ret    
  413415:	and    ecx,DWORD PTR [eax-0xb03e9bb]
  41341b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41341c:	mov    eax,ds:0x146f70d9
  413421:	into   
  413422:	shl    DWORD PTR [edi],1
  413424:	push   0x32
  413426:	pushf  
  413427:	add    eax,0x783e7a99
  41342c:	sahf   
  41342d:	mov    BYTE PTR [esi+0x3eb82197],al
  413433:	mov    ds:0x555f04f2,al
  413438:	xor    al,0xc6
  41343a:	push   edi
  41343b:	daa    
  41343c:	test   BYTE PTR [esi],bh
  41343e:	fstp   DWORD PTR [esi-0x7b]
  413441:	mov    WORD PTR [esi],cs
  413443:	ret    
  413444:	cmp    esp,DWORD PTR [edi-0x7e]
  413447:	outs   dx,BYTE PTR ds:[esi]
  413448:	pop    ebp
  413449:	outs   dx,DWORD PTR ds:[esi]
  41344a:	ins    DWORD PTR es:[edi],dx
  41344b:	jmp    0x41345a
  41344d:	mov    edx,0xc157e42f
  413452:	xchg   DWORD PTR [edi-0x538a45c6],ebx
  413458:	int3   
  413459:	cmp    bl,al
  41345b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41345c:	cmc    
  41345d:	shr    BYTE PTR ds:0xf1fe4a78,0x30
  413464:	pop    edi
  413465:	cmp    ch,cl
  413467:	fs js  0x41345f
  41346a:	push   cs
  41346b:	ja     0x413439
  41346d:	pop    edi
  41346e:	fsubrp st(2),st
  413470:	nop
  413471:	mov    al,0x74
  413473:	mov    ebx,0xa62d348e
  413478:	mov    eax,ds:0xff7fa3e8
  41347d:	dec    esi
  41347e:	das    
  41347f:	aam    0x48
  413481:	fisub  WORD PTR [ecx]
  413483:	rdtsc  
  413485:	jnp    0x413416
  413487:	les    eax,FWORD PTR ds:0x9df5f06a
  41348d:	push   ecx
  41348e:	cmc    
  41348f:	jne    0x4134be
  413491:	fistp  QWORD PTR [ebp-0x5f]
  413494:	imul   esp,DWORD PTR [edx],0xffffffde
  413497:	xor    cl,BYTE PTR ds:0x9f03e3f3
  41349d:	lods   eax,DWORD PTR ds:[esi]
  41349e:	sbb    al,0xa2
  4134a0:	mov    ebp,DWORD PTR [edi-0xb6013f8]
  4134a6:	sub    DWORD PTR [ebx+0x63],esp
  4134a9:	sub    BYTE PTR [edi],bl
  4134ab:	fldcw  WORD PTR [ebx-0x2d3a46fa]
  4134b1:	pushf  
  4134b2:	in     eax,dx
  4134b3:	mov    eax,ds:0x6179d6c7
  4134b8:	ins    DWORD PTR es:[edi],dx
  4134b9:	ins    DWORD PTR es:[edi],dx
  4134ba:	jne    0x4134f4
  4134bc:	mul    ebx
  4134be:	xchg   edx,eax
  4134bf:	rcl    bl,cl
  4134c1:	out    dx,eax
  4134c2:	pop    ebp
  4134c3:	dec    ebp
  4134c4:	jecxz  0x413492
  4134c6:	and    al,0x14
  4134c8:	int    0xfa
  4134ca:	and    edi,DWORD PTR [edi]
  4134cc:	in     al,dx
  4134cd:	pop    ecx
  4134ce:	aaa    
  4134cf:	pop    esi
  4134d0:	scas   al,BYTE PTR es:[edi]
  4134d1:	lea    edx,[ebp+0x1dde5f10]
  4134d7:	sub    DWORD PTR [eax+0x1c7f7f9a],edi
  4134dd:	hlt    
  4134de:	cmc    
  4134df:	test   BYTE PTR [ecx+0x15],0xff
  4134e3:	loope  0x4134ec
  4134e5:	pop    esp
  4134e6:	lds    esi,FWORD PTR [ecx-0x42febd59]
  4134ec:	jnp    0x413548
  4134ee:	stos   DWORD PTR es:[edi],eax
  4134ef:	xchg   esp,eax
  4134f0:	jp     0x4134ad
  4134f2:	and    BYTE PTR [edx-0x43],bl
  4134f5:	jo     0x4134c1
  4134f7:	loop   0x4134c9
  4134f9:	loopne 0x413510
  4134fb:	addr16 arpl si,dx
  4134fe:	mov    eax,0xe08249be
  413503:	std    
  413504:	dec    DWORD PTR [ebp+0x2a]
  413507:	cmp    DWORD PTR [ecx+0x1cdc7143],ecx
  41350d:	xchg   ebp,eax
  41350e:	cmp    BYTE PTR ds:0x1d38d362,ch
  413514:	pop    ds
  413515:	xlat   BYTE PTR ds:[ebx]
  413516:	ror    DWORD PTR [edx+0x77],0xbc
  41351a:	popf   
  41351b:	outs   dx,BYTE PTR gs:[esi]
  41351d:	add    eax,0x7db763f2
  413522:	cs push ds
  413524:	mov    cl,0x48
  413526:	jp     0x4135a3
  413528:	les    edi,FWORD PTR [edx+0x32d8395b]
  41352e:	cwde   
  41352f:	jae    0x4134e5
  413531:	inc    ecx
  413532:	pop    eax
  413533:	loopne 0x41359e
  413535:	ins    BYTE PTR es:[edi],dx
  413536:	pop    ebp
  413537:	ins    BYTE PTR es:[edi],dx
  413538:	dec    eax
  413539:	div    BYTE PTR [eax+0x37]
  41353c:	cmc    
  41353d:	test   eax,0x14d15439
  413542:	mov    bh,0x41
  413544:	mov    al,ds:0x7332ab7d
  413549:	fwait
  41354a:	sub    eax,0xd2b516f0
  41354f:	gs (bad) 
  413551:	div    bl
  413553:	pop    ebx
  413554:	into   
  413555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413556:	std    
  413557:	pop    esp
  413558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413559:	xchg   edi,eax
  41355a:	mov    ds:0x82a394ea,al
  41355f:	stc    
  413560:	push   ecx
  413561:	pop    edx
  413562:	jb     0x413505
  413564:	int3   
  413565:	(bad)  
  413566:	jne    0x41352a
  413568:	xor    ah,cl
  41356a:	jg     0x413508
  41356c:	cmp    eax,eax
  41356e:	dec    ebp
  41356f:	mov    dl,0x42
  413571:	popa   
  413572:	in     al,dx
  413573:	cmp    al,ch
  413575:	das    
  413576:	(bad)  
  413577:	in     eax,dx
  413578:	es xchg esi,eax
  41357a:	mov    ebp,esi
  41357c:	mov    edi,DWORD PTR [eax+ebx*4-0x641beb03]
  413583:	jmp    0x8b25:0x6c093cfd
  41358a:	dec    ebp
  41358b:	je     0x4135b2
  41358d:	jmp    0x7bcf6d04
  413592:	dec    eax
  413593:	in     al,0x1f
  413595:	xlat   BYTE PTR ds:[ebx]
  413596:	retf   0x194b
  413599:	jecxz  0x4135c0
  41359b:	aas    
  41359c:	adc    DWORD PTR [ebp-0x66],edi
  41359f:	mov    dl,0xbd
  4135a1:	fs out dx,al
  4135a3:	fnsave [ecx-0x6f]
  4135a6:	je     0x413543
  4135a8:	int    0x36
  4135aa:	ficomp DWORD PTR [ebx]
  4135ac:	lods   al,BYTE PTR ds:[esi]
  4135ad:	addr16 dec esp
  4135af:	ror    eax,cl
  4135b1:	or     DWORD PTR [esp+esi*2],esp
  4135b4:	cmp    DWORD PTR [esi+0x28],0xffffff89
  4135b8:	jnp    0x413623
  4135ba:	jbe    0x413577
  4135bc:	jp     0x413552
  4135be:	jno    0x413638
  4135c0:	inc    esp
  4135c1:	sub    eax,0x84b8754c
  4135c6:	stos   BYTE PTR es:[edi],al
  4135c7:	out    0x4f,eax
  4135c9:	sbb    al,0xcf
  4135cb:	push   edi
  4135cc:	mov    ebx,0x298da9c
  4135d1:	sti    
  4135d2:	jecxz  0x4135e1
  4135d4:	mov    edi,0xba8cdc8e
  4135d9:	cs dec esp
  4135db:	lods   al,BYTE PTR ds:[esi]
  4135dc:	xchg   esp,eax
  4135dd:	sub    al,dh
  4135df:	pop    ecx
  4135e0:	cmp    ah,BYTE PTR [eax-0x1af422c4]
  4135e6:	push   ebx
  4135e7:	dec    edx
  4135e8:	jmp    0xd988:0x6bdb07c3
  4135ef:	jl     0x41363a
  4135f1:	and    eax,0x8b65fdd7
  4135f6:	inc    edx
  4135f7:	(bad)  
  4135f8:	and    al,0x62
  4135fa:	pop    ecx
  4135fb:	mov    dh,0x56
  4135fd:	and    DWORD PTR [esi],edx
  4135ff:	dec    ebp
  413600:	out    dx,al
  413601:	sbb    BYTE PTR [edx+0x6c],0x20
  413605:	inc    edi
  413606:	pop    eax
  413607:	repnz mov DWORD PTR [esp+edi*4],ecx
  41360b:	mov    bh,0x68
  41360d:	inc    ecx
  41360e:	dec    esp
  41360f:	mov    gs,WORD PTR [ecx]
  413611:	mov    eax,ds:0xdab64157
  413616:	fisubr DWORD PTR ds:0xe772dbdc
  41361c:	sbb    BYTE PTR [ebp-0x37da18df],0x84
  413623:	mov    cl,BYTE PTR [ebp+esi*2-0x76c30593]
  41362a:	retf   
  41362b:	repz pop esi
  41362d:	popf   
  41362e:	jmp    0x8d6b:0xea35a305
  413635:	shl    DWORD PTR [ebx+0x694e7bba],1
  41363b:	addr16 inc edi
  41363d:	dec    ebx
  41363e:	ds inc eax
  413640:	mov    bl,0x79
  413642:	pushaw 
  413644:	fcom   QWORD PTR [edx]
  413646:	repz cmp dh,BYTE PTR [esi-0x61]
  41364a:	adc    cl,BYTE PTR [ebx-0x60]
  41364d:	mov    eax,0xcacd729
  413652:	mov    dh,dh
  413654:	and    BYTE PTR [eax],ah
  413656:	inc    edi
  413657:	sti    
  413658:	lock push es
  41365a:	mov    al,0xb7
  41365c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41365d:	neg    DWORD PTR [edi-0x3ddb94fe]
  413663:	and    esi,DWORD PTR [edi+0xc4c2ade]
  413669:	push   edx
  41366a:	shr    edx,cl
  41366c:	test   DWORD PTR [esi-0x2a],ebp
  41366f:	pop    edx
  413670:	dec    esi
  413671:	push   0x2e
  413673:	xchg   bl,cl
  413675:	imul   eax,DWORD PTR [edx+0x7008d9d],0xffffffc2
  41367c:	push   eax
  41367d:	cld    
  41367e:	cmp    al,0xfd
  413680:	dec    eax
  413681:	loopne 0x4136f7
  413683:	int    0x86
  413685:	dec    ecx
  413687:	ja     0x41364e
  413689:	and    BYTE PTR ds:0xa301a3c8,ch
  41368f:	jle    0xf1526b17
  413695:	push   ebx
  413696:	out    0x8b,eax
  413698:	lds    ecx,FWORD PTR [esi+0x149f5f70]
  41369e:	xor    bh,ch
  4136a0:	retf   
  4136a1:	and    eax,0x56285ae4
  4136a6:	mov    dl,0x88
  4136a8:	(bad)
  4136ab:	loopne 0x4136e0
  4136ad:	mov    BYTE PTR [esi],al
  4136af:	hlt    
  4136b0:	jbe    0x41367a
  4136b2:	dec    eax
  4136b3:	xchg   esp,eax
  4136b4:	xchg   edx,eax
  4136b5:	out    dx,al
  4136b6:	out    0x7d,eax
  4136b8:	fcmovnu st,st(0)
  4136ba:	jecxz  0x41366d
  4136bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136bd:	iret   
  4136be:	jp     0x41370d
  4136c0:	retf   0x2a6e
  4136c3:	js     0x41367a
  4136c5:	cmovg  esi,DWORD PTR [ebp+ebx*2-0x3c]
  4136ca:	cmp    ch,bh
  4136cc:	fs scas eax,DWORD PTR es:[edi]
  4136ce:	add    BYTE PTR [ebp-0x48236ede],dl
  4136d4:	sub    ebx,DWORD PTR [edx]
  4136d6:	mov    ch,0x46
  4136d8:	(bad)  [ecx]
  4136da:	int    0xec
  4136dc:	jb     0x4136d1
  4136de:	mov    es,WORD PTR [esi]
  4136e0:	je     0x4136d4
  4136e2:	int    0xa6
  4136e4:	fbstp  TBYTE PTR [edi-0x4226569c]
  4136ea:	xchg   ecx,eax
  4136eb:	mov    bl,0xdc
  4136ed:	or     edx,ecx
  4136ef:	call   FWORD PTR [ebx+eax*1+0x65]
  4136f3:	adc    DWORD PTR [ecx],edx
  4136f5:	push   edi
  4136f6:	outs   dx,BYTE PTR ds:[esi]
  4136f7:	pop    es
  4136f8:	mov    fs,WORD PTR [edx-0x1f60e8cd]
  4136fe:	(bad)  
  4136ff:	scas   eax,DWORD PTR es:[edi]
  413700:	lds    esp,FWORD PTR [edi-0x7b]
  413703:	pop    ebp
  413704:	arpl   WORD PTR [ebx-0x4b],cx
  413707:	xchg   esp,eax
  413708:	pushf  
  413709:	ret    
  41370a:	jg     0x413712
  41370c:	lods   eax,DWORD PTR ds:[esi]
  41370d:	jecxz  0x413754
  41370f:	out    0x5e,al
  413711:	clc    
  413712:	out    0xfd,eax
  413714:	fstp   DWORD PTR [ecx+0x24]
  413718:	retf   0x2215
  41371b:	scas   eax,DWORD PTR es:[edi]
  41371c:	sti    
  41371d:	sub    BYTE PTR [edi-0x25],0xcb
  413721:	add    al,0x8c
  413723:	shr    DWORD PTR [ebx+0x6284fddd],1
  413729:	mov    esi,0x7a2af69e
  41372e:	sbb    bh,BYTE PTR [edx]
  413730:	sbb    al,0x98
  413732:	push   ebx
  413733:	push   ss
  413734:	adc    dl,BYTE PTR [edx+0x75]
  413737:	mov    dl,dh
  413739:	adc    ebp,ebx
  41373b:	adc    al,0x81
  41373d:	or     DWORD PTR [esi+0x4cc4251d],edx
  413743:	sub    BYTE PTR [esi],0xac
  413746:	test   eax,0x62459c84
  41374b:	lods   al,BYTE PTR ds:[esi]
  41374c:	xchg   esi,eax
  41374d:	out    0x9a,eax
  41374f:	adc    ebp,DWORD PTR [edi+esi*2+0x39]
  413753:	or     BYTE PTR [ecx],dh
  413755:	jmp    0xed24:0x8d896bb5
  41375c:	ficomp DWORD PTR [eax+0x68]
  41375f:	add    al,BYTE PTR [edx-0x721e1bb9]
  413765:	loope  0x413736
  413767:	aaa    
  413768:	push   esp
  413769:	fadd   DWORD PTR [esi-0x68]
  41376c:	nop
  41376d:	mov    ah,0xef
  41376f:	ss addr16 fwait
  413772:	sub    ah,dl
  413774:	mov    al,ds:0x4c36f96
  413779:	pop    edi
  41377a:	std    
  41377b:	fmul   DWORD PTR [eax]
  41377d:	mov    dh,cl
  41377f:	jae    0x413726
  413781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413782:	outs   dx,BYTE PTR ds:[esi]
  413783:	dec    eax
  413784:	shl    dl,0xde
  413787:	sbb    al,0x2a
  413789:	or     ah,BYTE PTR [edi]
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	push   ds
  41378d:	push   ebx
  41378e:	mov    eax,0xa484a1aa
  413793:	imul   edi,esp,0xffffff97
  413796:	jecxz  0x41376f
  413798:	mov    edx,0x510f1b1c
  41379d:	mov    esp,0x44ced633
  4137a2:	push   es
  4137a3:	lock rol BYTE PTR [edi-0x4e],1
  4137a7:	sub    dh,BYTE PTR [esi+0x657cf23]
  4137ad:	jae    0x41377f
  4137af:	scas   al,BYTE PTR es:[edi]
  4137b0:	mov    es,esp
  4137b2:	dec    BYTE PTR [eax]
  4137b4:	stos   DWORD PTR es:[edi],eax
  4137b5:	repz xchg ecx,eax
  4137b7:	or     esp,DWORD PTR [ebp-0x3ec309a4]
  4137bd:	and    eax,DWORD PTR [ebx+edi*8]
  4137c0:	jge    0x4137a8
  4137c2:	cmp    BYTE PTR [ebx-0x3d43c765],ah
  4137c8:	push   edi
  4137c9:	popa   
  4137ca:	lods   eax,DWORD PTR ds:[esi]
  4137cb:	inc    ebx
  4137cc:	xchg   ecx,eax
  4137cd:	add    BYTE PTR [ebx],cl
  4137cf:	shl    eax,cl
  4137d1:	into   
  4137d2:	xlat   BYTE PTR ds:[ebx]
  4137d3:	mov    BYTE PTR [eax],dh
  4137d5:	rcl    dl,1
  4137d7:	jb     0x4137fa
  4137d9:	jns    0x413781
  4137db:	jmp    0xdf6d:0x5b2fa95c
  4137e2:	pop    ebp
  4137e3:	mov    edi,?
  4137e5:	sub    BYTE PTR [esi-0x7455a653],cl
  4137eb:	mov    al,ds:0xe6384a35
  4137f0:	or     esi,esi
  4137f2:	cmp    BYTE PTR [edi+ebx*1],cl
  4137f5:	push   eax
  4137f6:	rol    DWORD PTR [ebx-0x64],cl
  4137f9:	and    DWORD PTR [esi],esp
  4137fb:	dec    ecx
  4137fc:	push   esi
  4137fd:	std    
  4137fe:	inc    ebx
  4137ff:	loope  0x413792
  413801:	xor    eax,0x75e7a2dc
  413806:	inc    esi
  413807:	mov    ebp,0x4b73a659
  41380c:	xchg   edi,eax
  41380d:	jbe    0x4137ec
  41380f:	push   ebp
  413810:	sahf   
  413811:	xchg   edx,eax
  413812:	push   ds
  413813:	leave  
  413814:	ss inc ebp
  413816:	dec    edi
  413817:	or     al,0x52
  413819:	imul   eax,DWORD PTR [edx],0x489900f9
  41381f:	fcomp  DWORD PTR [edx]
  413821:	aas    
  413822:	mov    dh,0xe6
  413824:	xchg   esi,eax
  413825:	dec    edi
  413826:	in     eax,dx
  413827:	fdivr  DWORD PTR [ebp+0x1d0bb0dc]
  41382d:	and    BYTE PTR [edx-0x29],ah
  413830:	int    0x51
  413832:	in     al,0x7
  413834:	jmp    0xd10e:0xe5ba3260
  41383b:	cdq    
  41383c:	dec    edi
  41383d:	ins    BYTE PTR es:[edi],dx
  41383e:	dec    ecx
  41383f:	push   edx
  413840:	movmskps ebp,xmm6
  413843:	xchg   al,ch
  413845:	dec    edi
  413846:	iret   
  413847:	pop    ss
  413848:	xchg   ebx,eax
  413849:	fidiv  WORD PTR [edx-0x19b520ca]
  41384f:	jl     0x4137eb
  413851:	mov    DWORD PTR [esi-0xa0d0d29],edx
  413857:	rcl    BYTE PTR [ecx+0x45],1
  41385a:	loope  0x41385d
  41385c:	pushf  
  41385d:	xor    BYTE PTR [ecx],0x1b
  413860:	data16 and al,0x5
  413863:	call   DWORD PTR [edi+0x70]
  413866:	test   DWORD PTR [edx-0x37f99751],esi
  41386c:	jb     0x4138b4
  41386e:	mov    ch,0x79
  413870:	adc    eax,0x79a373b6
  413875:	ins    BYTE PTR es:[edi],dx
  413876:	mov    cl,0x9
  413878:	test   al,0xf8
  41387a:	mov    bl,0x7e
  41387c:	scas   al,BYTE PTR es:[edi]
  41387d:	retf   0x445c
  413880:	dec    esi
  413881:	inc    edx
  413882:	shr    BYTE PTR [edi],0x2f
  413885:	xchg   ebp,eax
  413886:	aad    0xdc
  413888:	mov    dh,0x3a
  41388a:	pop    ebx
  41388b:	pushf  
  41388c:	push   ebp
  41388e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  413890:	test   DWORD PTR [ebx-0x30],esi
  413893:	cdq    
  413894:	pop    ss
  413895:	ror    al,1
  413897:	ja     0x4138d6
  413899:	and    eax,0x5ee3ae57
  41389e:	sub    eax,0x2ac21600
  4138a3:	xor    dl,BYTE PTR cs:[esi+0x1364f41a]
  4138aa:	inc    ebp
  4138ab:	cmp    al,0xb0
  4138ad:	(bad)  
  4138ae:	xchg   esp,eax
  4138af:	js     0x413909
  4138b1:	xor    DWORD PTR [edi],edx
  4138b3:	in     al,0x7e
  4138b5:	inc    esp
  4138b6:	dec    eax
  4138b7:	lods   al,BYTE PTR ds:[esi]
  4138b8:	inc    ecx
  4138b9:	xchg   ecx,eax
  4138ba:	test   BYTE PTR [edi+0x79759c52],ah
  4138c0:	(bad)  
  4138c1:	outs   dx,BYTE PTR ds:[esi]
  4138c2:	pop    ds
  4138c3:	in     eax,0x77
  4138c5:	pop    ebp
  4138c6:	xchg   esp,eax
  4138c7:	ror    cl,0x36
  4138ca:	or     dl,BYTE PTR [ebp-0x654de423]
  4138d0:	ss or  al,0xec
  4138d3:	push   es
  4138d4:	inc    ecx
  4138d5:	push   eax
  4138d6:	inc    esp
  4138d7:	mov    WORD PTR [eax-0x39d4e343],?
  4138dd:	push   0x14631aea
  4138e2:	xor    DWORD PTR [eax],ebp
  4138e4:	rcr    DWORD PTR [edi],0x59
  4138e7:	sub    BYTE PTR [edx+0x4e80c37f],bh
  4138ed:	js     0x413945
  4138ef:	or     edx,0x3812383d
  4138f5:	das    
  4138f6:	adc    ebx,0xffffffb6
  4138f9:	xor    BYTE PTR [eax],0x5
  4138fc:	xlat   BYTE PTR ds:[ebx]
  4138fd:	sbb    BYTE PTR [edi],ch
  4138ff:	dec    ebp
  413900:	fcom   st(1)
  413902:	and    ecx,DWORD PTR [esi+0x72f994ad]
  413908:	and    al,0xd4
  41390a:	cmp    ch,BYTE PTR [ecx+edx*2+0x24]
  41390e:	add    BYTE PTR [ecx+0x166de585],ch
  413914:	mov    ecx,DWORD PTR [edx]
  413916:	cmp    al,0xab
  413918:	(bad)  
  413919:	ficomp DWORD PTR [ebp-0x6e]
  41391c:	mov    BYTE PTR [ecx],ch
  41391e:	and    esp,DWORD PTR ds:0x85d5638a
  413924:	(bad)  
  413925:	lahf   
  413926:	inc    edx
  413927:	jns    0x41390a
  413929:	xor    bl,al
  41392b:	jg     0x4138e6
  41392d:	sti    
  41392e:	push   ebx
  41392f:	jp     0x413939
  413931:	dec    eax
  413932:	or     dh,BYTE PTR [edx]
  413934:	mov    edi,0x347dcc8f
  413939:	xchg   DWORD PTR ds:0x993ad783,esi
  41393f:	mov    ch,0xb8
  413941:	in     al,dx
  413942:	sub    DWORD PTR [edi],0x61
  413945:	cmp    dh,BYTE PTR [esi+ebp*8+0x6b]
  413949:	out    0x80,eax
  41394b:	fcomip st,st(0)
  41394d:	cmp    BYTE PTR [esi-0x24d25772],0x50
  413954:	xchg   DWORD PTR [ebp-0x32],edi
  413957:	adc    DWORD PTR [edx+0x6a],esp
  41395a:	loop   0x4138e9
  41395c:	repnz adc esp,DWORD PTR [ebx-0x2ba7ae0]
  413963:	mov    DWORD PTR [ebx+0x66],esp
  413966:	cwde   
  413967:	jae    0x41392a
  413969:	pop    ebx
  41396a:	sub    al,0xac
  41396c:	pop    ebp
  41396d:	push   ecx
  41396e:	in     eax,0x30
  413970:	pop    ebp
  413971:	repnz fs push ecx
  413974:	pop    ds
  413975:	push   eax
  413976:	mov    ds:0xeb1eed0a,eax
  41397b:	xor    bl,BYTE PTR [edx+edi*2-0x6e4c744d]
  413982:	cmp    al,BYTE PTR [eax-0x4d]
  413985:	stc    
  413986:	push   ds
  413987:	inc    edi
  413988:	jne    0x4139c7
  41398a:	pushf  
  41398b:	and    al,0x79
  41398d:	dec    ecx
  41398e:	test   al,0xd8
  413990:	xchg   edx,eax
  413991:	dec    di
  413993:	mov    eax,0x33772cb6
  413998:	pop    ebp
  413999:	(bad)  
  41399b:	jge    0x4139f0
  41399d:	fwait
  41399e:	arpl   WORD PTR [ebp-0x139a93b0],bp
  4139a4:	or     dl,BYTE PTR [ebx]
  4139a6:	clc    
  4139a7:	(bad)  
  4139a8:	into   
  4139a9:	push   esi
  4139aa:	mov    ebx,0xbb15d8ef
  4139af:	mov    ds:0xa7040493,al
  4139b4:	jl     0x4139d4
  4139b6:	dec    ebx
  4139b7:	pusha  
  4139b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b9:	adc    eax,DWORD PTR [eax]
  4139bb:	dec    edi
  4139bc:	pop    es
  4139bd:	loopne 0x413a0c
  4139bf:	jl     0x4139d5
  4139c1:	(bad)  
  4139c2:	stc    
  4139c3:	fcomp  QWORD PTR [edx+0x7e]
  4139c6:	hlt    
  4139c7:	gs nop
  4139c9:	aas    
  4139ca:	xchg   edi,eax
  4139cb:	mov    eax,ds:0x47bff60d
  4139d0:	mov    al,0x88
  4139d2:	repnz or al,0xb5
  4139d5:	mov    bh,0xb2
  4139d7:	lods   al,BYTE PTR ds:[esi]
  4139d8:	mov    al,ds:0x1314e293
  4139dd:	and    al,0x5f
  4139df:	or     DWORD PTR [edx+0x292c53e5],edx
  4139e5:	scas   al,BYTE PTR es:[edi]
  4139e6:	fmul   QWORD PTR [ecx]
  4139e8:	rol    al,0x34
  4139eb:	int    0xdf
  4139ed:	rol    esp,1
  4139ef:	test   BYTE PTR [ebx],dh
  4139f1:	and    DWORD PTR [eax+0x40],ebx
  4139f4:	xchg   ecx,eax
  4139f5:	bound  esp,QWORD PTR [ecx+0xc3f66ff]
  4139fb:	adc    DWORD PTR [esp+ebx*8-0x4d],ebx
  4139ff:	pop    edx
  413a00:	pop    ss
  413a01:	pop    edi
  413a02:	popf   
  413a03:	dec    eax
  413a04:	dec    edx
  413a05:	std    
  413a06:	jnp    0x413a33
  413a08:	mov    al,ds:0x644a8945
  413a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a0e:	adc    DWORD PTR [eax],0xffffffc6
  413a11:	jl     0x4139e8
  413a13:	js     0x41399c
  413a15:	sti    
  413a16:	les    edx,FWORD PTR [eax]
  413a18:	xchg   BYTE PTR [esi],bl
  413a1a:	int3   
  413a1b:	and    cl,BYTE PTR [ebx-0x47]
  413a1e:	shr    DWORD PTR [eax+0x47],cl
  413a21:	xor    edi,DWORD PTR ds:0x71e6f627
  413a27:	out    dx,eax
  413a28:	pop    ds
  413a29:	cmp    DWORD PTR [edi-0x65db385],esp
  413a2f:	or     al,0x53
  413a31:	mov    bh,0xd8
  413a33:	out    dx,al
  413a34:	lds    esi,FWORD PTR [esi+edx*2+0x5e]
  413a38:	out    dx,al
  413a39:	aas    
  413a3a:	or     esi,DWORD PTR [edx]
  413a3c:	xchg   edi,eax
  413a3d:	ss dec ebp
  413a3f:	dec    edi
  413a40:	xor    DWORD PTR [edx-0x5bf06cd9],ebp
  413a46:	add    DWORD PTR [ecx],ecx
  413a48:	test   BYTE PTR [esi],ch
  413a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a4b:	mov    WORD PTR [ecx+0x6552f47c],?
  413a51:	add    eax,DWORD PTR [ebp+0xc6426ec]
  413a57:	or     bh,bl
  413a59:	(bad)  
  413a5a:	mov    BYTE PTR [eax-0x1],ah
  413a5d:	pop    es
  413a5e:	and    al,BYTE PTR [edx-0x32]
  413a61:	jnp    0x4139ff
  413a63:	inc    esi
  413a64:	arpl   WORD PTR [esi],bp
  413a66:	push   ecx
  413a67:	sbb    BYTE PTR [eax-0x74],dh
  413a6a:	and    BYTE PTR [edi+eiz*2-0x2e6f44f3],dl
  413a71:	push   ecx
  413a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a73:	shl    DWORD PTR [edi-0x160b654b],cl
  413a79:	ds hlt 
  413a7b:	loopne 0x413a63
  413a7d:	dec    edx
  413a7e:	fwait
  413a7f:	add    al,0x67
  413a81:	imul   ebx,DWORD PTR [esi+0x7e],0xed894b0d
  413a88:	sub    DWORD PTR [ecx],0x7615b6d0
  413a8e:	scas   eax,DWORD PTR es:[edi]
  413a8f:	mov    eax,0x53391be7
  413a94:	hlt    
  413a95:	inc    ecx
  413a96:	inc    cx
  413a98:	cmp    DWORD PTR [eax-0x674c69c9],ecx
  413a9e:	ss xchg ebx,eax
  413aa0:	ja     0x413ad4
  413aa2:	lea    ebx,[ebx]
  413aa4:	adc    ebp,DWORD PTR [edx]
  413aa6:	or     al,0x13
  413aa8:	or     al,0x76
  413aaa:	ins    BYTE PTR es:[edi],dx
  413aab:	pop    es
  413aac:	sbb    cl,BYTE PTR [edi+0x4a8fa6fe]
  413ab2:	lods   eax,DWORD PTR ds:[esi]
  413ab3:	sbb    ebp,DWORD PTR [esi+0x5b]
  413ab6:	sbb    eax,0x166c9b90
  413abb:	stc    
  413abc:	pop    edi
  413abd:	dec    edx
  413abe:	push   esp
  413abf:	pushf  
  413ac0:	mov    dh,0xdc
  413ac2:	or     dl,BYTE PTR [ecx+0x61b3ef55]
  413ac8:	fmul   DWORD PTR [edi]
  413aca:	dec    ecx
  413acb:	push   ds
  413acc:	mov    esi,0x5b66d13b
  413ad1:	adc    eax,0xbc13235e
  413ad6:	pusha  
  413ad7:	sbb    esp,DWORD PTR [esi-0x38]
  413ada:	push   cs
  413adb:	mov    ecx,0xfc181884
  413ae0:	jp     0x413ad3
  413ae2:	mov    ch,0xaf
  413ae4:	xchg   esi,eax
  413ae5:	gs pop eax
  413ae7:	jle    0x413ae8
  413ae9:	stc    
  413aea:	ss jb  0x413a9d
  413aed:	test   bh,0xfe
  413af0:	inc    esp
  413af1:	and    dh,cl
  413af3:	scas   al,BYTE PTR es:[edi]
  413af4:	in     al,dx
  413af5:	xchg   ebp,eax
  413af6:	push   edi
  413af7:	pop    ecx
  413af8:	and    al,0x7b
  413afa:	cs je  0x413a97
  413afd:	icebp  
  413afe:	ins    BYTE PTR es:[edi],dx
  413aff:	fisttp DWORD PTR [edi]
  413b01:	pop    es
  413b02:	dec    eax
  413b03:	nop
  413b04:	sbb    al,0xc7
  413b06:	mov    ds:0x6dc67d05,al
  413b0b:	(bad)  
  413b0c:	std    
  413b0d:	ret    0x1bdb
  413b10:	fimul  DWORD PTR [eax-0x21834690]
  413b16:	aam    0xe0
  413b18:	dec    esi
  413b19:	pusha  
  413b1a:	or     DWORD PTR [ecx+0x1182f2b],edi
  413b20:	sahf   
  413b21:	aaa    
  413b22:	(bad)  
  413b23:	shr    BYTE PTR [eax],cl
  413b25:	push   ecx
  413b26:	(bad)  
  413b27:	jp     0x413af1
  413b29:	das    
  413b2a:	fdiv   DWORD PTR [eax]
  413b2c:	sbb    eax,0x99cf645d
  413b31:	fldcw  WORD PTR [ecx]
  413b33:	leave  
  413b34:	cmp    eax,0xcd851ea1
  413b39:	test   al,0xd7
  413b3b:	ins    BYTE PTR es:[edi],dx
  413b3c:	add    al,bh
  413b3e:	rcl    eax,cl
  413b40:	add    esp,DWORD PTR [eax+ebp*8-0x38]
  413b44:	and    al,0xfd
  413b46:	dec    ebx
  413b47:	xchg   ecx,edi
  413b49:	xchg   esp,eax
  413b4a:	xchg   edx,eax
  413b4b:	lods   eax,DWORD PTR ds:[esi]
  413b4c:	mov    eax,ds:0x9834dac4
  413b51:	(bad)
  413b54:	and    al,0x41
  413b57:	add    eax,0x70e7d006
  413b5c:	sahf   
  413b5d:	test   al,0x6c
  413b5f:	mov    ds:0xf4954247,eax
  413b64:	retf   
  413b65:	nop
  413b66:	std    
  413b67:	jle    0x413b19
  413b69:	mov    dh,BYTE PTR [ebx-0x5efa6492]
  413b6f:	in     eax,dx
  413b70:	adc    ebp,DWORD PTR [esi-0x5f]
  413b73:	sbb    DWORD PTR [edx+0x49],ebx
  413b76:	and    al,0x76
  413b78:	fisttp QWORD PTR [edx+esi*8]
  413b7b:	xor    DWORD PTR [esi-0x28],edx
  413b7e:	enter  0x7116,0xdc
  413b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b83:	out    dx,al
  413b84:	(bad)  
  413b85:	adc    DWORD PTR [edi+0x7a],edi
  413b88:	fld    DWORD PTR [eax+0x3fb267a8]
  413b8e:	xor    al,0x2e
  413b90:	scas   al,BYTE PTR es:[edi]
  413b91:	ret    
  413b92:	cwde   
  413b93:	push   ss
  413b94:	shr    DWORD PTR [edi+eax*1],0x47
  413b98:	clc    
  413b99:	outs   dx,BYTE PTR ds:[esi]
  413b9a:	mov    al,0x1f
  413b9c:	out    0x62,al
  413b9e:	sub    BYTE PTR [eax+esi*2-0x8595a5e],al
  413ba5:	jnp    0x413bfc
  413ba7:	hlt    
  413ba8:	lahf   
  413ba9:	mov    ds:0x633a8cba,al
  413bae:	lock xadd al,dh
  413bb2:	dec    edi
  413bb3:	int3   
  413bb4:	test   al,0x16
  413bb6:	sti    
  413bb7:	stc    
  413bb8:	ins    DWORD PTR es:[edi],dx
  413bb9:	frstor [ebx]
  413bbb:	adc    BYTE PTR [eax+0x2298f683],dl
  413bc1:	ss jns 0x413c32
  413bc4:	(bad)  
  413bc5:	fcomip st,st(4)
  413bc7:	dec    ebp
  413bc8:	fbld   TBYTE PTR [ecx-0x5828cac3]
  413bce:	mov    dh,0x8b
  413bd0:	lock lea ebx,[edx+edx*4+0x44]
  413bd5:	dec    ebp
  413bd6:	icebp  
  413bd7:	call   0x3cde0231
  413bdc:	push   cs
  413bdd:	add    eax,0xc27b529b
  413be2:	xor    dl,BYTE PTR [edx-0x37729a6c]
  413be8:	and    ch,ah
  413bea:	scas   al,BYTE PTR es:[edi]
  413beb:	xchg   al,ah
  413bed:	in     al,dx
  413bee:	push   edi
  413bef:	int    0x22
  413bf1:	xor    eax,DWORD PTR [edx+eiz*1-0x7edfb138]
  413bf8:	leave  
  413bf9:	adc    al,0x50
  413bfb:	pop    ss
  413bfc:	sar    BYTE PTR [esi-0x39],1
  413bff:	scas   al,BYTE PTR es:[edi]
  413c00:	xchg   esp,eax
  413c01:	retf   0x2642
  413c04:	dec    ebx
  413c05:	into   
  413c06:	fucom  st(0)
  413c08:	jl     0x413c1d
  413c0a:	push   esi
  413c0b:	jb     0x413c76
  413c0d:	loop   0x413bc9
  413c0f:	aad    0xaf
  413c11:	mov    ds,edi
  413c13:	(bad)  
  413c14:	cmp    al,0x26
  413c16:	pop    edx
  413c17:	dec    esp
  413c18:	(bad)  
  413c19:	fcom   QWORD PTR [edx-0x60]
  413c1c:	iret   
  413c1d:	in     eax,0xf1
  413c1f:	pop    es
  413c20:	and    DWORD PTR [eax+0x4d],0xffffffdf
  413c24:	gs inc eax
  413c26:	add    eax,0xc26e703e
  413c2b:	in     al,0x1d
  413c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c2e:	stc    
  413c2f:	dec    ebp
  413c30:	in     al,dx
  413c31:	inc    esi
  413c32:	ins    DWORD PTR es:[edi],dx
  413c33:	sti    
  413c34:	or     eax,0x7f730c97
  413c39:	dec    esi
  413c3a:	push   edx
  413c3b:	mov    eax,ds:0xdbc2883f
  413c40:	xchg   ecx,eax
  413c41:	xchg   BYTE PTR [edi-0x13b5d0ef],ah
  413c47:	cmp    DWORD PTR [edx-0x74],edi
  413c4a:	inc    edx
  413c4b:	outs   dx,DWORD PTR ds:[esi]
  413c4c:	sbb    eax,0xb1d76862
  413c51:	or     al,al
  413c53:	mov    dh,0x7c
  413c55:	mov    esi,0xf022d7de
  413c5a:	inc    ebx
  413c5b:	xor    BYTE PTR [ecx+0x6cdadec7],bl
  413c61:	xor    DWORD PTR [edi],ecx
  413c63:	clc    
  413c64:	stc    
  413c65:	mov    edx,0x7ebee96c
  413c6a:	loop   0x413c66
  413c6c:	rcr    DWORD PTR [ecx-0x64],1
  413c6f:	daa    
  413c70:	or     al,0x6f
  413c72:	cmp    ebx,DWORD PTR [edx]
  413c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c75:	dec    ecx
  413c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c77:	inc    esi
  413c78:	sbb    BYTE PTR [ebx+0x2cd69b21],al
  413c7e:	adc    DWORD PTR [ecx+ebx*2+0x53],0x9931eda0
  413c86:	pop    esp
  413c87:	icebp  
  413c88:	jo     0x413c8b
  413c8a:	sub    eax,0x34c92196
  413c8f:	scas   eax,DWORD PTR es:[edi]
  413c90:	lods   eax,DWORD PTR ds:[esi]
  413c91:	inc    ecx
  413c92:	sbb    al,0x73
  413c94:	sub    esi,DWORD PTR [ecx]
  413c96:	jmp    0x6826:0x92a9e109
  413c9d:	and    ebp,DWORD PTR [edi+eiz*8-0x7be5b2ec]
  413ca4:	or     BYTE PTR [eax-0x4478864a],ah
  413caa:	mov    ds:0x300342f7,eax
  413caf:	mov    edi,0x3c7d596d
  413cb4:	dec    edx
  413cb5:	inc    esi
  413cb6:	sbb    DWORD PTR [edx-0x1c],ebx
  413cb9:	stos   BYTE PTR es:[edi],al
  413cba:	int    0xc8
  413cbc:	add    BYTE PTR [edi+0x67614aa5],ah
  413cc2:	sbb    al,0xcc
  413cc4:	push   ebp
  413cc5:	test   DWORD PTR [esi-0x2e],ebp
  413cc8:	fisttp WORD PTR [eax]
  413cca:	inc    edx
  413ccb:	cld    
  413ccc:	mov    ecx,edi
  413cce:	mov    cl,0xc6
  413cd0:	push   0x9c3feb08
  413cd5:	and    eax,DWORD PTR [ebp+0x7e]
  413cd8:	push   0xffffffd2
  413cda:	xchg   ebx,eax
  413cdb:	pop    ebp
  413cdc:	int3   
  413cdd:	push   esp
  413cde:	xor    BYTE PTR [edx+0x16],0xd0
  413ce2:	sub    eax,0x4cef1ffb
  413ce7:	ret    0x21
  413cea:	mov    edi,0x7cc3ac4
  413cef:	and    BYTE PTR [esi+0x25ddf68d],ah
  413cf5:	inc    esp
  413cf6:	mov    dh,0xe6
  413cf8:	cmp    DWORD PTR [esi+0x673239df],eax
  413cfe:	inc    esi
  413cff:	and    al,0x72
  413d01:	pop    edx
  413d02:	inc    esi
  413d03:	mov    ebp,0x40a92e6c
  413d08:	xchg   DWORD PTR [edx-0x48],eax
  413d0b:	sub    BYTE PTR [esi],0x95
  413d0e:	sbb    BYTE PTR [edi-0x6f],0x37
  413d12:	or     eax,0x34609707
  413d17:	dec    edx
  413d18:	push   ebp
  413d19:	adc    DWORD PTR [edx-0x3d],esi
  413d1c:	push   ebp
  413d1d:	call   0x3b32:0xaebbaaaf
  413d24:	repnz stc 
  413d26:	adc    eax,DWORD PTR [ecx]
  413d28:	mov    bh,BYTE PTR [eax]
  413d2a:	imul   edx,DWORD PTR [eax],0xffffff97
  413d2d:	mov    al,ds:0x32720033
  413d32:	gs push ecx
  413d34:	pop    edx
  413d35:	mov    BYTE PTR [eax+0x1a],bl
  413d38:	jnp    0x413d95
  413d3a:	xor    edi,eax
  413d3c:	inc    ebp
  413d3d:	cmp    al,dh
  413d3f:	(bad)  
  413d40:	jp     0x413d65
  413d42:	jbe    0x413d21
  413d44:	ins    DWORD PTR es:[edi],dx
  413d45:	pop    ss
  413d46:	sub    BYTE PTR [esi],0x13
  413d49:	lock pop esp
  413d4b:	cmc    
  413d4c:	add    esp,DWORD PTR [edx+ebp*4]
  413d4f:	sub    ebp,ecx
  413d51:	mov    WORD PTR [edx+edi*8-0x4bd29bbb],ss
  413d58:	xor    edx,esi
  413d5a:	fsubr  st(3),st
  413d5c:	fsubr  DWORD PTR ds:0xb369ac65
  413d62:	repnz pop edx
  413d64:	rcl    dh,cl
  413d66:	xchg   edx,eax
  413d67:	bound  esp,QWORD PTR [edx]
  413d69:	add    DWORD PTR [ecx-0x351f888a],0xffffffc4
  413d70:	mov    ds:0x760124bd,al
  413d75:	jb     0x413df4
  413d77:	jmp    0x413deb
  413d79:	xchg   edx,eax
  413d7a:	jecxz  0x413d4f
  413d7c:	xor    eax,0x7f6ddd5
  413d81:	pop    esi
  413d82:	fcom   DWORD PTR [ecx+0x1d]
  413d85:	inc    esp
  413d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d87:	push   eax
  413d88:	sbb    dh,0x1d
  413d8b:	sti    
  413d8c:	push   eax
  413d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d8f:	push   edx
  413d90:	int    0x4d
  413d92:	jge    0x413de4
  413d94:	xchg   edi,eax
  413d95:	sub    DWORD PTR [ebx-0x5f],ecx
  413d98:	fld    TBYTE PTR [esi-0x1b48a349]
  413d9e:	iret   
  413d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da1:	fisubr WORD PTR [ebx-0x52]
  413da4:	into   
  413da5:	shl    DWORD PTR [eax],1
  413da7:	inc    edi
  413da8:	mov    ecx,0xdbb51e9c
  413dad:	cmp    al,0x37
  413daf:	cmc    
  413db0:	loopne 0x413e1c
  413db2:	jnp    0x413d71
  413db4:	in     eax,dx
  413db5:	cmc    
  413db6:	rcl    esp,1
  413db8:	je     0x413dd3
  413dba:	xlat   BYTE PTR ds:[ebx]
  413dbb:	ins    BYTE PTR es:[edi],dx
  413dbc:	mov    ds:0xa68edb10,eax
  413dc1:	mov    bh,0x5f
  413dc3:	bt     esi,0xa0
  413dc7:	in     eax,dx
  413dc8:	test   al,0xeb
  413dca:	adc    bl,dl
  413dcc:	mov    dh,0x56
  413dce:	stos   DWORD PTR es:[edi],eax
  413dcf:	mov    cl,0x58
  413dd1:	jnp    0x413ddd
  413dd3:	shr    BYTE PTR [eax+0x31],cl
  413dd6:	pop    ebp
  413dd7:	fadd   QWORD PTR [esi-0x42]
  413dda:	in     al,dx
  413ddb:	lahf   
  413ddc:	add    edi,DWORD PTR [ecx+0x3f62cf58]
  413de2:	cli    
  413de3:	call   0x10737db
  413de8:	into   
  413de9:	pop    esi
  413dea:	or     ebp,DWORD PTR [ebx+0x5bc2b437]
  413df0:	xchg   ebp,eax
  413df1:	mov    al,0xb0
  413df3:	sub    eax,0x312794af
  413df8:	imul   eax,DWORD PTR [ecx+0x35e11000],0x57
  413dff:	jecxz  0x413e02
  413e01:	inc    BYTE PTR [ebx-0x210afe3]
  413e07:	xchg   esp,ebp
  413e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0a:	pusha  
  413e0b:	lds    ebx,FWORD PTR [ebx+0x32]
  413e0e:	outs   dx,BYTE PTR ds:[esi]
  413e0f:	daa    
  413e10:	sub    bh,bl
  413e12:	sti    
  413e13:	pop    edi
  413e14:	sbb    eax,edx
  413e16:	pop    ecx
  413e17:	push   ss
  413e18:	arpl   WORD PTR [edx-0x209d186a],dx
  413e1e:	leave  
  413e1f:	call   0x684d9483
  413e24:	or     eax,0x8152226c
  413e29:	mov    ch,0xc3
  413e2b:	aaa    
  413e2c:	add    BYTE PTR [ebx-0x734d515d],0x30
  413e33:	repnz pop ebp
  413e35:	xchg   edi,eax
  413e36:	dec    eax
  413e37:	sub    BYTE PTR [eax-0x48],bl
  413e3a:	xchg   ebx,eax
  413e3b:	push   esi
  413e3c:	push   ss
  413e3d:	loope  0x413ebc
  413e3f:	cdq    
  413e40:	loop   0x413dc6
  413e42:	hlt    
  413e43:	add    DWORD PTR [eax+0x63],ebp
  413e46:	push   ebx
  413e47:	mov    BYTE PTR [esp+edx*2+0x4b368d27],cl
  413e4e:	out    dx,eax
  413e4f:	in     al,0x7f
  413e51:	cmp    ah,BYTE PTR [ecx]
  413e53:	ds sbb bl,0xab
  413e57:	dec    ecx
  413e58:	pop    edi
  413e59:	mov    WORD PTR [eax-0x3f],?
  413e5c:	aad    0x41
  413e5e:	push   cs
  413e5f:	scas   eax,DWORD PTR es:[edi]
  413e60:	or     bh,bh
  413e62:	sti    
  413e63:	arpl   WORD PTR [esi-0x7c2bd63b],dx
  413e69:	call   DWORD PTR [esi]
  413e6b:	in     al,dx
  413e6c:	imul   edx,DWORD PTR fs:[bx+di+0x4a],0x4ab580b5
  413e75:	sub    BYTE PTR [edx],bh
  413e77:	sub    eax,0x4c5d6faf
  413e7c:	xor    BYTE PTR [ebx],bh
  413e7e:	add    DWORD PTR [edx],ecx
  413e80:	mov    esi,0x73e314f9
  413e85:	cmp    ch,dh
  413e87:	mov    ch,0xee
  413e89:	mov    ebx,DWORD PTR [edi+0x4d]
  413e8c:	inc    edi
  413e8d:	ds jne 0x413e43
  413e90:	lahf   
  413e91:	push   ds
  413e92:	jp     0x413eef
  413e94:	and    eax,0xbd2c4323
  413e99:	sbb    DWORD PTR [esi*1+0x27c5e907],0x2881d5ed
  413ea4:	mov    ah,BYTE PTR ds:0xc739e1cb
  413eaa:	(bad)  
  413eab:	in     eax,dx
  413eac:	dec    eax
  413ead:	stos   DWORD PTR es:[edi],eax
  413eae:	into   
  413eaf:	arpl   WORD PTR [ecx-0x5f],dx
  413eb2:	ss push 0x997fe310
  413eb8:	add    ecx,DWORD PTR [edi+0x41]
  413ebb:	sub    ecx,edi
  413ebd:	fsubr  DWORD PTR [eax-0x4bc0450]
  413ec3:	fucomp st(4)
  413ec5:	and    BYTE PTR [esi],bh
  413ec7:	xchg   edx,esp
  413ec9:	mov    bh,0x23
  413ecb:	xchg   BYTE PTR [ebx+eiz*8-0x6a],dl
  413ecf:	xor    BYTE PTR [ebx+edx*1],bl
  413ed2:	mov    esi,0xccd9db49
  413ed7:	test   al,0x16
  413ed9:	addr16 bnd ret 
  413edc:	lods   eax,DWORD PTR ds:[esi]
  413edd:	pop    ds
  413ede:	inc    eax
  413edf:	out    dx,eax
  413ee0:	mov    esi,ss
  413ee2:	push   ds
  413ee3:	xchg   ebp,eax
  413ee4:	mov    al,0x9
  413ee6:	push   ss
  413ee7:	pusha  
  413ee8:	push   edx
  413ee9:	call   0x84801593
  413eee:	sub    esp,DWORD PTR [ebp-0x1d]
  413ef1:	jbe    0x413f03
  413ef3:	inc    eax
  413ef4:	data16 fstp DWORD PTR [esi+0x33]
  413ef8:	push   cs
  413ef9:	mov    ecx,0xe53625b5
  413efe:	jne    0x413ec9
  413f00:	xor    bh,BYTE PTR [eax-0x339bb153]
  413f06:	adc    DWORD PTR [ebp-0x5e1527df],ebx
  413f0c:	lods   eax,DWORD PTR ds:[esi]
  413f0d:	popf   
  413f0e:	fwait
  413f0f:	adc    bl,cl
  413f11:	pop    ecx
  413f12:	xor    eax,0x68cecc2
  413f17:	jae    0x413f51
  413f19:	daa    
  413f1a:	je     0x413f0e
  413f1c:	xor    ebp,ecx
  413f1e:	popf   
  413f1f:	lea    ebx,[esi-0x11]
  413f22:	pushf  
  413f23:	fnstenv [eax+ebx*2-0xe11ed16]
  413f2a:	pop    es
  413f2b:	and    ecx,edi
  413f2d:	sub    eax,0x61ee016f
  413f32:	jge    0x413f9e
  413f34:	push   0x3a05af22
  413f39:	push   ebx
  413f3a:	dec    ecx
  413f3b:	fcomp  QWORD PTR [edx-0x79]
  413f3e:	cmp    dl,BYTE PTR [ecx+0x7b]
  413f41:	fwait
  413f42:	sub    ecx,DWORD PTR [edx-0x1e6859bf]
  413f48:	loop   0x413fb4
  413f4a:	outs   dx,BYTE PTR ds:[esi]
  413f4b:	xchg   DWORD PTR [eax-0x4c],esp
  413f4e:	and    bh,BYTE PTR [ecx+0x1]
  413f51:	xchg   cl,dl
  413f53:	jge    0x413faa
  413f55:	fwait
  413f56:	icebp  
  413f57:	dec    ebp
  413f58:	mov    ch,0xe1
  413f5a:	pop    es
  413f5b:	xor    DWORD PTR [ecx+esi*4+0x15080e01],eax
  413f62:	pop    esi
  413f63:	cmp    al,0x58
  413f65:	icebp  
  413f66:	mov    al,0xe2
  413f68:	push   eax
  413f69:	mov    cl,0x3c
  413f6b:	out    dx,eax
  413f6c:	mov    ebp,ds
  413f6e:	jmp    0x413fde
  413f70:	or     DWORD PTR [eax],ecx
  413f72:	pop    esi
  413f73:	fdivr  st(7),st
  413f75:	les    edx,FWORD PTR [ebp+ecx*8-0x57c2818a]
  413f7c:	out    dx,eax
  413f7d:	inc    ebx
  413f7e:	pusha  
  413f7f:	add    ebx,ecx
  413f81:	(bad)
  413f84:	hlt    
  413f85:	loopne 0x413f43
  413f87:	out    dx,eax
  413f88:	fsubr  QWORD PTR [eax+0x5f]
  413f8b:	icebp  
  413f8c:	push   ss
  413f8d:	and    DWORD PTR [edi-0x15],edi
  413f90:	shl    BYTE PTR [edi+ecx*8-0x16],1
  413f94:	repnz das 
  413f96:	push   ss
  413f97:	mov    ah,0x8c
  413f99:	clc    
  413f9a:	aad    0x62
  413f9c:	dec    esp
  413f9d:	int    0x2
  413f9f:	int    0x84
  413fa1:	add    BYTE PTR [edi],ch
  413fa3:	out    0xef,eax
  413fa5:	shl    BYTE PTR [esi+0x7c4bf2f8],cl
  413fab:	leave  
  413fac:	daa    
  413fad:	aaa    
  413fae:	ror    BYTE PTR [ecx+eiz*4+0x1a],1
  413fb2:	mov    esp,0x229e691
  413fb7:	pop    edi
  413fb8:	test   BYTE PTR ds:0xf4f166c,0x80
  413fbf:	(bad)  
  413fc1:	ins    BYTE PTR es:[edi],dx
  413fc2:	daa    
  413fc3:	pop    ds
  413fc4:	data16 jle 0x414040
  413fc7:	xor    eax,0xc6c04102
  413fcc:	mov    edi,0xdbdf509
  413fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd2:	(bad)  
  413fd3:	(bad)  
  413fd4:	clc    
  413fd5:	test   eax,0x7f69fd7
  413fda:	icebp  
  413fdb:	cmp    eax,0x31efc05b
  413fe0:	or     dl,cl
  413fe2:	iret   
  413fe3:	add    DWORD PTR [ecx],ebx
  413fe5:	test   BYTE PTR [eax-0x1b],cl
  413fe8:	out    dx,eax
  413fe9:	sbb    DWORD PTR [ecx],ebx
  413feb:	hlt    
  413fec:	inc    ebx
  413fed:	jp     0x413f9f
  413fef:	xchg   esi,eax
  413ff0:	push   ds
  413ff1:	sub    eax,DWORD PTR [ecx+0x7e]
  413ff4:	adc    al,0x3a
  413ff6:	cwde   
  413ff7:	pop    es
  413ff8:	or     DWORD PTR [ecx+0x3b],edx
  413ffb:	adc    eax,0xdd29e208
  414000:	inc    esi
  414001:	mov    ebp,0x4f1131c6
  414006:	cmp    eax,0x7e469a86
  41400b:	cdq    
  41400c:	adc    eax,0x92d1f498
  414011:	pop    DWORD PTR [edx+0x37]
  414014:	jbe    0x413fe5
  414016:	jo     0x413fff
  414018:	mov    al,0x1d
  41401a:	and    BYTE PTR [edi+edi*1+0x3],dl
  41401e:	cmp    BYTE PTR [esi-0x6e51a913],0xf9
  414025:	retf   0x99b2
  414028:	ret    0x8a26
  41402b:	adc    esp,DWORD PTR [eax]
  41402d:	mov    ds:0x6e9cefd0,al
  414032:	xlat   BYTE PTR ds:[ebx]
  414033:	jp     0x414032
  414035:	cmp    bh,BYTE PTR [eax+eax*1-0x50]
  414039:	iret   
  41403a:	sbb    ch,BYTE PTR ss:[ebx+ebx*4-0x75]
  41403f:	xor    esp,ecx
  414041:	lods   al,BYTE PTR ds:[esi]
  414042:	mov    ds:0x87a9b5cf,eax
  414047:	add    al,0xa8
  414049:	dec    esi
  41404a:	shr    ax,cl
  41404d:	loopne 0x414010
  41404f:	pop    ebx
  414050:	jg     0x41406a
  414052:	adc    ch,BYTE PTR [edi+edx*2]
  414055:	inc    ecx
  414056:	xchg   ecx,eax
  414057:	lods   al,BYTE PTR ds:[esi]
  414058:	mov    esi,0x1974da02
  41405d:	or     edi,esi
  41405f:	aaa    
  414060:	push   ds
  414061:	pop    ecx
  414062:	test   ebx,edx
  414064:	inc    edx
  414065:	sbb    ecx,DWORD PTR [ecx]
  414067:	sub    DWORD PTR [ebx-0x1d95afb8],esi
  41406d:	out    dx,al
  41406e:	jl     0x4140bd
  414070:	or     DWORD PTR [esi+0x641530c3],esi
  414076:	retf   
  414077:	imul   ebp,DWORD PTR [ebx-0x4174139d],0x808a80f3
  414081:	xchg   ecx,eax
  414082:	pusha  
  414083:	or     eax,DWORD PTR [eax-0x173d8797]
  414089:	outs   dx,BYTE PTR ds:[esi]
  41408a:	enter  0xe812,0x5d
  41408e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41408f:	fstp   QWORD PTR [ebx+ecx*4+0x4bfec253]
  414096:	and    dh,BYTE PTR [edx]
  414098:	xor    BYTE PTR [ebx+0x4c],bh
  41409b:	dec    eax
  41409c:	push   es
  41409d:	lds    esp,FWORD PTR [esp+eax*1]
  4140a0:	loopne 0x414052
  4140a2:	fisttp QWORD PTR [ecx]
  4140a4:	push   0x71
  4140a6:	mov    bl,0xe9
  4140a8:	test   eax,0x633a99bc
  4140ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ae:	add    al,0x38
  4140b0:	aad    0x5b
  4140b2:	and    al,0xdc
  4140b4:	mov    bh,0x29
  4140b6:	sbb    DWORD PTR [ecx-0xb],ecx
  4140b9:	adc    ecx,esp
  4140bb:	push   esi
  4140bc:	in     ax,0x66
  4140bf:	fnstsw WORD PTR [ebx-0x48]
  4140c2:	(bad)  
  4140c3:	loopne 0x4140e5
  4140c5:	ja     0x4140d7
  4140c7:	repnz outs dx,DWORD PTR ds:[esi]
  4140c9:	xchg   ecx,eax
  4140ca:	mov    ecx,0x9a138a8
  4140cf:	push   esi
  4140d0:	mov    eax,0xd6f0f668
  4140d5:	xchg   edx,esp
  4140d7:	dec    ebx
  4140d8:	dec    ebp
  4140d9:	loop   0x414061
  4140db:	sbb    edi,eax
  4140dd:	(bad)  
  4140de:	in     eax,0xcd
  4140e0:	dec    ebx
  4140e1:	jmp    0x498cca4
  4140e6:	pop    ecx
  4140e7:	push   ds
  4140e8:	mov    edx,0xdd431cf9
  4140ed:	xchg   ebp,eax
  4140ee:	cmc    
  4140ef:	in     al,dx
  4140f0:	lock not BYTE PTR [esi]
  4140f3:	pop    esp
  4140f4:	mov    bl,0xde
  4140f6:	xchg   edx,eax
  4140f7:	xchg   ebp,eax
  4140f8:	call   0xae692639
  4140fd:	rcr    esi,0x68
  414100:	(bad)  
  414101:	adc    al,0x3d
  414103:	ins    BYTE PTR es:[edi],dx
  414104:	int    0x3a
  414106:	es pop ss
  414108:	xchg   BYTE PTR [edi+0x14],bh
  41410b:	sbb    eax,DWORD PTR [esp+ebx*2-0x4e]
  41410f:	aaa    
  414110:	or     BYTE PTR [esi-0x76777af4],bl
  414116:	ret    0x9072
  414119:	fnstenv [ebx+edx*1]
  41411c:	(bad)  
  41411d:	adc    dl,BYTE PTR [eax+0x4d1a26e4]
  414123:	mov    cl,0x99
  414125:	jb     0x414187
  414127:	nop    DWORD PTR [esi]
  41412a:	lock xchg edx,eax
  41412c:	sub    DWORD PTR [eax],edx
  41412e:	pop    ebx
  41412f:	and    dh,0xa2
  414132:	imul   edi,eax,0xffffff9c
  414135:	sahf   
  414136:	push   edx
  414137:	stos   BYTE PTR es:[edi],al
  414138:	xchg   esi,eax
  414139:	dec    edi
  41413a:	(bad)  
  41413c:	jmp    0x414184
  41413e:	scas   al,BYTE PTR es:[edi]
  41413f:	jbe    0x414125
  414141:	popa   
  414142:	mov    ch,0x9a
  414144:	gs call 0x9aa2:0xe9e685a9
  41414c:	js     0x4141a6
  41414e:	fwait
  41414f:	or     al,0xac
  414151:	inc    edx
  414152:	or     al,0x6f
  414154:	jge    0x414173
  414156:	push   ebp
  414157:	aas    
  414158:	mov    edx,0x4194ca48
  41415d:	or     bh,dl
  41415f:	sub    eax,esi
  414161:	jo     0x4140fb
  414163:	cdq    
  414164:	ss cmp eax,0x82d943a3
  41416a:	and    dh,BYTE PTR [ebx+0x405f2fb1]
  414170:	and    bl,bh
  414172:	xchg   esp,eax
  414173:	jb     0x4141bb
  414175:	test   BYTE PTR [ebx-0x8],0xe4
  414179:	cmp    DWORD PTR [edi+0x3f],ecx
  41417c:	ret    0x1c9b
  41417f:	nop
  414180:	cmp    dh,dl
  414182:	lea    ebx,[ebp+0x3ba055e1]
  414188:	mov    dl,0xdf
  41418a:	pusha  
  41418b:	imul   ebx
  41418d:	lahf   
  41418e:	jl     0x414150
  414190:	mov    esi,0x44274844
  414195:	shl    DWORD PTR [ebp-0xa],1
  414198:	inc    ecx
  414199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41419a:	fstp   DWORD PTR [eax+0x36]
  41419d:	in     al,0xfe
  41419f:	cmp    al,0xe5
  4141a1:	and    edi,DWORD PTR [edi+0x1704b219]
  4141a7:	mov    WORD PTR ss:[edi+0x4e],ds
  4141ab:	push   es
  4141ac:	ficomp DWORD PTR [esi+0x74f2185]
  4141b2:	aas    
  4141b3:	inc    edi
  4141b4:	sbb    eax,0x99010eaf
  4141b9:	bound  ecx,QWORD PTR ds:0x3fa9bdf0
  4141bf:	(bad)  
  4141c0:	out    dx,eax
  4141c1:	stos   DWORD PTR es:[edi],eax
  4141c2:	pop    edx
  4141c3:	mov    cl,0x79
  4141c5:	jmp    0xa47b3768
  4141ca:	xchg   edx,eax
  4141cb:	in     al,0xe8
  4141cd:	cmp    bl,bh
  4141cf:	fcmovne st,st(4)
  4141d1:	sti    
  4141d2:	adc    ebp,DWORD PTR [esi+0x40e5a90e]
  4141d8:	sub    ch,dh
  4141da:	jg     0x4141fa
  4141dc:	loopne 0x414192
  4141de:	jae    0x41421e
  4141e0:	mov    ah,0xc6
  4141e3:	mov    ds:0x41788b13,al
  4141e8:	pop    ss
  4141e9:	adc    ebx,DWORD PTR [edi+0x41]
  4141ec:	ja     0x4141e0
  4141ee:	cmp    eax,0xce118629
  4141f3:	mov    bl,0x6
  4141f5:	(bad)  
  4141f6:	mov    edx,0x97da2b1f
  4141fb:	lar    ecx,WORD PTR [ecx-0x36303cb2]
  414202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414203:	ret    
  414204:	ss and ecx,edi
  414207:	mov    bh,0x61
  414209:	xchg   bh,bl
  41420b:	mov    DWORD PTR es:[ecx-0xa03b687],edx
  414212:	xchg   edx,eax
  414213:	xchg   DWORD PTR [edi],eax
  414215:	mov    edi,DWORD PTR [eax-0x2a]
  414218:	inc    ebx
  414219:	mov    bl,0xdc
  41421b:	dec    ebp
  41421c:	es mov eax,0xccab6f28
  414222:	cs pop ebp
  414224:	mov    ds:0x74d6c80a,al
  414229:	jae    0x414227
  41422b:	(bad)  [edx]
  41422d:	and    ecx,DWORD PTR ds:0x709f4d83
  414233:	ja     0x414287
  414235:	in     eax,0x7
  414237:	cmp    al,0x43
  414239:	outs   dx,DWORD PTR ds:[esi]
  41423a:	sbb    dl,dl
  41423c:	enter  0xcea3,0x29
  414240:	inc    esi
  414241:	or     cl,BYTE PTR ss:[esi]
  414244:	push   ss
  414245:	aad    0xba
  414247:	inc    eax
  414248:	push   cs
  414249:	pusha  
  41424a:	pop    esp
  41424b:	jo     0x41429d
  41424d:	pop    ss
  41424e:	inc    ecx
  41424f:	mov    dl,0xa4
  414251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414252:	jmp    0xfc93711b
  414257:	inc    ebx
  414258:	pop    esp
  414259:	xchg   ecx,eax
  41425a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41425b:	je     0x4142aa
  41425d:	pop    ecx
  41425e:	mov    esi,0x4b3e396a
  414263:	lahf   
  414264:	dec    edi
  414265:	hlt    
  414266:	scas   eax,DWORD PTR es:[edi]
  414267:	cwde   
  414268:	and    eax,0xbbda707f
  41426d:	jmp    0x636b:0xadd47985
  414274:	jmp    0x6589:0x7fb740f7
  41427b:	mov    bl,0x69
  41427d:	fs jne 0x4142b8
  414280:	stos   DWORD PTR es:[edi],eax
  414281:	retf   
  414282:	scas   al,BYTE PTR es:[edi]
  414283:	das    
  414284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414285:	dec    esi
  414286:	icebp  
  414287:	pop    ebx
  414288:	out    dx,eax
  414289:	mov    eax,0xe255625f
  41428e:	bound  eax,QWORD PTR ds:[ebx-0x71e30cf7]
  414295:	sbb    BYTE PTR [esi-0x5459f5b4],al
  41429b:	retf   0xd3c4
  41429e:	or     DWORD PTR [edi],esi
  4142a0:	jne    0x414321
  4142a2:	mov    cl,0x39
  4142a4:	xchg   ecx,eax
  4142a5:	sbb    eax,0x2cc7fb23
  4142aa:	sub    BYTE PTR [eax+edx*4+0x2a02f860],0xf3
  4142b2:	and    BYTE PTR [edi-0x3cf03fd5],0x19
  4142b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ba:	add    esp,DWORD PTR [edi+0x1e27862c]
  4142c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c1:	mov    ebp,0x152f4ea3
  4142c6:	mov    DWORD PTR ds:0xc7bf0564,ebp
  4142cc:	cld    
  4142cd:	shl    DWORD PTR [edx],0x1c
  4142d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d1:	fs loope 0x41427f
  4142d4:	mov    bl,0x2c
  4142d6:	fcomi  st,st(6)
  4142d8:	dec    edx
  4142d9:	les    edi,FWORD PTR [ebx-0x5b550867]
  4142df:	mov    WORD PTR [edx+0x26],?
  4142e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e3:	retf   
  4142e4:	outs   dx,DWORD PTR ds:[esi]
  4142e5:	xor    ah,bl
  4142e7:	bound  ebp,QWORD PTR [ebx-0x6e9ab041]
  4142ed:	into   
  4142ee:	(bad)  
  4142ef:	xor    edi,DWORD PTR [edi+0xa4c5534]
  4142f5:	or     cl,BYTE PTR [esi+0x58f0f5f4]
  4142fb:	js     0x41436f
  4142fd:	xchg   ebx,eax
  4142fe:	xor    esi,eax
  414300:	ja     0x41434a
  414302:	scas   eax,DWORD PTR es:[edi]
  414303:	(bad)  
  414305:	fsubr  st(4),st
  414307:	mov    esi,0xf6b68e14
  41430c:	shl    BYTE PTR ds:0x3383f94b,1
  414312:	cdq    
  414313:	sbb    cl,BYTE PTR [ecx-0x73]
  414316:	inc    DWORD PTR [edx+0x4a391758]
  41431c:	inc    esi
  41431d:	enter  0x1746,0xcf
  414321:	in     eax,dx
  414322:	adc    BYTE PTR [eax+0x58],0x91
  414326:	and    DWORD PTR [ecx+0x79],ecx
  414329:	imul   esi,DWORD PTR [ecx+0x42c83a79],0xb6f402d0
  414333:	popf   
  414334:	adc    esi,eax
  414336:	xchg   edi,eax
  414337:	or     DWORD PTR [edx-0x5e],0xbdf027b3
  41433e:	jnp    0x414355
  414340:	lea    ebp,[ebx+0x5d]
  414343:	popf   
  414344:	mov    al,0x23
  414346:	in     al,0xcb
  414348:	inc    eax
  414349:	in     al,dx
  41434a:	cmc    
  41434b:	mov    dh,0x51
  41434d:	rol    BYTE PTR [edx+0x6140b41c],0x4e
  414354:	sub    DWORD PTR [edi-0x44],eax
  414357:	imul   ebx,DWORD PTR [edi+0x2a],0xcaadca3f
  41435e:	add    ecx,DWORD PTR [ebx]
  414360:	retf   0x2367
  414363:	arpl   WORD PTR [eax-0x79839bf8],sp
  414369:	repnz push cs
  41436b:	repnz pop ds
  41436d:	push   ebp
  41436e:	sub    DWORD PTR [eax-0x13],edx
  414371:	jg     0x414379
  414373:	mov    ds:0x8d68c7ea,eax
  414378:	and    eax,0x8da49eb7
  41437d:	into   
  41437e:	ja     0x4143e0
  414380:	neg    BYTE PTR [edi+0x1404803b]
  414386:	out    dx,eax
  414387:	(bad)  [esi-0x4322d50e]
  41438d:	pop    esi
  41438e:	stos   BYTE PTR es:[edi],al
  41438f:	std    
  414390:	add    eax,0xe9331a20
  414395:	mov    eax,ds:0x12f74162
  41439a:	push   eax
  41439b:	test   BYTE PTR [edi+0x5f],al
  41439e:	dec    esi
  41439f:	arpl   WORD PTR [edx-0x1d],dx
  4143a2:	iret   
  4143a3:	xor    ch,dh
  4143a5:	sahf   
  4143a6:	dec    ecx
  4143a7:	pushf  
  4143a8:	pushf  
  4143a9:	adc    DWORD PTR [edi+edi*8+0x3b],ebx
  4143ad:	jbe    0x414387
  4143af:	retf   
  4143b0:	sar    BYTE PTR [edi+edi*4+0x42ae5aca],0xf3
  4143b8:	hlt    
  4143b9:	ret    
  4143ba:	dec    esp
  4143bb:	gs sahf 
  4143bd:	fild   WORD PTR [edi-0x26]
  4143c0:	test   BYTE PTR [edi+0x583a8281],al
  4143c6:	xchg   esp,eax
  4143c7:	xlat   BYTE PTR ds:[ebx]
  4143c8:	arpl   WORD PTR [eax+0x6bad40be],sp
  4143ce:	sbb    esi,esi
  4143d0:	inc    ebx
  4143d1:	sbb    al,0x16
  4143d3:	or     al,0xb0
  4143d5:	das    
  4143d6:	xchg   ebp,eax
  4143d7:	int    0x2e
  4143d9:	push   ebp
  4143da:	mov    ds,WORD PTR [ecx-0x4f5404e1]
  4143e0:	xchg   esp,eax
  4143e1:	outs   dx,DWORD PTR ds:[esi]
  4143e2:	nop
  4143e3:	lods   eax,DWORD PTR ds:[esi]
  4143e4:	cli    
  4143e5:	inc    edi
  4143e6:	xor    cl,ah
  4143e8:	fadd   DWORD PTR [ebx-0x5]
  4143eb:	ret    0xc179
  4143ee:	shl    BYTE PTR [ecx+0x308cbe0f],0x65
  4143f5:	xchg   esp,eax
  4143f6:	xchg   ecx,eax
  4143f7:	pop    ecx
  4143f8:	or     esp,DWORD PTR ds:0x9c1febb7
  4143fe:	test   DWORD PTR ds:0xbb550b54,esi
  414404:	test   BYTE PTR [eax+0x14],ah
  414407:	test   DWORD PTR [ebx],ebp
  414409:	repz in eax,dx
  41440b:	xchg   esi,eax
  41440c:	repz mov al,0x33
  41440f:	mov    bh,0x20
  414411:	fidivr WORD PTR [ecx+ebx*1]
  414414:	jmp    0x148e:0x935d8f64
  41441b:	jecxz  0x4143b4
  41441d:	movq   QWORD PTR [esi+edi*2+0x27],mm7
  414422:	jge    0x4143b7
  414424:	jns    0x414429
  414426:	int    0x11
  414428:	mov    ebp,0xece1e4bc
  41442d:	bound  esi,QWORD PTR [edi]
  41442f:	sub    BYTE PTR [eax-0x340d864e],cl
  414435:	bound  ebx,QWORD PTR [eax]
  414437:	or     DWORD PTR [esi+0x15850cb1],esp
  41443d:	mov    al,0xe1
  41443f:	into   
  414440:	and    eax,0x8b2a9c2a
  414445:	jmp    0x4144a6
  414447:	pop    eax
  414448:	sub    BYTE PTR [esi],bl
  41444a:	pop    eax
  41444b:	dec    edx
  41444c:	imul   ecx,DWORD PTR [esp+eiz*4-0x1d],0x3e8645fc
  414454:	leave  
  414455:	adc    dh,ah
  414457:	dec    eax
  414458:	inc    edx
  414459:	shl    BYTE PTR [ecx],cl
  41445b:	fiadd  WORD PTR [ebx+0x514c05b9]
  414461:	jae    0x41440b
  414463:	mov    ss,ecx
  414465:	scas   eax,DWORD PTR es:[edi]
  414466:	(bad)  
  414467:	out    0x7d,al
  414469:	jg     0x4144dc
  41446b:	sub    BYTE PTR [ebp-0x3f08af14],dl
  414471:	iret   
  414472:	mov    esi,DWORD PTR [edx+0x74]
  414475:	jae    0x4144cc
  414477:	mov    eax,0xc8b5c1dd
  41447c:	mov    ebx,0x31e8489f
  414481:	sub    BYTE PTR [esi-0x48d8e8eb],0xb
  414488:	xchg   edi,eax
  414489:	xchg   esp,eax
  41448a:	adc    ah,BYTE PTR [edi]
  41448c:	sub    BYTE PTR [edx],dh
  41448e:	les    esp,FWORD PTR [edi]
  414490:	push   eax
  414491:	dec    ebx
  414492:	jne    0x4144ec
  414494:	xchg   esp,eax
  414495:	cdq    
  414496:	inc    eax
  414497:	xchg   DWORD PTR [eax],ecx
  414499:	pop    es
  41449a:	std    
  41449b:	fucomip st,st(3)
  41449d:	test   edi,eax
  41449f:	mov    ch,0x25
  4144a1:	pop    ebx
  4144a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a3:	stos   DWORD PTR es:[edi],eax
  4144a4:	mov    ds:0x869ddc07,eax
  4144a9:	mov    BYTE PTR [esi],ah
  4144ab:	lock cwde 
  4144ad:	push   0x2dc0ba6d
  4144b2:	sub    esi,DWORD PTR [ebp-0x54]
  4144b5:	pop    eax
  4144b6:	or     DWORD PTR [esi+0x7f],eax
  4144b9:	mov    edx,0x36f330f6
  4144be:	push   ebx
  4144bf:	das    
  4144c0:	push   edi
  4144c1:	inc    edi
  4144c2:	push   esp
  4144c3:	mov    ah,0xbe
  4144c5:	arpl   WORD PTR [esi-0x71a7e838],dx
  4144cb:	call   0x9c599599
  4144d0:	mov    gs,WORD PTR [eax+0x1c81ba7c]
  4144d6:	push   ss
  4144d7:	sub    bl,0x52
  4144da:	loopne 0x41451c
  4144dc:	inc    ebp
  4144dd:	add    eax,DWORD PTR ds:0xa79e73f0
  4144e3:	das    
  4144e4:	pop    ebx
  4144e5:	call   0x62d3:0xfe97330e
  4144ec:	mov    edx,ebx
  4144ee:	push   edx
  4144ef:	sbb    al,0xe5
  4144f1:	loopne 0x414520
  4144f3:	inc    ebx
  4144f4:	add    al,BYTE PTR [edi-0x48b851f9]
  4144fa:	ss ins DWORD PTR es:[edi],dx
  4144fc:	lods   al,BYTE PTR ds:[esi]
  4144fd:	mov    cl,0xf5
  4144ff:	dec    esi
  414500:	add    al,0x30
  414502:	push   ebp
  414503:	mov    ecx,0xd8891eee
  414508:	push   ss
  414509:	out    0xf1,al
  41450b:	add    eax,0x222be4fe
  414510:	and    eax,0xb3124ee1
  414515:	adc    ebp,DWORD PTR [edi]
  414517:	mov    WORD PTR [ecx-0x3c],ds
  41451a:	sub    ebx,DWORD PTR [eax-0x45c85949]
  414520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414521:	dec    edx
  414522:	popa   
  414523:	(bad)  
  414524:	mov    eax,0x55fd5a35
  414529:	push   ss
  41452a:	sub    eax,edx
  41452c:	jp     0x414541
  41452e:	out    0x27,al
  414530:	cdq    
  414531:	mov    ah,0xf0
  414533:	xor    BYTE PTR [edi],cl
  414535:	jg     0x4144e6
  414537:	jbe    0x4144dd
  414539:	mov    bh,0x42
  41453b:	xor    ch,BYTE PTR [ebx-0x47fcdf27]
  414541:	mov    bh,BYTE PTR [edx+0x1e]
  414544:	mov    al,ds:0x7495012c
  414549:	inc    ebp
  41454a:	sbb    eax,0xbb4edb10
  41454f:	retf   0x451c
  414552:	ret    0x9aed
  414555:	(bad)  
  414556:	lea    ebx,[ebx+0x31]
  414559:	jbe    0x4145c5
  41455b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41455c:	cmp    esp,eax
  41455e:	xchg   esi,eax
  41455f:	pop    edi
  414560:	and    ecx,esp
  414562:	adc    cl,BYTE PTR [ecx+edx*4]
  414565:	or     al,0x48
  414567:	(bad)  [ebp+0x61]
  41456a:	sbb    ecx,ebx
  41456c:	mov    DWORD PTR [eax-0x337b2e30],edi
  414572:	outs   dx,BYTE PTR ds:[esi]
  414573:	add    esp,DWORD PTR [edx-0x19]
  414576:	imul   esp,DWORD PTR [edi+ebx*1],0xffffff8d
  41457a:	xchg   esp,eax
  41457b:	add    eax,0x8193729c
  414580:	xor    DWORD PTR [eax-0x6069996e],0xe8ebca96
  41458a:	lea    eax,[ecx-0x676b6e9e]
  414590:	out    0xfd,al
  414592:	mov    ah,0x93
  414594:	test   BYTE PTR [eax],ch
  414596:	je     0x414535
  414598:	in     al,0x47
  41459a:	push   ds
  41459b:	outs   dx,BYTE PTR ds:[esi]
  41459c:	push   0x7
  41459e:	mov    DWORD PTR [esi-0x6b],esp
  4145a1:	outs   dx,DWORD PTR ds:[esi]
  4145a2:	lods   al,BYTE PTR ds:[esi]
  4145a3:	mov    esi,DWORD PTR [ebp+0x72]
  4145a6:	call   0xa949:0x6fc60a26
  4145ad:	leave  
  4145ae:	lahf   
  4145af:	or     cl,BYTE PTR [eax+0x69407632]
  4145b5:	mov    bl,0x5e
  4145b7:	ss fwait
  4145b9:	and    esi,DWORD PTR [eax+ebx*4]
  4145bc:	xchg   edx,eax
  4145bd:	scas   al,BYTE PTR es:[edi]
  4145be:	fldcw  WORD PTR [ecx+0x2a]
  4145c1:	outs   dx,BYTE PTR ds:[esi]
  4145c2:	test   BYTE PTR [ebp+0x74],bh
  4145c5:	mov    ecx,0x47813897
  4145ca:	inc    esi
  4145cb:	lods   eax,DWORD PTR ds:[esi]
  4145cc:	iret   
  4145cd:	(bad)  
  4145ce:	in     eax,dx
  4145cf:	and    DWORD PTR ds:0x853205ea,0xc859c725
  4145d9:	jp     0x4145a9
  4145db:	test   DWORD PTR [edi],ebp
  4145dd:	pop    esi
  4145de:	pop    ss
  4145df:	mov    ecx,0x319ec61a
  4145e4:	mov    ecx,0x9bc65215
  4145e9:	mov    dl,bl
  4145eb:	mov    ah,0xe8
  4145ed:	hlt    
  4145ee:	je     0x41463b
  4145f0:	mov    edi,0x4cf868da
  4145f5:	fnstenv [edx+edi*4]
  4145f8:	xchg   ecx,eax
  4145f9:	cld    
  4145fa:	addr16 jnp 0x41464e
  4145fd:	sahf   
  4145fe:	ja     0x414669
  414600:	aas    
  414601:	jnp    0x4145c5
  414603:	cmp    dh,0x19
  414606:	push   esp
  414607:	sub    ah,BYTE PTR [ebp+0x356e2152]
  41460d:	xchg   ebx,eax
  41460e:	outs   dx,BYTE PTR ds:[esi]
  41460f:	or     esp,DWORD PTR [eax]
  414611:	int3   
  414612:	xchg   DWORD PTR [ecx-0x1c],ebx
  414615:	mov    al,0xfb
  414617:	xor    cl,BYTE PTR [edi-0x61]
  41461a:	sar    DWORD PTR [eax],cl
  41461c:	je     0x4145e6
  41461e:	fst    DWORD PTR fs:[edx+0x66]
  414622:	mov    ebp,0x6e052c28
  414627:	adc    DWORD PTR [edi-0x29a601bd],eax
  41462d:	or     al,0xae
  41462f:	stc    
  414630:	jmp    0x4145f0
  414632:	mov    ah,0x16
  414634:	enter  0xecbc,0x30
  414638:	adc    al,0x91
  41463a:	mov    ebp,0x5b824de8
  41463f:	xchg   ecx,eax
  414640:	std    
  414641:	mov    dl,0xab
  414643:	mov    al,ds:0xa6aeda38
  414648:	xchg   edi,eax
  414649:	pop    edi
  41464a:	pop    ss
  41464b:	cmp    DWORD PTR [edx+0x164779af],0x21459777
  414655:	mov    al,BYTE PTR [edi+0x3fa14fdb]
  41465b:	in     eax,dx
  41465c:	sar    DWORD PTR [eax],0x83
  41465f:	mov    al,cl
  414661:	into   
  414662:	loopne 0x4146df
  414664:	cmc    
  414665:	cmp    ecx,edx
  414667:	add    edx,ebx
  414669:	cmp    bl,BYTE PTR [ecx-0x683ae494]
  41466f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414670:	out    0x44,eax
  414672:	xor    eax,0xd1be2623
  414677:	btr    DWORD PTR [edx],edx
  41467a:	or     BYTE PTR [ecx],dh
  41467c:	mov    esi,0x1f21f2b7
  414681:	jle    0x414694
  414683:	fidivr DWORD PTR [ebp+0x20]
  414686:	dec    BYTE PTR [eax-0x6578d1b1]
  41468c:	into   
  41468d:	cmp    DWORD PTR [ebp+0x4070d9a7],esp
  414693:	and    DWORD PTR [esi+0xa01a362],ebp
  414699:	out    0x66,eax
  41469b:	and    edx,DWORD PTR [ebx]
  41469d:	mov    ah,0xe7
  41469f:	sbb    al,0x2d
  4146a1:	int3   
  4146a2:	pusha  
  4146a3:	lods   eax,DWORD PTR ds:[esi]
  4146a4:	or     al,0x91
  4146a6:	pop    eax
  4146a7:	fnstenv [esi+eiz*8+0x59]
  4146ab:	and    esp,edx
  4146ad:	shr    ebp,cl
  4146af:	out    0x65,al
  4146b1:	fsub   QWORD PTR [edi-0x1c7e2b70]
  4146b7:	add    BYTE PTR [ebp+0x48],dh
  4146ba:	xchg   bh,ch
  4146bc:	cwde   
  4146bd:	sti    
  4146be:	pop    ecx
  4146bf:	mov    eax,0xd7db92ba
  4146c4:	stc    
  4146c5:	sbb    eax,0xfd04c192
  4146ca:	lods   al,BYTE PTR ds:[esi]
  4146cb:	cmp    eax,0x7ceb83b3
  4146d0:	xlat   BYTE PTR ds:[ebx]
  4146d1:	aas    
  4146d2:	xchg   edi,eax
  4146d3:	out    dx,eax
  4146d4:	ficom  WORD PTR [esi+edi*4-0xe]
  4146d8:	cmp    BYTE PTR [esi-0x1e],ch
  4146db:	scas   eax,DWORD PTR es:[edi]
  4146dc:	imul   edx,DWORD PTR [edi+0x1131a26],0xffffffa7
  4146e3:	mov    bl,0x2d
  4146e5:	push   DWORD PTR [esi]
  4146e7:	dec    BYTE PTR [eax+ecx*4+0x75]
  4146eb:	inc    ecx
  4146ec:	cld    
  4146ed:	inc    eax
  4146ee:	stc    
  4146ef:	cmp    al,0x6f
  4146f1:	fcomp  DWORD PTR [esi+0x26d59e92]
  4146f7:	lahf   
  4146f8:	mov    DWORD PTR [ebx],0xdeeb83
  4146fe:	es retf 
  414700:	fsub   DWORD PTR gs:[ecx+eax*8-0x66]
  414705:	mov    eax,0x1e90321a
  41470a:	dec    edi
  41470b:	lock sub DWORD PTR fs:[ecx],ecx
  41470f:	cmp    ah,al
  414711:	fcomp  st(6)
  414713:	cmp    eax,0x613d371d
  414718:	in     al,dx
  414719:	iret   
  41471a:	mov    bh,0xbe
  41471c:	call   0xeb7efe1c
  414721:	and    DWORD PTR [ebx],edx
  414723:	dec    esp
  414724:	daa    
  414725:	inc    ebx
  414726:	add    al,0x64
  414728:	loop   0x4146f8
  41472a:	into   
  41472b:	or     eax,0x3a653a4a
  414730:	pop    ecx
  414731:	or     al,0x38
  414733:	mov    ds:0xf1a58c5f,eax
  414738:	popf   
  414739:	dec    ecx
  41473a:	lea    edi,[ebp+0x3a]
  41473d:	jmp    DWORD PTR [ebx]
  41473f:	int    0xbd
  414741:	stos   DWORD PTR es:[edi],eax
  414742:	inc    edx
  414743:	dec    ecx
  414744:	and    esi,DWORD PTR [ecx+0x5b]
  414747:	rol    DWORD PTR [ecx-0x7613ab98],1
  41474d:	add    DWORD PTR [eax-0x128331e7],ebp
  414753:	mov    WORD PTR [ecx],es
  414755:	pop    esi
  414756:	mov    al,ds:0xa375c212
  41475b:	cdq    
  41475c:	int3   
  41475d:	mov    ds:0xedfbaf25,eax
  414762:	inc    ebx
  414763:	not    DWORD PTR [ecx+edi*4-0x52]
  414767:	sub    al,0xb2
  414769:	inc    esp
  41476a:	je     0x41478a
  41476c:	or     ah,BYTE PTR [esp+ecx*4]
  41476f:	cmc    
  414770:	mov    DWORD PTR [edx],edi
  414772:	push   ebp
  414773:	sub    DWORD PTR [edi],ebp
  414775:	idiv   DWORD PTR [ebx+0x37ff6bc3]
  41477b:	cli    
  41477c:	adc    al,0x59
  41477e:	test   ch,dl
  414780:	in     eax,dx
  414781:	cmc    
  414782:	mov    ch,ah
  414784:	sbb    bl,0x3d
  414787:	nop
  414788:	pop    ss
  414789:	rcl    DWORD PTR [ebp-0x6a184535],1
  41478f:	sbb    cl,bh
  414791:	add    edi,ebx
  414793:	icebp  
  414794:	aas    
  414795:	out    0x47,al
  414797:	xor    al,0x26
  414799:	cdq    
  41479a:	int3   
  41479b:	push   0xffffffb6
  41479d:	push   esi
  41479e:	adc    BYTE PTR ds:0x241af934,ah
  4147a4:	mov    ah,0xfb
  4147a6:	adc    BYTE PTR [ecx+edx*8],ch
  4147a9:	addr16 mov ds:0xb658,eax
  4147ad:	xchg   edx,eax
  4147ae:	test   eax,0xb5fbb1d7
  4147b3:	popf   
  4147b4:	sub    al,0x7a
  4147b6:	adc    ecx,DWORD PTR ds:0x1e131d77
  4147bc:	sbb    BYTE PTR [ecx+edi*8],cl
  4147bf:	and    BYTE PTR [ebp-0x3b719d47],dh
  4147c5:	sub    eax,0xed1b2e06
  4147ca:	xchg   edx,eax
  4147cb:	enter  0x2034,0xb0
  4147cf:	fxch   st(4)
  4147d1:	add    DWORD PTR [edx-0x56e076d5],edi
  4147d7:	pop    ecx
  4147d8:	xor    eax,0x9bc9faa9
  4147dd:	ds mov ebx,0xe1dcb570
  4147e3:	xor    bl,ch
  4147e5:	xchg   ebp,eax
  4147e6:	enter  0xd61f,0x5d
  4147ea:	fldenv [eax-0x2678f01e]
  4147f0:	mov    esp,0x4453840e
  4147f5:	xor    eax,0xf6541693
  4147fa:	hlt    
  4147fb:	fimul  DWORD PTR [edx+0x1a0a224d]
  414801:	dec    ebp
  414802:	push   es
  414803:	das    
  414804:	and    ecx,DWORD PTR [ebx+0x5c6f8312]
  41480a:	lods   eax,DWORD PTR ds:[esi]
  41480b:	outs   dx,DWORD PTR ds:[esi]
  41480c:	pop    ss
  41480d:	test   al,0xf7
  41480f:	popa   
  414810:	stos   DWORD PTR es:[edi],eax
  414811:	outs   dx,DWORD PTR ss:[esi]
  414813:	aas    
  414814:	fistp  DWORD PTR [esp+ebx*1+0x26]
  414818:	js     0x41483b
  41481a:	jno    0x414833
  41481c:	sub    eax,0x18312b73
  414821:	mov    esp,0x15e8d978
  414826:	call   0x4b1ceeaa
  41482b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41482c:	jmp    FWORD PTR [eax-0x27]
  41482f:	mov    ebx,0xd5266336
  414834:	fisub  WORD PTR [eax-0x24]
  414837:	xchg   ebx,eax
  414838:	jo     0x41480d
  41483a:	imul   eax,DWORD PTR [edi],0x84d809da
  414840:	lds    ecx,FWORD PTR [ebp-0x3e9f6e29]
  414846:	pop    edi
  414847:	clc    
  414848:	and    eax,0xba77791d
  41484d:	hlt    
  41484e:	xchg   DWORD PTR [ebp-0x53],edi
  414851:	push   esp
  414852:	push   0xd4695247
  414857:	cld    
  414858:	popw   ss
  41485a:	cmp    BYTE PTR [edx+0x24c243de],ch
  414860:	xchg   ebx,eax
  414861:	test   al,0xba
  414863:	mov    esi,0x1e28601
  414868:	or     dh,0xa8
  41486b:	push   0x9ff5c1db
  414870:	dec    edx
  414871:	mov    esp,0xba3985eb
  414876:	mov    DWORD PTR [eax],0xc377a6a1
  41487c:	sahf   
  41487d:	sbb    dh,BYTE PTR [esi-0x5]
  414880:	xor    esp,ebp
  414882:	daa    
  414883:	pop    ebp
  414884:	xchg   edi,eax
  414885:	fist   DWORD PTR [esp+ecx*1]
  414888:	mov    ebp,0x47037bd7
  41488d:	div    DWORD PTR [ebx]
  41488f:	add    DWORD PTR [ecx+0x34],0x2234dd0
  414896:	daa    
  414897:	xchg   edi,eax
  414898:	sub    ecx,DWORD PTR fs:[eax+0x21]
  41489c:	inc    eax
  41489d:	stc    
  41489e:	js     0x414877
  4148a0:	in     eax,dx
  4148a1:	push   esp
  4148a2:	push   ecx
  4148a3:	push   esi
  4148a4:	push   ebp
  4148a5:	add    eax,0x167e3f8c
  4148aa:	fwait
  4148ab:	mov    dl,0xf5
  4148ad:	fidivr DWORD PTR [ebp+0x6e]
  4148b0:	push   0xffffffca
  4148b2:	dec    ecx
  4148b3:	ja     0x41483f
  4148b5:	cmc    
  4148b6:	stos   DWORD PTR es:[edi],eax
  4148b7:	ja     0x41491b
  4148b9:	(bad)  
  4148bb:	lock scas al,BYTE PTR es:[edi]
  4148bd:	push   edi
  4148be:	adc    BYTE PTR [edx+0x40],cl
  4148c1:	aaa    
  4148c2:	sbb    edx,ebx
  4148c4:	data16 mov ch,BYTE PTR [ebp+0x552aaefc]
  4148cb:	push   ebx
  4148cc:	lds    edx,FWORD PTR [ecx-0x25]
  4148cf:	inc    ebp
  4148d0:	or     BYTE PTR [edx-0x1f2713b],ah
  4148d6:	outs   dx,BYTE PTR ds:[esi]
  4148d7:	ins    DWORD PTR es:[edi],dx
  4148d8:	mov    eax,0xa9694d66
  4148dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e0:	and    eax,ebx
  4148e2:	rcl    DWORD PTR [esi+ecx*2],1
  4148e5:	jno    0x4148be
  4148e7:	cmc    
  4148e8:	fbld   TBYTE PTR [esi-0x4a285200]
  4148ee:	xchg   esi,eax
  4148ef:	icebp  
  4148f0:	retf   0x49ba
  4148f3:	sbb    ch,BYTE PTR [edi-0x72]
  4148f6:	cmp    DWORD PTR [ecx],edi
  4148f8:	out    0xec,al
  4148fa:	les    ebp,FWORD PTR [ebx]
  4148fc:	jmp    0x41489a
  4148fe:	loop   0x414972
  414900:	bound  esi,QWORD PTR [esi]
  414902:	adc    bh,cl
  414904:	fld    QWORD PTR [ebp+ecx*4-0x5d]
  414908:	je     0x414924
  41490a:	mov    dl,0x5c
  41490c:	push   esi
  41490d:	cdq    
  41490e:	jbe    0x4148f8
  414910:	cmp    eax,0x7d117b1
  414915:	out    dx,eax
  414916:	mov    edx,0xa4755122
  41491b:	pop    ebx
  41491c:	mov    edi,0x1b83183d
  414921:	add    DWORD PTR [eax+0x636827c4],edx
  414927:	jb     0x41496c
  414929:	pop    edi
  41492a:	mov    ?,WORD PTR [esi+0x60]
  41492d:	lods   eax,DWORD PTR ds:[esi]
  41492e:	pop    ds
  41492f:	and    al,0x6b
  414931:	cmp    ebx,esi
  414933:	fcomp  QWORD PTR [ecx-0x11]
  414936:	mov    edi,0x17a10476
  41493b:	lods   eax,DWORD PTR ds:[esi]
  41493c:	jno    0x4148ec
  41493e:	mov    ebp,0x62bf2d91
  414943:	pop    es
  414944:	(bad)  [edi-0x58]
  414947:	cmp    dl,BYTE PTR ds:0xdc06c27f
  41494d:	cmp    eax,0xf5528ed8
  414952:	mov    edi,DWORD PTR [ebx]
  414954:	push   esi
  414955:	leave  
  414956:	sbb    eax,0x9b3bd4f5
  41495b:	arpl   WORD PTR [ecx+eiz*1+0xd5718a0],dx
  414962:	sub    al,0xde
  414964:	xlat   BYTE PTR ds:[ebx]
  414965:	pop    ds
  414966:	loope  0x414920
  414968:	aas    
  414969:	pop    es
  41496a:	fbstp  TBYTE PTR [ecx+0x2a]
  41496d:	lods   al,BYTE PTR ds:[esi]
  41496e:	ror    DWORD PTR [ebx-0x34],cl
  414971:	xchg   BYTE PTR [esp+esi*1-0x12ce117a],bh
  414978:	test   BYTE PTR [edi],ch
  41497a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41497b:	gs cld 
  41497d:	inc    edi
  41497e:	jb     0x4149a6
  414980:	lock sub edx,DWORD PTR [edx]
  414983:	mov    ecx,DWORD PTR [ebx]
  414985:	and    ecx,esi
  414987:	fwait
  414988:	mov    esp,0xcf4adcbd
  41498d:	mov    edx,0xf5cfbfe5
  414992:	test   al,0x1
  414994:	jmp    0x7e13:0x1fd122c1
  41499b:	xchg   esi,eax
  41499c:	xor    al,0xe9
  41499e:	repz (bad) 
  4149a0:	int3   
  4149a1:	dec    ecx
  4149a2:	pop    ebp
  4149a3:	and    al,0xc1
  4149a5:	in     al,dx
  4149a6:	out    dx,eax
  4149a7:	pushf  
  4149a8:	push   edi
  4149a9:	addr16 add eax,0xfaba238e
  4149af:	xchg   ecx,eax
  4149b0:	pop    eax
  4149b1:	retf   0xce26
  4149b4:	jnp    0x4149dc
  4149b6:	add    DWORD PTR [ebx+0x62],edx
  4149b9:	retf   
  4149ba:	push   0xf043808c
  4149bf:	jmp    0x3a42ef26
  4149c4:	in     al,dx
  4149c5:	mov    WORD PTR [eax-0x4a],cs
  4149c8:	test   ebx,esp
  4149ca:	lahf   
  4149cb:	push   0xffffff9e
  4149cd:	add    al,0xdf
  4149cf:	int3   
  4149d0:	lods   al,BYTE PTR ds:[esi]
  4149d1:	pop    DWORD PTR [esi+0x4cc48d41]
  4149d7:	jg     0x414a33
  4149d9:	sar    BYTE PTR [edi+0x6f],cl
  4149dc:	mov    es,esp
  4149de:	push   ss
  4149df:	inc    ebp
  4149e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e1:	add    eax,0x8e5733e7
  4149e6:	repz xchg ecx,eax
  4149e8:	mov    ebp,0xc03e4650
  4149ed:	fldcw  WORD PTR [ecx-0x2a]
  4149f0:	xchg   BYTE PTR [ebx+0x8cee8b2],cl
  4149f6:	cwde   
  4149f7:	jns    0x414a22
  4149f9:	xchg   ecx,eax
  4149fa:	je     0x414986
  4149fc:	out    0x16,eax
  4149fe:	sbb    DWORD PTR [edi],ecx
  414a00:	push   ds
  414a01:	sbb    eax,0xcc4fdf47
  414a06:	xchg   BYTE PTR [ecx-0x27],bl
  414a09:	rcr    esp,cl
  414a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0c:	jmp    0x414a02
  414a0e:	xchg   edx,eax
  414a0f:	addr16 push cs
  414a11:	sti    
  414a12:	pop    esp
  414a13:	sbb    dl,BYTE PTR [esi-0x80]
  414a16:	in     eax,0x52
  414a18:	popa   
  414a19:	repnz add BYTE PTR [esi+edx*4-0x1dcdb35e],bh
  414a21:	lahf   
  414a22:	out    dx,eax
  414a23:	sub    al,0x10
  414a25:	mov    eax,ds:0x18a40f3d
  414a2a:	into   
  414a2b:	aad    0xbf
  414a2d:	xor    DWORD PTR [edi],esp
  414a2f:	inc    ecx
  414a30:	ret    0xddfb
  414a33:	int3   
  414a34:	call   0x594f:0xcb87e76d
  414a3b:	sbb    eax,0x2c85268b
  414a40:	scas   al,BYTE PTR es:[edi]
  414a41:	not    BYTE PTR [esi+0x5f376253]
  414a47:	xor    bh,0xdc
  414a4a:	jle    0x4149ff
  414a4c:	mov    ebx,0xabd9a5d7
  414a51:	push   ebx
  414a52:	call   DWORD PTR [esi-0x45]
  414a55:	fmul   QWORD PTR [esi-0x5a]
  414a58:	jp     0x414a3b
  414a5a:	repz inc ebp
  414a5c:	pop    ecx
  414a5d:	xor    ah,dh
  414a5f:	sbb    DWORD PTR [ecx+0x28ad5a2d],esp
  414a65:	sbb    edx,0xeeaff18
  414a6b:	mov    eax,ds:0x57a4404a
  414a70:	sti    
  414a71:	shl    ah,0x68
  414a74:	mov    eax,0x12027f85
  414a79:	mov    ch,0x51
  414a7b:	xchg   ebx,eax
  414a7c:	nop
  414a7d:	nop
  414a7e:	xor    eax,0x761b1f6a
  414a83:	mov    ch,0xcb
  414a85:	je     0x414a08
  414a87:	aas    
  414a88:	xchg   ebx,eax
  414a89:	dec    edi
  414a8a:	ret    0x5447
  414a8d:	inc    ecx
  414a8e:	(bad)  
  414a8f:	or     al,0x9a
  414a91:	jecxz  0x414a5a
  414a93:	xchg   ebx,eax
  414a94:	nop
  414a95:	inc    edi
  414a96:	ss pop es
  414a98:	inc    edi
  414a99:	dec    edi
  414a9a:	aam    0x2c
  414a9c:	clc    
  414a9d:	push   edx
  414a9e:	adc    esi,esi
  414aa0:	xchg   BYTE PTR [ecx],bl
  414aa2:	mov    bh,0x42
  414aa4:	sbb    bl,BYTE PTR [esp+edi*2]
  414aa7:	mov    dh,0xce
  414aa9:	pop    ds
  414aaa:	mov    ds:0x34b360f4,al
  414aaf:	mov    WORD PTR [esi],cs
  414ab1:	mov    ds:0x763bb813,al
  414ab6:	ret    
  414ab7:	ret    
  414ab8:	scas   al,BYTE PTR es:[edi]
  414ab9:	mov    ah,BYTE PTR [ecx+0x5448d0dd]
  414abf:	and    edi,edx
  414ac1:	xlat   BYTE PTR ds:[ebx]
  414ac2:	ret    
  414ac3:	xor    ebp,0xfffffffd
  414ac6:	xchg   ebp,eax
  414ac7:	cwde   
  414ac8:	xchg   BYTE PTR [esi-0x59],dl
  414acb:	add    ebx,DWORD PTR [ecx+eax*1]
  414ace:	mul    DWORD PTR [ebp+0xb]
  414ad1:	xchg   esp,eax
  414ad2:	arpl   WORD PTR [esp+eiz*2],ax
  414ad5:	cmp    bh,bl
  414ad7:	mov    DWORD PTR [edi-0x6d87d303],eax
  414add:	addr16 cmp ch,cl
  414ae0:	pushf  
  414ae1:	cmp    BYTE PTR [esi-0x72dd5b02],al
  414ae7:	test   BYTE PTR gs:[edx+0x4d],ch
  414aeb:	xor    esi,DWORD PTR [edx+ebx*8-0x6fdd152e]
  414af2:	push   ss
  414af3:	and    edi,DWORD PTR [edi]
  414af5:	dec    esp
  414af6:	jl     0x414acc
  414af8:	push   es
  414af9:	pop    esp
  414afa:	sub    DWORD PTR [eax-0x67],0x78
  414afe:	jnp    0x414a9f
  414b00:	jmp    0xfc4a:0x725bf6d4
  414b07:	dec    ebp
  414b08:	fstp   QWORD PTR [esi]
  414b0a:	mov    al,BYTE PTR [eax+0x66]
  414b0d:	add    edx,DWORD PTR [edx-0x2d4d927d]
  414b13:	pop    ds
  414b14:	inc    eax
  414b15:	xchg   BYTE PTR [edi+0x6],cl
  414b18:	cmp    ebx,DWORD PTR [edi+0x73f30477]
  414b1e:	(bad)  
  414b20:	pop    eax
  414b21:	fldenv [ecx+0x75]
  414b24:	fdiv   QWORD PTR [ebx]
  414b26:	pushf  
  414b27:	pop    edx
  414b28:	sti    
  414b29:	mov    dh,0xa9
  414b2b:	add    ebx,DWORD PTR [edi]
  414b2d:	test   eax,0x7d849519
  414b32:	f2xm1  
  414b34:	push   edx
  414b35:	or     BYTE PTR [edx],bh
  414b37:	adc    DWORD PTR [ecx+eax*8],0xffffff9f
  414b3b:	aaa    
  414b3c:	pop    esp
  414b3d:	xor    WORD PTR [ecx+0xb],bx
  414b41:	jae    0x414ba8
  414b43:	mov    edi,0xe2cc890e
  414b48:	and    al,0xc9
  414b4a:	out    0x92,eax
  414b4c:	sbb    BYTE PTR [ecx+0x36dd3b0c],ch
  414b52:	sbb    dl,ah
  414b54:	xchg   DWORD PTR [eax+edi*2],ecx
  414b57:	int3   
  414b58:	xor    al,BYTE PTR [eax]
  414b5a:	xchg   ebx,eax
  414b5b:	add    bh,al
  414b5d:	sbb    eax,DWORD PTR ds:0xf0c51004
  414b63:	pslld  mm3,QWORD PTR [eax]
  414b66:	sub    eax,0xb4e8d7b2
  414b6b:	pop    edx
  414b6c:	inc    edi
  414b6d:	sub    DWORD PTR [edx+edx*8+0x72],edx
  414b71:	jnp    0x414b52
  414b73:	and    dh,BYTE PTR [ecx+0x3c349d5e]
  414b79:	xchg   ebx,eax
  414b7a:	mov    ecx,0xe4159642
  414b7f:	push   edi
  414b80:	jb     0x414b5a
  414b82:	scas   eax,DWORD PTR es:[edi]
  414b83:	cmp    dl,dl
  414b85:	cwde   
  414b86:	pop    edi
  414b87:	add    dl,BYTE PTR ds:0xf02ef46e
  414b8d:	jnp    0x414c08
  414b8f:	pop    esp
  414b90:	inc    esp
  414b91:	and    al,0x5f
  414b93:	cmp    dh,BYTE PTR [ebx]
  414b95:	inc    ebp
  414b96:	cdq    
  414b97:	adc    ecx,DWORD PTR [eax-0x24]
  414b9a:	push   ecx
  414b9b:	mov    ch,0xff
  414b9d:	adc    BYTE PTR [edx+0x636e26d3],0x51
  414ba4:	mov    fs,ebx
  414ba6:	call   0xd653:0x3b8f32ea
  414bad:	cwde   
  414bae:	jle    0x414b30
  414bb0:	dec    ebx
  414bb1:	ror    DWORD PTR [edi],cl
  414bb3:	fwait
  414bb4:	addr16 pop cx
  414bb7:	push   es
  414bb8:	(bad)  
  414bb9:	dec    edx
  414bba:	aaa    
  414bbb:	sub    al,0x4e
  414bbd:	dec    eax
  414bbe:	push   ecx
  414bbf:	test   BYTE PTR [edx],0xf4
  414bc2:	test   DWORD PTR [ebp+0x45],edx
  414bc5:	(bad)
  414bc9:	jnp    0x414b76
  414bcb:	inc    edx
  414bcc:	arpl   sp,dx
  414bce:	(bad)  
  414bcf:	loop   0x414b65
  414bd1:	and    eax,0x6b6ab72e
  414bd6:	int3   
  414bd7:	aad    0x9f
  414bd9:	cmc    
  414bda:	mov    edi,0x2a2f0bc2
  414bdf:	push   ebp
  414be0:	mov    ch,0xc5
  414be2:	mov    bh,0xa5
  414be4:	ins    BYTE PTR es:[edi],dx
  414be5:	or     al,0xfc
  414be7:	div    esi
  414be9:	icebp  
  414bea:	and    esp,esi
  414bec:	lock push 0x25e0e653
  414bf2:	jge    0x414c5c
  414bf4:	mov    dh,0xe6
  414bf6:	cmp    ch,0x71
  414bf9:	jae    0x414c03
  414bfb:	add    al,0x5b
  414bfd:	out    dx,eax
  414bfe:	jb     0x414c46
  414c00:	jp     0x414bb5
  414c02:	mov    esp,0xbc213eec
  414c07:	xor    al,dh
  414c09:	xor    eax,0x89f991a7
  414c0e:	pusha  
  414c0f:	das    
  414c10:	inc    ebx
  414c11:	adc    DWORD PTR ds:0x9ee4f5b7,esp
  414c17:	lods   al,BYTE PTR ds:[esi]
  414c18:	mov    al,ds:0x34fedd4d
  414c1d:	lahf   
  414c1e:	and    dh,cl
  414c20:	push   ebp
  414c21:	sbb    al,0xe2
  414c23:	(bad)  
  414c24:	sbb    ebp,DWORD PTR [ecx-0x4d]
  414c27:	jne    0x414ca3
  414c29:	xor    eax,0x5e48dd29
  414c2e:	inc    esp
  414c2f:	loopne 0x414c35
  414c31:	jle    0x414c05
  414c33:	aam    0xcc
  414c35:	in     al,0x50
  414c37:	push   esi
  414c38:	dec    ecx
  414c39:	rcl    DWORD PTR [ebp+ecx*8+0x40a4355a],cl
  414c40:	mov    al,0xb3
  414c42:	hlt    
  414c43:	dec    esp
  414c44:	xchg   bl,dl
  414c46:	inc    eax
  414c47:	jmp    FWORD PTR [edx]
  414c49:	lods   al,BYTE PTR ds:[esi]
  414c4a:	cmp    al,0x5c
  414c4c:	inc    ebx
  414c4d:	jnp    0x414cae
  414c4f:	scas   eax,DWORD PTR es:[edi]
  414c50:	or     eax,0xcc264fba
  414c55:	xchg   ebp,eax
  414c56:	loop   0x414c3d
  414c58:	out    dx,eax
  414c59:	push   eax
  414c5a:	and    ecx,DWORD PTR [edi+0x7466bce1]
  414c60:	cmp    BYTE PTR ds:0xc5a5d9b7,0xc
  414c67:	jg     0x414bf2
  414c69:	adc    BYTE PTR [ebp-0x67509341],cl
  414c6f:	ficomp DWORD PTR [ecx+eax*4+0x1b]
  414c73:	scas   al,BYTE PTR es:[edi]
  414c74:	inc    esi
  414c75:	xor    eax,0x2abcbd1
  414c7a:	das    
  414c7b:	mov    eax,ds:0x25195626
  414c80:	pop    ebp
  414c81:	test   al,0x3f
  414c83:	mov    BYTE PTR [eax],al
  414c85:	fld    DWORD PTR [edi+0x487c299e]
  414c8b:	inc    ecx
  414c8c:	aas    
  414c8d:	jp     0x414c85
  414c8f:	jge    0x414c22
  414c91:	std    
  414c92:	sbb    DWORD PTR [ebx-0x12],0x30
  414c96:	jb     0x414c41
  414c98:	or     ebx,esp
  414c9a:	ror    BYTE PTR [ebx],1
  414c9c:	mov    ds:0x108a663d,al
  414ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca2:	ja     0x414c34
  414ca4:	in     al,0x30
  414ca6:	mov    eax,ds:0xd88e7c84
  414cab:	dec    ebx
  414cac:	push   0x2c051b86
  414cb1:	jae    0x414c7d
  414cb3:	sub    eax,0xa8a491cd
  414cb8:	cmp    eax,0x433b293c
  414cbd:	jp     0x414d33
  414cbf:	(bad)  
  414cc0:	iret   
  414cc1:	jge    0x414ce9
  414cc3:	xchg   ebp,eax
  414cc4:	(bad)  
  414cc5:	jo     0x414d2c
  414cc7:	das    
  414cc8:	ja     0x414caa
  414cca:	and    BYTE PTR [esi+esi*8+0x1],cl
  414cce:	cmp    DWORD PTR fs:[edi],eax
  414cd1:	mov    esi,0x91dd0f0e
  414cd6:	inc    esp
  414cd7:	jle    0x414d43
  414cd9:	pop    ss
  414cda:	scas   eax,DWORD PTR es:[edi]
  414cdb:	mov    ecx,0xbb6a67d4
  414ce0:	cli    
  414ce1:	les    edi,FWORD PTR [ecx-0x5e91e55]
  414ce7:	pushf  
  414ce8:	aas    
  414ce9:	pop    ds
  414cea:	mov    cs,WORD PTR [ecx-0x100adb74]
  414cf0:	or     al,0x60
  414cf2:	stos   BYTE PTR es:[edi],al
  414cf3:	aaa    
  414cf4:	rol    BYTE PTR [ecx],0x8
  414cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cf8:	fisubr WORD PTR [eax+0x5d]
  414cfb:	and    esi,ebx
  414cfd:	fistp  QWORD PTR [ecx*2-0xfd9b999]
  414d04:	inc    eax
  414d05:	cdq    
  414d06:	add    ecx,0x30
  414d09:	lock mov dh,0x69
  414d0c:	or     edi,DWORD PTR [ecx]
  414d0e:	xchg   BYTE PTR ds:0xe3331ff1,ah
  414d14:	(bad)  [ecx+esi*1-0x7f802c92]
  414d1b:	out    dx,al
  414d1c:	inc    esp
  414d1d:	out    dx,eax
  414d1e:	mov    edi,0xde8c8490
  414d23:	xchg   DWORD PTR [esi+0x4af3104c],edi
  414d29:	das    
  414d2a:	adc    esi,DWORD PTR [ebp-0x5a84dd8b]
  414d30:	test   DWORD PTR [ebx-0x4d],0x527f96b1
  414d37:	int    0xb8
  414d39:	cld    
  414d3a:	cmp    BYTE PTR [ecx+0x5e],0x8
  414d3e:	into   
  414d3f:	mov    al,0x9b
  414d41:	add    ecx,edx
  414d43:	ret    0x5938
  414d46:	jp     0x414d37
  414d48:	out    dx,eax
  414d49:	mov    cl,0x81
  414d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d4c:	xor    al,0x99
  414d4e:	add    al,BYTE PTR [ecx-0x70]
  414d51:	(bad)  [eax]
  414d53:	mov    ecx,0x86acf737
  414d58:	xchg   esi,eax
  414d59:	adc    ebx,esp
  414d5b:	pop    esi
  414d5c:	lods   eax,DWORD PTR ds:[esi]
  414d5d:	pop    edi
  414d5e:	xor    bl,BYTE PTR [eax-0x4f]
  414d61:	cld    
  414d62:	sub    eax,0x8f067f31
  414d67:	ret    
  414d68:	int    0x19
  414d6a:	bound  ebp,QWORD PTR [eax+0x30cddc87]
  414d70:	adc    eax,0x86d60769
  414d75:	sbb    BYTE PTR [ecx],dl
  414d77:	push   ebx
  414d78:	add    ebx,DWORD PTR [ebx-0x44]
  414d7b:	ja     0x414d70
  414d7d:	and    al,BYTE PTR [ebx-0x26c44480]
  414d83:	xlat   BYTE PTR ds:[ebx]
  414d84:	jno    0x414d19
  414d86:	out    dx,eax
  414d87:	xor    BYTE PTR [edx-0x68],bl
  414d8a:	xor    al,0xaa
  414d8c:	push   ebp
  414d8d:	out    dx,eax
  414d8e:	add    DWORD PTR [edx+0x64678584],0xf2b449c8
  414d98:	pushf  
  414d99:	dec    eax
  414d9a:	and    DWORD PTR [ecx-0x19],0x4bfb0cd6
  414da1:	mov    eax,0xe29ef56
  414da6:	inc    esi
  414da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da8:	dec    eax
  414da9:	jo     0x414db6
  414dab:	fucomi st,st(2)
  414dad:	frstpm(287 only) 
  414daf:	in     eax,0x85
  414db1:	push   0x25
  414db3:	dec    edx
  414db4:	int3   
  414db5:	out    dx,al
  414db6:	push   0x1d9624c8
  414dbb:	jno    0x414dfc
  414dbd:	xchg   ebx,eax
  414dbe:	jbe    0x414d70
  414dc0:	lds    esi,FWORD PTR [ebx]
  414dc2:	std    
  414dc3:	hlt    
  414dc4:	cmp    BYTE PTR [eax-0x1a549d40],cl
  414dca:	stos   DWORD PTR es:[edi],eax
  414dcb:	adc    DWORD PTR [ecx+0x25],ebp
  414dce:	jne    0x414d5b
  414dd0:	sbb    eax,0x8b7fb85
  414dd5:	(bad)  
  414dd6:	test   eax,0xc3b9ee46
  414ddb:	sub    BYTE PTR [eax+0x13889cea],bl
  414de1:	inc    esi
  414de2:	data16 je 0x414e44
  414de5:	sahf   
  414de6:	ja     0x414dab
  414de8:	xor    bh,BYTE PTR [eax-0x2f2af8ac]
  414dee:	sub    edi,ebx
  414df0:	sbb    esp,DWORD PTR [ebx*4-0x5b9922b8]
  414df7:	sub    eax,0xdb53c8e7
  414dfc:	or     al,0x19
  414dfe:	adc    dl,al
  414e00:	ja     0x414d89
  414e02:	xchg   esi,eax
  414e03:	mov    DWORD PTR [ecx+0x1a],edx
  414e06:	or     eax,0xe5c88752
  414e0b:	or     BYTE PTR [edi],0x3b
  414e0e:	cmp    ebp,ecx
  414e10:	push   0xc2d3c2da
  414e15:	loope  0x414e0b
  414e17:	inc    ebx
  414e18:	jo     0x414dc1
  414e1a:	or     al,0x14
  414e1c:	std    
  414e1d:	ret    
  414e1e:	test   DWORD PTR [edi+0x31],edx
  414e21:	fcomp  st(6)
  414e23:	jo     0x414e20
  414e25:	dec    edx
  414e26:	js     0x414e0a
  414e28:	add    al,0xa4
  414e2a:	xor    eax,0xa2913a94
  414e2f:	popf   
  414e30:	inc    esp
  414e31:	pusha  
  414e32:	inc    eax
  414e33:	pushf  
  414e34:	xlat   BYTE PTR ds:[ebx]
  414e35:	retf   0xc09a
  414e38:	scas   al,BYTE PTR es:[edi]
  414e39:	imul   DWORD PTR [ebx*4+0x6593246f]
  414e40:	sbb    eax,0x3a03fd99
  414e45:	mov    ds:0x7ba37d3a,eax
  414e4a:	popa   
  414e4b:	mov    eax,ds:0x7b694d0a
  414e50:	(bad)  
  414e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e52:	or     BYTE PTR [esi],cl
  414e54:	cdq    
  414e55:	jecxz  0x414df2
  414e57:	call   0x385b:0x31fb62a9
  414e5e:	adc    BYTE PTR ds:0xc07d66e4,bl
  414e64:	inc    ebx
  414e65:	jbe    0x414e46
  414e67:	cdq    
  414e68:	pop    esi
  414e69:	inc    ebp
  414e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e6b:	out    dx,eax
  414e6c:	cdq    
  414e6d:	sbb    BYTE PTR [edx+0x75],0xe5
  414e71:	sti    
  414e72:	test   eax,0x474528fe
  414e77:	add    DWORD PTR [ebp+0x5f],ebp
  414e7a:	push   esp
  414e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e7c:	(bad)  
  414e7d:	mov    ds:0x143eeeb9,al
  414e82:	mov    bh,0x7b
  414e84:	xor    DWORD PTR [ebx],esi
  414e86:	pop    eax
  414e87:	inc    ecx
  414e88:	jle    0x414e73
  414e8a:	mov    edx,0x753948ca
  414e8f:	int    0xbc
  414e91:	jmp    0x3eccea0e
  414e96:	test   al,0xac
  414e98:	cmp    BYTE PTR [edi],0xf9
  414e9b:	xchg   edx,eax
  414e9c:	mov    al,0x96
  414e9e:	cmp    DWORD PTR [eax+eax*1+0x31],esp
  414ea2:	and    BYTE PTR [eax],dl
  414ea4:	mov    dh,0x8f
  414ea6:	inc    al
  414ea8:	dec    esi
  414ea9:	inc    esi
  414eaa:	mov    ds:0x24c7ece4,eax
  414eaf:	pop    ebx
  414eb0:	push   esi
  414eb1:	ds mov edx,0xb47fe719
  414eb7:	loope  0x414ee6
  414eb9:	mov    ss,WORD PTR [ebx]
  414ebb:	sub    al,0xd0
  414ebd:	out    dx,al
  414ebe:	dec    ebx
  414ebf:	pop    edi
  414ec0:	dec    ebx
  414ec1:	and    esi,DWORD PTR [ecx+0x3e]
  414ec4:	outs   dx,BYTE PTR ds:[esi]
  414ec5:	sti    
  414ec6:	shl    DWORD PTR [ebp-0x66],0xb3
  414eca:	loopne 0x414ea8
  414ecc:	call   0xb11e:0x6541ecd3
  414ed3:	xor    eax,edi
  414ed5:	inc    ebp
  414ed6:	leave  
  414ed7:	sbb    dl,dh
  414ed9:	push   edx
  414eda:	retf   
  414edb:	sub    eax,DWORD PTR [ebx+0x7fdd767]
  414ee1:	hlt    
  414ee2:	jl     0x414e7d
  414ee4:	dec    eax
  414ee5:	shr    DWORD PTR [eax],1
  414ee7:	popf   
  414ee8:	xor    bh,bh
  414eea:	cmc    
  414eeb:	shr    DWORD PTR [eax+0x137ce028],1
  414ef1:	lods   eax,DWORD PTR ds:[esi]
  414ef2:	lahf   
  414ef3:	sub    ebx,DWORD PTR [ecx-0x48]
  414ef6:	daa    
  414ef7:	jo     0x414f1e
  414ef9:	int    0x90
  414efb:	shl    BYTE PTR [edx],cl
  414efd:	lea    ebx,[ebx]
  414eff:	cmp    eax,0x66a2c6
  414f04:	call   0xcfca4c7
  414f09:	pop    esp
  414f0a:	lods   eax,DWORD PTR ds:[esi]
  414f0b:	ins    DWORD PTR es:[edi],dx
  414f0c:	aad    0x69
  414f0e:	sub    eax,0x8236e7f7
  414f13:	add    eax,0xe5f7598
  414f18:	mov    ds:0x6153069c,eax
  414f1d:	adc    al,0x9f
  414f1f:	push   eax
  414f20:	pop    ebp
  414f21:	or     dl,dh
  414f23:	clc    
  414f24:	jb     0x414f8c
  414f26:	arpl   WORD PTR [eax-0xe],bp
  414f29:	aam    0x88
  414f2b:	add    eax,0xc0b70f00
  414f30:	jle    0x414ee2
  414f32:	or     al,0x9c
  414f34:	and    BYTE PTR [ebx+0x38],bl
  414f37:	test   eax,0xcfb76ae8
  414f3c:	add    cl,0xf6
  414f3f:	into   
  414f40:	imul   ebp,edx,0x60
  414f43:	dec    edi
  414f44:	adc    edi,DWORD PTR [ecx-0x53fc7984]
  414f4a:	aas    
  414f4b:	adc    BYTE PTR ds:0x6aae374c,bl
  414f51:	xor    DWORD PTR ds:0xd86e1afb,eax
  414f57:	fmul   DWORD PTR [ecx+0x53698fb4]
  414f5d:	sbb    eax,0xe7de62ac
  414f62:	pop    esi
  414f63:	jl     0x414eec
  414f65:	sub    BYTE PTR [esp+edi*4-0x112c10b2],ah
  414f6c:	push   0x48c2233f
  414f71:	inc    edx
  414f72:	inc    ebp
  414f73:	pop    eax
  414f74:	daa    
  414f75:	pop    ebx
  414f76:	cmp    edi,DWORD PTR [ecx]
  414f78:	popa   
  414f79:	nop
  414f7a:	mov    dl,bl
  414f7c:	call   DWORD PTR [edx+edi*4-0x176807f2]
  414f83:	popa   
  414f84:	dec    ebp
  414f85:	sub    ebp,DWORD PTR [ecx-0x3f]
  414f88:	mov    ds:0x7442efda,eax
  414f8d:	xlat   BYTE PTR ds:[ebx]
  414f8e:	js     0x414fc4
  414f90:	inc    edx
  414f91:	ins    DWORD PTR es:[edi],dx
  414f92:	cmc    
  414f93:	cmp    BYTE PTR [ecx+0x3a585cec],ah
  414f99:	add    DWORD PTR [esi-0x7c],0xfffffff4
  414f9d:	gs jl  0x414f41
  414fa0:	or     eax,DWORD PTR [edx+0x12]
  414fa3:	outs   dx,DWORD PTR ds:[esi]
  414fa4:	jnp    0x41501b
  414fa6:	dec    esi
  414fa7:	or     eax,0x1c98fe37
  414fac:	cmc    
  414fad:	push   0xf7d8690f
  414fb2:	fmul   QWORD PTR [ebx]
  414fb4:	loopne 0x414f8c
  414fb6:	jbe    0x414fe6
  414fb8:	lods   al,BYTE PTR ds:[esi]
  414fb9:	fbld   TBYTE PTR ss:[ebx+edi*2]
  414fbd:	(bad)  
  414fbe:	xchg   ebp,eax
  414fbf:	pushf  
  414fc0:	xchg   esp,eax
  414fc1:	ret    
  414fc2:	and    bl,BYTE PTR [ecx-0x61]
  414fc5:	(bad)  
  414fc6:	repnz stc 
  414fc8:	imul   edx,DWORD PTR [ebx+0x7650871c],0xb5ab5513
  414fd2:	enter  0xfe2e,0x78
  414fd6:	jp     0x415009
  414fd8:	mov    ecx,0xf8c9f14b
  414fdd:	pop    DWORD PTR [edi+0x661a884d]
  414fe3:	xchg   edi,eax
  414fe4:	mov    al,ds:0xae844e1b
  414fe9:	(bad)  
  414fea:	fistp  QWORD PTR [ecx-0x2e]
  414fed:	mov    ah,0x39
  414fef:	lahf   
  414ff0:	les    edx,FWORD PTR [bx+si]
  414ff3:	push   esi
  414ff4:	dec    esp
  414ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff6:	imul   ecx,DWORD PTR [edx],0x85590a3f
  414ffc:	aaa    
  414ffd:	push   edx
  414ffe:	add    BYTE PTR [esi],bh
  415000:	add    eax,0x141210c9
  415005:	mov    eax,ebx
  415007:	rol    esi,cl
  415009:	xchg   BYTE PTR [ecx-0x44913b87],dl
  41500f:	cdq    
  415010:	popa   
  415011:	popa   
  415012:	clc    
  415013:	inc    eax
  415014:	pushf  
  415015:	repz out dx,eax
  415017:	outs   dx,BYTE PTR ds:[esi]
  415018:	idiv   DWORD PTR [ecx+0x9eccf5]
  41501e:	mov    al,ah
  415020:	and    bh,BYTE PTR [edi]
  415022:	scas   al,BYTE PTR es:[edi]
  415023:	sahf   
  415024:	pop    ecx
  415025:	lea    ebp,[ecx]
  415027:	mov    dh,0x27
  415029:	fdivr  QWORD PTR [eax-0x6a]
  41502c:	xchg   DWORD PTR [ebx+0x7c],esp
  41502f:	xchg   edx,eax
  415030:	lea    eax,[edi-0x6c73bded]
  415036:	dec    edx
  415037:	leave  
  415038:	xchg   esi,eax
  415039:	sbb    bh,BYTE PTR ds:0xe0d1100a
  41503f:	aas    
  415040:	mov    BYTE PTR ds:0xf077110,al
  415046:	(bad)  
  415047:	fwait
  415048:	repnz pop edi
  41504a:	jmp    0x414ffb
  41504c:	(bad)
  41504f:	jle    0x414fea
  415051:	in     al,0x7c
  415053:	mov    bh,0x72
  415055:	(bad)  [ebp+0x27e39509]
  41505b:	push   esi
  41505c:	or     al,BYTE PTR [eax-0x77]
  41505f:	and    al,0xfd
  415061:	adc    eax,0x301b2aae
  415066:	jbe    0x41500a
  415068:	es push eax
  41506a:	lods   al,BYTE PTR ds:[esi]
  41506b:	add    eax,DWORD PTR [ecx-0x4559fa2]
  415071:	push   esp
  415072:	push   cs
  415073:	mov    ah,0xd2
  415075:	in     eax,0x1c
  415077:	dec    eax
  415078:	inc    esi
  415079:	stc    
  41507a:	mov    cl,0xd
  41507c:	arpl   WORD PTR [esi-0x42d82749],bx
  415082:	sbb    cl,bh
  415084:	ins    BYTE PTR es:[edi],dx
  415085:	xchg   BYTE PTR [ebx+0x3d],al
  415088:	jle    0x415037
  41508a:	in     al,dx
  41508b:	jmp    FWORD PTR [ecx+0x2953b7b1]
  415091:	cld    
  415092:	daa    
  415093:	cli    
  415094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415095:	xchg   DWORD PTR [edx+eax*2+0x11962509],eax
  41509c:	jb     0x4150c7
  41509e:	in     eax,dx
  41509f:	retf   
  4150a0:	in     al,dx
  4150a1:	adc    dl,dl
  4150a3:	add    eax,0x20ce6868
  4150a8:	inc    esp
  4150a9:	xchg   ebp,eax
  4150aa:	outs   dx,BYTE PTR ds:[esi]
  4150ab:	ret    
  4150ac:	add    DWORD PTR [edx+0x6f],edi
  4150af:	fisttp WORD PTR [ecx-0x2a]
  4150b2:	cwde   
  4150b3:	mov    dl,0x5b
  4150b5:	push   ecx
  4150b6:	cmp    BYTE PTR [edi+0x10],dh
  4150b9:	sub    al,0x7d
  4150bb:	cmp    DWORD PTR [edx],eax
  4150bd:	mul    DWORD PTR [eax+ebx*4+0x77]
  4150c1:	jbe    0x41504d
  4150c3:	adc    al,0xc2
  4150c5:	ins    DWORD PTR es:[edi],dx
  4150c6:	(bad)  
  4150c7:	push   eax
  4150c8:	std    
  4150c9:	pop    ebx
  4150ca:	sub    DWORD PTR [esi+0x11],esi
  4150cd:	jge    0x4150fb
  4150cf:	repz pop ebp
  4150d1:	pushf  
  4150d2:	fidivr DWORD PTR [edx-0x5a]
  4150d5:	test   al,0x92
  4150d7:	mov    eax,0x2f96dd1
  4150dc:	jmp    0x4150ec
  4150de:	test   dl,0x11
  4150e1:	adc    esp,DWORD PTR [edi+0x5b]
  4150e4:	(bad)  
  4150e6:	dec    ebx
  4150e7:	cmp    al,0x5d
  4150e9:	dec    esi
  4150ea:	dec    ebx
  4150eb:	or     ecx,0x57
  4150ee:	pop    ds
  4150ef:	xchg   edi,eax
  4150f0:	pop    esp
  4150f1:	sub    eax,0x18ef6e5b
  4150f6:	repnz push es
  4150f8:	cli    
  4150f9:	arpl   dx,ax
  4150fb:	xchg   esp,eax
  4150fc:	mov    ds:0x8238dadb,al
  415101:	ss sub eax,0x811e07e1
  415107:	sti    
  415108:	sub    BYTE PTR [ecx],cl
  41510a:	out    0xe7,eax
  41510c:	xor    ebx,esp
  41510e:	sbb    DWORD PTR [edx+0x22],esi
  415111:	mov    edi,0xc1cae6c
  415116:	jg     0x415166
  415118:	mov    esi,0x28831b3b
  41511d:	ins    DWORD PTR es:[edi],dx
  41511e:	leave  
  41511f:	outs   dx,BYTE PTR ds:[esi]
  415120:	out    0x15,al
  415122:	ret    
  415123:	xor    al,0x85
  415125:	arpl   WORD PTR [ebx-0x620073cc],ax
  41512b:	rcl    esp,0x5d
  41512e:	xor    BYTE PTR [esi-0x5d84b5c6],ah
  415134:	ret    
  415135:	mov    edx,0xc7f518c5
  41513a:	inc    edi
  41513b:	ror    BYTE PTR [ebp+0x16],1
  41513e:	retf   0x1980
  415141:	pop    eax
  415142:	aaa    
  415143:	outs   dx,BYTE PTR ds:[esi]
  415144:	retf   
  415145:	cld    
  415146:	push   ebp
  415147:	jmp    0x415163
  415149:	xchg   DWORD PTR ds:0x94a3b98a,eax
  41514f:	mov    al,ds:0x3969019e
  415154:	gs mov dh,0xc7
  415157:	cld    
  415158:	clc    
  415159:	push   esp
  41515a:	inc    esp
  41515b:	dec    esi
  41515c:	xor    ah,BYTE PTR [eax+ecx*8-0x420fba17]
  415163:	cdq    
  415164:	sbb    DWORD PTR [edx+0x294e29af],0xfffffff6
  41516b:	ret    
  41516c:	loope  0x415170
  41516e:	fsub   st(0),st
  415170:	adc    eax,0x7771e6ec
  415175:	cli    
  415176:	(bad)  
  415177:	jmp    0x415128
  415179:	loop   0x4151e1
  41517b:	test   BYTE PTR [edx-0x2d422065],bl
  415181:	in     al,0xfa
  415183:	ja     0x4151fc
  415185:	push   edx
  415186:	push   eax
  415187:	fild   WORD PTR ds:0xcb61a95
  41518d:	add    DWORD PTR [ebp-0x5e],ebx
  415190:	or     BYTE PTR [ebp+0x4a],0xf2
  415194:	dec    eax
  415195:	push   ebp
  415196:	mov    ah,0xb7
  415198:	shr    DWORD PTR [edx+0x2a],cl
  41519b:	and    BYTE PTR [esi],dh
  41519d:	sbb    DWORD PTR [esi],eax
  41519f:	mov    ss,WORD PTR ds:0x7a16c2b7
  4151a5:	in     al,dx
  4151a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a7:	iret   
  4151a8:	inc    esi
  4151a9:	(bad)  
  4151aa:	cmp    eax,0xe3678561
  4151af:	lahf   
  4151b0:	test   dh,0xe7
  4151b3:	mov    al,BYTE PTR ds:0x6a34dbaa
  4151b9:	ds jl  0x4151fe
  4151bc:	(bad)  
  4151bd:	adc    eax,0x166e9cc8
  4151c2:	out    0xfa,eax
  4151c4:	mov    bl,0x90
  4151c6:	les    eax,FWORD PTR [ebx-0x25]
  4151c9:	or     bh,BYTE PTR [esi+ebp*8+0x8]
  4151cd:	dec    esp
  4151ce:	xchg   ecx,eax
  4151cf:	jnp    0x4151a1
  4151d1:	jmp    0x415238
  4151d3:	cmp    ecx,edi
  4151d5:	stos   DWORD PTR es:[edi],eax
  4151d6:	daa    
  4151d7:	xor    BYTE PTR [eax+0x24],0x9d
  4151db:	shr    ecx,cl
  4151dd:	leave  
  4151de:	mov    edx,DWORD PTR [edi]
  4151e0:	or     ebp,ebp
  4151e2:	fsub   DWORD PTR [esi+ecx*2-0x55a277ee]
  4151e9:	shr    DWORD PTR [eax+0x72],1
  4151ec:	inc    ecx
  4151ed:	arpl   WORD PTR [esi-0x1e],ax
  4151f0:	push   edi
  4151f1:	sub    edx,DWORD PTR [ebx]
  4151f3:	aad    0x94
  4151f5:	and    ecx,DWORD PTR [ecx-0x301183f9]
  4151fb:	or     DWORD PTR [esp+edx*4],ebx
  4151fe:	int3   
  4151ff:	add    eax,0xfdbdc781
  415204:	lahf   
  415205:	fdivr  st(6),st
  415207:	xchg   ebx,eax
  415208:	push   esi
  415209:	(bad)  
  41520a:	sbb    al,0x5
  41520c:	icebp  
  41520d:	mov    ch,0x4b
  41520f:	sbb    bl,BYTE PTR ds:0x4af429db
  415215:	or     DWORD PTR [ecx+0x1],ebx
  415218:	addr16 popa 
  41521a:	sub    esi,DWORD PTR es:[esi-0x32365e]
  415221:	fsin   
  415223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415224:	xchg   ebp,eax
  415225:	cdq    
  415226:	jnp    0x41521f
  415228:	test   al,0xa3
  41522a:	inc    edx
  41522b:	sub    eax,0xccdacf18
  415230:	jmp    0x2367c455
  415235:	xchg   ebp,eax
  415236:	in     eax,dx
  415237:	pusha  
  415238:	scas   eax,DWORD PTR es:[edi]
  415239:	inc    eax
  41523a:	in     al,0x5f
  41523c:	shl    DWORD PTR [ebp*4+0x688a5603],0xe5
  415244:	push   ecx
  415245:	or     al,0x28
  415247:	add    DWORD PTR [ebp+0x8d9e4bb],esp
  41524d:	inc    edx
  41524e:	mul    DWORD PTR [ebp-0x3d]
  415251:	sub    ecx,edx
  415253:	add    al,0x31
  415255:	add    eax,0x21f9111e
  41525a:	sub    eax,0x2af912ed
  41525f:	push   ebx
  415260:	mov    edx,0x5cfc97b1
  415265:	dec    ebx
  415266:	adc    BYTE PTR [ebp+0x31],bl
  415269:	imul   edx,DWORD PTR [edi-0x3d868a82],0xffffffe8
  415270:	call   0x449d:0xc3369fd8
  415277:	popa   
  415278:	add    al,0x37
  41527a:	(bad)  
  41527b:	mov    ds:0x4ecfdfa4,al
  415280:	or     ah,ah
  415282:	ret    
  415283:	test   BYTE PTR [ebx+0x577ef008],0xa4
  41528a:	sub    cl,BYTE PTR [ecx]
  41528c:	mov    ah,0xb2
  41528e:	lea    edx,ds:0x6164ca25
  415294:	div    DWORD PTR [edi+0x36]
  415297:	sub    cl,ah
  415299:	stos   DWORD PTR es:[edi],eax
  41529a:	gs mov edx,0x25cc955b
  4152a0:	mov    edi,0x9fc003db
  4152a5:	ret    0x951f
  4152a8:	mov    ecx,DWORD PTR [ecx+0x3e]
  4152ab:	aaa    
  4152ac:	mov    ch,0x19
  4152ae:	arpl   WORD PTR [ecx+0xf],bp
  4152b1:	iret   
  4152b2:	push   ecx
  4152b3:	and    al,BYTE PTR [eax-0x5f110721]
  4152b9:	fidiv  WORD PTR [esi-0x40]
  4152bc:	jp     0x41523e
  4152be:	call   0x829c:0x508bfce3
  4152c5:	mov    WORD PTR [ebx-0x17],ss
  4152c8:	inc    edx
  4152c9:	outs   dx,BYTE PTR ds:[esi]
  4152ca:	cli    
  4152cb:	xchg   ebx,eax
  4152cc:	add    ch,BYTE PTR [edi-0x7f1eb978]
  4152d2:	adc    eax,0x76b17ee6
  4152d7:	lea    ecx,[eax+0x366a8114]
  4152dd:	jne    0x415330
  4152df:	xchg   BYTE PTR [ebp+0x16f22023],bl
  4152e5:	retf   0x3b7e
  4152e8:	out    0x32,al
  4152ea:	jne    0x415369
  4152ec:	das    
  4152ed:	dec    ebp
  4152ee:	retf   
  4152ef:	leave  
  4152f0:	sbb    BYTE PTR [ebx],0x32
  4152f3:	test   al,0x87
  4152f5:	mov    ch,0xb6
  4152f7:	fidivr DWORD PTR [edx+0x38aac1f9]
  4152fd:	out    0x83,al
  4152ff:	xchg   ebp,eax
  415300:	mov    cl,0xb
  415302:	push   cs
  415303:	mov    eax,ds:0x5a9b49d9
  415308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415309:	mov    ebp,0x539f9d59
  41530e:	fimul  DWORD PTR [eax]
  415310:	pop    ebp
  415311:	dec    ecx
  415312:	jbe    0x4152bf
  415314:	and    al,0x17
  415316:	es loopne 0x415354
  415319:	sbb    esp,ebp
  41531b:	adc    eax,0x4fd5a005
  415320:	enter  0x4e02,0x8f
  415324:	lock mov bl,BYTE PTR [eax+0x22]
  415328:	aam    0x87
  41532a:	xchg   BYTE PTR [edx],al
  41532c:	stos   DWORD PTR es:[edi],eax
  41532d:	mov    dl,0xd6
  41532f:	jo     0x4152e7
  415331:	pop    eax
  415332:	sub    eax,0x8f664929
  415337:	push   cs
  415338:	adc    BYTE PTR [edx+0x1d7c8b1c],ch
  41533e:	rol    DWORD PTR [eax-0x1c610abf],1
  415344:	sub    DWORD PTR [ecx+eax*8],0x8991281b
  41534b:	add    BYTE PTR [eax+edi*2],dh
  41534e:	xor    cl,BYTE PTR [ecx]
  415350:	xchg   ebp,eax
  415351:	(bad)
  415354:	popa   
  415355:	adc    esp,DWORD PTR [eax]
  415357:	fs fwait
  415359:	rcl    DWORD PTR [edx],cl
  41535b:	adc    bh,0x23
  41535e:	dec    ecx
  41535f:	loopne 0x415301
  415361:	cmp    BYTE PTR [edx-0x76334aa],cl
  415367:	mov    ds:0x81a2c63c,al
  41536c:	rcr    dh,1
  41536e:	mov    gs,esi
  415370:	popa   
  415371:	fwait
  415372:	hlt    
  415373:	sbb    DWORD PTR [ebx],edi
  415375:	or     dh,BYTE PTR [ebx-0x79]
  415378:	adc    cl,ch
  41537a:	jp     0x4153e1
  41537c:	cmc    
  41537d:	sbb    bl,BYTE PTR [ebx+0xef47bc6]
  415383:	push   cs
  415384:	pop    ecx
  415385:	(bad)  
  415386:	hlt    
  415387:	(bad)  
  415389:	pop    ds
  41538a:	push   cs
  41538b:	pop    ecx
  41538c:	mov    edx,0xf3e1cd0c
  415391:	sbb    eax,0x6b655508
  415396:	repz nop DWORD PTR [ebx-0x1673823e]
  41539e:	jl     0x415369
  4153a0:	arpl   bx,di
  4153a2:	push   edx
  4153a3:	xchg   ecx,eax
  4153a4:	sub    BYTE PTR [edi-0x78],ch
  4153a7:	stos   DWORD PTR es:[edi],eax
  4153a8:	fs pop eax
  4153aa:	mov    al,0xf0
  4153ac:	pop    esp
  4153ad:	xchg   esp,eax
  4153ae:	fdiv   DWORD PTR [ebx+0x1b]
  4153b1:	clc    
  4153b2:	aaa    
  4153b3:	sbb    eax,0x7bcd7f5e
  4153b8:	mov    edi,ebx
  4153ba:	(bad)  [eax+0x160c84f9]
  4153c0:	sub    DWORD PTR [ebx],0xffffff83
  4153c3:	push   esp
  4153c4:	xor    al,0x24
  4153c6:	(bad)  
  4153c7:	cmp    eax,0xe29a152e
  4153cc:	push   esp
  4153cd:	jge    0x41541d
  4153cf:	lahf   
  4153d0:	cmc    
  4153d1:	sahf   
  4153d2:	inc    edi
  4153d3:	lods   al,BYTE PTR ds:[esi]
  4153d4:	push   ss
  4153d5:	pop    edx
  4153d6:	sub    al,ah
  4153d8:	or     DWORD PTR [esi],edx
  4153da:	(bad)  
  4153db:	mov    esp,0x38d69138
  4153e0:	lock inc ebx
  4153e2:	and    al,0x2e
  4153e4:	push   ebx
  4153e5:	xor    al,0xb9
  4153e7:	jge    0x4153d9
  4153e9:	sbb    ch,BYTE PTR [ecx-0x19]
  4153ec:	int    0x10
  4153ee:	add    eax,0xae419f43
  4153f4:	fcmovnbe st,st(7)
  4153f6:	push   ss
  4153f7:	sub    bh,ch
  4153f9:	pop    ss
  4153fa:	lea    edi,es:[esi+0x2e]
  4153fe:	ja     0x41547d
  415400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415401:	and    ecx,eax
  415403:	dec    esi
  415404:	mov    eax,0xab95b4df
  415409:	add    eax,0x34630000
  41540e:	rcl    BYTE PTR [edx],cl
  415410:	int    0x1f
  415412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415413:	mov    eax,0x5381754d
  415418:	aad    0x7d
  41541a:	sbb    al,0xd1
  41541c:	out    0xa6,al
  41541e:	sub    DWORD PTR [edx+edx*2-0x582912cf],esi
  415425:	loopne 0x415443
  415427:	test   eax,0x2854bc80
  41542c:	mov    al,0x4f
  41542e:	cmp    esi,ecx
  415430:	cmp    DWORD PTR [ebx+0x7f],0x936b9dfb
  415437:	(bad)  
  415439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41543a:	out    0xd9,al
  41543c:	mov    esi,0xd5192cc
  415441:	push   0xffffffe0
  415443:	push   ecx
  415444:	adc    BYTE PTR [eax+0x150c111e],0xd6
  41544b:	sub    dl,BYTE PTR [edi]
  41544d:	ins    BYTE PTR es:[edi],dx
  41544e:	scas   al,BYTE PTR es:[edi]
  41544f:	stc    
  415450:	sub    ch,bl
  415452:	and    ah,BYTE PTR ds:0x63abb1a1
  415458:	cmp    ebp,DWORD PTR [edx+0x3d7c26e2]
  41545e:	les    ebx,FWORD PTR [ebp+0x2f11a90d]
  415464:	mov    esp,0x9639cefa
  415469:	mov    edx,DWORD PTR [ebp+edi*1-0x38]
  41546d:	add    eax,0x402037f0
  415472:	fsubp  st(0),st
  415474:	scas   eax,DWORD PTR es:[edi]
  415475:	test   DWORD PTR ss:[ecx-0x23],0x86b4d35a
  41547d:	jns    0x415486
  41547f:	fdiv   DWORD PTR [ecx+0x48]
  415482:	sbb    ch,ah
  415484:	sub    DWORD PTR [ebp+0x42fe26da],esp
  41548a:	push   esp
  41548b:	outs   dx,BYTE PTR ds:[esi]
  41548c:	jg     0x415420
  41548e:	js     0x415434
  415490:	das    
  415491:	ror    BYTE PTR [ecx],cl
  415493:	leave  
  415494:	shr    al,cl
  415496:	loope  0x415513
  415498:	sub    ecx,0xb
  41549b:	mov    ebx,0xcdab0349
  4154a0:	ret    
  4154a1:	jle    0x415467
  4154a3:	jo     0x415427
  4154a5:	add    ch,BYTE PTR [ebp+0x27782652]
  4154ab:	or     al,0x7f
  4154ad:	xor    ebx,DWORD PTR [eax+0x24]
  4154b0:	sbb    DWORD PTR [ebx+edi*1+0x42ded9ff],0xc75d4fbb
  4154bb:	arpl   WORD PTR [edi+eiz*8+0x615d80d6],di
  4154c2:	sub    al,0x3c
  4154c4:	pop    ecx
  4154c5:	(bad)  
  4154c6:	in     al,0x36
  4154c8:	adc    al,0x3b
  4154ca:	xchg   ebp,eax
  4154cb:	call   0x41f4579c
  4154d0:	(bad)  
  4154d1:	mov    dl,0x6c
  4154d3:	cmp    al,0xd0
  4154d5:	es cs maskmovq mm3,(bad)
  4154d8:	neg    DWORD PTR [ecx-0x28f9b86c]
  4154de:	iret   
  4154df:	pop    esi
  4154e0:	outs   dx,DWORD PTR ds:[esi]
  4154e1:	mov    al,ds:0xdf555bfc
  4154e6:	inc    esp
  4154e7:	pop    ecx
  4154e8:	fs push 0x2e
  4154eb:	inc    eax
  4154ec:	dec    ebp
  4154ed:	mov    ebp,0x41e48a2b
  4154f2:	jg     0x4154a5
  4154f4:	or     BYTE PTR [edi-0x56],bl
  4154f7:	aaa    
  4154f8:	(bad)  
  4154f9:	jmp    0x789ec9f5
  4154fe:	mov    ch,0x60
  415500:	mov    edi,0x24195e71
  415505:	imul   DWORD PTR [esi+0x26]
  415508:	dec    ebx
  415509:	xchg   esi,eax
  41550a:	and    al,0xad
  41550c:	mov    esi,0x2f8989dc
  415511:	xchg   esp,eax
  415512:	xlat   BYTE PTR ds:[ebx]
  415513:	(bad)
  415517:	dec    ecx
  415518:	inc    ecx
  415519:	add    eax,0x21e6921c
  41551e:	pusha  
  41551f:	xchg   DWORD PTR ds:0x7c5e4e93,edx
  415525:	aaa    
  415526:	jp     0x415508
  415528:	sbb    eax,0xaee790e6
  41552d:	scas   al,BYTE PTR es:[edi]
  41552e:	jle    0x4154fb
  415530:	or     eax,0xc77a558
  415535:	ds jno 0x4154e6
  415538:	and    eax,0x1373f783
  41553e:	add    bl,dl
  415540:	shl    ecx,0x40
  415543:	dec    esp
  415544:	scas   al,BYTE PTR es:[edi]
  415545:	in     al,dx
  415546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415547:	mov    edx,DWORD PTR [ebx+0x21]
  41554a:	sti    
  41554b:	dec    edi
  41554c:	les    esp,FWORD PTR [ecx]
  41554e:	and    eax,0xa1bb4f50
  415553:	loop   0x4155aa
  415555:	fadd   st(1),st
  415557:	in     eax,dx
  415558:	and    BYTE PTR [esi-0x47],dh
  41555b:	fsubr  st(2),st
  41555d:	pop    es
  41555e:	or     eax,0xc70b2465
  415563:	js     0x41551a
  415565:	xchg   edi,eax
  415566:	enter  0xf874,0x57
  41556a:	jae    0x415571
  41556c:	lock bound esi,QWORD PTR [edx+0x70]
  415570:	adc    DWORD PTR [ecx-0x10cc72b3],edx
  415576:	rcr    BYTE PTR [edx+0x7c],0xe8
  41557a:	xor    al,0xfb
  41557c:	mov    ds:0x178395be,al
  415581:	mov    edx,0xa7749275
  415586:	sub    ah,BYTE PTR [ebx-0x68]
  415589:	cmp    ebp,DWORD PTR [ecx-0x24fb84cf]
  41558f:	aam    0x7e
  415591:	js     0x415558
  415593:	addr16 inc esi
  415595:	not    DWORD PTR [esi-0x66]
  415598:	loop   0x415525
  41559a:	lahf   
  41559b:	js     0x415526
  41559d:	push   esp
  41559e:	leave  
  41559f:	and    eax,0xa98a790d
  4155a4:	test   eax,0x4abb0e7f
  4155a9:	div    cl
  4155ab:	aaa    
  4155ac:	sub    bh,BYTE PTR [edi+0x52]
  4155af:	or     DWORD PTR [eax],0x30
  4155b2:	add    al,0xa8
  4155b4:	out    dx,eax
  4155b5:	cmp    BYTE PTR [esi+0x72c744cc],dl
  4155bb:	dec    esp
  4155bc:	xchg   ecx,eax
  4155bd:	fwait
  4155be:	push   esi
  4155bf:	les    esp,FWORD PTR [ecx+0x3f]
  4155c2:	xchg   BYTE PTR [edx],al
  4155c4:	sub    al,0x88
  4155c6:	sub    BYTE PTR [edx],dl
  4155c8:	xor    al,0x43
  4155ca:	std    
  4155cb:	push   edx
  4155cc:	cmp    ah,bl
  4155ce:	jno    0x4155ee
  4155d0:	cld    
  4155d1:	push   edi
  4155d2:	or     cl,BYTE PTR [edi+0x68]
  4155d5:	xchg   ebx,eax
  4155d6:	pop    ds
  4155d7:	(bad)  
  4155d8:	xor    bl,BYTE PTR [eax+0x48]
  4155db:	pop    eax
  4155dc:	mov    bh,0x48
  4155de:	push   ss
  4155df:	pop    ebp
  4155e0:	es (bad) 
  4155e2:	xor    BYTE PTR [edi+0x1dc6af38],dl
  4155e8:	xchg   eax,ebx
  4155ea:	mov    edi,0x5fa9aad5
  4155ef:	cmp    al,0xc9
  4155f1:	fwait
  4155f2:	mov    WORD PTR [ebx+0xa],gs
  4155f5:	and    al,0xf
  4155f7:	jno    0x415641
  4155f9:	xchg   edx,eax
  4155fa:	mov    edx,0xbb278dc6
  4155ff:	bound  esi,QWORD PTR [ecx]
  415601:	pop    esp
  415602:	lods   al,BYTE PTR ds:[esi]
  415603:	adc    ebp,DWORD PTR [esi]
  415605:	daa    
  415606:	jmp    0x4155cb
  415608:	clc    
  415609:	pop    eax
  41560a:	or     BYTE PTR [edi],0x94
  41560d:	les    edx,FWORD PTR [ebp+0x71]
  415610:	int3   
  415611:	bound  esi,QWORD PTR [eax]
  415613:	xlat   BYTE PTR ds:[ebx]
  415614:	pop    ebx
  415615:	dec    ebx
  415616:	xchg   BYTE PTR [eax+0x32],ch
  415619:	push   ebx
  41561a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41561b:	leave  
  41561c:	cld    
  41561d:	push   es
  41561e:	and    eax,DWORD PTR [edi-0x7b]
  415621:	push   edi
  415622:	shl    BYTE PTR [edx],0x95
  415625:	loop   0x41568c
  415627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415628:	stos   BYTE PTR es:[edi],al
  415629:	mov    ebp,DWORD PTR [ecx+eiz*2]
  41562c:	pop    edx
  41562d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41562e:	cdq    
  41562f:	push   edx
  415630:	cld    
  415631:	mov    WORD PTR [ebp-0x56128f57],ss
  415637:	adc    ecx,DWORD PTR ds:0xffaf3267
  41563d:	mov    ah,0xc8
  41563f:	dec    edi
  415640:	outs   dx,DWORD PTR ds:[esi]
  415641:	sub    BYTE PTR ss:[ebp+0x56],0x37
  415646:	sub    ah,BYTE PTR [ebp+edx*2-0x5f15a780]
  41564d:	fwait
  41564e:	popw   ds
  415650:	popa   
  415651:	dec    edx
  415652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415653:	stc    
  415654:	inc    ebx
  415655:	adc    eax,0x6b53667e
  41565a:	and    BYTE PTR [edx+eax*8-0x2ab21fe6],ah
  415661:	or     DWORD PTR [edi],0x70
  415664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415665:	stos   BYTE PTR es:[edi],al
  415666:	or     esp,DWORD PTR [ecx+0x54]
  415669:	jg     0x41562f
  41566b:	cmp    DWORD PTR [ebx],edx
  41566d:	adc    ch,dh
  41566f:	cmc    
  415670:	sub    DWORD PTR [edi-0x105f4116],ebp
  415676:	and    edi,edi
  415678:	or     eax,0x9fb967d0
  41567d:	xor    edi,ebp
  41567f:	xchg   esp,eax
  415680:	repnz sub eax,DWORD PTR [ecx-0x1f13e43d]
  415687:	mov    eax,DWORD PTR [esp+ebp*4+0x2d5ddfe2]
  41568e:	sbb    eax,0x79e70921
  415693:	aas    
  415694:	repz je 0x415680
  415697:	fstp   QWORD PTR [ecx+edx*8]
  41569a:	sti    
  41569b:	mov    edx,0xfa958644
  4156a0:	dec    ebx
  4156a1:	ror    DWORD PTR [ebx-0x73ffa510],1
  4156a7:	or     ch,cl
  4156a9:	(bad)  
  4156aa:	mov    ds:0xc005605a,eax
  4156af:	test   BYTE PTR ds:0xf114c81f,al
  4156b5:	pop    ss
  4156b6:	inc    esi
  4156b7:	xor    BYTE PTR [eax],ch
  4156b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ba:	and    BYTE PTR [edx+eax*1+0x7be6e908],dh
  4156c1:	and    eax,0x373d265c
  4156c6:	imul   eax,DWORD PTR [eax],0xffffffab
  4156c9:	xchg   DWORD PTR [esp+eiz*2-0x43f28873],edi
  4156d0:	add    DWORD PTR [ecx+0x42],esi
  4156d3:	fs fdivr st(6),st
  4156d6:	jae    0x415710
  4156d8:	cmp    DWORD PTR [ebx],edx
  4156da:	cli    
  4156db:	pop    es
  4156dc:	pop    DWORD PTR [ebp-0x38]
  4156df:	sbb    DWORD PTR [eax],ebp
  4156e1:	addr16 (bad) 
  4156e3:	mov    edi,DWORD PTR [eiz*1-0x4e5c8cc4]
  4156ea:	(bad)  
  4156eb:	in     eax,dx
  4156ec:	jo     0x4156b0
  4156ee:	push   0x4e0955e1
  4156f3:	or     DWORD PTR [ebx+edi*8-0x2e],edx
  4156f7:	fst    QWORD PTR [ebx+0x2c]
  4156fa:	jne    0x41577a
  4156fc:	push   0xeec4d797
  415701:	cmc    
  415702:	or     al,0xda
  415704:	lock dec ecx
  415706:	ja     0x4156b2
  415708:	imul   eax,ebp,0xe73c5f0
  41570e:	mov    al,0x41
  415710:	ja     0x41577c
  415712:	xor    DWORD PTR [edx-0x6ffb7136],esi
  415718:	adc    DWORD PTR [esi-0x11e04fa8],edi
  41571e:	mov    ch,0x8c
  415720:	xchg   ebp,eax
  415721:	jnp    0x415703
  415723:	cmp    DWORD PTR [edx],eax
  415725:	out    dx,al
  415726:	loopne 0x4156fc
  415728:	aaa    
  415729:	outs   dx,BYTE PTR ds:[esi]
  41572a:	mov    al,ds:0x9deed7d8
  41572f:	pop    esp
  415730:	pop    ecx
  415731:	dec    ebx
  415732:	lahf   
  415733:	jle    0x4157a9
  415735:	and    ch,BYTE PTR [ebx+0x7d75b88c]
  41573b:	cwde   
  41573c:	inc    ebx
  41573d:	ret    0xb260
  415740:	cld    
  415741:	mov    fs,WORD PTR [edi-0x1dc1b65b]
  415747:	fcomp  QWORD PTR [ecx+0x63]
  41574a:	or     ch,dl
  41574c:	dec    ecx
  41574d:	adc    DWORD PTR [esi+0x4e3e9a16],edx
  415753:	jmp    0xd4ac:0x2d4adfa2
  41575a:	retf   
  41575b:	pop    eax
  41575c:	leave  
  41575d:	sbb    cl,bl
  41575f:	lds    ebp,FWORD PTR [esi-0x382db65d]
  415765:	out    0xd,al
  415767:	xor    eax,0x3cf8cb21
  41576c:	add    ebx,DWORD PTR [ebx]
  41576e:	push   0x66
  415770:	cwde   
  415771:	mov    ebx,DWORD PTR [ebx+eax*4+0xdc330ea]
  415778:	adc    ah,BYTE PTR [ebp-0x9d42a86]
  41577e:	pusha  
  41577f:	retf   0x85cb
  415782:	xor    dl,BYTE PTR [esi+0x1afa57d5]
  415788:	pusha  
  415789:	inc    eax
  41578a:	(bad)  [eax-0x25f30a39]
  415790:	(bad)
  415793:	xchg   edx,eax
  415794:	das    
  415795:	jne    0x4157cb
  415797:	gs push ds
  415799:	add    DWORD PTR [ebx],esi
  41579b:	add    eax,0x408c0d20
  4157a0:	mov    al,0x2d
  4157a2:	pop    es
  4157a3:	add    ebp,edx
  4157a5:	mov    BYTE PTR [ecx+0x7091a832],bl
  4157ab:	out    0x74,eax
  4157ad:	xor    al,0x50
  4157af:	xor    dl,al
  4157b1:	dec    ebx
  4157b2:	ins    DWORD PTR es:[edi],dx
  4157b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b4:	mov    dh,0x18
  4157b6:	test   DWORD PTR [esi],ebp
  4157b8:	dec    edi
  4157b9:	and    al,0x1
  4157bb:	cmp    DWORD PTR [ecx-0x4f78f7a9],ebp
  4157c1:	lahf   
  4157c2:	jle    0x415815
  4157c4:	jecxz  0x415830
  4157c6:	adc    esp,DWORD PTR [eax+0x7794de9d]
  4157cc:	push   es
  4157cd:	sub    DWORD PTR [esi-0x15],esp
  4157d0:	mov    esp,DWORD PTR [esi-0x66103a54]
  4157d6:	in     al,0xd1
  4157d8:	dec    edx
  4157d9:	mov    eax,ds:0xc37d674
  4157de:	lods   eax,DWORD PTR ds:[esi]
  4157df:	test   al,0xbe
  4157e1:	aas    
  4157e2:	cmp    eax,0xa1d95bb
  4157e7:	shr    al,1
  4157e9:	jne    0x4157f1
  4157eb:	mov    ds:0x29b452e3,eax
  4157f0:	cmp    DWORD PTR [ebp-0x55],edx
  4157f3:	jb     0x4157e7
  4157f5:	sar    bl,0xff
  4157f8:	dec    ecx
  4157f9:	add    edx,DWORD PTR [ebp+0x5c96f2c7]
  4157ff:	and    dl,ah
  415801:	inc    ebp
  415802:	icebp  
  415803:	(bad)  
  415804:	call   0xafc3461b
  415809:	xlat   BYTE PTR ds:[ebx]
  41580a:	ret    0x6f1c
  41580d:	pop    ebp
  41580e:	call   0xe051a056
  415813:	repnz test ebx,ecx
  415816:	sbb    esi,DWORD PTR [eax-0x67]
  415819:	out    0xcb,eax
  41581b:	lea    esi,[edi+0x31e3736c]
  415821:	inc    edx
  415822:	mov    ebx,DWORD PTR ds:0x7a1c351b
  415828:	sbb    eax,0x66b4eaaf
  41582d:	test   BYTE PTR [edi+ebp*4-0x1],bl
  415831:	cmp    DWORD PTR [ebx+0x1263b387],esi
  415837:	outs   dx,DWORD PTR ds:[esi]
  415838:	adc    eax,DWORD PTR [ebx]
  41583a:	pop    edi
  41583b:	dec    ecx
  41583c:	push   ebp
  41583d:	mov    bh,0x46
  41583f:	xor    BYTE PTR [ecx-0x22],ah
  415842:	loopne 0x4157e9
  415844:	jmp    0x6e106cb4
  415849:	int    0xe8
  41584b:	data16 sbb al,0x5e
  41584e:	ja     0x4157ff
  415850:	fidivr DWORD PTR [ecx]
  415852:	std    
  415853:	fldl2t 
  415855:	push   0x1a
  415857:	sub    DWORD PTR [ebp+0x3c2f561f],ebx
  41585d:	mov    edx,0x5c2aee99
  415862:	sbb    eax,0xffcdbc07
  415867:	rcl    BYTE PTR [esi-0x4e],1
  41586a:	pop    esp
  41586b:	dec    ecx
  41586c:	or     eax,0x3fc7e1c
  415871:	cmp    BYTE PTR [eax-0x41],0x22
  415875:	mov    al,0x70
  415877:	sub    al,0x12
  415879:	inc    eax
  41587a:	arpl   WORD PTR [esi],bx
  41587c:	push   edi
  41587d:	out    0x37,eax
  41587f:	pop    ss
  415880:	or     esp,esp
  415882:	jbe    0x415900
  415884:	xchg   BYTE PTR [ecx],dh
  415886:	mov    DWORD PTR [ecx-0x46d86129],ecx
  41588c:	cwde   
  41588d:	scas   eax,DWORD PTR es:[edi]
  41588e:	sub    DWORD PTR [eax+0x5b],eax
  415891:	into   
  415892:	sbb    ecx,DWORD PTR fs:[esi-0x42cc9ddb]
  415899:	inc    ecx
  41589a:	cmp    DWORD PTR [ebx],ecx
  41589c:	or     DWORD PTR [ecx+0x76],edx
  41589f:	xchg   ebp,eax
  4158a0:	ror    dh,1
  4158a2:	adc    BYTE PTR [ecx+0x78fe29bf],bl
  4158a8:	pop    ecx
  4158a9:	mov    cl,0xed
  4158ab:	mov    edi,0xe4a38b4
  4158b0:	mov    BYTE PTR [ebp+0x5b53d25],cl
  4158b6:	dec    ebp
  4158b7:	pop    edi
  4158b8:	pusha  
  4158b9:	inc    edi
  4158ba:	cmp    eax,0x8fc5df4b
  4158bf:	mov    ah,0x49
  4158c1:	pop    ebp
  4158c2:	(bad)  
  4158c3:	clc    
  4158c4:	mov    dh,BYTE PTR [ecx]
  4158c6:	stos   BYTE PTR es:[edi],al
  4158c7:	clc    
  4158c8:	adc    eax,0x18ff7ba4
  4158cd:	adc    bh,bl
  4158cf:	xor    eax,0x6008b8e6
  4158d4:	or     eax,eax
  4158d6:	cmp    bl,al
  4158d8:	stos   DWORD PTR es:[edi],eax
  4158d9:	mov    al,BYTE PTR [edi]
  4158db:	retf   
  4158dc:	sbb    al,bl
  4158de:	push   esi
  4158df:	add    bl,BYTE PTR [edx-0x754d87c8]
  4158e5:	mov    ebp,DWORD PTR [edx]
  4158e7:	adc    eax,0x17b6cfd4
  4158ec:	sub    edx,DWORD PTR [ebx]
  4158ee:	xchg   ch,al
  4158f0:	adc    eax,0xaa709701
  4158f5:	ins    DWORD PTR es:[edi],dx
  4158f6:	push   ebp
  4158f7:	pop    ebx
  4158f8:	icebp  
  4158f9:	fdivp  st(6),st
  4158fb:	cmp    dl,BYTE PTR [esi+eax*2-0x1b]
  4158ff:	push   ss
  415900:	iret   
  415901:	mov    esp,DWORD PTR [edx+0x6f]
  415904:	mov    ecx,esi
  415906:	jnp    0x41590b
  415908:	adc    bl,cl
  41590a:	sub    DWORD PTR [edi],eax
  41590c:	clc    
  41590d:	pop    eax
  41590e:	jmp    0x415971
  415910:	clc    
  415911:	cmp    cl,BYTE PTR [edi-0x3f]
  415914:	dec    esi
  415915:	cli    
  415916:	je     0x415964
  415918:	push   edx
  415919:	js     0x415923
  41591b:	xor    DWORD PTR [edx],esp
  41591d:	repnz addr16 jmp 0x9621:0xb48cfd77
  415926:	stos   DWORD PTR es:[edi],eax
  415927:	jnp    0x41597f
  415929:	ror    cl,1
  41592b:	imul   esi,DWORD PTR [eax+ebp*2-0x15],0xffffffd1
  415930:	pop    esi
  415931:	xchg   ebx,eax
  415932:	cwde   
  415933:	hlt    
  415934:	pop    es
  415935:	push   ebx
  415936:	push   ebp
  415937:	dec    ebp
  415938:	mov    ecx,0xab22e2f8
  41593d:	repnz ins DWORD PTR es:[edi],dx
  41593f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415940:	add    bl,BYTE PTR [ebx+esi*1]
  415943:	xor    bl,bh
  415945:	mov    cl,0x1f
  415947:	xor    BYTE PTR [eax],0xfe
  41594a:	xchg   ebx,eax
  41594b:	xchg   esp,eax
  41594c:	nop
  41594d:	mov    es,WORD PTR [ecx+0x2c]
  415950:	inc    ebx
  415951:	sbb    DWORD PTR [edx+ebp*8+0x5d],ecx
  415955:	xchg   ebp,eax
  415956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415957:	in     al,dx
  415958:	scas   eax,DWORD PTR es:[edi]
  415959:	add    DWORD PTR [eax],ebx
  41595b:	out    dx,eax
  41595c:	jmp    0xa4433b96
  415961:	jle    0x415970
  415963:	mov    ah,BYTE PTR [ebp-0x1f]
  415966:	mov    cl,0xb8
  415968:	test   DWORD PTR [ebp-0x1f636b6c],0x62dcf8f1
  415972:	cmc    
  415973:	xchg   edx,eax
  415974:	mov    al,0x97
  415976:	xchg   DWORD PTR [edi],esi
  415978:	or     ch,bl
  41597a:	mov    ebx,0x7593cd62
  41597f:	jmp    0x415995
  415981:	sub    BYTE PTR [esi-0x12],bl
  415984:	xor    DWORD PTR [edx-0x3de0fc2d],0x78
  41598b:	push   ebp
  41598c:	mov    ds:0x65d06d31,al
  415991:	ds add dl,bh
  415994:	push   ds
  415995:	sti    
  415996:	lds    ebp,FWORD PTR [ebx]
  415998:	mov    dh,0xe2
  41599a:	aad    0xf7
  41599c:	sahf   
  41599d:	xchg   ebp,eax
  41599e:	xor    BYTE PTR [edi+0x40],bl
  4159a1:	sub    DWORD PTR es:[ebx-0xe79c92],0x62
  4159a9:	das    
  4159aa:	xor    al,0x86
  4159ac:	mov    esi,0x5a68e72e
  4159b1:	mov    esi,DWORD PTR [eax+ebx*8+0x16]
  4159b5:	(bad)  
  4159b6:	arpl   WORD PTR [eax+ecx*1+0x2932208f],dx
  4159bd:	and    dl,0x3c
  4159c0:	inc    esi
  4159c1:	(bad)  
  4159c3:	mov    al,0x84
  4159c5:	xor    ebx,DWORD PTR [esi+0x4b079317]
  4159cb:	cmp    ecx,DWORD PTR [esi-0x756bbe31]
  4159d1:	jnp    0x415996
  4159d3:	cs pop esi
  4159d5:	mov    eax,0xc1d6fe91
  4159da:	mov    dl,0x5e
  4159dc:	inc    ecx
  4159dd:	inc    edx
  4159de:	jnp    0x4159c9
  4159e0:	pusha  
  4159e1:	mov    WORD PTR [edx+0x72],ss
  4159e4:	add    DWORD PTR [eax-0x4d],ebp
  4159e7:	or     DWORD PTR [ecx+0x226538b3],esp
  4159ed:	dec    eax
  4159ee:	mov    bh,0x70
  4159f0:	fadd   DWORD PTR [ebx+0x12e20fa6]
  4159f6:	add    ah,BYTE PTR [esp+ecx*2-0x54]
  4159fa:	push   ebx
  4159fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159fc:	xchg   BYTE PTR [esi-0x2b],ch
  4159ff:	jo     0x415a33
  415a01:	test   DWORD PTR [esi],esp
  415a03:	cmp    al,0x20
  415a05:	ret    
  415a06:	mov    gs,WORD PTR [edx-0x1f]
  415a09:	cmp    bh,BYTE PTR [ebx+0x249e0b46]
  415a0f:	fcmove st,st(2)
  415a11:	mov    dh,0xc8
  415a13:	sub    BYTE PTR ds:0x2b0e0fb7,dh
  415a19:	ret    0xb6d0
  415a1c:	sbb    DWORD PTR [edi],esi
  415a1e:	adc    al,0xa5
  415a20:	mov    eax,0x8dc0281e
  415a25:	add    edx,edx
  415a27:	out    0xa8,al
  415a29:	mov    dh,0x37
  415a2b:	lea    edi,[ebx+0x74]
  415a2e:	sub    al,0x14
  415a30:	shr    BYTE PTR [ebp+0x79],cl
  415a33:	xor    BYTE PTR [ecx+0x4ab42408],dl
  415a39:	imul   esi,DWORD PTR [esi-0x1e341c29],0x16
  415a40:	xor    eax,0x79f5b827
  415a45:	dec    ebx
  415a46:	es mov esi,0x88d2178f
  415a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4d:	imul   si,WORD PTR [eax],0xd513
  415a52:	push   es
  415a53:	fs mov edx,0x6efaf3f1
  415a59:	ret    0x7201
  415a5c:	cmc    
  415a5d:	mov    esp,0x6c4c7525
  415a63:	lea    edi,[ecx+0x32]
  415a66:	mov    ds,WORD PTR [edx]
  415a68:	lods   al,BYTE PTR ds:[esi]
  415a69:	jmp    0x415a84
  415a6b:	scas   eax,DWORD PTR es:[edi]
  415a6c:	ja     0x4159ef
  415a6e:	loop   0x415a4c
  415a70:	in     eax,0x57
  415a72:	jg     0x415ac6
  415a74:	call   0xc10c7b98
  415a79:	fadd   QWORD PTR [ebx+0x46]
  415a7c:	imul   esp,ecx,0xfffffffb
  415a7f:	movsx  ecx,WORD PTR [ebp-0x672df498]
  415a86:	adc    esi,eax
  415a88:	inc    esi
  415a89:	mov    edx,DWORD PTR [eax+0x32e2f954]
  415a8f:	lahf   
  415a90:	popf   
  415a91:	dec    ebx
  415a92:	fild   WORD PTR [eax]
  415a94:	das    
  415a95:	sub    DWORD PTR [esi+0x3e726d32],edx
  415a9b:	sub    eax,0x1cf8833d
  415aa0:	lods   eax,DWORD PTR ds:[esi]
  415aa1:	dec    edx
  415aa2:	and    DWORD PTR [ecx-0x2d],esi
  415aa5:	or     DWORD PTR [eax+0x7b],ecx
  415aa8:	add    bl,BYTE PTR [edi-0x12036d6d]
  415aae:	nop
  415aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab0:	shr    ecx,1
  415ab2:	std    
  415ab3:	jb     0x415aed
  415ab5:	xor    BYTE PTR [edi+esi*4+0x2b],cl
  415ab9:	or     eax,0x9e27bb87
  415abe:	xchg   esp,eax
  415abf:	nop
  415ac0:	jnp    0x415a72
  415ac2:	repz fsubr DWORD PTR [ecx-0x3aeb4a60]
  415ac9:	push   esp
  415aca:	jb     0x415a57
  415acc:	push   ds
  415acd:	push   esi
  415ace:	lea    ebx,[edx+0x79]
  415ad1:	jnp    0x415ad4
  415ad3:	cmp    DWORD PTR [ebx+0x272680af],edx
  415ad9:	std    
  415ada:	mov    eax,ds:0x37c1cbcf
  415adf:	nop
  415ae0:	inc    ebp
  415ae1:	es ins DWORD PTR es:[edi],dx
  415ae3:	ja     0x415b05
  415ae5:	mov    ds:0x2d94ca7d,al
  415aea:	repz push DWORD PTR [ebx]
  415aed:	pop    es
  415aee:	scas   al,BYTE PTR es:[edi]
  415aef:	sbb    ch,ah
  415af1:	sub    BYTE PTR [esi-0x116796e],0xfe
  415af8:	and    ebx,ebx
  415afa:	es inc esi
  415afc:	mov    ds:0x94be62c3,eax
  415b01:	add    BYTE PTR [ecx],dl
  415b03:	dec    esp
  415b04:	or     eax,0x9bb6435b
  415b09:	sahf   
  415b0a:	cmp    bh,dh
  415b0c:	mov    ds:0xa8882cda,al
  415b11:	(bad)  
  415b12:	push   ebx
  415b13:	ja     0x415b15
  415b15:	mov    eax,ds:0xfa0b8094
  415b1a:	jae    0x415ab9
  415b1c:	pop    ds
  415b1d:	cmp    BYTE PTR [ecx+0x4a],dl
  415b20:	xor    dh,BYTE PTR [ebx]
  415b22:	icebp  
  415b23:	lods   eax,DWORD PTR ds:[esi]
  415b24:	mov    edi,0x2f68250f
  415b29:	lods   eax,DWORD PTR ds:[esi]
  415b2a:	dec    eax
  415b2b:	jge    0x415b73
  415b2d:	mov    al,ds:0x6467e539
  415b32:	inc    ecx
  415b33:	mov    ds:0xeff891d1,eax
  415b38:	push   ebp
  415b39:	cmp    al,0x53
  415b3b:	jmp    0x543b:0x506dbd95
  415b42:	dec    ecx
  415b43:	add    BYTE PTR [ecx-0x5a],0x31
  415b47:	push   ebx
  415b48:	mov    edi,0xe7f767ed
  415b4d:	jb     0x415b1e
  415b4f:	xor    al,0xfb
  415b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b52:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b54:	int    0x21
  415b56:	cmp    ch,BYTE PTR [edi]
  415b58:	jmp    0x415b59
  415b5a:	mov    ebp,0x71e76efa
  415b5f:	adc    dh,0x42
  415b62:	xlat   BYTE PTR ds:[ebx]
  415b63:	pop    esi
  415b64:	iret   
  415b65:	jo     0x415be6
  415b67:	stos   BYTE PTR es:[edi],al
  415b68:	fnstenv [edx+eiz*8-0x3d]
  415b6c:	(bad)  
  415b6d:	fisubr WORD PTR [ecx]
  415b6f:	test   eax,0x7217c980
  415b74:	es mov ecx,0xec1edde
  415b7a:	enter  0x7248,0x22
  415b7e:	inc    edx
  415b7f:	outs   dx,BYTE PTR ds:[esi]
  415b80:	(bad)  
  415b81:	out    dx,al
  415b82:	enter  0x8177,0xe0
  415b86:	in     eax,0xb7
  415b88:	gs mov bh,0x6f
  415b8b:	sbb    BYTE PTR [edx],dl
  415b8d:	xor    ah,al
  415b8f:	dec    ebx
  415b90:	int3   
  415b91:	mov    edx,0xef618ce
  415b96:	and    ecx,DWORD PTR [ebx]
  415b98:	data16 jb 0x415b49
  415b9b:	ss mov eax,0x9bfc6c5e
  415ba1:	call   0xf5bb5eaf
  415ba6:	(bad)  
  415ba7:	or     eax,DWORD PTR [ecx+0x4d]
  415baa:	imul   ebp,ecx,0x390cc5e9
  415bb0:	lods   eax,DWORD PTR ds:[esi]
  415bb1:	xchg   esi,eax
  415bb2:	or     al,0x6
  415bb4:	pop    eax
  415bb5:	cs mov esp,0x3459caa5
  415bbb:	js     0x415b63
  415bbd:	mov    ah,BYTE PTR [ebx]
  415bbf:	cmc    
  415bc0:	adc    DWORD PTR [eax+0x65],esi
  415bc3:	shr    ebx,0x1e
  415bc6:	(bad)  
  415bc7:	pushf  
  415bc8:	rcl    BYTE PTR [esp+edx*4+0x36af2274],cl
  415bcf:	jbe    0x415b6d
  415bd1:	mov    BYTE PTR [edx+0x3a97e927],dh
  415bd7:	push   ds
  415bd8:	mov    bl,0x39
  415bda:	xlat   BYTE PTR ds:[ebx]
  415bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bdc:	inc    eax
  415bdd:	pop    ss
  415bde:	inc    esp
  415bdf:	mov    dh,0xb8
  415be1:	adc    BYTE PTR [ebx+0x4db390d],dl
  415be7:	leave  
  415be8:	add    bh,cl
  415bea:	jno    0x415be6
  415bec:	or     edx,esp
  415bee:	into   
  415bef:	cdq    
  415bf0:	push   esi
  415bf1:	or     BYTE PTR [esi],0x47
  415bf4:	out    0xb7,eax
  415bf6:	push   esp
  415bf7:	xchg   ecx,eax
  415bf8:	xchg   edi,eax
  415bf9:	fnstcw WORD PTR [edi+edx*4]
  415bfc:	in     eax,0x53
  415bfe:	enter  0x31b3,0x4a
  415c02:	sahf   
  415c03:	push   ebp
  415c04:	mov    ch,0xa6
  415c06:	es push cs
  415c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c09:	out    0xa3,al
  415c0b:	dec    esi
  415c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0d:	je     0x415c5a
  415c0f:	inc    edi
  415c10:	rol    DWORD PTR [ecx],0x3
  415c13:	stos   BYTE PTR es:[edi],al
  415c14:	(bad)  
  415c15:	dec    edi
  415c16:	inc    ecx
  415c17:	imul   ecx,DWORD PTR [eax+0x164a39f7],0xffffff99
  415c1e:	or     bh,ch
  415c20:	jne    0x415c9e
  415c22:	push   esi
  415c23:	dec    eax
  415c24:	push   0x119d6ac
  415c29:	mov    al,0x47
  415c2b:	cmp    al,0x16
  415c2d:	es push ds
  415c2f:	test   BYTE PTR cs:[bp+di+0x58],al
  415c34:	(bad)  
  415c35:	enter  0x7bd7,0xb
  415c39:	add    al,0x5c
  415c3b:	pop    ebp
  415c3c:	out    dx,al
  415c3d:	push   ebp
  415c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c3f:	enter  0x4081,0xdc
  415c43:	fwait
  415c44:	pop    ecx
  415c45:	xchg   ebx,eax
  415c46:	sub    BYTE PTR [ebx+0x71],ch
  415c49:	sub    al,0xd6
  415c4b:	enter  0xd1fe,0x21
  415c4f:	cwde   
  415c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c51:	mov    bh,0x33
  415c53:	add    al,0x3a
  415c55:	stos   DWORD PTR es:[edi],eax
  415c56:	cli    
  415c57:	rol    BYTE PTR [edi-0x3d],0xc6
  415c5b:	mul    DWORD PTR [edi]
  415c5d:	fldz   
  415c5f:	outs   dx,BYTE PTR ds:[esi]
  415c60:	out    0xe9,al
  415c62:	jno    0x415c41
  415c64:	shr    DWORD PTR [esi+0x45f73ba4],cl
  415c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6b:	call   0x14b1:0xf3020fca
  415c72:	fwait
  415c73:	jo     0x415c2b
  415c75:	ds xchg esi,eax
  415c77:	popa   
  415c78:	imul   ebx,esi,0xfa9205df
  415c7e:	xchg   ebp,eax
  415c7f:	pop    ss
  415c80:	bound  eax,QWORD PTR ds:0x9f2d04dd
  415c86:	push   0x498036e
  415c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c8c:	adc    DWORD PTR [esi+0x49],ebp
  415c8f:	push   ds
  415c90:	add    BYTE PTR [edx+edi*8+0x62389485],bh
  415c97:	das    
  415c98:	int3   
  415c99:	xor    eax,0x1721d3e
  415c9e:	fldenv [ecx+0x3af5c930]
  415ca4:	ror    DWORD PTR [ecx+0x66433781],0xcd
  415cab:	inc    ebp
  415cac:	push   0x75
  415cae:	std    
  415caf:	int    0x11
  415cb1:	cld    
  415cb2:	dec    eax
  415cb3:	rcr    BYTE PTR [eax+0x5c6deedd],0xb5
  415cba:	lea    edx,[esi]
  415cbc:	cdq    
  415cbd:	out    0x13,al
  415cbf:	fild   QWORD PTR [edi-0x528061f3]
  415cc5:	retf   
  415cc6:	and    dl,0x50
  415cc9:	sbb    eax,0x6ecd7445
  415cce:	pop    esi
  415ccf:	pop    eax
  415cd0:	xchg   ecx,eax
  415cd1:	ss es mov ebx,0xea792849
  415cd8:	sbb    edx,DWORD PTR [ecx+edx*8+0x1c]
  415cdc:	ins    DWORD PTR es:[edi],dx
  415cdd:	lds    ebx,FWORD PTR [esi]
  415cdf:	or     dl,BYTE PTR [esi-0x6b56e9db]
  415ce5:	cli    
  415ce6:	inc    ebp
  415ce7:	mov    dh,0xd4
  415ce9:	sub    BYTE PTR [ecx-0x5e],al
  415cec:	inc    ebx
  415ced:	inc    ecx
  415cee:	jecxz  0x415d57
  415cf0:	xor    ebp,ebp
  415cf2:	ret    
  415cf3:	fld    DWORD PTR [esi]
  415cf5:	outs   dx,BYTE PTR ds:[esi]
  415cf6:	loope  0x415cec
  415cf8:	sub    esp,edx
  415cfa:	inc    ebx
  415cfb:	sbb    DWORD PTR [eax-0x45],edx
  415cfe:	or     al,0xe9
  415d00:	and    DWORD PTR [ecx+0xc],edx
  415d03:	inc    ebp
  415d04:	dec    edi
  415d05:	test   al,0x6d
  415d07:	pop    es
  415d08:	scas   al,BYTE PTR es:[edi]
  415d09:	sub    ebp,edi
  415d0b:	mov    ebx,DWORD PTR [eax]
  415d0d:	sbb    ebp,edi
  415d0f:	lds    ebx,FWORD PTR [esi-0x143b63b0]
  415d15:	dec    ebx
  415d16:	push   esi
  415d17:	jmp    0x69c5546b
  415d1c:	xor    dl,dh
  415d1e:	mov    ch,0xe
  415d20:	sbb    ecx,esp
  415d22:	push   ss
  415d23:	sub    eax,0xcccd7213
  415d28:	test   bl,al
  415d2a:	adc    al,0xf3
  415d2c:	data16 rcl BYTE PTR [esi-0x36578b25],1
  415d33:	stc    
  415d34:	add    ebx,DWORD PTR [eax+eiz*4-0x13]
  415d38:	cmp    DWORD PTR [edi+0x9],0x38d06cd1
  415d3f:	dec    DWORD PTR fs:[esi]
  415d42:	push   ss
  415d43:	test   eax,0x2e1b17f4
  415d48:	push   edi
  415d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d4a:	mov    ch,BYTE PTR [eax+0x1b]
  415d4d:	jge    0x415d55
  415d4f:	adc    bh,cl
  415d51:	mov    es:0x47a136f,eax
  415d57:	sub    BYTE PTR [edi+0x13],al
  415d5a:	lods   eax,DWORD PTR ds:[esi]
  415d5b:	dec    esi
  415d5c:	mov    al,ds:0x17c1cc8c
  415d61:	jl     0x415ced
  415d63:	into   
  415d64:	std    
  415d65:	scas   eax,DWORD PTR es:[edi]
  415d66:	mov    ds:0xb68c778,eax
  415d6b:	repz (bad) 
  415d6d:	cld    
  415d6e:	out    dx,al
  415d6f:	jle    0x415dcb
  415d71:	jno    0x415d92
  415d73:	dec    edx
  415d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d75:	int    0x8d
  415d77:	div    DWORD PTR [ecx-0x33]
  415d7a:	enter  0xf3db,0x97
  415d7e:	mov    edx,0x2a8e0879
  415d83:	stos   BYTE PTR es:[edi],al
  415d84:	push   ss
  415d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d86:	mov    esi,cs
  415d88:	inc    ecx
  415d89:	inc    esp
  415d8a:	test   DWORD PTR [ebp+edi*2+0x55eee5e7],0x1edca14f
  415d95:	shl    DWORD PTR [ebx+0x4d],0x4
  415d99:	jbe    0x415d29
  415d9b:	xor    DWORD PTR [edx-0x577923b0],ecx
  415da1:	stc    
  415da2:	inc    edx
  415da3:	cmp    bl,BYTE PTR [esi-0x34]
  415da6:	cmp    esi,0x6003036b
  415dac:	aas    
  415dad:	pop    esi
  415dae:	ja     0x415dbe
  415db0:	test   al,0x73
  415db2:	fmul   DWORD PTR [edi]
  415db4:	in     al,0x84
  415db6:	add    eax,0x92ad5c74
  415dbb:	mov    al,ds:0xfce45259
  415dc0:	xor    eax,0x246428a6
  415dc5:	push   cs
  415dc6:	lods   al,BYTE PTR ds:[esi]
  415dc7:	xchg   ebp,eax
  415dc8:	or     cl,al
  415dca:	push   ecx
  415dcb:	jnp    0x415d97
  415dcd:	imul   edx,DWORD PTR [esi+0x36],0xdff8c2b
  415dd4:	sbb    ch,ch
  415dd6:	add    esi,DWORD PTR [ebx]
  415dd8:	add    eax,0x2937bf80
  415ddd:	sub    al,0x61
  415ddf:	loope  0x415e4f
  415de1:	aad    0x47
  415de3:	mov    eax,ds:0xb85f911c
  415de8:	test   bl,0xc9
  415deb:	push   edi
  415dec:	sti    
  415ded:	rol    DWORD PTR [ebp+0x6031b318],1
  415df3:	into   
  415df4:	jae    0x415e5a
  415df6:	xchg   edi,eax
  415df7:	xor    dl,ah
  415df9:	in     al,0xd4
  415dfb:	sbb    DWORD PTR [eax],ebx
  415dfd:	push   edi
  415dfe:	fwait
  415dff:	push   esi
  415e00:	mov    eax,ds:0x56841f66
  415e05:	adc    al,0x85
  415e07:	loop   0x415e13
  415e09:	or     dl,dh
  415e0b:	xor    ebp,edx
  415e0d:	jo     0x415de4
  415e0f:	ror    BYTE PTR [edx+edx*1+0x4f],1
  415e13:	test   DWORD PTR [ebx+0x409497be],ebx
  415e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e1a:	out    dx,eax
  415e1b:	iret   
  415e1c:	fidiv  WORD PTR [ebx]
  415e1e:	pop    ecx
  415e1f:	or     al,0x1b
  415e21:	inc    esp
  415e22:	cmp    bh,dh
  415e24:	xchg   ecx,eax
  415e25:	push   esi
  415e26:	gs sahf 
  415e28:	lea    edi,[ecx-0x56]
  415e2b:	cmp    ah,dh
  415e2d:	jge    0x415e0d
  415e2f:	(bad)  
  415e30:	aad    0x28
  415e32:	or     DWORD PTR [esi-0x2b109150],edi
  415e38:	repnz pop DWORD PTR [edi+0x4f]
  415e3c:	or     esi,DWORD PTR [edx]
  415e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e3f:	outs   dx,DWORD PTR ds:[esi]
  415e40:	fidiv  DWORD PTR ds:0x73c550ac
  415e46:	into   
  415e47:	mov    esi,0xfd435462
  415e4c:	xlat   BYTE PTR ds:[ebx]
  415e4d:	or     eax,0x33859d12
  415e52:	jne    0x415e32
  415e54:	xchg   edx,eax
  415e55:	mov    cl,0xa
  415e57:	fnstcw WORD PTR [edi+edi*2-0x281f0db2]
  415e5e:	bound  edx,QWORD PTR ds:0xac9b732c
  415e64:	stos   DWORD PTR es:[edi],eax
  415e65:	and    edi,edx
  415e67:	sahf   
  415e68:	jns    0x415e57
  415e6a:	jae    0x415e92
  415e6c:	jnp    0x415e71
  415e6e:	mov    ds:0x84b7acf5,al
  415e73:	je     0x415e33
  415e75:	pop    esi
  415e76:	or     al,0xac
  415e78:	or     DWORD PTR [edx+0x67],esp
  415e7b:	xchg   edx,eax
  415e7c:	sub    ebp,DWORD PTR [ebp+eiz*2+0x5d]
  415e80:	ds enter 0x10e8,0xdb
  415e85:	sub    dh,BYTE PTR ds:0x3c165866
  415e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e8c:	lahf   
  415e8d:	dec    esp
  415e8e:	nop
  415e8f:	xor    dh,0x18
  415e92:	push   0x41
  415e94:	or     eax,0x42329052
  415e99:	iret   
  415e9a:	xchg   esi,eax
  415e9b:	rol    BYTE PTR [edx-0x13a7b5fb],cl
  415ea1:	adc    ebx,esi
  415ea3:	or     al,cl
  415ea5:	sbb    DWORD PTR [edi+0xba3bf77],ebx
  415eab:	rcr    dh,cl
  415ead:	mov    ch,0x52
  415eaf:	inc    edi
  415eb0:	jb     0x415ec7
  415eb2:	hlt    
  415eb3:	int3   
  415eb4:	ja     0x415e72
  415eb6:	rcl    DWORD PTR [eax+eiz*1],1
  415eb9:	push   ss
  415eba:	xor    ebp,esp
  415ebc:	adc    eax,DWORD PTR [ecx+0x213ff401]
  415ec2:	xchg   BYTE PTR [eax+0x3f73bf15],cl
  415ec8:	sub    BYTE PTR [edx+0x27565d79],0xe4
  415ecf:	xor    dl,dl
  415ed1:	jmp    0xf2f5:0x56047
  415ed8:	call   0xf714:0x28bef090
  415edf:	push   0x838ce289
  415ee4:	ins    DWORD PTR es:[edi],dx
  415ee5:	sub    al,0x8f
  415ee7:	push   ds
  415ee8:	sub    bh,BYTE PTR [esi+0x399194c7]
  415eee:	imul   BYTE PTR [ecx+ecx*8-0x42]
  415ef2:	fs ret 
  415ef4:	push   0x55
  415ef6:	push   ecx
  415ef7:	sbb    eax,0xd7e8c98d
  415efc:	pusha  
  415efd:	pop    edx
  415efe:	or     BYTE PTR [eax+0x1c],ah
  415f01:	mov    bh,0xef
  415f03:	loop   0x415f62
  415f05:	repnz out 0x5b,al
  415f08:	and    edi,DWORD PTR [edi+edi*4+0x5cc697f1]
  415f0f:	push   ebp
  415f10:	ins    BYTE PTR es:[edi],dx
  415f11:	mov    fs,eax
  415f13:	js     0x415f21
  415f15:	xchg   ebp,eax
  415f16:	pop    esi
  415f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f18:	or     DWORD PTR [edi],ebx
  415f1a:	pop    ecx
  415f1b:	iret   
  415f1c:	scas   al,BYTE PTR es:[edi]
  415f1d:	pop    eax
  415f1e:	ror    BYTE PTR [ebx-0x53a1ee0],cl
  415f24:	cmp    eax,0xa2039c82
  415f29:	(bad)  
  415f2a:	mov    bl,0xb1
  415f2c:	lods   al,BYTE PTR ds:[esi]
  415f2d:	mov    eax,0x53a43b3b
  415f32:	loopne 0x415f08
  415f34:	mov    WORD PTR [ecx],cs
  415f36:	sbb    BYTE PTR [edi+0x36a8e8f2],bh
  415f3c:	std    
  415f3d:	jo     0x415f39
  415f3f:	mov    dl,0xe4
  415f41:	dec    esi
  415f42:	imul   ebx,ebx,0xe6bc3310
  415f48:	int    0xfa
  415f4a:	push   cs
  415f4b:	xor    cl,BYTE PTR [eax+0x4654dd07]
  415f51:	dec    ebp
  415f52:	aam    0xa6
  415f54:	rcl    BYTE PTR [esi+ecx*2+0x43],cl
  415f58:	adc    BYTE PTR [ebp+0x57],bl
  415f5b:	in     al,0xc4
  415f5d:	(bad)  
  415f5e:	out    0x3a,eax
  415f60:	xor    eax,0x503dad97
  415f65:	js     0x415f81
  415f67:	into   
  415f68:	stos   BYTE PTR es:[edi],al
  415f69:	aad    0x1d
  415f6b:	mov    ebp,0xf016644f
  415f70:	and    eax,0xd236da0c
  415f75:	fwait
  415f76:	xchg   esp,eax
  415f77:	out    0xdb,eax
  415f79:	retf   0x888b
  415f7c:	sbb    al,0xdd
  415f7e:	jge    0x415f47
  415f80:	popa   
  415f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f82:	(bad)  
  415f83:	xchg   edi,eax
  415f84:	sub    BYTE PTR [esi-0x1ed1df45],cl
  415f8a:	lods   eax,DWORD PTR ds:[esi]
  415f8b:	mov    al,0xf7
  415f8d:	outs   dx,DWORD PTR ds:[esi]
  415f8e:	or     ecx,DWORD PTR [edx+0x477059c7]
  415f94:	lea    ecx,[edi+0x3fb6587f]
  415f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9b:	xchg   edx,eax
  415f9c:	ror    DWORD PTR [edx],0xd2
  415f9f:	(bad)
  415fa2:	dec    edx
  415fa3:	or     bh,BYTE PTR [ebp-0x5d48a759]
  415fa9:	(bad)  
  415fab:	popf   
  415fac:	sbb    al,0x24
  415fae:	pop    esp
  415faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb0:	push   0xffffffa7
  415fb2:	or     edx,0xf2454f66
  415fb8:	jbe    0x415fbb
  415fba:	pop    ds
  415fbb:	shl    bl,0x16
  415fbe:	popf   
  415fbf:	xchg   dh,al
  415fc1:	push   ds
  415fc2:	cld    
  415fc3:	sub    BYTE PTR [eax+0x1a],al
  415fc6:	jb     0x415f62
  415fc8:	in     eax,dx
  415fc9:	ret    
  415fca:	sub    al,0xdc
  415fcc:	pusha  
  415fcd:	cmp    ah,BYTE PTR [edi+eax*2]
  415fd0:	aas    
  415fd1:	and    ebp,0x4
  415fd4:	call   0x45cb:0x95c5d243
  415fdb:	xchg   ebx,eax
  415fdc:	(bad)  
  415fdd:	xchg   ecx,eax
  415fde:	or     BYTE PTR [eax+0x19788f74],bl
  415fe4:	test   al,0xb6
  415fe6:	mov    dh,BYTE PTR [edx-0x15]
  415fe9:	loopne 0x415f8b
  415feb:	or     edi,ebp
  415fed:	mov    ch,0xea
  415fef:	pop    ecx
  415ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff1:	(bad)  
  415ff2:	mov    eax,0x72a9de26
  415ff7:	test   bh,bl
  415ff9:	jecxz  0x415f7e
  415ffb:	sub    eax,DWORD PTR [eax-0xa]
  415ffe:	loopne 0x415f9a
  416000:	rcl    BYTE PTR [ecx-0x4423b368],1
  416006:	jg     0x41607b
  416008:	mov    al,dh
  41600a:	test   eax,0xe8ee1303
  41600f:	adc    dl,0x98
  416012:	push   eax
  416013:	dec    edi
  416014:	pushf  
  416015:	cmp    esp,DWORD PTR [esi]
  416017:	mov    ebx,0x69f6b845
  41601c:	fwait
  41601d:	cmp    al,0x1d
  41601f:	mov    edi,0x5043729
  416024:	or     al,BYTE PTR [esi]
  416026:	sub    eax,DWORD PTR [esp+eax*4]
  416029:	jno    0x416010
  41602b:	xchg   ebp,eax
  41602c:	jmp    0x9904:0xae11a11f
  416033:	test   cl,bh
  416035:	call   0x879f:0xde6b558f
  41603c:	sti    
  41603d:	inc    esi
  41603e:	adc    esi,eax
  416040:	mov    cl,0xd8
  416042:	hlt    
  416043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416044:	xor    esp,edi
  416046:	pop    esi
  416047:	jmp    0x7627ad07
  41604c:	pop    ebx
  41604d:	pop    ecx
  41604e:	fdivr  DWORD PTR [eax-0x78]
  416051:	fnstsw WORD PTR [edx-0x1d]
  416054:	mov    al,ds:0x11519012
  416059:	jmp    0x41608f
  41605b:	jl     0x4160cc
  41605d:	(bad)  
  41605e:	jg     0x416061
  416060:	loop   0x4160d6
  416062:	or     ebx,edx
  416064:	mov    dh,BYTE PTR [eax-0x2e]
  416067:	repz inc edi
  416069:	(bad)  ds:0x264ae4e7
  41606f:	xchg   esi,eax
  416070:	loope  0x416085
  416072:	ret    
  416073:	aaa    
  416074:	add    esp,DWORD PTR [ebx+0x4d]
  416077:	shl    DWORD PTR [ecx],0x7d
  41607a:	outs   dx,DWORD PTR ds:[esi]
  41607b:	or     ebx,DWORD PTR [eax]
  41607d:	leave  
  41607e:	test   eax,0xfe55816d
  416083:	jp     0x4160d8
  416085:	mov    DWORD PTR [esi+0x4bc9f5e6],ecx
  41608b:	jns    0x416034
  41608d:	jmp    0x828e2ccb
  416092:	jl     0x416084
  416094:	out    0x32,al
  416096:	mov    ebx,0xa7494a34
  41609b:	push   edi
  41609c:	retf   
  41609d:	dec    eax
  41609e:	aad    0x10
  4160a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a1:	call   0x7db026d7
  4160a6:	fidiv  WORD PTR [esi-0x4996afff]
  4160ac:	adc    eax,0x833518fc
  4160b1:	test   al,0x9
  4160b3:	aas    
  4160b4:	in     eax,0xc1
  4160b6:	push   ebx
  4160b7:	and    esi,DWORD PTR [ebx]
  4160b9:	fcmovne st,st(3)
  4160bb:	hlt    
  4160bc:	pop    es
  4160bd:	mov    dl,0xe4
  4160bf:	mov    bl,0x15
  4160c1:	ret    0x2d8b
  4160c4:	popa   
  4160c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160c6:	out    dx,al
  4160c7:	or     al,0xd
  4160ca:	xchg   esi,eax
  4160cb:	(bad)  
  4160cd:	sub    al,dh
  4160cf:	iret   
  4160d0:	push   edx
  4160d1:	xchg   esi,eax
  4160d2:	mov    ds,WORD PTR [edx]
  4160d4:	bound  ebp,QWORD PTR [ecx+0x7cdcfe98]
  4160da:	enter  0x38ea,0xa6
  4160de:	int    0x80
  4160e0:	dec    edx
  4160e1:	xor    bl,BYTE PTR [edi]
  4160e3:	stos   BYTE PTR es:[edi],al
  4160e4:	addr16 aad 0x69
  4160e7:	and    DWORD PTR [eax+0x6077938],esi
  4160ed:	out    0x49,al
  4160ef:	mov    edi,0x2b615ed2
  4160f4:	pop    ebx
  4160f5:	rol    BYTE PTR [esi],0x55
  4160f8:	cmp    ebp,ebx
  4160fa:	pop    ecx
  4160fb:	mov    esi,0x3dcc4fe4
  416100:	push   esi
  416101:	adc    ecx,DWORD PTR [edi+0x36f6bb53]
  416107:	push   ebx
  416108:	loope  0x416136
  41610a:	xor    eax,0x416bc8d4
  41610f:	lock mov eax,ecx
  416112:	jne    0x41609e
  416114:	push   edx
  416115:	dec    esi
  416116:	inc    eax
  416117:	mov    ebp,0x7b006d1b
  41611c:	sar    ecx,1
  41611e:	bnd jb 0x4160e1
  416121:	loope  0x41618d
  416123:	mov    WORD PTR [ebx+0x1b0a2349],?
  416129:	jne    0x4160d0
  41612b:	dec    esi
  41612c:	or     al,0x53
  41612e:	jne    0x416150
  416130:	fld    DWORD PTR [esi-0x5dffc3dc]
  416136:	lds    eax,FWORD PTR [eax-0x12f85652]
  41613c:	ja     0x4160fb
  41613e:	je     0x416109
  416140:	mov    DWORD PTR [esi],esp
  416142:	and    ah,BYTE PTR [edx]
  416144:	adc    al,0xc6
  416146:	popf   
  416147:	xchg   ecx,eax
  416148:	adc    eax,0x40e054e3
  41614d:	std    
  41614e:	test   BYTE PTR [ebx-0x77],0x24
  416152:	jne    0x416116
  416154:	or     BYTE PTR [ebx+0x7f],al
  416157:	lods   al,BYTE PTR ds:[esi]
  416158:	addr16 cwde 
  41615a:	or     dl,ch
  41615c:	sti    
  41615d:	fwait
  41615e:	dec    ecx
  41615f:	fs js  0x41611d
  416162:	adc    esi,DWORD PTR [ecx]
  416164:	aad    0x6c
  416166:	aad    0x98
  416168:	xchg   BYTE PTR [ecx*2-0x3196288f],cl
  41616f:	mov    al,0x39
  416171:	and    DWORD PTR [edx-0x20],ecx
  416174:	repnz leave 
  416176:	inc    esp
  416177:	cld    
  416178:	out    0xe1,eax
  41617a:	inc    edi
  41617b:	push   0xfc26051b
  416180:	loope  0x416105
  416182:	rcr    bh,0x4a
  416185:	mov    WORD PTR [edx],fs
  416187:	fdivr  QWORD PTR [edx-0x6b]
  41618a:	inc    esi
  41618b:	mov    al,ds:0xfce898f0
  416190:	mov    ebx,0xbe7872d9
  416195:	inc    eax
  416196:	or     ecx,esi
  416198:	mov    bl,0x2c
  41619a:	rcr    DWORD PTR [esi+edi*1-0x43],1
  41619e:	loope  0x416139
  4161a0:	fst    DWORD PTR [ebp+0x8]
  4161a3:	fimul  DWORD PTR [eax-0x1efe6f13]
  4161a9:	loopne 0x4161bb
  4161ab:	(bad)  
  4161ac:	aam    0xd6
  4161ae:	xchg   ebx,eax
  4161af:	adc    eax,0xa85ea0b0
  4161b4:	pop    ebp
  4161b5:	leave  
  4161b6:	clc    
  4161b7:	aam    0xfd
  4161b9:	in     eax,dx
  4161ba:	and    DWORD PTR ds:0xc4a34b88,esp
  4161c0:	mov    esp,edx
  4161c2:	je     0x4161e8
  4161c4:	pop    edx
  4161c5:	jb     0x416231
  4161c7:	mov    ecx,0x917e96e4
  4161cc:	push   ds
  4161cd:	out    0xde,al
  4161cf:	(bad)  
  4161d0:	call   0xe3aa469f
  4161d5:	adc    dl,BYTE PTR [esi+0x48]
  4161d8:	xchg   ebp,eax
  4161d9:	pop    ds
  4161da:	in     al,dx
  4161db:	or     dh,BYTE PTR [edx+0x30]
  4161de:	test   DWORD PTR [ebp-0x6e6f3fbe],ebx
  4161e4:	out    0x24,al
  4161e6:	sub    bh,bl
  4161e8:	outs   dx,BYTE PTR ds:[esi]
  4161e9:	xlat   BYTE PTR ds:[ebx]
  4161ea:	outs   dx,BYTE PTR ds:[esi]
  4161eb:	outs   dx,DWORD PTR ds:[esi]
  4161ec:	push   ds
  4161ed:	pop    ss
  4161ee:	jno    0x416253
  4161f0:	es std 
  4161f2:	sub    ebp,0xffffffbd
  4161f5:	cmp    BYTE PTR fs:[eax],ch
  4161f8:	mov    ch,0x7d
  4161fa:	mov    DWORD PTR [ecx-0x2876669b],0xaa6cbe7a
  416204:	jne    0x4161f2
  416206:	sbb    DWORD PTR [esi+0x9f60ee9],0xffffff8b
  41620d:	xor    eax,0xb2b7f76e
  416212:	adc    ecx,ebx
  416214:	adc    BYTE PTR [ebx+0x2f6e4fef],cl
  41621a:	mov    al,BYTE PTR [edi]
  41621c:	add    ah,bh
  41621e:	mov    esp,eax
  416220:	loope  0x41623a
  416222:	adc    dh,cl
  416224:	lock jp 0x416232
  416227:	add    ebp,DWORD PTR [edx+0x1e]
  41622a:	fisttp WORD PTR [ebx+ecx*1]
  41622d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41622f:	dec    BYTE PTR [edi+0x1626cebf]
  416235:	jne    0x416278
  416237:	data16 aad 0xc4
  41623a:	imul   DWORD PTR [edi-0x3dd1ad7d]
  416240:	and    BYTE PTR [edx],bh
  416242:	xor    dl,bl
  416244:	and    BYTE PTR [esi+0xe22f015],cl
  41624a:	mov    ds:0xc9fa03d4,eax
  41624f:	cmp    eax,0x74293efb
  416254:	iret   
  416255:	stos   BYTE PTR es:[edi],al
  416256:	adc    ecx,DWORD PTR [ebx+0x3e3355b0]
  41625c:	sub    al,0xc6
  41625e:	cmp    dl,BYTE PTR [eax]
  416260:	and    al,BYTE PTR [esp+ebx*1]
  416263:	cld    
  416264:	dec    eax
  416265:	inc    ebp
  416266:	es jge 0x4162a5
  416269:	shl    DWORD PTR [edi-0x3923f217],1
  41626f:	punpckhwd mm1,QWORD PTR [ebx+0x19]
  416273:	pop    eax
  416274:	ret    0x6bda
  416277:	dec    edx
  416278:	gs cmp al,0x41
  41627b:	push   edi
  41627c:	jmp    0x83a75d40
  416281:	mov    ds:0xb1de55a1,al
  416286:	adc    eax,0xad6722cf
  41628b:	lods   eax,DWORD PTR ds:[esi]
  41628c:	sub    DWORD PTR [ebp+0x62634835],eax
  416292:	mov    bh,0x7b
  416294:	sbb    al,0x83
  416296:	sbb    ecx,DWORD PTR [ebx]
  416298:	hlt    
  416299:	test   eax,0x8111cf57
  41629e:	test   al,0x73
  4162a0:	cwde   
  4162a1:	mov    DWORD PTR [edi+0x30],ecx
  4162a4:	jnp    0x4162a8
  4162a6:	jmp    0xf9840412
  4162ab:	cwde   
  4162ac:	jmp    0x416233
  4162ae:	rcl    DWORD PTR [edi-0x1fee10e0],cl
  4162b4:	(bad)  
  4162b5:	arpl   sp,bp
  4162b7:	jge    0x416297
  4162b9:	hlt    
  4162ba:	mov    esi,0xa512bdea
  4162bf:	mov    bl,0x4c
  4162c1:	or     BYTE PTR [esi-0x3cb220aa],bh
  4162c7:	jne    0x416324
  4162c9:	das    
  4162ca:	jae    0x416293
  4162cc:	add    DWORD PTR [edx+0xe34f4bb],0x4d
  4162d3:	sub    al,0xd4
  4162d5:	xor    BYTE PTR [esi+eiz*4-0x4ccaaac3],0x19
  4162dd:	xor    BYTE PTR [esi],cl
  4162df:	sbb    eax,0x52d11794
  4162e4:	mov    eax,ds:0xb5467213
  4162e9:	loop   0x4162bf
  4162eb:	aaa    
  4162ec:	mov    eax,ds:0x8fec9944
  4162f1:	ins    DWORD PTR es:[edi],dx
  4162f2:	das    
  4162f3:	cwde   
  4162f4:	ffreep st(2)
  4162f6:	mov    edi,0x82fd3290
  4162fb:	or     ebx,DWORD PTR [ebp-0x33]
  4162fe:	xchg   edi,eax
  4162ff:	push   eax
  416300:	iret   
  416301:	add    DWORD PTR [ebx-0x2ea3768],eax
  416307:	pop    edx
  416308:	mov    eax,0xc5c90d72
  41630d:	or     BYTE PTR [ebx],dl
  41630f:	fidiv  WORD PTR [ecx]
  416311:	test   ebp,esi
  416313:	xor    edx,DWORD PTR [esi]
  416315:	jmp    0x4162fc
  416317:	mov    ch,0xed
  416319:	imul   eax,DWORD PTR [ebx-0x7f],0xa56677d3
  416320:	push   ebp
  416321:	loope  0x4162b6
  416323:	jle    0x416317
  416325:	out    dx,al
  416326:	lods   al,BYTE PTR ds:[esi]
  416327:	mov    cl,BYTE PTR [esi+0x3c]
  41632a:	jo     0x4162fa
  41632c:	ds mov ebp,0x17c332c5
  416332:	frstor [edi+0x4454e9d4]
  416338:	test   al,0xdc
  41633a:	cmp    BYTE PTR [ebp+0x6b],0x7d
  41633e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41633f:	ins    DWORD PTR es:[edi],dx
  416340:	mov    ah,0x56
  416342:	push   esi
  416343:	push   esi
  416344:	mov    bl,0x2
  416346:	fnstenv [ebx-0x79]
  416349:	adc    BYTE PTR es:[ecx],cl
  41634c:	scas   al,BYTE PTR es:[edi]
  41634d:	add    eax,0xc35cf0eb
  416352:	outs   dx,DWORD PTR ds:[esi]
  416354:	cs popa 
  416356:	cmp    BYTE PTR [edx],0x75
  416359:	mov    ebp,ecx
  41635b:	cmp    BYTE PTR ss:[ecx-0x6616d1c5],cl
  416362:	addr16 into 
  416364:	push   ebp
  416365:	mov    dh,0x3b
  416367:	out    0xaa,eax
  416369:	out    0xa3,al
  41636b:	pop    ds
  41636c:	test   BYTE PTR [edx-0x2a],bl
  41636f:	(bad)  
  416370:	iret   
  416371:	jge    0x4163a3
  416373:	ins    DWORD PTR es:[edi],dx
  416374:	pop    esp
  416375:	and    bh,0x6c
  416378:	mov    bh,0xfc
  41637a:	out    dx,al
  41637b:	icebp  
  41637c:	imul   bh
  41637e:	dec    ecx
  41637f:	enter  0xf23e,0x87
  416383:	xchg   esp,eax
  416384:	dec    edx
  416385:	jecxz  0x416317
  416387:	sbb    al,0xef
  416389:	fwait
  41638a:	xchg   ebx,eax
  41638b:	mov    bh,0x89
  41638d:	push   esi
  41638e:	dec    edx
  41638f:	push   edx
  416390:	out    0x87,al
  416392:	faddp  st(3),st
  416394:	inc    ecx
  416395:	rol    BYTE PTR [edi-0x78],0xe5
  416399:	fwait
  41639a:	std    
  41639b:	out    0xe5,eax
  41639d:	xchg   ebx,eax
  41639e:	cmp    edi,DWORD PTR [ecx-0x75a8cbae]
  4163a4:	pop    eax
  4163a5:	mov    edx,0x41c8fa21
  4163aa:	adc    eax,0x38cd8cda
  4163af:	push   edx
  4163b0:	jle    0x4163a0
  4163b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b3:	popf   
  4163b4:	xor    al,0xcc
  4163b6:	inc    ebx
  4163b7:	push   ecx
  4163b8:	aas    
  4163b9:	sbb    al,0xcd
  4163bb:	dec    ebp
  4163bc:	retf   0xd224
  4163bf:	push   ebp
  4163c0:	mov    cr3,ebp
  4163c3:	xchg   ebp,eax
  4163c4:	es es sbb al,0x27
  4163c8:	jns    0x4163a1
  4163ca:	sbb    BYTE PTR ss:[edx],0xa7
  4163ce:	aad    0xec
  4163d0:	sub    al,0xd7
  4163d2:	cmp    dl,bl
  4163d4:	inc    esp
  4163d5:	test   BYTE PTR [ebx],0xe7
  4163d8:	jno    0x416400
  4163da:	fwait
  4163db:	and    DWORD PTR [edx-0x51a85e1e],0x9ef2562f
  4163e5:	adc    DWORD PTR [ebp+0x413127bd],ebx
  4163eb:	div    eax
  4163ed:	jnp    0x4163ae
  4163ef:	(bad)
  4163f3:	xor    al,ch
  4163f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f6:	xchg   ecx,eax
  4163f7:	addr16 ja 0x4163ea
  4163fa:	push   edx
  4163fb:	or     eax,0xbe48abd7
  416400:	xchg   edx,eax
  416401:	pop    ebx
  416402:	lea    ebx,[eax]
  416404:	dec    ebx
  416405:	add    dl,BYTE PTR [esi-0x113c486d]
  41640b:	js     0x4163d3
  41640d:	addr16 pop ebp
  41640f:	pushf  
  416410:	fiadd  DWORD PTR [edx+0x39]
  416413:	loope  0x416422
  416415:	and    al,0x97
  416417:	xor    ecx,DWORD PTR [edi]
  416419:	enter  0xdc4a,0x10
  41641d:	mov    dl,cl
  41641f:	(bad)  
  416420:	in     al,0x3d
  416422:	jae    0x4163e2
  416424:	and    al,0xe1
  416426:	call   0x6c458057
  41642b:	sbb    cl,dl
  41642d:	and    eax,0xa8005f4c
  416432:	fist   DWORD PTR [edi]
  416434:	and    BYTE PTR [edi+0x11525211],cl
  41643a:	mov    ecx,0xe2c30671
  41643f:	dec    ecx
  416440:	and    DWORD PTR [ecx+0x6a],eax
  416443:	leave  
  416444:	mov    BYTE PTR [ebp+0x3e],ah
  416447:	out    0xec,eax
  416449:	sbb    al,0x2
  41644b:	jp     0x41640e
  41644d:	mov    al,ds:0x6b6082ad
  416452:	push   ebp
  416453:	mov    ch,BYTE PTR [ebx+0x32]
  416456:	pop    eax
  416457:	mov    ebx,0x9b83c2f7
  41645c:	mov    esi,0x33e01326
  416461:	test   BYTE PTR [edx+ebp*4],bh
  416464:	push   esi
  416465:	les    ebp,FWORD PTR [eax+ecx*8+0x2699503a]
  41646c:	push   ds
  41646d:	push   0x39322cfc
  416472:	lds    eax,FWORD PTR [esi-0x1e]
  416475:	mov    edx,0x17ae4eb9
  41647a:	fs fmul st,st(6)
  41647d:	pop    ecx
  41647e:	mov    DWORD PTR [edi+0x4f],edx
  416481:	cmp    eax,0x3a19f51d
  416486:	xor    BYTE PTR [ecx],al
  416488:	cmp    esp,esp
  41648a:	retf   0xb5bc
  41648d:	stos   BYTE PTR es:[edi],al
  41648e:	sub    al,0xf3
  416490:	jbe    0x4164e3
  416492:	sbb    al,0x16
  416494:	pop    ds
  416495:	xor    BYTE PTR [eax],dh
  416497:	sub    edx,esi
  416499:	cmp    al,0x71
  41649b:	push   esi
  41649c:	dec    esi
  41649d:	ins    DWORD PTR es:[edi],dx
  41649e:	mov    DWORD PTR [edi+0x12],edx
  4164a1:	sub    DWORD PTR [ebp+0x79],0x12
  4164a5:	in     al,0xa3
  4164a7:	int    0xb6
  4164a9:	(bad)  
  4164aa:	pop    ebx
  4164ab:	xchg   DWORD PTR [edx],edx
  4164ad:	lods   al,BYTE PTR ds:[esi]
  4164ae:	xchg   esi,eax
  4164af:	dec    ecx
  4164b0:	cld    
  4164b1:	add    DWORD PTR [esi+eiz*1],0x3b16d485
  4164b8:	(bad)  
  4164ba:	cld    
  4164bb:	mov    esp,0x6bc65afc
  4164c0:	add    DWORD PTR [eax-0x30],edi
  4164c3:	ds xchg esi,eax
  4164c5:	and    al,0xf9
  4164c7:	jb     0x41653d
  4164c9:	pusha  
  4164ca:	cli    
  4164cb:	stos   DWORD PTR es:[edi],eax
  4164cc:	shl    DWORD PTR [esi+0x39],cl
  4164cf:	mov    esi,DWORD PTR [edi]
  4164d1:	xchg   esp,eax
  4164d2:	mov    ds:0x6403ac1e,al
  4164d7:	loop   0x4164f5
  4164d9:	stos   BYTE PTR es:[edi],al
  4164da:	mov    bl,0xb
  4164dc:	push   0xffffffbd
  4164de:	xchg   DWORD PTR ds:0x1d92cef5,ebp
  4164e4:	into   
  4164e5:	add    BYTE PTR [edx-0x62],ah
  4164e8:	clc    
  4164e9:	sub    eax,edi
  4164eb:	sbb    BYTE PTR [ebx],dl
  4164ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ee:	adc    dl,BYTE PTR [esi+0x288cacd8]
  4164f4:	cdq    
  4164f5:	ins    DWORD PTR es:[edi],dx
  4164f6:	dec    ebx
  4164f7:	mov    ss,WORD PTR [esi]
  4164f9:	inc    esi
  4164fa:	pop    si
  4164fc:	mov    cl,al
  4164fe:	push   esi
  4164ff:	sub    BYTE PTR [eax+0x7c2091a1],bh
  416505:	ja     0x416521
  416507:	add    eax,0x4c9de8d7
  41650c:	fmul   QWORD PTR [edi-0x4a]
  41650f:	mov    ebp,0xea6b237a
  416514:	and    BYTE PTR [ecx+ecx*1+0x35],0x35
  416519:	sbb    BYTE PTR [ebx+0x5a],cl
  41651c:	xchg   DWORD PTR [ecx+0x66],ebp
  41651f:	sahf   
  416520:	arpl   sp,si
  416522:	out    dx,al
  416523:	mov    esi,0xce6691fd
  416528:	xchg   BYTE PTR ds:[eax+0x3f792f30],bh
  41652f:	mov    esi,0xacd2d549
  416534:	dec    esi
  416535:	std    
  416536:	and    BYTE PTR [edi-0x3b],bl
  416539:	sahf   
  41653a:	test   eax,0x2003c562
  41653f:	dec    ebx
  416540:	test   cl,bl
  416542:	xor    edx,edi
  416544:	mov    al,0x77
  416546:	fs dec eax
  416548:	les    ebx,FWORD PTR [esp+ecx*2]
  41654b:	jl     0x4164d6
  41654d:	jbe    0x41651b
  41654f:	gs mov dl,0xa9
  416552:	push   cs
  416553:	fwait
  416554:	pop    ebp
  416555:	sbb    edx,edx
  416557:	adc    edx,DWORD PTR [edx+ebp*2]
  41655a:	adc    edi,DWORD PTR ds:0x26568960
  416560:	std    
  416561:	inc    esp
  416562:	mov    DWORD PTR [ebx+0x16],ebx
  416565:	mov    ch,0xb0
  416567:	clc    
  416568:	sbb    eax,0x74171a68
  41656d:	push   eax
  41656e:	jnp    0x4165ba
  416570:	or     DWORD PTR [ecx],ecx
  416572:	test   eax,0x1b42d01f
  416577:	sub    ch,ch
  416579:	or     dh,ch
  41657b:	sub    cl,cl
  41657d:	cdq    
  41657e:	push   eax
  41657f:	inc    edx
  416580:	unpckhps xmm7,XMMWORD PTR [edx]
  416583:	dec    esp
  416584:	pop    edi
  416585:	and    BYTE PTR [edx+0x7],cl
  416588:	inc    esi
  416589:	mov    WORD PTR [esi],?
  41658b:	pop    es
  41658c:	daa    
  41658d:	sub    eax,0x48757339
  416592:	cld    
  416593:	cmp    ecx,DWORD PTR [ecx]
  416595:	jecxz  0x416606
  416597:	clc    
  416598:	jo     0x41659f
  41659a:	aas    
  41659b:	out    0xa3,al
  41659d:	push   edi
  41659e:	xchg   ebp,eax
  41659f:	jbe    0x41657e
  4165a1:	loop   0x4165af
  4165a3:	add    esp,DWORD PTR [ebx+0x26]
  4165a6:	pop    esp
  4165a7:	sub    DWORD PTR ds:0x14cf5b72,esp
  4165ad:	test   ecx,ebp
  4165af:	pusha  
  4165b0:	push   0xb54ebbf0
  4165b5:	popf   
  4165b6:	ret    
  4165b7:	mov    dh,0x60
  4165b9:	lods   eax,DWORD PTR ds:[esi]
  4165ba:	push   eax
  4165bb:	in     al,dx
  4165bc:	test   BYTE PTR [esi-0xa42f9c0],bh
  4165c2:	xchg   ecx,eax
  4165c3:	and    BYTE PTR ds:0xaa25d08d,ah
  4165c9:	lea    ebx,[edi+eiz*4]
  4165cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165cd:	call   DWORD PTR [esi+0x46]
  4165d0:	cmp    al,0xf6
  4165d2:	mov    DWORD PTR [edx-0x9a51fd3],ecx
  4165d8:	sahf   
  4165d9:	inc    DWORD PTR [edx]
  4165db:	push   esi
  4165dc:	or     DWORD PTR [edi],esp
  4165de:	mov    ebx,0x86f39e1a
  4165e3:	fistp  DWORD PTR [ebp+ecx*8-0x3e]
  4165e7:	mov    ebp,DWORD PTR [edi-0x78]
  4165ea:	push   esp
  4165eb:	sbb    BYTE PTR [esi+0x1c35825b],dh
  4165f1:	ins    DWORD PTR es:[edi],dx
  4165f2:	fdiv   QWORD PTR [edx-0xd]
  4165f5:	push   cs
  4165f6:	loop   0x4165c9
  4165f8:	add    DWORD PTR [eax-0x22],0xffffffe6
  4165fc:	and    eax,0x190b0c8b
  416601:	push   esp
  416602:	(bad)  
  416603:	mov    ch,0x58
  416605:	in     eax,dx
  416606:	test   eax,0xc173a002
  41660b:	or     al,0x6a
  41660d:	mov    esp,0x4fb40a0e
  416612:	mov    al,ch
  416614:	sbb    BYTE PTR [ecx-0x41eb3101],ah
  41661a:	and    eax,0xbc66aa1e
  41661f:	pop    esi
  416620:	inc    ebx
  416621:	mov    eax,DWORD PTR [edx-0x32]
  416624:	mov    dl,cl
  416626:	sbb    eax,0xf030bd53
  41662b:	(bad)  
  41662c:	ss loop 0x416609
  41662f:	pop    es
  416630:	hlt    
  416631:	pop    esp
  416632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416633:	out    0x9b,al
  416635:	popa   
  416636:	aam    0x7f
  416638:	out    0x8b,al
  41663a:	xor    edi,DWORD PTR [ebx+0x66]
  41663d:	mov    ah,0x1a
  41663f:	mov    cl,0xcd
  416641:	fisub  DWORD PTR [ebp+0x59d21b8a]
  416647:	sbb    DWORD PTR [eax-0x3217ab3f],edx
  41664d:	push   edi
  41664e:	and    DWORD PTR [ebp-0x44],0x26c28b0f
  416655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416656:	fisubr WORD PTR [edx]
  416658:	in     eax,dx
  416659:	add    DWORD PTR [ebx+0x3ecbc9a8],eax
  41665f:	les    edx,FWORD PTR [edx]
  416661:	dec    esi
  416662:	js     0x4166be
  416664:	inc    esi
  416665:	inc    ecx
  416666:	sbb    ah,cl
  416668:	popf   
  416669:	sbb    ah,BYTE PTR [eax]
  41666b:	dec    esi
  41666c:	ror    DWORD PTR [edi],1
  41666e:	stc    
  41666f:	jno    0x416671
  416671:	iret   
  416672:	dec    esp
  416673:	mov    eax,0x12a7e7a6
  416678:	push   ss
  416679:	jmp    0xb1cf188b
  41667e:	in     eax,dx
  41667f:	aad    0x4
  416681:	pop    es
  416682:	or     eax,0x6a4f1d3a
  416687:	cmc    
  416688:	loop   0x4166d5
  41668a:	mov    eax,ds:0xbc04f3a2
  41668f:	jo     0x41669a
  416691:	in     al,dx
  416692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416693:	inc    edx
  416694:	inc    ecx
  416695:	outs   dx,DWORD PTR ds:[esi]
  416696:	push   ds
  416697:	or     ebp,DWORD PTR [edi]
  416699:	xchg   edi,eax
  41669a:	shl    DWORD PTR [esi-0x1f3813f2],0xcf
  4166a1:	int3   
  4166a2:	sbb    BYTE PTR [esi+0x35216094],bl
  4166a8:	rcr    ecx,cl
  4166aa:	xchg   DWORD PTR [ecx-0x61],edi
  4166ad:	cmp    BYTE PTR [edx-0x64],ah
  4166b0:	sub    DWORD PTR ds:0x8d61541f,eax
  4166b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b7:	add    al,0x21
  4166b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166ba:	push   ebp
  4166bb:	adc    ah,bh
  4166bd:	push   ds
  4166be:	and    al,0xdf
  4166c0:	aas    
  4166c1:	gs hlt 
  4166c3:	pop    esi
  4166c4:	mov    DWORD PTR [ebp-0x182b5ee8],ebp
  4166ca:	into   
  4166cb:	out    0xc1,eax
  4166cd:	cmovns eax,DWORD PTR [eax]
  4166d0:	aam    0xbf
  4166d2:	push   esp
  4166d3:	cmp    al,0xd2
  4166d5:	push   ss
  4166d6:	jae    0x416723
  4166d8:	je     0x416710
  4166da:	adc    DWORD PTR [ebx-0x5a902469],edx
  4166e0:	or     dl,BYTE PTR [eax]
  4166e2:	mov    eax,ds:0x64d8b5e6
  4166e7:	loopne 0x416680
  4166e9:	inc    esi
  4166ea:	cmp    BYTE PTR [eax-0x544cd676],dh
  4166f0:	imul   edi,ebp,0x60
  4166f3:	fs dec ebp
  4166f5:	daa    
  4166f6:	jo     0x416746
  4166f8:	dec    edx
  4166f9:	mov    dl,0xa1
  4166fb:	fisub  DWORD PTR [edx+0x682221a8]
  416701:	cdq    
  416702:	and    eax,0xb8ad874c
  416707:	sbb    DWORD PTR [ecx],ebp
  416709:	jnp    0x416755
  41670b:	popa   
  41670c:	xor    al,0x93
  41670e:	retf   
  41670f:	inc    esi
  416710:	fidivr DWORD PTR [eax+0x5f144c3]
  416716:	shl    BYTE PTR [esi],cl
  416718:	pop    ss
  416719:	mov    ds:0xf8a7f5fe,eax
  41671e:	mov    esp,0xf36fdd60
  416723:	mov    edi,0x2389aa7a
  416728:	xchg   esp,eax
  416729:	call   0x6234c7e2
  41672e:	out    dx,eax
  41672f:	pop    esi
  416730:	cmp    al,0x4f
  416732:	jae    0x41679c
  416734:	test   DWORD PTR ds:0xd98c0217,eax
  41673a:	jno    0x41670b
  41673c:	dec    ecx
  41673d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41673e:	add    ebx,DWORD PTR [esi]
  416740:	je     0x4166ea
  416742:	mov    WORD PTR [ecx-0x1c],cs
  416745:	pop    esp
  416746:	rcl    DWORD PTR [ebp-0x3e],1
  416749:	stc    
  41674a:	aaa    
  41674b:	test   DWORD PTR [eax-0x7ac5945e],esi
  416751:	fisubr DWORD PTR [ebx+eiz*4]
  416754:	retf   
  416755:	mov    cl,0x83
  416757:	pop    edi
  416758:	(bad)  
  416759:	mov    al,0x5a
  41675b:	rcr    BYTE PTR [ecx+0x42],0xd7
  41675f:	int    0xd0
  416761:	pushf  
  416762:	dec    esp
  416763:	mov    eax,ds:0x916878ce
  416768:	fcmovu st,st(5)
  41676a:	adc    BYTE PTR gs:[esp+eax*2-0x5c876322],dh
  416772:	cmp    al,0x63
  416774:	adc    BYTE PTR [ebp-0x57],cl
  416777:	js     0x4167df
  416779:	and    edi,ebp
  41677b:	or     DWORD PTR ds:0x502fc3c2,0x60
  416782:	and    DWORD PTR [ecx-0x4b],eax
  416785:	or     esp,DWORD PTR [edx]
  416787:	xlat   BYTE PTR ds:[ebx]
  416788:	and    eax,0xc2d923fa
  41678d:	and    eax,0xae23f7dc
  416792:	(bad)  
  416794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416795:	xchg   ebp,eax
  416796:	mov    al,0x65
  416798:	mov    esi,0xaa45b7bb
  41679d:	mov    al,ds:0xf06fb967
  4167a2:	int    0x5e
  4167a4:	mov    eax,ds:0xf1fa78e1
  4167a9:	mov    bh,0x54
  4167ab:	sti    
  4167ac:	rcl    ecx,0x20
  4167af:	pop    esi
  4167b0:	adc    BYTE PTR [edx-0x77],bl
  4167b3:	push   eax
  4167b4:	imul   edx,DWORD PTR [ebx+eax*4+0x76],0x7c
  4167b9:	dec    ebp
  4167ba:	add    bl,BYTE PTR [ebx+0x68]
  4167bd:	push   ebx
  4167be:	cmp    BYTE PTR [edx*2-0x20312b9f],dl
  4167c5:	xlat   BYTE PTR ds:[ebx]
  4167c6:	push   cs
  4167c7:	shr    edi,cl
  4167c9:	sub    BYTE PTR [esi-0xbd7c089],al
  4167cf:	xchg   ecx,eax
  4167d0:	loop   0x416838
  4167d2:	cmp    edx,DWORD PTR [edx-0x34]
  4167d5:	or     eax,0x569939d7
  4167da:	mov    al,0x2d
  4167dc:	xchg   ah,cl
  4167de:	or     DWORD PTR [edx-0x3f],0x36a5ce1
  4167e5:	dec    eax
  4167e6:	and    DWORD PTR [eax-0x7dd34011],0x73227fb7
  4167f0:	into   
  4167f1:	lahf   
  4167f2:	push   edi
  4167f3:	push   0x431f887c
  4167f8:	fcomp  DWORD PTR [edx]
  4167fa:	add    bh,BYTE PTR [esi]
  4167fc:	mov    BYTE PTR [edi],bh
  4167fe:	sbb    DWORD PTR [eax+edx*2],esp
  416801:	iret   
  416802:	inc    edx
  416803:	call   0x5319:0xb050bf7
  41680a:	outs   dx,BYTE PTR ds:[esi]
  41680b:	aad    0x43
  41680d:	or     BYTE PTR [ebx],0x24
  416810:	popf   
  416811:	pop    esp
  416812:	retf   
  416813:	jle    0x416803
  416815:	int3   
  416816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416817:	mov    al,ds:0x67e2d3a5
  41681c:	xor    eax,0xd3a4745a
  416821:	fimul  WORD PTR [ebx+0x10]
  416824:	out    dx,eax
  416825:	adc    DWORD PTR [ecx-0x4fd4755d],esp
  41682b:	dec    edi
  41682c:	or     DWORD PTR [edx],0x2e
  41682f:	jmp    0xbb1b827b
  416834:	sbb    cl,dl
  416836:	scas   eax,DWORD PTR es:[edi]
  416837:	shl    BYTE PTR [ebp-0x5ceff856],1
  41683d:	fsubr  st(0),st
  41683f:	stos   BYTE PTR es:[edi],al
  416840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416841:	call   0x8f195e0d
  416846:	mov    ebp,0x67330fa6
  41684b:	and    al,0xb8
  41684d:	mov    dh,0x8f
  41684f:	daa    
  416850:	sbb    ch,BYTE PTR [eax-0x21]
  416853:	xchg   ebx,eax
  416854:	cmp    edx,esp
  416856:	repz inc esi
  416858:	lock test BYTE PTR [ebp-0x53aa4475],ah
  41685f:	cmp    bh,0x3
  416862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416863:	les    eax,FWORD PTR [eax+0x7c87bc1d]
  416869:	rol    DWORD PTR [ebx+eax*8+0x5c],cl
  41686d:	add    DWORD PTR [eax],edx
  41686f:	inc    ebp
  416870:	push   edi
  416871:	mov    ebx,0x9050678d
  416876:	dec    esi
  416877:	push   esi
  416878:	mov    ecx,0xa75aaf13
  41687d:	cmp    eax,DWORD PTR [edi+0x76]
  416880:	push   esp
  416881:	mov    al,ds:0xe40c9773
  416886:	into   
  416887:	xchg   ebx,ebx
  416889:	push   0xffffffd8
  41688b:	scas   al,BYTE PTR es:[edi]
  41688c:	xor    ebp,DWORD PTR [ebx]
  41688e:	xchg   BYTE PTR [esp+ebx*8],ch
  416891:	inc    edx
  416892:	enter  0x2704,0xab
  416896:	loope  0x416881
  416898:	ja     0x4168af
  41689a:	repz std 
  41689c:	fidivr DWORD PTR [ecx+esi*8+0x59fedf24]
  4168a3:	adc    eax,0x262207a1
  4168a8:	inc    esp
  4168a9:	jne    0x416851
  4168ab:	xor    ebx,DWORD PTR [edi]
  4168ad:	aaa    
  4168ae:	mov    esp,0x253c9ed6
  4168b3:	int3   
  4168b4:	sbb    bl,BYTE PTR [esi]
  4168b6:	mov    al,0xa2
  4168b8:	iret   
  4168b9:	mov    al,0xf3
  4168bb:	and    edx,DWORD PTR [esp+ecx*8]
  4168be:	cmp    ch,BYTE PTR [edi]
  4168c0:	mov    ah,0x38
  4168c2:	popa   
  4168c3:	retf   
  4168c4:	cli    
  4168c5:	cmp    edx,DWORD PTR [edi+edi*1+0x119d160f]
  4168cc:	inc    edi
  4168cd:	out    0xd8,eax
  4168cf:	jmp    0x41688c
  4168d1:	loopne 0x4168c0
  4168d3:	hlt    
  4168d4:	neg    BYTE PTR [eax]
  4168d6:	fdiv   st,st(0)
  4168d8:	or     esp,DWORD PTR [edx-0x64]
  4168db:	and    ch,BYTE PTR [edx+0x7e3c1b92]
  4168e1:	jg     0x416882
  4168e3:	add    BYTE PTR [edi-0x19],dl
  4168e6:	sbb    BYTE PTR [esi],bh
  4168e8:	push   edx
  4168e9:	sahf   
  4168ea:	xor    eax,0xe2bc5126
  4168ef:	sub    al,0x61
  4168f1:	push   cs
  4168f2:	test   BYTE PTR [edx],ch
  4168f4:	scas   eax,DWORD PTR es:[edi]
  4168f5:	nop
  4168f6:	sbb    al,0x88
  4168f8:	rol    DWORD PTR [edx-0x47],1
  4168fb:	add    edx,esp
  4168fd:	sahf   
  4168fe:	pop    esp
  4168ff:	addr16 push edx
  416901:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  416903:	add    DWORD PTR [edx-0x24],esi
  416906:	lods   eax,DWORD PTR ds:[esi]
  416907:	test   esi,edi
  416909:	xchg   esi,eax
  41690a:	cmp    al,0x88
  41690c:	xchg   DWORD PTR [eax+0x7d],ebx
  41690f:	loope  0x416978
  416911:	mov    ds:0xcbb4a524,eax
  416916:	adc    ecx,edx
  416918:	scas   eax,DWORD PTR es:[edi]
  416919:	mov    ecx,0x91aa0a7
  41691e:	cli    
  41691f:	mov    ds:0x87e0bd47,al
  416924:	jmp    0xca8bd9a3
  416929:	adc    eax,0xa1acac6d
  41692e:	xor    esp,DWORD PTR [edi+esi*1+0x5bad6dc6]
  416935:	pop    ecx
  416936:	mov    dl,0x25
  416938:	adc    eax,DWORD PTR [esi+0x0]
  41693b:	cmp    DWORD PTR [eax],edx
  41693d:	scas   al,BYTE PTR es:[edi]
  41693e:	sub    DWORD PTR [edx-0x7c],0xa6f0077f
  416945:	jp     0x4168f4
  416947:	jbe    0x41693c
  416949:	xchg   BYTE PTR [ecx+0x4de9bd4e],cl
  41694f:	bound  esi,QWORD PTR ss:[ecx-0x989d7a5]
  416956:	adc    al,0x61
  416958:	push   esp
  416959:	retf   
  41695a:	in     eax,0xbe
  41695c:	mov    WORD PTR [edi+ebx*2],cs
  41695f:	retfw  0x38ea
  416963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416964:	push   ebx
  416965:	adc    bl,BYTE PTR [edi-0x24]
  416968:	int3   
  416969:	xlat   BYTE PTR ds:[ebx]
  41696a:	jns    0x416996
  41696c:	js     0x416988
  41696e:	mov    ch,0x44
  416970:	int    0xc1
  416972:	icebp  
  416973:	pop    ds
  416974:	xor    bl,bh
  416976:	pop    ss
  416977:	popf   
  416978:	fidiv  DWORD PTR [esi-0x3ffdd6e0]
  41697e:	arpl   WORD PTR [ebx],sp
  416980:	and    ebp,DWORD PTR [edi-0xd]
  416983:	push   edx
  416984:	pop    edx
  416985:	cdq    
  416986:	push   esp
  416987:	jmp    0x416935
  416989:	add    dl,BYTE PTR [eax]
  41698b:	push   ebp
  41698c:	jno    0x416924
  41698e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41698f:	in     al,dx
  416990:	popf   
  416991:	jne    0x4169bd
  416993:	adc    DWORD PTR [ebp-0x7f],esp
  416996:	pushf  
  416997:	sub    edx,DWORD PTR [edx]
  416999:	mov    al,0x89
  41699b:	test   BYTE PTR [ecx+0x256293c7],bl
  4169a1:	ror    DWORD PTR [ebx+0x62cca0cd],0x12
  4169a8:	sbb    DWORD PTR [ebp+0x79],esp
  4169ab:	fadd   st,st(6)
  4169ad:	fist   DWORD PTR [ebx]
  4169af:	ret    
  4169b0:	mov    WORD PTR [ebp-0x5fa6d8d],ds
  4169b6:	jp     0x4169c8
  4169b8:	arpl   WORD PTR [ebx+0x4e],dx
  4169bb:	xchg   edx,eax
  4169bc:	push   esp
  4169bd:	js     0x416a06
  4169bf:	dec    ebx
  4169c0:	mov    bh,0x4f
  4169c2:	sti    
  4169c3:	test   eax,0xfcb10a57
  4169c8:	test   eax,0x125f88c8
  4169cd:	mov    eax,0x888ce94d
  4169d2:	ds mov esp,0x5e6a8755
  4169d8:	loope  0x4169c7
  4169da:	jnp    0x416980
  4169dc:	mov    ecx,0xf4709769
  4169e1:	mov    ds:0xcb41679d,eax
  4169e6:	repnz jecxz 0x416a67
  4169e9:	leave  
  4169ea:	ror    ch,cl
  4169ec:	in     eax,0x9d
  4169ee:	jg     0x4169d2
  4169f0:	pop    esp
  4169f1:	shr    BYTE PTR [ebp+0x33],1
  4169f4:	pop    ebp
  4169f5:	imul   ebx,DWORD PTR [esi+0xa],0xfa543ce1
  4169fc:	inc    edi
  4169fd:	(bad)  
  4169fe:	or     ebx,DWORD PTR [esi-0x31]
  416a01:	pop    ds
  416a02:	xor    esi,DWORD PTR fs:[ebx+0x56d6318d]
  416a09:	ja     0x416a17
  416a0b:	fmul   st(1),st
  416a0d:	xchg   edx,eax
  416a0e:	jmp    0xb04e:0xe2179a98
  416a15:	xchg   ebp,ecx
  416a17:	or     al,0x27
  416a19:	das    
  416a1a:	push   ds
  416a1b:	and    bl,ch
  416a1d:	fs dec ebp
  416a1f:	rol    DWORD PTR [ecx-0x13827e30],0x47
  416a26:	addr16 pushf 
  416a28:	lods   al,BYTE PTR ds:[esi]
  416a29:	out    dx,eax
  416a2a:	loopne 0x416a7f
  416a2c:	jp     0x416a06
  416a2e:	retf   0x5300
  416a31:	mov    bl,BYTE PTR [edi-0x4c]
  416a34:	push   ebx
  416a35:	inc    edi
  416a36:	rcl    DWORD PTR [ecx+esi*1],cl
  416a39:	retf   0xa9c7
  416a3c:	in     eax,0x43
  416a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a3f:	add    cl,cl
  416a41:	je     0x416a48
  416a43:	icebp  
  416a44:	push   ss
  416a45:	jb     0x416ab4
  416a47:	cmp    BYTE PTR [eax+edx*8+0x26],ch
  416a4b:	popf   
  416a4c:	inc    ebx
  416a4d:	xchg   edi,eax
  416a4e:	mov    ebp,0x88e75668
  416a53:	test   BYTE PTR [edi+0x61],dh
  416a56:	loop   0x416a32
  416a58:	dec    edx
  416a59:	cli    
  416a5a:	lahf   
  416a5b:	dec    esp
  416a5c:	inc    ecx
  416a5d:	rcl    bl,0xbf
  416a60:	sub    ecx,edi
  416a62:	cmp    DWORD PTR [ebp-0x6d],ebp
  416a65:	inc    edi
  416a66:	pop    ecx
  416a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a68:	mov    ds:0xfee7b7cb,al
  416a6d:	hlt    
  416a6e:	push   eax
  416a6f:	addr16 mov dh,0x10
  416a72:	dec    esi
  416a73:	loop   0x416a58
  416a75:	je     0x416a37
  416a77:	ja     0x416a6d
  416a79:	pop    ebp
  416a7a:	xchg   ebx,eax
  416a7b:	push   edx
  416a7c:	push   cs
  416a7d:	sbb    dh,dh
  416a7f:	outs   dx,DWORD PTR ds:[esi]
  416a80:	inc    ebp
  416a81:	xchg   esi,eax
  416a82:	int    0x42
  416a84:	pop    eax
  416a85:	bound  eax,QWORD PTR [eax]
  416a87:	lds    edx,FWORD PTR [ecx+0x74aedc1b]
  416a8d:	mov    dl,0x99
  416a8f:	loop   0x416a64
  416a91:	psubusb mm2,QWORD PTR [esi]
  416a94:	(bad)  
  416a95:	bound  edi,QWORD PTR [ebx+0x2c]
  416a98:	or     dh,al
  416a9a:	data16 into 
  416a9c:	out    0xa6,al
  416a9e:	jns    0x416af9
  416aa0:	ds (bad) 
  416aa2:	out    dx,eax
  416aa3:	jg     0x416b03
  416aa5:	sar    bh,0x1a
  416aa8:	lock imul ebx,DWORD PTR [esi],0x59b9261c
  416aaf:	clc    
  416ab0:	cmc    
  416ab1:	fwait
  416ab2:	mov    ebp,0xd4a21a04
  416ab7:	inc    ecx
  416ab8:	mov    ds:0x1b149bea,eax
  416abd:	inc    esp
  416abe:	or     eax,0xa02cc970
  416ac3:	ja     0x416a7b
  416ac5:	cmp    esp,ebx
  416ac7:	xchg   edi,eax
  416ac8:	inc    esi
  416ac9:	fcmovbe st,st(4)
  416acb:	pop    eax
  416acc:	pop    esp
  416acd:	adc    DWORD PTR [edx],ebp
  416acf:	std    
  416ad0:	popf   
  416ad1:	imul   ebp,DWORD PTR [esi-0x1b],0x5b
  416ad5:	push   ds
  416ad6:	jge    0x416adf
  416ad8:	xchg   esp,eax
  416ad9:	daa    
  416ada:	jle    0x416a8c
  416adc:	dec    ebx
  416add:	fwait
  416ade:	mov    ecx,DWORD PTR [ebp+eax*1+0x9]
  416ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ae3:	jnp    0x416ae3
  416ae5:	cmc    
  416ae6:	dec    edx
  416ae7:	shr    BYTE PTR [ebp+0x49f79f62],0xdd
  416aee:	push   0x3770459f
  416af3:	fild   WORD PTR [esi-0x42]
  416af6:	shl    dl,1
  416af8:	xchg   esp,eax
  416af9:	mov    bl,0x9b
  416afb:	in     al,0x89
  416afd:	inc    edi
  416afe:	fsub   st,st(6)
  416b00:	mov    ds:0xaee3a39a,eax
  416b05:	lock aaa 
  416b07:	sub    esp,DWORD PTR [eax+0x608db9a7]
  416b0d:	je     0x416b27
  416b0f:	mov    bh,0x5b
  416b11:	pop    es
  416b12:	pop    ds
  416b13:	pusha  
  416b14:	push   ebp
  416b15:	lds    ebp,FWORD PTR [edi-0x50]
  416b18:	std    
  416b19:	dec    ebp
  416b1a:	xchg   ecx,eax
  416b1b:	inc    ecx
  416b1c:	inc    edi
  416b1d:	popf   
  416b1e:	ds sahf 
  416b20:	adc    ecx,0x3a8c3483
  416b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b27:	neg    BYTE PTR [ebp-0x42aa7908]
  416b2d:	(bad)
  416b31:	xor    eax,0xc3f3683e
  416b36:	stos   DWORD PTR es:[edi],eax
  416b37:	jb     0x416bac
  416b39:	stc    
  416b3a:	adc    al,0xf4
  416b3c:	fisub  WORD PTR [ebx-0x75ecb40b]
  416b42:	xchg   edi,eax
  416b43:	jle    0x416b69
  416b45:	ins    BYTE PTR es:[edi],dx
  416b46:	ret    
  416b47:	retf   
  416b48:	push   0x42
  416b4a:	cdq    
  416b4b:	cld    
  416b4c:	scas   eax,DWORD PTR es:[edi]
  416b4d:	push   edi
  416b4e:	scas   al,BYTE PTR es:[edi]
  416b4f:	repz xor DWORD PTR [ecx+eiz*8+0x35],ecx
  416b54:	arpl   di,cx
  416b56:	sti    
  416b57:	fwait
  416b58:	repnz mov cl,0x73
  416b5b:	out    0x38,al
  416b5d:	mov    esi,0x1286aaea
  416b62:	frstor ss:[esi+0x64d9a9ba]
  416b69:	push   ecx
  416b6a:	pop    ebp
  416b6b:	nop
  416b6c:	cmp    ebx,DWORD PTR [esi+0x3749c356]
  416b72:	cmp    DWORD PTR [ebx+0x2c],0x8307abe8
  416b79:	mov    cl,0x4f
  416b7b:	jno    0x416ba1
  416b7d:	jne    0x416b84
  416b7f:	mov    ebx,0xb5a4411c
  416b84:	cs in  eax,dx
  416b86:	call   0xc576:0xd67749ec
  416b8d:	les    edx,FWORD PTR [ebx+0x78]
  416b90:	in     eax,dx
  416b91:	stos   DWORD PTR es:[edi],eax
  416b92:	adc    DWORD PTR [ebx+eax*8-0x4a],ecx
  416b96:	or     ebx,edi
  416b98:	cmp    al,0x53
  416b9a:	mov    ebx,es
  416b9c:	iret   
  416b9d:	pop    ecx
  416b9e:	sub    BYTE PTR [edi+0x6779f5f2],dh
  416ba4:	sbb    al,0xbe
  416ba6:	sub    al,0xbe
  416ba8:	jg     0x416b95
  416baa:	mov    ds:0x489c27d5,al
  416baf:	and    al,0x2a
  416bb1:	jbe    0x416b77
  416bb3:	sub    al,BYTE PTR es:[ebx]
  416bb6:	jle    0x416bae
  416bb8:	out    dx,al
  416bb9:	mov    edx,0x9292b095
  416bbe:	int    0x76
  416bc0:	pusha  
  416bc1:	mov    edi,0x746713e6
  416bc6:	and    al,0xc0
  416bc8:	lods   al,BYTE PTR ds:[esi]
  416bc9:	xor    DWORD PTR [edi-0x1eba9706],esi
  416bcf:	repnz addr16 pop edx
  416bd2:	inc    edi
  416bd3:	in     eax,0xad
  416bd5:	and    BYTE PTR [eax+0x1],0x30
  416bd9:	loop   0x416b93
  416bdb:	and    eax,0x31c93029
  416be0:	cmp    edx,DWORD PTR [ebx+0x1ac7a383]
  416be6:	cmc    
  416be7:	loop   0x416c34
  416be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bea:	mov    esp,0xa87c1102
  416bef:	jns    0x416bc5
  416bf1:	push   ecx
  416bf2:	xchg   BYTE PTR [esi+0x4ed5aa88],ah
  416bf8:	vpsrld ymm1,ymm7,XMMWORD PTR [edi+0xe]
  416bfd:	adc    dh,BYTE PTR [ebx+0x7c]
  416c00:	fwait
  416c01:	rol    BYTE PTR [esi+0x2f7acb55],1
  416c07:	dec    eax
  416c08:	xchg   ecx,eax
  416c09:	mov    ah,0x2e
  416c0b:	xor    bh,ch
  416c0d:	into   
  416c0e:	xchg   edx,eax
  416c0f:	jns    0x416c67
  416c11:	(bad)  
  416c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c13:	mov    bh,0xca
  416c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c16:	ror    dh,1
  416c18:	sub    DWORD PTR [edi-0x51c730cc],edx
  416c1e:	sbb    BYTE PTR [edx-0x22015fca],ch
  416c24:	lock xor BYTE PTR [ecx],ch
  416c27:	push   0x2d
  416c29:	mov    eax,0x447dbe0d
  416c2e:	loopne 0x416c6f
  416c30:	dec    eax
  416c31:	scas   al,BYTE PTR es:[edi]
  416c32:	or     DWORD PTR [edx+ebx*4-0x427d22a4],edi
  416c39:	sbb    DWORD PTR [ebx+eiz*1-0x53],esp
  416c3d:	je     0x416bdd
  416c3f:	in     eax,0x8a
  416c41:	dec    eax
  416c42:	clc    
  416c43:	add    al,0x9c
  416c45:	sub    al,0x43
  416c47:	mov    DWORD PTR [ecx],ebp
  416c49:	out    0xd2,eax
  416c4b:	push   cs
  416c4c:	or     BYTE PTR [ecx+eax*2],ah
  416c4f:	jl     0x416c06
  416c51:	cld    
  416c52:	xor    BYTE PTR [edi-0x68a046f4],ch
  416c58:	jg     0x416be5
  416c5a:	pushf  
  416c5b:	xor    eax,0x16385654
  416c60:	aad    0x6
  416c62:	fwait
  416c63:	int3   
  416c64:	cmp    DWORD PTR [ebx],esi
  416c66:	addr16 mov esp,0x944ae477
  416c6c:	frstor [edi+eax*8+0x14]
  416c70:	sub    esi,DWORD PTR [edi]
  416c72:	popf   
  416c73:	stos   DWORD PTR es:[edi],eax
  416c74:	dec    ebx
  416c75:	add    bh,BYTE PTR [ebp-0x6bb72daa]
  416c7b:	psubd  mm4,mm2
  416c7e:	loop   0x416c67
  416c80:	mov    edx,0xbcdd1e5
  416c85:	sub    BYTE PTR [ecx+0x76a97b04],cl
  416c8b:	cli    
  416c8c:	add    eax,0xba371dd1
  416c91:	fcmovb st,st(6)
  416c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c94:	rcl    BYTE PTR [eax+0x143b3d89],1
  416c9a:	imul   eax,DWORD PTR [edi+0xe2318bd],0x48f07fc
  416ca4:	fst    DWORD PTR [ebx]
  416ca6:	mov    ebp,0xd21112b1
  416cab:	aas    
  416cac:	mov    edi,0x5a87263f
  416cb1:	popa   
  416cb2:	fstp   DWORD PTR [ecx]
  416cb4:	inc    eax
  416cb5:	dec    ebx
  416cb6:	mov    ebp,0x516289e9
  416cbb:	sub    edi,ebp
  416cbd:	mov    al,ds:0xb229d7d4
  416cc2:	pop    ecx
  416cc3:	adc    al,0xe6
  416cc5:	mov    edi,0x2f211954
  416cca:	pushf  
  416ccb:	inc    esp
  416ccc:	into   
  416ccd:	push   ds
  416cce:	mov    ecx,0xc92fc9fd
  416cd3:	out    dx,eax
  416cd4:	pop    eax
  416cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd6:	jle    0x416cab
  416cd8:	ss js  0x416ca0
  416cdb:	mov    ch,0x7
  416cdd:	mov    dh,0x9d
  416cdf:	xchg   edi,eax
  416ce0:	mov    BYTE PTR [edi-0x7283d37c],dh
  416ce6:	call   0xdb9e:0x86dccfa0
  416ced:	bound  ebx,QWORD PTR [edi-0xdd91974]
  416cf3:	imul   ebx,DWORD PTR [eax],0xffffffca
  416cf6:	mov    ebp,0xa5905232
  416cfb:	add    al,ah
  416cfd:	in     eax,0x92
  416cff:	cld    
  416d00:	adc    ah,BYTE PTR [ebx+0x3]
  416d03:	pop    ecx
  416d04:	and    DWORD PTR [eax+eiz*1-0x32],ebx
  416d08:	fild   WORD PTR [edi+eiz*1-0x22]
  416d0c:	dec    edi
  416d0d:	(bad)  
  416d0e:	xor    al,0xab
  416d10:	add    BYTE PTR [edi+0x7d14c519],cl
  416d16:	sub    eax,ecx
  416d18:	ins    DWORD PTR es:[edi],dx
  416d19:	mov    DWORD PTR [eax+edx*1],edi
  416d1c:	scas   al,BYTE PTR es:[edi]
  416d1d:	jo     0x416cae
  416d1f:	aam    0xf3
  416d21:	pusha  
  416d22:	out    dx,eax
  416d23:	sub    eax,0xe5231880
  416d28:	loopne 0x416d6e
  416d2a:	add    DWORD PTR [edx+eax*2],edi
  416d2d:	fnstenv [edi]
  416d2f:	ret    
  416d30:	rcl    DWORD PTR [eax],cl
  416d32:	mov    cl,0xd9
  416d34:	xchg   edx,eax
  416d35:	xor    esp,DWORD PTR [esi+0x56]
  416d38:	mov    ebp,0x3188bcfd
  416d3d:	xchg   ebp,eax
  416d3e:	lods   al,BYTE PTR ds:[esi]
  416d3f:	iret   
  416d40:	xor    eax,0x968bdd76
  416d45:	or     edx,ebp
  416d47:	(bad)  
  416d48:	pop    ebx
  416d49:	(bad)  
  416d4a:	cmp    DWORD PTR [edi+0x2],esp
  416d4d:	adc    BYTE PTR [ebx],0xae
  416d50:	add    bl,ch
  416d52:	inc    eax
  416d53:	cld    
  416d54:	pushf  
  416d55:	sbb    eax,DWORD PTR [edx-0x224f14ef]
  416d5b:	fsubr  QWORD PTR [eax+0x6413371b]
  416d61:	stos   DWORD PTR es:[edi],eax
  416d62:	shr    bh,cl
  416d64:	adc    dh,bl
  416d66:	out    0x1e,eax
  416d68:	ds sahf 
  416d6a:	and    BYTE PTR [ecx-0x5e9ea9aa],bl
  416d70:	ror    DWORD PTR [ebx-0x54],cl
  416d73:	mov    eax,ds:0xe252270e
  416d78:	mov    ch,0x81
  416d7a:	jnp    0x416d0a
  416d7c:	dec    ebp
  416d7d:	dec    edi
  416d7e:	dec    ebp
  416d7f:	xor    ah,bl
  416d81:	in     eax,0xf9
  416d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d84:	repz pop edi
  416d86:	dec    edx
  416d87:	not    DWORD PTR cs:[ecx+ebp*2+0x77]
  416d8c:	out    dx,al
  416d8d:	xor    DWORD PTR [ecx+0x42],ebx
  416d90:	dec    ebx
  416d91:	xor    BYTE PTR [ebx-0x1d],ch
  416d94:	in     eax,dx
  416d95:	addr16 or al,0x65
  416d98:	loopne 0x416e03
  416d9a:	and    edi,DWORD PTR [ebp+0x12]
  416d9d:	ja     0x416d54
  416d9f:	sub    al,0x1b
  416da1:	nop
  416da2:	xchg   edi,eax
  416da3:	jle    0x416d5e
  416da5:	fwait
  416da6:	xchg   BYTE PTR [edi],dh
  416da8:	sbb    DWORD PTR [ecx-0x24],eax
  416dab:	xchg   edx,eax
  416dac:	pop    esi
  416dad:	mov    bl,0x7
  416daf:	ins    DWORD PTR es:[edi],dx
  416db0:	push   0xfffffff5
  416db2:	sbb    eax,0x4317be43
  416db7:	sti    
  416db8:	sub    cl,BYTE PTR [esp+eax*2]
  416dbb:	pop    esi
  416dbc:	addr16 je 0x416e10
  416dbf:	sbb    al,0xaa
  416dc1:	es ret 
  416dc3:	iret   
  416dc4:	cdq    
  416dc5:	shl    BYTE PTR [ebx+0x5a],0x2f
  416dc9:	xor    BYTE PTR [ebp-0x6d5ea7c7],dh
  416dcf:	jp     0x416dfc
  416dd1:	and    DWORD PTR [ebx+0x1c63b7b2],ebx
  416dd7:	sub    DWORD PTR [ebx+ebp*1],ebx
  416dda:	jno    0x416db4
  416ddc:	movd   DWORD PTR [ebp+0x76],mm5
  416de0:	scas   al,BYTE PTR es:[edi]
  416de1:	arpl   WORD PTR [eax-0x2a08f20d],sp
  416de7:	fwait
  416de8:	arpl   WORD PTR [ebx+eax*1],si
  416deb:	fistp  QWORD PTR [ecx-0x35742bd2]
  416df1:	mov    ecx,edi
  416df3:	inc    eax
  416df4:	das    
  416df5:	xor    DWORD PTR [esi+0x6dc05d42],edi
  416dfb:	(bad)  
  416dfc:	repnz imul ebp,esi,0x8060f8a2
  416e03:	int3   
  416e04:	das    
  416e05:	mov    al,ds:0x31b48d9c
  416e0a:	inc    esi
  416e0b:	pop    edx
  416e0c:	pop    esi
  416e0d:	retf   
  416e0e:	lods   eax,DWORD PTR ds:[esi]
  416e0f:	jecxz  0x416d94
  416e11:	sbb    edx,ebp
  416e13:	mov    bh,0xe6
  416e15:	jmp    0x7b5c1744
  416e1a:	jle    0x416db0
  416e1c:	and    DWORD PTR [edx+0x4f],eax
  416e1f:	cdq    
  416e20:	fisttp QWORD PTR [eax]
  416e22:	sahf   
  416e23:	xchg   DWORD PTR [ebp+0x6c],ebp
  416e26:	and    al,0x7e
  416e28:	jmp    0x416e9d
  416e2a:	push   ds
  416e2b:	loop   0x416e26
  416e2d:	jns    0x416e05
  416e2f:	mov    cl,0x6a
  416e31:	call   DWORD PTR [ecx+0x19]
  416e34:	cmp    eax,0x1baa1f12
  416e39:	add    BYTE PTR [edx],cl
  416e3b:	dec    esi
  416e3d:	push   edx
  416e3e:	dec    esi
  416e3f:	xchg   ebp,eax
  416e40:	fsqrt  
  416e42:	sbb    esp,ecx
  416e44:	rol    BYTE PTR [ecx+ecx*2],cl
  416e47:	xor    dh,BYTE PTR [esi]
  416e49:	xchg   ebp,eax
  416e4a:	sbb    DWORD PTR [ebp-0x65],edi
  416e4d:	inc    esi
  416e4e:	add    edx,DWORD PTR [esi]
  416e50:	cmp    DWORD PTR [edi],0x67caaa52
  416e56:	stc    
  416e57:	sub    bh,BYTE PTR [ecx-0x45978480]
  416e5d:	retf   0xf426
  416e60:	das    
  416e61:	aad    0x76
  416e63:	adc    BYTE PTR [ecx+0x35f05cc0],dh
  416e69:	stos   DWORD PTR es:[edi],eax
  416e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e6b:	sub    DWORD PTR es:[esi+0x42],edx
  416e6f:	retf   
  416e70:	fnstenv [eax+0x5725b031]
  416e76:	add    al,0xb0
  416e78:	mov    WORD PTR [ecx+0x71],es
  416e7b:	out    0x5f,al
  416e7d:	add    DWORD PTR [ebx+eiz*2-0x38],0x79cfad7
  416e85:	enter  0x4eaa,0x1b
  416e89:	mov    DWORD PTR [eax+0x2cfbc92d],0xa64a1484
  416e93:	lock mov al,0x75
  416e96:	(bad)  
  416e97:	sub    eax,0x5bd0a9bc
  416e9c:	mov    dh,0x9
  416e9e:	pop    ds
  416e9f:	cmp    BYTE PTR [esp+eax*2+0x4985a58f],dl
  416ea6:	data16 jno 0x416ece
  416ea9:	fnstenv [ebx]
  416eab:	sub    BYTE PTR [edx-0x24],al
  416eae:	outs   dx,BYTE PTR ds:[esi]
  416eaf:	lahf   
  416eb0:	call   edi
  416eb2:	test   DWORD PTR [eax+0x77],0x2eab5e6b
  416eb9:	fimul  DWORD PTR [ecx-0x6a]
  416ebc:	pop    edi
  416ebd:	aam    0x7b
  416ebf:	push   eax
  416ec0:	retf   0x5da4
  416ec3:	mov    edx,0x2b65d187
  416ec8:	aaa    
  416ec9:	popf   
  416eca:	mov    BYTE PTR [eax],bl
  416ecc:	and    ebp,esi
  416ece:	ffreep st(7)
  416ed0:	addr16 aaa 
  416ed2:	fisttp DWORD PTR [esi-0x20f15fee]
  416ed8:	loop   0x416f19
  416eda:	(bad)  
  416edb:	mov    dl,0x0
  416edd:	fs add al,0xf
  416ee0:	cmp    BYTE PTR ds:0xa564bfdb,0xca
  416ee7:	rcl    BYTE PTR [edi-0x38],1
  416eea:	aad    0x6e
  416eec:	ret    0x7eb1
  416eef:	add    eax,0x721d9285
  416ef4:	add    eax,0x93dfb857
  416ef9:	sub    BYTE PTR [esi+0x2f],0x88
  416efd:	mov    edi,0x95092891
  416f02:	cli    
  416f03:	mov    bh,0x86
  416f05:	data16 loop 0x416f64
  416f08:	jmp    0x416eb8
  416f0a:	(bad)  
  416f0b:	jmp    0x465a:0xf2370c3a
  416f12:	or     al,0x7a
  416f14:	mov    cl,0x94
  416f16:	scas   eax,DWORD PTR es:[edi]
  416f17:	div    ah
  416f19:	push   esi
  416f1a:	ss jmp 0xfcf6cb95
  416f20:	cmc    
  416f21:	mov    eax,0x6e73068d
  416f26:	ins    BYTE PTR es:[edi],dx
  416f27:	adc    al,0xd2
  416f29:	sbb    BYTE PTR [esi+eax*4],ch
  416f2c:	add    esp,edx
  416f2e:	adc    BYTE PTR [edx+ecx*2-0x5f0b08b6],dh
  416f35:	aaa    
  416f36:	xchg   edx,eax
  416f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f38:	fidiv  WORD PTR fs:[esi+0x62]
  416f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f3d:	stc    
  416f3e:	lock test eax,0x33d98f1
  416f44:	lahf   
  416f45:	in     al,dx
  416f46:	push   ecx
  416f47:	inc    edi
  416f48:	and    al,0x4d
  416f4a:	inc    ecx
  416f4b:	mov    ebx,0x68a3a7db
  416f50:	ret    
  416f51:	or     BYTE PTR [eax-0x54a531ce],al
  416f57:	push   es
  416f58:	jle    0x416fa6
  416f5a:	outs   dx,BYTE PTR ds:[esi]
  416f5b:	add    ch,BYTE PTR [esi+edx*1-0x1b26f242]
  416f62:	lods   eax,DWORD PTR ds:[esi]
  416f63:	dec    esi
  416f64:	and    bl,BYTE PTR [edi]
  416f66:	(bad)
  416f69:	clc    
  416f6a:	scas   eax,DWORD PTR es:[edi]
  416f6b:	mov    WORD PTR [ebx+ecx*8+0x2d3bf9a],fs
  416f72:	adc    al,0x69
  416f74:	fmul   DWORD PTR [edi-0x5]
  416f77:	adc    DWORD PTR ds:0x44b43521,eax
  416f7d:	mov    edx,0x8477f0a2
  416f82:	jl     0x416fa8
  416f84:	mov    al,0x9e
  416f86:	jmp    0x416fc8
  416f88:	push   DWORD PTR [edi+0x19]
  416f8b:	(bad)  
  416f8c:	jne    0x416f12
  416f8e:	ss jb  0x416fe3
  416f91:	iret   
  416f92:	iret   
  416f93:	ins    BYTE PTR es:[edi],dx
  416f94:	lds    edx,FWORD PTR [eax-0x5a]
  416f97:	and    DWORD PTR [ebp-0x7f],esi
  416f9a:	xchg   bl,bl
  416f9c:	inc    ebp
  416f9d:	mov    cl,cl
  416f9f:	dec    ebx
  416fa0:	shl    BYTE PTR [esi+0x5576d062],1
  416fa6:	or     cl,ah
  416fa8:	xchg   edx,eax
  416fa9:	dec    eax
  416faa:	mov    edi,0xb26bb8eb
  416faf:	out    dx,al
  416fb0:	xchg   ebp,eax
  416fb1:	out    dx,al
  416fb2:	stos   BYTE PTR es:[edi],al
  416fb3:	mov    al,ds:0x752c895b
  416fb8:	dec    edi
  416fb9:	sbb    bh,BYTE PTR [ebx+edx*8-0x6f]
  416fbd:	mov    al,ds:0x885b9b49
  416fc2:	rcr    DWORD PTR [edi+0x5],cl
  416fc5:	sbb    esi,DWORD PTR [ebx]
  416fc7:	inc    eax
  416fc8:	mov    ecx,0x4f50ad1e
  416fcd:	test   eax,0xb886c0b1
  416fd2:	js     0x417008
  416fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fd5:	aas    
  416fd6:	add    eax,0xa59e2c67
  416fdb:	xor    eax,0x67661572
  416fe0:	xlat   BYTE PTR ds:[ebx]
  416fe1:	mov    al,0x8e
  416fe3:	int3   
  416fe4:	stos   DWORD PTR es:[edi],eax
  416fe5:	icebp  
  416fe6:	inc    ebx
  416fe7:	aaa    
  416fe8:	rep ins DWORD PTR es:[edi],dx
  416fea:	mov    edi,0xcebbf5c2
  416fef:	out    0x27,eax
  416ff1:	fwait
  416ff2:	dec    esi
  416ff3:	push   ebp
  416ff4:	mov    ebp,0x2f1bfe40
  416ff9:	sti    
  416ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ffb:	rcl    BYTE PTR [eax-0x37],1
  416ffe:	xor    BYTE PTR [ecx-0x7c],bl
  417001:	rol    BYTE PTR [edx+0x292897e0],0xce
  417008:	sub    edi,DWORD PTR [ecx]
  41700a:	xchg   ebp,eax
  41700b:	pop    ebp
  41700c:	push   esi
  41700d:	int3   
  41700e:	dec    esi
  41700f:	das    
  417010:	(bad)  
  417011:	xor    DWORD PTR ds:0x1f152cd1,esi
  417017:	push   ebp
  417018:	inc    ch
  41701a:	dec    ebp
  41701b:	dec    eax
  41701c:	in     eax,dx
  41701d:	(bad)  
  41701e:	mov    al,ds:0xfde6efaf
  417023:	or     eax,0x5aee6248
  417028:	xchg   DWORD PTR [edx],ebx
  41702a:	jns    0x417006
  41702c:	shl    al,cl
  41702e:	dec    ebx
  41702f:	adc    BYTE PTR ds:0x8754307e,dl
  417035:	int    0x4c
  417037:	xchg   esp,eax
  417038:	aad    0x1a
  41703a:	sbb    al,0x65
  41703c:	inc    edi
  41703d:	inc    esi
  41703e:	pop    esi
  41703f:	jle    0x41709f
  417041:	and    dh,0x57
  417044:	ds xchg ecx,eax
  417046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417047:	arpl   WORD PTR [edx+0x1],cx
  41704a:	stc    
  41704b:	sub    BYTE PTR [ebx],bl
  41704d:	push   es
  41704e:	test   DWORD PTR [edi+0x1df81e49],0xc027edf0
  417058:	(bad)  
  41705a:	jp     0x4170c4
  41705c:	jg     0x417093
  41705e:	push   0x1c4db303
  417063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417064:	fistp  WORD PTR [eax-0x7aee1c64]
  41706a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41706b:	mov    edi,0xec70e1f6
  417070:	adc    ah,dl
  417072:	jle    0x4170d8
  417074:	sti    
  417075:	loope  0x4170e4
  417077:	call   0x9388:0xc44dd7d4
  41707e:	fsubp  st(6),st
  417080:	xor    esp,eax
  417082:	repnz mov cl,0xfe
  417085:	xor    al,0x92
  417087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417088:	loope  0x417028
  41708a:	sbb    bh,BYTE PTR [esi+0x54]
  41708d:	or     ebp,esp
  41708f:	adc    BYTE PTR [esp+ecx*4+0x1b52c524],dh
  417096:	mov    dl,0x34
  417098:	fidiv  DWORD PTR [edi-0x39]
  41709b:	fucom  st(7)
  41709d:	(bad)  
  41709e:	cs add eax,0x1324e598
  4170a4:	stos   BYTE PTR es:[edi],al
  4170a5:	popa   
  4170a6:	sub    edx,DWORD PTR [ebx+0x7309bb42]
  4170ac:	outs   dx,DWORD PTR ds:[esi]
  4170ad:	mov    al,ds:0x3735e0d3
  4170b2:	add    al,0xba
  4170b4:	in     eax,0xcf
  4170b6:	das    
  4170b7:	inc    ebx
  4170b8:	mov    ds:0x2b121eba,al
  4170bd:	inc    esi
  4170be:	push   edi
  4170bf:	jmp    0x3d4cf5f5
  4170c4:	fwait
  4170c5:	pop    ss
  4170c6:	iret   
  4170c7:	sbb    BYTE PTR [ebp-0x7f],bh
  4170ca:	lods   al,BYTE PTR ds:[esi]
  4170cb:	cs cdq 
  4170cd:	push   eax
  4170ce:	jo     0x417071
  4170d0:	inc    ebx
  4170d1:	xchg   ebp,eax
  4170d2:	out    dx,eax
  4170d3:	xchg   edi,eax
  4170d4:	adc    al,0x89
  4170d6:	dec    ecx
  4170d7:	(bad)  
  4170d8:	lahf   
  4170d9:	clc    
  4170da:	lea    edi,[eax+0x2]
  4170dd:	sbb    esi,DWORD PTR [edx-0x1]
  4170e0:	or     dh,BYTE PTR [ecx-0x7d19544e]
  4170e6:	js     0x4170ff
  4170e8:	bound  esp,QWORD PTR [esi]
  4170ea:	sbb    al,0x98
  4170ec:	mov    DWORD PTR [esi-0x740f3550],edi
  4170f2:	xor    BYTE PTR [edi],0x3c
  4170f5:	xchg   edi,eax
  4170f6:	cmc    
  4170f7:	add    al,0x4d
  4170f9:	pop    esi
  4170fa:	stos   DWORD PTR es:[edi],eax
  4170fb:	pop    es
  4170fc:	xchg   ah,dh
  4170fe:	jmp    0x4170f4
  417100:	mov    ds:0x4b9d1120,al
  417105:	and    al,0xc1
  417107:	mov    bl,0xf9
  417109:	mov    bh,0xb1
  41710b:	cmc    
  41710c:	mov    esi,DWORD PTR [edi+ebx*4]
  41710f:	inc    ebp
  417110:	and    DWORD PTR [edx-0x41],eax
  417113:	sub    eax,0x5c65ed93
  417118:	mov    ?,edx
  41711a:	lds    esp,FWORD PTR [ecx+edx*8]
  41711d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41711e:	pusha  
  41711f:	xor    edx,DWORD PTR [edx+0xc]
  417122:	out    dx,eax
  417123:	scas   al,BYTE PTR es:[edi]
  417124:	pop    ss
  417125:	jge    0x41715b
  417127:	and    bl,bl
  417129:	pop    eax
  41712a:	fadd   DWORD PTR [ebp-0x3e]
  41712d:	sbb    eax,0xebd2fe28
  417132:	pop    ebx
  417133:	neg    BYTE PTR [edi+edx*8]
  417136:	lock and ecx,esp
  417139:	pop    ds
  41713a:	push   ss
  41713b:	and    ch,BYTE PTR [eax]
  41713d:	inc    edx
  41713e:	jmp    0x840e:0x9dfc7c4e
  417145:	push   0x5ade4f74
  41714a:	xchg   esi,eax
  41714b:	std    
  41714c:	mov    dl,BYTE PTR [esi-0x7c]
  41714f:	out    dx,al
  417150:	jmp    0xed7aeacc
  417155:	jns    0x4171cc
  417157:	mov    al,ds:0x296a7e7f
  41715c:	(bad)  
  41715d:	fist   WORD PTR [ebx-0x9]
  417161:	push   esi
  417162:	or     al,0x9e
  417164:	xor    ebp,ebx
  417166:	not    bl
  417168:	dec    eax
  417169:	cmp    eax,0xa14320fb
  41716e:	sbb    eax,0x93ce7991
  417173:	cld    
  417174:	sar    DWORD PTR [ebp-0x6e],0x5e
  417178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417179:	shl    DWORD PTR [ebp-0x1a],0x90
  41717d:	xlat   BYTE PTR ds:[ebx]
  41717e:	aaa    
  41717f:	inc    si
  417181:	mov    ds:0xea09395f,al
  417186:	arpl   WORD PTR [esi],sp
  417188:	shr    DWORD PTR [edi-0x24088a03],1
  41718e:	popf   
  41718f:	cmp    bh,0xeb
  417192:	sahf   
  417193:	xchg   bl,dl
  417195:	mov    ebp,0x42c5f766
  41719a:	adc    edx,0x139b8048
  4171a0:	mov    edi,0x2c935e0d
  4171a5:	mov    edx,0x97d2b914
  4171aa:	or     bl,bh
  4171ac:	repz inc ecx
  4171ae:	mov    esi,0x64ec4b4d
  4171b3:	push   0x22
  4171b5:	and    al,0xab
  4171b7:	nop
  4171b8:	mov    al,0x6d
  4171ba:	cs pop ebx
  4171bc:	push   ecx
  4171bd:	rol    ecx,cl
  4171bf:	push   0xdf88fc0e
  4171c4:	sub    eax,0x6f9688c0
  4171c9:	inc    edi
  4171ca:	add    BYTE PTR [ecx],cl
  4171cc:	lds    ecx,FWORD PTR [edi+0x42]
  4171cf:	arpl   bx,di
  4171d1:	(bad)  
  4171d2:	in     al,0xeb
  4171d4:	iret   
  4171d5:	mov    ebp,0x17913618
  4171da:	dec    esi
  4171db:	out    dx,eax
  4171dc:	mov    ds,edi
  4171de:	xchg   bl,ch
  4171e0:	retf   
  4171e1:	repz sub eax,0xbd85160a
  4171e7:	and    eax,0x9bc94230
  4171ec:	bound  edi,QWORD PTR [edx-0x59]
  4171ef:	out    0xc5,eax
  4171f1:	in     al,0xcb
  4171f3:	cmp    BYTE PTR [ebp+0x2c],0x9f
  4171f7:	(bad)  
  4171f8:	call   0x4e09:0x998c9e38
  4171ff:	jne    0x4171bc
  417201:	inc    edx
  417202:	sub    ebx,ebp
  417204:	pop    ebx
  417205:	jle    0x41723b
  417207:	mov    esi,gs
  417209:	adc    bl,BYTE PTR ds:0x87fa95b2
  41720f:	loopne 0x41727b
  417211:	push   0x19
  417213:	js     0x4171ca
  417215:	in     eax,0x24
  417217:	add    DWORD PTR [ebp-0xd970928],eax
  41721d:	cs pushf 
  41721f:	sub    eax,0xa3ac5501
  417224:	bound  esi,QWORD PTR [ecx-0x2]
  417227:	fcomp  QWORD PTR [edi+0x79870115]
  41722d:	push   0xc
  41722f:	mov    gs,WORD PTR [eax+0x2d21fd1]
  417235:	shl    DWORD PTR [eax],0x72
  417238:	or     ecx,ecx
  41723a:	rcl    BYTE PTR [edi+eiz*8+0x1e],0x1c
  41723f:	xor    ecx,esp
  417241:	icebp  
  417242:	fnsave [edi-0x5ce155e4]
  417248:	jecxz  0x4171de
  41724a:	and    edi,DWORD PTR [ecx]
  41724c:	pop    edx
  41724d:	sub    ch,BYTE PTR [esi-0xc9c7562]
  417253:	cdq    
  417254:	dec    ecx
  417255:	mov    dl,0xf6
  417257:	(bad)  
  417258:	mov    ds:0x1aa403d1,eax
  41725d:	adc    ebp,ebp
  41725f:	inc    esi
  417260:	cmp    eax,0xd4a272f8
  417265:	pushf  
  417266:	mov    cl,0x96
  417268:	dec    edx
  417269:	mov    ecx,esi
  41726b:	dec    eax
  41726c:	pop    eax
  41726e:	rcr    BYTE PTR [eax-0x80],0x1d
  417272:	jno    0x4172ec
  417274:	and    ebp,DWORD PTR [edi+0x60]
  417277:	std    
  417278:	adc    DWORD PTR [eax],ebx
  41727a:	es push ds
  41727c:	sar    cl,1
  41727e:	jl     0x4172ed
  417280:	adc    esp,DWORD PTR [edi+ebp*8]
  417283:	xchg   DWORD PTR [esi+eiz*1],esp
  417286:	call   DWORD PTR [edx-0xc]
  417289:	mov    DWORD PTR [esi],esi
  41728b:	sub    al,0xec
  41728d:	push   esi
  41728e:	fld    QWORD PTR [ecx-0x54]
  417291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417292:	push   esi
  417293:	sbb    edx,ebp
  417295:	cpuid  
  417297:	add    DWORD PTR ds:0xfba9c1bf,0x4f828b52
  4172a1:	dec    esi
  4172a2:	cdq    
  4172a3:	out    dx,al
  4172a4:	inc    edi
  4172a5:	fwait
  4172a6:	ud2    
  4172a8:	(bad)  
  4172a9:	out    dx,al
  4172aa:	neg    edx
  4172ac:	xchg   ebx,eax
  4172ad:	xor    ah,BYTE PTR [ebx+0x6bc5b456]
  4172b3:	adc    al,0x13
  4172b5:	cmp    al,0xc4
  4172b7:	jnp    0x41726d
  4172b9:	sub    eax,0xafe2051c
  4172be:	and    DWORD PTR [ebx+edx*1+0x10],0x4d
  4172c3:	sbb    DWORD PTR [ebx-0x6425f33a],ebp
  4172c9:	out    0xb9,al
  4172cb:	adc    eax,0xb513c7e0
  4172d0:	sbb    dh,BYTE PTR [ebx+0x37cc3f81]
  4172d6:	cdq    
  4172d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172d8:	cmp    al,0xee
  4172da:	(bad)
  4172dd:	outs   dx,DWORD PTR ds:[esi]
  4172de:	pop    edi
  4172df:	lds    eax,FWORD PTR [ebx-0x21]
  4172e2:	sahf   
  4172e3:	jnp    0x4172f5
  4172e5:	cmp    eax,0xd591012f
  4172ea:	hlt    
  4172eb:	push   0x2fc811e7
  4172f0:	and    DWORD PTR [ebp+ecx*2-0x4d8f03bf],ecx
  4172f7:	ret    0x1aa0
  4172fa:	mul    DWORD PTR [esi+0x10]
  4172fd:	dec    ecx
  4172fe:	(bad)  
  4172ff:	frstor [esi]
  417301:	sub    al,0x20
  417303:	sbb    al,ah
  417305:	outs   dx,BYTE PTR ds:[esi]
  417306:	lahf   
  417307:	xor    eax,0x5e2eadb1
  41730c:	test   BYTE PTR [ecx-0x7e65203a],ah
  417312:	pop    ds
  417313:	leave  
  417314:	cmc    
  417315:	lea    ebx,[ecx]
  417317:	mov    dl,cl
  417319:	pop    ds
  41731a:	idiv   DWORD PTR [ebx-0x5a]
  41731d:	bound  esp,QWORD PTR [eax+0x31]
  417320:	xchg   ecx,edi
  417322:	nop
  417323:	and    ecx,esi
  417325:	push   edi
  417326:	shl    eax,cl
  417328:	das    
  417329:	sub    eax,0x172da39f
  41732e:	inc    ecx
  41732f:	mov    cl,BYTE PTR [ecx]
  417331:	stos   DWORD PTR es:[edi],eax
  417332:	hlt    
  417333:	retf   0x36c3
  417336:	clc    
  417337:	xchg   ecx,eax
  417338:	sub    DWORD PTR [eax+0x18e71cf0],0x4eb4014f
  417342:	cmp    eax,0x27427f81
  417347:	cdq    
  417348:	jecxz  0x417388
  41734a:	mov    DWORD PTR [ebx-0x76dac209],esp
  417350:	retf   0x60b5
  417353:	push   edx
  417354:	xchg   ebx,eax
  417355:	dec    esp
  417356:	retf   0xfa6a
  417359:	dec    esp
  41735a:	jecxz  0x417314
  41735c:	adc    eax,0x2bced315
  417361:	dec    ecx
  417362:	push   DWORD PTR [eax-0x702aad6c]
  417368:	fdiv   st(0),st
  41736a:	int    0xb9
  41736c:	jne    0x417321
  41736e:	in     eax,0xd3
  417370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417371:	inc    eax
  417372:	inc    esp
  417373:	inc    esi
  417374:	fnstsw WORD PTR [ebp+0x1d4deff3]
  41737a:	xchg   ecx,eax
  41737b:	jb     0x417319
  41737d:	xor    BYTE PTR [eax+edx*2+0x370dc6cf],0x41
  417385:	or     BYTE PTR [esi],cl
  417387:	mov    ecx,DWORD PTR [edx]
  417389:	push   esp
  41738a:	dec    ebp
  41738b:	dec    esp
  41738c:	neg    DWORD PTR [ecx+0x65]
  41738f:	xchg   ecx,eax
  417390:	mov    eax,ds:0x2f161cde
  417395:	or     al,BYTE PTR [esi+0x7]
  417398:	pop    es
  417399:	jne    0x41734f
  41739b:	mov    BYTE PTR [eax+0x2f],dh
  41739e:	mov    eax,ds:0xa8e0b580
  4173a3:	(bad)  
  4173a4:	into   
  4173a5:	ds call 0xe8b629ba
  4173ab:	mov    BYTE PTR [edx],al
  4173ad:	outs   dx,BYTE PTR ds:[esi]
  4173ae:	or     esp,DWORD PTR [edx-0xfdbe56a]
  4173b4:	nop
  4173b5:	mov    ebp,0x433d1c95
  4173ba:	sbb    al,0x42
  4173bc:	xor    ebx,DWORD PTR [edi]
  4173be:	sbb    eax,0xfff789e8
  4173c3:	cmp    eax,0x50528e41
  4173c8:	jns    0x417393
  4173ca:	sbb    BYTE PTR [edi+0x2ac7d353],bh
  4173d0:	fs scas eax,DWORD PTR es:[edi]
  4173d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173d3:	push   ss
  4173d4:	or     al,0x4c
  4173d6:	dec    esi
  4173d7:	cdq    
  4173d8:	sub    eax,0x96b114a0
  4173dd:	fisub  WORD PTR [eax-0x1]
  4173e0:	inc    eax
  4173e1:	mov    dh,0x30
  4173e3:	daa    
  4173e4:	mov    esp,0xbfbc4be7
  4173e9:	outs   dx,BYTE PTR ds:[esi]
  4173ea:	lods   eax,DWORD PTR ds:[esi]
  4173eb:	push   ecx
  4173ec:	ins    BYTE PTR es:[edi],dx
  4173ed:	rol    BYTE PTR [edx-0x741ab143],cl
  4173f3:	leave  
  4173f4:	jbe    0x4173d0
  4173f6:	fisttp WORD PTR [edx+0x3c]
  4173f9:	pop    ecx
  4173fa:	inc    eax
  4173fb:	push   ebp
  4173fc:	mov    edi,0x2ed613f0
  417401:	pushf  
  417402:	add    al,0xc2
  417404:	clc    
  417405:	push   0x128ee751
  41740a:	push   eax
  41740b:	inc    edi
  41740c:	add    ebp,DWORD PTR ds:0x7f298382
  417412:	pop    ecx
  417413:	mov    WORD PTR [ebp+0x17f04c99],?
  417419:	pop    ebx
  41741a:	sar    DWORD PTR [edx],cl
  41741c:	push   esp
  41741d:	arpl   WORD PTR [ecx+0x1d],cx
  417420:	cdq    
  417421:	lahf   
  417422:	js     0x4173a5
  417424:	mov    ecx,0xf6acc86b
  417429:	enter  0x791c,0xd1
  41742d:	mov    ebp,0x715ac85e
  417432:	in     al,0xde
  417434:	pop    ebp
  417435:	(bad)  
  417437:	ret    0xbc0f
  41743a:	jnp    0x41740c
  41743c:	and    al,0x6c
  41743e:	popa   
  41743f:	mov    ds:0x140d6846,eax
  417444:	push   edi
  417445:	popf   
  417446:	mov    DWORD PTR [ebx+eax*1-0x4a8c4d9],edi
  41744d:	in     eax,dx
  41744e:	adc    dh,dh
  417450:	sbb    DWORD PTR [edi-0x1a],eax
  417453:	ins    BYTE PTR es:[edi],dx
  417454:	mov    al,0xcf
  417456:	fchs   
  417458:	cmp    al,0xfa
  41745a:	fs dec edx
  41745c:	shr    BYTE PTR [edi],cl
  41745e:	arpl   WORD PTR [ebx+0x55],di
  417461:	sahf   
  417462:	fst    QWORD PTR [ecx+edx*2]
  417465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417466:	sub    DWORD PTR [edi],ecx
  417468:	dec    eax
  417469:	in     eax,dx
  41746a:	sbb    al,dl
  41746c:	jnp    0x41740c
  41746e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41746f:	popa   
  417470:	jle    0x41741e
  417472:	pop    esp
  417473:	push   esi
  417474:	lods   al,BYTE PTR ds:[esi]
  417475:	rcl    BYTE PTR [esi],1
  417477:	jmp    0x4174ab
  417479:	sub    BYTE PTR [edx-0x4d],0xca
  41747d:	inc    esi
  41747e:	ss dec esi
  417480:	in     al,dx
  417481:	cld    
  417482:	lods   al,BYTE PTR ds:[si]
  417484:	pop    esp
  417485:	test   al,0x6f
  417487:	test   ebx,0xa7914e6c
  41748d:	mov    al,ds:0x73144b1e
  417492:	or     eax,0xa93d4114
  417497:	jnp    0x4174d8
  417499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41749a:	js     0x417481
  41749c:	push   edi
  41749d:	sub    edi,DWORD PTR [eax+0x6ee064c6]
  4174a3:	idiv   esi
  4174a5:	sub    al,0x21
  4174a7:	aaa    
  4174a8:	mov    eax,ds:0xd7d78082
  4174ad:	push   edi
  4174ae:	loopne 0x4174d1
  4174b0:	mov    bl,0x7d
  4174b2:	dec    esi
  4174b3:	mov    edx,0x541e0d2
  4174b8:	in     al,dx
  4174b9:	adc    al,0x3e
  4174bb:	popa   
  4174bc:	pop    eax
  4174bd:	dec    eax
  4174be:	shl    BYTE PTR [eax+0x3e349d13],1
  4174c4:	add    eax,0xb8407cc2
  4174c9:	ret    0x55b0
  4174cc:	jo     0x417464
  4174ce:	add    eax,0xf8add8e6
  4174d3:	jp     0x4174ac
  4174d5:	push   edi
  4174d6:	mov    dl,0xf2
  4174d8:	fild   WORD PTR [edi-0x62]
  4174db:	xor    DWORD PTR [edx+0x7961664c],edi
  4174e1:	out    0x92,al
  4174e3:	mov    edx,DWORD PTR [ebp-0x5c]
  4174e6:	cli    
  4174e7:	test   DWORD PTR [ebx+eax*4+0x57],ebp
  4174eb:	xchg   DWORD PTR [edx+0x50],edx
  4174ee:	(bad)
  4174f2:	fld    DWORD PTR [esi+0x6]
  4174f5:	sub    BYTE PTR [ecx-0xe],dl
  4174f8:	popa   
  4174f9:	mov    ecx,0x298fd993
  4174fe:	xor    eax,0x12cb79bf
  417503:	jle    0x417564
  417505:	sbb    al,0x4a
  417507:	stos   DWORD PTR es:[edi],eax
  417508:	dec    edi
  417509:	jnp    0x417569
  41750b:	mov    ebx,0x1379ed68
  417510:	(bad)  
  417511:	and    al,0x2b
  417513:	mov    dh,0x5
  417515:	mov    WORD PTR [eax+0x4c408b65],gs
  41751b:	rol    BYTE PTR [edx+0x5a],1
  41751e:	xchg   ecx,eax
  41751f:	retf   
  417520:	xchg   BYTE PTR [ecx],bh
  417522:	imul   edx,DWORD PTR [edi],0x70
  417525:	inc    ebp
  417526:	add    DWORD PTR [edi+0x4409f4a2],ebx
  41752c:	xor    ebp,DWORD PTR [esp+edi*1-0x74d583da]
  417533:	mov    ebx,esp
  417535:	push   ds
  417536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417537:	cld    
  417538:	frstor [edx]
  41753a:	xchg   BYTE PTR [ebx-0x21f4d56c],cl
  417540:	ret    
  417541:	pop    DWORD PTR [eax+edx*1+0x5cf39e1b]
  417548:	mov    ds:0x3510c55d,eax
  41754d:	scas   al,BYTE PTR es:[edi]
  41754e:	and    al,0xff
  417550:	push   esi
  417551:	(bad)  
  417552:	push   0xffffffde
  417554:	inc    edx
  417555:	xchg   ebp,eax
  417556:	daa    
  417557:	pop    ss
  417558:	inc    edi
  417559:	aad    0x61
  41755b:	out    0x2f,eax
  41755d:	jp     0x4175a5
  41755f:	mov    es,WORD PTR [ebp-0x1f]
  417562:	and    BYTE PTR [ebx+0x9],0x64
  417566:	xlat   BYTE PTR ds:[ebx]
  417567:	sub    DWORD PTR [eax+esi*4],0xffffffc1
  41756b:	xchg   esi,eax
  41756c:	inc    edx
  41756d:	push   0x2e4c557c
  417572:	jae    0x4175aa
  417574:	int3   
  417575:	or     al,0x18
  417577:	ret    
  417578:	arpl   WORD PTR [ebp+0x2b],ax
  41757b:	scas   eax,DWORD PTR es:[edi]
  41757c:	test   eax,0x8092ce04
  417581:	mov    dh,BYTE PTR [eax]
  417583:	mov    dl,0x68
  417585:	cmp    BYTE PTR [ebx+ebp*2+0x7af3aca7],al
  41758c:	sub    BYTE PTR [ecx+eax*4],al
  41758f:	fwait
  417590:	jmp    0x417543
  417592:	or     eax,DWORD PTR [ebx-0x33153768]
  417598:	mov    es,WORD PTR [ebp-0x5d]
  41759b:	pop    ecx
  41759c:	lock mov ch,0x3b
  41759f:	push   esi
  4175a0:	cmp    al,0x4
  4175a2:	std    
  4175a3:	out    0x8b,al
  4175a5:	aas    
  4175a6:	(bad)  
  4175a7:	mov    esp,eax
  4175a9:	fmulp  st(2),st
  4175ab:	loop   0x4175a7
  4175ad:	mov    ecx,0x65df1182
  4175b3:	out    dx,eax
  4175b4:	mov    edx,0xe98a7d30
  4175b9:	repz adc al,0x75
  4175bc:	hlt    
  4175bd:	sub    ebx,DWORD PTR [esi+0x35736263]
  4175c3:	push   eax
  4175c4:	push   edi
  4175c5:	(bad)  
  4175c6:	sbb    dh,BYTE PTR [ecx]
  4175c8:	lds    edi,FWORD PTR [ebx-0x6d]
  4175cb:	(bad)  
  4175cc:	in     eax,dx
  4175cd:	ja     0x4175fd
  4175cf:	mov    WORD PTR [edi+0x79],ds
  4175d2:	mov    ch,0xae
  4175d4:	and    al,0xb0
  4175d6:	pop    ds
  4175d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175d8:	dec    BYTE PTR [edx-0x24]
  4175db:	inc    BYTE PTR [ebx+0x7c088303]
  4175e1:	sahf   
  4175e2:	hlt    
  4175e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e4:	pop    edx
  4175e5:	push   esp
  4175e6:	aas    
  4175e7:	pop    edi
  4175e8:	ss fwait
  4175ea:	icebp  
  4175eb:	pop    esi
  4175ec:	and    BYTE PTR [edx+0xcb45452],dh
  4175f2:	fld    QWORD PTR [eax+0x1]
  4175f5:	mov    ds:0xffaff5c9,al
  4175fa:	popf   
  4175fb:	(bad)  
  4175fc:	fdivr  QWORD PTR [esi-0x1b7b86]
  417602:	dec    edx
  417603:	xor    eax,0xd541e7e3
  417608:	cmp    DWORD PTR [esi-0x55],edx
  41760b:	or     eax,0x32648ff
  417610:	push   eax
  417611:	mov    BYTE PTR [ecx-0x48],dh
  417614:	stos   BYTE PTR es:[edi],al
  417615:	(bad)  [ecx-0x20906aeb]
  41761b:	cdq    
  41761c:	test   BYTE PTR [ebx],dh
  41761e:	jbe    0x4175aa
  417620:	fdiv   QWORD PTR [edx]
  417622:	jmp    0x417699
  417624:	cmp    bl,BYTE PTR [edi-0x75]
  417627:	imul   esp,ecx,0xbdd770c
  41762d:	stc    
  41762e:	mov    bl,0x2d
  417630:	mov    bl,0x97
  417632:	cmp    cl,BYTE PTR [edx-0x2a]
  417635:	pop    ds
  417636:	hlt    
  417637:	mov    cs,WORD PTR [eax+eiz*1-0x3ff05084]
  41763e:	dec    ecx
  41763f:	and    esp,DWORD PTR [edi+ebp*8+0x1e]
  417643:	jno    0x417671
  417645:	loopne 0x417607
  417647:	test   DWORD PTR [eax+0x274a751c],eax
  41764d:	mov    ebp,DWORD PTR [ebx]
  41764f:	retf   0xad73
  417652:	mov    esp,0xfdb4198d
  417657:	mov    dh,0xc3
  417659:	outs   dx,DWORD PTR ds:[esi]
  41765a:	xor    DWORD PTR [edi+edi*8+0x54a37df4],esi
  417661:	cli    
  417662:	test   eax,0xf642e3f6
  417667:	fwait
  417668:	mov    edi,0x6016bf54
  41766d:	aam    0x60
  41766f:	call   0xd0ab:0x13b4c0e0
  417676:	mov    ebp,0x92b3915d
  41767b:	adc    DWORD PTR ds:0x40f13ff6,ecx
  417681:	out    dx,eax
  417682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417683:	push   eax
  417684:	inc    edx
  417685:	mov    ss:0x863a4fbd,al
  41768b:	push   cs
  41768c:	mov    dh,0x67
  41768e:	test   eax,0x543a5637
  417693:	inc    edi
  417694:	ins    BYTE PTR es:[edi],dx
  417695:	loop   0x417625
  417697:	adc    al,BYTE PTR [ebx]
  417699:	adc    al,0x24
  41769b:	pushf  
  41769c:	pushf  
  41769d:	je     0x4176ae
  41769f:	not    BYTE PTR [edi-0xe]
  4176a2:	mov    DWORD PTR [edi+0x20],esi
  4176a5:	xor    al,BYTE PTR [eax-0x7d]
  4176a8:	or     al,0x3a
  4176aa:	jecxz  0x4176ee
  4176ac:	mov    BYTE PTR [ebx],ch
  4176ae:	in     al,0xf0
  4176b0:	dec    ebx
  4176b1:	stos   BYTE PTR es:[edi],al
  4176b2:	mov    eax,ds:0x536edd7d
  4176b7:	xchg   edi,eax
  4176b8:	sbb    eax,0x676b538e
  4176bd:	pop    eax
  4176be:	ja     0x41771a
  4176c0:	in     eax,dx
  4176c1:	push   edx
  4176c2:	js     0x4176a8
  4176c4:	test   eax,0xc6d11e30
  4176c9:	js     0x41767c
  4176cb:	and    al,0x2e
  4176cd:	pop    ds
  4176ce:	push   esi
  4176cf:	outs   dx,BYTE PTR ds:[esi]
  4176d0:	int3   
  4176d1:	call   0xc552:0x78cd9383
  4176d8:	mov    esp,?
  4176da:	jg     0x417690
  4176dc:	pusha  
  4176dd:	imul   esi,ecx,0xf
  4176e0:	sub    eax,0x753c2d98
  4176e5:	mov    dl,0x2d
  4176e7:	ins    DWORD PTR es:[edi],dx
  4176e8:	fldenv [ebp+0x4e]
  4176eb:	mov    esp,0xdd9e213e
  4176f0:	addr16 sbb eax,0x4f8a9b1e
  4176f6:	mov    ds:0x41eb2921,al
  4176fb:	push   edi
  4176fc:	mov    edx,0xd60e6d0b
  417701:	sub    BYTE PTR [esi+esi*8+0x1b56efbb],al
  417708:	(bad)  [ecx-0x695d1276]
  41770e:	ret    
  41770f:	xor    DWORD PTR [esi+0xb360bfa],edi
  417715:	jo     0x417726
  417717:	(bad)
  41771a:	cmp    eax,0x35c154a6
  41771f:	mov    ch,0xe0
  417721:	push   ebp
  417722:	add    eax,0x78c4c821
  417727:	icebp  
  417728:	cmp    BYTE PTR ds:0x9a2c56a4,ch
  41772e:	adc    esi,DWORD PTR [edi-0x7696e0d7]
  417734:	inc    ebp
  417735:	ret    
  417736:	loopne 0x4176dc
  417738:	dec    esp
  417739:	pushf  
  41773a:	aaa    
  41773b:	inc    esi
  41773c:	dec    ecx
  41773d:	inc    eax
  41773e:	loopne 0x417775
  417740:	jmp    0x41772a
  417742:	aad    0x4c
  417744:	cwde   
  417745:	xchg   edi,eax
  417746:	cld    
  417747:	add    esi,DWORD PTR [edi]
  417749:	(bad)  
  41774a:	(bad)  
  41774b:	ficomp WORD PTR [eax]
  41774d:	fiadd  WORD PTR [ecx+0x4f]
  417750:	dec    ebx
  417751:	dec    eax
  417752:	jmp    0xbac074d5
  417757:	fist   DWORD PTR [ebp+0x53571a05]
  41775d:	inc    esp
  41775e:	xchg   ebp,eax
  41775f:	inc    ebx
  417760:	inc    ebx
  417761:	test   cl,bl
  417763:	cli    
  417764:	xchg   BYTE PTR [edx-0x68b11c8f],cl
  41776a:	jns    0x4177a2
  41776c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41776d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41776e:	mov    ebp,0xaae7626e
  417773:	inc    bx
  417775:	ret    
  417776:	add    bl,0x65
  417779:	int    0x14
  41777b:	cmp    al,0x91
  41777d:	xchg   esp,eax
  41777e:	xchg   ecx,eax
  41777f:	retf   0xf08d
  417782:	pop    edx
  417783:	arpl   WORD PTR [edx],bp
  417785:	in     al,dx
  417786:	or     al,BYTE PTR [esp+0x3a10585b]
  41778d:	leave  
  41778e:	pop    esp
  41778f:	xchg   edi,eax
  417790:	fsub   DWORD PTR [ebp+0x763584d9]
  417796:	sbb    BYTE PTR ds:0xa91e095d,dh
  41779c:	(bad)  
  41779d:	loopne 0x417763
  41779f:	add    eax,0xeaf66ca1
  4177a4:	mov    fs,WORD PTR [esi+0xc63f5ba]
  4177aa:	cmp    al,0x69
  4177ac:	push   ebp
  4177ad:	adc    eax,0xcd1b236d
  4177b2:	shl    DWORD PTR [esp+ecx*4+0x1216852d],0x1c
  4177ba:	loop   0x4177a5
  4177bc:	sub    dh,BYTE PTR [edx-0x3d]
  4177bf:	(bad)  
  4177c0:	jns    0x4177d3
  4177c2:	push   0x76
  4177c4:	lahf   
  4177c5:	dec    edx
  4177c6:	push   DWORD PTR [ecx]
  4177c8:	or     eax,0x66574bb8
  4177cd:	loope  0x4177d1
  4177cf:	sar    BYTE PTR [eax+0x45],0x68
  4177d3:	inc    edx
  4177d4:	pop    ecx
  4177d5:	scas   eax,DWORD PTR es:[edi]
  4177d6:	push   es
  4177d7:	dec    ebp
  4177d8:	retf   
  4177d9:	inc    edi
  4177da:	add    DWORD PTR [ebx+0x10],0xbac0f481
  4177e1:	push   cs
  4177e2:	xor    esp,DWORD PTR [ebp+0x71]
  4177e5:	jne    0x4177c7
  4177e7:	pop    eax
  4177e8:	and    al,0xa1
  4177ea:	sahf   
  4177eb:	(bad)  
  4177ed:	test   eax,0x51891b83
  4177f2:	inc    edx
  4177f3:	xchg   ah,al
  4177f5:	xchg   esi,eax
  4177f6:	xlat   BYTE PTR ds:[ebx]
  4177f7:	ret    0x8fcc
  4177fa:	xor    dh,ch
  4177fc:	sbb    BYTE PTR [eax-0xca4e6fc],cl
  417802:	mov    esi,0x9f2b1eca
  417807:	xchg   DWORD PTR [edx-0x1dda032],ebp
  41780d:	mov    esi,0xc0a32624
  417812:	xor    dl,0xd7
  417815:	pushf  
  417816:	scas   eax,DWORD PTR es:[edi]
  417817:	and    al,0xfd
  417819:	mov    edx,DWORD PTR [ecx+0x5e]
  41781c:	adc    ah,BYTE PTR [esi]
  41781e:	cmp    bl,BYTE PTR [edi+0x6]
  417821:	push   edi
  417822:	pop    ecx
  417823:	mov    cl,0x74
  417825:	test   DWORD PTR [edx],0x2a57a0c9
  41782b:	mov    cl,0x4b
  41782d:	cwde   
  41782e:	jle    0x41785e
  417830:	and    edx,ebx
  417832:	mov    dl,0xfe
  417834:	outs   dx,DWORD PTR ds:[esi]
  417835:	pop    edi
  417836:	retf   0x3841
  417839:	mov    al,0x46
  41783b:	mov    eax,0x3df60562
  417840:	dec    eax
  417841:	icebp  
  417842:	mov    ecx,0xe3760080
  417847:	mov    bl,dh
  417849:	or     eax,0x99a4c57f
  41784e:	inc    ebx
  41784f:	mov    cl,0xfb
  417851:	ret    
  417852:	das    
  417853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417854:	retf   0x8e4
  417857:	xor    eax,0xc0fe416f
  41785c:	in     al,0xb4
  41785e:	lds    edx,FWORD PTR [eax]
  417860:	adc    DWORD PTR [edi-0x2a],edx
  417863:	jae    0x41783f
  417865:	loope  0x417838
  417867:	jb     0x41783e
  417869:	xchg   BYTE PTR [edx],bl
  41786b:	adc    eax,0x94043146
  417870:	in     eax,dx
  417871:	scas   eax,DWORD PTR es:[edi]
  417872:	inc    esi
  417873:	dec    edx
  417874:	cmc    
  417875:	lea    ecx,[edx+edx*4+0x59]
  417879:	nop
  41787a:	cld    
  41787b:	jecxz  0x4178dd
  41787d:	inc    ebp
  41787e:	mov    WORD PTR [ebp+0x2a],gs
  417881:	mov    edi,0x9225f250
  417886:	push   edx
  417887:	xchg   DWORD PTR [ecx-0x58144792],ebx
  41788d:	sbb    eax,0x5d48f975
  417892:	mov    edi,0xdf2dad84
  417897:	mov    BYTE PTR [eax-0x1b],cl
  41789a:	pusha  
  41789b:	je     0x417820
  41789d:	(bad)  [ebp-0xf]
  4178a0:	jg     0x4178e8
  4178a2:	arpl   WORD PTR [edx],bx
  4178a4:	mov    edi,0xb45cd838
  4178a9:	jae    0x417885
  4178ab:	mov    edx,ds
  4178ad:	pop    ebp
  4178ae:	push   ds
  4178af:	mov    DWORD PTR [ecx+eax*8-0x6bfc75fd],0x23b1dc9c
  4178ba:	sti    
  4178bb:	mov    eax,DWORD PTR [eax+0x7c]
  4178be:	and    bh,al
  4178c0:	xchg   ebp,eax
  4178c1:	jl     0x4178b6
  4178c3:	inc    esp
  4178c4:	or     al,0x68
  4178c6:	mov    edx,0x6a958633
  4178cb:	jo     0x417850
  4178cd:	rcr    edi,1
  4178cf:	xchg   edx,eax
  4178d0:	data16 jle 0x4178de
  4178d3:	clc    
  4178d4:	lds    ecx,FWORD PTR [ecx+0x27772e43]
  4178da:	enter  0x53f4,0xc2
  4178de:	xchg   esp,eax
  4178df:	xchg   edx,eax
  4178e0:	fcom   QWORD PTR [edi]
  4178e2:	repz retf 0x4ba6
  4178e6:	push   ss
  4178e7:	lock pop ebp
  4178e9:	pop    ebp
  4178ea:	inc    ebx
  4178eb:	pop    es
  4178ec:	lods   eax,DWORD PTR ds:[esi]
  4178ed:	jle    0x4178dc
  4178ef:	dec    ebx
  4178f0:	push   ss
  4178f1:	cmp    bh,BYTE PTR [edx+ebx*8+0x755a98d8]
  4178f8:	sub    al,0x3e
  4178fa:	add    edi,esp
  4178fc:	dec    ecx
  4178fd:	shl    DWORD PTR ds:0xfd19faf9,cl
  417903:	idiv   DWORD PTR [esi]
  417905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417906:	in     eax,dx
  417907:	es inc ecx
  417909:	retf   0x1610
  41790c:	jnp    0x41792d
  41790e:	lahf   
  41790f:	scas   al,BYTE PTR es:[edi]
  417910:	in     eax,dx
  417911:	adc    al,0x92
  417913:	mov    dh,0x69
  417915:	lea    edx,[eax]
  417917:	xchg   edx,eax
  417918:	es loop 0x417959
  41791b:	mov    ebp,0x87f6ec9d
  417920:	cmp    al,0x9a
  417922:	pusha  
  417923:	or     al,0x65
  417925:	push   esp
  417926:	cs sti 
  417928:	sbb    DWORD PTR [ecx+edx*8],esp
  41792b:	popf   
  41792c:	jns    0x417997
  41792e:	dec    ecx
  41792f:	xor    bl,BYTE PTR [edi-0x56]
  417932:	and    al,0xd
  417934:	jle    0x417964
  417936:	ret    0xcd0e
  417939:	and    eax,0xeca22459
  41793e:	push   es
  41793f:	dec    esi
  417940:	test   ch,ch
  417942:	adc    eax,0x6393a975
  417947:	and    cl,bh
  417949:	sbb    ecx,DWORD PTR [eax]
  41794b:	loop   0x417926
  41794d:	mov    BYTE PTR ds:0xba9372d1,bh
  417953:	es out dx,eax
  417955:	cmp    esi,DWORD PTR [edx+0x30]
  417958:	mul    BYTE PTR [esi]
  41795a:	pop    edi
  41795b:	repnz dec eax
  41795d:	jmp    0x322b:0x3b077afa
  417964:	adc    eax,0x877aadb9
  417969:	shl    DWORD PTR [ebp+0x2e],0xb5
  41796d:	das    
  41796e:	mov    ecx,0xfca44de8
  417973:	aas    
  417974:	or     BYTE PTR [ebp+0x14],al
  417977:	xchg   esp,eax
  417978:	or     al,0xec
  41797a:	xchg   BYTE PTR [edx],dl
  41797c:	sbb    dh,0xb
  41797f:	dec    esi
  417980:	mov    ds:0x864777b5,al
  417985:	repz cmp DWORD PTR [eax+eiz*2+0x16],ecx
  41798a:	mov    edx,0xcb128755
  41798f:	test   DWORD PTR [edx+0x73],ecx
  417992:	add    al,0xfa
  417994:	jle    0x4179f6
  417996:	into   
  417997:	jo     0x417987
  417999:	stos   DWORD PTR es:[edi],eax
  41799a:	push   esp
  41799b:	and    BYTE PTR [ebx+0x5d],bl
  41799e:	xchg   DWORD PTR [edi+0x552c988d],edi
  4179a4:	in     eax,0xac
  4179a6:	mov    ecx,0x1b1fff11
  4179ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ac:	enter  0xd462,0x91
  4179b0:	or     bl,BYTE PTR [ebp+0x7ae35e84]
  4179b6:	add    BYTE PTR [eax+0x37b24e85],bl
  4179bc:	xor    ebp,eax
  4179be:	popa   
  4179bf:	call   0xfe4c:0x45f9ec63
  4179c6:	sbb    al,0x5d
  4179c8:	mov    cl,0xd8
  4179ca:	xchg   ebp,eax
  4179cb:	or     bh,BYTE PTR [edx+0x4a]
  4179ce:	add    edx,esp
  4179d0:	pop    esi
  4179d1:	mov    edx,0x643e3319
  4179d6:	sbb    BYTE PTR [ecx+0x36],ch
  4179d9:	test   edi,esp
  4179db:	mov    edx,0xef4de23f
  4179e0:	jns    0x4179c8
  4179e2:	xor    al,0xf8
  4179e4:	push   ds
  4179e5:	das    
  4179e6:	xor    eax,0x14ba7612
  4179eb:	mov    ah,0xaf
  4179ed:	mov    bl,0x8f
  4179ef:	das    
  4179f0:	dec    eax
  4179f1:	test   eax,0x98f85c96
  4179f6:	mov    ebx,0xaf8eaf21
  4179fb:	or     cl,BYTE PTR [esi]
  4179fd:	clc    
  4179fe:	add    bl,ah
  417a00:	hlt    
  417a01:	dec    esi
  417a02:	lods   al,BYTE PTR ds:[esi]
  417a03:	popf   
  417a04:	mov    ebx,edx
  417a06:	aam    0x47
  417a08:	js     0x4179fb
  417a0a:	stc    
  417a0b:	pop    ss
  417a0c:	lea    edi,[eax+esi*1]
  417a0f:	xor    al,0xec
  417a11:	int3   
  417a12:	sub    BYTE PTR [edx+0x6d524030],ch
  417a18:	push   ecx
  417a19:	pop    ss
  417a1a:	pop    es
  417a1b:	sbb    BYTE PTR [ecx],dl
  417a1d:	mov    dh,0xb2
  417a1f:	aas    
  417a20:	cdq    
  417a21:	fs xor al,ch
  417a24:	pop    ebp
  417a25:	sbb    DWORD PTR [eax+eiz*8-0x5d],ecx
  417a29:	pop    esp
  417a2a:	push   ecx
  417a2b:	fs mov esp,0xc9d06187
  417a31:	in     al,dx
  417a32:	cmp    al,0x6d
  417a34:	sar    BYTE PTR [edx-0x62],cl
  417a37:	jbe    0x4179cc
  417a39:	xchg   ecx,eax
  417a3a:	loop   0x4179ff
  417a3c:	inc    ebp
  417a3d:	out    0xa6,eax
  417a3f:	or     eax,0xad4b6ea3
  417a44:	and    DWORD PTR [ebp+0x340b3b71],0x8db69e10
  417a4e:	sahf   
  417a4f:	sub    eax,0x3f1a1139
  417a54:	xor    dl,BYTE PTR [ebx-0x46]
  417a57:	pop    edx
  417a58:	push   esi
  417a59:	je     0x417a9f
  417a5b:	jmp    0x4179f4
  417a5d:	in     eax,dx
  417a5e:	loop   0x417a3e
  417a60:	data16 mov WORD PTR [edi+0x6f],cs
  417a64:	push   es
  417a65:	into   
  417a66:	rcr    DWORD PTR [esi-0x67],cl
  417a69:	ret    
  417a6a:	pminsw mm1,QWORD PTR [edx]
  417a6d:	adc    bh,dh
  417a6f:	shl    DWORD PTR [edx],1
  417a71:	dec    esi
  417a72:	push   cs
  417a73:	push   ds
  417a74:	inc    eax
  417a75:	fs test eax,0xd8d58449
  417a7b:	inc    esi
  417a7c:	lahf   
  417a7d:	fisttp QWORD PTR [ecx+eiz*8-0x619cd922]
  417a84:	add    eax,0x9f431ca7
  417a89:	pop    eax
  417a8a:	repz and esp,eax
  417a8d:	xchg   edi,eax
  417a8e:	add    al,0xd1
  417a90:	into   
  417a91:	cmp    al,0x1d
  417a93:	jmp    0x417a94
  417a95:	mov    cl,cl
  417a97:	adc    al,0x1b
  417a99:	inc    edi
  417a9a:	(bad)  
  417a9b:	cmp    esi,DWORD PTR [eax]
  417a9d:	fld    TBYTE PTR [esi]
  417a9f:	dec    ecx
  417aa0:	push   ebp
  417aa1:	push   DWORD PTR [eax-0xe]
  417aa4:	dec    ebp
  417aa5:	cmc    
  417aa6:	ret    0xf49f
  417aa9:	pop    ecx
  417aaa:	push   esi
  417aab:	aam    0xb0
  417aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aae:	std    
  417aaf:	test   eax,0xeffa9266
  417ab4:	sub    edi,edx
  417ab6:	inc    edi
  417ab7:	sti    
  417ab8:	cs dec esp
  417aba:	cmc    
  417abb:	xchg   ebx,eax
  417abc:	jl     0x417a86
  417abe:	sbb    al,0x6d
  417ac0:	jnp    0x417ae5
  417ac2:	cmp    al,0x2b
  417ac4:	mov    eax,0x7e35642e
  417ac9:	jle    0x417a98
  417acb:	lds    ebp,FWORD PTR [ebp+0x2a]
  417ace:	cmp    al,BYTE PTR [edx+ebx*8+0x18]
  417ad2:	int3   
  417ad3:	jecxz  0x417b21
  417ad5:	into   
  417ad6:	jge    0x417a5f
  417ad8:	cmp    eax,0xf9a6c4fe
  417add:	pop    ss
  417ade:	imul   esp,DWORD PTR [ecx-0x6d23a5aa],0x48
  417ae5:	add    al,0x8e
  417ae7:	push   ebp
  417ae8:	faddp  st(4),st
  417aea:	mov    ecx,0x3637eac8
  417aef:	jg     0x417a9f
  417af1:	cmp    BYTE PTR [eax+ebx*4],dl
  417af4:	or     al,0xf2
  417af6:	jo     0x417b16
  417af8:	clc    
  417af9:	xor    eax,0x5d99633b
  417afe:	pop    eax
  417aff:	jns    0x417b74
  417b01:	mov    esi,0x62e4f12a
  417b06:	test   al,0xf3
  417b08:	mov    edi,0x876a57ee
  417b0d:	ja     0x417b84
  417b0f:	sub    esi,DWORD PTR [ecx+0x41]
  417b12:	push   es
  417b13:	ins    DWORD PTR es:[edi],dx
  417b14:	fbstp  TBYTE PTR [edi+0x5b]
  417b17:	test   eax,0xba26a04b
  417b1c:	sub    al,0xbb
  417b1e:	repnz add eax,0x9314c007
  417b24:	ins    BYTE PTR es:[edi],dx
  417b25:	test   eax,0x94be4e0a
  417b2a:	jne    0x417ab3
  417b2c:	sahf   
  417b2d:	push   ds
  417b2e:	outs   dx,DWORD PTR ds:[esi]
  417b2f:	mov    bh,BYTE PTR [edi-0x5e]
  417b32:	push   eax
  417b33:	xchg   BYTE PTR [ebx],al
  417b35:	pop    eax
  417b36:	out    dx,al
  417b37:	call   0xd2d67ba4
  417b3c:	pushf  
  417b3d:	xchg   ecx,eax
  417b3e:	push   cs
  417b3f:	scas   eax,DWORD PTR es:[di]
  417b41:	in     eax,dx
  417b42:	addr16 dec edx
  417b44:	in     al,dx
  417b45:	push   esi
  417b46:	outs   dx,BYTE PTR ds:[esi]
  417b47:	nop
  417b48:	gs aaa 
  417b4a:	hlt    
  417b4b:	sbb    DWORD PTR [eax-0x5f1eda0a],edx
  417b51:	inc    ebx
  417b52:	popf   
  417b53:	in     al,0x2f
  417b55:	aas    
  417b56:	push   0xffffffff
  417b58:	mov    al,ds:0x7f28186b
  417b5d:	jp     0x417b9d
  417b5f:	loopne 0x417b64
  417b61:	mov    dh,0x68
  417b63:	inc    edi
  417b64:	mov    ds:0x69ad2314,al
  417b69:	xlat   BYTE PTR ds:[ebx]
  417b6a:	mov    al,0xc0
  417b6c:	popa   
  417b6d:	adc    BYTE PTR [ecx+0x2cd4a1d1],ch
  417b73:	and    eax,0x88766a30
  417b78:	jge    0x417b90
  417b7a:	sub    ebp,esp
  417b7c:	mov    edi,0xd594a75e
  417b81:	and    DWORD PTR [esi],eax
  417b83:	pop    esi
  417b84:	sub    DWORD PTR [edx+0x7b4ea1d],0xffffffcf
  417b8b:	imul   ebp,DWORD PTR [ecx],0xffffffb5
  417b8e:	pop    ss
  417b8f:	xor    BYTE PTR [eax+0x5ddfa1bd],al
  417b95:	fdiv   st,st(1)
  417b97:	mov    ecx,0x7786228b
  417b9c:	xor    al,0x96
  417b9e:	pushf  
  417b9f:	fwait
  417ba0:	addr16 mov ch,0xa0
  417ba3:	and    eax,0xb9ba016b
  417ba8:	pushf  
  417ba9:	xchg   esp,eax
  417baa:	fdiv   QWORD PTR [esi-0x6e19869f]
  417bb0:	ins    DWORD PTR es:[edi],dx
  417bb1:	pushf  
  417bb2:	pop    ebp
  417bb3:	xor    esp,DWORD PTR [ebx+0x42166ee5]
  417bb9:	mov    cl,0xa4
  417bbb:	shl    dh,cl
  417bbd:	scas   eax,DWORD PTR es:[edi]
  417bbe:	sub    esi,DWORD PTR [ebx]
  417bc0:	xchg   BYTE PTR [ebx],bl
  417bc2:	aas    
  417bc3:	lods   eax,DWORD PTR ds:[esi]
  417bc4:	and    BYTE PTR ds:0xe7d9cc12,dh
  417bca:	mov    al,ds:0xd8f7a2e8
  417bcf:	push   eax
  417bd0:	inc    DWORD PTR [esi+0x79]
  417bd3:	jne    0x417bd5
  417bd5:	mov    esi,0x83842b5
  417bda:	sub    eax,0x5925fd41
  417bdf:	xor    DWORD PTR [edx],esi
  417be1:	scas   eax,DWORD PTR es:[edi]
  417be2:	psubusb mm6,mm5
  417be5:	lods   al,BYTE PTR ds:[esi]
  417be6:	sbb    al,0x3e
  417be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be9:	mov    bh,0x5f
  417beb:	and    ah,BYTE PTR [ebx-0x8261cf9]
  417bf1:	xchg   esp,eax
  417bf2:	pusha  
  417bf3:	and    DWORD PTR [ebx],0x95e78038
  417bf9:	mov    ebp,DWORD PTR [ecx+0x20]
  417bfc:	mov    WORD PTR ss:[esi-0x7a],fs
  417c00:	cdq    
  417c01:	in     al,dx
  417c02:	mov    dl,0xbd
  417c04:	and    cl,BYTE PTR [eax+0xb]
  417c07:	sar    DWORD PTR [edx+edi*8+0x591f8545],cl
  417c0e:	xchg   edi,eax
  417c0f:	inc    ebx
  417c10:	or     eax,0x50893fd1
  417c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c16:	out    dx,al
  417c17:	std    
  417c18:	mov    ?,WORD PTR gs:[ebp+0x70254ab7]
  417c1f:	nop
  417c20:	sub    al,0x46
  417c22:	dec    ecx
  417c23:	outs   dx,BYTE PTR ds:[esi]
  417c24:	or     DWORD PTR [edi-0xc],ecx
  417c27:	push   cs
  417c28:	das    
  417c29:	jl     0x417c8d
  417c2b:	sahf   
  417c2c:	adc    DWORD PTR [ecx+ebx*2+0xb95ede0],edi
  417c33:	jecxz  0x417c70
  417c35:	jmp    0xa19c62fe
  417c3a:	popf   
  417c3b:	dec    eax
  417c3c:	jae    0x417cac
  417c3e:	sub    eax,0xf01c1be7
  417c43:	mov    ecx,0xe65a07f1
  417c48:	sub    BYTE PTR [ebx+0x7c285fd7],cl
  417c4e:	jae    0x417bee
  417c50:	mov    ebx,ebx
  417c52:	stos   BYTE PTR es:[edi],al
  417c53:	jnp    0x417c8e
  417c55:	xchg   BYTE PTR [edx+eiz*4+0x27],dl
  417c59:	fisubr DWORD PTR [eax]
  417c5b:	or     DWORD PTR [esp+edi*2+0x27],esi
  417c5f:	push   ss
  417c60:	mov    al,0xc
  417c62:	call   DWORD PTR [edi+0x1b]
  417c65:	pop    es
  417c66:	jns    0x417c7c
  417c68:	sbb    cl,BYTE PTR [edx-0xe197bae]
  417c6e:	jmp    0xaa2cde5d
  417c73:	inc    ebx
  417c74:	push   eax
  417c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c76:	cs addr16 sahf 
  417c79:	or     al,0xe5
  417c7b:	pop    esi
  417c7c:	and    dl,cl
  417c7e:	(bad)  [ecx-0x57]
  417c81:	xor    ebp,DWORD PTR [ebx+0x37ccd5ca]
  417c87:	inc    eax
  417c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c89:	fwait
  417c8a:	xchg   DWORD PTR [eax],ecx
  417c8c:	mov    ebp,0xcf329601
  417c91:	sti    
  417c92:	jo     0x417c71
  417c94:	outs   dx,BYTE PTR ds:[esi]
  417c95:	call   0x9b84:0xade3b1ef
  417c9c:	inc    eax
  417c9d:	shr    DWORD PTR [edx],0x4d
  417ca0:	mov    ecx,0x5f6e9b6b
  417ca5:	add    ecx,DWORD PTR [ebx+edi*1-0x78d8bdb4]
  417cac:	inc    eax
  417cad:	(bad)  
  417cae:	fstp   QWORD PTR [edx-0x7e]
  417cb1:	cmp    eax,0xeb3a46bb
  417cb6:	xchg   esp,esp
  417cb8:	push   ebx
  417cb9:	or     BYTE PTR [ecx-0x4ca96063],cl
  417cbf:	sahf   
  417cc0:	bound  ebx,QWORD PTR [edx+0x66]
  417cc3:	jnp    0x417d06
  417cc5:	add    DWORD PTR [esi],ebp
  417cc7:	loop   0x417cf2
  417cc9:	mov    ebp,0x559187bb
  417cce:	in     eax,0xd
  417cd0:	or     al,0xcd
  417cd2:	and    edi,DWORD PTR [eax-0x8]
  417cd5:	fcmovbe st,st(6)
  417cd7:	inc    edi
  417cd8:	test   BYTE PTR [eax+esi*1-0x7472a129],ah
  417cdf:	mov    dl,0x95
  417ce1:	outs   dx,BYTE PTR ds:[esi]
  417ce2:	sbb    al,cl
  417ce4:	pop    ebx
  417ce5:	test   BYTE PTR [ecx],ch
  417ce7:	aaa    
  417ce8:	mov    edx,0x75ce3021
  417ced:	xchg   ebp,eax
  417cee:	(bad)  [eax+0x7a]
  417cf1:	xchg   ebp,eax
  417cf2:	loop   0x417ca7
  417cf4:	push   ds
  417cf5:	aam    0x31
  417cf7:	mov    ch,BYTE PTR [ebx]
  417cf9:	loop   0x417ca5
  417cfb:	dec    ecx
  417cfc:	push   0x830912f0
  417d01:	scas   al,BYTE PTR es:[edi]
  417d02:	retf   0xec08
  417d05:	jnp    0x417d28
  417d07:	leave  
  417d08:	ret    
  417d09:	jmp    0x4c79:0x59740842
  417d10:	(bad)  
  417d11:	faddp  st(2),st
  417d13:	nop
  417d14:	popa   
  417d15:	popf   
  417d16:	sub    al,bh
  417d18:	aad    0xd1
  417d1a:	sub    ebp,DWORD PTR [eax-0x76d028a]
  417d20:	lock mov dh,0x47
  417d23:	push   cs
  417d24:	loope  0x417d28
  417d26:	cs xchg ecx,eax
  417d28:	and    eax,0x108f137f
  417d2d:	push   0xae752aa5
  417d32:	mov    ch,0x84
  417d34:	in     al,0x84
  417d36:	xchg   ecx,eax
  417d37:	out    0xc6,al
  417d39:	or     esi,DWORD PTR [ebp-0x60b0d964]
  417d3f:	pop    ss
  417d40:	ror    ebx,cl
  417d42:	sbb    DWORD PTR [ebp+0x3e],esi
  417d45:	les    ecx,FWORD PTR [ecx+0x6d]
  417d48:	ret    
  417d49:	mov    bh,0x95
  417d4b:	lds    edi,FWORD PTR [edi-0x3c2fdabc]
  417d51:	cdq    
  417d52:	adc    edx,ebx
  417d54:	jp     0x417cd7
  417d56:	stos   BYTE PTR es:[edi],al
  417d57:	lods   al,BYTE PTR ds:[esi]
  417d58:	mov    esp,0xb7cd6d91
  417d5d:	push   cs
  417d5e:	and    dh,BYTE PTR [eax-0x66]
  417d61:	shr    DWORD PTR [ecx-0x43],1
  417d64:	jmp    0x47b5:0x7054fc8e
  417d6b:	mov    ds:0x22344a21,eax
  417d70:	mov    edx,0x2f62c1bf
  417d75:	(bad)  
  417d76:	cs sbb eax,0xd8e31162
  417d7c:	jle    0x417d96
  417d7e:	daa    
  417d7f:	fiadd  DWORD PTR [edi-0x1320a675]
  417d85:	push   edi
  417d86:	iret   
  417d87:	out    dx,eax
  417d88:	and    ch,BYTE PTR [esi-0x1cfafe3b]
  417d8e:	push   ds
  417d8f:	imul   ecx,ebx,0xc094d4d1
  417d95:	jp     0x417dca
  417d97:	js     0x417e11
  417d99:	sbb    DWORD PTR [edx],0x9c9d08bc
  417d9f:	mov    dh,0xc4
  417da1:	call   0xf17e:0x64a3aa76
  417da8:	inc    ebp
  417da9:	fstp   TBYTE PTR [edi+0x61]
  417dac:	inc    ecx
  417dad:	push   ds
  417dae:	in     al,0xcc
  417db0:	push   edi
  417db1:	or     BYTE PTR [edx],dl
  417db3:	call   FWORD PTR [eax+0x121db988]
  417db9:	neg    dl
  417dbb:	adc    DWORD PTR gs:[eax+0x56],0x1b4efbd
  417dc3:	mov    dh,0x98
  417dc5:	pop    esp
  417dc6:	sbb    BYTE PTR [esi+0x2230a5d0],ah
  417dcc:	xchg   ebx,eax
  417dcd:	jnp    0x417d98
  417dcf:	sbb    al,0x19
  417dd1:	dec    edi
  417dd2:	mov    ch,0x30
  417dd4:	pop    eax
  417dd5:	or     al,0xec
  417dd7:	mov    ds:0xee7b6b4,al
  417ddc:	sbb    ecx,DWORD PTR [esi]
  417dde:	inc    ecx
  417ddf:	and    esi,DWORD PTR [ebx+ebx*2-0x44]
  417de3:	jmp    0x205e2c8e
  417de8:	xor    al,0x7d
  417dea:	mov    ch,0x44
  417dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ded:	cdq    
  417dee:	sub    eax,0x1caf0f39
  417df3:	es loop 0x417dd2
  417df6:	push   ss
  417df7:	jns    0x417dbc
  417df9:	xchg   edx,eax
  417dfa:	test   DWORD PTR [ebx-0x16],esi
  417dfd:	fst    DWORD PTR [eax]
  417dff:	in     al,0x6b
  417e01:	jmp    0xecaf6d57
  417e06:	in     al,dx
  417e07:	aam    0xa5
  417e09:	pop    esp
  417e0a:	loopne 0x417dbf
  417e0c:	stos   BYTE PTR es:[edi],al
  417e0d:	mov    dh,0x88
  417e0f:	or     DWORD PTR [ebx+0x744719df],ebx
  417e15:	mov    ?,WORD PTR [eax]
  417e17:	dec    ebp
  417e18:	stos   BYTE PTR es:[edi],al
  417e19:	sub    eax,0x66464908
  417e1e:	in     al,0xdb
  417e20:	push   ss
  417e21:	shl    DWORD PTR [edi],0xe9
  417e24:	aaa    
  417e25:	fwait
  417e26:	rcl    esi,0x17
  417e29:	pusha  
  417e2a:	jmp    0x417e6d
  417e2c:	jnp    0x417df8
  417e2e:	inc    ebp
  417e2f:	sub    al,0xbc
  417e31:	inc    eax
  417e32:	and    DWORD PTR [edx+0x1],ebx
  417e35:	inc    esp
  417e36:	stos   DWORD PTR es:[edi],eax
  417e37:	mul    BYTE PTR [edi+0x6f02f1bd]
  417e3d:	dec    eax
  417e3e:	outs   dx,BYTE PTR ds:[esi]
  417e3f:	fdiv   QWORD PTR [edx-0x49]
  417e42:	fnstsw WORD PTR [edx+0x254e2fe9]
  417e48:	and    al,0x82
  417e4a:	adc    esi,DWORD PTR [eax]
  417e4c:	icebp  
  417e4d:	push   ebx
  417e4e:	lods   eax,DWORD PTR ds:[esi]
  417e4f:	neg    BYTE PTR [ebx+0x4]
  417e52:	xchg   esi,eax
  417e53:	sbb    ecx,edi
  417e55:	adc    bh,dh
  417e57:	pop    ds
  417e58:	push   ebx
  417e59:	push   ecx
  417e5a:	div    DWORD PTR es:[eax]
  417e5d:	adc    al,0x8e
  417e5f:	pop    ss
  417e60:	cs retf 
  417e62:	(bad)  
  417e63:	out    dx,al
  417e64:	push   edi
  417e65:	test   dl,bh
  417e67:	shr    BYTE PTR [eax+0x2bf39e84],0x8c
  417e6e:	mov    gs,ecx
  417e70:	inc    ecx
  417e71:	push   esi
  417e72:	jb     0x417e3c
  417e74:	jl     0x417e17
  417e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e77:	cmp    eax,0xb6282361
  417e7c:	ins    BYTE PTR es:[edi],dx
  417e7d:	pop    es
  417e7e:	sbb    BYTE PTR [edx+eiz*1-0x43ff52ce],bl
  417e85:	out    dx,eax
  417e86:	scas   al,BYTE PTR es:[edi]
  417e87:	cmp    al,BYTE PTR [esi]
  417e89:	outs   dx,BYTE PTR ds:[esi]
  417e8a:	jns    0x417ef7
  417e8c:	ret    0x21a2
  417e8f:	and    ecx,eax
  417e91:	shl    BYTE PTR [ecx-0x2430e14a],1
  417e97:	mov    ds:0x4df70b8c,al
  417e9c:	in     al,dx
  417e9d:	and    DWORD PTR fs:[ebx-0x60],eax
  417ea1:	pop    ecx
  417ea2:	ror    bh,cl
  417ea4:	mov    edi,0x9518cf41
  417ea9:	aaa    
  417eaa:	das    
  417eab:	or     al,0x83
  417ead:	mov    ebp,0xb70052d
  417eb2:	popa   
  417eb3:	dec    eax
  417eb4:	adc    esi,esi
  417eb6:	mov    WORD PTR [edx+0x7],es
  417eb9:	xor    al,0x8c
  417ebb:	lods   eax,DWORD PTR ds:[esi]
  417ebc:	cs cmp al,0x34
  417ebf:	test   eax,0x22a470
  417ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec6:	pop    ebx
  417ec7:	mov    edi,0x68c68139
  417ecc:	add    eax,0x9ebafef2
  417ed1:	jae    0x417f1d
  417ed3:	mov    ds:0xdbeb054,eax
  417ed8:	jbe    0x417f55
  417eda:	push   esi
  417edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417edc:	xlat   BYTE PTR ds:[ebx]
  417edd:	test   DWORD PTR [ebp-0x5e],esi
  417ee0:	sub    ebp,edi
  417ee2:	fistp  QWORD PTR [esi-0x30]
  417ee5:	xchg   esp,eax
  417ee6:	sub    edi,DWORD PTR [edi-0x3c1cc767]
  417eec:	loop   0x417f6c
  417eee:	ja     0x417ef4
  417ef0:	mov    al,0x8a
  417ef2:	push   eax
  417ef3:	imul   eax,DWORD PTR [ecx],0x612091be
  417ef9:	aam    0x59
  417efb:	out    dx,eax
  417efc:	xchg   edx,eax
  417efd:	pop    eax
  417efe:	jmp    0x9796:0xca186d3c
  417f05:	mov    ds:0xfde41dc2,eax
  417f0a:	xchg   edi,eax
  417f0b:	inc    esp
  417f0c:	xor    eax,0x79f57a1f
  417f11:	inc    ecx
  417f12:	(bad)  
  417f14:	jo     0x417f12
  417f16:	xor    DWORD PTR [eax-0x60cd0c67],esp
  417f1c:	clc    
  417f1d:	ja     0x417efd
  417f1f:	pop    esp
  417f20:	(bad)  
  417f21:	xor    eax,ebp
  417f23:	sbb    edi,esp
  417f25:	jne    0x417f34
  417f27:	or     DWORD PTR [ecx],ecx
  417f29:	jnp    0x417f42
  417f2b:	outs   dx,BYTE PTR ds:[esi]
  417f2c:	es test al,0xc9
  417f2f:	mov    dl,0x42
  417f31:	dec    esp
  417f32:	ja     0x417ef2
  417f34:	retf   
  417f35:	icebp  
  417f36:	mov    al,0x11
  417f38:	or     BYTE PTR [eax-0x2d4f3f50],bl
  417f3e:	and    al,BYTE PTR [ecx+0x4ceba0dd]
  417f44:	add    esp,DWORD PTR [ebx-0x49]
  417f47:	shr    DWORD PTR [ecx],cl
  417f49:	fsub   QWORD PTR [ecx+0x27fc03be]
  417f4f:	stos   DWORD PTR es:[edi],eax
  417f50:	loop   0x417f78
  417f52:	shl    BYTE PTR [esi],cl
  417f54:	fs xchg esp,eax
  417f56:	cmp    edx,DWORD PTR [ebx+0x309f8674]
  417f5c:	cmp    BYTE PTR [edx+0x1f],cl
  417f5f:	jmp    0x417f88
  417f61:	jmp    0x3acf:0xc042262d
  417f68:	or     dh,BYTE PTR [edx]
  417f6a:	test   DWORD PTR [ebp-0x1a],ecx
  417f6d:	add    eax,0x75ab5d1
  417f72:	int    0xbc
  417f74:	pop    ss
  417f75:	cmp    DWORD PTR [ebx-0x6b],ecx
  417f78:	fcomip st,st(0)
  417f7a:	mov    eax,0x14325035
  417f7f:	ja     0x417f8b
  417f81:	les    ebp,FWORD PTR [edi-0x5d]
  417f84:	and    ch,bl
  417f86:	jo     0x417f1c
  417f88:	ret    
  417f89:	jp     0x417fc5
  417f8b:	inc    esi
  417f8c:	jae    0x417f9d
  417f8e:	sub    dl,cl
  417f90:	das    
  417f91:	xor    al,0xa4
  417f93:	mov    esp,0x6fa2c318
  417f98:	dec    edi
  417f99:	adc    cl,BYTE PTR [esi]
  417f9b:	mov    BYTE PTR [ebp+0xd85e198],al
  417fa1:	rol    bl,0xbf
  417fa4:	xor    dl,BYTE PTR [edi-0x77]
  417fa7:	(bad)  
  417fa8:	fwait
  417fa9:	aam    0xf2
  417fab:	xchg   ebp,eax
  417fac:	loop   0x41800a
  417fae:	iret   
  417faf:	ja     0x417fb2
  417fb1:	sbb    ebp,DWORD PTR [eax+0xa]
  417fb4:	inc    eax
  417fb5:	mov    dh,0x6d
  417fb7:	mov    DWORD PTR [ebx+0x44],eax
  417fba:	xchg   ebx,eax
  417fbb:	fisttp DWORD PTR [edx+edi*4-0x45ee3adb]
  417fc2:	jge    0x418034
  417fc4:	cwde   
  417fc5:	addr16 pop esi
  417fc7:	(bad)
  417fca:	inc    ecx
  417fcb:	adc    edi,DWORD PTR [edi]
  417fcd:	ss mov ch,0xf
  417fd0:	lods   al,BYTE PTR ds:[esi]
  417fd1:	cmp    DWORD PTR cs:[esi],edi
  417fd4:	lock or DWORD PTR [ecx],ebp
  417fd7:	pop    eax
  417fd8:	adc    eax,0x3196ab7a
  417fdd:	or     al,0xd8
  417fdf:	icebp  
  417fe0:	sub    eax,0xdb85a6e9
  417fe5:	jp     0x417f7f
  417fe7:	fisttp WORD PTR [edi-0x39]
  417fea:	jg     0x417fd4
  417fec:	xor    ch,BYTE PTR [eax-0x6b]
  417fef:	loope  0x41801f
  417ff1:	lea    eax,[edx]
  417ff3:	mov    ebx,0x46cdd1d2
  417ff8:	dec    ebp
  417ff9:	int    0x3b
  417ffb:	pop    eax
  417ffc:	and    BYTE PTR [ebp+ecx*1-0x680b46c],bl
  418003:	ror    BYTE PTR [ecx],1
  418005:	popa   
  418006:	jecxz  0x417fea
  418008:	mov    esi,es
  41800a:	mov    edi,0x212c6e32
  41800f:	jns    0x417f95
  418011:	mov    al,0xa8
  418013:	repz xchg ebp,eax
  418015:	add    DWORD PTR ds:0x67e22577,0x6e02e2a2
  41801f:	push   0x386c25e5
  418024:	jl     0x418093
  418026:	sub    eax,0x5123e25
  41802b:	loope  0x418049
  41802d:	nop
  41802e:	cli    
  41802f:	mov    edx,0x3293bbe1
  418034:	loope  0x418050
  418036:	pushf  
  418037:	jmp    0x418093
  418039:	cmp    cl,BYTE PTR [ebx-0x2886d6ef]
  41803f:	sub    BYTE PTR [ebx+0xd],ah
  418042:	jno    0x41803d
  418044:	fs mov ch,0x39
  418047:	cmp    BYTE PTR [edi],bl
  418049:	mov    al,ds:0x736b49cc
  41804e:	cmp    DWORD PTR [eax],esi
  418050:	in     eax,0xf2
  418052:	into   
  418053:	retf   
  418054:	push   esp
  418055:	add    edx,DWORD PTR [ecx]
  418057:	push   ebx
  418058:	xchg   esp,eax
  418059:	and    eax,0x8017c499
  41805e:	pop    edi
  41805f:	(bad)  
  418061:	js     0x418057
  418063:	mov    bh,0x3
  418065:	leave  
  418066:	jg     0x4180dd
  418068:	shr    BYTE PTR [edi-0x1b],cl
  41806b:	sbb    dl,BYTE PTR [edi+edx*8-0x23]
  41806f:	adc    edx,DWORD PTR [ebx-0x7a]
  418072:	rcl    dl,cl
  418074:	sbb    al,BYTE PTR [ebx+0x52948bfe]
  41807a:	sbb    ecx,0x2c
  41807d:	(bad)  
  41807e:	retf   
  41807f:	sahf   
  418080:	adc    al,0xfe
  418082:	clc    
  418083:	ja     0x4180c2
  418085:	or     ebp,ebp
  418087:	pop    ecx
  418088:	in     al,dx
  418089:	ja     0x418063
  41808b:	(bad)  
  41808c:	and    eax,ecx
  41808e:	jo     0x41801c
  418090:	lea    edi,ds:0xc1d8ce2a
  418096:	xchg   BYTE PTR [edx],dh
  418098:	(bad)  [ecx]
  41809a:	cmp    al,0x57
  41809c:	push   esp
  41809d:	std    
  41809e:	test   DWORD PTR [esp+eiz*2+0x3c947de1],esp
  4180a5:	pop    ebx
  4180a6:	dec    eax
  4180a7:	out    dx,eax
  4180a8:	sub    bl,BYTE PTR [esi-0x7f]
  4180ab:	call   0xb8ae001e
  4180b0:	xchg   DWORD PTR [edx+0x25],edi
  4180b3:	fwait
  4180b4:	ret    
  4180b5:	pop    ds
  4180b6:	pop    ds
  4180b7:	popf   
  4180b8:	jae    0x418112
  4180ba:	jbe    0x4180b1
  4180bc:	test   eax,0x3e92e575
  4180c1:	das    
  4180c2:	ins    BYTE PTR es:[edi],dx
  4180c3:	out    dx,eax
  4180c4:	into   
  4180c5:	ret    
  4180c6:	and    eax,DWORD PTR [ebx]
  4180c8:	ret    0xdedf
  4180cb:	test   eax,0xba82f1aa
  4180d0:	ss pop ebp
  4180d2:	mov    ebp,0x70adcc54
  4180d7:	mov    ah,0x16
  4180d9:	xchg   esi,eax
  4180da:	pop    esp
  4180db:	es pop ds
  4180dd:	test   bh,al
  4180df:	stos   DWORD PTR es:[edi],eax
  4180e0:	mov    eax,DWORD PTR [esi+esi*2]
  4180e3:	inc    edx
  4180e4:	cmp    BYTE PTR [esp+ecx*8+0x1f8e8ddd],cl
  4180eb:	inc    ebx
  4180ec:	or     DWORD PTR [ecx-0x39],0x9f9952b1
  4180f3:	adc    al,0xcb
  4180f5:	dec    eax
  4180f6:	pop    esi
  4180f7:	inc    ebx
  4180f8:	rcl    BYTE PTR [eax],0xd6
  4180fb:	lods   al,BYTE PTR ds:[esi]
  4180fc:	inc    esi
  4180fd:	dec    eax
  4180fe:	fst    QWORD PTR [eax+0x7791ff72]
  418104:	mov    bh,BYTE PTR [ebx+0x17]
  418107:	push   ss
  418108:	push   0x1e
  41810a:	shl    DWORD PTR [edx-0x3e],1
  41810d:	sub    al,0xbf
  41810f:	das    
  418110:	pop    edi
  418111:	adc    ebx,ebp
  418113:	gs mov ah,0xc1
  418116:	mov    eax,ds:0xdbe29192
  41811b:	or     BYTE PTR [edx+0x23],dl
  41811e:	mov    bl,ah
  418120:	sub    dl,BYTE PTR [eax]
  418122:	adc    eax,0x7bc8715
  418127:	and    DWORD PTR [esi+0x1094d3d1],ebp
  41812d:	lahf   
  41812e:	dec    ebp
  41812f:	aas    
  418130:	push   ds
  418131:	mov    ecx,0x2bdec62c
  418136:	cli    
  418137:	bound  ebp,QWORD PTR [edi-0x37]
  41813a:	arpl   bx,si
  41813c:	xchg   ecx,eax
  41813d:	adc    edx,DWORD PTR [eax-0x9ee8191]
  418143:	aad    0x98
  418145:	dec    ebx
  418146:	inc    esp
  418147:	clc    
  418148:	mov    ds:0x138561c9,eax
  41814d:	shl    DWORD PTR [edi],0x89
  418150:	lahf   
  418151:	arpl   WORD PTR ds:0xda921af4,ax
  418157:	repnz mov bl,BYTE PTR [ebx+0x74]
  41815b:	jo     0x41819b
  41815d:	mov    DWORD PTR [edi-0x53],esp
  418160:	sbb    DWORD PTR [edx+edi*2+0x55],ecx
  418164:	in     al,0xb6
  418166:	push   ds
  418167:	ss push 0x35
  41816a:	dec    BYTE PTR [esi+0x2c]
  41816d:	es dec ebp
  41816f:	pushf  
  418170:	jne    0x41816b
  418172:	add    al,BYTE PTR [ebp+0x34]
  418175:	or     eax,0xa3803067
  41817a:	sahf   
  41817b:	pop    es
  41817c:	popf   
  41817d:	test   al,0x2c
  41817f:	inc    eax
  418180:	out    dx,eax
  418181:	gs pop ecx
  418183:	fild   WORD PTR [esi+0x3d79bb36]
  418189:	sbb    BYTE PTR [ebx],0xf5
  41818c:	jno    0x418182
  41818e:	jmp    0xdc2126c
  418193:	or     eax,DWORD PTR cs:[eax+ecx*2]
  418197:	aad    0xe9
  418199:	je     0x4181d2
  41819b:	jmp    0x10818c1
  4181a0:	add    ch,BYTE PTR [ecx+0xdfd705b]
  4181a6:	mov    eax,0x984c8595
  4181ab:	aas    
  4181ac:	jge    0x4181d4
  4181ae:	adc    al,0x47
  4181b0:	cmp    al,0xed
  4181b2:	inc    edi
  4181b3:	jge    0x4181a5
  4181b5:	inc    esp
  4181b6:	cs pop esi
  4181b8:	pop    ss
  4181b9:	pop    esp
  4181ba:	push   ds
  4181bb:	xor    edi,esp
  4181bd:	sti    
  4181be:	jae    0x41814e
  4181c0:	scas   eax,DWORD PTR es:[edi]
  4181c1:	xor    BYTE PTR [eax],cl
  4181c3:	dec    esi
  4181c4:	iret   
  4181c5:	add    eax,0x75de6ad6
  4181ca:	jae    0x4181bd
  4181cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181cd:	push   eax
  4181ce:	mov    al,ds:0xa7b6096d
  4181d3:	cmp    ch,bl
  4181d5:	inc    edi
  4181d6:	pop    edi
  4181d7:	mov    dl,0xa4
  4181d9:	fild   DWORD PTR [esi+0x6d]
  4181dc:	xchg   BYTE PTR [ecx+0x42],bh
  4181df:	pop    ss
  4181e0:	loopne 0x41819b
  4181e2:	pop    edx
  4181e3:	scas   eax,DWORD PTR es:[edi]
  4181e4:	sub    eax,0x4e970e12
  4181e9:	fsubr  DWORD PTR [edx+0x68]
  4181ec:	cli    
  4181ed:	mov    cl,0x27
  4181ef:	(bad)  
  4181f0:	mov    edx,0xebcc616e
  4181f5:	pcmpgtw mm2,QWORD PTR [edi-0x42]
  4181f9:	ins    DWORD PTR es:[edi],dx
  4181fa:	or     bh,ah
  4181fc:	cdq    
  4181fd:	data16 fcomip st,st(6)
  418200:	in     al,dx
  418201:	mov    bh,0x5a
  418203:	jne    0x4181c8
  418205:	int3   
  418206:	fmul   DWORD PTR [eax-0x2c]
  418209:	xor    dh,BYTE PTR [eax+ebx*4-0x40e52353]
  418210:	repz ja 0x41820d
  418213:	xor    esp,esi
  418215:	cmp    al,0x47
  418217:	mov    bl,bl
  418219:	dec    ecx
  41821a:	out    0xa6,eax
  41821c:	gs scas al,BYTE PTR es:[edi]
  41821e:	mov    al,0x34
  418220:	sbb    BYTE PTR [ebx-0x6b],bl
  418223:	inc    eax
  418224:	jecxz  0x41825f
  418226:	push   ebx
  418227:	or     BYTE PTR [ebx-0x12],al
  41822a:	cli    
  41822b:	and    cl,BYTE PTR [edx+ebp*8-0x90be8a0]
  418232:	or     bl,dh
  418234:	cdq    
  418235:	dec    edx
  418236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418237:	std    
  418238:	sub    BYTE PTR [ebp+0x16],0xc
  41823c:	outs   dx,DWORD PTR ds:[esi]
  41823d:	xchg   esp,eax
  41823e:	int    0xff
  418240:	inc    eax
  418241:	call   0x1663:0x66b4e878
  418248:	push   ds
  418249:	xor    DWORD PTR [ebx+0x22],0xa5302a7e
  418250:	push   0x4b
  418252:	test   eax,0x3f8b22aa
  418257:	mov    al,0xf7
  418259:	mov    bl,0xaf
  41825b:	jae    0x418286
  41825d:	add    al,0xd1
  41825f:	cli    
  418260:	sbb    ebx,DWORD PTR [ebx]
  418262:	pusha  
  418263:	sub    dl,BYTE PTR [edi+0x68]
  418266:	add    BYTE PTR [edx-0x8561ba2],al
  41826c:	aas    
  41826d:	pop    esp
  41826e:	fbld   TBYTE PTR [ecx]
  418270:	enter  0xa7f5,0xfd
  418274:	sub    cl,BYTE PTR [edx]
  418276:	mov    ebx,0xeb3da9f3
  41827b:	cli    
  41827c:	lods   eax,DWORD PTR ds:[esi]
  41827d:	fidiv  WORD PTR [ecx+0x117abc9c]
  418283:	inc    ebp
  418284:	(bad)  
  418285:	jge    0x4182dc
  418287:	push   0xa42b6c24
  41828c:	mov    edx,0x5a10e83b
  418291:	dec    ecx
  418292:	sahf   
  418293:	aas    
  418294:	iret   
  418295:	xchg   ecx,eax
  418296:	jmp    0x2f649add
  41829b:	mov    ecx,0xa8ee6ac
  4182a0:	dec    ecx
  4182a1:	fnsave [eax-0x16]
  4182a4:	ret    0xa7f4
  4182a7:	push   ss
  4182a8:	sahf   
  4182a9:	or     dh,al
  4182ab:	ins    BYTE PTR es:[edi],dx
  4182ac:	mov    es,WORD PTR [ebp+0x113810b3]
  4182b2:	jne    0x4182e9
  4182b4:	inc    ebx
  4182b5:	mov    esi,0x6aa8000e
  4182ba:	push   ecx
  4182bb:	bound  esi,QWORD PTR ss:[ebx+0xe71f5b7]
  4182c2:	push   ebp
  4182c3:	xchg   esi,eax
  4182c4:	(bad)  
  4182c5:	pop    edx
  4182c6:	and    ebx,DWORD PTR [ebp+0x42]
  4182c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182cb:	scas   al,BYTE PTR es:[edi]
  4182cc:	in     al,dx
  4182cd:	inc    ebx
  4182ce:	dec    esp
  4182cf:	pop    edi
  4182d0:	mov    al,0x8
  4182d2:	ins    BYTE PTR es:[edi],dx
  4182d3:	inc    edi
  4182d4:	pop    ecx
  4182d5:	fucomp st(5)
  4182d7:	std    
  4182d8:	(bad)
  4182db:	inc    ebx
  4182dc:	lods   al,BYTE PTR cs:[esi]
  4182de:	sbb    ch,BYTE PTR [esi]
  4182e0:	jg     0x418315
  4182e2:	push   es
  4182e3:	pop    eax
  4182e4:	add    esi,DWORD PTR [ecx+0x3e79b9fb]
  4182ea:	xor    ebp,DWORD PTR [edx-0x57]
  4182ed:	xor    eax,0xdc49feaf
  4182f2:	inc    esi
  4182f3:	je     0x418366
  4182f5:	jmp    0xc9eb09a1
  4182fa:	clc    
  4182fb:	and    al,0x6a
  4182fd:	mov    esp,0xfd9a4946
  418302:	hlt    
  418303:	adc    al,BYTE PTR [edx+0x4b]
  418306:	pop    edx
  418307:	loopne 0x4182f2
  418309:	cmp    dl,BYTE PTR [esi+0x3c59c975]
  41830f:	fidiv  DWORD PTR [edx+0xe4041ac]
  418315:	pop    es
  418316:	call   0x8876:0x8aeb0b
  41831d:	push   ebp
  41831e:	rol    ebp,0x58
  418321:	or     eax,0x463223d9
  418326:	xchg   ebp,eax
  418327:	fwait
  418328:	stos   DWORD PTR es:[edi],eax
  418329:	mov    ds:0xa3685851,eax
  41832e:	std    
  41832f:	lods   eax,DWORD PTR ds:[esi]
  418330:	adc    cl,0x67
  418333:	into   
  418334:	adc    al,0x2d
  418336:	mov    esp,ebp
  418338:	add    BYTE PTR [ebx],dh
  41833a:	fwait
  41833b:	adc    bh,BYTE PTR [esi]
  41833d:	xchg   edi,eax
  41833e:	ja     0x4182d3
  418340:	xor    BYTE PTR [ebp-0x25e92723],cl
  418346:	jb     0x4183b6
  418348:	and    BYTE PTR [ecx+0x4aebb1b4],dl
  41834e:	mov    ds:0x10d9e2bf,eax
  418353:	sbb    DWORD PTR [edi],edi
  418355:	xchg   eax,ebx
  418357:	dec    eax
  418358:	outs   dx,DWORD PTR ds:[esi]
  418359:	pop    edi
  41835a:	ret    0x1f6c
  41835d:	out    dx,al
  41835e:	xor    eax,0x473338d8
  418363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418364:	mov    ss,WORD PTR [esi-0x22]
  418367:	sahf   
  418368:	push   0xfffffff5
  41836a:	mov    BYTE PTR [ecx],dh
  41836c:	add    bl,BYTE PTR [ebp+0x50857753]
  418372:	mov    eax,ds:0xc864722f
  418377:	jne    0x4183dc
  418379:	sbb    DWORD PTR [eax+0x38d48329],ebx
  41837f:	shl    BYTE PTR ds:0x4309e2cb,0xd8
  418386:	jbe    0x4183d5
  418388:	test   DWORD PTR [eax+0x5ed30cda],edx
  41838e:	add    bh,BYTE PTR [ebp-0x45]
  418391:	pop    eax
  418392:	mov    dl,0x90
  418394:	cdq    
  418395:	dec    esi
  418396:	mov    bh,0x30
  418398:	les    edx,FWORD PTR [edi+0x29]
  41839b:	adc    ebx,DWORD PTR [edx+0x495ad4c0]
  4183a1:	and    eax,0xb1d8179
  4183a6:	out    0xdc,eax
  4183a8:	dec    ebp
  4183aa:	ret    0x8f2b
  4183ad:	fsubp  st(7),st
  4183af:	pop    eax
  4183b0:	mov    cl,0xeb
  4183b2:	call   0xfde5:0xe44f77c0
  4183b9:	sub    DWORD PTR [ebx-0xf6e5627],esi
  4183bf:	in     al,dx
  4183c0:	mov    BYTE PTR [edx-0x3310aa97],0xda
  4183c7:	mov    edi,0xd86d350a
  4183cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183cd:	test   BYTE PTR [edi],ah
  4183cf:	pop    esp
  4183d0:	jp     0x41839c
  4183d2:	sub    DWORD PTR [edi],edi
  4183d4:	push   ebx
  4183d5:	inc    ebx
  4183d6:	xor    ebx,DWORD PTR [edx-0x22abacd2]
  4183dc:	fsub   st,st(4)
  4183de:	shr    BYTE PTR ds:0xebfc5f4f,1
  4183e4:	not    DWORD PTR [esi]
  4183e6:	pop    ebp
  4183e7:	daa    
  4183e8:	icebp  
  4183e9:	push   es
  4183ea:	test   BYTE PTR [edx+0x56],cl
  4183ed:	dec    ebp
  4183ee:	repz push 0xfffffffd
  4183f1:	hlt    
  4183f2:	dec    ebp
  4183f3:	cs test eax,0xe9d3d27a
  4183f9:	scas   al,BYTE PTR es:[edi]
  4183fa:	xchg   edx,eax
  4183fb:	sahf   
  4183fc:	les    eax,FWORD PTR [ebp+0x6d3e22c5]
  418402:	mov    eax,ds:0x73a050c9
  418407:	mov    edi,0x319be69
  41840c:	or     cl,dl
  41840e:	pop    esi
  41840f:	mov    eax,DWORD PTR [ebx]
  418411:	ret    0x1d2e
  418414:	imul   ebp,DWORD PTR [eax+0x4e],0xffffffca
  418418:	sbb    eax,0x418de2ac
  41841d:	mov    edx,edx
  41841f:	fs js  0x4183fd
  418422:	out    0x62,eax
  418424:	jmp    0xd6c098c6
  418429:	sbb    eax,0xdbcc434b
  41842e:	repz pop ebp
  418430:	test   BYTE PTR [esi+0x31fa7318],ah
  418436:	lock aam 0x80
  418439:	sahf   
  41843a:	fist   WORD PTR [edx+ebp*8-0x51]
  41843e:	lods   al,BYTE PTR ds:[esi]
  41843f:	xchg   edi,eax
  418440:	(bad)
  418443:	push   eax
  418444:	or     bh,BYTE PTR [edi+0x1a063442]
  41844a:	fiadd  WORD PTR [esi+0x5f5e81]
  418450:	push   ss
  418451:	mov    ch,0xe6
  418453:	jl     0x4184d1
  418455:	imul   esp,DWORD PTR [eax+0x70164427],0x4cc55100
  41845f:	aad    0x38
  418461:	rcl    esp,1
  418463:	stos   BYTE PTR es:[edi],al
  418464:	es out 0x59,eax
  418467:	pop    esp
  418468:	pop    es
  418469:	add    al,0xcc
  41846b:	adc    dl,BYTE PTR [esi-0x54]
  41846e:	(bad)  
  41846f:	aad    0x7
  418471:	addr16 xor ebx,edx
  418474:	xor    al,0x71
  418476:	and    eax,0xd94de701
  41847b:	jns    0x418432
  41847d:	adc    BYTE PTR ds:0xd22674cc,dh
  418483:	inc    ecx
  418484:	lods   al,BYTE PTR ds:[esi]
  418485:	xchg   ecx,eax
  418486:	mov    DWORD PTR [edi],ecx
  418488:	test   eax,0x6ae6bca2
  41848d:	daa    
  41848e:	mov    es,WORD PTR [esi+0x3c]
  418491:	jl     0x4184c4
  418493:	lock je 0x4184ec
  418496:	add    eax,0x60a0dd92
  41849b:	icebp  
  41849c:	(bad)  
  41849d:	sti    
  41849e:	sahf   
  41849f:	jns    0x418435
  4184a1:	mov    al,0xd4
  4184a3:	(bad)  
  4184a4:	xor    bh,BYTE PTR [eax-0x2a6b3063]
  4184aa:	fcmovb st,st(4)
  4184ac:	(bad)  
  4184ad:	and    al,0x39
  4184af:	xor    DWORD PTR [esi],eax
  4184b1:	fcmovbe st,st(4)
  4184b3:	daa    
  4184b4:	test   BYTE PTR [edx+0x6],ch
  4184b7:	loop   0x418476
  4184b9:	push   ebx
  4184ba:	jne    0x41846c
  4184bc:	and    al,0x19
  4184be:	sbb    eax,0xcf644d1e
  4184c3:	adc    BYTE PTR [edx+0x39],bh
  4184c6:	(bad)  
  4184c7:	out    0xb6,al
  4184c9:	inc    esp
  4184ca:	dec    ebx
  4184cb:	pop    es
  4184cc:	inc    eax
  4184cd:	add    esp,DWORD PTR [ecx]
  4184cf:	mov    ebp,DWORD PTR [ecx-0x1a8b9797]
  4184d5:	int    0xe3
  4184d7:	(bad)  
  4184d8:	hlt    
  4184d9:	pop    ss
  4184da:	xor    edx,edi
  4184dc:	cmp    BYTE PTR [ebx+0x4a2e5e16],bl
  4184e2:	fwait
  4184e3:	in     eax,0x68
  4184e5:	(bad)  
  4184e6:	push   ebx
  4184e7:	loop   0x4184a9
  4184e9:	ins    BYTE PTR es:[edi],dx
  4184ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184eb:	fld    TBYTE PTR [edi-0x6b]
  4184ee:	mov    al,ds:0xa2ffac90
  4184f3:	mov    al,ds:0xbf6cc868
  4184f8:	sbb    DWORD PTR [ebx-0x643def80],ebp
  4184fe:	pop    ecx
  4184ff:	push   ecx
  418500:	outs   dx,BYTE PTR ds:[esi]
  418501:	aas    
  418502:	comiss xmm1,xmm5
  418505:	dec    esp
  418506:	iret   
  418507:	pop    es
  418508:	sbb    BYTE PTR [edx-0x38bcb1cf],0xc7
  41850f:	(bad)  
  418510:	icebp  
  418511:	jmp    0x418494
  418513:	mov    al,ds:0xe79f347d
  418518:	fsubr  QWORD PTR [ecx+0x7a]
  41851b:	or     ebx,esp
  41851d:	cmp    al,0xdb
  41851f:	push   ds
  418520:	ret    0x44d8
  418523:	jecxz  0x4184ad
  418525:	cmp    al,0xb1
  418527:	pop    es
  418528:	dec    edi
  418529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41852a:	pop    esi
  41852b:	or     ebx,DWORD PTR [eax+0x38]
  41852e:	arpl   WORD PTR [edx+0x77f3ea47],cx
  418534:	lea    ecx,[edi-0xe]
  418537:	and    cl,bl
  418539:	(bad)  
  41853a:	xchg   esi,eax
  41853b:	sbb    bl,BYTE PTR [ebp+eax*2+0x6f96f1bb]
  418542:	add    BYTE PTR [ebx+0x468ab057],0x24
  418549:	ss out dx,eax
  41854b:	call   0xef93:0x739dcc84
  418552:	(bad)  
  418553:	sbb    cl,BYTE PTR [eax-0x33]
  418556:	clc    
  418557:	ret    
  418558:	out    dx,eax
  418559:	push   ecx
  41855a:	mov    al,ds:0x5b630160
  41855f:	cmp    eax,0xf9e50dd9
  418564:	sbb    eax,0x1a7a92ee
  418569:	lods   eax,DWORD PTR ds:[esi]
  41856a:	aas    
  41856b:	lds    esp,FWORD PTR [edi-0x6e4ffa07]
  418571:	dec    ecx
  418572:	ins    BYTE PTR es:[edi],dx
  418573:	vmwrite edi,DWORD PTR [ebp+0x22]
  418577:	retf   
  418578:	sbb    al,0x70
  41857a:	add    ecx,esp
  41857c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41857d:	cmovno eax,DWORD PTR [edi+0x31]
  418581:	and    ch,BYTE PTR [edi-0x76]
  418584:	add    eax,0x96648dde
  418589:	js     0x418595
  41858b:	and    al,0xba
  41858d:	mov    cl,0x89
  41858f:	ins    DWORD PTR es:[edi],dx
  418590:	mov    esi,0xac43ae0b
  418595:	dec    eax
  418596:	(bad)  
  418597:	into   
  418598:	ins    DWORD PTR es:[edi],dx
  418599:	dec    ecx
  41859a:	lahf   
  41859b:	test   ah,dl
  41859d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41859e:	adc    DWORD PTR [ecx-0x3],ecx
  4185a1:	or     eax,0xc7849b05
  4185a6:	or     cl,dl
  4185a8:	mov    edx,eax
  4185aa:	adc    al,0xb4
  4185ac:	xlat   BYTE PTR ds:[ebx]
  4185ad:	lods   eax,DWORD PTR ds:[esi]
  4185ae:	popa   
  4185af:	nop
  4185b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b1:	cmc    
  4185b2:	push   0x6d
  4185b4:	(bad)  
  4185b5:	addr16 jp 0x418543
  4185b8:	cdq    
  4185b9:	inc    edi
  4185ba:	sub    DWORD PTR [eax+ecx*2-0x2],ebp
  4185be:	lds    ecx,FWORD PTR [ecx+0x66]
  4185c1:	mov    ebx,0x6fe16990
  4185c6:	push   ss
  4185c7:	adc    eax,0xf978a28b
  4185cc:	xchg   ecx,eax
  4185cd:	(bad)  
  4185ce:	and    ch,ch
  4185d0:	repz jg 0x418621
  4185d3:	mov    eax,ds:0x84e87ab0
  4185d8:	aaa    
  4185d9:	(bad)  
  4185da:	(bad)  
  4185db:	mov    al,0x6d
  4185dd:	dec    edx
  4185df:	pop    esi
  4185e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185e1:	fisubr DWORD PTR [ecx]
  4185e3:	pop    ebx
  4185e4:	dec    edi
  4185e5:	neg    eax
  4185e7:	jbe    0x418616
  4185e9:	mov    ah,0xcb
  4185eb:	adc    BYTE PTR [esi+0x1],dh
  4185ee:	mov    ds:0xe518392b,eax
  4185f3:	aad    0xff
  4185f5:	into   
  4185f6:	(bad)  
  4185f7:	js     0x418598
  4185f9:	inc    ebp
  4185fa:	dec    edx
  4185fb:	cmpxchg BYTE PTR [ebp+0x1860caeb],bh
  418602:	ret    0x7496
  418605:	imul   esp,DWORD PTR ds:0x584eeafd,0xffffff90
  41860c:	xor    ch,BYTE PTR [esi-0x3]
  41860f:	mov    bh,0x82
  418611:	sbb    esp,DWORD PTR fs:[edi+eax*4+0x5]
  418616:	cmp    eax,0x241137f5
  41861b:	fsub   QWORD PTR [esi-0x6f4e20a3]
  418621:	adc    dl,al
  418623:	sub    al,0x16
  418625:	in     al,0x61
  418627:	or     dl,ah
  418629:	jne    0x4186a4
  41862b:	sar    BYTE PTR [edi-0x1b],1
  41862e:	clc    
  41862f:	sar    ch,1
  418631:	pop    ecx
  418632:	mov    ds:0x90c723b,eax
  418637:	xchg   BYTE PTR [esi],cl
  418639:	test   eax,0xc8b86d65
  41863e:	stc    
  41863f:	cmp    bl,BYTE PTR [ecx-0x70949550]
  418645:	pop    esi
  418646:	sbb    bl,0x19
  418649:	stos   BYTE PTR es:[edi],al
  41864a:	shr    BYTE PTR [edi-0x564339fd],cl
  418650:	(bad)  
  418651:	cmp    DWORD PTR [ebx],ebp
  418653:	adc    edi,DWORD PTR ds:0xc1c11fe5
  418659:	pop    edi
  41865a:	dec    BYTE PTR [ebp-0x7]
  41865d:	xchg   edi,eax
  41865e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41865f:	leave  
  418660:	daa    
  418661:	pusha  
  418662:	jle    0x4186a4
  418664:	aam    0xd0
  418666:	inc    ebx
  418667:	pop    ss
  418668:	test   al,0x35
  41866a:	out    dx,al
  41866b:	je     0x41863b
  41866d:	push   ebx
  41866e:	mov    edx,0xd7967a66
  418673:	(bad)  
  418674:	outs   dx,DWORD PTR ds:[esi]
  418675:	(bad)
  418678:	jae    0x418622
  41867a:	shl    BYTE PTR cs:[ecx-0x1f436c36],1
  418681:	mov    esp,0xbaecd45d
  418686:	pop    ebp
  418687:	cmp    DWORD PTR [esi+0x43],0x451248d6
  41868e:	shr    DWORD PTR [esi-0x5],0x41
  418692:	test   BYTE PTR [edx-0x60f8d05e],al
  418698:	fs pop esp
  41869a:	fwait
  41869b:	push   0x75
  41869d:	test   eax,0x6fc4c18f
  4186a2:	mov    esi,0x8372b19d
  4186a7:	(bad)  
  4186a8:	mov    al,ds:0x20e4aab8
  4186ad:	fist   DWORD PTR [eax]
  4186af:	push   ebp
  4186b0:	cld    
  4186b1:	int3   
  4186b2:	sbb    BYTE PTR [esi-0x35b2f083],ah
  4186b8:	sub    BYTE PTR [edx+eiz*8-0x4a2cc88f],bl
  4186bf:	ja     0x418701
  4186c1:	clc    
  4186c2:	mov    cl,BYTE PTR [ebp-0x6b]
  4186c5:	xchg   edx,eax
  4186c6:	fist   WORD PTR [eax]
  4186c8:	dec    eax
  4186c9:	test   dl,dl
  4186cb:	jo     0x4186cf
  4186cd:	sbb    eax,0xf9d4e510
  4186d2:	cli    
  4186d3:	sbb    al,BYTE PTR [eax-0x3c]
  4186d6:	cmp    dh,bh
  4186d8:	arpl   WORD PTR [ebx+0x2c573b9a],di
  4186de:	lahf   
  4186df:	or     cl,BYTE PTR [edx-0x2c]
  4186e2:	pop    edx
  4186e3:	stos   DWORD PTR es:[edi],eax
  4186e4:	mov    ebp,0xbc7ce855
  4186e9:	dec    eax
  4186ea:	(bad)  
  4186eb:	popf   
  4186ec:	test   eax,0xc533b907
  4186f1:	jmp    0x19d2:0xe141b766
  4186f8:	retf   
  4186f9:	jmp    0x27e5:0x87e1f28c
  418700:	fild   QWORD PTR [ebx-0x43]
  418703:	mov    gs,WORD PTR [ecx+0x4a]
  418706:	and    BYTE PTR [edx+0x70],dh
  418709:	sub    bl,al
  41870b:	fiadd  DWORD PTR [edx-0x7f7b5541]
  418711:	call   0x5cb99b68
  418716:	aaa    
  418717:	das    
  418718:	out    0x88,al
  41871a:	ja     0x41872c
  41871c:	xor    al,0x50
  41871e:	stc    
  41871f:	dec    esp
  418720:	sub    bh,dl
  418722:	xadd   BYTE PTR [ebx+0x97910ea],al
  418729:	lods   al,BYTE PTR ds:[esi]
  41872a:	loope  0x418756
  41872c:	loope  0x41873b
  41872e:	xor    dh,cl
  418730:	xor    esi,DWORD PTR [eax+ecx*2+0x54]
  418734:	sahf   
  418735:	rcr    DWORD PTR [eax+edi*4],0xbf
  418739:	mov    BYTE PTR [ebx-0x7b],ah
  41873c:	ja     0x418785
  41873e:	push   0xf93e0f8d
  418743:	popa   
  418744:	(bad)  
  418745:	push   cs
  418746:	rcl    ch,0x93
  418749:	sar    BYTE PTR [ebx-0x223239d0],1
  41874f:	popa   
  418750:	xor    ch,0x69
  418753:	fisttp DWORD PTR [edi+edi*4+0x6a0e2c85]
  41875a:	test   BYTE PTR [esi+0x4159c1c6],al
  418760:	inc    ebp
  418761:	jl     0x418751
  418763:	stc    
  418764:	xchg   edx,eax
  418765:	inc    ecx
  418766:	in     eax,dx
  418767:	and    eax,0xfb5bfa14
  41876c:	xchg   ebp,esp
  41876e:	jae    0x418718
  418770:	fcomi  st,st(2)
  418772:	lock cmp BYTE PTR [edi+eiz*8+0x54],bl
  418777:	loopne 0x4187bf
  418779:	imul   ecx,DWORD PTR [eax-0xe7bf3],0x32
  418780:	cmp    DWORD PTR [edi-0x34c518dc],edx
  418786:	ffreep st(6)
  418788:	call   0x9709:0x22439622
  41878f:	push   esp
  418790:	inc    esp
  418791:	fild   QWORD PTR [edi]
  418793:	test   DWORD PTR [edx-0x4b066c9c],0xa2482b9e
  41879d:	push   ss
  41879e:	pop    ebp
  41879f:	pop    ecx
  4187a0:	inc    ecx
  4187a1:	xor    eax,ebx
  4187a3:	test   ebx,esp
  4187a5:	and    ebx,DWORD PTR [ecx+0x42]
  4187a8:	xchg   ebx,eax
  4187a9:	les    ebp,FWORD PTR [ecx]
  4187ab:	js     0x418781
  4187ad:	jno    0x41880e
  4187af:	xchg   edx,eax
  4187b0:	push   ss
  4187b1:	out    0x73,eax
  4187b3:	loopne 0x4187f2
  4187b5:	(bad)  
  4187b6:	pmuludq mm4,QWORD PTR ds:0x56fa68c0
  4187bd:	jecxz  0x4187d9
  4187bf:	xchg   edi,eax
  4187c0:	or     DWORD PTR [ebp-0x3d],edx
  4187c3:	dec    ebp
  4187c4:	ret    
  4187c5:	fadd   DWORD PTR ds:0x749e29f
  4187cb:	pop    esi
  4187cc:	jle    0x418762
  4187ce:	mov    al,ds:0x8e01ab90
  4187d3:	retf   0x45e3
  4187d6:	enter  0x64d5,0xde
  4187da:	in     al,dx
  4187db:	dec    ecx
  4187dc:	mov    edi,0x3e79767e
  4187e1:	lea    esp,[edx]
  4187e3:	sbb    dl,BYTE PTR [ebp+eax*2+0x36]
  4187e7:	push   ebx
  4187e8:	mov    dh,0xe9
  4187ea:	mul    DWORD PTR [ebp-0x5c861347]
  4187f0:	dec    edi
  4187f1:	inc    edi
  4187f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f3:	inc    ecx
  4187f4:	popf   
  4187f5:	ret    0xe040
  4187f8:	into   
  4187f9:	xchg   ebp,eax
  4187fa:	xchg   ecx,ebx
  4187fc:	fcmovne st,st(0)
  4187fe:	(bad)  
  4187ff:	stos   DWORD PTR es:[edi],eax
  418800:	pop    ss
  418801:	push   es
  418802:	mov    BYTE PTR [eax+edi*1-0x5cf1ef9b],bl
  418809:	add    al,0x72
  41880b:	(bad)  
  41880c:	out    dx,al
  41880d:	fs pop ss
  41880f:	sbb    al,0xca
  418811:	inc    edi
  418812:	pusha  
  418813:	(bad)  
  418814:	stc    
  418815:	fild   DWORD PTR [ebp-0x7a]
  418818:	jmp    0x1021:0xf236c6e
  41881f:	sti    
  418820:	mov    al,0x61
  418822:	les    esp,FWORD PTR [ebp+0x75]
  418825:	and    eax,0xa58ad71a
  41882a:	dec    esi
  41882b:	test   al,ch
  41882d:	test   BYTE PTR [esi+0x152fdba2],bh
  418833:	mov    ah,0xfb
  418835:	addr16 cwde 
  418837:	pop    esp
  418838:	xlat   BYTE PTR ds:[ebx]
  418839:	(bad)  
  41883b:	leave  
  41883c:	popa   
  41883d:	and    DWORD PTR [edi-0x4114c3e1],edi
  418843:	jmp    0xb25ebfcc
  418848:	mov    al,ds:0xf01890b9
  41884d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41884e:	cld    
  41884f:	inc    eax
  418850:	mov    ds:0xa7d8bff6,al
  418855:	or     DWORD PTR [ecx-0x3d],0xffffffbb
  418859:	(bad)  
  41885a:	or     BYTE PTR [esi+0x3c652bc1],bh
  418860:	and    bl,BYTE PTR [eax]
  418862:	xchg   ecx,eax
  418863:	sahf   
  418864:	mov    ebx,0x2119559b
  418869:	dec    ebp
  41886a:	ja     0x4188d5
  41886c:	dec    ebx
  41886d:	rol    BYTE PTR [esi+0x51],cl
  418870:	rol    BYTE PTR [ecx-0x65],1
  418873:	int    0x62
  418875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418876:	inc    esp
  418877:	and    dh,BYTE PTR [esi+0x34]
  41887a:	sub    al,0xbe
  41887c:	dec    esi
  41887d:	pop    ebp
  41887e:	call   0x53d5:0xdb06fe3a
  418885:	stos   BYTE PTR es:[edi],al
  418886:	xor    al,0x21
  418888:	pop    esi
  418889:	or     DWORD PTR [edx+0x57],eax
  41888c:	mov    fs:0xf280e63f,al
  418892:	jo     0x41885c
  418894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418895:	adc    BYTE PTR [ecx-0xcfe5fd6],ch
  41889b:	das    
  41889c:	rcl    bl,1
  41889e:	add    DWORD PTR [edx+0x53],ebp
  4188a1:	push   ebp
  4188a2:	pop    ss
  4188a3:	pop    ds
  4188a4:	inc    esp
  4188a5:	mov    ecx,0x83d9c7ba
  4188aa:	sub    ah,BYTE PTR [esi-0x24]
  4188ad:	sbb    ebx,DWORD PTR [esi]
  4188af:	xor    edi,DWORD PTR [ebp-0x723fa2f6]
  4188b5:	lahf   
  4188b6:	dec    ebx
  4188b7:	fld    DWORD PTR [edi]
  4188b9:	sbb    DWORD PTR [edi-0x3a1e530c],esi
  4188bf:	dec    eax
  4188c0:	outs   dx,BYTE PTR ds:[esi]
  4188c1:	in     al,0xd8
  4188c3:	scas   al,BYTE PTR es:[edi]
  4188c4:	in     al,dx
  4188c5:	stos   BYTE PTR es:[edi],al
  4188c6:	inc    ebx
  4188c7:	pop    ecx
  4188c8:	pop    ds
  4188c9:	loop   0x4188a5
  4188cb:	inc    ebp
  4188cc:	adc    al,0x14
  4188ce:	rol    dh,1
  4188d0:	retf   0x17b2
  4188d3:	inc    edi
  4188d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188d5:	mov    es,WORD PTR [edi]
  4188d7:	mov    eax,ds:0xa57545ef
  4188dc:	test   DWORD PTR [ebx],eax
  4188de:	popf   
  4188df:	test   eax,0x3053a5ca
  4188e4:	adc    ecx,0x2d
  4188e7:	outs   dx,BYTE PTR ds:[esi]
  4188e8:	mov    ds:0xd1b06aef,eax
  4188ed:	jno    0x4188ab
  4188ef:	mov    esi,0x49de96a0
  4188f4:	mov    dl,0x58
  4188f6:	lds    ecx,FWORD PTR [edx+0x68]
  4188f9:	adc    BYTE PTR [eax],al
  4188fb:	and    eax,0x8f292c1e
  418900:	lods   eax,DWORD PTR ds:[esi]
  418901:	xchg   ebx,eax
  418902:	mov    ch,0xa1
  418904:	dec    esi
  418905:	jo     0x418936
  418907:	(bad)  
  418908:	push   DWORD PTR [edi]
  41890a:	cld    
  41890b:	les    edx,FWORD PTR [ebx+0x21]
  41890e:	(bad)  
  41890f:	mov    al,0xeb
  418911:	mov    ch,0xb3
  418913:	sub    eax,0xef00423e
  418918:	mov    ah,0x77
  41891a:	xchg   edx,eax
  41891b:	scas   al,BYTE PTR es:[edi]
  41891c:	sbb    ch,BYTE PTR [ecx]
  41891e:	cmp    dh,bl
  418920:	out    0xed,eax
  418922:	cmp    DWORD PTR [edx-0x79],0xb3dd99d2
  418929:	mov    esi,0x3aacabb
  41892e:	xor    BYTE PTR [ecx],ah
  418930:	ror    DWORD PTR [eax+0xe],cl
  418933:	dec    eax
  418934:	push   esp
  418935:	std    
  418936:	loopne 0x4188c1
  418938:	mov    cl,0x5d
  41893a:	test   esp,edi
  41893c:	mov    ecx,0xc64bf548
  418941:	pop    edx
  418942:	cmp    ebx,esi
  418944:	jmp    0x264f:0xf30be7b5
  41894b:	imul   ecx,DWORD PTR [ecx],0xf3ef2c24
  418951:	sbb    bh,BYTE PTR [ebx-0x277e385e]
  418957:	jmp    0x418999
  418959:	sbb    DWORD PTR [ecx-0x67af3463],edx
  41895f:	or     edi,DWORD PTR [ebx+eax*8+0x30]
  418963:	xor    al,0x13
  418965:	or     ebp,DWORD PTR [ebp-0x1b744343]
  41896b:	and    eax,DWORD PTR [edi+edi*8-0x2]
  41896f:	push   esi
  418970:	fbstp  TBYTE PTR es:[edx-0x69]
  418974:	sbb    al,0x98
  418976:	mov    cl,0xeb
  418978:	pop    esi
  418979:	mov    ebp,0x9e84d305
  41897e:	lods   eax,DWORD PTR ds:[esi]
  41897f:	sub    eax,0x5f599e62
  418984:	aaa    
  418985:	mov    DWORD PTR [ebx-0x6bf3bdda],edx
  41898b:	icebp  
  41898c:	jno    0x4189a0
  41898e:	push   esp
  41898f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418990:	cmc    
  418991:	mov    esp,0xec207cc8
  418996:	nop
  418997:	iret   
  418998:	pextrw edx,(bad),0xc5
  41899a:	push   edx
  41899b:	test   al,0x23
  41899d:	je     0x41895f
  41899f:	(bad)  
  4189a1:	jno    0x418959
  4189a3:	mov    edx,0x6d76fc64
  4189a8:	jge    0x418a13
  4189aa:	mov    dh,0x2e
  4189ac:	pop    eax
  4189ad:	adc    al,BYTE PTR [esi]
  4189af:	lahf   
  4189b0:	inc    esp
  4189b1:	mov    ch,cl
  4189b3:	adc    al,0x79
  4189b5:	cs ins BYTE PTR es:[edi],dx
  4189b7:	popa   
  4189b8:	fidiv  DWORD PTR [esi+eiz*4-0x40677eb6]
  4189bf:	add    ebx,DWORD PTR [esi]
  4189c1:	sub    al,0xdc
  4189c3:	jmp    0x418982
  4189c5:	jmp    0x103f00ef
  4189ca:	jp     0x418a08
  4189cc:	cld    
  4189cd:	les    edi,FWORD PTR [esi]
  4189cf:	cmp    bh,bl
  4189d1:	cmp    edx,edi
  4189d3:	and    al,0x76
  4189d5:	push   0x589525c1
  4189da:	mov    WORD PTR [edx],?
  4189dc:	dec    edx
  4189dd:	xor    eax,0xf4c0c325
  4189e2:	or     dl,ch
  4189e4:	fist   WORD PTR [edi-0x35]
  4189e7:	mov    bh,0x62
  4189e9:	push   edi
  4189ea:	retf   0x3401
  4189ed:	push   cs
  4189ee:	(bad)
  4189f1:	int    0x0
  4189f3:	mov    dl,0xe1
  4189f5:	mov    ds:0x1fbedb60,al
  4189fa:	or     al,0x96
  4189fd:	mov    edx,0xa823481f
  418a02:	js     0x25a61318
  418a08:	cmovb  esp,DWORD PTR [esi-0x24576272]
  418a0f:	jno    0x418a3a
  418a11:	(bad)
  418a14:	mov    ebp,edi
  418a16:	pop    ss
  418a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a18:	test   al,0xc2
  418a1a:	lea    esp,[esp+eax*4+0x776a42a9]
  418a21:	pop    ss
  418a22:	daa    
  418a23:	xor    al,0xc4
  418a25:	dec    edi
  418a26:	aam    0x24
  418a28:	mov    BYTE PTR [esi-0x3278359c],cl
  418a2e:	add    ecx,ebp
  418a30:	out    0x7e,eax
  418a32:	mov    BYTE PTR [edi+0x611b0944],bh
  418a38:	push   edx
  418a39:	cmp    al,0xf3
  418a3b:	inc    edi
  418a3c:	ror    DWORD PTR [edx-0x13],cl
  418a3f:	jnp    0x418a01
  418a41:	ss xor al,0x1d
  418a44:	cmp    ecx,DWORD PTR [edi]
  418a46:	push   eax
  418a47:	mov    ecx,0x62632d13
  418a4c:	sub    eax,0x4965dbc2
  418a51:	push   eax
  418a52:	rol    eax,cl
  418a54:	icebp  
  418a55:	push   esi
  418a56:	imul   ebx,DWORD PTR [esi+0x4b],0x38
  418a5a:	fist   WORD PTR [ebp+0x6f]
  418a5d:	out    0xe,al
  418a5f:	ins    BYTE PTR es:[edi],dx
  418a60:	(bad)  
  418a61:	fcomp  QWORD PTR [eax-0x27315b55]
  418a67:	hlt    
  418a68:	ret    0xc505
  418a6b:	pop    eax
  418a6c:	clc    
  418a6d:	pop    ebp
  418a6e:	out    dx,eax
  418a6f:	popa   
  418a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a71:	bound  eax,QWORD PTR [ebp-0x588bcc8d]
  418a77:	add    cl,BYTE PTR [eax-0x26]
  418a7a:	xchg   edi,eax
  418a7b:	cmp    eax,0x5fe9c5b0
  418a80:	je     0x418a68
  418a82:	dec    ecx
  418a83:	nop
  418a84:	in     eax,dx
  418a85:	in     eax,0x63
  418a87:	xchg   ebx,eax
  418a88:	jnp    0x418a2d
  418a8a:	sub    DWORD PTR [edi],esi
  418a8c:	xchg   ebx,eax
  418a8d:	ja     0x418a11
  418a8f:	idiv   BYTE PTR [ebp+0x31]
  418a92:	dec    eax
  418a93:	mov    ds:0x32be5a3f,eax
  418a98:	hlt    
  418a99:	repnz mov esi,db2
  418a9d:	fmulp  st(0),st
  418a9f:	jmp    0xf2dcd2f9
  418aa4:	jp     0x418a41
  418aa6:	ror    BYTE PTR [edx+0x2e24ef5],1
  418aac:	leave  
  418aad:	mov    al,0x23
  418aaf:	mov    esp,0x7f8b981c
  418ab4:	mov    ah,0x84
  418ab6:	loop   0x418a5f
  418ab8:	jl     0x418ab6
  418aba:	out    dx,al
  418abb:	mov    al,0x56
  418abd:	arpl   cx,dx
  418abf:	inc    eax
  418ac0:	xchg   BYTE PTR ds:0x949280e2,cl
  418ac6:	and    eax,0x83e8e05f
  418acb:	mov    ss,WORD PTR [esi]
  418acd:	dec    eax
  418acf:	or     al,0x3b
  418ad1:	add    al,0x87
  418ad3:	xor    DWORD PTR [edx],0x69
  418ad6:	fucomi st,st(4)
  418ad8:	lds    ebp,FWORD PTR [esi+0x3e]
  418adb:	xchg   ebp,eax
  418adc:	adc    DWORD PTR [ecx+0x77f0a30c],esi
  418ae2:	xor    ebx,DWORD PTR [ecx-0x3f]
  418ae5:	jbe    0x418a77
  418ae7:	mov    cs,WORD PTR [esi+esi*2+0x2c]
  418aeb:	je     0x418a9c
  418aed:	mov    ch,0x66
  418aef:	xor    DWORD PTR [ecx],esi
  418af1:	sbb    DWORD PTR [edi-0x39],ecx
  418af4:	retf   0x17da
  418af7:	mov    dl,0x7
  418af9:	mov    WORD PTR [esi-0x7b7ba7c],es
  418aff:	sbb    dl,BYTE PTR [ecx+0x1ee75e93]
  418b05:	push   0x3fd40af6
  418b0a:	sub    ebx,ebx
  418b0c:	ins    DWORD PTR es:[edi],dx
  418b0d:	shl    BYTE PTR [ebp+0x7ab291e7],cl
  418b13:	adc    ecx,DWORD PTR [ebx-0x7304d68c]
  418b19:	popa   
  418b1a:	(bad)  
  418b1b:	jne    0x418af2
  418b1d:	(bad)
  418b20:	dec    eax
  418b21:	xor    al,0x96
  418b23:	adc    eax,0xab699c8d
  418b28:	inc    ebp
  418b29:	adc    eax,0xd362a137
  418b2e:	mov    DWORD PTR [esi+ecx*8+0x76],0x2513c226
  418b36:	cmp    DWORD PTR ds:0xdab5ea50,esp
  418b3c:	shl    ch,cl
  418b3e:	int3   
  418b3f:	sub    al,BYTE PTR ds:0x165c954b
  418b45:	mov    edx,0x833af1b5
  418b4a:	adc    ebp,esi
  418b4c:	mov    dh,0xc7
  418b4e:	test   BYTE PTR [ebx+0x3b9b9d29],0x72
  418b55:	fwait
  418b56:	add    edi,edx
  418b58:	and    eax,0xf2b7f1f
  418b5d:	loop   0x418b95
  418b5f:	cmp    al,0x3
  418b61:	fwait
  418b62:	out    dx,eax
  418b63:	(bad)  
  418b64:	mov    ch,0x7e
  418b66:	bswap  ebp
  418b68:	adc    eax,0xca419003
  418b6d:	jmp    0x86c7:0xe68851cb
  418b74:	cmp    ebx,DWORD PTR [edi-0x8]
  418b77:	repz inc ebx
  418b79:	push   es
  418b7a:	sbb    dh,BYTE PTR [edx]
  418b7c:	ret    
  418b7d:	sbb    ebp,DWORD PTR [eax-0x11]
  418b80:	jns    0x418ba5
  418b82:	inc    edx
  418b83:	aaa    
  418b84:	in     eax,0xbd
  418b86:	dec    esp
  418b87:	sub    cl,ah
  418b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b8a:	push   ss
  418b8b:	out    dx,eax
  418b8c:	dec    ecx
  418b8d:	mov    ch,0x14
  418b8f:	mov    ch,BYTE PTR [esi+0xe]
  418b92:	mov    dh,0xf0
  418b94:	adc    ecx,DWORD PTR [ebp-0x5f5402c2]
  418b9a:	cdq    
  418b9b:	stos   DWORD PTR es:[edi],eax
  418b9c:	mov    ebx,DWORD PTR [esi]
  418b9e:	aam    0x14
  418ba0:	dec    ebx
  418ba1:	or     DWORD PTR [ecx+0x7d6a328b],esp
  418ba7:	ret    
  418ba8:	inc    esp
  418ba9:	adc    edx,ebp
  418bab:	arpl   WORD PTR [ecx-0x5b],si
  418bae:	sbb    al,0x3d
  418bb0:	(bad)  
  418bb1:	leave  
  418bb2:	jne    0x418bc4
  418bb4:	sub    DWORD PTR [ebx-0x7bb82c7e],0x13d8811e
  418bbe:	mov    esp,0xbd1d7ff7
  418bc3:	ins    DWORD PTR es:[edi],dx
  418bc4:	inc    ecx
  418bc5:	icebp  
  418bc6:	dec    esi
  418bc7:	retf   0xa3ba
  418bca:	aam    0xdd
  418bcc:	push   ds
  418bcd:	and    eax,DWORD PTR [esi]
  418bcf:	pop    ecx
  418bd0:	xchg   DWORD PTR [eax],ebp
  418bd2:	mov    esi,0x6314a972
  418bd7:	adc    DWORD PTR [eax-0x4558ca25],edx
  418bdd:	mov    edx,0x54aa3f6f
  418be2:	pop    ebx
  418be3:	pop    esp
  418be4:	fist   DWORD PTR [ecx]
  418be6:	xor    DWORD PTR [edx+0x4fab7336],edi
  418bec:	ds aaa 
  418bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bef:	dec    esi
  418bf0:	pop    ds
  418bf1:	push   cs
  418bf2:	inc    edx
  418bf3:	in     al,0x7e
  418bf5:	and    eax,0x98886e6c
  418bfa:	leave  
  418bfb:	adc    BYTE PTR [ecx-0x5372ac2c],cl
  418c01:	add    ebp,eax
  418c03:	out    dx,al
  418c04:	sub    al,0x27
  418c06:	inc    ebx
  418c07:	lods   eax,DWORD PTR ds:[esi]
  418c08:	mov    edx,0xcc7057f1
  418c0d:	in     al,dx
  418c0e:	pop    ecx
  418c0f:	cmp    eax,0x52d085ba
  418c14:	mov    fs,WORD PTR [esi-0x21]
  418c17:	pop    ebp
  418c18:	das    
  418c19:	push   0xffffff86
  418c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c1c:	fldcw  WORD PTR [ebx-0x42]
  418c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c20:	or     DWORD PTR [edx+ebp*8+0x28b2b753],edi
  418c27:	shl    BYTE PTR [esi+0x12],0x36
  418c2b:	sbb    bl,BYTE PTR [ebp-0x24]
  418c2e:	into   
  418c2f:	sub    DWORD PTR [ecx+0x1c],edx
  418c32:	rcr    BYTE PTR [esi+0x3b5d2234],0x62
  418c39:	mov    ecx,0xf82fc92
  418c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3f:	aas    
  418c40:	xchg   edx,eax
  418c41:	addr16 push edx
  418c43:	fnsave [eax]
  418c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c46:	dec    ecx
  418c47:	dec    ecx
  418c48:	lock jns 0x418bf1
  418c4b:	cwde   
  418c4c:	ja     0x418c3f
  418c4e:	int3   
  418c4f:	dec    ebx
  418c50:	add    dl,BYTE PTR [ebp-0xf]
  418c53:	fucomi st,st(3)
  418c55:	push   esp
  418c56:	push   ss
  418c57:	xchg   edx,eax
  418c58:	out    0xb7,eax
  418c5a:	dec    esp
  418c5b:	mov    ds:0x40379bae,al
  418c60:	shl    DWORD PTR [edi+ebx*4-0x1cf4f360],cl
  418c67:	xchg   al,bh
  418c69:	mov    ecx,0xa924acc3
  418c6e:	inc    ecx
  418c6f:	stos   BYTE PTR es:[edi],al
  418c70:	fstp   TBYTE PTR [ecx]
  418c72:	xor    ebp,DWORD PTR [esi*1-0x5755162e]
  418c79:	push   0x12
  418c7b:	lea    ebp,[edi-0x43]
  418c7e:	stos   DWORD PTR es:[edi],eax
  418c7f:	ret    0x5e1e
  418c82:	aam    0x5b
  418c84:	and    ah,cl
  418c86:	jp     0x418cb8
  418c88:	fs in  eax,dx
  418c8a:	mov    WORD PTR [esi+ebx*1-0x2f],gs
  418c8e:	popa   
  418c8f:	or     edx,DWORD PTR [esp+esi*1-0x2fb1b5b4]
  418c96:	es push cs
  418c98:	mov    ebp,0x4e6396c5
  418c9d:	inc    ebx
  418c9e:	push   ebp
  418c9f:	pop    ds
  418ca0:	mov    ecx,0xb0e692df
  418ca5:	ds ja  0x418d1a
  418ca8:	mov    DWORD PTR [ebx],ebp
  418caa:	test   eax,0xe2067727
  418caf:	xchg   esi,eax
  418cb0:	dec    ecx
  418cb1:	sub    DWORD PTR [edx-0x59],esi
  418cb4:	in     al,0xfc
  418cb6:	loopne 0x418c8a
  418cb8:	or     BYTE PTR [ebx-0x3839c9fd],cl
  418cbe:	mov    dh,0x73
  418cc0:	inc    edi
  418cc1:	add    DWORD PTR [edi],ecx
  418cc3:	add    eax,0xc9fb2fb8
  418cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc9:	mov    ebx,DWORD PTR [esi+0x34]
  418ccc:	pop    ss
  418ccd:	or     eax,0xbac3d3e4
  418cd2:	pcmpgtw mm7,QWORD PTR [ecx]
  418cd5:	inc    ecx
  418cd6:	push   edx
  418cd7:	cmp    BYTE PTR [edx+0x2ca31455],0xb5
  418cde:	pop    edi
  418cdf:	inc    esi
  418ce0:	push   0x2188c4da
  418ce5:	out    dx,al
  418ce6:	fistp  DWORD PTR [edx]
  418ce8:	daa    
  418ce9:	and    al,0x95
  418ceb:	sub    BYTE PTR [ecx],0x9b
  418cee:	jbe    0x418d19
  418cf0:	sub    BYTE PTR [esi-0x29c2f2c9],al
  418cf6:	mov    esp,0xcb887566
  418cfb:	out    dx,eax
  418cfc:	xchg   edi,eax
  418cfd:	in     eax,dx
  418cfe:	push   0xfffffffc
  418d00:	fdivr  QWORD PTR [eax+0x2]
  418d03:	or     eax,0x81881d52
  418d08:	(bad)  
  418d09:	xchg   ecx,eax
  418d0a:	pusha  
  418d0b:	xor    bh,0xf7
  418d0e:	test   edi,esp
  418d10:	call   0x445a:0x68e39797
  418d17:	(bad)
  418d1c:	data16 aad 0xab
  418d1f:	sar    DWORD PTR [ecx+0x70],0x19
  418d23:	(bad)  
  418d24:	lods   eax,DWORD PTR ds:[esi]
  418d25:	xor    esi,0x90372365
  418d2b:	inc    ebx
  418d2c:	ret    0x612b
  418d2f:	aad    0x9d
  418d31:	xchg   BYTE PTR [edi+0x52],al
  418d34:	inc    eax
  418d35:	in     al,0xca
  418d37:	iret   
  418d38:	or     DWORD PTR [eax+eax*8-0x3078b982],0x4defbecb
  418d43:	mov    al,ds:0xe19d55e2
  418d48:	or     BYTE PTR [ecx],cl
  418d4a:	sti    
  418d4b:	adc    cl,ch
  418d4d:	jno    0x418ce5
  418d4f:	cmc    
  418d50:	pusha  
  418d51:	adc    esp,DWORD PTR [ecx+0x76db0387]
  418d57:	inc    edi
  418d58:	addr16 jg 0x418d64
  418d5b:	inc    esp
  418d5c:	out    0x52,eax
  418d5e:	dec    esp
  418d5f:	aad    0x2c
  418d61:	dec    eax
  418d62:	xor    DWORD PTR [edx-0x4a6a0653],esp
  418d68:	adc    DWORD PTR [edi-0x7762bb60],esi
  418d6e:	pop    ds
  418d6f:	xor    eax,0x1e56f998
  418d74:	or     BYTE PTR [eax+0x466a2ef0],cl
  418d7a:	xor    eax,0x1b93b2e4
  418d7f:	pop    esi
  418d80:	add    dh,al
  418d82:	test   dl,al
  418d84:	icebp  
  418d85:	jmp    0xcad209b4
  418d8a:	xor    dl,BYTE PTR [esi+0x5a]
  418d8d:	push   gs
  418d8f:	into   
  418d90:	clc    
  418d91:	out    dx,eax
  418d92:	xor    eax,0xda326c59
  418d97:	sbb    al,0x24
  418d99:	sti    
  418d9a:	mov    bh,0x78
  418d9c:	fldcw  WORD PTR [ecx]
  418d9e:	lahf   
  418d9f:	adc    bl,BYTE PTR [ebx+0x4382a88e]
  418da5:	mov    bh,0x54
  418da7:	scas   al,BYTE PTR es:[edi]
  418da8:	loopne 0x418d5c
  418daa:	push   0x6cc4dfd1
  418daf:	jmp    0x418d95
  418db1:	pushf  
  418db2:	inc    ebp
  418db3:	pop    edx
  418db4:	out    0x40,al
  418db6:	adc    eax,DWORD PTR [eax]
  418db8:	mul    DWORD PTR [ebx-0x7d45e313]
  418dbe:	xlat   BYTE PTR ds:[ebx]
  418dbf:	lods   al,BYTE PTR ds:[esi]
  418dc0:	xor    al,dh
  418dc2:	js     0x418e24
  418dc4:	inc    ecx
  418dc5:	call   0xe09a:0xc0dabcde
  418dcc:	and    al,0x64
  418dce:	test   DWORD PTR [ecx+0x96c60e9],ebp
  418dd4:	mov    ebx,0x16c71732
  418dd9:	pusha  
  418dda:	dec    ebp
  418ddb:	mov    WORD PTR [edi-0x56],cs
  418dde:	stc    
  418ddf:	in     eax,0x50
  418de1:	dec    ebx
  418de2:	xchg   esp,eax
  418de3:	loopne 0x418d9b
  418de5:	or     DWORD PTR [ebp+0x54b0dc55],ebp
  418deb:	mov    bl,0xcf
  418ded:	adc    al,0x48
  418def:	mov    bl,BYTE PTR [ecx+0x514e615d]
  418df5:	pushf  
  418df6:	je     0x418e0b
  418df8:	les    eax,FWORD PTR [ecx-0x51]
  418dfb:	ins    BYTE PTR es:[edi],dx
  418dfc:	pop    eax
  418dfd:	gs cmp eax,0xc2561ca0
  418e03:	mov    ecx,0xdc353c08
  418e08:	mov    bl,0x77
  418e0a:	pop    ds
  418e0b:	inc    edi
  418e0c:	leave  
  418e0d:	inc    ebx
  418e0e:	inc    ebx
  418e0f:	cli    
  418e10:	loop   0x418e58
  418e12:	fsubrp st(7),st
  418e14:	mov    al,ds:0x874bf9e8
  418e19:	sbb    bl,BYTE PTR [ecx+0x52e90e26]
  418e1f:	push   0xf42d6578
  418e24:	div    BYTE PTR [edx]
  418e26:	jae    0x418df0
  418e28:	das    
  418e29:	pushf  
  418e2a:	mov    ebp,0xbd85f2c3
  418e2f:	adc    cl,dl
  418e31:	call   0x9fefc53a
  418e36:	ss inc esi
  418e38:	jb     0x418e20
  418e3a:	or     al,0xe3
  418e3c:	xchg   BYTE PTR [edi-0x2a],cl
  418e3f:	data16 and BYTE PTR [eax],bl
  418e42:	xchg   BYTE PTR [edi],bh
  418e44:	or     ch,BYTE PTR [eax+0xc53bcc4]
  418e4a:	mov    edx,0x61b38ec8
  418e4f:	mov    edx,0xbe05051f
  418e54:	add    esi,DWORD PTR ds:0xd67309a3
  418e5a:	dec    edx
  418e5b:	into   
  418e5c:	je     0x418eaf
  418e5e:	jmp    0x42cfc90f
  418e63:	scas   eax,DWORD PTR es:[edi]
  418e64:	jnp    0x418ee4
  418e66:	and    esi,DWORD PTR [edx+0x35]
  418e69:	push   esi
  418e6a:	push   ebp
  418e6b:	pop    ebp
  418e6c:	sahf   
  418e6d:	mov    dl,0x15
  418e6f:	test   eax,0xe0b597c3
  418e74:	push   0x6b06cbd4
  418e79:	clc    
  418e7a:	push   0xed6b77d1
  418e7f:	repnz adc BYTE PTR [eax+eax*2],cl
  418e83:	mov    dh,0x63
  418e85:	or     ah,BYTE PTR [esi]
  418e87:	sbb    eax,0x417a0ef9
  418e8c:	mov    eax,0x186f161d
  418e91:	idiv   DWORD PTR [ecx+eax*2]
  418e94:	scas   al,BYTE PTR es:[edi]
  418e95:	xchg   edx,eax
  418e96:	mov    dl,0x57
  418e98:	add    eax,0x7adaa146
  418e9d:	inc    ecx
  418e9e:	cwde   
  418e9f:	sbb    BYTE PTR [ebp+0x0],ah
  418ea2:	les    ecx,FWORD PTR [ecx]
  418ea4:	lods   eax,DWORD PTR ds:[esi]
  418ea5:	icebp  
  418ea6:	push   eax
  418ea7:	dec    ecx
  418ea8:	retf   0x4784
  418eab:	or     ecx,edi
  418ead:	mov    WORD PTR [ecx],ds
  418eaf:	imul   edx,ebx,0xffffffce
  418eb2:	mov    esi,0x78aa42a0
  418eb7:	mov    ebp,DWORD PTR [eax+eax*8]
  418eba:	adc    DWORD PTR [eax+0xd],edi
  418ebd:	dec    edx
  418ebe:	jl     0x418e94
  418ec0:	pop    ss
  418ec1:	dec    edi
  418ec2:	sub    DWORD PTR [edi-0x6ad3b79c],eax
  418ec8:	dec    esp
  418ec9:	xchg   ecx,eax
  418eca:	ror    bh,cl
  418ecc:	ins    DWORD PTR es:[edi],dx
  418ecd:	dec    edx
  418ece:	and    al,0xbc
  418ed0:	lea    esi,[ecx+0x167feec0]
  418ed6:	loopne 0x418f43
  418ed8:	cmp    edi,DWORD PTR [ebx+0x7e]
  418edb:	rcl    ebp,cl
  418edd:	push   0x2fc18b9d
  418ee2:	cdq    
  418ee3:	loopne 0x418f3f
  418ee5:	push   ss
  418ee6:	cmp    al,0xcb
  418ee8:	ret    0xacd
  418eeb:	retf   
  418eec:	stos   BYTE PTR es:[edi],al
  418eed:	nop
  418eee:	jecxz  0x418ee2
  418ef0:	jecxz  0x418e97
  418ef2:	sub    ebx,DWORD PTR [esi+ecx*1+0x5e]
  418ef6:	dec    ecx
  418ef7:	add    al,0x24
  418ef9:	fs jmp 0xf2c77214
  418eff:	xchg   BYTE PTR [ebx-0x39ba2b35],cl
  418f05:	xor    BYTE PTR [ebx+esi*1+0x52],dh
  418f09:	cmp    eax,0x4df3720d
  418f0e:	pop    es
  418f0f:	add    eax,0xbc513897
  418f14:	js     0x418eb5
  418f16:	fldenv [edi]
  418f18:	mov    DWORD PTR [ebx+ebx*8],edi
  418f1b:	rcl    BYTE PTR [ebx+0x4dc5dd95],cl
  418f21:	scas   al,BYTE PTR es:[edi]
  418f22:	gs test al,0x98
  418f25:	ss std 
  418f27:	(bad)  
  418f28:	cli    
  418f29:	lds    ebp,FWORD PTR [eax-0x4e9cb35a]
  418f2f:	rcl    esi,0xc1
  418f32:	(bad)  
  418f33:	pushf  
  418f34:	sub    al,0xdc
  418f36:	retf   0x8591
  418f39:	and    esp,edx
  418f3b:	sbb    DWORD PTR [edx-0x1d61910f],edi
  418f41:	and    BYTE PTR [esi+edi*1-0x3a],ah
  418f45:	xor    al,0xda
  418f47:	in     ax,0xe6
  418f4a:	cmp    esi,DWORD PTR [edi-0x39a5641c]
  418f50:	rol    DWORD PTR [ebp-0x7cd253c1],1
  418f56:	mov    edi,0xbcfe77fb
  418f5b:	adc    dh,BYTE PTR [ebx+ecx*2-0x267daadc]
  418f62:	adc    BYTE PTR [ecx],0xa5
  418f65:	imul   esi,DWORD PTR [edx+0x2ad183aa],0x8e756545
  418f6f:	xchg   DWORD PTR [ecx],esp
  418f71:	loop   0x418fda
  418f73:	sbb    eax,eax
  418f75:	add    eax,0x34f0e43b
  418f7a:	ror    BYTE PTR [edi],0x78
  418f7d:	lea    edx,ds:0x38961978
  418f83:	xor    dl,BYTE PTR [esi-0x1e46ef97]
  418f89:	pop    esi
  418f8a:	jnp    0x418fef
  418f8c:	pushf  
  418f8d:	push   ds
  418f8e:	fild   QWORD PTR [esp+ebx*4-0x4c]
  418f92:	lods   eax,DWORD PTR ds:[esi]
  418f93:	jno    0x418f5f
  418f95:	sbb    bl,ah
  418f97:	jmp    0x1257:0x3fc5116c
  418f9e:	dec    edi
  418f9f:	xchg   edi,eax
  418fa0:	je     0x418fb2
  418fa2:	pop    esp
  418fa3:	push   ds
  418fa4:	lahf   
  418fa5:	mov    BYTE PTR [eax+0x6711101b],bh
  418fab:	lods   al,BYTE PTR ds:[esi]
  418fac:	loopne 0x418f36
  418fae:	(bad)  
  418faf:	fstp   TBYTE PTR [ebx-0xa]
  418fb2:	xor    edx,DWORD PTR [ecx+0x55033c9d]
  418fb8:	cld    
  418fb9:	vpaddb ymm6,ymm7,ymm3
  418fbd:	shr    BYTE PTR [edi],cl
  418fbf:	pop    esp
  418fc0:	xchg   ecx,eax
  418fc1:	mov    al,ds:0xcaf51145
  418fc6:	mov    ds:0x2477b597,al
  418fcb:	retf   0x560a
  418fce:	push   ebp
  418fcf:	cwde   
  418fd0:	cld    
  418fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd3:	div    BYTE PTR [ebp+ecx*1+0x4edc202f]
  418fda:	jge    0x418fb8
  418fdc:	or     al,0x22
  418fde:	push   ebx
  418fdf:	imul   edi,DWORD PTR [ebx-0x71b877c6],0xffffff91
  418fe6:	mov    ah,0xa4
  418fe8:	mov    cl,BYTE PTR [ecx]
  418fea:	xlat   BYTE PTR ds:[ebx]
  418feb:	sbb    DWORD PTR [esi],ebx
  418fed:	aam    0x98
  418fef:	dec    ecx
  418ff0:	test   al,0x18
  418ff2:	jbe    0x419012
  418ff4:	stos   DWORD PTR es:[edi],eax
  418ff5:	adc    al,0x77
  418ff7:	mov    bh,0xc7
  418ff9:	je     0x41903f
  418ffb:	ja     0x41904a
  418ffd:	or     al,BYTE PTR [eax+ebp*2-0x320bfeed]
  419004:	push   esp
  419005:	push   ds
  419006:	fdiv   QWORD PTR [eax+0x15]
  419009:	fcmove st,st(3)
  41900b:	push   cs
  41900c:	or     BYTE PTR [esi+0x6b],al
  41900f:	popa   
  419010:	data16 and bh,BYTE PTR [ebx-0x51]
  419014:	pusha  
  419015:	fisub  DWORD PTR [ecx+ecx*4+0x70639523]
  41901c:	push   cs
  41901d:	inc    eax
  41901e:	and    eax,0x2b446be7
  419023:	mov    cl,0x67
  419025:	and    eax,0xea1233ad
  41902a:	mov    eax,ds:0x9d455b84
  41902f:	add    dl,al
  419031:	enter  0x636f,0x2e
  419035:	sub    eax,0xe31939c0
  41903a:	jo     0x4190b1
  41903c:	jmp    0x8624:0x766816af
  419043:	mov    DWORD PTR [edi-0x12],0x992edf30
  41904a:	pop    eax
  41904b:	loope  0x419034
  41904d:	test   al,0xea
  41904f:	inc    esp
  419050:	(bad)  
  419051:	mov    BYTE PTR [edi+0x25e6798d],dh
  419057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419058:	xchg   edi,eax
  419059:	push   cs
  41905a:	ja     0x419032
  41905c:	adc    BYTE PTR [ecx+0x223584cd],cl
  419062:	out    dx,eax
  419063:	jbe    0x41903f
  419065:	(bad)  
  419066:	jne    0x418ffd
  419068:	and    ch,0x93
  41906b:	jg     0x419055
  41906d:	pop    esi
  41906e:	inc    esp
  41906f:	push   esp
  419070:	mov    esp,0x26d4f7d
  419075:	into   
  419076:	in     eax,0x2f
  419078:	pop    eax
  419079:	call   0xba407c77
  41907e:	push   ds
  41907f:	pop    esp
  419080:	loopne 0x419077
  419082:	js     0x4190d9
  419084:	and    edx,DWORD PTR [edi-0x5890984a]
  41908a:	hlt    
  41908b:	enter  0x3754,0xc1
  41908f:	imul   esi,DWORD PTR [edi+0x2c],0x1e4cd2e0
  419096:	inc    DWORD PTR [edx+0x171e5366]
  41909c:	jo     0x41901e
  41909e:	mov    DWORD PTR [eax+eiz*8+0x72],edx
  4190a2:	pop    es
  4190a3:	pop    ebp
  4190a4:	loope  0x419115
  4190a6:	iret   
  4190a7:	cmp    DWORD PTR [edx],esi
  4190a9:	and    edx,esp
  4190ab:	fdiv   DWORD PTR [esi+0x371f7a5c]
  4190b1:	jmp    0xd525:0x65f888f7
  4190b8:	data16 loop 0x419065
  4190bb:	pop    ds
  4190bc:	pop    ebp
  4190bd:	jge    0xe9b01a6f
  4190c3:	int    0x9a
  4190c5:	in     al,dx
  4190c6:	pop    esi
  4190c7:	pusha  
  4190c8:	fisttp QWORD PTR [edx+edx*8+0x420c7966]
  4190cf:	sub    eax,0x156b414f
  4190d4:	outs   dx,BYTE PTR ds:[esi]
  4190d5:	cmp    al,0x1b
  4190d7:	fwait
  4190d8:	ds mov ecx,0xc3652591
  4190de:	push   esp
  4190df:	retf   
  4190e0:	ins    DWORD PTR es:[edi],dx
  4190e1:	stc    
  4190e2:	fstp   DWORD PTR [ebp+0x6189034a]
  4190e8:	push   cs
  4190e9:	sub    eax,0x580d7e70
  4190ee:	jbe    0x419097
  4190f0:	push   ebx
  4190f1:	add    eax,0x2f004a53
  4190f6:	cmp    al,0x9e
  4190f8:	adc    DWORD PTR [edi-0x46fe9c40],edx
  4190fe:	pop    ebp
  4190ff:	fisttp WORD PTR [ebp-0x52ad11b]
  419105:	leave  
  419106:	fcomp  DWORD PTR [eax]
  419108:	adc    DWORD PTR [eax],ebx
  41910a:	scas   eax,DWORD PTR es:[edi]
  41910b:	jecxz  0x4190b5
  41910d:	mul    DWORD PTR [eax+eiz*1-0xf2418bf]
  419114:	push   esi
  419115:	cmp    eax,0xcbba1369
  41911a:	push   edi
  41911b:	cmp    al,0x2e
  41911d:	pop    ebx
  41911e:	xchg   DWORD PTR [esi],esi
  419120:	xchg   ecx,eax
  419121:	std    
  419122:	dec    esp
  419123:	dec    ebp
  419124:	shr    ch,1
  419126:	inc    esi
  419127:	lods   al,BYTE PTR ds:[esi]
  419128:	loope  0x41914f
  41912a:	adc    BYTE PTR [ebx-0x43f04d3e],ah
  419130:	lea    ecx,[ebp+0x3084a16e]
  419136:	mov    ch,0x95
  419138:	loopne 0x4191a5
  41913a:	inc    edx
  41913b:	ja     0x4190fc
  41913d:	xchg   edi,eax
  41913e:	jmp    0x42f4:0x2a760072
  419145:	add    DWORD PTR ds:0x88b78335,ebx
  41914b:	outs   dx,BYTE PTR ds:[esi]
  41914c:	and    edi,DWORD PTR [eax+edi*2]
  41914f:	pop    es
  419150:	mov    ecx,0x84a849f0
  419155:	mov    ch,0xaf
  419157:	lods   eax,DWORD PTR ds:[esi]
  419158:	pop    esp
  419159:	xor    eax,0x97f0decd
  41915e:	pop    ebx
  41915f:	ror    bl,cl
  419161:	gs sti 
  419163:	cmp    eax,0xe80b199c
  419168:	(bad)  
  419169:	fwait
  41916a:	scas   al,BYTE PTR es:[edi]
  41916b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41916c:	iret   
  41916d:	jecxz  0x419106
  41916f:	inc    ebx
  419170:	jno    0x4191b1
  419172:	xor    bl,ch
  419174:	adc    DWORD PTR [ebx-0x47],ebx
  419177:	lea    ebx,[edx]
  419179:	jmp    FWORD PTR [ecx+0x297bf6ae]
  41917f:	mov    ds:0x3fd7da57,eax
  419184:	add    cl,BYTE PTR [ecx]
  419186:	repz cmp BYTE PTR ds:0x9a4f20c4,dl
  41918d:	mov    dl,0x54
  41918f:	fild   WORD PTR [edi-0x3f]
  419192:	pop    esi
  419193:	and    DWORD PTR ds:[ebp-0x34],edi
  419197:	add    dl,ah
  419199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41919a:	in     eax,dx
  41919b:	cmp    BYTE PTR [ecx],cl
  41919d:	mov    bl,dh
  41919f:	shr    cl,1
  4191a1:	les    ecx,FWORD PTR [esi-0x19]
  4191a4:	aam    0xfb
  4191a6:	mov    esi,0x2d628a62
  4191ab:	ficom  DWORD PTR [ebx+0x30]
  4191ae:	(bad)  
  4191af:	jge    0x4191c8
  4191b1:	fcmovnb st,st(7)
  4191b3:	inc    edi
  4191b4:	add    BYTE PTR [ebx],dl
  4191b6:	nop
  4191b7:	push   es
  4191b8:	pop    ss
  4191b9:	adc    BYTE PTR [esi+0x1a],dh
  4191bc:	scas   eax,DWORD PTR es:[edi]
  4191bd:	fimul  DWORD PTR [edi-0x58e0a875]
  4191c3:	and    al,BYTE PTR [esi+0x1fd92ed8]
  4191c9:	ja     0x4191fd
  4191cb:	aam    0xe3
  4191cd:	sbb    DWORD PTR [esi-0x19e82f96],esp
  4191d3:	push   edi
  4191d4:	dec    esi
  4191d5:	pop    ss
  4191d6:	inc    edx
  4191d7:	or     DWORD PTR [ebp+0x7d],edx
  4191da:	(bad)  
  4191dc:	xchg   DWORD PTR ds:0x1b0e67d4,edi
  4191e2:	test   eax,0x3a92bc98
  4191e7:	jge    0x4191a4
  4191e9:	mov    dh,0x9e
  4191eb:	mov    edx,0x803e720
  4191f0:	mov    al,fs:0xa6f66b68
  4191f6:	inc    edx
  4191f7:	or     eax,0x54ffc6c4
  4191fc:	sahf   
  4191fd:	or     DWORD PTR [eax],0xfffffff0
  419200:	popf   
  419201:	(bad)  
  419202:	xor    dl,BYTE PTR [eax]
  419204:	xchg   edi,eax
  419205:	mov    dl,0x2b
  419207:	loopne 0x419203
  419209:	mov    ecx,0x8f396e5b
  41920e:	push   ebp
  41920f:	xor    DWORD PTR [edx+0x2],0x67
  419213:	dec    eax
  419214:	daa    
  419215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419216:	jmp    DWORD PTR [edx-0x47]
  419219:	les    esp,FWORD PTR [edx+0x753c68f3]
  41921f:	pusha  
  419220:	mov    cl,0x6e
  419222:	pop    es
  419223:	adc    ah,BYTE PTR [esi+0x6d]
  419226:	jno    0x41924f
  419228:	mov    ch,BYTE PTR [ecx+edx*4+0x7ab74744]
  41922f:	ret    0xee49
  419232:	push   edx
  419233:	pop    ds
  419234:	dec    ebx
  419235:	cs (bad) 
  419237:	into   
  419238:	pushf  
  419239:	ret    0xd34c
  41923c:	push   es
  41923d:	jl     0x419282
  41923f:	mov    esi,0x627b3345
  419244:	and    BYTE PTR [edi],dh
  419246:	inc    edx
  419247:	lds    edi,FWORD PTR [ebx-0x700790c9]
  41924d:	push   ebp
  41924e:	pop    eax
  41924f:	sahf   
  419250:	add    ebp,DWORD PTR [edx]
  419252:	cmp    DWORD PTR [edx],edi
  419254:	mov    ebp,0x2cb857f5
  419259:	pushf  
  41925a:	dec    ecx
  41925b:	mov    al,0x5b
  41925d:	add    BYTE PTR [ecx+ebp*8-0x2704b9d],cl
  419264:	and    eax,0x3aee0c83
  419269:	leave  
  41926a:	cmp    BYTE PTR [esi-0x42],bl
  41926d:	xchg   ebp,eax
  41926e:	mov    dl,0x58
  419270:	in     eax,0x70
  419272:	mov    esi,cs
  419274:	adc    DWORD PTR cs:[ecx],ebp
  419277:	jbe    0x4191fb
  419279:	outs   dx,DWORD PTR ds:[esi]
  41927a:	pop    ebx
  41927b:	in     eax,0x8
  41927d:	sub    eax,0x4ecd09e5
  419282:	push   ebx
  419283:	ret    0x8fa4
  419286:	(bad)  
  419287:	cmp    al,0x8c
  419289:	enter  0x7830,0xd
  41928d:	std    
  41928e:	shl    edx,1
  419290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419291:	xchg   edx,eax
  419292:	push   esi
  419293:	cld    
  419294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419295:	ja     0x4192b0
  419297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419298:	xor    BYTE PTR [edi-0x12],0x9
  41929c:	mov    dh,0x48
  41929e:	adc    eax,0xc4804ae0
  4192a3:	sub    BYTE PTR [edx+edx*8+0x5438520c],ch
  4192aa:	cmp    eax,0xa582f1aa
  4192af:	aam    0x1b
  4192b1:	fprem1 
  4192b3:	lods   al,BYTE PTR ds:[esi]
  4192b4:	ss cmp al,0xc1
  4192b7:	push   ss
  4192b8:	jmp    0x48c1:0x722241ba
  4192bf:	es (bad) 
  4192c1:	xor    al,0x99
  4192c3:	nop
  4192c4:	rcr    DWORD PTR [eax-0x2d],cl
  4192c7:	or     DWORD PTR [ebp-0x27],eax
  4192ca:	outs   dx,BYTE PTR ds:[esi]
  4192cb:	outs   dx,DWORD PTR ds:[esi]
  4192cc:	inc    ebx
  4192cd:	add    ebp,edx
  4192cf:	pop    esp
  4192d0:	jmp    0x28b75bad
  4192d5:	gs pop edi
  4192d7:	popa   
  4192d8:	test   BYTE PTR [ebp+0x362cf2ba],bh
  4192de:	dec    ecx
  4192df:	ins    DWORD PTR es:[edi],dx
  4192e0:	aam    0x78
  4192e2:	push   eax
  4192e3:	loopne 0x419356
  4192e5:	repz adc BYTE PTR [ebx+0x7c],bl
  4192e9:	mov    ebx,0xff61c760
  4192ee:	sub    eax,0xb84bf27e
  4192f3:	not    bl
  4192f5:	sbb    edi,esp
  4192f7:	push   edi
  4192f8:	test   BYTE PTR ds:0x8f760cb5,dl
  4192fe:	daa    
  4192ff:	jge    0x4192b8
  419301:	dec    ecx
  419302:	and    al,0x35
  419304:	popa   
  419305:	(bad)  
  419306:	pop    ss
  419307:	and    edi,0x43
  41930a:	leave  
  41930b:	and    ebx,DWORD PTR [ebp+0x3b154306]
  419311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419312:	div    DWORD PTR [ebx+0x759715f2]
  419318:	retf   0x7ab4
  41931b:	and    BYTE PTR [edx-0x2f3ff219],cl
  419321:	popa   
  419322:	cmp    eax,0x36be4de3
  419327:	icebp  
  419328:	adc    dh,BYTE PTR [ecx+edx*1+0x37]
  41932c:	mov    bl,0x2d
  41932e:	inc    DWORD PTR [edx+0x3bbca7c4]
  419334:	xchg   edx,eax
  419335:	inc    edx
  419336:	lea    edi,[edi+0x6fc1dcc3]
  41933c:	enter  0x6417,0xb2
  419340:	leave  
  419341:	shr    BYTE PTR [ecx+ebp*2],1
  419344:	or     esp,DWORD PTR [ecx-0x4bef1a36]
  41934a:	repz and al,0xe2
  41934d:	call   0xf8c4:0xf1e16549
  419354:	mov    bl,0x7a
  419356:	adc    bl,BYTE PTR [ecx-0x44]
  419359:	or     ah,BYTE PTR [eax]
  41935b:	mov    ?,eax
  41935d:	sbb    esi,esp
  41935f:	mov    bl,0x19
  419361:	push   es
  419362:	mov    dh,BYTE PTR [esi-0x28b8a2b7]
  419368:	ins    DWORD PTR es:[edi],dx
  419369:	icebp  
  41936a:	cli    
  41936b:	mov    ch,0xfc
  41936d:	retf   
  41936e:	div    BYTE PTR [edi]
  419370:	retf   0x40d2
  419373:	cmp    ebx,DWORD PTR [eax]
  419375:	sub    esp,DWORD PTR [bp+di-0xe67]
  41937a:	xor    BYTE PTR [ebx-0x64b42a5e],dh
  419380:	add    DWORD PTR [edx-0x6daf220e],ebx
  419386:	retf   
  419387:	pop    edx
  419388:	dec    ecx
  419389:	leave  
  41938a:	call   FWORD PTR ds:0x3709ae78
  419390:	repz or DWORD PTR [ecx],ecx
  419393:	adc    ecx,DWORD PTR [ebx-0x58b2fc67]
  419399:	add    DWORD PTR [ecx],ebp
  41939b:	adc    DWORD PTR [ecx-0x45],eax
  41939e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41939f:	outs   dx,DWORD PTR ds:[esi]
  4193a0:	dec    esi
  4193a1:	popa   
  4193a2:	iret   
  4193a3:	mov    edx,eax
  4193a5:	mov    edx,DWORD PTR [ebx+ebx*4-0x20]
  4193a9:	sub    edi,DWORD PTR [ebx+edx*4-0x20]
  4193ad:	test   eax,0xfcef99a2
  4193b2:	xchg   ecx,eax
  4193b3:	xchg   edx,eax
  4193b4:	add    al,0xcf
  4193b6:	stos   DWORD PTR es:[edi],eax
  4193b7:	retf   
  4193b8:	pop    ebp
  4193b9:	jo     0x419415
  4193bb:	pop    esi
  4193bc:	repnz daa 
  4193be:	pusha  
  4193bf:	jns    0x419423
  4193c1:	xor    al,dh
  4193c3:	pop    eax
  4193c4:	mov    eax,ds:0xcf373d6c
  4193c9:	fwait
  4193ca:	in     al,dx
  4193cb:	mov    WORD PTR [ebp-0x27],ds
  4193ce:	cmc    
  4193cf:	outs   dx,DWORD PTR ds:[esi]
  4193d0:	add    al,0x3
  4193d2:	push   cs
  4193d3:	inc    edx
  4193d4:	jmp    0x6a9890d5
  4193d9:	mov    ch,0xcf
  4193db:	push   0x3
  4193dd:	ins    BYTE PTR es:[edi],dx
  4193de:	cmc    
  4193df:	inc    eax
  4193e0:	or     eax,0xa299f034
  4193e5:	mov    ds:0xf0fbf3f,eax
  4193ea:	nop
  4193eb:	sub    BYTE PTR [ebp-0x43830f6d],ch
  4193f1:	arpl   WORD PTR [edi+eax*1-0x11],bx
  4193f5:	mov    bl,0xf3
  4193f7:	mov    BYTE PTR [edi],cl
  4193f9:	jecxz  0x4193a0
  4193fb:	mov    bx,0x1f77
  4193ff:	test   eax,0x7fd19db4
  419404:	dec    ebx
  419405:	and    al,0x42
  419407:	data16 cs mov dh,0x39
  41940b:	push   edx
  41940c:	jae    0x41941f
  41940e:	(bad)  
  419411:	pop    edi
  419412:	xor    ch,BYTE PTR [edi+0x30ca6b0d]
  419418:	dec    esp
  419419:	or     ch,BYTE PTR [ebx+0x74]
  41941c:	mov    ecx,0xc4d0eb76
  419421:	pop    esp
  419422:	ja     0x4193ff
  419424:	or     eax,0x6148ab7b
  419429:	ss ss ins DWORD PTR es:[edi],dx
  41942c:	lahf   
  41942d:	sbb    DWORD PTR [esi-0x2ca11c58],esi
  419433:	daa    
  419434:	xlat   BYTE PTR ds:[ebx]
  419435:	fild   WORD PTR [ecx]
  419437:	pop    ecx
  419438:	test   BYTE PTR [esi+0x738fae0b],dl
  41943e:	adc    DWORD PTR [edx-0x1ca7bb9c],0xffffffb9
  419445:	call   0x9e37:0xb8f7826f
  41944c:	aas    
  41944d:	push   cs
  41944e:	or     BYTE PTR [ecx-0x25],ah
  419451:	xchg   esp,eax
  419452:	push   cs
  419453:	fdivr  QWORD PTR [ecx-0x72]
  419456:	add    BYTE PTR [edx],ah
  419458:	add    dl,cl
  41945a:	pop    eax
  41945b:	mov    dl,0x8d
  41945d:	jg     0x41940c
  41945f:	call   0xaac2:0x51fe3f14
  419466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419467:	jno    0x419413
  419469:	sub    dl,bh
  41946b:	popa   
  41946c:	xchg   edi,ebx
  41946e:	and    DWORD PTR [eax-0x6d7f8c15],ecx
  419474:	cmp    BYTE PTR [ebx+0x76],al
  419477:	popf   
  419478:	adc    BYTE PTR fs:[ecx],bh
  41947b:	test   eax,0x133b951
  419480:	(bad)  
  419481:	xor    eax,0xf08deef
  419486:	sub    eax,0x2cd30449
  41948b:	test   BYTE PTR [ecx+0x49d9a79],ah
  419491:	lods   eax,DWORD PTR ds:[esi]
  419492:	and    dl,cl
  419494:	jge    0x419419
  419496:	mov    BYTE PTR [esi+eax*8+0x50],ah
  41949a:	add    eax,0x41789058
  41949f:	iret   
  4194a0:	sbb    al,0x71
  4194a2:	stos   BYTE PTR es:[di],al
  4194a4:	inc    edi
  4194a5:	ss push edx
  4194a7:	pop    ebp
  4194a8:	push   ss
  4194a9:	adc    eax,ebp
  4194ab:	and    esp,ecx
  4194ad:	in     al,0xdb
  4194af:	push   ss
  4194b0:	inc    edi
  4194b1:	cdq    
  4194b2:	mov    ds:0x312df394,eax
  4194b7:	aam    0x6a
  4194b9:	and    al,0xf5
  4194bb:	push   eax
  4194bc:	fld    DWORD PTR [ebx]
  4194be:	mov    ah,0x1
  4194c0:	mov    bh,0xb0
  4194c2:	sar    DWORD PTR [esp+edi*1-0x60],1
  4194c6:	mov    ds:0xb68edb3a,eax
  4194cb:	push   ss
  4194cc:	push   edi
  4194cd:	in     eax,dx
  4194ce:	mov    ch,0xa
  4194d0:	arpl   WORD PTR [edx],bx
  4194d2:	ja     0x41947a
  4194d4:	push   esi
  4194d5:	loopne 0x4194b5
  4194d7:	xchg   esp,eax
  4194d8:	or     cl,cl
  4194da:	inc    esp
  4194db:	xchg   edi,eax
  4194dc:	inc    ebx
  4194dd:	pop    edi
  4194de:	or     BYTE PTR [esi+0x79],ch
  4194e1:	fs jmp 0xc9dfd902
  4194e7:	mov    bh,0x47
  4194e9:	mov    WORD PTR [eax],ss
  4194eb:	mov    ds:0xee7f0f20,eax
  4194f0:	jecxz  0x4194fa
  4194f2:	loope  0x4194c2
  4194f4:	ret    0x8c6c
  4194f7:	fwait
  4194f8:	adc    DWORD PTR [eax],edx
  4194fa:	or     DWORD PTR [ebp+ebp*4-0x20],ebx
  4194fe:	mov    eax,ds:0x960ad6b4
  419503:	add    BYTE PTR [ecx-0x4e],dl
  419506:	mov    esi,0x3f19ea2f
  41950b:	xlat   BYTE PTR ds:[ebx]
  41950c:	imul   DWORD PTR [esi]
  41950e:	pop    es
  41950f:	jo     0x419507
  419511:	pop    edx
  419512:	pop    esi
  419513:	mov    edx,0x863c7cb2
  419518:	in     al,0x4f
  41951a:	push   ebp
  41951b:	aam    0xdc
  41951d:	jle    0x4194bd
  41951f:	loop   0x4194b2
  419521:	jns    0x4194f0
  419523:	aam    0x10
  419525:	push   ss
  419526:	ret    
  419527:	lds    esi,FWORD PTR [ebx+0x19996451]
  41952d:	ficom  DWORD PTR [edx]
  41952f:	cwde   
  419530:	(bad)  
  419531:	fnstcw WORD PTR [edx]
  419533:	aam    0x9a
  419535:	loopne 0x41959e
  419537:	and    BYTE PTR [eax+0x2],bl
  41953a:	out    0xea,eax
  41953c:	scas   al,BYTE PTR es:[edi]
  41953d:	nop
  41953e:	jnp    0x419574
  419540:	pop    esi
  419541:	jg     0x419509
  419543:	inc    edx
  419544:	stc    
  419545:	test   al,0xca
  419547:	fstp   st(7)
  419549:	mov    ch,0xf6
  41954b:	popa   
  41954c:	xchg   BYTE PTR [ecx-0x35755cf],bh
  419552:	adc    DWORD PTR [eax],edi
  419554:	pop    eax
  419555:	mov    cl,0x8b
  419557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419558:	mov    esi,0xd0521231
  41955d:	and    DWORD PTR [ecx-0x63982114],edx
  419563:	js     0x41954a
  419565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419566:	pop    ecx
  419567:	ins    DWORD PTR es:[edi],dx
  419568:	xchg   esi,eax
  419569:	xchg   esi,eax
  41956a:	mov    edx,0xeb3f966b
  41956f:	cmp    DWORD PTR [edi-0x36adf9b7],edx
  419575:	out    dx,al
  419576:	fdivr  QWORD PTR [ebx+0x3b]
  419579:	pop    ds
  41957a:	xchg   DWORD PTR [edx+0x0],edi
  41957d:	les    esi,FWORD PTR ds:0x2f50186e
  419583:	cmc    
  419584:	loope  0x4195a2
  419586:	(bad)  
  419587:	fimul  DWORD PTR [ebp-0x493b98cb]
  41958d:	lods   eax,DWORD PTR ds:[esi]
  41958e:	and    BYTE PTR [edi],ch
  419590:	dec    eax
  419591:	jmp    0x419531
  419593:	jp     0x41958c
  419595:	pop    edi
  419596:	pop    ds
  419597:	retf   0x7f9e
  41959a:	jnp    0x4195d5
  41959c:	inc    DWORD PTR [ebx+0xc4f70fd]
  4195a2:	mov    bh,0x34
  4195a4:	ins    DWORD PTR es:[edi],dx
  4195a5:	xchg   ecx,eax
  4195a6:	nop
  4195a7:	dec    ebp
  4195a8:	sar    DWORD PTR [esi+0x36],1
  4195ab:	stos   DWORD PTR es:[edi],eax
  4195ac:	mov    cl,cl
  4195ae:	aaa    
  4195af:	push   esi
  4195b0:	(bad)  
  4195b1:	pusha  
  4195b2:	dec    esi
  4195b3:	sbb    eax,0xc99ece81
  4195b8:	out    0x1b,al
  4195ba:	aam    0x3e
  4195bc:	je     0x4195ba
  4195be:	jmp    0x52431b0a
  4195c3:	pushf  
  4195c4:	cmp    eax,0x81aba5db
  4195c9:	ins    DWORD PTR es:[edi],dx
  4195ca:	gs retf 
  4195cc:	in     eax,0x43
  4195ce:	cmp    al,0xa7
  4195d0:	xchg   ebx,eax
  4195d1:	enter  0x632b,0xb6
  4195d5:	stos   BYTE PTR es:[edi],al
  4195d6:	lahf   
  4195d7:	enter  0x61c2,0xa
  4195db:	aad    0x12
  4195dd:	jmp    0xca3a1726
  4195e2:	loope  0x4195e4
  4195e4:	lods   al,BYTE PTR ds:[esi]
  4195e5:	pop    es
  4195e6:	addr16 dec ebp
  4195e8:	add    ecx,ebp
  4195ea:	outs   dx,DWORD PTR ds:[esi]
  4195eb:	clc    
  4195ec:	mov    bh,0x3c
  4195ee:	push   ss
  4195ef:	mov    ch,0x4a
  4195f1:	cmp    BYTE PTR [ebp+ecx*2+0x5b],bh
  4195f5:	call   0xd792b6f8
  4195fa:	add    ecx,ebp
  4195fc:	mov    cl,dl
  4195fe:	xlat   BYTE PTR ds:[ebx]
  4195ff:	rcr    DWORD PTR [eax-0x1eef061d],0xca
  419606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419607:	cmp    esp,0x7bf7d386
  41960d:	ret    
  41960e:	gs out 0x6,al
  419611:	cmp    ebx,DWORD PTR [esi+0x7a61a0ff]
  419617:	(bad)  
  419618:	xor    ch,BYTE PTR [ebx-0x2b]
  41961b:	mov    ecx,db4
  41961e:	js     0x4195f7
  419620:	cli    
  419621:	call   0xec7d370e
  419626:	cmp    ecx,DWORD PTR [ebp+0x1d9c4216]
  41962c:	(bad)
  419630:	daa    
  419631:	mov    bl,0xdb
  419633:	jo     0x4195fd
  419635:	mov    ch,0x2d
  419637:	loopne 0x419626
  419639:	mov    dh,0x66
  41963b:	xchg   BYTE PTR ds:0x3ea3d39a,ah
  419641:	in     al,0x37
  419643:	fisub  WORD PTR [ebp+0x3df05055]
  419649:	mov    edi,DWORD PTR [edx+0x48fc9384]
  41964f:	sbb    ch,BYTE PTR [ebx+edx*2+0x5913785c]
  419656:	mov    dl,0xa4
  419658:	push   ds
  419659:	push   es
  41965a:	sbb    eax,0xad5828e6
  41965f:	div    BYTE PTR ds:0x674d2e61
  419665:	test   DWORD PTR [edi+edi*2],ecx
  419668:	dec    esi
  419669:	outs   dx,BYTE PTR ds:[esi]
  41966a:	ins    BYTE PTR es:[edi],dx
  41966b:	lods   al,BYTE PTR ds:[esi]
  41966c:	stos   BYTE PTR es:[edi],al
  41966d:	and    eax,0x45314af5
  419672:	out    dx,al
  419673:	xchg   edx,eax
  419674:	call   0xbdc5:0xc387f40c
  41967b:	ins    DWORD PTR es:[edi],dx
  41967c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41967d:	and    eax,0x61690895
  419682:	xor    dl,BYTE PTR [edi]
  419684:	sub    BYTE PTR [edi],al
  419686:	add    DWORD PTR [ecx],ebx
  419688:	mov    eax,0x9ce407b3
  41968d:	aam    0x4e
  41968f:	enter  0x67cc,0x87
  419693:	xchg   ecx,eax
  419694:	cmp    eax,0x5ef715d5
  419699:	nop
  41969a:	xor    BYTE PTR [edx+0xe],bl
  41969d:	dec    esp
  41969e:	jmp    0x419634
  4196a0:	imul   esp,DWORD PTR [eax*1+0xa57e0fd],0xffffff9d
  4196a8:	scas   eax,DWORD PTR es:[edi]
  4196a9:	in     eax,dx
  4196aa:	adc    al,0xf1
  4196ac:	push   ebx
  4196ad:	cmc    
  4196ae:	xor    al,0xd1
  4196b0:	imul   ebx,DWORD PTR [ecx+0x1a],0xff6a276f
  4196b7:	add    eax,eax
  4196b9:	add    BYTE PTR [edi+0x64],bl
  4196bc:	mov    ebx,0x25daaf39
  4196c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c2:	sbb    eax,0x23a56aee
  4196c7:	popa   
  4196c8:	mov    ecx,DWORD PTR [ecx+0x67b58486]
  4196ce:	dec    esi
  4196cf:	(bad)  
  4196d0:	and    BYTE PTR [edi-0x2d4f365c],ah
  4196d6:	push   0x1
  4196d8:	daa    
  4196d9:	push   ebp
  4196da:	test   DWORD PTR [eax+0x3e],ecx
  4196dd:	test   eax,0xe3b4a8b8
  4196e2:	shl    BYTE PTR [ebp-0x26],0x34
  4196e6:	sbb    eax,0xfc603ece
  4196eb:	les    ebx,FWORD PTR [edi+0x62]
  4196ee:	mov    ds:0x11eca050,eax
  4196f3:	scas   eax,DWORD PTR es:[edi]
  4196f4:	call   0xfb0e8562
  4196f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196fa:	sbb    BYTE PTR [edx-0xd],cl
  4196fd:	cmp    al,0x44
  4196ff:	mov    edx,DWORD PTR [edi]
  419701:	lods   eax,DWORD PTR ds:[esi]
  419702:	sub    esp,DWORD PTR [eax]
  419704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419705:	rcr    bh,cl
  419707:	es (bad) 
  419709:	jecxz  0x419721
  41970b:	push   ecx
  41970c:	lock jecxz 0x419691
  41970f:	xor    al,0xf1
  419711:	or     BYTE PTR ds:0x18c2a07b,dh
  419717:	xchg   esi,eax
  419718:	mov    ch,0x4f
  41971a:	sti    
  41971b:	popw   ss
  41971d:	lds    esi,FWORD PTR [ebx-0x57]
  419720:	int    0x6c
  419722:	push   0x6d5000f4
  419727:	jmp    0x4196c2
  419729:	pushf  
  41972a:	sub    eax,0x254a84b4
  41972f:	sub    cl,ah
  419731:	add    al,0xc4
  419733:	xor    al,0xf4
  419735:	addr16 iret 
  419737:	xchg   edi,eax
  419738:	lods   al,BYTE PTR ds:[esi]
  419739:	(bad)  
  41973a:	iret   
  41973b:	mov    eax,0xe754010e
  419740:	ja     0x419780
  419742:	xlat   BYTE PTR ds:[ebx]
  419743:	jb     0x4197bb
  419745:	inc    esi
  419746:	out    dx,eax
  419747:	adc    DWORD PTR [ebp+0x4306a9b2],edx
  41974d:	xchg   ebx,eax
  41974e:	inc    esp
  41974f:	ss pop ebp
  419751:	(bad)  
  419752:	je     0x4196da
  419754:	sahf   
  419755:	push   ds
  419756:	test   BYTE PTR [ecx-0x5a8ce586],ah
  41975c:	jnp    0x41971d
  41975e:	and    edi,DWORD PTR [ecx+0x6c]
  419761:	sbb    esp,0x982b475
  419767:	cmp    bh,BYTE PTR [ecx-0x38]
  41976a:	(bad)  
  41976b:	fadd   QWORD PTR [ecx]
  41976d:	fs and al,0x20
  419770:	add    ah,0x25
  419773:	pop    edx
  419774:	shl    BYTE PTR [edx+ebp*8-0x51],1
  419778:	sbb    DWORD PTR [esi],ecx
  41977a:	outs   dx,BYTE PTR ds:[esi]
  41977b:	enter  0xaa14,0x80
  41977f:	sub    ecx,DWORD PTR [eax+0x4]
  419782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419783:	adc    ecx,DWORD PTR [edx+0x33d9e51e]
  419789:	das    
  41978a:	adc    esi,ecx
  41978c:	addr16 xchg esp,eax
  41978e:	fidivr WORD PTR [esp+eiz*4+0x2eb35767]
  419795:	(bad)  
  419796:	repnz sbb dl,BYTE PTR [edi+0x59ff99df]
  41979d:	mov    gs,ebx
  41979f:	dec    ebx
  4197a0:	mov    eax,ds:0xed733ca2
  4197a5:	sahf   
  4197a6:	xor    BYTE PTR [esi],dl
  4197a8:	add    BYTE PTR [ebx-0x7d],0xf5
  4197ac:	dec    esp
  4197ad:	sub    al,0x8c
  4197af:	and    esi,edi
  4197b1:	adc    eax,0xc1e49651
  4197b6:	add    al,0x1a
  4197b8:	popa   
  4197b9:	or     al,0x21
  4197bb:	lods   eax,DWORD PTR ds:[esi]
  4197bc:	imul   esp,DWORD PTR [edx-0x628fe3f],0xffffffc7
  4197c3:	cld    
  4197c4:	xchg   esi,eax
  4197c5:	xchg   ebp,eax
  4197c6:	aas    
  4197c7:	sbb    edi,ebp
  4197c9:	dec    edi
  4197ca:	xchg   edx,eax
  4197cb:	inc    eax
  4197cc:	popf   
  4197cd:	pop    edi
  4197ce:	pop    es
  4197cf:	xchg   esi,eax
  4197d0:	jmp    0xdf6a6f0f
  4197d5:	sub    al,0xc1
  4197d8:	xchg   ebp,eax
  4197d9:	fist   DWORD PTR [eax-0x47b3ca26]
  4197df:	dec    eax
  4197e0:	inc    eax
  4197e1:	fnstenv [edx+0x6b]
  4197e4:	mov    eax,0x886bc743
  4197e9:	fld    TBYTE PTR [edx+0xe2475c7]
  4197ef:	inc    edi
  4197f1:	(bad)  
  4197f2:	sub    DWORD PTR [esp+esi*1],ebp
  4197f5:	xor    al,BYTE PTR [ebp-0x15]
  4197f8:	cmp    eax,0x375041af
  4197fd:	ret    
  4197fe:	clc    
  4197ff:	mov    bl,0x65
  419801:	jecxz  0x4197a0
  419803:	fucom  st(2)
  419805:	pusha  
  419806:	das    
  419807:	pop    ebx
  419808:	jl     0x419887
  41980a:	fucomip st,st(4)
  41980c:	lds    esp,FWORD PTR [ecx+eax*1]
  41980f:	out    dx,al
  419810:	sub    eax,0x316c69b3
  419815:	cli    
  419816:	jmp    0x652a8e52
  41981b:	stos   BYTE PTR es:[edi],al
  41981c:	(bad)  
  41981d:	stos   DWORD PTR es:[edi],eax
  41981e:	or     BYTE PTR [eax-0x7a9faeed],0x74
  419825:	or     DWORD PTR [ebx],edi
  419827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419828:	xchg   esi,eax
  419829:	jmp    0x41981c
  41982b:	jmp    0xd9396393
  419830:	mov    esp,0xd8cc67d0
  419835:	sbb    BYTE PTR [edx-0x36],ch
  419838:	jle    0x419886
  41983a:	loopne 0x4198a7
  41983c:	sub    eax,DWORD PTR [esi-0x4b]
  41983f:	icebp  
  419840:	jno    0x419835
  419842:	or     al,0x31
  419844:	sti    
  419845:	pop    es
  419846:	jmp    0xf791:0x3c23f62e
  41984d:	jae    0x4198a6
  41984f:	in     eax,dx
  419850:	adc    DWORD PTR [edx],edi
  419852:	xchg   ebx,eax
  419853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419854:	push   0x5
  419856:	xor    esp,DWORD PTR [ebx-0x5a]
  419859:	(bad)
  41985d:	into   
  41985e:	mov    edx,0x39ef8594
  419863:	fsubr  st,st(7)
  419865:	inc    esi
  419866:	fwait
  419867:	bound  esi,QWORD PTR [ecx+ebp*1+0xd53318d]
  41986e:	sub    dh,dh
  419870:	jle    0x41980f
  419872:	mov    eax,ds:0x54bcb0f1
  419877:	inc    ebx
  419878:	leave  
  419879:	xchg   esp,eax
  41987a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41987b:	lods   al,BYTE PTR ds:[esi]
  41987c:	inc    esi
  41987d:	dec    ebx
  41987e:	jo     0x419823
  419880:	lods   al,BYTE PTR ds:[esi]
  419881:	es push edi
  419883:	lahf   
  419884:	adc    esp,eax
  419886:	lea    edi,[eax-0x4329fefb]
  41988c:	ds (bad) 
  41988f:	xchg   DWORD PTR [ebx*4-0x25e1e721],esp
  419896:	(bad)  [edi]
  419898:	push   0xb05945be
  41989d:	sar    esi,cl
  41989f:	or     BYTE PTR [ecx-0x410a9a01],0x44
  4198a6:	pop    es
  4198a7:	mul    DWORD PTR [edx+eax*2-0x673e6f36]
  4198ae:	aaa    
  4198af:	jbe    0x419886
  4198b1:	and    al,BYTE PTR [ebx-0x4e]
  4198b4:	mov    cl,0x70
  4198b6:	mov    edi,ss
  4198b8:	ss jecxz 0x419893
  4198bb:	xchg   esi,eax
  4198bc:	inc    ecx
  4198bd:	test   eax,0x44daeecb
  4198c2:	mov    ch,0x4f
  4198c4:	mov    ecx,0x5508a170
  4198c9:	mov    ebp,0x96c23014
  4198ce:	mov    ds:0xae1ffe56,al
  4198d3:	arpl   ax,bx
  4198d5:	pop    es
  4198d6:	imul   DWORD PTR [ebx]
  4198d8:	xlat   BYTE PTR ds:[ebx]
  4198d9:	popa   
  4198da:	mov    eax,DWORD PTR [ecx+0x1c]
  4198dd:	xor    esi,DWORD PTR [ebx]
  4198df:	xchg   ecx,eax
  4198e0:	xlat   BYTE PTR ds:[ebx]
  4198e1:	rcr    DWORD PTR [edi-0x318c86a2],0xb7
  4198e8:	fs add bh,0x6
  4198ec:	push   ebp
  4198ed:	pop    edi
  4198ee:	sbb    esp,ebp
  4198f0:	push   ebx
  4198f1:	cs mov edx,0x36159713
  4198f7:	jmp    0x979d:0x863b361f
  4198fe:	aad    0x10
  419900:	pop    eax
  419901:	dec    ecx
  419902:	shl    cl,0x5a
  419905:	jbe    0x419960
  419907:	push   ds
  419908:	in     al,0xf
  41990a:	dec    ecx
  41990b:	out    dx,eax
  41990c:	outs   dx,BYTE PTR ds:[esi]
  41990d:	xchg   esi,eax
  41990e:	dec    esp
  41990f:	in     al,dx
  419910:	sbb    bl,BYTE PTR [edx+0x93da436]
  419916:	cld    
  419917:	test   BYTE PTR [ecx+0x4804c20b],cl
  41991d:	mov    eax,ds:0xbc9361cb
  419922:	inc    ebp
  419923:	sbb    bl,BYTE PTR [edx-0x73dbe2a]
  419929:	or     eax,0x797d4b71
  41992e:	dec    ebx
  41992f:	mov    eax,ds:0x8af41375
  419934:	std    
  419935:	xor    eax,0x5e1e320
  41993a:	adc    DWORD PTR [edi-0x4a61181a],edi
  419940:	xchg   ecx,eax
  419941:	fcom   QWORD PTR [edi+0x1d]
  419944:	rcl    BYTE PTR [edx],0xf3
  419947:	sbb    eax,0x174a712e
  41994c:	pop    ss
  41994d:	push   edi
  41994e:	inc    ebx
  41994f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419950:	mov    al,ds:0x5a071081
  419955:	fld    TBYTE PTR [edx]
  419957:	inc    ebp
  419958:	mov    al,ds:0x1a1380ef
  41995d:	jnp    0x4198fa
  41995f:	push   ds
  419960:	cwde   
  419961:	and    edi,0xcf2cc217
  419967:	push   0xa844a389
  41996c:	jle    0x4199ce
  41996e:	inc    esi
  41996f:	mov    esi,0xe0495fbf
  419974:	xchg   esp,eax
  419975:	jmp    0x54b33f8b
  41997a:	xor    al,0xc3
  41997c:	rcl    DWORD PTR [edi],cl
  41997e:	cmp    BYTE PTR [ebx+edx*8+0x21],0xe3
  419983:	nop
  419984:	xlat   BYTE PTR ds:[ebx]
  419985:	out    dx,eax
  419986:	jecxz  0x4199f1
  419988:	jg     0x419a00
  41998a:	(bad)  
  41998b:	jp     0xc9cfa8b4
  419991:	shl    BYTE PTR [edi+0x78],1
  419994:	inc    esi
  419995:	(bad)  
  419997:	iret   
  419998:	push   es
  419999:	and    DWORD PTR [ebp+edx*2-0x1d2c9fb3],0x690c7d18
  4199a4:	xor    al,0x64
  4199a6:	push   ecx
  4199a7:	push   0x25b04070
  4199ac:	inc    BYTE PTR [eax+0x7d]
  4199af:	hlt    
  4199b0:	aad    0xe2
  4199b2:	ror    BYTE PTR [esi],cl
  4199b4:	sub    bl,BYTE PTR [esi+0x22]
  4199b7:	inc    esp
  4199b8:	in     eax,dx
  4199b9:	les    ecx,FWORD PTR [esi]
  4199bb:	popa   
  4199bc:	sbb    bh,bl
  4199be:	dec    ebp
  4199bf:	mov    edx,0x59e387a8
  4199c4:	adc    edi,DWORD PTR [edx-0x9a9961]
  4199ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199cb:	dec    ebx
  4199cc:	adc    ax,0xaad7
  4199d0:	sub    DWORD PTR [edi+eax*8],ebx
  4199d3:	lods   eax,DWORD PTR ds:[esi]
  4199d4:	pop    edx
  4199d5:	jg     0x419991
  4199d7:	test   eax,0x91eaba65
  4199dc:	daa    
  4199dd:	adc    ecx,esi
  4199df:	add    DWORD PTR [edx],0x21766915
  4199e5:	cmp    ebp,DWORD PTR [ecx-0x7ac464ef]
  4199eb:	cwde   
  4199ec:	lods   al,BYTE PTR ds:[esi]
  4199ed:	ret    0x6e52
  4199f0:	sahf   
  4199f1:	loop   0x41999f
  4199f3:	adc    BYTE PTR [ebx],bl
  4199f5:	lods   eax,DWORD PTR ds:[esi]
  4199f6:	mov    cl,0x7d
  4199f8:	ins    DWORD PTR es:[edi],dx
  4199f9:	shl    BYTE PTR [eax+0x591499de],1
  4199ff:	adc    DWORD PTR [edi],edx
  419a01:	cmp    al,0x5d
  419a03:	push   es
  419a04:	inc    ebx
  419a05:	loopne 0x4199fb
  419a07:	sub    ebp,DWORD PTR [ecx+0x5c]
  419a0a:	or     eax,0x2575d75c
  419a0f:	and    ebx,DWORD PTR [ebx-0x22]
  419a12:	jp     0x4199bc
  419a14:	outs   dx,DWORD PTR ds:[esi]
  419a15:	sbb    DWORD PTR [eax],edx
  419a17:	sti    
  419a18:	sbb    eax,0xdc6eb650
  419a1d:	push   esi
  419a1e:	and    dl,BYTE PTR [edx-0x80]
  419a21:	jo     0x4199d2
  419a23:	xor    BYTE PTR [ecx],0x59
  419a26:	addr16 in al,dx
  419a28:	xor    al,0x66
  419a2a:	mov    dl,0x2a
  419a2c:	adc    BYTE PTR [ecx+edx*1-0x7bd62624],bl
  419a33:	add    edx,DWORD PTR [ecx+0x69bff088]
  419a39:	jb     0x4199db
  419a3b:	jbe    0x419a49
  419a3d:	mov    ecx,0x99387930
  419a42:	std    
  419a43:	push   ebx
  419a44:	inc    esp
  419a45:	inc    esi
  419a46:	xchg   ebx,eax
  419a47:	(bad)  
  419a48:	(bad)  
  419a49:	xchg   esi,eax
  419a4a:	call   0x8ab:0x8f33be9
  419a51:	xor    al,0x65
  419a53:	mov    esp,0xad58046
  419a58:	pop    ss
  419a59:	pusha  
  419a5a:	push   edi
  419a5b:	adc    ecx,DWORD PTR [eax+ebp*1-0x63e40a1d]
  419a62:	test   al,0x89
  419a64:	add    BYTE PTR [ebx+0x4efba40d],bh
  419a6a:	ss (bad) 
  419a6c:	out    0x87,al
  419a6e:	leave  
  419a6f:	lods   eax,DWORD PTR ds:[esi]
  419a70:	ret    
  419a71:	inc    eax
  419a72:	pushf  
  419a73:	add    BYTE PTR [esi-0xb],bl
  419a76:	test   BYTE PTR [ecx-0x73],al
  419a79:	push   0xffffffd3
  419a7b:	push   cs
  419a7c:	mov    ecx,0xcf90aebe
  419a81:	pop    ebp
  419a82:	and    ecx,DWORD PTR [edx]
  419a84:	jb     0x419af0
  419a86:	out    0x4d,eax
  419a88:	shr    edx,0xa2
  419a8b:	std    
  419a8c:	pop    ebx
  419a8d:	fld    TBYTE PTR [edi]
  419a8f:	(bad)  
  419a90:	sbb    eax,0xc8e00adb
  419a95:	xor    DWORD PTR [ecx+0x7f],0x74
  419a99:	xchg   eax,edx
  419a9b:	dec    ecx
  419a9c:	fistp  DWORD PTR [eax]
  419a9e:	stc    
  419a9f:	bound  ebx,QWORD PTR [ecx+0x60f32957]
  419aa5:	cli    
  419aa6:	es mov dl,cl
  419aa9:	fdiv   QWORD PTR gs:[esi-0x55461ddc]
  419ab0:	push   ecx
  419ab1:	and    al,BYTE PTR [ecx]
  419ab3:	adc    BYTE PTR [edx],0x99
  419ab6:	and    BYTE PTR [edi-0x48f14945],dl
  419abc:	push   edx
  419abd:	out    dx,al
  419abe:	addr16 mov esp,0x1c6f9148
  419ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac5:	fdivr  DWORD PTR [ebp-0x18]
  419ac8:	imul   edx,DWORD PTR [eax-0x22d27f3f],0xdcf8ecb1
  419ad2:	sub    al,0xdc
  419ad4:	lds    edi,FWORD PTR [esi]
  419ad6:	and    ch,BYTE PTR [esi+edx*2-0x3860235c]
  419add:	push   es
  419ade:	inc    edx
  419adf:	sbb    ecx,DWORD PTR [ecx+0x23776552]
  419ae5:	xor    BYTE PTR [esi],cl
  419ae7:	dec    esp
  419ae8:	adc    DWORD PTR ds:0x1e82f55b,ebp
  419aee:	inc    ecx
  419aef:	sbb    ch,0x83
  419af2:	inc    ebx
  419af3:	jle    0x419b1e
  419af5:	xlat   BYTE PTR ds:[ebx]
  419af6:	ins    DWORD PTR es:[edi],dx
  419af7:	pop    esi
  419af8:	leave  
  419af9:	ins    DWORD PTR es:[edi],dx
  419afa:	mov    ch,0x32
  419afc:	jge    0x419ae0
  419afe:	dec    edi
  419aff:	dec    esi
  419b00:	cmc    
  419b01:	dec    ebx
  419b02:	add    eax,0xb16e7741
  419b07:	inc    ecx
  419b08:	nop
  419b09:	ss push esi
  419b0b:	jno    0x419af7
  419b0d:	inc    ebx
  419b0e:	jo     0x419b16
  419b10:	lods   al,BYTE PTR ds:[esi]
  419b11:	retf   0x313a
  419b14:	and    eax,DWORD PTR [ebx-0x3db7ea7b]
  419b1a:	jle    0x419ad5
  419b1c:	nop
  419b1d:	loope  0x419b1f
  419b1f:	leave  
  419b20:	in     al,dx
  419b21:	imul   edx,DWORD PTR [edx],0x677ad22e
  419b27:	(bad)
  419b2b:	pop    ebp
  419b2c:	pop    esp
  419b2d:	test   eax,0x43d012f0
  419b32:	mov    ah,0x50
  419b34:	adc    esp,0x6f8adc5e
  419b3a:	(bad)  
  419b3b:	loop   0x419b40
  419b3d:	retf   
  419b3e:	pop    eax
  419b3f:	ret    
  419b40:	sub    eax,0xfc8e4f9a
  419b45:	bound  eax,QWORD PTR [esi]
  419b47:	mov    eax,0x7e1bd8de
  419b4c:	fdiv   QWORD PTR [ebx+eax*4-0x28]
  419b50:	jmp    0x419afa
  419b52:	fst    QWORD PTR [esi]
  419b54:	enter  0x33bb,0x55
  419b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b59:	add    dh,BYTE PTR [ebx-0x62]
  419b5c:	dec    ebx
  419b5d:	ret    
  419b5e:	pop    ecx
  419b5f:	(bad)  
  419b60:	out    dx,eax
  419b61:	jns    0x419bd7
  419b63:	cmp    al,0x4e
  419b65:	mov    WORD PTR [ebx],gs
  419b67:	dec    esp
  419b68:	push   ebx
  419b69:	ret    0x7848
  419b6c:	xchg   ebx,eax
  419b6d:	test   eax,0x80028f32
  419b72:	test   edx,esi
  419b74:	loope  0x419bb2
  419b76:	mov    ds:0x821f3ef7,eax
  419b7b:	fimul  DWORD PTR [ecx+edx*8+0x5d]
  419b7f:	popa   
  419b80:	std    
  419b81:	imul   esi,ebx,0xc69266f7
  419b87:	cmp    esi,DWORD PTR [edx+eax*4-0x580c1dc9]
  419b8e:	popf   
  419b8f:	push   edi
  419b90:	and    ch,al
  419b92:	xchg   ecx,eax
  419b93:	ja     0x419b67
  419b95:	fcmovu st,st(7)
  419b97:	pop    ebp
  419b98:	xlat   BYTE PTR ds:[ebx]
  419b99:	jl     0x419c00
  419b9b:	sahf   
  419b9c:	and    al,0xd9
  419b9e:	and    ebx,esi
  419ba0:	pop    ss
  419ba1:	mov    ds:0x79987e54,eax
  419ba6:	xor    esi,DWORD PTR [ebx+0x50]
  419ba9:	mov    ebp,0xc5e27a35
  419bae:	pop    ds
  419baf:	test   al,0xa6
  419bb1:	shr    BYTE PTR [ecx-0x1d9dc798],1
  419bb7:	mov    esi,0xf35dd3ed
  419bbc:	sar    DWORD PTR [ebx],0xc6
  419bbf:	xchg   esi,eax
  419bc0:	jnp    0x419c03
  419bc2:	jne    0x419b74
  419bc4:	and    esp,esi
  419bc6:	jecxz  0x419b93
  419bc8:	sub    edx,DWORD PTR [edi+0x7a4d0ce9]
  419bce:	sbb    esp,DWORD PTR [edx+0x5f3a79d3]
  419bd4:	jp     0x419bf6
  419bd6:	outs   dx,BYTE PTR ds:[esi]
  419bd7:	mov    ds:0x58b4d6ab,eax
  419bdc:	mov    DWORD PTR [edi+0x62],ebp
  419bdf:	arpl   WORD PTR [eax+edx*4-0x31],bx
  419be3:	mov    WORD PTR [ebx-0x2294c5aa],cs
  419be9:	sub    ah,al
  419beb:	call   0xa3a8:0x3d5abcd4
  419bf2:	ins    BYTE PTR es:[edi],dx
  419bf3:	loope  0x419b99
  419bf5:	and    eax,0x7117b506
  419bfa:	push   cs
  419bfb:	sahf   
  419bfc:	aas    
  419bfd:	jmp    0xac5525de
  419c02:	pop    ebx
  419c03:	out    0x78,eax
  419c05:	(bad)  
  419c06:	push   ecx
  419c07:	pop    ebp
  419c08:	stc    
  419c09:	rcr    DWORD PTR [eax],0x72
  419c0c:	test   eax,0xef8ff178
  419c11:	pop    eax
  419c12:	(bad)  
  419c14:	cmp    DWORD PTR [edi+edi*2+0x3698d996],esi
  419c1b:	in     eax,0xa5
  419c1d:	in     al,dx
  419c1e:	js     0x419bbf
  419c20:	and    DWORD PTR [eax-0x7ed78fbd],edi
  419c26:	sbb    eax,0xc474645b
  419c2b:	(bad)  ds:0xe6a6e27b
  419c31:	loop   0x419be5
  419c33:	xchg   ebx,eax
  419c34:	push   0xffffff84
  419c36:	fidivr DWORD PTR ds:0x106e2615
  419c3c:	(bad)  
  419c3d:	stos   DWORD PTR es:[edi],eax
  419c3e:	sbb    cl,BYTE PTR [eax]
  419c40:	frstor [esi-0x1e]
  419c43:	sbb    ebx,DWORD PTR [edx+0x21]
  419c46:	inc    esi
  419c47:	clc    
  419c48:	push   ebx
  419c49:	add    al,0xe6
  419c4b:	mov    ebx,0xd13b767c
  419c50:	dec    ebx
  419c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c52:	pop    esp
  419c53:	pop    ss
  419c54:	mov    cl,0x8c
  419c56:	popf   
  419c57:	mov    esp,0x833771a9
  419c5c:	jmp    0x419cce
  419c5e:	stc    
  419c5f:	adc    eax,0x9adbc5b6
  419c64:	xlat   BYTE PTR ds:[ebx]
  419c65:	clc    
  419c66:	jl     0x419bf4
  419c68:	repnz (bad) 
  419c6a:	and    DWORD PTR [ecx],ebx
  419c6c:	jmp    0x7942cc83
  419c71:	imul   ebp,DWORD PTR [esi+0x586f0ee3],0xa2897b75
  419c7b:	fwait
  419c7c:	mov    eax,0xdafd16e9
  419c81:	test   eax,0x27235353
  419c86:	psubq  mm1,mm1
  419c89:	inc    ebp
  419c8a:	fld    st(6)
  419c8c:	mov    edi,0x1c6335e8
  419c91:	cmc    
  419c92:	pop    eax
  419c93:	aaa    
  419c94:	ds mov ecx,0xf2056b46
  419c9a:	ja     0x419c59
  419c9c:	pop    es
  419c9d:	push   edi
  419c9e:	jmp    0x2376:0x7848c8cb
  419ca5:	jge    0x419ca3
  419ca7:	mov    al,ds:0x80a510fa
  419cac:	out    0x20,eax
  419cae:	mov    ebx,0xea4194ce
  419cb3:	cmp    DWORD PTR [eax],0xfe513dd7
  419cb9:	inc    ebp
  419cba:	sub    cl,BYTE PTR [ebp-0x748844f7]
  419cc0:	mov    eax,0x2c255921
  419cc5:	(bad)  
  419cc6:	adc    eax,0x1739ec76
  419ccb:	push   esp
  419ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ccd:	pop    es
  419cce:	inc    ebx
  419ccf:	call   0x326:0x2a24fda7
  419cd6:	mov    bl,0x61
  419cd8:	add    DWORD PTR [ecx+0x96272bd],0x545d8956
  419ce2:	loop   0x419d5c
  419ce4:	xchg   ebx,eax
  419ce5:	adc    BYTE PTR [edi+0x4],bl
  419ce8:	pop    eax
  419ce9:	pop    ss
  419cea:	pushf  
  419ceb:	(bad)  
  419cec:	ds jo  0x419d2c
  419cef:	xor    DWORD PTR [ebx+eiz*4],edx
  419cf2:	iret   
  419cf3:	cld    
  419cf4:	fadd   st(3),st
  419cf6:	push   esp
  419cf7:	ins    DWORD PTR es:[edi],dx
  419cf8:	call   0xc8fb:0xeaf63e02
  419cff:	test   eax,0xcd484b81
  419d04:	std    
  419d05:	jmp    0x1bc6:0xee5e2282
  419d0c:	push   cs
  419d0d:	mov    al,0xe9
  419d0f:	ins    BYTE PTR es:[edi],dx
  419d10:	inc    ebp
  419d11:	es sahf 
  419d13:	pop    ebp
  419d14:	mov    ecx,esp
  419d16:	loopne 0x419ce9
  419d18:	(bad)  
  419d19:	or     BYTE PTR [eax+0x5e65decc],0x57
  419d20:	sub    esi,DWORD PTR [ecx-0x45ec221d]
  419d26:	sbb    DWORD PTR [ecx],0x8c0ea39d
  419d2c:	pop    esi
  419d2d:	add    eax,0x16af580e
  419d32:	jmp    0xa881:0xc5f6184c
  419d39:	adc    BYTE PTR [eax-0x7604714c],dl
  419d3f:	retf   0x47f8
  419d42:	pop    edi
  419d43:	ret    0xbe6c
  419d46:	dec    ebx
  419d47:	jns    0x419d90
  419d49:	xchg   ecx,eax
  419d4a:	pop    ds
  419d4b:	dec    ebp
  419d4c:	rcl    BYTE PTR [edx],0x10
  419d4f:	aad    0xb
  419d51:	sbb    esi,DWORD PTR [ecx+eax*2]
  419d54:	in     eax,dx
  419d55:	mul    DWORD PTR [ebx]
  419d57:	cmp    BYTE PTR [esi-0x378fa8bc],bl
  419d5d:	mov    ah,0xd1
  419d5f:	(bad)  [ecx+0x6130cf56]
  419d65:	outs   dx,DWORD PTR ds:[esi]
  419d66:	adc    al,0x36
  419d68:	outs   dx,BYTE PTR ds:[esi]
  419d69:	inc    edx
  419d6a:	dec    edi
  419d6b:	inc    ecx
  419d6c:	xchg   BYTE PTR [eax-0x58b434ea],dh
  419d72:	sub    esi,ecx
  419d74:	call   0x41a9:0x8d65ed87
  419d7b:	sbb    eax,edx
  419d7d:	cdq    
  419d7e:	sbb    cl,BYTE PTR [edi-0x79]
  419d81:	pop    edx
  419d82:	in     eax,dx
  419d83:	lea    ecx,[ebp+esi*2-0x12]
  419d87:	in     eax,dx
  419d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d89:	ror    BYTE PTR [edx+0x3d],cl
  419d8c:	imul   esi,edi,0x70
  419d8f:	mov    ebp,DWORD PTR [ebp-0x52301fe8]
  419d95:	jge    0x419d98
  419d97:	pop    esp
  419d98:	fwait
  419d99:	jmp    0xd08b6c63
  419d9e:	mov    DWORD PTR [eax+0x71],eax
  419da1:	xor    dh,dl
  419da3:	sub    esp,0xffffffb2
  419da6:	out    0x4b,al
  419da8:	daa    
  419da9:	or     BYTE PTR [ebp-0x549e9bb4],al
  419daf:	adc    bl,BYTE PTR [eax+0x576ec58b]
  419db5:	ds (bad) 
  419db7:	pop    ebp
  419db8:	adc    BYTE PTR [ebx-0x3c1bf3ea],0x80
  419dbf:	dec    ebp
  419dc0:	mov    edx,0xb09dab5d
  419dc5:	xchg   ebx,eax
  419dc6:	out    dx,eax
  419dc7:	lea    eax,[ebp+ebp*4-0x3a]
  419dcb:	sub    al,0xf6
  419dcd:	sub    eax,0xe4906118
  419dd2:	in     eax,dx
  419dd3:	je     0x419e2e
  419dd5:	and    al,0xe2
  419dd7:	(bad)  
  419dd8:	pusha  
  419dd9:	aas    
  419dda:	mov    al,ds:0x3d4c9196
  419ddf:	test   DWORD PTR [esi+0x10],eax
  419de2:	push   0x5f
  419de4:	or     al,0x49
  419de6:	inc    ebp
  419de7:	fwait
  419de8:	dec    ebx
  419de9:	in     eax,0xdd
  419deb:	cdq    
  419dec:	or     DWORD PTR [eax],ebp
  419dee:	dec    ecx
  419def:	or     dh,ah
  419df1:	fcom   DWORD PTR [eax+0x540f345d]
  419df7:	mov    ebp,0x48f96f74
  419dfc:	loop   0x419de5
  419dfe:	icebp  
  419dff:	adc    al,0xc0
  419e01:	dec    esi
  419e02:	out    dx,eax
  419e03:	mov    gs,WORD PTR [edx]
  419e05:	bound  ebp,QWORD PTR [edx]
  419e07:	nop
  419e08:	add    bl,BYTE PTR [eax-0x1eeeb017]
  419e0e:	mov    ecx,0xb5479867
  419e13:	xor    BYTE PTR [edi-0x21f66ed3],ch
  419e19:	(bad)  
  419e1a:	repnz outs dx,DWORD PTR ds:[esi]
  419e1c:	jp     0x419e27
  419e1e:	xchg   edi,eax
  419e1f:	xchg   esi,eax
  419e20:	mov    bl,0x41
  419e22:	fwait
  419e23:	xchg   esp,eax
  419e24:	xchg   edx,eax
  419e25:	cmp    ah,BYTE PTR [ebx]
  419e27:	fs and eax,0xbd14d957
  419e2d:	add    al,0x86
  419e2f:	inc    edi
  419e30:	rcr    bh,0x61
  419e33:	and    ah,BYTE PTR ds:0xc2e0a867
  419e39:	cs inc ecx
  419e3b:	adc    bh,BYTE PTR [ecx+0x4]
  419e3e:	leave  
  419e3f:	mov    ecx,DWORD PTR [eax-0x2e]
  419e42:	and    BYTE PTR [ecx],ch
  419e44:	sub    eax,0xabfa3328
  419e49:	and    ecx,DWORD PTR ds:0x34d8a220
  419e4f:	or     ecx,DWORD PTR [edx+0xed9f025]
  419e55:	fcomp  st(4)
  419e57:	inc    ecx
  419e58:	ret    
  419e59:	xor    al,0x31
  419e5b:	retf   0xaf5
  419e5e:	mov    ebx,0xdb7268ab
  419e63:	daa    
  419e64:	aad    0xe
  419e66:	fidiv  WORD PTR [edx]
  419e68:	mov    ch,0x17
  419e6a:	adc    BYTE PTR [eax],ch
  419e6c:	outs   dx,DWORD PTR ds:[esi]
  419e6d:	pop    esi
  419e6e:	retf   0x7a5
  419e71:	jo     0x419ea1
  419e73:	xchg   DWORD PTR [ebp-0x44],eax
  419e76:	scas   eax,DWORD PTR es:[edi]
  419e77:	repnz mov al,0x19
  419e7a:	ds dec eax
  419e7c:	frstor ds:[eax]
  419e7f:	scas   eax,DWORD PTR es:[edi]
  419e80:	outs   dx,BYTE PTR ds:[esi]
  419e81:	lock loope 0x419ec8
  419e84:	pop    edi
  419e85:	setg   BYTE PTR [ecx]
  419e88:	fcom   QWORD PTR [ecx-0x7e]
  419e8b:	pop    esi
  419e8c:	push   es
  419e8d:	dec    esi
  419e8e:	retf   
  419e8f:	out    dx,al
  419e90:	xor    eax,0x6be8ce64
  419e95:	aas    
  419e96:	xchg   ebx,eax
  419e97:	sub    BYTE PTR ss:[ebx-0x6b],dl
  419e9b:	les    esi,FWORD PTR [edx]
  419e9d:	or     al,0x4c
  419e9f:	call   0x43e3501e
  419ea4:	fsub   st(2),st
  419ea6:	stc    
  419ea7:	loope  0x419e73
  419ea9:	jae    0x419e86
  419eab:	adc    BYTE PTR ds:0x4e554361,al
  419eb1:	lea    ecx,[edi-0x49]
  419eb4:	das    
  419eb5:	push   0x145a22df
  419eba:	rcr    ecx,cl
  419ebc:	mov    BYTE PTR [esi],bh
  419ebe:	fld    DWORD PTR [edx-0x13856233]
  419ec4:	sahf   
  419ec5:	mov    ch,0x1c
  419ec7:	and    eax,0x8b123654
  419ecc:	cmp    eax,0xfc6ffb6
  419ed1:	cmp    DWORD PTR [edx],edx
  419ed3:	sub    DWORD PTR [esi+0x7f],esp
  419ed6:	adc    DWORD PTR [eax-0x6d],esi
  419ed9:	fidiv  DWORD PTR [edi]
  419edb:	mov    ds:0xc33a85f7,al
  419ee0:	mov    cl,0x61
  419ee2:	fcmovnbe st,st(3)
  419ee4:	xchg   ecx,eax
  419ee5:	pusha  
  419ee6:	js     0x419ef7
  419ee8:	lods   al,BYTE PTR ds:[esi]
  419ee9:	mov    ebp,0xa875b301
  419eee:	sbb    eax,0x7b901dfb
  419ef3:	xchg   edi,eax
  419ef4:	sbb    DWORD PTR [esi+0x58],ebp
  419ef7:	cmp    al,0xf4
  419ef9:	pop    ds
  419efa:	cs xchg cl,bh
  419efd:	sub    al,0xf
  419eff:	mov    BYTE PTR [ebp-0x51b37f52],dh
  419f05:	xor    DWORD PTR [edi+0x31554b10],ebx
  419f0b:	jno    0x419f6d
  419f0d:	pushf  
  419f0e:	rcl    al,1
  419f10:	or     al,BYTE PTR [ebx+esi*2]
  419f13:	push   esp
  419f14:	jne    0x419f15
  419f16:	rcr    DWORD PTR [ecx+0x5b],1
  419f19:	lds    eax,FWORD PTR [edi]
  419f1b:	icebp  
  419f1c:	rol    BYTE PTR [ebx],0xb6
  419f1f:	jp     0x419f81
  419f21:	cwde   
  419f22:	push   0xee6ce797
  419f27:	pusha  
  419f28:	jo     0x419f05
  419f2a:	mov    eax,ds:0xfa5f6622
  419f2f:	out    0x4c,al
  419f31:	sub    al,0x1a
  419f33:	push   0xffffff86
  419f35:	xchg   edi,eax
  419f36:	jg     0x419f2f
  419f38:	ds dec eax
  419f3a:	mov    esi,0xb0aa1f78
  419f3f:	cmp    ah,bl
  419f41:	sti    
  419f42:	(bad)  
  419f45:	test   DWORD PTR [ebp-0x6332cd47],ebx
  419f4b:	cli    
  419f4c:	dec    ebx
  419f4d:	xchg   esi,eax
  419f4e:	retf   0xf17
  419f51:	jl     0x419f5c
  419f53:	clc    
  419f54:	sbb    DWORD PTR [edi+0x4d],esi
  419f57:	or     DWORD PTR [edi],edi
  419f59:	fwait
  419f5a:	ret    
  419f5b:	out    0x1a,al
  419f5d:	lock mov dl,0xd0
  419f60:	sbb    edx,DWORD PTR [ecx]
  419f62:	mov    ch,0x11
  419f64:	inc    eax
  419f65:	dec    ebp
  419f66:	loope  0x419f46
  419f68:	retf   
  419f69:	ret    0xaf9c
  419f6c:	popf   
  419f6d:	mov    esp,0x242dba8f
  419f72:	lods   eax,DWORD PTR ds:[esi]
  419f73:	inc    esi
  419f74:	xchg   ebx,eax
  419f75:	push   ebp
  419f76:	les    ecx,FWORD PTR [edx+0x10]
  419f79:	mov    ecx,0x7e6bef6f
  419f7e:	outs   dx,DWORD PTR ds:[esi]
  419f7f:	aad    0xd7
  419f81:	mov    al,ds:0xe2cdd605
  419f86:	sbb    BYTE PTR [esi-0x75],cl
  419f89:	shl    DWORD PTR [ebp-0x79cae41e],0x6
  419f90:	mov    ?,WORD PTR [ecx-0x15]
  419f93:	jl     0x419f93
  419f95:	sub    cl,BYTE PTR [ecx+0x6847a95d]
  419f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f9c:	ja     0x419fe8
  419f9e:	xchg   ecx,eax
  419f9f:	lods   al,BYTE PTR ds:[esi]
  419fa0:	cmp    al,0xab
  419fa2:	fs in  al,dx
  419fa4:	sbb    esp,DWORD PTR [edx-0x46]
  419fa7:	nop
  419fa8:	jecxz  0x419f75
  419faa:	not    BYTE PTR [edi+0x45]
  419fad:	push   ebp
  419fae:	pop    ds
  419faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb0:	ror    DWORD PTR [edx+0x30c2b8e4],0x96
  419fb7:	inc    esi
  419fb8:	xchg   edx,eax
  419fb9:	jmp    0x419fac
  419fbb:	add    DWORD PTR ds:0xcf15a2e8,esi
  419fc1:	fisubr DWORD PTR [edx]
  419fc3:	mov    eax,ds:0x8cadb78c
  419fc8:	call   0x4692:0x59ef9138
  419fcf:	push   esi
  419fd0:	fisttp QWORD PTR [edi+0x7eb78f34]
  419fd6:	push   es
  419fd7:	leave  
  419fd8:	mul    BYTE PTR [ebp-0x23]
  419fdb:	cld    
  419fdc:	or     al,0x26
  419fde:	addr16 repz mov ah,0x88
  419fe2:	sti    
  419fe3:	je     0x41a013
  419fe5:	(bad)  
  419fe6:	mov    ebx,0x4aaf9a16
  419feb:	pop    edi
  419fec:	fiadd  DWORD PTR [edx-0x1104fc05]
  419ff2:	ret    
  419ff3:	bnd jmp 0x419fa8
  419ff6:	xchg   esi,eax
  419ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ff8:	dec    ebp
  419ff9:	jne    0x41a046
  419ffb:	(bad)  
  419ffc:	sti    
  419ffd:	add    esp,DWORD PTR [edi+0x43906860]
  41a003:	xor    eax,0xe7366ba0
  41a008:	mov    ds:0x30f4a0a2,al
  41a00d:	(bad)  
  41a00e:	push   0xae89cae8
  41a013:	fsub   st,st(4)
  41a015:	pop    edx
  41a016:	add    eax,0xf62e17e
  41a01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a01c:	mov    edx,0x69c78d8a
  41a021:	orps   xmm4,XMMWORD PTR [ebp-0x6b]
  41a025:	or     BYTE PTR [ebp-0x5],ch
  41a028:	retf   
  41a029:	add    al,0x4e
  41a02b:	pusha  
  41a02c:	inc    esp
  41a02d:	test   eax,0x22b6d998
  41a032:	outs   dx,DWORD PTR ds:[esi]
  41a033:	lea    edx,[eax+0x13]
  41a036:	shr    ch,cl
  41a038:	jb     0x41a046
  41a03a:	xlat   BYTE PTR ds:[ebx]
  41a03b:	adc    ah,bh
  41a03d:	pop    ebx
  41a03e:	add    dl,BYTE PTR [ebx+0x50]
  41a041:	test   DWORD PTR [eax+0x631c5c2f],0x53a28386
  41a04b:	sahf   
  41a04c:	out    0xcf,eax
  41a04e:	inc    DWORD PTR [edi+0x1b149bea]
  41a054:	pop    esi
  41a055:	jo     0x41a077
  41a057:	repnz jecxz 0x41a064
  41a05a:	or     BYTE PTR [ebx],ch
  41a05c:	jmp    FWORD PTR [eax-0x77e3cdee]
  41a062:	out    0x5d,al
  41a064:	mov    eax,0x24aa3672
  41a069:	lods   eax,DWORD PTR ds:[esi]
  41a06a:	xchg   DWORD PTR [esi-0x51],ebx
  41a06d:	mov    dh,0xbc
  41a06f:	in     eax,dx
  41a070:	stos   DWORD PTR es:[edi],eax
  41a071:	iret   
  41a072:	dec    ebp
  41a073:	shl    DWORD PTR ds:0xdbba2ae3,1
  41a079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a07a:	adc    al,0xb5
  41a07c:	test   ch,cl
  41a07e:	leave  
  41a07f:	mov    ch,0xfa
  41a081:	jb     0x41a049
  41a083:	lds    ecx,FWORD PTR [edx+0x4d]
  41a086:	mov    bl,0xfb
  41a088:	out    dx,al
  41a089:	mov    ch,0x62
  41a08b:	pop    eax
  41a08c:	and    ecx,DWORD PTR [ebp+0x40b9a2fa]
  41a092:	sub    BYTE PTR [ebx+ecx*4-0x3],cl
  41a096:	pop    ecx
  41a097:	(bad)
  41a09a:	jg     0x41a0d4
  41a09c:	jmp    0x41a112
  41a09e:	sub    al,0xb1
  41a0a0:	retf   
  41a0a1:	sbb    eax,0x68d0f851
  41a0a6:	into   
  41a0a7:	adc    al,0xdf
  41a0a9:	push   0xffffffb2
  41a0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0ac:	jl     0x41a0e9
  41a0ae:	mov    ah,0x76
  41a0b0:	pop    ecx
  41a0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b2:	in     al,0x42
  41a0b4:	popa   
  41a0b5:	shl    DWORD PTR [ecx-0x2b],cl
  41a0b8:	sub    BYTE PTR [edx],dl
  41a0ba:	ds in  eax,dx
  41a0bc:	leave  
  41a0bd:	sar    DWORD PTR [edi-0x6f],0x24
  41a0c1:	xor    al,0x88
  41a0c3:	mov    ecx,0x527b627d
  41a0c8:	dec    ebx
  41a0c9:	rcr    BYTE PTR [edi+0x78],0x69
  41a0cd:	es cmp al,0xdc
  41a0d0:	jp     0x41a05b
  41a0d2:	call   0xbc709b21
  41a0d7:	mov    ah,0x82
  41a0d9:	jb     0x41a0ba
  41a0db:	js     0x41a118
  41a0dd:	pop    ds
  41a0de:	jnp    0x41a137
  41a0e0:	(bad)  
  41a0e1:	rcr    bl,cl
  41a0e3:	stos   DWORD PTR es:[edi],eax
  41a0e4:	rcr    DWORD PTR [esi+edi*1-0x6],1
  41a0e8:	ins    BYTE PTR es:[edi],dx
  41a0e9:	mov    eax,ds:0x91ebd29b
  41a0ee:	jns    0x41a0f2
  41a0f0:	and    DWORD PTR [ecx+0x8332177],edi
  41a0f6:	fs dec ebp
  41a0f8:	sub    ch,al
  41a0fa:	iret   
  41a0fb:	push   0x16
  41a0fd:	inc    ebx
  41a0fe:	sub    BYTE PTR [eax],al
  41a100:	iret   
  41a101:	xchg   WORD PTR [edi-0x39],dx
  41a105:	push   edx
  41a106:	stos   BYTE PTR es:[edi],al
  41a107:	(bad)  
  41a109:	cmp    bl,BYTE PTR [ebx+esi*2-0x7e011e23]
  41a110:	xchg   DWORD PTR [eax-0x61],eax
  41a113:	pop    eax
  41a114:	or     edx,eax
  41a116:	push   cs
  41a117:	mov    al,ds:0x3aef1a32
  41a11c:	dec    esi
  41a11d:	jge    0x41a0a7
  41a11f:	mov    ebp,0xc67568e0
  41a124:	daa    
  41a125:	sbb    BYTE PTR [edi+0x79c1a3c4],0x6f
  41a12c:	and    DWORD PTR [edx],0xa96631eb
  41a132:	sbb    DWORD PTR [edi+0x12],0xdeebbc5
  41a139:	add    eax,0x4a28d644
  41a13e:	cmc    
  41a13f:	adc    DWORD PTR ds:0xe8e59f8,ebx
  41a145:	hlt    
  41a146:	mov    dl,0x7c
  41a148:	cwde   
  41a149:	cs jmp 0x1f8ea597
  41a14f:	std    
  41a150:	jl     0x41a155
  41a152:	mov    edx,0x2bd43f5f
  41a157:	xchg   edi,eax
  41a158:	nop
  41a159:	enter  0xfc4b,0xcc
  41a15d:	push   eax
  41a15e:	adc    eax,0x1a22741a
  41a163:	mov    esp,0x65375069
  41a168:	ja     0x41a189
  41a16a:	inc    esi
  41a16b:	sub    esp,edx
  41a16d:	dec    ecx
  41a16e:	aam    0x3b
  41a170:	(bad)  
  41a171:	mov    ecx,0x5d97a731
  41a176:	mov    ch,0xd9
  41a178:	sub    al,0x7d
  41a17a:	and    eax,0x3dd20988
  41a17f:	inc    ecx
  41a180:	mov    ds:0x267fca68,al
  41a185:	mov    ebp,0x5aa37cf9
  41a18a:	mov    ds:0xa7019c72,eax
  41a18f:	sbb    bh,BYTE PTR [edx]
  41a191:	dec    ecx
  41a192:	out    dx,ax
  41a194:	sub    al,0x6e
  41a196:	stc    
  41a197:	dec    edi
  41a198:	shl    BYTE PTR [esi+0x5935f495],0x89
  41a19f:	je     0x41a1eb
  41a1a1:	fld    DWORD PTR [esi-0x3c]
  41a1a4:	in     al,0x7b
  41a1a6:	mov    ebp,0x85b49747
  41a1ab:	sub    ebx,ecx
  41a1ad:	stos   BYTE PTR es:[edi],al
  41a1ae:	mov    cl,0x47
  41a1b0:	mov    ecx,0x69cb81c1
  41a1b5:	ret    0x9743
  41a1b8:	jno    0x41a22c
  41a1ba:	fwait
  41a1bb:	je     0x41a1d2
  41a1bd:	cmp    al,BYTE PTR [eax+0x44]
  41a1c0:	call   0x961b:0xc02c4f2f
  41a1c7:	in     eax,dx
  41a1c8:	xor    BYTE PTR [eax+0x49],dh
  41a1cb:	into   
  41a1cc:	int3   
  41a1cd:	dec    edx
  41a1ce:	out    dx,eax
  41a1cf:	pushf  
  41a1d0:	das    
  41a1d1:	mov    al,ds:0xbc405530
  41a1d6:	js     0x41a197
  41a1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1d9:	pop    es
  41a1da:	xlat   BYTE PTR ds:[ebx]
  41a1db:	add    al,ah
  41a1dd:	fdivr  DWORD PTR fs:[ebx-0x3d]
  41a1e1:	leave  
  41a1e2:	or     DWORD PTR [ecx],esi
  41a1e4:	pop    esi
  41a1e5:	(bad)  
  41a1e6:	jge    0x41a1eb
  41a1e8:	(bad)  
  41a1e9:	mov    edi,0xecccec2e
  41a1ee:	fnstenv [ecx]
  41a1f0:	and    BYTE PTR [eax+eax*8+0x6064ffb1],ah
  41a1f7:	mov    ds:0xeb3462ff,eax
  41a1fc:	xchg   ebx,eax
  41a1fd:	inc    edi
  41a1fe:	test   BYTE PTR [edx],bl
  41a200:	imul   ecx
  41a202:	loope  0x41a1a0
  41a204:	lahf   
  41a205:	or     ax,0xeb34
  41a209:	inc    esp
  41a20a:	or     al,0xd1
  41a20c:	xor    esi,DWORD PTR [edx]
  41a20e:	test   DWORD PTR [esi],esi
  41a210:	ret    0xcbc
  41a213:	jnp    0x41a244
  41a215:	cmp    al,0x5b
  41a217:	sbb    al,0x2a
  41a219:	sub    DWORD PTR [esi+0x33551461],edx
  41a21f:	cld    
  41a220:	int3   
  41a221:	mov    edi,0x25390f9a
  41a226:	or     BYTE PTR [edi],bl
  41a228:	adc    al,BYTE PTR [esp+edx*4]
  41a22b:	dec    ebp
  41a22c:	(bad)  
  41a22d:	sub    al,0x3a
  41a22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a230:	lahf   
  41a231:	mov    dl,0x66
  41a233:	sbb    DWORD PTR [edx-0x55],ebx
  41a236:	popf   
  41a237:	push   edx
  41a238:	(bad)  
  41a239:	xor    DWORD PTR [esi+0x1161775d],ebp
  41a23f:	mov    ds:0xb1936842,al
  41a244:	dec    ebp
  41a245:	jl     0x41a1ce
  41a247:	sub    BYTE PTR [esi+0x68],0xf0
  41a24b:	xchg   BYTE PTR [edx+eax*1-0x3f],cl
  41a24f:	dec    esi
  41a250:	xchg   ecx,eax
  41a251:	adc    al,dh
  41a253:	xor    edx,esp
  41a255:	les    edi,FWORD PTR [edi+edx*8-0x1a]
  41a259:	jnp    0x41a244
  41a25b:	je     0x41a27c
  41a25d:	dec    esi
  41a25e:	aaa    
  41a25f:	js     0x41a2db
  41a261:	lahf   
  41a262:	mov    esi,0x5d3d8bc0
  41a267:	je     0x41a219
  41a269:	test   DWORD PTR [edi],eax
  41a26b:	outs   dx,BYTE PTR ds:[esi]
  41a26c:	xor    cl,ch
  41a26e:	shl    BYTE PTR [eax-0x438aa2c9],0x85
  41a275:	out    0x4c,al
  41a277:	and    cl,BYTE PTR [edx]
  41a279:	imul   eax,DWORD PTR [eax+eiz*8-0x11647694],0x3ac7fc2e
  41a284:	adc    al,0x6d
  41a286:	push   eax
  41a287:	add    DWORD PTR [esi+0x5c],eax
  41a28a:	out    dx,eax
  41a28b:	pop    esp
  41a28c:	add    bh,ah
  41a28e:	pop    eax
  41a28f:	sub    BYTE PTR [esi+edx*2+0x76],ch
  41a293:	mov    eax,0x6fa90406
  41a298:	push   eax
  41a299:	stos   BYTE PTR es:[edi],al
  41a29a:	xlat   BYTE PTR ds:[ebx]
  41a29b:	imul   esp,ebp,0x4e13744
  41a2a1:	daa    
  41a2a2:	int    0xf0
  41a2a4:	repnz mov ecx,0xbb3c5602
  41a2aa:	xchg   DWORD PTR [eax-0x13],edi
  41a2ad:	in     eax,0x77
  41a2af:	je     0x41a252
  41a2b1:	aaa    
  41a2b2:	sub    eax,0x731cf8b2
  41a2b7:	sub    DWORD PTR [edi-0x60c2241f],ebx
  41a2bd:	pop    ecx
  41a2be:	xchg   BYTE PTR [edi+0x5f0a7ff3],ch
  41a2c4:	mov    edx,0xaab897e1
  41a2c9:	xchg   BYTE PTR [edx+eax*4],al
  41a2cc:	test   eax,0x4ab22913
  41a2d1:	mov    cl,0xda
  41a2d3:	fisub  DWORD PTR [edx]
  41a2d5:	jle    0x41a31e
  41a2d7:	mov    bh,0x13
  41a2d9:	cmp    DWORD PTR [edx+0x18d6b65e],edi
  41a2df:	inc    esi
  41a2e0:	jnp    0x41a2f6
  41a2e2:	rol    DWORD PTR [eax+0x58],1
  41a2e5:	cmp    eax,0x3fb1df81
  41a2ea:	add    esp,ebx
  41a2ec:	iret   
  41a2ed:	ss jl  0x41a283
  41a2f0:	mov    ebx,DWORD PTR [edx-0x4a0a5677]
  41a2f6:	add    dh,BYTE PTR [ebp+0x27]
  41a2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2fa:	rcl    DWORD PTR [edx],1
  41a2fc:	out    0xd0,al
  41a2fe:	fsub   QWORD PTR [ecx-0x7828e128]
  41a304:	adc    edi,DWORD PTR [edi]
  41a306:	xchg   edi,eax
  41a307:	mov    bl,0x34
  41a309:	hlt    
  41a30a:	mov    ebp,0xcf9e8ae4
  41a30f:	push   0xffffffea
  41a311:	std    
  41a312:	push   edi
  41a313:	pop    ss
  41a314:	mov    esp,0xacf724bb
  41a319:	jo     0x41a2d2
  41a31b:	sub    DWORD PTR [ebx-0x26c639f4],0x94273615
  41a325:	shr    ebx,0x49
  41a328:	pop    edx
  41a329:	dec    edx
  41a32a:	jne    0x41a397
  41a32c:	mov    ds:0x29b9c30f,eax
  41a331:	popa   
  41a332:	cmp    al,BYTE PTR [esi]
  41a334:	repnz or esp,DWORD PTR [eax+0x5d]
  41a338:	or     BYTE PTR [ebx-0x1f091c85],cl
  41a33e:	stos   BYTE PTR es:[edi],al
  41a33f:	mov    DWORD PTR [eax-0x748684ed],ecx
  41a345:	retf   0x234
  41a348:	xchg   DWORD PTR [eax-0x18438ed6],ecx
  41a34e:	stc    
  41a34f:	push   cs
  41a350:	jbe    0x41a393
  41a352:	test   bh,dh
  41a354:	pop    esi
  41a355:	inc    esp
  41a356:	mov    ch,0x71
  41a358:	mov    esp,ecx
  41a35a:	cld    
  41a35b:	aaa    
  41a35c:	xor    eax,DWORD PTR [edi+0x1ab3dabc]
  41a362:	imul   ebp,DWORD PTR [edx],0xffffffee
  41a365:	out    0xf3,eax
  41a367:	daa    
  41a368:	pop    ebx
  41a369:	ret    
  41a36a:	jecxz  0x41a3d7
  41a36c:	sbb    al,0xc
  41a36e:	out    0x78,al
  41a370:	dec    ebx
  41a371:	mov    ?,WORD PTR [edx+0xb]
  41a374:	repz popf 
  41a376:	adc    al,0xef
  41a378:	int    0xcd
  41a37a:	in     eax,0x57
  41a37c:	mov    cl,0xc5
  41a37e:	jne    0x41a3b6
  41a380:	aad    0xbf
  41a382:	or     al,0xd4
  41a384:	push   edx
  41a386:	cli    
  41a387:	popa   
  41a388:	fsub   DWORD PTR ds:0x2fdda24e
  41a38e:	data16 out dx,al
  41a390:	or     bl,ah
  41a392:	push   ebp
  41a393:	out    dx,al
  41a394:	and    eax,0xd11efe9c
  41a399:	add    BYTE PTR [edx],bl
  41a39b:	cmp    al,ah
  41a39d:	pop    ecx
  41a39e:	fmul   QWORD PTR [edx-0x103a573d]
  41a3a4:	fcmovu st,st(3)
  41a3a6:	push   ecx
  41a3a7:	test   DWORD PTR [edx+0x5e5a37a9],ebp
  41a3ad:	pop    ebx
  41a3ae:	ins    DWORD PTR es:[edi],dx
  41a3af:	lods   eax,DWORD PTR ds:[esi]
  41a3b0:	mov    ah,0x5a
  41a3b2:	sub    edi,eax
  41a3b4:	fs sar dl,1
  41a3b7:	dec    ecx
  41a3b8:	push   es
  41a3b9:	test   eax,0x328140aa
  41a3be:	mov    dl,0xb4
  41a3c0:	pop    es
  41a3c1:	push   edi
  41a3c2:	repnz iret 
  41a3c4:	dec    edx
  41a3c5:	mov    esp,0x3584de09
  41a3ca:	pop    edx
  41a3cb:	out    dx,al
  41a3cc:	and    al,0xd0
  41a3cf:	js     0x41a37e
  41a3d1:	ftst   
  41a3d3:	xor    BYTE PTR [eax+0x24],al
  41a3d6:	adc    ebp,eax
  41a3d8:	int3   
  41a3d9:	inc    eax
  41a3da:	in     al,0xf
  41a3dc:	in     eax,dx
  41a3dd:	jge    0x41a44c
  41a3df:	clc    
  41a3e0:	lock fsubrp st(7),st
  41a3e3:	cli    
  41a3e4:	leave  
  41a3e5:	mov    esp,0xa801d845
  41a3ea:	xchg   esi,eax
  41a3eb:	jle    0x41a37a
  41a3ed:	aad    0xcf
  41a3ef:	or     eax,0xf3bef22c
  41a3f4:	iret   
  41a3f5:	(bad)  
  41a3f6:	jmp    0xb1a9:0x30f5a64f
  41a3fd:	push   ecx
  41a3fe:	mov    WORD PTR [edi-0x10],es
  41a401:	jno    0x41a3c2
  41a403:	(bad)
  41a408:	cmp    ebx,DWORD PTR [ebp-0x39444d1f]
  41a40e:	and    DWORD PTR [ebx+0xe],edi
  41a411:	aas    
  41a412:	test   al,0x39
  41a414:	retf   0xb7cb
  41a417:	ror    esi,0xe
  41a41a:	das    
  41a41b:	adc    edi,DWORD PTR [edx-0x17203714]
  41a421:	dec    ecx
  41a422:	jle    0x41a43e
  41a424:	pop    eax
  41a425:	and    al,0x6f
  41a427:	jle    0x41a3f3
  41a429:	pop    ebp
  41a42a:	dec    esp
  41a42b:	daa    
  41a42c:	jg     0x41a46f
  41a42e:	ins    BYTE PTR es:[edi],dx
  41a42f:	pop    edx
  41a430:	jecxz  0x41a463
  41a432:	and    eax,0x39d98988
  41a437:	push   0x89fbf9ee
  41a43c:	sbb    eax,0x733207a9
  41a441:	pop    esp
  41a442:	clc    
  41a443:	ds pushf 
  41a445:	movntq QWORD PTR [ecx],mm7
  41a448:	(bad)  
  41a449:	jmp    0xfb2c20c3
  41a44e:	jg     0x41a475
  41a450:	push   esi
  41a451:	inc    esp
  41a452:	cmp    DWORD PTR [esi+0x63c0f3b4],edi
  41a458:	dec    edi
  41a459:	sbb    al,0xbf
  41a45b:	(bad)  
  41a45c:	(bad)  
  41a45d:	mov    ebp,0x86ac2088
  41a462:	aad    0x8c
  41a464:	adc    al,0x1a
  41a466:	add    al,0x71
  41a468:	jmp    0xc96ee0a3
  41a46d:	mov    edi,0x847e1638
  41a472:	mov    ebp,0x55e9bf77
  41a477:	lods   al,BYTE PTR ds:[esi]
  41a478:	push   es
  41a479:	mov    esp,0xbd945a2c
  41a47e:	mov    esp,0xcc678e1e
  41a483:	pop    esi
  41a484:	lahf   
  41a485:	sbb    BYTE PTR [esp+ecx*4+0x70],0xa6
  41a48a:	xchg   esp,eax
  41a48b:	push   eax
  41a48c:	scas   eax,DWORD PTR es:[edi]
  41a48d:	adc    DWORD PTR [edx+eiz*1],ecx
  41a490:	aad    0xaf
  41a492:	mov    ecx,0xd57326ab
  41a497:	xor    cl,BYTE PTR [edi-0x2fd35efb]
  41a49d:	push   0x9fbf84ac
  41a4a2:	sbb    BYTE PTR [esi+0x51],0x9
  41a4a6:	stos   BYTE PTR es:[edi],al
  41a4a7:	fstp   DWORD PTR [ebx-0x6dbac012]
  41a4ad:	out    0x55,al
  41a4af:	mov    ebx,0xaccba0c9
  41a4b4:	push   edx
  41a4b5:	inc    ebx
  41a4b6:	fneni(8087 only) 
  41a4b8:	inc    edi
  41a4b9:	add    al,0xc7
  41a4bb:	push   ebp
  41a4bc:	sahf   
  41a4bd:	push   ebx
  41a4be:	or     ebp,DWORD PTR [edi-0x3618eeff]
  41a4c4:	sbb    cl,dh
  41a4c6:	or     ebp,DWORD PTR [edi+0x4c5533da]
  41a4cc:	mov    ?,WORD PTR [ebx-0x7f190a87]
  41a4d2:	inc    edi
  41a4d3:	push   esi
  41a4d4:	sbb    DWORD PTR [edx-0x66b3fc40],edx
  41a4da:	mov    eax,0x75754ca1
  41a4df:	jmp    0xdf78a014
  41a4e4:	adc    eax,0x92cb8d34
  41a4e9:	sahf   
  41a4ea:	cmp    al,0x97
  41a4ec:	cmp    cl,0x54
  41a4ef:	pop    es
  41a4f0:	out    0x4c,al
  41a4f2:	jno    0x41a493
  41a4f4:	ins    DWORD PTR es:[edi],dx
  41a4f5:	adc    DWORD PTR [edx+ebx*1],0x45286652
  41a4fc:	dec    edx
  41a4fd:	jmp    DWORD PTR [esi+0xc6fafd0]
  41a503:	sub    al,0x73
  41a505:	and    edx,edi
  41a507:	mov    bh,0x1
  41a509:	mov    dh,0x45
  41a50b:	sub    al,ch
  41a50d:	mov    al,ds:0xff1852bd
  41a512:	adc    esp,DWORD PTR [edx+0x7e]
  41a515:	push   0xe2131d52
  41a51a:	mov    bl,0xf5
  41a51c:	stos   BYTE PTR es:[edi],al
  41a51d:	in     eax,dx
  41a51e:	ja     0x41a4c3
  41a520:	jge    0x41a4f6
  41a522:	jne    0x41a4f1
  41a524:	ret    
  41a525:	nop
  41a526:	pop    ebx
  41a527:	add    eax,0xeafe7db9
  41a52c:	fcmove st,st(1)
  41a52e:	int3   
  41a52f:	jmp    0x7ecb3207
  41a534:	loopne 0x41a4b7
  41a536:	ret    
  41a537:	cs mov bl,0xbc
  41a53a:	es jge 0x41a4e9
  41a53d:	cmp    DWORD PTR [ecx+eiz*1-0x46450492],eax
  41a544:	fdivr  st(4),st
  41a546:	and    al,0x75
  41a548:	(bad)  
  41a549:	aad    0x41
  41a54b:	sub    ah,BYTE PTR [eax+0x323ece0c]
  41a551:	and    DWORD PTR [edi+0x40babcb6],esi
  41a557:	push   es
  41a558:	cs pop es
  41a55a:	sub    esi,DWORD PTR [esi-0x34]
  41a55d:	cmp    al,0xe1
  41a55f:	sti    
  41a560:	bound  edi,QWORD PTR [edx+0x5a]
  41a563:	aas    
  41a564:	aaa    
  41a565:	popf   
  41a566:	sbb    eax,0xb4ee241c
  41a56b:	pushf  
  41a56c:	mov    edi,0x388ec973
  41a571:	jl     0x41a591
  41a573:	scas   al,BYTE PTR es:[edi]
  41a574:	loope  0x41a580
  41a576:	addr16 imul edx,ebp,0xffffff96
  41a57a:	ja     0x41a5f2
  41a57c:	daa    
  41a57d:	xor    edx,DWORD PTR [ebx-0xedd50ad]
  41a583:	or     al,0x67
  41a585:	(bad)  
  41a586:	neg    BYTE PTR [ebp+edi*4-0x37b47bd7]
  41a58d:	jmp    0x41a578
  41a58f:	adc    BYTE PTR [esi+0x2fbd5634],ch
  41a595:	sbb    BYTE PTR [edx+0x66b40bed],al
  41a59b:	adc    al,BYTE PTR [esi+0x3fc971c5]
  41a5a1:	push   edi
  41a5a2:	rol    BYTE PTR [esi+esi*4+0x5a07be1c],1
  41a5a9:	sbb    al,ah
  41a5ab:	adc    BYTE PTR [edx-0x80],cl
  41a5ae:	adc    eax,0x6ff8a9e5
  41a5b3:	call   0xe85c:0x4f1a3f6
  41a5ba:	and    eax,0x7388a44d
  41a5bf:	mov    ds:0xdaab81c8,eax
  41a5c4:	lods   al,BYTE PTR ds:[esi]
  41a5c5:	xor    eax,0x15225622
  41a5ca:	adc    eax,0x2ebb8418
  41a5cf:	xor    DWORD PTR ds:0xbdce4d3b,esp
  41a5d5:	mov    ebx,0x938afe4a
  41a5da:	test   BYTE PTR [ebp-0x25],0xfd
  41a5de:	xchg   DWORD PTR [esi+ebx*4],edi
  41a5e1:	arpl   WORD PTR [edx+ecx*8],sp
  41a5e4:	dec    ecx
  41a5e5:	add    BYTE PTR [ecx+eiz*8-0x62],ch
  41a5e9:	jne    0x41a5a6
  41a5eb:	mov    ecx,0x89a6e461
  41a5f0:	shl    ah,0x4f
  41a5f3:	addr16 push 0x34
  41a5f6:	mov    ecx,0xaf11bd30
  41a5fb:	mov    bl,0xa9
  41a5fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5fe:	retf   
  41a5ff:	mov    ebp,0xb9ee5c83
  41a604:	inc    esi
  41a605:	xchg   edx,eax
  41a606:	sub    DWORD PTR [eax+0xc22d8b2],ecx
  41a60c:	add    al,0xb
  41a60e:	fiadd  WORD PTR [ecx]
  41a610:	pop    esi
  41a611:	loop   0x41a5ce
  41a613:	push   ecx
  41a614:	xchg   esi,eax
  41a615:	mov    ebp,0xf6c2da49
  41a61a:	imul   edi,edx,0x36
  41a61d:	nop
  41a61e:	xchg   edx,eax
  41a61f:	call   ecx
  41a621:	retf   0xdbad
  41a624:	push   esp
  41a625:	pop    ebx
  41a626:	jp     0x41a5b7
  41a628:	scas   eax,DWORD PTR es:[edi]
  41a629:	sti    
  41a62a:	clc    
  41a62b:	mov    BYTE PTR [esi-0x5d],dl
  41a62e:	dec    ecx
  41a62f:	xchg   esi,eax
  41a630:	inc    esi
  41a631:	push   es
  41a632:	int    0x73
  41a634:	and    eax,0x6699a026
  41a639:	add    BYTE PTR [ecx-0x65f9e95c],ch
  41a63f:	aad    0x82
  41a641:	cmp    eax,0xd7843da6
  41a646:	int    0xaf
  41a648:	jno    0x41a625
  41a64a:	jg     0x41a6a0
  41a64c:	adc    BYTE PTR [ebx],al
  41a64e:	inc    esi
  41a64f:	xlat   BYTE PTR ds:[ebx]
  41a650:	add    bh,BYTE PTR [ebp+ebp*4-0xaed4270]
  41a657:	xchg   esi,eax
  41a658:	dec    edi
  41a659:	cwde   
  41a65a:	lock outs dx,BYTE PTR ds:[esi]
  41a65c:	xchg   ebx,eax
  41a65d:	mov    ah,0x76
  41a65f:	cdq    
  41a660:	cmp    BYTE PTR [ebp-0x97d1cd8],dh
  41a666:	imul   edi,DWORD PTR [edx+0x6f2ce5df],0xffffffe7
  41a66d:	pushf  
  41a66e:	seto   BYTE PTR ss:[ebx+0x22576bdc]
  41a676:	mov    ecx,0xef6e808
  41a67b:	lock inc eax
  41a67d:	cmp    DWORD PTR [eax+eiz*1],0xe96507ee
  41a684:	dec    ebx
  41a685:	fdivr  st,st(7)
  41a687:	ret    
  41a688:	(bad)  
  41a689:	pop    es
  41a68a:	out    dx,al
  41a68b:	call   0x5cfa:0xee6a7765
  41a692:	jecxz  0x41a700
  41a694:	mov    al,0x25
  41a696:	xor    DWORD PTR [esi],edx
  41a698:	sub    edi,ecx
  41a69a:	loopne 0x41a6a4
  41a69c:	fwait
  41a69d:	rcr    BYTE PTR [eax-0x18],1
  41a6a0:	jl     0x41a6e5
  41a6a2:	and    esi,DWORD PTR [ecx+ecx*1-0x2d1e9bb7]
  41a6a9:	aaa    
  41a6aa:	es aas 
  41a6ac:	aam    0x40
  41a6ae:	mov    bl,0x26
  41a6b0:	hlt    
  41a6b1:	fiadd  DWORD PTR [ebx]
  41a6b3:	shl    BYTE PTR [ecx-0xc6a5d4b],1
  41a6b9:	jp     0x41a70f
  41a6bb:	repnz in al,dx
  41a6bd:	aaa    
  41a6be:	push   ebp
  41a6bf:	pop    esp
  41a6c0:	xchg   esi,eax
  41a6c1:	out    0x34,al
  41a6c3:	lock sub esp,ebx
  41a6c6:	(bad)  
  41a6c7:	jae    0x41a6c7
  41a6c9:	arpl   WORD PTR [ebx+0x4c609235],cx
  41a6cf:	sar    dl,cl
  41a6d1:	aaa    
  41a6d2:	repnz scas al,BYTE PTR es:[edi]
  41a6d4:	jne    0x41a677
  41a6d6:	sbb    eax,0xa6b51ca6
  41a6db:	jb     0x41a6df
  41a6dd:	jo     0x41a6f0
  41a6df:	inc    edi
  41a6e0:	shl    ebp,1
  41a6e2:	call   0x6400f63c
  41a6e7:	mov    ds:0x59458392,al
  41a6ec:	inc    BYTE PTR [esi]
  41a6ee:	inc    esi
  41a6ef:	(bad)  
  41a6f0:	mov    ?,WORD PTR [esi+edx*1-0x23]
  41a6f4:	push   ss
  41a6f5:	xchg   ebp,eax
  41a6f6:	and    al,0x6a
  41a6f8:	mov    esp,0x4a87ef03
  41a6fd:	add    dl,BYTE PTR [esi]
  41a6ff:	and    BYTE PTR [eax+ecx*2],0xa4
  41a703:	mov    dh,0x2a
  41a705:	test   eax,0xfcc92dd1
  41a70a:	jb     0x41a6f0
  41a70c:	sar    DWORD PTR [esp+esi*1-0x1c],0x3e
  41a711:	xor    eax,0xf79bf32c
  41a716:	(bad)  
  41a718:	stos   BYTE PTR es:[edi],al
  41a719:	or     eax,0xf10223a8
  41a71e:	test   eax,0xb004459c
  41a723:	adc    eax,0xf5f92f70
  41a728:	mov    ah,BYTE PTR [esi+0x5b7b7595]
  41a72e:	popf   
  41a72f:	push   ecx
  41a730:	dec    DWORD PTR [esp+ebp*4]
  41a733:	dec    esi
  41a734:	mov    ah,0x17
  41a736:	jg     0x41a742
  41a738:	jb     0x41a740
  41a73a:	pop    ds
  41a73b:	popf   
  41a73c:	dec    edi
  41a73d:	cmp    ch,BYTE PTR [esi]
  41a73f:	or     eax,0x70a5fd9f
  41a744:	xchg   BYTE PTR [edi],ch
  41a746:	pop    ds
  41a747:	inc    ebx
  41a748:	xor    eax,DWORD PTR [edi-0x35]
  41a74b:	inc    edx
  41a74c:	cwde   
  41a74d:	neg    bl
  41a74f:	lahf   
  41a750:	add    al,0x1f
  41a752:	or     BYTE PTR [esi],dl
  41a754:	int    0xe2
  41a756:	jmp    0x3196d3b4
  41a75b:	pop    ds
  41a75c:	test   ah,dl
  41a75e:	int    0x7e
  41a760:	mov    ?,WORD PTR [esp+eax*2+0x7b]
  41a764:	fs xor edi,eax
  41a767:	shr    DWORD PTR [ecx+0xddd8204],1
  41a76d:	stc    
  41a76e:	js     0x41a733
  41a770:	jmp    DWORD PTR [eax]
  41a772:	push   0xbaaf3160
  41a777:	mov    esi,0xdb57d487
  41a77c:	dec    edi
  41a77d:	ret    
  41a77e:	jnp    0x41a7dc
  41a780:	inc    edx
  41a781:	das    
  41a782:	cmp    ebp,DWORD PTR [esi+0x3d]
  41a785:	push   DWORD PTR [ecx]
  41a787:	adc    esp,DWORD PTR [ebx]
  41a789:	mov    ds:0x89609e86,eax
  41a78e:	cmc    
  41a78f:	mov    bh,0x5f
  41a791:	jo     0x41a758
  41a793:	pop    ss
  41a794:	inc    edi
  41a795:	aaa    
  41a796:	pop    edi
  41a797:	ror    DWORD PTR [ebx+ecx*8+0x1f],0xfd
  41a79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a79d:	dec    ebx
  41a79e:	mov    edi,0x73df7d8d
  41a7a3:	cwde   
  41a7a4:	push   ebx
  41a7a5:	and    edx,esp
  41a7a7:	popf   
  41a7a8:	imul   DWORD PTR [ebx+0x39]
  41a7ab:	sar    BYTE PTR [eax+0x16cd0b0d],1
  41a7b1:	pop    ebx
  41a7b2:	cld    
  41a7b3:	and    BYTE PTR [eax],cl
  41a7b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b6:	loop   0x41a7b1
  41a7b8:	or     BYTE PTR ds:0xd3a9b2f1,al
  41a7be:	int    0xae
  41a7c0:	xor    dl,BYTE PTR [esi-0x45]
  41a7c3:	pop    edx
  41a7c4:	mov    esi,0xe85b6b13
  41a7c9:	xor    eax,0x5aa604ed
  41a7ce:	inc    eax
  41a7cf:	retf   0xf8b6
  41a7d2:	hlt    
  41a7d3:	mov    esi,0x96c6969c
  41a7d8:	sar    DWORD PTR [ecx-0xf7e4179],0x84
  41a7df:	jno    0x41a7d9
  41a7e1:	sub    BYTE PTR [esp+edx*4-0x10],ch
  41a7e5:	fst    DWORD PTR cs:[edx]
  41a7e8:	imul   ecx,DWORD PTR [ecx+0x7e],0xdb81f50
  41a7ef:	pop    ebx
  41a7f0:	cli    
  41a7f1:	test   DWORD PTR [ecx],ebp
  41a7f3:	mov    eax,0x950d86ce
  41a7f8:	push   0xffffffa4
  41a7fa:	xor    BYTE PTR [edi],al
  41a7fc:	add    al,0xd
  41a7fe:	xlat   BYTE PTR ds:[ebx]
  41a7ff:	aam    0xf8
  41a801:	(bad)  
  41a802:	mov    ebp,0xb04ea987
  41a807:	sbb    BYTE PTR [ecx-0x6f],bh
  41a80a:	sbb    eax,0xd78239ac
  41a80f:	adc    al,0x68
  41a811:	mov    ecx,0x29c4e9d8
  41a816:	sbb    DWORD PTR [edi],ebx
  41a818:	repnz stc 
  41a81a:	jge    0x41a7a8
  41a81c:	jp     0x41a80e
  41a81e:	(bad)  
  41a81f:	cs sti 
  41a821:	outs   dx,BYTE PTR ds:[esi]
  41a822:	jo     0x41a859
  41a824:	jno    0x41a803
  41a826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a827:	mov    ecx,0x37d0d9ef
  41a82c:	fsub   QWORD PTR [ecx]
  41a82e:	loop   0x41a88e
  41a830:	shr    BYTE PTR [ebx],0x5a
  41a833:	inc    ecx
  41a834:	xor    eax,0x6c1d5455
  41a839:	push   ebx
  41a83a:	pop    es
  41a83b:	sbb    al,0xa9
  41a83d:	jo     0x41a8a6
  41a83f:	mov    DWORD PTR [ebp-0x38],edi
  41a842:	mov    dh,BYTE PTR [ecx+ebp*1]
  41a845:	scas   al,BYTE PTR es:[edi]
  41a846:	sub    al,0xe2
  41a848:	ret    0x79fa
  41a84b:	mov    esp,0xd276bcbd
  41a850:	ins    DWORD PTR es:[edi],dx
  41a851:	cmp    edi,DWORD PTR [ebp-0x5c]
  41a854:	sub    esp,ebx
  41a856:	add    DWORD PTR [ecx+0x730502c3],edi
  41a85c:	sbb    BYTE PTR ds:[ecx+0xb],al
  41a860:	xchg   DWORD PTR [ebp-0x54],edx
  41a863:	push   cs
  41a864:	mov    BYTE PTR [esi+0x70d7e14f],dl
  41a86a:	outs   dx,DWORD PTR ds:[esi]
  41a86b:	ja     0x41a840
  41a86d:	cld    
  41a86e:	ins    DWORD PTR es:[edi],dx
  41a86f:	inc    ebx
  41a870:	push   0xffffff82
  41a872:	mov    al,0x9d
  41a874:	rcl    DWORD PTR [ecx+0x2a2aad50],cl
  41a87a:	mov    eax,0x112c4616
  41a87f:	mov    bh,0x3f
  41a881:	std    
  41a882:	or     dl,BYTE PTR [ebx+0xddf547b]
  41a888:	mov    DWORD PTR [ecx-0x56757165],ecx
  41a88e:	push   eax
  41a88f:	daa    
  41a890:	xor    dh,BYTE PTR ds:[eax-0x7494c355]
  41a897:	sub    edx,edx
  41a899:	cs mov esp,esi
  41a89c:	adc    eax,0x1a50d1f3
  41a8a1:	xor    eax,0x541ea3e3
  41a8a6:	pop    ebx
  41a8a7:	stos   BYTE PTR es:[edi],al
  41a8a8:	xchg   ebp,eax
  41a8a9:	jns    0x41a894
  41a8ab:	cmp    al,0xd8
  41a8ad:	xor    DWORD PTR [eax-0x4d349572],ebx
  41a8b3:	pushf  
  41a8b4:	aas    
  41a8b5:	dec    ebp
  41a8b6:	dec    ebp
  41a8b7:	leave  
  41a8b8:	pop    ss
  41a8b9:	fincstp 
  41a8bb:	sub    eax,0xeeb07f02
  41a8c0:	fimul  WORD PTR [edi]
  41a8c2:	outs   dx,BYTE PTR ds:[esi]
  41a8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c4:	mov    eax,0x2562268c
  41a8c9:	(bad)  
  41a8ca:	and    al,0x4e
  41a8cc:	(bad)  
  41a8cd:	loopne 0x41a91d
  41a8cf:	stc    
  41a8d0:	push   edx
  41a8d1:	out    0x1a,ax
  41a8d4:	and    al,dl
  41a8d6:	push   ebp
  41a8d7:	adc    DWORD PTR [eax+0x64],edx
  41a8da:	inc    ebp
  41a8db:	push   ecx
  41a8dc:	mov    bl,0xc
  41a8de:	mov    al,0xea
  41a8e0:	sahf   
  41a8e1:	fiadd  WORD PTR [eax-0x7e]
  41a8e4:	inc    esi
  41a8e5:	test   BYTE PTR [eax-0x7c7282d3],dh
  41a8eb:	and    eax,0x483018c7
  41a8f0:	mov    ebx,0x949243a4
  41a8f5:	dec    ecx
  41a8f6:	sbb    BYTE PTR [ebx-0x4a292df8],bl
  41a8fc:	gs daa 
  41a8fe:	sub    DWORD PTR [eax-0x6],ecx
  41a901:	adc    al,0x8e
  41a903:	lods   al,BYTE PTR ds:[esi]
  41a904:	or     eax,0x72b6fa77
  41a909:	push   eax
  41a90a:	adc    al,0x7b
  41a90c:	int3   
  41a90d:	xchg   ecx,eax
  41a90e:	cdq    
  41a90f:	sti    
  41a910:	int3   
  41a911:	addr16 daa 
  41a913:	test   DWORD PTR [esi],esi
  41a915:	imul   edi,DWORD PTR [esi-0x7d09ccb5],0xf96f99fd
  41a91f:	fsub   st(4),st
  41a921:	push   0xb2912105
  41a926:	ret    0xd316
  41a929:	jno    0x41a8cd
  41a92b:	mov    bl,0x71
  41a92d:	xlat   BYTE PTR ds:[ebx]
  41a92e:	sbb    edi,0xfffffffe
  41a931:	lock push edi
  41a933:	xor    eax,0xbad041
  41a938:	and    al,0x4d
  41a93a:	jp     0x41a93d
  41a93c:	mov    eax,0xf11da70
  41a941:	jmp    0x8a9:0x5ff2dfd6
  41a948:	adc    ebx,DWORD PTR [edx-0x4a]
  41a94b:	daa    
  41a94c:	into   
  41a94d:	sub    al,0x4c
  41a94f:	std    
  41a950:	call   0x769f8035
  41a955:	inc    sp
  41a957:	int    0x33
  41a959:	sub    al,BYTE PTR [eax+0x6cdcfb0e]
  41a95f:	mov    ebp,0x20c21559
  41a964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a965:	sbb    ecx,DWORD PTR [ebx-0x5a]
  41a968:	lahf   
  41a969:	iret   
  41a96a:	pusha  
  41a96b:	or     edi,DWORD PTR [ebp-0x73f6da7d]
  41a971:	mov    cl,0xbc
  41a973:	cmp    edx,DWORD PTR [eax-0x42]
  41a976:	bound  ebp,QWORD PTR [esp+ebx*1-0x7f]
  41a97a:	in     al,dx
  41a97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a97c:	mov    ah,0x8c
  41a97e:	ja     0x41a968
  41a980:	push   ecx
  41a981:	aad    0x11
  41a983:	xor    edx,ebp
  41a985:	pusha  
  41a986:	mov    al,ds:0x691e06f4
  41a98b:	jmp    0xae18:0xcd4aee03
  41a992:	sbb    DWORD PTR [esi],ebx
  41a994:	mov    dl,0x28
  41a996:	jg     0x41a959
  41a998:	popa   
  41a999:	lods   al,BYTE PTR ds:[esi]
  41a99a:	inc    esp
  41a99b:	jge    0x41a9fd
  41a99d:	ficomp DWORD PTR [ecx+edx*8-0x1af3ad3a]
  41a9a4:	xor    edx,DWORD PTR [ecx]
  41a9a6:	mov    dh,0x42
  41a9a8:	repnz add al,0x54
  41a9ab:	stc    
  41a9ac:	jbe    0x41a946
  41a9ae:	jae    0x41a9cb
  41a9b0:	mov    ecx,DWORD PTR [edx-0x5e]
  41a9b3:	xchg   esi,eax
  41a9b4:	icebp  
  41a9b5:	push   edi
  41a9b6:	in     eax,dx
  41a9b7:	adc    dh,dl
  41a9b9:	dec    esi
  41a9ba:	lea    esp,[ecx+0x72]
  41a9bd:	cmc    
  41a9be:	sahf   
  41a9bf:	xor    BYTE PTR [esi+0xe],0x7e
  41a9c3:	fsqrt  
  41a9c5:	push   esi
  41a9c6:	mov    cl,0x74
  41a9c8:	push   cs
  41a9c9:	sbb    eax,ecx
  41a9cb:	jge    0x41a9f2
  41a9cd:	les    ebp,FWORD PTR [esi]
  41a9cf:	add    DWORD PTR [edx+0x36],esi
  41a9d2:	push   0xe535b22a
  41a9d7:	pop    ebp
  41a9d8:	imul   ebp,ebx,0x3af1f15c
  41a9de:	out    dx,eax
  41a9df:	adc    eax,DWORD PTR [ebx-0x4]
  41a9e2:	sbb    al,0xaa
  41a9e4:	out    dx,eax
  41a9e5:	lods   al,BYTE PTR ds:[esi]
  41a9e6:	je     0x41a9d2
  41a9e8:	out    dx,al
  41a9e9:	in     al,dx
  41a9ea:	mov    bl,0x67
  41a9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ed:	dec    ebx
  41a9ee:	imul   ecx,DWORD PTR [ebp+0x35d45d59],0x902ccdb8
  41a9f8:	sub    BYTE PTR [ecx+0x4e10b423],al
  41a9fe:	in     eax,dx
  41a9ff:	int3   
  41aa00:	and    eax,0x1d98f41c
  41aa05:	pop    esp
  41aa06:	mov    ah,cl
  41aa08:	inc    eax
  41aa09:	add    BYTE PTR [ecx+0x2673ae10],dh
  41aa0f:	xchg   ecx,eax
  41aa10:	mov    cl,0x7e
  41aa12:	mov    cx,0x1330
  41aa16:	rcr    DWORD PTR [edx+0xdfacc80],cl
  41aa1c:	neg    DWORD PTR ds:0xa8faa4fc
  41aa22:	push   esp
  41aa23:	sub    eax,0x5d29a97b
  41aa28:	cmp    eax,0x3ba3e42e
  41aa2d:	jecxz  0x41aa86
  41aa2f:	push   esp
  41aa30:	loopne 0x41aa54
  41aa32:	sub    BYTE PTR [ebx],cl
  41aa34:	adc    ebp,DWORD PTR [edi-0x3f92dc2a]
  41aa3a:	sbb    esi,ebx
  41aa3c:	gs xor eax,0x828c5164
  41aa42:	sub    eax,0xd8ee7457
  41aa47:	cmp    BYTE PTR [edi],cl
  41aa49:	inc    ebp
  41aa4a:	jb     0x41a9d2
  41aa4c:	ficom  WORD PTR [eax-0x19]
  41aa4f:	into   
  41aa50:	pop    edi
  41aa51:	push   esi
  41aa52:	mov    ?,WORD PTR [eax]
  41aa54:	retf   0x195c
  41aa57:	xchg   ecx,eax
  41aa58:	mul    BYTE PTR [edi-0x74dfea1f]
  41aa5e:	sbb    DWORD PTR [esi+ebp*1-0x178c50f5],ecx
  41aa65:	call   0xd31c7e8c
  41aa6a:	dec    ecx
  41aa6b:	push   edi
  41aa6c:	or     DWORD PTR [esi+0x14],edi
  41aa6f:	adc    al,0xc
  41aa71:	xor    ebx,esp
  41aa73:	add    esp,edx
  41aa75:	ds (bad) 
  41aa77:	adc    eax,DWORD PTR [ebp-0x485aadd4]
  41aa7d:	aaa    
  41aa7e:	cmp    ecx,edx
  41aa80:	mov    bh,BYTE PTR [eax]
  41aa82:	jo     0x41aa83
  41aa84:	scas   eax,DWORD PTR es:[edi]
  41aa85:	mov    ch,0xd6
  41aa87:	jmp    0x41aa92
  41aa89:	int    0xbf
  41aa8b:	out    dx,al
  41aa8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa8d:	les    edi,FWORD PTR ds:0x1e4542b6
  41aa93:	aam    0xbb
  41aa95:	sbb    ch,BYTE PTR [ecx]
  41aa97:	into   
  41aa98:	fsub   DWORD PTR [edx+0x442a95ca]
  41aa9e:	cmp    DWORD PTR [ecx+0x0],esp
  41aaa1:	fwait
  41aaa2:	loopne 0x41aaf5
  41aaa4:	addr16 cs lahf 
  41aaa7:	ins    BYTE PTR es:[edi],dx
  41aaa8:	repz cdq 
  41aaaa:	ja     0x41aa44
  41aaac:	inc    ebx
  41aaad:	mov    esi,?
  41aaaf:	sahf   
  41aab0:	inc    eax
  41aab1:	dec    edx
  41aab2:	movups XMMWORD PTR [edi],xmm2
  41aab5:	mov    edi,0x3efc79a3
  41aaba:	gs mov ch,0xb9
  41aabd:	jns    0x41aae2
  41aabf:	popa   
  41aac0:	add    DWORD PTR [ebx-0x56],eax
  41aac3:	cmp    BYTE PTR [esi],bl
  41aac5:	into   
  41aac6:	int    0x13
  41aac8:	int    0x41
  41aaca:	hlt    
  41aacb:	popf   
  41aacc:	bound  ecx,QWORD PTR [eax+0x36]
  41aacf:	aaa    
  41aad0:	and    eax,0x7eb44adf
  41aad5:	scas   al,BYTE PTR es:[edi]
  41aad6:	inc    ebp
  41aad7:	inc    esp
  41aad8:	stc    
  41aad9:	adc    ebx,DWORD PTR [edx]
  41aadb:	and    eax,0x71cbc077
  41aae0:	ds push ebx
  41aae2:	add    dl,BYTE PTR [edi]
  41aae4:	and    DWORD PTR [edx+ecx*8-0x530352b6],ecx
  41aaeb:	(bad)  
  41aaec:	mul    BYTE PTR [ebx]
  41aaee:	ret    
  41aaef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf0:	outs   dx,BYTE PTR ds:[esi]
  41aaf1:	mov    dl,0x1
  41aaf3:	rcr    dl,1
  41aaf5:	or     dl,BYTE PTR [ebx-0x44cd7761]
  41aafb:	std    
  41aafc:	fimul  WORD PTR [ecx-0x66]
  41aaff:	outs   dx,DWORD PTR ds:[esi]
  41ab00:	push   0x4a005079
  41ab05:	outs   dx,DWORD PTR ds:[esi]
  41ab06:	xchg   ecx,eax
  41ab07:	adc    dh,dl
  41ab09:	out    dx,al
  41ab0a:	adc    al,dl
  41ab0c:	push   es
  41ab0d:	mov    esi,ebx
  41ab0f:	xchg   ebx,edx
  41ab11:	cs popa 
  41ab13:	adc    DWORD PTR [eax],0xffffff8d
  41ab16:	rcl    BYTE PTR [edi+esi*1-0x266562b0],0xe2
  41ab1e:	jae    0x41aac9
  41ab20:	and    BYTE PTR [edi-0x48],cl
  41ab23:	xchg   ebx,eax
  41ab24:	nop
  41ab25:	das    
  41ab26:	pop    ds
  41ab27:	loop   0x41aaaa
  41ab29:	adc    DWORD PTR [ecx-0x1724cd4c],esp
  41ab2f:	in     al,dx
  41ab30:	adc    DWORD PTR [ecx],esp
  41ab32:	shl    BYTE PTR [ebp+0x4b],cl
  41ab35:	(bad)  
  41ab36:	repnz ins BYTE PTR es:[edi],dx
  41ab38:	jne    0x41ab90
  41ab3a:	in     eax,0x7b
  41ab3c:	sub    ebp,DWORD PTR [ecx]
  41ab3e:	jo     0x41aac1
  41ab40:	inc    esi
  41ab41:	jl     0x41ab0d
  41ab43:	stos   BYTE PTR es:[edi],al
  41ab44:	push   ebx
  41ab45:	add    edi,DWORD PTR [edi-0x24]
  41ab48:	in     eax,0xba
  41ab4a:	mov    dl,0x74
  41ab4c:	in     al,0x5d
  41ab4e:	mov    esi,0x4578ee2e
  41ab53:	mov    ebp,0x80b18baa
  41ab58:	inc    ebp
  41ab59:	cwde   
  41ab5a:	popa   
  41ab5b:	jmp    0x775a7072
  41ab60:	mov    edi,0x77943e44
  41ab65:	iret   
  41ab66:	dec    esi
  41ab67:	lods   al,BYTE PTR ds:[esi]
  41ab68:	mov    eax,ds:0x1935e541
  41ab6d:	xor    edx,DWORD PTR [eax]
  41ab6f:	es (bad) 
  41ab71:	xchg   ebx,eax
  41ab72:	mov    ch,0x7c
  41ab74:	fstp   QWORD PTR [ecx-0x7c431971]
  41ab7a:	std    
  41ab7b:	push   edi
  41ab7c:	and    edi,esi
  41ab7e:	mov    ecx,0x11ff7c7a
  41ab83:	clc    
  41ab84:	in     al,dx
  41ab85:	cmp    BYTE PTR [ebx-0x7d],bl
  41ab88:	mov    eax,0xaa7a07b8
  41ab8d:	pop    ebp
  41ab8e:	repnz mov ?,WORD PTR [esi+0x56]
  41ab92:	add    bh,BYTE PTR [ecx-0x49]
  41ab95:	dec    esp
  41ab96:	jae    0x41abce
  41ab98:	mov    eax,ds:0xe5c495a9
  41ab9d:	push   0x2c83f4d7
  41aba2:	enter  0xe852,0x19
  41aba6:	cs nop
  41aba8:	cdq    
  41aba9:	ja     0x41ab7c
  41abab:	dec    eax
  41abac:	mov    ebp,0x90ddc8d6
  41abb1:	pop    ebx
  41abb2:	jg     0x41ab6d
  41abb4:	repz popf 
  41abb6:	arpl   WORD PTR [eax],di
  41abb8:	(bad)  
  41abb9:	stos   BYTE PTR es:[edi],al
  41abba:	inc    ebp
  41abbb:	mov    eax,ds:0x20b55921
  41abc0:	je     0x41ab7a
  41abc2:	aaa    
  41abc3:	xor    BYTE PTR [ebx-0x7f],0x37
  41abc7:	sbb    dh,BYTE PTR [edx]
  41abc9:	xchg   esi,eax
  41abca:	int    0xc1
  41abcc:	mov    dh,0xc8
  41abce:	cs inc ecx
  41abd0:	xchg   al,ch
  41abd2:	ficomp WORD PTR [esi+0x577b1d16]
  41abd8:	pop    ebp
  41abd9:	pushf  
  41abda:	mov    ecx,0x2a155d89
  41abdf:	enter  0x1e95,0xc5
  41abe3:	pop    edi
  41abe4:	sub    cl,BYTE PTR [eax]
  41abe6:	pop    edi
  41abe7:	pop    es
  41abe8:	inc    edx
  41abe9:	icebp  
  41abea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abeb:	in     al,0xb3
  41abed:	pop    ebp
  41abee:	stc    
  41abef:	call   0xf9d7bf53
  41abf4:	daa    
  41abf5:	arpl   WORD PTR [edi],ax
  41abf7:	jno    0x41ac74
  41abf9:	in     al,0xd3
  41abfb:	mov    edi,0xc51a87ff
  41ac00:	mov    al,0x9a
  41ac02:	and    ch,dh
  41ac04:	ja     0x41abe9
  41ac06:	or     DWORD PTR [ebx-0x4c],ebx
  41ac09:	xchg   ebp,eax
  41ac0a:	es mov edi,0xc95f745f
  41ac10:	lds    edi,FWORD PTR [edi-0x5b]
  41ac13:	cmp    eax,0xc3010f5d
  41ac18:	cmp    edx,DWORD PTR [edx]
  41ac1a:	xor    al,BYTE PTR [ebx]
  41ac1c:	and    ah,BYTE PTR [ebp+eiz*1-0x66]
  41ac20:	fild   DWORD PTR [ebx]
  41ac22:	scas   eax,DWORD PTR es:[edi]
  41ac23:	sbb    eax,0x26a583b7
  41ac28:	imul   edi,ebp,0x46
  41ac2b:	push   cs
  41ac2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2d:	mov    bl,0xd2
  41ac2f:	sub    eax,0xe42ecb
  41ac34:	cwde   
  41ac35:	(bad)  
  41ac37:	mov    ds:0xe3a20145,al
  41ac3c:	sbb    esp,DWORD PTR [eax-0x39b25e5e]
  41ac42:	and    al,0x2d
  41ac44:	inc    esi
  41ac45:	pop    edx
  41ac46:	add    dl,dh
  41ac48:	or     eax,0xd0aca841
  41ac4d:	or     DWORD PTR [eax-0x72a39e04],ebx
  41ac53:	hlt    
  41ac54:	in     eax,0xde
  41ac56:	ds and esp,eax
  41ac59:	add    DWORD PTR [edx],0x9a5a7ee3
  41ac5f:	or     BYTE PTR [eax],bh
  41ac61:	push   edx
  41ac62:	sub    al,0x0
  41ac64:	jmp    0x713e:0x58b83920
  41ac6b:	xor    al,0x70
  41ac6d:	gs pop edx
  41ac6f:	xchg   ebx,eax
  41ac70:	add    DWORD PTR [ecx],edx
  41ac72:	sbb    eax,0xc019b288
  41ac77:	pop    ds
  41ac78:	neg    ch
  41ac7a:	int    0x9
  41ac7c:	pop    esi
  41ac7d:	in     eax,dx
  41ac7e:	xor    ecx,eax
  41ac80:	aam    0x88
  41ac82:	mov    dl,0xe6
  41ac84:	and    al,BYTE PTR [edx-0x6f0e31eb]
  41ac8a:	inc    ecx
  41ac8b:	pushf  
  41ac8c:	ficomp WORD PTR [esi+0xb12ec84]
  41ac92:	push   eax
  41ac93:	inc    ebp
  41ac94:	dec    ebp
  41ac95:	popa   
  41ac96:	xchg   edx,eax
  41ac97:	xor    eax,0xcf99079e
  41ac9c:	rcl    cl,cl
  41ac9e:	push   cs
  41ac9f:	xchg   ecx,eax
  41aca0:	mov    esi,DWORD PTR [ebx-0x24a25af5]
  41aca6:	push   eax
  41aca7:	jo     0x41acdd
  41aca9:	mov    ds:0x7695b590,al
  41acae:	outs   dx,DWORD PTR ds:[esi]
  41acaf:	arpl   cx,si
  41acb1:	xor    al,0x45
  41acb3:	push   0xfb54704d
  41acb8:	jbe    0x41acf2
  41acba:	clc    
  41acbb:	aad    0x22
  41acbd:	jmp    0x858b:0x724d4a26
  41acc4:	scas   eax,DWORD PTR es:[edi]
  41acc5:	ds adc eax,0x434c5c4d
  41accb:	sub    DWORD PTR fs:[ecx],edx
  41acce:	not    BYTE PTR [edx+0x17fac28c]
  41acd4:	scas   eax,DWORD PTR es:[edi]
  41acd5:	jo     0x41acc5
  41acd7:	push   ds
  41acd8:	mov    eax,0x92b20467
  41acdd:	sub    DWORD PTR [ecx+0x30],edi
  41ace0:	mov    al,0x5a
  41ace2:	jae    0x41ad02
  41ace4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace5:	into   
  41ace6:	pushf  
  41ace7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace8:	sbb    BYTE PTR [esi+0x3d0227d8],bh
  41acee:	enter  0x9efc,0x67
  41acf2:	movhlps xmm7,xmm7
  41acf5:	lock mov cl,bl
  41acf8:	push   ss
  41acf9:	xor    al,0xdd
  41acfb:	ds and bh,BYTE PTR ds:[edx-0x45]
  41ad00:	mov    eax,ds:0x3df03891
  41ad05:	push   0xffffffca
  41ad07:	clc    
  41ad08:	shl    ch,0x10
  41ad0b:	bound  edx,QWORD PTR [ecx]
  41ad0d:	jecxz  0x41ad4c
  41ad0f:	icebp  
  41ad10:	mov    edi,0x7cbdac9c
  41ad15:	(bad)  
  41ad16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad17:	repz xor al,0xcc
  41ad1a:	addr16 mov al,bh
  41ad1d:	inc    ebp
  41ad1e:	jns    0x41ad5b
  41ad20:	and    DWORD PTR [esi+0x4e],esi
  41ad23:	jl     0x41ad7d
  41ad25:	cmp    DWORD PTR [eax-0x32],esi
  41ad28:	xor    eax,0x3348228
  41ad2d:	repz aas 
  41ad2f:	or     dh,BYTE PTR [ebx]
  41ad31:	xor    esi,edi
  41ad33:	xchg   ebx,eax
  41ad34:	add    al,0x8
  41ad36:	jle    0x41acd0
  41ad38:	pushf  
  41ad39:	push   ecx
  41ad3a:	pop    eax
  41ad3b:	ds adc al,0x19
  41ad3e:	and    esp,eax
  41ad40:	sub    DWORD PTR [ecx],ecx
  41ad42:	mov    edi,0x3c7776ae
  41ad47:	inc    ebp
  41ad48:	sti    
  41ad49:	push   ds
  41ad4a:	cdq    
  41ad4b:	dec    esp
  41ad4c:	or     esi,DWORD PTR [eax]
  41ad4e:	dec    edx
  41ad4f:	mov    dh,0x29
  41ad51:	icebp  
  41ad52:	dec    esp
  41ad53:	aaa    
  41ad54:	fs aaa 
  41ad56:	jns    0x41ad99
  41ad58:	cmp    al,0x64
  41ad5a:	xor    edx,0xb73ad0b1
  41ad60:	fwait
  41ad61:	xchg   edx,eax
  41ad62:	push   ebp
  41ad63:	dec    esi
  41ad64:	push   esi
  41ad65:	aaa    
  41ad66:	push   ecx
  41ad67:	xchg   ebp,eax
  41ad68:	loopne 0x41ad37
  41ad6a:	in     eax,0xb3
  41ad6c:	gs clc 
  41ad6e:	(bad)  
  41ad6f:	in     eax,0xfa
  41ad71:	jp     0x41ad8a
  41ad73:	icebp  
  41ad74:	ss stos DWORD PTR es:[edi],eax
  41ad76:	xor    DWORD PTR [edi-0x4419961b],0x22
  41ad7d:	or     eax,0x886d0739
  41ad82:	and    ebx,DWORD PTR [eax+eax*4-0x18]
  41ad86:	into   
  41ad87:	js     0x41ad87
  41ad89:	push   edi
  41ad8a:	xor    eax,0xcaec594a
  41ad8f:	mov    dl,0xe5
  41ad91:	and    esp,DWORD PTR [ecx+eax*4+0x65]
  41ad95:	cld    
  41ad96:	add    al,0x3a
  41ad98:	int3   
  41ad99:	jp     0x41adba
  41ad9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad9c:	jnp    0x41ad9d
  41ad9e:	mov    ds:0xa017b516,eax
  41ada3:	int    0x82
  41ada5:	test   eax,0x8c57a87c
  41adaa:	cmc    
  41adab:	call   0xc507da79
  41adb0:	dec    esi
  41adb1:	jecxz  0x41adb8
  41adb3:	sub    esi,esp
  41adb5:	clc    
  41adb6:	je     0x41ae0d
  41adb8:	out    0xf,eax
  41adba:	fwait
  41adbb:	push   esi
  41adbc:	test   DWORD PTR [eax+0x6c],edx
  41adbf:	mov    DWORD PTR [esp+ebp*4+0x6f],edx
  41adc3:	push   0x7d71b311
  41adc8:	mov    bl,0xa8
  41adca:	loopne 0x41ae07
  41adcc:	jp     0x41adb0
  41adce:	xchg   edx,eax
  41adcf:	inc    esi
  41add0:	push   es
  41add1:	push   esp
  41add2:	pop    ss
  41add3:	mov    ds:0xd8ff30a4,eax
  41add8:	or     esp,DWORD PTR [edx+0x2ca4dd35]
  41adde:	idiv   DWORD PTR [edi+ebx*8+0x57]
  41ade2:	push   ebp
  41ade3:	retf   0x9334
  41ade6:	paddq  mm6,QWORD PTR [edx*4-0x5e7e1261]
  41adee:	adc    BYTE PTR [esi],al
  41adf0:	ins    DWORD PTR es:[edi],dx
  41adf1:	or     eax,0x3c468c69
  41adf6:	in     eax,0x8a
  41adf8:	push   es
  41adf9:	stc    
  41adfa:	xor    BYTE PTR [edx+0x30d2e149],al
  41ae00:	sbb    ah,ah
  41ae02:	lahf   
  41ae03:	adc    edi,DWORD PTR [ecx+ebx*8+0x40264a8d]
  41ae0a:	add    eax,0xab0869a6
  41ae0f:	dec    edx
  41ae10:	pop    ss
  41ae11:	rcl    DWORD PTR [esp+esi*4],0xb0
  41ae15:	xor    eax,ecx
  41ae17:	inc    edx
  41ae18:	push   esi
  41ae19:	add    al,0x4c
  41ae1b:	mov    edx,0xd7b29177
  41ae20:	sbb    BYTE PTR [eax+0x62],dh
  41ae23:	mov    dl,0xb9
  41ae25:	inc    edx
  41ae26:	xchg   ebp,eax
  41ae27:	adc    al,0xe
  41ae29:	inc    ebp
  41ae2a:	icebp  
  41ae2b:	push   cs
  41ae2c:	mov    ah,0x55
  41ae2e:	xor    dl,BYTE PTR [ebp+0x64]
  41ae31:	retf   
  41ae32:	dec    ebp
  41ae33:	ds (bad) 
  41ae35:	(bad)  
  41ae36:	adc    BYTE PTR [ebp-0x7f530ca4],ch
  41ae3c:	jg     0x41ae42
  41ae3e:	mov    dl,0x3
  41ae40:	or     esi,DWORD PTR [eax-0x232e2302]
  41ae46:	add    al,al
  41ae48:	cmovle eax,DWORD PTR [ebp+0x18]
  41ae4c:	mov    ebp,DWORD PTR [edx-0x4b]
  41ae4f:	add    al,BYTE PTR [ebx]
  41ae51:	sbb    eax,0xe9c5489
  41ae56:	mov    eax,0x92b6b130
  41ae5b:	push   ebx
  41ae5c:	popf   
  41ae5d:	jae    0x41ae53
  41ae5f:	inc    edi
  41ae60:	jmp    0x5a425a5e
  41ae65:	or     BYTE PTR [eax+0x7f34c87b],bl
  41ae6b:	dec    esp
  41ae6c:	imul   eax,DWORD PTR [edi],0xd8f71cc
  41ae72:	enter  0x745b,0x4a
  41ae76:	retf   
  41ae77:	mov    al,0x1f
  41ae79:	ror    BYTE PTR [esi-0x3f1a21e2],cl
  41ae7f:	sbb    eax,0x2b992a9d
  41ae84:	push   cs
  41ae85:	out    dx,eax
  41ae86:	les    ebx,FWORD PTR [eax+esi*2]
  41ae89:	mov    al,ds:0x84d07ca5
  41ae8e:	ins    BYTE PTR es:[edi],dx
  41ae8f:	rcr    BYTE PTR [edi],0x37
  41ae92:	push   cs
  41ae93:	mov    cl,0x66
  41ae95:	sbb    ch,ch
  41ae97:	xchg   BYTE PTR [esi],al
  41ae99:	aam    0xcb
  41ae9b:	mov    ebp,0xed84410b
  41aea0:	push   ebp
  41aea1:	ins    BYTE PTR es:[edi],dx
  41aea2:	jp     0x41aed3
  41aea4:	add    eax,0x16132304
  41aea9:	je     0x41aefa
  41aeab:	jne    0x41af18
  41aead:	push   esp
  41aeae:	and    cl,BYTE PTR [edx-0x7e]
  41aeb1:	adc    BYTE PTR [ebp+0x21],ch
  41aeb4:	adc    DWORD PTR [ebx-0x34],ebp
  41aeb7:	js     0x41af12
  41aeb9:	fldenv ds:0x309660f8
  41aebf:	pushf  
  41aec0:	sub    BYTE PTR [ebx-0x4eaa4c40],ch
  41aec6:	cmp    eax,0x4b4669a8
  41aecb:	mov    esi,0xc69fd0c2
  41aed0:	scas   al,BYTE PTR es:[edi]
  41aed1:	xchg   esi,eax
  41aed2:	pop    esi
  41aed3:	rcl    DWORD PTR [esi-0x688b4a75],0x45
  41aeda:	mov    eax,0xa2a0cab7
  41aedf:	icebp  
  41aee0:	stos   DWORD PTR es:[edi],eax
  41aee1:	(bad)  
  41aee2:	(bad)  
  41aee3:	mov    bl,0x99
  41aee5:	lods   eax,DWORD PTR ds:[esi]
  41aee6:	cmp    al,0x5
  41aee8:	sbb    DWORD PTR [ebx+edi*2+0x3375de2f],ebx
  41aeef:	outs   dx,DWORD PTR ds:[esi]
  41aef0:	or     esp,DWORD PTR [ebx]
  41aef2:	push   es
  41aef3:	jecxz  0x41af1c
  41aef5:	xchg   DWORD PTR [edi+0x5012bf30],esp
  41aefb:	inc    esp
  41aefc:	outs   dx,BYTE PTR ds:[esi]
  41aefd:	mov    bl,BYTE PTR [edx]
  41aeff:	(bad)  
  41af00:	jb     0x41af81
  41af02:	repz aad 0xb7
  41af05:	cld    
  41af06:	dec    ecx
  41af07:	and    al,0x69
  41af09:	inc    eax
  41af0a:	mov    edi,0xd7b0a5f9
  41af0f:	cmp    al,0x80
  41af11:	pop    esi
  41af12:	xor    cl,cl
  41af14:	ins    DWORD PTR es:[edi],dx
  41af15:	in     eax,0x66
  41af17:	sti    
  41af18:	pop    esp
  41af19:	call   0x1957:0x6f0bda68
  41af20:	fdivr  QWORD PTR [eax]
  41af22:	push   ebx
  41af23:	add    al,0xde
  41af25:	into   
  41af26:	fadd   st,st(7)
  41af28:	adc    eax,0x58a4548e
  41af2d:	lahf   
  41af2e:	xchg   esp,eax
  41af2f:	ss imul ebp,ebp,0xfffffff1
  41af33:	cli    
  41af34:	adc    edi,esi
  41af36:	and    al,BYTE PTR [ebp+0x3db0040f]
  41af3c:	push   cs
  41af3d:	shl    ah,0xbc
  41af40:	xchg   ebx,eax
  41af41:	rcl    DWORD PTR ds:0x249e765c,cl
  41af47:	sub    ecx,ebp
  41af49:	icebp  
  41af4a:	stos   DWORD PTR es:[edi],eax
  41af4b:	(bad)  
  41af4c:	mov    dh,0x62
  41af4e:	jmp    0x6aaa606e
  41af53:	bound  ebx,QWORD PTR [eax+eiz*4-0x607030c2]
  41af5a:	int    0x2e
  41af5c:	mov    ds,esi
  41af5e:	fadd   DWORD PTR [ebp-0x22005890]
  41af64:	sub    esi,DWORD PTR [ebx-0xc6ffe15]
  41af6a:	(bad)  
  41af6b:	xor    eax,0x4f710080
  41af70:	in     eax,dx
  41af71:	pop    esi
  41af72:	jecxz  0x41af1b
  41af74:	not    bl
  41af76:	mov    ch,0xa
  41af78:	fsubp  st(3),st
  41af7a:	pop    ss
  41af7b:	std    
  41af7c:	data16 repz sbb al,0x19
  41af80:	dec    ebp
  41af81:	dec    edi
  41af82:	(bad)  
  41af83:	hlt    
  41af84:	ins    BYTE PTR es:[edi],dx
  41af85:	push   cs
  41af86:	scas   eax,DWORD PTR es:[edi]
  41af87:	jae    0x41af22
  41af89:	stos   DWORD PTR es:[edi],eax
  41af8a:	cmp    bh,ah
  41af8c:	and    DWORD PTR [eax+ecx*1+0x21a19aeb],ebp
  41af93:	xor    DWORD PTR [ecx+0x23dbae7e],ebx
  41af99:	fwait
  41af9a:	and    eax,DWORD PTR [ebp+0x50]
  41af9d:	shr    DWORD PTR [eax+0x212dac37],0x71
  41afa4:	mov    ah,0x79
  41afa6:	pop    eax
  41afa7:	hlt    
  41afa8:	out    0xe8,eax
  41afaa:	aam    0x10
  41afac:	push   edx
  41afad:	repnz xchg cl,dh
  41afb0:	test   al,0xa6
  41afb2:	fsub   QWORD PTR [edi-0x128feaf]
  41afb8:	cmp    al,0xab
  41afba:	adc    eax,0xde389aea
  41afbf:	jmp    0x3cea:0x644c3d70
  41afc6:	inc    edx
  41afc7:	pop    ds
  41afc8:	xchg   esp,eax
  41afc9:	in     al,dx
  41afca:	mov    bl,0x1d
  41afcc:	out    dx,al
  41afcd:	inc    ecx
  41afce:	add    BYTE PTR fs:[edi+0x7a],dl
  41afd2:	or     DWORD PTR [ebx-0x5c],ebx
  41afd5:	adc    al,0x5
  41afd7:	add    dl,BYTE PTR [edi-0x7d]
  41afda:	call   0x7d3f1183
  41afdf:	outs   dx,BYTE PTR ds:[esi]
  41afe0:	inc    eax
  41afe1:	and    eax,0x93b2f7d1
  41afe6:	jg     0x41af8e
  41afe8:	sbb    eax,0xfadde0af
  41afed:	test   al,0x4a
  41afef:	fdivr  st,st(0)
  41aff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aff2:	dec    edi
  41aff3:	retf   0x50ca
  41aff6:	scas   eax,DWORD PTR es:[edi]
  41aff7:	mov    al,0xb9
  41aff9:	ss pop ebp
  41affb:	ret    
  41affc:	shr    BYTE PTR [eax-0x7dd3971d],1
  41b002:	and    dh,cl
  41b004:	ror    ebp,cl
  41b006:	aaa    
  41b007:	popf   
  41b008:	scas   al,BYTE PTR es:[edi]
  41b009:	hlt    
  41b00a:	xor    eax,0x43749bf8
  41b00f:	std    
  41b010:	xchg   ebp,eax
  41b011:	pop    edx
  41b012:	or     eax,0x18e09314
  41b017:	out    0xe2,eax
  41b019:	mov    eax,ds:0x1580e417
  41b01e:	aad    0xc8
  41b020:	mov    DWORD PTR [ecx],esp
  41b022:	jae    0x41b077
  41b024:	jnp    0x41b004
  41b026:	mov    esp,0x2af3e5b7
  41b02b:	fdivr  QWORD PTR [ecx-0x3f]
  41b02e:	xlat   BYTE PTR ds:[ebx]
  41b02f:	pushf  
  41b030:	lods   eax,DWORD PTR ds:[esi]
  41b031:	dec    ecx
  41b032:	add    cl,BYTE PTR [ecx]
  41b034:	jp     0x41b016
  41b036:	test   eax,0x57022058
  41b03b:	push   es
  41b03c:	pop    ecx
  41b03d:	fdivr  DWORD PTR [edi]
  41b03f:	mov    eax,DWORD PTR [eax+0x64]
  41b042:	pusha  
  41b043:	retf   0x9050
  41b046:	xchg   edx,eax
  41b047:	outs   dx,DWORD PTR ds:[esi]
  41b048:	in     al,0x89
  41b04a:	sbb    al,0x10
  41b04c:	mov    edi,0x544891d7
  41b051:	shr    bl,1
  41b053:	xor    eax,0xf1c71745
  41b058:	loope  0x41aff4
  41b05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b05b:	push   ds
  41b05c:	mov    ecx,0xcb59fc33
  41b061:	popa   
  41b062:	fcmovbe st,st(0)
  41b064:	int3   
  41b065:	mov    dl,0x4c
  41b067:	cmc    
  41b068:	inc    DWORD PTR [ecx+0x1e]
  41b06b:	xor    DWORD PTR [ebp+0x5c10d5b9],esp
  41b071:	cmp    al,0x95
  41b073:	lods   al,BYTE PTR ds:[esi]
  41b074:	icebp  
  41b075:	xchg   eax,esi
  41b077:	and    al,0xaa
  41b079:	adc    ebp,DWORD PTR [edx-0x58545451]
  41b07f:	(bad)  
  41b080:	out    0xce,al
  41b082:	inc    edx
  41b083:	xchg   esp,eax
  41b084:	push   ecx
  41b085:	popf   
  41b086:	daa    
  41b087:	dec    ebp
  41b088:	or     al,0x58
  41b08a:	sbb    DWORD PTR [edx-0x67],ebp
  41b08d:	push   es
  41b08e:	jmp    0x4dd6e1bf
  41b093:	jl     0x41b07c
  41b095:	outs   dx,DWORD PTR ds:[esi]
  41b096:	inc    eax
  41b097:	stc    
  41b098:	cmp    BYTE PTR [edi],bl
  41b09a:	xchg   ecx,eax
  41b09b:	or     ebx,DWORD PTR ds:0xf42a1b4c
  41b0a1:	inc    esi
  41b0a2:	fbld   TBYTE PTR [esi-0x27]
  41b0a5:	xchg   ebx,eax
  41b0a6:	loope  0x41b0a1
  41b0a8:	(bad)  
  41b0a9:	popa   
  41b0aa:	in     al,dx
  41b0ab:	xor    dh,bl
  41b0ad:	and    DWORD PTR [edx+0x10],edi
  41b0b0:	std    
  41b0b1:	lods   al,BYTE PTR ds:[esi]
  41b0b2:	and    DWORD PTR [ebx+0x4866f179],esi
  41b0b8:	je     0x41b0f9
  41b0ba:	scas   eax,DWORD PTR es:[edi]
  41b0bb:	inc    edx
  41b0bc:	loop   0x41b0da
  41b0be:	arpl   WORD PTR [esi-0x77],sp
  41b0c1:	ins    BYTE PTR es:[edi],dx
  41b0c2:	cld    
  41b0c3:	adc    al,0xc7
  41b0c5:	push   ebx
  41b0c6:	xchg   edi,eax
  41b0c7:	add    DWORD PTR [ebx+edx*2],ebp
  41b0ca:	jge    0x41b0b5
  41b0cc:	xlat   BYTE PTR ds:[ebx]
  41b0cd:	icebp  
  41b0ce:	loopne 0x41b0dc
  41b0d0:	es sti 
  41b0d2:	xlat   BYTE PTR ds:[ebx]
  41b0d3:	int    0x2b
  41b0d5:	xchg   BYTE PTR [esi],bh
  41b0d7:	leave  
  41b0d8:	bound  edi,QWORD PTR [ebp+0x559b5ee0]
  41b0de:	add    esp,DWORD PTR [esi]
  41b0e0:	xor    DWORD PTR [eax],0xffffffaa
  41b0e3:	cld    
  41b0e4:	ret    
  41b0e5:	push   eax
  41b0e6:	loope  0x41b154
  41b0e8:	inc    ecx
  41b0e9:	in     al,0x4e
  41b0eb:	mov    cl,0x6
  41b0ed:	jo     0x41b085
  41b0ef:	imul   al
  41b0f1:	div    esp
  41b0f3:	dec    ebp
  41b0f4:	xchg   ecx,eax
  41b0f5:	push   0x4fe2dfc7
  41b0fa:	add    eax,0x6aa82516
  41b0ff:	sbb    eax,0x59b5dee9
  41b104:	inc    ecx
  41b105:	cmp    eax,edi
  41b107:	pop    eax
  41b108:	rcl    BYTE PTR [ebx+0x10],0x18
  41b10c:	add    al,ah
  41b10e:	retf   
  41b10f:	push   ss
  41b110:	cs aas 
  41b112:	in     al,dx
  41b113:	shl    DWORD PTR [eax-0x3fdbd8e1],1
  41b119:	dec    ecx
  41b11a:	or     BYTE PTR [ebp-0x775a8d3b],cl
  41b120:	fs mov dh,0x87
  41b123:	cld    
  41b124:	xor    edi,ebx
  41b126:	mov    ebp,0xa95f491d
  41b12b:	xchg   ebp,eax
  41b12c:	and    eax,DWORD PTR [ebx+0x10]
  41b12f:	push   cs
  41b130:	sub    BYTE PTR [ebx],bl
  41b132:	lds    eax,FWORD PTR [esi-0x5d]
  41b135:	adc    ebp,ecx
  41b137:	in     eax,dx
  41b138:	popf   
  41b139:	in     al,0x80
  41b13b:	inc    ebp
  41b13c:	push   ss
  41b13d:	retf   0x6e98
  41b140:	adc    al,0x90
  41b142:	xlat   BYTE PTR ds:[ebx]
  41b143:	mov    eax,0xc56457db
  41b148:	test   eax,0xcfd780a8
  41b14d:	xor    BYTE PTR [edx],dh
  41b14f:	inc    ebp
  41b150:	sub    al,0xec
  41b152:	or     al,bl
  41b154:	dec    edi
  41b155:	jne    0x41b13f
  41b157:	mov    dh,0x7
  41b159:	add    al,0xa8
  41b15b:	adc    al,BYTE PTR [edi+0x595fbbad]
  41b161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b162:	mov    al,ds:0xe7849c57
  41b167:	or     al,0x83
  41b169:	cs dec edx
  41b16b:	das    
  41b16c:	mov    ecx,DWORD PTR [ebp-0x6b]
  41b16f:	iret   
  41b170:	outs   dx,BYTE PTR ds:[esi]
  41b171:	and    esp,DWORD PTR [edx+ecx*2-0x72]
  41b175:	mov    bl,0x62
  41b177:	icebp  
  41b178:	test   DWORD PTR [ebx+0x1b],0x1425383
  41b17f:	fist   WORD PTR [esi]
  41b181:	mov    WORD PTR [esi],?
  41b183:	icebp  
  41b184:	mov    edi,0x2b940bb0
  41b189:	jp     0x41b14a
  41b18b:	js     0x41b205
  41b18d:	pop    DWORD PTR [eax+0x0]
  41b190:	dec    esi
  41b191:	mov    ebp,0xbadb2d3a
  41b196:	xchg   esp,eax
  41b197:	inc    ecx
  41b198:	lahf   
  41b199:	jge    0x41b14e
  41b19b:	push   es
  41b19c:	sub    dh,BYTE PTR [ebx-0x2f]
  41b19f:	fistp  QWORD PTR [ebp-0x63b5776c]
  41b1a5:	div    BYTE PTR [ecx+0x3eb72691]
  41b1ab:	cld    
  41b1ac:	fcmovu st,st(7)
  41b1ae:	dec    edi
  41b1af:	daa    
  41b1b0:	pop    esi
  41b1b1:	sbb    BYTE PTR [ebx-0x12],dl
  41b1b4:	push   0xffffffb6
  41b1b6:	arpl   WORD PTR [edi-0x53db96cd],si
  41b1bc:	jbe    0x41b1e1
  41b1be:	inc    edx
  41b1bf:	sar    DWORD PTR [edx],0x34
  41b1c2:	paddd  mm2,QWORD PTR [ecx+0x56bec76f]
  41b1c9:	lds    eax,FWORD PTR [ecx-0x3e4f39eb]
  41b1cf:	in     eax,0x9a
  41b1d1:	out    dx,eax
  41b1d2:	mov    al,0xb1
  41b1d4:	cmp    cl,BYTE PTR [edx]
  41b1d6:	jmp    0xfcf6:0x429a7d10
  41b1dd:	in     al,0x39
  41b1df:	test   eax,0xdc4e2b46
  41b1e4:	iret   
  41b1e5:	out    0x9f,al
  41b1e7:	xchg   edi,eax
  41b1e8:	dec    ebx
  41b1e9:	fadd   st(7),st
  41b1eb:	cmp    edi,DWORD PTR [esi]
  41b1ed:	aam    0x65
  41b1ef:	pop    edx
  41b1f0:	mov    al,0x44
  41b1f2:	out    dx,eax
  41b1f3:	jmp    0x5075b13a
  41b1f8:	cmp    ah,BYTE PTR [edi-0x30]
  41b1fb:	xchg   ebp,eax
  41b1fc:	pop    ds
  41b1fd:	daa    
  41b1fe:	dec    ecx
  41b1ff:	aaa    
  41b200:	inc    edx
  41b201:	out    0x1e,eax
  41b203:	jno    0x41b232
  41b205:	sbb    eax,0x73117892
  41b20a:	xor    bl,BYTE PTR [edi-0x27221fcb]
  41b210:	inc    edi
  41b211:	ret    0xd054
  41b214:	es inc esi
  41b216:	pop    ss
  41b217:	lds    edi,FWORD PTR [edx+0x4b]
  41b21a:	(bad)  
  41b21b:	and    BYTE PTR [eax+0x36],0xae
  41b21f:	adc    dh,BYTE PTR [ecx]
  41b221:	out    0xd1,eax
  41b223:	jp     0x41b290
  41b225:	fs sbb ah,ch
  41b228:	push   edx
  41b229:	neg    DWORD PTR [ecx+0x15]
  41b22c:	sbb    BYTE PTR [esi-0x439d76a4],ch
  41b232:	sbb    al,0x5
  41b234:	int3   
  41b235:	mov    eax,ds:0xd2fdd95b
  41b23a:	ret    0x3c6e
  41b23d:	pusha  
  41b23e:	push   cs
  41b23f:	lahf   
  41b240:	xchg   edi,eax
  41b241:	adc    ecx,DWORD PTR [edx-0x1c408b65]
  41b247:	scas   eax,DWORD PTR es:[edi]
  41b248:	shl    esp,cl
  41b24a:	sbb    al,0x3e
  41b24c:	test   BYTE PTR [ecx+0x74],ch
  41b24f:	lock jg 0x41b1dc
  41b252:	push   ebx
  41b253:	imul   eax,DWORD PTR [esi-0x78],0x152d236
  41b25a:	push   ds
  41b25b:	mov    ds:0x86f7554,al
  41b260:	jp     0x41b2c5
  41b262:	mov    ah,0x3c
  41b264:	test   BYTE PTR [ebp+0x4531e551],dl
  41b26a:	sbb    al,0xb4
  41b26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b26d:	mov    cl,0x9d
  41b26f:	lock add BYTE PTR [eax+eax*1],0x66
  41b274:	or     eax,0xff908a4e
  41b279:	xlat   BYTE PTR ds:[ebx]
  41b27a:	jge    0x41b2c6
  41b27c:	out    0x3c,eax
  41b27e:	dec    ebx
  41b27f:	xchg   edi,eax
  41b280:	xchg   edi,eax
  41b281:	mov    bl,0x87
  41b283:	cmp    edi,ebx
  41b285:	jg     0x41b2d9
  41b287:	push   es
  41b288:	push   0x4a
  41b28a:	pop    ebp
  41b28b:	ins    BYTE PTR es:[edi],dx
  41b28c:	gs inc bx
  41b28f:	xchg   ecx,eax
  41b290:	inc    eax
  41b291:	in     eax,0x61
  41b293:	xabort 0x4b
  41b296:	shr    BYTE PTR [edx],0x14
  41b299:	jmp    0xbefa3d7e
  41b29e:	mov    eax,0xf9ebf18a
  41b2a3:	ficomp DWORD PTR es:[esi]
  41b2a6:	and    cl,BYTE PTR [edi-0xb]
  41b2a9:	cwde   
  41b2aa:	inc    edi
  41b2ab:	sub    DWORD PTR [edx-0x6e0bfad7],0xfffffffb
  41b2b2:	fadd   st(3),st
  41b2b4:	or     cl,cl
  41b2b6:	xchg   esp,ebx
  41b2b8:	mov    ah,0x82
  41b2ba:	inc    ecx
  41b2bb:	iret   
  41b2bc:	sahf   
  41b2bd:	jmp    0xc90d:0x41bdd1d
  41b2c4:	arpl   WORD PTR ds:0xd196e21c,sp
  41b2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2cb:	add    al,0x45
  41b2cd:	fdivrp st(4),st
  41b2cf:	loopne 0x41b2f0
  41b2d1:	shr    DWORD PTR [ebx+0x26],0x6f
  41b2d5:	mov    DWORD PTR [ebx+0x12e3d6b7],ebp
  41b2db:	mov    esi,0x34c02d8a
  41b2e0:	dec    edx
  41b2e1:	(bad)  
  41b2e2:	(bad)  
  41b2e4:	cmp    esi,DWORD PTR [esi]
  41b2e6:	push   0xffffff9e
  41b2e8:	pushf  
  41b2e9:	ret    0xeee
  41b2ec:	lds    edi,FWORD PTR [ebx-0x7b]
  41b2ef:	inc    esi
  41b2f0:	shl    edx,0x5b
  41b2f3:	fidivr WORD PTR [edi]
  41b2f5:	xor    al,0xac
  41b2f7:	popf   
  41b2f8:	popa   
  41b2f9:	adc    ebx,DWORD PTR cs:[esi-0x1cae6ba9]
  41b300:	icebp  
  41b301:	daa    
  41b302:	pop    esp
  41b303:	adc    ecx,DWORD PTR [edi+0x54]
  41b306:	lock jo 0x41b309
  41b309:	inc    ebp
  41b30a:	cmp    BYTE PTR [ebx+eax*4+0x55b38c0a],ch
  41b311:	fistp  WORD PTR [edx-0x34c02817]
  41b317:	aaa    
  41b318:	or     BYTE PTR [edx+0x1b52e852],dl
  41b31e:	add    al,0x9f
  41b320:	das    
  41b321:	and    BYTE PTR [esp+ecx*8+0x43],ch
  41b325:	lock jge 0x41b2fd
  41b328:	ja     0x41b362
  41b32a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b32b:	mov    ebx,ecx
  41b32d:	mov    ch,0xe
  41b32f:	jnp    0x41b2ee
  41b331:	mov    dh,0x9b
  41b333:	sar    DWORD PTR [ebx+0x47],cl
  41b336:	adc    BYTE PTR [edi-0x10],bh
  41b339:	mul    BYTE PTR [ebp+0x3d6f6b13]
  41b33f:	inc    ebp
  41b340:	pop    eax
  41b341:	dec    edi
  41b342:	xor    ah,ch
  41b344:	addr16 cmp bh,bl
  41b347:	push   ds
  41b348:	not    BYTE PTR [edi]
  41b34a:	cwde   
  41b34b:	jo     0x41b2f8
  41b34d:	or     DWORD PTR [esi+0x3d],ebx
  41b350:	test   DWORD PTR [edx],edi
  41b352:	out    dx,al
  41b353:	mov    al,ds:0xebdb50f3
  41b358:	fcomp  DWORD PTR [ecx-0x74]
  41b35b:	or     ebp,DWORD PTR [ebx-0x1b]
  41b35e:	fcmovb st,st(2)
  41b360:	std    
  41b361:	jb     0x41b349
  41b363:	je     0x41b3c6
  41b365:	test   BYTE PTR [edi+0x14],bl
  41b368:	scas   al,BYTE PTR es:[edi]
  41b369:	xchg   ebx,eax
  41b36a:	and    eax,esp
  41b36c:	mov    eax,ds:0x1560c9ab
  41b371:	cmp    dl,BYTE PTR [edx]
  41b373:	and    ch,BYTE PTR [esi+0x10]
  41b376:	fld    DWORD PTR [edi-0x467a7bd5]
  41b37c:	std    
  41b37d:	and    DWORD PTR [ebx],edx
  41b37f:	in     al,dx
  41b380:	and    eax,0xc1470119
  41b385:	cs push ds
  41b387:	push   ecx
  41b388:	retf   
  41b389:	js     0x41b3f9
  41b38b:	inc    ebp
  41b38c:	scas   eax,DWORD PTR es:[edi]
  41b38d:	pop    edx
  41b38e:	add    eax,0x3e34bc05
  41b393:	mov    ch,BYTE PTR ds:0x9188605c
  41b399:	mov    eax,0x162b16ae
  41b39e:	ja     0x41b3c8
  41b3a0:	sahf   
  41b3a1:	ja     0x41b398
  41b3a3:	pop    eax
  41b3a4:	xchg   ebp,eax
  41b3a5:	call   0x374b6a47
  41b3aa:	push   ebx
  41b3ab:	ror    DWORD PTR [edi-0x7],0x87
  41b3af:	in     eax,dx
  41b3b0:	in     al,0xe2
  41b3b2:	popa   
  41b3b3:	sbb    bl,BYTE PTR [ebp-0x455feef2]
  41b3b9:	inc    esi
  41b3ba:	into   
  41b3bb:	or     eax,0x9515f9bc
  41b3c0:	mov    esp,0xb48fa8f4
  41b3c5:	mov    edi,DWORD PTR [ebx]
  41b3c7:	dec    edx
  41b3c8:	or     cl,BYTE PTR [ebx+0x3131700c]
  41b3ce:	mov    bh,0xb7
  41b3d0:	jle    0x41b374
  41b3d2:	cdq    
  41b3d3:	in     eax,dx
  41b3d4:	mov    eax,gs
  41b3d6:	je     0x41b3ee
  41b3d8:	push   edi
  41b3d9:	les    ecx,FWORD PTR [edi+0x70]
  41b3dc:	call   0x9a084a9e
  41b3e1:	js     0x41b413
  41b3e3:	sub    eax,DWORD PTR [ebp-0x46]
  41b3e6:	cmp    BYTE PTR [ebp+ecx*4-0x2e],ch
  41b3ea:	ss adc BYTE PTR ds:[ebp+edi*4-0x51b4b19f],dh
  41b3f3:	jle    0x41b415
  41b3f5:	add    DWORD PTR [ebp-0x4911d6e8],ebp
  41b3fb:	jb     0x41b3fa
  41b3fd:	push   cs
  41b3fe:	inc    ebx
  41b3ff:	loop   0x41b3e9
  41b401:	xchg   edx,eax
  41b402:	mov    WORD PTR [ecx+eiz*1-0x16f0741d],gs
  41b409:	out    0x1f,eax
  41b40b:	mov    WORD PTR [ecx+0x10],ss
  41b40e:	fsubp  st(5),st
  41b410:	pop    ds
  41b411:	fdivr  st,st(0)
  41b413:	jle    0x41b448
  41b415:	jnp    0x41b3a8
  41b417:	std    
  41b418:	or     eax,0xd02a1a7a
  41b41d:	inc    DWORD PTR [ebx+0x3dd6138]
  41b423:	add    al,0xcc
  41b425:	sub    al,0xe3
  41b427:	in     al,0xa4
  41b429:	cmp    al,0x6f
  41b42b:	sub    edi,DWORD PTR [eax+0x128744e4]
  41b431:	dec    esp
  41b432:	push   ebx
  41b433:	cmp    al,al
  41b435:	rcr    BYTE PTR [edx],1
  41b437:	loopne 0x41b41f
  41b439:	int    0xe9
  41b43b:	outs   dx,DWORD PTR ds:[esi]
  41b43c:	test   BYTE PTR [esi],dh
  41b43e:	add    esi,DWORD PTR [esi-0x6f]
  41b441:	mov    ss,WORD PTR [ebx+esi*1-0xbf5db50]
  41b448:	ret    
  41b449:	cli    
  41b44a:	data16 xlat BYTE PTR ds:[ebx]
  41b44c:	jmp    0xd23542cd
  41b451:	adc    ebx,ecx
  41b453:	clc    
  41b454:	mov    ch,0x90
  41b456:	scas   eax,DWORD PTR es:[edi]
  41b457:	mov    edx,0x1ad3e5ba
  41b45c:	aas    
  41b45d:	shl    DWORD PTR [ebx+ecx*8],0xfc
  41b461:	data16 add BYTE PTR [ebx],ch
  41b464:	fcom   DWORD PTR [ebp-0x3f6fbeb3]
  41b46a:	retf   0x4961
  41b46d:	xor    eax,0x8f330621
  41b473:	outs   dx,BYTE PTR ds:[esi]
  41b474:	xor    ah,dl
  41b476:	jecxz  0x41b40e
  41b478:	jbe    0x41b449
  41b47a:	jmp    DWORD PTR [ebp+0x5]
  41b47d:	or     bh,bh
  41b47f:	mov    dh,0xae
  41b481:	test   eax,ebp
  41b483:	xchg   edx,eax
  41b484:	sub    DWORD PTR [esi+0x17],eax
  41b487:	jnp    0x41b458
  41b489:	mov    edx,0xd85a4c08
  41b48e:	nop
  41b48f:	(bad)  
  41b490:	int    0x4a
  41b492:	sub    dh,BYTE PTR ds:0xc177aa96
  41b498:	inc    esi
  41b499:	mov    edx,0x4e6d97e1
  41b49e:	rol    DWORD PTR [esi-0x53],cl
  41b4a1:	inc    ebp
  41b4a2:	inc    eax
  41b4a3:	scas   eax,DWORD PTR es:[edi]
  41b4a4:	jbe    0x41b47a
  41b4a6:	cwde   
  41b4a7:	and    al,0xa3
  41b4a9:	adc    esp,eax
  41b4ab:	mov    ah,0x8c
  41b4ad:	stos   BYTE PTR es:[edi],al
  41b4ae:	xchg   ebp,eax
  41b4af:	cmp    eax,0x9375cee1
  41b4b4:	out    0x64,eax
  41b4b6:	mov    bh,0xa4
  41b4b8:	aaa    
  41b4b9:	int3   
  41b4ba:	into   
  41b4bb:	outs   dx,DWORD PTR ds:[esi]
  41b4bc:	ficom  DWORD PTR [edi]
  41b4be:	in     al,0x5e
  41b4c0:	mov    edx,DWORD PTR [ebp-0x7e]
  41b4c3:	fld1   
  41b4c5:	test   al,0xbe
  41b4c7:	int    0x17
  41b4c9:	in     eax,0xa9
  41b4cb:	or     esp,ebx
  41b4cd:	je     0x41b45d
  41b4cf:	enter  0xa64,0x80
  41b4d3:	mov    edi,0xa3b093
  41b4d8:	jo     0x41b514
  41b4da:	push   0x1fd4abaa
  41b4df:	daa    
  41b4e0:	pushf  
  41b4e1:	stos   DWORD PTR es:[edi],eax
  41b4e2:	rcr    DWORD PTR [ebp-0x3d],0xab
  41b4e6:	push   es
  41b4e7:	pop    ecx
  41b4e8:	adc    al,0x7a
  41b4ea:	cdq    
  41b4eb:	push   ebx
  41b4ec:	aaa    
  41b4ed:	or     BYTE PTR [esi-0x53],dl
  41b4f0:	lods   al,BYTE PTR ds:[esi]
  41b4f1:	sub    al,0x5a
  41b4f3:	push   edx
  41b4f4:	sub    eax,0xb77d4cd7
  41b4f9:	push   esi
  41b4fa:	mov    dh,0x40
  41b4fc:	ins    BYTE PTR es:[edi],dx
  41b4fd:	sub    cl,BYTE PTR [edi-0x2eb2215a]
  41b503:	mov    ds:0x519ae623,al
  41b508:	popf   
  41b509:	cmp    eax,0x5254e0fc
  41b50e:	mov    edi,DWORD PTR [ecx+ebx*1+0x50d2a481]
  41b515:	retf   0x80c6
  41b518:	stos   BYTE PTR es:[edi],al
  41b519:	dec    ecx
  41b51a:	sbb    al,0xb8
  41b51c:	push   ebx
  41b51d:	(bad)  
  41b51e:	lds    esi,FWORD PTR [edx+edi*4+0x4b2b9cb8]
  41b525:	int3   
  41b526:	push   0x2dd993ff
  41b52b:	mov    ds:0xbd0d4652,al
  41b530:	xor    ch,BYTE PTR [esi-0x53]
  41b533:	adc    DWORD PTR [ebx+0x45a73ea1],ebx
  41b539:	jg     0x41b50c
  41b53b:	call   0x26130eb9
  41b540:	fst    QWORD PTR [eax]
  41b542:	adc    al,0x1a
  41b544:	addr16 ret 
  41b546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b547:	mov    ds:0x3674b0c8,al
  41b54c:	(bad)  
  41b54d:	ficom  WORD PTR [eax]
  41b54f:	push   0xffffffb8
  41b551:	cmp    al,0x97
  41b553:	int3   
  41b554:	out    0xa1,eax
  41b556:	xchg   bh,dh
  41b558:	fwait
  41b559:	les    edx,FWORD PTR [ebx+0x4e]
  41b55c:	inc    ecx
  41b55d:	and    edi,DWORD PTR [ebx-0x447a06c3]
  41b563:	push   ss
  41b564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b565:	imul   esp,ebp,0xe08ce956
  41b56b:	add    BYTE PTR [edx],bh
  41b56d:	and    DWORD PTR [ebp-0x30],0xd376df4f
  41b574:	popf   
  41b575:	push   edx
  41b576:	push   edi
  41b577:	mov    ch,0x4
  41b579:	and    DWORD PTR [esi-0x1d9354e3],ebp
  41b57f:	shl    BYTE PTR [ecx],cl
  41b581:	inc    esi
  41b582:	lods   al,BYTE PTR ds:[esi]
  41b583:	xchg   ecx,eax
  41b584:	and    al,0x9
  41b586:	mov    esp,DWORD PTR [edx]
  41b588:	inc    ecx
  41b589:	dec    esi
  41b58a:	imul   ebp,DWORD PTR [esp+ebp*4-0x34],0x62
  41b58f:	fwait
  41b590:	sahf   
  41b591:	push   esp
  41b592:	jle    0x41b5db
  41b594:	ins    DWORD PTR es:[edi],dx
  41b595:	ins    BYTE PTR es:[edi],dx
  41b596:	adc    al,0x1e
  41b598:	pop    esi
  41b599:	test   DWORD PTR [edx-0x79d1a8ff],0x193fe60c
  41b5a3:	std    
  41b5a4:	jne    0x41b570
  41b5a6:	and    al,BYTE PTR [ebx+0x6dc0d8ec]
  41b5ac:	sub    BYTE PTR [esi+0x4f031aad],0xbd
  41b5b3:	lahf   
  41b5b4:	sbb    dh,BYTE PTR [edi+0xefb6733]
  41b5ba:	(bad)  
  41b5bb:	jl     0x41b602
  41b5bd:	das    
  41b5be:	sar    BYTE PTR [edi],1
  41b5c0:	ficomp WORD PTR [edi]
  41b5c2:	popa   
  41b5c3:	repnz mov DWORD PTR [ebp+ebp*1-0x5f],eax
  41b5c8:	xchg   DWORD PTR ds:0xaf2974ef,eax
  41b5ce:	cld    
  41b5cf:	add    DWORD PTR [ebx],esi
  41b5d1:	jmp    0x41b555
  41b5d3:	xchg   edi,eax
  41b5d4:	jae    0x41b5bc
  41b5d6:	dec    eax
  41b5d7:	lock pop esp
  41b5d9:	adc    BYTE PTR [ecx],cl
  41b5db:	push   edi
  41b5dc:	xlat   BYTE PTR ds:[ebx]
  41b5dd:	pop    ds
  41b5de:	fisubr WORD PTR [ebp-0x54]
  41b5e1:	cdq    
  41b5e2:	(bad)  
  41b5e3:	fs test edi,ebp
  41b5e6:	mov    al,0x14
  41b5e8:	call   0x34a0:0x973913d5
  41b5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5f0:	pop    esp
  41b5f1:	mov    ch,0x9c
  41b5f3:	pop    esi
  41b5f4:	sub    al,0x11
  41b5f6:	aaa    
  41b5f7:	jbe    0x41b5f9
  41b5f9:	jo     0x41b61a
  41b5fb:	add    al,0x3f
  41b5fd:	jne    0x41b593
  41b5ff:	not    BYTE PTR [edi]
  41b601:	imul   ebp,DWORD PTR [edx-0x49],0x89a8c8b2
  41b608:	dec    ecx
  41b609:	and    ebp,DWORD PTR [eax-0x5c]
  41b60c:	repz jmp 0xb88f:0x3f9776e6
  41b614:	inc    esi
  41b615:	add    al,0xdf
  41b617:	xor    al,0x25
  41b619:	dec    ebp
  41b61a:	mov    ebx,0x9db81f6e
  41b61f:	(bad)  
  41b620:	pop    edi
  41b621:	(bad)  
  41b622:	aad    0xe
  41b624:	retf   
  41b625:	frstor [ebp+0x40c4605a]
  41b62b:	lock rcr DWORD PTR [ecx+0x77],1
  41b62f:	js     0x41b679
  41b631:	xor    al,0x80
  41b633:	ins    DWORD PTR es:[edi],dx
  41b634:	mov    ch,0xa8
  41b636:	stos   BYTE PTR es:[edi],al
  41b637:	out    0xa9,eax
  41b639:	and    al,0x68
  41b63b:	mov    ds:0x54381c69,eax
  41b640:	xchg   edi,eax
  41b641:	icebp  
  41b642:	fst    QWORD PTR [ebx-0x446b0c35]
  41b648:	jne    0x41b696
  41b64a:	inc    esi
  41b64b:	push   ebx
  41b64c:	aaa    
  41b64d:	std    
  41b64e:	pop    edx
  41b64f:	loope  0x41b6a2
  41b651:	cld    
  41b652:	pop    esi
  41b653:	shl    BYTE PTR [esi],cl
  41b655:	(bad)  
  41b656:	pop    ss
  41b657:	and    DWORD PTR [eax],edi
  41b659:	mov    al,0x35
  41b65b:	and    BYTE PTR [ecx-0x40],ch
  41b65e:	ins    BYTE PTR es:[edi],dx
  41b65f:	je     0x41b673
  41b661:	add    eax,0x251efb1
  41b666:	stc    
  41b667:	add    DWORD PTR [eax],0xd80bc06e
  41b66d:	xor    DWORD PTR [ecx-0x31],0x57
  41b671:	popf   
  41b672:	stos   BYTE PTR es:[edi],al
  41b673:	imul   edi,DWORD PTR es:[ecx],0xffffff91
  41b677:	out    0x5e,eax
  41b679:	or     esp,DWORD PTR [ebp+0x58d32b79]
  41b67f:	xchg   ebx,eax
  41b680:	sub    al,0x3
  41b682:	jns    0x41b6ba
  41b684:	cld    
  41b685:	mov    dl,0xf5
  41b687:	push   eax
  41b688:	adc    eax,DWORD PTR [ebx]
  41b68a:	inc    edi
  41b68b:	pop    es
  41b68c:	icebp  
  41b68d:	dec    esp
  41b68e:	cld    
  41b68f:	cmp    al,0x1a
  41b691:	outs   dx,BYTE PTR ds:[esi]
  41b692:	mov    al,ds:0x7597a272
  41b697:	add    ch,BYTE PTR [edi]
  41b699:	mov    esp,0x729dcdce
  41b69e:	mov    ecx,0x4ed13dea
  41b6a3:	xchg   esp,eax
  41b6a4:	jmp    0x3c9f1358
  41b6a9:	icebp  
  41b6aa:	imul   ecx,DWORD PTR [ecx],0x14762952
  41b6b0:	aam    0x6e
  41b6b2:	jns    0x41b668
  41b6b4:	xor    eax,0x14533233
  41b6b9:	jo     0x41b65e
  41b6bb:	dec    ebp
  41b6bc:	mov    cl,0x21
  41b6be:	push   esp
  41b6bf:	jg     0x41b6f9
  41b6c1:	jns    0x718f3667
  41b6c7:	out    0x33,eax
  41b6c9:	fsubr  DWORD PTR [ebx]
  41b6cb:	in     al,dx
  41b6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6cd:	inc    edx
  41b6ce:	das    
  41b6cf:	add    edi,DWORD PTR [esi+0x41]
  41b6d2:	jo     0x41b6d4
  41b6d4:	dec    esi
  41b6d5:	ins    BYTE PTR es:[edi],dx
  41b6d6:	ror    DWORD PTR [eax+eiz*2],0x5b
  41b6da:	cmp    dh,dl
  41b6dc:	std    
  41b6dd:	ds out 0x18,al
  41b6e0:	scas   al,BYTE PTR es:[edi]
  41b6e1:	mov    ebp,0x48d1888d
  41b6e6:	add    eax,0xffffff9c
  41b6e9:	mov    al,0x93
  41b6eb:	ss mov ebx,0x5539a707
  41b6f1:	ss scas eax,DWORD PTR es:[edi]
  41b6f3:	loop   0x41b753
  41b6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6f6:	aas    
  41b6f7:	retf   0xf3b2
  41b6fa:	jl     0x41b6fe
  41b6fc:	out    0x39,al
  41b6fe:	shl    BYTE PTR [ebp+0x46],1
  41b701:	sbb    al,BYTE PTR [ebp+eiz*1+0x4c]
  41b705:	mov    ebp,0x1e4bf664
  41b70a:	adc    ecx,DWORD PTR [eax-0x55a3fdf8]
  41b710:	jmp    0xee00:0x2f464274
  41b717:	cs mov ebp,0x50102d19
  41b71d:	rol    BYTE PTR ds:0x975ae5ec,0xea
  41b724:	or     al,0x18
  41b726:	mov    eax,0x499ad76e
  41b72b:	ror    DWORD PTR [ecx+0x19ac46ea],1
  41b731:	fist   DWORD PTR [edx-0x73]
  41b734:	and    DWORD PTR fs:[edx],edi
  41b737:	ret    
  41b738:	loop   0x41b722
  41b73a:	mov    eax,ds:0x20b4cdc3
  41b73f:	imul   eax,edi,0x28
  41b742:	pop    ebp
  41b743:	xchg   ebx,eax
  41b744:	pop    ss
  41b745:	in     eax,0x38
  41b747:	xor    BYTE PTR [edx-0x7c],al
  41b74a:	retf   0x7591
  41b74d:	mov    ebx,0x4364dab0
  41b752:	sbb    eax,0x28449e34
  41b757:	jg     0x41b748
  41b759:	(bad)  
  41b75b:	ret    0xa87e
  41b75e:	(bad)  
  41b75f:	push   esi
  41b760:	sbb    eax,0xc3e53fed
  41b765:	xlat   BYTE PTR ds:[ebx]
  41b766:	pop    esi
  41b767:	dec    esp
  41b768:	shl    DWORD PTR [ebx+0x72add617],cl
  41b76e:	rcl    BYTE PTR [edx+edx*1-0x6d7cead1],1
  41b775:	bound  esi,QWORD PTR [ebp+eiz*2+0x62bba985]
  41b77c:	stos   BYTE PTR es:[edi],al
  41b77d:	mov    esi,0x954e6eef
  41b782:	test   DWORD PTR [ebx+0x1530c8e7],ebx
  41b788:	xor    DWORD PTR [esi-0x2c738ea2],esp
  41b78e:	dec    edx
  41b78f:	sub    BYTE PTR [edx-0x10eca437],ah
  41b795:	ja     0x41b71f
  41b797:	jbe    0x41b738
  41b799:	cmp    edx,DWORD PTR [edx]
  41b79b:	mov    cx,ax
  41b79e:	out    0xcb,al
  41b7a0:	inc    edx
  41b7a1:	sub    edx,DWORD PTR [ebp-0xa]
  41b7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7a5:	xchg   edx,eax
  41b7a6:	cmp    eax,0x674af55e
  41b7ab:	or     al,0x85
  41b7ad:	dec    esi
  41b7ae:	and    BYTE PTR [ebx],dl
  41b7b0:	mov    bl,0x7a
  41b7b2:	popf   
  41b7b3:	rcr    bl,1
  41b7b5:	lods   eax,DWORD PTR ds:[esi]
  41b7b6:	test   eax,0x72c35719
  41b7bb:	sahf   
  41b7bc:	ret    
  41b7bd:	xlat   BYTE PTR ds:[ebx]
  41b7be:	and    ebp,DWORD PTR [eax]
  41b7c0:	mov    ?,WORD PTR [edi-0x3ba4ae04]
  41b7c6:	mov    gs,WORD PTR [eax]
  41b7c8:	xchg   eax,edi
  41b7ca:	adc    esi,ebp
  41b7cc:	je     0x41b7ba
  41b7ce:	dec    edx
  41b7cf:	and    BYTE PTR [ebx],dl
  41b7d1:	cs stos DWORD PTR es:[edi],eax
  41b7d3:	push   ecx
  41b7d4:	xor    ch,BYTE PTR ds:0x2db4e7a2
  41b7da:	loope  0x41b80d
  41b7dc:	jb     0x41b7fc
  41b7de:	inc    ebx
  41b7df:	fidiv  WORD PTR [esi-0xa]
  41b7e2:	addr16 call 0x43e8:0x8ca77008
  41b7ea:	mov    esi,0x4358caa3
  41b7ef:	xor    ch,dh
  41b7f1:	sbb    ch,BYTE PTR [edi+0xb43ac00]
  41b7f7:	test   DWORD PTR [ecx+0x1575069b],ebp
  41b7fd:	fstp   TBYTE PTR [ebx-0x4a0b7ceb]
  41b803:	mov    dl,0x36
  41b805:	pushf  
  41b806:	and    esp,ebp
  41b808:	(bad)  
  41b80a:	das    
  41b80b:	xlat   BYTE PTR ds:[ebx]
  41b80c:	push   edx
  41b80d:	inc    esp
  41b80e:	cmp    BYTE PTR [esp+edi*1],0x31
  41b812:	das    
  41b813:	xchg   si,ax
  41b815:	stc    
  41b816:	cwde   
  41b817:	mov    cs,WORD PTR [ecx]
  41b819:	add    bh,BYTE PTR [eax-0x18fee4ef]
  41b81f:	inc    ecx
  41b820:	push   edx
  41b821:	gs call 0x5cb986e8
  41b827:	int    0x11
  41b829:	adc    DWORD PTR [edx+0x525c1538],esi
  41b82f:	mov    ah,0xe1
  41b831:	push   ecx
  41b832:	ror    BYTE PTR [eax+0xbcb917f],0x99
  41b839:	inc    edi
  41b83a:	imul   eax,DWORD PTR [eax-0x54d33d5b],0xffffff86
  41b841:	pusha  
  41b842:	inc    edx
  41b843:	mov    al,ds:0x6ccfb1dc
  41b848:	cmp    BYTE PTR [ecx+0x1aee1b4a],bl
  41b84e:	inc    ecx
  41b84f:	shl    dl,1
  41b851:	add    eax,esp
  41b853:	in     eax,0xfe
  41b855:	dec    edx
  41b856:	out    0xdf,eax
  41b858:	cmp    BYTE PTR [eax],bl
  41b85a:	adc    ebp,DWORD PTR [edi-0x68b25f3f]
  41b860:	mov    dl,0xfa
  41b862:	dec    esp
  41b863:	mov    ch,0x7
  41b865:	pop    edx
  41b866:	into   
  41b867:	jbe    0x41b8a1
  41b869:	cmp    bh,BYTE PTR [ecx]
  41b86b:	(bad)  
  41b86c:	(bad)  
  41b86d:	jecxz  0x41b851
  41b86f:	shr    ecx,cl
  41b871:	sti    
  41b872:	psrlw  mm3,mm1
  41b875:	adc    BYTE PTR [edi-0x6f440c58],0x9f
  41b87c:	clc    
  41b87d:	inc    ecx
  41b87e:	mov    esp,0xc7717b84
  41b883:	xor    DWORD PTR [edi+0x6a6a9ce9],eax
  41b889:	shl    BYTE PTR [ebp-0x17a1557b],cl
  41b88f:	xchg   edx,eax
  41b890:	stos   DWORD PTR es:[edi],eax
  41b891:	add    eax,ebx
  41b893:	jno    0x41b8cf
  41b895:	adc    eax,0x7d65fb53
  41b89a:	rcr    DWORD PTR [edi],1
  41b89c:	retf   0x54ef
  41b89f:	xchg   ecx,eax
  41b8a0:	jns    0x41b841
  41b8a2:	jmp    DWORD PTR [eax-0x233671f9]
  41b8a8:	add    DWORD PTR [ebx-0xc9299f5],0x4f
  41b8af:	pushf  
  41b8b0:	in     eax,0x59
  41b8b2:	jae    0x41b8e1
  41b8b4:	adc    ch,BYTE PTR [ecx]
  41b8b6:	out    dx,eax
  41b8b7:	nop
  41b8b8:	mov    WORD PTR [eax-0x16],ss
  41b8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8bc:	pusha  
  41b8bd:	mov    edi,0xc6c4e6e3
  41b8c2:	push   edx
  41b8c3:	das    
  41b8c4:	dec    ecx
  41b8c5:	xor    BYTE PTR [eax],0xc5
  41b8c8:	imul   edi,DWORD PTR [esp+esi*8+0x12840f49],0x3b83dc9e
  41b8d3:	inc    ebx
  41b8d4:	xchg   ebp,eax
  41b8d5:	xor    al,0xb0
  41b8d7:	stos   BYTE PTR es:[edi],al
  41b8d8:	dec    esi
  41b8d9:	mov    ebx,0x18b942ca
  41b8de:	aaa    
  41b8df:	pop    edi
  41b8e0:	out    dx,eax
  41b8e1:	jp     0x41b88e
  41b8e3:	xchg   ecx,eax
  41b8e4:	inc    esp
  41b8e5:	jge    0x41b895
  41b8e7:	nop
  41b8e8:	test   BYTE PTR [eax],dh
  41b8ea:	cs das 
  41b8ec:	or     eax,0xfdf3db2b
  41b8f1:	xchg   ebp,eax
  41b8f2:	pop    ss
  41b8f3:	scas   eax,DWORD PTR es:[edi]
  41b8f4:	std    
  41b8f5:	xchg   edx,eax
  41b8f6:	fisubr WORD PTR [ebp+0x341e274]
  41b8fc:	and    dl,BYTE PTR [edx-0x79]
  41b8ff:	fnstenv [esi-0x44]
  41b902:	cs jl  0x41b978
  41b905:	pop    edi
  41b906:	in     eax,0x92
  41b908:	cs jns 0x41b904
  41b90b:	sbb    eax,0xf86f2825
  41b910:	sbb    al,0xf
  41b912:	mov    ebx,0x909dbaa0
  41b917:	jno    0x41b8ec
  41b919:	cmc    
  41b91a:	dec    eax
  41b91b:	mov    bl,BYTE PTR [ecx-0x6a]
  41b91e:	jne    0x41b8ce
  41b920:	pop    es
  41b921:	push   ebp
  41b922:	call   0x51a2c73e
  41b927:	xor    al,0x45
  41b929:	adc    BYTE PTR [ebp-0x9],cl
  41b92c:	sbb    al,0x86
  41b92e:	ds cmp al,0xdd
  41b931:	int    0x32
  41b933:	scas   al,BYTE PTR es:[edi]
  41b934:	sub    al,BYTE PTR [edx+0x1b]
  41b937:	xchg   ebx,eax
  41b938:	out    0xb1,al
  41b93a:	mov    fs,ebp
  41b93c:	xchg   ebp,eax
  41b93d:	dec    edi
  41b93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b93f:	cmc    
  41b940:	lds    edi,FWORD PTR [eax+0x6a500315]
  41b946:	push   es
  41b947:	(bad)  
  41b948:	mov    al,ds:0x74e0f0c7
  41b94d:	retf   
  41b94e:	jne    0x41b954
  41b950:	fld    DWORD PTR [edx]
  41b952:	popa   
  41b953:	rcl    DWORD PTR [edx+ebx*4-0x78],0x63
  41b958:	or     DWORD PTR [ebx],0xbd585500
  41b95e:	xchg   ecx,eax
  41b95f:	je     0x41b9b9
  41b961:	cmp    ah,BYTE PTR [edi+ebx*4-0x6d]
  41b965:	arpl   WORD PTR [edi+esi*2+0x40],dx
  41b969:	mov    cl,0x9
  41b96b:	fs mov dh,0x9f
  41b96e:	cmc    
  41b96f:	test   DWORD PTR [eax],ebx
  41b971:	dec    esi
  41b972:	lods   eax,DWORD PTR ds:[esi]
  41b973:	sbb    esi,ecx
  41b975:	retf   
  41b976:	jae    0x41b915
  41b978:	mov    ah,0x76
  41b97a:	popf   
  41b97b:	out    dx,al
  41b97c:	ret    0x9d6d
  41b97f:	cli    
  41b980:	sbb    edx,esp
  41b982:	stos   DWORD PTR es:[edi],eax
  41b983:	or     al,0x46
  41b985:	loope  0x41b987
  41b987:	lods   eax,DWORD PTR ds:[esi]
  41b988:	call   0xbdaa:0xbea91946
  41b98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b990:	dec    esp
  41b991:	std    
  41b992:	adc    al,0xe0
  41b994:	pop    edx
  41b995:	mov    ch,0xc5
  41b997:	in     al,dx
  41b998:	dec    ecx
  41b999:	and    al,0x72
  41b99b:	mov    WORD PTR [ebp-0x28],cs
  41b99e:	and    al,0xc4
  41b9a0:	sti    
  41b9a1:	jae    0x41b9ff
  41b9a3:	cmp    eax,DWORD PTR [edi-0x70]
  41b9a6:	fld    DWORD PTR [ebp-0x60]
  41b9a9:	dec    ebp
  41b9aa:	inc    ebp
  41b9ab:	aaa    
  41b9ac:	mov    ds:0xdf779e48,al
  41b9b1:	add    BYTE PTR [eax+0x23],dh
  41b9b4:	lahf   
  41b9b5:	sub    BYTE PTR [ecx+eiz*2+0x56],cl
  41b9b9:	stc    
  41b9ba:	mov    dh,0xd4
  41b9bc:	cmp    BYTE PTR [edx],bl
  41b9be:	clc    
  41b9bf:	stmxcsr DWORD PTR gs:[edi+0x2afdcccf]
  41b9c7:	ficomp WORD PTR [esi+0x57]
  41b9ca:	jo     0x41b9af
  41b9cc:	mov    esp,DWORD PTR [edi]
  41b9ce:	test   BYTE PTR [eax-0x2e85aa68],0x11
  41b9d5:	inc    esi
  41b9d6:	(bad)  
  41b9d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9d8:	jg     0x41ba0b
  41b9da:	and    al,0xda
  41b9dc:	adc    al,0xe7
  41b9de:	mov    cl,0x33
  41b9e0:	mov    dh,BYTE PTR [ebx+0x6f]
  41b9e3:	fdivr  DWORD PTR [ecx+0x4a4dbce0]
  41b9e9:	aam    0xb3
  41b9eb:	repz lahf 
  41b9ed:	cld    
  41b9ee:	pop    ss
  41b9ef:	sbb    ch,BYTE PTR [edx]
  41b9f1:	(bad)  
  41b9f2:	pop    esi
  41b9f3:	xchg   edx,eax
  41b9f4:	or     BYTE PTR [edi-0x6d],ah
  41b9f7:	jle    0x41ba41
  41b9f9:	das    
  41b9fa:	fbstp  TBYTE PTR [ecx-0x651cd25b]
  41ba00:	and    al,0x8f
  41ba02:	stos   BYTE PTR es:[edi],al
  41ba03:	xchg   esi,eax
  41ba04:	push   0x89087603
  41ba09:	adc    al,0xa5
  41ba0b:	fdivr  DWORD PTR [ebx]
  41ba0d:	fwait
  41ba0e:	sub    dh,cl
  41ba10:	leave  
  41ba11:	shr    edi,cl
  41ba13:	dec    ecx
  41ba14:	mov    bh,0x6c
  41ba16:	ins    DWORD PTR es:[edi],dx
  41ba17:	repnz add al,0x2
  41ba1a:	arpl   WORD PTR [ecx+0x7386b7b3],sp
  41ba20:	dec    edi
  41ba21:	push   edx
  41ba22:	cmp    ah,BYTE PTR [eax+0x3b]
  41ba25:	sub    ah,BYTE PTR [ebp+0x7315bfc1]
  41ba2b:	pop    ds
  41ba2c:	leave  
  41ba2d:	jmp    0x41ba39
  41ba2f:	test   BYTE PTR [esi-0xf12b0a0],0x68
  41ba36:	and    dh,bh
  41ba38:	addr16 dec edi
  41ba3a:	mov    ah,0x2c
  41ba3c:	mov    ebx,0xe1f68054
  41ba41:	mov    ch,BYTE PTR [eax+0x6a3731bf]
  41ba47:	or     BYTE PTR [ecx+0x11],0x4c
  41ba4b:	sub    dl,BYTE PTR [ecx+0x2b]
  41ba4e:	pop    esi
  41ba4f:	addr16 retf 
  41ba51:	push   dx
  41ba53:	nop
  41ba54:	jl     0x41baae
  41ba56:	stos   DWORD PTR es:[edi],eax
  41ba57:	mov    ah,0xc
  41ba59:	xchg   ebx,eax
  41ba5a:	data16 jbe 0x41b9f8
  41ba5d:	bound  esi,QWORD PTR [edi+0x54]
  41ba60:	pop    ebp
  41ba61:	fsub   DWORD PTR [esi+0x4463c2a8]
  41ba67:	push   edx
  41ba68:	or     al,0x13
  41ba6a:	mov    esp,0xe80b22d0
  41ba6f:	sub    edx,eax
  41ba71:	mov    BYTE PTR [edx],bh
  41ba73:	inc    esp
  41ba74:	dec    ebp
  41ba75:	mov    ds:0x5958a05f,eax
  41ba7a:	(bad)  
  41ba7b:	sahf   
  41ba7c:	mov    dl,0x8b
  41ba7e:	adc    BYTE PTR [eax-0x66b815be],dh
  41ba84:	inc    edx
  41ba85:	mov    bh,0x9a
  41ba87:	dec    edi
  41ba88:	xchg   ebp,eax
  41ba89:	push   0x7c9bd13c
  41ba8e:	call   0xc6ae:0x7b80dce9
  41ba95:	and    dl,BYTE PTR [edx+0x1fe5ae30]
  41ba9b:	gs mov edx,0xe66923a8
  41baa1:	push   esi
  41baa2:	add    BYTE PTR [esp+ebx*2-0x4388e574],ah
  41baa9:	call   DWORD PTR [eax]
  41baab:	or     ecx,DWORD PTR es:[eax]
  41baae:	stc    
  41baaf:	mov    ecx,0xf07131c5
  41bab4:	ins    BYTE PTR es:[edi],dx
  41bab5:	sar    BYTE PTR [edx-0x55],1
  41bab8:	repnz add eax,0x8a3a71b0
  41babe:	aas    
  41babf:	xchg   BYTE PTR [esi+eiz*2],ah
  41bac2:	push   cs
  41bac3:	pop    ss
  41bac4:	std    
  41bac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac6:	inc    ecx
  41bac7:	add    al,0x6d
  41bac9:	call   0x3df1:0x4aa3e9d0
  41bad0:	ret    
  41bad1:	adc    al,0xbf
  41bad3:	in     eax,dx
  41bad4:	inc    eax
  41bad5:	mov    esi,0x9f525434
  41bada:	js     0x41bacf
  41badc:	xor    BYTE PTR [edi-0x2b],ah
  41badf:	(bad)  
  41bae0:	fwait
  41bae1:	mov    edx,0xb5737925
  41bae6:	repz sub BYTE PTR [ebp-0x65],dh
  41baea:	ja     0x41bb4a
  41baec:	ret    0x38d1
  41baef:	or     dh,BYTE PTR ds:0xe3dbc3b6
  41baf5:	(bad)  [eax]
  41baf7:	out    0xf2,al
  41baf9:	add    ebx,ebx
  41bafb:	in     al,0xca
  41bafd:	ins    DWORD PTR es:[edi],dx
  41bafe:	cmp    al,0x68
  41bb00:	int    0x4d
  41bb02:	and    edx,DWORD PTR [esi+0x4f0b78eb]
  41bb08:	sbb    bh,bh
  41bb0a:	and    cl,cl
  41bb0c:	lea    ebx,[ecx-0x155085cd]
  41bb12:	popf   
  41bb13:	xor    al,0xe4
  41bb15:	cli    
  41bb16:	jae    0x41bab9
  41bb18:	pop    ss
  41bb19:	das    
  41bb1a:	sub    BYTE PTR [eax-0x14388326],dh
  41bb20:	jmp    0x41baf9
  41bb22:	cwde   
  41bb23:	call   0x326a:0xd5b76ca0
  41bb2a:	ficom  WORD PTR [ecx+0x36]
  41bb2d:	jmp    0x41bb86
  41bb2f:	cmp    dh,BYTE PTR [edx+0x187afe4c]
  41bb35:	lahf   
  41bb36:	enter  0xf605,0x1f
  41bb3a:	dec    eax
  41bb3b:	bound  ecx,QWORD PTR [esi-0x11]
  41bb3e:	mov    dl,0x35
  41bb40:	inc    edx
  41bb41:	and    al,0xf6
  41bb43:	lea    ecx,[ebx]
  41bb45:	or     eax,0x16f200a0
  41bb4a:	sub    DWORD PTR [ebx],edi
  41bb4c:	add    DWORD PTR [ebx+0x34],eax
  41bb4f:	cmp    eax,0xad56386d
  41bb54:	cmp    cl,ah
  41bb56:	leave  
  41bb57:	add    DWORD PTR ds:0x4bb6466e,0x76e80613
  41bb61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb62:	sbb    bl,bl
  41bb64:	adc    DWORD PTR [ecx+0xe],ebp
  41bb67:	pop    ss
  41bb68:	add    bl,BYTE PTR [esi+0x46]
  41bb6b:	aad    0x75
  41bb6d:	fsubr  DWORD PTR [edx]
  41bb6f:	mov    dl,0xc4
  41bb71:	sub    al,0x81
  41bb73:	test   al,ah
  41bb75:	mov    dl,0xc7
  41bb77:	out    0x54,al
  41bb79:	pop    ebx
  41bb7a:	test   al,0xba
  41bb7c:	dec    ebp
  41bb7d:	in     al,dx
  41bb7e:	push   es
  41bb7f:	cdq    
  41bb80:	sub    eax,0x69fd5599
  41bb85:	inc    edx
  41bb86:	fsqrt  
  41bb88:	shr    BYTE PTR [edx-0x6b],cl
  41bb8b:	adc    cl,dl
  41bb8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb8e:	pushf  
  41bb8f:	fwait
  41bb90:	xor    eax,0xa50f3f03
  41bb95:	je     0x41bb93
  41bb97:	call   0x941b:0xd190eb76
  41bb9e:	pop    edx
  41bb9f:	mov    dh,0x55
  41bba1:	je     0x41bbbc
  41bba3:	add    edi,edx
  41bba5:	or     al,0x13
  41bba7:	pop    esp
  41bba8:	lock jb 0x41bc08
  41bbab:	xchg   edx,eax
  41bbac:	xchg   ebx,eax
  41bbad:	mov    edi,0x4393ae44
  41bbb2:	out    dx,al
  41bbb3:	pop    ss
  41bbb4:	mov    esi,0x870f954b
  41bbb9:	push   edx
  41bbba:	lods   eax,DWORD PTR ds:[esi]
  41bbbb:	in     al,0xe8
  41bbbd:	fidiv  WORD PTR [ebx+0x27]
  41bbc0:	jle    0x41bb65
  41bbc2:	and    ecx,DWORD PTR [edx+0x5febb0a2]
  41bbc8:	dec    esi
  41bbc9:	sbb    ecx,DWORD PTR [ecx+0x1034720b]
  41bbcf:	outs   dx,DWORD PTR ds:[esi]
  41bbd0:	popa   
  41bbd1:	pop    ecx
  41bbd2:	scas   eax,DWORD PTR es:[edi]
  41bbd3:	sbb    eax,0xe19dfeb7
  41bbd8:	pusha  
  41bbd9:	in     al,0xa4
  41bbdb:	sahf   
  41bbdc:	push   ebp
  41bbdd:	xor    al,0x76
  41bbdf:	mov    esp,0x36292ca6
  41bbe4:	mov    al,0x34
  41bbe6:	lds    ebx,FWORD PTR [esi]
  41bbe8:	std    
  41bbe9:	mov    bh,0xc3
  41bbeb:	sahf   
  41bbec:	pop    edi
  41bbed:	jmp    0xe7c324f8
  41bbf2:	add    ebp,DWORD PTR [ebp-0x6e]
  41bbf5:	mov    ebx,0xa15be09b
  41bbfa:	sbb    BYTE PTR [esi+0x318166a7],ch
  41bc00:	mov    bl,0x75
  41bc02:	push   ss
  41bc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc04:	add    eax,DWORD PTR [eax+0x16e4b65b]
  41bc0a:	fldcw  WORD PTR [ebp-0x77a1059b]
  41bc10:	ins    DWORD PTR es:[edi],dx
  41bc11:	or     DWORD PTR [ebx-0x1e],edi
  41bc14:	stc    
  41bc15:	mov    al,0x51
  41bc17:	adc    eax,0xb205e854
  41bc1c:	xchg   esi,eax
  41bc1d:	mov    dh,ch
  41bc1f:	mov    dh,0x8d
  41bc21:	add    al,0xd9
  41bc23:	mov    ecx,ebx
  41bc25:	sbb    ebx,ebx
  41bc27:	retf   0xb858
  41bc2a:	pop    edi
  41bc2b:	mov    ds:0xa861dbef,al
  41bc30:	jae    0x41bc62
  41bc32:	pop    eax
  41bc33:	mov    eax,0xd6dfa512
  41bc38:	jbe    0x41bc4f
  41bc3a:	adc    cl,BYTE PTR [ebx+0x77]
  41bc3d:	popf   
  41bc3e:	clc    
  41bc3f:	jp     0x41bc3c
  41bc41:	mov    dl,0xed
  41bc43:	inc    edi
  41bc44:	and    esi,DWORD PTR [eax-0x40]
  41bc47:	mov    bh,0xa2
  41bc49:	lock xchg BYTE PTR [ebx],ch
  41bc4c:	adc    al,0x89
  41bc4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc4f:	dec    ebp
  41bc50:	adc    BYTE PTR [ecx],bh
  41bc52:	aam    0x8e
  41bc54:	js     0x41bbe5
  41bc56:	ins    BYTE PTR es:[edi],dx
  41bc57:	fild   QWORD PTR [eax-0x23]
  41bc5a:	cmp    al,0x7f
  41bc5c:	pusha  
  41bc5d:	daa    
  41bc5e:	jle    0x41bc6e
  41bc60:	sub    eax,0xc8ab2e76
  41bc65:	xchg   edx,eax
  41bc66:	xchg   ecx,eax
  41bc67:	scas   eax,DWORD PTR es:[edi]
  41bc68:	shl    DWORD PTR [edi-0x4b7b27ae],cl
  41bc6e:	stos   DWORD PTR es:[edi],eax
  41bc6f:	in     al,dx
  41bc70:	outs   dx,BYTE PTR ds:[esi]
  41bc71:	ficom  WORD PTR [ebx-0x51]
  41bc74:	(bad)  [esi]
  41bc76:	test   DWORD PTR [ecx+0x2e1508fd],edi
  41bc7c:	push   esi
  41bc7d:	xchg   ebx,eax
  41bc7e:	jecxz  0x41bcd8
  41bc80:	outs   dx,BYTE PTR ds:[esi]
  41bc81:	rcr    BYTE PTR [ebp+ebp*1+0x3f99186f],0x32
  41bc89:	mov    ecx,esp
  41bc8b:	ror    DWORD PTR ds:0xe67ebafe,1
  41bc91:	stos   DWORD PTR es:[edi],eax
  41bc92:	cmp    esp,0x9930f5fb
  41bc98:	cld    
  41bc99:	mov    ebp,0x5870754e
  41bc9e:	adc    dh,BYTE PTR [ecx+0x595fdeae]
  41bca4:	ret    0xb788
  41bca7:	cmp    DWORD PTR [esp+edx*2-0x17],0xffffffed
  41bcac:	bound  edx,QWORD PTR [edi+eax*1-0x49266630]
  41bcb3:	stc    
  41bcb4:	adc    DWORD PTR [ebp+0x2a],ecx
  41bcb7:	repnz push eax
  41bcb9:	fsubr  st(4),st
  41bcbb:	test   al,0x56
  41bcbd:	int3   
  41bcbe:	call   0xd38f:0xe928bd70
  41bcc5:	iret   
  41bcc6:	add    al,0x3a
  41bcc8:	push   esi
  41bcc9:	mov    al,ds:0x9a115260
  41bcce:	fmul   QWORD PTR [edi-0x6d976c89]
  41bcd4:	sbb    DWORD PTR [ebx+esi*2+0x83608cd],esi
  41bcdb:	mov    dh,0x82
  41bcdd:	mov    WORD PTR ds:0x95198ce,cs
  41bce3:	out    dx,eax
  41bce4:	popa   
  41bce5:	and    al,ah
  41bce7:	call   0xe8383e80
  41bcec:	mov    ebx,DWORD PTR [ecx+ebx*1]
  41bcef:	jle    0x41bcce
  41bcf1:	dec    edi
  41bcf2:	rcr    dl,cl
  41bcf4:	push   ebx
  41bcf5:	in     eax,dx
  41bcf6:	inc    esi
  41bcf7:	push   eax
  41bcf8:	xor    DWORD PTR [eax+0x74],eax
  41bcfb:	pop    esi
  41bcfc:	mov    bl,0x18
  41bcfe:	ins    BYTE PTR es:[edi],dx
  41bcff:	push   esp
  41bd00:	or     ebp,DWORD PTR [eax+0x7f7a5697]
  41bd06:	lock jnp 0x41bcc2
  41bd09:	lds    ecx,FWORD PTR [ebx]
  41bd0b:	(bad)  
  41bd0c:	pop    ecx
  41bd0d:	xor    ebx,DWORD PTR [ebp+0x53c40119]
  41bd13:	jae    0x41bd14
  41bd15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd16:	in     al,dx
  41bd17:	jecxz  0x41bd3a
  41bd19:	out    dx,eax
  41bd1a:	inc    esi
  41bd1b:	jecxz  0x41bcf5
  41bd1d:	loopne 0x41bcef
  41bd1f:	out    0xea,eax
  41bd21:	mov    WORD PTR [ecx],fs
  41bd23:	or     cl,BYTE PTR [ecx]
  41bd25:	jo     0x41bd80
  41bd27:	scas   eax,DWORD PTR es:[edi]
  41bd28:	daa    
  41bd29:	fist   DWORD PTR [esi+edx*4]
  41bd2c:	adc    esp,ebp
  41bd2e:	xchg   ecx,eax
  41bd2f:	rol    DWORD PTR [edi-0x4f],cl
  41bd32:	cld    
  41bd33:	test   bl,0x88
  41bd36:	xor    al,0x66
  41bd38:	les    eax,FWORD PTR [edx]
  41bd3a:	inc    ebx
  41bd3b:	idiv   BYTE PTR [esi-0x7e55d17c]
  41bd41:	leave  
  41bd42:	adc    ch,ch
  41bd44:	sahf   
  41bd45:	das    
  41bd46:	call   0xd165:0x4abd31a9
  41bd4d:	sub    eax,0xcf49822c
  41bd52:	jno    0x41bdb1
  41bd54:	ret    
  41bd55:	out    0x2b,al
  41bd57:	hlt    
  41bd58:	(bad)  
  41bd59:	fsubr  DWORD PTR [esi+0x34a868f2]
  41bd5f:	repz inc ebp
  41bd61:	sub    eax,0xf22c0e97
  41bd66:	(bad)  
  41bd67:	stos   BYTE PTR es:[edi],al
  41bd68:	mov    WORD PTR [edx+0x63],?
  41bd6b:	outs   dx,DWORD PTR ds:[esi]
  41bd6c:	xor    BYTE PTR [ecx-0x7b],ch
  41bd6f:	cdq    
  41bd70:	sbb    eax,0x99c81fbf
  41bd75:	push   ecx
  41bd76:	add    DWORD PTR [edx],ebp
  41bd78:	int    0x5
  41bd7a:	clc    
  41bd7b:	pop    edi
  41bd7c:	mov    cl,0x81
  41bd7e:	ja     0x41bde7
  41bd80:	mov    ecx,0xa7f75ebb
  41bd85:	loopne 0x41bd69
  41bd87:	sbb    al,0x3a
  41bd89:	out    dx,al
  41bd8a:	mov    ah,0xa2
  41bd8c:	fst    st(1)
  41bd8e:	iret   
  41bd8f:	js     0x41bd3c
  41bd91:	adc    BYTE PTR [ecx],ah
  41bd93:	and    al,0xf8
  41bd95:	ja     0x41be12
  41bd97:	out    0xb0,al
  41bd99:	inc    edi
  41bd9a:	outs   dx,BYTE PTR ds:[esi]
  41bd9b:	xchg   esi,eax
  41bd9c:	pop    eax
  41bd9d:	ds jecxz 0x41bd93
  41bda0:	stc    
  41bda1:	arpl   WORD PTR [ecx-0x514fd94],bx
  41bda7:	out    0x1d,al
  41bda9:	adc    DWORD PTR [esi-0x7a],edx
  41bdac:	icebp  
  41bdad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdae:	mov    al,0xf8
  41bdb0:	jg     0x41bdc8
  41bdb2:	inc    esp
  41bdb3:	nop
  41bdb4:	mov    ch,0x99
  41bdb6:	push   ss
  41bdb7:	cs push esp
  41bdb9:	lock pop ecx
  41bdbb:	rcr    ch,0xde
  41bdbe:	xchg   ecx,eax
  41bdbf:	fs pusha 
  41bdc1:	sub    dl,bh
  41bdc3:	push   0xffffffd5
  41bdc5:	or     bh,BYTE PTR [ebp-0x57]
  41bdc8:	inc    edi
  41bdc9:	not    BYTE PTR [esi+ebp*2-0x51]
  41bdcd:	aam    0x5
  41bdcf:	mov    ?,WORD PTR [eax+0x6c1f920e]
  41bdd5:	dec    ebx
  41bdd6:	nop
  41bdd7:	shr    BYTE PTR ss:0xf4c0f2d8,0x66
  41bddf:	fsubr  QWORD PTR [ebx-0x2ea7cf88]
  41bde5:	and    DWORD PTR [eax],0xffffff96
  41bde8:	stos   BYTE PTR es:[edi],al
  41bde9:	(bad)  
  41bdea:	call   0x3991e02c
  41bdef:	mov    DWORD PTR [ebx-0x5f6268e6],ebp
  41bdf5:	adc    eax,0xad301322
  41bdfa:	cdq    
  41bdfb:	push   ss
  41bdfc:	fisubr DWORD PTR [esi]
  41bdfe:	mov    al,0xf7
  41be00:	inc    esi
  41be01:	or     al,0x98
  41be03:	mov    ds:0xf4882ab6,eax
  41be08:	js     0x41bd94
  41be0a:	call   0x491259d9
  41be0f:	ret    0x42ed
  41be12:	or     al,0x67
  41be14:	leave  
  41be15:	mov    dl,0xb9
  41be17:	xchg   esp,eax
  41be18:	pop    ss
  41be19:	ins    DWORD PTR es:[edi],dx
  41be1a:	sbb    eax,0xf8eda064
  41be1f:	adc    dl,BYTE PTR [eax]
  41be21:	and    eax,0x628e81d8
  41be26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be27:	mov    eax,0x76a94bee
  41be2c:	inc    esi
  41be2d:	jne    0x41be81
  41be2f:	sub    dl,0xd
  41be32:	es pop ebx
  41be34:	sub    DWORD PTR [esi+0xe],esi
  41be37:	leave  
  41be38:	test   BYTE PTR [ecx-0x38725216],0x0
  41be3f:	sahf   
  41be40:	add    DWORD PTR [ebx-0x168907ae],esp
  41be46:	cmp    BYTE PTR [ebx],ch
  41be48:	sar    DWORD PTR [edx+0x32692ce],1
  41be4e:	outs   dx,BYTE PTR ds:[esi]
  41be4f:	pop    es
  41be50:	or     eax,0xeaa3b70c
  41be55:	test   al,0xb1
  41be57:	inc    esi
  41be58:	xchg   BYTE PTR [esi-0x13],dh
  41be5b:	shr    edi,cl
  41be5d:	inc    edi
  41be5e:	loope  0x41be2f
  41be60:	xor    bh,ch
  41be62:	test   bl,bh
  41be64:	test   eax,0xfdc01002
  41be69:	ret    0x8081
  41be6c:	add    DWORD PTR [edi+0x30],ebp
  41be6f:	popa   
  41be70:	leave  
  41be71:	call   0x9c4f2a95
  41be76:	or     DWORD PTR ds:0x73559b3a,edi
  41be7c:	and    eax,0xb2d04cee
  41be81:	and    ch,cl
  41be83:	lahf   
  41be84:	jmp    0x41bebf
  41be86:	out    dx,al
  41be87:	popa   
  41be88:	or     BYTE PTR [esi],dh
  41be8a:	lods   al,BYTE PTR ds:[esi]
  41be8b:	leave  
  41be8c:	xchg   esp,eax
  41be8d:	push   ecx
  41be8e:	pop    esi
  41be8f:	xchg   ecx,eax
  41be90:	mov    bh,0x4e
  41be92:	xchg   esi,eax
  41be93:	outs   dx,DWORD PTR ds:[esi]
  41be94:	sbb    al,0xca
  41be96:	mov    ebx,0xbfd6c86b
  41be9b:	sbb    al,0xe8
  41be9d:	inc    ecx
  41be9e:	inc    esp
  41be9f:	pusha  
  41bea0:	(bad)  
  41bea1:	cmc    
  41bea2:	mov    ds:0x8507f7bf,eax
  41bea7:	and    BYTE PTR [esi-0x52561556],al
  41bead:	aam    0xca
  41beaf:	(bad)  
  41beb0:	sub    ch,BYTE PTR ds:0x6413a468
  41beb6:	sbb    esi,ebp
  41beb8:	sar    BYTE PTR [ebp+0x72],0xa8
  41bebc:	mov    ah,0x75
  41bebe:	call   0x46ccddbc
  41bec3:	xchg   ebx,eax
  41bec4:	dec    edx
  41bec5:	in     al,dx
  41bec6:	xchg   edx,eax
  41bec7:	and    al,0xcb
  41bec9:	xchg   edx,eax
  41beca:	push   edi
  41becb:	add    eax,0xfaa0156c
  41bed0:	xchg   DWORD PTR [esi-0x26f36894],esi
  41bed6:	xor    cl,BYTE PTR es:[eax]
  41bed9:	jmp    0xf072:0xbec6768d
  41bee0:	repnz mov WORD PTR [edx-0x7d167504],?
  41bee7:	call   0x331a:0x739ac2ce
  41beee:	mov    esi,0x9ecae4ef
  41bef3:	nop
  41bef4:	pushf  
  41bef5:	mov    eax,DWORD PTR [esi+0x63888f42]
  41befb:	jmp    0xd5a1:0xae2924df
  41bf02:	dec    ebp
  41bf03:	mov    al,0xa0
  41bf05:	ins    BYTE PTR es:[edi],dx
  41bf06:	inc    edx
  41bf07:	test   DWORD PTR [ecx-0x30904df7],ecx
  41bf0d:	popf   
  41bf0e:	push   ebx
  41bf0f:	stos   DWORD PTR es:[edi],eax
  41bf10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf11:	mov    edi,0xa8b226d4
  41bf16:	push   edx
  41bf17:	mov    esi,0x9f933f0c
  41bf1c:	lods   eax,DWORD PTR ds:[esi]
  41bf1d:	rcl    DWORD PTR [ecx-0x75],0x1a
  41bf21:	popa   
  41bf22:	mov    al,0xc5
  41bf24:	(bad)  
  41bf25:	jg     0x41bea7
  41bf27:	add    BYTE PTR [esi],0x5c
  41bf2a:	and    BYTE PTR [ecx+0xf],0xb3
  41bf2e:	es or  al,0x7b
  41bf31:	push   edi
  41bf32:	loope  0x41bf82
  41bf34:	(bad)  
  41bf35:	mov    dl,0x6
  41bf37:	imul   eax,eax,0x78
  41bf3a:	outs   dx,DWORD PTR ds:[esi]
  41bf3b:	xor    al,0xbd
  41bf3d:	outs   dx,BYTE PTR ds:[esi]
  41bf3e:	jl     0x41bf23
  41bf40:	out    dx,al
  41bf41:	xor    bh,BYTE PTR [ecx-0x7a]
  41bf44:	jnp    0x41bf64
  41bf46:	loopne 0x41bf5b
  41bf48:	cs jae 0x41bf54
  41bf4b:	scas   eax,DWORD PTR es:[di]
  41bf4d:	sbb    al,0x4b
  41bf4f:	adc    esi,DWORD PTR [edx-0x5184d114]
  41bf55:	clc    
  41bf56:	cwde   
  41bf57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf58:	icebp  
  41bf59:	sar    BYTE PTR [edi-0x74d83225],cl
  41bf5f:	pop    es
  41bf60:	sub    ah,al
  41bf62:	pop    ebx
  41bf63:	int3   
  41bf64:	push   ebx
  41bf65:	add    al,0x2b
  41bf67:	sar    DWORD PTR [esi+0x65],cl
  41bf6a:	sar    DWORD PTR [ebp-0x629af49f],1
  41bf70:	sti    
  41bf71:	rcl    DWORD PTR [ecx-0x2],1
  41bf74:	lods   al,BYTE PTR ds:[esi]
  41bf75:	stc    
  41bf76:	push   es
  41bf77:	arpl   WORD PTR [edi],bp
  41bf79:	mov    ch,0x5d
  41bf7b:	out    dx,al
  41bf7c:	pop    esp
  41bf7d:	outs   dx,DWORD PTR ds:[esi]
  41bf7e:	lock or DWORD PTR [ebx-0x50727dca],ecx
  41bf85:	clc    
  41bf86:	mov    edi,0xab945d7a
  41bf8b:	add    al,0x53
  41bf8d:	mov    al,0xfb
  41bf8f:	into   
  41bf90:	imul   esi,DWORD PTR [edx+0x2c],0x31
  41bf94:	xor    cl,0xf5
  41bf97:	std    
  41bf98:	and    ecx,DWORD PTR [esp+ebp*2+0x5]
  41bf9c:	xor    eax,0x55aebfdf
  41bfa1:	and    BYTE PTR [esp+ebx*8-0x32],al
  41bfa5:	imul   esp,DWORD PTR [ebp-0x8fe125],0xffffffe9
  41bfac:	sbb    esi,0xffffff87
  41bfaf:	mov    ebp,DWORD PTR [edx-0x6ebac302]
  41bfb5:	test   BYTE PTR [esp+ebp*2-0x4e],0xde
  41bfba:	ror    DWORD PTR [ebp-0x39],1
  41bfbd:	lds    edi,FWORD PTR [ecx-0x7d]
  41bfc0:	sbb    bl,BYTE PTR [eax-0x40]
  41bfc3:	pop    edx
  41bfc4:	mov    ch,0xc9
  41bfc6:	jae    0x41bfb3
  41bfc8:	aas    
  41bfc9:	and    al,BYTE PTR [esi]
  41bfcb:	fwait
  41bfcc:	adc    al,0xbf
  41bfce:	sbb    DWORD PTR [edx],0xe62b50c8
  41bfd4:	xchg   edx,eax
  41bfd5:	and    bl,bl
  41bfd7:	cmp    eax,0xbee88b18
  41bfdc:	ror    BYTE PTR [esi+0x60],cl
  41bfdf:	add    eax,0x5f31e4f6
  41bfe4:	mov    ebp,0x5b50dff7
  41bfe9:	adc    bh,al
  41bfeb:	add    al,0xaa
  41bfed:	bound  ebx,QWORD PTR [ecx-0x5f]
  41bff0:	jbe    0x41c01a
  41bff2:	and    edx,DWORD PTR [esi]
  41bff4:	inc    esp
  41bff5:	pop    ebp
  41bff6:	inc    ecx
  41bff7:	xchg   dl,dh
  41bff9:	out    0x0,eax
  41bffb:	jl     0x41c02a
  41bffd:	push   edx
  41bffe:	jp     0x41c031
  41c000:	dec    eax
  41c001:	or     BYTE PTR [esi],ah
  41c003:	push   0xf8384222
  41c008:	pusha  
  41c009:	xlat   BYTE PTR ds:[ebx]
  41c00a:	ins    DWORD PTR es:[edi],dx
  41c00b:	pop    edi
  41c00c:	mov    bl,0x8
  41c00e:	mov    ah,0x62
  41c010:	adc    al,0x7
  41c012:	adc    ecx,DWORD PTR [edx]
  41c014:	xor    ecx,ebp
  41c016:	sbb    DWORD PTR es:[ebp-0x71],ebp
  41c01a:	sbb    edi,DWORD PTR [edi+0x122e013]
  41c020:	push   edi
  41c021:	cmp    dl,BYTE PTR [edi+0x765eace9]
  41c027:	gs popa 
  41c029:	test   BYTE PTR [edx+ecx*2-0x80],dh
  41c02d:	jnp    0x41c07b
  41c02f:	sbb    al,0xc
  41c031:	fisubr WORD PTR [eax]
  41c033:	adc    esi,esp
  41c035:	sti    
  41c036:	adc    al,0x7e
  41c038:	or     cl,al
  41c03a:	jns    0x41c0ba
  41c03c:	mov    bh,0x39
  41c03e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03f:	sbb    BYTE PTR [edx+0x57],cl
  41c042:	scas   al,BYTE PTR es:[edi]
  41c043:	mov    ecx,0x195568ed
  41c048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c049:	and    al,0xa0
  41c04b:	jmp    0xb197eb6c
  41c050:	nop
  41c051:	push   0x9fdf7463
  41c056:	mov    dh,0x76
  41c058:	inc    ecx
  41c059:	test   BYTE PTR [edx+0x32362d8],bl
  41c05f:	sub    BYTE PTR [ecx],0xda
  41c062:	inc    ecx
  41c063:	in     eax,dx
  41c064:	adc    bl,BYTE PTR [ebx]
  41c066:	outs   dx,BYTE PTR ds:[esi]
  41c067:	out    0x64,al
  41c069:	inc    edx
  41c06a:	retf   
  41c06b:	ja     0x41c0c4
  41c06d:	inc    edx
  41c06e:	loopne 0x41c034
  41c070:	mov    al,ds:0xbb638a1
  41c075:	inc    esi
  41c076:	mov    ah,BYTE PTR [edi-0x1fd0905d]
  41c07c:	fwait
  41c07d:	dec    eax
  41c07e:	mov    esi,DWORD PTR ds:0x39e65374
  41c084:	dec    edi
  41c085:	neg    BYTE PTR [ebx+0x71b05125]
  41c08b:	add    dl,bh
  41c08d:	dec    ebp
  41c08e:	inc    ebx
  41c08f:	in     eax,0x2
  41c091:	mov    DWORD PTR [edx-0xeb55174],eax
  41c097:	inc    ecx
  41c098:	es pop esi
  41c09a:	and    al,0xcc
  41c09c:	leave  
  41c09d:	out    dx,al
  41c09e:	test   DWORD PTR [edi],edx
  41c0a0:	dec    eax
  41c0a1:	mov    ds:0x42668ce4,al
  41c0a6:	sub    bl,BYTE PTR [ebp-0x2592d47f]
  41c0ac:	cdq    
  41c0ad:	shl    DWORD PTR [eax-0x60],cl
  41c0b0:	rcr    BYTE PTR [edi],0xaa
  41c0b3:	jp     0x41c03f
  41c0b5:	or     al,0x93
  41c0b7:	into   
  41c0b8:	jo     0x41c0f8
  41c0ba:	pop    esp
  41c0bb:	sbb    al,0x7a
  41c0bd:	lahf   
  41c0be:	retf   
  41c0bf:	cmc    
  41c0c0:	add    eax,edx
  41c0c2:	daa    
  41c0c3:	inc    ebp
  41c0c4:	pop    edx
  41c0c5:	out    0x9e,al
  41c0c7:	lods   eax,DWORD PTR ds:[esi]
  41c0c8:	or     ecx,DWORD PTR [edx+0x62]
  41c0cb:	inc    ebp
  41c0cc:	loop   0x41c0b7
  41c0ce:	daa    
  41c0cf:	stos   BYTE PTR es:[edi],al
  41c0d0:	push   ss
  41c0d1:	movntps XMMWORD PTR [ecx-0x69],xmm2
  41c0d5:	(bad)  
  41c0d6:	test   eax,0xd86b3d88
  41c0db:	ins    DWORD PTR es:[edi],dx
  41c0dc:	and    BYTE PTR [ecx+esi*2+0x69a4ccf6],bh
  41c0e3:	repnz and ebp,DWORD PTR [edi-0x3ac46b2f]
  41c0ea:	and    edi,esi
  41c0ec:	adc    bh,al
  41c0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0ef:	and    BYTE PTR [esi-0x40794ff7],dl
  41c0f5:	sbb    al,0xc6
  41c0f7:	shr    ch,1
  41c0f9:	repz mov dl,0x32
  41c0fc:	into   
  41c0fd:	arpl   cx,dx
  41c0ff:	and    cl,BYTE PTR [edx]
  41c101:	dec    esi
  41c102:	mov    dh,0x2a
  41c104:	push   ebx
  41c105:	shl    DWORD PTR [edi],cl
  41c107:	rcr    edx,1
  41c109:	mov    bl,0x3a
  41c10b:	jg     0x41c09d
  41c10d:	push   ebx
  41c10e:	popa   
  41c10f:	jl     0x41c117
  41c111:	adc    eax,0xb7163717
  41c116:	stos   DWORD PTR es:[edi],eax
  41c117:	outs   dx,BYTE PTR ds:[esi]
  41c118:	hlt    
  41c119:	sbb    ebx,esp
  41c11b:	rcl    DWORD PTR [ecx-0x6e3b184c],0xce
  41c122:	test   edx,ebx
  41c124:	push   es
  41c125:	inc    ebx
  41c126:	mov    eax,ds:0xd90b664c
  41c12b:	std    
  41c12c:	dec    ecx
  41c12d:	jg     0x41c17e
  41c12f:	(bad)
  41c132:	and    ebp,edi
  41c134:	mov    al,ds:0x56b1da54
  41c139:	jo     0x41c0df
  41c13b:	stos   BYTE PTR es:[edi],al
  41c13c:	enter  0x3d4b,0x6e
  41c140:	xchg   esp,eax
  41c141:	fwait
  41c142:	mov    bl,0xa0
  41c144:	jns    0x41c154
  41c146:	rcl    DWORD PTR [edi],cl
  41c148:	cld    
  41c149:	lock fmulp st(7),st
  41c14c:	adc    BYTE PTR [ecx+0x8],dl
  41c14f:	(bad)  
  41c150:	push   ds
  41c151:	jae    0x41c17a
  41c153:	cwde   
  41c154:	push   eax
  41c155:	dec    ecx
  41c156:	sub    DWORD PTR [edx],eax
  41c158:	fdiv   QWORD PTR [eax+0x26]
  41c15b:	dec    esp
  41c15c:	pop    edi
  41c15d:	xchg   edx,eax
  41c15e:	jp     0x41c158
  41c160:	data16 adc al,0x8a
  41c163:	pop    eax
  41c164:	cmp    esp,DWORD PTR [ebp+0x200ff340]
  41c16a:	call   0x1b40:0x531d37b8
  41c171:	fwait
  41c172:	xchg   esp,eax
  41c173:	imul   esp,DWORD PTR [eax],0xde7ac0d9
  41c179:	icebp  
  41c17a:	fsubr  QWORD PTR [edi-0x44]
  41c17d:	in     al,dx
  41c17e:	jo     0x41c191
  41c180:	adc    al,0xf3
  41c182:	(bad)  
  41c183:	push   ds
  41c184:	push   ebx
  41c185:	mov    ds:0xe3c2d4d6,al
  41c18a:	nop
  41c18b:	jmp    0x4632:0xdf741a67
  41c192:	push   ebx
  41c193:	out    0xb0,eax
  41c195:	rcl    BYTE PTR [eax+eiz*4+0x3c],cl
  41c199:	ficomp DWORD PTR [eax-0x19]
  41c19c:	push   ds
  41c19d:	iret   
  41c19e:	ss test eax,0x327ffe4
  41c1a4:	aas    
  41c1a5:	sti    
  41c1a6:	shr    DWORD PTR [ebx],1
  41c1a8:	mov    edx,0xf3c81a08
  41c1ad:	jb     0x41c1b1
  41c1af:	xchg   ecx,eax
  41c1b0:	or     ecx,DWORD PTR [esi+ebx*4-0x3c9a7b40]
  41c1b7:	pop    esi
  41c1b8:	nop    DWORD PTR [edi+ecx*4]
  41c1bc:	adc    BYTE PTR [ebp+0x59],ch
  41c1bf:	dec    esp
  41c1c0:	add    DWORD PTR [ecx+edi*4],edx
  41c1c3:	mov    WORD PTR [ebx-0x1db40bc3],es
  41c1c9:	arpl   WORD PTR [edi-0x9],di
  41c1cc:	jl     0x41c170
  41c1ce:	sub    al,0x79
  41c1d0:	in     al,0x37
  41c1d2:	imul   ebp,DWORD PTR [eax-0x1af7f5f1],0x1c862aac
  41c1dc:	or     ebx,DWORD PTR [ecx-0x765a29c9]
  41c1e2:	(bad)  
  41c1e4:	leave  
  41c1e5:	jnp    0x41c266
  41c1e7:	jmp    DWORD PTR [ebp-0x5cbde20f]
  41c1ed:	pop    edx
  41c1ee:	imul   esi,DWORD PTR [eax+0x182b77fe],0xf1944394
  41c1f8:	pop    edi
  41c1f9:	dec    ebp
  41c1fa:	mov    dl,ch
  41c1fc:	sahf   
  41c1fd:	cmp    DWORD PTR [eax-0x21],eax
  41c200:	adc    BYTE PTR [eax-0x36ac2285],bh
  41c206:	fsubr  st,st(4)
  41c208:	dec    esp
  41c209:	je     0x41c1c3
  41c20b:	shr    DWORD PTR [esi-0x21],cl
  41c20e:	lock push ebx
  41c210:	cmc    
  41c211:	mov    eax,0xa26ea9f9
  41c216:	les    ebx,FWORD PTR [edx+0x6]
  41c219:	repz and al,0xf6
  41c21c:	sbb    BYTE PTR ds:0xaf00af88,ah
  41c222:	loop   0x41c25f
  41c224:	fisub  DWORD PTR [eax+edi*8+0x25]
  41c228:	je     0x41c27f
  41c22a:	mov    esp,0xe892a6d1
  41c22f:	ins    BYTE PTR es:[edi],dx
  41c230:	or     BYTE PTR [ebp+0x63],0x2d
  41c234:	lahf   
  41c235:	jmp    DWORD PTR [edi]
  41c237:	dec    ebx
  41c238:	push   ebx
  41c239:	sub    bl,BYTE PTR [esi+0x30]
  41c23c:	aad    0xfb
  41c23e:	add    edx,DWORD PTR [eax+0x49fa8793]
  41c244:	pop    ss
  41c245:	jae    0x41c2be
  41c247:	mov    ecx,0xa795e57c
  41c24c:	fild   DWORD PTR [esp+ebp*1]
  41c24f:	mov    BYTE PTR ds:0xb32261f6,0xa8
  41c256:	js     0x41c243
  41c258:	or     al,0xab
  41c25a:	sbb    BYTE PTR [ebp+0x39],0x35
  41c25e:	or     eax,0x3a8e3b7b
  41c263:	fidivr DWORD PTR [eax+0x55]
  41c266:	or     al,0xfc
  41c268:	add    al,0x9d
  41c26a:	je     0x41c2e1
  41c26c:	scas   eax,DWORD PTR es:[edi]
  41c26d:	mul    DWORD PTR [esi]
  41c26f:	lahf   
  41c270:	stos   DWORD PTR es:[edi],eax
  41c271:	outs   dx,DWORD PTR ds:[esi]
  41c272:	(bad)  
  41c273:	push   ss
  41c274:	das    
  41c275:	outs   dx,DWORD PTR ds:[esi]
  41c276:	dec    edx
  41c277:	bound  ecx,QWORD PTR [ecx-0x16867794]
  41c27d:	cmp    BYTE PTR [ebx-0x79bb5692],ch
  41c283:	nop
  41c284:	jecxz  0x41c2bc
  41c286:	rcr    DWORD PTR [ebp-0xe9ed42b],1
  41c28c:	push   es
  41c28d:	adc    ebx,DWORD PTR [ebp-0x3b]
  41c290:	stos   DWORD PTR es:[edi],eax
  41c291:	ret    0xf1ec
  41c294:	mov    dh,0x93
  41c296:	jl     0x41c248
  41c298:	or     BYTE PTR [esi+0x24b27937],dl
  41c29e:	fidiv  WORD PTR [edx]
  41c2a0:	mov    gs,WORD PTR [ecx-0x47]
  41c2a3:	aad    0xa7
  41c2a5:	and    dh,BYTE PTR ss:[eax-0x7e9f8b43]
  41c2ac:	or     DWORD PTR [edx-0x61],ebx
  41c2af:	inc    ebx
  41c2b0:	xchg   esi,eax
  41c2b1:	ds je  0x41c28f
  41c2b4:	sti    
  41c2b5:	arpl   WORD PTR [ebx+0x3a076e11],di
  41c2bb:	out    0x89,al
  41c2bd:	sbb    cl,BYTE PTR [edx-0x43d4d90a]
  41c2c3:	pop    ds
  41c2c4:	jns    0x41c2c8
  41c2c6:	or     eax,0xb95cb07e
  41c2cb:	clc    
  41c2cc:	rol    DWORD PTR [ebx-0x6d],0x6e
  41c2d0:	lds    ebx,FWORD PTR [ebx+edx*4+0x6a]
  41c2d4:	or     al,0xca
  41c2d6:	push   ss
  41c2d7:	(bad)  
  41c2d8:	into   
  41c2d9:	sahf   
  41c2da:	aad    0x36
  41c2dc:	pop    ecx
  41c2dd:	cmp    esp,DWORD PTR [edi+0x266c25b]
  41c2e3:	int3   
  41c2e4:	in     al,0xdc
  41c2e6:	hlt    
  41c2e7:	cmp    al,0xed
  41c2e9:	je     0x41c332
  41c2eb:	shr    BYTE PTR [ecx+0x4a],1
  41c2ee:	fisubr DWORD PTR [edi]
  41c2f0:	mov    ds:0x2b0d54f7,eax
  41c2f5:	arpl   di,dx
  41c2f7:	or     BYTE PTR [edx+0x21],ah
  41c2fa:	sbb    ecx,DWORD PTR [edx-0x6b]
  41c2fd:	ja     0x41c28a
  41c2ff:	stos   DWORD PTR es:[edi],eax
  41c300:	cmp    BYTE PTR [esp+ecx*1],0x7d
  41c304:	sbb    edi,DWORD PTR [ebx]
  41c306:	push   0x4f
  41c308:	jecxz  0x41c322
  41c30a:	mov    edi,0x932317a9
  41c30f:	sti    
  41c310:	iret   
  41c311:	pop    ds
  41c312:	in     al,dx
  41c313:	mov    ?,WORD PTR [esi-0x57]
  41c316:	stos   BYTE PTR es:[edi],al
  41c317:	std    
  41c318:	or     DWORD PTR [ecx+0x45],ecx
  41c31b:	aaa    
  41c31c:	jo     0x41c2eb
  41c31e:	xlat   BYTE PTR ds:[ebx]
  41c31f:	sbb    al,0x22
  41c321:	addr16 push 0x637d4350
  41c327:	and    bl,BYTE PTR [edx+0x5ac68282]
  41c32d:	ficomp WORD PTR [ecx]
  41c32f:	ret    0xa027
  41c332:	js     0x41c2dc
  41c334:	out    0x87,al
  41c336:	sub    BYTE PTR [ecx],0x68
  41c339:	xor    BYTE PTR [esi],bh
  41c33b:	push   edi
  41c33c:	outs   dx,DWORD PTR ds:[esi]
  41c33d:	sbb    cl,BYTE PTR [edi-0x324f250c]
  41c343:	(bad)  
  41c344:	jle    0x41c3ab
  41c346:	dec    BYTE PTR [edi]
  41c348:	pop    esi
  41c349:	jecxz  0x41c370
  41c34b:	je     0x41c2e2
  41c34d:	sbb    ecx,ebp
  41c34f:	ret    0x9c06
  41c352:	cmp    BYTE PTR [edx],dl
  41c354:	push   eax
  41c355:	shr    BYTE PTR [ebp-0x36],1
  41c358:	add    edx,esp
  41c35a:	dec    ecx
  41c35b:	lods   eax,DWORD PTR ds:[esi]
  41c35c:	xchg   BYTE PTR [eax],bl
  41c35e:	and    BYTE PTR [ebp+0x40c3c7af],al
  41c364:	ret    
  41c365:	pusha  
  41c366:	xchg   edi,eax
  41c367:	scas   eax,DWORD PTR es:[edi]
  41c368:	fdivr  DWORD PTR [eax-0x65]
  41c36b:	jmp    0x41c311
  41c36d:	inc    ebx
  41c36e:	loope  0x41c3d1
  41c370:	and    eax,0x5e44d052
  41c375:	inc    edi
  41c376:	int3   
  41c377:	outs   dx,DWORD PTR ds:[esi]
  41c378:	bound  esp,QWORD PTR [edx+0x105a5d8f]
  41c37e:	push   esi
  41c37f:	sbb    al,0xe7
  41c381:	jne    0x41c383
  41c383:	rcl    BYTE PTR [eax],cl
  41c385:	stos   BYTE PTR es:[edi],al
  41c386:	xor    BYTE PTR [ecx-0xc1f575b],ah
  41c38c:	std    
  41c38d:	int    0xb8
  41c38f:	lods   eax,DWORD PTR ds:[esi]
  41c390:	sbb    al,0xb
  41c392:	and    BYTE PTR [ecx+0x700d48a7],ch
  41c398:	or     eax,0xf02d8f61
  41c39d:	fcomp  QWORD PTR [eax*1-0x46f15a82]
  41c3a4:	repz dec ecx
  41c3a6:	cld    
  41c3a7:	rol    DWORD PTR ss:[edi-0x14],cl
  41c3ab:	mov    al,0xc9
  41c3ad:	stos   WORD PTR es:[edi],ax
  41c3af:	ss leave 
  41c3b1:	add    eax,0x3a794648
  41c3b6:	xor    DWORD PTR ds:0x81254caf,edx
  41c3bc:	js     0x41c380
  41c3be:	(bad)  
  41c3bf:	aam    0x3d
  41c3c1:	mov    esp,0x7558e888
  41c3c6:	es js  0x41c404
  41c3c9:	shr    DWORD PTR [edx-0x7588699d],cl
  41c3cf:	fmul   QWORD PTR [ebp-0x3c]
  41c3d2:	add    ecx,DWORD PTR [ebx]
  41c3d4:	cmp    al,0x51
  41c3d6:	ins    BYTE PTR es:[edi],dx
  41c3d7:	dec    ecx
  41c3d8:	jb     0x41c370
  41c3da:	rol    DWORD PTR [edx],1
  41c3dc:	cmp    eax,0x44a5a4ef
  41c3e1:	or     ebp,DWORD PTR [edi+0x5a]
  41c3e4:	sub    al,0x44
  41c3e6:	xchg   esp,eax
  41c3e7:	mov    eax,0x2317a428
  41c3ec:	push   eax
  41c3ed:	mov    eax,ds:0xa9a1a726
  41c3f2:	push   ss
  41c3f3:	mov    ds:0xd42d032f,eax
  41c3f8:	jne    0x41c46a
  41c3fa:	mov    es:0x7160e61b,al
  41c400:	inc    esi
  41c401:	sub    al,0x1b
  41c403:	jo     0x41c473
  41c405:	into   
  41c406:	fdivr  QWORD PTR [ebx+ebp*2]
  41c409:	pop    esi
  41c40a:	mov    al,ds:0x62088446
  41c40f:	sar    edx,cl
  41c411:	mov    esi,0x78a1073e
  41c416:	outs   dx,BYTE PTR ds:[esi]
  41c417:	push   ss
  41c418:	add    dl,cl
  41c41a:	pusha  
  41c41b:	cmp    ebx,DWORD PTR [ebx]
  41c41d:	fadd   DWORD PTR [esp+ecx*2+0x74]
  41c421:	adc    DWORD PTR [esi],ebx
  41c423:	(bad)  
  41c424:	cli    
  41c425:	retf   0xa646
  41c428:	cmp    eax,0xa734013d
  41c42d:	es xor esp,esi
  41c430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c431:	les    esp,FWORD PTR [ebp+0x77a5cb81]
  41c437:	pop    es
  41c438:	int    0x6d
  41c43a:	push   ebx
  41c43b:	out    0x27,eax
  41c43d:	cwde   
  41c43e:	jmp    0xfcaa6046
  41c443:	loopne 0x41c481
  41c445:	jne    0x41c4a1
  41c447:	push   es
  41c448:	fidivr WORD PTR [esi]
  41c44a:	lods   eax,DWORD PTR ds:[esi]
  41c44b:	jecxz  0x41c418
  41c44d:	fistp  QWORD PTR [ecx-0x36]
  41c450:	test   al,0x8c
  41c452:	add    dh,BYTE PTR [esi]
  41c454:	or     al,0xcd
  41c456:	mov    bh,0x2a
  41c458:	popf   
  41c459:	xor    eax,0x78815287
  41c45e:	in     eax,0x6f
  41c460:	xchg   dh,dl
  41c462:	outs   dx,BYTE PTR ds:[esi]
  41c463:	xchg   DWORD PTR [ebx+0x6f],ebx
  41c466:	jl     0x41c4c1
  41c468:	mov    al,0xbb
  41c46a:	loopne 0x41c469
  41c46c:	push   0x5d
  41c46e:	xchg   esp,eax
  41c46f:	lahf   
  41c470:	push   edx
  41c471:	xchg   esp,eax
  41c472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c473:	ficomp WORD PTR [ebp+0x64]
  41c476:	mov    ds:0xa30d856a,al
  41c47b:	test   al,0x15
  41c47d:	popa   
  41c47e:	mov    ah,0xdb
  41c480:	jle    0x41c4c3
  41c482:	or     eax,0x89bd8c16
  41c487:	ud1    edx,edx
  41c48a:	jmp    0xf4394780
  41c48f:	cmc    
  41c490:	mov    esi,0x72202fe7
  41c495:	or     al,al
  41c497:	push   ss
  41c498:	das    
  41c499:	sbb    ebx,DWORD PTR [ecx+edx*8+0x52388a5b]
  41c4a0:	inc    ecx
  41c4a1:	loope  0x41c458
  41c4a3:	sub    ax,0x5b0e
  41c4a7:	out    dx,al
  41c4a8:	xchg   esp,eax
  41c4a9:	std    
  41c4aa:	add    DWORD PTR [ebp+0x2c295d1b],ecx
  41c4b0:	ds inc edx
  41c4b2:	aad    0xbd
  41c4b4:	sub    al,0x9d
  41c4b6:	in     eax,dx
  41c4b7:	scas   al,BYTE PTR es:[edi]
  41c4b8:	mov    esp,0xc7e62172
  41c4bd:	imul   ecx,DWORD PTR [ecx+0x68c9ea],0x1fbdc474
  41c4c7:	shl    BYTE PTR [ebx-0x4c],cl
  41c4ca:	cmp    eax,0x9c6c56cd
  41c4cf:	ja     0x41c527
  41c4d1:	cmp    ebx,DWORD PTR [ecx]
  41c4d3:	mov    ecx,eax
  41c4d5:	and    al,BYTE PTR [ebx-0x3d942711]
  41c4db:	jo     0x41c467
  41c4dd:	in     eax,0x7d
  41c4df:	fs adc eax,0x680c83
  41c4e5:	inc    esp
  41c4e6:	push   eax
  41c4e7:	mov    cl,0x97
  41c4e9:	adc    ebx,DWORD PTR [ebx+0x30e8dafe]
  41c4ef:	adc    al,0x82
  41c4f1:	xlat   BYTE PTR ds:[ebx]
  41c4f2:	sbb    al,0xb6
  41c4f4:	ss cld 
  41c4f6:	lahf   
  41c4f7:	int    0x54
  41c4f9:	adc    ch,cl
  41c4fb:	rol    DWORD PTR [edx],1
  41c4fd:	sbb    DWORD PTR [edx],0x28bc30be
  41c503:	outs   dx,DWORD PTR ds:[esi]
  41c504:	sub    ah,ch
  41c506:	(bad)  
  41c507:	sbb    bl,BYTE PTR [esi+edi*4-0xe122664]
  41c50e:	outs   dx,BYTE PTR ds:[esi]
  41c50f:	cmp    ch,dh
  41c511:	in     al,0x10
  41c513:	daa    
  41c514:	bound  ebp,QWORD PTR [eax]
  41c516:	pop    ebp
  41c517:	loope  0x41c55e
  41c519:	arpl   WORD PTR [edx],bp
  41c51b:	call   0xdaa7:0xfb159fd
  41c522:	pop    eax
  41c523:	(bad)  
  41c524:	(bad)  
  41c525:	in     al,dx
  41c526:	mov    eax,ds:0x15ca1587
  41c52b:	jo     0x41c4e2
  41c52d:	mov    ch,0x64
  41c52f:	adc    ch,dl
  41c531:	sub    edx,DWORD PTR [edx+0xadf68cc]
  41c537:	mov    ecx,0x44af537e
  41c53c:	xchg   ecx,eax
  41c53d:	out    0x8a,eax
  41c53f:	rcr    DWORD PTR [eax+0xd],0xa
  41c543:	ja     0x41c55e
  41c545:	clc    
  41c546:	dec    bl
  41c548:	sub    ah,BYTE PTR [edi-0x1]
  41c54b:	pop    eax
  41c54c:	add    al,BYTE PTR [esi-0x38]
  41c54f:	mov    ebx,0xc3aa2917
  41c554:	cmc    
  41c555:	dec    eax
  41c556:	push   ebp
  41c557:	jge    0x41c5c8
  41c559:	push   ebp
  41c55a:	jge    0x41c4f1
  41c55c:	into   
  41c55d:	sbb    BYTE PTR [ecx-0x222a4a9d],dl
  41c563:	in     al,dx
  41c564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c565:	mov    cl,0x73
  41c567:	aad    0xe6
  41c569:	out    dx,al
  41c56a:	jne    0x41c5e4
  41c56c:	call   0x1e00:0x147c7591
  41c573:	adc    DWORD PTR [ecx],edx
  41c575:	mov    al,ds:0x91d8196c
  41c57a:	shr    BYTE PTR [edx+0x23],0xe8
  41c57e:	cmp    al,0x2e
  41c580:	pop    eax
  41c581:	mov    dh,0x2b
  41c583:	push   ss
  41c584:	fadd   DWORD PTR [edi+0x5ccf0687]
  41c58a:	retf   0xca15
  41c58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c58e:	mov    edx,0xba7498d9
  41c593:	(bad)  
  41c595:	and    al,0x8b
  41c597:	aas    
  41c598:	out    dx,al
  41c599:	push   ecx
  41c59a:	lds    edi,FWORD PTR [ecx-0x37]
  41c59d:	jl     0x41c58f
  41c59f:	or     eax,0x6ab975a2
  41c5a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a5:	in     al,0xfb
  41c5a7:	mov    ebx,eax
  41c5a9:	mov    edi,0xdf92196a
  41c5ae:	pop    esi
  41c5af:	cmp    DWORD PTR [edx],eax
  41c5b1:	aaa    
  41c5b2:	sub    eax,0x42733290
  41c5b7:	cs pop esp
  41c5b9:	or     eax,ebx
  41c5bb:	and    ebx,ecx
  41c5bd:	aas    
  41c5be:	sub    ebp,DWORD PTR [edi]
  41c5c0:	dec    edi
  41c5c1:	xor    DWORD PTR [eax],ebp
  41c5c3:	jbe    0x41c5b9
  41c5c5:	frstor [esp+eax*2+0x1d64df2d]
  41c5cc:	in     eax,dx
  41c5cd:	addr16 dec edx
  41c5cf:	push   ss
  41c5d0:	retf   0xd04e
  41c5d3:	rol    DWORD PTR [esi+0x42],0x75
  41c5d7:	jns    0x41c607
  41c5d9:	sub    al,0x40
  41c5db:	xor    DWORD PTR [ebx],0x98279eec
  41c5e1:	cld    
  41c5e2:	scas   eax,DWORD PTR es:[edi]
  41c5e3:	out    0x9b,al
  41c5e5:	(bad)  
  41c5e6:	jo     0x41c59f
  41c5e8:	mov    eax,DWORD PTR [ecx]
  41c5ea:	and    al,0x59
  41c5ec:	jge    0x41c61b
  41c5ee:	mov    eax,ds:0x528082f5
  41c5f3:	push   ebp
  41c5f4:	mov    edx,0x841cd373
  41c5f9:	mov    esi,0xdafbb5f8
  41c5fe:	aaa    
  41c5ff:	je     0x41c60d
  41c601:	inc    eax
  41c602:	cmp    DWORD PTR [ebp-0x3e],eax
  41c605:	xchg   DWORD PTR [edx-0x5b32f76d],edx
  41c60b:	mov    edi,0x18044cf3
  41c610:	sbb    esp,ebx
  41c612:	std    
  41c613:	or     al,dh
  41c615:	mov    dh,bl
  41c617:	lods   al,BYTE PTR ds:[esi]
  41c618:	les    ebp,FWORD PTR [ebp+0x65]
  41c61b:	and    eax,0x5be2667c
  41c620:	lods   eax,DWORD PTR ds:[esi]
  41c621:	loopne 0x41c5eb
  41c623:	test   edx,eax
  41c625:	pop    ebx
  41c626:	xchg   edx,eax
  41c627:	popa   
  41c628:	pop    eax
  41c629:	call   FWORD PTR [edi]
  41c62b:	arpl   ax,cx
  41c62d:	imul   BYTE PTR [edx+eax*4-0x3c58caee]
  41c634:	icebp  
  41c635:	push   0xbb30df8f
  41c63a:	jp     0x41c669
  41c63c:	fld    TBYTE PTR [edx+0x5d82d924]
  41c642:	pusha  
  41c643:	mov    ds:0x2c6d41cf,al
  41c648:	jecxz  0x41c61b
  41c64a:	jg     0x41c632
  41c64c:	sahf   
  41c64d:	retf   
  41c64e:	xor    BYTE PTR [eax],dl
  41c650:	inc    bx
  41c652:	dec    eax
  41c653:	lds    edx,FWORD PTR [edx+0x67]
  41c656:	stos   BYTE PTR es:[edi],al
  41c657:	mov    DWORD PTR [edi-0x7e6a3ccd],esp
  41c65d:	mov    bh,0xd0
  41c65f:	retf   0x6b63
  41c662:	jmp    0x32a1:0x2938cb78
  41c669:	lods   al,BYTE PTR ds:[esi]
  41c66a:	mov    edx,eax
  41c66c:	cmp    al,0xa7
  41c66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66f:	sub    cl,BYTE PTR [edx]
  41c671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c672:	add    edi,edx
  41c674:	shl    BYTE PTR [edx+0x629bc216],0x10
  41c67b:	mov    WORD PTR ds:0x742573cd,ss
  41c681:	lock pop ebp
  41c683:	xchg   ebx,eax
  41c684:	fcmovu st,st(5)
  41c686:	xor    ecx,ebx
  41c688:	rcl    ah,0x41
  41c68b:	out    0xb3,eax
  41c68d:	scas   eax,DWORD PTR es:[edi]
  41c68e:	push   0xb
  41c690:	jbe    0x41c6d8
  41c692:	data16 rcl BYTE PTR [ecx+edx*8+0x535bf4ed],1
  41c69a:	xchg   BYTE PTR ds:0x861450fe,ah
  41c6a0:	push   0x67
  41c6a2:	fld    st(0)
  41c6a4:	shl    DWORD PTR [edx+ecx*2],cl
  41c6a7:	and    esi,DWORD PTR [edi+0x46]
  41c6aa:	add    edx,ebp
  41c6ac:	add    al,0xca
  41c6ae:	mov    esi,DWORD PTR [ebp*1+0x7e3e875d]
  41c6b5:	out    dx,eax
  41c6b6:	daa    
  41c6b7:	mov    ds:0xa10dc91a,al
  41c6bc:	xor    al,0x19
  41c6be:	loopne 0x41c715
  41c6c0:	(bad)  
  41c6c1:	into   
  41c6c2:	sub    eax,0xb5c86624
  41c6c7:	mov    ds:0x5e66fe6e,eax
  41c6cc:	inc    ebx
  41c6cd:	mov    cl,0x81
  41c6cf:	mov    DWORD PTR [esi+0x62f08212],ebp
  41c6d5:	popf   
  41c6d6:	push   ecx
  41c6d7:	xchg   edi,eax
  41c6d8:	push   edi
  41c6d9:	cmp    BYTE PTR [ecx+0x3d9fc9d2],bh
  41c6df:	push   ss
  41c6e0:	into   
  41c6e1:	fcom   QWORD PTR [ebx]
  41c6e3:	inc    edi
  41c6e4:	mov    al,ds:0xc8f87eff
  41c6e9:	out    0xb8,eax
  41c6eb:	dec    esp
  41c6ec:	mov    esp,0x3e02e832
  41c6f1:	add    eax,0xd6803f96
  41c6f6:	shr    BYTE PTR ds:0xfe8dadc4,0xf1
  41c6fd:	and    esi,eax
  41c6ff:	or     DWORD PTR [ebx-0x56],edx
  41c702:	retf   
  41c703:	mov    esi,0x49ad1fde
  41c708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c709:	pop    edx
  41c70a:	xor    dl,cl
  41c70c:	jle    0x41c6ad
  41c70e:	fld    TBYTE PTR [esi+edi*2-0xe6973d4]
  41c715:	inc    ecx
  41c716:	mov    ebx,edi
  41c718:	jl     0x41c6c9
  41c71a:	adc    al,BYTE PTR [eax-0x3c]
  41c71d:	mov    al,ds:0xd2d9edc3
  41c722:	out    dx,al
  41c723:	xchg   edi,eax
  41c724:	outs   dx,BYTE PTR ds:[esi]
  41c725:	call   0xff38:0x3d5b31b8
  41c72c:	push   ss
  41c72d:	xor    bh,BYTE PTR [ebx]
  41c72f:	pop    ss
  41c730:	div    BYTE PTR [esp+ecx*1]
  41c733:	arpl   dx,bp
  41c735:	sbb    DWORD PTR [edi-0x1b81f4fc],edx
  41c73b:	imul   BYTE PTR [edi+eiz*4+0x4]
  41c73f:	mov    edx,0x29d1ad9d
  41c744:	ds pop esp
  41c746:	cmc    
  41c747:	loopne 0x41c72b
  41c749:	xor    edx,esi
  41c74b:	or     eax,0xd7efaaaf
  41c750:	pop    ebp
  41c751:	xor    DWORD PTR [eax],ebx
  41c753:	shl    BYTE PTR [ebx*2+0x11e3bd41],0xa8
  41c75b:	imul   edi,ecx,0x9ee2d9a5
  41c761:	leave  
  41c762:	push   cs
  41c763:	xor    al,0x48
  41c765:	rcl    DWORD PTR [edx+eax*8-0xed6fcd0],0xb6
  41c76d:	jecxz  0x41c7b7
  41c76f:	jmp    0x41c76b
  41c771:	xor    DWORD PTR [ecx+0x5f],0xffffffcc
  41c775:	cwde   
  41c776:	ficomp WORD PTR [eax]
  41c778:	push   cs
  41c779:	enter  0xf79c,0x12
  41c77d:	test   eax,0xf358108f
  41c783:	pop    esi
  41c784:	in     al,dx
  41c785:	xor    BYTE PTR [eax],ch
  41c787:	ins    DWORD PTR es:[edi],dx
  41c788:	pcmpgtd mm0,QWORD PTR [eax+0x71]
  41c78c:	mov    ebx,0x54e89314
  41c791:	and    eax,0x75b1d7a3
  41c796:	outs   dx,DWORD PTR ds:[esi]
  41c797:	xchg   eax,ecx
  41c799:	out    0x6e,eax
  41c79b:	mov    ch,0x67
  41c79d:	imul   ebp,DWORD PTR [esi],0x6
  41c7a0:	lahf   
  41c7a1:	fwait
  41c7a2:	rcl    DWORD PTR [ebp+ebx*2-0x39845ade],cl
  41c7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7aa:	jnp    0x41c744
  41c7ac:	mov    ch,0xcb
  41c7ae:	push   eax
  41c7af:	cmc    
  41c7b0:	retf   
  41c7b1:	add    al,0x55
  41c7b3:	pop    ecx
  41c7b4:	push   esi
  41c7b5:	lahf   
  41c7b6:	sbb    eax,ecx
  41c7b8:	(bad)  [eax+0x27d448e2]
  41c7be:	jne    0x41c831
  41c7c0:	pusha  
  41c7c1:	add    al,0x30
  41c7c3:	sti    
  41c7c4:	push   ss
  41c7c5:	xchg   esi,eax
  41c7c6:	push   eax
  41c7c7:	daa    
  41c7c8:	add    esp,DWORD PTR [edi-0x1e]
  41c7cb:	xchg   edi,eax
  41c7cc:	pop    edx
  41c7cd:	gs inc edx
  41c7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d0:	fisubr WORD PTR [ebx]
  41c7d2:	jecxz  0x41c760
  41c7d4:	and    esi,DWORD PTR [ebp-0x2f]
  41c7d7:	arpl   WORD PTR [ebx+0x7c],cx
  41c7da:	xchg   ebx,eax
  41c7db:	test   DWORD PTR [edx],ebp
  41c7dd:	(bad)  
  41c7de:	jno    0x41c7eb
  41c7e0:	enter  0x9ec,0x54
  41c7e4:	jo     0x41c842
  41c7e6:	mov    eax,ds:0xfede4274
  41c7eb:	sub    al,0x4a
  41c7ed:	iret   
  41c7ee:	sbb    al,0xfd
  41c7f0:	mov    ah,0xef
  41c7f2:	sub    DWORD PTR [ebp+0x149bd789],0xe8e92976
  41c7fc:	(bad)  
  41c7fd:	loope  0x41c7f6
  41c7ff:	(bad)  
  41c800:	pop    edi
  41c801:	mov    al,ds:0x5e9b1a57
  41c806:	ret    
  41c807:	aam    0xf1
  41c809:	jg     0x41c84b
  41c80b:	sbb    BYTE PTR [ecx+ebx*4+0xf95baec],al
  41c812:	(bad)  
  41c814:	out    0x53,al
  41c816:	pop    edi
  41c817:	dec    esi
  41c818:	pop    edi
  41c819:	out    dx,eax
  41c81a:	and    BYTE PTR [eax-0x4ba41086],ch
  41c820:	xchg   edx,eax
  41c821:	mov    bl,0xf9
  41c823:	adc    DWORD PTR [edx-0x22868cf4],ebx
  41c829:	aaa    
  41c82a:	test   eax,0x26a7e6
  41c82f:	xchg   DWORD PTR [ebx],eax
  41c831:	ja     0x41c867
  41c833:	and    ah,BYTE PTR [eax+0x3dc22453]
  41c839:	xor    DWORD PTR [ebx-0x5c246297],edi
  41c83f:	jae    0x41c814
  41c841:	hlt    
  41c842:	ret    0xfd6c
  41c845:	ins    BYTE PTR es:[edi],dx
  41c846:	arpl   WORD PTR [ebp-0x6e8ed81e],bx
  41c84c:	cwde   
  41c84d:	sbb    dl,ah
  41c84f:	push   eax
  41c850:	push   ds
  41c851:	ret    0x7e23
  41c854:	mov    esi,0x4bb9c37d
  41c859:	sbb    ecx,esi
  41c85b:	dec    edi
  41c85c:	retf   0x5e18
  41c85f:	ss jbe 0x41c805
  41c862:	mov    ecx,0x3ed4949a
  41c867:	fcomp  DWORD PTR [eax]
  41c869:	mov    esp,0x8a13ec5b
  41c86e:	popf   
  41c86f:	jp     0x41c8bb
  41c871:	(bad)  
  41c872:	cmp    DWORD PTR [edx],esp
  41c874:	inc    edx
  41c875:	mul    DWORD PTR [ebp-0x1497ac97]
  41c87b:	fistp  QWORD PTR [ebp+0x6e]
  41c87e:	mul    DWORD PTR [eax-0x59933e9c]
  41c884:	jo     0x41c85f
  41c886:	pop    ds
  41c887:	push   edx
  41c888:	icebp  
  41c889:	test   eax,0x39b2a908
  41c88e:	scas   al,BYTE PTR es:[edi]
  41c88f:	xor    bl,al
  41c891:	push   cs
  41c892:	or     al,0x6f
  41c894:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c897:	xchg   esp,eax
  41c898:	dec    eax
  41c899:	dec    eax
  41c89a:	push   ebx
  41c89b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c89c:	jo     0x41c8cd
  41c89e:	out    0x22,eax
  41c8a0:	fld    QWORD PTR [edx-0x7c7d76fc]
  41c8a6:	cmc    
  41c8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8a8:	data16 mov al,0x6a
  41c8ab:	cmp    al,0x61
  41c8ad:	popf   
  41c8ae:	ret    
  41c8af:	jae    0x41c8fc
  41c8b1:	xlat   BYTE PTR ds:[ebx]
  41c8b2:	sub    al,0xf0
  41c8b4:	xchg   esi,eax
  41c8b5:	mov    WORD PTR [edx+0x2f],es
  41c8b8:	cmp    eax,0xff0a824d
  41c8bd:	(bad)  
  41c8be:	es data16 mov ah,0x8f
  41c8c2:	cmp    ah,BYTE PTR [esi-0x54]
  41c8c5:	or     eax,0xfff81a2b
  41c8ca:	sub    al,0x43
  41c8cc:	xchg   BYTE PTR [ebp+0x79ef3727],al
  41c8d2:	and    ah,BYTE PTR [esi]
  41c8d4:	test   eax,0x916d5d5b
  41c8d9:	inc    ecx
  41c8da:	mov    al,0x43
  41c8dc:	dec    eax
  41c8dd:	xchg   esp,eax
  41c8de:	loop   0x41c950
  41c8e0:	call   0xed3f7d71
  41c8e5:	test   BYTE PTR ds:0x7574485b,0xe5
  41c8ec:	int3   
  41c8ed:	call   0x5add:0x3401db20
  41c8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f5:	retf   
  41c8f6:	fdiv   QWORD PTR [eax]
  41c8f8:	push   ecx
  41c8f9:	ja     0x41c8fa
  41c8fb:	daa    
  41c8fc:	ins    BYTE PTR es:[edi],dx
  41c8fd:	in     al,dx
  41c8fe:	xchg   esi,edi
  41c900:	mov    fs,WORD PTR [eax-0x78dacdad]
  41c906:	pop    ebp
  41c907:	lds    ebp,FWORD PTR [esi+esi*1-0x52]
  41c90b:	nop
  41c90c:	aas    
  41c90d:	pop    ds
  41c90e:	mov    esi,0x3ecab0ea
  41c913:	(bad)  
  41c915:	push   ebp
  41c916:	js     0x41c8fd
  41c918:	add    DWORD PTR [edx-0x3ac88cdb],edi
  41c91e:	ja     0x41c8f8
  41c920:	xchg   esi,eax
  41c921:	mov    ds:0x257080e8,al
  41c926:	mov    bl,0xa2
  41c928:	sbb    esi,DWORD PTR [ebp+0x5e1e974a]
  41c92e:	mov    ch,0xc2
  41c930:	add    BYTE PTR [esi],al
  41c932:	dec    edx
  41c933:	push   esi
  41c934:	sub    eax,0xd6632651
  41c939:	or     al,ah
  41c93b:	add    BYTE PTR [esi+eax*4+0x4f],cl
  41c93f:	ds cmp eax,0x40ced0d3
  41c945:	add    BYTE PTR [ebp+0x38],dl
  41c948:	mov    eax,es
  41c94a:	shr    DWORD PTR [edi+eiz*1-0x3b],1
  41c94e:	inc    edi
  41c94f:	cmp    edi,DWORD PTR [ebx+0xf]
  41c952:	pop    esi
  41c953:	push   edx
  41c954:	mov    BYTE PTR [eax+0x4a4f9147],ah
  41c95a:	ret    
  41c95b:	inc    ecx
  41c95c:	leave  
  41c95d:	imul   eax,DWORD PTR ds:[esi],0xd34bf754
  41c964:	sub    eax,0x378dc2a
  41c969:	and    DWORD PTR [ebp+0x4ae61792],0xffffff9c
  41c970:	test   eax,0x9e109932
  41c975:	jle    0x41c9e6
  41c977:	scas   al,BYTE PTR es:[edi]
  41c978:	xor    bh,ch
  41c97a:	pop    edi
  41c97b:	sbb    cl,BYTE PTR [eax+0x3]
  41c97e:	pop    ebp
  41c97f:	(bad)  
  41c980:	sub    eax,0x86f12659
  41c985:	xor    ebp,DWORD PTR [edx+ecx*4]
  41c988:	inc    edx
  41c989:	enter  0xa7ae,0x60
  41c98d:	aam    0x6d
  41c98f:	cmp    esi,esi
  41c991:	xchg   ebx,eax
  41c992:	push   esi
  41c993:	or     al,0xa0
  41c995:	pop    eax
  41c996:	ins    DWORD PTR es:[edi],dx
  41c997:	loopne 0x41c92e
  41c999:	add    ebx,DWORD PTR [ebx+eiz*1]
  41c99c:	jmp    0x2786cc4f
  41c9a1:	rcr    cl,cl
  41c9a3:	scas   eax,DWORD PTR es:[edi]
  41c9a4:	mov    dl,0xb0
  41c9a6:	scas   eax,DWORD PTR es:[edi]
  41c9a7:	dec    ebx
  41c9a8:	loope  0x41c92c
  41c9aa:	ret    
  41c9ab:	mov    ds:0x9770e033,eax
  41c9b0:	enter  0x49b0,0x22
  41c9b4:	loop   0x41c972
  41c9b6:	mov    al,ds:0xd03c0a5f
  41c9bb:	xchg   edi,eax
  41c9bc:	loope  0x41c955
  41c9be:	or     BYTE PTR [edx-0x3f],dh
  41c9c1:	adc    DWORD PTR [eax+0x46fd01de],esi
  41c9c7:	inc    esi
  41c9c8:	(bad)  
  41c9cc:	(bad)  [ebx+0x50]
  41c9cf:	adc    al,0x45
  41c9d1:	add    ebp,ebx
  41c9d3:	xor    DWORD PTR [ebx+0x15829413],0x61945f79
  41c9dd:	fistp  WORD PTR [esi]
  41c9df:	fs (bad) 
  41c9e1:	jns    0x41ca32
  41c9e3:	inc    esp
  41c9e4:	popa   
  41c9e5:	jmp    FWORD PTR [eax]
  41c9e7:	inc    ebx
  41c9e8:	test   BYTE PTR [esi-0x4791a325],bl
  41c9ee:	dec    ebp
  41c9ef:	retf   0x192
  41c9f2:	inc    esi
  41c9f3:	dec    edx
  41c9f4:	lock addr16 jnp 0x41c9a9
  41c9f8:	inc    ecx
  41c9f9:	mov    edi,?
  41c9fb:	jl     0x41c9bc
  41c9fd:	sahf   
  41c9fe:	lahf   
  41c9ff:	sub    BYTE PTR [ecx+ebp*8],al
  41ca02:	and    dl,BYTE PTR [edx+0x4d022d6b]
  41ca08:	mov    eax,ds:0xad1cc3e9
  41ca0d:	retf   0xfa10
  41ca10:	xor    DWORD PTR ds:[edx-0x61],edi
  41ca14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca15:	(bad)  
  41ca16:	stc    
  41ca17:	mov    bh,0x74
  41ca19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca1a:	std    
  41ca1b:	ds inc ecx
  41ca1d:	dec    ebx
  41ca1e:	popa   
  41ca1f:	mov    esp,edi
  41ca21:	push   esp
  41ca22:	sbb    dl,cl
  41ca24:	mov    al,ds:0x97fbd814
  41ca29:	out    0x4b,al
  41ca2b:	stos   DWORD PTR es:[edi],eax
  41ca2c:	or     al,0x48
  41ca2e:	(bad)  
  41ca2f:	dec    DWORD PTR [eax-0x3f]
  41ca32:	test   DWORD PTR [ecx+0x5],edx
  41ca35:	inc    eax
  41ca36:	(bad)  
  41ca37:	outs   dx,BYTE PTR gs:[esi]
  41ca39:	mov    cl,dl
  41ca3b:	int    0x78
  41ca3d:	push   ecx
  41ca3e:	pushf  
  41ca3f:	xchg   ecx,eax
  41ca40:	cmp    BYTE PTR [ebx+eax*8-0x66],dl
  41ca44:	or     al,0x6f
  41ca46:	lods   eax,DWORD PTR ds:[esi]
  41ca47:	mov    eax,0x7be9778
  41ca4c:	sub    edx,ecx
  41ca4e:	(bad)  
  41ca4f:	xchg   ebp,eax
  41ca50:	push   cs
  41ca51:	and    dl,BYTE PTR [edx-0x52]
  41ca54:	mov    ah,0x26
  41ca56:	sbb    BYTE PTR [ebp-0x70],dh
  41ca59:	jbe    0x41ca6a
  41ca5b:	dec    esp
  41ca5c:	js     0x41c9eb
  41ca5e:	sbb    eax,0x97377763
  41ca63:	pop    es
  41ca64:	enter  0x9279,0xd1
  41ca68:	inc    edi
  41ca69:	push   esp
  41ca6a:	ds aad 0xf
  41ca6d:	loopne 0x41ca64
  41ca6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca70:	jb     0x41ca44
  41ca72:	pop    esp
  41ca73:	js     0x41cacf
  41ca75:	mov    al,0xa8
  41ca77:	add    BYTE PTR [ebx-0x1f],al
  41ca7a:	loop   0x41ca85
  41ca7c:	in     al,dx
  41ca7d:	xor    BYTE PTR cs:[ebx],al
  41ca80:	add    DWORD PTR es:[edi+0x18],esp
  41ca84:	test   ecx,0x87a9b199
  41ca8a:	sbb    DWORD PTR [edx-0x1d620f30],0x6b8c5409
  41ca94:	sub    al,0xc5
  41ca96:	fucomip st,st(7)
  41ca98:	shr    BYTE PTR [ebx-0x531b6cd7],cl
  41ca9e:	adc    BYTE PTR [ebp+0x4a],bl
  41caa1:	mul    DWORD PTR [ebp-0x26889f83]
  41caa7:	rol    BYTE PTR [ebp-0x3b],cl
  41caaa:	(bad)  
  41caab:	push   cs
  41caac:	call   0x4fe36157
  41cab1:	jmp    0x9deb9520
  41cab6:	cld    
  41cab7:	out    dx,eax
  41cab8:	dec    ebp
  41cab9:	mov    eax,ds:0x3d4bb884
  41cabe:	pushf  
  41cabf:	jge    0x41cad1
  41cac1:	inc    eax
  41cac2:	(bad)  
  41cac3:	fstp   QWORD PTR [esi]
  41cac5:	aaa    
  41cac6:	adc    DWORD PTR [ecx],edi
  41cac8:	pusha  
  41cac9:	dec    esp
  41caca:	je     0x41caf1
  41cacc:	lock sbb bl,ah
  41cacf:	call   0xe7c28f6c
  41cad4:	call   0xe0d9f9b
  41cad9:	jecxz  0x41ca92
  41cadb:	sbb    esi,DWORD PTR [edx-0x6d057fb6]
  41cae1:	repnz out 0x46,al
  41cae4:	loope  0x41cad6
  41cae6:	inc    esp
  41cae7:	test   al,0x66
  41cae9:	outs   dx,BYTE PTR ds:[esi]
  41caea:	cmp    BYTE PTR [edi],bl
  41caec:	mov    edx,0x24630139
  41caf1:	jae    0x41ca8c
  41caf3:	mov    al,BYTE PTR [edi]
  41caf5:	xor    esi,0xc83d9503
  41cafb:	lods   eax,DWORD PTR ds:[esi]
  41cafc:	adc    eax,0x3d2cae41
  41cb01:	fbstp  TBYTE PTR [edi+ecx*2-0x498c37fe]
  41cb08:	push   0x2d547612
  41cb0d:	ret    
  41cb0e:	cmp    ah,dh
  41cb10:	sbb    eax,0xa209f8cf
  41cb15:	in     eax,0x19
  41cb17:	pushf  
  41cb18:	pop    ds
  41cb19:	pop    esi
  41cb1a:	inc    ecx
  41cb1b:	ss or  al,0x8f
  41cb1e:	(bad)  
  41cb1f:	test   BYTE PTR [edi+ebp*4],ch
  41cb22:	mov    al,ds:0x1709fd58
  41cb27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb28:	js     0x41cb2d
  41cb2a:	clc    
  41cb2b:	xor    DWORD PTR [ebx+0x39],edi
  41cb2e:	(bad)  
  41cb2f:	out    0xca,al
  41cb31:	sbb    ebx,edi
  41cb33:	(bad)  
  41cb34:	jg     0x41caeb
  41cb36:	std    
  41cb37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb38:	xlat   BYTE PTR ds:[ebx]
  41cb39:	loope  0x41cabb
  41cb3b:	(bad)  
  41cb3c:	cmp    ecx,0x3bcd8b7f
  41cb42:	retf   
  41cb43:	or     esp,DWORD PTR [edx-0x9]
  41cb46:	sahf   
  41cb47:	push   cs
  41cb48:	fisttp QWORD PTR [ecx]
  41cb4a:	outs   dx,DWORD PTR ds:[esi]
  41cb4b:	inc    edx
  41cb4c:	sbb    DWORD PTR [edx-0x70],eax
  41cb4f:	mov    ch,0x8c
  41cb51:	xor    dh,BYTE PTR [edx-0x1d]
  41cb54:	xor    BYTE PTR [ebx-0x42d4d49],dh
  41cb5a:	jmp    0xdce82521
  41cb5f:	sub    bh,BYTE PTR ds:0xc1628ee8
  41cb65:	icebp  
  41cb66:	push   edx
  41cb67:	sar    DWORD PTR [ebp-0x5a],cl
  41cb6a:	ficom  WORD PTR [ecx+0x6a]
  41cb6d:	or     al,0x1f
  41cb6f:	stos   DWORD PTR es:[edi],eax
  41cb70:	pop    eax
  41cb71:	in     al,dx
  41cb72:	outs   dx,DWORD PTR ds:[esi]
  41cb73:	hlt    
  41cb74:	cmp    BYTE PTR [ecx-0x5e66b93],al
  41cb7a:	mov    esi,0x545f6216
  41cb7f:	ja     0x41cb48
  41cb81:	mov    eax,ds:0xbf06624d
  41cb86:	dec    eax
  41cb87:	jno    0x41cb9a
  41cb89:	test   bl,cl
  41cb8b:	adc    bh,BYTE PTR [esi]
  41cb8d:	sbb    ah,BYTE PTR [ebp-0x4d]
  41cb90:	test   eax,0xb95a2bea
  41cb95:	shl    DWORD PTR [ebp-0x62547237],1
  41cb9b:	daa    
  41cb9c:	(bad)  
  41cb9e:	mov    gs,WORD PTR [edi-0x3252d6c]
  41cba4:	dec    edi
  41cba5:	dec    ecx
  41cba6:	adc    esi,ebx
  41cba8:	push   0xfc0a384b
  41cbad:	and    BYTE PTR [ebp+0x78],0x51
  41cbb1:	or     DWORD PTR [edx+0x7d],ebx
  41cbb4:	adc    DWORD PTR [ecx],0xda4b26f1
  41cbba:	mov    bh,0x49
  41cbbc:	ss push edi
  41cbbe:	sub    BYTE PTR [ebx+0x1f468125],0xe7
  41cbc5:	add    eax,0x18212c2f
  41cbca:	nop
  41cbcb:	jecxz  0x41cbb6
  41cbcd:	cld    
  41cbce:	outs   dx,DWORD PTR ds:[esi]
  41cbcf:	aaa    
  41cbd0:	pop    ss
  41cbd1:	jmp    0x41cb89
  41cbd3:	cmp    esi,ecx
  41cbd5:	iret   
  41cbd6:	lahf   
  41cbd7:	pushf  
  41cbd8:	nop
  41cbd9:	retf   0xf6c6
  41cbdc:	sub    BYTE PTR [edi-0x2d],cl
  41cbdf:	ret    
  41cbe0:	xchg   esp,eax
  41cbe1:	aad    0xdf
  41cbe3:	into   
  41cbe4:	inc    esi
  41cbe5:	or     bh,BYTE PTR [esi]
  41cbe7:	xchg   DWORD PTR [ecx-0x28677bfb],esi
  41cbed:	push   eax
  41cbee:	adc    ecx,edx
  41cbf0:	jne    0x41cb7f
  41cbf2:	inc    esi
  41cbf3:	jne    0x41cbd8
  41cbf5:	or     DWORD PTR [ecx-0x29],ebx
  41cbf8:	lahf   
  41cbf9:	out    0xad,eax
  41cbfb:	push   ss
  41cbfc:	push   edi
  41cbfd:	fistp  WORD PTR [ebp+eiz*2+0x699c0fe7]
  41cc04:	bound  ebp,QWORD PTR ds:0x4a98f520
  41cc0a:	xor    esp,DWORD PTR [edx-0x5]
  41cc0d:	push   es
  41cc0e:	mov    ebx,0x6ba77400
  41cc13:	pushf  
  41cc14:	sub    al,0x63
  41cc16:	rcr    DWORD PTR [esi-0x659bf47d],0x3f
  41cc1d:	arpl   WORD PTR [esi+0x4edf8f74],si
  41cc23:	out    dx,eax
  41cc24:	inc    ebx
  41cc25:	push   eax
  41cc26:	(bad)  
  41cc27:	jnp    0x41cc01
  41cc29:	(bad)  
  41cc2a:	jmp    0xd06653e2
  41cc2f:	popf   
  41cc30:	xchg   ah,al
  41cc32:	mov    ebx,0x80668daa
  41cc37:	push   ss
  41cc38:	adc    dh,al
  41cc3a:	push   es
  41cc3b:	cdq    
  41cc3c:	sub    ebx,esp
  41cc3e:	or     dh,BYTE PTR [edi+edi*2+0x5b9cfb6e]
  41cc45:	inc    ebx
  41cc46:	cmp    eax,0x9cc96875
  41cc4b:	mov    eax,ds:0xcb340477
  41cc50:	dec    ebx
  41cc51:	mov    ch,0x11
  41cc53:	push   esp
  41cc54:	inc    esp
  41cc55:	ret    
  41cc56:	rol    DWORD PTR [ebx+0x58],1
  41cc59:	jno    0x41cc92
  41cc5b:	test   eax,0x7535dfd
  41cc60:	xchg   ebp,eax
  41cc61:	or     al,cl
  41cc63:	call   0xdc8aaccd
  41cc68:	in     eax,0x2f
  41cc6a:	push   es
  41cc6b:	shl    BYTE PTR [ecx],1
  41cc6d:	or     eax,0xbc98239f
  41cc72:	dec    edx
  41cc73:	js     0x41cce7
  41cc75:	push   eax
  41cc76:	test   BYTE PTR [edx],bh
  41cc78:	adc    ebx,esp
  41cc7a:	jg     0x41cc75
  41cc7c:	xchg   esp,eax
  41cc7d:	popa   
  41cc7e:	data16 std 
  41cc80:	sar    BYTE PTR [esp+edi*1+0x41],cl
  41cc84:	fcomp  QWORD PTR [edx+0x41]
  41cc87:	dec    eax
  41cc88:	mov    WORD PTR [eax+0x4988430a],?
  41cc8e:	(bad)  
  41cc8f:	fiadd  DWORD PTR [edi+0x17]
  41cc92:	jb     0x41cc82
  41cc94:	or     eax,0xabf61ae0
  41cc99:	dec    edx
  41cc9a:	sbb    al,0x5
  41cc9c:	cld    
  41cc9d:	adc    DWORD PTR [edx],ebp
  41cc9f:	mov    ecx,0xea5a62ba
  41cca4:	(bad)  
  41cca5:	cld    
  41cca6:	push   es
  41cca7:	dec    ebp
  41cca8:	add    eax,0xa97afa52
  41ccad:	scas   al,BYTE PTR es:[edi]
  41ccae:	bound  edi,QWORD PTR [eax+0x6f4eb873]
  41ccb4:	jb     0x41cc49
  41ccb6:	mov    bh,0xe4
  41ccb8:	sti    
  41ccb9:	popa   
  41ccba:	test   al,0x81
  41ccbc:	or     ebx,esp
  41ccbe:	pop    eax
  41ccbf:	shl    DWORD PTR [ebx-0x31],0xd2
  41ccc3:	cmp    eax,0x81f6afcd
  41ccc8:	shl    DWORD PTR [ebp-0x6c],0x8c
  41cccc:	pop    ss
  41cccd:	xor    al,0x2b
  41cccf:	aas    
  41ccd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccd1:	xchg   DWORD PTR [eax],ebp
  41ccd3:	fwait
  41ccd4:	outs   dx,DWORD PTR ds:[esi]
  41ccd5:	sub    al,0xf7
  41ccd7:	adc    al,0xfd
  41ccd9:	loope  0x41cd0d
  41ccdb:	adc    DWORD PTR [ecx],esi
  41ccdd:	dec    edx
  41ccde:	lock pusha 
  41cce0:	inc    esi
  41cce1:	dec    eax
  41cce2:	mov    esi,0x150834d6
  41cce7:	pusha  
  41cce8:	out    0x42,al
  41ccea:	ds push 0x38f0b9fe
  41ccf0:	cmp    ah,dl
  41ccf2:	dec    ecx
  41ccf3:	push   cs
  41ccf4:	mov    eax,ds:0x9d1f0e80
  41ccf9:	div    DWORD PTR [ecx+0x39]
  41ccfc:	std    
  41ccfd:	add    WORD PTR ds:0xe86f821b,0x4250
  41cd06:	inc    edx
  41cd07:	and    edi,ebp
  41cd09:	add    DWORD PTR [ecx-0x5a],eax
  41cd0c:	push   ebp
  41cd0d:	and    eax,0x97a23e21
  41cd12:	push   cs
  41cd13:	dec    ebp
  41cd14:	inc    edi
  41cd15:	fisttp QWORD PTR [edx+0x5b]
  41cd18:	adc    BYTE PTR [esi-0x65],dl
  41cd1b:	and    eax,0x1c463189
  41cd20:	out    0x64,eax
  41cd22:	jg     0x41cda0
  41cd24:	aas    
  41cd25:	lods   al,BYTE PTR ds:[esi]
  41cd26:	mov    ecx,0x90763a15
  41cd2b:	jmp    DWORD PTR [edi-0x2b]
  41cd2e:	(bad)  
  41cd2f:	jmp    0x41ccc2
  41cd31:	or     eax,0xd9d985f7
  41cd36:	clc    
  41cd37:	rcl    bh,1
  41cd39:	inc    edi
  41cd3a:	int3   
  41cd3b:	mov    ch,0x6d
  41cd3d:	mov    al,ds:0x4ca63d33
  41cd42:	jecxz  0x41cd0a
  41cd44:	or     eax,ecx
  41cd46:	pop    edi
  41cd47:	xor    ecx,DWORD PTR [edx+edi*8+0x70]
  41cd4b:	scas   al,BYTE PTR es:[edi]
  41cd4c:	enter  0xd849,0xc6
  41cd50:	xchg   edx,eax
  41cd51:	push   0x670266d5
  41cd56:	pop    ebp
  41cd57:	jp     0x41cdd8
  41cd59:	fimul  WORD PTR [eax+0x60]
  41cd5c:	inc    ebx
  41cd5d:	dec    ebx
  41cd5e:	jecxz  0x41cd45
  41cd60:	aaa    
  41cd61:	cmp    DWORD PTR [eax],esp
  41cd63:	loopne 0x41cd5b
  41cd65:	mov    bh,0x89
  41cd67:	out    0x4f,eax
  41cd69:	(bad)  
  41cd6a:	jns    0x41ccf8
  41cd6c:	adc    ebp,DWORD PTR ds:0x7432f03d
  41cd72:	loopne 0x41cd39
  41cd74:	dec    eax
  41cd75:	inc    edi
  41cd76:	inc    ecx
  41cd77:	sbb    ebx,ebp
  41cd79:	dec    esi
  41cd7a:	repz int3 
  41cd7c:	and    BYTE PTR [ebp-0x2d8bc9cf],ch
  41cd82:	sub    al,0x63
  41cd84:	out    0x47,eax
  41cd86:	repnz add eax,ebp
  41cd89:	(bad)  
  41cd8a:	mov    esi,eax
  41cd8c:	ja     0x41cd65
  41cd8e:	mov    dl,0xa0
  41cd90:	add    cl,BYTE PTR [eax]
  41cd92:	push   ss
  41cd93:	shl    edi,cl
  41cd95:	out    0x97,eax
  41cd97:	pop    edi
  41cd98:	loop   0x41cd32
  41cd9a:	ins    DWORD PTR es:[edi],dx
  41cd9b:	jb     0x41cd56
  41cd9d:	mov    DWORD PTR [ebp+0x13],ebx
  41cda0:	jg     0x41cd60
  41cda2:	popf   
  41cda3:	ror    DWORD PTR [edi-0x1bc1c2c2],1
  41cda9:	shr    edi,cl
  41cdab:	push   ebp
  41cdac:	push   ds
  41cdad:	xor    al,BYTE PTR [esi-0x3d]
  41cdb0:	imul   ebp,DWORD PTR [esi+0x501615e],0xe95e72e
  41cdba:	sub    dh,BYTE PTR [esi-0x597fdbc8]
  41cdc0:	mov    WORD PTR [edx+0x40904fbe],es
  41cdc6:	mov    esp,0x234b45b0
  41cdcb:	loope  0x41cddf
  41cdcd:	jge    0x41cd82
  41cdcf:	pop    esp
  41cdd0:	or     al,0xb0
  41cdd2:	sub    BYTE PTR [esi+edx*4-0x7d],0x93
  41cdd7:	nop
  41cdd8:	mov    bh,0xc0
  41cdda:	jg     0x41cdf9
  41cddc:	inc    ecx
  41cddd:	pop    esp
  41cdde:	jmp    0x41cdb7
  41cde0:	cdq    
  41cde1:	fisttp DWORD PTR [esp+eax*2]
  41cde4:	rol    DWORD PTR [ecx-0x4c3b7817],0x90
  41cdeb:	test   BYTE PTR [ebx],0x7b
  41cdee:	push   ss
  41cdef:	mov    edx,0x76a77fc9
  41cdf4:	adc    DWORD PTR [ecx],0x6f
  41cdf7:	sahf   
  41cdf8:	dec    eax
  41cdf9:	pop    eax
  41cdfa:	cdq    
  41cdfb:	sub    eax,0xc489ee84
  41ce00:	andps  xmm4,xmm0
  41ce03:	in     eax,0x6f
  41ce05:	xor    BYTE PTR [edi-0x5e],0xb3
  41ce09:	ja     0x41ce2d
  41ce0b:	jae    0x41ce84
  41ce0d:	pop    ebx
  41ce0e:	push   ebp
  41ce0f:	mov    WORD PTR [ebx-0x49110ead],?
  41ce15:	lods   eax,DWORD PTR ds:[esi]
  41ce16:	jnp    0x41ce13
  41ce18:	retf   0xec4
  41ce1b:	arpl   di,cx
  41ce1d:	or     dh,bl
  41ce1f:	xor    BYTE PTR [ebx-0x3a85dd24],al
  41ce25:	cmp    DWORD PTR [ebp+0xbad50ee],esi
  41ce2b:	cli    
  41ce2c:	adc    DWORD PTR ds:0xc69ff779,0x4884f0c6
  41ce36:	push   edi
  41ce37:	mov    esp,DWORD PTR [esi]
  41ce39:	(bad)  
  41ce3a:	call   0x1656669
  41ce3f:	nop
  41ce40:	ja     0x41ce74
  41ce42:	jbe    0x41ce28
  41ce44:	jne    0x41ce91
  41ce46:	mov    ch,0x7f
  41ce48:	and    BYTE PTR [edx-0x601907b7],cl
  41ce4e:	xchg   esi,eax
  41ce4f:	loope  0x41ceb6
  41ce51:	jae    0x41cec3
  41ce53:	add    al,0xaa
  41ce55:	test   DWORD PTR [edx+0x18],eax
  41ce58:	retf   0x4955
  41ce5b:	dec    ebx
  41ce5c:	jnp    0x41cec2
  41ce5e:	mov    ecx,0xfb06386d
  41ce63:	ins    DWORD PTR es:[edi],dx
  41ce64:	pop    ebp
  41ce65:	fild   QWORD PTR [esi-0x33]
  41ce68:	lea    edi,[eax+0x5857e8e2]
  41ce6e:	call   0x8909:0x555dae47
  41ce75:	xlat   BYTE PTR ds:[ebx]
  41ce76:	lock xor eax,0x5c82c552
  41ce7c:	imul   esp,DWORD PTR ds:0x85083c62,0x3669c608
  41ce86:	jns    0x41ce12
  41ce88:	xor    dh,BYTE PTR [ecx-0x32]
  41ce8b:	pushf  
  41ce8c:	je     0x41cee4
  41ce8e:	mov    esp,ebp
  41ce90:	out    0xdd,eax
  41ce92:	vandpd xmm0,xmm5,XMMWORD PTR ds:0xeb810d92
  41ce9a:	rcl    BYTE PTR [edx+0x6b],1
  41ce9d:	push   ss
  41ce9e:	pop    ebx
  41ce9f:	and    DWORD PTR [ecx+0x2b],0x858ad0c0
  41cea6:	imul   ecx,DWORD PTR [ebx],0xffffffd7
  41cea9:	and    DWORD PTR [edx+0x63],0x94d2ab0e
  41ceb0:	cmp    al,0xd9
  41ceb2:	sbb    eax,0x4deb270d
  41ceb7:	mov    esi,0xcf2b1a82
  41cebc:	shr    DWORD PTR [ebp+0x52],1
  41cebf:	aas    
  41cec0:	in     eax,0x5
  41cec2:	shr    BYTE PTR [esi+edx*4],0x58
  41cec6:	leave  
  41cec7:	call   FWORD PTR ds:0x19241d9c
  41cecd:	(bad)  
  41cece:	xor    al,0xcd
  41ced0:	pop    esp
  41ced1:	xor    al,bl
  41ced3:	push   es
  41ced4:	mov    bh,0xb9
  41ced6:	popa   
  41ced7:	xor    eax,0x2a15acab
  41cedc:	test   eax,0x5e2cab25
  41cee1:	mov    esi,0x735e85d0
  41cee6:	in     eax,0xd
  41cee8:	inc    esi
  41cee9:	adc    DWORD PTR [ebx-0x46],ebp
  41ceec:	mov    ds:0x7c3223c3,al
  41cef1:	pop    edi
  41cef2:	repnz imul ebx,DWORD PTR [edi-0x4b4e4272],0xffffffc6
  41cefa:	push   cs
  41cefb:	and    edi,DWORD PTR [edi-0x36]
  41cefe:	push   edx
  41ceff:	pop    ecx
  41cf00:	fsubrp st(7),st
  41cf02:	test   eax,0xdfe14621
  41cf07:	ret    
  41cf08:	div    BYTE PTR [edi-0x47]
  41cf0b:	adc    ah,bl
  41cf0d:	lea    ebp,[ebx+esi*1+0x3c]
  41cf11:	inc    ebp
  41cf12:	retf   
  41cf13:	imul   esi,DWORD PTR [ebp-0xbf2e84e],0x7
  41cf1a:	lock and DWORD PTR [eax+edi*4-0x15],edx
  41cf1f:	xchg   ebp,eax
  41cf20:	pop    ebx
  41cf21:	mov    ss,WORD PTR [edx+0xb92ffb4]
  41cf27:	adc    al,0x11
  41cf29:	push   ss
  41cf2a:	push   0xe1ecb75b
  41cf2f:	shl    DWORD PTR [ecx],cl
  41cf31:	int3   
  41cf32:	jno    0x41ceba
  41cf34:	ss lock cmp eax,0xab48aa1a
  41cf3b:	mov    ebx,DWORD PTR [ecx-0x10]
  41cf3e:	or     eax,0xd906d60d
  41cf43:	mov    cl,0xd7
  41cf45:	pop    ecx
  41cf46:	loop   0x41cf78
  41cf48:	jp     0x41cee3
  41cf4a:	xchg   BYTE PTR [eax],dh
  41cf4c:	mov    ?,WORD PTR [ebx+0x1d]
  41cf4f:	dec    esi
  41cf50:	push   es
  41cf51:	rcl    BYTE PTR [edx+edx*4-0x44],0x90
  41cf56:	push   edi
  41cf57:	mov    esp,0xed1a324a
  41cf5c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41cf5e:	xchg   ecx,eax
  41cf5f:	bound  esi,QWORD PTR [esi-0x43de44ab]
  41cf65:	adc    ebp,DWORD PTR [edi]
  41cf67:	mov    eax,ds:0x6a50f730
  41cf6c:	adc    BYTE PTR [edx],0x3
  41cf6f:	jo     0x41cf2f
  41cf71:	out    dx,al
  41cf72:	inc    eax
  41cf73:	mov    eax,DWORD PTR [edi+edi*2]
  41cf76:	cmp    ecx,ecx
  41cf78:	mov    ch,0x52
  41cf7a:	sbb    edx,0x3f
  41cf7d:	gs out 0x77,al
  41cf80:	push   edi
  41cf81:	and    BYTE PTR [ebp+0x6b08c9b3],dh
  41cf87:	mov    dl,0xdb
  41cf89:	fistp  WORD PTR [edx]
  41cf8b:	arpl   WORD PTR [esi],sp
  41cf8d:	and    ch,BYTE PTR [edx-0x60]
  41cf90:	ins    BYTE PTR es:[edi],dx
  41cf91:	xchg   esi,eax
  41cf92:	jl     0x41cf20
  41cf94:	jge    0x41cf31
  41cf96:	push   cs
  41cf97:	inc    esp
  41cf98:	lock idiv BYTE PTR [edx]
  41cf9b:	xchg   ebx,eax
  41cf9c:	and    DWORD PTR ds:0xa34fbd97,ebx
  41cfa2:	out    dx,eax
  41cfa3:	ret    0x95e6
  41cfa6:	mov    bl,0xb3
  41cfa8:	sar    DWORD PTR [ebx+0x39f05bb],0x2c
  41cfaf:	scas   al,BYTE PTR es:[edi]
  41cfb0:	imul   edi,DWORD PTR ds:[edx-0x6864e858],0xffffffcb
  41cfb8:	(bad)  
  41cfb9:	ja     0x41cf65
  41cfbb:	xor    ecx,esp
  41cfbd:	test   eax,0x4d77606
  41cfc2:	dec    ecx
  41cfc3:	js     0x41cf6b
  41cfc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfc6:	lds    ebp,FWORD PTR [ebp-0x15f67ade]
  41cfcc:	(bad)  
  41cfcd:	pushf  
  41cfce:	loope  0x41cfa1
  41cfd0:	les    ecx,FWORD PTR ds:0x523bcd4a
  41cfd6:	in     eax,dx
  41cfd7:	jne    0x41cfe6
  41cfd9:	xor    al,0x2a
  41cfdb:	add    BYTE PTR [edi+edi*1-0x36494523],0x95
  41cfe3:	inc    esp
  41cfe4:	repnz sub eax,0xdebb203
  41cfea:	ficom  WORD PTR [esi]
  41cfec:	push   0xc20f035f
  41cff1:	dec    ebp
  41cff2:	inc    eax
  41cff3:	stc    
  41cff4:	push   ss
  41cff5:	(bad)  
  41cff6:	ins    DWORD PTR es:[edi],dx
  41cff7:	xor    eax,0xac8e0828
  41cffc:	jg     0x41d023
  41cffe:	push   cs
  41cfff:	dec    esi
  41d000:	and    al,0xeb
  41d002:	fdivr  st(3),st
  41d004:	sbb    BYTE PTR [eax+0x56cc907d],al
  41d00a:	mov    dl,BYTE PTR [esi+0x2929ed1a]
  41d010:	mov    ah,0xc7
  41d012:	mov    bh,0x15
  41d014:	cmp    bh,BYTE PTR [ecx]
  41d016:	inc    esi
  41d017:	pop    ss
  41d018:	lods   al,BYTE PTR ds:[esi]
  41d019:	push   ss
  41d01a:	xchg   BYTE PTR ds:0x86e1d6df,dh
  41d020:	cli    
  41d021:	xor    bh,0x11
  41d024:	mov    ds:0x1fe5523d,al
  41d029:	pop    esp
  41d02a:	mov    esi,0xa9c9ab4e
  41d02f:	clc    
  41d030:	lea    ebp,[esi+0x51]
  41d033:	nop
  41d034:	dec    ebp
  41d035:	mov    ?,esi
  41d037:	aas    
  41d038:	call   0xc8e2:0x14621a6c
  41d03f:	popf   
  41d040:	xor    eax,0x8813a240
  41d045:	mov    cl,0x5d
  41d047:	popa   
  41d048:	(bad)  
  41d04a:	mov    cl,0xdd
  41d04c:	mov    al,0x4
  41d04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d04f:	fisubr DWORD PTR [edx+0x14]
  41d052:	les    ecx,FWORD PTR [ecx-0x7a]
  41d055:	test   BYTE PTR [edi-0x10],bh
  41d058:	jmp    0x41d068
  41d05a:	mov    edx,0x3248447f
  41d05f:	sar    BYTE PTR [edx-0x3442d7c5],1
  41d065:	or     BYTE PTR ds:0xa0d1dbbd,bh
  41d06b:	push   ebx
  41d06c:	jnp    0x41d078
  41d06e:	int    0xa3
  41d070:	mov    edx,DWORD PTR [edx+eax*1-0x52f1f507]
  41d077:	or     eax,0xb4c8f20
  41d07c:	or     DWORD PTR [ebx],0x2c
  41d07f:	xor    esi,DWORD PTR [ecx+eiz*1-0x40d6516f]
  41d086:	and    BYTE PTR [eax+0x5],cl
  41d089:	jnp    0x41d020
  41d08b:	jmp    0x41d0f6
  41d08d:	inc    esi
  41d08e:	or     ecx,esi
  41d090:	or     ah,BYTE PTR [ecx-0x51]
  41d093:	sub    ch,BYTE PTR [ecx-0x12]
  41d096:	int3   
  41d097:	ret    0xc362
  41d09a:	std    
  41d09b:	sub    cl,ch
  41d09d:	xor    al,0xd1
  41d09f:	xor    dh,al
  41d0a1:	jl     0x41d094
  41d0a3:	test   eax,0x85a64e1c
  41d0a8:	or     BYTE PTR [ebp+0xe78aec3],0xc1
  41d0af:	scas   al,BYTE PTR es:[edi]
  41d0b0:	aas    
  41d0b1:	sub    DWORD PTR [ebx+0x984cfbe],ebp
  41d0b7:	jnp    0x41d058
  41d0b9:	jl     0x41d0cd
  41d0bb:	leave  
  41d0bc:	and    eax,0x6c1eb2b0
  41d0c1:	dec    ecx
  41d0c2:	mov    esi,0x3d1e4126
  41d0c7:	push   0x24a04620
  41d0cc:	in     eax,dx
  41d0cd:	xchg   ebx,eax
  41d0ce:	cld    
  41d0cf:	add    bh,BYTE PTR [ecx]
  41d0d1:	loope  0x41d102
  41d0d3:	pop    ecx
  41d0d4:	mov    al,0x5f
  41d0d6:	jnp    0x41d0e2
  41d0d8:	dec    ebx
  41d0d9:	jo     0x41d123
  41d0db:	pusha  
  41d0dc:	dec    edx
  41d0dd:	scas   al,BYTE PTR es:[edi]
  41d0de:	int3   
  41d0df:	ret    
  41d0e0:	jp     0x41d093
  41d0e2:	fwait
  41d0e3:	cld    
  41d0e4:	in     al,dx
  41d0e5:	sahf   
  41d0e6:	mov    ch,0xc6
  41d0e8:	pop    es
  41d0e9:	lods   al,BYTE PTR ds:[esi]
  41d0ea:	mov    edi,0xe18cf352
  41d0ef:	xchg   esi,eax
  41d0f0:	or     bh,BYTE PTR [ebp-0x2f570aa]
  41d0f6:	cmp    eax,0x4e75fe89
  41d0fb:	cdq    
  41d0fc:	loope  0x41d100
  41d0fe:	fcmovbe st,st(3)
  41d100:	in     al,0xcf
  41d102:	popa   
  41d103:	repz (bad) [eax]
  41d106:	nop
  41d107:	cmc    
  41d108:	jle    0x41d0c7
  41d10a:	addr16 iret 
  41d10c:	xor    DWORD PTR [esi+0x4d],edx
  41d10f:	pop    ebx
  41d110:	mov    bh,0x66
  41d112:	loopne 0x41d0b0
  41d114:	mov    ds:0xc3c8bf09,eax
  41d119:	in     eax,0x5d
  41d11b:	mov    edi,0x4e453180
  41d120:	sub    ecx,0x57
  41d123:	lds    ecx,FWORD PTR ds:0x46d76aac
  41d129:	jle    0x41d16b
  41d12b:	gs std 
  41d12d:	call   0xdfd926bd
  41d132:	mov    dl,al
  41d134:	jns    0x41d177
  41d136:	xchg   edx,eax
  41d137:	xchg   ebp,eax
  41d138:	dec    ebp
  41d139:	cmp    al,0x6e
  41d13b:	inc    ebp
  41d13c:	ds push 0xc0caabfa
  41d142:	xor    edx,DWORD PTR [ecx-0x5a]
  41d145:	mov    edi,ecx
  41d147:	sbb    ch,BYTE PTR [esi-0x79]
  41d14a:	scas   al,BYTE PTR es:[edi]
  41d14b:	xlat   BYTE PTR ds:[ebx]
  41d14c:	or     eax,DWORD PTR fs:[edi]
  41d14f:	or     al,0x4e
  41d151:	push   0xffffff98
  41d153:	mov    al,ds:0xc31b194c
  41d158:	retf   
  41d159:	sub    DWORD PTR [esi],esi
  41d15b:	pop    esp
  41d15c:	jae    0x41d13d
  41d15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d15f:	dec    edi
  41d160:	add    al,0xc7
  41d162:	jmp    0x73be17ec
  41d167:	inc    ebx
  41d168:	mov    al,ds:0x674ecc62
  41d16d:	ins    BYTE PTR es:[edi],dx
  41d16e:	daa    
  41d16f:	jbe    0x41d141
  41d171:	fsub   DWORD PTR [ebp+0xe]
  41d174:	outs   dx,BYTE PTR ds:[esi]
  41d175:	dec    edi
  41d176:	inc    ebp
  41d177:	push   edx
  41d178:	repnz mov ch,0x28
  41d17b:	jo     0x41d16a
  41d17d:	scas   al,BYTE PTR es:[edi]
  41d17e:	or     al,0xef
  41d180:	out    dx,eax
  41d181:	dec    esp
  41d182:	lea    edx,[ecx]
  41d184:	iret   
  41d185:	int3   
  41d186:	ins    BYTE PTR es:[edi],dx
  41d187:	and    BYTE PTR [edi],ah
  41d189:	and    eax,0x1c88d00c
  41d18e:	sbb    DWORD PTR [eax],ecx
  41d190:	xor    DWORD PTR [ecx+0x3c],ecx
  41d193:	dec    ebp
  41d194:	add    eax,0x33bf656f
  41d199:	hlt    
  41d19a:	jmp    0xe896:0x61823b06
  41d1a1:	into   
  41d1a2:	cdq    
  41d1a3:	iret   
  41d1a4:	out    dx,al
  41d1a5:	in     al,0xd4
  41d1a7:	or     al,0xfa
  41d1a9:	std    
  41d1aa:	pop    es
  41d1ab:	fs leave 
  41d1ad:	push   esi
  41d1ae:	leave  
  41d1af:	fisub  WORD PTR [edi-0x2ca957fa]
  41d1b5:	in     al,0x61
  41d1b7:	pop    esp
  41d1b8:	and    DWORD PTR [edi],edi
  41d1ba:	jp     0x41d180
  41d1bc:	sti    
  41d1bd:	mov    al,0x3d
  41d1bf:	ja     0x41d1b6
  41d1c1:	and    esi,DWORD PTR [edx-0x26]
  41d1c4:	push   es
  41d1c5:	mov    bh,0xac
  41d1c7:	in     eax,0xa6
  41d1c9:	mov    eax,0x8af1f675
  41d1ce:	lahf   
  41d1cf:	mov    WORD PTR [edi+ebp*4],gs
  41d1d2:	ins    DWORD PTR es:[edi],dx
  41d1d3:	dec    esi
  41d1d4:	adc    al,BYTE PTR [ebp-0x220a05a4]
  41d1da:	and    DWORD PTR [esp+ecx*2],eax
  41d1dd:	test   al,0x49
  41d1df:	into   
  41d1e0:	mov    fs,esi
  41d1e2:	bound  ebx,QWORD PTR [ebx-0x68]
  41d1e5:	add    dl,BYTE PTR [esp+ebx*8+0x47]
  41d1e9:	dec    esp
  41d1ea:	mov    al,0xdb
  41d1ec:	cmc    
  41d1ed:	loop   0x41d177
  41d1ef:	out    0x1a,eax
  41d1f1:	push   es
  41d1f2:	sahf   
  41d1f3:	pushf  
  41d1f4:	ret    0xb6cf
  41d1f7:	pop    ss
  41d1f8:	mov    dh,0x75
  41d1fa:	dec    esi
  41d1fb:	jb     0x41d1e9
  41d1fd:	test   DWORD PTR [eax-0x23ef243e],edi
  41d203:	ja     0x41d1f9
  41d205:	inc    esp
  41d206:	add    edi,edx
  41d208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d209:	scas   al,BYTE PTR es:[edi]
  41d20a:	ss push ss
  41d20c:	jbe    0x41d1d8
  41d20e:	and    eax,0x2e2ae7b9
  41d213:	push   edi
  41d214:	into   
  41d215:	push   ebx
  41d216:	outs   dx,BYTE PTR ds:[esi]
  41d217:	lods   al,BYTE PTR ds:[esi]
  41d218:	out    dx,eax
  41d219:	jg     0x41d289
  41d21b:	add    dl,BYTE PTR ds:[ebx+0x1a8d0e37]
  41d222:	push   ecx
  41d223:	adc    al,0x5a
  41d225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d226:	cld    
  41d227:	pop    esi
  41d228:	iret   
  41d229:	pop    esi
  41d22a:	xor    DWORD PTR [eax],edx
  41d22c:	retf   0xbde6
  41d22f:	mov    BYTE PTR [ecx+0x4200cb49],al
  41d235:	push   cs
  41d236:	repz push 0x72c1c93f
  41d23c:	stos   DWORD PTR es:[edi],eax
  41d23d:	mov    ah,0xdc
  41d23f:	xor    al,0x5
  41d241:	inc    ebp
  41d242:	xchg   ax,ax
  41d244:	ds (bad) 
  41d247:	ror    ebp,1
  41d249:	ret    
  41d24a:	sub    BYTE PTR [edi],al
  41d24c:	push   ebp
  41d24d:	jge    0x41d207
  41d24f:	mov    ecx,0x209a681
  41d254:	mov    al,0x6a
  41d256:	pop    ds
  41d257:	pop    ebp
  41d258:	pop    ebx
  41d259:	mov    al,0xb9
  41d25b:	jae    0x41d25f
  41d25d:	sub    edx,esp
  41d25f:	stc    
  41d260:	push   ds
  41d261:	fisubr WORD PTR [edx]
  41d263:	imul   ecx,DWORD PTR [edi],0xc4bb1982
  41d269:	(bad)  
  41d26a:	fst    QWORD PTR [eax+ebx*8]
  41d26d:	fidivr DWORD PTR [ecx-0x4b]
  41d270:	and    ebp,ebx
  41d272:	(bad)  
  41d273:	pusha  
  41d274:	pop    ebp
  41d275:	jno    0x41d21a
  41d277:	cmc    
  41d278:	fild   WORD PTR [ebx+0x57885037]
  41d27e:	xchg   ecx,eax
  41d27f:	or     DWORD PTR [ebp+0x5],0xffffffc5
  41d283:	inc    edi
  41d284:	retf   0xdd95
  41d287:	push   ds
  41d288:	pop    ecx
  41d289:	push   esp
  41d28a:	push   cs
  41d28b:	add    eax,0x736829b0
  41d290:	out    0x7d,al
  41d292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d293:	mov    al,dl
  41d295:	xchg   edx,eax
  41d296:	sbb    ecx,esp
  41d298:	loopne 0x41d27d
  41d29a:	pop    ds
  41d29b:	stos   DWORD PTR es:[edi],eax
  41d29c:	mov    ch,0x20
  41d29e:	xchg   ebp,eax
  41d29f:	hlt    
  41d2a0:	inc    eax
  41d2a1:	mov    edi,edx
  41d2a3:	fld    QWORD PTR [edi+0x1e]
  41d2a6:	retf   
  41d2a7:	dec    esi
  41d2a8:	not    DWORD PTR [edi+0x1b5346d0]
  41d2ae:	jbe    0x41d2b7
  41d2b0:	nop
  41d2b1:	push   ebp
  41d2b2:	(bad)  
  41d2b3:	push   edx
  41d2b4:	push   eax
  41d2b5:	pop    ds
  41d2b6:	scas   al,BYTE PTR es:[edi]
  41d2b7:	pop    esi
  41d2b8:	cmp    BYTE PTR [ecx-0x429c93f5],ch
  41d2be:	lods   al,BYTE PTR ds:[esi]
  41d2bf:	adc    al,0xb7
  41d2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c2:	pop    edx
  41d2c3:	add    al,0xb4
  41d2c5:	lds    esi,FWORD PTR [ecx+0x8cc947d]
  41d2cb:	les    edx,FWORD PTR [edi+0x7a]
  41d2ce:	outs   dx,DWORD PTR ds:[esi]
  41d2cf:	inc    ebx
  41d2d0:	sbb    al,0xb9
  41d2d2:	hlt    
  41d2d3:	sub    DWORD PTR [ebp-0xd],ebp
  41d2d6:	or     cl,ch
  41d2d8:	sar    BYTE PTR [ebx],cl
  41d2da:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d2dc:	cmp    DWORD PTR [esi+esi*1],0xa36bf68b
  41d2e3:	add    dh,cl
  41d2e5:	scas   eax,DWORD PTR es:[edi]
  41d2e6:	adc    eax,0xbd883067
  41d2eb:	and    edi,DWORD PTR [ebp+eax*8-0x2764c15f]
  41d2f2:	mov    ebx,0xda662a88
  41d2f7:	icebp  
  41d2f8:	pop    edx
  41d2f9:	ins    DWORD PTR es:[edi],dx
  41d2fa:	pushf  
  41d2fb:	mov    ch,0x51
  41d2fd:	mov    ebx,0x91cdd47e
  41d302:	inc    ebx
  41d303:	std    
  41d304:	mov    esi,DWORD PTR [eax]
  41d306:	cmp    DWORD PTR [eax],ecx
  41d308:	pop    es
  41d309:	sub    BYTE PTR [esi+0x1d],0x12
  41d30d:	rol    DWORD PTR ds:0x945338e9,1
  41d313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d314:	xor    al,0xa3
  41d316:	scas   eax,DWORD PTR es:[edi]
  41d317:	sub    dl,BYTE PTR [ebx]
  41d319:	push   edi
  41d31a:	imul   ecx,DWORD PTR [ebx],0x16270aae
  41d320:	mov    DWORD PTR [edi+0x626f0a83],ebx
  41d326:	imul   ecx,DWORD PTR [bx-0x23],0x93ca3f11
  41d32e:	cmp    cl,BYTE PTR [ecx-0x26]
  41d331:	test   BYTE PTR [edi],ch
  41d333:	imul   eax,DWORD PTR [ebx+0x6f],0x25
  41d337:	cdq    
  41d338:	xchg   ecx,eax
  41d339:	mov    ecx,0x608fabba
  41d33e:	enter  0x9de9,0xfd
  41d342:	test   al,0x2f
  41d344:	jb     0x41d392
  41d346:	bound  ebx,QWORD PTR ds:0x46a84df0
  41d34c:	rcl    BYTE PTR [edi-0x5a],0xb9
  41d350:	aas    
  41d351:	call   DWORD PTR [ecx+eiz*4]
  41d354:	in     al,0xd2
  41d356:	std    
  41d357:	and    dh,bh
  41d359:	stos   DWORD PTR es:[edi],eax
  41d35a:	jbe    0x41d39c
  41d35c:	dec    edx
  41d35d:	imul   DWORD PTR [eax+edx*4+0x60f1a561]
  41d364:	in     al,dx
  41d365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d366:	mov    al,ds:0xf843b59e
  41d36b:	and    bh,BYTE PTR [edi]
  41d36d:	mov    ebx,DWORD PTR [edi-0x49]
  41d370:	in     al,dx
  41d371:	imul   ebx,DWORD PTR [edi-0x44d45ece],0xffffffcc
  41d378:	xchg   esp,eax
  41d379:	xor    ch,bh
  41d37b:	mov    BYTE PTR [ebx+0x362352e4],ah
  41d381:	xor    al,0xb2
  41d383:	mov    edi,0xf36c6203
  41d388:	sub    bl,BYTE PTR [esi+eax*2+0x3dc04d94]
  41d38f:	in     eax,dx
  41d390:	pop    eax
  41d391:	mov    cl,0x84
  41d393:	add    eax,0xb41648
  41d398:	push   esi
  41d399:	(bad)  
  41d39a:	jge    0x41d408
  41d39c:	dec    edi
  41d39d:	add    ah,BYTE PTR [eax-0x577a523d]
  41d3a3:	inc    esi
  41d3a4:	mov    ah,0xac
  41d3a6:	outs   dx,BYTE PTR ds:[esi]
  41d3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3a8:	enter  0xe237,0x74
  41d3ac:	call   0xcdea:0xbd40569e
  41d3b3:	mov    BYTE PTR [esi+0x2036c22c],ah
  41d3b9:	dec    ebx
  41d3ba:	xor    al,0xe0
  41d3bc:	shl    cl,cl
  41d3be:	repz sub dl,bh
  41d3c1:	fmul   st(6),st
  41d3c3:	mov    ah,0x91
  41d3c5:	icebp  
  41d3c6:	mov    DWORD PTR [eax],edi
  41d3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3c9:	imul   BYTE PTR [eax-0x17cd7dc3]
  41d3cf:	in     al,0x17
  41d3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d2:	sbb    BYTE PTR ss:[edi-0x6c0bb89f],bh
  41d3d9:	iret   
  41d3da:	inc    ecx
  41d3db:	jmp    0x41d3f1
  41d3dd:	std    
  41d3de:	int    0x2e
  41d3e0:	aam    0x64
  41d3e2:	fnstsw WORD PTR [ebx-0x3d]
  41d3e5:	lds    esp,FWORD PTR [eax+0x19]
  41d3e8:	dec    edx
  41d3e9:	xchg   BYTE PTR ds:0xb98dbe76,ah
  41d3ef:	pop    edx
  41d3f0:	cdq    
  41d3f1:	mov    edi,0x6199dbb3
  41d3f6:	aam    0xdb
  41d3f8:	mov    ds:0x869b553,eax
  41d3fd:	mov    esp,0x1f8ae1ce
  41d402:	ret    
  41d403:	jge    0x41d3ac
  41d405:	mov    al,ds:0x40b2665d
  41d40a:	aas    
  41d40b:	mov    dh,0x64
  41d40d:	out    0x25,eax
  41d40f:	jmp    0x41d3ce
  41d411:	ins    DWORD PTR es:[edi],dx
  41d412:	imul   ebx,DWORD PTR [ecx-0x7c],0xe7358175
  41d419:	adc    BYTE PTR [ebx+0x79],0x4c
  41d41d:	add    BYTE PTR [esi+0x3d],dl
  41d420:	clc    
  41d421:	mov    esi,0x9b5e5fb5
  41d426:	jno    0x41d477
  41d428:	mov    al,ds:0x282a5d1f
  41d42d:	cmp    al,BYTE PTR [ebp-0x45]
  41d430:	pop    ebp
  41d431:	jb     0x41d4a8
  41d433:	in     eax,dx
  41d434:	addr16 inc edi
  41d436:	je     0x41d4b7
  41d438:	or     al,0x7f
  41d43a:	adc    dl,BYTE PTR [eax-0x48]
  41d43d:	or     DWORD PTR [ecx-0x30],ebp
  41d440:	popa   
  41d441:	les    edi,FWORD PTR ds:0xaa2727ec
  41d447:	xor    BYTE PTR [edx+edi*8+0x7c150b49],bh
  41d44e:	stos   BYTE PTR es:[edi],al
  41d44f:	(bad)  
  41d450:	sub    eax,DWORD PTR [edi-0x1622c558]
  41d456:	jp     0x41d406
  41d458:	push   edi
  41d459:	ret    
  41d45a:	jg     0x41d492
  41d45c:	je     0x41d45f
  41d45e:	pop    edi
  41d45f:	dec    ecx
  41d460:	ins    BYTE PTR es:[edi],dx
  41d461:	in     eax,dx
  41d462:	sbb    ah,ch
  41d464:	mov    esi,0xee78a087
  41d469:	push   esi
  41d46a:	nop
  41d46b:	jb     0x41d3f1
  41d46d:	in     eax,dx
  41d46e:	inc    ebx
  41d46f:	adc    eax,0x576dd99f
  41d474:	dec    ebp
  41d475:	dec    edi
  41d476:	std    
  41d477:	inc    edi
  41d478:	pop    ebx
  41d479:	or     ebx,DWORD PTR [ebx+edi*2]
  41d47c:	inc    esp
  41d47d:	inc    esi
  41d47e:	inc    esi
  41d47f:	push   ss
  41d480:	mov    ch,0x3b
  41d482:	pop    eax
  41d483:	sbb    al,0x63
  41d485:	sub    ebp,DWORD PTR [ebp-0x5494ac52]
  41d48b:	lock add bh,BYTE PTR [bp+si-0x731d]
  41d491:	push   edi
  41d492:	cs add ecx,edx
  41d495:	push   ebx
  41d496:	push   edx
  41d497:	test   al,0x1f
  41d499:	ss push eax
  41d49b:	push   esp
  41d49c:	jno    0x41d452
  41d49e:	nop
  41d49f:	mov    ds:0x10cb3b0f,al
  41d4a4:	(bad)  
  41d4a5:	cli    
  41d4a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4a7:	(bad)  [ecx-0x40]
  41d4aa:	sbb    dh,BYTE PTR [edi-0x36]
  41d4ad:	mov    dl,bl
  41d4af:	push   esp
  41d4b0:	rcr    DWORD PTR [edi],cl
  41d4b2:	xchg   ebx,eax
  41d4b3:	ins    DWORD PTR es:[edi],dx
  41d4b4:	cwde   
  41d4b5:	scas   eax,DWORD PTR es:[edi]
  41d4b6:	imul   ebx,eax,0x5bb6fa9
  41d4bc:	jo     0x41d496
  41d4be:	dec    eax
  41d4bf:	leave  
  41d4c0:	ret    
  41d4c1:	pop    ds
  41d4c2:	sbb    ebp,esp
  41d4c4:	or     BYTE PTR [ebx-0x1afee1e3],al
  41d4ca:	sub    bl,BYTE PTR [eax]
  41d4cc:	jns    0x41d4d3
  41d4ce:	les    ecx,FWORD PTR [edx-0x1a]
  41d4d1:	jecxz  0x41d4f8
  41d4d3:	and    eax,0xa0ba9338
  41d4d8:	out    0x9a,al
  41d4da:	xor    edi,esp
  41d4dc:	psrld  mm2,QWORD PTR [esp+edi*8+0x1d]
  41d4e1:	addr16 mov al,dh
  41d4e4:	fbstp  TBYTE PTR [eax+eiz*4]
  41d4e7:	inc    esi
  41d4e8:	sub    ah,BYTE PTR [esi-0x1]
  41d4eb:	out    0x6d,al
  41d4ed:	bnd ret 
  41d4ef:	inc    edi
  41d4f0:	scas   al,BYTE PTR es:[edi]
  41d4f1:	cmc    
  41d4f2:	inc    esi
  41d4f3:	repnz push ss
  41d4f5:	xchg   BYTE PTR [ebx-0x68],bh
  41d4f8:	test   al,0x9c
  41d4fa:	cli    
  41d4fb:	scas   eax,DWORD PTR es:[edi]
  41d4fc:	xor    dh,bl
  41d4fe:	cld    
  41d4ff:	mov    ecx,0xdc38ecc
  41d504:	xchg   BYTE PTR [esi+0x60],bh
  41d507:	sbb    BYTE PTR [esi-0x29617311],ch
  41d50d:	(bad)  
  41d50e:	scas   al,BYTE PTR es:[edi]
  41d50f:	(bad)  
  41d511:	loop   0x41d52b
  41d513:	test   ebp,ebx
  41d515:	push   0xb37aac4
  41d51a:	in     al,dx
  41d51b:	mov    cl,0x17
  41d51d:	pop    ebx
  41d51e:	scas   eax,DWORD PTR es:[edi]
  41d51f:	xlat   BYTE PTR ds:[ebx]
  41d520:	call   0x3763:0xb50fdffa
  41d527:	int    0x22
  41d529:	lea    edi,[ebp+0x594d8d29]
  41d52f:	das    
  41d530:	inc    ecx
  41d531:	cwde   
  41d532:	data16 clc 
  41d534:	pop    esi
  41d535:	shl    esi,0xa1
  41d538:	std    
  41d539:	mov    eax,DWORD PTR [esi]
  41d53b:	popf   
  41d53c:	jge    0x41d56b
  41d53e:	sbb    al,BYTE PTR [edx+0x70]
  41d541:	sti    
  41d542:	xlat   BYTE PTR ds:[ebx]
  41d543:	iret   
  41d544:	sub    ah,ch
  41d546:	xchg   ebp,eax
  41d547:	in     eax,0x4f
  41d549:	out    dx,al
  41d54a:	and    BYTE PTR ds:0x3115fa2b,cl
  41d550:	ret    
  41d551:	outs   dx,DWORD PTR ds:[esi]
  41d552:	mov    edx,0x3f4f0520
  41d557:	pop    ebp
  41d558:	shl    BYTE PTR [ebx+esi*4-0x5da964be],1
  41d55f:	imul   esp
  41d561:	in     al,0x5c
  41d563:	hlt    
  41d564:	bound  ecx,QWORD PTR [edi+0x22]
  41d567:	inc    ebx
  41d568:	xchg   ebx,eax
  41d569:	fwait
  41d56a:	pop    ss
  41d56b:	outs   dx,BYTE PTR ds:[esi]
  41d56c:	retf   0x63bd
  41d56f:	sbb    DWORD PTR [edi-0x79],ebp
  41d572:	dec    esi
  41d573:	das    
  41d574:	pop    es
  41d575:	pop    ecx
  41d576:	stos   BYTE PTR es:[edi],al
  41d577:	mov    dh,cl
  41d579:	lods   al,BYTE PTR ds:[esi]
  41d57a:	push   ecx
  41d57b:	imul   esp,DWORD PTR [ebp+0x5b],0x60
  41d57f:	fwait
  41d580:	sbb    esp,edi
  41d582:	test   al,0x7a
  41d584:	fist   DWORD PTR [eax-0x30]
  41d587:	retf   0xcfaf
  41d58a:	(bad)  
  41d58b:	xchg   edx,eax
  41d58c:	xchg   edx,eax
  41d58d:	mov    ebx,0xcb79e563
  41d592:	lods   al,BYTE PTR ds:[esi]
  41d593:	adc    BYTE PTR [ebx+0x48fc73ee],al
  41d599:	pop    esp
  41d59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d59b:	pusha  
  41d59c:	fst    DWORD PTR [eax+0x6684da3b]
  41d5a2:	lods   al,BYTE PTR ds:[esi]
  41d5a3:	xor    ebx,DWORD PTR [esi-0x80]
  41d5a6:	xchg   BYTE PTR [eax],cl
  41d5a8:	mov    dh,0x7a
  41d5aa:	aad    0xa
  41d5ac:	nop
  41d5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ae:	rcr    DWORD PTR [edi+0x26],1
  41d5b1:	and    esp,edi
  41d5b3:	aas    
  41d5b4:	pop    eax
  41d5b5:	inc    esi
  41d5b6:	jmp    0x9e35:0xab311850
  41d5bd:	lock jnp 0x41d63b
  41d5c0:	cmp    ah,BYTE PTR [ebp+ebp*8+0x19139134]
  41d5c7:	inc    esi
  41d5c8:	mov    eax,0x4f478d4e
  41d5cd:	mov    ebx,0xf5a831
  41d5d2:	jae    0x41d611
  41d5d4:	ror    DWORD PTR [edx],0x79
  41d5d7:	stos   DWORD PTR es:[edi],eax
  41d5d8:	fwait
  41d5d9:	mov    al,ds:0x1b6980df
  41d5de:	cmc    
  41d5df:	retf   
  41d5e0:	out    0x81,eax
  41d5e2:	fisub  DWORD PTR [ecx]
  41d5e4:	add    DWORD PTR [esi+0x49],ebx
  41d5e7:	mov    ecx,DWORD PTR [ebp-0x4bc32d7d]
  41d5ed:	dec    esp
  41d5ee:	xchg   edi,eax
  41d5ef:	bound  ecx,QWORD PTR [ebx]
  41d5f1:	gs add al,0x12
  41d5f4:	mov    esi,0x38e076dc
  41d5f9:	xchg   ecx,eax
  41d5fa:	inc    ebx
  41d5fb:	fiadd  WORD PTR [ebp+0x5e93db20]
  41d601:	scas   al,BYTE PTR es:[edi]
  41d602:	mov    bh,0x1d
  41d604:	sub    eax,0x6324f43c
  41d609:	dec    edx
  41d60a:	mov    WORD PTR [edx],es
  41d60c:	jmp    0x41d657
  41d60e:	cdq    
  41d60f:	test   eax,0xa9715fde
  41d614:	jecxz  0x41d5c3
  41d616:	and    eax,0xb3f95378
  41d61b:	adc    ch,BYTE PTR ds:0xaf76bc6a
  41d621:	jne    0x41d65b
  41d623:	cmp    al,BYTE PTR [ecx+0x72]
  41d626:	(bad)  
  41d627:	hlt    
  41d628:	xchg   DWORD PTR [eax],ecx
  41d62a:	ficom  DWORD PTR [eax]
  41d62c:	mov    gs,WORD PTR es:[esp+eax*8]
  41d630:	repnz ror esp,0xf8
  41d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d635:	xchg   edi,eax
  41d636:	jno    0x41d69b
  41d638:	leave  
  41d639:	loope  0x41d632
  41d63b:	jge    0x41d631
  41d63d:	shr    DWORD PTR [edx],1
  41d63f:	rcr    BYTE PTR [ebx-0x14fdb16b],1
  41d645:	rol    DWORD PTR [esi+eax*8+0x0],1
  41d649:	push   cs
  41d64a:	(bad)  
  41d64b:	(bad)  
  41d64c:	popf   
  41d64d:	xor    esi,esi
  41d64f:	and    BYTE PTR [edx-0x50354df0],0x72
  41d656:	jp     0x41d657
  41d658:	js     0x41d651
  41d65a:	shl    BYTE PTR ds:0xf0fd716,cl
  41d660:	(bad)  [eax+ebx*4+0x65]
  41d664:	add    al,0xa1
  41d666:	push   eax
  41d667:	mov    edx,0x30eff775
  41d66c:	fstp   st(1)
  41d66e:	xchg   al,bl
  41d670:	xor    eax,0x5abd857c
  41d675:	(bad)  
  41d677:	pop    edx
  41d678:	sub    dl,al
  41d67a:	pop    es
  41d67b:	call   0x6efd17e0
  41d680:	xchg   esi,eax
  41d681:	fmul   st,st(0)
  41d683:	cdq    
  41d684:	inc    ebp
  41d685:	faddp  st(3),st
  41d687:	push   0x73
  41d689:	das    
  41d68a:	sub    BYTE PTR [esi+0x7c],bh
  41d68d:	arpl   WORD PTR [ebx+0x7f9fd0a4],dx
  41d693:	and    eax,0x60384bd4
  41d698:	outs   dx,BYTE PTR ds:[esi]
  41d699:	pop    ds
  41d69a:	jmp    0xff6:0x21563d3b
  41d6a1:	cmc    
  41d6a2:	mov    DWORD PTR [eax],esi
  41d6a4:	sub    DWORD PTR [edi+0x42c8af98],edx
  41d6aa:	xchg   DWORD PTR ds:[edx+0xa3f7b61],esi
  41d6b1:	cdq    
  41d6b2:	fidiv  DWORD PTR [edi-0x70]
  41d6b5:	xor    ch,BYTE PTR [ecx-0x67f7c696]
  41d6bb:	(bad)  
  41d6bd:	pop    ebp
  41d6be:	stc    
  41d6bf:	jl     0x41d6a9
  41d6c1:	sub    al,0x88
  41d6c3:	mov    dh,0xba
  41d6c5:	ja     0x41d6b7
  41d6c7:	in     al,0x82
  41d6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6cb:	and    BYTE PTR [edx+ecx*4+0x5924f341],0x30
  41d6d3:	clc    
  41d6d4:	inc    eax
  41d6d5:	push   edx
  41d6d6:	call   0x62b3:0x3656a1d3
  41d6dd:	mov    ds:0x8e800a20,eax
  41d6e2:	jno    0x41d665
  41d6e4:	shl    DWORD PTR [ebp-0x67],1
  41d6e7:	xor    DWORD PTR [edx-0x60],esp
  41d6ea:	stc    
  41d6eb:	add    BYTE PTR [ebp-0x4bb8d79e],cl
  41d6f1:	in     eax,0xc6
  41d6f3:	leave  
  41d6f4:	repnz (bad) 
  41d6f6:	adc    eax,DWORD PTR [edx]
  41d6f8:	dec    edi
  41d6f9:	aaa    
  41d6fa:	cmp    esi,ecx
  41d6fc:	popa   
  41d6fd:	add    dh,0x82
  41d700:	fnstcw WORD PTR [edi+0x2d]
  41d703:	mov    DWORD PTR [esi+0x75],eax
  41d706:	cmp    BYTE PTR [esi],0x4d
  41d709:	into   
  41d70a:	fisttp QWORD PTR [ebx+edx*1+0x4c]
  41d70e:	out    dx,eax
  41d70f:	or     BYTE PTR [esi+eiz*4],0xa1
  41d713:	es aas 
  41d715:	xchg   ebx,eax
  41d716:	adc    ebx,DWORD PTR ds:0x450a7f1f
  41d71c:	or     bl,BYTE PTR [eax-0x462cf8e2]
  41d722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d723:	mov    edx,0x8634843d
  41d728:	push   ebp
  41d729:	and    ch,al
  41d72b:	rol    BYTE PTR [eax+0x3c],cl
  41d72e:	or     BYTE PTR [ebx],0xfc
  41d731:	cmp    eax,0x41b43251
  41d736:	ret    
  41d737:	and    BYTE PTR [edi+edi*2],bh
  41d73a:	data16 jne 0x41d78c
  41d73d:	xor    eax,0x65e289f4
  41d742:	addr16 lahf 
  41d744:	mov    edx,ds
  41d746:	in     eax,dx
  41d747:	mov    al,0x14
  41d749:	jne    0x41d722
  41d74b:	sbb    bh,BYTE PTR [edx]
  41d74d:	sar    DWORD PTR [edx-0x5dc6cb2a],1
  41d753:	push   ecx
  41d754:	lods   al,BYTE PTR ds:[esi]
  41d755:	stos   BYTE PTR es:[edi],al
  41d756:	enter  0x6a14,0xb7
  41d75a:	push   esp
  41d75b:	and    al,0xbb
  41d75d:	cmp    eax,0x5a3c2eae
  41d762:	adc    al,0x6b
  41d764:	repnz jmp FWORD PTR [ebx+0xd]
  41d768:	jnp    0x41d7a1
  41d76a:	pop    edi
  41d76b:	xor    cl,BYTE PTR [ebx+0x194f1b5e]
  41d771:	jo     0x41d7a0
  41d773:	jne    0x41d7a3
  41d775:	fistp  QWORD PTR [eax+0x50]
  41d778:	fstp   QWORD PTR [edx+ebx*2-0x10]
  41d77c:	sub    esp,DWORD PTR [ebx-0x2c]
  41d77f:	or     eax,0x8a9a350c
  41d784:	xor    DWORD PTR [edi+0x20d4f74f],eax
  41d78a:	outs   dx,BYTE PTR ds:[esi]
  41d78b:	lods   al,BYTE PTR ds:[esi]
  41d78c:	fnstcw WORD PTR [eax+0x21]
  41d78f:	ins    DWORD PTR es:[edi],dx
  41d790:	sti    
  41d791:	mov    eax,0x4e354931
  41d796:	cdq    
  41d797:	and    eax,0x66209d8c
  41d79c:	cs repz push 0x59
  41d7a0:	rcr    esi,1
  41d7a2:	jmp    0x1938:0xae2c38b5
  41d7a9:	add    DWORD PTR [ecx],eax
  41d7ab:	sub    eax,ebp
  41d7ad:	sar    dh,1
  41d7af:	shr    DWORD PTR [ebx-0x16c5d99f],cl
  41d7b5:	cmp    DWORD PTR [ebx],esp
  41d7b7:	cmp    ebp,DWORD PTR [edx-0x52]
  41d7ba:	xor    DWORD PTR [ecx+0x19],0x12d5716
  41d7c1:	dec    edx
  41d7c2:	and    DWORD PTR [edx-0x687ca8d9],ebx
  41d7c8:	shl    BYTE PTR [esi],0x7b
  41d7cb:	mov    ds:0x815ea0c4,eax
  41d7d0:	xlat   BYTE PTR ds:[ebx]
  41d7d1:	fdivr  st(5),st
  41d7d3:	mov    ds:0x7cc62e30,al
  41d7d8:	jae    0x41d790
  41d7da:	inc    eax
  41d7db:	dec    ebx
  41d7dc:	or     eax,0x65f6c90c
  41d7e1:	and    eax,0x820cb076
  41d7e6:	jbe    0x41d843
  41d7e8:	cmp    eax,0x4fa3cbd0
  41d7ed:	xchg   ecx,eax
  41d7ee:	bound  edi,QWORD PTR [edx-0x4e7df146]
  41d7f4:	pop    esp
  41d7f5:	cmc    
  41d7f6:	daa    
  41d7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7f8:	sbb    eax,0x14ab6c13
  41d7fd:	cld    
  41d7fe:	xlat   BYTE PTR ds:[ebx]
  41d7ff:	mov    ebp,0x9954b594
  41d804:	jb     0x41d7c6
  41d806:	mov    ebp,0xbd41eda5
  41d80b:	xchg   esp,eax
  41d80c:	mov    ebx,0x714af6b7
  41d811:	lea    esi,[ecx+0x506be73b]
  41d817:	pop    ebp
  41d818:	or     ebx,edx
  41d81a:	out    dx,eax
  41d81b:	fldenv [edi-0x548ebd36]
  41d821:	xor    ecx,DWORD PTR [esi]
  41d823:	lock xchg BYTE PTR [edx+0x1b],ah
  41d827:	push   edx
  41d828:	shl    BYTE PTR [edx-0x2e],0x2c
  41d82c:	orps   xmm2,xmm2
  41d82f:	es xor eax,0x2a1414f4
  41d835:	test   al,0x2b
  41d837:	out    dx,al
  41d838:	int3   
  41d839:	out    0x8a,al
  41d83b:	xchg   DWORD PTR ds:0x85fe3067,ebp
  41d841:	jae    0x41d887
  41d843:	in     al,dx
  41d844:	fst    DWORD PTR [edx+esi*4+0x4a79903c]
  41d84b:	jno    0x41d857
  41d84d:	in     al,dx
  41d84e:	pop    eax
  41d84f:	pushf  
  41d850:	loopne 0x41d7e1
  41d852:	sub    al,0xc4
  41d854:	(bad)  
  41d855:	je     0x41d86d
  41d857:	xchg   ebx,eax
  41d858:	push   esp
  41d859:	jno    0x41d88d
  41d85b:	ja     0x41d898
  41d85d:	in     al,0x10
  41d85f:	pop    DWORD PTR [esi]
  41d861:	pushf  
  41d862:	jns    0x41d7fb
  41d864:	ret    
  41d865:	and    DWORD PTR ds:[ebp+0x74a89bc1],ebp
  41d86c:	(bad)  
  41d86e:	xor    edi,DWORD PTR [esi-0x2d]
  41d871:	je     0x41d8c3
  41d873:	jg     0x41d85a
  41d875:	mov    bh,0x4f
  41d877:	jno    0x41d876
  41d879:	add    ebp,ebp
  41d87b:	mov    al,ds:0x456509d7
  41d880:	jnp    0x41d859
  41d882:	fucomp st(7)
  41d884:	std    
  41d885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d886:	fstp   TBYTE PTR [ebx-0x30]
  41d889:	cmp    eax,0x5d7ebf72
  41d88e:	out    dx,al
  41d88f:	mov    ds:0x43f9f10b,al
  41d895:	cmp    dh,BYTE PTR ds:0xe9a6a2d2
  41d89b:	nop
  41d89c:	adc    eax,ebp
  41d89e:	dec    esi
  41d89f:	jae    0x41d902
  41d8a1:	and    BYTE PTR [edx+0x41397cff],bl
  41d8a7:	fiadd  WORD PTR [eax+0x17]
  41d8aa:	inc    ebx
  41d8ab:	pop    esp
  41d8ac:	pop    ebp
  41d8ad:	sar    DWORD PTR [edx],1
  41d8af:	(bad)  
  41d8b0:	pop    ecx
  41d8b1:	or     edi,ebp
  41d8b3:	add    bl,bl
  41d8b5:	mov    bh,0xb2
  41d8b7:	add    al,0xc3
  41d8b9:	sub    al,0xd6
  41d8bb:	pop    edx
  41d8bc:	push   edx
  41d8bd:	cmp    al,BYTE PTR [edi]
  41d8bf:	enter  0x7ca7,0x27
  41d8c3:	mov    ds:0x7828fcd6,al
  41d8c8:	test   esp,0xc9860870
  41d8ce:	cpuid  
  41d8d0:	out    dx,eax
  41d8d1:	pop    eax
  41d8d2:	mov    dh,0xa7
  41d8d4:	shl    BYTE PTR fs:[edi-0x2217e8b8],cl
  41d8db:	ins    DWORD PTR es:[edi],dx
  41d8dc:	scas   al,BYTE PTR es:[edi]
  41d8dd:	xchg   esp,eax
  41d8de:	repnz dec edx
  41d8e0:	test   BYTE PTR [esi],0xd9
  41d8e3:	ja     0x41d92b
  41d8e5:	jmp    0x41d910
  41d8e7:	cld    
  41d8e8:	aas    
  41d8e9:	push   esp
  41d8ea:	mov    esi,0xcbc722e6
  41d8ef:	fwait
  41d8f0:	pop    ecx
  41d8f1:	sbb    edi,DWORD PTR [ecx]
  41d8f3:	or     al,0x79
  41d8f5:	cmp    al,0x30
  41d8f7:	outs   dx,DWORD PTR ds:[esi]
  41d8f8:	cs sub al,0x4e
  41d8fb:	test   DWORD PTR [eax-0x49],eax
  41d8fe:	jno    0x41d925
  41d900:	call   0x5068:0x7c534f0b
  41d907:	inc    eax
  41d908:	cmp    BYTE PTR [ebx+0x5b],bl
  41d90b:	das    
  41d90c:	sbb    ecx,DWORD PTR [ecx-0x39]
  41d90f:	jnp    0x41d977
  41d911:	mov    dh,0x67
  41d913:	add    al,0x5d
  41d915:	rol    edi,cl
  41d917:	(bad)  
  41d918:	pop    ss
  41d919:	(bad)  
  41d91a:	xchg   esi,eax
  41d91b:	sub    al,0xf9
  41d91d:	int    0xc
  41d91f:	je     0x41d8a2
  41d921:	pop    esi
  41d922:	adc    dl,BYTE PTR [ecx]
  41d924:	inc    esp
  41d925:	pop    es
  41d926:	jmp    0x41d8f3
  41d928:	popf   
  41d929:	mov    al,0x93
  41d92b:	mov    esp,0xbce9b780
  41d930:	dec    ch
  41d932:	jb     0x41d925
  41d934:	mov    ds:0x447cb2c5,eax
  41d939:	pop    eax
  41d93a:	lock and BYTE PTR [edx-0x2c6e6086],0x4d
  41d942:	out    dx,al
  41d943:	ret    
  41d944:	mov    esi,0x3feaf80d
  41d949:	popa   
  41d94a:	call   0xc30a:0x6c3a577f
  41d951:	(bad)  
  41d952:	in     al,0xd3
  41d954:	aam    0xa9
  41d956:	call   DWORD PTR [esi]
  41d958:	inc    esi
  41d959:	mov    bl,0xe2
  41d95b:	cmp    eax,0x8c85638a
  41d961:	lahf   
  41d962:	cld    
  41d963:	xor    eax,0x4a949687
  41d968:	pop    edx
  41d969:	inc    esi
  41d96a:	mov    edx,0x841655d
  41d96f:	cmove  eax,DWORD PTR [eax]
  41d972:	retf   0xc428
  41d975:	lock hlt 
  41d977:	popf   
  41d978:	mov    esi,DWORD PTR [esi+eax*4-0x55]
  41d97c:	mov    ebp,0xa06c1b64
  41d981:	mov    ds:0xffcc9793,eax
  41d986:	int    0xfc
  41d988:	add    BYTE PTR [ecx],ch
  41d98a:	lods   eax,DWORD PTR ds:[esi]
  41d98b:	shl    DWORD PTR [edi],0x17
  41d98e:	push   edx
  41d98f:	push   edi
  41d990:	sbb    DWORD PTR [edi],esi
  41d992:	mov    al,0x79
  41d994:	fidivr WORD PTR [edi+0x13]
  41d997:	imul   edi,DWORD PTR [eax-0x77710eec],0xb51c56d5
  41d9a1:	in     eax,0x48
  41d9a3:	mov    edi,0xda9b23a4
  41d9a8:	aaa    
  41d9a9:	ins    DWORD PTR es:[edi],dx
  41d9aa:	sbb    DWORD PTR [edi+0x7e71507e],edx
  41d9b0:	retf   
  41d9b1:	push   cs
  41d9b2:	cmp    cl,BYTE PTR [esi]
  41d9b4:	(bad)  
  41d9b6:	bound  eax,QWORD PTR [ecx-0x2b]
  41d9b9:	iret   
  41d9ba:	mov    eax,ds:0xd94c36c6
  41d9bf:	jbe    0x41d9bc
  41d9c1:	dec    edx
  41d9c2:	jmp    0xb487:0x1cc10477
  41d9c9:	inc    esi
  41d9ca:	stc    
  41d9cb:	or     eax,0x25a7610c
  41d9d0:	shl    DWORD PTR [eax],1
  41d9d2:	adc    DWORD PTR [ecx],0xfffffff1
  41d9d5:	xchg   ebp,eax
  41d9d6:	xor    eax,0x7b9c5aa0
  41d9db:	ja     0x41d9fd
  41d9dd:	pop    ecx
  41d9de:	jo     0x41da56
  41d9e0:	mov    ch,0xc4
  41d9e2:	jns    0x41d9ca
  41d9e4:	xlat   BYTE PTR ds:[ebx]
  41d9e5:	xchg   al,al
  41d9e7:	xor    dl,BYTE PTR [edi]
  41d9e9:	xchg   edx,edi
  41d9eb:	mov    ebp,0x8ea9d752
  41d9f0:	adc    BYTE PTR [ebx-0x1a40cd3b],ch
  41d9f6:	dec    esp
  41d9f7:	(bad)
  41d9fb:	sbb    al,0x59
  41d9fd:	pop    edx
  41d9fe:	daa    
  41d9ff:	push   ebx
  41da00:	mov    ebp,0x961ac3b8
  41da05:	adc    DWORD PTR [ebp+0x3dae158e],0x46a99770
  41da0f:	sbb    ah,BYTE PTR [esi+eax*1]
  41da12:	or     DWORD PTR [esi],esp
  41da14:	lods   eax,DWORD PTR ds:[esi]
  41da15:	sub    al,0xe0
  41da17:	xlat   BYTE PTR ds:[ebx]
  41da18:	mov    esp,ebx
  41da1a:	aas    
  41da1b:	(bad)  
  41da1c:	(bad)  
  41da1d:	push   esi
  41da1e:	sub    edx,DWORD PTR [ebp-0x79]
  41da21:	push   ebp
  41da22:	dec    edx
  41da23:	js     0x41da72
  41da25:	dec    DWORD PTR [ebp-0x5b]
  41da28:	les    eax,FWORD PTR [edi+0x1e]
  41da2b:	cmp    ebx,DWORD PTR [ecx-0x70]
  41da2e:	push   edx
  41da2f:	imul   eax,DWORD PTR [ebp+0x6f],0xc0daba4a
  41da36:	int    0x23
  41da38:	xor    eax,0x89b26803
  41da3d:	mov    ah,0x9c
  41da3f:	dec    ebp
  41da40:	mov    WORD PTR [ebx-0x20],cs
  41da43:	or     BYTE PTR [ebp+0x4c],ch
  41da46:	pop    ebx
  41da47:	cmp    bh,BYTE PTR ds:0xf29adc4f
  41da4d:	sbb    ah,BYTE PTR [ebp-0x14]
  41da50:	jecxz  0x41d9ec
  41da52:	imul   esp,DWORD PTR [edx],0x91098114
  41da58:	mov    ah,0xed
  41da5a:	xor    BYTE PTR [ebx-0x81f6afb],0xfe
  41da61:	ja     0x41da61
  41da63:	imul   dx,WORD PTR [ecx],0x61b6
  41da68:	mov    ch,0xd4
  41da6a:	lahf   
  41da6b:	ds iret 
  41da6d:	inc    ecx
  41da6e:	ins    DWORD PTR es:[edi],dx
  41da6f:	sbb    dl,BYTE PTR [esi-0x1a9933ff]
  41da75:	lock ret 0x5801
  41da79:	test   eax,0x7647facd
  41da7e:	adc    eax,0x889de8f7
  41da83:	and    DWORD PTR [edx],0x2fadd3eb
  41da89:	adc    bl,bh
  41da8b:	xor    DWORD PTR [esi],0x67
  41da8e:	or     BYTE PTR [edi],al
  41da90:	cs mov cl,0x30
  41da93:	jno    0x41da4d
  41da95:	fisttp DWORD PTR [ebx-0x7c97113a]
  41da9b:	cmp    BYTE PTR [ebx+edi*1],dh
  41da9e:	mov    ss,WORD PTR [esi]
  41daa0:	push   ecx
  41daa1:	cmp    cl,BYTE PTR [ebx+0x38]
  41daa4:	daa    
  41daa5:	mov    BYTE PTR [eax+0x7ecc42c6],bh
  41daab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daac:	shl    DWORD PTR [esi+0x58],1
  41daaf:	sti    
  41dab0:	outs   dx,DWORD PTR ds:[esi]
  41dab1:	add    eax,0xbc5ac77d
  41dab6:	and    eax,DWORD PTR [eax]
  41dab8:	test   eax,0xee2de0bb
  41dabd:	mov    edx,0x50ed7002
  41dac2:	call   0xfc72:0x8ed0e902
  41dac9:	lock and cl,BYTE PTR [edi-0x2a]
  41dacd:	rcr    DWORD PTR [eax-0x15],0x45
  41dad1:	test   DWORD PTR [edi+0x40c19b0b],ebx
  41dad7:	test   eax,0x72644888
  41dadc:	mov    bl,0xa1
  41dade:	push   edx
  41dadf:	mov    dl,0x98
  41dae1:	aad    0x1
  41dae3:	cmp    DWORD PTR [ebx],0x72
  41dae6:	jecxz  0x41dad2
  41dae8:	dec    edx
  41dae9:	mov    ecx,0x451d0215
  41daee:	mov    al,0x9a
  41daf0:	loope  0x41db66
  41daf2:	sbb    DWORD PTR [ebx],0x3d4db252
  41daf8:	push   ecx
  41daf9:	or     eax,0x3169e2e9
  41dafe:	add    DWORD PTR [esi],esp
  41db00:	cmp    edx,ebx
  41db02:	or     eax,0xc2af1e4
  41db07:	xchg   ebp,eax
  41db08:	cmc    
  41db09:	fst    DWORD PTR [esi-0x23560191]
  41db0f:	ror    ebx,cl
  41db11:	ins    BYTE PTR es:[edi],dx
  41db12:	in     eax,0x16
  41db14:	xchg   DWORD PTR [esi-0x1b224559],ecx
  41db1a:	jne    0x41dad5
  41db1c:	or     BYTE PTR [esi+edi*2],0x1d
  41db20:	xchg   ecx,eax
  41db21:	aam    0x2e
  41db23:	adc    al,BYTE PTR [ebx]
  41db25:	fnstcw WORD PTR [ebx+0x19716c11]
  41db2b:	jle    0x41db34
  41db2d:	jo     0x41dafe
  41db2f:	or     esi,ebx
  41db31:	sub    dl,BYTE PTR ds:0x6f1005f7
  41db37:	popa   
  41db38:	xor    BYTE PTR [edi-0x38],bh
  41db3b:	sub    DWORD PTR [edx-0x4a],ebx
  41db3e:	imul   esp,DWORD PTR [edi],0xffffff86
  41db41:	rol    BYTE PTR [esp+edx*1+0x76fa78c4],cl
  41db48:	inc    ebx
  41db49:	jbe    0x41dadd
  41db4b:	stos   DWORD PTR es:[edi],eax
  41db4c:	call   FWORD PTR [ebx-0x45]
  41db4f:	mov    ch,0x86
  41db51:	shl    DWORD PTR [ecx+0x63],0x5d
  41db55:	xchg   DWORD PTR [eax-0x75462e8f],eax
  41db5b:	scas   al,BYTE PTR es:[edi]
  41db5c:	ret    
  41db5d:	sti    
  41db5e:	fld    DWORD PTR [edi]
  41db60:	add    eax,0x7a39a8b7
  41db65:	push   es
  41db66:	repz dec edi
  41db68:	add    eax,0x96b587a1
  41db6d:	jle    0x41daf1
  41db6f:	mov    esp,0x76683a4f
  41db74:	ret    
  41db75:	in     al,dx
  41db76:	mov    DWORD PTR [ecx-0x59922202],esp
  41db7c:	pop    es
  41db7d:	cmp    DWORD PTR [esi],esp
  41db7f:	bound  ebx,QWORD PTR [ebx-0x57]
  41db82:	stc    
  41db83:	pop    ebp
  41db84:	sbb    ah,dl
  41db86:	xor    DWORD PTR [edi],edi
  41db88:	repz jnp 0x41db20
  41db8b:	xchg   esi,eax
  41db8c:	cwde   
  41db8d:	xor    edi,edi
  41db8f:	add    ecx,edx
  41db91:	call   0x523d:0x4b0169d7
  41db98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db99:	add    DWORD PTR [edi+0x26],eax
  41db9c:	or     eax,0xd2dc28de
  41dba1:	mov    ebx,DWORD PTR [esi]
  41dba3:	adc    DWORD PTR [esi-0x48382afb],esi
  41dba9:	jns    0x41dc1f
  41dbab:	lea    ecx,[ebx-0x180c77d0]
  41dbb1:	scas   eax,DWORD PTR es:[edi]
  41dbb2:	inc    ecx
  41dbb3:	jno    0x41dc04
  41dbb5:	test   BYTE PTR ds:0xe9b8804,ah
  41dbbb:	lock pop edi
  41dbbd:	cmc    
  41dbbe:	xchg   BYTE PTR [eax],al
  41dbc0:	or     DWORD PTR [esi+0x4fcd81eb],esp
  41dbc6:	xchg   esi,eax
  41dbc7:	in     eax,0x53
  41dbc9:	test   BYTE PTR [esi-0x6],al
  41dbcc:	outs   dx,BYTE PTR ds:[esi]
  41dbcd:	rol    DWORD PTR ds:0x516bf97b,cl
  41dbd3:	xchg   ecx,eax
  41dbd4:	ror    BYTE PTR [edi-0x4e],0x3d
  41dbd8:	push   esp
  41dbd9:	outs   dx,BYTE PTR ds:[esi]
  41dbda:	cld    
  41dbdb:	call   FWORD PTR [ecx+ecx*1+0x71]
  41dbdf:	popa   
  41dbe0:	je     0x41dc05
  41dbe2:	or     BYTE PTR [ebp-0x7f97888],0x4a
  41dbe9:	mov    WORD PTR [esp+esi*4+0x79],gs
  41dbed:	(bad)  
  41dbee:	push   edi
  41dbef:	add    eax,0x10b3e556
  41dbf4:	xchg   ecx,eax
  41dbf5:	stos   BYTE PTR es:[edi],al
  41dbf6:	shl    BYTE PTR [esi],1
  41dbf8:	inc    ebp
  41dbf9:	int    0x5
  41dbfb:	mov    ecx,0x8969ad1f
  41dc00:	dec    DWORD PTR ds:0x9ce11cf9
  41dc06:	mov    ch,0x3e
  41dc08:	loopne 0x41dc04
  41dc0a:	rcr    BYTE PTR [ebx-0x14ff0699],1
  41dc10:	mov    ebx,0x8f890a63
  41dc15:	cmp    DWORD PTR [esi+0x1d4d70f1],edi
  41dc1b:	mov    eax,0x9cc6333a
  41dc20:	inc    esi
  41dc21:	pop    ebx
  41dc22:	pop    ebx
  41dc23:	pushf  
  41dc24:	clc    
  41dc25:	sbb    ch,BYTE PTR [eax+0x31]
  41dc28:	xchg   esi,eax
  41dc29:	xchg   esi,eax
  41dc2a:	shl    BYTE PTR es:[edx+0x9],1
  41dc2e:	push   cs
  41dc2f:	push   ecx
  41dc30:	ret    
  41dc31:	xchg   ecx,eax
  41dc32:	xchg   ebx,eax
  41dc33:	and    bh,ah
  41dc35:	cmp    edx,DWORD PTR [esp+edx*8+0x279f0143]
  41dc3c:	outs   dx,BYTE PTR ds:[esi]
  41dc3d:	ins    DWORD PTR es:[edi],dx
  41dc3e:	lods   eax,DWORD PTR ds:[esi]
  41dc3f:	scas   eax,DWORD PTR es:[edi]
  41dc40:	sub    eax,0x874b2844
  41dc45:	mov    bh,0xad
  41dc47:	cmp    eax,0x7ecfa34d
  41dc4c:	out    dx,al
  41dc4d:	jns    0x41dca4
  41dc4f:	mov    edx,0x8f5f1e04
  41dc54:	push   ebp
  41dc55:	adc    bh,ah
  41dc57:	test   BYTE PTR [edx-0x28],bl
  41dc5a:	daa    
  41dc5b:	inc    ecx
  41dc5c:	xor    BYTE PTR ds:0xb76b6ee5,ch
  41dc62:	push   ecx
  41dc63:	xor    edi,DWORD PTR [ebp+0x7b6dfca7]
  41dc69:	mov    bh,0x93
  41dc6b:	inc    esi
  41dc6c:	sbb    bl,BYTE PTR [edi-0x19]
  41dc6f:	aam    0xbb
  41dc71:	jo     0x41dc14
  41dc73:	xchg   ebx,eax
  41dc74:	or     eax,0x4460f7b8
  41dc79:	or     al,0x79
  41dc7b:	scas   eax,DWORD PTR es:[edi]
  41dc7c:	ins    DWORD PTR es:[edi],dx
  41dc7d:	adc    BYTE PTR [ecx-0x76],ch
  41dc80:	jo     0x41dc0c
  41dc82:	test   al,0xd7
  41dc84:	pop    eax
  41dc85:	mov    al,0xd4
  41dc87:	(bad)  
  41dc88:	pop    edx
  41dc89:	mov    BYTE PTR [eax-0x6a],dl
  41dc8c:	xchg   edx,eax
  41dc8d:	cmp    eax,0x139c9701
  41dc93:	and    esp,edx
  41dc95:	jne    0x41dc6e
  41dc97:	push   ds
  41dc98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc99:	dec    esi
  41dc9a:	icebp  
  41dc9b:	mov    edx,0x863f3cc
  41dca0:	cmp    ebp,DWORD PTR [ebx-0x78]
  41dca3:	int3   
  41dca4:	icebp  
  41dca5:	sub    al,0x9
  41dca7:	rcr    BYTE PTR [ebp-0x2b27ab7b],0x42
  41dcae:	xlat   BYTE PTR ds:[ebx]
  41dcaf:	popa   
  41dcb0:	addr16 (bad) 
  41dcb2:	push   edi
  41dcb3:	mov    ?,ecx
  41dcb5:	mov    BYTE PTR ds:0xf0635ae8,dh
  41dcbb:	add    dh,BYTE PTR es:[ecx]
  41dcbe:	cs push cs
  41dcc0:	stos   DWORD PTR es:[edi],eax
  41dcc1:	ret    
  41dcc2:	out    0x17,eax
  41dcc4:	pop    edi
  41dcc5:	and    al,0x8b
  41dcc7:	popa   
  41dcc8:	adc    esp,edx
  41dcca:	cmp    eax,0x2a4c6bf6
  41dccf:	ret    0x415d
  41dcd2:	mov    eax,0x648ef59e
  41dcd7:	pop    ds
  41dcd8:	xor    al,0xb0
  41dcda:	push   ss
  41dcdb:	xor    edi,DWORD PTR [ecx+0x6f]
  41dcde:	sbb    esi,DWORD PTR [ebp-0x6a]
  41dce1:	jne    0x41dcde
  41dce3:	and    ecx,0xe736ceec
  41dce9:	pop    eax
  41dcea:	cmp    DWORD PTR [eax],ebx
  41dcec:	and    BYTE PTR [edx-0x192d7526],dh
  41dcf2:	pop    ebx
  41dcf3:	outs   dx,BYTE PTR ds:[esi]
  41dcf4:	int    0x44
  41dcf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcf7:	jnp    0x41dd47
  41dcf9:	call   0xc711:0x548b5ed4
  41dd00:	mov    ebp,0xc0aa3db7
  41dd05:	jge    0x41dd32
  41dd07:	pop    ecx
  41dd08:	in     al,0xdb
  41dd0a:	xor    BYTE PTR ds:0x93edae43,ch
  41dd10:	mov    dl,bh
  41dd12:	mov    dh,0xb1
  41dd14:	push   cs
  41dd15:	jo     0x41dcfc
  41dd17:	ins    BYTE PTR es:[edi],dx
  41dd18:	mov    ecx,?
  41dd1a:	jae    0x41dcf5
  41dd1c:	xchg   esi,eax
  41dd1d:	pop    esi
  41dd1e:	and    ebx,DWORD PTR [esi]
  41dd20:	dec    eax
  41dd21:	iret   
  41dd22:	rol    esp,1
  41dd24:	push   edx
  41dd25:	mov    dh,0xff
  41dd27:	xor    al,BYTE PTR [eax+0x22e842ee]
  41dd2d:	push   eax
  41dd2e:	aas    
  41dd2f:	sbb    al,0x1a
  41dd31:	repnz mov dl,0x1e
  41dd34:	das    
  41dd35:	mov    edi,0xe8063222
  41dd3a:	mov    edx,DWORD PTR [edi]
  41dd3c:	pop    es
  41dd3d:	lea    esi,[eax-0x25]
  41dd40:	in     al,dx
  41dd41:	sbb    dh,BYTE PTR [esi]
  41dd43:	data16 sbb BYTE PTR [edi-0x4d],al
  41dd47:	xor    al,0xff
  41dd49:	fwait
  41dd4a:	cs xor al,0x27
  41dd4d:	in     eax,dx
  41dd4e:	pop    esi
  41dd4f:	push   eax
  41dd50:	push   esi
  41dd51:	pop    edx
  41dd52:	sbb    eax,0x6cabf85f
  41dd57:	and    eax,0x55f49dab
  41dd5c:	mul    ecx
  41dd5e:	adc    DWORD PTR [edi+0x352774f9],esp
  41dd64:	popf   
  41dd65:	pop    esi
  41dd66:	mov    al,ds:0x75b045de
  41dd6b:	mov    edx,0x6d64e1fd
  41dd70:	pop    edi
  41dd71:	sbb    bl,BYTE PTR [edx+0x9]
  41dd74:	jle    0x41ddbc
  41dd76:	iret   
  41dd77:	sbb    esi,DWORD PTR [edx]
  41dd79:	sub    ebx,edx
  41dd7b:	in     eax,dx
  41dd7c:	push   edx
  41dd7d:	leave  
  41dd7e:	jmp    0x41dd6a
  41dd80:	mov    al,ds:0xaacb56a2
  41dd85:	push   ss
  41dd86:	fmul   QWORD PTR [ebx+esi*2-0x6f4ef64f]
  41dd8d:	adc    BYTE PTR [ebx-0x6973e953],dh
  41dd93:	retf   0xc283
  41dd96:	int    0x18
  41dd98:	xchg   esp,eax
  41dd99:	pop    ebp
  41dd9a:	sbb    edx,DWORD PTR [ecx+eax*2]
  41dd9d:	or     DWORD PTR [ecx],ebx
  41dd9f:	aas    
  41dda0:	mov    eax,ds:0x116e714e
  41dda5:	cs mov ah,0xd0
  41dda8:	dec    ebx
  41dda9:	sub    DWORD PTR [ecx],edi
  41ddab:	and    al,BYTE PTR [esi+0x68]
  41ddae:	stc    
  41ddaf:	test   eax,edi
  41ddb1:	mov    esp,DWORD PTR [esi+0x6e]
  41ddb4:	mov    DWORD PTR [ecx],ebp
  41ddb6:	sahf   
  41ddb7:	inc    esp
  41ddb8:	out    0x85,al
  41ddba:	dec    ebx
  41ddbb:	push   ecx
  41ddbc:	arpl   dx,ax
  41ddbe:	getsec 
  41ddc0:	pop    esi
  41ddc1:	adc    al,0x53
  41ddc3:	test   DWORD PTR [ebp-0x48],ebx
  41ddc6:	fcomp  st(3)
  41ddc8:	push   0xc
  41ddca:	jle    0x41de1b
  41ddcc:	(bad)  
  41ddcd:	stos   BYTE PTR es:[edi],al
  41ddce:	push   es
  41ddcf:	pop    esp
  41ddd0:	dec    WORD PTR [eax]
  41ddd3:	loope  0x41de37
  41ddd5:	test   BYTE PTR [ebx+eiz*4-0x27],al
  41ddd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddda:	sbb    eax,0x38b0544f
  41dddf:	adc    eax,0x17ef1ade
  41dde4:	cmc    
  41dde5:	aaa    
  41dde6:	test   DWORD PTR [edx],ebx
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	inc    ebp
  41ddea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddeb:	push   ebx
  41ddec:	jg     0x41dd7c
  41ddee:	loope  0x41de56
  41ddf0:	lods   al,BYTE PTR ds:[esi]
  41ddf1:	rol    BYTE PTR [esi+0x43f7580f],1
  41ddf7:	pop    ds
  41ddf8:	shl    DWORD PTR [esi+0x31],0x19
  41ddfc:	out    0x7e,al
  41ddfe:	in     al,dx
  41ddff:	shr    BYTE PTR [edx-0x18],0x37
  41de03:	js     0x41de56
  41de05:	cmp    al,0xb4
  41de07:	sbb    BYTE PTR [edi+esi*8+0x53],ch
  41de0b:	loope  0x41ddac
  41de0d:	inc    ecx
  41de0e:	mov    ebp,0x93a08d69
  41de13:	test   BYTE PTR [ecx-0x66],bh
  41de16:	es stc 
  41de18:	iret   
  41de19:	lahf   
  41de1a:	dec    esp
  41de1b:	mov    ds:0x92dcc67e,al
  41de20:	mov    al,0xfa
  41de22:	fldz   
  41de24:	icebp  
  41de25:	push   ds
  41de26:	sbb    ebx,DWORD PTR [ecx]
  41de28:	push   0x4a
  41de2a:	or     al,0x43
  41de2c:	mov    bl,0xea
  41de2e:	push   eax
  41de2f:	fwait
  41de30:	push   esi
  41de31:	jno    0x41de14
  41de33:	inc    esi
  41de34:	cmp    ebx,DWORD PTR [ebp-0x24805c00]
  41de3a:	sbb    bl,BYTE PTR [edi+0x6c0db94]
  41de40:	jo     0x41de62
  41de42:	mov    ds:0xfb4ac3b0,al
  41de47:	retf   
  41de48:	lods   eax,DWORD PTR ds:[esi]
  41de49:	and    dh,BYTE PTR [edi-0x7f88df65]
  41de4f:	lahf   
  41de50:	cld    
  41de51:	push   eax
  41de52:	scas   eax,DWORD PTR es:[edi]
  41de53:	and    BYTE PTR [esi-0x43c4a4e3],al
  41de59:	mov    esp,0xccf0d1d8
  41de5e:	or     bl,ch
  41de60:	xchg   BYTE PTR [ecx+0x70],cl
  41de63:	pop    esp
  41de64:	scas   al,BYTE PTR es:[edi]
  41de65:	imul   edi,DWORD PTR [eax+0x6ff95003],0x41
  41de6c:	cmc    
  41de6d:	lahf   
  41de6e:	xlat   BYTE PTR ds:[ebx]
  41de6f:	lock or cl,bl
  41de72:	jb     0x41de32
  41de74:	dec    edx
  41de75:	mov    eax,ds:0x8a6bb9e0
  41de7a:	leave  
  41de7b:	retf   
  41de7c:	leave  
  41de7d:	out    0xc,eax
  41de7f:	sbb    al,0x85
  41de81:	aaa    
  41de82:	and    eax,0x9561e07a
  41de87:	iret   
  41de88:	leave  
  41de89:	jmp    0xf884d9fd
  41de8e:	sti    
  41de8f:	push   ebx
  41de90:	test   BYTE PTR [ecx+0x1fbcaaba],ah
  41de96:	sub    ah,BYTE PTR [ebx+esi*1]
  41de99:	test   eax,0x61862ba8
  41de9e:	mov    al,0x4d
  41dea0:	cmp    DWORD PTR [esi],0xed6d4e27
  41dea6:	push   cs
  41dea7:	jp     0x41de31
  41dea9:	xchg   esp,eax
  41deaa:	(bad)  
  41deac:	or     DWORD PTR [ecx],0xfd0a021d
  41deb2:	mov    ecx,0xc9218eb0
  41deb7:	cwde   
  41deb8:	push   esi
  41deb9:	pop    ebx
  41deba:	add    eax,0x40a40ffb
  41debf:	push   0x2a
  41dec1:	and    bl,BYTE PTR [edx-0x43]
  41dec4:	mov    gs,WORD PTR ds:0xece2005
  41deca:	out    0xe5,al
  41decc:	jmp    0xca3e:0x92a43424
  41ded3:	add    BYTE PTR ds:0x60ce7cde,ch
  41ded9:	inc    esp
  41deda:	cdq    
  41dedb:	mov    dh,0x57
  41dedd:	int3   
  41dede:	arpl   WORD PTR [ebx],bx
  41dee0:	inc    esi
  41dee1:	mov    BYTE PTR gs:[eax+0x7227918a],dl
  41dee8:	clc    
  41dee9:	inc    ebx
  41deea:	push   ebx
  41deeb:	js     0x41deee
  41deed:	(bad)  
  41deee:	pushf  
  41deef:	outs   dx,DWORD PTR ds:[esi]
  41def0:	inc    ecx
  41def1:	xchg   esp,eax
  41def2:	outs   dx,DWORD PTR ds:[esi]
  41def3:	add    dl,BYTE PTR [ecx]
  41def5:	gs xchg ebx,eax
  41def7:	fstp   QWORD PTR [ebx]
  41def9:	dec    edx
  41defa:	sbb    DWORD PTR [ebp+eiz*4+0x45447085],esp
  41df01:	je     0x41dee9
  41df03:	sbb    esi,DWORD PTR [edi]
  41df05:	fdivr  QWORD PTR ds:0x7183273c
  41df0b:	loop   0x41df1d
  41df0d:	das    
  41df0e:	les    ebp,FWORD PTR [eax-0x315c55aa]
  41df14:	aad    0x26
  41df16:	iret   
  41df17:	sar    BYTE PTR [ebx+ebp*8],0xd6
  41df1b:	in     al,dx
  41df1c:	push   esi
  41df1d:	fisttp DWORD PTR [ecx]
  41df1f:	cli    
  41df20:	or     BYTE PTR [edi+0x5f],bh
  41df23:	push   esi
  41df24:	push   es
  41df25:	add    eax,0x6005ad0b
  41df2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2b:	ja     0x41df05
  41df2d:	jg     0x41df4c
  41df2f:	(bad)  
  41df30:	aad    0x6e
  41df32:	cmc    
  41df33:	sub    ah,BYTE PTR [ecx]
  41df35:	mov    dl,0xac
  41df37:	lods   eax,DWORD PTR ds:[esi]
  41df38:	rol    dh,1
  41df3a:	push   edx
  41df3b:	mov    ch,0x72
  41df3d:	arpl   WORD PTR [ebx-0x44],cx
  41df40:	mov    al,ds:0x6ecd767f
  41df45:	pop    eax
  41df46:	imul   eax,DWORD PTR [ebp-0x57],0xcc02dddd
  41df4d:	adc    dh,BYTE PTR [ebx-0x44]
  41df50:	cmp    BYTE PTR [edx-0x1b5c6541],0x65
  41df57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df58:	adc    esp,DWORD PTR [esp+ebx*1-0x36ffae94]
  41df5f:	loope  0x41df99
  41df61:	ds dec edi
  41df63:	dec    ebp
  41df64:	dec    ebp
  41df65:	les    ebx,FWORD PTR [ebx-0x169947bb]
  41df6b:	mov    cl,BYTE PTR ds:[eax-0x36dd8207]
  41df72:	xchg   esp,eax
  41df73:	push   cs
  41df74:	sbb    al,0xf6
  41df76:	jae    0x41dfbd
  41df78:	mov    ebx,DWORD PTR [esi+ebx*8]
  41df7b:	scas   al,BYTE PTR es:[edi]
  41df7c:	xlat   BYTE PTR ds:[ebx]
  41df7d:	adc    eax,0x572ea63e
  41df83:	dec    ebp
  41df84:	leave  
  41df85:	repnz or BYTE PTR [edi+0x44],0x4a
  41df8a:	mov    esi,0x28f1b6dd
  41df8f:	scas   eax,DWORD PTR es:[edi]
  41df90:	add    DWORD PTR [ecx-0x64],0x3ed2fa30
  41df97:	push   0xffffff96
  41df99:	fwait
  41df9a:	aam    0x5
  41df9c:	and    esi,DWORD PTR [esi+0x71]
  41df9f:	daa    
  41dfa0:	jge    0x41df49
  41dfa2:	pop    ds
  41dfa3:	(bad)  
  41dfa4:	and    edi,ebp
  41dfa6:	push   cs
  41dfa7:	pop    ebx
  41dfa8:	jg     0x41dfaa
  41dfaa:	int3   
  41dfab:	sbb    dl,BYTE PTR [edi+0x5d30dae7]
  41dfb1:	shl    BYTE PTR [ecx-0x18d47d8],cl
  41dfb7:	jb     0x41df89
  41dfb9:	push   ebx
  41dfba:	sti    
  41dfbb:	call   0x6d26aa8e
  41dfc0:	xchg   ebx,eax
  41dfc1:	out    0xad,al
  41dfc3:	aaa    
  41dfc4:	imul   edi,DWORD PTR [esi-0x61],0x1a
  41dfc8:	dec    edx
  41dfc9:	outs   dx,DWORD PTR ds:[esi]
  41dfca:	psllw  mm1,QWORD PTR [ecx-0x22]
  41dfce:	mov    cl,0x2b
  41dfd0:	fsub   QWORD PTR [edi]
  41dfd2:	(bad)  
  41dfd3:	adc    BYTE PTR [edx+0x31e6c9b9],al
  41dfd9:	fst    QWORD PTR [ebp+eiz*4+0x19]
  41dfdd:	sbb    bl,BYTE PTR [edi+esi*8]
  41dfe0:	je     0x41e00f
  41dfe2:	scas   eax,DWORD PTR es:[edi]
  41dfe3:	jge    0x41e034
  41dfe5:	ret    0xdad7
  41dfe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfe9:	test   cl,bl
  41dfeb:	cld    
  41dfec:	jne    0x41dff9
  41dfee:	idiv   eax
  41dff0:	pop    ebp
  41dff1:	xchg   DWORD PTR [edx],edx
  41dff3:	dec    ebx
  41dff4:	adc    cl,BYTE PTR [edi+0x5bb04162]
  41dffa:	add    BYTE PTR [edx-0x75],al
  41dffd:	sub    BYTE PTR [edi+0x41],ch
  41e000:	pop    esi
  41e001:	loopne 0x41dfc7
  41e003:	mov    gs,WORD PTR [ebx]
  41e005:	sub    ebp,0x43d1452f
  41e00b:	inc    eax
  41e00c:	dec    eax
  41e00d:	pop    edi
  41e00e:	add    dh,BYTE PTR [ebx-0x79]
  41e011:	scas   al,BYTE PTR es:[edi]
  41e012:	retf   
  41e013:	push   ds
  41e014:	div    DWORD PTR [ebx-0x6d467920]
  41e01a:	cmp    ah,BYTE PTR [ebp-0x48472908]
  41e020:	and    eax,0x4e51dd63
  41e025:	leave  
  41e026:	rcr    ecx,1
  41e028:	shl    dh,1
  41e02a:	popf   
  41e02b:	jle    0x41e0a0
  41e02d:	adc    DWORD PTR [ebp+0x62fba6a5],ebx
  41e033:	mov    dl,0x22
  41e035:	dec    esi
  41e036:	mov    cl,0x9e
  41e038:	js     0x41e08c
  41e03a:	jl     0x41e020
  41e03c:	xchg   BYTE PTR [ecx-0x4e0c643d],ah
  41e042:	push   es
  41e043:	mov    esi,0x81e55fa7
  41e048:	jbe    0x41e058
  41e04a:	adc    eax,0xc67d4949
  41e04f:	xor    DWORD PTR [ecx+0x183acd55],ebx
  41e055:	jg     0x41dfde
  41e057:	in     al,0x82
  41e059:	in     al,dx
  41e05a:	js     0x41dfff
  41e05c:	in     eax,0xa8
  41e05e:	scas   al,BYTE PTR es:[edi]
  41e05f:	and    esi,DWORD PTR [ecx-0x21fe2fb7]
  41e065:	sub    BYTE PTR [ebx+ebp*8-0x22],ah
  41e069:	xchg   edi,eax
  41e06a:	xchg   edi,eax
  41e06b:	mov    ebp,0x56adb2c5
  41e070:	push   ds
  41e071:	lods   al,BYTE PTR ds:[esi]
  41e072:	jge    0x41e094
  41e074:	adc    ch,ch
  41e076:	rcr    dh,1
  41e078:	mov    DWORD PTR [eax+0xf01fa45],ebx
  41e07e:	and    BYTE PTR [ecx-0x42],cl
  41e081:	sbb    BYTE PTR [eax+0x71],0x98
  41e085:	pop    esi
  41e086:	adc    edx,DWORD PTR [ecx]
  41e088:	sub    eax,0x98b8aa30
  41e08d:	popa   
  41e08e:	dec    esp
  41e08f:	lahf   
  41e090:	fnstcw WORD PTR [edx+esi*2+0x49]
  41e094:	push   eax
  41e095:	cli    
  41e096:	mov    dh,0x25
  41e098:	dec    esi
  41e099:	pop    edx
  41e09a:	mov    esp,DWORD PTR [eax+0x76]
  41e09d:	(bad)  
  41e09f:	and    al,0xe2
  41e0a1:	int3   
  41e0a2:	mov    WORD PTR [edi],es
  41e0a4:	pop    edx
  41e0a5:	(bad)  
  41e0a6:	nop
  41e0a7:	sbb    ecx,DWORD PTR [ebx+0x5f69a677]
  41e0ad:	xchg   ecx,eax
  41e0ae:	das    
  41e0af:	lods   al,BYTE PTR ds:[esi]
  41e0b0:	lods   al,BYTE PTR ds:[esi]
  41e0b1:	pop    es
  41e0b2:	(bad)  
  41e0b3:	(bad)  
  41e0b4:	cmp    ecx,esp
  41e0b6:	data16 jns 0x41e08f
  41e0b9:	mov    al,0x7d
  41e0bb:	mov    fs,WORD PTR [edi+0x7a90a1ef]
  41e0c1:	xor    BYTE PTR ds:0x2c55789,bh
  41e0c7:	mov    edx,0x3e81b387
  41e0cc:	popa   
  41e0cd:	cdq    
  41e0ce:	jns    0x41e111
  41e0d0:	or     BYTE PTR [ebx+ecx*1-0x706d39d6],dh
  41e0d7:	cmp    eax,0x4dbaeafc
  41e0dc:	push   ecx
  41e0dd:	packuswb mm3,QWORD PTR [ebx-0x529bffcc]
  41e0e4:	popa   
  41e0e5:	sbb    eax,0x24329ace
  41e0ea:	push   esp
  41e0eb:	pop    ebp
  41e0ec:	in     eax,0x0
  41e0ee:	xchg   ecx,eax
  41e0ef:	outs   dx,BYTE PTR ds:[esi]
  41e0f0:	mov    esp,0x7a2ad9da
  41e0f5:	into   
  41e0f6:	into   
  41e0f7:	aas    
  41e0f8:	push   es
  41e0f9:	sub    ebx,esp
  41e0fb:	(bad)  
  41e0fc:	lods   eax,DWORD PTR ds:[esi]
  41e0fd:	(bad)  
  41e0fe:	jo     0x41e091
  41e100:	inc    edi
  41e101:	inc    edi
  41e102:	jnp    0x41e162
  41e104:	mov    bl,0x4c
  41e106:	pop    edi
  41e107:	fdiv   DWORD PTR [edx]
  41e109:	inc    ebp
  41e10a:	lahf   
  41e10b:	sbb    ecx,DWORD PTR [ebx-0x43]
  41e10e:	lea    esi,[ebx]
  41e110:	cmp    BYTE PTR [edx-0x68],cl
  41e113:	(bad)  
  41e114:	cmc    
  41e115:	loop   0x41e0bc
  41e117:	ds mov ebp,es
  41e11a:	sbb    bh,BYTE PTR [eax-0x78e48ce0]
  41e120:	es sbb al,0xe1
  41e123:	in     al,dx
  41e124:	(bad)  
  41e125:	(bad)  
  41e126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e127:	es mov esi,0x1bc0c0ac
  41e12d:	in     al,dx
  41e12e:	jno    0x41e0bc
  41e130:	xchg   edx,eax
  41e131:	sbb    DWORD PTR [eax+esi*1-0x4166b1fc],0xffffffe5
  41e139:	sub    dh,ch
  41e13b:	or     DWORD PTR [ebp+0x454d46fb],ecx
  41e141:	dec    esp
  41e142:	dec    ebx
  41e143:	mov    ch,0x5b
  41e145:	adc    BYTE PTR [ecx-0x3ecdb33d],bh
  41e14b:	push   0x2
  41e14d:	addr16 ds cmp eax,0x99c763f8
  41e154:	mov    eax,ds:0xd4a3b416
  41e159:	jae    0x41e179
  41e15b:	sti    
  41e15c:	push   0x78
  41e15e:	(bad)  
  41e15f:	mov    dh,0x94
  41e161:	mov    edx,0x5a983f8c
  41e166:	(bad)  
  41e169:	fist   DWORD PTR [edx+0x591a1ca4]
  41e16f:	jb     0x41e10b
  41e171:	das    
  41e172:	sub    dl,al
  41e174:	dec    eax
  41e175:	in     al,0x67
  41e177:	(bad)  
  41e178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e179:	ss pop esi
  41e17b:	sbb    eax,edx
  41e17d:	mov    eax,ds:0xcbac0429
  41e182:	inc    edi
  41e183:	adc    ch,BYTE PTR [edi+eiz*2]
  41e186:	or     al,0x47
  41e188:	sub    al,0x41
  41e18a:	out    dx,al
  41e18b:	nop
  41e18c:	inc    edx
  41e18d:	xlat   BYTE PTR ds:[ebx]
  41e18e:	sbb    al,0xda
  41e190:	inc    ecx
  41e191:	dec    ecx
  41e192:	ret    
  41e193:	xchg   BYTE PTR gs:[ecx-0x4],bh
  41e197:	sbb    eax,DWORD PTR [esi]
  41e199:	jb     0x41e1a6
  41e19b:	mov    esp,0xbdc821cf
  41e1a0:	stc    
  41e1a1:	adc    ebp,edx
  41e1a3:	dec    edi
  41e1a4:	shl    al,0x7e
  41e1a7:	sbb    al,BYTE PTR [edi-0x63d7573c]
  41e1ad:	jae    0x41e19f
  41e1af:	fld    TBYTE PTR [esp+eax*2-0x659e94a5]
  41e1b6:	push   edi
  41e1b7:	mov    WORD PTR [eax+eax*4+0x23148b6b],es
  41e1be:	out    0x44,eax
  41e1c0:	or     BYTE PTR [ebp+0x17],dl
  41e1c3:	add    al,0xcc
  41e1c5:	ret    0x3b4
  41e1c8:	mov    cl,0x52
  41e1ca:	shl    BYTE PTR [edx],1
  41e1cc:	add    ebp,DWORD PTR [ebp-0x2b]
  41e1cf:	adc    bl,BYTE PTR [edi-0x20]
  41e1d2:	pop    ss
  41e1d3:	or     al,BYTE PTR [ebx+0x50]
  41e1d6:	in     al,0x85
  41e1d8:	xor    bh,BYTE PTR [ebp-0x25]
  41e1db:	mov    bh,0x7a
  41e1dd:	fnstenv [ecx]
  41e1df:	pushf  
  41e1e0:	cmp    esi,DWORD PTR [ebp-0x46b41acf]
  41e1e6:	cli    
  41e1e7:	mov    al,ds:0x27654811
  41e1ec:	jg     0x41e1d0
  41e1ee:	pop    es
  41e1ef:	leave  
  41e1f0:	hlt    
  41e1f1:	mov    ecx,0xf043edb
  41e1f6:	adc    al,0xb3
  41e1f8:	das    
  41e1f9:	icebp  
  41e1fa:	add    al,0x10
  41e1fc:	ja     0x41e219
  41e1fe:	dec    ebx
  41e1ff:	cdq    
  41e200:	add    BYTE PTR [edx],bh
  41e202:	in     eax,dx
  41e203:	push   es
  41e204:	mov    ebx,0xcce51538
  41e20a:	and    eax,0xf8191c88
  41e20f:	dec    edi
  41e210:	dec    eax
  41e211:	jno    0x41e206
  41e213:	ins    DWORD PTR es:[edi],dx
  41e214:	mov    al,BYTE PTR [ebx-0x4e02bc23]
  41e21a:	gs inc esi
  41e21c:	(bad)  
  41e21d:	fcom   DWORD PTR [edi]
  41e21f:	and    eax,0x1b7c14fa
  41e224:	mov    ah,BYTE PTR [edx-0x47c463f0]
  41e22a:	and    bh,ch
  41e22c:	and    BYTE PTR [edi+0x12],0x7c
  41e230:	mov    bh,0x51
  41e232:	pop    ebp
  41e233:	pop    ds
  41e234:	jno    0x41e25f
  41e236:	push   ebp
  41e237:	fiadd  WORD PTR [ecx]
  41e239:	pop    esi
  41e23a:	lods   eax,DWORD PTR ds:[esi]
  41e23b:	or     edx,ebp
  41e23d:	lea    ecx,[ebx+ecx*2+0x42]
  41e241:	push   ds
  41e242:	push   ecx
  41e243:	rcl    DWORD PTR [edi-0x40],cl
  41e246:	mov    bh,0x26
  41e248:	xchg   ebp,eax
  41e249:	xor    BYTE PTR [esi+esi*2+0xac313d],0x32
  41e251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e252:	cwde   
  41e253:	push   edi
  41e254:	cmp    bl,ah
  41e256:	clc    
  41e257:	and    dh,BYTE PTR ds:0x35a1d80e
  41e25d:	or     eax,0xce771175
  41e262:	sbb    al,0xa0
  41e264:	out    0xd9,eax
  41e266:	arpl   WORD PTR [edi+0x51],di
  41e269:	imul   esp,DWORD PTR [esp+edx*2-0x712232da],0x883fce7d
  41e274:	in     eax,0xe6
  41e276:	je     0x41e2d1
  41e278:	dec    ecx
  41e279:	shl    eax,cl
  41e27b:	stos   BYTE PTR es:[edi],al
  41e27c:	loope  0x41e27d
  41e27e:	jmp    0x41e2fd
  41e280:	int3   
  41e281:	sub    al,0xa1
  41e283:	jle    0x41e2e9
  41e285:	adc    BYTE PTR [ecx-0x5e50e180],0xad
  41e28c:	mov    eax,ds:0x428ffd04
  41e291:	xchg   edx,eax
  41e292:	dec    eax
  41e293:	imul   ebp,DWORD PTR [esi-0x3f400e00],0x173c3129
  41e29d:	in     eax,dx
  41e29e:	mov    edx,edx
  41e2a0:	sub    BYTE PTR ds:0x33122d6d,dh
  41e2a7:	xchg   esi,eax
  41e2a8:	lahf   
  41e2a9:	clc    
  41e2aa:	xchg   esp,eax
  41e2ab:	xor    eax,ebp
  41e2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ae:	jp     0x41e321
  41e2b0:	and    ch,BYTE PTR fs:[edx+0x4e054e99]
  41e2b7:	push   edi
  41e2b8:	jge    0x41e24c
  41e2ba:	loope  0x41e293
  41e2bc:	bound  edx,QWORD PTR [eax+0x32]
  41e2bf:	push   ebp
  41e2c0:	repz ss push 0xffffffb9
  41e2c4:	(bad)  
  41e2c5:	and    eax,DWORD PTR [ecx+0x5257f26]
  41e2cb:	push   ebp
  41e2cc:	push   ebp
  41e2cd:	cmp    esi,esp
  41e2cf:	es mov edx,0x9b38c536
  41e2d5:	mov    esi,0x97a46a4e
  41e2da:	xor    eax,0x5234aee
  41e2df:	mov    esp,0x6ccfd769
  41e2e4:	loopne 0x41e26d
  41e2e6:	pop    ebx
  41e2e7:	clc    
  41e2e8:	push   edi
  41e2e9:	push   eax
  41e2ea:	nop
  41e2eb:	fdivrp st(2),st
  41e2ed:	lahf   
  41e2ee:	gs test eax,esi
  41e2f1:	stos   BYTE PTR es:[edi],al
  41e2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f3:	xchg   ecx,eax
  41e2f4:	mov    esp,DWORD PTR [ecx+ebx*1+0x40]
  41e2f8:	dec    esi
  41e2f9:	sbb    eax,0x6f8c75b4
  41e2fe:	rcr    eax,cl
  41e300:	push   edi
  41e301:	shr    eax,0x4b
  41e304:	pop    eax
  41e305:	xlat   BYTE PTR ds:[ebx]
  41e306:	xor    bh,BYTE PTR [esi+0x704791ea]
  41e30c:	add    BYTE PTR [esi+0x2],0xf5
  41e310:	jge    0x41e326
  41e312:	mov    bh,0x7f
  41e314:	jnp    0x41e312
  41e316:	das    
  41e317:	push   0x65
  41e319:	jl     0x41e2ef
  41e31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31c:	aas    
  41e31d:	ja     0x41e374
  41e31f:	mov    dl,BYTE PTR [ebx]
  41e321:	ffree  st(1)
  41e323:	aaa    
  41e324:	mov    bl,BYTE PTR [edi-0x33]
  41e327:	jg     0x41e37b
  41e329:	push   ebx
  41e32a:	call   0xdb86:0xb48b9e97
  41e331:	pop    esp
  41e332:	popf   
  41e333:	ret    0x3776
  41e336:	test   eax,0xbbf995bf
  41e33b:	stos   BYTE PTR es:[edi],al
  41e33c:	ret    
  41e33d:	aam    0xa1
  41e33f:	xchg   ebx,eax
  41e340:	add    BYTE PTR [edi+edi*2+0x2cb75899],0x8d
  41e348:	xor    al,0x6e
  41e34a:	test   edi,esp
  41e34c:	cmp    eax,0xf82e07dd
  41e351:	sub    al,0xba
  41e353:	sub    eax,DWORD PTR [ecx-0xc650d14]
  41e359:	add    ebp,DWORD PTR [ecx+0x5a]
  41e35c:	mov    ebx,0xe483ccde
  41e361:	out    dx,eax
  41e362:	sbb    DWORD PTR [esi+0x63408508],esp
  41e368:	jae    0x41e34b
  41e36a:	mov    ch,al
  41e36c:	out    0x17,al
  41e36e:	push   ebx
  41e36f:	or     eax,0x3a0c89d3
  41e374:	fild   QWORD PTR [eax]
  41e376:	mov    ds:0x88c2c203,al
  41e37b:	adc    ch,BYTE PTR [edx-0x1674c7e7]
  41e381:	xor    eax,0xfda41966
  41e386:	iret   
  41e387:	stc    
  41e388:	out    dx,eax
  41e389:	mov    DWORD PTR [eax+eiz*1+0x64],esi
  41e38d:	les    eax,FWORD PTR gs:[ebx-0x2e6d319]
  41e394:	mul    DWORD PTR [ebx]
  41e396:	mov    dl,al
  41e398:	cmp    eax,DWORD PTR [ebp-0x61]
  41e39b:	jne    0x41e3b0
  41e39d:	mov    dl,0x5e
  41e39f:	mov    al,0x73
  41e3a1:	jecxz  0x41e378
  41e3a3:	lods   al,BYTE PTR ds:[esi]
  41e3a4:	pusha  
  41e3a5:	je     0x41e370
  41e3a7:	mov    esp,0xbb52c471
  41e3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3ad:	mov    bl,0xdc
  41e3af:	sbb    dl,BYTE PTR [ebx]
  41e3b1:	hlt    
  41e3b2:	push   ebx
  41e3b3:	push   esp
  41e3b4:	stos   DWORD PTR es:[edi],eax
  41e3b5:	imul   edx,DWORD PTR [ebx-0x2d2ecc4f],0x37800a7a
  41e3bf:	jnp    0x41e405
  41e3c1:	test   ebp,0x81a60101
  41e3c7:	int    0xb6
  41e3c9:	inc    esp
  41e3ca:	inc    esp
  41e3cb:	pop    ds
  41e3cc:	mov    esi,0x8059097a
  41e3d1:	retf   
  41e3d2:	fcomp  QWORD PTR [edi-0xf9c9043]
  41e3d8:	adc    DWORD PTR [ebx+0x33],eax
  41e3db:	out    dx,al
  41e3dc:	fwait
  41e3dd:	mov    ebx,0x99fa513f
  41e3e2:	dec    esp
  41e3e3:	call   0x589647ae
  41e3e8:	pusha  
  41e3e9:	xor    BYTE PTR [esi+edi*2+0x27],dl
  41e3ed:	mov    esi,0xda5e7ef6
  41e3f2:	pop    esp
  41e3f3:	or     esi,DWORD PTR [ebx+0x57]
  41e3f6:	add    BYTE PTR [edx],cl
  41e3f8:	in     eax,0x90
  41e3fa:	les    ebp,FWORD PTR [eax]
  41e3fc:	mov    BYTE PTR [ebx],ah
  41e3fe:	mov    edx,edx
  41e400:	das    
  41e401:	add    eax,0x9918e461
  41e406:	pop    edi
  41e407:	add    BYTE PTR [edi],cl
  41e409:	lahf   
  41e40a:	adc    eax,0x90904eb8
  41e40f:	aas    
  41e410:	ret    
  41e411:	adc    ecx,ebp
  41e413:	pop    ecx
  41e414:	pop    edx
  41e415:	aam    0x6c
  41e417:	jb     0x41e46b
  41e419:	inc    ecx
  41e41a:	and    DWORD PTR [ecx+0x21d19d0f],esp
  41e420:	iret   
  41e421:	out    0x93,eax
  41e423:	ins    DWORD PTR es:[edi],dx
  41e424:	mov    ebp,0xe5e61cc8
  41e429:	push   esi
  41e42a:	add    al,0xea
  41e42c:	pushf  
  41e42d:	pop    esi
  41e42e:	jmp    0xb47ec282
  41e433:	mov    bl,0xf7
  41e435:	hlt    
  41e436:	xor    bh,dl
  41e438:	into   
  41e439:	mov    al,ds:0x11935ed8
  41e43e:	add    al,ah
  41e440:	call   0x80d6:0xfd80bf9
  41e447:	cmp    ch,BYTE PTR [ebx+0x6c]
  41e44a:	push   edi
  41e44b:	pop    ss
  41e44c:	mov    esp,DWORD PTR [ebx+0x19]
  41e44f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41e451:	pusha  
  41e452:	add    ebx,DWORD PTR [eax]
  41e454:	(bad)  
  41e455:	pop    eax
  41e456:	jae    0x41e476
  41e458:	lock pop edi
  41e45a:	dec    esi
  41e45b:	xor    DWORD PTR [edx-0x78],edx
  41e45e:	sub    ecx,DWORD PTR [ebx+0x2b]
  41e461:	mov    dl,0x4a
  41e463:	sbb    edx,DWORD PTR [ecx+0x1823ef33]
  41e469:	pop    esp
  41e46a:	addr16 mov dh,0x23
  41e46d:	add    al,0xb9
  41e46f:	and    eax,0x3b5e9ebc
  41e474:	push   edx
  41e475:	pop    edi
  41e476:	je     0x41e402
  41e478:	(bad)  
  41e479:	xchg   ecx,eax
  41e47a:	js     0x41e470
  41e47c:	add    BYTE PTR ds:0x494f5602,ah
  41e482:	jb     0x41e4d7
  41e484:	pop    ecx
  41e485:	push   0x79
  41e487:	sbb    BYTE PTR [edx+0x18],bl
  41e48a:	test   al,0x9
  41e48c:	and    eax,0x56e5a68d
  41e491:	mov    dh,0xb7
  41e493:	jmp    0xc0cd9407
  41e498:	popf   
  41e499:	jns    0x41e4b9
  41e49b:	pop    eax
  41e49c:	test   BYTE PTR [edi+0x26],bl
  41e49f:	mov    DWORD PTR [ebx],esp
  41e4a1:	pop    es
  41e4a2:	pop    edi
  41e4a3:	test   BYTE PTR [esi+ebp*1-0x3d],cl
  41e4a7:	pop    edx
  41e4a8:	pop    edi
  41e4a9:	fsubrp st(5),st
  41e4ab:	sub    ch,BYTE PTR [ebp-0x5b36a79f]
  41e4b1:	or     dl,BYTE PTR [edi]
  41e4b3:	xor    DWORD PTR [esi],esi
  41e4b5:	in     al,dx
  41e4b6:	sbb    BYTE PTR [eax+0x6d],0xea
  41e4ba:	pusha  
  41e4bb:	xchg   esp,eax
  41e4bc:	pop    ss
  41e4bd:	adc    bh,BYTE PTR [ebp-0x3a34844f]
  41e4c3:	(bad)  
  41e4c4:	and    eax,0x214135ea
  41e4c9:	in     eax,dx
  41e4ca:	lods   eax,DWORD PTR ds:[esi]
  41e4cb:	xchg   esi,eax
  41e4cc:	xlat   BYTE PTR ds:[ebx]
  41e4cd:	or     DWORD PTR [edx],ecx
  41e4cf:	cmp    edx,DWORD PTR [edx]
  41e4d1:	push   ebp
  41e4d2:	bnd jne 0x41e4a8
  41e4d5:	pushf  
  41e4d6:	dec    ecx
  41e4d7:	dec    edx
  41e4d8:	jno    0x41e4bf
  41e4da:	test   BYTE PTR [edi+0x7f],ah
  41e4dd:	adc    esi,DWORD PTR [edx-0x3d21668]
  41e4e3:	mov    edi,edx
  41e4e5:	jo     0x41e488
  41e4e7:	xchg   DWORD PTR [esi+0x4a],esi
  41e4ea:	and    BYTE PTR [esi-0x66db40a3],0x6e
  41e4f1:	xor    eax,0x879ced59
  41e4f6:	fcomp  DWORD PTR [esi]
  41e4f8:	call   0xfb6b:0x504b65be
  41e4ff:	jne    0x41e497
  41e501:	or     DWORD PTR [esi+0x2655ce2c],ebp
  41e507:	push   edx
  41e508:	adc    edx,ebp
  41e50a:	fiadd  WORD PTR [ecx-0x18]
  41e50d:	mov    bh,0x74
  41e50f:	js     0x41e4fa
  41e511:	enter  0x1283,0x6c
  41e515:	adc    esi,DWORD PTR [edx]
  41e517:	pop    esi
  41e518:	ins    BYTE PTR es:[edi],dx
  41e519:	hlt    
  41e51a:	ret    
  41e51b:	test   BYTE PTR [ebx-0x52],bh
  41e51e:	xor    DWORD PTR [esi+0x5c],edx
  41e521:	cmp    BYTE PTR [eax+ebp*8+0x5c133dcb],ah
  41e528:	adc    edi,ecx
  41e52a:	inc    eax
  41e52b:	mov    edx,0x996560f0
  41e530:	xchg   edi,eax
  41e531:	icebp  
  41e532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e533:	sbb    bl,BYTE PTR [eax-0x77]
  41e536:	mov    eax,ds:0x96cd2086
  41e53b:	mov    edx,0x1fd85677
  41e540:	sub    eax,DWORD PTR ds:0x1e550bf4
  41e546:	pop    ds
  41e547:	rcl    DWORD PTR [edi],0xf6
  41e54a:	xchg   DWORD PTR [ecx+0x455d2e0b],esi
  41e550:	jmp    0xc46d399e
  41e555:	push   edx
  41e556:	pop    ds
  41e557:	fimul  DWORD PTR [edx+0x58f823e8]
  41e55d:	(bad)  
  41e561:	push   edi
  41e562:	lea    esi,[ecx]
  41e564:	pop    edx
  41e565:	scas   al,BYTE PTR es:[edi]
  41e566:	mov    ah,ch
  41e568:	cmp    al,0xa9
  41e56a:	cdq    
  41e56b:	sub    eax,0xca542e16
  41e570:	test   al,0x7f
  41e572:	and    ah,BYTE PTR [eax]
  41e574:	jp     0x41e533
  41e576:	in     eax,0xa6
  41e578:	mov    al,ds:0x573709f4
  41e57d:	cmp    esp,ebp
  41e57f:	jns    0x41e5dc
  41e581:	cmp    al,0xe
  41e583:	xchg   ebx,eax
  41e584:	add    al,0x74
  41e586:	xchg   esi,eax
  41e587:	shr    edi,1
  41e589:	xor    eax,0x4f65ff8b
  41e58e:	sbb    DWORD PTR [ebp-0x15b30111],esp
  41e594:	js     0x41e564
  41e596:	xchg   edx,eax
  41e597:	jnp    0x41e565
  41e599:	sahf   
  41e59a:	div    esi
  41e59c:	rcr    DWORD PTR [esi-0x4f],cl
  41e59f:	inc    edi
  41e5a0:	add    esp,DWORD PTR [ebx]
  41e5a2:	call   0x22b27135
  41e5a7:	jbe    0x41e5e9
  41e5a9:	jle    0x41e58b
  41e5ab:	fwait
  41e5ac:	aas    
  41e5ad:	sub    dh,BYTE PTR [edi+0x38]
  41e5b0:	cli    
  41e5b1:	not    DWORD PTR [eax-0x7c2308c6]
  41e5b7:	imul   ecx,DWORD PTR ds:0x5e317567,0x12
  41e5be:	mov    ds:0xce19764,al
  41e5c3:	push   esp
  41e5c4:	or     DWORD PTR [esi],ebx
  41e5c6:	rol    BYTE PTR [edx+0x11],0x55
  41e5ca:	clc    
  41e5cb:	enter  0x27b5,0xcf
  41e5cf:	jp     0x41e5b6
  41e5d1:	fbld   TBYTE PTR [ecx-0x11]
  41e5d4:	adc    DWORD PTR [edi],esi
  41e5d6:	stos   DWORD PTR es:[edi],eax
  41e5d7:	retf   
  41e5d8:	loop   0x41e631
  41e5da:	mov    ah,0x33
  41e5dc:	test   DWORD PTR [ebx+0x23],ebx
  41e5df:	push   ecx
  41e5e0:	loope  0x41e63a
  41e5e2:	jmp    0x689ec1c8
  41e5e7:	pop    ebp
  41e5e8:	mov    cl,0xb
  41e5ea:	fdivr  QWORD PTR [ecx-0x7307c8c6]
  41e5f0:	push   eax
  41e5f1:	shl    ebx,cl
  41e5f3:	mov    eax,0xb686f129
  41e5f8:	fimul  WORD PTR [ebx+ebp*2]
  41e5fb:	imul   ebx,edx,0x41
  41e5fe:	imul   ebp,ecx,0x74
  41e601:	aam    0x2b
  41e603:	call   0x2d37e7dd
  41e608:	and    al,bl
  41e60a:	sbb    ecx,DWORD PTR [ebp+esi*2-0x6e20861d]
  41e611:	ret    
  41e612:	xor    al,dh
  41e614:	adc    ebp,DWORD PTR [edi+0x6dbb3ef4]
  41e61a:	adc    al,0xe8
  41e61c:	cmp    eax,0x70944670
  41e621:	and    DWORD PTR [esi],ebx
  41e623:	ins    DWORD PTR es:[edi],dx
  41e624:	xor    eax,DWORD PTR [edx+ebp*2-0x4e06cdfd]
  41e62b:	test   al,0x39
  41e62d:	mov    BYTE PTR [eax],bl
  41e62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e630:	call   0xe49f:0xc5659b7a
  41e637:	sti    
  41e638:	sbb    BYTE PTR es:[eax+ecx*8],0x77
  41e63d:	cmp    eax,0x83ee47e5
  41e642:	inc    esi
  41e643:	sub    DWORD PTR [esp+edi*1+0x59c9d0cc],ebp
  41e64a:	js     0x41e5fc
  41e64c:	(bad)  
  41e64d:	sub    edi,esi
  41e64f:	inc    edx
  41e650:	inc    eax
  41e651:	push   esi
  41e652:	cmp    ebx,DWORD PTR [edi]
  41e654:	and    al,0xc7
  41e656:	outs   dx,BYTE PTR ds:[esi]
  41e657:	jno    0x41e677
  41e659:	sahf   
  41e65a:	jno    0x41e665
  41e65c:	xor    al,0x59
  41e65e:	jl     0x41e63d
  41e660:	in     al,dx
  41e661:	inc    ebx
  41e662:	pop    esi
  41e663:	inc    esi
  41e664:	loopne 0x41e60d
  41e666:	sub    DWORD PTR [edi-0x24560e0a],0xb0d6e565
  41e670:	fist   WORD PTR [ebp-0x1a3073d9]
  41e676:	adc    dl,dh
  41e678:	fwait
  41e679:	fs iret 
  41e67b:	pusha  
  41e67c:	lds    eax,FWORD PTR [ebx+0x33]
  41e67f:	xor    esp,esi
  41e681:	add    DWORD PTR [ebx+0x768d8b75],esp
  41e687:	(bad)  
  41e688:	hlt    
  41e689:	or     al,0x92
  41e68b:	repz mov esi,edx
  41e68e:	pop    edx
  41e68f:	stc    
  41e690:	fisub  WORD PTR [esi]
  41e692:	js     0x41e710
  41e694:	(bad)
  41e697:	jbe    0x41e70e
  41e699:	test   ecx,esi
  41e69b:	das    
  41e69c:	cmp    al,0xc2
  41e69e:	ins    BYTE PTR es:[edi],dx
  41e69f:	icebp  
  41e6a0:	call   0x1c3b:0x3394f799
  41e6a7:	gs dec ecx
  41e6a9:	in     eax,0x77
  41e6ab:	xor    dh,bl
  41e6ad:	pop    ebp
  41e6ae:	arpl   WORD PTR [ebp-0x1e60af97],bp
  41e6b4:	inc    ebp
  41e6b5:	or     ebx,DWORD PTR [edi+0x5c5a4867]
  41e6bb:	xchg   edx,eax
  41e6bc:	mov    cl,0xb3
  41e6be:	xor    esi,DWORD PTR [edi+0x4b584d6d]
  41e6c4:	fwait
  41e6c5:	jno    0x41e66a
  41e6c7:	adc    dl,BYTE PTR [bx]
  41e6ca:	cmp    ch,al
  41e6cc:	adc    eax,0x164c8a1
  41e6d1:	cmp    al,0x16
  41e6d3:	jge    0x41e658
  41e6d5:	push   es
  41e6d6:	mov    eax,ds:0xfb8fc351
  41e6db:	inc    esi
  41e6dc:	ins    BYTE PTR es:[edi],dx
  41e6dd:	ret    
  41e6de:	int3   
  41e6df:	pop    ebx
  41e6e0:	stc    
  41e6e1:	sti    
  41e6e2:	inc    esp
  41e6e3:	hlt    
  41e6e4:	and    BYTE PTR [ebp+0x57117bf5],0xb9
  41e6eb:	inc    ebp
  41e6ec:	cmp    al,0xc7
  41e6ee:	inc    esi
  41e6ef:	and    al,0x43
  41e6f1:	mov    esp,0x6f54d242
  41e6f6:	rcr    BYTE PTR [edi+ebx*4+0x68],cl
  41e6fa:	dec    ebx
  41e6fb:	dec    esi
  41e6fc:	push   edx
  41e6fd:	jl     0x41e70a
  41e6ff:	in     al,dx
  41e700:	aas    
  41e701:	(bad)  
  41e703:	aam    0x29
  41e705:	into   
  41e706:	push   edx
  41e707:	fs mov cl,0xd4
  41e70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e70b:	sbb    cl,cl
  41e70d:	repz test BYTE PTR [eax+0xb],ah
  41e711:	stos   DWORD PTR es:[edi],eax
  41e712:	ins    DWORD PTR es:[edi],dx
  41e713:	adc    eax,0x6420f1d3
  41e718:	bound  edi,QWORD PTR [eax+ebp*4]
  41e71b:	pop    ss
  41e71c:	dec    esi
  41e71d:	std    
  41e71e:	mov    ds:0x48ce2b5e,eax
  41e723:	mov    edx,0x5238b85a
  41e728:	and    ebx,0xffffff81
  41e72b:	in     eax,0x9c
  41e72d:	cdq    
  41e72e:	(bad)  
  41e730:	mov    dl,0x1
  41e732:	dec    edi
  41e733:	jb     0x41e72e
  41e735:	sub    dl,BYTE PTR [edi]
  41e737:	mov    eax,0xf3b460ab
  41e73c:	into   
  41e73d:	cli    
  41e73e:	fs push edx
  41e740:	mov    es,WORD PTR [ecx]
  41e742:	jno    0x41e773
  41e744:	ret    
  41e745:	bnd jno 0x41e768
  41e748:	xchg   ebx,eax
  41e749:	(bad)  
  41e74a:	test   al,0x65
  41e74c:	pushf  
  41e74d:	mov    dh,0xb4
  41e74f:	cmp    dh,bh
  41e751:	je     0x41e6e3
  41e753:	arpl   WORD PTR [esi],si
  41e755:	xchg   esi,eax
  41e756:	jecxz  0x41e6d8
  41e758:	xor    ecx,DWORD PTR [ebx]
  41e75a:	retf   
  41e75b:	arpl   WORD PTR [ebx+0x1df29d5],si
  41e761:	ja     0x41e7c7
  41e763:	xchg   esi,eax
  41e764:	add    al,0xfd
  41e766:	js     0x41e730
  41e768:	dec    esi
  41e769:	loope  0x41e723
  41e76b:	sbb    BYTE PTR [ecx+0x472a2701],ah
  41e771:	fcom   DWORD PTR [eax+0x5e4f41c3]
  41e777:	mov    eax,DWORD PTR [ebp+0xe]
  41e77a:	fsubp  st(1),st
  41e77c:	mov    ah,0xc5
  41e77e:	sar    DWORD PTR [eax-0x2aed13ba],1
  41e784:	adc    al,0xfd
  41e786:	jns    0x41e731
  41e788:	int3   
  41e789:	test   BYTE PTR [ebp-0x22d9e59],al
  41e78f:	inc    edx
  41e790:	fisub  WORD PTR [edi-0x56245f9e]
  41e796:	jg     0x41e7b8
  41e798:	adc    al,0x5d
  41e79a:	add    DWORD PTR [edi-0x6c],edi
  41e79d:	cmp    edx,DWORD PTR [ecx]
  41e79f:	xor    eax,0x3f09edc0
  41e7a4:	xor    al,0x72
  41e7a6:	or     al,0xdb
  41e7a8:	push   esp
  41e7a9:	or     BYTE PTR [edi],al
  41e7ab:	mov    al,ds:0x1c911cb3
  41e7b0:	cmc    
  41e7b1:	inc    edi
  41e7b2:	push   cs
  41e7b3:	popa   
  41e7b4:	pop    ecx
  41e7b5:	loop   0x41e798
  41e7b7:	xor    al,0x5b
  41e7b9:	dec    esp
  41e7ba:	push   edx
  41e7bb:	aad    0x8c
  41e7bd:	(bad)  
  41e7be:	jg     0x41e77d
  41e7c0:	or     DWORD PTR [ebx-0x20abb6d9],ebp
  41e7c6:	jmp    0xed14:0x21f9e792
  41e7cd:	jmp    0xb842:0x957e38c1
  41e7d4:	aad    0xd3
  41e7d6:	xchg   ebp,eax
  41e7d7:	out    dx,al
  41e7d8:	jp     0x41e7a0
  41e7da:	retf   0x8f1e
  41e7dd:	mov    ds:0x580dda11,al
  41e7e2:	cmp    DWORD PTR [ebx+0x50],0x67160b26
  41e7e9:	and    dh,dh
  41e7eb:	mov    al,0x26
  41e7ed:	push   esi
  41e7ee:	jo     0x41e84d
  41e7f0:	mov    bl,0xa2
  41e7f2:	mov    sp,0x748e
  41e7f6:	cs xor eax,0x65c7d6ee
  41e7fc:	pop    es
  41e7fd:	push   ebx
  41e7fe:	sbb    eax,0xdcf6bd23
  41e803:	and    ecx,DWORD PTR [esi]
  41e805:	mov    ah,0xc1
  41e807:	and    edi,ebp
  41e809:	js     0x41e828
  41e80b:	jmp    FWORD PTR [ebp+0x111c5dbd]
  41e811:	sub    DWORD PTR [esi+0x23],ecx
  41e814:	mov    esp,0x30918d9c
  41e819:	psrlw  mm3,QWORD PTR [eax+0x33c5097a]
  41e820:	push   ebp
  41e821:	and    DWORD PTR [ecx+0x44],eax
  41e824:	pop    ebx
  41e825:	sar    DWORD PTR [ebp+edx*8-0x53],0x47
  41e82a:	aam    0xc2
  41e82c:	xchg   ebx,esi
  41e82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e82f:	(bad)  
  41e830:	cmc    
  41e831:	popf   
  41e832:	inc    ecx
  41e833:	inc    ebp
  41e834:	ins    BYTE PTR es:[edi],dx
  41e835:	fsubr  DWORD PTR [ebx+0x5f]
  41e838:	icebp  
  41e839:	add    BYTE PTR [ebx],0x44
  41e83c:	dec    eax
  41e83d:	aaa    
  41e83e:	lock push ecx
  41e840:	sub    eax,DWORD PTR [edx-0x7e]
  41e843:	pop    edi
  41e844:	out    dx,eax
  41e845:	fs scas al,BYTE PTR es:[edi]
  41e847:	ret    0x8f2a
  41e84a:	sbb    eax,0x5edc7c1a
  41e84f:	jnp    0x41e7da
  41e851:	mov    esi,0x3de137d7
  41e856:	daa    
  41e857:	std    
  41e858:	add    DWORD PTR [esi],ecx
  41e85a:	jbe    0x41e7e6
  41e85c:	bound  esi,QWORD PTR [eax+0xe03de5e]
  41e862:	inc    edx
  41e863:	mov    edi,0xcc3928c1
  41e868:	ficomp WORD PTR [ecx+0x5d886cc3]
  41e86e:	xchg   ebx,ecx
  41e870:	and    DWORD PTR [ebp+0x51],0x21
  41e874:	inc    eax
  41e875:	inc    ebp
  41e876:	shl    BYTE PTR [ebx+0x62],cl
  41e879:	adc    DWORD PTR [edx-0x7f],ebp
  41e87c:	fucomip st,st(5)
  41e87e:	push   ebx
  41e87f:	mov    ecx,0xb2c7cd9c
  41e884:	push   ecx
  41e885:	mov    BYTE PTR [edi-0x7c14f513],cl
  41e88b:	aas    
  41e88c:	(bad)  
  41e88d:	pop    esp
  41e88e:	hlt    
  41e88f:	mov    eax,0x101c66e9
  41e894:	xor    bh,BYTE PTR [eax+esi*8+0x69f3c8d5]
  41e89b:	(bad)  
  41e89c:	icebp  
  41e89d:	dec    esi
  41e89e:	cmp    dl,ah
  41e8a0:	ins    DWORD PTR es:[edi],dx
  41e8a1:	add    al,0xbd
  41e8a4:	dec    esp
  41e8a5:	mov    esi,0x8e618b76
  41e8aa:	jo     0x41e83d
  41e8ac:	shr    edx,0xbf
  41e8af:	call   edx
  41e8b1:	mov    dh,0x34
  41e8b3:	sar    dh,cl
  41e8b5:	push   ss
  41e8b6:	add    eax,0x6e0ecded
  41e8bb:	push   ebx
  41e8bc:	sbb    eax,edx
  41e8be:	pop    esp
  41e8bf:	mov    bh,0xe5
  41e8c1:	call   0xd919:0x45f937a9
  41e8c8:	outs   dx,DWORD PTR ds:[esi]
  41e8c9:	xchg   BYTE PTR es:[edi],dl
  41e8cc:	lods   al,BYTE PTR ds:[esi]
  41e8cd:	adc    DWORD PTR ds:0xc9f339cf,ecx
  41e8d3:	or     BYTE PTR [ebp-0x13],ah
  41e8d6:	cld    
  41e8d7:	xchg   esi,eax
  41e8d8:	test   edi,ecx
  41e8da:	imul   edx,DWORD PTR [edx],0x55
  41e8dd:	push   0x17
  41e8df:	test   eax,0x4e418427
  41e8e4:	mov    BYTE PTR [edx+0x79183a98],dh
  41e8ea:	add    BYTE PTR [edx+0x2f025b2b],bl
  41e8f0:	fisubr WORD PTR [esp+esi*1]
  41e8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f4:	sbb    DWORD PTR [edi-0x28],0xffffffb8
  41e8f8:	adc    eax,0x64a75a12
  41e8fd:	push   esp
  41e8fe:	jnp    0x41e8a2
  41e900:	mov    ebp,0x28765043
  41e905:	mov    ebp,0xdd946b6
  41e90a:	or     dh,0x5e
  41e90d:	mov    bl,0xa8
  41e90f:	scas   eax,DWORD PTR es:[edi]
  41e910:	add    DWORD PTR [ebx-0x383c21c],esi
  41e916:	iret   
  41e917:	dec    edx
  41e918:	push   esp
  41e919:	loopne 0x41e94d
  41e91b:	int    0x16
  41e91d:	int    0x56
  41e91f:	addr16 clc 
  41e921:	dec    eax
  41e923:	rol    edx,cl
  41e925:	imul   edi,DWORD PTR [esp+esi*4-0x20],0x44aa712a
  41e92d:	mov    dh,BYTE PTR [ebx]
  41e92f:	xchg   edi,eax
  41e930:	(bad)  
  41e931:	fcom   QWORD PTR [edi-0x43]
  41e934:	dec    ebp
  41e935:	push   esp
  41e936:	ins    DWORD PTR es:[edi],dx
  41e937:	push   ss
  41e938:	ret    0xb3c0
  41e93b:	les    ebx,FWORD PTR [ebx-0x67]
  41e93e:	es leave 
  41e940:	pop    ecx
  41e941:	(bad)  
  41e942:	ds pop ebx
  41e944:	inc    ebx
  41e945:	scas   eax,DWORD PTR es:[edi]
  41e946:	out    0x20,eax
  41e948:	mov    bl,0x91
  41e94a:	test   eax,0x7cf675ce
  41e94f:	ja     0x41e912
  41e951:	mov    al,0x4f
  41e953:	fnstenv [edx]
  41e955:	mov    ds,WORD PTR [eax]
  41e957:	mov    edx,0xf873832c
  41e95c:	rol    DWORD PTR [ecx+0x69],cl
  41e95f:	loope  0x41e980
  41e961:	pop    ebp
  41e962:	out    dx,eax
  41e963:	in     eax,0x4b
  41e965:	stos   DWORD PTR es:[edi],eax
  41e966:	mov    bh,0xf5
  41e968:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e96a:	int    0x9a
  41e96c:	dec    edx
  41e96d:	fldenv [esi-0x68]
  41e970:	mov    BYTE PTR [edx-0x51],ch
  41e973:	or     BYTE PTR [edx-0x5c448d94],dl
  41e979:	jp     0x41e9bf
  41e97b:	fist   DWORD PTR [edi-0x14b1b049]
  41e981:	mov    ds:0xb6367e26,eax
  41e986:	inc    ebp
  41e987:	dec    ebp
  41e988:	sub    edi,eax
  41e98a:	(bad)  
  41e98b:	push   0xcf39f743
  41e990:	push   cs
  41e991:	inc    edi
  41e992:	mov    bh,0x89
  41e994:	mov    BYTE PTR [edx-0x52347803],ah
  41e99a:	dec    ebx
  41e99b:	call   0xf1858479
  41e9a0:	xor    cl,dh
  41e9a2:	mov    al,0x55
  41e9a4:	jecxz  0x41e952
  41e9a6:	hlt    
  41e9a7:	shr    BYTE PTR [edx+eax*4-0x25c2cb38],cl
  41e9ae:	and    al,0x35
  41e9b0:	mov    DWORD PTR [ecx-0x3709d1ed],ecx
  41e9b6:	es inc esp
  41e9b8:	sub    DWORD PTR [esi+0x39],esp
  41e9bb:	or     edx,DWORD PTR [ebx-0x6fa9f077]
  41e9c1:	lods   eax,DWORD PTR ds:[esi]
  41e9c2:	adc    cl,dl
  41e9c4:	add    al,0x50
  41e9c6:	lea    esi,[ecx+0x430dcab4]
  41e9cc:	push   ecx
  41e9cd:	popfw  
  41e9cf:	pop    ebx
  41e9d0:	icebp  
  41e9d1:	sbb    bh,BYTE PTR [edx+0x1eb0e81e]
  41e9d7:	mov    ebp,0x7a9736a
  41e9dc:	bound  edx,QWORD PTR [ecx+ebx*1+0x43bfeff3]
  41e9e3:	mov    WORD PTR [ecx-0x18],ss
  41e9e6:	jbe    0x41e9bb
  41e9e8:	lods   al,BYTE PTR ds:[esi]
  41e9e9:	(bad)  
  41e9ea:	push   esi
  41e9eb:	icebp  
  41e9ec:	int    0xd6
  41e9ee:	mov    sp,0xfc76
  41e9f2:	or     esi,DWORD PTR [edi+esi*8]
  41e9f5:	jecxz  0x41ea01
  41e9f7:	push   eax
  41e9f8:	adc    cl,BYTE PTR [ebx+0xd]
  41e9fb:	fs in  eax,0xe7
  41e9fe:	add    BYTE PTR [ebp+edi*8+0x1610248a],ah
  41ea05:	out    dx,al
  41ea06:	in     al,dx
  41ea07:	cdq    
  41ea08:	pop    ebp
  41ea09:	ret    0x6900
  41ea0c:	(bad)  
  41ea0d:	pop    eax
  41ea0e:	outs   dx,BYTE PTR ds:[esi]
  41ea0f:	push   ss
  41ea10:	inc    eax
  41ea11:	sub    DWORD PTR [ecx+0x6e],0x5a49500a
  41ea18:	shl    BYTE PTR [esi-0x61abfaa3],0xc9
  41ea1f:	rcl    DWORD PTR [edi-0x4cbe5353],0x6d
  41ea26:	and    DWORD PTR [edx+edx*1-0x3d],0x6555c040
  41ea2e:	push   cs
  41ea2f:	push   ecx
  41ea30:	jmp    0xec73:0xb50feedc
  41ea37:	mov    ah,0x55
  41ea39:	out    dx,al
  41ea3a:	mov    esi,0xc7bd9062
  41ea3f:	jmp    0x41e9c9
  41ea41:	xor    eax,0xbde0aaea
  41ea46:	xor    al,BYTE PTR [ebx+eax*4]
  41ea49:	scas   eax,DWORD PTR es:[edi]
  41ea4a:	iret   
  41ea4b:	add    al,0x81
  41ea4d:	cmp    ecx,esi
  41ea4f:	out    dx,al
  41ea50:	add    cl,BYTE PTR [edi+0x25]
  41ea53:	das    
  41ea54:	mov    dh,0xd
  41ea56:	sub    eax,0xa1cdbe2a
  41ea5b:	fisttp WORD PTR [eax+eiz*2]
  41ea5e:	retf   0xbcc3
  41ea61:	std    
  41ea62:	ins    BYTE PTR es:[edi],dx
  41ea63:	mov    esp,0xf23f8e09
  41ea68:	sbb    eax,0xe30a58eb
  41ea6d:	rol    dh,cl
  41ea6f:	stos   DWORD PTR es:[edi],eax
  41ea70:	pusha  
  41ea71:	jmp    0x727a884b
  41ea76:	and    ecx,DWORD PTR [esi-0x43]
  41ea79:	js     0x41eaa6
  41ea7b:	sbb    bl,dl
  41ea7d:	int3   
  41ea7e:	imul   eax,DWORD PTR [ebx+0x6375cf1d],0xfffffff0
  41ea85:	sahf   
  41ea86:	popf   
  41ea87:	push   cs
  41ea88:	bswap  edi
  41ea8a:	sbb    edi,eax
  41ea8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8d:	xchg   edi,eax
  41ea8e:	inc    esp
  41ea8f:	xor    ebp,ebx
  41ea91:	xor    ecx,DWORD PTR [edi+0x4]
  41ea94:	sub    al,0xc0
  41ea96:	and    DWORD PTR [ecx-0x4c],0x76d79366
  41ea9d:	add    DWORD PTR [edi],ebp
  41ea9f:	mov    esp,0xa7dd3600
  41eaa4:	into   
  41eaa5:	pop    ebp
  41eaa6:	lahf   
  41eaa7:	mov    edx,0x393300d4
  41eaac:	cmp    DWORD PTR [eax-0x333b1016],0x5b
  41eab3:	jmp    0x41ea54
  41eab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eab6:	xlat   BYTE PTR ds:[ebx]
  41eab7:	iret   
  41eab8:	in     eax,dx
  41eab9:	xchg   ecx,eax
  41eaba:	pop    ecx
  41eabb:	popa   
  41eabc:	jecxz  0x41ead1
  41eabe:	in     al,dx
  41eabf:	push   ss
  41eac0:	pop    esp
  41eac1:	sbb    esi,DWORD PTR ds:0xb24c585e
  41eac7:	mov    al,0xc6
  41eac9:	mov    edx,0x3ea65828
  41eace:	sbb    edi,ebp
  41ead0:	stos   BYTE PTR es:[edi],al
  41ead1:	(bad)  
  41ead3:	add    DWORD PTR [esi+0x525dcaad],esp
  41ead9:	(bad)  
  41eada:	xor    eax,0x71e86d8b
  41eadf:	mov    ecx,0xeff6b23a
  41eae4:	test   DWORD PTR [ebx+0x3f08656b],esp
  41eaea:	popa   
  41eaeb:	fcom   QWORD PTR [esi]
  41eaed:	or     BYTE PTR [ebp+0xe],0x74
  41eaf1:	dec    esp
  41eaf2:	xor    al,0xe0
  41eaf4:	dec    eax
  41eaf5:	jbe    0x41eafd
  41eaf7:	mov    ecx,0x7774f762
  41eafc:	das    
  41eafd:	or     ebp,edx
  41eaff:	push   0x64
  41eb01:	and    DWORD PTR [esi+0x4a4cbdc6],edx
  41eb07:	sbb    eax,0xfec095c5
  41eb0c:	dec    ecx
  41eb0d:	xchg   ecx,eax
  41eb0e:	pusha  
  41eb0f:	mov    bl,0xe5
  41eb11:	mov    ds:0xb86472d2,al
  41eb16:	call   FWORD PTR [edi+edx*4+0x7b]
  41eb1a:	mov    dh,0x35
  41eb1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1d:	ret    0x51fb
  41eb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb21:	in     al,0xbd
  41eb23:	sahf   
  41eb24:	adc    DWORD PTR [si+0x53bd],ecx
  41eb29:	jge    0x41eb63
  41eb2b:	pop    ecx
  41eb2c:	nop
  41eb2d:	inc    di
  41eb2f:	inc    eax
  41eb30:	repnz cmp esp,eax
  41eb33:	ja     0x41eb96
  41eb35:	mov    bh,0x7b
  41eb37:	push   ebp
  41eb38:	pushf  
  41eb39:	jne    0x41eb18
  41eb3b:	lock popa 
  41eb3d:	or     ecx,DWORD PTR [eax-0x10]
  41eb40:	scas   al,BYTE PTR es:[edi]
  41eb41:	js     0x41ebaf
  41eb43:	test   BYTE PTR [eax+0x62],bh
  41eb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb47:	shr    ebx,0xba
  41eb4a:	jne    0x41eb61
  41eb4c:	shl    DWORD PTR [edi],0xf0
  41eb4f:	call   0x159bc6af
  41eb54:	add    ebx,DWORD PTR [eax-0x28]
  41eb57:	adc    dh,al
  41eb59:	mov    dl,0xb4
  41eb5b:	add    bl,BYTE PTR [edi]
  41eb5d:	outs   dx,DWORD PTR ds:[esi]
  41eb5e:	or     DWORD PTR [ebp+0x350c38bb],0x36
  41eb65:	stos   BYTE PTR es:[edi],al
  41eb66:	lea    esi,[edi-0x36]
  41eb69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb6a:	jecxz  0x41ebc1
  41eb6c:	int3   
  41eb6d:	sbb    bh,BYTE PTR [eax-0x3aac9b59]
  41eb73:	add    DWORD PTR [edi+0x71da6137],0xf2b7da36
  41eb7d:	pop    ebp
  41eb7e:	inc    edi
  41eb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb80:	xchg   edx,eax
  41eb81:	ret    
  41eb82:	inc    ecx
  41eb83:	jecxz  0x41ebfb
  41eb85:	mov    eax,0xa9c98c1b
  41eb8a:	pop    eax
  41eb8b:	jno    0x41eb55
  41eb8d:	jae    0x41ec07
  41eb8f:	push   ebx
  41eb90:	adc    eax,esp
  41eb92:	test   DWORD PTR [edi-0x16e5f707],ecx
  41eb98:	and    eax,DWORD PTR [ecx+0x6c8d5753]
  41eb9e:	dec    esp
  41eb9f:	ja     0x41ebb2
  41eba1:	shl    cl,cl
  41eba3:	cmp    esp,DWORD PTR [ebx-0x4]
  41eba6:	(bad)  
  41eba7:	(bad)  
  41eba8:	js     0x41ebd0
  41ebaa:	pop    es
  41ebab:	out    0x31,al
  41ebad:	or     al,0xe5
  41ebaf:	icebp  
  41ebb0:	xchg   ebp,eax
  41ebb1:	mov    DWORD PTR [edx],ecx
  41ebb3:	test   esi,esi
  41ebb5:	call   0x762d:0xccc133f3
  41ebbc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41ebbe:	dec    ebx
  41ebc0:	shr    DWORD PTR [edi],0x68
  41ebc3:	cwde   
  41ebc4:	sbb    al,0x2d
  41ebc6:	outs   dx,BYTE PTR ds:[esi]
  41ebc7:	pop    esi
  41ebc8:	and    ecx,DWORD PTR ds:0x328cf055
  41ebce:	xchg   esi,eax
  41ebcf:	test   DWORD PTR [esi-0x1b],0xae7ec7a8
  41ebd6:	int    0xdb
  41ebd8:	jp     0x41ec0c
  41ebda:	lds    ecx,FWORD PTR [ebx-0x4e]
  41ebdd:	sbb    BYTE PTR [eax+0x22637777],0x2c
  41ebe4:	lds    ebp,FWORD PTR [ecx]
  41ebe6:	test   DWORD PTR [edx+0x47ed1785],ebx
  41ebec:	add    ebp,edi
  41ebee:	stos   DWORD PTR es:[edi],eax
  41ebef:	pusha  
  41ebf0:	inc    ecx
  41ebf1:	push   es
  41ebf2:	retf   
  41ebf3:	add    BYTE PTR [ecx],dh
  41ebf5:	pop    ebx
  41ebf6:	jmp    0x43b9:0x42e6b501
  41ebfd:	repnz int3 
  41ebff:	adc    eax,0x22477436
  41ec04:	fsub   QWORD PTR [edx+0x4c7abbec]
  41ec0a:	xchg   esp,eax
  41ec0b:	adc    al,0xff
  41ec0d:	sub    eax,esp
  41ec0f:	(bad)  
  41ec10:	dec    esi
  41ec11:	add    DWORD PTR [ecx-0x15],ebp
  41ec14:	rcr    BYTE PTR ds:0xd61e,cl
  41ec19:	rcl    BYTE PTR [ecx],1
  41ec1b:	add    ebx,DWORD PTR [edx-0x76eb2980]
  41ec21:	push   ebp
  41ec22:	xchg   DWORD PTR [ebx],ebp
  41ec24:	fwait
  41ec25:	aas    
  41ec26:	sbb    DWORD PTR [edi-0x6d],eax
  41ec29:	packssdw mm0,QWORD PTR [ebp+0x7f82f0df]
  41ec30:	inc    ecx
  41ec31:	dec    esp
  41ec32:	outs   dx,BYTE PTR ds:[esi]
  41ec33:	sbb    cl,bh
  41ec35:	popa   
  41ec36:	(bad)  
  41ec37:	pusha  
  41ec38:	or     al,0x7
  41ec3a:	cmp    DWORD PTR [ebx+0x736ff77a],edx
  41ec40:	sbb    al,0x4e
  41ec42:	xor    BYTE PTR [ebp-0x1e],dl
  41ec45:	dec    edi
  41ec46:	out    0x1a,al
  41ec48:	ja     0x41ec9a
  41ec4a:	mov    al,ds:0x6d7578c
  41ec4f:	lock fimul DWORD PTR [ecx+0x4fdfcf29]
  41ec56:	test   eax,0xcb526837
  41ec5b:	dec    edi
  41ec5c:	je     0x41ec8c
  41ec5e:	imul   eax,DWORD PTR [edx+0x38],0xda706a01
  41ec65:	jo     0x41ec6c
  41ec67:	or     dh,0x9a
  41ec6a:	push   ecx
  41ec6b:	or     eax,0xfbb88af0
  41ec70:	dec    edi
  41ec71:	rol    ebx,0x7d
  41ec74:	xlat   BYTE PTR ds:[ebx]
  41ec75:	scas   eax,DWORD PTR es:[edi]
  41ec76:	out    0x70,eax
  41ec78:	sbb    DWORD PTR [eax-0x69],ebx
  41ec7b:	sar    BYTE PTR [ecx+0x3548e2f1],cl
  41ec81:	mov    ebx,0xa81402c4
  41ec86:	mov    bl,0x96
  41ec88:	inc    edx
  41ec89:	mov    al,0x61
  41ec8b:	or     ch,BYTE PTR [edi]
  41ec8d:	mov    edx,0xcd7c3ab5
  41ec92:	jl     0x41ec5c
  41ec94:	and    DWORD PTR [esi-0x7],ebp
  41ec97:	sbb    BYTE PTR [ebx-0x4],al
  41ec9a:	icebp  
  41ec9b:	rcl    DWORD PTR [eax-0x1accff6],1
  41eca1:	(bad)
  41eca4:	retf   
  41eca5:	pop    ebx
  41eca6:	xor    al,0x47
  41eca8:	and    DWORD PTR [ecx*8-0xc2e1c60],eax
  41ecaf:	arpl   WORD PTR [ebp+0x67f9a392],cx
  41ecb5:	fidivr WORD PTR [eax-0x73]
  41ecb8:	jne    0x41ecb6
  41ecba:	jmp    0x85849143
  41ecbf:	test   DWORD PTR [edx],ebx
  41ecc1:	adc    DWORD PTR [eax],ebx
  41ecc3:	xchg   ebx,eax
  41ecc4:	out    0xe,eax
  41ecc6:	mov    edx,0x7d6284d2
  41eccb:	dec    eax
  41eccc:	add    bl,BYTE PTR [esi+0x605dddaa]
  41ecd2:	idiv   BYTE PTR [eax]
  41ecd4:	retf   
  41ecd5:	cmp    edi,esp
  41ecd7:	test   BYTE PTR [ebx],cl
  41ecd9:	repnz sbb ebx,0xffffffbb
  41ecdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecde:	fadd   QWORD PTR [ebp-0x3]
  41ece1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41ece3:	int3   
  41ece4:	std    
  41ece5:	lock xor al,0x16
  41ece8:	jae    0x41ec6c
  41ecea:	mov    edi,0xb6ad191f
  41ecef:	xchg   BYTE PTR [esi+0x1c21e2b1],bh
  41ecf5:	je     0x41ec99
  41ecf7:	cmp    eax,DWORD PTR [edi+0x73c6a9ac]
  41ecfd:	inc    ebx
  41ecfe:	sub    bl,BYTE PTR [eax]
  41ed00:	dec    esp
  41ed01:	jge    0x41ece3
  41ed03:	push   eax
  41ed04:	pop    ds
  41ed05:	sub    ah,BYTE PTR [eax]
  41ed07:	jbe    0x41ed71
  41ed09:	inc    edi
  41ed0a:	hlt    
  41ed0b:	pop    ebp
  41ed0c:	pop    ss
  41ed0d:	add    eax,0x153ec224
  41ed12:	std    
  41ed13:	pop    ecx
  41ed14:	xchg   BYTE PTR [ebx+0x3e637ac3],ch
  41ed1a:	idiv   DWORD PTR [ebx+ebp*2]
  41ed1d:	sub    al,0xf1
  41ed1f:	je     0x41ece1
  41ed21:	inc    esi
  41ed22:	loope  0x41ed50
  41ed24:	pop    ecx
  41ed25:	mov    esi,0x6e7c5d60
  41ed2a:	int3   
  41ed2b:	ret    
  41ed2c:	jbe    0x41ed8a
  41ed2e:	inc    esi
  41ed2f:	popa   
  41ed30:	xor    BYTE PTR [ebp-0x2ab33dbc],ah
  41ed36:	clc    
  41ed37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed38:	outs   dx,DWORD PTR ds:[esi]
  41ed39:	mov    ecx,0x914aec8
  41ed3e:	out    0x2b,eax
  41ed40:	ror    BYTE PTR [eax+eiz*2],0x96
  41ed44:	xchg   ecx,eax
  41ed45:	add    eax,DWORD PTR ds:0x17da5acd
  41ed4b:	and    DWORD PTR [ebx],0x2cf1d96d
  41ed51:	repnz lock dec eax
  41ed54:	mov    ah,0x8f
  41ed56:	inc    edx
  41ed57:	fimul  DWORD PTR [esi-0x45afa038]
  41ed5d:	bound  edi,QWORD PTR [ecx+0x164b3c8a]
  41ed63:	sbb    al,0x25
  41ed65:	push   ds
  41ed66:	jle    0x41ed2d
  41ed68:	sbb    BYTE PTR ds:0xddb15351,bl
  41ed6e:	fnstenv [esi]
  41ed70:	in     al,0xb6
  41ed72:	inc    edi
  41ed73:	fprem1 
  41ed75:	ficomp WORD PTR [edi+0x3170f749]
  41ed7b:	je     0x41ed9a
  41ed7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed7e:	push   edi
  41ed7f:	and    eax,0xd46566fb
  41ed84:	add    al,0x3b
  41ed86:	cld    
  41ed87:	cs ret 
  41ed89:	std    
  41ed8a:	and    DWORD PTR [esi],edx
  41ed8c:	xchg   esi,ebx
  41ed8e:	fwait
  41ed8f:	mov    BYTE PTR [eax+0x19252276],dh
  41ed95:	icebp  
  41ed96:	fidivr DWORD PTR [ebx-0x2f]
  41ed99:	sub    eax,0xf3c1b009
  41ed9e:	dec    esp
  41ed9f:	fsubr  st,st(7)
  41eda1:	push   edi
  41eda2:	mov    bh,0xd8
  41eda4:	cwde   
  41eda5:	in     al,0x3c
  41eda7:	shr    BYTE PTR [edx-0x21f93ea9],cl
  41edad:	out    dx,al
  41edae:	fnstcw WORD PTR [ebx]
  41edb0:	adc    dh,BYTE PTR [ebx-0x53]
  41edb3:	(bad)  
  41edb4:	int    0x71
  41edb6:	jmp    0x41edfc
  41edb8:	ret    
  41edb9:	test   al,0x40
  41edbb:	call   0xd89e:0xafcf65bc
  41edc2:	xchg   ebx,eax
  41edc3:	push   es
  41edc4:	mov    ch,0x83
  41edc6:	mov    al,ds:0xe6a3a208
  41edcb:	inc    ecx
  41edcd:	inc    ecx
  41edce:	xor    BYTE PTR [eax+0x42],0xcb
  41edd2:	xchg   edx,eax
  41edd3:	or     edx,ebx
  41edd5:	inc    DWORD PTR [ecx-0x52]
  41edd8:	mov    ebx,DWORD PTR [eax+0x14484d0f]
  41edde:	mov    ax,ds:0x2caf984d
  41ede4:	rol    DWORD PTR [esi],0xfc
  41ede7:	jmp    0x41ed6a
  41ede9:	fstp   QWORD PTR [eax]
  41edeb:	mov    edi,0x970a65f2
  41edf0:	jnp    0x41eddb
  41edf2:	pusha  
  41edf3:	sbb    eax,0x91f43ce
  41edf8:	push   esp
  41edf9:	pop    ecx
  41edfa:	gs and eax,0x29fc393a
  41ee00:	pop    esp
  41ee01:	ret    0xae9
  41ee04:	inc    edx
  41ee05:	ret    
  41ee06:	add    al,0x8f
  41ee08:	mov    esi,esp
  41ee0a:	lea    ebx,[ecx+0x72158632]
  41ee10:	in     al,dx
  41ee11:	in     eax,0x8b
  41ee13:	and    bh,bl
  41ee15:	pusha  
  41ee16:	jnp    0x41edea
  41ee18:	sub    bl,BYTE PTR [ebx]
  41ee1a:	fwait
  41ee1b:	sti    
  41ee1c:	ins    DWORD PTR es:[edi],dx
  41ee1d:	test   DWORD PTR [eax],ebx
  41ee1f:	inc    esp
  41ee20:	push   edx
  41ee21:	xchg   esi,eax
  41ee22:	psrlq  mm4,QWORD PTR [edx+0x44]
  41ee26:	inc    ebx
  41ee27:	mov    ah,0x9e
  41ee29:	sub    al,0x14
  41ee2b:	repz int3 
  41ee2d:	ins    DWORD PTR es:[edi],dx
  41ee2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2f:	and    eax,0x16f761ac
  41ee34:	fist   DWORD PTR [ebx]
  41ee36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee37:	dec    ebp
  41ee38:	jns    0x41ee36
  41ee3a:	cmp    eax,0xd5a1ca59
  41ee3f:	mov    al,0x17
  41ee41:	sahf   
  41ee42:	jo     0x41ee58
  41ee44:	mov    ecx,0x3bb5e00d
  41ee49:	mov    edi,DWORD PTR [edx]
  41ee4b:	mov    edx,esi
  41ee4d:	mov    esi,0xbe3a4710
  41ee52:	dec    edi
  41ee53:	cmp    DWORD PTR [ebp+eiz*4+0x7bef743],ebp
  41ee5a:	fwait
  41ee5b:	push   ecx
  41ee5c:	push   edi
  41ee5d:	sbb    DWORD PTR [edi+0x27dae2b2],esp
  41ee63:	mov    BYTE PTR [ebx+0x6f],bh
  41ee66:	pop    edi
  41ee67:	jmp    0x41ee58
  41ee69:	sub    eax,0x4ca8822f
  41ee6e:	xor    eax,0x4116a7a6
  41ee73:	fstp   DWORD PTR [eax]
  41ee75:	cdq    
  41ee76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee77:	xchg   edi,eax
  41ee78:	lods   al,BYTE PTR ds:[esi]
  41ee79:	cmp    ch,BYTE PTR [esp+edi*2]
  41ee7c:	mov    al,ds:0xf5281e2c
  41ee81:	in     al,0xc5
  41ee83:	(bad)  
  41ee84:	sub    cl,BYTE PTR [edi]
  41ee86:	mov    fs:0x3f315faa,al
  41ee8c:	inc    edx
  41ee8d:	lods   eax,DWORD PTR ds:[esi]
  41ee8e:	repz add al,0x8e
  41ee91:	(bad)  
  41ee92:	cmc    
  41ee93:	sub    dh,BYTE PTR [esi]
  41ee95:	mov    eax,gs
  41ee97:	cli    
  41ee98:	imul   edx,DWORD PTR [eax+0x7a],0xffffff99
  41ee9c:	cmp    esp,DWORD PTR [eax+ebp*8+0x54]
  41eea0:	sbb    DWORD PTR [edi+ecx*4+0x3f],0x1365f832
  41eea8:	dec    ebx
  41eea9:	mov    DWORD PTR [ecx-0x546f625c],ecx
  41eeaf:	inc    edx
  41eeb0:	pop    edx
  41eeb1:	jno    0x41ef0a
  41eeb3:	mov    edx,0xd7828b41
  41eeb8:	xchg   esp,eax
  41eeb9:	loop   0x41ee42
  41eebb:	test   DWORD PTR [ebx],eax
  41eebd:	mov    bl,BYTE PTR [edi]
  41eebf:	push   edi
  41eec0:	add    ebx,edx
  41eec2:	mov    dl,bh
  41eec4:	xchg   esi,eax
  41eec5:	inc    edx
  41eec6:	sub    DWORD PTR fs:[edx+eax*4+0x76],esp
  41eecb:	pop    ebp
  41eecc:	push   0x920e4d6d
  41eed1:	push   cs
  41eed2:	cs icebp 
  41eed4:	aas    
  41eed5:	ret    
  41eed6:	retf   0x4625
  41eed9:	sti    
  41eeda:	in     al,dx
  41eedb:	pop    ds
  41eedc:	pop    ds
  41eedd:	mov    gs:0xcd12dc6b,eax
  41eee3:	and    dl,BYTE PTR ds:0x56fde7a8
  41eee9:	sahf   
  41eeea:	(bad)  
  41eeec:	iret   
  41eeed:	sub    eax,0x43e7433a
  41eef2:	jge    0x41ee75
  41eef4:	iret   
  41eef5:	leave  
  41eef6:	sbb    eax,0x2757b734
  41eefb:	dec    ebx
  41eefc:	pop    esp
  41eefd:	mov    esi,0x105c551b
  41ef02:	jge    0x41ef23
  41ef04:	pop    esp
  41ef05:	jg     0x41ef6b
  41ef07:	imul   edi,ebp,0x5e
  41ef0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0b:	xchg   esi,eax
  41ef0c:	add    ch,BYTE PTR [eax+esi*8+0x50]
  41ef10:	ins    BYTE PTR es:[edi],dx
  41ef11:	mov    ebp,0x348bd461
  41ef16:	shr    BYTE PTR [ecx+eiz*8-0x194b6afa],cl
  41ef1d:	repnz cmp esi,DWORD PTR [edi]
  41ef20:	jl     0x41eec9
  41ef22:	and    ecx,DWORD PTR [eax-0x77]
  41ef25:	into   
  41ef26:	push   edx
  41ef27:	and    eax,DWORD PTR [ecx+0x51]
  41ef2a:	pop    esp
  41ef2b:	(bad)  
  41ef2c:	fs jne 0x41ef52
  41ef2f:	rcr    BYTE PTR [ebx],cl
  41ef31:	mov    al,0x5e
  41ef33:	add    edi,edx
  41ef35:	xchg   ebx,eax
  41ef36:	outs   dx,BYTE PTR ds:[esi]
  41ef37:	mov    bl,0xfb
  41ef39:	sub    DWORD PTR [esi-0x71],ebx
  41ef3c:	fidiv  WORD PTR [edi+edi*4+0x7b]
  41ef40:	icebp  
  41ef41:	push   edx
  41ef42:	call   0xefdb29fb
  41ef47:	ds pop es
  41ef49:	out    dx,al
  41ef4a:	fist   WORD PTR ss:[esi-0x450ded74]
  41ef51:	repz mov bl,ah
  41ef54:	imul   eax,DWORD PTR ds:0x7739dcd1,0xffffffa6
  41ef5b:	sti    
  41ef5c:	mov    ds:0x6afccd8d,al
  41ef61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef62:	out    0x94,al
  41ef64:	ror    DWORD PTR [eax+0x27a879e8],1
  41ef6a:	xchg   ebp,eax
  41ef6b:	push   cs
  41ef6c:	int3   
  41ef6d:	push   es
  41ef6e:	fwait
  41ef6f:	mov    al,0x78
  41ef71:	mov    ds:0x5973aa82,eax
  41ef76:	pushf  
  41ef77:	mov    esp,0x13663eb6
  41ef7c:	cmp    esi,ebp
  41ef7e:	adc    al,0xc8
  41ef80:	enter  0x66d3,0x7e
  41ef84:	jo     0x41eff9
  41ef86:	in     eax,dx
  41ef87:	mov    al,ds:0xa41f7938
  41ef8c:	jb     0x41efff
  41ef8e:	xor    cl,dh
  41ef90:	iret   
  41ef91:	test   al,0x5e
  41ef93:	mov    eax,0x786cb55f
  41ef98:	sub    edi,DWORD PTR [ecx-0x42]
  41ef9b:	xor    ebp,ebx
  41ef9d:	adc    al,0x1e
  41ef9f:	inc    edi
  41efa0:	mov    ebx,0x6a105afe
  41efa5:	mov    dl,0x7e
  41efa7:	int3   
  41efa8:	stos   BYTE PTR es:[edi],al
  41efa9:	push   esi
  41efaa:	mov    DWORD PTR [ebx-0x3510156f],eax
  41efb0:	pop    edx
  41efb1:	enter  0xc9e,0x1f
  41efb5:	or     bl,BYTE PTR [esi+0x6]
  41efb8:	add    BYTE PTR cs:[eax-0x30],0x36
  41efbd:	jge    0x41ef93
  41efbf:	lods   eax,DWORD PTR ds:[esi]
  41efc0:	ss jb  0x41f029
  41efc3:	jae    0x41ef93
  41efc5:	xlat   BYTE PTR ds:[ebx]
  41efc6:	xchg   ebx,eax
  41efc7:	jle    0x41f024
  41efc9:	int    0x93
  41efcb:	sti    
  41efcc:	aaa    
  41efcd:	pop    edi
  41efce:	fstp   DWORD PTR [ecx-0x473b043a]
  41efd4:	out    0x86,eax
  41efd6:	shl    BYTE PTR [ebx],0x39
  41efd9:	int    0xf7
  41efdb:	jb     0x41f042
  41efdd:	add    eax,0x848b1a2a
  41efe2:	daa    
  41efe3:	adc    al,0xdb
  41efe5:	xchg   edx,eax
  41efe6:	scas   al,BYTE PTR es:[edi]
  41efe7:	les    ebp,FWORD PTR [ebp-0xa]
  41efea:	adc    ebx,esi
  41efec:	popa   
  41efed:	call   0xdc69f956
  41eff2:	retf   
  41eff3:	ret    0xfdf0
  41eff6:	sub    BYTE PTR [ecx+0x8],0x29
  41effa:	push   edi
  41effb:	div    DWORD PTR [eax+ebp*4-0x55]
  41efff:	arpl   WORD PTR [eax+0x424f0d1d],di
  41f005:	sub    al,BYTE PTR [edi]
  41f007:	xchg   DWORD PTR [eax-0x31],esi
  41f00a:	adc    al,0x44
  41f00c:	add    eax,0x684090b4
  41f011:	pusha  
  41f012:	into   
  41f013:	pop    eax
  41f014:	mov    ah,0x72
  41f016:	xchg   edx,eax
  41f017:	xor    DWORD PTR [esi+0x78],ecx
  41f01a:	je     0x41f041
  41f01c:	pop    es
  41f01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f01e:	xchg   ecx,eax
  41f01f:	retf   0x298a
  41f022:	iret   
  41f023:	mov    ds:0x9ea46be6,al
  41f028:	pop    esp
  41f029:	dec    edi
  41f02a:	cli    
  41f02b:	jl     0x41f09c
  41f02d:	sbb    BYTE PTR [ecx],dl
  41f02f:	out    0xdc,eax
  41f031:	inc    edi
  41f032:	mov    edx,0xff8ff08
  41f037:	xor    DWORD PTR [ecx+0x5a6bada3],ebx
  41f03d:	cmp    eax,0xa0289fc0
  41f042:	dec    eax
  41f043:	jae    0x41efe8
  41f045:	cdq    
  41f046:	stos   BYTE PTR es:[edi],al
  41f047:	shl    DWORD PTR [edx-0x40b72213],0x24
  41f04e:	jg     0x41efe6
  41f050:	and    eax,0xbde4e5a5
  41f055:	retf   0x1529
  41f058:	dec    edx
  41f059:	sub    DWORD PTR [esi-0x320866aa],edx
  41f05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f060:	ret    0x5d6d
  41f063:	test   al,0x30
  41f065:	(bad)  
  41f066:	jne    0x41f0ad
  41f068:	pop    esp
  41f069:	inc    ebx
  41f06a:	rol    BYTE PTR [ecx-0x68928292],0x38
  41f071:	fsub   DWORD PTR [ebp-0x5932c079]
  41f077:	out    0x18,eax
  41f079:	repnz sbb ecx,ecx
  41f07c:	in     eax,dx
  41f07d:	sub    eax,0xf04ea6b6
  41f082:	retf   
  41f083:	adc    eax,0x82c556d8
  41f088:	adc    edi,ebp
  41f08a:	inc    ecx
  41f08b:	sti    
  41f08c:	mov    ebp,0x5c9b41d4
  41f091:	push   cs
  41f092:	cld    
  41f093:	cmp    eax,0x26098aeb
  41f098:	ret    
  41f099:	sbb    ch,BYTE PTR [ecx+0x47]
  41f09c:	push   ss
  41f09d:	js     0x41f0b8
  41f09f:	sti    
  41f0a0:	sub    ah,bh
  41f0a2:	inc    edx
  41f0a3:	xchg   esp,eax
  41f0a4:	hlt    
  41f0a5:	dec    ecx
  41f0a6:	jne    0x41f0a3
  41f0a8:	shl    cl,1
  41f0aa:	popf   
  41f0ab:	int    0xc0
  41f0ad:	mov    dh,0x4a
  41f0af:	sbb    ch,BYTE PTR [ebx-0x79]
  41f0b2:	rcl    cl,0x52
  41f0b5:	and    al,0x54
  41f0b7:	test   DWORD PTR [ecx],ebp
  41f0b9:	inc    eax
  41f0ba:	(bad)  
  41f0bb:	scas   eax,DWORD PTR es:[edi]
  41f0bc:	push   esp
  41f0bd:	js     0x41f094
  41f0bf:	mov    eax,DWORD PTR ds:0xed87ad82
  41f0c5:	push   eax
  41f0c6:	ss pop gs
  41f0c9:	add    edi,DWORD PTR [ebx]
  41f0cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0cc:	fcom   DWORD PTR ds:0x5a25bfdf
  41f0d2:	lods   eax,DWORD PTR ds:[esi]
  41f0d3:	jmp    0xbacc:0xfcd310ff
  41f0da:	push   0xffffffc7
  41f0dc:	call   0xdb6b5302
  41f0e1:	outs   dx,DWORD PTR ds:[esi]
  41f0e2:	cli    
  41f0e3:	pop    ebx
  41f0e4:	es loope 0x41f082
  41f0e7:	push   esi
  41f0e8:	(bad)  
  41f0e9:	cmp    eax,0xa74412d5
  41f0ee:	(bad)  
  41f0ef:	ret    0x4a69
  41f0f2:	pop    edi
  41f0f3:	(bad)  
  41f0f4:	mov    al,0x51
  41f0f6:	push   ebx
  41f0f7:	imul   edx,DWORD PTR [ebp-0x2c4423eb],0x60
  41f0fe:	add    BYTE PTR [esi-0x14],0x6e
  41f102:	xchg   ecx,eax
  41f103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f104:	call   0x21579952
  41f109:	sbb    eax,0xc7cb95c7
  41f10e:	inc    edx
  41f10f:	xor    BYTE PTR [edx-0x7c181c72],0x30
  41f116:	push   ss
  41f117:	pop    edx
  41f118:	retf   0xf730
  41f11b:	and    BYTE PTR [ecx-0x4aedf053],0xf3
  41f122:	aas    
  41f123:	push   ebx
  41f124:	cld    
  41f125:	inc    esp
  41f126:	mov    eax,ds:0xe38af6bc
  41f12b:	sub    al,0xc7
  41f12d:	mov    edi,0xa2265f9a
  41f132:	jecxz  0x41f137
  41f134:	or     BYTE PTR [ecx],bh
  41f136:	push   ds
  41f137:	dec    eax
  41f138:	(bad)  
  41f139:	jne    0x41f182
  41f13b:	(bad)  
  41f13c:	mov    dh,0x19
  41f13e:	sbb    al,0x1b
  41f140:	loop   0x41f18f
  41f142:	or     al,bh
  41f144:	pop    edx
  41f145:	inc    ebp
  41f146:	sbb    edi,DWORD PTR [esi+0x736d0a0d]
  41f14c:	pop    esi
  41f14d:	mov    ecx,0x74af9d44
  41f152:	sbb    ebx,DWORD PTR [ebx-0x6d]
  41f155:	dec    esi
  41f156:	xor    eax,0x8a65bd2d
  41f15b:	jno    0x41f1c3
  41f15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f15e:	jmp    0xef34:0x46fe727c
  41f165:	sar    esi,0xad
  41f168:	mov    esi,0xe3d54c96
  41f16d:	fbstp  TBYTE PTR [edi+0x58ebf710]
  41f173:	mov    ch,0xe8
  41f175:	push   ds
  41f176:	xor    esp,DWORD PTR [esi]
  41f178:	jb     0x41f1f6
  41f17a:	pop    ss
  41f17b:	iret   
  41f17c:	push   edi
  41f17d:	dec    ebx
  41f17e:	fsub   QWORD PTR [edx+0x60]
  41f181:	mov    ebp,0x80dac545
  41f186:	inc    eax
  41f187:	cld    
  41f188:	xor    bh,BYTE PTR [eax-0x36]
  41f18b:	das    
  41f18c:	or     DWORD PTR [esi],0x60
  41f18f:	pop    ebp
  41f190:	popa   
  41f191:	fidivr DWORD PTR [edx]
  41f193:	iret   
  41f194:	xlat   BYTE PTR ds:[ebx]
  41f195:	mul    BYTE PTR [eax-0x54c4fa4b]
  41f19b:	(bad)  
  41f19c:	dec    BYTE PTR [edi+0x75]
  41f19f:	enter  0xf9ac,0x44
  41f1a3:	inc    esp
  41f1a4:	add    BYTE PTR [esi],0x13
  41f1a7:	rcr    edi,cl
  41f1a9:	or     al,0x58
  41f1ab:	sub    esi,DWORD PTR [esi+0x761a895d]
  41f1b1:	mov    DWORD PTR [ebx],ecx
  41f1b3:	jmp    0x41f1bb
  41f1b5:	xchg   edx,eax
  41f1b6:	popa   
  41f1b7:	pusha  
  41f1b8:	sub    al,0x29
  41f1ba:	retf   
  41f1bb:	adc    dl,BYTE PTR [eax-0x33]
  41f1be:	das    
  41f1bf:	fs (bad) 
  41f1c1:	cmp    ebx,esp
  41f1c3:	repnz xor bh,dh
  41f1c6:	inc    edi
  41f1c7:	ss cdq 
  41f1c9:	jno    0x41f20c
  41f1cb:	inc    edi
  41f1cc:	dec    ebx
  41f1cd:	add    al,0xa0
  41f1cf:	adc    eax,0x2b1d255
  41f1d4:	mov    ah,0x78
  41f1d6:	and    dl,BYTE PTR [edx+0x17c29a6f]
  41f1dc:	ror    ebp,0x75
  41f1df:	outs   dx,BYTE PTR ds:[esi]
  41f1e0:	pusha  
  41f1e1:	fdivr  DWORD PTR [eax]
  41f1e3:	(bad)  
  41f1e4:	scas   eax,DWORD PTR es:[edi]
  41f1e5:	xchg   BYTE PTR [ecx+0x62e58533],ah
  41f1eb:	jae    0x41f16e
  41f1ed:	es xchg ebp,eax
  41f1ef:	sahf   
  41f1f0:	sbb    eax,0x7d5ad2af
  41f1f5:	push   esp
  41f1f6:	pop    ebp
  41f1f7:	cwde   
  41f1f8:	xchg   ebx,eax
  41f1f9:	jns    0x41f208
  41f1fb:	mov    edx,0xa0a0283a
  41f200:	fcomp  DWORD PTR [esi]
  41f202:	push   0x9556c39b
  41f207:	sbb    DWORD PTR [edx],edx
  41f209:	push   edi
  41f20a:	in     eax,0x40
  41f20c:	sbb    DWORD PTR [ebx],ebp
  41f20e:	add    eax,0x52beb335
  41f213:	lods   al,BYTE PTR ds:[esi]
  41f214:	mov    ch,0x95
  41f216:	jo     0x41f228
  41f218:	xor    BYTE PTR [esi+edx*8-0x75],bl
  41f21c:	dec    ebp
  41f21d:	push   es
  41f21e:	xchg   edi,eax
  41f21f:	fisttp QWORD PTR [ebx-0x68aaa0]
  41f225:	imul   edx,DWORD PTR [ebx-0xc0889b9],0x7a
  41f22c:	push   eax
  41f22d:	call   DWORD PTR [edi+esi*1-0x44b1ac21]
  41f234:	sbb    DWORD PTR [eax+0x61],0xfffffff1
  41f238:	push   esi
  41f239:	inc    ebx
  41f23a:	hlt    
  41f23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f23c:	fs mov al,ah
  41f23f:	and    eax,0x543b9e4e
  41f244:	xor    eax,0xb97d8ce
  41f249:	lods   al,BYTE PTR ds:[esi]
  41f24a:	fsubp  st(2),st
  41f24c:	xlat   BYTE PTR ds:[ebx]
  41f24d:	inc    ecx
  41f24e:	mov    cl,0x96
  41f250:	dec    ebx
  41f251:	push   ebx
  41f252:	sub    eax,0x54486172
  41f257:	int3   
  41f258:	push   ebx
  41f259:	sar    ebp,1
  41f25b:	pop    DWORD PTR [ebp-0x72114524]
  41f261:	xchg   edx,eax
  41f262:	pop    ebp
  41f263:	ss jle 0x41f296
  41f266:	lock and DWORD PTR [ebx],edi
  41f269:	push   edi
  41f26a:	push   edi
  41f26b:	and    ecx,DWORD PTR [eax-0x51bd9757]
  41f271:	xchg   edx,eax
  41f272:	retf   0xeb0a
  41f275:	in     al,0x1b
  41f277:	sbb    ah,BYTE PTR [edi]
  41f279:	xor    al,0x67
  41f27b:	sbb    eax,0x5facf0d0
  41f280:	fistp  DWORD PTR [ebx]
  41f282:	adc    cl,BYTE PTR [esi-0x6ce8db0f]
  41f288:	mov    WORD PTR [ebx-0x44],es
  41f28b:	jl     0x41f210
  41f28d:	add    dl,BYTE PTR [ebx+ecx*4-0x37]
  41f291:	xor    BYTE PTR [esi],ch
  41f293:	pusha  
  41f294:	wbinvd 
  41f296:	shr    BYTE PTR [esi],1
  41f298:	pusha  
  41f299:	dec    esi
  41f29a:	pop    esi
  41f29b:	fs scas al,BYTE PTR es:[edi]
  41f29d:	sahf   
  41f29e:	mov    cl,bh
  41f2a0:	popf   
  41f2a1:	cpuid  
  41f2a3:	mov    ch,0x14
  41f2a5:	jb     0x41f308
  41f2a7:	test   al,0xc0
  41f2a9:	dec    esp
  41f2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ab:	cmp    esp,DWORD PTR [ebx-0x1e]
  41f2ae:	xlat   BYTE PTR ds:[ebx]
  41f2af:	pusha  
  41f2b0:	(bad)  
  41f2b1:	lods   al,BYTE PTR ds:[esi]
  41f2b2:	mov    al,0xb3
  41f2b4:	shr    dh,0x1c
  41f2b7:	mov    ecx,0xb5e5bb4e
  41f2bc:	shr    BYTE PTR [edx+0x2],1
  41f2bf:	adc    BYTE PTR [ebp+0x20],cl
  41f2c2:	push   eax
  41f2c3:	ss inc edx
  41f2c5:	sub    ebx,ecx
  41f2c7:	or     DWORD PTR [edx],ebp
  41f2c9:	ss lods eax,DWORD PTR ds:[esi]
  41f2cc:	and    BYTE PTR [esi],dl
  41f2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2cf:	jmp    0xf5b38afa
  41f2d4:	hlt    
  41f2d5:	rcl    BYTE PTR [eax-0x7ca044d0],0x7a
  41f2dc:	test   al,0x9
  41f2de:	enter  0x1d2f,0x9f
  41f2e2:	(bad)  
  41f2e3:	cmp    bh,dl
  41f2e5:	jmp    0x41f2a7
  41f2e7:	mov    BYTE PTR [edx+0xe],0xa6
  41f2eb:	dec    edi
  41f2ec:	in     eax,dx
  41f2ed:	and    dh,ch
  41f2ef:	lods   al,BYTE PTR ds:[esi]
  41f2f0:	outs   dx,BYTE PTR ds:[esi]
  41f2f1:	test   DWORD PTR [ecx+0x29b3910b],ecx
  41f2f7:	xor    ebx,DWORD PTR [edi+0x0]
  41f2fa:	mov    edi,0xd88c621c
  41f2ff:	sbb    DWORD PTR [ebx+0x41],ebp
  41f302:	js     0x41f287
  41f304:	cld    
  41f305:	inc    ebx
  41f306:	inc    esp
  41f307:	jle    0x41f35d
  41f309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f30a:	les    ecx,FWORD PTR [edi-0x238d67e8]
  41f310:	push   esp
  41f311:	jg     0x41f29c
  41f313:	imul   eax,DWORD PTR [edi-0x394daa0b],0xe3803127
  41f31d:	sbb    al,0x63
  41f31f:	sti    
  41f320:	mov    ah,0x2a
  41f322:	imul   esp,DWORD PTR [esi],0xffffffd8
  41f325:	push   edi
  41f326:	stos   BYTE PTR es:[edi],al
  41f327:	pop    ebp
  41f328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f329:	and    DWORD PTR [edi+0x75bde14],edi
  41f32f:	ins    DWORD PTR es:[edi],dx
  41f330:	das    
  41f331:	add    dl,0x9a
  41f334:	inc    edx
  41f335:	popa   
  41f336:	scas   eax,DWORD PTR es:[edi]
  41f337:	dec    edi
  41f338:	or     dl,ch
  41f33a:	inc    edi
  41f33b:	lock xor cl,al
  41f33e:	pop    ss
  41f33f:	cmp    dh,dh
  41f341:	test   eax,esp
  41f343:	stc    
  41f344:	fld    DWORD PTR [ecx+0x701142b2]
  41f34a:	in     al,dx
  41f34b:	aas    
  41f34c:	cwde   
  41f34d:	daa    
  41f34e:	mov    al,ds:0x7cfb8d46
  41f353:	(bad)  
  41f354:	ficomp DWORD PTR [edx+0xd]
  41f357:	(bad)  
  41f358:	cdq    
  41f359:	(bad)  
  41f35a:	ds jno 0x41f36b
  41f35d:	add    DWORD PTR [ebx-0xa],ebp
  41f360:	jge    0x41f3af
  41f362:	add    BYTE PTR [edx-0x268816cb],0x1
  41f369:	fimul  WORD PTR ds:0xa8cf17f7
  41f36f:	push   edx
  41f370:	sub    eax,0xd7fef723
  41f375:	aaa    
  41f376:	cmp    edx,edi
  41f378:	out    dx,al
  41f379:	aaa    
  41f37a:	les    edi,FWORD PTR [edx-0x42]
  41f37d:	test   al,0x1a
  41f37f:	or     ah,BYTE PTR [eax+0x373d9a00]
  41f385:	jmp    0x9125:0xc9102426
  41f38c:	pop    ds
  41f38d:	(bad)
  41f391:	in     eax,0x15
  41f393:	ins    DWORD PTR es:[edi],dx
  41f394:	and    eax,DWORD PTR [edi+0x1de162cf]
  41f39a:	lea    edx,[ecx-0x548a5253]
  41f3a0:	jo     0x41f345
  41f3a2:	jbe    0x41f34a
  41f3a4:	sbb    eax,0xbd397ee1
  41f3a9:	sub    edi,DWORD PTR [eax+ebp*2+0x2e9074e5]
  41f3b0:	mov    al,bh
  41f3b2:	xchg   edi,eax
  41f3b3:	jp     0x41f388
  41f3b5:	xor    eax,0x6ab4453a
  41f3ba:	dec    edx
  41f3bb:	(bad)
  41f3be:	xchg   bx,ax
  41f3c0:	sub    al,0x9c
  41f3c2:	ja     0x41f37e
  41f3c4:	scas   al,BYTE PTR es:[edi]
  41f3c5:	pop    edx
  41f3c6:	retf   0xf8b2
  41f3c9:	(bad)  
  41f3ca:	repnz imul edx,DWORD PTR [eax-0x5b],0x13ba8540
  41f3d2:	push   edi
  41f3d3:	daa    
  41f3d4:	or     DWORD PTR [ecx+0x3930ea1f],eax
  41f3da:	retf   
  41f3db:	cmc    
  41f3dc:	mov    ds:0x3c0fbd48,al
  41f3e1:	hlt    
  41f3e2:	int3   
  41f3e3:	pushf  
  41f3e4:	cmp    eax,0x1060b2f5
  41f3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ea:	jo     0x41f3ea
  41f3ec:	mov    dl,0xcc
  41f3ee:	jecxz  0x41f394
  41f3f0:	js     0x41f455
  41f3f2:	cmp    esp,DWORD PTR [edx+0x44]
  41f3f5:	xor    bl,BYTE PTR [ecx+ebp*4+0x4ef65b36]
  41f3fc:	clc    
  41f3fd:	jecxz  0x41f41d
  41f3ff:	cmp    DWORD PTR [edx+0x1b15487f],edi
  41f405:	imul   ebp,DWORD PTR [esi-0x14],0x7f
  41f409:	push   ebp
  41f40a:	test   BYTE PTR [ebx-0x79834502],bh
  41f410:	xchg   edi,eax
  41f411:	or     ebx,ebx
  41f413:	push   cs
  41f414:	jae    0x41f47d
  41f416:	addr16 or eax,0x2699e1d5
  41f41c:	inc    ebx
  41f41d:	stos   DWORD PTR es:[edi],eax
  41f41e:	std    
  41f41f:	sbb    DWORD PTR [ebp+0x67279186],esi
  41f425:	push   ebx
  41f426:	test   DWORD PTR [edx+0x2ad73746],eax
  41f42c:	push   0x54
  41f42e:	mov    edx,0x968e027a
  41f433:	mov    al,ds:0x24768080
  41f438:	ret    
  41f439:	aaa    
  41f43a:	mov    ds:0x6a2c007f,eax
  41f43f:	add    DWORD PTR [esi-0x41764d32],esi
  41f445:	xlat   BYTE PTR ds:[ebx]
  41f446:	sbb    BYTE PTR [eax],bl
  41f448:	mov    ch,0xc0
  41f44a:	pop    es
  41f44b:	jno    0x41f433
  41f44d:	add    eax,0x3d12f665
  41f452:	cmp    al,0x45
  41f454:	pop    esp
  41f455:	sbb    DWORD PTR [esp+ecx*8],ebx
  41f458:	scas   al,BYTE PTR es:[edi]
  41f459:	lods   al,BYTE PTR ds:[esi]
  41f45a:	add    eax,0xc3ccf49a
  41f45f:	pop    edi
  41f460:	dec    ebp
  41f461:	loopne 0x41f4d8
  41f463:	adc    al,0xa8
  41f465:	mov    al,0xc
  41f467:	int3   
  41f468:	fcomip st,st(5)
  41f46a:	xor    DWORD PTR [ebx+edi*1],eax
  41f46d:	aad    0x57
  41f46f:	leave  
  41f470:	mov    ebp,0x2148a9bc
  41f475:	sub    eax,0x3f8bb19d
  41f47a:	and    ecx,DWORD PTR [ebp+ebp*1+0x42]
  41f47e:	cmp    edi,0x25
  41f481:	(bad)  
  41f482:	adc    ah,BYTE PTR [edi-0x6e3ed0ba]
  41f488:	push   eax
  41f489:	dec    ebx
  41f48a:	sbb    al,0xc5
  41f48c:	pop    ebp
  41f48d:	aas    
  41f48e:	push   cs
  41f48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f490:	jb     0x41f41d
  41f492:	(bad)  
  41f493:	aaa    
  41f494:	nop
  41f495:	mov    ds:0x79c60605,eax
  41f49a:	adc    DWORD PTR [esi+0x39571e3c],ebx
  41f4a0:	cwde   
  41f4a1:	std    
  41f4a2:	sbb    al,0x74
  41f4a4:	xchg   edi,eax
  41f4a5:	xor    ebp,DWORD PTR [esi+0x1658a7cd]
  41f4ab:	test   al,0x8c
  41f4ad:	push   ebp
  41f4ae:	mov    al,0x61
  41f4b0:	(bad)  
  41f4b2:	in     eax,0x84
  41f4b4:	and    eax,0x7fb9e312
  41f4b9:	inc    ebp
  41f4ba:	int3   
  41f4bb:	fcmove st,st(3)
  41f4bd:	cmp    al,0xbf
  41f4bf:	cmp    eax,0x8d60aada
  41f4c4:	fldenv [edx-0x2d]
  41f4c7:	push   eax
  41f4c8:	cwde   
  41f4c9:	cwde   
  41f4ca:	pop    esp
  41f4cb:	jl     0x41f500
  41f4cd:	xlat   BYTE PTR ds:[ebx]
  41f4ce:	out    0x47,eax
  41f4d0:	push   edx
  41f4d1:	sbb    al,0xe3
  41f4d3:	and    ebp,DWORD PTR [edx+esi*4+0x5e]
  41f4d7:	ret    
  41f4d8:	mul    ch
  41f4da:	push   ss
  41f4db:	punpckhdq mm6,QWORD PTR [ebp+0x75]
  41f4df:	aas    
  41f4e0:	lds    edi,FWORD PTR [ecx+0x1d7a9525]
  41f4e6:	loopne 0x41f480
  41f4e8:	(bad)  
  41f4e9:	pop    eax
  41f4ea:	leave  
  41f4eb:	and    BYTE PTR [esi-0x13aa7df3],bl
  41f4f1:	test   eax,0x683df7bb
  41f4f6:	in     al,0x3b
  41f4f8:	cmp    DWORD PTR [esi],0xffffffcf
  41f4fb:	repz out dx,eax
  41f4fd:	repz lock call 0xed8b81a
  41f504:	ror    BYTE PTR [ebx-0x121658a6],cl
  41f50a:	sahf   
  41f50b:	mov    ds:0xc877b829,eax
  41f510:	mov    eax,ds:0x62e434cd
  41f515:	ja     0x41f525
  41f517:	mov    bl,0xcd
  41f519:	and    al,0x27
  41f51b:	mov    ah,BYTE PTR [esi-0x24]
  41f51e:	or     dh,cl
  41f520:	lock in eax,0xda
  41f523:	cld    
  41f524:	push   edi
  41f525:	hlt    
  41f526:	ins    DWORD PTR es:[edi],dx
  41f527:	pop    ds
  41f528:	sub    BYTE PTR [esi+0x60],bh
  41f52b:	xlat   BYTE PTR ds:[ebx]
  41f52c:	xor    ebx,ebx
  41f52e:	ffree  st(5)
  41f530:	pop    ecx
  41f531:	push   ebp
  41f532:	std    
  41f533:	mov    edi,0xd3b01d4e
  41f538:	mov    ecx,0xa806e2bb
  41f53d:	mov    ecx,0x41264bbd
  41f542:	xor    ebx,edi
  41f544:	add    al,0x6e
  41f546:	fiadd  WORD PTR [esi+0x5963ab05]
  41f54c:	std    
  41f54d:	cmp    al,0x96
  41f54f:	cmp    BYTE PTR [esi+0x75],dl
  41f552:	inc    ecx
  41f553:	shr    DWORD PTR [ebx+0x46e035af],1
  41f559:	jbe    0x41f4f9
  41f55b:	push   edx
  41f55c:	call   0x3772:0x761c3179
  41f563:	popa   
  41f564:	sbb    al,0x2b
  41f567:	gs mov ecx,0xdbc06
  41f56d:	xor    dh,BYTE PTR [esi]
  41f56f:	lods   eax,DWORD PTR ds:[esi]
  41f570:	jp     0x41f542
  41f572:	test   BYTE PTR [ecx],ah
  41f574:	adc    esi,ebx
  41f576:	hlt    
  41f577:	aam    0x9d
  41f579:	lock idiv DWORD PTR [ebp+edx*4-0x4865b73a]
  41f581:	mov    cl,0x9d
  41f583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f584:	scas   al,BYTE PTR es:[edi]
  41f585:	out    0x12,eax
  41f587:	scas   al,BYTE PTR es:[edi]
  41f588:	mov    esi,0x5e989c5d
  41f58d:	push   ebp
  41f58e:	(bad)  
  41f58f:	in     eax,0x88
  41f591:	xlat   BYTE PTR ds:[ebx]
  41f592:	sbb    al,0x30
  41f594:	add    DWORD PTR [ecx-0x64],ebp
  41f597:	and    ecx,edi
  41f599:	mov    edi,0x899d6ca3
  41f59e:	xor    eax,0xe339ad09
  41f5a3:	push   eax
  41f5a4:	xchg   esi,eax
  41f5a5:	xchg   bl,bl
  41f5a7:	rol    BYTE PTR [edi-0x46b0521],cl
  41f5ad:	js     0x41f5ed
  41f5af:	sbb    BYTE PTR [esi+ebx*4+0x7e6857f4],ah
  41f5b6:	in     al,dx
  41f5b7:	dec    esp
  41f5b8:	ja     0x41f628
  41f5ba:	aad    0x15
  41f5bc:	ins    DWORD PTR es:[edi],dx
  41f5bd:	(bad)  
  41f5be:	xor    al,0x23
  41f5c0:	sti    
  41f5c1:	or     BYTE PTR [ecx],bl
  41f5c3:	lock pop ebx
  41f5c5:	int3   
  41f5c6:	repnz add bl,0x5
  41f5ca:	(bad)  
  41f5cb:	loopne 0x41f60f
  41f5cd:	dec    esp
  41f5ce:	pop    edx
  41f5cf:	inc    ebx
  41f5d0:	xchg   edi,eax
  41f5d2:	neg    esp
  41f5d4:	inc    eax
  41f5d5:	pop    es
  41f5d6:	scas   al,BYTE PTR es:[edi]
  41f5d7:	clc    
  41f5d8:	stc    
  41f5d9:	add    al,0xb2
  41f5db:	pop    esi
  41f5dc:	cmp    BYTE PTR [edi+ebp*8-0x79],bh
  41f5e0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41f5e2:	pop    esp
  41f5e3:	retf   
  41f5e4:	xchg   esp,eax
  41f5e5:	mov    DWORD PTR [ebx-0x2a],esp
  41f5e8:	std    
  41f5e9:	cli    
  41f5ea:	pop    cx
  41f5ec:	inc    esp
  41f5ed:	(bad)  
  41f5ee:	idiv   DWORD PTR [ebx+0x6b]
  41f5f1:	ret    
  41f5f2:	nop
  41f5f3:	xlat   BYTE PTR ds:[ebx]
  41f5f4:	mov    dl,0xca
  41f5f6:	out    0x6a,eax
  41f5f8:	mov    ds:0xf1ed9a51,al
  41f5fd:	push   es
  41f5fe:	pop    ss
  41f5ff:	or     eax,0x2baff6c1
  41f604:	mov    ebx,0x33efb0f6
  41f609:	stc    
  41f60a:	cmp    eax,0xcc47631a
  41f60f:	jnp    0x41f690
  41f611:	hlt    
  41f612:	lds    edx,FWORD PTR ds:0x83fd5b7e
  41f618:	stc    
  41f619:	mov    edi,esi
  41f61b:	push   esi
  41f61c:	or     ebx,DWORD PTR [edx+ebx*4]
  41f61f:	daa    
  41f620:	cmp    bl,BYTE PTR [edi+0x6c11559e]
  41f626:	sub    eax,0xd97c950
  41f62b:	ret    
  41f62c:	push   ebx
  41f62d:	hlt    
  41f62e:	cld    
  41f62f:	inc    esi
  41f630:	mov    edx,DWORD PTR ds:[edi+0x4dda10e8]
  41f637:	out    0x83,al
  41f639:	jbe    0x41f5c8
  41f63b:	in     al,0xae
  41f63d:	adc    bh,BYTE PTR [edi]
  41f63f:	jge    0x41f5d2
  41f641:	icebp  
  41f642:	test   al,0xac
  41f644:	dec    esp
  41f645:	adc    al,0xd1
  41f647:	call   0x282cbd72
  41f64c:	jmp    0xfeb31227
  41f651:	dec    esp
  41f652:	pop    ebp
  41f653:	int3   
  41f654:	adc    al,0xac
  41f656:	xor    DWORD PTR [ecx],esp
  41f658:	ror    bh,cl
  41f65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f65b:	call   DWORD PTR [esi-0x61]
  41f65e:	sub    ebp,DWORD PTR [ebp-0x27]
  41f661:	dec    esp
  41f662:	mov    ah,0xd4
  41f664:	leave  
  41f665:	add    al,0xf8
  41f667:	lods   al,BYTE PTR ds:[esi]
  41f668:	jns    0x41f68a
  41f66a:	jo     0x41f6c1
  41f66c:	and    ecx,ebp
  41f66e:	sbb    DWORD PTR [eax+0x100dc2db],edi
  41f674:	cld    
  41f675:	jecxz  0x41f621
  41f677:	jl     0x41f698
  41f679:	mov    esi,DWORD PTR [ecx*1-0x1edf8ffe]
  41f680:	push   edx
  41f681:	imul   ecx,DWORD PTR [ebx+eax*1],0x2e
  41f685:	scas   eax,DWORD PTR es:[edi]
  41f686:	jmp    0xcaa2:0xe0f4b634
  41f68d:	int3   
  41f68e:	mov    ds:0x6f08260d,eax
  41f693:	jnp    0x41f645
  41f695:	stc    
  41f696:	ret    0x6c80
  41f699:	fstp   TBYTE PTR [ebx]
  41f69b:	jae    0x41f69b
  41f69d:	sbb    al,0xac
  41f69f:	sub    ebx,DWORD PTR [edx-0x3]
  41f6a2:	sub    al,0x9e
  41f6a4:	ret    
  41f6a5:	clc    
  41f6a6:	out    dx,eax
  41f6a7:	test   al,0xb3
  41f6a9:	aad    0x8d
  41f6ab:	not    DWORD PTR [edx-0x382ef64c]
  41f6b1:	push   0xffffffe8
  41f6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6b4:	(bad)
  41f6b9:	cwde   
  41f6ba:	daa    
  41f6bb:	xchg   ebx,eax
  41f6bc:	int3   
  41f6bd:	jo     0x41f672
  41f6bf:	shl    BYTE PTR ds:0x89eb66f5,0x15
  41f6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6c7:	hlt    
  41f6c8:	ret    
  41f6c9:	leave  
  41f6ca:	or     al,0x23
  41f6cc:	mov    cl,0xc5
  41f6ce:	call   0xb27b:0x6d4cf7c5
  41f6d5:	mov    ch,dh
  41f6d7:	push   0x22af5dbd
  41f6dc:	idiv   DWORD PTR [ebx-0x71135e1b]
  41f6e2:	push   DWORD PTR [esp+0x6e9f188c]
  41f6e9:	sub    al,0xf0
  41f6eb:	jp     0x41f751
  41f6ed:	outs   dx,DWORD PTR ds:[esi]
  41f6ee:	pop    esi
  41f6ef:	iret   
  41f6f0:	mov    edx,0xd6072342
  41f6f5:	or     ebx,DWORD PTR es:[ebp-0x55]
  41f6f9:	inc    edx
  41f6fa:	mov    ds:0xe7e3d5bf,al
  41f6ff:	xchg   esi,eax
  41f700:	(bad)  
  41f701:	and    BYTE PTR [ebp+0x31],al
  41f704:	enter  0xab63,0x6c
  41f708:	inc    esi
  41f709:	stos   BYTE PTR es:[edi],al
  41f70a:	and    BYTE PTR [ebp+0x2b],dl
  41f70d:	lods   al,BYTE PTR ds:[esi]
  41f70e:	dec    esi
  41f70f:	sbb    BYTE PTR [esi],ch
  41f711:	push   ebp
  41f712:	(bad)  
  41f713:	icebp  
  41f714:	mov    esp,ds
  41f716:	jb     0x41f6f8
  41f718:	lods   eax,DWORD PTR ds:[esi]
  41f719:	pop    ss
  41f71a:	push   eax
  41f71b:	mov    edi,0xc4cd0b32
  41f720:	lea    ebp,[ecx+0x7d]
  41f723:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f725:	and    BYTE PTR [edi-0x63e9d4d9],0xb5
  41f72c:	into   
  41f72d:	cli    
  41f72e:	jb     0x41f757
  41f730:	mov    ds:0xfa20c4fb,al
  41f735:	jae    0x41f7a1
  41f737:	mov    ch,0x8
  41f739:	dec    edi
  41f73a:	jg     0x41f70d
  41f73c:	ficomp DWORD PTR [eax-0x7b]
  41f73f:	lahf   
  41f740:	inc    ebp
  41f741:	add    dh,dh
  41f743:	fiadd  DWORD PTR [edx+0x30abc5fc]
  41f749:	sbb    eax,0xa80f0bc6
  41f74e:	jp     0x41f6f1
  41f750:	mov    edi,0x537a47ed
  41f755:	retf   0x24c4
  41f758:	enter  0xdc98,0x60
  41f75c:	sbb    BYTE PTR [edi+0x4bcaf277],al
  41f762:	or     bl,BYTE PTR [ebx-0x3a]
  41f765:	aam    0x8
  41f767:	inc    esp
  41f768:	cdq    
  41f769:	fmul   st,st(4)
  41f76b:	pop    es
  41f76c:	or     eax,0x97099465
  41f771:	push   esp
  41f772:	cmove  ecx,DWORD PTR [eax-0x3f8bdc32]
  41f779:	loope  0x41f756
  41f77b:	sub    DWORD PTR [esi-0xf],0xd985f165
  41f782:	data16 sbb BYTE PTR [bp+si-0x2a],cl
  41f787:	xlat   BYTE PTR ds:[ebx]
  41f788:	inc    esi
  41f789:	test   al,0x9d
  41f78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f78c:	mov    ebx,0x7cc1e962
  41f791:	iret   
  41f792:	push   edi
  41f793:	xchg   edi,eax
  41f794:	sub    ch,BYTE PTR [ebx-0x35]
  41f797:	inc    ebx
  41f798:	mov    DWORD PTR [esi-0x32],ebp
  41f79b:	test   BYTE PTR [edx-0x6d],bh
  41f79e:	push   ebx
  41f79f:	xacquire xchg DWORD PTR [eax-0xd0e91c],esp
  41f7a6:	sub    BYTE PTR [edx+0x39],cl
  41f7a9:	scas   eax,DWORD PTR es:[edi]
  41f7aa:	xchg   al,dl
  41f7ac:	push   esi
  41f7ad:	neg    DWORD PTR [esi+0x76]
  41f7b0:	xchg   ecx,eax
  41f7b1:	cwde   
  41f7b2:	gs ss jmp 0x41f7d3
  41f7b6:	sub    al,0x5f
  41f7b8:	cmp    DWORD PTR [edx-0x49],0xb5a3bc72
  41f7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c0:	mov    ch,0xd0
  41f7c2:	inc    eax
  41f7c3:	(bad)
  41f7c6:	cmp    eax,0x84b9cf26
  41f7cb:	or     ecx,ebp
  41f7cd:	push   ss
  41f7ce:	inc    esp
  41f7cf:	je     0x41f766
  41f7d1:	inc    ecx
  41f7d2:	lea    edi,[ebx]
  41f7d4:	mov    cl,0x2c
  41f7d6:	adc    eax,0xbcaa5a11
  41f7db:	jnp    0x41f7c8
  41f7dd:	cmp    DWORD PTR [bp+di+0x2b80],ecx
  41f7e2:	push   0xffffffef
  41f7e4:	jae    0x41f79e
  41f7e6:	call   0xc407:0xe808359a
  41f7ed:	les    esi,FWORD PTR [eax]
  41f7ef:	loope  0x41f7e2
  41f7f1:	ins    DWORD PTR es:[edi],dx
  41f7f2:	mov    al,ds:0xfd96bf8a
  41f7f7:	out    dx,eax
  41f7f8:	iret   
  41f7f9:	std    
  41f7fa:	dec    ecx
  41f7fb:	sub    DWORD PTR [edx-0x563afb90],edi
  41f801:	sbb    BYTE PTR [ecx-0x36],ch
  41f804:	add    eax,0x54839667
  41f809:	inc    ebp
  41f80a:	test   al,0x4d
  41f80c:	sar    ebp,0x4a
  41f80f:	jl     0x41f845
  41f811:	sbb    bh,BYTE PTR [ebx-0x69]
  41f814:	pushf  
  41f815:	ins    BYTE PTR es:[edi],dx
  41f816:	aam    0x5c
  41f818:	jns    0x41f7a3
  41f81a:	lahf   
  41f81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f81c:	(bad)  
  41f81d:	dec    edx
  41f81e:	test   eax,0xbe642c85
  41f823:	cmp    al,0xe4
  41f825:	test   al,0x70
  41f827:	mov    dh,0xd8
  41f829:	mov    esi,?
  41f82b:	ins    BYTE PTR es:[edi],dx
  41f82c:	outs   dx,BYTE PTR ds:[esi]
  41f82d:	jp     0x41f80b
  41f82f:	test   eax,0x87a3f8cc
  41f834:	test   eax,0xec4e6da6
  41f839:	mov    bl,0x60
  41f83b:	(bad)  
  41f83c:	xchg   edx,eax
  41f83d:	sbb    bh,BYTE PTR [edx-0x709ed82d]
  41f843:	cmp    DWORD PTR [eax-0x7e2a3f2c],0x6b2adf0d
  41f84d:	enter  0x8619,0x52
  41f851:	cmp    esp,esi
  41f853:	sbb    al,0x53
  41f855:	test   cl,dl
  41f857:	ret    0x530b
  41f85a:	(bad)  
  41f85c:	out    dx,eax
  41f85d:	out    0x2c,eax
  41f85f:	and    ecx,ecx
  41f861:	aas    
  41f862:	(bad)  
  41f863:	repnz shr DWORD PTR [esi-0x19],cl
  41f867:	aas    
  41f868:	repnz inc ecx
  41f86a:	mov    eax,0xf9cc1831
  41f86f:	add    ch,dl
  41f871:	das    
  41f872:	xchg   DWORD PTR [eax-0x498320a6],ebx
  41f878:	test   eax,0xee841da7
  41f87d:	jg     0x41f804
  41f87f:	dec    eax
  41f880:	dec    DWORD PTR [edx]
  41f882:	adc    ah,bh
  41f884:	iret   
  41f885:	dec    eax
  41f886:	add    BYTE PTR [ebp+0x61],dh
  41f889:	push   ebp
  41f88a:	push   ebx
  41f88b:	stos   BYTE PTR es:[edi],al
  41f88c:	xchg   edi,eax
  41f88d:	loop   0x41f898
  41f88f:	ins    DWORD PTR es:[edi],dx
  41f890:	pop    eax
  41f891:	scas   eax,DWORD PTR es:[edi]
  41f892:	jnp    0x41f8cc
  41f894:	push   ecx
  41f895:	std    
  41f896:	std    
  41f897:	pop    eax
  41f898:	mul    DWORD PTR [edi]
  41f89a:	icebp  
  41f89b:	call   0xf55ef9d
  41f8a0:	pop    ss
  41f8a1:	jmp    0x3631:0xabb8555c
  41f8a8:	ja     0x41f8a7
  41f8aa:	adc    al,0xfe
  41f8ac:	lds    edi,FWORD PTR [edi+0x60bd8d02]
  41f8b2:	mov    dl,0x3c
  41f8b4:	inc    esi
  41f8b5:	pusha  
  41f8b6:	imul   esp,DWORD PTR [ebx],0xbef79e9e
  41f8bc:	cmp    eax,0xf44faaeb
  41f8c1:	fwait
  41f8c2:	loopne 0x41f8b7
  41f8c4:	mov    ch,0xc4
  41f8c6:	(bad)  
  41f8c7:	out    dx,al
  41f8c8:	adc    al,0x4e
  41f8ca:	xor    BYTE PTR [edx],ch
  41f8cc:	jge    0x41f90a
  41f8ce:	adc    al,0x49
  41f8d0:	fwait
  41f8d1:	or     edx,DWORD PTR [eax+ecx*1+0x5a]
  41f8d5:	ret    
  41f8d6:	hlt    
  41f8d7:	push   0x43
  41f8d9:	add    esi,DWORD PTR [ebx]
  41f8db:	daa    
  41f8dc:	(bad)  
  41f8dd:	popf   
  41f8de:	adc    ebx,ecx
  41f8e0:	add    eax,0xad3558bb
  41f8e5:	fcmovnu st,st(7)
  41f8e7:	adc    eax,0x461a2b48
  41f8ec:	dec    edx
  41f8ed:	push   edi
  41f8ee:	int    0x75
  41f8f0:	cmp    BYTE PTR [ebx-0x2c],0x69
  41f8f4:	test   DWORD PTR [ebp+ebx*2+0x2019c82a],ebx
  41f8fb:	pusha  
  41f8fc:	dec    ebx
  41f8fd:	cmc    
  41f8fe:	mov    DWORD PTR [edx],esp
  41f900:	cli    
  41f901:	clc    
  41f902:	adc    DWORD PTR [ecx+0x3cc4541f],edi
  41f908:	fadd   DWORD PTR [ecx+0x7a]
  41f90b:	jnp    0x41f89e
  41f90d:	inc    esi
  41f90e:	xchg   eax,ebx
  41f910:	por    mm4,QWORD PTR [esi+0x24]
  41f914:	add    DWORD PTR [eax+ebp*4+0x52],0xffffff94
  41f919:	jne    0x41f941
  41f91b:	jb     0x41f8c2
  41f91d:	test   al,0xed
  41f91f:	sub    esi,DWORD PTR [eax+eiz*8+0x357f043c]
  41f926:	shl    DWORD PTR [ebp+0xe6488c8],1
  41f92c:	es inc eax
  41f92e:	popf   
  41f92f:	jmp    0xa5c1f88f
  41f934:	mov    dl,0x1c
  41f936:	push   ds
  41f937:	mov    al,0x27
  41f939:	loope  0x41f915
  41f93b:	popf   
  41f93c:	dec    ecx
  41f93d:	sar    DWORD PTR [edx+edx*4],cl
  41f940:	imul   edx,DWORD PTR [ebx+eax*8+0x40],0xbdf2b982
  41f948:	sbb    al,0x53
  41f94a:	pop    ebx
  41f94b:	xor    BYTE PTR [edi-0x34],dl
  41f94e:	bound  edx,QWORD PTR [eax]
  41f950:	lea    edi,[ecx+ecx*8+0x56]
  41f954:	adc    dl,BYTE PTR [edx-0x6b]
  41f957:	jne    0x41f9b6
  41f959:	mov    BYTE PTR [edi+0x11],0xf1
  41f95d:	jbe    0x41f993
  41f95f:	push   es
  41f960:	aam    0x1e
  41f962:	bound  esp,QWORD PTR [ebx-0x18c68010]
  41f968:	leave  
  41f969:	fsub   DWORD PTR [ebp+0x5f]
  41f96c:	fild   WORD PTR [eax-0x16]
  41f96f:	gs retf 0xe74e
  41f973:	in     al,0x5
  41f975:	fcmovbe st,st(2)
  41f977:	xchg   ebp,eax
  41f978:	xchg   edi,eax
  41f979:	lahf   
  41f97a:	xchg   ebp,eax
  41f97b:	push   eax
  41f97c:	xor    eax,0xc2093220
  41f981:	loope  0x41f93c
  41f983:	inc    ebp
  41f984:	pop    ecx
  41f985:	pop    ebx
  41f986:	lock into 
  41f988:	and    DWORD PTR [ebp+edx*8-0x34],edx
  41f98c:	and    cl,BYTE PTR [esi]
  41f98e:	cmp    DWORD PTR [ebx+0x520c836b],ebx
  41f994:	js     0x41f9be
  41f996:	push   eax
  41f997:	xchg   ebp,eax
  41f998:	mov    dl,0x2e
  41f99a:	dec    eax
  41f99b:	mov    dl,0x2a
  41f99d:	sub    BYTE PTR [edx+0x30],ah
  41f9a0:	adc    dh,ah
  41f9a2:	push   edi
  41f9a3:	ja     0x41f98a
  41f9a5:	lods   al,BYTE PTR ds:[esi]
  41f9a6:	jne    0x41f946
  41f9a8:	daa    
  41f9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9aa:	xchg   DWORD PTR ds:0x4dda0b13,eax
  41f9b0:	xor    al,bh
  41f9b2:	and    esi,DWORD PTR [ebx]
  41f9b4:	out    dx,eax
  41f9b5:	dec    ecx
  41f9b6:	pusha  
  41f9b7:	cdq    
  41f9b8:	mov    dl,0xc1
  41f9ba:	in     eax,dx
  41f9bb:	mov    dh,0x5f
  41f9bd:	test   eax,0x948200cb
  41f9c2:	push   ss
  41f9c3:	int3   
  41f9c4:	xor    ebx,DWORD PTR [ebx+0x652d4610]
  41f9ca:	push   esi
  41f9cb:	clc    
  41f9cc:	lock sahf 
  41f9ce:	loop   0x41f9dc
  41f9d0:	fidivr WORD PTR [ebx-0x4974595a]
  41f9d6:	das    
  41f9d7:	in     eax,dx
  41f9d8:	je     0x41f98f
  41f9da:	sub    eax,0x9c71d516
  41f9df:	cmp    eax,0x5867741c
  41f9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e5:	jno    0x41fa66
  41f9e7:	pop    eax
  41f9e8:	ja     0x41fa0d
  41f9ea:	(bad)  
  41f9eb:	mul    edi
  41f9ed:	xor    al,0xc3
  41f9ef:	enter  0x6a61,0x9e
  41f9f3:	fbstp  TBYTE PTR [eax+0x6b7196a8]
  41f9f9:	cmp    edi,0x11
  41f9fc:	pop    es
  41f9fd:	enter  0xc7a3,0xfa
  41fa01:	pop    edi
  41fa02:	mov    ah,0x7b
  41fa04:	adc    ah,BYTE PTR [esi-0x51]
  41fa07:	mov    eax,0xfd69fce7
  41fa0c:	push   es
  41fa0d:	cmc    
  41fa0e:	imul   ebx,DWORD PTR [ebp+ebp*8+0x29a56f87],0x1b
  41fa16:	and    dl,BYTE PTR [ebx+0x76accd82]
  41fa1c:	pop    ss
  41fa1d:	in     al,0x98
  41fa1f:	jmp    0xddcf3c54
  41fa24:	or     eax,0xa8231975
  41fa29:	ret    0xb4ab
  41fa2c:	(bad)  
  41fa2d:	pop    esi
  41fa2e:	in     eax,dx
  41fa2f:	cld    
  41fa30:	fadd   QWORD PTR [eax]
  41fa32:	std    
  41fa33:	mov    WORD PTR [edx-0x3c],?
  41fa36:	(bad)  
  41fa37:	jne    0x41fa53
  41fa39:	mov    ch,0xc5
  41fa3b:	call   0x63af0b09
  41fa40:	dec    ebx
  41fa41:	adc    eax,0x412ecc7e
  41fa46:	sbb    bh,0x4f
  41fa49:	out    0xa4,al
  41fa4b:	dec    edx
  41fa4c:	add    edx,eax
  41fa4e:	fnsave [eax-0x56bc7cd5]
  41fa54:	sub    ch,BYTE PTR [esi+0x49]
  41fa57:	fcomp  DWORD PTR [ebx+ecx*2+0x3b476ced]
  41fa5e:	mov    dh,0x10
  41fa60:	ret    0xd24b
  41fa63:	cmp    DWORD PTR [edi+0x5a],0x5e049dcb
  41fa6a:	addr16 mov bl,0xfc
  41fa6d:	xchg   esi,eax
  41fa6e:	out    0xc6,eax
  41fa70:	dec    ebp
  41fa71:	sub    al,0xb5
  41fa73:	xor    al,0xc8
  41fa75:	jecxz  0x41fa68
  41fa77:	lds    eax,FWORD PTR [ecx-0x520bfc58]
  41fa7d:	sub    al,0x36
  41fa7f:	cmp    al,al
  41fa81:	jae    0x41fae1
  41fa83:	jmp    0x41fad3
  41fa85:	ret    
  41fa86:	call   0xf323f491
  41fa8b:	mov    ebp,0xe27095e
  41fa90:	fsub   QWORD PTR [esp-0x47]
  41fa94:	jecxz  0x41fb0d
  41fa96:	retf   
  41fa97:	dec    esi
  41fa98:	sbb    BYTE PTR [ecx-0x6eb437ba],cl
  41fa9e:	retf   0x4303
  41faa1:	test   DWORD PTR [esi],ebp
  41faa3:	in     eax,0x88
  41faa5:	pusha  
  41faa6:	mov    BYTE PTR [ecx+0x69],bl
  41faa9:	fmul   QWORD PTR [ecx]
  41faab:	mov    ch,0x7a
  41faad:	adc    bh,BYTE PTR [ecx-0x76]
  41fab0:	inc    ecx
  41fab1:	mov    bl,0x7f
  41fab3:	out    0x1b,eax
  41fab5:	lock inc ecx
  41fab7:	out    dx,al
  41fab8:	or     bl,0x46
  41fabb:	test   DWORD PTR [ebx],eax
  41fabd:	mov    eax,ds:0x478eaa2e
  41fac2:	and    eax,0x2c4eb0e6
  41fac7:	and    DWORD PTR [eax+0x20],esi
  41faca:	pop    ss
  41facb:	sar    BYTE PTR [edx+0x6d],1
  41face:	(bad)
  41fad1:	adc    BYTE PTR [edi],cl
  41fad3:	out    0xe2,al
  41fad5:	mov    cl,BYTE PTR [edi+eax*8]
  41fad8:	retf   0x1585
  41fadb:	addr16 push ecx
  41fadd:	push   ss
  41fade:	add    eax,0xde976394
  41fae3:	sbb    al,0x8a
  41fae5:	ret    
  41fae6:	mov    eax,0xb3b72902
  41faeb:	bound  ebx,QWORD PTR ds:0x7205468c
  41faf1:	jnp    0x41fb13
  41faf3:	or     ebp,DWORD PTR [ebp+0x36]
  41faf6:	mov    al,ds:0x4cf93e94
  41fafb:	add    eax,0x55c2c855
  41fb00:	lds    ebp,FWORD PTR [ecx]
  41fb02:	int    0x96
  41fb04:	lea    esp,[esi]
  41fb06:	fst    QWORD PTR [ebx]
  41fb08:	jl     0x41faaa
  41fb0a:	mov    al,ds:0x1f45fdef
  41fb0f:	add    al,0xf2
  41fb11:	inc    edx
  41fb12:	ror    DWORD PTR [ebx],0x5c
  41fb15:	nop
  41fb16:	mov    dl,0xb6
  41fb18:	xchg   edi,eax
  41fb19:	pop    esp
  41fb1a:	pop    edi
  41fb1b:	xchg   edx,eax
  41fb1c:	sbb    DWORD PTR [eax-0x70],eax
  41fb1f:	dec    eax
  41fb20:	and    al,dl
  41fb22:	jns    0x41fb05
  41fb24:	out    dx,al
  41fb25:	pop    ss
  41fb26:	cmp    cl,BYTE PTR [esi-0x4f0c6914]
  41fb2c:	dec    ecx
  41fb2d:	jecxz  0x41fafc
  41fb2f:	push   esi
  41fb30:	out    0x3d,al
  41fb32:	das    
  41fb33:	mov    ds,WORD PTR [eax-0x35]
  41fb36:	rcl    BYTE PTR [esi-0x350fcd12],cl
  41fb3c:	in     eax,dx
  41fb3d:	loope  0x41fb4e
  41fb3f:	pop    es
  41fb40:	adc    DWORD PTR [ecx],edx
  41fb42:	dec    edx
  41fb43:	inc    ebx
  41fb44:	test   eax,0x37e524f6
  41fb49:	(bad)  
  41fb4a:	fcmovb st,st(7)
  41fb4c:	cmp    eax,esp
  41fb4e:	and    dl,BYTE PTR [esi]
  41fb50:	out    dx,al
  41fb51:	lea    ebp,[eax]
  41fb53:	jle    0x41fbb8
  41fb55:	pushf  
  41fb56:	sub    ebp,eax
  41fb58:	add    al,0x4b
  41fb5a:	idiv   DWORD PTR [edx+0x37]
  41fb5d:	das    
  41fb5e:	stos   DWORD PTR es:[edi],eax
  41fb5f:	ins    DWORD PTR es:[edi],dx
  41fb60:	(bad)  
  41fb61:	jmp    0x41fb26
  41fb63:	mov    edx,0x3a247bde
  41fb68:	xchg   ax,ax
  41fb6a:	loopne 0x41fb62
  41fb6c:	mov    dh,0x5
  41fb6e:	jae    0x41fb73
  41fb70:	pop    edi
  41fb71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb72:	dec    ecx
  41fb73:	sahf   
  41fb74:	push   ecx
  41fb75:	out    dx,eax
  41fb76:	add    al,0x89
  41fb78:	mov    edi,0xeb19ea
  41fb7d:	jbe    0x41fba5
  41fb7f:	pusha  
  41fb80:	add    ah,bh
  41fb82:	xchg   DWORD PTR [eax],esp
  41fb84:	rcr    DWORD PTR [ecx+0x74],1
  41fb87:	pop    esi
  41fb88:	pop    esi
  41fb89:	daa    
  41fb8a:	into   
  41fb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb8c:	(bad)  
  41fb8d:	mov    edi,0xfc70fe07
  41fb92:	bound  edi,QWORD PTR [ecx+esi*1]
  41fb95:	aaa    
  41fb96:	iret   
  41fb97:	fdiv   DWORD PTR [edx]
  41fb99:	(bad)  
  41fb9a:	imul   ecx,DWORD PTR [ebx-0x78e831cb],0xfaf242b0
  41fba4:	lea    esi,[edx-0x50]
  41fba7:	in     eax,0xab
  41fba9:	fwait
  41fbaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbab:	push   ebx
  41fbac:	fadd   st(5),st
  41fbae:	mov    WORD PTR ds:[edx+0x41203fd8],cs
  41fbb5:	je     0x41fb4f
  41fbb7:	cld    
  41fbb8:	imul   esp,DWORD PTR [ecx],0xffffff90
  41fbbb:	in     eax,dx
  41fbbc:	and    ebx,edx
  41fbbe:	jo     0x41fbf4
  41fbc0:	sti    
  41fbc1:	(bad)  
  41fbc2:	loope  0x41fbff
  41fbc4:	popf   
  41fbc5:	xor    bl,ah
  41fbc7:	into   
  41fbc8:	add    edi,DWORD PTR [ebx-0x197035c0]
  41fbce:	std    
  41fbcf:	xchg   ebx,eax
  41fbd0:	sub    eax,0xd76a113c
  41fbd5:	jmp    0xc1c0:0xe610afab
  41fbdc:	xchg   eax,esp
  41fbde:	cmovnp eax,DWORD PTR [edx]
  41fbe1:	leave  
  41fbe2:	int3   
  41fbe3:	mov    ch,0xce
  41fbe5:	fisubr DWORD PTR [esi-0x6b]
  41fbe8:	add    esi,edx
  41fbea:	add    al,0xcb
  41fbec:	add    ebp,DWORD PTR [ebx+0x749eeca4]
  41fbf2:	js     0x41fc00
  41fbf4:	sub    DWORD PTR ds:0xae9ced82,eax
  41fbfa:	push   0xfe377219
  41fbff:	imul   ebp,DWORD PTR [eax],0xffffff95
  41fc02:	sbb    bh,BYTE PTR [ecx]
  41fc04:	ror    BYTE PTR [edx+0x4b2a66d0],1
  41fc0a:	rcr    BYTE PTR [ebx+0x58],1
  41fc0d:	aam    0x49
  41fc0f:	cmp    ah,BYTE PTR [esi+0xb]
  41fc12:	mov    cl,0xe8
  41fc14:	add    eax,0x1aa8ab32
  41fc19:	push   ebx
  41fc1a:	test   DWORD PTR [edi+0x33],ebx
  41fc1d:	adc    BYTE PTR [ecx],0x11
  41fc20:	or     al,0xca
  41fc22:	icebp  
  41fc23:	fstp   DWORD PTR [ecx+ebp*1-0x50]
  41fc27:	cmp    eax,0x8dc40b4
  41fc2c:	fiadd  WORD PTR [edi+0x3]
  41fc2f:	ins    BYTE PTR es:[edi],dx
  41fc30:	hlt    
  41fc31:	int3   
  41fc32:	dec    esp
  41fc33:	popa   
  41fc34:	xlat   BYTE PTR ds:[ebx]
  41fc35:	hlt    
  41fc36:	dec    esi
  41fc37:	out    dx,eax
  41fc38:	(bad)  
  41fc39:	aad    0xad
  41fc3b:	push   ds
  41fc3c:	mov    cl,0xda
  41fc3e:	mov    bh,0x7a
  41fc40:	add    ebx,eax
  41fc42:	sbb    bh,BYTE PTR [esi+edx*8+0x21]
  41fc46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc47:	aam    0x71
  41fc49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4a:	cld    
  41fc4b:	movd   mm2,DWORD PTR ds:0x21b5ceed
  41fc52:	sub    dh,BYTE PTR [ebx+0x6397394f]
  41fc58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc59:	outs   dx,BYTE PTR ds:[esi]
  41fc5a:	inc    ecx
  41fc5b:	aaa    
  41fc5c:	into   
  41fc5d:	mov    ebp,0x498b0a7c
  41fc62:	xor    eax,0xf6e85f8e
  41fc67:	std    
  41fc68:	test   BYTE PTR [esi+ebx*8+0x2fe1763],dl
  41fc6f:	adc    eax,edi
  41fc71:	jbe    0x41fc3e
  41fc73:	or     ch,al
  41fc75:	push   eax
  41fc76:	cs sub eax,0x3bd4fe9d
  41fc7c:	cmp    DWORD PTR [ecx+0x3284561f],esi
  41fc82:	mov    edx,0x99e7fe13
  41fc87:	test   al,0xd2
  41fc89:	dec    esp
  41fc8a:	push   0xffffffe6
  41fc8c:	fist   DWORD PTR [ebp+eiz*1-0x66f77cc2]
  41fc93:	clc    
  41fc94:	test   ebp,edx
  41fc96:	mov    BYTE PTR [ebx],dl
  41fc98:	fcom   QWORD PTR [edx+edi*8+0xdc824b2]
  41fc9f:	into   
  41fca0:	nop
  41fca1:	gs call 0x2d73:0xc99bac3e
  41fca9:	mov    dh,0xcd
  41fcab:	loope  0x41fc5b
  41fcad:	fistp  QWORD PTR [ebp+ebx*2-0x7de53d3c]
  41fcb4:	sub    eax,DWORD PTR [esi]
  41fcb6:	bound  ecx,QWORD PTR [ebx+0x3d6f31b0]
  41fcbc:	mov    bh,0xc5
  41fcbe:	popa   
  41fcbf:	fcom   st(6)
  41fcc1:	cld    
  41fcc2:	and    al,0x32
  41fcc4:	xchg   BYTE PTR [esp+ebp*4-0x31],al
  41fcc8:	(bad)  
  41fcc9:	adc    al,0x70
  41fccb:	fwait
  41fccc:	repz aas 
  41fcce:	xor    esp,ebp
  41fcd0:	lock push ss
  41fcd2:	xor    al,0xcd
  41fcd4:	cmp    ah,BYTE PTR [ecx-0x32]
  41fcd7:	cmp    ah,BYTE PTR [ecx-0x34]
  41fcda:	and    eax,0x832fb119
  41fcdf:	mov    DWORD PTR [ecx+0x21fc742d],eax
  41fce5:	frstor [eax-0x69]
  41fce8:	stos   DWORD PTR es:[edi],eax
  41fce9:	inc    ebx
  41fcea:	cmp    DWORD PTR [ecx+0x2a],esi
  41fced:	mov    ecx,0xbc8c9190
  41fcf2:	inc    ebx
  41fcf3:	aam    0x18
  41fcf5:	dec    edi
  41fcf6:	aam    0xa1
  41fcf8:	cli    
  41fcf9:	push   ecx
  41fcfa:	imul   DWORD PTR [ecx+eax*8+0x4ab9d3e5]
  41fd01:	fsub   DWORD PTR [edi-0x58261703]
  41fd07:	imul   ecx,DWORD PTR [ebx-0x4690ece1],0x65
  41fd0e:	retf   0xe4d0
  41fd11:	cmp    al,0x15
  41fd13:	jmp    0x41fcb5
  41fd15:	scas   al,BYTE PTR es:[edi]
  41fd16:	imul   ebp,edx,0x8
  41fd19:	popaw  
  41fd1b:	lods   al,BYTE PTR ds:[esi]
  41fd1c:	ret    
  41fd1d:	sub    ch,BYTE PTR [edx]
  41fd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd20:	dec    ebx
  41fd21:	mov    ds:0x11c962c9,eax
  41fd26:	jl     0x41fd24
  41fd28:	rcl    DWORD PTR [edi+eiz*2],cl
  41fd2b:	mov    edx,0x9d3b57a6
  41fd30:	fdivr  QWORD PTR [ebp+0x4a80fc8b]
  41fd36:	je     0x41fd42
  41fd38:	stos   BYTE PTR es:[edi],al
  41fd39:	lock out dx,eax
  41fd3b:	imul   edx,eax,0xf61f4cae
  41fd41:	hlt    
  41fd42:	ss cmp al,0xea
  41fd45:	xor    DWORD PTR [edx],edi
  41fd47:	pop    edx
  41fd48:	xor    eax,0x9de2b968
  41fd4d:	ins    BYTE PTR es:[edi],dx
  41fd4e:	pop    ecx
  41fd4f:	aam    0xc6
  41fd51:	inc    ecx
  41fd52:	jnp    0x41fd38
  41fd54:	retf   0x6696
  41fd57:	mov    fs,WORD PTR [ecx+edi*1-0x2d]
  41fd5b:	in     eax,0x9c
  41fd5d:	aad    0xc8
  41fd5f:	and    DWORD PTR [esp+0x19b52cc5],esp
  41fd66:	push   esi
  41fd67:	(bad)  ds:0x488b1f16
  41fd6d:	lock ins BYTE PTR es:[edi],dx
  41fd6f:	mov    esi,0x4467ac0b
  41fd74:	rcr    DWORD PTR [ecx],1
  41fd76:	scas   al,BYTE PTR es:[edi]
  41fd77:	sbb    BYTE PTR [esi-0x68],ch
  41fd7a:	fdivr  DWORD PTR [edx]
  41fd7c:	fcmove st,st(7)
  41fd7e:	popf   
  41fd7f:	aaa    
  41fd80:	inc    esi
  41fd81:	xor    DWORD PTR [ecx+0x309b78f5],ebp
  41fd87:	mov    cl,0xcc
  41fd89:	push   ecx
  41fd8a:	inc    edx
  41fd8b:	inc    esp
  41fd8c:	cld    
  41fd8d:	xor    al,0x5
  41fd8f:	sbb    al,0xae
  41fd91:	outs   dx,BYTE PTR ds:[esi]
  41fd92:	jns    0x41fde3
  41fd94:	or     esi,esp
  41fd96:	xlat   BYTE PTR ds:[ebx]
  41fd97:	bound  esi,QWORD PTR [edx]
  41fd99:	inc    ebp
  41fd9a:	add    eax,0xaac76c3f
  41fd9f:	les    ebp,FWORD PTR [ebp+0x2c]
  41fda2:	or     ebx,esi
  41fda4:	dec    edi
  41fda5:	mov    ds:0xe27cd476,al
  41fdaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdab:	fist   DWORD PTR [esi+0x5385ff74]
  41fdb1:	imul   edx,DWORD PTR [esi],0x83af2ff6
  41fdb7:	shld   DWORD PTR ds:0xa15e153c,ecx,cl
  41fdbe:	loope  0x41fd5f
  41fdc0:	fst    QWORD PTR [ebp+0x1f]
  41fdc3:	xchg   esi,eax
  41fdc4:	push   ecx
  41fdc5:	dec    esp
  41fdc6:	jns    0x41fd6c
  41fdc8:	cmp    DWORD PTR [ebp+0x28],eax
  41fdcb:	mov    ebx,0x229f1dee
  41fdd0:	pop    eax
  41fdd1:	push   esi
  41fdd2:	or     al,0x67
  41fdd4:	aaa    
  41fdd5:	push   edx
  41fdd6:	sub    ebx,DWORD PTR [edx]
  41fdd8:	mov    ecx,0xfe0793db
  41fddd:	out    0x56,al
  41fddf:	mov    fs,esi
  41fde1:	or     DWORD PTR [eax-0x6b07aec2],0xffffff96
  41fde8:	jge    0x41fe5f
  41fdea:	mov    dh,0x4d
  41fdec:	ret    
  41fded:	cmp    ecx,DWORD PTR [ebx-0x6]
  41fdf0:	shr    DWORD PTR [edx],1
  41fdf2:	hlt    
  41fdf3:	mov    WORD PTR [ebx-0x3a96f672],?
  41fdf9:	jge    0x41fe24
  41fdfb:	pop    ss
  41fdfc:	ffreep st(2)
  41fdfe:	cld    
  41fdff:	mov    eax,ds:0xa78955f1
  41fe04:	into   
  41fe05:	xchg   DWORD PTR [esi-0x44],ecx
  41fe08:	dec    esp
  41fe09:	mov    ebx,0xe691700b
  41fe0e:	xchg   edx,eax
  41fe0f:	test   al,0xd9
  41fe11:	or     ecx,esi
  41fe13:	les    ecx,FWORD PTR [eax+0x2295a6e]
  41fe19:	inc    edx
  41fe1a:	std    
  41fe1b:	repnz mov edx,0xf222cb57
  41fe21:	shl    DWORD PTR [bp+di-0x5580],cl
  41fe26:	daa    
  41fe27:	in     eax,0xec
  41fe29:	mov    ?,WORD PTR [ebx+0x10]
  41fe2c:	int3   
  41fe2d:	mov    esi,0xaece35a3
  41fe32:	jg     0x41fe93
  41fe34:	xchg   ebp,eax
  41fe35:	push   ebx
  41fe36:	push   cs
  41fe37:	test   BYTE PTR [edi],ch
  41fe39:	cdq    
  41fe3a:	inc    edi
  41fe3b:	dec    ebx
  41fe3c:	pop    edx
  41fe3d:	ins    DWORD PTR es:[edi],dx
  41fe3e:	cs pop esi
  41fe40:	push   esp
  41fe41:	jae    0x41fe8f
  41fe43:	push   0x1475a563
  41fe48:	cli    
  41fe49:	js     0x41fe9b
  41fe4b:	pop    esi
  41fe4c:	test   BYTE PTR [ebx+0x5c],ah
  41fe4f:	sub    al,0xe0
  41fe51:	(bad)  
  41fe52:	mov    dl,0x93
  41fe54:	cld    
  41fe55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe56:	sti    
  41fe57:	cwde   
  41fe58:	xchg   BYTE PTR [ecx+ecx*2],bh
  41fe5b:	arpl   WORD PTR ss:[esi],bp
  41fe5e:	mov    eax,0x55720b6a
  41fe63:	pop    esi
  41fe64:	jge    0x41fe40
  41fe66:	jno    0x41fe15
  41fe68:	add    al,0xf4
  41fe6a:	int3   
  41fe6b:	jns    0x41fe76
  41fe6d:	mov    ah,BYTE PTR [esi]
  41fe6f:	inc    edx
  41fe70:	push   ss
  41fe71:	or     DWORD PTR [ebx+0x1a],esi
  41fe74:	retf   
  41fe75:	imul   eax,esp,0x2881d5fd
  41fe7b:	cli    
  41fe7c:	push   edi
  41fe7d:	addr16 sbb al,0xb3
  41fe80:	mov    edx,0x643ded7d
  41fe85:	jbe    0x41fe60
  41fe87:	push   0xffffffe6
  41fe89:	jge    0x41fe13
  41fe8b:	sbb    dh,BYTE PTR [edi-0x7]
  41fe8e:	mov    WORD PTR [ecx+0x52944afb],ds
  41fe94:	mov    cl,0xe3
  41fe96:	xor    eax,0xa9ee7e58
  41fe9b:	cmp    BYTE PTR [ecx+0x4e],0xc
  41fe9f:	mov    eax,0xce0582b
  41fea4:	xchg   edx,eax
  41fea5:	jo     0x41ff25
  41fea7:	ret    0x57e4
  41feaa:	aas    
  41feab:	lds    ecx,FWORD PTR [edi-0x5f]
  41feae:	xchg   ebp,eax
  41feaf:	sbb    cl,BYTE PTR ds:0x9a6f0f81
  41feb5:	adc    BYTE PTR [edi],dh
  41feb7:	mov    ch,0xff
  41feb9:	bound  ebp,QWORD PTR [ecx]
  41febb:	sbb    ebx,DWORD PTR [edx+ebx*8+0x0]
  41febf:	add    bh,ch
  41fec1:	xor    BYTE PTR [esi-0x1e],ch
  41fec4:	inc    edx
  41fec5:	js     0x41fe6e
  41fec7:	es sub eax,0x1dddfe1d
  41fecd:	retf   
  41fece:	and    al,0x9d
  41fed0:	int    0xb6
  41fed2:	adc    DWORD PTR [esi+0x66],0x7bf13b91
  41fed9:	xchg   BYTE PTR [edx-0x41],bl
  41fedc:	out    dx,eax
  41fedd:	in     eax,dx
  41fede:	aas    
  41fedf:	js     0x41ff08
  41fee1:	push   cs
  41fee2:	fcmovu st,st(3)
  41fee4:	sahf   
  41fee5:	scas   al,BYTE PTR es:[edi]
  41fee6:	xchg   ebx,eax
  41fee7:	fadd   st,st(3)
  41fee9:	stos   DWORD PTR es:[edi],eax
  41feea:	inc    esi
  41feeb:	adc    eax,DWORD PTR [ebx+edi*8]
  41feee:	leave  
  41feef:	cmp    DWORD PTR [edx],esi
  41fef1:	pop    esi
  41fef2:	push   ebx
  41fef3:	repnz cdq 
  41fef5:	dec    esp
  41fef6:	fnstenv [esi]
  41fef8:	adc    edx,eax
  41fefa:	std    
  41fefb:	retf   0x6797
  41fefe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feff:	push   esi
  41ff00:	ror    DWORD PTR [edx+0x33],1
  41ff03:	push   esi
  41ff04:	(bad)  
  41ff05:	dec    eax
  41ff06:	and    bh,BYTE PTR [ebx+0x7a5528f0]
  41ff0c:	pop    ebx
  41ff0d:	addr16 xchg edi,eax
  41ff0f:	leave  
  41ff10:	pop    esi
  41ff11:	and    ah,BYTE PTR [esi-0x47]
  41ff14:	cwde   
  41ff15:	sbb    eax,0x19b9c657
  41ff1a:	out    dx,eax
  41ff1b:	inc    edx
  41ff1c:	sahf   
  41ff1d:	or     dh,BYTE PTR [esi+0x7eed4203]
  41ff23:	ins    DWORD PTR es:[edi],dx
  41ff24:	cli    
  41ff25:	sti    
  41ff26:	out    0xe3,eax
  41ff28:	inc    eax
  41ff29:	dec    ecx
  41ff2a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff2c:	mov    ds:0xf61a925,al
  41ff31:	sbb    eax,0x52a85cd2
  41ff36:	fistp  QWORD PTR [edx+0xd737c36]
  41ff3c:	mov    eax,0xbfb7398f
  41ff41:	jbe    0x41ffb0
  41ff43:	(bad)  
  41ff44:	jnp    0x41ff82
  41ff46:	lahf   
  41ff47:	jp     0x41ff6a
  41ff49:	leave  
  41ff4a:	inc    eax
  41ff4b:	fwait
  41ff4c:	rcl    DWORD PTR [esi],cl
  41ff4e:	fnstcw WORD PTR [ecx-0x5c95b0f0]
  41ff54:	or     DWORD PTR ds:0x42286194,ecx
  41ff5a:	loop   0x41ff00
  41ff5c:	outs   dx,DWORD PTR ds:[esi]
  41ff5d:	ficom  WORD PTR [ebp-0x63]
  41ff60:	(bad)  
  41ff61:	inc    esi
  41ff62:	sub    ebp,DWORD PTR [eax-0x70]
  41ff65:	push   ecx
  41ff66:	pop    ecx
  41ff67:	mov    ah,0x94
  41ff69:	pop    ecx
  41ff6a:	sub    edi,ecx
  41ff6c:	sbb    edx,0x21
  41ff6f:	push   cs
  41ff70:	add    DWORD PTR [ecx-0x69e91d5d],esp
  41ff76:	mov    ebx,0x2316d92f
  41ff7b:	add    DWORD PTR [eax-0x3e],0xfffffff4
  41ff7f:	(bad)  
  41ff80:	(bad)  
  41ff81:	pop    eax
  41ff82:	xchg   edi,eax
  41ff83:	mov    ebp,0xb6bea752
  41ff88:	inc    esi
  41ff89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff8a:	cld    
  41ff8b:	cli    
  41ff8c:	jl     0x41ffd9
  41ff8e:	pop    fs
  41ff90:	lods   eax,DWORD PTR ds:[esi]
  41ff91:	mov    bl,0xd
  41ff93:	es and DWORD PTR cs:[ebp+0x62ec550c],ecx
  41ff9b:	ret    0x44e3
  41ff9e:	xchg   esi,eax
  41ff9f:	imul   esp,DWORD PTR [ebp-0x5114f99f],0x10c649ff
  41ffa9:	xchg   esi,eax
  41ffaa:	sub    DWORD PTR [ebp-0x5387bff8],edx
  41ffb0:	jo     0x41ffed
  41ffb2:	pop    es
  41ffb3:	scas   eax,DWORD PTR es:[edi]
  41ffb4:	les    ebx,FWORD PTR [esi]
  41ffb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb7:	sar    DWORD PTR [eax],1
  41ffb9:	lock pushf 
  41ffbb:	and    al,0x8c
  41ffbd:	mov    BYTE PTR [edx+ecx*8-0x35],bl
  41ffc1:	pop    ds
  41ffc2:	add    eax,0xd695c6fd
  41ffc7:	push   0xfe5b61e8
  41ffcc:	pop    esp
  41ffcd:	jg     0x41ffb9
  41ffcf:	(bad)  
  41ffd0:	shl    BYTE PTR [ecx-0x52a442d9],0xa6
  41ffd7:	dec    ebx
  41ffd8:	or     eax,0x9b226e9a
  41ffdd:	stos   BYTE PTR es:[edi],al
  41ffde:	mov    fs,WORD PTR [edi-0x64d5eb4d]
  41ffe4:	fisttp DWORD PTR [edx-0x9]
  41ffe7:	sbb    ecx,esi
  41ffe9:	push   eax
  41ffea:	or     DWORD PTR [edi],edx
  41ffec:	pop    edx
  41ffed:	inc    esi
  41ffee:	hlt    
  41ffef:	adc    DWORD PTR [eax-0xb2692c9],ebx
  41fff5:	add    DWORD PTR [ebx-0x5422d56d],ebx
  41fffb:	gs cmp eax,0xcbadbbdc
  420001:	lods   al,BYTE PTR ds:[esi]
  420002:	dec    ebx
  420003:	int    0x55
  420005:	imul   edx,DWORD PTR [ebp-0x2bed9e5a],0x33
  42000c:	cwde   
  42000d:	sub    al,0x96
  42000f:	sar    ebp,1
  420011:	arpl   cx,bx
  420013:	jnp    0x420034
  420015:	sbb    eax,0x50bf8ab3
  42001a:	test   DWORD PTR [esi],eax
  42001c:	dec    edi
  42001d:	mov    cl,0xe5
  42001f:	data16 test dh,ch
  420022:	xchg   esp,eax
  420023:	popa   
  420024:	xor    DWORD PTR [eax],ecx
  420026:	pop    ss
  420027:	adc    DWORD PTR [eax-0x1be901b2],esp
  42002d:	adc    ah,BYTE PTR cs:[ebp+0x3b]
  420031:	inc    eax
  420032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420033:	sbb    eax,0xb7720f65
  420038:	jge    0x41ffe8
  42003a:	add    ch,BYTE PTR ds:0x4c8c4bff
  420040:	xor    eax,0x9c762280
  420045:	shr    DWORD PTR [ebp+0x2da36888],0xbf
  42004c:	lods   al,BYTE PTR ds:[esi]
  42004d:	(bad)  
  42004e:	add    al,0xea
  420050:	push   esp
  420051:	xor    ch,BYTE PTR [esp+eax*2+0x4b]
  420055:	setp   BYTE PTR [edi-0x257a510c]
  42005c:	inc    edx
  42005d:	mov    dl,0x37
  42005f:	(bad)  
  420060:	cmc    
  420061:	mov    ss,ecx
  420063:	cmp    ch,BYTE PTR [ecx-0x749e2c90]
  420069:	and    esp,ebp
  42006b:	inc    ecx
  42006c:	fs arpl cx,si
  42006f:	shl    BYTE PTR ds:0xbd9ee82,cl
  420075:	inc    edx
  420076:	and    BYTE PTR [eax+0xd2ef0f4],ah
  42007c:	das    
  42007d:	test   cl,cl
  42007f:	xchg   edx,eax
  420080:	imul   esi,ecx,0x2d
  420083:	jle    0x42006f
  420085:	dec    esi
  420086:	(bad)  
  420087:	sahf   
  420088:	jecxz  0x4200af
  42008a:	jl     0x420027
  42008c:	lods   al,BYTE PTR ds:[esi]
  42008d:	pushf  
  42008e:	aam    0xe
  420090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420091:	shl    bl,0xa3
  420094:	sbb    al,0x6d
  420096:	int3   
  420097:	pop    edx
  420098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420099:	fcos   
  42009b:	in     al,0x59
  42009d:	popa   
  42009e:	stos   BYTE PTR es:[edi],al
  42009f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200a0:	sbb    dl,ah
  4200a2:	inc    edi
  4200a3:	sbb    eax,0x2a8245c0
  4200a8:	mov    edx,0x84cb77e9
  4200ad:	into   
  4200ae:	(bad)  
  4200af:	mov    edx,0xa60d226b
  4200b4:	cmc    
  4200b5:	add    esp,ecx
  4200b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b8:	mov    bh,0x53
  4200ba:	sub    al,0x38
  4200bc:	scas   al,BYTE PTR es:[edi]
  4200bd:	and    ebp,edi
  4200bf:	mov    eax,es:0x64e7c6e
  4200c5:	lahf   
  4200c6:	inc    ebp
  4200c7:	cmp    al,0xda
  4200c9:	bound  esi,QWORD PTR [esi-0x80]
  4200cc:	jb     0x4200cb
  4200ce:	movq   QWORD PTR [edi+0x9a461c4],mm7
  4200d5:	ror    cl,1
  4200d7:	aaa    
  4200d8:	leave  
  4200d9:	test   BYTE PTR [eax],dl
  4200db:	cmp    al,0x4f
  4200dd:	inc    edi
  4200de:	and    eax,0x9b98c256
  4200e3:	mov    eax,0x7dab7579
  4200e8:	scas   al,BYTE PTR es:[edi]
  4200e9:	sbb    ah,ch
  4200eb:	cdq    
  4200ec:	in     eax,dx
  4200ed:	not    BYTE PTR [esi-0x21]
  4200f0:	stos   BYTE PTR es:[edi],al
  4200f1:	shl    DWORD PTR [edi+0x4a],cl
  4200f4:	mov    ch,0xcf
  4200f6:	push   esp
  4200f7:	dec    eax
  4200f8:	xor    DWORD PTR fs:[ebx],ecx
  4200fb:	and    esi,DWORD PTR [ebx-0x36011dff]
  420101:	inc    ebp
  420102:	inc    esi
  420103:	mov    ch,0x80
  420105:	stos   BYTE PTR es:[edi],al
  420106:	push   es
  420107:	pop    es
  420108:	bswap  edx
  42010a:	push   edx
  42010b:	and    ecx,DWORD PTR [ebp-0x49]
  42010e:	cli    
  42010f:	jle    0x4200e9
  420111:	sbb    bl,ch
  420113:	add    BYTE PTR [edx-0x17f8b323],cl
  420119:	lahf   
  42011a:	shr    BYTE PTR [eax+0x51aa54f3],cl
  420120:	xchg   edx,eax
  420121:	jp     0x420174
  420123:	push   ss
  420124:	mov    ds:0x7abab1d8,al
  420129:	popa   
  42012a:	shl    DWORD PTR [ebx],1
  42012c:	int    0x2f
  42012e:	and    cl,bh
  420130:	or     eax,0xcfbef943
  420135:	jmp    0x699d:0xb8cd7e59
  42013c:	mov    bl,0xae
  42013e:	mov    esp,0x16d8d83f
  420143:	mov    ds:0x3d741d23,al
  420148:	or     eax,DWORD PTR [esi]
  42014a:	push   ebx
  42014b:	push   eax
  42014c:	inc    esp
  42014d:	pop    edx
  42014e:	mov    dh,0x4e
  420150:	gs pusha 
  420152:	pop    edx
  420153:	hlt    
  420154:	daa    
  420155:	out    dx,eax
  420156:	into   
  420157:	mov    al,0x8f
  420159:	cmp    DWORD PTR [ecx],eax
  42015b:	js     0x42015e
  42015d:	push   0x918f8434
  420162:	into   
  420163:	icebp  
  420164:	fld    QWORD PTR [eax-0x22]
  420167:	cdq    
  420168:	push   ebx
  420169:	sti    
  42016a:	inc    ebx
  42016b:	cmp    al,0x66
  42016d:	mov    al,ds:0x9ff8ec7b
  420172:	dec    edi
  420173:	inc    edx
  420174:	sbb    DWORD PTR [edi-0x5f],ebp
  420177:	sub    DWORD PTR [eax+ecx*8],ebp
  42017a:	test   ebp,edx
  42017c:	add    edx,DWORD PTR [edx]
  42017e:	cld    
  42017f:	jbe    0x42014c
  420181:	or     DWORD PTR [eax+0x321c0c52],eax
  420187:	pop    ds
  420188:	pop    es
  420189:	shl    DWORD PTR [ebp+0x13a9d079],cl
  42018f:	test   eax,0x3ab96750
  420194:	push   ss
  420195:	and    cl,BYTE PTR [esi]
  420197:	xchg   edi,eax
  420198:	dec    edi
  420199:	daa    
  42019a:	mov    ds,WORD PTR [eax+0x11]
  42019d:	out    0x7c,al
  42019f:	adc    DWORD PTR [ebx-0x332e6169],ecx
  4201a5:	arpl   WORD PTR [ecx+edi*8+0x2e413c67],bp
  4201ac:	imul   ecx,DWORD PTR [edx],0xbc799a1a
  4201b2:	adc    BYTE PTR [esi-0x6bc861b],ch
  4201b8:	in     eax,0x6c
  4201ba:	int3   
  4201bb:	aad    0xe1
  4201bd:	outs   dx,BYTE PTR ds:[esi]
  4201be:	(bad)  
  4201bf:	push   ss
  4201c0:	jmp    0x92c53e8b
  4201c5:	dec    edx
  4201c6:	loop   0x4201bb
  4201c8:	sbb    al,0x11
  4201ca:	inc    edx
  4201cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201cc:	dec    esi
  4201cd:	inc    ecx
  4201ce:	loopne 0x4201e9
  4201d0:	and    edx,esi
  4201d2:	jne    0x4201c0
  4201d4:	or     eax,0x6b5e71f6
  4201d9:	adc    BYTE PTR [ecx+0x35],ch
  4201dc:	fwait
  4201dd:	test   BYTE PTR [edx+ecx*1],ah
  4201e0:	cld    
  4201e1:	pop    esi
  4201e2:	shr    ebp,1
  4201e4:	push   0x1f
  4201e6:	repnz test al,0x58
  4201e9:	mov    edx,0xf8e4c19a
  4201ee:	push   esi
  4201ef:	retf   
  4201f0:	cmp    BYTE PTR ds:0xdad920bf,cl
  4201f6:	sbb    dh,ch
  4201f8:	pop    ebp
  4201f9:	pop    ebp
  4201fa:	mov    ds:0x4c43fdad,eax
  4201ff:	cwde   
  420200:	mov    ebx,0xd6fed311
  420205:	cmp    DWORD PTR [esi-0x1e475aaa],esi
  42020b:	cmp    BYTE PTR [ebx+0x45a6eb47],ch
  420211:	xchg   DWORD PTR [edx+0x42],esi
  420214:	mov    ch,0x6b
  420216:	es jecxz 0x42023c
  420219:	call   0xa950:0x8288553d
  420220:	lahf   
  420221:	iret   
  420222:	neg    DWORD PTR [edx]
  420224:	fcomp  DWORD PTR [ebx-0x57]
  420227:	js     0x42029b
  420229:	aaa    
  42022a:	pushf  
  42022b:	xchg   edi,eax
  42022c:	mov    edx,DWORD PTR [eax+ebp*4+0x40569a81]
  420233:	jne    0x4201ca
  420235:	ret    0x1e7a
  420238:	sub    al,0xcd
  42023a:	sub    esi,ebp
  42023c:	xor    al,dl
  42023e:	ret    
  42023f:	cmp    eax,0xe1a144d3
  420244:	sub    ebx,ebx
  420246:	adc    DWORD PTR [esi],ebp
  420248:	nop
  420249:	and    eax,0x9d3740dd
  42024e:	mov    al,0x8f
  420250:	pushf  
  420251:	inc    ecx
  420252:	cmp    BYTE PTR [edi+0x57f58213],al
  420258:	adc    ch,BYTE PTR [esi]
  42025a:	bound  ebx,QWORD PTR [ecx-0x48]
  42025d:	repz jbe 0x4202c0
  420260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420261:	push   ebx
  420262:	or     DWORD PTR [eax-0x2a],ecx
  420265:	test   BYTE PTR [edi-0x3f],ah
  420268:	jp     0x42020f
  42026a:	pop    eax
  42026b:	out    0x13,eax
  42026d:	add    al,0x49
  42026f:	xchg   esi,eax
  420270:	add    dh,BYTE PTR es:[ecx-0x7b]
  420274:	push   edi
  420275:	das    
  420276:	xor    ch,BYTE PTR [edi]
  420278:	sub    dl,BYTE PTR [ecx+edi*2]
  42027b:	loopne 0x4202c8
  42027d:	jbe    0x42022a
  42027f:	mov    BYTE PTR [edi+0x126f7978],dl
  420285:	jae    0x420287
  420287:	addr16 cmp esp,ecx
  42028a:	pushf  
  42028b:	pop    ss
  42028c:	mov    dh,0x3b
  42028e:	(bad)  
  42028f:	fmul   QWORD PTR ss:[ebx*8+0xbb45c90]
  420297:	pop    edi
  420298:	push   es
  420299:	pop    esi
  42029a:	jg     0x42025c
  42029c:	stc    
  42029d:	mov    al,ds:0x2ed4772c
  4202a2:	iret   
  4202a3:	mov    ebp,edi
  4202a5:	jo     0x4202fb
  4202a7:	cld    
  4202a8:	idiv   al
  4202aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ab:	push   ebx
  4202ac:	mov    ch,0x87
  4202ae:	sbb    al,0x2e
  4202b0:	xlat   BYTE PTR ds:[ebx]
  4202b1:	arpl   di,dx
  4202b3:	and    BYTE PTR [eax],bh
  4202b5:	push   esp
  4202b6:	scas   al,BYTE PTR es:[edi]
  4202b7:	clc    
  4202b8:	add    edx,DWORD PTR [ecx+edx*4+0x48ad8c9c]
  4202bf:	pushf  
  4202c0:	push   0x61
  4202c2:	dec    esi
  4202c3:	ins    BYTE PTR es:[edi],dx
  4202c4:	sub    ebp,DWORD PTR [edi-0x41fee735]
  4202ca:	mov    ebp,0xc2481b0
  4202cf:	cdq    
  4202d0:	popa   
  4202d1:	pop    ss
  4202d2:	lahf   
  4202d3:	sbb    DWORD PTR [edx-0x7c168384],esi
  4202d9:	cli    
  4202da:	pushf  
  4202db:	pop    DWORD PTR [ecx]
  4202dd:	and    dl,BYTE PTR [esi-0x30]
  4202e0:	or     ebx,ecx
  4202e2:	es jle 0x42032f
  4202e5:	adc    DWORD PTR [edi],eax
  4202e7:	push   ds
  4202e8:	jo     0x4202a1
  4202ea:	nop
  4202eb:	xchg   esi,eax
  4202ec:	push   es
  4202ed:	mov    ebp,0xec3527e5
  4202f2:	jle    0x42030c
  4202f4:	mov    dl,0x68
  4202f6:	adc    eax,0x6fced4ab
  4202fb:	or     BYTE PTR [esi+esi*2-0x5b5b2904],0xaf
  420303:	adc    dl,dh
  420305:	dec    edi
  420306:	imul   esp,esi,0xffffffd4
  420309:	out    0x42,eax
  42030b:	mov    bh,0xf5
  42030d:	loope  0x4202f8
  42030f:	iret   
  420310:	scas   eax,DWORD PTR es:[edi]
  420311:	stos   DWORD PTR es:[edi],eax
  420312:	or     BYTE PTR [ebp+0x44],0x24
  420316:	sub    DWORD PTR [edi+edx*8+0x2275ac41],eax
  42031d:	pop    ebx
  42031e:	fwait
  42031f:	jno    0x420322
  420321:	imul   eax,ecx,0xd5c8d427
  420327:	adc    BYTE PTR [ebx+0x463da0e0],bl
  42032d:	outs   dx,BYTE PTR ds:[esi]
  42032e:	sbb    BYTE PTR [ecx-0x59],ah
  420331:	dec    ebp
  420332:	jp     0x420347
  420334:	fldcw  WORD PTR [ebp+0x25]
  420337:	cmp    eax,edi
  420339:	in     eax,dx
  42033a:	adc    esp,esp
  42033c:	xor    ch,BYTE PTR [edi]
  42033e:	jb     0x420397
  420340:	pop    ss
  420341:	jae    0x4203af
  420343:	add    esp,DWORD PTR [edi-0x7a]
  420346:	int    0x1e
  420348:	sti    
  420349:	jb     0x4202ff
  42034b:	dec    eax
  42034c:	iret   
  42034d:	add    al,0x4a
  42034f:	cmp    BYTE PTR [esi-0x3963a68a],0xf3
  420356:	jge    0x42036a
  420358:	in     eax,0x7b
  42035a:	and    BYTE PTR [eax-0x29],al
  42035d:	imul   esi,DWORD PTR [edx+esi*8+0x6c],0xd7202358
  420365:	fsub   st,st(2)
  420367:	int    0x96
  420369:	pushf  
  42036a:	sbb    DWORD PTR [ebp+0x194cdd20],ebp
  420370:	fxch   st(3)
  420372:	xchg   edi,eax
  420373:	mov    dh,0xc1
  420375:	dec    ch
  420377:	sbb    BYTE PTR [edi],bh
  420379:	mov    edx,0x51226e6
  42037e:	loop   0x4203a3
  420380:	fild   DWORD PTR ds:[ecx+0xb75ffbe]
  420387:	int    0x27
  420389:	ror    bh,0x6c
  42038c:	into   
  42038d:	sub    eax,0x54b1477c
  420392:	cmp    BYTE PTR [ecx-0x11],dl
  420395:	data16 mov bh,al
  420398:	jns    0x4203fb
  42039a:	ret    0x6b98
  42039d:	pop    edx
  42039e:	js     0x4203ff
  4203a0:	lods   al,BYTE PTR ds:[esi]
  4203a1:	cld    
  4203a2:	mov    ebp,0xcbb4e504
  4203a7:	ins    DWORD PTR es:[edi],dx
  4203a8:	or     eax,0xc0731cf
  4203ad:	test   BYTE PTR [ebx+0x61],ch
  4203b0:	fnstenv [ebp-0x495c0814]
  4203b6:	shr    DWORD PTR [edx+0x59b1aba4],0xfd
  4203bd:	jmp    0x420420
  4203bf:	aad    0x67
  4203c1:	jne    0x42038a
  4203c3:	mov    DWORD PTR [edx+0x2152e8a8],0xd8382c1b
  4203cd:	mov    eax,DWORD PTR [eax-0x3f2c00d9]
  4203d3:	add    al,0x8f
  4203d5:	ror    DWORD PTR [ebx+0x409e3314],1
  4203db:	(bad)  
  4203dc:	into   
  4203dd:	sbb    ch,BYTE PTR [edx+0x23]
  4203e0:	mov    DWORD PTR [esi],0x881c14bd
  4203e6:	or     al,0xa5
  4203e8:	xlat   BYTE PTR ds:[ebx]
  4203e9:	xor    DWORD PTR [ebx+edi*2+0x37d3b3af],ebp
  4203f0:	jmp    0x420426
  4203f2:	push   ebx
  4203f3:	add    DWORD PTR [ebx+0x36],ebp
  4203f6:	sbb    ebx,DWORD PTR [edi]
  4203f8:	ror    BYTE PTR [ebx+0x49],0x3b
  4203fc:	and    bh,al
  4203fe:	out    dx,eax
  4203ff:	lgs    ebp,FWORD PTR [edi]
  420402:	retf   
  420403:	retf   0x92eb
  420406:	pop    edx
  420407:	mov    edx,0x40bc091
  42040c:	jmp    0x735f:0x56429d7b
  420413:	nop
  420414:	cmp    DWORD PTR [eax],0xb89a91c1
  42041a:	aam    0x8d
  42041c:	inc    edx
  42041d:	sub    cl,BYTE PTR [edx+ebp*1]
  420420:	call   0xbc76:0xc7db04c5
  420427:	xor    eax,0xf24052cd
  42042c:	(bad)  
  42042d:	xchg   esi,eax
  42042e:	dec    ecx
  42042f:	dec    edx
  420430:	adc    edx,DWORD PTR [esi+edi*4-0x185b1469]
  420437:	push   eax
  420438:	adc    BYTE PTR [ecx+0x39a1cf1a],dl
  42043e:	push   ebp
  42043f:	and    eax,0xfee99795
  420444:	adc    BYTE PTR [ebp-0x3fd7992e],dh
  42044a:	clc    
  42044b:	aaa    
  42044c:	push   cs
  42044d:	imul   ebx,DWORD PTR [edx+0x1],0xffffff97
  420451:	sub    eax,0x56443c3f
  420456:	dec    ebx
  420457:	mov    edi,0x46fbdcc
  42045c:	jmp    0x4203ff
  42045e:	test   al,0xe2
  420460:	fs adc al,0x9c
  420463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420464:	aam    0x9c
  420466:	lea    ebx,[edx+0x5c9646b9]
  42046c:	inc    edi
  42046d:	repnz addr16 icebp 
  420470:	(bad)  
  420471:	cmp    DWORD PTR [esp+eax*2-0x2b],esi
  420475:	aam    0x77
  420477:	or     eax,DWORD PTR [eax-0x7]
  42047a:	je     0x4204a3
  42047c:	fs jp  0x4204e7
  42047f:	sti    
  420480:	mov    edx,esp
  420482:	push   ecx
  420483:	imul   edi,DWORD PTR [edi],0xbe484682
  420489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048a:	sahf   
  42048b:	sbb    ebp,0x76006e41
  420491:	hlt    
  420492:	dec    ebp
  420493:	(bad)  
  420494:	jmp    0x4204fb
  420496:	ds mov ecx,0x539cbff5
  42049c:	(bad)  
  42049e:	inc    ecx
  42049f:	adc    edi,esp
  4204a1:	icebp  
  4204a2:	repnz push ebp
  4204a4:	xor    edx,DWORD PTR [edi-0x3f931d6c]
  4204aa:	and    edx,edx
  4204ac:	mov    edi,0xe27238a0
  4204b1:	fs push edi
  4204b3:	cld    
  4204b4:	push   0x573d8e2c
  4204b9:	je     0x42050c
  4204bb:	fs mov ecx,0x97cf0631
  4204c1:	rcr    BYTE PTR [esi],0xb3
  4204c4:	xchg   esi,eax
  4204c5:	outs   dx,DWORD PTR ds:[esi]
  4204c6:	fs mov al,0xd3
  4204c9:	jns    0x42047c
  4204cb:	fbstp  TBYTE PTR [edi]
  4204cd:	sub    ch,BYTE PTR [esi-0x9]
  4204d0:	inc    ebx
  4204d1:	mov    ch,0x4a
  4204d3:	mov    dl,0x1e
  4204d5:	hlt    
  4204d6:	iret   
  4204d7:	xlat   BYTE PTR ds:[ebx]
  4204d8:	adc    ebx,edx
  4204da:	or     al,0x6e
  4204dc:	dec    eax
  4204dd:	pop    ecx
  4204de:	mov    ebx,0xdacc6990
  4204e3:	and    BYTE PTR [ecx-0x51],0x35
  4204e7:	sub    DWORD PTR [edi],esp
  4204e9:	jle    0x4204bf
  4204eb:	pop    ebp
  4204ec:	xchg   esp,eax
  4204ed:	inc    edx
  4204ee:	mov    ah,0xe9
  4204f0:	or     ah,BYTE PTR [esi]
  4204f2:	popf   
  4204f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204f4:	ret    0x4df1
  4204f7:	cmp    ebx,DWORD PTR [ecx+eiz*4+0x42b188e5]
  4204fe:	inc    ecx
  4204ff:	add    eax,DWORD PTR [ebp-0x30]
  420502:	enter  0x70df,0xc5
  420506:	mov    esp,0x279a7f90
  42050b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42050c:	call   0xd71af9ce
  420511:	jnp    0x42055a
  420513:	ins    DWORD PTR es:[edi],dx
  420514:	addr16 pusha 
  420516:	pop    ds
  420517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420518:	pop    eax
  420519:	adc    edx,DWORD PTR [esi]
  42051b:	mov    bl,0xa7
  42051d:	shl    BYTE PTR [edx+0x56239030],0xcd
  420524:	jecxz  0x4204da
  420526:	pop    edx
  420527:	jecxz  0x420585
  420529:	ret    
  42052a:	push   ds
  42052b:	adc    eax,DWORD PTR [ecx]
  42052d:	cmp    eax,0xf11310c6
  420532:	xchg   BYTE PTR [edi-0x7c8218a7],ch
  420538:	mov    DWORD PTR [edx+0x638f6ef],edi
  42053e:	pop    edx
  42053f:	fnsave [ecx+0x42]
  420542:	pop    ecx
  420543:	mov    eax,0xbed9e1a6
  420548:	test   DWORD PTR [ecx-0x11],edx
  42054b:	lock cmp eax,0x8ae8bc58
  420551:	adc    ah,BYTE PTR [ebx-0x3d]
  420554:	cwde   
  420555:	add    edi,DWORD PTR [edx+ebp*1+0x4]
  420559:	and    edi,DWORD PTR [esi+0x4589f7f6]
  42055f:	sbb    ebx,DWORD PTR [esi]
  420561:	and    BYTE PTR [eax+0x7f],cl
  420564:	jb     0x420560
  420566:	xchg   esp,eax
  420567:	daa    
  420568:	jns    0x4204ef
  42056a:	adc    al,0x41
  42056c:	int3   
  42056d:	cmp    BYTE PTR [ecx],dl
  42056f:	outs   dx,BYTE PTR ds:[esi]
  420570:	sbb    eax,0x40c80361
  420575:	loope  0x420560
  420577:	loope  0x4205c2
  420579:	ds xchg ch,cl
  42057c:	dec    ecx
  42057d:	lods   eax,DWORD PTR ds:[esi]
  42057e:	in     eax,dx
  42057f:	ret    
  420580:	xchg   BYTE PTR [ebp+ebp*8+0x36f9bceb],dh
  420587:	and    BYTE PTR [ebp+ecx*8-0x78],cl
  42058b:	pop    edi
  42058c:	inc    esi
  42058d:	cmp    eax,0xb45c2966
  420592:	inc    edx
  420593:	jmp    0x420611
  420595:	or     eax,0xa771d05d
  42059a:	dec    ebp
  42059b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42059c:	inc    edx
  42059d:	ja     0x42054f
  42059f:	push   edx
  4205a0:	popf   
  4205a1:	jmp    0x9889:0x4a0abc6b
  4205a8:	jecxz  0x420549
  4205aa:	add    BYTE PTR [eax+0x7d6f5d9d],0x85
  4205b1:	cwde   
  4205b2:	aad    0x67
  4205b4:	dec    ebp
  4205b5:	xor    DWORD PTR [ebp-0x360a6c28],ebx
  4205bb:	inc    esi
  4205bc:	retf   0xe0fc
  4205bf:	out    0xb1,eax
  4205c1:	mov    dl,0xe3
  4205c3:	xchg   ebp,eax
  4205c4:	push   esi
  4205c5:	push   edi
  4205c6:	xchg   esp,eax
  4205c7:	lods   al,BYTE PTR ds:[esi]
  4205c8:	inc    ebp
  4205c9:	in     eax,dx
  4205ca:	and    dl,al
  4205cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205cd:	(bad)  
  4205ce:	repnz dec edx
  4205d0:	pop    ds
  4205d1:	fwait
  4205d2:	adc    DWORD PTR [ecx-0x1],eax
  4205d5:	out    dx,al
  4205d6:	add    edx,DWORD PTR [edi]
  4205d8:	dec    eax
  4205d9:	jo     0x420617
  4205db:	mov    cl,0x61
  4205dd:	popf   
  4205de:	ret    0x23e9
  4205e1:	xchg   ebx,eax
  4205e2:	cmp    esp,esp
  4205e4:	inc    ebx
  4205e5:	mov    ah,0x66
  4205e7:	jecxz  0x420664
  4205e9:	mov    ebp,0x4b7e259b
  4205ee:	aad    0x39
  4205f0:	or     bl,BYTE PTR [eax-0x11ca8be6]
  4205f6:	sub    al,0xdf
  4205f8:	xchg   ebx,eax
  4205f9:	ds je  0x42065b
  4205fc:	xchg   edi,eax
  4205fd:	sti    
  4205fe:	mov    ecx,0x3dce4f66
  420603:	int3   
  420604:	iret   
  420605:	pusha  
  420606:	xchg   ebp,eax
  420607:	jmp    0x420683
  420609:	retf   
  42060a:	sub    DWORD PTR [esp+eax*8],0x13
  42060e:	stos   DWORD PTR es:[edi],eax
  42060f:	adc    eax,0x5b007bab
  420614:	xor    DWORD PTR ds:0x7520251c,esi
  42061a:	add    al,0xa
  42061c:	aaa    
  42061d:	mov    ah,BYTE PTR [edx-0x43a00aa8]
  420623:	ja     0x420690
  420625:	pop    eax
  420626:	ret    0xd63c
  420629:	mov    ds:0x31c1bee7,eax
  42062e:	inc    eax
  42062f:	test   al,0x64
  420631:	sbb    DWORD PTR [edx-0x5b],0xffffffa2
  420635:	push   es
  420636:	jecxz  0x420680
  420638:	and    eax,0x62579ffd
  42063d:	xor    eax,edx
  42063f:	mov    eax,ds:0x95d89fac
  420644:	mov    dh,0x60
  420646:	or     al,0xd6
  420648:	cdq    
  420649:	dec    edi
  42064a:	leave  
  42064b:	sub    eax,0xc44d5b35
  420650:	mov    ebx,0xece3e3eb
  420655:	mov    ecx,0xd61fc032
  42065a:	loope  0x4206cc
  42065c:	arpl   si,bp
  42065e:	aas    
  42065f:	pop    ds
  420660:	dec    eax
  420661:	in     al,0x29
  420663:	sbb    ch,BYTE PTR [edi-0xe]
  420666:	js     0x420639
  420668:	pop    esi
  420669:	xchg   ebx,eax
  42066a:	dec    edi
  42066b:	mov    bl,0x84
  42066d:	sbb    al,bl
  42066f:	call   0xc0f360c0
  420674:	sahf   
  420675:	xchg   edi,eax
  420676:	jae    0x4206b0
  420678:	push   ss
  420679:	pop    ss
  42067a:	mov    es,WORD PTR [ecx]
  42067c:	jmp    0xbcad157a
  420681:	iret   
  420682:	(bad)  
  420683:	jmp    0x420642
  420685:	sbb    al,0x92
  420687:	add    bh,bh
  420689:	or     eax,0x86b8447f
  42068e:	cwde   
  42068f:	and    al,0x95
  420691:	and    ebp,eax
  420693:	mov    edi,0x2d159d89
  420698:	(bad)  
  420699:	stos   DWORD PTR es:[edi],eax
  42069a:	adc    esi,ebx
  42069c:	pop    eax
  42069d:	mov    edi,0x4e717a32
  4206a2:	dec    ecx
  4206a3:	enter  0xb6b7,0x6c
  4206a7:	(bad)  
  4206a8:	mov    ebx,0x16386a26
  4206ad:	adc    al,0x99
  4206af:	(bad)  
  4206b1:	adc    al,0x43
  4206b3:	inc    ecx
  4206b4:	xchg   edi,eax
  4206b5:	std    
  4206b6:	nop
  4206b7:	fcmove st,st(0)
  4206b9:	cmc    
  4206ba:	mov    cl,0x19
  4206bc:	mov    esp,0x80c1e987
  4206c1:	mov    eax,0x2bbad8d4
  4206c6:	or     al,0xf9
  4206c8:	sbb    ecx,ecx
  4206ca:	pushf  
  4206cb:	call   0x540a2134
  4206d0:	ret    
  4206d1:	test   al,0x44
  4206d3:	xchg   ebx,eax
  4206d4:	adc    esi,DWORD PTR [ecx]
  4206d6:	int    0x84
  4206d8:	jae    0x420759
  4206da:	jge    0x42074f
  4206dc:	jno    0x4206a4
  4206de:	inc    ebp
  4206df:	jecxz  0x4206fa
  4206e1:	inc    esi
  4206e2:	push   0xe5a51411
  4206e7:	dec    DWORD PTR [eax+0x22db14e2]
  4206ed:	(bad)  
  4206ee:	clc    
  4206ef:	sub    al,0xb
  4206f1:	pop    edi
  4206f2:	retf   
  4206f3:	jecxz  0x4206fb
  4206f5:	mov    ecx,0x7b56ecc4
  4206fa:	mov    edx,0x91102be7
  4206ff:	xchg   edi,eax
  420700:	hlt    
  420701:	pop    ebx
  420702:	mov    esi,0xc7eb38bd
  420707:	sbb    ebp,DWORD PTR ds:0x708d50a7
  42070d:	retf   
  42070e:	icebp  
  42070f:	std    
  420710:	push   ss
  420711:	fist   DWORD PTR [edi-0x77fdfd7]
  420717:	retf   
  420718:	leave  
  420719:	mov    ebx,0xe30c11fd
  42071e:	jp     0x4206ef
  420720:	jo     0x42077b
  420722:	int3   
  420723:	mov    ds:0xaa9d46fd,al
  420728:	mov    bl,0xff
  42072a:	pop    edi
  42072b:	push   0xffffffa6
  42072d:	je     0x420731
  42072f:	jns    0x4207a4
  420731:	enter  0xca12,0x26
  420735:	out    0x90,eax
  420737:	push   0x8c536d6f
  42073c:	jbe    0x42078c
  42073e:	rcr    BYTE PTR [edx-0x5b8d9ef4],1
  420744:	push   ds
  420745:	ror    DWORD PTR [ebx+0x5],0x4a
  420749:	push   0xffffffb9
  42074b:	mov    edx,0x5dd9ec48
  420750:	iret   
  420751:	ret    0x1156
  420754:	pop    edx
  420755:	push   ss
  420756:	jns    0x42072f
  420758:	(bad)  
  420759:	xchg   edi,eax
  42075a:	xor    esp,ebx
  42075c:	ror    dl,1
  42075e:	sti    
  42075f:	int    0x42
  420761:	xchg   ebp,eax
  420762:	test   al,0x20
  420764:	pusha  
  420765:	and    BYTE PTR [ebx-0x4e],dl
  420768:	or     bh,BYTE PTR [edx]
  42076a:	lahf   
  42076b:	(bad)  
  42076c:	adc    cl,BYTE PTR [eax-0xdab7f22]
  420772:	dec    ebx
  420773:	cli    
  420774:	sti    
  420775:	repnz pop es
  420777:	cmp    DWORD PTR [edi+0x43],ebx
  42077a:	adc    al,BYTE PTR [eax+0x3eddc372]
  420780:	popa   
  420781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420782:	lods   al,BYTE PTR ds:[esi]
  420783:	aad    0x89
  420785:	nop
  420786:	into   
  420787:	nop
  420788:	into   
  420789:	in     al,dx
  42078a:	mov    esp,ecx
  42078c:	inc    esi
  42078d:	sti    
  42078e:	sbb    bl,0x8d
  420791:	xchg   eax,edx
  420793:	jbe    0x420765
  420795:	repnz rcr ah,cl
  420798:	sub    eax,0x25b8819b
  42079d:	dec    edx
  42079e:	mov    ch,0x21
  4207a0:	mov    WORD PTR [esi+edi*8],fs
  4207a3:	jge    0x42075b
  4207a5:	ins    DWORD PTR es:[edi],dx
  4207a6:	mov    eax,ds:0x5e8b05c6
  4207ab:	xchg   esp,eax
  4207ac:	dec    esp
  4207ad:	or     esp,ecx
  4207af:	mov    esp,ecx
  4207b1:	pop    edi
  4207b2:	sbb    al,0xc7
  4207b4:	pop    ebp
  4207b5:	inc    edx
  4207b6:	in     eax,0x6d
  4207b8:	aad    0x59
  4207ba:	push   eax
  4207bb:	sbb    eax,0xae527e9d
  4207c0:	push   cs
  4207c1:	dec    ebp
  4207c2:	fisubr WORD PTR [edx+edx*4-0x57]
  4207c6:	xlat   BYTE PTR ds:[ebx]
  4207c7:	fwait
  4207c8:	xor    al,0xbf
  4207ca:	jmp    FWORD PTR [ebx-0x14c546ba]
  4207d0:	push   eax
  4207d1:	sar    BYTE PTR [eax-0x2d118dc],cl
  4207d7:	fwait
  4207d8:	cmc    
  4207d9:	fucom  st(0)
  4207db:	mov    eax,0x2c027d65
  4207e0:	or     eax,0xbd67af3b
  4207e5:	jae    0x42082e
  4207e7:	push   es
  4207e8:	cwde   
  4207e9:	mov    ds:0x7a5db75e,eax
  4207ee:	add    ecx,esp
  4207f0:	xchg   edx,eax
  4207f1:	fistp  DWORD PTR [edi+0x18]
  4207f4:	sub    esp,edx
  4207f6:	imul   edi,DWORD PTR [bx+di-0x4ab],0x30602710
  4207ff:	add    BYTE PTR [eax],ch
  420801:	loop   0x420878
  420803:	(bad)  
  420804:	icebp  
  420805:	cmp    eax,0xc6fac993
  42080a:	or     eax,0xfa2f5a33
  42080f:	icebp  
  420810:	jmp    0x420819
  420812:	jge    0x420862
  420814:	rol    BYTE PTR [edx+0x30c99e9],1
  42081a:	push   ss
  42081b:	push   ecx
  42081c:	sbb    DWORD PTR [eax],ebx
  42081e:	sbb    BYTE PTR [edx],0xcb
  420821:	pop    ebx
  420822:	clc    
  420823:	mov    edx,0x1454fd7e
  420828:	push   ds
  420829:	jmp    0xcad3a7f0
  42082e:	inc    esi
  42082f:	push   esp
  420830:	cli    
  420831:	fistp  QWORD PTR [ecx]
  420833:	shl    BYTE PTR [edx-0x28bcb16a],1
  420839:	xchg   ecx,eax
  42083a:	outs   dx,BYTE PTR ds:[esi]
  42083b:	imul   esp,DWORD PTR [ecx+0x43],0xb04cf061
  420842:	fbld   TBYTE PTR [ebx-0x32]
  420845:	cli    
  420846:	xlat   BYTE PTR ds:[ebx]
  420847:	lock loope 0x42083e
  42084a:	adc    esi,edi
  42084c:	jno    0x4208bd
  42084e:	mov    dl,0x29
  420850:	cdq    
  420851:	mov    edi,0xc34975d6
  420856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420857:	inc    esi
  420858:	xrelease mov BYTE PTR [eax-0x1e],bl
  42085c:	popf   
  42085d:	retf   0x3912
  420860:	(bad)  
  420861:	ss mov bl,0x7a
  420864:	loop   0x4207f1
  420866:	push   es
  420867:	dec    esp
  420868:	push   esp
  420869:	sub    DWORD PTR [edi+eiz*4],eax
  42086c:	mov    ds:0x3da2954f,eax
  420871:	shl    bh,1
  420873:	inc    edx
  420874:	or     BYTE PTR [edi+0x1b],0x13
  420878:	imul   BYTE PTR [esp+ecx*4]
  42087b:	jnp    0x4208b0
  42087d:	jp     0x42083a
  42087f:	sbb    al,BYTE PTR [ecx+0x46]
  420882:	ror    DWORD PTR [ecx-0x565057d3],1
  420888:	shr    edi,0x8e
  42088b:	psubd  mm6,QWORD PTR [ebx]
  42088e:	mov    esi,0xe882c118
  420893:	jl     0x420888
  420895:	lods   al,BYTE PTR ds:[esi]
  420896:	sbb    esi,DWORD PTR [ecx]
  420898:	push   0xb8c2872b
  42089d:	cmp    eax,0x2d5965c4
  4208a2:	ret    
  4208a3:	(bad)  
  4208a4:	stc    
  4208a5:	(bad)  
  4208a6:	pushf  
  4208a7:	adc    edx,DWORD PTR [edx]
  4208a9:	shl    ah,cl
  4208ab:	arpl   WORD PTR [ecx+0x4fd05b4],dx
  4208b1:	shl    BYTE PTR [edx+0x4fa5bcc6],0xe8
  4208b8:	addr16 mov bl,0x0
  4208bc:	or     ebp,DWORD PTR [esi]
  4208be:	xchg   edx,eax
  4208bf:	adc    ah,BYTE PTR [esi-0x27902503]
  4208c5:	repnz mov ds:0x9af18547,al
  4208cb:	mov    eax,ds:0xfee965c7
  4208d0:	push   ebp
  4208d1:	push   cs
  4208d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208d3:	popf   
  4208d4:	aas    
  4208d5:	or     edi,edx
  4208d7:	push   edi
  4208d8:	mov    BYTE PTR ds:0xd5f78fd3,dh
  4208de:	repnz (bad) [ebx]
  4208e1:	or     DWORD PTR [edi+0x26],esi
  4208e4:	pop    eax
  4208e5:	in     eax,0x1f
  4208e7:	push   ebx
  4208e8:	jae    0x42093c
  4208ea:	rcr    BYTE PTR [edx-0x7],cl
  4208ed:	ins    BYTE PTR es:[edi],dx
  4208ee:	imul   eax,DWORD PTR [ecx+ecx*1+0xeb91a56],0xffffffa9
  4208f6:	into   
  4208f7:	arpl   cx,dx
  4208f9:	je     0x4208a9
  4208fb:	xchg   ebp,eax
  4208fc:	out    dx,al
  4208fd:	loop   0x420923
  4208ff:	call   0xf8fad41a
  420904:	cld    
  420905:	dec    ebx
  420906:	loop   0x42090d
  420908:	cmp    BYTE PTR [ebx+ebx*4+0x8b00037],0xb9
  420910:	mov    dh,0x42
  420912:	mov    fs,WORD PTR [edx+ebp*1+0x1bee1713]
  420919:	daa    
  42091a:	add    cl,al
  42091c:	push   eax
  42091d:	jge    0x420943
  42091f:	adc    BYTE PTR [edi+0x16],ch
  420922:	cli    
  420923:	popa   
  420924:	loop   0x42092a
  420926:	or     ebx,esi
  420928:	sbb    DWORD PTR [ebx+0x3b],edi
  42092b:	outs   dx,BYTE PTR ds:[esi]
  42092c:	das    
  42092d:	inc    esi
  42092e:	add    ebp,DWORD PTR [ecx+0x39]
  420931:	aaa    
  420932:	out    dx,eax
  420933:	push   ds
  420934:	or     edx,DWORD PTR [esi-0x351e0e0e]
  42093a:	pop    edi
  42093b:	jo     0x420984
  42093d:	or     esi,ebx
  42093f:	cmp    al,0x7a
  420941:	xor    eax,0x9e15e185
  420946:	jle    0x4208d8
  420948:	(bad)  
  42094a:	test   BYTE PTR [ecx+0x35b10e4e],ah
  420950:	mov    BYTE PTR [ebp+0xcbdff70],0x43
  420957:	push   ds
  420958:	sub    BYTE PTR [ecx+0x7e],0x86
  42095c:	fidivr WORD PTR [edi-0x18]
  42095f:	xchg   DWORD PTR [ecx],ebp
  420961:	cwde   
  420962:	cmp    eax,DWORD PTR [eax]
  420964:	push   esp
  420965:	js     0x4209c5
  420967:	scas   eax,DWORD PTR es:[edi]
  420968:	xchg   ebp,eax
  420969:	sti    
  42096a:	mov    esi,0x8549c349
  42096f:	fcom   st(3)
  420971:	mov    dh,dh
  420973:	and    DWORD PTR [ecx-0x7a0f773d],esi
  420979:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42097b:	outs   dx,BYTE PTR ds:[esi]
  42097c:	cmp    al,0x6c
  42097e:	sub    esi,DWORD PTR [esi+0xcaa3fa2]
  420984:	and    al,0xe1
  420986:	or     al,BYTE PTR [esi]
  420988:	pop    esp
  420989:	clc    
  42098a:	inc    DWORD PTR [esi-0x60005f05]
  420990:	cld    
  420991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420992:	mov    eax,0x1a8ad29e
  420997:	cmc    
  420998:	rol    BYTE PTR [edi-0xd471bc5],0xf1
  42099f:	fnsave [edx]
  4209a1:	popf   
  4209a2:	fiadd  DWORD PTR [eax-0x6085f732]
  4209a8:	in     al,dx
  4209a9:	mov    ebx,0xda6978d3
  4209ae:	add    esi,esp
  4209b0:	xchg   ebp,eax
  4209b1:	push   esp
  4209b2:	cmp    BYTE PTR [eax+0x64a0217d],dl
  4209b8:	lock jl 0x420956
  4209bb:	retf   
  4209bc:	or     eax,0x6081f5d1
  4209c1:	clc    
  4209c2:	xchg   ebx,eax
  4209c3:	add    edi,DWORD PTR [ecx-0x3ff539f8]
  4209c9:	fs push cs
  4209cb:	ins    DWORD PTR es:[edi],dx
  4209cc:	clc    
  4209cd:	or     BYTE PTR [edx],ah
  4209cf:	sub    DWORD PTR [edi-0x5e],edi
  4209d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d3:	mov    eax,0x366ab3be
  4209d8:	fld    DWORD PTR [eax+0x24]
  4209db:	cmp    bh,BYTE PTR [esi-0x65]
  4209de:	or     dl,BYTE PTR [edx-0x1dbae81]
  4209e4:	mov    bl,0xec
  4209e6:	loope  0x42099f
  4209e8:	fisubr WORD PTR [ecx-0x7ad652cd]
  4209ee:	sub    ecx,DWORD PTR [ecx]
  4209f0:	or     ebx,DWORD PTR [esi]
  4209f2:	loope  0x420991
  4209f4:	neg    BYTE PTR [ebp+0x37c6be04]
  4209fa:	jmp    0xa8623998
  4209ff:	addr16 pop ds
  420a01:	xchg   esp,eax
  420a02:	cmp    dl,BYTE PTR [ebx]
  420a04:	leave  
  420a05:	pusha  
  420a06:	or     esi,DWORD PTR [ebx]
  420a08:	jp     0x420a20
  420a0a:	jg     0x420a86
  420a0c:	sbb    al,ch
  420a0e:	mul    DWORD PTR [esi+0x19]
  420a11:	cwde   
  420a12:	cld    
  420a13:	push   esi
  420a14:	and    ebx,ecx
  420a16:	and    ebp,DWORD PTR [esi+0x3b]
  420a19:	shr    DWORD PTR [ecx-0x2ff33803],0xc6
  420a20:	pop    ss
  420a21:	inc    edx
  420a22:	shl    BYTE PTR [edx],1
  420a24:	cs ret 
  420a26:	mov    edx,0x4cc5d602
  420a2b:	jbe    0x420a65
  420a2d:	xchg   ebp,eax
  420a2e:	and    DWORD PTR [eax],ebp
  420a30:	push   0x7c0142ad
  420a35:	mov    ch,0x62
  420a37:	xor    cl,BYTE PTR [ebx-0x6c]
  420a3a:	jno    0x420a5f
  420a3c:	push   cs
  420a3d:	inc    esp
  420a3e:	and    dl,BYTE PTR [ecx]
  420a40:	popf   
  420a41:	mov    al,ds:0xb9680105
  420a46:	retf   
  420a47:	(bad)  
  420a48:	fmul   DWORD PTR [edi+0x68119b17]
  420a4e:	test   BYTE PTR ds:0xb973c57,0x1e
  420a55:	mul    dh
  420a57:	xchg   edx,eax
  420a58:	push   esp
  420a59:	sar    dh,1
  420a5b:	push   ebx
  420a5d:	push   esi
  420a5e:	jbe    0x420acc
  420a60:	fs dec edx
  420a62:	outs   dx,BYTE PTR ds:[esi]
  420a63:	out    dx,al
  420a64:	popa   
  420a65:	xor    al,0xfb
  420a67:	dec    eax
  420a68:	retf   
  420a69:	out    dx,al
  420a6a:	fwait
  420a6b:	or     BYTE PTR [esi-0x43808008],ch
  420a71:	mov    al,ds:0x59e8d3ad
  420a76:	daa    
  420a77:	in     eax,0xf9
  420a79:	pusha  
  420a7a:	dec    ecx
  420a7b:	es repnz sbb esp,esp
  420a7f:	sbb    eax,edi
  420a81:	(bad)  
  420a82:	imul   DWORD PTR [ebp+0x5e893f9c]
  420a88:	ins    BYTE PTR es:[edi],dx
  420a89:	push   ds
  420a8a:	cli    
  420a8b:	xchg   edx,eax
  420a8c:	es jb  0x420a86
  420a8f:	test   BYTE PTR [edx+0x78],bl
  420a92:	(bad)  
  420a93:	cmc    
  420a94:	fmul   QWORD PTR ds:0x2433f500
  420a9a:	sub    eax,0x7fc561d8
  420a9f:	ror    BYTE PTR [edi+eax*4-0x61763fc8],1
  420aa6:	inc    ax
  420aa8:	push   cs
  420aa9:	lea    ebp,[edx]
  420aab:	mov    ah,0x3b
  420aad:	xor    edx,ebp
  420aaf:	push   cs
  420ab0:	sbb    esp,DWORD PTR [ebx]
  420ab2:	mov    WORD PTR ds:0x7f202405,es
  420ab8:	les    ecx,FWORD PTR [edi-0x34bc7fd4]
  420abe:	jmp    0xf9195b0f
  420ac3:	jmp    0x420b39
  420ac5:	dec    ebx
  420ac6:	lds    ecx,FWORD PTR [eax-0x5b]
  420ac9:	xchg   ecx,eax
  420aca:	mov    dh,0x90
  420acc:	or     edi,DWORD PTR [ebp+esi*1+0x44]
  420ad0:	gs mov edx,ecx
  420ad3:	xlat   BYTE PTR ds:[ebx]
  420ad4:	or     al,0xe9
  420ad6:	fwait
  420ad7:	adc    al,BYTE PTR cs:[ebp-0x56]
  420adb:	cmp    ebx,esp
  420add:	adc    bh,ah
  420adf:	arpl   sp,cx
  420ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae2:	je     0x420a76
  420ae4:	sub    DWORD PTR [ecx+0x148f9c01],esi
  420aea:	sbb    dh,al
  420aec:	aam    0x9a
  420aee:	push   edi
  420aef:	retf   0x4191
  420af2:	fst    QWORD PTR [edi]
  420af4:	xchg   DWORD PTR gs:0x8f5dab8a,esp
  420afb:	cmc    
  420afc:	test   BYTE PTR [esi+0x3a],dl
  420aff:	push   0x1f7df980
  420b04:	dec    edi
  420b05:	outs   dx,DWORD PTR es:[esi]
  420b07:	les    esp,FWORD PTR [esi+ecx*4-0x19]
  420b0b:	shl    BYTE PTR [ebx+0x5e],1
  420b0e:	int3   
  420b0f:	sub    eax,0x90b034eb
  420b14:	stos   DWORD PTR es:[edi],eax
  420b15:	cwde   
  420b16:	fisub  WORD PTR [edi-0x5e29389c]
  420b1c:	mov    edi,0x653ad376
  420b21:	daa    
  420b22:	mov    al,ds:0xf982ed85
  420b27:	outs   dx,BYTE PTR ds:[esi]
  420b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b29:	mov    dh,0xc5
  420b2b:	cmpps  xmm6,XMMWORD PTR [esi+0x1f33306a],0xd9
  420b33:	in     al,dx
  420b34:	adc    DWORD PTR [edx-0x615488fb],0xaeba9b2b
  420b3e:	pop    esi
  420b3f:	adc    BYTE PTR ds:0xf639d2e4,bh
  420b45:	test   BYTE PTR [ecx+0x15257b20],ah
  420b4b:	pop    ds
  420b4c:	cli    
  420b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b4e:	pop    ecx
  420b4f:	inc    ecx
  420b50:	mov    ds:0x39901cc5,al
  420b55:	fidiv  DWORD PTR [esi+0x3242f0b9]
  420b5b:	push   esp
  420b5c:	dec    edi
  420b5d:	out    0xa7,al
  420b5f:	inc    ecx
  420b60:	push   ds
  420b61:	fcmove st,st(2)
  420b63:	ja     0x420bac
  420b65:	mov    edi,0xf1cea52
  420b6a:	pop    eax
  420b6b:	sti    
  420b6c:	outs   dx,DWORD PTR ds:[esi]
  420b6d:	hlt    
  420b6e:	mov    dl,0x2e
  420b70:	sub    eax,0x8d11dda2
  420b75:	add    BYTE PTR [ebx-0x6],bh
  420b78:	popf   
  420b79:	xchg   ebp,eax
  420b7a:	pminub mm0,QWORD PTR [ebx+edi*4-0x29]
  420b7f:	inc    ebx
  420b80:	cdq    
  420b81:	mov    cl,0xe0
  420b83:	jg     0x420b17
  420b85:	in     al,dx
  420b86:	push   ebx
  420b87:	call   0x83016387
  420b8c:	bound  eax,QWORD PTR [ebp+0x6a]
  420b8f:	(bad)  
  420b90:	sahf   
  420b91:	(bad)
  420b94:	mov    ch,0x77
  420b96:	aas    
  420b97:	mov    ch,0x17
  420b99:	iret   
  420b9a:	sub    BYTE PTR [ebx+eiz*4],al
  420b9d:	mov    edi,0x794d7cc4
  420ba2:	retf   
  420ba3:	dec    esp
  420ba4:	into   
  420ba5:	arpl   WORD PTR [ebp-0x2c94b6c6],sp
  420bab:	jecxz  0x420c1b
  420bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bae:	or     edi,DWORD PTR [edi]
  420bb0:	dec    ebx
  420bb1:	jmp    0x420b5c
  420bb3:	jmp    0xba2a8985
  420bb8:	lds    edx,FWORD PTR [esi+0x77]
  420bbb:	mov    dh,0x9b
  420bbd:	sahf   
  420bbe:	mov    ds:0x952c1f5f,eax
  420bc3:	and    DWORD PTR [eax-0xfb5a326],edx
  420bc9:	mov    WORD PTR [eax-0x7e],ss
  420bcc:	(bad)  [esi]
  420bce:	pop    ebx
  420bcf:	push   0x69
  420bd1:	push   0xe804133b
  420bd6:	inc    ecx
  420bd7:	sub    ebp,DWORD PTR [esi+0x56364b70]
  420bdd:	add    al,0xd3
  420bdf:	mov    ah,0x37
  420be1:	inc    edi
  420be2:	cmp    DWORD PTR [edi-0x3f],esi
  420be5:	(bad)  
  420be6:	sti    
  420be7:	int    0x3d
  420be9:	clc    
  420bea:	mov    bh,0x39
  420bec:	imul   eax,DWORD PTR [eax],0x8
  420bef:	xchg   ebx,eax
  420bf0:	fadd   st,st(2)
  420bf2:	mov    dh,0x11
  420bf4:	jns    0x420c3e
  420bf6:	pop    ebp
  420bf7:	jno    0x420c61
  420bf9:	ret    0x5c10
  420bfc:	int3   
  420bfd:	fsub   DWORD PTR [edx]
  420bff:	cs inc eax
  420c01:	push   eax
  420c02:	bound  ebx,QWORD PTR ds:0x6b3c3912
  420c08:	js     0x420c17
  420c0a:	popf   
  420c0b:	sub    DWORD PTR [esi],ebp
  420c0d:	jmp    0x6e68f68a
  420c12:	xchg   ebp,eax
  420c13:	test   eax,0x950cb28
  420c18:	icebp  
  420c19:	imul   eax,DWORD PTR [edx+0x563bfbc2],0x12a50cfe
  420c23:	push   esi
  420c24:	fdivr  DWORD PTR [esi]
  420c26:	xor    ecx,ecx
  420c28:	adc    esi,eax
  420c2a:	popf   
  420c2b:	xor    bh,BYTE PTR [ebx]
  420c2d:	mov    cs,WORD PTR [ebp-0x7d2ca4bf]
  420c33:	mov    ch,0xd1
  420c35:	or     cl,dh
  420c37:	inc    DWORD PTR [ecx-0x40]
  420c3a:	jae    0x420c33
  420c3c:	cwde   
  420c3d:	pop    ss
  420c3e:	xor    DWORD PTR [esi-0xd6a31a7],esi
  420c44:	xlat   BYTE PTR ds:[ebx]
  420c45:	fs std 
  420c47:	add    dl,BYTE PTR [edi]
  420c49:	scas   eax,DWORD PTR es:[edi]
  420c4a:	xchg   edi,ebp
  420c4c:	je     0x420c20
  420c4e:	loopne 0x420ca2
  420c50:	adc    DWORD PTR [eax],edi
  420c52:	xchg   ebp,eax
  420c53:	into   
  420c54:	aad    0x18
  420c56:	ret    
  420c57:	(bad)  
  420c58:	mov    eax,0xc58ceb4e
  420c5d:	mov    esp,0x1ee2cc4a
  420c62:	stos   DWORD PTR es:[edi],eax
  420c63:	fwait
  420c64:	or     eax,0x1e0db574
  420c69:	inc    eax
  420c6a:	xor    DWORD PTR [ecx+esi*2+0x51],0xb0062815
  420c72:	jg     0x420c1a
  420c74:	mov    edi,edi
  420c76:	adc    DWORD PTR [ecx+0x19],edi
  420c79:	xchg   DWORD PTR [ebx+eax*8+0x1a],eax
  420c7d:	mov    ebp,0xaa3826f7
  420c82:	js     0x420c5f
  420c84:	sti    
  420c85:	icebp  
  420c86:	mov    eax,ds:0x2ceba8b3
  420c8b:	out    0xe4,al
  420c8d:	cmp    al,0xa
  420c8f:	lahf   
  420c90:	in     al,0x4
  420c92:	pop    ecx
  420c93:	jo     0x420c6b
  420c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c96:	mov    ebx,0x462393b4
  420c9b:	push   cs
  420c9c:	dec    esp
  420c9d:	enter  0x4d74,0x4b
  420ca1:	mov    edx,0xde2662cd
  420ca6:	xor    DWORD PTR [ebp-0x25bcf664],edi
  420cac:	(bad)  [eax]
  420cae:	fmul   DWORD PTR [eax-0x24982757]
  420cb4:	sub    al,0x7b
  420cb6:	jp     0x420cff
  420cb8:	sbb    DWORD PTR cs:0x40520e2b,esp
  420cbf:	sub    dh,bh
  420cc1:	jb     0x420d06
  420cc3:	sbb    DWORD PTR [ecx-0x41],ecx
  420cc6:	or     ebx,DWORD PTR [edx-0x3abd306f]
  420ccc:	dec    ebp
  420ccd:	out    0xa5,al
  420ccf:	out    0xbb,al
  420cd1:	pop    edi
  420cd2:	fnsave [ebx]
  420cd4:	jp     0x420cdc
  420cd6:	sbb    ah,BYTE PTR [esi]
  420cd8:	clc    
  420cd9:	shl    DWORD PTR [esp+eiz*8+0x27e1ce71],cl
  420ce0:	stc    
  420ce1:	or     al,0x7a
  420ce3:	(bad)  
  420ce4:	fmul   QWORD PTR [eax]
  420ce6:	push   ecx
  420ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce8:	push   es
  420ce9:	xor    BYTE PTR [esi+ebp*2],0xf6
  420ced:	cmp    BYTE PTR [eax-0x28bbe9f4],dh
  420cf3:	scas   eax,DWORD PTR es:[edi]
  420cf4:	sbb    DWORD PTR [ebp+0x54615349],esp
  420cfa:	lods   al,BYTE PTR ds:[esi]
  420cfb:	jge    0x420d11
  420cfd:	and    DWORD PTR ss:[eax-0x5f3474dc],esi
  420d04:	pop    esp
  420d05:	ins    DWORD PTR es:[edi],dx
  420d06:	(bad)  
  420d07:	iret   
  420d08:	mov    al,0x7d
  420d0a:	xor    cl,BYTE PTR [edx]
  420d0c:	repz jecxz 0x420cb7
  420d0f:	bound  ecx,QWORD PTR [edx+edx*2-0x3]
  420d13:	xchg   BYTE PTR [esi-0x55e526c6],al
  420d19:	stc    
  420d1a:	mov    esp,0x93a1b688
  420d1f:	pushf  
  420d20:	repz fadd QWORD PTR [ebx-0x3663d30a]
  420d27:	xchg   ecx,eax
  420d28:	push   0xffffffd0
  420d2a:	or     BYTE PTR [ebx+ecx*1-0x74],ah
  420d2e:	and    DWORD PTR [edx-0x67],0x7167133a
  420d35:	xor    al,0xdc
  420d37:	push   es
  420d38:	lock dec esp
  420d3a:	inc    eax
  420d3b:	jmp    0x420d17
  420d3d:	jg     0x420db0
  420d3f:	cmp    DWORD PTR [edx+0x1e5802e],0xd574d002
  420d49:	lds    esp,FWORD PTR [ebx-0x4e]
  420d4c:	and    ah,bh
  420d4e:	pusha  
  420d4f:	and    DWORD PTR [edx-0x75],edx
  420d52:	adc    BYTE PTR [eax-0x19da0548],dl
  420d58:	jb     0x420d44
  420d5a:	outs   dx,DWORD PTR ds:[esi]
  420d5b:	enter  0x82d2,0x7f
  420d5f:	xor    ch,bl
  420d61:	out    dx,eax
  420d62:	push   ss
  420d63:	into   
  420d64:	sbb    DWORD PTR [esi],0x733810c9
  420d6a:	xor    DWORD PTR [ecx+0x78],edx
  420d6d:	test   eax,0xd42b1757
  420d72:	fs loope 0x420de4
  420d75:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  420d77:	pushf  
  420d78:	lock mov bh,0xb
  420d7b:	gs iret 
  420d7d:	mov    WORD PTR [edx+0x43],ss
  420d80:	sub    al,0x2c
  420d82:	stos   DWORD PTR es:[edi],eax
  420d83:	cmp    al,cl
  420d85:	mov    edx,0xac7fa374
  420d8a:	xor    BYTE PTR [eax],al
  420d8c:	add    DWORD PTR ds:0x5bf16f4,ebp
  420d92:	and    ebx,DWORD PTR [edx+0x22398460]
  420d98:	shl    DWORD PTR [ecx-0x5a73dd70],cl
  420d9e:	(bad)  [edx]
  420da0:	ins    DWORD PTR es:[edi],dx
  420da1:	mov    ds:0xb556d309,al
  420da6:	nop
  420da7:	xchg   ecx,eax
  420da8:	jbe    0x420d87
  420daa:	ror    bl,0xa8
  420dad:	cmp    eax,0xc2cc3e96
  420db2:	scas   eax,DWORD PTR es:[edi]
  420db3:	adc    DWORD PTR [edi-0x38],esp
  420db6:	add    DWORD PTR [edx+0x1e749804],0x4447e6ad
  420dc0:	mov    dl,0x6b
  420dc2:	and    edi,DWORD PTR [edx]
  420dc4:	sub    DWORD PTR [esi+0x6d63e08a],eax
  420dca:	out    dx,eax
  420dcb:	cld    
  420dcc:	dec    ebx
  420dcd:	jne    0x420de2
  420dcf:	ror    ebp,cl
  420dd1:	sub    al,0x59
  420dd3:	sub    BYTE PTR [eax+0x774b3724],al
  420dd9:	ficom  WORD PTR [ecx]
  420ddb:	daa    
  420ddc:	xor    ebp,esp
  420dde:	ret    0xfddb
  420de1:	pop    ebp
  420de2:	dec    edi
  420de3:	mov    al,0xcc
  420de5:	xor    bl,BYTE PTR [ebx-0x5a]
  420de8:	mov    ds:0x18323884,eax
  420ded:	xor    bh,BYTE PTR [ebp+0x6b]
  420df0:	xchg   ebx,eax
  420df1:	test   bh,al
  420df3:	inc    ebp
  420df4:	xchg   edi,eax
  420df5:	mov    edi,0x445cfcc5
  420dfa:	gs ss repz push ecx
  420dfe:	or     cl,BYTE PTR [ebp+esi*2+0x4b5e8aab]
  420e05:	cmp    ebp,ebx
  420e07:	adc    DWORD PTR [ebp+0x5d340388],ebx
  420e0d:	jp     0x420da1
  420e0f:	fst    QWORD PTR ds:0x5f4bf161
  420e15:	jl     0x420e8c
  420e17:	lods   al,BYTE PTR ds:[esi]
  420e18:	mov    esp,0x7173656c
  420e1d:	test   eax,0xa9ea44bf
  420e22:	imul   esi,DWORD PTR ds:0xcc143a3c,0xffffff92
  420e29:	hlt    
  420e2a:	pop    ebx
  420e2b:	arpl   WORD PTR [eax-0x27085e83],di
  420e31:	fcmovb st,st(1)
  420e33:	jle    0x420e75
  420e35:	loope  0x420e68
  420e37:	mov    eax,0x1fed79e7
  420e3c:	std    
  420e3d:	lea    eax,[ebx]
  420e3f:	mul    dl
  420e41:	mov    dl,0x2f
  420e43:	cld    
  420e44:	call   0x1b3bfcd2
  420e49:	push   edx
  420e4a:	ins    DWORD PTR es:[edi],dx
  420e4b:	sbb    eax,0xfe86684a
  420e50:	sar    BYTE PTR [ecx+edx*4+0x3],0x34
  420e55:	popa   
  420e56:	cmc    
  420e57:	imul   esi,DWORD PTR [esi+0x637bc144],0x3c
  420e5e:	sub    DWORD PTR [ebp-0x749696ac],ecx
  420e64:	retf   0x2fa6
  420e67:	mov    ebx,0x13156544
  420e6c:	adc    BYTE PTR [ecx+eax*2+0x68cdaa28],al
  420e73:	retf   0xae97
  420e76:	out    0x7e,eax
  420e78:	inc    esi
  420e7a:	retf   
  420e7b:	pop    ebx
  420e7c:	in     al,0x77
  420e7e:	shr    DWORD PTR [edx+0x249dbec8],0x4a
  420e85:	inc    ebx
  420e86:	mov    ds:0xcd11b6,al
  420e8b:	loopne 0x420ecc
  420e8d:	pop    edx
  420e8e:	jg     0x420eba
  420e90:	lea    eax,[edx]
  420e92:	xchg   edi,eax
  420e93:	add    eax,0xf3d5ff7
  420e98:	ss xchg ecx,eax
  420e9a:	leave  
  420e9b:	push   edx
  420e9c:	ins    DWORD PTR es:[edi],dx
  420e9d:	dec    ebx
  420e9e:	call   0xb6d26cc4
  420ea3:	or     DWORD PTR [esi],eax
  420ea5:	and    esp,DWORD PTR [ebx]
  420ea7:	push   es
  420ea8:	dec    ebx
  420ea9:	mov    dl,0x8e
  420eab:	inc    edx
  420eac:	or     al,0x54
  420eae:	adc    al,0x2b
  420eb0:	repnz hlt 
  420eb2:	jle    0x420e89
  420eb4:	or     al,BYTE PTR [ebx]
  420eb6:	mov    al,0x1f
  420eb8:	push   edx
  420eb9:	lds    ecx,FWORD PTR [esi+0x640a3e43]
  420ebf:	das    
  420ec0:	pushf  
  420ec1:	ret    0x729a
  420ec4:	push   eax
  420ec5:	push   ds
  420ec6:	dec    ebx
  420ec7:	daa    
  420ec8:	adc    DWORD PTR [edi+0x18ee68b5],ebx
  420ece:	retf   
  420ecf:	adc    al,0xf0
  420ed1:	icebp  
  420ed2:	inc    ebp
  420ed3:	mov    ch,0xca
  420ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed6:	xchg   ebp,eax
  420ed7:	fisttp QWORD PTR [edx+0x2]
  420eda:	mov    ecx,ds
  420edc:	cwde   
  420edd:	idiv   BYTE PTR [esi-0x7b]
  420ee0:	inc    ecx
  420ee1:	fs pop ecx
  420ee3:	fistp  QWORD PTR [ebx-0x52324a]
  420ee9:	mov    ebp,0x8e8aa055
  420eee:	adc    bh,BYTE PTR [eax+0x22]
  420ef1:	(bad)  
  420ef2:	(bad)  
  420ef3:	jge    0x420e84
  420ef5:	xchg   edx,eax
  420ef6:	cwde   
  420ef7:	rcr    DWORD PTR [edi],cl
  420ef9:	xor    BYTE PTR [edi-0x2c99a595],bl
  420eff:	sahf   
  420f00:	pop    ebp
  420f01:	lods   eax,DWORD PTR ds:[esi]
  420f02:	(bad)  
  420f03:	lahf   
  420f04:	setb   BYTE PTR [edx+0x6de0ab3e]
  420f0b:	mov    cl,BYTE PTR [ecx+0x6016a8ce]
  420f11:	sahf   
  420f12:	fadd   st,st(1)
  420f14:	sbb    ecx,DWORD PTR [ebp+0x34]
  420f17:	mov    eax,ds:0x8532f963
  420f1c:	xchg   BYTE PTR [ecx+0x12],ch
  420f1f:	or     DWORD PTR [ebx+0x67b8a133],eax
  420f25:	mov    edx,0x7fb42430
  420f2a:	sub    DWORD PTR [edx],esp
  420f2c:	test   al,0x94
  420f2e:	or     esi,ecx
  420f30:	or     dh,BYTE PTR [esi]
  420f32:	pusha  
  420f33:	sub    al,0xbd
  420f35:	add    ecx,DWORD PTR [edi+0x63]
  420f38:	mov    esi,0x48498d61
  420f3d:	push   ecx
  420f3e:	inc    esi
  420f3f:	fwait
  420f40:	es jp  0x420f13
  420f43:	ds (bad) 
  420f46:	call   0xe786b1bc
  420f4b:	hlt    
  420f4c:	das    
  420f4d:	enter  0x6c51,0x5f
  420f51:	sar    esi,1
  420f53:	and    edi,DWORD PTR [ecx]
  420f55:	mov    al,0xee
  420f57:	sahf   
  420f58:	cmp    eax,0xe4758954
  420f5d:	jne    0x420f1a
  420f5f:	push   ecx
  420f60:	xchg   edx,eax
  420f61:	daa    
  420f62:	add    eax,0xcf135685
  420f67:	sbb    al,0x5
  420f69:	add    dh,dh
  420f6b:	cmp    DWORD PTR [esi],0xffffffe6
  420f6e:	les    edx,FWORD PTR [ecx+0xe]
  420f71:	cwde   
  420f72:	in     al,0xd2
  420f74:	es push esi
  420f76:	(bad)  
  420f77:	ficom  WORD PTR [eax+0x1]
  420f7a:	xchg   ecx,eax
  420f7b:	pop    edx
  420f7c:	sbb    eax,DWORD PTR [ebx+0x29]
  420f7f:	cmp    dl,BYTE PTR [ebp-0x43]
  420f82:	jnp    0x420f60
  420f84:	inc    edx
  420f85:	jecxz  0x420ff1
  420f87:	sbb    al,0xd2
  420f89:	jecxz  0x420fd4
  420f8b:	push   cs
  420f8c:	imul   ebx,DWORD PTR [edx],0xffffff9a
  420f8f:	mov    bh,0xfe
  420f91:	inc    esp
  420f92:	sub    al,BYTE PTR [ecx+esi*2+0x3e]
  420f96:	xor    eax,0x85da1612
  420f9b:	ds sbb al,0x8e
  420f9e:	imul   esp,DWORD PTR ds:0xf41805b3,0xffffff9d
  420fa5:	xor    ebp,DWORD PTR [edx]
  420fa7:	push   0x10
  420fa9:	jns    0x420feb
  420fab:	pop    ecx
  420fac:	rol    BYTE PTR [ecx-0x389cb4c6],1
  420fb2:	pop    ebp
  420fb3:	add    DWORD PTR [ebp-0x39],esp
  420fb6:	mov    eax,ds:0x17767497
  420fbb:	popa   
  420fbc:	and    eax,0xc8d72dd4
  420fc1:	mov    al,0xf2
  420fc3:	stos   DWORD PTR es:[edi],eax
  420fc4:	mov    esp,0x3811724c
  420fc9:	jmp    FWORD PTR [ebx]
  420fcb:	push   ebx
  420fcc:	nop
  420fcd:	add    al,0x67
  420fcf:	push   0x7c
  420fd1:	fdivr  DWORD PTR [ecx]
  420fd3:	jo     0x42104e
  420fd5:	dec    ebp
  420fd6:	push   ebx
  420fd7:	sbb    ch,BYTE PTR [ebp+0x2f992427]
  420fdd:	jnp    0x420fb0
  420fdf:	gs inc ecx
  420fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fe2:	mov    ebx,0xb6c40a24
  420fe7:	xor    dh,al
  420fe9:	push   ebx
  420fea:	jnp    0x42101c
  420fec:	mov    eax,ds:0x343d5302
  420ff1:	mov    ds:0xeab816d5,eax
  420ff6:	jns    0x42102b
  420ff8:	test   eax,0x95603003
  420ffd:	rol    DWORD PTR [esi],1
  420fff:	mov    dl,0x21
  421001:	xor    ch,BYTE PTR [edi+0x2bbd6570]
  421007:	mov    ecx,0xf73e52b4
  42100c:	or     esp,DWORD PTR [esi+eax*2-0x1f]
  421010:	popa   
  421011:	inc    DWORD PTR [ebx-0x8451861]
  421017:	lods   al,BYTE PTR ds:[esi]
  421018:	int3   
  421019:	ins    BYTE PTR es:[edi],dx
  42101a:	into   
  42101b:	stos   DWORD PTR es:[edi],eax
  42101c:	xlat   BYTE PTR ds:[ebx]
  42101d:	jbe    0x421058
  42101f:	fsub   st,st(5)
  421021:	cli    
  421022:	fsub   DWORD PTR [esi-0x73]
  421025:	mov    esi,0xa6827011
  42102a:	xchg   ebx,eax
  42102b:	int    0x22
  42102d:	mov    ds:0xba6471d8,eax
  421032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421033:	int    0x58
  421035:	sub    bh,dl
  421037:	mov    ecx,0xe906e312
  42103c:	mov    edi,ebx
  42103e:	xor    bh,bh
  421040:	das    
  421041:	aaa    
  421042:	pop    edx
  421043:	fs popf 
  421045:	sbb    dh,BYTE PTR [eax]
  421047:	fld    QWORD PTR [esi+0x70]
  42104a:	add    ebx,DWORD PTR ss:[eax+0x306026a5]
  421051:	retf   
  421052:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421054:	mov    edi,0xb9d7e4da
  421059:	aaa    
  42105a:	fadd   st(3),st
  42105c:	sbb    eax,0xb13daca5
  421061:	adc    DWORD PTR ds:0x21a67c86,ebp
  421067:	and    al,0x13
  421069:	test   BYTE PTR [edx+0x62],ch
  42106c:	ja     0x421004
  42106e:	pusha  
  42106f:	sbb    cl,bl
  421071:	es inc eax
  421073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421074:	xlat   BYTE PTR ds:[ebx]
  421075:	shl    BYTE PTR [ecx+esi*4-0x2d5fcfb1],1
  42107c:	pop    ecx
  42107d:	sti    
  42107e:	xchg   ecx,eax
  42107f:	mov    eax,ds:0x9c3438cf
  421084:	int    0x65
  421086:	jae    0x421008
  421088:	into   
  421089:	fstp   DWORD PTR [esi]
  42108b:	dec    edi
  42108c:	jbe    0x42108e
  42108e:	ss inc ebx
  421090:	retf   
  421091:	not    cl
  421093:	dec    ebx
  421094:	push   0xadd272eb
  421099:	inc    ebx
  42109a:	cwde   
  42109b:	adc    BYTE PTR [ecx+0x44],dh
  42109e:	repz mov edx,0x5388e8a3
  4210a4:	sub    DWORD PTR [eax],ebx
  4210a6:	mov    ah,0x6
  4210a8:	add    eax,0x78b7ffd
  4210ad:	mov    bh,0xd3
  4210af:	jmp    0x421086
  4210b1:	add    al,0xa6
  4210b3:	inc    ecx
  4210b4:	ds (bad) 
  4210b6:	out    dx,al
  4210b7:	push   edx
  4210b8:	jno    0x421085
  4210ba:	add    eax,DWORD PTR [edi-0x35]
  4210bd:	pop    edi
  4210be:	pop    edx
  4210bf:	pop    edi
  4210c0:	jp     0x42112d
  4210c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c3:	popf   
  4210c4:	pop    es
  4210c5:	(bad)  
  4210c6:	outs   dx,DWORD PTR ds:[esi]
  4210c7:	js     0x4210cc
  4210c9:	mov    esi,0xca8ea156
  4210ce:	aad    0xb0
  4210d0:	das    
  4210d1:	(bad)  
  4210d3:	xchg   edx,eax
  4210d4:	(bad)  
  4210d5:	ret    0x8505
  4210d8:	or     edx,DWORD PTR [esi-0x3dbf6d24]
  4210de:	sbb    DWORD PTR [edi+0x70],edi
  4210e1:	mov    esi,0xc27acd84
  4210e6:	sub    eax,0x54813222
  4210eb:	mov    edx,0x8a604219
  4210f0:	dec    esp
  4210f1:	scas   al,BYTE PTR es:[edi]
  4210f2:	xor    DWORD PTR [eax-0x7f],esi
  4210f5:	test   al,0x8d
  4210f7:	and    BYTE PTR [ebx+0x2c],0x5a
  4210fb:	frstor ss:[edx+eiz*4+0x6d]
  421100:	rcr    BYTE PTR [edx-0x59],1
  421103:	mov    edx,0x9f65bfaa
  421108:	pop    eax
  421109:	mov    dl,0xba
  42110b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42110c:	sbb    BYTE PTR ds:0xb7a202b7,ch
  421112:	and    ah,al
  421114:	loope  0x42110d
  421116:	outs   dx,DWORD PTR ds:[esi]
  421117:	aas    
  421118:	or     al,0x3d
  42111a:	mov    ds:0xe650aa70,al
  42111f:	fwait
  421120:	sahf   
  421121:	ret    0x75f2
  421124:	adc    bh,BYTE PTR [eax]
  421126:	loop   0x421101
  421128:	jmp    0xbce9769f
  42112d:	shr    BYTE PTR [edi],0x6e
  421130:	sub    DWORD PTR [ebx-0x2e59883a],ebp
  421136:	movntq QWORD PTR [ebp-0x7a],mm6
  42113a:	retf   0x567b
  42113d:	inc    eax
  42113e:	aad    0x90
  421140:	pop    edi
  421141:	sbb    dh,BYTE PTR [edx]
  421143:	xor    cl,bl
  421145:	out    0xe7,al
  421147:	stc    
  421148:	in     eax,0x61
  42114a:	in     al,0x49
  42114c:	imul   ebp,DWORD PTR [esi+0x14],0x8dc610df
  421153:	or     ah,ch
  421155:	nop
  421156:	adc    eax,0xf1c18064
  42115b:	leave  
  42115c:	imul   ebp,DWORD PTR [ebp+0x19],0x1
  421160:	adc    BYTE PTR [ebx],bh
  421162:	ins    DWORD PTR es:[edi],dx
  421163:	inc    esp
  421164:	test   DWORD PTR [esi+0xd],esp
  421167:	sub    DWORD PTR [eax],0xb69068eb
  42116d:	mov    ebx,0xd8016d2e
  421172:	rol    BYTE PTR [ecx+0x60fa22e2],0xc4
  421179:	or     al,0x32
  42117b:	fwait
  42117c:	adc    ecx,DWORD PTR [edx]
  42117e:	(bad)  
  42117f:	(bad)
  421182:	mov    bh,0x89
  421184:	imul   edi,eax,0x53
  421187:	stos   DWORD PTR es:[edi],eax
  421188:	cli    
  421189:	(bad)  
  42118a:	add    al,bl
  42118c:	add    BYTE PTR [ecx],dl
  42118e:	idiv   DWORD PTR [edx+edi*4]
  421191:	jp     0x42119b
  421193:	dec    esi
  421194:	pop    ds
  421195:	mov    ch,0x5e
  421197:	sub    ecx,ecx
  421199:	or     al,0xd1
  42119b:	ins    BYTE PTR es:[edi],dx
  42119c:	mov    DWORD PTR gs:[edi-0x20],esi
  4211a0:	mov    al,ds:0xb47c91b2
  4211a5:	lods   eax,DWORD PTR ss:[esi]
  4211a7:	cmc    
  4211a8:	test   BYTE PTR [ebx+ecx*8-0x1],cl
  4211ac:	imul   ebp,DWORD PTR [esi-0x47],0xffffffd1
  4211b0:	lea    edi,[eax+0x6d1174c5]
  4211b6:	push   es
  4211b7:	int3   
  4211b8:	test   BYTE PTR [ebx],ch
  4211ba:	xlat   BYTE PTR cs:[ebx]
  4211bc:	mov    eax,0x5faaaf93
  4211c1:	dec    edx
  4211c2:	icebp  
  4211c3:	jmp    0x11f4:0xf7a103d5
  4211ca:	or     DWORD PTR [ecx+0x33459c30],edi
  4211d0:	shl    BYTE PTR [eax],1
  4211d2:	icebp  
  4211d3:	sub    ebp,esp
  4211d5:	ss xor esi,eax
  4211d8:	cmp    BYTE PTR [edi],ch
  4211da:	les    edi,FWORD PTR [edi-0x1]
  4211dd:	loope  0x4211be
  4211df:	mov    ch,0x2e
  4211e1:	sbb    eax,esi
  4211e3:	scas   eax,DWORD PTR es:[edi]
  4211e4:	pushf  
  4211e5:	imul   edi,DWORD PTR ds:0x56549e12,0xfffffff0
  4211ec:	fisttp DWORD PTR [ebx+edi*8-0x1]
  4211f0:	or     dh,BYTE PTR [ebp+0x6a5e09b2]
  4211f6:	jg     0x42126a
  4211f8:	push   es
  4211f9:	sahf   
  4211fa:	cmc    
  4211fb:	leave  
  4211fc:	adc    edi,0x53e9f881
  421202:	push   esp
  421203:	mov    eax,DWORD PTR [esi-0xd]
  421206:	jp     0x42124f
  421208:	dec    esi
  421209:	popf   
  42120a:	push   edi
  42120b:	retf   0x3cad
  42120e:	xchg   BYTE PTR ds:0x18d229ac,ah
  421214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421215:	jmp    0xfd23ec53
  42121a:	cmp    DWORD PTR [edi+0x1b],0x63873834
  421221:	jns    0x421203
  421223:	adc    DWORD PTR [esi+0x69579168],ebp
  421229:	fwait
  42122a:	sbb    ebx,DWORD PTR [edx]
  42122c:	jmp    0x421247
  42122e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42122f:	dec    esp
  421230:	xchg   ch,ch
  421232:	nop
  421233:	sti    
  421234:	ret    0xb8c5
  421237:	clc    
  421238:	inc    ecx
  421239:	repnz (bad) 
  42123b:	sbb    dh,ah
  42123d:	sti    
  42123e:	mov    ebp,ebp
  421240:	test   eax,0xc7cc3bd2
  421245:	add    ch,BYTE PTR [ebp+ebp*8-0x5c]
  421249:	sahf   
  42124a:	mov    dl,0xde
  42124c:	into   
  42124d:	fstp   TBYTE PTR [edi-0x68da7edc]
  421253:	retf   0x5b65
  421256:	mov    eax,ds:0xc9a88b4d
  42125b:	add    eax,0xad66f0a9
  421260:	xor    eax,0xbfeacf83
  421265:	shr    eax,1
  421267:	ds scas eax,DWORD PTR es:[edi]
  421269:	sub    ch,bh
  42126b:	xor    al,0xd
  42126d:	fmul   DWORD PTR [edx]
  42126f:	mov    eax,0xd6d6c6cf
  421274:	shr    DWORD PTR [edi-0x59],0x9e
  421278:	inc    edx
  421279:	add    ebp,DWORD PTR [esp+ecx*4-0x3b]
  42127d:	retf   
  42127e:	inc    ecx
  42127f:	ss (bad) 
  421282:	icebp  
  421283:	pop    ss
  421284:	pop    edx
  421285:	cld    
  421286:	sbb    al,0xd8
  421288:	and    DWORD PTR [ebx],ecx
  42128a:	mov    edi,DWORD PTR [edi]
  42128c:	arpl   WORD PTR [edi],cx
  42128e:	fmul   QWORD PTR [esi+eax*1-0x77904de3]
  421295:	push   ds
  421296:	jecxz  0x4212ef
  421298:	cmp    DWORD PTR [edi+0x1f630fd9],0x8e5b9c67
  4212a2:	jl     0x42125c
  4212a4:	cmp    dl,BYTE PTR [edi]
  4212a6:	fld    TBYTE PTR [ebx+esi*1-0x34]
  4212aa:	jae    0x4212c6
  4212ac:	cdq    
  4212ad:	jecxz  0x421283
  4212af:	sub    DWORD PTR [ecx+0x41a3d98],ebp
  4212b5:	imul   edx,DWORD PTR [ebx-0x43281a9d],0xfa13e03a
  4212bf:	mov    BYTE PTR ds:0xacc04b4a,ch
  4212c5:	and    BYTE PTR [ebx],bl
  4212c7:	mov    dl,0xd4
  4212c9:	jbe    0x421341
  4212cb:	mov    bh,BYTE PTR [ebx-0x7aba1e46]
  4212d1:	mov    esi,0x846da965
  4212d6:	xchg   DWORD PTR cs:[ebx+edx*2-0xe59f906],edx
  4212de:	or     eax,0x496aabeb
  4212e3:	or     DWORD PTR [ebx-0x1ef844fb],ebx
  4212e9:	inc    eax
  4212ea:	in     al,dx
  4212eb:	mov    al,0x2d
  4212ed:	mov    edx,ds
  4212ef:	cdq    
  4212f0:	outs   dx,DWORD PTR ds:[esi]
  4212f1:	outs   dx,DWORD PTR ds:[esi]
  4212f2:	rcr    ch,0x6e
  4212f5:	xchg   ebx,eax
  4212f6:	data16 (bad) 
  4212f8:	mov    esi,0xdfce7475
  4212fd:	mov    bl,BYTE PTR [eax]
  4212ff:	or     dh,cl
  421301:	stos   DWORD PTR es:[edi],eax
  421302:	sbb    edi,DWORD PTR [esi-0x5a]
  421305:	add    eax,0xf46a9b6b
  42130a:	pop    edx
  42130b:	rcr    BYTE PTR [ebx],1
  42130d:	and    ebx,DWORD PTR [ebp+ecx*8-0x1e2f560f]
  421314:	(bad)  
  421315:	dec    ecx
  421316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421317:	sub    eax,0xbf923321
  42131c:	jmp    0xfa20f78e
  421321:	out    dx,al
  421322:	dec    edx
  421323:	retf   0x1b4f
  421326:	push   0x2ecce021
  42132b:	sub    eax,esp
  42132d:	ins    DWORD PTR es:[edi],dx
  42132e:	pushf  
  42132f:	xchg   ecx,eax
  421330:	jb     0x421331
  421332:	xchg   esp,eax
  421333:	mov    esi,0x9af5f049
  421338:	and    al,0x83
  42133a:	add    DWORD PTR [eax+0x28],0xa41266a0
  421341:	inc    ecx
  421342:	scas   eax,DWORD PTR es:[edi]
  421343:	jno    0x421306
  421345:	adc    dh,dh
  421347:	sub    dl,0xe6
  42134a:	xor    ecx,DWORD PTR [esi]
  42134c:	mov    dl,BYTE PTR [ebp-0x5f]
  42134f:	fdivr  DWORD PTR [ecx]
  421351:	sbb    al,0xd6
  421353:	xlat   BYTE PTR ds:[ebx]
  421354:	test   al,0xb5
  421357:	push   esi
  421358:	rol    esp,cl
  42135a:	mov    al,ds:0xb96232b8
  42135f:	outs   dx,BYTE PTR ds:[esi]
  421360:	mov    ch,0xad
  421362:	cmp    BYTE PTR [ebx+eiz*8+0x2f],cl
  421366:	pop    ebp
  421367:	add    al,0x6b
  421369:	cmc    
  42136a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42136b:	xchg   ecx,eax
  42136c:	xchg   ebx,eax
  42136d:	push   ss
  42136e:	pop    edx
  42136f:	adc    al,0x16
  421371:	add    ch,BYTE PTR [edi]
  421373:	cmp    DWORD PTR [ebx+esi*4],ebp
  421376:	pop    ebx
  421377:	fisubr WORD PTR [esi-0x5b]
  42137a:	mov    al,ds:0x23c370c3
  42137f:	mov    WORD PTR [esi],gs
  421381:	test   BYTE PTR [ebx-0x3a59100d],0x53
  421388:	idiv   BYTE PTR [eax]
  42138a:	mov    ecx,0x3529d2bf
  42138f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421390:	xchg   DWORD PTR [ebp-0x73ba13ac],ebx
  421396:	or     al,0xcb
  421398:	xor    al,0x91
  42139a:	mov    bl,0xd9
  42139c:	dec    esi
  42139d:	(bad)  
  42139f:	loope  0x421405
  4213a1:	inc    esi
  4213a2:	jns    0x42133f
  4213a4:	lock shl BYTE PTR [ecx],0xe7
  4213a8:	ror    BYTE PTR [esp+ebp*2-0x6e8f20f],cl
  4213af:	sub    eax,0x2d7508e1
  4213b4:	fist   DWORD PTR [ebx]
  4213b6:	mov    al,0x54
  4213b8:	out    dx,al
  4213b9:	add    cl,BYTE PTR [edi]
  4213bb:	fs je  0x4213e3
  4213be:	mov    dl,0x54
  4213c0:	adc    ebx,DWORD PTR [ebx]
  4213c2:	jge    0x42137e
  4213c4:	mov    ecx,0xb996883
  4213c9:	aaa    
  4213ca:	aam    0xc0
  4213cc:	fisubr WORD PTR [edi+ebx*8]
  4213cf:	jb     0x421412
  4213d1:	popf   
  4213d2:	vcomisd xmm4,xmm1
  4213d6:	ret    
  4213d7:	pop    edi
  4213d8:	cwde   
  4213d9:	sub    al,0x3c
  4213db:	sti    
  4213dc:	dec    edx
  4213dd:	pop    edi
  4213de:	add    bl,BYTE PTR [esi+0x4d2a3116]
  4213e4:	jl     0x4213da
  4213e6:	mov    es,ebp
  4213e8:	iret   
  4213e9:	mov    al,ds:0x6dcca558
  4213ee:	jae    0x4213a3
  4213f0:	mov    dh,0x36
  4213f2:	dec    esp
  4213f3:	sub    ecx,0x81fd154a
  4213f9:	jo     0x421443
  4213fb:	shl    DWORD PTR [ecx],1
  4213fd:	addr16 jno 0x421469
  421400:	cdq    
  421401:	out    dx,eax
  421402:	setge  al
  421405:	(bad)  
  421406:	retf   
  421407:	dec    esp
  421408:	fld    DWORD PTR [ebp-0x1487043d]
  42140e:	gs test eax,0xe63b27c0
  421414:	push   cs
  421415:	mov    WORD PTR [ecx+edi*2-0x7923dfea],?
  42141c:	pop    ebp
  42141d:	enter  0x546f,0xe0
  421421:	(bad)  
  421422:	int    0xc8
  421424:	xchg   DWORD PTR [esi],esp
  421426:	hlt    
  421427:	imul   edi,DWORD PTR [edi+0x33],0xda5da523
  42142e:	fist   DWORD PTR [ebp+0x36]
  421431:	sub    eax,0xb249b852
  421436:	cli    
  421437:	sti    
  421438:	gs fcmovnbe st,st(5)
  42143b:	pop    edx
  42143c:	mov    bl,BYTE PTR [edi]
  42143e:	mov    ch,0xab
  421440:	dec    ebx
  421441:	ins    DWORD PTR es:[edi],dx
  421442:	sub    eax,ecx
  421444:	xor    al,0x9e
  421446:	iret   
  421447:	add    al,0xe8
  421449:	adc    eax,0xf57987ce
  42144e:	adc    bh,al
  421450:	inc    edx
  421451:	pop    esi
  421452:	dec    ebp
  421453:	stos   BYTE PTR es:[edi],al
  421454:	add    eax,0x68d73462
  421459:	jnp    0x421422
  42145b:	jp     0x421471
  42145d:	xchg   BYTE PTR [edi-0x10c3826c],dh
  421463:	xchg   esp,eax
  421464:	stos   BYTE PTR es:[edi],al
  421465:	cmc    
  421466:	or     DWORD PTR [esi+0x61],ebx
  421469:	or     al,0xc4
  42146b:	lea    ebp,[ecx+0x7787024c]
  421471:	xor    eax,0xdd63e20
  421476:	out    dx,eax
  421477:	test   DWORD PTR [eax],edi
  421479:	hlt    
  42147a:	jns    0x4214aa
  42147c:	xchg   al,bl
  42147e:	dec    ebx
  42147f:	ja     0x42146d
  421481:	and    eax,0x5b035412
  421486:	sbb    DWORD PTR [ecx+ecx*4],edi
  421489:	aam    0xb7
  42148b:	loop   0x421492
  42148d:	shl    dh,1
  42148f:	ja     0x4214ef
  421491:	inc    esi
  421492:	hlt    
  421493:	gs (bad) 
  421495:	jbe    0x421482
  421497:	mov    bh,ch
  421499:	push   cs
  42149a:	jns    0x421424
  42149c:	dec    edx
  42149d:	fst    DWORD PTR [esp+edx*2+0x73bb8eca]
  4214a4:	adc    al,0xfe
  4214a6:	xor    ah,bh
  4214a8:	dec    edx
  4214a9:	test   BYTE PTR [esi+ecx*8],dl
  4214ac:	or     BYTE PTR [edi-0x25e9b716],bl
  4214b2:	sbb    BYTE PTR [edi-0x64],bl
  4214b5:	or     al,BYTE PTR [ebx]
  4214b7:	xchg   WORD PTR [edi-0x74],si
  4214bb:	dec    esp
  4214bc:	sbb    al,0xae
  4214be:	adc    ebp,DWORD PTR [eax]
  4214c0:	loopne 0x421485
  4214c2:	push   ds
  4214c3:	push   cs
  4214c4:	in     al,dx
  4214c5:	hlt    
  4214c6:	popa   
  4214c7:	push   ebp
  4214c8:	iret   
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	lea    ecx,[ebp-0x14]
  42165c:	push   ecx
  42165d:	call   DWORD PTR ds:0x428004
  421663:	mov    BYTE PTR [ebp-0x40],0x56
  421667:	call   DWORD PTR ds:0x428014
  42166d:	mov    DWORD PTR [ebp-0x2c],eax
  421670:	mov    BYTE PTR [ebp-0x3e],0x72
  421674:	movzx  edx,WORD PTR [ebp-0x2c]
  421678:	test   edx,edx
  42167a:	jne    0x4216bc
  42167c:	mov    BYTE PTR [ebp-0x34],0x0
  421680:	mov    DWORD PTR [ebp-0x14],0xe0d
  421687:	lea    eax,[ebp-0x28]
  42168a:	push   eax
  42168b:	call   DWORD PTR ds:0x428018
  421691:	mov    DWORD PTR [ebp-0x68],eax
  421694:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169b:	lea    ecx,[ebp-0x40]
  42169e:	push   ecx
  42169f:	mov    edx,DWORD PTR [ebp-0x68]
  4216a2:	push   edx
  4216a3:	call   DWORD PTR ds:0x42801c
  4216a9:	mov    DWORD PTR [ebp-0x44],eax
  4216ac:	mov    DWORD PTR [ebp-0x8],0x4e6c32b4
  4216b3:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ba:	jmp    0x4216d1
  4216bc:	mov    BYTE PTR ds:0x443a58,0x0
  4216c3:	mov    BYTE PTR ds:0x42bb88,0x0
  4216ca:	mov    BYTE PTR ds:0x441b18,0x0
  4216d1:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216d8:	push   DWORD PTR ds:0x428018
  4216de:	pop    edx
  4216df:	mov    DWORD PTR [ebp-0x74],edx
  4216e2:	push   DWORD PTR [ebp-0x30]
  4216e5:	push   0x1000
  4216ea:	mov    eax,DWORD PTR [ebp-0x14]
  4216ed:	add    eax,0x23
  4216f0:	add    eax,0x23
  4216f3:	push   eax
  4216f4:	xor    eax,eax
  4216f6:	push   eax
  4216f7:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fa:	call   ecx
  4216fc:	mov    edx,eax
  4216fe:	mov    DWORD PTR [ebp-0x4],edx
  421701:	mov    eax,DWORD PTR [ebp-0x70]
  421704:	sub    eax,0xdae0b
  421709:	mov    DWORD PTR [ebp-0x70],eax
  42170c:	cmp    DWORD PTR [ebp-0x4],0x0
  421710:	jne    0x421719
  421712:	mov    BYTE PTR ds:0x441b18,0x0
  421719:	mov    ecx,DWORD PTR [ebp-0x4]
  42171c:	add    ecx,DWORD PTR [ebp-0x14]
  42171f:	mov    edx,DWORD PTR [ebp-0x8]
  421722:	mov    DWORD PTR [ecx],edx
  421724:	mov    eax,DWORD PTR [ebp-0x4]
  421727:	add    eax,DWORD PTR [ebp-0x5c]
  42172a:	mov    DWORD PTR [ebp-0x64],eax
  42172d:	mov    ecx,DWORD PTR ds:0x42801c
  421733:	mov    DWORD PTR [ebp-0x54],ecx
  421736:	mov    edx,DWORD PTR [ebp-0x4]
  421739:	add    edx,DWORD PTR [ebp-0x14]
  42173c:	mov    eax,DWORD PTR [ebp+0x8]
  42173f:	mov    DWORD PTR [edx+0x4],eax
  421742:	mov    ecx,DWORD PTR [ebp-0x4]
  421745:	add    ecx,DWORD PTR [ebp-0x14]
  421748:	mov    DWORD PTR [ebp-0xc],ecx
  42174b:	cmp    DWORD PTR [ebp-0x70],0x0
  42174f:	jbe    0x42176c
  421751:	mov    edx,DWORD PTR [ebp-0xc]
  421754:	push   edx
  421755:	mov    eax,DWORD PTR [ebp-0x14]
  421758:	push   eax
  421759:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175c:	add    ecx,DWORD PTR [ebp-0x70]
  42175f:	push   ecx
  421760:	mov    edx,DWORD PTR [ebp-0x4]
  421763:	push   edx
  421764:	call   0x4214d0
  421769:	add    esp,0x10
  42176c:	cmp    DWORD PTR [ebp-0x64],0x0
  421770:	je     0x421784
  421772:	mov    ecx,DWORD PTR [ebp-0x54]
  421775:	push   ecx
  421776:	push   DWORD PTR [ebp-0x74]
  421779:	mov    esi,DWORD PTR [ebp-0x64]
  42177c:	push   edx
  42177d:	pop    eax
  42177e:	push   ecx
  42177f:	nop
  421780:	jmp    esi
  421782:	jmp    0x42178a
  421784:	mov    eax,DWORD PTR [ebp+0x8]
  421787:	mov    DWORD PTR [ebp-0x18],eax
  42178a:	mov    eax,0x1
  42178f:	pop    esi
  421790:	mov    esp,ebp
  421792:	pop    ebp
  421793:	ret    
  421794:	int3   
  421795:	int3   
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xe53b6228
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    DWORD PTR [edx-0x454fc0f6]
  421833:	add    eax,0xf8dc4a9d
  421838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421839:	sub    edi,DWORD PTR [eax+edx*1-0x46f750b0]
  421840:	add    eax,0xf8d84a9d
  421845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421846:	imul   eax,DWORD PTR [ebx-0x11],0x50
  42184a:	scas   eax,DWORD PTR es:[edi]
  42184b:	mov    al,0xb9
  42184d:	add    eax,0xf8d84a9d
  421852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421853:	sub    eax,DWORD PTR [ebx-0x11]
  421856:	push   eax
  421857:	scas   eax,DWORD PTR es:[edi]
  421858:	mov    al,0xb9
  42185a:	add    eax,0xf8d84a9d
  42185f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421860:	sub    eax,DWORD PTR [ebx-0x11]
  421863:	push   eax
  421864:	scas   eax,DWORD PTR es:[edi]
  421865:	mov    al,0xb9
  421867:	add    eax,0xf8204a9d
  42186c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42186d:	sub    ecx,DWORD PTR [ebp-0x10]
  421870:	jmp    0x6b50:0xc0db0a1
  421877:	pusha  
  421878:	stc    
  421879:	jmp    0xc3c6:0x38bb62e6
  421880:	cdq    
  421881:	jne    0x421872
  421883:	and    eax,0x46c78abf
  421888:	arpl   WORD PTR [ecx+esi*1+0x71d6dec1],cx
  42188f:	mov    ebp,0xd4d8bd28
  421894:	pop    esi
  421895:	sub    eax,0x90c139cf
  42189a:	std    
  42189b:	dec    edx
  42189c:	into   
  42189d:	push   0xffffffb5
  42189f:	xchg   edi,eax
  4218a0:	ret    0x6d4e
  4218a3:	loop   0x421902
  4218a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218a6:	xchg   esp,eax
  4218a7:	mov    ecx,0xd84a9d05
  4218ac:	clc    
  4218ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ae:	sub    al,0xda
  4218b0:	adc    ecx,DWORD PTR [ecx]
  4218b2:	in     al,dx
  4218b3:	dec    eax
  4218b4:	sub    ecx,DWORD PTR [edi]
  4218b6:	fidiv  WORD PTR [edx-0x2c1a0db6]
  4218bc:	shl    ebp,1
  4218be:	or     dl,cl
  4218c0:	mov    esp,0xd8655ab3
  4218c5:	shl    BYTE PTR [eax+0x2d4913c3],cl
  4218cb:	test   al,0x3d
  4218cd:	mov    edx,0x40a460e1
  4218d2:	mov    al,0x0
  4218d4:	xor    al,0x21
  4218d6:	outs   dx,DWORD PTR ds:[esi]
  4218d7:	popa   
  4218d8:	imul   esp,DWORD PTR [ebp-0x6868be0a],0xace95800
  4218e2:	popa   
  4218e3:	mov    ebx,0x30e55a7d
  4218e8:	mov    eax,0x4ab2c50f
  4218ed:	repnz in eax,0xd3
  4218f0:	shl    ch,1
  4218f2:	js     0x42194a
  4218f4:	and    dh,BYTE PTR [ebx-0x2d35ba46]
  4218fa:	mov    ch,0x5e
  4218fc:	mov    ecx,0x9235b749
  421901:	mov    edx,0x400ffdb1
  421906:	sbb    BYTE PTR [ebp+0x170121ae],0xc2
  42190d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42190e:	call   0x8d923ef
  421913:	and    BYTE PTR [edx-0x54],ch
  421916:	jns    0x421942
  421918:	mov    WORD PTR [eax],?
  42191a:	in     al,dx
  42191b:	dec    eax
  42191c:	sub    ecx,DWORD PTR [edi]
  42191e:	popf   
  42191f:	dec    edx
  421920:	fdivr  st,st(0)
  421922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421923:	sub    eax,DWORD PTR [ebx-0x11]
  421926:	add    dl,ch
  421928:	mov    al,0xb9
  42192a:	dec    ecx
  42192b:	pushf  
  42192c:	dec    eax
  42192d:	fcomp  DWORD PTR [eax+0x76]
  421930:	inc    eax
  421931:	or     al,0xef
  421933:	push   eax
  421934:	scas   eax,DWORD PTR es:[edi]
  421935:	mov    al,0xb9
  421937:	add    eax,0xf8384a9d
  42193c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193d:	sub    cl,BYTE PTR [eax-0x12]
  421940:	pop    edx
  421941:	scas   eax,DWORD PTR es:[edi]
  421942:	mov    al,0x57
  421944:	add    DWORD PTR [ebp-0x59019bb6],ebx
  42194a:	sub    eax,DWORD PTR [ebx-0x11]
  42194d:	push   eax
  42194e:	mov    esi,0x9d05b90d
  421953:	pop    edx
  421954:	fdivr  st,st(0)
  421956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421957:	sub    eax,DWORD PTR [esi-0x11]
  42195a:	push   eax
  42195b:	scas   eax,DWORD PTR es:[edi]
  42195c:	icebp  
  42195d:	mov    ecx,0xd84a8d05
  421962:	clc    
  421963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421964:	sub    eax,DWORD PTR [ebx-0x16]
  421967:	push   eax
  421968:	scas   al,BYTE PTR es:[edi]
  421969:	mov    al,0xb9
  42196b:	add    eax,0xf8dd4a9d
  421970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421971:	sub    eax,DWORD PTR [ebx-0x11]
  421974:	push   eax
  421975:	scas   eax,DWORD PTR es:[edi]
  421976:	mov    al,0xe9
  421978:	or     DWORD PTR [ebp-0x590723b6],ebx
  42197e:	sub    ah,BYTE PTR [edi-0x4f52af16]
  421984:	mov    ecx,0xc84a9d85
  421989:	clc    
  42198a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42198b:	cmp    eax,DWORD PTR [ebx-0x11]
  42198e:	push   eax
  42198f:	scas   eax,DWORD PTR es:[edi]
  421990:	mov    al,ds:0x4a8d05b9
  421995:	fdivr  st,st(0)
  421997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421998:	sub    eax,DWORD PTR [ebx-0x1]
  42199b:	push   eax
  42199c:	scas   eax,DWORD PTR es:[edi]
  42199d:	mov    al,0xb9
  42199f:	add    eax,0xf8d84a9d
  4219a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219a5:	sub    esi,DWORD PTR [edi-0x2650a32a]
  4219ab:	mov    edx,0x284a9d05
  4219b0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219b2:	fs or  ch,bh
  4219b5:	push   eax
  4219b6:	scas   eax,DWORD PTR es:[edi]
  4219b7:	mov    al,0xb9
  4219b9:	add    eax,0xf8d84a9d
  4219be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219bf:	sub    eax,DWORD PTR [ebx-0x11]
  4219c2:	push   eax
  4219c3:	scas   eax,DWORD PTR es:[edi]
  4219c4:	mov    al,0xb9
  4219c6:	add    eax,0xf8d84a9d
  4219cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219cc:	sub    eax,DWORD PTR [ebx-0x11]
  4219cf:	push   eax
  4219d0:	scas   eax,DWORD PTR es:[edi]
  4219d1:	mov    al,0xb9
  4219d3:	add    eax,0xf8d84a9d
  4219d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219d9:	sub    eax,DWORD PTR [ebx-0x11]
  4219dc:	push   eax
  4219dd:	scas   eax,DWORD PTR es:[edi]
  4219de:	mov    al,0xb9
  4219e0:	add    eax,0xf8d84a9d
  4219e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219e6:	sub    eax,DWORD PTR [ebx-0x11]
  4219e9:	push   eax
  4219ea:	scas   eax,DWORD PTR es:[edi]
  4219eb:	mov    al,0xb9
  4219ed:	add    eax,0xf8d84a9d
  4219f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219f3:	sub    eax,DWORD PTR [ebx-0x11]
  4219f6:	push   eax
  4219f7:	scas   eax,DWORD PTR es:[edi]
  4219f8:	mov    al,0xb9
  4219fa:	add    eax,0xf8d84a9d
  4219ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a00:	sub    eax,DWORD PTR [ebx-0x11]
  421a03:	push   eax
  421a04:	scas   eax,DWORD PTR es:[edi]
  421a05:	mov    al,0xb9
  421a07:	add    eax,0xf8d84a9d
  421a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a0d:	sub    eax,DWORD PTR [ebx-0x11]
  421a10:	push   eax
  421a11:	scas   eax,DWORD PTR es:[edi]
  421a12:	mov    al,0xb9
  421a14:	add    eax,0xf8d84a9d
  421a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a1a:	sub    eax,DWORD PTR [ebx-0x11]
  421a1d:	push   eax
  421a1e:	add    esp,0x4ae97ddc
  421a24:	fdivr  st,st(0)
  421a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a27:	retf   
  421a28:	dec    eax
  421a29:	out    dx,eax
  421a2a:	push   eax
  421a2b:	mov    edi,0x4905b9b0
  421a30:	dec    esi
  421a31:	fdivr  st,st(0)
  421a33:	mov    ds:0x15bf432b,al
  421a38:	in     al,dx
  421a39:	sub    ch,0x4a
  421a3c:	popf   
  421a3d:	dec    edx
  421a3e:	fdivr  st,st(0)
  421a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a41:	sub    esp,DWORD PTR [ebx-0x11]
  421a44:	push   eax
  421a45:	dec    edi
  421a46:	sahf   
  421a47:	retf   
  421a48:	jbe    0x421a39
  421a4a:	sub    eax,ebx
  421a4c:	clc    
  421a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a4e:	sub    esp,DWORD PTR [ebx]
  421a50:	out    dx,eax
  421a51:	push   eax
  421a52:	scas   eax,DWORD PTR es:[edi]
  421a53:	inc    eax
  421a54:	mov    dl,0x5
  421a56:	popf   
  421a57:	adc    al,bl
  421a59:	clc    
  421a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a5b:	repz inc edi
  421a5d:	out    dx,eax
  421a5e:	push   eax
  421a5f:	scas   eax,DWORD PTR es:[edi]
  421a60:	mov    al,0xb9
  421a62:	add    eax,0xf8d84a9d
  421a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a68:	sub    eax,DWORD PTR [ebx-0x31]
  421a6b:	push   eax
  421a6c:	scas   eax,DWORD PTR es:[edi]
  421a6d:	push   eax
  421a6e:	mov    ecx,0xd84a9d05
  421a73:	clc    
  421a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a75:	sub    eax,DWORD PTR [ebx-0x11]
  421a78:	push   eax
  421a79:	scas   eax,DWORD PTR es:[edi]
  421a7a:	mov    al,0xb9
  421a7c:	add    eax,0xf8d84a9d
  421a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a82:	sub    eax,DWORD PTR [ebx-0x11]
  421a85:	push   eax
  421a86:	scas   eax,DWORD PTR es:[edi]
  421a87:	mov    al,0xb9
  421a89:	add    eax,0xf8d84a9d
  421a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a8f:	sub    eax,DWORD PTR [ebx-0x11]
  421a92:	push   eax
  421a93:	scas   eax,DWORD PTR es:[edi]
  421a94:	mov    al,0xb9
  421a96:	add    eax,0xf8d84a9d
  421a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a9c:	sub    eax,DWORD PTR [ebx-0x11]
  421a9f:	push   eax
  421aa0:	scas   eax,DWORD PTR es:[edi]
  421aa1:	mov    al,0xb9
  421aa3:	add    eax,0xf8d84a9d
  421aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa9:	sub    eax,DWORD PTR [ebx-0x11]
  421aac:	push   eax
  421aad:	scas   eax,DWORD PTR es:[edi]
  421aae:	mov    al,0xb9
  421ab0:	add    eax,0xf8d84a9d
  421ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ab6:	sub    eax,DWORD PTR [ebx-0x11]
  421ab9:	push   eax
  421aba:	scas   eax,DWORD PTR es:[edi]
  421abb:	mov    al,0xb9
  421abd:	add    eax,0xf8d84a9d
  421ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac3:	sub    eax,DWORD PTR [ebx-0x11]
  421ac6:	push   eax
  421ac7:	scas   eax,DWORD PTR es:[edi]
  421ac8:	mov    al,0xb9
  421aca:	add    eax,0xf8d84a9d
  421acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ad0:	sub    eax,DWORD PTR [ebx-0x11]
  421ad3:	push   eax
  421ad4:	scas   eax,DWORD PTR es:[edi]
  421ad5:	mov    al,0xb9
  421ad7:	add    eax,0xf8d84a9d
  421adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421add:	sub    eax,DWORD PTR [ebx-0x11]
  421ae0:	push   eax
  421ae1:	scas   eax,DWORD PTR es:[edi]
  421ae2:	mov    al,0xb9
  421ae4:	add    eax,0xf8d84a9d
  421ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aea:	sub    eax,DWORD PTR [ebx-0x11]
  421aed:	push   eax
  421aee:	scas   eax,DWORD PTR es:[edi]
  421aef:	mov    al,0xb9
  421af1:	add    eax,0xf8d84a9d
  421af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421af7:	sub    eax,DWORD PTR [ebx-0x11]
  421afa:	push   eax
  421afb:	scas   eax,DWORD PTR es:[edi]
  421afc:	mov    al,0xb9
  421afe:	add    eax,0xf8d84a9d
  421b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b04:	sub    eax,DWORD PTR [ebx-0x11]
  421b07:	push   eax
  421b08:	scas   eax,DWORD PTR es:[edi]
  421b09:	mov    al,0xb9
  421b0b:	add    eax,0xf8d84a9d
  421b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b11:	sub    eax,DWORD PTR [ebx-0x11]
  421b14:	push   eax
  421b15:	scas   eax,DWORD PTR es:[edi]
  421b16:	mov    al,0xb9
  421b18:	add    eax,0xf8d84a9d
  421b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b1e:	sub    eax,DWORD PTR [ebx-0x11]
  421b21:	push   eax
  421b22:	scas   eax,DWORD PTR es:[edi]
  421b23:	mov    al,0xb9
  421b25:	add    eax,0xf8d84a9d
  421b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b2b:	sub    eax,DWORD PTR [ebx-0x11]
  421b2e:	push   eax
  421b2f:	scas   eax,DWORD PTR es:[edi]
  421b30:	mov    al,0xb9
  421b32:	add    eax,0xf8d84a9d
  421b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b38:	sub    eax,DWORD PTR [ebx-0x11]
  421b3b:	push   eax
  421b3c:	scas   eax,DWORD PTR es:[edi]
  421b3d:	mov    al,0xb9
  421b3f:	add    eax,0xf8d84a9d
  421b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b45:	sub    eax,DWORD PTR [ebx-0x11]
  421b48:	push   eax
  421b49:	scas   eax,DWORD PTR es:[edi]
  421b4a:	mov    al,0xb9
  421b4c:	add    eax,0xf8d84a9d
  421b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b52:	sub    eax,DWORD PTR [ebx-0x11]
  421b55:	push   eax
  421b56:	scas   eax,DWORD PTR es:[edi]
  421b57:	mov    al,0xb9
  421b59:	add    eax,0xf8d84a9d
  421b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b5f:	sub    eax,DWORD PTR [ebx-0x11]
  421b62:	push   eax
  421b63:	scas   eax,DWORD PTR es:[edi]
  421b64:	mov    al,0xb9
  421b66:	add    eax,0xf8d84a9d
  421b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b6c:	sub    eax,DWORD PTR [ebx-0x11]
  421b6f:	push   eax
  421b70:	scas   eax,DWORD PTR es:[edi]
  421b71:	mov    al,0xb9
  421b73:	add    eax,0xf8d84a9d
  421b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b79:	sub    eax,DWORD PTR [ebx-0x11]
  421b7c:	push   eax
  421b7d:	scas   eax,DWORD PTR es:[edi]
  421b7e:	mov    al,0xb9
  421b80:	add    eax,0xf8d84a9d
  421b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b86:	sub    eax,DWORD PTR [ebx-0x11]
  421b89:	push   eax
  421b8a:	scas   eax,DWORD PTR es:[edi]
  421b8b:	mov    al,0xb9
  421b8d:	add    eax,0xf8d84a9d
  421b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b93:	sub    eax,DWORD PTR [ebx-0x11]
  421b96:	push   eax
  421b97:	scas   eax,DWORD PTR es:[edi]
  421b98:	mov    al,0xb9
  421b9a:	add    eax,0xf8d84a9d
  421b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ba0:	sub    eax,DWORD PTR [ebx-0x11]
  421ba3:	push   eax
  421ba4:	scas   eax,DWORD PTR es:[edi]
  421ba5:	mov    al,0xb9
  421ba7:	add    eax,0xf8d84a9d
  421bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bad:	sub    eax,DWORD PTR [ebx-0x11]
  421bb0:	push   eax
  421bb1:	scas   eax,DWORD PTR es:[edi]
  421bb2:	mov    al,0xb9
  421bb4:	add    eax,0xf8d84a9d
  421bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bba:	sub    eax,DWORD PTR [ebx-0x11]
  421bbd:	push   eax
  421bbe:	scas   eax,DWORD PTR es:[edi]
  421bbf:	mov    al,0xb9
  421bc1:	add    eax,0xf8d84a9d
  421bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bc7:	sub    eax,DWORD PTR [ebx-0x11]
  421bca:	push   eax
  421bcb:	scas   eax,DWORD PTR es:[edi]
  421bcc:	mov    al,0xb9
  421bce:	add    eax,0xf8d84a9d
  421bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bd4:	sub    eax,DWORD PTR [ebx-0x11]
  421bd7:	push   eax
  421bd8:	scas   eax,DWORD PTR es:[edi]
  421bd9:	mov    al,0xb9
  421bdb:	add    eax,0xf8d84a9d
  421be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421be1:	sub    eax,DWORD PTR [ebx-0x11]
  421be4:	push   eax
  421be5:	scas   eax,DWORD PTR es:[edi]
  421be6:	mov    al,0xb9
  421be8:	add    eax,0xf8d84a9d
  421bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bee:	sub    eax,DWORD PTR [ebx-0x11]
  421bf1:	push   eax
  421bf2:	scas   eax,DWORD PTR es:[edi]
  421bf3:	mov    al,0xb9
  421bf5:	add    eax,0xf8d84a9d
  421bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bfb:	sub    eax,DWORD PTR [ebx-0x11]
  421bfe:	push   eax
  421bff:	scas   eax,DWORD PTR es:[edi]
  421c00:	mov    al,0xb9
  421c02:	add    eax,0xf8d84a9d
  421c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c08:	sub    eax,DWORD PTR [ebx-0x11]
  421c0b:	push   eax
  421c0c:	scas   eax,DWORD PTR es:[edi]
  421c0d:	mov    al,0xb9
  421c0f:	add    eax,0xf8d84a9d
  421c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c15:	sub    eax,DWORD PTR [ebx-0x11]
  421c18:	push   eax
  421c19:	scas   eax,DWORD PTR es:[edi]
  421c1a:	mov    al,0xb9
  421c1c:	add    eax,0xf8d84a9d
  421c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c22:	sub    eax,DWORD PTR [ebx-0x11]
  421c25:	push   eax
  421c26:	scas   eax,DWORD PTR es:[edi]
  421c27:	mov    al,0xb9
  421c29:	add    eax,0xf8d84a9d
  421c2e:	leave  
  421c2f:	or     DWORD PTR [eax-0x11],0x7f
  421c33:	scas   eax,DWORD PTR es:[edi]
  421c34:	mov    al,0xa9
  421c36:	add    eax,0x227a609d
  421c3b:	xlat   BYTE PTR ds:[ebx]
  421c3c:	dec    ebp
  421c3d:	mov    esp,0xe028cec2
  421c42:	push   esp
  421c43:	xor    esi,DWORD PTR [ebp+0x59]
  421c46:	ins    BYTE PTR es:[edi],dx
  421c47:	ins    DWORD PTR es:[edi],dx
  421c48:	rcr    BYTE PTR [edx-0x39],0xb5
  421c4c:	inc    ebx
  421c4d:	push   ds
  421c4e:	pop    es
  421c4f:	scas   eax,DWORD PTR es:[edi]
  421c50:	push   0x3e59c079
  421c55:	mov    BYTE PTR [ecx-0x2d],cl
  421c58:	shr    BYTE PTR [ecx-0x64],1
  421c5b:	dec    DWORD PTR [eax]
  421c5d:	adc    bh,BYTE PTR [edi+0x2e5fff4a]
  421c63:	jle    0x421c77
  421c65:	cmp    cl,0x9d
  421c68:	lea    esp,[ecx+edx*1+0x2c]
  421c6c:	sub    dl,bh
  421c6e:	adc    BYTE PTR es:[eax-0x7f6ac3f1],0x48
  421c76:	daa    
  421c77:	(bad)  
  421c79:	cs clc 
  421c7b:	pop    ebx
  421c7c:	test   eax,0x15c2e9da
  421c81:	xlat   BYTE PTR ds:[ebx]
  421c82:	imul   al
  421c84:	inc    esi
  421c85:	push   ebx
  421c86:	sti    
  421c87:	sahf   
  421c88:	rcr    ebx,1
  421c8a:	mov    dh,0xc2
  421c8c:	mov    ch,0xb2
  421c8e:	test   al,0x4
  421c90:	cmp    esi,DWORD PTR [esi]
  421c92:	imul   BYTE PTR [esi-0x5f38f707]
  421c98:	and    ecx,DWORD PTR [ecx+0x44]
  421c9b:	adc    DWORD PTR [edi+0x12],0x2d
  421c9f:	(bad)  
  421ca0:	lods   eax,DWORD PTR ds:[esi]
  421ca1:	out    0x58,eax
  421ca3:	mov    ebp,0x1655f174
  421ca8:	adc    ecx,ebx
  421caa:	nop
  421cab:	inc    edi
  421cac:	mov    bl,0xb5
  421cae:	jmp    0x4cde877c
  421cb3:	xor    edx,0xf940df1
  421cb9:	fmul   DWORD PTR [esi+0x1829b14d]
  421cbf:	daa    
  421cc0:	cld    
  421cc1:	and    al,0x28
  421cc3:	cwde   
  421cc4:	sti    
  421cc5:	pop    ecx
  421cc6:	sbb    esi,edi
  421cc8:	cmc    
  421cc9:	or     ch,BYTE PTR [edi+eiz*4-0x561c08ee]
  421cd0:	pop    ds
  421cd1:	repz cmc 
  421cd3:	xchg   ebx,eax
  421cd5:	cwde   
  421cd6:	mov    bh,0xbe
  421cd8:	pop    es
  421cd9:	cmc    
  421cda:	add    eax,0x2f9cd5e8
  421cdf:	hlt    
  421ce0:	adc    ah,BYTE PTR [eax]
  421ce2:	call   0x366ea9d4
  421ce7:	test   BYTE PTR [edx-0x39d471e1],ah
  421ced:	push   esi
  421cee:	mov    dh,0xd1
  421cf0:	out    0x24,al
  421cf2:	jmp    0x40b57895
  421cf7:	pop    ds
  421cf8:	data16 aam 0x12
  421cfb:	bound  ecx,QWORD PTR [esi+0x54bf7a36]
  421d01:	xchg   ebp,eax
  421d02:	ins    DWORD PTR es:[edi],dx
  421d03:	pop    ecx
  421d04:	mov    esi,0x593df1fe
  421d09:	push   ebx
  421d0a:	push   ebp
  421d0b:	sbb    edi,DWORD PTR [ebx+ecx*8+0x47470dec]
  421d12:	rcl    DWORD PTR [edi],0xd1
  421d15:	pop    eax
  421d16:	ds push es
  421d18:	dec    ecx
  421d19:	jnp    0x421cce
  421d1b:	and    DWORD PTR [si-0x5f],eax
  421d1f:	dec    ebp
  421d20:	fnstcw WORD PTR [edx+ebp*2-0x46]
  421d24:	and    al,0xbf
  421d26:	(bad)  
  421d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d29:	mov    ecx,0x3e613393
  421d2e:	scas   al,BYTE PTR es:[edi]
  421d2f:	sbb    DWORD PTR [esi-0x6c],ebx
  421d32:	jno    0x421d10
  421d34:	out    0x5b,eax
  421d36:	(bad)  
  421d37:	add    eax,0x3ccf2ae
  421d3c:	or     ebx,DWORD PTR [eax]
  421d3e:	fisubr WORD PTR [eax-0x74]
  421d41:	repnz dec esp
  421d43:	cs or  ebp,edx
  421d46:	sub    ecx,edi
  421d48:	xchg   edx,eax
  421d49:	push   esi
  421d4a:	imul   edi,ebx,0xffffff9a
  421d4d:	mov    dl,0x3f
  421d4f:	mov    ds:0x6db03665,al
  421d54:	add    al,0xf4
  421d56:	adc    DWORD PTR [edi],ecx
  421d58:	or     DWORD PTR [ecx],esi
  421d5a:	and    al,0xc6
  421d5c:	xchg   ebp,eax
  421d5d:	xchg   esp,eax
  421d5e:	outs   dx,BYTE PTR ds:[esi]
  421d5f:	add    DWORD PTR [edx-0x71],0x8999cf5b
  421d66:	inc    ecx
  421d67:	add    eax,0x1ea1a899
  421d6c:	dec    ecx
  421d6d:	sbb    BYTE PTR [ebx+edx*2],dl
  421d70:	dec    edi
  421d71:	bound  ecx,QWORD PTR [ebx+edx*8]
  421d74:	gs (bad) 
  421d76:	fild   DWORD PTR [ebp-0xe389f08]
  421d7c:	shl    eax,1
  421d7e:	jmp    0x7c1becf7
  421d83:	shr    BYTE PTR ds:0x2bb72b08,0xad
  421d8a:	loop   0x421d3f
  421d8c:	and    eax,0xa3873fb9
  421d91:	je     0x421ddd
  421d93:	imul   edx,ecx,0xa
  421d96:	ret    0x9fd8
  421d99:	loope  0x421df9
  421d9b:	jle    0x421de2
  421d9d:	arpl   WORD PTR [ebx+0x72d47686],dx
  421da3:	sub    al,0x29
  421da5:	addr16 fs or al,0xad
  421da9:	xchg   DWORD PTR [edx+0x18c6911b],esp
  421daf:	shl    ebx,0x1f
  421db2:	cld    
  421db3:	scas   eax,DWORD PTR es:[edi]
  421db4:	repnz push es
  421db6:	dec    ebp
  421db7:	data16 lock xor ch,ah
  421dbb:	adc    edx,esp
  421dbd:	xchg   esp,eax
  421dbe:	dec    esp
  421dbf:	test   BYTE PTR [ebx-0x58cc2ae7],0x2f
  421dc6:	sbb    DWORD PTR [ecx],esp
  421dc8:	not    DWORD PTR [ecx+0x2a]
  421dcb:	inc    edx
  421dcc:	test   al,0x8a
  421dce:	popa   
  421dcf:	ins    DWORD PTR es:[edi],dx
  421dd0:	inc    edi
  421dd1:	int    0x29
  421dd3:	add    al,0x92
  421dd5:	ficomp DWORD PTR [edi+esi*4]
  421dd8:	ja     0x421e11
  421dda:	push   ds
  421ddb:	fcom   DWORD PTR [edx-0x15a492d6]
  421de1:	(bad)  
  421de2:	enter  0xf83,0xb5
  421de6:	mov    cl,0x59
  421de8:	fadd   st(7),st
  421dea:	xchg   ebp,eax
  421deb:	int    0x1b
  421ded:	shl    BYTE PTR [edx],cl
  421def:	fcomp  DWORD PTR [edx]
  421df1:	fadd   DWORD PTR [esp-0xb]
  421df5:	push   cs
  421df6:	mov    ch,0xc9
  421df8:	in     eax,dx
  421df9:	adc    eax,0x50b9c83f
  421dfe:	hlt    
  421dff:	int    0x1c
  421e01:	xchg   DWORD PTR cs:[ebp+0x39576298],esi
  421e08:	push   0xe
  421e0a:	adc    ecx,ebp
  421e0c:	shl    DWORD PTR [edi+0x2e],1
  421e0f:	cmp    ebp,DWORD PTR [edi]
  421e11:	sub    eax,0x58c5ea87
  421e16:	jecxz  0x421e91
  421e18:	inc    ebp
  421e19:	adc    BYTE PTR [ebp+0x10b4270d],bl
  421e1f:	fsubr  QWORD PTR [ecx-0x760ae4e2]
  421e25:	dec    eax
  421e26:	test   DWORD PTR [ebx-0x5efc20c6],ebp
  421e2c:	loop   0x421deb
  421e2e:	xor    bh,BYTE PTR [edi+esi*2]
  421e31:	aam    0xe6
  421e33:	cmp    BYTE PTR [eax-0x80],dl
  421e36:	cs out 0xb8,eax
  421e39:	(bad)  
  421e3a:	cdq    
  421e3b:	das    
  421e3c:	push   ebp
  421e3d:	mov    edx,0x1506696f
  421e42:	out    0x95,eax
  421e44:	in     eax,dx
  421e45:	jp     0x421e3d
  421e47:	cli    
  421e48:	mov    bl,0x73
  421e4a:	aas    
  421e4b:	iret   
  421e4c:	adc    dh,dh
  421e4e:	rcl    esp,cl
  421e50:	mov    ah,0x3a
  421e52:	in     al,dx
  421e53:	mov    eax,ds:0xed9e3715
  421e58:	fcom   st(0)
  421e5a:	jle    0x421e07
  421e5c:	out    0x47,al
  421e5e:	push   0xb3b0b44f
  421e63:	push   es
  421e64:	fwait
  421e65:	and    ah,BYTE PTR [ebp+0x18b95754]
  421e6b:	dec    eax
  421e6c:	aaa    
  421e6d:	repnz fstp DWORD PTR [ebx-0x3d25d19a]
  421e74:	pop    ecx
  421e75:	retf   0x70be
  421e78:	ss xchg edx,eax
  421e7a:	sub    eax,DWORD PTR [ecx]
  421e7c:	inc    esi
  421e7d:	adc    esp,edi
  421e7f:	cmp    eax,0x53a3459b
  421e84:	out    0xd,al
  421e86:	aaa    
  421e87:	or     BYTE PTR ss:[ebx+ebp*4],cl
  421e8b:	sti    
  421e8c:	add    al,0xcb
  421e8e:	xchg   esi,eax
  421e8f:	aam    0xa7
  421e91:	aaa    
  421e92:	sbb    ebp,ecx
  421e94:	mov    cl,BYTE PTR [ebp-0x6e]
  421e97:	repz inc ecx
  421e99:	sti    
  421e9a:	xchg   esi,eax
  421e9b:	jl     0x421e60
  421e9d:	fwait
  421e9e:	cdq    
  421e9f:	int3   
  421ea0:	mov    edx,0xa5d0a44c
  421ea5:	sar    bl,0xcd
  421ea8:	dec    ebp
  421ea9:	inc    eax
  421eaa:	aaa    
  421eab:	out    dx,al
  421eac:	test   BYTE PTR [eax+0x4cd33c05],bl
  421eb2:	add    eax,0xe29e0c45
  421eb7:	repz sbb al,0x3f
  421eba:	loope  0x421e50
  421ebc:	pushf  
  421ebd:	leave  
  421ebe:	add    al,0xcd
  421ec0:	out    dx,eax
  421ec1:	or     eax,0xec289335
  421ec6:	push   ebx
  421ec7:	sti    
  421ec8:	imul   esp,DWORD PTR [ebx-0x7d5925bd],0xffffffd1
  421ecf:	int3   
  421ed0:	xchg   edi,eax
  421ed1:	out    0x41,eax
  421ed3:	jp     0x421ec3
  421ed5:	out    0xc6,eax
  421ed7:	scas   eax,DWORD PTR es:[edi]
  421ed8:	or     eax,0xc0eaaf20
  421edd:	ret    0xa470
  421ee0:	and    al,BYTE PTR [edx]
  421ee2:	pop    es
  421ee3:	jp     0x421f4c
  421ee5:	inc    esp
  421ee6:	cli    
  421ee7:	dec    esp
  421ee8:	sbb    DWORD PTR es:[esp+edx*2-0x60a77f6a],ecx
  421ef0:	mov    ch,0xb8
  421ef2:	leave  
  421ef3:	fmul   st(3),st
  421ef5:	adc    BYTE PTR [edi],ah
  421ef7:	into   
  421ef8:	mov    ch,0x68
  421efa:	lods   al,BYTE PTR ds:[esi]
  421efb:	test   al,0x3c
  421efd:	or     BYTE PTR [edi+eiz*8-0xd73f823],bh
  421f04:	mov    ds:0xb98f2d79,eax
  421f09:	clc    
  421f0a:	jo     0x421f41
  421f0c:	jne    0x421e9f
  421f0e:	fstp   QWORD PTR [ecx]
  421f10:	xor    BYTE PTR [edi],ch
  421f12:	out    dx,eax
  421f13:	mov    BYTE PTR [eax+eax*2-0x5c35ff84],0xbe
  421f1b:	in     eax,dx
  421f1c:	bound  ebp,QWORD PTR [esi-0x762700fe]
  421f22:	and    eax,0xfdb25fd
  421f27:	out    0xe1,eax
  421f29:	retf   0x40c8
  421f2c:	adc    bh,BYTE PTR [ebp+0x1d]
  421f2f:	loop   0x421f38
  421f31:	mov    eax,0x1839d8b1
  421f36:	cmp    BYTE PTR ds:0xcae10bb,0xd3
  421f3d:	sbb    DWORD PTR [esi-0x793ac7e2],ecx
  421f43:	fisubr WORD PTR [eax-0xf]
  421f46:	and    edx,DWORD PTR [edx]
  421f48:	and    eax,0xb9daf575
  421f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f4e:	stos   DWORD PTR es:[edi],eax
  421f4f:	ret    
  421f50:	sbb    BYTE PTR [edx+0x1b],ah
  421f53:	ss les esp,FWORD PTR ds:[edi]
  421f57:	ret    0x4356
  421f5a:	aad    0x49
  421f5c:	jp     0x421f73
  421f5e:	xchg   edi,eax
  421f5f:	mov    edx,DWORD PTR [ebx-0x3f]
  421f62:	adc    ecx,DWORD PTR [ecx-0x698c827f]
  421f68:	mov    bh,0xcc
  421f6a:	inc    ecx
  421f6b:	or     eax,0xf7e47f45
  421f70:	sahf   
  421f71:	mov    ds:0x2950f816,eax
  421f76:	(bad)  
  421f77:	pop    esp
  421f78:	mov    ebp,0x6f1ef665
  421f7d:	pop    edx
  421f7e:	sbb    eax,0x760b338f
  421f83:	sub    BYTE PTR [edx],bh
  421f85:	cmp    BYTE PTR [eax+0x6ffc8e64],bl
  421f8b:	popa   
  421f8c:	xor    al,0x53
  421f8e:	sbb    eax,0xa25b1d46
  421f93:	jns    0x421f85
  421f95:	test   eax,0x2ae1b19d
  421f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f9b:	imul   ecx,DWORD PTR [edi],0xffffff8c
  421f9e:	and    BYTE PTR [ebx+0x7f16ff6e],ah
  421fa4:	or     DWORD PTR [edi-0x4d38bad1],esi
  421faa:	sub    ch,BYTE PTR [esp+esi*2]
  421fad:	out    dx,al
  421fae:	sub    DWORD PTR [ebp+0x26],ebp
  421fb1:	pop    ds
  421fb2:	mov    edi,0x26f42d2
  421fb7:	dec    eax
  421fb8:	jns    0x421fa3
  421fba:	mov    ah,0x1f
  421fbc:	sub    eax,0xa1f9cebc
  421fc1:	jg     0x421ff3
  421fc3:	stos   BYTE PTR es:[edi],al
  421fc4:	dec    edi
  421fc5:	(bad)  
  421fc6:	xchg   edi,eax
  421fc7:	fisubr WORD PTR [edx-0x4f5f8939]
  421fcd:	icebp  
  421fce:	cmp    DWORD PTR [esi+0x50],ebx
  421fd1:	js     0x421ff9
  421fd3:	pop    es
  421fd4:	scas   al,BYTE PTR es:[edi]
  421fd5:	imul   ebp,DWORD PTR [esi+eax*2],0xffffffe3
  421fd9:	aam    0x3e
  421fdb:	inc    esp
  421fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fdd:	bound  esp,QWORD PTR [esi+0x71]
  421fe0:	fldcw  WORD PTR [esi-0x6f0581e3]
  421fe6:	(bad)  
  421fe7:	and    ebx,DWORD PTR [ecx+0x48]
  421fea:	stos   BYTE PTR es:[edi],al
  421feb:	(bad)  
  421fec:	pop    ss
  421fed:	lahf   
  421fee:	xor    BYTE PTR [edx-0x2],0x23
  421ff2:	stc    
  421ff3:	mov    BYTE PTR [eax-0x40fdb505],ch
  421ff9:	ins    BYTE PTR es:[edi],dx
  421ffa:	outs   dx,BYTE PTR ds:[esi]
  421ffb:	xchg   BYTE PTR [ecx-0x2e],dh
  421ffe:	mov    edi,0x574def75
  422003:	ret    0x104e
  422006:	inc    edi
  422007:	pushf  
  422008:	adc    edi,DWORD PTR [ecx+0x48ad8b88]
  42200e:	dec    esi
  42200f:	pop    ebx
  422010:	sti    
  422011:	xchg   DWORD PTR [edx],esp
  422013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422014:	and    ecx,DWORD PTR [ecx]
  422016:	xchg   ebp,eax
  422017:	mov    ch,0x98
  422019:	call   0xea28:0x3800c256
  422020:	xor    ecx,DWORD PTR ds:0xac8e
  422025:	pop    edx
  422026:	mov    al,ds:0xa8307931
  42202b:	es ret 0x50da
  42202f:	iret   
  422030:	loope  0x421fb3
  422032:	je     0x421fc1
  422034:	xchg   ecx,eax
  422035:	pusha  
  422036:	xchg   ebp,eax
  422037:	jmp    0x1e07abf0
  42203c:	sar    DWORD PTR [ecx],0xcc
  42203f:	pop    ecx
  422040:	xchg   ebp,eax
  422041:	add    BYTE PTR [ebp-0x105fd4e4],ch
  422047:	or     ax,0xde8f
  42204b:	ret    0xb78d
  42204e:	jmp    0x46b3921d
  422053:	push   eax
  422054:	inc    edi
  422055:	pop    edi
  422056:	std    
  422057:	pushf  
  422058:	cmp    eax,0xb9face45
  42205d:	jg     0x4220c7
  42205f:	lods   al,BYTE PTR ds:[esi]
  422060:	xor    ebp,DWORD PTR [eax+0x23]
  422063:	xor    eax,0xce700c9b
  422068:	inc    edx
  422069:	stc    
  42206a:	xchg   esp,eax
  42206b:	das    
  42206c:	mov    DWORD PTR [esi+0x6ed1041f],edx
  422072:	cmp    BYTE PTR [edi],bl
  422074:	sti    
  422075:	call   0xa6f714c4
  42207a:	lods   eax,DWORD PTR ds:[esi]
  42207b:	jg     0x42208d
  42207d:	push   0x393fccaf
  422082:	out    0x46,al
  422084:	and    DWORD PTR [ebp+esi*2+0x35],ebx
  422088:	adc    dh,BYTE PTR [eax+0xf]
  42208b:	lods   al,BYTE PTR ds:[esi]
  42208c:	mov    esp,0xa3c36c71
  422091:	cs jbe 0x4220d4
  422094:	lods   al,BYTE PTR ds:[esi]
  422095:	mov    bl,0xe1
  422097:	dec    ebx
  422098:	and    al,0x31
  42209a:	and    DWORD PTR [eax],ebp
  42209c:	cmp    BYTE PTR [edx],bh
  42209e:	push   ecx
  42209f:	fcom   DWORD PTR [esi]
  4220a1:	push   ds
  4220a2:	sahf   
  4220a3:	push   ds
  4220a4:	dec    edx
  4220a5:	jmp    0x4220a1
  4220a7:	inc    edi
  4220a8:	ins    DWORD PTR es:[edi],dx
  4220a9:	push   edi
  4220aa:	popf   
  4220ab:	in     al,0xe3
  4220ad:	lods   eax,DWORD PTR ds:[esi]
  4220ae:	sub    BYTE PTR [eax+0x9],0x63
  4220b2:	push   ss
  4220b3:	or     dl,bh
  4220b5:	enter  0x20d6,0x94
  4220b9:	pop    ecx
  4220ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220bb:	(bad)  
  4220bd:	loope  0x4220da
  4220bf:	int    0x7c
  4220c1:	mov    WORD PTR [edx],?
  4220c3:	test   eax,0xdc723042
  4220c8:	xchg   cx,ax
  4220ca:	(bad)  
  4220cb:	js     0x422129
  4220cd:	inc    edx
  4220ce:	call   FWORD PTR [esi+0x14]
  4220d1:	and    BYTE PTR [edi],cl
  4220d3:	into   
  4220d4:	in     al,dx
  4220d5:	pushf  
  4220d6:	mov    ebp,0x5c14d7d9
  4220db:	push   esp
  4220dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220dd:	and    DWORD PTR [edi+0xe089cda],esi
  4220e3:	jno    0x422121
  4220e5:	xor    al,0xd4
  4220e7:	mov    dl,0x64
  4220e9:	out    0xd0,eax
  4220eb:	iret   
  4220ec:	pop    ecx
  4220ed:	rol    ebp,1
  4220ef:	or     al,0x72
  4220f1:	repnz out 0x36,eax
  4220f4:	and    cl,BYTE PTR [ebp+0x5e]
  4220f7:	(bad)  
  4220f8:	test   BYTE PTR [eax+ebp*4-0x5c5c6a9c],ch
  4220ff:	retf   
  422100:	pop    ecx
  422101:	xchg   edx,eax
  422102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422103:	xor    eax,0xb90c46dd
  422108:	jmp    0x7eaaa975
  42210d:	push   esp
  42210e:	or     esi,DWORD PTR [ecx]
  422110:	jge    0x422129
  422112:	shr    BYTE PTR [edx+ecx*2],0x6d
  422116:	stc    
  422117:	(bad)  
  422118:	(bad)  
  422119:	fucom  st(3)
  42211b:	sub    ah,BYTE PTR [ebx]
  42211d:	icebp  
  42211e:	fistp  DWORD PTR [ecx-0x21]
  422121:	(bad)  
  422124:	push   0xffffffb3
  422126:	fcomp  st(1)
  422128:	sub    al,0xba
  42212a:	sub    bh,BYTE PTR [esi]
  42212c:	jge    0x42217b
  42212e:	sbb    al,0xf4
  422130:	mov    ah,0x9b
  422132:	push   0x6663753c
  422137:	inc    ebp
  422138:	fisttp WORD PTR [ebp-0x1a]
  42213b:	jecxz  0x42217a
  42213d:	popa   
  42213e:	mov    BYTE PTR [ecx+eax*2-0x3ce0fc13],bh
  422145:	mov    al,0x5f
  422147:	or     al,0x8
  422149:	dec    edi
  42214a:	or     BYTE PTR [edi+0x15],dh
  42214d:	pop    ds
  42214e:	in     al,dx
  42214f:	outs   dx,DWORD PTR ds:[esi]
  422150:	jge    0x4220eb
  422152:	aam    0xfd
  422154:	ds std 
  422156:	cli    
  422157:	push   es
  422158:	mov    al,0x47
  42215a:	sbb    DWORD PTR [edi+0xf],ecx
  42215d:	shl    BYTE PTR [esi+edi*2-0xb3d1da4],cl
  422164:	or     eax,0x4d09c894
  422169:	sub    BYTE PTR [ebx-0x2de513be],bl
  42216f:	scas   eax,DWORD PTR es:[edi]
  422170:	(bad)  
  422171:	mov    al,0x92
  422173:	pop    ss
  422174:	das    
  422175:	add    eax,0xc78f9458
  42217a:	xchg   ebp,eax
  42217b:	int    0xda
  42217d:	das    
  42217e:	(bad)  
  42217f:	enter  0x4cf2,0xbd
  422183:	or     DWORD PTR [ebx-0x61c2a0d0],ebx
  422189:	inc    esi
  42218a:	add    al,0x60
  42218c:	es nop
  42218e:	mov    ebp,0xa8da910d
  422193:	mov    gs,WORD PTR [ebp-0x494b3fa8]
  422199:	in     eax,0xf1
  42219b:	dec    ebp
  42219c:	rcr    ebp,0x39
  42219f:	add    BYTE PTR [ecx-0x5d6d8d9d],cl
  4221a5:	or     dh,dh
  4221a7:	and    bh,BYTE PTR [eax+ebp*1]
  4221aa:	ret    0x2eb7
  4221ad:	test   eax,0x5f9da754
  4221b2:	fcomp  QWORD PTR [esi]
  4221b4:	fmulp  st(3),st
  4221b6:	pop    eax
  4221b7:	jbe    0x42221b
  4221b9:	push   esi
  4221ba:	push   edi
  4221bb:	stos   DWORD PTR es:[edi],eax
  4221bc:	iret   
  4221bd:	mov    esp,0xe798e654
  4221c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221c3:	aam    0x88
  4221c5:	pushf  
  4221c6:	popf   
  4221c7:	arpl   WORD PTR [esi+0x6c],ax
  4221ca:	data16 aas 
  4221cc:	mov    fs,WORD PTR [eax]
  4221ce:	push   ss
  4221cf:	and    al,0xc
  4221d1:	mov    ah,0x11
  4221d3:	mov    ds:0xa1493188,eax
  4221d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d9:	jg     0x422208
  4221db:	retf   0xa45b
  4221de:	cmp    BYTE PTR [esi+0x8],dl
  4221e1:	cmp    eax,0x8bce7050
  4221e6:	dec    edx
  4221e7:	in     al,0xba
  4221e9:	jo     0x42223f
  4221eb:	cmp    DWORD PTR [edi],edi
  4221ed:	cmp    dl,BYTE PTR [edi+eax*2]
  4221f0:	dec    edi
  4221f1:	jne    0x42223d
  4221f3:	(bad)
  4221f6:	jmp    0x417011b6
  4221fb:	nop
  4221fc:	pop    ebx
  4221fd:	mov    gs,WORD PTR [esi-0x21]
  422200:	mov    ds:0x4846167b,eax
  422205:	mov    cl,0x19
  422207:	and    eax,0x27f27f20
  42220c:	sub    al,0xc6
  42220e:	cmp    DWORD PTR [ecx-0x41b314e3],esi
  422214:	pop    edi
  422215:	push   ss
  422216:	call   0x3fc8:0x4cd50034
  42221d:	mov    ah,0x6e
  42221f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422220:	clc    
  422221:	cmp    bl,BYTE PTR [edi]
  422223:	cld    
  422224:	(bad)  
  422225:	(bad)
  422229:	ds push ss
  42222b:	lds    eax,FWORD PTR [ebx]
  42222d:	fcom   st(2)
  42222f:	(bad)  [eax-0x728872a5]
  422235:	mov    ebx,DWORD PTR [esi*1-0x78b0f45a]
  42223c:	sahf   
  42223d:	fwait
  42223e:	shl    DWORD PTR [edi-0x1c4d5645],cl
  422244:	xor    esi,DWORD PTR [edi-0x7c]
  422247:	daa    
  422248:	in     eax,0xad
  42224a:	add    DWORD PTR [eax+0x662d093d],ebp
  422250:	into   
  422251:	arpl   WORD PTR [esi-0x5f],sp
  422254:	rcr    DWORD PTR [esi+0x6d2e6e4f],1
  42225a:	lods   al,BYTE PTR ds:[esi]
  42225b:	mov    ah,al
  42225d:	mov    ds:0x75bd428,al
  422262:	push   ds
  422263:	shl    BYTE PTR [eax],1
  422265:	inc    esi
  422266:	adc    al,0xa3
  422268:	xchg   ecx,eax
  422269:	jns    0x42227e
  42226b:	call   0x21ab285
  422270:	mov    eax,0xa483d5f6
  422275:	pop    ebp
  422276:	inc    eax
  422277:	cmp    BYTE PTR [eax+0x39],ah
  42227a:	push   cs
  42227b:	dec    ebx
  42227c:	jmp    0x649e:0x10dc22a3
  422283:	pop    DWORD PTR [ecx]
  422285:	pop    esp
  422286:	popa   
  422287:	add    bl,BYTE PTR [esi]
  422289:	(bad)  [ebp-0x590f73a5]
  42228f:	mov    bl,0x61
  422291:	push   ds
  422292:	jg     0x4222a1
  422294:	cli    
  422295:	fmulp  st(5),st
  422297:	imul   DWORD PTR [ecx-0x704ffdba]
  42229d:	jne    0x42223d
  42229f:	je     0x4222b0
  4222a1:	std    
  4222a2:	in     eax,dx
  4222a3:	fcmovnu st,st(2)
  4222a5:	xor    DWORD PTR [edi-0x6b327854],ebx
  4222ab:	jnp    0x4222a8
  4222ad:	vshufps xmm2,xmm1,XMMWORD PTR [edx],0x9f
  4222b2:	add    al,0x8d
  4222b4:	ins    DWORD PTR es:[edi],dx
  4222b5:	sbb    dh,BYTE PTR [ebx]
  4222b7:	cdq    
  4222b8:	test   dl,bl
  4222ba:	sbb    al,0xa2
  4222bc:	jo     0x4222b2
  4222be:	mov    BYTE PTR [edi],dl
  4222c0:	ja     0x4222d7
  4222c2:	out    dx,eax
  4222c3:	dec    ebp
  4222c4:	arpl   WORD PTR [ebp+ecx*8-0x5c33d4e1],si
  4222cb:	push   ecx
  4222cc:	retf   
  4222cd:	and    ebx,0xffffff98
  4222d0:	mov    es,WORD PTR [eax-0x3a]
  4222d3:	pushf  
  4222d4:	mov    BYTE PTR [edx-0x4f],dl
  4222d7:	imul   ebx,DWORD PTR [ecx],0x34
  4222da:	sar    DWORD PTR fs:[ecx],cl
  4222dd:	outs   dx,BYTE PTR ds:[esi]
  4222de:	push   esp
  4222df:	adc    BYTE PTR [edi],al
  4222e1:	div    BYTE PTR [edi-0x1eb271c]
  4222e7:	adc    eax,0x9ffe7c1
  4222ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ed:	push   cs
  4222ee:	jl     0x422310
  4222f0:	outs   dx,DWORD PTR ds:[esi]
  4222f1:	pop    edi
  4222f2:	mov    ecx,0x66385f57
  4222f7:	pushf  
  4222f8:	cwde   
  4222f9:	inc    edi
  4222fa:	out    0x56,eax
  4222fc:	cmp    ebp,ebx
  4222fe:	inc    ebp
  4222ff:	mov    bh,0xf8
  422301:	jmp    0xce48:0x223baa9d
  422308:	fstp   st(0)
  42230a:	pusha  
  42230b:	lahf   
  42230c:	outs   dx,BYTE PTR ds:[esi]
  42230d:	fcom   QWORD PTR [edi+0x579a8db4]
  422313:	frstor [eax+ebp*1-0x48]
  422317:	gs test ebp,esp
  42231a:	pop    esi
  42231b:	xchg   ebp,eax
  42231c:	call   0xe929:0x150e112b
  422323:	popf   
  422324:	fild   WORD PTR [ecx+ecx*4+0x2ee3f6cc]
  42232b:	sub    BYTE PTR [ebx+ebx*8],dl
  42232e:	pop    ss
  42232f:	jecxz  0x42236a
  422331:	call   0xd319:0x184467e0
  422338:	dec    esi
  422339:	jmp    0xb1e4e16b
  42233e:	xor    ebp,DWORD PTR [ecx+0x20bd73dd]
  422344:	fwait
  422345:	mov    WORD PTR [eax+0x6d6762b3],fs
  42234b:	sub    BYTE PTR [ebx-0x7a55507f],ch
  422351:	xchg   DWORD PTR [ebx],eax
  422353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422354:	aam    0x88
  422356:	loopne 0x422326
  422358:	mov    ecx,0x8a102781
  42235d:	rol    DWORD PTR [ebx+0x61],0xc8
  422361:	jae    0x4223b3
  422363:	cmp    al,0x99
  422365:	and    eax,0xf6eeebce
  42236a:	mov    ds:0xa86c666d,eax
  42236f:	mov    ah,0x1a
  422371:	push   0x8ca4ac41
  422376:	adc    al,0x8c
  422378:	cmp    ebx,DWORD PTR [ecx+0x30]
  42237b:	and    esi,DWORD PTR [ecx-0x7a]
  42237e:	sti    
  42237f:	xchg   ecx,eax
  422380:	cmp    bh,BYTE PTR [edx]
  422382:	push   ebp
  422383:	pshufw mm4,QWORD PTR [ecx],0xd5
  422387:	ins    BYTE PTR es:[edi],dx
  422388:	jnp    0x4223f5
  42238a:	retf   
  42238b:	mov    cs,WORD PTR [ebp+0x653204]
  422391:	popa   
  422392:	push   edi
  422393:	not    BYTE PTR ds:0xa6147509
  422399:	fsub   DWORD PTR ds:0x79037668
  42239f:	out    0xa1,eax
  4223a1:	pop    ss
  4223a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223a3:	cmc    
  4223a4:	loope  0x42234a
  4223a6:	ds xchg esp,eax
  4223a8:	hlt    
  4223a9:	out    dx,eax
  4223aa:	mov    bh,0x9
  4223ac:	fmul   DWORD PTR ds:0xd69f65f2
  4223b2:	mov    dl,0xc7
  4223b4:	(bad)  
  4223b5:	and    BYTE PTR [edx-0x55],cl
  4223b8:	mov    esi,0xd4f87145
  4223bd:	in     al,0xb3
  4223bf:	repz loope 0x422424
  4223c2:	loop   0x4223a4
  4223c4:	dec    ebp
  4223c5:	jno    0x422437
  4223c7:	cmp    eax,0xf2f35020
  4223cc:	out    dx,eax
  4223cd:	leave  
  4223ce:	pusha  
  4223cf:	jle    0x422355
  4223d1:	dec    ecx
  4223d2:	repnz shr WORD PTR [eax],1
  4223d6:	int    0x89
  4223d8:	fdivr  DWORD PTR [ebp-0x7f]
  4223db:	mov    ecx,0x797dc6f7
  4223e0:	pop    edx
  4223e1:	xchg   DWORD PTR [eax],esp
  4223e3:	xor    eax,DWORD PTR [edi+0x3417671a]
  4223e9:	jp     0x4223bd
  4223eb:	push   ebx
  4223ec:	lods   eax,DWORD PTR ds:[esi]
  4223ed:	aad    0xa2
  4223ef:	in     eax,dx
  4223f0:	hlt    
  4223f1:	mov    al,ds:0x66dbea30
  4223f6:	loopne 0x42244d
  4223f8:	nop
  4223f9:	retf   
  4223fa:	dec    eax
  4223fb:	jnp    0x4223bf
  4223fd:	sub    DWORD PTR [ebp+0x39],ecx
  422400:	and    eax,0x2f2928ba
  422405:	pop    eax
  422406:	dec    edx
  422407:	cmp    dl,ah
  422409:	fld    TBYTE PTR [edx-0x345c9245]
  42240f:	jg     0x422436
  422411:	rcl    esi,0x2c
  422414:	push   0xffffffb4
  422416:	mov    edi,0xf3002926
  42241b:	lea    ecx,[ecx-0x68]
  42241e:	fstp   QWORD PTR [eax+0x19]
  422421:	adc    eax,edi
  422423:	xlat   BYTE PTR ds:[ebx]
  422424:	ret    0x863f
  422427:	cmp    DWORD PTR [ebx-0x1de86643],esp
  42242d:	mov    ebp,0xcc9f8f8e
  422432:	loop   0x4223ec
  422434:	stos   DWORD PTR es:[edi],eax
  422435:	shr    DWORD PTR [eax],0x8e
  422438:	adc    al,0x7
  42243a:	push   esi
  42243b:	cmp    DWORD PTR [eax+0x52],esp
  42243e:	push   ebx
  42243f:	or     cl,al
  422441:	loope  0x4223f7
  422443:	(bad)  
  422445:	sbb    eax,DWORD PTR [edi+0x581a56b]
  42244b:	jmp    0x4223d0
  42244d:	xchg   edi,eax
  42244e:	inc    esp
  42244f:	sar    BYTE PTR [edi-0x73cec4fe],cl
  422455:	inc    esi
  422456:	mov    WORD PTR [ecx+0x6734263c],fs
  42245c:	and    DWORD PTR [esi+0x2a2410e6],edx
  422462:	add    DWORD PTR [edi-0x5e],eax
  422465:	add    eax,0xcf399ba5
  42246a:	sbb    BYTE PTR [eax],ah
  42246c:	jge    0x42244b
  42246e:	pushf  
  42246f:	stc    
  422470:	into   
  422471:	sub    eax,ebp
  422473:	shr    DWORD PTR [esi-0x35fb61fb],cl
  422479:	in     eax,0x77
  42247b:	lock neg eax
  42247e:	jbe    0x422430
  422480:	dec    ebx
  422481:	in     al,dx
  422482:	(bad)  
  422483:	mov    dl,0x67
  422485:	rol    cl,0x58
  422488:	or     DWORD PTR [esi+0x2c],ecx
  42248b:	test   ecx,ebp
  42248d:	cmp    al,0x33
  42248f:	loope  0x42246f
  422491:	popa   
  422492:	cmp    edi,edi
  422494:	cmp    BYTE PTR [esp+edx*8],ah
  422497:	cli    
  422498:	dec    eax
  422499:	mov    ebp,eax
  42249b:	mov    BYTE PTR [edx-0x6d783bb4],ch
  4224a1:	push   0x7a
  4224a3:	jns    0x422522
  4224a5:	jge    0x422515
  4224a7:	(bad)  
  4224a8:	loopne 0x4224a6
  4224aa:	xor    dh,BYTE PTR [esi+0x488a0ec6]
  4224b0:	adc    al,0x41
  4224b3:	push   ebp
  4224b4:	push   ecx
  4224b5:	add    ebx,ebx
  4224b7:	cwde   
  4224b8:	out    dx,eax
  4224b9:	mov    al,0x4f
  4224bb:	retf   0xc4d7
  4224be:	loope  0x4224f0
  4224c0:	xchg   DWORD PTR [eax-0x5d70f70e],ebx
  4224c6:	inc    DWORD PTR [edi+0x1d322a4d]
  4224cc:	jl     0x422537
  4224ce:	stos   BYTE PTR es:[edi],al
  4224cf:	pop    ecx
  4224d0:	dec    esi
  4224d1:	xor    ah,ah
  4224d3:	inc    ebx
  4224d4:	fcmovnbe st,st(4)
  4224d6:	fnsave [ebx-0x17]
  4224d9:	leave  
  4224da:	stos   DWORD PTR es:[edi],eax
  4224db:	mov    ds:0x974d81ff,eax
  4224e0:	mov    ?,WORD PTR [edi-0x67d48a70]
  4224e6:	outs   dx,DWORD PTR ds:[esi]
  4224e7:	push   ebx
  4224e8:	xchg   ecx,eax
  4224e9:	fistp  WORD PTR [ebx]
  4224eb:	cld    
  4224ec:	pop    DWORD PTR [edi]
  4224ee:	repnz pop esp
  4224f0:	fcomp  DWORD PTR [eax-0x56]
  4224f3:	out    dx,eax
  4224f4:	fwait
  4224f5:	les    eax,FWORD PTR [ebx+0x2a413a9b]
  4224fb:	pushaw 
  4224fd:	cmp    cl,BYTE PTR [eax-0x960f17a]
  422503:	mov    ebp,0xec46cfb5
  422508:	or     DWORD PTR [eax-0x3a],esp
  42250b:	xchg   BYTE PTR [esi-0x4e],al
  42250e:	push   ebp
  42250f:	inc    ecx
  422510:	or     DWORD PTR [edi-0x6f971578],esp
  422516:	xchg   ebx,eax
  422517:	pop    edi
  422518:	into   
  422519:	mov    dh,0x31
  42251b:	scas   al,BYTE PTR es:[edi]
  42251c:	dec    edx
  42251d:	or     DWORD PTR [esi+0x12],esi
  422520:	mov    edi,0x39c7ebb
  422525:	or     eax,0x266de87b
  42252a:	cmc    
  42252b:	fsincos 
  42252d:	mov    eax,0x20479cd1
  422532:	(bad)
  422535:	cdq    
  422536:	jno    0x422593
  422538:	and    ch,BYTE PTR [edx+0xb]
  42253b:	push   edi
  42253c:	or     ah,BYTE PTR [esi-0x34]
  42253f:	cmp    esi,ebx
  422541:	mov    ds:0xf8e54221,eax
  422546:	ins    DWORD PTR es:[edi],dx
  422547:	stc    
  422548:	in     al,dx
  422549:	xchg   DWORD PTR [ebp+0x45c10226],ebx
  42254f:	shl    BYTE PTR [ebx+0x222c150f],0xf8
  422556:	dec    ebp
  422557:	jp     0x422508
  422559:	adc    esi,ebx
  42255b:	push   ds
  42255c:	(bad)  
  42255e:	mov    bl,0x73
  422560:	ror    bh,1
  422562:	cmp    edx,ebx
  422564:	maskmovq mm2,(bad)
  422565:	not    DWORD PTR [edx+0x1d30e52b]
  42256b:	arpl   ax,bx
  42256d:	sub    al,0x22
  42256f:	into   
  422570:	mov    esp,0xb7b61583
  422575:	mov    al,0xc1
  422577:	mov    BYTE PTR [ebp+esi*8+0x347084c4],dl
  42257e:	push   ds
  42257f:	pop    edx
  422580:	dec    edi
  422581:	pop    esp
  422582:	cmp    BYTE PTR [esi+0x2fdff2ae],dh
  422588:	inc    esi
  422589:	or     bh,dh
  42258b:	loopne 0x4225b0
  42258d:	push   es
  42258e:	pop    edx
  42258f:	test   eax,0x24e5e51d
  422594:	sub    DWORD PTR [edi+0x252180cc],ebp
  42259a:	pop    ecx
  42259b:	mov    esi,0x9ac72c77
  4225a0:	dec    edx
  4225a1:	inc    esp
  4225a2:	lahf   
  4225a3:	mov    dh,0x1d
  4225a5:	nop
  4225a6:	mov    edi,0x393fd682
  4225ab:	rcl    BYTE PTR [eax],0xf9
  4225ae:	push   ds
  4225af:	mov    bl,0x6
  4225b1:	push   ebx
  4225b2:	adc    DWORD PTR [ebp-0xafb719],edx
  4225b8:	fs loopne 0x42258f
  4225bb:	pop    ebx
  4225bc:	add    edx,DWORD PTR [ebx]
  4225be:	cmp    eax,DWORD PTR [eax+0x6299cf61]
  4225c4:	mov    cl,0x94
  4225c6:	xchg   esp,eax
  4225c7:	mov    esi,0x3327f1b8
  4225cc:	fwait
  4225cd:	pop    ds
  4225ce:	bound  esi,QWORD PTR [esi+0x6a53ae12]
  4225d4:	push   ecx
  4225d5:	loope  0x42262a
  4225d7:	pop    ecx
  4225d8:	icebp  
  4225d9:	outs   dx,BYTE PTR ds:[esi]
  4225da:	xor    eax,0xde06de72
  4225df:	and    esp,DWORD PTR [edx-0x4a]
  4225e2:	sbb    dh,cl
  4225e4:	add    eax,0x70eaae2e
  4225e9:	in     eax,0x9d
  4225eb:	(bad)  
  4225ec:	jns    0x4225c3
  4225ee:	enter  0x7d5e,0x32
  4225f2:	mov    dl,0x9f
  4225f4:	inc    ebx
  4225f5:	sub    BYTE PTR [edx],bl
  4225f7:	mov    ds:0x11880f69,al
  4225fc:	dec    edi
  4225fd:	jnp    0x42260d
  4225ff:	mov    ecx,0x97b9e69a
  422604:	(bad)  
  422605:	out    dx,eax
  422606:	mov    al,0x56
  422608:	push   ebp
  422609:	in     eax,0x8c
  42260b:	fidiv  WORD PTR [ecx+0x33f27544]
  422611:	pop    ss
  422612:	jecxz  0x422621
  422614:	out    dx,al
  422615:	pop    ebp
  422616:	jl     0x4225cc
  422618:	pop    eax
  422619:	mov    ds:0xd6307b12,al
  42261e:	ins    BYTE PTR es:[edi],dx
  42261f:	(bad)  
  422620:	jl     0x42266a
  422622:	jbe    0x4225b3
  422624:	or     al,0xae
  422626:	clc    
  422627:	ja     0x422636
  422629:	push   cs
  42262a:	sub    BYTE PTR [ebp-0x26],cl
  42262d:	push   esi
  42262e:	in     al,dx
  42262f:	mov    eax,0x9e27cfb1
  422634:	cdq    
  422635:	sbb    al,0x7e
  422637:	icebp  
  422638:	and    esi,DWORD PTR [edx-0x77]
  42263b:	test   DWORD PTR [ebx-0x49],esi
  42263e:	fbstp  TBYTE PTR [ecx-0x58]
  422641:	push   esi
  422642:	test   ecx,0x46c20f23
  422648:	inc    ecx
  422649:	pop    esp
  42264a:	aad    0x2a
  42264c:	lods   eax,DWORD PTR ds:[esi]
  42264d:	popf   
  42264e:	and    ebx,ebx
  422650:	push   ss
  422651:	jg     0x422615
  422653:	push   ds
  422654:	sbb    bh,ch
  422656:	or     BYTE PTR [ebp-0x13],bl
  422659:	fwait
  42265a:	jno    0x4225f1
  42265c:	xchg   ebp,eax
  42265d:	jmp    DWORD PTR [edx-0x31af973a]
  422663:	out    0x79,al
  422665:	pop    esp
  422666:	lds    eax,FWORD PTR [edi]
  422668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422669:	out    0x70,al
  42266b:	cmp    BYTE PTR [edx-0x3e],al
  42266e:	out    0x1a,eax
  422670:	sbb    eax,0x20f4be3
  422675:	adc    ah,cl
  422677:	fs mov ecx,0xc22e9742
  42267d:	xor    al,0xe
  42267f:	mov    al,0x30
  422681:	push   edi
  422682:	mov    ah,0x84
  422684:	hlt    
  422685:	mov    ecx,ds
  422687:	mov    ah,0xe8
  422689:	js     0x422647
  42268b:	jge    0x422703
  42268d:	add    ch,al
  42268f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422690:	dec    esi
  422691:	shl    DWORD PTR [edi+0x7a],1
  422694:	test   BYTE PTR [ebx+0x2],ah
  422697:	jl     0x422711
  422699:	jns    0x422682
  42269b:	jb     0x42262b
  42269d:	mov    edi,DWORD PTR [eax+0x6531c07c]
  4226a3:	mov    ch,0x84
  4226a5:	adc    ecx,DWORD PTR [ecx+edx*4+0x3815ab9f]
  4226ac:	and    cl,BYTE PTR [edx+edx*8]
  4226af:	dec    esi
  4226b0:	fist   DWORD PTR [ebp+0x421050f]
  4226b6:	push   0x522a337a
  4226bb:	test   BYTE PTR [si+0x0],bl
  4226bf:	xchg   ebx,eax
  4226c0:	out    0xef,al
  4226c2:	dec    ecx
  4226c3:	test   al,0x82
  4226c5:	scas   al,BYTE PTR es:[edi]
  4226c6:	dec    esi
  4226c7:	int    0xda
  4226c9:	mov    edx,0x31ab6702
  4226ce:	ja     0x422665
  4226d0:	inc    ebp
  4226d1:	cmp    al,0xec
  4226d3:	push   esi
  4226d4:	cld    
  4226d5:	jbe    0x4226b7
  4226d7:	mov    eax,ds:0xa5c7e823
  4226dc:	aaa    
  4226dd:	pop    ecx
  4226de:	inc    ecx
  4226df:	pop    edx
  4226e0:	int3   
  4226e1:	xchg   esi,eax
  4226e2:	xchg   esp,eax
  4226e3:	sbb    DWORD PTR [ebp+eiz*2-0xeceb471],eax
  4226ea:	je     0x422747
  4226ec:	mov    edi,0x2397c62b
  4226f1:	cmp    eax,0x3f74df1e
  4226f6:	aam    0x44
  4226f8:	inc    edx
  4226f9:	int3   
  4226fa:	out    0x8a,al
  4226fc:	mov    dh,0x8a
  4226fe:	nop
  4226ff:	imul   ebp,esp,0x89724127
  422705:	sbb    eax,0x506083bc
  42270a:	inc    eax
  42270b:	xchg   ecx,eax
  42270c:	or     al,0xda
  42270e:	mov    bh,0x8
  422710:	push   0x91df8912
  422715:	push   ds
  422716:	mov    dh,0xe8
  422718:	sar    DWORD PTR [edi+eax*8+0x73b3ec6a],1
  42271f:	xor    al,0xbd
  422721:	fcmovnbe st,st(1)
  422723:	in     al,0xe0
  422725:	add    cl,ch
  422727:	cmp    eax,0x3de35411
  42272c:	lahf   
  42272d:	mov    al,0x6e
  42272f:	and    al,0xab
  422731:	sub    ch,al
  422733:	sub    al,0x8c
  422735:	and    ecx,DWORD PTR [edi+0x1a3d882e]
  42273b:	in     eax,0x3f
  42273d:	div    BYTE PTR [eax]
  42273f:	std    
  422740:	xchg   edx,eax
  422741:	mov    dl,0x3c
  422743:	or     BYTE PTR [edx],cl
  422745:	mov    ebp,0x819b8f3a
  42274a:	rol    DWORD PTR [edx-0x79],cl
  42274d:	pop    edx
  42274e:	arpl   si,sp
  422750:	outs   dx,BYTE PTR ds:[esi]
  422751:	xchg   ch,bh
  422753:	dec    ecx
  422754:	or     esi,ebp
  422756:	std    
  422757:	and    DWORD PTR [esi-0xf4bc1e3],ecx
  42275d:	push   esp
  42275e:	sti    
  42275f:	mov    ds,WORD PTR [ebx+0x37]
  422762:	pop    es
  422763:	(bad)  
  422764:	sub    ecx,DWORD PTR [ecx+0x6b38bde3]
  42276a:	mov    cl,BYTE PTR [edi+0x3f]
  42276d:	mov    ah,0x4a
  42276f:	fsub   QWORD PTR [eax-0x32]
  422772:	jp     0x422761
  422774:	sub    DWORD PTR [edi+ebp*2],edi
  422777:	ret    
  422778:	fld    TBYTE PTR [eax]
  42277a:	cmp    BYTE PTR [ebx+0x23a85c23],dl
  422780:	and    eax,0xc2ebdec0
  422785:	xchg   ebp,eax
  422786:	mov    dl,BYTE PTR [ecx+0x719306f1]
  42278c:	pusha  
  42278d:	ret    
  42278e:	or     BYTE PTR [esi+0x69],ch
  422791:	aad    0x66
  422793:	int    0xd8
  422795:	popf   
  422796:	retf   0x1a35
  422799:	xchg   ebp,eax
  42279a:	jge    0x4227c2
  42279c:	jo     0x422754
  42279e:	stos   DWORD PTR es:[edi],eax
  42279f:	sti    
  4227a0:	repz push eax
  4227a2:	pop    ss
  4227a3:	xchg   ecx,eax
  4227a4:	fcomi  st,st(5)
  4227a6:	pusha  
  4227a7:	mov    esp,0x8f63db
  4227ac:	pop    ebx
  4227ad:	int    0x99
  4227af:	push   ss
  4227b0:	push   ebp
  4227b1:	mov    BYTE PTR [edx-0x49],dh
  4227b4:	pusha  
  4227b5:	inc    edx
  4227b6:	out    0x9f,al
  4227b8:	fistp  DWORD PTR [ebx]
  4227ba:	jae    0x422795
  4227bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227bd:	sub    bh,BYTE PTR [edi]
  4227bf:	icebp  
  4227c0:	test   edx,esi
  4227c2:	pop    esi
  4227c3:	lods   al,BYTE PTR ds:[esi]
  4227c4:	out    0x4e,al
  4227c6:	lods   eax,DWORD PTR ds:[esi]
  4227c7:	jae    0x42275d
  4227c9:	int    0x31
  4227cb:	xor    bh,BYTE PTR ds:0xac421f15
  4227d1:	lea    ecx,[eax-0x284036af]
  4227d7:	xchg   edi,eax
  4227d8:	jg     0x422851
  4227da:	dec    esp
  4227db:	jne    0x422858
  4227dd:	inc    edi
  4227de:	loopne 0x42285c
  4227e0:	inc    ecx
  4227e1:	fadd   QWORD PTR [esi-0x4e0a3cd2]
  4227e7:	test   eax,0x37392247
  4227ec:	xor    al,ah
  4227ee:	out    0x9e,eax
  4227f0:	out    0x8e,eax
  4227f2:	test   eax,0xa837cca7
  4227f7:	outs   dx,BYTE PTR ds:[esi]
  4227f8:	fimul  WORD PTR [ebx]
  4227fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227fb:	in     al,dx
  4227fc:	lods   eax,DWORD PTR ds:[esi]
  4227fd:	loop   0x422781
  4227ff:	fwait
  422800:	sub    BYTE PTR [esi+0x199b64ca],ch
  422806:	outs   dx,BYTE PTR ds:[esi]
  422807:	mov    esi,DWORD PTR [edi-0x3]
  42280a:	and    edi,0x79e9cd30
  422810:	mov    ds:0x7a87544d,al
  422815:	leave  
  422816:	(bad)  
  422817:	pop    esi
  422818:	xchg   edx,eax
  422819:	jp     0x4227fa
  42281b:	mov    ds:0xe7673373,al
  422820:	pop    ecx
  422821:	(bad)  
  422823:	adc    ecx,DWORD PTR ds:0x748d33ec
  422829:	out    dx,al
  42282a:	xchg   ecx,eax
  42282b:	fsubp  st(3),st
  42282d:	cs push ebx
  42282f:	cmp    ecx,DWORD PTR [ecx+0x6c]
  422832:	cs mov dl,cl
  422835:	xchg   edi,eax
  422836:	add    esp,DWORD PTR [ebp-0x33]
  422839:	inc    edi
  42283a:	or     ah,BYTE PTR [edx]
  42283c:	mov    edi,0x5f69f9b6
  422841:	push   ebx
  422842:	add    ch,BYTE PTR [edx+0xb11e722]
  422848:	(bad)  
  422849:	sti    
  42284a:	iret   
  42284b:	adc    bl,BYTE PTR [ebx-0x1589bd9e]
  422851:	call   0xfcdd6577
  422856:	jae    0x42289b
  422858:	ret    0xb072
  42285b:	xor    eax,0xf21abb94
  422860:	push   ss
  422861:	nop
  422862:	sar    DWORD PTR [edx+0x72],cl
  422865:	dec    edx
  422866:	call   0x3225:0xb022e135
  42286d:	sbb    eax,0xb17df99e
  422872:	push   es
  422873:	pop    esp
  422874:	mov    ds:0x5f180585,al
  422879:	pop    ecx
  42287a:	mov    dh,0x18
  42287c:	mov    BYTE PTR ds:0x50728e98,0x79
  422883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422884:	pop    edx
  422885:	aas    
  422886:	(bad)  
  422887:	inc    esi
  422888:	sti    
  422889:	in     al,0xa6
  42288b:	jnp    0x4228c6
  42288d:	mov    al,ds:0xba352af1
  422892:	arpl   WORD PTR [ebp+0x745248b5],si
  422898:	fdiv   QWORD PTR [ebp+0x73c0c046]
  42289e:	ins    BYTE PTR es:[edi],dx
  42289f:	xor    bl,bh
  4228a1:	pop    edx
  4228a2:	(bad)  
  4228a4:	test   ah,ah
  4228a6:	push   ecx
  4228a7:	jno    0x422920
  4228a9:	push   ebx
  4228aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ab:	xchg   esi,eax
  4228ac:	or     eax,0xa3a1d7f7
  4228b1:	mov    eax,DWORD PTR [eax-0x2c8554a0]
  4228b7:	mov    esi,0x7ac65980
  4228bc:	xchg   ecx,eax
  4228bd:	in     al,dx
  4228be:	mov    ds:0xc8493634,eax
  4228c3:	rcr    DWORD PTR [ebp-0x6bf00e79],cl
  4228c9:	stos   BYTE PTR es:[edi],al
  4228ca:	icebp  
  4228cb:	add    bh,BYTE PTR [eax+0x3c22d6b7]
  4228d1:	popa   
  4228d2:	push   ds
  4228d3:	add    BYTE PTR gs:[edx-0x5f],ch
  4228d7:	pushf  
  4228d8:	fdivr  QWORD PTR [edx+esi*1+0x2]
  4228dc:	inc    eax
  4228dd:	pop    esi
  4228de:	push   ds
  4228df:	test   bl,ah
  4228e1:	sub    DWORD PTR [ebx+0x46],ebp
  4228e4:	jecxz  0x422902
  4228e6:	cmp    al,0xfc
  4228e8:	into   
  4228e9:	lahf   
  4228ea:	mov    WORD PTR ds:0x9fc6d38,ss
  4228f0:	pop    ebx
  4228f1:	jmp    0xe08e:0x42f495f3
  4228f8:	push   es
  4228f9:	addr16 ja 0x422974
  4228fc:	inc    esp
  4228fd:	ror    BYTE PTR [eax-0x2b],0x83
  422901:	sub    BYTE PTR [ecx],dl
  422903:	jge    0x4228b6
  422905:	cmp    edx,edx
  422907:	std    
  422908:	das    
  422909:	gs xchg ebx,eax
  42290b:	enter  0xec11,0xdc
  42290f:	loope  0x4228bb
  422911:	push   0x6a6e02a4
  422916:	sbb    eax,0xfd944613
  42291b:	lahf   
  42291c:	imul   esp,DWORD PTR [ebx+0x14],0xb2d11a2
  422923:	dec    edx
  422924:	test   BYTE PTR [edx],bh
  422926:	jmp    0x321a:0x8885f29
  42292d:	add    ebp,esi
  42292f:	pop    ebp
  422930:	fs popa 
  422932:	jns    0x422982
  422934:	jb     0x422982
  422936:	adc    eax,DWORD PTR ds:0xd0201117
  42293c:	dec    ecx
  42293d:	cmp    DWORD PTR [ecx+0x5c],ebx
  422940:	imul   ebx,DWORD PTR gs:[ebx+ecx*4+0x44468c05],0x45
  422949:	cs jg  0x422944
  42294c:	adc    eax,0xdd873aa1
  422951:	(bad)  
  422952:	or     cl,bh
  422954:	xchg   ebx,eax
  422955:	inc    eax
  422956:	dec    esi
  422957:	hlt    
  422958:	imul   ecx,esi,0xc483c033
  42295e:	adc    dl,al
  422960:	adc    BYTE PTR [eax],al
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
