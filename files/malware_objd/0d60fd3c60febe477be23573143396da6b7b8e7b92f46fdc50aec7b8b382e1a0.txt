
0d60fd3c60febe477be23573143396da6b7b8e7b92f46fdc50aec7b8b382e1a0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	and    DWORD PTR [eax],esp
  401170:	fstp   QWORD PTR [ebp-0x59]
  401173:	push   0xffffff85
  401175:	adc    al,BYTE PTR [eax]
  401177:	loope  0x4011bd
  401179:	or     esi,DWORD PTR ds:0x743084b4
  40117f:	jmp    0x908d06ba
  401184:	and    DWORD PTR [edi-0x2b68c8c1],edx
  40118a:	mov    WORD PTR [edx+0x40],gs
  40118d:	xor    DWORD PTR [ebp+ebp*8+0x8],ebp
  401191:	push   esp
  401192:	xor    al,BYTE PTR [esi+0x37]
  401195:	cmp    al,BYTE PTR [esi]
  401197:	cld    
  401198:	and    edx,DWORD PTR [ebp+0x2e20deae]
  40119e:	scas   al,BYTE PTR es:[edi]
  40119f:	scas   eax,DWORD PTR es:[edi]
  4011a0:	lods   al,BYTE PTR ds:[esi]
  4011a1:	push   ds
  4011a2:	mov    eax,ds:0x4e0d7131
  4011a7:	stos   BYTE PTR es:[edi],al
  4011a8:	adc    ebx,DWORD PTR [edi-0x6f]
  4011ab:	xor    al,0x4d
  4011ad:	or     bh,BYTE PTR [ecx+0x3c]
  4011b0:	outs   dx,DWORD PTR ds:[esi]
  4011b1:	in     eax,0x5a
  4011b3:	aad    0xf6
  4011b5:	inc    eax
  4011b6:	inc    esi
  4011b7:	dec    ebp
  4011b8:	and    ebx,ebp
  4011ba:	addr16 push edx
  4011bc:	jns    0x4011cc
  4011be:	add    eax,0x5732984b
  4011c3:	outs   dx,BYTE PTR ds:[esi]
  4011c4:	dec    edx
  4011c5:	push   ss
  4011c6:	(bad)  
  4011c7:	add    DWORD PTR [edi],eax
  4011c9:	jb     0x4011bd
  4011cb:	scas   eax,DWORD PTR es:[edi]
  4011cc:	cli    
  4011cd:	inc    ecx
  4011ce:	(bad)  
  4011cf:	aam    0xf2
  4011d1:	inc    edi
  4011d2:	inc    bh
  4011d4:	xlat   BYTE PTR ds:[ebx]
  4011d5:	xor    al,0x61
  4011d7:	(bad)  
  4011d8:	adc    ecx,DWORD PTR [esi-0x1d]
  4011db:	(bad)  
  4011dc:	push   edi
  4011dd:	and    eax,0x1eb0d5d4
  4011e2:	imul   eax,DWORD PTR [ecx+0x1eec504c],0xffffff81
  4011e9:	in     al,0x55
  4011eb:	adc    DWORD PTR [edx+ebx*8],edi
  4011ee:	jmp    0x7f32:0x3580c5b4
  4011f5:	dec    esi
  4011f6:	sub    bh,ah
  4011f8:	test   dh,al
  4011fa:	enter  0x845e,0x21
  4011fe:	popw   es
  401200:	and    ah,BYTE PTR [edi-0x48]
  401203:	popa   
  401204:	icebp  
  401205:	sbb    al,ch
  401207:	or     DWORD PTR [esi],0xbed4a622
  40120d:	mov    cl,0x21
  40120f:	xor    bh,dl
  401211:	outs   dx,DWORD PTR ds:[esi]
  401212:	fcomp  QWORD PTR [edx-0x1806c6dd]
  401218:	out    0x85,al
  40121a:	dec    ecx
  40121b:	pop    ebp
  40121c:	pop    ecx
  40121d:	xor    esp,DWORD PTR [edx-0x4610589f]
  401223:	test   cl,0xe8
  401226:	inc    ebx
  401227:	test   eax,0xe03c64c2
  40122c:	rol    bl,0x6b
  40122f:	cld    
  401230:	add    BYTE PTR [edi-0x1a692319],ah
  401236:	dec    eax
  401237:	out    0x78,eax
  401239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40123a:	pop    edx
  40123b:	(bad)  
  40123c:	bound  esp,QWORD PTR [eax]
  40123e:	(bad)  
  40123f:	mov    edi,0x423fdeba
  401244:	imul   ebx,DWORD PTR ds:0xd100a592,0x11
  40124b:	add    eax,0xe5e943e3
  401250:	dec    edi
  401251:	or     edx,DWORD PTR [esi+edi*4+0x696e0675]
  401258:	push   ebp
  401259:	loope  0x4012a0
  40125b:	out    0xc0,al
  40125d:	push   0x963c7d95
  401262:	cmp    al,0x81
  401264:	cs out dx,eax
  401266:	mov    DWORD PTR [ebp+0x2e],esi
  401269:	pop    edx
  40126a:	stc    
  40126b:	hlt    
  40126c:	outs   dx,BYTE PTR ds:[esi]
  40126d:	jae    0x4012ec
  40126f:	pop    edx
  401270:	push   0xfba4ae8
  401275:	test   al,0x51
  401277:	out    0xa5,al
  401279:	add    esi,ebx
  40127b:	loop   0x401284
  40127d:	sub    BYTE PTR [edi],al
  40127f:	mov    ch,BYTE PTR [eax]
  401281:	mov    eax,ds:0x9dd18443
  401286:	ret    
  401287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401288:	jns    0x401251
  40128a:	mov    bl,0x4b
  40128c:	or     bh,BYTE PTR ds:0x6bada68a
  401292:	es xor al,0x18
  401295:	sbb    al,0x9a
  401297:	lea    ebp,ds:0xb14818f6
  40129d:	xchg   esp,eax
  40129e:	cdq    
  40129f:	mov    DWORD PTR [eax+ebp*4],eax
  4012a2:	mov    esp,0xa8912ae9
  4012a7:	stos   DWORD PTR es:[edi],eax
  4012a8:	fidivr DWORD PTR cs:[edx-0x59]
  4012ac:	dec    BYTE PTR [edi-0x23]
  4012af:	pop    ecx
  4012b0:	lea    ecx,[edx-0x6f]
  4012b3:	in     eax,0xcf
  4012b5:	jg     0x40131c
  4012b7:	(bad)  
  4012b8:	jge    0x4012fd
  4012ba:	push   esp
  4012bb:	push   ebx
  4012bc:	xor    WORD PTR [ebp+ebx*2-0x55],cx
  4012c1:	sbb    BYTE PTR [edi+0x69a3d59b],al
  4012c7:	or     bl,dl
  4012c9:	mov    ah,0x51
  4012cb:	daa    
  4012cc:	inc    esi
  4012cd:	and    dh,cl
  4012cf:	cdq    
  4012d0:	in     al,dx
  4012d1:	into   
  4012d2:	inc    edx
  4012d3:	out    dx,eax
  4012d4:	jo     0x401320
  4012d6:	test   DWORD PTR [edx+0x4fc9b531],esi
  4012dc:	clc    
  4012dd:	xchg   ebp,eax
  4012de:	aam    0x4c
  4012e0:	mov    esi,edi
  4012e2:	es dec edi
  4012e4:	fidivr DWORD PTR [eax]
  4012e6:	inc    edx
  4012e7:	js     0x401309
  4012e9:	xchg   ebx,eax
  4012ea:	mov    DWORD PTR [ebx-0x9],ecx
  4012ed:	adc    al,bl
  4012ef:	xchg   BYTE PTR [ecx-0x2e],bh
  4012f2:	pop    ds
  4012f3:	dec    ebp
  4012f4:	mov    bh,0x55
  4012f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012f7:	jmp    0x40127d
  4012f9:	out    dx,eax
  4012fa:	mov    ebp,0x98b1c5e8
  4012ff:	fcom   DWORD PTR [ebx]
  401301:	xchg   ah,bl
  401303:	pop    ebx
  401304:	push   edi
  401305:	pop    esi
  401306:	loopne 0x4012d5
  401308:	loop   0x40134d
  40130a:	push   ss
  40130b:	sub    DWORD PTR [edx-0x28],ebx
  40130e:	fcomp  st(1)
  401310:	loope  0x401357
  401312:	xor    ah,BYTE PTR [eax+0x47]
  401315:	out    dx,al
  401316:	cmc    
  401317:	push   es
  401318:	pop    ebp
  401319:	pop    esi
  40131a:	or     dh,dh
  40131c:	cmp    BYTE PTR [edi],bl
  40131e:	in     eax,dx
  40131f:	js     0x401372
  401321:	adc    DWORD PTR [ebx+0x5968c723],eax
  401327:	push   ss
  401328:	cld    
  401329:	cmp    DWORD PTR [edx+ebp*1],edi
  40132c:	mov    bh,0xe3
  40132e:	lods   al,BYTE PTR ds:[esi]
  40132f:	in     eax,dx
  401330:	xchg   ebp,eax
  401331:	test   BYTE PTR [ecx],ah
  401333:	in     al,dx
  401334:	retf   
  401335:	pushf  
  401336:	push   0xfad4c324
  40133b:	xchg   esi,eax
  40133c:	mov    ss,WORD PTR [edi]
  40133e:	lds    edx,FWORD PTR [ecx+edx*2]
  401341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401342:	ror    BYTE PTR [esi],1
  401344:	cmp    dl,BYTE PTR [ecx]
  401346:	push   edx
  401347:	inc    ebx
  401348:	shr    eax,0xe6
  40134b:	aam    0x10
  40134d:	fistp  WORD PTR [edi+eiz*8-0x40]
  401351:	mov    ch,0x3d
  401353:	pop    ebp
  401354:	jnp    0x40136a
  401356:	push   ds
  401357:	(bad)  
  401359:	cmp    eax,0x4edb4ca3
  40135e:	xor    DWORD PTR [ebp+0x11],edx
  401361:	in     al,0x82
  401363:	mov    ebp,0x37281a0b
  401368:	adc    bl,BYTE PTR ds:0xd25302c8
  40136e:	not    BYTE PTR [esi]
  401370:	jbe    0x401380
  401372:	nop
  401373:	jmp    FWORD PTR [edi+0x44e63d47]
  401379:	call   0xfceb5438
  40137e:	or     ebx,DWORD PTR [esi+eax*4]
  401381:	pop    esi
  401382:	js     0x401347
  401384:	xchg   esp,eax
  401385:	sub    eax,0xa40d0305
  40138a:	mov    ebp,0x5c49659b
  40138f:	jnp    0x4013aa
  401391:	mov    eax,ds:0x4f884b0c
  401396:	lods   al,BYTE PTR ds:[esi]
  401397:	xor    BYTE PTR [edx-0x9],bl
  40139a:	jae    0x40137b
  40139c:	mov    ds,eax
  40139e:	add    BYTE PTR [eax+0x5e],bh
  4013a1:	xor    BYTE PTR [edi+0xe],bh
  4013a4:	pop    es
  4013a5:	shl    DWORD PTR [edx+0x615db360],cl
  4013ab:	lods   al,BYTE PTR ds:[esi]
  4013ac:	jl     0x40135a
  4013ae:	pminsw mm6,QWORD PTR [ecx-0x41d20cad]
  4013b5:	repz ror BYTE PTR [ebx],0x63
  4013b9:	add    dh,BYTE PTR [edx]
  4013bb:	and    eax,0x249f8e68
  4013c0:	out    0xd3,al
  4013c2:	push   edi
  4013c3:	cmp    al,0xee
  4013c5:	mov    WORD PTR [ecx],ss
  4013c7:	out    dx,al
  4013c8:	dec    eax
  4013c9:	add    BYTE PTR [esi-0x5d],0x1a
  4013cd:	ds (bad) 
  4013cf:	lahf   
  4013d0:	fimul  WORD PTR [esi+0x5bbf9de9]
  4013d6:	mov    BYTE PTR [esi-0x31],ah
  4013d9:	sbb    bh,bh
  4013db:	or     ah,BYTE PTR [eax+0x52]
  4013de:	push   ebp
  4013df:	push   edx
  4013e0:	sub    ebx,ecx
  4013e2:	xor    DWORD PTR [edi-0x19cb5939],ecx
  4013e8:	adc    eax,0x12d21a36
  4013ed:	and    eax,0x2825fbcd
  4013f2:	sbb    al,0xb0
  4013f4:	loop   0x4013ec
  4013f6:	push   ss
  4013f7:	add    esp,ebx
  4013f9:	dec    ebp
  4013fa:	iret   
  4013fb:	or     edx,DWORD PTR [eax-0x36]
  4013fe:	jmp    0x2e78:0xa404537f
  401405:	push   ss
  401406:	xor    eax,0x1b31bfd8
  40140b:	sub    ebx,eax
  40140d:	sbb    ebp,eax
  40140f:	xor    eax,0xc31d755
  401414:	daa    
  401415:	push   edi
  401416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401417:	ja     0x4013fc
  401419:	jmp    0x923b:0x26b468cc
  401420:	mov    ecx,0x6c203f06
  401425:	fist   DWORD PTR [edx+0x15821073]
  40142b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40142c:	mov    dh,0x4c
  40142e:	shr    DWORD PTR [edx],cl
  401430:	rcr    BYTE PTR ds:0xf0bd0bd9,0x4e
  401437:	add    eax,0x39158256
  40143c:	jp     0x40144b
  40143e:	xor    al,0x86
  401440:	cmp    al,0xed
  401442:	fs int 0x80
  401445:	push   esi
  401446:	neg    BYTE PTR [edx+0x9]
  401449:	sub    ecx,ebp
  40144b:	cmp    bh,BYTE PTR [eax-0x48]
  40144e:	mov    ds,WORD PTR [ebx]
  401450:	xor    edi,DWORD PTR [edi]
  401452:	shr    BYTE PTR [ebx],0xb6
  401455:	mov    ecx,0x7eb2ada0
  40145a:	test   eax,0x90dcccfb
  40145f:	push   edi
  401460:	mov    cl,0xca
  401462:	adc    ebx,DWORD PTR [edi+0x2ac7cdd4]
  401468:	xor    al,dh
  40146a:	lea    ebx,[esi]
  40146c:	ret    0xccb
  40146f:	aad    0x60
  401471:	lea    edx,[edi]
  401473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401474:	imul   esp
  401476:	imul   esi
  401478:	in     eax,dx
  401479:	add    DWORD PTR [eax-0x8],esp
  40147c:	lahf   
  40147d:	push   ds
  40147e:	ficom  DWORD PTR [esi]
  401480:	xchg   esi,eax
  401481:	adc    al,0x55
  401483:	inc    edx
  401484:	retf   
  401485:	pop    ss
  401486:	sbb    eax,0x25336fe9
  40148b:	ja     0x40145e
  40148d:	fstp   DWORD PTR [eax+ebx*1]
  401490:	mov    DWORD PTR [ebx],edi
  401492:	sub    ecx,DWORD PTR [ebx+0x2e0c8d6b]
  401498:	ins    BYTE PTR es:[edi],dx
  401499:	je     0x4014d1
  40149b:	shl    DWORD PTR [edi+0x6b],cl
  40149e:	push   eax
  40149f:	shl    DWORD PTR [edi+0xb],0xc
  4014a3:	sub    cl,dh
  4014a5:	rcl    BYTE PTR [ecx+0x3db66f6b],cl
  4014ab:	inc    eax
  4014ac:	push   edi
  4014ad:	jb     0x40150e
  4014af:	xor    DWORD PTR [edx+0x66997f99],eax
  4014b5:	fwait
  4014b6:	mov    ds:0x9f3477f3,eax
  4014bb:	stos   BYTE PTR es:[edi],al
  4014bc:	(bad)  
  4014bd:	ds rcl esi,cl
  4014c0:	inc    eax
  4014c1:	in     al,dx
  4014c2:	xchg   edi,eax
  4014c3:	rol    DWORD PTR [eax],0x60
  4014c6:	push   ebx
  4014c7:	stos   BYTE PTR es:[edi],al
  4014c8:	dec    esi
  4014c9:	or     al,0xf6
  4014cb:	push   0x5
  4014cd:	push   esp
  4014ce:	or     edx,ebp
  4014d0:	and    DWORD PTR [eax+0x4ac17a0e],esi
  4014d6:	arpl   WORD PTR [edx-0x49],dx
  4014d9:	sbb    DWORD PTR [esi-0x44],edx
  4014dc:	int    0xb2
  4014de:	mov    eax,ds:0xe3f954ce
  4014e3:	in     eax,dx
  4014e4:	jne    0x4014f3
  4014e6:	jmp    0x637c44f7
  4014eb:	mov    BYTE PTR [edx-0x2480203a],cl
  4014f1:	iret   
  4014f2:	mov    al,0xe4
  4014f4:	or     al,0xc3
  4014f6:	out    0x77,al
  4014f8:	inc    ebp
  4014f9:	mov    ebp,0x97796c14
  4014fe:	lea    eax,[edi-0x47]
  401501:	sub    al,0xe6
  401503:	mov    BYTE PTR [edx+eiz*2+0x4f],cl
  401507:	ret    0xc4a
  40150a:	daa    
  40150b:	and    bh,ah
  40150d:	mov    esp,0x5741ecc5
  401512:	(bad)  
  401513:	mov    ah,0x9f
  401515:	ds call 0x9b24:0xc3c41a20
  40151d:	data16 xchg BYTE PTR [ecx+ebp*4-0x461c8df0],bl
  401525:	pushf  
  401526:	out    dx,eax
  401527:	clc    
  401528:	cld    
  401529:	out    dx,al
  40152a:	test   al,cl
  40152c:	ds dec edx
  40152e:	aad    0x11
  401530:	sbb    bh,ch
  401532:	mov    eax,0x17993022
  401537:	pusha  
  401538:	adc    ebp,DWORD PTR [ebp+0x7f]
  40153b:	cmc    
  40153c:	or     edi,edx
  40153e:	xchg   ecx,eax
  40153f:	enter  0x1d42,0x96
  401543:	pop    ebp
  401544:	jle    0x401504
  401546:	test   al,0xf7
  401548:	in     eax,dx
  401549:	and    ebx,DWORD PTR [edx]
  40154b:	and    ebp,DWORD PTR ds:0x6d9449a0
  401551:	lods   al,BYTE PTR ds:[esi]
  401552:	jl     0x4014db
  401554:	adc    eax,0x87b18361
  401559:	aam    0x3d
  40155b:	mov    ecx,0xe5c97bf2
  401560:	sub    eax,0x3ab7d53
  401565:	dec    edx
  401566:	ficom  WORD PTR [ecx-0x3a911968]
  40156c:	cs and ebp,esp
  40156f:	sti    
  401570:	inc    esp
  401571:	and    DWORD PTR [eax+0x4c],ecx
  401574:	jmp    0x258c:0xa9c32be5
  40157b:	pop    edx
  40157c:	pop    ds
  40157d:	cwde   
  40157e:	sub    cl,dl
  401580:	scas   al,BYTE PTR es:[edi]
  401581:	fs dec eax
  401583:	lods   eax,DWORD PTR ds:[esi]
  401584:	push   ss
  401585:	or     edi,ebx
  401587:	sub    DWORD PTR [edi+eiz*1],eax
  40158a:	dec    edi
  40158b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40158c:	sbb    al,0x69
  40158e:	mov    cl,0xb2
  401590:	call   0x13ae:0xf04d00f3
  401597:	jg     0x40153d
  401599:	pop    es
  40159a:	sub    ecx,0x6aa2177a
  4015a0:	mov    ds:0x7f349534,al
  4015a5:	data16 jle 0x40153e
  4015a8:	inc    ebp
  4015a9:	shr    DWORD PTR [esi],cl
  4015ab:	xchg   edi,eax
  4015ac:	jo     0x4015d8
  4015ae:	xor    DWORD PTR [ecx],0xffffffbb
  4015b1:	sbb    ebx,DWORD PTR [eax+0x4cae1dfb]
  4015b7:	ins    BYTE PTR es:[edi],dx
  4015b8:	cmp    edi,0x6c
  4015bb:	fdivr  QWORD PTR [edi]
  4015bd:	jbe    0x401561
  4015bf:	mov    dl,0xa6
  4015c1:	imul   esp,DWORD PTR [edi-0x4e],0x13
  4015c5:	rol    DWORD PTR [esi-0x722f2097],1
  4015cb:	cmp    eax,0x621050d0
  4015d0:	or     dl,cl
  4015d2:	fld    DWORD PTR [edx-0x7be06c7]
  4015d8:	pushf  
  4015d9:	push   es
  4015da:	lods   al,BYTE PTR ds:[esi]
  4015db:	jmp    0x401632
  4015dd:	inc    esp
  4015de:	call   0x2cce8dd5
  4015e3:	out    0xc9,al
  4015e5:	sbb    ah,BYTE PTR [eax]
  4015e7:	lods   eax,DWORD PTR ds:[esi]
  4015e8:	popf   
  4015e9:	jne    0x401669
  4015eb:	inc    ecx
  4015ec:	jmp    0x7de1d997
  4015f1:	pusha  
  4015f2:	or     esp,edx
  4015f4:	jne    0x4015ab
  4015f6:	aas    
  4015f7:	xchg   DWORD PTR [ecx-0x33e8b0fe],ecx
  4015fd:	ficomp DWORD PTR [edx-0xa]
  401600:	push   edx
  401601:	pushw  0xc82b
  401605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401606:	popf   
  401607:	addr16 test al,0xc6
  40160a:	cli    
  40160b:	js     0x40164a
  40160d:	dec    eax
  40160e:	mov    ds:0x77d10a6a,al
  401613:	inc    esi
  401614:	sbb    esi,DWORD PTR [edx-0x300c0f1f]
  40161a:	inc    edx
  40161b:	mov    bh,0xc
  40161d:	aad    0x22
  40161f:	pop    ebx
  401620:	and    DWORD PTR [ebx+0x64],edx
  401623:	xor    al,0xd
  401625:	and    ebp,ecx
  401627:	rol    BYTE PTR [esi-0x26],1
  40162a:	cmp    ebx,ecx
  40162c:	or     BYTE PTR [ecx+0x73],al
  40162f:	or     DWORD PTR gs:[ebx],esi
  401632:	cmc    
  401633:	enter  0xe9fa,0xdd
  401637:	or     bh,BYTE PTR [esi-0x7c]
  40163a:	inc    esp
  40163b:	fs fmulp st(6),st
  40163e:	and    DWORD PTR [ebx],edx
  401640:	fadd   DWORD PTR [edi-0x49deabac]
  401646:	loopne 0x401688
  401648:	fwait
  401649:	push   es
  40164a:	neg    DWORD PTR [ebx-0x13993258]
  401650:	push   0x7c
  401652:	jl     0x4016cc
  401654:	or     DWORD PTR ds:0xb8e7a0aa,0x1620ce8a
  40165e:	jmp    0x44e48664
  401663:	jb     0x401633
  401665:	lock sub BYTE PTR [edi+0x47519e02],al
  40166c:	xor    BYTE PTR [esi],0xa8
  40166f:	ret    0x2c85
  401672:	pop    ss
  401673:	and    al,0xa
  401675:	mov    esi,ebp
  401677:	jbe    0x40168c
  401679:	stos   BYTE PTR es:[edi],al
  40167a:	push   ds
  40167b:	loopne 0x401654
  40167d:	pushf  
  40167e:	inc    edx
  40167f:	sbb    esp,esi
  401681:	jp     0x4016f1
  401683:	or     BYTE PTR [ecx+0x5a],ch
  401686:	imul   edx,eax,0xffffff87
  401689:	mov    ebp,0x5b8370e5
  40168e:	icebp  
  40168f:	adc    BYTE PTR [edx],al
  401691:	or     BYTE PTR [eax+edx*8-0x4f],bh
  401695:	shl    BYTE PTR [ebx-0x1424f5f4],1
  40169b:	mov    ebx,0x4400b4b5
  4016a0:	adc    al,0x0
  4016a2:	inc    esi
  4016a3:	(bad)  
  4016a4:	int    0x88
  4016a6:	mov    esi,0x828183d2
  4016ab:	loope  0x4016e9
  4016ad:	gs lock xchg ebp,esp
  4016b1:	or     BYTE PTR [esi+0x10358b42],bh
  4016b7:	or     BYTE PTR [esi-0x56],bh
  4016ba:	inc    ebp
  4016bb:	jno    0x4016bd
  4016bd:	in     eax,dx
  4016be:	(bad)  
  4016bf:	out    dx,eax
  4016c0:	and    al,0xd8
  4016c2:	pushf  
  4016c3:	call   0xaece0f57
  4016c8:	shl    cl,cl
  4016ca:	(bad)
  4016ce:	mov    BYTE PTR [edi],0x8a
  4016d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016d2:	and    DWORD PTR [ebx+edx*2+0x20dcadf7],ebx
  4016d9:	sti    
  4016da:	mov    BYTE PTR [ebx-0x336208b2],0x6
  4016e1:	iret   
  4016e2:	sub    ebp,esp
  4016e4:	cmp    eax,0x18cc3a63
  4016e9:	or     al,0x7b
  4016eb:	cmp    al,0xe7
  4016ed:	mul    ah
  4016ef:	mov    esp,es
  4016f1:	pop    ds
  4016f2:	out    0x6d,al
  4016f4:	mov    WORD PTR [eax-0x6e],es
  4016f7:	mov    ebp,0x17fc4dea
  4016fc:	sti    
  4016fd:	add    al,0x83
  4016ff:	retf   
  401700:	fwait
  401701:	lahf   
  401702:	mov    eax,0x5f307249
  401707:	les    edi,FWORD PTR [esi+0x3a]
  40170a:	and    DWORD PTR [ebx+0xf],0xffffff91
  40170e:	dec    ebx
  40170f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401710:	sub    al,0xff
  401712:	push   edi
  401713:	(bad)  
  401714:	xchg   ebp,eax
  401715:	jge    0x401703
  401717:	pop    es
  401718:	cmp    WORD PTR [ecx-0x12],0x63
  40171d:	cmp    BYTE PTR [eax+0x35fc5c63],ch
  401723:	and    BYTE PTR [eax-0x3a],dl
  401726:	inc    ebp
  401727:	cmp    edi,esi
  401729:	ins    BYTE PTR es:[edi],dx
  40172a:	mov    DWORD PTR [edi+eax*2+0x6],ebp
  40172e:	repz adc DWORD PTR [ebp-0x44],0xdd8ec7d8
  401736:	loopne 0x40172a
  401738:	arpl   cx,dx
  40173a:	push   esi
  40173b:	add    esp,DWORD PTR [edi+0x41d7bc28]
  401741:	dec    edi
  401742:	(bad)  
  401744:	add    dl,BYTE PTR [ecx]
  401746:	call   0x2008:0x67f2947e
  40174d:	lock push ss
  40174f:	inc    eax
  401750:	popa   
  401751:	pop    edx
  401752:	add    bl,BYTE PTR [edx]
  401754:	mov    bl,0xbb
  401756:	sub    bl,al
  401758:	fdiv   QWORD PTR [edx+0x1e]
  40175b:	sbb    ebx,ebp
  40175d:	pushf  
  40175e:	fcom   DWORD PTR [eax]
  401760:	mov    WORD PTR [edi-0x45e77fbc],ss
  401766:	and    ebx,DWORD PTR [ebx-0x26]
  401769:	or     DWORD PTR [ecx+0x6fe52ea7],edx
  40176f:	xchg   ebp,eax
  401770:	(bad)  
  401772:	jnp    0x40175f
  401774:	test   BYTE PTR [ebp-0x6d],0xa0
  401778:	outs   dx,DWORD PTR ds:[esi]
  401779:	shl    dl,0x23
  40177c:	mov    BYTE PTR [ebx-0x41f9b44a],0x6d
  401783:	je     0x4017e8
  401785:	cdq    
  401786:	outs   dx,DWORD PTR ds:[esi]
  401787:	(bad)  
  401789:	pusha  
  40178a:	je     0x40173e
  40178c:	inc    ecx
  40178d:	jecxz  0x401786
  40178f:	sub    DWORD PTR [edi-0x31dff2ea],esp
  401795:	sub    al,0x32
  401797:	push   eax
  401798:	pop    edi
  401799:	or     dl,bh
  40179b:	in     al,0xb2
  40179d:	outs   dx,BYTE PTR ds:[esi]
  40179e:	test   al,0xbe
  4017a0:	and    edx,DWORD PTR [edi-0x715249e4]
  4017a6:	adc    al,0xf1
  4017a8:	mov    al,ds:0x37346c58
  4017ad:	int    0xa6
  4017af:	cmp    BYTE PTR ss:0x2d466878,dl
  4017b6:	js     0x401778
  4017b8:	loopne 0x401750
  4017ba:	ja     0x40181b
  4017bc:	fadd   QWORD PTR [edi+0x76]
  4017bf:	out    0x1e,eax
  4017c1:	xchg   esp,eax
  4017c2:	sbb    cl,BYTE PTR [edi+ebx*1-0x27756ad8]
  4017c9:	mov    edx,0x319516f0
  4017ce:	into   
  4017cf:	xchg   DWORD PTR [eax+0x53a8da28],ebp
  4017d5:	fiadd  DWORD PTR [ecx-0x18d55835]
  4017db:	mov    WORD PTR [eax+ecx*2],cs
  4017de:	push   ebp
  4017df:	adc    DWORD PTR [edi],0xffffffd3
  4017e2:	xlat   BYTE PTR ds:[ebx]
  4017e3:	cmp    DWORD PTR [edi-0x17e89b85],ebx
  4017e9:	mov    ecx,0xfdf23a76
  4017ee:	inc    edi
  4017ef:	adc    BYTE PTR [eax+edx*2],bl
  4017f2:	cmp    al,0x60
  4017f4:	fwait
  4017f5:	add    DWORD PTR [ebp+0x2ff91c1f],edx
  4017fb:	sub    BYTE PTR [eax],bh
  4017fd:	inc    esp
  4017fe:	jl     0x4017af
  401800:	pop    es
  401801:	lods   eax,DWORD PTR ds:[esi]
  401802:	push   es
  401803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401804:	jl     0x40181e
  401806:	and    ebp,ebx
  401808:	mov    dl,0xe3
  40180a:	out    dx,eax
  40180b:	push   es
  40180c:	sbb    ah,BYTE PTR [esi-0x5a]
  40180f:	inc    esi
  401810:	or     al,0xaf
  401812:	and    eax,0xe765cb26
  401817:	adc    dh,dl
  401819:	cs sbb al,dh
  40181c:	jbe    0x401821
  40181e:	mov    ds:0xf1fa40d5,eax
  401823:	add    eax,0x931fbe1b
  401828:	push   esi
  401829:	pop    esi
  40182a:	pushf  
  40182b:	adc    al,0x1d
  40182d:	cwde   
  40182e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40182f:	sbb    DWORD PTR [edx],ecx
  401831:	cmp    al,0x9d
  401833:	ins    DWORD PTR es:[edi],dx
  401834:	push   esi
  401835:	xlat   BYTE PTR ds:[ebx]
  401836:	adc    BYTE PTR [ebp-0x4b],dl
  401839:	retf   
  40183a:	imul   ebp,esp,0x6540750c
  401840:	dec    esi
  401841:	ja     0x40181a
  401843:	ss aam 0xf0
  401846:	push   eax
  401847:	mov    ds:0xc259e936,eax
  40184c:	bound  esi,QWORD PTR [ecx-0x532ccf4f]
  401852:	xor    al,0xe4
  401854:	out    dx,eax
  401855:	rcr    DWORD PTR [eax+ebx*4-0x5a],1
  401859:	aad    0xd7
  40185b:	dec    edx
  40185c:	sahf   
  40185d:	aas    
  40185e:	scas   eax,DWORD PTR es:[edi]
  40185f:	sub    ecx,0xffffffbc
  401862:	push   ecx
  401863:	xchg   ebp,eax
  401864:	adc    BYTE PTR ds:0xefaf17a5,dh
  40186a:	cdq    
  40186b:	cmp    esp,edi
  40186d:	mov    ebp,0x40e91133
  401872:	call   0x447a:0x6d680177
  401879:	icebp  
  40187a:	sub    eax,0x7957fb92
  40187f:	test   BYTE PTR [ecx],cl
  401881:	call   0x6991594c
  401886:	les    ebx,FWORD PTR [ecx]
  401888:	test   eax,0x2b60ab63
  40188d:	mov    edi,cs
  40188f:	rcl    DWORD PTR [edi+0x4637812e],cl
  401895:	ds pop edx
  401897:	cs out dx,eax
  401899:	rcr    BYTE PTR [esi],cl
  40189b:	mov    cl,0x76
  40189d:	sbb    BYTE PTR [edi+0x32682044],ch
  4018a3:	imul   edi
  4018a5:	leave  
  4018a6:	dec    esp
  4018a7:	mov    ds:0x4b280b69,eax
  4018ac:	das    
  4018ad:	jecxz  0x40192c
  4018af:	pop    ss
  4018b0:	dec    ecx
  4018b1:	add    DWORD PTR [eax+edx*4+0x48b4737c],esp
  4018b8:	fdiv   DWORD PTR [edi+edi*2-0x7497b652]
  4018bf:	arpl   WORD PTR [ebx],bx
  4018c1:	push   0x638743fb
  4018c6:	add    DWORD PTR ds:0xd9f51b35,esp
  4018cc:	or     al,0x64
  4018ce:	or     BYTE PTR [ecx+eiz*8-0x5692f80],al
  4018d5:	push   esp
  4018d6:	push   ds
  4018d7:	adc    DWORD PTR [edi],ecx
  4018d9:	gs fwait
  4018db:	sbb    al,0xc
  4018dd:	jge    0x40186f
  4018df:	out    dx,eax
  4018e0:	stos   DWORD PTR es:[edi],eax
  4018e1:	cmp    DWORD PTR [edi+0x15d2643],esi
  4018e7:	clc    
  4018e8:	pushf  
  4018e9:	sub    eax,0xac1347c2
  4018ee:	sbb    edx,DWORD PTR [ecx+0x30b9defd]
  4018f4:	dec    edi
  4018f5:	push   ss
  4018f6:	enter  0xb480,0x70
  4018fa:	adc    DWORD PTR [esi-0x3e922b93],0xffffff88
  401901:	rcl    DWORD PTR [eax],1
  401903:	outs   dx,DWORD PTR ds:[esi]
  401904:	dec    ebp
  401905:	add    BYTE PTR [edi],bh
  401907:	adc    al,BYTE PTR [esi+0x69d030b9]
  40190d:	xor    ebx,edi
  40190f:	jecxz  0x4018ea
  401911:	retf   
  401912:	sub    eax,0xac541608
  401917:	push   esi
  401918:	jmp    0x4018e9
  40191a:	xchg   ecx,eax
  40191b:	dec    edx
  40191c:	ss mov esp,0x342a9918
  401922:	shr    DWORD PTR [esi-0x7a],1
  401925:	add    DWORD PTR [ebp+0x6cd22f5c],ebp
  40192b:	daa    
  40192c:	shr    DWORD PTR [edi-0x2cd22ecd],1
  401932:	pop    DWORD PTR [eax+ecx*1]
  401935:	std    
  401936:	int3   
  401937:	mov    esi,0x178014dd
  40193c:	(bad)  
  40193d:	popf   
  40193e:	inc    esp
  40193f:	shr    BYTE PTR [ebx],0x22
  401942:	inc    esi
  401943:	mov    eax,ds:0x34d41124
  401948:	test   al,0xf6
  40194a:	sub    eax,0xddb8bde1
  40194f:	in     eax,0x29
  401951:	sti    
  401952:	scas   eax,DWORD PTR es:[edi]
  401953:	sub    esp,DWORD PTR [eax-0x2fa4ace4]
  401959:	or     al,0xe
  40195b:	mov    ds:0x91ef0947,eax
  401960:	add    eax,0xbc7f4f55
  401965:	push   eax
  401966:	add    ch,dl
  401968:	iret   
  401969:	repz aam 0xe0
  40196c:	mov    dl,BYTE PTR [eax+0x799a60bd]
  401972:	icebp  
  401973:	adc    edx,esp
  401975:	fadd   QWORD PTR [esi]
  401977:	ret    0x4dc8
  40197a:	sub    eax,0x72b0644d
  40197f:	cmp    ah,BYTE PTR [esi+0x3]
  401982:	lods   al,BYTE PTR ds:[esi]
  401983:	ins    DWORD PTR es:[edi],dx
  401984:	scas   eax,DWORD PTR es:[edi]
  401985:	(bad)  
  401986:	iret   
  401987:	push   esi
  401988:	pop    edi
  401989:	jl     0x4019de
  40198b:	jg     0x401925
  40198d:	jecxz  0x40193c
  40198f:	call   0xdc0a:0x1f369fc0
  401996:	pop    es
  401997:	sbb    eax,0x2b3d1ad7
  40199c:	loope  0x401924
  40199e:	out    dx,eax
  40199f:	push   es
  4019a0:	sub    ebp,DWORD PTR [edx-0x49]
  4019a3:	popa   
  4019a4:	fldenv [edi+ebp*8+0x33]
  4019a8:	rcr    DWORD PTR [ebx],0xb0
  4019ab:	cmp    eax,0xed820855
  4019b0:	xchg   esi,eax
  4019b1:	sbb    BYTE PTR [eax],0x39
  4019b4:	ja     0x4019b4
  4019b6:	mov    eax,ds:0xd9c2cffd
  4019bb:	cld    
  4019bc:	dec    eax
  4019bd:	test   eax,0x25cb591f
  4019c2:	lock sbb eax,0x2edb4ec9
  4019c8:	cdq    
  4019c9:	stos   DWORD PTR es:[edi],eax
  4019ca:	std    
  4019cb:	push   ecx
  4019cc:	ret    
  4019cd:	fstp   TBYTE PTR [edx-0x65]
  4019d0:	(bad)  
  4019d1:	push   esp
  4019d2:	scas   al,BYTE PTR es:[edi]
  4019d3:	mov    ebx,DWORD PTR [edx]
  4019d5:	jecxz  0x401993
  4019d7:	loope  0x401a2d
  4019d9:	mov    dh,0xf3
  4019db:	mov    cl,0xab
  4019dd:	inc    edx
  4019de:	xor    eax,edx
  4019e0:	push   eax
  4019e1:	std    
  4019e2:	push   0xfae13ad6
  4019e7:	jno    0x4019ba
  4019e9:	or     al,dl
  4019eb:	add    ecx,DWORD PTR [edx]
  4019ed:	clc    
  4019ee:	test   BYTE PTR [ecx-0x77],0x91
  4019f2:	jecxz  0x40198f
  4019f4:	gs dec ebx
  4019f6:	pushf  
  4019f7:	cmp    BYTE PTR [edi-0x992eaf],dh
  4019fd:	cmp    eax,0xb9337d8e
  401a02:	sbb    bl,BYTE PTR [edi-0xf]
  401a05:	loopne 0x401a82
  401a07:	repnz inc esi
  401a09:	and    BYTE PTR [ebp-0x44],0x16
  401a0d:	jle    0x4019fa
  401a0f:	std    
  401a10:	outs   dx,BYTE PTR ds:[esi]
  401a11:	pop    ss
  401a12:	nop
  401a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a14:	std    
  401a15:	aaa    
  401a16:	dec    ebx
  401a17:	(bad)  
  401a18:	jg     0x4019bc
  401a1a:	and    edi,DWORD PTR [eax+0x73]
  401a1d:	retf   0xbfbd
  401a20:	and    al,0xda
  401a22:	lahf   
  401a23:	stc    
  401a24:	jecxz  0x401a09
  401a26:	jcxz   0x401a35
  401a29:	pop    ecx
  401a2a:	dec    ecx
  401a2b:	jnp    0x4019f4
  401a2d:	xor    DWORD PTR [esi],edi
  401a2f:	rcl    esi,1
  401a31:	and    ebx,DWORD PTR [edi]
  401a33:	(bad)  
  401a34:	cli    
  401a35:	mov    ch,0x30
  401a37:	jae    0x4019d8
  401a39:	sar    DWORD PTR [esi+0x5c],0x46
  401a3d:	out    0x16,eax
  401a3f:	sub    al,0x0
  401a41:	push   es
  401a42:	and    BYTE PTR [edx],dh
  401a44:	test   eax,0x964f1c03
  401a49:	ffree  st(6)
  401a4b:	xchg   ebx,eax
  401a4c:	aam    0x73
  401a4e:	push   eax
  401a4f:	adc    BYTE PTR [edi+0x1cf2bbad],dl
  401a55:	call   0x50161c4e
  401a5a:	inc    ebx
  401a5b:	push   esi
  401a5c:	gs (bad) 
  401a5e:	sbb    al,0xd2
  401a60:	mul    DWORD PTR [ecx]
  401a62:	or     esi,ebx
  401a64:	pop    eax
  401a65:	lods   eax,DWORD PTR ds:[esi]
  401a66:	es jae 0x401a6d
  401a69:	push   es
  401a6a:	dec    esi
  401a6b:	popa   
  401a6c:	dec    edx
  401a6d:	inc    edx
  401a6e:	push   ecx
  401a6f:	xchg   ebp,eax
  401a70:	sub    eax,0xc293daf7
  401a75:	jmp    0x401a0b
  401a77:	dec    ecx
  401a78:	sbb    DWORD PTR [ecx+0x13c90595],0x7e
  401a7f:	mov    ds,WORD PTR [esi+0x5018098]
  401a85:	sub    al,0x8d
  401a87:	and    edi,DWORD PTR [ebp+0x622e8a08]
  401a8d:	xchg   edx,eax
  401a8e:	dec    edi
  401a8f:	jae    0x401a31
  401a91:	pop    ebp
  401a92:	and    eax,0x8111bea6
  401a97:	sub    al,0x5f
  401a99:	inc    ebx
  401a9a:	fstp   QWORD PTR [ecx+edi*4]
  401a9d:	inc    ecx
  401a9e:	and    dl,BYTE PTR [edi+eax*1+0x582563d4]
  401aa5:	xchg   DWORD PTR [ecx+0x47],ecx
  401aa8:	sbb    edi,esi
  401aaa:	mov    ecx,0xc5762a9f
  401aaf:	sub    al,0x90
  401ab1:	mov    cl,0x89
  401ab3:	jbe    0x401b2a
  401ab5:	aas    
  401ab6:	push   esi
  401ab7:	or     BYTE PTR [ebp+0x7570ff8d],cl
  401abd:	push   ecx
  401abe:	push   ebx
  401abf:	adc    al,0xb4
  401ac1:	mov    esi,0x7bfe6b41
  401ac6:	in     eax,0x16
  401ac8:	xor    cl,BYTE PTR [esi-0x40]
  401acb:	out    0x85,al
  401acd:	sar    esp,1
  401acf:	clc    
  401ad0:	imul   esp,ebx,0xc0787261
  401ad6:	and    bl,ch
  401ad8:	ret    0x4cd9
  401adb:	shl    edi,cl
  401add:	aad    0x7
  401adf:	mov    esi,0x76ff9a02
  401ae4:	xchg   ecx,esp
  401ae6:	ins    BYTE PTR es:[edi],dx
  401ae7:	std    
  401ae8:	pop    ebp
  401ae9:	ret    0x5057
  401aec:	add    al,0xe7
  401aee:	mov    edx,0x3e65aa30
  401af3:	jae    0x401a77
  401af5:	ss out dx,eax
  401af7:	add    DWORD PTR [ebp-0x61861855],ecx
  401afd:	mov    dl,0x14
  401aff:	or     ch,BYTE PTR [ecx]
  401b01:	(bad)  
  401b03:	push   0x49
  401b05:	or     ecx,edi
  401b07:	sub    BYTE PTR [esi+0x3a42b4de],0xd0
  401b0e:	in     eax,dx
  401b0f:	int    0xc
  401b11:	lock mov al,0xf1
  401b14:	jns    0x401b75
  401b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b17:	stos   DWORD PTR es:[edi],eax
  401b18:	into   
  401b19:	in     eax,0x9c
  401b1b:	(bad)  
  401b1c:	sti    
  401b1d:	pusha  
  401b1e:	and    eax,0xc8d8d958
  401b23:	ins    BYTE PTR es:[edi],dx
  401b24:	add    esp,DWORD PTR [edx+0x64]
  401b27:	mov    ss,ecx
  401b29:	test   BYTE PTR [ebx],al
  401b2b:	outs   dx,BYTE PTR ds:[esi]
  401b2c:	jae    0x401afd
  401b2e:	lds    ecx,FWORD PTR [eax]
  401b30:	sub    eax,0x9a0519f6
  401b35:	call   0x18cb6692
  401b3a:	jnp    0x401b43
  401b3c:	sar    DWORD PTR [esi],1
  401b3e:	add    ebx,DWORD PTR [ebp+edx*4+0x7b7dee11]
  401b45:	pop    ds
  401b46:	add    ah,dl
  401b48:	dec    esi
  401b49:	push   0xe9eb76ab
  401b4e:	je     0x401b77
  401b50:	enter  0x47bb,0x96
  401b54:	rcl    BYTE PTR [edi-0x1c],1
  401b57:	ficom  DWORD PTR [esi-0x74]
  401b5a:	(bad)  
  401b5b:	xor    eax,0x66b5d743
  401b60:	mov    ds,WORD PTR [eax-0x288145e9]
  401b66:	les    esi,FWORD PTR [ebx+0x7f]
  401b69:	mov    ebx,0xc9195b8e
  401b6e:	call   0xa834c7bb
  401b73:	rol    DWORD PTR [ebx],cl
  401b75:	retf   
  401b76:	out    0xb0,eax
  401b78:	or     BYTE PTR gs:[edx+0x2563fe69],dl
  401b7f:	rcr    dh,0xe8
  401b82:	mov    ebp,0x24d583a0
  401b87:	icebp  
  401b88:	cmc    
  401b89:	push   eax
  401b8a:	dec    edx
  401b8b:	ret    0x5090
  401b8e:	rep stos DWORD PTR es:[edi],eax
  401b90:	ja     0x401ba4
  401b92:	(bad)  [ebx-0x4c42428e]
  401b98:	sbb    eax,0x6ac89654
  401b9d:	dec    esi
  401b9e:	mov    al,ds:0xf06c244f
  401ba3:	push   edi
  401ba4:	aad    0xbf
  401ba6:	pop    ebx
  401ba7:	pop    ebx
  401ba8:	std    
  401ba9:	jae    0x401c27
  401bab:	in     eax,0xe5
  401bad:	mov    esp,esp
  401baf:	pusha  
  401bb0:	out    0x32,al
  401bb2:	int    0x77
  401bb4:	fs dec ecx
  401bb6:	aad    0x43
  401bb8:	cdq    
  401bb9:	jp     0x401b99
  401bbb:	fcmovb st,st(6)
  401bbd:	xor    eax,DWORD PTR [ebp+ebx*8+0x60]
  401bc1:	adc    BYTE PTR [ebx+edx*4+0x7d],dh
  401bc5:	jmp    0x401be9
  401bc7:	repz loop 0x401b5a
  401bca:	arpl   si,dx
  401bcc:	shr    DWORD PTR [edi+0x587e3376],1
  401bd2:	dec    ebx
  401bd3:	jle    0x401bbc
  401bd5:	cmc    
  401bd6:	outs   dx,DWORD PTR ds:[esi]
  401bd7:	add    dl,dl
  401bd9:	stos   DWORD PTR es:[edi],eax
  401bda:	dec    eax
  401bdb:	ss clc 
  401bdd:	xor    ah,BYTE PTR [eax-0x7b]
  401be0:	das    
  401be1:	das    
  401be2:	push   cs
  401be3:	retf   
  401be4:	mov    dl,0x77
  401be6:	test   dl,bl
  401be8:	and    BYTE PTR [edi],al
  401bea:	mov    dh,0xaa
  401bec:	call   FWORD PTR [ebx+0x56]
  401bef:	adc    edx,DWORD PTR [ecx+0x63a86da2]
  401bf5:	xlat   BYTE PTR ds:[ebx]
  401bf6:	add    edi,DWORD PTR [esi+0x7895bc75]
  401bfc:	pop    eax
  401bfd:	xchg   esp,eax
  401bfe:	inc    edi
  401bff:	and    al,al
  401c01:	ret    
  401c02:	mov    esi,0x187ef8f8
  401c07:	mov    bh,BYTE PTR [esi-0x4d]
  401c0a:	mov    eax,ds:0xa2d4a69
  401c0f:	sub    edx,edx
  401c11:	icebp  
  401c12:	mov    esi,0x4c6d568f
  401c17:	mov    es,WORD PTR [edi+eiz*1+0x7]
  401c1b:	stos   BYTE PTR es:[edi],al
  401c1c:	xchg   ebx,eax
  401c1d:	and    ebp,DWORD PTR [eax+0x38]
  401c20:	retf   
  401c21:	mov    BYTE PTR [esi],al
  401c23:	jno    0x401c82
  401c25:	(bad)  
  401c26:	cwde   
  401c27:	ja     0x401c79
  401c29:	and    ch,dh
  401c2b:	shl    dl,cl
  401c2d:	shl    BYTE PTR [ebx+esi*4+0x7bed1644],cl
  401c34:	sub    DWORD PTR [eax],esi
  401c36:	dec    ebp
  401c37:	or     ecx,DWORD PTR [esi+0xb40a40c]
  401c3d:	rcr    DWORD PTR [edi+ebp*1],0xb8
  401c41:	jnp    0x401cb5
  401c43:	push   ebp
  401c44:	outs   dx,DWORD PTR ds:[esi]
  401c45:	(bad)  [esp+ebx*1+0x39]
  401c49:	mov    esp,0x275d14d2
  401c4e:	retf   0x2539
  401c51:	and    al,0x30
  401c53:	jp     0x401bdf
  401c55:	jo     0x401cb8
  401c57:	pop    ecx
  401c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c59:	popa   
  401c5a:	aaa    
  401c5b:	or     cl,dl
  401c5d:	hlt    
  401c5e:	mov    ecx,0x1c37e35f
  401c63:	ins    DWORD PTR es:[edi],dx
  401c64:	bound  esi,QWORD PTR [edi+0x59]
  401c67:	arpl   WORD PTR [ecx-0x154d8fb6],cx
  401c6d:	cmp    eax,0xaea7709e
  401c72:	xchg   ebx,eax
  401c73:	xlat   BYTE PTR ds:[ebx]
  401c74:	sbb    dh,BYTE PTR [ecx+ecx*8]
  401c77:	ss xor eax,0x19bd41ef
  401c7d:	add    al,0x1c
  401c7f:	xchg   esi,eax
  401c80:	call   0xf178:0x58eb9467
  401c87:	sbb    ah,BYTE PTR [ebp-0x74]
  401c8a:	jae    0x401c2a
  401c8c:	ja     0x401c6f
  401c8e:	xchg   ah,ch
  401c90:	fstp   DWORD PTR [esi-0x71]
  401c93:	adc    DWORD PTR [ecx+0x467400a],ebp
  401c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c9a:	sub    eax,DWORD PTR [ecx]
  401c9c:	mov    edi,0xcb893544
  401ca1:	dec    esi
  401ca2:	cwde   
  401ca3:	out    dx,eax
  401ca4:	xchg   edi,eax
  401ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ca6:	test   eax,0xc016b8c0
  401cab:	outs   dx,DWORD PTR ds:[esi]
  401cac:	in     al,0x79
  401cae:	mov    dl,dh
  401cb0:	call   0x8df81a71
  401cb5:	mov    eax,ds:0x9a4f5e5b
  401cba:	lds    ebx,FWORD PTR [eax+0x28]
  401cbd:	mov    al,0xd5
  401cbf:	and    esi,ebx
  401cc1:	mov    ecx,0x42c3aa68
  401cc6:	inc    edi
  401cc7:	cmp    DWORD PTR [edi+0x54],0xffffffc0
  401ccb:	dec    esi
  401ccc:	in     eax,dx
  401ccd:	int    0x92
  401ccf:	sub    al,BYTE PTR [ebx+0x5c326617]
  401cd5:	jge    0x401d1c
  401cd7:	cli    
  401cd8:	int    0xe3
  401cda:	js     0x401d47
  401cdc:	das    
  401cdd:	fld    TBYTE PTR [edi]
  401cdf:	adc    eax,0xc2265a21
  401ce4:	shl    BYTE PTR [esi],cl
  401ce6:	or     al,BYTE PTR [ebx-0x39]
  401ce9:	xor    esp,eax
  401ceb:	lea    edx,[ebp-0x78]
  401cee:	fsub   DWORD PTR [eax+0x6c]
  401cf1:	ss and eax,0xb37bab69
  401cf7:	mov    ebx,0xc50270d0
  401cfc:	push   edi
  401cfd:	das    
  401cfe:	bswap  ecx
  401d00:	add    BYTE PTR [edi+0x61],0x23
  401d04:	mov    al,ds:0x4ac15a06
  401d09:	adc    DWORD PTR [eax+0x34],ecx
  401d0c:	ss out dx,al
  401d0e:	ja     0x401d25
  401d10:	mov    dl,0xb3
  401d12:	mov    ebp,cs
  401d14:	sub    ebp,DWORD PTR [ecx-0x79a76557]
  401d1a:	mov    dl,0x44
  401d1c:	pop    ecx
  401d1d:	outs   dx,BYTE PTR ds:[esi]
  401d1e:	push   ebp
  401d1f:	ds mov edi,0x55d5ff2a
  401d25:	xor    ah,BYTE PTR [esi+0x7ea75135]
  401d2b:	pop    ebx
  401d2c:	(bad)
  401d2f:	sub    BYTE PTR [edi+0x54],bh
  401d32:	inc    ebx
  401d33:	mov    ds:0xcedf43bf,al
  401d38:	jecxz  0x401da1
  401d3a:	fsubr  QWORD PTR [esp+eax*4-0x75]
  401d3e:	lock or al,0x58
  401d41:	arpl   bx,cx
  401d43:	mov    al,ds:0xae9df019
  401d48:	lock in eax,dx
  401d4a:	cmc    
  401d4b:	lods   eax,DWORD PTR ds:[esi]
  401d4c:	mov    DWORD PTR [esi+edx*4],0xad4a72f
  401d53:	and    al,0x99
  401d55:	ror    DWORD PTR [esp+edi*4-0x49],0x3b
  401d5a:	out    dx,al
  401d5b:	add    al,0xad
  401d5d:	jge    0x401d2d
  401d5f:	aaa    
  401d60:	enter  0x9e9f,0x29
  401d64:	js     0x401dc2
  401d66:	push   ecx
  401d67:	test   al,0xd7
  401d69:	adc    eax,0x68145b86
  401d6e:	jmp    0x401cfb
  401d70:	mov    BYTE PTR [eax-0x4d],al
  401d73:	fidiv  DWORD PTR ds:0x51c5e076
  401d79:	(bad)  [ebx+0x3b]
  401d7c:	out    dx,al
  401d7d:	mov    dh,BYTE PTR [ebp+0x760fefd5]
  401d83:	(bad)  
  401d84:	push   edx
  401d85:	add    DWORD PTR [eax],0x6e8a182d
  401d8b:	jl     0x401d80
  401d8d:	shl    BYTE PTR [ebx],cl
  401d8f:	iret   
  401d90:	ins    DWORD PTR es:[edi],dx
  401d91:	and    dl,BYTE PTR [eax-0x645214fe]
  401d97:	inc    edx
  401d98:	jp     0x401de0
  401d9a:	inc    ebx
  401d9b:	sub    al,0xbb
  401d9d:	pushf  
  401d9e:	xchg   BYTE PTR [edx],bl
  401da0:	not    dh
  401da2:	pusha  
  401da3:	aaa    
  401da4:	ret    0x9096
  401da7:	push   ebp
  401da8:	push   ecx
  401da9:	sbb    al,0xcb
  401dab:	rol    BYTE PTR [ecx-0x79],0x58
  401daf:	not    DWORD PTR [esi+ecx*4]
  401db2:	jecxz  0x401db0
  401db4:	and    eax,0x9869a9c6
  401db9:	cmp    esp,esp
  401dbb:	push   cs
  401dbc:	mov    esp,0x1111a18f
  401dc1:	mov    ebp,0x601d769f
  401dc6:	lea    ebx,[ebp-0x41]
  401dc9:	and    al,0xc
  401dcb:	jne    0x401e0c
  401dcd:	add    bh,BYTE PTR [edx]
  401dcf:	nop
  401dd0:	sbb    ecx,esp
  401dd2:	cmp    dh,BYTE PTR [ecx+0x24]
  401dd5:	add    ch,ah
  401dd7:	arpl   WORD PTR [esi-0x7694341a],sp
  401ddd:	add    eax,DWORD PTR [ebx-0x753f4095]
  401de3:	or     eax,0xdbc2b3ae
  401de8:	les    ebp,FWORD PTR [edi-0x7d]
  401deb:	mov    ds:0x2bbabf2b,eax
  401df0:	mov    cl,0x39
  401df2:	xchg   ebp,eax
  401df3:	ds sti 
  401df5:	or     esi,esi
  401df7:	enter  0x9c91,0x36
  401dfb:	pop    ecx
  401dfc:	into   
  401dfd:	mov    ss,WORD PTR [ecx-0x4d]
  401e00:	pop    ss
  401e01:	mov    cl,0xde
  401e03:	lods   eax,DWORD PTR ds:[esi]
  401e04:	jmp    0x2bc100f
  401e09:	pop    eax
  401e0a:	mov    bh,0x43
  401e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e0d:	fld    QWORD PTR ds:0x7f5531e1
  401e13:	pop    esi
  401e14:	dec    ecx
  401e16:	mov    bl,BYTE PTR [edx-0x63d3c20e]
  401e1c:	repz mov eax,es:0x89d67089
  401e23:	and    DWORD PTR [ebx-0x25],edi
  401e26:	rcl    BYTE PTR [esp+0x4],1
  401e2a:	adc    eax,0x6dd7a335
  401e2f:	pop    edx
  401e30:	jns    0x401e48
  401e32:	ja     0x401e70
  401e34:	scas   al,BYTE PTR es:[edi]
  401e35:	stos   DWORD PTR es:[edi],eax
  401e36:	pop    ds
  401e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e39:	jle    0x401de9
  401e3b:	push   ebp
  401e3c:	jge    0x401e4c
  401e3e:	(bad)  
  401e3f:	sbb    DWORD PTR [edx],ecx
  401e41:	pop    edx
  401e42:	xchg   cl,dl
  401e44:	popf   
  401e45:	je     0x401ea7
  401e47:	or     al,0x67
  401e49:	popa   
  401e4a:	pop    es
  401e4b:	jo     0x401e44
  401e4d:	cmp    dh,al
  401e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e50:	mov    bl,0x93
  401e52:	push   ebx
  401e53:	mov    ds:0x6c50ae24,al
  401e58:	xor    BYTE PTR [edi+eiz*1-0x461847a2],dh
  401e5f:	xor    DWORD PTR [eax-0x3a],esp
  401e62:	sub    cl,BYTE PTR [edi+0x44ca8e2d]
  401e68:	jmp    0xcaae:0x78eeb186
  401e6f:	pop    ebp
  401e70:	push   0xffffffa1
  401e72:	jo     0x401ecf
  401e74:	loope  0x401e1c
  401e76:	leave  
  401e77:	xor    cl,dh
  401e79:	fisubr DWORD PTR [ebp+0x4690414d]
  401e7f:	jl     0x401ea4
  401e81:	mov    eax,ds:0x9d086937
  401e86:	lods   eax,DWORD PTR ds:[esi]
  401e87:	loopne 0x401e1a
  401e89:	repnz aam 0xb6
  401e8c:	sub    eax,0x925e0d0f
  401e91:	add    bh,bl
  401e93:	(bad)  
  401e94:	lahf   
  401e95:	push   cs
  401e96:	sbb    cl,BYTE PTR [edi]
  401e98:	daa    
  401e99:	or     DWORD PTR [eax-0x46],ebp
  401e9c:	push   ss
  401e9d:	add    al,0x4c
  401e9f:	pushf  
  401ea0:	xor    al,0x57
  401ea2:	mov    ecx,0x7bfa74d1
  401ea7:	inc    eax
  401ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ea9:	or     eax,0x4002496b
  401eae:	std    
  401eaf:	fwait
  401eb0:	or     DWORD PTR [ebp-0x47],esp
  401eb3:	out    dx,al
  401eb4:	mov    esp,0x67737237
  401eb9:	fwait
  401eba:	js     0x401f2c
  401ebc:	mov    cl,0x4d
  401ebe:	xchg   edx,eax
  401ebf:	mov    al,0xdd
  401ec1:	arpl   WORD PTR [ecx],cx
  401ec3:	xor    BYTE PTR [ebx+0x56],ch
  401ec6:	sbb    BYTE PTR [esi],bl
  401ec8:	push   esi
  401ec9:	rcl    ebp,cl
  401ecb:	add    al,0x21
  401ecd:	enter  0x96aa,0x2a
  401ed1:	aad    0xc5
  401ed3:	std    
  401ed4:	fidiv  DWORD PTR [ebx]
  401ed6:	dec    ebp
  401ed7:	mov    WORD PTR [eax+0x8c8234d],gs
  401edd:	fld    DWORD PTR [esi]
  401edf:	pop    edi
  401ee0:	es jne 0x401f14
  401ee3:	repnz scas al,BYTE PTR es:[edi]
  401ee5:	xchg   ecx,eax
  401ee6:	pop    edi
  401ee7:	or     BYTE PTR [edi-0x41],cl
  401eea:	gs js  0x401ebb
  401eed:	and    al,0xf4
  401eef:	pop    es
  401ef0:	popf   
  401ef1:	cld    
  401ef2:	mov    al,ds:0xac1a4ba7
  401ef7:	loop   0x401e79
  401ef9:	sbb    ah,dl
  401efb:	and    DWORD PTR [edx+esi*4-0x36],esi
  401eff:	fmul   QWORD PTR [ebx]
  401f01:	jg     0x401f66
  401f03:	mov    gs,WORD PTR [ebp+0x63]
  401f06:	jmp    0xd4611ae3
  401f0b:	aaa    
  401f0c:	pop    ecx
  401f0d:	pop    ss
  401f0e:	imul   DWORD PTR [ebp+0x5e7a08c2]
  401f14:	mov    WORD PTR [ebp-0x60],ss
  401f17:	mov    ds,WORD PTR [ecx+0x6e]
  401f1a:	int    0x6f
  401f1c:	clc    
  401f1d:	dec    ecx
  401f1e:	test   ch,bh
  401f20:	clc    
  401f21:	mov    ecx,ebx
  401f23:	or     DWORD PTR [ebp-0x79],ebx
  401f26:	sub    eax,0xe42bd024
  401f2b:	addr16 pop ds
  401f2d:	jecxz  0x401f00
  401f2f:	mov    ch,0xc6
  401f31:	int3   
  401f32:	addr16 mov dl,0x4e
  401f35:	sbb    DWORD PTR [ebx],esp
  401f37:	icebp  
  401f38:	daa    
  401f39:	in     eax,0x66
  401f3b:	sbb    DWORD PTR [esi+0x4],edi
  401f3e:	sbb    eax,DWORD PTR [eax+0x17]
  401f41:	loop   0x401f22
  401f43:	in     al,0x1e
  401f45:	xor    BYTE PTR [edx],ah
  401f47:	retf   0x5c63
  401f4a:	pop    esi
  401f4b:	pop    ss
  401f4c:	in     al,dx
  401f4d:	inc    ebx
  401f4e:	xchg   ebx,eax
  401f4f:	fidivr WORD PTR [edx+0x7fa985e1]
  401f55:	adc    esp,DWORD PTR [edi-0x2]
  401f58:	bound  ebp,QWORD PTR [edi]
  401f5a:	adc    DWORD PTR [ecx+0x7145a90c],edx
  401f60:	dec    ebx
  401f61:	pop    esi
  401f62:	stos   DWORD PTR es:[edi],eax
  401f63:	mov    bh,0x20
  401f65:	sets   ch
  401f68:	out    dx,eax
  401f69:	js     0x401ef1
  401f6b:	xchg   esp,eax
  401f6c:	add    al,0xb2
  401f6e:	xchg   edi,eax
  401f6f:	jmp    0x4cc1c692
  401f74:	stc    
  401f75:	xchg   BYTE PTR ds:0x74b4e0d6,dl
  401f7b:	icebp  
  401f7c:	retf   0x8ada
  401f7f:	xchg   edi,eax
  401f81:	jmp    0x401fe9
  401f83:	int3   
  401f84:	(bad)  
  401f85:	sahf   
  401f86:	add    esp,DWORD PTR gs:[ebx+eax*2-0x302b703b]
  401f8e:	stc    
  401f8f:	push   ds
  401f90:	sub    BYTE PTR [esi+0x199cebe9],ch
  401f96:	fistp  DWORD PTR [edx+0x2f]
  401f99:	push   cs
  401f9a:	sbb    al,0x25
  401f9c:	int    0xd0
  401f9e:	mov    ds:0x618b67f0,al
  401fa3:	and    al,0xd9
  401fa5:	mov    bl,0x46
  401fa7:	lock sub eax,0x79672864
  401fad:	test   al,0x33
  401faf:	cs cwde 
  401fb1:	hlt    
  401fb2:	(bad)
  401fb5:	sbb    bh,BYTE PTR [edi+0x5e62714f]
  401fbb:	push   ds
  401fbc:	mov    esp,0xdda81c06
  401fc1:	mov    ds:0xa53cb3a4,eax
  401fc6:	pop    ebp
  401fc7:	xor    dh,BYTE PTR [esp+eiz*8]
  401fca:	adc    al,0xb3
  401fcc:	or     eax,0x245ee65
  401fd1:	pop    es
  401fd2:	stos   BYTE PTR es:[edi],al
  401fd3:	(bad)  
  401fd4:	cmp    eax,0xe33b7434
  401fd9:	ins    BYTE PTR es:[edi],dx
  401fda:	sub    eax,0x19ef2cb2
  401fdf:	sub    ah,BYTE PTR [esi-0x4]
  401fe2:	push   0x77f174bb
  401fe7:	mov    ds:0x70112995,eax
  401fec:	mov    esi,0xb1af748e
  401ff1:	test   BYTE PTR [edx-0x760dad0d],0x4c
  401ff8:	pop    eax
  401ff9:	mov    esp,0xfbfb00c3
  401ffe:	out    dx,eax
  401fff:	and    BYTE PTR [ecx-0x13dd04d0],ch
  402005:	or     eax,0x505040a8
  40200a:	or     eax,0x3efaaeed
  40200f:	(bad)  
  402010:	loop   0x40200a
  402012:	lods   eax,DWORD PTR ds:[esi]
  402013:	xchg   esp,eax
  402014:	jne    0x402095
  402016:	lahf   
  402017:	fisttp WORD PTR [ebx+0xdadab46]
  40201d:	(bad)  
  40201e:	sbb    eax,DWORD PTR [ecx]
  402020:	pop    esp
  402021:	test   eax,0x2fbf94ff
  402026:	push   es
  402027:	cmp    DWORD PTR [edx-0x7217cb16],edx
  40202d:	dec    esp
  40202e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40202f:	(bad)  
  402030:	mov    al,0x81
  402032:	pushf  
  402033:	inc    ebx
  402034:	mov    eax,0x4b9ca2ca
  402039:	push   ecx
  40203a:	sbb    al,0xde
  40203c:	mov    ch,0x4f
  40203e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40203f:	lods   al,BYTE PTR ds:[esi]
  402040:	mov    bl,0xe0
  402042:	push   esi
  402043:	not    DWORD PTR [edx-0x27f6ca70]
  402049:	(bad)  
  40204a:	pop    ebx
  40204b:	outs   dx,DWORD PTR ds:[esi]
  40204c:	pop    es
  40204d:	cmp    DWORD PTR [edx-0x4cbc7dd5],edx
  402053:	cdq    
  402054:	cdq    
  402055:	xor    bl,BYTE PTR [ecx-0x7576fe22]
  40205b:	mov    gs,esi
  40205d:	sbb    bl,dh
  40205f:	sub    al,0x4b
  402061:	lock lahf 
  402063:	ret    
  402064:	mov    ah,BYTE PTR [esp+eax*2+0x4b]
  402068:	in     al,0xc0
  40206a:	lea    esp,[ebp+eax*2-0x45ef0596]
  402071:	retf   
  402072:	xor    esp,DWORD PTR [edx]
  402074:	adc    al,0x47
  402076:	mov    eax,0xa7ba9951
  40207b:	add    bl,ah
  40207d:	call   0x648ce991
  402082:	shr    ecx,1
  402084:	ret    0x605e
  402087:	je     0x402011
  402089:	sub    eax,DWORD PTR gs:[ebx+0x6c]
  40208d:	sub    eax,0x4a93edaa
  402092:	mov    cs,esi
  402094:	dec    eax
  402095:	pop    edi
  402096:	rol    ebx,0x6e
  402099:	dec    edx
  40209a:	mov    bl,0xde
  40209c:	(bad)  
  40209d:	in     al,dx
  40209e:	jae    0x402114
  4020a0:	jne    0x4020b1
  4020a2:	adc    ebp,ebp
  4020a4:	pop    es
  4020a5:	pop    esp
  4020a6:	(bad)  
  4020a9:	in     al,dx
  4020aa:	add    esp,edx
  4020ac:	pop    ebp
  4020ad:	xor    edx,DWORD PTR [esi]
  4020af:	in     al,0x28
  4020b1:	rcl    DWORD PTR [esi+0x45],1
  4020b4:	data16 jne 0x402099
  4020b7:	or     BYTE PTR [eax],cl
  4020b9:	shl    DWORD PTR [ebx-0xe],1
  4020bc:	mov    bl,0x81
  4020be:	mov    ebp,0x16a8ba27
  4020c3:	(bad)  
  4020c4:	inc    edi
  4020c5:	and    eax,0x97030d0
  4020ca:	fbld   TBYTE PTR [ecx+0x4e]
  4020cd:	stos   BYTE PTR es:[edi],al
  4020ce:	les    esp,FWORD PTR [edx]
  4020d0:	lods   eax,DWORD PTR ds:[esi]
  4020d1:	imul   esi,eax,0xffffffe6
  4020d4:	push   DWORD PTR [ebx+edi*4]
  4020d7:	aaa    
  4020d8:	stos   DWORD PTR es:[edi],eax
  4020d9:	pop    edi
  4020da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020db:	cmp    DWORD PTR [ebx+ecx*2],ebp
  4020de:	mov    dh,0xcd
  4020e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e1:	lods   al,BYTE PTR ds:[esi]
  4020e2:	dec    ebx
  4020e3:	sub    edi,DWORD PTR [ebx+0x35]
  4020e6:	popa   
  4020e7:	loopne 0x4020a6
  4020e9:	push   ss
  4020ea:	mov    eax,0x5e73342e
  4020ef:	scas   al,BYTE PTR es:[edi]
  4020f0:	dec    ebx
  4020f1:	sbb    bl,BYTE PTR [eax+0x1ff130e]
  4020f7:	sbb    dl,BYTE PTR [edi]
  4020f9:	stos   DWORD PTR es:[edi],eax
  4020fa:	cmp    DWORD PTR [ecx-0x61bf260a],edx
  402100:	fsubr  QWORD PTR [ecx+0x39]
  402103:	sbb    DWORD PTR [ebx-0x4a],esp
  402106:	xchg   esp,eax
  402107:	cmp    DWORD PTR [esi+0x41f01c9b],0x7b
  40210e:	push   ss
  40210f:	ror    DWORD PTR [edi-0x12],cl
  402112:	dec    eax
  402113:	xlat   BYTE PTR ds:[ebx]
  402114:	jmp    0x431:0x293de7a2
  40211b:	mov    al,ds:0x586fde0e
  402120:	aad    0xdc
  402122:	xchg   ecx,eax
  402123:	xchg   BYTE PTR [edi],dl
  402125:	or     ch,BYTE PTR [ebx-0x2]
  402128:	sub    DWORD PTR [esi+eiz*4-0x79],ecx
  40212c:	jns    0x402112
  40212e:	stos   DWORD PTR es:[edi],eax
  40212f:	sbb    ecx,eax
  402131:	push   eax
  402132:	cmp    ecx,DWORD PTR [ebp-0xb9a597d]
  402138:	mov    ebx,0x2dceaca5
  40213d:	(bad)  
  40213e:	ja     0x4021b3
  402140:	adc    eax,0x610b4124
  402145:	pop    esi
  402146:	cmc    
  402147:	push   edx
  402148:	mov    bh,0xbc
  40214a:	jb     0x402164
  40214c:	cmp    DWORD PTR ds:0xf79d4b33,ebx
  402152:	int3   
  402153:	inc    esp
  402154:	sub    edi,DWORD PTR [edx+0x1e]
  402157:	pop    ebx
  402158:	dec    edi
  402159:	pop    edx
  40215a:	xor    eax,0xb751f817
  40215f:	push   edx
  402160:	adc    BYTE PTR [edx],0x21
  402163:	fld    DWORD PTR [edi-0x39]
  402166:	mov    cl,0xbd
  402168:	(bad)  
  402169:	adc    eax,0xe23befac
  40216e:	fiadd  DWORD PTR [ecx]
  402170:	or     bl,bl
  402172:	add    BYTE PTR [ebx],dl
  402174:	and    al,0x75
  402176:	fidiv  WORD PTR [esi+0x13562965]
  40217c:	add    BYTE PTR [ecx-0x54a93254],cl
  402182:	cdq    
  402183:	(bad)  
  402184:	dec    ebp
  402185:	das    
  402186:	mov    bl,0x10
  402188:	pushf  
  402189:	dec    edi
  40218a:	xbegin 0x92855d2b
  402190:	sbb    al,0xe2
  402192:	cwde   
  402193:	sub    ebp,DWORD PTR [edx-0x74]
  402196:	(bad)  
  402197:	mov    ds:0x8ceb2ff3,al
  40219c:	cmp    al,0xa2
  40219e:	sbb    eax,0x4d7b3f17
  4021a3:	outs   dx,BYTE PTR ds:[esi]
  4021a4:	data16 fnstsw WORD PTR [eax+0x6fb9cb06]
  4021ab:	jne    0x4021dd
  4021ad:	sar    BYTE PTR [esi+0x29b26964],cl
  4021b3:	lock in eax,0x6b
  4021b6:	sub    al,0x7
  4021b8:	or     esi,DWORD PTR [ebp+0x1778cf7f]
  4021be:	dec    ebx
  4021bf:	dec    edx
  4021c0:	stos   DWORD PTR es:[edi],eax
  4021c1:	scas   eax,DWORD PTR es:[edi]
  4021c2:	inc    esp
  4021c3:	cmp    DWORD PTR ds:0x80ee7636,ecx
  4021c9:	inc    esp
  4021ca:	(bad)  
  4021cb:	jge    0x402214
  4021cd:	in     al,dx
  4021ce:	das    
  4021cf:	mov    esi,0x44930f7e
  4021d4:	add    al,0xb2
  4021d6:	cmc    
  4021d7:	retf   0x734c
  4021da:	cmp    edi,DWORD PTR [eax-0x63]
  4021dd:	xor    DWORD PTR [esi],ecx
  4021df:	inc    edx
  4021e0:	pop    edx
  4021e1:	sbb    BYTE PTR [ecx+0x23e9ba14],0xf4
  4021e8:	cwde   
  4021e9:	push   0xaf5e5057
  4021ee:	stos   DWORD PTR es:[edi],eax
  4021ef:	es jp  0x402209
  4021f2:	into   
  4021f3:	mov    gs:0x3670e12b,eax
  4021f9:	sub    BYTE PTR [edx-0x60969162],bl
  4021ff:	hlt    
  402200:	aad    0xbd
  402202:	push   0xffffffa6
  402204:	out    0x50,al
  402206:	ja     0x4021bb
  402208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402209:	mov    ch,BYTE PTR [eax]
  40220b:	div    BYTE PTR [edx+edx*1-0x3d8da04]
  402212:	inc    edi
  402213:	idiv   DWORD PTR [esi-0x22f748b7]
  402219:	jmp    0x4021df
  40221b:	push   ebp
  40221c:	inc    ebx
  40221d:	push   eax
  40221e:	jns    0x4021f8
  402220:	add    bh,al
  402222:	mov    esp,0x22ed2df6
  402227:	dec    edx
  402228:	rcl    BYTE PTR [ecx-0xc],cl
  40222b:	mov    gs,ebp
  40222d:	inc    esi
  40222e:	pop    edx
  40222f:	mov    cl,0x4a
  402231:	mov    eax,0x785d9fc7
  402236:	lahf   
  402237:	dec    esi
  402238:	pop    edx
  402239:	push   eax
  40223a:	cmc    
  40223b:	mov    ecx,0x262bf908
  402240:	jmp    0x4cb03ee2
  402245:	jo     0x40229f
  402247:	cs or  al,0xb0
  40224a:	xchg   BYTE PTR [eax],ah
  40224c:	sbb    al,BYTE PTR [edx]
  40224e:	xchg   ebp,eax
  40224f:	and    al,0x3
  402251:	jbe    0x4022a5
  402253:	pop    ebp
  402254:	lods   al,BYTE PTR ds:[esi]
  402255:	pop    esp
  402256:	rol    DWORD PTR [esi+0x73],0x1d
  40225a:	xchg   ecx,eax
  40225b:	scas   al,BYTE PTR es:[edi]
  40225c:	mov    esi,0x6b3f3c2f
  402261:	scas   eax,DWORD PTR es:[edi]
  402262:	test   BYTE PTR ds:0x4efcdfd2,0xef
  402269:	jmp    0x20038d3c
  40226e:	jp     0x4022cb
  402270:	xor    al,0x27
  402272:	pop    ecx
  402273:	aaa    
  402274:	(bad)  
  402275:	loop   0x40227c
  402277:	adc    BYTE PTR [ebp-0x29],dh
  40227a:	sbb    esi,0xffffffaf
  40227d:	dec    esp
  40227e:	dec    esi
  40227f:	pop    ds
  402280:	inc    ebp
  402282:	jl     0x40223f
  402284:	repnz test ecx,esi
  402287:	dec    ebp
  402288:	pop    esp
  402289:	push   edx
  40228a:	in     al,dx
  40228b:	cmp    BYTE PTR [eax-0x34],dl
  40228e:	ret    0xc69e
  402291:	push   ebp
  402292:	int    0x0
  402294:	loopne 0x4022d3
  402296:	mov    ch,0x7
  402298:	mov    ds:0xb85c20dc,eax
  40229d:	sahf   
  40229e:	adc    bh,BYTE PTR [ecx+0x187da2e]
  4022a4:	mov    cl,0xfe
  4022a6:	sub    eax,0x3b70debb
  4022ab:	dec    DWORD PTR [esp+ecx*1]
  4022ae:	or     bh,BYTE PTR [edx-0x1e]
  4022b1:	xor    DWORD PTR [edx],ebp
  4022b3:	adc    eax,0x4fd4fcab
  4022b8:	pop    ebx
  4022b9:	setnp  cl
  4022bc:	(bad)
  4022c0:	idiv   BYTE PTR [eax-0x5d]
  4022c3:	neg    BYTE PTR [edx+0x50]
  4022c6:	mov    al,BYTE PTR [eax-0x57]
  4022c9:	mov    bl,0x94
  4022cb:	sbb    eax,0x99adccc0
  4022d0:	call   0x1232:0x5719e75d
  4022d7:	lock add eax,0x335868a5
  4022dd:	shr    BYTE PTR [ebx-0x283b4703],1
  4022e3:	fdivr  DWORD PTR [eax]
  4022e5:	jne    0x4022e6
  4022e7:	push   cs
  4022e8:	mov    ah,0x44
  4022ea:	xor    DWORD PTR [esi],0xffffffac
  4022ed:	rcr    bl,0x2f
  4022f0:	add    DWORD PTR [edi],eax
  4022f2:	mov    al,0x5c
  4022f4:	jl     0x40236a
  4022f6:	pop    esi
  4022f7:	mov    dl,0xe2
  4022f9:	popf   
  4022fa:	out    dx,al
  4022fb:	aad    0x72
  4022fd:	fwait
  4022fe:	sub    DWORD PTR [ebx],eax
  402300:	das    
  402301:	mov    al,0x9e
  402303:	inc    ebx
  402304:	sub    DWORD PTR [ecx+0x2b],ebx
  402307:	jnp    0x40229d
  402309:	call   0x436b:0xcb1ba5fb
  402310:	sub    eax,0x56e2775b
  402315:	xlat   BYTE PTR ds:[ebx]
  402316:	fist   WORD PTR [edx-0x217afaca]
  40231c:	(bad)  
  40231d:	stc    
  40231e:	mov    ebx,0xca9381b7
  402323:	int    0xb1
  402325:	xor    eax,0x37a3136e
  40232a:	pusha  
  40232b:	pop    DWORD PTR [esp+ecx*8+0x23]
  40232f:	inc    ebx
  402330:	jb     0x4022d3
  402332:	retf   
  402333:	xchg   ebp,eax
  402334:	jecxz  0x4022cb
  402336:	cmp    BYTE PTR [ecx-0x2],ah
  402339:	(bad)  
  40233a:	cmp    BYTE PTR [esi],bh
  40233c:	sub    eax,0x5bda5560
  402341:	xor    ebp,eax
  402343:	xor    eax,0xa6d8f1ad
  402348:	jmp    0x4022cb
  40234a:	mov    ebp,0x205ccc3a
  40234f:	fbld   TBYTE PTR [ebp+0x679aefc]
  402355:	sbb    DWORD PTR [ebx],eax
  402357:	pop    esp
  402358:	dec    edi
  402359:	sub    al,0x60
  40235b:	xor    dh,ah
  40235d:	jnp    0x402369
  40235f:	xchg   esp,eax
  402360:	jbe    0x4022f6
  402362:	jecxz  0x40238b
  402364:	ins    DWORD PTR es:[edi],dx
  402365:	mov    esi,0x1d5eb7e6
  40236a:	jns    0x4023de
  40236c:	repnz pop ss
  40236e:	(bad)  
  40236f:	sbb    dh,cl
  402371:	mov    gs,WORD PTR [esi-0x2c]
  402374:	cdq    
  402375:	inc    ebx
  402376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402377:	call   0xe651e894
  40237c:	adc    eax,0xee73b80c
  402381:	sub    al,0x8d
  402383:	sti    
  402384:	push   0x3194f571
  402389:	(bad)  
  40238b:	ror    BYTE PTR [ebx+0x57dee72f],1
  402391:	bound  eax,QWORD PTR [ecx+ecx*2-0x6a198112]
  402398:	ror    DWORD PTR [edx],1
  40239a:	lds    esp,FWORD PTR ds:0xde37c207
  4023a0:	cs jnp 0x9d200f50
  4023a7:	xor    DWORD PTR [ebx-0x1a19b001],eax
  4023ad:	sbb    DWORD PTR [edx+0x9],esp
  4023b0:	sbb    eax,0x9adaf859
  4023b5:	mov    dh,0xf6
  4023b7:	mov    dh,0x10
  4023b9:	xchg   ebp,eax
  4023ba:	les    edx,FWORD PTR [esi-0x71]
  4023bd:	clc    
  4023be:	inc    ecx
  4023bf:	push   esp
  4023c0:	push   ecx
  4023c1:	or     ecx,DWORD PTR [eax+0x3f]
  4023c4:	or     DWORD PTR [ebx+0x5b],eax
  4023c7:	jmp    0xd13f:0x8799ffa9
  4023ce:	aam    0xa8
  4023d0:	sub    DWORD PTR [esi+0x72],eax
  4023d3:	mov    edx,0x6d374c46
  4023d8:	push   ebx
  4023d9:	ror    ebp,cl
  4023db:	xor    cl,bl
  4023dd:	cmp    DWORD PTR [eax+0x31],eax
  4023e0:	sbb    BYTE PTR [esi-0x6f31984d],ch
  4023e6:	sar    DWORD PTR [eax],cl
  4023e8:	mov    ch,0x9
  4023ea:	push   ebx
  4023eb:	and    al,0x27
  4023ed:	xchg   esi,eax
  4023ee:	leave  
  4023ef:	adc    dh,BYTE PTR [eax+ecx*1]
  4023f2:	mov    ebx,0xdb452baa
  4023f7:	int3   
  4023f8:	add    DWORD PTR [ecx-0x6e362550],eax
  4023fe:	je     0x40238e
  402400:	hlt    
  402401:	in     al,0xb0
  402403:	cmp    ecx,esi
  402405:	mov    ds:0xc535a541,eax
  40240a:	lods   eax,DWORD PTR ds:[esi]
  40240c:	mov    esp,0x609cec88
  402411:	sub    ah,al
  402413:	lahf   
  402414:	pop    esp
  402415:	sbb    DWORD PTR [ebp+0x6124fbf0],0x46
  40241c:	xor    BYTE PTR ds:0x1a0c38a4,dh
  402422:	retf   
  402423:	ins    DWORD PTR es:[edi],dx
  402424:	sub    dh,BYTE PTR [edi]
  402426:	(bad)  
  402427:	dec    esi
  402428:	les    ebx,FWORD PTR [edx+0x74d183d8]
  40242e:	in     al,dx
  40242f:	or     al,0x27
  402431:	and    al,0xdc
  402433:	mov    ebp,0x82effde6
  402438:	lock ror BYTE PTR [ecx-0x4961a851],cl
  40243f:	cmp    DWORD PTR [edx-0x681bf3e3],0xffffffea
  402446:	pushf  
  402447:	mov    ah,0xd0
  402449:	fiadd  DWORD PTR [ecx-0x433f1472]
  40244f:	pop    es
  402450:	cmc    
  402451:	and    ecx,DWORD PTR [esi*8-0x2f3a9517]
  402458:	add    eax,0xe1e2bd51
  40245d:	call   0xf77a:0x95e7c530
  402464:	retf   0x81e1
  402467:	inc    edx
  402468:	imul   ebp,DWORD PTR [esi],0x4cf50539
  40246e:	jne    0x402442
  402470:	mov    WORD PTR [esi-0x31],?
  402473:	jnp    0x40246f
  402475:	jecxz  0x4024ea
  402477:	fsubr  st(5),st
  402479:	iret   
  40247a:	out    dx,al
  40247b:	popf   
  40247c:	push   cs
  40247d:	cld    
  40247e:	xchg   ebx,eax
  40247f:	std    
  402480:	aas    
  402481:	adc    eax,0x248a2543
  402486:	mov    ds:0x13eb100,eax
  40248b:	cmc    
  40248c:	dec    ebp
  40248d:	sub    eax,0xa474a343
  402492:	shl    edi,1
  402494:	jno    0x4024cc
  402496:	ins    DWORD PTR es:[edi],dx
  402497:	mov    esp,0xf77ba179
  40249c:	sub    ebp,DWORD PTR [eax+edi*1+0x568523e]
  4024a3:	fistp  DWORD PTR [eax+0x4e8db111]
  4024a9:	or     al,0xe4
  4024ab:	pop    eax
  4024ac:	js     0x4024f2
  4024ae:	mov    ecx,0xd45e369d
  4024b3:	sbb    DWORD PTR [esi+0x60],edi
  4024b6:	or     BYTE PTR [ebx-0x23],ah
  4024b9:	dec    ebp
  4024ba:	loopne 0x4024fd
  4024bc:	and    BYTE PTR [ebx+0xb2b5cd],ch
  4024c2:	and    eax,0xc6d7ee00
  4024c7:	gs ret 
  4024c9:	aaa    
  4024ca:	lds    edx,FWORD PTR [edx]
  4024cc:	pop    edi
  4024cd:	rol    DWORD PTR ds:0x646c3c4e,cl
  4024d3:	jns    0x4024bf
  4024d5:	sub    cl,BYTE PTR [edi]
  4024d7:	dec    esi
  4024d8:	jmp    0x45b0:0x6258c4f2
  4024df:	sbb    DWORD PTR [edx-0xe5dc03a],edi
  4024e5:	dec    ebp
  4024e6:	(bad)  [ecx]
  4024e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024e9:	push   esp
  4024ea:	xchg   cl,cl
  4024ec:	xor    ah,BYTE PTR es:[eax]
  4024ef:	ins    BYTE PTR es:[edi],dx
  4024f0:	mov    ecx,0x4a6b9321
  4024f5:	xchg   edx,eax
  4024f6:	or     DWORD PTR [ecx+ebp*2],edi
  4024f9:	pop    eax
  4024fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024fb:	and    eax,0x4247483
  402500:	mov    ch,0xf1
  402502:	fsub   QWORD PTR [eax-0x5902b139]
  402508:	sahf   
  402509:	pushf  
  40250a:	lea    ecx,[edx]
  40250c:	add    eax,0xccdb019
  402511:	cmp    eax,0x30ad8159
  402516:	add    eax,0x1187eb5d
  40251b:	mov    cl,0x8f
  40251d:	(bad)  
  40251e:	sar    BYTE PTR [ebp-0x6b24be98],cl
  402524:	mov    ch,0xe7
  402526:	stos   BYTE PTR es:[edi],al
  402527:	mov    esi,0xf55299b0
  40252c:	jl     0x402565
  40252e:	adc    ah,al
  402530:	mov    al,0xa
  402532:	jge    0x4025a4
  402534:	inc    ebx
  402535:	ds iret 
  402537:	push   cs
  402538:	fisub  WORD PTR [ebp+eax*8+0x6be81153]
  40253f:	sub    ebp,DWORD PTR [esi]
  402541:	div    esi
  402543:	loope  0x4024e1
  402545:	lods   eax,DWORD PTR ds:[esi]
  402546:	cmc    
  402547:	mov    dl,bl
  402549:	test   DWORD PTR [eax+0x52479d10],0x6db4c63c
  402553:	mov    ebx,0x711e9169
  402558:	in     al,dx
  402559:	push   edx
  40255a:	pushf  
  40255b:	push   es
  40255c:	leave  
  40255d:	test   al,0x3
  40255f:	ror    BYTE PTR [eax+0x8],cl
  402562:	push   ecx
  402563:	and    al,0xb3
  402565:	lock push edx
  402567:	jle    0x40252e
  402569:	je     0x4025cb
  40256b:	mov    dh,0xcb
  40256d:	aam    0xf
  40256f:	mov    bl,0x9c
  402571:	xlat   BYTE PTR ds:[ebx]
  402572:	cdq    
  402573:	std    
  402574:	iret   
  402575:	xor    BYTE PTR [edx+0x73],cl
  402578:	fidiv  DWORD PTR [esi-0x7c]
  40257b:	loop   0x402581
  40257d:	shl    DWORD PTR [edi-0x4b],1
  402580:	xor    ecx,eax
  402582:	cmc    
  402583:	mov    edx,DWORD PTR [esi]
  402585:	jmp    0xccd90ba6
  40258a:	mov    dl,dl
  40258c:	stos   BYTE PTR es:[edi],al
  40258d:	pop    eax
  40258e:	faddp  st(6),st
  402590:	enter  0xf090,0x63
  402594:	add    bh,BYTE PTR ds:0x1fb3ec87
  40259a:	data16 scas al,BYTE PTR es:[edi]
  40259c:	push   ss
  40259d:	pop    edi
  40259e:	(bad)  
  40259f:	ret    0xed67
  4025a2:	mov    eax,0x276191ed
  4025a7:	dec    eax
  4025a8:	in     al,dx
  4025a9:	pop    esp
  4025aa:	dec    esi
  4025ab:	adc    al,0x8a
  4025ad:	test   BYTE PTR [ebp+0x295d1a7],ch
  4025b3:	push   ebx
  4025b4:	imul   esi,edx,0x8a4595ce
  4025ba:	xchg   edi,eax
  4025bb:	fcmovbe st,st(7)
  4025bd:	xor    eax,0xde6314cd
  4025c2:	add    ah,BYTE PTR [ebx+0xf1e6db8]
  4025c8:	mov    ds:0x76af0eb7,eax
  4025cd:	xchg   ebp,eax
  4025ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025cf:	cdq    
  4025d0:	call   0xde30:0xda0bee8a
  4025d7:	out    0x4f,eax
  4025d9:	fist   WORD PTR [esi]
  4025db:	jne    0x402566
  4025dd:	pop    esi
  4025de:	pop    esp
  4025df:	std    
  4025e0:	adc    ebx,DWORD PTR [edx-0x1728f04a]
  4025e6:	aas    
  4025e7:	sti    
  4025e8:	add    DWORD PTR [eax+ebx*2-0x4fb29a00],ebx
  4025ef:	hlt    
  4025f0:	ret    
  4025f1:	(bad)
  4025f5:	push   cs
  4025f6:	inc    esp
  4025f7:	dec    eax
  4025f8:	dec    ebx
  4025f9:	sub    al,0x19
  4025fb:	icebp  
  4025fc:	sub    cl,bl
  4025fe:	xchg   ecx,eax
  4025ff:	(bad)  
  402600:	sbb    al,0xc5
  402602:	jne    0x40266c
  402604:	les    ebp,FWORD PTR [ebx+0x51cb5f14]
  40260a:	adc    edi,ebp
  40260c:	pop    ebx
  40260d:	std    
  40260e:	aam    0x9c
  402610:	jecxz  0x402688
  402612:	pop    esp
  402613:	cmp    edx,DWORD PTR [edi-0x78]
  402616:	mov    dl,0x77
  402618:	mov    bl,dh
  40261a:	enter  0xaf51,0x6c
  40261e:	test   BYTE PTR [ecx-0x5de9735],al
  402624:	mov    ?,WORD PTR [edx-0x70]
  402627:	push   esi
  402628:	xor    al,BYTE PTR [esp+eax*1+0x64fc4356]
  40262f:	sbb    esi,esp
  402631:	lods   al,BYTE PTR ds:[esi]
  402632:	mov    ebp,0xf558956f
  402637:	and    edx,DWORD PTR [ebp-0xeeb07a7]
  40263d:	sub    BYTE PTR [edx-0x3a7ee565],0xa1
  402644:	int3   
  402645:	mov    bh,0x16
  402647:	ret    0x519d
  40264a:	push   es
  40264b:	adc    al,BYTE PTR [ecx+0x4]
  40264e:	adc    dh,BYTE PTR [eax-0x3eb7c19d]
  402654:	inc    ebx
  402655:	ja     0x4026c1
  402657:	fs xor eax,0x16a2198a
  40265d:	add    ebp,DWORD PTR [eax+0x3f]
  402660:	into   
  402661:	cmovno esi,DWORD PTR [eax]
  402664:	lods   al,BYTE PTR ds:[esi]
  402665:	pop    edx
  402666:	sub    WORD PTR [edx],sp
  402669:	xor    BYTE PTR [ebp-0x460ebc2],0xa4
  402670:	add    dh,bh
  402672:	add    edx,ebx
  402674:	pop    edi
  402675:	out    dx,al
  402676:	ss jl  0x40266d
  402679:	cwde   
  40267a:	adc    edx,esp
  40267c:	push   ecx
  40267d:	xor    esi,DWORD PTR [ebx]
  40267f:	imul   esi,DWORD PTR [ecx+ebp*8-0x43560da9],0xac8b3f13
  40268a:	push   eax
  40268b:	sub    BYTE PTR [edx-0x73],ch
  40268e:	or     ecx,DWORD PTR [edi+0x79057de]
  402694:	add    ecx,DWORD PTR ds:0xba5d8f65
  40269a:	mov    dl,BYTE PTR [ebx]
  40269c:	cld    
  40269d:	in     al,dx
  40269e:	fsubr  QWORD PTR [edi+0x47]
  4026a1:	pushf  
  4026a2:	dec    eax
  4026a3:	jmp    0x86b58d58
  4026a8:	cmp    ch,cl
  4026aa:	lahf   
  4026ab:	sbb    bl,0x39
  4026ae:	inc    edx
  4026af:	imul   esi,DWORD PTR ds:0x81d96722,0xd9ca56f7
  4026b9:	icebp  
  4026ba:	rcr    DWORD PTR [edi],1
  4026bc:	mov    ah,0xc1
  4026be:	push   ds
  4026bf:	stos   BYTE PTR es:[edi],al
  4026c0:	sub    al,0xb9
  4026c2:	fld    QWORD PTR [esi]
  4026c4:	inc    eax
  4026c5:	sub    al,0xb0
  4026c7:	cmp    eax,0xe65ed01a
  4026cc:	add    bh,BYTE PTR [ecx+0x53]
  4026cf:	jecxz  0x402679
  4026d1:	xchg   DWORD PTR [ecx],esi
  4026d3:	pop    esi
  4026d4:	xlat   BYTE PTR ds:[ebx]
  4026d5:	sbb    ebp,DWORD PTR [eax-0x3b]
  4026d8:	sbb    ebp,DWORD PTR [ebx]
  4026da:	cli    
  4026db:	inc    esp
  4026dc:	dec    ebp
  4026dd:	mov    dl,ch
  4026df:	sub    eax,0x8e3fa43d
  4026e4:	mov    edx,0x4f68bcd
  4026e9:	ss aam 0x96
  4026ec:	retf   
  4026ed:	imul   esp,DWORD PTR [si+0x773d],0x25
  4026f3:	push   es
  4026f4:	js     0x402742
  4026f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026f7:	fcmovne st,st(1)
  4026f9:	jmp    0xcb6f:0xc9dea9e7
  402700:	push   eax
  402701:	ficom  DWORD PTR [ecx-0x7e6ec1f7]
  402707:	sbb    eax,DWORD PTR [eax]
  402709:	pop    edi
  40270a:	mov    ecx,0x1a0150bb
  40270f:	leave  
  402710:	nop
  402711:	and    eax,0x786e5460
  402716:	cmp    al,0x2e
  402718:	inc    esp
  402719:	test   DWORD PTR [esi-0x6c],ebp
  40271c:	call   0x56399a90
  402721:	jle    0x402701
  402723:	in     al,dx
  402724:	cmp    DWORD PTR [eax-0x60626f3d],0xffffffee
  40272b:	adc    BYTE PTR [edx+0x269679ca],al
  402731:	mov    BYTE PTR [edx],bl
  402733:	ins    DWORD PTR es:[edi],dx
  402734:	push   0x9bb8a249
  402739:	inc    esp
  40273a:	mov    bl,0xaa
  40273c:	aas    
  40273d:	ins    DWORD PTR es:[edi],dx
  40273e:	popa   
  40273f:	xor    BYTE PTR [edi],dl
  402741:	sub    eax,0xf9e50068
  402746:	jns    0x4027bd
  402748:	fld    QWORD PTR [edi-0x3d]
  40274b:	dec    eax
  40274c:	mov    ebp,0x8e579b10
  402751:	push   0xd09353d5
  402756:	push   0x13d2f873
  40275b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40275c:	(bad)  [ebp+0x1b]
  40275f:	and    eax,0x31fc5940
  402764:	cmp    DWORD PTR ds:0x50d00d38,ebx
  40276a:	mov    ds:0x5e79ce66,al
  40276f:	mov    ds:0x7727fc,eax
  402774:	rol    DWORD PTR [edi+ecx*2],cl
  402777:	mov    al,ds:0xc3f9b929
  40277c:	lods   eax,DWORD PTR ds:[esi]
  40277d:	nop
  40277e:	aad    0xe
  402780:	sbb    edi,DWORD PTR [edx-0x71]
  402783:	and    eax,0xbe4aff21
  402788:	popa   
  402789:	pop    ebx
  40278a:	mov    eax,0x58c397cf
  40278f:	out    0x13,eax
  402791:	or     esp,DWORD PTR [edx]
  402793:	ror    DWORD PTR [eax+0x6571e720],0x95
  40279a:	out    dx,eax
  40279b:	mov    cl,0xc3
  40279d:	sbb    esp,ecx
  40279f:	scas   al,BYTE PTR es:[edi]
  4027a0:	mov    ds:0x9690ec37,al
  4027a5:	adc    eax,0xc873f6d0
  4027aa:	mov    bh,0xf4
  4027ac:	out    0x78,eax
  4027ae:	out    0x43,eax
  4027b0:	pusha  
  4027b1:	jecxz  0x402789
  4027b3:	cmp    BYTE PTR ds:[edx-0x264aace5],ch
  4027ba:	bound  ecx,QWORD PTR [esi-0x8]
  4027bd:	xlat   BYTE PTR ss:[ebx]
  4027bf:	fisubr DWORD PTR [edi+0x30f1c90d]
  4027c5:	clc    
  4027c6:	inc    edx
  4027c7:	pusha  
  4027c8:	mov    eax,ds:0x86fe56ea
  4027cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ce:	fisub  WORD PTR [edx]
  4027d0:	cmp    cl,BYTE PTR [edx]
  4027d2:	jb     0x4027a0
  4027d4:	push   ds
  4027d5:	or     dh,bh
  4027d7:	out    0xaf,eax
  4027d9:	xchg   ebp,eax
  4027da:	jb     0x4027ff
  4027dc:	pmaxsw mm7,QWORD PTR [edx+0x72]
  4027e0:	(bad)  
  4027e1:	sbb    eax,DWORD PTR [edx+0x53c30e9d]
  4027e7:	test   al,0xe
  4027e9:	idiv   DWORD PTR [edx-0x20]
  4027ec:	and    al,0x7
  4027ee:	cdq    
  4027ef:	xor    al,0x6a
  4027f1:	mov    eax,0x3a88cabf
  4027f6:	jmp    0x8a06:0xa41cd17e
  4027fd:	jnp    0x40283f
  4027ff:	xchg   esp,eax
  402800:	sub    edx,DWORD PTR [eax]
  402802:	xchg   edi,eax
  402803:	pop    es
  402804:	ja     0x4027d9
  402806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402807:	(bad)  
  402808:	in     al,0x27
  40280a:	xor    DWORD PTR [ebx+0x7a154636],0x1a787d06
  402814:	xor    eax,DWORD PTR [edi]
  402816:	xchg   ecx,eax
  402817:	and    esp,DWORD PTR [ebx]
  402819:	std    
  40281a:	retf   0x7a9b
  40281d:	shl    DWORD PTR [eax],cl
  40281f:	xor    BYTE PTR [ebx-0xa],cl
  402822:	int    0x67
  402824:	pop    es
  402825:	pop    ecx
  402826:	sti    
  402827:	dec    ecx
  402828:	mov    dl,BYTE PTR [edi]
  40282a:	lods   eax,DWORD PTR ds:[esi]
  40282b:	mov    BYTE PTR [ecx+0x55b7b4b9],bh
  402831:	loope  0x402842
  402833:	dec    eax
  402834:	fdiv   st(6),st
  402836:	shl    DWORD PTR [edx-0x7f],0x3e
  40283a:	call   0xe66e8605
  40283f:	sbb    eax,0x87a2aca2
  402844:	pop    esi
  402845:	pop    edx
  402846:	ds pushf 
  402848:	adc    ecx,ebp
  40284a:	sti    
  40284b:	popf   
  40284c:	lea    esi,[ebp-0x45f13f72]
  402852:	mov    ds:0xf86ec773,eax
  402857:	(bad)  
  402858:	jbe    0x4028a8
  40285a:	jno    0x4028c2
  40285c:	jg     0x40288c
  40285e:	xor    DWORD PTR [edx+0x22],0x66b92db8
  402865:	aad    0xcd
  402867:	adc    al,0x72
  402869:	pop    es
  40286a:	call   0x30f5:0x9a98751e
  402871:	sbb    ebp,edx
  402873:	daa    
  402874:	addr16 cld 
  402876:	fstp   DWORD PTR [ecx]
  402878:	aas    
  402879:	shl    BYTE PTR [edi+ecx*8+0x20],cl
  40287d:	pop    ds
  40287e:	mov    ebp,0xbb637f51
  402883:	jge    0x4028ee
  402885:	jmp    0x2ea6:0xcb18af65
  40288c:	adc    al,0x17
  40288e:	icebp  
  40288f:	push   0x85699858
  402894:	cmp    BYTE PTR [edi+0x11],0xf9
  402898:	in     eax,0x2d
  40289a:	jo     0x4028d5
  40289c:	test   al,0x90
  40289e:	addr16 jae 0x40287f
  4028a1:	sbb    al,0xb4
  4028a3:	pop    DWORD PTR [edx-0x65]
  4028a6:	jae    0x402877
  4028a8:	sub    eax,0xfd72da68
  4028ad:	(bad)  
  4028af:	shl    BYTE PTR [edi],1
  4028b1:	push   esp
  4028b2:	(bad)  
  4028b3:	std    
  4028b4:	jnp    0x402891
  4028b6:	pop    esp
  4028b7:	lds    esi,FWORD PTR [edx+0x7df3b8fa]
  4028bd:	stos   DWORD PTR es:[edi],eax
  4028be:	xchg   esp,eax
  4028bf:	mov    BYTE PTR [eax+eax*2],cl
  4028c2:	cld    
  4028c3:	wbinvd 
  4028c5:	neg    DWORD PTR [ebp+0x75da37b3]
  4028cb:	push   edi
  4028cc:	xor    DWORD PTR [eax-0x5fbc001c],ebx
  4028d2:	sub    ch,ch
  4028d4:	mov    dh,0x40
  4028d6:	xchg   esi,eax
  4028d7:	and    DWORD PTR [ebx+0x4c],esp
  4028da:	or     dl,BYTE PTR [esi]
  4028dc:	mov    eax,ds:0x39a10355
  4028e1:	dec    eax
  4028e2:	clc    
  4028e3:	sti    
  4028e4:	mov    dl,0x99
  4028e6:	inc    edx
  4028e7:	xchg   DWORD PTR [edi+esi*4+0x21],eax
  4028eb:	mov    esi,0xf5a6b730
  4028f0:	imul   ebx,DWORD PTR [ecx+0x5f],0xffffffbd
  4028f4:	shr    DWORD PTR [ecx],0xf9
  4028f7:	cmp    eax,0xfd7a9746
  4028fc:	pop    edx
  4028fd:	and    ah,BYTE PTR [edi+ebx*1]
  402900:	aad    0x7e
  402902:	test   BYTE PTR [ebx+eax*2-0x72],al
  402906:	rcr    DWORD PTR [esi+eax*1],cl
  402909:	rcl    DWORD PTR [ebp+0x2a],0xcd
  40290d:	jp     0x4028fa
  40290f:	push   cs
  402910:	sub    DWORD PTR [edx],esp
  402912:	rcr    DWORD PTR [edx-0x2706be4a],cl
  402918:	inc    ebx
  402919:	mov    ds:0x2363e6c6,eax
  40291e:	clc    
  40291f:	or     al,0x5
  402922:	add    eax,0xb3b54f2
  402927:	pop    ss
  402928:	sub    DWORD PTR [edx],esp
  40292a:	mov    edi,DWORD PTR [ebx-0x2f16e9e1]
  402930:	(bad)
  402934:	outs   dx,BYTE PTR ds:[esi]
  402935:	jnp    0x40296b
  402937:	hlt    
  402938:	sti    
  402939:	jp     0x40299b
  40293b:	xchg   esi,eax
  40293c:	sbb    al,0x27
  40293e:	cmp    ch,BYTE PTR [ebx]
  402940:	and    ecx,DWORD PTR [ecx+esi*8+0xe0de7a0]
  402947:	ins    DWORD PTR es:[edi],dx
  402948:	sub    al,0xbd
  40294a:	jno    0x402955
  40294c:	aam    0xe9
  40294e:	xchg   edi,eax
  40294f:	icebp  
  402950:	stc    
  402951:	jns    0x4029a4
  402953:	cmp    eax,0x6baf613
  402958:	mov    bh,0xa8
  40295a:	sbb    al,0x3d
  40295c:	stc    
  40295d:	test   eax,0x6abca898
  402962:	out    0x56,eax
  402964:	ret    
  402965:	dec    edi
  402966:	jbe    0x4028e9
  402968:	jo     0x4029e1
  40296a:	push   0xef55bac0
  40296f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402970:	mov    ds:0x83f2f942,eax
  402975:	inc    esi
  402976:	fnstcw WORD PTR [eax+0x43d3d2ce]
  40297c:	dec    esp
  40297d:	out    dx,eax
  40297e:	jmp    0xf0d82079
  402983:	scas   al,BYTE PTR es:[edi]
  402984:	(bad)  
  402986:	imul   esi,esp,0x414ea445
  40298c:	xchg   ecx,eax
  40298d:	add    ebp,ebx
  40298f:	jnp    0x4029f7
  402991:	xor    ch,BYTE PTR [ecx]
  402993:	popf   
  402994:	lods   al,BYTE PTR ds:[esi]
  402995:	push   cs
  402996:	aas    
  402997:	call   0x6d2b3668
  40299c:	adc    DWORD PTR [eax-0xb],edi
  40299f:	sbb    al,BYTE PTR [edi+ebp*8-0x920b756]
  4029a6:	mov    ds:0xcd8834f7,al
  4029ab:	adc    ecx,DWORD PTR [edx*8-0x30653959]
  4029b2:	pop    eax
  4029b3:	push   ss
  4029b4:	dec    edi
  4029b5:	jno    0x402a10
  4029b7:	mov    edi,0xc0fce1a7
  4029bc:	mov    edx,0x5f9a6546
  4029c1:	sub    esi,DWORD PTR [ebx+0x57]
  4029c4:	mov    esi,0x228f4f3f
  4029c9:	pop    edi
  4029ca:	cmc    
  4029cb:	(bad)  
  4029cc:	gs out dx,al
  4029ce:	popf   
  4029cf:	idiv   bl
  4029d1:	sbb    BYTE PTR [ebx],bl
  4029d3:	mov    dh,0x8d
  4029d5:	pop    edx
  4029d6:	cs sbb al,dl
  4029d9:	adc    eax,0xc3e2902
  4029de:	mov    eax,ds:0xcd39c524
  4029e3:	gs inc edx
  4029e5:	mov    cl,0x20
  4029e7:	pop    ecx
  4029e8:	fst    QWORD PTR [ebx]
  4029ea:	imul   edi,DWORD PTR [edi-0x320f236],0x1a043823
  4029f4:	lahf   
  4029f5:	cmp    eax,DWORD PTR [edx+0x46]
  4029f8:	scas   al,BYTE PTR es:[edi]
  4029f9:	es push 0xcb0d561
  4029ff:	test   eax,0x2fe888ab
  402a04:	inc    esi
  402a05:	add    ch,BYTE PTR ds:0xb27b346d
  402a0b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402a0d:	inc    ebp
  402a0e:	add    BYTE PTR [eax],bl
  402a10:	mov    bh,0xda
  402a12:	pop    edx
  402a13:	outs   dx,DWORD PTR ds:[esi]
  402a14:	inc    bp
  402a16:	(bad)  
  402a17:	dec    ebp
  402a18:	mov    ebx,0xd03502b9
  402a1d:	div    BYTE PTR [edi]
  402a1f:	(bad)  
  402a20:	dec    ebx
  402a21:	cmp    edx,0x1ee9613a
  402a27:	sbb    al,0xf9
  402a29:	sub    edi,DWORD PTR [edi+0x5e20dfac]
  402a2f:	jnp    0x4029e2
  402a31:	into   
  402a32:	es pop es
  402a34:	xor    eax,0x71a8eb9
  402a39:	and    BYTE PTR [ebp+eiz*1+0x65],dh
  402a3d:	out    dx,al
  402a3e:	repz cmp al,0x27
  402a42:	fmul   st,st(0)
  402a44:	es in  al,0x47
  402a47:	in     eax,0x40
  402a49:	mov    eax,ds:0xc884c27e
  402a4e:	dec    edi
  402a4f:	retf   0xb5e8
  402a52:	ficom  DWORD PTR [ebx+0x4b]
  402a55:	jo     0x4029f7
  402a57:	sub    DWORD PTR [ecx+0x4b],0xffffffa4
  402a5b:	mov    ds:0x7ff175,eax
  402a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a61:	or     ch,BYTE PTR [edi]
  402a63:	repz add al,BYTE PTR [ebp+0x26da49a5]
  402a6a:	and    dh,al
  402a6c:	dec    edx
  402a6d:	fdiv   DWORD PTR [ecx]
  402a6f:	leave  
  402a70:	clc    
  402a71:	dec    ecx
  402a72:	sub    DWORD PTR [eax-0x53fe61fa],0xe85ca850
  402a7c:	rcr    DWORD PTR [ebx],0xf
  402a7f:	jmp    0xe76e:0x203fdd77
  402a86:	push   ds
  402a87:	imul   ebx,ebp,0x74
  402a8a:	jl     0x402afe
  402a8c:	pop    es
  402a8d:	or     BYTE PTR [eax],cl
  402a8f:	pop    edi
  402a90:	pushfw 
  402a92:	lahf   
  402a93:	pop    esi
  402a94:	xor    eax,0x71faa826
  402a99:	push   eax
  402a9a:	jae    0x402a36
  402a9c:	fsub   st(0),st
  402a9e:	mov    bl,0x9d
  402aa0:	loopne 0x402a88
  402aa2:	cdq    
  402aa3:	lahf   
  402aa4:	aam    0x79
  402aa6:	mov    dl,0xd2
  402aa8:	out    dx,eax
  402aa9:	push   cx
  402aab:	mov    eax,ds:0xa8ef49e2
  402ab0:	sti    
  402ab1:	jno    0x402a5c
  402ab3:	mov    ebx,0xb03d764c
  402ab8:	inc    ebp
  402ab9:	and    BYTE PTR [eax-0x60],bh
  402abc:	icebp  
  402abd:	jge    0x402aa2
  402abf:	adc    eax,0x94088b9
  402ac4:	jg     0x402a97
  402ac6:	mov    esp,0xd49a529b
  402acb:	test   al,0x7d
  402acd:	mov    ds:0x13ace973,eax
  402ad2:	sub    bh,BYTE PTR [edx+0x15]
  402ad5:	fnstenv [ebx+0x7e]
  402ad8:	xor    DWORD PTR [ecx+eiz*2-0x47],esp
  402adc:	or     bl,ah
  402ade:	and    bl,BYTE PTR [edi]
  402ae0:	xor    dh,ah
  402ae2:	loopne 0x402af2
  402ae4:	pop    edx
  402ae5:	es dec ebp
  402ae7:	sar    BYTE PTR [ecx+0x30],cl
  402aea:	add    al,0xa8
  402aec:	scas   eax,DWORD PTR es:[edi]
  402aed:	retf   
  402aee:	aaa    
  402aef:	ret    0x9b61
  402af2:	leave  
  402af3:	mov    al,ds:0x9e12d23e
  402af8:	sbb    DWORD PTR [edx+0x1d6c6e30],edx
  402afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aff:	xchg   BYTE PTR ds:[ecx],bl
  402b02:	out    dx,al
  402b03:	div    BYTE PTR [esi]
  402b05:	ins    DWORD PTR es:[edi],dx
  402b06:	push   0xffffffec
  402b08:	add    ebp,DWORD PTR [eax+0x66]
  402b0b:	outs   dx,DWORD PTR ds:[esi]
  402b0c:	repnz add al,0xdb
  402b0f:	jnp    0x402aef
  402b11:	mov    esi,0x2cfc0602
  402b16:	(bad)  
  402b17:	stos   BYTE PTR es:[edi],al
  402b18:	push   esi
  402b19:	je     0x402b06
  402b1b:	cli    
  402b1c:	rcl    BYTE PTR [eax],cl
  402b1e:	xor    eax,0x5548b442
  402b23:	cmp    ax,0xef76
  402b27:	(bad)  
  402b28:	cmp    eax,0x3887e25
  402b2d:	loopne 0x402b2e
  402b2f:	mov    ecx,0x4234f45c
  402b34:	mov    ecx,ecx
  402b36:	lock mov BYTE PTR [edi+edx*8-0x32dd292e],al
  402b3e:	fstp   QWORD PTR [ecx]
  402b40:	popa   
  402b41:	(bad)  
  402b42:	inc    eax
  402b43:	and    bh,BYTE PTR [edi+0x6b]
  402b46:	mov    eax,ds:0x1e45685a
  402b4b:	ja     0x402ba8
  402b4d:	mov    esi,0xdac90a8a
  402b52:	xor    cl,BYTE PTR [esp+ebx*1-0x5d9871f0]
  402b59:	mov    ds:0xeea9fc65,al
  402b5e:	das    
  402b5f:	call   0x8101:0x74af2f69
  402b66:	cld    
  402b67:	out    0xa0,al
  402b69:	rcl    DWORD PTR [edx-0x37],0x7b
  402b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b6e:	add    al,0x82
  402b70:	shl    DWORD PTR [edx-0x26],cl
  402b73:	les    ebp,FWORD PTR [ebp-0x34]
  402b76:	das    
  402b77:	mov    edx,0xcdd286f4
  402b7c:	inc    esp
  402b7d:	jecxz  0x402bf4
  402b7f:	stos   BYTE PTR es:[edi],al
  402b80:	jp     0x402bf1
  402b82:	out    0x1,eax
  402b84:	fild   QWORD PTR [eax+0x75]
  402b87:	pop    es
  402b88:	jp     0x402b38
  402b8a:	cli    
  402b8b:	fisubr WORD PTR [esi-0x28]
  402b8e:	test   BYTE PTR [ebx+0x4ffbe494],0x8a
  402b95:	xor    dl,BYTE PTR [edi+0x311c2c17]
  402b9b:	mov    ch,0x21
  402b9d:	enter  0x56d4,0xe3
  402ba1:	clc    
  402ba2:	in     al,0x53
  402ba4:	mov    WORD PTR [bx+si],?
  402ba7:	fld    TBYTE PTR ds:0xc5cced6d
  402bad:	sysexit 
  402baf:	jo     0x402c0f
  402bb1:	cmp    eax,0x311c6568
  402bb6:	cli    
  402bb7:	call   0xa738cad1
  402bbc:	ins    DWORD PTR es:[edi],dx
  402bbd:	nop
  402bbe:	fidiv  WORD PTR [ebx+0x7]
  402bc1:	pop    ebp
  402bc2:	push   0xdde27230
  402bc7:	mov    bh,0xbe
  402bc9:	jp     0x402bf5
  402bcb:	mov    BYTE PTR [ebp-0x231c8a4c],dh
  402bd1:	sub    DWORD PTR [eax+0x5209ee21],esi
  402bd7:	jmp    0xe822:0x64ca8dc1
  402bde:	js     0x402c5b
  402be0:	ror    BYTE PTR [ebx+0xf],1
  402be3:	jp     0x402ba0
  402be5:	mov    DWORD PTR [ebx-0x29],edi
  402be8:	xlat   BYTE PTR fs:[ebx]
  402bea:	fisubr DWORD PTR [ecx]
  402bec:	fadd   st,st(3)
  402bee:	and    eax,0x717b9ba5
  402bf3:	jbe    0x402c02
  402bf5:	adc    ecx,ebp
  402bf7:	xchg   bh,cl
  402bf9:	mov    ecx,esi
  402bfb:	mov    ah,0xb1
  402bfd:	pop    esi
  402bfe:	rol    BYTE PTR [edi+0x45],cl
  402c01:	int3   
  402c02:	cmp    dh,cl
  402c04:	xchg   ecx,eax
  402c05:	stc    
  402c06:	in     al,0x4a
  402c08:	std    
  402c09:	aad    0xe2
  402c0b:	test   BYTE PTR [esi+0xb],bl
  402c0e:	push   esi
  402c0f:	loope  0x402c06
  402c11:	or     DWORD PTR [ebx],ecx
  402c13:	lods   al,BYTE PTR ds:[esi]
  402c14:	or     dh,dh
  402c16:	push   0x37
  402c18:	xor    al,0xc4
  402c1a:	(bad)  
  402c1b:	ins    DWORD PTR es:[edi],dx
  402c1c:	fcom   QWORD PTR [edx]
  402c1e:	and    ebx,DWORD PTR [edi]
  402c20:	adc    al,0x77
  402c22:	lea    edx,[eax+0x48]
  402c25:	out    dx,eax
  402c26:	retf   
  402c27:	sub    BYTE PTR [esi-0x354d744],cl
  402c2d:	cwde   
  402c2e:	in     al,0xc0
  402c30:	ds ds stos BYTE PTR es:[edi],al
  402c33:	cdq    
  402c34:	inc    edx
  402c35:	(bad)  
  402c36:	mov    dl,0x75
  402c38:	xchg   DWORD PTR [bp+0x73],ebx
  402c3c:	retf   
  402c3d:	mov    eax,0xe549a306
  402c42:	shr    BYTE PTR [ebx+ebp*4],1
  402c45:	cmp    eax,0xf24d08ee
  402c4a:	ficomp DWORD PTR [ecx]
  402c4c:	rcr    BYTE PTR [esi-0x49475b2c],0x78
  402c53:	mov    bl,0xc3
  402c55:	aam    0xde
  402c57:	mov    eax,0x648b81
  402c5c:	jg     0x402c52
  402c5e:	jge    0x402c62
  402c60:	sub    DWORD PTR [ecx+0x49307e11],ecx
  402c66:	fbstp  TBYTE PTR [edx+0x55]
  402c69:	inc    edx
  402c6a:	jne    0x402c1c
  402c6c:	push   ss
  402c6d:	or     edi,ebx
  402c6f:	push   0xffffffa4
  402c71:	and    al,bh
  402c73:	mov    WORD PTR [eax],gs
  402c75:	fidivr WORD PTR [edi]
  402c77:	pop    esp
  402c78:	cmp    DWORD PTR [eax-0x7b1ec08d],edx
  402c7e:	retf   0xa6c
  402c81:	dec    ecx
  402c82:	sbb    esp,DWORD PTR [eax-0x5e]
  402c85:	scas   al,BYTE PTR es:[edi]
  402c86:	ins    BYTE PTR es:[edi],dx
  402c87:	(bad)  
  402c88:	popf   
  402c89:	fcomp  QWORD PTR [ecx+ebx*2+0x26]
  402c8d:	adc    BYTE PTR [edx-0x458960e4],dh
  402c93:	sbb    ebp,DWORD PTR [ebp-0x54]
  402c96:	and    BYTE PTR [esi-0x3becd080],dh
  402c9c:	call   0xfd23:0x23d0eed
  402ca3:	jge    0x402cb9
  402ca5:	stos   BYTE PTR es:[edi],al
  402ca6:	jle    0x402ca2
  402ca8:	repnz pop edx
  402caa:	mov    bl,0x71
  402cac:	int3   
  402cad:	rol    ebx,cl
  402caf:	mul    DWORD PTR [eax-0xa006007]
  402cb5:	or     eax,0xc5e1512
  402cba:	mov    ebx,fs
  402cbc:	inc    ebp
  402cbd:	cs push edx
  402cbf:	jb     0x402ca1
  402cc1:	aas    
  402cc2:	dec    edx
  402cc3:	adc    dl,BYTE PTR [ecx+0x12]
  402cc6:	data16 js 0x402ca9
  402cc9:	into   
  402cca:	and    ch,0x46
  402ccd:	(bad)  [esi]
  402ccf:	add    al,BYTE PTR [ebp-0x9]
  402cd2:	cmp    DWORD PTR [ebx+0x5c],eax
  402cd5:	mov    ch,0x2d
  402cd7:	push   ds
  402cd8:	shr    BYTE PTR [esi+0x4eff3be9],0x56
  402cdf:	xchg   esi,eax
  402ce0:	out    0xe6,al
  402ce2:	loop   0x402cbb
  402ce4:	lahf   
  402ce5:	and    cl,dh
  402ce7:	jle    0x402d35
  402ce9:	xor    dl,0x2a
  402cec:	sar    BYTE PTR [edi],1
  402cee:	pushf  
  402cef:	jl     0x402ce8
  402cf1:	cdq    
  402cf2:	imul   edi,DWORD PTR [eax+0x162da3ca],0xcec83a30
  402cfc:	lahf   
  402cfd:	dec    ebp
  402cfe:	mov    ecx,0x253df549
  402d03:	push   ebx
  402d04:	cmp    ah,0x45
  402d07:	push   edi
  402d08:	clc    
  402d09:	(bad)  [ecx+0x78d55370]
  402d0f:	sub    eax,0xaee22127
  402d14:	mov    ds:0x44c7d336,al
  402d19:	push   ebp
  402d1a:	(bad)  
  402d1b:	jp     0x402cf9
  402d1d:	push   ebx
  402d1e:	sbb    ebp,DWORD PTR [ebp+0x440559aa]
  402d24:	add    eax,0x7897c1a5
  402d29:	sub    BYTE PTR [edi-0xa],cl
  402d2c:	sub    eax,0x80242ecf
  402d31:	cmp    eax,0xc859ab60
  402d36:	sub    BYTE PTR [esi],bl
  402d38:	jb     0x402cc9
  402d3a:	or     cl,BYTE PTR ds:0xee2724b8
  402d40:	xor    DWORD PTR [esi-0x6a3c02bc],edi
  402d46:	test   DWORD PTR [ebp-0x3bae9aec],ebp
  402d4c:	dec    esi
  402d4d:	(bad)  
  402d4e:	loopne 0x402ce3
  402d50:	push   ss
  402d51:	push   ecx
  402d52:	(bad)  
  402d54:	cdq    
  402d55:	dec    edi
  402d56:	xchg   edi,eax
  402d57:	xor    BYTE PTR [eax+0x176ea625],ch
  402d5d:	pop    ebx
  402d5e:	call   0x8311:0xfd9544ce
  402d65:	(bad)  
  402d66:	rcl    dl,1
  402d68:	data16 adc BYTE PTR [edx+ecx*8+0x6c269eaf],dh
  402d70:	or     eax,0x1009e343
  402d75:	inc    ebp
  402d76:	repz jecxz 0x402d81
  402d79:	cwde   
  402d7a:	and    DWORD PTR [ebx+0x76edc6a4],eax
  402d80:	in     al,0x68
  402d82:	fidiv  WORD PTR [edi-0x73ea966e]
  402d88:	data16 in al,0xe2
  402d8b:	xor    BYTE PTR gs:[eax-0x27],0xf3
  402d90:	clc    
  402d91:	fwait
  402d92:	jle    0x402d18
  402d94:	test   eax,0x9c2a5af4
  402d99:	ins    BYTE PTR es:[edi],dx
  402d9a:	enter  0xfbb6,0x60
  402d9e:	mov    esi,0xc96c8af1
  402da3:	jno    0x402dc6
  402da5:	call   0x20b0:0x164384ba
  402dac:	cmp    bl,BYTE PTR [edi-0x60]
  402daf:	jl     0x402d75
  402db1:	sbb    DWORD PTR [eax-0x4ac95fc0],esp
  402db7:	xchg   edx,eax
  402db8:	or     ch,BYTE PTR [ecx-0x65a4fdb8]
  402dbe:	xchg   esp,eax
  402dbf:	(bad)  
  402dc0:	push   esp
  402dc1:	inc    ecx
  402dc2:	ret    0x2506
  402dc5:	mov    ch,0xf3
  402dc7:	std    
  402dc8:	pop    edx
  402dc9:	das    
  402dca:	sbb    DWORD PTR [ebx-0xa0433a],edx
  402dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd1:	adc    ah,bh
  402dd3:	pop    esi
  402dd4:	inc    edx
  402dd5:	xchg   ebp,eax
  402dd6:	jo     0x402d64
  402dd8:	clc    
  402dd9:	dec    eax
  402dda:	fimul  DWORD PTR [eax+0x389e7abe]
  402de0:	(bad)
  402de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402de4:	imul   edi,DWORD PTR [edx-0x79b79713],0x7bb19da8
  402dee:	(bad)  [edi+0x70]
  402df1:	ret    
  402df2:	cmp    ebp,DWORD PTR [ebx+0x1e]
  402df5:	scas   eax,DWORD PTR es:[edi]
  402df6:	sub    al,0x6c
  402df8:	clc    
  402df9:	into   
  402dfa:	fbstp  TBYTE PTR [eax]
  402dfc:	in     al,dx
  402dfd:	adc    BYTE PTR [ebp-0x386b5256],ah
  402e03:	in     eax,0x84
  402e05:	lds    esi,FWORD PTR [ebp-0x77]
  402e08:	push   ss
  402e09:	or     eax,0xf7cea414
  402e0e:	inc    esp
  402e0f:	add    DWORD PTR [ebp-0x4bcf13cf],eax
  402e15:	or     eax,0xbf9eccd3
  402e1a:	bound  ecx,QWORD PTR [bx]
  402e1d:	imul   ecx,DWORD PTR [eax-0x27],0xffffffa3
  402e21:	daa    
  402e22:	das    
  402e23:	xor    DWORD PTR [ebx],ebx
  402e25:	scas   eax,DWORD PTR es:[edi]
  402e26:	outs   dx,BYTE PTR ds:[esi]
  402e27:	jno    0x402ea8
  402e29:	sbb    dh,bh
  402e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e2c:	xor    eax,0xea2c16cd
  402e31:	leave  
  402e32:	mov    eax,0x6d623a4
  402e37:	call   0x29deb87d
  402e3c:	sub    DWORD PTR [edx-0x225b4dc6],0x60
  402e43:	aad    0xee
  402e45:	mov    esi,0x1c6b2310
  402e4a:	rol    al,0xa1
  402e4d:	scas   eax,DWORD PTR es:[edi]
  402e4e:	ret    0x88c0
  402e51:	push   ebx
  402e52:	mov    al,ds:0xcb34372e
  402e57:	adc    eax,0x143101e4
  402e5c:	inc    edx
  402e5d:	add    BYTE PTR [edx-0x58ab4118],cl
  402e63:	fmul   QWORD PTR [edi+eiz*4-0x3e]
  402e67:	adc    eax,0xf4561ec4
  402e6c:	cmp    BYTE PTR fs:[esi+0x1da8c9c0],ch
  402e73:	push   ds
  402e74:	data16 jmp 0x402ebf
  402e77:	push   esp
  402e78:	mov    gs,eax
  402e7a:	sub    dh,ch
  402e7c:	cmp    al,0x2f
  402e7e:	in     al,0xe9
  402e80:	mov    eax,0x9f7fd0b6
  402e85:	pusha  
  402e86:	xchg   esp,eax
  402e87:	inc    ebp
  402e88:	sbb    DWORD PTR [ebp-0x27],edx
  402e8b:	test   al,0xd1
  402e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8e:	call   0xf10c:0x1fc929ed
  402e95:	(bad)  
  402e96:	cmp    esi,DWORD PTR [ebx+0x77f9b40f]
  402e9c:	retf   0xefe7
  402e9f:	jmp    0x1ec:0x4d65f886
  402ea6:	(bad)  
  402ea7:	outs   dx,BYTE PTR ds:[esi]
  402ea8:	pop    ebx
  402ea9:	(bad)  
  402eaa:	xlat   BYTE PTR ds:[ebx]
  402eab:	dec    ecx
  402eac:	and    ah,BYTE PTR [eax]
  402eae:	inc    edx
  402eaf:	pop    edx
  402eb0:	inc    edx
  402eb1:	mov    ch,0x5d
  402eb3:	adc    ebp,ebp
  402eb5:	sub    DWORD PTR [edx-0x5517e31b],ecx
  402ebb:	add    eax,DWORD PTR [edx]
  402ebd:	push   edi
  402ebe:	ss mov ebp,0xb3fe34e8
  402ec4:	ss sbb bh,al
  402ec7:	jp     0x402f43
  402ec9:	(bad)  
  402eca:	mov    ch,0x34
  402ecc:	pop    esi
  402ecd:	adc    esp,DWORD PTR [ebx]
  402ecf:	fnsave fs:[eax-0x7dbdc18c]
  402ed6:	leave  
  402ed7:	enter  0x2774,0xfb
  402edb:	aaa    
  402edc:	fdiv   QWORD PTR [esi-0x73]
  402edf:	les    esi,FWORD PTR [ebx]
  402ee1:	xor    ebx,0x4dd0301d
  402ee7:	xlat   BYTE PTR ds:[ebx]
  402ee8:	xor    DWORD PTR [ebx+0x7dee84f6],edx
  402eee:	jmp    0xc940:0xcc0a2a87
  402ef5:	cs (bad) 
  402ef7:	sbb    DWORD PTR [esi+ebx*2],ebp
  402efa:	jne    0x402f34
  402efc:	je     0x402f21
  402efe:	pop    esp
  402eff:	cmp    eax,ecx
  402f01:	add    DWORD PTR [ecx-0x6e5108a6],eax
  402f07:	sti    
  402f08:	ficomp DWORD PTR [ecx]
  402f0a:	hlt    
  402f0b:	gs retf 
  402f0d:	xchg   ebp,eax
  402f0e:	aaa    
  402f0f:	xor    eax,ebx
  402f11:	sahf   
  402f12:	push   ds
  402f13:	mov    ah,0x83
  402f15:	and    BYTE PTR [esi],cl
  402f17:	jecxz  0x402edf
  402f19:	jo     0x402ed8
  402f1b:	hlt    
  402f1c:	dec    ebx
  402f1d:	mov    ebp,0xa4c0d797
  402f22:	jmp    0x402f40
  402f24:	inc    ebx
  402f25:	pop    es
  402f26:	xchg   edi,eax
  402f27:	pop    edx
  402f28:	fist   DWORD PTR [ebx]
  402f2a:	fistp  DWORD PTR [ecx-0x561e150d]
  402f30:	mov    ch,0x2f
  402f32:	mov    al,0xe9
  402f34:	dec    edx
  402f35:	pop    esp
  402f36:	xchg   esi,eax
  402f37:	pusha  
  402f38:	add    eax,0x8b91ec81
  402f3d:	lock fisttp WORD PTR [edx+ecx*8]
  402f41:	cmp    dh,ah
  402f43:	xor    ch,ah
  402f45:	in     al,dx
  402f46:	push   cs
  402f47:	mov    WORD PTR fs:0x260ead1e,?
  402f4e:	ja     0x402fbf
  402f50:	inc    DWORD PTR [ecx-0x1f]
  402f53:	dec    ebx
  402f54:	sub    eax,esp
  402f56:	sub    DWORD PTR [edi+0x7a5d7b57],0x89c6b8ac
  402f60:	fisub  WORD PTR [ecx+0x6f]
  402f63:	sahf   
  402f64:	and    BYTE PTR [esi+0xc9ef5a1],cl
  402f6a:	inc    DWORD PTR [esp+ebx*8+0x4692eafc]
  402f71:	popa   
  402f72:	mov    al,0xba
  402f74:	cmp    DWORD PTR gs:[ebx+0x2726b2ca],esp
  402f7b:	ins    BYTE PTR es:[edi],dx
  402f7c:	icebp  
  402f7d:	inc    ebp
  402f7e:	push   es
  402f7f:	(bad)  
  402f80:	jge    0x402ffb
  402f82:	cmp    eax,0x4d62e9d4
  402f87:	sub    eax,0xc4cd73a6
  402f8c:	jge    0x402fcc
  402f8e:	(bad)  
  402f8f:	fwait
  402f90:	dec    DWORD PTR [ebp+0x73]
  402f93:	cs ins BYTE PTR es:[edi],dx
  402f95:	ret    
  402f96:	(bad)  
  402f97:	xor    ebp,DWORD PTR [edi-0x79]
  402f9a:	retf   0x1fad
  402f9d:	push   edi
  402f9e:	mov    edx,0x855c6169
  402fa3:	sbb    BYTE PTR [edi],dl
  402fa5:	ins    DWORD PTR es:[edi],dx
  402fa6:	dec    ecx
  402fa7:	jmp    0xa27feac5
  402fac:	sti    
  402fad:	and    DWORD PTR [ecx+esi*2+0x33e7ccaa],edx
  402fb4:	in     eax,dx
  402fb5:	pop    eax
  402fb6:	push   es
  402fb7:	sbb    bl,BYTE PTR [ebx+0x7d]
  402fba:	(bad)  
  402fbb:	out    dx,al
  402fbc:	mov    bl,0x2
  402fbe:	dec    ebx
  402fbf:	(bad)  
  402fc0:	fsubr  st(5),st
  402fc2:	xor    eax,eax
  402fc4:	jbe    0x402f93
  402fc6:	out    0xaa,eax
  402fc8:	xor    al,0x86
  402fca:	jb     0x402fd0
  402fcc:	mov    al,ds:0xc16b2bd4
  402fd1:	pop    ebx
  402fd2:	scas   eax,DWORD PTR es:[edi]
  402fd3:	addr16 (bad) 
  402fd5:	sar    BYTE PTR [ebx+0x6836273b],1
  402fdb:	jmp    0x9e34:0x179e78e2
  402fe2:	cld    
  402fe3:	addr16 xchg ecx,eax
  402fe5:	icebp  
  402fe6:	push   eax
  402fe7:	cld    
  402fe8:	pop    ecx
  402fe9:	pop    ebp
  402fea:	mov    ebx,DWORD PTR [eax]
  402fec:	sbb    al,0x24
  402fee:	fsubr  QWORD PTR [edx-0x6da2b7d0]
  402ff4:	mov    edx,0x846864f
  402ff9:	mov    edi,0x6455d63a
  402ffe:	and    DWORD PTR [ecx+0x194bd445],esp
  403004:	fld    DWORD PTR [ebp-0x65498a9d]
  40300a:	xchg   esi,eax
  40300b:	js     0x403059
  40300d:	sbb    dh,BYTE PTR [ecx]
  40300f:	adc    DWORD PTR [edi-0x2599a262],ebx
  403015:	push   ds
  403016:	sub    DWORD PTR [ebx+0x55],esp
  403019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40301a:	xchg   ecx,eax
  40301b:	aas    
  40301c:	bound  esp,QWORD PTR [esi+edi*1+0x4f]
  403020:	and    BYTE PTR [ecx],cl
  403022:	dec    eax
  403023:	mov    dh,0xa0
  403025:	ins    BYTE PTR es:[edi],dx
  403026:	xor    DWORD PTR [edi],eax
  403028:	ret    
  403029:	sub    al,ch
  40302b:	add    DWORD PTR [ecx+0x54],0x45
  40302f:	cmp    dl,ah
  403031:	dec    esi
  403032:	mov    al,ds:0x4a67ed07
  403037:	ficomp WORD PTR [ebx+edi*2+0x27]
  40303b:	ja     0x402fde
  40303d:	sub    eax,0x348f6bc
  403042:	ret    0xad7b
  403045:	aaa    
  403046:	lahf   
  403047:	mov    dl,0x48
  403049:	pushf  
  40304a:	outs   dx,BYTE PTR ds:[esi]
  40304b:	iret   
  40304c:	push   ecx
  40304d:	pop    ebp
  40304e:	aam    0xd7
  403050:	mov    esp,0x6af7c94a
  403055:	fcomp  st(6)
  403057:	retf   0xe2b
  40305a:	xchg   ebx,eax
  40305b:	ins    DWORD PTR es:[edi],dx
  40305c:	lahf   
  40305d:	xchg   esp,eax
  40305e:	jno    0x403084
  403060:	sbb    ebp,edi
  403062:	test   BYTE PTR [esi+0x248e4f6b],0xf
  403069:	mov    dl,0x53
  40306b:	and    ch,BYTE PTR [ecx]
  40306d:	sbb    BYTE PTR [esi],al
  40306f:	(bad)  
  403070:	cld    
  403071:	adc    esp,DWORD PTR [esi]
  403073:	jp     0x403010
  403075:	hlt    
  403076:	mov    eax,ss:0x133f2a0a
  40307c:	clc    
  40307d:	rcl    ebx,1
  40307f:	cmp    DWORD PTR [eax],edi
  403081:	(bad)  
  403083:	je     0x403018
  403085:	mov    dl,0x36
  403087:	xchg   esi,eax
  403088:	(bad)  
  403089:	std    
  40308a:	cmp    dl,dh
  40308c:	hlt    
  40308d:	cmp    ah,bl
  40308f:	jmp    0x3053939d
  403094:	cs (bad) 
  403096:	or     al,0x55
  403098:	call   0xe42e6ab6
  40309d:	call   0xc2fcc742
  4030a2:	and    BYTE PTR [ebx+0x1d],0x6e
  4030a6:	imul   ebx,esp,0x396da0a4
  4030ac:	and    al,0x12
  4030ae:	fcom   QWORD PTR [esi-0x7a40eb2d]
  4030b4:	add    ch,BYTE PTR [ecx-0x33]
  4030b7:	jmp    0x224a5692
  4030bc:	xchg   ebx,eax
  4030bd:	fs sbb eax,0x77df0384
  4030c3:	out    0xa0,al
  4030c5:	mov    eax,0x5feb86b7
  4030ca:	dec    esp
  4030cb:	popa   
  4030cc:	test   DWORD PTR [edx],eax
  4030ce:	jmp    0x9eed:0x60256731
  4030d5:	ins    BYTE PTR es:[edi],dx
  4030d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030d7:	jns    0x4030f0
  4030d9:	fistp  DWORD PTR [eax+0x4d933f25]
  4030df:	not    BYTE PTR [ecx]
  4030e1:	xchg   DWORD PTR [edi-0x6e454080],eax
  4030e7:	add    eax,0xd4079af7
  4030ec:	jo     0x40316c
  4030ee:	ror    BYTE PTR [esi+0x7ee5bf24],0x64
  4030f5:	add    al,0x6b
  4030f7:	inc    edi
  4030f8:	loopne 0x403082
  4030fa:	in     al,0x7b
  4030fc:	mov    dl,0xf7
  4030fe:	sub    eax,0xaf972d7a
  403103:	mov    eax,0x70df1879
  403108:	mov    DWORD PTR [ebp-0x52],ebp
  40310b:	push   ss
  40310c:	adc    esi,0x69
  40310f:	push   0x46415ed3
  403114:	out    0xec,eax
  403116:	es dec eax
  403118:	je     0x403126
  40311a:	rcl    DWORD PTR [ecx],1
  40311c:	sub    ecx,0x95f79b2c
  403122:	cmc    
  403123:	pop    ebx
  403124:	arpl   WORD PTR [ebx],dx
  403126:	add    al,0x2b
  403128:	mov    ds:0x227eadbb,eax
  40312d:	ret    0x20
  403130:	cld    
  403131:	push   es
  403132:	push   ds
  403133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403134:	push   edi
  403136:	mov    ds:0xc984a55,eax
  40313b:	lods   eax,DWORD PTR ds:[esi]
  40313c:	push   ss
  40313d:	int3   
  40313e:	das    
  40313f:	test   eax,0x3524ab63
  403144:	jg     0x403130
  403146:	outs   dx,BYTE PTR ds:[esi]
  403147:	sar    DWORD PTR [edx],1
  403149:	xor    al,BYTE PTR [edi]
  40314b:	aam    0xac
  40314d:	test   BYTE PTR [esi+ebx*4+0x1],0x6c
  403152:	pop    ss
  403153:	push   eax
  403154:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  403156:	data16 mov cl,0xc9
  403159:	mov    DWORD PTR [ebp+0x7665369a],edi
  40315f:	add    ah,BYTE PTR [ecx+0x76a924cf]
  403165:	push   es
  403166:	pop    esp
  403167:	mov    eax,0x1328cd01
  40316c:	iret   
  40316d:	repnz fwait
  40316f:	(bad)  
  403170:	push   eax
  403171:	push   ds
  403172:	aad    0xfb
  403174:	sub    al,0x7f
  403176:	test   al,0x8
  403178:	push   edx
  403179:	ror    DWORD PTR [ecx],0x64
  40317c:	jb     0x40311a
  40317e:	jl     0x40318a
  403180:	mov    eax,ds:0x46169b8
  403185:	jmp    0xeb46f46b
  40318a:	mov    al,0x5b
  40318c:	xchg   edi,eax
  40318d:	in     eax,dx
  40318e:	or     edx,DWORD PTR [ecx-0x6ed729c]
  403194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403195:	jecxz  0x4031ad
  403197:	inc    ebp
  403198:	push   0xae22dd26
  40319d:	inc    esi
  40319e:	dec    edi
  40319f:	inc    ebx
  4031a0:	adc    edx,DWORD PTR [ecx-0x517e5329]
  4031a6:	adc    ebp,ecx
  4031a8:	std    
  4031a9:	mov    dl,0x3b
  4031ab:	add    al,0xad
  4031ad:	xchg   ebx,eax
  4031ae:	sbb    DWORD PTR [ebx-0x31],edi
  4031b1:	jl     0x4031bb
  4031b3:	mov    ds:0xc8d6878,eax
  4031b8:	xor    eax,0x6a281592
  4031bd:	fbld   TBYTE PTR [eax]
  4031bf:	(bad)  
  4031c0:	and    ecx,DWORD PTR [edi]
  4031c2:	mov    ebp,0x3fb00de7
  4031c7:	inc    esp
  4031c8:	xor    edx,DWORD PTR [esi]
  4031ca:	cmp    DWORD PTR [ebp-0x1b569030],eax
  4031d0:	xor    bh,BYTE PTR [ebx+0x0]
  4031d3:	dec    edx
  4031d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d5:	mov    dl,0xad
  4031d7:	hlt    
  4031d8:	(bad)  
  4031d9:	ja     0x4031f5
  4031db:	dec    edi
  4031dc:	mov    BYTE PTR [edx-0x1c],0x4f
  4031e0:	sahf   
  4031e1:	fadd   DWORD PTR [esi+0x55]
  4031e4:	int3   
  4031e5:	pop    esp
  4031e6:	push   es
  4031e7:	sbb    DWORD PTR [edi+ebx*8+0x20],edi
  4031eb:	repnz dec edx
  4031ed:	(bad)  
  4031ee:	pop    ebx
  4031ef:	cld    
  4031f0:	inc    esi
  4031f1:	popa   
  4031f2:	test   bh,al
  4031f4:	mov    edi,0x12eb1e8b
  4031f9:	add    ch,BYTE PTR [ecx+ebx*4+0x0]
  4031fd:	add    eax,0x2cebf9ee
  403202:	pop    esp
  403203:	inc    ebx
  403204:	adc    dl,ch
  403206:	pop    es
  403207:	jne    0x40320a
  403209:	stos   BYTE PTR es:[edi],al
  40320a:	rcr    DWORD PTR [esi+0x26359802],cl
  403210:	ja     0x4031ed
  403212:	push   edi
  403213:	not    DWORD PTR [edi+0x7ff4d1da]
  403219:	div    BYTE PTR [ebp-0x5a5478b]
  40321f:	mov    esi,0x6cbbebf0
  403224:	int3   
  403225:	mov    al,ds:0x47ba403e
  40322a:	daa    
  40322b:	push   0x25
  40322d:	repz adc ebp,ecx
  403230:	dec    edi
  403231:	jl     0x403245
  403233:	cmp    edx,DWORD PTR [eax]
  403235:	add    ch,BYTE PTR [ebp+0x21669470]
  40323b:	jecxz  0x403220
  40323d:	daa    
  40323e:	dec    ebx
  40323f:	push   esp
  403240:	or     bh,BYTE PTR [esi]
  403242:	sbb    eax,DWORD PTR [eax]
  403244:	dec    ebp
  403245:	arpl   WORD PTR [edx+0x435436d6],si
  40324b:	into   
  40324c:	push   eax
  40324d:	fidivr WORD PTR ds:[esi-0x39]
  403251:	sar    bh,0x5
  403254:	push   es
  403255:	xchg   edi,eax
  403256:	loop   0x403222
  403258:	jg     0x40327e
  40325a:	push   ebx
  40325b:	mov    BYTE PTR [edx],cl
  40325d:	xchg   DWORD PTR [ecx],ebx
  40325f:	xchg   edi,eax
  403260:	inc    edx
  403261:	mov    BYTE PTR [edi-0x6],dl
  403264:	or     DWORD PTR [edx+0x3d9b9661],edx
  40326a:	fld    DWORD PTR [esi-0x1d]
  40326d:	cmp    eax,0xc5219a70
  403272:	inc    esi
  403273:	inc    ebp
  403274:	or     bl,dh
  403276:	push   edx
  403277:	pop    edi
  403278:	and    ebp,ebx
  40327a:	stos   DWORD PTR es:[edi],eax
  40327b:	xor    al,dl
  40327d:	lods   al,BYTE PTR ds:[esi]
  40327e:	dec    esp
  40327f:	hlt    
  403280:	jecxz  0x40321b
  403282:	push   eax
  403283:	mov    ch,0xc0
  403285:	in     eax,0xd
  403287:	stc    
  403288:	or     BYTE PTR [ebx+0x6c],0xd5
  40328c:	lahf   
  40328d:	inc    ebp
  40328e:	jo     0x403286
  403290:	fdivr  DWORD PTR [esp+ecx*8-0xc]
  403295:	sbb    al,ch
  403297:	xlat   BYTE PTR ds:[ebx]
  403298:	cmp    edx,DWORD PTR [esi+ecx*2-0x3e092a17]
  40329f:	add    cl,BYTE PTR [ebp+0x3f8a99fc]
  4032a5:	push   esi
  4032a6:	push   esi
  4032a7:	aad    0x7a
  4032a9:	jmp    0x82d7a8b7
  4032ae:	sub    DWORD PTR [edx-0x7bf98c97],0x26
  4032b5:	push   es
  4032b6:	shl    DWORD PTR [eax+ebx*2-0x67accebe],1
  4032bd:	out    dx,eax
  4032be:	pop    edx
  4032bf:	sub    esp,edx
  4032c1:	popa   
  4032c2:	jge    0x403261
  4032c4:	iret   
  4032c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032c6:	jb     0x40328c
  4032c8:	cmp    al,0x8c
  4032ca:	popa   
  4032cb:	rol    BYTE PTR [ebx+0x735b38af],cl
  4032d1:	push   0x2ef63cdd
  4032d6:	out    dx,al
  4032d7:	inc    eax
  4032d8:	in     eax,dx
  4032d9:	push   0xaf2e6d22
  4032de:	mov    eax,ds:0xe19e011f
  4032e3:	call   0x72:0xfa005c6
  4032ea:	sbb    eax,DWORD PTR [ebx]
  4032ec:	data16 cmp al,0xc2
  4032ef:	lahf   
  4032f0:	ins    BYTE PTR es:[edi],dx
  4032f1:	dec    ecx
  4032f2:	(bad)  
  4032f3:	call   0xee88:0x890b7da2
  4032fa:	pop    sp
  4032fc:	ficom  WORD PTR [esp+ecx*2+0x10933e91]
  403303:	fbstp  TBYTE PTR [esi]
  403305:	pop    ss
  403306:	loop   0x403335
  403308:	gs jmp 0x4032ea
  40330b:	nop
  40330c:	push   edx
  40330d:	cmp    BYTE PTR [ecx+0x4f],cl
  403310:	inc    edi
  403311:	xchg   esi,eax
  403312:	lea    ebp,[ebp+0x886e984]
  403318:	xchg   ecx,eax
  403319:	mov    edx,0xb4dbcb6e
  40331e:	sbb    ch,dh
  403320:	pop    eax
  403321:	pop    esp
  403322:	xchg   BYTE PTR [edx],bl
  403324:	xchg   esp,eax
  403325:	jecxz  0x403314
  403327:	les    eax,FWORD PTR [ebx+esi*2]
  40332a:	sbb    al,0xfe
  40332c:	into   
  40332d:	int    0x65
  40332f:	std    
  403330:	mov    ecx,0x4fd6b2bc
  403335:	popa   
  403336:	stc    
  403337:	sub    DWORD PTR [esp+eiz*8-0x524b1fd2],ebp
  40333e:	add    dl,BYTE PTR [edx-0x686e6858]
  403344:	out    dx,al
  403345:	dec    esi
  403346:	jecxz  0x4032fe
  403348:	xchg   BYTE PTR [ecx-0x6e9dd932],dh
  40334e:	rcr    edi,cl
  403350:	mul    DWORD PTR [esi+ebx*8]
  403353:	add    BYTE PTR [edi+eiz*1],dl
  403356:	xor    esp,edi
  403358:	and    edx,edi
  40335a:	imul   DWORD PTR [ecx+0x64]
  40335d:	sti    
  40335e:	adc    eax,0xcad4a316
  403364:	mov    eax,0x4e8d690e
  403369:	addr16 ror edx,cl
  40336c:	push   cs
  40336d:	rcl    BYTE PTR [eax],cl
  40336f:	outs   dx,DWORD PTR ds:[esi]
  403370:	dec    ecx
  403371:	jecxz  0x403310
  403373:	jno    0x40333d
  403375:	in     al,0x99
  403377:	xchg   ebp,eax
  403378:	mov    bh,0x6c
  40337a:	xor    al,0xd0
  40337c:	jmp    0x4033bb
  40337e:	sub    edi,DWORD PTR [ecx+0x6e95c9f8]
  403384:	hlt    
  403385:	pop    ebp
  403386:	jmp    0x4033d3
  403388:	mov    ds:0x3a2d7ecb,al
  40338d:	dec    esi
  40338e:	mov    bl,0xf
  403390:	outs   dx,DWORD PTR ds:[esi]
  403391:	das    
  403392:	jbe    0x4033c9
  403394:	mov    WORD PTR [edx+edi*2],fs
  403397:	and    DWORD PTR [ecx+0xc57040d],ebx
  40339d:	xor    al,0xbe
  40339f:	mov    al,0x92
  4033a1:	or     DWORD PTR [eax],esp
  4033a3:	dec    eax
  4033a4:	aam    0xd9
  4033a6:	pop    edi
  4033a7:	cmp    al,0x2a
  4033a9:	shr    DWORD PTR [edi+0x2a73a25c],cl
  4033af:	(bad)  
  4033b0:	sub    cl,BYTE PTR [ebx+0x1e]
  4033b3:	sub    BYTE PTR [edi+0x67],cl
  4033b6:	in     eax,dx
  4033b7:	mov    edx,0x564331cf
  4033bc:	pop    eax
  4033bd:	lahf   
  4033be:	fwait
  4033bf:	add    DWORD PTR [esi],eax
  4033c1:	push   es
  4033c2:	xchg   edx,eax
  4033c3:	fsub   QWORD PTR [eax]
  4033c5:	sub    eax,DWORD PTR [eax-0x2d72da1d]
  4033cb:	test   DWORD PTR [esi],ebp
  4033cd:	pop    es
  4033ce:	and    al,0xd9
  4033d0:	adc    al,0xc5
  4033d2:	hlt    
  4033d3:	mov    esp,0xf7eff724
  4033d8:	inc    esp
  4033d9:	cwde   
  4033da:	imul   edx,DWORD PTR [ecx+esi*8-0x26812d1c],0x58
  4033e2:	repz xor eax,0xae5a1908
  4033e8:	pop    edx
  4033e9:	sub    esp,ebp
  4033eb:	push   es
  4033ec:	push   esp
  4033ed:	cwde   
  4033ee:	add    edi,DWORD PTR [esi+ecx*2-0x10]
  4033f2:	or     al,0xe9
  4033f4:	out    0x14,al
  4033f6:	jecxz  0x403403
  4033f8:	shr    BYTE PTR [ebp+0x49b1d3d9],cl
  4033fe:	(bad)  
  4033ff:	ds cmc 
  403401:	imul   esp,DWORD PTR [edi+0x27],0x4a
  403405:	mov    ecx,0xa1e8efd3
  40340a:	mov    bl,0x46
  40340c:	popf   
  40340d:	pop    ds
  40340e:	scas   al,BYTE PTR es:[edi]
  40340f:	mov    BYTE PTR [eax],al
  403411:	fistp  DWORD PTR [edi]
  403413:	stos   DWORD PTR es:[edi],eax
  403414:	or     al,0xd3
  403416:	retf   0x8c25
  403419:	inc    edi
  40341a:	fld    DWORD PTR [ebx-0x55]
  40341d:	sbb    ecx,eax
  40341f:	das    
  403420:	jl     0x403479
  403422:	in     al,dx
  403423:	mov    bh,0x40
  403425:	stos   BYTE PTR es:[edi],al
  403426:	int3   
  403427:	out    0x94,eax
  403429:	lds    edi,FWORD PTR [edx]
  40342b:	jp     0x40341a
  40342d:	in     eax,dx
  40342e:	jge    0x40346d
  403430:	push   ebx
  403431:	mov    dh,0x8f
  403433:	sbb    BYTE PTR ds:0xf841d143,ch
  403439:	mov    ds:0x3ca4b159,eax
  40343e:	pop    es
  40343f:	cmc    
  403440:	je     0x4033f9
  403442:	push   edx
  403443:	fldcw  WORD PTR [edi]
  403445:	pop    edx
  403446:	mov    bl,0xc7
  403448:	fsubr  st,st(1)
  40344a:	jmp    0xa07a:0xc259f6e
  403451:	push   0xd58ca659
  403456:	mov    bl,0x99
  403458:	fld    TBYTE PTR [edi+edx*1-0x45c735a2]
  40345f:	xchg   esp,eax
  403460:	mov    ds:0xa2ee6a20,eax
  403465:	adc    DWORD PTR [ebp-0x32],ecx
  403468:	into   
  403469:	push   ecx
  40346a:	mov    bl,0x70
  40346c:	cdq    
  40346d:	jmp    0x4df0409b
  403472:	fidiv  DWORD PTR [edx+0x3c40b2a3]
  403478:	(bad)  [edi]
  40347a:	mov    BYTE PTR [ebx-0xb3395ee],cl
  403480:	cwde   
  403481:	jmp    0x4034d3
  403483:	fwait
  403484:	add    esp,DWORD PTR [ebp+esi*1+0x73]
  403488:	sbb    eax,0x16bfb8b0
  40348d:	loope  0x40345c
  40348f:	aam    0x19
  403491:	sub    al,0x44
  403493:	in     eax,dx
  403494:	lods   eax,DWORD PTR ds:[esi]
  403495:	mov    ebp,0x69f301a6
  40349a:	scas   al,BYTE PTR es:[edi]
  40349b:	jnp    0x40345f
  40349d:	push   cs
  40349e:	(bad)  
  40349f:	jl     0x4034f0
  4034a1:	aad    0x9b
  4034a3:	test   al,0xbf
  4034a5:	mov    ch,0x40
  4034a7:	pop    eax
  4034a8:	int    0x3b
  4034aa:	jb     0x4034b7
  4034ac:	pop    edx
  4034ad:	jb     0x40349d
  4034af:	mov    bh,BYTE PTR [eax+0x7b]
  4034b2:	fcom   QWORD PTR [ecx-0x47]
  4034b5:	(bad)  
  4034b6:	cld    
  4034b7:	mov    bl,0x20
  4034b9:	mov    ecx,DWORD PTR [ebx]
  4034bb:	hlt    
  4034bc:	imul   edi,DWORD PTR [esi+0x26],0x6b
  4034c0:	and    cl,BYTE PTR [edi+ebx*1]
  4034c3:	xor    al,0xcd
  4034c5:	pop    ss
  4034c6:	stc    
  4034c7:	es stos DWORD PTR es:[edi],eax
  4034c9:	sti    
  4034ca:	sub    al,BYTE PTR [ebp-0x66]
  4034cd:	std    
  4034ce:	cmp    cl,BYTE PTR [ecx]
  4034d0:	cmc    
  4034d1:	adc    DWORD PTR [edi+0x37],esi
  4034d4:	pop    esi
  4034d5:	shl    DWORD PTR [ecx],1
  4034d7:	pop    ebx
  4034d8:	jbe    0x40349e
  4034da:	inc    ebp
  4034db:	and    DWORD PTR [esi+0x12],0x76
  4034df:	inc    ebp
  4034e0:	mov    esp,DWORD PTR [ebp-0x5e6c44d]
  4034e6:	xor    BYTE PTR [ebx],0x15
  4034e9:	scas   al,BYTE PTR es:[edi]
  4034ea:	arpl   bp,dx
  4034ec:	bound  ecx,QWORD PTR [eax-0x13d02238]
  4034f2:	stos   DWORD PTR es:[edi],eax
  4034f3:	cmp    edx,esp
  4034f5:	sbb    cl,dh
  4034f7:	arpl   WORD PTR ds:0xd88ae2a9,dx
  4034fd:	aad    0x1f
  4034ff:	in     al,0x47
  403501:	cli    
  403502:	hlt    
  403503:	adc    edi,esi
  403505:	add    eax,0x6e677c26
  40350a:	cld    
  40350b:	mov    esp,DWORD PTR [ecx-0x1c148d70]
  403511:	push   ss
  403512:	mov    bl,dh
  403514:	xor    al,0x9a
  403516:	mov    esp,0xa90ce2d
  40351b:	pop    ebp
  40351c:	adc    al,0x58
  40351e:	nop
  40351f:	mov    ds:0x9c63f54,ax
  403525:	loop   0x4034fc
  403527:	sbb    eax,0xb4494c5d
  40352c:	lahf   
  40352d:	cwde   
  40352e:	icebp  
  40352f:	fwait
  403530:	dec    esp
  403531:	stos   DWORD PTR es:[edi],eax
  403532:	mov    ?,WORD PTR [ebx-0x45338769]
  403538:	repnz and BYTE PTR [eax-0x2503eecb],ch
  40353f:	js     0x40357c
  403541:	inc    esp
  403542:	into   
  403543:	or     DWORD PTR [ebx-0x74],ecx
  403546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403547:	fmul   DWORD PTR [ecx]
  403549:	dec    esp
  40354a:	push   eax
  40354b:	mov    esi,ecx
  40354d:	les    edi,FWORD PTR [eax+0x1f]
  403550:	xor    BYTE PTR [ebx+ebx*4],0xea
  403554:	lds    ebp,FWORD PTR [ebp+0x75]
  403557:	sub    eax,0x980bc3c6
  40355c:	fwait
  40355d:	mov    BYTE PTR [edi],bl
  40355f:	add    eax,0x22992b75
  403564:	(bad)  
  403565:	xchg   esp,eax
  403566:	mov    DWORD PTR [esi+0x2019d731],ebx
  40356c:	adc    eax,edx
  40356e:	(bad)  
  40356f:	in     eax,dx
  403570:	pop    ss
  403571:	jnp    0x4035ef
  403573:	mov    dh,0x1d
  403575:	dec    esi
  403576:	jmp    0x98c1:0x2ace432f
  40357d:	(bad)  
  40357e:	mov    ebx,0x28448570
  403583:	xchg   edi,eax
  403584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403585:	jb     0x403568
  403587:	xchg   BYTE PTR [ebp+0x51d647dd],ch
  40358d:	pop    es
  40358e:	pushf  
  40358f:	outs   dx,DWORD PTR ds:[esi]
  403590:	lods   al,BYTE PTR ds:[esi]
  403591:	sysenter 
  403593:	jge    0x403607
  403595:	jb     0x4035bf
  403597:	arpl   WORD PTR [eax],sp
  403599:	jg     0x4035cb
  40359b:	repz xor al,0x3f
  40359e:	xor    al,BYTE PTR [ebp+0x64535e2f]
  4035a4:	mov    edx,0x2ea0ffe8
  4035a9:	add    ah,dl
  4035ab:	out    dx,eax
  4035ac:	cld    
  4035ad:	cmp    eax,0x4d3d26aa
  4035b2:	popf   
  4035b3:	xchg   esp,eax
  4035b4:	adc    ebx,esi
  4035b6:	scas   eax,DWORD PTR es:[edi]
  4035b7:	(bad)  
  4035b8:	cli    
  4035b9:	cmp    eax,0x12736b
  4035be:	lods   eax,DWORD PTR ds:[esi]
  4035bf:	push   edx
  4035c0:	mov    DWORD PTR [eax+0x39bc41ce],edx
  4035c6:	lods   eax,DWORD PTR ds:[esi]
  4035c7:	int3   
  4035c8:	fadd   QWORD PTR [ecx+0x36]
  4035cb:	ret    0xe2dc
  4035ce:	lock ds ja 0x403589
  4035d2:	sar    BYTE PTR [edx],0x4b
  4035d5:	test   BYTE PTR [esi+0x72020ac],bh
  4035db:	xchg   ebx,eax
  4035dc:	loope  0x403589
  4035de:	cwde   
  4035df:	pop    esp
  4035e0:	mov    esi,0xd66bb6e4
  4035e5:	inc    ebp
  4035e6:	inc    edx
  4035e7:	push   ss
  4035e8:	leave  
  4035e9:	ins    DWORD PTR es:[edi],dx
  4035ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035eb:	lock dec edi
  4035ed:	or     edi,ebx
  4035ef:	loopne 0x403656
  4035f1:	mov    ecx,DWORD PTR es:[eax+ecx*2-0x7f]
  4035f6:	push   esi
  4035f7:	sahf   
  4035f8:	xchg   ebp,eax
  4035f9:	jmp    0x4035f1
  4035fb:	fsubr  DWORD PTR [edx]
  4035fd:	and    al,0x2b
  4035ff:	aas    
  403600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403601:	out    0xa9,al
  403603:	sub    BYTE PTR [edx+0x327179a3],0x4d
  40360a:	or     BYTE PTR [ecx+0x3be9d919],ch
  403610:	and    ah,BYTE PTR [edi-0x92e59a2]
  403616:	xchg   ecx,eax
  403617:	push   0xe4aa7088
  40361c:	inc    ebp
  40361d:	cwde   
  40361e:	mov    ebp,0xf2a0029d
  403623:	ss mov ebx,0xb38c5740
  403629:	jnp    0x40366c
  40362b:	les    ebx,FWORD PTR [esi-0x150f9460]
  403631:	fdivr  QWORD PTR [edx]
  403633:	push   cs
  403634:	ss pop eax
  403636:	ds pop edi
  403638:	dec    ecx
  403639:	mov    esp,0x2c2a06e7
  40363e:	(bad)  
  40363f:	xor    eax,0x9383f431
  403644:	xchg   sp,ax
  403646:	xor    BYTE PTR [eiz*1-0x6a8e317a],0xc1
  40364e:	(bad)  
  40364f:	or     al,BYTE PTR [esi]
  403651:	jp     0x40364c
  403653:	fstp   DWORD PTR [edi*4-0x7471df31]
  40365a:	jo     0x40367e
  40365c:	dec    edi
  40365d:	xchg   ebp,eax
  40365e:	xchg   DWORD PTR [ebp+0x27ba218f],ebx
  403664:	(bad)  
  403665:	jl     0x403653
  403667:	nop
  403668:	cmc    
  403669:	ins    DWORD PTR es:[edi],dx
  40366a:	test   ebx,edi
  40366c:	pushf  
  40366d:	popf   
  40366e:	sar    dl,1
  403670:	add    BYTE PTR [ecx],0x1f
  403673:	mov    ecx,0x505bdd7b
  403678:	iret   
  403679:	adc    dh,BYTE PTR [ebx]
  40367b:	cmp    DWORD PTR [edi-0x5abccdfc],ecx
  403681:	pop    ds
  403682:	shl    DWORD PTR [edi+0x4a],1
  403685:	and    ah,cl
  403687:	test   eax,0x9e501d96
  40368c:	cli    
  40368d:	enter  0xe7a8,0x8f
  403691:	pusha  
  403692:	repnz clc 
  403694:	mov    esi,0x167807aa
  403699:	push   ds
  40369a:	fwait
  40369b:	mov    al,ds:0x5d7475a
  4036a0:	mov    esp,0x5fa86b59
  4036a5:	xchg   edx,eax
  4036a6:	and    dl,BYTE PTR [esi-0x28af3191]
  4036ac:	mov    dh,0xab
  4036ae:	mov    esi,eax
  4036b0:	jnp    0x403728
  4036b2:	mov    BYTE PTR [eax+0x4e],dl
  4036b5:	imul   ebp,DWORD PTR [edi+0x19],0x54
  4036b9:	push   edx
  4036ba:	or     DWORD PTR [edx],ebx
  4036bc:	dec    esi
  4036bd:	lds    esp,FWORD PTR [edi]
  4036bf:	push   ebp
  4036c0:	pop    esi
  4036c1:	dec    esi
  4036c2:	jp     0x4036fd
  4036c4:	mov    al,ds:0x1e5d7c9e
  4036c9:	clc    
  4036ca:	jo     0x403739
  4036cc:	mov    eax,ds:0x598ce615
  4036d1:	cwde   
  4036d2:	call   0x7fa4:0xddebddcc
  4036d9:	add    DWORD PTR [eax-0x3743ddcd],ecx
  4036df:	call   0xcd18:0xb903e92a
  4036e6:	inc    ebx
  4036e7:	jo     0x4036c4
  4036e9:	dec    edx
  4036ea:	test   eax,0x29e57aa3
  4036ef:	std    
  4036f0:	and    DWORD PTR [ebp+0x1cd440c6],eax
  4036f6:	ja     0x403731
  4036f8:	(bad)  
  4036f9:	cli    
  4036fa:	aas    
  4036fb:	cdq    
  4036fc:	jb     0x403689
  4036fe:	idiv   BYTE PTR [eax-0x6f253e77]
  403704:	mov    eax,ds:0xdac99fe7
  403709:	or     al,0xa4
  40370b:	push   ebp
  40370c:	sahf   
  40370d:	hlt    
  40370e:	or     BYTE PTR [edx],dh
  403710:	dec    ebx
  403711:	ins    DWORD PTR es:[edi],dx
  403712:	aad    0xb8
  403714:	pop    ebp
  403715:	and    DWORD PTR [edx-0xfb424a],ebp
  40371b:	push   eax
  40371c:	popa   
  40371d:	sbb    eax,0x62852d70
  403722:	jl     0x403736
  403724:	mov    esp,0x63bdbd50
  403729:	out    dx,al
  40372a:	adc    eax,0xfa0f8f43
  40372f:	mov    edi,es
  403731:	jmp    0x12d1:0x2610e723
  403738:	add    DWORD PTR [edi],esi
  40373a:	sti    
  40373b:	scas   al,BYTE PTR es:[edi]
  40373c:	mov    ds:0x52905490,al
  403741:	outs   dx,BYTE PTR ds:[esi]
  403742:	jge    0x40378c
  403744:	pop    eax
  403745:	mov    BYTE PTR [edx+0x610a800c],ch
  40374b:	jno    0x4036d6
  40374d:	lods   eax,DWORD PTR ds:[esi]
  40374e:	jae    0x40379b
  403750:	repz aad 0x2d
  403753:	loop   0x4036da
  403755:	into   
  403756:	pushf  
  403757:	dec    ecx
  403758:	add    DWORD PTR ds:0x7126ecc,edi
  40375e:	pop    ecx
  40375f:	and    edi,DWORD PTR ds:0x367acd4b
  403765:	sbb    BYTE PTR [edx+0x291c7e18],cl
  40376b:	test   eax,0x23883d6a
  403770:	iret   
  403771:	xor    DWORD PTR [edi+0x2ef22739],edx
  403777:	(bad)  
  403778:	call   0x6a1e:0xc1a8f6f5
  40377f:	adc    eax,0x9b2712f6
  403784:	ret    
  403785:	div    DWORD PTR [ecx+0x750fc018]
  40378b:	mov    eax,ds:0x6876ae91
  403790:	jb     0x40380d
  403792:	dec    esp
  403793:	push   ss
  403794:	push   ds
  403795:	retf   0xb42b
  403798:	mov    cl,0xda
  40379a:	cmp    al,0x5a
  40379c:	sub    ebp,DWORD PTR [bx+si]
  40379f:	cs push eax
  4037a1:	dec    eax
  4037a2:	arpl   WORD PTR [esi*8-0x557e7732],di
  4037a9:	or     eax,0x264b75ad
  4037ae:	sti    
  4037af:	xchg   ebx,eax
  4037b0:	pop    ecx
  4037b1:	into   
  4037b2:	cmp    al,0x7e
  4037b4:	sub    DWORD PTR [ebp+0x2a],ecx
  4037b7:	setp   BYTE PTR [ebx]
  4037ba:	push   eax
  4037bb:	ret    0x5386
  4037be:	push   esp
  4037bf:	ss adc al,0xab
  4037c2:	push   edi
  4037c3:	sbb    dl,al
  4037c5:	out    0xe,eax
  4037c7:	pop    esi
  4037c8:	test   BYTE PTR [eax-0x3bbf4509],bh
  4037ce:	add    edi,DWORD PTR [edx-0x1]
  4037d1:	(bad)  
  4037d2:	cli    
  4037d3:	mov    eax,0xbaebffb5
  4037d8:	call   0x4706:0x3c4a5695
  4037df:	push   esp
  4037e0:	(bad)  
  4037e1:	cld    
  4037e2:	xor    BYTE PTR [edi],ah
  4037e4:	ret    0x57cb
  4037e7:	cmp    dh,dh
  4037e9:	mov    DWORD PTR [eax-0x12a163c1],0x3466b8b7
  4037f3:	mov    edx,DWORD PTR [ebx+0x2b14dc77]
  4037f9:	and    ecx,ecx
  4037fb:	arpl   ax,di
  4037fd:	fiadd  WORD PTR [ebp+0x50]
  403800:	ret    
  403801:	imul   edi,edx,0x3f
  403804:	xor    al,0x42
  403806:	mov    ds:0xe3105858,al
  40380b:	call   0xa8ff2324
  403810:	mov    bl,0xf3
  403812:	adc    al,BYTE PTR [edx+0x4bbdd9b]
  403818:	pushf  
  403819:	xchg   ebx,eax
  40381a:	ret    
  40381b:	ror    DWORD PTR [edi],1
  40381d:	inc    esi
  40381e:	addr16 fwait
  403820:	xchg   edi,eax
  403821:	shl    DWORD PTR [esi],cl
  403823:	push   cs
  403824:	rol    BYTE PTR [esi+0x75d621cb],cl
  40382a:	pop    edi
  40382b:	mov    DWORD PTR ds:0x5db1fd7a,edx
  403831:	rcr    DWORD PTR [edi-0x5a9bab2f],cl
  403837:	push   esp
  403838:	ins    BYTE PTR es:[edi],dx
  403839:	adc    edx,ebx
  40383b:	mov    esp,0x30cb62f
  403840:	or     BYTE PTR [edi+0x55362537],ah
  403846:	fcom   QWORD PTR [ebp-0x29e0dbef]
  40384c:	or     dh,al
  40384e:	lods   eax,DWORD PTR ds:[esi]
  40384f:	adc    ebp,ebx
  403851:	ror    BYTE PTR [edx+0xb],cl
  403854:	sub    DWORD PTR [edx-0x31d2ea2d],edi
  40385a:	pop    ecx
  40385b:	jp     0x403891
  40385d:	int    0x13
  40385f:	sar    BYTE PTR [edi],0xe6
  403862:	sub    eax,0xe5cce25f
  403867:	lea    eax,[edi]
  403869:	popa   
  40386a:	adc    eax,edx
  40386c:	or     eax,0x59700435
  403871:	sub    al,0x4e
  403873:	lods   al,BYTE PTR ds:[esi]
  403874:	lock dec BYTE PTR [ebp-0x168a837]
  40387b:	loope  0x4038b7
  40387d:	cmp    eax,0x7b6deb97
  403882:	mov    DWORD PTR ds:0xaf40f54d,ebx
  403888:	xchg   esp,eax
  403889:	mov    ecx,0x6acab367
  40388e:	aad    0x64
  403890:	out    0xc7,eax
  403892:	cmc    
  403893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403894:	fwait
  403895:	jns    0x403902
  403897:	test   cl,ah
  403899:	popa   
  40389a:	hlt    
  40389b:	test   edi,eax
  40389d:	pushf  
  40389e:	push   ecx
  40389f:	enter  0xfe54,0xc1
  4038a3:	enter  0x79ad,0x1
  4038a7:	push   esp
  4038a8:	and    cl,BYTE PTR [edi-0x5b]
  4038ab:	jae    0x40386b
  4038ad:	das    
  4038ae:	(bad)  
  4038af:	cld    
  4038b0:	aam    0x73
  4038b2:	loope  0x403917
  4038b4:	test   eax,0x33f943ca
  4038b9:	cmp    al,0x63
  4038bb:	cmp    BYTE PTR [ebx+0x701549a7],dl
  4038c1:	mov    edx,ds
  4038c3:	jmp    0xffda:0xd6ce4822
  4038ca:	mov    DWORD PTR [ebp-0x7b],edx
  4038cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ce:	pop    ecx
  4038cf:	shl    BYTE PTR [edi],cl
  4038d1:	call   FWORD PTR [eax-0x49f1220d]
  4038d7:	fadd   st(1),st
  4038d9:	fnsave ds:0x1b7da83a
  4038df:	mov    ss,WORD PTR [ecx+0x4412c938]
  4038e5:	mov    edi,0xd0167910
  4038ea:	jge    0x4038d3
  4038ec:	sbb    esi,edx
  4038ee:	pop    esi
  4038ef:	shl    ecx,cl
  4038f1:	nop
  4038f2:	jne    0x403879
  4038f4:	and    al,0x8f
  4038f6:	mov    WORD PTR [edi+ecx*4+0x66d4ef8e],es
  4038fd:	adc    al,0x8d
  4038ff:	or     al,0xe3
  403901:	jo     0x4038ce
  403903:	(bad)  
  403905:	sbb    al,0x6b
  403907:	add    dl,ch
  403909:	mov    edx,0x4723b46d
  40390e:	adc    eax,0x3c66162f
  403913:	sbb    esi,DWORD PTR [edi-0x590e67e7]
  403919:	sub    ebx,DWORD PTR [ebp-0x40]
  40391c:	or     ah,bh
  40391e:	mov    ebx,cs
  403920:	sbb    BYTE PTR [edx-0x33],0xc3
  403924:	mov    al,0x50
  403926:	and    eax,eax
  403928:	out    0xad,eax
  40392a:	xchg   esp,eax
  40392b:	shl    DWORD PTR [edx+0x7f5689c8],1
  403931:	test   ecx,ebx
  403933:	iret   
  403934:	popf   
  403935:	outs   dx,BYTE PTR ds:[esi]
  403936:	cmc    
  403937:	ficomp DWORD PTR [ebp+0x45]
  40393a:	and    ebp,DWORD PTR [eax+0x51]
  40393d:	in     al,dx
  40393e:	in     al,dx
  40393f:	xor    cl,bl
  403941:	rol    BYTE PTR [esi*8+0x45f32043],cl
  403948:	scas   al,BYTE PTR es:[edi]
  403949:	add    al,0x4a
  40394b:	or     eax,0x73f611c2
  403950:	mov    ecx,DWORD PTR [ecx-0x3e]
  403953:	push   edx
  403954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403955:	mov    dh,0xa5
  403957:	and    DWORD PTR [esi],esp
  403959:	call   0xd53a164
  40395e:	push   ds
  40395f:	ror    DWORD PTR [ebp+0x7e387d8a],0x74
  403966:	push   esi
  403967:	inc    edi
  403968:	jne    0x4039b7
  40396a:	test   eax,0x78df62d3
  40396f:	jmp    0xb16945ea
  403974:	sbb    bh,BYTE PTR cs:[edx+0x49]
  403978:	jno    0x40390d
  40397a:	retf   
  40397b:	iret   
  40397c:	sahf   
  40397d:	jo     0x403983
  40397f:	pop    ebp
  403980:	jno    0x403929
  403982:	fdivr  st,st(5)
  403984:	add    al,0xa6
  403986:	push   ebx
  403987:	and    edi,DWORD PTR [eax+0x1]
  40398a:	push   ds
  40398b:	popa   
  40398c:	aaa    
  40398d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398e:	mov    bh,0xeb
  403990:	fldl2e 
  403992:	inc    esp
  403993:	imul   ebp,DWORD PTR [esi+0x56ed35f9],0xe77502f5
  40399d:	pop    es
  40399e:	jne    0x403941
  4039a0:	js     0x40393b
  4039a2:	sub    bl,ch
  4039a4:	fistp  DWORD PTR [esi+0x7f154b6c]
  4039aa:	(bad)  
  4039ab:	pusha  
  4039ac:	stos   DWORD PTR es:[edi],eax
  4039ad:	push   ecx
  4039ae:	mov    edx,DWORD PTR [ebp+0x75]
  4039b1:	jae    0x403971
  4039b3:	mov    ecx,0x5200add6
  4039b8:	popa   
  4039b9:	call   0x9c84:0xb0572320
  4039c0:	jecxz  0x403987
  4039c2:	push   ss
  4039c3:	fild   QWORD PTR [edx]
  4039c5:	leave  
  4039c6:	push   es
  4039c7:	ins    BYTE PTR es:[edi],dx
  4039c8:	mov    bl,0xe5
  4039ca:	les    esp,FWORD PTR [ecx]
  4039cc:	mov    dh,0x7e
  4039ce:	or     DWORD PTR [eax-0x25],edx
  4039d1:	pop    ecx
  4039d2:	inc    ebx
  4039d3:	popa   
  4039d4:	mov    edi,0x4c2acbb7
  4039d9:	ret    
  4039da:	cli    
  4039db:	push   ds
  4039dc:	mov    edx,DWORD PTR [esi]
  4039de:	jb     0x40399d
  4039e0:	and    eax,0xcdd691cf
  4039e5:	and    bh,BYTE PTR [esi+0x4f]
  4039e8:	push   ss
  4039e9:	pop    edi
  4039ea:	iret   
  4039eb:	retf   
  4039ec:	jl     0x403976
  4039ee:	or     al,0x6a
  4039f0:	dec    ebp
  4039f1:	lea    edx,[edx+0x28]
  4039f4:	icebp  
  4039f5:	fist   WORD PTR [ebx]
  4039f7:	in     al,0xf3
  4039f9:	mov    ebp,0xf8012c3b
  4039fe:	xchg   edi,eax
  4039ff:	pop    edi
  403a00:	enter  0x59db,0xcf
  403a04:	stc    
  403a05:	loop   0x403a83
  403a07:	stos   BYTE PTR es:[edi],al
  403a08:	mov    bl,0xf8
  403a0a:	loopne 0x403a1f
  403a0c:	or     eax,0xa8ab1158
  403a11:	sub    ah,BYTE PTR [esi+0x62661534]
  403a17:	xor    cl,dl
  403a19:	into   
  403a1a:	cdq    
  403a1b:	lods   eax,DWORD PTR ds:[esi]
  403a1c:	jmp    0xef6b00d6
  403a21:	in     al,dx
  403a22:	push   0xffffff9b
  403a24:	dec    edx
  403a25:	jnp    0x403a02
  403a27:	and    DWORD PTR [edx+0x17bf7cf7],ebx
  403a2d:	mov    edx,0x51e69935
  403a32:	inc    ebp
  403a33:	cmp    al,0xec
  403a35:	xchg   esi,eax
  403a36:	push   ecx
  403a37:	in     al,0x37
  403a39:	test   DWORD PTR [edx+0x4e],esp
  403a3c:	mov    cl,0xff
  403a3e:	adc    al,0x3
  403a40:	rol    ebp,cl
  403a42:	add    al,0x6
  403a44:	mov    cl,0x44
  403a46:	push   edx
  403a47:	fist   DWORD PTR [ecx+0x63]
  403a4a:	jno    0x4039d8
  403a4c:	or     DWORD PTR [edx],esp
  403a4e:	adc    eax,0x7ae0fbe
  403a53:	aas    
  403a54:	mov    ebp,0x82d4d388
  403a59:	int    0x47
  403a5b:	and    BYTE PTR [esi],cl
  403a5d:	dec    edx
  403a5e:	sbb    eax,0xd4ea9775
  403a63:	jp     0x403a3e
  403a65:	mov    esp,0xef329477
  403a6a:	xchg   esp,eax
  403a6b:	mov    cl,BYTE PTR ds:0x9f8d0e63
  403a71:	enter  0x3030,0x7
  403a75:	sub    BYTE PTR [edx],bl
  403a77:	or     DWORD PTR [ebp-0x40],ebp
  403a7a:	sub    eax,0xaeb1a3cd
  403a7f:	inc    esi
  403a80:	test   BYTE PTR [ecx+0x38],cl
  403a83:	mov    edi,0x84113341
  403a88:	int    0xed
  403a8a:	mov    esp,0x7324aaae
  403a8f:	bound  edx,QWORD PTR [ecx+0x530252cd]
  403a95:	fnstenv [edx]
  403a97:	dec    esp
  403a98:	shl    BYTE PTR [edx],cl
  403a9a:	pop    edx
  403a9b:	fmulp  st(7),st
  403a9d:	(bad)  
  403a9e:	mov    eax,0xf9fc3661
  403aa3:	mov    edx,0x5e7b1917
  403aa8:	push   esi
  403aa9:	addr16 repz jne 0x403a84
  403aad:	aam    0x75
  403aaf:	inc    eax
  403ab0:	jbe    0x403af5
  403ab2:	aad    0x6c
  403ab4:	cmp    DWORD PTR [ebx-0x1],eax
  403ab7:	xchg   edi,eax
  403ab8:	sbb    edi,DWORD PTR [esi]
  403aba:	icebp  
  403abb:	arpl   WORD PTR [ecx],di
  403abd:	and    DWORD PTR [ebx-0x56],ebx
  403ac0:	add    bh,BYTE PTR [ecx]
  403ac2:	test   DWORD PTR [edi],0x1491c3f4
  403ac8:	enter  0xdb2a,0xe6
  403acc:	mov    al,ds:0xc6f4d0c4
  403ad1:	adc    eax,DWORD PTR [edi+0x2227ad4c]
  403ad7:	push   esp
  403ad8:	mov    WORD PTR [edi],?
  403ada:	aaa    
  403adb:	add    ch,dh
  403add:	pushf  
  403ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403adf:	bound  esp,QWORD PTR [ebx+0x20cc4137]
  403ae5:	push   ds
  403ae6:	hlt    
  403ae7:	or     al,0x27
  403ae9:	test   DWORD PTR [ebx],0x38b0ab81
  403aef:	retf   
  403af0:	scas   eax,DWORD PTR es:[edi]
  403af1:	jecxz  0x403b65
  403af3:	xlat   BYTE PTR ds:[ebx]
  403af4:	clc    
  403af5:	hlt    
  403af6:	xlat   BYTE PTR ds:[ebx]
  403af7:	fimul  DWORD PTR [eax+esi*8]
  403afa:	pop    eax
  403afb:	xor    edi,DWORD PTR [edx-0x5ffbe1b5]
  403b01:	not    BYTE PTR [eax-0x3b]
  403b04:	push   cs
  403b05:	popf   
  403b06:	add    al,dl
  403b08:	xchg   edx,eax
  403b09:	pushf  
  403b0a:	sub    eax,0x4b5571b2
  403b0f:	ss inc ebp
  403b11:	jg     0x403b36
  403b13:	ss fwait
  403b15:	test   DWORD PTR [ebx-0x20],esi
  403b18:	scas   eax,DWORD PTR es:[edi]
  403b19:	scas   al,BYTE PTR es:[edi]
  403b1a:	jb     0x403b0d
  403b1c:	lea    eax,[eax]
  403b1e:	push   ds
  403b1f:	sub    DWORD PTR [ebx],esi
  403b21:	inc    ecx
  403b22:	cwde   
  403b23:	jnp    0x403acf
  403b25:	or     DWORD PTR [ecx+0x7b],ebx
  403b28:	lods   eax,DWORD PTR ds:[esi]
  403b29:	scas   al,BYTE PTR es:[edi]
  403b2a:	add    eax,0x439741bc
  403b2f:	add    eax,0xc3ffc9b7
  403b35:	add    edx,DWORD PTR [ecx]
  403b37:	or     al,0xf4
  403b39:	cld    
  403b3a:	mov    dl,BYTE PTR [edx+ecx*4-0x40]
  403b3e:	pop    ebx
  403b3f:	fs int3 
  403b41:	fcomp  DWORD PTR [ebp+0x75b574c2]
  403b47:	adc    edx,0x8bd210ee
  403b4d:	and    BYTE PTR [ebp+edi*4+0x5d],ah
  403b51:	daa    
  403b52:	mov    WORD PTR [esp+edi*8-0x12140779],ds
  403b59:	stos   DWORD PTR es:[edi],eax
  403b5a:	jns    0x403b93
  403b5c:	addr16 push ecx
  403b5e:	mov    ah,0x3b
  403b60:	xor    al,0xf6
  403b62:	add    al,0x7
  403b64:	cmp    ecx,eax
  403b66:	icebp  
  403b67:	mov    ebx,0xa882c497
  403b6c:	or     BYTE PTR es:[edi-0x4215f4fa],cl
  403b73:	add    al,0xc4
  403b75:	mov    edx,0x59be808b
  403b7a:	nop
  403b7b:	xchg   ebx,eax
  403b7c:	inc    edx
  403b7d:	jmp    0x403b11
  403b7f:	ror    bl,0xa1
  403b82:	jl     0x403b1e
  403b84:	les    ecx,FWORD PTR [ecx-0x22bd12e4]
  403b8a:	popf   
  403b8b:	mov    edx,0xaef307
  403b90:	or     eax,0x568455c
  403b95:	ficom  DWORD PTR [eax-0x379d96dc]
  403b9b:	or     al,0xf1
  403b9d:	sahf   
  403b9e:	mov    WORD PTR [esi+0x3],ss
  403ba1:	idiv   al
  403ba3:	pop    ss
  403ba4:	mov    bl,0xb4
  403ba6:	pop    ds
  403ba7:	cli    
  403ba8:	push   esp
  403ba9:	and    al,0x60
  403bab:	mov    WORD PTR [esi+0x5e],fs
  403bae:	mov    dl,0x2b
  403bb0:	jnp    0x403bca
  403bb2:	or     BYTE PTR [ecx-0x375c34e5],bl
  403bb8:	cmp    DWORD PTR [ebp+0x1c7ffc1d],0x12222e0b
  403bc2:	aad    0xf8
  403bc4:	mov    dh,0xd
  403bc6:	add    dl,BYTE PTR [ebx+0x7fd01ae3]
  403bcc:	rcl    DWORD PTR [ebx+0x2c],cl
  403bcf:	inc    edx
  403bd0:	call   0x24efda27
  403bd5:	fdivr  DWORD PTR [esp+eiz*2-0x3b97f0cd]
  403bdc:	addr16 call 0xfbd2:0x43ac502d
  403be4:	add    BYTE PTR [ebp-0x2c6f3fc2],al
  403bea:	sub    DWORD PTR [ecx-0x39],0x13
  403bee:	ror    BYTE PTR [eax-0x47],cl
  403bf1:	push   ecx
  403bf2:	sub    esp,ebx
  403bf4:	call   0xab3cea2
  403bf9:	fmul   QWORD PTR ds:0xeee88f3b
  403bff:	xlat   BYTE PTR ds:[bx]
  403c01:	aas    
  403c02:	jnp    0x403b93
  403c04:	and    ebp,DWORD PTR [esi]
  403c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c07:	dec    edi
  403c08:	jbe    0x403bfd
  403c0a:	pop    ebx
  403c0b:	sbb    al,0x1a
  403c0d:	mov    al,0x9b
  403c0f:	cmp    eax,0x94b0a3a6
  403c14:	out    dx,eax
  403c15:	fsubr  QWORD PTR [edi-0x4d]
  403c18:	mov    cl,0xf0
  403c1a:	ret    0x77b1
  403c1d:	(bad)  
  403c1e:	fwait
  403c1f:	aam    0x8e
  403c21:	xor    bl,BYTE PTR [ecx]
  403c23:	test   eax,0x289c4856
  403c28:	pop    ax
  403c2a:	stc    
  403c2b:	or     DWORD PTR [esp+ebp*1],esp
  403c2e:	pop    es
  403c2f:	add    eax,0x10f14f5
  403c34:	int    0x98
  403c36:	jecxz  0x403c8f
  403c38:	inc    eax
  403c39:	jge    0x403c5d
  403c3b:	sbb    cl,dl
  403c3d:	stc    
  403c3e:	test   al,0xb3
  403c40:	jmp    0x403c01
  403c42:	outs   dx,DWORD PTR ds:[esi]
  403c43:	cmp    dl,0x10
  403c46:	mov    al,0x3
  403c48:	jp     0x403bd7
  403c4a:	scas   eax,DWORD PTR es:[edi]
  403c4b:	sbb    BYTE PTR [ecx+0x76c87674],dl
  403c51:	scas   al,BYTE PTR es:[edi]
  403c52:	out    0xa1,eax
  403c54:	ins    DWORD PTR es:[edi],dx
  403c55:	test   BYTE PTR [eax-0x7b],ah
  403c58:	enter  0x4b1b,0xb5
  403c5c:	xchg   ecx,eax
  403c5d:	cs sub cl,bl
  403c60:	add    dh,BYTE PTR [eax-0x38b0537c]
  403c66:	inc    edi
  403c67:	jp     0x403cbd
  403c69:	aam    0x4d
  403c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c6c:	ror    DWORD PTR [ecx+0x4b97e354],0xc3
  403c73:	mov    ebp,0x1aa511d5
  403c78:	jg     0x403c27
  403c7a:	fadd   QWORD PTR [ebx+0x41]
  403c7d:	imul   ecx,DWORD PTR [ebx+0x7a9c20e4],0x9239e8bc
  403c87:	jno    0x403c3b
  403c89:	push   0x17a8ea5c
  403c8e:	sbb    al,0x4a
  403c90:	xor    bh,ah
  403c92:	cmp    BYTE PTR [eax],ch
  403c94:	out    dx,eax
  403c95:	push   ebx
  403c96:	add    al,0x8
  403c98:	add    bl,ch
  403c9a:	inc    edx
  403c9b:	mov    dh,0x96
  403c9d:	popa   
  403c9e:	cmp    al,0x99
  403ca0:	pop    ecx
  403ca1:	xor    eax,0xef7eafe
  403ca6:	cmp    BYTE PTR ss:[edi+0x51],dl
  403caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cab:	xor    esi,0xe9d1da8a
  403cb1:	fwait
  403cb2:	cs jge 0x403cfe
  403cb5:	mov    WORD PTR [ebx],?
  403cb7:	cmp    BYTE PTR [edi],dh
  403cb9:	loope  0x403ca8
  403cbb:	scas   al,BYTE PTR es:[edi]
  403cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cbd:	outs   dx,DWORD PTR ds:[esi]
  403cbe:	rcr    bl,0x4c
  403cc1:	(bad)
  403cc4:	test   BYTE PTR [ebp+eax*1-0x5c],al
  403cc8:	in     al,0x60
  403cca:	lahf   
  403ccb:	(bad)  
  403ccc:	mov    ss,WORD PTR [eax+eax*1]
  403ccf:	dec    ecx
  403cd0:	leave  
  403cd1:	mov    ?,WORD PTR [edi+eax*4-0x224b30ff]
  403cd8:	push   es
  403cd9:	repnz sub al,0xb9
  403cdc:	sar    DWORD PTR [eax-0x7e],0xc8
  403ce0:	xchg   esi,eax
  403ce1:	mov    ah,0x6
  403ce3:	cmp    DWORD PTR [ebx+0x6d248958],ecx
  403ce9:	xlat   BYTE PTR ds:[ebx]
  403cea:	add    ebx,DWORD PTR [edx+0xf]
  403ced:	cdq    
  403cee:	daa    
  403cef:	pop    ecx
  403cf0:	out    0x80,al
  403cf2:	adc    DWORD PTR [edi],ecx
  403cf4:	mov    bh,dh
  403cf6:	das    
  403cf7:	and    ah,ch
  403cf9:	pop    edx
  403cfa:	pop    ebx
  403cfb:	in     eax,dx
  403cfc:	cmp    BYTE PTR [edx-0x2e7e5033],al
  403d02:	cdq    
  403d03:	int    0xa
  403d05:	ret    
  403d06:	mov    cl,0x91
  403d08:	adc    esp,DWORD PTR [edx-0x58]
  403d0b:	or     BYTE PTR [ecx-0x45],ch
  403d0e:	mov    ebp,0xd6c74f3
  403d13:	xor    al,0xbc
  403d15:	sub    cl,BYTE PTR [eax+edi*1-0x41]
  403d19:	sub    eax,0x14777580
  403d1e:	mov    ah,BYTE PTR [ebp-0x53]
  403d21:	data16 daa 
  403d23:	stos   BYTE PTR es:[edi],al
  403d24:	imul   esi,DWORD PTR [bp+si-0x71],0x658ae44e
  403d2c:	faddp  st(7),st
  403d2e:	fadd   QWORD PTR [ebx-0x5f29547b]
  403d34:	popa   
  403d35:	push   eax
  403d36:	or     DWORD PTR [ecx+ebx*1-0x355fef56],0x41
  403d3e:	pop    esi
  403d3f:	popa   
  403d40:	cli    
  403d41:	sbb    al,0xff
  403d43:	repz sub bh,bh
  403d46:	add    BYTE PTR [esi],bl
  403d48:	sub    edi,edi
  403d4a:	sbb    al,0x2b
  403d4c:	and    BYTE PTR [edi],cl
  403d4e:	sbb    BYTE PTR [eax-0x6c],0xa1
  403d52:	add    eax,0xe6a58795
  403d57:	jl     0x403d39
  403d59:	pop    ebp
  403d5a:	inc    ebx
  403d5b:	cmc    
  403d5c:	and    DWORD PTR [ebx],esi
  403d5e:	loop   0x403d05
  403d60:	sbb    esp,DWORD PTR [esi+0x18]
  403d63:	nop
  403d64:	sub    ebp,DWORD PTR [ebx-0xfeb7f38]
  403d6a:	mov    bl,0x6a
  403d6c:	out    0xb5,al
  403d6e:	jmp    0x403d22
  403d70:	mov    dh,0xa0
  403d72:	pushf  
  403d73:	jb     0x403d02
  403d75:	ins    DWORD PTR es:[edi],dx
  403d76:	add    dh,BYTE PTR [edi-0x4]
  403d79:	jmp    0x69470359
  403d7e:	dec    esi
  403d7f:	es xchg edi,eax
  403d81:	outs   dx,DWORD PTR ds:[esi]
  403d82:	push   ebx
  403d83:	mov    al,BYTE PTR [ebp+0x514869dc]
  403d89:	and    al,0xa4
  403d8b:	call   0x7a5f39bc
  403d90:	adc    eax,0xff2f2908
  403d95:	adc    al,0x67
  403d97:	call   0xf5b3:0xc4beaab7
  403d9e:	cdq    
  403d9f:	loop   0x403dec
  403da1:	ret    
  403da2:	sbb    al,0x6f
  403da4:	jmp    0x5fcf:0xda488029
  403dab:	nop
  403dac:	jmp    0x8bc7:0x5e116e30
  403db3:	jns    0x403e1a
  403db5:	add    bh,BYTE PTR [eax]
  403db7:	sub    edi,DWORD PTR [ebx+0x33ef5eed]
  403dbd:	shl    edi,1
  403dbf:	sbb    esi,edx
  403dc1:	jmp    0x403d55
  403dc3:	pop    es
  403dc4:	mov    dh,0x15
  403dc6:	jae    0x403e2f
  403dc8:	arpl   WORD PTR [edi-0x50],bp
  403dcb:	adc    BYTE PTR [ebx+0xf31d6ca],dl
  403dd1:	sub    DWORD PTR ds:0xfa6af95,ecx
  403dd7:	adc    ebx,ecx
  403dd9:	mov    esp,0xc0e24305
  403dde:	add    DWORD PTR [ebp-0x39],ebx
  403de1:	cmp    BYTE PTR [edi],cl
  403de3:	or     bh,dh
  403de5:	and    edx,DWORD PTR [edx]
  403de7:	sub    al,0xb6
  403de9:	loopne 0x403e4d
  403deb:	inc    esi
  403dec:	clc    
  403ded:	out    dx,al
  403dee:	sar    BYTE PTR [ebp-0x30],1
  403df1:	jae    0x403de7
  403df3:	retf   
  403df4:	cmp    DWORD PTR [ebp+0x5],esi
  403df7:	jmp    0x8819ec10
  403dfc:	std    
  403dfd:	jns    0x403e2a
  403dff:	mov    ecx,DWORD PTR [ebp+0x6d43b5d1]
  403e05:	jo     0x403e48
  403e07:	push   ss
  403e08:	mov    eax,0x5dc040da
  403e0d:	jno    0x403d97
  403e0f:	imul   esi,DWORD PTR [edi],0xffffffb4
  403e12:	jns    0x403de8
  403e14:	mov    ds:0x437e67ed,al
  403e19:	dec    eax
  403e1a:	inc    ebp
  403e1b:	add    ch,BYTE PTR [edi+0x28]
  403e1e:	inc    ebp
  403e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e20:	fcomp  DWORD PTR [eax+0x3a12892d]
  403e26:	mov    WORD PTR [eax],fs
  403e28:	int3   
  403e29:	sub    ecx,ebx
  403e2b:	hlt    
  403e2c:	ret    0xf54e
  403e2f:	or     DWORD PTR [ebx+0x4b7c351f],ebp
  403e35:	outs   dx,BYTE PTR ds:[esi]
  403e36:	pop    edi
  403e37:	repnz mov DWORD PTR [ebp+0x63d0094d],ebp
  403e3e:	mov    eax,ds:0xdce7c2d4
  403e43:	bound  ecx,QWORD PTR es:[edx+0x34032dc]
  403e4a:	push   esi
  403e4b:	push   es
  403e4c:	retf   
  403e4d:	es dec ebp
  403e4f:	bound  esp,QWORD PTR [edi-0x320b4e37]
  403e55:	clc    
  403e56:	xchg   ecx,eax
  403e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e58:	push   esi
  403e59:	xor    edi,DWORD PTR [edx-0x5c]
  403e5c:	cli    
  403e5d:	cmc    
  403e5e:	inc    edx
  403e5f:	jne    0x403ea8
  403e61:	xchg   DWORD PTR [edx+0x57],esi
  403e64:	popf   
  403e65:	test   eax,0xd39ac9fc
  403e6a:	sbb    bh,al
  403e6c:	xor    DWORD PTR [esi+0x332fded],esp
  403e72:	enter  0x5ce4,0x58
  403e76:	sar    ch,cl
  403e78:	add    eax,0xa461ecc9
  403e7d:	outs   dx,BYTE PTR ds:[esi]
  403e7e:	test   BYTE PTR [edx],0xf
  403e81:	mov    al,0xbf
  403e83:	and    BYTE PTR [edi],bh
  403e85:	mov    WORD PTR [ebp-0x514e5b49],es
  403e8b:	push   eax
  403e8c:	outs   dx,BYTE PTR ds:[esi]
  403e8d:	clc    
  403e8e:	pop    ecx
  403e8f:	pushf  
  403e90:	mov    dh,0xbf
  403e92:	or     ecx,ebx
  403e94:	jmp    0xcfc55355
  403e99:	mov    esp,DWORD PTR [ecx]
  403e9b:	rcr    BYTE PTR [edx+0x7d],0xb
  403e9f:	mov    al,ds:0x7629f99a
  403ea4:	fnstcw WORD PTR [esi+0x3b]
  403ea7:	push   es
  403ea8:	les    ebp,FWORD PTR [ebx+esi*2+0x3e]
  403eac:	cld    
  403ead:	ror    DWORD PTR [edx+0x51565821],cl
  403eb3:	pushf  
  403eb4:	int    0xfd
  403eb6:	dec    ebx
  403eb7:	(bad)  
  403eb8:	xchg   ebp,eax
  403eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eba:	jo     0x403e75
  403ebc:	test   BYTE PTR [edi+0x41],dl
  403ebf:	inc    eax
  403ec0:	inc    edx
  403ec1:	push   edi
  403ec2:	jbe    0x403ef0
  403ec4:	mov    bh,BYTE PTR [ebx]
  403ec6:	jmp    0xeda9:0x12a341da
  403ecd:	outs   dx,BYTE PTR ds:[esi]
  403ece:	xchg   ebp,eax
  403ecf:	mov    eax,0xae71f3c8
  403ed4:	sub    al,0x3
  403ed6:	into   
  403ed7:	adc    eax,0x6a367259
  403edc:	das    
  403edd:	stc    
  403ede:	cli    
  403edf:	out    dx,al
  403ee0:	push   ds
  403ee1:	jae    0x403ed8
  403ee3:	mov    al,ds:0xb4790c6a
  403ee8:	loope  0x403f12
  403eea:	test   BYTE PTR [ecx+0x74],bh
  403eed:	das    
  403eee:	(bad)  
  403eef:	jmp    0xa040:0x31473d82
  403ef6:	mov    cs,esi
  403ef8:	sti    
  403ef9:	mov    ss,WORD PTR [esi+0x501d2163]
  403eff:	retf   
  403f00:	inc    eax
  403f01:	aaa    
  403f02:	cmp    edx,edi
  403f04:	stc    
  403f05:	push   ss
  403f06:	or     DWORD PTR [eax],esi
  403f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f09:	scas   al,BYTE PTR es:[edi]
  403f0a:	ret    0xc1b1
  403f0d:	inc    ebp
  403f0e:	and    dh,BYTE PTR [esi+0x3d]
  403f11:	or     ebp,esp
  403f13:	pusha  
  403f14:	add    eax,0x27fc2c10
  403f19:	dec    edx
  403f1a:	mov    bl,0xb2
  403f1c:	cwde   
  403f1d:	daa    
  403f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f1f:	mov    edi,DWORD PTR [ebp-0x4bd3ad69]
  403f25:	adc    ecx,DWORD PTR [esi-0x758fa205]
  403f2b:	pop    ebx
  403f2c:	test   al,0xd1
  403f2e:	and    eax,0x892291c6
  403f33:	gs enter 0x3fc,0xa9
  403f38:	jae    0x403f73
  403f3a:	push   ecx
  403f3b:	inc    ecx
  403f3c:	sbb    ah,BYTE PTR [eax]
  403f3e:	and    bl,dl
  403f40:	clc    
  403f41:	jg     0x403f61
  403f43:	pop    es
  403f44:	ja     0x403f60
  403f46:	adc    ebp,DWORD PTR ss:[ebx]
  403f49:	adc    eax,ebx
  403f4b:	jo     0x403f5d
  403f4d:	sbb    al,0xd2
  403f4f:	scas   eax,DWORD PTR es:[edi]
  403f50:	mov    eax,ds:0xc572a200
  403f55:	je     0x403f10
  403f57:	rep ins BYTE PTR es:[edi],dx
  403f59:	push   ecx
  403f5a:	scas   eax,DWORD PTR es:[edi]
  403f5b:	jg     0x403f48
  403f5d:	lds    ecx,FWORD PTR [ecx+edi*2+0x7cb70232]
  403f64:	clc    
  403f65:	inc    ebp
  403f66:	xor    eax,0xb6c90a9f
  403f6b:	mov    ecx,0x5f49905a
  403f70:	push   0xd90ac105
  403f75:	mov    BYTE PTR [edx+ebx*2+0x589b1a6],cl
  403f7c:	gs mov edi,0x3511d222
  403f82:	xchg   ebp,eax
  403f83:	les    edx,FWORD PTR [ecx]
  403f85:	mov    bh,0x9c
  403f87:	inc    ebx
  403f88:	push   cs
  403f89:	out    dx,al
  403f8a:	xor    BYTE PTR [edx],bh
  403f8c:	sub    esi,esp
  403f8e:	sub    al,0x9a
  403f90:	fdivr  st(7),st
  403f92:	(bad)  
  403f93:	enter  0x59a3,0xbc
  403f97:	and    al,0x41
  403f99:	push   esi
  403f9a:	ror    DWORD PTR [esp+eax*4],cl
  403f9d:	fldenv [esi+ebx*2]
  403fa0:	cdq    
  403fa1:	retf   
  403fa2:	or     ch,dh
  403fa4:	mov    edx,0xe85533f3
  403fa9:	push   esi
  403faa:	lds    esp,FWORD PTR [ebp-0x218573dd]
  403fb0:	popa   
  403fb1:	and    esi,DWORD PTR ds:0xc0b69483
  403fb7:	iret   
  403fb8:	push   ebx
  403fb9:	add    dl,BYTE PTR gs:[ecx+0x9]
  403fbd:	mov    al,0x13
  403fbf:	and    ebp,DWORD PTR [edx+0x1be3110]
  403fc5:	dec    ebp
  403fc6:	jbe    0x403f48
  403fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc9:	dec    eax
  403fca:	ficom  WORD PTR [ebp+0x53]
  403fcd:	sti    
  403fce:	mov    edi,0xf61bda5c
  403fd3:	inc    BYTE PTR [ebx]
  403fd5:	test   al,0x27
  403fd7:	inc    ebp
  403fd8:	icebp  
  403fd9:	and    al,0x3
  403fdb:	push   cs
  403fdc:	cld    
  403fdd:	iret   
  403fde:	(bad)  
  403fdf:	outs   dx,DWORD PTR ds:[esi]
  403fe0:	xlat   BYTE PTR ds:[ebx]
  403fe1:	aas    
  403fe2:	push   0xffffffb3
  403fe4:	js     0x404021
  403fe6:	(bad)  
  403fe7:	push   0x43
  403fe9:	pop    es
  403fea:	es mov cl,0x61
  403fed:	call   0x9d75:0xe6cefa72
  403ff4:	cdq    
  403ff5:	(bad)
  403ff8:	(bad)  
  403ff9:	mov    WORD PTR [ebx+0x4f],ds
  403ffc:	outs   dx,DWORD PTR ds:[esi]
  403ffd:	out    dx,al
  403ffe:	pop    edi
  403fff:	shl    BYTE PTR ds:0x11502903,cl
  404005:	xchg   edi,eax
  404006:	jno    0x404033
  404008:	xor    ch,bl
  40400a:	(bad)  
  40400b:	jae    0x404034
  40400d:	out    0x6d,al
  40400f:	shr    BYTE PTR [ebp+0x6470e2be],0x12
  404016:	pusha  
  404017:	inc    esp
  404018:	adc    eax,DWORD PTR [ebp-0x17]
  40401b:	in     al,0x5f
  40401d:	pop    eax
  40401e:	js     0x40402b
  404020:	leave  
  404021:	jae    0x40409f
  404023:	xlat   BYTE PTR ds:[ebx]
  404024:	pop    esp
  404025:	test   eax,0x4ba2da27
  40402a:	call   0x912f688d
  40402f:	jnp    0x403fbd
  404031:	jl     0x40408e
  404033:	push   eax
  404034:	stc    
  404035:	test   BYTE PTR ds:0x99b21f20,ah
  40403b:	mov    cl,0x82
  40403d:	and    al,0x6b
  40403f:	sub    cl,BYTE PTR [eax+edi*1-0x9]
  404043:	inc    esi
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	gs js  0x403fd9
  404048:	cmp    edx,0x5b
  40404b:	pusha  
  40404c:	mov    dl,0xdc
  40404e:	std    
  40404f:	cli    
  404050:	mov    esi,0x3c50e26d
  404055:	mov    ecx,0x5146f721
  40405a:	arpl   di,bp
  40405c:	(bad)  
  40405d:	push   ebx
  40405e:	fistp  WORD PTR [esi-0x1c100426]
  404064:	ss jbe 0x4040cc
  404067:	pop    esi
  404068:	lock push ebx
  40406a:	aad    0x6
  40406c:	mov    ds:0xdb91dde0,al
  404071:	les    ebp,FWORD PTR [eax-0x54]
  404074:	js     0x404094
  404076:	test   al,0x32
  404078:	fistp  WORD PTR [ecx+0x67519373]
  40407e:	mov    al,ds:0x257c7c34
  404083:	xchg   esi,eax
  404084:	pop    es
  404085:	sbb    eax,0xf4a1c328
  40408a:	or     al,0x13
  40408c:	and    ah,BYTE PTR [edi+0x6b92aae0]
  404092:	test   BYTE PTR ds:0x4871142c,ch
  404098:	test   DWORD PTR [ebp+0x521f3e6a],edi
  40409e:	and    al,0x27
  4040a0:	or     ebx,eax
  4040a2:	aad    0xbb
  4040a4:	fcomp  DWORD PTR [edx+0x5f]
  4040a7:	dec    edx
  4040a8:	sbb    eax,0x39ff72e6
  4040ad:	test   eax,0x7c53763c
  4040b2:	xor    eax,esp
  4040b4:	loopne 0x404099
  4040b6:	bswap  esp
  4040b8:	arpl   WORD PTR [eax],sp
  4040ba:	retf   
  4040bb:	ja     0x4040ff
  4040bd:	adc    eax,0x71e0e4a9
  4040c2:	adc    al,0xf0
  4040c4:	and    DWORD PTR ds:0x1b56ed18,edi
  4040ca:	aas    
  4040cb:	in     eax,dx
  4040cc:	fild   QWORD PTR ds:0x4485f338
  4040d2:	jne    0x4040f8
  4040d4:	mov    bl,0x60
  4040d6:	ret    0x63ae
  4040d9:	sub    eax,0xd7574f08
  4040de:	sahf   
  4040df:	pop    esp
  4040e0:	adc    BYTE PTR [eax],bh
  4040e2:	inc    edi
  4040e3:	pop    esp
  4040e4:	arpl   WORD PTR [ebx],dx
  4040e6:	ins    DWORD PTR es:[edi],dx
  4040e7:	scas   eax,DWORD PTR es:[edi]
  4040e8:	inc    ecx
  4040e9:	sbb    ecx,0x8fc45238
  4040ef:	cld    
  4040f0:	stos   BYTE PTR es:[edi],al
  4040f1:	and    al,0x78
  4040f3:	adc    bh,BYTE PTR [ebp+0x384053dc]
  4040f9:	mov    DWORD PTR [esi+0x3c1ac0ed],eax
  4040ff:	and    eax,DWORD PTR [esi+0x70]
  404102:	dec    edx
  404103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404104:	shl    DWORD PTR [eax-0x76],cl
  404107:	pop    es
  404108:	cmp    BYTE PTR [ecx-0x3efac1ba],dh
  40410e:	push   edx
  40410f:	rol    DWORD PTR [ebx],cl
  404111:	xchg   esi,eax
  404112:	push   eax
  404114:	cmp    BYTE PTR [edx],cl
  404116:	in     al,0x4c
  404118:	mov    esp,0x1846b442
  40411d:	push   ebp
  40411e:	xor    bl,bh
  404120:	adc    eax,0xa35599bb
  404125:	test   cl,dl
  404127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404128:	mov    BYTE PTR [ecx-0x3e],ch
  40412b:	enter  0x383d,0xe2
  40412f:	add    BYTE PTR [ebx-0x43],bl
  404132:	les    esi,FWORD PTR [edi]
  404134:	adc    cl,BYTE PTR [eax]
  404136:	xchg   ebp,eax
  404137:	adc    BYTE PTR [edi+edx*1-0xc336b38],0x3d
  40413f:	or     BYTE PTR [eax+0x7861628d],cl
  404145:	cmc    
  404146:	sub    DWORD PTR [esi],eax
  404148:	push   esi
  404149:	das    
  40414a:	lea    esp,[esi+eax*1-0x73]
  40414e:	or     ch,BYTE PTR [eax+0x5cf63a66]
  404154:	add    eax,0xae6f5373
  404159:	enter  0xed11,0xf1
  40415d:	sub    DWORD PTR cs:0x19761169,esp
  404164:	fld    TBYTE PTR [eax]
  404166:	jne    0x40417e
  404168:	jg     0x4041b0
  40416a:	ror    BYTE PTR [ebx+edx*2-0x32],0x93
  40416f:	nop
  404170:	fcmovne st,st(6)
  404172:	retf   
  404173:	inc    ecx
  404174:	pop    ebx
  404175:	fsub   DWORD PTR [ebx-0x22b84217]
  40417b:	iret   
  40417c:	test   eax,0x6271d3fc
  404181:	adc    DWORD PTR [esi+0x443d0503],0xfffffff7
  404188:	mov    ebp,0x776e0d31
  40418d:	or     ecx,eax
  40418f:	sub    al,0xf7
  404191:	js     0x40417c
  404193:	inc    ebx
  404194:	jg     0x4041b0
  404196:	out    dx,eax
  404197:	dec    eax
  404198:	pop    ecx
  404199:	fwait
  40419a:	and    BYTE PTR [eax-0x17],0x4e
  40419e:	adc    eax,DWORD PTR [ebp+eiz*2-0xd]
  4041a2:	inc    edi
  4041a3:	call   0x681bd9f
  4041a8:	inc    esp
  4041a9:	mov    dh,0xb5
  4041ab:	mov    edi,0x603c611d
  4041b0:	popf   
  4041b1:	or     al,0xf7
  4041b3:	pop    ss
  4041b4:	(bad)  
  4041b5:	hlt    
  4041b6:	xchg   BYTE PTR [edx+0x49],dl
  4041b9:	jcxz   0x40413d
  4041bc:	and    DWORD PTR [ebp+eax*2-0x6d],eax
  4041c0:	shl    BYTE PTR [esi-0x77],cl
  4041c3:	das    
  4041c4:	popf   
  4041c5:	and    DWORD PTR [eax-0x6a],esi
  4041c8:	sub    ebp,DWORD PTR [ebx+0x1d]
  4041cb:	mov    esi,0x85ed1f3
  4041d0:	sbb    bl,BYTE PTR [ecx+ecx*1-0x24]
  4041d4:	(bad)  
  4041d5:	mov    al,ds:0xabf5a0b5
  4041da:	rol    cl,1
  4041dc:	test   BYTE PTR [edi+edi*2],bh
  4041df:	xor    al,0x28
  4041e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041e2:	leave  
  4041e3:	add    ebx,DWORD PTR [esp+ecx*2]
  4041e6:	aaa    
  4041e7:	pop    esi
  4041e8:	jl     0x404176
  4041ea:	icebp  
  4041eb:	cmp    al,0x36
  4041ed:	mov    ecx,0x47eb97b6
  4041f2:	mov    al,ds:0x39a18f84
  4041f7:	and    DWORD PTR [edx-0x2b],0xffffffce
  4041fb:	call   FWORD PTR [edi]
  4041fd:	add    al,0xca
  4041ff:	ja     0x40420d
  404201:	pop    ebx
  404202:	xchg   DWORD PTR [ebx-0x77],esp
  404205:	xchg   esp,eax
  404206:	repz adc BYTE PTR [eax+eiz*1],bh
  40420a:	scas   al,BYTE PTR es:[edi]
  40420b:	int    0xdf
  40420d:	pop    ecx
  40420e:	mov    ch,0xf5
  404210:	mov    al,ds:0x40504d20
  404215:	push   ecx
  404216:	rcr    dl,1
  404218:	xor    DWORD PTR [edi],eax
  40421a:	or     eax,0x52d63e68
  40421f:	add    esi,DWORD PTR [edx-0x4]
  404222:	out    dx,al
  404223:	out    0x91,eax
  404225:	sub    BYTE PTR [edi-0x37ce5675],ah
  40422b:	leave  
  40422c:	call   0x5c5a:0x173d6944
  404233:	mov    ebx,0x594a06ad
  404238:	test   BYTE PTR [edi+0x6b717e25],dh
  40423e:	aad    0xb5
  404240:	test   eax,0x8b92b72f
  404245:	xchg   DWORD PTR [eax+ecx*2-0x7d6a9045],edi
  40424c:	(bad)  
  40424d:	scas   eax,DWORD PTR es:[edi]
  40424e:	repz mov ds:0xa45eb276,eax
  404254:	mov    dh,BYTE PTR [eax-0x481ae1c9]
  40425a:	leave  
  40425b:	adc    ebx,edx
  40425d:	out    0xe9,al
  40425f:	jns    0x404202
  404261:	pop    ebx
  404262:	(bad)  [ebx+eax*4+0x68]
  404266:	stos   BYTE PTR es:[edi],al
  404267:	loopne 0x4042be
  404269:	fsub   QWORD PTR ds:0xf5451774
  40426f:	mov    dh,0xa9
  404271:	pop    ecx
  404272:	cmp    esp,DWORD PTR [edi+0x5ce50283]
  404278:	fld1   
  40427a:	mov    ebp,0x54acf43
  40427f:	iret   
  404280:	outs   dx,DWORD PTR ds:[esi]
  404281:	push   ebp
  404282:	data16 int 0x1b
  404285:	and    eax,0xf852e1a7
  40428a:	bnd jle 0x40428d
  40428d:	arpl   WORD PTR [ecx-0x4],di
  404290:	jb     0x4042cd
  404292:	cmp    al,0xfa
  404294:	scas   eax,DWORD PTR es:[edi]
  404295:	in     al,dx
  404296:	sub    ecx,DWORD PTR [edi+0x5aa0f4b1]
  40429c:	mov    ebx,0x8c4e0d5f
  4042a1:	and    dh,bh
  4042a3:	aas    
  4042a4:	add    eax,0x2e8c1cbf
  4042a9:	stos   DWORD PTR es:[edi],eax
  4042aa:	sbb    BYTE PTR [ebp+0x3a],0xb9
  4042ae:	pop    ecx
  4042af:	and    BYTE PTR [ebx+0xc],dl
  4042b2:	dec    esi
  4042b3:	add    cl,BYTE PTR [esi+ebx*8+0x44b2a0cd]
  4042ba:	ds hlt 
  4042bc:	shl    esi,cl
  4042be:	retf   0x72f6
  4042c1:	pop    ebx
  4042c2:	or     BYTE PTR [ecx-0x36eaba88],dl
  4042c8:	and    al,BYTE PTR [edx-0x35]
  4042cb:	xor    BYTE PTR [ecx+0x7bc1f3a5],bl
  4042d1:	fs test al,0x32
  4042d4:	fsub   st(0),st
  4042d6:	rol    esp,1
  4042d8:	test   DWORD PTR [esi+ebx*8],0x910bb040
  4042df:	sub    BYTE PTR ds:0xabcbbd9a,bh
  4042e5:	xchg   bl,al
  4042e7:	inc    esp
  4042e8:	les    eax,FWORD PTR [esi*8-0x501071b4]
  4042ef:	ja     0x4042af
  4042f1:	push   esp
  4042f2:	xor    bl,ah
  4042f4:	ret    0xd407
  4042f7:	dec    ebp
  4042f8:	add    ecx,edx
  4042fa:	aaa    
  4042fb:	sub    DWORD PTR [edi+0x2a],edi
  4042fe:	inc    esp
  4042ff:	adc    ch,cl
  404301:	stos   BYTE PTR es:[edi],al
  404302:	retf   0xe897
  404305:	mov    ecx,0xad224600
  40430a:	mov    edi,eax
  40430c:	cmp    BYTE PTR [eax-0x774803d],ch
  404312:	test   DWORD PTR [edx+0x7f7236cf],esi
  404318:	test   DWORD PTR [eax+0x5a],ebx
  40431b:	push   ebx
  40431c:	mov    dh,0xe9
  40431e:	sub    al,0xeb
  404320:	push   es
  404321:	ror    dl,cl
  404323:	clc    
  404324:	mov    WORD PTR [edi+0x73],es
  404327:	ja     0x40438b
  404329:	into   
  40432a:	bound  ebp,QWORD PTR [edi]
  40432c:	or     eax,edi
  40432e:	add    edx,edi
  404330:	js     0x4042f9
  404332:	jne    0x404372
  404334:	scas   al,BYTE PTR es:[edi]
  404335:	or     dl,bh
  404337:	adc    al,0x3e
  404339:	(bad)  
  40433a:	fwait
  40433b:	test   DWORD PTR [eax-0x65],0x4736f1cc
  404342:	jg     0x4042e0
  404344:	xchg   edx,eax
  404345:	xor    DWORD PTR [esi+esi*4-0x69],esi
  404349:	(bad)  
  40434a:	sub    ebx,DWORD PTR [ebx+0x54fe0136]
  404350:	outs   dx,BYTE PTR ds:[esi]
  404351:	push   ss
  404352:	xor    al,0x0
  404354:	dec    edi
  404355:	sbb    bl,ah
  404357:	xor    BYTE PTR [ecx+edx*2+0x12e0e417],dh
  40435e:	pushf  
  40435f:	mov    ebx,?
  404361:	inc    eax
  404362:	xor    bl,bl
  404364:	rol    DWORD PTR [edx],0xa5
  404367:	std    
  404368:	repz dec edi
  40436a:	mov    dh,0xab
  40436c:	or     al,0x54
  40436e:	lods   eax,DWORD PTR ds:[esi]
  40436f:	ror    DWORD PTR [ebx+eiz*4+0x416c758e],cl
  404376:	mov    ecx,0xf10d9f4f
  40437b:	rcl    DWORD PTR [ebx+0x37],1
  40437e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40437f:	jle    0x40434b
  404381:	jmp    0x404372
  404383:	xor    BYTE PTR [edi-0x24],ch
  404386:	loope  0x40434e
  404388:	pushf  
  404389:	nop
  40438a:	addr16 ds or dl,bh
  40438e:	add    eax,0xafc08e2
  404393:	(bad)  
  404394:	lahf   
  404395:	aaa    
  404396:	sub    al,0x97
  404398:	dec    ebp
  404399:	ja     0x4043b8
  40439b:	enter  0xa359,0xd3
  40439f:	dec    eax
  4043a0:	jns    0x4043ff
  4043a2:	adc    al,0x81
  4043a4:	fcom   st(0)
  4043a6:	cmp    BYTE PTR [ebp-0x57],cl
  4043a9:	fisub  DWORD PTR [ebx]
  4043ab:	in     eax,0x40
  4043ad:	adc    eax,0x61818ade
  4043b2:	add    dl,dl
  4043b4:	xchg   esp,eax
  4043b5:	(bad)  
  4043b6:	fadd   QWORD PTR [ebp+0xf]
  4043b9:	ins    BYTE PTR es:[edi],dx
  4043ba:	rcr    BYTE PTR [ebx-0x43ea8dfe],0x62
  4043c1:	repnz or DWORD PTR [eax-0x53680905],ebp
  4043c8:	fwait
  4043c9:	stos   DWORD PTR es:[edi],eax
  4043ca:	dec    eax
  4043cb:	inc    esi
  4043cc:	cwde   
  4043cd:	jmp    0x404388
  4043cf:	in     al,0x28
  4043d1:	repnz mov WORD PTR ds:0x47c91509,cx
  4043d9:	xor    dh,BYTE PTR [eax]
  4043db:	adc    BYTE PTR [esi],al
  4043dd:	jns    0x404426
  4043df:	cld    
  4043e0:	loope  0x4043ac
  4043e2:	mov    eax,0x22e9d659
  4043e7:	in     al,dx
  4043e8:	push   ds
  4043e9:	out    0x86,al
  4043eb:	dec    ecx
  4043ec:	test   DWORD PTR [edi-0x3e],esp
  4043ef:	sbb    esi,edx
  4043f1:	out    dx,eax
  4043f2:	xchg   BYTE PTR [ecx-0x2c18f4ab],dh
  4043f8:	cmp    eax,0x4172de7e
  4043fd:	adc    ecx,edi
  4043ff:	cdq    
  404400:	mov    edi,0xb68f351b
  404405:	mov    al,0x82
  404407:	dec    edi
  404408:	or     dh,dh
  40440a:	push   edx
  40440b:	scas   eax,DWORD PTR es:[edi]
  40440c:	mov    esi,0x2d0c0c48
  404411:	mov    edi,0x45e4c7f7
  404416:	fs sbb al,ch
  404419:	imul   edx,DWORD PTR [ebx+0x76ed2fc6],0xb9d2cd90
  404423:	cmp    BYTE PTR [eax],0x16
  404426:	mov    ecx,DWORD PTR [esi-0x3d8cb6f6]
  40442c:	sbb    cl,dh
  40442e:	or     BYTE PTR [ecx],bh
  404430:	ja     0x40442e
  404432:	das    
  404433:	montmul (bad)
  404434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404435:	add    esi,ebx
  404437:	in     al,0xb6
  404439:	adc    BYTE PTR [eax-0x3e],cl
  40443c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443d:	mov    al,0x8a
  40443f:	dec    ebx
  404440:	add    BYTE PTR [ecx+0x527bbe63],0x24
  404447:	aad    0xfb
  404449:	dec    ebp
  40444a:	xor    cl,BYTE PTR [ecx-0x42d18fbe]
  404450:	repnz bound ecx,QWORD PTR ss:[ecx-0x3bfd22cc]
  404458:	ins    DWORD PTR es:[edi],dx
  404459:	mov    ds:0xf623b45b,al
  40445e:	jmp    0x5e1c:0x5a75b0e8
  404465:	mov    ebp,0x7a971611
  40446a:	shr    BYTE PTR [ecx+0x7e2c2752],1
  404470:	loope  0x404401
  404472:	cmp    DWORD PTR [ecx+0x2b66ffa7],ebx
  404478:	adc    BYTE PTR [eax*2-0x50eeaf6b],al
  40447f:	jmp    0xf7a3200c
  404484:	cmp    DWORD PTR [eax],0xffffffc0
  404487:	js     0x404462
  404489:	cmp    BYTE PTR [edi*2-0x15a528c3],cl
  404490:	inc    edi
  404491:	ins    DWORD PTR es:[edi],dx
  404492:	imul   edx,DWORD PTR [ebp+eiz*2+0x64],0xfe379a5a
  40449a:	mov    dl,0xb0
  40449c:	std    
  40449d:	sbb    al,0x76
  40449f:	dec    ecx
  4044a0:	push   ss
  4044a1:	ret    0x70eb
  4044a4:	jge    0x404522
  4044a6:	stos   BYTE PTR es:[edi],al
  4044a7:	mov    cl,0x12
  4044a9:	or     eax,0x36b56218
  4044ae:	sbb    edx,DWORD PTR [edi+ebp*4]
  4044b1:	mov    eax,ds:0x90c7f389
  4044b6:	test   BYTE PTR [ebx-0x2a9b3644],cl
  4044bc:	or     al,0x66
  4044be:	lods   eax,DWORD PTR ds:[esi]
  4044bf:	xchg   edx,eax
  4044c0:	iret   
  4044c1:	fsubr  st(7),st
  4044c3:	xor    DWORD PTR [eax+0x11064a8d],edi
  4044c9:	imul   edx,eax,0x15
  4044cc:	mov    bl,0xf4
  4044ce:	outs   dx,BYTE PTR ds:[esi]
  4044cf:	neg    BYTE PTR [ebp+0x31]
  4044d2:	jae    0x404544
  4044d4:	lea    ebp,[edi-0x51722cc5]
  4044da:	jmp    0x2609ff56
  4044df:	pushf  
  4044e0:	and    al,0x16
  4044e2:	popa   
  4044e3:	mov    ah,0x46
  4044e5:	inc    edi
  4044e6:	jbe    0x4044f6
  4044e8:	ins    DWORD PTR es:[edi],dx
  4044e9:	ror    DWORD PTR [ebp-0x25530eaa],cl
  4044ef:	mov    bl,BYTE PTR [esi+0x76]
  4044f2:	pusha  
  4044f3:	or     esi,DWORD PTR ds:0xbdc8d26c
  4044f9:	call   0x8b1338bd
  4044fe:	pop    edi
  4044ff:	mov    esi,0x94392340
  404505:	aaa    
  404506:	loop   0x40448a
  404508:	adc    al,BYTE PTR [eax+eax*4-0x124bdfd8]
  40450f:	(bad)  
  404510:	cmp    esp,DWORD PTR [ebx-0x3e7e65e9]
  404516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404517:	call   0x6c1f95d8
  40451c:	fist   DWORD PTR [ecx]
  40451e:	shr    DWORD PTR [edx+0x1b],1
  404521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404522:	ret    
  404523:	dec    edx
  404524:	push   es
  404525:	loopne 0x404562
  404527:	mov    al,ds:0x6f5200a7
  40452c:	bound  eax,QWORD PTR [ebx+0x23fc750]
  404532:	out    dx,eax
  404533:	and    DWORD PTR [edi+0x13],0x43201ab8
  40453a:	int    0x12
  40453c:	out    dx,al
  40453d:	pop    edx
  40453e:	ja     0x40453e
  404540:	fcom   QWORD PTR [esi+esi*8+0x432c0016]
  404547:	cmp    ch,BYTE PTR [ebx+0xa895ae]
  40454d:	push   0xffffff83
  40454f:	mov    dl,0x7a
  404551:	retf   
  404552:	(bad)
  404556:	jbe    0x404550
  404558:	adc    eax,DWORD PTR [edx+0x66933fde]
  40455e:	mov    dh,0x84
  404560:	clc    
  404561:	inc    ecx
  404562:	lahf   
  404563:	aad    0x61
  404565:	stos   BYTE PTR es:[edi],al
  404566:	push   ebp
  404567:	clc    
  404568:	mov    DWORD PTR ss:[ebp-0x70e22886],edi
  40456f:	and    BYTE PTR [edx],0xed
  404572:	(bad)  
  404573:	pop    ebp
  404574:	aaa    
  404575:	push   es
  404576:	sub    al,0x52
  404578:	add    eax,DWORD PTR [ebp-0x54]
  40457b:	push   edx
  40457c:	push   eax
  40457d:	(bad)  
  40457e:	scas   al,BYTE PTR es:[edi]
  40457f:	int3   
  404580:	fstp   st(5)
  404582:	je     0x404562
  404584:	popw   ss
  404586:	es icebp 
  404588:	jbe    0x404522
  40458a:	fs in  al,dx
  40458c:	in     al,dx
  40458d:	cld    
  40458e:	sub    eax,0x788f7bbe
  404593:	push   ebp
  404594:	pushf  
  404595:	addps  xmm5,XMMWORD PTR [esi+0x5f44bb5c]
  40459c:	inc    esp
  40459d:	sbb    ebx,DWORD PTR [edx]
  40459f:	mov    ?,WORD PTR [ecx+0x53c560bf]
  4045a5:	sbb    eax,0xd408f13f
  4045aa:	and    DWORD PTR [edi+esi*1-0x1eccc955],ebx
  4045b1:	(bad)  
  4045b2:	cdq    
  4045b3:	xchg   edx,eax
  4045b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045b5:	imul   ebx,DWORD PTR [edx+0x43df5acb],0x9f13a7e2
  4045bf:	dec    esp
  4045c0:	pop    ss
  4045c1:	cld    
  4045c2:	push   0x163da6ef
  4045c7:	mov    ebx,0x258961d6
  4045cc:	sbb    BYTE PTR [eax],al
  4045ce:	xchg   DWORD PTR [esi+0x4a800b8e],esp
  4045d4:	loop   0x404633
  4045d6:	retf   
  4045d7:	push   ds
  4045d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d9:	jp     0x4045a7
  4045db:	push   0xa6c0a827
  4045e0:	xor    ebp,DWORD PTR [edi+0x4a]
  4045e3:	inc    edx
  4045e4:	inc    eax
  4045e5:	popf   
  4045e6:	aas    
  4045e7:	ja     0x40459f
  4045e9:	fbstp  TBYTE PTR ds:0xf419d415
  4045ef:	jns    0x4045eb
  4045f1:	jge    0x4045cc
  4045f3:	xchg   ebx,eax
  4045f4:	test   BYTE PTR [ebx-0x816529a],bh
  4045fa:	mov    ah,BYTE PTR [edi]
  4045fc:	mov    esi,0x5ba7f18e
  404601:	out    0xcd,eax
  404603:	je     0x4045d2
  404605:	dec    edx
  404606:	popa   
  404607:	dec    ebp
  404608:	int    0x31
  40460a:	xchg   esi,eax
  40460b:	mov    edx,0x3789d1fa
  404610:	pop    ss
  404611:	add    DWORD PTR [ecx-0x151df852],eax
  404617:	dec    esi
  404618:	pop    edi
  404619:	xchg   ebp,eax
  40461a:	or     BYTE PTR [edx],dh
  40461c:	mov    dh,BYTE PTR [edi+edi*1+0x7d8ce5de]
  404623:	fisubr DWORD PTR [eax+0x7f]
  404626:	cmp    eax,0x5fc788b1
  40462b:	sbb    DWORD PTR [eax+ebp*8-0x34],edx
  40462f:	test   eax,0x10aa950
  404635:	clc    
  404636:	mov    edi,0x78884bab
  40463b:	cmc    
  40463c:	int3   
  40463d:	sub    DWORD PTR [ebp-0x44b3bc97],eax
  404643:	out    dx,eax
  404644:	mov    eax,0x783c65b
  404649:	mul    BYTE PTR [edx-0x31299dac]
  40464f:	push   ebp
  404650:	mov    ecx,0x7413075a
  404655:	sub    cl,BYTE PTR [ebp-0x66]
  404658:	sbb    BYTE PTR [edi-0xaf8f5bd],dh
  40465e:	add    edi,DWORD PTR [eax+0x60372973]
  404664:	mov    edi,0x3aac8e4d
  404669:	cwde   
  40466a:	into   
  40466b:	add    edx,DWORD PTR [edx-0x37c51537]
  404671:	nop
  404672:	cdq    
  404673:	sub    BYTE PTR [edx],cl
  404675:	addr16 mov esp,0xf23087f7
  40467b:	mov    bl,0x6d
  40467d:	xor    DWORD PTR [ebp-0x71],edi
  404680:	ins    DWORD PTR es:[edi],dx
  404681:	push   ss
  404682:	push   esi
  404683:	mov    esp,0xf8d272e2
  404688:	pop    edi
  404689:	adc    al,0x61
  40468b:	push   edx
  40468c:	mov    ds:0x4e9872ab,eax
  404691:	or     edx,ecx
  404693:	sub    DWORD PTR [ecx-0x5b],ecx
  404696:	jp     0x404628
  404698:	sbb    DWORD PTR [ecx+edi*4-0x2dd6b492],0xffffff95
  4046a0:	(bad)  
  4046a1:	or     ah,BYTE PTR [eax+0x72c3307c]
  4046a7:	addr16 xchg ebp,eax
  4046a9:	out    0x86,al
  4046ab:	fsub   QWORD PTR [esi-0x330cd5d7]
  4046b1:	repnz mov cl,0xb7
  4046b4:	dec    eax
  4046b5:	test   ch,bl
  4046b7:	arpl   WORD PTR [ebx+0x14],cx
  4046ba:	out    dx,eax
  4046bb:	add    al,0xf0
  4046bd:	das    
  4046be:	xor    BYTE PTR [edx+0x6a],ah
  4046c1:	mov    esp,0x98a6d802
  4046c6:	pop    ds
  4046c7:	push   esp
  4046c8:	lds    esp,FWORD PTR [ecx-0x4fa820bf]
  4046ce:	ja     0x4046be
  4046d0:	push   edx
  4046d1:	fwait
  4046d2:	scas   eax,DWORD PTR es:[edi]
  4046d3:	inc    ebp
  4046d4:	mov    dh,0xbc
  4046d6:	add    BYTE PTR [ecx+edx*2-0xe],bl
  4046da:	clc    
  4046db:	pop    ebp
  4046dc:	dec    esi
  4046dd:	out    dx,eax
  4046de:	(bad)  
  4046df:	repz mov edi,0xc1743dea
  4046e5:	push   edi
  4046e6:	push   edi
  4046e7:	or     BYTE PTR [eax+0x155a35d3],dl
  4046ed:	add    esp,ebp
  4046ef:	push   ebp
  4046f0:	adc    ecx,DWORD PTR [ebx-0x1d]
  4046f3:	cmp    al,0x26
  4046f5:	call   0xdc69:0x9c005c38
  4046fc:	push   esi
  4046fd:	ror    BYTE PTR [ecx-0x4c],1
  404700:	je     0x4046f5
  404702:	jmp    0xa464:0x6e685b27
  404709:	xor    al,0xeb
  40470b:	sub    eax,0x83cd7a02
  404710:	and    DWORD PTR [ecx-0x5f],edx
  404713:	shr    BYTE PTR [eax],0xf6
  404716:	daa    
  404717:	adc    DWORD PTR [eax],0xffffffb0
  40471a:	mov    esi,DWORD PTR [ecx+0x52acfa66]
  404720:	nop
  404721:	out    dx,al
  404722:	test   eax,0x36022242
  404727:	test   al,0x6b
  404729:	sbb    DWORD PTR [ecx-0x11f58734],esp
  40472f:	push   ds
  404730:	xchg   ebp,eax
  404731:	mov    ebp,esp
  404733:	mov    ebx,0xae8e2d09
  404738:	loopne 0x404760
  40473a:	or     BYTE PTR [ecx+0x6525b0f3],bh
  404740:	or     al,BYTE PTR [ecx]
  404742:	pop    ebp
  404743:	imul   ebp,DWORD PTR [eax],0x7b
  404746:	out    0x4e,eax
  404748:	ss pop esi
  40474a:	leave  
  40474b:	cmc    
  40474c:	and    BYTE PTR [ebp-0x75d68db4],ah
  404752:	and    DWORD PTR [ebx+eiz*2-0x6260c44b],0xb670e3e4
  40475d:	xor    al,0x60
  40475f:	dec    edx
  404760:	inc    edx
  404761:	gs js  0x4047a6
  404764:	ror    BYTE PTR [ebp-0x11],1
  404767:	mov    ah,BYTE PTR [ecx]
  404769:	push   esp
  40476a:	dec    edi
  40476b:	dec    esi
  40476c:	out    dx,al
  40476d:	popa   
  40476e:	retf   0xc6d8
  404771:	jle    0x40478c
  404773:	ficom  WORD PTR [edx+0x2bb2891b]
  404779:	jg     0x404777
  40477b:	xchg   edx,eax
  40477c:	aad    0xbe
  40477e:	mov    ecx,0xf313cf65
  404783:	mov    edi,esp
  404785:	out    dx,eax
  404786:	scas   eax,DWORD PTR es:[edi]
  404787:	iret   
  404788:	push   cs
  404789:	push   0x5d
  40478b:	adc    esp,DWORD PTR [esi]
  40478d:	lahf   
  40478e:	mov    ecx,0x845d38e
  404793:	sbb    esi,DWORD PTR [esi]
  404795:	out    dx,eax
  404796:	xchg   esp,eax
  404797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404798:	clc    
  404799:	test   DWORD PTR [ecx-0x2cf7371],ecx
  40479f:	push   ds
  4047a0:	xchg   edi,eax
  4047a1:	sbb    eax,0xfe4a7e93
  4047a6:	jmp    0xbbfed271
  4047ab:	repnz gs sbb edx,eax
  4047af:	push   ebx
  4047b0:	xor    al,0x42
  4047b2:	add    ecx,DWORD PTR [edx-0x18a42def]
  4047b8:	mov    edi,0x992a15f2
  4047bd:	adc    ebp,DWORD PTR [eax-0x44]
  4047c0:	jns    0x404798
  4047c2:	in     al,0xc7
  4047c4:	sub    dl,BYTE PTR [ecx-0x6]
  4047c7:	pop    esp
  4047c8:	scas   eax,DWORD PTR es:[edi]
  4047c9:	mov    ebp,0xc30b43ca
  4047ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047cf:	lods   eax,DWORD PTR ds:[esi]
  4047d0:	rcr    BYTE PTR [esi],cl
  4047d2:	in     eax,0x99
  4047d4:	xchg   edx,eax
  4047d5:	sub    DWORD PTR [ebx+0x5e],eax
  4047d8:	or     al,0xb1
  4047da:	push   ecx
  4047db:	sbb    esp,eax
  4047dd:	jmp    0x1bb36afa
  4047e2:	jne    0x404784
  4047e4:	loopne 0x404772
  4047e6:	bound  edx,QWORD PTR [edi]
  4047e8:	in     al,0x97
  4047ea:	or     eax,0x3682c051
  4047ef:	js     0x40481e
  4047f1:	aad    0xbc
  4047f3:	and    ecx,esi
  4047f5:	int3   
  4047f6:	pop    edx
  4047f7:	je     0x404873
  4047f9:	mul    DWORD PTR [ecx+edx*4]
  4047fc:	scas   al,BYTE PTR es:[edi]
  4047fd:	xchg   edi,eax
  4047fe:	xchg   edi,eax
  4047ff:	sti    
  404800:	jmp    0x40478b
  404802:	mov    ebp,ecx
  404804:	xor    bl,BYTE PTR [ebp*1+0x1337b76f]
  40480b:	stos   BYTE PTR es:[edi],al
  40480c:	xor    eax,0xe3ec7f9
  404811:	ror    DWORD PTR [ecx+0xe],cl
  404814:	es sahf 
  404816:	or     BYTE PTR [edi],dl
  404818:	sbb    ebx,DWORD PTR [ebx-0x5ced18dc]
  40481e:	inc    esi
  40481f:	push   0xffffffb8
  404821:	mov    esp,0x507787cc
  404826:	mov    ebx,DWORD PTR [ebp-0xf]
  404829:	inc    ecx
  40482a:	dec    ecx
  40482b:	dec    eax
  40482c:	mov    ebp,0x7228fda4
  404831:	mov    cl,0x7d
  404833:	out    dx,al
  404834:	and    eax,DWORD PTR [eax]
  404836:	cld    
  404837:	(bad)  
  404838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404839:	cdq    
  40483a:	sbb    BYTE PTR [esi-0x1ecb9226],0x61
  404841:	aaa    
  404842:	(bad)
  404845:	dec    ecx
  404846:	pop    edi
  404847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404848:	test   DWORD PTR [edi+ebp*4+0x6372cae8],0xe73895b5
  404853:	cld    
  404854:	call   0xce178810
  404859:	mov    eax,0xb952fbd8
  40485e:	stc    
  40485f:	push   cs
  404860:	pop    DWORD PTR [ebp-0x32]
  404863:	and    al,0x1c
  404865:	mov    cl,0xcc
  404867:	hlt    
  404868:	(bad)  
  40486a:	mov    eax,0xe779b572
  40486f:	xchg   ebp,eax
  404870:	fldenv [edi+esi*8-0x1d]
  404874:	sub    eax,DWORD PTR [ecx]
  404876:	js     0x4048e5
  404878:	rol    BYTE PTR [ebx],0xfc
  40487b:	cwde   
  40487c:	je     0x4048df
  40487e:	jecxz  0x404814
  404880:	scas   eax,DWORD PTR es:[edi]
  404881:	fcom   QWORD PTR [ebx]
  404883:	jmp    0xb103c7cd
  404888:	aaa    
  404889:	push   ds
  40488a:	sub    edx,edi
  40488c:	mov    ebp,0xe431b71a
  404891:	and    BYTE PTR [ebx],bl
  404893:	hlt    
  404894:	pop    esp
  404895:	jae    0x4048f2
  404897:	pop    ecx
  404898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404899:	outs   dx,DWORD PTR ds:[esi]
  40489a:	and    al,0x3f
  40489c:	fnstcw WORD PTR [esp+edi*1]
  40489f:	jb     0x40486b
  4048a1:	outs   dx,DWORD PTR ds:[esi]
  4048a2:	push   cs
  4048a3:	sub    DWORD PTR [ebx],edi
  4048a5:	cmp    bh,bh
  4048a7:	adc    al,0x37
  4048a9:	ja     0x4048bd
  4048ab:	daa    
  4048ac:	jae    0x40485f
  4048ae:	rcl    DWORD PTR [ecx+eax*8+0x73],cl
  4048b2:	ds int3 
  4048b4:	pop    ebx
  4048b5:	repnz push 0xfffffff9
  4048b8:	scas   al,BYTE PTR es:[edi]
  4048b9:	scas   al,BYTE PTR es:[edi]
  4048ba:	jno    0x40488c
  4048bc:	sub    DWORD PTR [ebp+0xe],edi
  4048bf:	jae    0x404910
  4048c1:	gs cdq 
  4048c3:	in     eax,0xd9
  4048c5:	cmp    dl,BYTE PTR [ecx]
  4048c7:	and    eax,0x1fad496e
  4048cc:	inc    ecx
  4048cd:	xchg   esp,eax
  4048ce:	or     eax,0xf730ed7b
  4048d3:	mov    edx,0x49db080f
  4048d8:	xchg   ebp,eax
  4048d9:	and    ebx,ebp
  4048db:	iret   
  4048dc:	and    edi,esi
  4048de:	mov    DWORD PTR [ebx],0x968866dd
  4048e4:	lds    eax,FWORD PTR [ecx-0x47]
  4048e7:	add    DWORD PTR [esi-0x1b],edi
  4048ea:	xor    eax,0xf0ff5efe
  4048ef:	sar    DWORD PTR fs:[ecx+0x115fea3f],0x43
  4048f7:	cdq    
  4048f8:	ins    DWORD PTR es:[edi],dx
  4048f9:	int    0x52
  4048fb:	mov    ebx,0xe09b5c7e
  404900:	pop    ds
  404901:	dec    eax
  404902:	jl     0x404908
  404904:	call   0x98b2:0x4c574bc8
  40490b:	jno    0x40495f
  40490d:	rcr    BYTE PTR [edi+0x7b73075c],1
  404913:	sahf   
  404914:	inc    BYTE PTR [esi+0x6243e897]
  40491a:	sbb    dh,BYTE PTR ds:0x237eb351
  404920:	mov    ch,0xe5
  404922:	out    dx,eax
  404923:	popw   ds
  404925:	or     bh,bl
  404927:	pop    ss
  404928:	fcmovnu st,st(5)
  40492a:	arpl   WORD PTR [ebx+0x24fa2337],si
  404930:	dec    ebx
  404931:	mov    ch,0x83
  404933:	xor    edi,DWORD PTR [edi-0xa2cb716]
  404939:	into   
  40493a:	pop    ss
  40493b:	lock jbe 0x4048ea
  40493e:	movaps xmm7,XMMWORD PTR [esi-0x24143599]
  404945:	std    
  404946:	fsubr  QWORD PTR [eax+0x1]
  404949:	fcom   st(0)
  40494b:	js     0x404987
  40494d:	into   
  40494e:	rcr    DWORD PTR [edi+0x23380e44],cl
  404954:	aas    
  404955:	lahf   
  404956:	cmp    eax,0xbf8d9c46
  40495b:	cli    
  40495c:	(bad)  
  40495d:	fsubr  QWORD PTR [ebp-0x3829a808]
  404963:	(bad)  
  404964:	cld    
  404965:	mov    esi,ebp
  404967:	jle    0x404941
  404969:	mov    dh,0xad
  40496b:	iret   
  40496c:	(bad)  
  40496d:	sahf   
  40496e:	sbb    DWORD PTR [ebx+0x1e],esi
  404971:	cmc    
  404972:	sbb    al,0xbc
  404974:	les    esi,FWORD PTR [edi]
  404976:	iret   
  404977:	and    eax,0xa8b50e65
  40497c:	and    esp,DWORD PTR [edi-0x13]
  40497f:	sbb    esi,DWORD PTR [esi+0x63]
  404982:	fwait
  404983:	inc    ebx
  404984:	jne    0x4049d8
  404986:	mov    ch,0x47
  404988:	dec    eax
  404989:	rol    BYTE PTR [edx+0x54],0x6d
  40498d:	xlat   BYTE PTR ds:[ebx]
  40498e:	jo     0x4049b5
  404990:	xchg   ecx,eax
  404991:	cmp    eax,edx
  404993:	fistp  QWORD PTR [edi]
  404995:	inc    edx
  404996:	mov    ebp,0x6c6c44bc
  40499b:	xchg   edi,eax
  40499c:	xor    BYTE PTR [esp+edi*2-0x44],0xeb
  4049a1:	shl    ch,cl
  4049a3:	mov    ds:0x83de1d91,al
  4049a8:	je     0x404a01
  4049aa:	jno    0x404a24
  4049ac:	in     al,0x60
  4049ae:	sbb    bl,BYTE PTR [eax-0x7b4c81eb]
  4049b4:	or     cl,al
  4049b6:	retf   
  4049b7:	aad    0x35
  4049b9:	pop    edx
  4049ba:	cmp    cl,BYTE PTR [edi-0x3d]
  4049bd:	int    0xa6
  4049bf:	out    dx,eax
  4049c0:	rcl    BYTE PTR [eax+eax*8],cl
  4049c3:	dec    edi
  4049c4:	mov    ebx,DWORD PTR [edi]
  4049c6:	push   edi
  4049c7:	in     al,0x1e
  4049c9:	and    bl,ch
  4049cb:	adc    BYTE PTR [edx-0x409c94cb],dl
  4049d1:	jb     0x4049c0
  4049d3:	in     eax,0xf4
  4049d5:	adc    esi,ecx
  4049d7:	(bad)  
  4049d9:	std    
  4049da:	sub    DWORD PTR [ebx+eax*1],esi
  4049dd:	push   es
  4049de:	jo     0x404a41
  4049e0:	stos   DWORD PTR es:[edi],eax
  4049e1:	jno    0x4049e5
  4049e3:	sub    BYTE PTR [ecx],ch
  4049e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e6:	ja     0x404974
  4049e8:	xchg   ebx,eax
  4049e9:	in     eax,dx
  4049ea:	arpl   WORD PTR [edi+0x7b5cf1da],ax
  4049f0:	shr    DWORD PTR [ecx-0x13732446],1
  4049f6:	pop    ecx
  4049f7:	jns    0x404a3c
  4049f9:	jp     0x404a51
  4049fb:	push   esi
  4049fc:	cmc    
  4049fd:	test   eax,0x923857ce
  404a02:	mov    ds,WORD PTR [edi]
  404a04:	xchg   edi,ebp
  404a06:	sub    dl,ch
  404a08:	pop    ds
  404a09:	xchg   esp,eax
  404a0a:	int3   
  404a0b:	jne    0x404a63
  404a0d:	mov    dh,BYTE PTR [ebx+0xc]
  404a10:	adc    ah,BYTE PTR [ecx]
  404a12:	int    0xdb
  404a14:	sbb    esp,esi
  404a16:	fisubr DWORD PTR [esi-0x58a4d8dd]
  404a1c:	fbld   TBYTE PTR [edi-0x414cc034]
  404a22:	loopne 0x4049c7
  404a24:	push   ebp
  404a25:	or     BYTE PTR [ecx-0x7a],al
  404a28:	mov    ds:0x570d08e6,eax
  404a2d:	sub    eax,0x16428300
  404a32:	(bad)  
  404a33:	fisub  DWORD PTR [edx-0x34b482b]
  404a39:	je     0x404a09
  404a3b:	scas   al,BYTE PTR es:[edi]
  404a3c:	shr    DWORD PTR [esi+0x38],1
  404a3f:	mov    ebx,0x3863b5b6
  404a44:	push   edi
  404a45:	ror    BYTE PTR [ebp+0x37],1
  404a48:	les    ecx,FWORD PTR [ecx-0x8129e4e]
  404a4e:	neg    BYTE PTR [ebp+0x430eace9]
  404a54:	aaa    
  404a55:	psubw  mm5,mm0
  404a58:	cld    
  404a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5a:	jg     0x404ab2
  404a5c:	or     dl,BYTE PTR [ecx+0x76be7992]
  404a62:	add    ebx,DWORD PTR [edx-0x79]
  404a65:	lahf   
  404a66:	jecxz  0x404a97
  404a68:	les    edx,FWORD PTR [ecx]
  404a6a:	and    al,0x1a
  404a6c:	inc    ebp
  404a6d:	mov    eax,0x587c808a
  404a72:	sar    DWORD PTR [esi-0x38e9e5e7],1
  404a78:	rcl    ah,cl
  404a7a:	push   cs
  404a7b:	and    al,BYTE PTR [edx]
  404a7d:	jne    0x404a76
  404a7f:	mov    bl,0xd0
  404a81:	out    dx,eax
  404a82:	push   eax
  404a83:	jl     0x404a35
  404a85:	or     edi,ebp
  404a87:	and    esp,0x1bc8ea2f
  404a8d:	pop    ebp
  404a8e:	cmp    edx,DWORD PTR [edi]
  404a90:	jge    0x404a89
  404a92:	or     BYTE PTR ds:0x435f8bf2,dh
  404a98:	push   es
  404a99:	ja     0x404b17
  404a9b:	xchg   esp,eax
  404a9c:	push   0xe3462036
  404aa1:	popf   
  404aa2:	and    eax,0xe4ed38dc
  404aa7:	fist   WORD PTR [ecx*4+0x75fddc38]
  404aae:	push   ebx
  404aaf:	arpl   cx,di
  404ab1:	xchg   ebp,eax
  404ab2:	aad    0x46
  404ab4:	push   es
  404ab5:	cmp    al,0x84
  404ab7:	mov    ds:0x8cf301,eax
  404abc:	scas   eax,DWORD PTR es:[edi]
  404abd:	add    eax,0x7e13a666
  404ac2:	call   0x9155:0xd30c83df
  404ac9:	xchg   esi,eax
  404aca:	or     eax,0xdc30169e
  404acf:	xlat   BYTE PTR ds:[ebx]
  404ad0:	dec    eax
  404ad1:	jl     0x404abe
  404ad3:	inc    esp
  404ad4:	mov    ebp,0xb7792cb5
  404ad9:	sbb    BYTE PTR [edx+0x66],bh
  404adc:	push   ebx
  404add:	(bad)  
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	mov    ds:0x7c71466,al
  404ae4:	jl     0x404b08
  404ae6:	in     al,dx
  404ae7:	jmp    0x8b7f:0xe101bd8e
  404aee:	gs jns 0x404a84
  404af1:	or     BYTE PTR [ebx-0x5e94b583],ah
  404af7:	in     eax,0xf9
  404af9:	imul   ebx,DWORD PTR [edi+eax*2+0x5bce8e4a],0xfffffff5
  404b01:	or     ebx,ebp
  404b03:	lods   al,BYTE PTR ds:[esi]
  404b04:	mov    bl,0xd2
  404b06:	(bad)  
  404b07:	lods   eax,DWORD PTR ds:[esi]
  404b08:	xchg   ebp,eax
  404b09:	push   ds
  404b0a:	cmp    ecx,edi
  404b0c:	in     al,dx
  404b0d:	add    ebx,ecx
  404b0f:	or     eax,0xeb97677
  404b14:	es mov ecx,0xfc6aa856
  404b1a:	or     ch,0x20
  404b1d:	popf   
  404b1e:	fisub  WORD PTR [edx+eiz*8]
  404b21:	cwde   
  404b22:	pop    eax
  404b23:	ror    DWORD PTR [edx],1
  404b25:	test   al,0xcf
  404b27:	push   ecx
  404b28:	jmp    0x404b71
  404b2a:	icebp  
  404b2b:	cli    
  404b2c:	sbb    edi,ecx
  404b2e:	test   DWORD PTR [ebp+0x64],ebp
  404b31:	and    esi,DWORD PTR [edi-0x67]
  404b34:	mov    ebx,0xe192750a
  404b39:	jge    0x404b7a
  404b3b:	cmp    BYTE PTR [ecx+0x168922e5],ah
  404b41:	fidiv  DWORD PTR [esi+esi*2-0x3c4950b7]
  404b48:	fbld   TBYTE PTR [edi+eax*8+0x51]
  404b4c:	aas    
  404b4d:	setno  dh
  404b50:	inc    esp
  404b51:	ins    BYTE PTR es:[edi],dx
  404b52:	inc    eax
  404b53:	(bad)  
  404b54:	ficom  DWORD PTR [esi+0x42795ae6]
  404b5a:	daa    
  404b5b:	adc    dh,BYTE PTR [edx-0x1b777c36]
  404b61:	or     eax,0xd17ed915
  404b66:	retf   
  404b67:	pop    ecx
  404b68:	pop    edx
  404b69:	add    dh,dl
  404b6b:	jge    0x404b1b
  404b6d:	shl    eax,1
  404b6f:	jg     0x404b12
  404b71:	sti    
  404b72:	fiadd  DWORD PTR [edi]
  404b74:	adc    al,0xc8
  404b76:	xor    ebx,ecx
  404b78:	and    bh,BYTE PTR [eax*2-0x2483614c]
  404b7f:	adc    al,0x85
  404b81:	cli    
  404b82:	xor    eax,0x3b3073a8
  404b87:	stos   BYTE PTR es:[edi],al
  404b88:	lahf   
  404b89:	ss pop ebp
  404b8b:	test   BYTE PTR [edi],dh
  404b8d:	xchg   ebp,eax
  404b8e:	or     eax,0xec9ae3c2
  404b93:	pop    ss
  404b94:	je     0x404b2b
  404b96:	mov    edi,0x7e8ca4b
  404b9b:	jne    0x404bf6
  404b9d:	aaa    
  404b9e:	retf   0xa10d
  404ba1:	dec    esi
  404ba2:	ss ja  0x404b6f
  404ba5:	cdq    
  404ba6:	xchg   esi,eax
  404ba7:	aam    0x81
  404ba9:	arpl   WORD PTR [ecx-0x55],cx
  404bac:	mov    edi,0x3572fbd
  404bb1:	lds    ebp,FWORD PTR [esi+0x25]
  404bb4:	arpl   cx,bp
  404bb6:	sbb    ebp,DWORD PTR [edx+ebp*2+0x7717a6ac]
  404bbd:	and    al,0xd9
  404bbf:	retf   0xe507
  404bc2:	test   BYTE PTR [ebx],ch
  404bc4:	pop    ss
  404bc5:	bound  edx,QWORD PTR [edi]
  404bc7:	sub    al,0xb7
  404bc9:	imul   ebp,ecx,0x68
  404bcc:	push   eax
  404bcd:	push   0xffffffee
  404bcf:	popa   
  404bd0:	jns    0x404b7f
  404bd2:	xchg   ecx,eax
  404bd3:	add    DWORD PTR [ecx+0x6d],ebp
  404bd6:	or     esi,esp
  404bd8:	pop    edx
  404bd9:	pop    esp
  404bda:	sub    ch,cl
  404bdc:	imul   BYTE PTR [esi+ebp*2-0x5e]
  404be0:	addr16 inc esp
  404be2:	lods   al,BYTE PTR ds:[esi]
  404be3:	xchg   esi,eax
  404be4:	xchg   edi,eax
  404be5:	jle    0x404bfe
  404be7:	sub    dl,0xf
  404bea:	ins    DWORD PTR es:[edi],dx
  404beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bec:	push   0x5b
  404bee:	xor    ebx,DWORD PTR [esi+0x11a4fa81]
  404bf4:	ins    BYTE PTR es:[edi],dx
  404bf5:	leave  
  404bf6:	push   es
  404bf7:	adc    bl,ch
  404bf9:	aas    
  404bfa:	out    dx,al
  404bfb:	mov    al,cl
  404bfd:	pop    ss
  404bfe:	ret    0x5f67
  404c01:	mov    bl,0xba
  404c03:	gs mov edi,0x987cfaee
  404c09:	add    eax,0x40ce98fd
  404c0e:	push   esi
  404c0f:	xchg   esi,eax
  404c10:	mov    edi,0xc05e8be4
  404c15:	xchg   DWORD PTR [ecx+0x26],ebp
  404c18:	lock push edi
  404c1a:	xor    BYTE PTR [edi+ecx*4+0x56],bl
  404c1e:	je     0x404baa
  404c20:	jo     0x404c75
  404c22:	test   DWORD PTR [ecx+eiz*2-0x436978f7],edx
  404c29:	rcr    DWORD PTR [ecx],0xa5
  404c2c:	pushf  
  404c2d:	mov    bh,0x69
  404c2f:	jl     0x404c2b
  404c31:	push   esp
  404c32:	ficomp WORD PTR ds:0x5d2fbcec
  404c38:	ds das 
  404c3a:	fnsave [ebx]
  404c3c:	inc    esp
  404c3d:	shl    esp,0xd7
  404c40:	and    bh,BYTE PTR [ecx+0x79709bf6]
  404c46:	pop    ss
  404c47:	aas    
  404c48:	push   ecx
  404c49:	add    ecx,DWORD PTR [edi]
  404c4b:	je     0x404c58
  404c4d:	jl     0x404c5e
  404c4f:	aam    0x6d
  404c51:	push   ss
  404c52:	daa    
  404c53:	xor    bh,BYTE PTR [ecx+0x5c]
  404c56:	or     ebp,DWORD PTR [eax]
  404c58:	dec    esp
  404c59:	sbb    BYTE PTR [ecx+0x3f],cl
  404c5c:	jmp    FWORD PTR [edx*8-0x3055c687]
  404c63:	pop    ecx
  404c64:	cmc    
  404c65:	int    0x68
  404c67:	mov    ds,WORD PTR [edx]
  404c69:	cmp    DWORD PTR [esi+ebx*1+0x32],0xc
  404c6e:	mov    ds:0xbad3a145,eax
  404c73:	jmp    0x93d6f25d
  404c78:	sahf   
  404c79:	inc    esp
  404c7a:	mov    ebx,edi
  404c7c:	xchg   ecx,eax
  404c7d:	cmp    eax,0x23fcf6e9
  404c82:	mov    eax,cs:0x7691f51d
  404c88:	in     eax,0x71
  404c8a:	fsubr  DWORD PTR [edi-0x8]
  404c8d:	inc    bh
  404c8f:	call   0x4a8:0xedf94afc
  404c96:	aam    0xf
  404c98:	mov    eax,0x89c15bd0
  404c9d:	lods   eax,DWORD PTR ds:[esi]
  404c9e:	dec    eax
  404c9f:	js     0x404c92
  404ca1:	jne    0x404c69
  404ca3:	call   0x988a405
  404ca8:	aam    0x1e
  404caa:	shr    ch,0xd8
  404cad:	(bad)  
  404cae:	lods   al,BYTE PTR ds:[esi]
  404caf:	mov    ss,esi
  404cb1:	cmp    ecx,DWORD PTR [edi-0x35ab452c]
  404cb7:	aas    
  404cb8:	shl    DWORD PTR [ebx+0x38],1
  404cbb:	sar    DWORD PTR [edi+0x2e],1
  404cbe:	test   al,0x7a
  404cc0:	pop    edi
  404cc1:	pop    eax
  404cc2:	mov    edi,0xcd9d516c
  404cc7:	loop   0x404cca
  404cc9:	into   
  404cca:	ftst   
  404ccc:	mov    ebx,0x8e13cce1
  404cd1:	cli    
  404cd2:	lds    edx,FWORD PTR [edi-0x33]
  404cd5:	aad    0x84
  404cd7:	sbb    bh,BYTE PTR [ecx+0x55]
  404cda:	into   
  404cdb:	sahf   
  404cdc:	inc    edi
  404cdd:	dec    esi
  404cde:	lea    esi,[ebp+eiz*4+0x1c]
  404ce2:	jno    0x404c9e
  404ce4:	lahf   
  404ce5:	mov    ebp,0x1a0ea234
  404cea:	in     al,0x66
  404cec:	dec    esp
  404ced:	hlt    
  404cee:	je     0x404cd6
  404cf0:	test   esi,ebp
  404cf2:	mov    dh,0xc2
  404cf4:	push   edi
  404cf5:	sbb    eax,0xc8d328f2
  404cfa:	xchg   esi,eax
  404cfb:	and    eax,0x8b33481a
  404d00:	ins    DWORD PTR es:[edi],dx
  404d01:	shl    DWORD PTR [ebx+0x7df452aa],0xc3
  404d08:	jg     0x404cf6
  404d0a:	dec    ecx
  404d0b:	ja     0x404d70
  404d0d:	imul   BYTE PTR [ebp+0xd]
  404d10:	mov    esp,eax
  404d12:	mov    BYTE PTR [ebx+ebx*2-0x4c],ah
  404d16:	and    DWORD PTR [edi],ebp
  404d18:	inc    edi
  404d19:	mov    al,ds:0x454a051c
  404d1e:	xor    eax,0x8d53ed62
  404d24:	xchg   BYTE PTR [edx+0x1658769f],cl
  404d2a:	xor    eax,0xd7fc824b
  404d2f:	adc    BYTE PTR [ebx+0xd],0xa7
  404d33:	mov    ah,0x50
  404d35:	mov    ebp,0xc04d295b
  404d3a:	push   es
  404d3b:	sbb    ebp,DWORD PTR [esi-0x58]
  404d3e:	xor    eax,0xf79fecbd
  404d43:	inc    edx
  404d44:	cmp    al,0x33
  404d46:	fdiv   st(0),st
  404d48:	mov    DWORD PTR [edx],ecx
  404d4a:	dec    eax
  404d4b:	and    eax,0x23b21c7c
  404d50:	addr16 inc ebp
  404d52:	dec    ebp
  404d53:	ins    DWORD PTR es:[edi],dx
  404d54:	sub    cl,BYTE PTR [edx+0x74a02184]
  404d5a:	sbb    DWORD PTR [ebx],ebp
  404d5c:	lods   al,BYTE PTR ds:[esi]
  404d5d:	pop    edi
  404d5e:	scas   eax,DWORD PTR es:[edi]
  404d5f:	imul   ebp,DWORD PTR [ebp-0x627ef575],0x1b
  404d66:	daa    
  404d67:	dec    edi
  404d68:	stos   BYTE PTR es:[edi],al
  404d69:	fcomp  QWORD PTR [edi]
  404d6b:	dec    esi
  404d6c:	and    DWORD PTR [edi-0x2d45056b],esi
  404d72:	push   ecx
  404d73:	mov    bl,0x66
  404d75:	sub    al,0xb8
  404d77:	sbb    DWORD PTR [eax],ecx
  404d79:	dec    esp
  404d7a:	lea    esi,[eax]
  404d7c:	fild   WORD PTR [ecx-0x4ffe9f04]
  404d82:	loope  0x404d13
  404d84:	and    DWORD PTR [ebx+0x3f3e21d],ebp
  404d8a:	dec    edx
  404d8b:	xchg   esi,eax
  404d8c:	pop    ecx
  404d8d:	sub    ch,ch
  404d8f:	(bad)  
  404d90:	push   cs
  404d91:	idiv   BYTE PTR [ecx]
  404d93:	and    al,0xda
  404d95:	jbe    0x404d36
  404d97:	fwait
  404d98:	mov    ecx,DWORD PTR [esi]
  404d9a:	sub    DWORD PTR ss:[edi+0x4b2aefa8],eax
  404da1:	test   BYTE PTR [eax],cl
  404da3:	rcr    ebx,cl
  404da5:	mov    bl,0xcf
  404da7:	dec    eax
  404da8:	imul   ebp
  404daa:	enter  0xe38,0xe7
  404dae:	and    edi,DWORD PTR [ecx-0x3c1ed8fd]
  404db4:	mov    edi,0xbfbd147a
  404db9:	mov    bh,0x6a
  404dbb:	adc    al,0xff
  404dbd:	loopne 0x404de4
  404dbf:	xchg   ebp,eax
  404dc0:	jmp    0xfe30b2d0
  404dc5:	mov    bh,0xc2
  404dc7:	sbb    edx,ecx
  404dc9:	es clc 
  404dcb:	add    eax,0xbb23af87
  404dd0:	pop    ds
  404dd1:	jecxz  0x404e00
  404dd3:	repnz mov al,ds:0xa8fb81be
  404dd9:	sub    ah,BYTE PTR [esi]
  404ddb:	inc    ebx
  404ddc:	test   eax,0x1bdecab2
  404de1:	and    al,0x51
  404de3:	lahf   
  404de4:	ror    DWORD PTR cs:[edx-0x30],0x6d
  404de9:	add    DWORD PTR [eax-0x6aa24a81],esp
  404def:	mov    ch,bl
  404df1:	and    eax,0x3d4ffcd5
  404df6:	jge    0x4ebd108
  404dfc:	pop    ds
  404dfd:	jbe    0x404e3e
  404dff:	hlt    
  404e00:	adc    eax,0x1acf67f0
  404e05:	fdivr  st(7),st
  404e07:	outs   dx,DWORD PTR ds:[esi]
  404e08:	sub    eax,0x530623ac
  404e0d:	add    esi,esi
  404e0f:	aad    0x26
  404e11:	mov    ?,WORD PTR [esi-0x13191df7]
  404e17:	stc    
  404e18:	outs   dx,DWORD PTR ds:[esi]
  404e19:	dec    edx
  404e1a:	sbb    DWORD PTR [ebp-0x33],0xc2a92784
  404e21:	lods   al,BYTE PTR ds:[esi]
  404e22:	cmp    esi,edx
  404e24:	mov    al,ds:0x613acbca
  404e29:	popf   
  404e2a:	adc    esp,DWORD PTR ds:0x674b2aad
  404e30:	sbb    eax,DWORD PTR [ebp-0x41]
  404e33:	inc    ecx
  404e34:	loop   0x404e04
  404e36:	sub    ebx,edx
  404e38:	and    ebp,edi
  404e3a:	jmp    0xecf39dff
  404e3f:	ret    0x36f4
  404e42:	push   edx
  404e43:	jae    0x404e5b
  404e45:	add    ch,BYTE PTR [ebp+0x753266a1]
  404e4b:	(bad)  
  404e4c:	adc    DWORD PTR [esi],eax
  404e4e:	ret    
  404e4f:	loopne 0x404eb1
  404e51:	aam    0xcf
  404e53:	add    al,0xb2
  404e55:	(bad)  
  404e56:	push   eax
  404e57:	aaa    
  404e58:	clc    
  404e59:	leave  
  404e5a:	ret    
  404e5b:	cmp    cl,BYTE PTR [ebx-0x4]
  404e5e:	lds    eax,FWORD PTR [edi]
  404e60:	int    0x31
  404e62:	loop   0x404ed7
  404e64:	add    ebx,DWORD PTR [edi]
  404e66:	xchg   BYTE PTR [eax],cl
  404e68:	or     DWORD PTR [ebp-0x79a0892a],ecx
  404e6e:	shr    BYTE PTR [esi],1
  404e70:	jns    0x404ebe
  404e72:	jnp    0x404dfc
  404e74:	and    eax,0xd4287729
  404e79:	inc    eax
  404e7a:	data16 xchg BYTE PTR [ecx],ah
  404e7d:	pop    edx
  404e7e:	xchg   esi,eax
  404e7f:	int3   
  404e80:	loope  0x404e4c
  404e82:	sbb    DWORD PTR [eax-0x50],esp
  404e85:	dec    esp
  404e86:	pop    edx
  404e87:	mov    ch,0x3c
  404e89:	dec    esp
  404e8a:	fs das 
  404e8c:	test   eax,0xfd79d64a
  404e91:	clc    
  404e92:	xlat   BYTE PTR ds:[ebx]
  404e93:	in     al,0x5e
  404e95:	pop    ebx
  404e96:	test   al,0x5a
  404e98:	aad    0xf7
  404e9a:	xor    dh,BYTE PTR [edx+0x6a]
  404e9d:	cmp    eax,0x288c5904
  404ea2:	lock sbb BYTE PTR [ebp-0x40],al
  404ea6:	aas    
  404ea7:	cdq    
  404ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea9:	(bad)  
  404eaa:	jecxz  0x404e77
  404eac:	xor    dl,BYTE PTR [edi]
  404eae:	pushf  
  404eaf:	arpl   WORD PTR [ebx+ebp*2-0x24],dx
  404eb3:	xor    BYTE PTR [esp+eax*2-0x6a],ch
  404eb7:	xor    BYTE PTR [esi+edi*4+0x7b21a99a],bl
  404ebe:	adc    al,0x87
  404ec0:	xchg   ebx,eax
  404ec1:	fiadd  DWORD PTR [edi]
  404ec3:	jge    0x404e7e
  404ec5:	dec    ebx
  404ec6:	aas    
  404ec7:	pop    es
  404ec8:	xor    DWORD PTR [ecx],ebx
  404eca:	mov    ch,0x3c
  404ecc:	inc    ecx
  404ecd:	les    edx,FWORD PTR fs:[ebx+edi*8+0x5050ae43]
  404ed5:	sbb    al,0xb9
  404ed7:	mov    ebx,0x5c928015
  404edc:	(bad)  [ecx]
  404ede:	jle    0x404edd
  404ee0:	xchg   edi,eax
  404ee1:	ret    0xd87b
  404ee4:	adc    dl,BYTE PTR [eax-0x10]
  404ee7:	fxch   st(5)
  404ee9:	inc    ebx
  404eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eeb:	mov    edi,0x2b8bbb8a
  404ef0:	aam    0xae
  404ef2:	call   0x79e7f18b
  404ef7:	or     DWORD PTR [ebp+0x3f],0xffffffcf
  404efb:	shl    DWORD PTR ds:0x5de24e31,0xa7
  404f02:	pop    ecx
  404f03:	loop   0x404f3e
  404f05:	test   DWORD PTR [ecx+0x16],esi
  404f08:	xchg   ebx,eax
  404f09:	clc    
  404f0a:	jnp    0x404e8e
  404f0c:	lods   al,BYTE PTR ds:[esi]
  404f0d:	lahf   
  404f0e:	and    dl,dl
  404f10:	fs jecxz 0x404ee7
  404f13:	mov    ch,0xff
  404f15:	pop    eax
  404f16:	jecxz  0x404f6e
  404f18:	adc    DWORD PTR [ecx+0x3d],edx
  404f1b:	jb     0x404ed2
  404f1d:	mov    ch,0x67
  404f1f:	pop    eax
  404f20:	mov    BYTE PTR [edi+0x2f45fae9],ch
  404f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f27:	mov    eax,ds:0xf6847c
  404f2c:	(bad)  
  404f2d:	cmp    BYTE PTR [esi],dh
  404f2f:	sub    BYTE PTR [ebp+0x59],dh
  404f32:	adc    eax,0xf9de3c99
  404f37:	cmp    eax,0x609a97ad
  404f3c:	sub    esi,DWORD PTR [edx-0x1c]
  404f3f:	inc    esp
  404f40:	bound  esp,QWORD PTR [edi]
  404f42:	mov    WORD PTR [eax-0x6e],es
  404f45:	dec    eax
  404f46:	int3   
  404f47:	xor    eax,0x2c8d7907
  404f4c:	out    dx,eax
  404f4d:	leave  
  404f4e:	add    bl,0x8d
  404f51:	loopne 0x404fd0
  404f53:	pop    eax
  404f54:	aaa    
  404f55:	pop    eax
  404f56:	mov    cl,0xa4
  404f58:	ror    BYTE PTR [edi-0x5fcd0304],cl
  404f5e:	pop    es
  404f5f:	dec    esi
  404f60:	add    BYTE PTR [eax+ebp*8-0x25],0x3d
  404f65:	sbb    ebx,DWORD PTR [ebx]
  404f67:	pop    edx
  404f68:	add    ecx,edi
  404f6a:	mov    eax,0xe94f3ff9
  404f6f:	scas   al,BYTE PTR es:[edi]
  404f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f71:	xchg   ebx,eax
  404f72:	out    dx,al
  404f73:	loopne 0x404f97
  404f75:	mov    eax,ds:0xeb5c8f1e
  404f7a:	cld    
  404f7b:	adc    DWORD PTR [esp+ebx*8-0x2b275f5a],esp
  404f82:	retf   0xd117
  404f85:	or     esi,esp
  404f87:	and    al,0xb5
  404f89:	stos   BYTE PTR es:[edi],al
  404f8a:	(bad)  
  404f8b:	mov    BYTE PTR [esi-0x36],dl
  404f8e:	inc    eax
  404f8f:	je     0x404ffa
  404f91:	cmp    eax,0xffffffd7
  404f94:	mov    edx,0xb798d53a
  404f99:	or     BYTE PTR [edi+0x542ffc0f],bl
  404f9f:	or     esp,edx
  404fa1:	test   eax,edx
  404fa3:	(bad)  
  404fa4:	lahf   
  404fa5:	or     BYTE PTR [ebx+0x7d8bc54],bh
  404fab:	jle    0x404f9e
  404fad:	ins    BYTE PTR es:[edi],dx
  404fae:	repnz pop ecx
  404fb0:	adc    DWORD PTR [esi-0x42d8c64f],ebp
  404fb6:	lea    eax,[eax+eax*1-0x7f4452db]
  404fbd:	dec    edi
  404fbe:	jb     0x404ffc
  404fc0:	fwait
  404fc1:	push   edi
  404fc2:	arpl   WORD PTR [esi+0x22],si
  404fc5:	rcr    BYTE PTR [edi-0x74],cl
  404fc8:	pop    esi
  404fc9:	xchg   esp,eax
  404fca:	mov    esi,0xe7d26dd1
  404fcf:	shl    BYTE PTR [ecx-0x14],0xe2
  404fd3:	call   FWORD PTR [eax]
  404fd5:	push   ebx
  404fd6:	adc    al,0x2e
  404fd8:	jmp    0xecaf1f5d
  404fdd:	sub    al,0xd7
  404fdf:	or     BYTE PTR [ebp-0x2ca1439c],ah
  404fe5:	addr16 jne 0x404f82
  404fe8:	bound  edi,QWORD PTR [ebp-0x29]
  404feb:	lds    esp,FWORD PTR [eax]
  404fed:	inc    edi
  404fee:	mov    ah,0x3c
  404ff0:	fbstp  TBYTE PTR [edx-0x3e982771]
  404ff6:	jbe    0x404fac
  404ff8:	mul    ah
  404ffa:	scas   eax,DWORD PTR es:[edi]
  404ffb:	xchg   ebx,eax
  404ffc:	or     DWORD PTR [esi],ebx
  404ffe:	sbb    eax,0x3b01893b
  405003:	inc    ecx
  405004:	push   ds
  405005:	pop    ebx
  405006:	leave  
  405007:	push   cs
  405008:	push   ss
  405009:	xchg   esp,eax
  40500a:	cdq    
  40500b:	ss pop edi
  40500d:	dec    esp
  40500e:	sbb    ebx,DWORD PTR [ebx+esi*8+0x33]
  405012:	and    al,0xc4
  405014:	in     al,dx
  405015:	mov    ds:0x4cdec7c8,eax
  40501a:	or     DWORD PTR [esi],ebp
  40501c:	sbb    esi,DWORD PTR [ebp-0x3d37b1ff]
  405022:	aam    0x1a
  405024:	adc    eax,0x8caeb88d
  405029:	xchg   ecx,eax
  40502a:	cli    
  40502b:	cmp    BYTE PTR [edi+eiz*8+0x7d9fb52a],0x8a
  405033:	or     DWORD PTR ds:0x81a0eb83,edi
  405039:	mov    eax,ds:0x1dca9bdf
  40503e:	ja     0x4050a1
  405040:	out    0x8f,eax
  405042:	adc    DWORD PTR [ebp+0x6deff6d8],0x82fae061
  40504c:	mov    WORD PTR [esi],fs
  40504e:	or     dl,ch
  405050:	stos   BYTE PTR es:[edi],al
  405051:	leave  
  405052:	sbb    eax,0x39d7cf8e
  405057:	mov    bh,0x4d
  405059:	int    0xbc
  40505b:	jno    0x40506a
  40505d:	mov    ebp,0x853f65e2
  405062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405063:	dec    esi
  405064:	inc    edx
  405065:	push   DWORD PTR [eax-0x6e78cfb9]
  40506b:	or     DWORD PTR [esi+ebx*1],ebx
  40506e:	das    
  40506f:	ins    DWORD PTR es:[edi],dx
  405070:	cld    
  405071:	mov    esi,0x149694c8
  405076:	adc    DWORD PTR [ecx-0x41],0xa2d58578
  40507d:	xor    dl,BYTE PTR [ecx]
  40507f:	cmp    BYTE PTR [ebx+0x69],al
  405082:	pop    es
  405083:	icebp  
  405084:	in     eax,0x38
  405086:	jb     0x4050e9
  405088:	ins    DWORD PTR es:[edi],dx
  405089:	call   0xd8d0:0xc8b83af6
  405090:	dec    ecx
  405091:	and    ebx,0x7f83d0f5
  405097:	sub    BYTE PTR [esi],cl
  405099:	sub    dl,al
  40509b:	cmp    DWORD PTR [ecx+0x1035bb55],esp
  4050a1:	sbb    DWORD PTR [edx],esp
  4050a3:	loopne 0x40505f
  4050a5:	es mov cl,al
  4050a8:	dec    edi
  4050a9:	lods   eax,DWORD PTR ds:[esi]
  4050aa:	adc    DWORD PTR [eax+ebx*1],ecx
  4050ad:	push   ds
  4050ae:	cmp    DWORD PTR [ecx-0x56],esi
  4050b1:	(bad)  
  4050b2:	(bad)
  4050b6:	jno    0x405050
  4050b8:	or     eax,0xac695f8b
  4050bd:	leave  
  4050be:	and    BYTE PTR [ecx-0x4f15ffe2],ah
  4050c4:	mov    ah,0x78
  4050c6:	adc    eax,DWORD PTR [di+0x9]
  4050ca:	test   al,0xc7
  4050cc:	mov    cl,0x90
  4050ce:	xchg   al,bl
  4050d0:	mov    ds:0x474a0308,eax
  4050d5:	sub    esi,DWORD PTR [ebp-0x40ac0558]
  4050db:	(bad)  
  4050dc:	imul   esi,DWORD PTR [ecx+0x7f312fef],0xffffffbd
  4050e3:	push   ds
  4050e4:	scas   eax,DWORD PTR es:[edi]
  4050e5:	mov    BYTE PTR [ecx-0x44169698],ah
  4050eb:	xor    esi,DWORD PTR [eax+0x6428168f]
  4050f1:	sub    al,0x88
  4050f3:	retf   0xe029
  4050f6:	retf   0xef86
  4050f9:	jl     0x405082
  4050fb:	bound  ebx,QWORD PTR [edi-0x30819667]
  405101:	or     eax,DWORD PTR [ebx+edx*8]
  405104:	in     al,dx
  405105:	test   BYTE PTR [ecx+0x2e],bh
  405108:	xchg   ecx,eax
  405109:	sub    al,0x2f
  40510b:	pop    ebx
  40510c:	mov    eax,0x77bab97b
  405111:	inc    eax
  405112:	pop    esp
  405113:	repz mov esi,DWORD PTR [ebx]
  405116:	mov    ecx,0xdff0678f
  40511b:	into   
  40511c:	jae    0x405101
  40511e:	adc    edi,edi
  405120:	sbb    BYTE PTR [edx],al
  405122:	mov    ebp,DWORD PTR [ebx]
  405124:	inc    ecx
  405125:	in     al,dx
  405126:	jne    0x40517a
  405128:	addr16 inc ebx
  40512a:	sbb    al,0x36
  40512c:	pop    edx
  40512d:	inc    ebp
  40512e:	add    DWORD PTR [eax-0x62a70cd0],edi
  405134:	add    eax,0x360610c9
  405139:	inc    ecx
  40513a:	aaa    
  40513b:	adc    bl,bh
  40513d:	xchg   DWORD PTR [eax+0x4d21c856],edx
  405143:	pop    es
  405144:	sub    eax,0xef56276a
  405149:	shr    BYTE PTR [ebx],0x1f
  40514c:	dec    ebx
  40514d:	inc    bl
  40514f:	arpl   si,dx
  405151:	pop    ecx
  405152:	cmp    dl,0x5a
  405155:	dec    edi
  405156:	icebp  
  405157:	and    BYTE PTR [esi-0x2acf13d9],ah
  40515d:	ret    
  40515e:	and    eax,0xffffffd0
  405161:	inc    esp
  405162:	pop    ecx
  405163:	xchg   edi,eax
  405164:	fwait
  405165:	xchg   ecx,eax
  405166:	outs   dx,DWORD PTR ds:[esi]
  405167:	mov    edx,0x21eb7daa
  40516c:	sub    BYTE PTR [ecx+0x23],al
  40516f:	rcr    DWORD PTR [eax],1
  405171:	mov    bh,0x4f
  405173:	pop    ds
  405174:	xchg   edi,eax
  405175:	int    0x23
  405177:	pusha  
  405178:	mov    al,ds:0x71e6738e
  40517d:	iret   
  40517e:	pop    es
  40517f:	and    BYTE PTR [esi+0x2e35446],dh
  405185:	ret    0xf7ee
  405188:	xchg   BYTE PTR [edi+0x52],dh
  40518b:	ja     0x40512a
  40518d:	and    ecx,DWORD PTR [eax+0x685ecd0c]
  405193:	ret    
  405194:	jo     0x40513e
  405196:	sbb    edx,esp
  405198:	xor    BYTE PTR [ebp+0x63],ah
  40519b:	inc    esi
  40519c:	xchg   ebp,eax
  40519d:	pop    edx
  40519e:	sub    DWORD PTR [ecx-0x12],ecx
  4051a1:	frstor [ebx-0x3c9d4fa8]
  4051a7:	outs   dx,BYTE PTR ds:[esi]
  4051a8:	pop    esp
  4051a9:	(bad)  
  4051ab:	neg    DWORD PTR [esi]
  4051ad:	pop    edx
  4051ae:	add    esp,DWORD PTR [ecx]
  4051b0:	gs mov bh,0xae
  4051b3:	and    esi,eax
  4051b5:	js     0x40517d
  4051b7:	lock and BYTE PTR [esi+ebx*8-0x67882aac],ah
  4051bf:	add    ebp,DWORD PTR [ebx-0x32]
  4051c2:	xor    edi,DWORD PTR [ebp-0x65]
  4051c5:	mov    BYTE PTR [ebx],bh
  4051c7:	and    BYTE PTR [edx],dl
  4051c9:	js     0x40521e
  4051cb:	(bad)  
  4051cc:	icebp  
  4051cd:	jp     0x4051c1
  4051cf:	pop    ebx
  4051d0:	std    
  4051d1:	push   edi
  4051d2:	push   0x94a5be1a
  4051d7:	loop   0x4051d2
  4051d9:	xchg   ecx,eax
  4051da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051db:	popf   
  4051dc:	xchg   ecx,eax
  4051dd:	repz cld 
  4051df:	ror    BYTE PTR [ebp+0x1f39fd46],cl
  4051e5:	or     ch,BYTE PTR cs:[ecx]
  4051e8:	mov    esp,DWORD PTR [esi-0x2aac9089]
  4051ee:	out    dx,al
  4051ef:	fmul   st,st(4)
  4051f1:	dec    esi
  4051f2:	dec    ecx
  4051f3:	mov    ecx,0xe4875fc3
  4051f8:	int3   
  4051f9:	fwait
  4051fa:	adc    eax,0x3f8f40a8
  4051ff:	out    0x6,eax
  405201:	push   ebx
  405202:	(bad)  
  405203:	jmp    0x150d:0xefd29f23
  40520a:	mov    ebp,0x3229523c
  40520f:	jae    0x40522f
  405211:	xchg   BYTE PTR [eax+0x1645b49],ah
  405217:	and    eax,0x7895e75
  40521c:	aaa    
  40521d:	out    0xc,eax
  40521f:	in     eax,dx
  405220:	sbb    BYTE PTR ss:[edi+0x57cc426c],0xa1
  405228:	or     BYTE PTR [ebp+eiz*2+0x21],ah
  40522c:	cmp    al,0x8f
  40522e:	mov    bl,0xaa
  405230:	push   0xd09e033
  405235:	xor    esp,ecx
  405237:	jo     0x40520f
  405239:	mov    al,ds:0xc579e089
  40523e:	or     eax,0x4b10c207
  405243:	test   al,0xe0
  405245:	dec    edx
  405246:	ret    0x9446
  405249:	fcmovb st,st(0)
  40524b:	push   eax
  40524c:	fs and esp,esp
  40524f:	push   es
  405250:	je     0x4051ea
  405252:	out    0x14,al
  405254:	rol    BYTE PTR [edi],cl
  405256:	mov    edx,0x54535423
  40525b:	sahf   
  40525c:	stc    
  40525d:	jp     0x40523d
  40525f:	jo     0x4051f7
  405261:	call   0x6a27:0xbdc19cc
  405268:	adc    DWORD PTR [ebp+esi*4-0x4c],edi
  40526c:	stc    
  40526d:	cmp    al,0xe2
  40526f:	mov    BYTE PTR [ecx-0x65],cl
  405272:	lahf   
  405273:	enter  0x6bcd,0x16
  405277:	jns    0x4052d9
  405279:	icebp  
  40527a:	sbb    ah,BYTE PTR [esi+0x7134073]
  405280:	push   ds
  405281:	ins    DWORD PTR es:[edi],dx
  405282:	ss xchg edi,eax
  405284:	(bad)
  405287:	movhps QWORD PTR [eax+0xa],xmm7
  40528b:	jne    0x405285
  40528d:	ja     0x4052aa
  40528f:	jle    0x4052fb
  405291:	sbb    DWORD PTR [ecx-0x195a45a1],eax
  405297:	mov    al,ds:0x202de939
  40529c:	mov    esi,0x55a68b22
  4052a1:	jmp    0x6ec42170
  4052a6:	dec    esp
  4052a7:	test   BYTE PTR [edx+0x4fefa762],dl
  4052ad:	stc    
  4052ae:	jns    0x405301
  4052b0:	sbb    eax,0x53b611f1
  4052b5:	test   eax,0xc6759735
  4052ba:	push   esi
  4052bb:	push   esp
  4052bd:	arpl   WORD PTR [edx-0x7895afdc],bp
  4052c3:	cmp    eax,DWORD PTR [ebx+0x36455dab]
  4052c9:	adc    BYTE PTR [edi+ebp*1],cl
  4052cc:	test   dl,ah
  4052ce:	jne    0x40525c
  4052d0:	add    BYTE PTR [ebp+0x17123684],bl
  4052d6:	xor    eax,0x39cc1323
  4052db:	retf   0x40e7
  4052de:	jmp    0xf1f6ecf2
  4052e3:	in     al,dx
  4052e4:	mov    edi,es
  4052e6:	jg     0x405294
  4052e8:	daa    
  4052e9:	sub    esi,DWORD PTR [edi+0x4633f5d0]
  4052ef:	and    al,0xa3
  4052f1:	out    0x6d,al
  4052f3:	inc    esp
  4052f4:	and    DWORD PTR [esi+0x21967ca0],0x28218aa5
  4052fe:	mov    cl,0x47
  405300:	xchg   edx,eax
  405301:	sub    DWORD PTR [esi-0x543dc490],ebx
  405307:	iret   
  405308:	shl    DWORD PTR [esi-0x73],0x60
  40530c:	in     al,0x94
  40530e:	es push edi
  405310:	mov    eax,0xb8989215
  405315:	stos   DWORD PTR es:[edi],eax
  405316:	push   esp
  405317:	jl     0x4052fa
  405319:	sub    ah,al
  40531b:	les    edx,FWORD PTR [ebx-0x38]
  40531e:	sub    esi,edx
  405320:	pop    ebp
  405321:	push   ds
  405322:	jmp    0x737d:0xff15062
  405329:	add    ch,BYTE PTR [edi-0x62]
  40532c:	sahf   
  40532d:	fisttp WORD PTR [edx]
  40532f:	ins    BYTE PTR es:[di],dx
  405331:	les    esp,FWORD PTR [eax]
  405333:	sub    esp,DWORD PTR [ebp-0x73f9fe4d]
  405339:	(bad)  
  40533a:	xchg   edi,eax
  40533b:	je     0x4052d0
  40533d:	cmp    DWORD PTR fs:[ecx+0x3b],0xffffff90
  405342:	mov    DWORD PTR [eax],edx
  405344:	xchg   ebx,eax
  405345:	outs   dx,BYTE PTR ds:[esi]
  405346:	fdivr  DWORD PTR [ebx+0x3]
  405349:	push   ebp
  40534a:	or     al,0xbf
  40534c:	mov    DWORD PTR [ecx+0x46],ebx
  40534f:	push   esp
  405350:	popf   
  405351:	shl    ecx,1
  405353:	pop    ecx
  405354:	ss mov dh,bh
  405357:	xchg   ebx,eax
  405358:	fsub   DWORD PTR [edx+ebp*8+0x35e77bd4]
  40535f:	mov    ebx,0xeed12282
  405364:	lahf   
  405365:	and    BYTE PTR [eax+0x36],dl
  405368:	jb     0x405333
  40536a:	mov    ch,BYTE PTR [ecx]
  40536c:	outs   dx,DWORD PTR ds:[esi]
  40536d:	dec    eax
  40536e:	cmp    eax,0x4d2c6e5e
  405373:	xchg   ebp,eax
  405374:	pop    ss
  405375:	repz out 0x5c,al
  405378:	mov    ds:0xcec32025,eax
  40537d:	push   ebp
  40537e:	das    
  40537f:	arpl   WORD PTR [esi+0x4719b6db],cx
  405385:	ins    BYTE PTR es:[edi],dx
  405386:	mov    dh,0x9f
  405388:	inc    DWORD PTR ds:0x92a209ea
  40538e:	repnz lock push esp
  405391:	scas   al,BYTE PTR es:[edi]
  405392:	dec    ecx
  405393:	ss in  al,dx
  405395:	dec    ebp
  405396:	sub    BYTE PTR [esi+0x4b],bl
  405399:	dec    eax
  40539a:	mov    esi,eax
  40539c:	add    al,0x14
  40539e:	inc    ebx
  40539f:	mov    ch,0x23
  4053a1:	aam    0x88
  4053a3:	adc    dl,BYTE PTR [esi+0x77]
  4053a6:	cmp    BYTE PTR [eax+0x8],al
  4053a9:	int3   
  4053aa:	mov    ebx,ebx
  4053ac:	xor    DWORD PTR [edi-0x7c],esi
  4053af:	(bad)  
  4053b0:	fwait
  4053b1:	daa    
  4053b2:	scas   al,BYTE PTR es:[edi]
  4053b3:	adc    BYTE PTR [esi+eiz*4-0xc66e6c6],ah
  4053ba:	sahf   
  4053bb:	fucom  st(2)
  4053bd:	cld    
  4053be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053bf:	aad    0x5b
  4053c1:	push   ecx
  4053c2:	pop    ds
  4053c3:	sbb    BYTE PTR [esi-0x2f],dl
  4053c6:	(bad)  
  4053c8:	mov    ds:0x8eea6c46,eax
  4053cd:	popa   
  4053ce:	sar    esi,1
  4053d0:	sbb    eax,DWORD PTR [edx-0x24deada7]
  4053d6:	cmc    
  4053d7:	inc    esp
  4053d8:	cld    
  4053d9:	xchg   edx,eax
  4053da:	(bad)  
  4053db:	jmp    0xdf2c:0xc61855
  4053e2:	xor    al,0xe7
  4053e4:	pusha  
  4053e5:	ret    
  4053e6:	nop
  4053e7:	xchg   ebp,eax
  4053e8:	cdq    
  4053e9:	lahf   
  4053ea:	inc    edx
  4053eb:	pop    ds
  4053ec:	cmp    dl,dl
  4053ee:	jmp    0xc7ad:0x75aad4ed
  4053f5:	bound  ebp,QWORD PTR [edx+ecx*1+0x4e]
  4053f9:	test   al,0xad
  4053fb:	jne    0x40540b
  4053fd:	loopne 0x405463
  4053ff:	pop    esp
  405400:	mov    al,0x29
  405402:	dec    edx
  405403:	ret    
  405404:	sbb    DWORD PTR [ebp-0x14],eax
  405407:	adc    al,0xdf
  40540a:	xchg   edx,eax
  40540b:	and    DWORD PTR [edx+0x533b4653],0x12
  405412:	xor    BYTE PTR [ecx+edx*1-0x67],ah
  405416:	mov    esi,0x948d8e47
  40541b:	sub    ebp,DWORD PTR [esi]
  40541d:	jae    0x405436
  40541f:	mov    edx,0x205d2cb5
  405424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405425:	pop    ebp
  405426:	out    0xd6,eax
  405428:	push   esp
  405429:	shl    BYTE PTR [esi+0x61f1a4e5],0x4e
  405430:	in     ax,dx
  405432:	test   BYTE PTR [ecx+0x759c5c36],dh
  405438:	leave  
  405439:	sbb    dh,BYTE PTR [ebx+0x6d470c53]
  40543f:	xchg   esp,eax
  405440:	xchg   ecx,eax
  405441:	ror    DWORD PTR [edx+0x2a],0x6d
  405445:	in     al,dx
  405446:	push   ds
  405447:	dec    ebp
  405448:	dec    ebp
  405449:	dec    edi
  40544a:	mov    edi,0xdbc7a327
  40544f:	iret   
  405450:	adc    edx,DWORD PTR [ebp+0x1049eda0]
  405456:	pop    ebx
  405457:	ins    DWORD PTR es:[edi],dx
  405458:	ja     0x405458
  40545a:	jne    0x405432
  40545c:	mov    DWORD PTR [edi-0x5f19a0d4],ecx
  405462:	imul   BYTE PTR [edx+0x299f6e54]
  405468:	mov    esp,0xc01289
  40546d:	xchg   edx,eax
  40546e:	data16 mov al,0x84
  405471:	and    edi,edi
  405473:	mov    edi,0x79071b27
  405478:	imul   edi,DWORD PTR [ebp-0x71],0xffffffbe
  40547c:	lock add DWORD PTR [esi+0x7b],ebp
  405480:	jg     0x4054ef
  405482:	lds    ebp,FWORD PTR [edx-0x6b01b4d1]
  405488:	add    esi,ecx
  40548a:	dec    eax
  40548b:	in     eax,dx
  40548c:	mov    ds:0x9880ae0,al
  405491:	fbld   TBYTE PTR [eax]
  405493:	dec    ebx
  405494:	add    DWORD PTR [edi-0x74],edx
  405497:	push   esp
  405498:	pop    eax
  405499:	fcmovnbe st,st(6)
  40549b:	mov    ch,cl
  40549d:	sub    bl,BYTE PTR [eax]
  40549f:	mov    bl,0xd0
  4054a1:	adc    esi,DWORD PTR [eax]
  4054a3:	xchg   ebp,eax
  4054a4:	retf   
  4054a5:	pop    ss
  4054a6:	test   al,0x2b
  4054a8:	imul   edi,DWORD PTR [esp+eiz*2+0x38],0x7a5ef779
  4054b0:	xchg   esi,eax
  4054b1:	test   esi,edi
  4054b3:	mov    bl,0x1c
  4054b5:	and    DWORD PTR [ecx-0x1e],ebx
  4054b8:	mov    bh,0x36
  4054ba:	std    
  4054bb:	dec    esp
  4054bc:	jmp    0x875e:0x5a1b835c
  4054c3:	dec    ecx
  4054c4:	ds icebp 
  4054c6:	test   BYTE PTR [eax-0x56306f62],bl
  4054cc:	enter  0x7190,0xbf
  4054d0:	addr16 call 0x6b5c5893
  4054d6:	adc    BYTE PTR [ebx+0x2fa43984],dh
  4054dc:	add    dl,BYTE PTR ds:0x356d6522
  4054e2:	xchg   ecx,eax
  4054e3:	jge    0x4054aa
  4054e5:	sar    DWORD PTR [ebp+0x2332bde7],1
  4054eb:	rol    BYTE PTR [ebp-0x50],1
  4054ee:	mov    ebx,0x6dd67e4f
  4054f3:	mov    edx,0xc2960ca4
  4054f8:	inc    esp
  4054f9:	nop
  4054fa:	pop    eax
  4054fb:	xchg   DWORD PTR [edx-0x60],edx
  4054fe:	(bad)  
  4054ff:	mov    al,0xc9
  405501:	xchg   ecx,eax
  405502:	ins    DWORD PTR es:[edi],dx
  405503:	and    bl,dl
  405505:	js     0x4054a3
  405507:	or     BYTE PTR [edx+edx*4-0x7],ah
  40550b:	inc    esi
  40550c:	or     esp,esi
  40550e:	jmp    0xb90109cd
  405513:	push   ebp
  405514:	mov    ss,ecx
  405516:	mov    ecx,0x3757140c
  40551b:	jae    0x405581
  40551d:	sbb    eax,0x8e8d6d58
  405522:	mov    bl,0x43
  405524:	add    eax,0x7ed38cab
  405529:	das    
  40552a:	stc    
  40552b:	xchg   edi,eax
  40552c:	in     al,0x47
  40552e:	fldenv [eax-0x29]
  405531:	repnz pop edx
  405533:	lods   al,BYTE PTR ds:[esi]
  405534:	nop
  405535:	ficom  DWORD PTR [edx]
  405537:	add    edx,0xffffffe2
  40553a:	lods   eax,DWORD PTR ds:[esi]
  40553b:	(bad)  
  40553c:	xchg   edi,eax
  40553d:	fimul  WORD PTR [edi]
  40553f:	mov    eax,ds:0xc642c97
  405544:	call   ecx
  405546:	push   ss
  405547:	add    ch,BYTE PTR [esi]
  405549:	pop    edi
  40554a:	iret   
  40554b:	add    DWORD PTR [ecx+0x4c430b85],0xffffff83
  405552:	xchg   ebp,eax
  405553:	arpl   WORD PTR [eax],bx
  405555:	mov    ecx,es
  405557:	and    DWORD PTR [edi-0x20],eax
  40555a:	dec    eax
  40555b:	std    
  40555c:	sbb    BYTE PTR [eax-0x7380534e],dh
  405562:	mov    cl,0x80
  405564:	add    al,0x4e
  405566:	mov    BYTE PTR [ebx],ah
  405568:	or     BYTE PTR [edi],dh
  40556a:	mov    BYTE PTR [eax+0x73],dh
  40556d:	or     BYTE PTR [ebp+0x52],0x67
  405571:	aas    
  405572:	in     al,dx
  405573:	mov    BYTE PTR [esi-0x9d9cb9a],dh
  405579:	popa   
  40557a:	fiadd  WORD PTR [ecx-0x47]
  40557d:	jl     0x4055a2
  40557f:	pop    es
  405580:	out    0x9d,eax
  405582:	out    0x95,eax
  405584:	dec    esi
  405585:	call   0x759ef6be
  40558a:	mov    ds:0x22fd8c11,eax
  40558f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405590:	mov    ebp,0x1387d173
  405595:	xchg   edx,eax
  405596:	pop    edi
  405597:	rcl    DWORD PTR [ecx+0x4954a833],0xe4
  40559e:	mov    esp,0x8512baf4
  4055a3:	dec    edi
  4055a4:	xchg   ebx,eax
  4055a5:	pop    eax
  4055a6:	jns    0x40554f
  4055a8:	jb     0x40553f
  4055aa:	aas    
  4055ab:	push   ecx
  4055ac:	or     DWORD PTR [edx+0x6d136c99],esi
  4055b2:	or     eax,0xa2f8442f
  4055b7:	mov    cl,0x40
  4055b9:	pop    ebp
  4055ba:	add    dl,BYTE PTR [esi-0x7e410638]
  4055c0:	push   es
  4055c1:	pop    ecx
  4055c2:	xchg   esi,eax
  4055c3:	dec    edx
  4055c4:	das    
  4055c5:	fisubr DWORD PTR [eax]
  4055c7:	stc    
  4055c8:	mov    bl,0xb9
  4055ca:	add    esi,DWORD PTR ds:0xae0d9aa1
  4055d0:	xchg   esp,eax
  4055d1:	mov    al,0x45
  4055d3:	cmp    bh,bh
  4055d5:	es xor esp,edx
  4055d8:	inc    edi
  4055d9:	sti    
  4055da:	(bad)  
  4055db:	xchg   esp,eax
  4055dc:	sar    BYTE PTR [eax],1
  4055de:	(bad)
  4055e1:	mov    gs,WORD PTR [eax+esi*4+0x5f0c4c67]
  4055e8:	(bad)  
  4055e9:	xchg   esp,eax
  4055ea:	lock out dx,eax
  4055ec:	cmc    
  4055ed:	jmp    0x40560d
  4055ef:	pop    edx
  4055f0:	loope  0x4055ba
  4055f2:	or     dh,bh
  4055f4:	dec    edi
  4055f5:	es mov dh,0x9c
  4055f8:	out    dx,eax
  4055f9:	mov    ds:0x43dbf2bc,al
  4055fe:	prefetcht2 BYTE PTR [edi+0x7e024ca4]
  405605:	jmp    0xdee3:0x733dfe46
  40560c:	nop
  40560d:	cmp    edi,DWORD PTR [eax+edi*8+0x170b0fe8]
  405614:	stos   DWORD PTR es:[edi],eax
  405615:	push   cs
  405616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405617:	inc    esp
  405618:	and    ch,BYTE PTR [eax-0x550cf4b7]
  40561e:	bound  esi,QWORD PTR [esi+0x1a1168e]
  405624:	sahf   
  405625:	sub    eax,0xb1bc7f80
  40562a:	mov    eax,0x9a81e3c6
  40562f:	adc    esp,DWORD PTR [eax]
  405631:	jo     0x405657
  405633:	add    BYTE PTR [ebp-0xab8ccef],ch
  405639:	(bad)  
  40563a:	dec    ebp
  40563b:	adc    dl,cl
  40563d:	push   ds
  40563e:	es std 
  405640:	sub    eax,0x307372f
  405645:	std    
  405646:	mov    ebp,0x35bd65f9
  40564b:	or     edx,DWORD PTR [edx+0x2c]
  40564e:	sub    BYTE PTR [ebx+0x6f],cl
  405651:	push   ebx
  405652:	ret    0x22fa
  405655:	push   ecx
  405656:	jne    0x405672
  405658:	inc    esi
  405659:	push   0xc332fee7
  40565e:	mov    ah,0x17
  405660:	jne    0x405659
  405662:	cmp    BYTE PTR [ebx+0x2af81bc2],cl
  405668:	pop    ecx
  405669:	icebp  
  40566a:	jge    0x4056e7
  40566c:	sub    edi,esi
  40566e:	aad    0xe6
  405670:	sub    al,0x37
  405672:	xor    ah,bh
  405674:	cmp    ecx,eax
  405676:	das    
  405677:	dec    edi
  405678:	xchg   esi,eax
  405679:	sbb    dh,al
  40567b:	mov    cl,0x47
  40567d:	xor    al,BYTE PTR [edx+esi*1+0x43a831f0]
  405684:	(bad)  
  405685:	call   0x2592:0xcb30e1e
  40568c:	out    0xa1,eax
  40568e:	adc    eax,0xb773a41c
  405693:	icebp  
  405694:	inc    esp
  405695:	push   edx
  405696:	and    cl,BYTE PTR [ebx-0x7bf072af]
  40569c:	test   eax,0xeb92c03f
  4056a1:	aaa    
  4056a2:	int3   
  4056a3:	test   eax,0x1b338480
  4056a8:	dec    eax
  4056a9:	out    dx,al
  4056aa:	mov    ds:0x7879a33c,al
  4056af:	jmp    0xd2f:0x83b1236c
  4056b6:	cld    
  4056b7:	nop
  4056b8:	pusha  
  4056b9:	jbe    0x4056b9
  4056bb:	sahf   
  4056bc:	leave  
  4056bd:	jmp    0x835f:0x3e46b06b
  4056c4:	adc    cl,BYTE PTR [eax+0x21997d9d]
  4056ca:	xchg   edx,eax
  4056cb:	dec    DWORD PTR [ebx]
  4056cd:	push   esi
  4056ce:	loopne 0x405694
  4056d0:	adc    al,0x94
  4056d2:	loopne 0x4056ef
  4056d4:	sahf   
  4056d5:	pop    ebx
  4056d6:	in     eax,dx
  4056d7:	mov    al,0x4e
  4056d9:	pusha  
  4056da:	mov    eax,ds:0xf45266b5
  4056df:	dec    ebx
  4056e0:	sbb    DWORD PTR [edi+eiz*8+0x48],ebx
  4056e4:	nop
  4056e5:	ss clc 
  4056e7:	push   eax
  4056e8:	cmp    edi,DWORD PTR [ecx+0xfc25f13]
  4056ee:	pop    es
  4056ef:	(bad)  
  4056f0:	les    ecx,FWORD PTR [ebx+0x556f837c]
  4056f6:	ja     0x405744
  4056f8:	and    ebp,ebx
  4056fa:	dec    edi
  4056fb:	pop    ecx
  4056fc:	fldcw  WORD PTR [eax+0x24]
  4056ff:	push   eax
  405700:	mov    edi,0x8cf07584
  405705:	int    0x5b
  405707:	mov    eax,ds:0x20c4eed7
  40570c:	inc    DWORD PTR ds:0xefcb1aa9
  405712:	fwait
  405713:	xor    eax,0xfdbb77f3
  405718:	sti    
  405719:	(bad)  
  40571a:	pusha  
  40571b:	pusha  
  40571c:	stos   BYTE PTR es:[edi],al
  40571d:	test   eax,0xab92bc64
  405722:	push   ss
  405723:	cmp    eax,0x660d4b9c
  405728:	add    al,0xff
  40572a:	loopne 0x4056f4
  40572c:	xor    al,BYTE PTR [eax]
  40572e:	inc    ecx
  40572f:	inc    ecx
  405730:	ss jecxz 0x405745
  405733:	add    eax,0xe80a01e
  405738:	inc    ebp
  405739:	stos   DWORD PTR es:[edi],eax
  40573a:	xor    al,0xb7
  40573c:	cs jno 0x405763
  40573f:	mov    edx,0x86d9aa4b
  405744:	in     eax,0x92
  405746:	out    0xb6,eax
  405748:	xchg   ebx,eax
  405749:	fcom   QWORD PTR [eax*1+0x5b363f8c]
  405750:	pusha  
  405751:	sti    
  405752:	mov    bh,0x51
  405754:	xor    BYTE PTR [ecx-0x60],bl
  405757:	imul   esi,ebx,0x2f
  40575a:	int    0x22
  40575c:	xchg   ebp,eax
  40575d:	pushf  
  40575e:	mov    edi,?
  405760:	hlt    
  405761:	fcomp  st(5)
  405763:	ret    0x54a8
  405766:	shl    DWORD PTR [edx-0x74],0x0
  40576a:	xor    eax,0xb2baa450
  40576f:	in     al,0x14
  405771:	mov    ds:0x36e71f51,eax
  405776:	aad    0xd0
  405778:	sbb    BYTE PTR [eax+0x7a],bl
  40577b:	xchg   BYTE PTR [ebp-0x1cb8d4ae],ah
  405781:	sbb    eax,0xc80bf686
  405786:	add    eax,0x94fdd9d0
  40578b:	sub    esp,edx
  40578d:	ret    
  40578e:	adc    BYTE PTR fs:[edx-0x274840f4],0xdb
  405796:	ret    
  405797:	dec    esi
  405798:	inc    edx
  405799:	push   ecx
  40579a:	imul   BYTE PTR [ebx]
  40579c:	inc    esp
  40579d:	ds out 0x6d,al
  4057a0:	(bad)  
  4057a1:	iret   
  4057a2:	xchg   cx,ax
  4057a4:	dec    ecx
  4057a5:	stos   BYTE PTR es:[edi],al
  4057a6:	or     bl,BYTE PTR [eax]
  4057a8:	add    al,0x43
  4057aa:	out    dx,eax
  4057ab:	jl     0x405809
  4057ad:	add    DWORD PTR [ebx],edx
  4057af:	push   0xd4a190d3
  4057b4:	pop    ecx
  4057b5:	std    
  4057b6:	cdq    
  4057b7:	jb     0x4057c1
  4057b9:	test   DWORD PTR [ecx-0x35],esp
  4057bc:	and    eax,0x785a3d87
  4057c1:	popa   
  4057c2:	or     al,0x26
  4057c4:	push   ds
  4057c5:	jae    0x4057b2
  4057c7:	or     ecx,DWORD PTR [edi+eax*8]
  4057ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057cb:	loopne 0x40575f
  4057cd:	(bad)  
  4057ce:	cli    
  4057cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057d0:	cmp    BYTE PTR [edx+0x1464aede],dh
  4057d6:	js     0x4057e1
  4057d8:	stos   DWORD PTR es:[edi],eax
  4057d9:	cli    
  4057da:	dec    ecx
  4057db:	sar    BYTE PTR [esi-0x7561dd65],1
  4057e1:	std    
  4057e2:	ds stos BYTE PTR es:[edi],al
  4057e4:	adc    eax,0xde5a99c8
  4057e9:	push   ecx
  4057ea:	call   FWORD PTR [esi-0x4a706251]
  4057f0:	fsub   QWORD PTR [edi+edx*1+0x45]
  4057f4:	loope  0x405863
  4057f6:	mov    al,0x2c
  4057f8:	iret   
  4057f9:	jb     0x40581e
  4057fb:	mov    eax,0xa33b1bc
  405800:	out    0xaa,al
  405802:	enter  0x83e1,0x6c
  405806:	fwait
  405807:	mov    esi,DWORD PTR ds:0x77e5c53b
  40580d:	adc    al,0xf5
  40580f:	fldcw  WORD PTR [edx+edi*2]
  405812:	call   0x9f4ea7bc
  405817:	mov    cl,0x4e
  405819:	cli    
  40581a:	and    DWORD PTR [edx+edx*8],esi
  40581d:	aaa    
  40581e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40581f:	repz call 0xc7c3:0xa4d0fbbc
  405827:	arpl   WORD PTR [esi+0x7a],dx
  40582a:	aas    
  40582b:	mov    esp,0x2a3136ae
  405830:	xchg   edx,eax
  405831:	les    eax,FWORD PTR [edx+0x1a8dbea]
  405837:	add    cl,dl
  405839:	sbb    al,0x87
  40583b:	push   0x69e6164b
  405840:	out    0x33,al
  405842:	lea    ecx,[ecx+eiz*8]
  405845:	and    eax,0x37777e85
  40584a:	cli    
  40584b:	xchg   edx,eax
  40584c:	test   DWORD PTR [esi],ecx
  40584e:	out    dx,al
  40584f:	push   ds
  405850:	jnp    0x4058c6
  405852:	inc    edx
  405853:	push   0x9637202b
  405858:	pop    ecx
  405859:	mov    eax,0x9a50b4db
  40585e:	sbb    ecx,DWORD PTR [esi]
  405860:	sar    bh,0x58
  405863:	ret    0x1789
  405866:	cmp    al,0x6c
  405868:	psubb  mm7,QWORD PTR [ebx+0x36]
  40586c:	mov    ah,0x61
  40586e:	cld    
  40586f:	and    ecx,0x44b7596d
  405875:	aad    0xcc
  405877:	dec    ebp
  405878:	popa   
  405879:	cmc    
  40587a:	ins    DWORD PTR es:[edi],dx
  40587b:	stos   DWORD PTR es:[edi],eax
  40587c:	or     eax,0x14c3f35b
  405881:	dec    edi
  405882:	mov    al,ds:0x4fedbf96
  405887:	mov    DWORD PTR [ebx],esp
  405889:	imul   edi,DWORD PTR [edx+eax*2-0x4a1cdb78],0xeab2a80e
  405894:	jecxz  0x40583d
  405896:	ins    DWORD PTR es:[edi],dx
  405897:	sub    eax,0x12c4b2b7
  40589c:	loopne 0x4058ac
  40589e:	lock lods al,BYTE PTR ds:[esi]
  4058a0:	xchg   ecx,eax
  4058a1:	test   BYTE PTR [ecx],al
  4058a3:	adc    eax,ecx
  4058a5:	mov    ecx,esp
  4058a7:	cwde   
  4058a8:	loopne 0x4058e7
  4058aa:	loop   0x4058ac
  4058ac:	or     BYTE PTR [esi-0x7e],dh
  4058af:	in     eax,dx
  4058b0:	repnz (bad) 
  4058b2:	xor    DWORD PTR [eax],esp
  4058b4:	jmp    0x40587c
  4058b6:	dec    edi
  4058b7:	sub    ecx,DWORD PTR [ebp+0x26]
  4058ba:	mov    dh,BYTE PTR [edx+0x333934a1]
  4058c0:	sbb    DWORD PTR [esi+eiz*4],esi
  4058c3:	lods   al,BYTE PTR ds:[esi]
  4058c4:	sbb    eax,0xec583a95
  4058c9:	cmp    cl,BYTE PTR [edi-0x1e]
  4058cc:	sbb    ebx,DWORD PTR [eax+eax*1+0x53]
  4058d0:	sbb    al,0xd2
  4058d2:	fsub   st(2),st
  4058d4:	pop    ss
  4058d5:	call   0x35831a7f
  4058da:	jecxz  0x405916
  4058dc:	fmul   st(4),st
  4058de:	jmp    0x7c63:0x1bbae00a
  4058e5:	jmp    0x405921
  4058e7:	mov    bl,0xd3
  4058e9:	push   cs
  4058ea:	(bad)  
  4058eb:	adc    al,0xac
  4058ed:	mov    esp,0x99f6b822
  4058f2:	or     bh,BYTE PTR [edx-0x457745c5]
  4058f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f9:	std    
  4058fa:	mov    cl,BYTE PTR [esi-0x4ecbfe1d]
  405900:	push   DWORD PTR [esi]
  405902:	cwde   
  405903:	nop
  405904:	xchg   dl,ch
  405906:	loop   0x405947
  405908:	inc    esi
  405909:	xchg   ebp,eax
  40590a:	fwait
  40590b:	sub    edi,DWORD PTR [di]
  40590e:	bound  eax,QWORD PTR [ecx+0x63cd4583]
  405914:	lea    edx,[ebp-0x14]
  405917:	icebp  
  405918:	push   0xffffff96
  40591a:	pop    ebx
  40591b:	dec    eax
  40591c:	test   al,0x4d
  40591e:	push   ebx
  40591f:	scas   al,BYTE PTR es:[edi]
  405920:	clc    
  405921:	jecxz  0x405914
  405923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405924:	ja     0x4058b0
  405926:	nop
  405927:	out    dx,al
  405928:	loope  0x405974
  40592a:	lds    ebx,FWORD PTR [edx+0x53]
  40592d:	add    al,BYTE PTR [esp+ecx*4]
  405930:	sbb    al,0x15
  405932:	ss int3 
  405934:	in     eax,dx
  405935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405936:	pop    ebp
  405937:	pop    ss
  405938:	ja     0x40597e
  40593a:	lock aad 0xea
  40593d:	aam    0xbb
  40593f:	test   BYTE PTR [esi+0x732f1812],0x1f
  405946:	sbb    eax,0x4fcb648
  40594b:	fild   WORD PTR [edi]
  40594d:	outs   dx,BYTE PTR ds:[esi]
  40594e:	les    ecx,FWORD PTR [esi-0x15]
  405951:	xor    DWORD PTR [ecx-0x1489061c],esi
  405957:	mov    ah,0x9c
  405959:	sub    ebx,DWORD PTR [edx-0x41]
  40595c:	test   DWORD PTR [eax],esp
  40595e:	and    DWORD PTR [ebp-0x5b],eax
  405961:	jle    0x4058e3
  405963:	sub    dh,0x14
  405966:	add    al,0x88
  405968:	mov    cl,0x50
  40596a:	jo     0x4058f2
  40596c:	and    edx,DWORD PTR [edi-0x3d]
  40596f:	arpl   WORD PTR [ebp+0x20],bp
  405972:	call   0xaffb:0x37ff457a
  405979:	mov    esi,0xa000d22b
  40597e:	scas   eax,DWORD PTR es:[edi]
  40597f:	cdq    
  405980:	popa   
  405981:	pop    esp
  405982:	push   eax
  405983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405984:	pop    edx
  405985:	mov    bh,0x47
  405987:	test   al,0xb7
  405989:	dec    edx
  40598a:	inc    eax
  40598b:	xor    al,0x74
  40598d:	sub    ebp,eax
  40598f:	aas    
  405990:	and    al,ch
  405992:	fwait
  405993:	inc    ecx
  405994:	mov    ch,0xa6
  405996:	cmp    BYTE PTR [esi-0x1884b923],bl
  40599c:	jo     0x40594c
  40599e:	xchg   esi,eax
  40599f:	add    bl,cl
  4059a1:	test   DWORD PTR [ecx-0x6e595e07],edi
  4059a7:	imul   edi,DWORD PTR [ebx],0xffffffb8
  4059aa:	test   DWORD PTR [esi],0xeca3c31
  4059b0:	adc    al,0x8e
  4059b2:	adc    DWORD PTR [ebp+0x5dd950d5],ecx
  4059b8:	leave  
  4059b9:	add    ebx,esi
  4059bb:	xchg   BYTE PTR [ebx+0x5],cl
  4059be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059bf:	loopne 0x405a3f
  4059c1:	mov    ebx,0xa038f3c4
  4059c6:	mov    eax,0xa43dbe79
  4059cb:	ins    BYTE PTR es:[edi],dx
  4059cc:	pop    ebp
  4059cd:	xchg   esi,eax
  4059ce:	cdq    
  4059cf:	inc    eax
  4059d0:	mov    ebx,0x59d3fe74
  4059d5:	mov    al,ds:0x48f59f8f
  4059da:	pop    ebp
  4059db:	clc    
  4059dc:	fisttp WORD PTR [ecx]
  4059de:	xor    BYTE PTR [edx],dh
  4059e0:	and    dh,al
  4059e2:	push   es
  4059e3:	lods   al,BYTE PTR ds:[esi]
  4059e4:	bound  ebx,QWORD PTR [edi+eiz*1+0x8]
  4059e8:	sbb    BYTE PTR [esi],bh
  4059ea:	fcom   QWORD PTR [esi-0x45]
  4059ed:	outs   dx,DWORD PTR ds:[esi]
  4059ee:	sbb    eax,0xcc96e4e4
  4059f3:	dec    edi
  4059f4:	(bad)
  4059f7:	push   edx
  4059f8:	fistp  DWORD PTR [ebp+0x1d]
  4059fb:	mov    al,ds:0xa8c4ffdd
  405a00:	sbb    bl,BYTE PTR [esi+0x6b]
  405a03:	cdq    
  405a04:	lock test eax,0x69029a0c
  405a0a:	xchg   ecx,eax
  405a0b:	fs push ebx
  405a0d:	jle    0x4059b0
  405a0f:	mov    esi,0x98974c5d
  405a14:	fidivr WORD PTR [ecx+0x14decd09]
  405a1a:	dec    ecx
  405a1b:	imul   esp,DWORD PTR [edi+0x2c18996e],0xffffff9c
  405a22:	lods   al,BYTE PTR ds:[esi]
  405a23:	pop    ebx
  405a24:	(bad)  
  405a25:	call   0x3b7e:0x92eeb1f0
  405a2c:	mov    ds:0x65d63815,al
  405a31:	sub    al,0xc2
  405a33:	push   eax
  405a34:	pop    edi
  405a35:	mov    edx,0x27de4beb
  405a3a:	(bad)  
  405a3b:	(bad)  
  405a3d:	jle    0x405aa0
  405a3f:	mov    ds:0xb0c339fd,al
  405a44:	sar    DWORD PTR [edi-0x7e],0x95
  405a48:	mov    WORD PTR [edi],fs
  405a4a:	mov    esi,ebp
  405a4c:	adc    BYTE PTR [eiz*2-0x11ea5e4f],cl
  405a53:	mov    ecx,0xcbf041f5
  405a58:	rcl    DWORD PTR [ecx-0x3e],cl
  405a5b:	push   edx
  405a5c:	popf   
  405a5d:	mov    eax,DWORD PTR [ecx]
  405a5f:	pop    esp
  405a60:	repz mov ebp,0xab7d34ff
  405a66:	fs jmp 0x60e3:0xb4d26805
  405a6e:	push   ebx
  405a6f:	dec    esi
  405a70:	inc    eax
  405a71:	xor    al,0xa1
  405a73:	call   0xe132dc0
  405a78:	pop    es
  405a79:	mov    dl,0x92
  405a7b:	cwde   
  405a7c:	sahf   
  405a7d:	mov    ds:0xb5358232,al
  405a82:	inc    edi
  405a83:	imul   DWORD PTR [ecx-0x6200013d]
  405a89:	jo     0x405a26
  405a8b:	and    ecx,ebp
  405a8d:	retf   0xf308
  405a90:	arpl   bx,sp
  405a92:	repnz or edi,esp
  405a95:	ja     0x405a2c
  405a97:	outs   dx,DWORD PTR ds:[esi]
  405a98:	xor    al,0x1e
  405a9a:	dec    esp
  405a9b:	ds jmp 0x19df:0xc04f30e7
  405aa3:	in     al,dx
  405aa4:	mov    esi,0xfa4e5022
  405aa9:	cs or  eax,0x63ee4a32
  405aaf:	lods   eax,DWORD PTR ds:[esi]
  405ab0:	das    
  405ab1:	pop    eax
  405ab2:	call   0x90f7:0xccb6ed19
  405ab9:	cli    
  405aba:	xor    BYTE PTR [esi+0x62b7562b],bh
  405ac0:	mov    edx,DWORD PTR [esi+0x1b5d130]
  405ac6:	icebp  
  405ac7:	fsub   QWORD PTR [edi+0x6e3441f]
  405acd:	sbb    al,0xa7
  405acf:	xor    esi,DWORD PTR [esi-0x63d363e8]
  405ad5:	adc    eax,0x8a83d6ea
  405ada:	sbb    al,0xa2
  405adc:	jg     0x405b06
  405ade:	test   al,0x62
  405ae0:	xchg   edx,eax
  405ae1:	sub    al,0xdc
  405ae3:	bound  edi,QWORD PTR [ecx]
  405ae5:	test   BYTE PTR [ecx],cl
  405ae7:	mov    DWORD PTR [esi+0x2493cfd],ecx
  405aed:	daa    
  405aee:	inc    esp
  405aef:	fwait
  405af0:	cmp    BYTE PTR [eax-0x5a],bl
  405af3:	push   0x28db3f66
  405af8:	add    al,ah
  405afa:	push   esi
  405afb:	jecxz  0x405b6d
  405afd:	push   edx
  405afe:	popa   
  405aff:	dec    esp
  405b00:	cmp    eax,0x4d752efc
  405b05:	ja     0x405b29
  405b07:	jbe    0x405ac5
  405b09:	xor    DWORD PTR [ecx-0x3f],ebp
  405b0c:	mov    ebp,DWORD PTR [edi+edx*8-0x76]
  405b10:	push   ds
  405b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b12:	mov    ah,0x4d
  405b14:	mov    eax,ds:0x18cac49
  405b19:	pop    es
  405b1a:	pop    es
  405b1b:	or     edi,DWORD PTR [eax+0x3c3a2c03]
  405b21:	(bad)  
  405b22:	pushw  ss
  405b24:	mov    ebp,0xeb06144
  405b29:	in     eax,0x14
  405b2b:	test   al,dl
  405b2d:	xchg   edx,eax
  405b2e:	xchg   BYTE PTR [ecx+0xa2ebf92],dh
  405b34:	pop    ss
  405b35:	fsub   QWORD PTR [edx-0x19]
  405b38:	mov    ch,0xbf
  405b3a:	and    al,0xdb
  405b3c:	sahf   
  405b3d:	fnstcw WORD PTR [eax]
  405b3f:	xor    al,0x1b
  405b41:	fld    DWORD PTR [ecx-0x4d81c73]
  405b47:	in     eax,0x39
  405b49:	mov    esi,0xf579ca54
  405b4e:	jbe    0x405b14
  405b50:	dec    ebx
  405b51:	mov    al,ds:0x90fa889f
  405b56:	lods   al,BYTE PTR es:[esi]
  405b58:	mov    dl,0x9c
  405b5a:	jns    0x405aef
  405b5c:	es push cs
  405b5e:	xor    al,0x3d
  405b60:	push   esp
  405b61:	and    BYTE PTR [eax-0x225336e7],dh
  405b67:	pop    esp
  405b68:	xchg   esp,eax
  405b69:	fcom   QWORD PTR [edx-0x5a]
  405b6c:	add    bh,al
  405b6e:	cmp    eax,0x3c36604d
  405b73:	lock in al,0x3a
  405b76:	hlt    
  405b77:	js     0x405afa
  405b79:	(bad)  
  405b7a:	out    0xb8,eax
  405b7c:	daa    
  405b7d:	jnp    0x405bcb
  405b7f:	sbb    BYTE PTR [esi],0xc4
  405b82:	pop    ecx
  405b83:	addr16 mov bh,0xc0
  405b86:	sub    esi,DWORD PTR [ebx+eiz*1-0xd]
  405b8a:	pop    esi
  405b8b:	in     al,0x72
  405b8d:	(bad)  
  405b8e:	and    bl,BYTE PTR [edi+0x6810ea3e]
  405b94:	dec    ebp
  405b95:	cmp    BYTE PTR [ecx],dh
  405b97:	pop    esi
  405b98:	les    edi,FWORD PTR [edx-0x2]
  405b9b:	mov    edi,0x526f4ae0
  405ba0:	(bad)  
  405ba1:	mov    ebx,0x2f5bf141
  405ba6:	fadd   QWORD PTR [ecx]
  405ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ba9:	jle    0x405b33
  405bab:	hlt    
  405bac:	fidiv  WORD PTR [esi-0x41]
  405baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb0:	xchg   esi,eax
  405bb1:	sub    DWORD PTR [edx+0x19006de3],edi
  405bb7:	jnp    0x405b89
  405bb9:	xor    BYTE PTR [ecx],dl
  405bbb:	add    al,0x91
  405bbd:	iret   
  405bbe:	(bad)  
  405bbf:	sbb    bh,dl
  405bc1:	push   es
  405bc2:	nop
  405bc3:	push   ebp
  405bc4:	and    esi,DWORD PTR [edx]
  405bc6:	push   0xffffffd8
  405bc8:	or     eax,0x31e3cec2
  405bcd:	gs push edx
  405bcf:	out    dx,al
  405bd0:	adc    ah,BYTE PTR [ebx+0x76]
  405bd3:	mov    ch,0xd1
  405bd5:	inc    edx
  405bd6:	not    BYTE PTR [edx+0x8]
  405bd9:	stc    
  405bda:	ror    al,1
  405bdc:	add    dl,BYTE PTR [edi+eiz*8]
  405bdf:	xchg   ebp,eax
  405be0:	cmp    eax,0x7132d086
  405be5:	enter  0xc382,0xc5
  405be9:	fisubr DWORD PTR [esp+edi*4+0xa688c3c]
  405bf0:	push   ebx
  405bf1:	cmp    dl,BYTE PTR [esi]
  405bf3:	shr    BYTE PTR [edx],1
  405bf5:	and    ebp,DWORD PTR [esi]
  405bf7:	hlt    
  405bf8:	jmp    0x405c1c
  405bfa:	jl     0x405ba1
  405bfc:	rcr    DWORD PTR [eax-0x3d],0x41
  405c00:	sub    edx,DWORD PTR [ebp+edi*8-0x2d]
  405c04:	sbb    ebx,0x7a
  405c07:	jne    0x405bc0
  405c09:	ror    DWORD PTR [ebx+0x7b82a08c],cl
  405c0f:	xlat   BYTE PTR ds:[ebx]
  405c10:	xchg   ecx,eax
  405c11:	in     eax,dx
  405c12:	sar    BYTE PTR [ecx+0x59],0x42
  405c16:	cli    
  405c17:	xor    ecx,DWORD PTR [edx-0x4aef71a3]
  405c1d:	xor    esp,edi
  405c1f:	cmp    al,0xcd
  405c21:	in     eax,0x81
  405c23:	sub    BYTE PTR [eax-0x53],0xc1
  405c27:	xor    dl,BYTE PTR [edx+0x5dbde011]
  405c2d:	dec    esp
  405c2e:	pop    edx
  405c2f:	(bad)
  405c33:	sub    al,BYTE PTR ds:0x6d86f260
  405c39:	push   ds
  405c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c3b:	aad    0x1a
  405c3d:	retf   0x74b6
  405c40:	pop    eax
  405c41:	arpl   WORD PTR [edx-0x3b1a6573],bx
  405c47:	mov    ah,0x96
  405c49:	lahf   
  405c4a:	lods   al,BYTE PTR gs:[esi]
  405c4c:	jae    0x405bec
  405c4e:	aaa    
  405c4f:	pop    ss
  405c50:	das    
  405c51:	jge    0x405c03
  405c53:	add    ch,BYTE PTR [ecx]
  405c55:	sub    DWORD PTR [edx-0x1316fe7d],ebx
  405c5b:	xchg   ecx,eax
  405c5c:	mov    cs,WORD PTR [esi-0x6e1ad08a]
  405c62:	or     edx,DWORD PTR [ebx]
  405c64:	aaa    
  405c65:	dec    ebx
  405c66:	pop    ss
  405c67:	dec    edi
  405c68:	adc    eax,0x683d89e9
  405c6d:	je     0x405c50
  405c6f:	cmp    al,0xa8
  405c71:	int    0xaf
  405c73:	rcr    edx,cl
  405c75:	xlat   BYTE PTR ds:[ebx]
  405c76:	jg     0x405cef
  405c78:	std    
  405c79:	mov    esp,0xa5bb44d2
  405c7e:	repz test bh,dl
  405c81:	sub    DWORD PTR [edx-0x32f3d601],edx
  405c87:	repnz mov dl,0x36
  405c8a:	jmp    DWORD PTR [edi+0x49413e1e]
  405c90:	mov    esi,0x3265aa60
  405c95:	scas   eax,DWORD PTR es:[edi]
  405c96:	mov    bl,0x26
  405c98:	mov    dl,0x75
  405c9a:	mov    dh,0xae
  405c9c:	dec    edi
  405c9d:	(bad)  
  405c9e:	cmc    
  405c9f:	mov    bh,0x4
  405ca1:	pop    edx
  405ca2:	mov    esi,edx
  405ca4:	imul   ebp,DWORD PTR [esi+0x67],0xffffffdd
  405ca8:	int3   
  405ca9:	test   DWORD PTR [edx+0x6f],ecx
  405cac:	pop    esi
  405cad:	mov    eax,0xe8446512
  405cb2:	mov    edx,0xd4cbbdc1
  405cb7:	xchg   ebx,eax
  405cb8:	xchg   edx,eax
  405cb9:	or     DWORD PTR [eax],edi
  405cbb:	pop    ss
  405cbc:	outs   dx,DWORD PTR ds:[esi]
  405cbd:	dec    esi
  405cbe:	mov    edi,0x5788804
  405cc3:	sbb    esi,edi
  405cc5:	mov    eax,0xbd661a2c
  405cca:	mov    ecx,ecx
  405ccc:	inc    edx
  405ccd:	jl     0x405cd3
  405ccf:	jl     0x405d3d
  405cd1:	jae    0x405d07
  405cd3:	xchg   edx,eax
  405cd4:	fs popf 
  405cd6:	push   DWORD PTR [esp+esi*1]
  405cd9:	ss pop ss
  405cdb:	arpl   WORD PTR gs:[edi+edx*1-0x735c1a6c],di
  405ce3:	bound  ecx,QWORD PTR [edi+ecx*2-0x6e2245b1]
  405cea:	push   es
  405ceb:	bound  ebx,QWORD PTR [edx]
  405ced:	inc    eax
  405cee:	addr16 push eax
  405cf0:	xchg   DWORD PTR [edi+ebp*2+0x2a],edx
  405cf4:	bound  esp,QWORD PTR [ebx-0x2]
  405cf7:	bound  esp,QWORD PTR [ebp+0x5b14943d]
  405cfd:	icebp  
  405cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cff:	jbe    0x405cec
  405d01:	and    edx,ebx
  405d03:	test   eax,0xea54ed89
  405d08:	rol    DWORD PTR [ebx-0xe],cl
  405d0b:	cwde   
  405d0c:	and    bl,ch
  405d0e:	push   eax
  405d0f:	add    BYTE PTR [esi-0x78b07aa7],ch
  405d15:	movlps QWORD PTR [ebp-0xf],xmm5
  405d19:	sub    esp,DWORD PTR [edi-0x20]
  405d1c:	fdiv   QWORD PTR [esi-0x50a0333f]
  405d22:	mov    edi,0x8d4417f1
  405d27:	mov    ?,esi
  405d29:	cwde   
  405d2a:	cmp    al,0xd6
  405d2c:	fldenv [ebx-0x30ec485a]
  405d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d33:	mov    dl,0x5d
  405d35:	jb     0x405d59
  405d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d38:	stc    
  405d39:	int    0xa5
  405d3b:	cs (bad) 
  405d3d:	cld    
  405d3e:	int    0xc6
  405d40:	dec    edx
  405d41:	pop    ss
  405d42:	js     0x405cec
  405d44:	jp     0x405d25
  405d46:	sub    ah,ah
  405d48:	dec    edx
  405d49:	xchg   eax,edi
  405d4b:	popf   
  405d4c:	int    0xdf
  405d4e:	(bad)  
  405d50:	fmulp  st(7),st
  405d52:	jle    0x405d1d
  405d54:	adc    eax,0x13cd2734
  405d59:	pop    es
  405d5a:	jp     0x405d74
  405d5c:	xchg   ebx,eax
  405d5d:	test   eax,0xd807dc5
  405d62:	loop   0x405ced
  405d64:	aad    0xa5
  405d66:	xor    al,0x33
  405d68:	jp     0x405d52
  405d6a:	jp     0x405d1b
  405d6c:	scas   eax,DWORD PTR es:[edi]
  405d6d:	jp     0x405cfd
  405d6f:	in     al,0x92
  405d71:	cdq    
  405d72:	inc    esp
  405d73:	in     eax,dx
  405d74:	aaa    
  405d75:	mov    DWORD PTR [ebp-0x3c],ecx
  405d78:	mov    al,0x48
  405d7a:	bswap  edi
  405d7c:	ss repnz and ebp,esp
  405d80:	xor    dh,BYTE PTR [ebp-0x714c9ad7]
  405d86:	mov    eax,ds:0x6026711e
  405d8b:	test   al,0xd8
  405d8d:	xor    ch,al
  405d8f:	cmp    al,0x9f
  405d91:	shl    BYTE PTR [eax-0x5615ba65],0x1d
  405d98:	inc    esp
  405d99:	push   cs
  405d9a:	jne    0x405d54
  405d9c:	jge    0x405e1c
  405d9e:	sub    al,0x35
  405da0:	ret    0x2bed
  405da3:	dec    eax
  405da4:	and    eax,0x6fb15821
  405da9:	mov    al,ds:0x8178db9a
  405dae:	sub    DWORD PTR [edx+0x41ad04cd],0xf5a56a21
  405db8:	or     DWORD PTR [esp+eiz*2-0x29],esp
  405dbc:	push   ebx
  405dbd:	or     esp,DWORD PTR [edi-0x5b]
  405dc0:	ins    BYTE PTR es:[edi],dx
  405dc1:	inc    ecx
  405dc2:	xor    BYTE PTR ds:0x7565156b,0x5f
  405dc9:	fsubr  st,st(3)
  405dcb:	push   eax
  405dcc:	push   ebp
  405dcd:	adc    edi,DWORD PTR [ecx+0x615082a0]
  405dd3:	inc    edi
  405dd4:	or     DWORD PTR ds:0x627e9322,edx
  405dda:	jecxz  0x405df7
  405ddc:	cmp    DWORD PTR [ebp+edx*4+0xf4ac328],ecx
  405de3:	xlat   BYTE PTR ds:[ebx]
  405de4:	xor    BYTE PTR [ebp-0xead04b],al
  405dea:	mov    dl,0x3f
  405dec:	shl    ecx,0x43
  405def:	dec    edx
  405df0:	imul   edi,DWORD PTR [edi-0x17],0xfe6afd94
  405df7:	retf   
  405df8:	(bad)  
  405df9:	retf   
  405dfa:	inc    ebp
  405dfb:	(bad)  
  405dfc:	imul   ebx,DWORD PTR [edi+ecx*1-0x5948a104],0xdfe4e3fe
  405e07:	sbb    al,0x1
  405e09:	mov    ecx,DWORD PTR [ebp+0x7ffbbae4]
  405e0f:	or     ebp,esp
  405e11:	sbb    eax,DWORD PTR [edi-0x599232a7]
  405e17:	cmp    BYTE PTR [ebx+0x4417971d],bh
  405e1d:	mov    ecx,0x2168410d
  405e22:	(bad)  
  405e23:	arpl   WORD PTR [edi-0x13],di
  405e26:	jo     0x405e9d
  405e28:	shr    BYTE PTR [eax+0x314ce386],cl
  405e2e:	fucomi st,st(7)
  405e30:	lock cmp DWORD PTR [ebp+0x6d],edx
  405e34:	lock lods eax,DWORD PTR ds:[esi]
  405e37:	mov    ?,WORD PTR [edi]
  405e39:	adc    edx,DWORD PTR [eax+0x78733608]
  405e3f:	jbe    0x405e1f
  405e41:	dec    edx
  405e42:	jae    0x405e69
  405e44:	inc    edx
  405e45:	(bad)  
  405e46:	retf   
  405e47:	pop    ebp
  405e48:	jo     0x405dda
  405e4a:	imul   esp,DWORD PTR [ecx+eiz*8],0x11
  405e4e:	daa    
  405e4f:	test   eax,0x9d69c9d3
  405e54:	daa    
  405e55:	clc    
  405e56:	mov    dh,0x2d
  405e58:	mov    ch,0x70
  405e5a:	mov    esi,0x18c979f4
  405e5f:	clc    
  405e60:	pop    esi
  405e61:	inc    esi
  405e62:	jle    0x405e85
  405e64:	addr16 pop esi
  405e66:	out    dx,al
  405e67:	pop    edi
  405e68:	lods   eax,DWORD PTR ds:[esi]
  405e69:	jae    0x405e2d
  405e6b:	adc    esi,DWORD PTR [edx-0x10c347da]
  405e71:	mov    dh,0xec
  405e73:	sub    dh,cl
  405e75:	mov    dl,0xfd
  405e77:	jg     0x405ede
  405e79:	mov    cl,0x77
  405e7b:	ret    
  405e7c:	add    ebx,edi
  405e7e:	bound  eax,QWORD PTR [eax-0x26]
  405e81:	out    dx,eax
  405e82:	xchg   ebp,eax
  405e83:	inc    edi
  405e84:	xchg   ebp,eax
  405e85:	mov    edi,0x4acf4156
  405e8a:	or     ah,BYTE PTR [esi+eax*4-0xb64ddb9]
  405e91:	add    eax,0x7a65b0b4
  405e96:	cmp    al,0x7c
  405e98:	mov    bh,0x19
  405e9a:	mov    WORD PTR ds:0xa18f58a9,ss
  405ea0:	jno    0x405f12
  405ea2:	dec    esi
  405ea3:	dec    eax
  405ea4:	leave  
  405ea5:	adc    BYTE PTR [edi+0x17],ch
  405ea8:	or     dl,BYTE PTR [esi+0x34]
  405eab:	dec    ebx
  405eac:	push   esp
  405ead:	sar    DWORD PTR fs:[eax+esi*4+0x7e],cl
  405eb2:	sbb    bl,BYTE PTR fs:[esi-0x68]
  405eb6:	xor    BYTE PTR ds:0xfe4743d2,dh
  405ebc:	cmp    bh,BYTE PTR [ebx-0x32]
  405ebf:	int3   
  405ec0:	pop    edi
  405ec1:	les    ecx,FWORD PTR [eax+esi*4+0x66]
  405ec5:	sbb    al,0xf3
  405ec7:	sbb    al,0xd7
  405ec9:	lea    eax,[ebx+ecx*1-0x1ee0475]
  405ed0:	das    
  405ed1:	cs in  al,dx
  405ed3:	daa    
  405ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed5:	mov    eax,eax
  405ed7:	mov    edx,0xa8e98954
  405edc:	mov    ebx,0x1ecd62e6
  405ee1:	cmp    eax,0xbd892d83
  405ee6:	push   ecx
  405ee7:	loopne 0x405f1c
  405ee9:	sti    
  405eea:	push   esp
  405eeb:	sub    DWORD PTR [ebp+0x21],esi
  405eee:	call   0xb5b9:0x249af9a5
  405ef5:	mov    dl,0xf2
  405ef7:	not    DWORD PTR [ebx]
  405ef9:	sbb    eax,0x79656dd5
  405efe:	stos   DWORD PTR es:[edi],eax
  405eff:	rcr    DWORD PTR [eax+0x7a],0x68
  405f03:	sub    BYTE PTR [ecx],ch
  405f05:	les    esp,FWORD PTR [eax+0x43]
  405f08:	mov    esi,0xef8b7ebf
  405f0d:	int3   
  405f0e:	loop   0x405ecb
  405f10:	xchg   edi,eax
  405f11:	cmp    al,0x3a
  405f13:	pusha  
  405f14:	add    DWORD PTR [ebx+0x1b],ebx
  405f17:	mov    ebx,0x40c6aeb8
  405f1c:	dec    ebp
  405f1d:	push   ecx
  405f1e:	arpl   bx,bp
  405f20:	(bad)  
  405f21:	loopne 0x405ee7
  405f23:	nop
  405f24:	cmp    ebp,DWORD PTR [esi+eax*1+0x698d9b23]
  405f2b:	sub    ebp,edi
  405f2d:	pusha  
  405f2e:	(bad)  
  405f2f:	out    dx,eax
  405f30:	cmp    BYTE PTR [ecx],0x6c
  405f33:	sub    eax,0xdd284529
  405f38:	into   
  405f39:	test   eax,0x85e553ed
  405f3e:	jne    0x405f6c
  405f40:	retf   0x7548
  405f43:	dec    eax
  405f44:	lods   eax,DWORD PTR ds:[esi]
  405f45:	push   0xffffff90
  405f47:	sub    eax,0xe4d59e7e
  405f4c:	add    BYTE PTR [edx+0x238374b1],ch
  405f52:	mov    bh,0xe
  405f54:	popf   
  405f55:	inc    ebx
  405f56:	jo     0x405f64
  405f58:	sub    ch,BYTE PTR [ebx]
  405f5a:	pusha  
  405f5b:	mov    ecx,0xcc4eafd5
  405f60:	push   0xa29aee36
  405f65:	ss cmp al,0x74
  405f68:	inc    ecx
  405f69:	push   0x9226a2a8
  405f6e:	add    eax,DWORD PTR [ebp+0x34f67992]
  405f74:	ds push ds
  405f76:	gs jo  0x405fd7
  405f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f7a:	sub    DWORD PTR [bp+0x4872],ebp
  405f7f:	push   ss
  405f80:	push   edx
  405f81:	xchg   DWORD PTR [edi+0x2a],ebp
  405f84:	in     al,0xd
  405f86:	iret   
  405f87:	and    BYTE PTR [ebx],cl
  405f89:	inc    edi
  405f8a:	mov    ecx,DWORD PTR [edi-0x68]
  405f8d:	push   ds
  405f8e:	lods   al,BYTE PTR ds:[esi]
  405f8f:	call   0xeb3efce4
  405f94:	jmp    0x405f6d
  405f96:	adc    ch,BYTE PTR [ebx+0x5f]
  405f99:	sbb    dl,cl
  405f9b:	and    BYTE PTR [ebp+eax*8-0x2c],ah
  405f9f:	mov    DWORD PTR [esi],0x485b1c7e
  405fa5:	bound  ebp,QWORD PTR [ecx+ebp*1+0x786c6bbe]
  405fac:	out    0x75,al
  405fae:	fdivr  DWORD PTR [edx]
  405fb0:	cs ror esp,1
  405fb3:	cmp    ch,BYTE PTR [esp+esi*1-0x51]
  405fb7:	mov    al,cl
  405fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fba:	stos   BYTE PTR es:[edi],al
  405fbb:	sti    
  405fbc:	pop    edx
  405fbd:	clc    
  405fbe:	ficomp DWORD PTR [esi+ebx*8-0x3b44e6df]
  405fc5:	out    0xa8,eax
  405fc7:	and    ah,0x90
  405fca:	and    edi,DWORD PTR [edi+0x24]
  405fcd:	fs add eax,0x236c07ff
  405fd3:	leave  
  405fd4:	mov    eax,ds:0xd4149873
  405fd9:	lock shl DWORD PTR [ebx+0x7b],cl
  405fdd:	xchg   ecx,eax
  405fde:	push   es
  405fdf:	mov    al,0x7b
  405fe1:	ds aam 0x25
  405fe4:	and    bl,al
  405fe6:	push   edi
  405fe7:	imul   eax,DWORD PTR [esi-0x230607bd],0xfc458c1f
  405ff1:	add    BYTE PTR [ecx+0x33],ah
  405ff4:	push   ds
  405ff5:	push   0xaebfde54
  405ffa:	sbb    cl,BYTE PTR [ebp+0x2a9660ac]
  406000:	sub    al,0xd6
  406002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406003:	ds cld 
  406005:	mov    ds:0x347a179d,eax
  40600a:	sahf   
  40600b:	jp     0x405fc8
  40600d:	cli    
  40600e:	mov    ds:0xed704df,al
  406013:	int3   
  406014:	(bad)  
  406015:	sub    eax,0x337d092a
  40601a:	add    DWORD PTR [ecx],esi
  40601c:	addr16 aas 
  40601e:	lock retf 0xcf57
  406022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406023:	into   
  406024:	loop   0x405fe7
  406026:	test   al,0x5d
  406028:	std    
  406029:	ret    0x65fa
  40602c:	xchg   edi,eax
  40602d:	in     al,dx
  40602e:	mov    eax,ds:0xfee7d7d5
  406033:	add    bl,BYTE PTR [edi+esi*1]
  406036:	mov    bl,0x9e
  406038:	and    DWORD PTR [ebx-0x7e],ebx
  40603b:	fisttp WORD PTR [ecx+0x1b]
  40603e:	data16 (bad) 
  406040:	mov    dl,0xee
  406042:	mov    cl,0xe0
  406044:	icebp  
  406045:	dec    ecx
  406046:	push   edx
  406047:	push   ebp
  406048:	push   ss
  406049:	add    eax,0xd7afd673
  40604e:	fild   WORD PTR [ebp+0x51]
  406051:	add    eax,0x2f7faab5
  406056:	push   eax
  406057:	aaa    
  406058:	rcr    DWORD PTR [ebp+0x246e2fb0],cl
  40605e:	les    ecx,FWORD PTR [ebx]
  406060:	mov    ebp,0xf9e45ca8
  406065:	call   FWORD PTR [edx*1-0x5fd8830f]
  40606c:	sub    DWORD PTR [ecx-0x31],esi
  40606f:	dec    esp
  406070:	mov    ecx,0x4ab6c9e2
  406075:	inc    esi
  406076:	push   ecx
  406077:	xchg   esp,eax
  406078:	pop    ss
  406079:	retf   0x95f8
  40607c:	lahf   
  40607d:	dec    ecx
  40607e:	xchg   esp,eax
  40607f:	inc    esp
  406080:	mov    gs,edi
  406082:	sub    ch,bl
  406084:	add    edi,eax
  406086:	add    eax,0x24eeda97
  40608b:	mov    bh,0x0
  40608d:	sub    al,0xa4
  40608f:	lock cmc 
  406091:	rcr    DWORD PTR [eax-0x247e7318],0xbc
  406098:	or     al,0x3c
  40609a:	sub    bl,dl
  40609c:	sar    BYTE PTR [edx+0x46a9fb2e],0xd8
  4060a3:	pop    es
  4060a4:	not    DWORD PTR [ecx]
  4060a6:	push   ebp
  4060a7:	in     al,dx
  4060a8:	scas   eax,DWORD PTR es:[edi]
  4060a9:	cmp    al,0xe1
  4060ab:	ds clts 
  4060ae:	cli    
  4060af:	ja     0x4060f7
  4060b1:	repz mov al,ds:0xe5250665
  4060b7:	dec    edi
  4060b8:	mov    ecx,DWORD PTR [ecx-0x4]
  4060bb:	xchg   DWORD PTR [edx],esi
  4060bd:	jne    0x4060ac
  4060bf:	repz popf 
  4060c1:	leave  
  4060c2:	int    0x9e
  4060c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060c5:	jmp    0x447ad5dd
  4060ca:	push   eax
  4060cb:	mov    ebp,0x2f255b5
  4060d0:	or     BYTE PTR [edi],0x93
  4060d3:	in     eax,0xa9
  4060d5:	mov    ebx,0xdff1df05
  4060da:	push   0x7a40362f
  4060df:	int3   
  4060e0:	sub    BYTE PTR [ebp-0x5d],al
  4060e3:	adc    al,0x10
  4060e5:	stc    
  4060e6:	hlt    
  4060e7:	xor    eax,0xfe027952
  4060ec:	lahf   
  4060ed:	sub    bl,dh
  4060ef:	popf   
  4060f0:	lahf   
  4060f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060f2:	scas   eax,DWORD PTR es:[edi]
  4060f3:	loop   0x406105
  4060f5:	mov    edx,fs
  4060f7:	loope  0x406101
  4060f9:	retf   
  4060fa:	lea    eax,[esi-0x520dc7bb]
  406100:	test   cl,ah
  406102:	enter  0x40da,0x34
  406106:	jge    0x4060d2
  406108:	aaa    
  406109:	inc    esi
  40610a:	jge    0x4060f2
  40610c:	les    ebp,FWORD PTR [ecx-0x599d4f94]
  406112:	cmp    esp,ebx
  406114:	sar    DWORD PTR [esi-0x2d7e1c05],1
  40611a:	ins    DWORD PTR es:[edi],dx
  40611b:	mov    bh,0xb1
  40611d:	into   
  40611e:	push   edx
  40611f:	jnp    0x406119
  406121:	xlat   BYTE PTR ds:[ebx]
  406122:	aas    
  406123:	push   edx
  406124:	test   BYTE PTR [ebp-0x35],cl
  406127:	add    DWORD PTR [ecx-0x7a],ebx
  40612a:	jp     0x4060ec
  40612c:	ja     0x406120
  40612e:	sti    
  40612f:	js     0x406107
  406131:	fisttp WORD PTR [eax-0x2c]
  406134:	cld    
  406135:	lahf   
  406136:	arpl   WORD PTR [esi-0x7a707f32],dx
  40613c:	add    BYTE PTR [edi],ah
  40613e:	sub    eax,0x1aede503
  406143:	(bad)  
  406144:	inc    esi
  406145:	adc    dl,BYTE PTR [edx+0x787deb95]
  40614b:	arpl   WORD PTR [edi-0x55],cx
  40614e:	es jns 0x406189
  406151:	xchg   ecx,eax
  406152:	loope  0x4061cb
  406154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406155:	es call 0x713bbb3f
  40615b:	stc    
  40615c:	inc    ebp
  40615d:	(bad)  
  40615e:	mov    eax,ds:0x3b699825
  406163:	setns  BYTE PTR [edi+0x3e959123]
  40616a:	push   edi
  40616b:	push   ebx
  40616c:	lods   eax,DWORD PTR ds:[esi]
  40616d:	out    0xb0,al
  40616f:	pop    esi
  406170:	lock xlat BYTE PTR ds:[ebx]
  406172:	sahf   
  406173:	push   eax
  406174:	ror    BYTE PTR [esi],cl
  406176:	(bad)  
  406177:	retf   0xc5cc
  40617a:	sbb    eax,0xa027293f
  40617f:	cmp    esi,DWORD PTR [esi-0x317d748b]
  406185:	mov    ah,0x66
  406187:	push   ss
  406188:	fadd   QWORD PTR [ecx-0x4d]
  40618b:	out    0x2b,al
  40618d:	(bad)  
  40618e:	jae    0x4061b0
  406190:	cmp    ecx,DWORD PTR [ebp+0x37]
  406193:	mov    ds:0xd8064dbb,al
  406198:	pop    esi
  406199:	retf   0xf294
  40619c:	clc    
  40619d:	cmp    bl,dl
  40619f:	dec    esi
  4061a0:	js     0x4061d3
  4061a2:	in     al,0xb0
  4061a4:	and    DWORD PTR [ecx+0x720a0de3],0x55a6f15
  4061ae:	lea    ebx,[ecx-0x5afac3fa]
  4061b4:	sbb    bl,cl
  4061b6:	int    0x8f
  4061b8:	jle    0x4061d4
  4061ba:	(bad)  
  4061bb:	mov    esp,0xc62c2563
  4061c0:	lahf   
  4061c1:	adc    DWORD PTR [eax],edx
  4061c3:	hlt    
  4061c4:	mov    DWORD PTR [ebx+ecx*4-0x3d],edx
  4061c8:	(bad)
  4061cb:	mov    cl,0x86
  4061cd:	(bad)  
  4061ce:	and    al,0x66
  4061d0:	jae    0x4061ab
  4061d2:	push   es
  4061d3:	hlt    
  4061d4:	ja     0x406163
  4061d6:	out    0xd8,al
  4061d8:	clc    
  4061d9:	sti    
  4061da:	in     eax,dx
  4061db:	std    
  4061dc:	js     0x40622c
  4061de:	inc    ebp
  4061df:	jmp    0x406178
  4061e1:	or     al,0x6a
  4061e3:	shl    BYTE PTR [ebx-0x6],cl
  4061e6:	mov    eax,0x4fcafd18
  4061eb:	mov    dh,0x73
  4061ed:	xchg   cl,dh
  4061ef:	adc    esi,DWORD PTR [edi]
  4061f1:	push   edi
  4061f2:	test   DWORD PTR [ebx+0x7c80dc53],ecx
  4061f8:	lods   eax,DWORD PTR ds:[esi]
  4061f9:	pop    es
  4061fa:	daa    
  4061fb:	sbb    edi,DWORD PTR [ebp-0x17]
  4061fe:	repz xor DWORD PTR [esi],ebx
  406201:	out    0x2a,eax
  406203:	stc    
  406204:	fisttp DWORD PTR [ecx+0x7f]
  406207:	sahf   
  406208:	pushf  
  406209:	xchg   ecx,eax
  40620a:	sub    bl,0x7b
  40620d:	shr    DWORD PTR [eax+0x76a1488],1
  406213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406214:	sub    al,0xdb
  406216:	fcomip st,st(5)
  406218:	ret    0x75bd
  40621b:	jae    0x40620a
  40621d:	xchg   esp,eax
  40621e:	mov    eax,ds:0xd5c0d10
  406223:	ret    0xbbe5
  406226:	xchg   BYTE PTR [ecx-0x79],cl
  406229:	xchg   esp,eax
  40622a:	cwde   
  40622b:	aam    0x18
  40622d:	dec    esi
  40622e:	jbe    0x406231
  406230:	ret    0x6f
  406233:	outs   dx,DWORD PTR ds:[esi]
  406234:	stos   BYTE PTR es:[edi],al
  406235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406236:	cmp    DWORD PTR [esi-0x5b],esp
  406239:	mov    al,gs:0xd1fb009d
  40623f:	test   eax,0x774a6947
  406244:	and    al,0x7c
  406246:	xor    BYTE PTR [esi],al
  406248:	xchg   bl,cl
  40624a:	jns    0x4062cb
  40624c:	dec    esp
  40624d:	mov    al,ds:0x5ff999a5
  406252:	adc    ch,BYTE PTR [edx+0x687bdf96]
  406258:	xchg   esp,eax
  406259:	push   esp
  40625a:	adc    DWORD PTR [esi-0x31],edx
  40625d:	dec    esp
  40625e:	popa   
  40625f:	add    ebx,DWORD PTR [edi+0x3e4bdde7]
  406265:	inc    ebx
  406266:	shl    BYTE PTR [edi-0x4d],1
  406269:	mov    ds:0xcf4ce0d,al
  40626e:	inc    ecx
  40626f:	iret   
  406270:	mov    eax,ds:0xaca04c07
  406275:	std    
  406276:	sub    ecx,DWORD PTR [edi+edx*4-0x7b]
  40627a:	add    dh,dl
  40627c:	sti    
  40627d:	ja     0x406287
  40627f:	mov    dl,BYTE PTR [ecx-0x419ad491]
  406285:	push   es
  406286:	dec    edx
  406287:	xor    bl,dh
  406289:	lea    edx,[edi]
  40628b:	popa   
  40628c:	nop
  40628d:	cli    
  40628e:	clc    
  40628f:	push   ss
  406290:	pop    esi
  406291:	rol    esi,0x60
  406294:	sti    
  406295:	shl    ah,1
  406297:	(bad)  
  406298:	mov    WORD PTR [edi],es
  40629a:	rol    DWORD PTR [ebp+0x700f2081],cl
  4062a0:	sbb    bh,ch
  4062a2:	scas   al,BYTE PTR es:[edi]
  4062a3:	shl    ah,0x5
  4062a6:	jge    0x406246
  4062a8:	xor    DWORD PTR [esi+0x65c673f4],eax
  4062ae:	fmul   DWORD PTR [ecx-0x39]
  4062b1:	mov    ecx,0x4a4193c2
  4062b6:	xchg   edx,eax
  4062b7:	add    ebp,DWORD PTR es:[ebx-0x5a]
  4062bb:	hlt    
  4062bc:	pusha  
  4062bd:	mov    bl,0x8
  4062bf:	repz fild DWORD PTR [edx]
  4062c2:	test   eax,0x3eb9e61a
  4062c7:	std    
  4062c8:	pop    esp
  4062c9:	and    ch,cl
  4062cb:	or     eax,0x2a6f69ae
  4062d0:	fdivr  st,st(3)
  4062d2:	mov    edi,0xbc984dbe
  4062d7:	gs mov cl,0xec
  4062da:	lods   eax,DWORD PTR ds:[esi]
  4062db:	into   
  4062dc:	cs inc eax
  4062de:	in     eax,0xae
  4062e0:	or     ch,BYTE PTR [ebx]
  4062e2:	loopne 0x406361
  4062e4:	ds aas 
  4062e6:	fidiv  WORD PTR [ebx-0x2d5b435e]
  4062ec:	xchg   BYTE PTR [esp+ecx*8-0x63197273],bh
  4062f3:	xchg   ebx,eax
  4062f4:	lea    esi,[ebp+0x3f]
  4062f7:	call   0x138a:0x4420a7b7
  4062fe:	inc    ebx
  4062ff:	jecxz  0x4062e1
  406301:	dec    ebx
  406302:	sahf   
  406303:	pop    ebx
  406304:	inc    esp
  406305:	(bad)  
  406307:	jp     0x406346
  406309:	scas   al,BYTE PTR es:[edi]
  40630a:	or     BYTE PTR [ebp+0x1f],bl
  40630d:	lahf   
  40630e:	jl     0x406363
  406310:	(bad)  
  406311:	sbb    al,0x85
  406313:	addr16 push esp
  406315:	test   eax,0x999438f3
  40631a:	loope  0x4062f4
  40631c:	int    0x7c
  40631e:	push   ecx
  40631f:	aad    0xae
  406321:	in     al,0xb2
  406323:	jae    0x4062c3
  406325:	push   0x9389a134
  40632a:	sub    BYTE PTR [eax],al
  40632c:	mov    eax,ds:0x7f245da8
  406331:	stos   DWORD PTR es:[edi],eax
  406332:	push   eax
  406333:	lods   al,BYTE PTR ds:[esi]
  406334:	shr    BYTE PTR [edx+0x59],cl
  406337:	push   esi
  406338:	rcl    BYTE PTR [ecx+ebp*1-0x6d],1
  40633c:	std    
  40633d:	xor    al,0x0
  40633f:	dec    ebp
  406340:	popa   
  406341:	test   al,0xfc
  406343:	mov    cl,0x2a
  406345:	mov    eax,ds:0xe1f03e7a
  40634a:	stc    
  40634b:	repnz xchg ebp,eax
  40634d:	iret   
  40634e:	adc    eax,0xe832ba0d
  406353:	push   edi
  406354:	rcl    BYTE PTR [ebp+0x3faa43a9],1
  40635a:	adc    ebx,DWORD PTR [edx+edi*1-0x375fb12]
  406361:	call   DWORD PTR [edi-0x7889c6be]
  406367:	xchg   ecx,eax
  406368:	sahf   
  406369:	sub    BYTE PTR [edx],cl
  40636b:	pop    esi
  40636c:	icebp  
  40636d:	adc    al,0x26
  40636f:	idiv   DWORD PTR ds:0x8dd1ec03
  406375:	sbb    BYTE PTR [ebp+0x33769657],cl
  40637b:	ror    edi,1
  40637d:	pop    ebp
  40637e:	call   0x6a0a:0x1559b007
  406385:	retf   0xf43b
  406388:	add    edi,DWORD PTR [esi-0x6a2f7a46]
  40638e:	in     al,0xb0
  406390:	mov    esp,0xcf768c5b
  406395:	and    bl,BYTE PTR [ebp-0x45aced6e]
  40639b:	cwde   
  40639c:	in     eax,dx
  40639d:	les    ebx,FWORD PTR [si+0x940]
  4063a2:	adc    eax,0x104e3932
  4063a7:	fnsave [edx]
  4063a9:	loope  0x406346
  4063ab:	push   esp
  4063ac:	pop    ecx
  4063ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ae:	dec    ebx
  4063af:	mov    ds:0xc9a8021d,al
  4063b4:	dec    BYTE PTR [esi+0x47]
  4063b7:	cdq    
  4063b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b9:	sbb    cl,BYTE PTR [edx-0x63]
  4063bc:	outs   dx,BYTE PTR gs:[esi]
  4063be:	out    0x50,al
  4063c0:	repz cmp ah,BYTE PTR [ebp-0xc1b97a9]
  4063c7:	imul   ebx,edi,0x64c669c7
  4063cd:	popa   
  4063ce:	std    
  4063cf:	clc    
  4063d0:	(bad)  [esi-0x31]
  4063d3:	adc    edx,ecx
  4063d5:	repnz cdq 
  4063d7:	std    
  4063d8:	cmp    BYTE PTR [eax+0x5e],ch
  4063db:	repz test DWORD PTR [esi],0xdf8bdc59
  4063e2:	dec    esi
  4063e3:	loope  0x4063c4
  4063e5:	push   ebx
  4063e6:	stos   DWORD PTR es:[edi],eax
  4063e7:	pop    ss
  4063e8:	cmp    DWORD PTR [eax+0x3ad35603],0xffffffb7
  4063ef:	mov    al,ds:0xca85b7bb
  4063f4:	add    edi,DWORD PTR [esi]
  4063f6:	stos   BYTE PTR es:[edi],al
  4063f7:	mov    bl,BYTE PTR [ebx+0x3d]
  4063fa:	jge    0x406427
  4063fc:	outs   dx,BYTE PTR ds:[esi]
  4063fd:	in     eax,dx
  4063fe:	das    
  4063ff:	js     0x406472
  406401:	test   eax,0xd2246ac
  406406:	sahf   
  406407:	aam    0xa8
  406409:	hlt    
  40640a:	dec    eax
  40640b:	mov    cl,0x50
  40640d:	into   
  40640e:	sub    ah,BYTE PTR [edx+ebp*8-0x2c]
  406412:	ret    
  406413:	add    DWORD PTR [ecx+edi*4],edx
  406416:	push   ebp
  406417:	scas   eax,DWORD PTR es:[edi]
  406418:	xchg   ebp,eax
  406419:	xor    BYTE PTR [ecx],dh
  40641b:	repnz xchg ebx,eax
  40641d:	lods   eax,DWORD PTR ds:[esi]
  40641e:	movsx  esp,WORD PTR [edx]
  406421:	lahf   
  406422:	and    DWORD PTR [esi-0x39],esi
  406425:	mov    edi,0xf9f2e7c2
  40642a:	mov    ds:0x88d19272,eax
  40642f:	push   ebp
  406430:	adc    edi,esi
  406432:	mov    DWORD PTR [ebp+0x3a],ecx
  406435:	out    dx,eax
  406436:	and    bl,al
  406438:	popa   
  406439:	jno    0x4063d9
  40643b:	xchg   ebp,eax
  40643c:	jno    0x40648f
  40643e:	loop   0x40641d
  406440:	cli    
  406441:	stos   DWORD PTR es:[edi],eax
  406442:	ror    BYTE PTR ds:0x982,1
  406447:	or     al,0xab
  406449:	std    
  40644a:	test   al,dl
  40644c:	js     0x406408
  40644e:	test   BYTE PTR [edi+0x6d56f73c],bl
  406454:	ret    
  406455:	xor    ah,BYTE PTR [edx]
  406457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406458:	xchg   esi,eax
  406459:	stc    
  40645a:	test   al,0xe9
  40645c:	arpl   WORD PTR [esi-0x13],bp
  40645f:	outs   dx,DWORD PTR ds:[esi]
  406460:	and    ecx,edi
  406462:	dec    ebx
  406463:	in     eax,0x41
  406465:	js     0x4064b1
  406467:	test   DWORD PTR [esi-0x5d00d76c],esp
  40646d:	add    edi,ebx
  40646f:	in     al,0xd8
  406471:	test   DWORD PTR [edi+0x14],eax
  406474:	jle    0x4064dd
  406476:	cmp    ch,BYTE PTR [ebp+0x18]
  406479:	outs   dx,BYTE PTR ds:[esi]
  40647a:	out    0x1c,eax
  40647c:	or     BYTE PTR [esi+ecx*2],dh
  40647f:	cli    
  406480:	sar    BYTE PTR [esi+0xb],0xb7
  406484:	std    
  406485:	fcomp  DWORD PTR [esi]
  406487:	or     bl,BYTE PTR [edx+eiz*1-0x276c20c1]
  40648e:	inc    eax
  40648f:	ins    BYTE PTR es:[edi],dx
  406490:	jbe    0x4064df
  406492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406493:	sub    ebx,DWORD PTR [edx+0x28]
  406496:	aam    0xbe
  406498:	dec    eax
  406499:	sub    eax,0xb983fa86
  40649e:	cmp    eax,0x37e94518
  4064a3:	xor    bh,BYTE PTR [edi]
  4064a5:	mov    edx,0xa1f551bf
  4064aa:	and    eax,0x6eb40d50
  4064af:	xchg   esp,eax
  4064b0:	push   es
  4064b1:	out    0x6b,al
  4064b3:	into   
  4064b4:	int    0xf4
  4064b6:	mov    gs,ecx
  4064b8:	(bad)  
  4064b9:	push   ds
  4064ba:	jbe    0x406505
  4064bc:	jg     0x406480
  4064be:	push   eax
  4064bf:	inc    ebx
  4064c0:	rol    BYTE PTR ds:0xfcef3250,cl
  4064c6:	ds repz scas al,BYTE PTR es:[edi]
  4064c9:	jmp    0x406544
  4064cb:	adc    esp,DWORD PTR [esi+edi*2+0x2a]
  4064cf:	xor    BYTE PTR [ebx],0x69
  4064d2:	loope  0x406480
  4064d4:	stos   DWORD PTR es:[edi],eax
  4064d5:	lds    ecx,FWORD PTR [edx+0x77]
  4064d8:	xlat   BYTE PTR ds:[ebx]
  4064d9:	ror    BYTE PTR [edx-0xa01bb71],0x63
  4064e0:	(bad)  
  4064e1:	sbb    eax,0xff8eae3f
  4064e6:	jecxz  0x406503
  4064e8:	adc    DWORD PTR [edx],ebx
  4064ea:	cld    
  4064eb:	xor    BYTE PTR [ebx+0x49],bh
  4064ee:	aam    0xa1
  4064f0:	push   0xb791f114
  4064f5:	xchg   esi,eax
  4064f6:	pop    ds
  4064f7:	ror    BYTE PTR [edi],0xcf
  4064fa:	int3   
  4064fb:	call   FWORD PTR [ebp-0x31]
  4064fe:	les    ebx,FWORD PTR [ebx]
  406500:	xlat   BYTE PTR ds:[ebx]
  406501:	aam    0x14
  406503:	cmp    al,0xa7
  406505:	loop   0x40649c
  406507:	sbb    ch,ah
  406509:	add    eax,0x930f125f
  40650e:	mov    eax,ds:0xebde02cb
  406513:	or     eax,0xe4d0d967
  406518:	sbb    eax,0x4cfb33f2
  40651d:	mov    ebp,0x963e1645
  406522:	call   DWORD PTR [ecx+0xf]
  406525:	pushf  
  406526:	xchg   edi,eax
  406527:	loopne 0x4064d2
  406529:	dec    esp
  40652a:	xor    ch,BYTE PTR [ecx]
  40652c:	mov    edi,0xba589c94
  406531:	stos   BYTE PTR es:[edi],al
  406532:	mov    ch,0x20
  406534:	(bad)  
  406535:	xor    eax,0x35265de5
  40653a:	repz sar DWORD PTR [ecx],cl
  40653d:	push   ebp
  40653e:	inc    edi
  40653f:	inc    ebx
  406540:	or     DWORD PTR [edi+0xd4550c5],esi
  406546:	mov    ch,0x6
  406548:	retf   0x3c57
  40654b:	jno    0x406538
  40654d:	pop    ds
  40654e:	mov    cl,0xef
  406550:	jb     0x406582
  406552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406553:	pop    es
  406554:	xor    al,0xad
  406556:	xchg   esp,eax
  406557:	xchg   edi,eax
  406558:	sub    cl,BYTE PTR [ebp+0x48befddd]
  40655e:	or     BYTE PTR [edi-0x5],0xb1
  406562:	push   eax
  406563:	lock aaa 
  406565:	push   edi
  406566:	test   al,0xd9
  406568:	cld    
  406569:	mov    ch,0x89
  40656b:	pop    edx
  40656c:	push   ecx
  40656d:	cmc    
  40656e:	push   edi
  40656f:	fcmovb st,st(3)
  406571:	cmp    dl,BYTE PTR [esi+0x57]
  406574:	or     DWORD PTR [esi+ebx*8-0x2a6b2dcd],edx
  40657b:	mov    al,0xd8
  40657d:	ret    0xb94f
  406580:	scas   eax,DWORD PTR es:[edi]
  406581:	arpl   WORD PTR [ebp+0xc],di
  406584:	cld    
  406585:	adc    al,0xde
  406587:	xor    ecx,0x7efd5e44
  40658d:	push   edi
  40658e:	xor    al,al
  406590:	rol    DWORD PTR [ebp-0x71],cl
  406593:	cmp    esp,DWORD PTR [edi+eiz*1+0x6a74a625]
  40659a:	aaa    
  40659b:	xor    edx,DWORD PTR ds:0x91186a5c
  4065a1:	xchg   ecx,eax
  4065a2:	inc    ebx
  4065a3:	test   BYTE PTR [ecx+0x45],0xb2
  4065a7:	sub    eax,0xc2171f5e
  4065ac:	mov    dl,0x71
  4065ae:	sub    eax,esp
  4065b0:	pop    edx
  4065b1:	ins    DWORD PTR es:[edi],dx
  4065b2:	mov    bh,0x2f
  4065b4:	mov    al,ds:0x7bf3b91e
  4065b9:	cmp    edx,DWORD PTR [esi]
  4065bb:	stos   BYTE PTR es:[edi],al
  4065bc:	jmp    0xa55f6a4b
  4065c1:	mov    DWORD PTR [edi],ebx
  4065c3:	mov    bl,BYTE PTR [edi+0x39e6f855]
  4065c9:	pop    ebp
  4065ca:	push   0xd803dab0
  4065cf:	xchg   esp,eax
  4065d0:	lea    ebp,[ecx]
  4065d2:	(bad)  
  4065d3:	int3   
  4065d4:	lea    edi,[edx]
  4065d6:	clc    
  4065d7:	and    BYTE PTR [edx-0x1b708d04],ah
  4065dd:	ins    BYTE PTR es:[edi],dx
  4065de:	pop    edx
  4065df:	push   cs
  4065e0:	sbb    BYTE PTR [esi-0x26],dl
  4065e3:	dec    edi
  4065e4:	jnp    0x406601
  4065e6:	add    ebp,DWORD PTR [esi]
  4065e8:	xchg   DWORD PTR [ebx+0x537d89ad],esp
  4065ee:	out    0xa3,eax
  4065f0:	xchg   DWORD PTR [edx+0x22fa3e20],edx
  4065f6:	jg     0x4065af
  4065f8:	inc    eax
  4065f9:	pop    edx
  4065fa:	daa    
  4065fb:	push   ebx
  4065fc:	adc    edi,ebx
  4065fe:	adc    DWORD PTR [ebx+0x7f],0x46abd9eb
  406605:	ja     0x406638
  406607:	je     0x406667
  406609:	ds dec ecx
  40660b:	(bad)  
  40660d:	jp     0x4065e7
  40660f:	hlt    
  406610:	outs   dx,BYTE PTR ds:[esi]
  406611:	shr    DWORD PTR [esp+edi*8-0x6c],1
  406615:	or     ah,BYTE PTR [eax-0x4b00a248]
  40661b:	cmp    DWORD PTR ds:0x99d5ec59,ebx
  406621:	mov    esp,0x33d4d4fa
  406626:	test   DWORD PTR [ecx-0x72],eax
  406629:	fld    st(7)
  40662b:	mov    bh,0x2d
  40662d:	cmp    DWORD PTR [ebx+0x592e431b],edi
  406633:	ret    
  406634:	mov    ds:0x48ffd378,eax
  406639:	xor    BYTE PTR [edi],ch
  40663b:	push   ss
  40663c:	aas    
  40663d:	in     al,0x99
  40663f:	pop    esi
  406640:	rol    DWORD PTR [eax+0x74ace491],cl
  406646:	adc    eax,ebp
  406648:	lods   eax,DWORD PTR ds:[esi]
  406649:	sbb    eax,0xd705e1da
  40664e:	iret   
  40664f:	adc    al,0x31
  406651:	pop    edi
  406652:	test   al,0x2d
  406654:	xchg   edx,eax
  406655:	js     0x4065ee
  406657:	jmp    0x9c1c:0x2c8e6cf1
  40665e:	jp     0x40667d
  406660:	mov    edi,0x57d59358
  406665:	xor    al,BYTE PTR [eax-0x551c11be]
  40666b:	jns    0x406619
  40666d:	pop    ss
  40666e:	add    DWORD PTR [ebp-0x66f0cea4],edi
  406674:	fs aas 
  406676:	push   edx
  406677:	outs   dx,BYTE PTR ds:[esi]
  406678:	int3   
  406679:	dec    esi
  40667a:	dec    esi
  40667b:	mov    bl,0x36
  40667d:	xlat   BYTE PTR ds:[ebx]
  40667e:	and    edi,DWORD PTR [esi]
  406680:	into   
  406681:	sbb    BYTE PTR [ebp-0x34f00ad9],bl
  406687:	sahf   
  406688:	(bad)  
  40668a:	lock ret 
  40668c:	addr16 loop 0x406611
  40668f:	xor    eax,0x55584ca4
  406694:	call   0x8e1a2bff
  406699:	inc    BYTE PTR [ecx+0x425e4438]
  40669f:	and    al,0xd9
  4066a1:	rcr    dl,1
  4066a3:	rol    DWORD PTR [edx+0x6cb453e9],cl
  4066a9:	mov    ecx,0x6bfcf71f
  4066ae:	ret    0x3753
  4066b1:	(bad)  
  4066b2:	lods   eax,DWORD PTR ds:[esi]
  4066b3:	mov    ds:0x9d8b1db3,al
  4066b8:	or     eax,0x775cfac1
  4066bd:	repnz out 0x11,eax
  4066c0:	out    dx,al
  4066c1:	aad    0xdf
  4066c3:	rol    BYTE PTR cs:[ebx],0x3c
  4066c7:	and    ebx,eax
  4066c9:	bound  ecx,QWORD PTR [eax+ebp*4+0x4c0c34a]
  4066d0:	das    
  4066d1:	mov    eax,ds:0x58a9d97c
  4066d6:	ret    0xdb30
  4066d9:	shr    ch,0x4f
  4066dc:	fwait
  4066dd:	pop    edi
  4066de:	inc    ecx
  4066df:	mov    ah,0xa6
  4066e1:	mov    bh,0xa9
  4066e3:	nop    DWORD PTR [eax+0x25]
  4066e7:	jo     0x4066fa
  4066e9:	adc    eax,0xe818f025
  4066ee:	fnstcw WORD PTR [ecx]
  4066f0:	sbb    al,0x8f
  4066f2:	cmp    al,0xe9
  4066f4:	and    eax,0x76b1a46a
  4066f9:	xchg   ebx,eax
  4066fa:	je     0x406735
  4066fc:	jecxz  0x406683
  4066fe:	(bad)  
  4066ff:	pop    ss
  406700:	in     al,0xeb
  406702:	mov    dh,0x64
  406704:	xor    BYTE PTR [ecx-0x5d],bl
  406707:	fstp   TBYTE PTR [edi-0x5ef48666]
  40670d:	adc    DWORD PTR [eax],edx
  40670f:	cmp    edx,DWORD PTR [edx+0x2962c919]
  406715:	xchg   edi,eax
  406716:	xchg   BYTE PTR [ebx+0x73],al
  406719:	(bad)  
  40671a:	and    eax,0x54450da9
  40671f:	push   0x3e14b37f
  406724:	push   ecx
  406725:	xchg   edx,eax
  406726:	ret    
  406727:	add    bl,BYTE PTR [esp+ecx*4]
  40672a:	and    eax,0x84bb7520
  40672f:	cdq    
  406730:	mov    dl,0xb0
  406732:	push   ebp
  406733:	pop    edx
  406734:	xchg   BYTE PTR [ebp+ecx*2-0x46f81ba6],dl
  40673b:	inc    ecx
  40673c:	push   ss
  40673d:	dec    ecx
  40673e:	mov    dl,0x79
  406740:	xchg   esp,eax
  406741:	push   edx
  406742:	inc    ecx
  406743:	mov    bh,bl
  406745:	mov    DWORD PTR [ecx-0x9],edx
  406748:	dec    ebx
  406749:	dec    esi
  40674a:	icebp  
  40674b:	ret    0x1e79
  40674e:	pop    es
  40674f:	mov    dh,0xd3
  406751:	inc    esp
  406752:	fiadd  WORD PTR [ebx+edx*8+0xe1d3a17]
  406759:	push   0xa51923a6
  40675e:	mov    esi,0xbe418b22
  406763:	mov    edi,0xeb24ff5e
  406768:	imul   ebx,DWORD PTR [ebp-0x6b0a13b0],0xf868df66
  406772:	dec    eax
  406773:	fadd   QWORD PTR [esi]
  406775:	xchg   ecx,eax
  406776:	xor    BYTE PTR [ebp-0x77],bh
  406779:	jbe    0x40678a
  40677b:	mov    ds:0x621b117c,al
  406780:	dec    ecx
  406781:	sbb    ebp,DWORD PTR [ecx-0x75726d6d]
  406787:	dec    ebx
  406788:	fidiv  DWORD PTR [ebx+ebx*1+0x72a66cc4]
  40678f:	and    al,ch
  406791:	popa   
  406792:	clc    
  406793:	cld    
  406794:	out    dx,eax
  406795:	add    eax,0x48504c6a
  40679a:	mov    esp,DWORD PTR [ebp-0x4474cf13]
  4067a0:	inc    esp
  4067a1:	xlat   BYTE PTR ds:[ebx]
  4067a2:	js     0x4067e7
  4067a4:	cwde   
  4067a5:	jecxz  0x40680d
  4067a7:	je     0x4067d9
  4067a9:	sbb    al,0xc4
  4067ab:	int    0x6
  4067ad:	ret    0x3008
  4067b0:	hlt    
  4067b1:	scas   eax,DWORD PTR es:[edi]
  4067b2:	das    
  4067b3:	inc    ebp
  4067b4:	into   
  4067b5:	mov    edx,0x8aeecf6
  4067ba:	push   ecx
  4067bb:	mov    edi,0xa7725581
  4067c0:	bound  eax,QWORD PTR [ecx+0x40d62540]
  4067c6:	mov    es,WORD PTR [di]
  4067c9:	addr16 sbb edx,0x15acbb07
  4067d0:	sbb    eax,0x9075d3be
  4067d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d6:	inc    esp
  4067d7:	inc    DWORD PTR [eax+0x42e7b279]
  4067dd:	sar    DWORD PTR [edi-0x28dd509f],1
  4067e3:	sti    
  4067e4:	and    al,0xcd
  4067e6:	or     eax,0x5b98854d
  4067eb:	in     eax,0xaf
  4067ed:	cdq    
  4067ee:	lds    ebx,FWORD PTR [edi-0x3e]
  4067f1:	sahf   
  4067f2:	fcmovb st,st(1)
  4067f4:	ins    BYTE PTR es:[edi],dx
  4067f5:	sub    al,BYTE PTR [ebp-0x50e7de28]
  4067fb:	push   0x3793da20
  406800:	dec    eax
  406801:	and    ebp,DWORD PTR [eax+0x981fc88]
  406807:	jl     0x406790
  406809:	ret    0xf3b2
  40680c:	xchg   esp,eax
  40680d:	add    DWORD PTR [eax-0x66],edx
  406810:	dec    eax
  406811:	push   eax
  406812:	push   ss
  406813:	jbe    0x4067a2
  406815:	and    BYTE PTR ds:0x29460c46,al
  40681b:	out    dx,eax
  40681c:	sti    
  40681d:	clc    
  40681e:	xor    al,0xd7
  406820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406821:	outs   dx,BYTE PTR ds:[esi]
  406822:	mov    WORD PTR [eax-0x33dcfcd9],?
  406828:	in     eax,dx
  406829:	pushf  
  40682a:	ret    0xd26e
  40682d:	jmp    0x200b:0x7be00562
  406834:	inc    ebp
  406835:	inc    ebp
  406836:	arpl   WORD PTR [edi],si
  406838:	push   ss
  406839:	pop    edx
  40683a:	(bad)  
  40683b:	sub    dl,BYTE PTR [eax+edi*1+0x78]
  40683f:	mov    bl,0x9d
  406841:	jns    0x406879
  406843:	or     edx,ecx
  406845:	mov    esp,0x35f451f0
  40684a:	xor    ecx,DWORD PTR [esi-0x6]
  40684d:	loop   0x4067df
  40684f:	mov    BYTE PTR [esi],dh
  406851:	out    dx,al
  406852:	inc    edi
  406853:	ret    
  406854:	adc    dh,BYTE PTR [eax-0x6235d403]
  40685a:	aas    
  40685b:	jae    0x4068ad
  40685d:	rcl    BYTE PTR [edi-0x44],cl
  406860:	(bad)  
  406861:	std    
  406862:	in     al,0xdf
  406864:	xlat   BYTE PTR ds:[ebx]
  406865:	sbb    al,0xe8
  406867:	pop    ebx
  406868:	in     eax,0xf
  40686a:	std    
  40686b:	xchg   esp,eax
  40686c:	add    BYTE PTR [ebx],bh
  40686e:	jmp    0x34bc:0xa8a09ca5
  406875:	sbb    al,0x21
  406877:	xor    DWORD PTR [eax],eax
  406879:	js     0x4068f1
  40687b:	jmp    0x440ef847
  406880:	dec    edx
  406881:	daa    
  406882:	stos   BYTE PTR es:[edi],al
  406883:	push   ecx
  406884:	repz adc DWORD PTR [edi-0x47],esi
  406888:	push   ds
  406889:	rcr    eax,0xa5
  40688c:	or     ch,BYTE PTR [edx+edx*8+0x5d]
  406890:	loopne 0x406903
  406892:	(bad)  
  406893:	fbld   TBYTE PTR [esi+0x54]
  406896:	mov    esp,0x61a17e3f
  40689b:	push   ds
  40689c:	outs   dx,DWORD PTR ds:[esi]
  40689d:	imul   ecx,DWORD PTR ds:0xc4d9cbda,0xffffffd3
  4068a4:	cmp    DWORD PTR [ecx],esi
  4068a6:	cs icebp 
  4068a8:	sbb    esp,DWORD PTR [eax+esi*8]
  4068ab:	or     edx,DWORD PTR [eax+0x6e]
  4068ae:	retf   0x15b4
  4068b1:	test   BYTE PTR [ebp+ebp*8-0x3b01f370],bh
  4068b8:	pop    edx
  4068b9:	out    0xc4,al
  4068bb:	loopne 0x4068e0
  4068bd:	into   
  4068be:	push   0x59
  4068c0:	ror    BYTE PTR [edi-0x6a91628b],cl
  4068c6:	(bad)  
  4068c7:	test   esp,eax
  4068c9:	leave  
  4068ca:	jg     0x4068df
  4068cc:	push   ecx
  4068cd:	in     eax,dx
  4068ce:	mov    al,cs:0x7533d4b1
  4068d4:	in     eax,0x97
  4068d6:	mov    bl,0x49
  4068d8:	adc    DWORD PTR [ecx-0x41],ebx
  4068db:	push   esp
  4068dc:	dec    ebp
  4068dd:	push   esi
  4068de:	mov    eax,0x2387736c
  4068e3:	add    al,0xf9
  4068e5:	add    bh,al
  4068e7:	pop    ebp
  4068e8:	xor    eax,0xc04bf68d
  4068ed:	ins    BYTE PTR es:[edi],dx
  4068ee:	pop    esp
  4068ef:	imul   esi,DWORD PTR [ebx],0x12
  4068f2:	fbstp  TBYTE PTR [ecx-0x35]
  4068f5:	sbb    edx,edx
  4068f7:	pop    edi
  4068f8:	(bad)  
  4068f9:	cmp    eax,0x4f8960e6
  4068fe:	clc    
  4068ff:	jg     0x40689f
  406901:	xor    DWORD PTR [ecx-0x2b9c66e5],esp
  406907:	cmp    bl,cl
  406909:	cwde   
  40690a:	iret   
  40690b:	lea    esi,[eax-0x31]
  40690e:	xchg   ecx,eax
  40690f:	and    BYTE PTR [esp+edi*4-0x1],ch
  406913:	sub    dl,ch
  406915:	aam    0xea
  406917:	push   ecx
  406918:	jbe    0x4068c7
  40691a:	lods   eax,DWORD PTR ds:[esi]
  40691b:	icebp  
  40691c:	pop    esi
  40691d:	nop
  40691e:	addr16 pop eax
  406920:	pop    es
  406921:	call   0xb398:0x2e10d304
  406928:	push   0xffffff99
  40692a:	arpl   bp,sp
  40692c:	mov    WORD PTR [ecx-0x53e29399],ds
  406932:	js     0x406986
  406934:	dec    eax
  406935:	xor    DWORD PTR [ecx+0x50],esi
  406938:	add    al,0x47
  40693a:	sub    al,0x21
  40693c:	cs call 0x5cddf906
  406942:	mov    edx,0x57189cf3
  406947:	xchg   edx,eax
  406948:	add    BYTE PTR [ecx-0x5702a747],bl
  40694e:	add    eax,0xdedd0e15
  406953:	sbb    ebx,ecx
  406955:	mov    edi,DWORD PTR [ecx]
  406957:	shl    BYTE PTR [ebp-0x6a],cl
  40695a:	or     ah,bh
  40695c:	mov    BYTE PTR ds:0x71b781be,dh
  406962:	mov    ch,0x28
  406964:	add    edi,DWORD PTR [eax+ebp*2+0x65]
  406968:	fst    QWORD PTR [esi-0x2c]
  40696b:	int3   
  40696c:	add    BYTE PTR [esi+ebp*8+0x10243280],ah
  406973:	or     al,0xe
  406975:	xchg   esp,eax
  406976:	rcr    DWORD PTR [esi-0x19aa8569],0xe1
  40697d:	push   esi
  40697e:	mov    ds:0xc2e09027,eax
  406983:	jl     0x4069f7
  406985:	iret   
  406986:	fidiv  DWORD PTR [edi]
  406988:	adc    al,0xb8
  40698a:	mov    ds:0xaa84e867,al
  40698f:	out    dx,eax
  406990:	(bad)  [ecx+edi*8-0x1a]
  406994:	arpl   WORD PTR [ebp+edi*4+0x4a],ax
  406998:	xor    al,0x44
  40699a:	xchg   ebp,eax
  40699b:	imul   ecx,DWORD PTR [edx-0x37],0x73
  40699f:	ds mov cl,0x96
  4069a2:	popa   
  4069a3:	pop    ecx
  4069a4:	fnstenv [ebp+0x3c]
  4069a7:	mov    eax,0x33c473f5
  4069ac:	jbe    0x4069b9
  4069ae:	xacquire xchg DWORD PTR fs:[eax-0x54],ebp
  4069b3:	inc    eax
  4069b4:	push   edi
  4069b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b6:	out    dx,eax
  4069b7:	inc    esi
  4069b8:	cmp    eax,0xc838b963
  4069bd:	and    BYTE PTR [ebx+0x1],cl
  4069c0:	imul   esp,ebx,0xc772b63f
  4069c6:	adc    eax,0x1e8a79d2
  4069cb:	inc    ebp
  4069cc:	cmp    ebp,DWORD PTR [edx]
  4069ce:	cmp    edx,esi
  4069d0:	cmp    dh,BYTE PTR [edi-0x7]
  4069d3:	stc    
  4069d4:	push   esi
  4069d5:	jle    0x40698a
  4069d7:	jo     0x4069cc
  4069d9:	sub    eax,eax
  4069db:	mov    DWORD PTR ds:0xec9026af,edx
  4069e1:	jl     0x406976
  4069e3:	xor    DWORD PTR [edx-0x29],ebx
  4069e6:	dec    ecx
  4069e7:	push   ds
  4069e8:	call   0x3b83:0x364b846e
  4069ef:	daa    
  4069f0:	add    al,0xe4
  4069f2:	je     0x406a08
  4069f4:	inc    eax
  4069f5:	sahf   
  4069f6:	sub    edx,0x4f5dfcb8
  4069fc:	pop    ss
  4069fd:	mov    BYTE PTR [eax-0x11],ah
  406a00:	push   edx
  406a01:	stos   DWORD PTR es:[edi],eax
  406a02:	mov    bl,0x4d
  406a04:	mov    WORD PTR [esi],es
  406a06:	imul   DWORD PTR [ebp+0x4099e503]
  406a0c:	shr    BYTE PTR [edx],0xa
  406a0f:	sbb    al,0x6e
  406a11:	lods   eax,DWORD PTR ds:[esi]
  406a12:	jecxz  0x406a70
  406a14:	and    al,0x1a
  406a16:	lea    ebp,cs:[eax+0x9]
  406a1a:	add    al,BYTE PTR [eax+edx*4+0x62d6704]
  406a21:	fild   WORD PTR [eax]
  406a23:	loopne 0x406a8b
  406a25:	xchg   DWORD PTR [edx+0x3],esi
  406a28:	mov    cl,0x9c
  406a2a:	add    eax,0xe5933893
  406a2f:	imul   edx,DWORD PTR [esi-0x26],0x6032280d
  406a36:	cld    
  406a37:	test   eax,0xe485b545
  406a3c:	les    ebx,FWORD PTR [edi]
  406a3e:	out    dx,eax
  406a3f:	sbb    al,cl
  406a41:	or     DWORD PTR [edi-0x18],0xffffffa1
  406a45:	xchg   edx,eax
  406a46:	mov    bl,0x39
  406a48:	ins    BYTE PTR es:[edi],dx
  406a49:	(bad)  
  406a4a:	xor    al,0x4e
  406a4c:	stos   BYTE PTR es:[edi],al
  406a4d:	out    0x44,al
  406a4f:	pop    esi
  406a50:	das    
  406a51:	inc    ecx
  406a52:	retf   
  406a53:	(bad)  
  406a54:	pop    ebp
  406a55:	(bad)  
  406a56:	int3   
  406a57:	xor    edi,edx
  406a59:	pop    edx
  406a5a:	out    dx,eax
  406a5b:	out    0xaa,eax
  406a5d:	inc    esp
  406a5e:	jbe    0x406aa9
  406a60:	(bad)  
  406a61:	dec    esi
  406a62:	iret   
  406a63:	lock call 0xee0e722e
  406a69:	mov    edx,ebx
  406a6b:	dec    edi
  406a6c:	stos   BYTE PTR es:[edi],al
  406a6d:	push   es
  406a6e:	add    bl,ch
  406a70:	and    edi,DWORD PTR [esi+0x57b45943]
  406a76:	loopne 0x406ae3
  406a78:	mov    al,0xc8
  406a7a:	ret    0x954f
  406a7d:	(bad)  
  406a81:	shl    DWORD PTR [edx],cl
  406a83:	mov    ebp,0xf1b0c19d
  406a88:	test   al,cl
  406a8a:	xor    al,0x64
  406a8c:	sti    
  406a8d:	push   ecx
  406a8e:	and    DWORD PTR [ebx+esi*2-0x7],eax
  406a92:	mov    bl,0xb
  406a94:	nop
  406a95:	std    
  406a96:	xchg   edx,eax
  406a97:	mov    ds:0xd4047beb,al
  406a9c:	mov    ?,WORD PTR [ebp-0x673bad60]
  406aa2:	ja     0x406a63
  406aa4:	bound  edi,QWORD PTR [esi+0x5e]
  406aa7:	imul   edi,DWORD PTR [esi+0x6f],0x197204eb
  406aae:	adc    esp,DWORD PTR [ebx-0xa]
  406ab1:	add    al,BYTE PTR [ebx+edi*8-0x2980a076]
  406ab8:	in     eax,dx
  406ab9:	fsubr  st,st(2)
  406abb:	jmp    0xc553:0x1f4bdd32
  406ac2:	aas    
  406ac3:	adc    BYTE PTR [edi+0x2df5165d],0x5b
  406aca:	pop    ebx
  406acb:	jp     0x406abd
  406acd:	popa   
  406ace:	or     DWORD PTR [eax+0x8b16137],eax
  406ad4:	cli    
  406ad5:	jmp    0xb8c5:0x6ed16bf3
  406adc:	or     dh,BYTE PTR [esi+0x7c]
  406adf:	inc    ecx
  406ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ae1:	mov    BYTE PTR [ebx-0x24],ch
  406ae4:	adc    al,0xa1
  406ae6:	arpl   si,bx
  406ae8:	repnz sbb eax,0xe148422
  406aee:	into   
  406aef:	sbb    ebp,eax
  406af1:	adc    DWORD PTR [ecx-0x73],eax
  406af4:	mov    ?,WORD PTR [edi-0x6711acaf]
  406afa:	cwde   
  406afb:	es in  eax,dx
  406afd:	dec    esp
  406afe:	clc    
  406aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b00:	cld    
  406b01:	push   esi
  406b02:	(bad)  
  406b03:	xor    esp,edi
  406b05:	xor    eax,0x8a383a07
  406b0a:	aam    0xd2
  406b0c:	stc    
  406b0d:	in     eax,0x95
  406b0f:	adc    dl,al
  406b11:	not    dh
  406b13:	dec    eax
  406b14:	mov    ecx,0xcd92577a
  406b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b1a:	data16 (bad) 
  406b1c:	mov    ebx,0x803d8eb6
  406b21:	jo     0x406b01
  406b23:	shr    DWORD PTR [ecx-0x43],0x5b
  406b27:	jmp    0xf613:0x1b9e0abf
  406b2e:	or     edx,esp
  406b30:	iret   
  406b31:	xor    al,0x9
  406b33:	and    al,0xb9
  406b35:	push   0x3d30686e
  406b3a:	mov    ebx,0xce00cbb4
  406b3f:	xchg   edi,eax
  406b40:	dec    esi
  406b41:	das    
  406b42:	add    DWORD PTR [ebp+0x4b5140b7],esp
  406b48:	ins    DWORD PTR es:[edi],dx
  406b49:	shl    BYTE PTR [esi+0x2a5b7d6f],1
  406b4f:	inc    dh
  406b51:	pop    ebp
  406b52:	push   ss
  406b53:	sbb    BYTE PTR [eax+edx*4+0x7f5a7121],cl
  406b5a:	aad    0xbb
  406b5c:	lahf   
  406b5d:	xchg   edi,eax
  406b5e:	sbb    BYTE PTR [eax],ah
  406b60:	cmp    al,0xd
  406b62:	out    dx,eax
  406b63:	adc    al,0xb9
  406b65:	cdq    
  406b66:	sub    eax,0xe53dc057
  406b6b:	mov    esi,0xb09c91c7
  406b70:	int3   
  406b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b72:	call   0x2d5b:0x33cc31fc
  406b79:	push   edi
  406b7a:	mov    al,0xbb
  406b7c:	sbb    BYTE PTR [edi],bh
  406b7e:	jecxz  0x406bf8
  406b80:	repnz dec ebp
  406b82:	int3   
  406b83:	add    BYTE PTR [eax+0x58f19587],al
  406b89:	and    al,0xa0
  406b8b:	arpl   WORD PTR [ebx+ebx*2-0x4a],cx
  406b8f:	or     DWORD PTR [edi],edx
  406b91:	lods   eax,DWORD PTR fs:[esi]
  406b93:	mov    dh,0x24
  406b95:	adc    eax,0x35939efd
  406b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b9b:	mov    eax,0x34a86a08
  406ba0:	pop    esi
  406ba1:	js     0x406bd7
  406ba3:	in     eax,0xec
  406ba5:	aaa    
  406ba6:	ret    
  406ba7:	stos   BYTE PTR es:[edi],al
  406ba8:	jns    0x406b80
  406baa:	aaa    
  406bab:	jl     0x406b50
  406bad:	mov    BYTE PTR [esp+ebp*4+0x56],ah
  406bb1:	jle    0x406c0d
  406bb3:	call   0x7d30ac86
  406bb8:	xchg   esp,eax
  406bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bba:	push   edx
  406bbb:	rcl    DWORD PTR [esi+0xea57119],0xc
  406bc2:	aaa    
  406bc3:	xchg   esp,eax
  406bc4:	cmp    esi,0x50
  406bc7:	nop
  406bc8:	dec    DWORD PTR [ebx+0x3c8e689f]
  406bce:	cwde   
  406bcf:	cs cli 
  406bd1:	dec    eax
  406bd2:	cld    
  406bd3:	jmp    0x4ba668a8
  406bd8:	jle    0x406bf1
  406bda:	in     al,0xef
  406bdc:	dec    ecx
  406bdd:	sub    ah,ch
  406bdf:	in     eax,0x28
  406be1:	loop   0x406bf9
  406be3:	aas    
  406be4:	(bad)  
  406be5:	sub    BYTE PTR [edi-0x1dc00d28],dl
  406beb:	test   DWORD PTR [ecx+0x59],edx
  406bee:	mov    dh,0xda
  406bf0:	push   ecx
  406bf1:	shr    BYTE PTR [ebp+esi*1+0x47],cl
  406bf5:	scas   eax,DWORD PTR es:[edi]
  406bf6:	aad    0x2f
  406bf8:	mov    ds:0xb706dcd5,al
  406bfd:	sbb    esi,DWORD PTR [edx]
  406bff:	mov    ah,0xe9
  406c01:	jae    0x406bf6
  406c03:	repnz mov eax,ds:0x6eedb753
  406c09:	dec    edi
  406c0a:	sahf   
  406c0b:	add    dh,cl
  406c0d:	dec    ebp
  406c0e:	test   al,0xb
  406c10:	neg    DWORD PTR ds:0x5b87e085
  406c16:	popa   
  406c17:	sub    ecx,DWORD PTR [eax-0x59]
  406c1a:	mov    ecx,0xe26df50a
  406c1f:	pop    ebx
  406c20:	lea    edx,[esi+0x2bd45e7c]
  406c26:	(bad)  
  406c2a:	pop    ss
  406c2b:	xchg   edx,eax
  406c2c:	mov    ah,0xea
  406c2e:	cli    
  406c2f:	mov    ebx,0x24ffb4a2
  406c34:	jne    0x406c50
  406c36:	mov    ch,0x8b
  406c38:	push   esp
  406c39:	jecxz  0x406c16
  406c3b:	xor    edi,DWORD PTR [edi-0x4d]
  406c3e:	ret    
  406c3f:	add    al,0x29
  406c41:	pop    ecx
  406c42:	pop    esi
  406c44:	cwde   
  406c45:	mov    esp,DWORD PTR [eax+0x38]
  406c48:	or     al,0x49
  406c4a:	or     ebx,DWORD PTR [esi-0x416ac854]
  406c50:	push   esi
  406c51:	add    DWORD PTR [ecx-0x502b065f],0x3c
  406c58:	xchg   ebx,eax
  406c59:	pop    ebx
  406c5a:	cmp    ebx,DWORD PTR [ebx]
  406c5c:	cmc    
  406c5d:	imul   BYTE PTR [ecx+ecx*2]
  406c60:	es es daa 
  406c63:	out    0x2d,eax
  406c65:	lahf   
  406c66:	in     eax,dx
  406c67:	xchg   DWORD PTR [edx+0x6ace3560],ebp
  406c6d:	mov    esp,0xd7b6f614
  406c72:	and    esi,DWORD PTR [eax-0x6ac14cb0]
  406c78:	cmp    DWORD PTR [ecx],ebx
  406c7a:	das    
  406c7b:	cmp    al,0x64
  406c7d:	jl     0x406cae
  406c7f:	rol    bh,0xf5
  406c82:	js     0x406cac
  406c84:	enter  0xd044,0xfa
  406c88:	int3   
  406c89:	loope  0x406c72
  406c8b:	xchg   esi,eax
  406c8c:	outs   dx,BYTE PTR ds:[esi]
  406c8d:	aaa    
  406c8e:	adc    esi,DWORD PTR [esi+0x5b623efa]
  406c94:	mov    ebx,0xbbf74144
  406c99:	aad    0x56
  406c9b:	rcr    edi,1
  406c9d:	jl     0x406cbd
  406c9f:	scas   eax,DWORD PTR es:[edi]
  406ca0:	or     ecx,DWORD PTR ds:0xec0655b8
  406ca6:	pop    es
  406ca7:	sub    BYTE PTR [ebx],dl
  406ca9:	inc    eax
  406caa:	xchg   edx,eax
  406cab:	outs   dx,DWORD PTR ds:[esi]
  406cac:	xor    esi,DWORD PTR [eax+0x63]
  406caf:	push   ebp
  406cb0:	lock je 0x406c4f
  406cb3:	retf   
  406cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb5:	xchg   ecx,eax
  406cb6:	inc    edi
  406cb7:	retf   
  406cb8:	xchg   esi,eax
  406cb9:	inc    ebx
  406cba:	xor    BYTE PTR [esi],bl
  406cbc:	in     al,0x64
  406cbe:	xor    DWORD PTR [ebx+0x2a],ebx
  406cc1:	mov    cs,WORD PTR [eax-0x47]
  406cc4:	(bad)  
  406cc5:	push   ebx
  406cc6:	or     al,0x8d
  406cc8:	jmp    FWORD PTR [ebp+0x39ac5cd6]
  406cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ccf:	repz pop ebp
  406cd1:	mov    dh,0xdb
  406cd3:	imul   eax,DWORD PTR [edx+0x10284f3c],0x5b
  406cda:	jle    0x406c8e
  406cdc:	dec    ebp
  406cdd:	mov    dh,0xe2
  406cdf:	pop    edi
  406ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ce1:	(bad)  
  406ce2:	ds ds mov ch,0xbd
  406ce6:	pop    ebp
  406ce7:	(bad)  
  406ce8:	mov    BYTE PTR [eax-0x13],ah
  406ceb:	pop    edx
  406cec:	jl     0x406ceb
  406cee:	jo     0x406cc6
  406cf0:	mov    bl,0xe4
  406cf2:	push   cs
  406cf3:	dec    edi
  406cf4:	xchg   BYTE PTR [edx-0xa],bl
  406cf7:	repnz and esi,DWORD PTR ds:0xa818b8ef
  406cfe:	lods   eax,DWORD PTR ds:[esi]
  406cff:	sbb    al,0x9a
  406d01:	pop    ecx
  406d02:	in     al,dx
  406d03:	or     edx,esi
  406d05:	gs iret 
  406d07:	repz push edx
  406d09:	shl    BYTE PTR [ebx+0x56fe178e],1
  406d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d10:	and    eax,0x38d6835e
  406d15:	repnz or eax,0x985c2465
  406d1b:	xor    edi,DWORD PTR [edx-0x3d]
  406d1e:	xchg   edx,eax
  406d1f:	rcl    esp,0xf6
  406d22:	xchg   ebx,eax
  406d23:	sbb    DWORD PTR [ebx+0x4e],0xe9de94f3
  406d2a:	pop    edi
  406d2b:	ja     0x406da4
  406d2d:	mov    ds:0x9b1962a5,al
  406d32:	pop    ds
  406d33:	mov    cl,0x34
  406d35:	sbb    eax,0xadc5c5b5
  406d3a:	sub    DWORD PTR [ebx-0x6b25241a],ebp
  406d40:	aaa    
  406d41:	or     eax,0xbbb6496c
  406d46:	jbe    0x406d29
  406d48:	retf   0x23fd
  406d4b:	fldenv [edx-0x2e]
  406d4e:	sub    ch,al
  406d50:	add    eax,0x9d3179fd
  406d55:	arpl   WORD PTR ds:0x1f7e7e6d,cx
  406d5b:	push   eax
  406d5c:	cwde   
  406d5d:	in     al,0xfa
  406d5f:	mov    dl,0x65
  406d61:	or     BYTE PTR ds:0x92b2b9a6,bl
  406d67:	push   eax
  406d68:	pop    ebp
  406d69:	jmp    0x406dcf
  406d6b:	test   BYTE PTR [edx+0x32],0x32
  406d6f:	inc    edx
  406d70:	jl     0x406cf6
  406d72:	sbb    al,0x98
  406d74:	adc    ch,ah
  406d76:	sbb    al,0x36
  406d78:	jae    0x406de0
  406d7a:	outs   dx,BYTE PTR ds:[esi]
  406d7b:	mov    ebp,0x5967c562
  406d80:	ins    BYTE PTR es:[edi],dx
  406d81:	push   esi
  406d82:	sysenter 
  406d84:	jg     0x406d55
  406d86:	mov    al,0x87
  406d88:	mov    dh,0x5c
  406d8a:	sahf   
  406d8b:	gs loopne 0x406dbc
  406d8e:	ins    BYTE PTR es:[edi],dx
  406d8f:	repz ror DWORD PTR [esi+esi*4-0x5c7eacf2],1
  406d97:	mov    al,0x8c
  406d99:	call   0x3f34:0xb6062bf9
  406da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da1:	or     al,0x2c
  406da3:	xlat   BYTE PTR ds:[ebx]
  406da4:	xchg   BYTE PTR [edx+0x16],al
  406da7:	stos   DWORD PTR es:[edi],eax
  406da8:	pop    esp
  406da9:	jnp    0x406d92
  406dab:	cmc    
  406dac:	mov    WORD PTR [edx+ebp*1],?
  406daf:	and    dl,BYTE PTR [esi-0x6beef81c]
  406db5:	pop    esp
  406db6:	push   es
  406db7:	mov    al,0x3b
  406db9:	jg     0x406d6e
  406dbb:	or     DWORD PTR [eax+0x241981b8],0x70
  406dc2:	aam    0x8
  406dc4:	dec    ebp
  406dc5:	mov    ebp,0xa00364d
  406dca:	(bad)  
  406dcb:	repz repz inc ebp
  406dce:	mov    ecx,0xd7dc832a
  406dd3:	ss lahf 
  406dd5:	cmp    dh,dl
  406dd7:	mov    edx,0x782f089c
  406ddc:	popf   
  406ddd:	pop    ds
  406dde:	aaa    
  406ddf:	jl     0x406d6d
  406de1:	jle    0x406df8
  406de3:	or     esi,DWORD PTR [edx+0x15]
  406de6:	xchg   ebp,eax
  406de7:	mov    al,ds:0xa64f0b95
  406dec:	xchg   edx,eax
  406ded:	cmp    al,0xa2
  406def:	or     DWORD PTR [esi+0x5],eax
  406df2:	mov    esp,0xc41e5d63
  406df7:	inc    ecx
  406df8:	add    eax,0x630a6bf1
  406dfe:	out    0xff,al
  406e00:	xchg   edi,eax
  406e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e02:	(bad)  
  406e04:	popa   
  406e05:	sbb    bh,BYTE PTR [ebx]
  406e07:	mov    bh,0x47
  406e09:	pop    esp
  406e0a:	jp     0x406e33
  406e0c:	shl    BYTE PTR [ecx],1
  406e0e:	outs   dx,DWORD PTR ds:[esi]
  406e0f:	ror    dh,1
  406e11:	mov    ds:0xe59cf8a0,al
  406e16:	adc    bh,bl
  406e18:	nop
  406e19:	enter  0xb222,0x6d
  406e1d:	xor    ah,BYTE PTR [esp+ebp*2]
  406e20:	mov    ds:0xdc6b9c3a,eax
  406e25:	xor    al,0xa4
  406e27:	(bad)  
  406e28:	add    BYTE PTR [di-0x68db],cl
  406e2d:	stc    
  406e2e:	xchg   ecx,eax
  406e2f:	in     al,0x22
  406e31:	xor    BYTE PTR [esi-0x452b7cd3],dh
  406e37:	fimul  WORD PTR [ebx]
  406e39:	pop    es
  406e3a:	lds    edi,FWORD PTR [ebx]
  406e3c:	mov    edx,0xe4a8b4d3
  406e41:	adc    DWORD PTR [edx],ecx
  406e43:	xor    ah,0x5c
  406e46:	cmc    
  406e47:	js     0x406e96
  406e49:	mov    cl,BYTE PTR [ecx-0x1ffabcbd]
  406e4f:	jle    0x406ea2
  406e51:	cmp    al,0xfc
  406e53:	retf   
  406e54:	lods   al,BYTE PTR ds:[esi]
  406e55:	dec    edi
  406e56:	mov    ebx,0x2b55745
  406e5b:	cmc    
  406e5c:	jne    0x406e22
  406e5e:	push   cs
  406e5f:	ror    BYTE PTR cs:[esi],cl
  406e62:	repnz mov cl,0xfb
  406e65:	aas    
  406e66:	sub    al,0x34
  406e68:	arpl   WORD PTR [eax+ebp*2-0x31],sp
  406e6c:	in     al,0x93
  406e6e:	outs   dx,DWORD PTR ds:[esi]
  406e6f:	pop    eax
  406e70:	je     0x406e96
  406e72:	inc    esp
  406e73:	mov    ebx,0x18f77fc1
  406e78:	mov    gs,WORD PTR [edx+0x2]
  406e7b:	js     0x406e7f
  406e7d:	sbb    eax,0x6f5b5fed
  406e82:	pop    es
  406e83:	add    ecx,DWORD PTR [edi]
  406e85:	in     eax,0x6e
  406e87:	jbe    0x406e8c
  406e89:	imul   ebp,DWORD PTR [ecx-0x612b552e],0x147281e1
  406e93:	jno    0x406eb2
  406e95:	push   cs
  406e96:	(bad)  
  406e97:	sbb    edx,ecx
  406e99:	cld    
  406e9a:	aam    0x3f
  406e9c:	dec    ecx
  406e9d:	std    
  406e9e:	popa   
  406e9f:	mov    dl,0x85
  406ea1:	jo     0x406e37
  406ea3:	mov    DWORD PTR [edx-0x526e64e7],0xd3834be7
  406ead:	aam    0x76
  406eaf:	dec    ebx
  406eb0:	push   edx
  406eb1:	dec    esp
  406eb2:	xchg   ebp,eax
  406eb3:	popa   
  406eb4:	inc    ebp
  406eb5:	adc    eax,0xefef5fde
  406eba:	or     ah,bl
  406ebc:	imul   edx,DWORD PTR [eax],0xf2d63f8b
  406ec2:	and    ch,BYTE PTR [ebx-0x2f983a73]
  406ec8:	pop    ebx
  406ec9:	cmp    al,BYTE PTR ds:0xa076bcb6
  406ecf:	dec    eax
  406ed0:	cmp    DWORD PTR [eax],ebx
  406ed2:	popa   
  406ed3:	ins    BYTE PTR es:[edi],dx
  406ed4:	rcr    DWORD PTR [esi],cl
  406ed6:	outs   dx,BYTE PTR ds:[esi]
  406ed7:	cmp    DWORD PTR [eax],eax
  406ed9:	mov    BYTE PTR [ecx+eiz*1+0x64],bh
  406edd:	push   0x935dfc0e
  406ee2:	fisttp DWORD PTR [edx+0x1eeaad83]
  406ee8:	fdiv   QWORD PTR [ecx-0x11]
  406eeb:	sub    al,0xf
  406eed:	mov    esp,DWORD PTR [edi+0x46]
  406ef0:	sahf   
  406ef1:	jnp    0x406e88
  406ef3:	ja     0x406f18
  406ef5:	or     al,bl
  406ef7:	inc    edx
  406ef8:	mov    DWORD PTR [ecx],edx
  406efa:	std    
  406efb:	retf   
  406efc:	mov    bh,0x5f
  406efe:	loopne 0x406f41
  406f00:	ret    0x6ff5
  406f03:	mov    al,ds:0xdc0f1a16
  406f08:	sbb    BYTE PTR [eax-0x36],ch
  406f0b:	iret   
  406f0c:	or     bl,bh
  406f0e:	mov    ecx,0xd86678a8
  406f13:	sbb    ebx,ecx
  406f15:	jle    0x406f14
  406f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f18:	popf   
  406f19:	cwde   
  406f1a:	mov    al,0x78
  406f1c:	into   
  406f1d:	inc    esi
  406f1e:	je     0x406f4d
  406f20:	sbb    eax,0x7cba5af5
  406f25:	cmp    BYTE PTR [edx-0x7c],bh
  406f28:	cmp    esp,edi
  406f2a:	nop
  406f2b:	inc    esp
  406f2c:	sti    
  406f2d:	and    eax,esi
  406f2f:	mov    cl,0xb4
  406f31:	mov    bl,0xc
  406f33:	fst    DWORD PTR [eax+ebp*2+0x75a82b6b]
  406f3a:	(bad)  [ecx-0x10644f8b]
  406f40:	aad    0xd3
  406f42:	js     0x406eef
  406f44:	loopne 0x406fb1
  406f46:	jno    0x406f90
  406f48:	mov    dh,0xa8
  406f4a:	shl    al,1
  406f4c:	mov    ds:0x368f92f4,al
  406f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f52:	add    esi,esi
  406f54:	xchg   edi,esp
  406f56:	jbe    0x406f9d
  406f58:	xor    cl,bl
  406f5a:	loop   0x406f42
  406f5c:	jne    0x406f66
  406f5e:	mov    ah,bl
  406f60:	dec    esp
  406f61:	add    DWORD PTR [eax-0x38],edx
  406f64:	adc    BYTE PTR [ecx-0x45],0xef
  406f68:	or     esi,DWORD PTR [ecx]
  406f6a:	and    eax,0x8950eb65
  406f6f:	jg     0x406f82
  406f71:	mov    ds:0xca805070,al
  406f76:	and    DWORD PTR [ecx],eax
  406f78:	dec    ecx
  406f79:	ins    BYTE PTR es:[edi],dx
  406f7a:	mov    BYTE PTR [ebx+eiz*4],dh
  406f7d:	and    eax,0xa37fe95d
  406f82:	(bad)  
  406f83:	jp     0x406f7d
  406f85:	sub    dh,dl
  406f87:	test   BYTE PTR ds:0xece272a0,0x8b
  406f8e:	lock pop ds
  406f90:	mov    ds:0x680c20b5,al
  406f95:	xchg   edx,eax
  406f96:	adc    ebp,eax
  406f98:	jno    0x406fcc
  406f9a:	and    esp,ebx
  406f9c:	in     eax,dx
  406f9d:	into   
  406f9e:	nop
  406f9f:	leave  
  406fa0:	loope  0x406ff2
  406fa2:	ret    
  406fa3:	dec    esp
  406fa4:	push   esp
  406fa5:	hlt    
  406fa6:	cmp    al,0x89
  406fa8:	pop    eax
  406fa9:	mov    dh,0x4
  406fab:	fdiv   QWORD PTR [ecx+ebp*4+0x2e5fb5fe]
  406fb2:	lods   al,BYTE PTR ds:[esi]
  406fb3:	and    BYTE PTR [eax+ebp*2-0x28],ah
  406fb7:	push   esi
  406fb8:	loopne 0x407017
  406fba:	lahf   
  406fbb:	and    BYTE PTR [eax+0x30],0x5
  406fbf:	pop    edx
  406fc0:	pop    es
  406fc1:	jae    0x407041
  406fc3:	lock push eax
  406fc5:	in     eax,dx
  406fc6:	sub    DWORD PTR [ecx+0x29],edi
  406fc9:	jno    0x406fba
  406fcb:	or     BYTE PTR [esi-0x7d],ah
  406fce:	aas    
  406fcf:	add    eax,edx
  406fd1:	xchg   esp,eax
  406fd2:	shl    BYTE PTR [edx],cl
  406fd4:	dec    eax
  406fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd6:	int3   
  406fd7:	lock mov ds:0xd877ab4c,al
  406fdd:	cmp    DWORD PTR [edi+0x2e],esp
  406fe0:	data16 das 
  406fe2:	add    bl,BYTE PTR es:[edi]
  406fe5:	sti    
  406fe6:	or     bl,ch
  406fe8:	mov    dl,0xcc
  406fea:	xor    BYTE PTR [eax-0x67ca42db],ah
  406ff0:	mov    ch,0x63
  406ff2:	adc    bl,BYTE PTR [esi]
  406ff4:	and    eax,0x49f8ea1
  406ff9:	bound  ebx,QWORD PTR [ecx+0x27]
  406ffc:	loop   0x406f7e
  406ffe:	loope  0x407041
  407000:	shr    BYTE PTR [edi],1
  407002:	jge    0x407015
  407004:	and    ebp,DWORD PTR [esi-0x70]
  407007:	jne    0x407074
  407009:	push   ebp
  40700a:	xchg   esi,eax
  40700b:	in     al,0x56
  40700d:	test   BYTE PTR [ebx],dh
  40700f:	imul   esp,DWORD PTR [edx-0x34846703],0x6e
  407016:	pop    ebp
  407017:	test   al,0xd1
  407019:	push   edi
  40701a:	imul   esp,DWORD PTR [ebp+0x7b],0x50cd3522
  407021:	lea    ebx,[esi+0x5fa60508]
  407027:	pop    edi
  407028:	(bad)  
  407029:	fidiv  DWORD PTR [edi+ebp*8+0x5c727ba2]
  407030:	fbld   TBYTE PTR [ebx+0x17615ecf]
  407036:	gs add bh,al
  407039:	and    al,0xc3
  40703b:	jno    0x407019
  40703d:	push   0xa
  40703f:	call   0xedc1:0x32ecbb90
  407046:	retf   0x72f1
  407049:	lods   al,BYTE PTR ds:[esi]
  40704a:	xor    al,0x92
  40704c:	xchg   ecx,eax
  40704d:	mov    ecx,0x36a62ec1
  407052:	clc    
  407053:	aaa    
  407054:	dec    esi
  407055:	je     0x40707f
  407057:	pop    es
  407058:	mov    bl,0x2c
  40705a:	mov    esi,0x7c1e845a
  40705f:	cmp    eax,0x75f128b1
  407064:	jmp    0xe58f:0x3eca5d78
  40706b:	jo     0x406ffa
  40706d:	dec    esi
  40706e:	sub    BYTE PTR [edi+esi*8],dl
  407071:	(bad)  
  407073:	adc    ebx,edi
  407075:	adc    al,0x3d
  407077:	sti    
  407078:	push   edx
  407079:	adc    DWORD PTR [ebx+eiz*8-0x2fcab8fd],edx
  407080:	xchg   edx,eax
  407081:	adc    BYTE PTR [ebp+0x4e],al
  407084:	cmp    eax,0xbeeeedbe
  407089:	sbb    al,0xdc
  40708b:	dec    ecx
  40708c:	not    BYTE PTR [esi]
  40708e:	nop
  40708f:	sub    ebp,ebx
  407091:	jo     0x40704e
  407093:	imul   ebx,DWORD PTR [ebx+0x36],0x3d
  407097:	data16 xor al,0xbd
  40709a:	push   edx
  40709b:	push   es
  40709c:	adc    eax,0x86bf3484
  4070a1:	or     al,0x1
  4070a3:	outs   dx,DWORD PTR cs:[esi]
  4070a5:	push   ss
  4070a6:	fwait
  4070a7:	lea    eax,[eax-0x470b8f72]
  4070ad:	inc    esi
  4070ae:	dec    edi
  4070af:	add    ecx,edi
  4070b1:	je     0x40704f
  4070b3:	pop    es
  4070b4:	cli    
  4070b5:	dec    ebx
  4070b6:	xchg   BYTE PTR [edx-0xf39ad19],ah
  4070bc:	test   BYTE PTR [ebx+0x5c],bh
  4070bf:	lea    ebx,[edi]
  4070c1:	pushf  
  4070c2:	imul   edx,DWORD PTR [ecx+0xf6c6deb],0x5a
  4070c9:	(bad)  
  4070ca:	sub    DWORD PTR [ecx+ebx*4+0x2a],edx
  4070ce:	outs   dx,BYTE PTR ds:[esi]
  4070cf:	aad    0x77
  4070d1:	scas   al,BYTE PTR es:[edi]
  4070d2:	adc    eax,0xef4f97cd
  4070d7:	pop    esi
  4070d8:	adc    eax,0x85ed07f9
  4070dd:	mov    WORD PTR [edx],?
  4070df:	mov    esi,0xfc6db85c
  4070e4:	int    0x5
  4070e6:	fisub  WORD PTR [ecx+0x47]
  4070e9:	fld    st(5)
  4070eb:	outs   dx,BYTE PTR ds:[esi]
  4070ec:	(bad)  
  4070ed:	cmp    ebx,DWORD PTR [eax-0x79]
  4070f0:	mov    eax,ds:0xd2d46d35
  4070f5:	sbb    al,0x61
  4070f7:	mov    dl,0x15
  4070f9:	add    edx,DWORD PTR [edi-0x11]
  4070fc:	lahf   
  4070fd:	mov    BYTE PTR [edx-0x52],ch
  407100:	add    eax,0x4d56604
  407105:	xor    bl,BYTE PTR [ecx+0x3e2aa6ab]
  40710b:	fist   DWORD PTR [edi+0x6d5b40e9]
  407111:	push   edi
  407112:	inc    ebp
  407113:	aaa    
  407114:	retf   
  407115:	hlt    
  407116:	jno    0x4070c3
  407118:	pop    esi
  407119:	aam    0x78
  40711b:	mov    dl,0xc
  40711d:	aad    0xc9
  40711f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407120:	sbb    DWORD PTR [ecx],ebx
  407122:	adc    BYTE PTR [edx-0x2aea0eb1],0xa1
  407129:	sbb    al,0x7c
  40712b:	imul   esi,DWORD PTR [eax+ebp*2],0x4a
  40712f:	add    bh,BYTE PTR ds:0xfde9b7e0
  407135:	das    
  407136:	mov    esp,DWORD PTR [edx-0x49]
  407139:	stos   DWORD PTR es:[edi],eax
  40713a:	mov    WORD PTR [ecx+ecx*2+0x70],ds
  40713e:	sbb    eax,0xd0f19c13
  407143:	xor    eax,0xc0b7c031
  407148:	inc    esp
  407149:	daa    
  40714a:	or     dl,BYTE PTR [esi+0x56]
  40714d:	jns    0x407111
  40714f:	xchg   edi,eax
  407150:	mov    WORD PTR [ecx-0x16ef94ee],ds
  407156:	out    dx,eax
  407157:	fisubr DWORD PTR ds:0xf1ee0204
  40715d:	pcmpgtw mm4,QWORD PTR [edi+0x27d6c2fa]
  407164:	loope  0x407161
  407166:	mov    ecx,es
  407168:	pop    ebp
  407169:	push   es
  40716a:	dec    ecx
  40716b:	shl    DWORD PTR [edi-0x68c7a419],0x25
  407172:	mov    esi,0x873da07d
  407177:	test   eax,0xcbc70f6e
  40717c:	push   ds
  40717d:	pop    ecx
  40717e:	sahf   
  40717f:	test   al,0x68
  407181:	jb     0x40710c
  407183:	data16 jp 0x407176
  407186:	je     0x407133
  407188:	xor    al,0xe9
  40718a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40718c:	dec    BYTE PTR [ecx-0x75]
  40718f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407190:	aas    
  407191:	or     al,0x72
  407193:	fimul  DWORD PTR ds:0xd681a994
  407199:	mov    ebx,0x88352430
  40719e:	mov    ah,0xb7
  4071a0:	jne    0x4071af
  4071a2:	cmp    al,0x68
  4071a4:	in     eax,dx
  4071a5:	imul   ebp,DWORD PTR [eax-0x31],0xffffffe4
  4071a9:	and    ebp,edx
  4071ab:	push   ecx
  4071ac:	retf   0x6604
  4071af:	pop    edi
  4071b0:	ret    
  4071b1:	mov    edx,0xda2d4081
  4071b6:	je     0x407183
  4071b8:	pop    ecx
  4071b9:	push   es
  4071ba:	xor    eax,0xe2559307
  4071bf:	xor    esi,esp
  4071c1:	push   es
  4071c2:	imul   edi,DWORD PTR [ebx+ebp*1-0x30],0xffffffb7
  4071c7:	pop    ss
  4071c8:	aas    
  4071c9:	int3   
  4071ca:	loopne 0x407213
  4071cc:	jmp    0x407239
  4071ce:	mov    edx,DWORD PTR [ebx+eax*2+0x43]
  4071d2:	enter  0xcb9a,0x46
  4071d6:	mov    eax,0xb7fa7c05
  4071db:	jmp    0x55a65af6
  4071e0:	lock dec edx
  4071e2:	(bad)  
  4071e3:	xor    ebp,esp
  4071e5:	inc    eax
  4071e6:	mov    ds:0x1532cd70,eax
  4071eb:	sbb    eax,0xee33d8ad
  4071f0:	stc    
  4071f1:	out    0x88,eax
  4071f3:	mov    ds:0x5a83abb8,eax
  4071f8:	sahf   
  4071f9:	push   edx
  4071fa:	inc    esp
  4071fb:	scas   eax,DWORD PTR es:[edi]
  4071fc:	clc    
  4071fd:	in     eax,0x3b
  4071ff:	mov    esp,0x9b8e23d3
  407204:	jmp    0x4071e2
  407206:	nop
  407207:	mov    ds:0xa1cbcd41,eax
  40720c:	xchg   ebp,eax
  40720d:	fild   WORD PTR [ecx-0x6a]
  407210:	sbb    BYTE PTR cs:[eax],ah
  407213:	mov    ecx,0x8a180382
  407218:	xor    al,0x9e
  40721a:	cld    
  40721b:	fucomi st,st(2)
  40721d:	loop   0x407268
  40721f:	and    eax,0x69b4bdfe
  407224:	jo     0x4071cf
  407226:	cmp    BYTE PTR [ebp-0x1],cl
  407229:	add    eax,0x1355b21d
  40722e:	push   ds
  40722f:	or     al,0xc3
  407231:	jae    0x4071f9
  407233:	sub    ch,dl
  407235:	ja     0x40728b
  407237:	adc    ebp,edi
  407239:	sbb    edx,DWORD PTR [esi]
  40723b:	sbb    dl,dl
  40723d:	xchg   edx,eax
  40723e:	cmc    
  40723f:	cld    
  407240:	pushf  
  407241:	dec    esi
  407242:	xor    al,0xd3
  407244:	cmc    
  407245:	test   DWORD PTR ds:0x24f0854a,esp
  40724b:	lahf   
  40724c:	push   cs
  40724d:	stc    
  40724e:	cmp    DWORD PTR [ebp+0x67],0xd63a66d0
  407255:	mov    bh,0x6d
  407257:	push   ebx
  407258:	xor    BYTE PTR [ebp+eiz*8+0x44265235],0xe7
  407260:	mov    ah,0xbf
  407262:	out    dx,al
  407263:	and    dh,BYTE PTR [esi+ebx*1]
  407266:	xor    dl,bl
  407268:	sub    al,0xf9
  40726a:	dec    edx
  40726b:	sbb    ah,bh
  40726d:	pusha  
  40726e:	std    
  40726f:	std    
  407270:	push   cs
  407271:	rcl    BYTE PTR [edi],1
  407273:	dec    ecx
  407274:	rcl    BYTE PTR [ebx-0x160f3a85],0xfe
  40727b:	repnz or al,cl
  40727e:	jno    0x407267
  407280:	sbb    cl,BYTE PTR [ecx]
  407282:	cmc    
  407283:	inc    esi
  407284:	lock mov edi,0x32f307c3
  40728a:	je     0x4072c5
  40728c:	popa   
  40728d:	sub    edi,DWORD PTR [edx+0x125ed757]
  407293:	mov    ecx,0xf43dee00
  407298:	xor    ecx,DWORD PTR [edi]
  40729a:	pushf  
  40729b:	jbe    0x4072e4
  40729d:	push   eax
  40729e:	push   0x6e
  4072a0:	and    bl,BYTE PTR [edx+edi*1-0x2b482263]
  4072a7:	dec    edx
  4072a8:	or     DWORD PTR [edx-0x35],edx
  4072ab:	(bad)  [ebx]
  4072ad:	inc    ebp
  4072ae:	inc    eax
  4072af:	xor    ch,BYTE PTR [ecx-0x5f]
  4072b2:	aam    0xd3
  4072b4:	int3   
  4072b5:	fiadd  WORD PTR [ebx]
  4072b7:	icebp  
  4072b8:	jecxz  0x4072be
  4072ba:	mov    cl,0x98
  4072bd:	repz fnsave [edx+0x537ee17b]
  4072c4:	call   0xda60:0x4c8325a9
  4072cb:	pop    edx
  4072cc:	lahf   
  4072cd:	stc    
  4072ce:	arpl   WORD PTR [eax-0x18f6d43f],di
  4072d4:	sar    DWORD PTR [eax-0x5d],1
  4072d7:	lods   eax,DWORD PTR ds:[esi]
  4072d8:	stc    
  4072d9:	mov    bl,0x77
  4072db:	sti    
  4072dc:	mov    ss,WORD PTR [ecx]
  4072de:	jmp    0x407325
  4072e0:	jg     0x4072e1
  4072e2:	loope  0x4072b1
  4072e4:	cmp    esi,DWORD PTR [eax]
  4072e6:	or     al,0x26
  4072e8:	mov    ebp,0x10103061
  4072ed:	and    bl,dl
  4072ef:	test   BYTE PTR [eax],bh
  4072f1:	lahf   
  4072f2:	xchg   edx,eax
  4072f3:	pop    ss
  4072f4:	mov    ds:0x1d60a3b4,eax
  4072f9:	pop    edx
  4072fa:	xor    eax,0x989ab44
  4072ff:	rol    BYTE PTR [edi-0x2],1
  407302:	cmp    eax,DWORD PTR [edx]
  407304:	ror    al,1
  407306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407307:	int3   
  407308:	inc    edi
  407309:	pop    edi
  40730a:	outs   dx,BYTE PTR ds:[esi]
  40730b:	mov    dh,0x25
  40730d:	popf   
  40730e:	shr    BYTE PTR [esi],cl
  407310:	cdq    
  407311:	sbb    DWORD PTR [eax-0xb],0x6000dc4b
  407318:	(bad)  
  407319:	push   esp
  40731a:	push   ecx
  40731b:	xor    bh,ch
  40731d:	cs in  eax,0xb7
  407320:	inc    edx
  407321:	fistp  DWORD PTR [eax]
  407323:	dec    BYTE PTR [esi-0x49d52a85]
  407329:	outs   dx,DWORD PTR ds:[esi]
  40732a:	sub    eax,0x84c8f903
  40732f:	jecxz  0x407390
  407331:	sti    
  407332:	jne    0x4072dc
  407334:	or     BYTE PTR [eax-0x57182021],bl
  40733a:	or     DWORD PTR [edx-0x2d],0xffffffc2
  40733e:	cs xchg ecx,eax
  407340:	sub    esi,eax
  407342:	cmc    
  407343:	adc    esp,DWORD PTR [esi]
  407345:	mul    bl
  407347:	xchg   ecx,eax
  407348:	in     al,0x60
  40734a:	inc    edi
  40734b:	imul   edx,DWORD PTR [edx+0x6f],0x6e4d3e56
  407352:	mov    esp,0x5dc1b7c2
  407357:	loopne 0x4073c7
  407359:	sbb    BYTE PTR [edx-0xb24a668],ch
  40735f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407360:	out    0xf7,al
  407362:	repz dec edx
  407364:	mov    bh,0xc3
  407366:	in     eax,dx
  407367:	cld    
  407368:	out    dx,al
  407369:	iret   
  40736a:	cld    
  40736b:	pop    ebp
  40736c:	(bad)  
  40736d:	aas    
  40736e:	mov    esi,0x28992378
  407373:	cli    
  407374:	mov    esi,0xc96ca844
  407379:	lea    ebp,[edi-0x29ba8ec4]
  40737f:	mov    ebx,0xc96c999c
  407384:	aad    0x5b
  407386:	fldcw  WORD PTR [ecx]
  407388:	pushf  
  407389:	pop    esp
  40738a:	sub    al,0xed
  40738c:	push   ebp
  40738d:	add    cl,BYTE PTR [ebx+0x7bae1776]
  407393:	jg     0x4073b9
  407395:	jnp    0x407341
  407397:	pop    esi
  407398:	sub    eax,0x1bfbfce8
  40739d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40739e:	and    ebx,DWORD PTR [ecx]
  4073a0:	mov    dl,BYTE PTR [ebp-0x44]
  4073a3:	xchg   edx,eax
  4073a4:	and    DWORD PTR [edx+0x5a],esp
  4073a7:	dec    esp
  4073a8:	adc    esi,DWORD PTR [ebp+0x5d]
  4073ab:	xchg   ebp,eax
  4073ac:	out    0xb1,eax
  4073ae:	xchg   esp,eax
  4073af:	dec    ebx
  4073b0:	mov    ebx,0xf5b31071
  4073b5:	ss out dx,eax
  4073b7:	mov    ecx,DWORD PTR [ecx+0x794cfb11]
  4073bd:	jp     0x4073d7
  4073bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c0:	cmp    al,0xfd
  4073c2:	pusha  
  4073c3:	xor    al,0xe9
  4073c5:	dec    ebp
  4073c6:	mov    eax,ds:0x3800695a
  4073cb:	pop    ss
  4073cc:	fisttp QWORD PTR [esp+esi*8]
  4073cf:	jl     0x4073bb
  4073d1:	mov    ch,0x4f
  4073d3:	test   eax,0x27b8f598
  4073d8:	sub    al,0x3
  4073da:	icebp  
  4073db:	mov    eax,0x9d4cb3f
  4073e0:	jno    0x4073f4
  4073e2:	push   esi
  4073e3:	lds    esp,FWORD PTR [eax-0x4a]
  4073e6:	push   esp
  4073e7:	inc    ecx
  4073e8:	outs   dx,BYTE PTR ds:[esi]
  4073e9:	mov    cl,0x1b
  4073eb:	add    bh,BYTE PTR [ebp-0x7b]
  4073ee:	mov    esi,0xd9a38a73
  4073f3:	jno    0x407378
  4073f5:	test   DWORD PTR [eax+ebp*8+0x16e21c81],esi
  4073fc:	scas   al,BYTE PTR es:[edi]
  4073fd:	xor    edi,esi
  4073ff:	dec    esi
  407400:	add    dh,dl
  407402:	imul   eax,DWORD PTR [ebx],0x6eb39a95
  407408:	and    BYTE PTR [edi],0x57
  40740b:	cli    
  40740c:	imul   ebp,DWORD PTR [eax+ebx*2],0x6c
  407410:	jle    0x4073ed
  407412:	neg    BYTE PTR [eax+0x6bb61143]
  407418:	retf   
  407419:	mov    DWORD PTR [ebp-0x79],edx
  40741c:	lea    eax,[ecx+eax*8]
  40741f:	add    eax,0x5dc906d0
  407424:	jno    0x40748b
  407426:	mov    bl,0xf5
  407428:	mov    ds:0xbafa023d,al
  40742d:	int    0x4
  40742f:	mov    ds:0x271489c3,eax
  407434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407435:	repnz xchg ebx,eax
  407437:	ficom  DWORD PTR [edx+0x15]
  40743a:	jne    0x407475
  40743c:	and    eax,0xd6e4d330
  407441:	dec    ebp
  407442:	inc    BYTE PTR [edi]
  407444:	and    eax,0xb8fbaa92
  407449:	mov    ds:0xd7297f9,eax
  40744e:	call   0xf11:0x63611599
  407455:	adc    eax,0x9f7a2172
  40745a:	call   0xb8128240
  40745f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407460:	push   esi
  407461:	or     esi,DWORD PTR [edi-0x14]
  407464:	adc    DWORD PTR [ecx+0x7daf9bc9],edi
  40746a:	leave  
  40746b:	push   0xffffffeb
  40746d:	setns  BYTE PTR [edi+eax*4-0x5c]
  407472:	and    esi,ebp
  407474:	fsub   QWORD PTR ds:0x50211184
  40747a:	cwde   
  40747b:	cmp    DWORD PTR [edx],ebp
  40747d:	jge    0x407459
  40747f:	sub    eax,0x8129df38
  407484:	enter  0x4c33,0xe1
  407488:	push   ss
  407489:	jns    0x40743d
  40748b:	adc    BYTE PTR [ecx],bl
  40748d:	xchg   edi,eax
  40748e:	cmc    
  40748f:	dec    edx
  407490:	dec    eax
  407491:	add    eax,esi
  407493:	xor    edi,DWORD PTR [edx]
  407495:	ja     0x40744a
  407497:	leave  
  407498:	cli    
  407499:	jmp    0x40744c
  40749b:	inc    ecx
  40749c:	mov    bl,0x2b
  40749e:	cmp    eax,0xe097c951
  4074a3:	add    al,0xd2
  4074a5:	ins    DWORD PTR es:[edi],dx
  4074a6:	or     al,BYTE PTR [esi]
  4074a8:	jecxz  0x4074f1
  4074aa:	addr16 or al,0x7c
  4074ad:	xor    edi,0x96d3650
  4074b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074b4:	adc    DWORD PTR [edi-0x2f],esi
  4074b7:	xchg   esi,eax
  4074b8:	cmp    al,bh
  4074ba:	jo     0x40752e
  4074bc:	mov    dh,0x58
  4074be:	push   edi
  4074bf:	xchg   edi,eax
  4074c0:	sbb    BYTE PTR [edx+ebp*4-0x9],ch
  4074c4:	adc    dh,BYTE PTR [eax+0xe8304e6]
  4074ca:	cs sbb dh,al
  4074cd:	or     eax,0xc31a490e
  4074d2:	xchg   ebx,eax
  4074d3:	loope  0x407533
  4074d5:	loop   0x4074d8
  4074d7:	mov    dh,0x67
  4074d9:	aas    
  4074da:	sahf   
  4074db:	scas   al,BYTE PTR es:[edi]
  4074dc:	test   al,0x1d
  4074de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074df:	int3   
  4074e0:	add    al,0x32
  4074e2:	xor    DWORD PTR [eax+eax*8-0x1d],ecx
  4074e6:	inc    edx
  4074e7:	xor    al,0xfd
  4074e9:	fild   QWORD PTR [edx+0x39384e7c]
  4074ef:	pop    esi
  4074f0:	mov    esp,0x49c626da
  4074f5:	xlat   BYTE PTR ds:[ebx]
  4074f6:	fcom   st(5)
  4074f8:	retf   
  4074f9:	lea    esi,[edx]
  4074fb:	cmp    dh,BYTE PTR [ebx]
  4074fd:	push   ecx
  4074fe:	out    0xba,eax
  407500:	fistp  WORD PTR [ecx+0x6]
  407503:	je     0x4074f4
  407505:	fwait
  407506:	jne    0x407571
  407508:	jae    0x4074c8
  40750a:	jge    0x40756b
  40750c:	push   eax
  40750d:	dec    esi
  40750e:	adc    BYTE PTR [esi-0x28],ch
  407511:	cmp    dh,BYTE PTR [esi-0x59]
  407514:	fistp  DWORD PTR [edi]
  407516:	lahf   
  407517:	sub    BYTE PTR [edi+0x62],bh
  40751a:	jmp    0x4074c9
  40751c:	push   0xedfb0070
  407521:	(bad)  
  407522:	push   ds
  407523:	mov    dh,0xd6
  407525:	sbb    bl,dl
  407527:	mov    ebx,0x3327190a
  40752c:	mov    cl,0x71
  40752e:	jmp    DWORD PTR [edx+0x5d4b74df]
  407534:	pop    ebx
  407535:	outs   dx,BYTE PTR ds:[esi]
  407536:	das    
  407537:	fsubrp st(1),st
  407539:	push   0x73
  40753b:	test   BYTE PTR [edx+0x3e97c73d],cl
  407541:	push   cs
  407542:	jp     0x4075a6
  407544:	sub    BYTE PTR [esi+edi*1-0x3472e203],dl
  40754b:	out    dx,al
  40754c:	enter  0x2901,0xec
  407550:	inc    ecx
  407551:	dec    eax
  407552:	fcmovnb st,st(1)
  407554:	ins    BYTE PTR es:[edi],dx
  407555:	pop    es
  407556:	mov    DWORD PTR [esp+esi*1-0x2e],eax
  40755a:	add    al,0xe7
  40755c:	in     eax,0x24
  40755e:	xor    eax,0xf879bbb4
  407563:	in     al,0xbc
  407565:	sub    eax,0xa2d87979
  40756a:	sti    
  40756b:	jae    0x4075ab
  40756d:	and    eax,0x9cccd52c
  407572:	cmp    BYTE PTR [esi-0x6870dcbc],dh
  407578:	(bad)  
  407579:	xchg   edi,eax
  40757a:	call   0x925321fa
  40757f:	xchg   esi,eax
  407580:	jl     0x407576
  407582:	dec    eax
  407583:	lahf   
  407584:	sahf   
  407585:	bound  edx,QWORD PTR [edx-0x29]
  407588:	mov    eax,0x4889d0d5
  40758d:	int    0x7f
  40758f:	pushf  
  407590:	sar    cl,1
  407592:	push   cs
  407593:	jge    0x4075e1
  407595:	mov    ds:0x1823abe4,al
  40759a:	jge    0x407613
  40759c:	or     bh,ah
  40759e:	aam    0xa3
  4075a0:	mov    edi,0x55ac3409
  4075a5:	and    eax,0x335bda51
  4075aa:	sbb    BYTE PTR [esi+0x1b4e6174],ch
  4075b0:	cs push 0x32e9d7f8
  4075b6:	xor    ebp,DWORD PTR [ebx+0x30]
  4075b9:	dec    ecx
  4075ba:	xor    al,0xa9
  4075bc:	add    eax,0x3c4b2a1f
  4075c1:	dec    esp
  4075c2:	cmp    BYTE PTR es:[eax],al
  4075c5:	jge    0x407597
  4075c7:	mov    ebp,0x44f9b928
  4075cc:	mov    dl,0x91
  4075ce:	adc    eax,0x830d8c11
  4075d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075d4:	mov    dl,0x65
  4075d6:	test   al,0x36
  4075d8:	cld    
  4075d9:	xchg   ebp,eax
  4075da:	outs   dx,BYTE PTR ds:[esi]
  4075db:	gs addr16 ret 
  4075de:	rol    BYTE PTR ds:0x13eff3b1,1
  4075e4:	mov    al,0x6d
  4075e6:	jp     0x4075d5
  4075e8:	movhps QWORD PTR [ebx+ecx*4-0x1b],xmm0
  4075ed:	xor    edi,ebp
  4075ef:	xor    BYTE PTR [ebp+0x6d],al
  4075f2:	push   edi
  4075f3:	pop    ss
  4075f4:	cmp    DWORD PTR [edx-0x68],edx
  4075f7:	push   0xffffffe3
  4075f9:	push   0xffffffbc
  4075fb:	stos   BYTE PTR es:[edi],al
  4075fc:	pusha  
  4075fd:	in     eax,dx
  4075fe:	fmul   DWORD PTR ds:0x840d7226
  407604:	fcom   QWORD PTR [ebx-0x5a7ffd64]
  40760a:	push   0x7f7184c8
  40760f:	stc    
  407610:	(bad)  
  407611:	mov    WORD PTR [edx],?
  407613:	jo     0x4075ef
  407615:	aam    0x6a
  407617:	(bad)  
  407618:	pusha  
  407619:	adc    eax,0x375d07b9
  40761e:	into   
  40761f:	pop    eax
  407620:	mov    cl,0x1d
  407622:	mov    ds:0x134b6978,eax
  407627:	fidiv  DWORD PTR [ebx]
  407629:	mov    ds:0xca99fd6c,al
  40762e:	pop    esp
  40762f:	hlt    
  407630:	lods   eax,DWORD PTR ds:[esi]
  407631:	push   cs
  407632:	sbb    DWORD PTR [ebp-0x495bfabb],esp
  407638:	dec    ebx
  407639:	sti    
  40763a:	hlt    
  40763b:	dec    edi
  40763c:	jmp    0x4075fc
  40763e:	leave  
  40763f:	repz inc edx
  407641:	xor    DWORD PTR [ecx-0x327530ac],ebp
  407647:	push   edx
  407648:	mov    edx,0xf884bdcc
  40764d:	inc    edi
  40764e:	enter  0x4e18,0xb6
  407652:	cmp    eax,0x21ad7e5e
  407657:	jge    0x407684
  407659:	bound  ebx,QWORD PTR [edx-0x5]
  40765c:	mov    BYTE PTR [esp+eiz*2-0x4c],bh
  407660:	test   DWORD PTR [esi],0x9f9816db
  407666:	(bad)  
  407667:	sub    DWORD PTR [eax],edi
  407669:	sbb    BYTE PTR ds:0x58c3490c,ch
  40766f:	xchg   edx,eax
  407670:	clc    
  407671:	mov    eax,0x25b2da32
  407676:	jmp    0x407660
  407678:	ins    DWORD PTR es:[edi],dx
  407679:	jg     0x407631
  40767b:	and    eax,0x272e0dee
  407680:	pop    es
  407681:	and    dh,BYTE PTR [edx+eiz*8]
  407684:	push   esi
  407685:	imul   esp,DWORD PTR [edx+0x6bc2341b],0xb7c98f12
  40768f:	adc    ah,dh
  407691:	xor    eax,0x917bda0
  407696:	imul   ecx,DWORD PTR [esi+0x24545b71],0x2c
  40769d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40769e:	fcom   st(0)
  4076a0:	dec    esi
  4076a1:	lods   al,BYTE PTR ds:[esi]
  4076a2:	dec    edi
  4076a3:	enter  0x254b,0xb0
  4076a7:	push   edi
  4076a8:	fs xchg edi,eax
  4076aa:	adc    al,0xd7
  4076ac:	sbb    DWORD PTR [ecx-0x38c65292],edx
  4076b2:	push   esi
  4076b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076b4:	sbb    BYTE PTR [esi+ebp*1+0xb02a071],bl
  4076bb:	bound  esi,QWORD PTR [eax-0x629d3444]
  4076c1:	dec    edx
  4076c2:	add    eax,0x1184ad6
  4076c7:	add    ebp,DWORD PTR fs:[esi+0x17]
  4076cb:	jmp    0xe2bf:0x6f526dab
  4076d2:	into   
  4076d3:	jl     0x407718
  4076d5:	(bad)  
  4076d6:	sbb    eax,0x48c6f101
  4076db:	xchg   ebx,eax
  4076dc:	aaa    
  4076dd:	push   ecx
  4076de:	mov    eax,ds:0x5e8edd07
  4076e3:	test   eax,0xe8d1af34
  4076e8:	push   ebx
  4076e9:	pusha  
  4076ea:	mov    bh,0xb8
  4076ec:	rol    BYTE PTR [esi],0x19
  4076ef:	shl    BYTE PTR [eax+0x16],cl
  4076f2:	aaa    
  4076f3:	hlt    
  4076f4:	mov    ch,BYTE PTR [ebx-0x63c8210f]
  4076fa:	add    BYTE PTR [edi+0x3a],cl
  4076fd:	and    al,0xb3
  4076ff:	ret    
  407700:	mov    edx,0x8ba8dc9a
  407705:	(bad)  
  407706:	dec    esi
  407707:	lods   eax,DWORD PTR ds:[esi]
  407708:	sub    DWORD PTR [edi],ebx
  40770a:	xor    bl,BYTE PTR [ecx-0x57]
  40770d:	mov    ch,0xf7
  40770f:	mov    ah,0x13
  407711:	cwde   
  407712:	pop    edi
  407713:	ror    BYTE PTR [edi+eax*1],1
  407716:	or     al,0x3c
  407718:	xchg   esi,eax
  407719:	repz out 0xf8,al
  40771c:	cmp    bh,BYTE PTR [esi+0x70]
  40771f:	push   ss
  407720:	dec    edx
  407721:	mov    ah,0x20
  407723:	jmp    0xb7872aaf
  407728:	(bad)  [eax]
  40772a:	js     0x407795
  40772c:	ss mov dh,al
  40772f:	pop    esp
  407730:	pop    ss
  407731:	sti    
  407732:	sahf   
  407733:	scas   al,BYTE PTR es:[edi]
  407734:	out    dx,al
  407735:	imul   esi,edx,0xf54d7e27
  40773b:	mov    ds:0xed03c5fb,al
  407740:	sub    DWORD PTR [edx+0x17],0xffffffca
  407744:	arpl   WORD PTR [ecx-0x7f680667],ax
  40774a:	stos   BYTE PTR es:[edi],al
  40774b:	imul   ecx
  40774d:	imul   ebp,DWORD PTR [edi-0x745c903e],0x59
  407754:	rep outs dx,DWORD PTR ds:[esi]
  407756:	xchg   ebx,eax
  407757:	jne    0x40772e
  407759:	sub    edi,DWORD PTR [edx-0x79]
  40775c:	sub    DWORD PTR [edi],esi
  40775e:	sahf   
  40775f:	jmp    0x407729
  407761:	xchg   ebp,eax
  407762:	call   0xeea813aa
  407767:	ins    DWORD PTR es:[edi],dx
  407768:	xor    DWORD PTR [esi-0x4b41ab9b],esp
  40776e:	aaa    
  40776f:	jge    0x40772b
  407771:	daa    
  407772:	push   edi
  407773:	and    eax,0x323fc5a0
  407778:	mov    bh,0x6c
  40777a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40777b:	dec    ecx
  40777c:	(bad)  
  40777d:	adc    dl,BYTE PTR ds:0x18cb19c9
  407783:	mov    esp,ecx
  407785:	dec    esi
  407786:	mov    dh,0x5c
  407788:	in     al,0xbf
  40778a:	(bad)  
  40778b:	pop    ds
  40778c:	mov    eax,ds:0xa37ef530
  407791:	hlt    
  407792:	xor    al,0x21
  407794:	mov    dl,0x2b
  407796:	sbb    BYTE PTR ds:0xdb2114fd,0x1
  40779d:	push   ss
  40779e:	sub    esi,DWORD PTR [ebx]
  4077a0:	jns    0x4077ef
  4077a2:	test   al,0xdf
  4077a4:	inc    cx
  4077a6:	add    dl,BYTE PTR [edi]
  4077a8:	ds mov dh,0x9b
  4077ab:	mov    dh,0xf3
  4077ad:	clc    
  4077ae:	adc    ah,ch
  4077b0:	or     eax,0x90fc331f
  4077b5:	xchg   ecx,eax
  4077b6:	mov    dh,0xe6
  4077b8:	nop
  4077b9:	push   ebp
  4077ba:	cld    
  4077bb:	mov    bl,0xfc
  4077bd:	sbb    eax,0x676aa647
  4077c2:	ins    BYTE PTR es:[edi],dx
  4077c3:	pusha  
  4077c4:	inc    edi
  4077c5:	loopne 0x407775
  4077c7:	into   
  4077c8:	cs daa 
  4077ca:	das    
  4077cb:	cmp    ebp,DWORD PTR [ecx]
  4077cd:	sbb    cl,bh
  4077cf:	shl    bh,1
  4077d1:	dec    edx
  4077d2:	push   es
  4077d3:	sub    al,BYTE PTR [ebx]
  4077d5:	iret   
  4077d6:	leave  
  4077d7:	jle    0x407808
  4077d9:	mov    dh,0x2f
  4077db:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077dd:	jb     0x4077a6
  4077df:	ins    DWORD PTR es:[edi],dx
  4077e0:	push   cs
  4077e1:	xchg   BYTE PTR [edi-0x34fc12],ch
  4077e7:	xchg   edx,eax
  4077e8:	xchg   ebp,eax
  4077e9:	push   edi
  4077ea:	pop    esp
  4077eb:	or     al,dh
  4077ed:	rcr    esp,cl
  4077ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f0:	pop    ds
  4077f1:	inc    esp
  4077f2:	dec    eax
  4077f3:	leave  
  4077f4:	xor    al,0xd1
  4077f6:	adc    al,0xbd
  4077f8:	and    eax,edx
  4077fa:	mov    al,ds:0xc74de583
  4077ff:	aam    0xc2
  407801:	rcr    BYTE PTR es:[ebp+0x43],0x35
  407806:	adc    BYTE PTR [eax-0x22],al
  407809:	(bad)  [edx-0x7a6342d1]
  40780f:	sbb    DWORD PTR [ebx],ebp
  407811:	pop    ss
  407812:	dec    ecx
  407813:	sub    al,ah
  407815:	pop    es
  407816:	sbb    bh,ch
  407818:	repz jmp 0x4077d1
  40781b:	ds test eax,0x3576db0b
  407821:	(bad)  
  407822:	xchg   esi,eax
  407823:	sub    esp,esp
  407825:	mov    ds:0x2867f7eb,al
  40782a:	adc    eax,0x6f21bac9
  40782f:	xchg   esi,eax
  407830:	adc    al,0xa3
  407832:	mov    DWORD PTR [ebx+ebp*8],ebp
  407835:	rcl    BYTE PTR [edi+0x46],1
  407838:	adc    BYTE PTR [ebp+0x49],ah
  40783b:	jg     0x407860
  40783d:	jbe    0x407819
  40783f:	mov    eax,0xf2bfb124
  407844:	push   0xde406cf8
  407849:	push   edx
  40784a:	sbb    al,BYTE PTR [ebp-0x22bed822]
  407850:	js     0x4078af
  407852:	in     eax,dx
  407853:	lahf   
  407854:	icebp  
  407855:	push   ebx
  407856:	mov    eax,edx
  407858:	mov    ds:0xca3d8c71,al
  40785d:	push   esi
  40785e:	popaw  
  407860:	mov    esp,DWORD PTR [ecx+edx*1+0x4943d96c]
  407867:	cdq    
  407868:	jp     0x407810
  40786a:	cs js  0x40788c
  40786d:	push   eax
  40786e:	push   0xffffff8a
  407870:	fs (bad) 
  407872:	aam    0xd8
  407874:	fist   DWORD PTR [ebp+0xa8bad5a]
  40787a:	push   ds
  40787b:	lods   eax,DWORD PTR ds:[esi]
  40787c:	pop    eax
  40787d:	xchg   ecx,eax
  40787e:	mov    ah,0xaf
  407880:	lds    ecx,FWORD PTR [ebx]
  407882:	push   eax
  407883:	xchg   ebp,eax
  407884:	rol    DWORD PTR [esi+edx*1],1
  407887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407888:	dec    ecx
  407889:	shl    DWORD PTR [eax],cl
  40788b:	push   ecx
  40788c:	inc    ecx
  40788d:	jl     0x407857
  40788f:	cmc    
  407890:	inc    ebx
  407891:	lahf   
  407892:	xchg   BYTE PTR [ebx],al
  407894:	gs mov esi,0xf8106ba0
  40789a:	cmc    
  40789b:	test   eax,0xace38c02
  4078a0:	push   ss
  4078a1:	icebp  
  4078a2:	inc    edi
  4078a3:	arpl   WORD PTR [ebp+0x15133ffc],bp
  4078a9:	push   0x87e6b86b
  4078ae:	leave  
  4078af:	or     eax,esi
  4078b1:	(bad)  
  4078b2:	fistp  WORD PTR [esi]
  4078b4:	adc    al,0xc1
  4078b6:	and    edi,edi
  4078b8:	sbb    al,0xac
  4078ba:	rol    ecx,cl
  4078bc:	mov    esp,DWORD PTR [ebx-0x74]
  4078bf:	addr16 retf 0x9a4f
  4078c3:	xchg   bx,ax
  4078c5:	call   0x6895:0x1d8c503e
  4078cc:	fistp  WORD PTR [edi-0x4f]
  4078cf:	pop    ebx
  4078d0:	(bad)
  4078d3:	std    
  4078d4:	mov    ch,0x40
  4078d6:	cwde   
  4078d7:	jbe    0x407942
  4078d9:	add    cl,BYTE PTR [ebp+edi*2+0x74]
  4078dd:	or     al,0xfb
  4078df:	stc    
  4078e0:	cmp    ah,BYTE PTR [esi]
  4078e2:	sub    bh,dh
  4078e4:	mov    ah,BYTE PTR [edi]
  4078e6:	je     0x40793b
  4078e8:	call   0xe03882f
  4078ed:	adc    ebp,DWORD PTR [ebx]
  4078ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f0:	ret    0xce69
  4078f3:	or     DWORD PTR [ecx-0xfd83574],edx
  4078f9:	jo     0x4078ee
  4078fb:	sub    BYTE PTR [ecx],ah
  4078fd:	lock push 0xffffffe0
  407900:	xchg   ebx,eax
  407901:	fdiv   st(1),st
  407903:	add    eax,0xa7ab7052
  407908:	jl     0x407921
  40790a:	nop
  40790b:	les    ebx,FWORD PTR ds:0x141aa5c8
  407911:	mov    bh,dl
  407913:	and    DWORD PTR [ecx+0x53],edx
  407916:	es retf 
  407918:	cmp    ch,BYTE PTR [eax+eax*1-0x25]
  40791c:	fld    DWORD PTR [ebp+0x74fd38a6]
  407922:	jbe    0x4078ad
  407924:	leave  
  407925:	retf   
  407926:	dec    ebp
  407927:	xor    BYTE PTR [eax-0x2],bl
  40792a:	mov    al,ds:0x2d695720
  40792f:	inc    ebx
  407930:	adc    dl,BYTE PTR [ebx]
  407932:	mov    al,0xe7
  407934:	jne    0x407924
  407936:	aas    
  407937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407938:	inc    ebx
  407939:	add    BYTE PTR [eax+0x16167119],bl
  40793f:	enter  0x50e8,0xc2
  407943:	cmp    al,bh
  407945:	(bad)  
  407946:	fstp   QWORD PTR [ebx-0x1e796b11]
  40794c:	aas    
  40794d:	clc    
  40794e:	add    DWORD PTR [esp+eiz*2+0x12bcc6b5],esi
  407955:	idiv   ah
  407957:	shl    bl,1
  407959:	dec    DWORD PTR [esi-0x6e]
  40795c:	mov    ds:0xde346c2f,eax
  407961:	pop    edx
  407962:	test   BYTE PTR [ecx+0x32a0c709],0x6b
  407969:	cmp    BYTE PTR [ebx-0x41],0x63
  40796d:	sub    DWORD PTR [eax],0x5a
  407970:	test   al,0x1
  407972:	pushf  
  407973:	das    
  407974:	or     eax,0x270bcf16
  407979:	mov    dl,0xb6
  40797b:	xchg   DWORD PTR [ebp+0x25],ebp
  40797e:	mov    esi,0x5e58cfcb
  407983:	pop    eax
  407984:	pop    edx
  407985:	gs push 0xffffffce
  407988:	ss into 
  40798a:	(bad)
  40798d:	iret   
  40798e:	and    DWORD PTR [ebp+0x4d91f9ef],eax
  407994:	inc    edx
  407995:	ds mov dl,0x53
  407998:	fwait
  407999:	mov    ah,0x8b
  40799b:	mov    eax,ds:0xa04b5432
  4079a0:	sbb    DWORD PTR [ebp-0xe9ebe45],edi
  4079a6:	data16 fsubr DWORD PTR [edx]
  4079a9:	or     DWORD PTR [ebp-0x13f5d7cc],ebp
  4079af:	jmp    0x407995
  4079b1:	xchg   BYTE PTR [edx+0x66c3bb46],bl
  4079b7:	adc    DWORD PTR [edx+0x1698be07],esi
  4079bd:	enter  0xe9ea,0x16
  4079c1:	xor    al,0x7d
  4079c3:	test   bl,ah
  4079c5:	fsubr  QWORD PTR [ecx-0x471bf3eb]
  4079cb:	outs   dx,BYTE PTR ds:[esi]
  4079cc:	mov    ecx,0xdb9d9dbb
  4079d1:	jo     0x407a4d
  4079d3:	stos   DWORD PTR es:[edi],eax
  4079d4:	and    BYTE PTR [esi-0x22177ece],dl
  4079da:	inc    ebx
  4079db:	std    
  4079dc:	inc    esp
  4079dd:	(bad)  
  4079de:	push   esp
  4079df:	jne    0x407988
  4079e1:	daa    
  4079e2:	pop    edx
  4079e3:	fdivr  st,st(2)
  4079e5:	in     eax,0xd
  4079e7:	out    0x89,eax
  4079e9:	repz sub ebp,DWORD PTR [edi]
  4079ec:	adc    DWORD PTR [esi],edi
  4079ee:	xor    al,0xe1
  4079f0:	inc    esi
  4079f1:	or     ebp,eax
  4079f3:	push   ds
  4079f4:	lea    ebx,[ecx+0x61250be5]
  4079fa:	xchg   esi,eax
  4079fb:	or     dl,BYTE PTR fs:[esi-0xc90cbca]
  407a02:	pop    ecx
  407a03:	sub    DWORD PTR [ebx+0x382c0571],ebp
  407a09:	dec    ecx
  407a0a:	std    
  407a0b:	lds    ebp,FWORD PTR [ebx+ecx*4]
  407a0e:	or     eax,0x8051968f
  407a13:	js     0x407a79
  407a15:	sub    eax,0xc704f05
  407a1a:	shl    BYTE PTR [edi*4-0x661930ce],1
  407a21:	cmp    BYTE PTR [edx],cl
  407a23:	icebp  
  407a24:	and    dl,BYTE PTR [ecx]
  407a26:	jno    0x4079aa
  407a28:	xchg   esi,eax
  407a29:	(bad)  
  407a2b:	cmp    dl,BYTE PTR [ebp-0x534c6517]
  407a31:	or     eax,0x6c59b5a6
  407a36:	jp     0x407aa4
  407a38:	fsubrp st(1),st
  407a3a:	ret    
  407a3b:	xor    BYTE PTR [ebx+0x4f],bh
  407a3e:	adc    BYTE PTR [esp+ecx*1+0x1a],ch
  407a42:	pop    esi
  407a43:	dec    ebp
  407a44:	add    BYTE PTR [eax+0x57],bl
  407a47:	pop    ebx
  407a48:	outs   dx,DWORD PTR ds:[esi]
  407a49:	adc    BYTE PTR [eax-0x5f17f568],ah
  407a4f:	rol    BYTE PTR [ecx+esi*2+0x4],cl
  407a53:	mov    edx,0x153af8bb
  407a58:	add    DWORD PTR [edi],ecx
  407a5a:	mov    esp,0x8118da0
  407a5f:	mov    bl,BYTE PTR [esp+esi*8+0xf]
  407a63:	mul    BYTE PTR [eax+0x3d7421b2]
  407a69:	in     al,0x8c
  407a6b:	lahf   
  407a6c:	sbb    DWORD PTR [eax-0x5320e5e3],0x6
  407a73:	adc    eax,0x34732503
  407a78:	cli    
  407a79:	stos   BYTE PTR es:[edi],al
  407a7a:	cld    
  407a7b:	in     eax,dx
  407a7c:	(bad)  
  407a7e:	adc    ch,BYTE PTR [ebx-0x2a6cae3a]
  407a84:	jl     0x407af7
  407a86:	ds jle 0x407a2f
  407a89:	call   0xb8e7:0x31ff68e5
  407a90:	mov    fs,esp
  407a92:	test   eax,0x448c2b2c
  407a97:	in     eax,0xaa
  407a99:	xchg   ebx,eax
  407a9a:	pop    ss
  407a9b:	inc    esi
  407a9c:	sbb    eax,0xa2c897bb
  407aa1:	jb     0x407ab9
  407aa3:	pusha  
  407aa4:	cmc    
  407aa5:	add    DWORD PTR [edx-0x557cd463],0xa4c925c
  407aaf:	sar    BYTE PTR [edi+0x78],1
  407ab2:	int3   
  407ab3:	ja     0x407b20
  407ab5:	mov    ah,BYTE PTR [edi+ebx*1]
  407ab8:	je     0x407b1d
  407aba:	sub    eax,0x5a4e0d3
  407abf:	test   DWORD PTR [ebx],edi
  407ac1:	(bad)  
  407ac2:	int3   
  407ac3:	cmc    
  407ac4:	xor    ah,bl
  407ac6:	xchg   esp,eax
  407ac7:	retf   0x7419
  407aca:	push   cs
  407acb:	cdq    
  407acc:	daa    
  407acd:	mov    bl,BYTE PTR [ebx]
  407acf:	mov    dh,0x24
  407ad1:	les    ebp,FWORD PTR [eax-0x7a]
  407ad4:	push   0x9068bc98
  407ad9:	loop   0x407aa1
  407adb:	nop
  407adc:	dec    esi
  407add:	pop    ds
  407ade:	daa    
  407adf:	xor    al,0xe4
  407ae1:	push   cs
  407ae2:	les    esp,FWORD PTR [ecx+0x94f7949]
  407ae8:	adc    ah,dh
  407aea:	popa   
  407aeb:	cdq    
  407aec:	fcomp  DWORD PTR [ebx-0x42fd5eac]
  407af2:	add    DWORD PTR [ecx+0x4099babd],esi
  407af8:	cmp    BYTE PTR [ebp-0x7a],al
  407afb:	add    al,0x8b
  407afd:	and    eax,0x106bfa60
  407b02:	loop   0x407b4f
  407b04:	loope  0x407aaf
  407b06:	mov    ebp,0x46c41b58
  407b0b:	fwait
  407b0c:	ds clc 
  407b0e:	sbb    eax,0xb89d9a51
  407b13:	in     al,0x6e
  407b15:	aam    0x57
  407b17:	mov    ds:0xe2408ef0,eax
  407b1c:	push   cs
  407b1d:	add    al,0x93
  407b1f:	cmp    al,0xb7
  407b21:	loopne 0x407aa5
  407b23:	pop    ebx
  407b24:	dec    esi
  407b25:	jp     0x407ae5
  407b27:	ins    DWORD PTR es:[edi],dx
  407b28:	psrad  mm6,QWORD PTR [ebp-0x6e839fe7]
  407b2f:	xchg   ebx,eax
  407b30:	icebp  
  407b31:	jge    0x407b97
  407b33:	sbb    ah,cl
  407b35:	jmp    0xf9d4:0x3f520ba3
  407b3c:	(bad)  
  407b3d:	int    0xfe
  407b3f:	mov    ecx,0x320fc763
  407b44:	add    al,0xf8
  407b46:	dec    edi
  407b47:	call   0x7d52:0x2d994507
  407b4e:	and    dl,BYTE PTR [edi+0x7be072b9]
  407b54:	mov    esp,0xd839a582
  407b59:	rol    ebx,1
  407b5b:	das    
  407b5c:	inc    esp
  407b5d:	xchg   BYTE PTR [edi],bl
  407b5f:	xchg   dh,ch
  407b61:	dec    esi
  407b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b63:	cld    
  407b64:	arpl   WORD PTR [edx-0x37],dx
  407b67:	lods   eax,DWORD PTR ds:[esi]
  407b68:	pop    eax
  407b69:	ss sahf 
  407b6b:	mov    dh,0x0
  407b6d:	xchg   ecx,eax
  407b6e:	jecxz  0x407b43
  407b70:	mov    gs,esi
  407b72:	es int3 
  407b74:	adc    ch,ch
  407b76:	int    0x4
  407b78:	lock ret 0x7a75
  407b7c:	ja     0x407b9d
  407b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b7f:	add    BYTE PTR [edx-0x51600e99],bl
  407b85:	adc    al,0x62
  407b87:	mov    ds:0x1e72d403,al
  407b8c:	and    ah,bh
  407b8e:	mov    ds:0xba38f893,eax
  407b93:	adc    DWORD PTR [eax],edi
  407b95:	call   0x986:0x79ff8ac5
  407b9c:	les    edx,FWORD PTR [ebp+0x42]
  407b9f:	hlt    
  407ba0:	jmp    0x407b2f
  407ba2:	jmp    0x407c08
  407ba4:	adc    eax,DWORD PTR [edx-0x73]
  407ba7:	xchg   BYTE PTR [esi],ch
  407ba9:	(bad)  
  407baa:	sti    
  407bab:	xchg   DWORD PTR [eax+eax*1+0x2db2b68],edi
  407bb2:	dec    edx
  407bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb4:	xchg   BYTE PTR [edx-0x63],ch
  407bb7:	push   ecx
  407bb8:	add    ecx,ebp
  407bba:	adc    eax,0x3d459a3a
  407bbf:	jge    0x407b71
  407bc1:	ins    DWORD PTR es:[edi],dx
  407bc2:	int    0x89
  407bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bc5:	js     0x407c1e
  407bc7:	sbb    edi,DWORD PTR [esp+eiz*4]
  407bca:	stc    
  407bcb:	repnz into 
  407bcd:	or     DWORD PTR [edi+esi*8-0x5fcd2791],0x65
  407bd5:	(bad)  
  407bd6:	lock fisttp WORD PTR [ecx-0x68]
  407bda:	add    dh,0x55
  407bdd:	iret   
  407bde:	or     eax,0x6068fc5e
  407be3:	sub    esp,DWORD PTR [eax+0x23fa99]
  407be9:	test   al,0x5c
  407beb:	pop    esi
  407bec:	fucomip st,st(0)
  407bee:	aaa    
  407bef:	inc    ecx
  407bf0:	cdq    
  407bf1:	stos   BYTE PTR es:[edi],al
  407bf2:	xor    ebp,ecx
  407bf4:	cdq    
  407bf5:	dec    edi
  407bf6:	add    ebp,0xa41a94bb
  407bfc:	scas   eax,DWORD PTR es:[edi]
  407bfd:	ret    0xb74a
  407c00:	mov    bh,0x99
  407c02:	cmp    eax,0x85819397
  407c07:	mov    fs,esi
  407c09:	mov    ch,BYTE PTR [edi-0x47c720dc]
  407c0f:	int    0x65
  407c11:	or     eax,0xbbe2384f
  407c16:	mov    esi,esi
  407c18:	arpl   WORD PTR fs:[ebp+0x59],si
  407c1c:	ret    
  407c1d:	cmp    eax,0xa01e0ed9
  407c22:	pop    ecx
  407c23:	xchg   edi,eax
  407c24:	mov    esi,DWORD PTR [ecx-0xe]
  407c27:	cwde   
  407c28:	outs   dx,BYTE PTR ds:[esi]
  407c29:	and    DWORD PTR [ecx+eax*1+0x54],0x879da3be
  407c31:	imul   esi,edi,0xd7c19ff0
  407c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c38:	xchg   edi,eax
  407c39:	(bad)  
  407c3a:	add    al,0xd3
  407c3c:	adc    cl,BYTE PTR [ecx]
  407c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c3f:	and    DWORD PTR [eax+edx*4-0x3a],0xab1505a2
  407c47:	jae    0x407ca8
  407c49:	jns    0x407c8b
  407c4b:	loopne 0x407c51
  407c4d:	xchg   BYTE PTR [ecx-0x74],dl
  407c50:	inc    ebx
  407c51:	(bad)  
  407c52:	icebp  
  407c53:	or     edx,0x869c6c10
  407c59:	cmp    eax,0x57f3aa97
  407c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5f:	in     al,0x90
  407c61:	cmp    al,0x84
  407c63:	scas   al,BYTE PTR es:[edi]
  407c64:	pmulhuw mm7,QWORD PTR [ebx-0x73]
  407c68:	int    0x56
  407c6a:	inc    esi
  407c6b:	push   ebx
  407c6c:	loopne 0x407cbe
  407c6e:	add    ebp,DWORD PTR [ebx]
  407c70:	adc    BYTE PTR [ecx-0x2966540f],dh
  407c76:	add    al,0xf4
  407c78:	hlt    
  407c79:	neg    edi
  407c7b:	mov    ebp,0xb7c6b7a5
  407c80:	or     al,0xd8
  407c82:	lods   eax,DWORD PTR ds:[esi]
  407c83:	fist   DWORD PTR [ebp-0x69134b86]
  407c89:	add    eax,0x76ddaab9
  407c8e:	sbb    edx,edi
  407c90:	cmp    al,0x61
  407c92:	mov    ebx,0xe3f7ea3a
  407c97:	cli    
  407c98:	rol    bl,1
  407c9a:	cwde   
  407c9b:	and    BYTE PTR [esi-0x10],0xe4
  407c9f:	and    al,0x99
  407ca1:	cmp    bl,BYTE PTR fs:[ebp+0x76]
  407ca5:	sub    BYTE PTR [edx-0x1d],ch
  407ca8:	push   edx
  407ca9:	and    al,0x95
  407cab:	dec    ebp
  407cac:	lahf   
  407cad:	push   edx
  407cae:	sbb    DWORD PTR [eax+eiz*2+0x2f],0xffffffbb
  407cb3:	out    0xfc,eax
  407cb5:	aad    0xa2
  407cb7:	jecxz  0x407d0c
  407cb9:	je     0x407cbd
  407cbb:	ficom  DWORD PTR ss:[edi-0x65]
  407cbf:	imul   edx,DWORD PTR ds:0xb0347d10,0xffffffff
  407cc6:	cmp    al,0xf3
  407cc8:	dec    esi
  407cc9:	sub    BYTE PTR [ecx],al
  407ccb:	push   ds
  407ccc:	fld    QWORD PTR [edi-0x19]
  407ccf:	cmp    bl,BYTE PTR [ebp+0x7d]
  407cd2:	adc    edi,esi
  407cd4:	mov    bl,bh
  407cd6:	mov    cl,0x91
  407cd8:	in     eax,dx
  407cd9:	inc    edi
  407cda:	fbld   TBYTE PTR [esi]
  407cdc:	inc    esp
  407cdd:	sahf   
  407cde:	mov    cl,0x9
  407ce0:	aaa    
  407ce1:	xchg   ebx,eax
  407ce2:	je     0x407ced
  407ce4:	jmp    0x83184315
  407ce9:	repz ja 0x407c80
  407cec:	js     0x407caa
  407cee:	das    
  407cef:	jmp    0x407cb5
  407cf1:	sti    
  407cf2:	sar    DWORD PTR [ebx+esi*2-0x70],cl
  407cf6:	dec    esp
  407cf7:	in     al,dx
  407cf8:	add    eax,0xf0859502
  407cfd:	pop    ss
  407cfe:	add    edi,ebp
  407d00:	sub    ecx,DWORD PTR [eax+0x5ca13042]
  407d06:	jle    0x407cb0
  407d08:	icebp  
  407d09:	push   ds
  407d0a:	inc    eax
  407d0b:	data16 sbb al,0x52
  407d0e:	cmp    eax,0xd38d0d2
  407d13:	mov    esp,0xb04aea5
  407d18:	call   0xb762:0x68b81c14
  407d1f:	or     edx,DWORD PTR [ecx-0x59]
  407d22:	adc    al,0xdb
  407d24:	jecxz  0x407cc1
  407d26:	pop    ss
  407d27:	mov    edx,0x625b5e5b
  407d2c:	sbb    eax,0x8fbdf616
  407d31:	mov    bh,BYTE PTR [esi-0x6cb88f69]
  407d37:	xchg   ebx,eax
  407d38:	xchg   esp,eax
  407d39:	pop    esi
  407d3a:	dec    ebx
  407d3b:	push   es
  407d3c:	dec    ecx
  407d3d:	add    eax,0xc07246b7
  407d42:	sbb    al,0x65
  407d44:	ror    BYTE PTR es:[esi-0x52],0x7
  407d49:	or     eax,0x1dcee332
  407d4e:	xchg   ebx,eax
  407d4f:	aas    
  407d50:	mov    eax,DWORD PTR [ecx+eiz*4-0x53b749df]
  407d57:	and    DWORD PTR [ecx],edi
  407d59:	sbb    al,0xe9
  407d5b:	mov    ecx,0xe380a201
  407d60:	test   BYTE PTR [eax],0xd1
  407d63:	cdq    
  407d64:	add    al,0xb0
  407d66:	dec    ebx
  407d67:	adc    DWORD PTR ds:0xa3fc9f73,ecx
  407d6d:	es dec edi
  407d6f:	pushf  
  407d70:	cmp    ecx,DWORD PTR [edx-0x37]
  407d73:	mov    esi,0xa025db44
  407d78:	(bad)  
  407d79:	xchg   ebx,eax
  407d7a:	cmp    al,0x3a
  407d7c:	sub    eax,0x6915af0f
  407d81:	jle    0x407dc6
  407d83:	cdq    
  407d84:	ins    DWORD PTR es:[edi],dx
  407d85:	cld    
  407d86:	and    al,0xae
  407d88:	push   ebx
  407d89:	outs   dx,BYTE PTR ds:[esi]
  407d8a:	jg     0x407d44
  407d8c:	push   ecx
  407d8d:	pop    ebx
  407d8e:	xchg   esp,eax
  407d8f:	sbb    BYTE PTR [ebx+edi*2],0xc3
  407d93:	(bad)  
  407d94:	into   
  407d95:	push   0x3775c956
  407d9a:	inc    ebx
  407d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d9c:	stc    
  407d9d:	stos   BYTE PTR es:[edi],al
  407d9e:	lds    edi,FWORD PTR [ecx]
  407da0:	xchg   esp,eax
  407da1:	aaa    
  407da2:	imul   ecx,DWORD PTR [edi+eax*2+0x5f51f5f4],0xffffffb9
  407daa:	idiv   DWORD PTR [ebp+eax*2-0x6d13efc4]
  407db1:	xor    al,0x23
  407db3:	pop    esi
  407db4:	fld    TBYTE PTR [esi-0x4dbf26e9]
  407dba:	lock hlt 
  407dbc:	add    dl,al
  407dbe:	std    
  407dbf:	nop
  407dc0:	scas   eax,DWORD PTR es:[edi]
  407dc1:	scas   eax,DWORD PTR es:[edi]
  407dc2:	or     al,BYTE PTR [ebx-0x6f11199c]
  407dc8:	jmp    0x407e46
  407dca:	repnz pop esp
  407dcc:	jmp    0x407dfd
  407dce:	in     al,0xc
  407dd0:	(bad)  
  407dd1:	jno    0x407db8
  407dd3:	test   al,0x24
  407dd5:	push   ebx
  407dd6:	or     dl,0x60
  407dd9:	cmp    BYTE PTR [eax],bh
  407ddb:	loopne 0x407d9a
  407ddd:	or     eax,0x166af250
  407de2:	or     al,BYTE PTR [ebx+0x31]
  407de5:	dec    ebx
  407de6:	mov    dh,0xb9
  407de8:	(bad)  
  407de9:	mov    dh,0xb8
  407deb:	mov    esp,0x696aa955
  407df0:	call   0x106564f8
  407df5:	nop
  407df6:	mov    edi,0x8e3ad688
  407dfb:	xor    al,0x62
  407dfd:	addr16 out dx,ax
  407e00:	test   eax,0x4746f74a
  407e05:	xor    eax,0x8a3297bb
  407e0a:	dec    ecx
  407e0b:	xchg   edx,eax
  407e0c:	jmp    0x407da1
  407e0e:	test   dh,bh
  407e10:	jmp    0xf50ebaea
  407e15:	and    dl,dl
  407e17:	scas   eax,DWORD PTR es:[edi]
  407e18:	jbe    0x407e24
  407e1a:	ret    
  407e1b:	aaa    
  407e1c:	xchg   esp,eax
  407e1d:	or     DWORD PTR [edi+0x626b45f6],ebp
  407e23:	lods   al,BYTE PTR ds:[esi]
  407e24:	lods   al,BYTE PTR ds:[esi]
  407e25:	out    dx,al
  407e26:	mov    ds:0x76044f6c,eax
  407e2b:	mov    edi,0xd398e1cb
  407e30:	push   cs
  407e31:	aaa    
  407e32:	imul   ebp,ebx,0x5a7564e5
  407e38:	push   0xffffff99
  407e3a:	mov    dl,0xb0
  407e3c:	jbe    0x407dfe
  407e3e:	push   eax
  407e3f:	adc    ch,BYTE PTR [ebp+0x1a87377]
  407e45:	push   edx
  407e46:	cli    
  407e47:	and    eax,0x478bf6ef
  407e4c:	(bad)  
  407e4d:	lds    esp,FWORD PTR [ecx]
  407e4f:	sub    edx,eax
  407e51:	cdq    
  407e52:	or     edi,DWORD PTR [ebp-0x2a109e23]
  407e58:	push   ecx
  407e59:	and    BYTE PTR [eax],cl
  407e5b:	lock jl 0x407e00
  407e5e:	outs   dx,BYTE PTR ds:[esi]
  407e5f:	js     0x407e37
  407e61:	push   esp
  407e62:	cwde   
  407e63:	pop    ss
  407e64:	out    dx,al
  407e65:	popf   
  407e66:	xchg   edi,eax
  407e67:	cmp    edi,esp
  407e69:	mov    DWORD PTR [ebp-0x1d0970d5],edx
  407e6f:	pop    ss
  407e70:	ret    
  407e71:	dec    ecx
  407e72:	imul   DWORD PTR [ebx-0x1cd530b4]
  407e78:	rol    ebx,0x6
  407e7b:	jmp    0x407ecb
  407e7d:	sbb    BYTE PTR [eax+0x7a],bh
  407e80:	mov    ah,0x8e
  407e82:	mov    DWORD PTR [ecx+0x520282c4],esi
  407e88:	icebp  
  407e89:	mov    ah,cl
  407e8b:	dec    BYTE PTR [edx-0xa]
  407e8e:	xchg   ecx,eax
  407e8f:	sub    BYTE PTR [eax],bh
  407e91:	das    
  407e92:	jg     0x407eff
  407e94:	mov    ch,0xe2
  407e96:	retf   0x1479
  407e99:	fdivr  DWORD PTR [eax]
  407e9b:	mov    bl,0xfb
  407e9d:	adc    al,0x81
  407e9f:	mov    edx,0x59b102e3
  407ea4:	out    0x12,al
  407ea6:	push   es
  407ea7:	jle    0x407e9a
  407ea9:	stos   DWORD PTR es:[edi],eax
  407eaa:	ret    
  407eab:	ins    BYTE PTR es:[edi],dx
  407eac:	repz retf 0x2572
  407eb0:	dec    ebx
  407eb1:	(bad)  
  407eb2:	pushf  
  407eb3:	add    bh,BYTE PTR [edi]
  407eb5:	dec    ecx
  407eb6:	into   
  407eb7:	imul   esp,DWORD PTR [eax+edx*1+0x35469c5b],0x1f
  407ebf:	jle    0x407ee6
  407ec1:	sub    esi,DWORD PTR [edi]
  407ec3:	leave  
  407ec4:	add    ebx,DWORD PTR [edi]
  407ec6:	and    eax,0x1ead5623
  407ecb:	fistp  QWORD PTR [ebx-0x12]
  407ece:	(bad)  
  407ecf:	adc    eax,0x60e4754b
  407ed4:	enter  0x29d2,0xc2
  407ed8:	retf   
  407ed9:	(bad)  
  407eda:	stos   DWORD PTR es:[edi],eax
  407edb:	and    BYTE PTR ss:[esi-0x51],bh
  407edf:	xchg   edx,eax
  407ee0:	lahf   
  407ee1:	fdiv   st,st(1)
  407ee3:	in     eax,0x11
  407ee5:	mov    esi,0x90da7efb
  407eea:	mov    eax,ds:0xdf551724
  407eef:	fwait
  407ef0:	(bad)  
  407ef1:	(bad)  
  407ef3:	sar    ebp,1
  407ef5:	mov    ecx,0xa723726c
  407efa:	push   cs
  407efb:	repz dec esp
  407efd:	jl     0x407f14
  407eff:	inc    edx
  407f00:	daa    
  407f01:	fild   DWORD PTR [esi-0xdbdb54]
  407f07:	adc    eax,0xc552c036
  407f0c:	nop
  407f0d:	(bad)  
  407f0e:	mov    esp,esi
  407f10:	int    0x7c
  407f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f13:	js     0x407eee
  407f15:	clc    
  407f16:	xchg   eax,esi
  407f18:	lea    ebp,[edi]
  407f1a:	cmc    
  407f1b:	cli    
  407f1c:	clc    
  407f1d:	add    al,0x1d
  407f1f:	add    al,0xd7
  407f21:	xchg   ecx,eax
  407f22:	jb     0x407f1e
  407f24:	ja     0x407f2e
  407f26:	ja     0x407f18
  407f28:	sub    al,0x19
  407f2a:	psubsb mm2,QWORD PTR [edx]
  407f2d:	fwait
  407f2e:	cmp    dl,BYTE PTR [esi-0x3b0d6e09]
  407f34:	aad    0x88
  407f36:	shl    DWORD PTR [eax+0x2d],cl
  407f39:	enter  0xd9d7,0x33
  407f3d:	add    dh,BYTE PTR [edi-0x28]
  407f40:	out    0x4d,al
  407f42:	jb     0x407f44
  407f44:	fistp  QWORD PTR [ebx-0x51]
  407f47:	or     eax,0xeb9d03fd
  407f4c:	outs   dx,DWORD PTR ds:[esi]
  407f4d:	scas   al,BYTE PTR es:[edi]
  407f4e:	ins    BYTE PTR es:[edi],dx
  407f4f:	xchg   DWORD PTR [edi-0x2d],edx
  407f52:	sahf   
  407f53:	xchg   esp,eax
  407f54:	sbb    BYTE PTR [ebx],0x15
  407f57:	fst    DWORD PTR [eax]
  407f59:	rcl    dl,0x1b
  407f5c:	jle    0x407f32
  407f5e:	fisub  DWORD PTR [esi-0x71dccf2d]
  407f64:	(bad)  
  407f65:	jb     0x407f3d
  407f67:	mov    ebp,ecx
  407f69:	cmp    edi,DWORD PTR [edx-0x29de7ff2]
  407f6f:	pusha  
  407f70:	mov    esi,0x50a36cea
  407f75:	inc    ebx
  407f76:	mov    bh,0x72
  407f78:	mov    ebp,0x6d62edb3
  407f7d:	fs dec edx
  407f7f:	xor    ah,dl
  407f81:	loope  0x407f91
  407f83:	and    ecx,eax
  407f85:	lahf   
  407f86:	lahf   
  407f87:	scas   eax,DWORD PTR es:[edi]
  407f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f89:	and    al,0x2f
  407f8b:	cmp    al,0xde
  407f8d:	inc    ebp
  407f8e:	sub    edx,DWORD PTR [esp+edi*2-0x2b980511]
  407f95:	test   al,0x6a
  407f97:	mov    WORD PTR [edx-0x5681c7df],cs
  407f9d:	aam    0x2
  407f9f:	pop    ds
  407fa0:	adc    al,0x2f
  407fa2:	das    
  407fa3:	adc    DWORD PTR [esi+esi*1],esi
  407fa6:	and    ebp,edi
  407fa8:	lods   eax,DWORD PTR ds:[esi]
  407fa9:	xchg   ebp,eax
  407faa:	mov    al,0x20
  407fac:	gs je  0x407fe5
  407faf:	cld    
  407fb0:	adc    al,0x83
  407fb2:	aad    0xab
  407fb4:	pop    esp
  407fb5:	fsub   DWORD PTR [edi+0x2b]
  407fb8:	mov    cl,0xf5
  407fba:	outs   dx,DWORD PTR ds:[esi]
  407fbb:	mov    ds:0x3b561ae0,al
  407fc0:	sar    BYTE PTR [ebx+0x11],cl
  407fc3:	jae    0x407fc9
  407fc5:	mov    ebp,0x46772e53
  407fca:	or     eax,0xc297326f
  407fcf:	cs dec esi
  407fd1:	or     DWORD PTR [edx],ecx
  407fd3:	push   ecx
  407fd4:	add    al,0x9
  407fd6:	mov    WORD PTR [ebp-0x6da1a422],gs
  407fdc:	clc    
  407fdd:	sbb    DWORD PTR gs:[esi-0x7b8d4c30],ebp
  407fe4:	rcl    BYTE PTR [ebx],1
  407fe6:	inc    esi
  407fe7:	and    bl,BYTE PTR ds:0xdcb575ab
  407fed:	jle    0x407f85
  407fef:	jbe    0x407ffe
  407ff1:	jns    0x408061
  407ff3:	xor    edi,0x64f41e5f
  407ff9:	sahf   
  407ffa:	and    eax,0x4c237928
  407fff:	outs   dx,DWORD PTR ds:[esi]
  408000:	in     eax,dx
  408001:	mov    edx,0x2f29e45c
  408006:	push   0xdadc5552
  40800b:	or     edx,ebp
  40800d:	or     ch,BYTE PTR [ebx]
  40800f:	and    edx,ebx
  408011:	pop    es
  408012:	dec    ecx
  408013:	pop    ebx
  408014:	stos   DWORD PTR es:[edi],eax
  408015:	lds    ebx,FWORD PTR [ebx-0xa]
  408018:	xchg   al,cl
  40801a:	es cwde 
  40801c:	xor    DWORD PTR [ebp-0x19c091ae],ebp
  408022:	push   edi
  408023:	adc    esi,DWORD PTR [edx+0x4c5a8e01]
  408029:	sbb    cl,BYTE PTR [ecx]
  40802b:	xor    al,0x28
  40802d:	in     al,dx
  40802e:	push   edi
  40802f:	rcr    DWORD PTR [eax],cl
  408031:	dec    eax
  408032:	xchg   ecx,eax
  408033:	es jecxz 0x408084
  408036:	repz inc ebp
  408038:	mov    edx,0x69e47dd
  40803d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40803e:	pop    ss
  40803f:	sti    
  408040:	les    edi,FWORD PTR [esi+0x1b]
  408043:	std    
  408044:	push   ebx
  408045:	cmc    
  408046:	icebp  
  408047:	loop   0x408055
  408049:	ficom  WORD PTR ds:0xfe1d1b33
  40804f:	fimul  WORD PTR [ecx+ebx*2]
  408052:	xor    eax,DWORD PTR [edi]
  408054:	or     DWORD PTR [eax],esp
  408056:	mov    edx,0x710e321a
  40805b:	fs je  0x4080ac
  40805e:	mov    eax,ds:0x9c182b17
  408063:	and    al,0x56
  408065:	add    bl,cl
  408067:	dec    esp
  408068:	pop    es
  408069:	and    bl,dl
  40806b:	(bad)  
  40806c:	outs   dx,BYTE PTR ds:[esi]
  40806d:	push   ecx
  40806e:	ins    BYTE PTR es:[edi],dx
  40806f:	push   ebx
  408070:	xor    DWORD PTR [ebx+0x1f1b6142],ebx
  408076:	mov    ebx,0xa02251ad
  40807b:	or     edi,DWORD PTR [ecx+0x13cd42be]
  408081:	dec    esi
  408082:	push   esp
  408083:	sub    al,0x52
  408085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408086:	cmp    al,0x3c
  408088:	and    BYTE PTR [esi],cl
  40808a:	pop    edi
  40808b:	jle    0x40803e
  40808d:	sar    DWORD PTR [ebx],cl
  40808f:	xor    ecx,ecx
  408091:	(bad)  
  408092:	out    dx,al
  408093:	lahf   
  408094:	arpl   sp,bp
  408096:	mov    dh,0x48
  408098:	mul    BYTE PTR [eax]
  40809a:	jo     0x4080cf
  40809c:	pop    ebx
  40809d:	sub    edi,ebp
  40809f:	xor    DWORD PTR [esi+0x1f81de1e],edi
  4080a5:	dec    ecx
  4080a6:	push   es
  4080a7:	dec    bx
  4080a9:	mov    DWORD PTR es:[eax+0x32fdb9ed],eax
  4080b0:	enter  0xb73c,0x3b
  4080b4:	sub    DWORD PTR [esi+0x12dea569],esi
  4080ba:	ss and eax,0x10cdef5d
  4080c0:	ins    DWORD PTR es:[edi],dx
  4080c1:	xchg   esp,eax
  4080c2:	mov    al,ds:0x89b6805b
  4080c7:	pop    esi
  4080c8:	fstp   DWORD PTR [ebx]
  4080ca:	xor    cl,BYTE PTR [edx+0xff58540]
  4080d0:	jne    0x4080e5
  4080d2:	test   BYTE PTR ds:0xd3c87429,ch
  4080d8:	push   edx
  4080d9:	mov    ebx,0xb5bf4ad4
  4080de:	and    cl,al
  4080e0:	mov    ah,0x2a
  4080e2:	les    eax,FWORD PTR [edx-0x8]
  4080e5:	scas   al,BYTE PTR es:[edi]
  4080e6:	xchg   esp,eax
  4080e7:	sbb    al,0xd0
  4080e9:	pusha  
  4080ea:	scas   eax,DWORD PTR es:[edi]
  4080eb:	pop    es
  4080ec:	stc    
  4080ed:	iret   
  4080ee:	push   edi
  4080ef:	aad    0xd0
  4080f1:	mov    BYTE PTR [bp+di-0x31],bl
  4080f5:	mov    eax,ds:0xebb8a8a1
  4080fa:	cmp    eax,0x2db431f
  4080ff:	retf   
  408100:	jmp    0xf922:0xbe0b184d
  408107:	sbb    DWORD PTR [ebx-0x5baef15e],esi
  40810d:	jecxz  0x4080d7
  40810f:	dec    edi
  408110:	iret   
  408111:	mov    al,ds:0x17cade67
  408116:	(bad)  
  408117:	mov    ecx,0x1afaff0f
  40811c:	cmp    BYTE PTR [ebx+esi*8-0x66829288],dl
  408123:	or     al,0xce
  408125:	fst    QWORD PTR [edx]
  408127:	sar    BYTE PTR [ebx-0x367fbbbe],1
  40812d:	xchg   edx,eax
  40812e:	jmp    0x1451742d
  408133:	out    0x31,eax
  408135:	test   al,0xe0
  408137:	imul   esp,DWORD PTR [edx],0xab2806ef
  40813d:	(bad)  
  40813e:	push   ebx
  40813f:	adc    esp,DWORD PTR [esi]
  408141:	inc    edx
  408142:	out    dx,al
  408143:	cld    
  408144:	jb     0x4080f1
  408146:	and    bl,ch
  408148:	push   esi
  408149:	adc    al,0xe8
  40814b:	imul   ebx,DWORD PTR [ebp-0x63],0xb3c032ca
  408152:	or     DWORD PTR [ebx-0x179c40a4],esp
  408158:	cmc    
  408159:	dec    eax
  40815a:	loop   0x4080f8
  40815c:	std    
  40815d:	aam    0xb6
  40815f:	xchg   esi,eax
  408160:	scas   al,BYTE PTR es:[edi]
  408161:	pop    es
  408162:	(bad)  
  408163:	aas    
  408164:	mov    al,0x60
  408166:	ret    
  408167:	xchg   DWORD PTR [edi+0x68],esi
  40816a:	jecxz  0x408192
  40816c:	jmp    0x8904:0xa0ebd375
  408173:	rcr    BYTE PTR [ebp+0x7c],0xe9
  408177:	adc    eax,0xd2aa5c89
  40817c:	mov    eax,DWORD PTR [edx+0xa]
  40817f:	test   ah,ah
  408181:	jmp    0x2908:0xb8901e23
  408188:	xchg   ecx,eax
  408189:	aam    0x28
  40818b:	ret    0x5fb7
  40818e:	adc    DWORD PTR [ebx+0x74],ebp
  408191:	add    ebp,DWORD PTR [ebp+0x6eee6c12]
  408197:	push   ebx
  408198:	and    esp,DWORD PTR [edx-0x73758b9]
  40819e:	cli    
  40819f:	sub    eax,0x1fc40b3e
  4081a4:	int    0x9d
  4081a6:	xor    dl,cl
  4081a8:	cld    
  4081a9:	neg    BYTE PTR [ecx]
  4081ab:	lods   al,BYTE PTR ds:[esi]
  4081ac:	stos   DWORD PTR es:[edi],eax
  4081ad:	jl     0x408174
  4081af:	pusha  
  4081b0:	jg     0x40820d
  4081b2:	ret    
  4081b3:	xchg   esi,eax
  4081b4:	pop    esi
  4081b5:	call   DWORD PTR [edi-0x51]
  4081b8:	xchg   edi,eax
  4081b9:	idiv   DWORD PTR [ecx]
  4081bb:	fbstp  TBYTE PTR [edi-0x60b1e141]
  4081c1:	hlt    
  4081c2:	push   edi
  4081c3:	add    DWORD PTR [ebx-0x35673c4],ecx
  4081c9:	sahf   
  4081ca:	mov    ch,0xab
  4081cc:	ret    
  4081cd:	or     eax,0xb04bcac0
  4081d2:	pop    ebx
  4081d3:	popa   
  4081d4:	repz or DWORD PTR [ebp-0x4da029a0],0x57
  4081dc:	(bad)  
  4081de:	outs   dx,BYTE PTR ds:[esi]
  4081df:	(bad)  
  4081e0:	push   esi
  4081e1:	xor    ebx,esi
  4081e3:	pop    esp
  4081e4:	or     esi,DWORD PTR [esi+0x3f]
  4081e7:	mov    eax,ds:0x1dec7ec1
  4081ec:	jle    0x408234
  4081ee:	test   BYTE PTR [esp+ebx*8+0x70],bl
  4081f2:	std    
  4081f3:	scas   eax,DWORD PTR es:[edi]
  4081f4:	or     BYTE PTR [esi],cl
  4081f6:	adc    al,0xac
  4081f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f9:	jns    0x408191
  4081fb:	imul   ecx,DWORD PTR cs:[esi+0x18],0x652dbd5
  408203:	mov    al,ds:0xab6fb264
  408208:	mov    bl,0x82
  40820a:	mov    ecx,0x1ef2428f
  40820f:	inc    edx
  408210:	cmp    edx,esp
  408212:	aam    0x8d
  408214:	addr16 sub al,0xeb
  408217:	inc    esi
  408218:	add    edi,DWORD PTR [esi+0x78]
  40821b:	xchg   DWORD PTR [esi-0x69],eax
  40821e:	jmp    0xad3b20d9
  408223:	jmp    0x36fb:0xa1681ca7
  40822a:	dec    edx
  40822b:	dec    edx
  40822c:	xchg   ecx,eax
  40822d:	mov    esp,DWORD PTR [edi]
  40822f:	xchg   ebx,eax
  408230:	add    BYTE PTR ss:[esi+0x2472c9d9],bl
  408237:	adc    eax,0x62071a20
  40823c:	mov    ecx,0xd253f124
  408241:	mov    esi,0x2130b6bd
  408246:	add    BYTE PTR [eax],0xb4
  408249:	test   al,0x1e
  40824b:	jno    0x4082be
  40824d:	sti    
  40824e:	(bad)  
  40824f:	in     eax,0x25
  408251:	jae    0x408239
  408253:	inc    edx
  408254:	nop
  408255:	jnp    0x40829a
  408257:	mov    ch,0xf
  408259:	jnp    0x408245
  40825b:	mov    ebx,0x9b70c6a1
  408260:	or     eax,0xd345a281
  408265:	aas    
  408266:	jae    0x408296
  408268:	ins    BYTE PTR es:[edi],dx
  408269:	inc    ecx
  40826a:	mov    ebx,0xb3072ea0
  40826f:	outs   dx,BYTE PTR ds:[esi]
  408270:	fisttp DWORD PTR ds:0xdeab21f1
  408276:	in     al,0x74
  408278:	icebp  
  408279:	mov    ds:0x3fc0767b,eax
  40827e:	push   edx
  40827f:	dec    ebx
  408280:	xchg   DWORD PTR [edi],edi
  408282:	xchg   esp,eax
  408283:	dec    eax
  408284:	rcl    DWORD PTR [ebx+0x52291b6e],1
  40828a:	pop    esp
  40828b:	dec    esp
  40828c:	call   0xdc74:0x72afea92
  408293:	pushf  
  408294:	int3   
  408295:	cmp    DWORD PTR [ebx],esi
  408297:	xor    BYTE PTR [eax+0x6cc9c037],0xe0
  40829e:	rol    BYTE PTR [ebx],cl
  4082a0:	(bad)  [esi-0x31]
  4082a3:	(bad)  
  4082a5:	fs mov dh,0xb1
  4082a8:	retf   0x5cec
  4082ab:	fimul  DWORD PTR [ecx+0x22]
  4082ae:	jb     0x408289
  4082b0:	mov    al,0xd9
  4082b2:	in     al,0xec
  4082b4:	scas   eax,DWORD PTR es:[edi]
  4082b5:	aam    0x15
  4082b7:	jmp    0x1020922e
  4082bc:	inc    esp
  4082bd:	arpl   WORD PTR [esi+0x44],bx
  4082c0:	ficomp DWORD PTR [edx+eax*2]
  4082c3:	mov    ebx,0xdf5d2f4d
  4082c8:	xchg   ecx,eax
  4082c9:	in     eax,0x53
  4082cb:	or     BYTE PTR [ecx-0x64549bc5],bl
  4082d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d2:	jb     0x408343
  4082d4:	mov    bh,0x26
  4082d6:	and    eax,0x39e3f622
  4082db:	mov    esp,0x5d3c1837
  4082e0:	ins    BYTE PTR es:[edi],dx
  4082e1:	mov    al,ds:0x876a5796
  4082e6:	pop    es
  4082e7:	sub    esp,DWORD PTR [edi+0x158c5622]
  4082ed:	jnp    0x408278
  4082ef:	mov    dh,0x74
  4082f1:	adc    ch,bl
  4082f3:	ja     0x408321
  4082f5:	into   
  4082f6:	out    0xc4,al
  4082f8:	test   eax,0xd018920d
  4082fd:	mov    edi,0x987d3b58
  408302:	fdiv   DWORD PTR [esi-0x40136540]
  408308:	mov    eax,0xff41fa96
  40830d:	xchg   esi,eax
  40830e:	dec    ecx
  40830f:	icebp  
  408310:	jmp    0xb4bf:0x75b70769
  408317:	out    0x2b,eax
  408319:	push   ebx
  40831a:	mov    WORD PTR [ecx],cs
  40831c:	rcr    DWORD PTR [edx+ecx*1-0x7b],0xe8
  408321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408322:	psubw  mm1,QWORD PTR [esi+edx*1-0x7a7ba894]
  40832a:	cmp    eax,0x6e1a43be
  40832f:	mov    dl,BYTE PTR [ebp-0x272b72c9]
  408335:	add    esp,DWORD PTR [eax-0x40]
  408338:	mov    edi,DWORD PTR [eax+0x2e]
  40833b:	(bad)  
  40833c:	mov    WORD PTR [edx+0x1c],gs
  40833f:	in     eax,0xae
  408341:	out    0x52,eax
  408343:	jo     0x4083a7
  408345:	mov    ecx,0xd61d2745
  40834a:	mov    ah,BYTE PTR [eax+esi*1-0x959d2bf]
  408351:	add    eax,0xa21c8603
  408356:	inc    esp
  408357:	ror    BYTE PTR [esi+0x68589167],0xde
  40835e:	jmp    0x40832d
  408360:	pop    ds
  408361:	and    edi,edx
  408363:	cmp    eax,0x9f4a1a41
  408368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408369:	jno    0x4083c7
  40836b:	cmp    eax,0x7043c310
  408370:	xchg   esp,eax
  408371:	adc    eax,0x2d800b52
  408376:	jno    0x4083b7
  408378:	push   cs
  408379:	ret    0xb83b
  40837c:	xor    al,0x8
  40837e:	cmp    DWORD PTR [ecx+0xa97c13f],edx
  408384:	nop
  408385:	int3   
  408386:	scas   eax,DWORD PTR es:[edi]
  408387:	jo     0x40839a
  408389:	jo     0x40831d
  40838b:	dec    DWORD PTR [edi+0x6c]
  40838e:	idiv   BYTE PTR [ebp-0x69de8dfd]
  408394:	push   ecx
  408395:	dec    esi
  408396:	jns    0x40834e
  408398:	and    eax,0x696d7a27
  40839d:	jg     0x40832f
  40839f:	mov    ch,BYTE PTR [ebx+0x27f781db]
  4083a5:	push   edi
  4083a6:	push   ebx
  4083a7:	adc    esp,0x34acbf75
  4083ad:	mov    dl,0x19
  4083af:	push   0xffffffcb
  4083b1:	or     DWORD PTR [esi+0x8],edi
  4083b4:	loope  0x40833a
  4083b6:	gs jae 0x4083f9
  4083b9:	repz push es
  4083bb:	iret   
  4083bc:	jecxz  0x4083fd
  4083be:	mov    edi,0xb2e23362
  4083c3:	(bad)
  4083c6:	std    
  4083c7:	stos   BYTE PTR es:[edi],al
  4083c8:	pop    ebp
  4083c9:	fs pop es
  4083cb:	mov    ds:0x3bf6c2db,al
  4083d0:	test   eax,0xc76d15f9
  4083d5:	cwde   
  4083d6:	mov    esi,0xae07c806
  4083db:	sbb    BYTE PTR [edi+0x41],bl
  4083de:	mov    ecx,DWORD PTR [ebx]
  4083e0:	jo     0x408364
  4083e2:	ins    DWORD PTR es:[edi],dx
  4083e3:	mov    BYTE PTR [edx],bl
  4083e5:	shl    BYTE PTR [edi-0x4d017b8a],0x81
  4083ec:	xchg   edx,eax
  4083ed:	neg    DWORD PTR ds:[ecx+edi*8+0x46475c23]
  4083f5:	xchg   DWORD PTR [ecx+ecx*8-0x27],ebp
  4083f9:	les    esp,FWORD PTR [edx+0x33]
  4083fc:	mov    WORD PTR [esi+eiz*8-0x1b35d86d],cs
  408403:	push   es
  408404:	jg     0x408393
  408406:	sbb    al,0x98
  408408:	pop    ds
  408409:	les    ebx,FWORD PTR [ebp+0x619ca766]
  40840f:	lods   al,BYTE PTR ds:[esi]
  408410:	inc    esp
  408411:	popf   
  408412:	jge    0x408463
  408414:	stos   BYTE PTR es:[edi],al
  408415:	add    al,0xd3
  408417:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408419:	dec    esi
  40841a:	xchg   ebx,eax
  40841b:	pusha  
  40841c:	imul   edx,DWORD PTR [ebp+ebp*2-0x56e4d9e3],0xffffffba
  408424:	lahf   
  408425:	sbb    al,0x53
  408427:	fidiv  DWORD PTR [edi-0x69]
  40842a:	inc    ebx
  40842b:	dec    ebp
  40842c:	jnp    0x408493
  40842e:	sti    
  40842f:	xor    eax,0xb186f24
  408434:	outs   dx,DWORD PTR ds:[esi]
  408435:	(bad)  
  408436:	fwait
  408437:	push   es
  408438:	(bad)  
  408439:	mov    edi,0xf92e0245
  40843e:	retf   0x6c4c
  408441:	shl    BYTE PTR [ecx-0x50],1
  408444:	js     0x408485
  408446:	jle    0x40843e
  408448:	test   eax,0x23822eda
  40844d:	xor    ebp,DWORD PTR [ebp-0x7ce173e6]
  408453:	jb     0x4084aa
  408455:	fs cmp al,0xde
  408458:	dec    esi
  408459:	adc    BYTE PTR ds:0x26af3b55,0xde
  408460:	add    BYTE PTR [ebx+0x14],dh
  408463:	mul    DWORD PTR [edx+0x5120db84]
  408469:	loope  0x40846b
  40846b:	mov    al,ds:0x96951ee8
  408470:	frstor [eax]
  408472:	jb     0x4084cc
  408474:	retf   
  408475:	xchg   ecx,eax
  408476:	adc    eax,0x6199964c
  40847b:	xchg   BYTE PTR [edi-0x3c7ee780],dh
  408481:	push   0xe499f695
  408486:	xchg   esp,eax
  408487:	inc    ebp
  408488:	dec    esp
  408489:	out    dx,al
  40848a:	push   ds
  40848b:	xchg   BYTE PTR [ebp+0x30],bh
  40848e:	mov    ds:0x22da0ea9,al
  408493:	jmp    0x4cad:0x41fbc91c
  40849a:	dec    ebp
  40849b:	bound  ebx,QWORD PTR [edx+eiz*4]
  40849e:	mov    edi,DWORD PTR [ecx-0xec258b3]
  4084a4:	jge    0x408497
  4084a6:	repnz inc edx
  4084a8:	push   esi
  4084a9:	dec    edi
  4084aa:	inc    ecx
  4084ab:	ror    DWORD PTR [ebx],0xa4
  4084ae:	jl     0x408519
  4084b0:	jbe    0x4084ec
  4084b2:	mov    dl,BYTE PTR [edx+edx*1-0x2c19c9c]
  4084b9:	pop    es
  4084ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084bb:	and    al,0xf2
  4084bd:	in     al,0x99
  4084bf:	ja     0x4084da
  4084c1:	cmp    ah,BYTE PTR [bx-0x5060]
  4084c6:	out    dx,al
  4084c7:	mov    edi,0x8e97730
  4084cc:	ss push 0xffffffb7
  4084cf:	ret    0xff01
  4084d2:	push   0x38f3297c
  4084d7:	mov    ebp,0x7f026aef
  4084dc:	push   ss
  4084dd:	mov    bh,0x11
  4084df:	stos   BYTE PTR es:[edi],al
  4084e0:	jo     0x4084af
  4084e2:	scas   eax,DWORD PTR es:[edi]
  4084e3:	aas    
  4084e4:	pop    esi
  4084e5:	push   ds
  4084e6:	lahf   
  4084e7:	xchg   edx,eax
  4084e8:	mov    eax,0x2cb9d183
  4084ed:	clc    
  4084ee:	mov    dl,BYTE PTR [esp+ebp*4]
  4084f1:	sub    edx,DWORD PTR [ebx+0x20a693ad]
  4084f7:	xor    esp,DWORD PTR [edi-0x35271eb9]
  4084fd:	stos   DWORD PTR es:[edi],eax
  4084fe:	jp     0x408569
  408500:	mov    DWORD PTR [edx+edi*4+0x34797a94],0xd151a11a
  40850b:	mov    al,0x9f
  40850d:	(bad)  
  40850f:	push   ds
  408510:	call   0x647959c2
  408515:	push   es
  408516:	mov    al,ds:0x74ed910c
  40851b:	leave  
  40851c:	int3   
  40851d:	into   
  40851e:	and    DWORD PTR [esp+edx*2-0x64],0x91f55720
  408526:	int3   
  408527:	xchg   esi,eax
  408528:	xchg   edx,eax
  408529:	sub    BYTE PTR [ebp-0x3475f710],bh
  40852f:	adc    al,0x84
  408531:	adc    ecx,ebx
  408533:	xchg   edx,eax
  408534:	mul    DWORD PTR [edx+edi*2]
  408537:	fs mov ecx,0x7ca3b88b
  40853d:	inc    edi
  40853e:	jmp    0xc04f:0xeb6443f1
  408545:	pop    ds
  408546:	xlat   BYTE PTR ds:[ebx]
  408547:	cmp    al,0x41
  408549:	sub    al,0xee
  40854b:	and    ch,bh
  40854d:	jmp    0x8cdd:0xfdacac2a
  408554:	dec    edi
  408555:	jle    0x408575
  408557:	lock push es
  408559:	add    ch,BYTE PTR [eax+0x34]
  40855c:	jb     0x4084e8
  40855e:	scas   eax,DWORD PTR es:[edi]
  40855f:	popf   
  408560:	loope  0x408546
  408562:	inc    ebx
  408563:	xlat   BYTE PTR ds:[ebx]
  408564:	lds    edx,FWORD PTR ds:0x5b8ec818
  40856a:	fcmovnbe st,st(1)
  40856c:	nop
  40856d:	xchg   edx,eax
  40856e:	xlat   BYTE PTR ds:[ebx]
  40856f:	imul   edx,DWORD PTR [esi-0x38],0xde9147ee
  408576:	jge    0x40854b
  408578:	inc    eax
  408579:	call   0x2938f706
  40857e:	dec    esp
  40857f:	mov    esi,0xaa63e56a
  408584:	cmp    eax,0xa887e7ac
  408589:	pop    edi
  40858a:	or     eax,0xe186f232
  40858f:	push   edi
  408590:	pusha  
  408591:	lods   eax,DWORD PTR ds:[esi]
  408592:	outs   dx,DWORD PTR ds:[esi]
  408593:	jg     0x408554
  408595:	loop   0x408599
  408597:	dec    edi
  408598:	or     edx,esi
  40859a:	push   edi
  40859c:	mov    ?,eax
  40859e:	fdiv   st(1),st
  4085a0:	cmp    al,0x15
  4085a2:	sub    cl,BYTE PTR [edi]
  4085a4:	(bad)  
  4085a5:	sbb    cl,BYTE PTR [ebx-0x66]
  4085a8:	aas    
  4085a9:	loop   0x408602
  4085ab:	mov    WORD PTR [esi+eax*8-0x21],es
  4085af:	mov    ch,0xd3
  4085b1:	jp     0x408623
  4085b3:	sub    DWORD PTR [esi+0x76],esp
  4085b6:	(bad)  
  4085b9:	out    dx,al
  4085ba:	cwde   
  4085bb:	or     esi,DWORD PTR [esi+0x5513a55]
  4085c1:	jmp    DWORD PTR [edx+0x1e]
  4085c4:	aas    
  4085c5:	xchg   BYTE PTR [eax],bh
  4085c7:	sbb    al,0xed
  4085c9:	push   0xe9094276
  4085ce:	mov    ecx,0x1c8178d7
  4085d3:	push   0x42cc4f8c
  4085d8:	inc    ebx
  4085d9:	mov    edx,0x86032c86
  4085de:	inc    ecx
  4085df:	cmp    DWORD PTR [ebp+0x55],ebx
  4085e2:	jb     0x408662
  4085e4:	add    DWORD PTR [esi+0xaada266],ecx
  4085ea:	lds    esp,FWORD PTR [edi]
  4085ec:	dec    ebx
  4085ed:	mov    bl,0x43
  4085ef:	fs xor ebp,0xb
  4085f3:	inc    edx
  4085f4:	or     eax,ebp
  4085f6:	sbb    bh,ah
  4085f8:	fstp   QWORD PTR [esi+0x5007db6b]
  4085fe:	or     bh,dh
  408600:	pushf  
  408601:	inc    ebp
  408602:	pop    ecx
  408603:	in     al,0x33
  408605:	stos   BYTE PTR es:[edi],al
  408606:	retf   
  408607:	dec    edi
  408608:	adc    BYTE PTR [edi],dl
  40860a:	(bad)  
  40860b:	sbb    al,0xe1
  40860d:	cdq    
  40860e:	and    ah,BYTE PTR [ebx]
  408610:	add    DWORD PTR [ebx],0xc426a955
  408616:	sbb    esp,DWORD PTR [ecx]
  408618:	loopne 0x408680
  40861a:	pop    ebx
  40861b:	push   es
  40861c:	jne    0x4085fe
  40861e:	scas   al,BYTE PTR es:[edi]
  40861f:	or     bl,BYTE PTR [edx]
  408621:	cmp    esp,DWORD PTR [eax-0x4a]
  408624:	jl     0x40862e
  408626:	clc    
  408627:	pop    esp
  408628:	imul   ebp,DWORD PTR [esi-0x77d1869],0x8
  40862f:	popa   
  408630:	mov    al,0xda
  408632:	jbe    0x408643
  408634:	mov    ebp,0xefe7acb8
  408639:	jns    0x40865f
  40863b:	sti    
  40863c:	fs add eax,0x4907f595
  408642:	jp     0x4086ac
  408644:	and    DWORD PTR [ebp+0x1182e719],eax
  40864a:	jp     0x40867a
  40864c:	jns    0x408688
  40864e:	push   edx
  40864f:	fist   WORD PTR [ebp+esi*1-0x524d6293]
  408656:	(bad)  
  408658:	or     BYTE PTR ds:0x680c08b,bl
  40865e:	test   DWORD PTR [ecx+0x43ba30ac],eax
  408664:	ret    
  408665:	xor    dh,BYTE PTR [edx+0x3b]
  408668:	push   edi
  408669:	pop    esi
  40866a:	mov    cl,BYTE PTR [esi+0x3d]
  40866d:	mov    WORD PTR [ebp-0x7c464702],ss
  408673:	adc    al,0xa2
  408675:	clc    
  408676:	in     al,dx
  408677:	addr16 push eax
  408679:	aas    
  40867a:	or     bl,BYTE PTR [ebp-0x2d]
  40867d:	ret    
  40867e:	jp     0x408610
  408680:	mov    edi,0xd4e9d720
  408685:	std    
  408686:	adc    bh,dh
  408688:	jne    0x4086d6
  40868a:	jle    0x4086f3
  40868c:	fiadd  DWORD PTR [esi-0x54e2391d]
  408692:	clc    
  408693:	inc    esp
  408694:	adc    cl,BYTE PTR [ecx+ecx*4+0x2f4f046d]
  40869b:	mov    dh,0x43
  40869d:	repnz sub DWORD PTR [edi+0x23],esi
  4086a1:	jecxz  0x408710
  4086a3:	mov    edx,0x71d5bf5b
  4086a8:	mov    dh,0xe8
  4086aa:	cwde   
  4086ab:	es (bad) 
  4086ad:	xlat   BYTE PTR ds:[ebx]
  4086ae:	fcmovu st,st(2)
  4086b0:	(bad)  
  4086b1:	and    eax,0x6cae6041
  4086b6:	push   ecx
  4086b7:	call   DWORD PTR [edi]
  4086b9:	rcl    BYTE PTR [ebp-0x49],0x43
  4086bd:	and    al,BYTE PTR [ecx-0x74]
  4086c0:	mov    bh,0x73
  4086c2:	ja     0x40872f
  4086c4:	mov    bh,0x3
  4086c6:	addr16 mov ds:0x9543,al
  4086ca:	(bad)  
  4086cb:	cld    
  4086cc:	push   esp
  4086cd:	aad    0x33
  4086cf:	push   esp
  4086d0:	inc    esp
  4086d1:	js     0x4086e8
  4086d3:	cld    
  4086d4:	daa    
  4086d5:	lods   eax,DWORD PTR ds:[esi]
  4086d6:	dec    BYTE PTR [ecx]
  4086d8:	xor    ebp,edi
  4086da:	cmp    ah,BYTE PTR [eax+edi*2]
  4086dd:	arpl   si,bx
  4086df:	ja     0x40867d
  4086e1:	mov    ds:0xd5768954,eax
  4086e6:	push   cs
  4086e7:	iret   
  4086e8:	out    dx,al
  4086e9:	fs jno 0x408693
  4086ec:	aad    0xdb
  4086ee:	loopne 0x408743
  4086f0:	add    eax,0xa90f2ab
  4086f6:	cmp    ch,BYTE PTR [ecx]
  4086f8:	dec    eax
  4086f9:	sub    ebx,DWORD PTR [esi]
  4086fb:	mov    BYTE PTR [ecx+ebx*8+0x1d9f9c8],al
  408702:	mov    dh,0x8e
  408704:	adc    DWORD PTR [eax+eax*4+0x7828d1db],edx
  40870b:	jge    0x40874e
  40870d:	add    DWORD PTR ds:0x1a9cba9c,edx
  408713:	out    0x91,al
  408715:	dec    esi
  408716:	rol    dl,0xd8
  408719:	push   0xffffffe8
  40871b:	nop
  40871c:	(bad)  
  40871d:	repz push edi
  40871f:	sbb    bh,dh
  408721:	fdiv   QWORD PTR [eax-0x2837307f]
  408727:	cmp    esp,DWORD PTR [edx-0x31b62314]
  40872d:	and    dl,dl
  40872f:	jnp    0x408708
  408731:	test   eax,0x6c4c975b
  408736:	repz mov eax,0x701e6b9a
  40873c:	pop    edi
  40873d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40873e:	(bad)  
  40873f:	xor    ebp,ebp
  408741:	ins    BYTE PTR es:[edi],dx
  408742:	push   eax
  408743:	std    
  408744:	mov    edx,DWORD PTR [edi-0x2b992795]
  40874a:	inc    esp
  40874b:	inc    ebp
  40874c:	pushf  
  40874d:	hlt    
  40874e:	cmp    DWORD PTR [edx+0x23dbffd5],esp
  408754:	loop   0x4087a8
  408756:	adc    BYTE PTR [ebx+0x3633aac2],0x2b
  40875d:	dec    ebx
  40875e:	push   esp
  40875f:	xor    al,0xed
  408761:	lea    esp,[ebx-0x24]
  408764:	ret    
  408765:	and    al,0xf2
  408767:	std    
  408768:	shl    BYTE PTR [edx],0x48
  40876b:	xchg   ebx,eax
  40876c:	sbb    BYTE PTR [edx+0x6],dl
  40876f:	mov    bl,0x59
  408771:	cwde   
  408772:	aaa    
  408773:	dec    ebx
  408774:	dec    esi
  408775:	inc    eax
  408776:	xchg   ebp,eax
  408777:	stos   BYTE PTR es:[edi],al
  408778:	bnd jmp 0xdcf1bec7
  40877e:	xchg   esi,eax
  40877f:	std    
  408780:	mov    eax,ds:0xb309a9c8
  408785:	lea    ebp,ds:0x588bc8e6
  40878b:	inc    esi
  40878c:	xchg   ebx,eax
  40878d:	mov    al,0x6c
  40878f:	test   BYTE PTR [esi],ch
  408791:	js     0x40876f
  408793:	(bad)  
  408794:	stc    
  408795:	jmp    0x3b09:0x9ebc367a
  40879c:	mov    ebp,0x257883ef
  4087a1:	jns    0x4087c8
  4087a3:	das    
  4087a4:	int3   
  4087a5:	rcr    DWORD PTR [eax-0x7a],1
  4087a8:	icebp  
  4087a9:	out    0xfd,eax
  4087ab:	out    dx,eax
  4087ac:	xchg   ebx,eax
  4087ad:	(bad)  
  4087ae:	in     eax,0xce
  4087b0:	sbb    al,0x98
  4087b2:	in     eax,dx
  4087b3:	add    edi,DWORD PTR [eax]
  4087b5:	pop    edi
  4087b6:	(bad)  
  4087b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b8:	sbb    ecx,ecx
  4087ba:	pop    esi
  4087bb:	out    dx,al
  4087bc:	pop    ss
  4087bd:	inc    eax
  4087be:	aaa    
  4087bf:	xchg   ebp,eax
  4087c0:	add    edi,DWORD PTR [ecx+0x33]
  4087c3:	xor    edx,DWORD PTR [ebp-0x5b259026]
  4087c9:	mov    ds:0x6700f52b,eax
  4087ce:	pop    es
  4087cf:	dec    esi
  4087d0:	mov    eax,0x64a0f8c2
  4087d5:	sti    
  4087d6:	setl   BYTE PTR [edx-0x4e]
  4087da:	ins    DWORD PTR es:[edi],dx
  4087db:	mov    eax,0x2d798a62
  4087e0:	xor    BYTE PTR [ecx],dl
  4087e2:	rcl    DWORD PTR [ebp+esi*8-0x1f],cl
  4087e6:	cld    
  4087e7:	xchg   edi,eax
  4087e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087e9:	mov    edx,0x87752192
  4087ee:	in     al,dx
  4087ef:	dec    edi
  4087f0:	lods   eax,DWORD PTR ds:[esi]
  4087f1:	inc    esi
  4087f2:	inc    esp
  4087f3:	stos   BYTE PTR es:[edi],al
  4087f4:	shr    BYTE PTR [edx+0x5b4a149a],1
  4087fa:	push   esi
  4087fb:	scas   eax,DWORD PTR es:[edi]
  4087fc:	and    ebx,ebx
  4087fe:	cmp    esp,0x245b86d2
  408804:	push   esp
  408805:	lock addr16 mov ebp,ds
  408809:	xor    al,0x65
  40880b:	mov    dl,0x85
  40880d:	cmp    DWORD PTR [esi+esi*8+0x253cbf8e],esp
  408814:	mov    ?,esi
  408816:	sar    ebx,0x12
  408819:	cmp    al,0xdc
  40881b:	pop    ds
  40881c:	std    
  40881d:	push   es
  40881e:	(bad)  
  40881f:	jns    0x408864
  408821:	xlat   BYTE PTR ds:[ebx]
  408822:	sbb    al,0x95
  408824:	ret    0x19ac
  408827:	xor    eax,0xcce7af8e
  40882c:	test   DWORD PTR [edi-0x4e],edi
  40882f:	xchg   DWORD PTR [edx],eax
  408831:	cwde   
  408832:	outs   dx,DWORD PTR ds:[esi]
  408833:	test   al,0x26
  408835:	mov    bl,0x1c
  408837:	sbb    eax,0x815c0bf4
  40883c:	inc    eax
  40883d:	cmp    BYTE PTR [esp+eiz*8+0x63793003],bl
  408844:	cld    
  408845:	pop    edi
  408846:	shl    DWORD PTR [ecx-0x10eae46a],cl
  40884c:	sbb    ch,BYTE PTR [edi]
  40884e:	mov    edi,DWORD PTR [eax+0x668463b2]
  408854:	sar    BYTE PTR [ebp*8+0x458abf67],0xa5
  40885c:	push   edi
  40885d:	les    esp,FWORD PTR [esi-0xeade5ad]
  408863:	shl    esp,0x2c
  408866:	sbb    al,0x9d
  408868:	and    esi,esi
  40886a:	div    DWORD PTR [di+0x4a3]
  40886f:	inc    edx
  408870:	gs jl  0x40887b
  408873:	retf   
  408874:	push   ecx
  408875:	jo     0x4088d5
  408877:	pop    edx
  408878:	imul   ebx,DWORD PTR [ecx],0xfffffff6
  40887b:	test   DWORD PTR [ebp+0x60b52bc2],0xf04d95ab
  408885:	fstp   TBYTE PTR [edi-0x24]
  408888:	cmp    ch,BYTE PTR [eax+edx*8-0x282f6463]
  40888f:	jecxz  0x40888f
  408891:	iret   
  408892:	jp     0x408851
  408894:	mov    ebx,0xea94a48
  40889a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40889b:	xor    DWORD PTR ds:0xa93eb571,edx
  4088a1:	sbb    bl,BYTE PTR [edi-0x47]
  4088a4:	(bad)  
  4088a6:	sub    BYTE PTR [ebx+0x335c2815],dh
  4088ac:	fwait
  4088ad:	jmp    0x408834
  4088af:	mov    esp,0x1e92872
  4088b4:	je     0x4088f1
  4088b6:	add    al,0xfb
  4088b8:	das    
  4088b9:	ds push eax
  4088bb:	push   edi
  4088bc:	pop    esi
  4088bd:	iret   
  4088be:	or     BYTE PTR [edx],dh
  4088c0:	mov    edi,0xda4642d8
  4088c5:	rol    DWORD PTR [edx+0x2e],1
  4088c8:	jb     0x4088a4
  4088ca:	or     DWORD PTR [edx-0x24a68a96],esp
  4088d0:	and    eax,DWORD PTR [edx]
  4088d2:	xchg   esi,eax
  4088d3:	pop    ebx
  4088d4:	jp     0x40889b
  4088d6:	fsub   st,st(1)
  4088d8:	lods   eax,DWORD PTR ds:[esi]
  4088d9:	fiadd  DWORD PTR [eax-0x1b3b2d20]
  4088df:	or     esi,DWORD PTR [esi]
  4088e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e2:	gs add dl,dl
  4088e5:	jge    0x40891d
  4088e7:	lock sub dl,BYTE PTR [ebx]
  4088ea:	or     eax,0x8fe73e3
  4088ef:	mov    al,0xd5
  4088f1:	enter  0x3888,0x6c
  4088f5:	repz test al,0xa8
  4088f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f9:	fmul   st(3),st
  4088fb:	jge    0x4088c4
  4088fd:	dec    ebx
  4088fe:	pop    eax
  4088ff:	gs dec edi
  408901:	xor    al,0x38
  408903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408904:	mov    esi,0xbd27f152
  408909:	mov    dl,BYTE PTR [eax+0x55b245a5]
  40890f:	aad    0x65
  408911:	retf   
  408912:	(bad)  
  408913:	out    0xbc,al
  408915:	mov    DWORD PTR [eax],edi
  408917:	das    
  408918:	ja     0x408923
  40891a:	xor    BYTE PTR [edx+0x2ff6d028],0x78
  408921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408922:	cmp    al,0x73
  408924:	aam    0x7c
  408926:	pop    ebx
  408927:	mov    ebp,0xc794137b
  40892c:	mov    bh,0x15
  40892e:	int3   
  40892f:	and    ecx,DWORD PTR [edi+0x61fdd3d6]
  408935:	push   ebp
  408936:	jecxz  0x4088bf
  408938:	leave  
  408939:	imul   edi,DWORD PTR [eax+0x150a95fa],0xe25ca962
  408943:	jl     0x4088e8
  408945:	fbstp  TBYTE PTR [esp+ebp*8-0x70]
  408949:	sbb    BYTE PTR [edi+edi*1-0x5c],dl
  40894d:	test   DWORD PTR [edi-0x7df4e726],esp
  408953:	popa   
  408954:	and    eax,0x2a9f2815
  408959:	push   0xffffffcb
  40895b:	cmc    
  40895c:	pop    ebx
  40895d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40895e:	dec    esp
  40895f:	jnp    0x40893a
  408961:	xchg   BYTE PTR [ebx+0x18],cl
  408964:	out    0xa8,eax
  408966:	mov    bh,0xf1
  408968:	xor    DWORD PTR [edx+0x22850803],edx
  40896e:	js     0x4089da
  408970:	pop    es
  408971:	ret    
  408972:	test   BYTE PTR cs:[edi-0x71ac518c],ah
  408979:	dec    esp
  40897a:	push   edx
  40897b:	fdivr  st,st(5)
  40897d:	sub    al,0xa6
  40897f:	addr16 cmp ebp,0x21
  408983:	pop    edi
  408984:	or     DWORD PTR [ecx-0x3b],0x48
  408988:	stc    
  408989:	scas   eax,DWORD PTR es:[edi]
  40898a:	push   edx
  40898b:	adc    al,0xb9
  40898d:	mov    esp,0x364eecef
  408992:	stos   BYTE PTR es:[edi],al
  408993:	and    al,0xc1
  408995:	je     0x4089ed
  408997:	pop    ebp
  408998:	pushf  
  408999:	dec    edi
  40899a:	fwait
  40899b:	mov    WORD PTR [edi-0x2b],ss
  40899e:	push   es
  40899f:	test   cl,dl
  4089a1:	mov    ch,0xa4
  4089a3:	setp   BYTE PTR [edi]
  4089a6:	(bad)  
  4089a7:	cli    
  4089a8:	fdiv   DWORD PTR [edi]
  4089aa:	push   ds
  4089ab:	or     DWORD PTR [eax-0x27],0x6a3427e8
  4089b2:	add    al,0x61
  4089b4:	stos   BYTE PTR es:[edi],al
  4089b5:	xchg   ebp,eax
  4089b6:	dec    edx
  4089b7:	fistp  WORD PTR [ebx-0x3bacb9bf]
  4089bd:	jbe    0x408a09
  4089bf:	pop    ebx
  4089c0:	ds dec esi
  4089c2:	add    al,0x20
  4089c4:	in     eax,0x83
  4089c6:	mov    ecx,0xfbd35185
  4089cb:	(bad)  [eax]
  4089cd:	jnp    0x40897a
  4089cf:	in     eax,0x53
  4089d1:	adc    ecx,DWORD PTR [ecx-0x5c]
  4089d4:	test   DWORD PTR [ebp+0x1c],edi
  4089d7:	mov    BYTE PTR [ecx+0x1c125de5],ch
  4089dd:	push   edi
  4089de:	clc    
  4089df:	push   ds
  4089e0:	pop    esp
  4089e1:	(bad)  
  4089e2:	fidiv  WORD PTR [ebx]
  4089e4:	or     BYTE PTR [edi-0x5e],bl
  4089e7:	packssdw mm6,QWORD PTR [eax]
  4089ea:	xchg   ebp,eax
  4089eb:	inc    esi
  4089ec:	fwait
  4089ed:	sub    eax,0xffdf9ce
  4089f2:	(bad)  
  4089f4:	add    al,0x76
  4089f6:	or     esp,ebx
  4089f8:	loop   0x408987
  4089fa:	bnd ret 0x3e6b
  4089fe:	and    ecx,DWORD PTR [edx+0x7e779e45]
  408a04:	clc    
  408a05:	mov    al,0x1d
  408a07:	in     al,0xa3
  408a09:	in     eax,dx
  408a0a:	jl     0x408a84
  408a0c:	jns    0x408a6e
  408a0e:	mov    bh,0x4b
  408a10:	pop    esi
  408a11:	scas   al,BYTE PTR es:[edi]
  408a12:	add    DWORD PTR [ecx+ecx*4-0x5b],edx
  408a16:	push   0xec8aafab
  408a1b:	cwde   
  408a1c:	lock ror BYTE PTR [ecx-0x10],0x51
  408a21:	jne    0x408a00
  408a23:	(bad)  
  408a24:	out    dx,al
  408a25:	aas    
  408a26:	cdq    
  408a27:	outs   dx,BYTE PTR ds:[esi]
  408a28:	lds    eax,FWORD PTR [ebx]
  408a2a:	int    0x0
  408a2c:	push   ebp
  408a2d:	sub    eax,0x701047c
  408a32:	out    dx,eax
  408a33:	adc    DWORD PTR [ebx],ecx
  408a35:	(bad)  
  408a36:	repz and dl,BYTE PTR [ecx+0x3d]
  408a3a:	stos   BYTE PTR es:[edi],al
  408a3b:	mov    eax,es
  408a3d:	or     edi,edx
  408a3f:	and    DWORD PTR [eax+ebx*8-0x5c],esi
  408a43:	jno    0x4089f7
  408a45:	(bad)  
  408a47:	out    0x32,al
  408a49:	in     eax,0x79
  408a4b:	pop    ecx
  408a4c:	dec    eax
  408a4d:	js     0x408a0d
  408a4f:	data16 aaa 
  408a51:	stc    
  408a52:	js     0x408ab7
  408a54:	or     DWORD PTR [edx+0x760718d6],ebp
  408a5a:	bound  ebp,QWORD PTR [ebx]
  408a5c:	mov    dh,0x49
  408a5e:	test   DWORD PTR [edx+edi*2-0x68],ecx
  408a62:	rcl    BYTE PTR ds:0x8681c5af,1
  408a68:	push   ebx
  408a69:	stc    
  408a6a:	inc    ecx
  408a6b:	adc    DWORD PTR [ecx],edi
  408a6d:	lds    ebp,FWORD PTR cs:[ebp+0x2f2b6a88]
  408a74:	fcomp  st(2)
  408a76:	mov    es,WORD PTR [eax]
  408a78:	cs or  ecx,esi
  408a7b:	push   esp
  408a7c:	cwde   
  408a7d:	inc    esp
  408a7e:	xor    ebx,DWORD PTR [esp+esi*4-0x5cd90196]
  408a85:	add    BYTE PTR [ebx],al
  408a87:	push   ebx
  408a88:	jmp    0x5d1e:0x49b3742a
  408a8f:	in     al,dx
  408a90:	xchg   esi,eax
  408a91:	xchg   ebx,eax
  408a92:	xchg   edi,eax
  408a93:	ja     0x408a2a
  408a95:	test   al,0x1c
  408a97:	xor    BYTE PTR [esi],dh
  408a99:	retf   0x102f
  408a9c:	dec    edi
  408a9d:	imul   ecx,ebx,0x1ca182ef
  408aa3:	int    0x13
  408aa5:	adc    BYTE PTR [ebx+0x46bddc15],dh
  408aab:	and    eax,0x23269172
  408ab0:	ret    
  408ab1:	out    dx,al
  408ab2:	xor    al,0x6f
  408ab4:	(bad)  
  408ab6:	adc    BYTE PTR [ecx-0x71e64f08],ah
  408abc:	sahf   
  408abd:	ret    
  408abe:	xchg   ecx,eax
  408abf:	out    dx,eax
  408ac0:	or     ebx,DWORD PTR [ecx+0x23cd3e8a]
  408ac6:	jp     0x408ad1
  408ac8:	popf   
  408ac9:	and    BYTE PTR [ebx-0x6a04d563],dh
  408acf:	ins    DWORD PTR es:[edi],dx
  408ad0:	cmp    BYTE PTR [ecx+0x7d],dh
  408ad3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408ad5:	push   ebp
  408ad6:	aaa    
  408ad7:	xchg   ebx,eax
  408ad8:	mov    ebx,0xcc8af74d
  408add:	jns    0x408ada
  408adf:	imul   DWORD PTR [ebx-0x71]
  408ae2:	in     al,dx
  408ae3:	mov    ebp,0xedb98048
  408ae8:	idiv   BYTE PTR [ecx-0x41]
  408aeb:	sub    al,0xcd
  408aed:	out    0x2e,eax
  408aef:	inc    esi
  408af0:	sub    cl,BYTE PTR [edi]
  408af2:	inc    edi
  408af3:	xchg   edi,eax
  408af4:	dec    ebp
  408af5:	call   0x2190:0x4a666e25
  408afc:	mov    al,es:0x111bda8f
  408b02:	dec    DWORD PTR [edx+ebx*1-0x9]
  408b06:	pop    es
  408b07:	pop    esi
  408b08:	loopne 0x408aae
  408b0a:	push   esi
  408b0b:	loop   0x408ac7
  408b0d:	imul   bh
  408b0f:	mov    esp,0x702a364c
  408b14:	add    eax,ebx
  408b16:	sub    BYTE PTR [eax+0x6c781662],0x5b
  408b1d:	popa   
  408b1e:	sar    al,cl
  408b20:	xchg   BYTE PTR [ebx-0xfdb7698],dl
  408b26:	pop    ecx
  408b27:	sbb    BYTE PTR [ebx+0x5a],0xe0
  408b2b:	shr    esp,cl
  408b2d:	and    DWORD PTR [edx+0x6ce2c2de],0xb7f7973b
  408b37:	adc    ebp,eax
  408b39:	adc    BYTE PTR [esi+0x26],ah
  408b3c:	sub    al,0x58
  408b3e:	push   esp
  408b3f:	hlt    
  408b40:	cmp    al,0x5b
  408b42:	adc    BYTE PTR [esi-0x24935946],ch
  408b48:	pop    ds
  408b49:	stos   BYTE PTR es:[edi],al
  408b4a:	jp     0x408b14
  408b4c:	mov    ds:0x562513be,eax
  408b51:	mov    bh,0xa8
  408b53:	xor    eax,0x8a0929da
  408b58:	add    eax,0x496bee10
  408b5d:	or     DWORD PTR [esi+0xfd691af],0x3c
  408b64:	mov    eax,0xdd95f3d2
  408b69:	adc    ebx,DWORD PTR [ebx+0x1d59fb03]
  408b6f:	and    esp,DWORD PTR [ebx]
  408b71:	inc    esp
  408b72:	cmp    edi,DWORD PTR [ecx+0x964f402]
  408b78:	mov    WORD PTR [ebx-0xf],gs
  408b7b:	sbb    dl,BYTE PTR [edx-0x2c]
  408b7e:	xor    al,0x92
  408b80:	cld    
  408b81:	daa    
  408b82:	add    bl,BYTE PTR ds:0x1229c341
  408b88:	sbb    eax,DWORD PTR [eax+0x167504d6]
  408b8e:	dec    edx
  408b8f:	adc    al,0xd7
  408b91:	aad    0xae
  408b93:	push   0x4
  408b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b96:	aaa    
  408b97:	xchg   ebx,eax
  408b98:	call   0xef1b:0x2e3d63
  408b9f:	neg    BYTE PTR [esi-0x27eb706b]
  408ba5:	ds dec esi
  408ba7:	mov    WORD PTR [edi-0x74],gs
  408baa:	lock test BYTE PTR [edx+0x21],ah
  408bae:	stc    
  408baf:	adc    ebp,DWORD PTR [ecx]
  408bb1:	jmp    0x408c12
  408bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb4:	clc    
  408bb5:	mov    al,ds:0xd77100d2
  408bba:	or     BYTE PTR [eax+eiz*1-0x22],dh
  408bbe:	mov    edx,0xb2706817
  408bc3:	loop   0x408c34
  408bc5:	mov    ch,0x59
  408bc7:	scas   al,BYTE PTR es:[edi]
  408bc8:	pop    ds
  408bc9:	adc    eax,0xb9706481
  408bce:	ret    
  408bcf:	jns    0x408bc4
  408bd1:	dec    edx
  408bd2:	and    eax,0x8897240
  408bd7:	cmp    dl,al
  408bd9:	jecxz  0x408b93
  408bdb:	arpl   WORD PTR [ecx],si
  408bdd:	pop    edx
  408bde:	sub    al,0x8
  408be0:	xchg   edi,eax
  408be1:	test   ebp,0x237790d4
  408be7:	(bad)  [eax]
  408be9:	imul   ebp,eax,0x63
  408bec:	arpl   sp,bx
  408bee:	mov    esp,0xe5b849d7
  408bf3:	sbb    eax,0xe0c53d31
  408bf8:	int    0x7a
  408bfa:	lds    edx,FWORD PTR [eax]
  408bfc:	pushf  
  408bfd:	lea    esp,ds:0x197146f2
  408c03:	loopne 0x408b8d
  408c05:	ds nop
  408c07:	mov    eax,0x84b3bdfb
  408c0c:	inc    edx
  408c0d:	pop    ebp
  408c0e:	mov    cl,0x33
  408c10:	repz fist DWORD PTR [edx]
  408c13:	test   eax,0x52bc59e
  408c18:	mov    edi,0xf90e3905
  408c1d:	pop    esp
  408c1e:	mov    eax,ds:0x9f1b12a3
  408c23:	jns    0x408c1b
  408c25:	jmp    0x4fe6:0x8e57110e
  408c2c:	mov    cl,0x40
  408c2e:	dec    ebx
  408c2f:	ins    DWORD PTR es:[edi],dx
  408c30:	xchg   ecx,eax
  408c31:	out    0x6c,eax
  408c33:	mov    dl,0x3
  408c35:	or     BYTE PTR [edx-0x54eb0fdb],0xc
  408c3c:	fsub   QWORD PTR [edx]
  408c3e:	cwde   
  408c3f:	mov    eax,0x77d29f74
  408c44:	(bad)  
  408c45:	mov    WORD PTR ds:0xb51c660b,ss
  408c4b:	in     eax,dx
  408c4c:	push   ss
  408c4d:	(bad)  
  408c4e:	fnstsw WORD PTR ds:0xfc75dd63
  408c54:	aas    
  408c55:	cmp    dh,BYTE PTR [eax]
  408c57:	aam    0x3
  408c59:	scas   eax,DWORD PTR es:[edi]
  408c5a:	add    ch,ch
  408c5c:	or     al,0x97
  408c5e:	mov    bl,0x32
  408c60:	add    BYTE PTR [edi+0x4],0xfa
  408c64:	add    DWORD PTR [ebx+0x78],0x2bbbeae
  408c6b:	lds    ecx,FWORD PTR [eiz*2-0x3b54ff3d]
  408c72:	lock outs dx,BYTE PTR ds:[esi]
  408c74:	mov    ds:0xdf00850c,al
  408c79:	gs push 0xfffffff5
  408c7c:	cmp    edx,ebp
  408c7e:	sub    BYTE PTR [esi],0x83
  408c81:	mov    esi,DWORD PTR [eax+0x2f5e700]
  408c87:	test   BYTE PTR [edi-0x48fa79b0],0x3
  408c8e:	xchg   edi,eax
  408c8f:	pop    edx
  408c90:	pop    es
  408c91:	sub    eax,0x53ae4985
  408c96:	sti    
  408c97:	xor    al,0x4a
  408c99:	call   0x2b73:0xeaa034f6
  408ca0:	je     0x408cf5
  408ca2:	stc    
  408ca3:	xchg   DWORD PTR [ebx],edx
  408ca5:	stos   DWORD PTR es:[edi],eax
  408ca6:	adc    eax,0x9add80b8
  408cab:	pop    edi
  408cac:	xchg   BYTE PTR ds:0xa7ce004e,ch
  408cb2:	mov    ecx,0xa4772f47
  408cb7:	add    DWORD PTR [esi-0x48],esp
  408cba:	lock call 0x3662:0x199f48fd
  408cc2:	and    dl,BYTE PTR [ecx-0x4901b773]
  408cc8:	mov    ds:0x6b5aa629,eax
  408ccd:	aad    0xe4
  408ccf:	pop    ebp
  408cd0:	dec    ecx
  408cd1:	mov    BYTE PTR [ebx],0x24
  408cd4:	jbe    0x408d33
  408cd6:	inc    ebx
  408cd7:	out    0x87,al
  408cd9:	shr    DWORD PTR [ecx-0x57],1
  408cdc:	gs add ecx,0xffffff83
  408ce0:	ja     0x408ca6
  408ce2:	loope  0x408cff
  408ce4:	iret   
  408ce5:	and    eax,0x6f5fccc6
  408cea:	xor    eax,0xb4ea52d2
  408cef:	retf   
  408cf0:	xor    DWORD PTR [edx],0x4
  408cf3:	fisttp WORD PTR [edx-0x6f5adba9]
  408cf9:	jge    0x408ceb
  408cfb:	mov    eax,0xeedf274b
  408d00:	pop    es
  408d01:	adc    esp,DWORD PTR [eax+0x34]
  408d04:	fsub   DWORD PTR [esi+0x11]
  408d07:	call   0x7d9a:0xa45a2e8c
  408d0e:	push   esi
  408d0f:	xor    al,0x4e
  408d11:	aaa    
  408d12:	scas   eax,DWORD PTR es:[edi]
  408d13:	daa    
  408d14:	call   0xe6e3:0x88a9ba71
  408d1b:	jb     0x408cce
  408d1d:	mov    BYTE PTR [esi],ch
  408d1f:	and    al,0xe4
  408d21:	inc    ebp
  408d22:	(bad)  [ecx-0x58]
  408d25:	pushf  
  408d26:	sti    
  408d27:	daa    
  408d28:	ss stos BYTE PTR es:[edi],al
  408d2a:	call   0x13fe:0x51a2dbeb
  408d31:	icebp  
  408d32:	sbb    eax,0x2786f363
  408d37:	mov    bh,BYTE PTR [edx]
  408d39:	aas    
  408d3a:	cs push esi
  408d3c:	push   ecx
  408d3d:	jge    0x408d10
  408d3f:	outs   dx,DWORD PTR ds:[esi]
  408d40:	shl    DWORD PTR [esi-0x555c3099],cl
  408d46:	dec    ebx
  408d47:	outs   dx,DWORD PTR ds:[esi]
  408d48:	lods   al,BYTE PTR ds:[esi]
  408d49:	ins    BYTE PTR es:[edi],dx
  408d4a:	jbe    0x408d6a
  408d4c:	mov    ah,0x64
  408d4e:	add    al,0x93
  408d50:	jge    0x408d34
  408d52:	gs push 0x12d3e478
  408d58:	fs pop ebx
  408d5a:	dec    esi
  408d5b:	xchg   ecx,eax
  408d5c:	loop   0x408d23
  408d5e:	inc    ebx
  408d5f:	pop    esi
  408d60:	cs sub eax,0xde2bfb40
  408d66:	push   esp
  408d67:	push   esp
  408d68:	pushf  
  408d69:	jp     0x408d37
  408d6b:	xchg   ebx,eax
  408d6c:	pushf  
  408d6d:	add    al,dh
  408d6f:	cli    
  408d70:	add    ch,cl
  408d72:	xchg   edi,eax
  408d73:	pop    esi
  408d74:	dec    esp
  408d75:	retf   0xf4d2
  408d78:	je     0x408d8d
  408d7a:	pop    eax
  408d7b:	pop    es
  408d7c:	cli    
  408d7d:	inc    eax
  408d7e:	mov    eax,ds:0xeba47ece
  408d83:	inc    eax
  408d84:	ss ret 0x9365
  408d88:	dec    ecx
  408d89:	push   ds
  408d8a:	daa    
  408d8b:	mov    eax,0x3ecee1f5
  408d90:	(bad)  
  408d91:	retf   0x87d8
  408d94:	divps  xmm0,XMMWORD PTR ss:[ecx]
  408d98:	xchg   ecx,eax
  408d99:	aad    0xb2
  408d9b:	mov    cl,0x67
  408d9d:	popa   
  408d9e:	mov    dl,0x77
  408da0:	es ds dec edx
  408da3:	push   edi
  408da4:	loope  0x408d30
  408da6:	ficom  WORD PTR [edx]
  408da8:	mov    eax,0x1f3b5c80
  408dad:	addr16 neg cl
  408db0:	cwde   
  408db1:	popa   
  408db2:	and    esp,esp
  408db4:	cli    
  408db5:	mov    DWORD PTR [ebx],esp
  408db7:	adc    BYTE PTR [esi],dl
  408db9:	in     al,dx
  408dba:	push   edi
  408dbb:	xchg   esi,eax
  408dbc:	(bad)  
  408dbd:	or     ebp,ebx
  408dbf:	jmp    0x1583:0xeb98e5d1
  408dc6:	stc    
  408dc7:	shl    DWORD PTR [edx],0xc1
  408dca:	cmp    al,0x38
  408dcc:	stos   DWORD PTR es:[di],eax
  408dce:	xchg   esi,eax
  408dcf:	stos   BYTE PTR es:[edi],al
  408dd0:	mov    esi,0x7085e941
  408dd5:	ja     0x408d9f
  408dd7:	jae    0x408d8d
  408dd9:	sbb    ch,cl
  408ddb:	add    dh,BYTE PTR [ebx+0x2478d7]
  408de1:	sbb    eax,0x618641f5
  408de6:	and    cl,BYTE PTR [edx+eax*4-0x10d39884]
  408ded:	mov    gs,WORD PTR [edx+0x2b66765f]
  408df3:	cmp    bl,BYTE PTR [eax]
  408df5:	push   es
  408df6:	fdivp  st(3),st
  408df8:	js     0x408e15
  408dfa:	jle    0x408e60
  408dfc:	jb     0x408e28
  408dfe:	mov    edi,0x4808eec
  408e03:	inc    ebx
  408e04:	imul   esp,DWORD PTR [eax+0x25606d24],0x5dd21260
  408e0e:	mov    ecx,0xa66332cb
  408e13:	xor    BYTE PTR [ebx-0x3],bh
  408e16:	ins    BYTE PTR es:[edi],dx
  408e17:	lods   al,BYTE PTR ds:[esi]
  408e18:	in     al,dx
  408e19:	cs pop esi
  408e1b:	fist   DWORD PTR [eax-0x79]
  408e1e:	pop    ds
  408e1f:	cmc    
  408e20:	sub    edi,DWORD PTR [esi+0x40dbbed3]
  408e26:	mov    WORD PTR [ebp-0x2e],ds
  408e29:	dec    ebp
  408e2a:	xor    DWORD PTR [ebp+eax*1+0x60],ebp
  408e2e:	daa    
  408e2f:	sbb    DWORD PTR [esi],eax
  408e31:	sub    DWORD PTR [ecx+0x6ab8559d],ecx
  408e37:	rol    BYTE PTR [edx-0x73],cl
  408e3a:	std    
  408e3b:	rcl    DWORD PTR [edx+0x5a394bc0],1
  408e41:	cli    
  408e42:	fst    QWORD PTR [eax]
  408e44:	pushf  
  408e45:	shl    DWORD PTR [esi+0x3d41164a],1
  408e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e4c:	mov    eax,ds:0x7ac26ace
  408e51:	int3   
  408e52:	mov    WORD PTR [ebp+0x11045bd5],?
  408e58:	pop    edi
  408e59:	pop    esi
  408e5a:	mov    dl,0x5b
  408e5c:	push   esi
  408e5d:	push   ebp
  408e5e:	clc    
  408e5f:	fild   QWORD PTR [esi-0x4f]
  408e62:	and    bh,cl
  408e64:	sbb    al,0x4f
  408e66:	test   eax,0x4ed9b78
  408e6b:	inc    ebp
  408e6c:	jmp    0x408e3f
  408e6e:	gs sbb ah,al
  408e71:	mov    esp,0x3143b3a6
  408e76:	retf   
  408e77:	loopne 0x408e51
  408e79:	add    edx,DWORD PTR [ebp+eiz*8+0x1c]
  408e7d:	das    
  408e7e:	mov    ebp,0xec13efe8
  408e83:	and    al,0x9
  408e85:	ins    DWORD PTR es:[edi],dx
  408e86:	neg    DWORD PTR [bp-0x5419]
  408e8b:	test   al,0xde
  408e8d:	pushf  
  408e8e:	(bad)  
  408e8f:	fsub   DWORD PTR [eax+eiz*4]
  408e92:	dec    esi
  408e93:	inc    ebp
  408e94:	and    DWORD PTR [eax+0x5e426905],esp
  408e9a:	icebp  
  408e9b:	addr16 dec esp
  408e9d:	mov    bl,0xf9
  408e9f:	pop    ebp
  408ea0:	or     ch,ch
  408ea2:	inc    ecx
  408ea3:	cmp    ebp,edx
  408ea5:	mov    ebx,0xf5c44622
  408eaa:	or     al,cl
  408eac:	mov    dl,0xb7
  408eae:	mov    al,0x9c
  408eb0:	cmp    eax,DWORD PTR [eax]
  408eb2:	std    
  408eb3:	cmc    
  408eb4:	xchg   edi,eax
  408eb5:	jbe    0x408e66
  408eb7:	cmp    eax,ebx
  408eb9:	hlt    
  408eba:	test   al,0x35
  408ebc:	jne    0x408e6c
  408ebe:	in     eax,0x69
  408ec0:	mov    ah,BYTE PTR [edx-0x20]
  408ec3:	sbb    ch,BYTE PTR [eax+0x19b5aba3]
  408ec9:	and    bh,BYTE PTR [eax-0x6c]
  408ecc:	push   ss
  408ecd:	stos   BYTE PTR es:[edi],al
  408ece:	adc    BYTE PTR [ecx],bh
  408ed0:	sub    eax,0x40510b68
  408ed5:	jb     0x408f1b
  408ed7:	push   edi
  408ed8:	cmp    BYTE PTR [esi],0x14
  408edb:	pop    edx
  408edc:	dec    esp
  408edd:	cmc    
  408ede:	repnz sbb esi,DWORD PTR [edx]
  408ee1:	je     0x408ec8
  408ee3:	pop    esp
  408ee4:	je     0x408ee5
  408ee6:	aaa    
  408ee7:	sbb    eax,0xdbf0d8a9
  408eec:	lds    eax,FWORD PTR [ecx-0x6]
  408eef:	push   eax
  408ef0:	sti    
  408ef1:	(bad)  
  408ef3:	pop    ecx
  408ef4:	sub    al,0x32
  408ef6:	jge    0x408e8f
  408ef8:	std    
  408ef9:	mov    esi,DWORD PTR [edx+ebx*8-0x67229c8a]
  408f00:	jnp    0x408ed2
  408f02:	pop    ebx
  408f03:	or     BYTE PTR [ecx-0x66ff905c],cl
  408f09:	in     al,dx
  408f0a:	test   bh,0x12
  408f0d:	(bad)  
  408f0e:	jecxz  0x408f70
  408f10:	xchg   DWORD PTR [ecx+edi*8-0x27],esp
  408f14:	and    bl,BYTE PTR [ecx-0x6278b245]
  408f1a:	outs   dx,DWORD PTR ds:[esi]
  408f1b:	adc    DWORD PTR [ecx+0x7c],edi
  408f1e:	jno    0x408ec4
  408f20:	mov    bh,0x71
  408f22:	push   esp
  408f23:	and    esp,ecx
  408f25:	jno    0x408f22
  408f27:	jmp    0x4453a91b
  408f2c:	lock sub DWORD PTR [ebx],edx
  408f2f:	cmp    BYTE PTR [eax+0x17],bl
  408f32:	xor    eax,0xa090cd14
  408f37:	or     BYTE PTR [eax+0x71],dl
  408f3a:	in     al,dx
  408f3b:	mov    esi,0x1369e771
  408f40:	mov    ebx,0x77f99ca1
  408f45:	shl    cl,0x68
  408f48:	pop    edi
  408f49:	test   cl,cl
  408f4b:	mov    ?,esp
  408f4d:	rcl    BYTE PTR [edi],1
  408f4f:	adc    dl,dh
  408f51:	and    eax,0x56d06d76
  408f56:	add    cl,BYTE PTR [esi-0x44]
  408f59:	and    eax,0xb3c27235
  408f5e:	ins    BYTE PTR es:[edi],dx
  408f5f:	dec    ecx
  408f60:	and    al,BYTE PTR [eax+eax*4+0x48]
  408f64:	sub    BYTE PTR [esi-0x62],dl
  408f67:	retf   
  408f68:	cdq    
  408f69:	(bad)  
  408f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f6b:	and    al,0xe9
  408f6d:	xor    ecx,DWORD PTR [ebp+0x52]
  408f70:	mov    ah,0x34
  408f72:	pop    es
  408f73:	cmp    BYTE PTR [eax],dl
  408f75:	jmp    0xc473:0xde13d8a9
  408f7c:	sbb    ebp,ebp
  408f7e:	(bad)  
  408f80:	mov    al,0xb5
  408f82:	xor    eax,0xfdbee05a
  408f87:	sub    DWORD PTR [edi+eax*8+0x6cd6eff2],0xffffffee
  408f8f:	pop    edi
  408f90:	test   BYTE PTR [edx-0x3db309ca],dl
  408f96:	sub    al,0xfc
  408f98:	je     0x40900c
  408f9a:	test   eax,0x59edd740
  408f9f:	or     al,0xe3
  408fa1:	lock push edi
  408fa3:	add    ch,ah
  408fa5:	push   edx
  408fa6:	sbb    BYTE PTR [ebp-0x2e2310c4],dh
  408fac:	and    DWORD PTR [ebx+0x60b5603f],ebx
  408fb2:	ins    DWORD PTR es:[edi],dx
  408fb3:	(bad)  
  408fb4:	adc    cl,bl
  408fb6:	xchg   esi,eax
  408fb7:	stc    
  408fb8:	jecxz  0x408f8f
  408fba:	mov    ecx,0x9c6ad021
  408fbf:	les    edi,FWORD PTR [esi+0x76]
  408fc2:	ror    eax,cl
  408fc4:	or     esi,edi
  408fc6:	ror    DWORD PTR [eax+0x291d42e3],0x51
  408fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fce:	sub    al,0x2c
  408fd0:	inc    edx
  408fd1:	sbb    bh,BYTE PTR [edx+edx*8]
  408fd4:	out    0x93,al
  408fd6:	rcl    eax,1
  408fd8:	retf   
  408fd9:	add    BYTE PTR [edx+0x1bd64a63],0x12
  408fe0:	fcom   st(7)
  408fe2:	fcomp  DWORD PTR [edi+0x74]
  408fe5:	mov    ebp,0x200c429
  408fea:	jns    0x40902d
  408fec:	adc    DWORD PTR [ecx+0x4a6b97d6],esp
  408ff2:	sub    BYTE PTR [ebx],bh
  408ff4:	push   ebp
  408ff5:	pop    ds
  408ff6:	jp     0x409035
  408ff8:	sub    DWORD PTR [eax+0x54bac9eb],eax
  408ffe:	out    dx,eax
  408fff:	mov    al,ds:0x7dea0d7f
  409004:	cmp    al,0x1a
  409006:	test   eax,0x4b03e4ac
  40900b:	cld    
  40900c:	mov    WORD PTR [edx+0x51],fs
  40900f:	ins    DWORD PTR es:[edi],dx
  409010:	aas    
  409011:	jno    0x408fb7
  409013:	daa    
  409014:	cld    
  409015:	jg     0x40906f
  409017:	dec    esi
  409018:	dec    ebp
  409019:	sub    al,0x4a
  40901b:	or     al,0xbb
  40901d:	fsub   st,st(6)
  40901f:	add    edi,esp
  409021:	and    ebp,DWORD PTR [esi+0x2f]
  409024:	jecxz  0x409096
  409026:	aas    
  409027:	and    ch,BYTE PTR [ecx-0x31]
  40902a:	sub    BYTE PTR [edx-0xe49e94f],dh
  409030:	mov    ds:0xcf5b8fb,eax
  409035:	mov    esi,0x2d51045f
  40903a:	mov    al,ds:0xf558e189
  40903f:	scas   al,BYTE PTR es:[edi]
  409040:	mov    bh,0x91
  409042:	es jno 0x40901a
  409045:	pop    esp
  409046:	jne    0x40909c
  409048:	shl    DWORD PTR [ebp-0x44a52986],1
  40904e:	lds    ecx,FWORD PTR [esi]
  409050:	ret    0xd4e7
  409053:	dec    edi
  409054:	mov    cl,ah
  409056:	cmp    BYTE PTR [eax+0x4c],bl
  409059:	sub    cl,BYTE PTR ds:0x43884677
  40905f:	test   BYTE PTR [ebx-0x44],dh
  409062:	cmp    dh,BYTE PTR [esi-0x69c28a2c]
  409068:	stos   DWORD PTR es:[edi],eax
  409069:	cdq    
  40906a:	call   0x6a9cd072
  40906f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409070:	aas    
  409071:	or     esp,esp
  409073:	dec    ecx
  409074:	dec    ecx
  409075:	push   ebp
  409076:	xor    DWORD PTR [ebp-0x2b],ebp
  409079:	popf   
  40907a:	and    esp,DWORD PTR [edi]
  40907c:	mov    al,0x19
  40907e:	cmp    esi,esp
  409080:	in     eax,dx
  409081:	int3   
  409082:	mov    ecx,0xc26a402d
  409087:	lds    edi,FWORD PTR [eax]
  409089:	cmc    
  40908a:	cli    
  40908b:	das    
  40908c:	xchg   BYTE PTR [ecx+0x7b],dl
  40908f:	xor    ebx,esp
  409091:	lock div eax
  409094:	daa    
  409095:	sub    al,0xde
  409097:	jmp    0xf3d8:0x773bc704
  40909e:	push   DWORD PTR [esi+0x12b05f93]
  4090a4:	pop    edx
  4090a5:	test   eax,0x8d63325f
  4090aa:	test   BYTE PTR [eax+0x59],0xf3
  4090ae:	out    dx,al
  4090af:	adc    DWORD PTR [ebp+0x59],0x37959e99
  4090b6:	xchg   DWORD PTR [eax-0xe725f04],esp
  4090bc:	ret    0x169b
  4090bf:	mov    bh,0x1a
  4090c1:	cli    
  4090c2:	repz neg ecx
  4090c5:	xchg   edi,eax
  4090c6:	xor    cl,BYTE PTR [edx-0x754319ed]
  4090cc:	cmc    
  4090cd:	stc    
  4090ce:	inc    esp
  4090cf:	rcl    BYTE PTR [edx-0x62],cl
  4090d2:	inc    ebx
  4090d3:	test   DWORD PTR [ecx-0x7b],0x311bdce6
  4090da:	retf   0x244e
  4090dd:	pop    esp
  4090de:	push   esp
  4090df:	pop    ss
  4090e0:	fld    TBYTE PTR [eax-0x3e]
  4090e3:	pop    edi
  4090e4:	jbe    0x4090e1
  4090e6:	stos   BYTE PTR es:[edi],al
  4090e7:	fs adc al,0xd0
  4090ea:	push   cs
  4090eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ec:	pushf  
  4090ed:	xor    DWORD PTR [edx+0x0],ecx
  4090f0:	enter  0xf6ef,0x14
  4090f4:	fld    DWORD PTR [ebp+0x7849aab3]
  4090fa:	and    esi,DWORD PTR [ecx+0x4f]
  4090fd:	imul   edi,DWORD PTR [esi+eiz*8+0x48],0xffffffb1
  409102:	lock mov bh,0x8d
  409105:	dec    edi
  409106:	aas    
  409107:	shl    ebx,cl
  409109:	pop    ebp
  40910a:	mov    cl,BYTE PTR [esi]
  40910c:	adc    BYTE PTR [ebp+edi*8-0x70e871ee],al
  409113:	lods   al,BYTE PTR ds:[esi]
  409114:	je     0x40918b
  409116:	jmp    0x12c0:0x89346d01
  40911d:	cmc    
  40911e:	inc    eax
  40911f:	jp     0x409120
  409121:	pushf  
  409122:	push   0xffffffb9
  409124:	add    al,0xb4
  409126:	repnz lds ebx,FWORD PTR [ecx+0x68ad9c0]
  40912d:	xor    ch,BYTE PTR [eax-0x107daded]
  409133:	pop    esi
  409134:	xor    DWORD PTR [ebx],ecx
  409136:	and    DWORD PTR [esi],esi
  409138:	cmp    eax,DWORD PTR [ebp+0x51]
  40913b:	sbb    DWORD PTR [edx+0x10],ecx
  40913e:	retf   
  40913f:	(bad)  
  409140:	mov    ebp,0x7e8a7d4b
  409145:	sahf   
  409146:	lods   al,BYTE PTR ds:[esi]
  409147:	mov    ds:0xa4a98650,eax
  40914c:	fidivr WORD PTR [esi]
  40914e:	and    bl,BYTE PTR [edx]
  409150:	call   0x1abc7954
  409155:	xchg   esp,eax
  409156:	mov    bh,0x3f
  409158:	std    
  409159:	int    0x8d
  40915b:	mov    ah,0x4a
  40915d:	retf   
  40915e:	xchg   edx,eax
  40915f:	icebp  
  409160:	out    dx,eax
  409161:	dec    edx
  409162:	adc    BYTE PTR [ecx+eiz*2],bh
  409165:	and    al,BYTE PTR ss:[ebp-0x11f866f2]
  40916c:	stc    
  40916d:	gs dec esi
  40916f:	shr    DWORD PTR [edx],0x69
  409172:	pop    esp
  409173:	pop    ebx
  409174:	jo     0x409155
  409176:	imul   ebp,DWORD PTR [ebp+0x3e],0x36
  40917a:	retf   0xc6fa
  40917d:	cmc    
  40917e:	jne    0x409147
  409180:	dec    esi
  409181:	int    0xb6
  409183:	in     eax,0x14
  409185:	or     DWORD PTR [edx],0xffffffd5
  409188:	(bad)  
  409189:	mov    ecx,0xbd091be1
  40918e:	adc    DWORD PTR [esi-0x6e],ebp
  409191:	pusha  
  409192:	sub    ebx,DWORD PTR [esi]
  409194:	inc    ebp
  409195:	call   0xa27a:0x361a7410
  40919c:	sbb    dl,ch
  40919e:	jnp    0x4091f4
  4091a0:	ss loope 0x40916d
  4091a3:	test   al,0x10
  4091a5:	mov    bh,0xa6
  4091a7:	(bad)  
  4091a8:	pop    eax
  4091a9:	pushf  
  4091aa:	(bad)  
  4091ab:	fprem1 
  4091ad:	jnp    0x409197
  4091af:	in     eax,0xea
  4091b1:	sub    al,0xd2
  4091b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b4:	test   eax,0x6c8c3a53
  4091b9:	enter  0x68da,0x7a
  4091bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091be:	jo     0x40917a
  4091c0:	aam    0x81
  4091c2:	or     eax,0xa65cd108
  4091c7:	fs sub eax,0x1c10fc80
  4091cd:	ins    BYTE PTR es:[edi],dx
  4091ce:	out    dx,eax
  4091cf:	test   BYTE PTR [ebp-0x3fca0fdc],0x3e
  4091d6:	test   BYTE PTR [eax+0x20c8ab3d],al
  4091dc:	and    ecx,edi
  4091de:	push   ds
  4091df:	inc    edi
  4091e0:	daa    
  4091e1:	call   0x21abf7a8
  4091e6:	ret    0xe305
  4091e9:	push   0xac72d8b6
  4091ee:	jl     0x40918c
  4091f0:	dec    ebp
  4091f1:	xchg   ecx,eax
  4091f2:	fldenv [esi+edx*4]
  4091f5:	cvtps2pi mm7,QWORD PTR [ecx]
  4091f8:	xchg   esp,eax
  4091f9:	push   ebp
  4091fa:	mov    ch,0x9e
  4091fc:	and    dh,BYTE PTR ds:[edx-0x4495ae82]
  409203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409204:	sub    BYTE PTR [eax],cl
  409206:	ins    BYTE PTR es:[edi],dx
  409207:	jno    0x40921f
  409209:	or     al,0x28
  40920b:	loope  0x409233
  40920d:	ja     0x409203
  40920f:	adc    al,0x9b
  409211:	inc    edx
  409212:	in     eax,dx
  409213:	addr16 pop edx
  409215:	rcr    edi,0x2b
  409218:	xchg   DWORD PTR [esi+0x598c783d],edi
  40921e:	mov    cl,0x26
  409220:	xor    edx,DWORD PTR [edx+0x5]
  409223:	enter  0x3b0f,0x8c
  409227:	jecxz  0x4091e4
  409229:	(bad)  
  40922a:	in     eax,dx
  40922b:	and    eax,0x2b076fc0
  409230:	push   0x63
  409232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409233:	sub    DWORD PTR [ebp-0x16],ebp
  409236:	fdivr  st,st(1)
  409238:	in     al,0x6e
  40923a:	clc    
  40923b:	mov    cl,0x41
  40923d:	loope  0x40924f
  40923f:	dec    esp
  409240:	dec    ebx
  409241:	mov    WORD PTR [eax+0x51b081a7],es
  409247:	shl    ecx,0xbe
  40924a:	out    0xc,al
  40924c:	mov    DWORD PTR [ecx+0x24387667],esp
  409252:	je     0x409261
  409254:	test   BYTE PTR [esi+0x75fe5297],dh
  40925a:	ja     0x40922d
  40925c:	in     al,0x29
  40925e:	mov    dl,0xef
  409260:	pop    edi
  409261:	sbb    eax,0x7f420880
  409266:	add    al,0xc9
  409268:	dec    edi
  409269:	inc    BYTE PTR [edi+0x7]
  40926c:	icebp  
  40926d:	mov    dh,BYTE PTR [edi-0x2]
  409270:	(bad)  
  409272:	jb     0x409258
  409274:	xchg   edx,esi
  409276:	add    BYTE PTR [edi-0xb3418fb],bl
  40927c:	dec    ecx
  40927d:	mov    edx,0xa1a78a53
  409282:	xchg   esp,eax
  409283:	les    eax,FWORD PTR [edi-0x7e350ecc]
  409289:	xchg   ebx,eax
  40928a:	mov    bh,BYTE PTR [ebp-0x446a6d1e]
  409290:	pop    edx
  409291:	jmp    FWORD PTR [esi+0x2]
  409294:	les    edx,FWORD PTR [edi-0x705d9165]
  40929a:	add    edi,DWORD PTR [ebp-0x38]
  40929d:	fimul  DWORD PTR [eax]
  40929f:	dec    esi
  4092a0:	es aam 0x4
  4092a3:	or     cl,BYTE PTR [ebp-0x19454a96]
  4092a9:	les    esp,FWORD PTR [ecx+0xe83ada4]
  4092af:	(bad)  
  4092b0:	popf   
  4092b1:	mov    edx,0xa74dffdb
  4092b6:	(bad)  
  4092b7:	shl    DWORD PTR [esi+0x84d7837],cl
  4092bd:	(bad)  
  4092be:	(bad)  
  4092bf:	jp     0x40926f
  4092c1:	out    dx,eax
  4092c2:	xchg   esp,eax
  4092c3:	push   ecx
  4092c4:	mov    edx,edx
  4092c6:	call   0x427a44d2
  4092cb:	mov    WORD PTR [esi-0x5],gs
  4092ce:	shr    ebx,1
  4092d0:	jb     0x4092bb
  4092d2:	jmp    0x58c5:0x9ceaef05
  4092d9:	jno    0x4092d9
  4092db:	sbb    ch,al
  4092dd:	(bad)  
  4092de:	pop    ecx
  4092df:	xor    BYTE PTR [eax],dh
  4092e1:	cmp    eax,DWORD PTR [ecx]
  4092e3:	sbb    dh,ch
  4092e5:	mov    esp,0xeec90124
  4092ea:	xchg   ecx,eax
  4092eb:	mov    cl,0xd
  4092ed:	or     eax,0x33a0f051
  4092f2:	iret   
  4092f3:	inc    ebp
  4092f4:	push   cs
  4092f5:	jns    0x4092a9
  4092f7:	pop    esi
  4092f8:	inc    ebx
  4092f9:	sub    al,0xa7
  4092fb:	shl    DWORD PTR [ebp+0x76],0x14
  4092ff:	adc    ebx,DWORD PTR [edi]
  409301:	sub    al,0x86
  409303:	int3   
  409304:	mov    cl,0x3b
  409306:	inc    esp
  409307:	mov    edi,0xeef551b5
  40930c:	dec    edx
  40930d:	and    al,BYTE PTR [esi+0x47]
  409310:	pusha  
  409311:	add    ah,BYTE PTR [edi-0x49]
  409314:	xor    eax,0xf107775c
  409319:	xchg   ebp,eax
  40931a:	xor    al,0xc8
  40931c:	loope  0x409397
  40931e:	out    dx,al
  40931f:	aaa    
  409320:	jp     0x4092c7
  409322:	sub    eax,0x266d7279
  409327:	xlat   BYTE PTR ds:[ebx]
  409328:	xor    BYTE PTR [edi-0x50bcea62],ah
  40932e:	mov    esi,0xc99323ab
  409333:	imul   esp,DWORD PTR [eax-0x50],0x14
  409337:	pop    esi
  409338:	xchg   edx,eax
  409339:	push   esp
  40933a:	fcomi  st,st(1)
  40933c:	push   edx
  40933d:	push   eax
  40933e:	inc    DWORD PTR [eax+ecx*8-0x6cfc7460]
  409345:	mov    ebp,0xc3f15e91
  40934a:	jno    0x40931f
  40934c:	clc    
  40934d:	xor    BYTE PTR [edi],bl
  40934f:	xor    ebp,0xf11f5e86
  409355:	clc    
  409356:	or     eax,DWORD PTR [esi+0x13eeef86]
  40935c:	(bad)  
  40935e:	in     eax,dx
  40935f:	aaa    
  409360:	sub    al,BYTE PTR [ebx]
  409362:	cmp    al,0xad
  409364:	xchg   esp,eax
  409365:	(bad)  [edx]
  409367:	popa   
  409368:	push   eax
  409369:	into   
  40936a:	(bad)  
  40936b:	or     bl,BYTE PTR [esi-0x247901cd]
  409371:	inc    ebp
  409372:	mov    cs,eax
  409374:	dec    BYTE PTR [edi]
  409376:	scas   ax,WORD PTR es:[edi]
  409378:	jp     0x40932c
  40937a:	mov    bl,0xe9
  40937c:	sub    BYTE PTR [eax-0x60d995fb],ch
  409382:	dec    edi
  409383:	xchg   edi,eax
  409384:	dec    eax
  409385:	je     0x409341
  409387:	ins    DWORD PTR es:[edi],dx
  409388:	dec    esp
  409389:	jp     0x4093ad
  40938b:	xchg   esi,eax
  40938c:	leave  
  40938d:	xchg   BYTE PTR [ebx-0x14],bh
  409390:	push   edi
  409391:	add    BYTE PTR [ebp+0x286e5bfd],0x3d
  409398:	aad    0x56
  40939a:	(bad)  
  40939b:	sbb    cl,BYTE PTR [ecx-0x80]
  40939e:	(bad)  
  40939f:	xor    eax,0x64166d6d
  4093a4:	inc    edx
  4093a5:	retf   
  4093a6:	pop    ebp
  4093a7:	dec    esp
  4093a8:	push   es
  4093a9:	test   BYTE PTR [eax+ebp*2+0x49c848b6],cl
  4093b0:	adc    al,0x6f
  4093b2:	mov    esi,0x2f042916
  4093b7:	jg     0x4093d6
  4093b9:	mov    ebx,DWORD PTR [edi]
  4093bb:	loope  0x40943c
  4093bd:	test   BYTE PTR [esi-0x2],bh
  4093c0:	or     DWORD PTR [ebx-0x57],edi
  4093c3:	mov    ah,0x73
  4093c5:	mov    ebx,eax
  4093c7:	xlat   BYTE PTR ds:[ebx]
  4093c8:	nop
  4093c9:	pusha  
  4093ca:	in     al,dx
  4093cb:	and    al,0x7
  4093cd:	not    BYTE PTR [esi+0x61]
  4093d0:	mov    al,bh
  4093d2:	mov    edx,0x8dcdb9db
  4093d7:	push   esi
  4093d8:	pop    ebx
  4093d9:	dec    ebp
  4093da:	imul   ebp,DWORD PTR [edi],0x2186384
  4093e0:	jns    0x4093b3
  4093e2:	add    BYTE PTR [edx],bl
  4093e4:	out    0x26,al
  4093e6:	in     al,dx
  4093e7:	popa   
  4093e8:	xchg   edi,eax
  4093e9:	popf   
  4093ea:	inc    ecx
  4093eb:	add    eax,edx
  4093ed:	inc    ebx
  4093ee:	xor    ch,BYTE PTR [ebx]
  4093f0:	call   0x4d83cbc3
  4093f5:	cld    
  4093f6:	push   ss
  4093f7:	xchg   ebp,eax
  4093f8:	push   0xffffffaf
  4093fa:	cs mov esi,0x7e4e6c2a
  409400:	jae    0x4093a2
  409402:	mov    edx,0x65357482
  409407:	dec    edi
  409408:	sar    BYTE PTR [ecx+ebx*1-0x5c84ac3d],1
  40940f:	out    dx,al
  409410:	lods   al,BYTE PTR ds:[esi]
  409411:	and    ecx,eax
  409413:	adc    eax,0xa99127a1
  409418:	sbb    al,0xf3
  40941a:	loope  0x409498
  40941c:	sahf   
  40941d:	rcr    BYTE PTR ds:0x1fb2a153,cl
  409423:	jne    0x409479
  409425:	add    ecx,DWORD PTR [eax]
  409427:	gs call 0x3d4b:0x63c89568
  40942f:	and    ah,BYTE PTR [ebx+0x1df488e5]
  409435:	lock cli 
  409437:	popf   
  409438:	xchg   edx,eax
  409439:	pop    edx
  40943a:	and    eax,0x85fb0d4a
  40943f:	sar    BYTE PTR [eax-0x16],cl
  409442:	ds sbb eax,0xb6405776
  409448:	imul   edi,DWORD PTR [eax+0x3d],0xffffffab
  40944c:	or     eax,0xbe01adda
  409451:	lahf   
  409452:	(bad)  
  409453:	lock mov DWORD PTR [ebx+ebx*1-0x63],ecx
  409458:	jg     0x4094a7
  40945a:	dec    ecx
  40945b:	xor    ebx,DWORD PTR [ecx+0x407026c9]
  409461:	popa   
  409462:	push   ebx
  409463:	adc    DWORD PTR [eax-0x43337b73],esp
  409469:	jl     0x4094e7
  40946b:	in     eax,0x5d
  40946d:	or     ebp,edi
  40946f:	adc    DWORD PTR [edx+0x5bba4168],esi
  409475:	sbb    al,0x91
  409477:	sub    ebp,DWORD PTR [edi+0x25]
  40947a:	lea    ebp,[ebp-0x44]
  40947d:	cmp    al,0xc7
  40947f:	sbb    eax,0xf725a82
  409484:	das    
  409485:	mov    eax,esp
  409487:	xchg   esi,eax
  409488:	cmp    eax,0x1865abd9
  40948d:	pop    ebp
  40948e:	mov    ah,0x39
  409490:	ret    
  409491:	out    0x86,al
  409493:	pop    ecx
  409494:	shl    DWORD PTR [ebp-0x46],1
  409497:	rol    BYTE PTR [edi],1
  409499:	mov    edx,0x6fe25d61
  40949e:	mov    eax,0xdd32c0fb
  4094a3:	ret    
  4094a4:	xor    esp,DWORD PTR [esi+0x44]
  4094a7:	rep stos BYTE PTR es:[edi],al
  4094a9:	ins    DWORD PTR es:[edi],dx
  4094aa:	arpl   WORD PTR ds:0xd83beeca,di
  4094b0:	stos   BYTE PTR es:[edi],al
  4094b1:	xchg   esp,eax
  4094b2:	and    BYTE PTR [ecx+eiz*8],0x94
  4094b6:	jae    0x409451
  4094b8:	inc    ecx
  4094b9:	inc    ebx
  4094ba:	mov    ebp,0x7b277d4a
  4094bf:	(bad)  
  4094c0:	dec    esi
  4094c1:	sub    eax,0xcc771bbb
  4094c6:	mov    al,0x2d
  4094c8:	cmc    
  4094c9:	loope  0x40949e
  4094cb:	add    BYTE PTR [ebp-0x5a],al
  4094ce:	jae    0x4094f5
  4094d0:	jns    0x409537
  4094d2:	call   0x1b2cfd6f
  4094d7:	mov    edi,0x7e769210
  4094dc:	xchg   BYTE PTR [esi-0x62b57827],ah
  4094e2:	sbb    esp,DWORD PTR [edi+ebx*4-0x4e]
  4094e6:	mov    edi,0x759d2f59
  4094eb:	dec    esi
  4094ec:	or     BYTE PTR [edi],dh
  4094ee:	sub    dh,BYTE PTR [edx+0x1585e4a2]
  4094f4:	loopne 0x40953d
  4094f6:	dec    ebp
  4094f7:	push   es
  4094f8:	dec    edx
  4094f9:	shl    edi,0x4c
  4094fc:	jno    0x4094ca
  4094fe:	and    BYTE PTR [ebp-0x1bc61803],0x5
  409505:	cmp    DWORD PTR [edi],esi
  409507:	sbb    BYTE PTR [esi+0x60],ah
  40950a:	ja     0x4094d6
  40950c:	ds sahf 
  40950e:	mov    ds:0x8f8ca41b,al
  409513:	push   esi
  409514:	fist   WORD PTR [eax+0x12]
  409517:	push   ecx
  409518:	pop    ebp
  409519:	(bad)  
  40951a:	lock test DWORD PTR [esp+eax*4],ecx
  40951e:	inc    ecx
  40951f:	ror    BYTE PTR [ebx],1
  409521:	sub    ebx,DWORD PTR [ebx+0x7cd22f3]
  409527:	out    0x79,al
  409529:	and    DWORD PTR [esi+0x7dea888e],ebx
  40952f:	xor    al,0xa
  409531:	sub    BYTE PTR [ebx],cl
  409533:	push   edx
  409534:	adc    ah,BYTE PTR [ebp-0x525dc34]
  40953a:	mov    bl,0xc3
  40953c:	dec    ebp
  40953d:	add    eax,0xfb8ed59b
  409542:	inc    edi
  409543:	gs push cs
  409545:	pop    edi
  409546:	int3   
  409547:	jecxz  0x4095a0
  409549:	sbb    al,0x98
  40954b:	sahf   
  40954c:	cmp    al,0x8c
  40954e:	or     bl,BYTE PTR [eax-0x48]
  409551:	pop    ecx
  409552:	cmp    bh,BYTE PTR [eax]
  409554:	push   ebp
  409555:	lea    esp,[edx+ecx*2]
  409558:	lea    esp,[ebp+0x31]
  40955b:	(bad)  [esp+ebx*8]
  40955e:	and    eax,0x71af520a
  409563:	adc    edi,DWORD PTR [eax+ebx*2+0x7b90da0c]
  40956a:	pop    eax
  40956b:	jl     0x40953b
  40956d:	imul   eax,DWORD PTR [ebx-0x69],0x14
  409571:	mov    cl,0x64
  409573:	mov    WORD PTR [ebp+edx*8+0x1],ss
  409577:	mov    gs,WORD PTR [edi-0x3ae3e08]
  40957d:	push   edi
  40957e:	mov    eax,ds:0x894be680
  409583:	loopne 0x4095ea
  409585:	push   esi
  409586:	test   edx,esi
  409588:	ins    BYTE PTR es:[edi],dx
  409589:	push   cs
  40958a:	in     al,0xd5
  40958c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958d:	ins    BYTE PTR es:[edi],dx
  40958e:	and    bl,dh
  409590:	loopne 0x409551
  409592:	sbb    edi,DWORD PTR cs:[ecx-0x4a419bec]
  409599:	arpl   WORD PTR [ebp+0x42],ax
  40959c:	xor    eax,0x9e35cbd5
  4095a1:	and    cl,BYTE PTR [ecx]
  4095a3:	inc    edi
  4095a4:	push   ss
  4095a5:	pop    es
  4095a6:	or     eax,0x5477bdeb
  4095ab:	push   0x168fdc9c
  4095b0:	add    eax,0x9d6bd9
  4095b5:	cmp    DWORD PTR [ebp+0x455ea15],ebp
  4095bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095bc:	idiv   DWORD PTR [edx]
  4095be:	pop    esi
  4095bf:	fild   WORD PTR [edi-0x58c959a]
  4095c5:	mov    BYTE PTR [edi+0x505b8a47],0xa4
  4095cc:	shr    esi,0x13
  4095cf:	call   0x7310:0x56c7cb4
  4095d6:	fsubr  QWORD PTR [edi-0x12]
  4095d9:	out    0xd9,al
  4095db:	xchg   DWORD PTR [ebp+0x6ab2ef09],eax
  4095e1:	mov    BYTE PTR [ebx-0x5e],bh
  4095e4:	mov    ch,0x7f
  4095e6:	add    dl,bl
  4095e8:	fld    TBYTE PTR [edx]
  4095ea:	dec    edx
  4095eb:	cwde   
  4095ec:	cmp    edi,DWORD PTR [edi]
  4095ee:	scas   eax,DWORD PTR es:[edi]
  4095ef:	sbb    al,0x22
  4095f1:	(bad)  
  4095f2:	sbb    esi,ebx
  4095f4:	or     DWORD PTR ss:[esi+0x63c5c05d],eax
  4095fb:	mul    DWORD PTR [ecx]
  4095fd:	pop    esp
  4095fe:	add    esi,DWORD PTR [ebp+0x2f]
  409601:	sar    BYTE PTR [ecx-0x7],1
  409604:	in     eax,dx
  409605:	(bad)  
  409606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409607:	cmp    bh,BYTE PTR [ecx-0x46]
  40960a:	sub    bl,dh
  40960c:	mov    esp,0x93964a52
  409611:	(bad)  
  409612:	aad    0xfb
  409614:	rol    DWORD PTR [ebx+ecx*2],cl
  409617:	cli    
  409618:	hlt    
  409619:	sbb    DWORD PTR [esi+0x13170319],ebx
  40961f:	adc    ecx,DWORD PTR [ebx+0x6c]
  409622:	sbb    DWORD PTR [ecx],ebp
  409624:	das    
  409625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409626:	hlt    
  409627:	sub    eax,0xc4b29a10
  40962c:	sub    al,BYTE PTR [edi+0x7517c274]
  409632:	sub    al,0x85
  409634:	jbe    0x409608
  409636:	push   eax
  409637:	xor    al,0xe2
  409639:	mov    al,gs:0x4b46343
  40963f:	shl    DWORD PTR [edx+0x42],0x61
  409643:	and    eax,0x2530278
  409648:	bound  ebp,QWORD PTR [ecx-0x58a0fd38]
  40964e:	les    ecx,FWORD PTR [ebp-0x16]
  409651:	mov    bl,dl
  409653:	jecxz  0x40967f
  409655:	jne    0x409682
  409657:	lods   al,BYTE PTR ds:[esi]
  409658:	not    DWORD PTR [edx-0x76475398]
  40965e:	(bad)  
  40965f:	ror    BYTE PTR [eax],cl
  409661:	outs   dx,BYTE PTR ds:[esi]
  409662:	inc    ecx
  409663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409664:	fdivr  st,st(7)
  409666:	or     dl,ah
  409668:	fstp   TBYTE PTR [edx+0x63]
  40966b:	rcr    DWORD PTR [ecx+ecx*1+0x36ab27e8],1
  409672:	push   esp
  409673:	fild   QWORD PTR [esi+0x4ec07041]
  409679:	lea    esi,[edx*2-0x6dd67a43]
  409680:	add    bh,BYTE PTR [ecx-0x27]
  409683:	ret    
  409684:	cmc    
  409685:	xlat   BYTE PTR ds:[ebx]
  409686:	fdivr  st(5),st
  409688:	push   ecx
  409689:	(bad)  
  40968a:	jne    0x4096cc
  40968c:	jbe    0x4096f3
  40968e:	sub    al,0xaa
  409690:	retf   
  409691:	(bad)  
  409692:	loopne 0x4096e3
  409694:	add    DWORD PTR [eax+0x1c31dbfb],esp
  40969a:	out    0xcc,al
  40969c:	test   BYTE PTR [ebp+0xf],ah
  40969f:	sub    DWORD PTR [ecx],eax
  4096a1:	in     al,0x4a
  4096a3:	jecxz  0x4096fb
  4096a5:	mov    BYTE PTR [ebx],0x6b
  4096a8:	lea    ebx,ds:0x34a115c2
  4096ae:	xor    dh,bh
  4096b0:	pop    ecx
  4096b1:	and    DWORD PTR [esi-0x6cc6e606],eax
  4096b7:	stc    
  4096b8:	mov    eax,0x446dac94
  4096bd:	pop    esi
  4096be:	int    0xd2
  4096c0:	mov    bh,0x61
  4096c2:	add    edi,DWORD PTR [ecx]
  4096c4:	rcl    BYTE PTR [ebx+0x3dec6b85],1
  4096ca:	inc    ebp
  4096cb:	mov    BYTE PTR [esi],bl
  4096cd:	shl    DWORD PTR [ebx],1
  4096cf:	pop    esp
  4096d0:	adc    edx,edi
  4096d2:	inc    ebx
  4096d3:	out    0x99,al
  4096d5:	in     eax,0xac
  4096d7:	sti    
  4096d8:	xchg   ebx,eax
  4096d9:	fdiv   st,st(6)
  4096db:	sub    al,0x21
  4096dd:	sub    bh,al
  4096df:	jns    0x4096b0
  4096e1:	pop    ebx
  4096e2:	iret   
  4096e3:	cmp    DWORD PTR [ebp-0x11a7c67],esp
  4096e9:	jo     0x409717
  4096eb:	or     dh,al
  4096ed:	scas   al,BYTE PTR es:[edi]
  4096ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ef:	out    dx,eax
  4096f0:	mov    DWORD PTR [ecx+0x2510deab],edi
  4096f6:	stc    
  4096f7:	sahf   
  4096f8:	sub    bh,cl
  4096fa:	push   esp
  4096fb:	mov    ds:0x7814a4a1,eax
  409700:	mov    ebp,0xda98fb83
  409705:	mov    dl,0x37
  409707:	sbb    edx,DWORD PTR [ecx-0x33bccb91]
  40970d:	fst    QWORD PTR [esi]
  40970f:	mov    cl,0x14
  409711:	add    DWORD PTR [edx],0x321b9481
  409717:	mov    eax,0xea33a3a2
  40971c:	in     eax,dx
  40971d:	(bad)  
  40971e:	imul   ebx,DWORD PTR [edi+ebx*1],0x31e8e056
  409725:	dec    esp
  409726:	fst    DWORD PTR [edx-0x67]
  409729:	rcl    BYTE PTR [ebx+0x6e],cl
  40972c:	jecxz  0x409711
  40972e:	addr16 mov ecx,0x438ec87f
  409734:	push   ebp
  409735:	ror    DWORD PTR [ebp+0x2],cl
  409738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409739:	mov    ebp,0x823207fa
  40973e:	(bad)  
  40973f:	xor    ch,ah
  409741:	dec    esp
  409742:	stos   BYTE PTR es:[edi],al
  409743:	pop    eax
  409744:	pop    DWORD PTR [esi]
  409746:	mov    esi,0x67714c30
  40974b:	add    DWORD PTR [eax+0x62],ebx
  40974e:	sub    eax,0xbb12ded5
  409753:	rcr    DWORD PTR [edx-0x60],1
  409756:	es loop 0x4097a9
  409759:	xor    ecx,esi
  40975b:	push   0xd1e8f20c
  409760:	fild   DWORD PTR [edx+0x17fb31f8]
  409766:	fwait
  409767:	in     al,0xd2
  409769:	cdq    
  40976a:	cmp    DWORD PTR [ebx+0x57],ebx
  40976d:	repz loop 0x40974a
  409770:	jle    0x4097e7
  409772:	adc    ebx,DWORD PTR [ebp+ecx*2-0x5b8d6f55]
  409779:	and    DWORD PTR [eax],ebp
  40977b:	test   eax,0x9199439c
  409780:	iret   
  409781:	sub    BYTE PTR [esi+eiz*2+0x5c247707],0x94
  409789:	dec    ecx
  40978a:	adc    eax,0x722a58a7
  40978f:	mov    eax,ds:0xe0e9fae2
  409794:	mov    ds:0x61ab885,al
  409799:	mov    al,ds:0x5f63edc8
  40979e:	sub    BYTE PTR [eax-0x37],dl
  4097a1:	shr    al,cl
  4097a3:	dec    esi
  4097a4:	mov    ebx,0x90360e89
  4097a9:	dec    ebx
  4097aa:	loop   0x4097dc
  4097ac:	inc    ebx
  4097ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ae:	xor    esp,DWORD PTR [ebx+0x42458b42]
  4097b4:	add    esi,DWORD PTR [ecx+0x2a3a4aac]
  4097ba:	hlt    
  4097bb:	mov    eax,0xce156ecb
  4097c0:	js     0x4097cb
  4097c2:	out    0xd1,al
  4097c4:	les    esi,FWORD PTR [edx+edi*4+0x3]
  4097c8:	pop    ecx
  4097c9:	jmp    0x6efb:0xe0e631d0
  4097d0:	ror    ecx,1
  4097d2:	sbb    DWORD PTR [edi-0x53393a8],0xaf6b1655
  4097dc:	retf   0x6de3
  4097df:	jbe    0x409823
  4097e1:	test   al,0x55
  4097e3:	nop
  4097e4:	std    
  4097e5:	inc    edx
  4097e6:	and    dh,BYTE PTR [ecx+esi*1+0x3c0a11c5]
  4097ed:	pop    esp
  4097ee:	pop    esp
  4097ef:	add    al,0x9b
  4097f1:	fld    QWORD PTR [edi+ebx*2-0x59fbc799]
  4097f8:	int    0x2
  4097fa:	or     BYTE PTR [ecx],bl
  4097fc:	fidivr WORD PTR [ebx]
  4097fe:	enter  0x6310,0x7f
  409802:	into   
  409803:	pop    ecx
  409804:	popf   
  409805:	jg     0x40981a
  409807:	lds    ebx,FWORD PTR [esi-0x459fc608]
  40980d:	xor    al,0x8d
  40980f:	jae    0x4097b3
  409811:	push   ecx
  409812:	mov    WORD PTR [ecx-0x3c],ds
  409815:	xor    eax,0x6f
  409818:	push   ds
  409819:	mov    dl,0x22
  40981b:	pop    ebx
  40981c:	outs   dx,BYTE PTR ds:[esi]
  40981d:	inc    edi
  40981e:	lds    ebx,FWORD PTR [ecx]
  409820:	pop    eax
  409821:	sub    esp,ebx
  409823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409824:	mov    ah,0xbe
  409826:	inc    ecx
  409827:	mov    dl,0x37
  409829:	ins    DWORD PTR es:[edi],dx
  40982a:	pop    eax
  40982b:	ror    BYTE PTR [edx-0x37],1
  40982e:	inc    edi
  40982f:	pop    ecx
  409830:	(bad)  
  409831:	data16 cmp bl,BYTE PTR [esi-0x3e709b11]
  409838:	(bad)  
  40983a:	jmp    0x14b0:0x8aaa1643
  409841:	adc    ebx,DWORD PTR [edx-0x3d]
  409844:	cmp    ah,BYTE PTR [ecx+0x5]
  409847:	adc    edx,ecx
  409849:	cli    
  40984a:	xor    edi,DWORD PTR [esi+0x44]
  40984d:	stos   DWORD PTR es:[di],eax
  40984f:	cmp    DWORD PTR [ecx-0x8],edi
  409852:	and    bh,BYTE PTR [edi+0x2a99029f]
  409858:	or     al,BYTE PTR [ecx]
  40985a:	inc    edi
  40985b:	out    0x3e,eax
  40985d:	or     bl,BYTE PTR [esi+edi*8+0x46bd413d]
  409864:	mov    ah,BYTE PTR [edx+ecx*8-0x23]
  409868:	dec    ecx
  409869:	lods   eax,DWORD PTR ds:[esi]
  40986a:	cs int 0x3
  40986d:	test   eax,0x3f7c63f8
  409872:	ss in  eax,dx
  409874:	loop   0x4098e2
  409876:	add    DWORD PTR [ebx+0x4bd2b955],esp
  40987c:	cmp    al,0x0
  40987e:	inc    ebp
  40987f:	mov    bh,0xad
  409881:	pandn  mm5,QWORD PTR [ecx]
  409884:	adc    eax,0xbbaf9b41
  409889:	stos   BYTE PTR es:[edi],al
  40988a:	cmp    dh,BYTE PTR [esi-0x7a]
  40988d:	das    
  40988e:	outs   dx,BYTE PTR ds:[esi]
  40988f:	cmp    al,BYTE PTR [edx-0x423f3d96]
  409895:	inc    edi
  409896:	sbb    eax,0xd8b2bd86
  40989b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40989c:	stos   DWORD PTR es:[edi],eax
  40989d:	fcom   st(4)
  40989f:	jbe    0x40984d
  4098a1:	adc    al,0xb7
  4098a3:	or     eax,0x58a4d6b8
  4098a8:	pop    ebx
  4098a9:	daa    
  4098aa:	push   es
  4098ab:	inc    ecx
  4098ac:	rcl    bh,0xc1
  4098af:	lea    ebp,[eax]
  4098b1:	mov    WORD PTR [edx+ebp*4],es
  4098b4:	mov    fs,WORD PTR [ebp-0x4]
  4098b7:	push   ebx
  4098b8:	outs   dx,DWORD PTR ds:[esi]
  4098b9:	adc    al,0x69
  4098bb:	out    0x26,al
  4098bd:	dec    ecx
  4098be:	jmp    0x40991e
  4098c0:	cmp    ecx,ebp
  4098c2:	mov    ds:0x53a202d5,eax
  4098c7:	fild   QWORD PTR [ebp+ebx*8+0x4f38c6fa]
  4098ce:	push   ecx
  4098cf:	cwde   
  4098d0:	dec    ebp
  4098d1:	or     eax,0xd26cae23
  4098d6:	stos   DWORD PTR es:[edi],eax
  4098d7:	and    BYTE PTR [edx],0xba
  4098da:	add    edi,DWORD PTR [eax]
  4098dc:	int    0x43
  4098de:	or     ch,BYTE PTR ds:0x20a9d844
  4098e4:	pop    edx
  4098e5:	mov    ah,0x71
  4098e7:	shr    BYTE PTR [eax+0x58],1
  4098ea:	mov    eax,0x4a1f2b59
  4098ef:	xchg   ebx,eax
  4098f0:	pop    ebx
  4098f1:	(bad)  
  4098f2:	cmp    esi,DWORD PTR [eax+esi*8]
  4098f5:	pop    ecx
  4098f6:	aad    0x33
  4098f8:	das    
  4098f9:	xor    ebp,DWORD PTR [edx+ebp*8-0x175292fc]
  409900:	sbb    ebx,DWORD PTR [eax-0x10a32c2f]
  409906:	shl    BYTE PTR [edi],cl
  409908:	push   cs
  409909:	jmp    0x5109:0x8d588740
  409910:	mov    ah,0x44
  409912:	xor    BYTE PTR [edx-0x3c],ch
  409915:	inc    edx
  409916:	push   es
  409917:	scas   eax,DWORD PTR es:[edi]
  409918:	test   eax,0xa5955aee
  40991d:	cmp    BYTE PTR [edi],0xe8
  409920:	and    eax,0xcecbe9cb
  409925:	test   DWORD PTR [edx],0x9fceb264
  40992b:	loopne 0x409949
  40992d:	gs das 
  40992f:	xchg   esi,eax
  409930:	int    0x78
  409932:	stos   BYTE PTR es:[edi],al
  409933:	mov    ds:0x4614979a,al
  409938:	scas   eax,DWORD PTR es:[edi]
  409939:	scas   al,BYTE PTR es:[edi]
  40993a:	shl    BYTE PTR [eax],0xb5
  40993d:	lahf   
  40993e:	int    0xf6
  409940:	inc    ecx
  409941:	ficom  DWORD PTR [ebp+0x481e6d36]
  409947:	add    ebp,DWORD PTR [edx+0x4d]
  40994a:	lea    ebx,[eax]
  40994c:	hlt    
  40994d:	add    edx,DWORD PTR [edx]
  40994f:	dec    edx
  409950:	mov    ds:0xf5f8c2b4,eax
  409955:	iret   
  409956:	addr16 dec ebp
  409958:	xchg   eax,edx
  40995a:	hlt    
  40995b:	cmp    BYTE PTR [eax+0x56c1a040],0x2d
  409962:	sbb    BYTE PTR [ecx-0x24],cl
  409965:	cwde   
  409966:	fstp   QWORD PTR [esp+ebp*1]
  409969:	in     al,dx
  40996a:	outs   dx,DWORD PTR ds:[esi]
  40996b:	sti    
  40996c:	cmp    eax,0x2c9d587c
  409971:	xchg   ebp,eax
  409972:	xchg   ebp,eax
  409973:	jo     0x409983
  409975:	lock mov cs,WORD PTR [ecx]
  409978:	or     esi,DWORD PTR [ecx+eiz*8]
  40997b:	call   0x1627:0x626fac31
  409982:	aaa    
  409983:	dec    ebx
  409984:	adc    bh,BYTE PTR [esp+ecx*2+0x4f]
  409988:	pop    es
  409989:	pop    eax
  40998a:	lods   eax,DWORD PTR ds:[esi]
  40998b:	mov    edi,0x526188c2
  409990:	adc    eax,0x65f507ca
  409995:	dec    esp
  409996:	or     bl,al
  409998:	adc    ebx,DWORD PTR [edi]
  40999a:	(bad)  
  40999b:	push   esp
  40999c:	ins    DWORD PTR es:[edi],dx
  40999d:	ss fstp TBYTE PTR gs:[eax-0x781f2e63]
  4099a5:	pop    ebp
  4099a6:	and    BYTE PTR [ecx-0x41],al
  4099a9:	rcr    BYTE PTR [edi],1
  4099ab:	xor    dl,al
  4099ad:	pop    es
  4099ae:	xchg   DWORD PTR [esi],ecx
  4099b0:	out    dx,eax
  4099b1:	or     bl,bl
  4099b3:	mov    al,es:0x82c59bc7
  4099b9:	push   edx
  4099ba:	(bad)  
  4099bb:	xor    eax,0x98c99b11
  4099c0:	xchg   ebx,eax
  4099c1:	mov    cl,0x8f
  4099c3:	(bad)  
  4099c4:	sub    ecx,DWORD PTR [edx]
  4099c6:	pushf  
  4099c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099c8:	inc    ebp
  4099c9:	(bad)  
  4099ca:	xchg   ebx,eax
  4099cb:	dec    ebp
  4099cc:	ja     0x4099fe
  4099ce:	pop    edx
  4099cf:	push   edx
  4099d0:	mov    DWORD PTR [esi+0x4e1af14a],esp
  4099d6:	xchg   ecx,eax
  4099d7:	sbb    al,BYTE PTR [esi-0x6c53a6fc]
  4099dd:	xor    al,0x66
  4099df:	test   eax,0xb9aeb6fc
  4099e4:	jae    0x4099ad
  4099e6:	xor    eax,0x18370b46
  4099eb:	mov    cl,0xb6
  4099ed:	idiv   ah
  4099ef:	inc    eax
  4099f0:	lds    ebp,FWORD PTR [eax+0x6b]
  4099f3:	icebp  
  4099f4:	ds nop
  4099f6:	sub    bh,BYTE PTR [edi]
  4099f8:	loopne 0x4099bd
  4099fa:	ficom  DWORD PTR [esi+0x2d]
  4099fd:	sbb    ah,BYTE PTR ds:0xac860a83
  409a03:	jge    0x4099c4
  409a05:	mov    ebx,es
  409a07:	push   0x51
  409a09:	cmp    dh,BYTE PTR [ebx-0x6275f2b4]
  409a0f:	xor    esi,esp
  409a11:	pop    es
  409a12:	jle    0x4099d3
  409a14:	mov    ah,0x5c
  409a16:	ins    BYTE PTR es:[edi],dx
  409a17:	mov    dh,0x40
  409a19:	add    BYTE PTR [ecx+0x3bcc9ab6],cl
  409a1f:	or     eax,0xa8f5fe1d
  409a24:	(bad)  
  409a25:	(bad)  [esi]
  409a27:	pop    es
  409a28:	ins    BYTE PTR es:[edi],dx
  409a29:	mov    edi,0x1d814e73
  409a2e:	mov    ss,WORD PTR [ebx-0xdb65b84]
  409a34:	push   es
  409a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a36:	ficomp WORD PTR gs:[esi+0x3a]
  409a3a:	cmp    eax,0x6114853f
  409a3f:	fld    QWORD PTR [ebx]
  409a41:	jnp    0x409a21
  409a43:	xchg   ecx,eax
  409a44:	fst    QWORD PTR [ebx-0x12]
  409a47:	(bad)  
  409a48:	pop    ss
  409a49:	ret    
  409a4a:	inc    ebp
  409a4b:	dec    ecx
  409a4c:	jp     0x409a21
  409a4e:	sub    al,0xd3
  409a50:	lods   al,BYTE PTR ds:[esi]
  409a51:	pop    eax
  409a52:	and    eax,0x91aa2c55
  409a57:	out    0xe2,al
  409a59:	cmovl  ecx,DWORD PTR [eax+0x6401e572]
  409a60:	lea    ebx,[edx+0x1a]
  409a63:	mov    eax,0xfdf8a5b8
  409a68:	mov    edi,0xdbe043cc
  409a6d:	and    DWORD PTR [ebx],0xa0399350
  409a73:	dec    ebx
  409a74:	xchg   ebx,eax
  409a75:	pop    esp
  409a76:	mov    al,ds:0x27b46c9f
  409a7b:	mov    dh,BYTE PTR [esi+0x38b3cb9e]
  409a81:	pop    ecx
  409a82:	inc    esp
  409a83:	add    DWORD PTR [edi+0x622c9af1],esp
  409a89:	mov    eax,ds:0x62cbe00
  409a8e:	gs xchg ebp,eax
  409a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a91:	test   DWORD PTR [eax-0x25],0xc3e11699
  409a98:	add    ebp,ecx
  409a9a:	sbb    ah,cl
  409a9c:	jecxz  0x409a9f
  409a9e:	cli    
  409a9f:	push   ds
  409aa0:	pop    edx
  409aa1:	fdivr  DWORD PTR [edx-0x45addd64]
  409aa7:	pop    esi
  409aa8:	std    
  409aa9:	rol    DWORD PTR [edi+0x7b],1
  409aac:	jo     0x409b28
  409aae:	jns    0x409b18
  409ab0:	dec    ebp
  409ab1:	mov    ecx,DWORD PTR [ecx-0xfda93c8]
  409ab7:	sbb    DWORD PTR [esi-0x20778ed7],eax
  409abd:	ins    BYTE PTR es:[edi],dx
  409abe:	stos   DWORD PTR es:[edi],eax
  409abf:	test   eax,0x33d169fa
  409ac4:	adc    bh,al
  409ac6:	imul   edi,esp,0x6a50d90a
  409acc:	pop    esp
  409acd:	push   ebp
  409ace:	sbb    bh,BYTE PTR [esi+ebx*8+0x4]
  409ad2:	rcr    DWORD PTR [edi+0xdb3332a],1
  409ad8:	sbb    BYTE PTR [eax-0x36],0x94
  409adc:	or     eax,0xf9614db7
  409ae1:	jo     0x409adc
  409ae3:	add    BYTE PTR [ebx+0x3878eb16],0xf3
  409aea:	mov    eax,ds:0xf7dbf798
  409aef:	lods   eax,DWORD PTR ds:[esi]
  409af0:	inc    ecx
  409af1:	jmp    0x80041a4c
  409af6:	frstor [eax]
  409af8:	xchg   ecx,eax
  409af9:	clc    
  409afa:	jg     0x409b2a
  409afc:	imul   esp,DWORD PTR [edi],0x7db841c2
  409b02:	push   edi
  409b03:	inc    ebp
  409b04:	repz cld 
  409b06:	popf   
  409b07:	mul    DWORD PTR [edi]
  409b09:	and    bl,dl
  409b0b:	(bad)  [edx-0x51]
  409b0e:	in     al,0x2
  409b10:	push   ebx
  409b11:	sbb    al,0xf3
  409b13:	push   0xffffffcb
  409b15:	jnp    0x409b7e
  409b17:	in     al,dx
  409b18:	fcom   DWORD PTR [ecx+0x76]
  409b1b:	je     0x409b63
  409b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b1e:	pop    ebx
  409b1f:	ret    
  409b20:	fbld   TBYTE PTR [ecx+0x17]
  409b23:	int    0x5a
  409b25:	ret    
  409b26:	xchg   esp,eax
  409b27:	in     al,0xe7
  409b29:	mov    al,ah
  409b2b:	faddp  st(3),st
  409b2d:	xchg   ebp,eax
  409b2e:	cmc    
  409b2f:	and    al,0x72
  409b31:	mov    ss,ecx
  409b33:	sub    BYTE PTR [edx],cl
  409b35:	xor    BYTE PTR [esi],0x14
  409b38:	frstor [esi-0x32]
  409b3b:	mov    ebx,0xcb859ae6
  409b40:	add    ebx,ebx
  409b42:	out    0x55,eax
  409b44:	shr    BYTE PTR [edi-0x8],1
  409b47:	jmp    0x409afd
  409b49:	rcr    BYTE PTR ds:0xd08d987c,0xeb
  409b50:	sbb    eax,0x4f52cf98
  409b55:	sub    cl,BYTE PTR [ecx]
  409b57:	shl    BYTE PTR [esi],0x15
  409b5a:	pop    ebp
  409b5b:	mov    bh,0xb1
  409b5d:	aaa    
  409b5e:	xchg   ah,dl
  409b60:	xchg   edi,eax
  409b61:	sbb    BYTE PTR [ebp+0xe59c424],ah
  409b67:	lods   eax,DWORD PTR ds:[esi]
  409b68:	mov    bh,0xdb
  409b6a:	das    
  409b6b:	iret   
  409b6c:	inc    edx
  409b6d:	shl    DWORD PTR [edx+0x7e],1
  409b70:	inc    ecx
  409b71:	mov    al,ds:0x8db6955c
  409b76:	and    DWORD PTR [ebp+0x2ec94d1c],ebp
  409b7c:	push   edx
  409b7d:	mov    ah,BYTE PTR [esi+0x6506fae4]
  409b83:	ins    DWORD PTR es:[edi],dx
  409b84:	push   edi
  409b85:	inc    edx
  409b86:	ins    BYTE PTR es:[edi],dx
  409b87:	jecxz  0x409b85
  409b89:	xor    eax,ecx
  409b8b:	addr16 pop ds
  409b8d:	mov    ebp,0xb12b6b89
  409b92:	adc    eax,ebx
  409b94:	xor    ebp,ebp
  409b96:	cli    
  409b97:	adc    al,0xb
  409b99:	cld    
  409b9a:	fcomp  DWORD PTR [edx+0x4d]
  409b9d:	out    dx,al
  409b9e:	xor    DWORD PTR [ecx+esi*2],esi
  409ba1:	jne    0x409bb8
  409ba3:	adc    al,0x56
  409ba5:	jle    0x409b6a
  409ba7:	mov    al,ds:0xf3c2aac8
  409bac:	push   0x27f68cb7
  409bb1:	int    0xbe
  409bb3:	push   ss
  409bb4:	ret    
  409bb5:	rcl    BYTE PTR [ebp+0x7e],1
  409bb8:	sbb    bl,bh
  409bba:	cmp    DWORD PTR [ecx],ebx
  409bbc:	inc    ebx
  409bbd:	mov    edi,0x50b9b710
  409bc2:	je     0x409b57
  409bc4:	sub    edi,DWORD PTR [edi+edi*2+0x60a80413]
  409bcb:	mov    esi,ecx
  409bcd:	retf   0xfe88
  409bd0:	mov    edi,0x90c77d7a
  409bd5:	adc    BYTE PTR [eax+0x475d70a8],cl
  409bdb:	stos   DWORD PTR es:[edi],eax
  409bdc:	inc    ebx
  409bdd:	xchg   esi,eax
  409bde:	add    eax,edx
  409be0:	test   BYTE PTR [edx],dl
  409be2:	pusha  
  409be3:	fnstenv [eax]
  409be5:	shl    BYTE PTR [ecx],cl
  409be7:	mov    eax,0x9cf793e8
  409bec:	add    bl,BYTE PTR ds:0x70b0b9f5
  409bf2:	and    al,0x51
  409bf4:	int    0x35
  409bf6:	call   0x4acd638c
  409bfb:	lea    esp,[edi+0x737b4049]
  409c01:	repnz mov ah,BYTE PTR [ecx]
  409c04:	cmp    al,0x92
  409c06:	xchg   ebx,eax
  409c07:	mov    esp,0x525ac86f
  409c0c:	icebp  
  409c0d:	and    DWORD PTR [eax+eiz*2-0x1a7a6797],ecx
  409c14:	and    bh,dl
  409c16:	rol    DWORD PTR [ebx],cl
  409c18:	sbb    esp,0xffffff90
  409c1b:	lahf   
  409c1c:	jecxz  0x409c00
  409c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c1f:	pop    esi
  409c20:	xchg   ecx,eax
  409c22:	cmp    bh,BYTE PTR [ecx-0x11]
  409c25:	mov    ch,0x33
  409c27:	jecxz  0x409c57
  409c29:	frstor [ebp+0x66758c00]
  409c2f:	sbb    DWORD PTR [ecx],0x704fa7e
  409c35:	fndisi(8087 only) 
  409c37:	aam    0x50
  409c39:	(bad)  
  409c3a:	xlat   BYTE PTR ds:[ebx]
  409c3b:	dec    bp
  409c3d:	imul   bh
  409c3f:	dec    esi
  409c40:	sbb    BYTE PTR [ecx-0x41],bl
  409c43:	cmp    DWORD PTR [esi],0x75
  409c46:	xchg   esp,eax
  409c47:	mov    bl,BYTE PTR ds:0x6217ecb2
  409c4d:	push   ss
  409c4e:	cld    
  409c4f:	push   ds
  409c50:	mov    WORD PTR [ecx+0x21ab9fd6],ss
  409c56:	jnp    0x409cc2
  409c58:	inc    ecx
  409c59:	adc    DWORD PTR [edi-0x22],0x6c
  409c5d:	out    dx,al
  409c5e:	push   ss
  409c5f:	sbb    al,BYTE PTR [esi-0x455d42a8]
  409c65:	cdq    
  409c66:	mov    al,ds:0x1b7bc6dd
  409c6b:	stos   BYTE PTR es:[edi],al
  409c6c:	pop    ss
  409c6d:	cwde   
  409c6e:	outs   dx,BYTE PTR ds:[esi]
  409c6f:	inc    ebp
  409c70:	jnp    0x409cb3
  409c72:	mov    esi,0xd64bc174
  409c77:	fistp  QWORD PTR [ebx+0x5]
  409c7a:	arpl   WORD PTR [edi+0xf07acaf],bx
  409c80:	outs   dx,DWORD PTR ds:[esi]
  409c81:	adc    bl,BYTE PTR [edi-0x64]
  409c84:	nop
  409c85:	out    0x38,al
  409c87:	stc    
  409c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c89:	jbe    0x409ce5
  409c8b:	iret   
  409c8c:	mov    ds:0xbcb1b274,eax
  409c91:	dec    esp
  409c92:	add    dh,BYTE PTR ds:0xe5f9
  409c97:	adc    dl,BYTE PTR [eax]
  409c99:	addr16 addr16 aam 0x52
  409c9d:	pop    es
  409c9e:	pop    ss
  409c9f:	mov    dh,BYTE PTR [ebx-0x47ca2302]
  409ca5:	and    edi,DWORD PTR [eax]
  409ca7:	sar    bl,0x27
  409caa:	inc    ebp
  409cab:	enter  0x9982,0xe9
  409caf:	sub    DWORD PTR [ecx-0x6c67175a],ebx
  409cb5:	adc    BYTE PTR [esi-0x1e055cac],bl
  409cbb:	add    al,BYTE PTR [esi+ecx*2+0x6d]
  409cbf:	sub    al,0x51
  409cc1:	cmp    al,0xa6
  409cc3:	cs dec esp
  409cc5:	stos   DWORD PTR es:[edi],eax
  409cc6:	in     al,0x53
  409cc8:	popa   
  409cc9:	pop    esp
  409cca:	xor    edx,DWORD PTR [esi-0x7548cbf4]
  409cd0:	addr16 popa 
  409cd2:	inc    eax
  409cd3:	jo     0x409cdf
  409cd5:	lea    esp,[edi]
  409cd7:	mov    ebp,0x963a896d
  409cdc:	iret   
  409cdd:	cmc    
  409cde:	int3   
  409cdf:	fadd   QWORD PTR [eax+eax*8]
  409ce2:	add    al,0xf
  409ce4:	aam    0x51
  409ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce8:	stos   DWORD PTR es:[edi],eax
  409ce9:	mov    al,ds:0x540daa87
  409cee:	int    0xb6
  409cf0:	add    eax,DWORD PTR [ebp+0x50]
  409cf3:	popa   
  409cf4:	add    al,0xc8
  409cf6:	retf   0x774f
  409cf9:	adc    BYTE PTR [ebx-0xd12a0ec],cl
  409cff:	shr    BYTE PTR [eax+edx*1],1
  409d02:	sub    eax,0x4232e6cb
  409d07:	pop    ebx
  409d08:	sub    eax,0x64e55a3c
  409d0d:	out    dx,al
  409d0e:	outs   dx,BYTE PTR ds:[esi]
  409d0f:	dec    edi
  409d10:	and    BYTE PTR [edx-0x77c72f43],dh
  409d16:	push   cs
  409d17:	retf   0xce1
  409d1a:	and    eax,0xbf8777a4
  409d1f:	stc    
  409d20:	mov    al,ds:0x588d9dd
  409d25:	pop    esi
  409d26:	jl     0x409d49
  409d28:	and    dh,dl
  409d2a:	ret    
  409d2b:	inc    edx
  409d2c:	cmp    eax,0xf45e8e69
  409d31:	test   BYTE PTR [ebx-0x13886b60],dh
  409d37:	dec    edx
  409d38:	in     eax,dx
  409d39:	ins    BYTE PTR es:[edi],dx
  409d3a:	and    eax,DWORD PTR [ebx]
  409d3c:	popf   
  409d3d:	jo     0x409ceb
  409d3f:	pop    esi
  409d40:	sub    eax,0xbb122aeb
  409d45:	cmp    al,0xae
  409d47:	std    
  409d48:	dec    BYTE PTR [eax]
  409d4a:	xchg   esp,eax
  409d4b:	sub    esp,ebp
  409d4d:	out    0xfe,al
  409d4f:	fs leave 
  409d51:	popa   
  409d52:	scas   al,BYTE PTR es:[edi]
  409d53:	cmp    DWORD PTR [ebx+0x23],ecx
  409d56:	stos   DWORD PTR es:[edi],eax
  409d57:	lahf   
  409d58:	stc    
  409d59:	dec    esi
  409d5a:	add    edi,ebx
  409d5c:	test   BYTE PTR [eax],bh
  409d5e:	jmp    0x409d71
  409d60:	inc    ecx
  409d61:	jno    0x409d30
  409d63:	test   al,0xdb
  409d65:	xor    dl,0x86
  409d68:	sbb    al,0x51
  409d6a:	sub    ch,BYTE PTR [esi-0x44]
  409d6d:	leave  
  409d6e:	mov    dl,BYTE PTR [ecx+ecx*4-0x2a]
  409d72:	(bad)  
  409d73:	xor    ebx,eax
  409d75:	loopne 0x409d76
  409d77:	sbb    BYTE PTR ds:0x7bd7a0c,cl
  409d7d:	mov    esi,0xaec9c9c
  409d82:	mov    cl,0xbe
  409d84:	out    0x16,eax
  409d86:	push   es
  409d87:	xor    DWORD PTR [esp+edi*1+0xf1e350b],ebx
  409d8e:	mov    gs,WORD PTR [eax-0x62b6d0e5]
  409d94:	mov    ebp,ds
  409d96:	out    0xd3,eax
  409d98:	or     dh,BYTE PTR [ebx-0x1]
  409d9b:	fisub  DWORD PTR [esi]
  409d9d:	xor    al,0xd
  409d9f:	(bad)  
  409da0:	arpl   WORD PTR [ebp-0x36795ade],dx
  409da6:	mov    bl,0x67
  409da8:	dec    ebx
  409da9:	scas   al,BYTE PTR es:[edi]
  409daa:	sahf   
  409dab:	pushf  
  409dac:	sub    DWORD PTR [edx-0x1463295e],eax
  409db2:	ja     0x409e21
  409db4:	mov    ebp,0x2e77a58e
  409db9:	test   eax,0xd92095a4
  409dbe:	sub    eax,0x9ba87abd
  409dc3:	sbb    al,0xd7
  409dc5:	mov    al,0x80
  409dc7:	arpl   di,cx
  409dc9:	pop    ebp
  409dca:	scas   al,BYTE PTR es:[edi]
  409dcb:	inc    esi
  409dcc:	push   0x146a081d
  409dd1:	(bad)
  409dd5:	ret    0xc0f3
  409dd8:	mov    edx,ebx
  409dda:	js     0x409d77
  409ddc:	push   ebp
  409ddd:	lock jo 0x409dbe
  409de0:	sbb    eax,0xcb64e7bb
  409de5:	and    eax,0xf3b94aaf
  409dea:	add    DWORD PTR [ecx],ebp
  409dec:	clc    
  409ded:	jle    0x409dee
  409def:	hlt    
  409df0:	sub    BYTE PTR [esi+0x76],al
  409df3:	popf   
  409df4:	cmp    dh,cl
  409df6:	or     BYTE PTR [ebp-0x52],ah
  409df9:	mov    ah,0xe8
  409dfb:	push   0xb33a1357
  409e00:	dec    eax
  409e01:	jb     0x409da2
  409e03:	outs   dx,BYTE PTR ds:[esi]
  409e04:	into   
  409e05:	leave  
  409e06:	dec    ecx
  409e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e08:	stos   DWORD PTR es:[edi],eax
  409e09:	repz (bad) 
  409e0b:	fimul  DWORD PTR [edi-0x5f14f8ec]
  409e11:	repz out 0xb9,al
  409e14:	gs into 
  409e16:	xor    BYTE PTR [edi],bh
  409e18:	jno    0x409dee
  409e1a:	ret    0x7997
  409e1d:	aaa    
  409e1e:	push   ss
  409e1f:	out    0x5d,al
  409e21:	pusha  
  409e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e23:	sbb    eax,0x6e78c990
  409e28:	addr16 addr16 adc dl,al
  409e2c:	or     al,0xd5
  409e2e:	cmp    al,0xc4
  409e30:	xchg   esp,eax
  409e31:	in     eax,0xe9
  409e33:	or     dh,BYTE PTR [ecx-0x7d82fd4]
  409e39:	aaa    
  409e3a:	mov    dh,BYTE PTR [edi]
  409e3c:	outs   dx,DWORD PTR ds:[esi]
  409e3d:	xor    eax,0x2b
  409e40:	dec    esp
  409e41:	test   DWORD PTR [edi],edi
  409e43:	(bad)  
  409e44:	pusha  
  409e45:	dec    ebp
  409e46:	cmp    ebp,0x7ca64613
  409e4c:	jnp    0x409e51
  409e4e:	ds dec eax
  409e50:	and    edx,DWORD PTR [esi+0x45b0e7fb]
  409e56:	fs ins DWORD PTR es:[edi],dx
  409e58:	(bad)  
  409e59:	jg     0x409e0a
  409e5b:	xor    bh,al
  409e5d:	lds    esi,FWORD PTR [esi-0x4187fd00]
  409e63:	fwait
  409e64:	xchg   ebp,eax
  409e65:	imul   esi,ebp,0xffffffa2
  409e68:	not    DWORD PTR [esi]
  409e6a:	sub    ah,BYTE PTR [edi]
  409e6c:	pushf  
  409e6d:	fcmovbe st,st(5)
  409e6f:	push   ecx
  409e70:	mov    esi,0x401da02e
  409e75:	out    dx,al
  409e76:	dec    ecx
  409e77:	bound  esp,QWORD PTR ds:[eax+0x71]
  409e7b:	nop
  409e7c:	(bad)  
  409e7d:	test   al,0xc
  409e7f:	iret   
  409e80:	fmulp  st(3),st
  409e82:	mov    ecx,ecx
  409e84:	pop    esi
  409e85:	mov    edi,DWORD PTR [edx-0x5e051ec8]
  409e8b:	xchg   esi,eax
  409e8c:	std    
  409e8d:	mov    edx,0xc28dcab4
  409e92:	aad    0x7f
  409e94:	adc    al,0x24
  409e96:	sti    
  409e97:	xchg   esi,eax
  409e98:	mov    ds:0xbf024722,al
  409e9d:	push   0x142c4f15
  409ea2:	fist   WORD PTR [ebp+0x246c87f4]
  409ea8:	jge    0x409e48
  409eaa:	ret    0xa663
  409ead:	push   0xffffff90
  409eaf:	add    esp,ebx
  409eb1:	js     0x409eef
  409eb3:	push   cs
  409eb4:	ja     0x409e43
  409eb6:	fsqrt  
  409eb8:	cmp    ah,BYTE PTR [ecx]
  409eba:	(bad)  
  409ebd:	nop
  409ebe:	xor    al,0x56
  409ec0:	cmp    BYTE PTR [esi-0x16],dh
  409ec3:	into   
  409ec4:	rol    DWORD PTR [eax+0xb],cl
  409ec7:	jl     0x409ef0
  409ec9:	bound  esi,QWORD PTR [edi]
  409ecb:	out    0xeb,eax
  409ecd:	jmp    0x409e6f
  409ecf:	mov    bh,0x60
  409ed1:	sub    edi,0xa56e2290
  409ed7:	mov    ebx,0xd057b74d
  409edc:	pop    es
  409edd:	jecxz  0x409eb2
  409edf:	(bad)  [eax+0x39284ea7]
  409ee5:	sbb    al,0xda
  409ee7:	push   0x5ce142f5
  409eec:	jge    0x409eb5
  409eee:	test   BYTE PTR [esi+0x2d35cce1],ch
  409ef4:	jns    0x409f63
  409ef6:	pop    eax
  409ef7:	mov    ebx,0xa14508d5
  409efc:	popf   
  409efd:	test   DWORD PTR [edi-0x32e05162],edi
  409f03:	fist   WORD PTR [edi+0x7d6358a7]
  409f09:	xchg   esi,eax
  409f0a:	xchg   DWORD PTR [eax-0x4caebab8],edx
  409f10:	mov    edi,DWORD PTR [esi]
  409f12:	int    0xa5
  409f14:	ss ffreep st(7)
  409f17:	shl    ebx,1
  409f19:	or     al,0x7d
  409f1b:	sti    
  409f1c:	inc    dl
  409f1e:	xlat   BYTE PTR ds:[ebx]
  409f1f:	(bad)  
  409f21:	jle    0x409f4e
  409f23:	in     eax,0x16
  409f25:	dec    esp
  409f26:	sbb    eax,0xd9acdf15
  409f2b:	daa    
  409f2c:	push   ebp
  409f2d:	or     esi,DWORD PTR [esi+0x7c7adecd]
  409f33:	test   eax,0x62e4ac6c
  409f38:	or     al,0xa5
  409f3a:	inc    ebx
  409f3b:	or     eax,0xd6935cb0
  409f40:	mov    edi,ebp
  409f42:	stc    
  409f43:	or     ebp,0xffffffff
  409f46:	nop
  409f47:	mov    ecx,0x4c27066a
  409f4c:	shl    ecx,cl
  409f4e:	call   0xb9821486
  409f53:	and    BYTE PTR [edi],dh
  409f55:	adc    ebx,eax
  409f57:	popf   
  409f58:	sahf   
  409f59:	pop    esp
  409f5a:	xchg   edx,eax
  409f5b:	popf   
  409f5c:	push   ss
  409f5d:	aam    0xc7
  409f5f:	cmc    
  409f60:	outs   dx,BYTE PTR ds:[esi]
  409f61:	push   cs
  409f62:	fs inc esi
  409f64:	sar    ecx,0x2c
  409f67:	xchg   edi,eax
  409f68:	js     0x409f98
  409f6a:	lea    ebx,[esi-0x17]
  409f6d:	mov    eax,0xf46d41f2
  409f72:	test   eax,0xefc64f75
  409f77:	call   0x42e300d7
  409f7c:	mov    ecx,edi
  409f7e:	or     DWORD PTR [ebp+0x61],esp
  409f81:	pushf  
  409f82:	fs (bad) 
  409f85:	xor    al,BYTE PTR ss:[ebx+eiz*2]
  409f89:	dec    eax
  409f8a:	dec    ecx
  409f8b:	sar    ebp,cl
  409f8d:	dec    esp
  409f8e:	or     eax,DWORD PTR [edx+0x64]
  409f91:	repz mov edi,0xafd542ef
  409f97:	cs into 
  409f99:	inc    edx
  409f9a:	sbb    ah,BYTE PTR [ebx-0x9]
  409f9d:	nop
  409f9e:	ret    0x3a0e
  409fa1:	inc    ebx
  409fa2:	dec    eax
  409fa3:	dec    ebp
  409fa4:	div    DWORD PTR [ecx-0x35]
  409fa7:	lock into 
  409fa9:	cmp    cl,BYTE PTR [edx-0x5941f3a6]
  409faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb0:	xchg   esi,eax
  409fb1:	adc    edi,DWORD PTR [ecx-0x54]
  409fb4:	mov    ds:0x2ce97fc8,al
  409fb9:	loop   0x409f6e
  409fbb:	pop    ss
  409fbc:	xchg   ecx,eax
  409fbd:	cli    
  409fbe:	mov    bh,0xbb
  409fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc1:	push   ebx
  409fc2:	ja     0x40a000
  409fc4:	pop    ds
  409fc5:	xchg   esp,eax
  409fc6:	stos   BYTE PTR es:[edi],al
  409fc7:	cmp    edi,DWORD PTR [eax+0x2d9db2ad]
  409fcd:	call   0xaa038f94
  409fd2:	mov    edi,DWORD PTR [ecx]
  409fd4:	sub    esp,DWORD PTR [edx+edx*2+0x25]
  409fd8:	jmp    0xf0b5e0f6
  409fdd:	test   DWORD PTR [ebx+0x7025e18c],ebp
  409fe3:	mov    al,0x76
  409fe5:	jle    0x40a04c
  409fe7:	sti    
  409fe8:	ds jecxz 0x40a032
  409feb:	sti    
  409fec:	adc    eax,0x604d58ed
  409ff1:	test   BYTE PTR [eax],0xde
  409ff4:	mov    dh,0x95
  409ff6:	jmp    0x1ccc:0x1a2306cb
  409ffd:	iret   
  409ffe:	and    al,0x55
  40a000:	lds    esi,FWORD PTR [esp-0x797bee21]
  40a007:	or     dl,BYTE PTR [ecx+0x58]
  40a00a:	adc    al,0x12
  40a00c:	lock cwde 
  40a00e:	mov    al,al
  40a010:	je     0x40a02c
  40a012:	mov    DWORD PTR [edi+0x7c4c51c4],ecx
  40a018:	shl    BYTE PTR [esp+edx*2-0x10],0x36
  40a01d:	pop    esp
  40a01e:	cmp    DWORD PTR [ecx-0x60],ecx
  40a021:	xchg   DWORD PTR [ebx],eax
  40a023:	mov    WORD PTR [ebx*8+0x2a6a5f9a],?
  40a02a:	retf   
  40a02b:	mov    ebp,0x68dd646c
  40a030:	arpl   si,dx
  40a032:	lods   al,BYTE PTR ds:[esi]
  40a033:	shr    DWORD PTR [edi-0x36],cl
  40a036:	xchg   esp,eax
  40a037:	dec    edx
  40a038:	popf   
  40a039:	push   edx
  40a03a:	dec    eax
  40a03b:	add    BYTE PTR [ecx+0x1a2ad1f9],cl
  40a041:	(bad)  
  40a042:	outs   dx,DWORD PTR ds:[esi]
  40a043:	int    0xf3
  40a045:	rol    DWORD PTR [ecx-0x27],0xd3
  40a049:	(bad)  
  40a04a:	in     eax,dx
  40a04b:	dec    ecx
  40a04c:	xor    BYTE PTR [ebp+ecx*4-0x4b],cl
  40a050:	sub    dl,BYTE PTR [ebp-0x7e]
  40a053:	ret    
  40a054:	mov    esi,0x3cb37c8a
  40a059:	add    esi,esi
  40a05b:	mov    dh,0xc9
  40a05d:	test   eax,0x47997e77
  40a063:	rol    DWORD PTR [ebp-0x2c8049e8],0xe6
  40a06a:	sahf   
  40a06b:	loop   0x40a011
  40a06d:	mov    esp,0xe420d3b2
  40a072:	xchg   ebx,eax
  40a073:	js     0x40a085
  40a075:	iret   
  40a076:	cmp    al,0xfe
  40a078:	gs enter 0xabd8,0x49
  40a07d:	mov    cl,0x6a
  40a07f:	add    edx,ebp
  40a081:	inc    edi
  40a082:	call   0xdaaf:0xff691b7d
  40a089:	mov    eax,0xa1f3e5fc
  40a08e:	jp     0x40a032
  40a090:	cmp    esi,esi
  40a092:	cmp    edx,DWORD PTR [esi]
  40a094:	inc    edx
  40a095:	sar    DWORD PTR [ebp-0x51],1
  40a098:	cdq    
  40a099:	cwde   
  40a09a:	jg     0x40a067
  40a09c:	shl    BYTE PTR [ebx+0x19d8ef0f],cl
  40a0a2:	(bad)  
  40a0a4:	mov    bl,BYTE PTR [bx]
  40a0a7:	inc    ebp
  40a0a8:	dec    al
  40a0aa:	mov    WORD PTR [edx+0x5f],es
  40a0ad:	pop    ds
  40a0ae:	std    
  40a0af:	sbb    dh,BYTE PTR [ecx-0x7]
  40a0b2:	(bad)  
  40a0b4:	in     eax,0xeb
  40a0b6:	jmp    0xa0b39712
  40a0bb:	xor    bl,BYTE PTR [esi+0x1f4606bf]
  40a0c1:	(bad)  
  40a0c3:	cmp    DWORD PTR [esi+0x6f],0x788a77d3
  40a0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0cb:	or     eax,0xd0ad2f63
  40a0d0:	cmp    cl,ch
  40a0d2:	and    DWORD PTR cs:[eax],esi
  40a0d5:	jns    0x40a0bd
  40a0d7:	lds    eax,FWORD PTR [edx+0x2e1ac2b7]
  40a0dd:	mov    bh,0x21
  40a0df:	jo     0x40a14d
  40a0e1:	stos   DWORD PTR es:[edi],eax
  40a0e2:	neg    DWORD PTR [edi]
  40a0e4:	inc    edi
  40a0e5:	pop    edx
  40a0e6:	lods   eax,DWORD PTR ds:[esi]
  40a0e7:	loope  0x40a0c4
  40a0e9:	das    
  40a0ea:	stos   DWORD PTR es:[edi],eax
  40a0eb:	inc    eax
  40a0ec:	call   0xa0c619e4
  40a0f1:	sahf   
  40a0f2:	or     eax,0xb4546dd9
  40a0f7:	mov    ebp,0x22c9b21c
  40a0fc:	sub    DWORD PTR [ecx],edi
  40a0fe:	adc    edi,esp
  40a100:	ds pushf 
  40a102:	jecxz  0x40a171
  40a104:	leave  
  40a105:	lds    ebp,FWORD PTR [esi]
  40a107:	mov    ah,0xe5
  40a109:	mov    dl,0xfd
  40a10b:	dec    esp
  40a10c:	push   es
  40a10d:	bnd jmp 0x4aadcc7e
  40a113:	(bad)  
  40a114:	aaa    
  40a115:	dec    ecx
  40a116:	rol    BYTE PTR [edx+0x11],cl
  40a119:	pushf  
  40a11a:	jns    0x40a162
  40a11c:	sub    al,0xb9
  40a11e:	pop    edx
  40a11f:	ss (bad) 
  40a122:	mov    ds:0x83cd1d3a,al
  40a127:	das    
  40a128:	rcl    esp,0x1c
  40a12b:	out    dx,eax
  40a12c:	ins    DWORD PTR es:[edi],dx
  40a12d:	add    eax,0xcca0798
  40a132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a133:	gs mov ebx,0x127b5ce0
  40a139:	push   0x66aa55b3
  40a13e:	jecxz  0x40a19f
  40a140:	cs jl  0x40a10a
  40a143:	push   0xffffffb1
  40a145:	jge    0x40a162
  40a147:	mov    ds,WORD PTR [edx-0x66]
  40a14a:	paddusb mm5,QWORD PTR [ebx-0x3d]
  40a14e:	or     ecx,edx
  40a150:	push   es
  40a151:	test   DWORD PTR [eax],0xeba3ab6
  40a157:	sub    ch,BYTE PTR [ebp-0x6db7626f]
  40a15d:	adc    al,BYTE PTR [eax]
  40a15f:	cs pusha 
  40a161:	clc    
  40a162:	ja     0x40a0f7
  40a164:	repz push ds
  40a166:	clc    
  40a167:	nop
  40a168:	pop    es
  40a169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a16a:	sar    BYTE PTR [edx],0x87
  40a16d:	fbld   TBYTE PTR [eax]
  40a16f:	add    eax,ecx
  40a171:	xchg   BYTE PTR [edx],bl
  40a173:	rol    BYTE PTR [esi+0x56faf857],1
  40a179:	lods   eax,DWORD PTR ds:[esi]
  40a17a:	push   ds
  40a17b:	cmp    al,0x40
  40a17d:	mov    bl,0xfe
  40a17f:	dec    ebx
  40a180:	(bad)  
  40a181:	mov    eax,ds:0xa6226d80
  40a186:	jmp    0xca81effb
  40a18b:	cs sub ebx,ebx
  40a18e:	jecxz  0x40a149
  40a190:	push   ds
  40a191:	lea    esi,[ecx-0x50215008]
  40a197:	push   0x75593413
  40a19c:	pop    ds
  40a19d:	aaa    
  40a19e:	fcomp  st(1)
  40a1a0:	adc    eax,0x37da7db6
  40a1a5:	lods   eax,DWORD PTR ds:[esi]
  40a1a6:	in     al,dx
  40a1a7:	lock lods al,BYTE PTR ds:[esi]
  40a1a9:	arpl   WORD PTR [eax],si
  40a1ab:	ss mov gs,ebp
  40a1ae:	push   cs
  40a1af:	outs   dx,BYTE PTR ds:[esi]
  40a1b0:	leave  
  40a1b1:	xchg   ebx,eax
  40a1b2:	mov    eax,ds:0xc886931e
  40a1b7:	int    0xfb
  40a1b9:	xchg   esp,eax
  40a1ba:	xchg   ecx,eax
  40a1bb:	pop    edi
  40a1bc:	cwde   
  40a1bd:	lahf   
  40a1be:	outs   dx,DWORD PTR ds:[esi]
  40a1bf:	scas   al,BYTE PTR es:[edi]
  40a1c0:	fcmovb st,st(0)
  40a1c2:	sbb    edx,DWORD PTR [eax+0x7827994f]
  40a1c8:	int    0xe2
  40a1ca:	loop   0x40a1dd
  40a1cc:	sbb    ch,dl
  40a1ce:	and    eax,0x56f69828
  40a1d3:	fstp   TBYTE PTR [esi-0x5a4950e7]
  40a1d9:	das    
  40a1da:	enter  0xc4ec,0xe4
  40a1de:	xchg   ebx,esi
  40a1e0:	retf   
  40a1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e2:	cs icebp 
  40a1e4:	jne    0x40a216
  40a1e6:	xchg   ecx,eax
  40a1e7:	and    eax,0xc6fbd8d5
  40a1ec:	aas    
  40a1ed:	dec    ebp
  40a1ee:	sub    ch,BYTE PTR [ecx]
  40a1f0:	mov    ebp,0xaf26c164
  40a1f5:	add    BYTE PTR [esi-0x1fbf6b6f],0xde
  40a1fc:	pop    eax
  40a1fd:	pop    es
  40a1fe:	fdiv   QWORD PTR [esi]
  40a200:	ret    0xe281
  40a203:	or     al,0x8c
  40a205:	fadd   DWORD PTR [ecx]
  40a207:	cmp    eax,0x7eb2536f
  40a20c:	cwde   
  40a20d:	inc    esp
  40a20e:	mov    ebp,0x11c0004e
  40a213:	ret    
  40a214:	ins    BYTE PTR es:[edi],dx
  40a215:	jl     0x40a21c
  40a217:	jg     0x40a217
  40a219:	adc    BYTE PTR [esi],ch
  40a21b:	test   al,0xe2
  40a21d:	ds retf 
  40a21f:	sbb    BYTE PTR [esi-0x3a],ah
  40a222:	in     al,dx
  40a223:	or     BYTE PTR [edx],cl
  40a225:	neg    BYTE PTR [ebx+esi*4-0x72bd17]
  40a22c:	xor    eax,0xd5996002
  40a231:	mov    esp,0x4daf619a
  40a236:	test   al,0xa9
  40a238:	mov    ds:0x3c93f2a2,al
  40a23d:	scas   eax,DWORD PTR es:[edi]
  40a23e:	jns    0x40a260
  40a240:	test   BYTE PTR [esi+0x3a815cbd],0x8f
  40a247:	dec    esp
  40a248:	inc    eax
  40a249:	and    al,0x41
  40a24b:	cmp    al,0x46
  40a24d:	dec    edx
  40a24e:	(bad)  
  40a24f:	in     al,0xae
  40a251:	in     eax,dx
  40a252:	retf   
  40a253:	scas   eax,DWORD PTR es:[edi]
  40a254:	test   DWORD PTR [ebp-0x18],edi
  40a257:	adc    eax,0xf14f5693
  40a25c:	outs   dx,DWORD PTR ds:[esi]
  40a25d:	add    BYTE PTR [ebp+0x5f22370e],bh
  40a263:	pop    ss
  40a264:	xchg   DWORD PTR [edx-0x3b32f60d],esi
  40a26a:	mov    eax,ds:0x830d98ee
  40a26f:	into   
  40a270:	pcmpeqb mm1,QWORD PTR [eax+0x7f]
  40a274:	sbb    ecx,DWORD PTR [eax+0x4631195b]
  40a27a:	mov    ds:0xab06b273,al
  40a27f:	sub    bl,BYTE PTR [esi+0x53]
  40a282:	and    cl,BYTE PTR [eax]
  40a284:	jl     0x40a2ea
  40a286:	(bad)  
  40a287:	pop    ss
  40a288:	clc    
  40a289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a28a:	xor    al,0xed
  40a28c:	sbb    BYTE PTR [eax],cl
  40a28e:	cmp    ebx,DWORD PTR [edx+0x59]
  40a291:	ss retf 
  40a293:	daa    
  40a294:	shr    DWORD PTR [esi],1
  40a296:	ss xchg bp,ax
  40a299:	cs jge 0x40a227
  40a29c:	xchg   esp,eax
  40a29d:	and    al,0x89
  40a29f:	fld    TBYTE PTR [esi]
  40a2a1:	and    ecx,DWORD PTR [ecx]
  40a2a3:	enter  0xd35e,0xeb
  40a2a7:	(bad)  
  40a2a8:	sub    DWORD PTR [edx-0xfd15664],esp
  40a2ae:	add    al,0xe5
  40a2b0:	mov    esp,0x3e1a2d93
  40a2b5:	jg     0x40a2b0
  40a2b7:	sbb    al,BYTE PTR [esp+eax*8-0x459217e]
  40a2be:	xor    al,0x6e
  40a2c0:	iret   
  40a2c1:	sbb    al,0xd2
  40a2c3:	mov    DWORD PTR [edx],ecx
  40a2c5:	push   ss
  40a2c6:	and    eax,0x44eca495
  40a2cb:	pop    edi
  40a2cc:	fild   WORD PTR [ebp+0x6d4540ea]
  40a2d2:	push   ss
  40a2d3:	sub    eax,0xacfb2111
  40a2d8:	je     0x40a2b9
  40a2da:	stos   DWORD PTR es:[edi],eax
  40a2db:	in     al,dx
  40a2dc:	jmp    0x8358:0xab3888cf
  40a2e3:	xor    al,0x7b
  40a2e5:	or     ch,BYTE PTR [ebx]
  40a2e7:	sbb    BYTE PTR [ebp+0x19f60967],0xa1
  40a2ee:	jle    0x40a2bf
  40a2f0:	sahf   
  40a2f1:	xchg   ebx,eax
  40a2f2:	jne    0x40a334
  40a2f4:	cs jge 0x40a287
  40a2f7:	mov    eax,0x89addaf8
  40a2fc:	ret    0x9bb5
  40a2ff:	cld    
  40a300:	mov    esi,ecx
  40a302:	jne    0x40a2a9
  40a304:	ja     0x40a344
  40a306:	mov    al,ds:0x81176c65
  40a30b:	dec    edi
  40a30c:	xchg   bh,ch
  40a30e:	sub    eax,0xc222b385
  40a313:	leave  
  40a314:	sub    DWORD PTR [edx-0x21e918a4],ebp
  40a31a:	add    al,0xfb
  40a31c:	jnp    0x40a33a
  40a31e:	mov    esp,0x55ec244f
  40a323:	pandn  mm3,mm7
  40a326:	xor    eax,DWORD PTR [ebx+0x27]
  40a329:	test   DWORD PTR [ecx+0x10],edi
  40a32c:	lods   ax,WORD PTR ds:[esi]
  40a32e:	dec    BYTE PTR [eax-0x525fb83b]
  40a334:	mov    ecx,0xf0bf4bcd
  40a339:	push   ebx
  40a33a:	and    eax,0xced435
  40a33f:	jmp    0x40a2da
  40a341:	jecxz  0x40a346
  40a343:	in     eax,dx
  40a344:	dec    esp
  40a345:	or     eax,ebx
  40a347:	adc    eax,0x6af28f32
  40a34c:	dec    edx
  40a34d:	pusha  
  40a34e:	sbb    al,0x82
  40a350:	(bad)  
  40a351:	fs jg  0x40a2e5
  40a354:	sub    al,0x42
  40a356:	or     ecx,DWORD PTR [ebx]
  40a358:	rcl    DWORD PTR [edx+0x5bbd9229],1
  40a35e:	mov    ebp,0x14961f2d
  40a363:	mov    eax,0xbcd04390
  40a368:	pushf  
  40a369:	ret    
  40a36a:	or     dl,BYTE PTR [ebp+0x5e584099]
  40a370:	inc    edx
  40a371:	add    BYTE PTR [edx+ecx*1-0x2aeb17f0],bl
  40a378:	mov    esp,0x8ef8ead8
  40a37d:	xor    DWORD PTR [edi-0x6],0x793eeea9
  40a384:	int    0x89
  40a386:	mov    ds:0x8556b779,al
  40a38b:	jecxz  0x40a373
  40a38d:	fsubr  st,st(5)
  40a38f:	jmp    0xe96c:0x30be3998
  40a396:	arpl   WORD PTR [edx-0x9a9b349],si
  40a39c:	(bad)  
  40a39d:	es repz sub al,0x94
  40a3a1:	push   0x992fcd1c
  40a3a6:	fld    TBYTE PTR [ecx+0x29c1a759]
  40a3ac:	inc    esp
  40a3ad:	xchg   esp,eax
  40a3ae:	sbb    al,0x17
  40a3b0:	mov    ds:0xf310b3c9,al
  40a3b5:	push   cs
  40a3b6:	mov    ebx,0xe1e25a29
  40a3bb:	fld    QWORD PTR [esi]
  40a3bd:	or     eax,0x471a4972
  40a3c2:	pop    edi
  40a3c3:	jmp    0x7c5a:0xfd4ce817
  40a3ca:	and    BYTE PTR [edi-0x4bbac044],dl
  40a3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3d1:	addr16 aaa 
  40a3d3:	pop    esi
  40a3d4:	pushf  
  40a3d5:	pop    es
  40a3d6:	jmp    0x1d4b58fd
  40a3db:	sbb    eax,0xfa3038f6
  40a3e0:	fcmovu st,st(0)
  40a3e2:	pop    ds
  40a3e3:	push   ss
  40a3e4:	mov    al,0x68
  40a3e6:	pop    esi
  40a3e7:	jge    0x40a37a
  40a3e9:	outs   dx,DWORD PTR ds:[esi]
  40a3ea:	cmp    dl,ah
  40a3ec:	xor    ch,0xe0
  40a3ef:	pop    esi
  40a3f0:	mov    DWORD PTR [ebx+0x61],ebp
  40a3f3:	mov    edi,0xf95d2288
  40a3f8:	shr    BYTE PTR [edi+0x2],1
  40a3fb:	cmp    bl,BYTE PTR [ecx+0x31521014]
  40a401:	inc    esp
  40a402:	sar    DWORD PTR [edx+0x2813c501],1
  40a408:	add    dl,BYTE PTR [esi]
  40a40a:	out    dx,al
  40a40b:	dec    esp
  40a40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a40d:	inc    ebx
  40a40e:	imul   edi,DWORD PTR [ebx+0x5f],0xf88adf1c
  40a415:	jo     0x40a440
  40a417:	push   edx
  40a418:	test   bl,0xe7
  40a41b:	or     DWORD PTR [ecx-0x24],0x34f10d3
  40a422:	add    eax,DWORD PTR [ebx-0x48d5c8dc]
  40a428:	inc    ebp
  40a429:	sahf   
  40a42a:	push   cs
  40a42b:	mov    edx,0x928d34b6
  40a430:	scas   eax,DWORD PTR es:[edi]
  40a431:	push   esp
  40a432:	scas   eax,DWORD PTR es:[edi]
  40a433:	out    0x3d,eax
  40a435:	push   esp
  40a436:	or     dl,BYTE PTR [edi+edx*1-0x18a25613]
  40a43d:	mov    bh,0x4d
  40a43f:	hlt    
  40a440:	sbb    al,0x7e
  40a442:	mov    al,ds:0x9ea7ffd3
  40a447:	call   FWORD PTR ds:0x381193a5
  40a44d:	inc    ecx
  40a44e:	jne    0x40a460
  40a450:	div    dh
  40a452:	pop    eax
  40a453:	mov    ebp,0x1f1e351b
  40a458:	in     eax,dx
  40a459:	mov    eax,0xbb4d219c
  40a45e:	fstp   TBYTE PTR [edx-0x72]
  40a461:	inc    eax
  40a462:	mov    cl,0xaf
  40a464:	mov    ah,0x53
  40a466:	fild   QWORD PTR [edx-0x3952a048]
  40a46c:	clc    
  40a46d:	dec    ebp
  40a46e:	xchg   ebx,eax
  40a46f:	fwait
  40a470:	div    DWORD PTR [esi-0x74]
  40a473:	popa   
  40a474:	out    0xc5,al
  40a476:	rcr    DWORD PTR [esi+0x7b],0xd1
  40a47a:	dec    esp
  40a47b:	sbb    bh,ch
  40a47d:	sbb    cl,BYTE PTR [edx+0x54]
  40a480:	xchg   edi,eax
  40a481:	imul   esp,DWORD PTR [ebx],0xffffffe6
  40a484:	or     eax,0xa8855966
  40a489:	mov    ebp,0x1244777c
  40a48e:	xor    DWORD PTR [eax+ebp*4-0x38ffac4],edx
  40a495:	sbb    eax,0x55e696e2
  40a49a:	(bad)  
  40a49c:	in     al,0xb
  40a49e:	inc    ecx
  40a49f:	jae    0x40a484
  40a4a1:	out    0x30,al
  40a4a3:	adc    eax,0x6ab88dd7
  40a4a8:	jp     0x40a44e
  40a4aa:	shl    DWORD PTR [ecx+0x19bb1284],1
  40a4b0:	(bad)  
  40a4b2:	and    esi,edi
  40a4b4:	lock jge 0x40a518
  40a4b7:	inc    esi
  40a4b8:	faddp  st(1),st
  40a4ba:	push   es
  40a4bb:	jp     0x40a4d7
  40a4bd:	add    al,0x57
  40a4bf:	cmp    eax,0xba71f459
  40a4c4:	or     bl,dh
  40a4c6:	jg     0x40a499
  40a4c8:	xchg   ebx,eax
  40a4c9:	lahf   
  40a4ca:	rcr    DWORD PTR [ebx+eiz*8+0x68],1
  40a4ce:	nop
  40a4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d0:	jne    0x40a49a
  40a4d2:	inc    edi
  40a4d3:	cmp    DWORD PTR [eax+ebx*1],esp
  40a4d6:	sub    dl,BYTE PTR [edi]
  40a4d8:	or     ecx,edi
  40a4da:	xchg   esi,eax
  40a4db:	out    0x40,al
  40a4dd:	mov    esi,0xb58ca0d
  40a4e2:	test   eax,0xd91650ed
  40a4e7:	test   eax,0xa1045c83
  40a4ec:	sahf   
  40a4ed:	cmp    DWORD PTR [eax-0x1b5dc565],edx
  40a4f3:	js     0x40a507
  40a4f5:	cld    
  40a4f6:	retf   
  40a4f7:	jge    0x40a4cb
  40a4f9:	fcomp  QWORD PTR [ebx]
  40a4fb:	xchg   esi,esi
  40a4fd:	frstor [ecx]
  40a4ff:	ss sti 
  40a501:	sub    eax,0x5bf40e2c
  40a506:	mov    edx,0xff28a53f
  40a50b:	test   BYTE PTR [ebp+0x0],bh
  40a50e:	ss int3 
  40a510:	pop    ecx
  40a511:	xor    dl,bl
  40a513:	and    eax,0x3917899a
  40a518:	pop    esi
  40a519:	push   es
  40a51a:	jg     0x40a4d8
  40a51c:	icebp  
  40a51d:	adc    cl,BYTE PTR [ebx-0x28961af7]
  40a523:	pop    esp
  40a524:	jns    0x40a535
  40a526:	mov    ch,0x0
  40a528:	loop   0x40a57e
  40a52a:	push   esi
  40a52b:	and    DWORD PTR [ecx+ecx*8],esp
  40a52e:	jo     0x40a5a1
  40a530:	stc    
  40a531:	pop    eax
  40a532:	inc    esi
  40a533:	push   esi
  40a534:	or     DWORD PTR ds:0x9683b78,ebx
  40a53a:	rcl    DWORD PTR [esi+0x563abea4],0xd0
  40a541:	pop    esp
  40a542:	jns    0x40a50e
  40a544:	ins    BYTE PTR es:[edi],dx
  40a545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a546:	in     eax,dx
  40a547:	mov    esi,edi
  40a549:	sbb    bh,BYTE PTR [edi]
  40a54b:	scas   al,BYTE PTR es:[edi]
  40a54c:	cvtdq2ps xmm1,xmm3
  40a54f:	call   0x3ff2:0xdf4d2fb6
  40a556:	jo     0x40a589
  40a558:	jge    0x40a4ed
  40a55a:	sti    
  40a55b:	sub    BYTE PTR [ebx-0x2],0xbc
  40a55f:	int    0xb1
  40a561:	jae    0x40a519
  40a563:	push   0x0
  40a565:	mov    ah,0x8b
  40a567:	iret   
  40a568:	fmul   DWORD PTR [edi-0x3f1cf0bd]
  40a56e:	daa    
  40a56f:	xchg   ebx,eax
  40a570:	icebp  
  40a571:	pop    ds
  40a572:	sbb    al,0xd
  40a574:	mov    ecx,0x3eea5fd1
  40a579:	fist   DWORD PTR [esi+0x206c2c93]
  40a57f:	or     eax,0x8c7eee9e
  40a584:	(bad)  
  40a585:	and    edi,DWORD PTR [edx-0x33]
  40a588:	xchg   ecx,eax
  40a589:	xchg   ebp,eax
  40a58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a58b:	dec    esp
  40a58c:	lock jmp 0x20b:0xfd424e33
  40a594:	pop    ebx
  40a595:	ss popf 
  40a597:	xor    al,0x28
  40a599:	pop    eax
  40a59a:	xchg   ebx,eax
  40a59b:	push   ss
  40a59c:	sbb    bl,cl
  40a59e:	call   0xd9fb3a86
  40a5a3:	int3   
  40a5a4:	jg     0x40a610
  40a5a6:	ja     0x40a619
  40a5a8:	test   BYTE PTR [eax+0x1d30f170],cl
  40a5ae:	(bad)  
  40a5af:	jb     0x40a534
  40a5b1:	ret    0xc077
  40a5b4:	jmp    0x8d5d158b
  40a5b9:	cmp    ch,ah
  40a5bb:	inc    esi
  40a5bc:	adc    esi,DWORD PTR [edx+0x4d4af753]
  40a5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c3:	loop   0x40a597
  40a5c5:	mov    eax,ds:0x5ded86e0
  40a5ca:	xor    BYTE PTR [eax+0x5df96c68],ah
  40a5d0:	cmp    BYTE PTR [ecx],0x80
  40a5d3:	sbb    edi,DWORD PTR ds:0xc893825e
  40a5d9:	pusha  
  40a5da:	fwait
  40a5db:	test   ah,0x8d
  40a5de:	jne    0x40a5bb
  40a5e0:	ins    BYTE PTR es:[edi],dx
  40a5e1:	mov    ebp,0xfa476f38
  40a5e6:	xchg   esp,eax
  40a5e7:	inc    ecx
  40a5e8:	mov    DWORD PTR [ecx-0x66],ebp
  40a5eb:	inc    ebp
  40a5ec:	and    al,0x13
  40a5ee:	jns    0x40a61d
  40a5f0:	les    ebp,FWORD PTR [ebx+0x46]
  40a5f3:	outs   dx,BYTE PTR ds:[esi]
  40a5f4:	dec    edx
  40a5f5:	sbb    DWORD PTR ds:[esi+edi*8],0x11fda851
  40a5fd:	adc    al,0x75
  40a5ff:	punpcklwd mm5,DWORD PTR ds:[ecx]
  40a603:	add    eax,0x9fd7c87
  40a608:	sub    DWORD PTR [bx+si+0x50],0xe41ac8ba
  40a610:	fiadd  DWORD PTR [esi]
  40a612:	arpl   si,di
  40a614:	and    DWORD PTR [esp+edx*2+0x62],0x54d35396
  40a61c:	xchg   ebx,eax
  40a61d:	aaa    
  40a61e:	jg     0x40a5a1
  40a620:	mov    eax,ds:0x6a66f992
  40a625:	sub    eax,DWORD PTR [edi-0x72]
  40a628:	cwde   
  40a629:	data16 mov WORD PTR [edi],?
  40a62c:	out    0x66,eax
  40a62e:	aaa    
  40a62f:	imul   eax,DWORD PTR [esi+0x203179f0],0xffffffe7
  40a636:	ss aaa 
  40a638:	jbe    0x40a6ab
  40a63a:	int3   
  40a63b:	pop    eax
  40a63c:	xor    edx,DWORD PTR [ecx+0x2310c77c]
  40a642:	int    0xec
  40a644:	int    0x5c
  40a646:	mov    bl,0x56
  40a648:	jge    0x40a6bd
  40a64a:	fcom   QWORD PTR [edx]
  40a64c:	shl    BYTE PTR [edi+0x1c],cl
  40a64f:	inc    esp
  40a650:	mov    edx,0x59a69d3c
  40a655:	out    dx,al
  40a656:	lea    esp,[ecx+ebp*4]
  40a659:	cmp    bh,BYTE PTR [edi]
  40a65b:	pop    ebp
  40a65c:	iret   
  40a65d:	nop
  40a65e:	and    eax,0x2fbf8fb7
  40a663:	mov    cs,WORD PTR [ebp-0x3c]
  40a666:	dec    ecx
  40a667:	and    BYTE PTR [edi],ch
  40a669:	iret   
  40a66a:	out    0x50,eax
  40a66c:	dec    esi
  40a66d:	(bad)  
  40a66e:	ss adc al,0xcb
  40a671:	cs ins DWORD PTR es:[edi],dx
  40a673:	loope  0x40a690
  40a675:	jnp    0x40a61f
  40a677:	sbb    ch,BYTE PTR [eax-0x3022f096]
  40a67d:	pop    eax
  40a67e:	add    ah,BYTE PTR [ebp+0xe8c61fa]
  40a684:	fs leave 
  40a686:	in     eax,dx
  40a687:	or     ah,BYTE PTR [ecx-0x2f5eb47f]
  40a68d:	pop    eax
  40a68e:	mov    edi,0xa57d199
  40a693:	xchg   edi,eax
  40a694:	and    BYTE PTR [ebx-0x3],bl
  40a697:	ds cmp dh,bl
  40a69a:	adc    eax,eax
  40a69c:	push   0x6cf07bf5
  40a6a1:	pop    ss
  40a6a2:	cmp    BYTE PTR [ebp-0x4a0be6ab],dl
  40a6a8:	repnz not edi
  40a6ab:	cld    
  40a6ac:	ret    0x3343
  40a6af:	jns    0x40a726
  40a6b1:	fdivr  QWORD PTR [ebx-0x7e955468]
  40a6b7:	xchg   ecx,eax
  40a6b8:	push   es
  40a6b9:	aam    0xe6
  40a6bb:	ja     0x40a6d8
  40a6bd:	jl     0x40a6f4
  40a6bf:	out    0xda,eax
  40a6c1:	lods   eax,DWORD PTR ds:[esi]
  40a6c2:	aaa    
  40a6c3:	pop    ecx
  40a6c4:	cmp    BYTE PTR [ebp+0x54],cl
  40a6c7:	dec    ecx
  40a6c8:	jb     0x40a677
  40a6ca:	inc    esi
  40a6cb:	mov    edi,0x9f9dd9
  40a6d0:	sub    BYTE PTR [ebx],dl
  40a6d2:	dec    ecx
  40a6d3:	jb     0x40a706
  40a6d5:	pop    ss
  40a6d6:	push   edx
  40a6d7:	inc    ecx
  40a6d8:	cmp    eax,0x9c61d568
  40a6dd:	imul   edi,esi,0x31
  40a6e0:	sbb    DWORD PTR [edx+0x2d355a4c],0xffffffd7
  40a6e7:	arpl   WORD PTR [esi-0x17],di
  40a6ea:	push   edx
  40a6eb:	add    ch,0xda
  40a6ee:	and    BYTE PTR [ecx-0x4943194d],ch
  40a6f4:	inc    ebx
  40a6f5:	push   0x18
  40a6f7:	stos   DWORD PTR es:[edi],eax
  40a6f8:	pop    esi
  40a6f9:	fwait
  40a6fa:	mov    ds,WORD PTR [ebx+0x61d1eb6c]
  40a700:	pusha  
  40a701:	es push 0xa
  40a704:	in     eax,0x7
  40a706:	and    bh,dh
  40a708:	xor    ah,BYTE PTR [ebx+0x53a3bc7a]
  40a70e:	test   BYTE PTR [edx],bl
  40a710:	xchg   edx,eax
  40a711:	mov    bl,0xc6
  40a713:	mov    cl,0xf2
  40a715:	jbe    0x40a74e
  40a717:	lea    ecx,[eax+edi*4]
  40a71a:	sbb    BYTE PTR [ecx],0xa3
  40a71d:	pop    eax
  40a71e:	mov    al,0x74
  40a720:	inc    ebx
  40a721:	idiv   BYTE PTR [edi+0xec5bef5]
  40a727:	dec    ecx
  40a728:	sbb    BYTE PTR [eax+0x11],0xd3
  40a72c:	in     al,0x7f
  40a72e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72f:	xor    bl,al
  40a731:	jo     0x40a799
  40a733:	pop    ebx
  40a734:	add    al,bh
  40a736:	dec    ebp
  40a737:	push   eax
  40a738:	and    DWORD PTR [edx+0x3fdb221],edx
  40a73e:	cwde   
  40a73f:	jg     0x40a778
  40a741:	jg     0x40a728
  40a743:	xchg   edx,eax
  40a744:	cmp    al,0xa7
  40a746:	pop    es
  40a747:	mov    BYTE PTR [ecx-0x69621067],dh
  40a74d:	cmp    dh,BYTE PTR [ebx+0x599c798c]
  40a753:	fst    DWORD PTR [edx-0x2aada9a0]
  40a759:	popaw  
  40a75b:	and    DWORD PTR [ebx+0x10],eax
  40a75e:	(bad)  
  40a75f:	pop    ebp
  40a760:	and    ebx,ebx
  40a762:	jno    0x40a717
  40a764:	mov    eax,ds:0x2e11ffd7
  40a769:	sub    DWORD PTR [ebp-0x50],ecx
  40a76c:	loopne 0x40a726
  40a76e:	jno    0x40a6f1
  40a770:	das    
  40a771:	test   DWORD PTR [edx+0x4d620b5a],0x43519803
  40a77b:	dec    ebp
  40a77c:	ins    BYTE PTR es:[edi],dx
  40a77d:	sub    eax,0x7b54027d
  40a782:	shl    bh,1
  40a784:	js     0x40a7d6
  40a786:	dec    ecx
  40a787:	pop    ss
  40a788:	sbb    ebx,0xf4b5d62c
  40a78e:	or     edx,DWORD PTR [ebx-0x30]
  40a791:	ficom  WORD PTR [edi+ebp*1-0x3f08351d]
  40a798:	sbb    eax,0x50f13ddc
  40a79d:	jg     0x40a7bf
  40a79f:	retf   
  40a7a0:	retf   0x97f7
  40a7a3:	bound  ebx,QWORD PTR [esi-0x531e7865]
  40a7a9:	adc    BYTE PTR [eax],dl
  40a7ab:	cli    
  40a7ac:	push   ds
  40a7ad:	xchg   ecx,eax
  40a7ae:	mov    DWORD PTR [esi-0x2d],edx
  40a7b1:	dec    edi
  40a7b2:	fucompp 
  40a7b4:	mov    edx,0x89c0a7d4
  40a7b9:	stos   BYTE PTR es:[edi],al
  40a7ba:	jmp    0x657c97d3
  40a7bf:	pop    edx
  40a7c0:	push   DWORD PTR [ebp-0x38a22e31]
  40a7c6:	in     al,dx
  40a7c7:	push   cs
  40a7c8:	in     al,dx
  40a7c9:	push   ecx
  40a7ca:	outs   dx,BYTE PTR ds:[esi]
  40a7cb:	push   es
  40a7cc:	xor    DWORD PTR [eax+0x6b74477b],eax
  40a7d2:	mov    cl,dh
  40a7d4:	pop    ebp
  40a7d5:	dec    ecx
  40a7d6:	dec    esp
  40a7d7:	mov    bl,0xad
  40a7d9:	mov    ch,0x42
  40a7db:	sahf   
  40a7dc:	lods   eax,DWORD PTR ds:[esi]
  40a7dd:	push   ebx
  40a7de:	and    al,0x95
  40a7e0:	(bad)  
  40a7e1:	out    0xee,al
  40a7e3:	or     DWORD PTR [ebx],esi
  40a7e5:	js     0x40a7f6
  40a7e7:	inc    eax
  40a7e8:	xchg   esi,eax
  40a7e9:	mov    bh,0x4e
  40a7eb:	adc    esp,DWORD PTR [ebx-0x3bd24217]
  40a7f1:	ja     0x40a818
  40a7f3:	retf   0x2671
  40a7f6:	jp     0x40a793
  40a7f8:	fsubrp st(5),st
  40a7fa:	call   0xd6b128b6
  40a7ff:	xor    al,0x83
  40a801:	pop    edi
  40a802:	mov    ds:0x61c40c42,eax
  40a807:	fcomp  QWORD PTR [esi-0x57be3b14]
  40a80d:	shr    eax,1
  40a80f:	sub    ah,BYTE PTR [edx-0x240d15ec]
  40a815:	stos   DWORD PTR es:[edi],eax
  40a816:	sti    
  40a817:	lods   al,BYTE PTR ds:[esi]
  40a818:	mov    edi,0x94d30639
  40a81d:	adc    eax,0x3ca7800e
  40a822:	je     0x40a85d
  40a824:	imul   esi,DWORD PTR [esi],0x38
  40a827:	ins    BYTE PTR es:[edi],dx
  40a828:	je     0x40a827
  40a82a:	jg     0x40a842
  40a82c:	imul   esp,DWORD PTR [edi-0x3b],0x42
  40a830:	and    ch,BYTE PTR [esi-0x62]
  40a833:	add    DWORD PTR [ebp-0x1a06ef6b],esp
  40a839:	xchg   ebx,eax
  40a83a:	js     0x40a88e
  40a83c:	lahf   
  40a83d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a83e:	sbb    eax,0xb35fa5f7
  40a843:	fistp  QWORD PTR [edi-0x25]
  40a846:	adc    eax,0xeb89121d
  40a84b:	dec    eax
  40a84c:	aaa    
  40a84d:	dec    eax
  40a84e:	xchg   edi,eax
  40a84f:	pop    ds
  40a850:	cld    
  40a851:	(bad)  
  40a853:	enter  0xdbf6,0xe8
  40a857:	dec    eax
  40a858:	ss push ds
  40a85a:	jg     0x40a7f9
  40a85c:	push   0xffffffc0
  40a85e:	adc    eax,0xeb652731
  40a863:	push   ebx
  40a864:	xor    eax,0xf2250768
  40a869:	inc    ecx
  40a86a:	cwde   
  40a86b:	loop   0x40a7fc
  40a86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86e:	cmp    dh,0x78
  40a871:	sub    cl,BYTE PTR [edi+0x1e6e8c4a]
  40a877:	lds    esp,FWORD PTR [ebx]
  40a879:	cmp    edi,DWORD PTR [ebp-0x66]
  40a87c:	aam    0x6b
  40a87e:	aad    0xd1
  40a880:	pop    ds
  40a881:	adc    DWORD PTR [esi+0x40350d94],esi
  40a887:	stos   BYTE PTR es:[edi],al
  40a888:	retf   
  40a889:	mov    cl,0x7c
  40a88b:	mov    dh,BYTE PTR [ecx+0x32]
  40a88e:	mov    WORD PTR [ebx+0x2d0b05cf],fs
  40a894:	mov    eax,ds:0xe1a41589
  40a899:	fnop   
  40a89b:	lds    eax,FWORD PTR [edx-0x43]
  40a89e:	mov    ecx,0x2605b693
  40a8a3:	pop    ebp
  40a8a4:	aad    0xb1
  40a8a6:	js     0x40a90e
  40a8a8:	mov    ds:0x951550d6,al
  40a8ad:	popf   
  40a8ae:	out    dx,eax
  40a8af:	add    edx,DWORD PTR [edx+edi*8+0x72]
  40a8b3:	loop   0x40a83a
  40a8b5:	or     al,0xe
  40a8b7:	(bad)  
  40a8b8:	enter  0x1d38,0x2b
  40a8bc:	mov    ecx,0x26c5e007
  40a8c1:	ret    0x8ccd
  40a8c4:	je     0x40a8fb
  40a8c6:	int    0xe9
  40a8c8:	and    DWORD PTR [esi+0x23645f82],ecx
  40a8ce:	push   ebx
  40a8cf:	inc    ecx
  40a8d0:	push   ebp
  40a8d1:	out    dx,eax
  40a8d2:	pop    eax
  40a8d3:	das    
  40a8d4:	dec    ebp
  40a8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d6:	aas    
  40a8d7:	mov    ch,0x28
  40a8d9:	fs scas al,BYTE PTR es:[edi]
  40a8db:	or     dh,BYTE PTR [edx]
  40a8dd:	ins    BYTE PTR es:[edi],dx
  40a8de:	xor    edi,DWORD PTR [ecx-0x6b9dce57]
  40a8e4:	xchg   esi,eax
  40a8e5:	or     DWORD PTR [edi-0x26c9316f],eax
  40a8eb:	and    BYTE PTR [eax],ch
  40a8ed:	adc    ebx,edx
  40a8ef:	or     eax,0xa41eddf8
  40a8f4:	mov    esp,0xb4a1f21a
  40a8f9:	push   edi
  40a8fa:	rol    BYTE PTR [eax],1
  40a8fc:	lock sbb BYTE PTR [ecx],dh
  40a8ff:	dec    esp
  40a900:	aaa    
  40a901:	mov    ecx,0x1a984514
  40a906:	adc    al,0x76
  40a908:	loopne 0x40a900
  40a90a:	mov    ecx,0x9e89b2eb
  40a90f:	clc    
  40a910:	(bad)  
  40a911:	push   cs
  40a912:	fldenv [edx]
  40a914:	adc    eax,DWORD PTR [ecx+0x44]
  40a917:	out    dx,eax
  40a918:	sbb    edi,DWORD PTR [eax]
  40a91a:	mov    bh,0xd1
  40a91c:	ret    
  40a91d:	jbe    0x40a999
  40a91f:	mov    ds:0x76d99b4e,eax
  40a924:	shr    DWORD PTR [edi],1
  40a926:	jmp    0x2a00:0xc4b1888f
  40a92d:	dec    ebx
  40a92e:	mov    ds:0x1f0a1c08,eax
  40a933:	push   esi
  40a934:	xchg   ecx,eax
  40a935:	ds ins DWORD PTR es:[edi],dx
  40a937:	(bad)  
  40a939:	xchg   ecx,eax
  40a93a:	or     al,BYTE PTR [edi-0x5]
  40a93d:	inc    ebp
  40a93e:	push   edi
  40a93f:	inc    esi
  40a940:	xchg   ebx,eax
  40a941:	or     bh,dl
  40a943:	and    bl,BYTE PTR [ebp+0x76]
  40a946:	cmp    al,0x66
  40a948:	rcr    DWORD PTR [edx+0x45c36360],cl
  40a94e:	stos   DWORD PTR es:[edi],eax
  40a94f:	push   edx
  40a950:	mov    ebp,0x4b99a1f8
  40a955:	outs   dx,DWORD PTR ds:[esi]
  40a956:	icebp  
  40a957:	mov    bh,dl
  40a959:	mov    ebx,0xf3c42ba9
  40a95e:	xor    al,0x73
  40a960:	sahf   
  40a961:	jmp    0x5e65:0x483bf613
  40a968:	ds jmp 0x55ba:0xb857ca48
  40a970:	sub    eax,0x9075cfce
  40a975:	jns    0x40a997
  40a977:	test   eax,0xf4473eb9
  40a97c:	lds    esi,FWORD PTR [edi]
  40a97e:	enter  0x9981,0x35
  40a982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a983:	add    al,0xff
  40a985:	jno    0x40a975
  40a987:	add    edi,0x1b
  40a98a:	cmc    
  40a98b:	xchg   ecx,eax
  40a98c:	fst    QWORD PTR [edi]
  40a98e:	outs   dx,DWORD PTR ds:[esi]
  40a98f:	pop    ds
  40a990:	mov    ds,WORD PTR [edx+0x71]
  40a993:	inc    ebx
  40a994:	jne    0x40a952
  40a996:	add    eax,0xc63c19c4
  40a99b:	scas   eax,DWORD PTR es:[edi]
  40a99c:	stos   BYTE PTR es:[edi],al
  40a99d:	mov    bl,0xc8
  40a99f:	adc    eax,DWORD PTR [ecx]
  40a9a1:	xlat   BYTE PTR ds:[ebx]
  40a9a2:	jbe    0x40a970
  40a9a4:	inc    eax
  40a9a5:	push   esi
  40a9a6:	leave  
  40a9a7:	xchg   esp,eax
  40a9a8:	shr    al,1
  40a9aa:	dec    esi
  40a9ab:	outs   dx,DWORD PTR ds:[esi]
  40a9ac:	rcr    dl,1
  40a9ae:	sbb    eax,0x47a65895
  40a9b3:	hlt    
  40a9b4:	sub    al,0xfc
  40a9b6:	mov    bh,0xfe
  40a9b8:	xchg   ebp,eax
  40a9b9:	push   ecx
  40a9ba:	jle    0x40a9b8
  40a9bc:	adc    al,0xd9
  40a9be:	imul   esp,DWORD PTR [esi-0x6a2a5b59],0x724e6d25
  40a9c8:	popf   
  40a9c9:	aaa    
  40a9ca:	mov    ebp,0x8f45717b
  40a9cf:	arpl   WORD PTR [ecx],sp
  40a9d1:	ins    DWORD PTR es:[edi],dx
  40a9d2:	inc    esp
  40a9d3:	pop    ss
  40a9d4:	mov    edi,0x7e0e4378
  40a9d9:	jns    0x40a9d6
  40a9db:	adc    BYTE PTR [edi],dl
  40a9dd:	jp     0x40aa2f
  40a9df:	imul   edx,DWORD PTR [ebp-0xe],0x7817084d
  40a9e6:	mov    al,ds:0xd4100e2a
  40a9eb:	inc    esp
  40a9ec:	jne    0x40a997
  40a9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9ef:	jmp    0x40a9ef
  40a9f1:	(bad)  
  40a9f5:	mov    bl,0x5f
  40a9f7:	ins    DWORD PTR es:[edi],dx
  40a9f8:	fcom   DWORD PTR [ebx-0x16]
  40a9fb:	push   edi
  40a9fc:	in     eax,0x57
  40a9fe:	pop    ebx
  40a9ff:	jb     0x40a999
  40aa01:	fnstsw WORD PTR [esi+0x582aec0d]
  40aa07:	push   esi
  40aa08:	dec    esi
  40aa09:	jl     0x40a9c5
  40aa0b:	dec    eax
  40aa0c:	mov    esi,eax
  40aa0e:	cmp    BYTE PTR [ecx+0xf],ch
  40aa11:	mov    al,ds:0x611a40c5
  40aa16:	out    0x54,al
  40aa18:	lods   al,BYTE PTR ds:[esi]
  40aa19:	cld    
  40aa1a:	xlat   BYTE PTR ds:[ebx]
  40aa1b:	js     0x40a9d9
  40aa1d:	clc    
  40aa1e:	adc    al,0x3c
  40aa20:	xchg   esi,eax
  40aa21:	cli    
  40aa22:	dec    DWORD PTR [edx-0x362c5855]
  40aa28:	push   edx
  40aa29:	push   es
  40aa2a:	call   0xb501eb39
  40aa2f:	jbe    0x40aa32
  40aa31:	sub    eax,0x7eede081
  40aa36:	retf   0xaa9d
  40aa39:	ficom  WORD PTR [ebp+0x68]
  40aa3c:	stc    
  40aa3d:	jbe    0x40a9c9
  40aa3f:	mov    bl,0xd8
  40aa41:	in     al,0xde
  40aa43:	outs   dx,BYTE PTR ds:[esi]
  40aa44:	adc    DWORD PTR [esp+edx*8+0x3c9037bd],esi
  40aa4b:	lds    esp,FWORD PTR [edx+0x32]
  40aa4e:	sub    DWORD PTR ds:0x76be1b23,eax
  40aa54:	mov    ecx,0xc2a66d27
  40aa59:	leave  
  40aa5a:	or     al,BYTE PTR [esi]
  40aa5c:	sub    eax,DWORD PTR [edx-0x7a]
  40aa5f:	inc    esp
  40aa60:	push   edx
  40aa61:	idiv   BYTE PTR [esi]
  40aa63:	in     eax,0x3c
  40aa65:	or     ebx,DWORD PTR [eax]
  40aa67:	mov    edx,0x10b95f38
  40aa6c:	fucomp st(2)
  40aa6e:	ror    BYTE PTR [esi+ecx*2+0x6aa7da84],cl
  40aa75:	push   edx
  40aa76:	adc    al,0x90
  40aa78:	and    edx,edx
  40aa7a:	sub    edx,DWORD PTR [eax-0x1b]
  40aa7d:	test   DWORD PTR [esi+0x7c],eax
  40aa80:	and    DWORD PTR [eax-0x66],0x2a
  40aa84:	cmp    ch,BYTE PTR [eax+0x52]
  40aa87:	xor    eax,0xf499017b
  40aa8c:	jecxz  0x40aaed
  40aa8e:	lds    edi,FWORD PTR [edx]
  40aa90:	adc    BYTE PTR [eax],bh
  40aa92:	and    eax,0x6ce9fac7
  40aa97:	fimul  DWORD PTR [ecx-0x22]
  40aa9a:	and    BYTE PTR [eax-0x451effe6],dh
  40aaa0:	adc    BYTE PTR [edx-0x7d4f1c34],dh
  40aaa6:	and    ah,BYTE PTR [eax-0x7e]
  40aaa9:	pop    edx
  40aaaa:	or     dl,BYTE PTR [eax+eax*2]
  40aaad:	jnp    0x40aae9
  40aaaf:	add    DWORD PTR [ebx+0x11],0xff7d5e44
  40aab6:	ret    
  40aab7:	es in  al,dx
  40aab9:	lods   al,BYTE PTR ds:[esi]
  40aaba:	call   0x6830:0xfe626a8f
  40aac1:	loope  0x40ab14
  40aac3:	(bad)  
  40aac4:	int3   
  40aac5:	mov    ds:0x7a0cd086,al
  40aaca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aacb:	shl    DWORD PTR [eax+0x1b8ccfc5],cl
  40aad1:	fwait
  40aad2:	xchg   edx,eax
  40aad3:	dec    ebx
  40aad4:	daa    
  40aad5:	fidiv  WORD PTR [eax+0x38]
  40aad8:	sar    BYTE PTR [eax+0xc22cb36],0x8b
  40aadf:	dec    edx
  40aae0:	jns    0x40aae1
  40aae2:	add    DWORD PTR es:[eax+ebx*1],0x76
  40aae7:	xchg   ebp,eax
  40aae8:	call   0xca67b69d
  40aaed:	inc    ebp
  40aaee:	sub    al,0x9f
  40aaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf1:	dec    ebx
  40aaf2:	dec    edx
  40aaf3:	xor    DWORD PTR [ecx-0x9b48f56],ebx
  40aaf9:	push   eax
  40aafa:	pop    esi
  40aafb:	arpl   WORD PTR ds:0xfee41659,cx
  40ab01:	sub    BYTE PTR [ecx],bh
  40ab03:	test   eax,0xb08d1e97
  40ab08:	sbb    esi,DWORD PTR [ebx+0x548b557d]
  40ab0e:	mov    bh,0x10
  40ab10:	test   BYTE PTR [esi-0x4694d1aa],bl
  40ab16:	jb     0x40aaaf
  40ab18:	sbb    edx,ecx
  40ab1a:	fld    TBYTE PTR [edx]
  40ab1c:	add    al,0x3d
  40ab1e:	sub    esp,esi
  40ab20:	pop    ebp
  40ab21:	lods   eax,DWORD PTR ds:[esi]
  40ab22:	adc    BYTE PTR [ebx],ch
  40ab24:	push   ebp
  40ab25:	ins    DWORD PTR es:[edi],dx
  40ab26:	jmp    0x253bb93e
  40ab2b:	dec    edi
  40ab2c:	(bad)  
  40ab2d:	call   DWORD PTR [edx-0x52869efe]
  40ab33:	adc    eax,0x66446d5d
  40ab38:	adc    al,0x8b
  40ab3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab3b:	dec    esi
  40ab3c:	fcomi  st,st(7)
  40ab3e:	push   es
  40ab3f:	sbb    eax,0xcc4582a3
  40ab44:	jg     0x40ab01
  40ab46:	lea    edx,[ebp+0x3c]
  40ab49:	data16 or al,0xe
  40ab4c:	add    ah,ah
  40ab4e:	(bad)  
  40ab4f:	mov    ah,0x39
  40ab51:	mov    ch,0xbc
  40ab53:	aam    0x9f
  40ab55:	pop    ds
  40ab56:	(bad)  
  40ab57:	sbb    al,0x75
  40ab59:	hlt    
  40ab5a:	cdq    
  40ab5b:	pushf  
  40ab5c:	xor    DWORD PTR [edi+0x38],esp
  40ab5f:	sub    eax,0x96f7f1be
  40ab64:	mov    cl,0xe1
  40ab66:	sub    edi,DWORD PTR [ebp+0x53]
  40ab69:	pop    esp
  40ab6a:	pop    es
  40ab6b:	iret   
  40ab6c:	adc    al,0x9c
  40ab6e:	sub    dl,dh
  40ab70:	jmp    0x40abe0
  40ab72:	mov    al,ds:0x34630eb6
  40ab77:	and    BYTE PTR [esi],0xdc
  40ab7a:	mov    edx,0x8ff4f8ef
  40ab7f:	(bad)  
  40ab81:	push   esp
  40ab82:	into   
  40ab83:	fisub  WORD PTR [ebx]
  40ab85:	sub    edx,DWORD PTR [edi-0x46f34b6d]
  40ab8b:	fisttp WORD PTR [ebp+0x7a]
  40ab8e:	add    dl,BYTE PTR [ebx+eiz*1-0x56]
  40ab92:	into   
  40ab93:	es pushf 
  40ab95:	push   cs
  40ab96:	jg     0x40ac13
  40ab98:	mov    al,ds:0xf7807da8
  40ab9d:	mov    dl,0xb
  40ab9f:	mov    bl,dl
  40aba1:	sar    DWORD PTR [edi],0x83
  40aba4:	idiv   DWORD PTR [ebp+eiz*2-0x1d7151d4]
  40abab:	lahf   
  40abac:	or     DWORD PTR [ebx],edi
  40abae:	xor    DWORD PTR [ebp+ebx*8+0x2e3dcc6],ebx
  40abb5:	retf   0xafb9
  40abb8:	jle    0x40aba8
  40abba:	and    al,BYTE PTR [ebx]
  40abbc:	pop    ds
  40abbd:	jns    0x40ab7d
  40abbf:	inc    ecx
  40abc0:	mov    eax,0x929704c8
  40abc5:	scas   al,BYTE PTR es:[edi]
  40abc6:	out    0x28,al
  40abc8:	repz push es
  40abca:	dec    eax
  40abcb:	xchg   edx,eax
  40abcc:	dec    esi
  40abcd:	cmp    dh,bh
  40abcf:	sar    DWORD PTR [ebx],1
  40abd1:	fcom   st(6)
  40abd3:	sub    BYTE PTR [esi-0x4e],bl
  40abd6:	out    dx,eax
  40abd7:	sbb    DWORD PTR [edi],edi
  40abd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abda:	fcomp  DWORD PTR [ebp-0x16b04e0f]
  40abe0:	fs jmp 0x4f81:0x48d7dafa
  40abe8:	fmul   QWORD PTR gs:[eax+0x2b]
  40abec:	adc    ah,BYTE PTR [ecx-0x5a0a551d]
  40abf2:	fs jns 0x40ab8e
  40abf5:	or     ecx,ecx
  40abf7:	clc    
  40abf8:	or     al,0xbe
  40abfa:	dec    eax
  40abfb:	loope  0x40abf8
  40abfd:	mov    ecx,0x123fb12b
  40ac02:	(bad)  
  40ac03:	cmp    BYTE PTR [esi-0x659f9cc9],ah
  40ac09:	mul    DWORD PTR [edi+0x77]
  40ac0c:	dec    ebx
  40ac0d:	push   ds
  40ac0e:	cmp    ah,BYTE PTR [eax+0x632f3b55]
  40ac14:	push   ecx
  40ac15:	sub    esi,DWORD PTR [esi-0x2fd4511e]
  40ac1b:	cmc    
  40ac1c:	mov    esp,0x6241559e
  40ac21:	xchg   ch,ch
  40ac23:	push   cs
  40ac24:	add    DWORD PTR [ebx],esi
  40ac26:	jnp    0x40aca2
  40ac28:	(bad)  
  40ac29:	fcomp  QWORD PTR [eax]
  40ac2b:	and    cl,cl
  40ac2d:	mov    ch,0xfa
  40ac2f:	jge    0x40abee
  40ac31:	and    dh,BYTE PTR [eax-0x1e150257]
  40ac37:	mov    WORD PTR [esp+edi*4+0x30],es
  40ac3b:	fldz   
  40ac3d:	push   edi
  40ac3e:	cmp    bl,bh
  40ac40:	xchg   BYTE PTR [esi-0x2eda966e],ah
  40ac46:	push   ds
  40ac47:	lods   eax,DWORD PTR ds:[esi]
  40ac48:	fcmovnb st,st(7)
  40ac4a:	inc    esi
  40ac4b:	pop    ebp
  40ac4c:	xchg   esi,eax
  40ac4d:	nop
  40ac4e:	(bad)  
  40ac4f:	das    
  40ac50:	mov    dl,0xce
  40ac52:	jne    0x40ac0c
  40ac54:	add    ecx,esp
  40ac56:	mov    eax,0xcfd09ebb
  40ac5b:	(bad)  
  40ac5c:	imul   DWORD PTR [edx+0x76d0f717]
  40ac62:	push   esp
  40ac63:	jno    0x40ac53
  40ac65:	mov    ds:0x22e5c0f8,al
  40ac6a:	mov    gs,WORD PTR [esi-0x50]
  40ac6d:	repz push es
  40ac6f:	stos   DWORD PTR es:[edi],eax
  40ac70:	xor    eax,0x3e6b9792
  40ac75:	and    BYTE PTR [ecx-0x5d],dl
  40ac78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac79:	cwde   
  40ac7a:	lea    edi,[edx+0xb]
  40ac7d:	stos   BYTE PTR es:[edi],al
  40ac7e:	das    
  40ac7f:	pop    es
  40ac80:	js     0x40ac7a
  40ac82:	and    ch,ah
  40ac84:	and    al,0x86
  40ac86:	or     eax,0x97124f59
  40ac8b:	push   ebx
  40ac8c:	pop    eax
  40ac8d:	rcr    ch,cl
  40ac8f:	xchg   DWORD PTR [eax-0x7],ebp
  40ac92:	lods   eax,DWORD PTR ds:[esi]
  40ac93:	xchg   ecx,eax
  40ac94:	pop    ebx
  40ac95:	and    dh,BYTE PTR ds:0xf01da051
  40ac9b:	mov    ch,0xd4
  40ac9d:	imul   ecx,DWORD PTR [esi-0x5c],0x396fe6e4
  40aca4:	sub    al,0x2b
  40aca6:	sbb    edi,0x5a234806
  40acac:	ret    0xea47
  40acaf:	jle    0x40ac8d
  40acb1:	lods   al,BYTE PTR ds:[esi]
  40acb2:	cli    
  40acb3:	shl    BYTE PTR [ecx+0x79ad1462],0xa0
  40acba:	push   ebp
  40acbb:	xchg   BYTE PTR [ecx+0x5d9314ff],al
  40acc1:	add    eax,0xe8c0ac51
  40acc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc7:	into   
  40acc8:	shl    DWORD PTR [eax],1
  40acca:	mov    esi,0x8a0a225d
  40accf:	mov    al,ds:0x7c6a1c97
  40acd4:	pusha  
  40acd5:	out    0x40,al
  40acd7:	xor    al,BYTE PTR [eax]
  40acd9:	imul   edx,DWORD PTR [eax+ebp*1+0x638fb1ce],0xffffffba
  40ace1:	jecxz  0x40ad39
  40ace3:	out    dx,al
  40ace4:	or     eax,0x10d2511e
  40ace9:	jge    0x40ace2
  40aceb:	es mov eax,0x9c4ad8c8
  40acf1:	lock xchg edx,eax
  40acf3:	push   eax
  40acf4:	shr    DWORD PTR [esi],1
  40acf6:	ds inc ebx
  40acf8:	xchg   esi,eax
  40acf9:	js     0x40ad4f
  40acfb:	sub    eax,0xc971cdf5
  40ad00:	pusha  
  40ad01:	loopne 0x40ad3f
  40ad03:	jl     0x40acb4
  40ad05:	out    dx,eax
  40ad06:	sub    dl,BYTE PTR [esi+0x37]
  40ad09:	mov    esi,0x978c463
  40ad0e:	jno    0x40acd8
  40ad10:	push   ebx
  40ad11:	pushf  
  40ad12:	dec    esp
  40ad13:	(bad)  
  40ad14:	aam    0xfd
  40ad16:	out    dx,al
  40ad17:	loop   0x40accc
  40ad19:	test   ah,0xbe
  40ad1c:	in     eax,0x28
  40ad1e:	jp     0x40ad06
  40ad20:	sar    ecx,1
  40ad22:	stos   BYTE PTR es:[edi],al
  40ad23:	sti    
  40ad24:	ins    BYTE PTR es:[edi],dx
  40ad25:	inc    eax
  40ad26:	adc    edi,DWORD PTR [esi-0x34]
  40ad29:	lods   eax,DWORD PTR ds:[esi]
  40ad2a:	or     eax,0x5e663a8e
  40ad2f:	mov    ebp,DWORD PTR [esi+ecx*8+0x7b9e0f6d]
  40ad36:	jo     0x40ad25
  40ad38:	retf   
  40ad39:	aaa    
  40ad3a:	xchg   ebp,eax
  40ad3b:	adc    al,0x64
  40ad3d:	and    DWORD PTR [ecx],esp
  40ad3f:	or     bh,BYTE PTR [edi-0xb]
  40ad42:	data16 add bh,ch
  40ad45:	(bad)  
  40ad46:	fst    DWORD PTR [ecx]
  40ad48:	xchg   esi,eax
  40ad49:	sub    ebx,0x1b04791d
  40ad4f:	sti    
  40ad50:	out    dx,al
  40ad51:	mov    bh,0x5b
  40ad53:	jnp    0x40ad39
  40ad55:	fsub   QWORD PTR [ebx+0x3b]
  40ad58:	popa   
  40ad59:	inc    ebx
  40ad5a:	push   esp
  40ad5b:	(bad)  
  40ad5c:	js     0x40adca
  40ad5e:	sbb    BYTE PTR [edx+0x4e],0x76
  40ad62:	repz (bad) 
  40ad64:	pop    edi
  40ad65:	fnsave [eax-0x716fb0f3]
  40ad6b:	mov    ebp,0x7b273336
  40ad70:	icebp  
  40ad71:	add    ebp,DWORD PTR [ecx-0x7ea74105]
  40ad77:	mov    esp,0x189b6afb
  40ad7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7d:	inc    edx
  40ad7e:	and    edi,DWORD PTR [ebp+0x24e934d3]
  40ad84:	inc    eax
  40ad85:	inc    ecx
  40ad86:	test   al,0xec
  40ad88:	add    ebp,DWORD PTR [ebp+0x646c5308]
  40ad8e:	inc    ecx
  40ad8f:	add    eax,0xf36fd7b4
  40ad94:	push   edi
  40ad95:	sahf   
  40ad96:	inc    ebp
  40ad97:	idiv   DWORD PTR [ebp+0x3f]
  40ad9a:	arpl   WORD PTR [ebp+0x12],bx
  40ad9d:	cdq    
  40ad9e:	adc    BYTE PTR ds:0x42503891,0xb7
  40ada5:	mov    esi,DWORD PTR [ebx-0x77]
  40ada8:	les    ecx,FWORD PTR [esp+ecx*4]
  40adab:	ret    
  40adac:	xor    eax,0x3718c4df
  40adb1:	out    0xad,eax
  40adb3:	loop   0x40ad45
  40adb5:	xchg   esp,eax
  40adb6:	clc    
  40adb7:	xor    BYTE PTR [eax],ch
  40adb9:	mov    eax,0x12ef2f61
  40adbe:	sub    ah,dl
  40adc0:	js     0x40ad83
  40adc2:	pop    ecx
  40adc3:	xor    ch,bh
  40adc5:	gs dec ebp
  40adc7:	daa    
  40adc8:	add    eax,0xf9ef55ee
  40adcd:	out    0x5b,al
  40adcf:	sub    BYTE PTR [ebp-0x6cfbdf46],0xc8
  40add6:	pushf  
  40add7:	in     eax,0xaf
  40add9:	push   edi
  40adda:	cdq    
  40addb:	sub    DWORD PTR [ebp-0x2f63d533],esp
  40ade1:	xchg   ebx,eax
  40ade2:	scas   eax,DWORD PTR es:[edi]
  40ade3:	and    DWORD PTR [esp+edi*1-0xf61b1c2],esp
  40adea:	rcr    dl,0x30
  40aded:	mov    bh,ch
  40adef:	ficom  DWORD PTR [ebp-0x2c67ca93]
  40adf5:	fwait
  40adf6:	lahf   
  40adf7:	inc    esp
  40adf8:	inc    esp
  40adf9:	xchg   ebx,eax
  40adfa:	jge    0x40ad8f
  40adfc:	out    0x36,eax
  40adfe:	repz xchg esi,eax
  40ae00:	push   ds
  40ae01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae02:	add    al,0xa3
  40ae04:	shl    DWORD PTR [eax-0x12b6fa7c],0xef
  40ae0b:	fbld   TBYTE PTR [edx-0x3f]
  40ae0e:	push   esi
  40ae0f:	pop    ebp
  40ae10:	mov    dh,0xfe
  40ae12:	sub    BYTE PTR [edx+0x4b6f91c6],dh
  40ae18:	ret    
  40ae19:	ss (bad) 
  40ae1b:	lahf   
  40ae1c:	add    eax,0x4c04c1b3
  40ae21:	jae    0x40ae62
  40ae23:	pop    edx
  40ae24:	sub    BYTE PTR [edi+0x4f91bae6],bl
  40ae2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae2b:	mov    edx,0x55aa0142
  40ae30:	mov    ds:0xc0b8105a,eax
  40ae35:	inc    edi
  40ae36:	push   esp
  40ae37:	sub    eax,0xc2812424
  40ae3c:	iret   
  40ae3d:	push   ebx
  40ae3e:	xchg   ch,al
  40ae40:	push   edi
  40ae41:	inc    edi
  40ae42:	loopne 0x40aeae
  40ae44:	ror    ecx,cl
  40ae46:	ins    BYTE PTR es:[edi],dx
  40ae47:	gs pop eax
  40ae49:	jbe    0x40ae0e
  40ae4b:	pusha  
  40ae4c:	jecxz  0x40ae75
  40ae4e:	test   BYTE PTR [edx+0x60],0x97
  40ae52:	test   DWORD PTR [ecx+0x15],0xf4d35482
  40ae59:	jp     0x40ae0e
  40ae5b:	mul    DWORD PTR [eax+esi*1]
  40ae5e:	and    edx,edx
  40ae60:	(bad)  
  40ae61:	fild   QWORD PTR [esi]
  40ae63:	popf   
  40ae64:	hlt    
  40ae65:	loope  0x40ae0c
  40ae67:	pop    ecx
  40ae68:	mov    ebp,0xb3202d7c
  40ae6d:	mov    edi,0x695b81ca
  40ae72:	in     al,dx
  40ae73:	push   ebp
  40ae74:	push   0x736e0f9e
  40ae79:	mov    ds:0x6fa12f6b,eax
  40ae7e:	iret   
  40ae7f:	scas   eax,DWORD PTR es:[edi]
  40ae80:	push   es
  40ae81:	dec    esi
  40ae82:	mov    BYTE PTR [edi-0xe],al
  40ae85:	in     al,dx
  40ae86:	call   0x23cbb142
  40ae8b:	iret   
  40ae8c:	jmp    DWORD PTR [edx-0x7e]
  40ae8f:	jge    0x40ae5f
  40ae91:	cli    
  40ae92:	mov    esp,0xc3e490ad
  40ae97:	push   ebx
  40ae98:	scas   al,BYTE PTR es:[edi]
  40ae99:	pushf  
  40ae9a:	push   ss
  40ae9b:	cmp    DWORD PTR [ebp-0x40317a45],0xffffff86
  40aea2:	sub    al,0xd8
  40aea4:	sahf   
  40aea5:	jnp    0x40ae74
  40aea7:	mov    edx,0x6f9f91b1
  40aeac:	nop
  40aead:	fnsave [edi+0x5a816537]
  40aeb3:	or     dl,BYTE PTR [ebx-0x675b5e76]
  40aeb9:	test   DWORD PTR [edi+0x21],0x691256d2
  40aec0:	inc    esi
  40aec1:	sbb    dl,0x4d
  40aec4:	inc    esi
  40aec5:	js     0x40aeda
  40aec7:	aad    0x9b
  40aec9:	data16 mov bl,dh
  40aecc:	xchg   esi,eax
  40aecd:	test   DWORD PTR [edx],0x972c115f
  40aed3:	push   cs
  40aed4:	(bad)  
  40aed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aed6:	push   ebp
  40aed7:	pop    ecx
  40aed8:	push   ecx
  40aed9:	jl     0x40af46
  40aedb:	repz adc al,dh
  40aede:	pop    ecx
  40aedf:	mov    eax,ds:0xa36fd11e
  40aee4:	adc    edx,edi
  40aee6:	aad    0xfd
  40aee8:	(bad)  
  40aee9:	int3   
  40aeea:	cli    
  40aeeb:	and    BYTE PTR [eax-0x31c97de2],dl
  40aef1:	jae    0x40aee9
  40aef3:	ror    DWORD PTR [edi-0xbcb335c],1
  40aef9:	fbstp  TBYTE PTR [esi+0x789cdeec]
  40aeff:	cli    
  40af00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af01:	add    DWORD PTR ds:[edx],ecx
  40af04:	adc    edi,DWORD PTR [eax-0x10]
  40af07:	std    
  40af08:	sbb    ch,BYTE PTR [ebx]
  40af0a:	mov    ebx,0x3d0e595b
  40af0f:	fnstenv [edi+0x5b00ee4b]
  40af15:	mov    bl,0x4
  40af17:	mov    dl,BYTE PTR [ebx-0x3ce95fa3]
  40af1d:	imul   edx,DWORD PTR [ebp+eiz*2+0x3c],0x28a8483c
  40af25:	fadd   QWORD PTR [ecx]
  40af27:	cwde   
  40af28:	dec    edx
  40af29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2a:	mov    edi,0x96bf2d06
  40af2f:	sbb    BYTE PTR [edx],dh
  40af31:	lods   al,BYTE PTR ds:[esi]
  40af32:	ficomp WORD PTR [ecx-0x34]
  40af35:	mov    bh,0x81
  40af37:	mov    dh,0xc
  40af39:	sti    
  40af3a:	sub    eax,0xfa221b2a
  40af3f:	not    DWORD PTR [ebx+0x5333eda0]
  40af45:	lods   al,BYTE PTR ds:[esi]
  40af46:	add    ah,BYTE PTR [ecx+0x76]
  40af49:	push   es
  40af4a:	ret    0x2974
  40af4d:	add    edx,DWORD PTR [ebx+0x67c97b6f]
  40af53:	jg     0x40af01
  40af55:	(bad)  
  40af56:	mov    ah,0xc9
  40af58:	and    al,0xb7
  40af5a:	sub    al,BYTE PTR [ebx+edx*1-0x25]
  40af5e:	mov    ebp,0xd11a3d3
  40af63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af64:	xlat   BYTE PTR ds:[ebx]
  40af65:	jge    0x40af62
  40af67:	je     0x40afa1
  40af69:	jge    0x40afdb
  40af6b:	iret   
  40af6c:	into   
  40af6d:	sub    ecx,DWORD PTR [ebp+0x4dbe751a]
  40af73:	and    eax,ebx
  40af75:	fnstenv [ecx-0x3c]
  40af78:	mov    ds:0x119ee8c1,al
  40af7d:	cld    
  40af7e:	in     eax,0x6e
  40af80:	or     al,0x8e
  40af82:	leave  
  40af83:	sbb    al,0x3b
  40af85:	data16 int 0x29
  40af88:	cmp    eax,0x2e89a52d
  40af8d:	mov    eax,0xd7610949
  40af92:	mov    ah,0x4
  40af94:	adc    bl,BYTE PTR [edi+0x5f]
  40af97:	out    dx,al
  40af98:	xor    al,0x21
  40af9a:	mov    ds:0x2a708dd2,eax
  40af9f:	inc    esi
  40afa0:	lahf   
  40afa1:	xchg   esi,eax
  40afa2:	adc    eax,0x5dfa357
  40afa7:	push   esi
  40afa8:	push   ecx
  40afa9:	jge    0x40afba
  40afab:	pop    esp
  40afac:	pushf  
  40afad:	call   0x2036:0xb3a90ba8
  40afb4:	dec    eax
  40afb5:	and    esi,DWORD PTR [eax]
  40afb7:	aad    0xd6
  40afb9:	mov    edi,0x43920442
  40afbe:	fdivrp st(4),st
  40afc0:	scas   al,BYTE PTR es:[edi]
  40afc1:	adc    al,0xf8
  40afc3:	inc    eax
  40afc4:	fs and ch,bh
  40afc7:	inc    eax
  40afc8:	jnp    0x40af5a
  40afca:	cli    
  40afcb:	jb     0x40b022
  40afcd:	not    BYTE PTR [edx-0x5d]
  40afd0:	stc    
  40afd1:	pop    ds
  40afd2:	ffree  st(4)
  40afd4:	pop    ds
  40afd5:	sub    ah,ch
  40afd7:	push   ds
  40afd8:	hlt    
  40afd9:	dec    ecx
  40afda:	jb     0x40afc3
  40afdc:	sbb    dh,BYTE PTR [ebx+ecx*4]
  40afdf:	jg     0x40af7e
  40afe1:	mov    ds:0x932db123,al
  40afe6:	neg    BYTE PTR [eax]
  40afe8:	pusha  
  40afe9:	xor    ecx,DWORD PTR [eax-0x2a]
  40afec:	pushf  
  40afed:	sub    DWORD PTR [eax-0x503d18b7],edx
  40aff3:	fimul  WORD PTR [edx+0x7d]
  40aff6:	cdq    
  40aff7:	inc    ecx
  40aff8:	ret    0x7f35
  40affb:	data16 fbld TBYTE PTR [eax+0x7a]
  40afff:	mov    ds:0xabb899f2,al
  40b004:	out    dx,al
  40b005:	xchg   esi,eax
  40b006:	repnz in al,dx
  40b008:	adc    al,0x6c
  40b00a:	idiv   BYTE PTR ss:[edi]
  40b00d:	mov    eax,ds:0xbf73617b
  40b012:	sub    bh,BYTE PTR [eax]
  40b014:	or     BYTE PTR [esi-0x6b],cl
  40b017:	push   esp
  40b018:	(bad)  
  40b019:	and    eax,0xd061b319
  40b01e:	iret   
  40b01f:	dec    ecx
  40b020:	daa    
  40b021:	icebp  
  40b022:	fisttp WORD PTR [edi]
  40b024:	shl    BYTE PTR [ebp-0x6a],0x86
  40b028:	int3   
  40b029:	add    al,0xa6
  40b02b:	repnz les eax,FWORD PTR [edx+0x2f7587f4]
  40b032:	xor    ecx,0x6f
  40b035:	jmp    0x40b070
  40b037:	push   ecx
  40b038:	int3   
  40b039:	cmp    DWORD PTR [ebx],ecx
  40b03b:	fst    QWORD PTR [ecx-0x56]
  40b03e:	cmp    esi,ebx
  40b040:	and    al,0x63
  40b042:	mov    dl,0xa2
  40b044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b045:	test   dh,ah
  40b047:	sub    cl,BYTE PTR [edi+ebx*8]
  40b04a:	sub    esi,DWORD PTR [eax+0x6844fee7]
  40b050:	push   esp
  40b051:	xor    eax,0xfca781bc
  40b056:	mov    eax,0x49606fd5
  40b05b:	icebp  
  40b05c:	fild   WORD PTR [esi+0x5aa31a89]
  40b062:	das    
  40b063:	mov    WORD PTR [eax+ecx*4],ds
  40b066:	dec    ebx
  40b067:	dec    esi
  40b068:	es inc ax
  40b06b:	test   eax,0x823e4729
  40b070:	les    ebx,FWORD PTR [ebp+0x4b06c03b]
  40b076:	in     eax,0xc6
  40b078:	xor    DWORD PTR [edx+0x1d14df89],0x381868be
  40b082:	out    dx,eax
  40b083:	lea    eax,[edx]
  40b085:	idiv   ebp
  40b087:	call   0x88cedfa7
  40b08c:	addr16 dec esp
  40b08e:	xor    al,dh
  40b090:	fistp  QWORD PTR gs:[edx+0x6b]
  40b094:	xchg   edi,eax
  40b095:	mov    bl,0x52
  40b097:	and    al,0x5a
  40b099:	add    ah,dl
  40b09b:	xor    DWORD PTR [esi+eiz*1],ecx
  40b09e:	cdq    
  40b09f:	mov    ds:0xc6e95372,eax
  40b0a4:	cmp    eax,0xd177297d
  40b0a9:	xchg   edx,eax
  40b0aa:	imul   ecx,DWORD PTR [eax+0xd5e2418],0xd71fd6a4
  40b0b4:	outs   dx,BYTE PTR ds:[esi]
  40b0b5:	cwde   
  40b0b6:	sbb    eax,0xc961c324
  40b0bb:	fs cli 
  40b0bd:	retf   
  40b0be:	adc    eax,0xb7daf753
  40b0c3:	push   edi
  40b0c4:	mov    ah,0xb2
  40b0c6:	adc    al,0xe0
  40b0c8:	sti    
  40b0c9:	inc    ebx
  40b0ca:	arpl   sp,si
  40b0cc:	sar    DWORD PTR [edi],0x81
  40b0cf:	ror    DWORD PTR [esi],1
  40b0d1:	fild   DWORD PTR [edx+0x4e2cf44f]
  40b0d7:	jle    0x40b0a9
  40b0d9:	jns    0x40b0b0
  40b0db:	loop   0x40b13b
  40b0dd:	loopne 0x40b114
  40b0df:	jne    0x40b075
  40b0e1:	(bad)  
  40b0e3:	ret    
  40b0e4:	test   WORD PTR [ecx],bx
  40b0e7:	shr    DWORD PTR [eax-0x12c673c7],cl
  40b0ed:	test   eax,0xfedbc7d
  40b0f2:	jne    0x40b0d7
  40b0f4:	pusha  
  40b0f5:	jmp    0xd3a08126
  40b0fa:	or     al,0xc1
  40b0fc:	jne    0x40b12f
  40b0fe:	and    esp,esp
  40b100:	rcl    BYTE PTR [ebp-0x7bd32e74],cl
  40b106:	mov    dh,0xfc
  40b108:	aas    
  40b109:	mov    al,ds:0xae351c99
  40b10e:	push   eax
  40b10f:	loopne 0x40b102
  40b111:	xor    esi,DWORD PTR [edx]
  40b113:	adc    cl,bl
  40b115:	repz dec ecx
  40b117:	aam    0x48
  40b119:	daa    
  40b11a:	imul   ebx,edi,0xc4a8cd5
  40b120:	sbb    BYTE PTR [ebp-0x20],bl
  40b123:	repnz pop esi
  40b125:	repnz ins DWORD PTR es:[edi],dx
  40b127:	push   0x67
  40b129:	inc    ebx
  40b12a:	call   0x80ed:0xd659c999
  40b131:	addr16 push ebp
  40b133:	loop   0x40b132
  40b135:	push   0x81aa44c
  40b13a:	or     DWORD PTR [eax],edi
  40b13c:	xor    ah,BYTE PTR [ebp+0x33f3819]
  40b142:	shl    BYTE PTR [edx],cl
  40b144:	or     edx,DWORD PTR [ebx+0x7d5d9c89]
  40b14a:	xlat   BYTE PTR ds:[ebx]
  40b14b:	and    eax,0xc8525217
  40b150:	call   0xae08:0xe604f07a
  40b157:	je     0x40b1be
  40b159:	lahf   
  40b15a:	ss sahf 
  40b15c:	pop    ebp
  40b15d:	test   al,0x78
  40b15f:	xchg   BYTE PTR [eax+0x59a1bd03],cl
  40b165:	jmp    0x40b1c4
  40b167:	popa   
  40b168:	lods   eax,DWORD PTR ds:[esi]
  40b169:	or     edx,DWORD PTR [ebp-0x176663ea]
  40b16f:	xor    esi,DWORD PTR [esi+ebp*4+0x6]
  40b173:	add    ebx,0xffffff94
  40b176:	pop    ss
  40b177:	jl     0x40b10b
  40b179:	xchg   esp,eax
  40b17a:	adc    DWORD PTR [eax+0x71],ebx
  40b17d:	jno    0x40b168
  40b17f:	ins    BYTE PTR es:[edi],dx
  40b180:	inc    eax
  40b181:	test   bl,0xe
  40b184:	dec    ecx
  40b185:	not    BYTE PTR ds:[ebx+0x4d8ecf61]
  40b18c:	sub    cl,BYTE PTR gs:[ebp+eax*8-0xded70ce]
  40b194:	sub    esp,DWORD PTR [esi+eiz*1+0x30]
  40b198:	mov    edi,edi
  40b19a:	jg     0x40b1b6
  40b19c:	dec    ebx
  40b19d:	pop    ebx
  40b19e:	jl     0x40b1c0
  40b1a0:	sub    al,0x6
  40b1a2:	adc    cl,BYTE PTR [edx-0x152f6df5]
  40b1a8:	pop    edx
  40b1a9:	shr    bh,cl
  40b1ab:	jb     0x40b179
  40b1ad:	mov    DWORD PTR [ebp+0x58],ecx
  40b1b0:	cmp    BYTE PTR [edx-0x58510b2c],ch
  40b1b6:	push   esi
  40b1b7:	test   eax,0x14672153
  40b1bc:	push   es
  40b1bd:	repnz repz dec eax
  40b1c0:	fidivr DWORD PTR [ecx-0x7f]
  40b1c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c4:	mov    cl,0xee
  40b1c6:	mov    ah,0x3
  40b1c8:	xrelease xchg DWORD PTR [edi-0x552d0998],eax
  40b1cf:	clc    
  40b1d0:	loop   0x40b159
  40b1d2:	cld    
  40b1d3:	pop    ebx
  40b1d4:	test   al,0x4d
  40b1d6:	sub    DWORD PTR [edi+0x39141b82],edx
  40b1dc:	arpl   WORD PTR [edi+0x4d420c2f],ax
  40b1e2:	mov    WORD PTR [esi],gs
  40b1e4:	std    
  40b1e5:	push   cs
  40b1e6:	test   DWORD PTR [esi+0x1dc28013],ebp
  40b1ec:	pushf  
  40b1ed:	jg     0x40b23e
  40b1ef:	sbb    DWORD PTR [ebp+eiz*1+0x26046455],ebx
  40b1f6:	adc    al,0xc6
  40b1f8:	in     al,dx
  40b1f9:	imul   edx,DWORD PTR [edx-0x4c],0xffffff85
  40b1fd:	nop
  40b1fe:	mov    dl,0x6
  40b200:	into   
  40b201:	sub    BYTE PTR [ebp+esi*4+0x29],ch
  40b205:	(bad)  
  40b206:	sbb    BYTE PTR [edx+edx*2-0x1f6e4de9],ch
  40b20d:	mov    bl,0x51
  40b20f:	cmp    al,0xd8
  40b211:	jmp    0x40b233
  40b213:	cmp    al,0xda
  40b215:	or     al,0xfc
  40b217:	or     eax,0x989e8291
  40b21c:	and    al,0x88
  40b21e:	(bad)  
  40b220:	int3   
  40b221:	aaa    
  40b222:	mov    ds:0x3d72a1f0,al
  40b227:	pushf  
  40b228:	and    ebx,DWORD PTR [eax-0xf]
  40b22b:	adc    al,0x4e
  40b22d:	lds    ax,DWORD PTR [eax+ebp*4-0x6b]
  40b232:	leave  
  40b233:	mov    edi,0x607ef881
  40b238:	mov    edi,0xe2cff437
  40b23d:	out    0x40,al
  40b23f:	or     DWORD PTR [ebx],ebx
  40b241:	push   ds
  40b242:	les    ebp,FWORD PTR [ebp+0x1f1fb6b5]
  40b248:	xchg   ecx,eax
  40b249:	adc    dh,cl
  40b24b:	cdq    
  40b24c:	pushf  
  40b24d:	mov    BYTE PTR [edi],bl
  40b24f:	bound  ebx,QWORD PTR [esi]
  40b251:	dec    ebp
  40b252:	fisttp QWORD PTR [eax]
  40b254:	sar    BYTE PTR [ecx-0xc],cl
  40b257:	dec    ebx
  40b258:	sahf   
  40b259:	addr16 jg 0x40b241
  40b25c:	push   edi
  40b25d:	enter  0xfe1b,0x52
  40b261:	and    al,dl
  40b263:	push   edi
  40b264:	sub    edi,DWORD PTR fs:[ebx+ebp*2-0x3]
  40b269:	test   DWORD PTR [eax],eax
  40b26b:	adc    bl,BYTE PTR ds:0x1bfe3490
  40b271:	push   eax
  40b272:	rol    BYTE PTR [ebx-0x53],cl
  40b275:	cdq    
  40b276:	ins    BYTE PTR es:[edi],dx
  40b277:	xchg   esi,eax
  40b278:	mov    esp,0x8cf4799e
  40b27d:	cmp    ecx,ebp
  40b27f:	push   ebp
  40b280:	(bad)  
  40b281:	xor    BYTE PTR [esp+eax*1-0x24],ch
  40b285:	cmp    eax,0x670d816d
  40b28a:	mov    esp,0x29e6f787
  40b28f:	repz mov ah,0x38
  40b292:	or     BYTE PTR [ecx-0x20],cl
  40b295:	inc    esi
  40b296:	xchg   BYTE PTR [ecx],dl
  40b298:	mov    bh,0x7c
  40b29a:	sbb    edi,ecx
  40b29c:	arpl   dx,sp
  40b29e:	jg     0x40b31b
  40b2a0:	gs popa 
  40b2a2:	push   0xffffffdf
  40b2a4:	jbe    0x40b2a4
  40b2a6:	and    DWORD PTR [esi-0x66],0x8b625056
  40b2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ae:	stos   DWORD PTR es:[edi],eax
  40b2af:	push   cs
  40b2b0:	inc    ecx
  40b2b1:	mov    ch,0x37
  40b2b3:	mov    bh,0xde
  40b2b5:	add    dl,BYTE PTR [edx+0x26]
  40b2b8:	adc    eax,0x99dfd26c
  40b2bd:	pop    edi
  40b2be:	addr16 jge 0x40b30c
  40b2c1:	sub    al,0xa8
  40b2c3:	in     al,0x0
  40b2c5:	mov    ds:0x9849f872,eax
  40b2ca:	clc    
  40b2cb:	jecxz  0x40b2ea
  40b2cd:	in     eax,0x27
  40b2cf:	loopne 0x40b297
  40b2d1:	cpuid  
  40b2d3:	fimul  DWORD PTR [eax-0x4f4e2dd7]
  40b2d9:	sub    ecx,DWORD PTR [ebx+0x7f871cdd]
  40b2df:	pusha  
  40b2e0:	iret   
  40b2e1:	sub    al,0x5a
  40b2e3:	ficomp WORD PTR [ecx+0xd]
  40b2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e7:	leave  
  40b2e8:	xor    BYTE PTR [ecx-0x5c0efbec],bl
  40b2ee:	lds    esi,FWORD PTR [ecx+0x7d]
  40b2f1:	push   ds
  40b2f2:	xor    esi,DWORD PTR [edx+0x47819b25]
  40b2f8:	and    DWORD PTR [edi-0x23],esi
  40b2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2fc:	icebp  
  40b2fd:	dec    edx
  40b2fe:	retf   
  40b2ff:	push   edi
  40b300:	xor    DWORD PTR [edi],edi
  40b302:	dec    eax
  40b303:	inc    edx
  40b304:	jno    0x40b305
  40b306:	mov    dl,0xf3
  40b308:	pop    ds
  40b309:	xchg   esi,eax
  40b30a:	cmp    DWORD PTR [edx+0x44f43c68],ecx
  40b310:	sbb    DWORD PTR [esp+eiz*8-0x70],ebx
  40b314:	adc    eax,0xe3f4b81
  40b319:	ror    BYTE PTR [edi+0x29],cl
  40b31c:	ret    0x5a62
  40b31f:	cmc    
  40b320:	arpl   WORD PTR ds:0xc241f966,sp
  40b326:	test   BYTE PTR [ecx-0x4f],bl
  40b329:	es ins DWORD PTR es:[edi],dx
  40b32b:	jmp    FWORD PTR [ebx-0x25]
  40b32e:	add    esp,DWORD PTR [esi-0xc80209e]
  40b334:	sbb    DWORD PTR [edx],ecx
  40b336:	and    al,0x56
  40b338:	add    al,BYTE PTR [ebx]
  40b33a:	dec    ebp
  40b33b:	mov    al,ds:0xe4b10eae
  40b340:	push   0x5
  40b342:	push   esp
  40b343:	push   ebx
  40b344:	retf   
  40b345:	sub    BYTE PTR [ecx+0x68],bh
  40b348:	les    ecx,FWORD PTR [esi+eax*2+0x74]
  40b34c:	sbb    DWORD PTR [ebp+eax*1-0x36535a70],0xd3f2c3b
  40b357:	mov    edx,0xe6b76707
  40b35c:	push   0x44
  40b35e:	cmp    ah,BYTE PTR [ecx-0x66581d60]
  40b364:	and    eax,0xc6751278
  40b369:	jo     0x40b3b3
  40b36b:	mov    ebp,0x58ae6210
  40b370:	dec    ebp
  40b371:	and    ecx,ebp
  40b373:	jnp    0x40b3cd
  40b375:	clc    
  40b376:	lods   eax,DWORD PTR ds:[esi]
  40b377:	les    ebx,FWORD PTR [esi]
  40b379:	loopne 0x40b3a5
  40b37b:	lahf   
  40b37c:	pop    edi
  40b37d:	push   edi
  40b37e:	mov    edx,0x9de4c776
  40b383:	fisubr WORD PTR [esi+0x78]
  40b386:	pop    es
  40b387:	std    
  40b388:	ja     0x40b314
  40b38a:	sahf   
  40b38b:	pop    edi
  40b38c:	aas    
  40b38d:	scas   eax,DWORD PTR es:[edi]
  40b38e:	mov    ch,0x76
  40b390:	(bad)  
  40b391:	out    0xca,eax
  40b393:	push   ebx
  40b394:	in     eax,0xb7
  40b396:	psubusb mm6,mm2
  40b399:	(bad)  [esi+eiz*2-0x71]
  40b39d:	ficomp WORD PTR [ecx+0x50c8e324]
  40b3a3:	mov    eax,ds:0x9e4b50e5
  40b3a8:	and    al,0x1a
  40b3aa:	and    ch,cl
  40b3ac:	mov    ch,BYTE PTR [bp-0x7d]
  40b3b0:	jne    0x40b35e
  40b3b2:	sti    
  40b3b3:	rol    al,1
  40b3b5:	mov    WORD PTR [edi],ds
  40b3b7:	xor    cl,BYTE PTR [eax+0x778db277]
  40b3bd:	dec    esi
  40b3be:	jo     0x40b437
  40b3c0:	or     BYTE PTR [ebp-0x8],0x7
  40b3c4:	sub    al,BYTE PTR [edx+0x4e87788c]
  40b3ca:	aaa    
  40b3cb:	ret    
  40b3cc:	xchg   edi,eax
  40b3cd:	mov    esp,0xeef43c85
  40b3d2:	ror    bl,cl
  40b3d4:	xchg   edx,eax
  40b3d5:	dec    esi
  40b3d6:	lds    eax,FWORD PTR [ecx-0x42846344]
  40b3dc:	adc    dh,ch
  40b3de:	scas   eax,DWORD PTR es:[edi]
  40b3df:	or     DWORD PTR [ebx+esi*8],0x34
  40b3e3:	cld    
  40b3e4:	pop    ss
  40b3e5:	dec    ebp
  40b3e6:	cmp    al,0xd5
  40b3e8:	cwde   
  40b3e9:	outs   dx,BYTE PTR ds:[esi]
  40b3ea:	(bad)  
  40b3ec:	jp     0x40b3e6
  40b3ee:	sub    eax,edx
  40b3f0:	push   esi
  40b3f1:	aad    0xe5
  40b3f3:	ds adc esp,eax
  40b3f6:	into   
  40b3f7:	push   ecx
  40b3f8:	das    
  40b3f9:	bound  eax,QWORD PTR [edx+edi*2+0x444e7307]
  40b400:	into   
  40b401:	inc    ebx
  40b402:	and    eax,0x4398b9fc
  40b407:	(bad)  
  40b408:	jae    0x40b478
  40b40a:	adc    ebp,DWORD PTR [edx-0x70]
  40b40d:	jns    0x40b393
  40b40f:	outs   dx,BYTE PTR ds:[esi]
  40b410:	into   
  40b411:	pop    esp
  40b412:	icebp  
  40b413:	in     eax,dx
  40b414:	hlt    
  40b415:	mov    BYTE PTR [edi+edi*1],dl
  40b418:	pop    ebp
  40b419:	mov    cl,0x2f
  40b41b:	pop    edi
  40b41c:	mov    al,ds:0xe355e3ff
  40b421:	jmp    0x40b3bc
  40b423:	outs   dx,BYTE PTR ds:[esi]
  40b424:	fisubr DWORD PTR [ebx+0x208cfc6d]
  40b42a:	pop    eax
  40b42b:	push   ss
  40b42c:	ins    DWORD PTR es:[edi],dx
  40b42d:	outs   dx,BYTE PTR ds:[esi]
  40b42e:	stos   BYTE PTR es:[edi],al
  40b42f:	outs   dx,DWORD PTR ds:[esi]
  40b430:	in     al,0x89
  40b432:	sbb    ch,BYTE PTR ds:0x82c21e87
  40b438:	mov    ecx,0x91374bc1
  40b43d:	dec    ebp
  40b43e:	lahf   
  40b43f:	addr16 test al,0x9
  40b442:	xchg   ebx,eax
  40b443:	inc    eax
  40b444:	sbb    ch,BYTE PTR [esi+0x12]
  40b447:	xchg   ecx,eax
  40b448:	jb     0x40b489
  40b44a:	loop   0x40b433
  40b44c:	mov    eax,0xeeb5edd0
  40b451:	pushf  
  40b452:	sbb    bh,BYTE PTR [esi+0x6f]
  40b455:	jge    0x40b48d
  40b457:	pop    ebp
  40b458:	popf   
  40b459:	xchg   edi,eax
  40b45a:	jne    0x40b4ba
  40b45c:	test   al,0x32
  40b45f:	repnz out dx,al
  40b461:	mov    eax,ds:0xbd4ad90d
  40b466:	repz jl 0x40b4d8
  40b469:	sbb    al,BYTE PTR fs:[ebp-0x4a]
  40b46d:	pop    edx
  40b46e:	cmp    DWORD PTR [eax],ecx
  40b470:	(bad)  
  40b471:	jg     0x40b409
  40b473:	pushf  
  40b474:	push   0x71
  40b476:	shl    BYTE PTR [edi+eax*4-0x4b],0x30
  40b47b:	sbb    cl,al
  40b47d:	lea    ebx,[ebx+0x61]
  40b480:	dec    ebx
  40b481:	mov    esp,0xc855b796
  40b486:	mov    bl,0x52
  40b488:	or     BYTE PTR [ebp+edx*2+0x6f],ah
  40b48c:	or     eax,0x32cfab96
  40b491:	adc    ah,BYTE PTR [edx]
  40b493:	call   DWORD PTR [edi-0xb850b33]
  40b499:	sti    
  40b49a:	ret    0x9989
  40b49d:	and    edx,0xf4aa7dcc
  40b4a3:	lods   eax,DWORD PTR ds:[esi]
  40b4a4:	jb     0x40b4be
  40b4a6:	mov    ch,ch
  40b4a8:	and    ch,ch
  40b4aa:	dec    esi
  40b4ab:	adc    cl,BYTE PTR [ebp+0x31]
  40b4ae:	pop    esp
  40b4af:	xor    DWORD PTR [edi-0x7c],esi
  40b4b2:	sub    BYTE PTR [ebp-0x6516d849],cl
  40b4b8:	jg     0x40b4da
  40b4ba:	in     eax,0x2f
  40b4bc:	jmp    0x40b518
  40b4be:	adc    BYTE PTR [ebp+0x4e],0x80
  40b4c2:	xchg   ecx,eax
  40b4c3:	out    0x98,eax
  40b4c5:	or     esp,DWORD PTR [ecx+0x6d]
  40b4c8:	add    al,0xd1
  40b4ca:	idiv   DWORD PTR [ebx]
  40b4cc:	add    eax,0xed618d22
  40b4d1:	int3   
  40b4d2:	loop   0x40b510
  40b4d4:	inc    edi
  40b4d5:	imul   ebp,eax,0x632747ae
  40b4db:	imul   esi,DWORD PTR [ebx-0x448f422c],0xffffff9c
  40b4e2:	pop    ebx
  40b4e3:	sub    al,0xba
  40b4e5:	adc    DWORD PTR [edx-0x37],ebp
  40b4e8:	jle    0x40b4ab
  40b4ea:	daa    
  40b4eb:	loopne 0x40b568
  40b4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ef:	push   0xffffff99
  40b4f1:	mov    ebp,0x1bb8edce
  40b4f6:	jecxz  0x40b495
  40b4f8:	stc    
  40b4f9:	mov    bh,ah
  40b4fb:	cmp    DWORD PTR [esi],edx
  40b4fd:	(bad)  
  40b4fe:	mov    al,0xa9
  40b500:	mov    ss,WORD PTR [eax]
  40b502:	fisubr WORD PTR [ebx]
  40b504:	in     al,0x25
  40b506:	std    
  40b507:	repz gs pop edi
  40b50a:	out    0x99,al
  40b50c:	and    ebp,ebp
  40b50e:	fwait
  40b50f:	aaa    
  40b510:	outs   dx,BYTE PTR ds:[esi]
  40b511:	mov    ds:0xe89725b7,eax
  40b516:	xchg   ebp,eax
  40b517:	mov    dl,0x62
  40b519:	out    dx,eax
  40b51a:	inc    esi
  40b51b:	fadd   st,st(4)
  40b51d:	sub    DWORD PTR [eax+0xb],edx
  40b520:	mov    cl,0xf5
  40b522:	test   DWORD PTR [edx+0x7e32136c],ebp
  40b528:	sbb    esp,DWORD PTR [eax+edx*8+0x3972f45a]
  40b52f:	xchg   ebp,eax
  40b530:	inc    ebp
  40b531:	loop   0x40b5ad
  40b533:	jp     0x40b4c7
  40b535:	js     0x40b51b
  40b537:	adc    ch,BYTE PTR [edx+0x41]
  40b53a:	push   0x68
  40b53c:	(bad)  
  40b53d:	daa    
  40b53e:	add    ah,BYTE PTR [eax+ebx*8+0x17935184]
  40b545:	pop    ebx
  40b546:	inc    ebx
  40b547:	pop    edi
  40b548:	push   esi
  40b549:	mov    DWORD PTR [eax+0x4180e940],ebp
  40b54f:	dec    edi
  40b550:	es mov ecx,0x24926e29
  40b556:	inc    ebp
  40b557:	xor    DWORD PTR [edx+0x74],ecx
  40b55a:	scas   al,BYTE PTR es:[edi]
  40b55b:	shl    DWORD PTR [edx-0x471308d0],1
  40b561:	inc    edx
  40b562:	iret   
  40b563:	and    cl,BYTE PTR [edx]
  40b565:	push   0x9574bb8f
  40b56a:	xchg   ebx,eax
  40b56b:	sbb    eax,0x3cddef16
  40b570:	push   edi
  40b571:	pop    es
  40b572:	mov    db4,ebx
  40b575:	xor    cl,BYTE PTR [ebx-0x521ebb20]
  40b57b:	inc    edx
  40b57c:	in     al,0xd7
  40b57e:	or     edi,eax
  40b580:	or     esi,DWORD PTR [edx+0x57]
  40b583:	mov    esp,0x49717061
  40b588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b589:	and    BYTE PTR [esi-0x38],0x50
  40b58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b58f:	(bad)  
  40b591:	fisubr DWORD PTR [ecx+0x71]
  40b594:	cmp    al,0x94
  40b596:	and    cl,BYTE PTR [esp+ecx*2]
  40b599:	retf   
  40b59a:	shr    BYTE PTR [ecx+0x4439ccf4],0xc0
  40b5a1:	iret   
  40b5a2:	mov    ah,0xea
  40b5a4:	in     al,0xf9
  40b5a6:	daa    
  40b5a7:	xor    ch,BYTE PTR [esi+0x5f]
  40b5aa:	cmp    al,0x37
  40b5ac:	push   edi
  40b5ad:	aaa    
  40b5ae:	sub    DWORD PTR [ebp-0x69],ecx
  40b5b1:	int    0xc
  40b5b3:	add    dh,BYTE PTR [edi]
  40b5b5:	cmp    bl,BYTE PTR [eax]
  40b5b7:	jo     0x40b53c
  40b5b9:	lds    esi,FWORD PTR [ecx+0x72ff6766]
  40b5bf:	fdiv   QWORD PTR [ebx+0x544902b3]
  40b5c5:	mov    esi,0x2a745921
  40b5ca:	push   esi
  40b5cb:	cmp    eax,0xee28e34a
  40b5d0:	iret   
  40b5d1:	or     al,0xa9
  40b5d3:	adc    eax,0xa454a0e2
  40b5d8:	les    eax,FWORD PTR [esi-0x32ecb718]
  40b5de:	int    0x94
  40b5e0:	mov    bl,0xcb
  40b5e2:	dec    edi
  40b5e3:	cmp    al,0x4d
  40b5e5:	sbb    esi,DWORD PTR [eax+ebx*1]
  40b5e8:	mov    esi,0xff732821
  40b5ed:	test   DWORD PTR ds:0x4733ff21,esi
  40b5f3:	mov    bl,BYTE PTR [edx]
  40b5f5:	lahf   
  40b5f6:	ins    BYTE PTR es:[edi],dx
  40b5f7:	xor    al,0xc1
  40b5f9:	pop    ebp
  40b5fa:	push   cs
  40b5fb:	mov    ?,WORD PTR [eax]
  40b5fd:	jnp    0x40b595
  40b5ff:	mov    dl,0x41
  40b601:	dec    ebp
  40b602:	xchg   ecx,eax
  40b603:	inc    eax
  40b604:	fldcw  WORD PTR [edi-0x46]
  40b607:	rcl    BYTE PTR [edi+esi*2-0x3fb5e144],1
  40b60e:	mov    cl,0x78
  40b610:	pop    ecx
  40b611:	sbb    ah,BYTE PTR [edi-0x68c85d53]
  40b617:	inc    edi
  40b618:	aad    0xa0
  40b61a:	and    eax,0xa6476a5d
  40b61f:	mov    ch,0xd
  40b621:	mov    ds:0x36c26565,eax
  40b626:	adc    edi,DWORD PTR [edx]
  40b628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b629:	mov    BYTE PTR [ecx+0x7d],bl
  40b62c:	push   ss
  40b62d:	jl     0x40b69b
  40b62f:	jbe    0x40b628
  40b631:	sbb    ch,BYTE PTR [eax+0x66]
  40b634:	jmp    0x40b5b7
  40b636:	and    BYTE PTR [eax+0x58],ch
  40b639:	push   ebp
  40b63a:	mov    bh,0xfa
  40b63c:	cmp    cl,BYTE PTR [edx-0x1]
  40b63f:	popa   
  40b640:	pop    es
  40b641:	dec    ecx
  40b642:	fisttp QWORD PTR [eax]
  40b644:	sbb    DWORD PTR cs:[ebx-0x5feffa67],0xffffffab
  40b64c:	xor    DWORD PTR [eax-0x2c],esi
  40b64f:	jmp    0x79ad:0x7e3fd0c
  40b656:	adc    cl,ah
  40b658:	lods   eax,DWORD PTR ds:[esi]
  40b659:	mov    bh,0x88
  40b65b:	out    0xdc,eax
  40b65d:	mov    edx,0xc651ceea
  40b662:	ret    
  40b663:	xchg   ebx,eax
  40b664:	cwde   
  40b665:	or     ah,bh
  40b667:	out    dx,al
  40b668:	sbb    eax,0xf08ce954
  40b66d:	aaa    
  40b66e:	jmp    0x63bd:0xbd98f1b3
  40b675:	lods   eax,DWORD PTR ds:[esi]
  40b676:	jns    0x40b63c
  40b678:	out    dx,eax
  40b679:	inc    eax
  40b67a:	dec    ebx
  40b67b:	push   esp
  40b67c:	push   eax
  40b67d:	jo     0x40b6c7
  40b67f:	mov    ebx,DWORD PTR [ebx-0x16]
  40b682:	ret    0xf6b4
  40b685:	(bad)  
  40b686:	in     al,dx
  40b687:	dec    edx
  40b688:	mov    ch,0x32
  40b68a:	test   al,0x85
  40b68c:	pop    es
  40b68d:	adc    DWORD PTR [ebp-0x24],edx
  40b690:	and    BYTE PTR [eax-0x2d],ah
  40b693:	jle    0x40b63c
  40b695:	je     0x40b697
  40b697:	not    DWORD PTR [ebx+0x30]
  40b69a:	rcr    DWORD PTR [esi+ebx*4+0x3847d392],1
  40b6a1:	out    dx,al
  40b6a2:	mov    eax,ds:0x98670574
  40b6a7:	shr    ch,0xd0
  40b6aa:	sbb    eax,0xe3a9bdd3
  40b6af:	mov    esp,0xcdd4c6ac
  40b6b4:	int3   
  40b6b5:	js     0x40b69e
  40b6b7:	into   
  40b6b8:	add    ebx,esi
  40b6ba:	test   eax,0xe4ff5e39
  40b6bf:	clc    
  40b6c0:	std    
  40b6c1:	dec    esi
  40b6c2:	pop    ds
  40b6c3:	mov    esi,0xb16a7f11
  40b6c8:	sub    bh,bh
  40b6ca:	call   0x6cd980c1
  40b6cf:	stc    
  40b6d0:	pop    esi
  40b6d1:	pusha  
  40b6d2:	add    BYTE PTR cs:[edi+0x3e],cl
  40b6d6:	mov    eax,ds:0xbd38eb84
  40b6db:	(bad)
  40b6e0:	xor    ebx,DWORD PTR [esi+0x64]
  40b6e3:	add    eax,0xac519368
  40b6e8:	add    eax,DWORD PTR [ebx+0x73f8033a]
  40b6ee:	out    dx,al
  40b6ef:	xor    eax,0x330d90b6
  40b6f4:	arpl   cx,dx
  40b6f6:	cld    
  40b6f7:	cmp    al,0xbd
  40b6f9:	int3   
  40b6fa:	adc    dl,ah
  40b6fc:	push   eax
  40b6fd:	mov    al,0xbb
  40b6ff:	mov    esp,0x15194a5
  40b704:	sbb    al,0x27
  40b706:	jnp    0x40b68e
  40b708:	popa   
  40b709:	std    
  40b70a:	mov    al,ds:0x463f6de1
  40b70f:	pusha  
  40b710:	add    DWORD PTR [eax-0x2fd67abb],0x73
  40b717:	into   
  40b718:	adc    eax,0xa34d6970
  40b71d:	loop   0x40b775
  40b71f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b720:	xchg   edx,eax
  40b721:	jp     0x40b718
  40b723:	cmc    
  40b724:	sbb    ch,0xf0
  40b727:	pop    ebx
  40b728:	mov    eax,ds:0xbb240691
  40b72d:	fldenv ds:0xeec701bd
  40b733:	mov    eax,ds:0x86784350
  40b738:	add    cl,BYTE PTR [esi-0x41]
  40b73b:	shl    BYTE PTR [ebx],cl
  40b73d:	or     BYTE PTR [ecx-0x3],0xa4
  40b741:	inc    edi
  40b742:	or     bl,BYTE PTR [ebx+0x56]
  40b745:	dec    edx
  40b746:	popa   
  40b747:	mov    ah,0x8a
  40b749:	outs   dx,DWORD PTR ds:[esi]
  40b74a:	adc    BYTE PTR [ecx+0x62a6b085],dl
  40b750:	ds sub ecx,ebp
  40b753:	sbb    BYTE PTR [ebx],dh
  40b755:	adc    DWORD PTR [edi-0x3adfdc40],edi
  40b75b:	mov    ecx,0xcd9ff38
  40b760:	push   ebx
  40b761:	jmp    0x40b7c0
  40b763:	dec    edx
  40b764:	mov    al,0x1b
  40b766:	sbb    bl,BYTE PTR [edx-0x12]
  40b769:	test   al,0x48
  40b76b:	faddp  st(6),st
  40b76d:	into   
  40b76e:	mov    ch,0x73
  40b770:	pushf  
  40b771:	mov    al,ds:0x5e3d58a6
  40b776:	mov    ebx,0x726f58e2
  40b77b:	mov    esi,0x5e34b517
  40b780:	mov    ah,0x28
  40b782:	pop    ebx
  40b783:	pusha  
  40b784:	ror    BYTE PTR [ebx],cl
  40b786:	push   cs
  40b787:	lods   eax,DWORD PTR ds:[esi]
  40b788:	xchg   BYTE PTR [eax-0x753774fc],bl
  40b78e:	mov    ds:0x369fd8ac,al
  40b793:	stc    
  40b794:	(bad)  
  40b795:	dec    eax
  40b796:	mov    cl,0x71
  40b798:	lock push esi
  40b79a:	mov    ah,0x7f
  40b79c:	enter  0x3ae0,0x65
  40b7a0:	jmp    0x40b763
  40b7a2:	mov    dl,0xd2
  40b7a4:	es out 0x6d,eax
  40b7a7:	mov    ds:0x769e5ea2,al
  40b7ac:	xchg   esp,eax
  40b7ad:	out    dx,eax
  40b7ae:	addr16 cmc 
  40b7b0:	push   0xa46f444a
  40b7b5:	iret   
  40b7b6:	sti    
  40b7b7:	mov    esi,0xe52efb81
  40b7bc:	pop    edi
  40b7bd:	(bad)  
  40b7be:	test   al,0xae
  40b7c0:	jl     0x40b810
  40b7c2:	ds mov esp,edx
  40b7c5:	stos   DWORD PTR es:[edi],eax
  40b7c6:	or     edi,DWORD PTR [esp+esi*2-0x61be5b29]
  40b7cd:	out    dx,al
  40b7ce:	pop    ecx
  40b7cf:	fistp  WORD PTR [eax-0x9a529c5]
  40b7d5:	mov    ?,WORD PTR ds:0x5faaf39f
  40b7dc:	shl    BYTE PTR es:[eax-0x4b5f47fb],1
  40b7e3:	inc    ecx
  40b7e4:	or     dl,BYTE PTR [edi+0x4f4c558d]
  40b7ea:	xchg   BYTE PTR [edi-0x14],ch
  40b7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ee:	dec    edx
  40b7ef:	jnp    0x40b7f8
  40b7f1:	jmp    0xe208b0e9
  40b7f6:	int    0x7c
  40b7f8:	cld    
  40b7f9:	sub    eax,0x8fbd7354
  40b7fe:	rol    ebp,1
  40b800:	mov    al,0x79
  40b802:	mov    al,0xd7
  40b804:	mov    eax,0x9871623e
  40b809:	push   ecx
  40b80a:	push   esp
  40b80b:	sbb    DWORD PTR [edx-0x72e947c5],eax
  40b811:	mov    ah,0x1d
  40b813:	sub    ch,BYTE PTR [esi-0x24]
  40b816:	popa   
  40b817:	mov    dl,0x4
  40b819:	in     al,dx
  40b81a:	push   ebp
  40b81b:	mov    ?,WORD PTR [ecx+0x6bff38ec]
  40b821:	repnz ins DWORD PTR es:[edi],dx
  40b823:	loop   0x40b804
  40b825:	dec    edi
  40b826:	adc    BYTE PTR [eax+0x68],dh
  40b829:	adc    eax,0x75817467
  40b82e:	push   edx
  40b82f:	cmp    eax,0xa07e8ff7
  40b834:	or     DWORD PTR [edi],esi
  40b836:	shl    BYTE PTR [ebx],cl
  40b838:	clc    
  40b839:	lods   al,BYTE PTR ds:[esi]
  40b83a:	mov    al,ds:0xc16b50e6
  40b83f:	fstp   QWORD PTR [ebx-0x74]
  40b842:	repnz sub al,0xf9
  40b845:	mov    ecx,0xdc7b93aa
  40b84a:	into   
  40b84b:	mov    WORD PTR [ebx],ds
  40b84d:	jno    0x40b7f3
  40b84f:	aaa    
  40b850:	xor    eax,0xefd49028
  40b855:	cdq    
  40b856:	cmp    eax,0x198a4d10
  40b85b:	xor    BYTE PTR [edx-0x66],dh
  40b85e:	into   
  40b85f:	icebp  
  40b860:	out    0xd5,al
  40b862:	mov    esi,0xf22f5e4a
  40b867:	or     al,BYTE PTR [eax+0x4f2ff62f]
  40b86d:	mov    eax,0xfb91c945
  40b872:	lods   eax,DWORD PTR ds:[esi]
  40b873:	and    dh,0x8a
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	adc    bh,BYTE PTR [esi+ebx*4]
  40b87a:	(bad)  
  40b87b:	inc    esi
  40b87c:	cli    
  40b87d:	mov    bh,0x14
  40b87f:	daa    
  40b880:	jbe    0x40b8e9
  40b882:	lock test DWORD PTR [edi+0x57275df8],0x3124b03b
  40b88d:	retf   0xd869
  40b890:	cmc    
  40b891:	in     eax,0x90
  40b893:	sub    bl,cl
  40b895:	adc    esi,DWORD PTR [ecx+eax*2]
  40b898:	push   0x17
  40b89a:	push   eax
  40b89b:	push   ecx
  40b89c:	clc    
  40b89d:	leave  
  40b89e:	mov    WORD PTR [edx],cs
  40b8a0:	or     BYTE PTR [ebx],0xeb
  40b8a3:	aas    
  40b8a4:	xchg   edx,eax
  40b8a5:	sbb    DWORD PTR [esi],ebx
  40b8a7:	xchg   esp,eax
  40b8a8:	cmp    ebx,0xffffff9c
  40b8ab:	jo     0x40b8c4
  40b8ad:	lea    edx,[ebp+edi*4+0x1ca480bc]
  40b8b4:	cmp    al,0xd9
  40b8b6:	lahf   
  40b8b7:	pop    ss
  40b8b8:	icebp  
  40b8b9:	sub    DWORD PTR [ebp-0x12d7d8fa],edi
  40b8bf:	fwait
  40b8c0:	sub    BYTE PTR [edi+0x443092d0],0xd2
  40b8c7:	aad    0xbe
  40b8c9:	aas    
  40b8ca:	sub    bh,BYTE PTR [bx+si-0x5fc]
  40b8cf:	fadd   DWORD PTR cs:[eax+0x71b16fb1]
  40b8d6:	test   eax,0xe016c0ba
  40b8db:	loopne 0x40b8f1
  40b8dd:	push   0x55540579
  40b8e2:	add    al,0xe
  40b8e4:	clc    
  40b8e5:	sub    esp,eax
  40b8e7:	in     al,dx
  40b8e8:	je     0x40b8aa
  40b8ea:	mov    ebp,0xa4de879b
  40b8ef:	pop    es
  40b8f0:	ds cmp al,0x14
  40b8f3:	mov    ah,0x3f
  40b8f5:	jl     0x40b8fa
  40b8f7:	in     eax,0x66
  40b8f9:	mov    al,ds:0xd0fc5674
  40b8fe:	fimul  DWORD PTR [ebx+0x65eb14a7]
  40b904:	sti    
  40b905:	adc    eax,0xf699472f
  40b90a:	adc    bh,BYTE PTR [esi+0x38]
  40b90d:	jno    0x40b958
  40b90f:	neg    DWORD PTR [eax-0x21562547]
  40b915:	jne    0x40b90d
  40b917:	les    ebx,FWORD PTR [edx]
  40b919:	xor    DWORD PTR [eax-0x1],0xa7be452f
  40b920:	leave  
  40b921:	cwde   
  40b922:	mov    esp,0xde0da316
  40b927:	js     0x40b964
  40b929:	add    BYTE PTR [bx+si-0x5c62],al
  40b92e:	push   eax
  40b92f:	mov    ah,0xf1
  40b931:	or     ecx,DWORD PTR [edx]
  40b933:	(bad)  
  40b934:	ficom  DWORD PTR [edi-0x205d2450]
  40b93a:	inc    edi
  40b93b:	jne    0x40b995
  40b93d:	inc    edx
  40b93e:	and    al,al
  40b940:	fs dec esi
  40b942:	xor    eax,0x8a33ef27
  40b947:	dec    edx
  40b948:	pop    esp
  40b949:	add    DWORD PTR [ebp+0xd],eax
  40b94c:	fild   DWORD PTR [esi+ecx*2-0x11]
  40b950:	mov    dl,0xea
  40b952:	jo     0x40b9b7
  40b954:	ss call 0x36a5accc
  40b95a:	fisubr DWORD PTR fs:[edi+0x39]
  40b95e:	push   0x6a611435
  40b963:	cmp    ah,BYTE PTR [ebx]
  40b965:	ret    0x93f2
  40b968:	mov    ebp,DWORD PTR [edx+0x5d617722]
  40b96e:	shl    ah,0x6c
  40b971:	int    0xde
  40b973:	adc    al,0xfb
  40b975:	and    DWORD PTR ds:0xd8adf4a9,ebx
  40b97b:	jmp    0x40b93b
  40b97d:	push   ds
  40b97e:	repnz push eax
  40b980:	sbb    DWORD PTR [ebx],ecx
  40b982:	iret   
  40b983:	in     al,0x56
  40b985:	push   ebp
  40b986:	push   cs
  40b987:	push   es
  40b988:	push   edx
  40b989:	outs   dx,DWORD PTR ds:[esi]
  40b98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b98b:	inc    eax
  40b98c:	dec    eax
  40b98d:	inc    edx
  40b98e:	jge    0x40b984
  40b990:	sbb    al,0x28
  40b992:	xchg   DWORD PTR [esi],edi
  40b994:	mov    eax,0x8ff73219
  40b999:	mov    ds:0xbd7035a8,eax
  40b99e:	mov    ebx,DWORD PTR [eax-0x4224f3f8]
  40b9a4:	(bad)  
  40b9a6:	or     DWORD PTR [esi-0x4f47d546],esp
  40b9ac:	mov    dh,0x23
  40b9ae:	shl    esp,0xce
  40b9b1:	es push edi
  40b9b3:	inc    ebp
  40b9b4:	addr16 sbb al,0xd3
  40b9b7:	dec    ebx
  40b9b8:	add    al,0x6d
  40b9ba:	nop
  40b9bb:	mov    cl,0x1b
  40b9bd:	mov    edi,0x51350e91
  40b9c2:	ins    DWORD PTR es:[edi],dx
  40b9c3:	rcl    BYTE PTR [edx+0x7bebbdc5],0xa6
  40b9ca:	adc    ch,BYTE PTR [edx-0x14]
  40b9cd:	xchg   ebx,eax
  40b9ce:	fxtract 
  40b9d0:	adc    ah,bl
  40b9d2:	enter  0x33d4,0x7f
  40b9d6:	inc    ebp
  40b9d7:	dec    bh
  40b9d9:	sub    al,0x90
  40b9db:	or     ebx,0x5d647e8b
  40b9e1:	(bad)  
  40b9e2:	jb     0x40b9aa
  40b9e4:	sbb    BYTE PTR [edi+0x49581828],dh
  40b9ea:	jmp    0x40b9fa
  40b9ec:	popa   
  40b9ed:	imul   esp,ebp,0x9475b992
  40b9f3:	clc    
  40b9f4:	das    
  40b9f5:	nop
  40b9f6:	mov    al,ds:0x84911d42
  40b9fb:	push   ecx
  40b9fc:	dec    edi
  40b9fd:	repnz mov ss,WORD PTR [edx]
  40ba00:	push   es
  40ba01:	or     DWORD PTR [ebx+ebx*2+0x5728a69c],edx
  40ba08:	(bad)  
  40ba0a:	lods   eax,DWORD PTR ds:[esi]
  40ba0b:	cmp    ebx,DWORD PTR [edi+0x21efa704]
  40ba11:	xchg   BYTE PTR [ebx-0x1c],al
  40ba14:	push   esp
  40ba15:	xor    eax,0x91ce0ea1
  40ba1a:	call   0x9e57:0xcd5039be
  40ba21:	inc    esp
  40ba22:	nop
  40ba23:	jno    0x40b9ed
  40ba25:	cwde   
  40ba26:	dec    ebx
  40ba27:	or     ch,BYTE PTR ds:0xa3d402b5
  40ba2d:	cmp    DWORD PTR [ebx+esi*8],eax
  40ba30:	pop    edi
  40ba31:	shl    DWORD PTR [ebx+0x3dc36b39],cl
  40ba37:	jbe    0x40b9c8
  40ba39:	out    0x68,eax
  40ba3b:	add    al,0x3b
  40ba3d:	jl     0x40b9e3
  40ba3f:	jae    0x40ba3b
  40ba41:	mov    al,0x5b
  40ba43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba44:	nop
  40ba45:	rcr    DWORD PTR [edi],cl
  40ba47:	dec    ebp
  40ba48:	and    DWORD PTR [ecx],esi
  40ba4a:	fsub   QWORD PTR [edi]
  40ba4c:	pop    ebx
  40ba4d:	mov    eax,0xa1d0437c
  40ba52:	fcom   QWORD PTR [ecx+edi*2-0x15]
  40ba56:	mov    esi,0xe313db5d
  40ba5b:	imul   ebp,eax,0x3e
  40ba5e:	cmc    
  40ba5f:	and    ah,BYTE PTR [esi-0x72]
  40ba62:	xor    DWORD PTR [eax+0x28],edx
  40ba65:	bound  ebx,QWORD PTR [ebx-0x6f]
  40ba68:	shl    DWORD PTR [edi+0x7b4521f2],1
  40ba6e:	push   eax
  40ba6f:	pusha  
  40ba70:	mov    ebp,0xfaf34abe
  40ba75:	jbe    0x40ba81
  40ba77:	mov    BYTE PTR [edx-0x75],dl
  40ba7a:	in     eax,0xe2
  40ba7c:	test   BYTE PTR [edi-0x3c],cl
  40ba7f:	call   0x78b:0x57187a00
  40ba86:	dec    esp
  40ba87:	mov    ah,0xc4
  40ba89:	in     eax,0xb2
  40ba8b:	xchg   edx,eax
  40ba8c:	xor    edi,ebx
  40ba8e:	sub    al,0xdb
  40ba90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba91:	sbb    ebp,esi
  40ba93:	icebp  
  40ba94:	sub    al,BYTE PTR [eax+ecx*2+0x4a]
  40ba98:	jno    0x40bb04
  40ba9a:	add    cl,BYTE PTR [ecx+ecx*4+0x667b5ccf]
  40baa1:	call   0x8b524980
  40baa6:	out    dx,al
  40baa7:	sub    DWORD PTR [eax+0x56],esp
  40baaa:	pop    ecx
  40baab:	(bad)  
  40baac:	dec    DWORD PTR [edx+ecx*4]
  40baaf:	xor    eax,DWORD PTR [edi-0x51]
  40bab2:	push   cs
  40bab3:	pop    ebx
  40bab4:	mov    dl,0xc6
  40bab6:	bound  ecx,QWORD PTR ds:0x2acb31e0
  40babc:	test   BYTE PTR [ecx-0x12],bh
  40babf:	int    0x14
  40bac1:	mov    esp,0xc18dd3b7
  40bac6:	sub    eax,0x3bca3135
  40bacb:	cmp    DWORD PTR [esi-0x2976a93b],ebx
  40bad1:	fistp  QWORD PTR [ecx+0x49]
  40bad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad5:	inc    esp
  40bad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bad7:	popf   
  40bad8:	adc    eax,0xa389eaa9
  40badd:	push   ds
  40bade:	adc    al,0x5e
  40bae0:	mov    bh,0xab
  40bae2:	aad    0x75
  40bae4:	cmp    eax,0x712d5f08
  40bae9:	or     eax,0x7173630e
  40baee:	inc    ebx
  40baef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf0:	int3   
  40baf1:	push   ecx
  40baf2:	sbb    ebx,DWORD PTR [ebx]
  40baf4:	sbb    DWORD PTR [eax+0x100fde2d],edi
  40bafa:	int3   
  40bafb:	(bad)  
  40bafc:	icebp  
  40bafd:	imul   edx,DWORD PTR [edx+eax*8+0x6f979801],0xffffff90
  40bb05:	call   0xf213:0xd6efcbbc
  40bb0c:	outs   dx,DWORD PTR ds:[esi]
  40bb0d:	das    
  40bb0e:	cmp    al,0xbb
  40bb10:	and    dl,BYTE PTR [edx-0x456ff6ca]
  40bb16:	inc    edx
  40bb17:	jb     0x40bacb
  40bb19:	in     al,dx
  40bb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb1b:	adc    BYTE PTR [edi-0x63],dh
  40bb1e:	jge    0x40bad7
  40bb20:	mov    bl,0x24
  40bb22:	loope  0x40bb6b
  40bb24:	lods   eax,DWORD PTR ds:[esi]
  40bb25:	clc    
  40bb26:	xchg   edi,eax
  40bb27:	adc    al,0x35
  40bb29:	mov    ch,0x0
  40bb2b:	lods   eax,DWORD PTR ds:[esi]
  40bb2c:	jns    0x40bb10
  40bb2e:	(bad)  
  40bb2f:	pop    ds
  40bb30:	or     bl,BYTE PTR [edi-0x75]
  40bb33:	scas   eax,DWORD PTR es:[edi]
  40bb34:	test   eax,0x514a6c58
  40bb39:	int    0x44
  40bb3b:	inc    ebp
  40bb3c:	add    bl,BYTE PTR [edx-0xe]
  40bb3f:	sbb    al,0xb9
  40bb41:	mov    dh,0x1f
  40bb43:	scas   eax,DWORD PTR es:[edi]
  40bb44:	xor    al,0x7c
  40bb46:	daa    
  40bb47:	cld    
  40bb48:	sub    ebx,edx
  40bb4a:	ja     0x40baea
  40bb4c:	pop    ecx
  40bb4d:	cmp    ecx,ecx
  40bb4f:	shl    esi,0x41
  40bb52:	adc    DWORD PTR [eax+eiz*8-0x65],edx
  40bb56:	or     al,0x79
  40bb58:	call   0xa7c4a3ba
  40bb5d:	inc    ebx
  40bb5e:	adc    bh,BYTE PTR [ecx]
  40bb60:	les    eax,FWORD PTR [ecx]
  40bb62:	or     esi,edx
  40bb64:	jp     0x40bb8f
  40bb66:	pop    esp
  40bb67:	outs   dx,DWORD PTR ds:[esi]
  40bb68:	sar    DWORD PTR [ebp+0x9cb8495],1
  40bb6e:	aaa    
  40bb6f:	ss out 0x21,al
  40bb72:	or     edx,DWORD PTR [ecx-0x6c01cfae]
  40bb78:	xchg   edi,eax
  40bb79:	lahf   
  40bb7a:	sets   BYTE PTR [esi-0x3d]
  40bb7e:	lods   al,BYTE PTR ds:[esi]
  40bb7f:	mov    edi,DWORD PTR [esi+ebp*4-0x703b38f0]
  40bb86:	arpl   WORD PTR [eax],sp
  40bb88:	fdiv   QWORD PTR [esi+0x52]
  40bb8b:	sbb    eax,ebx
  40bb8d:	out    dx,al
  40bb8e:	(bad)  
  40bb8f:	mov    cl,0x54
  40bb91:	mov    ebp,0xc8dee5c
  40bb96:	popa   
  40bb97:	icebp  
  40bb98:	mov    bl,0xd1
  40bb9a:	enter  0xfc78,0xf2
  40bb9e:	loop   0x40bb87
  40bba0:	jb     0x40bb35
  40bba2:	sbb    edi,eax
  40bba4:	jmp    0x40bbbc
  40bba6:	push   0x331afa63
  40bbab:	stos   DWORD PTR es:[edi],eax
  40bbac:	sub    BYTE PTR [eax+0xb72b7d6],bl
  40bbb2:	mov    ebx,0x2cd97b01
  40bbb7:	push   0x74
  40bbb9:	mov    ah,0xfe
  40bbbb:	test   BYTE PTR [edi-0x32310402],bh
  40bbc1:	xor    ch,BYTE PTR [esi]
  40bbc3:	mov    ebx,0x427fe9ab
  40bbc8:	hlt    
  40bbc9:	adc    dh,0x31
  40bbcc:	push   ecx
  40bbcd:	fwait
  40bbce:	jne    0x40bc4a
  40bbd0:	(bad)  
  40bbd1:	into   
  40bbd2:	arpl   bp,bx
  40bbd4:	and    cl,BYTE PTR [ebp+0x37524d12]
  40bbda:	stc    
  40bbdb:	jbe    0x40bb9d
  40bbdd:	ins    BYTE PTR es:[edi],dx
  40bbde:	dec    edi
  40bbdf:	jl     0x40bbcf
  40bbe1:	sub    eax,0x1210650d
  40bbe6:	lahf   
  40bbe7:	popa   
  40bbe8:	jmp    0x9bfae70d
  40bbed:	pop    ebp
  40bbee:	jmp    0xb36cdebc
  40bbf3:	mov    ah,0xe5
  40bbf5:	out    dx,al
  40bbf6:	sub    BYTE PTR [edi+eiz*4-0x14],cl
  40bbfa:	imul   edi,DWORD PTR [edi+0x76dab2b4],0x2d62ad14
  40bc04:	or     al,0x50
  40bc06:	cmp    BYTE PTR [edx],dh
  40bc08:	popa   
  40bc09:	jne    0x40bc0f
  40bc0b:	push   ds
  40bc0c:	repnz hlt 
  40bc0e:	push   es
  40bc0f:	pop    ds
  40bc10:	inc    ebx
  40bc11:	fwait
  40bc12:	ss icebp 
  40bc14:	cmp    eax,0x9ce21eaf
  40bc19:	push   0xfffffffb
  40bc1b:	loope  0x40bc1c
  40bc1d:	outs   dx,BYTE PTR ds:[esi]
  40bc1e:	fldcw  WORD PTR [ebx-0x4d]
  40bc21:	out    dx,eax
  40bc22:	test   DWORD PTR [edi],ebx
  40bc24:	inc    esp
  40bc25:	cwde   
  40bc26:	xchg   ebp,eax
  40bc27:	in     eax,dx
  40bc28:	lahf   
  40bc29:	cmp    DWORD PTR [esi],ebp
  40bc2b:	push   esi
  40bc2c:	call   DWORD PTR [ebx+0xf]
  40bc2f:	dec    esi
  40bc30:	mov    esp,DWORD PTR [ebx+0x34]
  40bc33:	sbb    al,0x8d
  40bc35:	mov    edx,DWORD PTR [ebp+eax*8-0x2d]
  40bc39:	pop    ebp
  40bc3a:	mov    dl,0xb2
  40bc3c:	and    ebx,DWORD PTR [ecx-0x7f]
  40bc3f:	(bad)
  40bc43:	lahf   
  40bc44:	xor    DWORD PTR [ebp+0x48bd75a9],ebx
  40bc4a:	jbe    0x40bc01
  40bc4c:	cmp    BYTE PTR ds:0x755116ec,bh
  40bc52:	cld    
  40bc53:	cs js  0x40bcba
  40bc56:	ret    
  40bc57:	inc    esp
  40bc58:	sbb    eax,0x110459b1
  40bc5d:	mov    al,ds:0xbc8a3b23
  40bc62:	rcl    dh,1
  40bc64:	mov    al,ds:0x450b43c7
  40bc69:	or     ah,cl
  40bc6b:	stc    
  40bc6c:	inc    edi
  40bc6d:	cdq    
  40bc6e:	push   ecx
  40bc6f:	sbb    BYTE PTR [ecx],dl
  40bc71:	rcl    BYTE PTR ds:0x468a6807,0xe9
  40bc78:	mov    eax,ds:0x46fa9628
  40bc7d:	sbb    al,0x54
  40bc7f:	fmul   QWORD PTR [esi+0x491291f0]
  40bc85:	fadd   st(0),st
  40bc87:	fdiv   DWORD PTR [eax-0x683f3b85]
  40bc8d:	dec    ecx
  40bc8e:	mov    eax,0x3f53e65f
  40bc93:	and    eax,ebp
  40bc95:	out    dx,al
  40bc96:	mov    ds:0xef550689,al
  40bc9b:	ret    
  40bc9c:	mov    esi,DWORD PTR [ebx-0x31bec7dd]
  40bca2:	fsubr  st(1),st
  40bca4:	push   ecx
  40bca5:	ja     0x40bcca
  40bca7:	cld    
  40bca8:	ins    DWORD PTR es:[edi],dx
  40bca9:	xchg   DWORD PTR [edi],edx
  40bcab:	(bad)  
  40bcac:	mov    esp,0xb92302d3
  40bcb1:	mov    edx,ecx
  40bcb3:	push   es
  40bcb4:	out    0xbe,eax
  40bcb6:	push   ebp
  40bcb7:	mov    ebx,0x1d1bb376
  40bcbc:	vfmsubaddps xmm4,xmm1,xmm1,XMMWORD PTR [eax]
  40bcc2:	loop   0x40bc7b
  40bcc4:	mov    bl,0xd4
  40bcc6:	push   ds
  40bcc7:	push   ebx
  40bcc8:	(bad)  
  40bcc9:	sub    BYTE PTR [ebp-0x49240782],al
  40bccf:	mul    DWORD PTR [edx]
  40bcd1:	adc    BYTE PTR [esp+eax*2-0x6f],dh
  40bcd5:	cld    
  40bcd6:	into   
  40bcd7:	xchg   ebp,eax
  40bcd8:	int    0xc2
  40bcda:	fwait
  40bcdb:	push   esi
  40bcdc:	pop    ebp
  40bcdd:	fldenv [ecx]
  40bcdf:	push   es
  40bce0:	ins    DWORD PTR es:[edi],dx
  40bce1:	(bad)  
  40bce2:	rol    BYTE PTR [edx],1
  40bce4:	rol    DWORD PTR [esi+0x25],cl
  40bce7:	out    0xcb,al
  40bce9:	pop    ebx
  40bcea:	mov    ah,0x34
  40bcec:	add    al,0x39
  40bcee:	call   0xd69:0x5719d377
  40bcf5:	loope  0x40bc97
  40bcf7:	enter  0xec52,0x8f
  40bcfb:	cmp    eax,0x5a2fd98d
  40bd00:	mov    al,BYTE PTR [edx*4-0x6d56f995]
  40bd07:	pushf  
  40bd08:	sub    eax,0xf2cb30d7
  40bd0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd0e:	xor    DWORD PTR [edi-0x728907b3],ecx
  40bd14:	or     DWORD PTR [esi],eax
  40bd16:	sti    
  40bd17:	push   0xffffff9a
  40bd19:	aas    
  40bd1a:	fcomip st,st(4)
  40bd1c:	arpl   WORD PTR [edx-0x34efaef0],bx
  40bd22:	(bad)  
  40bd23:	call   DWORD PTR [ebx]
  40bd25:	test   DWORD PTR [edx+0x3e],edi
  40bd28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd29:	add    edi,eax
  40bd2b:	int    0xbc
  40bd2d:	jne    0x40bd4d
  40bd2f:	push   edi
  40bd30:	pop    ebx
  40bd31:	adc    al,0x4c
  40bd33:	xchg   BYTE PTR [esi-0x7d],dl
  40bd36:	xor    esi,eax
  40bd38:	dec    ecx
  40bd39:	aad    0xda
  40bd3b:	(bad)  [edi+ebp*4+0x6b]
  40bd3f:	add    eax,0x17ff512e
  40bd44:	or     DWORD PTR [eax-0xe64401f],esp
  40bd4a:	or     cl,BYTE PTR [ecx-0x7e339c4a]
  40bd50:	mov    ebx,0x181d1f79
  40bd55:	xor    eax,0x133d2df2
  40bd5a:	sahf   
  40bd5b:	pop    DWORD PTR [edi+0x43]
  40bd5e:	jne    0x40bd68
  40bd60:	and    ah,BYTE PTR [eax+ebp*8]
  40bd63:	adc    edi,DWORD PTR [esp+eax*2+0x12]
  40bd67:	test   cl,bl
  40bd69:	(bad)  
  40bd6a:	scas   eax,DWORD PTR es:[edi]
  40bd6b:	push   eax
  40bd6c:	mov    fs,ebx
  40bd6e:	xchg   esi,eax
  40bd6f:	jbe    0x40bd93
  40bd71:	adc    bh,BYTE PTR [edx]
  40bd73:	les    esi,FWORD PTR [eax-0x444d8aa]
  40bd79:	xchg   edx,eax
  40bd7a:	popw   es
  40bd7c:	pop    esp
  40bd7d:	add    eax,0x63087ab5
  40bd82:	xchg   ecx,eax
  40bd83:	and    DWORD PTR [ebx-0x2],ecx
  40bd86:	xor    DWORD PTR [edx],edi
  40bd88:	fcomp  DWORD PTR [ebp+esi*4+0x571dcc7]
  40bd8f:	outs   dx,DWORD PTR cs:[esi]
  40bd91:	repnz int3 
  40bd93:	xor    al,0x96
  40bd95:	out    0xc0,eax
  40bd97:	ret    0xa082
  40bd9a:	lahf   
  40bd9b:	popa   
  40bd9c:	lock fstp DWORD PTR [edx+0xa8ad416]
  40bda3:	test   BYTE PTR [edi-0x14],dh
  40bda6:	pop    edi
  40bda7:	inc    edx
  40bda8:	stos   DWORD PTR es:[edi],eax
  40bda9:	std    
  40bdaa:	imul   DWORD PTR [edx-0x26]
  40bdad:	out    0xfb,eax
  40bdaf:	sub    al,0xdf
  40bdb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdb2:	and    al,BYTE PTR [ebp+0x50]
  40bdb5:	sub    eax,0x41ad8da0
  40bdba:	mov    dh,0xb5
  40bdbc:	inc    ebx
  40bdbd:	mov    esi,0xf9c0926f
  40bdc2:	cwde   
  40bdc3:	sbb    BYTE PTR [ebp+0x53],ch
  40bdc6:	fcomip st,st(6)
  40bdc8:	and    BYTE PTR [eax],0x7e
  40bdcb:	jnp    0x40be11
  40bdcd:	inc    edi
  40bdce:	jne    0x40bde2
  40bdd0:	jae    0x40bd9d
  40bdd2:	and    DWORD PTR [eax+0x36],ebx
  40bdd5:	jne    0x40bdd6
  40bdd7:	icebp  
  40bdd8:	idiv   DWORD PTR [edi+0x3bab25e2]
  40bdde:	(bad)  
  40bddf:	std    
  40bde0:	pop    eax
  40bde1:	pop    edi
  40bde2:	dec    edx
  40bde3:	cmp    cl,BYTE PTR [ecx+0x8]
  40bde6:	fs out 0x5,al
  40bde9:	mov    ebx,0x2bd148a4
  40bdee:	push   es
  40bdef:	xchg   edi,eax
  40bdf0:	mov    ebx,0x453d546c
  40bdf5:	outs   dx,DWORD PTR ds:[esi]
  40bdf6:	dec    eax
  40bdf7:	pop    edx
  40bdf8:	pop    ecx
  40bdf9:	jne    0x40be71
  40bdfb:	pop    ebx
  40bdfc:	fwait
  40bdfd:	mov    ebp,0x25f27e6c
  40be02:	xchg   esi,eax
  40be03:	es loop 0x40be7f
  40be06:	in     al,0x71
  40be08:	inc    ecx
  40be09:	into   
  40be0a:	sbb    dl,ah
  40be0c:	push   esp
  40be0d:	(bad)  
  40be0e:	and    al,0xbc
  40be10:	and    dh,BYTE PTR [edi+0x3f]
  40be13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be14:	jmp    0xe50:0x70135aec
  40be1b:	sub    DWORD PTR [edi],esi
  40be1d:	cmp    ch,BYTE PTR [eax+edx*4-0x6]
  40be21:	dec    esi
  40be22:	cmc    
  40be23:	xor    al,0xb8
  40be25:	push   0x3c
  40be27:	aas    
  40be28:	sbb    eax,0x98c03d8e
  40be2d:	and    BYTE PTR [ebx],ch
  40be2f:	loop   0x40be5a
  40be31:	add    al,0xe7
  40be33:	int    0x1e
  40be35:	iret   
  40be36:	jmp    0x40be6a
  40be38:	test   al,0xef
  40be3a:	xor    BYTE PTR [ecx+edx*4-0x2e505c5f],0x8e
  40be42:	pop    ebx
  40be43:	fst    st(1)
  40be45:	mov    edx,0x3a6f39ea
  40be4a:	mul    DWORD PTR [esi-0x72]
  40be4d:	jecxz  0x40be0e
  40be4f:	push   edi
  40be50:	cli    
  40be51:	mov    al,ds:0x1d29fa1e
  40be56:	ror    BYTE PTR [ebx+ebx*2+0x1c1589e4],0x9f
  40be5e:	xchg   edi,eax
  40be5f:	mov    esi,0x99783913
  40be64:	mov    ds:0xd15a46a3,al
  40be69:	lahf   
  40be6a:	mov    WORD PTR [edi],gs
  40be6c:	sub    eax,0x21512ed6
  40be71:	adc    bh,bl
  40be73:	mov    cs,WORD PTR [ecx]
  40be75:	stos   DWORD PTR es:[edi],eax
  40be76:	mov    bl,0x8c
  40be78:	cmp    BYTE PTR [edx-0x567017ca],ah
  40be7e:	das    
  40be7f:	sahf   
  40be80:	xor    DWORD PTR [esi],0xffffffa6
  40be83:	repz mov WORD PTR [eax-0xa],ds
  40be87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be88:	inc    ecx
  40be89:	inc    ebx
  40be8a:	xchg   ecx,eax
  40be8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8c:	rcl    BYTE PTR [edx],1
  40be8e:	inc    esp
  40be8f:	ficom  DWORD PTR [edi+0x36]
  40be92:	mov    ds:0xcf0d874c,eax
  40be97:	fcmovbe st,st(7)
  40be99:	fnstsw WORD PTR [ebx+0x77]
  40be9c:	xor    eax,0xd1ba056c
  40bea1:	dec    esp
  40bea2:	das    
  40bea3:	(bad)  
  40bea4:	out    dx,eax
  40bea5:	push   esi
  40bea6:	xor    al,0x9d
  40bea8:	mov    ds:0x46c92625,al
  40bead:	adc    bh,cl
  40beaf:	push   esp
  40beb0:	pop    ecx
  40beb1:	cmp    DWORD PTR [ecx+ebp*8-0x14],ebp
  40beb5:	mov    eax,ds:0x99f914cf
  40beba:	push   ebx
  40bebb:	pop    esp
  40bebc:	das    
  40bebd:	aam    0x32
  40bebf:	inc    ecx
  40bec0:	mov    esi,0x1f0c8144
  40bec5:	mov    cl,0x2d
  40bec7:	pop    edi
  40bec8:	fisubr WORD PTR [esi]
  40beca:	repz les ecx,FWORD PTR [eax-0x37]
  40bece:	mov    eax,0x2675556e
  40bed3:	leave  
  40bed4:	test   al,0x52
  40bed6:	and    BYTE PTR [edi-0x44c965d2],ah
  40bedc:	lods   al,BYTE PTR ds:[esi]
  40bedd:	outs   dx,BYTE PTR ds:[esi]
  40bede:	ins    DWORD PTR es:[edi],dx
  40bedf:	scas   eax,DWORD PTR es:[edi]
  40bee0:	mov    ds:0xcdf62b6c,al
  40bee5:	retf   
  40bee6:	xchg   ebx,eax
  40bee7:	jp     0x40bedc
  40bee9:	sub    DWORD PTR cs:[edi],0x41a3bd36
  40bef0:	pop    ecx
  40bef1:	mov    ecx,0xa8576d70
  40bef6:	pop    ecx
  40bef7:	push   ds
  40bef8:	test   BYTE PTR [edx],cl
  40befa:	out    0x9b,al
  40befc:	push   esi
  40befd:	(bad)  
  40befe:	or     al,0x89
  40bf00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf01:	retfw  0xa5e2
  40bf05:	hlt    
  40bf06:	xlat   BYTE PTR ds:[ebx]
  40bf07:	or     eax,0x8b328df9
  40bf0c:	sbb    al,0x42
  40bf0e:	sahf   
  40bf0f:	fwait
  40bf10:	push   0x3b3125eb
  40bf15:	test   eax,0xd14fea87
  40bf1a:	push   esi
  40bf1b:	neg    ch
  40bf1d:	in     al,dx
  40bf1e:	mov    DWORD PTR [edx+0x2e],0xe947ba4
  40bf25:	sub    BYTE PTR [ecx-0x77],bl
  40bf28:	imul   ebp,DWORD PTR [ebp+eiz*2+0x78],0xbe0ac46d
  40bf30:	fld    DWORD PTR [edx+0x81d26cf]
  40bf36:	ins    DWORD PTR es:[edi],dx
  40bf37:	imul   edi,eax,0xf5a85697
  40bf3d:	ret    
  40bf3e:	scas   eax,DWORD PTR es:[edi]
  40bf3f:	and    ebx,DWORD PTR ds:0x8278a617
  40bf45:	call   0x8d5ec313
  40bf4a:	inc    esp
  40bf4b:	shl    DWORD PTR [esi+0x3d5a253e],cl
  40bf51:	fs dec ebp
  40bf53:	mov    ebp,0xd1666e0e
  40bf58:	add    BYTE PTR [eax+0x53],0x41
  40bf5c:	inc    ebp
  40bf5d:	add    bl,BYTE PTR [edx+0x15]
  40bf60:	sbb    DWORD PTR [eax+0x7f422379],ebx
  40bf66:	repz xor DWORD PTR es:[eax+esi*4],ecx
  40bf6b:	popf   
  40bf6c:	cdq    
  40bf6d:	iret   
  40bf6e:	jp     0x40bf48
  40bf70:	dec    BYTE PTR [edx+0x4d42d174]
  40bf76:	mov    dl,0x6f
  40bf78:	adc    esi,DWORD PTR [ebx+0x7d]
  40bf7b:	sbb    edi,DWORD PTR ds:0x5afa36f7
  40bf81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf82:	fdivr  DWORD PTR [edx+0x79b8f6a7]
  40bf88:	jns    0x40bfd0
  40bf8a:	adc    eax,0xcc618ce9
  40bf8f:	dec    edx
  40bf90:	scas   al,BYTE PTR es:[edi]
  40bf91:	push   0xe7a4744e
  40bf96:	xchg   esp,eax
  40bf97:	sub    esp,esp
  40bf99:	shr    edx,cl
  40bf9b:	mov    ecx,0x9969e09b
  40bfa0:	mov    ds:0xa4824e78,eax
  40bfa5:	adc    al,0xa4
  40bfa7:	xor    cl,ch
  40bfa9:	bound  ebp,QWORD PTR [esi-0x25ce1b19]
  40bfaf:	shl    DWORD PTR [ebp-0x189db188],cl
  40bfb5:	pop    ebp
  40bfb6:	ret    0x62aa
  40bfb9:	data16 jns 0x40bf60
  40bfbc:	adc    ebx,DWORD PTR [edx+0x6cd3df9a]
  40bfc2:	pusha  
  40bfc3:	out    dx,eax
  40bfc4:	inc    ebp
  40bfc5:	aam    0xd
  40bfc7:	adc    ebx,DWORD PTR [ecx]
  40bfc9:	or     cl,bh
  40bfcb:	xor    DWORD PTR [edx+0x35],ecx
  40bfce:	xor    eax,0x7f9d45d5
  40bfd3:	ss test eax,0x4edcae8a
  40bfd9:	(bad)  
  40bfda:	inc    DWORD PTR [ebx+0x7ec3df1c]
  40bfe0:	adc    BYTE PTR [ebp+0x26533f95],bl
  40bfe6:	or     al,0xa5
  40bfe8:	mov    esp,0x2c9c8f93
  40bfed:	outs   dx,BYTE PTR ds:[esi]
  40bfee:	cmp    ah,BYTE PTR [edx-0x7a]
  40bff1:	div    BYTE PTR [edx]
  40bff3:	outs   dx,BYTE PTR ds:[esi]
  40bff4:	dec    esp
  40bff5:	fwait
  40bff6:	into   
  40bff7:	test   DWORD PTR [ebp+0xe],esi
  40bffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bffb:	or     eax,0x84b80945
  40c000:	jno    0x40c027
  40c002:	mov    ds:0x7588a2fb,al
  40c007:	jmp    0x1ce5:0x207e05d7
  40c00e:	cmp    eax,0xa733e89e
  40c013:	mov    ebp,0xf157932e
  40c018:	xchg   ecx,eax
  40c019:	sahf   
  40c01a:	push   edi
  40c01b:	mov    eax,ds:0x91488879
  40c020:	sbb    dl,BYTE PTR fs:[esi-0x6c822f64]
  40c027:	inc    ebx
  40c028:	loope  0x40c012
  40c02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02b:	into   
  40c02c:	(bad)  
  40c02d:	in     eax,dx
  40c02e:	xor    ebp,DWORD PTR [ebx-0xa]
  40c031:	mov    BYTE PTR [edx],bh
  40c033:	xchg   edx,eax
  40c034:	push   0xfdb01a13
  40c039:	lods   eax,DWORD PTR ds:[esi]
  40c03a:	cmp    dl,BYTE PTR [ecx]
  40c03c:	add    ch,al
  40c03e:	mul    cl
  40c040:	jg     0x40c03c
  40c042:	push   edx
  40c043:	(bad)  [edi+esi*4+0x60]
  40c047:	and    dh,BYTE PTR [edx+0x8]
  40c04a:	cmp    BYTE PTR [ebx-0x45],ch
  40c04d:	aam    0xda
  40c04f:	and    al,dh
  40c051:	xor    al,0x18
  40c053:	mov    ah,BYTE PTR [ebx+0x49]
  40c056:	push   cs
  40c057:	xlat   BYTE PTR ds:[ebx]
  40c058:	bound  edx,QWORD PTR [ebx-0x26144baa]
  40c05e:	stos   BYTE PTR es:[edi],al
  40c05f:	std    
  40c060:	mov    eax,0x36b87d23
  40c065:	sbb    DWORD PTR [ebx],edi
  40c067:	pop    ss
  40c068:	and    DWORD PTR [esi+0x26],ebp
  40c06b:	retf   0xf574
  40c06e:	sub    eax,0x83da5031
  40c073:	scas   eax,DWORD PTR es:[edi]
  40c074:	js     0x40c005
  40c076:	mov    ebp,0x143e79d
  40c07b:	int    0x52
  40c07d:	icebp  
  40c07e:	mov    ah,cl
  40c080:	mov    edi,0x61af1b8a
  40c085:	cli    
  40c086:	push   ebx
  40c087:	fidiv  DWORD PTR [edx]
  40c089:	arpl   WORD PTR [ebp-0x3a],bx
  40c08c:	jno    0x40c065
  40c08e:	xor    eax,0x12231306
  40c093:	mov    ebx,0x461c0a3c
  40c098:	sar    BYTE PTR [esi-0x34035d79],1
  40c09e:	push   ss
  40c09f:	pop    eax
  40c0a0:	push   ss
  40c0a1:	pop    eax
  40c0a2:	and    DWORD PTR [ecx-0x6b219a87],ecx
  40c0a8:	jg     0x40c0ba
  40c0aa:	push   eax
  40c0ab:	cmp    DWORD PTR [edx+0x21],edi
  40c0ae:	stos   DWORD PTR es:[edi],eax
  40c0af:	adc    al,0xc1
  40c0b1:	add    al,0xc8
  40c0b3:	push   ss
  40c0b4:	out    0x76,eax
  40c0b6:	xor    eax,0xdc1f10df
  40c0bb:	inc    esi
  40c0bc:	xor    bh,al
  40c0be:	fcmovu st,st(3)
  40c0c0:	pop    ds
  40c0c1:	(bad)  
  40c0c2:	retf   0xf003
  40c0c5:	push   esp
  40c0c6:	sbb    al,0x21
  40c0c8:	sar    BYTE PTR [ebp*1-0x2613609e],1
  40c0cf:	nop
  40c0d0:	(bad)  
  40c0d1:	jnp    0x40c11e
  40c0d3:	sbb    ebp,DWORD PTR [edi-0x4b]
  40c0d6:	daa    
  40c0d7:	fnstsw WORD PTR [ecx]
  40c0d9:	mov    eax,0xf68a23b4
  40c0de:	xchg   edx,eax
  40c0df:	sbb    BYTE PTR [ecx],0x22
  40c0e2:	data16 and BYTE PTR [eax-0x12d28c85],bl
  40c0e9:	dec    eax
  40c0ea:	adc    bl,cl
  40c0ec:	rcr    ecx,1
  40c0ee:	mov    bh,0xb9
  40c0f0:	mov    edx,0x4321b10c
  40c0f5:	mov    ebp,0xad6d5c4d
  40c0fa:	mov    dh,0x74
  40c0fc:	retf   0xa11
  40c0ff:	sub    al,0x16
  40c101:	test   al,0x52
  40c103:	lods   eax,DWORD PTR ds:[esi]
  40c104:	outs   dx,DWORD PTR gs:[esi]
  40c106:	popa   
  40c107:	inc    edi
  40c108:	int    0x7b
  40c10a:	(bad)  
  40c10b:	std    
  40c10c:	(bad)  
  40c10d:	int3   
  40c10e:	push   ebx
  40c10f:	lahf   
  40c110:	xchg   BYTE PTR [ebx],dl
  40c112:	mov    eax,0x110bebb5
  40c117:	jecxz  0x40c12e
  40c119:	pop    es
  40c11a:	cmp    BYTE PTR [edi],0x54
  40c11d:	test   DWORD PTR [esi+0x34],0x41697c89
  40c124:	stc    
  40c125:	or     ch,ah
  40c127:	jmp    0xdcf:0xc96ca9c1
  40c12e:	sub    esp,DWORD PTR ds:0x962e5527
  40c134:	inc    esi
  40c135:	cs imul ecx,eax,0x28
  40c139:	out    0x60,eax
  40c13b:	push   ebp
  40c13c:	(bad)  [edi]
  40c13e:	pop    ebx
  40c13f:	cwde   
  40c140:	clc    
  40c141:	out    0x8a,al
  40c143:	imul   ebp,DWORD PTR [edi],0xf71d9608
  40c149:	cmc    
  40c14a:	push   eax
  40c14b:	inc    edi
  40c14c:	fist   DWORD PTR [eax+ecx*4+0x61670b67]
  40c153:	xor    al,0xc6
  40c155:	pop    ebp
  40c156:	ret    
  40c157:	inc    ebp
  40c158:	push   ss
  40c159:	clc    
  40c15a:	xchg   ebp,eax
  40c15b:	ja     0x40c0ed
  40c15d:	pop    ebp
  40c15e:	(bad)  
  40c15f:	fmul   DWORD PTR [ebx]
  40c161:	mov    DWORD PTR [esi+eiz*1+0x3a6fcf1],ebp
  40c168:	sahf   
  40c169:	xor    al,0xf5
  40c16b:	in     eax,dx
  40c16c:	popf   
  40c16d:	mov    dl,0xf0
  40c16f:	popf   
  40c170:	loop   0x40c169
  40c172:	sti    
  40c173:	fwait
  40c174:	test   DWORD PTR [edi],0xfce3896d
  40c17a:	mov    ds:0x13ecc55c,al
  40c17f:	stos   DWORD PTR es:[edi],eax
  40c180:	mov    edi,0x554cc6fb
  40c185:	clc    
  40c186:	cmp    cl,bl
  40c188:	adc    BYTE PTR [ebp+0x51],al
  40c18b:	add    al,al
  40c18d:	mov    bh,BYTE PTR [edi+0x5b]
  40c190:	cmp    al,0xfb
  40c192:	or     eax,0x7979e20b
  40c197:	jmp    0x3f4c02c4
  40c19c:	jno    0x40c199
  40c19e:	or     BYTE PTR [esi-0x1496f665],dh
  40c1a4:	mov    ch,BYTE PTR [eax]
  40c1a6:	dec    edi
  40c1a7:	nop
  40c1a8:	imul   ebp,DWORD PTR [eax+0x65],0xffffffbe
  40c1ac:	fisttp WORD PTR [ecx+0x15]
  40c1af:	fsubr  DWORD PTR ds:0x44fb86f4
  40c1b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b6:	inc    edi
  40c1b7:	in     eax,0x1c
  40c1b9:	sub    BYTE PTR [edi+0x1264e603],al
  40c1bf:	adc    eax,0x576e185b
  40c1c4:	outs   dx,BYTE PTR ds:[esi]
  40c1c5:	mov    BYTE PTR [edi-0x7a],dh
  40c1c8:	push   ebp
  40c1c9:	pop    ebp
  40c1ca:	retf   0x18f
  40c1cd:	ror    BYTE PTR [ecx+0x4f],cl
  40c1d0:	aas    
  40c1d1:	mov    edi,0xfd78d41d
  40c1d6:	sbb    ah,al
  40c1d8:	test   al,0xeb
  40c1da:	mov    bh,0x16
  40c1dc:	aas    
  40c1dd:	das    
  40c1de:	jge    0x40c25f
  40c1e0:	push   ebx
  40c1e1:	call   0x803f2071
  40c1e6:	psllq  mm4,QWORD PTR [esi-0x73]
  40c1ea:	sub    bh,al
  40c1ec:	mov    edi,0x962d2489
  40c1f1:	xchg   ebp,eax
  40c1f2:	and    ah,BYTE PTR [ebx+0x2e]
  40c1f5:	sub    DWORD PTR [edx-0x32],eax
  40c1f8:	inc    ecx
  40c1f9:	sub    al,BYTE PTR [ecx+0x19]
  40c1fc:	push   edi
  40c1fd:	mov    WORD PTR [eax+0x70],es
  40c200:	scas   al,BYTE PTR es:[edi]
  40c201:	lea    eax,[ebx+esi*4+0x24617214]
  40c208:	fmul   DWORD PTR [ecx]
  40c20a:	mov    edx,0x1386c214
  40c20f:	loope  0x40c1a5
  40c211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c212:	enter  0x38ce,0x30
  40c216:	aad    0x79
  40c218:	fwait
  40c219:	cs jle 0x40c20d
  40c21c:	push   DWORD PTR [edx]
  40c21e:	faddp  st(1),st
  40c220:	cmp    eax,0xf74fa86d
  40c225:	or     eax,0xc6db1de3
  40c22a:	test   al,0x91
  40c22c:	and    BYTE PTR ds:0xb4cd97cb,ah
  40c232:	aaa    
  40c233:	dec    eax
  40c234:	cmp    ah,BYTE PTR [eax+ebp*2-0x26]
  40c238:	or     DWORD PTR [eax+0x5e23295c],esp
  40c23e:	inc    esp
  40c23f:	fstp   QWORD PTR ds:0x731af50a
  40c245:	outs   dx,DWORD PTR ds:[esi]
  40c246:	cld    
  40c247:	xor    eax,edx
  40c249:	(bad)  
  40c24a:	call   0xf986:0x609d7cd6
  40c251:	jmp    0xeb2b:0x5915ab12
  40c258:	iret   
  40c259:	xchg   ebx,eax
  40c25a:	cmc    
  40c25b:	and    edi,DWORD PTR [esi]
  40c25d:	pusha  
  40c25e:	mov    bh,0xd2
  40c260:	hlt    
  40c261:	outs   dx,BYTE PTR ds:[esi]
  40c262:	loope  0x40c291
  40c264:	pop    esp
  40c265:	popf   
  40c266:	push   ebx
  40c267:	fwait
  40c268:	xor    BYTE PTR [edi+0x443dca45],cl
  40c26e:	xchg   DWORD PTR [edx-0xb],esi
  40c271:	gs in  al,dx
  40c273:	in     al,dx
  40c274:	int    0x0
  40c276:	loope  0x40c280
  40c278:	add    eax,0xcb9d88c4
  40c27d:	or     BYTE PTR ds:0xe40e20a7,cl
  40c283:	ja     0x40c282
  40c285:	xchg   esi,eax
  40c286:	(bad)  
  40c287:	fst    QWORD PTR [eax+0x20]
  40c28a:	mov    cl,0x24
  40c28c:	(bad)  [ebx+ebx*1]
  40c28f:	pop    esi
  40c290:	pop    ebx
  40c291:	clc    
  40c292:	mov    eax,ds:0x392f7e02
  40c297:	repnz fwait
  40c299:	icebp  
  40c29a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c29b:	xor    DWORD PTR [esi-0x617ad13e],0x5c3687c6
  40c2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a6:	sub    al,0xd1
  40c2a8:	xor    eax,0xb25ff99
  40c2ad:	cmp    al,0x74
  40c2af:	push   ss
  40c2b0:	pop    edx
  40c2b1:	cmp    BYTE PTR [edi+0x34],ch
  40c2b4:	repz jle 0x40c2a6
  40c2b7:	adc    ch,BYTE PTR [esi-0x2ca19ef4]
  40c2bd:	mov    esp,0x3567fb56
  40c2c2:	ret    
  40c2c3:	and    DWORD PTR [edi],esp
  40c2c5:	ret    0x833a
  40c2c8:	mov    al,ds:0x9dd79ad8
  40c2cd:	ds sbb al,0x2f
  40c2d0:	lock aad 0x5c
  40c2d3:	aam    0x36
  40c2d5:	hlt    
  40c2d6:	iret   
  40c2d7:	lods   al,BYTE PTR ds:[esi]
  40c2d8:	pop    edx
  40c2d9:	jne    0x40c2a5
  40c2db:	retf   
  40c2dc:	mov    ds:0x85cb0e1a,eax
  40c2e1:	mov    dh,BYTE PTR [ecx+esi*1]
  40c2e4:	jl     0x40c2c6
  40c2e6:	jmp    0xaa1417dd
  40c2eb:	mov    edi,0x8a2338a2
  40c2f0:	xor    al,cl
  40c2f2:	out    dx,al
  40c2f3:	mov    ecx,0x18e52a10
  40c2f8:	mov    ebx,0xc4057a28
  40c2fd:	mov    ds:0xff47eea0,al
  40c302:	mov    ch,BYTE PTR [edx+0x13]
  40c305:	bound  ebx,QWORD PTR [edx]
  40c307:	fst    DWORD PTR [ebx-0x39]
  40c30a:	ret    
  40c30b:	test   esp,esp
  40c30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c30e:	aad    0x22
  40c310:	mov    al,0xa6
  40c312:	fdivr  DWORD PTR [esp+edi*4-0x3a16f18e]
  40c319:	ins    DWORD PTR es:[edi],dx
  40c31a:	xchg   esi,eax
  40c31b:	inc    eax
  40c31c:	pop    es
  40c31d:	fdivr  QWORD PTR [ebp+0x7a]
  40c320:	fidiv  WORD PTR cs:[ebp+0x4c]
  40c324:	leave  
  40c325:	mov    ds:0x7adcc4fb,eax
  40c32a:	aad    0xd6
  40c32c:	push   eax
  40c32d:	jne    0x40c35c
  40c32f:	jp     0x40c37a
  40c331:	jmp    0xee98:0xff140e3
  40c338:	retf   
  40c339:	fisub  DWORD PTR [edx+0x69]
  40c33c:	add    edi,DWORD PTR [edi+ebx*1+0x1782eaa2]
  40c343:	jecxz  0x40c370
  40c345:	cmp    al,0x24
  40c347:	popf   
  40c348:	and    eax,0xb0b54ffa
  40c34d:	repz add DWORD PTR fs:[esi],ebp
  40c351:	test   esi,esp
  40c353:	sbb    dl,BYTE PTR [esi]
  40c355:	aam    0x0
  40c357:	enter  0xbfe8,0x2f
  40c35b:	push   es
  40c35c:	xchg   esi,eax
  40c35d:	loope  0x40c313
  40c35f:	push   ebx
  40c360:	cmp    bh,BYTE PTR [edx]
  40c362:	cmp    al,0x8b
  40c364:	jns    0x40c394
  40c366:	enter  0x3c3e,0xf9
  40c36a:	daa    
  40c36b:	fisub  DWORD PTR [esi]
  40c36d:	cdq    
  40c36e:	dec    ebp
  40c36f:	mov    al,0xf0
  40c371:	mov    bl,0x8b
  40c373:	pop    ebx
  40c374:	lds    edx,FWORD PTR [eax]
  40c376:	adc    eax,0xbe2e58cd
  40c37b:	xor    eax,0x88e0d8d8
  40c380:	ins    DWORD PTR es:[edi],dx
  40c381:	pop    ss
  40c382:	mov    ds:0x4b4cf456,eax
  40c387:	jo     0x40c3d3
  40c389:	mov    ds:0x7bdcc168,eax
  40c38e:	and    esp,edi
  40c390:	scas   eax,DWORD PTR es:[edi]
  40c391:	mov    DWORD PTR [ecx],esp
  40c393:	pop    ds
  40c394:	mov    ds:0x71a1a7d0,al
  40c399:	jmp    0x4672:0xee6d94a2
  40c3a0:	and    al,0x3c
  40c3a2:	add    al,0x50
  40c3a4:	nop
  40c3a5:	cmp    DWORD PTR [eax+0x1d58d69b],ebp
  40c3ab:	inc    ebp
  40c3ac:	add    DWORD PTR fs:[edx+0x64],edi
  40c3b0:	push   ebx
  40c3b1:	loopne 0x40c369
  40c3b3:	call   0x273c:0x17a2fe3a
  40c3ba:	int    0xd9
  40c3bc:	aad    0x2b
  40c3be:	aas    
  40c3bf:	lahf   
  40c3c0:	in     eax,0x61
  40c3c2:	cmp    al,0xfa
  40c3c4:	sbb    eax,0x7eddcd48
  40c3c9:	jnp    0x40c37a
  40c3cb:	xchg   edx,eax
  40c3cc:	out    0x6f,eax
  40c3ce:	inc    ebp
  40c3cf:	retf   
  40c3d0:	ret    
  40c3d1:	mov    bh,0x5b
  40c3d3:	fisub  DWORD PTR [ecx]
  40c3d5:	sti    
  40c3d6:	push   es
  40c3d7:	pop    es
  40c3d8:	pop    ebp
  40c3d9:	cs enter 0xf592,0xed
  40c3de:	retf   
  40c3df:	mov    cl,0x7a
  40c3e1:	clc    
  40c3e2:	rcl    BYTE PTR [edi],1
  40c3e4:	inc    ebp
  40c3e5:	aas    
  40c3e6:	mov    ebx,0xf8a9d8ec
  40c3eb:	jle    0x40c412
  40c3ed:	inc    ebx
  40c3ee:	loop   0x40c3f4
  40c3f0:	sub    eax,0xce1a1203
  40c3f5:	xor    al,0x69
  40c3f7:	mov    al,0x2b
  40c3f9:	jmp    0x61:0x90619c7f
  40c400:	int3   
  40c401:	outs   dx,BYTE PTR ds:[esi]
  40c402:	and    eax,0x69dc7283
  40c407:	cmp    BYTE PTR [eax],0x8f
  40c40a:	aam    0x84
  40c40c:	cmp    BYTE PTR [ebx+0x53adbd91],dl
  40c412:	or     edi,DWORD PTR [ebx+0x7e]
  40c415:	push   eax
  40c416:	outs   dx,BYTE PTR ds:[esi]
  40c417:	fidivr DWORD PTR ss:[edx+0x32a7ec14]
  40c41e:	outs   dx,DWORD PTR ds:[esi]
  40c41f:	mov    edx,0xc8cf1be
  40c424:	sar    dh,cl
  40c426:	arpl   WORD PTR [esi-0x64],cx
  40c429:	fmul   QWORD PTR [ebp+0x1e]
  40c42c:	je     0x40c475
  40c42e:	ja     0x40c3f8
  40c430:	lea    edx,[edi]
  40c432:	push   ebx
  40c433:	ins    BYTE PTR es:[edi],dx
  40c434:	xlat   BYTE PTR ds:[ebx]
  40c435:	lock and bh,BYTE PTR [eax+0x10]
  40c439:	dec    ecx
  40c43a:	dec    edx
  40c43b:	pop    edi
  40c43c:	cwde   
  40c43d:	lods   al,BYTE PTR ds:[esi]
  40c43e:	fs push eax
  40c440:	dec    ebx
  40c441:	(bad)  
  40c442:	push   ebp
  40c443:	ret    0xd02c
  40c446:	out    0x60,eax
  40c448:	mov    al,0x11
  40c44a:	push   ds
  40c44b:	repz jl 0x40c428
  40c44e:	jp     0x40c3f6
  40c450:	call   0x913b:0x8f596efe
  40c457:	int3   
  40c458:	clc    
  40c459:	jg     0x40c49a
  40c45b:	ja     0x40c40d
  40c45d:	dec    edi
  40c45e:	sub    DWORD PTR [edx],edx
  40c460:	dec    edi
  40c461:	pop    eax
  40c462:	sub    al,0x9c
  40c464:	bound  ecx,QWORD PTR [ebx+0x13]
  40c467:	out    dx,al
  40c468:	jecxz  0x40c442
  40c46a:	js     0x40c44f
  40c46c:	jb     0x40c40e
  40c46e:	imul   edx,DWORD PTR [ebp+0x3ea61ae1],0x7a
  40c475:	mov    esi,0xbff35475
  40c47a:	mov    ds:0x76998a86,al
  40c47f:	add    BYTE PTR [esi],ah
  40c481:	call   FWORD PTR [edx-0x1a]
  40c484:	push   ecx
  40c485:	cmp    BYTE PTR [ebp+0x20387211],dh
  40c48b:	and    BYTE PTR [edx-0x5],dl
  40c48e:	fist   DWORD PTR [esi+0x6bbb9ed1]
  40c494:	dec    edx
  40c495:	lods   al,BYTE PTR ds:[esi]
  40c496:	xor    BYTE PTR [edx+0x7e],0x6a
  40c49a:	mov    ebp,edi
  40c49c:	mov    ecx,0x71c47bee
  40c4a1:	sub    eax,0x5f93ef46
  40c4a6:	test   al,0xab
  40c4a8:	jle    0x40c471
  40c4aa:	test   eax,0xc0315c59
  40c4af:	xor    DWORD PTR [ebx],0x9b571e86
  40c4b5:	test   BYTE PTR [ebx],bh
  40c4b7:	sbb    BYTE PTR [ecx],0xc4
  40c4ba:	clc    
  40c4bb:	add    edx,DWORD PTR ds:0x178e7d70
  40c4c1:	add    al,0x2b
  40c4c3:	xchg   ecx,eax
  40c4c4:	clc    
  40c4c5:	cdq    
  40c4c6:	loopne 0x40c4e6
  40c4c8:	iret   
  40c4c9:	imul   ecx,DWORD PTR [bx+di],0xffffffb9
  40c4cd:	mov    bl,0xec
  40c4cf:	and    ch,BYTE PTR [esi+0x11]
  40c4d2:	(bad)  
  40c4d3:	rcl    DWORD PTR [esp+ebp*2],1
  40c4d6:	sub    ecx,edi
  40c4d8:	les    esp,FWORD PTR [ecx-0xcf6d30e]
  40c4de:	dec    eax
  40c4df:	outs   dx,BYTE PTR ds:[esi]
  40c4e0:	mov    dl,0x16
  40c4e2:	stos   DWORD PTR es:[edi],eax
  40c4e3:	xor    BYTE PTR [edx+0x7b],bl
  40c4e6:	das    
  40c4e7:	sub    cl,BYTE PTR [eax-0x295ff507]
  40c4ed:	inc    esi
  40c4ee:	mov    ch,0x7e
  40c4f0:	rcl    ch,1
  40c4f2:	inc    ecx
  40c4f3:	stos   BYTE PTR es:[edi],al
  40c4f4:	cmp    ebx,DWORD PTR [ebp+ecx*2-0x10180e78]
  40c4fb:	and    edi,esi
  40c4fd:	sub    DWORD PTR [edi+0x4d12f4bf],edx
  40c503:	mov    ds:0x3209a912,eax
  40c508:	mov    cl,0xb
  40c50a:	push   ebp
  40c50b:	jmp    0x2b0a:0x64a6335d
  40c512:	cmp    dl,BYTE PTR [ebx+eax*2]
  40c515:	pop    es
  40c516:	mov    esi,0x8a1e151d
  40c51b:	or     esi,DWORD PTR ds:0xed3c532
  40c521:	or     al,ah
  40c523:	retf   
  40c524:	sub    BYTE PTR [edx+0x284ba1e8],cl
  40c52a:	fwait
  40c52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c52c:	mov    fs,ebp
  40c52e:	push   edx
  40c52f:	sbb    ebp,edi
  40c531:	stc    
  40c532:	cmp    eax,0xf2c01616
  40c537:	xor    DWORD PTR [edx+0x6f],ebx
  40c53a:	retf   0xd800
  40c53d:	mov    ds:0xe1bfe5b2,eax
  40c542:	dec    edx
  40c543:	add    BYTE PTR [eax+0x6],ah
  40c546:	test   BYTE PTR [edi+edi*4-0x4c],dl
  40c54a:	outs   dx,BYTE PTR ds:[esi]
  40c54b:	mov    BYTE PTR [ecx],bl
  40c54d:	les    ebx,FWORD PTR [ebx+0x44]
  40c550:	icebp  
  40c551:	dec    ecx
  40c552:	inc    esi
  40c553:	mov    bh,0x9f
  40c555:	lds    ebp,FWORD PTR [esi+0x6b]
  40c558:	shl    BYTE PTR [ecx+0xdc853a6],0x3f
  40c55f:	pop    ebp
  40c560:	push   ebx
  40c561:	push   edi
  40c562:	jl     0x40c535
  40c564:	lods   al,BYTE PTR es:[esi]
  40c566:	repz sar DWORD PTR [eax+edx*4+0x706d06fb],1
  40c56e:	xor    al,0xec
  40c570:	jo     0x40c535
  40c572:	jle    0x40c4f6
  40c574:	add    eax,0x264708c
  40c579:	add    BYTE PTR [edi-0x77544ec7],0xe
  40c580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c581:	stos   DWORD PTR es:[edi],eax
  40c582:	pop    ss
  40c583:	jnp    0x40c52d
  40c585:	xor    eax,0xd17bf4e9
  40c58a:	jae    0x40c584
  40c58c:	or     BYTE PTR [esi],ah
  40c58e:	test   eax,0x3d0d0c1e
  40c593:	cli    
  40c594:	add    eax,0x46bf7e5d
  40c599:	outs   dx,DWORD PTR ds:[esi]
  40c59a:	sub    al,0x66
  40c59c:	cmp    edx,0xcce7114d
  40c5a2:	ds out 0xbc,eax
  40c5a5:	neg    BYTE PTR [edx-0x54]
  40c5a8:	xchg   esi,eax
  40c5a9:	scas   eax,DWORD PTR es:[edi]
  40c5aa:	sbb    eax,0x2a9090a8
  40c5af:	cs inc ebx
  40c5b1:	rol    BYTE PTR [esi],1
  40c5b3:	adc    ebp,eax
  40c5b5:	fidivr WORD PTR [edx]
  40c5b7:	adc    ebx,DWORD PTR [ecx+0x7e]
  40c5ba:	pop    esi
  40c5bb:	push   eax
  40c5bc:	jmp    0xfcd3f07e
  40c5c1:	push   ds
  40c5c2:	out    0x75,al
  40c5c4:	into   
  40c5c5:	fsub   DWORD PTR [edi+0x4d5cf9e8]
  40c5cb:	fist   DWORD PTR [edx]
  40c5cd:	xor    ebx,DWORD PTR [eax]
  40c5cf:	pop    es
  40c5d0:	div    esp
  40c5d2:	cld    
  40c5d3:	or     ah,ah
  40c5d5:	mov    dl,0x2f
  40c5d7:	adc    bl,BYTE PTR [ecx+0x4fe1b44e]
  40c5dd:	inc    edx
  40c5de:	and    bh,BYTE PTR [ecx-0x228f4fe9]
  40c5e4:	jle    0x40c640
  40c5e6:	push   esp
  40c5e7:	out    0x21,al
  40c5e9:	mov    al,ds:0x7644ade2
  40c5ee:	xchg   ecx,eax
  40c5ef:	ins    BYTE PTR es:[edi],dx
  40c5f0:	hlt    
  40c5f1:	gs inc ebx
  40c5f3:	dec    edx
  40c5f4:	jbe    0x40c5fe
  40c5f6:	not    DWORD PTR [eax]
  40c5f8:	int3   
  40c5f9:	(bad)  
  40c5fb:	dec    esi
  40c5fc:	loop   0x40c63d
  40c5fe:	ficom  DWORD PTR [ecx-0x1e]
  40c601:	shr    BYTE PTR [eax-0x25f1e047],cl
  40c607:	iret   
  40c608:	xchg   esi,eax
  40c609:	push   edi
  40c60a:	jge    0x40c658
  40c60c:	and    BYTE PTR gs:[ecx-0x4d],ah
  40c610:	or     eax,0x5d49e7c0
  40c615:	cwde   
  40c616:	into   
  40c617:	push   ebx
  40c618:	push   cs
  40c619:	in     al,dx
  40c61a:	inc    esp
  40c61b:	loopne 0x40c619
  40c61d:	jl     0x40c63d
  40c61f:	adc    BYTE PTR [edi],dl
  40c621:	ror    DWORD PTR [ebp+0x75a4143d],0xf5
  40c628:	ror    bl,cl
  40c62a:	pop    ebx
  40c62b:	data16 adc BYTE PTR [ebp+0x40551044],al
  40c632:	hlt    
  40c633:	mov    ds:0x58bf5f5,al
  40c638:	pop    edx
  40c639:	or     esi,DWORD PTR [ecx]
  40c63b:	scas   eax,DWORD PTR es:[edi]
  40c63c:	fwait
  40c63d:	ret    
  40c63e:	pop    ds
  40c63f:	add    ebp,edx
  40c641:	lea    ecx,[ecx-0x25]
  40c644:	dec    esi
  40c645:	les    esp,FWORD PTR [eax-0x39]
  40c648:	mov    ebp,0xde888c4c
  40c64d:	add    ebx,DWORD PTR [esi+eiz*8]
  40c650:	mov    esi,0x26615471
  40c655:	addr16 (bad) 
  40c657:	mov    esp,0xc3674a19
  40c65c:	dec    edi
  40c65d:	xor    al,0x69
  40c65f:	shl    BYTE PTR [ebx+ecx*4],cl
  40c662:	out    0xf3,al
  40c664:	aam    0xf3
  40c666:	aam    0x42
  40c668:	push   esp
  40c669:	cwde   
  40c66a:	dec    ebp
  40c66b:	xchg   esp,eax
  40c66c:	fdiv   DWORD PTR [ebx]
  40c66e:	jp     0x40c663
  40c670:	out    dx,al
  40c671:	lock scas al,BYTE PTR es:[edi]
  40c673:	jmp    0xc854:0x2296637f
  40c67a:	popa   
  40c67b:	(bad)  [eax-0x760327fd]
  40c681:	adc    al,0x64
  40c683:	pop    ebx
  40c684:	add    al,0x4e
  40c686:	mov    bh,0x72
  40c688:	icebp  
  40c689:	jp     0x40c624
  40c68b:	jbe    0x40c6df
  40c68d:	andnps xmm0,XMMWORD PTR ds:0xc157c9e8
  40c694:	sbb    cl,BYTE PTR [edi+0x41]
  40c697:	pop    edi
  40c698:	sub    bh,BYTE PTR [edi+0x16963f8d]
  40c69e:	jns    0x40c65a
  40c6a0:	add    al,0x31
  40c6a2:	or     ah,BYTE PTR [eax-0x50]
  40c6a5:	pop    ds
  40c6a6:	sbb    dh,BYTE PTR [ebp-0x16747f85]
  40c6ac:	in     eax,dx
  40c6ad:	jno    0x40c6cd
  40c6af:	fisubr WORD PTR [ebx-0x4672e04c]
  40c6b5:	add    al,0x53
  40c6b7:	dec    ecx
  40c6b8:	pop    edi
  40c6b9:	ins    BYTE PTR es:[edi],dx
  40c6ba:	(bad)  
  40c6bb:	(bad)  
  40c6bc:	sub    DWORD PTR [edi+esi*1-0x9],eax
  40c6c0:	pop    ecx
  40c6c1:	dec    ecx
  40c6c2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c6c4:	jp     0x40c71d
  40c6c6:	sbb    edi,DWORD PTR ds:0xde49542b
  40c6cc:	es pusha 
  40c6ce:	addr16 add al,0x1
  40c6d1:	aas    
  40c6d2:	push   ebx
  40c6d3:	jo     0x40c72c
  40c6d5:	std    
  40c6d6:	sar    BYTE PTR [esi-0x49],cl
  40c6d9:	div    DWORD PTR [edx+0x3e]
  40c6dc:	sub    BYTE PTR [edx],0x8f
  40c6df:	(bad)  
  40c6e0:	repz xchg esp,eax
  40c6e2:	add    dh,BYTE PTR [edi-0x18]
  40c6e5:	aad    0x3a
  40c6e7:	mov    al,ds:0xb2e6eeef
  40c6ec:	daa    
  40c6ed:	(bad)  
  40c6ee:	or     eax,0x1bd8fd3f
  40c6f3:	jge    0x40c76b
  40c6f5:	cwde   
  40c6f6:	mov    dh,0x8b
  40c6f8:	idiv   BYTE PTR [ebp+0x3a4244be]
  40c6fe:	cld    
  40c6ff:	out    dx,eax
  40c700:	loopne 0x40c72d
  40c702:	add    edi,edi
  40c704:	add    DWORD PTR [esi-0x260d1c66],0xffffffe0
  40c70b:	es and edi,esp
  40c70e:	xor    dl,ch
  40c710:	fwait
  40c711:	xchg   esp,eax
  40c712:	dec    esi
  40c713:	add    DWORD PTR [edi-0x62a40b19],edx
  40c719:	xchg   esi,eax
  40c71a:	add    al,0xe4
  40c71c:	inc    ecx
  40c71d:	jge    0x40c6b5
  40c71f:	fsub   DWORD PTR [eax]
  40c721:	xchg   DWORD PTR [ebx],edi
  40c723:	sub    al,0x5f
  40c725:	enter  0xb42e,0x23
  40c729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c72a:	dec    esi
  40c72b:	ss mov al,0xb5
  40c72e:	mov    ?,WORD PTR [eax+0x59]
  40c731:	mov    ?,WORD PTR [edi-0x44]
  40c734:	out    dx,al
  40c735:	adc    al,BYTE PTR [edi+edi*8]
  40c738:	in     eax,0x3f
  40c73a:	mov    ch,0x83
  40c73c:	pop    edx
  40c73d:	pop    ebx
  40c73e:	adc    bh,cl
  40c740:	and    BYTE PTR [ecx],ch
  40c742:	mov    ecx,0x39b1f416
  40c747:	(bad)  
  40c748:	xlat   BYTE PTR ds:[ebx]
  40c749:	or     eax,0x21fa764b
  40c74e:	sbb    bl,al
  40c750:	into   
  40c751:	push   ecx
  40c752:	addr16 lock adc eax,0x31d73575
  40c759:	js     0x40c722
  40c75b:	loop   0x40c774
  40c75d:	(bad)  
  40c75e:	out    0xd5,eax
  40c760:	lods   eax,DWORD PTR ds:[esi]
  40c761:	sbb    DWORD PTR [edi],edx
  40c763:	jne    0x40c757
  40c765:	imul   DWORD PTR cs:[esi]
  40c768:	jl     0x40c73d
  40c76a:	(bad)  
  40c76c:	out    dx,eax
  40c76d:	jg     0x40c76b
  40c76f:	aam    0x4c
  40c771:	int3   
  40c772:	fsub   DWORD PTR [ebp+0x28efadb0]
  40c778:	jnp    0x40c78a
  40c77a:	mov    ebp,gs
  40c77c:	loope  0x40c7f2
  40c77e:	sub    esp,DWORD PTR [edx-0x1b]
  40c781:	test   eax,0xabf1dd6b
  40c786:	in     eax,dx
  40c787:	cmp    ecx,edi
  40c789:	ss js  0x40c7ac
  40c78c:	ffree  st(1)
  40c78e:	gs loopne 0x40c77a
  40c791:	inc    ebp
  40c792:	popf   
  40c793:	in     al,dx
  40c794:	sub    DWORD PTR [ebx],ebp
  40c796:	loopne 0x40c7e6
  40c798:	xchg   dh,bl
  40c79a:	fsubr  QWORD PTR [edi-0x50]
  40c79d:	inc    ebx
  40c79e:	push   esp
  40c79f:	cmp    BYTE PTR [ecx+0x6119a87e],dl
  40c7a5:	mov    DWORD PTR [edx],esp
  40c7a7:	loop   0x40c824
  40c7a9:	adc    bh,BYTE PTR ds:0xc52e1a75
  40c7af:	push   ss
  40c7b0:	pusha  
  40c7b1:	inc    esi
  40c7b2:	dec    ebx
  40c7b3:	and    al,0x89
  40c7b5:	add    al,0x18
  40c7b7:	inc    ebp
  40c7b8:	ins    DWORD PTR es:[edi],dx
  40c7b9:	(bad)  
  40c7ba:	(bad)  
  40c7bb:	push   ss
  40c7bc:	(bad)  
  40c7bd:	bound  ecx,QWORD PTR [edi-0x18]
  40c7c0:	push   ebp
  40c7c1:	(bad)  
  40c7c2:	xchg   edi,eax
  40c7c3:	repz test eax,0x1d40e99c
  40c7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ca:	sub    BYTE PTR [ebp+0x19],al
  40c7cd:	or     al,0xb9
  40c7cf:	inc    esp
  40c7d0:	jmp    0x385d:0x83b044b4
  40c7d7:	in     al,dx
  40c7d8:	push   0x2a91cc9f
  40c7dd:	pop    ebx
  40c7de:	fdivr  st(2),st
  40c7e0:	jl     0x40c7a9
  40c7e2:	pop    ss
  40c7e3:	scas   eax,DWORD PTR es:[edi]
  40c7e4:	mov    bl,0xd1
  40c7e6:	xchg   edx,eax
  40c7e7:	dec    esi
  40c7e8:	push   edx
  40c7e9:	pop    esp
  40c7ea:	lahf   
  40c7eb:	sub    al,0xf
  40c7ed:	add    BYTE PTR [ebp+0x7eebbd83],bh
  40c7f3:	pop    es
  40c7f4:	mov    WORD PTR [edi+0x4e],fs
  40c7f7:	xor    BYTE PTR [edx-0x2170089a],0x3c
  40c7fe:	callw  0x222
  40c802:	adc    BYTE PTR [ecx],ch
  40c804:	hlt    
  40c805:	xchg   esi,eax
  40c806:	retf   
  40c807:	das    
  40c808:	mov    WORD PTR [ebx+0x127bcbe4],?
  40c80e:	pop    ebp
  40c80f:	push   ds
  40c810:	jmp    0xbdd:0x6f5ad435
  40c817:	push   ebx
  40c818:	add    ebx,DWORD PTR [ecx+edx*2-0x7d]
  40c81c:	sub    DWORD PTR [edi-0x54],edx
  40c81f:	sbb    eax,0xef5e226d
  40c824:	pop    ebp
  40c825:	ja     0x40c7c2
  40c827:	lds    ebx,FWORD PTR [ebp+0x73102397]
  40c82d:	xlat   BYTE PTR ds:[ebx]
  40c82e:	fdivr  DWORD PTR [ecx+0x38]
  40c831:	fs in  eax,dx
  40c833:	lods   eax,DWORD PTR ds:[esi]
  40c834:	or     ebx,esp
  40c836:	adc    dl,cl
  40c838:	mov    ebx,0xc35f9df4
  40c83d:	pushf  
  40c83e:	cmp    al,0xd6
  40c840:	and    al,0xcb
  40c842:	bound  eax,QWORD PTR [eax-0x4c]
  40c845:	xor    eax,0x57afd8fc
  40c84a:	scas   al,BYTE PTR es:[edi]
  40c84b:	sub    al,0x74
  40c84d:	mov    esp,esi
  40c84f:	popf   
  40c850:	or     ch,0x11
  40c853:	inc    ebp
  40c854:	inc    edx
  40c855:	mov    ds:0x821b657a,al
  40c85a:	fwait
  40c85b:	(bad)  
  40c85c:	xor    BYTE PTR [edi-0x7d],al
  40c85f:	jns    0x40c7f5
  40c861:	popf   
  40c862:	(bad)  
  40c863:	cmp    eax,0x1b7f577b
  40c868:	out    0xb4,eax
  40c86a:	mov    eax,ds:0xe42ccfc9
  40c86f:	dec    ebp
  40c870:	push   ebx
  40c871:	jmp    0x40c80d
  40c873:	ins    BYTE PTR es:[edi],dx
  40c874:	push   ss
  40c875:	cmp    DWORD PTR [esi-0x46],ebx
  40c878:	scas   eax,DWORD PTR es:[edi]
  40c879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87a:	xchg   esp,eax
  40c87b:	sub    ah,cl
  40c87d:	cwde   
  40c87e:	xor    edx,esi
  40c880:	in     eax,0xca
  40c882:	dec    edx
  40c883:	mov    edi,ebp
  40c885:	inc    esi
  40c886:	scas   eax,DWORD PTR es:[edi]
  40c887:	fst    QWORD PTR [edi+0x33f5fb8b]
  40c88d:	imul   ebx,DWORD PTR [ecx],0x44207480
  40c893:	cmove  edi,DWORD PTR [esi-0x37]
  40c897:	xlat   BYTE PTR ds:[ebx]
  40c898:	jmp    0x65af:0x45925782
  40c89f:	fmul   QWORD PTR [edi]
  40c8a1:	jg     0x40c8fd
  40c8a3:	xor    DWORD PTR [esi+0x4c],esp
  40c8a6:	ja     0x40c847
  40c8a8:	push   0x84f3659f
  40c8ad:	ret    0x70
  40c8b0:	add    bh,BYTE PTR [esi+0x51]
  40c8b3:	mov    ch,0x31
  40c8b5:	and    DWORD PTR [ecx-0x43],0x790ff629
  40c8bc:	in     eax,dx
  40c8bd:	gs pop ss
  40c8bf:	ret    0x796f
  40c8c2:	cwde   
  40c8c3:	sub    DWORD PTR [ebx-0x55edfa0d],edx
  40c8c9:	pop    ebp
  40c8ca:	in     eax,0x78
  40c8cc:	jo     0x40c8b2
  40c8ce:	inc    edi
  40c8cf:	hlt    
  40c8d0:	or     al,0xcb
  40c8d2:	sbb    DWORD PTR [edi],eax
  40c8d4:	cs adc al,0x3e
  40c8d7:	ret    0xf474
  40c8da:	sbb    dh,ah
  40c8dc:	call   0x72d47271
  40c8e1:	jo     0x40c878
  40c8e3:	push   edx
  40c8e4:	xchg   BYTE PTR ds:0xe6cd7b02,bl
  40c8ea:	sub    eax,0x370055aa
  40c8ef:	cdq    
  40c8f0:	or     eax,0x9f68ab76
  40c8f5:	dec    ecx
  40c8f6:	pusha  
  40c8f7:	mov    dl,BYTE PTR [edi]
  40c8f9:	aam    0x78
  40c8fb:	mov    dh,0xea
  40c8fd:	mov    BYTE PTR [esi],bh
  40c8ff:	dec    eax
  40c900:	jecxz  0x40c94f
  40c902:	or     bh,BYTE PTR ds:0x1abf2467
  40c908:	lahf   
  40c909:	retf   0x2e0d
  40c90c:	es push esp
  40c90e:	push   edx
  40c90f:	icebp  
  40c910:	cmp    esi,ebp
  40c912:	test   BYTE PTR [eax+0x3d],al
  40c915:	or     al,BYTE PTR [edx]
  40c917:	add    al,0xc3
  40c919:	push   edx
  40c91a:	inc    edx
  40c91b:	pop    ebx
  40c91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c91e:	push   ebx
  40c91f:	push   edx
  40c920:	cmp    al,BYTE PTR [ecx+0x541dcab3]
  40c926:	mov    eax,ebx
  40c928:	cwde   
  40c929:	mov    gs,eax
  40c92b:	mov    bl,0x2e
  40c92d:	out    dx,al
  40c92e:	mov    ch,0x71
  40c930:	mov    ah,0x78
  40c932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c933:	xor    al,0x10
  40c935:	test   eax,0xbd61206
  40c93a:	mov    WORD PTR [eax-0x51],es
  40c93d:	sbb    al,al
  40c93f:	push   cs
  40c940:	and    BYTE PTR [ecx-0x9c2994c],ch
  40c946:	icebp  
  40c947:	mov    eax,0x498861d2
  40c94c:	in     al,0x60
  40c94e:	aas    
  40c94f:	xor    BYTE PTR ds:0xf82cdd53,dl
  40c955:	sar    DWORD PTR [ebx-0x56],cl
  40c958:	push   esi
  40c959:	jecxz  0x40c933
  40c95b:	mov    dl,0x9d
  40c95d:	adc    bl,bh
  40c95f:	cmp    al,0x4a
  40c961:	jnp    0x40c9b3
  40c963:	push   ss
  40c964:	mov    ds:0x144a06fe,al
  40c969:	mov    ds:0xf1f11984,al
  40c96e:	pusha  
  40c96f:	jge    0x40c9d1
  40c971:	nop
  40c972:	int    0xa5
  40c974:	mov    dl,0x73
  40c976:	stos   BYTE PTR es:[edi],al
  40c977:	add    edx,DWORD PTR [ebp-0x2a889dc5]
  40c97d:	bound  ebp,QWORD PTR [edx+0x35e8de38]
  40c983:	push   ds
  40c984:	jmp    FWORD PTR [edi+0x76]
  40c987:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c989:	mul    BYTE PTR [ecx]
  40c98b:	jmp    0xfa97:0xa3de848a
  40c992:	sbb    bh,bl
  40c994:	xlat   BYTE PTR ds:[ebx]
  40c995:	out    dx,al
  40c996:	int3   
  40c997:	(bad)  
  40c998:	pop    edi
  40c999:	cmp    esi,edi
  40c99b:	lods   eax,DWORD PTR ds:[esi]
  40c99c:	ds leave 
  40c99e:	or     BYTE PTR [edi],ch
  40c9a0:	lods   al,BYTE PTR ds:[esi]
  40c9a1:	loop   0x40c986
  40c9a3:	and    BYTE PTR [eax+0x7dbe315d],ah
  40c9a9:	pop    ecx
  40c9aa:	sbb    ecx,DWORD PTR [ecx-0x538bf832]
  40c9b0:	shl    BYTE PTR [ecx-0xf],cl
  40c9b3:	adc    eax,0xe12755be
  40c9b8:	test   DWORD PTR [eax-0x67],edx
  40c9bb:	js     0x40c986
  40c9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9be:	sahf   
  40c9bf:	mov    cs,WORD PTR [edi-0x35c42ae0]
  40c9c5:	pop    edi
  40c9c6:	sub    DWORD PTR [ebx-0x12],ecx
  40c9c9:	(bad)  
  40c9ca:	cmp    bl,BYTE PTR [edi]
  40c9cc:	mov    ch,BYTE PTR [esi+0x35]
  40c9cf:	leave  
  40c9d0:	push   esi
  40c9d1:	dec    ebx
  40c9d2:	inc    edx
  40c9d3:	xchg   edx,eax
  40c9d4:	xchg   ebp,eax
  40c9d5:	ds out 0xa5,eax
  40c9d8:	leave  
  40c9d9:	popf   
  40c9da:	push   0x35
  40c9dc:	mov    ah,0xb7
  40c9de:	in     al,0xde
  40c9e0:	out    dx,eax
  40c9e1:	mov    ch,0x31
  40c9e3:	imul   esi,DWORD PTR [ecx],0x71
  40c9e6:	inc    ebx
  40c9e7:	push   ss
  40c9e8:	dec    eax
  40c9e9:	imul   ecx,edx,0x76
  40c9ec:	dec    ecx
  40c9ed:	pop    esi
  40c9ee:	sbb    esi,DWORD PTR [edx-0x1e]
  40c9f1:	mov    ds:0xdd561fa6,al
  40c9f6:	shl    BYTE PTR [edi],0x3a
  40c9f9:	shl    BYTE PTR [ebx],0xb0
  40c9fc:	sub    eax,DWORD PTR [ebx]
  40c9fe:	cmp    al,0x6e
  40ca00:	jg     0x40c9f9
  40ca02:	aad    0xba
  40ca04:	sbb    eax,0xa0812530
  40ca09:	add    eax,DWORD PTR [eax+0x47285241]
  40ca0f:	int3   
  40ca10:	out    0x98,al
  40ca12:	dec    ebx
  40ca13:	out    0xfc,al
  40ca15:	xchg   esp,eax
  40ca16:	push   es
  40ca17:	push   cs
  40ca18:	fs repnz iret 
  40ca1b:	(bad)
  40ca1e:	jae    0x40ca71
  40ca20:	push   edi
  40ca21:	mov    ds:0xf0f91e37,al
  40ca26:	mov    ebx,0x4bae48b7
  40ca2b:	imul   eax,DWORD PTR [ecx-0x1b],0xffffffdd
  40ca2f:	bound  edi,QWORD PTR [edx-0x3d]
  40ca32:	adc    al,0x52
  40ca34:	call   0x1137:0x7fa1a646
  40ca3b:	dec    ecx
  40ca3c:	imul   ecx,DWORD PTR [eax+0xc3b24b0],0x6902ed80
  40ca46:	inc    ebx
  40ca47:	mov    esi,0x77525bf
  40ca4c:	fidivr DWORD PTR ds:0xcac0ac24
  40ca52:	inc    DWORD PTR [ebp*2-0x612dc953]
  40ca59:	pop    ecx
  40ca5a:	scas   al,BYTE PTR es:[edi]
  40ca5b:	outs   dx,DWORD PTR ds:[esi]
  40ca5c:	xchg   edi,eax
  40ca5d:	mov    edi,0x3ea82a1e
  40ca62:	inc    edi
  40ca63:	sbb    BYTE PTR [edx],cl
  40ca65:	push   0x19487b8
  40ca6a:	mov    ds:0x82d95f88,eax
  40ca6f:	cmp    DWORD PTR [edx],eax
  40ca71:	fist   WORD PTR [ebx-0x46]
  40ca74:	xlat   BYTE PTR ds:[ebx]
  40ca75:	hlt    
  40ca76:	jno    0x40ca42
  40ca78:	push   ebp
  40ca79:	inc    eax
  40ca7a:	aad    0xb
  40ca7c:	out    0xe5,al
  40ca7e:	inc    ebp
  40ca7f:	ja     0x40ca92
  40ca81:	pop    ecx
  40ca82:	or     BYTE PTR [ecx+0x4a077105],dl
  40ca88:	das    
  40ca89:	and    eax,0x88092a00
  40ca8e:	adc    edi,ebp
  40ca90:	dec    ebp
  40ca91:	loopne 0x40ca65
  40ca93:	cmp    eax,0x33abef1c
  40ca98:	push   ebp
  40ca99:	pop    es
  40ca9a:	lods   eax,DWORD PTR ds:[esi]
  40ca9b:	sahf   
  40ca9c:	fsub   st(3),st
  40ca9e:	sub    BYTE PTR [esi-0x25],bh
  40caa1:	pop    ds
  40caa2:	push   ebp
  40caa3:	cmp    al,0xe1
  40caa5:	fidivr WORD PTR [ebx+ecx*2+0x53dbbe0a]
  40caac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caad:	xchg   esi,eax
  40caae:	fcomp  DWORD PTR [ebp+0x79]
  40cab1:	lods   eax,DWORD PTR ds:[esi]
  40cab2:	mov    ds,ecx
  40cab4:	jnp    0x40caf8
  40cab6:	or     DWORD PTR [ecx+edx*8],0x38982563
  40cabd:	push   ebp
  40cabe:	pop    edi
  40cabf:	retf   
  40cac0:	lea    ebp,[edx+0x2c]
  40cac3:	(bad)  
  40cac4:	sahf   
  40cac5:	inc    ebp
  40cac6:	shl    BYTE PTR [eax-0x54],cl
  40cac9:	je     0x40cb07
  40cacb:	out    dx,eax
  40cacc:	pusha  
  40cacd:	jl     0x40cb3e
  40cacf:	sbb    edx,DWORD PTR [esi+0x53]
  40cad2:	jnp    0x40cafb
  40cad4:	mov    al,ah
  40cad6:	and    DWORD PTR [edx-0x1ae3e8fd],ecx
  40cadc:	xor    DWORD PTR [edx],esp
  40cade:	lds    edx,FWORD PTR [edi+0x18]
  40cae1:	sub    eax,DWORD PTR [edx]
  40cae3:	xlat   BYTE PTR ds:[ebx]
  40cae4:	imul   edx,DWORD PTR ds:0x798970e5,0x2f
  40caeb:	mov    edi,0xeeff8a6c
  40caf0:	cmp    eax,0x5c4d688e
  40caf5:	(bad)  
  40caf6:	out    0xc4,eax
  40caf8:	mov    ebp,DWORD PTR [edi]
  40cafa:	mov    DWORD PTR [edi+0x22baeb15],edx
  40cb00:	in     eax,dx
  40cb01:	add    DWORD PTR [edi-0xa71e668],edx
  40cb07:	xchg   ecx,eax
  40cb08:	push   ebp
  40cb09:	lods   al,BYTE PTR ds:[esi]
  40cb0a:	sbb    ah,BYTE PTR [ebx-0x2fc6ec6e]
  40cb10:	mov    dh,0xaa
  40cb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb13:	inc    edi
  40cb14:	push   eax
  40cb15:	pushf  
  40cb16:	xor    BYTE PTR [eax],ch
  40cb18:	and    DWORD PTR [eax+0x6dcd7b82],ecx
  40cb1e:	arpl   WORD PTR [edx],ax
  40cb20:	mov    esi,0x55a60ca6
  40cb25:	dec    esi
  40cb26:	pop    ds
  40cb27:	sbb    eax,0x1eefbd23
  40cb2c:	addr16 repz dec edi
  40cb2f:	mov    eax,ds:0xb5c07893
  40cb34:	xor    DWORD PTR [eax+esi*1+0x67],esp
  40cb38:	adc    DWORD PTR [esi-0xcb58c6c],eax
  40cb3e:	pop    ebx
  40cb3f:	bound  ebx,QWORD PTR [esi]
  40cb41:	sub    DWORD PTR ds:0xfbcc6b14,edx
  40cb47:	and    DWORD PTR [edi+0x6040b27a],0x14
  40cb4e:	and    ebp,DWORD PTR [esi]
  40cb50:	fidivr WORD PTR [eax]
  40cb52:	test   al,0xe8
  40cb54:	sbb    al,0x1
  40cb56:	mov    bl,0x1
  40cb58:	jne    0x40cb45
  40cb5a:	adc    eax,0x4b19c526
  40cb5f:	ret    0xed48
  40cb62:	in     al,dx
  40cb63:	pop    ss
  40cb64:	add    al,0x11
  40cb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb67:	rcl    ebx,0x67
  40cb6a:	cwde   
  40cb6b:	ret    0x1658
  40cb6e:	sbb    DWORD PTR [eax+0x22],0x25
  40cb72:	ficom  DWORD PTR [ecx-0xe]
  40cb75:	jae    0x40cb64
  40cb77:	pop    es
  40cb78:	dec    ebp
  40cb79:	dec    ecx
  40cb7a:	mov    dl,0x12
  40cb7c:	or     al,0x80
  40cb7e:	and    DWORD PTR [ecx-0x24],ebx
  40cb81:	sti    
  40cb82:	or     eax,0xd8601d5d
  40cb87:	hlt    
  40cb88:	add    eax,0x5420c7a8
  40cb8d:	pop    edx
  40cb8e:	cmp    ecx,DWORD PTR [eax+0x4f98c8bd]
  40cb94:	gs test eax,0x43106664
  40cb9a:	int3   
  40cb9b:	and    DWORD PTR [esi-0x6a72f578],eax
  40cba1:	shr    BYTE PTR [edx],0x57
  40cba4:	sub    al,0x17
  40cba6:	cmp    ebp,esi
  40cba8:	xor    BYTE PTR [edi],cl
  40cbaa:	push   cs
  40cbab:	mov    ecx,0x8879ee58
  40cbb0:	rol    dl,1
  40cbb2:	loop   0x40cb35
  40cbb4:	sbb    al,0xb4
  40cbb6:	xor    DWORD PTR [edx-0x12864878],eax
  40cbbc:	repnz shl DWORD PTR [ecx-0x2f],1
  40cbc0:	mov    al,0x19
  40cbc2:	sbb    al,0x7b
  40cbc4:	jne    0x40cc41
  40cbc6:	mov    gs,WORD PTR [ebp-0x2281d856]
  40cbcc:	loop   0x40cbb3
  40cbce:	ja     0x40cbe4
  40cbd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbd1:	iret   
  40cbd2:	pusha  
  40cbd3:	sub    edi,edx
  40cbd5:	push   ecx
  40cbd6:	fnsave [bx+di-0x2e1c]
  40cbdb:	mov    bh,0x49
  40cbdd:	dec    ecx
  40cbde:	retf   
  40cbdf:	inc    esp
  40cbe0:	fdiv   DWORD PTR [edx+ebp*8]
  40cbe3:	jnp    0x40cb9a
  40cbe5:	retf   
  40cbe6:	xor    eax,0xaadb931a
  40cbeb:	dec    eax
  40cbec:	ret    
  40cbed:	sub    bh,0x83
  40cbf0:	fidivr DWORD PTR [ebp-0x2ceea387]
  40cbf6:	mov    ecx,0x3aa58e6e
  40cbfb:	inc    edi
  40cbfc:	pushf  
  40cbfd:	leave  
  40cbfe:	ret    0x358c
  40cc01:	mov    eax,0x20c09877
  40cc06:	rcl    edx,0xec
  40cc09:	xchg   BYTE PTR [ecx-0xa],ch
  40cc0c:	(bad)  
  40cc0d:	call   0x61c173c1
  40cc12:	imul   esp,DWORD PTR [ecx+ebp*4+0x8d24b31],0x18
  40cc1a:	lods   eax,DWORD PTR ds:[esi]
  40cc1b:	scas   eax,DWORD PTR es:[edi]
  40cc1c:	mov    al,0x96
  40cc1e:	sub    eax,0xd566ec19
  40cc23:	imul   ebx,edx,0x17
  40cc26:	clc    
  40cc27:	add    DWORD PTR [ecx],esi
  40cc29:	pop    edx
  40cc2a:	call   0xbc2de6b5
  40cc2f:	cmp    BYTE PTR [edx+0x2d4d217a],dh
  40cc35:	sub    eax,0x19811318
  40cc3a:	xor    edx,DWORD PTR [edi]
  40cc3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3d:	mov    dl,0x7c
  40cc3f:	sub    DWORD PTR [esi+0x3c],ecx
  40cc42:	js     0x40cc97
  40cc44:	cmp    cl,bl
  40cc46:	popa   
  40cc47:	add    BYTE PTR [eax+eiz*1+0x76],0xa1
  40cc4c:	mov    ebx,0xb01578bb
  40cc51:	iret   
  40cc52:	sti    
  40cc53:	mov    dl,BYTE PTR [ebp+0x73]
  40cc56:	ja     0x40cbf2
  40cc58:	jmp    0x743a:0x31646c44
  40cc5f:	mov    al,ds:0x968eba54
  40cc64:	cdq    
  40cc65:	sbb    bl,dl
  40cc67:	ret    
  40cc68:	dec    esp
  40cc69:	ins    DWORD PTR es:[edi],dx
  40cc6a:	add    ebx,DWORD PTR [edx]
  40cc6c:	stos   BYTE PTR es:[edi],al
  40cc6d:	lds    esi,FWORD PTR [ebp-0x64ced3b1]
  40cc73:	lods   eax,DWORD PTR ds:[esi]
  40cc74:	mov    cl,0x98
  40cc76:	mov    eax,0x23ee3213
  40cc7b:	ss sub eax,0x9aa62a0c
  40cc81:	push   0xffffffeb
  40cc83:	pop    ebp
  40cc84:	inc    edi
  40cc85:	add    al,0xbc
  40cc87:	push   edi
  40cc88:	jb     0x40ccb6
  40cc8a:	dec    esi
  40cc8b:	add    BYTE PTR ds:0x771d1d9d,dl
  40cc91:	scas   al,BYTE PTR es:[edi]
  40cc92:	or     BYTE PTR [edx-0x7eeb3be5],bl
  40cc98:	int    0xf9
  40cc9a:	cld    
  40cc9b:	jbe    0x40cc95
  40cc9d:	mov    ch,0x82
  40cc9f:	retf   
  40cca0:	cmp    BYTE PTR [edx],dh
  40cca2:	push   0xffffffab
  40cca4:	dec    eax
  40cca5:	dec    ecx
  40cca6:	aas    
  40cca7:	xchg   ecx,eax
  40cca8:	fs sti 
  40ccaa:	fiadd  DWORD PTR [esi+ebx*2+0x13]
  40ccae:	cdq    
  40ccaf:	or     edi,DWORD PTR [edx+0x36]
  40ccb2:	in     al,dx
  40ccb3:	int3   
  40ccb4:	shl    DWORD PTR [eax+0x66acbe1b],cl
  40ccba:	mov    cl,0x5f
  40ccbc:	sub    eax,0x78660866
  40ccc1:	adc    al,0x22
  40ccc3:	jg     0x40cce0
  40ccc5:	lea    ecx,[edx]
  40ccc7:	ror    DWORD PTR [edi-0x6d],1
  40ccca:	fstp   DWORD PTR [edi-0x12]
  40cccd:	(bad)  
  40ccce:	(bad)  
  40cccf:	jb     0x40cd2e
  40ccd1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccd3:	cdq    
  40ccd4:	mov    ebp,0x3cb1d023
  40ccd9:	scas   eax,DWORD PTR es:[edi]
  40ccda:	jo     0x40cca6
  40ccdc:	cld    
  40ccdd:	leave  
  40ccde:	jne    0x40cc60
  40cce0:	xchg   edx,eax
  40cce1:	ret    
  40cce2:	xor    eax,0x9a88438d
  40cce7:	icebp  
  40cce8:	sub    eax,0x758b57ca
  40cced:	and    BYTE PTR [edx-0x3f4beaf],ch
  40ccf3:	cmp    dh,ch
  40ccf5:	add    bl,BYTE PTR [eax-0x13b06e5]
  40ccfb:	gs out 0x77,al
  40ccfe:	call   0xf723:0x92ecb8f0
  40cd05:	and    esp,esp
  40cd07:	inc    ebp
  40cd08:	dec    esi
  40cd09:	add    al,0x82
  40cd0b:	test   al,0x46
  40cd0d:	xchg   ecx,eax
  40cd0e:	inc    edx
  40cd0f:	push   es
  40cd10:	mov    eax,ds:0x2085096
  40cd15:	mov    ebp,0x2f73614d
  40cd1a:	punpcklwd mm5,DWORD PTR [edx+0x57]
  40cd1e:	(bad)  
  40cd1f:	enter  0x9d65,0xa2
  40cd23:	sub    DWORD PTR [ebx],0x1edf1381
  40cd29:	rcr    esp,cl
  40cd2b:	xchg   ecx,eax
  40cd2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd2d:	rcl    BYTE PTR [edi+eax*4-0x34],0x3e
  40cd32:	xchg   ebx,eax
  40cd33:	mov    ds:0x1b1c8e74,al
  40cd38:	lea    edx,ds:0xc85e83d2
  40cd3e:	jns    0x40ccfd
  40cd40:	push   esi
  40cd41:	pop    DWORD PTR [ebx+ebp*1+0x7335a641]
  40cd48:	daa    
  40cd49:	fild   DWORD PTR [edx]
  40cd4b:	or     ebp,esi
  40cd4d:	adc    dh,BYTE PTR [ecx-0x23dcc32b]
  40cd53:	inc    ebx
  40cd54:	xchg   ebp,eax
  40cd55:	or     eax,0xc6e84fcf
  40cd5a:	dec    eax
  40cd5b:	xchg   ch,ah
  40cd5d:	add    eax,0x34d88a80
  40cd62:	rcr    DWORD PTR [ebp-0x6040d2a9],1
  40cd68:	leave  
  40cd69:	sub    ebp,ecx
  40cd6b:	imul   ebp,DWORD PTR [edi],0xaa5198e
  40cd71:	sbb    DWORD PTR [edx+edi*1-0x54e86d7a],eax
  40cd78:	pushf  
  40cd79:	in     eax,dx
  40cd7a:	mov    bh,0x69
  40cd7c:	ret    
  40cd7d:	shl    ch,1
  40cd7f:	sbb    BYTE PTR [esi],cl
  40cd81:	cld    
  40cd82:	cmp    BYTE PTR [ecx],cl
  40cd84:	pop    ds
  40cd85:	sub    DWORD PTR [esi],eax
  40cd87:	and    esp,DWORD PTR [ecx-0x1e]
  40cd8a:	(bad)  
  40cd8b:	loope  0x40cdf5
  40cd8d:	outs   dx,DWORD PTR ds:[esi]
  40cd8e:	(bad)  
  40cd8f:	fsub   st(3),st
  40cd91:	sub    ah,0xf8
  40cd94:	out    dx,eax
  40cd95:	or     al,0xb1
  40cd97:	leave  
  40cd98:	adc    BYTE PTR [ebx-0x70],bh
  40cd9b:	adc    eax,0x5236a7f
  40cda0:	lea    ebx,[esp+edi*2]
  40cda3:	hlt    
  40cda4:	mov    ds:0x42912b7f,al
  40cda9:	jb     0x40ce28
  40cdab:	popf   
  40cdac:	ins    BYTE PTR es:[edi],dx
  40cdad:	lds    edx,FWORD PTR [ebp-0x2cae44c1]
  40cdb3:	pop    edx
  40cdb4:	sub    BYTE PTR [eax],ch
  40cdb6:	pop    es
  40cdb7:	repnz pop es
  40cdb9:	push   es
  40cdba:	mov    bh,0x1f
  40cdbc:	mov    ss,ecx
  40cdbe:	ja     0x40cdf2
  40cdc0:	dec    ebp
  40cdc1:	popf   
  40cdc2:	aaa    
  40cdc3:	rcr    DWORD PTR [edi-0x21468647],1
  40cdc9:	xchg   ebp,eax
  40cdca:	xchg   esp,eax
  40cdcb:	(bad)  
  40cdcc:	or     eax,0xa948b72b
  40cdd1:	jl     0x40cdf5
  40cdd3:	dec    eax
  40cdd4:	lods   eax,DWORD PTR ds:[esi]
  40cdd5:	daa    
  40cdd6:	repz test al,0x4d
  40cdd9:	mov    al,ds:0x3969fde0
  40cdde:	(bad)  
  40cddf:	mov    ch,0xa7
  40cde1:	adc    eax,0xb11cea8f
  40cde6:	jae    0x40cdf7
  40cde8:	outs   dx,BYTE PTR ds:[esi]
  40cde9:	not    BYTE PTR [ecx+eax*2-0x33b2c163]
  40cdf0:	ret    
  40cdf1:	and    al,0xb5
  40cdf3:	popaw  
  40cdf5:	mov    dh,0x1e
  40cdf7:	rcr    DWORD PTR [eax+eiz*1+0x313e5c9d],cl
  40cdfe:	push   0xffffffa3
  40ce00:	xor    cl,BYTE PTR [esi+0xc]
  40ce03:	inc    edx
  40ce04:	int    0x45
  40ce06:	mov    DWORD PTR [edi-0x70],ebx
  40ce09:	ja     0x40ce43
  40ce0b:	sub    cl,BYTE PTR es:[edx+edi*8-0x193b2795]
  40ce13:	dec    ecx
  40ce14:	out    0xee,al
  40ce16:	test   dl,0xeb
  40ce19:	push   ss
  40ce1a:	or     al,0xe1
  40ce1c:	out    0x7d,al
  40ce1e:	xor    eax,0x1265ba2a
  40ce23:	daa    
  40ce24:	dec    ecx
  40ce25:	mov    dh,0xc7
  40ce27:	sbb    al,0x9f
  40ce29:	int    0x0
  40ce2b:	mov    ecx,0x56bbc869
  40ce30:	push   eax
  40ce31:	lahf   
  40ce32:	adc    DWORD PTR [ecx],0x3dfa9c0c
  40ce38:	mov    DWORD PTR [edi-0x443a9140],eax
  40ce3e:	ret    0x8b2b
  40ce41:	mov    cs,WORD PTR [ecx+ebp*1-0x5b]
  40ce45:	rcr    BYTE PTR [edi-0x16],0x8a
  40ce49:	in     eax,0x2c
  40ce4b:	xchg   ebp,eax
  40ce4c:	sti    
  40ce4d:	inc    edi
  40ce4e:	data16 std 
  40ce50:	mov    ah,0x64
  40ce52:	mov    esp,DWORD PTR [eax-0x53]
  40ce55:	inc    esi
  40ce56:	in     al,dx
  40ce57:	aad    0x10
  40ce59:	add    eax,ecx
  40ce5b:	push   edx
  40ce5c:	pop    eax
  40ce5d:	and    DWORD PTR [ecx-0x1df6cfd7],0xa5aa56d0
  40ce67:	mov    edx,0x7933e61b
  40ce6c:	pop    esi
  40ce6d:	idiv   BYTE PTR [edx]
  40ce6f:	mov    ss,WORD PTR [edi+0x77cbde1]
  40ce75:	and    eax,0x4c348374
  40ce7a:	test   BYTE PTR [ebp-0x4b],ah
  40ce7d:	mul    BYTE PTR [ebx+0x4]
  40ce80:	cmp    bl,bl
  40ce82:	in     eax,dx
  40ce83:	push   ss
  40ce84:	pop    ebx
  40ce85:	gs int 0x15
  40ce88:	push   ebx
  40ce89:	jl     0x40ce71
  40ce8b:	ficom  WORD PTR ds:[edi+0x385dd764]
  40ce92:	mov    bl,BYTE PTR [ecx]
  40ce94:	imul   edi,DWORD PTR [ecx-0x4bd5d15],0xffffffba
  40ce9b:	dec    edi
  40ce9c:	fcmovbe st,st(5)
  40ce9e:	rcr    ecx,1
  40cea0:	in     al,0xff
  40cea2:	scas   eax,DWORD PTR es:[edi]
  40cea3:	mov    BYTE PTR [esi-0x409a0d3f],ch
  40cea9:	shl    sp,0x42
  40cead:	adc    bl,bh
  40ceaf:	push   ecx
  40ceb0:	and    dl,BYTE PTR [ebx]
  40ceb2:	dec    edx
  40ceb3:	fnstenv [esi]
  40ceb5:	sbb    DWORD PTR [ecx-0x203e46c1],0x31f1f50c
  40cebf:	push   ds
  40cec0:	ret    
  40cec1:	(bad)  
  40cec2:	inc    al
  40cec4:	xor    eax,0x828a3570
  40cec9:	xor    al,0x8f
  40cecb:	int    0x15
  40cecd:	add    BYTE PTR [edi-0x3d],bh
  40ced0:	ins    DWORD PTR es:[edi],dx
  40ced1:	cwde   
  40ced2:	add    eax,ebp
  40ced4:	fadd   DWORD PTR [edx+ebx*2-0x56]
  40ced8:	scas   eax,DWORD PTR es:[edi]
  40ced9:	add    DWORD PTR [esi+0x6d],ecx
  40cedc:	out    dx,eax
  40cedd:	pop    esp
  40cede:	enter  0x7ddb,0xa0
  40cee2:	fist   DWORD PTR [ebx+0x2ba78c80]
  40cee8:	mov    ds:0x295147a7,al
  40ceed:	jge    0x40ceba
  40ceef:	mov    cl,0x3e
  40cef1:	mul    DWORD PTR [ebp-0x79d35161]
  40cef7:	pop    esi
  40cef8:	test   al,bh
  40cefa:	mov    ss,WORD PTR ds:0x714e05fb
  40cf00:	jnp    0x40cec3
  40cf02:	push   esi
  40cf03:	sahf   
  40cf04:	imul   ebx,DWORD PTR [ecx-0x2b],0x544a8544
  40cf0b:	sbb    ebx,0xffffff92
  40cf0e:	sub    bh,BYTE PTR [esi]
  40cf10:	sar    DWORD PTR [edx-0x6b],0x3
  40cf14:	call   0x91eb020
  40cf19:	cmp    al,0x82
  40cf1b:	lea    eax,[ebp+0x5f693c91]
  40cf21:	outs   dx,DWORD PTR ds:[esi]
  40cf22:	mov    al,0xb
  40cf24:	mov    ds:0xa4887c69,al
  40cf29:	sbb    BYTE PTR [ecx-0x4815d657],0x48
  40cf30:	lods   eax,DWORD PTR ds:[esi]
  40cf31:	dec    esi
  40cf32:	pop    ebx
  40cf33:	dec    eax
  40cf34:	ins    DWORD PTR es:[edi],dx
  40cf35:	jmp    0xde1b3183
  40cf3a:	pop    ebx
  40cf3b:	in     al,dx
  40cf3c:	jg     0x40cf6f
  40cf3e:	sbb    al,0x35
  40cf40:	retf   
  40cf41:	imul   DWORD PTR [esi+ebx*8]
  40cf44:	pop    edx
  40cf45:	sbb    BYTE PTR [ecx+0x1d],ch
  40cf48:	cmp    ebp,DWORD PTR [edx]
  40cf4a:	pshufw mm1,QWORD PTR [edi],0xd8
  40cf4e:	dec    esp
  40cf4f:	push   edx
  40cf50:	inc    eax
  40cf51:	mov    ebx,0x4631c72
  40cf56:	push   eax
  40cf57:	fs stos BYTE PTR es:[edi],al
  40cf59:	fst    QWORD PTR [eax+0x266275b]
  40cf5f:	mov    ebx,DWORD PTR [esi]
  40cf61:	inc    esp
  40cf62:	mov    bh,0x8f
  40cf64:	fistp  DWORD PTR ds:0x944bd01a
  40cf6a:	adc    dh,BYTE PTR ds:0xd4c6c2f1
  40cf70:	sbb    eax,0x84d3406c
  40cf75:	rcr    BYTE PTR [ecx+0x681589c2],cl
  40cf7b:	lods   al,BYTE PTR ds:[esi]
  40cf7c:	dec    eax
  40cf7d:	popa   
  40cf7e:	leave  
  40cf7f:	or     ebp,DWORD PTR [esi]
  40cf81:	sub    DWORD PTR ds:0x70f3ae06,ebp
  40cf87:	aam    0xe1
  40cf89:	(bad)  
  40cf8a:	js     0x40cfb1
  40cf8c:	nop
  40cf8d:	(bad)  
  40cf8e:	xchg   ebp,eax
  40cf8f:	mov    ebp,0x735c9c8c
  40cf94:	xlat   BYTE PTR ds:[ebx]
  40cf95:	mov    ebp,0xee09b5bb
  40cf9a:	rcr    BYTE PTR [edi-0x3c],0x42
  40cf9e:	add    ebx,esi
  40cfa0:	sbb    DWORD PTR [ecx+0x1a],0x37f7d7df
  40cfa7:	sub    DWORD PTR [eax-0xa],0xfffffff6
  40cfab:	xor    DWORD PTR [eax],0x27760966
  40cfb1:	add    BYTE PTR [edi],dh
  40cfb3:	xchg   edx,eax
  40cfb4:	xor    DWORD PTR [edi+0x4c11ed23],0x3fe9c874
  40cfbe:	lahf   
  40cfbf:	pop    esi
  40cfc0:	inc    ebp
  40cfc1:	xor    esi,eax
  40cfc3:	sub    dl,BYTE PTR [esi+eax*4+0xf]
  40cfc7:	pop    ebp
  40cfc8:	(bad)  
  40cfc9:	jnp    0x40cfbf
  40cfcb:	mov    ds:0x8ae1f19d,ax
  40cfd1:	fiadd  DWORD PTR [eax+0x7cd6c461]
  40cfd7:	ds jbe 0x40d011
  40cfda:	cmp    DWORD PTR [esp+ecx*8],esi
  40cfdd:	jg     0x40cfeb
  40cfdf:	sbb    DWORD PTR [eax],esp
  40cfe1:	inc    esi
  40cfe2:	mov    ch,BYTE PTR [eax-0x29ac8467]
  40cfe8:	adc    esi,esi
  40cfea:	push   edx
  40cfeb:	jmp    0x40d029
  40cfed:	push   es
  40cfee:	jle    0x40cfaa
  40cff0:	xchg   edx,eax
  40cff1:	add    DWORD PTR [ecx+0x4],esi
  40cff4:	mov    eax,0x7ad1e952
  40cff9:	stos   DWORD PTR es:[edi],eax
  40cffa:	push   edi
  40cffb:	outs   dx,BYTE PTR ds:[esi]
  40cffc:	and    eax,0xfea65b0
  40d001:	mov    es,WORD PTR [ebx-0x22]
  40d004:	inc    ecx
  40d005:	adc    BYTE PTR [eax+0x5a6175c1],ah
  40d00b:	inc    edi
  40d00c:	xchg   esp,eax
  40d00d:	test   al,0x8a
  40d00f:	pop    ds
  40d010:	adc    al,dh
  40d012:	push   ds
  40d013:	lea    eax,[esi+esi*1]
  40d016:	(bad)  
  40d017:	and    eax,0xe350a975
  40d01c:	pop    ecx
  40d01d:	int    0xa5
  40d01f:	xchg   edi,eax
  40d020:	push   ebp
  40d021:	call   0x56cb:0xbdf2b1b1
  40d028:	mov    ebp,0x3fb68e9f
  40d02d:	or     bh,ch
  40d02f:	fisub  DWORD PTR [ecx-0x4923374d]
  40d035:	mov    ss,cx
  40d038:	add    eax,0xca494dbf
  40d03d:	add    DWORD PTR [esi],edi
  40d03f:	lahf   
  40d040:	or     eax,0x7c564565
  40d045:	mov    ecx,0xbadf1eaa
  40d04a:	outs   dx,BYTE PTR ds:[esi]
  40d04b:	ror    BYTE PTR cs:[ecx-0x2cf45140],0xd6
  40d053:	dec    edi
  40d054:	xor    bl,ah
  40d056:	(bad)  
  40d057:	outs   dx,DWORD PTR ds:[esi]
  40d058:	xchg   ecx,eax
  40d059:	pop    ebp
  40d05a:	add    DWORD PTR [ebp+0x5e],edi
  40d05d:	rcr    BYTE PTR [edx],cl
  40d05f:	in     al,0x43
  40d061:	mov    eax,ds:0x4560156a
  40d066:	loopne 0x40d0da
  40d068:	dec    edi
  40d069:	dec    esp
  40d06a:	cmp    cl,al
  40d06c:	push   bx
  40d06e:	fcmovu st,st(2)
  40d070:	imul   edx,DWORD PTR [ebx-0x2a],0xffffff98
  40d074:	and    eax,0x5c582ec0
  40d079:	call   0x6e08:0x6082a17d
  40d080:	jo     0x40d04f
  40d082:	(bad)  
  40d083:	icebp  
  40d084:	adc    BYTE PTR [edi-0x6],bl
  40d087:	in     eax,0x94
  40d089:	shl    DWORD PTR [edi+0x57],1
  40d08c:	jno    0x40d0ad
  40d08e:	or     dl,BYTE PTR [ebx]
  40d090:	dec    ebp
  40d091:	ins    BYTE PTR es:[edi],dx
  40d092:	mov    fs:0x490f9070,al
  40d098:	or     ch,BYTE PTR [esi-0x42]
  40d09b:	add    eax,0xf8a5e829
  40d0a0:	gs leave 
  40d0a2:	xor    al,0x76
  40d0a4:	and    dh,0x9b
  40d0a7:	push   ebx
  40d0a8:	popf   
  40d0a9:	fucom  st(5)
  40d0ab:	mov    eax,0x96f49e45
  40d0b0:	aad    0x58
  40d0b2:	stos   DWORD PTR es:[edi],eax
  40d0b3:	stc    
  40d0b4:	jne    0x40d11c
  40d0b6:	in     al,dx
  40d0b7:	xchg   DWORD PTR [eax-0x68],ebx
  40d0ba:	add    eax,0xe20a09f1
  40d0bf:	call   0xbd3a:0x8b486b6
  40d0c6:	mov    edx,0xb15af2ad
  40d0cb:	jnp    0x40d07b
  40d0cd:	xchg   ebx,eax
  40d0ce:	mov    ch,BYTE PTR [eax-0x2fa3d75b]
  40d0d4:	sbb    eax,0x7f0c4df
  40d0d9:	pop    ecx
  40d0da:	rol    DWORD PTR [edi],1
  40d0dc:	ret    0x5b6a
  40d0df:	test   al,0x6f
  40d0e1:	fcom   QWORD PTR ds:0xd5c597c9
  40d0e7:	adc    BYTE PTR [ebx+0xf4e33b0],0x27
  40d0ee:	push   eax
  40d0ef:	cli    
  40d0f0:	and    DWORD PTR [esp+ecx*4+0x3b],0xc8f1abb3
  40d0f8:	addr16 (bad) 
  40d0fa:	sub    DWORD PTR [edi-0x62],esi
  40d0fd:	dec    ebx
  40d0fe:	xchg   edx,eax
  40d0ff:	js     0x40d087
  40d101:	loopne 0x40d148
  40d103:	out    0x28,eax
  40d105:	repz push es
  40d107:	sbb    DWORD PTR [eax+ebx*4-0x20],ebx
  40d10b:	dec    edi
  40d10c:	push   es
  40d10d:	mov    edi,0x388dd60
  40d112:	cmp    dh,dl
  40d114:	in     al,dx
  40d115:	inc    ebx
  40d116:	in     eax,dx
  40d117:	and    dl,BYTE PTR [edi+ebx*1+0x11]
  40d11b:	mov    es,WORD PTR [eax-0xe]
  40d11e:	retf   
  40d11f:	and    edx,DWORD PTR [esi+0x25]
  40d122:	xchg   ecx,eax
  40d123:	test   dl,al
  40d125:	xor    eax,0x1dcc72d1
  40d12a:	rcr    DWORD PTR [esi-0x7f8b88e2],1
  40d130:	mov    edi,0x8ceec2f
  40d135:	mov    ds:0x939ab978,eax
  40d13a:	sbb    eax,0xeac0521c
  40d13f:	mov    edi,0x25fb80c
  40d144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d145:	push   ecx
  40d146:	dec    edx
  40d147:	push   ds
  40d148:	into   
  40d149:	push   0xbaefbf6a
  40d14e:	repz sbb bh,BYTE PTR [ebp+0x6b]
  40d152:	mov    esi,0xc5c95686
  40d157:	ds in  eax,0x95
  40d15a:	imul   esi,DWORD PTR [ebx],0x72
  40d15d:	add    cl,BYTE PTR [edx-0x8]
  40d160:	mov    edi,0xeaa2abae
  40d165:	mov    bh,0x46
  40d167:	jne    0x40d1cd
  40d169:	add    ebx,esp
  40d16b:	push   esi
  40d16c:	and    al,0x2a
  40d16e:	je     0x40d1cb
  40d170:	jo     0x40d1f1
  40d172:	enter  0x897e,0xd4
  40d176:	out    0x70,al
  40d178:	jle    0x40d123
  40d17a:	shr    eax,cl
  40d17c:	dec    ebp
  40d17d:	mov    edx,0x2a94d47b
  40d182:	popa   
  40d183:	iret   
  40d184:	and    dl,bl
  40d186:	push   esp
  40d187:	xchg   ebx,eax
  40d188:	add    BYTE PTR [edx-0x3548285a],ah
  40d18e:	push   cs
  40d18f:	sbb    cl,BYTE PTR [edi+0x68]
  40d192:	xlat   BYTE PTR ds:[ebx]
  40d193:	pop    esi
  40d194:	ss daa 
  40d196:	call   0x356cb7ed
  40d19b:	dec    ebx
  40d19c:	cmp    al,0x92
  40d19e:	sub    al,0x17
  40d1a0:	popf   
  40d1a1:	ret    
  40d1a2:	cdq    
  40d1a3:	pop    es
  40d1a4:	cmp    al,BYTE PTR [ebx-0x3]
  40d1a7:	in     eax,dx
  40d1a8:	mov    esp,0xb109e90f
  40d1ad:	mov    dh,0x5
  40d1af:	jmp    0x40d13d
  40d1b1:	push   esi
  40d1b2:	mov    dl,0xf0
  40d1b4:	mov    al,0xe4
  40d1b6:	ins    BYTE PTR es:[edi],dx
  40d1b7:	in     al,dx
  40d1b8:	fld    DWORD PTR [ebx]
  40d1ba:	cmp    eax,0xd9df19bd
  40d1bf:	or     BYTE PTR [edi-0x15ccc766],dl
  40d1c5:	bound  ebx,QWORD PTR [ecx-0x5b]
  40d1c8:	xchg   edi,eax
  40d1c9:	jecxz  0x40d167
  40d1cb:	xchg   esp,eax
  40d1cc:	jmp    0x63ef:0x74e738ef
  40d1d3:	sub    DWORD PTR [edi+0xdb4371e],ebp
  40d1d9:	sar    eax,cl
  40d1db:	(bad)  [eax]
  40d1dd:	push   eax
  40d1de:	pop    ss
  40d1df:	fninit 
  40d1e1:	sar    DWORD PTR [edx-0x365ee52b],0xb
  40d1e8:	add    eax,0x7bf24f7f
  40d1ed:	scas   al,BYTE PTR es:[edi]
  40d1ee:	pop    edi
  40d1ef:	push   cs
  40d1f0:	call   FWORD PTR [eax-0x7a655dca]
  40d1f6:	es mov esi,0x65e6faf3
  40d1fc:	ret    0x2832
  40d1ff:	repnz mov edi,0x2c0fece2
  40d205:	fst    QWORD PTR [eax]
  40d207:	add    ebx,DWORD PTR [edi]
  40d209:	mov    eax,ds:0x6d7f8bce
  40d20e:	in     al,dx
  40d20f:	xor    cl,BYTE PTR fs:[ecx]
  40d212:	jp     0x40d1e6
  40d214:	or     eax,0x699bb458
  40d219:	ins    DWORD PTR es:[edi],dx
  40d21a:	mov    dl,0x79
  40d21c:	inc    esp
  40d21d:	repnz pop es
  40d21f:	imul   eax,DWORD PTR [ecx+0x6b3d204f],0xa3442376
  40d229:	jmp    0x40d26a
  40d22b:	jae    0x40d1d8
  40d22d:	call   FWORD PTR [ecx]
  40d22f:	jne    0x40d281
  40d231:	test   ch,0xf3
  40d234:	cmp    al,0x9a
  40d236:	cmc    
  40d237:	sub    eax,0xe2a071
  40d23c:	jae    0x40d1e3
  40d23e:	adc    eax,0x38cf1975
  40d243:	cmp    DWORD PTR [ecx+0x11],esi
  40d246:	dec    esp
  40d247:	jp     0x40d26e
  40d249:	adc    esi,DWORD PTR es:[eax+ebx*8]
  40d24d:	xchg   dl,cl
  40d24f:	mov    eax,ds:0xe948973f
  40d254:	stc    
  40d255:	lea    ebp,[esi+0x55aff67]
  40d25b:	push   eax
  40d25c:	and    DWORD PTR [edx+0x7f],ebp
  40d25f:	into   
  40d260:	dec    edx
  40d261:	ret    
  40d262:	add    al,BYTE PTR ds:0xdc301ed0
  40d268:	push   edi
  40d269:	mov    esp,0xa40816a
  40d26e:	out    0x2,al
  40d270:	mov    edi,0xfa891343
  40d275:	(bad)  
  40d276:	outs   dx,DWORD PTR ds:[esi]
  40d277:	cmp    bl,BYTE PTR [edx-0x3c]
  40d27a:	cmp    eax,0x925f30e8
  40d27f:	lods   eax,DWORD PTR ds:[esi]
  40d280:	mov    al,0xd2
  40d282:	xor    al,0x15
  40d284:	jnp    0x40d21d
  40d286:	mov    ?,WORD PTR [ebx+0x56691450]
  40d28c:	scas   al,BYTE PTR es:[edi]
  40d28d:	mov    ah,0x8a
  40d28f:	les    esi,FWORD PTR ds:0x2046c7b9
  40d295:	scas   al,BYTE PTR es:[edi]
  40d296:	fidiv  WORD PTR [edi-0x418ce8d3]
  40d29c:	mov    edx,0x13b6ef5a
  40d2a1:	xchg   ecx,eax
  40d2a2:	ror    bl,1
  40d2a4:	cli    
  40d2a5:	push   ecx
  40d2a6:	sub    eax,0x22337e0c
  40d2ab:	pop    ds
  40d2ac:	sub    ecx,DWORD PTR [edx+0x5a0b01f3]
  40d2b2:	icebp  
  40d2b3:	outs   dx,BYTE PTR ds:[esi]
  40d2b4:	or     eax,0xcee09b1c
  40d2b9:	fs scas al,BYTE PTR es:[edi]
  40d2bb:	fistp  QWORD PTR [ebp-0x53]
  40d2be:	adc    dl,BYTE PTR [edi]
  40d2c0:	xor    edx,DWORD PTR [esi]
  40d2c2:	and    eax,DWORD PTR [eax+eiz*1+0x69316cb8]
  40d2c9:	icebp  
  40d2ca:	cmp    DWORD PTR [ecx+0x1294428a],ebx
  40d2d0:	pop    esi
  40d2d1:	cmp    edi,ebx
  40d2d3:	sub    BYTE PTR [ecx+ebx*4+0x2f],0xd6
  40d2d8:	retf   
  40d2d9:	jns    0x40d2dd
  40d2db:	test   DWORD PTR [ecx],edi
  40d2dd:	ins    BYTE PTR es:[edi],dx
  40d2de:	test   BYTE PTR fs:[edx+0x55c35401],0x22
  40d2e6:	mov    cl,0xb8
  40d2e8:	mov    esi,0xcb06a03
  40d2ed:	jle    0x40d2c2
  40d2ef:	push   ss
  40d2f0:	jge    0x40d315
  40d2f2:	int    0x3b
  40d2f4:	dec    eax
  40d2f5:	sbb    al,0x5f
  40d2f7:	inc    ebx
  40d2f8:	push   ebx
  40d2f9:	sahf   
  40d2fa:	neg    DWORD PTR ds:0xeae57faf
  40d300:	sti    
  40d301:	mov    dh,0x1c
  40d303:	loopne 0x40d30e
  40d305:	shr    DWORD PTR [ecx],0x96
  40d308:	enter  0x5ea8,0x9b
  40d30c:	cmp    eax,0xcb8b7990
  40d311:	test   eax,0x5bfb0e94
  40d316:	adc    al,0x55
  40d318:	fcomp  st(4)
  40d31a:	cmp    eax,0xb8de24b1
  40d31f:	pop    eax
  40d320:	mov    eax,0x9b57149a
  40d325:	mov    fs,WORD PTR ss:[ebp+0x324f1db1]
  40d32c:	cmp    eax,DWORD PTR [esi]
  40d32e:	jge    0x40d2fd
  40d330:	and    BYTE PTR ds:0x37a0b0d7,bh
  40d336:	xchg   ebp,eax
  40d337:	xor    DWORD PTR [edi+0x6a81594b],0x4b0c7895
  40d341:	xor    DWORD PTR [ecx-0x8],0x992cd8f0
  40d348:	pop    ds
  40d349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d34a:	add    edi,0x12
  40d34d:	xor    BYTE PTR [eax+0x5493d5dc],bl
  40d353:	mov    esi,0xb9890565
  40d358:	and    DWORD PTR [ebx+0x47],ebx
  40d35b:	arpl   cx,bx
  40d35d:	push   cs
  40d35e:	dec    esp
  40d35f:	rol    BYTE PTR [ebx],0x40
  40d362:	fs cmc 
  40d364:	arpl   WORD PTR [eax+0x79],dx
  40d367:	and    ecx,DWORD PTR [si-0x77]
  40d36b:	sub    bh,BYTE PTR [esi]
  40d36d:	test   al,0xb2
  40d36f:	jl     0x40d3c3
  40d371:	cdq    
  40d372:	shl    BYTE PTR [esi+0x47],0xa1
  40d376:	aam    0x65
  40d378:	xor    eax,0xa073798b
  40d37d:	xor    DWORD PTR [edi],eax
  40d37f:	sub    edi,edi
  40d381:	jmp    0x40d3b7
  40d383:	dec    edi
  40d384:	jbe    0x40d333
  40d386:	into   
  40d387:	pop    edi
  40d388:	in     eax,0xe9
  40d38a:	mov    ch,0xf5
  40d38c:	addr16 pop ds
  40d38e:	loop   0x40d3ad
  40d390:	fcmovbe st,st(4)
  40d392:	jns    0x40d3c1
  40d394:	and    DWORD PTR [edi+0x62dce064],esp
  40d39a:	mov    bl,0x3b
  40d39c:	(bad)
  40d39f:	and    ebx,DWORD PTR [edx]
  40d3a1:	push   0x6b
  40d3a3:	xchg   esp,esi
  40d3a5:	bound  esp,QWORD PTR [ecx+0x19b44e85]
  40d3ab:	aas    
  40d3ac:	push   ecx
  40d3ad:	lods   eax,DWORD PTR ds:[esi]
  40d3ae:	fsub   QWORD PTR [edx+0x6a71ce3]
  40d3b4:	rcl    DWORD PTR [edi+0x71],cl
  40d3b7:	mov    DWORD PTR [edx+0x20],ebp
  40d3ba:	pop    ecx
  40d3bb:	pop    edx
  40d3bc:	cs push eax
  40d3bf:	or     eax,0x2038cff6
  40d3c4:	ja     0x40d415
  40d3c6:	ficom  DWORD PTR [edi-0x7bb5e800]
  40d3cc:	mov    gs,WORD PTR ds:0x3a03f6a6
  40d3d2:	mov    WORD PTR [eax],?
  40d3d4:	mov    ch,0x2c
  40d3d6:	and    DWORD PTR gs:[ebx+0x7ca6c92],eax
  40d3dd:	in     al,0xe0
  40d3df:	dec    esp
  40d3e0:	push   ebx
  40d3e1:	stc    
  40d3e2:	mov    eax,0xd647bd1f
  40d3e7:	aam    0xdc
  40d3e9:	je     0x40d376
  40d3eb:	pop    ds
  40d3ec:	loop   0x40d3f1
  40d3ee:	adc    al,0xf6
  40d3f0:	scas   al,BYTE PTR es:[edi]
  40d3f1:	fcmovb st,st(2)
  40d3f3:	imul   sp,cx,0x86cc
  40d3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f9:	les    esi,FWORD PTR [esi+0x30]
  40d3fc:	jmp    0x40d45e
  40d3fe:	dec    esi
  40d3ff:	push   esi
  40d400:	popf   
  40d401:	loopne 0x40d3ea
  40d403:	inc    edx
  40d404:	mov    edx,0x751df5fe
  40d409:	data16 addr16 mov al,0x22
  40d40d:	out    0x44,eax
  40d40f:	in     al,dx
  40d410:	lahf   
  40d411:	ret    
  40d412:	sub    BYTE PTR [esi+ebx*1-0x2a49e3d],cl
  40d419:	and    edi,esi
  40d41b:	mov    ebp,0x9364d4bc
  40d420:	adc    DWORD PTR [eax],ebx
  40d422:	lods   al,BYTE PTR ds:[esi]
  40d423:	cli    
  40d424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d425:	int    0xf3
  40d427:	xchg   BYTE PTR [eax+edi*2],ch
  40d42a:	sub    eax,0xd112490
  40d42f:	mov    DWORD PTR [edx+0x199de271],ebp
  40d435:	sbb    BYTE PTR [edx-0x48],ah
  40d438:	cwde   
  40d439:	or     BYTE PTR [edi],cl
  40d43b:	lock inc ecx
  40d43d:	add    esp,edi
  40d43f:	ror    DWORD PTR [ebx],1
  40d441:	adc    al,0xc6
  40d443:	jo     0x40d41e
  40d445:	test   BYTE PTR [edi+eax*2-0x1c],dl
  40d449:	push   edx
  40d44a:	lods   al,BYTE PTR ds:[esi]
  40d44b:	jecxz  0x40d451
  40d44d:	mov    al,0xcf
  40d44f:	and    DWORD PTR [ebp+0x34],esi
  40d452:	imul   ebx,DWORD PTR [ecx],0x333a9b39
  40d458:	adc    al,0x1f
  40d45a:	mov    ss,eax
  40d45c:	mov    BYTE PTR [ebp+ecx*2-0x3cb701c0],al
  40d463:	pop    ecx
  40d464:	xchg   ecx,eax
  40d465:	adc    eax,0x32997856
  40d46a:	adc    ebp,edx
  40d46c:	scas   al,BYTE PTR es:[edi]
  40d46d:	out    0x77,eax
  40d46f:	or     esp,ebx
  40d471:	cmp    DWORD PTR [esi-0xaf3d67],eax
  40d477:	cmp    DWORD PTR [eax],0xffffffac
  40d47a:	adc    BYTE PTR [ecx],bh
  40d47c:	sub    ah,BYTE PTR [ebp+eiz*8-0x78]
  40d480:	or     eax,DWORD PTR [ecx+ebp*1]
  40d483:	std    
  40d484:	jmp    0x40d45d
  40d486:	aam    0x36
  40d488:	sar    ebx,0x98
  40d48b:	or     BYTE PTR [esi],dl
  40d48d:	add    BYTE PTR [eax-0x4e890189],cl
  40d493:	pop    ebp
  40d494:	push   0xffffffc3
  40d496:	push   ebp
  40d497:	(bad)  
  40d498:	and    al,0x63
  40d49a:	dec    esi
  40d49b:	arpl   WORD PTR [ecx-0x149fa90b],bp
  40d4a1:	mov    bl,0x69
  40d4a3:	or     DWORD PTR [ebp+0x3f],edx
  40d4a6:	enter  0x678d,0x77
  40d4aa:	adc    DWORD PTR [edi],esi
  40d4ac:	jno    0x40d4db
  40d4ae:	call   0x27e:0x2596977b
  40d4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b6:	jmp    DWORD PTR [ecx+0x2d]
  40d4b9:	stos   DWORD PTR es:[edi],eax
  40d4ba:	sub    DWORD PTR [edi-0x71],edi
  40d4bd:	mov    ebx,0x21cfa2f6
  40d4c2:	sub    eax,0x61b3399a
  40d4c7:	es pop edi
  40d4c9:	or     DWORD PTR [esi],ebp
  40d4cb:	jno    0x40d51d
  40d4cd:	mov    WORD PTR [ecx+0x5ee8edf2],?
  40d4d3:	lds    edi,FWORD PTR [edx-0x4c]
  40d4d6:	xchg   ecx,eax
  40d4d7:	push   ebx
  40d4d8:	out    0x33,al
  40d4da:	adc    al,0xe7
  40d4dc:	jge    0x40d4f1
  40d4de:	sub    eax,0x6cc5f4f
  40d4e3:	and    ecx,ebx
  40d4e5:	mov    ecx,0x3418b2a4
  40d4ea:	mov    bh,BYTE PTR [edx+0x4]
  40d4ed:	bound  esp,QWORD PTR [ebx+eax*4-0x6e]
  40d4f1:	je     0x40d4f5
  40d4f3:	dec    esi
  40d4f4:	xchg   ecx,eax
  40d4f5:	jae    0x40d4b9
  40d4f7:	fs scas eax,DWORD PTR es:[edi]
  40d4f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fa:	shl    ebp,1
  40d4fc:	xchg   ebp,eax
  40d4fd:	or     BYTE PTR [ecx+edi*8],0xc4
  40d501:	sbb    edx,esp
  40d503:	out    0xf7,eax
  40d505:	push   esi
  40d506:	pop    edi
  40d507:	loopne 0x40d4f8
  40d509:	and    al,0x8b
  40d50b:	mov    dh,0x7b
  40d50d:	popa   
  40d50e:	jle    0x40d539
  40d510:	ins    DWORD PTR es:[edi],dx
  40d511:	ret    0x4641
  40d514:	mov    ebx,DWORD PTR ds:[ebx+ebx*2]
  40d518:	outs   dx,DWORD PTR ds:[esi]
  40d519:	stos   DWORD PTR es:[edi],eax
  40d51a:	scas   al,BYTE PTR es:[edi]
  40d51b:	add    DWORD PTR [edx-0x38],edx
  40d51e:	ins    DWORD PTR es:[edi],dx
  40d51f:	sub    edx,DWORD PTR [eax+0x6a78364f]
  40d525:	leave  
  40d526:	sub    BYTE PTR [edx],al
  40d528:	xchg   edi,eax
  40d529:	xchg   esi,eax
  40d52a:	mov    cl,al
  40d52c:	lds    edi,FWORD PTR [edx+edx*4]
  40d52f:	mov    ah,0x15
  40d531:	(bad)  [eax]
  40d533:	aaa    
  40d534:	xchg   esp,eax
  40d535:	adc    eax,0xbd71b869
  40d53a:	or     esp,0x46f099dd
  40d540:	inc    edi
  40d541:	xchg   BYTE PTR [ecx-0x3c],ch
  40d544:	sub    esi,DWORD PTR [ebx]
  40d546:	aam    0xf8
  40d548:	and    ebp,esp
  40d54a:	dec    ebx
  40d54b:	push   esp
  40d54c:	xchg   esp,eax
  40d54d:	sbb    BYTE PTR [edi+0x46],ch
  40d550:	mov    ecx,0x220471e6
  40d555:	ret    
  40d556:	loop   0x40d565
  40d558:	adc    BYTE PTR [eax+0x647af1e1],bh
  40d55e:	shr    DWORD PTR ds:0x5c5b6d6,0x5c
  40d565:	clc    
  40d566:	and    al,0xb0
  40d568:	mov    ds:0xb28f37fb,al
  40d56d:	hlt    
  40d56e:	pop    ebp
  40d56f:	pop    esp
  40d570:	add    ah,bl
  40d572:	mov    esi,0xb2bc7f8
  40d578:	lock adc BYTE PTR [esi],cl
  40d57b:	pop    esp
  40d57c:	and    bh,ch
  40d57e:	ja     0x40d5bb
  40d580:	sub    DWORD PTR [eax+0x3a],esp
  40d583:	cs push ss
  40d585:	rol    BYTE PTR [ebp-0x55],cl
  40d588:	ret    0x3b74
  40d58b:	sub    ebp,esi
  40d58d:	popf   
  40d58e:	bound  ebp,QWORD PTR [esi+0xb]
  40d591:	push   ebx
  40d592:	in     eax,0x0
  40d594:	and    al,0x6e
  40d596:	mov    esp,esp
  40d598:	lods   eax,DWORD PTR ds:[esi]
  40d599:	pop    ebx
  40d59a:	mov    BYTE PTR [esi+0x608a2c33],bl
  40d5a0:	es jns 0x40d5d9
  40d5a3:	or     al,0xce
  40d5a5:	inc    ecx
  40d5a6:	and    dl,dh
  40d5a8:	mov    bl,0x55
  40d5aa:	popa   
  40d5ab:	jbe    0x40d565
  40d5ad:	jae    0x40d5e4
  40d5af:	fidiv  WORD PTR [edi+esi*2-0x4d133518]
  40d5b6:	xchg   ebp,eax
  40d5b7:	mov    ds,WORD PTR [edx+0x6]
  40d5ba:	sbb    dl,BYTE PTR [esi]
  40d5bc:	int    0x51
  40d5be:	and    DWORD PTR [ebx],0xffffffd4
  40d5c1:	push   ebp
  40d5c2:	jo     0x40d5de
  40d5c4:	mov    edi,0x345de81d
  40d5c9:	or     BYTE PTR [ecx+ecx*1-0x780c16a1],al
  40d5d0:	xchg   ebp,eax
  40d5d1:	dec    ebx
  40d5d2:	aas    
  40d5d3:	inc    ebx
  40d5d4:	mov    esi,0xf6e933b4
  40d5d9:	xor    edi,DWORD PTR [ebx+edx*2+0x3ad6639c]
  40d5e0:	push   esi
  40d5e1:	pop    ss
  40d5e2:	fucomp st(3)
  40d5e4:	call   0x3422:0x21e967ea
  40d5eb:	inc    esi
  40d5ec:	retf   0x2533
  40d5ef:	mov    ebx,0x1f140168
  40d5f4:	sbb    eax,0xa88abb1a
  40d5f9:	jns    0x40d5a4
  40d5fb:	addr16 xchg ecx,eax
  40d5fd:	dec    edx
  40d5fe:	call   0x1c88:0xc8cab49a
  40d605:	nop
  40d606:	cmp    eax,0xf6a897b
  40d60b:	test   BYTE PTR [ebx+edi*2],ch
  40d60e:	popf   
  40d60f:	sbb    ch,BYTE PTR [ecx-0x765c23]
  40d615:	std    
  40d616:	jecxz  0x40d634
  40d618:	jmp    0xeebf:0x1e726355
  40d61f:	ficom  WORD PTR [edi+0x5e]
  40d622:	mov    eax,ebx
  40d624:	repnz adc BYTE PTR [esi],0x60
  40d628:	sub    ah,BYTE PTR [ecx-0x19]
  40d62b:	ins    BYTE PTR es:[edi],dx
  40d62c:	jl     0x40d637
  40d62e:	popa   
  40d62f:	stos   BYTE PTR es:[edi],al
  40d630:	push   ds
  40d631:	shl    ebp,1
  40d633:	sub    al,BYTE PTR [ebx-0x31]
  40d636:	add    bh,dl
  40d638:	xor    al,0xe2
  40d63a:	ret    0x12ea
  40d63d:	sub    bl,BYTE PTR [edi+esi*4+0x7920ad3b]
  40d644:	jmp    0xa50b:0xbf052c74
  40d64b:	aas    
  40d64c:	imul   DWORD PTR ds:0xc4076098
  40d652:	inc    ebx
  40d653:	sub    DWORD PTR [esi-0x3b],edi
  40d656:	mov    bl,0x3d
  40d658:	mov    dl,BYTE PTR [ebx+0x77]
  40d65b:	xchg   edi,eax
  40d65c:	cmp    al,0xf
  40d65e:	cmc    
  40d65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d660:	and    eax,0x44afb733
  40d665:	fisubr WORD PTR [ebx]
  40d667:	addr16 iret 
  40d669:	stc    
  40d66a:	push   edi
  40d66b:	cs test eax,0x6e16dd5
  40d671:	sbb    esp,DWORD PTR [ecx]
  40d673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d674:	ins    BYTE PTR es:[edi],dx
  40d675:	push   esp
  40d676:	sbb    BYTE PTR [eax],dl
  40d678:	nop
  40d679:	push   ds
  40d67a:	enter  0xa2e5,0x51
  40d67e:	repnz push esp
  40d680:	in     eax,dx
  40d681:	lods   al,BYTE PTR ds:[esi]
  40d682:	mov    ebp,0x6aac8e48
  40d687:	leave  
  40d688:	dec    edx
  40d689:	sbb    al,0xd
  40d68b:	dec    edi
  40d68c:	and    cl,al
  40d68e:	add    DWORD PTR [edi+0x1ee83bd1],ebp
  40d694:	adc    DWORD PTR [edi+0x396d854c],0x14
  40d69b:	in     eax,dx
  40d69c:	jae    0x40d70f
  40d69e:	mov    ch,0x29
  40d6a0:	xchg   ecx,eax
  40d6a1:	cmp    BYTE PTR [edx+0x1a3c746],dh
  40d6a7:	scas   al,BYTE PTR es:[edi]
  40d6a8:	ret    0x56d3
  40d6ab:	jnp    0x40d6bd
  40d6ad:	out    0x2d,al
  40d6af:	daa    
  40d6b0:	dec    ebp
  40d6b1:	shl    DWORD PTR [eax+0x33],1
  40d6b4:	pop    edx
  40d6b5:	les    esp,FWORD PTR [ebp-0x68]
  40d6b8:	aam    0xa9
  40d6ba:	pushf  
  40d6bb:	mov    bh,0x50
  40d6bd:	rol    bl,1
  40d6bf:	scas   al,BYTE PTR es:[edi]
  40d6c0:	ffree  st(2)
  40d6c2:	add    al,0x58
  40d6c4:	or     al,0x2c
  40d6c6:	or     DWORD PTR [edx+0x14],edi
  40d6c9:	pop    edx
  40d6ca:	xor    eax,0x56160eae
  40d6cf:	out    dx,al
  40d6d0:	cmp    ax,0x83e1
  40d6d4:	and    BYTE PTR [ebp*2+0x660a4501],0x98
  40d6dc:	mov    ch,0xff
  40d6de:	mov    ds:0x9d633d2f,eax
  40d6e3:	clc    
  40d6e4:	xchg   edx,eax
  40d6e5:	sbb    eax,0x7fb12091
  40d6ea:	leave  
  40d6eb:	mov    bh,0xe9
  40d6ed:	mov    dl,0x9b
  40d6ef:	call   DWORD PTR [esi+0x33]
  40d6f2:	mov    cl,0x82
  40d6f4:	(bad)  
  40d6f6:	ins    DWORD PTR es:[edi],dx
  40d6f7:	sbb    dl,BYTE PTR [ebp+ecx*4+0x31bdffc1]
  40d6fe:	pushf  
  40d6ff:	pop    esi
  40d700:	jae    0x40d71a
  40d702:	cs ja  0x40d6f1
  40d705:	bound  edi,QWORD PTR [edx-0x14a0f7f1]
  40d70b:	adc    ecx,edi
  40d70d:	test   dl,ah
  40d70f:	push   cs
  40d710:	jmp    0x8ef947fb
  40d715:	xor    DWORD PTR [edx+0xb9c41a2],edx
  40d71b:	les    ebp,FWORD PTR [edx+0x383d8fab]
  40d721:	sbb    eax,0x9c0c1257
  40d726:	fwait
  40d727:	aaa    
  40d728:	test   eax,0xe33e4728
  40d72d:	iret   
  40d72e:	ss mov bh,0x67
  40d731:	int    0x53
  40d733:	jno    0x40d6b5
  40d735:	jl     0x40d711
  40d737:	mov    al,ds:0x58c73748
  40d73c:	outs   dx,DWORD PTR ds:[esi]
  40d73d:	and    al,0x83
  40d73f:	fs mov dh,0xa4
  40d742:	test   eax,0x8ac9ce1
  40d747:	fwait
  40d748:	adc    edi,DWORD PTR [eax+edx*8+0xd480525]
  40d74f:	outs   dx,BYTE PTR ds:[esi]
  40d750:	out    dx,al
  40d751:	mov    eax,ds:0xf89e2722
  40d757:	mov    al,BYTE PTR [eax]
  40d759:	mov    ah,0x6
  40d75b:	sbb    esp,ecx
  40d75d:	mov    bh,dl
  40d75f:	and    bh,cl
  40d761:	mov    cl,0x94
  40d763:	jecxz  0x40d7d2
  40d765:	xchg   edx,eax
  40d766:	add    BYTE PTR [edx+0x42dacee],dl
  40d76c:	pop    edx
  40d76d:	push   0x1e3546ab
  40d772:	hlt    
  40d773:	add    ch,BYTE PTR [edi+0x25350bd8]
  40d779:	scas   al,BYTE PTR es:[edi]
  40d77a:	or     esi,DWORD PTR [ebp-0x58]
  40d77d:	push   cs
  40d77e:	adc    ecx,DWORD PTR [ebp-0x436c9bb]
  40d784:	jg     0x40d755
  40d786:	fild   QWORD PTR [eax-0xb3e13ab]
  40d78c:	xchg   esi,eax
  40d78d:	sbb    DWORD PTR [edi-0x6d1a46c8],0x72
  40d794:	in     al,dx
  40d795:	(bad)  
  40d796:	sti    
  40d797:	pop    esp
  40d798:	jge    0x40d809
  40d79a:	cmp    al,0xde
  40d79c:	aas    
  40d79d:	adc    eax,0x12c06557
  40d7a2:	retw   0x9c09
  40d7a6:	jge    0x40d77c
  40d7a8:	add    al,BYTE PTR [ecx-0x66]
  40d7ab:	inc    edi
  40d7ac:	pop    edx
  40d7ad:	inc    DWORD PTR [ebx]
  40d7af:	jle    0x40d794
  40d7b1:	mov    eax,0xb9c18a18
  40d7b6:	push   ss
  40d7b7:	ret    0xe311
  40d7ba:	or     eax,DWORD PTR [esi+0x5c4c61a]
  40d7c0:	sar    DWORD PTR [eax+0x3fb7e6ed],cl
  40d7c6:	repz pop edi
  40d7c8:	dec    edx
  40d7c9:	inc    esp
  40d7ca:	fnstcw WORD PTR [eax-0x2a]
  40d7cd:	neg    dh
  40d7cf:	dec    edx
  40d7d0:	xchg   edx,eax
  40d7d1:	fidiv  WORD PTR [ebp-0x50]
  40d7d4:	inc    esi
  40d7d5:	mov    al,0x43
  40d7d7:	call   0x24cbd443
  40d7dc:	pop    esp
  40d7dd:	(bad)  [ecx+edx*2+0x36]
  40d7e1:	adc    al,BYTE PTR [eax+0x60d5e93e]
  40d7e7:	push   edi
  40d7e8:	aad    0x74
  40d7ea:	std    
  40d7eb:	out    0x75,eax
  40d7ed:	xor    DWORD PTR [ebx+ebp*4-0x45],ebx
  40d7f1:	adc    DWORD PTR [esi+0x3d],ebp
  40d7f4:	sub    DWORD PTR [eax-0x3a],edx
  40d7f7:	nop
  40d7f8:	jmp    0x40d80f
  40d7fa:	ror    BYTE PTR ds:0xce7e798a,1
  40d800:	ret    0x2aa2
  40d803:	xor    ebx,DWORD PTR [edx+0x64d9a423]
  40d809:	xchg   DWORD PTR [eax-0x26],ebx
  40d80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d80d:	jbe    0x40d81e
  40d80f:	xchg   edi,eax
  40d810:	test   ah,al
  40d812:	fsub   QWORD PTR [eax-0x34dd4fd5]
  40d818:	jle    0x40d7b8
  40d81a:	jg     0x40d88d
  40d81c:	popf   
  40d81d:	push   es
  40d81e:	sbb    ah,BYTE PTR [esi+0x57]
  40d821:	in     eax,dx
  40d822:	mov    edi,0x7f39c9b8
  40d827:	into   
  40d828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d829:	push   esp
  40d82a:	push   ebp
  40d82b:	mov    dh,0xd7
  40d82d:	cmp    DWORD PTR [ebx-0x5b],esi
  40d830:	sbb    ch,BYTE PTR ds:0x2071c1f5
  40d836:	test   eax,0x59063119
  40d83b:	pop    es
  40d83c:	mov    ?,WORD PTR [ecx+ebx*1]
  40d83f:	sbb    al,0x26
  40d841:	fcomip st,st(6)
  40d843:	push   es
  40d844:	jnp    0x40d889
  40d846:	inc    edi
  40d847:	idiv   BYTE PTR [ebp-0xecbf931]
  40d84d:	jae    0x40d843
  40d84f:	mov    esp,0x4ad95411
  40d854:	jmp    0x40d866
  40d856:	(bad)  
  40d857:	test   al,0xfe
  40d859:	popf   
  40d85a:	xor    eax,0x4a214d67
  40d85f:	xchg   esi,eax
  40d860:	jg     0x40d824
  40d862:	shr    BYTE PTR [ebp+0x2d],1
  40d865:	adc    al,0xf9
  40d867:	push   esi
  40d868:	jne    0x40d815
  40d86a:	pop    esp
  40d86b:	js     0x40d832
  40d86d:	or     ah,dh
  40d86f:	hlt    
  40d870:	pop    ebp
  40d871:	not    BYTE PTR [ebx-0x4]
  40d874:	push   ebp
  40d875:	sbb    bl,bl
  40d877:	xchg   ebx,eax
  40d878:	jae    0x40d8cf
  40d87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d87b:	test   al,0xca
  40d87d:	cld    
  40d87e:	or     bl,BYTE PTR [ebp+ebp*2+0x20]
  40d882:	xor    eax,0xab7d97f5
  40d887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d888:	lahf   
  40d889:	pop    ebp
  40d88a:	pop    ecx
  40d88b:	int    0x3c
  40d88d:	fsub   DWORD PTR [edx+0x18]
  40d890:	je     0x40d83f
  40d892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d893:	jge    0x40d8e9
  40d895:	xchg   BYTE PTR [eax+0x39],al
  40d898:	imul   ecx,DWORD PTR [edi-0x790787d3],0xe4cb987b
  40d8a2:	or     edx,DWORD PTR [esp+ebx*1-0x38746dcc]
  40d8a9:	daa    
  40d8aa:	cld    
  40d8ab:	cmp    al,0x1c
  40d8ad:	int    0xf8
  40d8af:	lock ds ins BYTE PTR es:[edi],dx
  40d8b2:	aad    0x2b
  40d8b4:	imul   ecx,DWORD PTR [eax-0x13],0x832bead9
  40d8bb:	(bad)
  40d8be:	sbb    BYTE PTR [edx-0x2c35ec5a],al
  40d8c4:	push   ebx
  40d8c5:	pop    edi
  40d8c6:	fidivr WORD PTR [edi-0x41bc0604]
  40d8cc:	cmp    dx,bp
  40d8cf:	and    BYTE PTR [edx],ch
  40d8d1:	jmp    0x40d89b
  40d8d3:	cwde   
  40d8d4:	out    0xbf,eax
  40d8d6:	jecxz  0x40d927
  40d8d8:	div    BYTE PTR [edi+ecx*1-0x47ffe107]
  40d8df:	mov    WORD PTR [edi-0x10],?
  40d8e2:	outs   dx,DWORD PTR ds:[esi]
  40d8e3:	add    dl,cl
  40d8e5:	cmp    DWORD PTR [ebx+0x2e],edx
  40d8e8:	nop
  40d8e9:	(bad)  
  40d8ea:	repz pop ds
  40d8ec:	(bad)  
  40d8ed:	jb     0x40d8f0
  40d8ef:	xchg   ebp,eax
  40d8f0:	dec    eax
  40d8f1:	pop    ss
  40d8f2:	imul   ebx,eax,0x8c365fe4
  40d8f8:	jne    0x40d8a5
  40d8fa:	and    al,0xca
  40d8fc:	sub    ecx,ecx
  40d8fe:	icebp  
  40d8ff:	add    eax,DWORD PTR [ebp-0x220e3dec]
  40d905:	cmp    eax,0xeac5602d
  40d90a:	in     eax,dx
  40d90b:	xchg   BYTE PTR [ecx+0x18d216fb],dl
  40d911:	test   BYTE PTR [esi+eiz*2-0x56],dl
  40d915:	sysenter 
  40d917:	scas   al,BYTE PTR es:[edi]
  40d918:	sbb    BYTE PTR [edi+0x54],ch
  40d91b:	mov    ecx,0x5ddababb
  40d920:	cmp    al,al
  40d922:	mov    dh,BYTE PTR [ecx-0x54]
  40d925:	push   0xa1c9fb6c
  40d92a:	scas   al,BYTE PTR es:[edi]
  40d92b:	rcl    ecx,1
  40d92d:	pop    esp
  40d92e:	pop    esp
  40d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d930:	cmp    al,0xc3
  40d932:	repz cmp bl,BYTE PTR [ecx]
  40d935:	push   cs
  40d936:	(bad)  [esi-0x6a]
  40d939:	int    0xfd
  40d93b:	inc    esi
  40d93c:	aam    0xae
  40d93e:	mov    BYTE PTR [edi],bl
  40d940:	stos   BYTE PTR es:[edi],al
  40d941:	loop   0x40d9c1
  40d943:	inc    esi
  40d944:	or     ecx,esp
  40d946:	pop    edx
  40d947:	xchg   esi,eax
  40d948:	mov    bh,0x39
  40d94a:	dec    BYTE PTR es:[eax+esi*4+0x4e]
  40d94f:	popf   
  40d950:	ins    DWORD PTR es:[edi],dx
  40d951:	fdivr  DWORD PTR ds:0x23c3e9db
  40d957:	fsub   QWORD PTR [edx-0x4a657ee1]
  40d95d:	sub    DWORD PTR [esi-0x5d4a23a7],ebx
  40d963:	ffreep st(1)
  40d965:	push   0xffffffd8
  40d967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d968:	sti    
  40d969:	(bad)  
  40d96a:	loop   0x40d903
  40d96c:	sti    
  40d96d:	mov    bh,0x7d
  40d96f:	rcl    BYTE PTR fs:[edx],1
  40d972:	shr    BYTE PTR [ebp+eax*2+0x49],0xbe
  40d977:	xor    eax,0xa485d6c7
  40d97c:	ds test eax,0x265cec5b
  40d982:	mov    eax,0xf4319cb3
  40d987:	retf   0xc925
  40d98a:	mov    edi,DWORD PTR [edx+0x14d9b20f]
  40d990:	mov    ch,0x1e
  40d992:	(bad)  
  40d993:	and    dl,dh
  40d995:	mov    edi,0x3a30a596
  40d99a:	in     al,dx
  40d99b:	xchg   ebx,eax
  40d99c:	and    ch,ch
  40d99e:	inc    ebx
  40d99f:	test   BYTE PTR [esi],ch
  40d9a1:	sub    DWORD PTR [edi+0xc130393],ecx
  40d9a7:	arpl   cx,di
  40d9a9:	cmp    DWORD PTR [esi-0x11],ebx
  40d9ac:	sbb    dl,BYTE PTR fs:[ebx]
  40d9af:	(bad)  
  40d9b0:	(bad)  
  40d9b1:	adc    eax,0x3731fc6a
  40d9b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b7:	mov    esi,0xa44de4a1
  40d9bc:	out    0x4b,al
  40d9be:	dec    ebp
  40d9bf:	mov    ebx,0x5e7d51fb
  40d9c4:	xchg   edi,eax
  40d9c5:	xchg   esp,eax
  40d9c6:	mov    bl,0x40
  40d9c8:	addr16 jl 0x40d9c7
  40d9cb:	ds inc edi
  40d9cd:	jns    0x40d9c4
  40d9cf:	xchg   ebx,eax
  40d9d0:	shr    DWORD PTR [esi],0x47
  40d9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d4:	jmp    0x40d9b4
  40d9d6:	ss mov ah,0x9a
  40d9d9:	pop    ecx
  40d9da:	cmp    eax,0xdb451983
  40d9df:	push   ds
  40d9e0:	mov    ecx,0xb1b6ac99
  40d9e5:	xchg   esi,eax
  40d9e6:	xor    al,0x7f
  40d9e8:	sahf   
  40d9e9:	icebp  
  40d9ea:	fwait
  40d9eb:	pop    es
  40d9ec:	add    ebx,DWORD PTR ds:0x66575ad6
  40d9f2:	mov    cl,0x73
  40d9f4:	jecxz  0x40d9dc
  40d9f6:	jmp    0x40da1a
  40d9f8:	xchg   ecx,eax
  40d9f9:	int3   
  40d9fa:	adc    dl,BYTE PTR [ebx+0x12cb93b2]
  40da00:	xor    DWORD PTR [esi-0x1ead2b82],0xc55e617e
  40da0a:	lea    edi,[ebx]
  40da0c:	(bad)  
  40da0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da0e:	push   esi
  40da0f:	inc    eax
  40da10:	fs sub eax,0xaf7586a9
  40da16:	sub    eax,0xa86cfe65
  40da1b:	inc    ebp
  40da1c:	clc    
  40da1d:	xchg   ebp,eax
  40da1e:	mov    esp,0xe69c711a
  40da23:	pop    ebp
  40da24:	rcr    DWORD PTR [ecx-0x4e51342b],cl
  40da2a:	leave  
  40da2b:	out    0x9f,al
  40da2d:	(bad)  
  40da2e:	push   DWORD PTR [ebx+0x3b9a84db]
  40da34:	int    0x1d
  40da36:	loope  0x40da41
  40da38:	test   DWORD PTR [edx-0x27],0x626a506
  40da3f:	(bad)
  40da44:	(bad)  
  40da45:	shr    esi,cl
  40da47:	dec    esp
  40da48:	mov    WORD PTR [ecx],ss
  40da4a:	or     al,0x71
  40da4c:	xchg   ebx,eax
  40da4d:	mov    ebp,0x30ef9db3
  40da52:	call   0x9b498cec
  40da57:	retf   
  40da58:	ds stc 
  40da5a:	fmul   DWORD PTR [ecx]
  40da5c:	inc    eax
  40da5d:	mov    ebp,0xcc08770b
  40da62:	pop    edx
  40da63:	and    eax,0xc8105b2
  40da68:	mov    ah,0x79
  40da6a:	mov    al,bh
  40da6c:	imul   edi,DWORD PTR [ebx+0x62],0xe81a33f0
  40da73:	ss popw es
  40da76:	icebp  
  40da77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da78:	mov    cl,0xb8
  40da7a:	sahf   
  40da7b:	cmp    al,0x5f
  40da7d:	sub    BYTE PTR cs:[eax],bh
  40da80:	dec    ebx
  40da81:	stc    
  40da82:	push   ecx
  40da83:	rol    sp,0x30
  40da87:	es dec eax
  40da89:	ret    0x4b10
  40da8c:	inc    ebx
  40da8d:	sub    ecx,ebp
  40da8f:	jbe    0x40daaa
  40da91:	out    dx,al
  40da92:	and    BYTE PTR [esi],ah
  40da94:	lock sub DWORD PTR [edx],0x612b67c4
  40da9b:	(bad)  
  40da9c:	push   ss
  40da9d:	aad    0xc2
  40da9f:	outs   dx,DWORD PTR ds:[esi]
  40daa0:	mov    ds:0xbffa5f6b,al
  40daa5:	stc    
  40daa6:	adc    BYTE PTR [esi-0x2a],al
  40daa9:	shl    ebp,cl
  40daab:	out    dx,al
  40daac:	dec    ebp
  40daad:	sub    ebp,ebx
  40daaf:	test   bl,ch
  40dab1:	outs   dx,DWORD PTR ds:[esi]
  40dab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab3:	jg     0x40dad6
  40dab5:	push   edi
  40dab6:	mov    cl,0xa2
  40dab8:	aaa    
  40dab9:	stos   DWORD PTR es:[edi],eax
  40daba:	mov    edx,esi
  40dabc:	out    0x17,eax
  40dabe:	add    eax,0x52d18a67
  40dac3:	sbb    edx,DWORD PTR [ecx]
  40dac5:	mov    edi,0x73d18433
  40daca:	repnz cmp eax,0x82634bd9
  40dad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad2:	inc    ebx
  40dad3:	stc    
  40dad4:	pop    esi
  40dad5:	jbe    0x40dadf
  40dad7:	inc    esi
  40dad8:	cmc    
  40dad9:	arpl   ax,dx
  40dadb:	pop    esi
  40dadc:	pop    eax
  40dadd:	jns    0x40db16
  40dadf:	mov    ds:0xa09d9d0,eax
  40dae4:	mov    al,ds:0x9ef01784
  40dae9:	test   DWORD PTR [ecx-0x26475e8a],esp
  40daef:	ror    BYTE PTR [ecx],0x22
  40daf2:	mov    ebx,ebp
  40daf4:	fadd   QWORD PTR [eax]
  40daf6:	pop    ss
  40daf7:	das    
  40daf8:	(bad)  
  40daf9:	ffree  st(4)
  40dafb:	jecxz  0x40dab2
  40dafd:	ror    DWORD PTR [edi+0x65],1
  40db00:	jne    0x40dad8
  40db02:	mov    ebp,0x386a38e4
  40db07:	mov    edi,ebp
  40db09:	cwde   
  40db0a:	outs   dx,DWORD PTR ds:[esi]
  40db0b:	std    
  40db0c:	out    0xe1,al
  40db0e:	(bad)  
  40db0f:	mov    ecx,0x1a8a87ec
  40db14:	or     al,0x8a
  40db16:	pop    eax
  40db17:	(bad)  
  40db19:	add    edx,DWORD PTR [ebx-0x2b9bbca3]
  40db1f:	and    eax,0x8375ad72
  40db24:	loop   0x40db00
  40db26:	xchg   esi,eax
  40db27:	mov    ebx,0x9e3c52cd
  40db2c:	add    cl,BYTE PTR [esi-0x58]
  40db2f:	out    0x7,eax
  40db31:	or     al,BYTE PTR [edi+0x6f]
  40db34:	leave  
  40db35:	(bad)  
  40db37:	les    edx,FWORD PTR [eax+edi*8-0x412ebbb3]
  40db3e:	and    ah,dh
  40db40:	ret    0x7bc6
  40db43:	mov    eax,ds:0xa6a0e8a7
  40db48:	lea    esp,[ebx+eiz*1+0x15]
  40db4c:	hlt    
  40db4d:	push   ecx
  40db4e:	lods   al,BYTE PTR ds:[esi]
  40db4f:	xor    ch,BYTE PTR [edx+0x18]
  40db52:	add    al,0x31
  40db54:	lods   eax,DWORD PTR ds:[esi]
  40db55:	call   0x40b0:0x25a22e19
  40db5c:	sub    eax,0x45921fd8
  40db61:	inc    ebx
  40db62:	mov    ecx,0xf21f981
  40db67:	mov    edi,0x744d92eb
  40db6c:	fs cs int 0xa7
  40db70:	scas   al,BYTE PTR es:[edi]
  40db71:	sub    DWORD PTR [ebp-0x18],esi
  40db74:	stc    
  40db75:	mov    ebx,esp
  40db77:	stc    
  40db78:	sbb    DWORD PTR [ecx+ebx*1-0x7cd15f7a],0x88325b94
  40db83:	fsub   st,st(5)
  40db85:	add    eax,0x3e0fb3e9
  40db8a:	dec    esi
  40db8b:	fcmovnb st,st(7)
  40db8d:	xor    bl,BYTE PTR [ebx+0x60]
  40db90:	dec    esi
  40db91:	xchg   edi,eax
  40db92:	ins    DWORD PTR es:[edi],dx
  40db93:	fist   WORD PTR [esi+eax*1]
  40db96:	sbb    esp,DWORD PTR [edx+0x55388a7f]
  40db9c:	jae    0x40dbae
  40db9e:	cmp    DWORD PTR [eax],edx
  40dba0:	adc    DWORD PTR [edi-0x72a498be],edx
  40dba6:	push   eax
  40dba7:	aaa    
  40dba8:	mov    edx,0x9aef40a
  40dbad:	pop    ss
  40dbae:	wrmsr  
  40dbb0:	mov    bl,0x5c
  40dbb2:	pop    edi
  40dbb3:	pop    ecx
  40dbb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb5:	push   es
  40dbb6:	fsub   st(3),st
  40dbb8:	pop    es
  40dbb9:	fsubr  QWORD PTR [edx+0x3499d302]
  40dbbf:	scas   eax,DWORD PTR es:[edi]
  40dbc0:	(bad)  [ebx]
  40dbc2:	and    BYTE PTR fs:[edi+0x40],dh
  40dbc6:	jne    0x40dc27
  40dbc8:	lea    ebp,[ecx]
  40dbca:	add    ecx,esi
  40dbcc:	inc    ecx
  40dbcd:	outs   dx,DWORD PTR ds:[esi]
  40dbce:	adc    bl,BYTE PTR [esi-0xd]
  40dbd1:	scas   al,BYTE PTR es:[edi]
  40dbd2:	cs loope 0x40dbdc
  40dbd5:	stc    
  40dbd6:	mov    al,ds:0x4d8063d4
  40dbdb:	or     BYTE PTR [edx+0x2daf9d46],bh
  40dbe1:	add    edi,DWORD PTR [edx+0x21df7850]
  40dbe7:	fist   DWORD PTR [ecx-0x4410e187]
  40dbed:	inc    eax
  40dbee:	pop    es
  40dbef:	dec    ecx
  40dbf0:	stos   BYTE PTR es:[di],al
  40dbf2:	dec    edx
  40dbf3:	shl    eax,1
  40dbf5:	ror    ch,1
  40dbf7:	push   ecx
  40dbf8:	stos   BYTE PTR es:[edi],al
  40dbf9:	nop
  40dbfa:	mov    ch,0xc8
  40dbfc:	lods   eax,DWORD PTR ds:[esi]
  40dbfd:	mov    DWORD PTR [ecx],edi
  40dbff:	add    esi,DWORD PTR [ebp+0x5264e8ff]
  40dc05:	(bad)  
  40dc06:	adc    esi,DWORD PTR [ecx-0xdfa2bde]
  40dc0c:	rcr    BYTE PTR [ebx],0x4b
  40dc0f:	ror    DWORD PTR [edi+eax*2+0x3e],cl
  40dc13:	mov    WORD PTR [esi-0x154658c7],ss
  40dc19:	xor    al,0x7e
  40dc1b:	js     0x40dc4e
  40dc1d:	(bad)  
  40dc1e:	loopne 0x40dc35
  40dc20:	ret    0x5d8f
  40dc23:	sti    
  40dc24:	in     eax,0xe0
  40dc26:	stc    
  40dc27:	xchg   esi,eax
  40dc28:	shr    bh,cl
  40dc2a:	mov    al,0xd9
  40dc2c:	adc    bh,BYTE PTR [ebx]
  40dc2e:	shl    BYTE PTR [eax+0x18],cl
  40dc31:	popf   
  40dc32:	cmp    al,ah
  40dc34:	pop    ecx
  40dc35:	cmc    
  40dc36:	xor    BYTE PTR [ebx+0x4],dh
  40dc39:	inc    ecx
  40dc3a:	xor    edi,DWORD PTR [edx]
  40dc3c:	sbb    ecx,DWORD PTR [ebp-0x41]
  40dc3f:	sub    ebp,DWORD PTR [ecx+0xf]
  40dc42:	(bad)  
  40dc43:	mov    dl,0x2c
  40dc45:	cld    
  40dc46:	cmp    al,0x99
  40dc48:	std    
  40dc49:	pop    esp
  40dc4a:	xchg   esi,eax
  40dc4b:	mov    dl,0x5c
  40dc4d:	xor    eax,0x6c93450f
  40dc52:	xchg   edi,eax
  40dc53:	ror    DWORD PTR [esi+0x22],1
  40dc56:	mov    ecx,0x1a119375
  40dc5b:	test   al,0x15
  40dc5d:	inc    esp
  40dc5e:	xchg   BYTE PTR [edx-0x74964b79],bl
  40dc64:	sbb    BYTE PTR [edi],dh
  40dc66:	and    DWORD PTR [eax+0x24],eax
  40dc69:	outs   dx,DWORD PTR ds:[esi]
  40dc6a:	pop    ds
  40dc6b:	and    al,0xb6
  40dc6d:	idiv   DWORD PTR [esi-0x12]
  40dc70:	fiadd  DWORD PTR [ecx]
  40dc72:	add    al,0xbe
  40dc74:	(bad)  
  40dc75:	int    0x74
  40dc77:	sbb    bl,bh
  40dc79:	sbb    DWORD PTR [ebx-0xc],ecx
  40dc7c:	xchg   BYTE PTR [esi+0x1bdf35f5],ah
  40dc82:	fstp   DWORD PTR [ebx-0x24c7228c]
  40dc88:	inc    edi
  40dc89:	stc    
  40dc8a:	inc    esp
  40dc8b:	push   eax
  40dc8c:	jnp    0x40dcff
  40dc8e:	sar    DWORD PTR [ebx],cl
  40dc90:	leave  
  40dc91:	popa   
  40dc92:	and    al,BYTE PTR [esi-0x13]
  40dc95:	out    0x58,eax
  40dc97:	jbe    0x40dce2
  40dc99:	jnp    0x40dc3f
  40dc9b:	in     eax,dx
  40dc9c:	mov    ecx,edx
  40dc9e:	or     eax,0x2ba56ca3
  40dca3:	ficom  DWORD PTR [ecx+0x3eebdf1a]
  40dca9:	mov    eax,0xaba6a3f6
  40dcae:	xchg   DWORD PTR [eax],eax
  40dcb0:	icebp  
  40dcb1:	jae    0x40dcfc
  40dcb3:	adc    al,BYTE PTR [edx+0x67]
  40dcb6:	or     esp,eax
  40dcb8:	inc    ebx
  40dcb9:	in     eax,dx
  40dcba:	pop    ss
  40dcbb:	sbb    bh,BYTE PTR [edx+ecx*8+0x72]
  40dcbf:	pushf  
  40dcc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc1:	push   edi
  40dcc2:	neg    DWORD PTR [edx-0x9b41162]
  40dcc8:	xor    DWORD PTR ds:0x9b97098f,ecx
  40dcce:	pop    esi
  40dccf:	jle    0x40dd0a
  40dcd1:	cmp    BYTE PTR [ebx],dh
  40dcd3:	out    0xf5,eax
  40dcd5:	push   ebp
  40dcd6:	cmc    
  40dcd7:	sbb    al,0xf5
  40dcd9:	and    eax,0x578c74a9
  40dcde:	inc    ebx
  40dcdf:	or     DWORD PTR [edi],0xffffff95
  40dce2:	out    dx,eax
  40dce3:	ss or  bl,dl
  40dce6:	int3   
  40dce7:	hlt    
  40dce8:	(bad)  
  40dce9:	add    ch,BYTE PTR [edi-0x5d19202]
  40dcef:	setb   bl
  40dcf2:	fdiv   st(6),st
  40dcf4:	imul   esi,edx,0x12fd6c73
  40dcfa:	mov    edx,0xe029bc43
  40dcff:	call   0x6237054e
  40dd04:	or     DWORD PTR [ebp+0x48],eax
  40dd07:	in     eax,dx
  40dd08:	scas   al,BYTE PTR es:[edi]
  40dd09:	repnz retf 0x8bbd
  40dd0d:	xchg   edx,eax
  40dd0e:	mov    ?,ebx
  40dd10:	std    
  40dd11:	jge    0x40dd1a
  40dd13:	xchg   BYTE PTR [edi-0x52],ah
  40dd16:	es mov dl,0xb5
  40dd19:	dec    esp
  40dd1a:	fxch   st(0)
  40dd1c:	rcr    BYTE PTR [ecx-0xc],0x64
  40dd20:	jnp    0x40dcdf
  40dd22:	(bad)  [edx+eiz*2+0x4b79e4b7]
  40dd29:	out    dx,eax
  40dd2a:	mov    ebp,0xfd871e28
  40dd2f:	mov    al,0x4e
  40dd31:	pop    edx
  40dd32:	test   al,0x35
  40dd34:	sub    bl,BYTE PTR [edi+0x3b]
  40dd37:	mov    al,ds:0xfba148c6
  40dd3c:	xchg   esi,eax
  40dd3d:	out    dx,eax
  40dd3e:	jg     0x40dd0f
  40dd40:	xchg   esi,eax
  40dd41:	cmp    ch,BYTE PTR [eax+eax*2]
  40dd44:	mov    edx,0x1d1aff0d
  40dd49:	inc    ecx
  40dd4a:	call   0x7051a78f
  40dd4f:	mov    dh,0xc1
  40dd51:	test   dh,al
  40dd53:	sub    dh,dh
  40dd55:	retf   
  40dd56:	mov    edx,0x1aa49057
  40dd5b:	push   esi
  40dd5c:	in     al,dx
  40dd5d:	mov    ebp,0x1396f69e
  40dd62:	nop
  40dd63:	xchg   ecx,eax
  40dd64:	dec    edi
  40dd66:	ss loop 0x40dd40
  40dd69:	ins    BYTE PTR es:[edi],dx
  40dd6a:	mov    ebp,0xf81028fe
  40dd6f:	scas   eax,DWORD PTR es:[edi]
  40dd70:	leave  
  40dd71:	dec    ebp
  40dd72:	cmp    al,0x9c
  40dd74:	add    edi,0xe44cce29
  40dd7a:	and    DWORD PTR [eax],eax
  40dd7c:	cmp    BYTE PTR [esi+0x6f],al
  40dd7f:	aas    
  40dd80:	mov    cl,0x70
  40dd82:	test   DWORD PTR [eax],eax
  40dd84:	add    eax,0x639a701a
  40dd89:	scas   al,BYTE PTR es:[edi]
  40dd8a:	inc    esp
  40dd8b:	call   0x98f4:0xe9b51740
  40dd92:	mov    ?,WORD PTR [ecx]
  40dd94:	bnd jge 0x40dd94
  40dd97:	imul   ebx,DWORD PTR [ecx+0x18],0xffffffa6
  40dd9b:	push   ebx
  40dd9c:	test   al,0x62
  40dd9e:	xchg   ecx,eax
  40dd9f:	mov    bh,0x12
  40dda1:	pop    es
  40dda2:	je     0x40de07
  40dda4:	inc    esp
  40dda5:	pop    ebp
  40dda6:	add    DWORD PTR [ebx+0x735a51ef],ebp
  40ddac:	xor    DWORD PTR [ebx],ebp
  40ddae:	aaa    
  40ddaf:	stos   BYTE PTR es:[edi],al
  40ddb0:	(bad)  
  40ddb1:	mov    cl,0x52
  40ddb3:	call   0x5c6c:0x20b1d183
  40ddba:	sub    bh,0xe8
  40ddbd:	xchg   ebp,eax
  40ddbe:	stos   DWORD PTR es:[edi],eax
  40ddbf:	xor    BYTE PTR [eax+0x2f],bh
  40ddc2:	or     al,BYTE PTR [ebx-0x5d]
  40ddc5:	push   cs
  40ddc6:	mov    ss,ebp
  40ddc8:	push   edx
  40ddc9:	xchg   ecx,eax
  40ddca:	mov    edi,0x55a55d87
  40ddcf:	or     BYTE PTR [edx+ebp*4+0x2003bc97],al
  40ddd6:	js     0x40de32
  40ddd8:	mov    ebp,0x41a07d50
  40dddd:	xbegin 0x2b0b480c
  40dde3:	mov    WORD PTR [ebx-0x486806d3],gs
  40dde9:	mov    dh,0xfe
  40ddeb:	pushf  
  40ddec:	mov    al,0x2a
  40ddee:	jo     0x40dd91
  40ddf0:	aad    0x47
  40ddf2:	stos   DWORD PTR es:[edi],eax
  40ddf3:	push   ebx
  40ddf4:	je     0x40de2e
  40ddf6:	iret   
  40ddf7:	mov    ch,0x57
  40ddf9:	cmp    BYTE PTR [esi-0x59c2693f],bh
  40ddff:	cmp    DWORD PTR [eax],eax
  40de01:	sub    al,BYTE PTR [edx+0x67]
  40de04:	rol    DWORD PTR [esp+esi*8],0x71
  40de08:	jle    0x40ddc6
  40de0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de0b:	rcr    BYTE PTR [edx-0x8a5eb90],cl
  40de11:	(bad)  
  40de12:	mov    esi,0xa63dd975
  40de17:	sub    eax,0x42
  40de1a:	das    
  40de1b:	adc    DWORD PTR [eax-0x2f9318f4],ecx
  40de21:	and    eax,0x3dba2f94
  40de26:	jl     0x40ddbb
  40de28:	hlt    
  40de29:	sbb    eax,eax
  40de2b:	push   ds
  40de2c:	adc    dl,al
  40de2e:	xchg   ebx,eax
  40de2f:	clc    
  40de30:	rol    DWORD PTR [ebp-0x20],cl
  40de33:	repnz arpl WORD PTR [eax+0x4a33f1ca],ax
  40de3a:	jmp    0xd381986d
  40de3f:	mov    ds:0x9dd931eb,eax
  40de44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de45:	dec    ecx
  40de46:	xor    edx,DWORD PTR fs:[eax+edi*8-0x1]
  40de4b:	mov    ss,WORD PTR [edx]
  40de4d:	jmp    0x40deac
  40de4f:	sub    BYTE PTR [edi+0x12],0x30
  40de53:	jmp    FWORD PTR [edx]
  40de55:	pushf  
  40de56:	and    dl,dh
  40de58:	dec    ebp
  40de59:	in     al,0x5a
  40de5b:	mov    eax,0x550d0eea
  40de60:	pop    ebp
  40de61:	jns    0x40de8f
  40de63:	pusha  
  40de64:	and    al,0xbf
  40de66:	jmp    0xbdcd:0xbfaae749
  40de6d:	stc    
  40de6e:	cmp    eax,0x75774dd2
  40de73:	mov    esi,0x5e964e70
  40de78:	or     BYTE PTR [edi+0x209f646],dl
  40de7e:	mov    cl,0x2f
  40de80:	stos   DWORD PTR es:[edi],eax
  40de81:	jl     0x40de67
  40de83:	repz fsub DWORD PTR [esp+edi*4-0x56]
  40de88:	add    eax,0x70ceb3b0
  40de8d:	add    BYTE PTR [esi+0x7f],al
  40de90:	(bad)  [ebp-0x62bcc6ba]
  40de96:	xchg   edi,eax
  40de97:	sub    al,0xb5
  40de99:	lods   eax,DWORD PTR ds:[esi]
  40de9a:	dec    eax
  40de9b:	sbb    ch,BYTE PTR [ebp-0x4e]
  40de9e:	add    DWORD PTR [eax+0x17045916],0x306374
  40dea8:	fs nop
  40deaa:	test   eax,0x569405d4
  40deaf:	in     eax,0x51
  40deb1:	aad    0xdd
  40deb3:	jne    0x40de93
  40deb5:	xchg   ecx,eax
  40deb6:	sub    dl,BYTE PTR [eax]
  40deb8:	mov    ecx,DWORD PTR [ebx+0x55e78ce7]
  40debe:	add    al,0x67
  40dec0:	xor    al,0x44
  40dec2:	fwait
  40dec3:	mov    edi,0x98c9d9ce
  40dec8:	lods   al,BYTE PTR ds:[esi]
  40dec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deca:	push   edx
  40decb:	aas    
  40decc:	repz jg 0x40de54
  40decf:	dec    esp
  40ded0:	outs   dx,BYTE PTR ds:[esi]
  40ded1:	mov    ecx,0xb4a2d898
  40ded6:	outs   dx,DWORD PTR ds:[esi]
  40ded7:	mov    esi,0xce3476f4
  40dedc:	pusha  
  40dedd:	cld    
  40dede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dedf:	push   eax
  40dee0:	fisub  WORD PTR [eax-0x3a6eb43d]
  40dee6:	mov    dh,0x62
  40dee8:	inc    edi
  40dee9:	and    al,0xc7
  40deeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deec:	ret    
  40deed:	aam    0xed
  40deef:	jle    0x40dee9
  40def1:	je     0x40deb9
  40def3:	add    eax,0xd94933f2
  40def8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40def9:	mov    ebp,0x6ac39d66
  40defe:	push   cs
  40deff:	in     eax,0xee
  40df01:	inc    ecx
  40df02:	add    al,0xd1
  40df04:	lock (bad) 
  40df06:	inc    dh
  40df08:	imul   edi,DWORD PTR [eax],0xffffff97
  40df0b:	pop    edx
  40df0c:	sti    
  40df0d:	les    edi,FWORD PTR [edi-0x5ef69afb]
  40df13:	addr16 addr16 in al,0xb7
  40df17:	adc    eax,0xe7f01620
  40df1c:	nop
  40df1d:	xchg   bh,ah
  40df1f:	or     esi,ebp
  40df21:	add    al,BYTE PTR [esi+0x64238263]
  40df27:	in     eax,0x1f
  40df29:	mov    cl,BYTE PTR [eax+0x3d]
  40df2c:	mov    eax,0xc9d1c121
  40df31:	pop    ecx
  40df32:	xabort 0xb6
  40df35:	pop    ecx
  40df36:	jp     0x40df1c
  40df38:	mov    al,ds:0x3a2522cf
  40df3d:	enter  0x46bc,0x8d
  40df41:	es adc eax,0xe59ba103
  40df47:	loope  0x40df0a
  40df49:	jae    0x40df9e
  40df4b:	sti    
  40df4c:	push   cs
  40df4d:	dec    ebp
  40df4e:	ins    DWORD PTR es:[edi],dx
  40df4f:	or     eax,0x3e1ddb4f
  40df54:	sar    DWORD PTR [esi-0x18],cl
  40df57:	sahf   
  40df58:	fist   DWORD PTR [ebp+0x16183a94]
  40df5e:	aam    0xaa
  40df60:	xor    BYTE PTR [esi+0x60],dl
  40df63:	push   esp
  40df64:	data16 mov al,0x22
  40df67:	push   edx
  40df68:	icebp  
  40df69:	mov    ch,0x11
  40df6b:	loopne 0x40dfa3
  40df6d:	cmp    dh,dl
  40df6f:	fisub  WORD PTR [ecx]
  40df71:	pop    ebp
  40df72:	mov    WORD PTR [ebp+0x70],es
  40df75:	dec    esp
  40df76:	push   ecx
  40df77:	int3   
  40df78:	imul   ecx,DWORD PTR [ebx],0xa5899d1d
  40df7e:	call   0xe440:0x7256e5c1
  40df85:	adc    ebx,DWORD PTR [esi+0x4a4e47a4]
  40df8b:	mov    ?,WORD PTR [esi+edi*4+0x46]
  40df8f:	mov    eax,0x7565d1fe
  40df94:	ficomp DWORD PTR [edi]
  40df96:	test   eax,0x287cc5f8
  40df9b:	xor    esp,eax
  40df9d:	cs add eax,0x7f90478b
  40dfa3:	or     BYTE PTR [edx+0x76],ch
  40dfa6:	out    0xde,eax
  40dfa8:	outs   dx,BYTE PTR ds:[esi]
  40dfa9:	xlat   BYTE PTR ds:[ebx]
  40dfaa:	cmp    DWORD PTR ds:0x53f9904d,0xd280e8bd
  40dfb4:	sbb    BYTE PTR fs:[edi],bh
  40dfb7:	jbe    0x40e038
  40dfb9:	cmp    DWORD PTR ds:[eax],eax
  40dfbc:	xchg   BYTE PTR [eax+0x45],dl
  40dfbf:	psrad  mm2,0x74
  40dfc3:	xchg   DWORD PTR [edx-0x12],ebx
  40dfc6:	sbb    DWORD PTR [esi+0x42],0xffffffcc
  40dfca:	test   BYTE PTR [edx+0x19],dh
  40dfcd:	cmp    BYTE PTR [ebp-0x20a7eb51],bh
  40dfd3:	cmp    esi,DWORD PTR [esi+0x2d]
  40dfd6:	or     al,0x76
  40dfd8:	stos   BYTE PTR es:[edi],al
  40dfd9:	or     bl,BYTE PTR [eax-0x5d]
  40dfdc:	or     eax,0x95b2e6eb
  40dfe1:	shr    BYTE PTR [ecx+0xdf94e8a],cl
  40dfe7:	vpunpckhwd xmm2,xmm6,xmm5
  40dfeb:	adc    al,0xc2
  40dfed:	call   0x9b687c47
  40dff2:	push   ebx
  40dff3:	pusha  
  40dff4:	mov    dl,0x71
  40dff6:	lods   al,BYTE PTR ds:[esi]
  40dff7:	dec    ebp
  40dff8:	cld    
  40dff9:	xchg   DWORD PTR [esi-0xf],eax
  40dffc:	popf   
  40dffd:	adc    dl,BYTE PTR [ebp-0x2fb129de]
  40e003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e004:	or     eax,0x736f9e56
  40e009:	mov    ss,eax
  40e00b:	outs   dx,DWORD PTR ds:[esi]
  40e00c:	icebp  
  40e00d:	add    al,0x76
  40e00f:	push   0xab300a37
  40e014:	ficomp WORD PTR [edx+0x2d]
  40e017:	neg    DWORD PTR [eax+0x60a1c9a9]
  40e01d:	inc    DWORD PTR [ebx-0x2b]
  40e020:	mov    esp,0x9e169b0a
  40e025:	lods   al,BYTE PTR ds:[esi]
  40e026:	xchg   ebp,eax
  40e027:	and    al,0x5e
  40e029:	mov    edx,0x877e80ae
  40e02e:	xchg   ebx,eax
  40e02f:	inc    ebp
  40e030:	push   es
  40e031:	es dec esi
  40e033:	fstp   DWORD PTR [esi+0x2f7565f2]
  40e039:	xchg   ebp,eax
  40e03a:	mov    eax,DWORD PTR [ebp+0x20]
  40e03d:	fild   DWORD PTR [ebx+0x516ad23d]
  40e043:	imul   edi,DWORD PTR [eax+0x1e],0x6c
  40e047:	dec    esp
  40e048:	add    BYTE PTR [esi+0x16],ah
  40e04b:	mov    esp,0x5fbeecaf
  40e050:	bound  esp,QWORD PTR [ebx+0x5d790fa4]
  40e056:	mov    WORD PTR [ecx-0x5285759a],ds
  40e05c:	fbld   TBYTE PTR [ebx+0x62ca285]
  40e062:	outs   dx,BYTE PTR ds:[esi]
  40e063:	push   edx
  40e064:	cmp    BYTE PTR [ebx],al
  40e066:	and    dh,BYTE PTR [eax]
  40e068:	sub    BYTE PTR [ebp-0x25bbfeeb],dh
  40e06e:	fisub  DWORD PTR [edx+0x14a16d2]
  40e074:	std    
  40e075:	add    eax,0xa2540ffe
  40e07a:	push   esp
  40e07b:	fsub   st,st(6)
  40e07d:	dec    ebp
  40e07e:	div    BYTE PTR [edi+esi*4-0x25]
  40e082:	jne    0x40e0bb
  40e084:	mov    ah,0x9e
  40e086:	scas   al,BYTE PTR es:[edi]
  40e087:	push   0x2a
  40e089:	inc    esi
  40e08a:	out    dx,eax
  40e08b:	push   ecx
  40e08c:	adc    dl,BYTE PTR [esi]
  40e08e:	sub    ebx,esp
  40e090:	adc    ebx,DWORD PTR [edx-0x6848b3cc]
  40e096:	ret    
  40e097:	outs   dx,BYTE PTR ds:[esi]
  40e098:	jmp    DWORD PTR [edi-0x131027fb]
  40e09e:	jp     0x40e07f
  40e0a0:	sar    DWORD PTR [ebx-0x23],0xc1
  40e0a4:	inc    edi
  40e0a5:	ret    
  40e0a6:	mov    al,ds:0xe675ab6a
  40e0ab:	xor    BYTE PTR [ecx],bl
  40e0ad:	popa   
  40e0ae:	ja     0x40e05d
  40e0b0:	pop    ebp
  40e0b1:	inc    edi
  40e0b2:	lahf   
  40e0b3:	scas   eax,DWORD PTR es:[edi]
  40e0b4:	shl    DWORD PTR [eax-0x4ae8f8bf],0xf4
  40e0bb:	std    
  40e0bc:	push   esp
  40e0bd:	mov    ecx,0xf2aedc2b
  40e0c2:	add    ecx,DWORD PTR [edi+0x2e7f1383]
  40e0c8:	cli    
  40e0c9:	retf   0x6af3
  40e0cc:	and    DWORD PTR [esi],esi
  40e0ce:	fcom   DWORD PTR [edx-0x612c8ad8]
  40e0d4:	idiv   al
  40e0d6:	dec    edi
  40e0d7:	mov    al,ds:0x2477bb94
  40e0dc:	loope  0x40e130
  40e0de:	pop    ecx
  40e0df:	xor    BYTE PTR [ecx-0x1e],ah
  40e0e2:	out    0xf3,al
  40e0e4:	dec    edi
  40e0e5:	(bad)  
  40e0e6:	pushf  
  40e0e7:	dec    ecx
  40e0e8:	or     dh,BYTE PTR [ebp+0x5d7803d3]
  40e0ee:	popw   ss
  40e0f0:	jmp    0xa44bc3f0
  40e0f5:	adc    DWORD PTR [edx+edi*4+0x3d],0xe6897d6e
  40e0fd:	std    
  40e0fe:	adc    bl,BYTE PTR [eax+0x70d3205]
  40e104:	test   ebp,edi
  40e106:	iret   
  40e107:	or     al,0xc9
  40e109:	sub    cl,BYTE PTR [eax]
  40e10b:	mov    ds:0x1867a603,al
  40e110:	and    bh,al
  40e112:	mov    ecx,0x7f858e3f
  40e117:	mov    ecx,0xf0b11b9b
  40e11c:	ds jp  0x40e0c3
  40e11f:	or     ah,BYTE PTR ds:0x227e7f64
  40e125:	jmp    0x2a594450
  40e12a:	or     cl,BYTE PTR [ecx+ecx*8-0x3d]
  40e12e:	aas    
  40e12f:	pop    ss
  40e130:	xor    al,0x5c
  40e132:	into   
  40e133:	mov    ecx,0xe54b8811
  40e138:	cmp    al,0x8a
  40e13a:	fld    QWORD PTR [ebx+ecx*1+0x77bf6679]
  40e141:	(bad)  
  40e142:	std    
  40e143:	push   eax
  40e144:	neg    DWORD PTR [ecx+0x135fa845]
  40e14a:	sti    
  40e14b:	mov    edx,0xac6bb95b
  40e150:	or     eax,DWORD PTR [ebx+0x14a41d0b]
  40e156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e157:	inc    edi
  40e158:	and    al,0x15
  40e15a:	ficomp WORD PTR ds:0x88e1cbbc
  40e160:	add    bl,ch
  40e162:	push   es
  40e163:	call   0x716b1636
  40e168:	xor    al,0xe0
  40e16a:	xchg   dh,ch
  40e16c:	shl    DWORD PTR [esi],cl
  40e16e:	mov    BYTE PTR [ecx-0x21],al
  40e171:	in     al,dx
  40e172:	jnp    0x40e1b6
  40e174:	cli    
  40e175:	push   0x2e
  40e177:	dec    ebx
  40e178:	adc    ebp,DWORD PTR [esp+edi*2-0x49]
  40e17c:	push   edi
  40e17d:	or     BYTE PTR [edx+0x328f85bd],bh
  40e183:	sbb    dl,BYTE PTR [ecx+eax*4+0x33]
  40e187:	cwde   
  40e188:	pushf  
  40e189:	pop    edi
  40e18a:	sub    cl,BYTE PTR [ebp+0x6f]
  40e18d:	xor    BYTE PTR [edi+0x38b75ec1],bh
  40e193:	mov    ecx,0x4f9b64e3
  40e198:	dec    ebx
  40e199:	cwde   
  40e19a:	or     BYTE PTR [edx+0x3e],al
  40e19d:	mov    ecx,0x36772f27
  40e1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a3:	jne    0x40e1b6
  40e1a5:	inc    esi
  40e1a6:	ins    BYTE PTR es:[edi],dx
  40e1a7:	push   0xffffffa7
  40e1a9:	in     al,0x80
  40e1ab:	out    dx,al
  40e1ac:	jmp    0xc052:0xc86e82ff
  40e1b3:	adc    al,0x35
  40e1b5:	ret    0x482
  40e1b8:	(bad)  
  40e1b9:	shl    BYTE PTR [edi],cl
  40e1bb:	and    bl,BYTE PTR [ecx]
  40e1bd:	mov    ds:0x86852e2b,al
  40e1c2:	sahf   
  40e1c3:	sub    ebp,DWORD PTR [ecx+0x30]
  40e1c6:	les    edx,FWORD PTR [ecx+ecx*8-0x7e30c2b8]
  40e1cd:	jge    0x40e1fe
  40e1cf:	mov    esi,0x62d5c39b
  40e1d4:	(bad)  
  40e1d5:	fadd   QWORD PTR [edi+0x1cc696d2]
  40e1db:	xchg   esp,eax
  40e1dc:	xchg   edi,eax
  40e1dd:	mov    dh,0xdc
  40e1df:	repz and BYTE PTR [eax-0x55],dl
  40e1e3:	in     eax,0xf4
  40e1e5:	mov    ds:0x9c630c74,eax
  40e1ea:	imul   ecx,DWORD PTR [edx],0x66
  40e1ed:	fisttp QWORD PTR [ebx+0x46]
  40e1f0:	lods   al,BYTE PTR ds:[esi]
  40e1f1:	and    eax,ecx
  40e1f3:	ins    DWORD PTR es:[edi],dx
  40e1f4:	pop    edx
  40e1f5:	jmp    0x50de:0xc25087cf
  40e1fc:	mov    bl,0xc
  40e1fe:	add    BYTE PTR [ebx+esi*2+0x38],ah
  40e202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e203:	xchg   esp,eax
  40e204:	leave  
  40e205:	js     0x40e27f
  40e207:	xor    dl,BYTE PTR [ebp+0x783384f2]
  40e20d:	cdq    
  40e20e:	gs jo  0x40e1c1
  40e211:	pop    edi
  40e212:	push   0x58
  40e214:	cdq    
  40e215:	shl    DWORD PTR [edx-0x21],0xd9
  40e219:	enter  0xb339,0xac
  40e21d:	inc    ebx
  40e21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e21f:	sub    eax,0x2c919b78
  40e224:	inc    ebx
  40e225:	cwde   
  40e226:	rcr    edx,cl
  40e228:	ror    DWORD PTR [edi],cl
  40e22a:	aam    0x84
  40e22c:	sub    ebp,DWORD PTR [edx+0x20]
  40e22f:	int    0x67
  40e231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e232:	push   ebx
  40e233:	sbb    DWORD PTR [ebp-0x3f],edi
  40e236:	or     eax,0x78dae4ec
  40e23b:	push   ds
  40e23c:	popf   
  40e23d:	pop    edx
  40e23e:	xor    DWORD PTR [esi+0x64d7223e],esp
  40e244:	or     ah,BYTE PTR [ebp+0x11]
  40e247:	addr16 in eax,dx
  40e249:	out    0x8e,al
  40e24b:	mov    ah,0x70
  40e24d:	sbb    edx,eax
  40e24f:	mov    ebp,0xde756f0b
  40e254:	sbb    ebp,ecx
  40e256:	pop    eax
  40e257:	lods   al,BYTE PTR ds:[esi]
  40e258:	pop    esp
  40e259:	das    
  40e25a:	test   BYTE PTR [ebp+esi*8-0x20],bh
  40e25e:	leave  
  40e25f:	and    al,0x34
  40e261:	pushf  
  40e262:	fistp  WORD PTR [ebx]
  40e264:	out    dx,eax
  40e265:	fst    QWORD PTR [esi-0x4d]
  40e268:	and    esi,edx
  40e26a:	(bad)  
  40e26b:	arpl   WORD PTR [eax-0x53],cx
  40e26e:	pushf  
  40e26f:	fcmove st,st(4)
  40e271:	push   edx
  40e272:	mov    ebx,DWORD PTR [ebx]
  40e274:	(bad)  
  40e275:	rol    ecx,0xab
  40e278:	jb     0x40e249
  40e27a:	pop    ss
  40e27b:	mov    ?,WORD PTR [eax-0x54]
  40e27e:	mov    bh,0x50
  40e280:	dec    edx
  40e281:	jmp    0x40e2c6
  40e283:	jns    0x40e2c4
  40e285:	adc    ebx,esp
  40e287:	outs   dx,BYTE PTR ds:[esi]
  40e288:	ret    0xb6bf
  40e28b:	and    BYTE PTR [eax+0x3f],dl
  40e28e:	lods   al,BYTE PTR ds:[esi]
  40e28f:	adc    eax,0x2721595b
  40e294:	xlat   BYTE PTR ds:[ebx]
  40e295:	shl    BYTE PTR [eax+0x44945feb],0xf
  40e29c:	loop   0x40e295
  40e29e:	xor    DWORD PTR [edi-0x80],ebx
  40e2a1:	sbb    bl,dl
  40e2a3:	dec    ebp
  40e2a4:	fild   QWORD PTR [eax]
  40e2a6:	pop    ss
  40e2a7:	aas    
  40e2a8:	dec    esi
  40e2a9:	ins    DWORD PTR es:[edi],dx
  40e2aa:	dec    ebp
  40e2ab:	xor    al,0x27
  40e2ad:	pop    ebp
  40e2ae:	(bad)  
  40e2af:	mov    al,0xde
  40e2b1:	int3   
  40e2b2:	in     al,0x34
  40e2b4:	dec    esp
  40e2b5:	pop    esi
  40e2b6:	jg     0x40e25c
  40e2b8:	push   edx
  40e2b9:	adc    ch,BYTE PTR [ecx+0x37]
  40e2bc:	push   edx
  40e2bd:	in     al,0xb5
  40e2bf:	xor    eax,0x7b35e79c
  40e2c4:	mov    WORD PTR [ebx],cs
  40e2c6:	sti    
  40e2c7:	mov    ch,0xb9
  40e2c9:	sysexit 
  40e2cb:	pop    ss
  40e2cc:	clc    
  40e2cd:	pop    ebp
  40e2ce:	loopne 0x40e33b
  40e2d0:	and    ebx,edi
  40e2d2:	loop   0x40e317
  40e2d4:	and    DWORD PTR [edi+eax*4+0x3d8c6015],ebx
  40e2db:	enter  0x1a3f,0x3c
  40e2df:	dec    esp
  40e2e0:	adc    cl,BYTE PTR [ecx-0x78e125a9]
  40e2e6:	mov    dl,0x9b
  40e2e8:	das    
  40e2e9:	imul   esp,DWORD PTR [ecx],0xa3b99342
  40e2ef:	jne    0x40e332
  40e2f1:	outs   dx,DWORD PTR ds:[esi]
  40e2f2:	mov    bh,0xbf
  40e2f4:	clc    
  40e2f5:	call   FWORD PTR [edi]
  40e2f7:	mov    ?,WORD PTR [ecx-0x15]
  40e2fa:	scas   eax,DWORD PTR es:[edi]
  40e2fb:	jo     0x40e2f1
  40e2fd:	call   FWORD PTR [eax-0x3a001cfb]
  40e303:	inc    ebx
  40e304:	fs sbb eax,0x21422f31
  40e30a:	sub    esi,DWORD PTR [ebx-0x7a]
  40e30d:	push   edi
  40e30e:	std    
  40e30f:	sbb    cl,BYTE PTR [ebx+ebx*1]
  40e312:	ucomiss xmm7,xmm0
  40e315:	call   0xd3b188b9
  40e31a:	mov    bh,0xb5
  40e31c:	ret    0xb400
  40e31f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40e321:	shl    DWORD PTR [esi+0x2fc554f3],1
  40e327:	mov    WORD PTR [eax],?
  40e329:	push   0x72
  40e32b:	fsubr  st(7),st
  40e32d:	jl     0x40e33f
  40e32f:	mov    ebx,0x3eb96923
  40e334:	leave  
  40e335:	adc    esi,DWORD PTR [edi-0x2355246]
  40e33b:	fldcw  WORD PTR [edi+0x5d6e998c]
  40e341:	dec    ebp
  40e342:	mov    dl,0x65
  40e344:	jns    0x40e2ec
  40e346:	aaa    
  40e347:	add    BYTE PTR [eax+0x6],dl
  40e34a:	push   ecx
  40e34b:	pop    es
  40e34c:	mov    esp,0x61def1fb
  40e351:	jo     0x40e306
  40e353:	xchg   esp,eax
  40e354:	pop    edi
  40e355:	cmp    DWORD PTR [ebx+0x68],edx
  40e358:	or     BYTE PTR [ecx],bh
  40e35a:	mov    BYTE PTR [ebx-0x2],dl
  40e35d:	pop    edi
  40e35e:	test   al,0x11
  40e360:	pop    edx
  40e361:	repnz out dx,al
  40e363:	mov    BYTE PTR [edx],cl
  40e365:	sbb    ecx,DWORD PTR [ebx]
  40e367:	mov    dl,BYTE PTR [esi]
  40e369:	mov    DWORD PTR [ecx],ecx
  40e36b:	mul    BYTE PTR [edx+0x47]
  40e36e:	(bad)  
  40e36f:	sbb    edx,ebx
  40e371:	(bad)  
  40e372:	in     al,0xc8
  40e374:	fstp   TBYTE PTR [edi+ebx*4+0x61]
  40e378:	sbb    BYTE PTR [eax-0x28d94bcb],dl
  40e37e:	mov    ?,WORD PTR [eax+0x48]
  40e381:	jmp    0x40e320
  40e383:	pop    esp
  40e384:	and    eax,0x9a1a2e70
  40e389:	sar    DWORD PTR [esi-0x5f],0x89
  40e38d:	or     BYTE PTR [ecx+eax*1+0x6a],dl
  40e391:	xchg   ecx,eax
  40e392:	jae    0x40e395
  40e394:	(bad)  
  40e395:	xlat   BYTE PTR ds:[ebx]
  40e396:	mov    WORD PTR [edi],?
  40e398:	test   eax,0x51e61e43
  40e39d:	dec    eax
  40e39e:	ret    0xa96f
  40e3a1:	add    ebp,DWORD PTR [edi-0x648f74f0]
  40e3a7:	sub    bh,dh
  40e3a9:	test   al,0x5a
  40e3ab:	push   esp
  40e3ac:	push   ebp
  40e3ad:	shl    BYTE PTR [edi],0xf7
  40e3b0:	mov    edx,0xc1640b3a
  40e3b5:	adc    ch,ah
  40e3b7:	mov    esi,0x34487100
  40e3bc:	mov    dl,0x55
  40e3be:	stos   DWORD PTR es:[edi],eax
  40e3bf:	lock fisttp QWORD PTR [eax]
  40e3c2:	pop    es
  40e3c3:	aaa    
  40e3c4:	gs jns 0x40e408
  40e3c7:	push   ebx
  40e3c8:	or     al,0x1c
  40e3ca:	cmp    BYTE PTR [ebp-0x50],bl
  40e3cd:	mov    cl,BYTE PTR [ecx]
  40e3cf:	out    0x13,al
  40e3d1:	mov    esi,0x793c7b93
  40e3d6:	adc    BYTE PTR [ebx+0x1bc01b7c],bh
  40e3dc:	or     dh,BYTE PTR ds:0x8de4543b
  40e3e2:	push   ebp
  40e3e3:	push   0xffffffa0
  40e3e5:	xchg   esi,eax
  40e3e6:	in     eax,0x81
  40e3e8:	cmp    al,0xfa
  40e3ea:	adc    al,bh
  40e3ec:	mov    dl,0xdb
  40e3ee:	mov    ?,WORD PTR [eax+0x943c8a3]
  40e3f4:	pushf  
  40e3f5:	mov    esi,DWORD PTR [eax]
  40e3f7:	mov    BYTE PTR [esi-0x765b25fc],bh
  40e3fd:	mov    ah,0x6b
  40e3ff:	popa   
  40e400:	add    al,0x35
  40e402:	fwait
  40e403:	sub    cl,BYTE PTR [edx]
  40e405:	push   ecx
  40e406:	jge    0x40e41a
  40e408:	pop    esp
  40e409:	xlat   BYTE PTR ds:[ebx]
  40e40a:	stc    
  40e40b:	stc    
  40e40c:	xchg   edx,eax
  40e40d:	ins    DWORD PTR es:[edi],dx
  40e40e:	stos   BYTE PTR es:[edi],al
  40e40f:	and    al,0xb9
  40e411:	and    eax,0x4ebe962c
  40e416:	test   BYTE PTR gs:[edx],ah
  40e419:	adc    eax,0xef069175
  40e41e:	clc    
  40e41f:	inc    ebp
  40e420:	jno    0x40e481
  40e422:	mov    BYTE PTR [ebx+0x5f],dl
  40e425:	inc    ecx
  40e426:	push   ss
  40e427:	cwde   
  40e428:	rcl    edi,1
  40e42a:	(bad)  
  40e42c:	shl    DWORD PTR [edi+0x7e],cl
  40e42f:	shl    BYTE PTR [eax+0x45],cl
  40e432:	inc    ecx
  40e433:	add    BYTE PTR [edx-0x2e8517c8],ch
  40e439:	fiadd  DWORD PTR [edi+eax*1-0x70101934]
  40e440:	mov    WORD PTR [ecx+0x3f9e4847],fs
  40e446:	ret    0xe894
  40e449:	mov    ebp,0x98024b8a
  40e44e:	(bad)  
  40e44f:	pop    ebp
  40e450:	cmp    esp,ecx
  40e452:	fs cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e455:	daa    
  40e456:	icebp  
  40e457:	pop    eax
  40e458:	or     cl,BYTE PTR [edi-0x20]
  40e45b:	fadd   QWORD PTR [edx]
  40e45d:	cld    
  40e45e:	(bad)  
  40e45f:	leave  
  40e460:	cwde   
  40e461:	push   ebx
  40e462:	popa   
  40e463:	mov    al,ds:0xa10704af
  40e468:	repz lea esp,[edi+ebx*4-0x5]
  40e46d:	mov    ebp,0x8765e8c3
  40e472:	pop    ds
  40e473:	leave  
  40e474:	aaa    
  40e475:	in     eax,dx
  40e476:	xchg   ebp,eax
  40e477:	outs   dx,DWORD PTR ds:[esi]
  40e478:	lds    eax,FWORD PTR [edi]
  40e47a:	sbb    ecx,DWORD PTR [ebx+0x55ebce3a]
  40e480:	outs   dx,DWORD PTR ds:[esi]
  40e481:	pop    edi
  40e482:	call   0x8dc2:0x657c8d18
  40e489:	sub    BYTE PTR ds:[ebx],ah
  40e48c:	push   edx
  40e48d:	cdq    
  40e48e:	push   edi
  40e48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e490:	pop    ds
  40e491:	ins    DWORD PTR es:[edi],dx
  40e492:	xlat   BYTE PTR ds:[ebx]
  40e493:	loop   0x40e4b6
  40e495:	sar    BYTE PTR [esi+eax*2-0x5d],0xa9
  40e49a:	sub    bl,BYTE PTR ds:[edx]
  40e49d:	(bad)  
  40e49e:	into   
  40e49f:	and    al,BYTE PTR [ebx]
  40e4a1:	mov    bl,0x9f
  40e4a3:	jne    0x40e498
  40e4a5:	stos   BYTE PTR es:[edi],al
  40e4a6:	fisubr WORD PTR ds:0x8aaf9ceb
  40e4ac:	push   ss
  40e4ad:	xchg   edx,eax
  40e4ae:	sub    al,0xcd
  40e4b0:	int    0xf8
  40e4b2:	pop    ss
  40e4b3:	outs   dx,BYTE PTR ds:[esi]
  40e4b4:	retf   0xbadb
  40e4b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b8:	imul   ecx,DWORD PTR [ebx+0x7ea8fa94],0xffffffed
  40e4bf:	sbb    eax,ecx
  40e4c1:	hlt    
  40e4c2:	jo     0x40e46e
  40e4c4:	xchg   BYTE PTR [ebx],bl
  40e4c6:	or     DWORD PTR [ebx],eax
  40e4c8:	adc    ebx,edi
  40e4ca:	jecxz  0x40e47f
  40e4cc:	mul    ebp
  40e4ce:	pop    esp
  40e4cf:	call   0xb561:0x65b37e33
  40e4d6:	vpsrad ymm0,ymm6,XMMWORD PTR [edi+0x40622a47]
  40e4de:	cli    
  40e4df:	dec    edx
  40e4e0:	jge    0x40e504
  40e4e2:	xor    al,0xef
  40e4e4:	imul   esp,DWORD PTR [edi+0x62c4ca60],0x90b2872d
  40e4ee:	fnstenv ds:0xe16b401b
  40e4f4:	scas   al,BYTE PTR es:[edi]
  40e4f5:	loop   0x40e551
  40e4f7:	in     al,dx
  40e4f8:	popa   
  40e4f9:	repz fistp QWORD PTR [esp+eax*8+0x5f528a93]
  40e501:	xor    cl,BYTE PTR [eax]
  40e503:	push   eax
  40e504:	ss dec ecx
  40e506:	xor    al,0xea
  40e508:	icebp  
  40e509:	jo     0x40e56a
  40e50b:	and    bh,cl
  40e50d:	aad    0x9d
  40e50f:	fidiv  WORD PTR [edi+0x264e4e3f]
  40e515:	push   ss
  40e516:	lods   al,BYTE PTR ds:[esi]
  40e517:	not    BYTE PTR [ebx-0x30]
  40e51a:	repnz int 0x24
  40e51d:	call   0x94ee1f02
  40e522:	mov    al,ds:0x3b8033b3
  40e527:	repnz mov BYTE PTR [edx-0x2f4035dd],bh
  40e52e:	aaa    
  40e52f:	xor    eax,0x439759a0
  40e534:	pop    es
  40e535:	lods   eax,DWORD PTR ds:[esi]
  40e536:	jnp    0x40e53d
  40e538:	pop    ecx
  40e539:	loopne 0x40e4bd
  40e53b:	push   0x48
  40e53d:	sahf   
  40e53e:	es ret 0x588
  40e542:	jecxz  0x40e517
  40e544:	ret    0xa043
  40e547:	out    0xc5,eax
  40e549:	and    al,0x54
  40e54b:	push   cs
  40e54c:	jnp    0x40e549
  40e54e:	xor    al,0xf7
  40e550:	pop    ecx
  40e551:	fiadd  DWORD PTR [edi-0x4f]
  40e554:	inc    edx
  40e555:	jae    0x40e51d
  40e557:	ret    0x4b3b
  40e55a:	jbe    0x40e5a3
  40e55c:	push   0xb61e4f29
  40e561:	mov    WORD PTR [ebx-0x75547540],fs
  40e567:	add    BYTE PTR [ecx+0x39da50e4],cl
  40e56d:	jmp    0x40e5e5
  40e56f:	mov    ah,0x69
  40e571:	iret   
  40e572:	pop    es
  40e573:	jbe    0x40e5c6
  40e575:	out    0x1c,eax
  40e577:	test   BYTE PTR [edx-0x80],dh
  40e57a:	rcl    BYTE PTR [edx],1
  40e57c:	lahf   
  40e57d:	xchg   ebp,esi
  40e57f:	mov    cl,0x2f
  40e581:	cs stos BYTE PTR es:[edi],al
  40e583:	in     al,0x3a
  40e585:	sub    DWORD PTR [eax-0x69cbe2c3],0xffffffa7
  40e58c:	xchg   DWORD PTR [esi+esi*8],eax
  40e58f:	inc    ebp
  40e590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e591:	cld    
  40e592:	and    ebp,DWORD PTR [ecx+0x30ba87]
  40e598:	ds pop ebx
  40e59a:	dec    esp
  40e59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e59c:	rdmsr  
  40e59e:	inc    edi
  40e59f:	rcl    BYTE PTR [edi+eiz*2+0x62],0xd3
  40e5a4:	sbb    eax,0x844a7801
  40e5a9:	inc    ebp
  40e5aa:	bound  ebx,QWORD PTR [ecx]
  40e5ac:	adc    ebx,edi
  40e5ae:	ror    BYTE PTR ds:[ebx+eiz*2],0xe3
  40e5b3:	fsub   st,st(5)
  40e5b5:	sub    DWORD PTR [edx-0x44],eax
  40e5b8:	mov    dl,0xd2
  40e5ba:	in     eax,dx
  40e5bb:	push   ds
  40e5bc:	repz pop ds
  40e5be:	cmc    
  40e5bf:	shl    DWORD PTR [esi],cl
  40e5c1:	adc    bl,bh
  40e5c3:	rcl    BYTE PTR [esi+0x29],0x2a
  40e5c7:	outs   dx,DWORD PTR ds:[esi]
  40e5c8:	popa   
  40e5c9:	aas    
  40e5ca:	inc    edx
  40e5cb:	outs   dx,DWORD PTR ds:[esi]
  40e5cc:	or     DWORD PTR [ebx-0x71],0x906dee4c
  40e5d3:	cli    
  40e5d4:	jne    0x40e652
  40e5d6:	jge    0x40e61c
  40e5d8:	sbb    ah,BYTE PTR [edi-0x7ef9266e]
  40e5de:	dec    ebp
  40e5df:	test   ebp,esp
  40e5e1:	arpl   si,bp
  40e5e3:	pop    edi
  40e5e4:	or     BYTE PTR [ebx],dl
  40e5e6:	lea    esi,ds:0x5b5af7ec
  40e5ec:	mov    eax,0xdb5bbcd1
  40e5f1:	jecxz  0x40e574
  40e5f3:	dec    ebx
  40e5f4:	dec    esp
  40e5f5:	mov    ecx,0x314c119a
  40e5fa:	aad    0xd7
  40e5fc:	jmp    0xc3e3b568
  40e601:	mov    ah,0xed
  40e603:	cmp    eax,0xe5826d0f
  40e608:	cdq    
  40e609:	pusha  
  40e60a:	ins    DWORD PTR es:[edi],dx
  40e60b:	fldcw  WORD PTR [ecx-0x2b5d092d]
  40e611:	das    
  40e612:	scas   al,BYTE PTR es:[edi]
  40e613:	xchg   esp,eax
  40e614:	(bad)  
  40e615:	push   ecx
  40e616:	in     al,0xff
  40e618:	loop   0x40e67b
  40e61a:	test   BYTE PTR [edx-0x7d],bl
  40e61d:	mov    ebp,0xc4b7fe42
  40e622:	add    eax,0xc1a49a5f
  40e627:	in     eax,0xf4
  40e629:	sahf   
  40e62a:	std    
  40e62b:	test   BYTE PTR [eax+0x58],0x63
  40e62f:	adc    al,0x2f
  40e631:	ror    DWORD PTR [ebp+0x3568561],0xd0
  40e638:	push   ds
  40e639:	ja     0x40e681
  40e63b:	imul   edi,DWORD PTR [ecx],0x94ffb214
  40e641:	(bad)  [edi]
  40e643:	dec    edi
  40e644:	ret    
  40e645:	jbe    0x40e62e
  40e647:	scas   eax,DWORD PTR es:[edi]
  40e648:	sub    BYTE PTR [ebx+0x1b0b7587],ah
  40e64e:	add    al,0x81
  40e650:	sub    eax,0x592faaec
  40e655:	ror    DWORD PTR [ebx+0x64259a75],1
  40e65b:	data16 out dx,al
  40e65d:	pop    esp
  40e65e:	(bad)  
  40e65f:	xor    ebp,DWORD PTR [ebx]
  40e661:	int    0x57
  40e663:	popf   
  40e664:	mov    edx,0x1bbf91ab
  40e669:	inc    ebp
  40e66a:	cmp    edi,eax
  40e66c:	and    ah,BYTE PTR ds:0x4bd41e34
  40e672:	(bad)  
  40e673:	mov    al,ds:0xef4020de
  40e678:	inc    edi
  40e679:	xchg   ecx,eax
  40e67a:	imul   edi,DWORD PTR [esi-0x2d50549a],0xffffffa0
  40e681:	or     edx,DWORD PTR [ebx]
  40e683:	pop    ecx
  40e684:	outs   dx,BYTE PTR ds:[esi]
  40e685:	adc    di,WORD PTR [esi-0x29eeb29]
  40e68c:	pop    esi
  40e68d:	ds pusha 
  40e68f:	jns    0x40e659
  40e691:	mov    edx,0xafb7fe8d
  40e696:	data16 stos BYTE PTR es:[edi],al
  40e698:	hlt    
  40e699:	xchg   edx,eax
  40e69a:	xor    eax,0x13f19dd0
  40e69f:	or     DWORD PTR [edi],esi
  40e6a1:	push   0xffffffd4
  40e6a3:	mov    dh,0x2a
  40e6a5:	lea    ebp,[edi-0x20]
  40e6a8:	adc    DWORD PTR [edx],eax
  40e6aa:	pop    es
  40e6ab:	jle    0x40e6ce
  40e6ad:	fidivr WORD PTR [edi-0x574197d6]
  40e6b3:	ins    BYTE PTR es:[edi],dx
  40e6b4:	dec    ebx
  40e6b5:	dec    ebx
  40e6b6:	mov    al,BYTE PTR [ebx]
  40e6b8:	mov    ebp,0x12b13ae
  40e6bd:	arpl   di,di
  40e6bf:	cmc    
  40e6c0:	ror    DWORD PTR [esp+ebx*4+0x1250340a],0x82
  40e6c8:	(bad)  
  40e6ca:	xchg   DWORD PTR [eax+0x1],edi
  40e6cd:	jo     0x40e6e5
  40e6cf:	xor    dl,BYTE PTR [eax+edi*4-0x4807d51d]
  40e6d6:	test   esi,ecx
  40e6d8:	outs   dx,BYTE PTR ds:[esi]
  40e6d9:	std    
  40e6da:	mov    edi,0x7b850245
  40e6df:	retf   
  40e6e0:	inc    edi
  40e6e1:	and    al,bh
  40e6e3:	mov    ebx,0x34149628
  40e6e8:	mov    dl,0xc4
  40e6ea:	mov    ah,0xac
  40e6ec:	in     al,dx
  40e6ed:	iret   
  40e6ee:	nop
  40e6ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6f0:	inc    eax
  40e6f1:	or     esp,DWORD PTR [ecx+0x23c4d45d]
  40e6f7:	(bad)  [ebx-0x4647d64]
  40e6fd:	adc    eax,0xc0ea2006
  40e702:	int    0xca
  40e704:	sbb    ecx,DWORD PTR [eax-0x57]
  40e707:	(bad)  
  40e708:	fstp   TBYTE PTR [eax+0x39657302]
  40e70e:	or     dh,ch
  40e710:	cmc    
  40e711:	cmp    BYTE PTR [esi+0x3d],dh
  40e714:	and    BYTE PTR [edx-0x72968e2],0x21
  40e71b:	(bad)  
  40e71c:	jo     0x40e6f7
  40e71e:	add    DWORD PTR [edx+0x51c1d1e5],esp
  40e724:	outs   dx,BYTE PTR ds:[esi]
  40e725:	mov    ebp,0xd61f9c10
  40e72a:	or     DWORD PTR [edi+ebx*4-0x4c844c3d],edi
  40e731:	je     0x40e729
  40e733:	adc    eax,DWORD PTR [edi]
  40e735:	jmp    0x6cd09227
  40e73a:	mov    ebp,0x5b1dee8f
  40e73f:	add    al,BYTE PTR [edx+0x13]
  40e742:	sahf   
  40e743:	or     edx,ecx
  40e745:	lahf   
  40e746:	pop    edi
  40e747:	loop   0x40e6d2
  40e749:	hlt    
  40e74a:	and    DWORD PTR [edx-0x12],edx
  40e74d:	and    cl,cl
  40e74f:	in     al,0x19
  40e751:	sbb    BYTE PTR [edi+0x10],0xc9
  40e755:	push   edi
  40e756:	add    ah,bh
  40e758:	ficom  DWORD PTR [ebx-0x588cc562]
  40e75e:	inc    ecx
  40e760:	arpl   sp,sp
  40e762:	shl    BYTE PTR [esp+eiz*2+0x4016e55c],1
  40e769:	cmp    BYTE PTR [edx-0x6e6ecd43],bl
  40e76f:	adc    DWORD PTR [eax+edx*4+0x70],esp
  40e773:	push   0xfcca707b
  40e778:	(bad)  
  40e779:	cmp    al,0x28
  40e77b:	cdq    
  40e77c:	shl    BYTE PTR [esi],1
  40e77e:	xor    eax,0xd1fdfd27
  40e783:	sbb    esp,DWORD PTR [edx]
  40e785:	ds and eax,0x398cb28e
  40e78b:	inc    esp
  40e78c:	pop    esp
  40e78d:	ss int 0xc
  40e790:	lock lahf 
  40e792:	mov    esi,0x1f88ffae
  40e797:	arpl   WORD PTR [esi],bp
  40e799:	xor    eax,0x11d858dc
  40e79e:	xchg   edi,eax
  40e79f:	(bad)  
  40e7a0:	dec    ecx
  40e7a1:	jmp    0x3117:0x53ae11e0
  40e7a8:	mov    eax,DWORD PTR [ebx-0x3f3e6ef2]
  40e7ae:	mov    ebx,0xf0b7ae5b
  40e7b3:	(bad)  
  40e7b5:	push   esi
  40e7b6:	ret    
  40e7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b8:	mov    WORD PTR [ecx-0x54db477e],ds
  40e7be:	pop    ss
  40e7bf:	jb     0x40e80b
  40e7c1:	std    
  40e7c2:	popa   
  40e7c3:	(bad)  
  40e7c4:	mov    ch,0x75
  40e7c6:	mov    ds:0x2d342bdd,eax
  40e7cb:	push   ebx
  40e7cc:	adc    ecx,ebp
  40e7ce:	cmp    BYTE PTR [ecx+ecx*2-0x17],ch
  40e7d2:	adc    bl,BYTE PTR [ebp-0x74]
  40e7d5:	sahf   
  40e7d6:	nop    DWORD PTR [ecx-0x24]
  40e7da:	mov    edi,0x6964479d
  40e7df:	cld    
  40e7e0:	pop    edx
  40e7e1:	inc    ecx
  40e7e2:	adc    esi,edx
  40e7e4:	(bad)  [ebp-0x12040268]
  40e7ea:	nop
  40e7eb:	ss jmp 0xae4b:0x99d43619
  40e7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7f4:	out    0x38,al
  40e7f6:	adc    DWORD PTR [edi-0x57f8caa3],edx
  40e7fc:	or     bh,BYTE PTR [esi+ecx*8+0x65]
  40e800:	test   esp,ebp
  40e802:	fcomp  QWORD PTR [eax-0x2679850e]
  40e808:	xor    DWORD PTR [ebx-0x3a],esi
  40e80b:	and    esi,eax
  40e80d:	dec    ebp
  40e80e:	shr    DWORD PTR [esi+0x4b],0x11
  40e812:	(bad)  
  40e813:	in     al,dx
  40e814:	test   al,0xd
  40e816:	(bad)  
  40e817:	out    0xfe,al
  40e819:	int3   
  40e81a:	das    
  40e81b:	or     DWORD PTR [edx+edi*8-0x507497bc],0x3d
  40e823:	jle    0x40e84c
  40e825:	add    ebp,esi
  40e827:	arpl   WORD PTR [edx-0x4290f259],di
  40e82d:	in     al,0x7f
  40e82f:	fucomi st,st(6)
  40e831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e832:	push   ebp
  40e833:	pop    ebx
  40e834:	push   ecx
  40e835:	inc    ebp
  40e836:	test   eax,0x7f166295
  40e83b:	and    ah,BYTE PTR [edi]
  40e83d:	add    bl,BYTE PTR [ecx-0x77]
  40e840:	add    bl,dh
  40e842:	jecxz  0x40e7cc
  40e844:	jl     0x40e8b5
  40e846:	fst    DWORD PTR [edx-0x148a98d9]
  40e84c:	int    0x4d
  40e84e:	xlat   BYTE PTR ds:[ebx]
  40e84f:	pop    ss
  40e850:	xor    BYTE PTR [edx+0x5da8d4e1],al
  40e856:	mov    ecx,0x449e3788
  40e85b:	jecxz  0x40e8c3
  40e85d:	ret    
  40e85e:	ret    
  40e85f:	test   esi,esp
  40e861:	and    eax,0x9a405d04
  40e866:	test   edi,esp
  40e868:	dec    eax
  40e869:	aaa    
  40e86a:	ret    0xb2bb
  40e86d:	xchg   BYTE PTR [edi+0x27],ch
  40e870:	jl     0x40e8bc
  40e872:	push   0xffffffcd
  40e874:	clc    
  40e875:	inc    ebp
  40e876:	pop    ebx
  40e877:	test   BYTE PTR [edx+0x70],dl
  40e87a:	mov    ch,0xf4
  40e87c:	inc    ebp
  40e87d:	addr16 data16 daa 
  40e880:	cdq    
  40e881:	fldcw  WORD PTR [esi]
  40e883:	imul   esi,DWORD PTR [edx+ebp*8],0x6abbe4e2
  40e88a:	or     eax,0x6f632d32
  40e88f:	cwde   
  40e890:	pop    ebx
  40e891:	push   cs
  40e892:	inc    edx
  40e893:	enter  0xbb7e,0xeb
  40e897:	adc    BYTE PTR [ebx],0x6c
  40e89a:	pop    es
  40e89b:	sbb    eax,0x711689c1
  40e8a0:	xor    BYTE PTR [ecx],cl
  40e8a2:	cwde   
  40e8a3:	imul   edi,edx,0x73
  40e8a6:	sbb    cl,al
  40e8a8:	fnsave [edi]
  40e8aa:	push   eax
  40e8ab:	int3   
  40e8ac:	jne    0x40e851
  40e8ae:	push   edx
  40e8af:	outs   dx,DWORD PTR ds:[esi]
  40e8b0:	cmc    
  40e8b1:	xor    al,0x7e
  40e8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b4:	pop    ebp
  40e8b5:	addr16 popa 
  40e8b7:	xchg   edi,eax
  40e8b8:	stos   BYTE PTR es:[edi],al
  40e8b9:	mov    edx,0xe2f6e903
  40e8be:	xor    DWORD PTR [edi+0x3],ecx
  40e8c1:	mov    eax,es
  40e8c3:	js     0x40e88d
  40e8c5:	push   edi
  40e8c6:	dec    edi
  40e8c7:	test   al,0xe8
  40e8c9:	xchg   edx,eax
  40e8ca:	xchg   ecx,eax
  40e8cb:	mov    ebp,0xe35ec7ad
  40e8d0:	not    DWORD PTR [edx+0x67977d41]
  40e8d6:	and    bl,BYTE PTR [ecx]
  40e8d8:	sbb    cl,BYTE PTR [ecx+esi*2-0x4cc59a81]
  40e8df:	dec    edx
  40e8e0:	aaa    
  40e8e1:	fs ds xchg edi,eax
  40e8e4:	jo     0x40e958
  40e8e6:	les    edi,FWORD PTR [edi]
  40e8e8:	xchg   edx,eax
  40e8e9:	push   ecx
  40e8ea:	fld    QWORD PTR [edx+ebp*4]
  40e8ed:	xor    eax,0xa2523d80
  40e8f2:	mov    dh,0x21
  40e8f4:	sbb    DWORD PTR [ebx+0x25],edi
  40e8f7:	rcr    DWORD PTR ds:0x958aa960,0x27
  40e8fe:	pop    edi
  40e8ff:	sub    ebp,eax
  40e901:	cmp    dh,BYTE PTR [esi-0x4520e069]
  40e907:	mov    eax,0xdfbba965
  40e90c:	push   eax
  40e90d:	push   esp
  40e90e:	test   dl,0x8c
  40e911:	pop    ds
  40e912:	cwde   
  40e913:	push   ebx
  40e914:	xor    edi,DWORD PTR [ebp-0x6e]
  40e917:	adc    bh,dh
  40e919:	fcom   QWORD PTR [ebx+0x1d9a47b6]
  40e91f:	imul   DWORD PTR [esi-0x45]
  40e922:	mov    dh,0xa1
  40e924:	cwde   
  40e925:	aad    0xcd
  40e927:	mov    DWORD PTR [edx+0x9],eax
  40e92a:	mov    ds:0xd282c40d,eax
  40e92f:	xchg   esp,eax
  40e930:	ror    BYTE PTR [eax*8+0x65cdc0b5],cl
  40e937:	lock jmp 0x40e930
  40e93a:	gs mov ah,0xee
  40e93d:	xchg   BYTE PTR [eax-0x581f3533],ch
  40e943:	and    BYTE PTR [esp+edi*8-0x4a2857db],al
  40e94a:	dec    eax
  40e94b:	out    dx,al
  40e94c:	js     0x40e94e
  40e94e:	gs add al,0x5e
  40e951:	fld    st(2)
  40e953:	cld    
  40e954:	sub    DWORD PTR [eax-0x22ddd326],ebx
  40e95a:	and    eax,DWORD PTR [eax+ebx*4-0xc]
  40e95e:	sahf   
  40e95f:	fld1   
  40e961:	sti    
  40e962:	xchg   sp,ax
  40e964:	ins    DWORD PTR es:[edi],dx
  40e965:	enter  0x9831,0xf6
  40e969:	cmp    al,0xa7
  40e96b:	lds    ebp,FWORD PTR [ebx+0x1e]
  40e96e:	jne    0x40e99f
  40e970:	outs   dx,DWORD PTR ds:[esi]
  40e971:	pop    edi
  40e972:	or     eax,0x722c18bc
  40e977:	pushf  
  40e978:	cmp    ch,dh
  40e97a:	mov    esi,0x9b84ecc4
  40e97f:	mov    bh,dl
  40e981:	loop   0x40e958
  40e983:	adc    al,dh
  40e985:	stc    
  40e986:	fs in  eax,0xe0
  40e989:	mov    dh,0x8d
  40e98b:	call   0x2ced:0xbe2eec06
  40e992:	test   eax,0x4cf347e1
  40e997:	dec    ebx
  40e998:	mov    ch,0x6f
  40e99a:	inc    ebx
  40e99b:	retf   
  40e99c:	xchg   DWORD PTR [edx-0x8c2c92f],eax
  40e9a2:	ja     0x40e956
  40e9a4:	fcom   DWORD PTR [esi+0x33]
  40e9a7:	pop    eax
  40e9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a9:	adc    eax,0x990938eb
  40e9ae:	scas   eax,DWORD PTR es:[edi]
  40e9af:	cmp    al,0x63
  40e9b1:	lock ficomp DWORD PTR [esi+0x5a40a359]
  40e9b8:	mov    al,0xc8
  40e9ba:	jle    0x40e9b7
  40e9bc:	faddp  st(2),st
  40e9be:	(bad)  [ebx+0x14]
  40e9c1:	aad    0xcc
  40e9c3:	(bad)
  40e9c6:	mov    al,0xe0
  40e9c8:	aad    0x5f
  40e9ca:	sbb    al,0x3b
  40e9cc:	lock sub dl,BYTE PTR [ebx]
  40e9cf:	mov    bh,0xb5
  40e9d1:	pop    esi
  40e9d2:	cdq    
  40e9d3:	into   
  40e9d4:	jmp    0x40ea48
  40e9d6:	add    edi,ebp
  40e9d8:	loop   0x40e9d9
  40e9da:	cmc    
  40e9db:	sub    al,0x1a
  40e9dd:	xchg   esi,eax
  40e9de:	sub    bl,ch
  40e9e0:	push   edx
  40e9e1:	xchg   esp,eax
  40e9e2:	call   0x5deb:0xd08ba59a
  40e9e9:	sub    BYTE PTR [eax+ebp*8+0x34032ead],bl
  40e9f0:	imul   BYTE PTR [esi]
  40e9f2:	ins    DWORD PTR es:[edi],dx
  40e9f3:	xchg   ebx,eax
  40e9f4:	jmp    0xfe0f7f4f
  40e9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9fa:	pop    es
  40e9fb:	or     eax,0xa57dac97
  40ea00:	nop
  40ea01:	mov    al,ds:0xab1c877
  40ea06:	mov    al,ds:0xabc83f2d
  40ea0b:	pop    ds
  40ea0c:	mov    bl,BYTE PTR [edx]
  40ea0e:	rcr    DWORD PTR [ebp+0x5e9d2357],0xbe
  40ea15:	retf   
  40ea16:	aad    0x52
  40ea18:	push   cs
  40ea19:	outs   dx,DWORD PTR ds:[esi]
  40ea1a:	jmp    0x3368:0x38f52492
  40ea21:	xchg   esi,eax
  40ea22:	push   esp
  40ea23:	bound  edi,QWORD PTR [ebp-0x4a]
  40ea26:	mov    ebp,DWORD PTR ss:[ecx+0x5e]
  40ea2a:	in     al,0xb8
  40ea2c:	rcl    DWORD PTR [esi-0x7c],1
  40ea2f:	add    ch,bl
  40ea31:	add    DWORD PTR [edi],ecx
  40ea33:	enter  0x9556,0x34
  40ea37:	add    BYTE PTR [eax],ah
  40ea39:	rol    ebx,1
  40ea3b:	fst    QWORD PTR [edi+0x38892ec9]
  40ea41:	xchg   ecx,eax
  40ea42:	out    0x34,al
  40ea44:	pusha  
  40ea45:	mov    cl,0x23
  40ea47:	test   DWORD PTR ds:0xad01d6bb,edi
  40ea4d:	mov    gs,esp
  40ea4f:	cli    
  40ea50:	shl    DWORD PTR [eax+0x7c],1
  40ea53:	mov    bl,0x5a
  40ea55:	or     ebp,DWORD PTR [eax]
  40ea57:	sub    edi,ebp
  40ea59:	dec    ecx
  40ea5a:	stos   DWORD PTR es:[edi],eax
  40ea5b:	push   ds
  40ea5c:	cs gs mov esp,0xf1d352d0
  40ea63:	xchg   edx,eax
  40ea64:	test   DWORD PTR [eax+0x1bf70515],ecx
  40ea6a:	inc    edx
  40ea6b:	cli    
  40ea6c:	sub    esi,esp
  40ea6e:	mov    edi,0xb3f54296
  40ea73:	jg     0x40ea4d
  40ea75:	das    
  40ea76:	(bad)  
  40ea77:	ins    DWORD PTR es:[edi],dx
  40ea78:	pusha  
  40ea79:	retf   
  40ea7a:	enter  0x219,0x86
  40ea7e:	push   0xfffffffa
  40ea80:	jge    0x40ea7e
  40ea82:	popf   
  40ea83:	js     0x40ea3f
  40ea85:	leave  
  40ea86:	sbb    DWORD PTR [ebx+0x4],edx
  40ea89:	xor    edi,DWORD PTR [ebx+edx*2+0x56]
  40ea8d:	push   ebp
  40ea8e:	jge    0x40eab0
  40ea90:	xchg   ebp,eax
  40ea91:	sbb    al,0x6f
  40ea93:	mov    esp,0x567b2471
  40ea98:	mov    ds:0x44e2de05,eax
  40ea9d:	popa   
  40ea9e:	or     al,cl
  40eaa0:	popf   
  40eaa1:	mov    BYTE PTR [esi-0x3c99210],0xc5
  40eaa8:	jnp    0x40ea91
  40eaaa:	or     eax,0xa0cc9b1
  40eaaf:	jb     0x40ea53
  40eab1:	repnz shr DWORD PTR [ecx-0x20ab4d0f],cl
  40eab8:	pop    esp
  40eab9:	jge    0x40ea66
  40eabb:	retf   
  40eabc:	dec    esp
  40eabd:	xor    cl,cl
  40eabf:	mov    esp,0xbea412dd
  40eac4:	mov    ds:0xf5921174,eax
  40eac9:	out    0x60,eax
  40eacb:	mov    ds:0x542ba9a4,al
  40ead0:	cmp    al,0x11
  40ead2:	(bad)  
  40ead3:	push   esp
  40ead4:	adc    DWORD PTR [ebx],ecx
  40ead6:	sbb    BYTE PTR [ebx-0x181542b],al
  40eadc:	or     eax,0xc54b408e
  40eae1:	test   BYTE PTR [ecx+0x4e6bce20],al
  40eae7:	xchg   edi,eax
  40eae8:	xchg   ebp,eax
  40eae9:	xor    al,0x56
  40eaeb:	push   cs
  40eaec:	fsubr  st,st(6)
  40eaee:	(bad)  
  40eaef:	iret   
  40eaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaf2:	popf   
  40eaf3:	mov    eax,ds:0x5b79e500
  40eaf8:	into   
  40eaf9:	std    
  40eafa:	pop    esi
  40eafb:	sbb    BYTE PTR [edi-0xf],cl
  40eafe:	sar    DWORD PTR [edi+edx*2],0x65
  40eb02:	sbb    al,0xa
  40eb04:	mov    ch,0xeb
  40eb06:	xor    DWORD PTR [ecx-0x4d4064e7],0x473fc6dc
  40eb10:	push   es
  40eb11:	push   ebx
  40eb12:	mov    ebp,DWORD PTR [esi]
  40eb14:	jno    0x40eb45
  40eb16:	push   eax
  40eb17:	mov    dh,0x6
  40eb19:	pop    esp
  40eb1a:	loope  0x40eac8
  40eb1c:	sub    al,0x44
  40eb1e:	adc    BYTE PTR [eax-0x70ff1019],ch
  40eb24:	inc    edi
  40eb25:	(bad)  
  40eb26:	jle    0x40eb6f
  40eb28:	xor    BYTE PTR ss:[esi],al
  40eb2b:	cmp    DWORD PTR [ebp+0x5d927a4e],edi
  40eb31:	mov    ds:0xaac29b8c,eax
  40eb36:	aam    0x93
  40eb38:	outs   dx,DWORD PTR ds:[esi]
  40eb39:	cmp    al,0x31
  40eb3b:	test   DWORD PTR [ecx],esi
  40eb3d:	push   ss
  40eb3e:	rol    BYTE PTR [ebp-0x4513c5c9],cl
  40eb44:	and    al,0x88
  40eb46:	push   ebp
  40eb47:	mov    ah,0xe3
  40eb49:	cmp    ebx,DWORD PTR [ecx-0x12]
  40eb4c:	rol    bh,0xe7
  40eb4f:	add    eax,0xb09218f5
  40eb54:	shl    ch,cl
  40eb56:	mov    ch,BYTE PTR [ebx+0x21]
  40eb59:	add    eax,0x28c9b372
  40eb5f:	push   ecx
  40eb60:	in     al,dx
  40eb61:	neg    BYTE PTR [ecx+ebx*1]
  40eb64:	mov    dl,0xb
  40eb66:	adc    BYTE PTR [edx],dl
  40eb68:	cli    
  40eb69:	icebp  
  40eb6a:	ins    BYTE PTR es:[edi],dx
  40eb6b:	mov    BYTE PTR [edi-0x80],0x6c
  40eb6f:	sub    DWORD PTR [ebp+0x5a6a613],esp
  40eb75:	stos   BYTE PTR es:[edi],al
  40eb76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb77:	adc    eax,ebx
  40eb79:	mov    dh,bl
  40eb7b:	mov    BYTE PTR [edx],al
  40eb7d:	ds or  bl,al
  40eb80:	clc    
  40eb81:	mov    ds:0x18d7115f,al
  40eb86:	aaa    
  40eb87:	je     0x40eb11
  40eb89:	mov    bl,0xaf
  40eb8b:	(bad)  
  40eb8c:	ins    DWORD PTR es:[edi],dx
  40eb8d:	mov    edx,0x5d6388a3
  40eb92:	xchg   esi,eax
  40eb93:	shl    BYTE PTR [eax+0x71],1
  40eb96:	hlt    
  40eb97:	jb     0x40eb21
  40eb99:	add    ebx,DWORD PTR [eax]
  40eb9b:	xchg   edx,eax
  40eb9c:	dec    ebp
  40eb9d:	jge    0x40eba2
  40eb9f:	loopne 0x40ebed
  40eba1:	jb     0x40ec1f
  40eba3:	pop    esi
  40eba4:	push   edx
  40eba5:	daa    
  40eba6:	xchg   edi,eax
  40eba7:	inc    edx
  40eba8:	(bad)  
  40eba9:	pop    esp
  40ebaa:	cmp    DWORD PTR ds:0x4a85aea5,esp
  40ebb0:	jno    0x40ec03
  40ebb2:	cdq    
  40ebb3:	ins    DWORD PTR es:[edi],dx
  40ebb4:	mov    esp,esi
  40ebb6:	out    dx,eax
  40ebb7:	popf   
  40ebb8:	or     ch,bl
  40ebba:	mov    cl,0xd5
  40ebbc:	pop    ds
  40ebbd:	std    
  40ebbe:	loopne 0x40ebfd
  40ebc0:	inc    ecx
  40ebc1:	addr16 mov edi,cr3
  40ebc5:	push   ds
  40ebc6:	add    BYTE PTR [eax],dl
  40ebc8:	sahf   
  40ebc9:	adc    ah,bl
  40ebcb:	(bad)  
  40ebcc:	xchg   ecx,eax
  40ebcd:	ret    0xb3c2
  40ebd0:	aad    0x29
  40ebd2:	jmp    DWORD PTR [ebx]
  40ebd4:	sbb    ebx,DWORD PTR [bp+si-0xad8]
  40ebd9:	adc    DWORD PTR [ecx],ecx
  40ebdb:	sub    BYTE PTR [esi+0x5],cl
  40ebde:	jo     0x40eb7f
  40ebe0:	and    BYTE PTR [esi],al
  40ebe2:	sub    al,BYTE PTR [esp+edi*8-0x5dd569bb]
  40ebe9:	sahf   
  40ebea:	pop    eax
  40ebeb:	(bad)  
  40ebec:	jecxz  0x40ec65
  40ebee:	stc    
  40ebef:	pop    esi
  40ebf0:	fistp  QWORD PTR [edi-0x34e5696c]
  40ebf6:	push   0xe22d0add
  40ebfb:	out    0xc4,eax
  40ebfd:	mov    dh,0x9
  40ebff:	push   esp
  40ec00:	stos   DWORD PTR es:[edi],eax
  40ec01:	pushf  
  40ec02:	pop    ebp
  40ec03:	clc    
  40ec04:	mov    al,0x10
  40ec06:	or     al,0x92
  40ec08:	es aas 
  40ec0a:	sub    eax,0xb275fec0
  40ec0f:	hlt    
  40ec10:	and    al,0x12
  40ec12:	clc    
  40ec13:	hlt    
  40ec14:	push   ds
  40ec15:	mov    ebp,0x620707e4
  40ec1a:	and    DWORD PTR ds:0x55dad4ab,edi
  40ec20:	mov    ebp,0x33a40ce1
  40ec25:	mov    ds:0x36396883,eax
  40ec2a:	retf   0xd6eb
  40ec2d:	sbb    edi,DWORD PTR [edi-0x4f52d22d]
  40ec33:	jl     0x40ecb1
  40ec35:	rcr    BYTE PTR [edi+0x2267e4b1],cl
  40ec3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec3c:	push   ebx
  40ec3d:	fcomp  QWORD PTR [edi+ebx*2+0x42]
  40ec41:	stc    
  40ec42:	xor    al,0xa4
  40ec44:	mov    al,ds:0xead6bd86
  40ec49:	push   ebp
  40ec4a:	xchg   ebp,eax
  40ec4b:	loopne 0x40ec91
  40ec4d:	es jns 0x40ebf6
  40ec50:	xchg   ebp,eax
  40ec51:	jo     0x40ec7f
  40ec53:	loopne 0x40ebf3
  40ec55:	pop    es
  40ec56:	popf   
  40ec57:	mov    dl,0x5e
  40ec59:	sub    al,bh
  40ec5b:	addr16 das 
  40ec5d:	loope  0x40ec48
  40ec5f:	call   0x5f94:0x2e37c78a
  40ec66:	repz dec edx
  40ec68:	es ss enter 0xf8f,0x2c
  40ec6e:	push   edi
  40ec6f:	loop   0x40ecb9
  40ec71:	pop    esp
  40ec72:	xchg   bl,dh
  40ec74:	hlt    
  40ec75:	xchg   ecx,eax
  40ec76:	clc    
  40ec77:	push   esp
  40ec78:	div    esi
  40ec7a:	lea    ebp,[edx+0xc]
  40ec7d:	xor    BYTE PTR [esi+0x3a28b711],ah
  40ec83:	mov    ebp,0x2c7eeda4
  40ec88:	push   esi
  40ec89:	xchg   edx,eax
  40ec8a:	mov    ds:0x2278e707,eax
  40ec8f:	xor    ah,BYTE PTR gs:[ebx]
  40ec92:	pop    ss
  40ec93:	sti    
  40ec94:	(bad)  
  40ec96:	push   esp
  40ec97:	outs   dx,DWORD PTR ds:[esi]
  40ec98:	mov    bh,0xd4
  40ec9a:	out    dx,al
  40ec9b:	or     al,0x8f
  40ec9d:	sti    
  40ec9e:	sbb    al,0x4
  40eca0:	or     al,bh
  40eca2:	fcom   DWORD PTR [ecx+0x67]
  40eca5:	fist   DWORD PTR [ecx]
  40eca7:	xor    DWORD PTR [ebp-0x75da271e],esp
  40ecad:	mov    dh,0x5a
  40ecaf:	aad    0xa9
  40ecb1:	ss push esi
  40ecb3:	jno    0x40ec39
  40ecb5:	sbb    eax,0xa316f0c2
  40ecba:	inc    edi
  40ecbb:	(bad)  
  40ecbd:	in     al,dx
  40ecbe:	push   cs
  40ecbf:	push   cs
  40ecc0:	fstp   TBYTE PTR [edx-0x35]
  40ecc3:	add    eax,0xf1671778
  40ecc8:	shl    DWORD PTR [edi+0x3d],0xc0
  40eccc:	and    BYTE PTR [edx+0x19],0x14
  40ecd0:	popa   
  40ecd1:	ins    BYTE PTR es:[edi],dx
  40ecd2:	cmp    edi,ecx
  40ecd4:	inc    ebp
  40ecd5:	or     dl,dh
  40ecd7:	pop    esi
  40ecd8:	or     BYTE PTR [edi+0x5e],dh
  40ecdb:	sub    bh,BYTE PTR [esi+0x27]
  40ecde:	jp     0x40ed5f
  40ece0:	mov    al,ds:0xc681f5b7
  40ece5:	and    eax,0x59c38660
  40ecea:	and    DWORD PTR [edx-0x8],edx
  40eced:	inc    edi
  40ecee:	xchg   edi,eax
  40ecef:	outs   dx,DWORD PTR ds:[esi]
  40ecf0:	popf   
  40ecf1:	pusha  
  40ecf2:	xlat   BYTE PTR ds:[ebx]
  40ecf3:	test   DWORD PTR [esi],0x9ae8a981
  40ecf9:	push   cs
  40ecfa:	and    al,0x74
  40ecfc:	mov    bl,0x71
  40ecfe:	cmp    BYTE PTR [eax-0x7bff7f48],cl
  40ed04:	cmp    al,0xba
  40ed06:	ins    DWORD PTR es:[edi],dx
  40ed07:	(bad)  
  40ed09:	sub    DWORD PTR gs:[edi-0x60fd8468],0xb89e9304
  40ed14:	push   0xf3ae63a4
  40ed19:	dec    edi
  40ed1a:	mul    BYTE PTR fs:[eax+edi*8+0x7f]
  40ed1f:	sar    ecx,1
  40ed21:	aad    0xbe
  40ed23:	jns    0x40ecce
  40ed25:	jns    0x40ed3b
  40ed27:	shr    esp,cl
  40ed29:	add    esi,DWORD PTR ds:0x1d23dca8
  40ed2f:	push   ebx
  40ed30:	xchg   ebp,ecx
  40ed32:	outs   dx,DWORD PTR ds:[esi]
  40ed33:	(bad)  
  40ed34:	test   eax,0x5ff0669a
  40ed39:	ret    
  40ed3a:	ret    0xc7dc
  40ed3d:	pop    es
  40ed3e:	cmp    esi,DWORD PTR [ecx-0x74e3d7b6]
  40ed44:	loope  0x40ecd9
  40ed46:	inc    edx
  40ed47:	mov    ah,0x6f
  40ed49:	ss or  al,0x29
  40ed4c:	daa    
  40ed4d:	add    BYTE PTR es:[eax+0x69],ch
  40ed51:	jnp    0x40edcb
  40ed53:	dec    edx
  40ed54:	inc    eax
  40ed55:	retf   0xb26
  40ed58:	ret    0xa8e0
  40ed5b:	mov    esi,0x86c7fedc
  40ed60:	jl     0x40edd4
  40ed62:	push   edx
  40ed63:	jnp    0x40ed0e
  40ed65:	cdq    
  40ed66:	inc    eax
  40ed67:	jae    0x40eddc
  40ed69:	and    ebp,esp
  40ed6b:	and    eax,DWORD PTR [edi]
  40ed6d:	dec    ecx
  40ed6e:	fstp   DWORD PTR [edi]
  40ed70:	outs   dx,BYTE PTR ds:[esi]
  40ed71:	xor    esp,0xfffffff1
  40ed74:	sbb    ebp,DWORD PTR [edx-0x21a568b]
  40ed7a:	bound  eax,QWORD PTR [ebx]
  40ed7c:	push   0xffffffd6
  40ed7e:	add    DWORD PTR [ebp+edi*4+0x69],0xfffffffa
  40ed83:	inc    eax
  40ed84:	jb     0x40ed76
  40ed86:	aas    
  40ed87:	cmp    al,0x9e
  40ed89:	push   ss
  40ed8a:	mov    ch,0xfb
  40ed8c:	(bad)
  40ed8f:	sub    cl,BYTE PTR [ebx]
  40ed91:	adc    ebx,ecx
  40ed93:	jmp    0xe06a1fe2
  40ed98:	shl    BYTE PTR [ebx+0x72],cl
  40ed9b:	adc    bh,BYTE PTR [ebp+0xf]
  40ed9e:	mov    ch,0xaf
  40eda0:	mov    DWORD PTR ss:[edi-0x38],edi
  40eda4:	jb     0x40ee1e
  40eda6:	dec    ecx
  40eda7:	scas   eax,DWORD PTR es:[edi]
  40eda8:	mov    edx,0x8a4d6a76
  40edad:	add    BYTE PTR [ecx],ah
  40edaf:	cmp    eax,0xe9758cb
  40edb4:	fs add eax,0x32436db9
  40edba:	mov    ebx,0xfc6d0eee
  40edbf:	ja     0x40ee1b
  40edc1:	ret    
  40edc2:	dec    ecx
  40edc3:	add    bl,BYTE PTR [esi+eax*4+0x5b]
  40edc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc8:	mov    edi,0x683be0d9
  40edcd:	pop    edx
  40edce:	xchg   esp,eax
  40edcf:	mov    ch,0x15
  40edd1:	jle    0x40ed93
  40edd3:	lds    ebp,FWORD PTR ds:0x9a03c830
  40edd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edda:	cld    
  40eddb:	je     0x40ed6a
  40eddd:	rol    DWORD PTR [ebx+0x5e2e9f51],0x32
  40ede4:	test   eax,0xf6f5dc1
  40edea:	mov    edx,0x2f1dcda8
  40edef:	scas   al,BYTE PTR es:[edi]
  40edf0:	(bad)
  40edf3:	and    ah,dl
  40edf5:	pusha  
  40edf6:	int    0xcf
  40edf8:	cmp    BYTE PTR fs:[ecx-0x47],bh
  40edfc:	bound  eax,QWORD PTR [edi-0x6c08eadd]
  40ee02:	call   0x593c:0xde7a4781
  40ee09:	sub    al,0x42
  40ee0c:	repz sub BYTE PTR [ecx+edx*1],bh
  40ee10:	sahf   
  40ee11:	jb     0x40ee4f
  40ee13:	fcomp  st(5)
  40ee15:	inc    esp
  40ee16:	jbe    0x40ee31
  40ee18:	jle    0x40ee02
  40ee1a:	sub    DWORD PTR [ebx+0x3112a67d],edi
  40ee20:	pop    ebp
  40ee21:	xlat   BYTE PTR ds:[ebx]
  40ee22:	jne    0x40ee79
  40ee24:	lahf   
  40ee25:	push   eax
  40ee26:	idiv   BYTE PTR ds:0x1238514d
  40ee2c:	sub    DWORD PTR ds:0x59e018d4,0x3bddf9d
  40ee36:	in     eax,dx
  40ee37:	es cli 
  40ee39:	jmp    0x40ee89
  40ee3b:	jle    0x40ee70
  40ee3d:	popf   
  40ee3e:	xchg   ebp,eax
  40ee3f:	add    esp,DWORD PTR [edx+0x5cbae9ea]
  40ee45:	jbe    0x40edf4
  40ee47:	lods   eax,DWORD PTR ds:[esi]
  40ee48:	lods   eax,DWORD PTR ds:[esi]
  40ee49:	(bad)  
  40ee4b:	scas   eax,DWORD PTR es:[edi]
  40ee4c:	xlat   BYTE PTR ds:[ebx]
  40ee4d:	inc    eax
  40ee4e:	adc    esi,eax
  40ee50:	rcl    BYTE PTR [ebx+0x50],1
  40ee53:	int    0x1d
  40ee55:	push   ecx
  40ee56:	int    0x42
  40ee58:	enter  0x5382,0x4b
  40ee5c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ee5e:	adc    eax,0x1cdca56a
  40ee63:	test   DWORD PTR [ecx],0xd1e0d031
  40ee69:	iret   
  40ee6a:	les    ebx,FWORD PTR [ebx-0x3a]
  40ee6d:	inc    ebp
  40ee6e:	mov    gs,WORD PTR [edx+edx*2+0x23af480]
  40ee75:	cmp    dh,BYTE PTR [ecx-0x5d]
  40ee78:	mov    ebx,0x2d1e50ea
  40ee7d:	and    DWORD PTR ds:0x8944e1f8,esp
  40ee83:	dec    esi
  40ee84:	mov    WORD PTR [ecx+edi*2],ds
  40ee87:	cld    
  40ee88:	sub    eax,0xfa1538bf
  40ee8d:	xor    BYTE PTR [ecx+ebx*2-0x44ceaa37],dh
  40ee94:	mov    al,ds:0x86c8d83f
  40ee99:	mov    ds:0x2f6dd569,eax
  40ee9e:	pop    esi
  40ee9f:	test   BYTE PTR [eax+0x37],0x31
  40eea3:	test   eax,0x24ca005b
  40eea8:	or     esi,DWORD PTR [esi+0x38]
  40eeab:	jp     0x40ef18
  40eead:	jo     0x40ee42
  40eeaf:	fmul   st(6),st
  40eeb1:	push   esp
  40eeb2:	xabort 0x48
  40eeb5:	sbb    eax,0x4d5f783a
  40eeba:	cmp    esi,DWORD PTR [edx-0x1]
  40eebd:	or     eax,0xcae54a4a
  40eec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec3:	in     eax,dx
  40eec4:	jno    0x40eed0
  40eec6:	mov    ecx,0xac04c910
  40eecb:	push   ebx
  40eecc:	mov    WORD PTR [eax+0x2fa2e845],?
  40eed2:	cmp    dl,ah
  40eed4:	fwait
  40eed5:	repz cmp BYTE PTR [ebx],ch
  40eed8:	xchg   ch,bl
  40eeda:	add    DWORD PTR [edx+esi*4],ecx
  40eedd:	sub    eax,DWORD PTR [ebp+0xd903e55]
  40eee3:	fstp   QWORD PTR [edi-0x29]
  40eee6:	icebp  
  40eee7:	mov    edx,0x78c08a14
  40eeec:	sbb    eax,0x3fc795e2
  40eef1:	sti    
  40eef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef3:	jns    0x40eef3
  40eef5:	sub    al,0x58
  40eef7:	aad    0x24
  40eef9:	mov    ebx,0x4ea360c6
  40eefe:	aam    0x1
  40ef00:	cmp    ebp,ebx
  40ef02:	add    DWORD PTR [ebp-0x16],0xffffffee
  40ef06:	xchg   ebp,eax
  40ef07:	push   cs
  40ef08:	or     DWORD PTR [esi],ebp
  40ef0a:	jge    0x40ef78
  40ef0c:	bound  edx,QWORD PTR ds:0xe445c11a
  40ef12:	or     DWORD PTR [ecx+0x4e6666da],0x1754652d
  40ef1c:	lahf   
  40ef1d:	push   es
  40ef1e:	push   cs
  40ef1f:	int3   
  40ef20:	aaa    
  40ef21:	ins    BYTE PTR es:[edi],dx
  40ef22:	pop    ecx
  40ef23:	sub    bh,BYTE PTR [ebp-0x1f]
  40ef26:	je     0x40ef62
  40ef28:	pop    edx
  40ef29:	data16 jecxz 0x40ef28
  40ef2c:	mov    esi,DWORD PTR [ebp+edi*2-0x4]
  40ef30:	fwait
  40ef31:	jmp    0x3d3d:0x169d7b70
  40ef38:	jge    0x40ef42
  40ef3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef3b:	(bad)  
  40ef3d:	js     0x40efb9
  40ef3f:	dec    ebp
  40ef40:	dec    edi
  40ef41:	adc    DWORD PTR [eax+esi*8-0x3e303d61],ecx
  40ef48:	jecxz  0x40eee0
  40ef4a:	sub    eax,0xfad111e3
  40ef4f:	shr    DWORD PTR [edx-0x36],0x9a
  40ef53:	(bad)  
  40ef54:	jmp    0xc95bca2e
  40ef59:	push   cs
  40ef5a:	jg     0x40ef68
  40ef5c:	sub    eax,0x44f9790b
  40ef61:	cmc    
  40ef62:	adc    eax,0xd355ce83
  40ef67:	mov    edx,0xd263d1ec
  40ef6c:	adc    ah,BYTE PTR [eax+0x36abdf47]
  40ef72:	jmp    0x95574bfe
  40ef77:	ror    DWORD PTR [esi],1
  40ef79:	pop    ss
  40ef7a:	jnp    0x40ef7d
  40ef7c:	fsub   DWORD PTR [eax-0x7f2b6b50]
  40ef82:	(bad)  
  40ef83:	jne    0x40efc8
  40ef85:	loope  0x40efc1
  40ef87:	jo     0x40f007
  40ef89:	addr16 adc eax,0x2c700aeb
  40ef8f:	js     0x40efc5
  40ef91:	sub    BYTE PTR [edi+0x33121a16],dh
  40ef97:	mov    edi,0xc7356eeb
  40ef9c:	push   ss
  40ef9d:	adc    DWORD PTR [ecx],esp
  40ef9f:	fist   DWORD PTR [ebp+0x2f8907b]
  40efa5:	dec    eax
  40efa6:	xchg   edi,eax
  40efa7:	push   esi
  40efa8:	lods   eax,DWORD PTR ds:[esi]
  40efa9:	mov    bh,0xd7
  40efab:	fsubp  st(4),st
  40efad:	in     eax,0xbd
  40efaf:	xchg   esi,eax
  40efb0:	ins    DWORD PTR es:[edi],dx
  40efb1:	lock je 0x40ef4a
  40efb4:	pusha  
  40efb5:	js     0x40efcb
  40efb7:	out    dx,eax
  40efb8:	jmp    0x40efa4
  40efba:	call   0x9d91:0x2dd7911e
  40efc1:	pop    ebp
  40efc2:	int    0x34
  40efc4:	push   ebp
  40efc6:	mov    ebx,ss
  40efc8:	fucom  st(7)
  40efca:	mov    edx,0x777790a2
  40efcf:	inc    ebx
  40efd0:	(bad)  
  40efd1:	jecxz  0x40f00f
  40efd3:	sti    
  40efd4:	dec    esi
  40efd5:	pop    eax
  40efd6:	stos   BYTE PTR es:[edi],al
  40efd7:	lods   al,BYTE PTR ds:[esi]
  40efd8:	xor    al,0x8c
  40efda:	mov    ebx,0xc1e1ab0d
  40efdf:	mov    ds:0xd162816f,al
  40efe4:	popa   
  40efe5:	int3   
  40efe6:	mov    esp,0x7252971
  40efeb:	jmp    0x260d47fe
  40eff0:	inc    edi
  40eff1:	call   0x3b83:0x640a573d
  40eff8:	push   cs
  40eff9:	jmp    0xfbf1:0xff99c17c
  40f000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f001:	mov    ds:0x5b59270a,eax
  40f006:	fwait
  40f007:	dec    ecx
  40f008:	push   edi
  40f009:	lods   al,BYTE PTR ds:[esi]
  40f00a:	stc    
  40f00b:	iret   
  40f00c:	fild   WORD PTR [edx+0x4f]
  40f00f:	cld    
  40f010:	call   0x99414525
  40f015:	jle    0x40efef
  40f017:	cli    
  40f018:	push   edx
  40f019:	pop    edi
  40f01a:	es dec ecx
  40f01c:	mov    ebp,0x4e6e4114
  40f021:	idiv   BYTE PTR [esi+0x2c]
  40f024:	mov    dl,0xd7
  40f026:	mov    edx,0xa539cf74
  40f02b:	jae    0x40f099
  40f02d:	jmp    0xf39bf05e
  40f032:	mov    ch,0x1c
  40f034:	mov    dl,0x25
  40f036:	or     al,0xe4
  40f038:	mov    ds:0x6ef07450,eax
  40f03d:	inc    esp
  40f03e:	loope  0x40f041
  40f040:	jnp    0x40f09e
  40f042:	xor    BYTE PTR [esi+0x7],dl
  40f045:	xor    edi,DWORD PTR [edx+eiz*1-0x18]
  40f049:	sahf   
  40f04a:	in     eax,0x17
  40f04c:	inc    edi
  40f04d:	and    DWORD PTR [eax],esi
  40f04f:	dec    edx
  40f050:	std    
  40f051:	push   ebx
  40f052:	shl    DWORD PTR [ecx+0x514c55d1],cl
  40f058:	pop    ds
  40f059:	mov    DWORD PTR [ebx-0x40],edx
  40f05c:	mov    ds:0x192668a9,ax
  40f062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f063:	lods   al,BYTE PTR ds:[esi]
  40f064:	in     al,0x6d
  40f066:	gs inc ebp
  40f068:	fdiv   st,st(5)
  40f06a:	or     DWORD PTR [esi],0xffffff84
  40f06d:	push   eax
  40f06e:	lahf   
  40f06f:	out    0x1e,al
  40f071:	xchg   BYTE PTR [ecx+0x1b],dh
  40f074:	sub    eax,0x5a6243d4
  40f079:	test   esi,eax
  40f07b:	xchg   ebp,eax
  40f07c:	call   0xba57:0x350f200e
  40f083:	mul    BYTE PTR [ecx+ebp*1-0x70]
  40f087:	mov    esi,0x342e4024
  40f08c:	stos   BYTE PTR es:[edi],al
  40f08d:	cmp    bh,BYTE PTR [ecx+0x49d9aa07]
  40f093:	and    ebx,ecx
  40f095:	out    dx,eax
  40f096:	or     eax,0x45dbdb1a
  40f09b:	cli    
  40f09c:	loop   0x40f067
  40f09e:	arpl   WORD PTR ds:0xca496897,ax
  40f0a4:	call   0xbd6b27b4
  40f0a9:	add    al,0xbf
  40f0ab:	(bad)
  40f0af:	ss jno 0x40f0af
  40f0b2:	fwait
  40f0b3:	aaa    
  40f0b4:	fs jo  0x40f0cd
  40f0b7:	aad    0x48
  40f0b9:	les    esi,FWORD PTR [edx+0x67]
  40f0bc:	iret   
  40f0bd:	jbe    0x40f136
  40f0bf:	pop    ds
  40f0c0:	shr    BYTE PTR [esi+0x23],cl
  40f0c3:	loopne 0x40f093
  40f0c5:	xchg   edx,eax
  40f0c6:	push   es
  40f0c7:	sub    eax,0xe3c27448
  40f0cc:	xchg   esp,eax
  40f0cd:	xor    dh,dh
  40f0cf:	(bad)  
  40f0d1:	sar    al,0xa8
  40f0d4:	lods   al,BYTE PTR ds:[esi]
  40f0d5:	add    al,0x38
  40f0d7:	test   BYTE PTR [ecx+eiz*1],bl
  40f0da:	test   al,0x41
  40f0dc:	inc    edi
  40f0dd:	mov    edi,0x1e69f80
  40f0e2:	cmp    cl,dh
  40f0e4:	test   DWORD PTR [ebx+0x2c],esi
  40f0e7:	ficom  WORD PTR [edi-0x451a33a6]
  40f0ed:	popf   
  40f0ee:	push   cs
  40f0ef:	mov    esi,0x1d702c72
  40f0f4:	shr    BYTE PTR [ebp+0x1f882c1b],cl
  40f0fa:	jge    0x40f0bc
  40f0fc:	sbb    eax,0x23b8fc19
  40f101:	push   ecx
  40f102:	or     DWORD PTR [ecx+0x42],0x2b
  40f106:	push   ebp
  40f107:	out    dx,al
  40f108:	je     0x40f120
  40f10a:	loope  0x40f09e
  40f10c:	fnstcw WORD PTR [edx-0x39fbebe1]
  40f112:	popf   
  40f113:	pop    eax
  40f114:	nop
  40f115:	pop    DWORD PTR [ecx]
  40f117:	xor    bh,cl
  40f119:	push   esp
  40f11a:	push   eax
  40f11b:	jns    0x40f17c
  40f11d:	xlat   BYTE PTR ds:[ebx]
  40f11e:	dec    edi
  40f11f:	jmp    0x2617:0x1da1603e
  40f126:	shl    BYTE PTR [edx-0xd],cl
  40f129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f12a:	xchg   edi,eax
  40f12b:	mov    ebx,0x8a6feba
  40f130:	outs   dx,BYTE PTR ds:[esi]
  40f131:	mov    ah,0x47
  40f133:	sub    eax,0x22bac2d5
  40f138:	jbe    0x40f19a
  40f13a:	or     DWORD PTR [ecx-0x69443ea1],edx
  40f140:	mov    esp,0xe0b98269
  40f145:	add    esp,DWORD PTR [ecx-0x6b]
  40f148:	xor    DWORD PTR [ecx],0xffffffa6
  40f14b:	xor    bl,BYTE PTR ss:0x93d2a65a
  40f152:	inc    ecx
  40f153:	xchg   edx,eax
  40f154:	fadd   QWORD PTR [ecx+0x51]
  40f157:	push   ebp
  40f158:	cwde   
  40f159:	loopne 0x40f1c3
  40f15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f15c:	fnstcw WORD PTR ds:0x985ecfd3
  40f162:	mov    esi,0x84eeaad7
  40f167:	mov    bh,0x97
  40f169:	lods   al,BYTE PTR ds:[esi]
  40f16a:	or     DWORD PTR [ecx],esp
  40f16c:	xor    eax,0x4bf8ee7d
  40f171:	jl     0x40f0f8
  40f173:	mov    esi,edx
  40f175:	out    0x54,al
  40f177:	retf   0x90dc
  40f17a:	(bad)  
  40f17b:	adc    al,dl
  40f17d:	pop    ecx
  40f17e:	in     eax,dx
  40f17f:	cmp    dl,al
  40f181:	pop    es
  40f182:	(bad)  
  40f183:	je     0x40f1d1
  40f185:	pushf  
  40f186:	jb     0x40f1cc
  40f188:	and    DWORD PTR [esi+0x5a81d42],ecx
  40f18e:	xlat   BYTE PTR ds:[ebx]
  40f18f:	cmp    eax,0x5d59609e
  40f194:	jle    0x40f1a0
  40f196:	push   eax
  40f197:	cmp    esp,ebx
  40f199:	ja     0x40f16f
  40f19b:	lds    esp,FWORD PTR [esi-0x237f14c4]
  40f1a1:	and    BYTE PTR [edx-0x24],al
  40f1a4:	pop    ss
  40f1a5:	dec    edi
  40f1a6:	mov    edx,0xf6b3b71c
  40f1ab:	cmp    DWORD PTR [esi+0x8ff1717],ecx
  40f1b1:	xchg   edx,eax
  40f1b2:	and    DWORD PTR [ebx],ecx
  40f1b4:	dec    ebp
  40f1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b6:	ja     0x40f1c7
  40f1b8:	push   esi
  40f1b9:	pop    ebp
  40f1ba:	dec    edx
  40f1bb:	scas   eax,DWORD PTR es:[edi]
  40f1bc:	and    eax,0xde8accf3
  40f1c1:	fidiv  WORD PTR [eax]
  40f1c3:	mov    eax,0xe6caf990
  40f1c8:	fstp   QWORD PTR [esi+0x7d]
  40f1cb:	adc    DWORD PTR [eax],edi
  40f1cd:	jno    0x40f1d6
  40f1cf:	xor    BYTE PTR [ecx],dh
  40f1d1:	xchg   edi,eax
  40f1d2:	sbb    ch,BYTE PTR ds:0x930a44aa
  40f1d8:	cwde   
  40f1d9:	jmp    0x40f193
  40f1db:	js     0x40f1a9
  40f1dd:	(bad)  
  40f1de:	int    0xea
  40f1e0:	mov    cl,0x6f
  40f1e2:	retf   
  40f1e3:	xchg   ebp,eax
  40f1e4:	mov    cl,0x78
  40f1e6:	push   ecx
  40f1e7:	dec    eax
  40f1e8:	inc    eax
  40f1e9:	sti    
  40f1ea:	inc    ebp
  40f1eb:	mov    dl,0x4
  40f1ed:	stc    
  40f1ee:	sub    bh,al
  40f1f0:	mov    cl,0x38
  40f1f2:	fcom   DWORD PTR [edx]
  40f1f4:	pop    ebx
  40f1f5:	sbb    al,0x67
  40f1f7:	lea    edi,[edx-0x43]
  40f1fa:	aas    
  40f1fb:	fnsetpm(287 only) 
  40f1fd:	sbb    eax,0x9e4b63b5
  40f202:	ds adc eax,0x6f147211
  40f208:	jp     0x40f1f3
  40f20a:	pop    edx
  40f20b:	inc    ebp
  40f20c:	icebp  
  40f20d:	sub    BYTE PTR [edx-0x3],0xe0
  40f211:	js     0x40f1b7
  40f213:	(bad)  
  40f214:	hlt    
  40f215:	jne    0x40f1a6
  40f217:	or     bl,0xff
  40f21a:	xor    BYTE PTR fs:[ebx+ebx*8],al
  40f21e:	or     DWORD PTR [eax+0x52],eax
  40f221:	div    esi
  40f223:	push   esp
  40f224:	sub    al,0xd1
  40f226:	call   0x844ab264
  40f22b:	enter  0x5682,0x21
  40f22f:	jne    0x40f1e2
  40f231:	jle    0x40f26c
  40f233:	add    dh,BYTE PTR [esi]
  40f235:	dec    esp
  40f236:	sbb    eax,0x72434657
  40f23b:	scas   al,BYTE PTR es:[edi]
  40f23c:	mov    ebx,0x373fbed7
  40f241:	mov    ds:0x18bd929d,al
  40f246:	dec    edx
  40f247:	test   BYTE PTR ds:0x65feb422,0x2f
  40f24e:	mov    ds:0x5f595e6c,eax
  40f253:	sub    al,0xa3
  40f255:	in     eax,dx
  40f256:	jg     0x40f1de
  40f258:	(bad)  
  40f259:	pop    esi
  40f25a:	mov    dl,0x36
  40f25c:	add    al,0xca
  40f25e:	neg    DWORD PTR cs:[ebp+0xf]
  40f262:	retf   0xe7bc
  40f265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f266:	mov    WORD PTR ds:[eax-0x32ee1340],ds
  40f26d:	adc    DWORD PTR [ebp+0x77],edi
  40f270:	arpl   WORD PTR [ecx],bx
  40f272:	rol    BYTE PTR [eax+0x6c42682a],1
  40f278:	jg     0x40f27c
  40f27a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f27b:	push   eax
  40f27c:	rcl    bh,1
  40f27e:	dec    eax
  40f27f:	jmp    DWORD PTR [ebx+0x5fcaf18c]
  40f285:	and    al,0x61
  40f287:	iret   
  40f288:	sbb    BYTE PTR [ebx+0x4cd0ab5e],0x32
  40f28f:	xchg   esp,eax
  40f290:	(bad)  
  40f291:	cli    
  40f292:	mov    es,WORD PTR [ebp+0x477ffa47]
  40f298:	adc    BYTE PTR [edx+0x35778b95],bh
  40f29e:	add    DWORD PTR [ebx+0x246aa2d8],esi
  40f2a4:	clc    
  40f2a5:	int3   
  40f2a6:	cs fwait
  40f2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a9:	cs cdq 
  40f2ab:	xchg   ebx,eax
  40f2ac:	les    ecx,FWORD PTR [edi+eax*1+0x20]
  40f2b0:	or     DWORD PTR [edx+0x5c],esp
  40f2b3:	shl    BYTE PTR [edi+0x568ee923],1
  40f2b9:	test   BYTE PTR [ebx+edx*8+0x45],dh
  40f2bd:	mov    ah,0x3f
  40f2bf:	ins    DWORD PTR es:[edi],dx
  40f2c0:	(bad)  
  40f2c1:	jo     0x40f2bb
  40f2c3:	fnstsw WORD PTR [ecx-0x31]
  40f2c6:	mov    ds:0x69bccb8b,al
  40f2cb:	mov    ds:0x1c48e473,al
  40f2d0:	push   ebx
  40f2d1:	pop    ebx
  40f2d2:	push   ds
  40f2d3:	addr16 ret 0x5add
  40f2d7:	ins    BYTE PTR es:[edi],dx
  40f2d8:	inc    edi
  40f2d9:	dec    edi
  40f2da:	push   ecx
  40f2db:	shr    dh,0x80
  40f2de:	mov    ah,0x32
  40f2e0:	inc    edx
  40f2e1:	sbb    al,0x2e
  40f2e3:	pusha  
  40f2e4:	add    eax,0x9e740f48
  40f2e9:	xor    eax,0x15fb26dc
  40f2ee:	in     al,dx
  40f2ef:	ret    0xe843
  40f2f2:	push   esp
  40f2f3:	mov    ebp,0xc2f26b
  40f2f8:	and    DWORD PTR [ebx+eax*4],edi
  40f2fb:	pop    esi
  40f2fc:	ins    DWORD PTR es:[edi],dx
  40f2fd:	add    BYTE PTR [edx],bl
  40f2ff:	mov    al,0x26
  40f301:	push   ds
  40f302:	dec    esi
  40f303:	and    cl,BYTE PTR [edx]
  40f305:	jae    0x40f332
  40f307:	mov    edi,0xa29b7040
  40f30c:	lods   eax,DWORD PTR ds:[esi]
  40f30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f30e:	cmp    al,0xce
  40f310:	mov    ds:0x857fa83d,eax
  40f315:	icebp  
  40f316:	add    DWORD PTR [edi+edi*8-0x2b],eax
  40f31a:	retf   0x7828
  40f31d:	dec    ecx
  40f31e:	sub    DWORD PTR [ecx-0x575854e3],edx
  40f324:	ins    BYTE PTR es:[edi],dx
  40f325:	mov    al,0x62
  40f327:	push   es
  40f328:	dec    esp
  40f329:	gs scas eax,DWORD PTR es:[edi]
  40f32b:	mov    ?,WORD PTR [ecx-0x42e648b4]
  40f331:	leave  
  40f332:	mov    cl,0x49
  40f334:	dec    edi
  40f335:	mov    dh,0xf9
  40f337:	adc    ch,bh
  40f339:	ja     0x40f2e7
  40f33b:	xor    BYTE PTR [ecx-0x57073284],ch
  40f341:	in     eax,dx
  40f342:	add    BYTE PTR [ebx-0xe0d794e],cl
  40f348:	inc    edx
  40f349:	add    eax,0x5acd6636
  40f34e:	xchg   edi,eax
  40f34f:	pop    ecx
  40f350:	adc    esp,eax
  40f352:	fstp   QWORD PTR es:[ecx+eiz*4]
  40f356:	test   DWORD PTR [edi],edi
  40f358:	pop    ds
  40f359:	lea    esi,[edi]
  40f35b:	adc    al,0xf2
  40f35d:	stos   DWORD PTR es:[edi],eax
  40f35e:	aas    
  40f35f:	lds    edx,FWORD PTR [edi]
  40f361:	ins    DWORD PTR es:[edi],dx
  40f362:	push   0x61
  40f364:	pop    esi
  40f365:	aad    0xcb
  40f367:	adc    dh,BYTE PTR [edi+ebx*2-0x37]
  40f36b:	repnz add BYTE PTR [esi+0x1a],dh
  40f36f:	pop    edx
  40f370:	popf   
  40f371:	jns    0x40f2f6
  40f373:	push   es
  40f374:	and    eax,0x4b342e11
  40f379:	neg    BYTE PTR [eax+0x51]
  40f37c:	jg     0x40f322
  40f37e:	pop    esi
  40f37f:	sub    eax,0xc61f6f5
  40f384:	outs   dx,DWORD PTR ds:[esi]
  40f385:	sahf   
  40f386:	mov    ds:0x92c9a9c6,al
  40f38b:	hlt    
  40f38c:	and    dl,BYTE PTR [ebx]
  40f38e:	test   DWORD PTR [esi+ebx*1-0x5a],ebx
  40f392:	jb     0x40f40f
  40f394:	pop    esi
  40f395:	pop    ebx
  40f396:	mov    edi,0xda8efdb6
  40f39b:	into   
  40f39c:	std    
  40f39d:	sub    al,0xf3
  40f39f:	inc    DWORD PTR [edi+eax*1+0x27]
  40f3a3:	mov    edx,0x28455c81
  40f3a8:	cmc    
  40f3a9:	ss test al,0xa
  40f3ac:	loope  0x40f354
  40f3ae:	jge    0x40f358
  40f3b0:	jbe    0x40f3ac
  40f3b2:	in     al,dx
  40f3b3:	mov    cl,0xbc
  40f3b5:	pusha  
  40f3b6:	xchg   esp,eax
  40f3b7:	in     al,0x8e
  40f3b9:	mov    ebp,DWORD PTR [ebx-0x506b97dd]
  40f3bf:	fxch   st(7)
  40f3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c2:	cmp    cl,BYTE PTR [eax+0x21]
  40f3c5:	out    dx,al
  40f3c6:	lods   eax,DWORD PTR ds:[esi]
  40f3c7:	jo     0x40f3b9
  40f3c9:	clc    
  40f3ca:	jecxz  0x40f38d
  40f3cc:	mov    eax,0x4cc330b5
  40f3d1:	jb     0x40f3b6
  40f3d3:	mov    DWORD PTR [edi+0x38],esi
  40f3d6:	shr    BYTE PTR [ebp-0x2c],1
  40f3d9:	xchg   esi,eax
  40f3da:	dec    esi
  40f3db:	dec    edi
  40f3dc:	fcmovnbe st,st(0)
  40f3de:	cmc    
  40f3df:	cmovno ebp,DWORD PTR [edi-0x57]
  40f3e3:	xor    ecx,DWORD PTR [esi+edi*1+0x7e975bec]
  40f3ea:	scas   eax,DWORD PTR es:[edi]
  40f3eb:	inc    ebp
  40f3ec:	push   esi
  40f3ed:	mov    ebp,0xac44aca1
  40f3f2:	(bad)  
  40f3f3:	and    DWORD PTR gs:[esi-0x30],edx
  40f3f7:	jge    0x40f3cf
  40f3f9:	jnp    0x40f468
  40f3fb:	mov    ch,0xa7
  40f3fd:	jmp    0x40f401
  40f3ff:	mov    WORD PTR [edx],cs
  40f401:	jae    0x40f3e2
  40f403:	int    0xb5
  40f405:	inc    ebx
  40f406:	ja     0x40f414
  40f408:	cmp    BYTE PTR [eax-0x48f4367b],bl
  40f40e:	out    0x49,al
  40f410:	add    al,0x5c
  40f412:	dec    ecx
  40f413:	xor    BYTE PTR [esi-0x7a],cl
  40f416:	(bad)  
  40f417:	and    ah,BYTE PTR [ebx+esi*1-0x5b4f8d94]
  40f41e:	jo     0x40f46c
  40f420:	imul   edx
  40f422:	ds fwait
  40f424:	rol    DWORD PTR [edx*2+0x12b226c0],cl
  40f42b:	cmp    bh,dh
  40f42d:	adc    al,0x21
  40f42f:	mov    ebx,0x797a5157
  40f434:	out    dx,al
  40f435:	jle    0x40f478
  40f437:	sub    eax,0xffffffb5
  40f43a:	mov    esp,DWORD PTR [esi+ebp*2-0x5d557268]
  40f441:	in     eax,0x56
  40f443:	add    ebx,DWORD PTR [ebx+esi*1-0x4c]
  40f447:	in     eax,dx
  40f448:	in     al,dx
  40f449:	sbb    bl,0x36
  40f44c:	mov    ah,0x91
  40f44e:	dec    BYTE PTR [edx-0x5c]
  40f451:	push   0xffffffd8
  40f453:	pop    ebp
  40f454:	std    
  40f455:	popa   
  40f456:	mov    ds:0x35ecb68b,al
  40f45b:	aad    0x57
  40f45d:	and    BYTE PTR [edi-0x3fd8afb5],0x25
  40f464:	inc    ecx
  40f465:	jb     0x40f446
  40f467:	push   esp
  40f468:	pop    ecx
  40f469:	jp     0x40f447
  40f46b:	mov    cl,0x19
  40f46d:	sar    ebx,0xe4
  40f470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f471:	daa    
  40f472:	push   es
  40f473:	mov    ?,WORD PTR [eax+0x23c2c1e8]
  40f479:	sbb    eax,0x18d9e1ba
  40f47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f480:	cdq    
  40f481:	in     al,0xc5
  40f483:	mov    esi,0x26395830
  40f488:	outs   dx,BYTE PTR ds:[esi]
  40f489:	push   ebx
  40f48a:	xchg   DWORD PTR [ebp+0x6e],edx
  40f48d:	add    BYTE PTR [ebx+0x3f],al
  40f490:	in     al,0xf4
  40f492:	cmp    BYTE PTR [edx-0x74],ah
  40f495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f496:	mov    al,ds:0x2fc4e206
  40f49b:	jle    0x40f446
  40f49d:	je     0x40f497
  40f49f:	data16 outs dx,BYTE PTR ds:[esi]
  40f4a1:	fisttp DWORD PTR [edx]
  40f4a3:	outs   dx,BYTE PTR ds:[esi]
  40f4a4:	mov    ds:0x62e0127c,eax
  40f4a9:	xor    al,0x41
  40f4ab:	mov    BYTE PTR [edx],0xdb
  40f4ae:	(bad)  
  40f4af:	fs cdq 
  40f4b1:	mov    ebx,0x8da99c5e
  40f4b6:	rcr    esp,1
  40f4b8:	test   eax,0xe7a89d
  40f4bd:	rol    BYTE PTR [edx],1
  40f4bf:	lea    esi,[eax-0x4aa1c118]
  40f4c5:	fwait
  40f4c6:	push   ebx
  40f4c7:	sbb    al,0xb9
  40f4c9:	cmp    al,BYTE PTR [ebx+eax*1-0x75ee713d]
  40f4d0:	jge    0x40f471
  40f4d2:	inc    edx
  40f4d3:	xor    al,BYTE PTR [ebx]
  40f4d5:	or     DWORD PTR [ebx],ebp
  40f4d7:	sub    eax,0x72f466a0
  40f4dc:	rcr    eax,1
  40f4de:	shl    ch,cl
  40f4e0:	lock cmp DWORD PTR [edi-0x51],ebp
  40f4e4:	test   al,0xaf
  40f4e6:	dec    eax
  40f4e7:	int    0xd3
  40f4e9:	loope  0x40f4e1
  40f4eb:	icebp  
  40f4ec:	ja     0x40f523
  40f4ee:	test   eax,0x3999154d
  40f4f3:	test   BYTE PTR [edi],cl
  40f4f5:	(bad)  [edx]
  40f4f7:	mov    ebp,DWORD PTR [esi+0x70]
  40f4fa:	cs mov dh,0x6c
  40f4fd:	test   eax,0x88adca29
  40f502:	xor    BYTE PTR [esi],al
  40f504:	cld    
  40f505:	jl     0x40f4e3
  40f507:	mov    dh,0xba
  40f509:	sbb    dh,ch
  40f50b:	push   edi
  40f50c:	mov    eax,0x8f97ea34
  40f511:	ret    
  40f512:	ins    DWORD PTR es:[edi],dx
  40f513:	pusha  
  40f514:	mov    esp,0xaa561682
  40f519:	jbe    0x40f4d3
  40f51b:	xchg   BYTE PTR [edx-0x35],dh
  40f51e:	aam    0x61
  40f520:	adc    eax,0x6b694ea6
  40f525:	mov    dl,0x7
  40f527:	in     al,dx
  40f528:	mov    ds:0x46ca2a3b,eax
  40f52d:	mov    dl,0xe6
  40f52f:	loopne 0x40f4f7
  40f531:	loop   0x40f4b9
  40f533:	dec    edi
  40f534:	mov    ds:0x50b0e374,al
  40f539:	in     al,dx
  40f53a:	sbb    edx,edi
  40f53c:	and    DWORD PTR [ecx-0x13f2ae2d],0xf6983e43
  40f546:	jb     0x40f4c9
  40f548:	(bad)  
  40f54a:	sub    ah,BYTE PTR [ebx-0x34c3f8ef]
  40f550:	ss push ebx
  40f552:	test   cl,bh
  40f554:	scas   al,BYTE PTR es:[edi]
  40f555:	and    esi,esp
  40f557:	xchg   ecx,eax
  40f558:	inc    edi
  40f559:	add    ebp,DWORD PTR [ecx+edx*4-0x4e2d7d40]
  40f560:	fdivr  DWORD PTR [esi]
  40f562:	(bad)  
  40f563:	sti    
  40f564:	or     dh,bh
  40f566:	into   
  40f567:	sbb    ebp,DWORD PTR [ecx]
  40f569:	out    dx,eax
  40f56a:	sti    
  40f56b:	ins    BYTE PTR es:[edi],dx
  40f56c:	(bad)  
  40f56e:	popf   
  40f56f:	push   ebp
  40f570:	scas   al,BYTE PTR es:[edi]
  40f571:	pushf  
  40f572:	dec    esp
  40f573:	daa    
  40f574:	(bad)  
  40f575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f576:	adc    al,0xaa
  40f578:	xor    BYTE PTR [esi+0x2c],ch
  40f57b:	in     al,dx
  40f57c:	imul   edi,DWORD PTR [edi-0x2f7138b7],0xab8cad37
  40f586:	sub    edi,DWORD PTR [ebp-0x6dd8b627]
  40f58c:	add    al,0x82
  40f58e:	adc    BYTE PTR [ebx-0x29],al
  40f591:	aas    
  40f592:	push   ebp
  40f593:	leave  
  40f594:	adc    ebp,DWORD PTR [ecx+0x45d297f]
  40f59a:	push   cs
  40f59b:	sub    dh,BYTE PTR [eax+0x65d072ed]
  40f5a1:	icebp  
  40f5a2:	add    cl,BYTE PTR [ebp+esi*4+0x1]
  40f5a6:	and    ch,BYTE PTR [ebp-0x18306b5e]
  40f5ac:	sbb    eax,0x80c88103
  40f5b1:	lds    edi,FWORD PTR [edx-0xa]
  40f5b4:	(bad)  
  40f5b5:	push   ss
  40f5b6:	xchg   edx,eax
  40f5b7:	and    al,0x1d
  40f5b9:	jp     0x40f550
  40f5bb:	daa    
  40f5bc:	inc    eax
  40f5bd:	popa   
  40f5be:	add    al,ch
  40f5c0:	rcl    bh,1
  40f5c2:	lods   eax,DWORD PTR ds:[si]
  40f5c4:	dec    ecx
  40f5c5:	outs   dx,BYTE PTR ds:[esi]
  40f5c6:	dec    eax
  40f5c7:	scas   eax,DWORD PTR es:[edi]
  40f5c8:	dec    ebx
  40f5c9:	mov    esi,0x95a90927
  40f5ce:	shr    esi,cl
  40f5d0:	push   esp
  40f5d1:	jns    0x40f61c
  40f5d3:	push   cs
  40f5d4:	jge    0x40f577
  40f5d6:	out    0xbf,al
  40f5d8:	sar    esp,1
  40f5da:	mov    esi,0x1c65dc57
  40f5df:	add    ebp,DWORD PTR [ecx-0x23d3aede]
  40f5e5:	mov    dl,0x19
  40f5e7:	stos   BYTE PTR es:[edi],al
  40f5e8:	in     al,0x81
  40f5ea:	push   0xfd4f3fbe
  40f5ef:	xor    al,0x2e
  40f5f1:	les    ebp,FWORD PTR [esi-0x21]
  40f5f4:	ss clc 
  40f5f6:	pop    eax
  40f5f7:	mov    ebx,0x36a87429
  40f5fc:	mov    dl,0x57
  40f5fe:	jb     0x40f627
  40f600:	fcmovnu st,st(7)
  40f602:	dec    ebx
  40f603:	push   edx
  40f604:	std    
  40f605:	or     DWORD PTR [edx-0x1b1d9a42],0xbbd3c91c
  40f60f:	or     eax,DWORD PTR [edi+0x5cfcd6f]
  40f615:	stos   BYTE PTR es:[edi],al
  40f616:	jo     0x40f5f4
  40f618:	mov    bl,0x6a
  40f61a:	into   
  40f61b:	sub    WORD PTR [ecx+eiz*8+0x6beeaadb],di
  40f623:	inc    edx
  40f624:	ud0    edi,DWORD PTR [ebx+0x1b3b4d18]
  40f62b:	or     al,0x1
  40f62d:	popf   
  40f62e:	jmp    0x29f43713
  40f633:	xchg   edi,eax
  40f634:	pop    es
  40f635:	lock mov dl,0xa2
  40f638:	adc    DWORD PTR [ebp-0x47d67624],edx
  40f63e:	ss pop di
  40f641:	push   esi
  40f642:	sub    ecx,DWORD PTR [ecx+0x12bca3bd]
  40f648:	icebp  
  40f649:	outs   dx,DWORD PTR ds:[esi]
  40f64a:	add    esi,DWORD PTR [edx]
  40f64c:	mov    bl,0x42
  40f64e:	popf   
  40f64f:	push   cs
  40f650:	nop
  40f651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f652:	icebp  
  40f653:	popa   
  40f654:	sub    DWORD PTR [esi+0x5a4b61d4],ebx
  40f65a:	pop    ebx
  40f65b:	cli    
  40f65c:	ror    BYTE PTR [ecx],0xef
  40f65f:	and    BYTE PTR [eax],0x9e
  40f662:	fimul  WORD PTR [eax]
  40f664:	xor    al,0x9b
  40f666:	pop    edx
  40f667:	pop    esi
  40f668:	and    esp,esi
  40f66a:	in     al,dx
  40f66b:	sub    esp,DWORD PTR [ecx-0x49]
  40f66e:	pop    esi
  40f66f:	pop    ebx
  40f670:	imul   edx,DWORD PTR [ecx-0x6eb9f466],0x215b43b4
  40f67a:	mov    ch,0x3
  40f67c:	cmp    eax,0xcdb32acf
  40f681:	fsub   st(2),st
  40f683:	inc    ebp
  40f684:	and    BYTE PTR [esi],bh
  40f686:	cs int 0x13
  40f689:	cdq    
  40f68a:	adc    DWORD PTR [ebx+0x5a],ebx
  40f68d:	enter  0x5421,0x58
  40f691:	dec    edi
  40f692:	pusha  
  40f693:	sahf   
  40f694:	or     ah,dh
  40f696:	stos   BYTE PTR es:[edi],al
  40f697:	imul   ebx,DWORD PTR [ebx-0x14fd7116],0xffffff8e
  40f69e:	(bad)  
  40f69f:	pop    eax
  40f6a0:	jmp    0x4d991c4c
  40f6a5:	ins    BYTE PTR es:[edi],dx
  40f6a6:	and    al,BYTE PTR [ebp-0x478641ff]
  40f6ac:	pop    eax
  40f6ad:	int    0x1c
  40f6af:	mov    dh,0x69
  40f6b1:	push   ebp
  40f6b2:	jb     0x40f6db
  40f6b4:	ins    DWORD PTR es:[edi],dx
  40f6b5:	adc    eax,0x5e3ea02a
  40f6ba:	xor    DWORD PTR [edi+0x7c],ebx
  40f6bd:	or     DWORD PTR [edx-0xbe1dcf1],esp
  40f6c3:	shr    DWORD PTR [eax],1
  40f6c5:	pop    esp
  40f6c6:	leave  
  40f6c7:	push   esp
  40f6c8:	ret    
  40f6c9:	ror    esi,cl
  40f6cb:	push   edx
  40f6cc:	test   bl,cl
  40f6ce:	mov    bl,0xcb
  40f6d0:	push   edx
  40f6d1:	ins    BYTE PTR es:[edi],dx
  40f6d2:	add    eax,0x3df334d8
  40f6d7:	mov    eax,0xcea43e62
  40f6dc:	jo     0x40f73b
  40f6de:	daa    
  40f6df:	jno    0x40f685
  40f6e1:	shl    ebx,cl
  40f6e3:	jecxz  0x40f71c
  40f6e5:	sub    al,0x91
  40f6e7:	ja     0x40f74d
  40f6e9:	data16 sahf 
  40f6eb:	rcr    DWORD PTR [ecx-0x41e650a9],cl
  40f6f1:	xor    BYTE PTR [eax-0x19dbe479],0x8f
  40f6f8:	push   cs
  40f6f9:	xchg   ebp,eax
  40f6fa:	push   ss
  40f6fb:	sub    dh,BYTE PTR [eax]
  40f6fd:	xchg   ebp,eax
  40f6fe:	xor    edi,DWORD PTR [edi-0x3e]
  40f701:	shr    ah,1
  40f703:	jne    0x40f782
  40f705:	cmp    dh,bh
  40f707:	sar    BYTE PTR [edi-0x57],0xbf
  40f70b:	in     al,dx
  40f70c:	outs   dx,DWORD PTR ds:[esi]
  40f70d:	and    eax,0x4d03b5dc
  40f712:	mov    edx,0x5a171313
  40f717:	cmp    ah,BYTE PTR [edx-0x6bca926b]
  40f71d:	mov    ebx,0xba6b69c1
  40f722:	mov    bh,al
  40f724:	fsubr  st,st(2)
  40f726:	pop    es
  40f727:	lods   al,BYTE PTR ds:[esi]
  40f728:	call   0x10b1:0x970d473
  40f72f:	and    ecx,ecx
  40f731:	ds inc esp
  40f733:	sti    
  40f734:	dec    edi
  40f735:	push   ebp
  40f736:	push   eax
  40f737:	pop    eax
  40f738:	(bad)  
  40f739:	jp     0x40f7ad
  40f73b:	popf   
  40f73c:	lods   al,BYTE PTR ds:[esi]
  40f73d:	push   ss
  40f73e:	sub    BYTE PTR [edx+0x3d3718db],ch
  40f744:	dec    ecx
  40f745:	fisttp WORD PTR [si-0x3]
  40f749:	and    eax,0xddd15c57
  40f74e:	lea    ecx,[ecx-0x75]
  40f751:	mov    edi,0xa23696c7
  40f756:	mov    dh,0xc1
  40f758:	push   edx
  40f759:	jnp    0x40f70d
  40f75b:	mov    dl,0x41
  40f75d:	mov    ch,0xfe
  40f75f:	fwait
  40f760:	imul   eax
  40f762:	adc    al,0x25
  40f764:	dec    edx
  40f765:	(bad)  
  40f766:	xchg   ebp,eax
  40f767:	(bad)  
  40f768:	xlat   BYTE PTR ds:[ebx]
  40f769:	pop    eax
  40f76a:	pop    ds
  40f76b:	mov    edx,0x7c2995e5
  40f770:	and    BYTE PTR [esp+ecx*8],dh
  40f773:	dec    edx
  40f774:	inc    ecx
  40f775:	frstor [ebx+0x7a]
  40f778:	or     BYTE PTR [ebp+0x5a],0x4b
  40f77c:	lods   al,BYTE PTR ds:[esi]
  40f77d:	and    ebp,DWORD PTR [ebx]
  40f77f:	out    dx,al
  40f780:	pop    ebp
  40f781:	(bad)  
  40f783:	or     al,0x14
  40f785:	leave  
  40f786:	sbb    eax,0x3ad63d41
  40f78b:	sbb    al,0x16
  40f78d:	sub    esp,DWORD PTR [ebp-0x2a]
  40f790:	adc    esi,DWORD PTR [ecx-0x74150ac6]
  40f796:	sbb    BYTE PTR [ecx],ah
  40f798:	jmp    0x4e98:0x7194d7c
  40f79f:	and    BYTE PTR [ebx+0x7df68ee2],0x96
  40f7a6:	push   ecx
  40f7a7:	add    esp,DWORD PTR [eax+edx*1+0x3afbb55c]
  40f7ae:	jno    0x40f7d8
  40f7b0:	mov    cl,BYTE PTR [esi]
  40f7b2:	mov    edi,ebp
  40f7b4:	jl     0x40f80c
  40f7b6:	cmp    BYTE PTR [edx+eiz*1+0xc2eda50],ah
  40f7bd:	(bad)  
  40f7be:	mov    al,0xaf
  40f7c0:	call   0xd0c8c42b
  40f7c5:	sbb    BYTE PTR [eax],dh
  40f7c7:	cwde   
  40f7c8:	push   ebp
  40f7c9:	addr16 jbe 0x40f754
  40f7cc:	dec    ecx
  40f7cd:	arpl   dx,sp
  40f7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7d0:	push   0x1bcd0ebf
  40f7d5:	and    dh,BYTE PTR [ebp+ecx*4-0x35]
  40f7d9:	sub    eax,0x6891b5e8
  40f7de:	pop    eax
  40f7df:	das    
  40f7e0:	xor    dl,BYTE PTR [esp+ebp*2+0x7d]
  40f7e4:	in     ax,0x3e
  40f7e7:	enter  0x8c36,0x16
  40f7eb:	cmp    al,0x5f
  40f7ed:	lds    esi,FWORD PTR [ebx-0x15f82954]
  40f7f3:	mov    edi,0x68d2e787
  40f7f8:	push   eax
  40f7f9:	cli    
  40f7fa:	sub    DWORD PTR [esi-0x58],ebx
  40f7fd:	lods   eax,DWORD PTR ds:[esi]
  40f7fe:	mov    cl,0xc6
  40f800:	mov    ch,0x2f
  40f802:	xor    eax,0xfdf91314
  40f807:	inc    eax
  40f808:	push   esi
  40f809:	pop    es
  40f80a:	inc    ebx
  40f80b:	pop    es
  40f80c:	push   cs
  40f80d:	push   eax
  40f80e:	pop    edx
  40f80f:	aaa    
  40f810:	in     al,dx
  40f811:	in     al,dx
  40f812:	call   0x3c0c2ecc
  40f817:	mov    cl,0x51
  40f819:	cld    
  40f81a:	rol    DWORD PTR [ecx],1
  40f81c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f81e:	mov    ah,BYTE PTR [edx+0x2]
  40f821:	std    
  40f822:	or     ch,BYTE PTR [edi-0x27a88e90]
  40f828:	pop    es
  40f829:	in     eax,dx
  40f82a:	fsub   DWORD PTR [ecx+0x2c347677]
  40f830:	mov    dh,0xb8
  40f832:	jmp    0xb2408441
  40f837:	and    al,0x8b
  40f839:	test   eax,0xc379f571
  40f83e:	test   BYTE PTR [eax+0x26],al
  40f841:	out    dx,al
  40f842:	inc    edi
  40f843:	xchg   DWORD PTR [esi+0x24f3429f],edx
  40f849:	inc    edx
  40f84a:	lods   al,BYTE PTR ds:[esi]
  40f84b:	std    
  40f84c:	jnp    0x40f8bf
  40f84e:	ret    
  40f84f:	cdq    
  40f850:	push   0x4b
  40f852:	je     0x40f7ff
  40f854:	jne    0x40f81b
  40f856:	push   0x51c1a55c
  40f85b:	pop    ecx
  40f85c:	les    eax,FWORD PTR [edx+0x58]
  40f85f:	push   esp
  40f860:	sub    al,0x6d
  40f862:	sub    dl,BYTE PTR [edx]
  40f864:	sub    ah,0x10
  40f867:	mov    ds:0x6a39fc38,al
  40f86c:	pop    edi
  40f86d:	in     eax,dx
  40f86e:	cmp    edi,DWORD PTR [ecx]
  40f870:	lods   al,BYTE PTR ds:[esi]
  40f871:	and    eax,0xe989a123
  40f876:	sub    esp,DWORD PTR [edi-0x41be4af0]
  40f87c:	jle    0x40f867
  40f87e:	jo     0x40f8b3
  40f880:	cmp    eax,0xf70266c8
  40f885:	mov    al,0xe2
  40f887:	pop    edi
  40f888:	cmp    al,0xe7
  40f88a:	mov    esp,0x2f8c0a2d
  40f88f:	outs   dx,DWORD PTR ds:[esi]
  40f890:	inc    ebx
  40f891:	push   ebx
  40f892:	add    BYTE PTR [esi+0x61],0xf4
  40f896:	in     eax,0xe0
  40f898:	gs mov ebx,0x385e0618
  40f89e:	fcmovne st,st(5)
  40f8a0:	jbe    0x40f8db
  40f8a2:	cmp    BYTE PTR [ecx-0xea4204d],bh
  40f8a8:	pop    edx
  40f8a9:	push   eax
  40f8aa:	loope  0x40f82e
  40f8ac:	sbb    ecx,edi
  40f8ae:	clc    
  40f8af:	jge    0x40f905
  40f8b1:	pop    edi
  40f8b2:	cld    
  40f8b3:	dec    esp
  40f8b4:	(bad)  
  40f8b5:	sbb    edx,ebx
  40f8b7:	imul   ebx,DWORD PTR [edi],0x6f691152
  40f8bd:	int    0x90
  40f8bf:	and    BYTE PTR [esi+0x31],dh
  40f8c2:	jmp    0x889119e8
  40f8c7:	mov    bh,0xa7
  40f8c9:	mov    eax,ds:0x36caa9c
  40f8ce:	mov    ebp,0x2cc23e66
  40f8d3:	adc    al,bh
  40f8d5:	stc    
  40f8d6:	and    DWORD PTR [ecx-0x5c093e7d],eax
  40f8dc:	inc    eax
  40f8dd:	push   DWORD PTR [eax-0x1d]
  40f8e0:	rcl    BYTE PTR [ecx],1
  40f8e2:	(bad)  
  40f8e3:	rol    BYTE PTR [edi-0x4b9b24d4],cl
  40f8e9:	xchg   esp,eax
  40f8ea:	xchg   DWORD PTR [edi],edi
  40f8ec:	mov    ecx,0x5eaaffeb
  40f8f1:	pop    edx
  40f8f2:	repz fisttp QWORD PTR [edi]
  40f8f5:	or     ah,0x93
  40f8f8:	retf   0x5eef
  40f8fb:	jo     0x40f888
  40f8fd:	int3   
  40f8fe:	inc    esp
  40f8ff:	push   0x80542a07
  40f904:	push   0xa856b58a
  40f909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f90a:	retf   
  40f90b:	dec    edi
  40f90c:	adc    DWORD PTR [edx+0x6f],edx
  40f90f:	outs   dx,DWORD PTR ds:[esi]
  40f910:	cmp    BYTE PTR [esi-0x716499bb],dh
  40f916:	sub    DWORD PTR [esi+0x1e],0x8
  40f91a:	inc    edi
  40f91b:	shl    BYTE PTR [ecx+0x7f],cl
  40f91e:	jne    0x40f8cc
  40f920:	cdq    
  40f921:	aas    
  40f922:	xor    eax,0xe6d58530
  40f927:	fwait
  40f928:	popa   
  40f929:	sub    ecx,DWORD PTR [esi-0x45098360]
  40f92f:	mov    esp,0x90e3d6aa
  40f934:	dec    ebp
  40f935:	nop
  40f936:	mov    ebx,DWORD PTR [ebx+0x5e630272]
  40f93c:	div    DWORD PTR [ecx]
  40f93e:	outs   dx,DWORD PTR ds:[esi]
  40f93f:	in     al,dx
  40f940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f941:	cs mov esp,0xf5685c65
  40f947:	pop    ss
  40f948:	sbb    al,BYTE PTR [ecx+0x4bb0b129]
  40f94e:	mov    al,ds:0xf1b02049
  40f953:	out    0xd7,eax
  40f955:	(bad)  
  40f956:	mov    dh,0x3d
  40f958:	xchg   esp,eax
  40f959:	imul   esp,DWORD PTR [esi],0xa
  40f95c:	push   ecx
  40f95d:	adc    edi,DWORD PTR [ecx-0x54]
  40f960:	dec    eax
  40f961:	sbb    cl,BYTE PTR ds:0x58bcbf10
  40f967:	nop
  40f968:	(bad)  
  40f969:	repnz and ah,BYTE PTR [ecx-0xcf0cdb2]
  40f970:	sbb    eax,0x28
  40f973:	dec    ebp
  40f974:	xchg   esi,eax
  40f975:	ret    
  40f976:	add    al,0xe9
  40f978:	xchg   esp,eax
  40f979:	mov    cl,0xfe
  40f97b:	push   ds
  40f97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f97d:	stos   BYTE PTR es:[edi],al
  40f97e:	jae    0x40f9a1
  40f980:	sub    al,BYTE PTR ds:0xec584206
  40f986:	jp     0x40f955
  40f988:	daa    
  40f989:	push   esi
  40f98a:	out    0x55,al
  40f98c:	cld    
  40f98d:	repz or edi,DWORD PTR [edi-0x44]
  40f991:	dec    ecx
  40f992:	jno    0x40f975
  40f994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f995:	sub    eax,0x98e71718
  40f99a:	pop    ebx
  40f99b:	sub    al,0x42
  40f99d:	cdq    
  40f99e:	into   
  40f99f:	cmp    esi,DWORD PTR ds:0xaeae9f34
  40f9a5:	loopne 0x40f940
  40f9a7:	mov    DWORD PTR [edx-0x3c],eax
  40f9aa:	mov    cl,0x7
  40f9ac:	enter  0xe44c,0xfc
  40f9b0:	(bad)  
  40f9b1:	pop    ss
  40f9b2:	and    al,0x75
  40f9b4:	mov    eax,0x954e917e
  40f9b9:	cmp    BYTE PTR [ebx-0x49],0x6f
  40f9bd:	cs and esp,edi
  40f9c0:	xor    ebx,DWORD PTR ds:0xc40d0247
  40f9c6:	and    DWORD PTR [eax],edx
  40f9c8:	int    0x78
  40f9ca:	bound  ecx,QWORD PTR [edx]
  40f9cc:	ins    DWORD PTR es:[edi],dx
  40f9cd:	lea    ecx,cs:[edx-0x35]
  40f9d1:	pop    esi
  40f9d2:	push   es
  40f9d3:	or     ebp,DWORD PTR [ebx-0x2a31149a]
  40f9d9:	ins    DWORD PTR es:[edi],dx
  40f9da:	add    ah,BYTE PTR [ecx-0x4aa23ab5]
  40f9e0:	push   ss
  40f9e1:	mov    al,ds:0x871f5b26
  40f9e6:	dec    esi
  40f9e7:	call   0x146a61eb
  40f9ec:	into   
  40f9ed:	fwait
  40f9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ef:	je     0x40fa10
  40f9f1:	or     ebx,edx
  40f9f3:	push   esi
  40f9f4:	repz (bad) 
  40f9f6:	pop    eax
  40f9f7:	loop   0x40fa6c
  40f9f9:	arpl   WORD PTR [eax],sp
  40f9fb:	or     esp,DWORD PTR [edx+0x53]
  40f9fe:	out    0xcf,al
  40fa00:	mov    al,dl
  40fa02:	retf   0xf9a0
  40fa05:	ja     0x40f9e8
  40fa07:	add    ecx,DWORD PTR [esi-0x1]
  40fa0a:	mov    dl,0xb0
  40fa0c:	mov    al,ds:0x544df0a3
  40fa11:	dec    ecx
  40fa12:	stos   BYTE PTR es:[edi],al
  40fa13:	cmp    BYTE PTR ds:0xd9ba7278,cl
  40fa19:	cmp    dh,BYTE PTR [ecx]
  40fa1b:	enter  0x9646,0xb4
  40fa1f:	loope  0x40fa78
  40fa21:	fcmovnu st,st(4)
  40fa23:	aam    0x16
  40fa25:	(bad)  
  40fa26:	mov    edi,0xa695e5
  40fa2b:	loopne 0x40fa34
  40fa2d:	add    eax,0xcee9056e
  40fa32:	push   es
  40fa33:	aam    0x45
  40fa35:	xor    BYTE PTR [esi+0x62],bl
  40fa38:	xchg   esp,eax
  40fa39:	in     eax,dx
  40fa3a:	xchg   ebp,eax
  40fa3b:	mov    ah,0x4f
  40fa3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa3e:	or     DWORD PTR [eax],0x16
  40fa41:	mov    esp,DWORD PTR [ebx+0x28]
  40fa44:	mov    eax,ds:0x1ad661bf
  40fa49:	xor    bh,BYTE PTR [ecx-0x6f27ab6d]
  40fa4f:	jmp    0x935f:0xfc8f9da0
  40fa56:	loopne 0x40fa0f
  40fa58:	imul   esp,ecx,0xc56f6755
  40fa5e:	jp     0x40fada
  40fa60:	out    0xa1,eax
  40fa62:	rcl    BYTE PTR [esp+ebp*8],cl
  40fa65:	push   ecx
  40fa66:	or     al,0x5c
  40fa68:	mov    DWORD PTR ds:0xdd89adee,edi
  40fa6e:	fadd   DWORD PTR [esi*2-0x3955ca0e]
  40fa75:	ja     0x40fa78
  40fa77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa78:	mov    dh,0x95
  40fa7a:	mov    al,0xc1
  40fa7c:	or     al,0xe4
  40fa7e:	loopne 0x40fa55
  40fa80:	jmp    0x8caf:0x3f28206d
  40fa87:	outs   dx,BYTE PTR ds:[esi]
  40fa88:	jns    0x40fa61
  40fa8a:	ficomp WORD PTR [ebx-0x1185262f]
  40fa90:	bound  edi,QWORD PTR [ebx-0x62b76f20]
  40fa96:	lock lods al,BYTE PTR ds:[esi]
  40fa98:	popa   
  40fa99:	dec    ecx
  40fa9a:	inc    ebp
  40fa9b:	mov    bh,BYTE PTR [esi+0x71]
  40fa9e:	inc    ebp
  40fa9f:	sub    ch,BYTE PTR [eax+edi*8-0x48]
  40faa3:	xor    eax,0x5a27ce23
  40faa8:	push   eax
  40faa9:	enter  0xf47d,0x4d
  40faad:	dec    eax
  40faae:	pop    esi
  40faaf:	call   0x7c47:0x6be89ebc
  40fab6:	ja     0x40fb36
  40fab8:	jl     0x40faa3
  40faba:	aaa    
  40fabb:	xor    ecx,DWORD PTR [ecx]
  40fabd:	aaa    
  40fabe:	test   DWORD PTR [ebx],esi
  40fac0:	shl    BYTE PTR [edi+0x3bc1a4e2],cl
  40fac6:	sub    ch,BYTE PTR [ebx]
  40fac8:	leave  
  40fac9:	inc    ecx
  40faca:	inc    ecx
  40facb:	fld    DWORD PTR [edx+ebp*4+0x398d2de7]
  40fad2:	sti    
  40fad3:	and    eax,0xdde43bfb
  40fad8:	ror    BYTE PTR [ecx+ebx*8-0x7f],0xe0
  40fadd:	add    BYTE PTR [eax-0x38],cl
  40fae0:	test   BYTE PTR [esi-0x6d],dh
  40fae3:	les    ebp,FWORD PTR [edx+0x20]
  40fae6:	fdivp  st(4),st
  40fae8:	ficomp DWORD PTR [ebp+ebp*2-0x5e]
  40faec:	mov    esi,ss
  40faee:	cwde   
  40faef:	aaa    
  40faf0:	mov    bh,0x8f
  40faf2:	sub    edx,DWORD PTR [ebx-0x3]
  40faf5:	xchg   esi,eax
  40faf6:	(bad)
  40faf9:	and    bl,BYTE PTR [eax]
  40fafb:	mov    eax,0xda9764b9
  40fb00:	xchg   esi,eax
  40fb01:	ror    edi,cl
  40fb03:	cmovbe ebx,DWORD PTR [ecx]
  40fb06:	nop
  40fb07:	in     eax,0x71
  40fb09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb0a:	fcomp  DWORD PTR fs:[esi+edx*4-0x6f499c0d]
  40fb12:	pop    es
  40fb13:	popa   
  40fb14:	xchg   edi,eax
  40fb15:	enter  0xf966,0xc5
  40fb19:	sub    eax,0xe95a5824
  40fb1e:	cmp    eax,0x155cd407
  40fb23:	sub    DWORD PTR [ebx+0x4c],esp
  40fb26:	mov    eax,ds:0xf182f0d8
  40fb2b:	inc    eax
  40fb2c:	dec    edi
  40fb2d:	outs   dx,BYTE PTR ds:[esi]
  40fb2e:	std    
  40fb2f:	jne    0x40fbae
  40fb31:	or     al,0xd2
  40fb33:	icebp  
  40fb34:	push   ds
  40fb35:	xor    al,0xa1
  40fb37:	outs   dx,DWORD PTR ds:[esi]
  40fb38:	mov    dh,0x82
  40fb3a:	jae    0x40fb24
  40fb3c:	sar    DWORD PTR [ebp-0x5c],1
  40fb3f:	adc    bh,BYTE PTR gs:[ebp+0x5460310d]
  40fb46:	jo     0x40fb54
  40fb48:	mov    bl,0x55
  40fb4a:	jb     0x40fb43
  40fb4c:	rol    BYTE PTR [esi-0x253b6f1d],0x32
  40fb53:	mov    ch,0x70
  40fb55:	inc    eax
  40fb56:	test   al,0xe9
  40fb58:	xor    al,dh
  40fb5a:	leave  
  40fb5b:	gs jg  0x40fb02
  40fb5e:	inc    ecx
  40fb5f:	in     al,dx
  40fb60:	loope  0x40fbb4
  40fb62:	cmp    bl,0x26
  40fb65:	stos   BYTE PTR es:[edi],al
  40fb66:	mov    ebx,0x89a712ea
  40fb6b:	and    BYTE PTR [ecx+0xaedecf7],al
  40fb71:	or     ah,BYTE PTR [edi+0x3b]
  40fb74:	and    eax,0x2d7014f5
  40fb79:	pop    ecx
  40fb7a:	pop    ebp
  40fb7b:	pop    ebp
  40fb7c:	gs scas eax,DWORD PTR es:[di]
  40fb7f:	fstp   TBYTE PTR [ebp+edx*4-0x1eb3c7f1]
  40fb86:	nop
  40fb87:	(bad)  
  40fb88:	cmp    edx,esp
  40fb8a:	and    dh,dh
  40fb8c:	je     0x40fbd8
  40fb8e:	stc    
  40fb8f:	dec    ebp
  40fb90:	push   ebp
  40fb91:	lods   eax,DWORD PTR ds:[esi]
  40fb92:	xor    ebp,DWORD PTR [esi-0x38]
  40fb95:	sbb    DWORD PTR [ebx+0x589a7f8d],esi
  40fb9b:	lds    ebx,FWORD PTR [edi]
  40fb9d:	shl    al,0xee
  40fba0:	sub    eax,0xecb1f322
  40fba5:	outs   dx,BYTE PTR ds:[esi]
  40fba6:	inc    ebp
  40fba7:	dec    esi
  40fba8:	pop    es
  40fba9:	sub    BYTE PTR [ebx-0x66],bh
  40fbac:	xor    DWORD PTR [ebp+0x34],edi
  40fbaf:	call   0xbfdb:0x7295169d
  40fbb6:	stos   BYTE PTR es:[edi],al
  40fbb7:	inc    edi
  40fbb8:	push   ecx
  40fbb9:	and    BYTE PTR [ebx],dl
  40fbbb:	in     al,dx
  40fbbc:	adc    al,0xd4
  40fbbe:	mov    ds:0xdc57eb27,eax
  40fbc3:	adc    eax,0x59f2c91f
  40fbc8:	cmp    BYTE PTR [si-0x45],ah
  40fbcc:	dec    esp
  40fbcd:	inc    ebx
  40fbce:	ins    DWORD PTR es:[edi],dx
  40fbcf:	daa    
  40fbd0:	jb     0x40fbf8
  40fbd2:	scas   al,BYTE PTR es:[edi]
  40fbd3:	clc    
  40fbd4:	int3   
  40fbd5:	mov    edi,0x6346db54
  40fbda:	in     al,0x8f
  40fbdc:	lds    ebp,FWORD PTR [ecx-0x1c]
  40fbdf:	in     eax,dx
  40fbe0:	push   0x24b5ef67
  40fbe5:	jno    0x40fc14
  40fbe7:	sbb    al,0x62
  40fbe9:	cli    
  40fbea:	dec    esi
  40fbeb:	(bad)  
  40fbec:	ins    DWORD PTR es:[edi],dx
  40fbed:	xchg   esi,eax
  40fbee:	fsubr  st,st(1)
  40fbf0:	or     DWORD PTR [eax-0x31],0xdee385a
  40fbf7:	in     al,dx
  40fbf8:	pop    ebx
  40fbf9:	daa    
  40fbfa:	push   cs
  40fbfb:	jmp    0x4b6d:0xcbaa9e5d
  40fc02:	js     0x40fc43
  40fc04:	jmp    0xeb833840
  40fc09:	jnp    0x40fc6b
  40fc0b:	outs   dx,BYTE PTR ds:[esi]
  40fc0c:	push   ecx
  40fc0d:	fidiv  DWORD PTR [esi+0x37ed49ad]
  40fc13:	fnsave [edi]
  40fc15:	mov    al,0xad
  40fc17:	mov    dl,0xce
  40fc19:	push   ebp
  40fc1a:	push   cs
  40fc1b:	and    ch,BYTE PTR [ebx-0x1a]
  40fc1e:	or     DWORD PTR [ebx+0x158510e0],ebp
  40fc24:	cmp    DWORD PTR [ecx+0x61e38d1f],ecx
  40fc2a:	data16 sahf 
  40fc2c:	ret    0x16a5
  40fc2f:	test   al,0x4f
  40fc31:	outs   dx,BYTE PTR ss:[esi]
  40fc33:	dec    esp
  40fc34:	mov    edx,0x78f48388
  40fc39:	and    eax,0xd9634c66
  40fc3e:	scas   eax,DWORD PTR es:[edi]
  40fc3f:	inc    ecx
  40fc40:	jns    0x40fcb1
  40fc42:	add    eax,0x563b085b
  40fc47:	mov    dh,0x75
  40fc49:	mov    esp,0x1f3650a5
  40fc4e:	dec    edx
  40fc4f:	lods   eax,DWORD PTR ds:[esi]
  40fc50:	jecxz  0x40fbfd
  40fc52:	pop    esi
  40fc53:	add    ch,BYTE PTR [edi+ecx*2-0x24]
  40fc57:	ficomp DWORD PTR [eax+0x7b]
  40fc5a:	ja     0x40fbf7
  40fc5c:	ins    BYTE PTR es:[edi],dx
  40fc5d:	addr16 (bad) 
  40fc5f:	leave  
  40fc60:	in     eax,0xb
  40fc62:	push   ebp
  40fc64:	jge    0x40fccc
  40fc66:	stos   DWORD PTR es:[edi],eax
  40fc67:	push   esi
  40fc68:	lahf   
  40fc69:	jae    0x40fc55
  40fc6b:	push   eax
  40fc6c:	(bad)  
  40fc6d:	shr    BYTE PTR [edx],cl
  40fc6f:	mov    edx,0x5ab283ec
  40fc74:	mov    dl,0xf7
  40fc76:	call   0x5031f65b
  40fc7b:	sbb    BYTE PTR [esi-0x5b],ch
  40fc7e:	out    dx,al
  40fc7f:	pusha  
  40fc80:	pop    ebp
  40fc81:	dec    ebx
  40fc82:	jle    0x40fc3a
  40fc84:	sbb    al,0xb2
  40fc86:	add    al,0xb4
  40fc88:	and    eax,0x27c6fa1d
  40fc8d:	jne    0x40fcf7
  40fc8f:	push   ss
  40fc90:	pushf  
  40fc91:	xor    al,0xbd
  40fc93:	add    BYTE PTR [ebp+0x53],bl
  40fc96:	nop
  40fc97:	sar    DWORD PTR [ebp+0x2fdaccb8],0xb4
  40fc9e:	add    eax,0xd51f6e7c
  40fca3:	sub    eax,0x8900d831
  40fca8:	sbb    ch,BYTE PTR [ebp+0x2852adeb]
  40fcae:	mov    ds,WORD PTR [edi-0x3d]
  40fcb1:	inc    esi
  40fcb2:	retf   0xd023
  40fcb5:	call   0x1ccd:0x8a849f17
  40fcbc:	loope  0x40fcff
  40fcbe:	cwde   
  40fcbf:	jns    0x40fc6f
  40fcc1:	mov    fs,WORD PTR gs:[edi+0x26]
  40fcc5:	imul   edx,edx,0xfffffff9
  40fcc8:	xor    BYTE PTR [eax-0x4a899220],0x58
  40fccf:	xchg   edx,eax
  40fcd0:	adc    dl,BYTE PTR [esi]
  40fcd2:	test   DWORD PTR [ecx-0x63],ebx
  40fcd5:	ret    
  40fcd6:	call   0x111914a7
  40fcdb:	sahf   
  40fcdc:	push   ds
  40fcdd:	imul   eax,DWORD PTR [edi-0x79a1c041],0xffffffa5
  40fce4:	pop    ss
  40fce5:	sub    BYTE PTR [ebx+0x1ef9d44f],0x1c
  40fcec:	repz sahf 
  40fcee:	icebp  
  40fcef:	inc    esi
  40fcf0:	int    0x6f
  40fcf2:	xchg   esi,eax
  40fcf3:	jmp    0xa953:0xce1f7579
  40fcfa:	sahf   
  40fcfb:	push   ecx
  40fcfc:	jl     0x40fc8d
  40fcfe:	call   0xc7ae:0xe3aecc81
  40fd05:	jle    0x40fc88
  40fd07:	inc    ecx
  40fd08:	pop    ebx
  40fd09:	bound  ebp,QWORD PTR [edx-0x5e363051]
  40fd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd10:	push   es
  40fd11:	xchg   edx,eax
  40fd12:	icebp  
  40fd13:	int    0x1a
  40fd15:	and    al,0x7b
  40fd17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd18:	push   ss
  40fd19:	std    
  40fd1a:	push   ss
  40fd1b:	sub    ch,cl
  40fd1d:	mov    esi,0x3715e8a6
  40fd22:	xor    eax,eax
  40fd24:	sahf   
  40fd25:	ror    BYTE PTR [eax],1
  40fd27:	xor    eax,0xfa3b3d1a
  40fd2c:	xchg   edx,eax
  40fd2d:	mov    ebx,0x94eb5932
  40fd32:	inc    ebp
  40fd33:	mov    DWORD PTR [edx+0x50],ebx
  40fd36:	(bad)  
  40fd38:	mov    ah,0xf4
  40fd3a:	dec    edx
  40fd3b:	pop    ecx
  40fd3c:	xchg   ebx,eax
  40fd3d:	outs   dx,BYTE PTR ds:[esi]
  40fd3e:	das    
  40fd3f:	jne    0x40fd2b
  40fd41:	adc    ebp,ecx
  40fd43:	enter  0x7376,0x8e
  40fd47:	mov    eax,ds:0xcdc152f0
  40fd4c:	dec    ebx
  40fd4d:	in     al,dx
  40fd4e:	out    dx,al
  40fd4f:	sub    DWORD PTR [edi+edi*4-0x6],edx
  40fd53:	push   cs
  40fd54:	sbb    al,0x89
  40fd56:	inc    edx
  40fd57:	dec    edi
  40fd58:	mov    bl,0xd8
  40fd5a:	adc    al,0xf4
  40fd5c:	lods   eax,DWORD PTR ds:[esi]
  40fd5d:	out    0xf4,eax
  40fd5f:	into   
  40fd60:	xor    ah,BYTE PTR [ebp+0x3a]
  40fd63:	js     0x40fdde
  40fd65:	jbe    0x40fd72
  40fd67:	mov    al,ds:0x40b68dcd
  40fd6c:	inc    esp
  40fd6d:	sub    DWORD PTR [edi-0x6c321f0d],ebp
  40fd73:	ficomp DWORD PTR [ebx]
  40fd75:	push   0x57e694ab
  40fd7a:	nop
  40fd7b:	gs or  al,0x47
  40fd7e:	or     BYTE PTR [esi],bl
  40fd80:	icebp  
  40fd81:	dec    ecx
  40fd82:	je     0x40fdb8
  40fd84:	cwde   
  40fd85:	inc    ebx
  40fd86:	and    eax,0xed51f196
  40fd8b:	rcl    DWORD PTR ds:0xee5c6de3,0x1f
  40fd92:	xor    esp,DWORD PTR ds:0xabdad648
  40fd98:	pop    eax
  40fd99:	ss js  0x40fd4d
  40fd9c:	mov    DWORD PTR [ecx-0x38407190],esp
  40fda2:	mov    al,ds:0x2bee4420
  40fda7:	dec    ebx
  40fda8:	mov    ecx,0x90a424ce
  40fdad:	sub    eax,0xb8321843
  40fdb2:	jo     0x40fddb
  40fdb4:	sbb    DWORD PTR [eax-0x3b757044],ebx
  40fdba:	xchg   edi,eax
  40fdbb:	add    al,0xfd
  40fdbd:	jp     0x40fe17
  40fdbf:	cwde   
  40fdc0:	retf   
  40fdc1:	mov    edx,0x8a6eed7d
  40fdc6:	aaa    
  40fdc7:	sbb    ebx,DWORD PTR [eax+0x229eba83]
  40fdcd:	cmc    
  40fdce:	clc    
  40fdcf:	je     0x40fdbf
  40fdd1:	das    
  40fdd2:	xor    edx,DWORD PTR [edi-0x77c38d2b]
  40fdd8:	jbe    0x40fe4c
  40fdda:	xchg   BYTE PTR [edx],ch
  40fddc:	ja     0x40fddd
  40fdde:	in     eax,0xd4
  40fde0:	into   
  40fde1:	ficom  DWORD PTR [edx]
  40fde3:	push   0x87351b5c
  40fde8:	mov    edx,0x9dfdf6ab
  40fded:	mov    dh,0xc1
  40fdef:	and    DWORD PTR [ecx-0xd720c8c],0xffffffc1
  40fdf6:	ror    ch,cl
  40fdf8:	ins    DWORD PTR es:[edi],dx
  40fdf9:	ret    
  40fdfa:	gs xchg ebp,eax
  40fdfc:	shr    BYTE PTR [edi+0xbe221b4],cl
  40fe02:	aas    
  40fe03:	mov    fs,WORD PTR [ebx-0x41]
  40fe06:	pop    ebp
  40fe07:	cmp    al,0x3d
  40fe09:	add    DWORD PTR [eax+0x22],esi
  40fe0c:	push   cs
  40fe0d:	push   es
  40fe0e:	and    al,0xca
  40fe10:	call   0x13b89912
  40fe15:	or     edx,edi
  40fe17:	ins    BYTE PTR es:[edi],dx
  40fe18:	mov    ds:0x8792093f,al
  40fe1d:	inc    ebp
  40fe1e:	nop
  40fe1f:	and    ebp,DWORD PTR ds:[esi-0x45c46684]
  40fe26:	outs   dx,DWORD PTR ds:[esi]
  40fe27:	ds mov bl,0xc8
  40fe2a:	push   cs
  40fe2b:	pop    ecx
  40fe2c:	add    al,ah
  40fe2e:	push   eax
  40fe2f:	adc    bh,bh
  40fe31:	jmp    0x27c5d0c
  40fe36:	inc    ebx
  40fe37:	or     DWORD PTR [ebp-0x1aa2e7e7],ebp
  40fe3d:	dec    esi
  40fe3e:	arpl   WORD PTR [ebp+eax*2-0x12706ea8],si
  40fe45:	sub    DWORD PTR [ecx-0x68],esi
  40fe48:	fcmovnb st,st(4)
  40fe4a:	cli    
  40fe4b:	inc    ecx
  40fe4c:	test   DWORD PTR ds:0x7a91c604,ebp
  40fe52:	outs   dx,DWORD PTR ds:[esi]
  40fe53:	gs jb  0x40fdf5
  40fe56:	jmp    0xfc9a:0xf3e4925
  40fe5d:	out    0xab,al
  40fe5f:	and    DWORD PTR [eax-0x23],eax
  40fe62:	(bad)  [ecx+edi*8]
  40fe65:	std    
  40fe66:	pop    ss
  40fe67:	fdivr  QWORD PTR [edi+0x4228e58b]
  40fe6d:	loop   0x40fee6
  40fe6f:	mov    eax,ds:0x503cfb8e
  40fe74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe75:	mov    DWORD PTR ds:0x6cfd26e,edx
  40fe7b:	sahf   
  40fe7c:	push   0xed1af39d
  40fe81:	ja     0x40fe86
  40fe83:	cvtps2pd xmm2,xmm6
  40fe86:	jge    0x40fe21
  40fe88:	push   ds
  40fe89:	xchg   ecx,eax
  40fe8a:	xchg   ch,ch
  40fe8c:	sar    ecx,cl
  40fe8e:	into   
  40fe8f:	int3   
  40fe90:	hlt    
  40fe91:	fwait
  40fe92:	shl    BYTE PTR [ebx+eiz*4],1
  40fe95:	jle    0x40ff12
  40fe97:	std    
  40fe98:	mov    ah,0xbf
  40fe9a:	mov    DWORD PTR [ebx],eax
  40fe9c:	scas   al,BYTE PTR es:[edi]
  40fe9d:	xor    esi,DWORD PTR [edx]
  40fe9f:	pop    edx
  40fea0:	std    
  40fea1:	out    0xd,al
  40fea3:	and    BYTE PTR [ebx],0xca
  40fea6:	xchg   ebx,eax
  40fea7:	add    DWORD PTR [edi+0x26],ecx
  40feaa:	push   edx
  40feab:	or     edi,DWORD PTR [ecx+ebx*1-0x59d9a8db]
  40feb2:	cdq    
  40feb3:	sbb    eax,0x43d39bb
  40feb8:	mov    BYTE PTR [esi],al
  40feba:	lods   al,BYTE PTR ds:[esi]
  40febb:	popa   
  40febc:	and    dh,BYTE PTR [eax-0x69]
  40febf:	sbb    al,BYTE PTR [edi-0x41b8c3f6]
  40fec5:	jae    0x40fefe
  40fec7:	xchg   ebx,eax
  40fec8:	sub    al,0xa9
  40feca:	sub    DWORD PTR [ebx-0x3785ec0e],ebp
  40fed0:	xor    BYTE PTR [edi-0x4fd9b539],0x54
  40fed7:	and    BYTE PTR [edi-0x1bb9746b],cl
  40fedd:	test   al,0x19
  40fedf:	pop    esi
  40fee0:	adc    esp,edx
  40fee2:	popf   
  40fee3:	lahf   
  40fee4:	jno    0x40fe9d
  40fee6:	dec    ebx
  40fee7:	jb     0x40fecf
  40fee9:	and    al,0x3c
  40feeb:	aas    
  40feec:	adc    BYTE PTR [ecx-0x77dd252a],0xeb
  40fef3:	pop    eax
  40fef4:	lods   eax,DWORD PTR ds:[esi]
  40fef5:	imul   edi,DWORD PTR [esi+0xcba5b56],0xffffff90
  40fefc:	arpl   si,si
  40fefe:	in     al,dx
  40feff:	test   DWORD PTR [ebx-0x30],esp
  40ff02:	mov    dh,0xe0
  40ff04:	xchg   ebx,eax
  40ff05:	loop   0x40feac
  40ff07:	add    DWORD PTR [ecx],esp
  40ff09:	adc    BYTE PTR [eax+esi*4+0x4c38b132],bh
  40ff10:	jmp    0x3d31:0x70baafd0
  40ff17:	jbe    0x40ff95
  40ff19:	dec    edi
  40ff1a:	jmp    0x40ff55
  40ff1c:	mov    ecx,0x34cd828
  40ff21:	mov    ah,0x4
  40ff23:	jp     0x40ff1d
  40ff25:	or     eax,edi
  40ff27:	jp     0x40feee
  40ff29:	xchg   esp,eax
  40ff2a:	fcomp  DWORD PTR [eax-0x64bf57d2]
  40ff30:	(bad)  
  40ff31:	mov    ah,0xa0
  40ff33:	(bad)  
  40ff34:	popa   
  40ff35:	jns    0x40feeb
  40ff37:	stc    
  40ff38:	mov    dl,0x58
  40ff3a:	xlat   BYTE PTR ds:[ebx]
  40ff3b:	hlt    
  40ff3c:	(bad)  
  40ff3d:	and    DWORD PTR [esp+edx*2-0x39],ecx
  40ff41:	push   ebp
  40ff42:	sbb    dh,BYTE PTR [edx+0x7b]
  40ff45:	xor    al,0x8f
  40ff47:	mov    edi,DWORD PTR [esi]
  40ff49:	(bad)  
  40ff4a:	int3   
  40ff4b:	cli    
  40ff4c:	pop    es
  40ff4d:	add    DWORD PTR [ecx+ebx*2+0xd409f1],ebx
  40ff54:	mov    dh,0x7a
  40ff56:	jge    0x40ff62
  40ff58:	and    ebx,DWORD PTR ds:0x839e7fe
  40ff5e:	sbb    BYTE PTR [edx+0x74dda7a0],0xc4
  40ff65:	sub    dl,al
  40ff67:	mov    ch,BYTE PTR ds:0x4ce74c1e
  40ff6d:	jmp    0xa6179976
  40ff72:	or     dl,BYTE PTR [eax+0x12769dc5]
  40ff78:	ins    BYTE PTR es:[edi],dx
  40ff79:	jo     0x40ff9b
  40ff7b:	jmp    0x40ffed
  40ff7d:	addr16 or eax,0xc26ac570
  40ff83:	push   edx
  40ff84:	out    dx,al
  40ff85:	inc    ebx
  40ff86:	add    al,0x51
  40ff88:	imul   ebp,DWORD PTR [ebx-0x43b896b0],0x39
  40ff8f:	sbb    eax,DWORD PTR [ebx+eax*8]
  40ff92:	inc    edi
  40ff93:	pop    ecx
  40ff94:	frstor [ebx]
  40ff96:	call   0x8dbcaace
  40ff9b:	xor    cl,BYTE PTR [edx-0x27]
  40ff9e:	icebp  
  40ff9f:	adc    esi,0x26
  40ffa2:	jl     0x40ffc6
  40ffa4:	cmp    eax,0x8de9e508
  40ffa9:	retf   0x413c
  40ffac:	(bad)  
  40ffad:	fcom   st(7)
  40ffaf:	into   
  40ffb0:	mov    ah,0xb4
  40ffb2:	sbb    BYTE PTR [ecx+edx*1+0x6a],bl
  40ffb6:	lea    eax,[eax-0xa]
  40ffb9:	call   0x710b59c4
  40ffbe:	jno    0x40fff6
  40ffc0:	mov    edi,ebx
  40ffc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffc3:	das    
  40ffc4:	xor    al,0x8f
  40ffc6:	xor    eax,0xf27408a8
  40ffcb:	lods   al,BYTE PTR ds:[esi]
  40ffcc:	mov    edi,0x2c369de6
  40ffd1:	and    ebx,eax
  40ffd3:	push   esi
  40ffd4:	ret    0xb18c
  40ffd7:	add    al,0xbb
  40ffd9:	sbb    al,0x70
  40ffdb:	push   ss
  40ffdc:	(bad)  
  40ffdd:	xor    BYTE PTR [ecx-0x5f64a84a],cl
  40ffe3:	pop    edi
  40ffe4:	repnz test DWORD PTR [edx+0x7f],esp
  40ffe8:	mov    edx,0x371bca13
  40ffed:	mov    cl,0xed
  40ffef:	ror    DWORD PTR ds:0x8bd24656,cl
  40fff5:	jns    0x41000e
  40fff7:	fnop   
  40fff9:	loop   0x40ffa9
  40fffb:	les    edi,FWORD PTR [edi-0x67]
  40fffe:	sbb    al,0x7f
  410000:	pop    ecx
  410001:	xchg   ebx,eax
  410002:	lea    eax,[ebp+0x65e15f75]
  410008:	mov    al,ds:0x3f2b21ae
  41000d:	sbb    al,BYTE PTR [ebp+0x7d5b522f]
  410013:	stos   DWORD PTR es:[edi],eax
  410014:	mov    ss,WORD PTR [edi]
  410016:	add    DWORD PTR [ebx],ecx
  410018:	sub    al,0x4c
  41001a:	jg     0x410079
  41001c:	(bad)  
  41001d:	je     0x40ffd5
  41001f:	push   edx
  410020:	(bad)  
  410021:	scas   al,BYTE PTR es:[edi]
  410022:	aas    
  410023:	stos   BYTE PTR es:[edi],al
  410024:	cmp    al,0xaa
  410026:	in     al,dx
  410027:	pop    ebx
  410028:	lods   al,BYTE PTR ds:[esi]
  410029:	cdq    
  41002a:	jg     0x40ffe6
  41002c:	mov    DWORD PTR [ecx],0xf00ee3bf
  410032:	mov    edx,DWORD PTR [ecx]
  410034:	das    
  410035:	nop
  410036:	adc    BYTE PTR [edx],ah
  410038:	outs   dx,DWORD PTR ds:[esi]
  410039:	pop    ebp
  41003a:	popf   
  41003b:	hlt    
  41003c:	or     al,0x3a
  41003e:	push   es
  41003f:	sub    ch,BYTE PTR [edx+0x51]
  410042:	outs   dx,BYTE PTR ds:[esi]
  410043:	test   DWORD PTR [esi-0xf],ebx
  410046:	outs   dx,BYTE PTR ds:[esi]
  410047:	leave  
  410048:	rcr    BYTE PTR [bx+si],cl
  41004b:	add    ebp,eax
  41004d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004e:	mov    WORD PTR [edx+0x656ac6f1],ds
  410054:	push   ds
  410055:	push   es
  410056:	cmp    DWORD PTR [eax+0x90aef68],0xffffffff
  41005d:	ins    BYTE PTR es:[edi],dx
  41005e:	push   eax
  41005f:	(bad)  
  410060:	loopne 0x410026
  410062:	jle    0x410058
  410064:	mov    ebx,esp
  410066:	pop    ecx
  410067:	cmp    ebx,DWORD PTR [edx-0x259213c2]
  41006d:	(bad)  
  41006e:	in     eax,dx
  41006f:	mov    edi,fs
  410071:	sbb    ah,BYTE PTR [edx-0x19b803e7]
  410077:	out    dx,al
  410078:	or     edx,ebx
  41007a:	in     al,dx
  41007b:	int    0xb5
  41007d:	std    
  41007e:	out    0xdb,eax
  410080:	cwde   
  410081:	idiv   ch
  410083:	adc    edi,DWORD PTR [edx]
  410085:	mov    edx,edi
  410087:	pusha  
  410088:	mov    dh,0xd4
  41008a:	repnz add eax,0xb8cbfffd
  410090:	xor    al,0x5c
  410092:	mov    ecx,0x5d8bbeee
  410097:	inc    edx
  410098:	mov    ebx,0x2e6a5301
  41009d:	retf   0xded
  4100a0:	scas   eax,DWORD PTR es:[di]
  4100a2:	jae    0x4100b9
  4100a4:	push   ebx
  4100a5:	jnp    0x4100f9
  4100a7:	jae    0x4100d6
  4100a9:	cmp    DWORD PTR [ecx],eax
  4100ab:	jne    0x4100ab
  4100ad:	dec    ecx
  4100ae:	enter  0xfcbc,0x32
  4100b2:	daa    
  4100b3:	jbe    0x410069
  4100b5:	pop    es
  4100b6:	push   eax
  4100b7:	inc    DWORD PTR [eax+0xf3b6ae8]
  4100bd:	xchg   esp,eax
  4100be:	test   cl,al
  4100c0:	rcl    bh,1
  4100c2:	hlt    
  4100c3:	jbe    0x4100fc
  4100c5:	(bad)
  4100c8:	or     BYTE PTR [ebp+0x1f7e1824],0xef
  4100cf:	and    eax,0xb9adfa36
  4100d4:	cs add al,0x40
  4100d7:	xchg   ebp,eax
  4100d8:	mov    ch,0x69
  4100da:	test   eax,0x1069e41e
  4100df:	or     bl,BYTE PTR [esi+0x41e75506]
  4100e5:	fwait
  4100e6:	or     al,0x2c
  4100e8:	pusha  
  4100e9:	aaa    
  4100ea:	mov    dl,0x79
  4100ec:	sub    BYTE PTR [eax-0x27],0xfe
  4100f0:	push   eax
  4100f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100f2:	fld    TBYTE PTR es:[eax]
  4100f5:	mov    eax,0xc25bf545
  4100fa:	jno    0x4100ac
  4100fc:	in     eax,dx
  4100fd:	outs   dx,DWORD PTR ds:[esi]
  4100fe:	sub    ebp,edi
  410100:	(bad)  
  410101:	and    al,0x7
  410103:	mov    bl,0xad
  410105:	jecxz  0x410093
  410107:	jmp    0xed2e35b0
  41010c:	js     0x410178
  41010e:	dec    DWORD PTR [edi]
  410110:	es adc al,0x2
  410113:	(bad)  
  410114:	xor    al,0x12
  410116:	fadd   QWORD PTR [esi]
  410118:	fcmovnb st,st(4)
  41011a:	ja     0x41009e
  41011c:	xchg   ecx,eax
  41011d:	push   esp
  41011e:	iret   
  41011f:	das    
  410120:	cmp    ebp,DWORD PTR [ecx+ecx*4-0x7929c4de]
  410127:	addr16 jge 0x41019c
  41012a:	or     eax,0xdb6094a0
  41012f:	outs   dx,DWORD PTR ds:[esi]
  410130:	inc    di
  410132:	push   eax
  410133:	and    al,0xd8
  410135:	push   ebx
  410136:	leave  
  410137:	add    ebx,DWORD PTR ds:0xfb502bec
  41013d:	jno    0x410150
  41013f:	test   ah,0xc6
  410142:	jne    0x41011e
  410144:	pushf  
  410145:	xor    cl,ch
  410147:	ins    BYTE PTR es:[edi],dx
  410148:	or     bl,BYTE PTR [esi]
  41014a:	mov    eax,ds:0x5d2012da
  41014f:	pop    ss
  410150:	rol    DWORD PTR [ecx+0x44e334f7],0x6d
  410157:	(bad)  
  410158:	rcr    BYTE PTR [ecx],cl
  41015a:	mov    edi,0xdb23c3da
  41015f:	push   ebx
  410160:	stos   DWORD PTR es:[edi],eax
  410161:	aas    
  410162:	cwde   
  410163:	pop    ecx
  410164:	mov    edi,DWORD PTR [eax]
  410166:	js     0x4101d3
  410168:	lds    edi,FWORD PTR [edx+0x4a]
  41016b:	add    ch,BYTE PTR [ebp+esi*8+0x60fc982c]
  410172:	imul   ecx,DWORD PTR cs:[eax+edi*4],0x42
  410177:	or     ebx,DWORD PTR [eax-0xa]
  41017a:	mov    al,0xb5
  41017c:	pop    ds
  41017d:	mov    al,ds:0x6044a3c1
  410182:	imul   edx,DWORD PTR [edx+eax*8+0x70544953],0x921af9dc
  41018d:	in     al,0xf7
  41018f:	xor    ecx,DWORD PTR [eax+0x69ed2e8a]
  410195:	or     al,0x8e
  410197:	cld    
  410198:	adc    eax,0x5ffdeb42
  41019d:	sub    al,0xc8
  41019f:	es popf 
  4101a1:	aad    0x4e
  4101a3:	cdq    
  4101a4:	inc    edi
  4101a5:	cmc    
  4101a6:	imul   ebp,DWORD PTR [edx+0x64],0x3e
  4101aa:	push   ds
  4101ab:	jmp    0x41014f
  4101ad:	dec    ebp
  4101ae:	push   esi
  4101af:	fld    QWORD PTR [eax]
  4101b1:	clc    
  4101b2:	push   ecx
  4101b3:	retf   0x78d3
  4101b6:	xor    BYTE PTR [edx-0x1478b469],ah
  4101bc:	call   0xfdb:0x78b61156
  4101c3:	jl     0x410166
  4101c5:	push   ss
  4101c6:	ret    0x9bc0
  4101c9:	inc    ebx
  4101ca:	nop
  4101cb:	(bad)  
  4101cc:	fisttp QWORD PTR [edx-0x69659c95]
  4101d2:	stc    
  4101d3:	mov    al,ds:0x4e5173a7
  4101d8:	inc    esi
  4101d9:	outs   dx,DWORD PTR ds:[esi]
  4101da:	inc    eax
  4101db:	mov    edx,0xe02cf788
  4101e0:	enter  0xe06b,0x6
  4101e4:	stc    
  4101e5:	xchg   ecx,eax
  4101e6:	cdq    
  4101e7:	test   eax,0x96d01eb8
  4101ec:	sahf   
  4101ed:	enter  0xbf7c,0x40
  4101f1:	mov    edi,0x2279b552
  4101f6:	push   edx
  4101f7:	cld    
  4101f8:	stos   BYTE PTR es:[edi],al
  4101f9:	dec    ecx
  4101fa:	mov    al,ds:0x1faa661b
  4101ff:	into   
  410200:	ins    DWORD PTR es:[edi],dx
  410201:	test   eax,0x891298b0
  410206:	inc    esi
  410207:	sub    eax,0x5a9937ba
  41020c:	imul   ecx,DWORD PTR [ebx+edi*4+0x23],0xffffffa9
  410211:	ret    
  410212:	rol    DWORD PTR [eax-0xc],cl
  410215:	out    0x71,al
  410217:	ror    BYTE PTR [eax-0x4f],1
  41021a:	fisubr WORD PTR [edx-0xf1bccf2]
  410220:	in     eax,0xdb
  410222:	xchg   edi,eax
  410223:	cmc    
  410224:	(bad)  
  410225:	sbb    eax,0x8e1827f0
  41022a:	push   edx
  41022b:	sbb    eax,0x43dd7941
  410230:	loopne 0x410202
  410232:	es cmc 
  410234:	hlt    
  410235:	mov    bh,0x52
  410237:	push   edx
  410238:	mov    bl,0x94
  41023a:	mov    bl,0x9c
  41023c:	icebp  
  41023d:	out    0xdb,al
  41023f:	in     al,dx
  410240:	mov    edi,0xb8dec315
  410245:	and    bl,bh
  410247:	fisubr DWORD PTR [edx]
  410249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41024a:	in     al,0xcb
  41024c:	outs   dx,BYTE PTR ds:[esi]
  41024d:	push   es
  41024e:	mov    fs,WORD PTR [esi+0x15]
  410251:	pop    es
  410252:	sub    eax,0x71589329
  410257:	or     al,0xdc
  410259:	fist   DWORD PTR [edi-0x3]
  41025c:	test   edx,esp
  41025e:	add    esi,DWORD PTR [eax-0x689df8ce]
  410264:	(bad)  
  410265:	push   ebp
  410266:	pop    edi
  410267:	retf   0xfaff
  41026a:	test   DWORD PTR [eax+0x16c48ee3],eax
  410270:	sbb    BYTE PTR [ecx-0x5d2d838e],0xf4
  410277:	ret    0xa9bf
  41027a:	pop    eax
  41027b:	aaa    
  41027c:	mov    eax,ds:0xcda42ab8
  410281:	xor    bl,BYTE PTR [eax]
  410283:	pop    edx
  410284:	xor    dh,BYTE PTR [ebp+0x3c7c6824]
  41028a:	cdq    
  41028b:	aad    0xfa
  41028d:	addr16 out dx,eax
  41028f:	push   cs
  410290:	jne    0x410259
  410292:	push   edi
  410293:	out    0x92,al
  410295:	push   0xfffffffd
  410297:	sub    dh,bl
  410299:	jnp    0x4102f3
  41029b:	test   DWORD PTR [ebp-0x5b],esp
  41029e:	out    0x5d,eax
  4102a0:	jb     0x410290
  4102a2:	sbb    DWORD PTR ds:0xb9114492,ebp
  4102a8:	fadd   DWORD PTR [esi]
  4102aa:	outs   dx,BYTE PTR ds:[esi]
  4102ab:	push   eax
  4102ac:	lock sub ebp,DWORD PTR [ebp+0x4c56b648]
  4102b3:	adc    dl,BYTE PTR [edx+0x4d]
  4102b6:	cmp    esp,DWORD PTR [esi-0x79189b42]
  4102bc:	lods   al,BYTE PTR ds:[esi]
  4102bd:	sub    eax,0xfda2fafb
  4102c2:	dec    ebp
  4102c3:	lock popa 
  4102c5:	leave  
  4102c6:	iret   
  4102c7:	(bad)  
  4102c8:	pop    ecx
  4102c9:	inc    ebx
  4102ca:	int3   
  4102cb:	stos   BYTE PTR es:[edi],al
  4102cc:	rep outs dx,BYTE PTR ds:[esi]
  4102ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102cf:	mul    BYTE PTR [edx+0x6a26d3ab]
  4102d5:	call   0x71af:0xd4a4acae
  4102dc:	jg     0x4102d8
  4102de:	mov    ecx,0x274ab1bd
  4102e3:	jae    0x410354
  4102e5:	and    DWORD PTR [edi],0xf6f5e8f0
  4102eb:	push   0xffffffa6
  4102ed:	mov    BYTE PTR ss:[eax],bh
  4102f0:	shl    BYTE PTR [ebx+0x3f099d1],1
  4102f6:	imul   ebx,edx,0xcf5abf22
  4102fc:	cmp    bl,dh
  4102fe:	add    cl,BYTE PTR [edx-0x29f23939]
  410304:	mov    al,ds:0xd51bcd44
  410309:	dec    edx
  41030a:	fidiv  WORD PTR [esi]
  41030c:	daa    
  41030d:	dec    eax
  41030e:	push   esi
  41030f:	sub    eax,0xc88d617d
  410314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410315:	cs popa 
  410317:	and    cl,ah
  410319:	fimul  DWORD PTR [ebp+edi*2+0x1deaee4b]
  410320:	sti    
  410321:	and    BYTE PTR [edx-0x1dcd95bc],cl
  410327:	xchg   BYTE PTR [ebp-0x3a],dl
  41032a:	popf   
  41032b:	loop   0x41037d
  41032d:	fdiv   QWORD PTR [edx*4+0x4f83b225]
  410334:	inc    ecx
  410335:	imul   bh
  410337:	stos   DWORD PTR es:[edi],eax
  410338:	xlat   BYTE PTR ds:[ebx]
  410339:	fidivr DWORD PTR [esi+0x4fb7cf97]
  41033f:	dec    ebp
  410340:	outs   dx,DWORD PTR ds:[esi]
  410341:	adc    DWORD PTR [edi+0x38df8871],eax
  410347:	retf   
  410348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410349:	dec    eax
  41034a:	push   ds
  41034b:	rol    DWORD PTR [esi-0x62],0xf1
  41034f:	jne    0x2f96a895
  410355:	add    DWORD PTR [eax],eax
  410357:	push   ss
  410358:	jo     0x4103cc
  41035a:	outs   dx,BYTE PTR ds:[esi]
  41035b:	xor    DWORD PTR [ecx],ebp
  41035d:	and    al,0x44
  41035f:	xor    BYTE PTR [ecx],dh
  410361:	sub    esi,DWORD PTR [eax]
  410363:	arpl   WORD PTR [ecx],bx
  410365:	push   edi
  410366:	rol    BYTE PTR [ecx],cl
  410368:	cmp    ebx,0xffffff96
  41036b:	sti    
  41036c:	xchg   ebx,eax
  41036d:	sti    
  41036e:	loop   0x4103b4
  410370:	loopne 0x41036f
  410372:	xchg   ebx,eax
  410373:	jnp    0x4103aa
  410375:	and    dl,BYTE PTR [eax]
  410377:	lahf   
  410378:	out    0xb8,al
  41037a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41037b:	test   BYTE PTR [ecx-0x4f],ch
  41037e:	pop    ebp
  41037f:	jbe    0x4103f0
  410381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410382:	pop    ds
  410383:	xchg   ebp,eax
  410384:	mov    al,0x14
  410386:	pushf  
  410387:	jge    0x410369
  410389:	js     0x41039d
  41038b:	xchg   ecx,eax
  41038c:	js     0x41032f
  41038e:	je     0x410320
  410390:	out    dx,al
  410391:	loope  0x4103fa
  410393:	shr    ebx,0x2b
  410396:	addr16 clc 
  410398:	dec    edx
  410399:	push   ebp
  41039a:	adc    DWORD PTR [esp+eax*4+0x57],ebp
  41039e:	shr    BYTE PTR [edi-0xe],1
  4103a1:	retf   0xbb89
  4103a4:	shr    bh,0x99
  4103a7:	in     al,0xab
  4103a9:	inc    edi
  4103aa:	into   
  4103ab:	xor    eax,0x711eaa5e
  4103b0:	cwde   
  4103b1:	pop    ebx
  4103b2:	jae    0x410343
  4103b4:	test   DWORD PTR [eax+0x2256bdae],0xf0ba8377
  4103be:	xchg   esi,eax
  4103bf:	cmc    
  4103c0:	lahf   
  4103c1:	iret   
  4103c2:	cld    
  4103c3:	or     BYTE PTR [edx],bl
  4103c5:	or     BYTE PTR [edx-0x37e7c66e],ah
  4103cb:	inc    ecx
  4103cc:	pushf  
  4103cd:	cli    
  4103ce:	out    dx,eax
  4103cf:	xchg   BYTE PTR [di-0x78],ch
  4103d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d4:	mov    DWORD PTR [ecx],eax
  4103d6:	les    edx,FWORD PTR [ecx+0x47]
  4103d9:	jle    0x4103db
  4103db:	iret   
  4103dc:	and    BYTE PTR [ecx+0x53a7e2c7],cl
  4103e2:	adc    eax,0xee51348
  4103e7:	sub    al,bl
  4103e9:	xor    esi,DWORD PTR [eax+esi*1+0x11]
  4103ed:	retf   
  4103ee:	mov    ds:0xe3c3ebb9,eax
  4103f3:	ja     0x4103cc
  4103f5:	aam    0xc6
  4103f7:	pop    eax
  4103f8:	ins    BYTE PTR es:[edi],dx
  4103f9:	leave  
  4103fa:	xchg   BYTE PTR [edi+edi*8+0x265fefbb],cl
  410401:	test   al,0x5b
  410403:	push   DWORD PTR [ecx]
  410405:	stos   BYTE PTR es:[edi],al
  410406:	xor    al,0x82
  410408:	add    eax,0xa6af9056
  41040d:	repz (bad) 
  41040f:	sub    DWORD PTR cs:[edi+0x3a365e21],0x24
  410417:	mov    WORD PTR [ecx+0x11],ss
  41041a:	mov    ecx,0xb7d7ffa
  41041f:	test   eax,0x29be884a
  410424:	push   cs
  410425:	add    edx,DWORD PTR [esi-0x49]
  410428:	mov    esp,0xb45db388
  41042d:	push   ecx
  41042e:	sbb    BYTE PTR [edx+0x3d],dh
  410431:	mov    ebx,0x684e64d4
  410436:	add    DWORD PTR ds:0xc439cf1e,ecx
  41043c:	dec    esi
  41043d:	inc    esp
  41043e:	push   edx
  41043f:	fldcw  WORD PTR [edi-0xf7a47cc]
  410445:	cmp    al,BYTE PTR [ebp+edx*4-0x50ef9c0d]
  41044c:	xor    al,0x11
  41044e:	in     eax,0x22
  410450:	test   DWORD PTR [ecx-0x45],0x89c873f5
  410457:	xor    DWORD PTR [ecx+0x17],eax
  41045a:	adc    eax,0x780ba997
  41045f:	push   0x2a
  410461:	adc    ebp,DWORD PTR [edi]
  410463:	push   eax
  410464:	and    ch,0x94
  410467:	or     BYTE PTR [ecx],cl
  410469:	push   eax
  41046a:	jo     0x4104eb
  41046c:	xchg   esp,eax
  41046d:	sbb    eax,esp
  41046f:	xchg   ecx,eax
  410470:	xor    DWORD PTR [esi+0x5],edx
  410473:	lock int3 
  410475:	ret    0x2354
  410478:	aam    0x6d
  41047a:	pop    eax
  41047b:	xor    eax,0xc78024b7
  410480:	sbb    BYTE PTR [esi+eiz*8-0x1fc71d94],bl
  410487:	call   0x29cf:0x4fa2f453
  41048e:	(bad)  
  41048f:	lock in al,0xc8
  410492:	loop   0x410486
  410494:	mov    edx,0xb551e57e
  410499:	push   DWORD PTR [edx-0x36]
  41049c:	adc    al,0x3e
  41049e:	adc    eax,0x7bea7f2
  4104a3:	pop    es
  4104a4:	push   cs
  4104a5:	out    dx,eax
  4104a6:	sub    eax,eax
  4104a8:	lds    esi,FWORD PTR [edi-0x3]
  4104ab:	inc    edx
  4104ac:	cli    
  4104ad:	jbe    0x410517
  4104af:	aad    0x33
  4104b1:	lods   eax,DWORD PTR ds:[esi]
  4104b2:	imul   BYTE PTR [ebp-0x2a0ef97c]
  4104b8:	sbb    ebx,ebx
  4104ba:	jl     0x4104ad
  4104bc:	dec    ecx
  4104bd:	add    edi,DWORD PTR [esi]
  4104bf:	out    0xc7,eax
  4104c1:	dec    eax
  4104c2:	lea    esp,[ebx+0xd]
  4104c5:	push   ds
  4104c6:	hlt    
  4104c7:	sub    al,0x49
  4104c9:	xchg   edi,eax
  4104ca:	dec    ebx
  4104cb:	and    eax,DWORD PTR [esi]
  4104cd:	rcr    DWORD PTR [ebx],cl
  4104cf:	int    0x3
  4104d1:	lods   eax,DWORD PTR ds:[esi]
  4104d2:	push   cs
  4104d3:	rcl    BYTE PTR [edi+0x63],cl
  4104d6:	mov    WORD PTR [eax+0x51eb84],ds
  4104dc:	adc    DWORD PTR [esi],ebx
  4104de:	xchg   ebp,eax
  4104df:	mov    ecx,0x1212020e
  4104e4:	jno    0x4104ca
  4104e6:	nop
  4104e7:	fs ret 
  4104e9:	call   bp
  4104ec:	xchg   ecx,eax
  4104ed:	xchg   edx,eax
  4104ee:	cmp    al,0xa
  4104f0:	xchg   DWORD PTR [eax],eax
  4104f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f3:	sahf   
  4104f4:	push   ds
  4104f5:	xchg   BYTE PTR [ecx-0x37],ah
  4104f8:	jmp    ecx
  4104fa:	popa   
  4104fb:	daa    
  4104fc:	ja     0x41055b
  4104fe:	call   0x4e3f:0xb5757fed
  410505:	pushf  
  410506:	inc    edi
  410507:	sub    eax,0xf9c5d1b9
  41050c:	add    BYTE PTR [esi],bh
  41050e:	jne    0x41054e
  410510:	push   esp
  410511:	out    dx,al
  410512:	sub    ebx,eax
  410514:	mov    ds:0xc72fa1fe,eax
  410519:	mov    ah,0xec
  41051b:	out    dx,al
  41051c:	call   0x92f6bf70
  410521:	stc    
  410522:	xlat   BYTE PTR ds:[ebx]
  410523:	adc    BYTE PTR [ecx],bl
  410525:	xchg   edi,eax
  410526:	les    esi,FWORD PTR [edx*2-0x68c08b68]
  41052d:	and    eax,0xd5a40d82
  410532:	retf   
  410533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410534:	jno    0x4104d5
  410536:	nop
  410537:	mov    cl,0xbf
  410539:	sbb    ecx,DWORD PTR [ebp+0x77c4cc01]
  41053f:	inc    ecx
  410540:	lods   al,BYTE PTR ds:[esi]
  410541:	nop
  410542:	adc    esp,DWORD PTR [ecx-0x68]
  410545:	and    BYTE PTR cs:[esi+esi*1],bh
  410549:	aas    
  41054a:	(bad)  
  41054b:	out    dx,eax
  41054c:	jl     0x4105bf
  41054e:	push   esp
  41054f:	inc    ebp
  410550:	push   ebp
  410551:	idiv   ch
  410553:	xor    BYTE PTR [esi+0x104c67e1],0x80
  41055a:	ror    BYTE PTR [ebx],1
  41055c:	mov    esp,0xb123c7d3
  410561:	stos   BYTE PTR es:[edi],al
  410562:	fwait
  410563:	sbb    al,0xf3
  410565:	push   0xa320c87b
  41056a:	sbb    al,0xea
  41056c:	fcom   DWORD PTR [ebx-0x5c5b8608]
  410572:	mov    ds:0x6d21598d,al
  410577:	mov    dl,0x51
  410579:	je     0x4105a5
  41057b:	lods   al,BYTE PTR ds:[esi]
  41057c:	jecxz  0x410543
  41057e:	out    0xde,eax
  410580:	mov    ebx,0xc911b4bf
  410585:	adc    eax,0x569e11f4
  41058a:	cmovg  esp,DWORD PTR [ebp+0x3a3a89e7]
  410591:	xor    eax,0x8c038bb
  410596:	fs in  eax,0xcb
  410599:	pop    ebx
  41059a:	dec    esi
  41059b:	ins    BYTE PTR es:[edi],dx
  41059c:	test   al,0x4c
  41059e:	push   ebx
  41059f:	push   cs
  4105a0:	(bad)  
  4105a1:	and    cl,bh
  4105a3:	(bad)  
  4105a4:	cmp    DWORD PTR [eax+0x4391761d],0x76529c74
  4105ae:	pop    ds
  4105af:	call   0x697b3352
  4105b4:	pop    es
  4105b5:	adc    BYTE PTR [ebx+0x74],0xdc
  4105b9:	xor    al,0x7f
  4105bb:	hlt    
  4105bc:	out    dx,eax
  4105bd:	mov    eax,es
  4105bf:	push   edx
  4105c0:	hlt    
  4105c1:	jae    0x4105ac
  4105c3:	sub    edx,esi
  4105c5:	pop    ebx
  4105c6:	retf   0xc2b8
  4105c9:	adc    ecx,edx
  4105cb:	xchg   ecx,eax
  4105cc:	out    0xb8,eax
  4105ce:	and    al,0x8f
  4105d0:	(bad)  
  4105d1:	leave  
  4105d2:	jo     0x410639
  4105d4:	mov    eax,ds:0x43d661e6
  4105d9:	add    esi,ebx
  4105db:	add    edx,DWORD PTR [esi+0x7f173d48]
  4105e1:	push   0xd84853ab
  4105e6:	ficomp DWORD PTR [eax-0x6b9c15ae]
  4105ec:	xchg   BYTE PTR [eax+edx*1-0x6e],dl
  4105f0:	pop    ds
  4105f1:	fwait
  4105f2:	(bad)  
  4105f3:	clc    
  4105f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105f5:	out    0x5c,eax
  4105f7:	xchg   esi,eax
  4105f8:	pop    edx
  4105f9:	shl    BYTE PTR [eax+0x6],cl
  4105fc:	es mov eax,0x744ecc50
  410602:	(bad)  
  410604:	push   ecx
  410605:	mov    esp,0x7931597b
  41060a:	xchg   esp,eax
  41060b:	jmp    0xf76c:0x59551aa6
  410612:	inc    ebp
  410613:	fild   WORD PTR [ebx]
  410615:	mov    cs,WORD PTR [ebp-0x4cbb01ae]
  41061b:	ret    
  41061c:	mov    al,0x16
  41061e:	shl    BYTE PTR [ecx+eax*1-0x443d27d8],0x42
  410626:	fs jecxz 0x4105e7
  410629:	bound  ebp,QWORD PTR [eax+edi*2-0x2df2c3e9]
  410630:	loop   0x410626
  410632:	inc    ecx
  410633:	int    0x2f
  410635:	mov    bh,0xdd
  410637:	jl     0x4106aa
  410639:	std    
  41063a:	daa    
  41063b:	mov    cl,0x3
  41063d:	das    
  41063e:	arpl   WORD PTR ds:0x79436d5c,di
  410644:	dec    ecx
  410645:	mov    DWORD PTR [ebp+0x3d22ef4f],edi
  41064b:	inc    esp
  41064c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41064d:	popa   
  41064e:	dec    edx
  41064f:	(bad)  
  410650:	in     al,dx
  410651:	nop
  410652:	mov    ds:0xcb5954a1,eax
  410657:	sbb    edx,DWORD PTR [edx-0x7b]
  41065a:	pop    ecx
  41065b:	je     0x4106a0
  41065d:	inc    ecx
  41065e:	ror    ah,1
  410660:	ja     0x4106bf
  410662:	sbb    dl,BYTE PTR [ebx+eiz*8]
  410665:	hlt    
  410666:	pop    ecx
  410667:	test   BYTE PTR [ecx+0x5a595494],0xb3
  41066e:	ins    BYTE PTR es:[edi],dx
  41066f:	push   ss
  410670:	pop    edi
  410671:	imul   eax,edx,0xffffff96
  410674:	test   BYTE PTR [eax+0x6573340d],0x84
  41067b:	les    esp,FWORD PTR [esi+0x64795597]
  410681:	cdq    
  410682:	and    DWORD PTR [ecx-0x2e],0x7aa1dad3
  410689:	and    DWORD PTR [eax],eax
  41068b:	(bad)  
  41068c:	adc    edx,DWORD PTR ds:0x948c52af
  410692:	sbb    al,0x0
  410694:	fldcw  WORD PTR [ebp-0x21]
  410697:	jl     0x410638
  410699:	sar    BYTE PTR [ebx+edx*4-0x3],0x1b
  41069e:	clc    
  41069f:	sub    edx,ebp
  4106a1:	jb     0x4106af
  4106a3:	sbb    eax,0xcd9c8a33
  4106a8:	push   esi
  4106a9:	mov    edx,0xd5190099
  4106ae:	dec    edi
  4106af:	dec    ecx
  4106b0:	sbb    bl,BYTE PTR [edx-0x7f0418fe]
  4106b6:	mov    ebx,0x5260062e
  4106bb:	jmp    0xeef3:0xf4efab97
  4106c2:	cli    
  4106c3:	(bad)  
  4106c5:	xchg   esi,eax
  4106c6:	cmc    
  4106c7:	fdiv   QWORD PTR [ecx+0x240f19ac]
  4106cd:	div    eax
  4106cf:	in     al,0xd
  4106d1:	pop    ss
  4106d2:	shl    edi,1
  4106d4:	pop    es
  4106d5:	mov    ds:0xcb0c2b33,eax
  4106da:	jbe    0x410750
  4106dc:	jp     0x4106a3
  4106de:	imul   esp,DWORD PTR [esi],0xbdf91737
  4106e4:	xchg   DWORD PTR ss:[ebp+esi*8-0x1b],eax
  4106e9:	daa    
  4106ea:	jecxz  0x41070d
  4106ec:	aam    0x92
  4106ee:	daa    
  4106ef:	das    
  4106f0:	ins    DWORD PTR es:[edi],dx
  4106f1:	mov    al,0x41
  4106f3:	sub    dl,BYTE PTR [ecx]
  4106f5:	cmp    eax,0x8aa02979
  4106fa:	inc    ecx
  4106fb:	daa    
  4106fc:	and    esi,esp
  4106fe:	clc    
  4106ff:	je     0x41070d
  410701:	xor    BYTE PTR [ecx+0x12],0xeb
  410705:	out    0x81,al
  410707:	lock push ebp
  410709:	je     0x4106a2
  41070b:	pop    ebx
  41070c:	add    BYTE PTR [eax],bh
  41070e:	js     0x4106a7
  410710:	hlt    
  410711:	mov    esi,0x8c97f2dc
  410716:	dec    ebx
  410717:	daa    
  410718:	aas    
  410719:	xor    DWORD PTR [ecx],eax
  41071b:	(bad)  
  41071d:	pushf  
  41071e:	(bad)  
  41071f:	jecxz  0x41078b
  410721:	xchg   esp,eax
  410722:	das    
  410723:	(bad)  
  410724:	cs out 0x86,al
  410727:	adc    bh,BYTE PTR [ecx+esi*2]
  41072a:	loope  0x41076c
  41072c:	push   esp
  41072d:	sub    DWORD PTR [ebx],edi
  41072f:	addr16 dec esi
  410731:	shr    al,0x12
  410734:	add    edi,eax
  410736:	xor    al,0xc6
  410738:	jl     0x4106f8
  41073a:	xor    dh,BYTE PTR [eax+0xe]
  41073d:	inc    edx
  41073e:	in     al,dx
  41073f:	push   edx
  410740:	fs add al,0x23
  410743:	int3   
  410744:	sub    al,ah
  410746:	icebp  
  410747:	nop
  410748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410749:	and    DWORD PTR [eax-0x6636901c],ebp
  41074f:	retf   
  410750:	pop    ss
  410751:	xlat   BYTE PTR ds:[ebx]
  410752:	iret   
  410753:	dec    eax
  410754:	xchg   edx,eax
  410755:	mov    ebp,0x46ccc7c7
  41075a:	add    ecx,DWORD PTR [eax+0x52]
  41075d:	data16 mov ch,0x10
  410760:	mov    esi,DWORD PTR [ebp+0x0]
  410763:	sbb    eax,0x4f3a6cc8
  410768:	jl     0x410704
  41076a:	dec    ecx
  41076b:	cwde   
  41076c:	aas    
  41076d:	or     edi,DWORD PTR [ebx+0x36]
  410770:	out    dx,eax
  410771:	pushf  
  410772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410773:	mov    esp,?
  410775:	idiv   BYTE PTR [esi-0x5f9a703d]
  41077b:	mov    bh,0x26
  41077d:	dec    eax
  41077e:	or     al,0xf7
  410780:	cld    
  410781:	(bad)
  410785:	jmp    0xeacde1b7
  41078a:	xchg   DWORD PTR [edx+0x3b],edx
  41078d:	pop    esi
  41078e:	(bad)  
  410791:	sub    al,0x30
  410793:	ret    
  410794:	push   cs
  410795:	pop    esi
  410796:	rol    BYTE PTR [esi],1
  410798:	mov    cl,0x2b
  41079a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41079b:	in     al,0x66
  41079d:	shl    edi,0x53
  4107a0:	xchg   ebp,eax
  4107a1:	and    al,0x31
  4107a3:	nop
  4107a4:	test   ecx,edi
  4107a6:	aas    
  4107a7:	sahf   
  4107a8:	add    eax,0xc370c989
  4107ad:	fisub  DWORD PTR [edi-0x6f]
  4107b0:	push   ss
  4107b1:	loopne 0x410813
  4107b3:	stos   BYTE PTR es:[edi],al
  4107b4:	loope  0x41078a
  4107b6:	and    al,0x40
  4107b8:	jecxz  0x41080a
  4107ba:	fnsave [ebp+0x2c]
  4107bd:	aam    0x53
  4107bf:	or     eax,0x3c47afe8
  4107c4:	xor    BYTE PTR [ecx-0x3c],bh
  4107c7:	(bad)  
  4107c8:	add    bl,BYTE PTR [ebx]
  4107ca:	in     al,0x2d
  4107cc:	xlat   BYTE PTR ds:[ebx]
  4107cd:	test   eax,0x92591d8d
  4107d2:	mov    dh,0xc0
  4107d4:	repnz das 
  4107d6:	inc    esp
  4107d7:	pusha  
  4107d8:	mov    eax,ds:0x727f8729
  4107dd:	out    0x13,al
  4107df:	cwde   
  4107e0:	dec    esp
  4107e1:	bound  esp,QWORD PTR [ecx]
  4107e3:	iret   
  4107e4:	xchg   ecx,eax
  4107e5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4107e7:	cli    
  4107e8:	jmp    0xb056eaaa
  4107ed:	outs   dx,DWORD PTR ds:[esi]
  4107ee:	jp     0x41078c
  4107f0:	xchg   DWORD PTR [eax+0x49],edi
  4107f3:	je     0x410794
  4107f5:	loope  0x4107ed
  4107f7:	into   
  4107f8:	or     BYTE PTR [esi+0x60a673af],0xf4
  4107ff:	and    eax,0x6de51d28
  410804:	popa   
  410805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410806:	or     BYTE PTR [eax+0x57],bl
  410809:	fsubr  st(4),st
  41080b:	sub    BYTE PTR [esi-0x1b],ch
  41080e:	cld    
  41080f:	mov    eax,ds:0xd6bed028
  410814:	loop   0x410809
  410816:	sar    DWORD PTR [ebx-0x344e1e4e],cl
  41081c:	pminub mm7,mm3
  41081f:	add    ebx,DWORD PTR [ecx]
  410821:	imul   ch
  410823:	jge    0x410843
  410825:	lock dec ebx
  410827:	or     DWORD PTR [edi+0x41],esi
  41082a:	cli    
  41082b:	add    BYTE PTR [esi+0x699e0d5a],0xf9
  410832:	out    0x6,eax
  410834:	fs mov dh,0xe2
  410837:	or     eax,0xd327de26
  41083c:	xchg   ch,dh
  41083e:	(bad)  
  41083f:	iret   
  410840:	or     ecx,0x666bd650
  410846:	bound  ebx,QWORD PTR [ebx+esi*1-0x12b933bb]
  41084d:	lahf   
  41084e:	dec    eax
  41084f:	outs   dx,BYTE PTR ds:[esi]
  410850:	push   cs
  410851:	je     0x410801
  410853:	mov    ch,0x22
  410855:	push   ss
  410856:	daa    
  410857:	sbb    BYTE PTR [ebx+eiz*1],dh
  41085a:	stc    
  41085b:	stc    
  41085c:	dec    edx
  41085d:	pop    es
  41085e:	dec    ebx
  41085f:	mov    eax,0xde70c2f1
  410864:	xchg   ecx,eax
  410865:	mov    al,0x91
  410867:	sbb    edx,esi
  410869:	jecxz  0x4108e8
  41086b:	push   0xde7840b0
  410870:	mov    al,ds:0xcb732f08
  410875:	push   ebp
  410876:	jecxz  0x4108b2
  410878:	mov    ds:0xc11c71c7,eax
  41087d:	cmp    eax,0xcfa3746a
  410882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410883:	dec    esp
  410884:	xor    al,0xbe
  410886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410887:	hlt    
  410888:	(bad)  
  410889:	ret    0xdc6c
  41088c:	mov    edx,0x6b990bef
  410891:	nop
  410892:	pop    ecx
  410893:	adc    ebp,DWORD PTR [esi+ebx*2-0x1f]
  410897:	mov    ?,WORD PTR [ecx+ebx*4-0x72]
  41089b:	arpl   WORD PTR [esi-0x22],bx
  41089e:	imul   esp,DWORD PTR [ebx+0x20a3dca],0xdca64f09
  4108a8:	ins    DWORD PTR es:[edi],dx
  4108a9:	sti    
  4108aa:	and    bl,BYTE PTR [ebx-0x74ed59f]
  4108b0:	mov    esp,0xba1f7996
  4108b5:	add    al,0xd3
  4108b7:	push   ebp
  4108b8:	jnp    0x4108e5
  4108ba:	addr16 pop ecx
  4108bc:	inc    ebp
  4108bd:	mov    bh,0x97
  4108bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108c0:	stos   DWORD PTR es:[edi],eax
  4108c1:	outs   dx,DWORD PTR ds:[esi]
  4108c2:	outs   dx,DWORD PTR ds:[esi]
  4108c3:	repz addr16 jb 0x41085b
  4108c7:	add    eax,DWORD PTR [edi]
  4108c9:	ja     0x410933
  4108cb:	mov    DWORD PTR [edi+eax*1],ecx
  4108ce:	mov    ebp,0x49ad1c2b
  4108d3:	test   eax,0x6f6a0b3e
  4108d8:	add    DWORD PTR ds:0x4efeaaf1,ebx
  4108de:	push   es
  4108df:	xor    al,0x32
  4108e1:	in     al,0x8b
  4108e3:	mov    dl,0xa7
  4108e5:	out    0x5,al
  4108e7:	adc    ah,BYTE PTR [esi+eax*8-0x4b7b3762]
  4108ee:	mov    DWORD PTR [edx],edi
  4108f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108f1:	neg    DWORD PTR [edi]
  4108f3:	imul   ebp,esi,0x6fe7860
  4108f9:	mov    al,0x68
  4108fb:	add    edx,DWORD PTR [esi+0x6f]
  4108fe:	fidiv  WORD PTR [ebx*4+0x7a333dab]
  410905:	ins    BYTE PTR es:[edi],dx
  410906:	(bad)  
  410907:	mov    edx,0xaa1ac6fd
  41090c:	popf   
  41090d:	pop    ecx
  41090e:	mov    ebp,0xa1b7c834
  410913:	add    BYTE PTR [edi-0x2c],bh
  410916:	jp     0x4108ab
  410918:	out    0x73,eax
  41091a:	sbb    edi,DWORD PTR [ecx+edx*4+0x17]
  41091e:	mov    dh,BYTE PTR [esi]
  410920:	mov    dl,0xce
  410922:	cmovge ebx,DWORD PTR [edx+0x78a8eaaf]
  410929:	mov    ebx,0x141b7482
  41092e:	mov    eax,ds:0xa14f845b
  410933:	push   0x16f72dcb
  410938:	or     al,0xb0
  41093a:	mov    ecx,0x204438d5
  41093f:	lods   eax,DWORD PTR ds:[esi]
  410940:	ror    DWORD PTR [edx+0x62],1
  410943:	loop   0x410992
  410945:	jecxz  0x4109af
  410947:	ret    
  410948:	inc    esp
  410949:	mov    al,ds:0xbf308fa5
  41094e:	inc    edx
  41094f:	mov    al,0xe8
  410951:	cli    
  410952:	xor    dl,BYTE PTR [esi+esi*4+0x69]
  410956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410957:	test   DWORD PTR [eax],0x427ecb9c
  41095d:	jl     0x4108fd
  41095f:	cmp    al,0xf8
  410961:	rcr    BYTE PTR ds:0x814ec93,0xe2
  410968:	outs   dx,BYTE PTR ds:[esi]
  410969:	xchg   esp,eax
  41096a:	jmp    0x65baa1d1
  41096f:	mov    bh,0x86
  410971:	clc    
  410972:	jg     0x410995
  410974:	mov    edx,0xa5c798ef
  410979:	mov    DWORD PTR [esi],ecx
  41097b:	adc    dh,BYTE PTR [ecx-0x38]
  41097e:	mov    BYTE PTR [ebx+eax*8+0x4f1daeeb],dl
  410985:	cmp    ebp,ebx
  410987:	sub    eax,ebp
  410989:	inc    edx
  41098a:	xchg   esp,eax
  41098b:	mov    esp,0x4235547c
  410990:	(bad)  
  410991:	lods   al,BYTE PTR ds:[esi]
  410992:	pop    edi
  410993:	or     BYTE PTR [eax-0x24adda56],al
  410999:	gs mov bh,ah
  41099c:	dec    edi
  41099d:	mov    ds:0x882cf3e9,eax
  4109a2:	and    al,0xdf
  4109a4:	pop    edx
  4109a5:	pop    ebx
  4109a6:	rcl    DWORD PTR [ebp-0x6d8fba03],cl
  4109ac:	xlat   BYTE PTR ds:[ebx]
  4109ad:	retf   0x692d
  4109b0:	push   esp
  4109b1:	cmp    edi,DWORD PTR [edx+0x6]
  4109b4:	inc    esp
  4109b5:	fnstenv [esi]
  4109b7:	lahf   
  4109b8:	js     0x41099d
  4109ba:	stc    
  4109bb:	adc    BYTE PTR [edx+0x132748e4],al
  4109c1:	mov    ebp,0x62d4b99c
  4109c6:	pop    ebx
  4109c7:	mov    ?,WORD PTR [ebp-0x53440965]
  4109cd:	cmp    eax,eax
  4109cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109d0:	ss mov ebx,0x6ad9cdad
  4109d6:	test   eax,0x558d10c6
  4109db:	xchg   esp,eax
  4109dc:	sbb    al,0x1e
  4109de:	retf   0xdefb
  4109e1:	lods   al,BYTE PTR ds:[esi]
  4109e2:	or     eax,0x2935a106
  4109e7:	repz in al,dx
  4109e9:	add    BYTE PTR [ecx-0x3aae641e],cl
  4109ef:	pop    es
  4109f0:	mov    bl,0xa7
  4109f2:	loopne 0x410991
  4109f4:	aas    
  4109f5:	fnstenv [ebx]
  4109f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109f8:	jb     0x4109b9
  4109fa:	or     DWORD PTR [esi],ebx
  4109fc:	xor    BYTE PTR [ecx],al
  4109fe:	xor    ah,BYTE PTR [eax+0x6c]
  410a01:	stos   DWORD PTR es:[edi],eax
  410a02:	repz push 0xffffffd8
  410a05:	push   ss
  410a06:	loop   0x4109d2
  410a08:	or     eax,0x9fd25c53
  410a0d:	lods   al,BYTE PTR ds:[esi]
  410a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a0f:	adc    esp,ebx
  410a11:	sub    BYTE PTR [eax-0x31d902bc],0x20
  410a18:	inc    edx
  410a19:	clc    
  410a1a:	loope  0x410a6b
  410a1c:	and    ebx,DWORD PTR [eax+0x24295f72]
  410a22:	fcomp  st(1)
  410a24:	jmp    0x410a23
  410a26:	push   ebx
  410a27:	xchg   edx,eax
  410a28:	outs   dx,DWORD PTR ds:[esi]
  410a29:	ins    BYTE PTR es:[edi],dx
  410a2a:	dec    ecx
  410a2b:	fimul  DWORD PTR ss:[ebp-0x61921bd7]
  410a32:	cld    
  410a33:	xchg   ebx,edx
  410a35:	pop    edx
  410a36:	jmp    FWORD PTR [ebx+0x36]
  410a39:	mov    BYTE PTR [edx+0x2c],cl
  410a3c:	cmp    ecx,DWORD PTR [edi+0x26]
  410a3f:	cmp    BYTE PTR [edi+0x48b222c],cl
  410a45:	dec    edx
  410a46:	adc    al,BYTE PTR [esi+0x443220b2]
  410a4c:	inc    ecx
  410a4d:	retf   0x1d1b
  410a50:	mov    esi,0xcfbabce8
  410a55:	(bad)  
  410a56:	mov    ecx,0xe44739f1
  410a5b:	jne    0x410a45
  410a5d:	inc    ebp
  410a5e:	sahf   
  410a5f:	fcomp  QWORD PTR [ecx+0x117da96]
  410a65:	jl     0x410aab
  410a67:	xchg   ecx,eax
  410a68:	in     al,dx
  410a69:	add    al,0xfd
  410a6c:	push   es
  410a6d:	mov    al,ds:0x4c7a1573
  410a72:	mov    es:0xa65462e0,eax
  410a78:	ins    BYTE PTR es:[edi],dx
  410a79:	(bad)  
  410a7a:	das    
  410a7b:	loop   0x4109ff
  410a7d:	push   0xffffffb4
  410a7f:	scas   al,BYTE PTR es:[edi]
  410a80:	cmp    al,bl
  410a82:	fisubr WORD PTR [esi+edi*2-0x7c]
  410a86:	shr    DWORD PTR [edi],1
  410a88:	dec    edx
  410a89:	and    ch,ah
  410a8b:	mov    WORD PTR [eax+0x68],gs
  410a8e:	clc    
  410a8f:	and    al,0xda
  410a91:	xchg   esi,eax
  410a92:	cwde   
  410a93:	and    al,0x4e
  410a95:	fcmovnbe st,st(3)
  410a97:	pop    es
  410a98:	mov    al,ds:0x3bfe99b7
  410a9d:	lahf   
  410a9e:	adc    BYTE PTR [ecx+0x7c803fc4],ch
  410aa4:	imul   ecx,DWORD PTR [edx+0x15],0xffffffa0
  410aa8:	out    0xa3,eax
  410aaa:	aas    
  410aab:	pop    esp
  410aac:	mov    esi,0x4ea1b770
  410ab1:	pop    esi
  410ab2:	fdivr  QWORD PTR [ecx+edi*4-0x5]
  410ab6:	cmp    bh,dh
  410ab8:	add    esi,DWORD PTR [ebx+0x1cd9f429]
  410abe:	int3   
  410abf:	in     eax,dx
  410ac0:	hlt    
  410ac1:	mov    esi,0x8add7532
  410ac6:	inc    edi
  410ac7:	mov    ds:0x1b8c59a0,al
  410acc:	cdq    
  410acd:	les    ebp,FWORD PTR [ecx-0x7a]
  410ad0:	sub    DWORD PTR [edi+ebx*8],edi
  410ad3:	jae    0x410b06
  410ad5:	cs popa 
  410ad7:	dec    eax
  410ad8:	jns    0x410a8b
  410ada:	jp     0x410b47
  410adc:	mov    edx,0x1b6e7875
  410ae1:	inc    ecx
  410ae2:	stc    
  410ae3:	ror    BYTE PTR [esp+esi*8-0x4bb05a3a],1
  410aea:	sbb    BYTE PTR [esi-0x2e9e8696],ch
  410af0:	fidivr WORD PTR [ebx+eax*8+0x73a6b886]
  410af7:	out    0x10,al
  410af9:	sbb    BYTE PTR [esp+esi*1-0x50],0x64
  410afe:	mul    BYTE PTR ds:0xe8790a38
  410b04:	xor    bh,dl
  410b06:	pop    edx
  410b07:	pop    edi
  410b08:	or     eax,0x2df5ddc3
  410b0d:	jbe    0x410ad1
  410b0f:	add    BYTE PTR [edi+0x26],bh
  410b12:	ret    
  410b13:	nop
  410b14:	aas    
  410b15:	cmp    eax,0x67179cf6
  410b1a:	mov    al,0x9d
  410b1c:	data16 in al,0xcc
  410b1f:	push   es
  410b20:	repnz pop ss
  410b22:	das    
  410b23:	enter  0x6d88,0xdd
  410b27:	jbe    0x410b40
  410b29:	in     eax,dx
  410b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b2b:	push   cs
  410b2c:	xchg   di,ax
  410b2e:	mov    ecx,0x805d1a4c
  410b33:	les    esp,FWORD PTR [edi-0x77]
  410b36:	fmul   QWORD PTR [ecx]
  410b38:	pop    eax
  410b39:	adc    ah,cl
  410b3b:	cli    
  410b3c:	fdivr  DWORD PTR [edi]
  410b3e:	(bad)  
  410b40:	lods   al,BYTE PTR ds:[esi]
  410b41:	push   es
  410b42:	fdiv   DWORD PTR [ecx+0x1a1cc4d]
  410b48:	outs   dx,DWORD PTR ds:[esi]
  410b49:	cmp    al,0x54
  410b4b:	push   ecx
  410b4c:	lock pop es
  410b4e:	jl     0x410bb1
  410b50:	mov    al,ds:0xd3af2888
  410b55:	(bad)  [ebx+eiz*2+0x2e]
  410b59:	in     al,0x2a
  410b5b:	in     eax,0x43
  410b5d:	adc    BYTE PTR [edi+0x38],cl
  410b60:	push   ss
  410b61:	xchg   edx,eax
  410b62:	or     dh,bl
  410b64:	push   edi
  410b65:	pop    ds
  410b66:	add    esp,DWORD PTR [ecx-0x636d38de]
  410b6c:	dec    ecx
  410b6d:	fidivr WORD PTR ss:[eax-0x70e602ec]
  410b74:	sbb    eax,0xa5ddceb5
  410b79:	push   0x49276023
  410b7e:	(bad)  
  410b7f:	fwait
  410b80:	out    dx,eax
  410b81:	lahf   
  410b82:	xor    edx,DWORD PTR [eax]
  410b84:	lods   eax,DWORD PTR ds:[esi]
  410b85:	jne    0x410bb0
  410b87:	(bad)  
  410b88:	jmp    0xb18a:0x5f48dd01
  410b8f:	adc    al,0xd1
  410b91:	inc    ebx
  410b92:	inc    esp
  410b93:	das    
  410b94:	cld    
  410b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b96:	shr    bl,0xba
  410b99:	outs   dx,DWORD PTR ds:[esi]
  410b9a:	ds jmp 0x6e85:0x5804f80f
  410ba2:	iret   
  410ba3:	mov    ?,WORD PTR [esi+0x11]
  410ba6:	cmp    edi,DWORD PTR [ecx-0x3b]
  410ba9:	jg     0x410b8d
  410bab:	xchg   esp,eax
  410bac:	ret    
  410bad:	sub    dl,dl
  410baf:	pop    ss
  410bb0:	mov    ds:0xe66bcb25,eax
  410bb5:	adc    ebp,DWORD PTR [eax-0x1c]
  410bb8:	mov    eax,ds:0xaebeef5f
  410bbd:	jo     0x410bcf
  410bbf:	dec    ecx
  410bc0:	xchg   ecx,eax
  410bc1:	jno    0x410bbe
  410bc3:	out    0xe1,al
  410bc5:	xchg   ebx,eax
  410bc6:	sub    BYTE PTR [ebx],cl
  410bc8:	mov    ebp,0x1503c46
  410bcd:	push   edi
  410bce:	iret   
  410bcf:	ret    0xf86b
  410bd2:	mov    ch,0x52
  410bd4:	dec    ebx
  410bd5:	adc    DWORD PTR [esp+eax*4],0x3a
  410bd9:	xor    BYTE PTR [ebp+0x20b302b],bl
  410bdf:	popa   
  410be0:	dec    eax
  410be1:	jb     0x410b6a
  410be3:	in     eax,dx
  410be4:	test   DWORD PTR [edi],0x5eb5bbe2
  410bea:	outs   dx,DWORD PTR ds:[esi]
  410beb:	stos   BYTE PTR es:[edi],al
  410bec:	bound  ebp,QWORD PTR [ecx]
  410bee:	hlt    
  410bef:	sbb    DWORD PTR [ebx-0x55729b28],eax
  410bf5:	mov    dl,0xa1
  410bf7:	xchg   esp,eax
  410bf8:	repz mov cs,WORD PTR [edx-0x2a7fcd9f]
  410bff:	mov    ebx,0xf09c7694
  410c04:	ret    
  410c05:	mov    bl,0x24
  410c07:	or     ch,BYTE PTR ds:[eax+0xaca2c2]
  410c0e:	shl    DWORD PTR [esi],cl
  410c10:	xchg   BYTE PTR [edi],ah
  410c12:	clc    
  410c13:	mov    dh,0xa8
  410c15:	retf   
  410c16:	xor    BYTE PTR [eax+0x51],dl
  410c19:	addr16 inc ebp
  410c1b:	sub    eax,0xf74573d9
  410c20:	test   esi,esp
  410c22:	pop    ebp
  410c23:	xchg   esi,eax
  410c24:	sbb    al,0x5d
  410c26:	test   BYTE PTR [edi],ah
  410c28:	cli    
  410c29:	jmp    0x4691065a
  410c2e:	push   eax
  410c2f:	cli    
  410c30:	jl     0x410c6a
  410c32:	push   ss
  410c33:	ss stos BYTE PTR es:[edi],al
  410c35:	xor    edi,DWORD PTR [edi]
  410c37:	inc    edx
  410c38:	or     DWORD PTR [ebx],edi
  410c3a:	retf   
  410c3b:	mov    dl,0x89
  410c3d:	sub    bl,0xd4
  410c40:	iret   
  410c41:	and    cl,BYTE PTR [eax+0x6d]
  410c44:	jle    0x410c61
  410c46:	add    BYTE PTR [ebp-0x6fe2cd02],ah
  410c4c:	js     0x410c66
  410c4e:	pop    edi
  410c4f:	fild   QWORD PTR [ebx]
  410c51:	xchg   ebp,eax
  410c52:	xchg   edx,eax
  410c53:	xor    al,0xda
  410c55:	sar    BYTE PTR [ecx],0xa9
  410c58:	ss push edi
  410c5a:	adc    DWORD PTR [edi],0xfffffff8
  410c5d:	std    
  410c5e:	cli    
  410c5f:	mov    al,ds:0x1e3306c0
  410c64:	jmp    0x7f4e:0x87d7b77b
  410c6b:	mov    ds:0xf4b64cd4,eax
  410c70:	cmp    DWORD PTR [edi+0x6c],0x12206da0
  410c77:	enter  0x3740,0x18
  410c7b:	xchg   ebx,eax
  410c7c:	mov    WORD PTR [ebp+edi*4+0x40],gs
  410c80:	shr    esi,1
  410c82:	and    edx,DWORD PTR [ebp-0x4d872c82]
  410c88:	lock pop eax
  410c8a:	push   edi
  410c8b:	test   eax,0xef8ec561
  410c90:	fmul   QWORD PTR [eax-0x4e052444]
  410c96:	nop
  410c97:	stos   DWORD PTR es:[edi],eax
  410c98:	jnp    0x410caf
  410c9a:	push   ebp
  410c9b:	pop    ds
  410c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9d:	pop    esp
  410c9e:	ja     0x410c37
  410ca0:	mov    eax,0xc23a6fcb
  410ca5:	sbb    DWORD PTR [edx],0x8d4907c7
  410cab:	cmc    
  410cac:	(bad)  
  410cad:	cmp    eax,0x51e69c57
  410cb2:	fsubr  DWORD PTR [ecx+0x4f29f839]
  410cb8:	sti    
  410cb9:	imul   ecx,edi,0xffffffcf
  410cbc:	bnd jle 0x410cd8
  410cbf:	and    BYTE PTR [esi+edi*8],bl
  410cc2:	dec    bl
  410cc4:	mov    dh,0xad
  410cc6:	fwait
  410cc7:	(bad)  
  410cc8:	xor    ecx,DWORD PTR [eax-0x2]
  410ccb:	out    dx,eax
  410ccc:	jnp    0x410ccc
  410cce:	jmp    0x8ce0:0xb49cab5f
  410cd5:	or     BYTE PTR [edx-0x34],bh
  410cd8:	int    0x9e
  410cda:	(bad)  
  410cdb:	jecxz  0x410d16
  410cdd:	mov    esi,0x3e6e3757
  410ce2:	push   ds
  410ce3:	dec    ecx
  410ce4:	test   BYTE PTR [eax+ecx*4-0x33dcc7a9],dl
  410ceb:	mov    eax,ds:0xc516dfe
  410cf0:	push   ebx
  410cf1:	aaa    
  410cf2:	cdq    
  410cf3:	jne    0x410cd8
  410cf5:	and    esi,0xac27c905
  410cfb:	jbe    0x410d3a
  410cfd:	jp     0x410c99
  410cff:	mov    ebp,0x534abce9
  410d04:	push   DWORD PTR [ebx+0x70]
  410d07:	icebp  
  410d08:	xlat   BYTE PTR ds:[ebx]
  410d09:	(bad)  
  410d0a:	cli    
  410d0b:	dec    ebp
  410d0c:	lock addr16 pop ebx
  410d0f:	fstp   DWORD PTR [ecx-0x7e079ea6]
  410d15:	and    ah,BYTE PTR [edi]
  410d17:	or     al,0x5c
  410d19:	stc    
  410d1a:	imul   edi,DWORD PTR [ebx+ebx*4+0x35],0xfffffff1
  410d1f:	fs scas al,BYTE PTR es:[edi]
  410d21:	aaa    
  410d22:	je     0x410d26
  410d24:	mov    ah,0x4d
  410d26:	push   es
  410d27:	nop
  410d28:	adc    DWORD PTR [ebx+0x450f57df],edx
  410d2e:	data16 test al,0xd0
  410d31:	test   BYTE PTR ds:0x2fdb7cbe,al
  410d37:	mov    fs,WORD PTR [ebx-0x6d]
  410d3a:	fadd   DWORD PTR [edx+0x30f84256]
  410d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d41:	and    bh,BYTE PTR ds:0xc4573ee3
  410d47:	jns    0x410d71
  410d49:	adc    eax,0x98f1c104
  410d4e:	dec    DWORD PTR [edi+0x46f864d]
  410d54:	dec    esp
  410d55:	pop    edx
  410d56:	jnp    0x410d4d
  410d58:	xor    eax,0x2fe6f7dc
  410d5d:	ja     0x410d96
  410d5f:	jae    0x410dc5
  410d61:	sbb    esi,ecx
  410d63:	or     BYTE PTR [ebx+0x66],0xa4
  410d67:	nop
  410d68:	popa   
  410d69:	mov    ds,WORD PTR [esi+0x7313c7fd]
  410d6f:	adc    eax,0xd608a96b
  410d74:	jo     0x410dec
  410d76:	fbld   TBYTE PTR cs:[ebx+0x5a]
  410d7a:	call   0xd6d8:0xd9d708b6
  410d81:	jbe    0x410ddb
  410d83:	retf   0xc7a9
  410d86:	jnp    0x410df9
  410d88:	push   esi
  410d89:	cmp    eax,DWORD PTR [edi]
  410d8b:	add    ecx,DWORD PTR [edi+0x5c]
  410d8e:	ret    0xbfb1
  410d91:	fadd   st,st(2)
  410d93:	je     0x410da0
  410d95:	push   0xaed60c71
  410d9a:	fsubrp st(7),st
  410d9c:	add    BYTE PTR [ebp+0x5c],bh
  410d9f:	mov    edx,edx
  410da1:	ret    0x102a
  410da4:	adc    al,0x64
  410da6:	or     eax,0x3e883b4f
  410dab:	lds    edi,FWORD PTR [edi]
  410dad:	ret    0xc71e
  410db0:	jmp    esp
  410db2:	repnz push edi
  410db4:	add    bh,BYTE PTR [ebp-0x3d42283]
  410dba:	and    ah,BYTE PTR [ebx+0x44]
  410dbd:	out    dx,al
  410dbe:	add    DWORD PTR [ecx+0x641d305],edi
  410dc4:	push   ecx
  410dc5:	xchg   DWORD PTR [ebp-0x46234224],ebx
  410dcb:	int3   
  410dcc:	nop
  410dcd:	mov    bl,0xd5
  410dcf:	cmc    
  410dd0:	pushf  
  410dd1:	cmp    bh,BYTE PTR [eax]
  410dd3:	aam    0x53
  410dd5:	jbe    0x410dc4
  410dd7:	push   cs
  410dd8:	mov    esp,0xaeda27bb
  410ddd:	sar    dl,0xf2
  410de0:	aam    0x42
  410de2:	mov    esi,0x425fc897
  410de7:	mov    esi,0xad78f088
  410dec:	div    DWORD PTR [edx+0x66]
  410def:	fidiv  DWORD PTR [edx+0x10]
  410df2:	push   ebp
  410df3:	sbb    BYTE PTR [esi],0xad
  410df6:	mov    ds:0xd4020b25,al
  410dfb:	jns    0x410dd7
  410dfd:	jge    0x410d8a
  410dff:	das    
  410e00:	and    al,0x1b
  410e02:	inc    ebp
  410e03:	popa   
  410e04:	inc    ebx
  410e05:	imul   eax,DWORD PTR [eax+0x5a],0x285f4223
  410e0c:	xor    edx,ecx
  410e0e:	push   eax
  410e0f:	and    eax,0x46d78ee2
  410e15:	cmp    al,0x9b
  410e17:	in     eax,dx
  410e18:	fbld   TBYTE PTR [eax+0x54]
  410e1b:	sbb    dl,cl
  410e1d:	mov    al,0xa0
  410e1f:	iret   
  410e20:	jbe    0x410e42
  410e22:	sbb    eax,0x555e9106
  410e27:	(bad)  
  410e28:	leave  
  410e29:	cwde   
  410e2a:	mov    eax,ds:0x5741a6c
  410e2f:	add    eax,0x18a75d92
  410e34:	mov    ch,0x53
  410e36:	inc    edi
  410e37:	ror    BYTE PTR [edi-0x36],0x77
  410e3b:	icebp  
  410e3c:	popf   
  410e3d:	mov    bl,0x6a
  410e3f:	gs (bad) 
  410e41:	nop
  410e42:	jecxz  0x410e87
  410e44:	cwde   
  410e45:	adc    eax,0xdd12c52f
  410e4a:	lds    ebp,FWORD PTR [edi]
  410e4c:	pushf  
  410e4d:	ror    bl,0x9e
  410e50:	ins    BYTE PTR es:[edi],dx
  410e51:	xchg   ecx,eax
  410e52:	jle    0x410e1a
  410e54:	fst    QWORD PTR [eax+0x16a4a7b2]
  410e5a:	jns    0x410e59
  410e5c:	jecxz  0x410de3
  410e5e:	ret    
  410e5f:	sahf   
  410e60:	dec    edi
  410e61:	add    eax,0x39f2eda
  410e66:	call   DWORD PTR [edx+0x304ad672]
  410e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e6d:	cmc    
  410e6e:	mov    WORD PTR [ebx-0x18da1f60],?
  410e74:	ror    DWORD PTR [edi+0x7],1
  410e77:	adc    DWORD PTR [esi+eiz*8-0x1cda2ec5],ebp
  410e7e:	mov    dl,0x95
  410e80:	(bad)  [edi]
  410e82:	sbb    ecx,esp
  410e84:	fsubr  DWORD PTR ds:0xc4a22ef7
  410e8a:	pushf  
  410e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e8c:	mov    ds:0x2e2647f1,eax
  410e91:	jae    0x410ee9
  410e93:	xchg   edx,eax
  410e94:	fsub   QWORD PTR fs:[ebx+eax*4]
  410e98:	mov    ebp,0x78c4db40
  410e9d:	(bad)  
  410e9e:	in     al,0xe7
  410ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea1:	out    0x41,eax
  410ea3:	or     edx,DWORD PTR [edi]
  410ea5:	pop    edi
  410ea6:	add    BYTE PTR ds:0xe29d670b,bh
  410eac:	cwde   
  410ead:	add    eax,0x78d034f8
  410eb2:	and    eax,0x3461503b
  410eb7:	mov    esi,0xc515c76b
  410ebc:	push   ds
  410ebd:	pop    ds
  410ebe:	push   edx
  410ebf:	pop    ds
  410ec0:	mov    edx,0xf6a6abc3
  410ec5:	stos   BYTE PTR es:[edi],al
  410ec6:	sbb    al,0x23
  410ec8:	pop    esi
  410ec9:	cmp    al,0xef
  410ecb:	jo     0x410f09
  410ecd:	mov    WORD PTR [ebx],?
  410ecf:	push   ebx
  410ed0:	add    bh,BYTE PTR [ebp+0x7d]
  410ed3:	mov    ds:0x91e60090,eax
  410ed8:	stos   DWORD PTR es:[edi],eax
  410ed9:	ror    DWORD PTR [ecx+eiz*8-0x6f],cl
  410edd:	sbb    DWORD PTR [ebx-0x10],eax
  410ee0:	(bad)  
  410ee1:	mov    ch,0xe8
  410ee3:	repz pop ebx
  410ee5:	aaa    
  410ee6:	test   BYTE PTR [eax+ebp*8],ch
  410ee9:	or     al,0x28
  410eec:	xor    al,BYTE PTR [edx+0x2f3782aa]
  410ef2:	xchg   esi,eax
  410ef3:	fstp   QWORD PTR [eax]
  410ef5:	xor    eax,0x10fd694e
  410efa:	lods   al,BYTE PTR ds:[esi]
  410efb:	aaa    
  410efc:	cdq    
  410efd:	mov    DWORD PTR [edx+0x40b4a1f3],ebx
  410f03:	(bad)  
  410f04:	retf   0xaaa1
  410f07:	fst    st(7)
  410f09:	repz mov bh,0x43
  410f0c:	sub    dh,BYTE PTR [ecx]
  410f0e:	jecxz  0x410e91
  410f10:	xor    ebp,eax
  410f12:	and    eax,0x6375a540
  410f17:	rcl    eax,0x73
  410f1a:	push   edx
  410f1b:	scas   al,BYTE PTR es:[edi]
  410f1c:	repnz adc cl,0x71
  410f20:	ds add DWORD PTR fs:[edx+0x55],esp
  410f25:	adc    eax,0x204ceb01
  410f2a:	retf   
  410f2b:	xor    al,0xa0
  410f2d:	ror    BYTE PTR [ecx-0x53],0x4b
  410f31:	lock and eax,DWORD PTR [eax+ecx*2]
  410f35:	iret   
  410f36:	cmp    ebx,0x62
  410f39:	clc    
  410f3a:	xor    al,0xee
  410f3c:	mov    eax,0xf9858414
  410f41:	jb     0x410fbd
  410f43:	pusha  
  410f44:	adc    DWORD PTR ds:0x993eaf8f,edx
  410f4a:	xor    al,0xd
  410f4c:	pop    esi
  410f4d:	jbe    0x410f70
  410f4f:	cld    
  410f50:	push   edi
  410f51:	mov    ds:0x38837934,eax
  410f56:	(bad)  
  410f57:	mov    ds:0xb53bc346,al
  410f5c:	aad    0xa9
  410f5e:	jecxz  0x410fcb
  410f60:	cmp    eax,0x887ad869
  410f65:	enter  0x1aa9,0x93
  410f69:	call   0xeb61:0x89cd18ac
  410f70:	fidivr DWORD PTR [edx-0x54]
  410f73:	lea    esp,[edi+0x69]
  410f76:	add    esp,DWORD PTR [edi+0x1]
  410f79:	and    DWORD PTR [ebx-0x79],ebp
  410f7c:	jmp    0x410fea
  410f7e:	add    ah,ah
  410f80:	mov    ds:0x51c1c390,eax
  410f85:	js     0x410f4f
  410f87:	and    al,0x97
  410f89:	mov    esi,0x1685fc2b
  410f8e:	mov    ch,0x2a
  410f90:	test   DWORD PTR [edx+0x6],edx
  410f93:	rol    BYTE PTR [ecx-0x24],1
  410f96:	inc    edx
  410f97:	push   ecx
  410f98:	in     eax,dx
  410f99:	mov    esp,0x202fcbba
  410f9e:	push   es
  410f9f:	push   edi
  410fa0:	dec    esi
  410fa1:	mov    ah,0x0
  410fa3:	popa   
  410fa4:	xchg   esp,eax
  410fa5:	jl     0x411010
  410fa7:	add    al,0x1f
  410fa9:	mov    esp,db7
  410fac:	ins    DWORD PTR es:[edi],dx
  410fad:	dec    eax
  410fae:	ins    DWORD PTR es:[edi],dx
  410faf:	jnp    0x410fe9
  410fb1:	mov    esi,0x7bb93d84
  410fb6:	in     eax,dx
  410fb7:	cs cmp ebp,esp
  410fba:	xchg   BYTE PTR [edi-0x4e15afce],cl
  410fc0:	push   esi
  410fc1:	into   
  410fc2:	push   cs
  410fc3:	ja     0x411015
  410fc5:	in     al,0x90
  410fc7:	rcl    DWORD PTR [esi+0x4d],1
  410fca:	retf   
  410fcb:	mov    cl,0x55
  410fcd:	scas   eax,DWORD PTR es:[edi]
  410fce:	(bad)  
  410fcf:	arpl   WORD PTR [ecx-0x60b76108],bx
  410fd5:	dec    eax
  410fd6:	sbb    dh,BYTE PTR [eax+edi*8]
  410fd9:	sbb    bl,BYTE PTR [ebx]
  410fdb:	xchg   ebp,ebx
  410fdd:	fs popa 
  410fdf:	sub    dl,BYTE PTR [edx]
  410fe1:	pop    eax
  410fe2:	push   ebp
  410fe3:	les    esi,FWORD PTR [edi+0x6b]
  410fe6:	stc    
  410fe7:	pop    ds
  410fe8:	out    0x84,eax
  410fea:	push   eax
  410feb:	cmp    ah,BYTE PTR [edx+0x1bca8b33]
  410ff1:	push   eax
  410ff2:	stos   DWORD PTR es:[edi],eax
  410ff3:	call   0xa7b32a00
  410ff8:	mov    cl,0xf0
  410ffa:	sbb    dh,BYTE PTR [esp+eiz*4-0xf]
  410ffe:	mov    ebp,0x90b9e4ab
  411003:	call   0xd9000cc9
  411008:	pop    edi
  411009:	or     BYTE PTR [edi+0x492de096],ah
  41100f:	mov    ebp,0xaaf82283
  411014:	pop    esi
  411015:	mov    dh,0xf9
  411017:	iret   
  411018:	nop
  411019:	ins    BYTE PTR es:[edi],dx
  41101a:	jne    0x410fff
  41101c:	xchg   edx,eax
  41101d:	push   0xdd1b60b3
  411022:	mov    esp,0x6fd3e285
  411027:	mov    bh,0x2d
  411029:	push   esp
  41102a:	and    ebp,edi
  41102c:	xor    eax,0x748a5da1
  411031:	mov    ecx,DWORD PTR [eax-0x474b25fa]
  411037:	mov    al,ds:0x24de7c92
  41103c:	mov    ah,0x8c
  41103e:	stc    
  41103f:	fmul   st(0),st
  411041:	or     DWORD PTR [edx-0x8],eax
  411044:	loopne 0x411014
  411046:	xor    edi,DWORD PTR [edx-0x5b]
  411049:	pusha  
  41104a:	stos   BYTE PTR es:[edi],al
  41104b:	jne    0x4110b2
  41104d:	pop    ecx
  41104e:	and    al,0x4d
  411050:	aad    0x1b
  411052:	shr    DWORD PTR [ebx+0x6130faf0],0x51
  411059:	(bad)  
  41105a:	jmp    0x411017
  41105c:	push   eax
  41105d:	mov    al,ds:0x29507510
  411062:	mov    ds:0x9768b126,eax
  411067:	sub    DWORD PTR [esi+0x30],edx
  41106a:	fnstenv [esi]
  41106c:	imul   ebx,ecx,0x3c6e389d
  411072:	imul   ebx,esi,0xeb78a9a4
  411078:	scas   ax,WORD PTR es:[edi]
  41107a:	leave  
  41107b:	inc    ebp
  41107c:	fist   WORD PTR [eax-0x20adacf4]
  411082:	stc    
  411083:	inc    esp
  411084:	cwde   
  411085:	sbb    eax,0x4d9ceaef
  41108a:	(bad)  
  41108b:	xchg   esp,eax
  41108c:	and    DWORD PTR [eax+0x72],0xa22ecc92
  411093:	push   0x17
  411095:	stos   BYTE PTR es:[edi],al
  411096:	xchg   edx,eax
  411097:	pushf  
  411098:	fstp   QWORD PTR [esi]
  41109a:	cmc    
  41109b:	and    ebp,DWORD PTR [edx+0xa]
  41109e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41109f:	dec    ebp
  4110a0:	es inc ebp
  4110a2:	xchg   ebp,eax
  4110a3:	pusha  
  4110a4:	push   0x19afeca4
  4110a9:	push   cs
  4110aa:	cmp    bl,dh
  4110ac:	stos   BYTE PTR es:[edi],al
  4110ad:	sub    edx,ecx
  4110af:	sub    esi,DWORD PTR [edi]
  4110b1:	cli    
  4110b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110b3:	bnd jns 0x411135
  4110b6:	leave  
  4110b7:	loopne 0x411131
  4110b9:	inc    eax
  4110ba:	ins    DWORD PTR es:[edi],dx
  4110bb:	adc    ch,bh
  4110bd:	jg     0x411129
  4110bf:	ficomp DWORD PTR [eax-0x32]
  4110c2:	pop    ds
  4110c3:	jmp    0x4110cb
  4110c5:	daa    
  4110c6:	outs   dx,DWORD PTR ds:[esi]
  4110c7:	cmp    esp,eax
  4110c9:	mov    ?,WORD PTR [eax]
  4110cb:	mov    ebx,0x7eb0741e
  4110d0:	push   esp
  4110d1:	rcl    DWORD PTR [edi+0x15b6eb57],1
  4110d7:	mov    ss,edi
  4110d9:	nop
  4110da:	jp     0x4110cd
  4110dc:	adc    al,0xf6
  4110de:	lods   al,BYTE PTR ds:[esi]
  4110df:	mov    dl,dh
  4110e1:	arpl   WORD PTR [edx+0x38],sp
  4110e4:	cmp    bl,BYTE PTR [ebx]
  4110e6:	or     esi,DWORD PTR [edx]
  4110e8:	jo     0x41114b
  4110ea:	fs aas 
  4110ec:	push   esp
  4110ee:	pop    edx
  4110ef:	dec    ebx
  4110f0:	hlt    
  4110f1:	repz mov cl,0x5b
  4110f4:	sbb    edx,DWORD PTR [ecx-0x50368c39]
  4110fa:	pop    ss
  4110fb:	sub    DWORD PTR [esi+edx*8-0x5cd64f50],esi
  411102:	imul   edx,ebp,0xfffffff2
  411105:	add    cl,BYTE PTR [edx]
  411107:	mov    DWORD PTR [edx+0x5934b1d2],eax
  41110d:	cwde   
  41110e:	inc    edx
  41110f:	jecxz  0x411099
  411111:	xchg   ebx,eax
  411112:	cmp    DWORD PTR [ecx+0x22],0xdbcc46fe
  411119:	out    dx,eax
  41111a:	mov    al,ds:0x1276e935
  41111f:	inc    edx
  411120:	add    esp,DWORD PTR [ebp-0x4d53e94f]
  411126:	test   al,0xd0
  411128:	and    BYTE PTR [ebx+edi*2],dl
  41112b:	xlat   BYTE PTR ds:[ebx]
  41112c:	cli    
  41112d:	or     ebp,DWORD PTR [ecx]
  41112f:	int    0x15
  411131:	push   ebx
  411132:	int3   
  411133:	popw   ss
  411135:	and    cl,bl
  411137:	(bad)  
  411138:	ror    BYTE PTR [edi],cl
  41113a:	xchg   edx,eax
  41113b:	aas    
  41113c:	push   eax
  41113d:	cdq    
  41113e:	pop    edi
  41113f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411140:	and    bh,BYTE PTR [edi-0x66]
  411143:	pop    eax
  411144:	(bad)  
  411145:	gs mov ebx,0xaaf49038
  41114b:	dec    edx
  41114c:	pusha  
  41114d:	and    ecx,DWORD PTR [edi-0x64]
  411150:	mov    ebp,0x9cfd38a3
  411155:	inc    esp
  411156:	lea    edi,ds:0x2615cf7c
  41115c:	inc    esi
  41115d:	outs   dx,DWORD PTR ds:[esi]
  41115e:	ss fs inc ecx
  411161:	add    edi,DWORD PTR [ebx]
  411163:	lods   al,BYTE PTR ds:[esi]
  411164:	mov    ds:0xfc98a47e,eax
  411169:	sub    DWORD PTR [edx+0x1],0x716cf67c
  411170:	lds    edx,FWORD PTR [ebx-0x2d48c92f]
  411176:	jbe    0x4110fb
  411178:	inc    esi
  411179:	dec    edi
  41117a:	dec    ebp
  41117b:	into   
  41117c:	or     edx,0xffffffa8
  41117f:	clc    
  411180:	in     al,0x5a
  411182:	mov    ch,0xb9
  411184:	pop    ecx
  411185:	push   eax
  411186:	shl    DWORD PTR [edi-0x2f],0xb3
  41118a:	jle    0x4111fe
  41118c:	imul   ebp,DWORD PTR [edx],0x30
  41118f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411190:	mov    bh,0xec
  411192:	jle    0x4111ba
  411194:	inc    eax
  411195:	sub    eax,0x2ef4e91c
  41119a:	repz dec ebp
  41119c:	mov    esp,DWORD PTR [edx-0x4]
  41119f:	inc    ebp
  4111a0:	fidivr DWORD PTR [ebx-0x2a]
  4111a3:	and    ah,bh
  4111a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a6:	pop    edi
  4111a7:	pop    ebp
  4111a8:	lock cwde 
  4111aa:	sub    al,0x49
  4111ac:	sub    DWORD PTR [ebx+0x5f],ebx
  4111af:	xor    al,0xe7
  4111b1:	lock test al,0x75
  4111b4:	jae    0x411235
  4111b6:	je     0x4111ac
  4111b8:	mov    dh,0x18
  4111ba:	mov    esp,0xf72dd23
  4111bf:	pop    ds
  4111c0:	mov    WORD PTR [edx+0x21541838],?
  4111c6:	jne    0x4111d8
  4111c8:	shl    BYTE PTR [eax-0x49483b06],cl
  4111ce:	jmp    DWORD PTR [ebx-0x697a1c18]
  4111d4:	dec    esi
  4111d5:	xor    al,0xd5
  4111d7:	mov    ah,0x22
  4111d9:	sub    bl,0xb
  4111dc:	fnstenv [edi]
  4111de:	test   DWORD PTR [ebx-0x2f],eax
  4111e1:	lods   al,BYTE PTR ds:[esi]
  4111e2:	jmp    0x411174
  4111e4:	cmp    ch,bh
  4111e6:	push   eax
  4111e7:	pop    ds
  4111e8:	ins    BYTE PTR es:[edi],dx
  4111e9:	or     DWORD PTR [edi-0x6c],ecx
  4111ec:	xor    eax,0xd37be59e
  4111f1:	ret    0xe6dd
  4111f4:	and    bl,cl
  4111f6:	clc    
  4111f7:	je     0x41121f
  4111f9:	rcl    DWORD PTR ds:0xc81c6f79,1
  4111ff:	hlt    
  411200:	mov    al,0xfa
  411202:	es cli 
  411204:	cmp    cl,ah
  411206:	and    BYTE PTR [edi-0x61],dh
  411209:	jo     0x4111ee
  41120b:	(bad)  
  41120c:	jae    0x4111ef
  41120e:	arpl   cx,cx
  411210:	and    edx,DWORD PTR [ebp+0x184536bc]
  411216:	xchg   DWORD PTR [eax+edx*8-0x591ca37f],edi
  41121d:	pop    es
  41121e:	inc    esi
  41121f:	(bad)  
  411220:	js     0x411270
  411222:	mov    al,0xbd
  411224:	int    0x5b
  411226:	push   0x40
  411228:	mov    ebx,0x4614cd52
  41122d:	(bad)  
  41122e:	pop    ebx
  41122f:	mov    edi,0x2b387bc1
  411234:	cs sub al,0x57
  411237:	and    eax,0xb5807e0
  41123c:	inc    bl
  41123e:	aaa    
  41123f:	mov    ebx,0xc3f4e178
  411244:	inc    ebp
  411245:	out    dx,al
  411246:	cwde   
  411247:	add    edi,ebp
  411249:	ficomp DWORD PTR [edi+ebx*2-0x5a]
  41124d:	outs   dx,DWORD PTR ds:[esi]
  41124e:	cmp    cl,cl
  411250:	inc    esi
  411251:	ins    BYTE PTR es:[edi],dx
  411252:	dec    ebp
  411253:	inc    eax
  411254:	add    al,0x92
  411256:	rcl    BYTE PTR [ecx-0x4a],0xb0
  41125a:	ins    BYTE PTR es:[edi],dx
  41125b:	icebp  
  41125c:	fisttp QWORD PTR ds:0x3ca7e6e0
  411262:	(bad)  
  411263:	icebp  
  411264:	jl     0x4112d2
  411266:	fstp   TBYTE PTR [eax+ebp*8]
  411269:	jecxz  0x411248
  41126b:	(bad)  
  41126c:	mov    eax,0x4fa5dc17
  411271:	mov    ecx,0x3d10055e
  411276:	push   ds
  411277:	les    esp,FWORD PTR [ebp-0x10884877]
  41127d:	sti    
  41127e:	jmp    0xd4b0:0x1d4b79de
  411285:	push   0xffffffc3
  411287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411288:	repnz repnz shr ebx,cl
  41128c:	pushf  
  41128d:	pop    edi
  41128e:	dec    edi
  41128f:	xchg   esi,eax
  411290:	mov    WORD PTR [ecx-0x38],?
  411293:	cld    
  411294:	xchg   DWORD PTR [ebx+eiz*4+0xa7b86e1],edx
  41129b:	loopne 0x411316
  41129d:	inc    esp
  41129e:	pop    ecx
  41129f:	test   al,0x7a
  4112a1:	or     eax,0x5afd48d
  4112a6:	push   edx
  4112a7:	mov    al,ds:0xdb571f11
  4112ac:	jp     0x411260
  4112ae:	(bad)  
  4112af:	test   al,0xc6
  4112b1:	lods   eax,DWORD PTR ds:[esi]
  4112b2:	mov    cl,0x90
  4112b4:	pop    ebp
  4112b5:	fwait
  4112b6:	call   0xbd1f8268
  4112bb:	(bad)  
  4112bc:	cdq    
  4112bd:	push   cs
  4112be:	js     0x4112c6
  4112c0:	(bad)  
  4112c1:	jg     0x41130f
  4112c3:	mov    bh,0x90
  4112c5:	mov    esp,0x666af90e
  4112ca:	stos   DWORD PTR es:[edi],eax
  4112cb:	push   esi
  4112cc:	cdq    
  4112cd:	retf   
  4112ce:	or     DWORD PTR [ecx+0x5ae1faf7],0xffffffe7
  4112d5:	leave  
  4112d6:	xor    dh,BYTE PTR [edx]
  4112d8:	adc    dh,ch
  4112da:	sub    BYTE PTR [edx],ch
  4112dc:	push   esp
  4112dd:	fcmovnu st,st(0)
  4112df:	mov    eax,0x713ee518
  4112e4:	sti    
  4112e5:	cmc    
  4112e6:	push   0x1a16c9a0
  4112eb:	je     0x41128e
  4112ed:	fadd   QWORD PTR [esp+eax*4]
  4112f0:	jno    0x4112db
  4112f2:	in     eax,0x29
  4112f4:	out    0xdd,al
  4112f6:	fs add eax,eax
  4112f9:	cmp    eax,DWORD PTR [esi-0x10]
  4112fc:	inc    ecx
  4112fd:	sbb    dl,BYTE PTR [edx]
  4112ff:	popf   
  411300:	sub    esi,DWORD PTR [eax]
  411302:	dec    esp
  411303:	add    al,0x95
  411305:	test   eax,0x7063b874
  41130a:	cmp    esi,DWORD PTR [ebp-0x55]
  41130d:	jo     0x411388
  41130f:	pop    es
  411310:	xlat   BYTE PTR ds:[ebx]
  411311:	or     BYTE PTR [ecx-0x1c],bh
  411314:	jnp    0x411394
  411316:	add    esi,DWORD PTR [edx+0x62]
  411319:	adc    eax,0xb24b06c9
  41131e:	push   ss
  41131f:	(bad)  
  411320:	daa    
  411321:	xor    eax,0xb477847e
  411326:	mov    ah,0x1e
  411328:	scas   eax,DWORD PTR es:[edi]
  411329:	jmp    0xc608:0xe67eed50
  411330:	cs aas 
  411332:	push   eax
  411333:	(bad)  
  411334:	and    BYTE PTR [edi+edi*4+0x49],bl
  411338:	xchg   ebx,eax
  411339:	loop   0x4112db
  41133b:	ror    BYTE PTR [ebp+0x66],cl
  41133e:	std    
  41133f:	add    BYTE PTR [esi],0x15
  411342:	icebp  
  411343:	in     eax,dx
  411344:	mov    DWORD PTR [edx-0x6faa72c2],esi
  41134a:	mov    bh,0xe9
  41134c:	fild   QWORD PTR [ecx-0x4e2f849]
  411352:	mov    ah,0x64
  411354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411355:	push   ebp
  411356:	stos   BYTE PTR es:[edi],al
  411357:	jo     0x4113c5
  411359:	shl    dh,cl
  41135b:	ins    DWORD PTR es:[edi],dx
  41135c:	call   0x87f5:0xe3e0142c
  411363:	test   al,0x6
  411365:	dec    edi
  411366:	aam    0xb
  411368:	dec    esp
  411369:	cmp    dl,dh
  41136b:	data16 jb 0x411340
  41136e:	in     al,0xa
  411370:	push   0xfaa73ce7
  411375:	stos   BYTE PTR es:[edi],al
  411376:	pop    esi
  411377:	xor    ebx,DWORD PTR [ecx-0x5f914089]
  41137d:	or     DWORD PTR [esi-0x7c73cc65],esi
  411383:	js     0x4113b9
  411385:	sub    esi,ecx
  411387:	cmp    eax,0x91292c80
  41138c:	fbstp  TBYTE PTR [ebx]
  41138e:	pop    ebx
  41138f:	pop    es
  411390:	push   edi
  411391:	int    0xeb
  411393:	js     0x411363
  411395:	in     al,0xcc
  411397:	cmp    DWORD PTR [bp+si+0x43],esp
  41139b:	and    DWORD PTR [eax-0x5a59f8a5],0x35
  4113a2:	mov    ebp,DWORD PTR [esi+0x68114d45]
  4113a8:	dec    edx
  4113a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113aa:	test   al,0x3f
  4113ac:	inc    eax
  4113ad:	inc    esi
  4113ae:	mov    DWORD PTR [eax+0x4d],esp
  4113b1:	cli    
  4113b2:	xchg   ebp,eax
  4113b3:	(bad)
  4113b7:	mov    esi,0x801bffd9
  4113bc:	jmp    0x3aee:0x421989cb
  4113c3:	rol    DWORD PTR [edx-0x222a3eb8],1
  4113c9:	add    BYTE PTR [ebx-0x15],0xab
  4113cd:	rcl    cl,1
  4113cf:	retf   
  4113d0:	gs and ebx,ecx
  4113d3:	(bad)  
  4113d4:	out    dx,al
  4113d5:	es daa 
  4113d7:	sub    eax,0xb3da1c94
  4113dc:	jno    0x41144f
  4113de:	add    dh,ah
  4113e0:	xlat   BYTE PTR ds:[ebx]
  4113e1:	jne    0x41140a
  4113e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e4:	ret    0x9620
  4113e7:	enter  0xef2a,0xf1
  4113eb:	or     BYTE PTR ds:0x4eef61df,ah
  4113f1:	cmc    
  4113f2:	call   0x7b7e:0xfd6b4106
  4113f9:	adc    eax,0xd87ee840
  4113fe:	mov    esp,0x5a1c1b7f
  411403:	pop    edi
  411404:	dec    edx
  411405:	bound  ebp,QWORD PTR [eax+0x25]
  411408:	pop    ds
  411409:	sbb    al,0x9d
  41140b:	push   0xea2e07fa
  411410:	call   0x8ff5:0x4e049f8f
  411417:	xor    DWORD PTR [esi],0x93689c43
  41141d:	scas   al,BYTE PTR es:[edi]
  41141e:	ret    0x11b
  411421:	dec    ebp
  411422:	xchg   ebp,edx
  411424:	mov    esp,0x29729b64
  411429:	imul   edi,DWORD PTR [ebx],0x7a
  41142c:	scas   eax,DWORD PTR es:[edi]
  41142d:	rol    DWORD PTR fs:[edi],1
  411430:	in     eax,dx
  411431:	cmp    al,0xe2
  411433:	add    DWORD PTR [ebp+0x2b],0xffffff85
  411437:	inc    esi
  411438:	loope  0x41142a
  41143a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41143b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41143c:	push   eax
  41143d:	(bad)  
  41143f:	sub    DWORD PTR [bx+0x7d],ebp
  411443:	xchg   ebp,eax
  411444:	inc    esi
  411445:	add    edi,DWORD PTR [ebx]
  411447:	lea    ebx,[eax+0x3e]
  41144a:	mov    edx,0x175d0cfe
  41144f:	pusha  
  411450:	popa   
  411451:	mov    ds,WORD PTR [ebp-0x183eaeb8]
  411457:	jnp    0x4113fb
  411459:	or     dl,dl
  41145b:	ja     0x4114c2
  41145d:	mov    dl,0x37
  41145f:	or     ah,ah
  411461:	mul    BYTE PTR [eax]
  411463:	jecxz  0x41149f
  411465:	xchg   BYTE PTR ss:[esp+edx*2+0x5d],bh
  41146a:	cmp    DWORD PTR [ebp-0x75],ecx
  41146d:	(bad)  
  41146e:	in     eax,dx
  41146f:	lahf   
  411470:	pop    edi
  411471:	push   eax
  411472:	outs   dx,DWORD PTR ds:[esi]
  411473:	shl    ecx,0xda
  411476:	stos   BYTE PTR es:[edi],al
  411477:	cli    
  411478:	pop    ebx
  411479:	add    DWORD PTR [ebx-0x50fad960],edi
  41147f:	jno    0x411491
  411481:	pop    ds
  411482:	mov    bl,0xc0
  411484:	push   es
  411485:	mov    eax,ds:0xee8edf01
  41148a:	pop    eax
  41148b:	ret    
  41148c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148d:	in     al,0x84
  41148f:	mov    DWORD PTR [ebp+0x3],ebx
  411492:	sub    dh,BYTE PTR [ebx+0x595f3293]
  411498:	and    BYTE PTR [ecx],cl
  41149a:	and    eax,0xc1583a35
  41149f:	jle    0x4114cc
  4114a1:	push   ebp
  4114a2:	ja     0x41144a
  4114a4:	dec    ebp
  4114a5:	mov    DWORD PTR [esi-0x40],edx
  4114a8:	mov    ss,WORD PTR [ecx]
  4114aa:	bound  ebx,QWORD PTR [edx-0x24963abb]
  4114b0:	popa   
  4114b1:	jno    0x4114e6
  4114b3:	dec    ecx
  4114b4:	xchg   BYTE PTR [edx+0x4fd603e5],dh
  4114ba:	and    bl,BYTE PTR [ecx+0x57]
  4114bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114be:	push   0x9f4342cf
  4114c3:	pop    ecx
  4114c4:	fdiv   DWORD PTR [esi+0x0]
  4114c7:	pop    esp
  4114c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c9:	lods   eax,DWORD PTR ds:[esi]
  4114ca:	mov    ah,0xde
  4114cc:	clc    
  4114cd:	(bad)
  4114d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d1:	dec    ebp
  4114d2:	les    eax,FWORD PTR [edi+0xb]
  4114d5:	mov    bl,0x19
  4114d7:	xchg   ebx,eax
  4114d8:	mov    ds:0x3d93fc86,eax
  4114dd:	bound  ebp,QWORD PTR [edx-0x72]
  4114e0:	repz or esi,DWORD PTR [ecx]
  4114e3:	xchg   BYTE PTR [edi-0x344a6eaa],ch
  4114e9:	clc    
  4114ea:	int    0x59
  4114ec:	cmp    al,0x0
  4114ee:	arpl   ax,di
  4114f0:	adc    BYTE PTR [bx],cl
  4114f3:	inc    edx
  4114f4:	arpl   WORD PTR [ecx],ax
  4114f6:	mov    eax,0x36c9e2f2
  4114fb:	fcom   QWORD PTR [ecx]
  4114fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114fe:	ret    
  4114ff:	xor    edx,DWORD PTR [edx-0xb]
  411502:	push   0x13c0c219
  411507:	retf   
  411508:	push   cs
  411509:	mov    bl,0x35
  41150b:	xchg   DWORD PTR [edx+ecx*2-0x1b57e66],esp
  411512:	fist   WORD PTR [edx+ebx*1+0x70]
  411516:	iret   
  411517:	and    DWORD PTR [ebp+0x3bca323a],esp
  41151d:	enter  0xbd28,0x19
  411521:	fld    QWORD PTR [ecx-0x6f]
  411524:	sbb    al,0x96
  411526:	push   0xffffffbc
  411528:	das    
  411529:	mov    al,0xfd
  41152b:	and    edi,ecx
  41152d:	retf   
  41152e:	fstp   QWORD PTR [ecx]
  411530:	cld    
  411531:	in     eax,dx
  411532:	std    
  411533:	in     eax,dx
  411534:	das    
  411535:	sub    DWORD PTR [eax],edx
  411537:	fnstcw WORD PTR [eax-0x76]
  41153a:	ret    0x7c40
  41153d:	imul   ebx,DWORD PTR [ebx-0x54770848],0xffffffa7
  411544:	data16 jne 0x41158f
  411547:	mov    ah,0xfb
  411549:	and    DWORD PTR [ebx],esi
  41154b:	inc    ebx
  41154c:	xchg   esp,eax
  41154d:	adc    al,0xd3
  41154f:	(bad)  gs:[ebx-0xc]
  411553:	int3   
  411554:	lock pop ds
  411556:	js     0xfd0bef5
  41155c:	mov    esi,0x93372187
  411561:	mov    al,ds:0x6e6d6779
  411566:	or     BYTE PTR [edi+0x5f],al
  411569:	out    dx,eax
  41156a:	mov    bh,0xbf
  41156c:	clc    
  41156d:	cld    
  41156e:	jmp    0xaceb:0xf585e3ae
  411575:	jne    0x411534
  411577:	mov    edx,0x8e15778b
  41157c:	and    DWORD PTR ds:0x8b1ba3f2,esi
  411582:	sbb    eax,0x625aba7e
  411587:	and    dh,BYTE PTR [ebx-0x310c86ab]
  41158d:	pop    ecx
  41158e:	and    al,0xa7
  411590:	sbb    al,0x9
  411592:	lea    ebx,[ebp-0x3e]
  411595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411596:	push   0x6f
  411598:	lock test al,0x2e
  41159b:	push   edi
  41159c:	popf   
  41159d:	pop    ss
  41159e:	xchg   esp,eax
  41159f:	sahf   
  4115a0:	push   ss
  4115a1:	retf   
  4115a2:	pop    esp
  4115a3:	push   edx
  4115a4:	adc    eax,0xb90d1668
  4115a9:	test   eax,0xb58cf604
  4115ae:	mov    ah,al
  4115b0:	(bad)  
  4115b1:	fidivr DWORD PTR [esi-0x52]
  4115b4:	call   0x438413de
  4115b9:	push   ds
  4115ba:	mov    al,0xb
  4115bc:	cli    
  4115bd:	ror    BYTE PTR [edx],0x33
  4115c0:	push   ecx
  4115c1:	jb     0x41160c
  4115c3:	sbb    eax,0xa4e57abd
  4115c8:	mov    al,ds:0x74bb651
  4115cd:	popa   
  4115ce:	cli    
  4115cf:	sub    eax,0x464ab43b
  4115d4:	call   0xf50d3fc
  4115d9:	cdq    
  4115da:	sar    ebx,cl
  4115dc:	jnp    0x4115a1
  4115de:	idiv   esi
  4115e0:	mov    edx,0xec0031d2
  4115e5:	scas   al,BYTE PTR es:[edi]
  4115e6:	aas    
  4115e7:	lods   al,BYTE PTR ds:[esi]
  4115e8:	xor    al,0xaa
  4115ea:	lea    edx,[ebx+ecx*4-0x1]
  4115ee:	popf   
  4115ef:	lods   al,BYTE PTR ds:[esi]
  4115f0:	test   dl,dl
  4115f2:	push   ebp
  4115f3:	or     ebx,DWORD PTR [esi-0x41373a81]
  4115f9:	sar    ebx,cl
  4115fb:	nop
  4115fc:	sbb    eax,esi
  4115fe:	aas    
  4115ff:	(bad)  
  411600:	xchg   esi,eax
  411601:	ins    BYTE PTR es:[edi],dx
  411602:	pop    ebx
  411603:	mov    dl,0xd2
  411605:	dec    BYTE PTR [ecx+0x2b]
  411608:	iret   
  411609:	aam    0xf
  41160b:	leave  
  41160c:	xor    BYTE PTR [ebx-0x54],al
  41160f:	or     al,0x56
  411611:	inc    edx
  411612:	inc    edx
  411613:	fidivr DWORD PTR [esi+0x4f]
  411616:	sub    eax,0x7474f109
  41161b:	shl    DWORD PTR [ebp-0x156f3721],1
  411621:	cmp    al,0xcb
  411623:	push   ss
  411624:	lds    esp,FWORD PTR [edi]
  411626:	xchg   DWORD PTR [ecx],edi
  411628:	dec    ebx
  411629:	arpl   WORD PTR [ebx],si
  41162b:	add    al,0x0
  41162d:	jmp    0x977a2125
  411632:	or     al,0xc9
  411634:	jge    0x41166a
  411636:	and    eax,DWORD PTR [edi+0x6c36ceb1]
  41163c:	cmp    eax,0x310211a6
  411641:	fs jl  0x4115f2
  411644:	aaa    
  411645:	jae    0x41164e
  411647:	pop    esp
  411648:	pop    ebx
  411649:	dec    ebp
  41164a:	addr16 cmp eax,0x6970a3c9
  411650:	jmp    0x41168b
  411652:	mov    bh,0xab
  411654:	fs nop
  411656:	call   0x4a33c67a
  41165b:	(bad)  
  41165d:	cwde   
  41165e:	fcomp  QWORD PTR [eax+ebp*2]
  411661:	int    0x8a
  411663:	dec    edx
  411664:	inc    ebx
  411665:	mov    ds:0xb80729ab,al
  41166a:	mov    al,BYTE PTR [eax+0x39]
  41166d:	fbstp  TBYTE PTR [ecx]
  41166f:	xor    eax,0xaaab8154
  411674:	sti    
  411675:	int    0xdd
  411677:	ret    
  411678:	sbb    eax,0xe1b0fba4
  41167d:	mov    ds:0x3d16672f,eax
  411682:	ficomp WORD PTR [edx]
  411684:	loopne 0x4116b5
  411686:	sar    BYTE PTR [ebx],cl
  411688:	xchg   edi,eax
  411689:	sbb    eax,0xbf35f2b6
  41168e:	cmp    al,0xed
  411690:	repnz mov esi,0xba3cc47e
  411696:	(bad)  
  411697:	adc    eax,0xbe707737
  41169c:	xchg   ebp,eax
  41169d:	test   al,0xb7
  41169f:	outs   dx,BYTE PTR ds:[esi]
  4116a0:	cs cdq 
  4116a2:	mov    ds:0xb01fd838,eax
  4116a7:	stc    
  4116a8:	sbb    BYTE PTR [edx-0x1],ch
  4116ab:	cmp    bl,BYTE PTR [edi+0x7d]
  4116ae:	xlat   BYTE PTR ds:[ebx]
  4116af:	sbb    ebx,0x3d
  4116b2:	into   
  4116b3:	inc    ebp
  4116b4:	mov    esp,DWORD PTR [esi-0x17]
  4116b7:	xchg   ebx,eax
  4116b8:	ds or  ebp,ecx
  4116bb:	push   eax
  4116bd:	and    eax,0xb8da4c6
  4116c2:	(bad)  
  4116c3:	in     eax,dx
  4116c4:	or     eax,0xb0761766
  4116c9:	enter  0x8488,0x1d
  4116cd:	cmp    BYTE PTR [ebp-0x33],dl
  4116d0:	dec    esi
  4116d1:	mov    dh,0x8f
  4116d3:	inc    edx
  4116d4:	pop    ds
  4116d5:	(bad)  
  4116d6:	xor    bh,BYTE PTR [eax]
  4116d8:	adc    al,0x59
  4116da:	cli    
  4116db:	adc    esp,DWORD PTR [edx-0x49d80bb]
  4116e1:	push   0x605fdd27
  4116e6:	fild   WORD PTR [ecx]
  4116e8:	xor    ebp,DWORD PTR [ebp-0x171d3dc8]
  4116ee:	jo     0x4116d3
  4116f0:	into   
  4116f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f2:	xchg   edx,eax
  4116f3:	jno    0x41168b
  4116f5:	out    0x3,eax
  4116f7:	neg    esi
  4116f9:	dec    ecx
  4116fa:	or     bh,0x57
  4116fd:	sub    bh,BYTE PTR cs:[ecx+0x1400fadc]
  411704:	mov    esp,0x5cf23548
  411709:	dec    ebx
  41170a:	pop    eax
  41170b:	adc    bh,BYTE PTR [edi+0xf]
  41170e:	in     al,dx
  41170f:	sbb    bh,BYTE PTR [esi-0x2326eb42]
  411715:	jmp    0x9e5f49d1
  41171a:	jmp    0x4116ff
  41171c:	inc    edx
  41171d:	mov    edx,0x27b443d6
  411722:	sti    
  411723:	ins    DWORD PTR es:[edi],dx
  411724:	mov    esi,0x7ee3e46a
  411729:	shr    BYTE PTR [edi],cl
  41172b:	ficom  DWORD PTR [eax]
  41172d:	jns    0x411725
  41172f:	add    eax,0x6126bff3
  411734:	mov    esp,DWORD PTR ds:0x5bb3
  411739:	inc    ebx
  41173a:	call   0xcfd5d435
  41173f:	enter  0xa49c,0x9a
  411743:	(bad)  
  411745:	and    al,0xa7
  411747:	int    0xef
  411749:	xor    DWORD PTR [ebp+0x198c6de5],ebx
  41174f:	addr16 xchg ebp,eax
  411751:	out    dx,al
  411752:	inc    edi
  411753:	xor    ebp,ebx
  411755:	arpl   ax,bx
  411757:	out    dx,eax
  411758:	jb     0x41175e
  41175a:	sbb    eax,0x8fcf7558
  41175f:	lods   eax,DWORD PTR ds:[esi]
  411760:	into   
  411761:	add    DWORD PTR [ecx-0x24],esp
  411764:	popf   
  411765:	xchg   al,bh
  411767:	add    eax,0x79c08540
  41176c:	sub    ah,cl
  41176e:	mov    edx,0x3593a534
  411773:	jne    0x41173f
  411775:	std    
  411776:	rol    BYTE PTR [edx-0x69],1
  411779:	hlt    
  41177a:	loop   0x4117bb
  41177c:	sub    bh,bl
  41177e:	inc    ebx
  41177f:	int3   
  411780:	xor    BYTE PTR [esi],dh
  411782:	ror    BYTE PTR [eax],cl
  411784:	pop    ecx
  411785:	push   ebx
  411786:	inc    eax
  411787:	repz inc ecx
  411789:	mov    cl,BYTE PTR [esi]
  41178b:	(bad)  
  41178c:	push   ecx
  41178d:	je     0x411801
  41178f:	jo     0x411763
  411791:	push   esp
  411792:	push   ebx
  411793:	sbb    al,0x25
  411795:	(bad)  
  411796:	mov    ah,0xa6
  411798:	jbe    0x411745
  41179a:	sub    eax,0x8aa80c4
  41179f:	pop    esp
  4117a0:	jb     0x41176a
  4117a2:	(bad)  
  4117a3:	dec    ebp
  4117a4:	and    ch,dl
  4117a6:	or     eax,0xd66a8be5
  4117ab:	icebp  
  4117ac:	int3   
  4117ad:	mov    ds:0xacaba54a,eax
  4117b2:	fmul   DWORD PTR [eax]
  4117b4:	xor    eax,0x162e717
  4117b9:	js     0x41179c
  4117bb:	mov    bh,0x71
  4117bd:	cmp    al,0x3c
  4117bf:	mov    ah,0xc1
  4117c1:	std    
  4117c2:	clc    
  4117c3:	add    ebx,ecx
  4117c5:	inc    ebx
  4117c6:	daa    
  4117c7:	jmp    0x3dd7a6c2
  4117cc:	pusha  
  4117cd:	jb     0x411817
  4117cf:	inc    ebp
  4117d0:	xchg   BYTE PTR [eax],ch
  4117d2:	cmp    ebp,DWORD PTR [ecx]
  4117d4:	sahf   
  4117d5:	mov    ch,BYTE PTR [ecx+ecx*2-0x31]
  4117d9:	mov    ch,0x36
  4117db:	xchg   ecx,eax
  4117dc:	jo     0x411820
  4117de:	lods   al,BYTE PTR ds:[esi]
  4117df:	dec    BYTE PTR [edx+0x42]
  4117e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e3:	retf   0x66c1
  4117e6:	or     DWORD PTR [esi-0x4a0d3589],esp
  4117ec:	inc    esp
  4117ed:	pushf  
  4117ee:	jecxz  0x411867
  4117f0:	mov    ch,0x49
  4117f2:	les    ebp,FWORD PTR [ecx+ecx*4-0x59]
  4117f6:	pop    edi
  4117f7:	fisub  WORD PTR [ebp+0x40d52cd5]
  4117fd:	cs jo  0x4117d2
  411800:	sbb    eax,0xe13d8649
  411805:	mov    esi,ebp
  411807:	pop    es
  411808:	js     0x41183b
  41180a:	ins    BYTE PTR es:[edi],dx
  41180b:	out    dx,al
  41180c:	dec    ebp
  41180d:	fdiv   QWORD PTR [edx]
  41180f:	mov    al,ds:0x4a47a0d6
  411814:	lods   al,BYTE PTR ds:[esi]
  411815:	xchg   DWORD PTR [ecx-0x19],ebx
  411818:	jg     0x41184d
  41181a:	jecxz  0x411858
  41181c:	shr    BYTE PTR [ebx],0x7c
  41181f:	mov    eax,ds:0xac4d5d8c
  411824:	sub    eax,ebp
  411826:	push   ebp
  411827:	cmp    BYTE PTR [eax-0x7e],ah
  41182a:	push   esi
  41182b:	in     al,dx
  41182c:	mov    al,ds:0x9d51e517
  411831:	ja     0x4117e1
  411833:	pop    ds
  411834:	dec    ebp
  411835:	mov    gs,esi
  411837:	pushf  
  411838:	or     ebx,DWORD PTR [eax]
  41183a:	bound  edi,QWORD PTR [ecx]
  41183c:	add    eax,0x13a2b920
  411841:	arpl   WORD PTR [ebx+0x5f],dx
  411844:	jmp    0x2eff:0x4c2be5b0
  41184b:	xor    DWORD PTR [esi+0x5b],eax
  41184e:	loop   0x4117d6
  411850:	call   0x7cac:0xedbad209
  411857:	ret    
  411858:	test   ch,0xb6
  41185b:	sbb    eax,DWORD PTR [edi]
  41185d:	stos   BYTE PTR es:[edi],al
  41185e:	jp     0x41186f
  411860:	xchg   eax,esi
  411862:	jle    0x411806
  411864:	mov    ds:0xf6eae908,al
  411869:	push   eax
  41186a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41186b:	(bad)
  41186e:	xchg   ecx,eax
  41186f:	sbb    eax,DWORD PTR [ecx+esi*1+0x703f9c53]
  411876:	push   ebx
  411877:	push   eax
  411878:	push   edx
  411879:	sub    al,BYTE PTR [ebx+edx*1+0x40]
  41187d:	test   DWORD PTR [eax],0x4b1057fb
  411883:	(bad)  
  411885:	sar    BYTE PTR [ebx+0xc],0xbd
  411889:	mov    edx,0xd0dda347
  41188e:	pop    eax
  41188f:	enter  0x8d7e,0x47
  411893:	icebp  
  411894:	add    ax,0x8e13
  411898:	popa   
  411899:	pop    ecx
  41189a:	pop    esi
  41189b:	or     ebp,esp
  41189d:	jns    0x4118f1
  41189f:	sub    eax,0xd9b315ef
  4118a4:	mov    dh,0x91
  4118a6:	mov    esi,0xd9bf9de6
  4118ab:	mov    bh,0xd7
  4118ad:	sbb    esi,DWORD PTR [eax]
  4118af:	xor    ecx,ebx
  4118b1:	mov    edx,0x909b8daa
  4118b6:	clc    
  4118b7:	push   ss
  4118b8:	xchg   ecx,eax
  4118b9:	call   0x7b38:0x6c180a10
  4118c0:	(bad)  
  4118c1:	clc    
  4118c2:	sub    dl,al
  4118c4:	and    al,0x54
  4118c6:	jle    0x411854
  4118c8:	cwde   
  4118c9:	ret    0x1671
  4118cc:	inc    edi
  4118cd:	xor    BYTE PTR [edx+eax*4],ch
  4118d0:	and    ecx,DWORD PTR [ebx-0x3e315917]
  4118d6:	hlt    
  4118d7:	pusha  
  4118d8:	jmp    0x411959
  4118da:	outs   dx,BYTE PTR ds:[esi]
  4118db:	inc    eax
  4118dc:	add    esp,edx
  4118de:	jb     0x411949
  4118e0:	cwde   
  4118e1:	add    BYTE PTR [edi],ah
  4118e3:	fnstsw WORD PTR [eax+0x49]
  4118e6:	pop    edx
  4118e7:	das    
  4118e8:	sbb    dh,BYTE PTR [ebx+ecx*1+0xfeceb10]
  4118ef:	jns    0x4118ce
  4118f1:	std    
  4118f2:	clc    
  4118f3:	lds    eax,FWORD PTR [eax-0x17d6db7b]
  4118f9:	and    BYTE PTR [ebp+0x1b],bh
  4118fc:	ds int3 
  4118fe:	xor    eax,0xe7b3f98a
  411903:	cs fs jb 0x41190c
  411907:	std    
  411908:	jge    0x411952
  41190a:	mov    dh,0xfe
  41190c:	sub    DWORD PTR [edi+0x38],0xffffffba
  411910:	xor    DWORD PTR [ebx],ebx
  411912:	rcr    DWORD PTR [eax-0x4e],1
  411915:	and    ebx,ecx
  411917:	dec    ebx
  411918:	mov    dl,0x99
  41191a:	cmp    DWORD PTR [edi],0xfffffff2
  41191d:	in     al,dx
  41191e:	sub    eax,0x6329801e
  411923:	std    
  411924:	stc    
  411925:	scas   eax,DWORD PTR es:[edi]
  411926:	pop    es
  411927:	fs cmp eax,0x98d50c03
  41192d:	push   esp
  41192e:	inc    eax
  41192f:	call   0xf6b0:0x5ea4142c
  411936:	pop    edi
  411937:	stos   DWORD PTR es:[edi],eax
  411938:	or     ebp,DWORD PTR [edi-0x36]
  41193b:	xor    edi,edx
  41193d:	sahf   
  41193e:	out    dx,al
  41193f:	adc    edx,ebx
  411941:	pusha  
  411942:	jg     0x41195a
  411944:	or     eax,0xca973be2
  411949:	pop    ecx
  41194a:	inc    esi
  41194b:	inc    edi
  41194c:	mov    ds:0x875e5e10,eax
  411951:	xchg   ebx,eax
  411952:	jge    0x411983
  411954:	jmp    0xcc70:0x1fe5a144
  41195b:	imul   edi,ebx,0x4c23d94a
  411961:	lds    ebp,FWORD PTR [ecx]
  411963:	retf   0x4c65
  411966:	arpl   cx,bp
  411968:	xchg   DWORD PTR [ecx],ebp
  41196a:	xchg   dl,bh
  41196c:	mov    ah,0x40
  41196e:	push   ds
  41196f:	xchg   esp,eax
  411970:	(bad)  
  411971:	out    0xd9,eax
  411973:	outs   dx,BYTE PTR ds:[esi]
  411974:	dec    ecx
  411975:	sbb    BYTE PTR [edi],bh
  411977:	dec    esp
  411978:	xor    eax,0x41dd42ab
  41197d:	ret    
  41197e:	test   al,0xea
  411980:	test   eax,0x3d7d3b3c
  411985:	pop    ds
  411986:	xor    al,0x60
  411988:	add    eax,0xd41c6fb3
  41198d:	dec    ebx
  41198e:	out    dx,eax
  41198f:	dec    esi
  411990:	test   BYTE PTR [ebx+edx*8+0x38],cl
  411994:	pop    edi
  411995:	aad    0xdb
  411997:	adc    BYTE PTR [ebp+0x2f],0xbe
  41199b:	dec    edi
  41199c:	xlat   BYTE PTR ds:[ebx]
  41199d:	int    0xd6
  41199f:	xchg   edi,eax
  4119a0:	cwde   
  4119a1:	mov    eax,ds:0xf7009ee1
  4119a6:	mov    DWORD PTR [ebp+ecx*2-0x2121d97e],esi
  4119ad:	fisubr WORD PTR [ebx-0x35]
  4119b0:	mov    edi,0xbea8d52e
  4119b5:	xchg   BYTE PTR [ecx-0xa],al
  4119b8:	popa   
  4119b9:	push   esp
  4119ba:	mov    ebp,0xb3902052
  4119bf:	push   esi
  4119c0:	fs push 0xffffffb2
  4119c3:	enter  0xdc00,0x56
  4119c7:	add    eax,0x60db164d
  4119cc:	mov    ebp,0x3051a581
  4119d1:	jl     0x41196c
  4119d3:	out    dx,eax
  4119d4:	retf   
  4119d5:	lds    edi,FWORD PTR [ecx+0x4d04b703]
  4119db:	jecxz  0x411a04
  4119dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119de:	jno    0x411a5d
  4119e0:	sti    
  4119e1:	addr16 fcmovnb st,st(5)
  4119e4:	jp     0x4119d2
  4119e6:	sar    esp,1
  4119e8:	dec    edx
  4119e9:	inc    BYTE PTR [edx+0x27bd613]
  4119ef:	sub    ebx,DWORD PTR ss:[edi]
  4119f2:	outs   dx,BYTE PTR ds:[esi]
  4119f3:	mov    eax,0xb8d83697
  4119f8:	stos   BYTE PTR es:[edi],al
  4119f9:	jne    0x4119a9
  4119fb:	pushf  
  4119fc:	sbb    al,0xb5
  4119ff:	aaa    
  411a00:	repz xchg ebx,eax
  411a02:	jne    0x411984
  411a04:	or     al,0x7d
  411a06:	retf   0x9b5
  411a09:	inc    eax
  411a0a:	push   ebp
  411a0b:	repz inc edx
  411a0d:	out    0x6b,al
  411a0f:	adc    dh,dh
  411a11:	fstp   QWORD PTR [di+0x6128]
  411a16:	lods   al,BYTE PTR ds:[esi]
  411a17:	sbb    ah,cl
  411a19:	push   ecx
  411a1a:	adc    dl,cl
  411a1c:	enter  0x1a98,0xfd
  411a20:	xor    al,BYTE PTR [ecx]
  411a22:	push   esp
  411a23:	cmp    eax,0x3fa25004
  411a28:	mov    dh,ah
  411a2a:	dec    edx
  411a2b:	and    al,0x69
  411a2d:	aas    
  411a2e:	inc    eax
  411a2f:	into   
  411a30:	mov    ebx,0xa236e2ea
  411a35:	and    al,0xd5
  411a37:	or     eax,0xae380361
  411a3c:	sbb    al,0xd1
  411a3e:	push   ecx
  411a3f:	pop    ecx
  411a40:	out    dx,eax
  411a41:	pmuludq mm3,QWORD PTR [ebp+0x3bc8259c]
  411a48:	and    eax,0x8f25827f
  411a4d:	test   eax,0x647d8b62
  411a52:	pop    esp
  411a53:	cmp    al,ah
  411a55:	push   0xffffffce
  411a57:	push   ss
  411a58:	pop    esi
  411a59:	pop    esi
  411a5a:	retf   
  411a5b:	call   0x3ba6b493
  411a60:	shr    DWORD PTR [esi-0x14],1
  411a63:	(bad)  
  411a65:	sti    
  411a66:	clc    
  411a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a68:	into   
  411a69:	push   0x728a02
  411a6e:	out    0xbb,al
  411a70:	fstp   DWORD PTR [eax-0x7afef6e9]
  411a76:	cmp    dh,BYTE PTR [ebp+edi*1-0x39aa1fe8]
  411a7d:	push   0xe35837b8
  411a82:	push   es
  411a83:	setbe  BYTE PTR [eax+0xb219a1c]
  411a8a:	adc    eax,0xa31195c6
  411a8f:	mov    ch,0xb
  411a91:	or     BYTE PTR [edx],0xb
  411a94:	push   0xffffffed
  411a96:	mov    gs,WORD PTR [edx]
  411a98:	cmp    bh,BYTE PTR [esi+0x2cbf9d49]
  411a9e:	adc    DWORD PTR [ebx+0x76b9a28d],edi
  411aa4:	adc    al,BYTE PTR [ebx]
  411aa6:	outs   dx,DWORD PTR ds:[esi]
  411aa7:	into   
  411aa8:	stos   DWORD PTR es:[edi],eax
  411aa9:	jle    0x411aa2
  411aab:	pop    esi
  411aac:	stc    
  411aad:	sub    BYTE PTR [edi-0x595be2fc],bl
  411ab3:	pop    esi
  411ab4:	jne    0x411a6f
  411ab6:	jb     0x411a62
  411ab8:	sti    
  411ab9:	xor    al,bl
  411abb:	outs   dx,DWORD PTR ds:[esi]
  411abc:	mov    dh,0x94
  411abe:	in     al,dx
  411abf:	add    al,BYTE PTR [ecx-0x6f]
  411ac2:	loope  0x411a7c
  411ac4:	fidiv  DWORD PTR [esi-0x7b5576f8]
  411aca:	inc    ebp
  411acb:	xchg   BYTE PTR [esp-0x2d489402],dh
  411ad2:	xor    ebp,DWORD PTR [edx+0x1e]
  411ad5:	push   edx
  411ad6:	and    DWORD PTR [esi+0x3c],0xaae7d5de
  411add:	mov    bh,0xcf
  411adf:	inc    sp
  411ae1:	dec    esp
  411ae2:	xchg   DWORD PTR [eax+0x1dee61a8],eax
  411ae8:	push   esi
  411ae9:	cmp    edi,ecx
  411aeb:	cmp    dh,bh
  411aed:	cli    
  411aee:	pop    eax
  411aef:	hlt    
  411af0:	or     BYTE PTR [eax-0x1],ch
  411af3:	mov    ecx,0x21cbfa3
  411af8:	or     DWORD PTR [edx-0x6ef70288],edx
  411afe:	mov    cl,0x99
  411b00:	sub    edi,esi
  411b02:	inc    edi
  411b03:	xchg   edx,eax
  411b04:	jno    0x411af7
  411b06:	mov    eax,0xe4f302c5
  411b0b:	adc    eax,0xdb1ab25e
  411b10:	stc    
  411b11:	adc    BYTE PTR [edx+0x23df493],0x8
  411b18:	add    BYTE PTR [eax+eax*2],bl
  411b1b:	call   0xf5d5:0xa3481163
  411b22:	xchg   DWORD PTR [edi-0x1b650ac7],ebp
  411b28:	push   esp
  411b29:	cmp    DWORD PTR [ecx-0xef0240c],ecx
  411b2f:	test   edx,ebx
  411b31:	jle    0x411ad5
  411b33:	int3   
  411b34:	rcl    DWORD PTR [ebx],0x97
  411b37:	adc    al,0x5b
  411b39:	push   ebp
  411b3a:	in     eax,0xee
  411b3c:	leave  
  411b3d:	ror    BYTE PTR [edx],cl
  411b3f:	mov    dl,0xc2
  411b41:	lods   eax,DWORD PTR ds:[esi]
  411b42:	mov    edx,0xd6b4f134
  411b47:	jp     0x411b8c
  411b49:	mov    dl,0x1f
  411b4b:	sbb    bl,BYTE PTR [ebx-0x3d1821d]
  411b51:	int3   
  411b52:	enter  0x839a,0x97
  411b56:	sbb    ecx,DWORD PTR [edi-0x2bbb89e5]
  411b5c:	jmp    0x411b93
  411b5e:	test   BYTE PTR [ebx+ecx*4-0x6bd34500],ah
  411b65:	or     al,0x14
  411b67:	push   ebp
  411b68:	inc    esp
  411b69:	stos   BYTE PTR es:[edi],al
  411b6a:	fsub   QWORD PTR [esi]
  411b6c:	inc    esp
  411b6d:	inc    ebx
  411b6e:	or     DWORD PTR [edi+0x90b283],eax
  411b74:	neg    BYTE PTR [ebx+eiz*1-0x3]
  411b78:	inc    edi
  411b79:	test   eax,0x64a1604d
  411b7e:	mov    ds,edx
  411b80:	sti    
  411b81:	pop    ss
  411b82:	jecxz  0x411bc9
  411b84:	or     al,0x8c
  411b86:	adc    eax,0x566cf862
  411b8b:	cdq    
  411b8c:	imul   ecx,DWORD PTR [ebx],0x9c40e4d7
  411b92:	push   edi
  411b93:	push   si
  411b95:	mov    eax,0x7a4db951
  411b9a:	call   0xa662a156
  411b9f:	fld    TBYTE PTR [ecx-0x63f25b51]
  411ba5:	push   es
  411ba6:	sbb    ah,dh
  411ba8:	inc    ebp
  411ba9:	dec    ebx
  411baa:	dec    ecx
  411bab:	fsub   DWORD PTR [edx-0x1ae5b1ba]
  411bb1:	or     al,ah
  411bb3:	outs   dx,BYTE PTR ds:[esi]
  411bb4:	aam    0xdb
  411bb6:	gs pop ecx
  411bb8:	dec    esi
  411bb9:	xor    edi,DWORD PTR [ebp+0x11ecc5e0]
  411bbf:	sub    al,0x85
  411bc1:	pop    esp
  411bc2:	js     0x411b46
  411bc4:	adc    dh,BYTE PTR [esp+eiz*2+0x2c]
  411bc8:	mov    al,0x5f
  411bca:	xor    dh,BYTE PTR [esi]
  411bcc:	fistp  DWORD PTR [eax]
  411bce:	pop    es
  411bcf:	into   
  411bd0:	inc    edx
  411bd1:	icebp  
  411bd2:	mov    cs,edi
  411bd4:	pop    esi
  411bd5:	into   
  411bd6:	dec    esp
  411bd7:	pop    ss
  411bd8:	fidiv  WORD PTR cs:[ebx+0x6d670c50]
  411bdf:	cmp    cl,bh
  411be1:	shr    BYTE PTR [ecx+0x30bae0f2],1
  411be7:	adc    BYTE PTR [ebx+0x74],bh
  411bea:	enter  0xf121,0xaa
  411bee:	imul   eax,esp,0xffffffbe
  411bf1:	sbb    ch,BYTE PTR [edx]
  411bf3:	xlat   BYTE PTR ds:[ebx]
  411bf4:	adc    ah,BYTE PTR [edx]
  411bf6:	std    
  411bf7:	push   ebp
  411bf8:	mov    DWORD PTR [esp+eax*2+0x13],esp
  411bfc:	xchg   ebp,eax
  411bfd:	mov    ch,BYTE PTR cs:[esi+0x3]
  411c01:	sti    
  411c02:	outs   dx,BYTE PTR ds:[esi]
  411c03:	stos   DWORD PTR es:[edi],eax
  411c04:	mov    bh,0x4c
  411c06:	add    DWORD PTR [eax],0xffffffe5
  411c09:	out    dx,al
  411c0a:	hlt    
  411c0b:	xor    DWORD PTR [eax],ecx
  411c0d:	mov    DWORD PTR [esi],ebx
  411c0f:	call   0xf958:0x680369ad
  411c16:	cmp    al,0x4d
  411c18:	xor    ecx,esp
  411c1a:	mov    cl,0xef
  411c1c:	or     ebx,DWORD PTR [ebx]
  411c1e:	mov    dl,BYTE PTR [edi-0x6]
  411c21:	stos   DWORD PTR es:[edi],eax
  411c22:	adc    ebp,DWORD PTR [ecx-0x4524fff]
  411c28:	fild   QWORD PTR [ecx+ebx*2]
  411c2b:	add    bl,BYTE PTR [esi]
  411c2d:	cli    
  411c2e:	std    
  411c2f:	and    al,0x15
  411c31:	jnp    0x411bc6
  411c33:	cmp    ah,ah
  411c35:	or     ebp,DWORD PTR [esi]
  411c37:	and    DWORD PTR [ebx+0x6f9dad31],ebp
  411c3d:	xchg   DWORD PTR [ebx+0x4243c17b],ebp
  411c43:	ror    BYTE PTR [edx+0x6c6e2a7d],cl
  411c49:	les    ebx,FWORD PTR [ebx-0x14510180]
  411c4f:	fld    TBYTE PTR [ecx+0x76]
  411c52:	inc    esp
  411c53:	mov    ds,WORD PTR [edx+0x70]
  411c56:	and    dh,dh
  411c58:	enter  0x40b1,0xd
  411c5c:	retf   0xbe25
  411c5f:	ficomp WORD PTR [ecx+0x2c]
  411c62:	mov    esi,0x81c6bb21
  411c67:	into   
  411c68:	sbb    BYTE PTR [eax-0xa],al
  411c6b:	xor    DWORD PTR [eax-0x6c],0xffffffb4
  411c6f:	dec    esi
  411c70:	mov    eax,0x5b7cf93e
  411c75:	or     eax,0xb29e5e93
  411c7a:	sbb    WORD PTR [ebp-0xb122a0f],di
  411c81:	icebp  
  411c82:	mov    bl,bl
  411c84:	push   eax
  411c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c86:	shr    DWORD PTR [edi],1
  411c88:	pop    es
  411c89:	jl     0x411c9c
  411c8b:	mov    al,0x90
  411c8d:	pop    DWORD PTR [edx]
  411c8f:	inc    esp
  411c90:	jge    0x411c1a
  411c92:	adc    DWORD PTR [esi],0x455d02d9
  411c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c99:	out    dx,eax
  411c9a:	addr16 dec esp
  411c9c:	mov    ds:0x49ce2e34,eax
  411ca1:	jecxz  0x411cde
  411ca3:	mov    BYTE PTR [eax-0x4f],ah
  411ca6:	daa    
  411ca7:	cmp    eax,0x6ae25ca
  411cac:	in     eax,dx
  411cad:	lock jmp 0xb834:0x35c526d6
  411cb5:	sub    eax,0x21d842e3
  411cba:	mov    cl,0x81
  411cbc:	dec    BYTE PTR [esi]
  411cbe:	loope  0x411cc1
  411cc0:	sahf   
  411cc1:	stc    
  411cc2:	dec    edx
  411cc3:	inc    edi
  411cc4:	mov    bh,0xcd
  411cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc7:	jmp    0xdef5:0x6c7d3605
  411cce:	scas   eax,DWORD PTR es:[edi]
  411ccf:	mov    edi,0xdcd012
  411cd4:	mov    DWORD PTR [edx],esi
  411cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd7:	test   eax,0x224742fe
  411cdc:	sub    al,0x17
  411cde:	push   0x151236d
  411ce3:	pop    ss
  411ce4:	sar    DWORD PTR [ecx-0x39],1
  411ce7:	das    
  411ce8:	mov    edi,0x8677981b
  411ced:	fwait
  411cee:	nop
  411cef:	rcr    ebx,1
  411cf1:	shl    bh,cl
  411cf3:	(bad)  
  411cf4:	mov    BYTE PTR [edx-0x1dfb2534],ch
  411cfa:	cmp    edi,DWORD PTR [edi+0x1a]
  411cfd:	call   0xaea3:0xc0c9385d
  411d04:	inc    ecx
  411d05:	add    al,0x75
  411d07:	sbb    ah,ch
  411d09:	hlt    
  411d0a:	dec    edx
  411d0b:	add    edi,DWORD PTR [eax-0x7f]
  411d0e:	test   BYTE PTR [edi-0x6d],ah
  411d11:	and    ebp,esp
  411d13:	out    dx,eax
  411d14:	mov    edx,0xa805e909
  411d19:	sub    DWORD PTR [ebx-0x664eeadf],edi
  411d1f:	pop    ecx
  411d20:	popa   
  411d21:	or     DWORD PTR [edx+0x99310ea],esi
  411d27:	outs   dx,BYTE PTR ds:[esi]
  411d28:	rcl    edi,0x3a
  411d2b:	sbb    al,0x71
  411d2d:	fdivr  st,st(7)
  411d2f:	or     al,0x1b
  411d31:	push   esi
  411d32:	dec    esi
  411d33:	loopne 0x411d98
  411d35:	lods   eax,DWORD PTR ds:[esi]
  411d36:	ja     0x411cdd
  411d38:	enter  0x9a99,0x18
  411d3c:	xchg   edi,eax
  411d3d:	push   edi
  411d3e:	xlat   BYTE PTR ds:[ebx]
  411d3f:	mov    esi,0xe1c32ca4
  411d44:	and    BYTE PTR [esi-0x2d],cl
  411d47:	xchg   edx,eax
  411d48:	in     al,dx
  411d49:	lods   al,BYTE PTR ds:[esi]
  411d4a:	inc    edi
  411d4b:	mov    ds,WORD PTR [ebp-0x6245bfca]
  411d51:	lods   al,BYTE PTR ds:[esi]
  411d52:	add    BYTE PTR [edi+edx*2-0x26f4db18],0x19
  411d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d5b:	aad    0xd9
  411d5d:	mov    esi,esi
  411d5f:	mov    ds:0x9f57ed8e,eax
  411d64:	inc    DWORD PTR [eax+ebx*2-0x232e7f24]
  411d6b:	sbb    esp,DWORD PTR [ecx]
  411d6d:	in     eax,0x89
  411d6f:	into   
  411d70:	xchg   esp,eax
  411d71:	fsub   DWORD PTR [edx+0x4c]
  411d74:	or     eax,0x3bdf0bb7
  411d79:	ret    0x968a
  411d7c:	xchg   DWORD PTR [esi],esp
  411d7e:	dec    edi
  411d7f:	mov    bh,0xf1
  411d81:	je     0x411d08
  411d83:	cmc    
  411d84:	mov    ebx,0xa6e80a7b
  411d89:	add    ch,0x55
  411d8c:	cwde   
  411d8d:	aam    0x82
  411d8f:	jnp    0x411db4
  411d91:	pop    eax
  411d92:	nop
  411d93:	into   
  411d94:	cmp    bl,BYTE PTR [edi-0x1f]
  411d97:	add    ebx,ebp
  411d99:	jb     0x411da0
  411d9b:	pop    ecx
  411d9c:	add    cl,ch
  411d9e:	retf   0x67e6
  411da1:	idiv   DWORD PTR [edi-0x31d589ff]
  411da7:	in     eax,0xd9
  411da9:	leave  
  411daa:	add    al,0x17
  411dac:	cmp    ebx,DWORD PTR ds:0x8c688cc7
  411db2:	mov    ebx,0xf4bc5224
  411db7:	in     al,dx
  411db8:	inc    esi
  411db9:	xchg   esi,eax
  411dba:	jl     0x411e38
  411dbc:	test   eax,0xdefff644
  411dc1:	jnp    0x411e26
  411dc3:	popw   es
  411dc5:	xchg   ecx,eax
  411dc6:	call   0xb24ea985
  411dcb:	sub    ebx,DWORD PTR [edx+0x1d3793dc]
  411dd1:	stc    
  411dd2:	sub    al,0xb3
  411dd4:	mov    ebx,0xb954f31e
  411dd9:	leave  
  411dda:	nop
  411ddb:	mov    dh,0x6f
  411ddd:	add    al,BYTE PTR [esi-0x23]
  411de0:	ja     0x15c26dfc
  411de6:	sub    bl,cl
  411de8:	loop   0x411d90
  411dea:	push   0xffffffdf
  411dec:	jle    0x411df0
  411dee:	sub    ch,BYTE PTR [eax+0x4db5cfeb]
  411df4:	mov    ?,WORD PTR [ecx-0x6c]
  411df7:	mov    eax,0x840b7174
  411dfc:	mov    DWORD PTR [ebx+0x6e],ebx
  411dff:	shl    ebx,0x7f
  411e02:	inc    ecx
  411e03:	xchg   esi,eax
  411e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e05:	mov    WORD PTR [ebx],?
  411e07:	imul   ebp,edx,0xebc5aa89
  411e0d:	mov    al,0x20
  411e0f:	ss push ebx
  411e11:	loopne 0x411de5
  411e13:	das    
  411e14:	cmp    al,BYTE PTR [ebx]
  411e16:	gs es mov esp,0xff17e8a8
  411e1d:	jo     0x411e10
  411e1f:	out    0x89,al
  411e21:	mov    cs,WORD PTR [edi+0x2c4a778d]
  411e27:	add    edi,DWORD PTR [ebx]
  411e29:	push   ebp
  411e2a:	cli    
  411e2b:	dec    ebx
  411e2c:	mov    eax,0xed58f4cc
  411e31:	jl     0x411ea8
  411e33:	std    
  411e34:	xor    DWORD PTR [edx+0x1f4dc143],ebp
  411e3a:	and    bl,BYTE PTR [edi]
  411e3c:	jne    0x411dc9
  411e3e:	mov    esp,0x57e260b9
  411e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e44:	mov    ebp,DWORD PTR ds:0x42304643
  411e4a:	mov    edi,0x880d4f41
  411e4f:	jns    0x411dde
  411e51:	pop    esi
  411e52:	sbb    eax,0x4ae1fcc4
  411e57:	push   esi
  411e58:	in     eax,0x1d
  411e5a:	repnz int 0x4e
  411e5d:	xchg   esp,eax
  411e5e:	jae    0x411e2f
  411e60:	jo     0x411df7
  411e62:	popa   
  411e63:	add    al,0x7c
  411e65:	test   al,0x6a
  411e67:	les    esp,FWORD PTR [eax+0x393c62db]
  411e6d:	mov    edi,0xbb83e07f
  411e72:	mov    dh,BYTE PTR [edx]
  411e74:	push   ebx
  411e75:	cmp    BYTE PTR [ecx-0x41337a88],0xfb
  411e7c:	mov    WORD PTR [esi+0x45],gs
  411e7f:	jl     0x411e39
  411e81:	pop    ss
  411e82:	aam    0xc1
  411e84:	nop
  411e85:	push   0xffffffa4
  411e87:	sbb    eax,ecx
  411e89:	sti    
  411e8a:	jnp    0x411e51
  411e8c:	xchg   DWORD PTR [esi-0x3eb38f66],edi
  411e92:	inc    esp
  411e93:	cmp    bh,al
  411e95:	ror    ecx,cl
  411e97:	popf   
  411e98:	xor    edx,eax
  411e9a:	mov    dl,0x71
  411e9c:	jno    0x411e87
  411e9e:	pop    esp
  411e9f:	mov    ds:0x55a7ef85,al
  411ea4:	add    eax,ebx
  411ea6:	sbb    DWORD PTR [ebx+0x4],esi
  411ea9:	in     al,0x40
  411eab:	xchg   esp,eax
  411eac:	fdivrp st(3),st
  411eae:	test   ah,bl
  411eb0:	repnz test BYTE PTR [edi],dh
  411eb3:	inc    ebp
  411eb4:	shl    ebx,cl
  411eb6:	sub    BYTE PTR [ecx-0x58f5915b],ch
  411ebc:	pop    esi
  411ebd:	bound  eax,QWORD PTR [edx+0x7857210d]
  411ec3:	adc    eax,0xc3476ca6
  411ec8:	cmp    DWORD PTR [edx-0x7c],ebx
  411ecb:	inc    edx
  411ecc:	lds    esi,FWORD PTR [edi+0x43]
  411ecf:	repnz mov al,0x8a
  411ed2:	popf   
  411ed3:	jp     0x411e99
  411ed5:	stos   DWORD PTR es:[edi],eax
  411ed6:	std    
  411ed7:	inc    ecx
  411ed8:	xchg   edi,eax
  411ed9:	cmp    BYTE PTR ds:[ebp+0x2f4b9c3b],bl
  411ee0:	mov    ds:0x7799b5b5,al
  411ee5:	adc    BYTE PTR [ebp+0x42],dl
  411ee8:	fimul  DWORD PTR [edi-0x17]
  411eeb:	or     BYTE PTR ds:[ecx*1-0x62bd26c8],al
  411ef3:	sbb    ecx,esp
  411ef5:	xlat   BYTE PTR ds:[ebx]
  411ef6:	lock stos BYTE PTR es:[edi],al
  411ef8:	ret    
  411ef9:	and    esi,DWORD PTR [edi+0x21]
  411efc:	pmuludq mm4,mm0
  411eff:	or     al,0x84
  411f01:	mov    WORD PTR [ebx],?
  411f03:	lock mov edx,0x2facf1e7
  411f09:	mov    BYTE PTR [esi+0x37],dh
  411f0c:	mov    ebx,0xbdf2d812
  411f11:	addr16 push edi
  411f13:	dec    edi
  411f14:	sti    
  411f15:	loope  0x411f09
  411f17:	not    DWORD PTR [ecx-0x1f]
  411f1a:	mov    ecx,0x9d36413
  411f1f:	xchg   ebx,eax
  411f20:	popa   
  411f21:	push   ebx
  411f22:	cdq    
  411f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f24:	pop    edx
  411f25:	cli    
  411f26:	cwde   
  411f27:	mov    fs,edx
  411f29:	fs jmp 0xe5b8:0x8a7f232e
  411f31:	mov    dh,0xfd
  411f33:	addr16 es in eax,0x86
  411f37:	jb     0x411f27
  411f39:	inc    ecx
  411f3a:	lahf   
  411f3b:	ja     0x411f62
  411f3d:	aad    0x28
  411f3f:	adc    DWORD PTR [eax],ebx
  411f41:	cwde   
  411f42:	adc    DWORD PTR [ebx-0x353b1a95],0xffffff8c
  411f49:	test   eax,0x1d993b20
  411f4e:	push   edx
  411f4f:	pop    ebp
  411f50:	out    dx,eax
  411f51:	cmp    al,0x81
  411f53:	add    DWORD PTR [ecx],ebx
  411f55:	sar    DWORD PTR [eax],cl
  411f57:	inc    edi
  411f58:	xor    BYTE PTR [esi+0x1d],dh
  411f5b:	das    
  411f5c:	pop    ss
  411f5d:	mov    ds:0xeb4a39e8,eax
  411f62:	jae    0x411ee4
  411f64:	dec    esi
  411f65:	xchg   edx,eax
  411f66:	inc    eax
  411f67:	leave  
  411f68:	test   BYTE PTR [ebx+eiz*4-0x334127b2],0xc9
  411f70:	mov    WORD PTR [eax],ds
  411f72:	mov    dh,0xc1
  411f74:	fcom   st(5)
  411f76:	icebp  
  411f77:	sub    eax,0x3eeff44b
  411f7c:	das    
  411f7d:	jge    0x411f85
  411f7f:	fwait
  411f80:	retf   
  411f81:	cmp    al,0xd8
  411f83:	stos   BYTE PTR es:[edi],al
  411f84:	icebp  
  411f85:	mov    eax,ds:0x7f719bab
  411f8a:	push   0xaa8322c0
  411f8f:	pop    esi
  411f90:	ins    BYTE PTR es:[edi],dx
  411f91:	xor    al,0xb4
  411f93:	data16 sar ch,1
  411f96:	xchg   BYTE PTR [ecx+0x26e456c6],cl
  411f9c:	push   eax
  411f9d:	stos   BYTE PTR es:[edi],al
  411f9e:	lds    ebp,FWORD PTR [ecx]
  411fa0:	jg     0x411f53
  411fa2:	xchg   edx,eax
  411fa3:	retf   0xe562
  411fa6:	imul   edi,DWORD PTR [edx-0x62],0x17
  411faa:	fcmovnb st,st(1)
  411fac:	push   eax
  411fad:	fmul   QWORD PTR [ecx+edi*8+0x6cc6613a]
  411fb4:	dec    edi
  411fb5:	jmp    0x27d8322b
  411fba:	adc    ebx,DWORD PTR [edi+edi*4]
  411fbd:	sub    esi,DWORD PTR [edx+0x5c]
  411fc0:	adc    eax,DWORD PTR [eax+0x619fbfb2]
  411fc6:	mov    dl,0x74
  411fc8:	fwait
  411fc9:	js     0x411f8e
  411fcb:	sub    DWORD PTR [ecx+0xc],edx
  411fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fcf:	lea    edi,[edi]
  411fd1:	mov    ds:0xc9912bf2,al
  411fd6:	jbe    0x412017
  411fd8:	jae    0x411f5d
  411fda:	(bad)
  411fdd:	pop    esi
  411fde:	mov    al,0xf6
  411fe0:	in     eax,dx
  411fe1:	jns    0x411ffd
  411fe3:	add    BYTE PTR [esi-0x4c],cl
  411fe6:	cwde   
  411fe7:	and    edi,DWORD PTR [eax]
  411fe9:	dec    edx
  411fea:	icebp  
  411feb:	out    0x69,al
  411fed:	pop    ss
  411fee:	clc    
  411fef:	cmc    
  411ff0:	shl    BYTE PTR [esi+0xb],0x7b
  411ff4:	pop    edx
  411ff5:	test   DWORD PTR [eax+ebx*8],ebx
  411ff8:	mov    dl,0x4b
  411ffa:	add    eax,0x3b4e56df
  411fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412000:	arpl   WORD PTR [esp+ecx*1-0x54],cx
  412004:	jae    0x41206c
  412006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412007:	push   ecx
  412008:	sti    
  412009:	xchg   ecx,eax
  41200a:	les    eax,FWORD PTR [ebp+0x2d]
  41200d:	(bad)  
  41200e:	cld    
  41200f:	shr    BYTE PTR [ebp-0x6f224cbc],cl
  412015:	pusha  
  412016:	push   0xfffffff8
  412018:	shl    cl,0xf4
  41201b:	adc    ebx,DWORD PTR [ebx+eiz*4]
  41201e:	lea    ecx,[ecx]
  412020:	jle    0x411fa2
  412022:	xchg   ebx,eax
  412023:	add    al,0xb3
  412025:	add    dl,ah
  412027:	repz rcr BYTE PTR [edi+ecx*2],cl
  41202b:	and    BYTE PTR [ebp-0x247cbcbb],bl
  412031:	cli    
  412032:	retf   
  412033:	and    eax,0x161612
  412038:	jae    0x412046
  41203a:	xor    DWORD PTR [edx],edi
  41203c:	push   ds
  41203d:	arpl   WORD PTR ds:0x9a65a875,sp
  412043:	lea    edx,[edx+0xe]
  412046:	mov    dl,0x78
  412048:	std    
  412049:	out    dx,al
  41204a:	fmul   DWORD PTR [ecx+0x6a]
  41204d:	push   edi
  41204e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41204f:	mov    ds:0x24d2045f,al
  412054:	not    DWORD PTR [esi+0x2d]
  412057:	adc    eax,DWORD PTR [ebp+0x5f]
  41205a:	push   eax
  41205b:	cmp    BYTE PTR [edi],dl
  41205d:	mov    BYTE PTR [ebx-0x55ff2331],ah
  412063:	add    al,0x8e
  412065:	es stos DWORD PTR es:[edi],eax
  412067:	pop    ebx
  412068:	mov    db1,edi
  41206b:	cld    
  41206c:	dec    edi
  41206d:	das    
  41206e:	push   ss
  41206f:	xor    edx,DWORD PTR [eax+ebp*8-0x2b]
  412073:	dec    esp
  412074:	adc    DWORD PTR [ecx+0x558bee01],0xcabacb68
  41207e:	icebp  
  41207f:	loop   0x4120fd
  412081:	loop   0x4120ed
  412083:	mov    cl,0x41
  412085:	push   esp
  412086:	(bad)  
  412087:	fld    st(5)
  412089:	dec    DWORD PTR [eax-0x12]
  41208c:	sub    BYTE PTR [ebx+0x76],ch
  41208f:	mov    eax,fs
  412091:	dec    eax
  412092:	cwde   
  412093:	sahf   
  412094:	out    0x4f,al
  412096:	ficomp DWORD PTR [edi]
  412098:	jmp    0x48ac6079
  41209d:	loope  0x41207d
  41209f:	push   0x29
  4120a1:	mov    ebx,0x790a44a
  4120a6:	into   
  4120a7:	xor    eax,0x13243590
  4120ac:	cmc    
  4120ad:	(bad)  
  4120ae:	or     eax,0x1f494c21
  4120b3:	outs   dx,BYTE PTR ds:[esi]
  4120b4:	push   esi
  4120b5:	arpl   WORD PTR [ecx-0x78],cx
  4120b8:	test   al,0x1d
  4120ba:	(bad)  
  4120bb:	mov    WORD PTR [edx-0x18],?
  4120be:	cmp    BYTE PTR [eax-0x51a8bf39],dh
  4120c4:	mov    edi,0x83103402
  4120c9:	cmp    BYTE PTR [ebx],0x60
  4120cc:	ss add eax,0x7d3c2205
  4120d2:	add    eax,0xf697d5dc
  4120d7:	arpl   WORD PTR [edx],sp
  4120d9:	lds    ecx,FWORD PTR gs:[edx+eiz*4-0x75a4f5b2]
  4120e1:	ficomp DWORD PTR [edx-0xa708886]
  4120e7:	daa    
  4120e8:	rcl    DWORD PTR ds:0x9cebf0ab,cl
  4120ee:	retf   
  4120ef:	std    
  4120f0:	sahf   
  4120f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f2:	jmp    0x4120c5
  4120f4:	cmp    esp,ebp
  4120f6:	es jne 0x4120e0
  4120f9:	scas   al,BYTE PTR es:[edi]
  4120fa:	pushf  
  4120fb:	(bad)  
  4120fc:	pop    ebp
  4120fd:	inc    edx
  4120fe:	add    ah,dl
  412100:	mov    DWORD PTR [eax+0x9cb7bc7],edx
  412106:	pop    ebp
  412107:	lds    ebp,FWORD PTR [eax-0x5644a49]
  41210d:	(bad)  [ebx+eax*1+0x7a]
  412111:	mov    ecx,0x838650c7
  412116:	shl    BYTE PTR [edi],0xcd
  412119:	pop    eax
  41211a:	push   es
  41211b:	sar    ah,1
  41211d:	fucom  st(7)
  41211f:	dec    ebp
  412120:	sub    bl,ah
  412122:	pop    edx
  412123:	sbb    BYTE PTR [ebp-0x5f],0x69
  412127:	loop   0x4120b3
  412129:	xor    al,0xa9
  41212b:	mov    eax,0xc6be8e65
  412130:	aad    0xb0
  412132:	scas   eax,DWORD PTR es:[edi]
  412133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412134:	jmp    DWORD PTR [edi]
  412136:	mov    edx,0x53a27bc3
  41213b:	add    bh,0x1d
  41213e:	mov    eax,0x8a63869d
  412143:	loope  0x412112
  412145:	jge    0x412197
  412147:	loop   0x412184
  412149:	pop    es
  41214a:	cmp    DWORD PTR [eax+0x296577a0],eax
  412150:	enter  0x8184,0x4e
  412154:	inc    edi
  412155:	pop    es
  412156:	(bad)  
  412157:	test   eax,0x6e1dd2c1
  41215c:	call   DWORD PTR [esi+0x3f02534b]
  412162:	ins    BYTE PTR es:[edi],dx
  412163:	or     cl,BYTE PTR [ebp+0x2a]
  412166:	xchg   edi,eax
  412167:	pop    eax
  412168:	aas    
  412169:	pop    edi
  41216a:	rcl    BYTE PTR [ecx],cl
  41216c:	cld    
  41216d:	sbb    al,0x5a
  41216f:	aaa    
  412170:	mov    cl,0xfd
  412172:	das    
  412173:	bound  ebx,QWORD PTR [eax+0x138fd843]
  412179:	adc    bh,0xfd
  41217c:	clc    
  41217d:	outs   dx,BYTE PTR ds:[esi]
  41217e:	jle    0x41217d
  412180:	es pop edi
  412182:	retf   
  412183:	pop    edx
  412184:	mov    al,ds:0x9fddaaef
  412189:	and    BYTE PTR [edx],bl
  41218b:	pop    edi
  41218c:	and    BYTE PTR [ecx+0x6b741f4e],bl
  412192:	imul   ebx,DWORD PTR [edi+0xe865a66],0x50
  412199:	add    DWORD PTR [esi+edx*2+0x7f53ddae],eax
  4121a0:	jnp    0x4121c6
  4121a2:	xlat   BYTE PTR ds:[ebx]
  4121a3:	aaa    
  4121a4:	mov    eax,0xb4547121
  4121a9:	adc    DWORD PTR [ebp-0x38],0x67e09daa
  4121b0:	push   ds
  4121b1:	test   BYTE PTR [esi-0x2734cea6],dl
  4121b7:	js     0x41221f
  4121b9:	inc    edx
  4121ba:	and    al,0xdd
  4121bc:	outs   dx,DWORD PTR ds:[esi]
  4121bd:	or     al,0x47
  4121bf:	aas    
  4121c0:	cmp    al,0x6d
  4121c2:	inc    esp
  4121c3:	push   ss
  4121c4:	sbb    ebx,DWORD PTR [edi+0x694c3718]
  4121ca:	mov    edi,0x90be8ca7
  4121cf:	loope  0x41216f
  4121d1:	and    edi,DWORD PTR [ebx]
  4121d3:	pop    ecx
  4121d4:	push   edi
  4121d5:	jbe    0x412203
  4121d7:	dec    esp
  4121d8:	inc    edx
  4121d9:	or     al,BYTE PTR [eax]
  4121db:	imul   edi,DWORD PTR ds:0x5184fe5a,0xf271e698
  4121e5:	mov    esi,0x704e8570
  4121ea:	cmp    al,0x3b
  4121ec:	sbb    eax,0xa062c1f8
  4121f1:	es dec ebp
  4121f3:	scas   al,BYTE PTR es:[edi]
  4121f4:	or     eax,0x672e35b7
  4121f9:	sahf   
  4121fa:	sbb    BYTE PTR ds:0xca4e80bf,dl
  412200:	mov    ds:0x2990fef1,eax
  412205:	into   
  412206:	jmp    0xb5809a84
  41220b:	push   esi
  41220c:	pop    esi
  41220d:	sub    al,0xbb
  41220f:	je     0x4121bd
  412211:	outs   dx,BYTE PTR ds:[esi]
  412212:	sub    BYTE PTR [esi+0x7a90492c],bh
  412218:	mov    ebx,0x7a97d2b6
  41221d:	stos   BYTE PTR es:[edi],al
  41221e:	(bad)  
  412220:	dec    edx
  412221:	mov    fs,WORD PTR [ebx-0x23]
  412224:	add    ah,BYTE PTR [edi]
  412226:	rol    DWORD PTR [esi],1
  412228:	hlt    
  412229:	jmp    0xeeb76911
  41222e:	mov    ?,WORD PTR [edi]
  412230:	lods   eax,DWORD PTR ds:[esi]
  412231:	ret    0x5de2
  412234:	jns    0x41223e
  412236:	or     esi,ecx
  412238:	pop    esp
  412239:	jns    0x412231
  41223b:	and    eax,0xaf939473
  412240:	dec    ecx
  412241:	cmc    
  412242:	or     eax,0xc5424fb3
  412247:	aam    0x5d
  412249:	out    dx,al
  41224a:	dec    esp
  41224b:	pop    esi
  41224c:	or     BYTE PTR [ebp-0x6e],bh
  41224f:	xor    eax,0x12141b03
  412254:	shl    BYTE PTR [esi+edi*4],1
  412257:	mov    bh,0x53
  412259:	mov    ebp,0x2b0a8251
  41225e:	call   0xf5db:0x49e7ddb9
  412265:	popf   
  412266:	fcom   QWORD PTR [edx+0x20e7a0c0]
  41226c:	or     al,0xe8
  41226e:	fldenv [edi+0x41]
  412271:	repz pusha 
  412273:	loop   0x41223e
  412275:	popf   
  412276:	(bad)  
  412277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412278:	adc    BYTE PTR [eax+0x70],ah
  41227b:	mov    dh,0x65
  41227d:	packsswb mm5,mm5
  412280:	lds    ebx,FWORD PTR [esi]
  412282:	sbb    BYTE PTR [ebx-0x16],0x64
  412286:	mov    WORD PTR [ebx],gs
  412288:	stc    
  412289:	xchg   esi,eax
  41228a:	fistp  WORD PTR [esi]
  41228c:	add    eax,0x799c1d86
  412291:	dec    ebp
  412292:	jmp    0xf75af98c
  412297:	add    cl,BYTE PTR ds:0x61619833
  41229d:	shr    DWORD PTR [edx+0x43],1
  4122a0:	cli    
  4122a1:	stos   BYTE PTR es:[edi],al
  4122a2:	cli    
  4122a3:	(bad)  
  4122a4:	sub    edx,esp
  4122a6:	sbb    ah,BYTE PTR es:[ebp+0x706ae204]
  4122ad:	stos   BYTE PTR es:[edi],al
  4122ae:	inc    ebx
  4122af:	sbb    dh,al
  4122b1:	in     eax,0x96
  4122b3:	pop    ebx
  4122b4:	ror    ebp,1
  4122b6:	nop
  4122b7:	mov    esp,0x2859d390
  4122bc:	rcl    cl,0xfe
  4122bf:	sbb    ebp,ebp
  4122c1:	inc    edi
  4122c2:	mov    bl,0x5b
  4122c4:	retf   
  4122c5:	xchg   esi,eax
  4122c6:	mov    WORD PTR cs:[edi+0x1c],ss
  4122ca:	xchg   ebx,eax
  4122cb:	daa    
  4122cc:	mov    edi,ss
  4122ce:	jbe    0x412344
  4122d0:	mov    ah,0x64
  4122d2:	(bad)  
  4122d3:	(bad)  
  4122d4:	mul    ebx
  4122d6:	aas    
  4122d7:	(bad)  
  4122d8:	pop    ecx
  4122d9:	imul   DWORD PTR [ecx]
  4122db:	out    0xf,al
  4122dd:	js     0x41233c
  4122df:	push   0xffffffdb
  4122e1:	stos   DWORD PTR es:[edi],eax
  4122e2:	sub    al,0x83
  4122e4:	stos   DWORD PTR es:[edi],eax
  4122e5:	shl    DWORD PTR [esp+ebx*1+0x7c],1
  4122e9:	mov    ecx,DWORD PTR [esi+0x5b34eb20]
  4122ef:	cld    
  4122f0:	mov    eax,ds:0x7be22666
  4122f5:	dec    edi
  4122f6:	scas   al,BYTE PTR es:[edi]
  4122f7:	(bad)  
  4122f8:	out    0x9a,al
  4122fa:	leave  
  4122fb:	(bad)
  4122ff:	mov    ch,0x39
  412301:	imul   edx,DWORD PTR [esi+0x3d],0x23
  412305:	push   edi
  412306:	enter  0x35ac,0x94
  41230a:	xor    DWORD PTR [edx+0x19],0x256bf0ef
  412311:	ss clc 
  412313:	mov    dl,0xf0
  412315:	and    BYTE PTR [edx-0x68857038],bh
  41231b:	dec    esi
  41231c:	fwait
  41231d:	popf   
  41231e:	call   DWORD PTR [ebp-0x6777a55e]
  412324:	or     BYTE PTR [edx+edi*4],al
  412327:	and    ch,BYTE PTR [ebx+ecx*1+0x56]
  41232b:	shl    BYTE PTR [ebx+0x64],1
  41232e:	cmp    al,0x67
  412330:	stc    
  412331:	aas    
  412332:	dec    esp
  412333:	fadd   DWORD PTR [edi-0x45]
  412336:	or     DWORD PTR [edx-0x79],ebp
  412339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41233a:	or     dl,BYTE PTR [eax+0x25b0c01d]
  412340:	arpl   WORD PTR [eax+0x1b0d9a99],cx
  412346:	bound  ebp,QWORD PTR [esp+ebx*4-0x44]
  41234a:	pusha  
  41234b:	sti    
  41234c:	mov    BYTE PTR [edi+0x1f803552],ah
  412352:	ret    
  412353:	idiv   BYTE PTR [ebx-0x29847b2b]
  412359:	jno    0x41230c
  41235b:	out    dx,al
  41235c:	push   es
  41235d:	or     DWORD PTR [ebx+eiz*1],0x130eeb17
  412364:	outs   dx,BYTE PTR ds:[esi]
  412365:	xchg   BYTE PTR [edx],dh
  412367:	mov    ds:0xf0ad2ef8,al
  41236c:	nop
  41236d:	js     0x41237d
  41236f:	xlat   BYTE PTR ds:[ebx]
  412370:	pop    ds
  412371:	fcom   DWORD PTR [ecx+ebx*8+0x3f9de078]
  412378:	xlat   BYTE PTR ds:[ebx]
  412379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237a:	pop    ebx
  41237b:	or     al,0xf
  41237d:	aad    0x5e
  41237f:	(bad)  
  412381:	jge    0x4123dc
  412383:	lahf   
  412384:	call   FWORD PTR [ecx-0x3f936306]
  41238a:	ret    
  41238b:	mov    cl,0xe7
  41238d:	je     0x4123b7
  41238f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412390:	or     bl,ch
  412392:	or     eax,0xc2081598
  412397:	mov    eax,0x230c72a0
  41239c:	sbb    DWORD PTR [ecx+0x7b],ebp
  41239f:	cmp    al,0x6f
  4123a1:	or     DWORD PTR [edi+0x6b],ebx
  4123a4:	push   edi
  4123a5:	mov    al,ds:0xf83d6441
  4123aa:	inc    ebp
  4123ab:	push   ecx
  4123ac:	test   BYTE PTR [eax+eiz*4+0x74],al
  4123b0:	inc    edx
  4123b1:	adc    eax,0x91a119b
  4123b6:	js     0x412366
  4123b8:	fs jae 0x4123d9
  4123bb:	mov    BYTE PTR [edx+edi*4-0x78afce75],dh
  4123c2:	and    BYTE PTR ds:0x34d550b,bl
  4123c8:	sub    dh,ah
  4123ca:	and    BYTE PTR [ecx-0x65],0x98
  4123ce:	(bad)  
  4123cf:	mov    esi,0xfce99ab3
  4123d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123d5:	mov    al,0x23
  4123d7:	pop    esi
  4123d8:	mov    cl,0x4c
  4123da:	jl     0x412390
  4123dc:	out    dx,eax
  4123dd:	fstp   TBYTE PTR [ebp+0x24]
  4123e0:	cli    
  4123e1:	mov    DWORD PTR [ecx-0x22],edx
  4123e4:	jp     0x41241a
  4123e6:	cmp    eax,0xee022471
  4123eb:	jno    0x4123da
  4123ed:	jbe    0x412418
  4123ef:	cld    
  4123f0:	ins    BYTE PTR es:[edi],dx
  4123f1:	pop    ds
  4123f2:	lods   eax,DWORD PTR ds:[esi]
  4123f3:	ficomp WORD PTR [eax]
  4123f5:	adc    al,cl
  4123f7:	add    bh,BYTE PTR [eax]
  4123f9:	cwde   
  4123fa:	sbb    DWORD PTR [eax],esp
  4123fc:	enter  0xcd77,0x4c
  412400:	out    0x57,al
  412402:	retf   
  412403:	dec    esp
  412404:	sbb    al,0x11
  412406:	shl    DWORD PTR [edx],1
  412408:	sub    BYTE PTR [edx+edx*8-0x6a],al
  41240c:	jns    0x4123a8
  41240e:	fs xchg edx,eax
  412410:	xchg   BYTE PTR ds:0x9d30b959,bh
  412416:	mov    ebx,0xfaf3bf36
  41241b:	lock lods eax,DWORD PTR ds:[esi]
  41241d:	ja     0x4123fd
  41241f:	sbb    eax,0xedf64a38
  412424:	call   0x336a:0x57fe7d22
  41242b:	pop    ds
  41242c:	cmp    eax,0xfffffff8
  41242f:	fidivr DWORD PTR [ecx]
  412431:	jne    0x4123fa
  412433:	cmp    eax,0xabca0f0e
  412438:	arpl   bx,si
  41243a:	loope  0x4123e2
  41243c:	jl     0x41245e
  41243e:	aaa    
  41243f:	js     0x41246a
  412441:	sahf   
  412442:	icebp  
  412443:	pusha  
  412444:	js     0x412460
  412446:	inc    eax
  412447:	mov    dl,0x50
  412449:	out    0x27,al
  41244b:	dec    ebp
  41244c:	pop    edi
  41244d:	xor    dh,BYTE PTR [esi]
  41244f:	int    0x4a
  412451:	push   esp
  412452:	mov    edx,0x3af88eb0
  412457:	pop    es
  412458:	jae    0x4123fc
  41245a:	mov    esi,0x3d6e739c
  41245f:	scas   al,BYTE PTR es:[edi]
  412460:	lahf   
  412461:	test   BYTE PTR ds:0x8a0af3c6,al
  412467:	imul   edi,DWORD PTR [edx-0x2d],0xd6245806
  41246e:	jnp    0x41240f
  412470:	iret   
  412471:	adc    ebp,DWORD PTR [edx]
  412473:	sbb    bl,dh
  412475:	xchg   ecx,eax
  412476:	call   0x6f5f46fc
  41247b:	(bad)  
  41247c:	pop    ebp
  41247d:	adc    BYTE PTR [ebp-0x88fef2e],0xa2
  412484:	mov    al,ds:0x2c977033
  412489:	or     esp,DWORD PTR [ecx]
  41248b:	mov    al,0x37
  41248d:	xor    al,0x80
  41248f:	repnz (bad) 
  412492:	mov    edx,0x1e405820
  412497:	scas   al,BYTE PTR es:[edi]
  412498:	lock or eax,0xdfe62a64
  41249e:	jns    0x412512
  4124a0:	jne    0x412508
  4124a2:	adc    al,0xf3
  4124a4:	push   edx
  4124a5:	fistp  WORD PTR [edi+0x1bf42180]
  4124ab:	ficomp WORD PTR [edi]
  4124ad:	in     al,0xf0
  4124af:	mov    ds:0x1de44671,eax
  4124b4:	(bad)  
  4124b5:	adc    al,0xdc
  4124b7:	lods   eax,DWORD PTR ds:[esi]
  4124b8:	inc    edx
  4124b9:	mov    dl,0x2a
  4124bb:	fwait
  4124bc:	pusha  
  4124bd:	cld    
  4124be:	hlt    
  4124bf:	pop    esp
  4124c0:	ret    0x714d
  4124c3:	ja     0x412510
  4124c5:	jl     0x412447
  4124c7:	cmp    DWORD PTR [edi+0x1d],eax
  4124ca:	test   DWORD PTR [edi+0x31ae492c],ebx
  4124d0:	and    ah,BYTE PTR [ebx-0x630302aa]
  4124d6:	xor    dh,cl
  4124d8:	imul   edx,esp,0x31
  4124db:	call   0xba2c024d
  4124e0:	pop    eax
  4124e1:	sti    
  4124e2:	mov    bl,0x10
  4124e4:	in     al,0x49
  4124e6:	push   esi
  4124e7:	mov    ebp,esi
  4124e9:	hlt    
  4124ea:	lahf   
  4124eb:	cdq    
  4124ec:	mov    al,ds:0x28489322
  4124f1:	mov    DWORD PTR [edi+0x45],edi
  4124f4:	adc    DWORD PTR [ebx+0x4f],eax
  4124f7:	ins    DWORD PTR es:[edi],dx
  4124f8:	xor    eax,0xfed6594c
  4124fd:	adc    DWORD PTR [eax+edi*4+0x2786d2c],esi
  412504:	mov    dl,0xa7
  412506:	aad    0xe7
  412508:	xor    ecx,DWORD PTR [ecx-0x71]
  41250b:	sub    BYTE PTR [ecx],dl
  41250d:	int3   
  41250e:	loop   0x4124ed
  412510:	mov    ds:0xe66c37b1,eax
  412515:	fwait
  412516:	ret    
  412517:	xcrypt-cbc (bad)
  412518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412519:	push   ebx
  41251a:	fst    QWORD PTR [ebp+0x5c2afb83]
  412520:	cmp    eax,0x405d69fd
  412525:	jnp    0x4124ba
  412527:	dec    esp
  412528:	sbb    DWORD PTR [esi],ebp
  41252a:	stc    
  41252b:	pop    es
  41252c:	(bad)  [ebx]
  41252e:	jo     0x41258a
  412530:	ret    
  412531:	sbb    al,dh
  412533:	push   esp
  412534:	shl    BYTE PTR [esi-0x2ea5fa74],0xc4
  41253b:	mov    ds:0x7c4f63d0,eax
  412540:	clc    
  412541:	jp     0x4125b1
  412543:	(bad)  [esi]
  412545:	xchg   edx,eax
  412546:	sub    esp,DWORD PTR cs:[esi+edx*2]
  41254a:	sbb    eax,0x193d57a
  41254f:	fbld   TBYTE PTR ss:[edx+0x3166e9a7]
  412556:	pusha  
  412557:	fld    DWORD PTR [ebp+0x3d]
  41255a:	mov    dl,0x8
  41255c:	xchg   esp,eax
  41255d:	ja     0x41259b
  41255f:	mov    al,ds:0xe02d3953
  412564:	or     BYTE PTR [ebp+0x2986f3d2],bl
  41256a:	mov    cl,0x70
  41256c:	repnz stc 
  41256e:	imul   edx,DWORD PTR [eax-0x28],0xe2408e2
  412575:	push   0x187938f2
  41257a:	scas   eax,DWORD PTR es:[edi]
  41257b:	and    eax,0xb7d1f28f
  412580:	xchg   ecx,eax
  412581:	push   esp
  412582:	mov    fs,WORD PTR [ecx+0x6ff37680]
  412588:	data16 (bad) 
  41258a:	(bad)  
  41258b:	jb     0x41255b
  41258d:	xchg   ecx,eax
  41258e:	ds jp  0x4125ac
  412591:	jl     0x41258a
  412593:	test   DWORD PTR [esi-0x23],ebp
  412596:	and    BYTE PTR [edi-0x40],ch
  412599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41259b:	or     BYTE PTR [ebx],ah
  41259d:	mov    bl,0x1e
  41259f:	es jg  0x412594
  4125a2:	xchg   DWORD PTR [edx+0x2],esp
  4125a5:	adc    DWORD PTR [edi+0x4bbb9511],esi
  4125ab:	add    eax,0x7affeb0e
  4125b0:	fistp  QWORD PTR [esi-0x5e]
  4125b3:	xchg   BYTE PTR ds:0x3c69f3b5,ah
  4125b9:	ins    BYTE PTR es:[edi],dx
  4125ba:	mov    ss,WORD PTR [esi+0x60d2fa88]
  4125c0:	or     al,0x9a
  4125c2:	out    0x82,al
  4125c4:	ins    DWORD PTR es:[edi],dx
  4125c5:	sbb    BYTE PTR [ecx+0x1d],bl
  4125c8:	adc    eax,0xd0dc9d4c
  4125cd:	test   DWORD PTR ds:0xfa61b8f2,eax
  4125d3:	jno    0x4125c2
  4125d5:	in     eax,dx
  4125d6:	mov    eax,ds:0xe3c2a633
  4125db:	aaa    
  4125dc:	(bad)  
  4125dd:	xchg   esp,eax
  4125de:	cdq    
  4125df:	push   ds
  4125e0:	inc    edi
  4125e1:	push   cs
  4125e2:	rol    BYTE PTR ds:[esi+0x3],1
  4125e6:	stc    
  4125e7:	pop    ebx
  4125e8:	jge    0x4125a2
  4125ea:	adc    BYTE PTR [edi+0x6184870c],0x6f
  4125f1:	sub    al,0x6c
  4125f3:	xchg   bh,bh
  4125f5:	inc    BYTE PTR [ebx+0x52]
  4125f8:	mov    cl,0x87
  4125fa:	aad    0x17
  4125fc:	cwde   
  4125fd:	mov    eax,ds:0xd2007e07
  412602:	xchg   esi,eax
  412603:	lds    esi,FWORD PTR [esi+0x3f4e6345]
  412609:	outs   dx,DWORD PTR ds:[esi]
  41260a:	jmp    0x412597
  41260c:	mov    al,0xaf
  41260e:	pushf  
  41260f:	jns    0x41267b
  412611:	push   cs
  412612:	fcomi  st,st(2)
  412614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412615:	mov    eax,0x15c1588a
  41261a:	inc    edi
  41261b:	out    dx,eax
  41261c:	push   esp
  41261d:	scas   eax,DWORD PTR es:[edi]
  41261e:	test   BYTE PTR [ebx],0x16
  412621:	adc    BYTE PTR [ebx*8+0x1e615839],cl
  412628:	jno    0x4125ee
  41262a:	adc    ah,dh
  41262c:	sbb    eax,0x10df5195
  412631:	mov    ah,0xe8
  412633:	fs mov ecx,0xc7ca2d2f
  412639:	sahf   
  41263a:	add    eax,0x90e01a78
  41263f:	icebp  
  412640:	imul   eax,DWORD PTR [ebx-0xe],0x9aade60a
  412647:	push   es
  412648:	mov    eax,DWORD PTR [edi-0xc]
  41264b:	gs push 0x2a
  41264e:	repz in eax,dx
  412650:	mov    al,ds:0x2abba41f
  412655:	mov    esi,ecx
  412657:	arpl   WORD PTR [eax-0x5b],di
  41265a:	jnp    0x412608
  41265c:	inc    ebp
  41265d:	std    
  41265e:	sti    
  41265f:	into   
  412660:	mov    dh,0x57
  412662:	push   edx
  412663:	fisttp DWORD PTR [eax+0xa]
  412666:	lods   al,BYTE PTR ds:[esi]
  412667:	popf   
  412668:	adc    eax,DWORD PTR [eax+0x3e7dd5e1]
  41266e:	aad    0x4c
  412670:	adc    al,0xe
  412672:	sbb    eax,0xfc5c5379
  412677:	(bad)  
  412678:	and    al,0xfd
  41267a:	dec    edi
  41267c:	imul   esi,DWORD PTR [eax],0xe40be82d
  412682:	mov    edi,0x47606c30
  412687:	mov    dh,0x7f
  412689:	mov    dh,0xcd
  41268b:	shl    eax,0x78
  41268e:	clc    
  41268f:	retf   0x9d1f
  412692:	adc    eax,DWORD PTR [esi]
  412694:	rcr    eax,cl
  412696:	sub    ebp,DWORD PTR [ebp-0x70735680]
  41269c:	xchg   edx,eax
  41269d:	and    eax,0xc1ae06c5
  4126a2:	adc    esi,esp
  4126a4:	mov    ecx,0x16b29f1c
  4126a9:	loop   0x4126c3
  4126ab:	mov    fs,ebp
  4126ad:	pop    ebx
  4126ae:	shr    DWORD PTR [esi],0xae
  4126b1:	xor    eax,0x894168c9
  4126b6:	(bad)
  4126b9:	imul   ebp,DWORD PTR [edx],0x65
  4126bc:	inc    ebx
  4126bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126be:	(bad)  
  4126c0:	add    eax,0x96adbe01
  4126c5:	pop    esp
  4126c6:	test   eax,0x125fc32d
  4126cb:	cmp    eax,0xd5e02c4d
  4126d0:	lods   al,BYTE PTR ds:[esi]
  4126d1:	mov    ebx,esi
  4126d3:	xor    eax,0x274d252
  4126d8:	xchg   esp,eax
  4126d9:	aad    0xc9
  4126db:	jb     0x4126b1
  4126dd:	(bad)  
  4126de:	fdivr  QWORD PTR [ebx]
  4126e0:	cmc    
  4126e1:	test   DWORD PTR [ecx+0x6a6d3658],ecx
  4126e7:	or     edi,edx
  4126e9:	inc    ecx
  4126ea:	pop    edx
  4126eb:	(bad)  
  4126ec:	(bad)  
  4126ee:	loope  0x41267e
  4126f0:	xchg   esi,eax
  4126f1:	dec    ebx
  4126f2:	out    dx,eax
  4126f3:	shr    BYTE PTR [edx+0x31],cl
  4126f6:	sbb    eax,0x9124de2f
  4126fb:	mov    al,ds:0xdc0e51c1
  412700:	adc    eax,0xc6f55a47
  412705:	mov    ebp,0xebc2326a
  41270a:	aad    0xd3
  41270c:	jb     0x412776
  41270e:	int    0x6b
  412710:	ja     0x41276f
  412712:	stc    
  412713:	sub    esi,edi
  412715:	mov    al,ds:0xaf154759
  41271a:	xor    esp,DWORD PTR [eax-0x7eb1111a]
  412720:	lahf   
  412721:	sbb    DWORD PTR [esi+edi*2-0x625e2df4],0x3c
  412729:	dec    ebx
  41272a:	popa   
  41272b:	dec    ecx
  41272c:	fisttp QWORD PTR [ecx+0x5b8c72c1]
  412732:	scas   al,BYTE PTR es:[edi]
  412733:	and    al,BYTE PTR [eax-0x5cd27981]
  412739:	push   esi
  41273a:	mov    bl,0xd0
  41273c:	dec    edi
  41273d:	sti    
  41273e:	lods   eax,DWORD PTR ds:[esi]
  41273f:	test   edx,ebp
  412741:	dec    ebp
  412742:	jl     0x412743
  412744:	cmp    al,BYTE PTR ss:[edi+0x7b7abef4]
  41274b:	push   ecx
  41274c:	jmp    0xb9824f52
  412751:	in     al,0xad
  412753:	sbb    dh,BYTE PTR [ebp-0x51b48ef7]
  412759:	and    DWORD PTR fs:[ebp-0x738bdfc8],eax
  412760:	add    DWORD PTR [edi+0x32],edx
  412763:	daa    
  412764:	iret   
  412765:	jae    0x41277c
  412767:	and    al,0xce
  412769:	(bad)  
  41276a:	pop    ds
  41276b:	xor    BYTE PTR [esi+0x15],ah
  41276e:	mov    ah,0x55
  412770:	and    ebx,eax
  412772:	test   DWORD PTR [ebx+ebx*8-0x64],edx
  412776:	and    eax,0xaade6701
  41277b:	dec    edx
  41277c:	jle    0x4127a4
  41277e:	jbe    0x4127bf
  412780:	aas    
  412781:	mov    edi,0x245a7ac4
  412786:	xor    bl,BYTE PTR [eax]
  412788:	sbb    cl,BYTE PTR ds:0x2c1d19bf
  41278e:	and    DWORD PTR [edx-0x43365af3],ebp
  412794:	(bad)  
  412797:	scas   eax,DWORD PTR es:[edi]
  412798:	add    ch,0x93
  41279b:	aas    
  41279c:	sbb    DWORD PTR [ecx],ecx
  41279e:	mov    ds,WORD PTR [ebp+0x78]
  4127a1:	sub    al,0x59
  4127a3:	loope  0x4127e7
  4127a5:	mov    ah,0x4a
  4127a7:	imul   ebp,DWORD PTR [edx+0x6e],0xffffffa6
  4127ab:	and    esi,DWORD PTR [esi]
  4127ad:	mov    ch,0xa7
  4127af:	pop    esi
  4127b0:	xor    DWORD PTR [edx-0x12588a1e],esi
  4127b6:	faddp  st(0),st
  4127b8:	push   ebp
  4127b9:	or     eax,0xb3aa9791
  4127be:	scas   al,BYTE PTR es:[edi]
  4127bf:	iret   
  4127c0:	fs cs std 
  4127c3:	jmp    0xde53fc99
  4127c8:	push   0x16156f47
  4127cd:	xchg   edx,eax
  4127ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127cf:	(bad)  
  4127d0:	jl     0x4127d2
  4127d2:	dec    esp
  4127d3:	cmp    bl,dh
  4127d5:	ret    
  4127d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d7:	dec    esi
  4127d8:	add    bl,BYTE PTR [edx+0x73]
  4127db:	mov    al,ch
  4127dd:	ins    BYTE PTR es:[edi],dx
  4127de:	shl    ch,cl
  4127e0:	mov    esp,0x1b1d288f
  4127e5:	mov    al,0xf2
  4127e7:	(bad)  
  4127e9:	sbb    ecx,DWORD PTR [edx-0x72]
  4127ec:	xchg   bl,ch
  4127ee:	shl    bh,0x24
  4127f1:	(bad)  
  4127f2:	sub    eax,0xb7e7a082
  4127f7:	jecxz  0x412813
  4127f9:	mov    cl,0xa3
  4127fb:	retf   
  4127fc:	scas   eax,DWORD PTR es:[edi]
  4127fd:	retf   0x2ed8
  412800:	stos   BYTE PTR es:[edi],al
  412801:	inc    esp
  412802:	xor    edx,DWORD PTR ds:0xe3c10c34
  412808:	out    dx,eax
  412809:	test   eax,0xebb08a7a
  41280e:	push   ebp
  41280f:	ss mov al,0x70
  412812:	push   edi
  412813:	stc    
  412814:	repz (bad) 
  412817:	inc    edx
  412818:	adc    al,0x7a
  41281a:	ficomp WORD PTR [ebx]
  41281c:	fisub  DWORD PTR [esi+ebx*8-0x4d]
  412820:	adc    eax,0x82ed7ca5
  412825:	cmp    eax,0x7ab807b8
  41282a:	cli    
  41282b:	cld    
  41282c:	imul   ebp,eax,0xffffffea
  41282f:	popf   
  412830:	pushf  
  412831:	adc    al,0x2e
  412833:	pop    eax
  412834:	les    ebp,FWORD PTR [edi-0x5c]
  412837:	test   eax,0xd88b38a8
  41283c:	xchg   ebp,eax
  41283d:	cmp    esp,DWORD PTR [esi+0x2319ece9]
  412843:	dec    ebp
  412844:	jl     0x4128bd
  412846:	sub    ch,BYTE PTR [edx]
  412848:	in     al,0x6
  41284a:	aad    0x91
  41284c:	nop
  41284d:	pushf  
  41284e:	fisttp WORD PTR [edx]
  412850:	xchg   esp,eax
  412851:	xchg   ebp,eax
  412852:	test   al,0xa9
  412854:	cld    
  412855:	cdq    
  412856:	cmp    dl,BYTE PTR [ebx-0x48ffe0dd]
  41285c:	add    eax,0xc86d8f4b
  412861:	leave  
  412862:	add    esp,DWORD PTR [edi]
  412864:	out    0xce,eax
  412866:	jbe    0x4128d9
  412868:	fisttp DWORD PTR [ebp+0x1f1cf407]
  41286e:	es mov al,0x18
  412871:	and    BYTE PTR ds:0x5a839f35,ch
  412877:	and    BYTE PTR [edx],dl
  412879:	std    
  41287a:	cmc    
  41287b:	pop    ebx
  41287c:	imul   ebx,DWORD PTR [ebx-0x597a96b5],0xffffffb9
  412883:	xor    DWORD PTR [esi],esi
  412885:	jecxz  0x4128dc
  412887:	push   esp
  412888:	fld    TBYTE PTR [ebx]
  41288a:	aam    0x9b
  41288c:	xor    al,0x7a
  41288e:	xchg   ebp,eax
  41288f:	and    ch,cl
  412891:	mov    eax,ds:0xdf9028ca
  412896:	hlt    
  412897:	xchg   edi,eax
  412898:	lods   al,BYTE PTR ds:[esi]
  412899:	sbb    al,0x54
  41289b:	test   DWORD PTR [edi],edx
  41289d:	pusha  
  41289e:	(bad)  
  41289f:	pop    ss
  4128a0:	in     eax,dx
  4128a1:	inc    eax
  4128a2:	push   ds
  4128a3:	jmp    0x66264e82
  4128a8:	(bad)  
  4128a9:	jns    0x4128f2
  4128ab:	add    ebp,ebx
  4128ad:	xor    ah,BYTE PTR [esi-0x49b97f4e]
  4128b3:	outs   dx,BYTE PTR ds:[esi]
  4128b4:	aas    
  4128b5:	js     0x41283b
  4128b7:	pop    esp
  4128b8:	pop    ebx
  4128b9:	lods   eax,DWORD PTR ds:[esi]
  4128ba:	scas   eax,DWORD PTR es:[edi]
  4128bb:	hlt    
  4128bc:	fsub   st,st(5)
  4128be:	jbe    0x412932
  4128c0:	mov    ds:0x5597e61c,eax
  4128c5:	and    BYTE PTR [esp+edx*4],ah
  4128c8:	add    esi,DWORD PTR [ecx]
  4128ca:	sub    BYTE PTR [edx+0x670e5f56],al
  4128d0:	push   eax
  4128d1:	fmul   DWORD PTR [eax]
  4128d3:	pop    ds
  4128d4:	aam    0x59
  4128d6:	mov    BYTE PTR cs:[esi+0x73298582],al
  4128dd:	cmp    al,0x8b
  4128df:	sub    al,0xe4
  4128e1:	xor    eax,0xebbed341
  4128e6:	gs pusha 
  4128e8:	int3   
  4128e9:	dec    edx
  4128ea:	jmp    0x6400:0x904be2ed
  4128f1:	stos   DWORD PTR es:[edi],eax
  4128f2:	jb     0x4128da
  4128f4:	dec    edi
  4128f5:	lock pop es
  4128f7:	inc    ecx
  4128f8:	enter  0x1f1f,0xc3
  4128fc:	(bad)  
  4128fd:	les    edi,FWORD PTR [esi]
  4128ff:	xor    DWORD PTR [edx],ebx
  412901:	test   DWORD PTR [eax+edx*4+0x76583d5d],esi
  412908:	xchg   edx,eax
  412909:	outs   dx,BYTE PTR ds:[esi]
  41290a:	(bad)  
  41290c:	ja     0x4128e9
  41290e:	xchg   edx,eax
  41290f:	stc    
  412910:	leave  
  412911:	push   ebp
  412912:	wbinvd 
  412914:	mov    cl,0x9
  412916:	sahf   
  412917:	fcomi  st,st(6)
  412919:	(bad)  
  41291a:	(bad)  
  41291c:	mov    bh,0xc4
  41291e:	retf   
  41291f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412920:	sbb    al,0x39
  412923:	jns    0x41291d
  412925:	lock in al,0xda
  412928:	sbb    DWORD PTR [esi+0x38],0x90d82535
  41292f:	pop    es
  412930:	push   0x15
  412932:	imul   edx,DWORD PTR [edi+ebp*2],0xffffffea
  412936:	je     0x4129a2
  412938:	dec    ecx
  412939:	popf   
  41293a:	aad    0xad
  41293c:	out    0xc9,al
  41293e:	pop    ebx
  41293f:	mov    dl,0x35
  412941:	push   esp
  412942:	lods   eax,DWORD PTR ds:[esi]
  412943:	sar    ecx,0x73
  412946:	aad    0xf4
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	sbb    al,0xcc
  41294b:	dec    ebp
  41294c:	test   al,0x1a
  41294e:	je     0x41295d
  412950:	ret    0x5046
  412953:	jno    0x41299a
  412955:	mov    dl,0x6a
  412957:	jbe    0x4129c8
  412959:	pop    edx
  41295a:	lock pusha 
  41295c:	push   esi
  41295d:	xchg   esi,eax
  41295e:	sbb    DWORD PTR [ebx-0x1e],edi
  412961:	sub    eax,0x9247ee68
  412966:	xchg   ecx,eax
  412967:	not    DWORD PTR [eax+0x954a6d8]
  41296d:	std    
  41296e:	inc    esp
  41296f:	sub    BYTE PTR ds:[edi+0x9],ch
  412973:	dec    esp
  412974:	and    eax,0x59bd3660
  412979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41297a:	out    dx,eax
  41297b:	fsubr  QWORD PTR [ebp-0x7a]
  41297e:	sbb    DWORD PTR ds:0x193fc27f,esi
  412984:	push   eax
  412985:	sub    eax,0x77bf7d74
  41298a:	xlat   BYTE PTR ds:[ebx]
  41298b:	mov    ecx,0xa16842ce
  412990:	inc    ebx
  412991:	pop    ebp
  412992:	sub    ebx,ebx
  412994:	pop    eax
  412995:	scas   eax,DWORD PTR es:[edi]
  412996:	xor    ecx,DWORD PTR [edi*8+0x361b7b96]
  41299d:	adc    bh,ah
  41299f:	push   ecx
  4129a0:	arpl   WORD PTR [edx+0x6aa81e86],ax
  4129a6:	test   BYTE PTR [esi],cl
  4129a8:	jae    0x4129b1
  4129aa:	aaa    
  4129ab:	push   eax
  4129ac:	shl    BYTE PTR [edi+0x13],cl
  4129af:	shl    DWORD PTR [esi+eiz*1+0x18],0xe7
  4129b4:	pop    ecx
  4129b5:	pushf  
  4129b6:	dec    eax
  4129b7:	(bad)  
  4129b8:	pop    edx
  4129b9:	adc    eax,0x4277d051
  4129be:	mov    al,ds:0xccc23b0a
  4129c3:	mov    edi,0x448d7f9f
  4129c8:	sub    bl,BYTE PTR [edi-0x41]
  4129cb:	mov    esi,0x973a9d5c
  4129d0:	cwde   
  4129d1:	sub    eax,0xb3d4b0ab
  4129d6:	push   esp
  4129d7:	daa    
  4129d8:	in     al,dx
  4129d9:	repz xor DWORD PTR [edi-0x2e2d3874],edi
  4129e0:	and    ebx,DWORD PTR [edx]
  4129e2:	out    0x1,al
  4129e4:	push   esp
  4129e5:	or     eax,0xcc6c05a0
  4129ea:	popa   
  4129eb:	dec    ebp
  4129ec:	clc    
  4129ed:	int    0x89
  4129ef:	vandnps xmm5,xmm2,XMMWORD PTR [ebx]
  4129f4:	aaa    
  4129f5:	xchg   ebp,eax
  4129f6:	add    DWORD PTR [ebp+0x5ff44606],edx
  4129fc:	js     0x412a4d
  4129fe:	mov    ah,0x21
  412a00:	jl     0x412a65
  412a02:	(bad)  
  412a04:	fist   WORD PTR [ecx]
  412a06:	je     0x4129ef
  412a08:	inc    eax
  412a09:	int    0x65
  412a0b:	mov    bh,0xb3
  412a0d:	inc    esp
  412a0e:	test   BYTE PTR [ebx+0x18],al
  412a11:	sub    DWORD PTR [ebx],0xffffff82
  412a14:	scas   al,BYTE PTR es:[edi]
  412a15:	pushf  
  412a16:	inc    ebp
  412a17:	jbe    0x412a14
  412a19:	adc    DWORD PTR [ebp+0x71],edi
  412a1c:	sub    al,0x81
  412a1e:	or     al,0x71
  412a20:	pop    ss
  412a21:	cld    
  412a22:	mov    ecx,0xccc6ceaf
  412a27:	push   es
  412a28:	pop    ecx
  412a29:	jno    0x4129c6
  412a2b:	inc    ecx
  412a2c:	arpl   WORD PTR [edx-0x73],di
  412a2f:	lds    eax,FWORD PTR [esi-0x31]
  412a32:	pop    esi
  412a33:	daa    
  412a34:	lahf   
  412a35:	adc    BYTE PTR [edi],0xf4
  412a38:	mov    cl,0x83
  412a3a:	push   ss
  412a3b:	ja     0x412aa8
  412a3d:	mov    edx,gs
  412a3f:	inc    ebx
  412a40:	loope  0x412a1c
  412a42:	test   DWORD PTR [ebp+0x2cbb591e],0x76f565e2
  412a4c:	cdq    
  412a4d:	data16 lock not BYTE PTR [esi]
  412a51:	push   ebp
  412a52:	inc    esi
  412a53:	xchg   DWORD PTR fs:[ebx+0x3a],eax
  412a57:	xor    DWORD PTR [ebx+0x6c],eax
  412a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a5b:	dec    ecx
  412a5c:	fnstenv [ebx]
  412a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a5f:	add    al,0x1a
  412a61:	and    ecx,DWORD PTR [ebx]
  412a63:	je     0x412ad4
  412a65:	mov    eax,ds:0xb90bc671
  412a6a:	inc    ecx
  412a6b:	jbe    0x412a56
  412a6d:	sbb    cl,cl
  412a6f:	shr    al,1
  412a71:	lods   al,BYTE PTR ds:[esi]
  412a72:	mov    ch,0x4e
  412a74:	out    dx,eax
  412a75:	stc    
  412a76:	adc    esp,ebx
  412a78:	(bad)  
  412a79:	(bad)  
  412a7a:	dec    eax
  412a7b:	bound  esp,QWORD PTR [ebx+esi*4]
  412a7e:	mov    BYTE PTR ds:0x6cae1338,ah
  412a84:	cmp    BYTE PTR [edi+eiz*8-0x9],al
  412a88:	dec    edi
  412a89:	cld    
  412a8a:	std    
  412a8b:	mov    BYTE PTR [edx],cl
  412a8d:	iret   
  412a8e:	sub    al,0x49
  412a90:	adc    eax,0x30cbfbff
  412a95:	inc    ebx
  412a96:	hlt    
  412a97:	loop   0x412a38
  412a99:	mov    ch,0xcf
  412a9b:	in     al,dx
  412a9c:	ret    
  412a9d:	adc    eax,0xc3bf8383
  412aa2:	cmp    dl,dl
  412aa4:	repz dec ecx
  412aa6:	mov    ah,dl
  412aa8:	enter  0xcba3,0x47
  412aac:	stc    
  412aad:	aad    0x8a
  412aaf:	fstp   DWORD PTR [eax]
  412ab1:	stos   BYTE PTR es:[edi],al
  412ab2:	(bad)  
  412ab3:	xor    eax,0xd5cafe84
  412ab8:	dec    edi
  412ab9:	pop    ebx
  412aba:	das    
  412abb:	jb     0x412a58
  412abd:	and    eax,0xd084575b
  412ac2:	into   
  412ac3:	xor    cl,BYTE PTR [edx]
  412ac5:	cli    
  412ac6:	jb     0x412b44
  412ac8:	retf   0x978c
  412acb:	and    BYTE PTR [edi],bl
  412acd:	sub    ecx,DWORD PTR [ebp-0x64]
  412ad0:	(bad)  
  412ad1:	inc    esp
  412ad2:	into   
  412ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad4:	jns    0x412a5e
  412ad6:	pop    ds
  412ad7:	or     edx,edi
  412ad9:	aad    0x20
  412adb:	cld    
  412adc:	(bad)  
  412add:	sbb    al,0x14
  412adf:	push   ecx
  412ae0:	or     bh,BYTE PTR [ecx-0x2]
  412ae3:	(bad)  
  412ae4:	push   esi
  412ae5:	push   ebp
  412ae6:	pop    edx
  412ae7:	lods   al,BYTE PTR ds:[esi]
  412ae8:	pop    ecx
  412ae9:	pop    ecx
  412aea:	fild   DWORD PTR gs:[ebp-0x6b]
  412aee:	mov    edi,0x36d02b09
  412af3:	fwait
  412af4:	mov    cl,0xaa
  412af6:	mov    edx,0x2cfb64ba
  412afb:	lock (bad) 
  412afd:	ss out dx,al
  412aff:	inc    eax
  412b00:	inc    edx
  412b01:	inc    edi
  412b02:	imul   edx,DWORD PTR [edi],0xffffffdd
  412b05:	jnp    0x412ae7
  412b07:	sti    
  412b08:	jo     0x412b61
  412b0a:	adc    DWORD PTR [ecx+0x70168941],0x6701701e
  412b14:	pop    eax
  412b15:	(bad)  
  412b16:	fld    QWORD PTR [ecx+0x60546fef]
  412b1c:	iret   
  412b1d:	pop    eax
  412b1e:	inc    ecx
  412b1f:	cli    
  412b20:	adc    BYTE PTR [edx+eax*2-0xb],al
  412b24:	test   eax,0xebb66e13
  412b29:	adc    BYTE PTR [eax-0x5080b10a],cl
  412b2f:	xchg   ebx,eax
  412b30:	inc    ecx
  412b31:	mov    dh,0x5f
  412b33:	jns    0x412b69
  412b35:	je     0x412b36
  412b37:	pop    esp
  412b38:	xchg   ebp,eax
  412b39:	aaa    
  412b3a:	inc    esi
  412b3b:	daa    
  412b3c:	push   ebx
  412b3d:	adc    eax,0xa17a15af
  412b42:	xor    BYTE PTR [ecx+ebx*1],dh
  412b45:	jecxz  0x412adb
  412b47:	xor    BYTE PTR [eax+0x51],ah
  412b4a:	or     BYTE PTR [edx],ah
  412b4c:	leave  
  412b4d:	mov    al,0xfe
  412b4f:	ja     0x412ad6
  412b51:	cld    
  412b52:	or     al,0x5b
  412b54:	ret    
  412b55:	xlat   BYTE PTR ds:[ebx]
  412b56:	div    DWORD PTR [edx+0x57]
  412b59:	mov    bh,0x5b
  412b5b:	jcxz   0x412b11
  412b5e:	mov    esp,0xe8c01391
  412b63:	mov    DWORD PTR [eax+0x13b8339e],esi
  412b69:	sub    DWORD PTR [ebp+esi*1+0x144bb455],esi
  412b70:	or     dh,BYTE PTR [bx+si+0x28]
  412b74:	fsubp  st(7),st
  412b76:	jl     0x412b15
  412b78:	or     al,0xde
  412b7a:	inc    eax
  412b7b:	sbb    ebp,0xffffffe5
  412b7e:	adc    BYTE PTR [edi+0x2d],dl
  412b81:	test   ebp,edi
  412b83:	mov    ecx,0x9ddbf5a7
  412b88:	cmp    esi,DWORD PTR [esi-0x63]
  412b8b:	xlat   BYTE PTR ds:[ebx]
  412b8c:	jne    0x412b2c
  412b8e:	jb     0x412b52
  412b90:	imul   edx,DWORD PTR [eax-0x4d],0xffffffd8
  412b94:	dec    ebx
  412b95:	add    BYTE PTR [eax+esi*1-0x7f1506e4],0xb
  412b9d:	pusha  
  412b9e:	retf   0x4292
  412ba1:	mov    BYTE PTR [ebx],bh
  412ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba4:	cmc    
  412ba5:	out    dx,eax
  412ba6:	ss shl bl,cl
  412ba9:	xchg   ecx,eax
  412baa:	jae    0x412be7
  412bac:	daa    
  412bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bae:	and    dh,BYTE PTR ds:0x8ea1636
  412bb4:	or     DWORD PTR [eax+0x3f],edi
  412bb7:	inc    esp
  412bb8:	loope  0x412c04
  412bba:	mov    edx,0x5bced83c
  412bbf:	popf   
  412bc0:	imul   edi,DWORD PTR [ecx+ebp*4+0x63],0x2c
  412bc5:	xchg   edi,ebp
  412bc7:	mov    ecx,0x8f74a543
  412bcc:	sub    cl,ch
  412bce:	repz pop esp
  412bd0:	xor    eax,0x82331cee
  412bd5:	(bad)  
  412bd6:	cli    
  412bd7:	out    dx,al
  412bd8:	or     al,0x95
  412bda:	adc    ebp,eax
  412bdc:	shl    DWORD PTR [ecx],cl
  412bde:	jno    0x412b81
  412be0:	push   ecx
  412be1:	dec    esi
  412be2:	sar    BYTE PTR [edx+0x44],0xe
  412be6:	mov    al,0xa9
  412be8:	sub    dh,BYTE PTR [ebp-0x44]
  412beb:	push   ecx
  412bec:	jl     0x412bcd
  412bee:	mov    eax,ds:0x9b9de6b9
  412bf3:	mov    ecx,0xc68dcd52
  412bf8:	das    
  412bf9:	retf   0xbede
  412bfc:	(bad)  
  412bfd:	out    0x50,eax
  412bff:	xchg   edx,eax
  412c00:	pop    ebx
  412c01:	mov    edx,DWORD PTR [ebx-0x3b]
  412c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c05:	jl     0x412bb0
  412c07:	adc    ecx,DWORD PTR [edi]
  412c09:	enter  0x384,0xb5
  412c0d:	push   ecx
  412c0e:	xchg   ecx,eax
  412c0f:	outs   dx,BYTE PTR ds:[esi]
  412c10:	sbb    ah,dl
  412c12:	sahf   
  412c13:	mov    bh,0xb6
  412c15:	push   esi
  412c16:	and    dl,BYTE PTR [esi+0xdef515]
  412c1c:	adc    eax,0xdd0b7222
  412c21:	stos   DWORD PTR es:[edi],eax
  412c22:	xchg   ecx,eax
  412c23:	mov    ds:0x67fc797e,eax
  412c28:	push   ds
  412c29:	dec    edi
  412c2a:	sbb    BYTE PTR [ebp-0x11],bh
  412c2d:	jmp    0xd36dcaa
  412c32:	imul   esp,DWORD PTR [ecx],0x4927e2a1
  412c38:	ds cdq 
  412c3a:	into   
  412c3b:	pushf  
  412c3c:	pop    edi
  412c3d:	sbb    esi,DWORD PTR ds:[ecx-0x123bd925]
  412c44:	sub    DWORD PTR ds:[edi],edi
  412c47:	and    DWORD PTR [edi+0x78],edx
  412c4a:	add    dh,ch
  412c4c:	add    ebp,DWORD PTR [edi+eiz*8-0x24]
  412c50:	not    DWORD PTR [ebx]
  412c52:	fcom   QWORD PTR [edi]
  412c54:	fild   WORD PTR [esi-0x70f8c33b]
  412c5b:	cmp    bh,dh
  412c5d:	in     al,0x49
  412c5f:	repnz cmp esp,esi
  412c62:	jle    0x412ca5
  412c64:	(bad)  
  412c65:	int    0x93
  412c67:	rcr    BYTE PTR [edi-0x7e],0xc2
  412c6b:	pop    ecx
  412c6c:	push   ebx
  412c6d:	push   esp
  412c6e:	(bad)  
  412c6f:	aaa    
  412c70:	mov    al,0xbf
  412c72:	popfw  
  412c74:	dec    eax
  412c75:	mov    eax,0xdaa9a4f4
  412c7a:	test   BYTE PTR [edi+edx*2],bl
  412c7d:	mov    cl,0x90
  412c7f:	push   0x19
  412c81:	and    eax,esp
  412c83:	adc    al,0x89
  412c85:	repz shl bl,cl
  412c88:	mov    ch,al
  412c8a:	jge    0x412ca6
  412c8c:	lods   al,BYTE PTR ds:[esi]
  412c8d:	fld    TBYTE PTR [edx+0x24]
  412c90:	lods   eax,DWORD PTR ds:[esi]
  412c91:	data16 stos WORD PTR es:[edi],ax
  412c94:	addr16 retf 0xc973
  412c98:	aaa    
  412c99:	inc    edi
  412c9a:	xor    DWORD PTR [esi+0x5a65b382],ecx
  412ca0:	fistp  WORD PTR [ebp-0x2894dfe0]
  412ca6:	dec    edi
  412ca7:	mul    DWORD PTR ds:0xcb7295e0
  412cad:	push   ds
  412cae:	int3   
  412caf:	lds    edi,FWORD PTR [eax]
  412cb1:	jno    0x412d22
  412cb3:	cmp    al,0x8b
  412cb5:	call   0x92a7:0xcca2c23d
  412cbc:	enter  0xa9b0,0x89
  412cc0:	sub    bl,bh
  412cc2:	mov    bh,0xc2
  412cc4:	das    
  412cc5:	adc    al,0x22
  412cc7:	dec    esi
  412cc8:	(bad)  
  412cc9:	xchg   ecx,eax
  412cca:	mov    ebx,0xb08cde3c
  412ccf:	xor    BYTE PTR [ebx+eax*1-0x2ab55fa6],ah
  412cd6:	jmp    0x412d27
  412cd8:	icebp  
  412cd9:	push   esi
  412cda:	push   ecx
  412cdb:	sbb    bl,BYTE PTR [eax-0x53bddb0f]
  412ce1:	pop    eax
  412ce2:	cdq    
  412ce3:	imul   ebx,DWORD PTR [eax-0x7],0x2870002a
  412cea:	fs mov edi,0xe351b7f8
  412cf0:	mov    ah,0x85
  412cf2:	xchg   esp,eax
  412cf3:	mov    bh,BYTE PTR [edx]
  412cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf6:	adc    bl,ch
  412cf8:	xor    bl,dh
  412cfa:	popf   
  412cfb:	mov    esi,0x72085e67
  412d00:	add    eax,0x925f6d69
  412d05:	adc    BYTE PTR [eax+0x50a9e538],bh
  412d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d0c:	pop    ebx
  412d0d:	enter  0x3ed9,0x38
  412d11:	cwde   
  412d12:	cmp    DWORD PTR [esp+edi*2],0x6a
  412d16:	sbb    ch,dh
  412d18:	xor    eax,0x2cef3f68
  412d1d:	arpl   WORD PTR [edx+edi*2+0x3],bx
  412d21:	push   ds
  412d22:	adc    eax,0x8efab97d
  412d27:	in     eax,dx
  412d28:	mov    ebx,0x25191645
  412d2d:	mov    ds:0x444057bf,al
  412d32:	ret    0x851
  412d35:	lods   al,BYTE PTR ds:[esi]
  412d36:	sub    eax,0x87ee2098
  412d3b:	push   edx
  412d3c:	shr    eax,0xa3
  412d3f:	icebp  
  412d40:	ds cdq 
  412d42:	adc    ebp,edi
  412d44:	lahf   
  412d45:	xchg   edx,eax
  412d46:	arpl   WORD PTR [eax+eax*4+0x5af47878],ax
  412d4d:	mov    ds:0xfd55abe3,al
  412d52:	and    esi,ebx
  412d54:	aaa    
  412d55:	daa    
  412d56:	test   al,0x1b
  412d58:	fidivr DWORD PTR [edx+0x34]
  412d5b:	test   ch,dl
  412d5d:	jae    0x412d5b
  412d5f:	mov    ds:0x23cdc2be,eax
  412d64:	dec    ebx
  412d65:	xor    eax,0xf2731fec
  412d6a:	pop    ebp
  412d6b:	push   esi
  412d6c:	mov    bl,0x2b
  412d6e:	repnz mov edi,0x9bab9ae
  412d74:	lea    eax,[edi]
  412d76:	ss push esi
  412d78:	or     bh,BYTE PTR ds:0x73cff2a4
  412d7e:	stos   DWORD PTR es:[edi],eax
  412d7f:	das    
  412d80:	or     ah,ch
  412d82:	xor    DWORD PTR [esi],esi
  412d84:	inc    esp
  412d85:	pop    ecx
  412d86:	adc    esp,DWORD PTR [ebx+0x7a28cef2]
  412d8c:	or     ecx,ebp
  412d8e:	and    al,0xb4
  412d90:	dec    ebx
  412d91:	les    ecx,FWORD PTR [eax]
  412d93:	ins    DWORD PTR es:[edi],dx
  412d94:	or     al,0x62
  412d96:	xchg   ebx,eax
  412d97:	mov    edx,0x298d3e3
  412d9c:	sub    ch,dl
  412d9e:	push   ecx
  412d9f:	shl    BYTE PTR [edi],cl
  412da1:	shl    BYTE PTR ds:0xbbf51aba,cl
  412da7:	imul   edi,DWORD PTR [edi-0x6e],0xffffffbd
  412dab:	push   ds
  412dac:	cld    
  412dad:	sub    DWORD PTR [esi+0x21c759e2],esp
  412db3:	xor    al,0x30
  412db5:	mov    dh,0x7b
  412db7:	pop    ebx
  412db8:	push   0x501a8d0a
  412dbd:	cmp    BYTE PTR [esi+0x5b],dl
  412dc0:	mov    ebx,eax
  412dc2:	adc    al,0x6a
  412dc4:	test   eax,0x962828c8
  412dc9:	xchg   esp,eax
  412dca:	push   cs
  412dcb:	dec    esp
  412dcc:	mov    BYTE PTR [edi-0x24edff9e],dh
  412dd2:	sub    DWORD PTR [esi],ebx
  412dd4:	and    BYTE PTR [eax+0x46],al
  412dd7:	mov    ds:0x752e668a,eax
  412ddc:	mov    DWORD PTR ss:0xbf3366b1,edi
  412de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de4:	lock lds esi,FWORD PTR [ebx+ebx*4+0x66]
  412de9:	mov    WORD PTR [edi+0x61],es
  412dec:	(bad)  
  412ded:	fisubr DWORD PTR [edi]
  412def:	cmc    
  412df0:	in     al,0x57
  412df2:	xchg   edi,eax
  412df3:	jmp    0x50906e66
  412df8:	sub    BYTE PTR [ebx+0x18],dl
  412dfb:	inc    edx
  412dfc:	outs   dx,BYTE PTR ds:[esi]
  412dfd:	fist   WORD PTR [ebx+0x4dc1b6f8]
  412e03:	nop
  412e04:	fs js  0x412d94
  412e07:	aaa    
  412e08:	aaa    
  412e09:	pusha  
  412e0a:	push   ebx
  412e0b:	xor    BYTE PTR [ecx],bl
  412e0d:	fild   QWORD PTR [ebx+0x11f2051b]
  412e13:	inc    ebp
  412e14:	or     al,BYTE PTR [ebx]
  412e16:	push   cs
  412e17:	sub    BYTE PTR [edi],al
  412e19:	shl    cl,cl
  412e1b:	jne    0x412e86
  412e1d:	and    DWORD PTR ds:[eax+0x9d2dfad],ebx
  412e24:	push   edx
  412e25:	stos   BYTE PTR es:[edi],al
  412e26:	adc    ecx,DWORD PTR [esi-0xa]
  412e29:	aam    0xbc
  412e2b:	cmp    DWORD PTR es:[ecx-0x354e2881],edi
  412e32:	mov    al,es:0xb457b724
  412e38:	and    bl,BYTE PTR [edx+0x716b6da9]
  412e3e:	push   ds
  412e3f:	and    eax,0x559ace71
  412e44:	pop    edi
  412e45:	push   cs
  412e46:	lods   al,BYTE PTR ds:[esi]
  412e47:	sbb    ecx,ebx
  412e49:	pop    edi
  412e4a:	push   0x4
  412e4c:	bound  edx,QWORD PTR [esi]
  412e4e:	stos   BYTE PTR es:[edi],al
  412e4f:	stos   BYTE PTR es:[edi],al
  412e50:	sti    
  412e51:	jbe    0x412dea
  412e53:	mov    ebx,0xad35d429
  412e58:	clc    
  412e59:	not    bh
  412e5b:	mov    al,ds:0x98af38d9
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	push   ss
  412e62:	icebp  
  412e63:	jecxz  0x412ea0
  412e65:	jl     0x412e0d
  412e67:	in     eax,0x32
  412e69:	mov    BYTE PTR [edx-0x56b589b9],ah
  412e6f:	dec    ebp
  412e70:	dec    edi
  412e71:	add    eax,0xdfca8209
  412e76:	lds    ecx,FWORD PTR [ebx+0x40f0b25e]
  412e7c:	cdq    
  412e7d:	std    
  412e7e:	bound  ebp,QWORD PTR [ebx-0x2d131535]
  412e84:	gs inc ebx
  412e86:	mov    cl,BYTE PTR [edi-0x54]
  412e89:	xor    al,0x21
  412e8b:	xor    eax,0xe44523fb
  412e90:	jecxz  0x412e70
  412e92:	rcr    al,0xa
  412e95:	(bad)  
  412e97:	dec    edx
  412e98:	xchg   esp,eax
  412e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e9a:	mov    WORD PTR [ecx+0x58],es
  412e9d:	mov    ecx,0xb852bb7a
  412ea2:	mov    esi,0x63e228ab
  412ea7:	mov    fs,WORD PTR [edx+edi*2+0x7ee35f87]
  412eae:	(bad)  
  412eaf:	mov    bl,0x7
  412eb1:	(bad)  
  412eb2:	imul   ebx,DWORD PTR [ecx-0x29b8a1b8],0x7a
  412eb9:	idiv   ebp
  412ebb:	or     al,0x61
  412ebd:	mov    edx,0x62d53d32
  412ec2:	sub    edi,DWORD PTR [esi+ecx*8+0x1a]
  412ec6:	test   al,0xf1
  412ec9:	add    al,0x65
  412ecb:	xchg   edi,eax
  412ecc:	jbe    0x412f4c
  412ece:	adc    bh,BYTE PTR [eax-0x3fbd74c]
  412ed4:	ja     0x412f4a
  412ed6:	lods   al,BYTE PTR ds:[esi]
  412ed7:	push   ss
  412ed8:	pop    eax
  412ed9:	popa   
  412eda:	push   ecx
  412edb:	xchg   esp,eax
  412edc:	ss xchg ebx,eax
  412ede:	cmp    eax,0x97350c31
  412ee3:	push   eax
  412ee4:	clc    
  412ee5:	xchg   bh,dh
  412ee7:	outs   dx,BYTE PTR ds:[esi]
  412ee8:	mov    WORD PTR [edx-0x1c3d3fb5],?
  412eee:	(bad)  
  412eef:	pop    eax
  412ef0:	sub    ecx,DWORD PTR [edi]
  412ef2:	mov    cl,BYTE PTR [esi-0x37]
  412ef5:	outs   dx,BYTE PTR ds:[esi]
  412ef6:	in     eax,dx
  412ef7:	cs adc eax,0xa68b009f
  412efd:	mov    ch,0x80
  412eff:	jle    0x412f54
  412f01:	out    0x82,eax
  412f03:	dec    edi
  412f04:	in     eax,dx
  412f05:	hlt    
  412f06:	mov    ds:0xb5d55a1a,eax
  412f0b:	dec    eax
  412f0c:	or     ecx,0xfffffff9
  412f0f:	pop    esp
  412f10:	mov    edx,0xc112d0b9
  412f15:	int3   
  412f16:	pop    edx
  412f17:	jo     0x412f2d
  412f19:	or     ebp,DWORD PTR [edx]
  412f1b:	and    esi,DWORD PTR [ebp-0x3]
  412f1e:	xor    BYTE PTR [ecx],ah
  412f20:	les    edi,FWORD PTR [esi-0x713a556e]
  412f26:	lahf   
  412f27:	aaa    
  412f28:	popf   
  412f29:	test   DWORD PTR ds:0x29b99f51,0xca8fbb94
  412f33:	retf   
  412f34:	neg    ah
  412f36:	pop    ebp
  412f37:	sub    DWORD PTR [edx+eiz*2],edi
  412f3a:	or     eax,0x8e8d98c6
  412f3f:	adc    al,0x61
  412f41:	enter  0xc837,0x23
  412f45:	cdq    
  412f46:	sub    al,BYTE PTR ds:0x7dd16d3c
  412f4c:	enter  0x517d,0x75
  412f50:	dec    edi
  412f51:	fmul   QWORD PTR [ebp-0xa608d16]
  412f57:	inc    edi
  412f58:	jl     0x412f95
  412f5a:	js     0x412fad
  412f5c:	xchg   esi,eax
  412f5d:	loope  0x412f45
  412f5f:	int    0x70
  412f61:	mov    ah,0xd8
  412f63:	icebp  
  412f64:	sbb    eax,0xa1ff2ca0
  412f69:	ret    0x1b89
  412f6c:	push   edx
  412f6d:	mov    eax,ds:0x87960b5c
  412f72:	scas   al,BYTE PTR es:[edi]
  412f73:	jo     0x412f6a
  412f75:	and    eax,0x983fc43e
  412f7a:	int    0x39
  412f7c:	test   eax,0x6b922e31
  412f81:	sbb    ch,BYTE PTR [edx+0x79]
  412f84:	jnp    0x412f1a
  412f86:	add    BYTE PTR [esp+edi*2],bl
  412f89:	dec    esp
  412f8a:	dec    esp
  412f8b:	xlat   BYTE PTR ds:[ebx]
  412f8c:	call   0x6efd:0xa9a43d5
  412f93:	mov    edx,DWORD PTR [esp+eax*4-0x51]
  412f97:	jmp    0x412f4f
  412f99:	loop   0x412f30
  412f9b:	in     al,dx
  412f9c:	push   ecx
  412f9d:	and    eax,0xa6877cd0
  412fa2:	ins    DWORD PTR es:[edi],dx
  412fa3:	add    ah,BYTE PTR [ebx-0x41]
  412fa6:	add    BYTE PTR ds:[ebx-0x1a],0x16
  412fab:	sti    
  412fac:	inc    ebx
  412fad:	dec    esi
  412fae:	inc    edi
  412faf:	out    dx,eax
  412fb0:	push   ebx
  412fb1:	call   0xe003:0xf42df318
  412fb8:	inc    edi
  412fb9:	xlat   BYTE PTR ds:[ebx]
  412fba:	fild   WORD PTR [edx-0x35]
  412fbd:	mov    edx,0x82535416
  412fc2:	into   
  412fc3:	pop    esi
  412fc4:	jbe    0x412f87
  412fc6:	push   ds
  412fc7:	jae    0x412fb9
  412fc9:	jb     0x412f8d
  412fcb:	mov    ecx,0x2ca52527
  412fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd1:	stos   BYTE PTR es:[edi],al
  412fd2:	jmp    0x3026af4b
  412fd7:	xchg   ebx,eax
  412fd8:	cmp    eax,0xd2df0f62
  412fdd:	sub    al,0x91
  412fdf:	jmp    0x2839581a
  412fe4:	mov    ds:0x404026f6,eax
  412fe9:	retf   0xa074
  412fec:	je     0x412f74
  412fee:	int3   
  412fef:	mov    esi,DWORD PTR [edi]
  412ff1:	adc    eax,0x762d22d0
  412ff6:	add    ecx,ebp
  412ff8:	ja     0x412fd8
  412ffa:	icebp  
  412ffb:	outs   dx,DWORD PTR ds:[esi]
  412ffc:	test   BYTE PTR [ecx],ch
  412ffe:	test   BYTE PTR ds:0xbb0d9088,ah
  413004:	mov    cl,0xa5
  413006:	adc    dl,BYTE PTR [bx+si-0x2211]
  41300b:	xchg   ch,al
  41300d:	sub    esp,DWORD PTR [ecx-0x6f]
  413010:	mov    bh,0x83
  413012:	xlat   BYTE PTR ds:[ebx]
  413013:	and    dl,BYTE PTR [eax]
  413015:	jmp    0x41301f
  413017:	sti    
  413018:	xchg   edi,eax
  413019:	repz and BYTE PTR [ecx+0x1a6ece0],bl
  413020:	mov    bl,0xd3
  413022:	mov    edx,0x37ff719d
  413027:	hlt    
  413028:	dec    ebx
  413029:	pusha  
  41302a:	lods   al,BYTE PTR ds:[esi]
  41302b:	or     ebx,DWORD PTR [ebx+0x8a80803]
  413031:	or     BYTE PTR [ecx+0x74657371],al
  413037:	ret    
  413038:	in     eax,0xdd
  41303a:	stos   DWORD PTR es:[edi],eax
  41303b:	push   eax
  41303c:	xchg   esp,eax
  41303d:	jne    0x413043
  41303f:	sub    DWORD PTR ds:0xe010bee9,edi
  413045:	fs dec ebp
  413047:	dec    esp
  413048:	aad    0x16
  41304a:	xor    BYTE PTR [ebx+0x14],dh
  41304d:	scas   al,BYTE PTR es:[edi]
  41304e:	rol    DWORD PTR [edi],1
  413050:	or     BYTE PTR ds:0xcc6f9763,dh
  413056:	inc    ecx
  413057:	pop    esp
  413058:	lahf   
  413059:	(bad)
  41305c:	fwait
  41305d:	lock iret 
  41305f:	jae    0x4130a2
  413061:	fs push edx
  413063:	add    al,0x6d
  413065:	sbb    eax,0x79ef3dc8
  41306a:	inc    edi
  41306b:	cwde   
  41306c:	nop
  41306d:	cli    
  41306e:	mov    dh,0x4
  413070:	jno    0x413096
  413072:	hlt    
  413073:	jle    0x413060
  413075:	aaa    
  413076:	test   al,0x82
  413078:	sub    DWORD PTR [edi+eiz*8+0x5d4f77f5],ebx
  41307f:	or     BYTE PTR [ecx+0x39],bl
  413082:	jp     0x4130b1
  413084:	xor    ah,BYTE PTR [ebx-0x37]
  413087:	pop    ebx
  413088:	iret   
  413089:	xchg   edx,eax
  41308a:	mov    ah,0xa5
  41308c:	dec    esi
  41308d:	push   ss
  41308e:	inc    esi
  41308f:	mov    eax,ds:0xe795fe80
  413094:	loope  0x41308f
  413096:	(bad)  
  413097:	push   edi
  413098:	sar    BYTE PTR [eax*4-0x5b362273],1
  41309f:	fs ja  0x4130a2
  4130a2:	xor    al,0x72
  4130a4:	aam    0xe
  4130a6:	es jmp 0x413093
  4130a9:	add    al,BYTE PTR [esi-0x68129617]
  4130af:	fwait
  4130b0:	in     al,dx
  4130b1:	inc    esp
  4130b2:	pop    ebp
  4130b3:	sub    ebx,DWORD PTR [ecx]
  4130b5:	and    DWORD PTR ds:0x36accd66,esi
  4130bb:	rcl    BYTE PTR [esi-0x2e],1
  4130be:	dec    eax
  4130bf:	js     0x4130d3
  4130c1:	repz xchg ebx,eax
  4130c3:	lds    esi,FWORD PTR [ebp-0xf]
  4130c6:	pop    es
  4130c7:	push   ecx
  4130c8:	sub    eax,DWORD PTR [ebx-0x4a]
  4130cb:	dec    eax
  4130cc:	sub    BYTE PTR [ebp+0x76aee3c4],bh
  4130d2:	mov    esp,0x98a6a73c
  4130d7:	stos   BYTE PTR es:[edi],al
  4130d8:	gs xchg ebx,eax
  4130da:	push   ds
  4130db:	jbe    0x413148
  4130dd:	add    DWORD PTR [esi],0xffffffb5
  4130e0:	and    eax,0x78872e6b
  4130e5:	add    ah,ah
  4130e7:	std    
  4130e8:	popa   
  4130e9:	pop    es
  4130ea:	mov    cl,BYTE PTR [ebx-0x6f74f027]
  4130f0:	sar    DWORD PTR [ecx-0x4d],cl
  4130f3:	push   esi
  4130f4:	data16 fcom st(1)
  4130f7:	push   eax
  4130f8:	jmp    0xa6e45315
  4130fd:	rcl    esi,1
  4130ff:	ins    DWORD PTR es:[edi],dx
  413100:	mov    ebp,0x1bf461dc
  413105:	ds out dx,al
  413107:	pop    edx
  413108:	adc    eax,0xfddcff99
  41310d:	inc    ebx
  41310e:	add    BYTE PTR [esi],cl
  413110:	fsubr  QWORD PTR [ecx+0x2a10f75b]
  413116:	sub    BYTE PTR [edi-0x3c1375aa],ch
  41311c:	dec    ebx
  41311d:	cmp    al,0xcb
  41311f:	(bad)  
  413121:	out    0x18,eax
  413123:	mov    cs,WORD PTR [edi+0x6415fb71]
  413129:	jmp    0x4130e5
  41312b:	test   al,0xe0
  41312d:	adc    al,0xde
  41312f:	rol    BYTE PTR [esp+ebx*4-0x5d],1
  413133:	cmp    ebp,DWORD PTR [edi+0xbadf655]
  413139:	popa   
  41313a:	aas    
  41313b:	mov    DWORD PTR fs:[esi],esp
  41313e:	or     al,0x76
  413140:	sar    BYTE PTR [eax],1
  413142:	dec    ebp
  413143:	shr    DWORD PTR [ecx-0x61],1
  413146:	and    ecx,DWORD PTR [ebx-0x6f]
  413149:	cmp    BYTE PTR [ecx-0x72],dl
  41314c:	and    eax,0xf583445a
  413151:	jmp    0x413189
  413153:	sbb    eax,0x4c6ce245
  413158:	(bad)  
  413159:	mov    ds:0x30662d2f,eax
  41315e:	nop
  41315f:	daa    
  413160:	ja     0x41316b
  413162:	add    DWORD PTR ds:0x722b,esi
  413167:	mov    edi,0xbc548a2c
  41316c:	mov    BYTE PTR ds:[ecx],dh
  41316f:	das    
  413170:	scas   eax,DWORD PTR es:[edi]
  413171:	lods   al,BYTE PTR ds:[esi]
  413172:	mov    ecx,0xdbc429ad
  413177:	scas   eax,DWORD PTR es:[edi]
  413178:	xchg   edx,eax
  413179:	add    eax,0x77c9243f
  41317e:	push   ebp
  41317f:	je     0x413106
  413181:	les    edi,FWORD PTR [esi]
  413183:	sbb    eax,0xa8730d70
  413188:	retf   
  413189:	mov    edi,0xbbb3c749
  41318e:	cmp    dh,bh
  413190:	shl    BYTE PTR [ebx-0x5e042c64],0xde
  413197:	out    dx,eax
  413198:	out    dx,eax
  413199:	retf   0xb3b0
  41319c:	push   ds
  41319d:	sub    eax,0xfbecf2bc
  4131a2:	popa   
  4131a3:	ret    0x30c6
  4131a6:	xchg   ebx,eax
  4131a7:	inc    edi
  4131a8:	loop   0x4131d7
  4131aa:	rcr    ebx,1
  4131ac:	inc    eax
  4131ad:	jg     0x4131f8
  4131af:	xor    al,0xb
  4131b1:	inc    ebp
  4131b2:	in     eax,0xbb
  4131b4:	(bad)  
  4131b5:	ss dec esp
  4131b7:	out    0x7c,al
  4131b9:	into   
  4131ba:	mov    eax,0x1ef6ca2a
  4131bf:	push   edi
  4131c0:	loop   0x41321e
  4131c2:	xchg   BYTE PTR es:[ebp-0x40],al
  4131c6:	sbb    bh,ch
  4131c8:	mov    WORD PTR [ebp+0x39],ds
  4131cb:	sub    DWORD PTR [ebx+ecx*2+0x25f2bed5],edx
  4131d2:	add    ecx,edi
  4131d4:	mov    dh,BYTE PTR [ecx-0x66340743]
  4131da:	sbb    edx,ebx
  4131dc:	outs   dx,BYTE PTR ds:[esi]
  4131dd:	std    
  4131de:	jae    0x413163
  4131e0:	ins    BYTE PTR es:[edi],dx
  4131e1:	es mov dh,0x5e
  4131e4:	or     ecx,DWORD PTR fs:[ebp-0x78]
  4131e8:	xchg   DWORD PTR [ebp-0xb70188e],ecx
  4131ee:	imul   eax,DWORD PTR [edi-0x3f4ca9dc],0x2224bc9
  4131f8:	test   al,0x57
  4131fa:	jle    0x413241
  4131fc:	lahf   
  4131fd:	jae    0x41319c
  4131ff:	mov    ch,BYTE PTR [edi]
  413201:	les    ebp,FWORD PTR [edx]
  413203:	dec    ebx
  413204:	mov    ds:0x17cff272,al
  413209:	push   esi
  41320a:	mov    ebp,cs
  41320c:	into   
  41320d:	rcl    BYTE PTR [eax+ecx*4+0x2d0c0560],0x3
  413215:	stos   BYTE PTR es:[edi],al
  413216:	mov    al,0xb9
  413218:	xchg   ecx,eax
  413219:	push   0xc91ec404
  41321e:	imul   esi,DWORD PTR [ebp-0x61],0xffffffdf
  413222:	(bad)  
  413223:	jmp    DWORD PTR [ecx-0x4b]
  413226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413228:	sub    BYTE PTR [ebx+0x4e],ah
  41322b:	sub    BYTE PTR [edx],bl
  41322d:	popf   
  41322e:	add    al,0x7
  413230:	neg    eax
  413232:	nop
  413233:	lock inc eax
  413235:	mov    edi,0xc22fcb58
  41323a:	in     al,0xa4
  41323c:	outs   dx,DWORD PTR ds:[esi]
  41323d:	ficom  DWORD PTR [edx+0x52]
  413240:	(bad)  
  413242:	mov    eax,ds:0x4e4b7f31
  413247:	fnstcw WORD PTR [esp+ebp*1]
  41324a:	jne    0x413276
  41324c:	ja     0x413275
  41324e:	test   eax,0x5e257a12
  413253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413254:	and    ebx,esi
  413256:	neg    BYTE PTR [edi-0x20421b15]
  41325c:	lods   al,BYTE PTR ds:[esi]
  41325d:	outs   dx,BYTE PTR ds:[esi]
  41325e:	pop    ecx
  41325f:	scas   al,BYTE PTR es:[edi]
  413260:	jle    0x41321b
  413262:	clc    
  413263:	mov    ah,0xb2
  413265:	test   BYTE PTR ds:0x56cfea7b,cl
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	loope  0x413240
  41326e:	cld    
  41326f:	and    al,0xba
  413271:	and    al,0x5
  413273:	mov    esi,DWORD PTR [edx+eax*4+0x267148bb]
  41327a:	and    cl,BYTE PTR [esi-0x48c4eaa4]
  413280:	xchg   esi,eax
  413281:	jo     0x413278
  413283:	adc    DWORD PTR [edx],edx
  413285:	xchg   DWORD PTR [eax],esi
  413287:	mov    cl,0xc4
  413289:	jge    0x41323e
  41328b:	pushf  
  41328c:	push   0x1e
  41328e:	inc    esi
  41328f:	lock sahf 
  413291:	sar    DWORD PTR [esi-0x80],cl
  413294:	jns    0x413253
  413296:	xchg   edi,eax
  413297:	imul   BYTE PTR [ecx]
  413299:	daa    
  41329a:	fstp   QWORD PTR [edi+0x6f]
  41329d:	xlat   BYTE PTR ds:[ebx]
  41329e:	fld    TBYTE PTR [edx-0x29]
  4132a1:	jle    0x413248
  4132a3:	dec    ebp
  4132a4:	imul   eax,DWORD PTR [ebp+0x3437aebc],0x66
  4132ab:	jne    0x4132cb
  4132ad:	pushf  
  4132ae:	add    DWORD PTR [edi-0x1bc3a2e9],ecx
  4132b4:	(bad)  
  4132b6:	sbb    al,BYTE PTR [ecx]
  4132b8:	inc    esi
  4132b9:	pop    esi
  4132ba:	test   al,0xdb
  4132bc:	or     edi,DWORD PTR [edi]
  4132be:	pop    esi
  4132bf:	es ds pop ecx
  4132c2:	fistp  DWORD PTR [eax+eiz*4+0x6e7bc71a]
  4132c9:	push   edi
  4132ca:	(bad)  
  4132cb:	aam    0xa6
  4132cd:	ror    BYTE PTR [edi+0x4d31412c],0xda
  4132d4:	sub    dl,BYTE PTR [ebx+0x4881d73c]
  4132da:	mov    al,ds:0x89a0d0e2
  4132df:	jmp    0x4132f1
  4132e1:	or     BYTE PTR [ebx-0x78],ah
  4132e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132e5:	out    0xb,eax
  4132e7:	data16 mov ds:0xffe11cb2,al
  4132ed:	std    
  4132ee:	arpl   WORD PTR [ecx+0x1d197e4],bp
  4132f4:	imul   eax,DWORD PTR [eax],0xb07aff69
  4132fa:	and    eax,0x26bee281
  4132ff:	ret    
  413300:	mov    ecx,0xaa308b91
  413305:	lds    ebp,FWORD PTR [ebp+0x334aaf8]
  41330b:	sti    
  41330c:	sbb    dl,cl
  41330e:	dec    edx
  41330f:	fcmovnbe st,st(2)
  413311:	into   
  413312:	(bad)  [eax]
  413314:	add    esp,DWORD PTR [ebp-0x54]
  413317:	ror    DWORD PTR [ebx+0x6f],1
  41331a:	out    dx,al
  41331b:	js     0x413304
  41331d:	sbb    cl,ah
  41331f:	xchg   ecx,eax
  413320:	pop    ecx
  413321:	(bad)  
  413322:	sbb    ah,cl
  413324:	(bad)  
  413325:	retf   0xcffb
  413328:	mov    ecx,0x92124b23
  41332d:	fs pop esi
  41332f:	sbb    cl,BYTE PTR [ebp+eiz*8-0x715f1a58]
  413336:	call   0xe2d7:0x63469ca5
  41333d:	push   ss
  41333e:	mov    al,0x8c
  413340:	es das 
  413342:	pop    ss
  413343:	js     0x413398
  413345:	xor    eax,0x6663595c
  41334a:	ror    DWORD PTR [esi],cl
  41334c:	cwde   
  41334d:	ds inc ecx
  41334f:	xchg   ebp,eax
  413350:	punpckldq mm6,DWORD PTR [edx-0x6]
  413354:	mov    al,ds:0xbd792c3a
  413359:	dec    edi
  41335a:	jnp    0x4133c9
  41335c:	jbe    0x4132e0
  41335e:	imul   edi,DWORD PTR ds:0x53651350,0xd
  413365:	mov    ebx,0x8c7e06d
  41336a:	xchg   esp,eax
  41336b:	fsub   st(0),st
  41336d:	jnp    0x413376
  41336f:	pop    esi
  413370:	and    ebp,DWORD PTR es:[ecx+esi*1]
  413374:	stos   DWORD PTR es:[edi],eax
  413375:	lods   eax,DWORD PTR ds:[esi]
  413376:	sbb    al,0xa3
  413378:	push   esp
  413379:	imul   ebp,DWORD PTR [edx-0x77bd3847],0xffffffc2
  413380:	cwde   
  413381:	mov    bh,0xd5
  413383:	hlt    
  413384:	call   0x7536:0xaf326e2f
  41338b:	daa    
  41338c:	outs   dx,DWORD PTR ds:[esi]
  41338d:	push   ebp
  41338e:	sbb    al,0xce
  413390:	push   ds
  413391:	jnp    0x4133d7
  413393:	in     eax,dx
  413394:	daa    
  413395:	imul   edx,DWORD PTR [esi+edx*8-0x41],0xe422546d
  41339d:	xor    DWORD PTR [esi],ebx
  41339f:	rcr    DWORD PTR [edi+edi*2+0x6797d07a],1
  4133a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a7:	(bad)  
  4133a8:	sbb    ah,ah
  4133aa:	xor    dh,ah
  4133ac:	jp     0x4133f8
  4133ae:	ins    DWORD PTR es:[edi],dx
  4133af:	into   
  4133b0:	data16 (bad) 
  4133b2:	inc    BYTE PTR [ecx]
  4133b4:	neg    BYTE PTR [edi-0x25d185d7]
  4133ba:	clc    
  4133bb:	mov    ah,0x1
  4133bd:	(bad)  
  4133be:	out    dx,eax
  4133bf:	jnp    0x413383
  4133c1:	jbe    0x413398
  4133c3:	and    eax,0xd5c2e65a
  4133c8:	adc    eax,0xf5211eb4
  4133cd:	jae    0x41337f
  4133cf:	cmp    al,0xed
  4133d1:	push   ss
  4133d2:	pop    ebp
  4133d3:	xor    eax,0xbfaadd21
  4133d8:	inc    ecx
  4133d9:	xchg   edx,eax
  4133da:	xor    cl,dl
  4133dc:	retf   
  4133dd:	add    ebp,DWORD PTR [esi+0x7b]
  4133e0:	bnd jg 0x4133ac
  4133e3:	mov    bl,0x3b
  4133e5:	inc    ebp
  4133e6:	xchg   BYTE PTR [ebx+0x3a2af549],ch
  4133ec:	push   ebx
  4133ed:	push   esi
  4133ee:	push   ds
  4133ef:	jecxz  0x413381
  4133f1:	pop    ebp
  4133f2:	test   eax,0x8b97b3ad
  4133f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f8:	pushf  
  4133f9:	pop    ecx
  4133fa:	xchg   edx,eax
  4133fb:	jp     0x41342e
  4133fd:	mov    edi,0x43d955f9
  413402:	fstp   QWORD PTR [edi]
  413404:	stc    
  413405:	jne    0x413421
  413407:	pushf  
  413408:	fld    DWORD PTR ds:0x44c1662b
  41340e:	das    
  41340f:	xchg   ecx,eax
  413410:	and    al,0xb0
  413412:	icebp  
  413413:	add    DWORD PTR [ecx*8-0x525f62a3],ecx
  41341a:	xor    bh,BYTE PTR [ecx+0x74d7b0b]
  413420:	jne    0x4133e6
  413422:	ja     0x4133a6
  413424:	sahf   
  413425:	je     0x4133d1
  413427:	icebp  
  413428:	mov    eax,ds:0x47b0a866
  41342d:	xchg   ebx,eax
  41342e:	sbb    bl,BYTE PTR [esi-0x79]
  413431:	push   edx
  413432:	push   ds
  413433:	test   eax,0xf98b1f15
  413438:	popa   
  413439:	pushf  
  41343a:	pop    es
  41343b:	inc    edx
  41343c:	nop
  41343d:	sar    DWORD PTR [esp+ebx*4+0x63],0xdd
  413442:	std    
  413443:	sub    al,0x79
  413445:	test   BYTE PTR [edi+edi*8+0x41],bh
  413449:	mov    eax,ds:0xa273361e
  41344e:	retf   
  41344f:	nop
  413450:	pop    ss
  413451:	and    ah,BYTE PTR [ecx]
  413453:	jp     0x4134c6
  413455:	pop    ss
  413456:	maskmovq mm7,(bad)
  413457:	idiv   DWORD PTR [ebx]
  413459:	test   al,bh
  41345b:	stc    
  41345c:	dec    ebx
  41345d:	sar    DWORD PTR [ebp-0x5c40bf67],1
  413463:	iret   
  413464:	or     BYTE PTR [edi],al
  413466:	sub    al,0xe3
  413468:	fwait
  413469:	(bad)  
  41346a:	in     eax,dx
  41346b:	or     BYTE PTR ds:0xcdab8c9d,0x4f
  413472:	cmp    al,BYTE PTR [esi+0x77da04c4]
  413478:	jne    0x4134e0
  41347a:	mov    dh,0xc8
  41347c:	inc    edx
  41347d:	mov    edx,0x488578e4
  413482:	(bad)  
  413483:	mov    eax,0x811d3fca
  413488:	lds    esi,FWORD PTR [eax-0x1d]
  41348b:	sbb    esp,eax
  41348d:	and    eax,0xe1364f77
  413492:	pop    esi
  413493:	cmp    esi,ecx
  413495:	das    
  413496:	mov    ebx,0x1952d7c1
  41349b:	and    eax,0x83c7ed75
  4134a0:	loop   0x41347b
  4134a2:	sbb    DWORD PTR [ecx],ecx
  4134a4:	inc    ebp
  4134a5:	lock outs dx,BYTE PTR ds:[esi]
  4134a7:	sti    
  4134a8:	in     eax,dx
  4134a9:	xor    al,0x1c
  4134ab:	or     edi,DWORD PTR [edx]
  4134ad:	and    bl,al
  4134af:	jo     0x4134ed
  4134b1:	mov    edx,0xc9d9763f
  4134b6:	clc    
  4134b7:	(bad)  
  4134b8:	stos   BYTE PTR es:[edi],al
  4134b9:	xor    eax,0xbb2bee37
  4134be:	mov    ecx,0x349dceb4
  4134c3:	pop    esi
  4134c4:	ds mov ch,0x94
  4134c7:	inc    esi
  4134c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c9:	enter  0x3c0c,0xee
  4134cd:	add    ebx,DWORD PTR [ebp-0x3a5fc46e]
  4134d3:	sar    DWORD PTR [eax-0x73],1
  4134d6:	xchg   esp,eax
  4134d7:	aad    0x30
  4134d9:	imul   ebp,DWORD PTR [esi],0xcfdf1fd3
  4134df:	mov    edx,0xb08e7750
  4134e4:	adc    eax,0x63bccc4d
  4134e9:	stc    
  4134ea:	in     al,dx
  4134eb:	jne    0x41353d
  4134ed:	or     edx,edi
  4134ef:	push   ds
  4134f0:	ds inc edx
  4134f2:	or     al,0xea
  4134f4:	ret    0x5c9c
  4134f7:	test   al,0x6f
  4134f9:	call   0x4f06404b
  4134fe:	xlat   BYTE PTR ds:[ebx]
  4134ff:	into   
  413500:	icebp  
  413501:	cs mov cl,0xcb
  413504:	retf   
  413505:	sbb    eax,ebp
  413507:	adc    al,0x68
  413509:	mov    ds:0x4dc2dfa2,al
  41350e:	dec    edx
  41350f:	push   ebp
  413510:	add    ah,cl
  413512:	cmc    
  413513:	inc    esp
  413514:	enter  0xf8f5,0xc7
  413518:	mov    al,0x9e
  41351a:	xor    BYTE PTR ds:0xd158e135,ah
  413520:	sub    al,0xcc
  413522:	and    edi,esp
  413524:	in     al,dx
  413525:	and    al,0x37
  413527:	fsubr  st,st(3)
  413529:	add    BYTE PTR [esi-0x7a],ch
  41352c:	div    DWORD PTR [edi]
  41352e:	in     al,0x88
  413530:	jp     0x413528
  413532:	cdq    
  413533:	rcr    BYTE PTR [edx-0x5],cl
  413536:	push   eax
  413537:	mov    ds:0x7a58eca7,eax
  41353c:	iret   
  41353d:	pop    esi
  41353e:	mov    WORD PTR [edx-0x3c043f22],ss
  413544:	push   edx
  413545:	icebp  
  413546:	mov    edi,ecx
  413548:	les    edi,FWORD PTR [ecx-0x729141b0]
  41354e:	sbb    al,0xaa
  413550:	fistp  QWORD PTR [esi-0x4e]
  413553:	add    ebp,DWORD PTR [eax]
  413555:	lahf   
  413556:	sahf   
  413557:	int    0x48
  413559:	or     bh,BYTE PTR [esi-0x1a091d37]
  41355f:	add    eax,0xf09cc5ab
  413564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413565:	enter  0x73f0,0x22
  413569:	cmp    BYTE PTR [edi+0x56dc0d84],bl
  41356f:	stos   BYTE PTR es:[edi],al
  413570:	je     0x413519
  413572:	pop    edi
  413573:	test   BYTE PTR [ebp+0x5e25acb0],al
  413579:	ret    0x1ab
  41357c:	mov    edi,0xe01899b2
  413581:	std    
  413582:	xchg   edi,eax
  413583:	retf   0x799a
  413586:	jns    0x413536
  413588:	in     eax,0xa4
  41358a:	lds    ebx,FWORD PTR [edi+eiz*2]
  41358d:	mov    DWORD PTR [ebp+ebp*4+0x2dbb8ea2],0x7a067a9f
  413598:	mov    ebp,0x2138ab74
  41359d:	push   cs
  41359e:	rcr    BYTE PTR [edx],1
  4135a0:	mov    ebx,0xf7d4c18d
  4135a5:	(bad)  
  4135a7:	push   eax
  4135a8:	(bad)  
  4135a9:	test   eax,0x6519a5ae
  4135ae:	cmp    ebx,edx
  4135b0:	mov    eax,ds:0x5540407a
  4135b5:	adc    DWORD PTR [ecx],0xffffffd4
  4135b8:	and    BYTE PTR [edx],ch
  4135ba:	pushf  
  4135bb:	das    
  4135bc:	repnz cli 
  4135be:	push   ecx
  4135bf:	dec    eax
  4135c0:	ror    BYTE PTR [esi+0x585dbae3],0x13
  4135c7:	dec    ecx
  4135c8:	push   esi
  4135c9:	and    al,0xba
  4135cb:	fdivp  st(0),st
  4135cd:	xor    esi,ecx
  4135cf:	and    eax,0x50e4e969
  4135d4:	jns    0x4135b1
  4135d6:	xchg   edx,eax
  4135d7:	adc    edi,edx
  4135d9:	vmread eax,eax
  4135dc:	in     al,0xaa
  4135de:	cmp    ebx,esp
  4135e0:	jecxz  0x4135fa
  4135e2:	push   edx
  4135e3:	pop    esi
  4135e4:	pop    es
  4135e5:	ret    
  4135e6:	gs push 0x61
  4135e9:	bound  ecx,QWORD PTR ds:0xc8805847
  4135ef:	dec    ebx
  4135f0:	xchg   esp,eax
  4135f1:	xchg   edi,eax
  4135f2:	enter  0xdbc7,0xb
  4135f6:	cmp    al,0x7c
  4135f8:	sbb    eax,0xfda251ac
  4135fd:	int    0x7e
  4135ff:	jp     0x4135f5
  413601:	mov    ebp,0x5b126c31
  413606:	xchg   esi,eax
  413607:	dec    esi
  413608:	mov    ecx,0x53a63e91
  41360d:	leave  
  41360e:	leave  
  41360f:	cmp    DWORD PTR [eax+0x10],eax
  413612:	mov    ebp,0xde1bfb07
  413617:	sbb    eax,0x42c0f50b
  41361c:	outs   dx,BYTE PTR ds:[esi]
  41361d:	or     al,0xe0
  41361f:	inc    edx
  413620:	mov    DWORD PTR ds:0x8a4fadef,ecx
  413626:	jecxz  0x41368f
  413628:	sub    eax,0x8b70260
  41362d:	jp     0x4135c5
  41362f:	(bad)  
  413630:	push   edi
  413631:	mov    ch,0xc7
  413633:	call   0xb16df761
  413638:	repnz cli 
  41363a:	jb     0x413649
  41363c:	aad    0xa3
  41363e:	ret    
  41363f:	xor    eax,0xf527120d
  413644:	pop    ebx
  413645:	mov    dl,0x91
  413647:	fiadd  DWORD PTR [eax]
  413649:	sbb    eax,0x94f5ecde
  41364e:	retf   0x1447
  413651:	xchg   BYTE PTR cs:[esi-0x5207258c],cl
  413658:	pop    ss
  413659:	aam    0xd4
  41365b:	cwde   
  41365c:	das    
  41365d:	nop
  41365e:	sub    al,0x88
  413660:	xor    esi,DWORD PTR [ebx+0x41]
  413663:	sbb    ebp,DWORD PTR [eax+0x1c]
  413666:	and    edx,ebp
  413668:	push   edi
  413669:	pop    eax
  41366a:	adc    ecx,esp
  41366c:	xchg   BYTE PTR [ebx-0x5a],ch
  41366f:	jmp    0xdbe2:0x600d0af3
  413676:	push   esp
  413677:	js     0x41363d
  413679:	lock dec ebx
  41367b:	xor    al,0x3c
  41367d:	shl    DWORD PTR [edx],0x5e
  413680:	mov    bl,0x4d
  413682:	ror    esi,1
  413684:	clc    
  413685:	sub    al,0xd
  413687:	and    eax,0xdd521c5
  41368c:	mov    DWORD PTR [eax-0x27],ecx
  41368f:	pop    es
  413690:	iret   
  413691:	mov    al,ds:0x7b5af902
  413696:	arpl   WORD PTR [eax+0x7d],dx
  413699:	pop    ebp
  41369a:	inc    esi
  41369b:	jge    0x41363a
  41369d:	pop    ds
  41369e:	inc    esi
  41369f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a0:	test   BYTE PTR [edx],ch
  4136a2:	popf   
  4136a3:	(bad)  
  4136a4:	call   0x84a4:0x6ae74b82
  4136ab:	out    0x7a,al
  4136ad:	aam    0xe8
  4136af:	mov    es,ebx
  4136b1:	dec    edi
  4136b2:	sahf   
  4136b3:	mov    ebx,0x809cae60
  4136b8:	popf   
  4136b9:	pop    ss
  4136ba:	or     BYTE PTR [ebx+eax*1+0x4cd0107b],al
  4136c1:	sbb    BYTE PTR [esi+0x8fa2370],dh
  4136c7:	pusha  
  4136c8:	adc    eax,0xf9e24415
  4136cd:	in     al,0xb9
  4136cf:	cmp    ah,BYTE PTR [eax+0x1d45aec7]
  4136d5:	hlt    
  4136d6:	mov    eax,0xf634449c
  4136db:	add    BYTE PTR [eax+0x4364b38d],dh
  4136e1:	out    dx,al
  4136e2:	pop    esp
  4136e3:	dec    esp
  4136e4:	inc    ebp
  4136e5:	pop    esi
  4136e6:	shl    cl,0x26
  4136e9:	xor    al,0x3e
  4136eb:	pop    ss
  4136ec:	push   esi
  4136ed:	inc    esp
  4136ee:	push   ecx
  4136ef:	jne    0x413684
  4136f1:	loop   0x413678
  4136f3:	jb     0x413712
  4136f5:	std    
  4136f6:	sub    BYTE PTR [edi+0x5974f79b],al
  4136fc:	cwde   
  4136fd:	cmc    
  4136fe:	mov    ds:0x1c15aa51,eax
  413703:	or     bh,dh
  413705:	push   ss
  413706:	sbb    DWORD PTR [edi-0x733b3bc1],ebx
  41370c:	cmp    dh,BYTE PTR [edx]
  41370e:	sub    BYTE PTR [edx],bh
  413710:	xchg   BYTE PTR [ebx+0x2a],dh
  413713:	sahf   
  413714:	inc    esp
  413715:	xchg   edi,eax
  413716:	or     esp,ebp
  413718:	frstor [ebp-0x606b8cc2]
  41371e:	adc    BYTE PTR [esi+0x76],dl
  413721:	sbb    al,0x93
  413723:	push   es
  413724:	scas   eax,DWORD PTR es:[edi]
  413725:	xchg   ecx,eax
  413726:	lods   al,BYTE PTR ds:[esi]
  413727:	retf   0x9de7
  41372a:	sbb    ebp,eax
  41372c:	jl     0x41374f
  41372e:	xlat   BYTE PTR ds:[ebx]
  41372f:	(bad)  
  413730:	and    eax,0xa007cfab
  413735:	or     eax,0x4d54003d
  41373a:	dec    eax
  41373b:	dec    esi
  41373c:	inc    esp
  41373d:	sbb    al,0xe6
  41373f:	lds    ebx,FWORD PTR ds:0x280c2b78
  413745:	cmp    eax,0x6c0c6ebd
  41374a:	mov    bh,0x63
  41374c:	pop    ds
  41374d:	sbb    BYTE PTR [eax],bh
  41374f:	imul   esi,DWORD PTR [edx-0x1dd770f],0x790f3329
  413759:	rcr    DWORD PTR [ebx-0x2e],0xa2
  41375d:	ss out 0x95,al
  413760:	sbb    BYTE PTR [eax+0xb],al
  413763:	rcr    dl,cl
  413765:	mov    esi,0x76a99dfe
  41376a:	adc    dh,BYTE PTR [esi]
  41376c:	pop    edi
  41376d:	adc    eax,DWORD PTR [ecx-0x53f1932e]
  413773:	arpl   WORD PTR [ecx],cx
  413775:	cmp    esi,DWORD PTR [ebx]
  413777:	in     eax,0x5e
  413779:	or     dl,BYTE PTR [eax]
  41377b:	vrsqrtps xmm6,XMMWORD PTR [ecx+0x1a]
  413780:	adc    dh,BYTE PTR [ebp-0xf]
  413783:	inc    edx
  413784:	add    dl,BYTE PTR [esi+0x601ddcc0]
  41378a:	dec    ebp
  41378b:	stos   DWORD PTR es:[edi],eax
  41378c:	stc    
  41378d:	dec    ecx
  41378e:	mov    bl,0xad
  413790:	sti    
  413791:	pushf  
  413792:	sub    BYTE PTR [esi-0x128013bc],dh
  413798:	clc    
  413799:	clc    
  41379a:	lea    edi,[ebp+0x7e3ce2cd]
  4137a0:	mov    ds:0xf1e388f9,eax
  4137a5:	aam    0x30
  4137a7:	dec    si
  4137a9:	idiv   BYTE PTR [edi+0x75fe4934]
  4137af:	jge    0x413749
  4137b1:	call   0xd8b9:0x99bc79ad
  4137b8:	and    cl,BYTE PTR [eax-0x7f]
  4137bb:	test   al,0x29
  4137bd:	test   DWORD PTR [edi+0x1722eb86],ecx
  4137c3:	sub    edx,edx
  4137c5:	add    eax,DWORD PTR [ebp+0x71]
  4137c8:	cli    
  4137c9:	sbb    BYTE PTR [edx+edi*1-0x4031a34a],bh
  4137d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d1:	dec    ecx
  4137d2:	xchg   esi,eax
  4137d3:	in     al,dx
  4137d4:	pop    ebx
  4137d5:	retf   
  4137d6:	call   0x65af:0xd34d5f03
  4137dd:	aam    0x21
  4137df:	inc    edx
  4137e0:	add    eax,DWORD PTR [edx-0x42317e84]
  4137e6:	sub    eax,0x95ff8124
  4137eb:	repz das 
  4137ed:	popa   
  4137ee:	shl    BYTE PTR [eax-0x72],0xd7
  4137f2:	fild   QWORD PTR [ebp-0x1f8b7cd8]
  4137f8:	dec    edi
  4137f9:	mov    BYTE PTR [esp+edx*2],dl
  4137fc:	xchg   BYTE PTR [edi],ch
  4137fe:	ret    0x64dd
  413801:	(bad)  
  413802:	cmp    eax,edi
  413804:	daa    
  413805:	pop    eax
  413806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413807:	aas    
  413808:	dec    ecx
  413809:	dec    eax
  41380a:	ror    DWORD PTR [ebx],0x29
  41380d:	mov    bh,0xde
  41380f:	in     eax,0x12
  413811:	and    cl,ch
  413813:	add    DWORD PTR [edi+ebx*2+0x11],ecx
  413817:	lods   al,BYTE PTR ds:[esi]
  413818:	and    eax,0xfbdb1d39
  41381d:	cmp    ebp,0x46
  413820:	nop
  413821:	pop    esi
  413822:	xor    DWORD PTR [ebp+0xc],edx
  413825:	out    dx,eax
  413826:	push   cs
  413827:	mov    cl,0x5a
  413829:	jb     0x41383b
  41382b:	adc    al,0x7f
  41382d:	xchg   DWORD PTR [edx],esp
  41382f:	aad    0xca
  413831:	or     al,BYTE PTR [ebx]
  413833:	mov    BYTE PTR [ebx-0x7bf97454],ch
  413839:	not    ch
  41383b:	scas   eax,DWORD PTR es:[edi]
  41383c:	push   ebp
  41383d:	inc    esp
  41383e:	pushf  
  41383f:	sbb    edi,edx
  413841:	pushf  
  413842:	je     0x413880
  413844:	mov    bh,0x8a
  413846:	aam    0x70
  413848:	neg    DWORD PTR [edx+0x17]
  41384b:	dec    esp
  41384c:	test   DWORD PTR [di],0x515d8088
  413853:	jecxz  0x413884
  413855:	imul   edx,DWORD PTR [ebx-0x129d1873],0xfffffff9
  41385c:	inc    esi
  41385d:	xchg   esi,eax
  41385e:	mov    edi,0x4ff39f2d
  413863:	xor    esi,edi
  413865:	lea    ebx,[ebp+0x3c723139]
  41386b:	pop    eax
  41386c:	mov    ds:0xc48f9a5e,al
  413871:	or     BYTE PTR [edi],0x26
  413874:	faddp  st(3),st
  413876:	inc    edx
  413877:	dec    ecx
  413878:	aam    0x34
  41387a:	mov    al,ds:0xfa6e6578
  41387f:	cmp    DWORD PTR [ebx],0x32f1de08
  413885:	out    0x39,eax
  413887:	jmp    0x4138e6
  413889:	add    DWORD PTR [edi],eax
  41388b:	jecxz  0x4138fc
  41388d:	out    0x5b,al
  41388f:	cmp    ch,dh
  413891:	(bad)  
  413892:	xlat   BYTE PTR ds:[ebx]
  413893:	and    al,0xaf
  413895:	je     0x41383d
  413897:	(bad)  
  413899:	and    BYTE PTR [ebx],0x9b
  41389c:	push   edi
  41389d:	jmp    0xa178a4e5
  4138a2:	xchg   edi,eax
  4138a3:	outs   dx,BYTE PTR ds:[esi]
  4138a4:	sub    al,0xcb
  4138a6:	in     al,0x22
  4138a8:	or     BYTE PTR [esi+0x342b288b],0xa3
  4138af:	jp     0x41384e
  4138b1:	xchg   DWORD PTR [edi-0x41],ebp
  4138b4:	xor    al,0xaa
  4138b6:	call   FWORD PTR [edi-0x9fa4e3b]
  4138bc:	test   DWORD PTR [ebp+0x1f],0xcf310bb9
  4138c3:	jmp    0x33bbe1ac
  4138c8:	fst    DWORD PTR [esi+eiz*4]
  4138cb:	inc    esp
  4138cc:	jb     0x41392b
  4138ce:	(bad)  
  4138d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d1:	xor    dh,cl
  4138d3:	xor    eax,0xa2c6cbba
  4138d8:	xor    BYTE PTR ds:0x7299a3f9,ch
  4138de:	inc    ecx
  4138df:	(bad)  
  4138e1:	push   esp
  4138e2:	push   ebp
  4138e3:	das    
  4138e4:	rcr    bh,cl
  4138e6:	popf   
  4138e7:	ret    
  4138e8:	(bad)
  4138ec:	cmp    BYTE PTR [ebp+0x4f7fea4f],0xce
  4138f3:	ret    
  4138f4:	cmp    al,0x4c
  4138f6:	jecxz  0x41392c
  4138f8:	cmp    al,0xf8
  4138fa:	ret    
  4138fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138fc:	popa   
  4138fd:	jmp    0xa5e9:0x2ac09364
  413904:	iret   
  413905:	pusha  
  413906:	mov    ds:0xee5e47ce,al
  41390b:	dec    ebx
  41390c:	stos   BYTE PTR es:[edi],al
  41390d:	pop    ss
  41390e:	popa   
  41390f:	mov    ss,ebp
  413911:	mov    ecx,0x2f76be8d
  413916:	aas    
  413917:	(bad)  
  413918:	adc    BYTE PTR [edi-0x30],ah
  41391b:	(bad)  
  41391c:	loope  0x4138ef
  41391e:	mov    ah,0x43
  413920:	mov    bl,0xd6
  413922:	int3   
  413923:	test   al,0xd6
  413925:	sub    DWORD PTR [ebx],ebp
  413927:	scas   eax,DWORD PTR es:[edi]
  413928:	jmp    0xa8cb5b9c
  41392d:	imul   edx,DWORD PTR [ebx+0x384cb890],0xc501552a
  413937:	inc    ecx
  413938:	imul   edx,edx,0xffffffb5
  41393b:	loope  0x4139af
  41393d:	xor    DWORD PTR [eax+ebp*1+0x6a94a3d5],ecx
  413944:	sbb    bl,bh
  413946:	outs   dx,BYTE PTR ds:[esi]
  413947:	cmp    ebp,edi
  413949:	mov    cl,0x32
  41394b:	mov    ebp,0xbb287470
  413950:	mov    edi,0x981c0d
  413955:	imul   esp,DWORD PTR [eax+esi*1],0xd78b6005
  41395c:	lock cmc 
  41395e:	daa    
  41395f:	dec    esi
  413960:	aad    0x38
  413962:	test   DWORD PTR [edx-0x70],ecx
  413965:	mov    dh,BYTE PTR [edx+0xe]
  413968:	xchg   BYTE PTR [edx],bh
  41396a:	fwait
  41396b:	cmp    al,0x10
  41396d:	sbb    DWORD PTR [ecx+0x6f695f3c],0x6b
  413974:	pusha  
  413975:	inc    esp
  413976:	enter  0x8ed5,0xf8
  41397a:	stos   DWORD PTR es:[edi],eax
  41397b:	cmp    al,0x7d
  41397d:	ja     0x41391e
  41397f:	mov    ss,WORD PTR [ecx+0x6e]
  413982:	pop    ebp
  413983:	sub    dl,BYTE PTR [edx-0x4c360f49]
  413989:	mov    ds:0x5ba1514d,al
  41398e:	pop    ebx
  41398f:	pop    ebp
  413990:	es mov esp,0x8cd1c339
  413996:	and    BYTE PTR [ecx],ch
  413998:	into   
  413999:	rol    dh,1
  41399b:	call   0xde83:0xc2125386
  4139a2:	add    bh,BYTE PTR ds:0xb1d4c9df
  4139a8:	(bad)  
  4139a9:	ja     0x413983
  4139ab:	mov    bl,0xa8
  4139ad:	cld    
  4139ae:	jno    0x413947
  4139b0:	push   esp
  4139b1:	xchg   edi,eax
  4139b2:	sub    BYTE PTR [edi],bh
  4139b4:	sbb    dh,ch
  4139b6:	sub    bl,BYTE PTR [ecx+0x7]
  4139b9:	or     DWORD PTR [eax-0x10],0x100e1ecc
  4139c0:	test   cl,bl
  4139c2:	movd   ebx,mm3
  4139c5:	mov    esi,0xffcc2a12
  4139ca:	add    ch,BYTE PTR [ebx+0x6c1596b8]
  4139d0:	jg     0x4139be
  4139d2:	out    dx,eax
  4139d3:	and    dh,BYTE PTR [esi+ecx*4-0xd]
  4139d7:	cdq    
  4139d8:	xor    edx,ebp
  4139da:	push   es
  4139db:	adc    ebp,0x17cb3b5c
  4139e1:	push   ebx
  4139e2:	mov    al,ds:0xf29a8023
  4139e7:	cwde   
  4139e8:	sbb    dh,ch
  4139ea:	mov    ds:0xf0206d67,al
  4139ef:	je     0x413a06
  4139f1:	fnop   
  4139f3:	adc    DWORD PTR [eax-0x22c9fd03],0x1a7fce54
  4139fd:	mov    ds:0x7322a721,eax
  413a02:	stc    
  413a03:	lock sub esp,ebp
  413a06:	push   0x32646dce
  413a0b:	mov    edx,ebp
  413a0d:	jp     0x413990
  413a0f:	ror    BYTE PTR [esp+eax*1-0x25],0xef
  413a14:	sahf   
  413a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a16:	div    DWORD PTR [edi+0x47]
  413a19:	dec    ebx
  413a1a:	repz adc al,0x1c
  413a1d:	shr    DWORD PTR ds:0xa5cdb245,cl
  413a23:	out    dx,al
  413a24:	add    bh,BYTE PTR [edi-0x7f]
  413a27:	pop    edi
  413a28:	xchg   ebp,eax
  413a29:	and    BYTE PTR [esp+ecx*2+0x69baead5],bh
  413a30:	sub    dh,BYTE PTR [eax-0x795e24e]
  413a36:	jmp    0x413a3a
  413a38:	jb     0x413ab7
  413a3a:	neg    eax
  413a3c:	sub    esi,ebx
  413a3e:	dec    edx
  413a3f:	test   al,0xf0
  413a41:	or     edi,esi
  413a43:	sbb    DWORD PTR [ebx+0x35],0xffffff9c
  413a47:	pop    ss
  413a48:	sub    al,0x6b
  413a4a:	xchg   ecx,eax
  413a4b:	je     0x7968e666
  413a51:	dec    ebp
  413a52:	mov    esi,ecx
  413a54:	pop    ebx
  413a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a56:	add    dh,dl
  413a58:	lds    ebx,FWORD PTR [edi+0x3b]
  413a5b:	ja     0x413a5d
  413a5d:	sub    DWORD PTR [eax+0x4fdfee9a],esp
  413a63:	adc    al,0x9d
  413a65:	test   eax,esi
  413a67:	dec    ebp
  413a68:	cwde   
  413a69:	daa    
  413a6a:	loope  0x413a90
  413a6c:	aas    
  413a6d:	scas   eax,DWORD PTR es:[edi]
  413a6e:	leave  
  413a6f:	js     0x413a6a
  413a71:	add    al,0xac
  413a73:	inc    edi
  413a74:	int    0xc9
  413a76:	test   eax,0xdf6eb59c
  413a7b:	jmp    0x50d2:0xcd35f68a
  413a82:	(bad)  
  413a83:	repz out 0x42,eax
  413a86:	mov    esi,0x2524f1c1
  413a8b:	int    0xf4
  413a8d:	mov    ah,0x40
  413a8f:	dec    esi
  413a90:	dec    ebx
  413a91:	popa   
  413a92:	push   esp
  413a93:	jp     0x413a55
  413a95:	mov    dh,0xbb
  413a97:	ret    
  413a98:	pop    ss
  413a99:	dec    edx
  413a9a:	ins    BYTE PTR es:[edi],dx
  413a9b:	fwait
  413a9c:	sbb    eax,0xcd7294da
  413aa1:	adc    al,0x2
  413aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa4:	cmc    
  413aa5:	pop    es
  413aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aa7:	ret    
  413aa8:	cmp    DWORD PTR [eax+0x5e3bf70a],0xca84b9ea
  413ab2:	push   edi
  413ab3:	inc    edi
  413ab4:	jb     0x413a60
  413ab6:	loopne 0x413ae7
  413ab8:	or     DWORD PTR fs:[ecx+0x1a4d61bc],ecx
  413abf:	or     dh,bl
  413ac1:	(bad)  
  413ac3:	mov    ch,0x72
  413ac5:	add    BYTE PTR [edx+0x55d2d77e],bh
  413acb:	scas   al,BYTE PTR es:[edi]
  413acc:	xor    BYTE PTR [ebp+edi*4+0x1dbfd764],ch
  413ad3:	adc    BYTE PTR [esi-0x2b88a7e],bh
  413ad9:	(bad)  
  413ada:	xchg   esp,eax
  413adb:	jecxz  0x413afe
  413add:	cli    
  413ade:	and    esp,DWORD PTR [ebx]
  413ae0:	mov    esi,0xac087f6b
  413ae5:	sbb    BYTE PTR [ecx+0x31],dh
  413ae8:	xchg   ebx,eax
  413ae9:	arpl   WORD PTR [edi+0x5f44d54b],bx
  413aef:	ins    BYTE PTR es:[edi],dx
  413af0:	mov    ebx,0x94d4c9d1
  413af5:	clc    
  413af6:	jno    0x413b65
  413af8:	mov    eax,ds:0xb8c0a58e
  413afd:	inc    edx
  413afe:	mov    al,0x26
  413b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b01:	jne    0x413b1d
  413b03:	dec    ecx
  413b04:	(bad)  
  413b05:	mul    eax
  413b07:	mov    ecx,0x57321344
  413b0c:	aas    
  413b0d:	aam    0xae
  413b0f:	or     eax,0x2bb1e28e
  413b14:	jb     0x413af5
  413b16:	addr16 vmread ebx,ecx
  413b1a:	and    al,0xcb
  413b1c:	out    0x87,al
  413b1e:	into   
  413b1f:	mov    ch,0x2e
  413b21:	cwde   
  413b22:	jno    0x413aa7
  413b24:	or     eax,0xd186d431
  413b29:	es je  0x413ac7
  413b2c:	stos   BYTE PTR es:[edi],al
  413b2d:	inc    ecx
  413b2e:	add    bl,BYTE PTR [edi]
  413b30:	xchg   ebx,eax
  413b31:	add    edi,DWORD PTR [ecx-0x45]
  413b34:	cs dec edi
  413b36:	outs   dx,BYTE PTR ds:[esi]
  413b37:	mov    ah,0x1e
  413b39:	dec    esi
  413b3a:	or     eax,0x136577d5
  413b3f:	sbb    BYTE PTR [edx-0x452e1f0d],0xe6
  413b46:	in     al,dx
  413b47:	xchg   ecx,eax
  413b48:	daa    
  413b49:	jnp    0x413b32
  413b4b:	fucomi st,st(0)
  413b4d:	push   ds
  413b4e:	push   edx
  413b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b50:	mov    esp,0x46bba420
  413b55:	or     dl,BYTE PTR [edx+0x7ffce3e5]
  413b5b:	sbb    dh,BYTE PTR [edi+0x7041fa6d]
  413b61:	(bad)  
  413b62:	cld    
  413b63:	cs jo  0x413b40
  413b66:	ret    0xe113
  413b69:	xor    al,ch
  413b6b:	ss daa 
  413b6d:	pop    ebp
  413b6e:	mov    al,0xb7
  413b70:	or     DWORD PTR [edx],edi
  413b72:	lods   al,BYTE PTR ds:[esi]
  413b73:	jp     0x413bbe
  413b75:	mov    edi,0xeda36be
  413b7a:	(bad)  
  413b7b:	mov    ch,0x2f
  413b7d:	icebp  
  413b7e:	sar    DWORD PTR [edi+0x51bb3d81],1
  413b84:	adc    edx,DWORD PTR [esi-0x6f797580]
  413b8a:	mov    eax,ds:0x6d42d095
  413b8f:	imul   ebx,DWORD PTR [ebx+0x3ea64757],0x7f719c59
  413b99:	stos   BYTE PTR es:[edi],al
  413b9a:	ds cmp esp,esp
  413b9d:	cmp    eax,0xf3578389
  413ba2:	sbb    ah,bh
  413ba4:	jge    0x413b8d
  413ba6:	or     al,bh
  413ba8:	test   al,0x5c
  413baa:	fstp   TBYTE PTR [ecx]
  413bac:	lods   al,BYTE PTR ds:[esi]
  413bad:	outs   dx,DWORD PTR ds:[esi]
  413bae:	push   0xca27b885
  413bb3:	jecxz  0x413b94
  413bb5:	jo     0x413b7f
  413bb7:	scas   eax,DWORD PTR es:[edi]
  413bb8:	std    
  413bb9:	fistp  DWORD PTR [esi+0x7f634062]
  413bbf:	and    eax,DWORD PTR [esp+eax*2+0x649de6f9]
  413bc6:	aad    0xaa
  413bc8:	cmp    edi,edx
  413bca:	and    ch,bh
  413bcc:	dec    ebp
  413bcd:	mov    bh,0x25
  413bcf:	ss add al,0x94
  413bd2:	cmp    bh,BYTE PTR [ecx]
  413bd4:	call   0xf8744adf
  413bd9:	or     ch,BYTE PTR [ebx+0x2a]
  413bdc:	outs   dx,BYTE PTR ds:[esi]
  413bdd:	retf   0x1e9f
  413be0:	dec    ebp
  413be1:	sbb    bl,BYTE PTR [edx+edi*1-0x34]
  413be5:	fs fwait
  413be7:	jle    0x413bb5
  413be9:	in     al,0x31
  413beb:	jl     0x413ba6
  413bed:	push   eax
  413bee:	iret   
  413bef:	mov    DWORD PTR [ecx],esp
  413bf1:	gs mov dh,ch
  413bf4:	xchg   esi,eax
  413bf5:	mov    ebx,0xb82d002a
  413bfa:	scas   eax,DWORD PTR es:[edi]
  413bfb:	ja     0x413b9a
  413bfd:	mov    BYTE PTR [ecx+0x6a],0xfc
  413c01:	cmp    eax,0x3fea9b7f
  413c06:	cmp    ch,BYTE PTR [edi+edx*8+0x75a2a723]
  413c0d:	sbb    DWORD PTR [edx-0x2aa27145],ebx
  413c13:	xor    dl,BYTE PTR [eax-0x639ee44f]
  413c19:	sar    bl,0xbd
  413c1c:	adc    ebp,edx
  413c1e:	(bad)  
  413c1f:	push   edx
  413c20:	aad    0x30
  413c22:	sbb    BYTE PTR [esi+eax*8+0x7],dh
  413c26:	mov    ebx,0xe8c98d3c
  413c2b:	aas    
  413c2c:	cmp    al,0xb
  413c2e:	mov    dl,0xc0
  413c30:	imul   ecx,DWORD PTR [edx],0x25
  413c33:	adc    ch,bh
  413c35:	mov    esp,0x7b189f1
  413c3a:	sbb    al,0xcd
  413c3c:	mov    ds:0x121adff,eax
  413c41:	dec    esi
  413c42:	pop    ecx
  413c43:	je     0x413c91
  413c45:	cmp    dl,cl
  413c47:	fsub   st,st(5)
  413c49:	mov    edi,0x358008f2
  413c4e:	inc    edx
  413c4f:	xor    esi,0xffffffd1
  413c52:	or     DWORD PTR [edx+eiz*4+0x78],ebp
  413c56:	fdivr  QWORD PTR [ebx+0x6189983b]
  413c5c:	pop    ebp
  413c5d:	int    0x5d
  413c5f:	and    eax,0x7005d7c3
  413c64:	push   ss
  413c65:	jmp    0x413bf4
  413c67:	add    DWORD PTR [esi+0x6d26e340],edx
  413c6d:	retf   
  413c6e:	mul    DWORD PTR ds:[bx+di-0x6f10]
  413c74:	les    ebx,FWORD PTR [esi+0x74ee2aa5]
  413c7a:	lock adc cl,al
  413c7d:	sub    bh,BYTE PTR [ebx-0x63edfb3f]
  413c83:	ficomp DWORD PTR [edi-0x2b]
  413c86:	xor    BYTE PTR [ebp+edx*4-0x6a],0x15
  413c8b:	pop    eax
  413c8c:	inc    ebx
  413c8d:	jnp    0x413cf9
  413c8f:	jmp    0x413c19
  413c91:	int3   
  413c92:	lds    ebp,FWORD PTR [ecx+edx*8+0x247bea02]
  413c99:	xchg   ecx,eax
  413c9a:	add    bl,dh
  413c9c:	fs int 0x9
  413c9f:	jb     0x413ccc
  413ca1:	adc    ecx,eax
  413ca3:	dec    esp
  413ca4:	jmp    FWORD PTR [ebx+0x198f476e]
  413caa:	aam    0x6b
  413cac:	call   0x7dcdde94
  413cb1:	int    0x49
  413cb3:	xor    esp,DWORD PTR ds:0xd06355a3
  413cb9:	outs   dx,DWORD PTR ds:[esi]
  413cba:	sbb    BYTE PTR [esp+ebp*1-0x3a3c93d2],cl
  413cc1:	test   ebx,0x1cb2bc44
  413cc7:	shl    DWORD PTR [eax+ebx*1],1
  413cca:	cli    
  413ccb:	fst    QWORD PTR [esp+eax*4+0x1c]
  413ccf:	int    0x8f
  413cd1:	mov    esp,0xbae16dd6
  413cd6:	test   BYTE PTR [edx+0x28],cl
  413cd9:	fcmovnb st,st(3)
  413cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cdc:	daa    
  413cdd:	aaa    
  413cde:	mov    edx,DWORD PTR [edi]
  413ce0:	dec    edx
  413ce1:	jne    0x413c7e
  413ce3:	data16 loopne 0x413c6d
  413ce6:	pop    ds
  413ce7:	loop   0x413cda
  413ce9:	cld    
  413cea:	jmp    0x413d4f
  413cec:	adc    al,0xc3
  413cee:	xchg   edx,eax
  413cef:	imul   esi,esi,0x7d5e284
  413cf5:	loopne 0x413d2c
  413cf7:	xchg   edx,eax
  413cf8:	loopne 0x413cad
  413cfa:	ins    DWORD PTR es:[edi],dx
  413cfb:	je     0x413d40
  413cfd:	(bad)  
  413cff:	enter  0x2401,0x92
  413d03:	lds    ebx,FWORD PTR [edx]
  413d05:	ss scas al,BYTE PTR es:[edi]
  413d07:	in     eax,0xd7
  413d09:	mov    eax,ds:0xb1822ee2
  413d0e:	xchg   edx,eax
  413d0f:	pushf  
  413d10:	mov    ah,BYTE PTR [edi+0x29]
  413d13:	xchg   DWORD PTR [edx+0x7f],edx
  413d16:	scas   eax,DWORD PTR es:[edi]
  413d17:	sbb    eax,0x3e8717b0
  413d1c:	shl    esp,1
  413d1e:	shl    esp,0x32
  413d21:	ins    BYTE PTR es:[edi],dx
  413d22:	pop    ebx
  413d23:	daa    
  413d24:	xor    eax,0xce2d837
  413d29:	(bad)  
  413d2a:	xor    DWORD PTR [ebx],eax
  413d2c:	loopne 0x413d8f
  413d2e:	cmp    al,0xef
  413d30:	lahf   
  413d31:	add    dh,dh
  413d33:	(bad)  
  413d35:	stos   DWORD PTR es:[edi],eax
  413d36:	and    BYTE PTR [edx],bl
  413d38:	lods   al,BYTE PTR ds:[esi]
  413d3a:	xchg   esp,eax
  413d3b:	mov    cl,0xb6
  413d3d:	test   al,0x87
  413d3f:	mov    esi,0xcb3a2c9b
  413d44:	mov    eax,0xbafe83ff
  413d49:	repnz xlat BYTE PTR fs:[ebx]
  413d4c:	jb     0x413d86
  413d4e:	retf   0xe9c1
  413d51:	mov    ?,WORD PTR [edx-0x2ae85f45]
  413d57:	or     al,0xcb
  413d59:	rol    BYTE PTR [esi+0x347d57d2],cl
  413d5f:	sub    BYTE PTR [edi],bh
  413d61:	cmp    edi,DWORD PTR [edx]
  413d63:	out    dx,eax
  413d64:	mov    ds:0x5740d52b,al
  413d69:	scas   al,BYTE PTR es:[edi]
  413d6a:	sub    eax,0x34f763ef
  413d6f:	ins    DWORD PTR es:[edi],dx
  413d70:	mov    dl,0xc
  413d72:	sar    BYTE PTR [eax],1
  413d74:	adc    ecx,esp
  413d76:	xor    DWORD PTR [esi],eax
  413d78:	setne  BYTE PTR [ecx+0xb9059c0]
  413d7f:	cmp    esi,0xa004c398
  413d85:	mov    al,ds:0x959f755
  413d8a:	aad    0x5b
  413d8c:	pop    ecx
  413d8d:	pop    edx
  413d8e:	jns    0x413dfc
  413d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d91:	and    al,0xb6
  413d93:	inc    edi
  413d94:	ficomp WORD PTR [edx+0xd]
  413d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d98:	aam    0x6b
  413d9a:	ret    
  413d9b:	mov    eax,0x8e414b41
  413da0:	dec    esp
  413da1:	mov    dh,BYTE PTR [edx+0x4e]
  413da4:	ins    DWORD PTR es:[edi],dx
  413da5:	xchg   ebx,eax
  413da6:	add    DWORD PTR [ebx],esi
  413da8:	mov    ah,0xde
  413daa:	loopne 0x413d78
  413dac:	push   ss
  413dad:	loope  0x413d92
  413daf:	xchg   ebp,eax
  413db0:	hlt    
  413db1:	lock jg 0x413d53
  413db4:	mov    ds:0xc20e5131,eax
  413db9:	and    esi,DWORD PTR [ebx-0x742dbc49]
  413dbf:	(bad)  
  413dc0:	xor    ch,ch
  413dc2:	lock dec esi
  413dc4:	fimul  DWORD PTR [ecx+eiz*1]
  413dc7:	push   esi
  413dc8:	into   
  413dc9:	int3   
  413dca:	xchg   BYTE PTR [esi+0x377c36d3],al
  413dd0:	(bad)  
  413dd2:	cmp    eax,0x3d3e8070
  413dd7:	pop    ss
  413dd8:	leave  
  413dd9:	add    ch,BYTE PTR [edx-0x54b5ec42]
  413ddf:	mov    eax,0xdcfdf5cc
  413de4:	xchg   DWORD PTR [ebp+0x57],ebp
  413de7:	loope  0x413d88
  413de9:	push   0x76804022
  413dee:	sub    ebx,DWORD PTR [edx]
  413df0:	dec    ebx
  413df1:	or     eax,0x6b6d1a92
  413df6:	stc    
  413df7:	outs   dx,DWORD PTR ds:[esi]
  413df8:	icebp  
  413df9:	fwait
  413dfa:	in     eax,0xce
  413dfc:	lods   eax,DWORD PTR ds:[esi]
  413dfd:	or     BYTE PTR [ecx-0x17ee7f83],ch
  413e03:	daa    
  413e04:	xchg   BYTE PTR cs:[eax-0x19],dl
  413e08:	add    bl,BYTE PTR [edx-0x54e7a791]
  413e0e:	cmovae edx,DWORD PTR [edx+0x3e]
  413e12:	xchg   esp,eax
  413e13:	add    al,0x5e
  413e15:	inc    eax
  413e16:	div    esp
  413e18:	push   eax
  413e19:	test   DWORD PTR ds:0x8dcc108d,eax
  413e1f:	scas   eax,DWORD PTR es:[edi]
  413e20:	or     BYTE PTR [ecx],0x9d
  413e23:	sub    al,0xe5
  413e25:	test   DWORD PTR [ecx],0x2615c2aa
  413e2b:	call   0x30dfb61f
  413e30:	shl    BYTE PTR [ecx],cl
  413e32:	mov    edi,0xcc6c8ae9
  413e37:	cmp    al,0x89
  413e39:	or     ebx,ebx
  413e3b:	loope  0x413e4d
  413e3d:	out    0x72,al
  413e3f:	test   BYTE PTR [ebp-0x6fca00d9],0x5e
  413e46:	leave  
  413e47:	(bad)  
  413e49:	sbb    al,0x89
  413e4b:	jno    0x413dd1
  413e4d:	push   ebx
  413e4e:	enter  0xb51,0x79
  413e52:	mov    eax,0xd775f1d4
  413e57:	es jo  0x413eb2
  413e5a:	scas   al,BYTE PTR es:[edi]
  413e5b:	or     BYTE PTR [ebx],bl
  413e5d:	mov    edi,0x210fce55
  413e62:	push   cs
  413e63:	xchg   DWORD PTR ds:0x8887fa7d,ebp
  413e69:	xor    eax,0xe78c7d3
  413e6e:	fdivr  st,st(5)
  413e70:	stc    
  413e71:	push   edx
  413e72:	pop    es
  413e73:	add    eax,0x917c8cc1
  413e78:	test   DWORD PTR [eax-0x33],eax
  413e7b:	xchg   esp,eax
  413e7c:	xor    DWORD PTR [edx-0x4e],ebx
  413e7f:	dec    ebx
  413e80:	xor    DWORD PTR [eax-0x66],esi
  413e83:	out    dx,eax
  413e84:	ja     0x413e73
  413e86:	pop    edi
  413e87:	fst    DWORD PTR [edx+0x4a012dce]
  413e8d:	test   ch,ah
  413e8f:	sbb    eax,0x44406205
  413e94:	inc    ecx
  413e95:	sti    
  413e96:	iret   
  413e97:	lock add DWORD PTR [esi],ebp
  413e9a:	xor    al,0xaf
  413e9c:	hlt    
  413e9d:	popf   
  413e9e:	fistp  WORD PTR [eax]
  413ea0:	or     eax,0xf44bcef7
  413ea5:	shl    bh,0x60
  413ea8:	sahf   
  413ea9:	shl    esi,1
  413eab:	repnz add al,0xc2
  413eae:	bound  esp,QWORD PTR [eax+0x73aa593a]
  413eb4:	mov    ebp,0x93b4cd6a
  413eb9:	sbb    eax,0xd2eb295e
  413ebe:	dec    esi
  413ebf:	mov    ds:0xc2aed5da,al
  413ec4:	in     al,dx
  413ec5:	fidiv  DWORD PTR [ecx-0x34e26235]
  413ecb:	xchg   ecx,eax
  413ecc:	call   DWORD PTR [ebx]
  413ece:	clc    
  413ecf:	outs   dx,DWORD PTR ds:[esi]
  413ed0:	shl    BYTE PTR [esi-0x68],cl
  413ed3:	fiadd  WORD PTR [ebp+0x4b]
  413ed6:	imul   dh
  413ed8:	out    0x9b,al
  413eda:	pop    ss
  413edb:	sub    ebp,edi
  413edd:	push   esi
  413ede:	(bad)  
  413edf:	adc    ebx,DWORD PTR [eax+ecx*2+0x41]
  413ee3:	mov    ch,0xe
  413ee5:	ins    BYTE PTR es:[edi],dx
  413ee6:	mov    edx,0x66afede0
  413eeb:	in     al,0x91
  413eed:	int    0x7
  413eef:	cmp    dl,BYTE PTR [edi]
  413ef1:	mov    ebp,0x7085ca20
  413ef6:	ss xchg ebx,eax
  413ef8:	jo     0x413f42
  413efa:	es mov ah,0x14
  413efd:	shl    edi,cl
  413eff:	xchg   ebx,eax
  413f00:	mov    dl,0x35
  413f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f03:	pop    ecx
  413f04:	adc    eax,0x8c46ec09
  413f09:	fistp  WORD PTR [esi+0x4d805bbf]
  413f0f:	loopne 0x413f14
  413f11:	jmp    FWORD PTR [ebp+0x3992900a]
  413f17:	inc    ebp
  413f18:	jmp    0x1a02:0x67a31148
  413f1f:	mov    edx,0x7ae065e2
  413f24:	loope  0x413ec9
  413f26:	dec    esi
  413f27:	repnz nop
  413f29:	inc    BYTE PTR [edx]
  413f2b:	xchg   esp,eax
  413f2c:	xor    al,0xe4
  413f2e:	and    DWORD PTR [esi-0x71],0xffffffa9
  413f32:	xchg   ah,dh
  413f34:	ss xchg esi,eax
  413f36:	mov    cl,0x27
  413f38:	mul    BYTE PTR [ecx-0x14]
  413f3b:	sbb    eax,0xba136173
  413f40:	jmp    DWORD PTR [eax+0x13]
  413f43:	out    dx,eax
  413f44:	outs   dx,DWORD PTR ds:[esi]
  413f45:	fadd   st(0),st
  413f47:	or     eax,0xbb49dee2
  413f4c:	inc    ecx
  413f4d:	xchg   esi,eax
  413f4e:	in     al,0xfb
  413f50:	or     eax,0xc4b349d8
  413f55:	dec    edx
  413f56:	scas   al,BYTE PTR es:[edi]
  413f57:	dec    esp
  413f58:	cli    
  413f59:	shl    DWORD PTR [ebx-0x763dfe36],0x5d
  413f60:	jne    0x413fc3
  413f62:	loop   0x413f84
  413f64:	ss mov ecx,0x34163fb0
  413f6a:	push   eax
  413f6b:	add    edx,DWORD PTR [eax+0x70]
  413f6e:	fs nop
  413f70:	(bad)  
  413f71:	push   0x6e
  413f73:	js     0x413f2e
  413f75:	(bad)
  413f78:	ja     0x413fce
  413f7a:	dec    ecx
  413f7b:	mov    esp,0xd7894aa6
  413f80:	jg     0x413fbc
  413f82:	pop    ecx
  413f83:	dec    esi
  413f84:	call   0xc7ae11d9
  413f89:	fld    QWORD PTR [esi+0x66]
  413f8c:	cli    
  413f8d:	test   eax,0x356852c1
  413f92:	push   ebx
  413f93:	dec    eax
  413f94:	adc    al,0x17
  413f96:	pop    es
  413f97:	jmp    0x1284:0xbcb41ece
  413f9e:	jl     0x414005
  413fa0:	pop    ds
  413fa1:	jno    0x413f30
  413fa3:	jnp    0x413f71
  413fa5:	and    bh,bh
  413fa7:	xor    al,0xa0
  413fa9:	daa    
  413faa:	imul   esp,DWORD PTR [ebp+0x79ba539b],0x7e
  413fb1:	sub    al,0x10
  413fb3:	repz push ss
  413fb5:	sub    BYTE PTR [ecx+0x42dc0b88],cl
  413fbb:	sub    DWORD PTR [edx],0xbd60db54
  413fc1:	leave  
  413fc2:	cmp    edi,DWORD PTR [esi+eiz*2+0x472e2f68]
  413fc9:	ficom  WORD PTR [ebx+0x38a52072]
  413fcf:	stos   BYTE PTR es:[edi],al
  413fd0:	aas    
  413fd1:	push   eax
  413fd2:	xchg   ebp,eax
  413fd3:	pusha  
  413fd4:	jbe    0x41402d
  413fd6:	inc    esi
  413fd7:	or     eax,0xba3e7847
  413fdc:	mov    edi,0x99c1011d
  413fe1:	mov    ds:0xc8bdfe4d,eax
  413fe6:	dec    esp
  413fe7:	push   0xffffffb8
  413fe9:	stc    
  413fea:	shl    esp,0x0
  413fed:	int3   
  413fee:	mov    dh,0xab
  413ff0:	mov    ds:0xb3ecd4fc,al
  413ff5:	(bad)  
  413ff6:	jl     0x413ff2
  413ff8:	dec    ebx
  413ff9:	xor    ecx,ebx
  413ffb:	popa   
  413ffc:	stc    
  413ffd:	popf   
  413ffe:	out    dx,al
  413fff:	add    BYTE PTR [ecx],bh
  414001:	inc    edx
  414002:	push   eax
  414003:	pop    edi
  414004:	sub    al,0xb1
  414006:	(bad)  
  414008:	pop    ds
  414009:	cmp    dh,BYTE PTR [ebx-0x4740f925]
  41400f:	inc    edi
  414010:	mov    bl,0xcc
  414012:	pop    ebp
  414013:	pop    ds
  414014:	in     eax,0xfb
  414016:	mov    esp,0xa3d08e41
  41401b:	dec    esp
  41401c:	fcom   QWORD PTR [ecx+0x2b]
  41401f:	jbe    0x414056
  414021:	cmp    al,cl
  414023:	(bad)  
  414024:	fisttp WORD PTR [esi]
  414026:	inc    eax
  414027:	push   ecx
  414028:	mov    dh,0xdf
  41402a:	mov    dl,0x26
  41402c:	sbb    BYTE PTR [edx],dl
  41402e:	push   cs
  41402f:	sub    al,0x95
  414031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414032:	push   ds
  414033:	xlat   BYTE PTR ds:[ebx]
  414034:	xor    DWORD PTR [edi+edi*4-0x78],0x45
  414039:	cs retf 0x9e38
  41403d:	mov    al,0x25
  41403f:	xor    esi,DWORD PTR [edx]
  414041:	add    eax,0xcefda525
  414046:	xchg   BYTE PTR cs:[esp+ecx*1],ah
  41404a:	rcr    BYTE PTR [ebp+0x21],cl
  41404d:	jb     0x413ffc
  41404f:	xchg   esp,eax
  414050:	pop    ss
  414051:	mov    ds:0xc6833065,al
  414056:	lds    ecx,FWORD PTR [edx-0x7c]
  414059:	or     al,0x4e
  41405b:	jmp    0x443e:0x98b0c8fe
  414062:	push   0x7bbae29
  414067:	cmp    bl,BYTE PTR [esi]
  414069:	or     al,BYTE PTR [edx+edx*1-0x75]
  41406d:	int3   
  41406e:	jbe    0x4140be
  414070:	test   DWORD PTR [eax],edi
  414072:	test   BYTE PTR [eax],dh
  414074:	loope  0x414090
  414076:	xlat   BYTE PTR ds:[ebx]
  414077:	cli    
  414078:	fimul  WORD PTR [ecx]
  41407a:	inc    esi
  41407b:	out    dx,al
  41407c:	fld    DWORD PTR [esi+0x35]
  41407f:	outs   dx,BYTE PTR ds:[esi]
  414080:	or     DWORD PTR [eax-0x66],esp
  414083:	std    
  414084:	pop    es
  414085:	out    0x52,al
  414087:	and    al,0x25
  414089:	scas   eax,DWORD PTR es:[edi]
  41408a:	add    cl,al
  41408c:	pop    es
  41408d:	xchg   esp,eax
  41408e:	sub    BYTE PTR [edx+ecx*1-0xc96bde3],bh
  414095:	int3   
  414096:	mov    al,0x63
  414098:	mov    ecx,0x1f27a521
  41409d:	jmp    0xf1e4:0x87350e3a
  4140a4:	jg     0x41402d
  4140a6:	cmp    bh,al
  4140a8:	lods   eax,DWORD PTR es:[esi]
  4140aa:	dec    eax
  4140ab:	out    0xc1,al
  4140ad:	sub    BYTE PTR [esi-0x698d559e],bh
  4140b3:	jp     0x4140ae
  4140b5:	repz dec esp
  4140b7:	es mov esi,0x28a856c7
  4140bd:	aas    
  4140be:	jmp    0x3851:0x2da1c69b
  4140c5:	sahf   
  4140c6:	jmp    0x61ed:0x8e60c2b2
  4140cd:	xchg   ecx,eax
  4140ce:	repnz scas al,BYTE PTR es:[edi]
  4140d0:	mov    edi,0x14276bef
  4140d5:	push   0xbb8faa91
  4140da:	test   eax,0x72047e62
  4140df:	pop    esi
  4140e0:	inc    ebp
  4140e1:	imul   esi,DWORD PTR ds:0x75f24e66,0x77
  4140e8:	cmp    esi,DWORD PTR [ebx+0x17]
  4140eb:	test   cl,bh
  4140ed:	push   cs
  4140ee:	mov    bl,0xfa
  4140f0:	sub    BYTE PTR [edi+0x3214a9dd],cl
  4140f6:	push   esp
  4140f7:	es mov ah,0x9a
  4140fa:	push   0x5375a7fd
  4140ff:	mov    ah,0x1c
  414101:	push   edx
  414102:	push   es
  414103:	cmp    bh,BYTE PTR [edx-0x58]
  414106:	ss xchg edx,eax
  414108:	pop    ecx
  414109:	repz dec esp
  41410b:	nop
  41410c:	adc    DWORD PTR [edi],esi
  41410e:	xor    DWORD PTR [eax-0x60b77538],edx
  414114:	imul   eax,DWORD PTR [ecx],0xffffff86
  414117:	jne    0x414129
  414119:	mov    DWORD PTR [edx+edi*4],esp
  41411c:	cli    
  41411d:	xchg   BYTE PTR [ebp+0x7c12a5fa],dl
  414123:	test   BYTE PTR [esi-0x61],0x68
  414127:	adc    bh,al
  414129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41412a:	add    al,0x47
  41412c:	(bad)  
  41412d:	iret   
  41412e:	push   0xffffffd6
  414130:	fmul   st(3),st
  414132:	inc    esi
  414133:	test   al,0x94
  414135:	imul   ebp,ebp,0x28
  414138:	mov    cl,0x44
  41413a:	mov    ds:0x8f5373c3,eax
  41413f:	fadd   DWORD PTR [ecx-0x71]
  414142:	data16 icebp 
  414144:	push   0x1d887bfc
  414149:	lock add al,0x33
  41414c:	int3   
  41414d:	sbb    eax,0xc6ea05b4
  414152:	ficom  DWORD PTR [eax-0x4f]
  414155:	sub    BYTE PTR [esi+eax*8+0x50],dh
  414159:	ret    
  41415a:	pop    edx
  41415b:	gs xor al,0x2
  41415e:	(bad)  
  41415f:	cdq    
  414160:	cwde   
  414161:	test   eax,edx
  414163:	inc    ecx
  414164:	fwait
  414165:	pop    esi
  414166:	imul   BYTE PTR [edx-0x563a4a2f]
  41416c:	std    
  41416d:	fldcw  WORD PTR [edx+0x4de3b08e]
  414173:	mov    cl,BYTE PTR [ebx]
  414175:	scas   al,BYTE PTR es:[edi]
  414176:	jb     0x414164
  414178:	sahf   
  414179:	fs call 0xd8bc7d45
  41417f:	mov    eax,0x9a99eba4
  414184:	inc    ebx
  414185:	ja     0x4141c8
  414187:	dec    edi
  414188:	sbb    edi,DWORD PTR [ecx]
  41418a:	fwait
  41418b:	dec    edx
  41418c:	sub    DWORD PTR [ebp-0x76],eax
  41418f:	retf   0x832e
  414192:	push   ebp
  414193:	xchg   BYTE PTR cs:[edi+0x4578fb5d],bl
  41419a:	push   eax
  41419b:	fld    st(5)
  41419d:	xor    DWORD PTR [eax-0x720481e8],edi
  4141a3:	(bad)  
  4141a4:	mov    cs,WORD PTR [ebx+0x7aaffe0b]
  4141aa:	jg     0x4141d9
  4141ac:	js     0x4141c4
  4141ae:	lahf   
  4141af:	jp     0x4141ee
  4141b1:	cmp    al,BYTE PTR [ecx]
  4141b3:	sub    ebp,DWORD PTR [ebp-0x17]
  4141b6:	mov    cl,0xef
  4141b8:	push   ebp
  4141b9:	xchg   BYTE PTR [eax],ch
  4141bb:	pcmpeqb mm0,QWORD PTR [ecx+0x64]
  4141bf:	fmul   DWORD PTR [edi+0x44]
  4141c2:	imul   eax,DWORD PTR [ebx-0x54b65f03],0x6f26fb78
  4141cc:	add    eax,0xf9424dda
  4141d1:	pop    es
  4141d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d3:	jge    0x4141a3
  4141d5:	jnp    0x4141cc
  4141d7:	adc    BYTE PTR [ecx-0x7266193f],cl
  4141dd:	movnti DWORD PTR [esp+esi*2+0x43c192f3],eax
  4141e5:	add    al,0x58
  4141e7:	dec    esi
  4141e8:	sbb    DWORD PTR [ebx],esi
  4141ea:	in     eax,dx
  4141eb:	jns    0x414254
  4141ed:	cdq    
  4141ee:	cmovp  esi,ecx
  4141f1:	mov    ebx,0xc6a5aad3
  4141f6:	pop    edi
  4141f7:	fsubrp st(5),st
  4141f9:	mov    bh,0x13
  4141fb:	or     ch,BYTE PTR [edi+0xd023ff5]
  414201:	sbb    BYTE PTR [ebx+0x73],ah
  414204:	push   0xffffff9a
  414206:	hlt    
  414207:	popa   
  414208:	mov    ecx,0xe910f6e2
  41420d:	and    eax,0x2591617d
  414212:	add    al,0x97
  414214:	mov    dl,0x2b
  414216:	jnp    0x414266
  414218:	jge    0x414229
  41421a:	pop    es
  41421b:	push   edi
  41421c:	retf   
  41421d:	stos   DWORD PTR es:[edi],eax
  41421e:	mov    cl,0xf8
  414220:	dec    esp
  414221:	cmp    edx,DWORD PTR [esp+eax*2+0x6be492fc]
  414228:	mov    WORD PTR [ecx],cs
  41422a:	mov    cl,0x35
  41422c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41422d:	push   edx
  41422e:	lds    ecx,FWORD PTR [ebp-0x897341e]
  414234:	shr    DWORD PTR [ebx-0x7f62fd0d],1
  41423a:	pop    ecx
  41423b:	out    0xa4,eax
  41423d:	sub    BYTE PTR [edx-0x5c06d5c7],0x78
  414244:	jle    0x4141db
  414246:	mov    al,ds:0x1c75dee5
  41424b:	xor    BYTE PTR [eax],bl
  41424d:	pop    ds
  41424e:	aas    
  41424f:	das    
  414250:	add    ah,bl
  414252:	int    0xfc
  414254:	mov    ds:0x43360478,eax
  414259:	imul   esp,ebx,0x61
  41425c:	out    dx,al
  41425d:	push   0xa379329
  414262:	adc    edx,DWORD PTR [ecx+0x66a213a0]
  414268:	sbb    DWORD PTR [edx],esp
  41426a:	jecxz  0x4141f2
  41426c:	mov    edx,0xcad02c0f
  414271:	mov    bl,0x10
  414273:	mov    bh,0xf7
  414275:	clc    
  414276:	mov    cl,0x96
  414278:	ja     0x41421e
  41427a:	add    DWORD PTR [ebx-0x55f980ea],ecx
  414280:	mov    bh,0x3d
  414282:	mov    ecx,0x26f11855
  414287:	sar    ah,cl
  414289:	das    
  41428a:	pop    eax
  41428b:	loope  0x414289
  41428d:	imul   ebx,DWORD PTR [edi],0x38
  414290:	loope  0x4142ab
  414292:	mov    ah,0xb2
  414294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414295:	cld    
  414296:	mov    DWORD PTR [ecx-0x10],eax
  414299:	xor    ebp,DWORD PTR [edx-0x6d56e148]
  41429f:	int3   
  4142a0:	sub    dh,dh
  4142a2:	mov    BYTE PTR [edx],dl
  4142a4:	mov    cs,WORD PTR [esi+edx*8-0xf]
  4142a8:	pop    edi
  4142a9:	mov    ds:0x69340503,eax
  4142ae:	cs dec edi
  4142b0:	int3   
  4142b1:	xchg   esi,eax
  4142b2:	ficom  WORD PTR [edi-0x57]
  4142b5:	cmc    
  4142b6:	dec    esp
  4142b7:	pop    es
  4142b8:	fnstsw WORD PTR [edx]
  4142ba:	push   edx
  4142bb:	in     al,dx
  4142bc:	fwait
  4142bd:	outs   dx,BYTE PTR ds:[esi]
  4142be:	int    0x17
  4142c0:	jno    0x4142b9
  4142c2:	imul   edi,DWORD PTR [eax+eiz*2-0x4fd44987],0xa9f74d7b
  4142cd:	sbb    DWORD PTR [ecx+0x26b906f8],ecx
  4142d3:	les    edx,FWORD PTR [edi]
  4142d5:	adc    ch,BYTE PTR [ecx]
  4142d7:	sbb    dl,BYTE PTR [ebx*1-0x6aa385b5]
  4142de:	imul   DWORD PTR [edx+0x4553da53]
  4142e4:	mov    al,0xda
  4142e6:	push   eax
  4142e7:	push   ecx
  4142e8:	cmp    edi,DWORD PTR [esp+esi*2]
  4142eb:	int    0xcc
  4142ed:	add    BYTE PTR [esi+0x392ce76b],cl
  4142f3:	sub    BYTE PTR ds:[ebp-0x69bcc2bf],dl
  4142fa:	scas   al,BYTE PTR es:[edi]
  4142fb:	gs mov dh,0xea
  4142fe:	mov    esi,0xa757541d
  414303:	cmp    al,0x40
  414305:	int    0x8b
  414307:	test   al,0xb5
  414309:	test   al,0x2c
  41430b:	adc    al,0x6f
  41430d:	pop    edi
  41430e:	jnp    0x41434a
  414310:	mov    edi,DWORD PTR [ebp-0x15]
  414313:	dec    edx
  414314:	inc    edx
  414315:	ins    DWORD PTR es:[edi],dx
  414316:	aad    0x58
  414318:	dec    edx
  414319:	adc    esp,DWORD PTR [edi+0x3f]
  41431c:	inc    eax
  41431d:	loop   0x4142ca
  41431f:	xchg   BYTE PTR ds:0x39349ced,dh
  414325:	es mov bl,0x8
  414328:	neg    ah
  41432a:	retf   0xdd78
  41432d:	out    0x58,eax
  41432f:	sbb    BYTE PTR [edi],0xd
  414332:	int    0xfc
  414334:	jns    0x4142e0
  414336:	dec    ecx
  414337:	push   ebp
  414338:	sub    ch,bh
  41433a:	cdq    
  41433b:	mov    ch,0x86
  41433d:	dec    ecx
  41433e:	repz pusha 
  414340:	mov    eax,ds:0xf8db6095
  414345:	dec    eax
  414346:	jo     0x4143ac
  414348:	or     dl,BYTE PTR [eax+0x39]
  41434b:	out    dx,al
  41434c:	lahf   
  41434d:	dec    ecx
  41434e:	imul   ebp,DWORD PTR [ebx-0xd5aec02],0x3e9409bf
  414358:	add    DWORD PTR [ebx+0x2d],ebp
  41435b:	clc    
  41435c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41435d:	test   BYTE PTR [ebx-0x1b8e9314],ah
  414363:	test   BYTE PTR [edi],bl
  414365:	icebp  
  414366:	adc    BYTE PTR [edx-0x77],al
  414369:	pop    ebx
  41436a:	cmp    DWORD PTR [esp+esi*4-0x67],edi
  41436e:	(bad)  
  41436f:	icebp  
  414370:	stos   WORD PTR es:[edi],ax
  414372:	sub    al,0xb3
  414374:	(bad)  
  414375:	stos   DWORD PTR es:[edi],eax
  414376:	not    DWORD PTR [eax-0x5c]
  414379:	cs xchg ecx,eax
  41437b:	test   al,0x15
  41437d:	pop    ss
  41437e:	sub    DWORD PTR [ecx-0x4d],esi
  414381:	push   cs
  414382:	sub    eax,0xf8c6b25a
  414387:	(bad)  
  414388:	fwait
  414389:	in     eax,dx
  41438a:	shl    esp,cl
  41438c:	mov    ebp,cs
  41438e:	mov    bl,0x9b
  414390:	in     eax,dx
  414391:	fldcw  WORD PTR [esi]
  414393:	cmp    DWORD PTR [ebx-0x17],edx
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	jno    0x4143b1
  414399:	popf   
  41439a:	(bad)  
  41439b:	nop
  41439c:	aas    
  41439d:	push   es
  41439e:	clc    
  41439f:	xchg   ecx,eax
  4143a0:	mov    dh,0xf9
  4143a2:	push   0xffffff93
  4143a4:	out    0xed,eax
  4143a6:	pushf  
  4143a7:	add    esp,0xbc625c70
  4143ad:	dec    eax
  4143ae:	xor    bl,BYTE PTR [ebx-0x2d3151dc]
  4143b4:	push   ebx
  4143b5:	jecxz  0x414337
  4143b7:	clc    
  4143b8:	not    BYTE PTR [edi-0x376e4004]
  4143be:	mov    ch,0x94
  4143c0:	jo     0x414347
  4143c2:	test   eax,0x272ee699
  4143c7:	jnp    0x414371
  4143c9:	es xchg edx,eax
  4143cb:	xchg   esp,eax
  4143cc:	movsx  ecx,BYTE PTR [ecx+0x66]
  4143d0:	jp     0x41440e
  4143d2:	icebp  
  4143d3:	(bad)
  4143d8:	sub    al,0x9a
  4143da:	jno    0x4143b1
  4143dc:	enter  0x74d,0x44
  4143e0:	bound  ebx,QWORD PTR [esi-0x8cd2f6d]
  4143e6:	jmp    0x414458
  4143e8:	repnz stos DWORD PTR es:[edi],eax
  4143ea:	sbb    al,0xca
  4143ec:	cld    
  4143ed:	push   ebx
  4143ee:	and    dl,dh
  4143f0:	and    DWORD PTR [edx+0x5e5b0256],eax
  4143f6:	adc    ebx,DWORD PTR [esi+ebx*4]
  4143f9:	std    
  4143fa:	aaa    
  4143fb:	aam    0xbb
  4143fd:	stos   DWORD PTR es:[edi],eax
  4143fe:	sub    esi,DWORD PTR [edx]
  414400:	(bad)  
  414401:	cmp    bh,BYTE PTR [esi-0x37d02100]
  414407:	out    dx,eax
  414408:	mov    ch,0x6e
  41440a:	cmp    ecx,DWORD PTR [ecx+0x3c]
  41440d:	adc    eax,0x922670be
  414412:	ret    0xeba5
  414415:	je     0x41447c
  414417:	mov    bl,0x6f
  414419:	das    
  41441a:	pop    esp
  41441b:	loop   0x414481
  41441d:	mov    bl,0x86
  41441f:	daa    
  414420:	xchg   edx,eax
  414421:	pop    esi
  414422:	out    dx,al
  414423:	xchg   esi,eax
  414424:	(bad)  
  414425:	icebp  
  414426:	repz sbb al,0x13
  414429:	jne    0x41444a
  41442b:	jmp    0x4143d5
  41442d:	push   0xa28704d4
  414432:	ror    DWORD PTR [edx-0x4775ae89],cl
  414438:	popf   
  414439:	clc    
  41443a:	mov    ecx,0x757124cc
  41443f:	stos   BYTE PTR es:[edi],al
  414440:	xchg   ebx,eax
  414441:	imul   esi,DWORD PTR [edi+0x50],0xfffffffb
  414445:	cmp    BYTE PTR [ecx],cl
  414447:	adc    eax,0xce972cfa
  41444c:	xchg   ebp,eax
  41444d:	xor    edi,DWORD PTR [eax+ecx*1-0x1ef5cd02]
  414454:	aad    0xb7
  414456:	add    DWORD PTR [ebx],ebx
  414458:	sbb    eax,0x608c90c3
  41445d:	xor    bl,BYTE PTR [ebx+esi*2+0x53]
  414461:	retf   0x9731
  414464:	xchg   esi,eax
  414465:	push   ds
  414466:	fs pop ds
  414468:	pop    esi
  414469:	or     ebx,DWORD PTR [ebp+0x66]
  41446c:	gs sbb al,0x80
  41446f:	imul   esi,DWORD PTR [ebp-0x5694f22],0xffffffbc
  414476:	dec    esp
  414477:	ja     0x4144d4
  414479:	(bad)  
  41447a:	pushf  
  41447b:	push   edi
  41447c:	loopne 0x41442e
  41447e:	add    DWORD PTR [edi+0x7e],eax
  414481:	std    
  414482:	out    0xce,al
  414484:	(bad)  
  414486:	inc    ecx
  414487:	retf   
  414488:	sub    DWORD PTR [esi],edi
  41448a:	inc    ecx
  41448b:	fdivr  st(0),st
  41448d:	jmp    0x41447a
  41448f:	push   ecx
  414490:	in     eax,0xf0
  414492:	mov    al,0x88
  414494:	cmc    
  414495:	mov    ds:0x4c88cf15,eax
  41449a:	jl     0x414498
  41449c:	xchg   esp,eax
  41449d:	repz mov ?,WORD PTR [edi-0xd]
  4144a1:	cli    
  4144a2:	pop    ss
  4144a3:	pop    edi
  4144a4:	xchg   edx,eax
  4144a5:	loopne 0x414471
  4144a7:	xchg   ebx,eax
  4144a8:	cli    
  4144a9:	jl     0x4144f6
  4144ab:	cmp    eax,0xf3e2fb2e
  4144b0:	inc    esp
  4144b1:	ds lahf 
  4144b3:	jp     0x414526
  4144b5:	or     DWORD PTR [esp],0x404fe1bd
  4144bc:	mov    BYTE PTR [ebx+eax*2+0x4d],cl
  4144c0:	cmc    
  4144c1:	or     eax,0x36014ab
  4144c6:	hlt    
  4144c7:	ror    DWORD PTR [ebx+0x51],cl
  4144ca:	xchg   edx,eax
  4144cb:	scas   al,BYTE PTR es:[edi]
  4144cc:	sar    ah,1
  4144ce:	inc    esp
  4144cf:	jp     0x414487
  4144d1:	int    0xcc
  4144d3:	les    edx,FWORD PTR [eax+edx*2-0x1c]
  4144d7:	xchg   ebp,eax
  4144d8:	inc    ebx
  4144d9:	sar    DWORD PTR [eax+eax*2-0x4a73534a],1
  4144e0:	fs push es
  4144e2:	mov    al,ds:0x7a0342c0
  4144e7:	push   0x72
  4144e9:	pop    edx
  4144ea:	add    eax,0x9e7ec884
  4144ef:	scas   al,BYTE PTR es:[edi]
  4144f0:	sub    BYTE PTR [esi+ecx*2+0x337f5811],al
  4144f7:	repz sahf 
  4144f9:	xchg   BYTE PTR [ecx-0x425c971b],dl
  4144ff:	sti    
  414500:	in     eax,0x2e
  414502:	cmp    eax,0xed86ea98
  414507:	mov    al,0xef
  414509:	scas   al,BYTE PTR es:[edi]
  41450a:	xchg   ecx,eax
  41450b:	sbb    al,0xf1
  41450d:	jg     0x414532
  41450f:	jecxz  0x414546
  414511:	cs cdq 
  414513:	ds daa 
  414515:	jecxz  0x4144ba
  414517:	push   edx
  414518:	pushf  
  414519:	out    0xa4,eax
  41451b:	push   ecx
  41451c:	pop    esi
  41451d:	inc    eax
  41451e:	es add ebx,0x58
  414522:	push   esp
  414523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414524:	shl    DWORD PTR [edi-0x7f],1
  414527:	gs dec eax
  414529:	popf   
  41452a:	test   BYTE PTR [esi-0x27a835d6],0x81
  414531:	loop   0x4144b7
  414533:	add    eax,0x9b53f74b
  414538:	test   eax,0x32190322
  41453d:	test   al,0x6e
  41453f:	jmp    0x1bf4d99d
  414544:	mov    al,0x19
  414546:	add    ah,BYTE PTR [ebx+eax*4+0x64fccb28]
  41454d:	adc    eax,0x909403d1
  414552:	fwait
  414553:	mov    ecx,gs
  414555:	mov    dl,0x47
  414557:	sbb    al,0x20
  414559:	or     DWORD PTR [ecx-0x1986eee6],0xf3107d1c
  414563:	mov    es,WORD PTR [ecx+esi*8]
  414566:	daa    
  414567:	loopne 0x4145be
  414569:	dec    ecx
  41456a:	jnp    0x4144f9
  41456c:	dec    ecx
  41456d:	sbb    al,0xe1
  41456f:	call   0x2a424e05
  414574:	push   eax
  414575:	loopne 0x41459c
  414577:	test   al,0xb6
  414579:	sub    BYTE PTR [edi],al
  41457b:	retf   
  41457c:	lods   al,BYTE PTR ds:[esi]
  41457d:	arpl   WORD PTR [edi+0x1a],cx
  414580:	nop
  414581:	test   eax,0x6dd0d771
  414586:	inc    edi
  414587:	mov    esp,0x9f6f4b90
  41458c:	mov    bl,0x10
  41458e:	inc    eax
  41458f:	neg    DWORD PTR [edx+0x1f]
  414592:	jecxz  0x4145fe
  414594:	daa    
  414595:	and    BYTE PTR [eax-0x73],0x77
  414599:	mov    esp,ebp
  41459b:	push   ss
  41459c:	dec    esp
  41459d:	loop   0x41451f
  41459f:	repnz dec esi
  4145a1:	loopne 0x4145c1
  4145a3:	jbe    0x4145a8
  4145a5:	call   0x23f3dcb2
  4145aa:	dec    ecx
  4145ab:	inc    edx
  4145ac:	cmp    eax,0x68688900
  4145b1:	aam    0x54
  4145b3:	sbb    BYTE PTR fs:[ecx+0x765cff73],bl
  4145ba:	and    al,0x19
  4145bc:	mov    ebp,0xd5d72a03
  4145c1:	cli    
  4145c2:	pop    ds
  4145c3:	out    dx,al
  4145c4:	and    cl,BYTE PTR [edi]
  4145c6:	in     eax,0x6c
  4145c8:	cmp    eax,0x51741e3e
  4145cd:	sub    DWORD PTR [edi],0xf044210a
  4145d3:	cmp    DWORD PTR [edx-0xe],esi
  4145d6:	pop    ecx
  4145d7:	adc    ecx,DWORD PTR [eax-0x225943d3]
  4145dd:	popa   
  4145de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145df:	or     eax,0xd31c2360
  4145e4:	pop    esi
  4145e5:	popa   
  4145e6:	pop    edi
  4145e7:	ret    
  4145e8:	inc    ebx
  4145e9:	cmp    BYTE PTR [edx],ch
  4145eb:	int    0xab
  4145ed:	or     DWORD PTR [esp+ecx*4+0x61],esp
  4145f1:	xchg   ebp,eax
  4145f2:	add    BYTE PTR ss:[edx+0x550cd9d5],dl
  4145f9:	mov    ebp,0xb104cee8
  4145fe:	stos   BYTE PTR es:[edi],al
  4145ff:	xchg   esp,eax
  414600:	bound  ebp,QWORD PTR [esi-0x77]
  414603:	stc    
  414604:	sub    al,0xc
  414606:	sbb    DWORD PTR [esi],ebp
  414608:	cmp    al,0x7d
  41460a:	dec    ebp
  41460b:	mov    WORD PTR [edi+ecx*2+0x212f6c1d],cs
  414612:	jb     0x41461d
  414614:	int    0xae
  414616:	sub    al,0x21
  414618:	sbb    esp,DWORD PTR ds:0x7f99b0cc
  41461e:	dec    ebp
  41461f:	shl    BYTE PTR [eax+eiz*8],cl
  414622:	lods   al,BYTE PTR ds:[esi]
  414623:	data16 scas al,BYTE PTR es:[edi]
  414625:	inc    edi
  414626:	cmp    BYTE PTR [edx],ah
  414628:	aam    0xd7
  41462a:	jo     0x4145d0
  41462c:	jno    0x414606
  41462e:	cmp    DWORD PTR [ebx+0x1f9cfdf4],esp
  414634:	sub    esp,DWORD PTR ss:[ecx]
  414637:	repz add ebx,DWORD PTR [eax+0x535f3e07]
  41463e:	cli    
  41463f:	aam    0xc7
  414641:	or     ah,BYTE PTR [ebx+0x61]
  414644:	xor    eax,0xa8a58007
  414649:	jge    0x4146aa
  41464b:	mov    BYTE PTR [edx+0x1b0581a9],bl
  414651:	mov    dh,0x5c
  414653:	sahf   
  414654:	xchg   ebx,eax
  414655:	std    
  414656:	test   eax,0x2d9dd96
  41465b:	shr    DWORD PTR [ecx+ecx*4+0x11db4bae],cl
  414662:	(bad)  
  414664:	stc    
  414665:	mov    edx,0xbbd43e63
  41466a:	lods   al,BYTE PTR cs:[esi]
  41466c:	xchg   ebx,eax
  41466d:	push   edx
  41466e:	lods   al,BYTE PTR ds:[esi]
  41466f:	mov    eax,ebx
  414671:	mov    esp,0xc253e2a4
  414676:	test   esi,eax
  414678:	mov    WORD PTR [ecx+0x1508a9d],cs
  41467e:	mov    cl,0x43
  414680:	pop    ss
  414681:	push   0x6c4c79cc
  414686:	dec    ebp
  414687:	(bad)  
  414688:	ffreep st(2)
  41468a:	inc    edi
  41468b:	jmp    0xa1ea:0x41447343
  414692:	mov    bh,0x78
  414694:	rcl    BYTE PTR [ebx+0x41784109],cl
  41469a:	pop    eax
  41469b:	popf   
  41469c:	inc    esi
  41469d:	sbb    BYTE PTR [ecx+0x34],al
  4146a0:	inc    ebx
  4146a1:	push   eax
  4146a2:	inc    DWORD PTR [edi+0xd]
  4146a5:	in     eax,0x27
  4146a7:	retf   
  4146a8:	add    al,0xab
  4146aa:	sub    eax,0xb0e762f1
  4146af:	imul   DWORD PTR [ecx-0x1a210494]
  4146b5:	dec    esp
  4146b6:	jmp    0x992:0x496b95b3
  4146bd:	jbe    0x414728
  4146bf:	xchg   esi,eax
  4146c0:	aas    
  4146c1:	mov    ch,bl
  4146c3:	push   edx
  4146c4:	push   edx
  4146c5:	xchg   edx,eax
  4146c6:	fldcw  WORD PTR [ebp+ebx*2+0x61]
  4146ca:	xchg   ecx,eax
  4146cb:	mov    al,0xb9
  4146cd:	retf   
  4146ce:	dec    edi
  4146cf:	push   eax
  4146d0:	mov    ds:0x8fe35a20,eax
  4146d5:	je     0x4146ce
  4146d7:	push   DWORD PTR [ebx]
  4146d9:	data16 in al,dx
  4146db:	retf   0xb870
  4146de:	ret    0xa705
  4146e1:	ss pop edx
  4146e3:	mov    al,ds:0xc9ab7bbb
  4146e8:	jecxz  0x414717
  4146ea:	or     cl,BYTE PTR ss:[edx+esi*2-0x486ebda4]
  4146f2:	push   0xffffff92
  4146f4:	fsubrp st(6),st
  4146f6:	push   0xffffffc2
  4146f8:	push   0x52
  4146fa:	(bad)  
  4146fb:	arpl   dx,di
  4146fd:	pop    edx
  4146fe:	push   esp
  4146ff:	lds    edx,FWORD PTR [edi]
  414701:	js     0x41469e
  414703:	dec    ebp
  414704:	fadd   DWORD PTR [edx+0x16eeef1f]
  41470a:	div    BYTE PTR [ebx+eax*8+0x8]
  41470e:	add    al,BYTE PTR [ebx-0x14142c5b]
  414714:	into   
  414715:	out    dx,eax
  414716:	ds dec ebx
  414718:	xor    DWORD PTR [ebp-0x12ffe75d],edx
  41471e:	inc    esi
  41471f:	mov    eax,0x561d1428
  414724:	mov    ch,BYTE PTR [edi]
  414726:	pop    ds
  414727:	push   ds
  414728:	(bad)  
  41472c:	sti    
  41472d:	std    
  41472e:	je     0x414735
  414730:	push   ecx
  414731:	sbb    BYTE PTR [edx*4-0x7cf0209d],ah
  414738:	shr    ecx,1
  41473a:	sub    BYTE PTR [edi+eiz*4-0x64b5e757],dl
  414741:	and    al,0x8b
  414743:	xchg   ch,al
  414745:	outs   dx,DWORD PTR ds:[esi]
  414746:	pop    edi
  414747:	xor    cl,BYTE PTR [ebp+0x6c]
  41474a:	rcr    bl,1
  41474c:	imul   ebx,esp,0xffffffc2
  41474f:	dec    edx
  414750:	loopne 0x4147bc
  414752:	ret    
  414753:	jb     0x414705
  414755:	xchg   DWORD PTR [esi+ecx*1-0x2f76a17d],eax
  41475c:	sbb    al,0x69
  41475e:	sbb    eax,DWORD PTR [eax-0x4c515f8c]
  414764:	stos   DWORD PTR es:[edi],eax
  414765:	test   al,0x28
  414767:	jne    0x414770
  414769:	jmp    0xec8fa5dc
  41476e:	mov    cl,0x9e
  414770:	ret    
  414771:	and    ecx,DWORD PTR [ebx+0x50bb0e97]
  414777:	or     BYTE PTR [ecx-0x7e2fe659],cl
  41477d:	sub    BYTE PTR [edi+0x6d7cfee2],bl
  414783:	adc    DWORD PTR [edx-0x280c0a0f],edx
  414789:	inc    ecx
  41478a:	rcl    DWORD PTR [ecx+0x438be30a],cl
  414790:	or     cl,BYTE PTR [ecx+0x172f3abf]
  414796:	and    al,0x47
  414798:	xchg   BYTE PTR [eax],dl
  41479a:	fmulp  st(3),st
  41479c:	push   edi
  41479d:	mov    bl,0xc
  41479f:	mov    esp,fs
  4147a1:	loop   0x4147af
  4147a3:	xlat   BYTE PTR ds:[ebx]
  4147a4:	stc    
  4147a5:	adc    eax,0x8c57c714
  4147aa:	mov    ds:0xcac3fd24,al
  4147af:	jmp    0x496abe60
  4147b4:	xor    BYTE PTR [edi-0x3b],ah
  4147b7:	aaa    
  4147b8:	add    BYTE PTR [edx-0x16],ch
  4147bb:	jp     0x414781
  4147bd:	out    0x90,al
  4147bf:	sbb    DWORD PTR [eax-0x33c0e9c8],ebx
  4147c5:	push   ds
  4147c6:	(bad)  
  4147c7:	loope  0x41478e
  4147c9:	mov    al,ds:0xed775d
  4147ce:	nop
  4147cf:	push   es
  4147d0:	cmp    ah,bl
  4147d2:	mov    ds:0xcc2d7836,al
  4147d7:	xchg   ecx,eax
  4147d8:	icebp  
  4147d9:	xor    dl,bh
  4147db:	popa   
  4147dc:	jmp    0xb52a:0xf850da9e
  4147e3:	repnz imul esp,DWORD PTR [ebx],0x21
  4147e7:	xor    DWORD PTR [edi],edi
  4147e9:	mov    bh,0xf
  4147eb:	lahf   
  4147ec:	jmp    FWORD PTR [esi-0x14]
  4147ef:	iret   
  4147f0:	dec    ebx
  4147f1:	std    
  4147f2:	sbb    esp,ebp
  4147f4:	into   
  4147f5:	out    0xe6,al
  4147f7:	popf   
  4147f8:	fcomp  QWORD PTR [esi+0x66]
  4147fb:	add    al,0x2d
  4147fd:	mov    eax,0xc145d6e1
  414802:	les    edi,FWORD PTR [edi]
  414804:	lods   al,BYTE PTR ds:[esi]
  414805:	in     al,dx
  414806:	xchg   esp,eax
  414807:	mov    ah,0xc3
  414809:	sbb    BYTE PTR [edx],ah
  41480b:	mov    ss:0x4d5728d3,al
  414811:	adc    al,0x68
  414813:	inc    edx
  414814:	(bad)  [ebx-0x35]
  414817:	pop    esp
  414818:	test   cl,ch
  41481a:	push   0x29
  41481c:	loopne 0x414813
  41481e:	sbb    edx,DWORD PTR [eax+ecx*4+0x7b]
  414822:	sbb    esp,DWORD PTR [edx-0xa]
  414825:	fwait
  414826:	sbb    ch,BYTE PTR [eax+0x386fcb1]
  41482c:	sbb    DWORD PTR [edx-0x34],ebp
  41482f:	cmc    
  414830:	xor    esi,DWORD PTR [edi-0x41e82291]
  414836:	pop    ebp
  414837:	push   ss
  414838:	push   ebp
  414839:	push   ss
  41483a:	adc    DWORD PTR [ebx+0x1e],0xd7a97884
  414841:	pushf  
  414842:	push   ds
  414843:	inc    esi
  414844:	push   ds
  414845:	cmc    
  414846:	jp     0x41485d
  414848:	adc    eax,0x2f48c38b
  41484d:	jle    0x414822
  41484f:	loopne 0x4148b9
  414851:	dec    ebx
  414852:	or     eax,0xba804904
  414857:	and    al,0x3b
  414859:	pop    es
  41485a:	out    dx,eax
  41485b:	dec    ebp
  41485c:	sbb    ch,dl
  41485e:	nop
  41485f:	icebp  
  414860:	push   ds
  414861:	aad    0xa2
  414863:	in     eax,dx
  414864:	popf   
  414865:	(bad)  
  414866:	fsubr  QWORD PTR [ecx*8+0x1bd2af37]
  41486d:	sti    
  41486e:	loop   0x41487d
  414870:	shl    BYTE PTR [ebx],0x7c
  414873:	int    0x62
  414875:	ror    ebx,cl
  414877:	jge    0x414850
  414879:	mov    ch,0xd7
  41487b:	rcl    BYTE PTR [ebx],cl
  41487d:	neg    esp
  41487f:	push   edi
  414880:	push   ss
  414881:	xor    eax,0x476d4a2
  414886:	pop    ss
  414887:	push   ecx
  414888:	test   eax,0xa6cc5e07
  41488d:	xchg   esp,eax
  41488e:	fld    QWORD PTR [ecx+0x400eea63]
  414894:	stos   DWORD PTR es:[edi],eax
  414895:	or     esi,DWORD PTR [esi+0x341fe5d4]
  41489b:	mov    edi,0x2fe0dcfa
  4148a0:	mov    esp,0xe9787edc
  4148a5:	cmc    
  4148a6:	imul   ebx,DWORD PTR [ebx-0x71],0xffffffce
  4148aa:	or     ebp,esi
  4148ac:	push   cs
  4148ad:	push   eax
  4148ae:	sbb    ebp,DWORD PTR [ecx+ebx*4-0x2]
  4148b2:	pop    eax
  4148b3:	jb     0x4148aa
  4148b5:	loopne 0x414882
  4148b7:	mov    ds:0xef933f3,eax
  4148bc:	jmp    0xca07:0x20041ec2
  4148c3:	dec    eax
  4148c4:	leave  
  4148c5:	fcomp  QWORD PTR ds:0xf352977
  4148cb:	jno    0x414884
  4148cd:	xor    bl,BYTE PTR [ecx+0x991e8cc]
  4148d3:	or     eax,0x65684d5a
  4148d8:	mov    edi,DWORD PTR [eax+0x1a168cbf]
  4148de:	sub    al,0xac
  4148e0:	xchg   ecx,eax
  4148e1:	cmc    
  4148e2:	push   si
  4148e4:	cmp    al,0x60
  4148e6:	push   edx
  4148e7:	cmp    al,0x31
  4148e9:	test   edi,ebx
  4148eb:	add    DWORD PTR [eax+0x703057f0],esp
  4148f1:	dec    bl
  4148f3:	test   ch,0x83
  4148f6:	les    edx,FWORD PTR [ebx-0x5979b880]
  4148fc:	push   ss
  4148fd:	arpl   si,si
  4148ff:	test   al,0x3
  414901:	pop    ecx
  414902:	or     eax,0x2d309880
  414907:	or     BYTE PTR [ebp+edx*4-0x1865bc6e],cl
  41490e:	(bad)  
  41490f:	push   eax
  414910:	adc    bh,BYTE PTR [edx+ebx*2+0x74]
  414914:	test   BYTE PTR [eax-0xd],ah
  414917:	pop    edi
  414918:	mov    edx,DWORD PTR es:[edi-0x6ed1327]
  41491f:	adc    BYTE PTR [esi+0x5db29d1a],ch
  414925:	mov    eax,ds:0xccdf6020
  41492a:	retf   0x3418
  41492d:	dec    edx
  41492e:	jmp    0x4148dc
  414930:	jmp    0x4149a1
  414932:	sbb    eax,0xcb56481c
  414937:	ins    BYTE PTR es:[edi],dx
  414938:	jl     0x4148f5
  41493a:	cmp    eax,0x43d5084d
  41493f:	imul   ebp,DWORD PTR [esi-0x5db14423],0x3957986e
  414949:	test   esp,0x22728b96
  41494f:	(bad)  
  414950:	out    dx,eax
  414951:	push   ds
  414952:	push   ss
  414953:	dec    eax
  414954:	jp     0x41494c
  414956:	lods   eax,DWORD PTR ds:[esi]
  414957:	pop    esi
  414958:	xchg   ebp,eax
  414959:	test   BYTE PTR [ebx],bh
  41495b:	adc    eax,0xa792e330
  414960:	xor    al,0xfe
  414962:	fistp  QWORD PTR [eax-0x7]
  414965:	dec    ebx
  414966:	lock xor esp,eax
  414969:	sub    eax,0x5a31aedc
  41496e:	pop    ecx
  41496f:	dec    esp
  414970:	icebp  
  414971:	pop    ebp
  414972:	enter  0x8b81,0x7d
  414976:	jb     0x414987
  414978:	and    eax,0xa302d555
  41497d:	xchg   ebx,eax
  41497e:	adc    esp,eax
  414980:	jg     0x414929
  414982:	shl    dh,1
  414984:	mov    al,ds:0x3cabe4ea
  414989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41498a:	rcl    BYTE PTR [ebp-0x6],0x32
  41498e:	add    BYTE PTR [esi+0x143fc62a],0x36
  414995:	fadd   QWORD PTR [edx+0x5c507d17]
  41499b:	pop    esi
  41499c:	xor    al,0x27
  41499e:	mov    ecx,0xf415791f
  4149a3:	not    BYTE PTR [eax-0x57]
  4149a6:	sub    DWORD PTR [ebx],ebx
  4149a8:	out    0x42,eax
  4149aa:	mov    esi,0x6a84d006
  4149af:	push   es
  4149b0:	mov    dl,0x8
  4149b2:	mov    dl,0xe1
  4149b4:	add    esp,DWORD PTR [ecx-0x7f]
  4149b7:	lds    edi,FWORD PTR [ebx]
  4149b9:	int3   
  4149ba:	(bad)  
  4149bb:	fs push esp
  4149bd:	arpl   WORD PTR [ebx+0x17],si
  4149c0:	jg     0x414a0d
  4149c2:	pushf  
  4149c3:	mov    al,gs:0xe1d643d5
  4149c9:	xor    DWORD PTR [esi+0x6],0x28
  4149cd:	push   edx
  4149ce:	lods   eax,DWORD PTR ds:[esi]
  4149cf:	faddp  st(4),st
  4149d1:	aas    
  4149d2:	inc    ecx
  4149d3:	leave  
  4149d4:	cmp    edx,DWORD PTR [ebx-0x766cb31]
  4149da:	pop    esi
  4149db:	xor    dl,BYTE PTR [ebx-0x43]
  4149de:	pop    ss
  4149df:	mov    ebp,0xc67c15bb
  4149e4:	mov    ecx,0x97faabfd
  4149e9:	das    
  4149ea:	(bad)  [edi]
  4149ec:	pop    ebp
  4149ed:	fwait
  4149ee:	repz cmp dl,BYTE PTR [edi]
  4149f1:	jle    0x414a2b
  4149f3:	jg     0x414988
  4149f5:	jp     0x41498e
  4149f7:	cs int 0x6a
  4149fa:	fucom  st(0)
  4149fc:	pop    esi
  4149fd:	test   eax,0x8fe3cec7
  414a02:	sar    DWORD PTR [edi-0x285565b3],0x22
  414a09:	ins    BYTE PTR es:[edi],dx
  414a0a:	dec    edi
  414a0b:	fist   WORD PTR [ebp-0x121fbadf]
  414a11:	mov    al,0x40
  414a13:	or     eax,0xa4495c04
  414a18:	mov    bl,0x5f
  414a1a:	nop
  414a1b:	out    0xfa,al
  414a1d:	pop    eax
  414a1e:	inc    eax
  414a1f:	aad    0xa1
  414a21:	mov    dl,0xc
  414a23:	aaa    
  414a24:	rol    eax,cl
  414a26:	ins    DWORD PTR es:[edi],dx
  414a27:	mov    ch,0xfb
  414a29:	sub    eax,0xb1a66d77
  414a2e:	sbb    edi,0x37
  414a31:	sbb    BYTE PTR [esi],dl
  414a33:	push   ecx
  414a34:	and    eax,ecx
  414a36:	mov    dl,0x18
  414a38:	inc    edi
  414a39:	sbb    BYTE PTR [esi],dl
  414a3b:	scas   al,BYTE PTR es:[edi]
  414a3c:	xor    al,dh
  414a3e:	mov    ch,0xf3
  414a40:	cwde   
  414a41:	xchg   ebx,eax
  414a42:	clc    
  414a43:	ret    
  414a44:	xchg   ecx,eax
  414a45:	pop    ds
  414a46:	mov    eax,ds:0x3542f868
  414a4b:	pop    esi
  414a4c:	lahf   
  414a4d:	aaa    
  414a4e:	pop    edx
  414a4f:	shl    DWORD PTR [esi-0x4fd01845],0xb6
  414a56:	(bad)  
  414a57:	iret   
  414a58:	sbb    eax,0xf8a432f4
  414a5d:	imul   bh
  414a5f:	xchg   esi,eax
  414a60:	sahf   
  414a61:	cld    
  414a62:	xor    al,0x5a
  414a64:	or     DWORD PTR [ebx],esp
  414a66:	mov    dh,0x0
  414a68:	dec    edx
  414a69:	cs (bad) 
  414a6b:	jge    0x414a78
  414a6d:	pop    es
  414a6e:	cld    
  414a6f:	mov    bl,0xd
  414a71:	adc    BYTE PTR fs:[edx+eiz*4],0xe
  414a76:	in     al,0xe3
  414a78:	adc    esp,DWORD PTR [eax]
  414a7a:	call   0x4c9b:0x6092d404
  414a81:	jns    0x414a15
  414a83:	sub    DWORD PTR [esi-0x22],esi
  414a86:	popa   
  414a87:	mov    ds:0xe94b6613,eax
  414a8c:	(bad)  
  414a8d:	cmp    ah,cl
  414a8f:	ins    DWORD PTR es:[edi],dx
  414a90:	data16 jp 0x414aa5
  414a93:	cmc    
  414a94:	xor    esp,DWORD PTR [ebp+0x2e]
  414a97:	sbb    al,0xdb
  414a99:	xchg   edx,eax
  414a9a:	(bad)  
  414a9b:	mov    edi,0x717ae77d
  414aa0:	and    BYTE PTR [edi],ch
  414aa2:	vmwrite esp,DWORD PTR [ebx+edx*8-0x59]
  414aa7:	call   0x3e69ca9d
  414aac:	cmp    al,BYTE PTR [ebx+0x325f7bca]
  414ab2:	or     eax,0x124512c8
  414ab7:	out    0xca,al
  414ab9:	out    dx,al
  414aba:	xor    ah,bh
  414abc:	or     dh,dh
  414abe:	mov    BYTE PTR [esi],dh
  414ac0:	sbb    DWORD PTR [eax-0x14],0xd8305049
  414ac7:	addr16 mov dl,0x9c
  414aca:	repnz mov esp,cs
  414acd:	adc    eax,DWORD PTR [esi-0x1b]
  414ad0:	fwait
  414ad1:	and    esp,esp
  414ad3:	popf   
  414ad4:	ins    DWORD PTR es:[edi],dx
  414ad5:	(bad)  
  414ad6:	push   ebx
  414ad7:	push   ebp
  414ad8:	mov    cl,0x50
  414ada:	jmp    0x53fd6bef
  414adf:	loope  0x414ac9
  414ae1:	or     ch,BYTE PTR [ebp+eax*4+0xe431d80]
  414ae8:	add    ah,BYTE PTR [ebx]
  414aea:	addr16 je 0x414b0e
  414aed:	stos   BYTE PTR es:[edi],al
  414aee:	and    eax,0x844259e8
  414af3:	xchg   DWORD PTR [ecx],ecx
  414af5:	inc    ebx
  414af6:	pop    ss
  414af7:	fwait
  414af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af9:	push   eax
  414afa:	cmp    ch,ah
  414afc:	pusha  
  414afd:	add    bl,bl
  414aff:	adc    al,0xb0
  414b01:	outs   dx,DWORD PTR ds:[esi]
  414b02:	sbb    dh,BYTE PTR [ecx+0x60d03ede]
  414b08:	out    dx,al
  414b09:	sahf   
  414b0a:	mov    WORD PTR [edx+0x5c097b10],es
  414b10:	jle    0x414af4
  414b12:	mov    ds:0x3ece39d7,al
  414b17:	test   DWORD PTR [edi],ebp
  414b19:	das    
  414b1a:	cmc    
  414b1b:	or     dh,0xf9
  414b1e:	rcl    DWORD PTR [ebx-0x5364fe57],1
  414b24:	ins    BYTE PTR es:[edi],dx
  414b25:	add    al,0x24
  414b27:	pop    edx
  414b28:	sub    DWORD PTR [edi-0x1d],ebp
  414b2b:	neg    BYTE PTR [edi-0x78]
  414b2e:	out    0xca,al
  414b30:	or     eax,0x75900b7
  414b35:	bound  edi,QWORD PTR [ecx]
  414b37:	mov    ch,0xfb
  414b39:	fsub   st(1),st
  414b3b:	in     eax,0x58
  414b3d:	dec    ebp
  414b3e:	jns    0x414b6a
  414b40:	call   0xab4b1107
  414b45:	fs dec eax
  414b47:	shl    dl,0xfb
  414b4a:	push   ebx
  414b4b:	mov    ds:0x781a91d5,al
  414b50:	xor    ch,ah
  414b52:	or     bl,al
  414b54:	fdivr  QWORD PTR [ebx+0x65c1d0b0]
  414b5a:	sbb    BYTE PTR [esi-0x3e],bh
  414b5d:	sub    dl,BYTE PTR [esi-0x73]
  414b60:	jmp    0x414b56
  414b62:	popf   
  414b63:	scas   eax,DWORD PTR es:[edi]
  414b64:	mov    esp,0xd29ec96c
  414b69:	cmp    DWORD PTR [ebx-0xa],edi
  414b6c:	xchg   ecx,eax
  414b6d:	sbb    al,BYTE PTR [eax+ebp*1+0x68]
  414b71:	lock repnz (bad) 
  414b74:	adc    ecx,ebx
  414b76:	sbb    eax,DWORD PTR [ecx+0x48d82e07]
  414b7c:	aas    
  414b7d:	or     ecx,DWORD PTR [esi]
  414b7f:	pop    ebp
  414b80:	cmp    esp,edx
  414b82:	mov    WORD PTR [esi-0x42a8b4b7],?
  414b88:	cmc    
  414b89:	sub    cl,dl
  414b8b:	xchg   ebx,eax
  414b8c:	sbb    eax,0xd56e0a2f
  414b91:	sbb    DWORD PTR [edi],esp
  414b93:	mov    bl,0x90
  414b95:	sub    edi,ebp
  414b97:	adc    al,0x74
  414b99:	ins    BYTE PTR es:[edi],dx
  414b9a:	mov    ds:0xf30bad5a,al
  414b9f:	out    0xb3,al
  414ba1:	mov    cl,BYTE PTR [edi+0x38a6be5c]
  414ba7:	int    0x83
  414ba9:	lahf   
  414baa:	jle    0x414b3b
  414bac:	es into 
  414bae:	cmp    DWORD PTR [edx],0x821cd4ce
  414bb4:	pop    esi
  414bb5:	sub    BYTE PTR [ecx-0x62],ah
  414bb8:	pop    ds
  414bb9:	xchg   edi,eax
  414bba:	fmul   DWORD PTR ds:0x9c2e5e0a
  414bc0:	fcomp  QWORD PTR [eax+0x5d]
  414bc3:	xchg   DWORD PTR [ebx],edi
  414bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc7:	or     BYTE PTR [edx+ebx*1-0x25],0x91
  414bcc:	in     eax,dx
  414bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bce:	inc    eax
  414bcf:	mov    ch,0xdf
  414bd1:	and    esi,ebp
  414bd3:	lea    esp,[eax+eiz*2-0x48594427]
  414bda:	pop    edi
  414bdb:	and    edi,ebx
  414bdd:	xor    eax,0x3560cbfa
  414be2:	dec    ebp
  414be3:	mov    ah,0xeb
  414be5:	jecxz  0x414bc7
  414be7:	push   ebp
  414be8:	(bad)  
  414be9:	sub    edi,DWORD PTR [edi]
  414beb:	add    DWORD PTR [esi+0xb],ebp
  414bee:	rcl    DWORD PTR [esi],cl
  414bf0:	add    ah,dh
  414bf2:	mov    WORD PTR [ebx+0x54],fs
  414bf5:	cs test edi,0x10c92570
  414bfc:	push   ebp
  414bfd:	push   ecx
  414bfe:	inc    ecx
  414bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c00:	lea    esi,[edx-0x12]
  414c03:	adc    DWORD PTR [ebp-0x36],esi
  414c06:	xchg   DWORD PTR [esi-0x64],ecx
  414c09:	mov    dh,0x71
  414c0b:	inc    esp
  414c0c:	or     BYTE PTR [ebx+eiz*1-0x41],0xc4
  414c11:	pop    ebp
  414c12:	ja     0x414c0b
  414c14:	pop    eax
  414c15:	mov    DWORD PTR es:[edi],esi
  414c18:	sub    BYTE PTR [eax-0x3d9edac5],al
  414c1e:	aad    0x5a
  414c20:	xchg   ebp,eax
  414c21:	and    dh,BYTE PTR [edx]
  414c23:	pcmpeqd mm1,QWORD PTR [ecx]
  414c26:	call   0xe95c:0xc7cfaf61
  414c2d:	mov    eax,0xf4b76e9f
  414c32:	gs aam 0xfd
  414c35:	mov    eax,0xb20240e6
  414c3a:	stc    
  414c3b:	ins    BYTE PTR es:[edi],dx
  414c3c:	dec    ecx
  414c3d:	adc    bh,BYTE PTR [eax-0x3b]
  414c40:	je     0x414bde
  414c42:	call   0x35f0:0xfbffa2a6
  414c49:	adc    al,0x47
  414c4b:	or     DWORD PTR [ebx],0x1e
  414c4e:	dec    esi
  414c4f:	mov    eax,ds:0xbca83e4d
  414c54:	inc    edi
  414c55:	push   edi
  414c56:	jo     0x414c60
  414c58:	mov    DWORD PTR [esi-0x5d],0xf9e664ff
  414c5f:	xlat   BYTE PTR ds:[ebx]
  414c60:	stos   BYTE PTR es:[edi],al
  414c61:	xor    ebp,ecx
  414c63:	and    esp,edi
  414c65:	scas   al,BYTE PTR es:[edi]
  414c66:	sti    
  414c67:	add    BYTE PTR ds:0xed5d0d4f,ch
  414c6d:	pop    ds
  414c6e:	or     edx,ecx
  414c70:	or     esi,DWORD PTR [edi]
  414c72:	stc    
  414c73:	mov    BYTE PTR [edi],dh
  414c75:	sub    BYTE PTR [ecx+0x5],bh
  414c78:	inc    ebx
  414c79:	mov    esp,0xc7da2444
  414c7e:	cli    
  414c7f:	mov    ebx,0x5c528b6d
  414c84:	jecxz  0x414c19
  414c86:	mov    WORD PTR [eax+ebx*1-0x1e],es
  414c8a:	fwait
  414c8b:	cli    
  414c8c:	sti    
  414c8d:	jmp    0x69a6212a
  414c92:	and    eax,0x3a27fba3
  414c97:	aas    
  414c98:	pop    edx
  414c99:	sti    
  414c9a:	lods   al,BYTE PTR ds:[esi]
  414c9b:	cmp    eax,0x3a92d25a
  414ca0:	push   esi
  414ca1:	xor    ebx,DWORD PTR [ebx-0x52]
  414ca4:	test   eax,0x5c052cd0
  414ca9:	cdq    
  414caa:	jne    0x414cf7
  414cac:	jmp    DWORD PTR [esi-0x44]
  414caf:	sbb    DWORD PTR [esi+0x1c],0x74
  414cb3:	xchg   esp,eax
  414cb4:	push   cs
  414cb5:	or     al,0x23
  414cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb8:	lods   eax,DWORD PTR ds:[esi]
  414cb9:	or     DWORD PTR [eax],esp
  414cbb:	scas   eax,DWORD PTR es:[edi]
  414cbc:	sahf   
  414cbd:	aam    0x11
  414cbf:	into   
  414cc0:	adc    al,0xd8
  414cc2:	or     esp,ebp
  414cc4:	int3   
  414cc5:	push   esp
  414cc6:	xor    esp,DWORD PTR [eax+0x4f]
  414cc9:	call   0x56943440
  414cce:	jecxz  0x414d32
  414cd0:	(bad)  
  414cd1:	mov    bh,0x80
  414cd3:	cs cmp eax,0x38325477
  414cd9:	inc    ecx
  414cda:	push   edx
  414cdb:	shr    DWORD PTR [edi],0x2a
  414cde:	cmp    esi,ecx
  414ce0:	xor    DWORD PTR ds:0xb6aee34c,eax
  414ce6:	pop    esp
  414ce7:	add    al,0x84
  414ce9:	ss xor al,0x9d
  414cec:	nop
  414ced:	ret    
  414cee:	nop
  414cef:	rcr    ebp,cl
  414cf1:	stos   DWORD PTR es:[edi],eax
  414cf2:	xor    eax,0x64db5c97
  414cf7:	or     eax,0x64439302
  414cfc:	pop    esp
  414cfd:	dec    esp
  414cfe:	pop    edx
  414cff:	add    bl,bh
  414d01:	push   es
  414d02:	clc    
  414d03:	(bad)  
  414d04:	and    ah,BYTE PTR [eax+eiz*8-0x15]
  414d08:	das    
  414d09:	inc    edi
  414d0a:	shl    BYTE PTR [esi-0x48daec88],1
  414d10:	push   edx
  414d11:	cmp    eax,esp
  414d13:	test   bl,ah
  414d15:	push   es
  414d16:	jg     0x414d44
  414d18:	push   ebp
  414d19:	or     BYTE PTR [ebx-0x3d],ch
  414d1c:	mov    ch,BYTE PTR [esi+0x5c]
  414d1f:	xor    edi,eax
  414d21:	mul    dl
  414d23:	mov    ds:0xae5c7ec2,al
  414d28:	test   eax,0x5c5f5632
  414d2d:	cli    
  414d2e:	mov    esi,0xa708ed5e
  414d33:	mov    al,0x27
  414d35:	and    eax,0x39d626d
  414d3a:	or     dh,BYTE PTR [eax]
  414d3c:	int    0xf
  414d3e:	or     DWORD PTR [eax-0x3065b65d],edx
  414d44:	sbb    BYTE PTR [esi],ch
  414d46:	daa    
  414d47:	jle    0x414cea
  414d49:	mov    ds:0x92e43e66,al
  414d4e:	aaa    
  414d4f:	add    eax,0xfbca83c3
  414d54:	inc    ecx
  414d55:	push   ds
  414d56:	sahf   
  414d57:	xlat   BYTE PTR ds:[ebx]
  414d58:	sub    BYTE PTR [ecx+0x9],dl
  414d5b:	std    
  414d5c:	dec    edi
  414d5d:	mov    dh,0x7f
  414d5f:	in     eax,0x9c
  414d61:	in     eax,0xbe
  414d63:	dec    esp
  414d64:	loop   0x414d3f
  414d66:	in     al,0x28
  414d68:	pop    edi
  414d69:	xchg   ebx,eax
  414d6a:	cmp    al,0xf
  414d6c:	xchg   ah,cl
  414d6e:	enter  0xdb9a,0x5d
  414d72:	add    esi,DWORD PTR [edi-0x45f0117f]
  414d78:	lahf   
  414d79:	es jo  0x414dd3
  414d7c:	stos   DWORD PTR es:[edi],eax
  414d7d:	push   ds
  414d7e:	fidiv  DWORD PTR [esi-0x33]
  414d81:	jnp    0x414db4
  414d83:	jnp    0x414e00
  414d85:	pop    ebx
  414d86:	sub    ch,BYTE PTR [ecx+esi*2+0x1d59be4c]
  414d8d:	out    dx,eax
  414d8e:	jecxz  0x414db8
  414d90:	mov    ecx,0xc4d8a2ed
  414d95:	xchg   BYTE PTR [esi-0x174b4913],dl
  414d9b:	mov    edi,0x836b75d1
  414da0:	cli    
  414da1:	ret    
  414da2:	loop   0x414d75
  414da4:	and    ch,BYTE PTR [ebx-0xcbe0439]
  414daa:	mov    dh,0x0
  414dac:	inc    ebx
  414dad:	in     eax,0x3a
  414daf:	dec    edx
  414db0:	sbb    BYTE PTR [ecx+0x22],dl
  414db3:	test   DWORD PTR [eax+0x2e],esi
  414db6:	lods   eax,DWORD PTR cs:[esi]
  414db8:	enter  0x7765,0x45
  414dbc:	mov    WORD PTR ds:0x34aeeee6,fs
  414dc2:	mul    DWORD PTR [ebx+ecx*2]
  414dc5:	retf   0x3c6c
  414dc8:	push   ss
  414dc9:	repz ja 0x414d6c
  414dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dcd:	or     DWORD PTR [eax+0x4514d6e7],ecx
  414dd3:	dec    DWORD PTR [ecx-0x6d5dd82e]
  414dd9:	ret    
  414dda:	scas   eax,DWORD PTR es:[edi]
  414ddb:	int    0x36
  414ddd:	aaa    
  414dde:	mov    edi,0xf7f32cae
  414de3:	repnz sbb DWORD PTR [eax+ecx*8+0x57ff7f41],edx
  414deb:	and    al,0x38
  414ded:	jnp    0x414d8e
  414def:	mov    esp,0x676514c6
  414df4:	jl     0x414e70
  414df6:	sub    DWORD PTR [edx],0x83cbcbfa
  414dfc:	fs or  eax,0x16d8f5a5
  414e02:	sbb    ah,bh
  414e04:	or     bh,bh
  414e06:	cmp    DWORD PTR [esi+0x52],esp
  414e09:	scas   eax,DWORD PTR es:[edi]
  414e0a:	sbb    ecx,edx
  414e0c:	pop    ds
  414e0d:	mov    esp,0xcfd2aab7
  414e12:	adc    BYTE PTR [edx],bl
  414e14:	or     ah,bl
  414e16:	sub    BYTE PTR [eax],bh
  414e18:	imul   ecx,DWORD PTR [eax],0xffffffb4
  414e1b:	out    dx,al
  414e1c:	popf   
  414e1d:	out    0xd7,eax
  414e1f:	mov    bh,BYTE PTR [ebx+0x38]
  414e22:	les    esp,FWORD PTR [ecx]
  414e24:	pop    esp
  414e25:	xchg   ecx,eax
  414e26:	in     eax,dx
  414e27:	aam    0x6f
  414e29:	imul   ecx
  414e2b:	or     DWORD PTR [edx],0xec1b2ca3
  414e31:	jnp    0x414e2c
  414e33:	and    ecx,DWORD PTR [ecx]
  414e35:	mov    edx,0x2423029f
  414e3a:	jle    0x414dc2
  414e3c:	enter  0x3050,0x66
  414e40:	dec    esi
  414e41:	in     al,dx
  414e42:	(bad)  
  414e43:	ror    ch,0xa1
  414e46:	sbb    bh,ah
  414e48:	mov    edi,0x13a79f13
  414e4d:	push   ecx
  414e4e:	scas   al,BYTE PTR es:[edi]
  414e4f:	arpl   WORD PTR [edi+eiz*8-0x63],bp
  414e53:	mov    al,ds:0x16bc53a6
  414e58:	pop    ss
  414e59:	ins    BYTE PTR es:[edi],dx
  414e5a:	mov    dl,0x7e
  414e5c:	jne    0x414ea3
  414e5e:	sub    al,0xdf
  414e60:	dec    ebp
  414e61:	(bad)  
  414e62:	push   0x5c
  414e64:	test   al,0x76
  414e66:	dec    esi
  414e67:	dec    eax
  414e68:	pop    es
  414e69:	xor    al,0xac
  414e6b:	shl    ch,1
  414e6d:	fisub  DWORD PTR [ebx-0x18]
  414e70:	fst    st(2)
  414e72:	loope  0x414e02
  414e74:	cli    
  414e75:	shl    DWORD PTR [ecx-0x4],cl
  414e78:	mov    ?,WORD PTR [edi+0x7c6053d8]
  414e7e:	cli    
  414e7f:	xor    ebx,DWORD PTR [ebx-0x67dbcfe8]
  414e85:	inc    ecx
  414e86:	fsubr  QWORD PTR [ebp+0x6a3d8805]
  414e8c:	inc    esp
  414e8d:	ret    
  414e8e:	inc    edx
  414e8f:	fsubr  st(0),st
  414e91:	pop    ebx
  414e92:	mov    ecx,0xffc0937e
  414e97:	mov    ds,edx
  414e99:	out    dx,al
  414e9a:	clc    
  414e9b:	fidivr DWORD PTR [edi-0x457fba0d]
  414ea1:	test   ah,al
  414ea3:	pop    edx
  414ea4:	or     dl,BYTE PTR [ebp-0x5b]
  414ea7:	fwait
  414ea8:	out    0xa2,eax
  414eaa:	mov    ds:0x41b149ce,eax
  414eaf:	mov    cl,0x1a
  414eb1:	inc    esi
  414eb2:	aaa    
  414eb3:	pop    ds
  414eb4:	imul   edi,DWORD PTR [ebx-0x297426f0],0x5437e071
  414ebe:	push   ebx
  414ebf:	rep ins BYTE PTR es:[edi],dx
  414ec1:	jno    0x414e4d
  414ec3:	fdivp  st(1),st
  414ec5:	mov    al,0x10
  414ec7:	mov    ecx,edi
  414ec9:	mov    eax,ds:0x28361b6e
  414ece:	in     eax,dx
  414ecf:	add    eax,0x8d8db8f
  414ed4:	mov    dh,0x24
  414ed6:	fdivr  QWORD PTR [edi+0x508e418b]
  414edc:	iret   
  414edd:	bound  esp,QWORD PTR [ebx+0x130cf1ef]
  414ee3:	icebp  
  414ee4:	fdivp  st(7),st
  414ee6:	test   eax,0xd9058d1
  414eeb:	cwde   
  414eec:	push   0x3809a2da
  414ef1:	sub    dl,BYTE PTR [ebx-0xa623a24]
  414ef7:	std    
  414ef8:	jp     0x414f55
  414efa:	les    edx,FWORD PTR [esi+0x46]
  414efd:	xchg   ebx,eax
  414efe:	loop   0x414f2f
  414f00:	adc    al,0xcd
  414f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f03:	inc    edx
  414f04:	cmp    BYTE PTR [ebx],al
  414f06:	dec    esi
  414f07:	or     al,0xa0
  414f09:	mov    ?,WORD PTR [ebp+0x47]
  414f0c:	and    cl,0x76
  414f0f:	add    al,0x56
  414f11:	pop    ss
  414f12:	stc    
  414f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f14:	push   ds
  414f15:	pop    es
  414f16:	mov    esp,0x7593a954
  414f1b:	push   es
  414f1c:	sbb    dl,dl
  414f1e:	outs   dx,DWORD PTR ds:[esi]
  414f1f:	xchg   edi,eax
  414f20:	cmp    dh,BYTE PTR [eax-0x72a9eeb0]
  414f26:	mov    ds:0xb92f08ae,eax
  414f2b:	add    edx,DWORD PTR [ebp+0x2a]
  414f2e:	mov    esp,0xb132b78c
  414f33:	jmp    0x414ed4
  414f35:	or     cl,dl
  414f37:	fyl2x  
  414f39:	stos   BYTE PTR es:[edi],al
  414f3a:	pop    ds
  414f3b:	xor    al,0x5f
  414f3e:	les    ecx,FWORD PTR ss:[esi-0x35f27aff]
  414f45:	int3   
  414f46:	mov    ecx,0xfe3f55f4
  414f4b:	xlat   BYTE PTR cs:[ebx]
  414f4d:	jb     0x414f42
  414f4f:	sbb    cl,BYTE PTR [esi-0x4c52741c]
  414f55:	fidiv  DWORD PTR [eax]
  414f57:	add    al,0xaf
  414f59:	pop    eax
  414f5a:	cld    
  414f5b:	inc    edx
  414f5c:	sbb    BYTE PTR [eax],ah
  414f5e:	jle    0x414f7c
  414f60:	mov    eax,ds:0xc6a7d052
  414f65:	(bad)  
  414f66:	out    0x6e,eax
  414f68:	popa   
  414f69:	(bad)  
  414f6b:	xchg   ecx,eax
  414f6c:	jb     0x414fd9
  414f6e:	gs es sbb al,0x7a
  414f72:	pop    edx
  414f73:	xchg   edi,eax
  414f74:	add    ebp,DWORD PTR [ebx+esi*8+0x34]
  414f78:	xchg   ebx,eax
  414f79:	test   eax,0xa6da0a8d
  414f7e:	pop    ebp
  414f7f:	scas   eax,DWORD PTR es:[edi]
  414f80:	out    dx,eax
  414f81:	out    0xd7,eax
  414f83:	mov    bh,BYTE PTR [edx-0xda458f7]
  414f89:	mov    eax,0xb0d17c4
  414f8e:	ds pop ss
  414f90:	leave  
  414f91:	mov    ebp,0x98f17fe8
  414f96:	mov    dh,0x6a
  414f98:	push   ss
  414f99:	dec    edx
  414f9a:	add    dl,BYTE PTR [ebx]
  414f9c:	inc    ebx
  414f9d:	in     eax,dx
  414f9e:	cmp    eax,0x2f673c6b
  414fa3:	jmp    0x414f89
  414fa5:	lea    edx,[esi+0x52952669]
  414fab:	mov    bh,0x9f
  414fad:	in     eax,0x3c
  414faf:	out    dx,eax
  414fb0:	inc    ebp
  414fb1:	cdq    
  414fb2:	xchg   ebp,eax
  414fb3:	imul   DWORD PTR [ebp-0x6f59e056]
  414fb9:	aas    
  414fba:	mov    edx,0x155cf4da
  414fbf:	adc    cl,bh
  414fc1:	mov    ah,0x48
  414fc3:	sbb    DWORD PTR [esi],esp
  414fc5:	mov    cl,dh
  414fc7:	repz dec esi
  414fc9:	retf   
  414fca:	adc    eax,0x13422be9
  414fcf:	cld    
  414fd0:	inc    edi
  414fd1:	clc    
  414fd2:	repnz bound eax,QWORD PTR [edi-0x2c7ee2d8]
  414fd9:	xor    BYTE PTR ds:0x1744bf1d,ah
  414fdf:	inc    edx
  414fe0:	add    al,BYTE PTR [eax]
  414fe2:	jo     0x414f7e
  414fe4:	cmp    BYTE PTR [eax+0x49],bl
  414fe7:	inc    ebx
  414fe8:	xchg   esp,eax
  414fe9:	xchg   ebx,eax
  414fea:	push   edx
  414feb:	imul   esp,DWORD PTR [ecx+esi*8-0x3a495b58],0x1d65605f
  414ff6:	fs popw ds
  414ff9:	outs   dx,DWORD PTR ds:[esi]
  414ffa:	cwde   
  414ffb:	push   ebx
  414ffc:	bound  ebp,QWORD PTR [ecx-0x17]
  414fff:	sub    al,0xdc
  415001:	inc    edx
  415002:	fisubr WORD PTR [edx+0x29]
  415005:	dec    eax
  415006:	mov    ebx,0x602b40e4
  41500b:	ror    DWORD PTR [esp+ebx*4-0x68],1
  41500f:	inc    ecx
  415010:	jbe    0x414fff
  415012:	jo     0x414fdb
  415014:	pushf  
  415015:	out    dx,eax
  415016:	(bad)  [esi]
  415018:	pop    es
  415019:	jmp    0xd2f95d31
  41501e:	add    eax,0x567f346c
  415023:	mov    ecx,0x67de259d
  415028:	ficomp DWORD PTR [ebp-0x1cb7a154]
  41502e:	(bad)  
  41502f:	cmc    
  415030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415031:	je     0x415048
  415033:	fisttp DWORD PTR [ecx+0x2be9ae6]
  415039:	out    dx,eax
  41503a:	jecxz  0x41506e
  41503c:	dec    ebp
  41503d:	lock fcom DWORD PTR [eax+0x47424697]
  415044:	or     BYTE PTR [esi-0x3382f6],cl
  41504a:	shl    BYTE PTR [ecx],1
  41504c:	mov    ds:0xd9041f5e,eax
  415051:	adc    cl,dh
  415053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415054:	ror    BYTE PTR [eax+0x63],0x3
  415058:	mov    ds:0x30a50d24,al
  41505d:	(bad)  
  41505e:	mov    ebx,0x4b30896b
  415063:	lds    ebp,FWORD PTR [edi-0x1f]
  415066:	(bad)  
  415068:	sub    BYTE PTR [ecx-0x574a073c],bh
  41506e:	ins    DWORD PTR es:[edi],dx
  41506f:	pop    ss
  415070:	fiadd  DWORD PTR [ebx-0x1e]
  415073:	sbb    bl,BYTE PTR [edx+0x21b1f338]
  415079:	sub    BYTE PTR [edx-0x54286155],dh
  41507f:	je     0x4150c7
  415081:	outs   dx,DWORD PTR ds:[esi]
  415082:	sbb    al,0x40
  415084:	cdq    
  415085:	mov    ah,BYTE PTR [edi+0x4111187a]
  41508b:	jo     0x4150f1
  41508d:	rcl    DWORD PTR [ecx-0x5f],1
  415090:	push   eax
  415091:	adc    BYTE PTR [edi],0x6d
  415094:	cmp    BYTE PTR [eax],al
  415096:	jp     0x41503e
  415098:	mov    DWORD PTR [ebx-0x38],ebp
  41509b:	mov    ch,0xcb
  41509d:	cli    
  41509e:	dec    edx
  41509f:	dec    edi
  4150a0:	inc    ebx
  4150a1:	fdiv   DWORD PTR [edi]
  4150a3:	lods   eax,DWORD PTR ds:[esi]
  4150a4:	(bad)  
  4150a5:	(bad)  
  4150a6:	xchg   ebp,eax
  4150a7:	xchg   edi,eax
  4150a8:	push   esp
  4150a9:	mov    eax,DWORD PTR [ebx]
  4150ab:	out    dx,eax
  4150ac:	mov    dh,0x5f
  4150ae:	or     esp,ebp
  4150b0:	xchg   edx,eax
  4150b1:	mov    bh,0xce
  4150b3:	sti    
  4150b4:	xchg   DWORD PTR [ebp-0x6c],ebx
  4150b7:	push   ds
  4150b8:	in     al,dx
  4150b9:	pop    edx
  4150ba:	fisub  DWORD PTR [edx-0x4c]
  4150bd:	push   edi
  4150be:	dec    esi
  4150bf:	and    al,0xd1
  4150c1:	add    DWORD PTR [ecx+ecx*1],esi
  4150c4:	fist   WORD PTR [edx+ebp*2-0x63]
  4150c8:	jmp    DWORD PTR [edi-0x242e62f7]
  4150ce:	int3   
  4150cf:	sbb    DWORD PTR [edx+0x56],edi
  4150d2:	xor    eax,0x9e93a5ec
  4150d7:	xor    eax,0x2d505de4
  4150dc:	xchg   ebx,eax
  4150dd:	inc    eax
  4150de:	mov    ebx,0x9b5b1b05
  4150e3:	mov    ds:0x5829bd53,al
  4150e8:	push   esi
  4150e9:	dec    ebp
  4150ea:	sahf   
  4150eb:	shl    BYTE PTR [ebx+ebp*4],0xb8
  4150ef:	(bad)  
  4150f0:	mov    al,ds:0x11ef7a7e
  4150f5:	retf   0x45c8
  4150f8:	and    ch,dh
  4150fa:	dec    ebp
  4150fb:	add    dh,ch
  4150fd:	inc    esi
  4150fe:	pop    edi
  4150ff:	xor    BYTE PTR [eax+eiz*1],bl
  415102:	push   esp
  415103:	fst    QWORD PTR [edi+0x68]
  415106:	mov    edx,0x40347433
  41510b:	icebp  
  41510c:	retf   
  41510d:	add    BYTE PTR [ecx],bl
  41510f:	fnstcw WORD PTR [eax]
  415111:	cmp    BYTE PTR [ecx-0x6e],bl
  415114:	test   BYTE PTR [edx+eiz*8-0x5b],dl
  415118:	inc    eax
  415119:	loope  0x4150b0
  41511b:	xor    cl,BYTE PTR ds:[edi+0x67]
  41511f:	pop    es
  415120:	or     ch,BYTE PTR [edi]
  415122:	call   0x934:0x33316c68
  415129:	sbb    BYTE PTR [eax+0x1262f03a],dl
  41512f:	test   DWORD PTR ds:0x2c7dff0d,ebp
  415135:	cld    
  415136:	out    0xce,eax
  415138:	xchg   ebp,eax
  415139:	push   ecx
  41513a:	inc    esp
  41513b:	jnp    0x4151ac
  41513d:	sub    BYTE PTR [eax],cl
  41513f:	stos   DWORD PTR es:[edi],eax
  415140:	adc    al,dh
  415142:	clc    
  415143:	and    DWORD PTR [eax-0x22e485c2],edi
  415149:	push   es
  41514a:	stos   DWORD PTR es:[edi],eax
  41514b:	jo     0x4150da
  41514d:	or     al,0xda
  41514f:	retf   
  415150:	or     BYTE PTR [esi+0x46a8a058],0x38
  415157:	mov    al,BYTE PTR [edi]
  415159:	jns    0x4150db
  41515b:	fsubr  QWORD PTR [ecx+edi*2]
  41515e:	outs   dx,BYTE PTR ds:[esi]
  41515f:	sti    
  415160:	cmp    DWORD PTR [eax],eax
  415162:	mov    ah,0x17
  415164:	ret    0xbb9f
  415167:	ins    BYTE PTR es:[edi],dx
  415168:	push   ss
  415169:	lea    ebx,[ebp-0x8]
  41516c:	dec    eax
  41516d:	adc    dl,BYTE PTR [edi+0x4e]
  415170:	mov    ebx,0x1668c1a3
  415175:	jecxz  0x415162
  415177:	(bad)  
  415178:	imul   esi,DWORD PTR [ebx],0xffffffe7
  41517b:	enter  0x3b0d,0x88
  41517f:	fwait
  415180:	mov    eax,ds:0xf8c84158
  415185:	outs   dx,BYTE PTR ds:[esi]
  415186:	adc    edx,DWORD PTR [eax]
  415188:	fild   QWORD PTR ds:0xa903a57e
  41518e:	fstp   DWORD PTR [ebp-0x6c05f002]
  415194:	loop   0x415155
  415196:	icebp  
  415197:	lods   al,BYTE PTR ds:[esi]
  415198:	in     eax,0xc
  41519a:	inc    ebx
  41519b:	leave  
  41519c:	xor    BYTE PTR [ecx-0xf76cda5],cl
  4151a2:	jg     0x415223
  4151a4:	call   0x521e0e27
  4151a9:	inc    edi
  4151aa:	add    BYTE PTR [ecx-0x5cb118cc],0x54
  4151b1:	ins    DWORD PTR es:[edi],dx
  4151b2:	call   0x1f2:0xb08e59c
  4151b9:	pop    ds
  4151ba:	mov    esi,0x235dedf
  4151bf:	aam    0x14
  4151c1:	mov    ebp,DWORD PTR [esi-0xc]
  4151c4:	jns    0x415208
  4151c6:	jb     0x4151b4
  4151c8:	mov    al,0xad
  4151ca:	add    edx,DWORD PTR ds:0x9ff7607b
  4151d0:	in     al,0x5e
  4151d2:	imul   ebx,DWORD PTR [edi+0x4f06d8d9],0x8f8f9487
  4151dc:	xor    DWORD PTR [si+0x1d3b],esi
  4151e1:	mov    esp,0xe9755106
  4151e6:	and    BYTE PTR [ebx+0x2ab4e366],al
  4151ec:	stc    
  4151ed:	inc    edx
  4151ee:	int    0xb9
  4151f0:	push   ss
  4151f1:	call   0xe92009fd
  4151f6:	add    edi,ebx
  4151f8:	lods   eax,DWORD PTR ds:[esi]
  4151f9:	out    dx,eax
  4151fa:	mov    eax,es:0xc82264c7
  415200:	cli    
  415201:	jnp    0x41524d
  415203:	mov    ch,0x4d
  415205:	dec    ebp
  415206:	shl    DWORD PTR [eax+0x39],0xc1
  41520a:	jne    0x415214
  41520c:	clc    
  41520d:	fld    TBYTE PTR [edi]
  41520f:	pop    ds
  415210:	sahf   
  415211:	mov    ebp,0xa675954e
  415216:	ret    
  415217:	and    eax,0x49e335fc
  41521c:	inc    ecx
  41521d:	in     eax,dx
  41521e:	cmp    DWORD PTR [ebx-0x3f],edx
  415221:	xlat   BYTE PTR ds:[bx]
  415223:	push   ebp
  415224:	xor    al,BYTE PTR [ebp-0x1a]
  415227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415228:	bound  esi,QWORD PTR [si-0x72e0]
  41522d:	mov    ah,0x1e
  41522f:	pop    ds
  415230:	inc    ebx
  415231:	popa   
  415232:	std    
  415233:	sub    ebp,esp
  415235:	or     al,0xdf
  415237:	or     bl,dl
  415239:	into   
  41523a:	cli    
  41523b:	push   ecx
  41523c:	js     0x41527f
  41523e:	xor    al,0x2e
  415240:	retf   
  415241:	cmp    ebp,ecx
  415243:	fs ffreep st(1)
  415246:	pslld  mm5,QWORD PTR [ebx]
  415249:	mov    al,0x53
  41524b:	xchg   ebp,eax
  41524c:	scas   eax,DWORD PTR es:[edi]
  41524d:	inc    edx
  41524e:	mov    ds:0xbae0202b,al
  415253:	jb     0x415236
  415255:	call   0xc3ce:0x202c3d58
  41525c:	int    0x4b
  41525e:	cmp    eax,0x3cab2257
  415263:	add    al,0xe5
  415265:	stos   BYTE PTR es:[edi],al
  415266:	jmp    0x510d1ac3
  41526b:	mov    ah,BYTE PTR [ebx+0x71]
  41526e:	scas   eax,DWORD PTR es:[edi]
  41526f:	mov    al,ds:0x46e3efbe
  415274:	jbe    0x41521b
  415276:	adc    DWORD PTR [esi+0x35071a11],ebx
  41527c:	cmp    BYTE PTR [esi-0x5c],ah
  41527f:	sbb    ah,dh
  415281:	or     eax,0x44ec433a
  415286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415287:	pop    ebx
  415288:	leave  
  415289:	aad    0xb
  41528b:	clc    
  41528c:	popf   
  41528d:	outs   dx,BYTE PTR ds:[esi]
  41528e:	(bad)  
  415290:	sar    DWORD PTR [ebx-0x44f6c4d6],cl
  415296:	daa    
  415297:	pop    ecx
  415298:	jl     0x4152ac
  41529a:	lock mov eax,ds:0x25248596
  4152a0:	lea    ebx,[eax-0x5a]
  4152a3:	loop   0x41526c
  4152a5:	call   0xabcc895c
  4152aa:	add    ch,al
  4152ac:	retf   
  4152ad:	jmp    0x415266
  4152af:	popa   
  4152b0:	push   edi
  4152b1:	lock xor eax,0x5d2b24
  4152b7:	out    0x71,eax
  4152b9:	lods   al,BYTE PTR gs:[esi]
  4152bb:	cli    
  4152bc:	adc    DWORD PTR [eax+0x55885509],eax
  4152c2:	sti    
  4152c3:	jge    0x41533b
  4152c5:	fidiv  DWORD PTR [edi+eax*4-0x73]
  4152c9:	shr    dl,1
  4152cb:	data16 xlat BYTE PTR ds:[ebx]
  4152cd:	repz or edx,DWORD PTR [eax-0xd]
  4152d1:	mov    ds:0x9fc4a3b9,al
  4152d6:	ins    BYTE PTR es:[edi],dx
  4152d7:	repnz lods eax,DWORD PTR ds:[esi]
  4152d9:	dec    eax
  4152da:	pop    esi
  4152db:	push   cs
  4152dc:	xor    DWORD PTR [ebp+0xd7931d7],eax
  4152e2:	mov    esi,0xb46889f1
  4152e7:	jno    0x41530e
  4152e9:	sub    ebp,DWORD PTR [ecx-0x6]
  4152ec:	xchg   edi,eax
  4152ed:	sub    al,0xcb
  4152ef:	bound  ecx,QWORD PTR [ecx]
  4152f1:	daa    
  4152f2:	scas   eax,DWORD PTR es:[edi]
  4152f3:	adc    eax,0x910c2031
  4152f8:	ret    0x42c1
  4152fb:	mov    edx,0x14206b8
  415300:	mov    bl,0x58
  415302:	inc    eax
  415303:	xchg   esp,eax
  415304:	add    ebx,ebx
  415306:	pop    edx
  415307:	out    0xef,al
  415309:	pop    ebp
  41530a:	sub    al,0x82
  41530c:	xchg   BYTE PTR [ebp+0x5f687371],al
  415312:	rcl    BYTE PTR [eax+0x38],1
  415315:	(bad)  
  415317:	loope  0x415301
  415319:	(bad)  [eax+ecx*2]
  41531c:	and    DWORD PTR [esi-0x28c875b5],0xffffffa5
  415323:	xor    bh,cl
  415325:	dec    edx
  415326:	jl     0x415329
  415328:	neg    DWORD PTR ds:0xcc94199a
  41532e:	mov    ebp,0x5b369361
  415333:	pop    ebp
  415334:	in     eax,dx
  415335:	push   edi
  415336:	cmp    BYTE PTR [esi],bh
  415338:	mov    edi,0xe2134c47
  41533d:	inc    edi
  41533e:	pop    edi
  41533f:	and    dh,BYTE PTR ds:0x2da76706
  415345:	loopne 0x415365
  415347:	mov    bl,0xc3
  415349:	dec    esi
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0x94979022
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0x9460d007
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	and    BYTE PTR [ebp+0x47beb1f2],0xf2
  41555f:	in     al,dx
  415560:	in     al,dx
  415561:	ror    DWORD PTR [ebx-0xcf2352],cl
  415567:	bound  ecx,QWORD PTR [ecx]
  415569:	mov    ebp,0xe8ecf247
  41556e:	ror    DWORD PTR [ebx-0x30dc12],cl
  415574:	bound  esi,QWORD PTR [ecx-0x130db843]
  41557a:	call   0x23efe152
  41557f:	iret   
  415580:	jmp    DWORD PTR [edx-0x4f]
  415583:	mov    ebp,0xe8ecf247
  415588:	ror    DWORD PTR [ebx-0x30dc52],cl
  41558e:	bound  esi,QWORD PTR [ecx-0x130db843]
  415594:	loopne 0x415568
  415596:	mov    ebp,DWORD PTR [esi+0x6c45d02d]
  41559c:	mov    cl,0x9
  41559e:	dec    esi
  41559f:	aas    
  4155a0:	int    0x50
  4155a2:	rol    bh,cl
  4155a4:	arpl   WORD PTR [edx],ax
  4155a6:	fwait
  4155a7:	xchg   edi,eax
  4155a8:	or     eax,edx
  4155aa:	popf   
  4155ab:	aaa    
  4155ac:	add    BYTE PTR [ebx-0x3c155e71],0x3
  4155b3:	lods   al,BYTE PTR ds:[esi]
  4155b4:	sahf   
  4155b5:	or     al,0xdf
  4155b7:	shl    BYTE PTR [ebx],cl
  4155b9:	ror    BYTE PTR [esi-0x24060c73],cl
  4155bf:	dec    ebp
  4155c0:	out    dx,eax
  4155c1:	xchg   esi,eax
  4155c2:	or     al,0x91
  4155c4:	stc    
  4155c5:	or     BYTE PTR [ecx-0x10437a34],ah
  4155cb:	retf   
  4155cc:	or     eax,0x9568f2c2
  4155d1:	mov    ebp,0xe8ecf247
  4155d6:	ror    DWORD PTR [ebx+0x71d9ecd4],cl
  4155dc:	pop    esp
  4155dd:	pop    ds
  4155de:	lds    ebx,FWORD PTR [edx+0xe9042cc]
  4155e4:	mov    ch,0x0
  4155e6:	pop    ebx
  4155e7:	adc    bl,dl
  4155e9:	push   ecx
  4155ea:	push   edi
  4155eb:	pusha  
  4155ec:	gs pop esp
  4155ee:	xchg   esp,eax
  4155ef:	xor    eax,0xfe7cb8f6
  4155f4:	jo     0x415647
  4155f6:	sbb    ch,BYTE PTR [eax+ebx*4+0x74]
  4155fa:	and    DWORD PTR [ecx],esi
  4155fc:	std    
  4155fd:	jge    0x4155f2
  4155ff:	jae    0x415673
  415601:	pop    ss
  415602:	sub    al,0xbf
  415604:	mov    dl,BYTE PTR [ebx]
  415606:	aas    
  415607:	das    
  415608:	fstp   TBYTE PTR [esi]
  41560a:	sub    BYTE PTR [esi-0x67],dl
  41560d:	lea    esi,[edi+0x56675522]
  415613:	call   0xb5:0xe9042d7
  41561a:	pop    edx
  41561b:	adc    dh,BYTE PTR [esi-0x7a9f3633]
  415621:	jl     0x4155a9
  415623:	xor    eax,0xfed625e3
  415628:	jmp    0x8ae9:0xc46cb5cc
  41562f:	xor    ebp,ecx
  415631:	loopne 0x41569c
  415633:	jae    0x415651
  415635:	popa   
  415636:	xchg   DWORD PTR [edi+0x2fa28e94],edi
  41563c:	rol    DWORD PTR [esi-0x55],cl
  41563f:	push   esi
  415640:	cld    
  415641:	dec    edx
  415642:	lods   al,BYTE PTR ds:[esi]
  415643:	xchg   edi,eax
  415644:	pop    esp
  415645:	pop    ds
  415646:	lds    ebx,FWORD PTR [edx-0x2c17130e]
  41564c:	mov    ebp,DWORD PTR [esi+0x62ffcf23]
  415652:	mov    cl,0xbd
  415654:	inc    edi
  415655:	repnz in al,dx
  415657:	call   0x23efe22f
  41565c:	iret   
  41565d:	jmp    DWORD PTR [edx-0x4f]
  415660:	in     eax,dx
  415661:	add    dh,dl
  415663:	in     al,dx
  415664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415665:	ror    BYTE PTR [eax-0x4d7eba52],cl
  41566b:	sub    eax,0xf247bdb1
  415670:	in     al,dx
  415671:	call   0x238fe249
  415676:	int    0xfe
  415678:	imul   esi,DWORD PTR [eax+0xef247b7],0x2a8bd3ec
  415682:	and    eax,0xb162ffcf
  415687:	mov    ebp,0xe8ec4f04
  41568c:	rcr    DWORD PTR [ebx-0x30dc52],cl
  415692:	addr16 mov cl,0xbd
  415695:	inc    edi
  415696:	mov    dl,0xec
  415698:	call   0x23efe260
  41569d:	int    0xff
  41569f:	bound  esi,QWORD PTR [ebp+edi*4-0x17130dba]
  4156a6:	ror    DWORD PTR [ebx-0x31dc55],cl
  4156ac:	bound  esi,QWORD PTR [ecx-0x230db843]
  4156b2:	in     al,0xd3
  4156b4:	mov    ebp,DWORD PTR [edx-0x630a30dd]
  4156ba:	mov    ch,0xbd
  4156bc:	inc    ebp
  4156bd:	repnz lods al,BYTE PTR ds:[esi]
  4156bf:	imul   edx,ebx,0xcf23be8b
  4156c5:	out    dx,eax
  4156c6:	bound  esi,QWORD PTR [ecx-0x131db843]
  4156cc:	call   0x23efe294
  4156d1:	iret   
  4156d2:	jmp    DWORD PTR [edx-0x5f]
  4156d5:	mov    ebp,0xe8ecf247
  4156da:	ror    DWORD PTR [ebx-0x30dc52],cl
  4156e0:	data16 mov cl,0xb1
  4156e3:	inc    edi
  4156e4:	stos   DWORD PTR es:[edi],eax
  4156e5:	out    dx,eax
  4156e6:	call   0x28afe2be
  4156eb:	iret   
  4156ec:	stos   BYTE PTR es:[edi],al
  4156ed:	pop    ebp
  4156ee:	mov    cl,0xbd
  4156f0:	inc    edi
  4156f1:	repnz in al,dx
  4156f3:	call   0x23efe2cb
  4156f8:	iret   
  4156f9:	jmp    DWORD PTR [edx-0x4f]
  4156fc:	mov    ebp,0xe8ecf247
  415701:	xrelease xchg DWORD PTR [esi+0x62ffcf3b],ebp
  415708:	mov    cl,0xbd
  41570a:	inc    edi
  41570b:	repnz in al,dx
  41570d:	call   0x23efe2e5
  415712:	iret   
  415713:	jmp    DWORD PTR [edx-0x4f]
  415716:	mov    ebp,0xe8ecf247
  41571b:	ror    DWORD PTR [ebx-0x30dc52],cl
  415721:	bound  esi,QWORD PTR [ecx-0x130db843]
  415727:	call   0x23efe2ff
  41572c:	iret   
  41572d:	jmp    DWORD PTR [edx-0x4f]
  415730:	mov    ebp,0xe8ecf247
  415735:	ror    DWORD PTR [ebx-0x30dc52],cl
  41573b:	bound  esi,QWORD PTR [ecx-0x130db843]
  415741:	call   0x23efe319
  415746:	iret   
  415747:	jmp    DWORD PTR [edx-0x4f]
  41574a:	mov    ebp,0xe8ecf247
  41574f:	ror    DWORD PTR [ebx-0x30dc52],cl
  415755:	bound  esi,QWORD PTR [ecx-0x76799643]
  41575b:	nop
  41575c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41575d:	mov    ebp,DWORD PTR [esi+0x694fcf23]
  415763:	mov    cl,0xbd
  415765:	push   edi
  415766:	repnz in al,dx
  415768:	call   0x23efe722
  41576d:	retf   
  41576e:	jmp    DWORD PTR [edx-0x1f]
  415771:	clc    
  415772:	add    al,0xc0
  415774:	mov    eax,0xae8bd3a7
  415779:	and    ecx,edi
  41577b:	inc    DWORD PTR [edx-0x4f]
  41577e:	mov    ebp,0x9b9edca7
  415783:	mov    eax,ds:0xcf23aee8
  415788:	inc    DWORD PTR [edx]
  41578a:	mov    cl,0xbd
  41578c:	inc    edi
  41578d:	xor    ah,bh
  41578f:	call   0x23f03167
  415794:	iret   
  415795:	xchg   ebp,eax
  415796:	data16 mov cl,0xbd
  415799:	inc    edi
  41579a:	repnz in al,dx
  41579c:	call   0x23efe374
  4157a1:	iret   
  4157a2:	jmp    DWORD PTR [edx-0x6f]
  4157a5:	mov    ebp,0x9ac21247
  4157aa:	mov    dh,0xe7
  4157ac:	rol    DWORD PTR [eax-0x31],0xff
  4157b0:	bound  esi,QWORD PTR [ebx-0x330db843]
  4157b6:	in     al,0xd3
  4157b8:	mov    ebp,DWORD PTR [ebx+eiz*1-0x4a210031]
  4157bf:	mov    ebp,0xe8ecf247
  4157c4:	ror    DWORD PTR [ebx-0x30dc52],cl
  4157ca:	bound  esi,QWORD PTR [ecx+0x2cf247fd]
  4157d0:	call   0x23efe3a8
  4157d5:	iret   
  4157d6:	jmp    DWORD PTR [edx-0x4f]
  4157d9:	mov    ebp,0xe8ecf247
  4157de:	ror    DWORD PTR [ebx-0x30dc52],cl
  4157e4:	bound  esi,QWORD PTR [ecx-0x130db843]
  4157ea:	call   0x23efe3c2
  4157ef:	iret   
  4157f0:	jmp    DWORD PTR [edx-0x4f]
  4157f3:	mov    ebp,0xe8ecf247
  4157f8:	ror    DWORD PTR [ebx-0x30dc52],cl
  4157fe:	bound  esi,QWORD PTR [ecx-0x130db843]
  415804:	call   0x23efe3dc
  415809:	iret   
  41580a:	jmp    DWORD PTR [edx-0x4f]
  41580d:	mov    ebp,0xe8ecf247
  415812:	ror    DWORD PTR [ebx-0x30dc52],cl
  415818:	bound  esi,QWORD PTR [ecx-0x130db843]
  41581e:	call   0x23efe3f6
  415823:	iret   
  415824:	jmp    DWORD PTR [edx-0x4f]
  415827:	mov    ebp,0xe8ecf247
  41582c:	ror    DWORD PTR [ebx-0x30dc52],cl
  415832:	bound  esi,QWORD PTR [ecx-0x130db843]
  415838:	call   0x23efe410
  41583d:	iret   
  41583e:	jmp    DWORD PTR [edx-0x4f]
  415841:	mov    ebp,0xe8ecf247
  415846:	ror    DWORD PTR [ebx-0x30dc52],cl
  41584c:	bound  esi,QWORD PTR [ecx-0x130db843]
  415852:	call   0x23efe42a
  415857:	iret   
  415858:	jmp    DWORD PTR [edx-0x4f]
  41585b:	mov    ebp,0xe8ecf247
  415860:	ror    DWORD PTR [ebx-0x30dc52],cl
  415866:	bound  esi,QWORD PTR [ecx-0x130db843]
  41586c:	call   0x23efe444
  415871:	iret   
  415872:	jmp    DWORD PTR [edx-0x4f]
  415875:	mov    ebp,0xe8ecf247
  41587a:	ror    DWORD PTR [ebx-0x30dc52],cl
  415880:	bound  esi,QWORD PTR [ecx-0x130db843]
  415886:	call   0x23efe45e
  41588b:	iret   
  41588c:	jmp    DWORD PTR [edx-0x4f]
  41588f:	mov    ebp,0xe8ecf247
  415894:	ror    DWORD PTR [ebx-0x30dc52],cl
  41589a:	bound  esi,QWORD PTR [ecx-0x130db843]
  4158a0:	call   0x23efe478
  4158a5:	iret   
  4158a6:	jmp    DWORD PTR [edx-0x4f]
  4158a9:	mov    ebp,0xe8ecf247
  4158ae:	ror    DWORD PTR [ebx-0x30dc52],cl
  4158b4:	bound  esi,QWORD PTR [ecx-0x130db843]
  4158ba:	call   0x23efe492
  4158bf:	iret   
  4158c0:	jmp    DWORD PTR [edx-0x4f]
  4158c3:	mov    ebp,0xe8ecf247
  4158c8:	ror    DWORD PTR [ebx-0x30dc52],cl
  4158ce:	bound  esi,QWORD PTR [ecx-0x130db843]
  4158d4:	call   0x23efe4ac
  4158d9:	iret   
  4158da:	jmp    DWORD PTR [edx-0x4f]
  4158dd:	mov    ebp,0xe8ecf247
  4158e2:	ror    DWORD PTR [ebx-0x30dc52],cl
  4158e8:	bound  esi,QWORD PTR [ecx-0x130db843]
  4158ee:	call   0x23efe4c6
  4158f3:	iret   
  4158f4:	jmp    DWORD PTR [edx-0x4f]
  4158f7:	mov    ebp,0xe8ecf247
  4158fc:	ror    DWORD PTR [ebx-0x30dc52],cl
  415902:	bound  esi,QWORD PTR [ecx-0x130db843]
  415908:	call   0x23efe4e0
  41590d:	iret   
  41590e:	jmp    DWORD PTR [edx-0x4f]
  415911:	mov    ebp,0xe8ecf247
  415916:	ror    DWORD PTR [ebx-0x30dc52],cl
  41591c:	bound  esi,QWORD PTR [ecx-0x130db843]
  415922:	call   0x23efe4fa
  415927:	iret   
  415928:	jmp    DWORD PTR [edx-0x4f]
  41592b:	mov    ebp,0xe8ecf247
  415930:	ror    DWORD PTR [ebx-0x30dc52],cl
  415936:	bound  esi,QWORD PTR [ecx-0x130db843]
  41593c:	call   0x23efe514
  415941:	iret   
  415942:	jmp    DWORD PTR [edx-0x4f]
  415945:	mov    ebp,0xe8ecf247
  41594a:	ror    DWORD PTR [ebx-0x30dc52],cl
  415950:	bound  esi,QWORD PTR [ecx-0x130db843]
  415956:	call   0x29217a2e
  41595b:	iret   
  41595c:	shl    BYTE PTR [edx-0x4f],1
  41595f:	lods   eax,DWORD PTR ds:[esi]
  415960:	inc    edi
  415961:	repnz (bad) 
  415963:	dec    edx
  415964:	or     edi,edi
  415966:	adc    ebp,DWORD PTR [esp+edi*8-0x13]
  41596a:	dec    ecx
  41596b:	mov    al,BYTE PTR [eax-0x1181b858]
  415971:	call   0x25ec:0x7cff5fd2
  415978:	mov    dl,BYTE PTR [edi+ebx*4+0x79]
  41597c:	scas   al,BYTE PTR es:[edi]
  41597d:	cdq    
  41597e:	adc    DWORD PTR [ecx-0x1f],esi
  415981:	mov    ah,0x91
  415983:	and    BYTE PTR [esi+0x112adef1],dh
  415989:	push   edi
  41598a:	cmp    esi,esi
  41598c:	enter  0xaba7,0x4f
  415990:	call   0x7fc5eb34
  415995:	mov    cl,0xee
  415997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415998:	xchg   esp,eax
  415999:	push   ebx
  41599a:	xor    dh,ah
  41599c:	add    cl,0xd1
  41599f:	inc    edi
  4159a0:	dec    ecx
  4159a1:	pop    esi
  4159a2:	in     eax,0xa2
  4159a4:	sbb    DWORD PTR [ecx-0x203bcd1c],eax
  4159aa:	pusha  
  4159ab:	xchg   edx,eax
  4159ac:	sbb    eax,DWORD PTR [edi+0x14a777ea]
  4159b2:	jns    0x415a18
  4159b4:	dec    eax
  4159b5:	add    bl,BYTE PTR [eax+0x23]
  4159b8:	sub    DWORD PTR [edx],0xffffff9a
  4159bb:	adc    eax,0x26a8e8c7
  4159c0:	lods   eax,DWORD PTR ds:[esi]
  4159c1:	retf   0x209e
  4159c4:	sbb    BYTE PTR [edx-0x1c],0xa
  4159c8:	mov    bl,0x8e
  4159ca:	mov    ebp,0xcb9ecbf0
  4159cf:	add    DWORD PTR [ebp-0x25],0xdc592341
  4159d6:	nop
  4159d7:	xchg   edi,eax
  4159d8:	icebp  
  4159d9:	xor    BYTE PTR [edx+ecx*4],bl
  4159dc:	jbe    0x415a3d
  4159de:	push   esp
  4159df:	nop
  4159e0:	sub    al,0xcf
  4159e2:	and    esp,edx
  4159e4:	mov    edx,0xe91e5776
  4159e9:	stos   BYTE PTR es:[edi],al
  4159ea:	ss retf 
  4159ec:	pop    ebp
  4159ed:	xchg   ecx,eax
  4159ee:	daa    
  4159ef:	xor    esi,ebx
  4159f1:	call   FWORD PTR [ebx]
  4159f3:	add    al,0xbe
  4159f5:	cmp    BYTE PTR [ecx],0x89
  4159f8:	fstp   QWORD PTR [ecx+0x3d8e77e9]
  4159fe:	pop    ds
  4159ff:	inc    edx
  415a00:	sbb    eax,0x93177b67
  415a05:	mov    esp,DWORD PTR [ebx-0x267c7f54]
  415a0b:	inc    ebp
  415a0c:	and    BYTE PTR [edi+0x63],0x23
  415a10:	stos   DWORD PTR es:[edi],eax
  415a11:	or     ch,BYTE PTR [eax]
  415a13:	inc    ecx
  415a14:	fisttp QWORD PTR [ebp+0x4bb55ae0]
  415a1a:	xor    al,0x18
  415a1c:	inc    ebx
  415a1d:	xchg   ebx,eax
  415a1e:	nop
  415a1f:	in     al,dx
  415a20:	jmp    0x2c30babf
  415a25:	fwait
  415a26:	and    DWORD PTR [ebx+0x7223f31],eax
  415a2c:	pushf  
  415a2d:	ret    0xb035
  415a30:	sub    al,0x0
  415a32:	jmp    0x34c11701
  415a37:	enter  0x9cf8,0xbb
  415a3b:	lock push esp
  415a3d:	iret   
  415a3e:	sbb    ah,BYTE PTR [eax]
  415a40:	inc    esp
  415a41:	int3   
  415a42:	or     esp,DWORD PTR [eax]
  415a44:	mov    ebx,0x6de4d729
  415a49:	add    BYTE PTR [ecx],0x83
  415a4c:	and    dl,BYTE PTR [edx+0x74]
  415a4f:	loopne 0x415a53
  415a51:	jmp    0x81ff2c7f
  415a56:	imul   esp,DWORD PTR [edx+0x36],0x75490640
  415a5d:	inc    ecx
  415a5e:	push   ss
  415a5f:	pusha  
  415a60:	in     al,dx
  415a61:	arpl   WORD PTR [ebx-0x41],bx
  415a64:	xchg   DWORD PTR [edi+0x52],edx
  415a67:	sub    dh,BYTE PTR [esi]
  415a69:	sub    ebp,DWORD PTR [esi+0x7133e5e9]
  415a6f:	(bad)
  415a73:	inc    edi
  415a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a75:	in     al,0xe6
  415a77:	adc    DWORD PTR [ebp+0x64f7211c],ebx
  415a7d:	fld    QWORD PTR [esi+0xb]
  415a80:	sub    DWORD PTR gs:[ebx],edx
  415a83:	cmp    eax,edi
  415a85:	xchg   BYTE PTR [ebx+0x60f6b89b],al
  415a8b:	dec    edi
  415a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a8d:	sbb    cl,BYTE PTR [edx-0x4c8d072b]
  415a93:	mov    ebx,DWORD PTR [eax+edx*4]
  415a96:	inc    eax
  415a97:	push   ecx
  415a98:	adc    eax,DWORD PTR [ecx+eiz*1-0x26a49dac]
  415a9f:	xor    ebx,ecx
  415aa1:	jb     0x415a54
  415aa3:	or     DWORD PTR [ebp+0x73],ebx
  415aa6:	outs   dx,DWORD PTR ds:[esi]
  415aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa8:	lods   al,BYTE PTR ds:[esi]
  415aa9:	adc    DWORD PTR [eax+0x0],esp
  415aac:	push   esp
  415aad:	mov    edx,0x7be9811d
  415ab2:	cdq    
  415ab3:	stos   BYTE PTR es:[edi],al
  415ab4:	ret    
  415ab5:	gs pop ebp
  415ab7:	mov    ch,0xdb
  415ab9:	mov    ss,WORD PTR [edi]
  415abb:	addr16 clc 
  415abd:	in     eax,0xf9
  415abf:	mov    eax,ds:0x5d67981e
  415ac4:	lods   al,BYTE PTR ds:[esi]
  415ac5:	(bad)  
  415ac6:	push   0x54
  415ac8:	das    
  415ac9:	jmp    0x8b32a0cc
  415ace:	rcl    edi,1
  415ad0:	mov    DWORD PTR [ebx+0xe],ebx
  415ad3:	inc    esp
  415ad4:	daa    
  415ad5:	adc    DWORD PTR [eax],esi
  415ad7:	int3   
  415ad8:	mov    ebx,0xa98a3a9
  415add:	add    edx,DWORD PTR [eax]
  415adf:	jae    0x415b18
  415ae1:	push   edx
  415ae2:	adc    dl,BYTE PTR [eax-0x7b450de1]
  415ae8:	and    DWORD PTR [ebx],ebx
  415aea:	cmp    DWORD PTR [ebx-0x2ffb3889],0xffffff8e
  415af1:	sub    BYTE PTR [edx-0x5f],al
  415af4:	mov    DWORD PTR [eax],edi
  415af6:	push   eax
  415af7:	ror    cl,1
  415af9:	fs pop ebp
  415afb:	push   ds
  415afc:	mov    dh,0xa1
  415afe:	xor    eax,0x6b3fd57a
  415b03:	ins    BYTE PTR es:[edi],dx
  415b04:	retf   0xcad7
  415b07:	mov    DWORD PTR [ebx+0x7e03ca0e],ebp
  415b0d:	cmp    DWORD PTR [ecx+0x12],esi
  415b10:	add    dl,BYTE PTR [ecx-0x2a]
  415b13:	push   eax
  415b14:	test   ebp,ecx
  415b16:	pop    ebx
  415b17:	cmp    al,ah
  415b19:	popf   
  415b1a:	inc    edi
  415b1b:	daa    
  415b1c:	push   es
  415b1d:	mov    edi,0x55b090b4
  415b22:	jnp    0x415ac4
  415b24:	sbb    ah,ch
  415b26:	adc    DWORD PTR [ecx-0x2dc0af25],ebx
  415b2c:	mov    dl,0x78
  415b2e:	int    0x8f
  415b30:	in     al,0xd
  415b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b33:	imul   edi,DWORD PTR [ecx-0x1be94522],0x55bda685
  415b3d:	xchg   DWORD PTR [esi+0x31],eax
  415b40:	mov    edi,0x6c3a3c59
  415b45:	(bad)  
  415b46:	pop    esi
  415b47:	cmc    
  415b48:	mov    eax,edi
  415b4a:	in     eax,dx
  415b4b:	lods   eax,DWORD PTR ds:[esi]
  415b4c:	mov    dh,0xc7
  415b4e:	lods   eax,DWORD PTR ds:[esi]
  415b4f:	repnz sub esp,eax
  415b52:	mov    gs,WORD PTR [eax]
  415b54:	mov    al,0x4
  415b56:	pushf  
  415b57:	push   0x3887611e
  415b5c:	aaa    
  415b5d:	push   ds
  415b5e:	or     esp,DWORD PTR [eax+0x1e]
  415b61:	imul   eax,DWORD PTR [edx],0xffffff9c
  415b64:	(bad)  
  415b66:	cmp    dl,BYTE PTR [eax-0x5a]
  415b69:	xchg   edx,eax
  415b6a:	adc    edi,DWORD PTR [esi]
  415b6c:	or     al,0x8e
  415b6e:	adc    dh,BYTE PTR [eax+0x77]
  415b71:	sub    cl,0xd3
  415b74:	xchg   DWORD PTR [ebx-0x5],esi
  415b77:	push   esi
  415b78:	jge    0x415be0
  415b7a:	pop    eax
  415b7b:	and    al,0x26
  415b7d:	push   ss
  415b7e:	sub    BYTE PTR [edi],cl
  415b80:	stos   BYTE PTR es:[edi],al
  415b81:	out    0xad,al
  415b83:	std    
  415b84:	or     BYTE PTR [ebx-0x3c8d5194],ch
  415b8a:	pop    esi
  415b8b:	cmp    al,0xaa
  415b8d:	icebp  
  415b8e:	cld    
  415b8f:	xchg   esp,eax
  415b90:	xor    bl,BYTE PTR [edi+0x79860b4]
  415b96:	cdq    
  415b97:	add    ebx,DWORD PTR gs:[ecx-0xd66d470]
  415b9e:	fwait
  415b9f:	imul   esi,edi,0xffffff82
  415ba2:	inc    edi
  415ba3:	data16 in al,0x59
  415ba6:	shr    DWORD PTR [ecx],1
  415ba8:	push   es
  415ba9:	fcmovbe st,st(5)
  415bab:	jnp    0x415bd2
  415bad:	mov    esp,0x2a505d33
  415bb2:	push   ss
  415bb3:	and    al,0xc1
  415bb5:	out    dx,eax
  415bb6:	mov    cl,0x96
  415bb8:	xor    eax,0x8348e19c
  415bbd:	inc    ebx
  415bbe:	adc    edx,0xfe414cf1
  415bc4:	dec    esi
  415bc5:	stc    
  415bc6:	pop    esp
  415bc7:	adc    BYTE PTR ds:0xb57b5577,dl
  415bcd:	or     BYTE PTR [ecx+0x5dba0bcf],al
  415bd3:	pop    ebp
  415bd4:	push   esi
  415bd5:	call   0x6e4e6b49
  415bda:	or     DWORD PTR [esi-0x57681928],edi
  415be0:	mov    ah,0xff
  415be2:	retf   
  415be3:	fld    DWORD PTR [eax-0xc]
  415be6:	js     0x415c2a
  415be8:	outs   dx,DWORD PTR ds:[esi]
  415be9:	add    eax,0x48f45c85
  415bee:	mov    edi,0xd58405f
  415bf3:	rcl    BYTE PTR [edi],1
  415bf5:	gs dec ebx
  415bf7:	dec    edi
  415bf8:	test   al,0x19
  415bfa:	jecxz  0x415bdc
  415bfc:	jnp    0x415c3e
  415bfe:	xor    BYTE PTR ds:0xddb06952,al
  415c04:	in     eax,dx
  415c05:	retf   0xcfe6
  415c08:	xor    al,0x8f
  415c0a:	mov    edi,0x34a56ca8
  415c0f:	push   cs
  415c10:	sti    
  415c11:	xlat   BYTE PTR ds:[ebx]
  415c12:	aam    0x59
  415c14:	and    DWORD PTR [ebx+0x73],ecx
  415c17:	inc    esi
  415c18:	dec    esi
  415c19:	push   edx
  415c1a:	mov    ds:0x95c2f244,eax
  415c1f:	cwde   
  415c20:	ds (bad) 
  415c22:	jle    0x415c6d
  415c24:	xlat   BYTE PTR ds:[ebx]
  415c25:	rcr    DWORD PTR [edi],cl
  415c27:	push   esp
  415c28:	dec    ebp
  415c29:	mov    ebx,0x6a9db3cc
  415c2e:	fmul   st,st(0)
  415c30:	cld    
  415c31:	out    0xca,al
  415c33:	mov    ds:0x4b4992c7,al
  415c38:	scas   al,BYTE PTR es:[edi]
  415c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c3a:	add    BYTE PTR [eax-0x75b014d4],al
  415c40:	out    0x1e,eax
  415c42:	fnstsw WORD PTR [ecx+0x1]
  415c45:	xchg   esi,eax
  415c46:	(bad)  
  415c47:	sbb    ecx,DWORD PTR [edi-0x4e2e1373]
  415c4d:	ds lock out 0xfc,eax
  415c51:	add    ah,dl
  415c53:	inc    ebp
  415c54:	shl    DWORD PTR [ecx],0x2a
  415c57:	xor    bl,BYTE PTR [ebx]
  415c59:	hlt    
  415c5a:	out    0x7e,eax
  415c5c:	aad    0xbe
  415c5e:	call   0xcafc:0xb65beb9
  415c65:	scas   eax,DWORD PTR es:[edi]
  415c66:	pop    ebx
  415c67:	es mov dl,0xa5
  415c6a:	mov    bl,0x29
  415c6c:	outs   dx,BYTE PTR ds:[esi]
  415c6d:	mov    al,0x31
  415c6f:	les    ebx,FWORD PTR [eax-0x60]
  415c72:	(bad)  
  415c73:	in     al,dx
  415c74:	pop    edi
  415c75:	(bad)  
  415c76:	iret   
  415c77:	pop    edi
  415c78:	jmp    0x191bf7a9
  415c7d:	retf   0xe4d3
  415c80:	push   ecx
  415c81:	mov    al,ds:0x63ca6d5a
  415c86:	mov    esi,0xd8e61e1b
  415c8b:	setne  BYTE PTR [esi]
  415c8e:	inc    esp
  415c8f:	mov    dh,BYTE PTR [edx-0x7def6427]
  415c95:	cmp    edi,DWORD PTR [eax-0x6de65815]
  415c9b:	xor    DWORD PTR [esp+edi*4],0x8090d2b
  415ca2:	mov    bh,BYTE PTR [ebp-0x34]
  415ca5:	mov    cs,ebx
  415ca7:	sub    al,0x50
  415ca9:	ds stc 
  415cab:	dec    ebx
  415cac:	pop    edx
  415cad:	cmp    al,0x74
  415cb0:	lods   eax,DWORD PTR ds:[esi]
  415cb1:	pusha  
  415cb2:	adc    eax,0x7b224f45
  415cb7:	xchg   esp,eax
  415cb8:	out    0x82,al
  415cba:	xor    ecx,DWORD PTR [ecx+0x3e6d3f65]
  415cc0:	fs imul bh
  415cc3:	pushf  
  415cc4:	and    BYTE PTR ds:0x9990432b,0x22
  415ccb:	sahf   
  415ccc:	imul   ecx,DWORD PTR [eax+edi*4],0x9
  415cd0:	(bad)  
  415cd1:	cld    
  415cd2:	pop    es
  415cd3:	mov    bl,BYTE PTR [ebx-0x43]
  415cd6:	sbb    esp,DWORD PTR [esi+0x60f3df96]
  415cdc:	popf   
  415cdd:	es mov cl,0x44
  415ce0:	sbb    DWORD PTR [eax+ebp*8+0x5c],ebp
  415ce4:	jge    0x415ccd
  415ce6:	add    DWORD PTR [esi+0x1],eax
  415ce9:	xor    al,0x59
  415ceb:	ins    BYTE PTR es:[edi],dx
  415cec:	imul   cx,WORD PTR [edi],0xffe2
  415cf0:	pop    ecx
  415cf1:	add    al,0x14
  415cf3:	(bad)  
  415cf4:	cli    
  415cf5:	mov    DWORD PTR [edx+0x2],ebx
  415cf8:	mov    esi,0xda581452
  415cfd:	lahf   
  415cfe:	stc    
  415cff:	sub    eax,0xc35b3d99
  415d04:	mov    edx,0xe35f17fd
  415d09:	mov    eax,ds:0xd93d2bf1
  415d0e:	push   DWORD PTR [ecx-0x45]
  415d11:	and    ah,cl
  415d13:	xchg   esi,eax
  415d14:	leave  
  415d15:	ret    0xf7c9
  415d18:	ins    BYTE PTR es:[edi],dx
  415d19:	or     DWORD PTR [ecx+0x47],eax
  415d1c:	sar    BYTE PTR [edx+0x504c9f4a],1
  415d22:	cli    
  415d23:	loope  0x415da3
  415d25:	fwait
  415d26:	sbb    ebp,DWORD PTR [eax]
  415d28:	jp     0x415cd7
  415d2a:	mov    ebx,0xa3938969
  415d2f:	das    
  415d30:	dec    eax
  415d31:	mov    bh,0x1c
  415d33:	sbb    bl,al
  415d35:	pusha  
  415d36:	mov    WORD PTR [eax+0x1a0eccbe],fs
  415d3c:	dec    esp
  415d3d:	or     eax,0x3f73b43
  415d42:	adc    eax,0xc6d623a0
  415d47:	jns    0x415d29
  415d49:	ins    DWORD PTR es:[edi],dx
  415d4a:	adc    DWORD PTR ds:0x575e2aa9,eax
  415d50:	pop    ecx
  415d51:	add    eax,edi
  415d53:	inc    ebp
  415d54:	pop    ebp
  415d55:	lock mov bh,0x33
  415d58:	or     BYTE PTR [eax+0x294681fe],bh
  415d5e:	and    eax,0xfcf4c720
  415d63:	into   
  415d64:	std    
  415d65:	(bad)  
  415d66:	adc    eax,0x38ba5c73
  415d6b:	push   es
  415d6c:	iret   
  415d6d:	js     0x415db7
  415d6f:	ret    
  415d70:	sahf   
  415d71:	scas   al,BYTE PTR es:[edi]
  415d72:	pop    ebx
  415d73:	and    eax,0x137085a7
  415d78:	xchg   ecx,eax
  415d79:	mov    eax,0x8ef099a1
  415d7e:	ins    BYTE PTR es:[edi],dx
  415d7f:	xchg   DWORD PTR ds:0xb1f916fd,esp
  415d85:	mov    eax,?
  415d87:	(bad)  
  415d89:	ds stos DWORD PTR es:[edi],eax
  415d8b:	push   edi
  415d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d8d:	outs   dx,DWORD PTR ds:[esi]
  415d8e:	jno    0x415e0e
  415d90:	mov    ebp,0x2208555e
  415d95:	mov    WORD PTR [edx-0x442f4f],ds
  415d9b:	inc    ebp
  415d9c:	test   BYTE PTR [ebp-0x1fdf0d00],0xf2
  415da3:	retf   0x348a
  415da6:	mov    ebx,0x88d4ff4d
  415dab:	shl    DWORD PTR [ecx],0xf7
  415dae:	cmp    cl,BYTE PTR [eax]
  415db0:	or     DWORD PTR [esi+0x2709d47d],esp
  415db6:	in     eax,0xbb
  415db8:	sbb    al,BYTE PTR [edx]
  415dba:	inc    esi
  415dbb:	in     al,0x72
  415dbd:	pop    eax
  415dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dbf:	xor    esi,DWORD PTR [edi]
  415dc1:	mov    eax,DWORD PTR [edi+0x9]
  415dc4:	mul    BYTE PTR [eax-0x10]
  415dc7:	mov    ah,0x61
  415dc9:	xor    ecx,DWORD PTR [edx+0x5c]
  415dcc:	scas   eax,DWORD PTR es:[edi]
  415dcd:	hlt    
  415dce:	call   0xe4affcf4
  415dd3:	hlt    
  415dd4:	adc    dh,0xb8
  415dd7:	xchg   DWORD PTR [edx+ebx*1+0x637b80bc],ecx
  415dde:	dec    ebp
  415ddf:	mov    esp,0xfeb87f0f
  415de4:	mov    edi,0x89f265d0
  415dea:	push   0xeb7fe555
  415def:	push   es
  415df0:	stos   DWORD PTR es:[edi],eax
  415df1:	test   esp,ecx
  415df3:	pop    edx
  415df4:	jp     0x415de3
  415df6:	jle    0x415e17
  415df8:	icebp  
  415df9:	clc    
  415dfa:	mov    bh,0x66
  415dfc:	inc    eax
  415dfd:	outs   dx,BYTE PTR ds:[esi]
  415dfe:	arpl   di,dx
  415e00:	cmp    BYTE PTR [edi-0x1c],dh
  415e03:	or     bh,BYTE PTR [ecx]
  415e05:	dec    esp
  415e06:	ret    
  415e07:	mov    ebp,0x2f76808e
  415e0c:	xor    al,BYTE PTR [eax]
  415e0e:	addr16 add al,0x45
  415e11:	je     0x415e35
  415e13:	and    BYTE PTR [ebx],ch
  415e15:	cmp    eax,0x6f6b3de8
  415e1a:	push   0x558c8c00
  415e1f:	in     al,0xb8
  415e21:	fadd   DWORD PTR [esi+0x2]
  415e24:	sub    eax,0x5b032deb
  415e29:	inc    edx
  415e2a:	fst    QWORD PTR [ebx+0x2c9c1973]
  415e30:	stos   BYTE PTR es:[edi],al
  415e31:	das    
  415e32:	cld    
  415e33:	test   eax,0x6172f33b
  415e38:	jo     0x415e68
  415e3a:	jle    0x415dc5
  415e3c:	fs mov cl,0xa0
  415e3f:	sbb    DWORD PTR [esp+esi*1-0x2ca75df2],esi
  415e46:	into   
  415e47:	fbld   TBYTE PTR [eax]
  415e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4a:	jg     0x415e36
  415e4c:	ins    WORD PTR es:[edi],dx
  415e4e:	outs   dx,DWORD PTR ds:[esi]
  415e4f:	hlt    
  415e50:	cmc    
  415e51:	add    al,0xf5
  415e53:	shr    esi,cl
  415e55:	iret   
  415e56:	pop    esi
  415e57:	out    0xc9,eax
  415e59:	pop    edi
  415e5a:	out    0x97,eax
  415e5c:	call   0x9d45980b
  415e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e62:	mov    esi,0x1c8c833c
  415e67:	sbb    edi,eax
  415e69:	pop    esi
  415e6a:	mov    ch,0xcd
  415e6c:	adc    eax,0x55dfa9a9
  415e71:	js     0x415eed
  415e73:	mov    eax,0x78fff4c
  415e78:	into   
  415e79:	adc    eax,0xadfffc1a
  415e7e:	(bad)  
  415e7f:	push   eax
  415e80:	push   ds
  415e81:	push   edi
  415e82:	imul   DWORD PTR [ebx]
  415e84:	jo     0x415e20
  415e86:	nop
  415e87:	in     al,0xab
  415e89:	mov    edx,0xeff8620a
  415e8e:	pushf  
  415e8f:	jl     0x415eee
  415e91:	sbb    bl,BYTE PTR [ebx]
  415e93:	shl    ah,0x45
  415e96:	mov    eax,ds:0xb81e830e
  415e9b:	repz icebp 
  415e9d:	inc    eax
  415e9e:	sub    al,0xeb
  415ea0:	fisubr DWORD PTR [ebp+0x7437531e]
  415ea6:	cld    
  415ea7:	inc    ebp
  415ea8:	adc    DWORD PTR [ebx],0xf4837c90
  415eae:	or     dh,BYTE PTR cs:[ebp-0x1bde507b]
  415eb5:	jmp    0x5319fafa
  415eba:	xchg   ebp,eax
  415ebb:	pop    esp
  415ebc:	arpl   ax,dx
  415ebe:	neg    DWORD PTR [eax]
  415ec0:	fwait
  415ec1:	add    ah,BYTE PTR [ecx]
  415ec3:	test   DWORD PTR [edx+0x75],esi
  415ec6:	cmp    eax,0x4c8a0d71
  415ecb:	adc    eax,DWORD PTR [edx-0x31]
  415ece:	int    0x24
  415ed0:	push   edi
  415ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed2:	mov    esi,DWORD PTR [esi]
  415ed4:	add    al,0xf5
  415ed6:	xor    BYTE PTR [edi+0xa5da9f],dl
  415edc:	push   edi
  415edd:	out    dx,eax
  415ede:	jmp    0x63af:0xd845c6a5
  415ee5:	ret    
  415ee6:	mov    ds:0x3116c8b4,eax
  415eeb:	out    dx,al
  415eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eed:	mov    eax,ds:0x2ddfb24
  415ef2:	dec    ebp
  415ef3:	sbb    eax,0x3c5ec364
  415ef8:	mov    esi,0x144ff7d8
  415efd:	scas   eax,DWORD PTR es:[edi]
  415efe:	add    ax,0x687f
  415f02:	sub    eax,DWORD PTR [ecx-0x79533867]
  415f08:	fcomip st,st(7)
  415f0a:	sbb    ah,BYTE PTR [ebp+edx*1+0x51598bc7]
  415f11:	cdq    
  415f12:	mov    ds:0xef4b8915,al
  415f17:	repnz clc 
  415f19:	cli    
  415f1a:	and    eax,0x50d653dc
  415f1f:	jmp    0xb624f42c
  415f24:	stc    
  415f25:	call   0xc5ca:0x45a66048
  415f2c:	js     0x415f97
  415f2e:	mov    cl,0xd9
  415f30:	ins    DWORD PTR es:[edi],dx
  415f31:	dec    eax
  415f32:	add    BYTE PTR [eax],bl
  415f34:	xchg   esi,eax
  415f35:	jno    0x415f79
  415f37:	adc    ah,BYTE PTR [esi]
  415f39:	or     al,BYTE PTR [eax-0x7e7105da]
  415f3f:	in     eax,0x3a
  415f41:	sub    BYTE PTR [ecx],al
  415f43:	fnstsw WORD PTR [edi-0x4d]
  415f46:	scas   al,BYTE PTR es:[edi]
  415f47:	ds push edx
  415f49:	xchg   ebx,eax
  415f4a:	cmp    BYTE PTR [ebp-0x46],ch
  415f4d:	push   0x5677f3a8
  415f52:	jno    0x415f17
  415f54:	push   cs
  415f55:	inc    ecx
  415f56:	into   
  415f57:	(bad)  
  415f58:	push   ebp
  415f59:	add    bh,BYTE PTR [esi-0x53]
  415f5c:	into   
  415f5d:	or     eax,0x13cb2ca7
  415f62:	adc    BYTE PTR [eax],dl
  415f64:	push   edi
  415f65:	cmp    ch,0x7c
  415f68:	retf   0x5f57
  415f6b:	dec    esi
  415f6c:	(bad)  
  415f6d:	jmp    0x8bf7994c
  415f72:	adc    ebx,DWORD PTR [ebx-0x33b0cf71]
  415f78:	test   eax,0xb7631358
  415f7d:	fs das 
  415f7f:	es pusha 
  415f81:	test   DWORD PTR [ecx-0x492263e8],ebx
  415f87:	cmp    ah,BYTE PTR [edi+0x41]
  415f8a:	(bad)  
  415f8b:	cld    
  415f8c:	and    BYTE PTR [ebx+0x19a0684c],ah
  415f92:	hlt    
  415f93:	mov    ebx,0xd962e118
  415f98:	loop   0x415fb3
  415f9a:	mov    BYTE PTR ds:0xf39f73ff,ah
  415fa0:	push   eax
  415fa1:	out    0x8b,eax
  415fa3:	in     eax,0xfb
  415fa5:	pop    es
  415fa6:	dec    DWORD PTR [ebx-0x7e]
  415fa9:	cmp    al,0x5a
  415fab:	push   cs
  415fac:	push   0x2c
  415fae:	test   al,0x6c
  415fb0:	call   0x3b0142d6
  415fb5:	sub    BYTE PTR [edx-0x506ad25b],al
  415fbb:	add    eax,0xed6201f9
  415fc0:	xor    al,0x56
  415fc2:	in     eax,0xfa
  415fc4:	sbb    DWORD PTR ds:0xb0a6a2b6,ecx
  415fca:	mov    gs,WORD PTR [eax+0x6ac3a551]
  415fd0:	(bad)  
  415fd1:	adc    ebp,eax
  415fd3:	adc    BYTE PTR [ebx+eiz*4-0x74],0x45
  415fd8:	scas   al,BYTE PTR es:[edi]
  415fd9:	rcr    DWORD PTR [eax-0x4ca144b3],0xc8
  415fe0:	mov    ecx,0x45298f3b
  415fe5:	adc    dl,dl
  415fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fe9:	cs ja  0x415fb3
  415fec:	outs   dx,DWORD PTR ds:[esi]
  415fed:	pushf  
  415fee:	xchg   ebx,eax
  415fef:	mov    ah,0xa9
  415ff1:	add    al,0x3e
  415ff3:	sti    
  415ff4:	daa    
  415ff5:	ffree  st(5)
  415ff8:	xchg   esp,eax
  415ff9:	mov    bh,0x25
  415ffb:	sub    esp,esi
  415ffd:	call   0xe576712f
  416002:	lahf   
  416003:	ins    BYTE PTR es:[edi],dx
  416004:	loopne 0x415fcc
  416006:	push   0xffffffdb
  416008:	inc    esi
  416009:	cld    
  41600a:	and    al,BYTE PTR [edi-0x6995fa7b]
  416010:	cmp    DWORD PTR [ecx-0x20],ebx
  416013:	loopne 0x416044
  416015:	fsub   QWORD PTR [esi+0x7f]
  416018:	mul    BYTE PTR [edx]
  41601a:	mov    cl,0xdc
  41601c:	repnz dec bh
  41601f:	dec    eax
  416020:	test   DWORD PTR ds:0x5a771378,edx
  416026:	sub    DWORD PTR [ecx],eax
  416028:	adc    BYTE PTR [ebx-0x6178eb56],cl
  41602e:	mov    BYTE PTR [ebx+0x18fd0f7],bl
  416034:	lods   eax,DWORD PTR ds:[esi]
  416035:	fs sbb BYTE PTR es:[eax-0x2c],ah
  41603a:	pop    ebp
  41603b:	and    esi,DWORD PTR [ecx+0x2f]
  41603e:	rcr    esi,cl
  416040:	ins    DWORD PTR es:[edi],dx
  416041:	out    0xdc,eax
  416043:	(bad)  
  416044:	mov    DWORD PTR [ecx-0x4eca14d3],ebp
  41604a:	add    eax,0xbff56802
  41604f:	cmc    
  416050:	and    ebx,DWORD PTR [ecx+ebx*1]
  416053:	call   0xa04223ca
  416058:	xchg   edi,eax
  416059:	cmc    
  41605a:	or     edx,esi
  41605c:	idiv   DWORD PTR [edx]
  41605e:	adc    DWORD PTR [edx],edx
  416060:	xlat   BYTE PTR ds:[ebx]
  416061:	xchg   DWORD PTR ds:0x2af7ab22,ebp
  416067:	push   ebx
  416068:	je     0x4160b3
  41606a:	ja     0x416002
  41606c:	nop
  41606d:	sti    
  41606e:	retf   
  41606f:	pop    es
  416070:	jmp    0xe215998f
  416075:	jle    0x41601d
  416077:	fwait
  416078:	shl    DWORD PTR [eax],0x3d
  41607b:	idiv   DWORD PTR [edi+esi*8-0x26]
  41607f:	pop    es
  416080:	or     DWORD PTR [eax],0xffffffb5
  416083:	out    dx,al
  416084:	js     0x4160c7
  416086:	mov    dh,0xef
  416088:	and    eax,0xa0d3b240
  41608d:	jl     0x41607b
  41608f:	cmp    al,0x3e
  416091:	aam    0x1b
  416093:	xlat   BYTE PTR ds:[ebx]
  416094:	lds    eax,FWORD PTR [edi-0x1d]
  416097:	(bad)  
  416098:	push   0x7f
  41609a:	cmp    al,0x56
  41609c:	aaa    
  41609d:	push   0x50
  41609f:	and    eax,DWORD PTR [eax-0x50]
  4160a2:	outs   dx,DWORD PTR ds:[esi]
  4160a3:	adc    dh,BYTE PTR [edi-0x52e085ed]
  4160a9:	xchg   BYTE PTR [edx],ch
  4160ab:	stos   BYTE PTR es:[edi],al
  4160ac:	adc    BYTE PTR [edi],dh
  4160ae:	leave  
  4160af:	repz xor edx,ebx
  4160b2:	sub    eax,0x7d38666a
  4160b7:	in     al,0x32
  4160b9:	shl    DWORD PTR [ebx],0x99
  4160bc:	lods   eax,DWORD PTR ds:[esi]
  4160bd:	and    bh,BYTE PTR [ecx]
  4160bf:	stc    
  4160c0:	lea    esp,[eax]
  4160c2:	dec    eax
  4160c3:	div    DWORD PTR [ecx+edi*4]
  4160c6:	push   es
  4160c7:	(bad)  
  4160c9:	mov    dh,0x4
  4160cb:	or     esp,DWORD PTR ds:0x6e7999f8
  4160d1:	mov    dl,0x1d
  4160d3:	repz sub DWORD PTR [ebx-0x3524606a],edx
  4160da:	fwait
  4160db:	mov    esi,esp
  4160dd:	out    0x48,al
  4160df:	jno    0x41606c
  4160e1:	pop    esi
  4160e2:	jle    0x416107
  4160e4:	adc    BYTE PTR [esi+0x416883f6],ch
  4160ea:	inc    edx
  4160eb:	test   dl,bl
  4160ed:	pop    esi
  4160ee:	stos   DWORD PTR es:[edi],eax
  4160ef:	fldenv [esi-0x74a11275]
  4160f5:	outs   dx,DWORD PTR ds:[esi]
  4160f6:	hlt    
  4160f7:	mov    ss,WORD PTR [ecx-0x7]
  4160fa:	and    BYTE PTR [esi+ebp*4+0x6d2d9ae0],ch
  416101:	adc    BYTE PTR [ecx],ch
  416103:	popf   
  416104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416105:	mov    cl,0xc6
  416107:	(bad)  
  416108:	dec    eax
  416109:	repz rcl ebp,1
  41610c:	(bad)  
  41610d:	xlat   BYTE PTR ds:[ebx]
  41610e:	ret    
  41610f:	retf   
  416110:	adc    eax,0x14cbc26f
  416115:	mov    ?,WORD PTR [edx+0x50453979]
  41611b:	out    dx,al
  41611c:	mov    ch,0xce
  41611e:	and    BYTE PTR [eax],ch
  416120:	jo     0x4160f5
  416122:	arpl   WORD PTR [edi+0x7d],si
  416125:	(bad)  
  416126:	(bad)  
  416127:	and    edx,DWORD PTR [eax-0x3913377b]
  41612d:	mov    ecx,DWORD PTR [edi+ebp*4+0x4]
  416131:	dec    ebp
  416132:	adc    eax,DWORD PTR [edi]
  416134:	push   cs
  416135:	repnz bound ebx,QWORD PTR [eax]
  416138:	mov    esp,0x783da0c9
  41613d:	mov    dl,0x25
  41613f:	test   DWORD PTR [edi+edi*1+0x8946485],ebx
  416146:	ja     0x4160ed
  416148:	mov    dl,BYTE PTR [edi]
  41614a:	sar    DWORD PTR [esi+0x19],0xd7
  41614e:	into   
  41614f:	icebp  
  416150:	mov    al,0x9c
  416152:	call   0x6ef87fe
  416157:	push   ss
  416158:	inc    edx
  416159:	clc    
  41615a:	mov    al,ds:0x55569ba2
  41615f:	outs   dx,DWORD PTR ds:[esi]
  416160:	ins    BYTE PTR es:[edi],dx
  416161:	mov    dh,0x1d
  416163:	inc    eax
  416164:	mov    bh,0xd0
  416166:	arpl   WORD PTR [ecx],si
  416168:	push   edi
  416169:	mov    edi,DWORD PTR [edi+0x3a7f3d3]
  41616f:	push   ecx
  416170:	bound  edx,QWORD PTR [esi-0x22]
  416173:	stos   DWORD PTR es:[edi],eax
  416174:	daa    
  416175:	dec    ebp
  416176:	dec    ebx
  416177:	mov    bh,0x81
  416179:	or     BYTE PTR [eax],ch
  41617b:	mov    cl,0xbe
  41617d:	xchg   ebp,eax
  41617e:	cmc    
  41617f:	adc    DWORD PTR [eax+0x162f8123],ebx
  416185:	retf   
  416186:	add    BYTE PTR [eax-0x5b5c429],ch
  41618c:	and    al,0xa3
  41618e:	aaa    
  41618f:	dec    esp
  416190:	pop    edi
  416191:	push   eax
  416192:	in     eax,0xbc
  416194:	jle    0x4161e1
  416196:	mov    ebp,0x78197448
  41619b:	int3   
  41619c:	(bad)  
  41619d:	mov    eax,ds:0xab1159b4
  4161a2:	mov    ch,0xff
  4161a4:	int    0x7d
  4161a6:	pop    esi
  4161a7:	iret   
  4161a8:	or     DWORD PTR [esi],ebp
  4161aa:	stc    
  4161ab:	ss cli 
  4161ad:	neg    BYTE PTR [ecx+0x7664854b]
  4161b3:	outs   dx,BYTE PTR ds:[esi]
  4161b4:	dec    esp
  4161b5:	add    eax,0xf1ddcd66
  4161ba:	cmp    al,0x28
  4161bc:	adc    eax,0xa3310642
  4161c1:	cmc    
  4161c2:	mov    BYTE PTR [edx-0x3481d72a],dh
  4161c8:	push   ecx
  4161c9:	not    BYTE PTR [ebx-0x1e]
  4161cc:	fadd   QWORD PTR [esi+0x3681d081]
  4161d2:	mov    ch,0xdb
  4161d4:	in     al,dx
  4161d5:	mov    ds:0xf2a2d4f5,al
  4161da:	aas    
  4161db:	ret    
  4161dc:	jo     0x4161ca
  4161de:	je     0x4161ef
  4161e0:	push   ecx
  4161e1:	and    DWORD PTR [ecx],0x8b183d6
  4161e7:	aaa    
  4161e8:	jp     0x416255
  4161ea:	gs xchg ebx,eax
  4161ec:	pusha  
  4161ed:	jno    0x4161c9
  4161ef:	cs dec ebx
  4161f1:	clc    
  4161f2:	stos   BYTE PTR es:[edi],al
  4161f3:	fdivp  st(7),st
  4161f5:	call   0x7caec87c
  4161fa:	shl    DWORD PTR [ecx],1
  4161fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fd:	clc    
  4161fe:	daa    
  4161ff:	(bad)  
  416201:	sbb    BYTE PTR [esi+0x6d],0xd6
  416205:	cmp    eax,0xbdcd9abd
  41620a:	add    al,ch
  41620c:	push   ss
  41620d:	ret    
  41620e:	out    dx,eax
  41620f:	push   0xfffffffe
  416211:	dec    ebx
  416212:	sub    eax,0x654ee31a
  416217:	test   eax,0x586a0e87
  41621c:	mov    esi,0x8009af5f
  416221:	out    0xd0,al
  416223:	mov    ch,0x6d
  416225:	sub    DWORD PTR [eax+esi*2-0x1b],esi
  416229:	ds mov edx,0x1d4dffc0
  41622f:	lods   eax,DWORD PTR ds:[esi]
  416230:	adc    al,0x38
  416232:	int3   
  416233:	dec    eax
  416234:	push   ss
  416235:	loop   0x416271
  416237:	les    ecx,FWORD PTR [edx-0x79]
  41623a:	in     eax,0x5f
  41623c:	or     al,0x28
  41623e:	pop    edx
  41623f:	jle    0x41625a
  416241:	outs   dx,BYTE PTR ds:[esi]
  416242:	add    al,0x97
  416244:	imul   edx,esi,0x6c
  416247:	cmc    
  416248:	les    ebp,FWORD PTR [ecx+0x437eacad]
  41624e:	and    BYTE PTR [bp+di],0x51
  416252:	ins    DWORD PTR es:[edi],dx
  416253:	sbb    DWORD PTR [eax],esi
  416255:	jmp    0xbd11:0xcddd40b5
  41625c:	aad    0x53
  41625e:	mov    edx,0xd596cea6
  416263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416264:	add    al,0x1b
  416266:	adc    cl,0x7b
  416269:	adc    al,BYTE PTR [edi+0x685d7d82]
  41626f:	mul    BYTE PTR [ebx+0x4cfa7be0]
  416275:	ret    
  416276:	xor    eax,0xe8de99ac
  41627b:	mov    DWORD PTR ds:0xdcdf7343,edx
  416281:	and    al,0xe1
  416283:	loope  0x4162e6
  416285:	aaa    
  416286:	push   ecx
  416287:	or     al,0x4
  416289:	dec    esp
  41628a:	popf   
  41628b:	call   0x34c2:0xb289655b
  416292:	fistp  WORD PTR [eax-0x7f4ac128]
  416298:	jmp    0x1fbe13e1
  41629d:	dec    edx
  41629e:	and    esi,DWORD PTR [edi+esi*1+0x3d66c7b6]
  4162a5:	push   ecx
  4162a6:	lahf   
  4162a7:	imul   esp,DWORD PTR [esi-0x12],0xfffffffd
  4162ab:	jns    0x416317
  4162ad:	pop    edx
  4162ae:	out    0x39,al
  4162b0:	adc    DWORD PTR [ebx-0x7d0d683f],esi
  4162b6:	jecxz  0x416263
  4162b8:	aas    
  4162b9:	sub    cl,dl
  4162bb:	push   ebp
  4162bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162bd:	inc    ebp
  4162be:	and    DWORD PTR fs:[edx+0x2d8ae099],ecx
  4162c5:	data16 aad 0xe6
  4162c8:	test   cl,0x39
  4162cb:	outs   dx,DWORD PTR ds:[esi]
  4162cc:	ja     0x4162d7
  4162ce:	push   ebx
  4162cf:	jge    0x416314
  4162d1:	xchg   esi,eax
  4162d2:	xchg   esi,eax
  4162d3:	add    bl,BYTE PTR [esi-0x6a]
  4162d6:	mov    dh,0x2f
  4162d8:	xor    ecx,esp
  4162da:	and    BYTE PTR [edi],cl
  4162dc:	jle    0x4162a0
  4162de:	add    DWORD PTR [edx],esp
  4162e0:	ds inc eax
  4162e2:	in     eax,0xbb
  4162e4:	push   eax
  4162e5:	dec    esi
  4162e6:	pop    edi
  4162e7:	loop   0x4162c1
  4162e9:	mov    dh,0x6e
  4162eb:	jl     0x416284
  4162ed:	cld    
  4162ee:	ins    BYTE PTR es:[edi],dx
  4162ef:	rcr    ebp,0xbf
  4162f2:	aas    
  4162f3:	repz call 0xf5be:0x99ea66af
  4162fb:	inc    esp
  4162fc:	mov    WORD PTR [ebx+0x3],fs
  4162ff:	and    bh,BYTE PTR [ebp+0x7d]
  416302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416303:	imul   ebp,ecx,0x19
  416306:	cs ins DWORD PTR es:[edi],dx
  416308:	cwde   
  416309:	mov    dl,0x54
  41630b:	lea    eax,[esi+0x5a61b518]
  416311:	push   ebp
  416312:	dec    BYTE PTR [ebx+0x3a]
  416315:	idiv   DWORD PTR [eax-0x540a3ed7]
  41631b:	push   eax
  41631c:	pop    es
  41631d:	es (bad) 
  41631f:	add    edx,ecx
  416321:	add    BYTE PTR [edi],0xce
  416324:	add    eax,0x9acf2290
  416329:	add    edi,ecx
  41632b:	xchg   DWORD PTR [esi+0xcb3ce0d],edx
  416331:	xchg   edi,eax
  416332:	imul   ebx,DWORD PTR [esi],0xe296af55
  416338:	fistp  DWORD PTR [edx]
  41633a:	push   esi
  41633b:	push   ss
  41633c:	cmp    eax,0xeb7acea
  416341:	inc    esi
  416342:	(bad)  
  416343:	ds pop esp
  416345:	(bad)  
  416346:	(bad)  
  416347:	loopne 0x41636c
  416349:	popf   
  41634a:	sbb    BYTE PTR [edi+0x1c73654c],dl
  416350:	adc    eax,0x17267cd0
  416355:	aas    
  416356:	outs   dx,BYTE PTR ds:[esi]
  416357:	xchg   DWORD PTR [edx],edi
  416359:	lea    esp,[ecx+0x4f]
  41635c:	gs clc 
  41635e:	nop
  41635f:	sbb    ebx,DWORD PTR [ebx+ebp*1+0x69ab9198]
  416366:	test   ebp,ebx
  416368:	xchg   edi,eax
  416369:	lea    ebx,[ecx-0x7a]
  41636c:	sub    DWORD PTR [ecx+0x73],ecx
  41636f:	add    ch,BYTE PTR [eax]
  416371:	loop   0x416313
  416373:	imul   ebx,ecx,0xb318a3ec
  416379:	inc    ebp
  41637a:	xor    al,0xf3
  41637c:	cmp    eax,0x2a9cfdce
  416381:	push   ecx
  416382:	and    dh,BYTE PTR [esi]
  416384:	xchg   BYTE PTR [ecx-0x13],bl
  416387:	sbb    eax,0x2b4b9c72
  41638c:	push   edi
  41638d:	and    ch,cl
  41638f:	pop    edi
  416390:	cs cmp ah,bh
  416393:	js     0x4163d8
  416395:	adc    eax,0xb1009de5
  41639a:	mov    esi,0x677d74c9
  41639f:	xchg   esp,eax
  4163a0:	sti    
  4163a1:	mov    ecx,0x949446c5
  4163a6:	push   ecx
  4163a7:	mov    ds:0xc2582c82,eax
  4163ac:	popa   
  4163ad:	dec    ah
  4163af:	xchg   ecx,eax
  4163b0:	cmp    eax,0xe3de9e0a
  4163b5:	sbb    al,0xa0
  4163b7:	(bad)  [ebx-0x7f]
  4163ba:	or     dl,BYTE PTR [eax+0x5c]
  4163bd:	jle    0x416389
  4163bf:	sub    ch,cl
  4163c1:	stos   BYTE PTR es:[edi],al
  4163c2:	xor    dl,BYTE PTR ds:[edx-0x5c]
  4163c6:	add    al,0xeb
  4163c8:	call   0xd130:0xf3df3caa
  4163cf:	xchg   ecx,eax
  4163d0:	add    BYTE PTR [edx+0x395b3d79],0xba
  4163d7:	(bad)  
  4163d8:	stc    
  4163d9:	jg     0x416440
  4163db:	popf   
  4163dc:	inc    ecx
  4163dd:	in     eax,dx
  4163de:	imul   esp,esp,0x2a
  4163e1:	add    eax,0xc906edc5
  4163e6:	mov    al,0xf1
  4163e8:	fadd   DWORD PTR [edi]
  4163ea:	sub    DWORD PTR ds:0xd9d8bc38,0x7c360dd7
  4163f4:	dec    esp
  4163f5:	pushf  
  4163f6:	mov    DWORD PTR [ebx+0x19],edi
  4163f9:	xchg   edx,eax
  4163fa:	inc    ebx
  4163fb:	lahf   
  4163fc:	loop   0x41637e
  4163fe:	adc    eax,0x490cc5d0
  416403:	in     eax,0xc6
  416405:	xlat   BYTE PTR ds:[ebx]
  416406:	pop    eax
  416407:	ret    
  416408:	sbb    al,0xa
  41640a:	dec    eax
  41640b:	dec    eax
  41640c:	push   edi
  41640d:	adc    DWORD PTR [ecx+edx*1+0x7a944a9c],edx
  416414:	cld    
  416415:	or     ebx,edi
  416417:	or     al,ch
  416419:	test   al,0x54
  41641b:	pop    es
  41641c:	dec    edi
  41641d:	add    eax,DWORD PTR [ecx+edx*4]
  416420:	popf   
  416421:	sbb    al,0xd2
  416423:	test   BYTE PTR [eax-0x29],dh
  416426:	mov    esi,0x9589e291
  41642b:	xor    al,0xe6
  41642d:	cs stos BYTE PTR es:[edi],al
  41642f:	xchg   ebx,eax
  416430:	sbb    eax,0x829e100a
  416435:	jns    0x416478
  416437:	iret   
  416438:	lds    ecx,FWORD PTR [ebx]
  41643a:	dec    esp
  41643b:	sbb    dl,bl
  41643d:	lea    esp,[esi]
  41643f:	jmp    0x725a5cc4
  416444:	(bad)  
  416445:	hlt    
  416446:	push   es
  416447:	jno    0x416497
  416449:	shl    DWORD PTR ds:0x7f49583c,0x60
  416450:	sbb    cl,BYTE PTR [edi+0x5f]
  416453:	int    0x27
  416455:	jns    0x416422
  416457:	jnp    0x4164bb
  416459:	ds mov ebp,0x590ce93e
  41645f:	mov    BYTE PTR [esi],ch
  416461:	out    0x80,eax
  416463:	in     al,0xe5
  416465:	xor    al,0xda
  416467:	es leave 
  416469:	leave  
  41646a:	stc    
  41646b:	outs   dx,BYTE PTR ds:[esi]
  41646c:	mov    edi,0x1b58b5f9
  416471:	es repz shr edx,1
  416475:	leave  
  416476:	fwait
  416477:	leave  
  416478:	jo     0x4164d3
  41647a:	and    DWORD PTR [ebp+0xeb83ed3],0xebb211e2
  416484:	jp     0x4164ba
  416486:	mov    dh,0xe8
  416488:	popa   
  416489:	push   ecx
  41648a:	push   eax
  41648b:	and    al,0x4f
  41648d:	jae    0x4164f7
  41648f:	dec    ebx
  416490:	or     esp,DWORD PTR [eax+0x61]
  416493:	gs push ss
  416495:	es aam 0xb2
  416498:	add    edx,DWORD PTR [ecx+0x4af33460]
  41649e:	repz adc DWORD PTR [ebx-0x4a],0xe2664f8f
  4164a6:	(bad)  
  4164a7:	ja     0x4164c4
  4164a9:	add    ecx,DWORD PTR [eax+0x3c]
  4164ac:	shl    BYTE PTR [edx-0x7a],cl
  4164af:	repz push ebx
  4164b1:	lds    edi,FWORD PTR [ebx]
  4164b3:	add    al,0x23
  4164b5:	in     eax,dx
  4164b6:	cmovb  ebp,eax
  4164b9:	jno    0x4164c6
  4164bb:	test   eax,0x7dd324d3
  4164c0:	aam    0x6
  4164c2:	pop    ds
  4164c3:	mov    al,ds:0xcbac2d1f
  4164c8:	jle    0x41649e
  4164ca:	and    al,0x85
  4164cc:	cmp    cl,bl
  4164ce:	cli    
  4164cf:	call   FWORD PTR [esi+edx*1-0x7c]
  4164d3:	scas   eax,DWORD PTR es:[edi]
  4164d4:	imul   eax,DWORD PTR [esi+eiz*1],0x13
  4164d8:	mov    bx,0x290a
  4164dc:	fild   QWORD PTR [esp+ecx*4-0x143dfe80]
  4164e3:	push   cs
  4164e4:	fnstenv [edi]
  4164e6:	adc    BYTE PTR [ebx+0x40f8e474],0xfa
  4164ed:	mov    al,0xb8
  4164ef:	dec    esp
  4164f0:	jo     0x4164b7
  4164f2:	imul   edi,eax,0x1cdc3f8f
  4164f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f9:	cmp    eax,0x19cd1e13
  4164fe:	adc    eax,0x2565a58e
  416503:	dec    edx
  416504:	rol    BYTE PTR [ecx],0x29
  416507:	(bad)  
  416508:	mov    edi,0x3f860a3c
  41650d:	jmp    0x416503
  41650f:	jae    0x4164e0
  416511:	or     al,0xb4
  416513:	mov    bl,0x81
  416515:	out    dx,eax
  416516:	or     DWORD PTR [ebx],ebp
  416518:	retf   0x693c
  41651b:	and    ch,BYTE PTR [esi+0x1031b0e9]
  416521:	cmp    al,0xd9
  416523:	mov    al,BYTE PTR [esi]
  416525:	mov    al,ds:0x3c2affd8
  41652a:	addr16 gs inc ebx
  41652d:	jp     0x4164c0
  41652f:	ror    dl,cl
  416531:	leave  
  416532:	and    BYTE PTR [ecx-0x26ae8a7f],dh
  416538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416539:	inc    esi
  41653a:	fsub   st,st(1)
  41653c:	add    al,dh
  41653e:	jno    0x416547
  416540:	inc    ebx
  416541:	lods   eax,DWORD PTR ds:[esi]
  416542:	sub    ebx,DWORD PTR [ebx-0xe3f6ae]
  416548:	shl    cl,1
  41654a:	add    al,0x77
  41654c:	out    0x91,eax
  41654e:	je     0x4164e3
  416550:	cwde   
  416551:	leave  
  416552:	dec    ecx
  416553:	mov    eax,0x3fea7250
  416558:	and    DWORD PTR [eax+eax*4-0x6d644ae7],edx
  41655f:	xor    BYTE PTR [ebp-0x77],al
  416562:	lea    edi,[ecx+0x35435e0b]
  416568:	inc    edi
  416569:	int3   
  41656a:	sub    esp,DWORD PTR [eax+edi*2+0x142832d1]
  416571:	fld    TBYTE PTR [esi+0x13f3d6d]
  416577:	ins    BYTE PTR es:[edi],dx
  416578:	mov    esi,0x5fb4954d
  41657d:	push   0xffffff8b
  41657f:	mov    esp,0xad4900b4
  416584:	test   edx,edx
  416586:	pop    esp
  416587:	sub    ah,BYTE PTR [esi]
  416589:	out    dx,al
  41658a:	adc    al,0xb
  41658c:	jo     0x416532
  41658e:	xor    esp,edx
  416590:	pop    esp
  416591:	ficom  WORD PTR [ebx]
  416593:	xor    al,dl
  416595:	jo     0x416548
  416597:	les    eax,FWORD PTR [esi-0x3a8cca35]
  41659d:	mov    esp,esp
  41659f:	pop    ss
  4165a0:	clc    
  4165a1:	adc    cl,cl
  4165a3:	dec    ecx
  4165a4:	sti    
  4165a5:	test   BYTE PTR [ebx-0x47],dl
  4165a8:	loope  0x416573
  4165aa:	pop    eax
  4165ab:	mov    ecx,?
  4165ad:	add    DWORD PTR ss:[eax+0x5316eaf4],ecx
  4165b4:	mov    al,0xa2
  4165b6:	mov    al,ds:0x3d092d7e
  4165bb:	adc    DWORD PTR [eax+0x27983b49],0x236f43ce
  4165c5:	sbb    esp,DWORD PTR [edi+eiz*1-0x6c5b07d9]
  4165cc:	xchg   ecx,eax
  4165cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165ce:	push   0x3eeed35a
  4165d3:	pop    ebx
  4165d4:	ss int3 
  4165d6:	dec    edi
  4165d7:	adc    eax,0xc667f9ea
  4165dc:	xchg   DWORD PTR [edi-0xb8e3187],ecx
  4165e2:	rcr    DWORD PTR [edx],cl
  4165e4:	es ror dh,0xb4
  4165e8:	mov    edx,0x7766b09b
  4165ed:	shl    BYTE PTR [edx-0x6e7330d0],cl
  4165f3:	out    0x58,eax
  4165f5:	and    al,0x2a
  4165f7:	jmp    0xbb32:0x3a96ae3f
  4165fe:	fsubp  st(2),st
  416600:	ror    DWORD PTR [eax-0x4f],0x4f
  416604:	nop
  416605:	stc    
  416606:	and    eax,0x4876fd75
  41660b:	and    DWORD PTR [ecx+0xb],esi
  41660e:	leave  
  41660f:	enter  0x2a5b,0x58
  416613:	aam    0x14
  416615:	jge    0x4165a2
  416617:	rcr    DWORD PTR [esi+0x3e1cab8],1
  41661d:	mov    esi,0x525a3924
  416622:	inc    ebp
  416623:	lahf   
  416624:	inc    ebx
  416625:	outs   dx,BYTE PTR ss:[esi]
  416627:	out    0xcb,eax
  416629:	mov    ebp,0x23ce556a
  41662e:	jg     0x4165ff
  416630:	lods   eax,DWORD PTR ds:[esi]
  416631:	icebp  
  416632:	mov    eax,ds:0x9494fe4b
  416637:	and    DWORD PTR [eax],eax
  416639:	jbe    0x4165f0
  41663b:	cmp    ebx,DWORD PTR [ebx+0x2880afba]
  416641:	leave  
  416642:	jne    0x4165d8
  416644:	aaa    
  416645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416646:	and    BYTE PTR [ebp+0x201f4407],bl
  41664c:	dec    ebp
  41664d:	jmp    0x416693
  41664f:	jg     0x416649
  416651:	out    dx,eax
  416652:	retf   0xd4da
  416655:	les    ecx,FWORD PTR [edx-0x38f095d7]
  41665b:	jmp    0xa79f:0x5833338f
  416662:	ret    
  416663:	cmp    BYTE PTR [ecx+0x6bf4b8d1],ah
  416669:	rol    DWORD PTR [edi-0x51e42f50],cl
  41666f:	pop    eax
  416670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416671:	das    
  416672:	or     ebp,ebx
  416674:	repnz pop edx
  416676:	jbe    0x4166a6
  416678:	inc    ebp
  416679:	mov    eax,DWORD PTR [edi]
  41667b:	stos   WORD PTR es:[edi],ax
  41667d:	pop    ecx
  41667e:	add    al,0x86
  416680:	xlat   BYTE PTR ds:[ebx]
  416681:	nop
  416682:	jno    0x4166dc
  416684:	popf   
  416685:	mov    al,0xb1
  416687:	push   eax
  416688:	cs scas al,BYTE PTR es:[edi]
  41668a:	cmp    eax,0xffb224c4
  41668f:	(bad)
  416692:	jge    0x416633
  416694:	cmp    eax,0x301deb0a
  416699:	or     DWORD PTR ds:0x49c8d5b6,ebp
  41669f:	ja     0x41666b
  4166a1:	loopne 0x416687
  4166a3:	adc    eax,0xc833878a
  4166a8:	pop    edi
  4166a9:	neg    cl
  4166ab:	mov    ebx,0xdbc790b
  4166b0:	ins    DWORD PTR es:[edi],dx
  4166b1:	aaa    
  4166b2:	adc    DWORD PTR [ebp+0x63bb4936],esi
  4166b8:	cmp    eax,0xfe7373e2
  4166bd:	leave  
  4166be:	mov    ch,0xd2
  4166c0:	and    eax,0x18496fc5
  4166c5:	mov    edx,0x7fbc16a
  4166ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166cb:	or     edx,DWORD PTR ds:0xe956592b
  4166d1:	jnp    0x41672d
  4166d3:	jecxz  0x4166e3
  4166d5:	pop    edx
  4166d6:	int    0x4c
  4166d8:	(bad)  
  4166d9:	in     eax,dx
  4166da:	ss jmp 0x52b9:0x9cdf7c5c
  4166e2:	shr    BYTE PTR [ebx+0x31],1
  4166e5:	mov    edx,0xb4a08063
  4166ea:	pop    edx
  4166eb:	dec    esp
  4166ec:	addr16 and al,0x7d
  4166ef:	jmp    0x416764
  4166f1:	fisubr WORD PTR [ebx+0x42]
  4166f4:	or     BYTE PTR [esp+ebx*1],bl
  4166f7:	mov    ecx,DWORD PTR [edi+0x58]
  4166fa:	jnp    0x4166c3
  4166fc:	retf   0xe6e3
  4166ff:	push   ebp
  416700:	lock cli 
  416702:	pop    ebp
  416703:	fs jmp 0x51c5f849
  416709:	or     bl,al
  41670b:	fist   WORD PTR [ecx]
  41670d:	pop    edx
  41670e:	mov    ds:0x87bcf652,al
  416713:	test   edx,ebp
  416715:	mov    edx,0xb8f6f032
  41671a:	add    DWORD PTR [edx+0x4a0f804b],0xf93a13da
  416724:	mov    ebp,0xbd968817
  416729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41672a:	frstor [esi+0x20490e9c]
  416730:	cs aam 0xf7
  416733:	jl     0x4166e1
  416735:	adc    cl,ch
  416737:	pop    edi
  416738:	pop    esi
  416739:	lods   al,BYTE PTR ds:[esi]
  41673a:	les    edi,FWORD PTR [ebx+0xb063ab4]
  416740:	ficom  WORD PTR [edx+0x1434cdac]
  416746:	into   
  416747:	pop    ecx
  416748:	jb     0x41675f
  41674a:	mov    dh,dh
  41674c:	stc    
  41674d:	out    0x6f,eax
  41674f:	fnstcw WORD PTR [ecx]
  416751:	mov    esi,0x4111c5b2
  416756:	sbb    dh,BYTE PTR [ebx-0x60]
  416759:	jae    0x4167d9
  41675b:	es dec edi
  41675d:	fidiv  WORD PTR [edi+0x338bf095]
  416763:	fs mov cl,0xfb
  416766:	inc    edi
  416767:	cmp    bl,BYTE PTR [ebp-0x3cb69c3d]
  41676d:	push   edi
  41676e:	iret   
  41676f:	scas   al,BYTE PTR es:[edi]
  416770:	push   0xbfe435d4
  416775:	and    eax,0xa3b7a2b4
  41677a:	lods   al,BYTE PTR ds:[esi]
  41677b:	ror    DWORD PTR [ecx-0x28917a66],1
  416781:	and    BYTE PTR [esi-0x68],0x3e
  416785:	out    dx,eax
  416786:	cs mov edx,0x11208ab9
  41678c:	scas   eax,DWORD PTR es:[edi]
  41678d:	push   ecx
  41678e:	mov    ebx,0xf6d760dc
  416793:	lds    ebp,FWORD PTR [ebx]
  416795:	data16 xor al,0x2
  416798:	mov    al,0xae
  41679a:	cmc    
  41679b:	enter  0x5995,0x25
  41679f:	jbe    0x4167dc
  4167a1:	adc    al,ah
  4167a3:	xor    eax,0xca30bd1f
  4167a8:	fsubr  DWORD PTR ds:0x28b77169
  4167ae:	mov    eax,0x4dbbf598
  4167b3:	lods   al,BYTE PTR ds:[esi]
  4167b4:	je     0x4167c3
  4167b6:	scas   eax,DWORD PTR es:[edi]
  4167b7:	adc    BYTE PTR cs:[ecx],dh
  4167ba:	jno    0x416791
  4167bc:	dec    edi
  4167bd:	add    edx,DWORD PTR [edi+0x4]
  4167c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c1:	or     al,0x47
  4167c3:	loop   0x4167f7
  4167c5:	mov    ch,0x80
  4167c7:	adc    BYTE PTR [eax],dh
  4167c9:	push   ebx
  4167ca:	lods   eax,DWORD PTR ds:[esi]
  4167cb:	sub    BYTE PTR [edx+0x627c23e5],bh
  4167d1:	(bad)  
  4167d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167d3:	in     eax,dx
  4167d4:	ins    DWORD PTR es:[edi],dx
  4167d5:	fisttp QWORD PTR [ebx+0x5607f20d]
  4167db:	ds or  dl,0x21
  4167df:	xchg   ecx,eax
  4167e0:	jae    0x416851
  4167e2:	test   bh,dl
  4167e4:	mov    al,ds:0x4730e66d
  4167e9:	mov    eax,ds:0x6826b7be
  4167ee:	inc    esi
  4167ef:	mov    ebx,?
  4167f1:	inc    ebp
  4167f2:	fst    QWORD PTR gs:[edi]
  4167f5:	cli    
  4167f6:	stos   BYTE PTR es:[edi],al
  4167f7:	mov    ah,0x4d
  4167f9:	fs repz push 0xc3ff7478
  416800:	fnsave ds:0x9282f3
  416806:	push   ss
  416807:	pop    ecx
  416808:	pop    ebp
  416809:	xchg   DWORD PTR [esi+0x52c163c5],edi
  41680f:	call   0x6a13:0x4fcb5f4c
  416816:	pusha  
  416817:	stos   DWORD PTR es:[edi],eax
  416818:	jge    0x416840
  41681a:	add    al,0xe3
  41681c:	std    
  41681d:	aad    0xcf
  41681f:	fs inc esi
  416821:	mov    ?,WORD PTR ds:0xb7d70a92
  416827:	into   
  416828:	push   eax
  416829:	xor    ebx,DWORD PTR [eax-0x377576ce]
  41682f:	jmp    0xb9d07039
  416834:	iret   
  416835:	push   esi
  416836:	ror    DWORD PTR [ebx+eiz*1],0x46
  41683a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41683b:	test   al,0xe8
  41683d:	iret   
  41683e:	sbb    BYTE PTR [esi-0x21d8d120],al
  416844:	add    eax,0x5e544c2
  416849:	add    eax,edx
  41684b:	mov    WORD PTR [esi],ss
  41684d:	(bad)  
  41684e:	(bad)  [esi+ecx*4+0x31]
  416852:	js     0x416896
  416854:	mov    dl,0x2
  416856:	cs rol edi,cl
  416859:	dec    eax
  41685a:	pushf  
  41685b:	lea    edi,[ecx+esi*4]
  41685e:	pop    ecx
  41685f:	or     ah,BYTE PTR [edi+0x72e16511]
  416865:	hlt    
  416866:	mov    al,ds:0x5876d627
  41686b:	jns    0x4167ef
  41686d:	loope  0x4168a5
  41686f:	mov    edi,0x27cbcf42
  416874:	jns    0x4168c8
  416876:	ss ret 
  416878:	inc    ebx
  416879:	mov    ecx,0x4af1453b
  41687e:	adc    BYTE PTR [ebx-0x75318a4a],dl
  416884:	dec    esp
  416885:	aas    
  416886:	test   eax,0x8ef7c846
  41688b:	aam    0x83
  41688d:	das    
  41688e:	int    0x93
  416890:	jg     0x41683a
  416892:	add    eax,0x57cf4fc4
  416897:	in     al,dx
  416898:	sti    
  416899:	inc    ebx
  41689a:	dec    edx
  41689b:	nop    DWORD PTR ds:0xbc0e283a
  4168a2:	ins    BYTE PTR es:[edi],dx
  4168a3:	in     al,0x15
  4168a5:	sub    eax,0x2c271658
  4168aa:	cwde   
  4168ab:	and    edx,eax
  4168ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ae:	dec    edx
  4168af:	jne    0x416886
  4168b1:	add    bh,al
  4168b3:	xchg   ch,cl
  4168b5:	fsqrt  
  4168b7:	test   DWORD PTR ds:0x9bf436c5,ecx
  4168bd:	adc    DWORD PTR [ebx+ebx*8-0x5636fce2],esi
  4168c4:	cmp    DWORD PTR [edi-0x67f48bb4],0x98e86c53
  4168ce:	cli    
  4168cf:	jo     0x416941
  4168d1:	add    ch,ch
  4168d3:	push   edi
  4168d4:	dec    ecx
  4168d5:	lock xchg BYTE PTR ds:0xdb1b121b,bh
  4168dc:	scas   eax,DWORD PTR es:[edi]
  4168dd:	xor    ebx,ebp
  4168df:	mov    dh,0x15
  4168e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e2:	fisttp QWORD PTR [edx+ecx*4-0xa]
  4168e6:	sbb    eax,0x7f750939
  4168eb:	into   
  4168ec:	xchg   esi,eax
  4168ed:	jmp    0x2a46a3c
  4168f2:	jmp    0x17d525e9
  4168f7:	pop    eax
  4168f8:	cmp    eax,0x55032ea5
  4168fd:	pop    ds
  4168fe:	rcl    DWORD PTR [edi-0xa6d7244],cl
  416904:	inc    ebx
  416905:	test   DWORD PTR [esi-0x17],ebx
  416908:	fsubrp st(3),st
  41690a:	mov    ebx,0x643ca012
  41690f:	cli    
  416910:	mov    ebx,0x210b6460
  416915:	mov    dh,0xc3
  416917:	out    0x72,al
  416919:	ret    
  41691a:	cmp    DWORD PTR [ebx+0x39e699a4],ecx
  416920:	mov    WORD PTR [esi+0x60d66e9],?
  416926:	xchg   DWORD PTR [esi-0x74c8d0be],edx
  41692c:	jb     0x41690b
  41692e:	pop    edx
  41692f:	xchg   BYTE PTR [ebx],ch
  416931:	ins    BYTE PTR es:[edi],dx
  416932:	imul   ebx,DWORD PTR [esi-0x6e],0x2a
  416936:	xor    DWORD PTR [edx],ecx
  416938:	into   
  416939:	or     ecx,DWORD PTR [ebp-0x7f]
  41693c:	or     eax,0x32c1403f
  416941:	mov    WORD PTR [esi+ebp*2+0x6c66a879],ss
  416948:	out    0xc5,al
  41694a:	jne    0x416915
  41694c:	ins    DWORD PTR es:[edi],dx
  41694d:	xchg   DWORD PTR [eax+0xa],ebp
  416950:	(bad)  
  416951:	mov    esi,0x98592187
  416956:	dec    edx
  416957:	sub    eax,0xd088cfb6
  41695c:	fcom   st(1)
  41695e:	int    0x87
  416960:	cmc    
  416961:	cmp    eax,0x38d30297
  416966:	push   ss
  416967:	mov    dl,0x39
  416969:	jmp    0x92b3333d
  41696e:	mov    ah,0x7
  416970:	mov    esi,0xb72167c7
  416975:	push   esp
  416976:	pusha  
  416977:	(bad)  
  416978:	pop    edi
  416979:	and    edx,DWORD PTR [edx-0xd]
  41697c:	sub    bh,BYTE PTR [esi-0x2c]
  41697f:	sbb    ah,dh
  416981:	retf   0xf5b2
  416984:	sahf   
  416985:	jo     0x416930
  416987:	mov    WORD PTR [esi],ss
  416989:	int    0x75
  41698b:	push   ecx
  41698c:	sbb    edx,ecx
  41698e:	adc    DWORD PTR [ebx-0x2900038b],ecx
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
