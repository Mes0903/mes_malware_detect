
81da4250b815f3e88a75a3cd4d8e41e9935349222a763f76d42efcdd28b12fd5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43470b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4345e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434653
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4345f3,0x434647
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43470b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43463b,0x10
  40104d:	cmp    DWORD PTR ds:0x43463b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43463b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43463b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43463b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43463b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43463b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43463b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43470f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43465f
  4010b6:	mov    ebx,DWORD PTR ds:0x434733
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434607,0x43468b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43468f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43468f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43468f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43468f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43468f,0xe
  401103:	jne    0x401119
  401109:	push   0x4345eb
  40110e:	push   0x43495b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43468f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43468f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43468f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4345eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0xc2c21829
  401151:	js     0x401192
  401153:	jle    0x4011d3
  401155:	jle    0x4011d5
  401157:	mov    ch,0x7f
  401159:	jle    0x4011d9
  40115b:	into   
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	push   cs
  401168:	mov    bl,0xc
  40116a:	rdpmc  
  40116c:	bswap  esp
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0xd39ff703
  401207:	sub    al,0xd1
  401209:	or     al,0x91
  40120b:	imul   esi,DWORD PTR [eax+0x6aac7c55],0x7304b513
  401215:	aad    0x7e
  401217:	inc    edi
  401218:	int    0xf9
  40121a:	mov    ebp,0x13be79a4
  40121f:	stos   DWORD PTR es:[edi],eax
  401220:	fdivr  QWORD PTR [esi]
  401222:	jmp    0x2130:0xd3851b6c
  401229:	add    cl,0xb6
  40122c:	jge    0x40128c
  40122e:	sti    
  40122f:	cdq    
  401230:	push   es
  401231:	jne    0x401251
  401233:	in     eax,0xc5
  401235:	and    ecx,0xeedfec01
  40123b:	jb     0x401255
  40123d:	test   DWORD PTR [ebx+0xf0f1d83],ebp
  401243:	mov    ebp,0xedf6a4cd
  401248:	jle    0x401241
  40124a:	push   ss
  40124b:	jg     0x4011f4
  40124d:	das    
  40124e:	loop   0x40127f
  401250:	lahf   
  401251:	mov    ds:0xffb3ed8f,al
  401256:	cld    
  401257:	(bad)  
  401258:	xchg   ecx,eax
  401259:	out    0x56,al
  40125b:	test   BYTE PTR [edx+0x6b],cl
  40125e:	cmp    DWORD PTR [ebx+eiz*2-0x52],0x16a71ae6
  401266:	pop    esi
  401267:	out    dx,eax
  401268:	test   DWORD PTR [edx-0x44ad7fc6],esi
  40126e:	inc    ebx
  40126f:	scas   al,BYTE PTR es:[edi]
  401270:	or     bh,BYTE PTR [ecx+0x66]
  401273:	xchg   BYTE PTR ds:0x57ca9672,ch
  401279:	jae    0x401266
  40127b:	jb     0x40123b
  40127d:	rol    DWORD PTR [esi+0x418947a0],cl
  401283:	fdivr  DWORD PTR [edx-0x7a]
  401286:	jp     0x401281
  401288:	and    al,0xec
  40128a:	mov    WORD PTR [eax+0x4],ss
  40128d:	repnz inc esp
  40128f:	cmc    
  401290:	cmp    eax,0xdd06a2c9
  401295:	fnstsw WORD PTR [edx+edi*8-0x21]
  401299:	fldenv [esp+esi*4]
  40129c:	pop    ss
  40129d:	in     eax,dx
  40129e:	jne    0x4012d0
  4012a0:	inc    esi
  4012a1:	xor    al,0x54
  4012a3:	call   0x171e1b57
  4012a8:	jmp    0x4012b7
  4012aa:	popf   
  4012ab:	and    bl,ch
  4012ad:	jl     0x4012fb
  4012af:	sub    DWORD PTR [ebp+0x65],edx
  4012b2:	add    ebp,esp
  4012b4:	mov    ds:0x1016d6d4,eax
  4012b9:	out    dx,eax
  4012ba:	mov    WORD PTR [ebx],?
  4012bc:	cmp    esi,0x406817f2
  4012c2:	fst    QWORD PTR [edx+0x6c]
  4012c5:	xchg   ebp,eax
  4012c6:	dec    edx
  4012c7:	push   0x6609f072
  4012cc:	std    
  4012cd:	into   
  4012ce:	cli    
  4012cf:	loope  0x40130a
  4012d1:	aad    0xae
  4012d3:	push   ebp
  4012d4:	jne    0x40129e
  4012d6:	push   ebx
  4012d7:	jo     0x401350
  4012d9:	pop    esp
  4012da:	mov    ebp,0x17f89223
  4012df:	not    DWORD PTR [ecx+0x21fa7553]
  4012e5:	popa   
  4012e6:	jns    0x401278
  4012e8:	inc    edx
  4012e9:	imul   esi,DWORD PTR [esi+0x36],0xffffff98
  4012ed:	push   cs
  4012ee:	stos   DWORD PTR es:[edi],eax
  4012ef:	push   ebx
  4012f0:	jb     0x4012da
  4012f2:	mov    esi,0x6d57e78d
  4012f7:	pop    esi
  4012f8:	bndldx bnd3,[ebx]
  4012fb:	or     DWORD PTR [esp+edi*2+0x1f31918d],edx
  401302:	cdq    
  401303:	leave  
  401304:	mov    bl,0xef
  401306:	cwde   
  401307:	or     DWORD PTR [esi+ebp*8],0xffffff8d
  40130b:	mov    dl,0x15
  40130d:	pop    edx
  40130e:	stc    
  40130f:	and    BYTE PTR [ebx],dh
  401311:	mov    cl,0x89
  401313:	add    DWORD PTR [ecx+0x1222d1],eax
  401319:	add    BYTE PTR [ebp+0x3581fc45],cl
  40131f:	jg     0x401367
  401321:	inc    ebx
  401322:	add    ah,bl
  401324:	push   ebx
  401325:	add    BYTE PTR [eax],al
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43463f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4345ef,0x4345e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4345f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4346c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4346c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4346c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4346c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4346c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4346c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4346c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4346c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43463f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43468b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4345ef,0x43463f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4345eb,0x4346f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434603,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [ecx-0x29],eax
  401419:	imul   ebx,ecx,0x7e7e7fb5
  40141f:	mov    ch,0x7f
  401421:	jle    0x4014a1
  401423:	mov    bl,BYTE PTR [edx-0x166f76a9]
  401429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40142a:	and    ch,ah
  40142c:	cmp    eax,0x13a1dcc1
  401431:	lods   al,BYTE PTR ds:[esi]
  401432:	push   edx
  401433:	xchg   esi,eax
  401434:	(bad)  
  401435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401436:	mov    ah,0xc
  401438:	popf   
  401439:	pop    ebp
  40143a:	or     al,0x96
  40143c:	mov    esi,0xe3ff539e
  401441:	fild   DWORD PTR cs:[ebp+ebp*4-0xf]
  401446:	push   ebp
  401447:	(bad)  
  401448:	mov    ebp,0xd9e39f1b
  40144d:	xchg   esp,eax
  40144e:	xor    al,0x77
  401450:	hlt    
  401451:	out    0x83,al
  401453:	jge    0x401482
  401455:	xor    esi,esp
  401457:	adc    al,0x35
  401459:	popf   
  40145a:	mov    ds:0x441387e1,eax
  40145f:	mov    ebx,0x777d090
  401464:	xchg   ebx,eax
  401465:	inc    edx
  401466:	inc    eax
  401467:	fdiv   QWORD PTR [edx-0x3b]
  40146a:	inc    esp
  40146b:	test   dl,cl
  40146d:	(bad)  
  40146e:	push   ss
  40146f:	out    0xe8,al
  401471:	inc    eax
  401472:	jl     0x401446
  401474:	fs loopne 0x401474
  401477:	in     eax,0xea
  401479:	idiv   ebp
  40147b:	fldcw  WORD PTR [ecx+0x17]
  40147e:	xchg   edx,eax
  40147f:	aam    0xaa
  401481:	mov    ah,0x19
  401483:	imul   edi,DWORD PTR [edx],0xeec29ed5
  401489:	mov    ah,0x86
  40148b:	out    dx,eax
  40148c:	dec    DWORD PTR [edi]
  40148e:	rcr    DWORD PTR [eax],0x4
  401491:	popf   
  401492:	adc    BYTE PTR [ecx],cl
  401494:	pop    edx
  401495:	pop    edi
  401496:	mul    DWORD PTR gs:[edx]
  401499:	and    esp,esp
  40149b:	dec    ebp
  40149c:	leave  
  40149d:	ret    
  40149e:	aaa    
  40149f:	xchg   ebx,eax
  4014a0:	xchg   ecx,eax
  4014a1:	jmp    0xe3831ff3
  4014a6:	add    ebx,ebx
  4014a8:	dec    esi
  4014a9:	mov    bl,0x5f
  4014ab:	push   es
  4014ac:	adc    DWORD PTR [edi+0x55e5fb3e],esi
  4014b2:	jo     0x4014cd
  4014b4:	inc    edi
  4014b5:	mov    esp,edi
  4014b7:	bound  edi,QWORD PTR [edi]
  4014b9:	enter  0x14db,0x97
  4014bd:	mov    al,0x68
  4014bf:	mov    al,0x8c
  4014c1:	mov    dh,bh
  4014c3:	xchg   DWORD PTR [eax-0x2734324f],ebx
  4014c9:	push   ebp
  4014ca:	cs loopne 0x40146b
  4014cd:	jl     0x401478
  4014cf:	push   ds
  4014d0:	shr    dh,1
  4014d2:	mov    al,0x93
  4014d4:	ficom  DWORD PTR [edx]
  4014d6:	mov    bl,0xf4
  4014d8:	das    
  4014d9:	in     eax,0xb0
  4014db:	xchg   BYTE PTR [eax+esi*4-0x58],cl
  4014df:	test   eax,0x5de35514
  4014e4:	sbb    eax,0x540a4b40
  4014e9:	or     edx,DWORD PTR [edx+0x35]
  4014ec:	lods   eax,DWORD PTR ds:[esi]
  4014ed:	dec    edx
  4014ee:	sbb    ebx,0x1c
  4014f1:	pop    ss
  4014f2:	lods   al,BYTE PTR ds:[esi]
  4014f3:	mov    edi,0x99e36eb0
  4014f8:	(bad)  
  4014fa:	into   
  4014fb:	(bad)  
  4014fc:	shr    bh,0x2b
  4014ff:	std    
  401500:	je     0x401553
  401502:	mov    ch,0xbd
  401504:	sub    DWORD PTR [ebx-0x66],edx
  401507:	xor    al,cl
  401509:	add    ebx,DWORD PTR [eax+0x3314a6f9]
  40150f:	fwait
  401510:	xchg   edx,eax
  401511:	adc    ah,BYTE PTR [ebx+esi*4]
  401514:	cmp    ecx,DWORD PTR [ebp+0x73]
  401517:	and    DWORD PTR fs:[ebx+0x667f1a7],ebx
  40151e:	pop    edi
  40151f:	cmp    DWORD PTR [esi+0x3e],eax
  401522:	push   esp
  401523:	les    ebp,FWORD PTR [eax]
  401525:	mov    dh,0xfe
  401527:	ins    BYTE PTR es:[edi],dx
  401528:	jg     0x40159e
  40152a:	imul   ecx,DWORD PTR [ebx+eax*2+0x40],0xffffffeb
  40152f:	(bad)  
  401530:	loope  0x4014f7
  401532:	push   ecx
  401533:	mov    esi,0x83ab34da
  401538:	lahf   
  401539:	push   edi
  40153a:	add    ebp,DWORD PTR [edx]
  40153c:	inc    eax
  40153d:	push   esi
  40153e:	inc    ecx
  40153f:	dec    esi
  401540:	xchg   edi,eax
  401541:	lods   al,BYTE PTR ds:[esi]
  401542:	add    ebp,ecx
  401544:	test   al,0xea
  401546:	cwde   
  401547:	or     eax,0xfbc36281
  40154c:	inc    esi
  40154d:	aad    0xd6
  40154f:	or     eax,esi
  401551:	(bad)  
  401552:	into   
  401553:	shl    BYTE PTR [eax],0x98
  401556:	xchg   BYTE PTR [esi],cl
  401558:	dec    ebp
  401559:	es loopne 0x40153f
  40155c:	xor    ebx,DWORD PTR [ecx-0x58695a50]
  401562:	or     ecx,DWORD PTR ss:[edx]
  401565:	mov    ds:0xf7f67f9,eax
  40156a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40156b:	dec    esi
  40156c:	repz jno 0x4015d0
  40156f:	lds    ecx,FWORD PTR [edx-0x3b]
  401572:	xor    al,0x9
  401574:	shr    BYTE PTR [esi+0x15],1
  401577:	aad    0x27
  401579:	icebp  
  40157a:	push   ecx
  40157b:	sbb    DWORD PTR [esi],ebx
  40157d:	addr16 into 
  40157f:	out    0x7e,al
  401581:	out    0xfa,al
  401583:	lea    edi,[eax-0x554ba866]
  401589:	pop    ebx
  40158a:	shl    DWORD PTR [edx-0x3dab4972],cl
  401590:	cmc    
  401591:	out    dx,al
  401592:	sub    al,0x82
  401594:	push   ecx
  401595:	mov    bl,0x88
  401597:	dec    ecx
  401598:	adc    BYTE PTR [esi+edi*4],0x5d
  40159c:	repz push es
  40159e:	out    dx,al
  40159f:	fdecstp 
  4015a1:	rol    DWORD PTR [ebx-0x1f794dec],0xa1
  4015a8:	and    eax,0x9f793727
  4015ad:	sub    bh,bh
  4015af:	in     al,0x83
  4015b1:	push   0x43
  4015b3:	sub    BYTE PTR [esi],dl
  4015b5:	xlat   BYTE PTR ds:[ebx]
  4015b6:	pop    eax
  4015b7:	jmp    0xd005:0xc9af9ee3
  4015be:	xchg   ecx,eax
  4015bf:	sbb    al,0x88
  4015c1:	mov    ds:0x3c5a0a06,eax
  4015c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015c7:	inc    esi
  4015c8:	outs   dx,BYTE PTR ds:[esi]
  4015c9:	retf   0x702a
  4015cc:	shl    DWORD PTR [eax-0x50],0x5
  4015d0:	dec    ebp
  4015d1:	outs   dx,DWORD PTR ds:[esi]
  4015d2:	sub    bl,BYTE PTR [edi+0x4034c4d6]
  4015d8:	mov    bh,0xeb
  4015da:	mov    eax,DWORD PTR [ebp+0x8]
  4015dd:	mov    ecx,DWORD PTR ds:0x43470f
  4015e3:	and    DWORD PTR ds:0x4346bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4345e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434643,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434693,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434683,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434683
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434683,ecx
  40162d:	cmp    DWORD PTR ds:0x434683,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434683,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434683
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434683,ecx
  40165f:	cmp    DWORD PTR ds:0x434683,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434623
  401674:	mov    eax,ds:0x43466b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4346cb,0x4346f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4345eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4345ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	xchg   BYTE PTR [edi+0x79ec5223],dh
  4016bf:	jle    0x40173f
  4016c1:	mov    ch,0x7f
  4016c3:	jle    0x401743
  4016c5:	(bad)  
  4016c6:	dec    ecx
  4016c7:	and    al,0xea
  4016c9:	clc    
  4016ca:	mov    WORD PTR [esi],gs
  4016cc:	test   eax,0x3739c65a
  4016d1:	gs popa 
  4016d3:	outs   dx,DWORD PTR ds:[esi]
  4016d4:	lea    ecx,[edx+edx*1+0x6213050b]
  4016db:	add    esi,DWORD PTR [ebx+0x34fd48c4]
  4016e1:	xlat   BYTE PTR ds:[ebx]
  4016e2:	cmc    
  4016e3:	jo     0x401751
  4016e5:	add    eax,0xc49a38be
  4016ea:	loopne 0x4016fe
  4016ec:	ret    
  4016ed:	ror    ah,0x41
  4016f0:	repnz mov bh,0x71
  4016f3:	dec    ebp
  4016f4:	mov    esp,0xd5c14ec7
  4016f9:	stos   DWORD PTR es:[edi],eax
  4016fa:	ins    BYTE PTR es:[edi],dx
  4016fb:	adc    DWORD PTR cs:[edi-0x48],esi
  4016ff:	out    dx,eax
  401700:	pop    ss
  401701:	fisttp DWORD PTR [esi-0x1b]
  401704:	xchg   edi,eax
  401705:	dec    ebx
  401706:	inc    eax
  401707:	adc    al,0xfb
  401709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40170a:	xor    eax,0xbecd626a
  40170f:	sub    edx,DWORD PTR [edx+0x35f575c2]
  401715:	or     bl,ch
  401717:	dec    edi
  401718:	and    DWORD PTR [ecx+ebp*1],0xd3ebef07
  40171f:	or     edi,edi
  401721:	mov    al,0x57
  401723:	test   al,0x5c
  401725:	(bad)  
  401726:	or     eax,0x9cc6f6cf
  40172b:	xor    cl,bh
  40172d:	scas   al,BYTE PTR es:[edi]
  40172e:	xchg   ebp,eax
  40172f:	test   eax,0x9f853ceb
  401734:	repz jne 0x4016c0
  401737:	pushf  
  401738:	xchg   ebx,eax
  401739:	in     ax,dx
  40173b:	not    dl
  40173d:	add    ebp,ecx
  40173f:	je     0x401788
  401741:	nop
  401742:	stos   DWORD PTR es:[edi],eax
  401743:	add    DWORD PTR [esi+0x5d],ebx
  401746:	test   DWORD PTR [edx+ecx*4-0x1462da20],ecx
  40174d:	mov    ecx,ebp
  40174f:	xchg   ebx,eax
  401750:	cmp    DWORD PTR [eax-0x9813177],eax
  401756:	dec    edx
  401757:	dec    ecx
  401758:	mov    ah,0xd6
  40175a:	mov    WORD PTR [ecx],cs
  40175c:	pop    ds
  40175d:	sub    eax,0x522647d7
  401762:	mov    al,ds:0xbeaf10db
  401767:	mov    BYTE PTR [edx+0x62],ch
  40176a:	sbb    cl,BYTE PTR [ebp-0x49a6a75e]
  401770:	rcr    BYTE PTR ds:0x3ea94f26,0xaf
  401777:	sar    DWORD PTR [ebx+ebp*1],0xca
  40177b:	gs push es
  40177d:	popf   
  40177e:	(bad)  
  40177f:	ins    DWORD PTR es:[edi],dx
  401780:	scas   al,BYTE PTR es:[edi]
  401781:	std    
  401782:	push   0xffffffaa
  401784:	in     eax,dx
  401785:	pop    ds
  401786:	aaa    
  401787:	cdq    
  401788:	scas   eax,DWORD PTR es:[edi]
  401789:	mov    dh,0xf0
  40178b:	ror    DWORD PTR [eax+0x54be390f],0x71
  401792:	mov    eax,ds:0xaec286ff
  401797:	ja     0x401791
  401799:	aaa    
  40179a:	add    BYTE PTR [ecx-0x59555fb1],bl
  4017a0:	lds    esi,FWORD PTR [esi+edi*2]
  4017a3:	inc    ecx
  4017a4:	sub    ebx,esi
  4017a6:	ins    BYTE PTR es:[edi],dx
  4017a7:	dec    DWORD PTR ds:0x9a94865f
  4017ad:	retf   0xb577
  4017b0:	scas   eax,DWORD PTR es:[edi]
  4017b1:	rol    al,0xaa
  4017b4:	mov    dh,0xb7
  4017b6:	and    DWORD PTR ss:[edx+0x1e],0xeba24ff3
  4017be:	ins    BYTE PTR es:[edi],dx
  4017bf:	aas    
  4017c0:	es xchg ebp,eax
  4017c2:	cdq    
  4017c3:	cmp    al,0xd1
  4017c5:	mov    es,esi
  4017c7:	push   edx
  4017c8:	addr16 and eax,0x9d0a39e7
  4017ce:	int    0x91
  4017d0:	popf   
  4017d1:	and    bh,cl
  4017d3:	sbb    al,0xe8
  4017d5:	jmp    0x401790
  4017d7:	rcr    BYTE PTR [ecx-0x2a],1
  4017da:	bound  edi,QWORD PTR [esi+0x9ed8290]
  4017e0:	dec    ebp
  4017e1:	inc    ecx
  4017e2:	jae    0x4017ed
  4017e4:	std    
  4017e5:	(bad)  
  4017e6:	push   ds
  4017e7:	mov    bl,0xe4
  4017e9:	mov    ebp,0x43732228
  4017ee:	int3   
  4017ef:	mov    ch,0xe2
  4017f1:	lods   al,BYTE PTR ds:[esi]
  4017f2:	in     al,dx
  4017f3:	inc    edx
  4017f4:	outs   dx,DWORD PTR ds:[esi]
  4017f5:	leave  
  4017f6:	or     BYTE PTR ds:0xca409baa,dh
  4017fc:	addr16 mov ah,0xad
  4017ff:	lea    ecx,[esi]
  401801:	rol    DWORD PTR [esi+0x62c0406c],1
  401807:	add    eax,DWORD PTR ds:0x88b7efd
  40180d:	adc    eax,0xa68e7aa0
  401812:	sbb    ch,BYTE PTR [ebp-0x69]
  401815:	dec    ebp
  401816:	loop   0x4017cb
  401818:	lock call DWORD PTR [ebx+ebx*4-0x56]
  40181d:	scas   eax,DWORD PTR es:[edi]
  40181e:	fisub  WORD PTR [ebp+ebx*2+0x37]
  401822:	jne    0x401820
  401824:	xor    DWORD PTR [ebx+0x5e],eax
  401827:	mov    dl,0x88
  401829:	push   esp
  40182a:	sub    BYTE PTR [eax+0x16a1567e],bh
  401830:	fcom   st(1)
  401832:	(bad)
  401835:	push   0x5a8eea62
  40183a:	xor    eax,0xbef278c9
  40183f:	add    esp,0xffffff83
  401842:	test   al,0x59
  401844:	in     al,0x2c
  401846:	ret    0x5e2
  401849:	or     ebp,DWORD PTR [eax+0x7d523184]
  40184f:	ins    BYTE PTR es:[edi],dx
  401850:	cmp    BYTE PTR [esi],ah
  401852:	cmp    al,0x9d
  401854:	xchg   edi,ebx
  401856:	outs   dx,DWORD PTR ds:[esi]
  401857:	xchg   esp,eax
  401858:	aad    0x3d
  40185a:	rcr    esp,0x9
  40185d:	jg     0x4018bb
  40185f:	outs   dx,DWORD PTR ds:[esi]
  401860:	mov    dl,0x1a
  401862:	add    eax,0xb918c847
  401867:	outs   dx,DWORD PTR ds:[esi]
  401868:	fsub   QWORD PTR [eax-0x7]
  40186b:	fcom   DWORD PTR [eax-0x34]
  40186e:	xchg   ecx,eax
  40186f:	push   ss
  401870:	nop
  401871:	mov    bh,0x82
  401873:	mov    ebp,0x13ea1dbc
  401878:	cmp    BYTE PTR [edi],dl
  40187a:	inc    ebx
  40187b:	mov    edx,0x427850f
  401880:	add    BYTE PTR [eax],al
  401882:	mov    ecx,DWORD PTR ds:0x434703
  401888:	or     DWORD PTR ds:0x4345e3,ecx
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR ds:0x1b711acb,dh
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x4018a8
  4018ac:	jmp    0x20aa:0x2121d061
  4018b3:	fld    TBYTE PTR [esi]
  4018b5:	pop    edx
  4018b6:	clc    
  4018b7:	push   0xf90db438
  4018bc:	sub    eax,0x1786cb83
  4018c1:	fist   DWORD PTR [esi-0x6d]
  4018c4:	and    eax,0xd393ec8
  4018c9:	xchg   ah,ah
  4018cb:	sub    ecx,edi
  4018cd:	test   ebp,edx
  4018cf:	les    eax,FWORD PTR [ecx]
  4018d1:	loopne 0x401861
  4018d3:	and    al,0x8e
  4018d5:	pop    ecx
  4018d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018d7:	xor    BYTE PTR [esi+0x14df7e92],bh
  4018dd:	jb     0x40188b
  4018df:	neg    ch
  4018e1:	repnz push cs
  4018e3:	inc    esi
  4018e4:	dec    ecx
  4018e5:	cmp    esp,0xfffffff8
  4018e8:	mov    esp,DWORD PTR ds:0x2a809846
  4018ee:	addr16 mov bh,0xc4
  4018f1:	push   ss
  4018f2:	inc    eax
  4018f3:	(bad)  
  4018f5:	jg     0x4018b2
  4018f7:	push   0xffffffef
  4018f9:	shl    DWORD PTR [ebx],1
  4018fb:	test   al,0x83
  4018fd:	add    BYTE PTR [ecx+0x1],ch
  401900:	and    DWORD PTR [edi+0x715405f9],esp
  401906:	cdq    
  401907:	in     eax,0x99
  401909:	jg     0x401920
  40190b:	mov    dh,0xe5
  40190d:	test   eax,0xbffb5112
  401912:	inc    edx
  401913:	push   eax
  401914:	popa   
  401915:	push   esi
  401916:	push   ebx
  401918:	in     eax,0x8a
  40191a:	into   
  40191b:	jns    0x401951
  40191d:	call   0xf302:0xb9d31a3c
  401924:	cmp    DWORD PTR [esi+0x8916f3c],edx
  40192a:	call   DWORD PTR [edi+0xc]
  40192d:	test   eax,0x16272b2
  401932:	mov    WORD PTR [eax-0x76],cs
  401935:	inc    esi
  401936:	mul    BYTE PTR [eax+0x4b]
  401939:	outs   dx,DWORD PTR ds:[esi]
  40193a:	mov    dl,0x24
  40193c:	lock loope 0x40192b
  40193f:	sti    
  401940:	test   eax,0x9b178cfb
  401945:	push   ss
  401946:	add    ecx,DWORD PTR [eax]
  401948:	ror    DWORD PTR [eax-0x2c],1
  40194b:	outs   dx,DWORD PTR ds:[esi]
  40194c:	clc    
  40194d:	mov    ds:0xdee759b7,al
  401952:	aaa    
  401953:	mov    eax,0x16986efb
  401958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401959:	int    0x27
  40195b:	push   es
  40195c:	mov    ds:0xaa0d94a2,al
  401961:	cs mov eax,0x10937352
  401967:	dec    ecx
  401968:	mov    dh,0xa2
  40196a:	(bad)
  40196d:	fmulp  st(6),st
  40196f:	pop    eax
  401970:	popf   
  401971:	inc    edi
  401972:	jmp    0x7a9e2c4
  401977:	jmp    0x3331:0x1fe62d5b
  40197e:	mov    ebx,eax
  401980:	std    
  401981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401982:	adc    eax,0xe94844f4
  401987:	jne    0x40196c
  401989:	push   edi
  40198a:	test   BYTE PTR [ecx+0x5b],cl
  40198d:	push   cs
  40198e:	push   eax
  40198f:	pop    ds
  401990:	inc    ebp
  401991:	enter  0x9f56,0x2f
  401995:	jmp    0x2118:0x17bc4368
  40199c:	add    al,0xfb
  40199e:	jne    0x401950
  4019a0:	adc    DWORD PTR [esi+0x5f],esi
  4019a3:	jmp    0x1e67:0xee2a3c57
  4019aa:	daa    
  4019ab:	push   esp
  4019ac:	lds    eax,FWORD PTR [esi-0x2d]
  4019af:	retf   0xb14a
  4019b2:	push   edx
  4019b3:	and    al,0x22
  4019b5:	xor    DWORD PTR [ecx-0x56379013],eax
  4019bb:	sub    eax,0x1665bcb6
  4019c0:	rol    DWORD PTR [edx-0x6f],1
  4019c3:	mov    al,ds:0x7a9e9212
  4019c8:	mov    bl,0xec
  4019ca:	les    edi,FWORD PTR [ebx-0xe]
  4019cd:	xchg   DWORD PTR [ebx-0x30a215d9],eax
  4019d3:	(bad)  
  4019d4:	les    ebp,FWORD PTR [edx]
  4019d6:	scas   eax,DWORD PTR es:[edi]
  4019d7:	push   edi
  4019d8:	inc    ecx
  4019d9:	inc    ebp
  4019da:	jbe    0x4019e4
  4019dc:	pop    esi
  4019dd:	xor    eax,0xd42ed323
  4019e2:	shl    BYTE PTR [esi+0x6fa8e5cf],0x12
  4019e9:	out    dx,eax
  4019ea:	sbb    BYTE PTR [ebx],dh
  4019ec:	jns    0x4019e8
  4019ee:	mov    bl,0xcc
  4019f0:	pop    ebx
  4019f1:	push   ebx
  4019f2:	add    cl,BYTE PTR [ebp-0x13e90f5a]
  4019f8:	pusha  
  4019f9:	mov    es,WORD PTR [eax-0x16]
  4019fc:	push   ds
  4019fd:	push   es
  4019fe:	cmp    eax,0x3e1cc2a
  401a03:	pop    ebx
  401a04:	inc    esp
  401a05:	nop
  401a06:	ret    0x7cac
  401a09:	retf   
  401a0a:	jecxz  0x4019ed
  401a0c:	test   al,0xa3
  401a0e:	push   cs
  401a0f:	lock sbb BYTE PTR [edi],al
  401a12:	(bad)  
  401a13:	cmp    eax,0xe2cf6ade
  401a18:	call   0x9246749e
  401a1d:	push   0x2e
  401a1f:	mov    dh,0x9d
  401a21:	dec    ecx
  401a22:	mov    edi,0x2c214c54
  401a27:	pop    edi
  401a28:	pop    esi
  401a29:	sub    eax,0xf41e01a9
  401a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a2f:	fsubr  st(1),st
  401a31:	and    cl,BYTE PTR [ebx+0x2]
  401a34:	cld    
  401a35:	inc    ebp
  401a36:	cmp    ah,dl
  401a38:	push   eax
  401a39:	add    al,0x9
  401a3b:	sub    dh,BYTE PTR [eax+0x4a52fdaa]
  401a41:	jle    0x401a99
  401a43:	mov    ch,0x8
  401a45:	sbb    esp,DWORD PTR [ebx]
  401a47:	add    eax,0x29b2da32
  401a4c:	jmp    0x401a9b
  401a4e:	repnz es out 0x5b,al
  401a52:	fadd   DWORD PTR [eax+0x6cee61e2]
  401a58:	ror    DWORD PTR [ebx-0x40],0x1e
  401a5c:	push   edi
  401a5d:	in     al,0x48
  401a5f:	out    dx,eax
  401a60:	leave  
  401a61:	lea    ecx,[ebx+0x25810845]
  401a67:	iret   
  401a68:	inc    esi
  401a69:	inc    ebx
  401a6a:	add    BYTE PTR [eax],al
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	add    BYTE PTR [ebx+0x4346cf0d],cl
  401a74:	add    BYTE PTR [ecx-0x77],al
  401a77:	or     eax,0x4346cf
  401a7c:	cmp    DWORD PTR ds:0x4346cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4346cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4346cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4346cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4346cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0xca34485e
  401ae8:	pop    ebp
  401ae9:	lock push edx
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401aad
  401af3:	aad    0xff
  401af5:	add    al,0xae
  401af7:	and    ah,dl
  401af9:	loope  0x401ad6
  401afb:	out    0x66,al
  401afd:	pop    ebx
  401afe:	push   ss
  401aff:	mov    ?,WORD PTR [edi-0x1e]
  401b02:	and    dh,dh
  401b04:	popa   
  401b05:	xchg   esp,eax
  401b06:	sbb    DWORD PTR [ecx+edx*2-0x7c],ebp
  401b0a:	push   ecx
  401b0b:	jle    0x401b1f
  401b0d:	ss out dx,al
  401b0f:	shr    BYTE PTR [ebx+0x641fe2a3],cl
  401b15:	adc    edx,DWORD PTR [esi]
  401b17:	(bad)  
  401b18:	and    esp,DWORD PTR [ecx+0x51]
  401b1b:	mov    ebp,0xedc026ea
  401b20:	push   0x24cef167
  401b25:	sar    BYTE PTR [esi],cl
  401b27:	jbe    0x401add
  401b29:	fdiv   st(2),st
  401b2b:	aad    0x9b
  401b2d:	hlt    
  401b2e:	loop   0x401b25
  401b30:	adc    eax,0x5860fa0a
  401b35:	xchg   BYTE PTR [esi],bl
  401b37:	imul   ecx,DWORD PTR [eax],0x4d711702
  401b3d:	jae    0x401b31
  401b3f:	adc    DWORD PTR [edx+0x22],eax
  401b42:	xchg   ecx,eax
  401b43:	scas   eax,DWORD PTR es:[edi]
  401b44:	sbb    eax,0x85ed571a
  401b49:	sub    eax,0x40dfe305
  401b4e:	lds    ebp,FWORD PTR [ebx+0x64646c68]
  401b54:	and    edx,DWORD PTR [edi]
  401b56:	ins    BYTE PTR es:[edi],dx
  401b57:	cwde   
  401b58:	iret   
  401b59:	jl     0x401b09
  401b5b:	sub    bl,BYTE PTR [eax]
  401b5d:	inc    edi
  401b5e:	pop    esp
  401b5f:	ins    BYTE PTR es:[edi],dx
  401b60:	outs   dx,DWORD PTR ds:[esi]
  401b61:	les    ebp,FWORD PTR [edx+0x74e1e4a5]
  401b67:	nop
  401b68:	sti    
  401b69:	adc    cl,al
  401b6b:	or     al,0xa1
  401b6d:	mov    esi,0x45c87f2a
  401b72:	frndint 
  401b74:	mov    al,ds:0xe259b0e1
  401b79:	and    dl,BYTE PTR [edi+0x1f]
  401b7c:	and    al,0xd6
  401b7e:	jb     0x401bec
  401b80:	lods   eax,DWORD PTR ds:[esi]
  401b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b82:	nop
  401b83:	mov    bh,0xdb
  401b85:	cdq    
  401b86:	out    dx,eax
  401b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b88:	jge    0x401b40
  401b8a:	xor    BYTE PTR [eax+0x32376ad4],dl
  401b90:	scas   eax,DWORD PTR es:[edi]
  401b91:	jne    0x401bf0
  401b93:	ins    BYTE PTR es:[edi],dx
  401b94:	leave  
  401b95:	adc    DWORD PTR [ebx],ebx
  401b97:	sub    eax,0x1ae03e90
  401b9c:	cmp    eax,0x4663145b
  401ba1:	mov    ebp,0x3f583b01
  401ba6:	lahf   
  401ba7:	rcl    ecx,1
  401ba9:	icebp  
  401baa:	inc    esp
  401bab:	(bad)  
  401bac:	dec    ebp
  401bad:	xchg   ebp,eax
  401bae:	lahf   
  401baf:	inc    ecx
  401bb0:	ins    BYTE PTR es:[edi],dx
  401bb1:	mov    cl,0x95
  401bb3:	add    esi,ecx
  401bb5:	cmp    eax,0x13869a17
  401bba:	out    dx,eax
  401bbb:	sub    BYTE PTR [eax+0x14],dl
  401bbe:	adc    al,0xa
  401bc0:	mov    eax,0x90d32b91
  401bc5:	inc    edi
  401bc6:	inc    ebx
  401bc7:	lods   eax,DWORD PTR ds:[esi]
  401bc8:	repz and eax,0x8f229f39
  401bce:	adc    esi,DWORD PTR [ecx-0x244404cd]
  401bd4:	shl    DWORD PTR [ebx+edx*4+0x718ff01d],0x5e
  401bdc:	std    
  401bdd:	(bad)  
  401bde:	out    0xe0,al
  401be0:	data16 add BYTE PTR [ecx+0x7b97915e],bl
  401be7:	pop    ebp
  401be8:	sub    BYTE PTR [edi+edx*2],dh
  401beb:	mov    edx,0x5a2c9862
  401bf0:	mov    DWORD PTR [edi+0x3e],0xe765775c
  401bf7:	xor    DWORD PTR [ecx+edi*2],ecx
  401bfa:	ret    0xc1cb
  401bfd:	ja     0x401b89
  401bff:	cld    
  401c00:	shl    DWORD PTR [ebx-0x24],0xf5
  401c04:	cmp    al,0x2f
  401c06:	sahf   
  401c07:	retf   
  401c08:	and    eax,0x8cb4552a
  401c0d:	sub    al,0x9f
  401c0f:	in     al,0xb5
  401c11:	cld    
  401c12:	repnz pop ebp
  401c14:	and    DWORD PTR [ebx-0x52],0x2fe61afa
  401c1b:	test   esi,esp
  401c1d:	and    DWORD PTR [edi+eax*2+0x6],ebx
  401c21:	loope  0x401c47
  401c23:	loope  0x401c45
  401c25:	sbb    cl,ah
  401c27:	dec    esi
  401c28:	loope  0x401c89
  401c2a:	pop    es
  401c2b:	sbb    dh,0x56
  401c2e:	add    DWORD PTR [ebp-0xa],esi
  401c31:	mov    ah,0x1
  401c33:	jmp    0x96e3362f
  401c38:	bnd jmp 0x3c1e3785
  401c3e:	jmp    0x21e916e2
  401c43:	es pop eax
  401c45:	popf   
  401c46:	stos   BYTE PTR es:[edi],al
  401c47:	push   ebx
  401c48:	fstp   TBYTE PTR [ecx]
  401c4a:	mov    cl,0x51
  401c4c:	sbb    esi,edi
  401c4e:	test   al,0x4b
  401c50:	aas    
  401c51:	cmp    eax,0x2555f63
  401c56:	adc    ecx,ebp
  401c58:	retf   
  401c59:	jl     0x401cb1
  401c5b:	dec    edi
  401c5c:	sub    al,0xcf
  401c5e:	hlt    
  401c5f:	jae    0x401bf9
  401c61:	add    al,0x31
  401c63:	fild   WORD PTR [ebx]
  401c65:	pop    edx
  401c66:	repnz cmp ah,BYTE PTR [ebx]
  401c69:	mov    bl,0x1f
  401c6b:	add    bh,BYTE PTR [esp+ebp*4-0x557515d4]
  401c72:	int3   
  401c73:	adc    ebx,DWORD PTR [edx-0x4c]
  401c76:	scas   al,BYTE PTR es:[edi]
  401c77:	lods   eax,DWORD PTR ds:[esi]
  401c78:	mov    ds:0xe6227d37,al
  401c7d:	and    BYTE PTR [esi-0x1920a1a],dh
  401c83:	inc    esi
  401c84:	jmp    0x401c0d
  401c86:	pop    ebp
  401c87:	or     al,dl
  401c89:	in     eax,0xd9
  401c8b:	xor    al,0x94
  401c8d:	aam    0x71
  401c8f:	sbb    BYTE PTR [edx-0x5318b98d],ch
  401c95:	int3   
  401c96:	mov    esi,DWORD PTR [ecx]
  401c98:	or     DWORD PTR [edi+0x7f],ebp
  401c9b:	cld    
  401c9c:	jmp    0xfb2a:0x1e2c92c0
  401ca3:	fs cmc 
  401ca5:	nop
  401ca6:	imul   ebp,DWORD PTR [edi],0x25
  401ca9:	mov    eax,ds:0x414bd2
  401cae:	mov    eax,DWORD PTR [eax]
  401cb0:	mov    cx,WORD PTR [ebp-0x4]
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	into   
  401ccb:	jge    0x401ca5
  401ccd:	fimul  DWORD PTR [ecx-0x4a8181fa]
  401cd3:	jg     0x401d53
  401cd5:	jle    0x401c6e
  401cd7:	fsub   QWORD PTR [esi+0x18763e1b]
  401cdd:	lds    eax,FWORD PTR [eax]
  401cdf:	pop    esi
  401ce0:	pop    edi
  401ce1:	push   esi
  401ce2:	shr    BYTE PTR [edi+0x60],0xde
  401ce6:	(bad)  
  401ce7:	push   ebp
  401ce8:	or     BYTE PTR [esi],bl
  401cea:	add    esp,DWORD PTR [ebx+edi*4+0x4ab09ad8]
  401cf1:	enter  0xdf89,0x83
  401cf5:	sbb    dl,BYTE PTR [ecx-0x10a13fd1]
  401cfb:	cmp    BYTE PTR [edi+eiz*1-0x1a4e84d0],ch
  401d02:	fistp  WORD PTR [edi+0x24190ff6]
  401d08:	mov    ch,0x85
  401d0a:	rol    BYTE PTR [ebp-0x46],cl
  401d0d:	inc    edi
  401d0e:	imul   eax,DWORD PTR [ebx-0x3c],0x2a
  401d12:	ficom  DWORD PTR [ecx]
  401d14:	retf   
  401d15:	inc    esi
  401d16:	scas   al,BYTE PTR es:[edi]
  401d17:	in     eax,0xe4
  401d19:	dec    ebx
  401d1a:	push   esp
  401d1b:	dec    eax
  401d1c:	inc    edi
  401d1d:	cmp    eax,0xa06e74b0
  401d22:	mov    ebp,0x2a135b7c
  401d27:	fwait
  401d28:	mov    eax,ds:0xc9e33ece
  401d2d:	xor    BYTE PTR [esi],bl
  401d2f:	repnz enter 0xbd19,0x4a
  401d34:	pop    esi
  401d35:	cmp    ch,ah
  401d37:	test   BYTE PTR [esi-0x2dcf7dc9],0x73
  401d3e:	cwde   
  401d3f:	sbb    eax,0xe4676d15
  401d44:	pop    ecx
  401d45:	dec    ebx
  401d46:	in     eax,0xa5
  401d48:	xchg   edx,eax
  401d49:	hlt    
  401d4a:	push   0xe5d40035
  401d4f:	rcl    ebp,0x9f
  401d52:	dec    ebp
  401d53:	or     eax,DWORD PTR [esi-0x49]
  401d56:	(bad)  
  401d57:	in     al,0x33
  401d59:	dec    ecx
  401d5a:	push   cs
  401d5b:	inc    DWORD PTR ds:0x8e18fb9b
  401d61:	in     eax,0x83
  401d63:	adc    BYTE PTR [ecx],ch
  401d65:	das    
  401d66:	inc    esi
  401d67:	jno    0x401dd9
  401d69:	sbb    edi,DWORD PTR [ecx-0x6dfbbc9e]
  401d6f:	push   edi
  401d70:	lods   al,BYTE PTR ds:[esi]
  401d71:	sub    ebp,DWORD PTR [ecx+edx*4-0x787597bc]
  401d78:	push   ss
  401d79:	jle    0x401d3d
  401d7b:	xchg   ebp,eax
  401d7c:	inc    edx
  401d7d:	and    ch,ah
  401d7f:	inc    esp
  401d80:	ins    BYTE PTR es:[edi],dx
  401d81:	adc    BYTE PTR ds:0x1da5e2d3,0x20
  401d88:	stos   DWORD PTR es:[edi],eax
  401d89:	in     al,dx
  401d8a:	push   edx
  401d8b:	outs   dx,BYTE PTR ds:[esi]
  401d8c:	xor    eax,0xd8cac2ba
  401d91:	and    BYTE PTR [eax+0x68be74fe],cl
  401d97:	out    0x27,al
  401d99:	sar    BYTE PTR [eax+edi*8],0x35
  401d9d:	sahf   
  401d9e:	inc    ecx
  401d9f:	shl    DWORD PTR [esi],cl
  401da1:	add    bh,dh
  401da3:	and    al,0x67
  401da5:	sub    edx,esi
  401da7:	inc    edi
  401da8:	enter  0xb771,0xf8
  401dac:	shl    DWORD PTR [esi-0x74],1
  401daf:	fs mov bl,0x74
  401db2:	mov    cl,0x4c
  401db4:	sbb    eax,0xe09a404d
  401db9:	shl    DWORD PTR [ebp+0x27],cl
  401dbc:	adc    al,0xf5
  401dbe:	imul   ecx,DWORD PTR [ebx+esi*8+0x3b],0xfffffff1
  401dc3:	sahf   
  401dc4:	xlat   BYTE PTR ds:[ebx]
  401dc5:	hlt    
  401dc6:	lock imul esi,DWORD PTR ss:[ebx-0x7ad988ea],0x33
  401dcf:	pop    ebp
  401dd0:	xor    al,0x60
  401dd3:	xchg   bl,cl
  401dd5:	mov    al,ds:0xa4650300
  401dda:	xor    eax,0xbd9390a0
  401ddf:	mov    DWORD PTR [ebx],ecx
  401de1:	add    ecx,DWORD PTR [ebp+0xa]
  401de4:	test   BYTE PTR [edx],dl
  401de6:	aad    0xf3
  401de8:	or     DWORD PTR [ecx+0x36],ebp
  401deb:	in     al,dx
  401dec:	xor    al,BYTE PTR [esi+0x6c]
  401def:	mov    ds:0xd2c94a66,al
  401df4:	cli    
  401df5:	mov    dh,BYTE PTR [edx-0x19]
  401df8:	mov    cs,WORD PTR [eax-0x59]
  401dfb:	sbb    al,0xe1
  401dfd:	adc    ebp,esp
  401dff:	out    0x26,al
  401e01:	int    0x42
  401e03:	mov    esi,0x3a822a51
  401e08:	sub    DWORD PTR [ecx],0x15
  401e0b:	mov    bl,0xf9
  401e0d:	jnp    0x401ddf
  401e0f:	fs mov edx,0x21fbff27
  401e15:	pop    ds
  401e16:	mov    al,ds:0x6e3b6125
  401e1b:	iret   
  401e1c:	bound  edi,QWORD PTR [ecx]
  401e1e:	xor    DWORD PTR [ebx+0x4],esi
  401e21:	sbb    eax,0x1c9893a5
  401e26:	dec    esp
  401e27:	fcomp  st(0)
  401e29:	test   eax,0x70c29d69
  401e2e:	or     DWORD PTR [esp+eax*4-0x15],eax
  401e32:	push   ebp
  401e33:	adc    esp,DWORD PTR [edi+esi*4+0x4469d1b5]
  401e3a:	mov    ds:0xcb0c796e,al
  401e3f:	cdq    
  401e40:	shr    DWORD PTR [ecx-0x5dfce1f2],0x46
  401e47:	je     0x401dfb
  401e49:	xor    al,0xdb
  401e4b:	in     eax,dx
  401e4c:	imul   esi,eax,0x74
  401e4f:	add    BYTE PTR [ebp-0x56c9bd4c],cl
  401e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e56:	mov    esi,0x580dc747
  401e5b:	cdq    
  401e5c:	loope  0x401e22
  401e5e:	test   edx,edx
  401e60:	jecxz  0x401e68
  401e62:	and    cl,BYTE PTR [esi-0x22ae2eac]
  401e68:	pop    edx
  401e69:	or     DWORD PTR [eax-0x77],0xffffffa1
  401e6d:	jo     0x401ed9
  401e6f:	retf   
  401e70:	xor    dh,cl
  401e72:	jmp    0x2e69a971
  401e77:	icebp  
  401e78:	dec    esp
  401e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e7a:	aad    0x43
  401e7c:	cld    
  401e7d:	sti    
  401e7e:	jle    0x401e43
  401e80:	lea    edi,[ecx+0x7c]
  401e83:	jge    0x401e86
  401e85:	dec    edi
  401e86:	rol    al,1
  401e88:	pop    edx
  401e89:	and    ecx,DWORD PTR [edx+0x3c]
  401e8c:	dec    DWORD PTR [ecx+0x458be84d]
  401e92:	or     al,0x8b
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	repz adc BYTE PTR [ebx+0x7e00c04d],bh
  401eb6:	jle    0x401e6d
  401eb8:	jg     0x401f38
  401eba:	jle    0x401f2f
  401ebc:	js     0x401e74
  401ebe:	mov    esp,0xe5e35fa
  401ec3:	mov    cl,0x6c
  401ec5:	add    esp,edx
  401ec7:	out    0xcf,eax
  401ec9:	and    eax,0x6a74b9b4
  401ece:	in     al,dx
  401ecf:	out    dx,eax
  401ed0:	and    al,0x84
  401ed2:	or     BYTE PTR [eax-0x33],0x42
  401ed6:	scas   al,BYTE PTR es:[edi]
  401ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ed8:	loop   0x401e68
  401eda:	scas   eax,DWORD PTR es:[edi]
  401edb:	push   0x7f
  401edd:	call   0x2445:0x1b268a1d
  401ee4:	in     al,0xca
  401ee6:	mov    bh,BYTE PTR [ebx-0x21393fa3]
  401eec:	nop
  401eed:	jge    0x401f5c
  401eef:	repnz cmp bh,bh
  401ef2:	ret    0x2980
  401ef5:	jne    0x401ef5
  401ef7:	es inc esi
  401ef9:	mov    ds:0xf996fcc1,eax
  401efe:	js     0x401eaf
  401f00:	push   ecx
  401f01:	out    dx,eax
  401f02:	pop    ss
  401f03:	jle    0x401f0c
  401f05:	das    
  401f06:	or     DWORD PTR [edi],esp
  401f08:	push   ss
  401f09:	pop    es
  401f0a:	jl     0x401f74
  401f0c:	or     esp,esi
  401f0e:	icebp  
  401f0f:	jle    0x401ec9
  401f11:	xchg   edx,eax
  401f12:	dec    ecx
  401f13:	rcr    DWORD PTR [ebp-0x57bf9649],0x80
  401f1a:	dec    esi
  401f1b:	cmc    
  401f1c:	int3   
  401f1d:	xchg   ebp,eax
  401f1e:	std    
  401f1f:	fldcw  WORD PTR [eax-0x6a867480]
  401f25:	push   ebp
  401f26:	add    eax,0xf3abbd2e
  401f2b:	inc    eax
  401f2c:	lea    ecx,[ecx-0x6673a591]
  401f32:	cmp    DWORD PTR [edi],ebp
  401f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f35:	pop    ss
  401f36:	cmp    DWORD PTR [esi+0x2b],0xffffffa9
  401f3a:	pop    DWORD PTR [eax]
  401f3c:	xor    eax,0x145db096
  401f41:	popf   
  401f42:	shr    DWORD PTR [eax+0x77],0xa7
  401f46:	push   ebx
  401f47:	adc    eax,0x4398387f
  401f4c:	xor    eax,0x956bc37e
  401f51:	bound  esp,QWORD PTR [edi+ebp*1]
  401f54:	xchg   ecx,eax
  401f55:	jae    0x401f61
  401f57:	pop    edi
  401f58:	push   edi
  401f59:	not    DWORD PTR [ecx]
  401f5b:	cmp    bl,bl
  401f5d:	mov    ds:0xb2832ec9,eax
  401f62:	sbb    al,0xa3
  401f64:	pop    ds
  401f65:	dec    eax
  401f66:	shl    DWORD PTR [edx+eiz*1],cl
  401f69:	ret    
  401f6a:	add    al,0x7e
  401f6c:	aaa    
  401f6d:	jle    0x401fba
  401f6f:	je     0x401f10
  401f71:	ins    BYTE PTR es:[edi],dx
  401f72:	ret    0x5636
  401f75:	stos   BYTE PTR es:[edi],al
  401f76:	das    
  401f77:	bound  ebx,QWORD PTR ds:0x6fcd981e
  401f7d:	sbb    DWORD PTR ds:0x30e38ea2,ebp
  401f83:	cdq    
  401f84:	test   al,0x34
  401f86:	fmulp  st(6),st
  401f88:	mov    bl,0xe9
  401f8a:	loope  0x401f5a
  401f8c:	dec    ebx
  401f8d:	sbb    BYTE PTR ds:0x59a83f43,0x64
  401f94:	arpl   WORD PTR [eax+0x54],di
  401f97:	rol    BYTE PTR cs:[ebp-0x7fef97f7],cl
  401f9e:	call   0xdc21:0xf78c4597
  401fa5:	adc    dh,BYTE PTR es:[ebx]
  401fa8:	fmul   QWORD PTR [ecx+0x5f52316e]
  401fae:	loope  0x40202b
  401fb0:	mov    esp,0xb0f46663
  401fb5:	das    
  401fb6:	loop   0x401fa9
  401fb8:	lds    edx,FWORD PTR [edi-0x2a5a5756]
  401fbe:	cmp    al,BYTE PTR [eax+edx*4-0x343d31aa]
  401fc5:	adc    DWORD PTR [edx-0x30],ecx
  401fc8:	pop    ss
  401fc9:	outs   dx,BYTE PTR ds:[esi]
  401fca:	sbb    eax,0xaae12cea
  401fcf:	lea    esp,[ebp-0x60003c4]
  401fd5:	out    dx,al
  401fd6:	loopne 0x401ffd
  401fd8:	outs   dx,BYTE PTR ds:[esi]
  401fd9:	jp     0x401fec
  401fdb:	rcl    eax,0x40
  401fde:	stos   BYTE PTR es:[edi],al
  401fdf:	mov    al,bl
  401fe1:	in     eax,dx
  401fe2:	neg    BYTE PTR [edi+eiz*8]
  401fe5:	push   cs
  401fe6:	mov    ds:0xfd360ccb,eax
  401feb:	inc    esi
  401fec:	add    DWORD PTR [esi],edi
  401fee:	add    al,0x56
  401ff0:	lock xchg ebx,eax
  401ff2:	cdq    
  401ff3:	aad    0x8d
  401ff5:	mov    esp,DWORD PTR [ebx-0x62c5421b]
  401ffb:	cld    
  401ffc:	or     DWORD PTR [ebp-0x55],0xd9738cdd
  402003:	stos   DWORD PTR es:[edi],eax
  402004:	arpl   WORD PTR [ebp+ebx*2+0x3],ax
  402008:	lock cli 
  40200a:	xor    bh,BYTE PTR [ebp-0x40]
  40200d:	jae    0x401fc3
  40200f:	fdiv   DWORD PTR [ebx]
  402011:	test   al,0xa9
  402013:	aad    0x61
  402015:	mov    ds:0xc88a9d6d,eax
  40201a:	repz sub al,0xb3
  40201d:	inc    edx
  40201e:	jae    0x402015
  402020:	in     al,dx
  402021:	mov    BYTE PTR [eax+ecx*2-0x5759cf5d],ah
  402028:	loope  0x401fff
  40202a:	mov    esi,0xc51c53ec
  40202f:	rcr    DWORD PTR [edi+0x5c],1
  402032:	add    eax,0xa6338e6
  402037:	je     0x402016
  402039:	mov    DWORD PTR [ecx],eax
  40203b:	and    eax,DWORD PTR [esi+0x6d]
  40203e:	jmp    0xfbe0:0xede1f6c1
  402045:	sub    esi,0xfffffff9
  402048:	sbb    eax,0xe9b6b58e
  40204d:	inc    ebp
  40204e:	out    0xb,eax
  402050:	xlat   BYTE PTR ds:[ebx]
  402051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402052:	dec    eax
  402053:	cdq    
  402054:	iret   
  402055:	fsub   st(4),st
  402057:	inc    ecx
  402058:	test   eax,0x302bea25
  40205d:	mov    al,0x5b
  40205f:	adc    BYTE PTR [edx-0x7b],ch
  402062:	(bad)  
  402063:	(bad)  
  402064:	or     eax,0xf3896e62
  402069:	push   es
  40206a:	test   BYTE PTR [ecx+0x64518d87],dl
  402070:	xor    esi,DWORD PTR [ebx-0x3ba749a]
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [esi+0x7fb2b9b8],esi
  4020a6:	add    bh,BYTE PTR [esi+0x7e]
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	jmp    0x6ed1:0x7eaebeb4
  4020b4:	shr    BYTE PTR [ebp-0x3efa7564],0x87
  4020bb:	fild   WORD PTR [ebx-0x3d]
  4020be:	imul   edx,DWORD PTR [eax+0x5],0xf
  4020c2:	fld    TBYTE PTR [eax-0x72]
  4020c5:	pop    esp
  4020c6:	sub    DWORD PTR [edi],esp
  4020c8:	daa    
  4020c9:	xchg   ebx,eax
  4020ca:	mov    ah,0x23
  4020cc:	int    0x30
  4020ce:	push   cs
  4020cf:	cmp    edx,ebx
  4020d1:	and    edx,esi
  4020d3:	fidivr DWORD PTR [edi-0x28]
  4020d6:	mov    BYTE PTR [edx+0x69],bh
  4020d9:	iret   
  4020da:	cmp    edi,DWORD PTR [ecx+ebx*2]
  4020dd:	mov    WORD PTR [ebp-0x77],?
  4020e0:	adc    edx,ebp
  4020e2:	xchg   esi,eax
  4020e3:	adc    DWORD PTR [esi+0x71],edi
  4020e6:	pop    ds
  4020e7:	add    al,al
  4020e9:	push   ebx
  4020ea:	sbb    BYTE PTR [ecx+edx*8-0x25],al
  4020ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ef:	jp     0x402164
  4020f1:	nop
  4020f2:	and    al,0x2b
  4020f4:	call   0xd3bd:0xc8805fc5
  4020fb:	xor    BYTE PTR [ebp+ecx*1+0x40],dh
  4020ff:	and    ecx,DWORD PTR [esi-0x37d8899a]
  402105:	inc    ebp
  402106:	xchg   esi,eax
  402107:	cmp    dh,BYTE PTR [eax+0x710cc29c]
  40210d:	sar    BYTE PTR [ecx+esi*1-0x5],0xea
  402112:	inc    eax
  402113:	jae    0x40211a
  402115:	in     al,dx
  402116:	and    BYTE PTR [edi-0x747ea07e],ah
  40211c:	mov    ds:0x5e6432af,al
  402121:	into   
  402122:	sbb    BYTE PTR [eax],al
  402124:	push   ss
  402125:	in     eax,0xfe
  402127:	aaa    
  402128:	dec    ebx
  402129:	push   ds
  40212a:	imul   esp,DWORD PTR [ecx+0x32],0x8
  40212e:	xchg   BYTE PTR [edi-0x60],cl
  402131:	call   0x3ad36703
  402136:	clc    
  402137:	and    cl,ah
  402139:	adc    DWORD PTR [ebp-0x1f4ffd92],ebx
  40213f:	adc    DWORD PTR [ebx],esi
  402141:	cmp    eax,0x7564532a
  402146:	mov    eax,0x8490fc09
  40214b:	aas    
  40214c:	mov    edx,0x23fd30e8
  402151:	or     BYTE PTR ds:0xa1d71a3,cl
  402157:	add    dl,bh
  402159:	sbb    al,0x12
  40215b:	add    eax,DWORD PTR [ebp+0x5a]
  40215e:	cmp    al,0xc7
  402160:	lods   eax,DWORD PTR ds:[esi]
  402161:	call   0x3a3e:0x6eeb9085
  402168:	and    edi,ebp
  40216a:	popa   
  40216b:	fcomp  QWORD PTR [edi-0x33b8db4d]
  402171:	into   
  402172:	lea    edi,[edi-0x25]
  402175:	shl    DWORD PTR [edx+0x1e],cl
  402178:	or     eax,0x42fa8b11
  40217d:	inc    esp
  40217e:	das    
  40217f:	sti    
  402180:	jbe    0x4021c3
  402182:	add    bh,al
  402184:	xor    cl,dl
  402186:	test   BYTE PTR [edi+0x6bd4e3a],0x99
  40218d:	jb     0x4021a4
  40218f:	pop    eax
  402190:	imul   esi,DWORD PTR [ecx+ebx*4],0xb4ce1e80
  402197:	or     BYTE PTR [ebp+0x1c],cl
  40219a:	fist   WORD PTR [ebp-0x31]
  40219d:	mov    ds:0x36bfa46,al
  4021a2:	pusha  
  4021a3:	div    DWORD PTR [ebx-0x7b]
  4021a6:	cmp    DWORD PTR [edx-0x7ba864a5],eax
  4021ac:	pop    esp
  4021ad:	inc    esp
  4021ae:	js     0x4021a8
  4021b0:	dec    eax
  4021b1:	int3   
  4021b2:	ins    DWORD PTR es:[edi],dx
  4021b3:	in     al,0x7a
  4021b5:	dec    edx
  4021b6:	cmp    esi,eax
  4021b8:	fsubr  DWORD PTR [ecx+0x4f745c9]
  4021be:	lods   eax,DWORD PTR ds:[esi]
  4021bf:	pop    edi
  4021c0:	jno    0x40219a
  4021c2:	inc    DWORD PTR [edx+0x5b4c82da]
  4021c8:	push   0x8581b134
  4021cd:	dec    eax
  4021ce:	jmp    0x955180b2
  4021d3:	call   0x7944cfe2
  4021d8:	bnd jmp 0x40217c
  4021db:	ret    0x51c
  4021de:	dec    esi
  4021df:	mov    edi,0x27c5788
  4021e4:	clc    
  4021e5:	dec    ecx
  4021e6:	dec    esp
  4021e7:	dec    ecx
  4021e8:	pushf  
  4021e9:	pop    esp
  4021ea:	add    edi,DWORD PTR [ecx+0x5d]
  4021ed:	xchg   esi,eax
  4021ee:	out    dx,al
  4021ef:	shr    DWORD PTR [ebx],0x2e
  4021f2:	outs   dx,DWORD PTR ds:[esi]
  4021f3:	dec    esp
  4021f4:	push   ss
  4021f5:	inc    edi
  4021f6:	jle    0x40222d
  4021f8:	retf   
  4021f9:	jnp    0x40224b
  4021fb:	adc    cl,BYTE PTR [edx+0x4bc7d33b]
  402201:	rcl    BYTE PTR [edi-0x5d],0xd5
  402205:	adc    eax,0x47791e53
  40220a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40220b:	or     DWORD PTR [ebx-0x5b],esi
  40220e:	push   0xffffff91
  402210:	arpl   WORD PTR [edi+0x4c],ax
  402213:	xor    al,0x5
  402215:	aas    
  402216:	adc    eax,0x275e125d
  40221b:	ffree  st(5)
  40221d:	cmp    ebx,ebx
  40221f:	xor    al,0xa5
  402221:	jge    0x4021ea
  402223:	pop    esp
  402224:	(bad)  
  402225:	icebp  
  402226:	or     edx,edx
  402228:	(bad)
  40222b:	stos   BYTE PTR es:[edi],al
  40222c:	mov    BYTE PTR [ebx-0x75b4e92d],cl
  402232:	scas   eax,DWORD PTR es:[edi]
  402233:	cmp    BYTE PTR [ebp+0x7f],bh
  402236:	mov    ah,0xd0
  402238:	in     al,dx
  402239:	jl     0x402203
  40223b:	enter  0xf0f8,0x91
  40223f:	sbb    ch,bl
  402241:	xor    al,0xf4
  402243:	loop   0x402211
  402245:	sbb    al,0xec
  402247:	lahf   
  402248:	adc    ah,BYTE PTR ds:[eax+0x79]
  40224c:	add    al,0xf1
  40224e:	cmc    
  40224f:	xor    eax,ebx
  402251:	scas   eax,DWORD PTR es:[edi]
  402252:	cwde   
  402253:	mov    dl,0x8d
  402255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402256:	icebp  
  402257:	jmp    0x7f24ec4f
  40225c:	enter  0xc57,0xb4
  402260:	mov    bh,0xce
  402262:	inc    esi
  402263:	xchg   DWORD PTR [esi-0x77],esp
  402266:	dec    ebp
  402267:	cld    
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	pmaddwd mm5,QWORD PTR [edx+0x3b69af5]
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	je     0x40232d
  4022d8:	push   esp
  4022d9:	pop    ebx
  4022da:	adc    bh,BYTE PTR [edi]
  4022dc:	xchg   DWORD PTR [esi-0x49],esi
  4022df:	add    eax,DWORD PTR [esi]
  4022e1:	retf   0x7316
  4022e4:	add    DWORD PTR [ecx-0x646bb011],edx
  4022ea:	sbb    al,0x2
  4022ec:	mov    ebp,0x46675aa1
  4022f1:	mov    ebx,0xae9e5c7c
  4022f6:	mov    BYTE PTR [ebx-0x5e413000],cl
  4022fc:	xchg   edi,eax
  4022fd:	mov    edi,0xfeefc8ff
  402302:	mov    DWORD PTR [edx],eax
  402304:	xchg   esi,eax
  402305:	loope  0x402292
  402307:	pop    esp
  402308:	inc    edi
  402309:	or     DWORD PTR [ebx],esi
  40230b:	xor    DWORD PTR [ebx],eax
  40230d:	and    BYTE PTR [ebx-0x1b],ch
  402310:	dec    esi
  402311:	cmp    DWORD PTR [esi+ebp*1+0x71],0x76
  402316:	test   DWORD PTR [ebp+0x24],eax
  402319:	dec    ebp
  40231a:	xchg   ebx,eax
  40231b:	callw  0x8f60
  40231f:	xchg   BYTE PTR [edi-0xe966aac],dh
  402325:	and    ebx,DWORD PTR [esi+0x153e803a]
  40232b:	adc    eax,DWORD PTR [eax]
  40232d:	call   0x55c3:0x4c895cfc
  402334:	cmp    eax,DWORD PTR [eax]
  402336:	cdq    
  402337:	jmp    FWORD PTR [ecx]
  402339:	push   0xc78cef98
  40233e:	mov    edi,0x2e040fa8
  402343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402344:	adc    al,0x10
  402346:	xor    al,0xa1
  402348:	test   al,0x95
  40234a:	adc    al,0xcf
  40234c:	pop    ecx
  40234d:	and    ecx,DWORD PTR [edx]
  40234f:	jbe    0x4022fc
  402351:	push   ecx
  402352:	outs   dx,DWORD PTR ds:[esi]
  402353:	xchg   ecx,eax
  402354:	sub    esp,DWORD PTR [esi-0x80]
  402357:	mov    ecx,0xff6a619d
  40235c:	or     BYTE PTR [ecx],0x5d
  40235f:	pushf  
  402360:	dec    ebp
  402361:	in     eax,0xd8
  402363:	push   ss
  402364:	jecxz  0x402307
  402366:	jge    0x4023c1
  402368:	mov    DWORD PTR [ebx],ebx
  40236a:	add    al,0x4b
  40236c:	(bad)  
  40236d:	outs   dx,DWORD PTR ds:[esi]
  40236e:	inc    esp
  40236f:	or     al,0x84
  402371:	mov    esp,DWORD PTR [edx+esi*8-0x132eb54d]
  402378:	mov    ds:0xf2afbf2e,al
  40237d:	retf   0xa001
  402380:	ds into 
  402382:	mov    ch,0xe3
  402384:	scas   eax,DWORD PTR es:[edi]
  402385:	cmp    BYTE PTR [ebx-0x80],ch
  402388:	pop    esp
  402389:	lahf   
  40238a:	es pop esp
  40238c:	adc    BYTE PTR [ebx],al
  40238e:	and    BYTE PTR [eax+0x56919db9],al
  402394:	scas   eax,DWORD PTR es:[edi]
  402395:	aad    0x1e
  402397:	pop    esp
  402398:	(bad)  
  402399:	shl    dl,1
  40239b:	popf   
  40239c:	ins    DWORD PTR es:[edi],dx
  40239d:	dec    esi
  40239e:	xchg   esp,eax
  40239f:	pop    esi
  4023a0:	out    0x36,eax
  4023a2:	or     DWORD PTR [esi],esi
  4023a4:	inc    ebp
  4023a5:	hlt    
  4023a6:	xchg   ecx,eax
  4023a7:	mov    ch,0xbd
  4023a9:	sahf   
  4023aa:	xlat   BYTE PTR ds:[ebx]
  4023ab:	ss ins DWORD PTR es:[edi],dx
  4023ad:	mov    bl,0x4a
  4023af:	sti    
  4023b0:	retf   0x4842
  4023b3:	pop    ss
  4023b4:	out    0x44,eax
  4023b6:	test   BYTE PTR [edx],0xe1
  4023b9:	daa    
  4023ba:	imul   esp,eax,0x1a158be0
  4023c0:	push   ebp
  4023c1:	xor    edx,ecx
  4023c3:	aaa    
  4023c4:	or     esp,eax
  4023c6:	data16 or al,0x4d
  4023c9:	dec    ebp
  4023ca:	add    BYTE PTR [esp+edx*1+0x35],bh
  4023ce:	inc    eax
  4023cf:	bound  ebx,QWORD PTR [ecx-0xd]
  4023d2:	test   BYTE PTR [ebx],ah
  4023d4:	cwde   
  4023d5:	jo     0x40240f
  4023d7:	aaa    
  4023d8:	or     dl,dl
  4023da:	jge    0x402452
  4023dc:	stos   DWORD PTR es:[edi],eax
  4023dd:	pop    ecx
  4023de:	jmp    0xbb3e:0x5b132f31
  4023e5:	sbb    dh,BYTE PTR [ecx+edx*8+0x38750659]
  4023ec:	cmovae ecx,DWORD PTR [ebx-0x1d]
  4023f0:	xor    DWORD PTR [edx-0x2d],ebx
  4023f3:	lods   eax,DWORD PTR ds:[esi]
  4023f4:	lods   eax,DWORD PTR ds:[esi]
  4023f5:	push   ds
  4023f6:	xor    esi,eax
  4023f8:	hlt    
  4023f9:	xchg   edx,eax
  4023fa:	arpl   WORD PTR [ecx-0x4374e8cd],bx
  402400:	xor    eax,0xd054119d
  402405:	mov    ah,0xa1
  402407:	and    al,0x2a
  402409:	cmovns eax,ecx
  40240c:	into   
  40240d:	add    dl,BYTE PTR [esi-0x793bc936]
  402413:	xchg   edi,eax
  402414:	or     al,BYTE PTR [esi]
  402416:	les    ebp,FWORD PTR [eax-0x3a]
  402419:	adc    BYTE PTR [ecx+ebx*2],dl
  40241c:	mov    eax,ds:0xc5fee2a0
  402421:	call   0x8d8ab817
  402426:	repz adc DWORD PTR ds:0x6aa4fcf2,ebx
  40242d:	lahf   
  40242e:	push   edi
  40242f:	adc    bl,BYTE PTR [edi-0x19]
  402432:	ret    0xf43
  402435:	mov    bh,0x4d
  402437:	push   ebx
  402438:	in     al,dx
  402439:	mov    ebp,0xdc014f21
  40243e:	daa    
  40243f:	inc    ebx
  402440:	mov    cs,WORD PTR [ecx+ebp*2+0x4c]
  402444:	retf   0xcc12
  402447:	cdq    
  402448:	lods   eax,DWORD PTR ds:[esi]
  402449:	add    ch,cl
  40244b:	daa    
  40244c:	xchg   ebp,eax
  40244d:	push   ecx
  40244e:	xor    BYTE PTR [edi+0x503f6b70],dh
  402454:	sbb    eax,0xa43aee0c
  402459:	jmp    0x4023fa
  40245b:	add    BYTE PTR [esi-0x2200219c],0x54
  402462:	mov    DWORD PTR [eax-0x56],ebp
  402465:	dec    ebp
  402466:	sub    eax,0x3bddd35e
  40246b:	(bad)  
  40246d:	or     edi,DWORD PTR [ebx+0x1e6572ad]
  402473:	or     dh,ch
  402475:	fwait
  402476:	pop    ecx
  402477:	mov    edx,0xd94a26d3
  40247c:	ficom  DWORD PTR [eax+0x60fd0ee4]
  402482:	fstp   st(0)
  402484:	sub    al,BYTE PTR [edx]
  402486:	adc    DWORD PTR [esi+eiz*1],edx
  402489:	push   edi
  40248a:	mov    dl,0x90
  40248c:	sub    DWORD PTR [ebx+0x98bf84d],ecx
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xd2e5517e
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	xchg   ebp,eax
  4024da:	fst    DWORD PTR [esi+0x2a]
  4024dd:	jmp    0x2305:0x41b469a8
  4024e4:	ret    0x5d88
  4024e7:	pop    edi
  4024e8:	sub    ebp,DWORD PTR [ebp+0x5e]
  4024eb:	loope  0x40246f
  4024ed:	mov    ecx,0x6637fde5
  4024f2:	pop    eax
  4024f3:	clc    
  4024f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024f5:	aam    0xa
  4024f7:	js     0x40256e
  4024f9:	int3   
  4024fa:	ror    DWORD PTR [ecx+0x30d4640d],1
  402500:	fs xor eax,0x8059607d
  402506:	sahf   
  402507:	push   esp
  402508:	sub    al,0x22
  40250a:	sbb    ecx,eax
  40250c:	adc    al,0xcb
  40250e:	fimul  WORD PTR [esi]
  402510:	and    edi,esp
  402512:	dec    edx
  402513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402514:	pop    eax
  402515:	add    BYTE PTR [ecx],bh
  402517:	sbb    BYTE PTR [ebp-0x2],0x39
  40251b:	add    al,0xf8
  40251d:	lods   eax,DWORD PTR ds:[esi]
  40251e:	dec    edx
  40251f:	ins    DWORD PTR es:[edi],dx
  402520:	and    BYTE PTR [ecx+0x51998ae1],ah
  402526:	ror    ebx,0x6e
  402529:	lea    ebp,[esp+ebp*2]
  40252c:	pushf  
  40252d:	xchg   esi,eax
  40252e:	icebp  
  40252f:	int    0x67
  402531:	jge    0x402580
  402533:	mov    ds,WORD PTR cs:[edx-0x118d77f1]
  40253a:	ins    DWORD PTR es:[edi],dx
  40253b:	dec    ebp
  40253c:	fstp   TBYTE PTR [esi+0x1d]
  40253f:	pop    ebx
  402540:	xchg   edx,eax
  402541:	push   edx
  402542:	aaa    
  402543:	xor    sp,WORD PTR [edi]
  402546:	shl    edi,cl
  402548:	loop   0x4024e7
  40254a:	frstor [edx+0x2f92ed6c]
  402550:	scas   al,BYTE PTR es:[edi]
  402551:	mov    dl,0x65
  402553:	push   ebp
  402554:	xor    ecx,DWORD PTR ds:0xed5ca65d
  40255a:	ret    
  40255b:	xchg   ebx,eax
  40255c:	mov    edx,0x5065b65f
  402561:	sbb    bl,BYTE PTR [esi]
  402563:	pop    eax
  402564:	and    dl,BYTE PTR [esi-0x62475532]
  40256a:	dec    edi
  40256b:	pop    esi
  40256c:	add    bh,ch
  40256e:	imul   esp,DWORD PTR ds:[ebx+0x18bed9f9],0xc453463
  402579:	fld    st(1)
  40257b:	add    BYTE PTR es:[ebx],bl
  40257e:	push   ss
  40257f:	shl    DWORD PTR [ebx-0x3bb749bf],0x4d
  402586:	or     BYTE PTR [edi-0x76],al
  402589:	cs jp  0x4025d5
  40258c:	lods   eax,DWORD PTR ds:[esi]
  40258d:	hlt    
  40258e:	add    ecx,DWORD PTR [esi+eiz*2-0x3a15d808]
  402595:	cld    
  402596:	push   ecx
  402597:	mov    esi,DWORD PTR ds:0xd9aec3ab
  40259d:	out    dx,eax
  40259e:	cli    
  40259f:	mov    eax,ds:0xaf331b4a
  4025a4:	mov    bh,0x23
  4025a6:	mov    edi,0x85858b0a
  4025ab:	and    bh,BYTE PTR [eax+edx*2-0x28d76dc2]
  4025b2:	and    DWORD PTR [ecx+edx*4+0x72c28d1d],0x209a2980
  4025bd:	pop    ss
  4025be:	leave  
  4025bf:	mov    BYTE PTR [eax+0x57664b63],al
  4025c5:	mov    ?,WORD PTR [eax-0x4aedbe3e]
  4025cb:	mov    dl,0xa6
  4025cd:	cmp    BYTE PTR [esi],ah
  4025cf:	(bad)  
  4025d0:	fimul  DWORD PTR [esi+ebx*4-0x38afafcd]
  4025d7:	int3   
  4025d8:	shr    DWORD PTR [edi],0x20
  4025db:	cmp    al,0x6e
  4025dd:	iret   
  4025de:	jae    0x40264b
  4025e0:	jnp    0x4025ff
  4025e2:	jecxz  0x40256e
  4025e4:	loopne 0x4025ca
  4025e6:	sbb    ch,bl
  4025e8:	sub    DWORD PTR [edi-0x5],edi
  4025eb:	lods   al,BYTE PTR ds:[esi]
  4025ec:	xor    bl,BYTE PTR [eax-0x5b]
  4025ef:	mov    ah,0x67
  4025f1:	ret    0xbdc
  4025f4:	out    dx,al
  4025f5:	call   0x4b068545
  4025fa:	pop    ebp
  4025fb:	and    eax,0xd2b07daf
  402600:	cs jmp 0x1148:0x4cf3bbd1
  402608:	adc    edi,ebx
  40260a:	xchg   bp,ax
  40260c:	in     eax,0x9c
  40260e:	ja     0x4025f3
  402610:	or     esi,DWORD PTR [edi+0x48]
  402613:	xchg   esp,eax
  402614:	mov    cl,0x59
  402616:	loop   0x4025c7
  402618:	mov    ebp,DWORD PTR [ebx-0x3c]
  40261b:	jne    0x4025a3
  40261d:	mov    ah,0xf8
  40261f:	jmp    0xe8ba1b54
  402624:	js     0x40261c
  402626:	and    eax,0x3ac60935
  40262b:	loopne 0x4025d6
  40262d:	in     al,0x12
  40262f:	sbb    ch,BYTE PTR [edi-0x1041c84f]
  402635:	shl    DWORD PTR [ecx],1
  402637:	or     eax,0xf8956ac6
  40263c:	mov    eax,ds:0xdba9cdc5
  402641:	sub    al,0x67
  402643:	pop    eax
  402644:	inc    edx
  402645:	add    BYTE PTR [eax],al
  402647:	add    eax,0x9286a660
  40264c:	stc    
  40264d:	out    dx,eax
  40264e:	stos   DWORD PTR es:[edi],eax
  40264f:	sbb    dh,BYTE PTR [ebp-0x6e]
  402652:	cli    
  402653:	mov    edx,0x11b53f53
  402658:	nop
  402659:	cmp    dh,BYTE PTR fs:[ebx]
  40265c:	out    dx,eax
  40265d:	sbb    BYTE PTR [eax-0x3c],ah
  402660:	add    al,0x97
  402662:	lahf   
  402663:	sti    
  402664:	mov    ah,0x21
  402666:	arpl   WORD PTR [edx-0x25f6653c],bx
  40266c:	ds out 0x22,eax
  40266f:	mov    WORD PTR [edx-0x6f3ee4a2],gs
  402675:	and    edx,DWORD PTR [edx-0xa]
  402678:	adc    BYTE PTR [edi],0x79
  40267b:	dec    edi
  40267c:	cmc    
  40267d:	(bad)  
  40267e:	jle    0x4026ad
  402680:	add    dl,BYTE PTR [edi+edx*1+0x7ca9e0]
  402687:	std    
  402688:	mov    ebx,0xcbb96e82
  40268d:	xchg   DWORD PTR ds:0xe04d89ed,esi
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x3
  4026c9:	arpl   WORD PTR [ecx+0x7e0f246f],cx
  4026cf:	jle    0x402686
  4026d1:	jg     0x402751
  4026d3:	jle    0x402705
  4026d5:	mov    edi,0x72340ad4
  4026da:	push   cs
  4026db:	mov    dh,al
  4026dd:	cwde   
  4026de:	push   ecx
  4026df:	cwde   
  4026e0:	jp     0x40272c
  4026e2:	cmp    al,0xcc
  4026e4:	aaa    
  4026e5:	xor    bl,BYTE PTR [ebx-0x1fa4ae6b]
  4026eb:	(bad)  [eax-0x3f78869a]
  4026f1:	ficom  DWORD PTR ds:0x887c1b55
  4026f7:	push   esi
  4026f8:	jg     0x4026d4
  4026fa:	sub    eax,0xa830366
  4026ff:	sbb    BYTE PTR [esi+ebp*4],ah
  402702:	xor    DWORD PTR [ebp+0x20],0xfa4e1410
  402709:	and    ecx,0x76cc0145
  40270f:	int    0x5b
  402711:	int3   
  402712:	xchg   DWORD PTR [ebp-0x32],ebx
  402715:	ss scas al,BYTE PTR es:[edi]
  402717:	out    0x9a,al
  402719:	pusha  
  40271a:	cmp    esi,eax
  40271c:	or     DWORD PTR [ecx],eax
  40271e:	pop    edx
  40271f:	les    ebp,FWORD PTR [esp+edi*2-0x36f3cddd]
  402726:	rol    BYTE PTR [eax-0x19],0x75
  40272a:	test   al,0x89
  40272c:	push   ebx
  40272d:	stos   DWORD PTR es:[edi],eax
  40272e:	pop    ebx
  40272f:	mov    ah,0x10
  402731:	lock ret 
  402733:	mov    bh,0xef
  402735:	adc    cl,al
  402737:	or     DWORD PTR ds:0x8c32151e,eax
  40273d:	adc    esi,ebx
  40273f:	and    BYTE PTR [ebp+0x3a],0xd6
  402743:	fisubr WORD PTR [ebx]
  402745:	xor    eax,0xa8d0e794
  40274a:	cdq    
  40274b:	aam    0x79
  40274d:	or     al,0xc0
  40274f:	daa    
  402750:	shr    BYTE PTR [ebp-0x7d],cl
  402753:	out    0xb2,eax
  402755:	popa   
  402756:	je     0x40276f
  402758:	fwait
  402759:	mov    al,ds:0x25e16ab7
  40275e:	in     eax,0xb0
  402760:	out    0x9c,eax
  402762:	cmp    bl,ch
  402764:	mov    al,ds:0x4d901cdf
  402769:	mov    DWORD PTR [edx-0x2ebb3baa],ebx
  40276f:	jecxz  0x40272f
  402771:	xor    BYTE PTR [ecx+esi*1-0x3c86d578],0x51
  402779:	mov    al,ds:0xe177589c
  40277e:	fwait
  40277f:	mov    al,0x34
  402781:	sti    
  402782:	shl    DWORD PTR ds:0xbd6f9e44,1
  402788:	dec    eax
  402789:	sbb    BYTE PTR [edx-0x3],bh
  40278c:	sub    al,0x1e
  40278e:	int3   
  40278f:	in     eax,dx
  402790:	mov    DWORD PTR [ecx-0x2a5e2af4],edx
  402796:	mov    cl,0x3b
  402798:	pop    eax
  402799:	sbb    dh,BYTE PTR [ebx-0x5f44febc]
  40279f:	lahf   
  4027a0:	mov    eax,ds:0x1f210466
  4027a5:	push   0xfffffff9
  4027a7:	sbb    BYTE PTR ds:0xa55de708,0x36
  4027ae:	leave  
  4027af:	or     al,0x3d
  4027b1:	dec    esp
  4027b2:	mov    esi,0x4b5ded06
  4027b7:	xor    al,0x9e
  4027b9:	cmp    BYTE PTR [edi+0x122468b8],bh
  4027bf:	arpl   WORD PTR [eax+0x1a],bx
  4027c2:	pop    ds
  4027c3:	sub    eax,0x8412014b
  4027c8:	out    dx,eax
  4027c9:	ds jns 0x402795
  4027cc:	mov    ds:0x330fa636,eax
  4027d1:	mov    ch,0xc7
  4027d3:	test   al,0xa
  4027d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027d6:	add    ecx,ecx
  4027d8:	add    BYTE PTR [ebp+0x7f],0xd1
  4027dc:	jl     0x4027bc
  4027de:	es push eax
  4027e0:	or     BYTE PTR [edi+0x55bd594],dh
  4027e6:	adc    al,BYTE PTR [esi+0x62]
  4027e9:	push   ss
  4027ea:	dec    esp
  4027eb:	xor    BYTE PTR [esp+esi*2-0x4c],ah
  4027ef:	push   DWORD PTR es:[edx]
  4027f2:	inc    ecx
  4027f3:	pop    esp
  4027f4:	mov    ebp,0x148a4c99
  4027f9:	test   DWORD PTR [edx+edi*1],ebx
  4027fc:	ds mov bh,0x46
  4027ff:	xor    DWORD PTR [ebp+eiz*8+0x75237935],esp
  402806:	lea    ebx,[eax-0x74736856]
  40280c:	out    0x9e,eax
  40280e:	pop    eax
  40280f:	inc    eax
  402810:	shl    DWORD PTR [ebx-0x1e],0x73
  402814:	fisubr DWORD PTR [esi-0x2f]
  402817:	cdq    
  402818:	add    eax,DWORD PTR [esi+0x34]
  40281b:	retf   0xaa46
  40281e:	gs mov al,0xcc
  402821:	jb     0x40284b
  402823:	hlt    
  402824:	(bad)  
  402825:	int    0xc1
  402827:	xchg   esp,eax
  402828:	cmp    edx,DWORD PTR [esi-0x35816804]
  40282e:	and    al,0x31
  402830:	push   ebx
  402831:	jg     0x40283f
  402833:	sub    BYTE PTR [ecx-0x56],ch
  402836:	fimul  DWORD PTR [eax+eax*1-0x377cad97]
  40283d:	shl    DWORD PTR ds:0x688578e4,1
  402843:	mov    dh,0x4d
  402845:	dec    ebx
  402846:	fldcw  WORD PTR [esi+0x386339a3]
  40284c:	call   0xa606:0xc732ce6e
  402853:	push   ss
  402854:	sub    ch,BYTE PTR [eax-0x768b922f]
  40285a:	je     0x402899
  40285c:	sbb    ebp,DWORD PTR [esi-0x2ff1762]
  402862:	xor    DWORD PTR [ebx+0x6697e276],edi
  402868:	mov    ebp,0xfc02ed5f
  40286d:	stos   DWORD PTR es:[edi],eax
  40286e:	mov    ah,bl
  402870:	sub    al,0xdd
  402872:	dec    esi
  402873:	ins    BYTE PTR es:[edi],dx
  402874:	sti    
  402875:	jl     0x4028e9
  402877:	dec    BYTE PTR [ecx+eiz*4+0x7784b59c]
  40287e:	cwde   
  40287f:	xchg   edx,eax
  402880:	lds    esi,FWORD PTR [ebp-0x2c28326e]
  402886:	shl    DWORD PTR [ebp+0x79],cl
  402889:	xchg   edi,eax
  40288a:	pop    ss
  40288b:	mov    DWORD PTR [ecx],eax
  40288d:	jmp    0x4028b6
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax-0x7a21fbaf]
  4028ec:	mov    esi,0x853d7a9
  4028f1:	jle    0x402971
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x4028da
  4028f8:	mov    ss,WORD PTR [esi]
  4028fa:	pop    esp
  4028fb:	call   0xca25:0x5990a5c7
  402902:	out    dx,al
  402903:	add    eax,0xbde6652d
  402908:	cmc    
  402909:	or     DWORD PTR [ebx-0x31],edx
  40290c:	and    al,ah
  40290e:	jne    0x402988
  402910:	test   bl,bh
  402912:	repnz cdq 
  402914:	fs ins DWORD PTR es:[edi],dx
  402916:	xchg   edi,eax
  402917:	pop    es
  402918:	outs   dx,DWORD PTR ds:[esi]
  402919:	rcr    BYTE PTR [ecx+edx*1+0x7a],0xd
  40291e:	fs pop edi
  402920:	xor    edi,esp
  402922:	cld    
  402923:	call   0x7321:0x2d8466bc
  40292a:	pop    ds
  40292b:	adc    DWORD PTR [eax+0x47c65b12],edx
  402931:	icebp  
  402932:	add    BYTE PTR [edx],bl
  402934:	or     ebx,ebx
  402936:	fdivr  DWORD PTR [edi-0x17a0d6fa]
  40293c:	dec    eax
  40293d:	jg     0x40295d
  40293f:	xchg   esi,eax
  402940:	push   ebp
  402941:	hlt    
  402942:	popa   
  402943:	(bad)  
  402944:	jle    0x40293f
  402946:	mov    al,0x65
  402948:	pop    esp
  402949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40294a:	mov    dl,0xa2
  40294c:	hlt    
  40294d:	mov    dl,0xc3
  40294f:	push   cs
  402950:	lods   al,BYTE PTR ds:[esi]
  402951:	int3   
  402952:	add    BYTE PTR [eax+0x1181981b],cl
  402958:	and    al,0x22
  40295a:	or     esi,edx
  40295c:	cmp    al,dl
  40295e:	push   0x3e63d499
  402963:	fmul   st,st(2)
  402965:	inc    edi
  402966:	add    dh,BYTE PTR [esi-0x4e]
  402969:	pusha  
  40296a:	loope  0x4028f5
  40296c:	jmp    0xecfd:0x44c7d9e5
  402973:	loope  0x4029a2
  402975:	fisttp QWORD PTR [ebx+0x37]
  402978:	test   DWORD PTR [esi+0x39a64f45],0xfdec548a
  402982:	sub    dl,BYTE PTR [edx-0x307ddb3d]
  402988:	dec    esi
  402989:	mov    edi,0xc03bb561
  40298e:	push   ebp
  40298f:	dec    eax
  402990:	out    dx,eax
  402991:	sub    dh,BYTE PTR [ebp-0x262aa3c0]
  402997:	imul   eax,DWORD PTR [ecx+0x5b],0x6c
  40299b:	mov    ah,0xc0
  40299d:	xchg   edi,eax
  40299e:	and    eax,0xfdaa6660
  4029a3:	(bad)  
  4029a4:	test   al,0xc
  4029a6:	in     eax,dx
  4029a7:	sbb    DWORD PTR [edi],ecx
  4029a9:	cmp    al,dl
  4029ab:	dec    ebp
  4029ac:	add    BYTE PTR [esi+0x16],dh
  4029af:	out    0xbf,eax
  4029b1:	loope  0x402995
  4029b3:	out    dx,eax
  4029b4:	xor    bl,BYTE PTR [ecx+ebp*8+0x3f]
  4029b8:	or     DWORD PTR [ebx+0x29],edx
  4029bb:	add    dl,BYTE PTR [ebx]
  4029bd:	jae    0x4029eb
  4029bf:	sub    esi,DWORD PTR [esi-0x20a801e3]
  4029c5:	das    
  4029c6:	clc    
  4029c7:	pop    esp
  4029c8:	fdivp  st(2),st
  4029ca:	xor    eax,0x76ada1ee
  4029cf:	xchg   ebp,eax
  4029d0:	push   edi
  4029d1:	pop    ecx
  4029d2:	xor    eax,0x8c469e95
  4029d7:	hlt    
  4029d8:	and    bh,BYTE PTR [edx+0x7d]
  4029db:	std    
  4029dc:	xchg   edi,eax
  4029dd:	adc    eax,0xcbb190a6
  4029e2:	ror    DWORD PTR [edx-0x11cc78a9],0xae
  4029e9:	mov    edi,0x205af66b
  4029ee:	pop    edx
  4029ef:	in     al,dx
  4029f0:	dec    ebp
  4029f1:	retf   
  4029f2:	mov    edx,eax
  4029f4:	call   0x3256:0x542becf0
  4029fb:	mov    al,0x45
  4029fd:	push   ebx
  4029fe:	in     eax,0x23
  402a00:	mov    DWORD PTR [edx+0x33],edx
  402a03:	dec    BYTE PTR [ebp+0x6c]
  402a06:	xchg   esi,eax
  402a07:	dec    eax
  402a08:	rcl    esi,0xe0
  402a0b:	test   BYTE PTR [eax-0x6e],dl
  402a0e:	mov    al,al
  402a10:	gs cmp ebx,ebx
  402a13:	leave  
  402a14:	lds    edx,FWORD PTR [ebp+0x25815148]
  402a1a:	xchg   DWORD PTR [esi+0x43],eax
  402a1d:	add    BYTE PTR [eax],al
  402a1f:	add    BYTE PTR [eax],al
  402a21:	add    cl,ch
  402a23:	or     eax,0x8b000000
  402a28:	adc    eax,0x434687
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434687,edx
  402a34:	cmp    DWORD PTR ds:0x434687,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434687,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4345e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434687,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434687
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434687,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4345ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43463b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434677,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434677
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434677,ecx
  402aac:	cmp    DWORD PTR ds:0x434677,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434677,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43470f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4346fb
  402ae8:	or     DWORD PTR ds:0x4346c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4346b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4346c3,0x434603
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	out    dx,al
  402b20:	cmc    
  402b21:	lods   eax,DWORD PTR ds:[esi]
  402b22:	retf   
  402b23:	jae    0x402b2e
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402ac1
  402b2c:	xchg   ebx,eax
  402b2d:	dec    DWORD PTR ds:0xec1b19dc
  402b33:	mov    al,0x78
  402b35:	mov    ds:0x42bd8ae4,eax
  402b3a:	sub    BYTE PTR [ecx-0x2b],bl
  402b3d:	out    0x9d,al
  402b3f:	mov    ecx,0xa5eed6db
  402b44:	rol    DWORD PTR [esi+0x228dbdda],cl
  402b4a:	add    eax,0x5ed74d31
  402b4f:	dec    edi
  402b50:	cmc    
  402b51:	repnz or BYTE PTR [edx],0x65
  402b55:	mov    bh,BYTE PTR [ecx+0x3fbe0340]
  402b5b:	cli    
  402b5c:	mov    cl,0x3f
  402b5e:	scas   eax,DWORD PTR es:[edi]
  402b5f:	retf   
  402b60:	mov    bh,0x2c
  402b62:	sub    eax,0x84e5a079
  402b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b68:	(bad)  
  402b69:	push   ecx
  402b6a:	call   0xeada:0x25a9c6af
  402b71:	js     0x402b3e
  402b73:	shl    DWORD PTR [edi],0xc0
  402b76:	out    0xd6,eax
  402b78:	xchg   BYTE PTR [edi+0x68],cl
  402b7b:	in     al,dx
  402b7c:	fsubr  DWORD PTR [eax-0x49]
  402b7f:	inc    edx
  402b80:	inc    esi
  402b81:	mov    dh,0x97
  402b83:	mov    bl,0xce
  402b85:	inc    ecx
  402b86:	dec    ebp
  402b87:	mov    ?,WORD PTR [ecx+edi*4-0x6e4c4649]
  402b8e:	cdq    
  402b8f:	and    eax,DWORD PTR [ebp+0x4c]
  402b92:	imul   eax,DWORD PTR [ebx],0x6a
  402b95:	xchg   ebp,eax
  402b96:	in     eax,dx
  402b97:	sbb    DWORD PTR [esi-0x8],0x6d8b4a6c
  402b9e:	(bad)  
  402b9f:	fadd   DWORD PTR [ecx-0x78]
  402ba2:	and    edi,eax
  402ba4:	and    al,0x0
  402ba6:	sub    edx,ecx
  402ba8:	sbb    al,0x3e
  402baa:	bnd jge 0x402be0
  402bad:	fbstp  TBYTE PTR [ebx+ecx*2-0x7e]
  402bb1:	test   DWORD PTR [esi-0x6d43f3f2],0xf69f6a61
  402bbb:	(bad)  
  402bbc:	call   0x1f7af017
  402bc1:	fild   DWORD PTR [edi-0x30]
  402bc4:	xchg   esp,eax
  402bc5:	and    al,0x1b
  402bc7:	mov    cl,0x36
  402bc9:	mov    ah,0x4d
  402bcb:	add    DWORD PTR [edi+ecx*4],0x170e545
  402bd2:	stos   DWORD PTR es:[edi],eax
  402bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd4:	and    edi,DWORD PTR [ebx-0x62345c4d]
  402bda:	test   DWORD PTR [ebp+0x76e54104],0xbfa9fc14
  402be4:	push   esi
  402be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402be6:	sti    
  402be7:	out    dx,al
  402be8:	sbb    DWORD PTR [ecx-0x27],edx
  402beb:	sbb    BYTE PTR [edi+0x42],cl
  402bee:	jecxz  0x402ba1
  402bf0:	cmp    al,0x60
  402bf2:	repz aaa 
  402bf4:	mov    DWORD PTR [ecx+0x19],0x1c96751e
  402bfb:	jmp    0x402c5a
  402bfd:	iret   
  402bfe:	fadd   QWORD PTR [ecx+ebx*4]
  402c01:	mov    DWORD PTR ds:0xbfb7174b,edx
  402c07:	out    dx,al
  402c08:	cmc    
  402c09:	sbb    al,0x9f
  402c0b:	xlat   BYTE PTR ds:[ebx]
  402c0c:	repnz stos DWORD PTR es:[edi],eax
  402c0e:	sub    esi,ebp
  402c10:	out    dx,eax
  402c11:	pushf  
  402c12:	in     eax,dx
  402c13:	dec    edx
  402c14:	cs dec edx
  402c16:	jmp    0x3d569be
  402c1b:	imul   ebx,DWORD PTR [edi],0xd53e3771
  402c21:	outs   dx,DWORD PTR ds:[esi]
  402c22:	es out 0xe4,ax
  402c26:	xor    edi,esi
  402c28:	sbb    al,0x17
  402c2a:	fs pushf 
  402c2c:	in     eax,0xa4
  402c2e:	push   esp
  402c2f:	mov    ds:0xa385b6db,eax
  402c34:	push   eax
  402c35:	xor    esp,DWORD PTR [edx+esi*1-0x12dd3692]
  402c3c:	loopne 0x402be8
  402c3e:	add    DWORD PTR [esi+eiz*2+0x4c],edx
  402c42:	in     al,dx
  402c43:	xchg   ebx,eax
  402c44:	(bad)  
  402c45:	jmp    0x402c0e
  402c47:	lea    ebx,[edi-0x44]
  402c4a:	mov    ebp,0xfa3bd603
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434607,0x0
  402c5f:	mov    eax,ds:0x434607
  402c64:	inc    eax
  402c65:	mov    ds:0x434607,eax
  402c6a:	cmp    DWORD PTR ds:0x434607,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434607,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4345e7,0x434713
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	aas    
  402ce7:	mov    ah,0x17
  402ce9:	cmc    
  402cea:	adc    ecx,DWORD PTR [ebx]
  402cec:	jle    0x402d6c
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402c82
  402cf3:	pop    edi
  402cf4:	and    ch,al
  402cf6:	into   
  402cf7:	mov    esp,?
  402cf9:	aam    0x32
  402cfb:	xchg   DWORD PTR [eax-0x30f7d9ae],ebx
  402d01:	aas    
  402d02:	or     bl,ah
  402d04:	jae    0x402ca2
  402d06:	retf   
  402d07:	cs ss pop ecx
  402d0a:	pushf  
  402d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d0c:	jns    0x402cde
  402d0e:	dec    edi
  402d0f:	pop    edx
  402d10:	xchg   edi,eax
  402d11:	fs cmc 
  402d13:	jae    0x402d3a
  402d15:	pusha  
  402d16:	out    0xde,al
  402d18:	jnp    0x402d8f
  402d1a:	dec    edi
  402d1b:	xor    eax,DWORD PTR [esi]
  402d1d:	dec    ebp
  402d1e:	mov    al,0xe3
  402d20:	inc    eax
  402d21:	lods   al,BYTE PTR ds:[esi]
  402d22:	or     bh,al
  402d24:	popa   
  402d25:	push   ds
  402d26:	mov    al,0xb
  402d28:	push   es
  402d29:	iret   
  402d2a:	cmp    dh,dh
  402d2c:	add    bl,cl
  402d2e:	sub    dh,BYTE PTR [edx-0x2d168837]
  402d34:	mov    edi,ebx
  402d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d37:	push   ebx
  402d38:	and    DWORD PTR [edi+0x3e8cf81c],ecx
  402d3e:	js     0x402cfb
  402d40:	mov    eax,ds:0x5ebc21cf
  402d45:	mov    edx,0xaaca1a83
  402d4a:	jns    0x402d55
  402d4c:	call   0x6f45:0x47d63c9b
  402d53:	leave  
  402d54:	pop    esp
  402d55:	jg     0x402d20
  402d57:	nop
  402d58:	imul   esp,DWORD PTR [ebx+0x41851e49],0xa2c32103
  402d62:	jno    0x402dcd
  402d64:	retf   
  402d65:	arpl   WORD PTR [edx-0x25],bx
  402d68:	cmc    
  402d69:	cmp    al,0x9e
  402d6b:	icebp  
  402d6c:	adc    dl,BYTE PTR [ecx]
  402d6e:	jle    0x402d89
  402d70:	push   eax
  402d71:	adc    DWORD PTR ds:0xd464eabc,eax
  402d77:	icebp  
  402d78:	pop    eax
  402d79:	xor    al,0x5
  402d7b:	ret    
  402d7c:	mov    al,ds:0xae8acd4b
  402d81:	adc    ebp,0x77
  402d84:	mov    esp,0x59b7f530
  402d89:	sahf   
  402d8a:	sub    DWORD PTR [ebx+0x56],esi
  402d8d:	and    al,0x1c
  402d8f:	lds    edx,FWORD PTR [eax]
  402d91:	dec    esp
  402d92:	sahf   
  402d93:	scas   al,BYTE PTR es:[edi]
  402d94:	inc    eax
  402d95:	outs   dx,DWORD PTR ds:[esi]
  402d96:	mov    eax,ds:0x9d367aa8
  402d9b:	fidiv  DWORD PTR [ebx+0x520216d5]
  402da1:	and    dl,bh
  402da3:	xchg   ebx,eax
  402da4:	adc    BYTE PTR [ecx],dl
  402da6:	(bad)  
  402da8:	cmp    eax,0xe4ba3e41
  402dad:	shr    DWORD PTR [edx],1
  402daf:	push   DWORD PTR [ebp+0x51475775]
  402db5:	sbb    BYTE PTR [ecx+0x540b7495],0x14
  402dbc:	dec    esp
  402dbd:	inc    edi
  402dbe:	clc    
  402dbf:	popa   
  402dc0:	or     cl,al
  402dc2:	mov    esp,0x13ff6aad
  402dc7:	in     al,0xc0
  402dc9:	mov    DWORD PTR [ecx+0x305fa33a],ebx
  402dcf:	fdivr  DWORD PTR [edi+eiz*8]
  402dd2:	mov    eax,ds:0xbb11b033
  402dd7:	adc    DWORD PTR [eax+0x7180dc42],ebp
  402ddd:	in     eax,dx
  402dde:	out    0xb3,eax
  402de0:	ret    
  402de1:	inc    esp
  402de2:	add    al,0x40
  402de4:	or     eax,0xc07d0dbe
  402de9:	sbb    edi,DWORD PTR [edx-0x51]
  402dec:	jae    0x402d71
  402dee:	clc    
  402def:	mov    cl,0xe
  402df1:	cmp    edx,edx
  402df3:	mov    ecx,0xedf733a0
  402df8:	mov    ah,0x30
  402dfa:	sub    cl,BYTE PTR [ebx]
  402dfc:	pop    edx
  402dfd:	add    DWORD PTR [eax+0x4473a122],edi
  402e03:	xchg   edi,eax
  402e04:	addr16 hlt 
  402e06:	jmp    0x8084:0x9ba48ffd
  402e0d:	lahf   
  402e0e:	jmp    0xc5d:0x8b82c433
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434677,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    bl,BYTE PTR [ebp+0x33ec44e5]
  402e97:	adc    al,0x7e
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e5b
  402e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea0:	shl    DWORD PTR [edx-0xde2a80],0x9f
  402ea7:	mov    ebp,0x5a9ab08f
  402eac:	ja     0x402f14
  402eae:	adc    eax,0xd272fd57
  402eb3:	data16 ins BYTE PTR es:[edi],dx
  402eb5:	sti    
  402eb6:	or     bl,BYTE PTR [ebx+0x28f76fe3]
  402ebc:	sbb    eax,0x4c228efa
  402ec1:	inc    ebp
  402ec2:	call   0xb059:0x7f3dc246
  402ec9:	not    DWORD PTR [ebx-0x2428eaf5]
  402ecf:	jecxz  0x402e61
  402ed1:	loope  0x402eb7
  402ed3:	lea    esp,[esi-0x45c77aad]
  402ed9:	cld    
  402eda:	sub    BYTE PTR [ebx-0x64278e04],dh
  402ee0:	fsubr  DWORD PTR [ebp-0x7150798b]
  402ee6:	push   ebp
  402ee7:	pop    esp
  402ee8:	or     al,0x2c
  402eea:	xor    ebx,ecx
  402eec:	inc    ebp
  402eed:	push   eax
  402eee:	jmp    FWORD PTR [ebx-0x6e]
  402ef1:	sub    ah,BYTE PTR [ebp+0x7]
  402ef4:	(bad)  
  402ef5:	mov    esp,0x8b0fda2
  402efa:	cdq    
  402efb:	out    0x21,eax
  402efd:	sub    bl,BYTE PTR [eax-0x57]
  402f00:	fiadd  DWORD PTR [eax]
  402f02:	xor    ecx,DWORD PTR [ecx]
  402f04:	bnd ja 0x402f69
  402f07:	fcmove st,st(3)
  402f09:	jecxz  0x402f82
  402f0b:	in     eax,0x63
  402f0d:	adc    DWORD PTR [ebx-0x43],esi
  402f10:	test   DWORD PTR [edx],edi
  402f12:	or     eax,DWORD PTR [edx]
  402f14:	and    eax,0x1cbb72d6
  402f19:	jle    0x402eeb
  402f1b:	inc    esi
  402f1c:	dec    edi
  402f1d:	inc    BYTE PTR [edx]
  402f1f:	(bad)  
  402f20:	out    0xcd,eax
  402f22:	pop    ds
  402f23:	cdq    
  402f24:	mov    ds:0xd43eb57,al
  402f29:	and    al,BYTE PTR [edx+0x20]
  402f2c:	xor    edx,eax
  402f2e:	xchg   ebx,eax
  402f2f:	sti    
  402f30:	jg     0x402ebd
  402f32:	cmp    BYTE PTR [ebx-0x32bcdd4d],al
  402f38:	ret    0x9945
  402f3b:	dec    esp
  402f3c:	and    al,0xcb
  402f3e:	pop    es
  402f3f:	or     eax,DWORD PTR [ebx+0x76cdca00]
  402f45:	and    dl,BYTE PTR [esi-0x2f6d0d28]
  402f4b:	push   eax
  402f4c:	js     0x402f38
  402f4e:	cmp    eax,0x64b7758c
  402f53:	lahf   
  402f54:	xchg   esi,eax
  402f55:	push   es
  402f56:	shl    BYTE PTR [eax+0x1c],0x96
  402f5a:	pop    esp
  402f5b:	or     BYTE PTR [edi],0x40
  402f5e:	(bad)  
  402f5f:	fbstp  TBYTE PTR [ebx-0x2e4159d4]
  402f65:	div    BYTE PTR [ebp-0x2a]
  402f68:	push   0xd45539ce
  402f6d:	dec    edi
  402f6e:	std    
  402f6f:	scas   al,BYTE PTR es:[edi]
  402f70:	(bad)  
  402f72:	mov    ebp,0x1039d2bf
  402f77:	int3   
  402f78:	test   BYTE PTR [edi],al
  402f7a:	stos   BYTE PTR es:[edi],al
  402f7b:	mov    cl,0xb3
  402f7d:	xchg   esi,eax
  402f7e:	or     esi,DWORD PTR [esi+eiz*4-0x7e]
  402f82:	mov    dh,0x77
  402f84:	dec    eax
  402f85:	fst    DWORD PTR [ecx]
  402f87:	in     al,0x1e
  402f89:	mov    dh,0xd3
  402f8b:	scas   eax,DWORD PTR es:[edi]
  402f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f8e:	(bad)
  402f92:	rcr    DWORD PTR [edx-0x7b8b51c0],cl
  402f98:	xlat   BYTE PTR ds:[ebx]
  402f99:	cmp    DWORD PTR [ebx],0x6b
  402f9c:	fisubr WORD PTR [edx+0x248778c5]
  402fa2:	mov    esi,0xf7c746b
  402fa7:	call   0xe738:0x7c73c237
  402fae:	hlt    
  402faf:	or     ecx,edx
  402fb1:	xchg   ebp,eax
  402fb2:	into   
  402fb3:	leave  
  402fb4:	adc    edx,DWORD PTR [ecx-0x2c]
  402fb7:	lds    edx,FWORD PTR [ebx+0x1a]
  402fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fbb:	cmc    
  402fbc:	sti    
  402fbd:	shl    BYTE PTR [eax],cl
  402fbf:	scas   al,BYTE PTR es:[edi]
  402fc0:	(bad)  
  402fc1:	push   ebp
  402fc2:	ror    BYTE PTR [ecx-0x70],1
  402fc5:	add    eax,0x92353a9c
  402fca:	sbb    al,bh
  402fcc:	stos   DWORD PTR es:[edi],eax
  402fcd:	jae    0x402fae
  402fcf:	push   ebp
  402fd0:	(bad)  
  402fd1:	xor    ecx,DWORD PTR [ebx]
  402fd3:	add    esi,eax
  402fd5:	push   edi
  402fd6:	and    BYTE PTR [edi-0x56],ah
  402fd9:	fidiv  DWORD PTR [eax+eax*4-0x29]
  402fdd:	mov    esp,0x26bbb6bd
  402fe2:	mov    DWORD PTR [ecx-0x543bcb61],ebx
  402fe8:	into   
  402fe9:	int    0x4f
  402feb:	jg     0x402fb9
  402fed:	dec    esp
  402fee:	xor    bl,0xda
  402ff1:	stc    
  402ff2:	sub    eax,0x4c0ce2d6
  402ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff9:	in     al,0xff
  402ffb:	sbb    ecx,edi
  402ffd:	xor    cl,dh
  402fff:	push   0x5675b6bf
  403004:	jmp    DWORD PTR [edi-0x75]
  403007:	add    ch,BYTE PTR [eax-0x63e05298]
  40300d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300e:	adc    ebp,edx
  403010:	out    0xf5,al
  403012:	fstp   QWORD PTR [eax-0x26]
  403015:	scas   al,BYTE PTR es:[edi]
  403016:	sbb    BYTE PTR [ebx+0xe8d5d2c],0x3f
  40301d:	call   0xc3cc88c7
  403022:	test   esp,edx
  403024:	mov    ebp,0x64839d8d
  403029:	fcomp  DWORD PTR [ebp+edi*8-0x1d601e6a]
  403030:	dec    ecx
  403031:	xor    BYTE PTR [ebx+0x19512238],al
  403037:	adc    al,0x90
  403039:	add    ecx,DWORD PTR [edx]
  40303b:	xchg   edx,eax
  40303c:	xchg   DWORD PTR [esi+ecx*1],eax
  40303f:	jl     0x403065
  403041:	mov    bl,al
  403043:	test   eax,0xbc7fbdd3
  403048:	pop    ds
  403049:	push   esp
  40304a:	pop    ebx
  40304b:	xchg   edx,eax
  40304c:	xchg   edx,eax
  40304d:	mov    edx,0xc3f7f562
  403052:	std    
  403053:	rcr    BYTE PTR [edx],cl
  403055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403056:	xor    edx,DWORD PTR [eax]
  403058:	ret    0xd955
  40305b:	xchg   edx,eax
  40305c:	xchg   DWORD PTR [ebp-0x51],edi
  40305f:	adc    DWORD PTR [edx-0x1951fde],esp
  403065:	xchg   BYTE PTR [ebp+eax*8-0x6bfe31a7],ah
  40306c:	mov    bh,0x28
  40306e:	cmp    BYTE PTR [edx],dh
  403070:	ins    DWORD PTR es:[edi],dx
  403071:	gs or  ebp,eax
  403074:	rcl    ch,0x45
  403077:	inc    esi
  403078:	mov    ds:0xccae937e,eax
  40307d:	adc    DWORD PTR [edx+0x641ee6c1],ebp
  403083:	test   eax,0x235ede0b
  403088:	pop    eax
  403089:	jge    0x4030a2
  40308b:	ret    
  40308c:	mov    ah,0xb3
  40308e:	std    
  40308f:	test   edi,0x3429292b
  403095:	imul   DWORD PTR ds:0x45d05ddd
  40309b:	add    edx,DWORD PTR [esi-0xe]
  40309e:	dec    ebp
  40309f:	(bad)  [ebp+0x6536e490]
  4030a5:	ficomp DWORD PTR [ecx]
  4030a7:	or     bl,ch
  4030a9:	xor    BYTE PTR [ecx-0x1fdfa94d],bl
  4030af:	icebp  
  4030b0:	jne    0x4030a3
  4030b2:	sbb    DWORD PTR [eax+0x4658d6bf],edx
  4030b8:	cmp    ch,BYTE PTR [ebp+0x7d8ccdbe]
  4030be:	les    ebp,FWORD PTR [esi+edx*4+0x1351d776]
  4030c5:	nop
  4030c6:	inc    edi
  4030c7:	(bad)  
  4030c8:	out    0x59,eax
  4030ca:	adc    ch,BYTE PTR [ebp-0x62]
  4030cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ce:	jbe    0x4030c0
  4030d0:	(bad)  [ecx+0x22]
  4030d3:	dec    ebp
  4030d4:	jmp    DWORD PTR [edi]
  4030d6:	call   0x36f92566
  4030db:	mov    bh,BYTE PTR [edi+0x12cdd63f]
  4030e1:	dec    ebx
  4030e2:	xor    eax,0x7cbfedba
  4030e7:	je     0x40310f
  4030e9:	lods   al,BYTE PTR ds:[esi]
  4030ea:	dec    ebp
  4030eb:	clc    
  4030ec:	xchg   esp,eax
  4030ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ee:	lock adc BYTE PTR [eax-0x72a360dc],ah
  4030f5:	daa    
  4030f6:	in     eax,dx
  4030f7:	inc    edx
  4030f8:	nop
  4030f9:	hlt    
  4030fa:	mov    ebx,0x10f75584
  4030ff:	lahf   
  403100:	pusha  
  403101:	je     0x4030fa
  403103:	pop    es
  403104:	retf   0xe589
  403107:	fiadd  DWORD PTR ds:0xcc1407d
  40310d:	mov    dh,0xb7
  40310f:	jae    0x40309d
  403111:	repz and eax,0x8f4f9489
  403117:	test   eax,0x978354e7
  40311c:	xor    ecx,eax
  40311e:	nop
  40311f:	mov    edi,0x7892c672
  403124:	or     dh,BYTE PTR [ebp-0x3c]
  403127:	shl    al,1
  403129:	sti    
  40312a:	cmp    ch,BYTE PTR [ebp-0x4f]
  40312d:	add    ebx,edi
  40312f:	cmp    al,0xef
  403131:	fsub   DWORD PTR [ecx-0x587abfe5]
  403137:	fimul  DWORD PTR [esi]
  403139:	scas   al,BYTE PTR es:[edi]
  40313a:	sub    BYTE PTR [ebx-0x41],al
  40313d:	mov    al,0x71
  40313f:	mov    esi,ebx
  403141:	pusha  
  403142:	push   ebp
  403143:	mov    ebp,0xc44b9dc
  403148:	push   DWORD PTR [edx+0x27]
  40314b:	xchg   ebx,eax
  40314c:	pop    ebx
  40314d:	in     al,0x74
  40314f:	ins    DWORD PTR es:[edi],dx
  403150:	xlat   BYTE PTR ds:[ebx]
  403151:	dec    eax
  403152:	dec    esp
  403153:	loope  0x403153
  403155:	imul   ecx,DWORD PTR [ebx+eiz*2-0x3f58ffdd],0x3a
  40315d:	add    al,0x11
  40315f:	xor    ecx,DWORD PTR [ecx-0x2d]
  403162:	sub    al,0xce
  403164:	(bad)  
  403165:	cmp    ah,dl
  403167:	dec    esi
  403168:	add    esi,edx
  40316a:	jg     0x403132
  40316c:	jo     0x40314f
  40316e:	or     BYTE PTR [edi],0x5a
  403171:	jne    0x4031e7
  403173:	jb     0x4030f5
  403175:	test   al,0xb
  403177:	(bad)  
  403178:	mov    ah,0x53
  40317a:	outs   dx,BYTE PTR gs:[esi]
  40317c:	out    dx,eax
  40317d:	jle    0x403143
  40317f:	xchg   ebx,eax
  403180:	out    dx,al
  403181:	add    eax,0x58f2e143
  403186:	xor    al,0x0
  403188:	popf   
  403189:	pop    esi
  40318a:	pop    edi
  40318b:	std    
  40318c:	xlat   BYTE PTR ds:[ebx]
  40318d:	hlt    
  40318e:	daa    
  40318f:	sahf   
  403190:	lods   eax,DWORD PTR ds:[esi]
  403191:	sub    cl,BYTE PTR [esi+0x2e94594d]
  403197:	popa   
  403198:	cmp    ah,BYTE PTR [ebx+0x75]
  40319b:	loopne 0x4031c6
  40319d:	cdq    
  40319e:	cwde   
  40319f:	cmp    bh,bh
  4031a1:	call   0x163e:0x4482a933
  4031a8:	add    eax,0xd05498c3
  4031ad:	lods   al,BYTE PTR ds:[esi]
  4031ae:	pop    edi
  4031af:	fimul  DWORD PTR [edx+0x3cf4c682]
  4031b5:	stos   DWORD PTR es:[edi],eax
  4031b6:	test   al,0x6
  4031b8:	scas   al,BYTE PTR es:[edi]
  4031b9:	sbb    BYTE PTR [edi],ah
  4031bb:	or     dh,BYTE PTR [edi+ebx*2]
  4031be:	je     0x4031e6
  4031c0:	pop    esp
  4031c1:	call   0xa1c01bcf
  4031c6:	sub    ch,al
  4031c8:	enter  0x1e07,0x5f
  4031cc:	imul   ebp,DWORD PTR [ebx+edi*2-0x63],0x846b1b11
  4031d4:	in     eax,dx
  4031d5:	push   0xc9570682
  4031da:	cdq    
  4031db:	call   DWORD PTR [esi-0x20]
  4031de:	and    BYTE PTR [ebx+0x872806],0xfb
  4031e5:	sub    cl,0xee
  4031e8:	jle    0x403196
  4031ea:	bound  ebp,QWORD PTR [ebx+edx*8]
  4031ed:	push   esp
  4031ee:	xchg   ebp,eax
  4031ef:	fwait
  4031f0:	pop    esp
  4031f1:	imul   edx,DWORD PTR cs:[edi],0x4d7834ab
  4031f8:	aaa    
  4031f9:	mov    dh,0x2b
  4031fb:	mov    ds:0x3d8ed06a,eax
  403200:	shr    DWORD PTR ds:0x99171414,0x84
  403207:	mov    edx,0xef1db5cf
  40320c:	fcomp  QWORD PTR [esi+0x4f]
  40320f:	js     0x4031ee
  403211:	sar    eax,1
  403213:	dec    edx
  403214:	retf   0x74b1
  403217:	imul   edi,DWORD PTR [ebp-0x47],0xffffff8a
  40321b:	mov    ecx,0x42ee825
  403220:	ds mov bh,0xcc
  403223:	add    DWORD PTR [ecx],0x46cc30b1
  403229:	data16 or BYTE PTR [edi+0x59],bl
  40322d:	sbb    BYTE PTR [ebx+0x1731277a],ch
  403233:	pop    ebx
  403235:	jno    0x403276
  403237:	nop
  403238:	xor    BYTE PTR [eax-0x6a],ah
  40323b:	jg     0x4032b3
  40323d:	mov    ebp,esp
  40323f:	pop    ebp
  403240:	mov    edx,0x89750fb1
  403245:	les    edx,FWORD PTR [esi]
  403247:	sbb    dh,BYTE PTR [eax+0x76ededa8]
  40324d:	mov    eax,ds:0xd279b911
  403252:	pop    esp
  403253:	push   ebx
  403254:	xchg   ebx,eax
  403255:	aam    0x18
  403257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403258:	sbb    BYTE PTR [edi],al
  40325a:	stos   BYTE PTR es:[edi],al
  40325b:	enter  0x18a,0x14
  40325f:	mov    ch,BYTE PTR [edx+ebx*8]
  403262:	mov    ebp,eax
  403264:	out    0x6e,eax
  403266:	loope  0x40321f
  403268:	push   esi
  403269:	xchg   ebx,eax
  40326a:	(bad)  
  40326b:	dec    ebx
  40326c:	push   ebx
  40326d:	cmc    
  40326e:	push   ebp
  40326f:	inc    ecx
  403270:	xchg   edx,eax
  403271:	mov    edi,0xa8039fd6
  403276:	mov    eax,0x8a38
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x43467b,0x434643
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43468f
  403297:	xor    ecx,DWORD PTR ds:0x4345eb
  40329d:	mov    DWORD PTR ds:0x43468f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43467f
  4032ac:	xor    DWORD PTR ds:0x434603,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43468f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4346bf
  4032c1:	mov    DWORD PTR ds:0x43468f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43468f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43470b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     cl,BYTE PTR [edi+0xb28fab5]
  4032f7:	adc    BYTE PTR [esi+0x7e],bh
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x4032be
  4032ff:	bound  esi,QWORD PTR [edi-0x75]
  403302:	push   0x81aa6923
  403307:	retf   
  403308:	sub    BYTE PTR [eax+0x7f],bh
  40330b:	lahf   
  40330c:	aam    0xc7
  40330e:	shl    BYTE PTR [eax-0x462d7b71],1
  403314:	sub    esp,DWORD PTR [esi+0x795c760b]
  40331a:	cmp    al,0x9b
  40331c:	and    ch,0xf0
  40331f:	mov    WORD PTR [esi+0x7f],cs
  403322:	das    
  403323:	jbe    0x4032f2
  403325:	loope  0x403338
  403327:	les    ecx,FWORD PTR [ecx]
  403329:	(bad)  
  40332a:	jnp    0x4032ba
  40332c:	mov    esi,DWORD PTR [edi+esi*2-0x437a5598]
  403333:	enter  0x1499,0xe3
  403337:	inc    ebp
  403338:	jmp    0x98161765
  40333d:	dec    esi
  40333e:	add    al,0xc9
  403340:	pop    ebp
  403341:	mov    eax,ds:0x23a300e
  403346:	leave  
  403347:	and    BYTE PTR [edx-0x61],ah
  40334a:	(bad)  [edx+0x1f5b6d14]
  403350:	mov    ebp,0xea3e616f
  403355:	enter  0x5d14,0x3d
  403359:	out    0xff,eax
  40335b:	mov    BYTE PTR [ebx-0x186cd8f2],bl
  403361:	add    dh,BYTE PTR [ebp+0xb9ade9e]
  403367:	xor    al,BYTE PTR [edx+0x1c6d129f]
  40336d:	dec    ebp
  40336e:	mov    dh,0x98
  403370:	jg     0x4033cc
  403372:	push   esi
  403373:	ins    DWORD PTR es:[edi],dx
  403374:	sub    al,0x54
  403376:	jo     0x403378
  403378:	mov    al,BYTE PTR [ebp-0x27]
  40337b:	loopne 0x4033e6
  40337d:	add    ebx,DWORD PTR [eiz*1+0x4142f687]
  403384:	sub    eax,0x46ceb47a
  403389:	and    dl,cl
  40338b:	mov    cl,0x19
  40338d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40338e:	xchg   BYTE PTR [esi],bl
  403390:	jo     0x403355
  403392:	lds    esp,FWORD PTR [ebx+0x497c5f7d]
  403398:	mov    bl,0x9a
  40339a:	cmp    al,0x82
  40339c:	jnp    0x403327
  40339e:	dec    edx
  40339f:	mov    BYTE PTR [ecx],dh
  4033a1:	mov    ch,0x7f
  4033a3:	cdq    
  4033a4:	test   eax,0x56c89325
  4033a9:	mov    DWORD PTR [ebp+edx*4+0x293e7fbe],0xe9a55eaa
  4033b4:	lea    edi,[edx+eax*4+0x7b079200]
  4033bb:	call   DWORD PTR [ebp-0xb81fa24]
  4033c1:	(bad)  
  4033c2:	shr    BYTE PTR [eax+0x24ba134e],cl
  4033c8:	fmul   QWORD PTR [edi]
  4033ca:	adc    eax,DWORD PTR [edx+0x69c550ba]
  4033d0:	loope  0x40343c
  4033d2:	clc    
  4033d3:	gs push 0xffffff88
  4033d6:	repnz (bad) 
  4033d8:	xor    al,0xa9
  4033da:	outs   dx,DWORD PTR ds:[esi]
  4033db:	adc    DWORD PTR [esi-0x56],esi
  4033de:	popa   
  4033df:	js     0x4033d4
  4033e1:	jg     0x403371
  4033e3:	adc    BYTE PTR ds:0x26147538,dh
  4033e9:	jb     0x4033bb
  4033eb:	in     eax,0xa3
  4033ed:	pop    ss
  4033ee:	cli    
  4033ef:	fwait
  4033f0:	das    
  4033f1:	or     DWORD PTR [eax+0x4432a588],edi
  4033f7:	ins    DWORD PTR es:[edi],dx
  4033f8:	retf   0x4115
  4033fb:	pop    ebp
  4033fc:	ds js  0x4033c5
  4033ff:	mov    eax,ds:0x171b98c0
  403404:	add    ch,BYTE PTR [esi-0x3b78fa2a]
  40340a:	lahf   
  40340b:	or     DWORD PTR [esi+0x58],ebp
  40340e:	ja     0x403418
  403410:	mov    cl,0x29
  403412:	mov    edi,0xc0e00990
  403417:	mov    ds:0x6d09df91,al
  40341c:	push   ebp
  40341d:	push   ebp
  40341e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40341f:	gs das 
  403421:	mov    eax,0x917bead
  403426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403427:	add    al,BYTE PTR [ebx]
  403429:	imul   ebx,ebp,0x38
  40342c:	push   esp
  40342d:	outs   dx,DWORD PTR ds:[esi]
  40342e:	add    al,0x3c
  403430:	adc    DWORD PTR [eax-0x5e],esi
  403433:	xchg   ebx,eax
  403434:	js     0x40344f
  403436:	icebp  
  403437:	out    0x84,al
  403439:	mov    WORD PTR [ebp+0x60],?
  40343c:	add    al,0x75
  40343e:	dec    edx
  40343f:	xchg   BYTE PTR [edx],dh
  403441:	scas   al,BYTE PTR es:[edi]
  403442:	test   eax,0xbe1c8e46
  403447:	es xchg ebp,eax
  403449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40344a:	inc    ebp
  40344b:	cmp    ebp,0xf1396a14
  403451:	or     dh,BYTE PTR [eax+0x3203ecc0]
  403457:	jbe    0x4033f0
  403459:	mov    ah,0xa2
  40345b:	(bad)  
  40345c:	int    0x89
  40345e:	xchg   ecx,eax
  40345f:	ins    DWORD PTR es:[edi],dx
  403460:	push   0x3c2ed506
  403465:	pop    ss
  403466:	inc    esi
  403467:	push   cs
  403468:	pop    ax
  40346a:	xor    eax,0xf5298d38
  40346f:	push   0x6d
  403471:	jno    0x40340d
  403473:	out    0x10,eax
  403475:	or     BYTE PTR [edx],ah
  403477:	data16 jno 0x403449
  40347a:	in     al,0xd8
  40347c:	fadd   QWORD PTR [edx-0x24]
  40347f:	dec    eax
  403480:	lock mov cs,WORD PTR [ebx]
  403483:	int3   
  403484:	(bad)  
  403485:	repz and dl,BYTE PTR [ebp+edx*1-0xf4fd31d]
  40348d:	inc    ebp
  40348e:	(bad)  
  40348f:	clc    
  403490:	lea    esp,[eax-0x1a]
  403493:	or     DWORD PTR [eax],eax
  403495:	loop   0x403437
  403497:	sub    ecx,ecx
  403499:	bound  edi,QWORD PTR [eax-0x24]
  40349c:	mov    edx,0xf93edf6a
  4034a1:	mov    ecx,DWORD PTR [ecx]
  4034a3:	nop
  4034a4:	jle    0xc24e12e2
  4034aa:	adc    cl,BYTE PTR [eax+0x5b]
  4034ad:	pop    ds
  4034ae:	mov    esi,0xfe15e6d
  4034b3:	neg    edx
  4034b5:	arpl   WORD PTR [esp+ebp*2],dx
  4034b8:	xchg   esp,eax
  4034b9:	sub    bl,bh
  4034bb:	aad    0xa9
  4034bd:	call   0xf150:0x6d0d626d
  4034c4:	xchg   esi,eax
  4034c5:	xchg   esi,eax
  4034c6:	inc    edx
  4034c7:	pop    ebx
  4034c8:	push   ds
  4034c9:	lock shl BYTE PTR [ecx],cl
  4034cc:	lock in al,0xb4
  4034cf:	scas   eax,DWORD PTR es:[edi]
  4034d0:	add    ch,BYTE PTR [ebx+0x6d7db278]
  4034d6:	lahf   
  4034d7:	adc    al,0x30
  4034d9:	repz mov dh,0x3d
  4034dc:	jo     0x4034c0
  4034de:	mov    ebp,0x2f2180ae
  4034e3:	cmp    eax,DWORD PTR [edi+0x79f8f5dd]
  4034e9:	mov    ss,WORD PTR [esi]
  4034eb:	mov    bh,0x75
  4034ed:	and    BYTE PTR [edx-0xe],cl
  4034f0:	jbe    0x403507
  4034f2:	mov    ds:0xf999cc37,eax
  4034f7:	or     ecx,DWORD PTR [edx-0x2879b314]
  4034fd:	test   al,0x9d
  4034ff:	(bad)  
  403500:	rol    DWORD PTR [eax],0x72
  403503:	sbb    dl,ah
  403505:	lahf   
  403506:	xlat   BYTE PTR ds:[ebx]
  403507:	and    DWORD PTR [eax],eax
  403509:	sbb    bh,BYTE PTR [ecx+0x1610842f]
  40350f:	pop    es
  403510:	push   esp
  403511:	in     al,dx
  403512:	and    BYTE PTR [esp+eax*4-0x5b],ah
  403516:	mov    edx,0xbccc57b4
  40351b:	js     0x4034ac
  40351d:	push   ebp
  40351e:	jmp    0xef5:0x500e632b
  403525:	xchg   DWORD PTR [eax],edi
  403527:	add    edx,DWORD PTR [edi]
  403529:	scas   al,BYTE PTR es:[edi]
  40352a:	(bad)  
  40352b:	les    ebx,FWORD PTR [eax+0x24fefc22]
  403531:	jmp    0x403584
  403533:	sub    al,0xcd
  403535:	shl    BYTE PTR [esi-0x2563e117],1
  40353b:	adc    DWORD PTR [eax+0x5259a30a],esi
  403541:	sahf   
  403542:	arpl   WORD PTR [ebx],di
  403544:	fldenv [ebx]
  403546:	mov    dh,0x79
  403548:	mov    al,BYTE PTR [edx+0x1d5b07e]
  40354e:	inc    ecx
  40354f:	sbb    eax,0xec59fa99
  403554:	in     al,0x15
  403556:	cmp    al,0xd7
  403558:	leave  
  403559:	data16 hlt 
  40355b:	es js  0x403560
  40355e:	imul   edi,eax,0xd92abf3a
  403564:	in     eax,dx
  403565:	call   0xc00f:0x3c858f18
  40356c:	cmp    bh,cl
  40356e:	out    dx,eax
  40356f:	xlat   BYTE PTR ds:[ebx]
  403570:	(bad)  
  403572:	cmp    ebp,esi
  403574:	dec    ecx
  403575:	shl    DWORD PTR [ecx+ecx*2],0x8d
  403579:	jno    0x403506
  40357b:	jmp    0x40356f
  40357d:	(bad)  
  40357e:	cmp    bh,cl
  403580:	and    eax,0x1fcf47db
  403585:	or     esp,DWORD PTR ds:[ebp+0x248df8af]
  40358c:	cmp    ah,cl
  40358e:	add    edi,DWORD PTR [ecx+0x3ea3381]
  403594:	stc    
  403595:	inc    eax
  403596:	or     dl,dl
  403598:	lahf   
  403599:	dec    ebx
  40359a:	and    esi,ecx
  40359c:	adc    eax,0xefa26a80
  4035a1:	push   edx
  4035a2:	cwde   
  4035a3:	push   ds
  4035a4:	sbb    BYTE PTR [ecx-0xa959477],dl
  4035aa:	cmp    al,0xf8
  4035ac:	sub    edi,eax
  4035ae:	mov    esi,ds
  4035b0:	jecxz  0x403587
  4035b2:	popf   
  4035b3:	adc    DWORD PTR [ecx+0x6714dbc4],ebp
  4035b9:	daa    
  4035ba:	sbb    al,0x4c
  4035bc:	cmp    al,0x50
  4035be:	adc    bh,BYTE PTR [edx+0x6b]
  4035c1:	mov    WORD PTR [ebp*8-0x660c31a1],gs
  4035c8:	mov    esp,0xd0c5460f
  4035cd:	or     dh,al
  4035cf:	xor    al,0xaa
  4035d1:	push   cs
  4035d2:	inc    eax
  4035d3:	data16 add al,0xe9
  4035d6:	push   eax
  4035d7:	jecxz  0x403575
  4035d9:	adc    eax,0x319e2acf
  4035de:	or     al,0xa4
  4035e0:	cld    
  4035e1:	loop   0x4035e0
  4035e3:	xchg   bh,al
  4035e5:	mov    ds:0x63e244c3,al
  4035ea:	or     eax,0xac5c2840
  4035ef:	mov    edi,0xe027cd0d
  4035f4:	fimul  DWORD PTR [eax+0x70797c27]
  4035fa:	jnp    0x403592
  4035fc:	xchg   ebp,eax
  4035fd:	pushf  
  4035fe:	out    0x9f,eax
  403600:	mov    BYTE PTR [edx-0x3f],0xd2
  403604:	test   eax,0xcae46def
  403609:	cmp    DWORD PTR [ecx-0x5627ee7],0x56
  403610:	out    dx,eax
  403611:	jmp    0x403616
  403613:	push   edi
  403614:	sub    ecx,esp
  403616:	shl    bl,1
  403618:	rcr    BYTE PTR [ebx-0xa],1
  40361b:	stos   BYTE PTR es:[edi],al
  40361c:	shr    BYTE PTR [ebx+eax*4+0x35f31940],1
  403623:	mov    esi,0x9b9e3f82
  403628:	das    
  403629:	push   cs
  40362a:	addr16 mov bh,0x93
  40362d:	(bad)  
  40362e:	loopne 0x4036a8
  403630:	pusha  
  403631:	sar    BYTE PTR [esi+0x1b],0x9a
  403635:	std    
  403636:	fiadd  WORD PTR [ecx]
  403638:	test   BYTE PTR [edi+0x7eb1a70f],0x3d
  40363f:	jmp    0xf5b2:0x14b3193c
  403646:	mov    ecx,esp
  403648:	adc    eax,0xa58d7b33
  40364d:	clc    
  40364e:	ffreep st(5)
  403650:	xor    bl,ch
  403652:	mov    ds:0x64428271,al
  403657:	loope  0x4036aa
  403659:	out    dx,eax
  40365a:	push   ecx
  40365b:	in     al,dx
  40365c:	add    ah,BYTE PTR [ecx+0x36c9123c]
  403662:	push   ebp
  403663:	aaa    
  403664:	adc    DWORD PTR [ecx-0x21],esp
  403667:	xchg   ecx,eax
  403668:	xlat   BYTE PTR ds:[ebx]
  403669:	mov    bl,0xe0
  40366b:	cmp    eax,0x8107505d
  403670:	xor    al,0x11
  403672:	sahf   
  403673:	in     eax,dx
  403674:	push   0xbe05c8c5
  403679:	mov    ah,0xf4
  40367b:	pop    esp
  40367c:	or     DWORD PTR [ecx+edx*1],0xfffffff4
  403680:	jg     0x403613
  403682:	int    0x43
  403684:	in     eax,dx
  403685:	add    ebx,edx
  403687:	and    al,0x79
  403689:	jae    0x403657
  40368b:	test   al,0x43
  40368d:	and    ecx,DWORD PTR ds:0x7ee30af6
  403693:	fisttp WORD PTR [ebx]
  403695:	or     dh,dh
  403697:	dec    ecx
  403698:	aam    0x7b
  40369a:	mov    bh,0x40
  40369c:	inc    ebp
  40369d:	dec    edi
  40369e:	jb     0x40364c
  4036a0:	pushf  
  4036a1:	mov    dh,0xda
  4036a3:	repnz scas eax,DWORD PTR es:[edi]
  4036a5:	int    0x4b
  4036a7:	test   al,0x9d
  4036a9:	add    DWORD PTR [ecx],ecx
  4036ab:	scas   al,BYTE PTR es:[edi]
  4036ac:	lods   eax,DWORD PTR ds:[esi]
  4036ad:	ret    0xac18
  4036b0:	add    ah,BYTE PTR [ebx+eiz*4-0x5b]
  4036b4:	add    BYTE PTR [esi+0x22],dl
  4036b7:	mov    BYTE PTR [edx+0x1121f4ff],0x73
  4036be:	xchg   BYTE PTR [esi+0x4774158d],dh
  4036c4:	mov    ebp,0xb4afc79c
  4036c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036ca:	xor    eax,DWORD PTR ds:0x45331a73
  4036d0:	test   eax,0x4b05f0f0
  4036d5:	daa    
  4036d6:	mov    al,BYTE PTR [ebp-0x1]
  4036d9:	mov    ecx,DWORD PTR ds:0x4345eb
  4036df:	sbb    ecx,DWORD PTR ds:0x434707
  4036e5:	mov    DWORD PTR ds:0x4345eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434713,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4345fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4345f7,0x434707
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434677,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434687,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434687
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434687,ecx
  40373d:	cmp    DWORD PTR ds:0x434687,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434687,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4346cb,0x14
  403779:	cmp    DWORD PTR ds:0x4346cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4346cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4346cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4346cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4346cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4346cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4346cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4345e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4345e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4345e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434849
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4345e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4345e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4345e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4345e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4345e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434687,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43470b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43464f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434643
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43464b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	pop    ss
  4038be:	xchg   ebp,eax
  4038bf:	mov    ebx,0x7e136369
  4038c4:	jle    0x40391c
  4038c6:	jns    0x403946
  4038c8:	jle    0x4038e8
  4038ca:	mov    ds:0x8f331f91,al
  4038cf:	dec    esi
  4038d0:	ins    BYTE PTR es:[edi],dx
  4038d1:	push   edx
  4038d2:	outs   dx,BYTE PTR ds:[esi]
  4038d3:	or     al,0x42
  4038d5:	mov    al,ds:0xac71adaa
  4038da:	ja     0x4038bd
  4038dc:	add    DWORD PTR [edx],ebp
  4038de:	mov    ds:0x955e641b,al
  4038e3:	lock or ch,ah
  4038e6:	bound  edx,QWORD PTR [ecx+0x3e]
  4038e9:	pop    ds
  4038ea:	bound  ebp,QWORD PTR [ebp+0x6d]
  4038ed:	sub    BYTE PTR [edx+eiz*2],al
  4038f0:	loopne 0x4038ce
  4038f2:	mov    esi,0xabd5413d
  4038f7:	pop    esi
  4038f8:	stos   DWORD PTR es:[edi],eax
  4038f9:	jns    0x403883
  4038fb:	cli    
  4038fc:	cmc    
  4038fd:	popf   
  4038fe:	pop    ecx
  4038ff:	bnd jo 0x4038b3
  403902:	push   0xffffffc3
  403904:	sub    eax,0x1e3a62e5
  403909:	dec    ebx
  40390a:	in     al,dx
  40390b:	aad    0x95
  40390d:	(bad)  
  40390e:	xlat   BYTE PTR ds:[ebx]
  40390f:	idiv   esp
  403911:	push   es
  403912:	(bad)  
  403914:	(bad)  
  403915:	bound  esp,QWORD PTR [eax+0x245dc780]
  40391b:	clc    
  40391c:	cdq    
  40391d:	cmp    esp,DWORD PTR [ebx]
  40391f:	into   
  403920:	inc    ebx
  403921:	xor    dh,BYTE PTR [ecx-0x723f332b]
  403927:	xor    al,0xb8
  403929:	dec    esi
  40392a:	inc    ebp
  40392b:	dec    esp
  40392c:	push   ss
  40392d:	mov    ecx,0xcaa1a924
  403932:	lock in al,0x80
  403935:	dec    esp
  403936:	dec    ebx
  403937:	and    BYTE PTR [esi-0x19b278c4],0xc
  40393e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40393f:	cmp    eax,0x8c4e6911
  403944:	mov    dl,0x9b
  403946:	aas    
  403947:	and    DWORD PTR [edi],ebx
  403949:	and    al,0xfd
  40394c:	lock pop edx
  40394e:	les    esi,FWORD PTR [edi+ebx*1-0x70]
  403952:	adc    ch,BYTE PTR [ebp-0x77]
  403955:	out    0xb1,al
  403957:	mov    esp,DWORD PTR [edx]
  403959:	out    dx,al
  40395a:	pop    ss
  40395b:	int    0x74
  40395d:	dec    edx
  40395e:	mov    WORD PTR [eax],ds
  403960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403961:	cmp    al,0x22
  403963:	push   ecx
  403964:	int3   
  403965:	xor    edx,DWORD PTR [ebp-0x79]
  403968:	test   eax,0x2ea58158
  40396d:	sub    DWORD PTR [ebp-0x195ab4ca],edi
  403973:	rol    ah,0xbf
  403976:	cwde   
  403977:	push   0xecaa770e
  40397c:	in     eax,0x59
  40397e:	imul   edx,DWORD PTR [edi],0x1a96508b
  403984:	mov    ah,dh
  403986:	mov    ebp,0xfada1c65
  40398b:	jne    0x403923
  40398d:	int3   
  40398e:	fwait
  40398f:	loop   0x4039af
  403991:	mov    al,ds:0xd1aa949e
  403996:	out    0x14,al
  403998:	mov    ebp,0xe9fca185
  40399d:	push   ss
  40399e:	aad    0xe7
  4039a0:	or     eax,0x8d588d59
  4039a5:	pop    esi
  4039a6:	(bad)  
  4039a7:	cdq    
  4039a8:	sbb    dl,BYTE PTR [ecx+0x396e81d6]
  4039ae:	popf   
  4039af:	sahf   
  4039b0:	hlt    
  4039b1:	dec    edx
  4039b2:	cmp    edi,DWORD PTR [ecx+eiz*8]
  4039b5:	dec    ebp
  4039b6:	fsub   st,st(2)
  4039b8:	cmp    BYTE PTR [ebp+ebp*1+0x5b347ef8],bh
  4039bf:	scas   eax,DWORD PTR es:[edi]
  4039c0:	adc    BYTE PTR [edi-0x4f],0x4f
  4039c4:	lahf   
  4039c5:	shl    DWORD PTR [edx+0x6485a609],cl
  4039cb:	iret   
  4039cc:	test   DWORD PTR [eax],esp
  4039ce:	cmp    DWORD PTR [ebx-0x55],edi
  4039d1:	push   es
  4039d2:	icebp  
  4039d3:	mov    edx,0x1034fd91
  4039d8:	cmp    eax,0xe35e51f8
  4039dd:	add    eax,0x3ba647b8
  4039e2:	std    
  4039e3:	mov    dh,0xc
  4039e5:	or     ebp,eax
  4039e7:	mov    edi,0x561dab3e
  4039ec:	adc    eax,0xbdf199d3
  4039f1:	jmp    0xd763:0x7036f511
  4039f8:	xor    eax,0x1c438c2d
  4039fd:	sbb    bl,BYTE PTR [edx]
  4039ff:	adc    dl,BYTE PTR [ebx-0x36fd902b]
  403a05:	aas    
  403a06:	mov    edx,DWORD PTR gs:[ebx]
  403a09:	pop    esp
  403a0a:	mov    ah,0x6c
  403a0c:	call   0x885076f0
  403a11:	mov    esp,0xc086da80
  403a16:	cmp    eax,0xc6d5376f
  403a1b:	ja     0x403a7b
  403a1d:	inc    ebp
  403a1e:	fistp  QWORD PTR [eax+0x74f2d275]
  403a24:	popf   
  403a25:	push   ss
  403a26:	test   al,0xb2
  403a28:	adc    eax,0xae994430
  403a2d:	imul   eax,DWORD PTR [eax-0x7ffd6852],0xfffffff4
  403a34:	(bad)  
  403a35:	fdivr  DWORD PTR [esi+0xbc491f8]
  403a3b:	add    edx,0x838743d5
  403a41:	sbb    BYTE PTR [edx-0x36db1a23],cl
  403a47:	mov    DWORD PTR [ecx+0x2426ed14],0x44102697
  403a51:	pop    ss
  403a52:	push   ebx
  403a53:	xchg   DWORD PTR [ebx],ebp
  403a55:	push   ebp
  403a56:	jae    0x403a95
  403a58:	push   0x11
  403a5a:	imul   edi,DWORD PTR [edx-0x56],0x37
  403a5e:	imul   edx,DWORD PTR [ebx],0x32e3fa64
  403a64:	mov    ebp,0x4bb9d9e2
  403a69:	shr    edi,cl
  403a6b:	pop    ebx
  403a6c:	popf   
  403a6d:	repnz pop ebp
  403a6f:	fwait
  403a70:	push   0x4e
  403a72:	fistp  WORD PTR [edx-0x42]
  403a75:	sbb    BYTE PTR [edi+edi*2+0xa7f1e98],dh
  403a7c:	dec    esp
  403a7d:	sbb    al,0xa4
  403a7f:	sub    esp,DWORD PTR [esi]
  403a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a82:	sar    DWORD PTR [edx+esi*2-0x39],1
  403a86:	xchg   ebp,eax
  403a87:	test   eax,0x3a958344
  403a8c:	mov    ?,ebp
  403a8e:	pop    ebp
  403a8f:	lock jb 0x403a12
  403a92:	push   ds
  403a93:	mov    al,ds:0x409a55c4
  403a98:	adc    DWORD PTR [ebx*4-0x7e704f88],ebp
  403a9f:	jae    0x403a89
  403aa1:	test   DWORD PTR [eax+0xb],ecx
  403aa4:	retf   
  403aa5:	add    DWORD PTR [ecx+0x1f],ecx
  403aa8:	adc    esi,DWORD PTR [eax]
  403aaa:	pusha  
  403aab:	arpl   dx,bx
  403aad:	adc    ah,ah
  403aaf:	sahf   
  403ab0:	into   
  403ab1:	add    bh,BYTE PTR [eax+0x2bb3cb60]
  403ab7:	mov    ebp,0x4ab395e4
  403abc:	push   esp
  403abd:	add    al,0x33
  403abf:	mov    al,ds:0x7b382d72
  403ac4:	push   ebx
  403ac5:	loop   0x403b19
  403ac7:	leave  
  403ac8:	or     al,0x74
  403aca:	aad    0xb1
  403acc:	xor    BYTE PTR [esi+eax*2+0x345033d3],ch
  403ad3:	xor    DWORD PTR [ecx-0x6c],esp
  403ad6:	std    
  403ad7:	xchg   esi,eax
  403ad8:	xor    BYTE PTR [eax+eiz*4-0x564f92d2],dl
  403adf:	shl    DWORD PTR [edi+0x41d4eebc],cl
  403ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ae6:	sub    ebx,DWORD PTR [ecx+0x59a7c163]
  403aec:	ror    ch,cl
  403aee:	out    dx,eax
  403aef:	xor    eax,0x3e12bd59
  403af4:	cld    
  403af5:	outs   dx,BYTE PTR ds:[esi]
  403af6:	(bad)  
  403af7:	fwait
  403af8:	or     BYTE PTR [esi+edx*2+0x2b],0x3d
  403afd:	or     eax,0x7b4326cb
  403b02:	in     al,dx
  403b03:	imul   ecx,DWORD PTR [eax+0x26],0xec58d60f
  403b0a:	fist   WORD PTR [ebx]
  403b0c:	stos   DWORD PTR es:[edi],eax
  403b0d:	(bad)  
  403b0e:	cmp    eax,0xee60167a
  403b13:	aam    0x49
  403b15:	inc    esi
  403b16:	push   ds
  403b17:	sub    DWORD PTR [esi-0x157f6e99],0x63
  403b1e:	shr    bh,0x91
  403b21:	stos   DWORD PTR es:[edi],eax
  403b22:	sub    eax,0xed0b787d
  403b27:	xor    al,0xa4
  403b29:	fsubr  QWORD PTR [edi+0x5d]
  403b2c:	lds    ecx,FWORD PTR ds:0xf3ac05e3
  403b32:	or     eax,0x7ed03936
  403b37:	or     eax,DWORD PTR [edi+0x660fecd7]
  403b3d:	in     eax,dx
  403b3e:	inc    edx
  403b3f:	bound  ecx,QWORD PTR [edx+0x1]
  403b42:	in     eax,0x2c
  403b44:	ja     0x403b33
  403b46:	pushf  
  403b47:	sbb    bl,BYTE PTR [edi+esi*2]
  403b4a:	fsubr  DWORD PTR [esi+eiz*8-0x53cd58b7]
  403b51:	push   esp
  403b52:	int    0x23
  403b54:	and    ecx,DWORD PTR [eax+0x57578f3d]
  403b5a:	ret    
  403b5b:	icebp  
  403b5c:	out    dx,eax
  403b5d:	sbb    ch,cl
  403b5f:	scas   al,BYTE PTR es:[edi]
  403b60:	call   ebp
  403b62:	dec    edi
  403b63:	adc    eax,edi
  403b65:	scas   eax,DWORD PTR es:[edi]
  403b66:	push   edi
  403b67:	push   esi
  403b68:	test   al,0xe5
  403b6a:	aam    0x68
  403b6c:	scas   eax,DWORD PTR es:[edi]
  403b6d:	adc    eax,0x649ac0f3
  403b72:	inc    esi
  403b73:	cmp    eax,0x90ec506d
  403b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b79:	into   
  403b7a:	cmp    ecx,0x5b47add7
  403b80:	pop    ecx
  403b81:	mov    eax,ds:0x3bedbf41
  403b86:	mov    ebx,0x4bfe0655
  403b8b:	jbe    0x403bf3
  403b8d:	mov    esp,0xc0224cf8
  403b92:	mov    cl,0x3d
  403b94:	jnp    0x403b80
  403b96:	sar    DWORD PTR [ebp+eiz*4+0x15],1
  403b9a:	aad    0xdb
  403b9c:	cs and esp,ebx
  403b9f:	sbb    BYTE PTR [edi-0x64d6f298],bl
  403ba5:	lock dec DWORD PTR [esp+eax*1-0x4c885d5d]
  403bad:	adc    eax,0x19e859b4
  403bb2:	pop    ebp
  403bb3:	adc    eax,0x21acd49f
  403bb8:	cmp    edi,ebp
  403bba:	call   0x83d38042
  403bbf:	outs   dx,DWORD PTR ds:[esi]
  403bc0:	push   esp
  403bc1:	(bad)  
  403bc2:	call   0xed73333e
  403bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc8:	xor    cl,al
  403bca:	jge    0x403b73
  403bcc:	cmp    al,0x89
  403bce:	fldenv ds:0xe96acd9a
  403bd4:	or     BYTE PTR [esp+eiz*2+0x76a416cc],ch
  403bdb:	mov    bh,0xaf
  403bdd:	and    BYTE PTR [edi-0x37],bl
  403be0:	cmp    DWORD PTR ds:0xc0d9108,0xb64100d
  403bea:	adc    ah,BYTE PTR [eax+0x52]
  403bed:	or     ebp,eax
  403bef:	neg    BYTE PTR [edx+0x64]
  403bf2:	in     eax,dx
  403bf3:	or     BYTE PTR [esi+0x66],ah
  403bf6:	ret    0x22ad
  403bf9:	jmp    0x403b81
  403bfb:	pop    es
  403bfc:	dec    esp
  403bfd:	iret   
  403bfe:	jle    0x403bfc
  403c00:	outs   dx,DWORD PTR ds:[esi]
  403c01:	ficomp DWORD PTR [edx]
  403c03:	mov    al,ds:0x42fa78d1
  403c08:	fnstenv [ebx]
  403c0a:	retf   
  403c0b:	inc    ebx
  403c0c:	test   al,0x37
  403c0e:	mov    ah,0x2
  403c10:	mov    ebp,DWORD PTR [eax+0x14ef7072]
  403c16:	aaa    
  403c17:	icebp  
  403c18:	and    cl,ch
  403c1a:	test   al,0xcb
  403c1c:	pop    ecx
  403c1d:	or     eax,0xbeec27a3
  403c22:	sub    al,0x47
  403c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c25:	xchg   esi,eax
  403c26:	mov    al,ds:0xecfa0843
  403c2b:	and    BYTE PTR [edx+0x68],dl
  403c2e:	and    DWORD PTR [ebx],ebx
  403c30:	gs pushf 
  403c32:	push   edx
  403c33:	out    0x4,eax
  403c35:	ror    DWORD PTR [edx+0x3f],cl
  403c38:	mov    bh,BYTE PTR gs:[eax+ebp*1+0x115e5a2]
  403c40:	sahf   
  403c41:	fwait
  403c42:	les    eax,FWORD PTR [edx+0x5]
  403c45:	aam    0x3e
  403c47:	pop    ebx
  403c48:	int3   
  403c49:	sahf   
  403c4a:	xchg   edi,eax
  403c4b:	mov    dh,0xa8
  403c4d:	gs pop ss
  403c4f:	iret   
  403c50:	inc    eax
  403c51:	pop    eax
  403c52:	pop    eax
  403c53:	xchg   ebx,eax
  403c54:	ficom  WORD PTR ds:0xb5350dd9
  403c5a:	ja     0x403ccf
  403c5c:	fs pop esi
  403c5e:	std    
  403c5f:	ins    BYTE PTR es:[edi],dx
  403c60:	jmp    0xd728:0xec318202
  403c67:	ret    
  403c68:	cmp    esp,DWORD PTR [ecx]
  403c6a:	bound  edx,QWORD PTR [edx-0x54]
  403c6d:	jp     0x403c9a
  403c6f:	push   ecx
  403c70:	out    dx,eax
  403c71:	pop    edi
  403c72:	in     al,0x99
  403c74:	pop    esp
  403c75:	mov    WORD PTR [edi+esi*8+0x6c],ds
  403c79:	cmp    dh,BYTE PTR [eax]
  403c7b:	(bad)  
  403c7c:	xchg   edi,eax
  403c7d:	repz aam 0x57
  403c80:	jl     0x403c72
  403c82:	dec    edx
  403c83:	adc    al,0x54
  403c85:	adc    DWORD PTR [esi],edx
  403c87:	in     eax,0xed
  403c89:	dec    edx
  403c8a:	pop    esi
  403c8b:	sbb    esi,DWORD PTR [edx-0x2e]
  403c8e:	cmc    
  403c8f:	cwde   
  403c90:	cmp    BYTE PTR ds:[edi+0x5b27fbdc],ah
  403c97:	dec    ebp
  403c98:	xchg   BYTE PTR [eax+0x79954e17],bl
  403c9e:	inc    esp
  403c9f:	lock push cs
  403ca1:	add    ax,di
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0xe99ca26b
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cb8
  403cf7:	cli    
  403cf8:	test   al,0x2a
  403cfa:	mov    eax,ds:0x57fa3f49
  403cff:	inc    esp
  403d00:	or     dl,BYTE PTR [eax]
  403d02:	lea    ecx,[esi-0x69]
  403d05:	fs int 0x82
  403d08:	aam    0x4b
  403d0a:	dec    edx
  403d0b:	inc    ecx
  403d0c:	push   ds
  403d0d:	xchg   esi,eax
  403d0e:	push   eax
  403d0f:	paddusb mm2,QWORD PTR [edi]
  403d12:	icebp  
  403d13:	mov    ds:0x8e4dcbf1,eax
  403d18:	mov    WORD PTR [ebp-0x2d],?
  403d1b:	adc    eax,edi
  403d1d:	adc    BYTE PTR [ecx+edi*2],cl
  403d20:	inc    DWORD PTR [edi-0x283cde12]
  403d26:	std    
  403d27:	ja     0x403d8a
  403d29:	push   ss
  403d2a:	retf   0xe1cf
  403d2d:	repz inc edi
  403d2f:	pop    ebx
  403d30:	or     al,0x9e
  403d32:	mov    ebp,0xae8d0086
  403d37:	push   0x2eb62c35
  403d3c:	mov    DWORD PTR [ebx],esp
  403d3e:	cmp    eax,0xb841cdf8
  403d43:	inc    edi
  403d44:	clc    
  403d45:	mov    ebp,DWORD PTR [esi+0xa919233]
  403d4b:	and    DWORD PTR [esi],eax
  403d4d:	aas    
  403d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4f:	out    dx,al
  403d50:	push   cs
  403d51:	fiadd  DWORD PTR [ebx+0x43]
  403d54:	pop    es
  403d55:	fst    DWORD PTR [ebx+eax*8]
  403d58:	loope  0x403d62
  403d5a:	sar    BYTE PTR [eax+eax*2],1
  403d5d:	and    al,0xd8
  403d5f:	jae    0x403ddd
  403d61:	(bad)  
  403d62:	jp     0x403d5e
  403d64:	inc    eax
  403d65:	enter  0x53ef,0xfc
  403d69:	push   esi
  403d6a:	enter  0xa4b1,0x37
  403d6e:	push   ds
  403d6f:	jmp    edi
  403d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d72:	outs   dx,DWORD PTR ds:[esi]
  403d73:	sub    al,0xf6
  403d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d76:	mov    ds:0x828ad766,al
  403d7b:	ins    BYTE PTR es:[edi],dx
  403d7c:	sbb    dl,BYTE PTR [edi+eax*2]
  403d7f:	popa   
  403d80:	jno    0x403df4
  403d82:	(bad)  
  403d83:	jge    0x403d19
  403d85:	mov    WORD PTR [ebx+0x1acffa53],fs
  403d8b:	sar    bl,0x10
  403d8e:	test   DWORD PTR [ebx-0x73],ecx
  403d91:	mov    ds:0x269cf8e7,al
  403d96:	and    dl,ah
  403d98:	mov    dl,0x5
  403d9a:	xor    ebp,DWORD PTR ds:0xdc0e192c
  403da0:	xchg   ebp,eax
  403da1:	lock pop es
  403da3:	sbb    bl,BYTE PTR [ebp-0x2bfffbf1]
  403da9:	add    dl,bl
  403dab:	arpl   WORD PTR es:[edx-0x4160098d],sp
  403db2:	mov    esp,0x1e9ce8c
  403db7:	scas   al,BYTE PTR es:[edi]
  403db8:	inc    eax
  403db9:	test   DWORD PTR [esi-0x297f0f2],edx
  403dbf:	(bad)  
  403dc0:	sub    eax,0x29489922
  403dc5:	js     0x403d69
  403dc7:	retf   
  403dc8:	dec    esi
  403dc9:	mov    ah,0xcf
  403dcb:	dec    esi
  403dcc:	sbb    eax,0xb4678ae3
  403dd1:	jg     0x403dae
  403dd3:	repnz add bh,BYTE PTR [ecx+0x6]
  403dd7:	dec    edx
  403dd8:	xchg   edx,eax
  403dd9:	nop
  403dda:	jmp    0x403ddb
  403ddc:	fsubr  QWORD PTR [ecx]
  403dde:	or     BYTE PTR [edi],cl
  403de0:	adc    BYTE PTR [edx],bl
  403de2:	inc    eax
  403de3:	nop
  403de4:	rcr    BYTE PTR [edx],cl
  403de6:	jne    0x403e2c
  403de8:	pop    ds
  403de9:	push   edx
  403dea:	jnp    0x403e63
  403dec:	adc    bl,bh
  403dee:	outs   dx,DWORD PTR ds:[esi]
  403def:	(bad)  
  403df0:	xor    BYTE PTR [eax-0x79],ah
  403df3:	mov    dh,0xcd
  403df5:	add    eax,0xc2ce2540
  403dfa:	mov    esp,0x48be6e1a
  403dff:	mov    esp,0xd6fb43b2
  403e04:	(bad)  
  403e05:	(bad)  
  403e06:	cld    
  403e07:	adc    dl,bh
  403e09:	imul   edi,DWORD PTR [esp+edx*1+0x2c2f838e],0x8dce0202
  403e14:	std    
  403e15:	push   eax
  403e16:	ss cmp eax,0x878258d2
  403e1c:	mov    eax,ds:0x26150f0d
  403e21:	xor    ch,al
  403e23:	dec    ebx
  403e24:	out    dx,al
  403e25:	dec    eax
  403e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e27:	pop    edx
  403e28:	jae    0x403e15
  403e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e2b:	repz mul ecx
  403e2e:	fcomp  QWORD PTR [ecx-0x1bc09f25]
  403e34:	fwait
  403e35:	adc    ebp,DWORD PTR [eax+0x7b]
  403e38:	sbb    eax,0xc46f69
  403e3d:	sti    
  403e3e:	add    DWORD PTR [eax-0x4eb7acf6],eax
  403e44:	xchg   DWORD PTR [edx+0x5d],ebp
  403e47:	sbb    eax,0x54d410c1
  403e4c:	cs (bad) 
  403e4e:	std    
  403e4f:	call   0xd844:0xda21bb50
  403e56:	les    ebp,FWORD PTR [esi-0x479854c4]
  403e5c:	xchg   esp,eax
  403e5d:	or     bl,BYTE PTR [edi-0x7ba0913d]
  403e63:	ins    DWORD PTR es:[edi],dx
  403e64:	mov    ds:0x6967005f,eax
  403e69:	outs   dx,DWORD PTR ds:[esi]
  403e6a:	fwait
  403e6b:	jecxz  0x403e8e
  403e6d:	pop    ebp
  403e6e:	xchg   esi,eax
  403e6f:	xor    ebp,esi
  403e71:	xchg   esp,eax
  403e72:	loopne 0x403ea0
  403e74:	inc    ebx
  403e75:	pop    ss
  403e76:	pop    ss
  403e77:	mov    eax,ebx
  403e79:	cmp    bl,BYTE PTR [ebx-0x21eaa0b7]
  403e7f:	mov    cl,0xbe
  403e81:	imul   ebx,DWORD PTR [ebx-0x6be0d31],0x3e
  403e88:	mov    bl,0x12
  403e8a:	mov    ecx,0x7e61a48
  403e8f:	out    0xe3,al
  403e91:	rcr    BYTE PTR [edi-0x4d2fb4c0],cl
  403e97:	pop    ecx
  403e98:	bound  edx,QWORD PTR [esi]
  403e9a:	in     eax,dx
  403e9b:	push   0xffffffd1
  403e9d:	das    
  403e9e:	or     edx,DWORD PTR [ebx]
  403ea0:	iret   
  403ea1:	sbb    al,BYTE PTR cs:[ebp+0x509c0c8c]
  403ea8:	test   dl,0x90
  403eab:	xchg   edi,eax
  403eac:	xchg   esi,eax
  403ead:	and    DWORD PTR [esp+edi*4-0x6d],esi
  403eb1:	jmp    0x403ebd
  403eb3:	in     al,dx
  403eb4:	ret    0xb378
  403eb7:	xchg   ebp,eax
  403eb8:	out    0x95,al
  403eba:	lock out 0xa4,eax
  403ebd:	out    0xac,al
  403ebf:	mov    dl,0xab
  403ec1:	xchg   esp,eax
  403ec2:	into   
  403ec3:	sahf   
  403ec4:	inc    edi
  403ec5:	lods   eax,DWORD PTR ds:[esi]
  403ec6:	pop    ds
  403ec7:	push   ds
  403ec8:	call   FWORD PTR [esp+edx*4-0x414071c5]
  403ecf:	sub    edx,edi
  403ed1:	retf   
  403ed2:	inc    edx
  403ed3:	or     al,BYTE PTR [ecx-0x2983b36f]
  403ed9:	pop    edx
  403eda:	push   esi
  403edb:	(bad)  
  403edc:	jo     0x403eac
  403ede:	popa   
  403edf:	not    ebx
  403ee1:	cmc    
  403ee2:	(bad)  
  403ee3:	mov    es,WORD PTR [edi-0xb]
  403ee6:	repz pop esp
  403ee8:	mov    esp,0xcee2d00c
  403eed:	push   ebp
  403eee:	jbe    0x403eb6
  403ef0:	icebp  
  403ef1:	int    0x17
  403ef3:	popf   
  403ef4:	call   0xd8b0:0x4ee78ef8
  403efb:	popf   
  403efc:	loope  0x403f58
  403efe:	jae    0x403e85
  403f00:	lock loope 0x403ea0
  403f03:	sti    
  403f04:	fbstp  TBYTE PTR [eax+0x75]
  403f07:	scas   eax,DWORD PTR es:[edi]
  403f08:	xchg   esp,eax
  403f09:	inc    ecx
  403f0a:	pop    eax
  403f0b:	dec    ebx
  403f0c:	jle    0x403ee3
  403f0e:	retf   
  403f0f:	xchg   esp,eax
  403f10:	adc    DWORD PTR [edx+0x4e401029],edx
  403f16:	push   ss
  403f17:	mov    esp,0x210561f4
  403f1c:	xchg   edx,eax
  403f1d:	shr    DWORD PTR [edi+0x44],cl
  403f20:	cmp    al,BYTE PTR [ebp-0x40ab4c35]
  403f26:	cs mov ecx,0x8cac1abc
  403f2c:	dec    eax
  403f2d:	mov    dh,0xce
  403f2f:	stc    
  403f30:	(bad)  
  403f31:	lods   eax,DWORD PTR ds:[esi]
  403f32:	adc    edi,esi
  403f34:	push   ss
  403f35:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f37:	dec    ebx
  403f38:	adc    BYTE PTR fs:[edx+esi*2-0x4e3d2a6f],cl
  403f40:	cmp    eax,0xacb62123
  403f45:	es (bad) 
  403f47:	int    0xc0
  403f49:	cmp    al,0xd3
  403f4b:	retf   0xeded
  403f4e:	and    dh,bh
  403f50:	ja     0x403f8c
  403f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f54:	(bad)  
  403f55:	adc    BYTE PTR [edx],bh
  403f57:	pop    eax
  403f58:	xchg   ebp,eax
  403f59:	push   esp
  403f5a:	mov    fs,WORD PTR [esi-0x56]
  403f5d:	int    0x3b
  403f5f:	fdivr  QWORD PTR [edx+0x7a498ce7]
  403f65:	push   ebx
  403f66:	mov    WORD PTR [eax],es
  403f68:	jb     0x403f3f
  403f6a:	xor    DWORD PTR [eax+0x7ea1e971],edx
  403f70:	mov    bh,0xe3
  403f72:	fidivr DWORD PTR ds:0xc71aae03
  403f78:	adc    ch,BYTE PTR [ebp+0x14aad388]
  403f7e:	stc    
  403f7f:	mov    bl,0xbc
  403f81:	jl     0x403f20
  403f83:	fistp  QWORD PTR [ebx]
  403f85:	mov    esi,0xc7e84d9b
  403f8a:	loop   0x403ff2
  403f8c:	xor    DWORD PTR [ecx-0x7838363f],esi
  403f92:	outs   dx,BYTE PTR ds:[esi]
  403f93:	push   ds
  403f94:	mov    edx,esp
  403f96:	push   es
  403f97:	shl    ch,1
  403f99:	jbe    0x403fd5
  403f9b:	jecxz  0x403f67
  403f9d:	adc    eax,0x669a2c90
  403fa2:	pop    edx
  403fa3:	repnz inc edx
  403fa5:	dec    ebp
  403fa6:	mov    cl,0x22
  403fa8:	mov    al,ds:0x1830b816
  403fad:	xchg   edx,eax
  403fae:	int3   
  403faf:	mov    eax,0x3c08101b
  403fb4:	xchg   cl,bl
  403fb6:	add    eax,0xa9fb0c26
  403fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fbc:	cli    
  403fbd:	dec    ecx
  403fbe:	out    0x66,al
  403fc0:	jle    0x403f9a
  403fc2:	mov    ecx,0x3661c28a
  403fc7:	ja     0x403fa7
  403fc9:	in     al,0x35
  403fcb:	ja     0x403ff3
  403fcd:	jne    0x403f98
  403fcf:	jne    0x403f63
  403fd1:	or     BYTE PTR [edx+0x3bef6383],dh
  403fd7:	(bad)  
  403fd8:	mov    ch,0xb
  403fda:	fwait
  403fdb:	xchg   esi,eax
  403fdc:	mov    eax,0xc08c0c3b
  403fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe2:	mov    esp,0x9d50df58
  403fe7:	div    dh
  403fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fea:	fimul  WORD PTR [esi-0x3]
  403fed:	adc    cl,BYTE PTR [ebx-0xa3a47a9]
  403ff3:	and    BYTE PTR [edx],0xbe
  403ff6:	sub    eax,0xe94c945f
  403ffb:	ror    esp,1
  403ffd:	mov    eax,ds:0xaa96707a
  404002:	inc    ebp
  404003:	and    ebx,ecx
  404005:	adc    BYTE PTR [esi],dl
  404007:	loope  0x403f8a
  404009:	(bad)  
  40400a:	lods   al,BYTE PTR ds:[esi]
  40400b:	int    0xfc
  40400d:	inc    edi
  40400e:	mov    ecx,0x54f4b998
  404013:	push   ebp
  404014:	and    DWORD PTR [ecx-0xe],esi
  404017:	(bad)  
  404019:	imul   esi,DWORD PTR [esi-0x43356371],0xffffff98
  404020:	shl    cl,1
  404022:	cdq    
  404023:	jo     0x403fde
  404025:	aaa    
  404026:	xor    dh,BYTE PTR [edi-0x8]
  404029:	rcl    DWORD PTR [eax-0x60],0xe6
  40402d:	addr16 and al,0x43
  404030:	repz lea esp,[ecx]
  404033:	loop   0x40409e
  404035:	jns    0x404021
  404037:	daa    
  404038:	mov    eax,0x72f59eeb
  40403d:	jbe    0x404086
  40403f:	mov    bh,0x91
  404041:	stos   BYTE PTR es:[edi],al
  404042:	and    al,BYTE PTR [ecx+0x670a57d8]
  404048:	jmp    0x73e25b1c
  40404d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404e:	fadd   QWORD PTR [edi-0x1236a633]
  404054:	mov    esp,0x969d9e5d
  404059:	call   0x41428cbf
  40405e:	pop    eax
  40405f:	inc    esi
  404060:	aam    0xbe
  404062:	je     0x404066
  404064:	ins    DWORD PTR es:[edi],dx
  404065:	sub    esp,DWORD PTR [esi+0x252e80ca]
  40406b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40406c:	xchg   edi,eax
  40406d:	fsub   st,st(3)
  40406f:	lea    esp,[edi]
  404071:	mov    BYTE PTR [ebx-0x5d6a3778],bl
  404077:	sbb    ecx,DWORD PTR [edx]
  404079:	fnstcw WORD PTR [esi-0x1]
  40407c:	js     0x404071
  40407e:	aaa    
  40407f:	mov    ch,0xb3
  404081:	add    ah,BYTE PTR [esi+0x6d]
  404084:	ficomp WORD PTR [ebx]
  404086:	sbb    al,0x40
  404088:	push   ebx
  404089:	adc    al,0x93
  40408b:	dec    ecx
  40408c:	xor    DWORD PTR [ebx],edx
  40408e:	pop    ebx
  40408f:	dec    edi
  404090:	jl     0x4040e4
  404092:	test   edi,edx
  404094:	add    eax,0x35378d7e
  404099:	arpl   cx,di
  40409b:	into   
  40409c:	push   0xffffffac
  40409e:	dec    ebp
  40409f:	pop    es
  4040a0:	sub    eax,0x5491e6e8
  4040a5:	repz mov ds:0x4f2d3c5,al
  4040ab:	arpl   ax,bp
  4040ad:	xor    al,BYTE PTR [ebx+0x3896a245]
  4040b3:	sbb    DWORD PTR [eax+0x504ec516],0x5a
  4040ba:	lock jns 0x4040d1
  4040bd:	aas    
  4040be:	fdiv   st(4),st
  4040c0:	xor    dh,BYTE PTR [edx+0x5dd3cd98]
  4040c6:	mov    ebp,0xf1ab3b41
  4040cb:	pop    edx
  4040cc:	and    esi,DWORD PTR [ecx+0x33f8458b]
  4040d2:	rol    DWORD PTR [ebx],0xc6
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x44d275cd],ah
  4040ef:	lods   al,BYTE PTR ds:[esi]
  4040f0:	xchg   ebx,eax
  4040f1:	sbb    edi,DWORD PTR [esi+0x7e]
  4040f4:	push   esi
  4040f5:	jns    0x404175
  4040f7:	jle    0x4040ff
  4040f9:	nop
  4040fa:	adc    al,BYTE PTR [esi+0x42eacfd7]
  404100:	inc    eax
  404101:	aam    0xf8
  404103:	sub    BYTE PTR [ebx],ch
  404105:	std    
  404106:	pop    esi
  404107:	shl    BYTE PTR [ebx],0x72
  40410a:	mov    al,0xfb
  40410c:	ins    BYTE PTR es:[edi],dx
  40410d:	sub    al,BYTE PTR [esp+edx*2+0x69d8badc]
  404114:	in     eax,dx
  404115:	iret   
  404116:	imul   edx,DWORD PTR ds:0x684855a4,0xffffffe5
  40411d:	scas   eax,DWORD PTR es:[edi]
  40411e:	jbe    0x404138
  404120:	jno    0x4040ab
  404122:	inc    esp
  404123:	inc    eax
  404124:	mov    bh,0xe0
  404126:	add    DWORD PTR [edx+0x1c],0xb05a1c01
  40412d:	xor    BYTE PTR [esp+eax*8],cl
  404130:	xchg   esi,eax
  404131:	mov    al,0x26
  404133:	inc    esi
  404134:	aad    0xbd
  404136:	dec    esi
  404137:	pop    es
  404138:	jo     0x40417d
  40413a:	iret   
  40413b:	xchg   esi,eax
  40413c:	or     dh,bh
  40413e:	mov    BYTE PTR [ebx+0x37a8c7d9],cl
  404144:	and    BYTE PTR [eax],0x11
  404147:	cdq    
  404148:	fst    DWORD PTR [esi]
  40414a:	mov    eax,ds:0x3b912873
  40414f:	nop
  404150:	mov    ah,0xdb
  404152:	mov    ch,BYTE PTR [eax-0x7e]
  404155:	pop    esp
  404156:	or     BYTE PTR [esi],cl
  404158:	(bad)  
  404159:	test   eax,0xe84820ce
  40415e:	and    cl,BYTE PTR [edi+0x8]
  404161:	cwde   
  404162:	inc    ebp
  404163:	or     edi,DWORD PTR [edi]
  404165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404166:	ins    BYTE PTR es:[edi],dx
  404167:	mov    es,WORD PTR [ebx+edi*1]
  40416a:	sub    ebx,ecx
  40416c:	shr    DWORD PTR [eax-0x7e7021aa],cl
  404172:	aam    0x29
  404174:	ror    BYTE PTR [edx+0x1c],0xa2
  404178:	jns    0x4041cb
  40417a:	jbe    0x40419a
  40417c:	adc    cl,ch
  40417e:	jge    0x40412b
  404180:	xchg   DWORD PTR [edx-0x24],edx
  404183:	popf   
  404184:	aam    0x32
  404186:	or     al,0x47
  404188:	adc    DWORD PTR [ecx+0x7717c9e9],ebp
  40418e:	loope  0x404198
  404190:	cmp    esp,edx
  404192:	sbb    BYTE PTR [edx],bh
  404194:	iret   
  404195:	popf   
  404196:	mov    ds:0x3866c8b9,al
  40419b:	fistp  QWORD PTR [edx+0x47a020f3]
  4041a1:	hlt    
  4041a2:	jl     0x404210
  4041a4:	jp     0x4041f9
  4041a6:	jmp    0x4041fe
  4041a8:	or     esi,0x69f16bf0
  4041ae:	inc    edx
  4041af:	std    
  4041b0:	addr16 push edi
  4041b2:	mov    dl,0x8
  4041b4:	mov    edi,DWORD PTR [ecx+0x38ddbf72]
  4041ba:	cli    
  4041bb:	jne    0x4041da
  4041bd:	gs fwait
  4041bf:	sbb    ah,BYTE PTR [edi+ebx*4]
  4041c2:	push   0x5a
  4041c4:	dec    esp
  4041c5:	sbb    al,0xcc
  4041c7:	pop    ss
  4041c8:	push   ds
  4041c9:	jns    0x40419e
  4041cb:	xor    DWORD PTR [eax+0x170c2be8],eax
  4041d1:	mov    edi,fs
  4041d3:	lock or DWORD PTR [esi+0x7c5d0593],0x1657f791
  4041de:	xchg   esi,eax
  4041df:	lds    ebp,FWORD PTR [ebx]
  4041e1:	jmp    0x4041cd
  4041e3:	or     BYTE PTR [ebx+0x9],bh
  4041e6:	sub    ebx,DWORD PTR [ecx-0x7d]
  4041e9:	add    BYTE PTR [edi],ah
  4041eb:	dec    eax
  4041ec:	or     eax,0x425cd690
  4041f1:	je     0x404252
  4041f3:	or     ah,ah
  4041f5:	aam    0xd9
  4041f7:	lock push ebx
  4041f9:	jg     0x4041bc
  4041fb:	leave  
  4041fc:	out    dx,eax
  4041fd:	ret    
  4041fe:	cmp    edx,esi
  404200:	xchg   ebp,eax
  404201:	in     al,dx
  404202:	mov    esp,0xd014f987
  404207:	jmp    0xcf8d:0x7511710
  40420e:	pop    esp
  40420f:	fcmovnb st,st(2)
  404211:	push   cs
  404212:	mov    al,ds:0xe3132fc2
  404217:	jo     0x404239
  404219:	push   esi
  40421a:	mov    esi,0x542a26ea
  40421f:	push   esi
  404220:	das    
  404221:	pusha  
  404222:	dec    ecx
  404223:	push   0x60
  404225:	sar    BYTE PTR ss:[ebx+0x38],cl
  404229:	mov    esi,0x93c5bb8a
  40422e:	addr16 cwde 
  404230:	dec    eax
  404231:	sbb    eax,DWORD PTR [ebx+eax*8-0x270162ba]
  404238:	leave  
  404239:	out    0x13,al
  40423b:	lods   al,BYTE PTR ds:[esi]
  40423c:	xchg   edi,eax
  40423d:	mov    edi,0x8b9aedcb
  404242:	repnz jecxz 0x4041c5
  404245:	lea    ebp,[edi]
  404247:	cli    
  404248:	icebp  
  404249:	inc    ecx
  40424a:	mov    cl,0x9f
  40424c:	popa   
  40424d:	dec    eax
  40424e:	jg     0x4042b5
  404250:	jns    0x4042ba
  404252:	pushf  
  404253:	pop    ecx
  404254:	or     ah,BYTE PTR [edi-0x383fbfc6]
  40425a:	mov    al,ds:0x1291d0ef
  40425f:	sub    edi,DWORD PTR [bx+0x71]
  404263:	push   ss
  404264:	xor    al,0xce
  404266:	sar    BYTE PTR [ebx],1
  404268:	xchg   ebx,eax
  404269:	sbb    DWORD PTR [edi+esi*4+0x1e4d801],ecx
  404270:	mov    al,ds:0x6311c8d2
  404275:	inc    edi
  404276:	push   cs
  404277:	stc    
  404278:	stc    
  404279:	mov    eax,ds:0xa05d1807
  40427e:	dec    edx
  40427f:	inc    esp
  404280:	out    dx,al
  404281:	les    esi,FWORD PTR [edi+0x679e5d42]
  404287:	inc    esp
  404288:	inc    ebx
  404289:	pop    eax
  40428a:	mov    ebx,0x70f72225
  40428f:	stc    
  404290:	mov    ss,eax
  404292:	or     ah,BYTE PTR [edi+0x34fc7d85]
  404298:	js     0x40423b
  40429a:	aas    
  40429b:	push   eax
  40429c:	push   esi
  40429d:	fsub   QWORD PTR [eax-0x6d8113a6]
  4042a3:	sub    DWORD PTR [esi-0x4c],edi
  4042a6:	outs   dx,BYTE PTR ds:[esi]
  4042a7:	ins    DWORD PTR es:[edi],dx
  4042a8:	mov    edi,0xe68d8119
  4042ad:	inc    edx
  4042ae:	aad    0x61
  4042b0:	rcr    DWORD PTR [ecx+0x76],cl
  4042b3:	sbb    BYTE PTR [ebx-0x22],bh
  4042b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b7:	or     esi,DWORD PTR [esi]
  4042b9:	inc    ebp
  4042ba:	or     DWORD PTR [ebp-0x53341dd3],esp
  4042c0:	stc    
  4042c1:	pop    ecx
  4042c2:	jmp    0xf03601a4
  4042c7:	inc    esp
  4042c8:	shr    DWORD PTR [edx-0x639f0617],0x78
  4042cf:	xchg   ebp,eax
  4042d0:	jl     0x404294
  4042d2:	mov    dl,0xf0
  4042d4:	retf   
  4042d5:	jmp    0xa7a2:0xeee85509
  4042dc:	in     al,0x67
  4042de:	ins    DWORD PTR es:[edi],dx
  4042df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042e0:	pop    ecx
  4042e1:	mov    ecx,0xf20322e9
  4042e6:	call   0xb5c05f8a
  4042eb:	hlt    
  4042ec:	jmp    0xf88f:0x58fbc4f3
  4042f3:	pop    edi
  4042f4:	jns    0x404304
  4042f6:	push   0x5
  4042f8:	inc    ebp
  4042f9:	scas   al,BYTE PTR es:[edi]
  4042fa:	(bad)  
  4042fb:	jb     0x4042de
  4042fd:	call   0x46f944b3
  404302:	ret    
  404303:	std    
  404304:	mov    ecx,0x97463e92
  404309:	iret   
  40430a:	jmp    0x4042d9
  40430c:	push   0xe181f1b7
  404311:	mov    ah,0xc8
  404313:	add    BYTE PTR [edi+0x39],cl
  404316:	out    dx,eax
  404317:	fmul   st(5),st
  404319:	and    ebx,DWORD PTR [esi+0x635c0d3d]
  40431f:	or     esi,esi
  404321:	in     al,dx
  404322:	jae    0x4042c0
  404324:	sbb    ecx,esp
  404326:	(bad)  
  404328:	dec    esp
  404329:	push   es
  40432a:	pop    edx
  40432b:	and    bl,BYTE PTR [ebx+esi*4]
  40432e:	in     al,0x62
  404330:	jg     0x404382
  404332:	pop    eax
  404333:	sub    BYTE PTR [ecx+eiz*4+0x53],0x4b
  404338:	adc    al,0x6
  40433a:	call   0x51b3c15a
  40433f:	inc    esi
  404340:	pop    esp
  404341:	pop    eax
  404342:	loop   0x4042d2
  404344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404345:	loopne 0x404329
  404347:	out    0x7a,al
  404349:	mov    ecx,0x53e0800e
  40434e:	add    eax,0x3923571b
  404353:	sbb    ebx,DWORD PTR [edx+0x2]
  404356:	test   BYTE PTR [eax],dl
  404358:	sbb    BYTE PTR [edx+0x30],ch
  40435b:	fiadd  DWORD PTR [ecx-0x60]
  40435e:	sti    
  40435f:	jbe    0x40433f
  404361:	sub    BYTE PTR [eax],cl
  404363:	repnz and DWORD PTR [edi-0x66c3283c],esp
  40436a:	sub    eax,0x597f1b85
  40436f:	mov    al,ds:0x7c6aa116
  404374:	outs   dx,DWORD PTR ds:[esi]
  404375:	mov    ds:0xb2ed60f,al
  40437a:	dec    edi
  40437b:	cmp    ebp,DWORD PTR [esi+0x5c9c2f74]
  404381:	popf   
  404382:	or     dl,BYTE PTR [esi-0x42]
  404385:	dec    esi
  404386:	sub    eax,0xfc26cbf4
  40438b:	mov    DWORD PTR [ebp+0x40459aad],0xaaee29a2
  404395:	lea    ebp,[edi]
  404397:	lock adc dh,bl
  40439a:	stos   BYTE PTR es:[edi],al
  40439b:	sbb    bh,BYTE PTR [ebx+0x420f5767]
  4043a1:	and    eax,0x4443a22
  4043a6:	popa   
  4043a7:	call   DWORD PTR [eax+0x3f]
  4043aa:	pop    ecx
  4043ab:	sbb    al,0xe
  4043ad:	aad    0xc7
  4043af:	pop    ds
  4043b0:	jae    0x40440e
  4043b2:	cmp    edi,ebx
  4043b4:	fist   DWORD PTR [ebp+0x4c5a2547]
  4043ba:	retf   0xa1d2
  4043bd:	addr16 test eax,0xdb9939bc
  4043c3:	lea    edx,[ecx]
  4043c5:	and    ebx,esp
  4043c7:	out    0x14,eax
  4043c9:	jp     0x4043c7
  4043cb:	xlat   BYTE PTR ds:[ebx]
  4043cc:	add    bh,ah
  4043ce:	adc    ebp,edi
  4043d0:	dec    esi
  4043d1:	inc    ecx
  4043d2:	xchg   ecx,eax
  4043d3:	dec    edx
  4043d4:	stc    
  4043d5:	int3   
  4043d6:	test   BYTE PTR [edx],0x99
  4043d9:	add    ebx,DWORD PTR [ecx+edx*8+0x3a]
  4043dd:	pop    ds
  4043de:	mov    al,0xd8
  4043e0:	jns    0x40441a
  4043e2:	scas   al,BYTE PTR es:[edi]
  4043e3:	sub    al,0x77
  4043e5:	(bad)  
  4043e6:	into   
  4043e7:	mov    esi,0x4d1e2f75
  4043ec:	ret    0x835a
  4043ef:	xor    eax,0x529a55ff
  4043f4:	loopne 0x4043d7
  4043f6:	aad    0xf2
  4043f8:	push   es
  4043f9:	dec    ecx
  4043fa:	jns    0x4043d7
  4043fc:	mov    dh,0xe3
  4043fe:	cmc    
  4043ff:	sahf   
  404400:	out    dx,al
  404401:	dec    eax
  404402:	and    ch,BYTE PTR [eax-0x43]
  404405:	repz sti 
  404407:	add    ch,BYTE PTR [edx+0x2529f555]
  40440d:	jo     0x40442b
  40440f:	push   cs
  404410:	pop    esp
  404411:	or     DWORD PTR [eax+ebp*1+0x6187d621],esi
  404418:	leave  
  404419:	cmp    edi,ebx
  40441b:	loopne 0x4043ff
  40441d:	and    dl,BYTE PTR [ecx-0x61b604a6]
  404423:	mov    ds:0x5d54d906,eax
  404428:	jp     0x4043e5
  40442a:	sbb    ah,BYTE PTR [ebp-0xe7fa63]
  404430:	shl    DWORD PTR ds:0x85430fea,1
  404436:	cmc    
  404437:	in     al,dx
  404438:	daa    
  404439:	add    al,0x3b
  40443b:	push   ebx
  40443c:	retf   
  40443d:	fidivr WORD PTR [ebx+0x223aedf0]
  404443:	sar    BYTE PTR [esi+0x2d617f25],1
  404449:	lea    esi,[esi-0x46972781]
  40444f:	aaa    
  404450:	push   cs
  404451:	mov    dl,0x96
  404453:	dec    ebp
  404454:	xchg   ebp,eax
  404455:	bound  ebx,QWORD PTR [edi]
  404457:	ds mov ebp,0xfbcb1365
  40445d:	cli    
  40445e:	jle    0x40441a
  404460:	je     0x404469
  404462:	add    dh,al
  404464:	retf   
  404465:	mov    esp,edx
  404467:	lahf   
  404468:	xor    ecx,DWORD PTR [ebx]
  40446a:	loopne 0x4044ac
  40446c:	(bad)  
  40446e:	jns    0x404462
  404470:	scas   eax,DWORD PTR es:[edi]
  404471:	sub    dl,BYTE PTR [edx+0x6e48da81]
  404477:	stc    
  404478:	xlat   BYTE PTR ds:[ebx]
  404479:	sub    BYTE PTR [eax-0x22],al
  40447c:	push   esi
  40447d:	add    BYTE PTR [ebp+0xf],bh
  404480:	ins    DWORD PTR es:[edi],dx
  404481:	int3   
  404482:	fistp  QWORD PTR [edi+0x789c7381]
  404488:	adc    DWORD PTR [esi-0x27c31396],ebx
  40448e:	xor    al,0x17
  404490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404491:	fsubp  st(2),st
  404493:	and    DWORD PTR ss:[ecx],ebp
  404496:	or     edx,eax
  404498:	fs xchg esi,eax
  40449a:	ficom  WORD PTR [ebx+esi*4]
  40449d:	and    al,0x7c
  40449f:	mov    cl,0x67
  4044a1:	cdq    
  4044a2:	test   DWORD PTR [esi+0x3416119a],eax
  4044a8:	je     0x40445d
  4044aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ab:	imul   edi,DWORD PTR [eax+eax*1+0x601ff47f],0x588009bf
  4044b6:	into   
  4044b7:	mov    eax,ds:0xa3d11e75
  4044bc:	mov    ds:0x26dd6398,al
  4044c1:	inc    esp
  4044c2:	xor    DWORD PTR [edx-0xe],esp
  4044c5:	or     BYTE PTR [edi],ch
  4044c7:	mov    ch,0x79
  4044c9:	cli    
  4044ca:	hlt    
  4044cb:	xor    eax,0x72b94993
  4044d0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044d4:	mov    dl,BYTE PTR [ebp-0x1]
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	not    DWORD PTR [ebp+0x27eb4b2b]
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404519
  404518:	repnz or al,0x5c
  40451b:	test   al,0x66
  40451d:	stc    
  40451e:	out    dx,al
  40451f:	out    0x4c,eax
  404521:	sub    esi,DWORD PTR [ebx-0x1f]
  404524:	stc    
  404525:	dec    edi
  404526:	sar    DWORD PTR [edx+0x36],0xa9
  40452a:	call   0x5db7:0x14f5231e
  404531:	mov    esp,0x2cc4787d
  404536:	xchg   BYTE PTR [ecx-0x4f],ah
  404539:	int    0xfe
  40453b:	call   0x9414f844
  404540:	stc    
  404541:	in     al,0x5
  404543:	xor    BYTE PTR [eax-0x46efef49],dh
  404549:	inc    ebx
  40454a:	out    0x4d,al
  40454c:	popa   
  40454d:	inc    edx
  40454e:	mov    eax,ds:0x29d2e47a
  404553:	ds js  0x4045a9
  404556:	mov    al,0xe5
  404558:	fs jo  0x404545
  40455b:	inc    edx
  40455c:	mov    WORD PTR [esp],?
  40455f:	dec    edi
  404560:	fwait
  404561:	jmp    0x404533
  404563:	mov    ds:0x5d98e528,eax
  404568:	or     al,0xf7
  40456a:	sbb    BYTE PTR [eax+0x54],dl
  40456d:	xchg   edi,eax
  40456e:	cmp    DWORD PTR [ebx+eiz*4+0x26],eax
  404572:	outs   dx,DWORD PTR ds:[esi]
  404573:	xchg   edx,ebx
  404575:	das    
  404576:	popf   
  404577:	add    al,0xaf
  404579:	cli    
  40457a:	or     BYTE PTR [eax+edx*8],dl
  40457d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40457e:	adc    bl,cl
  404580:	inc    eax
  404581:	jmp    0x68b806d
  404586:	out    0xfb,eax
  404588:	popa   
  404589:	and    ch,BYTE PTR [edx+edx*4]
  40458c:	add    bl,BYTE PTR [ecx+0x17423335]
  404592:	add    bl,0xa4
  404595:	jmp    0x8b5c575f
  40459a:	clc    
  40459b:	sahf   
  40459c:	(bad)  
  40459d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40459e:	shl    DWORD PTR [eax+eax*8-0x7a],1
  4045a2:	lds    eax,FWORD PTR [ebp+ecx*1+0xf440c6d]
  4045a9:	add    eax,0xa270cc80
  4045ae:	pop    ebp
  4045af:	(bad)  
  4045b0:	dec    DWORD PTR [esi+0x46]
  4045b3:	(bad)  
  4045b4:	pop    ebx
  4045b5:	mov    esi,0x75d37ffe
  4045ba:	pop    ss
  4045bb:	dec    BYTE PTR [ebp+0x406edbc9]
  4045c1:	xchg   edi,eax
  4045c2:	(bad)  
  4045c3:	mov    ebp,0x5a30cf31
  4045c8:	imul   edi,DWORD PTR [ecx-0x28],0xfffffff2
  4045cc:	stos   BYTE PTR es:[edi],al
  4045cd:	dec    esi
  4045ce:	push   ds
  4045cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d0:	mov    BYTE PTR [esi],al
  4045d2:	xor    bh,BYTE PTR [edi+0x48e4323d]
  4045d8:	pop    edx
  4045d9:	(bad)  
  4045da:	mov    ds:0x12594843,al
  4045df:	dec    ebp
  4045e0:	mov    ecx,0x61d8ad7
  4045e5:	les    ebp,FWORD PTR [esi-0x125e8def]
  4045eb:	mov    edx,0xf2fa11ce
  4045f0:	inc    edi
  4045f1:	add    al,0xab
  4045f3:	sub    eax,0x7da52947
  4045f8:	js     0x40464f
  4045fa:	adc    ebx,ecx
  4045fc:	sahf   
  4045fd:	push   ebx
  4045fe:	push   es
  4045ff:	fisub  DWORD PTR [esi-0xe]
  404602:	ins    BYTE PTR es:[edi],dx
  404603:	das    
  404604:	fcom   st(0)
  404606:	or     edx,DWORD PTR [esi+0x1c]
  404609:	into   
  40460a:	call   0x2088be2c
  40460f:	loopne 0x404594
  404611:	(bad)  
  404612:	sbb    edi,DWORD PTR cs:[eax+0x3af3dff6]
  404619:	mov    cl,0x67
  40461b:	mov    esp,0x6d857826
  404620:	xchg   DWORD PTR [ecx+ebx*1],edi
  404623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404624:	int    0x5d
  404626:	adc    ebp,DWORD PTR [ebp-0x1c3628d3]
  40462c:	lea    ebp,[esi+0x5aeb2a8c]
  404632:	ins    DWORD PTR es:[edi],dx
  404633:	sbb    eax,0x66506d92
  404638:	hlt    
  404639:	dec    ecx
  40463a:	int    0xe4
  40463c:	call   0xb0d86447
  404641:	xchg   edx,eax
  404642:	dec    eax
  404643:	mov    ecx,0x4dad9397
  404648:	push   0x25
  40464a:	(bad)  [edi-0x51]
  40464d:	lahf   
  40464e:	or     ebp,ebx
  404650:	int    0xd
  404652:	sub    al,0xc
  404654:	jl     0x40469d
  404656:	jmp    0xfe7:0xf40b4254
  40465d:	fidivr DWORD PTR ds:0xc13bb3bd
  404663:	idiv   DWORD PTR [ebp-0x35673d22]
  404669:	push   edx
  40466a:	jge    0x404663
  40466c:	push   0xe216bb11
  404671:	(bad)  
  404672:	repnz dec esi
  404674:	pop    ebp
  404675:	out    dx,eax
  404676:	push   esp
  404677:	push   ebp
  404678:	scas   al,BYTE PTR es:[edi]
  404679:	fld    DWORD PTR [ebx+0x2d]
  40467c:	push   ss
  40467d:	or     eax,0x92009eb5
  404682:	(bad)  
  404683:	mov    DWORD PTR ss:[ebp-0x23fd87d7],edi
  40468a:	gs repz jmp 0x40465e
  40468e:	pop    ss
  40468f:	adc    ebp,ebx
  404691:	and    DWORD PTR [edi-0x61816a84],ebp
  404697:	adc    BYTE PTR [ebp+0x374a2c7],cl
  40469d:	or     al,0xee
  40469f:	mul    BYTE PTR [esi-0x7a]
  4046a2:	jp     0x404721
  4046a4:	add    DWORD PTR [eax],esi
  4046a6:	push   es
  4046a7:	lds    ebx,FWORD PTR [eax+0x1f]
  4046aa:	xor    DWORD PTR [ecx-0x64],ebx
  4046ad:	sub    ch,BYTE PTR [edx+0x2e56fa67]
  4046b3:	scas   al,BYTE PTR es:[edi]
  4046b4:	out    dx,eax
  4046b5:	push   edx
  4046b6:	and    DWORD PTR cs:[edi+0x373229fc],ebx
  4046bd:	xchg   ebp,eax
  4046be:	icebp  
  4046bf:	jno    0x4046e6
  4046c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046c2:	gs repz sub eax,0x6c585c79
  4046c9:	mov    ds:0xbaf9d511,al
  4046ce:	movlps xmm4,QWORD PTR [ecx-0x14]
  4046d2:	adc    al,bl
  4046d4:	ss out dx,eax
  4046d6:	push   esi
  4046d7:	adc    DWORD PTR [edx-0x6fb6c327],0x51
  4046de:	push   0xffffffae
  4046e0:	call   0x88ad:0x88f4aff5
  4046e7:	push   eax
  4046e8:	aad    0x19
  4046ea:	jp     0x404704
  4046ec:	hlt    
  4046ed:	sub    ch,BYTE PTR [ebp+0x60]
  4046f0:	dec    ecx
  4046f1:	sub    eax,ebx
  4046f3:	aad    0x0
  4046f5:	push   esi
  4046f6:	adc    BYTE PTR [ebp+0x1c],0x38
  4046fa:	push   eax
  4046fb:	sbb    DWORD PTR [ebx+0x60],edi
  4046fe:	es loope 0x404718
  404701:	mov    ebx,0x69079a30
  404706:	pop    ds
  404707:	loop   0x404762
  404709:	pushf  
  40470a:	ins    BYTE PTR es:[edi],dx
  40470b:	pop    esp
  40470c:	test   al,0x7f
  40470e:	sti    
  40470f:	aaa    
  404710:	fist   WORD PTR [edx-0x32]
  404713:	mov    ds,WORD PTR [edi-0x2efdcc70]
  404719:	cmp    DWORD PTR ds:0xa94c1e47,ebx
  40471f:	xchg   esp,eax
  404720:	sub    ebx,DWORD PTR [esi-0x1]
  404723:	mov    eax,0x8f12acea
  404728:	stos   DWORD PTR es:[edi],eax
  404729:	out    dx,eax
  40472a:	mov    ds:0x2048c4f3,al
  40472f:	xchg   ebx,eax
  404730:	les    edi,FWORD PTR [esi+0x2e]
  404733:	fptan  
  404735:	shl    DWORD PTR [edx+eax*8+0x9],0xea
  40473a:	aaa    
  40473b:	sub    BYTE PTR [edi+0x2fc5f85a],0xc8
  404742:	imul   esp,DWORD PTR [ebx-0x47],0x58
  404746:	sub    DWORD PTR [esi-0x3de82df8],0xffffff98
  40474d:	leave  
  40474e:	fmul   st(4),st
  404750:	adc    eax,0x7476415
  404755:	fisubr DWORD PTR ds:0x43580419
  40475b:	xchg   ebp,eax
  40475c:	xchg   edi,eax
  40475d:	test   DWORD PTR [edi+ecx*2+0x2e],0x98e71e3f
  404765:	stc    
  404766:	leave  
  404767:	jp     0x404771
  404769:	jl     0x404747
  40476b:	and    ebp,DWORD PTR [ebp-0x1f]
  40476e:	sub    bh,BYTE PTR gs:0xa61301f7
  404775:	rcl    DWORD PTR [edx+0x5e4a453f],cl
  40477b:	mov    ah,0x32
  40477d:	jg     0x4047b9
  40477f:	mov    bh,BYTE PTR [ecx-0x54]
  404782:	push   ss
  404783:	mov    dh,0x1c
  404785:	repz mov dl,0x4c
  404788:	dec    ebx
  404789:	aaa    
  40478a:	pop    edx
  40478b:	stc    
  40478c:	ret    
  40478d:	lods   eax,DWORD PTR ds:[esi]
  40478e:	xchg   BYTE PTR [ecx-0x6969bab8],bl
  404794:	push   esi
  404795:	aam    0xb
  404797:	retf   
  404798:	data16 mov cs,WORD PTR [edi-0x473b77ab]
  40479f:	sbb    ebx,DWORD PTR [esi-0x1e]
  4047a2:	int3   
  4047a3:	adc    BYTE PTR ds:0x590a9332,bl
  4047a9:	fs ins DWORD PTR es:[edi],dx
  4047ab:	cmp    dh,bh
  4047ad:	jl     0x4047ea
  4047af:	lahf   
  4047b0:	mov    ch,0x65
  4047b2:	aad    0x9b
  4047b4:	loopne 0x404750
  4047b6:	push   ebx
  4047b7:	out    0xe9,eax
  4047b9:	into   
  4047ba:	std    
  4047bb:	mov    ds:0x5c628e36,eax
  4047c0:	or     DWORD PTR [esi],0xe57a0e20
  4047c6:	lds    esi,FWORD PTR [esi+eiz*1+0x6b]
  4047ca:	push   esi
  4047cb:	test   al,0x6
  4047cd:	mov    ds,WORD PTR [ecx+ebx*1-0xb]
  4047d1:	mov    DWORD PTR [ecx],ebx
  4047d3:	stos   DWORD PTR es:[edi],eax
  4047d4:	in     al,0xfc
  4047d6:	fdiv   QWORD PTR [ebp-0x4eaf7cf0]
  4047dc:	and    edi,DWORD PTR [esi+0x1f51ab22]
  4047e2:	pop    esi
  4047e3:	xor    ah,BYTE PTR [edx]
  4047e5:	jg     0x40478d
  4047e7:	mul    DWORD PTR [esi+0x9]
  4047ea:	pop    ebx
  4047eb:	cmp    eax,0xf3d297c2
  4047f0:	push   es
  4047f1:	jmp    0xe84b:0x2dd516fa
  4047f8:	mov    ds:0x862bd19a,al
  4047fd:	(bad)  
  4047fe:	std    
  4047ff:	pushf  
  404800:	shl    BYTE PTR [eax-0x1da10d5c],0xdc
  404807:	push   ebp
  404808:	dec    eax
  404809:	daa    
  40480a:	xchg   ebx,eax
  40480b:	or     BYTE PTR [ecx+0x75],bh
  40480e:	loop   0x40485e
  404810:	dec    ebx
  404811:	pushf  
  404812:	xor    esi,DWORD PTR [ebp-0x2ddab2a3]
  404818:	(bad)  
  404819:	pop    ebx
  40481a:	sub    BYTE PTR [ecx],bl
  40481c:	and    eax,0xcedc64a1
  404821:	sbb    eax,ebp
  404823:	dec    eax
  404824:	pusha  
  404825:	icebp  
  404826:	popa   
  404827:	loop   0x404812
  404829:	std    
  40482a:	and    edi,DWORD PTR [edi]
  40482c:	cmp    edx,DWORD PTR ds:0x7519e53d
  404832:	mov    eax,0xc0181937
  404837:	inc    edx
  404838:	test   DWORD PTR [eax-0xe],ebx
  40483b:	mov    ebp,0xdf966a97
  404840:	add    eax,0x9a6bfa4f
  404845:	pop    eax
  404846:	outs   dx,BYTE PTR ds:[esi]
  404847:	fwait
  404848:	sbb    DWORD PTR [ebx+ebx*2+0x2e3b189b],ecx
  40484f:	retf   0x8eb1
  404852:	cs push edx
  404854:	cld    
  404855:	mov    ebp,DWORD PTR ds:0x148b3f39
  40485b:	xlat   BYTE PTR ds:[ebx]
  40485c:	xlat   BYTE PTR ds:[ebx]
  40485d:	int    0xd7
  40485f:	(bad)  
  404860:	ror    al,0x17
  404863:	mov    ch,0xd7
  404865:	dec    esp
  404866:	fwait
  404867:	out    dx,eax
  404868:	and    DWORD PTR [esi-0x4d],ebp
  40486b:	sbb    BYTE PTR [esi+0x7b],ah
  40486e:	adc    ch,BYTE PTR [ebx-0x6c64aa2b]
  404874:	inc    edx
  404875:	test   al,0x84
  404877:	dec    eax
  404878:	cmp    al,0xcb
  40487a:	leave  
  40487b:	out    dx,al
  40487c:	inc    edx
  40487d:	repz call 0x99aa:0x2ecd6538
  404885:	pusha  
  404886:	push   0x3b435d0a
  40488b:	push   ebx
  40488c:	xor    esp,DWORD PTR [esi+0x71ffccb5]
  404892:	mov    esi,0x8bb24e58
  404897:	test   al,0xea
  404899:	xchg   DWORD PTR [ebx+0x36],edi
  40489c:	dec    ebp
  40489d:	int3   
  40489e:	sub    eax,0xde09abb8
  4048a3:	sbb    BYTE PTR [esi],bh
  4048a5:	fwait
  4048a6:	adc    BYTE PTR [esp+eax*8+0x43],al
  4048aa:	dec    esp
  4048ab:	lods   al,BYTE PTR ds:[esi]
  4048ac:	xor    dh,BYTE PTR ds:[eax]
  4048af:	fld    TBYTE PTR ds:[esi-0x59cdfd86]
  4048b6:	jle    0x4048e1
  4048b8:	rol    BYTE PTR [ecx],0xa0
  4048bb:	inc    esp
  4048bc:	(bad)  
  4048be:	mov    ebp,0xbe52134b
  4048c3:	es in  al,0x36
  4048c6:	cmc    
  4048c7:	pop    ebp
  4048c8:	inc    edx
  4048c9:	lods   eax,DWORD PTR ds:[esi]
  4048ca:	and    eax,0xf8ed8970
  4048cf:	adc    eax,DWORD PTR [esi]
  4048d1:	in     al,0x7b
  4048d3:	mov    ebp,0x1b4e5a82
  4048d8:	or     dh,BYTE PTR [ebx]
  4048da:	sbb    DWORD PTR [ebp-0x442702fd],edx
  4048e0:	int    0xaf
  4048e2:	arpl   WORD PTR [ecx+ebx*8],si
  4048e5:	pcmpgtb mm5,QWORD PTR [ebp+0x489e9586]
  4048ec:	mov    DWORD PTR [edx],ebp
  4048ee:	(bad)  
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	or     al,0xc
  40491b:	fs xor eax,0x7e7e23c3
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x40492a
  404926:	mov    ebx,0x1c6b1a61
  40492b:	and    dh,BYTE PTR [edx+0x7e]
  40492e:	outs   dx,DWORD PTR ds:[esi]
  40492f:	mov    esp,DWORD PTR [ebp+esi*8-0x1b]
  404933:	dec    ecx
  404934:	sub    edx,DWORD PTR [ecx+edx*4-0x685a9c27]
  40493b:	scas   al,BYTE PTR es:[edi]
  40493c:	in     al,0xe2
  40493e:	js     0x40494e
  404940:	aas    
  404941:	out    dx,eax
  404942:	ja     0x404943
  404944:	xchg   ebp,eax
  404945:	fisttp QWORD PTR [esi+0x618f28bc]
  40494b:	outs   dx,DWORD PTR ds:[esi]
  40494c:	shl    BYTE PTR ds:0x402b42dc,1
  404952:	xchg   ebp,eax
  404953:	jecxz  0x4049c9
  404955:	xlat   BYTE PTR ds:[ebx]
  404956:	add    DWORD PTR ds:0x308af15b,ecx
  40495c:	pushf  
  40495d:	and    DWORD PTR [edx],edx
  40495f:	dec    eax
  404960:	mov    ss,esi
  404962:	daa    
  404963:	in     eax,0xa6
  404965:	mov    eax,0xd32012ca
  40496a:	int    0xeb
  40496c:	lock out 0x7c,al
  40496f:	aad    0x38
  404971:	mov    WORD PTR [ecx],ss
  404973:	sbb    DWORD PTR [edx+0xd],esp
  404976:	push   ds
  404977:	dec    esp
  404978:	adc    ebp,DWORD PTR [esi+0x7c]
  40497b:	adc    al,0x5
  40497d:	dec    edx
  40497e:	jmp    ecx
  404980:	mov    eax,ds:0x8211ecc6
  404985:	xchg   ebp,eax
  404986:	sbb    ecx,0x6cb21269
  40498c:	add    DWORD PTR [edi],ebp
  40498e:	mov    eax,DWORD PTR [eax+0x75]
  404991:	test   eax,0xcdfd15bf
  404996:	mov    esi,0xd6d520c2
  40499b:	lds    ecx,FWORD PTR [edx-0xa]
  40499e:	js     0x4049fa
  4049a0:	sbb    BYTE PTR [esp+ebp*4-0x1b],cl
  4049a4:	xchg   ebp,eax
  4049a5:	lods   al,BYTE PTR ds:[esi]
  4049a6:	and    DWORD PTR [ecx-0x6d],ebp
  4049a9:	inc    ecx
  4049aa:	pop    ecx
  4049ab:	cmp    eax,0xda489099
  4049b0:	ss pop ebx
  4049b2:	inc    ebx
  4049b3:	cmp    eax,edi
  4049b5:	ins    BYTE PTR es:[di],dx
  4049b7:	mov    edi,0x2b111ba0
  4049bc:	mov    edx,0xa8ce1690
  4049c1:	jmp    0x4049f3
  4049c3:	dec    esi
  4049c4:	fst    DWORD PTR [ebx-0x4b7805a]
  4049ca:	and    BYTE PTR [edi+0x339fdc9e],bl
  4049d0:	xor    eax,0xf3880d66
  4049d5:	adc    al,0x9d
  4049d7:	neg    BYTE PTR [ebx-0x6f2b419f]
  4049dd:	aad    0x2e
  4049df:	les    ebp,FWORD PTR [esi]
  4049e1:	or     al,0x10
  4049e3:	pop    ecx
  4049e4:	inc    ecx
  4049e5:	or     al,0xec
  4049e7:	add    eax,0xded044b7
  4049ec:	cmp    ecx,DWORD PTR [eax-0x7ea1aafb]
  4049f2:	inc    ecx
  4049f3:	test   eax,0xedbe89de
  4049f8:	mov    cl,0x33
  4049fa:	stos   BYTE PTR es:[edi],al
  4049fb:	retf   0x465b
  4049fe:	jle    0x404a5b
  404a00:	pop    ebx
  404a01:	push   ecx
  404a02:	xchg   esp,eax
  404a03:	bound  esi,QWORD PTR [ecx+0x7b33ed4]
  404a09:	out    0x63,al
  404a0b:	outs   dx,DWORD PTR ds:[esi]
  404a0c:	test   DWORD PTR [edx-0x35],esp
  404a0f:	or     edi,edi
  404a11:	mov    ebx,0xc3481c1c
  404a16:	xchg   edx,eax
  404a17:	movd   DWORD PTR [ecx],mm1
  404a1a:	inc    eax
  404a1b:	mov    dh,0xf1
  404a1d:	arpl   WORD PTR [edx],cx
  404a1f:	pop    edi
  404a20:	pop    ebx
  404a21:	inc    edx
  404a22:	mov    bl,0x6d
  404a24:	or     cl,BYTE PTR [edx+0x7e5b6cbd]
  404a2a:	daa    
  404a2b:	and    esp,DWORD PTR [edx+0x2e]
  404a2e:	in     al,0x2b
  404a30:	out    dx,eax
  404a31:	lods   al,BYTE PTR ds:[esi]
  404a32:	sbb    al,0x59
  404a34:	xchg   edx,eax
  404a35:	mov    al,0x30
  404a37:	mov    ebx,0x87280f70
  404a3c:	iret   
  404a3d:	push   edx
  404a3e:	jbe    0x404a6c
  404a40:	adc    bh,BYTE PTR [esi+esi*8+0x301e6762]
  404a47:	out    dx,eax
  404a48:	nop
  404a49:	aaa    
  404a4a:	aad    0xc7
  404a4c:	push   eax
  404a4d:	mov    ecx,0x282a04a9
  404a52:	cmp    DWORD PTR [edx-0x3931da58],eax
  404a58:	nop
  404a59:	pop    edx
  404a5a:	xchg   ecx,eax
  404a5b:	pop    es
  404a5c:	pop    edi
  404a5d:	fcomp  DWORD PTR [ebx+0x2346dc34]
  404a63:	add    bh,BYTE PTR [esp+esi*2+0xe3d50bd]
  404a6a:	call   0x4c1b0352
  404a6f:	pop    esp
  404a70:	test   al,0x10
  404a72:	sbb    dh,dl
  404a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a75:	jb     0x404a1e
  404a77:	bound  esp,QWORD PTR [ebp+0x1af89b64]
  404a7d:	cld    
  404a7e:	push   0x27
  404a80:	lock mov BYTE PTR [ebp-0x79d057e6],ah
  404a87:	jns    0x404a66
  404a89:	xchg   ecx,eax
  404a8a:	adc    BYTE PTR [ebp+0x52],al
  404a8d:	push   ds
  404a8e:	xor    eax,0x60e40e9d
  404a93:	inc    ebx
  404a94:	fcmove st,st(0)
  404a96:	push   eax
  404a97:	mov    bh,0x15
  404a99:	jp     0x404ab1
  404a9b:	xchg   BYTE PTR [edx+0x7],dh
  404a9e:	mov    ch,0x2c
  404aa0:	and    eax,edx
  404aa2:	cmp    al,0xe7
  404aa4:	call   0xbf04:0x3c2715e8
  404aab:	pop    esp
  404aac:	add    BYTE PTR [edi+0x1d],0x6f
  404ab0:	xor    BYTE PTR [ebx],0xe5
  404ab3:	ret    0xc176
  404ab6:	inc    esi
  404ab7:	jno    0x404abe
  404ab9:	lds    esi,FWORD PTR [ebx-0x27]
  404abc:	repnz stos DWORD PTR es:[edi],eax
  404abe:	iret   
  404abf:	jmp    0x616c45c8
  404ac4:	jmp    0xc3c:0x8c31c7aa
  404acb:	jl     0x404ae2
  404acd:	sti    
  404ace:	xor    cl,dl
  404ad0:	js     0x404af3
  404ad2:	jnp    0x404aae
  404ad4:	out    0x83,eax
  404ad6:	jg     0x404a89
  404ad8:	in     al,0x44
  404ada:	push   cs
  404adb:	jo     0x404ab8
  404add:	pop    ss
  404ade:	gs inc eax
  404ae0:	int    0x37
  404ae2:	ja     0x404aa4
  404ae4:	bound  eax,QWORD PTR [ebx-0x487fdc8]
  404aea:	mov    al,0xcc
  404aec:	mov    ah,0x42
  404aee:	adc    DWORD PTR ds:0x76fb48cf,eax
  404af4:	arpl   WORD PTR [ecx+ebx*8+0x61c253fe],cx
  404afb:	mov    cl,0x55
  404afd:	xchg   esp,eax
  404afe:	and    DWORD PTR [edi-0x3b017539],edi
  404b04:	mov    BYTE PTR [eax+eax*1-0x4023af19],dl
  404b0b:	mov    ds:0xd0e69fba,eax
  404b10:	popa   
  404b11:	addr16 ret 
  404b13:	arpl   WORD PTR [edi-0x20756afc],ax
  404b19:	rol    dh,0x70
  404b1c:	test   al,0xe4
  404b1e:	rol    bl,1
  404b20:	xchg   edi,eax
  404b21:	xchg   esp,eax
  404b22:	pop    ebp
  404b23:	(bad)  
  404b24:	pop    eax
  404b26:	adc    al,0x1e
  404b28:	dec    ebx
  404b29:	pop    edi
  404b2a:	cli    
  404b2b:	loop   0x404b96
  404b2d:	ss stos BYTE PTR es:[edi],al
  404b2f:	lock iret 
  404b31:	pop    edx
  404b32:	ins    BYTE PTR es:[edi],dx
  404b33:	call   0x6cf9:0x4dd6e38c
  404b3a:	in     eax,dx
  404b3b:	mov    eax,ds:0xcb749b9e
  404b40:	es ret 
  404b42:	and    BYTE PTR [ecx],bl
  404b44:	aam    0xbd
  404b46:	adc    eax,0xcd398ef5
  404b4b:	ja     0x404ba0
  404b4d:	xor    eax,0xaf8ece2c
  404b52:	in     eax,0x98
  404b54:	adc    bl,al
  404b56:	popf   
  404b57:	xchg   edi,eax
  404b58:	pop    ecx
  404b59:	push   0xbb004f22
  404b5e:	shl    DWORD PTR [eax],0x9f
  404b61:	retf   0x9adc
  404b64:	xchg   ebx,eax
  404b65:	jb     0x404b5c
  404b67:	and    dl,cl
  404b69:	aam    0x1f
  404b6b:	jmp    0x904a:0x3e010599
  404b72:	jp     0x404b91
  404b74:	jg     0x404bac
  404b76:	push   ebx
  404b77:	sbb    bl,0xd1
  404b7a:	mov    dh,0xdc
  404b7c:	mov    ebx,0xc4b835f9
  404b81:	jno    0x404bb2
  404b83:	inc    edx
  404b84:	loope  0x404b97
  404b86:	jo     0x404b61
  404b88:	sub    ebp,DWORD PTR [esi]
  404b8a:	inc    esi
  404b8b:	cmp    BYTE PTR [ebx+esi*4-0x58],bh
  404b8f:	sbb    eax,0x307a9d54
  404b94:	fidivr DWORD PTR [ecx+0x1f]
  404b97:	inc    ecx
  404b98:	push   ss
  404b99:	pop    edi
  404b9a:	or     bl,bh
  404b9c:	or     al,0xb0
  404b9e:	fwait
  404b9f:	dec    eax
  404ba0:	mov    ch,0x59
  404ba2:	mov    ah,0x32
  404ba4:	repz int 0x19
  404ba7:	fsub   st(5),st
  404ba9:	mov    eax,ds:0xa7d88786
  404bae:	and    BYTE PTR [esi+0x25],bh
  404bb1:	cmp    esi,DWORD PTR [ebp+0x1e7f9f23]
  404bb7:	jg     0x404bc5
  404bb9:	in     al,dx
  404bba:	clc    
  404bbb:	jg     0x404b3f
  404bbd:	pop    esp
  404bbe:	and    edx,esp
  404bc0:	xchg   bh,bl
  404bc2:	cmp    al,0xa4
  404bc4:	outs   dx,DWORD PTR ds:[esi]
  404bc5:	icebp  
  404bc6:	mov    ch,0xb
  404bc8:	test   eax,eax
  404bca:	sub    bh,BYTE PTR [eax-0x4d]
  404bcd:	cmp    bl,bl
  404bcf:	imul   edx,DWORD PTR [edx],0x23bb270f
  404bd5:	and    al,0xc9
  404bd7:	outs   dx,DWORD PTR ds:[si]
  404bd9:	cli    
  404bda:	or     al,0x79
  404bdc:	call   edi
  404bde:	jb     0x404b96
  404be0:	adc    BYTE PTR [esi],dh
  404be2:	and    eax,0xc4ace893
  404be7:	xlat   BYTE PTR ds:[ebx]
  404be8:	lds    ebp,FWORD PTR [edi+0x70fd21d8]
  404bee:	push   ebp
  404bef:	iret   
  404bf0:	or     al,0x11
  404bf2:	out    0x80,al
  404bf4:	fstp   DWORD PTR [edi]
  404bf6:	or     DWORD PTR [esi-0x4c22a19f],ebx
  404bfc:	inc    edx
  404bfd:	in     al,0xe
  404bff:	dec    edx
  404c00:	ds jnp 0x404c5b
  404c03:	mov    ebx,0x840b601e
  404c08:	out    dx,eax
  404c09:	jo     0x404c27
  404c0b:	inc    esi
  404c0c:	xor    eax,0x7382945b
  404c11:	dec    ecx
  404c12:	mov    ds:0xc69d05b2,al
  404c17:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  404c19:	inc    ebp
  404c1a:	dec    ebx
  404c1b:	push   ss
  404c1c:	or     ah,BYTE PTR [eax]
  404c1e:	pop    es
  404c1f:	xchg   esi,eax
  404c20:	push   eax
  404c21:	pop    ebx
  404c22:	xchg   edi,eax
  404c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c24:	adc    BYTE PTR [ecx],dl
  404c26:	leave  
  404c27:	mov    ch,cl
  404c29:	mov    BYTE PTR [eax-0x4dc94f21],cl
  404c2f:	jmp    0x38a84a36
  404c34:	dec    esi
  404c35:	ins    DWORD PTR es:[edi],dx
  404c36:	push   edi
  404c37:	fild   DWORD PTR [ecx-0x5]
  404c3a:	cdq    
  404c3b:	mov    esp,0xbf9234d8
  404c40:	ret    
  404c41:	add    eax,0x79355414
  404c46:	add    eax,0xf0d4b679
  404c4b:	call   0x951e8b4d
  404c50:	int3   
  404c51:	and    BYTE PTR [edi-0x73cf3b12],0x3a
  404c58:	cld    
  404c59:	push   edx
  404c5a:	mov    ch,0x59
  404c5c:	jnp    0x404c25
  404c5e:	out    0x19,eax
  404c60:	jl     0x404c62
  404c62:	adc    dl,0xca
  404c65:	stos   BYTE PTR es:[edi],al
  404c66:	out    dx,eax
  404c67:	mov    WORD PTR [ebx+edi*1-0xa5a30b8],?
  404c6e:	sbb    al,0x66
  404c70:	pop    esi
  404c71:	adc    eax,0x54a5dd7a
  404c76:	and    al,0x7a
  404c78:	pusha  
  404c79:	dec    ebp
  404c7a:	dec    edx
  404c7b:	xchg   BYTE PTR [edi+0x26082df],dh
  404c81:	cmp    eax,0x9c392b65
  404c86:	sub    dh,BYTE PTR [edi+0x54]
  404c89:	inc    edx
  404c8a:	xor    ecx,DWORD PTR [ecx]
  404c8c:	adc    eax,0xc58a1811
  404c91:	lds    edx,FWORD PTR [ecx]
  404c93:	dec    eax
  404c94:	fidivr DWORD PTR [ebx]
  404c96:	imul   edi,DWORD PTR [ebp+0x7c],0xaf78cc89
  404c9d:	mov    DWORD PTR [ebx+0x27],edx
  404ca0:	lods   eax,DWORD PTR ds:[esi]
  404ca1:	(bad)  
  404ca2:	shl    dh,0xb8
  404ca5:	fcomp  st(2)
  404ca7:	rol    DWORD PTR [edi+0x7d3b90c4],cl
  404cad:	adc    BYTE PTR [esi],cl
  404caf:	aam    0xdc
  404cb1:	inc    edx
  404cb2:	outs   dx,BYTE PTR ds:[esi]
  404cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb4:	out    0xb3,al
  404cb6:	mov    al,BYTE PTR [ecx]
  404cb8:	push   ecx
  404cb9:	fldcw  WORD PTR [ecx-0x4c983b69]
  404cbf:	fimul  DWORD PTR [ebx]
  404cc1:	es xchg ebx,eax
  404cc3:	retf   0x77d1
  404cc6:	fwait
  404cc7:	pop    ebp
  404cc8:	xchg   esi,eax
  404cc9:	push   ebp
  404cca:	iret   
  404ccb:	lods   eax,DWORD PTR ds:[esi]
  404ccc:	mov    ch,0x83
  404cce:	les    edx,FWORD PTR [esi-0x52]
  404cd1:	hlt    
  404cd2:	mov    ecx,0x8ad4662f
  404cd7:	fcmovne st,st(1)
  404cd9:	jmp    edi
  404cdb:	adc    eax,0x39417664
  404ce0:	sbb    BYTE PTR [edi+ecx*2-0x3f7e51c],bh
  404ce7:	xor    ebp,eax
  404ce9:	js     0x404d5d
  404ceb:	jle    0x404cb8
  404ced:	xlat   BYTE PTR ds:[ebx]
  404cee:	and    BYTE PTR [edi-0x7cb23218],cl
  404cf4:	ins    BYTE PTR es:[edi],dx
  404cf5:	sbb    ch,BYTE PTR [ebx]
  404cf7:	inc    eax
  404cf8:	mov    ah,dl
  404cfa:	pop    edx
  404cfb:	inc    esp
  404cfc:	mov    ax,WORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x76aa7d7b
  404d49:	jo     0x404db1
  404d4b:	iret   
  404d4c:	sbb    ebp,DWORD PTR [edi]
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404dc0
  404d55:	sbb    ebx,esi
  404d57:	inc    ecx
  404d58:	cli    
  404d59:	xor    al,BYTE PTR [ebx-0x48]
  404d5c:	(bad)  
  404d5d:	out    dx,al
  404d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d5f:	jnp    0x404d31
  404d61:	mov    ebx,0xfeb68e1
  404d66:	xchg   ebp,eax
  404d67:	cmp    BYTE PTR [ebx-0x33451e],ah
  404d6d:	xor    al,0xb
  404d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d70:	(bad)  
  404d71:	js     0x404de4
  404d73:	jge    0x404deb
  404d75:	mov    cl,al
  404d77:	mov    bh,0x95
  404d79:	(bad)  
  404d7a:	sbb    al,al
  404d7c:	push   0xffffff82
  404d7e:	jl     0x404d98
  404d80:	gs enter 0x541b,0x9a
  404d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d86:	das    
  404d87:	jns    0x404df8
  404d89:	aaa    
  404d8a:	call   0xa420294b
  404d8f:	xchg   ecx,eax
  404d90:	sbb    eax,0xd0eeed15
  404d95:	xchg   DWORD PTR ds:0x52be03a1,edi
  404d9b:	cld    
  404d9c:	int    0x1f
  404d9e:	into   
  404d9f:	adc    bl,BYTE PTR [ebx]
  404da1:	push   eax
  404da2:	hlt    
  404da3:	outs   dx,BYTE PTR ds:[esi]
  404da4:	mov    DWORD PTR [edi+0x54],eax
  404da7:	mov    ds:0x31244431,al
  404dac:	cmc    
  404dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dae:	push   ss
  404daf:	push   ds
  404db0:	cmovge esi,ebx
  404db3:	adc    eax,0xcb875e41
  404db8:	xor    eax,0xaca98902
  404dbd:	xlat   BYTE PTR ds:[ebx]
  404dbe:	int3   
  404dbf:	mov    ebp,0xb7f3472b
  404dc4:	add    bl,ch
  404dc6:	push   ebp
  404dc7:	add    BYTE PTR [ecx],ch
  404dc9:	cwde   
  404dca:	or     eax,0xf62fa423
  404dcf:	sub    eax,0xecbdd552
  404dd4:	dec    esp
  404dd5:	ins    DWORD PTR es:[edi],dx
  404dd6:	and    al,0x37
  404dd8:	pop    edx
  404dd9:	les    esp,FWORD PTR [ecx-0x2ff2e0cd]
  404ddf:	pusha  
  404de0:	push   ss
  404de1:	cwde   
  404de2:	ficomp DWORD PTR [eax-0x6d527fa5]
  404de8:	dec    ecx
  404de9:	shl    esp,1
  404deb:	mov    ebx,0xa1f93bdf
  404df0:	dec    edi
  404df1:	push   ecx
  404df2:	(bad)  
  404df3:	(bad)  
  404df4:	push   eax
  404df5:	(bad)  
  404df6:	xor    DWORD PTR es:[ecx-0x6f056ff3],0x3d5aeb99
  404e01:	lods   eax,DWORD PTR ds:[esi]
  404e02:	and    dl,bh
  404e04:	bound  ebx,QWORD PTR [edx+0xb9950a5]
  404e0a:	fnstsw WORD PTR [ebx+eiz*2+0x32e24e07]
  404e11:	clc    
  404e12:	add    BYTE PTR [ecx-0x5e],ch
  404e15:	xor    DWORD PTR [eax-0x7d78ae42],0xffffff93
  404e1c:	or     bh,ah
  404e1e:	dec    ecx
  404e1f:	ret    
  404e20:	arpl   WORD PTR [ebx],cx
  404e22:	adc    esi,ecx
  404e24:	sbb    eax,0x9e311530
  404e29:	or     bh,0xda
  404e2c:	sbb    eax,0xf00cf850
  404e31:	retf   0x846f
  404e34:	fidivr DWORD PTR [edi+edi*1-0x62]
  404e38:	ss es jmp 0x33bac642
  404e3f:	int3   
  404e40:	mov    eax,0x78927b9e
  404e45:	inc    ebp
  404e46:	ss push ss
  404e48:	stos   DWORD PTR es:[edi],eax
  404e49:	xchg   esi,eax
  404e4a:	xchg   ebx,eax
  404e4b:	and    eax,0x9d407dd7
  404e50:	xlat   BYTE PTR ds:[ebx]
  404e51:	rcr    DWORD PTR [edi+ebp*8],0xbd
  404e55:	sbb    DWORD PTR [ecx],0x6bb23832
  404e5b:	jo     0x404ded
  404e5d:	ror    BYTE PTR [ecx+0x1eeb7eb8],1
  404e63:	xchg   edi,eax
  404e64:	(bad)  
  404e65:	adc    eax,0xa3effd53
  404e6a:	enter  0x1287,0xea
  404e6e:	or     al,0xcf
  404e70:	push   0xffffffc0
  404e72:	mov    esp,0xc88de22a
  404e77:	enter  0xa580,0x12
  404e7b:	fimul  DWORD PTR [esi-0x30]
  404e7e:	mov    BYTE PTR [ecx+0x35],bh
  404e81:	push   ebp
  404e82:	aas    
  404e83:	xor    DWORD PTR [esi-0x49fce31e],esi
  404e89:	imul   ecx,DWORD PTR [ebx+0x1f],0xb81b553c
  404e90:	push   0x22
  404e92:	and    bl,0x61
  404e95:	sbb    bl,BYTE PTR [ecx+edi*4+0x41]
  404e99:	stos   BYTE PTR es:[edi],al
  404e9a:	ins    DWORD PTR es:[edi],dx
  404e9b:	ins    BYTE PTR es:[edi],dx
  404e9c:	mov    edx,0xfe03b0c7
  404ea1:	dec    eax
  404ea2:	mov    dl,0xa3
  404ea4:	inc    esp
  404ea5:	sub    BYTE PTR [eax],bl
  404ea7:	mov    cl,0xc
  404ea9:	out    dx,eax
  404eaa:	and    BYTE PTR [edi+eax*2-0x4],0xaa
  404eaf:	shr    BYTE PTR [eax+0x2a58a75e],1
  404eb5:	cs pop ds
  404eb7:	sbb    DWORD PTR [ecx+0x8],eax
  404eba:	pushf  
  404ebb:	inc    edx
  404ebc:	ret    
  404ebd:	and    BYTE PTR [ebx],bl
  404ebf:	pop    ds
  404ec0:	(bad)  
  404ec1:	adc    edi,DWORD PTR [esi+0x74f545f3]
  404ec7:	(bad)  
  404ec9:	push   ebx
  404eca:	add    BYTE PTR [ebx+eiz*1],bh
  404ecd:	push   cs
  404ece:	jae    0x404e8f
  404ed0:	sbb    eax,0x4953ae2e
  404ed5:	mov    edi,0x85703c2b
  404eda:	push   edi
  404edb:	adc    DWORD PTR [eax-0x37],ebp
  404ede:	jnp    0x404e74
  404ee0:	cwde   
  404ee1:	js     0x404e7e
  404ee3:	sub    ah,BYTE PTR ds:0xbe4f836f
  404ee9:	push   es
  404eea:	cmp    BYTE PTR [ebx+esi*1-0xb],dh
  404eee:	in     eax,dx
  404eef:	int3   
  404ef0:	or     eax,0x964d5620
  404ef5:	and    ebp,DWORD PTR gs:[edx+0xb3ca43e]
  404efc:	push   ds
  404efd:	loope  0x404f30
  404eff:	sbb    ebp,DWORD PTR [edi]
  404f01:	std    
  404f02:	pop    ecx
  404f03:	add    dl,BYTE PTR gs:[edi]
  404f06:	mov    DWORD PTR [ecx],edi
  404f08:	gs icebp 
  404f0a:	inc    eax
  404f0b:	xlat   BYTE PTR ds:[ebx]
  404f0c:	cmc    
  404f0d:	iret   
  404f0e:	fs inc edx
  404f10:	cmp    edi,DWORD PTR [eax]
  404f12:	iret   
  404f13:	dec    ebx
  404f14:	inc    ecx
  404f15:	out    0x4d,eax
  404f17:	push   esp
  404f18:	or     al,0xb5
  404f1a:	or     al,0xcc
  404f1c:	mov    al,0xe9
  404f1e:	arpl   WORD PTR [ebx+0x2f],si
  404f21:	xchg   BYTE PTR [ecx-0x46],bh
  404f24:	cli    
  404f25:	sub    al,BYTE PTR [eax]
  404f27:	add    BYTE PTR [esi-0x4544d020],dh
  404f2d:	fmulp  st(6),st
  404f2f:	add    ebp,edi
  404f31:	lds    edi,FWORD PTR [ebx+0x2b]
  404f34:	push   ecx
  404f35:	or     edx,DWORD PTR ds:0x4345fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43468b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43468b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43468b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43468b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43468b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4345f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434693,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434693
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434693,edx
  404fbc:	cmp    DWORD PTR ds:0x434693,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434849
  404fce:	push   0x4347ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434693,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434637
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434637,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	(bad)  
  405050:	shr    esi,1
  405052:	ins    BYTE PTR es:[edi],dx
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x405051
  40505c:	push   es
  40505d:	mov    ss,WORD PTR [eax-0x3c]
  405060:	out    dx,eax
  405061:	fistp  DWORD PTR [ecx+0x51a13944]
  405067:	and    al,0x2d
  405069:	adc    esp,edi
  40506b:	cmp    BYTE PTR [ebx-0x1],ah
  40506e:	fsub   DWORD PTR [esi+0x2ba4a454]
  405074:	jge    0x40500e
  405076:	stos   BYTE PTR es:[edi],al
  405077:	jmp    0x2fbc75ba
  40507c:	jmp    0x8b44:0x3a80dfb5
  405083:	cmp    eax,0xd66606fd
  405088:	in     eax,0xc0
  40508a:	mov    ebx,eax
  40508c:	or     DWORD PTR ds:0xdc59b2b5,0x8e7eaffa
  405096:	out    dx,al
  405097:	or     esp,esi
  405099:	mov    ds:0xec0c32a9,al
  40509e:	out    dx,eax
  40509f:	mov    eax,fs
  4050a1:	pop    edi
  4050a2:	ss jnp 0x4050df
  4050a5:	dec    ebx
  4050a6:	(bad)  
  4050a7:	sbb    esi,DWORD PTR [ebp-0x41]
  4050aa:	mov    cl,0x37
  4050ac:	mov    esi,0x457107c
  4050b1:	popa   
  4050b2:	test   DWORD PTR [edx],0xd170671a
  4050b8:	sub    edi,DWORD PTR [esi-0x2c1e2c2e]
  4050be:	mov    ds:0x61c10fc7,al
  4050c3:	and    BYTE PTR [edi-0x74],bl
  4050c6:	or     dh,bl
  4050c8:	adc    eax,0x7d9cbc4c
  4050cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ce:	cmp    eax,0xee5fce3
  4050d3:	out    0xbf,eax
  4050d5:	fyl2xp1 
  4050d7:	inc    ecx
  4050d8:	push   edi
  4050d9:	jecxz  0x405114
  4050db:	in     eax,0xc4
  4050dd:	xor    DWORD PTR [edi+0x1c033487],0x203b7967
  4050e7:	and    DWORD PTR [edx+0x35],ebp
  4050ea:	aad    0x5e
  4050ec:	jnp    0x405072
  4050ee:	out    dx,al
  4050ef:	push   ebx
  4050f0:	inc    edx
  4050f1:	cdq    
  4050f2:	cmp    al,BYTE PTR [eax-0x54]
  4050f5:	pop    eax
  4050f6:	fmul   QWORD PTR [edx+0x7326837]
  4050fc:	loop   0x40508f
  4050fe:	dec    edx
  4050ff:	dec    ecx
  405100:	xor    edx,esp
  405102:	test   DWORD PTR [eax-0x62],0x3e6437c3
  405109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40510a:	adc    al,0xff
  40510c:	cs fwait
  40510e:	std    
  40510f:	nop
  405110:	pop    DWORD PTR [ebx+ecx*1+0x3af79d1a]
  405117:	push   edx
  405118:	mov    edi,0xc35a1aeb
  40511d:	dec    edx
  40511e:	cmp    DWORD PTR [ebx-0x6679b6af],ebx
  405124:	dec    esp
  405125:	push   cs
  405126:	sbb    DWORD PTR [ebp+0x7],edi
  405129:	and    ebx,esp
  40512b:	je     0x4050ad
  40512d:	les    ecx,FWORD PTR [ecx-0x4ee3af2e]
  405133:	mov    bh,0x2c
  405135:	jle    0x405169
  405137:	(bad)  
  405138:	jbe    0x40515b
  40513a:	ret    0x8fa4
  40513d:	cs in  al,dx
  40513f:	xor    eax,0xaa79a017
  405144:	and    BYTE PTR [esp+ebp*1],dh
  405147:	mov    al,0x72
  405149:	sbb    BYTE PTR [ecx+0x7c0c33ec],cl
  40514f:	pop    ebp
  405150:	ret    0xacbc
  405153:	outs   dx,BYTE PTR ds:[esi]
  405154:	xor    bh,BYTE PTR [eax+eiz*4+0x5f]
  405158:	cli    
  405159:	jb     0x405198
  40515b:	and    ebx,DWORD PTR [esi+eiz*2-0x5323b3fd]
  405162:	call   0xb832:0xcf5e1a9b
  405169:	sub    DWORD PTR [ebx+0x51],0x3a58e8d
  405170:	test   eax,0x5b7a2e9f
  405175:	mov    eax,0x9799d175
  40517a:	xchg   esi,eax
  40517b:	pushf  
  40517c:	ret    
  40517d:	or     eax,0xfcdd28c3
  405182:	jns    0x405175
  405184:	stos   DWORD PTR es:[edi],eax
  405185:	add    al,0x8f
  405187:	cmp    ebp,DWORD PTR [edi]
  405189:	pop    ecx
  40518a:	in     eax,0xb7
  40518c:	jmp    0x4051cb
  40518e:	test   al,0x19
  405190:	jnp    0x4051d2
  405192:	add    esp,DWORD PTR [ebx+0x1f995bce]
  405198:	jb     0x405205
  40519a:	xor    al,0xcd
  40519c:	lods   al,BYTE PTR ds:[esi]
  40519d:	sub    BYTE PTR [ebx],0x5c
  4051a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051a1:	mov    eax,0xb8c95aac
  4051a6:	adc    edi,eax
  4051a8:	pop    edi
  4051a9:	mov    eax,0x2bac1024
  4051ae:	das    
  4051af:	push   edx
  4051b0:	pop    esp
  4051b1:	inc    esp
  4051b2:	cmp    ch,0xcf
  4051b5:	fadd   st(1),st
  4051b7:	mov    ch,0x92
  4051b9:	loopne 0x40519d
  4051bb:	retf   0xa904
  4051be:	test   edx,esp
  4051c0:	sbb    al,0x8b
  4051c2:	mov    eax,DWORD PTR [ebp-0x137c2c8f]
  4051c8:	test   al,0xaa
  4051ca:	xchg   ecx,eax
  4051cb:	ins    BYTE PTR es:[edi],dx
  4051cc:	push   ecx
  4051cd:	mov    ch,BYTE PTR [esi+0x64]
  4051d0:	xchg   ecx,eax
  4051d1:	test   eax,0x156b1de4
  4051d6:	mov    ebx,DWORD PTR [ebx-0x724a0ea0]
  4051dc:	fwait
  4051dd:	cmp    eax,0x2c8eb088
  4051e2:	ss add eax,0xe1ced436
  4051e8:	jae    0x4051e1
  4051ea:	adc    BYTE PTR [ebp-0x6df5ac52],0x65
  4051f1:	mov    bh,0xf9
  4051f3:	addr16 inc edx
  4051f5:	out    0xb9,al
  4051f7:	stc    
  4051f8:	jl     0x405276
  4051fa:	cmc    
  4051fb:	les    ebx,FWORD PTR [esi+0x60]
  4051fe:	mov    eax,DWORD PTR [eax-0x65991783]
  405204:	icebp  
  405205:	jne    0x40523d
  405207:	add    esp,eax
  405209:	icebp  
  40520a:	add    DWORD PTR [edx+esi*1],0x66
  40520e:	push   0x2a
  405210:	cmc    
  405211:	pop    esi
  405212:	adc    BYTE PTR [ebx+0x17],0xcc
  405216:	lahf   
  405217:	dec    edi
  405218:	ja     0x4051b0
  40521a:	pop    edx
  40521b:	ror    DWORD PTR [ecx],1
  40521d:	and    DWORD PTR [eax],edx
  40521f:	pop    edi
  405220:	xlat   BYTE PTR ds:[ebx]
  405221:	jge    0x40520e
  405223:	aaa    
  405224:	fidiv  WORD PTR [eax+0x5ea87bec]
  40522a:	mov    bl,0xe7
  40522c:	aad    0x2e
  40522e:	jne    0x4051de
  405230:	outs   dx,DWORD PTR ds:[esi]
  405231:	cs sahf 
  405233:	cmp    eax,0x1810c5e8
  405238:	cli    
  405239:	jp     0x405279
  40523b:	mov    DWORD PTR [ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0xdd75b739
  40528d:	aas    
  40528e:	pop    ebx
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x4052c1
  405297:	in     eax,dx
  405298:	pop    ecx
  405299:	cli    
  40529a:	(bad)  
  40529b:	lods   al,BYTE PTR ds:[esi]
  40529c:	adc    BYTE PTR ds:0xc3a60d37,dl
  4052a2:	xchg   esi,eax
  4052a3:	fidivr DWORD PTR [eax-0x40780e93]
  4052a9:	popa   
  4052aa:	dec    ebp
  4052ab:	pop    eax
  4052ac:	mov    edi,0x2a26cc00
  4052b1:	out    0x5d,al
  4052b3:	test   DWORD PTR [eax],edx
  4052b5:	nop
  4052b6:	bound  ecx,QWORD PTR [ebp+esi*2+0x5e0112c2]
  4052bd:	cmp    dh,ch
  4052bf:	add    eax,0xddfe316f
  4052c4:	je     0x4052ef
  4052c6:	ret    0x4fa1
  4052c9:	std    
  4052ca:	or     eax,0xfc09ddd5
  4052cf:	bound  eax,QWORD PTR [edx]
  4052d1:	dec    edi
  4052d2:	retf   0x4804
  4052d5:	xchg   ebp,eax
  4052d6:	ret    
  4052d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052d8:	adc    DWORD PTR [ebp+0x43],ebp
  4052db:	test   al,0xe2
  4052dd:	shr    DWORD PTR [ebp+0x5],1
  4052e0:	mov    edx,0x63b18bea
  4052e5:	and    BYTE PTR [esi+ebp*1+0x39],0xa5
  4052ea:	aam    0x80
  4052ec:	loopne 0x4052ba
  4052ee:	(bad)  
  4052ef:	adc    al,ch
  4052f1:	xchg   esi,eax
  4052f2:	das    
  4052f3:	pop    ebx
  4052f4:	mov    cl,0x4
  4052f6:	xchg   edi,eax
  4052f7:	scas   al,BYTE PTR es:[edi]
  4052f8:	in     al,0x5a
  4052fa:	dec    ebp
  4052fb:	int3   
  4052fc:	adc    DWORD PTR [edx+0x28],ebx
  4052ff:	pop    edi
  405300:	fimul  WORD PTR [ebx+edx*1]
  405303:	pop    edi
  405304:	mov    bh,BYTE PTR [ebp+0x306f884c]
  40530a:	loope  0x4052e4
  40530c:	xchg   ebp,eax
  40530d:	(bad)  
  40530e:	leave  
  40530f:	js     0x405337
  405311:	xchg   esp,eax
  405312:	fsub   st(6),st
  405314:	adc    DWORD PTR ds:0xa28a45e2,0xffffffa1
  40531b:	push   eax
  40531c:	mov    ds:0x814dbc71,eax
  405321:	xchg   esi,eax
  405322:	inc    esp
  405323:	retf   
  405324:	cmp    esi,DWORD PTR [edx+eax*1+0x70]
  405328:	ins    DWORD PTR es:[edi],dx
  405329:	jb     0x40538f
  40532b:	or     esi,ebp
  40532d:	imul   ecx,DWORD PTR [edx-0x59efaa5c],0xcfbd04e
  405337:	ret    
  405338:	mov    esi,0xb5bf2d69
  40533d:	ret    
  40533e:	ficomp DWORD PTR [edx]
  405340:	mov    ebx,0x9809f48
  405345:	daa    
  405346:	sub    esi,ebx
  405348:	sub    bh,ah
  40534a:	into   
  40534b:	cmp    al,0xd6
  40534d:	cmp    cl,cl
  40534f:	and    eax,0xd471c4a3
  405354:	shr    BYTE PTR [edx],0xca
  405357:	stos   DWORD PTR es:[edi],eax
  405358:	cmp    DWORD PTR [eax+0x5da0b943],ecx
  40535e:	mov    ebx,DWORD PTR [esi+0x59f78cc2]
  405364:	daa    
  405365:	(bad)  
  405366:	test   DWORD PTR [ecx],0xe2977780
  40536c:	mov    cl,0x18
  40536e:	jae    0x405305
  405370:	cli    
  405371:	cmp    eax,0x8e338e75
  405376:	xchg   DWORD PTR ds:0xfe784fe7,edi
  40537c:	retf   
  40537d:	push   edi
  40537e:	popa   
  40537f:	mov    esp,0x6c3033b6
  405384:	jno    0x405361
  405386:	inc    eax
  405387:	xchg   ecx,eax
  405388:	mov    BYTE PTR [esi-0x5c4f82c7],dh
  40538e:	fcom   QWORD PTR [ebx+esi*1-0x2b]
  405392:	sbb    esi,esp
  405394:	(bad)  [ebx-0x71b312b2]
  40539a:	xchg   esp,eax
  40539b:	pop    edi
  40539c:	mov    bl,BYTE PTR [eax-0x32]
  40539f:	fild   WORD PTR [ecx-0x7b]
  4053a2:	jl     0x405377
  4053a4:	push   edx
  4053a5:	push   eax
  4053a6:	cwde   
  4053a7:	leave  
  4053a8:	inc    edx
  4053a9:	mov    esp,0x58415d79
  4053ae:	ins    DWORD PTR es:[edi],dx
  4053af:	adc    DWORD PTR [eax-0x2b4d31dd],ebp
  4053b5:	cli    
  4053b6:	xchg   esp,eax
  4053b7:	daa    
  4053b8:	push   ss
  4053b9:	retf   
  4053ba:	das    
  4053bb:	pop    DWORD PTR [edi]
  4053bd:	mov    ebp,esp
  4053bf:	test   al,0x8d
  4053c1:	in     eax,0xf
  4053c3:	ror    DWORD PTR [esi],1
  4053c5:	jge    0x40536d
  4053c7:	ja     0x40538b
  4053c9:	mov    eax,ds:0x84d9bcb0
  4053ce:	push   ds
  4053cf:	fnstsw WORD PTR [ecx]
  4053d1:	add    eax,0x25c64cd5
  4053d6:	sbb    eax,ebx
  4053d8:	out    dx,eax
  4053d9:	call   0x75bc2814
  4053de:	push   edi
  4053df:	or     al,0x6b
  4053e1:	adc    DWORD PTR [esi-0x13e0788b],ebx
  4053e7:	mov    esi,0xdf2c477a
  4053ec:	shr    eax,1
  4053ee:	mov    DWORD PTR [eax],esp
  4053f0:	mov    WORD PTR [edx+ebx*2-0x13],gs
  4053f4:	and    eax,0xd2a1d1a1
  4053f9:	popa   
  4053fa:	inc    esp
  4053fb:	and    eax,0x35bcc410
  405400:	scas   al,BYTE PTR es:[edi]
  405401:	add    bl,dl
  405403:	mov    ds:0x792e71db,eax
  405408:	xor    DWORD PTR [ecx+0x6a1ca746],0x8751bae8
  405412:	mov    eax,0xcf84096f
  405417:	es sub bl,bh
  40541a:	mov    bh,0x94
  40541c:	out    dx,al
  40541d:	sub    BYTE PTR gs:[edx+0x65],bl
  405421:	cld    
  405422:	xor    eax,0x5b09bfd2
  405427:	xchg   ebx,eax
  405428:	jp     0x405437
  40542a:	mov    ah,0x23
  40542c:	jno    0x405473
  40542e:	gs sbb ebp,esi
  405431:	test   al,0xbd
  405433:	shl    cl,1
  405435:	mov    al,ch
  405437:	loope  0x405449
  405439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40543a:	dec    esi
  40543b:	and    ebp,DWORD PTR [esi+0x33186c6]
  405441:	call   0x5d7f14fa
  405446:	aas    
  405447:	xor    dl,0xbc
  40544a:	push   esp
  40544b:	into   
  40544c:	in     al,0xf1
  40544e:	adc    ch,0x5b
  405451:	push   ebx
  405452:	inc    ebp
  405453:	xchg   esp,eax
  405454:	push   ds
  405455:	inc    ebx
  405456:	inc    edx
  405457:	mov    bh,0x12
  405459:	fidiv  WORD PTR [esi]
  40545b:	dec    ebx
  40545c:	ins    DWORD PTR es:[edi],dx
  40545d:	or     DWORD PTR [ebp-0x752068f5],edx
  405463:	jge    0x4053fe
  405465:	loope  0x405496
  405467:	js     0x4054c2
  405469:	nop
  40546a:	mov    ch,0xdc
  40546c:	sub    DWORD PTR [esi-0x47a805e4],0x4dc618be
  405476:	mov    ch,0x17
  405478:	mov    bh,0xb4
  40547a:	mov    eax,ds:0x4b4e1325
  40547f:	xchg   ebp,eax
  405480:	xlat   BYTE PTR ss:[ebx]
  405482:	xor    DWORD PTR [ecx+eax*1-0x15d9add8],0x889dfa37
  40548d:	lods   eax,DWORD PTR ds:[esi]
  40548e:	imul   esp,esp,0xdd004d4e
  405494:	ret    0xb73a
  405497:	adc    al,0x53
  405499:	call   0x134d9bf8
  40549e:	es mov cs,edx
  4054a1:	sahf   
  4054a2:	cmc    
  4054a3:	add    DWORD PTR [ebx+eiz*1],esi
  4054a6:	imul   ebp,DWORD PTR ds:0x50432d57,0xffffff9a
  4054ad:	shl    ah,1
  4054af:	les    edx,FWORD PTR [ebx-0x6557a2eb]
  4054b5:	data16 mov dh,cl
  4054b8:	repz mov ecx,DWORD PTR [esi-0x2bcd6ac7]
  4054bf:	mov    ah,0xb1
  4054c1:	mov    dl,0x1e
  4054c3:	mov    dh,0x1e
  4054c5:	jecxz  0x405528
  4054c7:	aas    
  4054c8:	and    ebp,edx
  4054ca:	push   esi
  4054cb:	int3   
  4054cc:	sub    DWORD PTR [esi],ebp
  4054ce:	fild   QWORD PTR [ebp+0x4af536db]
  4054d4:	sub    bh,ch
  4054d6:	and    esp,esi
  4054d8:	fisubr DWORD PTR [eax]
  4054da:	adc    eax,0x9f738dd9
  4054df:	and    BYTE PTR ds:0x220fe0f0,cl
  4054e5:	jl     0x405500
  4054e7:	push   0xffffffbe
  4054e9:	jecxz  0x4054b0
  4054eb:	lods   al,BYTE PTR ds:[esi]
  4054ec:	or     DWORD PTR [ecx+0x93e3472],0xffffffad
  4054f3:	xchg   esp,eax
  4054f4:	outs   dx,BYTE PTR ds:[esi]
  4054f5:	inc    esp
  4054f6:	sahf   
  4054f7:	ret    0x2466
  4054fa:	push   ebp
  4054fb:	ret    
  4054fc:	jle    0x405561
  4054fe:	hlt    
  4054ff:	retf   
  405500:	sub    al,0xac
  405502:	arpl   bp,dx
  405504:	stc    
  405505:	popf   
  405506:	fcmovnbe st,st(7)
  405508:	popf   
  405509:	xor    DWORD PTR [ebx+0x7],eax
  40550c:	retf   0xe21e
  40550f:	popf   
  405510:	cmp    DWORD PTR [ebp-0x38e7e3a],0x19
  405517:	fistp  DWORD PTR [esi+0x2]
  40551a:	outs   dx,BYTE PTR ds:[esi]
  40551b:	sbb    eax,0x850c5b05
  405520:	in     eax,0x73
  405522:	mov    BYTE PTR [edx+0x58],cl
  405525:	das    
  405526:	popa   
  405527:	mov    ecx,esi
  405529:	fwait
  40552a:	das    
  40552b:	xchg   ebp,eax
  40552c:	mov    DWORD PTR [esi+0x53531ca4],ebp
  405532:	rol    al,cl
  405534:	adc    eax,0x171826aa
  405539:	xor    bh,cl
  40553b:	dec    eax
  40553c:	in     al,0x7b
  40553e:	fst    DWORD PTR [edi-0x754fcc81]
  405544:	popa   
  405545:	bswap  edx
  405547:	jbe    0x4054e6
  405549:	mov    edi,0x5f405880
  40554e:	sti    
  40554f:	mov    ebp,0x127ac36e
  405554:	inc    edi
  405555:	add    eax,0x9fe89d4d
  40555a:	into   
  40555b:	and    ah,BYTE PTR [ecx+0x358d800c]
  405561:	je     0x40553f
  405563:	bound  ebp,QWORD PTR [eax+0x37d26060]
  405569:	jmp    0x4055ac
  40556b:	push   eax
  40556c:	dec    ecx
  40556d:	jg     0x40556b
  40556f:	out    dx,eax
  405570:	push   ss
  405571:	jle    0x40557e
  405573:	mov    eax,ds:0xca8e6b5c
  405578:	jnp    0x40556e
  40557a:	jnp    0x405551
  40557c:	lahf   
  40557d:	stc    
  40557e:	pop    eax
  405580:	and    al,0x65
  405582:	xchg   ecx,eax
  405583:	mov    edx,0xf3296d29
  405588:	jns    0x4055a0
  40558a:	mov    al,0xb
  40558c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40558d:	test   BYTE PTR [edi-0x39e5bc7e],bl
  405593:	in     eax,0x7e
  405595:	mov    bl,0x3b
  405597:	(bad)  
  405598:	cmp    esp,DWORD PTR ds:0x7164afdc
  40559e:	mov    ecx,0xaf349834
  4055a3:	inc    edi
  4055a4:	cmp    dl,BYTE PTR [ecx]
  4055a6:	daa    
  4055a7:	out    dx,al
  4055a8:	jmp    0x18f5:0x50087e8b
  4055af:	lock int3 
  4055b1:	pop    es
  4055b2:	pop    ds
  4055b3:	icebp  
  4055b4:	scas   eax,DWORD PTR es:[edi]
  4055b5:	in     eax,0x2
  4055b7:	mov    ecx,0xd2884665
  4055bc:	imul   cl
  4055be:	loope  0x405633
  4055c0:	mov    ecx,0x1ae99e3b
  4055c5:	(bad)  
  4055c7:	gs pushf 
  4055c9:	and    BYTE PTR [ebp*2-0x7643c8b2],al
  4055d0:	dec    ecx
  4055d1:	adc    BYTE PTR fs:0x842f3f70,dl
  4055d8:	leave  
  4055d9:	aad    0x91
  4055db:	ja     0x40562e
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x4345f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	sub    DWORD PTR cs:[esi+ecx*2],ecx
  405606:	nop
  405607:	and    DWORD PTR [esi],esi
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x405646
  405610:	clc    
  405611:	in     al,dx
  405612:	inc    ebx
  405613:	inc    ebx
  405614:	push   0xffffff88
  405616:	int3   
  405617:	popf   
  405618:	fbld   TBYTE PTR [ebp-0x44]
  40561b:	in     eax,0x71
  40561d:	shr    DWORD PTR [edi],0x23
  405620:	fs cwde 
  405622:	js     0x405689
  405624:	les    edx,FWORD PTR [edi+edx*1+0x55f5fa0c]
  40562b:	addr16 js 0x40569b
  40562e:	dec    eax
  40562f:	xchg   ebp,eax
  405630:	mov    esi,0x188b54c3
  405635:	mov    dl,0x97
  405637:	or     BYTE PTR [ecx+0x75],bl
  40563a:	push   0xffffffbf
  40563c:	and    BYTE PTR [ebp*1+0x31968756],ah
  405643:	call   0xbb32:0x84a90135
  40564a:	jp     0x4056c8
  40564c:	rcl    edx,1
  40564e:	mul    al
  405650:	dec    ebx
  405651:	jns    0x405621
  405653:	sub    dh,BYTE PTR [esi+0xe]
  405656:	xor    al,BYTE PTR [ecx-0x67b512eb]
  40565c:	lock jns 0x405649
  40565f:	jp     0x405635
  405661:	push   ebp
  405662:	in     al,dx
  405663:	xchg   ebp,eax
  405664:	(bad)  [edx-0x58]
  405667:	push   edi
  405668:	enter  0xf867,0x25
  40566c:	stos   BYTE PTR es:[edi],al
  40566d:	aaa    
  40566e:	push   edx
  40566f:	scas   eax,DWORD PTR es:[edi]
  405670:	loopne 0x4056f1
  405672:	mov    cs,WORD PTR [esi+0x7]
  405675:	jae    0x40566a
  405677:	not    DWORD PTR [edi]
  405679:	addr16 dec esi
  40567b:	and    BYTE PTR [edi-0x3f256c64],bh
  405681:	push   ebx
  405682:	add    dl,cl
  405684:	push   ds
  405685:	pop    esi
  405686:	daa    
  405687:	in     al,0xee
  405689:	fisub  WORD PTR [eax-0x1d014084]
  40568f:	push   cs
  405690:	imul   ebx,esp,0x83e24255
  405696:	xchg   ebx,eax
  405697:	cmp    DWORD PTR [ebx+0x46],ebp
  40569a:	ins    BYTE PTR es:[edi],dx
  40569b:	xlat   BYTE PTR ds:[ebx]
  40569c:	or     BYTE PTR [edx-0x173a1cc3],al
  4056a2:	pop    ecx
  4056a3:	sbb    edi,ebp
  4056a5:	mov    edi,0xa90ed60a
  4056aa:	cdq    
  4056ab:	iret   
  4056ac:	push   cs
  4056ad:	or     ch,BYTE PTR [edi+0x44]
  4056b0:	pushf  
  4056b1:	inc    edx
  4056b2:	lahf   
  4056b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b4:	lock or BYTE PTR [eax+0x39ccafb2],bl
  4056bb:	jp     0x4056f2
  4056bd:	shl    edx,0xdd
  4056c0:	int3   
  4056c1:	mov    DWORD PTR [eax+edx*2-0x34],esp
  4056c5:	stc    
  4056c6:	aaa    
  4056c7:	pop    edi
  4056c8:	mov    ds:0x4d2216c4,eax
  4056cd:	adc    bl,bh
  4056cf:	test   BYTE PTR [eax],ch
  4056d1:	inc    esp
  4056d2:	or     eax,0xac748b92
  4056d7:	loopne 0x4056ea
  4056d9:	in     eax,dx
  4056da:	or     DWORD PTR [eax],ecx
  4056dc:	mov    ?,WORD PTR [ebp-0x4c]
  4056df:	(bad)
  4056e2:	push   ebx
  4056e3:	add    DWORD PTR [esi+0x27],ecx
  4056e6:	dec    edx
  4056e7:	xor    dl,BYTE PTR [eax+0x3b]
  4056ea:	rol    DWORD PTR [ecx+eax*1-0x1b13533a],cl
  4056f1:	imul   ebp,DWORD PTR [ebx-0x2dcc98fe],0xffffffa3
  4056f8:	fisttp QWORD PTR [eax]
  4056fa:	fdiv   DWORD PTR [eax-0x57029d54]
  405700:	test   al,0xa6
  405702:	aam    0xf8
  405704:	xor    BYTE PTR [ebp+ebx*2-0x268199fa],0x81
  40570c:	sub    edx,DWORD PTR [esi]
  40570e:	dec    DWORD PTR [eax]
  405710:	sub    BYTE PTR [eax+0x7564bf9f],bl
  405716:	jg     0x4056a5
  405718:	mov    bh,0x6
  40571a:	mov    ebp,0x2dfcb4c8
  40571f:	ret    
  405720:	inc    ebp
  405721:	mov    eax,ss
  405723:	lods   eax,DWORD PTR ds:[esi]
  405724:	out    0x0,al
  405726:	mov    edi,?
  405728:	xor    al,0x20
  40572a:	jmp    0xb3b6:0xcdc75b74
  405731:	push   esp
  405732:	leave  
  405733:	jcxz   0x40572d
  405736:	push   ebx
  405737:	sbb    esp,DWORD PTR [eax-0x7b]
  40573a:	pop    edx
  40573b:	push   ecx
  40573c:	out    0x96,al
  40573e:	push   esi
  40573f:	loop   0x40572e
  405741:	scas   al,BYTE PTR es:[edi]
  405742:	bound  esp,QWORD PTR [edx]
  405744:	xor    cl,BYTE PTR [edi+0x59]
  405747:	xor    DWORD PTR [esi],ebp
  405749:	retf   0x3c35
  40574c:	push   eax
  40574d:	cmp    BYTE PTR [edx-0x11],bh
  405750:	fld    QWORD PTR ds:0x72b7ef9b
  405756:	test   eax,0xdf4932e4
  40575b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40575c:	xor    DWORD PTR [edi+0x18],ecx
  40575f:	sbb    BYTE PTR [ebp-0x42],0x20
  405763:	pop    esp
  405764:	lods   al,BYTE PTR ds:[esi]
  405765:	pop    es
  405766:	inc    edx
  405767:	mov    bh,0x3f
  405769:	mov    ah,0xed
  40576b:	inc    edi
  40576c:	or     esp,DWORD PTR [ebx]
  40576e:	cmp    DWORD PTR [ebx-0x3e],0xa2d53cc0
  405775:	jle    0x4057bf
  405777:	in     eax,dx
  405778:	jmp    0xe87a:0x24508807
  40577f:	adc    edx,DWORD PTR [ebx+0x643cd792]
  405785:	push   edi
  405786:	neg    BYTE PTR [eax]
  405788:	loope  0x40571a
  40578a:	pop    ds
  40578b:	cmp    DWORD PTR [ecx-0x56],edx
  40578e:	arpl   WORD PTR [ebx-0x19],bx
  405791:	xor    BYTE PTR [edi],bh
  405793:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405795:	dec    ebp
  405796:	repz or ecx,ebp
  405799:	pminub mm5,QWORD PTR [eax-0x567f653f]
  4057a0:	in     eax,0xaf
  4057a2:	leave  
  4057a3:	dec    esi
  4057a4:	leave  
  4057a5:	xchg   edx,eax
  4057a6:	int    0x5e
  4057a8:	scas   eax,DWORD PTR es:[edi]
  4057a9:	cmp    DWORD PTR [eax+0x46],ecx
  4057ac:	mov    eax,0x3f6133f
  4057b1:	sbb    al,0xbe
  4057b3:	lods   al,BYTE PTR ds:[esi]
  4057b4:	push   ebx
  4057b5:	scas   eax,DWORD PTR es:[edi]
  4057b6:	mov    dl,0x76
  4057b8:	pusha  
  4057b9:	lahf   
  4057ba:	sub    BYTE PTR [esi+0x406101ae],cl
  4057c0:	sbb    al,0xdd
  4057c2:	scas   eax,DWORD PTR es:[edi]
  4057c3:	inc    edi
  4057c4:	cmp    ecx,DWORD PTR [ebp+0x5b]
  4057c7:	mov    esi,0xf41decc2
  4057cc:	enter  0xecec,0xb
  4057d0:	push   edi
  4057d1:	pop    ebp
  4057d2:	sbb    dh,bh
  4057d4:	loop   0x405812
  4057d6:	les    esi,FWORD PTR fs:[edx+0x71]
  4057da:	jmp    0x4a8d4b3e
  4057df:	dec    esi
  4057e0:	rol    edi,cl
  4057e2:	mov    ecx,0x10e3ad7
  4057e7:	mov    al,0x3c
  4057e9:	add    cl,BYTE PTR [edi-0x1c]
  4057ec:	int3   
  4057ed:	ficomp DWORD PTR [esi+0x1a7cab2a]
  4057f3:	aad    0xe8
  4057f5:	lds    eax,FWORD PTR [edi-0x5257d30c]
  4057fb:	inc    ecx
  4057fc:	repz call 0x2a4c:0xd480a4bc
  405804:	xlat   BYTE PTR ds:[ebx]
  405805:	fwait
  405806:	int    0x75
  405808:	adc    cl,BYTE PTR [edx+0x7e890e54]
  40580e:	ja     0x40586b
  405810:	in     al,dx
  405811:	or     BYTE PTR [ebp-0x3fb66806],bl
  405817:	retf   0x1875
  40581a:	mov    bh,0x5c
  40581c:	scas   al,BYTE PTR es:[edi]
  40581d:	mov    si,0x12bc
  405821:	(bad)  
  405822:	and    DWORD PTR [ecx],esp
  405824:	stos   BYTE PTR es:[edi],al
  405825:	and    esi,edx
  405827:	icebp  
  405828:	addr16 repnz into 
  40582b:	cmc    
  40582c:	jns    0x405843
  40582e:	add    ecx,eax
  405830:	mov    bh,0x39
  405832:	add    bl,bh
  405834:	dec    esp
  405835:	pop    ecx
  405836:	xchg   esi,eax
  405837:	out    dx,eax
  405838:	mov    ebp,0x2a64a88a
  40583d:	cmp    eax,0x27a883fa
  405842:	adc    DWORD PTR [ebx+0x41f972f5],0xebf36058
  40584c:	ret    
  40584d:	mov    ch,0x8
  40584f:	add    ch,ah
  405851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405852:	std    
  405853:	int3   
  405854:	or     BYTE PTR [eax],bh
  405856:	stos   BYTE PTR es:[edi],al
  405857:	in     al,dx
  405858:	jecxz  0x405847
  40585a:	jle    0x40580c
  40585c:	jp     0x405852
  40585e:	cli    
  40585f:	fisubr DWORD PTR [esi+0x1f016b39]
  405865:	push   DWORD PTR [edx-0x5d]
  405868:	retf   0x5feb
  40586b:	int    0x10
  40586d:	sbb    BYTE PTR [esi],ah
  40586f:	sti    
  405870:	lahf   
  405871:	inc    edx
  405872:	iret   
  405873:	bnd jmp 0x785d2d33
  405879:	mov    esp,ebx
  40587b:	mov    al,0xf8
  40587d:	xor    ebp,DWORD PTR [esi+0x78a57bb4]
  405883:	pop    esp
  405884:	mov    al,bl
  405886:	xchg   ebx,eax
  405887:	pusha  
  405888:	push   edi
  405889:	inc    esp
  40588a:	out    dx,al
  40588b:	jo     0x405847
  40588d:	leave  
  40588e:	pop    esp
  40588f:	xor    bh,BYTE PTR [ebp+esi*8-0x7344014f]
  405896:	test   DWORD PTR [ebx+0x32],eax
  405899:	lods   al,BYTE PTR ds:[esi]
  40589a:	mov    ecx,0xdac0eb4e
  40589f:	retf   0x574e
  4058a2:	mov    BYTE PTR gs:[esi-0x18ed57d6],cl
  4058a9:	mov    ebx,0x5fc11fd8
  4058ae:	inc    edx
  4058af:	pop    ebp
  4058b1:	fcom   st(6)
  4058b3:	scas   al,BYTE PTR es:[edi]
  4058b4:	stos   DWORD PTR es:[edi],eax
  4058b5:	jmp    0xa32e:0xbd4859fd
  4058bc:	push   ebp
  4058bd:	test   BYTE PTR [edx],bl
  4058bf:	fnstenv ds:0xcf6df2f4
  4058c5:	sbb    esp,DWORD PTR [ebx]
  4058c7:	cmp    dl,al
  4058c9:	xchg   esi,eax
  4058ca:	inc    ecx
  4058cb:	cld    
  4058cc:	pop    esi
  4058cd:	cmp    al,0x19
  4058cf:	jns    0x405920
  4058d1:	les    edx,FWORD PTR [ecx+ecx*4]
  4058d4:	jle    0x405883
  4058d6:	mov    dh,0x2
  4058d8:	stos   DWORD PTR es:[edi],eax
  4058d9:	int    0x42
  4058db:	stos   BYTE PTR es:[edi],al
  4058dc:	xor    ch,BYTE PTR [ebp+0x5ed91a8d]
  4058e2:	cld    
  4058e3:	in     eax,dx
  4058e4:	adc    DWORD PTR [esi],ebx
  4058e6:	mov    dl,0xf2
  4058e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e9:	and    ecx,DWORD PTR [edi]
  4058eb:	(bad)  [esi+0x2ab4f599]
  4058f1:	cmp    eax,0x1b70c50a
  4058f6:	dec    edx
  4058f7:	and    eax,DWORD PTR [edx]
  4058f9:	enter  0x1a13,0x2d
  4058fd:	add    eax,0x82dd5858
  405902:	jge    0x40594c
  405904:	stc    
  405905:	test   DWORD PTR [eax+0x714ecdba],ebx
  40590b:	retf   0x6492
  40590e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40590f:	xchg   esi,eax
  405910:	pop    eax
  405911:	jb     0x405906
  405913:	and    ebx,DWORD PTR [ebx-0x4885be0a]
  405919:	cmc    
  40591a:	das    
  40591b:	jmp    0x6da:0x6784b3b2
  405922:	out    0x5f,eax
  405924:	cli    
  405925:	xchg   ebx,eax
  405926:	push   esp
  405927:	mov    esi,0xa3631115
  40592c:	cld    
  40592d:	mov    cl,0x40
  40592f:	arpl   bx,sp
  405931:	push   esi
  405932:	pop    ebp
  405933:	mov    ds:0x7a3a911f,eax
  405938:	adc    BYTE PTR [ecx],al
  40593a:	mov    dl,0xc6
  40593c:	mov    edi,DWORD PTR [ebp-0x19]
  40593f:	icebp  
  405940:	adc    eax,0x3194de44
  405945:	inc    esp
  405946:	push   esp
  405947:	sub    BYTE PTR [esi],cl
  405949:	and    DWORD PTR [edx-0x5d],esp
  40594c:	push   0xa3a4a7d0
  405951:	loope  0x40593e
  405953:	mov    edi,0xf845c7f4
  405958:	cmp    DWORD PTR [edi+0x0],ecx
  40595b:	add    bh,al
  40595d:	add    eax,0x4346d3
  405962:	dec    edx
  405963:	and    al,BYTE PTR [eax]
  405965:	add    cl,ch
  405967:	pop    esi
  405968:	add    eax,DWORD PTR [eax]
  40596a:	add    BYTE PTR [edx+0x71b8a1ab],bh
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	and    DWORD PTR [edx+0x31ef47ec],0x79c47e7e
  405981:	jle    0x405a01
  405983:	sub    ah,BYTE PTR [ebp-0xf]
  405986:	out    0xd,eax
  405988:	mov    al,0xae
  40598a:	sub    BYTE PTR [eax-0x77ba62a6],ah
  405990:	scas   eax,DWORD PTR es:[edi]
  405991:	cmp    cl,BYTE PTR fs:[edx]
  405994:	xchg   DWORD PTR [edx+0x7a],ebp
  405997:	dec    edi
  405998:	adc    eax,0x36529bbc
  40599d:	inc    ebx
  40599e:	loop   0x405a0d
  4059a0:	outs   dx,BYTE PTR ds:[esi]
  4059a1:	loop   0x40594e
  4059a3:	adc    BYTE PTR ds:0x908174d0,dl
  4059a9:	vpsllq xmm5,xmm5,XMMWORD PTR [edi]
  4059ad:	(bad)  
  4059af:	test   esp,ebp
  4059b1:	pop    ebp
  4059b2:	inc    eax
  4059b3:	(bad)  
  4059b4:	adc    DWORD PTR [edx+0x3a7a4ff6],ebp
  4059ba:	loope  0x4059e2
  4059bc:	enter  0xbc52,0x67
  4059c0:	push   ecx
  4059c1:	add    ah,BYTE PTR [eax]
  4059c3:	and    eax,0xda7ea828
  4059c8:	les    edi,FWORD PTR [edx-0x6c3f2419]
  4059ce:	popf   
  4059cf:	lock mov ebx,0x49011d01
  4059d5:	xchg   edi,eax
  4059d6:	sub    DWORD PTR [ebp+0x6e3aba0f],esi
  4059dc:	hlt    
  4059dd:	fld    DWORD PTR [edi+0x7f]
  4059e0:	xor    ah,bl
  4059e2:	(bad)  
  4059e3:	sbb    cl,BYTE PTR [ecx]
  4059e5:	mov    DWORD PTR [edi-0x1e261aeb],esi
  4059eb:	hlt    
  4059ec:	or     edx,DWORD PTR [edi+0x6a90d9c9]
  4059f2:	jbe    0x405a4d
  4059f4:	xor    BYTE PTR [eax-0x1b5e4147],al
  4059fa:	enter  0xec08,0xcc
  4059fe:	mov    ds:0xdaea1a99,eax
  405a03:	and    BYTE PTR [esi-0x30552a5f],dh
  405a09:	stos   DWORD PTR es:[edi],eax
  405a0a:	sbb    DWORD PTR [ebx+esi*8+0x61],eax
  405a0e:	pop    eax
  405a0f:	adc    esi,DWORD PTR [ecx+0x5b]
  405a12:	push   cs
  405a13:	jns    0x4059aa
  405a15:	outs   dx,BYTE PTR ds:[esi]
  405a16:	or     ch,BYTE PTR [edi+0x2b]
  405a19:	sti    
  405a1a:	clc    
  405a1b:	cli    
  405a1c:	pop    eax
  405a1d:	in     eax,0xae
  405a1f:	adc    eax,eax
  405a21:	popf   
  405a22:	add    al,BYTE PTR [ebx]
  405a24:	mov    eax,0x49b87310
  405a29:	mov    bl,0x86
  405a2b:	outs   dx,BYTE PTR ds:[esi]
  405a2c:	mov    dl,0xc4
  405a2e:	push   0x5b
  405a30:	rcr    DWORD PTR [edi+ebx*8+0x72765b5f],1
  405a37:	outs   dx,WORD PTR ds:[esi]
  405a39:	pusha  
  405a3a:	push   edx
  405a3b:	or     eax,DWORD PTR [eax-0x35d5a2f0]
  405a41:	xchg   esi,edi
  405a43:	call   0x2893:0x8ed37a0c
  405a4a:	jmp    0xa47e886
  405a4f:	ror    BYTE PTR [edi-0x76839131],0x4b
  405a56:	std    
  405a57:	adc    eax,0x1488b3b1
  405a5c:	sbb    dl,bl
  405a5e:	rcr    ch,cl
  405a60:	cmp    cl,0x57
  405a63:	or     DWORD PTR [edx+ebp*2-0x710f64a9],esp
  405a6a:	adc    eax,eax
  405a6c:	int3   
  405a6d:	inc    ecx
  405a6e:	push   edx
  405a6f:	xchg   ebx,eax
  405a70:	pop    edx
  405a71:	and    al,0xc7
  405a73:	fdivr  DWORD PTR [ebp-0x54208eb6]
  405a79:	sub    al,0x40
  405a7b:	stc    
  405a7c:	fstp   TBYTE PTR [eax]
  405a7e:	in     eax,0xbd
  405a80:	xchg   ebp,eax
  405a81:	sahf   
  405a82:	or     eax,ebp
  405a84:	in     al,dx
  405a85:	outs   dx,DWORD PTR ds:[esi]
  405a86:	sbb    bl,ch
  405a88:	loop   0x405ae3
  405a8a:	push   esi
  405a8b:	data16 sbb BYTE PTR [ecx],al
  405a8e:	mov    ch,0x52
  405a90:	stc    
  405a91:	sub    BYTE PTR [eax],ah
  405a93:	or     BYTE PTR [edx+esi*1+0x22fdd22b],al
  405a9a:	sub    BYTE PTR [ecx+eax*8+0x32f93165],al
  405aa1:	rol    BYTE PTR [edi],1
  405aa3:	fadd   QWORD PTR [ebp-0x38d0c01]
  405aa9:	adc    bl,BYTE PTR [eax+edx*1-0x4b3f437f]
  405ab0:	cmp    DWORD PTR [edx-0x66d2fab2],ebp
  405ab6:	mov    ds:0x8d59ca56,eax
  405abb:	rol    BYTE PTR [ebp-0x1c],1
  405abe:	or     DWORD PTR [esi-0x23076382],0x66b23fd1
  405ac8:	push   0xe4d94512
  405acd:	das    
  405ace:	sub    esi,DWORD PTR [eax]
  405ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ad1:	sub    ebp,DWORD PTR [ebx+0x1c]
  405ad4:	sahf   
  405ad5:	fld    QWORD PTR [edi]
  405ad7:	mov    ds:0xa4e653ad,eax
  405adc:	dec    esi
  405add:	cmp    dh,BYTE PTR [edi-0x79]
  405ae0:	in     al,dx
  405ae1:	mov    ebp,0x751e5f7a
  405ae6:	xor    dh,BYTE PTR [ecx]
  405ae8:	icebp  
  405ae9:	out    dx,al
  405aea:	rcr    BYTE PTR [ecx-0x1b],cl
  405aed:	sub    dh,BYTE PTR [edi+0xd]
  405af0:	rcr    edi,0x70
  405af3:	out    dx,eax
  405af4:	loopne 0x405ac5
  405af6:	rcl    BYTE PTR [edx],cl
  405af8:	jl     0x405aaa
  405afa:	mov    dh,0x77
  405afc:	fisttp WORD PTR [edx+eiz*2]
  405aff:	ror    BYTE PTR [eax],1
  405b01:	and    BYTE PTR [edx+0x60],bl
  405b04:	inc    esp
  405b05:	lods   eax,DWORD PTR ds:[esi]
  405b06:	or     ebx,esp
  405b08:	(bad)  
  405b09:	fisttp QWORD PTR [esi+0x48c85731]
  405b0f:	adc    al,0x79
  405b11:	pop    esp
  405b12:	jmp    0x405a95
  405b14:	push   edx
  405b15:	cmp    DWORD PTR [ebx+0x3],0x66805f5c
  405b1c:	mov    WORD PTR [edx-0x755da0f1],?
  405b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b23:	cli    
  405b24:	imul   eax,DWORD PTR [ecx],0xe2e05f4c
  405b2a:	addr16 dec esi
  405b2c:	shr    BYTE PTR [edi-0x35e7168a],cl
  405b32:	pop    edi
  405b33:	mov    dh,0x30
  405b35:	and    DWORD PTR [edi],ebp
  405b37:	pop    edi
  405b38:	rcl    BYTE PTR [edx+0x2230c6d3],cl
  405b3e:	fcmovnbe st,st(4)
  405b40:	inc    edx
  405b41:	sbb    edx,DWORD PTR [esi]
  405b43:	push   es
  405b44:	sti    
  405b45:	shl    DWORD PTR [ecx-0x389c28c8],cl
  405b4b:	gs jmp 0xdbf653cc
  405b51:	fcomp  QWORD PTR [ecx+0x1a]
  405b54:	imul   eax,ebp,0xffffffee
  405b57:	add    dl,bl
  405b59:	push   esp
  405b5a:	adc    ebx,esp
  405b5c:	or     eax,0xbed93c33
  405b61:	mov    eax,0xa63d5956
  405b67:	iret   
  405b68:	and    ebx,DWORD PTR [ebp+0x75085754]
  405b6e:	repz int 0x52
  405b71:	jb     0x405bc6
  405b73:	inc    ecx
  405b74:	mov    al,ds:0xb8f3db85
  405b79:	xor    BYTE PTR [esi-0x44],0x8b
  405b7d:	icebp  
  405b7e:	gs inc edi
  405b80:	cmp    esp,DWORD PTR [esi-0x22]
  405b83:	repnz lidtd [esi+0x45de8faf]
  405b8b:	pop    DWORD PTR [ebp+esi*2+0x66]
  405b8f:	popa   
  405b90:	je     0x405b89
  405b92:	in     al,0xa7
  405b94:	or     eax,DWORD PTR [ebx]
  405b96:	xlat   BYTE PTR ds:[ebx]
  405b97:	int    0xdf
  405b99:	pop    ds
  405b9a:	mov    WORD PTR [ecx+0x5848b0ea],fs
  405ba0:	sub    dl,BYTE PTR [eax]
  405ba2:	add    dh,BYTE PTR [esi]
  405ba4:	cmp    al,0xfa
  405ba6:	jno    0x405bb4
  405ba8:	inc    ecx
  405ba9:	add    al,0x16
  405bab:	pop    ebp
  405bac:	test   eax,0x8cfbaa82
  405bb1:	mov    esp,0xe81488e
  405bb6:	in     al,dx
  405bb7:	scas   eax,DWORD PTR es:[edi]
  405bb8:	pop    edi
  405bb9:	(bad)  
  405bba:	icebp  
  405bbb:	pop    esi
  405bbc:	test   BYTE PTR [ebx+edi*1-0x122c5687],bh
  405bc3:	(bad)  
  405bc4:	fwait
  405bc5:	mov    ebx,0xc6cac701
  405bca:	mov    cl,0xb6
  405bcc:	jo     0x405c16
  405bce:	data16 adc bl,BYTE PTR [ebp-0x49]
  405bd2:	pop    ebx
  405bd3:	and    al,0x90
  405bd5:	mov    ch,0x28
  405bd7:	imul   BYTE PTR ds:0xe67d183
  405bdd:	imul   eax,ecx,0xffffffc6
  405be0:	adc    DWORD PTR [ebp-0x2d],eax
  405be3:	add    BYTE PTR [ebx+0x7b],ch
  405be6:	cmp    ebp,DWORD PTR [esi-0x40105c6f]
  405bec:	in     eax,0x2f
  405bee:	sbb    eax,0x6af4c22
  405bf3:	int    0x1e
  405bf5:	dec    esi
  405bf6:	ficom  DWORD PTR [edx-0x6b]
  405bf9:	dec    esp
  405bfa:	test   BYTE PTR [edx-0x1b],dh
  405bfd:	mov    BYTE PTR [esi+0x7a87428],ah
  405c03:	sub    bl,al
  405c05:	push   ss
  405c06:	imul   ecx,eax,0xffffffe3
  405c09:	pop    ss
  405c0a:	jmp    0xd237:0xd7fdeb79
  405c11:	or     al,0x71
  405c13:	ins    DWORD PTR es:[edi],dx
  405c14:	dec    ecx
  405c15:	or     DWORD PTR [ebx+0x2c],ecx
  405c18:	cld    
  405c19:	xor    eax,0x359c5c42
  405c1e:	mov    fs,WORD PTR [ebp-0x5fdd42f7]
  405c24:	ins    DWORD PTR es:[edi],dx
  405c25:	jae    0x405c66
  405c27:	imul   eax,DWORD PTR [ebx+0x19],0xfffffff4
  405c2b:	pushf  
  405c2c:	cmp    al,0xec
  405c2e:	sbb    al,BYTE PTR [esi]
  405c30:	stos   DWORD PTR es:[edi],eax
  405c31:	inc    ecx
  405c32:	inc    ebp
  405c33:	pop    esp
  405c34:	jno    0x405c97
  405c36:	je     0x405c54
  405c38:	rol    BYTE PTR [edi+0x4],0x32
  405c3c:	add    BYTE PTR [esi+0x3834fde],cl
  405c42:	inc    ebp
  405c43:	hlt    
  405c44:	mov    esi,0xc23efdb1
  405c49:	mov    ecx,0xa11db43
  405c4e:	or     ch,BYTE PTR [edx-0x47]
  405c51:	shr    BYTE PTR [esi+ebx*2-0x5b61d5f8],0xb4
  405c59:	push   es
  405c5a:	fst    QWORD PTR [esi]
  405c5c:	bound  ebp,QWORD PTR [ecx]
  405c5e:	add    ebp,DWORD PTR [eax-0x39b1b56a]
  405c64:	dec    ebx
  405c65:	ret    
  405c66:	xchg   edi,eax
  405c67:	sub    esp,DWORD PTR [edi+0x1c76af89]
  405c6d:	fstp   DWORD PTR [ebx]
  405c6f:	mov    edi,0xd6181412
  405c74:	(bad)  
  405c75:	sbb    BYTE PTR [ecx],bh
  405c77:	and    al,0xa2
  405c7a:	sbb    BYTE PTR ds:0x3bcaca05,0xfe
  405c81:	stos   DWORD PTR es:[edi],eax
  405c82:	cmp    al,0xcd
  405c84:	push   esi
  405c85:	jmp    0x865fd22f
  405c8a:	mov    DWORD PTR [eax],ecx
  405c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c8d:	jl     0x405cbc
  405c8f:	daa    
  405c90:	cdq    
  405c91:	fdecstp 
  405c93:	and    ebp,esi
  405c95:	xchg   ecx,eax
  405c96:	mov    al,bh
  405c98:	in     al,0xc
  405c9a:	ror    DWORD PTR [eax-0x2c561cb7],cl
  405ca0:	dec    ebx
  405ca1:	or     edi,esi
  405ca3:	push   es
  405ca4:	push   esp
  405ca5:	inc    ebx
  405ca6:	pusha  
  405ca7:	jne    0x405cd2
  405ca9:	or     bh,BYTE PTR [esi-0x52]
  405cac:	xor    esi,eax
  405cae:	(bad)  
  405caf:	data16 jecxz 0x405cea
  405cb2:	xlat   BYTE PTR ds:[ebx]
  405cb3:	imul   ebx,DWORD PTR [edi+0x49a29776],0x45
  405cba:	mov    ah,0x76
  405cbc:	(bad)  
  405cbd:	mov    al,ds:0x2f186fdf
  405cc2:	xchg   BYTE PTR [eax],cl
  405cc4:	mov    WORD PTR [esi],?
  405cc6:	arpl   WORD PTR [eax],di
  405cc8:	cmp    bh,BYTE PTR [ebx]
  405cca:	enter  0x850f,0x12
  405cce:	add    al,0x0
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x43463f
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434653,0x43467b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43470f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4346c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434647,0x12
  405d19:	cmp    DWORD PTR ds:0x434647,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434647,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434647
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434647,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0xafb81bd6
  405d8d:	fiadd  DWORD PTR [esi]
  405d8f:	mov    ch,0x3c
  405d91:	jle    0x405e11
  405d93:	les    edi,FWORD PTR [ecx+0x7e]
  405d96:	jle    0x405e09
  405d98:	mov    esi,0xb2f54a4d
  405d9d:	push   0x1f
  405d9f:	ficomp WORD PTR [ebp+0x22]
  405da2:	mov    al,0x80
  405da4:	jge    0x405d6f
  405da6:	mov    WORD PTR [ecx],ds
  405da8:	adc    eax,0x196a2df
  405dad:	rol    ebp,1
  405daf:	ja     0x405e05
  405db1:	push   ds
  405db2:	aam    0x74
  405db4:	or     DWORD PTR [edi-0x2b],ecx
  405db7:	mov    ds:0xe0ab6ae4,eax
  405dbc:	je     0x405dfa
  405dbe:	sbb    ch,dl
  405dc0:	or     al,0x68
  405dc2:	push   esp
  405dc3:	dec    edi
  405dc4:	aam    0x67
  405dc6:	jae    0x405e22
  405dc8:	xor    BYTE PTR [edi-0x5481bd15],ch
  405dce:	adc    DWORD PTR [eax+edx*4+0x5f],ebx
  405dd2:	shl    DWORD PTR [edx+edi*8+0x7ff9ae30],cl
  405dd9:	push   esp
  405dda:	neg    DWORD PTR [ecx+0x7]
  405ddd:	sub    edi,DWORD PTR [eax]
  405ddf:	xchg   esp,eax
  405de0:	iret   
  405de1:	cmp    BYTE PTR [ebx+edx*8-0x319f9785],cl
  405de8:	jmp    0xe08a:0x50303b69
  405def:	and    al,BYTE PTR [ebx-0x15]
  405df2:	adc    ebx,DWORD PTR [ecx+eax*8]
  405df5:	inc    eax
  405df6:	sahf   
  405df7:	dec    edi
  405df8:	mov    ebx,0x95898612
  405dfd:	sub    al,0x39
  405dff:	inc    ebx
  405e00:	(bad)  
  405e01:	loopne 0x405dec
  405e03:	fs data16 ror dh,1
  405e07:	inc    edx
  405e08:	jne    0x405e34
  405e0a:	scas   al,BYTE PTR es:[edi]
  405e0b:	pushf  
  405e0c:	xchg   ebp,eax
  405e0d:	rol    DWORD PTR [edx+0x34],cl
  405e10:	repz inc esp
  405e12:	gs jmp 0xbd2b:0xb504f66b
  405e1a:	and    al,0xa5
  405e1c:	scas   eax,DWORD PTR es:[edi]
  405e1d:	lods   al,BYTE PTR ds:[esi]
  405e1e:	cld    
  405e1f:	mov    ?,edx
  405e21:	jmp    0x5983:0xe1bcf741
  405e28:	xor    BYTE PTR [edx],0x66
  405e2b:	cmp    esp,eax
  405e2d:	sbb    ecx,DWORD PTR [edi]
  405e2f:	adc    eax,0x7a6872ea
  405e34:	inc    ebx
  405e35:	mov    esi,0x55a9b70d
  405e3a:	pop    ebx
  405e3b:	imul   ecx,DWORD PTR [edi-0x732c7ad1],0x5de0c988
  405e45:	push   esp
  405e46:	add    al,0xb9
  405e48:	mov    WORD PTR [edx-0x4521b3f6],cs
  405e4e:	popf   
  405e4f:	mov    edi,0xf3f7f12a
  405e54:	cmp    DWORD PTR [ebx],edi
  405e56:	fdiv   QWORD PTR [edi-0x570d143a]
  405e5c:	add    al,0xd2
  405e5e:	xchg   ecx,eax
  405e5f:	enter  0x2a3c,0xf
  405e63:	int    0x33
  405e65:	fmul   DWORD PTR [ebp-0x2b]
  405e68:	adc    al,0x84
  405e6a:	jnp    0x405ebf
  405e6c:	xchg   BYTE PTR [esi],al
  405e6e:	cmc    
  405e6f:	mov    al,ds:0x7c08acd7
  405e74:	stos   DWORD PTR es:[edi],eax
  405e75:	dec    esp
  405e76:	(bad)  
  405e77:	ss stc 
  405e79:	mov    bh,0xff
  405e7b:	add    edx,DWORD PTR [ecx+0x10]
  405e7e:	cli    
  405e7f:	sbb    DWORD PTR [ecx-0x1e5bcb2d],esi
  405e85:	in     al,0x94
  405e87:	fisubr WORD PTR [edx]
  405e89:	sbb    ecx,DWORD PTR [ebx]
  405e8b:	(bad)  
  405e8c:	aad    0x3a
  405e8e:	cmc    
  405e8f:	or     eax,0xe45f41a7
  405e94:	mov    ch,0xd
  405e96:	scas   eax,DWORD PTR es:[edi]
  405e97:	cmc    
  405e98:	in     al,0x46
  405e9a:	fadd   st(7),st
  405e9c:	ds sbb eax,0x749c0069
  405ea2:	(bad)  
  405ea4:	mov    bl,0x8a
  405ea6:	clc    
  405ea7:	(bad)  
  405ea8:	mov    al,0x34
  405eaa:	and    dl,BYTE PTR ds:0xb63bbf4e
  405eb0:	xchg   esp,eax
  405eb1:	jae    0x405e48
  405eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eb4:	aaa    
  405eb5:	fnsave [edx]
  405eb7:	sti    
  405eb8:	loope  0x405ef9
  405eba:	mov    esp,0xf8da53c1
  405ebf:	dec    edx
  405ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec1:	mov    dh,0x75
  405ec3:	cmp    ch,bl
  405ec5:	scas   al,BYTE PTR es:[edi]
  405ec6:	data16 sbb BYTE PTR [ebx+0x61],cl
  405eca:	aam    0x1d
  405ecc:	outs   dx,BYTE PTR ds:[esi]
  405ecd:	cmc    
  405ece:	out    0x53,eax
  405ed0:	dec    ebx
  405ed1:	stos   DWORD PTR es:[edi],eax
  405ed2:	addr16 mov edi,0x7fe28f83
  405ed8:	(bad)  
  405ed9:	test   al,0x4c
  405edb:	mov    ?,WORD PTR [ebp-0x409f977b]
  405ee1:	mov    dh,bh
  405ee3:	xor    edx,ebp
  405ee5:	in     eax,0xbf
  405ee7:	xchg   BYTE PTR [ebx-0x4354862e],ah
  405eed:	jne    0x405f2e
  405eef:	test   al,0x48
  405ef1:	xor    cl,BYTE PTR cs:[edx-0x61]
  405ef5:	xchg   edx,eax
  405ef6:	inc    esp
  405ef7:	out    0xbf,eax
  405ef9:	push   ebp
  405efa:	push   eax
  405efb:	ds mov edx,0x2b36b36c
  405f01:	ja     0x405ee7
  405f03:	shr    DWORD PTR [eax-0x7e],cl
  405f06:	mov    eax,ds:0x23fa5c1c
  405f0b:	add    eax,0x4dabe59e
  405f10:	cmp    ebx,ebp
  405f12:	je     0x405eba
  405f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f15:	hlt    
  405f16:	imul   edx,edi,0x69
  405f19:	jl     0x405ee7
  405f1b:	leave  
  405f1c:	jo     0x405f98
  405f1e:	pusha  
  405f1f:	jmp    0x405ef8
  405f21:	arpl   WORD PTR [edi+eiz*2-0x5c0a59b1],ax
  405f28:	mov    dl,0x46
  405f2a:	not    DWORD PTR [esi]
  405f2c:	popf   
  405f2d:	jns    0x405ed6
  405f2f:	cmp    al,0x8e
  405f31:	mov    dl,0x88
  405f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f34:	mov    ch,0x96
  405f36:	inc    edi
  405f37:	sbb    BYTE PTR [edx],dl
  405f39:	clc    
  405f3a:	or     DWORD PTR [edi+0x35],ecx
  405f3d:	mov    cl,0xb8
  405f3f:	lods   eax,DWORD PTR ds:[esi]
  405f40:	adc    al,0xd6
  405f42:	stos   DWORD PTR es:[edi],eax
  405f43:	add    BYTE PTR [esi+0xb2e108b],bl
  405f49:	sub    DWORD PTR [ebp-0x2089f7f],eax
  405f4f:	fiadd  WORD PTR [edi+0x395ce993]
  405f55:	jae    0x405f4a
  405f57:	xor    ecx,DWORD PTR [ebp+0x76360277]
  405f5d:	sbb    DWORD PTR [edx],0x79
  405f60:	mov    ebx,0xd50b4f30
  405f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f66:	sub    ecx,DWORD PTR [eax+0x15]
  405f69:	pop    edi
  405f6a:	push   ds
  405f6b:	gs and esi,eax
  405f6e:	xor    DWORD PTR [edi-0x1a],0xffffffdc
  405f72:	aam    0xa4
  405f74:	adc    ecx,DWORD PTR [eax-0x67405e39]
  405f7a:	push   es
  405f7b:	sbb    eax,0x42453935
  405f80:	popa   
  405f81:	inc    edx
  405f82:	rcl    ecx,cl
  405f84:	fwait
  405f85:	cmp    esp,edx
  405f87:	pop    esi
  405f88:	sahf   
  405f89:	jmp    0x8fb8:0xf6078826
  405f90:	imul   eax,DWORD PTR [esi+0x37],0x27
  405f94:	jo     0x405f16
  405f96:	mov    ecx,0x2e0c9bbd
  405f9b:	mov    bl,0xbb
  405f9d:	add    esi,0x2f
  405fa0:	mov    edx,edx
  405fa2:	lds    edi,FWORD PTR [ecx-0x66]
  405fa5:	test   edx,ecx
  405fa7:	inc    eax
  405fa8:	cmovs  ebx,DWORD PTR ds:0x74db05f2
  405faf:	or     BYTE PTR [ecx+edx*2],al
  405fb2:	iret   
  405fb3:	cmp    eax,0xa6955231
  405fb8:	sub    al,0xae
  405fba:	inc    edi
  405fbb:	ins    BYTE PTR es:[edi],dx
  405fbc:	in     al,dx
  405fbd:	stos   BYTE PTR es:[edi],al
  405fbe:	push   edx
  405fbf:	pop    ebp
  405fc0:	mov    esi,0x356da5f5
  405fc5:	lahf   
  405fc6:	mov    ebx,0x62ff7925
  405fcb:	inc    BYTE PTR [edi-0x75b816d8]
  405fd1:	mov    edi,0x76d5efac
  405fd6:	fdiv   QWORD PTR [edx-0x482f3f77]
  405fdc:	out    0x65,al
  405fde:	inc    ebp
  405fdf:	xor    al,0x18
  405fe1:	(bad)  
  405fe2:	daa    
  405fe3:	outs   dx,BYTE PTR ds:[esi]
  405fe4:	or     BYTE PTR [edi+0x0],0xac
  405fe8:	cmp    ch,BYTE PTR [edx-0xe1e7999]
  405fee:	sub    al,0x5e
  405ff0:	xchg   edi,eax
  405ff1:	adc    BYTE PTR [ebp-0x74f200a0],cl
  405ff7:	iret   
  405ff8:	pop    esi
  405ff9:	les    edi,FWORD PTR [esi]
  405ffb:	hlt    
  405ffc:	cmp    BYTE PTR [ebx],0xf5
  405fff:	mov    bp,0x988d
  406003:	ror    BYTE PTR [ebp-0x612c0e82],0x62
  40600a:	pop    ecx
  40600b:	push   0xdc92beee
  406010:	xchg   ecx,eax
  406011:	inc    ecx
  406012:	mov    edi,0x27994f70
  406017:	push   es
  406018:	or     eax,0x16941cda
  40601d:	call   0x2ffe:0xba91c869
  406024:	stc    
  406025:	out    0x54,ax
  406028:	cmp    al,0x27
  40602a:	mov    ds:0xf89e66d8,eax
  40602f:	xor    eax,0x333266bd
  406034:	fild   DWORD PTR [edx-0x46]
  406037:	pop    ecx
  406038:	push   cs
  406039:	xor    eax,0x833d11c4
  40603e:	aas    
  40603f:	sar    DWORD PTR [ebx+0x45],1
  406042:	das    
  406043:	jle    0x406025
  406045:	inc    ebp
  406046:	cmp    BYTE PTR [ebp-0x74],bl
  406049:	ret    0x1347
  40604c:	out    dx,eax
  40604d:	cmp    BYTE PTR [esi+0xbf34163],dh
  406053:	int    0xb0
  406055:	mov    esi,0xa9183d07
  40605a:	xchg   edi,eax
  40605b:	adc    ecx,DWORD PTR [ebx+0x18995736]
  406061:	xchg   DWORD PTR [ebx],edx
  406063:	inc    ecx
  406064:	sbb    ah,BYTE PTR [ecx]
  406066:	xchg   esi,eax
  406067:	fmul   st(7),st
  406069:	inc    edx
  40606a:	ficomp DWORD PTR [esi]
  40606c:	popa   
  40606d:	pushf  
  40606e:	out    dx,eax
  40606f:	sbb    dl,BYTE PTR [esi+0x6]
  406072:	cmc    
  406073:	adc    edi,DWORD PTR [eax]
  406075:	inc    BYTE PTR [esi+0x11a7f61f]
  40607b:	ror    BYTE PTR ds:0x1a623111,1
  406081:	enter  0x9ea,0x16
  406085:	xor    al,0x86
  406087:	or     bh,BYTE PTR [ebp-0x3a863e58]
  40608d:	stos   DWORD PTR es:[edi],eax
  40608e:	outs   dx,DWORD PTR ds:[esi]
  40608f:	push   0x68
  406091:	jnp    0x4060f0
  406093:	xchg   edx,eax
  406094:	iret   
  406095:	ja     0x406093
  406097:	mov    ecx,0xdab80edb
  40609c:	xchg   ebx,eax
  40609d:	xchg   DWORD PTR [edx-0x1dbdd563],esp
  4060a3:	dec    ecx
  4060a4:	mov    bh,0xcc
  4060a6:	pop    edx
  4060a7:	ja     0x406084
  4060a9:	shl    BYTE PTR [ebp-0x71],0x6
  4060ad:	push   es
  4060ae:	inc    esp
  4060af:	add    DWORD PTR [ecx],ebp
  4060b1:	(bad)  
  4060b2:	cmp    eax,0x5b60fb2b
  4060b7:	jp     0x406046
  4060b9:	inc    esp
  4060ba:	push   ebp
  4060bb:	mov    bl,0x95
  4060bd:	addr16 out 0x4d,eax
  4060c0:	test   al,0x0
  4060c2:	and    al,0x49
  4060c4:	loop   0x406144
  4060c6:	mov    edi,0x2ff9b943
  4060cb:	pop    edx
  4060cc:	sbb    BYTE PTR [ecx-0x7],0xe4
  4060d0:	mov    edi,0xaf3c5a75
  4060d5:	(bad)  
  4060d6:	psllw  mm5,mm7
  4060d9:	stos   DWORD PTR es:[edi],eax
  4060da:	mov    bh,0x4a
  4060dc:	mov    cl,BYTE PTR [edi]
  4060de:	test   BYTE PTR [edx-0x36000004],al
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43466f
  406101:	mov    eax,ds:0x43471b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434653,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434653
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434653,ecx
  40612c:	cmp    DWORD PTR ds:0x434653,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434653,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434637,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43467b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43467b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43467b,ecx
  406175:	cmp    DWORD PTR ds:0x43467b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43467b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43467b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43467b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43467b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	jl     0x40618e
  4061c7:	das    
  4061c8:	pop    es
  4061c9:	jae    0x40620a
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x406177
  4061d2:	add    eax,0xecf8d6ed
  4061d7:	int3   
  4061d8:	jl     0x4061bb
  4061da:	mov    dl,BYTE PTR [ecx-0x1c119261]
  4061e0:	sbb    eax,0x3afbe801
  4061e5:	dec    edx
  4061e6:	xor    edx,ecx
  4061e8:	aad    0xcc
  4061ea:	ins    DWORD PTR es:[edi],dx
  4061eb:	or     eax,0xaec7f6b7
  4061f0:	pop    ss
  4061f1:	out    0xff,al
  4061f3:	ret    0xe04c
  4061f6:	jmp    0x413d27b7
  4061fb:	xchg   BYTE PTR [ebx+0x47f9a417],bl
  406201:	enter  0x2cdb,0xb9
  406205:	les    edx,FWORD PTR [edi+0x43]
  406208:	mov    eax,0x51bfc351
  40620d:	jecxz  0x4061fc
  40620f:	adc    dl,bh
  406211:	sub    DWORD PTR [ebx-0x15],eax
  406214:	inc    ebp
  406215:	jp     0x40619a
  406217:	sbb    DWORD PTR [eax-0x2f087e0d],esi
  40621d:	mov    edx,0xb3883edc
  406222:	mov    dl,0x69
  406224:	icebp  
  406225:	or     edi,DWORD PTR [edi+0x44]
  406228:	xor    al,0x29
  40622a:	mov    bh,ah
  40622c:	mov    ds:0xbe78bef8,al
  406231:	or     al,0x68
  406233:	mov    ds:0x9b435728,al
  406238:	mov    al,0xb5
  40623a:	cmp    DWORD PTR [esi+0x76],ebx
  40623d:	out    dx,eax
  40623e:	pop    ss
  40623f:	cmp    DWORD PTR [esp+ebx*2+0x85720a7],edx
  406246:	lds    eax,FWORD PTR [eax]
  406248:	add    DWORD PTR es:[ebx],ecx
  40624b:	mov    ebx,0xe804bef7
  406250:	(bad)  
  406251:	jmp    0x406225
  406253:	mov    ecx,0xe0646f52
  406258:	and    dl,al
  40625a:	out    0xd7,eax
  40625c:	push   esp
  40625d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40625e:	enter  0x3041,0x69
  406262:	pop    edx
  406263:	mov    esi,0x2081786d
  406268:	fs mov ch,0xea
  40626b:	mov    esi,0x1a9152c
  406270:	pop    eax
  406271:	je     0x406208
  406273:	or     DWORD PTR [esi],ebx
  406275:	out    dx,al
  406276:	push   ecx
  406277:	mov    bh,0xad
  406279:	pop    ebx
  40627a:	adc    dh,BYTE PTR [eax-0x74]
  40627d:	jp     0x4062c1
  40627f:	daa    
  406280:	jmp    0x406278
  406282:	push   es
  406283:	addr16 pushf 
  406285:	mov    ebx,0x28d4c6ac
  40628a:	mov    dh,0x2d
  40628c:	cdq    
  40628d:	sar    BYTE PTR [edi+0x6c9dee1b],cl
  406293:	push   edx
  406294:	pop    ds
  406295:	loopne 0x406255
  406297:	in     eax,0xe9
  406299:	leave  
  40629a:	sti    
  40629b:	inc    ebx
  40629c:	das    
  40629d:	je     0x4062a3
  40629f:	pop    esi
  4062a0:	push   0x91047ca7
  4062a5:	pop    ss
  4062a6:	sbb    BYTE PTR [ebp+ebx*8-0x601bdb7c],bh
  4062ad:	mov    eax,ds:0x7e9fd628
  4062b2:	jecxz  0x406327
  4062b4:	adc    DWORD PTR ss:[ebx+0x4b],esp
  4062b8:	fimul  DWORD PTR [edx-0x6c17676]
  4062be:	out    0x76,al
  4062c0:	lods   eax,DWORD PTR ds:[esi]
  4062c1:	shl    DWORD PTR [edx],1
  4062c3:	das    
  4062c4:	pop    esi
  4062c5:	imul   ebx,eax,0x64cc1344
  4062cb:	ficom  DWORD PTR [eax+0x4f]
  4062ce:	es pop ss
  4062d0:	pop    ss
  4062d1:	add    ebp,eax
  4062d3:	leave  
  4062d4:	push   ds
  4062d5:	data16 fwait
  4062d7:	push   ss
  4062d8:	inc    esp
  4062d9:	rcr    DWORD PTR [ebx+0x3341665f],cl
  4062df:	test   DWORD PTR [esi],esp
  4062e1:	xor    edi,DWORD PTR [ebx]
  4062e3:	and    BYTE PTR [esi-0x30],bl
  4062e6:	inc    edx
  4062e7:	in     eax,0xb4
  4062e9:	jmp    0xf0f0:0x6d42ea8f
  4062f0:	xchg   ebx,eax
  4062f1:	lds    ecx,FWORD PTR [ebx-0x7c]
  4062f4:	js     0x40627e
  4062f6:	mov    dl,0x37
  4062f8:	inc    ecx
  4062f9:	sub    BYTE PTR [ecx+0x131a2da],0xba
  406300:	popa   
  406301:	push   0xeaf0d039
  406306:	xchg   DWORD PTR [eax],edx
  406308:	xchg   ecx,eax
  406309:	sar    BYTE PTR [ecx+0x64],1
  40630c:	inc    eax
  40630d:	sahf   
  40630e:	xchg   esi,eax
  40630f:	and    BYTE PTR gs:[eax+ecx*4+0x3c5f2445],bl
  406317:	adc    bl,al
  406319:	dec    eax
  40631a:	adc    DWORD PTR [eax],0x41
  40631d:	push   ebx
  40631e:	inc    edi
  40631f:	into   
  406320:	cmp    DWORD PTR [ebx-0x36],eax
  406323:	in     eax,0x46
  406325:	or     esi,DWORD PTR [eax-0x6ad7de01]
  40632b:	add    eax,0xbc23790f
  406330:	xchg   eax,eax
  406332:	sub    BYTE PTR [ecx+0x727e64bc],ah
  406338:	pop    eax
  406339:	mov    WORD PTR [eax],cs
  40633b:	jo     0x4062e6
  40633d:	out    dx,eax
  40633e:	enter  0x504e,0x6a
  406342:	(bad)  
  406344:	mov    edi,0x3e9eeadd
  406349:	dec    edx
  40634a:	xchg   edx,eax
  40634b:	out    dx,al
  40634c:	rcl    DWORD PTR [edi],cl
  40634e:	repnz ins DWORD PTR es:[edi],dx
  406350:	rcr    DWORD PTR [esi-0x45],cl
  406353:	jl     0x1734a90b
  406359:	cmc    
  40635a:	jo     0x4063a5
  40635c:	mov    edi,0x6021e6b1
  406361:	inc    DWORD PTR [ebx-0x70fb580e]
  406367:	add    al,0xa6
  406369:	mov    DWORD PTR [ecx],edi
  40636b:	sbb    eax,0x930acad3
  406370:	aaa    
  406371:	xchg   esi,eax
  406372:	adc    eax,0x7d194d3e
  406377:	pop    eax
  406378:	mov    bh,0x19
  40637a:	outs   dx,BYTE PTR ds:[esi]
  40637b:	mov    esi,0x51bdd232
  406380:	jl     0x4063ef
  406382:	lock (bad) 
  406384:	call   0x1df47519
  406389:	test   al,0x18
  40638b:	fsub   DWORD PTR [ecx]
  40638d:	or     DWORD PTR [ebx+0x2b8163a7],0x76
  406394:	sbb    BYTE PTR [esi],bh
  406396:	stc    
  406397:	or     DWORD PTR [edi+0x64642e2],0x49
  40639e:	outs   dx,DWORD PTR ds:[esi]
  40639f:	inc    esi
  4063a0:	addr16 sub al,0xf4
  4063a3:	call   0xb0ef:0xb167ae7f
  4063aa:	push   eax
  4063ab:	inc    esp
  4063ac:	xchg   edx,eax
  4063ad:	pop    ss
  4063ae:	and    ebx,DWORD PTR [edx+0x8bb6d63]
  4063b4:	inc    esi
  4063b5:	fdiv   st,st(4)
  4063b7:	jnp    0x406346
  4063b9:	(bad)  
  4063ba:	pop    edi
  4063bb:	test   BYTE PTR [eax],0xf5
  4063be:	xchg   DWORD PTR [edx],edx
  4063c0:	sub    BYTE PTR [ebp-0x17],ch
  4063c3:	push   ss
  4063c4:	add    BYTE PTR [edx],ah
  4063c6:	sbb    bl,0xaf
  4063c9:	pop    esp
  4063ca:	or     ch,0x81
  4063cd:	call   0x4950:0x3566ae6b
  4063d4:	sbb    al,0x86
  4063d6:	inc    ebx
  4063d7:	inc    edx
  4063d8:	scas   eax,DWORD PTR es:[edi]
  4063d9:	fdiv   QWORD PTR [edx-0x47]
  4063dc:	pop    ebp
  4063dd:	nop
  4063de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063df:	sbb    eax,0xe51f6f5f
  4063e4:	cmc    
  4063e5:	pop    ss
  4063e6:	pop    es
  4063e7:	outs   dx,BYTE PTR ds:[esi]
  4063e8:	leave  
  4063e9:	mov    ch,0x22
  4063eb:	push   eax
  4063ec:	arpl   WORD PTR [ebx-0x1cf65182],sp
  4063f2:	test   BYTE PTR [ebx-0x4149f135],dh
  4063f8:	inc    edx
  4063f9:	mov    dl,0xa8
  4063fb:	mov    esp,DWORD PTR [eax+0x44]
  4063fe:	inc    ebx
  4063ff:	loope  0x406406
  406401:	push   cs
  406402:	pushf  
  406403:	mov    BYTE PTR [edx],0xb0
  406406:	(bad)  
  406407:	adc    al,0x83
  406409:	jns    0x4063c6
  40640b:	in     eax,dx
  40640c:	fs loopne 0x40645f
  40640f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406410:	push   ecx
  406411:	sbb    eax,0xa81b8d09
  406416:	xchg   esi,eax
  406417:	imul   esp,DWORD PTR cs:[ebx+0x2cbbeda2],0x79
  40641f:	jp     0x40648d
  406421:	popf   
  406422:	clc    
  406423:	mov    eax,DWORD PTR [ecx+0x6e43cff6]
  406429:	enter  0x51b6,0xad
  40642d:	mov    edx,0x4d26fec6
  406432:	dec    eax
  406433:	stos   BYTE PTR es:[edi],al
  406434:	dec    edx
  406435:	mov    bh,0xbd
  406437:	popa   
  406438:	fild   WORD PTR [esi]
  40643a:	push   es
  40643b:	sub    DWORD PTR ds:0xbaf3eb26,ebp
  406441:	jo     0x40640b
  406443:	xchg   BYTE PTR [edi+0x3d8facc],ch
  406449:	mov    ebx,DWORD PTR [esi]
  40644b:	xor    al,0x2c
  40644d:	hlt    
  40644e:	(bad)  
  40644f:	mov    ebx,0x47ef20db
  406454:	mov    ds:0x2d43afc7,al
  406459:	xchg   esp,eax
  40645a:	(bad)  
  40645b:	retf   
  40645c:	cs inc ecx
  40645e:	sbb    cl,al
  406460:	mov    BYTE PTR [edi],al
  406462:	mov    ah,0xc3
  406464:	push   esp
  406465:	dec    esi
  406466:	pop    edx
  406467:	ret    
  406468:	adc    dh,BYTE PTR [ebp-0x25]
  40646b:	xor    esi,DWORD PTR [ebx+0x31d744f7]
  406471:	pop    es
  406472:	sti    
  406473:	call   0x3858:0x57195aba
  40647a:	sub    edi,edx
  40647c:	mov    BYTE PTR [edx],ah
  40647e:	addr16 pop edx
  406480:	mov    edi,0x4bee85a3
  406485:	outs   dx,BYTE PTR ds:[esi]
  406486:	mov    esp,0x9b0184e3
  40648b:	cmp    eax,0x7d50012f
  406490:	clc    
  406491:	or     eax,0x38028b44
  406496:	or     bh,BYTE PTR [edx-0x5]
  406499:	push   edx
  40649a:	xchg   edi,eax
  40649b:	inc    ebx
  40649c:	xlat   BYTE PTR ds:[ebx]
  40649d:	lods   al,BYTE PTR ds:[esi]
  40649e:	lods   eax,DWORD PTR ds:[esi]
  40649f:	jbe    0xc226bcf9
  4064a5:	ins    BYTE PTR es:[di],dx
  4064a7:	ins    BYTE PTR es:[edi],dx
  4064a8:	or     al,0xb9
  4064aa:	ficom  DWORD PTR [esi+0x41a9a3fb]
  4064b0:	test   DWORD PTR [esp+ecx*2-0x55c3cf4c],0x1e4c306
  4064bb:	out    0x18,eax
  4064bd:	push   es
  4064be:	adc    al,0x46
  4064c0:	inc    ebx
  4064c1:	retf   
  4064c2:	mov    cl,0xda
  4064c4:	mov    ah,0xf6
  4064c6:	cli    
  4064c7:	jecxz  0x406527
  4064c9:	(bad)  
  4064ca:	xor    DWORD PTR [ebx+0x12066089],eax
  4064d0:	sub    cl,BYTE PTR [edi+0x5038888a]
  4064d6:	push   ds
  4064d7:	mov    eax,DWORD PTR [edx]
  4064d9:	mov    bl,0x1f
  4064db:	and    ch,ah
  4064dd:	loop   0x4064f5
  4064df:	imul   eax,ecx,0xffffffb4
  4064e2:	test   BYTE PTR [esi+0x8],dh
  4064e5:	in     al,0x4e
  4064e7:	sbb    edi,DWORD PTR [edx+0x2391de45]
  4064ed:	pushaw 
  4064ef:	and    eax,0xf5dac472
  4064f4:	rol    BYTE PTR ds:[eax-0x7a7086a],cl
  4064fb:	jne    0x406579
  4064fd:	mov    tr3,ebp
  406500:	inc    ebx
  406501:	pop    esp
  406502:	jno    0x4064ac
  406504:	in     al,dx
  406505:	push   esi
  406506:	inc    edi
  406507:	push   esi
  406508:	(bad)  
  406509:	and    DWORD PTR [esi+0xd19ad34],edx
  40650f:	loop   0x406498
  406511:	push   edx
  406512:	rcl    BYTE PTR [ecx+0x1b],0x71
  406516:	mov    eax,0x2290e38
  40651b:	and    al,0x40
  40651d:	sahf   
  40651e:	ror    BYTE PTR [ebx],1
  406520:	into   
  406521:	push   edx
  406522:	or     al,0xcc
  406524:	dec    esi
  406525:	inc    ecx
  406526:	stc    
  406527:	jmp    0x49bf15f6
  40652c:	jno    0x4064da
  40652e:	ficomp WORD PTR [bp+di+0x12]
  406532:	cmp    DWORD PTR [ecx-0x19d09661],ecx
  406538:	cli    
  406539:	hlt    
  40653a:	in     al,0x4c
  40653c:	push   ebp
  40653d:	jle    0x4064fc
  40653f:	xchg   ebp,eax
  406540:	sar    esi,1
  406542:	adc    al,0x56
  406544:	shl    ah,0x6f
  406547:	mov    cl,0xa9
  406549:	pop    ss
  40654a:	mov    edx,DWORD PTR [eax-0x132b053b]
  406550:	rol    esi,0x65
  406553:	push   ds
  406554:	push   ecx
  406555:	into   
  406556:	sbb    eax,0xea26151f
  40655b:	std    
  40655c:	add    dl,BYTE PTR [esi-0x35c6791a]
  406562:	xchg   edx,eax
  406563:	push   es
  406564:	push   cs
  406565:	mov    BYTE PTR [ecx-0x57],cl
  406568:	mov    ah,0x22
  40656a:	dec    edi
  40656b:	pop    esp
  40656c:	or     DWORD PTR ds:0x89f15a95,0x3908601e
  406576:	sub    BYTE PTR [esi+0x74],ch
  406579:	in     al,dx
  40657a:	scas   eax,DWORD PTR es:[edi]
  40657b:	rcr    BYTE PTR [ecx-0x13f63307],0xc9
  406582:	push   esp
  406583:	aaa    
  406584:	dec    ebx
  406585:	repz and BYTE PTR [eax],cl
  406588:	push   es
  406589:	add    BYTE PTR [esi+0x2d],dh
  40658c:	leave  
  40658d:	loop   0x406543
  40658f:	mov    al,al
  406591:	jae    0x406608
  406593:	xor    BYTE PTR [ebp-0x3f9b0ef6],0x37
  40659a:	sbb    DWORD PTR [ebx],ecx
  40659c:	xchg   ebx,eax
  40659d:	jo     0x4065e1
  40659f:	xor    BYTE PTR [ebx-0x23ba72c6],dh
  4065a5:	movzx  ecx,WORD PTR ds:0x4346bb
  4065ac:	and    ecx,DWORD PTR ds:0x4345f3
  4065b2:	mov    DWORD PTR ds:0x4346bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4345ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43470f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4345f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43464f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4345eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4345eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4345eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4345eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434647
  40660f:	push   0x43491f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4345eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	push   0x4cff2346
  40663d:	cmp    edi,DWORD PTR [esi+0x7e]
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x40669c
  406645:	sbb    al,0x47
  406647:	out    dx,eax
  406648:	das    
  406649:	push   ebp
  40664a:	add    ebp,ebx
  40664c:	add    eax,0xa048221d
  406651:	push   es
  406652:	jnp    0x406671
  406654:	rcl    esi,1
  406656:	ins    DWORD PTR es:[edi],dx
  406657:	add    eax,0x8a6e2b54
  40665c:	push   edx
  40665d:	jl     0x406648
  40665f:	es imul edx,esp,0x36ce0567
  406666:	mov    es,WORD PTR [edx]
  406668:	xchg   esi,eax
  406669:	ret    0x3e26
  40666c:	(bad)  
  40666d:	mov    ah,0x65
  40666f:	cmp    DWORD PTR [esi+0x52],edi
  406672:	ret    
  406673:	or     ch,BYTE PTR [ecx-0x4a]
  406676:	xchg   edx,eax
  406677:	mov    al,0xb6
  406679:	adc    eax,0xffa6f8d6
  40667e:	add    ch,ch
  406680:	fs sti 
  406682:	or     eax,0xbad4451c
  406687:	add    BYTE PTR [ebp+0x23aaf185],dh
  40668d:	push   0xff108f3d
  406692:	mov    ds:0x96d69ea4,eax
  406697:	add    eax,0x2c5ce649
  40669c:	std    
  40669d:	mov    edx,0xd5db4542
  4066a2:	mov    bl,0x50
  4066a4:	and    cl,BYTE PTR ds:0x39802dde
  4066aa:	pop    esp
  4066ab:	mov    ecx,0xa3917f7e
  4066b0:	xchg   ebp,eax
  4066b1:	sahf   
  4066b2:	cmc    
  4066b3:	adc    ah,BYTE PTR [ecx+0x2]
  4066b6:	div    BYTE PTR [eax-0x23]
  4066b9:	mov    eax,ds:0xcf5e472b
  4066be:	mov    dh,0x8a
  4066c0:	mov    al,ds:0x4e3ad189
  4066c5:	inc    edx
  4066c6:	ja     0x4066cd
  4066c8:	in     al,0x60
  4066ca:	loopne 0x40667a
  4066cc:	push   ss
  4066cd:	sbb    edx,esi
  4066cf:	mov    ?,WORD PTR [esi-0x43fc2919]
  4066d5:	xlat   BYTE PTR ds:[ebx]
  4066d6:	adc    dh,al
  4066d8:	call   ebx
  4066da:	and    eax,0x93eef3c0
  4066df:	jb     0x4066f3
  4066e1:	call   0xc2ebe692
  4066e6:	mov    WORD PTR [ebx+0x47036569],ds
  4066ec:	rcr    DWORD PTR [edx-0x3b],0x17
  4066f0:	adc    dl,BYTE PTR [edx+0x36]
  4066f3:	xor    BYTE PTR [edi],bh
  4066f5:	loop   0x40670d
  4066f7:	out    dx,eax
  4066f8:	mov    edi,0xca3e3c9d
  4066fd:	(bad)  
  4066fe:	push   ds
  4066ff:	(bad)  [edi+0xdbad6d1]
  406705:	sahf   
  406706:	cmp    ah,bh
  406708:	sar    BYTE PTR [ebp-0x1305bb5],0x1c
  40670f:	pop    esp
  406710:	sub    eax,0xc7e54a51
  406715:	xchg   BYTE PTR [ecx+0x6f7a3b51],dh
  40671b:	inc    eax
  40671c:	dec    eax
  40671d:	leave  
  40671e:	and    dl,BYTE PTR ds:0x3cfb2072
  406724:	cld    
  406725:	adc    eax,0xf19b5ae0
  40672a:	(bad)  
  40672b:	sar    bh,1
  40672d:	js     0x4066ce
  40672f:	retf   0xd79f
  406732:	mov    edx,0x849644f
  406737:	fidivr DWORD PTR [ecx+0x463d5630]
  40673d:	fsubp  st(1),st
  40673f:	and    DWORD PTR [esi],edi
  406741:	stos   DWORD PTR es:[edi],eax
  406742:	sub    DWORD PTR [ecx],esp
  406744:	jo     0x40672e
  406746:	clc    
  406747:	cmovo  ebp,edx
  40674a:	lods   eax,DWORD PTR ds:[esi]
  40674b:	pop    ss
  40674c:	adc    ch,ch
  40674e:	adc    edi,DWORD PTR [ecx+0x7]
  406751:	(bad)
  406754:	mov    eax,ds:0x20767df9
  406759:	int    0xea
  40675b:	repz cmp al,0x35
  40675e:	idiv   DWORD PTR gs:[ecx+0x56e404e9]
  406765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406766:	mov    bh,0xcb
  406768:	xchg   edi,eax
  406769:	out    dx,al
  40676a:	push   ebp
  40676b:	(bad)  
  40676c:	into   
  40676d:	pop    ds
  40676e:	cmp    edi,DWORD PTR [edx-0xab4f8c0]
  406774:	add    al,dh
  406776:	push   esi
  406777:	mov    esp,0x1a5a495c
  40677c:	pop    ss
  40677d:	cmc    
  40677e:	lock sbb ecx,eax
  406781:	sbb    esp,ebp
  406783:	push   ebp
  406784:	mov    ebx,0x2a021edc
  406789:	aaa    
  40678a:	push   eax
  40678b:	int    0x17
  40678d:	shr    BYTE PTR [eax],cl
  40678f:	push   edx
  406790:	rol    DWORD PTR [esi+esi*1],cl
  406793:	cmp    al,0x18
  406795:	xor    DWORD PTR [edx],ebx
  406797:	mov    ecx,0x407672f0
  40679c:	cmp    BYTE PTR ds:0x44699c2f,bh
  4067a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a3:	xor    bl,al
  4067a5:	cmp    BYTE PTR [ebx],bl
  4067a7:	enter  0x65fb,0x7b
  4067ab:	stos   DWORD PTR es:[edi],eax
  4067ac:	imul   esi,DWORD PTR [edi+0x4ae1edb1],0x2cbbde98
  4067b6:	inc    eax
  4067b7:	aaa    
  4067b8:	je     0x40680e
  4067ba:	mov    ebp,eax
  4067bc:	add    BYTE PTR [esi+0x41],dl
  4067bf:	addr16 cs xchg esp,eax
  4067c2:	pop    ds
  4067c3:	and    DWORD PTR [ebp-0xc61cf33],ecx
  4067c9:	out    0x19,eax
  4067cb:	stc    
  4067cc:	mov    ch,0x12
  4067ce:	or     cl,cl
  4067d0:	cmp    eax,0x745ffabe
  4067d5:	inc    esi
  4067d6:	js     0x406845
  4067d8:	pop    ecx
  4067d9:	add    BYTE PTR [ebx],cl
  4067db:	dec    ebp
  4067dc:	psubq  mm6,QWORD PTR [edx]
  4067df:	sub    al,0x33
  4067e1:	fsubr  st(0),st
  4067e3:	in     eax,dx
  4067e4:	adc    ebx,DWORD PTR [ecx+0xf282c0b]
  4067ea:	or     ebx,DWORD PTR [esi]
  4067ec:	(bad)  
  4067ee:	xor    ah,BYTE PTR [eax]
  4067f0:	dec    esp
  4067f1:	das    
  4067f2:	dec    ebp
  4067f3:	mov    eax,ds:0x37c02761
  4067f8:	jns    0x406809
  4067fa:	popa   
  4067fb:	xchg   BYTE PTR [edi-0x3b7b3ea1],ah
  406801:	jle    0x40686d
  406803:	test   DWORD PTR [esi],esi
  406805:	nop
  406806:	push   ecx
  406807:	pop    es
  406808:	sbb    DWORD PTR [ebp+0x141beb52],ebp
  40680e:	mov    ch,BYTE PTR [edi+0x236cbb3c]
  406814:	push   edi
  406815:	xchg   edx,eax
  406816:	loop   0x4067f0
  406818:	mov    ch,0x1b
  40681a:	jbe    0x406839
  40681c:	dec    esp
  40681d:	xor    bh,BYTE PTR [ebp-0x6b]
  406820:	xor    al,0x7c
  406822:	popf   
  406823:	mov    edi,0x8c640e38
  406828:	arpl   WORD PTR [edi-0x66],dx
  40682b:	mov    cl,0x1a
  40682d:	stos   DWORD PTR es:[edi],eax
  40682e:	xor    esp,eax
  406830:	imul   esi,ecx,0xffffffd1
  406833:	(bad)  
  406834:	outs   dx,BYTE PTR ds:[esi]
  406835:	inc    edi
  406836:	mov    WORD PTR fs:[eax-0x6c],?
  40683a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40683b:	shr    eax,0xf6
  40683e:	mov    esp,0x48fc918e
  406843:	fwait
  406844:	push   ss
  406845:	xor    BYTE PTR [eax],cl
  406847:	es int3 
  406849:	xchg   esi,eax
  40684a:	add    bl,al
  40684c:	sar    DWORD PTR [edx-0x61f3cc90],cl
  406852:	xchg   edx,eax
  406853:	aam    0x8c
  406855:	inc    eax
  406856:	xchg   edx,eax
  406857:	inc    ebx
  406858:	in     eax,dx
  406859:	xor    DWORD PTR [ebp+ecx*1+0x7330f43f],ebx
  406860:	pop    edi
  406861:	sbb    ah,BYTE PTR [edx+ecx*1+0x75]
  406865:	fs xchg ebp,eax
  406867:	inc    edi
  406868:	scas   eax,DWORD PTR es:[edi]
  406869:	mov    al,0x7c
  40686b:	(bad)  
  40686c:	fdiv   st,st(3)
  40686e:	ins    BYTE PTR es:[edi],dx
  40686f:	ficom  DWORD PTR [ecx+0x4]
  406872:	rcr    DWORD PTR [esi-0x56794ba5],cl
  406878:	test   BYTE PTR [ecx+ebx*4+0x3e],dl
  40687c:	sub    al,0x1
  40687e:	retf   
  40687f:	mov    dh,0x80
  406881:	fsub   st,st(2)
  406883:	int3   
  406884:	ins    BYTE PTR es:[edi],dx
  406885:	into   
  406886:	scas   eax,DWORD PTR es:[edi]
  406887:	fdiv   DWORD PTR [ecx]
  406889:	leave  
  40688a:	pop    ss
  40688b:	cmp    eax,0x5d290715
  406890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406891:	iret   
  406892:	dec    edx
  406893:	(bad)  
  406894:	rol    cl,1
  406896:	js     0x4068f8
  406898:	das    
  406899:	and    esp,esi
  40689b:	xchg   esi,eax
  40689c:	fsub   DWORD PTR [ecx-0x14553dfd]
  4068a2:	jae    0x4068b5
  4068a4:	or     al,0x4e
  4068a6:	fwait
  4068a7:	in     eax,dx
  4068a8:	js     0x406843
  4068aa:	ja     0x406845
  4068ac:	shl    BYTE PTR [esi],cl
  4068ae:	std    
  4068af:	outs   dx,DWORD PTR ds:[esi]
  4068b0:	push   edi
  4068b1:	adc    bh,BYTE PTR [edx]
  4068b3:	mov    bl,0x3b
  4068b5:	fisub  WORD PTR [edi]
  4068b7:	push   ebx
  4068b8:	xor    al,0x69
  4068ba:	jmp    0x133b20c1
  4068bf:	inc    ebp
  4068c0:	mov    al,0xc6
  4068c2:	ins    DWORD PTR es:[edi],dx
  4068c3:	sbb    DWORD PTR [eax+0x69],ebx
  4068c6:	fcmovu st,st(0)
  4068c8:	fbstp  TBYTE PTR [eax]
  4068ca:	sbb    eax,0x2915f529
  4068cf:	pop    edx
  4068d0:	pop    ss
  4068d1:	adc    eax,0x6b143312
  4068d6:	dec    esi
  4068d7:	or     al,0xd7
  4068d9:	out    dx,eax
  4068da:	frstorw [esi+0x2dd3d5ac]
  4068e1:	mov    dh,cl
  4068e3:	iret   
  4068e4:	lds    esp,FWORD PTR [edx+0x654dc054]
  4068ea:	hlt    
  4068eb:	jmp    0xda501587
  4068f0:	pusha  
  4068f1:	dec    edi
  4068f2:	cld    
  4068f3:	add    DWORD PTR [eax],esi
  4068f5:	mov    esi,0x9b7848d5
  4068fa:	push   esi
  4068fb:	sub    al,0x3f
  4068fd:	and    BYTE PTR [edx],ch
  4068ff:	lds    ecx,FWORD PTR ss:[esi]
  406902:	arpl   bx,bx
  406904:	lock push cs
  406906:	fwait
  406907:	retf   0x1d1e
  40690a:	gs arpl WORD PTR fs:[edi+0x55b50bce],cx
  406912:	inc    esi
  406913:	cmp    ecx,DWORD PTR [ecx-0x76]
  406916:	pusha  
  406917:	cmp    BYTE PTR [ecx+0x3a],ch
  40691a:	and    eax,ebx
  40691c:	mov    eax,0x9eade231
  406921:	push   ebx
  406922:	mov    bl,0xd2
  406924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406925:	mov    cl,0x16
  406927:	pop    eax
  406928:	or     al,0xc7
  40692a:	lock and ecx,ebx
  40692d:	mov    al,ds:0xee7a7b53
  406932:	xchg   edi,eax
  406933:	jne    0x406911
  406935:	dec    edi
  406936:	es jecxz 0x40699f
  406939:	addr16 int 0x43
  40693c:	inc    eax
  40693d:	push   edi
  40693e:	pusha  
  40693f:	fwait
  406940:	mov    eax,ds:0xfac301c9
  406945:	outs   dx,DWORD PTR ds:[esi]
  406946:	or     BYTE PTR [edi-0x4],ch
  406949:	sub    BYTE PTR [esp+ebx*2+0xd458e08],0xe2
  406951:	push   ss
  406952:	jge    0x406934
  406954:	inc    esp
  406955:	stos   BYTE PTR es:[edi],al
  406956:	mov    ebx,0xd790983b
  40695b:	scas   al,BYTE PTR es:[edi]
  40695c:	xchg   DWORD PTR [ebx],eax
  40695e:	loop   0x406981
  406960:	mov    ah,0x4a
  406962:	es push 0xffffffe2
  406965:	cli    
  406966:	jne    0x406965
  406968:	retf   0x66f
  40696b:	lock dec ebp
  40696d:	mov    ds:0x1ff4a7b2,al
  406972:	inc    cx
  406974:	xor    DWORD PTR [ecx],esi
  406976:	jl     0x406910
  406978:	cmp    BYTE PTR [eax+0x63],al
  40697b:	jns    0x4069e3
  40697d:	sahf   
  40697e:	dec    ebx
  40697f:	hlt    
  406980:	push   0x540bc73d
  406985:	mov    ebx,0x18b02e5e
  40698a:	push   ecx
  40698b:	shl    BYTE PTR [eax],1
  40698d:	stc    
  40698e:	and    ebx,DWORD PTR [edi+0x99906af]
  406994:	fcmovnb st,st(6)
  406996:	loope  0x4069c1
  406998:	lahf   
  406999:	inc    edx
  40699a:	and    eax,0x397646c9
  40699f:	cdq    
  4069a0:	or     al,0xa8
  4069a2:	pop    esi
  4069a3:	or     bl,dl
  4069a5:	xchg   DWORD PTR gs:0xd8c9c618,edi
  4069ac:	xchg   ebp,eax
  4069ad:	das    
  4069ae:	or     edi,0x31
  4069b1:	inc    edi
  4069b2:	cmc    
  4069b3:	lea    edi,[edx-0x769cb8b3]
  4069b9:	test   BYTE PTR [ebp+0x5b],ch
  4069bc:	mov    bh,0xb8
  4069be:	pop    ecx
  4069bf:	xor    ah,BYTE PTR [edx-0x3f]
  4069c2:	shl    DWORD PTR [edi+0x3417d251],cl
  4069c8:	and    edi,esi
  4069ca:	adc    al,0x12
  4069cc:	cmp    BYTE PTR [edi+0x6a],bh
  4069cf:	je     0x406a0d
  4069d1:	or     ebx,DWORD PTR [esi+eiz*1-0x63c9c45d]
  4069d8:	lahf   
  4069d9:	loope  0x406a44
  4069db:	mov    esp,edi
  4069dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069de:	mov    eax,0xd0ff6153
  4069e3:	dec    edx
  4069e4:	xlat   BYTE PTR ds:[ebx]
  4069e5:	fwait
  4069e6:	and    dl,BYTE PTR [edx+0xe5fd7e]
  4069ec:	cmp    bl,ah
  4069ee:	pop    ebx
  4069ef:	sbb    BYTE PTR [esi+0x39ecb77f],ch
  4069f5:	ret    0x2b32
  4069f8:	cmp    BYTE PTR [esi+0x28767352],bl
  4069fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ff:	lds    eax,FWORD PTR [edx]
  406a01:	push   ds
  406a02:	mov    edi,0x3606f450
  406a07:	ret    
  406a08:	xor    DWORD PTR [ebx],esi
  406a0a:	cmc    
  406a0b:	fsubr  DWORD PTR [ebx+0x7b]
  406a0e:	mov    DWORD PTR [eax],ecx
  406a10:	ins    BYTE PTR es:[edi],dx
  406a11:	push   ecx
  406a12:	and    al,0x4c
  406a14:	(bad)  
  406a15:	push   esi
  406a16:	push   edi
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434683,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4345fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43463b,0x4346f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4345df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434637,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0xb3e317eb,eax
  406a76:	xchg   ebp,eax
  406a77:	popf   
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a27
  406a80:	in     al,dx
  406a81:	or     ebx,edx
  406a83:	add    al,0x2b
  406a85:	mov    edx,0x39ea1744
  406a8a:	mov    ah,0x48
  406a8c:	xchg   ecx,eax
  406a8d:	pop    edx
  406a8e:	xor    BYTE PTR ds:0xcd3604d7,cl
  406a94:	add    edx,eax
  406a96:	cmp    edi,DWORD PTR [eax+0x49]
  406a99:	xchg   esi,eax
  406a9a:	stos   BYTE PTR es:[edi],al
  406a9b:	adc    dl,bh
  406a9d:	stos   BYTE PTR es:[edi],al
  406a9e:	cld    
  406a9f:	and    ah,bl
  406aa1:	xchg   ecx,eax
  406aa2:	lock mov ah,0x4c
  406aa5:	push   es
  406aa6:	add    al,0x47
  406aa8:	je     0x406ac5
  406aaa:	dec    ebx
  406aab:	mov    ecx,0x3a64450f
  406ab0:	push   ebx
  406ab1:	cdq    
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	je     0x406a9f
  406ab5:	test   esp,edx
  406ab7:	(bad)  
  406ab8:	adc    eax,0x54635822
  406abd:	jl     0x406a5b
  406abf:	xor    al,0xc8
  406ac1:	or     edx,DWORD PTR [esi]
  406ac3:	(bad)  
  406ac5:	ja     0x406a51
  406ac7:	mov    ds:0xad44191a,al
  406acc:	pop    edi
  406acd:	jo     0x406b29
  406acf:	inc    esi
  406ad0:	push   0x229ba665
  406ad5:	outs   dx,BYTE PTR ds:[esi]
  406ad6:	jle    0x406a69
  406ad8:	jns    0x406a78
  406ada:	jmp    0x177cf1cb
  406adf:	cmc    
  406ae0:	ins    BYTE PTR es:[edi],dx
  406ae1:	adc    ecx,ecx
  406ae3:	les    eax,FWORD PTR [ebx]
  406ae5:	inc    edi
  406ae6:	push   esi
  406ae7:	cdq    
  406ae8:	outs   dx,BYTE PTR ds:[esi]
  406ae9:	adc    al,0x4c
  406aeb:	push   ss
  406aec:	add    esi,DWORD PTR [eax+0x6858a0c5]
  406af2:	daa    
  406af3:	loop   0x406a82
  406af5:	jmp    0x406b26
  406af7:	add    ebx,DWORD PTR [edx+0x27]
  406afa:	xor    BYTE PTR [ebx-0x48],0xb3
  406afe:	mov    ebp,ebp
  406b00:	pop    esi
  406b01:	and    BYTE PTR [edi-0x4e],0x0
  406b05:	lods   eax,DWORD PTR ds:[esi]
  406b06:	mov    dl,0x0
  406b08:	mov    ch,BYTE PTR [ecx-0x479684f2]
  406b0e:	shl    DWORD PTR ds:0xcf0b2fde,cl
  406b14:	push   ebx
  406b15:	sub    BYTE PTR [ecx+edx*1],bl
  406b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b19:	stos   DWORD PTR es:[edi],eax
  406b1a:	mov    esi,0x83e525fe
  406b1f:	xchg   ebx,eax
  406b20:	and    al,0xeb
  406b22:	add    esi,DWORD PTR [eax+ebp*1+0x77e19f6b]
  406b29:	add    esp,DWORD PTR [esi]
  406b2b:	mov    esi,0x5b05828d
  406b30:	paddsw mm0,QWORD PTR [edi-0x19]
  406b34:	sub    DWORD PTR [ebp-0x4f],eax
  406b37:	xchg   ecx,eax
  406b38:	or     dh,BYTE PTR [eax+0x4262ae18]
  406b3e:	xlat   BYTE PTR ds:[ebx]
  406b3f:	outs   dx,BYTE PTR ds:[esi]
  406b40:	lods   al,BYTE PTR ds:[esi]
  406b41:	fadd   DWORD PTR [edx+0x43dda28b]
  406b47:	sub    al,0xea
  406b49:	retf   0x80ad
  406b4c:	xchg   ebx,eax
  406b4d:	adc    eax,0x866bf8ba
  406b52:	gs pop esi
  406b54:	pop    esp
  406b55:	add    esp,DWORD PTR [eax]
  406b57:	cmp    eax,0xcdfb0d4d
  406b5c:	in     al,dx
  406b5d:	dec    esi
  406b5e:	push   es
  406b5f:	jbe    0x406b05
  406b61:	cmp    bh,BYTE PTR [ecx+0x7e]
  406b64:	or     eax,0xadd3423
  406b69:	(bad)
  406b6c:	inc    edx
  406b6d:	stos   DWORD PTR es:[edi],eax
  406b6e:	jge    0x406b2b
  406b70:	jno    0x406bae
  406b72:	push   esp
  406b73:	loop   0x406bca
  406b75:	mov    edx,0x26d750d
  406b7a:	mov    esi,0xf022e7e5
  406b7f:	hlt    
  406b80:	push   0x5a
  406b82:	jne    0x406b2f
  406b84:	les    ebp,FWORD PTR [edx+0x71]
  406b87:	xchg   edx,eax
  406b88:	mov    bl,BYTE PTR [esi+0x6b]
  406b8b:	mov    al,ds:0x1570c071
  406b90:	mov    BYTE PTR [ecx-0x7d3a6e90],ah
  406b96:	cmc    
  406b97:	rcl    ebx,0x82
  406b9a:	push   ebx
  406b9b:	repnz nop
  406b9d:	or     eax,0x61a67f8e
  406ba2:	popa   
  406ba3:	pop    ds
  406ba4:	clc    
  406ba5:	mov    esi,0x7a377e2f
  406baa:	repz jle 0x406c01
  406bad:	popf   
  406bae:	jno    0x406b68
  406bb0:	adc    eax,0x3c0f8840
  406bb5:	cmp    eax,0xc523f314
  406bba:	jae    0x406bdc
  406bbc:	stc    
  406bbd:	loopne 0x406b9b
  406bbf:	or     ch,bl
  406bc1:	pop    ebp
  406bc2:	rol    BYTE PTR [ecx+0x1c4f3b68],cl
  406bc8:	or     BYTE PTR [ebx-0x7d],ch
  406bcb:	fdiv   DWORD PTR [edi]
  406bcd:	mov    dh,0x45
  406bcf:	and    DWORD PTR [ecx-0x8e31632],0x71
  406bd6:	add    esp,edi
  406bd8:	in     al,dx
  406bd9:	jl     0x406b7a
  406bdb:	sub    eax,0x6f06f6df
  406be0:	das    
  406be1:	out    0xb4,eax
  406be3:	icebp  
  406be4:	push   esp
  406be5:	sub    BYTE PTR [edi-0x34],al
  406be8:	std    
  406be9:	in     al,0xfa
  406beb:	(bad)  
  406bec:	mov    al,0xcf
  406bee:	dec    ebx
  406bef:	or     BYTE PTR [eax-0x69],dl
  406bf2:	adc    edx,DWORD PTR [eax-0x4dc9e47f]
  406bf8:	cmp    al,BYTE PTR [edi]
  406bfa:	or     eax,DWORD PTR [esi-0x1]
  406bfd:	das    
  406bfe:	int3   
  406bff:	repz pushf 
  406c01:	out    dx,eax
  406c02:	and    al,0x59
  406c04:	loopne 0x406ba2
  406c06:	cmp    ebx,DWORD PTR [esp+edi*2-0x28]
  406c0a:	fisttp QWORD PTR [edi+0x62c49f63]
  406c10:	or     BYTE PTR [edi+edx*1],0x30
  406c14:	lock inc ebp
  406c16:	rol    edi,1
  406c18:	add    DWORD PTR [eax+0x1a8311b],0xe504beb8
  406c22:	sub    eax,0xb0dbcecd
  406c27:	xor    bh,al
  406c29:	jno    0x406bad
  406c2b:	or     DWORD PTR [ebx-0x125c2ba0],ebp
  406c31:	shl    ebp,cl
  406c33:	xchg   esi,esi
  406c35:	mov    ebx,0x11b8b4f4
  406c3a:	push   edx
  406c3b:	mov    al,0xcc
  406c3d:	xchg   edx,eax
  406c3e:	test   al,0x83
  406c40:	jle    0x406ca2
  406c42:	inc    esp
  406c43:	not    BYTE PTR [ecx+edx*1]
  406c46:	mov    al,BYTE PTR [esi-0x60]
  406c49:	add    ch,dh
  406c4b:	mov    esp,0x76dcc4f0
  406c50:	and    ch,BYTE PTR [edx-0x55]
  406c53:	pop    ebx
  406c54:	mov    es,WORD PTR [edi+0x598252f]
  406c5a:	outs   dx,DWORD PTR ds:[esi]
  406c5b:	push   ds
  406c5c:	leave  
  406c5d:	es (bad) 
  406c5f:	dec    BYTE PTR [ebx-0x33258b7d]
  406c65:	addr16 jmp 0xc84e:0x77d54302
  406c6d:	mov    ch,0xf8
  406c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c70:	mov    es,WORD PTR [esi]
  406c72:	mov    bl,0xe0
  406c74:	mov    BYTE PTR [edx+0x5f],cl
  406c77:	push   esp
  406c78:	(bad)  
  406c79:	hlt    
  406c7a:	ss enter 0xa77c,0x8
  406c7f:	test   al,0xbb
  406c81:	jbe    0x406c8d
  406c83:	lock push ss
  406c85:	mov    DWORD PTR [edx+0x5d],esi
  406c88:	pop    edi
  406c89:	pop    ebx
  406c8a:	xor    eax,0xc61b45ce
  406c8f:	cmp    bl,dl
  406c91:	xchg   ecx,eax
  406c92:	out    dx,eax
  406c93:	adc    al,0xfc
  406c95:	cmp    dl,BYTE PTR [edx]
  406c97:	adc    ebx,ebp
  406c99:	in     eax,0x1
  406c9b:	dec    ebp
  406c9c:	aad    0xf4
  406c9e:	mov    al,0xce
  406ca0:	(bad)  
  406ca1:	outs   dx,BYTE PTR ds:[esi]
  406ca2:	icebp  
  406ca3:	daa    
  406ca4:	xor    ebp,DWORD PTR [edi-0x5c9c4244]
  406caa:	pushf  
  406cab:	cmp    eax,0x566fad6a
  406cb0:	jno    0x406c45
  406cb2:	xchg   edx,eax
  406cb3:	push   DWORD PTR [edi]
  406cb5:	(bad)  
  406cb7:	(bad)  [esp+ebx*8]
  406cba:	mov    ch,0xf9
  406cbc:	inc    edi
  406cbd:	add    ah,BYTE PTR [ebp+0x5dae4263]
  406cc3:	jnp    0x406cbf
  406cc5:	sub    ebx,DWORD PTR [esi-0x68fbd1]
  406ccb:	ja     0x406cf7
  406ccd:	cmc    
  406cce:	add    cl,dh
  406cd0:	addr16 out 0x6,al
  406cd3:	and    al,0x11
  406cd5:	xor    ebp,esi
  406cd7:	add    ebx,DWORD PTR [eax]
  406cd9:	xor    eax,0xa5d7fadc
  406cde:	cwde   
  406cdf:	mov    edx,esp
  406ce1:	dec    ecx
  406ce2:	data16 mov cs,WORD PTR gs:[ecx+0x79e31a78]
  406cea:	ins    DWORD PTR es:[edi],dx
  406ceb:	or     edx,ebx
  406ced:	loop   0x406cd7
  406cef:	loope  0x406ca8
  406cf1:	jns    0x406d42
  406cf3:	pushf  
  406cf4:	test   eax,0xb206043c
  406cf9:	mov    ds:0x6a54a64a,eax
  406cfe:	cmp    al,0x59
  406d00:	inc    ebx
  406d01:	mov    bh,0x70
  406d03:	pop    ss
  406d04:	test   DWORD PTR [eax+0x2da87ccb],eax
  406d0a:	in     eax,dx
  406d0b:	sbb    DWORD PTR [ecx-0x56],esi
  406d0e:	lea    eax,[esi+0x60862ed5]
  406d14:	inc    esi
  406d15:	push   esp
  406d16:	call   0x6adaf74
  406d1b:	sahf   
  406d1c:	push   edx
  406d1d:	push   cs
  406d1e:	jne    0x406cad
  406d20:	(bad)  
  406d21:	cli    
  406d22:	add    ebp,DWORD PTR [ecx-0x28bb7069]
  406d28:	sub    DWORD PTR [eax-0x3c719e1],edx
  406d2e:	mov    ecx,0xb2ee7933
  406d33:	ficomp DWORD PTR [ebx-0x511bebdc]
  406d39:	adc    eax,0x2645920c
  406d3e:	retf   0x33be
  406d41:	fisubr WORD PTR [eax+0x1ce650aa]
  406d47:	inc    ecx
  406d48:	push   eax
  406d49:	call   0x9e7b:0x3c75a806
  406d50:	fadd   DWORD PTR [eax]
  406d52:	nop
  406d53:	or     al,0xdf
  406d55:	test   eax,0x353086fc
  406d5a:	(bad)  
  406d5b:	shl    cl,cl
  406d5d:	mov    dh,0xfc
  406d5f:	xor    ah,BYTE PTR ds:0x12e37d06
  406d65:	mov    dl,dh
  406d67:	(bad)  
  406d68:	fnstcw WORD PTR [ecx+0x630a05eb]
  406d6e:	ror    DWORD PTR [esp+ebp*1+0x34],1
  406d72:	das    
  406d73:	addr16 lahf 
  406d75:	adc    ah,BYTE PTR [esi]
  406d77:	hlt    
  406d78:	push   eax
  406d79:	std    
  406d7a:	push   esp
  406d7b:	or     esp,DWORD PTR [esi+edi*1-0x21]
  406d7f:	aaa    
  406d80:	outs   dx,DWORD PTR ds:[esi]
  406d81:	dec    ebp
  406d82:	call   0x2c0b:0x8dbbd03d
  406d89:	jno    0x406dfe
  406d8b:	adc    bl,BYTE PTR [ebx+0x45ba6e4c]
  406d91:	arpl   WORD PTR [ecx],ax
  406d93:	(bad)  
  406d94:	dec    edi
  406d95:	fdivr  QWORD PTR [eax+0x4208fda7]
  406d9b:	pop    ss
  406d9c:	push   eax
  406d9d:	mov    dh,0xa2
  406d9f:	pop    ebp
  406da0:	jle    0x406db4
  406da2:	retf   
  406da3:	jg     0x406d39
  406da5:	and    cl,BYTE PTR [ebx-0x2f]
  406da8:	xor    eax,0x97fbf0f9
  406dad:	(bad)  
  406daf:	ss xchg esp,eax
  406db1:	lock inc esi
  406db3:	sti    
  406db4:	pop    es
  406db5:	rcl    DWORD PTR [edi],1
  406db7:	pop    ecx
  406db8:	lea    ecx,[esi+0x5f]
  406dbb:	jg     0x406e2d
  406dbd:	mov    es,WORD PTR [edx+0x21]
  406dc0:	bound  edx,QWORD PTR [edx-0x34]
  406dc3:	popf   
  406dc4:	mov    ebp,0x3d72df0e
  406dc9:	and    DWORD PTR [esi+ebp*2-0x5a],esi
  406dcd:	mov    bh,0x9e
  406dcf:	loop   0x406d90
  406dd1:	pop    es
  406dd2:	push   ebp
  406dd3:	jo     0x406e2c
  406dd5:	jns    0x406dea
  406dd7:	sbb    DWORD PTR [edx+0x7627b4c5],esp
  406ddd:	xor    ah,BYTE PTR [ecx]
  406ddf:	fcomp  DWORD PTR [eax+0x31]
  406de2:	xchg   edi,eax
  406de3:	repz in al,0xd
  406de6:	test   al,0x13
  406de8:	inc    ebx
  406de9:	fdiv   QWORD PTR [ebx]
  406deb:	imul   esi,eax,0x1e
  406dee:	imul   ebp,ebx,0x23
  406df1:	jae    0x406d7f
  406df3:	inc    ecx
  406df4:	add    al,0x6
  406df7:	(bad)  
  406df8:	in     eax,0x16
  406dfa:	bound  ecx,QWORD PTR [ebp-0x1b]
  406dfd:	repnz mov dl,0xc4
  406e00:	sub    eax,0xeed4df86
  406e05:	clc    
  406e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e07:	jmp    0x406e1f
  406e09:	pop    edi
  406e0a:	cwde   
  406e0b:	xchg   DWORD PTR ds:0x33df493d,ebx
  406e11:	inc    ebx
  406e12:	jnp    0x406da8
  406e14:	outs   dx,BYTE PTR ds:[esi]
  406e15:	and    bl,bh
  406e17:	push   ebx
  406e18:	or     DWORD PTR [eax-0x7bb41702],eax
  406e1e:	outs   dx,BYTE PTR ds:[esi]
  406e1f:	ret    0xda4b
  406e22:	gs sub al,0x84
  406e25:	enter  0x3f41,0x38
  406e29:	out    0x98,al
  406e2b:	fstp   QWORD PTR [ebp+0x5bba454c]
  406e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e32:	cmp    bl,BYTE PTR ds:0x529fb7b
  406e38:	repnz scas eax,DWORD PTR es:[edi]
  406e3a:	retf   
  406e3b:	jmp    0x406e04
  406e3d:	xchg   BYTE PTR [edi],bh
  406e3f:	pop    esi
  406e40:	mov    ebp,0xaceaaab5
  406e45:	mov    dh,0xe2
  406e47:	test   DWORD PTR [ecx-0x5e],ebx
  406e4a:	ins    DWORD PTR es:[edi],dx
  406e4b:	add    al,0x8c
  406e4d:	add    BYTE PTR [esi],ch
  406e4f:	cmp    ecx,DWORD PTR [ebx+0x5c7e055]
  406e55:	inc    edi
  406e56:	inc    esi
  406e57:	inc    ebx
  406e58:	add    BYTE PTR [eax],al
  406e5a:	jle    0x406e5c
  406e5c:	add    cl,ch
  406e5e:	jmp    0x86406e66
  406e63:	shl    BYTE PTR [ebx-0x62a68c68],cl
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x353e760a]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e60
  406e7b:	xor    al,0xd
  406e7d:	xchg   edx,eax
  406e7e:	mov    ebp,0x7d916f4f
  406e83:	pop    es
  406e84:	cli    
  406e85:	je     0x406e74
  406e87:	aad    0xf9
  406e89:	(bad)  
  406e8a:	cmp    cl,BYTE PTR [edx-0x645af084]
  406e90:	mov    ch,0x7e
  406e92:	repnz aam 0x37
  406e95:	or     DWORD PTR [esi+0x16017158],esp
  406e9b:	or     DWORD PTR [edi],edi
  406e9d:	aaa    
  406e9e:	cmp    ecx,DWORD PTR [ecx+eax*4-0x74289b79]
  406ea5:	scas   eax,DWORD PTR es:[edi]
  406ea6:	and    eax,0x55a632cb
  406eab:	dec    edi
  406eac:	into   
  406ead:	mov    bl,0xa8
  406eaf:	fstp   DWORD PTR [esp+ebx*1-0x10]
  406eb3:	dec    ecx
  406eb4:	ror    DWORD PTR [edx-0x1f5bc5f9],0xe0
  406ebb:	icebp  
  406ebc:	lods   al,BYTE PTR ds:[esi]
  406ebd:	mov    edx,0xbcf75e66
  406ec2:	push   cs
  406ec3:	pop    edi
  406ec4:	(bad)  
  406ec5:	dec    ebx
  406ec6:	xchg   ecx,eax
  406ec7:	push   edi
  406ec8:	popa   
  406ec9:	sub    BYTE PTR [ecx+0x5e],dh
  406ecc:	nop
  406ecd:	sbb    eax,0x900f2e86
  406ed2:	and    edi,ecx
  406ed4:	xchg   esp,eax
  406ed5:	rcr    BYTE PTR [edx-0x61],0x77
  406ed9:	add    cl,dl
  406edb:	add    al,0x2
  406edd:	dec    ecx
  406ede:	pop    edx
  406edf:	cld    
  406ee0:	inc    ecx
  406ee1:	pop    ecx
  406ee2:	lahf   
  406ee3:	mov    ch,0xdb
  406ee5:	in     al,dx
  406ee6:	test   al,0x10
  406ee8:	xchg   ecx,eax
  406ee9:	les    esp,FWORD PTR [edi+edi*8+0xd]
  406eed:	fwait
  406eee:	sbb    DWORD PTR [ecx],ebp
  406ef0:	push   0xd76d1185
  406ef5:	cmp    DWORD PTR [esi-0x1f],eax
  406ef8:	sbb    bh,cl
  406efa:	push   edi
  406efb:	inc    esi
  406efc:	xor    BYTE PTR [ebp+0x97813db],ah
  406f02:	jbe    0x406eb0
  406f04:	mov    al,ds:0x45954bd6
  406f09:	mov    edx,0x8dcb9cd3
  406f0e:	dec    esi
  406f0f:	sbb    BYTE PTR [ecx+0x46],dh
  406f12:	je     0x406f46
  406f14:	or     eax,0xeb064f97
  406f19:	pop    esi
  406f1a:	and    eax,0x98c520db
  406f1f:	gs sub eax,0xdd03ff8c
  406f25:	test   BYTE PTR [esi+0x66],bh
  406f28:	cmp    BYTE PTR [edi-0x6cfda694],al
  406f2e:	xchg   edi,eax
  406f2f:	push   0xd1587eb7
  406f34:	jbe    0x406f24
  406f36:	hlt    
  406f37:	dec    edi
  406f38:	jns    0x406f7d
  406f3a:	retf   
  406f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f3c:	pop    esi
  406f3d:	fistp  QWORD PTR [edx-0x42676ba3]
  406f43:	imul   esi,DWORD PTR [ebp-0xbd8a2ee],0xffffffbf
  406f4a:	mov    esi,0x673202f9
  406f4f:	fbstp  TBYTE PTR [ecx+ebp*4-0x30bca952]
  406f56:	pop    edx
  406f57:	leave  
  406f58:	sbb    DWORD PTR [esi+eax*2],ebx
  406f5b:	sti    
  406f5c:	xor    dh,BYTE PTR [edi+0x35]
  406f5f:	les    edi,FWORD PTR [edi+0x2b]
  406f62:	stc    
  406f63:	in     eax,0xa7
  406f65:	cli    
  406f66:	xchg   DWORD PTR [edx],eax
  406f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f69:	pop    ebp
  406f6a:	mov    edi,0x8ad9b7ed
  406f6f:	jae    0x406fdc
  406f71:	and    ebp,edx
  406f73:	lock std 
  406f75:	push   es
  406f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f77:	daa    
  406f78:	adc    DWORD PTR [ecx-0x1f],0xffffff94
  406f7c:	inc    ebp
  406f7d:	mov    dh,al
  406f7f:	sub    DWORD PTR [esi],edi
  406f81:	inc    ecx
  406f82:	or     al,0xc9
  406f84:	(bad)  
  406f85:	jo     0x406f5d
  406f87:	js     0x406f8c
  406f89:	in     eax,dx
  406f8a:	test   BYTE PTR cs:[ebx],ah
  406f8d:	(bad)  
  406f8f:	mov    ds:0xf71f5b1f,al
  406f94:	adc    bl,bh
  406f96:	pop    eax
  406f97:	cld    
  406f98:	into   
  406f99:	or     edx,DWORD PTR [ebx]
  406f9b:	sub    edx,ebx
  406f9d:	aaa    
  406f9e:	iret   
  406f9f:	pop    esi
  406fa0:	push   es
  406fa1:	icebp  
  406fa2:	outs   dx,BYTE PTR ds:[esi]
  406fa3:	inc    esp
  406fa4:	stos   DWORD PTR es:[edi],eax
  406fa5:	add    al,BYTE PTR [edi-0x45]
  406fa8:	mov    edi,0xa456a7ab
  406fad:	or     eax,0x994c76e6
  406fb2:	lahf   
  406fb3:	or     al,0x6d
  406fb5:	sbb    DWORD PTR [esi],ebp
  406fb7:	xlat   BYTE PTR ds:[ebx]
  406fb8:	add    eax,0xebfc194d
  406fbd:	push   es
  406fbe:	mov    ah,0xa3
  406fc0:	pop    es
  406fc1:	inc    ecx
  406fc2:	fcmovnbe st,st(1)
  406fc4:	ffree  st(5)
  406fc6:	sti    
  406fc7:	fst    QWORD PTR [eax+esi*4-0x2f]
  406fcb:	cli    
  406fcc:	add    edx,DWORD PTR [ecx+0x40]
  406fcf:	fsub   DWORD PTR [ecx+0xf]
  406fd2:	js     0x407035
  406fd4:	cld    
  406fd5:	outs   dx,DWORD PTR ds:[esi]
  406fd6:	xchg   ebx,eax
  406fd7:	ret    
  406fd8:	rcl    BYTE PTR [ebx+eiz*4+0x759e906e],0x40
  406fe0:	sub    ah,BYTE PTR [ebx]
  406fe2:	xor    DWORD PTR [ecx+0x4f49d489],0x62bc489b
  406fec:	or     DWORD PTR [ebx+0x2b19d99],esp
  406ff2:	and    edi,eax
  406ff4:	xor    eax,0x548a3b8b
  406ff9:	ja     0x406fae
  406ffb:	shl    al,1
  406ffd:	retf   0x7111
  407000:	push   esi
  407001:	xchg   edi,eax
  407002:	das    
  407003:	xlat   BYTE PTR ds:[ebx]
  407004:	out    0x6a,eax
  407006:	addr16 dec edx
  407008:	xchg   ecx,eax
  407009:	mov    ch,0x2
  40700b:	cmp    bl,bh
  40700d:	mov    eax,0xdf9ffee0
  407012:	cmp    al,0x6d
  407014:	mov    edx,0xb1e3af80
  407019:	pop    edx
  40701a:	xchg   ecx,eax
  40701b:	mov    edi,0x34423fe5
  407020:	aas    
  407021:	pop    ss
  407022:	xor    bh,BYTE PTR [edi-0x3d]
  407025:	xlat   BYTE PTR ds:[ebx]
  407026:	pusha  
  407027:	rcl    DWORD PTR [ecx-0x15],1
  40702a:	out    dx,eax
  40702b:	sub    al,0x96
  40702d:	jo     0x406fe2
  40702f:	mov    BYTE PTR [edi-0x4eb8e651],bh
  407035:	aaa    
  407036:	repz xor eax,0x8e7fd57
  40703c:	rsqrtps xmm3,XMMWORD PTR [esp+ebx*8]
  407040:	jg     0x407081
  407042:	or     cl,BYTE PTR [ecx+eax*1]
  407045:	pop    eax
  407046:	lods   al,BYTE PTR ds:[esi]
  407047:	stos   DWORD PTR es:[edi],eax
  407048:	(bad)  
  407049:	adc    eax,0x1abfe3f7
  40704e:	mov    WORD PTR [ebp+0x71],ds
  407051:	out    0xbe,eax
  407053:	push   ecx
  407054:	pop    ds
  407055:	pop    es
  407056:	lock mov ebp,0xfa4e11
  40705c:	jo     0x4070ca
  40705e:	jb     0x407012
  407060:	sbb    eax,0x567a6a31
  407065:	fnstcw WORD PTR [ebp-0x2064f2aa]
  40706b:	sbb    eax,0x9923b8a8
  407070:	retf   0x5141
  407073:	(bad)
  407078:	div    BYTE PTR [eax-0x16d1fb12]
  40707e:	out    dx,al
  40707f:	sbb    BYTE PTR [eax-0x4],0xe4
  407083:	cdq    
  407084:	mov    al,0x5c
  407086:	repnz lock push ecx
  407089:	push   ebx
  40708a:	icebp  
  40708b:	jp     0x407012
  40708d:	aam    0x6e
  40708f:	mov    ah,0xa6
  407091:	(bad)  
  407092:	mov    DWORD PTR [edi-0x51],ecx
  407095:	push   ebp
  407096:	rcr    BYTE PTR [esi+0x741dad04],cl
  40709c:	scas   al,BYTE PTR es:[edi]
  40709d:	xchg   esp,eax
  40709e:	pop    ds
  40709f:	dec    esp
  4070a0:	xchg   edi,eax
  4070a1:	xor    ebp,DWORD PTR [ecx-0x7d]
  4070a4:	outs   dx,BYTE PTR ds:[esi]
  4070a5:	sbb    DWORD PTR [edx+edi*2],0xffffffc4
  4070a9:	pop    ds
  4070aa:	int3   
  4070ab:	aam    0xb6
  4070ad:	inc    eax
  4070ae:	mov    es,WORD PTR [esi+0x23]
  4070b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070b2:	mov    edx,0x6729b02a
  4070b7:	retf   0x46c1
  4070ba:	in     al,dx
  4070bb:	cmp    BYTE PTR [ecx+edx*1+0x4a],dh
  4070bf:	arpl   WORD PTR [esi-0x3d],cx
  4070c2:	xor    ch,cl
  4070c4:	mov    dh,0x79
  4070c6:	call   0xe5fc:0xd10f1a73
  4070cd:	ins    BYTE PTR es:[edi],dx
  4070ce:	adc    eax,0x128048af
  4070d3:	stc    
  4070d4:	es add al,0xed
  4070d7:	mov    ds,WORD PTR [ebx+0x71e88448]
  4070dd:	xchg   ebp,eax
  4070de:	loope  0x407114
  4070e0:	scas   al,BYTE PTR es:[edi]
  4070e1:	sbb    DWORD PTR [edx-0x1],ebp
  4070e4:	jmp    0xea59:0xa1338bf9
  4070eb:	add    eax,0x50f0f4c1
  4070f0:	adc    dh,BYTE PTR [esi]
  4070f2:	jae    0x4070c2
  4070f4:	lods   eax,DWORD PTR ds:[esi]
  4070f5:	xchg   DWORD PTR [esi+ebx*2-0x3791c733],edx
  4070fc:	and    DWORD PTR ds:[ecx],ecx
  4070ff:	or     BYTE PTR [eax+esi*1+0x5b432a56],bh
  407106:	daa    
  407107:	jl     0x4070c5
  407109:	mov    dh,0x8f
  40710b:	jg     0x40712f
  40710d:	into   
  40710e:	mov    ebp,ebx
  407110:	mov    edx,0x5b13f84a
  407115:	xchg   ecx,eax
  407116:	into   
  407117:	dec    esi
  407118:	push   ebx
  407119:	adc    BYTE PTR [eax+0x6ae803b],0x9f
  407120:	add    al,0xe6
  407122:	out    dx,al
  407123:	adc    DWORD PTR [edx],eax
  407125:	stc    
  407126:	jo     0x40719c
  407128:	call   0xfe00:0xc9c71eb4
  40712f:	adc    bh,BYTE PTR [edx]
  407131:	jnp    0x40712d
  407133:	loopne 0x407185
  407135:	dec    edx
  407136:	mov    eax,ds:0x3c6b1410
  40713b:	js     0x4070ef
  40713d:	sub    esp,eax
  40713f:	xor    al,0x4
  407141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407142:	pop    ss
  407143:	js     0x4070f5
  407145:	pop    ss
  407146:	mov    ch,0x18
  407148:	repz dec ebx
  40714a:	sub    al,0x1c
  40714c:	lock mov bl,0x13
  40714f:	jmp    0x8e89b7d2
  407154:	(bad)  
  407155:	push   cs
  407156:	leave  
  407157:	int3   
  407158:	imul   ecx,DWORD PTR [edx-0x63146dd],0xf4bffe2a
  407162:	adc    dh,BYTE PTR [eax+0x32e2efba]
  407168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407169:	jae    0x407134
  40716b:	mul    BYTE PTR [edi]
  40716d:	das    
  40716e:	shr    DWORD PTR [ecx+0x1ed66aa2],0xc4
  407175:	bound  ebx,QWORD PTR [edx]
  407177:	outs   dx,BYTE PTR ds:[esi]
  407178:	push   0x5b
  40717a:	mov    eax,ds:0x579c7779
  40717f:	call   0x60030286
  407184:	add    esp,DWORD PTR [edx]
  407186:	sub    ebp,eax
  407188:	or     dl,BYTE PTR [edi+0x2118fbbc]
  40718e:	cwde   
  40718f:	pop    ecx
  407190:	cmp    esp,esi
  407192:	outs   dx,DWORD PTR ds:[esi]
  407193:	mov    BYTE PTR ds:0xe8c785c,bh
  407199:	aad    0xbd
  40719b:	sub    DWORD PTR [ecx],0xd782c18c
  4071a1:	aas    
  4071a2:	xchg   ebp,eax
  4071a3:	out    0x55,al
  4071a5:	rcl    BYTE PTR [ebx],1
  4071a7:	fcmovu st,st(6)
  4071a9:	mov    bh,0x1c
  4071ab:	mov    dh,0x61
  4071ad:	fild   DWORD PTR [ecx-0x1ebe21d5]
  4071b3:	mov    eax,0x763e40fd
  4071b8:	adc    dh,BYTE PTR [edi-0x432ae0c2]
  4071be:	test   eax,0x198770e7
  4071c3:	push   cs
  4071c4:	pop    esp
  4071c5:	aad    0xa
  4071c7:	stos   DWORD PTR es:[edi],eax
  4071c8:	outs   dx,DWORD PTR ds:[esi]
  4071c9:	(bad)
  4071ce:	cdq    
  4071cf:	sar    DWORD PTR [ebp+ecx*2-0xda77343],cl
  4071d6:	repnz rcr BYTE PTR [ebx+0x4b],0x92
  4071db:	xchg   edx,eax
  4071dc:	jbe    0x407191
  4071de:	mov    ecx,DWORD PTR [edi+0x37]
  4071e1:	pop    edx
  4071e2:	cmp    DWORD PTR [ebx-0x7d723e05],esp
  4071e8:	or     bh,0xeb
  4071eb:	dec    eax
  4071ec:	cmp    al,0x20
  4071ee:	stos   BYTE PTR es:[edi],al
  4071ef:	adc    eax,0xe19de9b8
  4071f4:	dec    esp
  4071f5:	push   edi
  4071f6:	ins    DWORD PTR es:[edi],dx
  4071f7:	imul   ebp,DWORD PTR [edi+0x29dc354b],0xffffffde
  4071fe:	cmp    BYTE PTR [esi+esi*2],0x87
  407202:	cmp    bh,al
  407204:	xor    DWORD PTR [esp+ebx*2+0xc06f735],0x39
  40720c:	and    al,0xaf
  40720e:	xchg   ecx,eax
  40720f:	and    DWORD PTR [eax-0x66f503ca],ecx
  407215:	sub    ecx,DWORD PTR [ebx-0x721dd4f2]
  40721b:	ds push es
  40721d:	out    0x1d,eax
  40721f:	cli    
  407220:	sub    ah,BYTE PTR [edx]
  407222:	ret    
  407223:	dec    ebx
  407224:	ja     0x407204
  407226:	mov    ch,0x25
  407228:	rcr    ah,cl
  40722a:	inc    ebp
  40722b:	mov    cl,0xaa
  40722d:	imul   esi,DWORD PTR [eax+0x5a],0x6475e3dd
  407234:	mov    dh,0x9b
  407236:	jle    0x407266
  407238:	mov    dl,0x7c
  40723a:	imul   esi,DWORD PTR [ebx-0x156b77b0],0x41
  407241:	pop    esi
  407242:	sbb    eax,0xb78c84d2
  407247:	mov    ecx,0xc726d29b
  40724c:	inc    ebp
  40724d:	aam    0x39
  40724f:	dec    edi
  407250:	add    BYTE PTR [eax],al
  407252:	mov    DWORD PTR ds:0x4345ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4345df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434713,0x4345e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434607
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4345fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43464b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43463b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4346ef
  4072cc:	mov    eax,ds:0x434733
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x7a907a48
  4072fa:	cmp    edi,edx
  4072fc:	cmp    BYTE PTR [edi],0xcf
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x4072bd
  407306:	ins    BYTE PTR es:[edi],dx
  407307:	or     esi,ebp
  407309:	mov    esp,0x8ffb2265
  40730e:	das    
  40730f:	xor    ch,BYTE PTR [ebp-0x60]
  407312:	or     BYTE PTR [esi],al
  407314:	call   0x85724d8a
  407319:	mov    esi,0x5e76c905
  40731e:	data16 clc 
  407320:	pop    eax
  407321:	push   ss
  407322:	lods   al,BYTE PTR ds:[esi]
  407323:	hlt    
  407324:	test   al,0xf0
  407326:	fist   DWORD PTR [ecx-0x395ea40d]
  40732c:	dec    ebx
  40732d:	pop    eax
  40732e:	sbb    bh,bl
  407330:	loope  0x40730b
  407332:	rcr    esp,cl
  407334:	ins    BYTE PTR es:[edi],dx
  407335:	mov    ebx,0x990d7f30
  40733a:	or     ch,BYTE PTR ds:0x62643f84
  407340:	and    dh,BYTE PTR [edi-0x38]
  407343:	fld    DWORD PTR [bx+di-0x1108]
  407348:	shl    BYTE PTR [edx+0x74],cl
  40734b:	mov    bh,0xeb
  40734d:	mov    edx,0x12564ee2
  407352:	sbb    eax,0x3fa919ac
  407357:	sub    BYTE PTR [eax+0x487513a0],dl
  40735d:	nop
  40735e:	(bad)  
  40735f:	(bad)  
  407360:	(bad)  
  407362:	fsub   st,st(5)
  407364:	ror    DWORD PTR [edi+0x54],1
  407367:	xor    al,0xe1
  407369:	retf   
  40736a:	mov    ebp,0xde067906
  40736f:	mov    dl,0x1b
  407371:	adc    DWORD PTR [ecx+0x7],ebp
  407374:	arpl   di,di
  407376:	cld    
  407377:	icebp  
  407378:	inc    edx
  40737a:	(bad)  [ebp-0x14]
  40737d:	out    0xef,eax
  40737f:	sbb    DWORD PTR [eax+0x23],esp
  407382:	cmp    eax,0x32138b05
  407387:	test   DWORD PTR [esp+ebx*1],edi
  40738a:	xor    al,0x8e
  40738c:	test   BYTE PTR [eax+0x2fce2628],ah
  407392:	sub    DWORD PTR [ecx+0x779e87d1],esp
  407398:	mov    bl,0x7
  40739a:	clc    
  40739b:	cwde   
  40739c:	push   0x5b
  40739e:	clc    
  40739f:	pop    ds
  4073a0:	jo     0x4073a8
  4073a2:	dec    ebp
  4073a3:	test   al,0x86
  4073a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a6:	int3   
  4073a7:	scas   eax,DWORD PTR es:[edi]
  4073a8:	xor    cl,BYTE PTR [edx+0x6d]
  4073ab:	mov    al,BYTE PTR [ebp-0x565baaf1]
  4073b1:	or     dh,bh
  4073b3:	ins    DWORD PTR es:[edi],dx
  4073b4:	rcl    dl,cl
  4073b6:	mov    WORD PTR [ebp-0x6e28c10f],cs
  4073bc:	pop    edx
  4073bd:	(bad)  
  4073be:	xor    ch,BYTE PTR [edi-0x1a]
  4073c1:	(bad)  
  4073c2:	retf   0xb4fa
  4073c5:	les    ecx,FWORD PTR [esi+eiz*8-0x89f0ba9]
  4073cc:	std    
  4073cd:	(bad)  
  4073ce:	push   ds
  4073cf:	fild   WORD PTR [ecx-0x39]
  4073d2:	mov    ch,0x51
  4073d4:	lods   al,BYTE PTR ds:[esi]
  4073d5:	pop    ecx
  4073d6:	bound  esi,QWORD PTR [ecx]
  4073d8:	sbb    ah,BYTE PTR [edi+0x29]
  4073db:	mov    dh,0xe4
  4073dd:	test   edi,edi
  4073df:	jmp    0x4073bf
  4073e1:	mov    ds:0x4f6fc9c3,al
  4073e6:	xchg   ebp,esp
  4073e8:	enter  0x9194,0x70
  4073ec:	int3   
  4073ed:	scas   eax,DWORD PTR es:[edi]
  4073ee:	addr16 cwde 
  4073f0:	ja     0x40738e
  4073f2:	dec    eax
  4073f3:	stos   BYTE PTR es:[edi],al
  4073f4:	push   eax
  4073f5:	and    DWORD PTR [edx+0x2d],esi
  4073f8:	or     al,0xd3
  4073fa:	jnp    0x40743a
  4073fc:	not    BYTE PTR [ebx+0x59a965d7]
  407402:	jge    0x4073fe
  407404:	mov    ch,0x2
  407406:	sbb    cl,dl
  407408:	leave  
  407409:	fsubr  DWORD PTR [ebx+0x3b38587c]
  407410:	sub    al,0x40
  407412:	inc    ebx
  407413:	gs or  eax,0x4a7ab62f
  407419:	pop    ebp
  40741a:	iret   
  40741b:	ret    
  40741c:	call   0x90f7:0x454cc818
  407423:	clc    
  407424:	add    edx,esi
  407426:	out    0xd7,eax
  407428:	or     al,0x2
  40742a:	(bad)  
  40742b:	(bad)  
  40742d:	pop    ss
  40742e:	dec    esi
  40742f:	xchg   ecx,eax
  407430:	in     eax,0xc9
  407432:	nop
  407433:	shl    BYTE PTR [edi],0xca
  407436:	and    al,0x6d
  407438:	xor    esi,edi
  40743a:	ja     0x4074b2
  40743c:	cdq    
  40743d:	je     0x40740c
  40743f:	jp     0x4074a6
  407441:	loope  0x407476
  407443:	push   ecx
  407444:	xor    BYTE PTR [ebx+0x1],dh
  407447:	xchg   ebx,eax
  407448:	jns    0x407488
  40744a:	add    eax,0x7f32cb2b
  40744f:	lea    ecx,[edi+0x3a96ed23]
  407455:	into   
  407456:	sbb    al,0xe2
  407458:	jle    0x4074cf
  40745a:	retf   
  40745b:	adc    edx,DWORD PTR [eax-0x40]
  40745e:	pop    edi
  40745f:	pop    ebp
  407460:	pop    ebx
  407461:	in     al,dx
  407462:	and    dh,BYTE PTR [eax+0x16]
  407465:	mov    ch,0x64
  407467:	jne    0x4074b9
  407469:	cwde   
  40746a:	test   al,0xfc
  40746c:	adc    DWORD PTR [ecx+esi*4-0x42],0xb45c0107
  407474:	and    BYTE PTR [esi],cl
  407476:	scas   al,BYTE PTR es:[edi]
  407477:	mov    ch,0xbc
  407479:	retf   0x3233
  40747c:	adc    al,0x3b
  40747e:	and    al,0xbf
  407480:	(bad)  
  407481:	pop    ebx
  407482:	rol    BYTE PTR [edx+0x1155e713],0xd
  407489:	sti    
  40748a:	mov    BYTE PTR [edi+0x22],0x8
  40748e:	arpl   WORD PTR [ecx+0x18],di
  407491:	fisttp QWORD PTR [eax+0x32]
  407494:	push   ss
  407495:	mov    ds:0xc5252f10,eax
  40749a:	and    al,0xa1
  40749c:	bound  esi,QWORD PTR [ebx]
  40749e:	mov    eax,ds
  4074a0:	shl    BYTE PTR ds:0x50c0b15f,1
  4074a6:	ja     0x4074b3
  4074a8:	jne    0x40744e
  4074aa:	sbb    dh,ah
  4074ac:	shl    DWORD PTR [ebx],cl
  4074ae:	push   eax
  4074af:	mov    ecx,0x7a63371a
  4074b4:	jg     0x407499
  4074b6:	mov    ch,0xa8
  4074b8:	or     eax,0xedb536ee
  4074bd:	mov    bh,0xa0
  4074bf:	or     DWORD PTR [ecx+0x52cf74e6],eax
  4074c5:	jb     0x407526
  4074c7:	dec    esp
  4074c8:	jmp    0x85f9:0x9cbcfa97
  4074cf:	xchg   esp,eax
  4074d0:	jns    0x407472
  4074d2:	outs   dx,BYTE PTR ds:[esi]
  4074d3:	inc    esp
  4074d4:	xor    dl,ch
  4074d6:	mov    ebp,0xc7ffe17c
  4074db:	pop    esp
  4074dc:	xchg   BYTE PTR ds:0xa40b0e28,dh
  4074e2:	pop    esi
  4074e3:	mov    esi,0xf1627edf
  4074e8:	xlat   BYTE PTR ds:[ebx]
  4074e9:	or     BYTE PTR [ebp+0x7a3db75c],al
  4074ef:	cli    
  4074f0:	sub    BYTE PTR ds:0xc8d3da85,bh
  4074f6:	fwait
  4074f7:	dec    eax
  4074f8:	xchg   ebx,eax
  4074f9:	jne    0x40756f
  4074fb:	jno    0x40749b
  4074fd:	call   0x6930:0xa17f6862
  407504:	add    bl,0x76
  407507:	sbb    eax,0xa3916ae8
  40750c:	and    DWORD PTR [eax-0x37530e8f],edi
  407512:	pushf  
  407513:	cs and eax,0xae2bea4b
  407519:	pop    eax
  40751a:	retf   
  40751b:	push   cs
  40751c:	mov    WORD PTR [ebx+0x35],es
  40751f:	call   0x91b28709
  407524:	adc    eax,0x8ffb78d5
  407529:	js     0x407556
  40752b:	nop
  40752c:	imul   esi,edi,0xffffffbb
  40752f:	or     edx,DWORD PTR [esi-0x40e914ce]
  407535:	fisttp QWORD PTR [edi+esi*1+0x7a]
  407539:	pop    ebp
  40753a:	inc    edi
  40753b:	sub    eax,0x988196c8
  407540:	mov    cs,WORD PTR [eax+ecx*4+0x6e]
  407544:	les    ebx,FWORD PTR [esi+0x43889dcc]
  40754a:	nop
  40754b:	clc    
  40754c:	sbb    BYTE PTR [ebp+eiz*8+0x672b55a5],cl
  407553:	scas   al,BYTE PTR es:[edi]
  407554:	sbb    al,0x46
  407556:	and    ah,BYTE PTR [eax]
  407558:	gs scas eax,DWORD PTR es:[edi]
  40755a:	out    dx,eax
  40755b:	or     eax,0xdd194ab7
  407560:	cwde   
  407561:	push   eax
  407562:	adc    BYTE PTR [eax+ebx*1-0x5736c5e9],al
  407569:	loope  0x4075cf
  40756b:	jl     0x4075dc
  40756d:	pop    ds
  40756e:	out    0xc4,al
  407570:	dec    edx
  407571:	push   cs
  407572:	aas    
  407573:	jl     0x407549
  407575:	and    al,0x60
  407577:	jae    0x40751a
  407579:	dec    edx
  40757a:	imul   eax,DWORD PTR es:[esi-0x4fa25965],0x847dbe33
  407585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407586:	xor    BYTE PTR fs:[ecx-0x35],bh
  40758a:	out    dx,al
  40758b:	and    DWORD PTR [eax+0x23],0xffffffcd
  40758f:	mov    ch,0x2b
  407591:	pop    ss
  407592:	or     bl,bh
  407594:	aad    0x2f
  407596:	mov    edi,0x427d27fc
  40759b:	sbb    BYTE PTR [ecx+0x36],dl
  40759e:	repz push esp
  4075a0:	mov    eax,0xcb89cb0c
  4075a5:	(bad)  
  4075a7:	repz push 0xffffffc6
  4075aa:	cwde   
  4075ab:	aaa    
  4075ac:	push   es
  4075ad:	mov    eax,ds:0xc5d98b34
  4075b2:	mov    dh,0x98
  4075b4:	add    ch,dl
  4075b6:	in     eax,0x9e
  4075b8:	and    ebx,DWORD PTR [edi+0x3b]
  4075bb:	aad    0x7e
  4075bd:	xchg   ecx,eax
  4075be:	dec    ecx
  4075bf:	ins    BYTE PTR es:[edi],dx
  4075c0:	lea    ebp,[ecx]
  4075c2:	push   ebp
  4075c3:	stos   BYTE PTR es:[edi],al
  4075c4:	dec    esp
  4075c5:	push   cs
  4075c6:	hlt    
  4075c7:	mov    edx,ebx
  4075c9:	push   0xffffff83
  4075cb:	xor    al,0xa0
  4075cd:	das    
  4075ce:	sub    dl,BYTE PTR [esi-0x18]
  4075d1:	daa    
  4075d2:	out    dx,eax
  4075d3:	gs mov ecx,0x409417b
  4075d9:	fs les ebp,FWORD PTR ss:[edi-0x59]
  4075de:	jecxz  0x4075be
  4075e0:	dec    esp
  4075e1:	je     0x407576
  4075e3:	pushf  
  4075e4:	ret    0x42f8
  4075e7:	adc    ch,BYTE PTR [ebp-0x7b]
  4075ea:	test   BYTE PTR [edi-0x3455d3bc],dh
  4075f0:	mov    ebx,0xa2d6b8b8
  4075f5:	mov    ss,WORD PTR [edi-0xc]
  4075f8:	mov    ds:0x9323dbb9,eax
  4075fd:	mov    BYTE PTR [eax-0x32],bh
  407600:	sub    DWORD PTR [ebx+0x6b385b18],edx
  407606:	sbb    eax,DWORD PTR [ecx]
  407608:	adc    eax,0x4fa3278a
  40760d:	(bad)  [ecx+0x7]
  407610:	or     ebx,DWORD PTR [eax-0x7d]
  407613:	xchg   edx,eax
  407614:	push   cs
  407615:	mov    dh,BYTE PTR [ebp-0x400e6cba]
  40761b:	lahf   
  40761c:	mov    ebp,0xf6c700de
  407621:	test   DWORD PTR [eax],eax
  407623:	mov    dl,BYTE PTR [ecx+0x28]
  407626:	aaa    
  407627:	(bad)  
  407628:	jbe    0x407633
  40762a:	loop   0x4075e2
  40762c:	mov    ebx,ds
  40762e:	jbe    0x407665
  407630:	add    al,BYTE PTR [eax-0x29]
  407633:	push   cs
  407634:	inc    ebp
  407635:	int3   
  407636:	add    bl,BYTE PTR [esi]
  407638:	add    ecx,esi
  40763a:	adc    eax,0x54688ec9
  40763f:	push   0x15c2f488
  407644:	jns    0x4075d0
  407646:	repz jge 0x407680
  407649:	cld    
  40764a:	fmul   QWORD PTR [esp+eax*4]
  40764d:	push   0xd6e04a82
  407652:	add    DWORD PTR [eax],edi
  407654:	popf   
  407655:	pop    edx
  407656:	dec    edi
  407657:	and    eax,0x7fefd5b7
  40765c:	jl     0x40767c
  40765e:	mov    al,ds:0x15420991
  407663:	jl     0x4076d5
  407665:	call   0xa402273e
  40766a:	xchg   esi,eax
  40766b:	pop    ecx
  40766c:	dec    edx
  40766d:	data16 xchg BYTE PTR [ebp-0x502c51d9],cl
  407674:	push   eax
  407675:	rcr    BYTE PTR [bx+di-0x5582],0xba
  40767b:	dec    esi
  40767c:	xor    ebx,esp
  40767e:	mov    ds:0x2be6983a,eax
  407683:	mov    esi,0xca648ea4
  407688:	mov    ebp,0xf700e9f4
  40768d:	js     0x407696
  40768f:	mov    ah,0x6b
  407691:	fmul   QWORD PTR [edx]
  407693:	xchg   edx,eax
  407694:	lds    eax,FWORD PTR [eax]
  407696:	fist   DWORD PTR [eax]
  407698:	xchg   DWORD PTR [esi+0x1b8b8e7],ebx
  40769e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40769f:	pop    es
  4076a0:	test   al,0x7
  4076a2:	(bad)
  4076a6:	push   0x1d
  4076a8:	push   0x9b125b35
  4076ad:	sahf   
  4076ae:	lds    edi,FWORD PTR [edi-0xd]
  4076b1:	scas   al,BYTE PTR es:[edi]
  4076b2:	je     0x407691
  4076b4:	mov    DWORD PTR [ecx],edi
  4076b6:	gs xchg edi,eax
  4076b8:	enter  0x8214,0xc9
  4076bc:	fld    TBYTE PTR [esi-0x3b]
  4076bf:	icebp  
  4076c0:	repnz xchg edx,eax
  4076c2:	xchg   esi,esi
  4076c4:	mov    bh,BYTE PTR [edx+0x47630f24]
  4076ca:	ret    0xfc82
  4076cd:	ret    0xbe0f
  4076d0:	rcr    BYTE PTR [edx+0x76],cl
  4076d3:	inc    edx
  4076d4:	(bad)  
  4076d5:	jecxz  0x407732
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x5d2ebcac
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x407727
  40772b:	cmp    edi,DWORD PTR [ebp-0x3d]
  40772e:	xchg   ebp,eax
  40772f:	imul   esi,DWORD PTR [ebx],0xc359d0a7
  407735:	retf   0x9de0
  407738:	jg     0x4077b5
  40773a:	call   0xdbc5:0xa451a46d
  407741:	jne    0x4076f5
  407743:	push   cs
  407744:	outs   dx,DWORD PTR ds:[esi]
  407745:	and    eax,0x2c60bd63
  40774a:	push   fs
  40774c:	aam    0x71
  40774e:	out    0xed,eax
  407750:	mov    dh,0x72
  407752:	dec    esi
  407753:	mov    ebp,0x59990681
  407758:	add    BYTE PTR [esi-0x29f707fe],dh
  40775e:	call   0x4745:0xc8229f6f
  407765:	add    eax,0xd8cf4e0e
  40776a:	push   ds
  40776b:	or     esi,DWORD PTR [edx]
  40776d:	in     eax,0x56
  40776f:	mov    edi,0xa1c16e55
  407774:	test   al,0x7b
  407776:	fisttp WORD PTR [eax-0x53]
  407779:	dec    ebp
  40777a:	push   ebp
  40777b:	mov    esi,0x5feb68ca
  407780:	or     al,0x53
  407783:	pusha  
  407784:	push   ecx
  407785:	loope  0x40775c
  407787:	idiv   eax
  407789:	mov    ss,WORD PTR [ecx-0x7d]
  40778c:	and    esi,ebx
  40778e:	out    dx,al
  40778f:	ret    
  407790:	add    eax,ebx
  407792:	mov    dl,0x59
  407794:	and    al,0x44
  407796:	icebp  
  407797:	(bad)  
  407799:	inc    ebp
  40779a:	fcmovnbe st,st(6)
  40779c:	jns    0x4077bd
  40779e:	jp     0x407801
  4077a0:	mov    ah,0x36
  4077a2:	je     0x40774b
  4077a4:	iret   
  4077a5:	test   eax,0x2002a95a
  4077aa:	jg     0x40779f
  4077ac:	push   ebp
  4077ad:	sub    DWORD PTR [esi-0x68],edx
  4077b0:	call   0xfbe6:0xf5ea7eed
  4077b7:	or     al,0x5e
  4077b9:	pop    edi
  4077ba:	mov    edi,0x54ac2cf5
  4077bf:	jmp    0x1b13350e
  4077c4:	mov    cl,0xc9
  4077c6:	xchg   ecx,eax
  4077c7:	add    esp,DWORD PTR [edi-0x65]
  4077ca:	out    dx,al
  4077cb:	cmp    DWORD PTR [eax+0x53],0x89569b96
  4077d2:	or     dl,BYTE PTR [eax]
  4077d4:	lods   al,BYTE PTR ds:[esi]
  4077d5:	shl    BYTE PTR [ecx],0xbd
  4077d8:	sar    DWORD PTR [edx+0x16beed7a],0xf7
  4077df:	push   ebp
  4077e0:	fistp  QWORD PTR [eax]
  4077e2:	add    BYTE PTR [edi],ah
  4077e4:	loop   0x4077d3
  4077e6:	out    0x15,eax
  4077e8:	sub    ch,BYTE PTR [ebx]
  4077ea:	div    BYTE PTR [edi-0x7c]
  4077ed:	ins    DWORD PTR es:[edi],dx
  4077ee:	dec    eax
  4077ef:	ja     0x4077b4
  4077f1:	in     al,0x8d
  4077f3:	inc    ah
  4077f5:	sub    bh,dh
  4077f7:	inc    esi
  4077f8:	push   esp
  4077f9:	idiv   dh
  4077fb:	in     al,0x26
  4077fd:	dec    ebp
  4077fe:	scas   eax,DWORD PTR es:[edi]
  4077ff:	pop    ds
  407800:	fistp  QWORD PTR [edi-0x29]
  407803:	jle    0x40782c
  407805:	dec    ebp
  407806:	cli    
  407807:	cmp    ah,BYTE PTR [esi]
  407809:	mov    ecx,0xd6be20f1
  40780e:	xor    ah,BYTE PTR [esi]
  407810:	outs   dx,DWORD PTR ds:[esi]
  407811:	mov    bl,0xb3
  407813:	cmp    DWORD PTR [eax-0x7c8e9de0],esp
  407819:	(bad)  
  40781a:	pusha  
  40781b:	ja     0x40785a
  40781d:	pop    edx
  40781e:	cld    
  40781f:	mov    dl,0x45
  407821:	add    al,0xe1
  407823:	iret   
  407824:	retf   0xf151
  407827:	ret    
  407828:	sahf   
  407829:	int3   
  40782a:	xor    al,0x55
  40782c:	out    0xa8,eax
  40782e:	xor    ebx,DWORD PTR [esi-0x37]
  407831:	inc    ebx
  407832:	stc    
  407833:	(bad)  
  407834:	jge    0x4078a8
  407836:	aad    0x87
  407838:	cmp    al,0x7b
  40783a:	push   edx
  40783b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40783c:	dec    esi
  40783d:	dec    ecx
  40783e:	dec    ecx
  40783f:	or     eax,0xe5dfc744
  407844:	mov    ds,WORD PTR [ebp+0x1444ce99]
  40784a:	xchg   ecx,eax
  40784b:	dec    eax
  40784c:	arpl   WORD PTR [ecx+0x17],bp
  40784f:	push   0x94339a5e
  407854:	ja     0x407849
  407856:	add    DWORD PTR [ebp+0x39],edi
  407859:	cmp    DWORD PTR [esi+0x4e9b4544],esp
  40785f:	nop
  407860:	adc    al,0x1a
  407862:	and    BYTE PTR [esi+eax*1-0x45],cl
  407866:	stos   DWORD PTR es:[edi],eax
  407867:	push   ecx
  407868:	sub    bh,al
  40786a:	mov    al,ds:0xf49cdf9e
  40786f:	adc    BYTE PTR [ecx+0x36],al
  407872:	ficomp WORD PTR [edi-0x60edef0b]
  407878:	iret   
  407879:	push   es
  40787a:	add    DWORD PTR [ebx+0x6c94fd8c],edi
  407880:	je     0x4078b9
  407882:	xchg   ebp,eax
  407883:	jo     0x4078da
  407885:	xchg   DWORD PTR [edx],edi
  407887:	out    0x2e,al
  407889:	shr    edi,cl
  40788b:	das    
  40788c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40788d:	cmp    DWORD PTR [ecx],0x2658d031
  407893:	pop    esi
  407894:	popa   
  407895:	adc    DWORD PTR [edx-0x72d43a5f],0x75
  40789c:	mov    WORD PTR [esi-0x6f9f06b0],fs
  4078a2:	xor    BYTE PTR [edx-0x20fa41d5],dh
  4078a8:	stos   DWORD PTR es:[edi],eax
  4078a9:	int3   
  4078aa:	push   esp
  4078ab:	xor    DWORD PTR [esi],ebx
  4078ad:	and    eax,0xac28e338
  4078b2:	push   ss
  4078b3:	ror    BYTE PTR [ebp-0x1a5328df],1
  4078b9:	(bad)  
  4078bb:	jle    0x4078ad
  4078bd:	popf   
  4078be:	dec    edi
  4078bf:	or     ebp,ebx
  4078c1:	jecxz  0x4078f8
  4078c3:	xchg   ebp,eax
  4078c4:	pop    eax
  4078c5:	pusha  
  4078c6:	xor    eax,0x77bba6a3
  4078cb:	les    esi,FWORD PTR [eax+0x22968de1]
  4078d1:	ror    DWORD PTR [bp+di],cl
  4078d4:	jg     0x407929
  4078d6:	push   cs
  4078d7:	fsub   DWORD PTR [eax-0x55bdc6d7]
  4078dd:	push   ds
  4078de:	es inc edx
  4078e0:	adc    DWORD PTR [ebx-0x1da58c11],ecx
  4078e6:	out    0xb9,eax
  4078e8:	mov    BYTE PTR [edi+0x3deb2060],ah
  4078ee:	or     ch,dh
  4078f0:	popf   
  4078f1:	fmul   st,st(4)
  4078f3:	jp     0x4078b0
  4078f5:	jecxz  0x407909
  4078f7:	cmp    al,0xfe
  4078f9:	mov    ecx,0x395e008b
  4078fe:	mov    WORD PTR [eax+0x4e],ds
  407901:	out    dx,eax
  407902:	(bad)  
  407903:	mov    bl,BYTE PTR [ebx-0x52a4bdb5]
  407909:	ret    0xbea0
  40790c:	(bad)  
  40790d:	pop    edx
  40790e:	push   edi
  40790f:	retf   0x7109
  407912:	push   edx
  407913:	pop    esp
  407914:	mov    edx,ebx
  407916:	mov    al,0x3f
  407918:	dec    esp
  407919:	or     BYTE PTR [ecx],dh
  40791b:	ins    BYTE PTR es:[edi],dx
  40791c:	sbb    bl,ah
  40791e:	mov    esi,DWORD PTR ds:0x323adff4
  407924:	mov    edi,0x25188bfb
  407929:	scas   al,BYTE PTR es:[edi]
  40792a:	ins    BYTE PTR es:[edi],dx
  40792b:	addr16 xchg ecx,eax
  40792d:	fbstp  TBYTE PTR [eax+0x26]
  407930:	test   BYTE PTR [ebp-0xddb1969],bl
  407936:	inc    ebx
  407937:	adc    DWORD PTR [ebx],ecx
  407939:	(bad)  
  40793a:	jmp    0x2e52:0xf5cb8bd7
  407941:	add    al,0x50
  407943:	add    al,BYTE PTR [edx+0x56]
  407946:	jmp    0x40797c
  407948:	mov    BYTE PTR [edi],bh
  40794a:	cmc    
  40794b:	sub    DWORD PTR [edi],0x11af04ef
  407951:	pop    ss
  407952:	jmp    0x3a56:0xb2c72e79
  407959:	push   esi
  40795a:	sub    BYTE PTR ds:0xd124e771,dl
  407960:	lahf   
  407961:	cmp    DWORD PTR [eax],edx
  407963:	mov    al,0x4f
  407965:	mov    eax,0x4604fa0
  40796a:	push   ebp
  40796b:	int3   
  40796c:	mov    dl,0x1b
  40796e:	mov    ebp,0xb866f9dd
  407973:	and    eax,DWORD PTR [ecx-0x29]
  407976:	into   
  407977:	xor    BYTE PTR [edi-0x30],cl
  40797a:	adc    cl,BYTE PTR [ebx-0x58]
  40797d:	dec    edx
  40797e:	xchg   esp,eax
  40797f:	mov    ch,0xf4
  407981:	mov    ds:0x506438e1,al
  407986:	dec    ecx
  407987:	xor    ecx,esi
  407989:	fnsave [ebp+0x46b4d286]
  40798f:	mov    al,ds:0x2ec4f4ef
  407994:	add    edi,esp
  407996:	cdq    
  407997:	mov    ds:0x44efd7f3,eax
  40799c:	mov    bh,0x17
  40799e:	push   ecx
  40799f:	gs clc 
  4079a1:	enter  0x78de,0x19
  4079a5:	test   DWORD PTR [esi+0x644dd3b7],0xbd6dead1
  4079af:	mov    dh,0xa7
  4079b1:	shl    DWORD PTR [esi+0x5748bde9],0x5c
  4079b8:	inc    edx
  4079b9:	push   es
  4079ba:	repnz pop ebx
  4079bc:	xor    BYTE PTR [ebp-0x14ab565a],ah
  4079c2:	inc    edi
  4079c3:	or     ebp,DWORD PTR [esi-0x10ce8032]
  4079c9:	test   eax,0x6b7eded1
  4079ce:	adc    edx,DWORD PTR [edx]
  4079d0:	push   ebx
  4079d1:	sbb    al,0x7a
  4079d3:	enter  0xc407,0xbb
  4079d7:	cmp    eax,0x259d6e59
  4079dc:	xor    bh,BYTE PTR [eax+0x11cdf9e8]
  4079e2:	adc    DWORD PTR [edx+0x7dd2412f],ebp
  4079e8:	call   0x648990c0
  4079ed:	imul   ecx,DWORD PTR [esi+0x502abcc7],0x7cc7ba59
  4079f7:	xor    BYTE PTR [eax],bl
  4079f9:	ins    DWORD PTR es:[edi],dx
  4079fa:	dec    esi
  4079fb:	cli    
  4079fc:	aaa    
  4079fd:	stc    
  4079fe:	mov    ecx,0x5cf1ea26
  407a03:	enter  0x41a7,0xf3
  407a07:	mov    ds:0xaeeb153,al
  407a0c:	push   esi
  407a0d:	mov    al,al
  407a0f:	std    
  407a10:	dec    edi
  407a11:	cld    
  407a12:	lds    ecx,FWORD PTR [edi]
  407a14:	sbb    ebx,DWORD PTR [ebx+0xb94c66]
  407a1a:	pop    es
  407a1b:	xor    ah,BYTE PTR [eax]
  407a1d:	mov    ds:0x50e6999f,al
  407a22:	cmp    BYTE PTR [eax+0x16418c9e],al
  407a28:	jle    0x407a07
  407a2a:	pop    esp
  407a2b:	xchg   ecx,eax
  407a2c:	pop    esp
  407a2d:	and    dh,BYTE PTR [edx]
  407a2f:	push   ecx
  407a30:	imul   edi,DWORD PTR [esi-0x40253af3],0x25
  407a37:	sub    al,0x4a
  407a39:	xchg   esi,ebp
  407a3b:	daa    
  407a3c:	dec    ebp
  407a3d:	cwde   
  407a3e:	repz test eax,0xd22aee0f
  407a44:	out    dx,al
  407a45:	add    al,0xec
  407a47:	adc    DWORD PTR ss:[edi-0x6c],0x41
  407a4c:	xchg   BYTE PTR [esp+esi*8+0x5f2e1c7d],dh
  407a53:	dec    edx
  407a54:	xchg   BYTE PTR [ecx-0x2e0f6199],bl
  407a5a:	xchg   ecx,eax
  407a5b:	imul   eax,ebp,0x25
  407a5e:	mov    ds:0x6632a6d7,al
  407a63:	adc    cl,BYTE PTR [edi+0x70c1776]
  407a69:	out    0x29,eax
  407a6b:	xor    dl,BYTE PTR [esi-0x7c8753ad]
  407a71:	add    eax,0x1791171e
  407a76:	mov    eax,ds:0x18dda497
  407a7b:	or     ah,BYTE PTR [edx+edx*1]
  407a7e:	pop    ds
  407a7f:	test   al,0x7d
  407a81:	and    al,0xfd
  407a83:	mov    esp,0x833d725
  407a88:	adc    DWORD PTR [edx-0x2c9ffbb3],edx
  407a8e:	xchg   ecx,eax
  407a8f:	xor    al,0xa1
  407a91:	pop    ds
  407a92:	sti    
  407a93:	inc    edi
  407a94:	mov    ah,0xd3
  407a96:	call   0xe33b2c7d
  407a9b:	cwde   
  407a9c:	je     0x407a86
  407a9e:	lods   al,BYTE PTR ds:[esi]
  407a9f:	add    al,0x3d
  407aa1:	test   BYTE PTR [edx-0xd78c16b],ch
  407aa7:	jbe    0x407b00
  407aa9:	cmc    
  407aaa:	adc    al,0x8e
  407aac:	mov    bl,0xf4
  407aae:	mov    dl,0xa6
  407ab0:	jmp    0x407b29
  407ab2:	fld    QWORD PTR [ecx]
  407ab4:	xchg   esi,eax
  407ab5:	or     DWORD PTR ds:0xe8040fc,0xffffff8d
  407abc:	push   ds
  407abd:	dec    esi
  407abe:	addr16 sub eax,0x7dd0fa30
  407ac4:	jmp    0x948d:0x59255ae5
  407acb:	xchg   edi,eax
  407acc:	call   0x70be:0x6e4615bf
  407ad3:	push   ecx
  407ad4:	adc    ebx,DWORD PTR [eax]
  407ad6:	push   edx
  407ad7:	mov    cl,0x6a
  407ad9:	push   ss
  407ada:	test   DWORD PTR [ecx+0x55de1028],esp
  407ae0:	mov    ah,0x10
  407ae2:	cmc    
  407ae3:	jns    0x407a66
  407ae5:	and    esp,DWORD PTR [edi]
  407ae7:	adc    ebp,0x4b
  407aea:	mov    ebp,0x115e2cf2
  407aef:	dec    ecx
  407af0:	cmp    al,0x4e
  407af2:	mov    ds:0x8627b203,eax
  407af7:	jecxz  0x407b51
  407af9:	and    dl,BYTE PTR [edx-0x7e0fba75]
  407aff:	xor    BYTE PTR [edx+edi*8-0x2916d9b0],cl
  407b06:	idiv   edi
  407b08:	jmp    DWORD PTR [esi-0x75]
  407b0b:	inc    ebp
  407b0c:	cld    
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	adc    al,0x19
  407b35:	sar    ch,cl
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b9a
  407b40:	push   es
  407b41:	(bad)  
  407b42:	xlat   BYTE PTR ds:[ebx]
  407b43:	push   ecx
  407b44:	ror    BYTE PTR [edx-0x77376b81],cl
  407b4a:	jnp    0x407b76
  407b4c:	and    al,0x65
  407b4e:	(bad)  
  407b4f:	fdiv   st,st(7)
  407b51:	jae    0x407b4d
  407b53:	mov    al,0x1a
  407b55:	nop
  407b56:	jns    0x407baa
  407b58:	nop
  407b59:	ret    
  407b5a:	pop    edx
  407b5b:	jnp    0x407b6b
  407b5d:	mov    ch,0x9e
  407b5f:	sub    al,0xb5
  407b61:	mov    ecx,0xb9f052fd
  407b66:	and    ebp,esi
  407b68:	ret    
  407b69:	aam    0x72
  407b6b:	inc    ecx
  407b6c:	mov    ds:0x6ba2b115,eax
  407b71:	and    bl,BYTE PTR [esp+edx*8]
  407b74:	mov    al,ds:0xe1c463b9
  407b79:	mov    bl,BYTE PTR [edi+0x29]
  407b7c:	les    edi,FWORD PTR [eax+0x339f7603]
  407b82:	fs jmp 0xcce1:0xe7a3a715
  407b8a:	ja     0x407b9e
  407b8c:	mov    ah,0x1f
  407b8e:	fild   DWORD PTR [ebp+0x54]
  407b91:	fxch   st(0)
  407b93:	fwait
  407b94:	jne    0x407b21
  407b96:	xor    dl,BYTE PTR [edi]
  407b98:	sub    edi,DWORD PTR [edi]
  407b9a:	add    BYTE PTR [esp+ebx*8],dh
  407b9d:	xchg   edx,esp
  407b9f:	jno    0x407b9f
  407ba1:	xlat   BYTE PTR ds:[ebx]
  407ba2:	das    
  407ba3:	xchg   ebx,eax
  407ba4:	pop    edi
  407ba5:	mov    ch,BYTE PTR [edi+edx*4+0x3c]
  407ba9:	mov    ecx,0x5d46f362
  407bae:	sbb    edi,edx
  407bb0:	pop    ecx
  407bb1:	gs inc ebp
  407bb3:	mov    DWORD PTR [ebp-0x47],ebx
  407bb6:	mov    ?,WORD PTR [esi-0x1d863add]
  407bbc:	xchg   ebx,eax
  407bbd:	mov    esp,0xdec79901
  407bc2:	pusha  
  407bc3:	sub    DWORD PTR ds:0x587cd6d6,esp
  407bc9:	sub    ah,BYTE PTR [edi+0x14]
  407bcc:	dec    edx
  407bcd:	loopne 0x407b7c
  407bcf:	add    BYTE PTR [ecx+0x4a],bl
  407bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bd3:	cmp    ch,BYTE PTR [ebp+0x4ea46205]
  407bd9:	dec    ecx
  407bda:	cmp    eax,0x9b82381c
  407bdf:	mov    cl,0x2d
  407be1:	rol    DWORD PTR [edx],0xc2
  407be4:	pop    es
  407be5:	sbb    edi,edx
  407be7:	push   eax
  407be8:	lods   eax,DWORD PTR ds:[esi]
  407be9:	sbb    eax,0x5995ced3
  407bee:	call   0xf2f2:0x787ed513
  407bf5:	mov    al,ds:0x33305991
  407bfa:	push   ebp
  407bfb:	fst    DWORD PTR [ecx]
  407bfd:	ins    DWORD PTR es:[edi],dx
  407bfe:	aaa    
  407bff:	jns    0x407bf2
  407c01:	pop    ss
  407c02:	test   eax,0x6c583707
  407c07:	and    BYTE PTR [ebx],al
  407c09:	sbb    DWORD PTR [edi+eiz*1-0x3],eax
  407c0d:	loop   0x407c77
  407c0f:	outs   dx,DWORD PTR ds:[esi]
  407c10:	test   eax,0xe1476122
  407c15:	jmp    FWORD PTR [ecx]
  407c17:	xor    bl,bh
  407c19:	in     al,dx
  407c1a:	fbld   TBYTE PTR [esi]
  407c1c:	mov    eax,ds:0xe0804f69
  407c21:	imul   ebp
  407c23:	fisub  WORD PTR ds:0xd7032e99
  407c29:	in     eax,dx
  407c2a:	ins    DWORD PTR es:[edi],dx
  407c2b:	push   ebx
  407c2c:	add    dh,ch
  407c2e:	mov    ch,0x8a
  407c30:	sti    
  407c31:	fcomip st,st(2)
  407c33:	test   esi,0xa3fa2235
  407c39:	mov    bh,0x7a
  407c3b:	and    esp,0xffffff82
  407c3e:	arpl   bp,bx
  407c40:	sahf   
  407c41:	daa    
  407c42:	push   es
  407c43:	or     bh,bh
  407c45:	mov    eax,0xdb530e73
  407c4a:	or     BYTE PTR [edx],0x78
  407c4d:	add    al,0xeb
  407c4f:	adc    eax,0x1fb0409b
  407c54:	push   ds
  407c55:	dec    ecx
  407c56:	push   ss
  407c57:	or     ebp,DWORD PTR [eax+0x10]
  407c5a:	aaa    
  407c5b:	in     al,0x94
  407c5d:	int    0x7f
  407c5f:	push   ebp
  407c60:	or     dh,bl
  407c62:	out    0x60,al
  407c64:	test   BYTE PTR [eax-0x5a],0x1f
  407c68:	sub    BYTE PTR [ebp+0x21db1ce9],dh
  407c6e:	pop    esp
  407c6f:	ins    WORD PTR es:[edi],dx
  407c71:	(bad)  
  407c72:	cs push ss
  407c74:	push   edi
  407c75:	pushf  
  407c76:	les    eax,FWORD PTR [ebx]
  407c78:	ss int3 
  407c7a:	mov    dl,0x55
  407c7c:	aad    0x6f
  407c7e:	add    eax,DWORD PTR gs:[eax+ecx*1-0x75]
  407c83:	(bad)  
  407c84:	pop    ebp
  407c85:	xchg   esp,eax
  407c86:	data16 cmp BYTE PTR [esi-0xf],dl
  407c8a:	pmaddwd mm3,QWORD PTR [eax+edx*4+0x443368c1]
  407c92:	retf   
  407c93:	fiadd  WORD PTR [edi+esi*4+0x2d7a1557]
  407c9a:	sar    BYTE PTR [edi+0x2d],1
  407c9d:	shl    DWORD PTR [edi-0x454dac5e],cl
  407ca3:	mov    ebp,0xde2b2500
  407ca8:	push   es
  407ca9:	repz ja 0x407c75
  407cac:	and    eax,0xd9b1200f
  407cb1:	push   ebp
  407cb2:	push   ecx
  407cb3:	mov    ebp,0x6a43783d
  407cb8:	mov    ebx,0xe09334a0
  407cbd:	push   edx
  407cbe:	sub    al,0x56
  407cc0:	sbb    ebx,DWORD PTR [edi+0x3e]
  407cc3:	repz mov al,ds:0xa4dcb331
  407cc9:	not    DWORD PTR [esi+0x4288e647]
  407ccf:	mov    ds:0x656d190e,eax
  407cd4:	xor    eax,0xcb6fff8e
  407cd9:	ror    BYTE PTR [ebx-0x2a],cl
  407cdc:	iret   
  407cdd:	jmp    0x982b0b70
  407ce2:	xor    bl,bh
  407ce4:	leave  
  407ce5:	ftst   
  407ce7:	mov    ah,0xd0
  407ce9:	fs mov cl,0x32
  407cec:	fldenv [ebx+0x4cfa405f]
  407cf2:	push   cs
  407cf3:	cmp    al,0xf8
  407cf5:	ja     0x407cb2
  407cf7:	outs   dx,DWORD PTR ds:[esi]
  407cf8:	or     bh,bl
  407cfa:	xor    eax,0x3b7cada9
  407cff:	cmp    esi,ebx
  407d01:	push   edi
  407d02:	sub    bh,BYTE PTR cs:0x2afba6b1
  407d09:	mov    bl,0x90
  407d0b:	push   ecx
  407d0c:	fs inc eax
  407d0e:	in     eax,0xeb
  407d10:	xchg   BYTE PTR [esi-0x25a74690],dl
  407d16:	adc    al,0x2
  407d18:	inc    BYTE PTR [esi+ecx*1]
  407d1b:	ins    BYTE PTR es:[edi],dx
  407d1c:	adc    BYTE PTR [ebx+0x76],al
  407d1f:	jecxz  0x407caa
  407d21:	repnz rcl eax,1
  407d24:	fst    QWORD PTR [edi+0x8fe31c6]
  407d2a:	jns    0x407cf4
  407d2c:	in     eax,dx
  407d2d:	and    BYTE PTR [edi-0x80],ah
  407d30:	imul   ebp,DWORD PTR [edi+0x76aaa1cb],0xffffffef
  407d37:	fcom   DWORD PTR [eax]
  407d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d3a:	dec    eax
  407d3b:	gs mov ebp,0x3caca464
  407d41:	or     al,0xb3
  407d43:	mov    DWORD PTR [ebp+0x1b4337cf],eax
  407d49:	jno    0x407cfb
  407d4b:	xchg   DWORD PTR [eax-0x73bf217e],esp
  407d51:	fmul   DWORD PTR [esi+0x73]
  407d54:	inc    esp
  407d55:	mov    ch,BYTE PTR [ebx]
  407d57:	mov    BYTE PTR [ebx+ebx*2+0x55],cl
  407d5b:	fnstsw WORD PTR [esi+0x3c]
  407d5e:	mov    edi,DWORD PTR [edx-0x28]
  407d61:	shl    BYTE PTR [edi],0xbb
  407d64:	and    ah,BYTE PTR [edi+ebx*1-0x3f30967d]
  407d6b:	and    eax,0xc379b7df
  407d70:	je     0x407d6e
  407d72:	dec    ebp
  407d73:	dec    ebp
  407d74:	bound  ebp,QWORD PTR [ebp+ecx*4+0x25]
  407d78:	call   0x913b6627
  407d7d:	add    bh,BYTE PTR [ebx]
  407d7f:	sar    bl,0xa0
  407d82:	pusha  
  407d83:	mov    eax,DWORD PTR [edi]
  407d85:	or     esp,ecx
  407d87:	inc    ebx
  407d88:	xor    DWORD PTR [edi+0x7daa7617],esi
  407d8e:	into   
  407d8f:	mov    esp,0x531049d7
  407d94:	jns    0x407deb
  407d96:	dec    esp
  407d97:	ja     0x407d25
  407d99:	xchg   esp,eax
  407d9a:	int3   
  407d9b:	mov    BYTE PTR [edi+esi*4+0x4e8e79e1],cl
  407da2:	inc    eax
  407da3:	jbe    0x407dab
  407da5:	inc    edi
  407da6:	ret    
  407da7:	sbb    eax,0x29084b19
  407dac:	jnp    0x407e2a
  407dae:	(bad)  
  407daf:	fisub  WORD PTR ds:0xeffa93a4
  407db5:	pop    ebx
  407db6:	xchg   ebx,eax
  407db7:	outs   dx,DWORD PTR ds:[esi]
  407db8:	js     0x407dcd
  407dba:	fxrstor [edi+0xc]
  407dbe:	sub    al,al
  407dc0:	nop
  407dc1:	sbb    dh,dh
  407dc3:	xchg   esp,eax
  407dc4:	push   eax
  407dc5:	(bad)  
  407dc6:	jae    0x407dd3
  407dc8:	retf   0xc477
  407dcb:	adc    BYTE PTR ds:0x142ce980,bh
  407dd1:	shr    esp,1
  407dd3:	sub    al,0x0
  407dd5:	aas    
  407dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dd7:	mov    WORD PTR [ebx+0x5c806178],gs
  407ddd:	lds    esp,FWORD PTR [eax-0x4b2159d3]
  407de3:	cmp    esi,DWORD PTR [edx-0x80]
  407de6:	push   ebx
  407de7:	test   BYTE PTR [ebx-0x6b3c848],dh
  407ded:	fs loope 0x407e11
  407df0:	into   
  407df1:	outs   dx,DWORD PTR ds:[esi]
  407df2:	add    DWORD PTR [eax+0x71de561a],edx
  407df8:	hlt    
  407df9:	popf   
  407dfa:	push   eax
  407dfb:	mov    ah,0x2c
  407dfd:	pop    eax
  407dfe:	jecxz  0x407e79
  407e00:	(bad)  
  407e01:	jne    0x407e29
  407e03:	sar    bh,1
  407e05:	sub    ebx,edi
  407e07:	dec    edi
  407e08:	call   0x90881065
  407e0d:	jns    0x407dac
  407e0f:	sbb    edx,DWORD PTR [edx]
  407e11:	xor    ebx,edx
  407e13:	pop    ss
  407e14:	(bad)  
  407e16:	cdq    
  407e17:	arpl   WORD PTR [esi+0x5ff7cac0],bx
  407e1d:	push   edi
  407e1e:	mov    cl,0xca
  407e20:	push   ss
  407e21:	mov    edi,0xa874ecfa
  407e26:	gs ds inc esp
  407e29:	imul   esp,edx,0xffffffbb
  407e2c:	mov    bl,0xe2
  407e2e:	dec    esi
  407e2f:	push   0xbea2f201
  407e34:	sub    al,0xf6
  407e36:	out    dx,eax
  407e37:	jbe    0x407e36
  407e39:	xchg   ecx,eax
  407e3a:	sub    DWORD PTR [edi+0x560e45ca],edi
  407e40:	inc    ecx
  407e41:	xchg   ecx,eax
  407e42:	daa    
  407e43:	loop   0x407ea4
  407e45:	or     ebp,DWORD PTR [edi]
  407e47:	sti    
  407e48:	mov    ds:0x19fdc85a,eax
  407e4d:	pop    eax
  407e4e:	sbb    BYTE PTR [eax-0x69b8e784],cl
  407e54:	push   esi
  407e55:	mov    eax,0x4de733e3
  407e5a:	fild   DWORD PTR [edx+0x44256739]
  407e60:	push   cs
  407e61:	push   ds
  407e62:	add    DWORD PTR cs:[ebx+0x4205ae34],esp
  407e69:	icebp  
  407e6a:	cmp    ah,BYTE PTR [edi]
  407e6c:	sbb    eax,0xc3f1c324
  407e71:	pushf  
  407e72:	adc    dl,BYTE PTR ss:[ebx+0x13]
  407e76:	push   ebx
  407e77:	pop    ebx
  407e78:	mov    dh,0xcb
  407e7a:	mov    al,0x48
  407e7c:	sbb    esi,ecx
  407e7e:	dec    ebx
  407e7f:	mov    cl,0xb9
  407e81:	inc    esp
  407e82:	xchg   ecx,eax
  407e83:	mov    ?,WORD PTR [ebx-0x16a680f5]
  407e89:	loopne 0x407e5c
  407e8b:	(bad)  
  407e8d:	cmp    bl,BYTE PTR [ebp-0x3e]
  407e90:	or     BYTE PTR [eax],0xe5
  407e93:	add    BYTE PTR [edi-0x57fb14cb],0x39
  407e9a:	pop    ebx
  407e9b:	lahf   
  407e9c:	sahf   
  407e9d:	dec    ecx
  407e9e:	hlt    
  407e9f:	out    dx,eax
  407ea0:	or     BYTE PTR [edx+ebx*1-0x70a015e3],dl
  407ea7:	bound  edx,QWORD PTR [ebp-0x5775d19b]
  407ead:	fucomi st,st(1)
  407eaf:	addr16 aaa 
  407eb1:	dec    esi
  407eb2:	out    dx,eax
  407eb3:	dec    esi
  407eb4:	jae    0x407edd
  407eb6:	pop    es
  407eb7:	cdq    
  407eb8:	add    ah,BYTE PTR [esi-0x6efa34e0]
  407ebe:	jmp    0x5860:0xa850d184
  407ec5:	std    
  407ec6:	push   ebx
  407ec7:	leave  
  407ec8:	ins    BYTE PTR es:[edi],dx
  407ec9:	adc    DWORD PTR [ebp-0x4e],ecx
  407ecc:	dec    ecx
  407ecd:	sar    DWORD PTR [edi+0xa],0x32
  407ed1:	cs dec edx
  407ed3:	arpl   WORD PTR [ebp+eiz*2-0xc7cab49],bp
  407eda:	sbb    ah,ch
  407edc:	adc    al,0xe
  407ede:	out    0xbe,eax
  407ee0:	nop
  407ee1:	je     0x407f2d
  407ee3:	rol    BYTE PTR [ecx+0x5ba7fcac],0x39
  407eea:	in     eax,0xa0
  407eec:	sub    eax,0xab2fe0b9
  407ef1:	std    
  407ef2:	adc    ecx,edi
  407ef4:	pop    edi
  407ef5:	test   DWORD PTR [esp+edx*2-0x23],ebp
  407ef9:	aaa    
  407efa:	and    al,0xba
  407efc:	(bad)  
  407efe:	or     BYTE PTR [eax+0x18],bl
  407f01:	sbb    dl,dh
  407f03:	push   ds
  407f04:	retf   
  407f05:	(bad)  
  407f06:	push   esp
  407f07:	(bad)  
  407f09:	ror    BYTE PTR [esi],0xca
  407f0c:	add    BYTE PTR [ecx+0x3b6687a2],bh
  407f12:	pop    es
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f2d
  407f78:	gs sbb dh,0xaa
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407f45
  407f84:	xchg   ebx,eax
  407f85:	add    eax,0xeab4d59f
  407f8a:	add    al,0xb6
  407f8c:	pop    es
  407f8d:	pop    ss
  407f8e:	or     DWORD PTR [ebp-0x72],eax
  407f91:	aaa    
  407f92:	sbb    ch,BYTE PTR [ebx]
  407f94:	cmc    
  407f95:	in     eax,dx
  407f96:	jge    0x407f9e
  407f98:	sti    
  407f99:	add    ah,BYTE PTR [esi]
  407f9b:	pop    esp
  407f9c:	xor    ebp,ecx
  407f9e:	out    dx,eax
  407f9f:	jb     0x407fdf
  407fa1:	mov    gs,ecx
  407fa3:	mov    edi,0xbbb8f9fe
  407fa8:	push   esi
  407fa9:	or     BYTE PTR [eax-0x56],0xb0
  407fad:	add    al,0xfc
  407faf:	xchg   DWORD PTR [edi-0x65],edx
  407fb2:	dec    esp
  407fb3:	icebp  
  407fb4:	adc    al,0xb3
  407fb6:	jo     0x40801d
  407fb8:	clc    
  407fb9:	aad    0x91
  407fbb:	add    DWORD PTR [edi-0x4975de30],ebx
  407fc1:	dec    ebx
  407fc2:	jle    0x408037
  407fc4:	inc    ebp
  407fc5:	mov    dl,0x50
  407fc7:	add    dl,al
  407fc9:	sahf   
  407fca:	fcmovnbe st,st(0)
  407fcc:	add    BYTE PTR [esi],0x13
  407fcf:	sub    ebx,DWORD PTR [esi]
  407fd1:	push   esi
  407fd2:	or     eax,0x54e7e9a9
  407fd7:	aad    0xf3
  407fd9:	and    ebx,DWORD PTR [edx-0x74]
  407fdc:	test   al,0x81
  407fde:	mov    BYTE PTR [ecx+eax*8+0x55],dh
  407fe2:	stos   BYTE PTR es:[edi],al
  407fe3:	add    al,0x4
  407fe5:	popf   
  407fe6:	popa   
  407fe7:	lods   eax,DWORD PTR ds:[esi]
  407fe8:	and    ebx,ecx
  407fea:	sub    BYTE PTR [ebp-0x75177150],al
  407ff0:	mov    ah,0x8d
  407ff2:	shl    esi,0xd8
  407ff5:	inc    eax
  407ff6:	or     BYTE PTR [edi+0x636a42bc],dl
  407ffc:	iret   
  407ffd:	mov    WORD PTR [ecx-0x6d92720f],?
  408003:	sub    eax,0x323b127e
  408008:	outs   dx,DWORD PTR ds:[esi]
  408009:	stos   BYTE PTR es:[edi],al
  40800a:	jecxz  0x407fe6
  40800c:	jmp    0x74b2:0xb36e34a2
  408013:	(bad)  
  408014:	dec    esp
  408015:	mov    eax,ebx
  408017:	(bad)  
  408018:	shl    DWORD PTR [ecx],1
  40801a:	sbb    eax,0x7e0de5b1
  40801f:	out    0x23,eax
  408021:	in     al,0xc1
  408023:	xor    dl,cl
  408025:	xchg   ecx,eax
  408026:	mov    ebp,0x2b8abe8e
  40802b:	pop    edx
  40802c:	cmp    edi,DWORD PTR [ebp+0x34e7a700]
  408032:	mov    cl,0x99
  408034:	ins    BYTE PTR es:[edi],dx
  408035:	lds    esp,FWORD PTR [eax+ecx*2+0x16]
  408039:	loope  0x40807f
  40803b:	std    
  40803c:	imul   esi,edi,0x52
  40803f:	jnp    0x407fd6
  408041:	jp     0x407fc6
  408043:	leave  
  408044:	mov    bh,BYTE PTR [ecx-0x404c8d5a]
  40804a:	ss ins BYTE PTR es:[edi],dx
  40804c:	fld    TBYTE PTR [eax+0x45]
  40804f:	cmp    esp,DWORD PTR [ebx]
  408051:	icebp  
  408052:	and    eax,0x7abba781
  408057:	or     DWORD PTR [ecx+0x6b],ebx
  40805a:	scas   eax,DWORD PTR es:[edi]
  40805b:	icebp  
  40805c:	xchg   esi,eax
  40805d:	jmp    0x408084
  40805f:	jb     0x407fe3
  408061:	xchg   BYTE PTR [ebx+0x53],al
  408064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408065:	adc    BYTE PTR [ebx-0x414cda83],al
  40806b:	mov    edx,0x58f9f00c
  408070:	jne    0x408044
  408072:	cld    
  408073:	lods   al,BYTE PTR ds:[esi]
  408074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408075:	mov    cl,BYTE PTR [edi]
  408077:	xchg   edi,eax
  408078:	rcr    BYTE PTR [eax],1
  40807a:	and    DWORD PTR [esi+0x5bb797d9],edx
  408080:	aaa    
  408081:	aas    
  408082:	xchg   ecx,eax
  408083:	add    BYTE PTR [ebp+eiz*2+0x3a],ch
  408087:	popa   
  408088:	repnz leave 
  40808a:	iret   
  40808b:	pop    edi
  40808c:	imul   esp,DWORD PTR [ebp+esi*2+0x2daeca88],0xffffffd8
  408094:	dec    esi
  408095:	mov    bl,0xff
  408097:	mov    ch,BYTE PTR [ecx+0xfc707e6]
  40809d:	xchg   ebx,eax
  40809e:	jmp    0x4080a3
  4080a0:	fisttp DWORD PTR ss:[esi]
  4080a3:	out    dx,eax
  4080a4:	scas   al,BYTE PTR es:[edi]
  4080a5:	pop    esp
  4080a6:	mov    dl,0xf5
  4080a8:	adc    al,0x50
  4080aa:	repnz xor ebp,DWORD PTR [eax-0x340ef553]
  4080b1:	scas   eax,DWORD PTR es:[edi]
  4080b2:	outs   dx,BYTE PTR ds:[esi]
  4080b3:	add    DWORD PTR [esp+ecx*1-0x28c5c400],ebp
  4080ba:	jns    0x4080b4
  4080bc:	dec    eax
  4080bd:	cmp    BYTE PTR [edx+0x74],0x11
  4080c1:	sub    dh,ch
  4080c3:	push   es
  4080c4:	das    
  4080c5:	nop
  4080c6:	mov    es,WORD PTR [edx]
  4080c8:	ja     0x4080a5
  4080ca:	or     bl,al
  4080cc:	push   ebx
  4080cd:	mov    bl,0x5f
  4080cf:	push   ebp
  4080d0:	xchg   edx,eax
  4080d1:	xor    bh,BYTE PTR [esi]
  4080d3:	dec    ebp
  4080d4:	imul   edi,DWORD PTR [edi],0x1
  4080d7:	mov    WORD PTR [edx],?
  4080d9:	mov    ecx,DWORD PTR [edx+0x30]
  4080dc:	dec    edi
  4080dd:	mov    BYTE PTR [eax+0x41],dl
  4080e0:	jae    0x4080e9
  4080e2:	inc    esp
  4080e3:	dec    ecx
  4080e4:	test   al,0xe3
  4080e6:	sti    
  4080e7:	add    dl,BYTE PTR [eax]
  4080e9:	adc    DWORD PTR [edi+esi*8-0x34],edx
  4080ed:	mov    eax,0x5a2b6259
  4080f2:	loopne 0x408114
  4080f4:	mov    dl,0xd9
  4080f6:	jb     0x40808f
  4080f8:	ins    DWORD PTR es:[edi],dx
  4080f9:	icebp  
  4080fa:	pop    es
  4080fb:	jecxz  0x408140
  4080fd:	pop    edi
  4080fe:	aas    
  4080ff:	rcl    BYTE PTR [ebx+0x23],cl
  408102:	inc    esi
  408103:	mov    cl,0x1c
  408106:	mov    bl,0x58
  408108:	shl    ch,0x47
  40810b:	scas   eax,DWORD PTR es:[edi]
  40810c:	dec    esp
  40810d:	inc    eax
  40810e:	enter  0xbd0f,0x7e
  408112:	push   ds
  408113:	and    BYTE PTR [eax],ch
  408115:	or     ch,BYTE PTR [eax]
  408117:	outs   dx,BYTE PTR ds:[esi]
  408118:	sbb    ah,BYTE PTR [ebp+0x10]
  40811b:	mov    ds,esi
  40811d:	les    esi,FWORD PTR [eax+0x30]
  408120:	inc    ebp
  408121:	jle    0x4080f9
  408123:	mov    al,0xb9
  408125:	mov    ah,0x9
  408127:	(bad)  
  408128:	push   edx
  408129:	shl    DWORD PTR [eax],0x52
  40812c:	mov    DWORD PTR [esi+0x10],edx
  40812f:	jle    0x408173
  408131:	jae    0x408115
  408133:	add    al,BYTE PTR [ecx-0x77f78b45]
  408139:	push   0x1a
  40813b:	sub    al,0xd0
  40813d:	dec    ebx
  40813e:	jb     0x4080f4
  408140:	push   cs
  408141:	xor    eax,0x5b387292
  408146:	dec    ebx
  408147:	pop    ss
  408148:	les    esp,FWORD PTR [esi-0x57]
  40814b:	add    ch,bh
  40814d:	push   edx
  40814e:	xor    al,0x94
  408150:	mov    cl,0x94
  408152:	imul   esp,edi,0xac8c7d16
  408158:	push   0xf9c33c2d
  40815d:	scas   al,BYTE PTR es:[edi]
  40815e:	in     eax,0x3f
  408160:	mov    ebx,0xa3a28eb8
  408165:	xchg   edi,eax
  408166:	cmp    DWORD PTR [ebx+0x2b33375c],eax
  40816c:	fbstp  TBYTE PTR [esi]
  40816e:	mov    BYTE PTR [ebp+0x10],0x81
  408172:	stc    
  408173:	js     0x408175
  408175:	add    edx,DWORD PTR [edx+0x56]
  408178:	out    0xcd,al
  40817a:	xor    DWORD PTR [edi+0x11],0xffffff8a
  40817e:	aam    0x66
  408180:	mov    ds:0x16603d1,al
  408185:	scas   eax,DWORD PTR es:[edi]
  408186:	jmp    0xbb03:0xf59638b9
  40818d:	aaa    
  40818e:	imul   ebp,eax,0xfffffffe
  408191:	inc    edi
  408192:	mov    eax,0xd1fec5a0
  408197:	loope  0x408121
  408199:	test   DWORD PTR [edi+0x3c],edi
  40819c:	push   ds
  40819d:	test   eax,0x6657a6b3
  4081a2:	fs das 
  4081a4:	pop    ds
  4081a5:	cmc    
  4081a6:	sub    eax,0x1aabc615
  4081ab:	mov    ds:0x96ef0062,al
  4081b0:	cmp    al,0x9e
  4081b2:	out    0x6e,al
  4081b4:	lock jp 0x408178
  4081b7:	lock jns 0x4081fa
  4081ba:	loope  0x4081cd
  4081bc:	mov    eax,0xe6a1d335
  4081c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c2:	aam    0x7b
  4081c4:	xor    DWORD PTR [esi-0x70],0xd5a39e90
  4081cb:	jl     0x4081ec
  4081cd:	push   ds
  4081ce:	and    DWORD PTR [edx+0x6e],edx
  4081d1:	dec    ebx
  4081d2:	pop    edi
  4081d3:	jmp    0x54f72755
  4081d8:	sbb    dl,al
  4081da:	in     al,dx
  4081db:	xor    al,0xd0
  4081dd:	int3   
  4081de:	aad    0x88
  4081e0:	es jae 0x40816d
  4081e3:	call   0xd79e:0xb61266b2
  4081ea:	jb     0x408196
  4081ec:	repnz fldcw WORD PTR [esi+0x31dc77e]
  4081f3:	scas   eax,DWORD PTR es:[edi]
  4081f4:	mov    dl,0x25
  4081f6:	test   ch,dl
  4081f8:	xor    ebp,DWORD PTR [edi+0x7a]
  4081fb:	shr    BYTE PTR [edi-0x156d4c79],cl
  408201:	pop    es
  408202:	cmp    DWORD PTR [ecx],edx
  408204:	lods   eax,DWORD PTR ds:[esi]
  408205:	jbe    0x4081f3
  408207:	inc    edx
  408208:	mov    edi,0x14f675d6
  40820d:	pop    edi
  40820e:	retf   
  40820f:	hlt    
  408210:	pop    ebx
  408211:	in     al,dx
  408212:	and    BYTE PTR [edi-0x1b],0x2d
  408216:	mov    dh,0x5
  408218:	mov    ah,0xf6
  40821b:	std    
  40821c:	jmp    0x40824e
  40821e:	inc    eax
  40821f:	pusha  
  408220:	inc    esi
  408221:	mov    ecx,0xb429825
  408226:	xchg   ebx,eax
  408227:	adc    al,0xf3
  408229:	das    
  40822a:	xchg   ebp,eax
  40822b:	mov    ebp,0xe21eef66
  408230:	(bad)  
  408231:	mov    bh,0x5
  408233:	and    ah,BYTE PTR [edi-0x25]
  408236:	(bad)  
  408237:	ret    0x42f6
  40823a:	pop    ds
  40823b:	loopne 0x40825d
  40823d:	sub    eax,0x9253ea8a
  408242:	hlt    
  408243:	mov    ebp,0x378cf96
  408248:	repz jns 0x408219
  40824b:	jge    0x4082b9
  40824d:	fmul   DWORD PTR [ecx+0x2f]
  408250:	sbb    edx,DWORD PTR [edx-0x55]
  408253:	sub    al,0xed
  408255:	mov    ds:0xe71e545b,eax
  40825a:	push   ecx
  40825b:	imul   ebx,DWORD PTR [ebx+eax*4+0x4b97412a],0xec864f12
  408266:	std    
  408267:	into   
  408268:	add    BYTE PTR [esi],ah
  40826a:	mov    DWORD PTR [edi+0x28c95bed],ebx
  408270:	cwde   
  408271:	or     DWORD PTR [edi],edi
  408273:	cmc    
  408274:	aaa    
  408275:	adc    eax,ebp
  408277:	pusha  
  408278:	push   ds
  408279:	ins    BYTE PTR es:[edi],dx
  40827a:	mov    ecx,0x7fd786cf
  40827f:	adc    al,0x47
  408281:	test   BYTE PTR [edi],al
  408283:	lds    edi,FWORD PTR [edi-0x11aea4ef]
  408289:	jle    0x4082d3
  40828b:	sbb    cl,dl
  40828d:	shl    bl,0x4b
  408290:	xor    DWORD PTR [ebp+0x3e276110],eax
  408296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408297:	and    bl,BYTE PTR [ebp-0x6]
  40829a:	lds    edi,FWORD PTR [eax-0xa]
  40829d:	sar    DWORD PTR [esi+ecx*1+0x1b2c1cba],1
  4082a4:	cmc    
  4082a5:	fistp  WORD PTR ds:0xdda89848
  4082ab:	jl     0x408234
  4082ad:	je     0x4082fd
  4082af:	xchg   ebp,eax
  4082b0:	test   eax,0xf445367a
  4082b5:	push   0xffffffd6
  4082b7:	call   0x91e14cc8
  4082bc:	push   ebp
  4082bd:	dec    edx
  4082be:	jmp    0x29443867
  4082c3:	stos   BYTE PTR es:[edi],al
  4082c4:	cmc    
  4082c5:	test   esp,0x5b2c7db3
  4082cb:	mov    ebp,0x448d53d1
  4082d0:	jb     0x408284
  4082d2:	cld    
  4082d3:	shl    DWORD PTR [ebp-0x3c],cl
  4082d6:	outs   dx,BYTE PTR ds:[esi]
  4082d7:	dec    ecx
  4082d8:	and    eax,DWORD PTR [eax+0x6aec7ef9]
  4082de:	sbb    DWORD PTR ds:0x717b1894,ebx
  4082e4:	xor    DWORD PTR [eax],esp
  4082e6:	or     DWORD PTR [edi+0x78],esp
  4082e9:	mov    eax,ds:0x5ec25ad
  4082ee:	push   edx
  4082ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082f0:	ins    BYTE PTR es:[edi],dx
  4082f1:	bound  ebx,QWORD PTR [edx]
  4082f3:	ret    
  4082f4:	mov    eax,ds:0x393f0f5a
  4082f9:	pop    ebp
  4082fa:	and    BYTE PTR [eax],al
  4082fc:	adc    dl,BYTE PTR [ebx-0x3894c788]
  408302:	and    ebx,DWORD PTR [ecx]
  408304:	or     ah,0xc2
  408307:	cmp    eax,0xecb2bb82
  40830c:	mov    eax,ds:0x7297b03c
  408311:	imul   edx,DWORD PTR [edx+edi*4],0xffffffa3
  408315:	sbb    al,0x60
  408317:	out    0x9e,al
  408319:	push   edi
  40831a:	and    eax,0xd0a6096c
  40831f:	mov    ah,0x4e
  408321:	dec    eax
  408322:	dec    ebx
  408323:	rcl    cl,cl
  408325:	and    DWORD PTR [ebx],ecx
  408327:	cdq    
  408328:	outs   dx,BYTE PTR ds:[esi]
  408329:	jbe    0x4082c8
  40832b:	jne    0x4082ba
  40832d:	enter  0x99ef,0x23
  408331:	sar    bh,cl
  408333:	xor    esi,DWORD PTR [eax]
  408335:	adc    al,0x94
  408337:	pop    ds
  408338:	mov    bh,0x9d
  40833a:	lds    esi,FWORD PTR [ebx-0x68382923]
  408340:	jg     0x4083ba
  408342:	inc    ebp
  408343:	pop    ecx
  408344:	inc    ebx
  408345:	and    BYTE PTR [edx-0x30],cl
  408348:	mov    BYTE PTR [esi-0x6],cl
  40834b:	fldenv [esi-0x5cdcf4ce]
  408351:	xor    DWORD PTR [ebp+0x3dc233c0],0x32
  408358:	or     ecx,edx
  40835a:	imul   ecx,DWORD PTR [edi],0xffef7e84
  408360:	dec    DWORD PTR [ebx+0x81f045]
  408366:	add    al,0x35
  408368:	inc    eax
  408369:	pop    es
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4345ef,0x17
  408394:	cmp    DWORD PTR ds:0x4345ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4345ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434653
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4345ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4345ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4345ef,eax
  4083e0:	mov    eax,ds:0x4345ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4345ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434713
  4083f7:	sbb    DWORD PTR ds:0x434603,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434687,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434683
  408413:	sbb    DWORD PTR ds:0x434713,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	pop    esi
  40842c:	shr    DWORD PTR [edx+0x7edefb98],1
  408432:	jle    0x408415
  408434:	js     0x4084b4
  408436:	jle    0x4083c8
  408438:	loopne 0x408422
  40843a:	inc    dx
  40843c:	push   cs
  40843d:	icebp  
  40843e:	div    BYTE PTR [ebp+0x3b1e0e0]
  408444:	leavew 
  408446:	out    0x9a,al
  408448:	or     eax,0xa7c041a4
  40844d:	stos   BYTE PTR es:[edi],al
  40844e:	mov    edi,0x8d4b26aa
  408453:	mov    ds:0xc5e598e1,al
  408458:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40845a:	push   ss
  40845b:	dec    eax
  40845c:	fs mov al,0x48
  40845f:	jns    0x408497
  408461:	shl    DWORD PTR [edi],1
  408463:	pushf  
  408464:	into   
  408465:	pop    ss
  408466:	adc    dh,dl
  408468:	xor    eax,0xcc190ca1
  40846d:	dec    edi
  40846e:	inc    ecx
  40846f:	popf   
  408470:	mov    WORD PTR [ebx+esi*4+0x64],gs
  408474:	mov    bh,0x45
  408476:	adc    DWORD PTR [ecx-0x2],edx
  408479:	dec    eax
  40847a:	fmul   DWORD PTR cs:[esi]
  40847d:	repz push 0xffffffc0
  408480:	pushf  
  408481:	shl    DWORD PTR [ecx+eiz*4-0x6c4dc765],1
  408488:	push   0x94c041fe
  40848d:	or     dh,BYTE PTR [edx+ebx*1+0x19e8477c]
  408494:	cdq    
  408495:	ds pop esi
  408497:	xor    ebp,DWORD PTR [eax-0x7b]
  40849a:	add    al,0xad
  40849c:	into   
  40849d:	mov    dl,0xae
  40849f:	cld    
  4084a0:	in     eax,0xa8
  4084a2:	push   es
  4084a3:	pop    eax
  4084a4:	cmp    al,0xb7
  4084a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084a7:	jae    0x40846c
  4084a9:	ins    BYTE PTR es:[edi],dx
  4084aa:	in     al,dx
  4084ab:	(bad)  [ebx+0x459f1912]
  4084b1:	jg     0x4084db
  4084b3:	loopne 0x4084ca
  4084b5:	imul   esi,DWORD PTR [ecx+0x1333e455],0x3324362d
  4084bf:	adc    cl,BYTE PTR [edi+0x20]
  4084c2:	adc    al,0x40
  4084c4:	mov    al,0xbf
  4084c6:	sub    edi,edi
  4084c8:	pop    es
  4084c9:	push   ecx
  4084ca:	int3   
  4084cb:	outs   dx,BYTE PTR ds:[esi]
  4084cc:	scas   eax,DWORD PTR es:[edi]
  4084cd:	jne    0x408535
  4084cf:	das    
  4084d0:	sar    edx,0x81
  4084d3:	test   eax,0xa3ef95ec
  4084d8:	xor    esi,edx
  4084da:	push   ebp
  4084db:	xchg   esp,eax
  4084dc:	inc    edx
  4084dd:	or     al,0xa8
  4084df:	aas    
  4084e0:	xor    al,0xac
  4084e2:	fcom   DWORD PTR [esi-0x72dd2a33]
  4084e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084e9:	mov    al,ds:0xc81660d3
  4084ee:	mov    DWORD PTR [esi],ebp
  4084f0:	and    DWORD PTR [esi],ecx
  4084f2:	test   eax,0x870d64cc
  4084f7:	leave  
  4084f8:	mov    ebp,cs
  4084fa:	xchg   BYTE PTR [edi],bl
  4084fc:	mov    esi,0x12e4a4a6
  408501:	xor    DWORD PTR [ecx+0x724bc498],ebp
  408507:	xchg   ebx,eax
  408508:	ja     0x408495
  40850a:	and    bh,BYTE PTR cs:[ecx-0x14]
  40850e:	or     ah,BYTE PTR [ecx+0x5dd8f4aa]
  408514:	addr16 (bad) 
  408516:	push   0xc1b07f6a
  40851b:	ret    0x69e0
  40851e:	mov    eax,0x6ddc8ec0
  408523:	xor    eax,0x7e1066e6
  408528:	dec    esi
  408529:	sbb    ebp,DWORD PTR [ebp-0x52d4de2f]
  40852f:	mov    al,ds:0xaea529d2
  408534:	pop    eax
  408535:	mov    esp,0x2d1a6a22
  40853a:	jmp    0x4084cd
  40853c:	mov    ebp,0x479d6ccd
  408541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408542:	imul   ecx,DWORD PTR [ecx+0x66],0xb27676e9
  408549:	pop    ss
  40854a:	sub    al,0xc3
  40854c:	loopne 0x4084e1
  40854e:	pop    esp
  40854f:	mov    ds:0xb3b0a9d3,eax
  408554:	push   0xffffffb7
  408556:	stc    
  408557:	inc    ecx
  408558:	cmp    DWORD PTR [esi+esi*1],0x60
  40855c:	retf   
  40855d:	mov    eax,0xe885f1e0
  408562:	adc    ch,ch
  408564:	xchg   BYTE PTR [eax-0x2407684a],dh
  40856a:	push   edx
  40856b:	jecxz  0x408528
  40856d:	nop
  40856e:	hlt    
  40856f:	push   ebp
  408570:	cmp    BYTE PTR [eax],ah
  408572:	xchg   esp,eax
  408573:	sub    esi,0xcb05ab26
  408579:	push   0x34
  40857b:	jmp    0xa6e1:0x5d3287e
  408582:	mov    ?,WORD PTR [eax-0x34]
  408585:	dec    ecx
  408586:	push   0x641bac40
  40858b:	mov    ds:0x6ea2f2c,al
  408590:	jae    0x408561
  408592:	xor    DWORD PTR [esi-0x3a18a2f8],eax
  408598:	cli    
  408599:	mov    cs,WORD PTR [esi]
  40859b:	adc    edi,ebp
  40859d:	aam    0x7
  40859f:	test   BYTE PTR [edx-0x3876bf0],dl
  4085a5:	loope  0x408622
  4085a7:	inc    edx
  4085a8:	push   ecx
  4085a9:	sbb    al,0x76
  4085ab:	sbb    eax,0xbf093925
  4085b0:	inc    edx
  4085b1:	scas   al,BYTE PTR es:[edi]
  4085b2:	hlt    
  4085b3:	xchg   edx,eax
  4085b4:	jg     0x408612
  4085b6:	imul   esi,DWORD PTR [edi-0x588dc8e5],0xc24dcbce
  4085c0:	cmp    DWORD PTR [ebp+0x5e],0x84637956
  4085c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085c8:	sub    dh,ah
  4085ca:	in     eax,dx
  4085cb:	sar    DWORD PTR [ebx+0x7ef48b5c],cl
  4085d1:	mov    bl,0x88
  4085d3:	pushf  
  4085d4:	retf   0x8957
  4085d7:	mov    bl,0x80
  4085d9:	mov    BYTE PTR [ebx-0x5336c6ec],al
  4085df:	in     eax,dx
  4085e0:	push   ecx
  4085e1:	push   eax
  4085e2:	aam    0x5c
  4085e4:	je     0x40865d
  4085e6:	ret    0x47cf
  4085e9:	out    dx,eax
  4085ea:	xchg   edi,eax
  4085eb:	xor    ebx,DWORD PTR [ebx+eiz*4]
  4085ee:	sbb    eax,0x6ab51b47
  4085f3:	hlt    
  4085f4:	mov    bl,0xb6
  4085f6:	mov    al,ds:0x6794614d
  4085fb:	xchg   ebx,eax
  4085fc:	jg     0x4085a3
  4085fe:	xchg   ecx,eax
  4085ff:	fistp  DWORD PTR [ebx+esi*4+0x79d93e37]
  408606:	leave  
  408607:	ja     0x40860e
  408609:	xchg   ebx,eax
  40860a:	leave  
  40860b:	int3   
  40860c:	fdivr  QWORD PTR [ebx+0x74]
  40860f:	retf   0x8fa5
  408612:	add    DWORD PTR [ebp+0x75a672b4],edi
  408618:	sbb    esi,ebx
  40861a:	les    ecx,FWORD PTR [ebp-0x6d5aaea3]
  408620:	cwde   
  408621:	push   edi
  408622:	or     eax,0x42e9b386
  408627:	mov    eax,0x6484117c
  40862c:	adc    BYTE PTR [edi+esi*4-0x43],bh
  408630:	in     eax,dx
  408631:	jg     0x4085ff
  408633:	jnp    0x4085dd
  408635:	adc    DWORD PTR [esi-0x8],ecx
  408638:	sub    esi,DWORD PTR [ebp+eax*8-0x4ddcc946]
  40863f:	mov    ebx,0x4e4d4c0c
  408644:	mov    eax,ds:0x74db8b3b
  408649:	pop    ebp
  40864a:	adc    al,0xa3
  40864c:	lods   eax,DWORD PTR ds:[esi]
  40864d:	xchg   ecx,eax
  40864e:	aas    
  40864f:	into   
  408650:	enter  0xb2c6,0xae
  408654:	or     eax,0x52a4b44f
  408659:	mov    BYTE PTR [ecx+0x77],bh
  40865c:	dec    ebx
  40865d:	xlat   BYTE PTR es:[ebx]
  40865f:	outs   dx,BYTE PTR ds:[esi]
  408660:	arpl   WORD PTR [edx],ax
  408662:	fldcw  WORD PTR [esi+eax*1+0x25]
  408666:	mov    ds:0x76431393,al
  40866b:	sbb    al,0xc9
  40866d:	test   eax,0xcfb8a4c
  408672:	call   0xb37b:0xfbe2dae1
  408679:	mov    ds:0x708a840c,al
  40867e:	fdiv   DWORD PTR [ebx+0x45]
  408681:	test   eax,0x54a30e9b
  408686:	in     al,0x6e
  408688:	call   0xe9e5:0x38535e47
  40868f:	cmp    eax,0x9344314d
  408694:	shl    esp,cl
  408696:	or     BYTE PTR [edx-0x1f],0x7d
  40869a:	sbb    al,0x21
  40869c:	in     al,dx
  40869d:	mov    bl,0x96
  40869f:	push   es
  4086a0:	lock mov bl,0xbe
  4086a3:	push   ecx
  4086a4:	or     BYTE PTR [ecx+0x7],dl
  4086a7:	and    DWORD PTR ds:0x4345ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4345ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4345ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4345ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4345ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4345ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4345ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4345ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434683
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x1c183fc8
  408731:	inc    esp
  408732:	inc    eax
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	mov    ebp,0x9afc83fc
  408740:	sbb    BYTE PTR [ebx+0x1a],dl
  408743:	mov    edx,0x385e1993
  408748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408749:	sbb    eax,0x56e0e408
  40874e:	fldcw  WORD PTR [ebx+0x7f]
  408751:	fbstp  TBYTE PTR [edx]
  408753:	pop    ds
  408754:	push   ebx
  408755:	enter  0x83da,0xc7
  408759:	mov    ah,0x86
  40875b:	or     DWORD PTR [edx-0x57],eax
  40875e:	jmp    0x4087b0
  408760:	jbe    0x40878a
  408762:	add    ch,0x4d
  408765:	add    al,0xbb
  408767:	adc    eax,0x4e5580f
  40876c:	jne    0x4087c0
  40876e:	add    al,0x4c
  408771:	imul   ebp,edi,0xc518f825
  408777:	(bad)  
  408778:	stos   DWORD PTR es:[edi],eax
  408779:	add    DWORD PTR [ebx+eax*2-0x26],eax
  40877d:	daa    
  40877e:	lahf   
  40877f:	xchg   ebp,eax
  408780:	pop    edi
  408781:	inc    DWORD PTR [eax]
  408783:	and    BYTE PTR [ebx],ah
  408785:	push   ss
  408786:	adc    bl,BYTE PTR [edi-0x4d]
  408789:	jbe    0x40872b
  40878b:	ss je  0x408775
  40878e:	mov    eax,0xaf940283
  408793:	loop   0x40874d
  408795:	test   eax,0xd6bc8756
  40879a:	cs jmp 0x2aac:0xd9f54674
  4087a2:	mov    eax,0xd47dcb90
  4087a7:	scas   eax,DWORD PTR es:[edi]
  4087a8:	push   edi
  4087a9:	xchg   esp,eax
  4087aa:	(bad)  
  4087ab:	push   esi
  4087ac:	mov    dl,0x15
  4087ae:	cwde   
  4087af:	pop    ecx
  4087b0:	pop    ecx
  4087b1:	test   eax,0x2a2c13a1
  4087b6:	pushf  
  4087b7:	jne    0x408816
  4087b9:	leave  
  4087ba:	cmp    edx,DWORD PTR [edi]
  4087bc:	mov    cl,0xf6
  4087be:	pop    edi
  4087bf:	sahf   
  4087c0:	les    esi,FWORD PTR [ecx+0x7e]
  4087c3:	inc    esp
  4087c4:	das    
  4087c5:	mov    bl,0x57
  4087c7:	jns    0x40879f
  4087c9:	mov    edx,0xc68b6cc0
  4087ce:	div    DWORD PTR [ebp-0x5bee2b66]
  4087d4:	imul   WORD PTR [esi+0x15fc67bd]
  4087db:	lods   eax,DWORD PTR ds:[esi]
  4087dc:	fucomip st,st(3)
  4087de:	adc    eax,0xd9291f26
  4087e3:	push   esp
  4087e4:	inc    ecx
  4087e5:	lods   al,BYTE PTR ds:[esi]
  4087e6:	popf   
  4087e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e8:	mov    eax,ds:0x66a6fbff
  4087ed:	mov    eax,0xb6c3f380
  4087f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f3:	les    esp,FWORD PTR ds:0xefe5
  4087f8:	jmp    0x73e4ad30
  4087fd:	cwde   
  4087fe:	push   ecx
  4087ff:	(bad)
  408802:	(bad)  
  408803:	into   
  408804:	fwait
  408805:	rcr    BYTE PTR [edi+0x2857ef51],1
  40880b:	push   edx
  40880c:	or     bh,BYTE PTR [eax]
  40880e:	ret    
  40880f:	in     eax,0xa6
  408811:	push   0xeb86cc4d
  408816:	sbb    al,0xf0
  408818:	aaa    
  408819:	sbb    al,0xf8
  40881b:	les    esp,FWORD PTR ds:0x358d13c9
  408821:	push   ss
  408822:	das    
  408823:	xchg   edi,eax
  408824:	cld    
  408825:	loopne 0x408858
  408827:	mov    ah,0xfe
  408829:	mov    cl,0x63
  40882b:	cdq    
  40882c:	test   al,0xba
  40882e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882f:	mov    ah,bh
  408831:	ret    
  408832:	call   FWORD PTR [edx]
  408834:	(bad)  
  408835:	jmp    0x40887a
  408837:	sub    ecx,DWORD PTR [ebx+0x13d5c454]
  40883d:	scas   eax,DWORD PTR es:[edi]
  40883e:	jnp    0x408836
  408840:	and    eax,0x5f00fd46
  408845:	sbb    cl,BYTE PTR [ecx]
  408847:	out    0xe9,al
  408849:	adc    BYTE PTR [esi+edx*4+0x65],ch
  40884d:	xor    BYTE PTR [ebp+0x54],cl
  408850:	cs jae 0x40883d
  408853:	add    ebp,ebx
  408855:	imul   eax,DWORD PTR [esi-0x26],0xd49c1674
  40885c:	jecxz  0x4087fb
  40885e:	mov    eax,gs:0x82fd90f3
  408864:	paddd  mm0,QWORD PTR [edx-0x5cc4b901]
  40886b:	xchg   BYTE PTR [ebx-0x302860e],dh
  408871:	fisttp DWORD PTR [edi+0x69]
  408874:	lds    edi,FWORD PTR [ebp+ebx*8+0x28b9735c]
  40887b:	loope  0x4088b9
  40887d:	sub    BYTE PTR [eax-0x178d43d3],ch
  408883:	mov    ds:0x20ef6fdd,eax
  408888:	cmc    
  408889:	cmp    DWORD PTR [esi+edi*4+0x761f9b07],esi
  408890:	mov    BYTE PTR [esi+0x7e],0xff
  408894:	xchg   edx,eax
  408895:	imul   ebp,esp,0x6b
  408898:	pop    esi
  408899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40889a:	ror    esp,1
  40889c:	repnz mov ebp,0xea3f9800
  4088a2:	cmp    ebx,eax
  4088a4:	mov    bl,0xf1
  4088a6:	cmp    bh,BYTE PTR [ebp-0x22]
  4088a9:	rcl    BYTE PTR [ecx-0x73],1
  4088ac:	sti    
  4088ad:	mov    al,cs:0x7f3e3306
  4088b3:	mov    ah,0xa3
  4088b5:	call   0x7ab4ba43
  4088ba:	hlt    
  4088bb:	fadd   QWORD PTR [ebx]
  4088bd:	sbb    eax,0x94a7e4e6
  4088c2:	push   esp
  4088c3:	fadd   QWORD PTR ds:[ecx+0x6048093e]
  4088ca:	adc    ch,BYTE PTR [edi+ecx*1]
  4088cd:	mov    al,0xc4
  4088cf:	push   ebx
  4088d0:	ret    0x849c
  4088d3:	clc    
  4088d4:	fisub  WORD PTR ds:0x17c28dbc
  4088da:	add    al,0x45
  4088dc:	push   ecx
  4088dd:	into   
  4088de:	shl    BYTE PTR ds:0xe61237c8,0x2e
  4088e5:	pop    ds
  4088e6:	sbb    BYTE PTR es:[esi+0x47cdbb48],0x8b
  4088ee:	dec    ebx
  4088ef:	and    cl,ch
  4088f1:	jmp    0xb8b5:0x3cef6ab0
  4088f8:	mov    eax,ds:0x48558800
  4088fd:	add    bh,BYTE PTR [ebx+ebx*1+0xb6d8cb7]
  408904:	pop    ebp
  408905:	dec    eax
  408906:	ins    BYTE PTR es:[edi],dx
  408907:	adc    dl,BYTE PTR [edi-0xe]
  40890a:	push   ds
  40890b:	mov    eax,ds:0x617376d1
  408910:	arpl   WORD PTR [ebx],di
  408912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408913:	xchg   ebx,eax
  408914:	dec    ebx
  408915:	test   eax,0x5078d16
  40891a:	mov    ecx,0xa98dc922
  408920:	sbb    ebx,edx
  408922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408923:	dec    eax
  408924:	call   0x8855e6db
  408929:	pushf  
  40892a:	xor    BYTE PTR [edx+0x12c9210d],dh
  408930:	lock xchg ebp,eax
  408932:	inc    esi
  408933:	lahf   
  408934:	addr16 mov esp,0x803a863b
  40893a:	jl     0x40897a
  40893c:	add    eax,0x508d2499
  408941:	(bad)  
  408942:	mov    al,ds:0x3644ea0b
  408947:	pop    ebx
  408948:	lea    edx,[ebx-0x2b4d3e74]
  40894e:	jnp    0x40894f
  408950:	aas    
  408951:	sbb    ebx,DWORD PTR [edi-0x5a]
  408954:	imul   eax,DWORD PTR [edi+0x53],0x2a
  408958:	(bad)  
  408959:	ds dec ebp
  40895b:	mov    al,ds:0xaba9c8d5
  408960:	xor    BYTE PTR [edi-0x4f],bl
  408963:	xor    eax,0xbe58ab3c
  408968:	stc    
  408969:	addr16 out 0xe0,eax
  40896c:	dec    esp
  40896d:	dec    ecx
  40896e:	jbe    0x408974
  408970:	hlt    
  408971:	xor    BYTE PTR [edi+0x69],bh
  408974:	sub    esp,esp
  408976:	xchg   edx,eax
  408977:	push   ss
  408978:	rcl    BYTE PTR [ebx],0xa
  40897b:	mov    ebp,0x6a8531bc
  408980:	inc    edx
  408981:	icebp  
  408982:	ss pop ds
  408984:	push   ecx
  408985:	in     eax,0xe2
  408987:	push   eax
  408988:	sbb    eax,0xe27453bc
  40898d:	fdivr  DWORD PTR [esi]
  40898f:	sub    al,0xe8
  408991:	sub    esi,esi
  408993:	dec    esp
  408994:	rcl    ebx,1
  408996:	xor    eax,0xadb6f0e2
  40899b:	xor    al,0x52
  40899d:	fbstp  TBYTE PTR [ecx]
  40899f:	sub    esp,DWORD PTR [ecx]
  4089a1:	out    dx,al
  4089a2:	shl    BYTE PTR [ebx+0x4d],1
  4089a5:	adc    cl,BYTE PTR [ebx-0x1ccf783]
  4089ab:	not    DWORD PTR ds:0x4345eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	daa    
  4089db:	pop    edx
  4089dc:	mov    WORD PTR [esi+0x7e7edbd1],ds
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	sti    
  4089e7:	ins    BYTE PTR es:[edi],dx
  4089e8:	es (bad) 
  4089ea:	jne    0x408991
  4089ec:	jno    0x4089f8
  4089ee:	add    esi,esp
  4089f0:	dec    ecx
  4089f1:	lock (bad) 
  4089f3:	or     BYTE PTR ds:0xa251f831,dh
  4089f9:	xor    eax,0xb4fd11e2
  4089fe:	cmp    ah,BYTE PTR [ecx+0x74]
  408a01:	shr    BYTE PTR [ecx],cl
  408a03:	fmul   DWORD PTR [ecx]
  408a05:	jnp    0x4089bb
  408a07:	aam    0xb2
  408a09:	int    0x8f
  408a0b:	push   esi
  408a0c:	dec    edx
  408a0d:	(bad)  
  408a0e:	lahf   
  408a0f:	push   0xfc559811
  408a14:	xor    DWORD PTR [eax],edx
  408a16:	mov    esi,0x79785909
  408a1b:	popf   
  408a1c:	int    0x2
  408a1e:	out    0x8e,al
  408a20:	pusha  
  408a21:	push   esp
  408a22:	cmc    
  408a23:	adc    BYTE PTR [eax+0x7f906520],cl
  408a29:	hlt    
  408a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a2b:	test   BYTE PTR [ebp-0x57],bh
  408a2e:	sahf   
  408a2f:	in     eax,dx
  408a30:	nop
  408a31:	and    al,0xdb
  408a33:	dec    edi
  408a34:	mul    DWORD PTR [esi-0x55fd021a]
  408a3a:	ja     0x408a46
  408a3c:	lods   al,BYTE PTR ds:[esi]
  408a3d:	mov    bh,0x52
  408a3f:	repnz leave 
  408a41:	mov    ss,WORD PTR [ebp-0x6b]
  408a44:	ins    DWORD PTR es:[edi],dx
  408a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a46:	iret   
  408a47:	jmp    0x4089ed
  408a49:	(bad)  
  408a4a:	out    dx,al
  408a4b:	inc    ecx
  408a4c:	jmp    0x8a000059
  408a51:	jp     0x408ac9
  408a53:	cmc    
  408a54:	retf   
  408a55:	(bad)  
  408a56:	jne    0x408a14
  408a58:	inc    ebx
  408a59:	mov    ebp,0x5dbf99ba
  408a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a5f:	data16 shr bl,cl
  408a62:	pushf  
  408a63:	mov    eax,0x1bf827fb
  408a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a69:	jae    0x408a06
  408a6b:	div    dh
  408a6d:	push   0xffffffc0
  408a6f:	scas   eax,DWORD PTR es:[edi]
  408a70:	nop
  408a71:	out    0xbe,al
  408a73:	ficom  DWORD PTR [edi+esi*1]
  408a76:	out    dx,al
  408a77:	adc    ecx,ebx
  408a79:	pop    esp
  408a7a:	dec    ecx
  408a7b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a7d:	sar    BYTE PTR [ecx-0x3006c31b],0xbb
  408a84:	xchg   ebx,eax
  408a85:	fadd   QWORD PTR [eax-0x16]
  408a88:	or     bl,BYTE PTR [ecx]
  408a8a:	gs or  ebp,eax
  408a8d:	out    dx,eax
  408a8e:	jns    0x408a4b
  408a90:	sub    eax,0x55bfa5d6
  408a95:	add    DWORD PTR [edi],edx
  408a97:	data16 in al,0x60
  408a9a:	fld    TBYTE PTR [ebx+ebx*1]
  408a9d:	mov    ch,0x53
  408a9f:	icebp  
  408aa0:	loope  0x408a83
  408aa2:	jne    0x4d09b8f8
  408aa8:	dec    ecx
  408aa9:	mov    al,0x6d
  408aab:	push   edx
  408aac:	je     0x408ad9
  408aae:	pushf  
  408aaf:	pop    es
  408ab0:	(bad)  
  408ab1:	retf   0x4130
  408ab4:	outs   dx,BYTE PTR ds:[esi]
  408ab5:	and    BYTE PTR [ebp*8+0x52171f7d],dl
  408abc:	in     al,dx
  408abd:	ds pushf 
  408abf:	mov    bl,0xaa
  408ac1:	jge    0x408aaa
  408ac3:	xor    eax,0xf2766e7b
  408ac8:	add    DWORD PTR es:[ecx-0x27],0xffffffe8
  408acd:	cmp    ch,BYTE PTR [ecx]
  408acf:	in     eax,dx
  408ad0:	adc    eax,0xa831e4e1
  408ad5:	jl     0x408ae0
  408ad7:	nop    DWORD PTR [eax]
  408ada:	jbe    0x408aba
  408adc:	daa    
  408add:	in     al,dx
  408ade:	mov    ah,0xf2
  408ae0:	adc    eax,0xcd5ca6d8
  408ae5:	pop    ebp
  408ae6:	mov    bh,0xdd
  408ae8:	xchg   esp,eax
  408ae9:	dec    esp
  408aea:	and    BYTE PTR [eax+0x6494aaf3],cl
  408af0:	pop    edi
  408af1:	jge    0x408b59
  408af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af4:	jg     0x408b35
  408af6:	jnp    0x408b70
  408af8:	jge    0x408aa4
  408afa:	cwde   
  408afb:	retf   0x4110
  408afe:	pop    ebx
  408aff:	dec    edx
  408b00:	mov    eax,ds:0x8c1a6479
  408b05:	test   eax,0x491442c8
  408b0a:	adc    ah,dh
  408b0c:	retf   0xb63d
  408b0f:	addr16 pop ecx
  408b11:	push   ebp
  408b12:	pusha  
  408b13:	loop   0x408b1a
  408b15:	xor    ebp,ecx
  408b17:	mov    ds:0x580121e3,al
  408b1c:	xor    DWORD PTR fs:[edx],edx
  408b1f:	xchg   DWORD PTR [esi+ecx*2-0x7e],eax
  408b23:	mov    eax,ds:0x637aa591
  408b28:	(bad)  
  408b29:	in     al,dx
  408b2a:	(bad)  
  408b2b:	fcmovne st,st(4)
  408b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b2e:	dec    edx
  408b2f:	or     esi,DWORD PTR [edx]
  408b31:	mov    esi,0x37e05b89
  408b36:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b38:	jg     0x408b28
  408b3a:	retf   0xe5b1
  408b3d:	jmp    0xe0d5:0x2c625e42
  408b44:	cmp    ecx,DWORD PTR [esi]
  408b46:	adc    al,0x52
  408b48:	imul   edi,DWORD PTR [esi],0xffffff91
  408b4b:	cmp    edx,DWORD PTR [eax-0x26]
  408b4e:	fwait
  408b4f:	mov    bh,0x2d
  408b51:	cmp    DWORD PTR [ecx+edi*1-0x665383d6],eax
  408b58:	push   0x25d3d598
  408b5d:	jmp    0x2381b850
  408b62:	jmp    0xf3a1dc3e
  408b67:	inc    esi
  408b68:	add    DWORD PTR [edx-0x57f800dc],ecx
  408b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b6f:	push   0xa57d7e32
  408b74:	(bad)  
  408b75:	ror    BYTE PTR [ebx],1
  408b77:	mov    ds:0x40763ce4,al
  408b7c:	test   BYTE PTR [eax+0x4b29b1d9],0xff
  408b83:	pushf  
  408b84:	stc    
  408b85:	add    BYTE PTR [eax],bl
  408b87:	xchg   edi,eax
  408b88:	jmp    0x103ad267
  408b8d:	lds    edx,FWORD PTR [esi+0x3]
  408b90:	ficomp WORD PTR [edi]
  408b92:	cmp    esi,esi
  408b94:	adc    eax,0x606aac3f
  408b99:	xchg   edi,eax
  408b9a:	mov    bh,0x46
  408b9c:	push   ecx
  408b9d:	loope  0x408b4d
  408b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba0:	pusha  
  408ba1:	pusha  
  408ba2:	mov    es,esi
  408ba4:	and    ebx,DWORD PTR [edx-0x57e3a01f]
  408baa:	mov    eax,0x19b342d5
  408baf:	cmp    DWORD PTR [ebx],ebp
  408bb1:	adc    BYTE PTR [edi+0x32],bh
  408bb4:	test   eax,0xb3ff22ba
  408bb9:	xlat   BYTE PTR ds:[ebx]
  408bba:	dec    ecx
  408bbb:	lahf   
  408bbc:	(bad)  
  408bbd:	xchg   esi,eax
  408bbe:	das    
  408bbf:	outs   dx,BYTE PTR ds:[esi]
  408bc0:	cmp    DWORD PTR [edi+edi*1+0x28d9ecf8],0x73
  408bc8:	sbb    eax,0xfdda2b4d
  408bcd:	jns    0x408bcb
  408bcf:	int    0xe5
  408bd1:	adc    al,0xab
  408bd3:	cld    
  408bd4:	stc    
  408bd5:	data16 (bad) 
  408bd7:	adc    dl,dl
  408bd9:	stc    
  408bda:	test   eax,0x6303c010
  408bdf:	dec    edi
  408be0:	idiv   BYTE PTR [ecx+eax*2-0x31]
  408be4:	push   ss
  408be5:	xchg   esp,eax
  408be6:	inc    edx
  408be7:	pop    ebp
  408be8:	sbb    al,0x22
  408bea:	fs jmp 0x408c0d
  408bed:	stos   BYTE PTR es:[edi],al
  408bee:	add    al,0x8a
  408bf0:	push   ebx
  408bf1:	xchg   ecx,eax
  408bf2:	or     BYTE PTR [esi],bl
  408bf4:	outs   dx,DWORD PTR ds:[esi]
  408bf5:	xchg   ebp,eax
  408bf6:	pop    esi
  408bf7:	cmp    bh,BYTE PTR [ecx-0x11]
  408bfa:	fldenv ss:[esi+0x45eba3e0]
  408c01:	dec    ebp
  408c02:	out    dx,al
  408c03:	pop    edi
  408c04:	mov    bh,0x6d
  408c06:	xchg   ecx,eax
  408c07:	push   cs
  408c08:	mov    edx,0x176340fb
  408c0d:	clc    
  408c0e:	sbb    al,0x88
  408c10:	mov    edx,0x529902a
  408c15:	test   eax,0x94fa3854
  408c1a:	lea    eax,[eax-0x32]
  408c1d:	mov    cs,WORD PTR [eax]
  408c1f:	and    DWORD PTR [ebp+esi*1-0x20],ebx
  408c23:	mov    ch,BYTE PTR [esi+edi*4]
  408c26:	call   0xb4bf6231
  408c2b:	sbb    cl,ch
  408c2d:	pop    esp
  408c2e:	repnz popw ss
  408c31:	dec    ebp
  408c32:	loop   0x408cb3
  408c34:	mov    ecx,0x5957349f
  408c39:	or     ecx,esi
  408c3b:	jns    0x408c86
  408c3d:	gs mov bl,0x69
  408c40:	sti    
  408c41:	call   FWORD PTR [edi-0x5555dd6b]
  408c47:	or     BYTE PTR [ecx],ah
  408c49:	js     0x408c54
  408c4b:	adc    BYTE PTR [edx-0x4fd9111],0xf
  408c52:	test   DWORD PTR [ecx+0x0],eax
  408c55:	add    BYTE PTR [eax],al
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4346c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434687,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4346b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4345ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4346ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434677,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	inc    eax
  408cca:	sub    eax,esp
  408ccc:	push   ebp
  408ccd:	inc    esp
  408cce:	in     eax,0x7e
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408d0a
  408cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd7:	enter  0xe941,0x34
  408cdb:	adc    al,0x3d
  408cdd:	into   
  408cde:	inc    ebp
  408cdf:	xchg   esi,eax
  408ce0:	jmp    0x408d0c
  408ce2:	int3   
  408ce3:	fsub   QWORD PTR [edi]
  408ce5:	jmp    0x1937:0x3f53f0cc
  408cec:	daa    
  408ced:	mov    ds:0xc35bc48c,al
  408cf2:	(bad)  
  408cf3:	and    esi,DWORD PTR [eax+0x6a]
  408cf6:	in     al,0x36
  408cf8:	dec    ecx
  408cf9:	in     eax,dx
  408cfa:	xchg   ecx,eax
  408cfb:	sbb    al,cl
  408cfd:	das    
  408cfe:	daa    
  408cff:	pop    edi
  408d00:	sub    edx,DWORD PTR [esi-0x1587dc15]
  408d06:	mov    ah,0x5c
  408d08:	(bad)  
  408d0a:	and    DWORD PTR [ebx+0x3c83ce43],esp
  408d10:	fidivr DWORD PTR [edx-0x32]
  408d13:	push   esi
  408d14:	jnp    0x408d3b
  408d16:	lds    eax,FWORD PTR [ebp+ebx*4-0x14]
  408d1a:	add    DWORD PTR [ebp-0x6310d9d2],ebx
  408d20:	pushf  
  408d21:	and    dh,BYTE PTR [ebx+0xc9beb97]
  408d27:	cld    
  408d28:	je     0x408d2d
  408d2a:	int3   
  408d2b:	xor    dh,BYTE PTR [edx+ecx*2]
  408d2e:	sar    DWORD PTR [ebx-0xf94dd91],cl
  408d34:	mov    ebp,0xa04b358a
  408d39:	sbb    ecx,edi
  408d3b:	jno    0x408da2
  408d3d:	xchg   ebx,eax
  408d3e:	sar    edx,0x6d
  408d41:	mov    bl,0xb3
  408d43:	ds mov dl,0x83
  408d46:	je     0x408d99
  408d48:	or     al,0xb7
  408d4a:	retf   0x984c
  408d4d:	mov    ah,0x91
  408d4f:	xor    ch,BYTE PTR [esi]
  408d51:	fdivp  st(3),st
  408d53:	sbb    ch,BYTE PTR [edi+0x66c8e038]
  408d59:	aam    0xe0
  408d5b:	add    DWORD PTR [eax],0x31
  408d5e:	pop    ebx
  408d5f:	jb     0x408d03
  408d61:	vaesenclast ymm4,ymm6,YMMWORD PTR ds:[esi+0x56e627f7]
  408d6b:	and    edx,DWORD PTR [eax+eax*1+0x7e931c9f]
  408d72:	xchg   edi,eax
  408d73:	bound  edx,QWORD PTR [ebx+0x5f]
  408d76:	loop   0x408db7
  408d78:	fidivr DWORD PTR [esi-0x6437cdae]
  408d7e:	cmp    al,0x3e
  408d80:	fisubr WORD PTR [edi-0x552d2ae3]
  408d86:	lods   eax,DWORD PTR ds:[esi]
  408d87:	mov    bh,BYTE PTR [ebx+0x36]
  408d8a:	sub    al,0xa4
  408d8c:	mov    ch,0x96
  408d8e:	cmp    edx,DWORD PTR [edi]
  408d90:	data16 sbb BYTE PTR [esi],dh
  408d93:	aad    0x66
  408d95:	cmp    dh,0x47
  408d98:	ds mov ch,0x9f
  408d9b:	dec    eax
  408d9c:	je     0x408d64
  408d9e:	dec    ebp
  408d9f:	add    eax,0xc86c671a
  408da4:	sar    BYTE PTR [edi-0x36],1
  408da7:	and    bl,ch
  408da9:	pop    ecx
  408daa:	push   edi
  408dab:	ror    DWORD PTR es:[ebx],1
  408dae:	fmul   DWORD PTR ds:0x2ea6b4ae
  408db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408db5:	cmp    DWORD PTR [edi-0x26],ecx
  408db8:	test   al,0x6a
  408dba:	cs dec ebp
  408dbc:	data16 fstp st(2)
  408dbf:	je     0x408dcb
  408dc1:	adc    BYTE PTR [esp+eiz*8],dh
  408dc4:	sub    al,0xaf
  408dc6:	loopne 0x408d5b
  408dc8:	pop    ds
  408dc9:	adc    DWORD PTR [edi+ecx*1+0x2c],eax
  408dcd:	sub    BYTE PTR [ebx],bl
  408dcf:	sub    eax,0x843cbd09
  408dd4:	out    dx,al
  408dd5:	mov    ds:0x66c6bd0,al
  408dda:	xor    ecx,DWORD PTR [esp+ebp*1-0x69]
  408dde:	pop    ss
  408ddf:	inc    esi
  408de0:	nop
  408de1:	clc    
  408de2:	jo     0x408da3
  408de4:	pusha  
  408de5:	out    0xb4,eax
  408de7:	push   ecx
  408de8:	loopne 0x408de8
  408dea:	lods   eax,DWORD PTR ds:[esi]
  408deb:	test   al,0x8c
  408ded:	pop    ebp
  408dee:	inc    ebp
  408def:	lods   eax,DWORD PTR ds:[esi]
  408df0:	mov    DWORD PTR es:[edi-0x6f],edx
  408df4:	loopne 0x408e14
  408df6:	cs mov ebp,gs
  408df9:	pop    ss
  408dfa:	repnz clc 
  408dfc:	jge    0x408de6
  408dfe:	push   eax
  408dff:	and    BYTE PTR [edi],dl
  408e01:	dec    edi
  408e02:	pop    es
  408e03:	stc    
  408e04:	pop    es
  408e05:	das    
  408e06:	jo     0x408e77
  408e08:	and    edi,edi
  408e0a:	(bad)  
  408e0b:	sub    BYTE PTR [edx+0x40d159b4],al
  408e11:	adc    eax,0x8e5eff4a
  408e16:	xor    al,0x16
  408e18:	aam    0x2c
  408e1a:	test   eax,0x22c093db
  408e1f:	rcr    DWORD PTR [ebp+ebx*4-0x4533b764],0xeb
  408e27:	xchg   esi,eax
  408e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e29:	mov    ?,esi
  408e2b:	(bad)  
  408e2d:	(bad)
  408e30:	and    DWORD PTR [edx],edx
  408e32:	iret   
  408e33:	jp     0x408dd2
  408e35:	jmp    0x515363dc
  408e3a:	push   esi
  408e3b:	ret    
  408e3c:	rol    dl,1
  408e3e:	or     al,0xbf
  408e40:	dec    edi
  408e41:	pop    ebp
  408e42:	in     eax,dx
  408e43:	outs   dx,BYTE PTR ds:[esi]
  408e44:	or     ebp,esi
  408e46:	dec    ebx
  408e47:	mov    ebp,0x3490f20a
  408e4c:	mov    ebp,edi
  408e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e4f:	fsub   DWORD PTR [edi-0xd]
  408e52:	aam    0x80
  408e54:	(bad)  
  408e55:	icebp  
  408e56:	rcl    BYTE PTR [esi-0x4eb81b5],0x60
  408e5d:	or     al,0xe0
  408e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e60:	adc    al,0xa9
  408e62:	sti    
  408e63:	jno    0x408eac
  408e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e66:	mov    esi,0x1ba049a9
  408e6b:	ja     0x408ecb
  408e6d:	cmp    eax,0x9526de5e
  408e72:	mov    gs,WORD PTR [ebx]
  408e74:	xor    esp,DWORD PTR [ecx-0x2f]
  408e77:	inc    edx
  408e78:	aaa    
  408e79:	ret    
  408e7a:	push   edi
  408e7b:	jns    0x408dfe
  408e7d:	fwait
  408e7e:	rcl    BYTE PTR [edi+eiz*8+0x779dd2d8],cl
  408e85:	cmp    DWORD PTR [esi+0xaeb30c8],edi
  408e8b:	out    0x12,eax
  408e8d:	pushf  
  408e8e:	test   DWORD PTR ds:0x544c0fa9,esp
  408e94:	hlt    
  408e95:	sub    dl,bh
  408e97:	call   0xd050fbd3
  408e9c:	and    BYTE PTR ds:0xca9156ce,0x9b
  408ea3:	outs   dx,BYTE PTR ds:[esi]
  408ea4:	retf   0x17e3
  408ea7:	std    
  408ea8:	ins    BYTE PTR es:[edi],dx
  408ea9:	(bad)  
  408eab:	fsub   DWORD PTR [eax+0x2c]
  408eae:	(bad)  
  408eaf:	jae    0x408e5e
  408eb1:	xchg   ebx,eax
  408eb2:	outs   dx,DWORD PTR ds:[esi]
  408eb3:	retf   0x6e79
  408eb6:	outs   dx,BYTE PTR ds:[esi]
  408eb7:	pop    ebp
  408eb8:	xor    edi,ebp
  408eba:	repz jo 0x408e8a
  408ebd:	pop    es
  408ebe:	scas   al,BYTE PTR es:[edi]
  408ebf:	call   0x8a738d49
  408ec4:	and    edx,DWORD PTR [ebp+0x77]
  408ec7:	jmp    0x2a4c:0x73732024
  408ece:	pop    ebp
  408ecf:	ins    DWORD PTR es:[edi],dx
  408ed0:	in     eax,dx
  408ed1:	(bad)
  408ed4:	pop    DWORD PTR [esi+0x50518148]
  408eda:	or     eax,0xc7a34f43
  408edf:	(bad)  
  408ee1:	or     DWORD PTR [edi+ecx*2+0x6e],eax
  408ee5:	mov    ch,dl
  408ee7:	push   es
  408ee8:	ins    BYTE PTR es:[edi],dx
  408ee9:	push   0xae965fcc
  408eee:	xor    al,0xec
  408ef0:	or     al,0xec
  408ef2:	arpl   WORD PTR [edx],si
  408ef4:	mov    bl,0x8f
  408ef6:	inc    ecx
  408ef7:	aam    0x95
  408ef9:	jge    0x408ee8
  408efb:	mov    edi,DWORD PTR [eax]
  408efd:	ins    BYTE PTR es:[edi],dx
  408efe:	out    dx,eax
  408eff:	adc    ebp,eax
  408f01:	shl    BYTE PTR [ebx+0x172f89dd],1
  408f07:	xor    ebx,DWORD PTR ds:0x39ca90b5
  408f0d:	fist   DWORD PTR [ebx]
  408f0f:	mov    WORD PTR [eax+0x63],?
  408f12:	(bad)  
  408f13:	int3   
  408f14:	push   edi
  408f15:	call   DWORD PTR [eax+0x7c46a35e]
  408f1b:	add    ecx,DWORD PTR [ecx+eiz*8]
  408f1e:	sbb    DWORD PTR [esi],eax
  408f20:	fs cmc 
  408f22:	(bad)  
  408f23:	fwait
  408f24:	pop    esp
  408f25:	sbb    bl,BYTE PTR [ecx-0x1]
  408f28:	jo     0x408f29
  408f2a:	into   
  408f2b:	jmp    0x287a:0x189d4ba2
  408f32:	xchg   edi,eax
  408f33:	into   
  408f34:	pop    edi
  408f35:	retf   
  408f36:	test   BYTE PTR [eax+0x3c],ah
  408f39:	jl     0x408ebf
  408f3b:	push   ebx
  408f3c:	aam    0xe3
  408f3e:	pop    ds
  408f3f:	mov    BYTE PTR [ebx-0x74fff79b],al
  408f45:	inc    ebp
  408f46:	clc    
  408f47:	or     DWORD PTR ds:0x4346c3,0x434683
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434703
  408f5a:	or     DWORD PTR ds:0x4346c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4345df,0x43464f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4346c7,0x434647
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4345eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4346b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4345ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x4af5267d]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x409010
  408fec:	mov    eax,0x47baf6c3
  408ff1:	sub    edx,edi
  408ff3:	jmp    0x408ff4
  408ff5:	mov    ds:0x61e46a66,al
  408ffa:	fdiv   DWORD PTR [eax-0x3cb70f28]
  409000:	int    0x38
  409002:	fst    DWORD PTR ds:[ecx]
  409005:	ret    0x553f
  409008:	cli    
  409009:	cmp    eax,0x5956b909
  40900e:	ss jmp 0x409020
  409011:	pusha  
  409012:	mov    al,0x6d
  409014:	daa    
  409015:	test   al,0x85
  409017:	test   dh,al
  409019:	ins    BYTE PTR es:[edi],dx
  40901a:	sub    eax,0xd21b2701
  40901f:	in     al,dx
  409020:	inc    esi
  409021:	add    DWORD PTR [edx+ebx*8+0x6e],esp
  409025:	nop
  409026:	pop    ebp
  409028:	push   0x79c72e46
  40902d:	ins    BYTE PTR es:[edi],dx
  40902e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902f:	scas   eax,DWORD PTR es:[edi]
  409030:	mov    al,BYTE PTR [edi+0xe]
  409033:	mov    ebx,0x5d4eab33
  409038:	stos   DWORD PTR es:[edi],eax
  409039:	ret    
  40903a:	and    esi,0x2e89d497
  409040:	jmp    0x408ffc
  409042:	(bad)  
  409044:	dec    ebp
  409045:	stc    
  409046:	lea    ebp,[eax+ebx*2]
  409049:	and    al,0xdf
  40904b:	popf   
  40904c:	mov    al,0x6e
  40904e:	jp     0x409028
  409050:	and    eax,0xf7f00586
  409055:	mov    ds:0x38dc9db5,al
  40905a:	leave  
  40905b:	jnp    0x409070
  40905d:	daa    
  40905e:	mov    esi,0xa7f3802f
  409063:	and    ebx,esi
  409065:	cld    
  409066:	int    0x93
  409068:	dec    DWORD PTR [esi]
  40906a:	sbb    ah,BYTE PTR [ebx-0x47]
  40906d:	jecxz  0x4090e9
  40906f:	shr    ebx,1
  409071:	mov    edi,0xa5db6ce2
  409076:	and    esp,DWORD PTR [edi-0x53b2425b]
  40907c:	in     eax,0xa4
  40907e:	pop    esi
  40907f:	mov    ch,0x4b
  409081:	in     eax,dx
  409082:	adc    DWORD PTR [ebx],0x10caa112
  409088:	push   ss
  409089:	ins    DWORD PTR es:[edi],dx
  40908a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40908b:	int3   
  40908c:	jl     0x4090ba
  40908e:	xchg   ebp,eax
  40908f:	mov    esp,0xf1003431
  409094:	or     edx,0x49
  409097:	or     ecx,DWORD PTR [edx+0x37]
  40909a:	dec    eax
  40909b:	out    0xe1,al
  40909d:	jle    0x4090a9
  40909f:	push   ebx
  4090a0:	sub    BYTE PTR [ebx],ah
  4090a2:	sub    BYTE PTR [ecx-0x420c4044],dl
  4090a8:	or     al,0xba
  4090aa:	into   
  4090ab:	add    ah,dl
  4090ad:	add    DWORD PTR [edx+0x2da3934b],esi
  4090b3:	push   ebp
  4090b4:	sbb    edx,DWORD PTR [ecx+eiz*2+0x4ca589d8]
  4090bb:	imul   edi,DWORD PTR [esi+0x56],0x66d314f7
  4090c2:	and    eax,0x24ad8425
  4090c7:	les    ebx,FWORD PTR [edx+0x7c]
  4090ca:	ds stc 
  4090cc:	and    al,0x34
  4090ce:	jbe    0x4090ae
  4090d0:	aam    0xf1
  4090d2:	(bad)  
  4090d3:	aas    
  4090d4:	or     DWORD PTR [edx-0x72],ebp
  4090d7:	inc    edi
  4090d8:	push   ebp
  4090d9:	jbe    0x409138
  4090db:	adc    DWORD PTR [edx-0x68aa7c5],esp
  4090e1:	jno    0x409134
  4090e3:	hlt    
  4090e4:	cmp    dh,BYTE PTR [edi-0x80cf2b3]
  4090ea:	and    BYTE PTR [esi+0xbe9f596],ch
  4090f0:	icebp  
  4090f1:	jp     0x409077
  4090f3:	xor    eax,0xe9b4e53b
  4090f8:	xchg   esi,eax
  4090f9:	fbld   TBYTE PTR [esi-0x47]
  4090fc:	mov    BYTE PTR [eax-0xb6b8041],bl
  409102:	inc    ebp
  409103:	dec    ebp
  409104:	jnp    0x4090d0
  409106:	fild   DWORD PTR [edx+edi*8-0x8788a2a]
  40910d:	or     BYTE PTR [esi],bh
  40910f:	sar    BYTE PTR [ecx-0x6e68f90a],0x8c
  409116:	dec    ecx
  409117:	(bad)  
  409118:	out    dx,eax
  409119:	dec    edx
  40911a:	and    eax,0xd160fd30
  40911f:	pop    ss
  409120:	aad    0x8f
  409122:	ins    BYTE PTR es:[edi],dx
  409123:	imul   DWORD PTR [ecx-0x25]
  409126:	out    0x89,eax
  409128:	push   ds
  409129:	sbb    BYTE PTR [eax-0x57],ah
  40912c:	jg     0x409120
  40912e:	push   ds
  40912f:	mov    edi,0x6280ea9b
  409134:	dec    eax
  409135:	sbb    DWORD PTR [edi],0xb3dbedcf
  40913b:	iret   
  40913c:	cwde   
  40913d:	and    al,0x19
  40913f:	sub    al,0x62
  409141:	ss aas 
  409143:	in     al,0x83
  409145:	hlt    
  409146:	mov    edi,0x6e2783c0
  40914b:	xor    DWORD PTR [ecx-0x4e],esi
  40914e:	push   ds
  40914f:	adc    al,0xe3
  409151:	mov    eax,DWORD PTR [ebx+0x28]
  409154:	jl     0x4091d3
  409156:	and    ah,0x1c
  409159:	iret   
  40915a:	push   0xf866b6db
  40915f:	sbb    ebx,ecx
  409161:	das    
  409162:	call   0x6dde:0x40faa2af
  409169:	fistp  WORD PTR [edx+0x51]
  40916c:	mov    DWORD PTR [ecx],ebp
  40916e:	imul   eax
  409170:	cmp    bl,BYTE PTR [eax]
  409172:	xor    ebp,0x87897eae
  409178:	jbe    0x40916f
  40917a:	jnp    0x40915a
  40917c:	cdq    
  40917d:	adc    edi,DWORD PTR [edx]
  40917f:	cmp    ah,bh
  409181:	and    ecx,edx
  409183:	imul   esp,DWORD PTR ds:0xee770929,0x3a
  40918a:	cmp    al,bl
  40918c:	loop   0x4091d8
  40918e:	or     al,0x88
  409190:	cmp    bh,BYTE PTR [ecx]
  409192:	xlat   BYTE PTR ds:[ebx]
  409193:	clc    
  409194:	out    0x3e,eax
  409196:	mov    ds:0x2a007bef,eax
  40919b:	lds    edx,FWORD PTR [eax]
  40919d:	push   edi
  40919e:	fs adc bl,dl
  4091a1:	mov    al,dh
  4091a3:	bts    DWORD PTR [edx+0x18],ecx
  4091a7:	fs in  eax,0x3c
  4091aa:	adc    al,0x70
  4091ac:	push   edx
  4091ad:	(bad)  
  4091ae:	and    ebx,DWORD PTR [esi+0x2a957aa9]
  4091b4:	pop    ss
  4091b5:	into   
  4091b6:	mov    gs,WORD PTR [esi-0x5628852e]
  4091bc:	cmc    
  4091bd:	jmp    0x409196
  4091bf:	sub    ebp,0xfffffffd
  4091c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091c3:	inc    ebx
  4091c4:	test   al,0xf0
  4091c6:	jae    0x40918a
  4091c8:	push   edi
  4091c9:	pushf  
  4091ca:	xchg   esp,eax
  4091cb:	int    0x67
  4091cd:	jns    0x4091e9
  4091cf:	fst    QWORD PTR [esi-0x739efb62]
  4091d5:	pop    edx
  4091d6:	pop    es
  4091d7:	test   BYTE PTR [edi+eax*1+0x27],bh
  4091db:	push   0x94758d89
  4091e0:	fs inc ecx
  4091e2:	daa    
  4091e3:	cmp    al,0x0
  4091e5:	daa    
  4091e6:	fadd   QWORD PTR [ebp+0x20]
  4091e9:	push   esi
  4091ea:	imul   ecx
  4091ec:	lahf   
  4091ed:	std    
  4091ee:	out    0xf2,eax
  4091f0:	std    
  4091f1:	mov    cl,0xd5
  4091f3:	xlat   BYTE PTR ds:[ebx]
  4091f4:	rcr    BYTE PTR [edx],cl
  4091f6:	dec    ebp
  4091f7:	push   esi
  4091f8:	ror    DWORD PTR [ecx+edx*2+0x53],0x78
  4091fd:	inc    ebp
  4091fe:	les    eax,FWORD PTR [edx]
  409200:	xor    DWORD PTR [edx-0x7e],edi
  409203:	lock sbb DWORD PTR [ebp-0xe7e7e06],edx
  40920a:	pop    eax
  40920b:	sar    ebp,0x39
  40920e:	dec    eax
  40920f:	jb     0x409191
  409211:	loope  0x409267
  409213:	out    0xee,al
  409215:	push   ds
  409216:	dec    esi
  409217:	into   
  409218:	in     al,dx
  409219:	xchg   DWORD PTR [ecx+0xcfb118b],ecx
  40921f:	sbb    al,0xed
  409221:	mov    bh,0x53
  409223:	push   edi
  409224:	lahf   
  409225:	jge    0x409254
  409227:	inc    edi
  409228:	dec    ecx
  409229:	mov    ah,0xd9
  40922b:	mov    bh,0xfd
  40922d:	mov    edi,0x77d040bb
  409232:	out    0xc6,al
  409234:	rcl    ebx,1
  409236:	loope  0x409221
  409238:	out    dx,eax
  409239:	push   ecx
  40923a:	jg     0x409264
  40923c:	out    0x35,al
  40923e:	mov    ds:0x1381c259,al
  409243:	inc    esi
  409244:	push   es
  409245:	cli    
  409246:	rdtsc  
  409248:	mov    al,0x85
  40924a:	out    0xff,eax
  40924c:	in     al,dx
  40924d:	(bad)  
  40924e:	cmp    dl,BYTE PTR [ebp+0x32]
  409251:	gs hlt 
  409253:	sub    al,0xa6
  409255:	mov    WORD PTR [ebx],?
  409257:	mov    BYTE PTR [ebx],0xc3
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434637,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43463b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	popa   
  409316:	neg    BYTE PTR [esi+0x7ee292d3]
  40931c:	jle    0x40938e
  40931e:	jns    0x40939e
  409320:	jle    0x4092ff
  409322:	cld    
  409323:	add    eax,0xc8551f58
  409328:	shl    DWORD PTR [ecx-0x2a],1
  40932b:	xchg   ebp,ebp
  40932d:	pop    ss
  40932e:	ins    BYTE PTR es:[edi],dx
  40932f:	jns    0x409333
  409331:	adc    ebx,DWORD PTR [edi]
  409333:	std    
  409334:	in     eax,dx
  409335:	into   
  409336:	hlt    
  409337:	sub    BYTE PTR [ebx],ah
  409339:	popa   
  40933a:	stos   DWORD PTR es:[edi],eax
  40933b:	jnp    0x4092fb
  40933d:	stos   BYTE PTR es:[edi],al
  40933e:	(bad)  
  40933f:	mov    bh,0xb9
  409341:	dec    ecx
  409342:	out    0x79,eax
  409344:	dec    eax
  409345:	sbb    eax,ecx
  409347:	dec    esi
  409348:	adc    dh,BYTE PTR [esi-0x5547a6b6]
  40934e:	inc    ebp
  40934f:	out    dx,eax
  409350:	out    dx,eax
  409351:	mov    WORD PTR [ecx+0x1816c6ac],?
  409357:	fiadd  DWORD PTR [esp+ecx*4-0x2c]
  40935b:	fbstp  TBYTE PTR [esi+0x63]
  40935e:	inc    eax
  40935f:	fmulp  st(1),st
  409361:	mov    esp,0x8294d93
  409366:	cdq    
  409367:	hlt    
  409368:	and    BYTE PTR [esi],dh
  40936a:	ins    BYTE PTR es:[edi],dx
  40936b:	int3   
  40936c:	inc    esi
  40936d:	add    BYTE PTR [ebp+0x8657b25],ch
  409373:	adc    ebp,DWORD PTR [esi]
  409375:	xchg   edi,eax
  409376:	stc    
  409377:	jno    0x40932f
  409379:	push   edx
  40937a:	popa   
  40937b:	js     0x4093c4
  40937d:	push   ebx
  40937e:	test   al,0x7b
  409380:	daa    
  409381:	sbb    DWORD PTR ds:[eax-0xf22cb39],esp
  409388:	jne    0x4093c9
  40938a:	sahf   
  40938b:	ficom  DWORD PTR [ebp-0x71974dcd]
  409391:	cmp    al,0x35
  409393:	lds    ebp,FWORD PTR [edi]
  409395:	jnp    0x409349
  409397:	cmp    DWORD PTR [ecx],edi
  409399:	sbb    eax,0x555f656b
  40939e:	ss (bad) 
  4093a0:	mov    edi,DWORD PTR [eax-0x5268c0ee]
  4093a6:	fwait
  4093a7:	pop    es
  4093a8:	in     al,dx
  4093a9:	call   0xe311:0xda745640
  4093b0:	push   ss
  4093b1:	fucom  st(7)
  4093b3:	adc    dl,cl
  4093b5:	cwde   
  4093b6:	mov    al,0xaf
  4093b8:	or     al,0x90
  4093ba:	int3   
  4093bb:	push   ss
  4093bc:	and    BYTE PTR [edi+0x54],0x40
  4093c0:	push   0x24f69e42
  4093c5:	push   ds
  4093c6:	ja     0x4093a9
  4093c8:	jecxz  0x409364
  4093ca:	dec    edx
  4093cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093cc:	out    dx,eax
  4093cd:	pusha  
  4093ce:	rep lods eax,DWORD PTR ds:[esi]
  4093d0:	add    DWORD PTR [ebx],ecx
  4093d2:	pushf  
  4093d3:	loopne 0x4093f4
  4093d5:	sti    
  4093d6:	test   al,0x46
  4093d8:	stc    
  4093d9:	ja     0x4093a8
  4093db:	mov    DWORD PTR [edi],edi
  4093dd:	push   esi
  4093de:	dec    edi
  4093df:	add    BYTE PTR [ebp+esi*8+0x6b],0x34
  4093e4:	cmp    eax,0xfa6b5d5a
  4093e9:	pop    edx
  4093eb:	daa    
  4093ec:	and    al,0x33
  4093ee:	cmp    esi,edi
  4093f0:	aaa    
  4093f1:	jge    0x409416
  4093f3:	dec    edx
  4093f4:	mov    ebx,0x647bc1c3
  4093f9:	mov    al,0x48
  4093fb:	(bad)  
  4093fc:	retf   0x33c2
  4093ff:	xchg   bh,bl
  409401:	mov    ecx,0xe496acf1
  409406:	push   ebp
  409407:	pop    ebx
  409409:	(bad)  
  40940a:	sahf   
  40940b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40940c:	add    eax,0x22db454
  409411:	ds gs nop
  409414:	push   esp
  409415:	cmc    
  409416:	xchg   esp,eax
  409417:	cli    
  409418:	(bad)  
  409419:	in     al,dx
  40941a:	test   al,0xdf
  40941c:	add    eax,DWORD PTR [ecx+edx*1-0x5ca51de5]
  409423:	lahf   
  409424:	mov    ds:0x4b3d860b,al
  409429:	rcl    BYTE PTR [ecx],1
  40942b:	pop    ds
  40942c:	mov    ah,0x5c
  40942e:	sti    
  40942f:	add    eax,0x3a6407a2
  409434:	aaa    
  409435:	(bad)  
  409436:	outs   dx,BYTE PTR ds:[esi]
  409437:	fild   DWORD PTR [eax+0x25b359f5]
  40943d:	(bad)  
  40943e:	icebp  
  40943f:	fwait
  409440:	shr    BYTE PTR [esi-0x2b],cl
  409443:	aam    0x2c
  409445:	(bad)  
  409446:	mov    edi,0xdea85b2d
  40944b:	dec    ebp
  40944d:	retf   
  40944e:	int    0xef
  409450:	pop    esp
  409451:	push   esi
  409452:	jmp    0x91880d67
  409457:	sub    DWORD PTR [esi],eax
  409459:	(bad)  
  40945a:	cmp    edi,ebp
  40945c:	out    dx,eax
  40945d:	ins    DWORD PTR es:[edi],dx
  40945e:	xor    edx,DWORD PTR [ebx+0x7]
  409461:	sbb    al,0x9a
  409463:	jecxz  0x409424
  409465:	ds and eax,0x6c3a1794
  40946b:	(bad)  
  40946c:	ret    
  40946d:	neg    dl
  40946f:	jne    0x40942c
  409471:	leave  
  409472:	fst    QWORD PTR [ecx]
  409474:	mul    DWORD PTR [ecx+0x17]
  409477:	(bad)  
  409479:	out    dx,al
  40947a:	ret    0xa245
  40947d:	pop    ecx
  40947e:	js     0x40944d
  409480:	xchg   esp,eax
  409481:	or     eax,0x45f22886
  409486:	adc    DWORD PTR [edi],0xffffff8e
  409489:	aam    0x2a
  40948b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40948c:	push   es
  40948d:	loop   0x40946b
  40948f:	pop    esi
  409490:	dec    ecx
  409491:	js     0x409422
  409493:	(bad)  
  409494:	mov    bl,0xb2
  409496:	jmp    0x521a:0x5a8b17d6
  40949d:	pusha  
  40949e:	xchg   edx,eax
  40949f:	gs jnp 0x409508
  4094a2:	jne    0x40944a
  4094a4:	shl    BYTE PTR [eax-0x168c103a],1
  4094aa:	xor    BYTE PTR [esi-0x5a],al
  4094ad:	mov    al,0xc3
  4094af:	in     al,0x58
  4094b1:	jmp    0x183b5dec
  4094b6:	pop    ecx
  4094b7:	retf   
  4094b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b9:	addr16 repnz push ebx
  4094bc:	mov    esp,0x4e8973c3
  4094c1:	dec    edx
  4094c2:	and    edi,DWORD PTR [ebx]
  4094c4:	sbb    BYTE PTR ds:[esp+esi*2],dl
  4094c8:	add    BYTE PTR [esp+edx*1-0x787890bb],dh
  4094cf:	jo     0x40948e
  4094d1:	adc    BYTE PTR [edi-0x99c6f9d],bh
  4094d7:	mov    ah,BYTE PTR [edi-0x5f]
  4094da:	lahf   
  4094db:	jle    0x40952c
  4094dd:	xchg   ecx,eax
  4094de:	clc    
  4094df:	mov    cl,0x3
  4094e1:	stc    
  4094e2:	inc    edi
  4094e3:	jge    0x409519
  4094e5:	cwde   
  4094e6:	xor    eax,0x5aa72fe5
  4094eb:	adc    al,0x96
  4094ed:	rcl    DWORD PTR [eax+eiz*8],1
  4094f0:	jge    0x4094ca
  4094f2:	rol    ah,1
  4094f4:	adc    DWORD PTR [ecx+0x70],ecx
  4094f7:	mov    edx,0xc30d5c7a
  4094fc:	and    esi,esi
  4094fe:	enter  0xa832,0xe0
  409502:	popa   
  409503:	xchg   ebp,eax
  409504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409505:	jg     0x4094dc
  409507:	rcr    DWORD PTR [ebp-0x25],1
  40950a:	fadd   QWORD PTR [esi+ecx*4+0x55b009f9]
  409511:	mov    edx,0x5c29e6c3
  409516:	ss dec esp
  409518:	imul   ebp,DWORD PTR [edi+esi*2-0x10],0x4
  40951d:	fdiv   QWORD PTR [eax]
  40951f:	jg     0x4094a8
  409521:	sbb    eax,0x58d6b2a4
  409526:	add    al,0xd1
  409528:	sub    al,0xe2
  40952a:	dec    esi
  40952b:	(bad)  
  40952c:	mov    bh,0xca
  40952e:	jne    0x4094d0
  409530:	mov    DWORD PTR ss:[eax-0x34],esp
  409534:	inc    ebp
  409535:	adc    cl,dl
  409537:	and    esp,ecx
  409539:	jle    0x409521
  40953b:	adc    esi,DWORD PTR [di+0xd52]
  409540:	or     BYTE PTR [edi+eax*4],bl
  409543:	test   BYTE PTR [ebx+edi*4-0x3a],0x36
  409548:	fwait
  409549:	adc    BYTE PTR [eax],0x71
  40954c:	xchg   edx,eax
  40954d:	and    edi,esp
  40954f:	or     BYTE PTR [edx-0x50],0x5a
  409553:	fmul   QWORD PTR [ecx+ecx*2+0x7e9cadef]
  40955a:	inc    ebx
  40955b:	sub    DWORD PTR [edi],esp
  40955d:	arpl   WORD PTR [ecx-0x158572ae],si
  409563:	push   es
  409564:	imul   ebx,DWORD PTR [bx-0x1d22],0xf3f0258c
  40956d:	ja     0x40955f
  40956f:	mov    al,dh
  409571:	test   ebx,0x6e5e8675
  409577:	push   0xd9d0396e
  40957c:	push   eax
  40957d:	adc    BYTE PTR [ebx+eax*4-0x54f302a9],ah
  409584:	ror    DWORD PTR [edi-0x55657eff],cl
  40958a:	xchg   ebp,eax
  40958b:	adc    esp,0xd9d3ec27
  409591:	jle    0x4095bd
  409593:	aam    0xba
  409595:	push   0xffffffb8
  409597:	fld    DWORD PTR [edx+0xb]
  40959a:	cmc    
  40959b:	fist   WORD PTR [ecx]
  40959d:	je     0x4095e4
  40959f:	mov    ebx,ecx
  4095a1:	pop    esp
  4095a2:	icebp  
  4095a3:	scas   al,BYTE PTR es:[edi]
  4095a4:	pop    ebp
  4095a5:	push   0xfffffffd
  4095a7:	pop    esp
  4095a8:	inc    edx
  4095a9:	test   DWORD PTR [ebx],ebp
  4095ab:	aaa    
  4095ac:	xor    eax,DWORD PTR [ebp-0x64ac8b8a]
  4095b2:	stos   BYTE PTR es:[edi],al
  4095b3:	inc    ecx
  4095b4:	pop    ds
  4095b5:	ss push ecx
  4095b7:	lea    ecx,[ebx]
  4095b9:	push   ecx
  4095ba:	push   edi
  4095bb:	xchg   DWORD PTR [ecx+0x2f],edi
  4095be:	not    BYTE PTR [eax-0x20]
  4095c1:	cmp    eax,0x636be088
  4095c6:	jnp    0x409588
  4095c8:	jge    0x409585
  4095ca:	shl    edi,cl
  4095cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cd:	test   al,0x98
  4095cf:	mov    dl,0xd6
  4095d1:	ins    BYTE PTR es:[edi],dx
  4095d2:	stos   BYTE PTR es:[edi],al
  4095d3:	and    al,0x12
  4095d5:	xchg   ecx,eax
  4095d6:	dec    esi
  4095d7:	cmp    dh,dh
  4095d9:	xor    DWORD PTR [bx+si+0x60],edi
  4095dd:	gs into 
  4095df:	div    ebp
  4095e1:	imul   edi,ebx,0xffffff91
  4095e4:	lea    ebp,[ecx]
  4095e6:	dec    ebp
  4095e7:	loope  0x4095ce
  4095e9:	or     ebp,edx
  4095eb:	add    eax,0x6252746c
  4095f0:	shl    DWORD PTR [edx-0x7e],0x9e
  4095f4:	jns    0x4095cd
  4095f6:	mov    esp,0x7cfb16d2
  4095fb:	mov    eax,ds:0x57519c64
  409600:	sbb    DWORD PTR [edx+0x39],edi
  409603:	xor    DWORD PTR [ebx-0x14],eax
  409606:	shl    BYTE PTR [ecx],0x75
  409609:	pusha  
  40960a:	fidivr WORD PTR [ecx]
  40960c:	lds    ebx,FWORD PTR ds:0xffb40163
  409612:	sti    
  409613:	ss pop ecx
  409615:	fist   WORD PTR [edx]
  409617:	clc    
  409618:	jne    0x4095a5
  40961a:	inc    ecx
  40961b:	inc    esp
  40961c:	push   edx
  40961d:	std    
  40961e:	or     BYTE PTR [edx+0x23be4b3d],0x56
  409625:	int    0x21
  409627:	sti    
  409628:	inc    esp
  409629:	call   0x826a658f
  40962e:	pop    esi
  40962f:	or     eax,0x54480271
  409634:	sub    DWORD PTR [edi-0x2a],esp
  409637:	add    bl,ch
  409639:	push   ecx
  40963a:	jmp    0x907422e0
  40963f:	cmc    
  409640:	push   ebp
  409641:	imul   esp,DWORD PTR [ebx+0x14e4ce4f],0xc15bd037
  40964b:	(bad)  
  40964c:	xor    eax,0x91e3cf54
  409651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409652:	enter  0xc622,0x6c
  409656:	adc    DWORD PTR [edi-0x18],ebp
  409659:	setae  dl
  40965c:	dec    edx
  40965d:	xor    BYTE PTR [ebx],ch
  40965f:	jl     0x4095eb
  409661:	aaa    
  409662:	push   0x232f7e5f
  409667:	sbb    eax,0xda430e1c
  40966c:	enter  0xdb1c,0x4b
  409670:	lea    ecx,[ebp+ecx*2+0x4a]
  409674:	push   ds
  409675:	loopne 0x40965a
  409677:	scas   eax,DWORD PTR es:[edi]
  409678:	rol    BYTE PTR [edx-0x62],1
  40967b:	popf   
  40967c:	push   es
  40967d:	inc    ecx
  40967e:	add    eax,0x467a0ce1
  409683:	dec    esi
  409684:	sub    edi,DWORD PTR [ebx+0xa]
  409687:	in     eax,dx
  409688:	mov    dh,0x70
  40968a:	out    0x4a,ax
  40968d:	mov    BYTE PTR [edx],ch
  40968f:	idiv   BYTE PTR [edi+edi*1]
  409692:	js     0x409700
  409694:	xor    al,0xc1
  409696:	cmc    
  409697:	mov    ebx,0xb33d8cc3
  40969c:	sub    eax,DWORD PTR [ecx+0x6344368]
  4096a2:	sub    al,0xb2
  4096a4:	push   ecx
  4096a5:	jo     0x409657
  4096a7:	(bad)  
  4096a8:	dec    esi
  4096a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096aa:	dec    esi
  4096ab:	mov    al,0x67
  4096ad:	stc    
  4096ae:	pop    ebx
  4096af:	sub    eax,0xd8565117
  4096b4:	jmp    0x3c2:0x47460104
  4096bb:	add    al,0x1b
  4096bd:	mov    dl,0x45
  4096bf:	sbb    DWORD PTR [ecx],edi
  4096c1:	or     BYTE PTR [ebp+0x3a],0xe2
  4096c5:	mov    ebp,0x60dcec76
  4096ca:	cmp    bh,ah
  4096cc:	ror    BYTE PTR [esi],1
  4096ce:	or     BYTE PTR [edi+0x3b],dh
  4096d1:	push   eax
  4096d2:	pop    ebx
  4096d3:	popf   
  4096d4:	pop    ebp
  4096d5:	pinsrw mm3,eax,0xa6
  4096d9:	ins    DWORD PTR es:[edi],dx
  4096da:	jmp    0x3270:0xbec11486
  4096e1:	loopne 0x40974b
  4096e3:	rcl    DWORD PTR [ebx+0x7625ade5],cl
  4096e9:	xor    eax,0x42e5f50e
  4096ee:	int3   
  4096ef:	jp     0x409767
  4096f1:	add    eax,0xe68af14e
  4096f6:	test   al,0x8b
  4096f8:	mov    edx,0xfd788584
  4096fd:	or     BYTE PTR [edi+eiz*1-0x5b34f5aa],bh
  409704:	stc    
  409705:	pushf  
  409706:	push   0xb7514162
  40970b:	lods   eax,DWORD PTR ds:[esi]
  40970c:	cdq    
  40970d:	pop    esi
  40970e:	imul   edx,DWORD PTR [edx],0x1e
  409711:	inc    edx
  409712:	imul   ecx,DWORD PTR [ebp+0x61],0x10
  409716:	out    dx,al
  409717:	fld    st(2)
  409719:	mov    BYTE PTR [ecx-0x74f7ba75],cl
  40971f:	cmp    eax,0x43470f
  409724:	or     DWORD PTR ds:0x434713,edi
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4345f3
  409745:	add    ecx,DWORD PTR ds:0x434637
  40974b:	mov    DWORD PTR ds:0x4345f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	sbb    DWORD PTR [esp+ebx*2],eax
  409768:	pop    ebx
  409769:	xchg   esp,eax
  40976a:	out    dx,al
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	cli    
  409772:	xor    al,BYTE PTR [edi+esi*2+0x42]
  409776:	inc    ebp
  409777:	fldcw  WORD PTR [edi]
  409779:	push   0xffffff96
  40977b:	inc    ebx
  40977c:	dec    edx
  40977d:	jae    0x4097c1
  40977f:	jecxz  0x409778
  409781:	daa    
  409782:	push   0xcfd3b316
  409787:	rol    BYTE PTR [ebp-0x755b481e],1
  40978d:	ins    DWORD PTR es:[edi],dx
  40978e:	shl    DWORD PTR [edi+0x59],0x4b
  409792:	lods   eax,DWORD PTR ds:[esi]
  409793:	into   
  409794:	not    ecx
  409796:	aas    
  409797:	xor    esp,DWORD PTR [esi+0x55166214]
  40979d:	in     eax,0xea
  40979f:	jmp    0x98f3f6c6
  4097a4:	ins    BYTE PTR es:[edi],dx
  4097a5:	(bad)  [edx-0xd]
  4097a8:	rcl    esi,1
  4097aa:	jg     0x409756
  4097ac:	fst    QWORD PTR [ebx+0x31a2b681]
  4097b2:	in     al,0x0
  4097b4:	mov    cl,0xd9
  4097b6:	ss icebp 
  4097b8:	add    BYTE PTR [ebx],0x8b
  4097bb:	and    dl,BYTE PTR [edx]
  4097bd:	shl    DWORD PTR [edi+eiz*1],1
  4097c0:	cld    
  4097c1:	xor    BYTE PTR [eax+0xba7839b],0xcc
  4097c8:	add    BYTE PTR [ecx+edi*1],dl
  4097cb:	icebp  
  4097cc:	aas    
  4097cd:	das    
  4097ce:	xchg   DWORD PTR [edx+0x39],esp
  4097d1:	shl    BYTE PTR [ecx+0x24560f1f],cl
  4097d7:	js     0x409848
  4097d9:	mov    ds:0x392f6435,al
  4097de:	push   esi
  4097df:	sub    al,BYTE PTR [si-0x1b]
  4097e3:	int3   
  4097e4:	sar    DWORD PTR [esp+eiz*2+0x3],cl
  4097e8:	inc    esp
  4097e9:	jne    0x409811
  4097eb:	mov    ds:0xc2de032a,al
  4097f0:	js     0x4097f2
  4097f2:	iret   
  4097f3:	jno    0x40981b
  4097f5:	inc    esi
  4097f6:	test   BYTE PTR [eax],al
  4097f8:	dec    edi
  4097f9:	dec    esp
  4097fa:	test   DWORD PTR [edi-0xd],esp
  4097fd:	call   0x2988e9af
  409802:	inc    esp
  409803:	jge    0x409844
  409805:	rcr    DWORD PTR [edx-0x1eda5742],0xfb
  40980c:	inc    ebx
  40980d:	into   
  40980e:	fdiv   DWORD PTR [ecx]
  409810:	xor    bl,BYTE PTR ds:0xd20a5429
  409816:	addr16 inc ebx
  409818:	pop    ebp
  409819:	pop    es
  40981a:	pop    ebx
  40981b:	adc    BYTE PTR [edi-0x77],ah
  40981e:	outs   dx,BYTE PTR ds:[esi]
  40981f:	aas    
  409820:	or     al,0xec
  409822:	sub    DWORD PTR [esi-0x33],eax
  409825:	repz xchg esp,eax
  409827:	add    edi,DWORD PTR [edx+eiz*1+0x32]
  40982b:	mov    esp,0xf69580f
  409830:	jmp    0x756a:0x3537c05c
  409837:	popf   
  409838:	sbb    DWORD PTR [ebp-0x80],0xe2f54c63
  40983f:	stos   BYTE PTR es:[edi],al
  409840:	mov    ebp,0xdc0ada0f
  409845:	nop
  409846:	pushf  
  409847:	and    al,0xae
  409849:	inc    eax
  40984a:	push   esp
  40984b:	(bad)  
  40984c:	mov    bh,0x60
  40984e:	popa   
  40984f:	shl    bl,cl
  409851:	jb     0x4098c0
  409853:	mov    WORD PTR [ebp+edx*4+0x54],fs
  409857:	inc    ecx
  409858:	mov    esp,0x86ba4925
  40985d:	scas   eax,DWORD PTR es:[edi]
  40985e:	sub    al,dh
  409860:	mov    edi,0x747778b3
  409865:	ins    DWORD PTR es:[edi],dx
  409866:	and    ch,BYTE PTR [edi]
  409868:	or     al,0x6d
  40986a:	adc    al,0x1d
  40986c:	in     eax,dx
  40986d:	or     al,0xb0
  40986f:	sbb    ecx,DWORD PTR [ecx]
  409871:	loop   0x40986d
  409873:	dec    ecx
  409874:	push   ebp
  409875:	ds sbb eax,0x20c6889e
  40987b:	jne    0x40981f
  40987d:	mov    esp,0x7660dac6
  409882:	dec    esp
  409883:	ds sub al,0x62
  409886:	es jecxz 0x40983c
  409889:	shl    DWORD PTR ds:0x2904,0x8c
  40988f:	aad    0x85
  409891:	jbe    0x40985a
  409893:	outs   dx,DWORD PTR ds:[esi]
  409894:	or     DWORD PTR [eax-0x176a46e7],0xdd2d99fd
  40989e:	add    DWORD PTR [edx+0x6df954da],edi
  4098a4:	mov    ds:0xc78beeea,eax
  4098a9:	fnstcw WORD PTR [ecx]
  4098ab:	in     eax,dx
  4098ac:	dec    ebp
  4098ad:	push   edx
  4098ae:	loope  0x40992c
  4098b0:	aam    0xa4
  4098b2:	push   cs
  4098b3:	add    DWORD PTR [edx+0x62aaff93],edx
  4098b9:	sar    BYTE PTR [ebp+0x73947e49],1
  4098bf:	pop    ebp
  4098c0:	mov    al,ds:0x43b17987
  4098c5:	out    dx,al
  4098c6:	cmp    eax,0x14b2f416
  4098cb:	out    dx,eax
  4098cc:	(bad)  
  4098cd:	cdq    
  4098ce:	dec    esi
  4098cf:	mov    eax,0x7e40e8c4
  4098d4:	and    esi,DWORD PTR [edx]
  4098d6:	sub    ebp,0x811cf931
  4098dc:	cwde   
  4098dd:	jge    0x40987e
  4098df:	add    esi,DWORD PTR [ebp-0x7f]
  4098e2:	add    al,0x30
  4098e4:	mov    edx,0xf89d30b1
  4098e9:	addr16 mov dh,0xc7
  4098ec:	mov    ebx,0xa1e513a3
  4098f1:	ret    0xd459
  4098f4:	in     eax,0xa7
  4098f6:	mov    ds:0x7a6fe128,eax
  4098fb:	sub    eax,0xfa1df0b5
  409900:	scas   al,BYTE PTR es:[edi]
  409901:	fsubr  DWORD PTR [ecx+0x74a74396]
  409907:	dec    esp
  409908:	mov    ah,0x16
  40990a:	lods   eax,DWORD PTR ds:[esi]
  40990b:	mov    bh,0x6
  40990d:	xlat   BYTE PTR ds:[ebx]
  40990e:	xchg   ebx,eax
  40990f:	fidiv  WORD PTR [edx+ebx*4-0x7773035f]
  409916:	loope  0x4098e4
  409918:	cmp    eax,0x20312e
  40991d:	mov    ebx,0xa0aad159
  409922:	xchg   ebx,eax
  409923:	mov    ebp,0x664b6ab4
  409928:	mov    eax,esp
  40992a:	mov    al,ds:0xe0d1f5f5
  40992f:	pop    esi
  409930:	pop    ecx
  409931:	fstp   QWORD PTR [eax-0x29]
  409934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409935:	ds or  al,0x5e
  409938:	daa    
  409939:	sbb    edx,DWORD PTR [esi+0xe]
  40993c:	jp     0x409962
  40993e:	popa   
  40993f:	out    0x70,al
  409941:	pop    es
  409942:	mov    ds:0x479511db,eax
  409947:	cwde   
  409948:	cld    
  409949:	out    dx,al
  40994a:	or     ch,0x16
  40994d:	inc    eax
  40994e:	lods   al,BYTE PTR ds:[esi]
  40994f:	enter  0x1a78,0x15
  409953:	xlat   BYTE PTR ds:[ebx]
  409954:	out    0x92,eax
  409956:	jl     0x409962
  409958:	inc    ebx
  409959:	out    0x9c,eax
  40995b:	dec    edi
  40995c:	mov    edi,0x806fe057
  409961:	or     dh,BYTE PTR [edx+0x26]
  409964:	mov    ecx,0xf612e569
  409969:	sti    
  40996a:	inc    esp
  40996b:	fwait
  40996c:	rcl    BYTE PTR [ecx],1
  40996e:	repnz stos DWORD PTR es:[edi],eax
  409970:	adc    dl,BYTE PTR [edx+0x18232f40]
  409976:	mov    ah,0x4d
  409978:	scas   al,BYTE PTR es:[edi]
  409979:	std    
  40997a:	test   edi,0x39bef0ca
  409980:	repz jb 0x409927
  409983:	sbb    al,0xb3
  409985:	out    dx,al
  409986:	push   ebx
  409987:	and    BYTE PTR [ecx+0x5a6f172a],0xb2
  40998e:	mov    dh,0x17
  409990:	mov    eax,ds:0x282a64bf
  409995:	jae    0x409989
  409997:	and    eax,0x45a27e28
  40999c:	dec    esp
  40999d:	push   ebx
  40999e:	aam    0x59
  4099a0:	jne    0x409a18
  4099a2:	jle    0x409924
  4099a4:	sbb    bh,BYTE PTR [ebx-0x60d6cc18]
  4099aa:	ds popa 
  4099ac:	sub    al,0xe4
  4099ae:	jmp    0x7e9fb58f
  4099b3:	jno    0x40996b
  4099b5:	(bad)  
  4099b6:	cli    
  4099b7:	ja     0x4099c2
  4099b9:	push   edi
  4099ba:	cmp    BYTE PTR [edx+ebx*1+0x7c716e50],bl
  4099c1:	push   edi
  4099c2:	dec    esp
  4099c3:	or     bl,BYTE PTR [edx-0x1e159da8]
  4099c9:	push   cs
  4099ca:	dec    ebp
  4099cb:	loopne 0x4099c7
  4099cd:	jge    0x409a1f
  4099cf:	stos   BYTE PTR es:[edi],al
  4099d0:	mov    eax,ds:0x2a0463ca
  4099d5:	in     al,0x94
  4099d7:	cmp    al,0x5c
  4099d9:	jg     0x409a3d
  4099db:	je     0x409a43
  4099dd:	xor    al,0x55
  4099df:	push   esi
  4099e0:	(bad)  
  4099e1:	xchg   ebp,eax
  4099e2:	inc    esi
  4099e3:	mov    esp,0x85a833c2
  4099e8:	xlat   BYTE PTR ds:[ebx]
  4099e9:	cmc    
  4099ea:	cmp    al,0x55
  4099ec:	aas    
  4099ed:	retf   0x4b41
  4099f0:	pop    ecx
  4099f1:	dec    ebp
  4099f2:	and    eax,0xb1de3764
  4099f7:	dec    esp
  4099f8:	fwait
  4099f9:	pop    edi
  4099fa:	bound  esi,QWORD PTR [edi-0x2d4456df]
  409a00:	ins    DWORD PTR es:[edi],dx
  409a01:	lods   al,BYTE PTR fs:[esi]
  409a03:	ss out 0x2f,eax
  409a06:	test   BYTE PTR [edi],cl
  409a08:	jne    0x409a6b
  409a0a:	or     DWORD PTR [ebx+0x55],0x693789b0
  409a11:	pop    es
  409a12:	cli    
  409a13:	or     ah,BYTE PTR [ebx-0x1a4a8ac9]
  409a19:	jbe    0x409a77
  409a1b:	and    eax,0xc489736
  409a20:	fs xchg cl,al
  409a23:	sar    BYTE PTR [ebx+0x3e],0x1f
  409a27:	lods   eax,DWORD PTR ds:[esi]
  409a28:	mov    ds:0xd2097df5,al
  409a2d:	mov    al,ds:0x40e8591c
  409a32:	fnsave [ebx-0x1d]
  409a35:	enter  0xa51,0x41
  409a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a3a:	out    0x56,al
  409a3c:	icebp  
  409a3d:	and    BYTE PTR [edi+0x5d],0x87
  409a41:	fdivr  QWORD PTR [edi+0x3661e499]
  409a47:	imul   eax,DWORD PTR [ebx+0x6e95aadb],0xf99db6e2
  409a51:	jg     0x409a0c
  409a53:	shl    DWORD PTR [ecx],cl
  409a55:	cmp    al,0x60
  409a57:	mov    al,BYTE PTR [ecx-0x5]
  409a5a:	mov    ecx,0xe405471d
  409a5f:	pop    ebx
  409a60:	sbb    esi,ebp
  409a62:	pop    esi
  409a63:	jp     0x409a24
  409a65:	cli    
  409a66:	sbb    bl,BYTE PTR [ebp-0x53]
  409a69:	call   0x4b35815f
  409a6e:	sbb    al,0x86
  409a70:	fcmovne st,st(3)
  409a72:	out    0x8b,al
  409a74:	jmp    0x409a8a
  409a76:	leave  
  409a77:	or     edi,DWORD PTR [edi-0x37b14b62]
  409a7d:	loopne 0x409a03
  409a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a80:	cmp    al,0xcf
  409a82:	adc    DWORD PTR [ebp-0x7248516a],esp
  409a88:	iret   
  409a89:	xor    eax,0x499387f8
  409a8e:	lea    ecx,[esi+0x4e7980fc]
  409a94:	dec    edi
  409a95:	sub    eax,0x3e43240c
  409a9a:	xor    BYTE PTR [eax],cl
  409a9c:	mov    esi,esi
  409a9e:	adc    DWORD PTR [edi-0x299699cc],ebp
  409aa4:	xor    bh,bl
  409aa6:	mov    al,0x7e
  409aa8:	retf   0x815e
  409aab:	mov    ch,0x18
  409aad:	call   0x9af0:0xe0449e26
  409ab4:	in     eax,0x3f
  409ab6:	dec    edi
  409ab7:	sti    
  409ab8:	jmp    0x7724:0xea43a7df
  409abf:	xor    BYTE PTR [edi+0x474e33d0],al
  409ac5:	push   ebx
  409ac6:	clc    
  409ac7:	into   
  409ac8:	jp     0x409b35
  409aca:	xor    BYTE PTR [ebx+0x5f],bl
  409acd:	fistp  QWORD PTR [edi+0x6f]
  409ad0:	jmp    0x5f90:0xd7e39203
  409ad7:	loop   0x409a8b
  409ad9:	fist   DWORD PTR [edi-0x4]
  409adc:	sbb    ebx,DWORD PTR [edx]
  409ade:	fcomp  QWORD PTR [edx+0x6042cd03]
  409ae4:	xor    DWORD PTR [ebx],edx
  409ae6:	cmc    
  409ae7:	stos   BYTE PTR es:[edi],al
  409ae8:	lods   eax,DWORD PTR ds:[esi]
  409ae9:	jns    0x409b3a
  409aeb:	xor    al,0x84
  409aed:	out    dx,eax
  409aee:	int3   
  409aef:	sbb    ebx,ebx
  409af1:	fsubrp st(7),st
  409af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af4:	adc    eax,0xd3d59796
  409af9:	lahf   
  409afa:	int    0xb7
  409afc:	js     0x409b6a
  409afe:	clc    
  409aff:	les    esi,FWORD PTR [ecx-0x3f]
  409b02:	ror    dh,1
  409b04:	mov    ds:0x2edb3f5b,al
  409b09:	or     DWORD PTR [edx+0x234c0ae3],esi
  409b0f:	sub    al,0x1f
  409b11:	mov    esp,0x409e4af2
  409b16:	(bad)  
  409b17:	sahf   
  409b18:	jmp    0xd46ab4f2
  409b1d:	mov    ebp,0xa3895a68
  409b22:	dec    esp
  409b23:	sbb    al,0x60
  409b25:	mov    al,0x18
  409b27:	ds or  eax,0xd1d0c037
  409b2d:	mov    ebp,ebp
  409b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b30:	and    BYTE PTR [ebx+0x3b],0x5d
  409b34:	pavgw  mm3,QWORD PTR [edx+ebx*4]
  409b38:	jns    0x409ad5
  409b3a:	shl    DWORD PTR [edi+0x10],0xe4
  409b3e:	sar    BYTE PTR [esp+eax*1-0x27],0x7
  409b43:	in     eax,0x93
  409b45:	adc    BYTE PTR [eax],ch
  409b47:	ret    0x9835
  409b4a:	pop    ss
  409b4b:	xchg   ecx,eax
  409b4c:	xchg   edx,eax
  409b4d:	inc    ebp
  409b4e:	xchg   edi,eax
  409b4f:	adc    DWORD PTR ds:0x951f2c4f,ebx
  409b55:	jo     0x409b46
  409b57:	daa    
  409b58:	cli    
  409b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b5a:	pop    ebp
  409b5b:	retf   
  409b5c:	push   ecx
  409b5d:	mov    eax,ds:0x8016f7b
  409b62:	fist   WORD PTR [eax+0x3a]
  409b65:	pop    es
  409b66:	into   
  409b67:	pop    ds
  409b68:	mov    edx,0x45890900
  409b6d:	shr    BYTE PTR [ecx],0x15
  409b70:	add    DWORD PTR [esi+0x43],0x0
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4345df
  409b7f:	or     DWORD PTR ds:0x43464f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43467f
  409b8f:	xor    DWORD PTR ds:0x434683,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43466b
  409bb7:	mov    edi,DWORD PTR ds:0x434723
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	ds push eax
  409bd5:	jb     0x409c50
  409bd7:	mov    gs,edx
  409bd9:	jle    0x409c59
  409bdb:	jo     0x409c56
  409bdd:	jle    0x409c5d
  409bdf:	test   DWORD PTR [ebp-0x6c5ed809],0x7a12565a
  409be9:	pushf  
  409bea:	(bad)  
  409beb:	adc    ebx,esp
  409bed:	scas   al,BYTE PTR es:[edi]
  409bee:	outs   dx,DWORD PTR ds:[esi]
  409bef:	(bad)  
  409bf0:	fdiv   QWORD PTR [ebx+eiz*1+0x42c4b336]
  409bf7:	dec    edi
  409bf8:	jl     0x409c63
  409bfa:	(bad)  [eax]
  409bfc:	imul   esp,DWORD PTR [edi-0x2e],0x19
  409c00:	jmp    0x409bb8
  409c02:	mov    al,BYTE PTR [edx]
  409c04:	daa    
  409c05:	and    al,BYTE PTR [ebx+eiz*8]
  409c08:	sub    edx,edi
  409c0a:	xor    DWORD PTR [eax+0x5861a52b],esp
  409c10:	gs and eax,0xfe1cdac1
  409c16:	or     bl,dl
  409c18:	out    0x7,eax
  409c1a:	push   esi
  409c1b:	mov    eax,0x24f3b8a8
  409c20:	mov    ebx,ds
  409c22:	jno    0x409c6e
  409c24:	scas   eax,DWORD PTR es:[edi]
  409c25:	and    ebp,edi
  409c27:	mov    ds:0x5a3ffb52,eax
  409c2c:	cmp    al,0xbc
  409c2e:	push   edx
  409c2f:	(bad)  
  409c30:	xor    al,0x86
  409c32:	out    0xbf,eax
  409c34:	adc    eax,0x3c3588a0
  409c39:	or     BYTE PTR [eax],al
  409c3b:	ja     0x409ca6
  409c3d:	loope  0x409c24
  409c3f:	pop    ss
  409c40:	jmp    0x409c48
  409c42:	mov    ecx,DWORD PTR [edi+0x7]
  409c45:	cdq    
  409c46:	jns    0x409c78
  409c48:	mov    bl,0x85
  409c4a:	cmp    eax,esi
  409c4c:	jmp    0x8082:0x345ad2f5
  409c53:	and    eax,DWORD PTR [edx-0x41]
  409c56:	iret   
  409c57:	or     DWORD PTR [edi+0x75],ecx
  409c5a:	inc    ecx
  409c5b:	pop    ebp
  409c5c:	call   0xeb92:0x7b148a51
  409c63:	fcom   QWORD PTR [ecx]
  409c65:	lea    esi,ds:0x6ad56c5b
  409c6b:	inc    esi
  409c6c:	or     BYTE PTR [esi+0x2c],0x36
  409c70:	mov    fs,WORD PTR [ebp-0x741510ec]
  409c76:	or     ebp,ebp
  409c78:	bound  ecx,QWORD PTR [edi]
  409c7a:	xchg   BYTE PTR [edx-0x64],ch
  409c7d:	test   al,0xe4
  409c7f:	push   0x5a
  409c81:	mov    al,0x49
  409c83:	les    ecx,FWORD PTR [esi]
  409c85:	pop    ebp
  409c86:	icebp  
  409c87:	and    esp,DWORD PTR [esi-0x62b4e57a]
  409c8d:	sti    
  409c8e:	or     al,BYTE PTR [eax-0x78317b15]
  409c94:	sbb    DWORD PTR [esi],esi
  409c96:	shl    BYTE PTR [edi+0x70],1
  409c99:	lock add eax,0xb0ab1b62
  409c9f:	popf   
  409ca0:	xor    BYTE PTR [esi-0xf0738e2],bl
  409ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ca7:	cmc    
  409ca8:	adc    ah,BYTE PTR [eax]
  409caa:	imul   ebp,DWORD PTR [eax+0x320a2f7e],0xffffffc5
  409cb1:	cmp    ecx,ebx
  409cb3:	mov    al,0xd9
  409cb5:	cmp    BYTE PTR [ecx-0x39],ah
  409cb8:	fidivr DWORD PTR [ecx+0x5b841161]
  409cbe:	or     BYTE PTR [ebp-0x46],bh
  409cc1:	pop    es
  409cc2:	and    ebx,DWORD PTR [eax-0x11]
  409cc5:	add    al,0x74
  409cc7:	es aam 0x56
  409cca:	xchg   esi,eax
  409ccb:	popf   
  409ccc:	jmp    FWORD PTR [ebp+eax*2-0x2a]
  409cd0:	and    edi,DWORD PTR [eax+0x7f]
  409cd3:	loope  0x409ce8
  409cd5:	in     eax,dx
  409cd6:	cwde   
  409cd7:	in     eax,dx
  409cd8:	push   ds
  409cd9:	std    
  409cda:	cs pusha 
  409cdc:	ss sub edi,esp
  409cdf:	push   edi
  409ce0:	outs   dx,DWORD PTR ds:[esi]
  409ce1:	or     DWORD PTR [edx],ebx
  409ce3:	inc    esp
  409ce4:	nop
  409ce5:	jg     0x409c7b
  409ce7:	dec    ebx
  409ce8:	idiv   BYTE PTR [esp+edx*4-0x5f]
  409cec:	xchg   edi,eax
  409ced:	mov    ds:0xc94e9431,al
  409cf2:	pop    ds
  409cf3:	push   edi
  409cf4:	repnz mov ax,ds:0xd01bad1e
  409cfb:	aas    
  409cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cfd:	pop    ebx
  409cfe:	xchg   ecx,eax
  409cff:	fwait
  409d00:	sbb    al,0x5b
  409d02:	(bad)  
  409d03:	fwait
  409d04:	mov    edi,0x91f6bcf0
  409d09:	jle    0x409cab
  409d0b:	into   
  409d0c:	fs and ebp,ecx
  409d0f:	in     eax,dx
  409d10:	sbb    BYTE PTR [esi],0x30
  409d13:	push   edx
  409d14:	add    DWORD PTR [ecx+ebp*8-0x65],esp
  409d18:	(bad)  
  409d1a:	sbb    al,BYTE PTR [edi-0x27]
  409d1d:	mov    bh,0xf3
  409d1f:	ret    
  409d20:	ret    
  409d21:	push   edx
  409d22:	(bad)  
  409d23:	(bad)  
  409d24:	adc    BYTE PTR [ebx],dl
  409d26:	and    BYTE PTR [eax+ebp*1-0x4e16ffee],ch
  409d2d:	ret    0x408d
  409d30:	mov    bl,0x3
  409d32:	retf   
  409d33:	push   es
  409d34:	stos   DWORD PTR es:[edi],eax
  409d35:	push   eax
  409d36:	xchg   esi,eax
  409d37:	test   BYTE PTR [ebx+0x311c6aaf],bh
  409d3d:	adc    al,0xe0
  409d3f:	rcr    bl,0xe9
  409d42:	xor    BYTE PTR [ebp+0x69],bl
  409d45:	mov    al,0xd7
  409d47:	retf   0x8bfa
  409d4a:	lds    ecx,FWORD PTR ds:0xba9a29f4
  409d50:	out    0x7f,al
  409d52:	neg    dl
  409d54:	inc    ecx
  409d55:	(bad)  
  409d56:	data16 mov ?,WORD PTR [edi-0x1b44487]
  409d5d:	xor    DWORD PTR [esi*1-0x2188b494],0x2efabbb5
  409d68:	mov    BYTE PTR [edi-0x51],dl
  409d6b:	inc    edx
  409d6c:	push   ss
  409d6d:	addr16 clc 
  409d6f:	sub    eax,0xf65e8219
  409d74:	and    eax,0xd2d979c8
  409d79:	mov    ebp,0x374607e2
  409d7e:	add    al,bh
  409d80:	(bad)  
  409d81:	jne    0x409dcc
  409d83:	dec    eax
  409d84:	mov    esp,0x9ce37a83
  409d89:	mov    cl,BYTE PTR [ebx]
  409d8b:	inc    esi
  409d8c:	or     ah,BYTE PTR [ebx+0x76]
  409d8f:	pop    edi
  409d90:	sar    esi,0x2c
  409d93:	lock and DWORD PTR [edi],esp
  409d96:	sbb    BYTE PTR [eax+0x2c],ch
  409d99:	(bad)  
  409d9a:	xchg   ebp,eax
  409d9b:	sbb    bh,ch
  409d9d:	int3   
  409d9e:	push   0xffffffa9
  409da0:	and    DWORD PTR [eax],edx
  409da2:	mov    ds:0xd9c48eed,eax
  409da7:	lock fwait
  409da9:	leave  
  409daa:	cmc    
  409dab:	out    dx,al
  409dac:	adc    eax,0xe7be4196
  409db1:	ins    BYTE PTR es:[edi],dx
  409db2:	sub    eax,0x6e51d183
  409db7:	cmp    BYTE PTR [edi+0x783b9d74],cl
  409dbd:	mov    BYTE PTR [edx+0x2e22f44c],cl
  409dc3:	add    BYTE PTR [eax],ch
  409dc5:	mov    ah,0x1c
  409dc7:	ins    BYTE PTR es:[edi],dx
  409dc8:	cmp    al,0x9f
  409dca:	in     al,dx
  409dcb:	jbe    0x409d73
  409dcd:	add    ah,cl
  409dcf:	rcl    DWORD PTR [ebp-0x7b],1
  409dd2:	xor    edx,DWORD PTR [eax]
  409dd4:	out    dx,eax
  409dd5:	loopne 0x409d57
  409dd7:	sahf   
  409dd8:	mov    dh,0x5d
  409dda:	sub    DWORD PTR [bp+0x62c6],esi
  409ddf:	cmp    al,0x5e
  409de1:	jmp    0x409e49
  409de3:	into   
  409de4:	add    al,0x5a
  409de6:	pop    es
  409de7:	aas    
  409de8:	mov    ds:0xfd5c4cdb,al
  409ded:	jns    0x409e37
  409def:	ret    0xf3e3
  409df2:	mov    ebp,DWORD PTR [edi+eax*1+0x73c2165c]
  409df9:	shl    ecx,0xb4
  409dfc:	fild   DWORD PTR [ecx]
  409dfe:	mov    esi,0xfe250e46
  409e03:	mov    eax,0x68b1dfe
  409e08:	ins    DWORD PTR es:[edi],dx
  409e09:	pop    esp
  409e0a:	cli    
  409e0b:	es nop
  409e0d:	rcr    DWORD PTR [ecx+0x70183dd3],cl
  409e13:	ret    0x60f4
  409e16:	adc    bl,BYTE PTR [eax-0x58]
  409e19:	aad    0x88
  409e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e1c:	or     eax,0x26477f09
  409e21:	or     DWORD PTR [edx-0x76d62ea3],esi
  409e27:	jbe    0x409e96
  409e29:	jg     0x409e63
  409e2b:	inc    edi
  409e2c:	adc    ebp,DWORD PTR [esi]
  409e2e:	push   edx
  409e2f:	dec    ebp
  409e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e31:	call   0xb9c2:0x6b658ac4
  409e38:	icebp  
  409e39:	(bad)  
  409e3a:	loopne 0x409e08
  409e3c:	jo     0x409dc3
  409e3e:	iret   
  409e3f:	push   ecx
  409e40:	push   ebp
  409e41:	push   ebx
  409e42:	pop    edi
  409e43:	call   0x614c186
  409e48:	push   es
  409e49:	test   eax,0x806f0141
  409e4e:	pop    eax
  409e4f:	mov    BYTE PTR [edx+edx*1],ah
  409e52:	push   esi
  409e53:	imul   esi,DWORD PTR [edi],0xffffffdb
  409e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e57:	into   
  409e58:	inc    ecx
  409e59:	mov    al,ds:0x6082ca89
  409e5e:	lods   al,BYTE PTR ds:[esi]
  409e5f:	test   DWORD PTR [edi],0xdaec1914
  409e65:	popa   
  409e66:	mov    ah,ah
  409e68:	int3   
  409e69:	cmp    bh,bh
  409e6b:	xchg   edi,eax
  409e6c:	bound  edi,QWORD PTR [edi-0x67]
  409e6f:	inc    edi
  409e70:	push   es
  409e71:	out    dx,al
  409e72:	pushf  
  409e73:	jecxz  0x409e4c
  409e75:	inc    ecx
  409e76:	fs in  eax,dx
  409e78:	jg     0x409eb8
  409e7a:	sbb    ah,BYTE PTR [esi]
  409e7c:	fistp  WORD PTR [esi+0x3cab7bd6]
  409e82:	mov    eax,ds:0xbf5edf27
  409e87:	iret   
  409e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e89:	dec    DWORD PTR [ecx+eiz*4-0x35adc927]
  409e90:	dec    edx
  409e91:	pusha  
  409e92:	clc    
  409e93:	shl    BYTE PTR [edi-0x3f],1
  409e96:	jmp    edx
  409e98:	cmp    dh,ch
  409e9a:	div    BYTE PTR [ebp+0x33]
  409e9d:	xor    esp,edi
  409e9f:	dec    ebx
  409ea0:	mov    dh,0x55
  409ea2:	mov    ecx,0x6163dc2a
  409ea7:	int    0x66
  409ea9:	jne    0x409e32
  409eab:	and    eax,0x5f0879cb
  409eb0:	aaa    
  409eb1:	mov    dh,0x56
  409eb3:	enter  0xae00,0x46
  409eb7:	std    
  409eb8:	jo     0x409ecb
  409eba:	jmp    0xa9b6:0xcd60eb79
  409ec1:	jp     0x409ed5
  409ec3:	cmp    esi,DWORD PTR [esi-0x4ce999d3]
  409ec9:	and    al,0x19
  409ecb:	add    ecx,DWORD PTR [ecx+0x4]
  409ece:	mov    ebp,cs
  409ed0:	mov    bl,0x95
  409ed2:	mov    eax,ds:0x19a27673
  409ed7:	call   0x26bc:0xd1531fac
  409ede:	jnp    0x409f4f
  409ee0:	fidiv  DWORD PTR [edx+edi*4+0x6a97afc7]
  409ee7:	fisub  DWORD PTR [ecx-0x4a]
  409eea:	cmp    ebx,DWORD PTR [ebx]
  409eec:	shl    DWORD PTR [eax-0x754570cc],0x99
  409ef3:	xchg   edi,eax
  409ef4:	outs   dx,DWORD PTR ds:[esi]
  409ef5:	or     eax,0x8c8f99cd
  409efa:	xchg   ebx,eax
  409efb:	clc    
  409efc:	mov    cl,0x69
  409efe:	fist   WORD PTR [edi-0x39]
  409f01:	sub    ah,ch
  409f03:	sti    
  409f04:	cwde   
  409f05:	lea    ecx,[eax]
  409f07:	jb     0x409eaf
  409f09:	ins    DWORD PTR es:[edi],dx
  409f0a:	sbb    al,0xf2
  409f0c:	or     al,0x55
  409f0e:	test   al,0xbf
  409f10:	ret    
  409f11:	xor    bl,BYTE PTR [eax]
  409f13:	jmp    0xdeff:0xf60a846e
  409f1a:	dec    ebx
  409f1b:	dec    ebp
  409f1c:	cs or  al,0xa4
  409f1f:	popf   
  409f20:	sar    DWORD PTR ds:0x260bc041,1
  409f26:	sbb    ecx,ebx
  409f28:	or     DWORD PTR [ebx-0x66bd0269],ecx
  409f2e:	lods   eax,DWORD PTR ds:[esi]
  409f2f:	daa    
  409f30:	cmp    al,0xa5
  409f32:	or     eax,0x9c14e040
  409f37:	push   edx
  409f38:	add    al,0x1a
  409f3a:	lods   al,BYTE PTR ds:[esi]
  409f3b:	pusha  
  409f3c:	jno    0x409f06
  409f3e:	fild   WORD PTR [esi]
  409f40:	cmp    ebx,edi
  409f42:	dec    ebp
  409f43:	jae    0x409f2f
  409f45:	rcl    DWORD PTR [edx-0x3f],1
  409f48:	mov    es:0xd956a165,eax
  409f4e:	fldcw  WORD PTR [ebx+0x755b8a7c]
  409f54:	mov    BYTE PTR [ebx-0x24b4b0ea],dl
  409f5a:	not    DWORD PTR [ebx+0x5c]
  409f5d:	sbb    DWORD PTR [edi-0x41],0x61
  409f61:	ret    0x45af
  409f64:	jns    0x409f52
  409f66:	mov    bl,0x15
  409f68:	fcom   QWORD PTR [ebx]
  409f6a:	jne    0x409fa6
  409f6c:	pop    ebx
  409f6d:	jb     0x409f4f
  409f6f:	mov    bl,0x50
  409f71:	xlat   BYTE PTR ds:[ebx]
  409f72:	inc    eax
  409f73:	push   edx
  409f74:	push   esp
  409f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f76:	and    bh,cl
  409f78:	xor    al,0x97
  409f7a:	sbb    dl,cl
  409f7c:	retf   0x428a
  409f7f:	push   edi
  409f80:	fcomp  DWORD PTR [esi-0x70]
  409f83:	(bad)  
  409f84:	aas    
  409f85:	fistp  DWORD PTR [edx+0x6f2c6b57]
  409f8b:	pop    es
  409f8c:	push   ebp
  409f8d:	add    DWORD PTR [ebx],edi
  409f8f:	adc    DWORD PTR [ebp+0x12],ecx
  409f92:	cdq    
  409f93:	cmp    BYTE PTR [eax-0x27f97837],cl
  409f99:	inc    edi
  409f9a:	mov    DWORD PTR [esi+0x77],edx
  409f9d:	and    al,0x84
  409f9f:	outs   dx,DWORD PTR ds:[esi]
  409fa0:	sub    eax,0x88742ca7
  409fa5:	out    0x3,al
  409fa7:	sub    BYTE PTR [ebx+0x3519d773],0x55
  409fae:	out    dx,eax
  409faf:	xor    BYTE PTR [edi+0x4b],cl
  409fb2:	dec    ecx
  409fb3:	popa   
  409fb4:	stc    
  409fb5:	push   ds
  409fb6:	mov    BYTE PTR [edi],cl
  409fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fba:	lods   eax,DWORD PTR ds:[esi]
  409fbb:	in     al,0xaf
  409fbd:	jle    0x409fa8
  409fbf:	jmp    0x17fb88f4
  409fc4:	fist   DWORD PTR [edx-0x3340238a]
  409fca:	repz pop esi
  409fcc:	stos   BYTE PTR es:[edi],al
  409fcd:	(bad)
  409fd1:	inc    ebx
  409fd2:	xchg   edi,eax
  409fd3:	mov    ds:0xb0d3567c,al
  409fd8:	test   bh,al
  409fda:	inc    ebp
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fcos   
  409ff4:	dec    eax
  409ff5:	inc    ebx
  409ff6:	stos   DWORD PTR es:[edi],eax
  409ff7:	xor    dh,0x7e
  409ffa:	jle    0x40a06c
  409ffc:	jns    0x40a07c
  409ffe:	jle    0x40a018
  40a000:	adc    DWORD PTR [esi-0x6c],0xffffffc7
  40a004:	xchg   esi,eax
  40a005:	mov    eax,eax
  40a007:	cmp    al,0x5
  40a009:	ins    BYTE PTR es:[edi],dx
  40a00a:	mov    ah,0x31
  40a00c:	and    DWORD PTR [edx+0x6a],0x1c6350b7
  40a013:	pusha  
  40a014:	into   
  40a015:	mov    ebx,0xb530e7b8
  40a01a:	loope  0x40a06c
  40a01c:	fild   WORD PTR [eax+0x52]
  40a01f:	xor    al,0xff
  40a021:	dec    eax
  40a022:	mov    ebx,0x61154b4a
  40a027:	repz rol DWORD PTR [edi+0x63],cl
  40a02b:	je     0x40a080
  40a02d:	idiv   DWORD PTR [eax+0x77d9a97e]
  40a033:	xchg   ecx,eax
  40a034:	jle    0x409fd7
  40a036:	inc    ebx
  40a037:	ja     0x409fe2
  40a039:	(bad)  
  40a03a:	or     eax,0xbe76e35
  40a03f:	fcomp  DWORD PTR [ecx+0x23]
  40a042:	mov    DWORD PTR [esi],esp
  40a044:	bound  ebx,QWORD PTR [eax+0x77]
  40a047:	ins    DWORD PTR es:[edi],dx
  40a048:	ins    BYTE PTR es:[edi],dx
  40a049:	rcl    BYTE PTR [eax-0x7c174d93],cl
  40a04f:	retf   0xbd23
  40a052:	(bad)  
  40a053:	in     eax,0xee
  40a055:	pop    eax
  40a056:	dec    ebp
  40a057:	cmp    cl,dh
  40a059:	sbb    dh,ah
  40a05b:	mov    ecx,0xd0ede22e
  40a060:	out    0x1c,eax
  40a062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a063:	loope  0x40a048
  40a065:	pop    ecx
  40a066:	bound  edi,QWORD PTR [esp+ecx*4-0x26]
  40a06a:	in     al,dx
  40a06b:	xchg   edx,eax
  40a06c:	dec    ebx
  40a06d:	mov    esi,0xaa8afccb
  40a072:	iret   
  40a073:	pop    ds
  40a074:	jmp    0x40a0ec
  40a076:	jge    0x40a06a
  40a078:	pop    ebp
  40a079:	sub    BYTE PTR [ecx-0x76a3078c],cl
  40a07f:	daa    
  40a080:	lock dec ecx
  40a082:	aad    0x80
  40a084:	jmp    0x94edceb
  40a089:	loop   0x40a03e
  40a08b:	ss lahf 
  40a08d:	in     eax,dx
  40a08e:	mov    dl,0x92
  40a090:	inc    ebp
  40a091:	inc    edx
  40a092:	(bad)  [esp+ebp*1+0x48]
  40a096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a097:	adc    edx,ebp
  40a099:	es repz mov esi,0xbf71759a
  40a0a0:	mov    bl,0x21
  40a0a2:	daa    
  40a0a3:	sub    bh,BYTE PTR [edi+esi*8-0x50]
  40a0a7:	sub    ebx,ecx
  40a0a9:	scas   eax,DWORD PTR es:[edi]
  40a0aa:	jl     0x40a0c0
  40a0ac:	mov    eax,ds:0xae1e0454
  40a0b1:	or     DWORD PTR [esi+ebx*2],ebx
  40a0b4:	dec    ebx
  40a0b5:	push   ebp
  40a0b6:	pushf  
  40a0b7:	loopne 0x40a0e2
  40a0b9:	arpl   WORD PTR [edi],dx
  40a0bb:	scas   eax,DWORD PTR es:[edi]
  40a0bc:	xchg   esp,eax
  40a0bd:	fld    st(2)
  40a0bf:	out    dx,eax
  40a0c0:	add    bl,BYTE PTR [ecx-0x54]
  40a0c3:	adc    BYTE PTR [ebx-0x620cee7c],dh
  40a0c9:	call   0x46fd3dab
  40a0ce:	mov    ds:0x718225ad,al
  40a0d3:	outs   dx,DWORD PTR ds:[esi]
  40a0d4:	inc    eax
  40a0d5:	es jecxz 0x40a085
  40a0d8:	or     eax,0xf66f47b
  40a0dd:	sub    ebp,DWORD PTR [edx-0xe]
  40a0e0:	mov    bh,0x14
  40a0e2:	pop    eax
  40a0e3:	test   DWORD PTR fs:[esi-0x3],esi
  40a0e7:	shl    BYTE PTR [ebx+0x79],1
  40a0ea:	rdpru  
  40a0ed:	fmul   QWORD PTR [edx+0x790b5dcd]
  40a0f3:	xor    al,BYTE PTR [eax-0xf746cbb]
  40a0f9:	mov    dl,0x9e
  40a0fb:	out    dx,al
  40a0fc:	or     esp,DWORD PTR [eax+0x71]
  40a0ff:	and    eax,0x2d2ea4b
  40a104:	push   0x343f5c3e
  40a109:	xchg   ax,ax
  40a10b:	jo     0x40a095
  40a10d:	fdivr  QWORD PTR [eax-0x1da670fa]
  40a113:	retf   
  40a114:	cmp    edx,DWORD PTR [ebx-0x67]
  40a117:	rcl    dh,1
  40a119:	jae    0x40a154
  40a11b:	mov    ss,WORD PTR [ebp+0x21a76285]
  40a121:	scas   al,BYTE PTR es:[edi]
  40a122:	push   ebx
  40a123:	in     al,dx
  40a124:	and    eax,0x657ada12
  40a129:	jle    0x40a0e5
  40a12b:	add    DWORD PTR [esp+edx*1],0x48
  40a12f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a131:	ja     0x40a187
  40a133:	repz std 
  40a135:	adc    ebp,DWORD PTR [eax+eiz*2]
  40a138:	mov    edx,0x2987bd57
  40a13d:	mov    WORD PTR [edi+0xa],gs
  40a140:	push   ebp
  40a141:	nop
  40a142:	sub    eax,0x46151e25
  40a147:	fidivr DWORD PTR [ecx-0x28157f]
  40a14d:	cmp    ecx,ebp
  40a14f:	mov    cl,0xdb
  40a151:	test   eax,0xa6a8e763
  40a156:	imul   edx,DWORD PTR [ecx+0x679af2e6],0x75
  40a15d:	inc    eax
  40a15e:	push   ecx
  40a15f:	sub    bh,BYTE PTR [esi+0x8]
  40a162:	fs iret 
  40a164:	jne    0x40a10c
  40a166:	sar    BYTE PTR [edi-0x6d],0x4f
  40a16a:	(bad)  
  40a16b:	fwait
  40a16c:	pop    ebx
  40a16d:	or     al,BYTE PTR [ecx]
  40a16f:	adc    ch,bh
  40a171:	cmp    al,0x9c
  40a173:	rep ins DWORD PTR es:[edi],dx
  40a175:	fsub   QWORD PTR [edx+ecx*2-0x5e]
  40a179:	enter  0x6d96,0x59
  40a17d:	aaa    
  40a17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a17f:	cmp    dl,BYTE PTR [ebp+0x56d24ad0]
  40a185:	or     eax,0x68ad1659
  40a18a:	sbb    BYTE PTR [ebx+0x1e],ah
  40a18d:	add    al,0x80
  40a18f:	pusha  
  40a190:	inc    esp
  40a191:	pop    es
  40a192:	(bad)  
  40a194:	mov    cl,0x82
  40a196:	sar    DWORD PTR [esi],0xfa
  40a199:	xlat   BYTE PTR ds:[ebx]
  40a19a:	and    eax,0xbbdcfed3
  40a19f:	mov    edx,0x13ceb78b
  40a1a4:	bound  eax,QWORD PTR [ebx+0x66]
  40a1a7:	dec    edx
  40a1a8:	(bad)  
  40a1a9:	ficomp DWORD PTR [ecx+edi*1+0x66433c1a]
  40a1b0:	mov    edx,0xb8a87bc0
  40a1b5:	lock jp 0x40a139
  40a1b8:	xor    esp,DWORD PTR [ebp+0x497dbcfa]
  40a1be:	scas   eax,DWORD PTR es:[edi]
  40a1bf:	mov    edi,0x9b0f9e7f
  40a1c4:	ss dec esi
  40a1c6:	mov    dh,0xc5
  40a1c8:	int    0x8c
  40a1ca:	jle    0x40a233
  40a1cc:	fwait
  40a1cd:	fs push es
  40a1cf:	jae    0x40a1a9
  40a1d1:	fmul   QWORD PTR [ebp+ecx*1-0x4a90e6b6]
  40a1d8:	rcr    DWORD PTR [eax],1
  40a1da:	pop    esi
  40a1db:	or     dl,ch
  40a1dd:	push   ss
  40a1de:	loopne 0x40a1bc
  40a1e0:	and    BYTE PTR [ecx],dh
  40a1e2:	pop    es
  40a1e3:	adc    BYTE PTR [edx-0x7b5a9ded],bl
  40a1e9:	sub    BYTE PTR [esi+0x0],cl
  40a1ec:	stc    
  40a1ed:	lock and esi,DWORD PTR [edi]
  40a1f0:	sbb    eax,0x90b3a922
  40a1f5:	push   ebp
  40a1f6:	sub    cl,BYTE PTR [ebx-0x3a]
  40a1f9:	mov    bh,0x6a
  40a1fb:	fwait
  40a1fc:	mov    ds:0xbc5cc34,eax
  40a201:	jnp    0x40a1c7
  40a203:	push   ds
  40a204:	lahf   
  40a205:	or     esp,DWORD PTR [ecx]
  40a207:	pop    ecx
  40a208:	int    0x4e
  40a20a:	xor    eax,DWORD PTR [edx]
  40a20c:	dec    esp
  40a20d:	jb     0x40a278
  40a20f:	sub    DWORD PTR [edi+eax*1-0x7588009e],0x5e
  40a217:	jnp    0x40a226
  40a219:	dec    esi
  40a21a:	adc    al,0x53
  40a21c:	loope  0x40a248
  40a21e:	jge    0x40a22f
  40a220:	mov    ah,0xa4
  40a222:	inc    esp
  40a223:	icebp  
  40a224:	push   ds
  40a225:	add    DWORD PTR [edx-0x9bf5480],eax
  40a22b:	xlat   BYTE PTR ds:[ebx]
  40a22c:	xor    dh,BYTE PTR [ebx]
  40a22e:	jns    0x40a1bb
  40a230:	sub    eax,0xb0406c00
  40a235:	add    eax,0x17453f12
  40a23a:	aam    0x79
  40a23c:	cmp    DWORD PTR [ebp+0x7218ec0f],edi
  40a242:	outs   dx,BYTE PTR ds:[esi]
  40a243:	retf   
  40a244:	ins    BYTE PTR es:[edi],dx
  40a245:	lock pop ebx
  40a247:	je     0x40a227
  40a249:	mov    al,0x16
  40a24b:	lds    ebx,FWORD PTR [edi]
  40a24d:	scas   eax,DWORD PTR es:[edi]
  40a24e:	mov    ch,0x7c
  40a250:	jmp    0x6475:0x71cf98ae
  40a257:	push   ebp
  40a258:	repz sbb al,0x4a
  40a25b:	adc    BYTE PTR [edx-0x43],dl
  40a25e:	scas   eax,DWORD PTR es:[edi]
  40a25f:	dec    edx
  40a260:	out    dx,al
  40a261:	lmsw   WORD PTR [edx]
  40a264:	neg    BYTE PTR [ebp+ecx*1+0x9aebf7a]
  40a26b:	test   BYTE PTR [edi],0x82
  40a26e:	xor    al,0x12
  40a270:	xchg   BYTE PTR [eax-0x4f],dh
  40a273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a274:	jbe    0x40a2b6
  40a276:	adc    bl,dl
  40a278:	add    ch,bl
  40a27a:	xchg   ecx,eax
  40a27b:	or     BYTE PTR [eax-0x20],bl
  40a27e:	test   BYTE PTR [edx],ah
  40a280:	push   ss
  40a281:	add    eax,0xfdbd629e
  40a286:	gs hlt 
  40a288:	sub    BYTE PTR [esi+0x607849c8],al
  40a28e:	hlt    
  40a28f:	mov    ch,BYTE PTR [esp+edx*8]
  40a292:	test   al,0xb0
  40a294:	gs dec dx
  40a297:	cmp    BYTE PTR [eax+0x2c],bl
  40a29a:	jp     0x40a2cd
  40a29c:	add    cl,bl
  40a29e:	(bad)  
  40a2a0:	dec    esi
  40a2a1:	sahf   
  40a2a2:	mov    edx,0xf3a6d4e1
  40a2a7:	clc    
  40a2a8:	add    DWORD PTR [ebx+0x68d93cf3],esi
  40a2ae:	dec    edi
  40a2af:	xchg   edi,eax
  40a2b0:	sub    al,0x40
  40a2b2:	cmp    ch,dh
  40a2b4:	dec    ecx
  40a2b5:	mov    ah,0x5d
  40a2b7:	jl     0x40a2cc
  40a2b9:	jmp    0xdb559c9c
  40a2be:	cli    
  40a2bf:	jbe    0x40a27c
  40a2c1:	jecxz  0x40a293
  40a2c3:	sbb    ah,0xb9
  40a2c6:	repz aaa 
  40a2c8:	xor    al,0x59
  40a2ca:	(bad)  [ebp+0x482d0008]
  40a2d0:	xor    BYTE PTR [eax+0x6a52a8be],al
  40a2d6:	pop    esi
  40a2d7:	inc    ecx
  40a2d8:	pop    ds
  40a2d9:	(bad)  
  40a2da:	int    0xf0
  40a2dc:	mov    ?,edx
  40a2de:	lock sbb al,0x3
  40a2e1:	cmp    BYTE PTR [eax],cl
  40a2e3:	adc    DWORD PTR fs:[ebp+0x5b41d78a],edi
  40a2ea:	xchg   edx,eax
  40a2eb:	in     al,dx
  40a2ec:	lea    edi,[eax+ecx*2-0x47d7015f]
  40a2f3:	xchg   esi,eax
  40a2f4:	pop    ebp
  40a2f5:	out    dx,al
  40a2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2f7:	ds stc 
  40a2f9:	ror    BYTE PTR [edx+0x65b4706a],cl
  40a2ff:	or     eax,ecx
  40a301:	pop    es
  40a302:	pop    eax
  40a303:	sahf   
  40a304:	xchg   BYTE PTR [ecx+ecx*8-0x7a838b9c],bl
  40a30b:	mov    ds:0x5982f06d,al
  40a310:	call   DWORD PTR [eax-0x7c5e1ee6]
  40a316:	pop    edi
  40a317:	in     al,0xa4
  40a319:	imul   esi,DWORD PTR [edx],0xecad165e
  40a31f:	mov    bh,0x7a
  40a321:	xor    bl,BYTE PTR [eax+0x39d41ec4]
  40a327:	adc    DWORD PTR [edi],edx
  40a329:	cli    
  40a32a:	cs pop ebx
  40a32c:	in     al,0x92
  40a32e:	in     al,0x78
  40a330:	js     0x40a2b5
  40a332:	push   edi
  40a333:	mov    edi,0x9e5e8513
  40a338:	fisub  DWORD PTR [esi-0x60c52f1f]
  40a33e:	sub    esp,0xffffffdc
  40a341:	stos   DWORD PTR es:[edi],eax
  40a342:	sbb    BYTE PTR [ebp-0x43c6542e],al
  40a348:	adc    al,0xd8
  40a34a:	and    DWORD PTR [edi-0x7787a287],ecx
  40a350:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40a352:	adc    BYTE PTR [edi-0x22],ah
  40a355:	icebp  
  40a356:	mov    esp,0x6db8144b
  40a35b:	jmp    0x40a329
  40a35d:	jp     0x40a2fa
  40a35f:	inc    edx
  40a360:	mov    bh,0xcf
  40a362:	add    esi,0x2a7cc032
  40a368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a369:	sub    BYTE PTR [ebx+0x2],0x19
  40a36d:	aas    
  40a36e:	aas    
  40a36f:	jp     0x40a32a
  40a371:	stos   BYTE PTR es:[edi],al
  40a372:	jg     0x40a330
  40a374:	or     bh,BYTE PTR [ebx]
  40a376:	lods   al,BYTE PTR ds:[esi]
  40a377:	xor    eax,0xf7e311d0
  40a37c:	int3   
  40a37d:	aaa    
  40a37e:	arpl   dx,bx
  40a380:	inc    ecx
  40a381:	or     BYTE PTR ds:0xea6aeb01,dl
  40a387:	mov    DWORD PTR [esi+0x288ded05],edi
  40a38d:	sub    ah,BYTE PTR [ecx-0x34e50a07]
  40a393:	cmp    edi,DWORD PTR [eax+0x565321d7]
  40a399:	jecxz  0x40a353
  40a39b:	add    al,0x68
  40a39d:	hlt    
  40a39e:	popa   
  40a39f:	gs jp  0x40a36e
  40a3a2:	push   esi
  40a3a3:	fs out dx,al
  40a3a5:	sti    
  40a3a6:	pop    ebp
  40a3a7:	pushf  
  40a3a8:	stc    
  40a3a9:	inc    edx
  40a3aa:	aam    0x3d
  40a3ac:	fidiv  DWORD PTR [ebx-0x41a4691b]
  40a3b2:	test   eax,0x4b16bfa6
  40a3b7:	jl     0x40a413
  40a3b9:	fisttp DWORD PTR [edi]
  40a3bb:	pop    eax
  40a3bc:	shr    BYTE PTR [eax],cl
  40a3be:	inc    esi
  40a3bf:	jns    0x40a3dc
  40a3c1:	call   0x3a4672d7
  40a3c6:	inc    edi
  40a3c7:	daa    
  40a3c8:	retf   
  40a3c9:	cmp    BYTE PTR [ecx+0x497a82e5],0x4d
  40a3d0:	or     eax,0x85739e5f
  40a3d5:	pop    edi
  40a3d6:	es push ebp
  40a3d8:	fldcw  WORD PTR ds:0x8b6bac11
  40a3de:	and    BYTE PTR [ebp+0x5b],ch
  40a3e1:	sar    DWORD PTR [eax-0x7c4df93c],1
  40a3e7:	adc    eax,0x244bf3ad
  40a3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3ed:	jmp    0x60a310db
  40a3f2:	xlat   BYTE PTR ds:[ebx]
  40a3f3:	mov    eax,ds:0x6e05db76
  40a3f8:	push   0xffffffc7
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434687
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4345f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4345f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4345f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43470f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4345f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4345f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4346fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4346fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4346fb,edx
  40a477:	cmp    DWORD PTR ds:0x4346fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4346b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4349a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4346fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43464b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434693,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434653,0x43464f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434677,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434677,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434703,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4346cb,0x43467b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43464f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43464f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4345f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4345fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4346fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434717
  40a564:	mov    edx,DWORD PTR ds:0x434727
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43463f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43463f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43463f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43463f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43463f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43463f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43463f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43463f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43467f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434637,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43464b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43464b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43464b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43464b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43464b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4346c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43463f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4346bf
  40a648:	add    DWORD PTR ds:0x434713,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43467f,0x434707
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	dec    esi
  40a66d:	pop    ecx
  40a66e:	sahf   
  40a66f:	mov    edx,0x7e7ef2fa
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	fadd   QWORD PTR [edx+0x24]
  40a67b:	(bad)  
  40a67c:	mov    al,ds:0x7d29b8eb
  40a681:	inc    ecx
  40a682:	xchg   esp,eax
  40a683:	(bad)  
  40a684:	retf   
  40a685:	xchg   esi,eax
  40a686:	retf   
  40a687:	and    cl,BYTE PTR [ebx+0x430ac032]
  40a68d:	dec    esp
  40a68e:	push   ss
  40a68f:	inc    edi
  40a690:	inc    esi
  40a691:	addr16 cwde 
  40a693:	js     0x40a66e
  40a695:	std    
  40a696:	call   0x5ecb:0xa3ccc3ff
  40a69d:	jl     0x40a6d8
  40a69f:	(bad)  
  40a6a0:	cmp    bl,dl
  40a6a2:	inc    esp
  40a6a3:	loope  0x40a648
  40a6a5:	outs   dx,BYTE PTR ds:[esi]
  40a6a6:	test   DWORD PTR [edx],esp
  40a6a8:	sti    
  40a6a9:	mov    ebp,0x891756cc
  40a6ae:	xlat   BYTE PTR ds:[ebx]
  40a6af:	sub    dl,BYTE PTR [edi+0x70]
  40a6b2:	and    eax,0x98fcf77d
  40a6b7:	mov    edx,0x6ab06270
  40a6bc:	outs   dx,BYTE PTR ds:[esi]
  40a6bd:	push   ecx
  40a6be:	sub    esi,esi
  40a6c0:	jg     0x40a704
  40a6c2:	jne    0x40a6a7
  40a6c4:	test   WORD PTR [eax+0x0],bp
  40a6c8:	push   eax
  40a6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ca:	dec    ecx
  40a6cb:	cmc    
  40a6cc:	jmp    0x823:0x31ecd41c
  40a6d3:	cwde   
  40a6d4:	test   DWORD PTR [edx+ebx*8-0x2],ecx
  40a6d8:	jmp    0x40a72d
  40a6da:	inc    esp
  40a6db:	xchg   edx,eax
  40a6dc:	inc    ebp
  40a6dd:	sahf   
  40a6de:	fstp   st(5)
  40a6e0:	mov    dl,0xf8
  40a6e2:	xor    eax,ebx
  40a6e4:	outs   dx,DWORD PTR ds:[esi]
  40a6e5:	mov    ebp,0xa30b65cf
  40a6ea:	sbb    eax,0xe745622f
  40a6ef:	nop
  40a6f0:	mov    edi,esp
  40a6f2:	mov    ?,ebp
  40a6f4:	enter  0x6b01,0xb6
  40a6f8:	leave  
  40a6f9:	pop    ebp
  40a6fa:	sub    BYTE PTR [eax+0x4f],ah
  40a6fd:	push   edi
  40a6fe:	fs push es
  40a700:	inc    eax
  40a701:	test   al,0x6b
  40a703:	pop    edi
  40a704:	add    al,0xda
  40a706:	fs inc edi
  40a708:	sub    BYTE PTR [edx-0x260ff07e],cl
  40a70e:	pop    edx
  40a70f:	mov    dh,0xe7
  40a711:	xchg   DWORD PTR [ecx],esi
  40a713:	fistp  QWORD PTR [ebx+0xf13ba6]
  40a719:	jbe    0x40a751
  40a71b:	sub    BYTE PTR ds:[ebp+0x1c381955],ah
  40a722:	hlt    
  40a723:	pop    esi
  40a724:	and    eax,0x222f5ebd
  40a729:	fimul  WORD PTR [ebx+eiz*4-0x29]
  40a72d:	and    al,0x49
  40a72f:	popf   
  40a730:	jp     0x40a7a9
  40a732:	add    DWORD PTR [esp+esi*4+0x4c],ebx
  40a736:	mov    ds:0x90347895,al
  40a73b:	jno    0x40a7ac
  40a73d:	jb     0x40a766
  40a73f:	jle    0x40a7be
  40a741:	leave  
  40a742:	xchg   edx,eax
  40a743:	shr    eax,1
  40a745:	cmp    BYTE PTR [eax-0x2c60f50f],al
  40a74b:	jl     0x40a7b9
  40a74d:	sbb    al,0x88
  40a74f:	aas    
  40a750:	stos   BYTE PTR es:[edi],al
  40a751:	xor    ch,ah
  40a753:	adc    eax,0x2214d8b9
  40a758:	fimul  DWORD PTR [bp-0x6146]
  40a75d:	sub    al,0xbb
  40a75f:	int    0x92
  40a761:	pop    ds
  40a762:	dec    BYTE PTR [ebp+eiz*2-0x5eb832f7]
  40a769:	jle    0x40a7d0
  40a76b:	lds    ecx,FWORD PTR [eax+ebx*4+0xd]
  40a76f:	clc    
  40a770:	outs   dx,BYTE PTR ds:[esi]
  40a771:	dec    edx
  40a772:	xchg   BYTE PTR ds:0x3cefd52b,dh
  40a778:	fwait
  40a779:	push   ebx
  40a77a:	ret    
  40a77b:	into   
  40a77c:	pop    es
  40a77d:	fldcw  WORD PTR ds:0x875aec56
  40a783:	xlat   BYTE PTR ds:[ebx]
  40a784:	sub    al,0x6a
  40a786:	mov    BYTE PTR [edi-0x58],al
  40a789:	daa    
  40a78a:	clc    
  40a78b:	ret    
  40a78c:	inc    esp
  40a78d:	pop    es
  40a78e:	out    dx,al
  40a78f:	adc    BYTE PTR [edi+0x1b],0x1
  40a793:	jne    0x40a76b
  40a795:	pop    es
  40a796:	lods   eax,DWORD PTR ds:[esi]
  40a797:	pop    ecx
  40a798:	mov    ecx,0x380e5180
  40a79d:	popa   
  40a79e:	cmp    bh,BYTE PTR [esi-0x75]
  40a7a1:	adc    DWORD PTR [esi-0x6e],ebx
  40a7a4:	and    edx,DWORD PTR es:[edx]
  40a7a7:	ficomp WORD PTR [edi+0x8]
  40a7aa:	cwde   
  40a7ab:	retf   
  40a7ac:	xchg   edi,eax
  40a7ad:	int    0x67
  40a7af:	jne    0x40a79e
  40a7b1:	retf   
  40a7b2:	retf   0x3812
  40a7b5:	or     al,0x1f
  40a7b7:	mov    cl,0x50
  40a7b9:	mov    ds:0xf3b2c696,eax
  40a7be:	jmp    0xe875:0xd2734bfe
  40a7c5:	jmp    0x40a838
  40a7c7:	pop    esp
  40a7c8:	je     0x40a79b
  40a7ca:	loop   0x40a7bf
  40a7cc:	inc    esp
  40a7cd:	inc    ebx
  40a7ce:	mov    esi,0x6230df03
  40a7d3:	cmp    dl,BYTE PTR [ebx-0x31]
  40a7d6:	sub    bh,BYTE PTR [esp+eax*1+0x1a]
  40a7da:	add    edx,DWORD PTR [esi-0x5f151432]
  40a7e0:	or     ah,BYTE PTR [edx]
  40a7e2:	xor    esp,esi
  40a7e4:	or     bl,ch
  40a7e6:	fdivr  st(0),st
  40a7e8:	mov    ds:0x3ac38415,eax
  40a7ed:	push   esp
  40a7ee:	and    DWORD PTR [ecx+0x6531b2c1],ebx
  40a7f4:	and    al,0x31
  40a7f6:	add    cl,BYTE PTR [ebx+edi*1+0x4e]
  40a7fa:	bound  ecx,QWORD PTR [ecx+0x1f]
  40a7fd:	adc    eax,0xa9deee9a
  40a802:	xchg   edx,eax
  40a803:	or     ah,BYTE PTR [eax+0x5720abed]
  40a809:	and    esp,edi
  40a80b:	adc    eax,0x3388d574
  40a810:	add    al,BYTE PTR [ecx-0x5e]
  40a813:	pushf  
  40a814:	mov    eax,0xd848505f
  40a819:	xchg   ecx,eax
  40a81a:	inc    edx
  40a81b:	jg     0x40a7bf
  40a81d:	aas    
  40a81e:	adc    al,0x65
  40a820:	mov    bl,ah
  40a822:	scas   eax,DWORD PTR es:[edi]
  40a823:	test   al,0x72
  40a825:	push   ebx
  40a826:	pop    ds
  40a827:	out    0x4f,eax
  40a829:	lods   eax,DWORD PTR ds:[esi]
  40a82a:	xor    al,0xb1
  40a82c:	push   ebp
  40a82d:	test   BYTE PTR [eax-0xe],ch
  40a830:	loopne 0x40a87d
  40a832:	rcl    DWORD PTR ds:0x6a5f5d40,1
  40a838:	or     al,0xde
  40a83a:	xor    ebx,edi
  40a83c:	add    eax,0x2b17d866
  40a841:	jl     0x40a8ab
  40a843:	push   ecx
  40a844:	aam    0x95
  40a846:	inc    edi
  40a847:	sub    dl,BYTE PTR [edx+ebx*2-0x7b0cdd69]
  40a84e:	dec    ecx
  40a84f:	lahf   
  40a850:	mov    dh,BYTE PTR [ebx-0x766dc9a3]
  40a856:	sub    dh,cl
  40a858:	pushf  
  40a859:	cmp    ebp,ebx
  40a85b:	jmp    0x40a82b
  40a85d:	and    DWORD PTR [eax-0x42f24904],0xec8449bc
  40a867:	xchg   ebp,eax
  40a868:	sub    al,0xc2
  40a86a:	dec    ebx
  40a86b:	retf   0xb58a
  40a86e:	ins    BYTE PTR es:[edi],dx
  40a86f:	inc    eax
  40a870:	in     eax,dx
  40a871:	js     0x40a84d
  40a873:	xchg   edi,eax
  40a874:	js     0x40a8d1
  40a876:	daa    
  40a877:	push   ebx
  40a878:	mov    eax,0x212fa5b7
  40a87d:	pop    eax
  40a87e:	mov    dl,0x85
  40a880:	dec    ebp
  40a881:	and    DWORD PTR [ecx+0x5d],ebp
  40a884:	pop    esi
  40a885:	or     eax,0x24d9f7d1
  40a88a:	xchg   ecx,eax
  40a88b:	jb     0x40a8d1
  40a88d:	mov    ecx,0x8d4feb17
  40a892:	or     edi,ebx
  40a894:	sbb    al,0xea
  40a896:	push   ebx
  40a897:	les    ebp,FWORD PTR [edx*8+0x7939eb97]
  40a89e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a0:	adc    eax,0x4ee07462
  40a8a5:	gs cwde 
  40a8a7:	addr16 jae 0x40a8ae
  40a8aa:	bound  eax,QWORD PTR [esi+esi*8-0x5c659067]
  40a8b1:	scas   eax,DWORD PTR es:[edi]
  40a8b2:	xor    eax,0x1a204f7
  40a8b7:	xchg   ecx,eax
  40a8b8:	inc    eax
  40a8b9:	push   ebp
  40a8ba:	adc    eax,0xba3c0a0b
  40a8bf:	scas   eax,DWORD PTR es:[edi]
  40a8c0:	xor    DWORD PTR [edi],ebx
  40a8c2:	xchg   esi,eax
  40a8c3:	xchg   esp,eax
  40a8c4:	sub    al,BYTE PTR [esi-0x15]
  40a8c7:	gs scas al,BYTE PTR es:[edi]
  40a8c9:	mov    edi,0x7c72aef9
  40a8ce:	call   FWORD PTR [ebx+0x14672bae]
  40a8d4:	mov    ebx,0xeda4ed32
  40a8d9:	xor    bh,dl
  40a8db:	outs   dx,BYTE PTR ds:[esi]
  40a8dc:	(bad)  
  40a8dd:	loop   0x40a867
  40a8df:	mov    bh,0x95
  40a8e1:	add    BYTE PTR [esi+0x5e68f507],ah
  40a8e7:	aas    
  40a8e8:	or     eax,0x6c4da296
  40a8ed:	mov    dl,0x7a
  40a8ef:	and    esp,edx
  40a8f1:	inc    esi
  40a8f2:	mov    ch,0xa1
  40a8f4:	(bad)  
  40a8f5:	pop    ebp
  40a8f6:	lock fsubr st,st(3)
  40a8f9:	inc    edx
  40a8fa:	cwde   
  40a8fb:	int    0x4e
  40a8fd:	mov    cs,WORD PTR [edi]
  40a8ff:	fld    TBYTE PTR [edx-0x5f52dd17]
  40a905:	test   eax,0x88417703
  40a90a:	mov    eax,ds:0xe407cc53
  40a90f:	loop   0x40a8e3
  40a911:	jmp    0xc5f2:0x3cd90a9
  40a918:	aas    
  40a919:	sub    dh,BYTE PTR [edx-0x23]
  40a91c:	push   esi
  40a91d:	sub    ebp,DWORD PTR [eax+0x3a]
  40a920:	cbw    
  40a922:	xor    ebp,DWORD PTR [eax-0x4612a696]
  40a928:	and    BYTE PTR [edi],bl
  40a92a:	dec    edx
  40a92b:	test   ebp,ebp
  40a92d:	pushf  
  40a92e:	add    al,0xc9
  40a930:	call   0x2b57:0xbdb1408
  40a937:	add    al,0xeb
  40a939:	nop
  40a93a:	jno    0x40a93c
  40a93c:	xor    DWORD PTR [eax-0x82eaaf],0x1e6cf439
  40a946:	add    al,0xd1
  40a948:	mov    dh,0x18
  40a94a:	add    esp,ebx
  40a94c:	mov    eax,0xd5746c33
  40a951:	sub    al,0x46
  40a953:	and    dl,BYTE PTR [eax+eiz*4]
  40a956:	sbb    dl,BYTE PTR [esp+ecx*1+0x5cbad54d]
  40a95d:	dec    eax
  40a95e:	jb     0x40a92f
  40a960:	scas   al,BYTE PTR es:[edi]
  40a961:	dec    ebx
  40a962:	ror    edx,cl
  40a964:	add    BYTE PTR ds:0xe764748a,al
  40a96a:	call   0x8b3f6678
  40a96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a970:	sub    esi,DWORD PTR [ebp+0x7d]
  40a973:	es js  0x40a9bd
  40a976:	(bad)  
  40a977:	xchg   WORD PTR [ecx],sp
  40a97a:	pop    edx
  40a97b:	sub    eax,0x5794e422
  40a980:	mov    esi,DWORD PTR [edi+0x797fb7d7]
  40a986:	sub    ah,al
  40a988:	inc    ebp
  40a989:	inc    esp
  40a98a:	imul   eax,DWORD PTR [ebx+0x32],0xffffffa3
  40a98e:	sahf   
  40a98f:	push   edi
  40a990:	pushf  
  40a991:	pusha  
  40a992:	and    eax,0xd91ca794
  40a997:	adc    eax,DWORD PTR [ebx]
  40a999:	xchg   ecx,eax
  40a99a:	das    
  40a99b:	push   es
  40a99c:	xor    esi,DWORD PTR [eax-0x17816209]
  40a9a2:	jae    0x40a9d4
  40a9a4:	shl    DWORD PTR [esi],1
  40a9a6:	rcr    DWORD PTR [edi+0x75],1
  40a9a9:	inc    eax
  40a9aa:	mov    DWORD PTR [ecx+0x23f45146],esp
  40a9b0:	push   esi
  40a9b1:	addr16 pop eax
  40a9b3:	ss pop edi
  40a9b5:	jg     0x40a97e
  40a9b7:	dec    esi
  40a9b8:	lea    edi,[esi+0x1a]
  40a9bb:	xlat   BYTE PTR ds:[ebx]
  40a9bc:	sub    al,0xe6
  40a9be:	aam    0xf8
  40a9c0:	xor    ebx,edx
  40a9c2:	jae    0x40aa1a
  40a9c4:	dec    ecx
  40a9c5:	mov    ebx,0xe7974df7
  40a9ca:	jae    0x40aa4a
  40a9cc:	leave  
  40a9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9ce:	mov    ebp,0x231d6a48
  40a9d3:	mov    ebx,DWORD PTR [eax]
  40a9d5:	mov    eax,0x7806084e
  40a9da:	std    
  40a9db:	pop    esi
  40a9dc:	cli    
  40a9dd:	lods   al,BYTE PTR ds:[esi]
  40a9de:	sti    
  40a9df:	div    DWORD PTR [esi-0x1b439d4e]
  40a9e5:	repnz test eax,0x3c8fe70f
  40a9ec:	mov    bl,0xf
  40a9ee:	lock nop
  40a9f0:	dec    ecx
  40a9f1:	addr16 pushf 
  40a9f3:	jo     0x40aa6a
  40a9f5:	clc    
  40a9f6:	jge    0x40a98d
  40a9f8:	mov    ds:0x27f62b95,eax
  40a9fd:	mov    al,0x6c
  40a9ff:	cmp    eax,0x6876fcc8
  40aa04:	mov    edx,0xeb000a95
  40aa09:	inc    edx
  40aa0a:	loopne 0x40a9b5
  40aa0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa0d:	lock sub edx,DWORD PTR [eax]
  40aa10:	std    
  40aa11:	cmp    al,0xed
  40aa13:	icebp  
  40aa14:	push   es
  40aa15:	sar    DWORD PTR [ebx+0x32],1
  40aa18:	in     eax,dx
  40aa19:	pop    edi
  40aa1a:	nop
  40aa1b:	loope  0x40a9fb
  40aa1d:	mov    eax,ds:0x3f0fe74d
  40aa22:	xor    edx,DWORD PTR [ecx]
  40aa24:	push   ss
  40aa25:	cmp    BYTE PTR [esi],dh
  40aa27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa28:	jle    0x40aa6d
  40aa2a:	hlt    
  40aa2b:	repz lds eax,FWORD PTR [ebx]
  40aa2e:	in     eax,dx
  40aa2f:	cli    
  40aa30:	xchg   edx,eax
  40aa31:	mov    edx,0xd598632f
  40aa36:	mov    al,ds:0x381d9d49
  40aa3b:	clc    
  40aa3c:	call   0xf779:0xfe65c497
  40aa43:	sbb    BYTE PTR ds:0xcbdbb44f,bh
  40aa49:	je     0x40aac0
  40aa4b:	add    edi,eax
  40aa4d:	ins    DWORD PTR es:[edi],dx
  40aa4e:	pop    esp
  40aa4f:	mov    eax,ds:0xbe3bdf6
  40aa54:	mov    ch,0x76
  40aa56:	fst    DWORD PTR [ebp-0x14bb20f0]
  40aa5c:	dec    ebx
  40aa5d:	lea    ecx,[ecx-0x2532ff39]
  40aa63:	ins    BYTE PTR es:[edi],dx
  40aa64:	pop    ss
  40aa65:	std    
  40aa66:	mov    esi,0x91435d43
  40aa6b:	out    0x8c,eax
  40aa6d:	call   0x94b65fe6
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x434653,0x43467f
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4345f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4346fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43470b
  40aaa1:	mov    DWORD PTR ds:0x4346fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4346bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	ins    DWORD PTR es:[edi],dx
  40aacb:	dec    ebx
  40aacc:	imul   edx,DWORD PTR [esp+edi*8-0x2],0x7e
  40aad1:	jle    0x40ab43
  40aad3:	jns    0x40ab53
  40aad5:	jle    0x40ab3b
  40aad7:	dec    ebx
  40aad8:	loopne 0x40ab09
  40aada:	in     al,dx
  40aadb:	push   0x73
  40aadd:	test   eax,0xf8e2cc48
  40aae2:	or     DWORD PTR [ecx],ebx
  40aae4:	fnsave [esi-0x49da4979]
  40aaea:	jp     0x40aaf2
  40aaec:	fidivr WORD PTR [ecx]
  40aaee:	mov    ecx,0x56310457
  40aaf3:	pop    ebx
  40aaf4:	retf   0xd8e7
  40aaf7:	sub    dh,dl
  40aaf9:	push   esi
  40aafa:	scas   al,BYTE PTR es:[edi]
  40aafb:	clc    
  40aafc:	inc    edi
  40aafd:	mov    DWORD PTR [edx],edx
  40aaff:	dec    esi
  40ab00:	int3   
  40ab01:	xchg   edx,eax
  40ab02:	shl    eax,0x47
  40ab05:	in     eax,dx
  40ab06:	inc    edx
  40ab07:	repz retw 
  40ab0a:	cli    
  40ab0b:	dec    esi
  40ab0c:	jb     0x40ab20
  40ab0e:	inc    ebx
  40ab0f:	push   ds
  40ab10:	xchg   esp,eax
  40ab11:	outs   dx,BYTE PTR ss:[esi]
  40ab13:	bound  ebp,QWORD PTR [ebx]
  40ab15:	fs add eax,0x71422fd8
  40ab1b:	adc    eax,0xdca979b6
  40ab20:	repnz shr DWORD PTR [eax],cl
  40ab23:	leave  
  40ab24:	jmp    0xfeaa1a90
  40ab29:	test   DWORD PTR [eax+0x6e],0xc4466c4e
  40ab30:	dec    ecx
  40ab31:	out    0xeb,eax
  40ab33:	pop    eax
  40ab34:	fild   WORD PTR [ebp-0x7b291f8f]
  40ab3a:	mov    bl,0x89
  40ab3c:	outs   dx,BYTE PTR gs:[esi]
  40ab3e:	fst    DWORD PTR [ebx]
  40ab40:	test   bl,0xc
  40ab43:	retf   
  40ab44:	or     edx,DWORD PTR [esi]
  40ab46:	iret   
  40ab47:	mov    edi,0x389ff78d
  40ab4c:	mov    ds:0xaaf77bef,eax
  40ab51:	out    0x28,eax
  40ab53:	std    
  40ab54:	add    eax,0x1b9348a3
  40ab59:	dec    eax
  40ab5a:	cmp    eax,0x67185f39
  40ab5f:	pop    eax
  40ab60:	add    dh,al
  40ab62:	dec    edi
  40ab63:	test   cl,bl
  40ab65:	mov    WORD PTR [edi],ds
  40ab67:	hlt    
  40ab68:	xlat   BYTE PTR ds:[ebx]
  40ab69:	nop
  40ab6a:	mov    edx,DWORD PTR [esi+0x52728479]
  40ab70:	xchg   edx,eax
  40ab71:	cli    
  40ab72:	adc    BYTE PTR [eax],dl
  40ab74:	scas   eax,DWORD PTR es:[edi]
  40ab75:	fld    TBYTE PTR [edi-0x28]
  40ab78:	jg     0x40ab44
  40ab7a:	xor    BYTE PTR [ebp-0x8b4bb41],bh
  40ab80:	pushf  
  40ab81:	xchg   ecx,eax
  40ab82:	xor    BYTE PTR [eax],dh
  40ab84:	shr    BYTE PTR ds:0xd8c3d301,cl
  40ab8a:	sar    DWORD PTR [eax+0x4f],cl
  40ab8d:	dec    edi
  40ab8e:	test   eax,0x9505bde6
  40ab93:	sbb    DWORD PTR [edi+0x44],edx
  40ab96:	test   al,0x4b
  40ab98:	adc    ebx,ebp
  40ab9a:	push   edi
  40ab9b:	mov    edi,0x2e65654e
  40aba0:	inc    eax
  40aba1:	sar    ch,0xc1
  40aba4:	clc    
  40aba5:	and    eax,0x8f60a20e
  40abaa:	inc    ecx
  40abab:	lock dec ecx
  40abad:	outs   dx,DWORD PTR ds:[esi]
  40abae:	mov    ebp,0x26c4a52c
  40abb3:	push   es
  40abb4:	adc    bh,BYTE PTR [esi+0x4f861bea]
  40abba:	pop    edx
  40abbb:	mov    ebp,0x49da2586
  40abc0:	pop    ecx
  40abc1:	dec    esi
  40abc2:	inc    esp
  40abc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc4:	ret    
  40abc5:	jo     0x40ab70
  40abc7:	retf   0x4319
  40abca:	xchg   BYTE PTR [ebx+0x70ea829a],ch
  40abd0:	jge    0x40abec
  40abd2:	and    eax,ebp
  40abd4:	clc    
  40abd5:	inc    esp
  40abd6:	stos   BYTE PTR es:[edi],al
  40abd7:	(bad)
  40abda:	ficomp DWORD PTR [edi-0x5e91fb92]
  40abe0:	jmp    0x40abe3
  40abe2:	lds    edi,FWORD PTR [esi]
  40abe4:	xchg   esi,eax
  40abe5:	push   cs
  40abe6:	fcomp  QWORD PTR [ebp-0x6e]
  40abe9:	xchg   edi,eax
  40abea:	dec    esp
  40abeb:	fucomi st,st(3)
  40abed:	jl     0x40ac3f
  40abef:	call   0x5571:0x3275d8c5
  40abf6:	mov    BYTE PTR [ecx+0x1],al
  40abf9:	mov    ds:0xcfdb70f2,eax
  40abfe:	mov    ebp,0x1280dd72
  40ac03:	ins    DWORD PTR es:[edi],dx
  40ac04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac05:	les    edx,FWORD PTR [edx+0x64122565]
  40ac0b:	pop    ss
  40ac0c:	outs   dx,BYTE PTR ds:[esi]
  40ac0d:	xchg   edi,eax
  40ac0e:	mov    al,ds:0xa1e2d5d1
  40ac13:	add    ah,BYTE PTR [eax]
  40ac15:	rcr    BYTE PTR [edx+0x47],cl
  40ac18:	push   esp
  40ac19:	dec    ebx
  40ac1a:	xchg   DWORD PTR [ecx],ecx
  40ac1c:	inc    edi
  40ac1d:	jmp    0xab290569
  40ac22:	das    
  40ac23:	test   al,ah
  40ac25:	cmp    DWORD PTR [edi+ecx*2],esp
  40ac28:	add    dh,BYTE PTR [ecx+ebx*8-0xc0f927e]
  40ac2f:	mov    WORD PTR [esi-0x34],fs
  40ac32:	push   es
  40ac33:	aas    
  40ac34:	inc    esp
  40ac35:	mov    ?,edi
  40ac37:	icebp  
  40ac38:	xlat   BYTE PTR ds:[ebx]
  40ac39:	int3   
  40ac3a:	xchg   edx,eax
  40ac3b:	ret    
  40ac3c:	imul   BYTE PTR [esi]
  40ac3e:	fcmovnu st,st(7)
  40ac40:	dec    ecx
  40ac41:	dec    ebx
  40ac42:	arpl   WORD PTR [ecx+eax*4+0x10],bx
  40ac46:	pop    ecx
  40ac47:	imul   DWORD PTR [edx-0x26]
  40ac4a:	mov    al,ds:0x81b4213
  40ac4f:	or     DWORD PTR [ebx],esi
  40ac51:	fs mov edi,0x466450ea
  40ac57:	push   0x3d
  40ac59:	int    0x9d
  40ac5b:	mov    ecx,edx
  40ac5d:	pop    edi
  40ac5e:	leave  
  40ac5f:	imul   ebp,edi,0xac6f8aa3
  40ac65:	xor    DWORD PTR [ecx+edi*1-0x9],ebp
  40ac69:	frstor [edi]
  40ac6b:	sub    BYTE PTR [edi-0x3b],0xe3
  40ac6f:	mov    esp,DWORD PTR [esi-0x3b26dd79]
  40ac75:	dec    edx
  40ac76:	imul   esi,DWORD PTR [ecx+esi*8-0x61],0x7cd8eaf1
  40ac7e:	add    esi,esi
  40ac80:	retf   
  40ac81:	jbe    0x40acf3
  40ac83:	add    bl,al
  40ac85:	mov    bh,BYTE PTR [edx+ebx*8]
  40ac88:	xor    edx,DWORD PTR [ebx-0x66]
  40ac8b:	iret   
  40ac8c:	adc    eax,0x2fa378f7
  40ac91:	mov    ds:0x2e0eb44,eax
  40ac96:	xchg   edi,eax
  40ac97:	adc    BYTE PTR [edx],bl
  40ac99:	or     al,0x7c
  40ac9b:	xor    al,al
  40ac9d:	cld    
  40ac9e:	xchg   bl,dh
  40aca0:	sub    al,0x12
  40aca2:	xchg   esi,eax
  40aca3:	mov    ds,WORD PTR [edi-0x4bf2410]
  40aca9:	loop   0x40ac83
  40acab:	aas    
  40acac:	mov    esp,0x96fc13d5
  40acb1:	cs js  0x40ac84
  40acb4:	js     0x40ad01
  40acb6:	jne    0x40acfb
  40acb8:	sti    
  40acb9:	lods   al,BYTE PTR ds:[esi]
  40acba:	jge    0x40ac5c
  40acbc:	cmp    ecx,ebx
  40acbe:	fnstenv [edi+0x19]
  40acc1:	add    ah,BYTE PTR [esi]
  40acc3:	jbe    0x40aced
  40acc5:	sub    ebx,DWORD PTR [esp+ecx*4]
  40acc8:	movntq QWORD PTR [esp+edi*2-0x7c3c799b],mm5
  40acd0:	sbb    bl,bl
  40acd2:	cld    
  40acd3:	jo     0x40ad50
  40acd5:	add    eax,0xcddf877d
  40acda:	int3   
  40acdb:	popa   
  40acdc:	nop
  40acdd:	lds    edi,FWORD PTR [ebx]
  40acdf:	ret    
  40ace0:	inc    ebp
  40ace1:	mov    eax,0x4b9e2b0e
  40ace6:	jmp    0x40aca9
  40ace8:	repz pop edi
  40acea:	sbb    DWORD PTR [edi],0xffffffd3
  40aced:	xchg   BYTE PTR [edx+0x72e025ff],ch
  40acf3:	adc    al,0xe3
  40acf5:	pop    esp
  40acf6:	inc    ecx
  40acf7:	xor    al,0x89
  40acf9:	fnstsw WORD PTR [ebp+0x4d]
  40acfc:	repz mov ebp,0x34ec0b1e
  40ad02:	imul   BYTE PTR [esi+0x11628443]
  40ad08:	mov    dh,0x17
  40ad0a:	(bad)  
  40ad0b:	push   ds
  40ad0c:	or     eax,0xfb5fcd0f
  40ad11:	cmp    bl,BYTE PTR [ecx+0x3626b2d8]
  40ad17:	dec    esp
  40ad18:	jbe    0x40ad47
  40ad1a:	xor    DWORD PTR [edx-0x418c7cca],ebx
  40ad20:	mov    ds:0xd06d767b,eax
  40ad25:	out    0xda,al
  40ad27:	std    
  40ad28:	retf   
  40ad29:	in     al,dx
  40ad2a:	dec    ecx
  40ad2b:	arpl   cx,ax
  40ad2d:	add    BYTE PTR [ecx+0x20d13932],0x67
  40ad34:	jmp    0x80be:0xcafcfff2
  40ad3b:	in     eax,dx
  40ad3c:	jb     0x40ad45
  40ad3e:	cwde   
  40ad3f:	loop   0x40ad9c
  40ad41:	repnz outs dx,BYTE PTR ds:[esi]
  40ad43:	jl     0x40acdc
  40ad45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad46:	dec    ebp
  40ad47:	jge    0x40ad62
  40ad49:	ror    ah,1
  40ad4b:	in     eax,dx
  40ad4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad4d:	sub    BYTE PTR [edi-0x2],ch
  40ad50:	cmp    eax,0x39e116d
  40ad55:	lods   al,BYTE PTR ds:[esi]
  40ad56:	xlat   BYTE PTR ds:[ebx]
  40ad57:	or     dh,BYTE PTR [ebx]
  40ad59:	mov    WORD PTR [esi-0x30],ss
  40ad5c:	or     edx,DWORD PTR [edx+0x69]
  40ad5f:	and    al,0xc3
  40ad61:	lods   eax,DWORD PTR ds:[esi]
  40ad62:	push   ss
  40ad63:	test   DWORD PTR [ecx],esi
  40ad65:	fcom   DWORD PTR [edx]
  40ad67:	xor    BYTE PTR [esi-0x22],bh
  40ad6a:	mov    bl,0x99
  40ad6c:	mov    WORD PTR [eax],cs
  40ad6e:	shr    DWORD PTR [eax+0x70],cl
  40ad71:	jmp    0xedab:0xd851e7e4
  40ad78:	daa    
  40ad79:	cs inc edi
  40ad7b:	and    al,0xfb
  40ad7d:	inc    ebx
  40ad7e:	mov    esi,0x1e508888
  40ad83:	lods   al,BYTE PTR ds:[esi]
  40ad84:	int3   
  40ad85:	jmp    0x40add1
  40ad87:	jo     0x40adaa
  40ad89:	in     eax,dx
  40ad8a:	mov    al,ds:0xe9fc4bc3
  40ad8f:	jnp    0x40adfe
  40ad91:	xchg   cl,ch
  40ad93:	dec    DWORD PTR [ecx+edx*8]
  40ad96:	ins    BYTE PTR es:[edi],dx
  40ad97:	or     al,0xfe
  40ad99:	std    
  40ad9a:	and    eax,0x1029fca1
  40ad9f:	rol    eax,0xc5
  40ada2:	aaa    
  40ada3:	add    BYTE PTR [edx],bl
  40ada5:	stos   DWORD PTR es:[edi],eax
  40ada6:	jg     0x40ad96
  40ada8:	int3   
  40ada9:	xchg   ebx,eax
  40adaa:	mov    ch,0x69
  40adac:	gs stos DWORD PTR es:[edi],eax
  40adae:	sbb    BYTE PTR [edi-0x4e],ch
  40adb1:	pop    eax
  40adb2:	out    0xa5,al
  40adb4:	clc    
  40adb5:	add    BYTE PTR [edi-0x32],bh
  40adb8:	out    0xb,eax
  40adba:	jge    0x40adc0
  40adbc:	mov    esp,0xf186fddc
  40adc1:	jl     0x40ae02
  40adc3:	ins    DWORD PTR es:[edi],dx
  40adc4:	mov    edx,0x8b658f4f
  40adc9:	xchg   dx,ax
  40adcb:	adc    cl,BYTE PTR [ecx+0x1e]
  40adce:	outs   dx,DWORD PTR ds:[esi]
  40adcf:	mov    ebx,DWORD PTR [ebx+0xc]
  40add2:	xchg   ecx,eax
  40add3:	sbb    eax,0xd18c8909
  40add8:	add    cl,BYTE PTR [esi]
  40adda:	mov    edi,0x3f3c4089
  40addf:	dec    esi
  40ade0:	outs   dx,BYTE PTR ds:[esi]
  40ade1:	push   ebp
  40ade2:	jecxz  0x40ad9c
  40ade4:	add    bl,bl
  40ade6:	rcl    BYTE PTR ds:0xe21ad7ec,cl
  40adec:	push   cs
  40aded:	add    ah,BYTE PTR [esi+edx*1+0x1766ca2a]
  40adf4:	sub    dh,BYTE PTR [edi-0x7d7e22f9]
  40adfa:	pushf  
  40adfb:	test   ah,ah
  40adfd:	repz aam 0x19
  40ae00:	ja     0x40ae6a
  40ae02:	add    ah,BYTE PTR [ebp+0x56]
  40ae05:	int3   
  40ae06:	mov    ebp,0xcb18a0d2
  40ae0b:	and    edi,eax
  40ae0d:	jmp    0xd00bda70
  40ae12:	dec    ebx
  40ae13:	and    DWORD PTR [ebx-0x6f91da39],ecx
  40ae19:	push   cs
  40ae1a:	xchg   esp,eax
  40ae1b:	adc    ah,BYTE PTR [ebp-0x3d]
  40ae1e:	lds    eax,FWORD PTR [edx+0x397e9ce3]
  40ae24:	sbb    dh,BYTE PTR [edi+ecx*4]
  40ae27:	mov    esp,0x19765a3d
  40ae2c:	add    al,0xe4
  40ae2e:	and    eax,0xd93fb1e3
  40ae33:	jecxz  0x40ae1e
  40ae35:	sub    bl,BYTE PTR [esi-0x5ddf9ac1]
  40ae3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae3c:	sbb    ecx,esi
  40ae3e:	ficom  DWORD PTR [ebx-0x1539138b]
  40ae44:	adc    BYTE PTR [esi-0x5],bh
  40ae47:	jns    0x40ae23
  40ae49:	add    al,0x68
  40ae4b:	push   eax
  40ae4c:	xor    edi,ebp
  40ae4e:	push   cs
  40ae4f:	mov    edx,ss
  40ae51:	xor    DWORD PTR [eax+ebp*8-0x3f5375d1],ebx
  40ae58:	or     ebx,edi
  40ae5a:	xor    DWORD PTR [ebx-0x2ddbd789],ebp
  40ae60:	cld    
  40ae61:	dec    esi
  40ae62:	cmp    eax,0xba09ba26
  40ae67:	outs   dx,DWORD PTR ds:[esi]
  40ae68:	jecxz  0x40ae53
  40ae6a:	cld    
  40ae6b:	cmp    BYTE PTR [ecx-0x3064eb12],ah
  40ae71:	jp     0x40aeea
  40ae73:	test   eax,0x88239d57
  40ae78:	xchg   ebx,eax
  40ae79:	push   edx
  40ae7a:	cwde   
  40ae7b:	loopne 0x40ae3f
  40ae7d:	cdq    
  40ae7e:	pushf  
  40ae7f:	adc    esp,DWORD PTR [eax+edx*2-0x32239d3f]
  40ae86:	sbb    eax,DWORD PTR [esi]
  40ae88:	mov    esi,fs
  40ae8a:	rol    BYTE PTR [edi-0x451e695a],1
  40ae90:	icebp  
  40ae91:	pop    es
  40ae92:	pusha  
  40ae93:	inc    ecx
  40ae94:	mov    ah,0x48
  40ae96:	iret   
  40ae97:	out    0x1a,eax
  40ae99:	sub    eax,0x6a8bf6dd
  40ae9e:	loope  0x40aea8
  40aea0:	sbb    al,0xde
  40aea2:	push   edi
  40aea3:	dec    eax
  40aea4:	(bad)  
  40aea5:	xchg   ebp,eax
  40aea6:	into   
  40aea7:	ret    0x9110
  40aeaa:	sub    esi,DWORD PTR [ecx+0x39]
  40aead:	inc    ecx
  40aeae:	hlt    
  40aeaf:	cmp    bl,BYTE PTR [edi-0x4]
  40aeb2:	pop    ebp
  40aeb3:	int    0x48
  40aeb5:	dec    ebp
  40aeb6:	fdivr  DWORD PTR [ebp+0x64c7be5d]
  40aebc:	aaa    
  40aebd:	pop    edi
  40aebe:	push   0x34
  40aec0:	xchg   ch,dh
  40aec2:	cmp    DWORD PTR [edx-0x75],0xfffffff9
  40aec6:	xchg   esp,eax
  40aec7:	push   cs
  40aec8:	adc    ebx,DWORD PTR [ebx]
  40aeca:	xchg   ebp,eax
  40aecb:	ins    DWORD PTR es:[edi],dx
  40aecc:	cmp    al,0xd5
  40aece:	bound  ecx,QWORD PTR [edx]
  40aed0:	add    edx,ecx
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x434653
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434647,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43463f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4346ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43468f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4345ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43463b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434647,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434647
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434647,ebx
  40af4d:	cmp    DWORD PTR ds:0x434647,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434647,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434677
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43468b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434713,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434713
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434713,ebx
  40afaa:	cmp    DWORD PTR ds:0x434713,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434713,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	xor    BYTE PTR [edx-0x50951bb],0x7e
  40b002:	jle    0x40b074
  40b004:	jns    0x40b084
  40b006:	jle    0x40afa1
  40b008:	repnz mov ss,WORD PTR [edx-0x3a3cfea8]
  40b00f:	cmp    edi,DWORD PTR [edi+0x28]
  40b012:	dec    esp
  40b013:	push   es
  40b014:	mov    al,0x48
  40b016:	bound  esp,QWORD PTR [ebx]
  40b018:	neg    BYTE PTR [eax]
  40b01a:	out    0xb4,al
  40b01c:	add    BYTE PTR [eax],0x82
  40b01f:	arpl   WORD PTR [esi-0x21310fb],sp
  40b025:	dec    edi
  40b026:	inc    esi
  40b027:	push   ss
  40b028:	mov    esp,0xd26b2fb0
  40b02d:	loop   0x40b024
  40b02f:	sti    
  40b030:	jno    0x40b05b
  40b032:	ds push ebp
  40b034:	outs   dx,BYTE PTR ds:[esi]
  40b035:	in     eax,dx
  40b036:	ret    0x85e6
  40b039:	sbb    ecx,DWORD PTR [eax]
  40b03b:	sbb    al,0x5a
  40b03d:	mov    ds:0x77fcae40,al
  40b042:	push   es
  40b043:	es pusha 
  40b045:	mov    bh,0xf1
  40b047:	mov    cs,eax
  40b049:	dec    edx
  40b04a:	js     0x40b062
  40b04c:	and    cl,BYTE PTR [edi-0x5c]
  40b04f:	outs   dx,DWORD PTR ds:[esi]
  40b050:	push   esi
  40b051:	dec    ebx
  40b052:	clc    
  40b053:	add    BYTE PTR [edi+0x1c3c7d67],ch
  40b059:	mov    DWORD PTR [ebx],edi
  40b05b:	sub    al,0x26
  40b05d:	lds    ebx,FWORD PTR [edx-0x4d]
  40b060:	push   cs
  40b061:	(bad)  
  40b062:	cwde   
  40b063:	pushf  
  40b064:	mov    WORD PTR [ebx],gs
  40b066:	dec    ecx
  40b067:	xor    BYTE PTR [edx-0x7],al
  40b06a:	pusha  
  40b06b:	mov    dh,0x2d
  40b06d:	xor    ecx,edi
  40b06f:	pop    esp
  40b070:	push   ebx
  40b071:	xor    dh,BYTE PTR [esi]
  40b073:	sar    BYTE PTR ds:0x17a68231,cl
  40b079:	ret    0x160d
  40b07c:	mov    eax,ds:0x5e0bcec1
  40b081:	adc    BYTE PTR [edx+0x75],al
  40b084:	xchg   ebx,eax
  40b085:	cli    
  40b086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b087:	outs   dx,BYTE PTR ds:[esi]
  40b088:	pop    edi
  40b089:	cdq    
  40b08a:	pop    ebp
  40b08b:	adc    ebx,ebp
  40b08d:	dec    ebx
  40b08e:	pop    es
  40b08f:	dec    ebx
  40b090:	push   eax
  40b091:	pop    ebp
  40b092:	sub    dl,dl
  40b094:	dec    esp
  40b095:	lods   al,BYTE PTR ds:[esi]
  40b096:	mov    ch,0x69
  40b098:	pop    ebp
  40b099:	sbb    BYTE PTR [ecx-0x71],0xc1
  40b09d:	popf   
  40b09e:	sbb    eax,0xf2bb88d6
  40b0a3:	sbb    eax,0x9fa4a5af
  40b0a8:	dec    eax
  40b0a9:	ins    BYTE PTR es:[edi],dx
  40b0aa:	leave  
  40b0ab:	test   ebx,0x9365696d
  40b0b1:	and    dh,BYTE PTR [ebp-0x60]
  40b0b4:	xor    BYTE PTR [ecx+edx*2-0xb],0xc5
  40b0b9:	mov    edi,0x7f61f53e
  40b0be:	lods   eax,DWORD PTR ds:[esi]
  40b0bf:	fadd   st,st(5)
  40b0c1:	or     BYTE PTR [ebp+0x5fe436cc],cl
  40b0c7:	mov    eax,ds:0x26ea6422
  40b0cc:	les    esi,FWORD PTR [edi]
  40b0ce:	pop    esp
  40b0cf:	out    0xf7,eax
  40b0d1:	imul   esp,DWORD PTR [edi-0x247a1942],0xffffffc2
  40b0d8:	clc    
  40b0d9:	loope  0x40b074
  40b0db:	ds xchg esi,eax
  40b0dd:	jge    0x40b0d6
  40b0df:	ss scas eax,DWORD PTR es:[edi]
  40b0e1:	adc    DWORD PTR [edi+0x7f],0xfffffff0
  40b0e5:	mov    ss,WORD PTR [ebx+0x31]
  40b0e8:	jmp    0xd2f0:0xebef828f
  40b0ef:	inc    esp
  40b0f0:	jbe    0x40b073
  40b0f2:	or     DWORD PTR [edx+0x468100ca],ebp
  40b0f8:	arpl   WORD PTR [eax],bx
  40b0fa:	and    DWORD PTR [eax+0x72],esp
  40b0fd:	mov    ds:0x95278e52,al
  40b102:	inc    esi
  40b103:	dec    edx
  40b104:	push   edi
  40b105:	inc    eax
  40b106:	(bad)  
  40b107:	pusha  
  40b108:	xchg   ecx,eax
  40b109:	or     eax,0xa0b7f671
  40b10e:	je     0x40b0b2
  40b110:	mov    ebx,0x6e67961a
  40b115:	pop    ecx
  40b116:	sub    eax,ebx
  40b118:	pop    es
  40b119:	inc    edi
  40b11a:	(bad)  
  40b11b:	outs   dx,BYTE PTR ds:[esi]
  40b11c:	and    eax,0xdad42b5f
  40b121:	xor    bh,BYTE PTR [ebx]
  40b123:	mov    dh,0x11
  40b125:	mov    eax,0x6d90cc43
  40b12a:	mov    ds:0xa3fb36ac,eax
  40b12f:	(bad)  
  40b131:	pop    ss
  40b132:	fld    QWORD PTR [edx+edx*4]
  40b135:	jle    0x40b112
  40b137:	loope  0x40b0ed
  40b139:	pop    ss
  40b13a:	addr16 inc edi
  40b13c:	test   eax,0xc02926ad
  40b141:	push   0x13e90829
  40b146:	xchg   BYTE PTR [edi+0x64],ah
  40b149:	pop    edx
  40b14a:	fs or  eax,0x58929777
  40b150:	rcl    DWORD PTR [ebp-0x23c4e968],1
  40b156:	repnz test DWORD PTR [esi+eax*1],ebp
  40b15a:	mov    edi,0x15d2d67a
  40b15f:	sbb    bl,BYTE PTR [ecx+0x27]
  40b162:	mov    DWORD PTR [edi+0x19],edx
  40b165:	pop    eax
  40b166:	test   eax,0xbf325a83
  40b16b:	leave  
  40b16c:	jnp    0x40b1a7
  40b16e:	jo     0x40b175
  40b170:	btc    DWORD PTR [esp+eax*1+0x15],ebx
  40b175:	in     eax,0x6a
  40b177:	sub    ch,BYTE PTR ds:0xc574abf0
  40b17d:	stc    
  40b17e:	jmp    0x40b144
  40b180:	test   eax,0x278ab7d7
  40b185:	add    edi,DWORD PTR [ebx]
  40b187:	pushf  
  40b188:	pop    es
  40b189:	scas   al,BYTE PTR es:[edi]
  40b18a:	shl    DWORD PTR [edi+0x236d7e2a],cl
  40b190:	mov    al,0x97
  40b192:	add    cl,BYTE PTR [edi]
  40b194:	es cwde 
  40b196:	sub    BYTE PTR [eax],al
  40b198:	aam    0x5e
  40b19a:	mov    esp,0x3259399f
  40b19f:	inc    ebp
  40b1a0:	aaa    
  40b1a1:	xor    eax,DWORD PTR [ecx]
  40b1a3:	mov    esi,0xabb9323f
  40b1a8:	scas   al,BYTE PTR es:[edi]
  40b1a9:	jp     0x40b1c7
  40b1ab:	out    0xb9,al
  40b1ad:	xor    al,0xce
  40b1af:	retf   0x5fbe
  40b1b2:	dec    edx
  40b1b3:	push   edi
  40b1b4:	ja     0x40b18d
  40b1b6:	pop    edx
  40b1b7:	ficomp DWORD PTR [edi]
  40b1b9:	movups xmm6,XMMWORD PTR [edi]
  40b1bc:	ja     0x40b196
  40b1be:	push   esi
  40b1bf:	push   esp
  40b1c0:	jecxz  0x40b174
  40b1c2:	aad    0x1f
  40b1c4:	ret    0x7e94
  40b1c7:	shr    edi,0xb4
  40b1ca:	into   
  40b1cb:	stos   DWORD PTR es:[edi],eax
  40b1cc:	dec    edx
  40b1cd:	sbb    DWORD PTR [ebp+0x77],ecx
  40b1d0:	dec    esi
  40b1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d2:	lea    edx,[esi]
  40b1d4:	stos   BYTE PTR es:[edi],al
  40b1d5:	inc    esi
  40b1d6:	lods   eax,DWORD PTR ds:[esi]
  40b1d7:	mov    ah,0x44
  40b1d9:	xchg   edx,eax
  40b1da:	(bad)  
  40b1db:	xor    dl,BYTE PTR [edx-0x2a]
  40b1de:	lock lods al,BYTE PTR ds:[esi]
  40b1e0:	jb     0x40b243
  40b1e2:	jl     0x40b1cc
  40b1e4:	loopne 0x40b1e9
  40b1e6:	push   ss
  40b1e7:	lods   eax,DWORD PTR ds:[esi]
  40b1e8:	add    al,0xea
  40b1ea:	cli    
  40b1eb:	or     dh,BYTE PTR [eax-0x53]
  40b1ee:	out    0xfa,eax
  40b1f0:	jp     0x40b19a
  40b1f2:	add    eax,0x51df1ddd
  40b1f7:	dec    ebp
  40b1f8:	mov    al,0xc8
  40b1fa:	xchg   edi,eax
  40b1fb:	or     al,0x8f
  40b1fd:	mov    bl,0xf6
  40b1ff:	or     eax,0x37b8aac8
  40b204:	fst    st(7)
  40b206:	jno    0x40b1a1
  40b208:	sub    ecx,esi
  40b20a:	or     edi,ebx
  40b20c:	stos   DWORD PTR es:[edi],eax
  40b20d:	or     dl,al
  40b20f:	ret    0x4acc
  40b212:	sbb    BYTE PTR [edi+0x74],0xd2
  40b216:	fsub   st,st(5)
  40b218:	mov    ebp,0x701fa7c8
  40b21d:	das    
  40b21e:	xchg   ebp,eax
  40b21f:	fcmove st,st(7)
  40b221:	mul    ah
  40b223:	les    eax,FWORD PTR [eax+ebp*8]
  40b226:	sahf   
  40b227:	ficomp DWORD PTR ds:0xdf2354e2
  40b22d:	ds add cl,BYTE PTR ds:[edx+0x2c]
  40b232:	dec    BYTE PTR [ebx]
  40b234:	inc    esi
  40b235:	bndldx (bad),[esi+0x473b7f6a]
  40b23c:	lds    ecx,FWORD PTR [edx-0x68]
  40b23f:	outs   dx,BYTE PTR ds:[esi]
  40b240:	pop    edi
  40b241:	pop    esi
  40b242:	inc    esi
  40b243:	popf   
  40b244:	sar    cl,1
  40b246:	aam    0x8a
  40b248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b249:	sbb    edx,ebx
  40b24b:	mov    ecx,0x4de0f365
  40b250:	pop    esp
  40b251:	mov    ds:0xe603ff79,eax
  40b256:	lods   al,BYTE PTR ds:[esi]
  40b257:	dec    ebx
  40b259:	adc    esi,esp
  40b25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b25c:	pop    ecx
  40b25d:	sub    ebx,0xffffffef
  40b260:	pop    ebp
  40b261:	in     al,dx
  40b262:	add    cl,BYTE PTR [ebx-0x2e]
  40b265:	jmp    0xa03111d8
  40b26a:	xor    al,BYTE PTR [edi+0x41]
  40b26d:	arpl   WORD PTR [ecx],dx
  40b26f:	push   es
  40b270:	mov    ds:0x106c52f2,eax
  40b275:	sub    eax,DWORD PTR [edi+0x56]
  40b278:	ja     0x40b28d
  40b27a:	ins    DWORD PTR es:[edi],dx
  40b27b:	adc    ebp,edx
  40b27d:	pop    ebx
  40b27e:	and    bh,0x72
  40b281:	mov    ebx,0x278ae9fe
  40b286:	push   edx
  40b287:	je     0x40b2c0
  40b289:	xor    eax,0x990b93cb
  40b28e:	push   eax
  40b28f:	cmp    ah,BYTE PTR [edi+edx*2+0x1a5c7904]
  40b296:	sahf   
  40b297:	aaa    
  40b298:	sahf   
  40b299:	push   ds
  40b29a:	loop   0x40b2ec
  40b29c:	push   esp
  40b29d:	xchg   esp,eax
  40b29e:	fiadd  WORD PTR [ebx]
  40b2a0:	push   esi
  40b2a1:	jmp    0xd67cdf49
  40b2a6:	out    0x9e,al
  40b2a8:	dec    edi
  40b2a9:	inc    DWORD PTR [esi]
  40b2ab:	push   cs
  40b2ac:	jae    0x40b23c
  40b2ae:	daa    
  40b2af:	hlt    
  40b2b0:	enter  0xf586,0x29
  40b2b4:	test   BYTE PTR [esi+ecx*2],0x6f
  40b2b8:	mov    WORD PTR [esi+eax*4+0x4ad9853b],?
  40b2bf:	imul   ecx,esi,0x6a
  40b2c2:	push   ebp
  40b2c3:	loopne 0x40b2ff
  40b2c5:	add    BYTE PTR [eax+edx*4+0x7b],al
  40b2c9:	add    edi,edi
  40b2cb:	adc    DWORD PTR [edi],0x141621f0
  40b2d1:	je     0x40b2d3
  40b2d3:	inc    edx
  40b2d4:	(bad)  
  40b2d6:	cmp    dh,BYTE PTR [ebx]
  40b2d8:	(bad)  
  40b2d9:	(bad)  [edx]
  40b2db:	pop    edx
  40b2dc:	scas   eax,DWORD PTR es:[edi]
  40b2dd:	fdivr  QWORD PTR [edx]
  40b2df:	lds    esi,FWORD PTR [ebx-0x56]
  40b2e2:	pop    es
  40b2e3:	loop   0x40b2b3
  40b2e5:	in     eax,0x4e
  40b2e7:	je     0x40b2df
  40b2e9:	xor    eax,0x32c72026
  40b2ee:	loopne 0x40b2df
  40b2f0:	dec    ebp
  40b2f1:	and    eax,0x22151f68
  40b2f6:	in     al,0x63
  40b2f8:	inc    ecx
  40b2f9:	jp     0x40b329
  40b2fb:	push   0x21
  40b2fd:	stos   DWORD PTR es:[edi],eax
  40b2fe:	(bad)  
  40b2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b300:	cmp    DWORD PTR [ebp+0x64],ebx
  40b303:	and    cl,BYTE PTR [ecx+0x1226f4c8]
  40b309:	sbb    eax,0x447875f9
  40b30e:	or     BYTE PTR [edx+0x2f5403ba],bl
  40b314:	sahf   
  40b315:	mov    esp,0x53dd0ba2
  40b31a:	jmp    0x4c6d:0x33d4effe
  40b321:	push   ds
  40b322:	mov    esi,0x6d2d7a1a
  40b327:	imul   eax,DWORD PTR [edi+ecx*8+0x4782a5],0xffffffb4
  40b32f:	fnstcw WORD PTR [edi+esi*1+0x16c7634]
  40b336:	das    
  40b337:	sbb    dl,BYTE PTR [bx+si-0x25]
  40b33b:	jnp    0x40b36b
  40b33d:	pop    ebp
  40b33e:	in     eax,0x48
  40b340:	or     BYTE PTR [esi+ecx*8],bh
  40b343:	test   al,0xe8
  40b345:	adc    al,0x73
  40b347:	xor    al,0xae
  40b349:	ret    0x7a24
  40b34c:	mov    ah,0x16
  40b34e:	out    0x3f,eax
  40b350:	jno    0x40b3a6
  40b352:	push   ss
  40b353:	pusha  
  40b354:	xchg   edi,eax
  40b355:	and    ch,BYTE PTR [edi-0x25]
  40b358:	lahf   
  40b359:	xor    BYTE PTR [esp+eiz*2],cl
  40b35c:	(bad)  
  40b35d:	aad    0x5b
  40b35f:	(bad)  
  40b360:	mov    ds:0xff3799ed,al
  40b365:	sbb    eax,0xfc599ceb
  40b36a:	mov    cl,0xab
  40b36c:	xchg   ecx,eax
  40b36d:	mov    bl,0x9e
  40b36f:	cmp    ebx,edx
  40b371:	retf   
  40b372:	inc    ebx
  40b373:	adc    BYTE PTR [ecx],al
  40b375:	lahf   
  40b376:	dec    edi
  40b377:	cdq    
  40b378:	xchg   esi,eax
  40b379:	jge    0x40b37f
  40b37b:	jae    0x40b3bb
  40b37d:	sub    BYTE PTR [edi],cl
  40b37f:	mov    WORD PTR [edi-0x3a],ds
  40b382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b383:	cmp    DWORD PTR [ebp-0x51cb7fe6],ebp
  40b389:	push   ss
  40b38a:	push   ecx
  40b38b:	push   cs
  40b38c:	pop    es
  40b38d:	icebp  
  40b38e:	(bad)  
  40b38f:	mov    ds:0x5fb4e593,eax
  40b394:	sbb    DWORD PTR [ebx+0x37f2cf55],esi
  40b39a:	lock sbb al,dl
  40b39d:	inc    ebx
  40b39e:	and    cl,bh
  40b3a0:	pop    DWORD PTR [eax+0x19]
  40b3a3:	inc    esp
  40b3a4:	lea    esi,[eax]
  40b3a6:	cwde   
  40b3a7:	mov    ecx,0xa7ae7db0
  40b3ac:	sti    
  40b3ad:	adc    cl,BYTE PTR [eax]
  40b3af:	scas   al,BYTE PTR es:[edi]
  40b3b0:	xlat   BYTE PTR ds:[ebx]
  40b3b1:	xor    al,0x8f
  40b3b3:	adc    BYTE PTR ds:0x8387d031,dh
  40b3b9:	add    al,0x5a
  40b3bb:	xchg   ebx,eax
  40b3bc:	int3   
  40b3bd:	dec    eax
  40b3be:	retf   
  40b3bf:	pusha  
  40b3c0:	mov    dh,0x53
  40b3c2:	arpl   WORD PTR [ecx-0x741cd208],ax
  40b3c8:	cwde   
  40b3c9:	adc    DWORD PTR fs:[edx],edi
  40b3cc:	or     ecx,DWORD PTR [edx]
  40b3ce:	inc    ebx
  40b3cf:	pusha  
  40b3d0:	into   
  40b3d1:	inc    eax
  40b3d2:	push   0x877db151
  40b3d7:	mov    ds:0x8c830831,eax
  40b3dc:	jno    0x40b455
  40b3de:	dec    edi
  40b3df:	add    BYTE PTR [ebx+0x6b],bl
  40b3e2:	test   al,0x9d
  40b3e4:	jmp    0x40b386
  40b3e6:	xor    cl,BYTE PTR [eax-0x784b0318]
  40b3ec:	adc    al,0x2e
  40b3ee:	test   BYTE PTR [ebx+0x3d],ch
  40b3f1:	icebp  
  40b3f2:	push   0xe
  40b3f4:	xchg   ecx,eax
  40b3f5:	mov    cl,0x93
  40b3f7:	(bad)  
  40b3f8:	jno    0x40b453
  40b3fa:	scas   al,BYTE PTR es:[edi]
  40b3fb:	and    BYTE PTR [ebx],dl
  40b3fd:	out    dx,eax
  40b3fe:	jl     0x40b435
  40b400:	lock sub ebx,edi
  40b403:	cmp    ebx,edx
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x45
  40b425:	xchg   edx,eax
  40b426:	pop    es
  40b427:	jbe    0x40b411
  40b429:	xchg   BYTE PTR [esi+0x7e],bh
  40b42c:	jo     0x40b4a7
  40b42e:	jle    0x40b4ae
  40b430:	or     bl,dh
  40b432:	outs   dx,DWORD PTR ds:[esi]
  40b433:	dec    ebx
  40b434:	jnp    0x40b40a
  40b436:	push   esi
  40b437:	and    edx,DWORD PTR [edx+0x1c3a58c6]
  40b43d:	sub    eax,0x4777a3c5
  40b442:	or     DWORD PTR [edx+0x56620a90],ebp
  40b448:	pop    ebx
  40b449:	jns    0x40b409
  40b44b:	out    dx,eax
  40b44c:	aad    0xa3
  40b44e:	test   DWORD PTR [ecx],edi
  40b450:	jno    0x40b489
  40b452:	pop    ebp
  40b453:	push   ecx
  40b454:	push   ebp
  40b455:	xchg   esp,eax
  40b456:	cdq    
  40b457:	push   ecx
  40b458:	pop    ebp
  40b459:	bound  ecx,QWORD PTR [eax+0x5d5bd4b6]
  40b45f:	hlt    
  40b460:	pop    es
  40b461:	pop    edx
  40b462:	pop    edx
  40b463:	xor    BYTE PTR [ebp-0x7d],bl
  40b466:	and    DWORD PTR [eax+0x5d70f79a],ebx
  40b46c:	sti    
  40b46d:	call   0xeafd203a
  40b472:	shl    bx,cl
  40b475:	xchg   edx,eax
  40b476:	xlat   BYTE PTR ds:[ebx]
  40b477:	test   edi,0x56bffb59
  40b47d:	pop    esi
  40b47e:	(bad)  
  40b47f:	int    0xf9
  40b481:	dec    esp
  40b482:	mov    dl,0xc5
  40b484:	pop    esp
  40b485:	cmp    eax,0xbca6d055
  40b48a:	js     0x40b49f
  40b48c:	inc    edi
  40b48d:	and    DWORD PTR [ecx+0x384cb4a3],ebp
  40b493:	mov    bl,0x17
  40b495:	ja     0x40b421
  40b497:	pop    edx
  40b498:	jmp    0x40b4b5
  40b49a:	jmp    0x8c0f5a9f
  40b49f:	inc    ecx
  40b4a0:	test   BYTE PTR [ebx+0x7a],0x3
  40b4a4:	rcr    DWORD PTR [ebp+0x2a463fa0],cl
  40b4aa:	xchg   edi,eax
  40b4ab:	push   ds
  40b4ac:	dec    edx
  40b4ad:	(bad)  
  40b4ae:	adc    eax,0x70cdaab8
  40b4b3:	pop    esi
  40b4b4:	and    al,0x70
  40b4b6:	repnz mov WORD PTR [edi+0x1d],ds
  40b4ba:	adc    eax,0x1e5d1fc
  40b4bf:	inc    edx
  40b4c0:	add    al,0xef
  40b4c2:	mov    bh,0x49
  40b4c4:	in     al,0x0
  40b4c6:	cmp    al,0xe5
  40b4c8:	cmp    eax,0x366efb88
  40b4cd:	or     esi,edi
  40b4cf:	jno    0x40b53a
  40b4d1:	pop    ss
  40b4d2:	add    BYTE PTR [ecx-0x48cd146f],cl
  40b4d8:	dec    ecx
  40b4d9:	inc    ecx
  40b4da:	xchg   ebp,eax
  40b4db:	or     al,0x76
  40b4dd:	imul   esp,DWORD PTR [esi+0x5edd0016],0xc5ba5bb1
  40b4e7:	and    bh,BYTE PTR [edx+0x4d]
  40b4ea:	jae    0x40b4df
  40b4ec:	stos   BYTE PTR es:[edi],al
  40b4ed:	lea    esi,[esi+0x59f96564]
  40b4f3:	mov    eax,ds:0xa143c7c0
  40b4f8:	inc    eax
  40b4f9:	jmp    0x40b49c
  40b4fb:	hlt    
  40b4fc:	sbb    eax,esi
  40b4fe:	hlt    
  40b4ff:	out    dx,al
  40b500:	lock dec ebp
  40b502:	(bad)  
  40b503:	in     al,dx
  40b504:	int    0x11
  40b506:	dec    eax
  40b507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b508:	(bad)  
  40b509:	fdivr  DWORD PTR [eax+0xbcbb6ff]
  40b50f:	mov    esp,0x85150d7f
  40b514:	jb     0x40b497
  40b516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b518:	adc    BYTE PTR [esi],ch
  40b51a:	or     eax,eax
  40b51c:	adc    DWORD PTR [edi-0x4f],0xbc79e4f3
  40b523:	fiadd  DWORD PTR [edi-0x62861c0c]
  40b529:	add    al,0x87
  40b52b:	inc    esp
  40b52c:	outs   dx,DWORD PTR ds:[esi]
  40b52d:	adc    DWORD PTR [edi-0x488b8953],ebx
  40b533:	mov    dl,0xba
  40b535:	rcl    ah,cl
  40b537:	pop    ebx
  40b538:	add    BYTE PTR [ebx+0x4],dl
  40b53b:	cs inc esi
  40b53d:	out    0x80,al
  40b53f:	pusha  
  40b540:	push   esp
  40b541:	fcomp  st(3)
  40b543:	loopne 0x40b4e4
  40b545:	push   ebp
  40b546:	jmp    0xd62a2e0
  40b54b:	sub    bh,ch
  40b54d:	lods   eax,DWORD PTR ds:[esi]
  40b54e:	push   es
  40b54f:	mov    esp,0x43c28d
  40b554:	sbb    bl,BYTE PTR [ecx+ebp*8]
  40b557:	pop    ebp
  40b558:	call   0xfb2615c1
  40b55d:	or     al,0x39
  40b55f:	or     edi,edx
  40b561:	mov    BYTE PTR ss:[edi+0x29],ah
  40b565:	and    edx,DWORD PTR [edi+0x45bb6d1f]
  40b56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b56c:	xchg   edx,eax
  40b56d:	push   es
  40b56e:	adc    ch,BYTE PTR [ecx+0x738841a7]
  40b574:	dec    esi
  40b575:	mov    ch,0x6b
  40b577:	imul   edi,DWORD PTR [ecx],0xffffff90
  40b57a:	jnp    0x40b58b
  40b57c:	xor    eax,0xd0c83baa
  40b581:	sub    eax,0x3fe11757
  40b586:	adc    al,0xe
  40b588:	(bad)  
  40b589:	lods   eax,DWORD PTR ds:[esi]
  40b58a:	pop    edi
  40b58b:	and    eax,0x1435ea96
  40b590:	js     0x40b5e4
  40b592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b593:	push   cs
  40b594:	inc    edi
  40b595:	inc    edi
  40b596:	scas   al,BYTE PTR es:[edi]
  40b597:	(bad)  
  40b599:	or     eax,0x99ceec4f
  40b59e:	adc    al,0x62
  40b5a0:	aam    0x7f
  40b5a2:	jno    0x40b5b6
  40b5a4:	sbb    ebx,DWORD PTR [esi-0x24bf1729]
  40b5aa:	clc    
  40b5ab:	stc    
  40b5ac:	xchg   BYTE PTR ds:0x6b9b1976,al
  40b5b2:	mul    ch
  40b5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5b5:	sub    ebx,edi
  40b5b7:	fld    TBYTE PTR [esi]
  40b5b9:	mov    al,0xdf
  40b5bb:	mov    ah,0x48
  40b5bd:	hlt    
  40b5be:	popf   
  40b5bf:	out    dx,eax
  40b5c0:	fadd   QWORD PTR [edx+0x7f49c02d]
  40b5c6:	and    ebp,DWORD PTR [edx+edi*4+0x20]
  40b5ca:	mov    bh,BYTE PTR [ebp+0x59ee3bc3]
  40b5d0:	jecxz  0x40b5c6
  40b5d2:	fs ins DWORD PTR es:[edi],dx
  40b5d4:	pop    esp
  40b5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d6:	sahf   
  40b5d7:	sbb    bl,ah
  40b5d9:	jl     0x40b5d1
  40b5db:	mov    dh,0x54
  40b5dd:	mov    dh,0x80
  40b5df:	inc    eax
  40b5e0:	push   esi
  40b5e1:	loope  0x40b5b9
  40b5e3:	retf   
  40b5e4:	xor    al,BYTE PTR [esi+0x58]
  40b5e7:	nop
  40b5e8:	out    dx,al
  40b5e9:	mov    bl,0xdc
  40b5eb:	pop    ds
  40b5ec:	fisubr WORD PTR [ecx+edi*8-0x74ea0c0]
  40b5f3:	rcl    esi,0xb1
  40b5f6:	push   es
  40b5f7:	push   ebp
  40b5f8:	(bad)  
  40b5f9:	sub    al,0xb3
  40b5fb:	push   edi
  40b5fc:	xor    eax,0x36be48df
  40b601:	iret   
  40b602:	pop    esp
  40b603:	icebp  
  40b604:	dec    esp
  40b605:	ret    0x7f15
  40b608:	retf   0xbc40
  40b60b:	sbb    al,0x56
  40b60d:	mov    ebx,0x521f1bf4
  40b612:	aad    0x35
  40b614:	jbe    0x40b5a9
  40b616:	jge    0x40b640
  40b618:	sub    esp,DWORD PTR [edx-0x8]
  40b61b:	retf   
  40b61c:	jl     0x40b603
  40b61e:	pop    ds
  40b61f:	push   eax
  40b620:	push   ecx
  40b621:	sub    eax,0x28a057a4
  40b626:	mov    WORD PTR [edi-0x6a],es
  40b629:	adc    BYTE PTR ds:0x7375c384,0xeb
  40b630:	jne    0x40b64e
  40b632:	lods   eax,DWORD PTR ds:[esi]
  40b633:	imul   ebx,DWORD PTR [ebp+0x78e204b2],0x79
  40b63a:	dec    ebp
  40b63b:	inc    edi
  40b63c:	outs   dx,BYTE PTR ds:[esi]
  40b63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b63e:	shl    BYTE PTR [ebx+0x72],cl
  40b641:	sub    al,BYTE PTR [esi+0x3542802c]
  40b647:	sbb    al,0x60
  40b649:	mov    dl,0xdc
  40b64b:	and    edx,ebp
  40b64d:	adc    BYTE PTR [edi+edi*8+0x3d],0x4b
  40b652:	(bad)  
  40b653:	pop    esi
  40b654:	bswap  esi
  40b656:	mov    edx,0xca6bb400
  40b65b:	pop    ecx
  40b65c:	dec    edi
  40b65d:	mov    edi,0xbcd0e9dd
  40b662:	cmc    
  40b663:	dec    ebx
  40b664:	std    
  40b665:	pop    edx
  40b666:	jne    0x40b66b
  40b668:	push   edx
  40b669:	lods   al,BYTE PTR ds:[esi]
  40b66a:	cmp    ah,BYTE PTR [esi-0x5c]
  40b66d:	and    esi,DWORD PTR [eax+0x6c]
  40b670:	dec    edx
  40b671:	mov    ah,0xa9
  40b673:	outs   dx,DWORD PTR ds:[esi]
  40b674:	pushf  
  40b675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b676:	loop   0x40b6d9
  40b678:	add    DWORD PTR [edx+0x126d8018],esi
  40b67e:	cmc    
  40b67f:	adc    DWORD PTR [ebp+0x63],esp
  40b682:	sar    BYTE PTR [ecx+0x25fcb1d1],0x62
  40b689:	or     DWORD PTR [ebx-0x1231e747],esp
  40b68f:	cmp    ebx,DWORD PTR [edx]
  40b691:	test   al,0xe5
  40b693:	aas    
  40b694:	stos   BYTE PTR es:[edi],al
  40b695:	lds    edi,FWORD PTR [ebx-0x50]
  40b698:	int3   
  40b699:	adc    al,0x77
  40b69b:	xchg   ebx,eax
  40b69c:	fsubp  st(6),st
  40b69e:	mov    dh,0x17
  40b6a0:	push   edi
  40b6a1:	mov    bh,0xfa
  40b6a3:	inc    ebp
  40b6a4:	mov    dl,0x96
  40b6a6:	mov    bh,0x82
  40b6a8:	cmp    al,0x8
  40b6aa:	or     cl,al
  40b6ac:	dec    ch
  40b6ae:	pop    eax
  40b6af:	std    
  40b6b0:	ds gs mov esi,0xf08bdeaa
  40b6b7:	sbb    ah,BYTE PTR [ebp+ecx*2+0x36]
  40b6bb:	daa    
  40b6bc:	retf   
  40b6bd:	daa    
  40b6be:	inc    edx
  40b6bf:	dec    esp
  40b6c0:	outs   dx,BYTE PTR ds:[esi]
  40b6c1:	fs mov edi,0x11c1a92b
  40b6c7:	jbe    0x40b698
  40b6c9:	call   0x50:0x52d45ce2
  40b6d0:	not    bl
  40b6d2:	or     cl,dl
  40b6d4:	(bad)  
  40b6d5:	mov    ch,0x3
  40b6d7:	xchg   ecx,eax
  40b6d8:	scas   al,BYTE PTR es:[edi]
  40b6d9:	cli    
  40b6da:	int3   
  40b6db:	jb     0x40b684
  40b6dd:	pop    edx
  40b6de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6df:	loope  0x40b676
  40b6e1:	sbb    eax,0x48c340b6
  40b6e6:	sbb    BYTE PTR [eax+0x4d073c1],bh
  40b6ec:	cwde   
  40b6ed:	sub    al,0x3a
  40b6ef:	in     al,dx
  40b6f0:	pop    ecx
  40b6f1:	loope  0x40b727
  40b6f3:	and    cl,BYTE PTR [ecx+0x78]
  40b6f6:	popa   
  40b6f7:	add    BYTE PTR [eax+0x74],0xc1
  40b6fb:	push   0xb54ff473
  40b700:	inc    eax
  40b701:	jmp    0x40b6bb
  40b703:	pop    ss
  40b704:	mov    esp,0x68a49c8c
  40b709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b70a:	cwde   
  40b70b:	jno    0x40b6cc
  40b70d:	add    BYTE PTR [edi-0x13d4d0ba],dh
  40b713:	pop    edi
  40b714:	fimul  WORD PTR [esi+0x5c95f567]
  40b71a:	lock mov al,ds:0x6d986c0e
  40b720:	pop    ecx
  40b721:	ja     0x40b75b
  40b723:	nop
  40b724:	fdiv   QWORD PTR [esi]
  40b726:	repz ror BYTE PTR [ebp-0x1f],1
  40b72a:	inc    eax
  40b72b:	(bad)  
  40b72c:	lods   al,BYTE PTR ds:[esi]
  40b72d:	out    0x5b,eax
  40b72f:	loope  0x40b711
  40b731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b732:	or     DWORD PTR [edi],ebx
  40b734:	jb     0x40b70c
  40b736:	and    eax,0x3978123a
  40b73b:	add    al,BYTE PTR [edi-0x7f]
  40b73e:	loopne 0x40b796
  40b740:	pop    ecx
  40b741:	dec    edi
  40b742:	popa   
  40b743:	xchg   esi,eax
  40b744:	sbb    al,0xb
  40b746:	mov    DWORD PTR [edx],ebp
  40b748:	mov    ds:0x8c6be54,al
  40b74d:	fdivp  st(4),st
  40b74f:	leave  
  40b750:	mov    ebp,0x20e11225
  40b755:	imul   ebp,DWORD PTR [ebx+0x1c639e40],0xffffff90
  40b75c:	xor    BYTE PTR ds:0x416a7485,ah
  40b762:	(bad)  
  40b764:	sbb    ch,cl
  40b766:	(bad)  
  40b767:	stc    
  40b768:	mov    dh,0x55
  40b76a:	aam    0xe0
  40b76c:	jne    0x40b6f3
  40b76e:	stc    
  40b76f:	ins    BYTE PTR es:[edi],dx
  40b770:	rcl    BYTE PTR [edx-0x6204d58f],cl
  40b776:	(bad)  
  40b778:	cmp    al,bh
  40b77a:	punpckldq mm2,mm1
  40b77d:	or     BYTE PTR [edx],al
  40b77f:	sub    dh,BYTE PTR [esi+0x7d0ad4d6]
  40b785:	adc    esi,ebp
  40b787:	pop    ecx
  40b788:	and    DWORD PTR [edx+0x603db1c2],0xe
  40b78f:	jecxz  0x40b737
  40b791:	into   
  40b792:	push   ebx
  40b793:	(bad)  [eax-0x13]
  40b796:	cmc    
  40b797:	inc    eax
  40b798:	push   eax
  40b799:	fnstcw WORD PTR [ebx-0x26]
  40b79c:	inc    edx
  40b79d:	in     al,dx
  40b79e:	xchg   edx,eax
  40b79f:	sub    eax,0x2d5672b7
  40b7a4:	arpl   WORD PTR [edi+esi*2+0x6b],sp
  40b7a8:	push   ecx
  40b7a9:	dec    ebp
  40b7aa:	enter  0x60ad,0x91
  40b7ae:	test   ebx,ebp
  40b7b0:	or     ebx,DWORD PTR [esi+0x3a]
  40b7b3:	and    bh,bl
  40b7b5:	loope  0x40b7bb
  40b7b7:	in     al,dx
  40b7b8:	es aas 
  40b7ba:	add    DWORD PTR [edi+0x34ec6828],0x9c1a37e4
  40b7c4:	stos   DWORD PTR es:[edi],eax
  40b7c5:	into   
  40b7c6:	repnz mov cl,0xb9
  40b7c9:	sahf   
  40b7ca:	outs   dx,DWORD PTR ds:[esi]
  40b7cb:	(bad)  
  40b7cc:	(bad)  
  40b7cd:	pop    esi
  40b7ce:	rcl    ebx,0xcd
  40b7d1:	mul    BYTE PTR [edi+ebx*2]
  40b7d4:	outs   dx,DWORD PTR ds:[esi]
  40b7d5:	mov    al,0xbc
  40b7d7:	daa    
  40b7d8:	ja     0x40b830
  40b7da:	lods   al,BYTE PTR ds:[esi]
  40b7db:	add    eax,ebx
  40b7dd:	rcl    ch,0x25
  40b7e0:	retf   
  40b7e1:	mov    al,ds:0x8c219cae
  40b7e6:	mov    ds:0x78fed4d9,eax
  40b7eb:	mov    cl,dl
  40b7ed:	mov    dl,0x51
  40b7ef:	jns    0x40b84f
  40b7f1:	iret   
  40b7f2:	mov    al,ds:0x1d327a3a
  40b7f7:	push   esi
  40b7f8:	mov    bh,0x5f
  40b7fa:	bound  esi,QWORD PTR [ebx]
  40b7fc:	ret    0x616e
  40b7ff:	(bad)  
  40b800:	clc    
  40b801:	add    edi,ebx
  40b803:	dec    esi
  40b804:	shl    DWORD PTR [ecx+0x6f9cfdb2],1
  40b80a:	add    edi,DWORD PTR cs:[eax-0x2b]
  40b80e:	repnz cmp edx,edx
  40b811:	aam    0x97
  40b813:	pop    ebp
  40b814:	jae    0x40b7f4
  40b816:	inc    eax
  40b817:	mov    DWORD PTR [esi-0xed3b023],ecx
  40b81d:	add    bl,BYTE PTR [edx+0x2306c43c]
  40b823:	out    dx,eax
  40b824:	dec    edi
  40b825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b826:	mov    ds:0x8b5a266d,eax
  40b82b:	push   ebp
  40b82c:	int3   
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	imul   DWORD PTR [esi+ebx*8+0x7e82e2f5]
  40b8ab:	jle    0x40b91d
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b85c
  40b8b1:	mov    DWORD PTR [ebx],ecx
  40b8b3:	jno    0x40b8f3
  40b8b5:	push   cs
  40b8b6:	or     DWORD PTR [ecx],0xef3e6360
  40b8bc:	mov    edi,DWORD PTR [ebx+0x156cf816]
  40b8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c3:	mov    eax,0x7d1e3ec
  40b8c8:	and    ebp,DWORD PTR [edi+0x2dd8a3e9]
  40b8ce:	pop    ebx
  40b8cf:	pop    DWORD PTR [ebx-0x23c88286]
  40b8d5:	pop    ebp
  40b8d6:	cli    
  40b8d7:	gs addr16 dec ebx
  40b8da:	xchg   BYTE PTR [ebx-0x48f385cb],cl
  40b8e0:	lock inc edx
  40b8e2:	popa   
  40b8e3:	push   esp
  40b8e4:	and    dl,ch
  40b8e6:	test   eax,0xf2d9b0e5
  40b8eb:	sbb    BYTE PTR [esi-0x7c],bl
  40b8ee:	dec    ecx
  40b8ef:	sub    dh,dh
  40b8f1:	sub    BYTE PTR [ebx-0x7e],al
  40b8f4:	mov    esi,0x802d3eb8
  40b8f9:	mov    ebp,0xceaa2b05
  40b8fe:	call   0xa1413dc7
  40b903:	sbb    al,0x29
  40b905:	cmc    
  40b906:	xchg   edx,eax
  40b907:	pop    ecx
  40b908:	pop    es
  40b909:	les    ecx,FWORD PTR [edi]
  40b90b:	push   DWORD PTR [ebx]
  40b90d:	xchg   ebp,eax
  40b90e:	icebp  
  40b90f:	xchg   BYTE PTR [eax],ch
  40b911:	xchg   BYTE PTR [eax+eax*1],cl
  40b914:	add    al,al
  40b916:	mov    BYTE PTR [esi+edx*1-0x41],0xde
  40b91b:	test   BYTE PTR gs:[ebp+ebp*8+0x4f],dl
  40b920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b921:	and    al,0xba
  40b923:	adc    esp,DWORD PTR [edx]
  40b925:	push   ss
  40b926:	add    edi,edi
  40b928:	jmp    0xe83b83eb
  40b92d:	jbe    0x40b98d
  40b92f:	adc    al,0x54
  40b931:	sbb    al,0xe
  40b933:	cmp    DWORD PTR [ecx],eax
  40b935:	mov    ecx,0xc96bb54b
  40b93a:	mov    DWORD PTR [ecx],esp
  40b93c:	nop
  40b93d:	or     al,0x9a
  40b93f:	push   0x7c4d343c
  40b944:	loope  0x40b90b
  40b946:	inc    esi
  40b948:	adc    edx,DWORD PTR [ebx]
  40b94a:	jg     0x40b977
  40b94c:	das    
  40b94d:	adc    al,0xa
  40b94f:	popa   
  40b950:	adc    eax,0x3150fc8c
  40b955:	push   edx
  40b957:	test   eax,0x7418016c
  40b95c:	imul   eax
  40b95e:	lods   al,BYTE PTR ds:[esi]
  40b95f:	imul   esi,DWORD PTR [eax-0x31f076ba],0x4fa3ac4b
  40b969:	int3   
  40b96a:	dec    eax
  40b96b:	fs push ds
  40b96d:	rcl    BYTE PTR es:[eax-0x80],cl
  40b971:	cmp    ebx,DWORD PTR [edi+esi*8]
  40b974:	jnp    0x40b937
  40b976:	and    DWORD PTR [esi-0x1330ea5e],ebx
  40b97c:	cwde   
  40b97d:	lea    ecx,[ebx]
  40b97f:	mov    ebp,0x40173533
  40b984:	(bad)  
  40b985:	shl    DWORD PTR [edi+eax*4],0x3e
  40b989:	cmp    ebx,DWORD PTR [eax+0x386c9c25]
  40b98f:	(bad)  
  40b990:	loope  0x40b9b5
  40b992:	ja     0x40b926
  40b994:	scas   eax,DWORD PTR es:[edi]
  40b995:	inc    ebx
  40b996:	xchg   edx,eax
  40b997:	mov    BYTE PTR [edx-0x1d72b57b],0xcd
  40b99e:	mov    ebx,0xd5727e16
  40b9a3:	add    BYTE PTR [ebp-0x2d],ah
  40b9a6:	adc    al,0x8f
  40b9a8:	stos   BYTE PTR es:[edi],al
  40b9a9:	push   ds
  40b9aa:	test   BYTE PTR [eax],0x6a
  40b9ad:	push   0x48
  40b9af:	adc    bh,BYTE PTR [esi-0x39]
  40b9b2:	test   eax,0x419f3594
  40b9b7:	dec    eax
  40b9b8:	mov    edi,0xa7790698
  40b9bd:	inc    BYTE PTR [edi]
  40b9bf:	fwait
  40b9c0:	js     0x40b989
  40b9c2:	cmp    cl,BYTE PTR [edx+0x5]
  40b9c5:	dec    edi
  40b9c6:	jmp    0x4819:0x9b5b3c89
  40b9cd:	adc    bh,BYTE PTR [eax+0x45058493]
  40b9d3:	mov    cl,ah
  40b9d5:	sbb    ecx,DWORD PTR ds:0x453f790f
  40b9db:	call   0xb5a1c668
  40b9e0:	mov    esp,0xf5cbc4e0
  40b9e5:	mov    esi,0xdcf95910
  40b9ea:	inc    esi
  40b9eb:	push   ss
  40b9ec:	neg    edx
  40b9ee:	in     eax,dx
  40b9ef:	pop    edx
  40b9f0:	dec    ecx
  40b9f1:	sbb    bl,BYTE PTR [edi-0x7d]
  40b9f4:	pop    ecx
  40b9f5:	(bad)  
  40b9f6:	enter  0x75f1,0xa1
  40b9fa:	inc    edi
  40b9fb:	sub    eax,0x482ddc6c
  40ba00:	out    0x8d,al
  40ba02:	(bad)  
  40ba04:	jecxz  0x40ba5f
  40ba06:	and    dh,BYTE PTR [ebx]
  40ba08:	push   es
  40ba09:	retf   0x36f2
  40ba0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba0d:	dec    edi
  40ba0e:	adc    al,0x8c
  40ba10:	pop    esp
  40ba11:	or     ah,BYTE PTR [eax-0x21f6ca0f]
  40ba17:	pop    esp
  40ba18:	fs call 0x5ab6:0x65c352d4
  40ba20:	test   BYTE PTR [eax-0x3d],ch
  40ba23:	jmp    0x40b9bf
  40ba25:	lods   eax,DWORD PTR ds:[esi]
  40ba26:	mov    bl,0x44
  40ba28:	mov    BYTE PTR [edi-0x27f76475],bh
  40ba2e:	dec    ebx
  40ba2f:	sahf   
  40ba30:	data16 or al,0x10
  40ba33:	pop    eax
  40ba34:	inc    esp
  40ba35:	hlt    
  40ba36:	inc    esp
  40ba37:	push   edi
  40ba39:	adc    eax,0x638a6582
  40ba3e:	ficomp DWORD PTR [eax-0x12]
  40ba41:	repz pop eax
  40ba43:	add    ch,bl
  40ba45:	xor    DWORD PTR [ecx-0x7b4a9156],0x58
  40ba4c:	stc    
  40ba4d:	lods   al,BYTE PTR ds:[esi]
  40ba4e:	sbb    ch,BYTE PTR [ebx-0x1b]
  40ba51:	jl     0x40bab2
  40ba53:	or     eax,0x31b4749
  40ba58:	sbb    DWORD PTR [eax+eax*4+0x159a4a83],eax
  40ba5f:	cmp    ebx,ebp
  40ba61:	jle    0x40bade
  40ba63:	sar    BYTE PTR [eax-0x6b],1
  40ba66:	int    0xcc
  40ba68:	inc    BYTE PTR [ecx-0x41]
  40ba6b:	mov    bl,0x35
  40ba6d:	or     DWORD PTR [esi],ecx
  40ba6f:	pop    ecx
  40ba70:	fld    QWORD PTR ds:0x40f9210c
  40ba76:	dec    edx
  40ba77:	dec    ecx
  40ba78:	xor    esi,DWORD PTR ds:0xf187313f
  40ba7e:	jg     0x40baa3
  40ba80:	jmp    0x66a2:0x30ebbf51
  40ba87:	(bad)  
  40ba88:	js     0x40ba3e
  40ba8a:	inc    esi
  40ba8b:	in     eax,0x59
  40ba8d:	xor    BYTE PTR [edx+0x6e],ah
  40ba90:	push   esp
  40ba91:	jecxz  0x40bada
  40ba93:	rcr    DWORD PTR [ebp-0x6b],cl
  40ba96:	dec    edi
  40ba97:	or     ecx,DWORD PTR [edi]
  40ba99:	cdq    
  40ba9a:	bound  eax,QWORD PTR [edi-0x514c36a7]
  40baa0:	jle    0x40ba47
  40baa2:	add    ah,BYTE PTR [eiz*2-0x715fe9a1]
  40baa9:	pop    ds
  40baaa:	jae    0x40bb01
  40baac:	sub    ebp,esi
  40baae:	pop    ecx
  40baaf:	jb     0x40bac5
  40bab1:	int3   
  40bab2:	jg     0x40ba8b
  40bab4:	sbb    ax,0xf9eb
  40bab8:	cld    
  40bab9:	lds    esi,FWORD PTR [eax]
  40babb:	inc    esi
  40babc:	fdecstp 
  40babe:	xchg   edx,eax
  40babf:	inc    esi
  40bac0:	dec    esi
  40bac1:	xor    edi,DWORD PTR [edi]
  40bac3:	push   ecx
  40bac4:	out    0x61,eax
  40bac6:	jmp    0xa174473
  40bacb:	push   0x23
  40bacd:	je     0x40ba9b
  40bacf:	mov    cl,0x74
  40bad1:	mov    ds:0x66b013be,eax
  40bad6:	arpl   WORD PTR [edx-0x1723f15e],si
  40badc:	in     al,0x2c
  40bade:	data16 mov BYTE PTR [ecx+0x2e],bl
  40bae2:	call   0x21bbc299
  40bae7:	mov    ds:0xc592891a,eax
  40baec:	push   0xf
  40baee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baef:	push   ebp
  40baf0:	int3   
  40baf1:	ja     0x40bb31
  40baf3:	dec    eax
  40baf4:	dec    eax
  40baf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf6:	mov    cs,WORD PTR [ecx]
  40baf8:	bound  ebx,QWORD PTR [edx]
  40bafa:	jmp    0x40bac0
  40bafc:	mov    eax,0x3c6f2927
  40bb01:	xchg   BYTE PTR [ebp+0x60],bh
  40bb04:	sub    bl,BYTE PTR [eax]
  40bb06:	in     eax,dx
  40bb07:	xchg   ebp,eax
  40bb08:	add    DWORD PTR [edi+0x79],ebx
  40bb0b:	scas   al,BYTE PTR es:[edi]
  40bb0c:	inc    esp
  40bb0d:	(bad)  
  40bb0e:	ins    DWORD PTR es:[edi],dx
  40bb0f:	mov    bl,0x85
  40bb11:	xor    eax,DWORD PTR [edx]
  40bb13:	fdiv   st(6),st
  40bb15:	sub    al,0x67
  40bb17:	sub    cl,ch
  40bb19:	(bad)  
  40bb1b:	jmp    0x40badf
  40bb1d:	lahf   
  40bb1e:	ins    BYTE PTR es:[edi],dx
  40bb1f:	add    dl,BYTE PTR [esi-0x4a]
  40bb22:	sbb    ebp,edi
  40bb24:	dec    esp
  40bb25:	scas   al,BYTE PTR es:[edi]
  40bb26:	pop    es
  40bb27:	mov    cl,0x65
  40bb29:	inc    ebp
  40bb2a:	(bad)  
  40bb2c:	stos   BYTE PTR es:[edi],al
  40bb2d:	(bad)  
  40bb2e:	mov    al,ds:0x9b0637fa
  40bb33:	and    DWORD PTR [eax+0x87bc755],ebx
  40bb39:	out    dx,al
  40bb3a:	jno    0x40bb2a
  40bb3c:	sub    DWORD PTR [edx],ebp
  40bb3e:	mov    bl,0xe3
  40bb40:	stos   DWORD PTR es:[edi],eax
  40bb41:	xchg   ebp,eax
  40bb42:	sub    DWORD PTR ds:0xbea103d3,edx
  40bb48:	mov    dh,0x2
  40bb4a:	mov    ds:0x379d7762,al
  40bb4f:	shl    DWORD PTR [eax+0x4a],cl
  40bb52:	jno    0x40bb5e
  40bb54:	stos   DWORD PTR es:[edi],eax
  40bb55:	jp     0x40bb83
  40bb57:	inc    ebp
  40bb58:	mov    eax,ds:0x57990c77
  40bb5d:	inc    ebx
  40bb5e:	add    BYTE PTR [edi],al
  40bb60:	dec    ah
  40bb62:	repz in eax,dx
  40bb64:	int3   
  40bb65:	(bad)  
  40bb66:	out    0x81,al
  40bb68:	cmp    BYTE PTR [ecx],bh
  40bb6a:	out    0xf6,eax
  40bb6c:	and    al,0xd8
  40bb6e:	push   0x24
  40bb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb71:	pop    edi
  40bb72:	gs push 0xa577652e
  40bb78:	ret    0x4908
  40bb7b:	sub    edi,ecx
  40bb7d:	mov    edx,0xfd1747e7
  40bb82:	aaa    
  40bb83:	pop    edi
  40bb84:	sub    edx,esi
  40bb86:	and    ecx,DWORD PTR [esi]
  40bb88:	lods   eax,DWORD PTR ds:[esi]
  40bb89:	sahf   
  40bb8a:	sbb    al,BYTE PTR [ecx]
  40bb8c:	(bad)  
  40bb8d:	mov    eax,0xa358d69a
  40bb92:	fsubr  DWORD PTR [edi]
  40bb94:	leave  
  40bb95:	nop
  40bb96:	mov    ah,0x3
  40bb98:	ins    DWORD PTR es:[edi],dx
  40bb99:	idiv   DWORD PTR [eax-0x14ba256b]
  40bb9f:	xlat   BYTE PTR ds:[ebx]
  40bba0:	or     esi,0x88074cd8
  40bba6:	xor    ch,cl
  40bba8:	ret    0x6979
  40bbab:	cmp    BYTE PTR [ecx-0x3d],al
  40bbae:	xor    al,0xae
  40bbb0:	aad    0xc2
  40bbb2:	inc    eax
  40bbb3:	dec    edx
  40bbb4:	lahf   
  40bbb5:	cmc    
  40bbb6:	mov    DWORD PTR [eax+0x54f77793],eax
  40bbbc:	dec    esp
  40bbbd:	push   esp
  40bbbe:	pop    ebp
  40bbbf:	ins    DWORD PTR es:[edi],dx
  40bbc0:	(bad)  
  40bbc1:	and    al,0x72
  40bbc3:	mov    ebx,0x6f3c3013
  40bbc8:	icebp  
  40bbc9:	sub    edx,DWORD PTR [esi]
  40bbcb:	sbb    BYTE PTR [edi],0x24
  40bbce:	mov    ebx,ecx
  40bbd0:	xchg   ebp,esp
  40bbd2:	dec    esp
  40bbd3:	addr16 adc al,0xc9
  40bbd6:	push   cs
  40bbd7:	mov    eax,DWORD PTR [ecx]
  40bbd9:	not    BYTE PTR [edx-0x3f]
  40bbdc:	fimul  DWORD PTR [ebx]
  40bbde:	lahf   
  40bbdf:	sbb    al,0x38
  40bbe1:	das    
  40bbe2:	or     edx,0xbfcb468a
  40bbe8:	pusha  
  40bbe9:	dec    edx
  40bbea:	rcr    BYTE PTR ds:0x931d53e8,1
  40bbf0:	push   0xffffffd8
  40bbf2:	push   ebp
  40bbf3:	sti    
  40bbf4:	test   DWORD PTR [esi],ecx
  40bbf6:	arpl   WORD PTR [eax],ax
  40bbf8:	les    edi,FWORD PTR [edi-0x775b03ca]
  40bbfe:	sub    DWORD PTR [esp+edx*8+0x12],esi
  40bc02:	xchg   DWORD PTR [edi+0x738e6d0f],ebx
  40bc08:	idiv   DWORD PTR [ecx+0x3a3ea04c]
  40bc0e:	mov    dl,0xe9
  40bc10:	test   BYTE PTR [edx],0x9b
  40bc13:	mul    DWORD PTR [ecx]
  40bc15:	scas   eax,DWORD PTR es:[edi]
  40bc16:	fisubr DWORD PTR [ebp+0x3c]
  40bc19:	or     al,0x94
  40bc1b:	xchg   ebx,eax
  40bc1c:	nop
  40bc1d:	retf   0xbc36
  40bc20:	sub    eax,0xa47fd8e4
  40bc25:	aaa    
  40bc26:	lods   eax,DWORD PTR ds:[esi]
  40bc27:	inc    ebx
  40bc28:	mov    al,0x1a
  40bc2a:	xchg   ebp,eax
  40bc2b:	data16 add BYTE PTR [ecx+0x7],bh
  40bc2f:	rcl    BYTE PTR [eax+0x69],cl
  40bc32:	stos   BYTE PTR es:[edi],al
  40bc33:	es add al,0xed
  40bc36:	sbb    DWORD PTR [ebp-0x12],ecx
  40bc39:	je     0x40bbc6
  40bc3b:	inc    eax
  40bc3c:	cmp    al,0xf9
  40bc3e:	scas   eax,DWORD PTR es:[edi]
  40bc3f:	retf   
  40bc40:	das    
  40bc41:	mov    DWORD PTR [esi+0x58e4a999],edx
  40bc47:	je     0x40bc81
  40bc49:	and    eax,0x4fb19454
  40bc4e:	(bad)  
  40bc4f:	push   ss
  40bc50:	sbb    eax,0x8108dcde
  40bc55:	ins    BYTE PTR es:[edi],dx
  40bc56:	js     0x40bc72
  40bc58:	out    dx,al
  40bc59:	jmp    0x176f:0x926bdef8
  40bc60:	push   cs
  40bc61:	pushf  
  40bc62:	out    dx,eax
  40bc63:	stos   BYTE PTR es:[edi],al
  40bc64:	popa   
  40bc65:	mov    cl,0xb6
  40bc67:	das    
  40bc68:	sub    al,0xa7
  40bc6a:	jns    0x40bc4a
  40bc6c:	or     BYTE PTR [edx],0x86
  40bc6f:	xchg   esi,eax
  40bc70:	xor    BYTE PTR [edi],dh
  40bc72:	sbb    al,0x8
  40bc74:	xor    eax,edx
  40bc76:	xor    al,0x8
  40bc78:	(bad)  
  40bc79:	fimul  WORD PTR [eax]
  40bc7b:	xchg   ecx,eax
  40bc7c:	mov    bl,0x1
  40bc7e:	mov    ch,0xf1
  40bc80:	cmp    dl,cl
  40bc82:	inc    esp
  40bc83:	pop    esi
  40bc84:	loopne 0x40bc35
  40bc86:	int3   
  40bc87:	push   esi
  40bc88:	nop
  40bc89:	xchg   DWORD PTR [bx+di+0x51],esp
  40bc8e:	or     eax,0x6cd08bca
  40bc93:	inc    ecx
  40bc94:	test   BYTE PTR [ebx-0x78],al
  40bc97:	lods   eax,DWORD PTR ds:[esi]
  40bc98:	(bad)  
  40bc99:	sahf   
  40bc9a:	dec    edx
  40bc9b:	rcr    BYTE PTR [ebx+0x6d75c3b8],1
  40bca1:	mov    ds:0xe406ae11,al
  40bca6:	push   edi
  40bca7:	(bad)  
  40bca8:	jmp    0x40bcc7
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	and    ebx,DWORD PTR [ebx+0x6f]
  40bcd5:	mov    edx,0x7e7e8ee4
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	ret    
  40bcdf:	mov    dl,0x85
  40bce1:	shr    BYTE PTR [edi+0x43],cl
  40bce4:	shr    DWORD PTR ds:0x656075c8,0x39
  40bceb:	mov    WORD PTR [ebp+0x5],ds
  40bcee:	fcom   QWORD PTR [ebp+0x6041f64e]
  40bcf4:	and    BYTE PTR [ebp-0x23],dl
  40bcf7:	out    dx,al
  40bcf8:	imul   ecx,DWORD PTR ds:0x7afb22e3,0x340e6e2c
  40bd02:	loopne 0x40bca5
  40bd04:	inc    esp
  40bd05:	mov    ds:0x14dbdb5c,al
  40bd0a:	add    al,0x2c
  40bd0c:	bound  ebx,QWORD PTR [edi-0xc]
  40bd0f:	clc    
  40bd10:	std    
  40bd11:	test   al,0xf8
  40bd13:	sbb    eax,DWORD PTR [ebx]
  40bd15:	mov    bl,0x44
  40bd17:	xor    ebp,DWORD PTR [edx]
  40bd19:	rcl    DWORD PTR [edx+0x55],cl
  40bd1c:	dec    ebp
  40bd1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1e:	mov    ebp,0x1928304a
  40bd23:	and    bh,BYTE PTR [ebx-0x35]
  40bd26:	sub    esi,esi
  40bd28:	inc    edx
  40bd29:	xchg   ebx,eax
  40bd2a:	sbb    al,0x28
  40bd2c:	aam    0x45
  40bd2e:	jno    0x40bd7b
  40bd30:	addr16 push ebx
  40bd32:	fdiv   DWORD PTR [edx-0x340bf2f5]
  40bd38:	call   FWORD PTR [ebx]
  40bd3a:	cmp    al,0xa4
  40bd3c:	push   0xffffff9f
  40bd3e:	xchg   edi,eax
  40bd3f:	mov    al,ds:0x48207251
  40bd44:	popa   
  40bd45:	xor    eax,0x76038be7
  40bd4a:	or     ebp,DWORD PTR [ebp+0x6d]
  40bd4d:	pusha  
  40bd4e:	mov    ebx,cs
  40bd50:	dec    ebx
  40bd51:	shl    DWORD PTR [eax+0x1372c18c],0xeb
  40bd58:	aad    0x66
  40bd5a:	xor    esp,DWORD PTR [ecx]
  40bd5c:	cdq    
  40bd5d:	les    edi,FWORD PTR [ebx]
  40bd5f:	arpl   cx,bp
  40bd61:	in     al,dx
  40bd62:	xchg   esi,eax
  40bd63:	xor    ah,BYTE PTR [edi]
  40bd65:	add    BYTE PTR [edx],ah
  40bd67:	(bad)  
  40bd68:	and    bh,bl
  40bd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd6b:	leave  
  40bd6c:	jecxz  0x40bd2d
  40bd6e:	add    edx,ebx
  40bd70:	and    esp,edx
  40bd72:	fsub   QWORD PTR [ebp-0x5a1aa2b0]
  40bd78:	jp     0x40bd37
  40bd7a:	stc    
  40bd7b:	push   edx
  40bd7c:	ret    0xd803
  40bd7f:	sub    DWORD PTR [ebx],ecx
  40bd81:	xchg   al,dh
  40bd83:	pushf  
  40bd84:	cmp    BYTE PTR [ecx+0x12],0xe6
  40bd88:	shl    DWORD PTR [ebp+0x6a],cl
  40bd8b:	jns    0x40be08
  40bd8d:	and    eax,0x80fb0106
  40bd92:	dec    edx
  40bd93:	js     0x40bd58
  40bd95:	cmp    DWORD PTR [esi-0x6f],0xf4fc0b27
  40bd9c:	ror    DWORD PTR [edx],cl
  40bd9e:	adc    DWORD PTR [esi-0x20],0xf
  40bda2:	sbb    ah,ch
  40bda4:	out    dx,al
  40bda5:	sub    al,0x63
  40bda7:	fwait
  40bda8:	hlt    
  40bda9:	mov    DWORD PTR [edx+0x8cce0b5],ecx
  40bdaf:	jecxz  0x40bd90
  40bdb1:	fdivr  DWORD PTR [edx]
  40bdb3:	or     eax,esp
  40bdb5:	retf   0x3e83
  40bdb8:	mov    ah,0xd5
  40bdba:	xchg   ebp,eax
  40bdbb:	iret   
  40bdbc:	jge    0x40bd6b
  40bdbe:	pop    ecx
  40bdbf:	and    BYTE PTR [ecx],0xce
  40bdc2:	push   cs
  40bdc3:	out    0xa6,eax
  40bdc5:	(bad)  
  40bdc6:	repz and DWORD PTR [edi-0x47baad25],esp
  40bdcd:	push   eax
  40bdce:	xor    DWORD PTR [ecx+edi*2-0x2b],esi
  40bdd2:	or     ebx,DWORD PTR [ebx+ebp*4]
  40bdd5:	adc    dh,BYTE PTR [ebx+0x50c13fd7]
  40bddb:	fistp  DWORD PTR [ecx-0x29127751]
  40bde1:	sahf   
  40bde2:	icebp  
  40bde3:	imul   ebp,DWORD PTR [edi+esi*1],0xb4c2584a
  40bdea:	loope  0x40bdeb
  40bdec:	mov    al,0x22
  40bdee:	inc    esi
  40bdef:	cdq    
  40bdf0:	mov    esp,0xbd390549
  40bdf5:	and    al,0x82
  40bdf7:	pop    esi
  40bdf8:	sbb    eax,0xc3306673
  40bdfd:	push   ss
  40bdfe:	push   ebx
  40bdff:	xor    ah,BYTE PTR [eax+0x0]
  40be02:	repz aam 0x44
  40be05:	je     0x40bdfd
  40be07:	sub    BYTE PTR [esi-0x6b13641d],ah
  40be0d:	or     al,0x51
  40be0f:	(bad)  
  40be10:	clc    
  40be11:	(bad)  
  40be12:	mov    edx,0x8b3a9a8f
  40be17:	test   BYTE PTR [ebx+edi*4-0x19ff6af1],dh
  40be1e:	sub    edx,DWORD PTR [ecx-0x269a74bd]
  40be24:	aas    
  40be25:	stc    
  40be26:	mov    edx,0x8bb6f3fa
  40be2b:	cmp    DWORD PTR [edi-0x2f],esi
  40be2e:	xchg   DWORD PTR [edi-0x2a4a397],edx
  40be34:	xchg   ecx,eax
  40be35:	jns    0x40beb5
  40be37:	ins    BYTE PTR es:[edi],dx
  40be38:	pop    edi
  40be39:	mov    BYTE PTR ds:0x94e50739,ch
  40be3f:	lock or BYTE PTR [eax-0xfdfa732],0xa5
  40be47:	and    BYTE PTR [edi],dl
  40be49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be4a:	jle    0x40be79
  40be4c:	fsubr  DWORD PTR [ecx]
  40be4e:	xchg   ecx,eax
  40be4f:	rcr    DWORD PTR [ebp-0x18e5e9bc],0x66
  40be56:	xchg   DWORD PTR [eax-0x19f12f42],ebx
  40be5c:	das    
  40be5d:	cmp    DWORD PTR [ebx],0xffffffc5
  40be60:	loope  0x40bdf9
  40be62:	loope  0x40be7f
  40be64:	inc    esi
  40be65:	and    DWORD PTR [esi+0x54],eax
  40be68:	scas   eax,DWORD PTR es:[edi]
  40be69:	daa    
  40be6a:	call   esp
  40be6c:	repnz in al,0x4e
  40be6f:	rcl    DWORD PTR [edi-0x4a],cl
  40be72:	fmul   QWORD PTR [eax+0x56]
  40be75:	adc    edi,DWORD PTR [ecx]
  40be77:	dec    ebx
  40be78:	hlt    
  40be79:	jb     0x40be7d
  40be7b:	mov    fs,esi
  40be7d:	inc    eax
  40be7e:	test   eax,0xda746e37
  40be83:	daa    
  40be84:	loopne 0x40be5d
  40be86:	imul   eax,DWORD PTR [eax-0x7313f428],0xffffffc0
  40be8d:	in     eax,dx
  40be8e:	xchg   ebx,eax
  40be8f:	leave  
  40be90:	dec    esi
  40be91:	in     eax,0x4e
  40be93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be94:	test   al,0x99
  40be96:	jmp    0x2593ed5b
  40be9b:	(bad)  
  40be9d:	or     esi,edx
  40be9f:	push   ebx
  40bea0:	outs   dx,DWORD PTR ds:[esi]
  40bea1:	mov    al,ds:0xd6775293
  40bea6:	fcomi  st,st(5)
  40bea8:	(bad)  
  40bea9:	xor    DWORD PTR [ecx],edi
  40beab:	dec    ebp
  40beac:	call   DWORD PTR [ebx+0x6c]
  40beaf:	ja     0x40be63
  40beb1:	hlt    
  40beb2:	aam    0x7b
  40beb4:	push   es
  40beb5:	mov    esp,DWORD PTR [ecx]
  40beb7:	and    ch,dh
  40beb9:	(bad)  
  40beba:	in     eax,0xc7
  40bebc:	pop    ebp
  40bebd:	xor    al,0xde
  40bebf:	mov    BYTE PTR [ebx-0x1b],cl
  40bec2:	leave  
  40bec3:	call   0x82ad:0xa3f208e0
  40beca:	cmp    eax,0xf4b0bc3f
  40becf:	cdq    
  40bed0:	sub    edi,esi
  40bed2:	icebp  
  40bed3:	ret    
  40bed4:	iret   
  40bed5:	add    eax,0xdb220ae4
  40beda:	adc    ebx,eax
  40bedc:	gs cld 
  40bede:	or     dh,bl
  40bee0:	xor    DWORD PTR [edi+0x3475e339],ebx
  40bee6:	rcl    BYTE PTR [esi+esi*2],0x91
  40beea:	add    al,0x18
  40beec:	fs sbb al,0xd2
  40beef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef0:	sar    DWORD PTR [edi],0xd6
  40bef3:	jnp    0x40bf0c
  40bef5:	enter  0x9527,0xb0
  40bef9:	fnstsw WORD PTR [edx-0x1731fa7e]
  40beff:	adc    esi,ecx
  40bf01:	scas   eax,DWORD PTR es:[edi]
  40bf02:	sbb    ebx,DWORD PTR [ecx-0xa9aaad7]
  40bf08:	inc    esi
  40bf09:	and    eax,0x96875820
  40bf0e:	ret    0xdf92
  40bf11:	xchg   DWORD PTR [esi+edi*2+0x2cc23799],esp
  40bf18:	iret   
  40bf19:	pushf  
  40bf1a:	or     BYTE PTR [ebx],dl
  40bf1c:	adc    eax,0x32dea8b1
  40bf21:	out    0x26,al
  40bf23:	stos   BYTE PTR es:[edi],al
  40bf24:	cmp    bh,BYTE PTR [edi+0x5a]
  40bf27:	fdiv   QWORD PTR [ebp+eax*2-0x1c]
  40bf2b:	out    0x4b,eax
  40bf2d:	dec    eax
  40bf2e:	js     0x40bf2b
  40bf30:	dec    ecx
  40bf31:	not    DWORD PTR [edi+ecx*4]
  40bf34:	(bad)  
  40bf36:	add    BYTE PTR [ecx+0x42],bh
  40bf39:	outs   dx,BYTE PTR ds:[esi]
  40bf3a:	sti    
  40bf3b:	fcmovnbe st,st(1)
  40bf3d:	idiv   al
  40bf3f:	xchg   esp,eax
  40bf40:	addr16 jae 0x40bee0
  40bf43:	int    0x39
  40bf45:	inc    esp
  40bf46:	sub    ebx,edi
  40bf48:	outs   dx,DWORD PTR ds:[esi]
  40bf49:	cmp    BYTE PTR [edi-0x44bd0035],dh
  40bf4f:	and    al,0x82
  40bf51:	out    dx,al
  40bf52:	lock add dl,BYTE PTR [ecx+0x7d]
  40bf56:	icebp  
  40bf57:	imul   al
  40bf59:	mov    BYTE PTR [esi],0xb8
  40bf5c:	dec    ebp
  40bf5d:	test   DWORD PTR [eax],edx
  40bf5f:	cdq    
  40bf60:	out    dx,al
  40bf61:	ss inc ebp
  40bf63:	into   
  40bf64:	dec    edx
  40bf65:	add    esi,DWORD PTR [eax]
  40bf67:	ja     0x40bf6c
  40bf69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf6a:	popf   
  40bf6b:	aam    0x12
  40bf6d:	lahf   
  40bf6e:	jle    0x40bf63
  40bf70:	and    al,0xcd
  40bf72:	xor    ah,BYTE PTR [esi]
  40bf74:	(bad)  
  40bf75:	sbb    al,0x4f
  40bf77:	les    ebp,FWORD PTR [ecx+0x1]
  40bf7a:	push   gs
  40bf7c:	jb     0x40bf39
  40bf7e:	and    al,0xe4
  40bf80:	inc    ebp
  40bf81:	ret    0x7cc5
  40bf84:	mov    edi,DWORD PTR [edi+ebx*2+0x9ff7755]
  40bf8b:	test   DWORD PTR [edx+0x28],0x7d77c0ea
  40bf92:	sub    al,0xce
  40bf94:	jnp    0x40bfd0
  40bf96:	test   DWORD PTR [ebx+0x5f],ebx
  40bf99:	sub    esp,0x33c8758a
  40bf9f:	enter  0xfc18,0xe5
  40bfa3:	je     0x40c01f
  40bfa5:	neg    BYTE PTR [ecx-0x327c0ac4]
  40bfab:	test   DWORD PTR [edi-0x23914102],0xb7626dc3
  40bfb5:	push   ds
  40bfb6:	inc    esp
  40bfb7:	or     esi,DWORD PTR [eax+0x6b]
  40bfba:	fistp  DWORD PTR [ecx+0x2a726a4b]
  40bfc0:	pushf  
  40bfc1:	push   ss
  40bfc2:	rep outs dx,BYTE PTR ds:[esi]
  40bfc4:	mov    esp,0xccdd077e
  40bfc9:	inc    eax
  40bfca:	out    0xf0,eax
  40bfcc:	jmp    0xd1b6:0x14cdc2f7
  40bfd3:	mov    ch,0x66
  40bfd5:	imul   DWORD PTR ds:[esi+0x14035bad]
  40bfdc:	test   al,0xa5
  40bfde:	jmp    0x44c4:0x633970ed
  40bfe5:	pop    edx
  40bfe6:	dec    DWORD PTR [ecx+0x34f9e50d]
  40bfec:	xor    BYTE PTR [esi-0x78],ah
  40bfef:	ins    DWORD PTR es:[edi],dx
  40bff0:	xor    dl,ch
  40bff2:	mov    eax,0xe4a02dd8
  40bff7:	cmc    
  40bff8:	push   ebx
  40bff9:	pusha  
  40bffa:	sbb    al,0xfd
  40bffc:	rol    BYTE PTR ds:0x8d683f80,0xf9
  40c003:	cli    
  40c004:	addr16 cmc 
  40c006:	xor    esp,esp
  40c008:	sahf   
  40c009:	ret    0x31c8
  40c00c:	test   eax,0xeb3a481f
  40c011:	pop    ebx
  40c012:	sbb    ecx,DWORD PTR [esi]
  40c014:	shl    DWORD PTR [ebx],0x3a
  40c017:	mov    dl,0x6
  40c019:	lods   eax,DWORD PTR ds:[esi]
  40c01a:	mov    ch,0xb0
  40c01c:	leave  
  40c01d:	leave  
  40c01e:	push   ebx
  40c01f:	pop    ds
  40c020:	and    edx,DWORD PTR [esi]
  40c022:	retf   0xac49
  40c025:	jno    0x40bfb7
  40c027:	int3   
  40c028:	mov    esi,0xef884af5
  40c02d:	int    0x4a
  40c02f:	outs   dx,BYTE PTR ds:[esi]
  40c030:	push   0x2c
  40c032:	jmp    0x40c000
  40c034:	cdq    
  40c035:	sahf   
  40c036:	jmp    0x17bb:0x19920525
  40c03d:	jo     0x40bff1
  40c03f:	enter  0xfb3f,0x5e
  40c043:	xor    al,0x70
  40c045:	push   0x77
  40c047:	sbb    al,0x6b
  40c049:	or     ah,dl
  40c04b:	inc    ecx
  40c04c:	add    edi,DWORD PTR [edx-0x5]
  40c04f:	dec    edx
  40c050:	in     al,dx
  40c051:	jb     0x40c0b6
  40c053:	pop    esp
  40c054:	shr    BYTE PTR [edx-0x4a],0x5d
  40c058:	and    eax,0xba1003b8
  40c05d:	add    al,0x2f
  40c05f:	das    
  40c060:	ret    
  40c061:	cwde   
  40c062:	dec    ebp
  40c063:	dec    esi
  40c064:	stc    
  40c065:	mov    dh,0x52
  40c067:	dec    edi
  40c068:	jo     0x40c073
  40c06a:	fdivr  st(1),st
  40c06c:	shl    BYTE PTR [edi+esi*2+0x7b460a9f],1
  40c073:	lods   eax,DWORD PTR ds:[esi]
  40c074:	add    al,0xe0
  40c076:	push   cs
  40c077:	(bad)  
  40c078:	mov    esi,0x95a8cbfc
  40c07d:	test   DWORD PTR [edx-0xc],ebp
  40c080:	xchg   BYTE PTR [ebx-0x4a],bh
  40c083:	push   ebx
  40c084:	ret    0xc4cc
  40c087:	setp   BYTE PTR [edi-0x29]
  40c08b:	xchg   ebx,eax
  40c08c:	mov    esi,0x200f980a
  40c091:	mov    ebx,0xbf78aa41
  40c096:	daa    
  40c097:	xchg   ecx,eax
  40c098:	sub    eax,0x58adaca3
  40c09d:	jne    0x40c084
  40c09f:	xor    BYTE PTR [ecx-0x3d063712],bl
  40c0a5:	call   0x76f364c7
  40c0aa:	sbb    ebx,esp
  40c0ac:	int3   
  40c0ad:	fisttp WORD PTR [ebp+edx*2+0x64d2905d]
  40c0b4:	mov    ds:0xcdb4cd9e,al
  40c0b9:	jmp    0x19a97c08
  40c0be:	xor    eax,0x305c4ffc
  40c0c3:	scas   eax,DWORD PTR es:[edi]
  40c0c4:	xor    BYTE PTR [edi-0xe2182b9],al
  40c0ca:	mov    bh,0x1e
  40c0cc:	lds    ebx,FWORD PTR [ebx-0x50]
  40c0cf:	dec    esp
  40c0d0:	mov    eax,ds:0x755a4477
  40c0d5:	jl     0x40c06d
  40c0d7:	rol    DWORD PTR [ebx],0xf9
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rcr    al,1
  40c0ee:	pop    es
  40c0ef:	mul    DWORD PTR ds:0x7e7e8ade
  40c0f5:	jo     0x40c170
  40c0f7:	jle    0x40c177
  40c0f9:	cwde   
  40c0fa:	sar    BYTE PTR [esp+edx*4+0x76716d7],cl
  40c101:	je     0x40c0a8
  40c103:	retf   0x1a3
  40c106:	repz js 0x40c164
  40c109:	popf   
  40c10a:	jecxz  0x40c101
  40c10c:	mov    ebp,0xb53081e2
  40c111:	cmp    edi,DWORD PTR [ebx+0x39]
  40c114:	inc    ecx
  40c115:	push   0x6fe0a1ac
  40c11a:	mov    eax,0x8fafd437
  40c11f:	ret    0xd681
  40c122:	xchg   ebx,ecx
  40c124:	jne    0x40c173
  40c126:	cmp    bh,BYTE PTR [ebp+0x597af7b8]
  40c12c:	or     ebp,esp
  40c12e:	and    BYTE PTR [ebx],al
  40c130:	dec    edi
  40c131:	dec    edx
  40c132:	int    0x57
  40c134:	sub    bh,BYTE PTR [ebx-0x2e]
  40c137:	std    
  40c138:	dec    edx
  40c139:	adc    al,0x41
  40c13b:	fdivr  QWORD PTR [edi+0x42]
  40c13e:	ins    DWORD PTR es:[edi],dx
  40c13f:	rol    BYTE PTR [ecx],cl
  40c141:	addr16 adc al,bh
  40c144:	iret   
  40c145:	add    al,0x6c
  40c147:	push   ebp
  40c148:	call   0xa66cec46
  40c14d:	jg     0x40c1bd
  40c14f:	repnz test DWORD PTR [ecx],eax
  40c152:	out    dx,al
  40c153:	xchg   DWORD PTR [ecx+0x40f33893],esi
  40c159:	inc    ebx
  40c15a:	pushf  
  40c15b:	xchg   edx,eax
  40c15c:	sub    edi,DWORD PTR [eax+0x38]
  40c15f:	rcr    DWORD PTR [ecx+esi*2],cl
  40c162:	adc    ecx,ecx
  40c164:	dec    ebx
  40c165:	jecxz  0x40c0e8
  40c167:	sbb    al,0xf
  40c169:	cli    
  40c16a:	pop    ecx
  40c16b:	pop    es
  40c16c:	cmp    esp,edi
  40c16e:	sub    cl,bl
  40c170:	fstp   st(0)
  40c172:	mov    ds:0xbc747bc6,al
  40c177:	icebp  
  40c178:	xor    al,0x22
  40c17a:	repz adc eax,0xce2b72c5
  40c180:	jnp    0x40c16e
  40c182:	out    dx,al
  40c183:	mov    esp,fs
  40c185:	xchg   esi,eax
  40c186:	and    esi,esi
  40c188:	xchg   ecx,eax
  40c189:	stos   BYTE PTR es:[edi],al
  40c18a:	push   ds
  40c18b:	add    edx,DWORD PTR [edi]
  40c18d:	xlat   BYTE PTR ds:[ebx]
  40c18e:	xor    eax,0x454255fb
  40c193:	stos   DWORD PTR es:[edi],eax
  40c194:	pop    ecx
  40c195:	pop    es
  40c196:	xchg   BYTE PTR [esi-0x61],dl
  40c199:	mov    esp,0x6c5dfe59
  40c19e:	inc    eax
  40c19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1a0:	mov    ch,0x3e
  40c1a2:	fst    QWORD PTR [ecx-0x1d]
  40c1a5:	cld    
  40c1a6:	sub    DWORD PTR ds:0xd69c9506,ecx
  40c1ac:	cmp    DWORD PTR [eax-0x78ceadb9],esp
  40c1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b3:	mov    esi,0x874d593
  40c1b8:	int    0x80
  40c1ba:	scas   al,BYTE PTR es:[edi]
  40c1bb:	adc    edx,DWORD PTR [eax+0x7ed7501f]
  40c1c1:	call   0x1436ee5e
  40c1c6:	bound  ebx,QWORD PTR [eax+eiz*1]
  40c1c9:	xchg   esi,eax
  40c1ca:	pop    edx
  40c1cb:	call   DWORD PTR [edi+0xc203047]
  40c1d1:	stos   BYTE PTR es:[edi],al
  40c1d2:	add    BYTE PTR [ebx+0x23bf9e18],bh
  40c1d8:	or     BYTE PTR [edx+0x4cbdac32],bl
  40c1de:	cmp    al,0x46
  40c1e0:	ret    0x9abf
  40c1e3:	in     eax,dx
  40c1e4:	xchg   esp,eax
  40c1e5:	xchg   esp,eax
  40c1e6:	adc    dl,0xb2
  40c1e9:	xor    esp,DWORD PTR [edi-0x60]
  40c1ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ed:	push   0xfffffff1
  40c1ef:	(bad)  
  40c1f0:	xchg   ebx,eax
  40c1f1:	dec    ecx
  40c1f2:	fadd   st,st(0)
  40c1f4:	push   edx
  40c1f5:	je     0x40c229
  40c1f7:	jecxz  0x40c17c
  40c1f9:	inc    edi
  40c1fa:	xor    eax,DWORD PTR [ecx-0xb859f05]
  40c200:	dec    bh
  40c202:	mov    edx,DWORD PTR [eax+0x6a2a9daf]
  40c208:	fcomp  QWORD PTR [edi]
  40c20a:	mov    BYTE PTR [eax+0x50b95838],bh
  40c210:	mov    esi,0xb53e479a
  40c215:	mov    ebx,es
  40c217:	add    al,0x86
  40c219:	cmp    ebx,DWORD PTR [edx+0x3c262967]
  40c21f:	xor    edx,DWORD PTR ds:0x41327ad2
  40c225:	cmp    BYTE PTR [ebp+esi*4+0x57],0xd5
  40c22a:	fisub  DWORD PTR ds:0xefcd26d9
  40c230:	sbb    DWORD PTR [eax+eax*4-0x42],0x23a88a83
  40c238:	push   edx
  40c239:	jp     0x40c283
  40c23b:	fidivr DWORD PTR [ebp+0x76957fac]
  40c241:	adc    al,0xdb
  40c243:	pop    ecx
  40c244:	push   esp
  40c245:	aam    0xb6
  40c247:	in     eax,0x76
  40c249:	mov    ah,0x6
  40c24b:	xor    eax,0x58eab46d
  40c250:	push   0x8f259a7f
  40c255:	jecxz  0x40c229
  40c257:	fist   DWORD PTR [esi+0x40dffc56]
  40c25d:	rcr    BYTE PTR [edx+0x3e],cl
  40c260:	sub    eax,0x656fe24d
  40c265:	mov    ah,0x40
  40c267:	or     edi,esp
  40c269:	inc    ebx
  40c26a:	mov    ebp,DWORD PTR [edi]
  40c26c:	pop    ebx
  40c26d:	icebp  
  40c26e:	pushf  
  40c26f:	std    
  40c270:	int    0x1e
  40c272:	leave  
  40c273:	mov    BYTE PTR [edi],cl
  40c275:	xchg   esi,eax
  40c276:	pusha  
  40c277:	xor    edx,edi
  40c279:	in     eax,dx
  40c27a:	or     DWORD PTR [edx],0x886a861d
  40c280:	dec    ebp
  40c281:	loope  0x40c217
  40c283:	add    al,0x8a
  40c285:	or     BYTE PTR [eax-0x3d],ch
  40c288:	loop   0x40c2da
  40c28a:	sbb    al,0x56
  40c28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c28e:	cmc    
  40c28f:	ins    DWORD PTR es:[edi],dx
  40c290:	fsubr  DWORD PTR [ebx-0x7eb52b80]
  40c296:	lods   al,BYTE PTR ds:[esi]
  40c297:	dec    esi
  40c298:	arpl   WORD PTR [ebx],si
  40c29a:	xchg   BYTE PTR [ebx+0x618e38b],dl
  40c2a0:	int    0xb0
  40c2a2:	xchg   DWORD PTR [edx+ecx*4+0x6],ebx
  40c2a6:	pop    edx
  40c2a7:	lods   eax,DWORD PTR ds:[esi]
  40c2a8:	cmp    bh,bh
  40c2aa:	inc    ebp
  40c2ab:	push   edi
  40c2ac:	xlat   BYTE PTR ds:[ebx]
  40c2ad:	aas    
  40c2ae:	test   eax,0xc35f814
  40c2b3:	in     eax,dx
  40c2b4:	js     0x40c309
  40c2b6:	adc    DWORD PTR [eax+0x69331570],eax
  40c2bc:	aaa    
  40c2bd:	pop    esp
  40c2be:	jne    0x40c2f1
  40c2c0:	mov    ah,0xa0
  40c2c2:	cwde   
  40c2c3:	inc    esp
  40c2c4:	cbw    
  40c2c6:	pop    ds
  40c2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c8:	lods   eax,DWORD PTR ds:[esi]
  40c2c9:	mov    esi,0x34f7ccd1
  40c2ce:	imul   esi,edx,0x20dab6c5
  40c2d4:	or     bh,BYTE PTR [ecx+0x34]
  40c2d7:	mov    al,0xd
  40c2d9:	mov    eax,ds:0x7f1e19fd
  40c2de:	scas   al,BYTE PTR es:[edi]
  40c2df:	mov    ?,WORD PTR [ebp-0x3fc3b5a8]
  40c2e5:	add    DWORD PTR [ecx],ecx
  40c2e7:	or     BYTE PTR [eax],dh
  40c2e9:	mov    ebx,0x503a726f
  40c2ee:	ror    DWORD PTR [ecx],0x95
  40c2f1:	sub    al,0x9b
  40c2f3:	fwait
  40c2f4:	mov    ds:0x406474ed,al
  40c2f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fa:	call   0x8238:0x64d2dbb9
  40c301:	jns    0x40c338
  40c303:	das    
  40c304:	std    
  40c305:	ins    DWORD PTR es:[edi],dx
  40c306:	in     al,dx
  40c307:	idiv   BYTE PTR [edi]
  40c309:	imul   eax,esi,0x6fd4bfb4
  40c30f:	push   0x6ce3e852
  40c314:	and    BYTE PTR [ecx+0x4f4b99c2],cl
  40c31a:	xor    BYTE PTR [eax],0x79
  40c31d:	je     0x40c2ea
  40c31f:	repz ja 0x40c347
  40c322:	inc    esi
  40c323:	push   ebx
  40c324:	loop   0x40c325
  40c326:	in     al,0x97
  40c328:	cdq    
  40c329:	adc    BYTE PTR [esp+ebp*8],al
  40c32c:	je     0x40c339
  40c32e:	inc    esp
  40c32f:	xor    al,0xb
  40c331:	mov    ebp,0x34ef1555
  40c336:	xchg   cl,dl
  40c338:	xchg   ecx,eax
  40c339:	mov    edi,0xe7fe3fb5
  40c33e:	xchg   ebx,eax
  40c33f:	push   edi
  40c340:	jne    0x40c2f2
  40c342:	dec    edi
  40c343:	mov    BYTE PTR [ebx+0x2d],bh
  40c346:	ss ins BYTE PTR es:[edi],dx
  40c348:	cmp    bl,cl
  40c34a:	inc    ecx
  40c34b:	dec    edx
  40c34c:	push   ebx
  40c34d:	mov    edx,0x5d06373c
  40c352:	xor    DWORD PTR [edi],ecx
  40c354:	cs aam 0xb3
  40c357:	(bad)  
  40c358:	das    
  40c359:	jl     0x40c3bd
  40c35b:	inc    edx
  40c35c:	xor    esp,ebp
  40c35e:	sub    al,0x54
  40c360:	retf   0x1baa
  40c363:	(bad)  
  40c364:	mov    eax,edx
  40c366:	inc    edx
  40c367:	les    ebp,FWORD PTR ds:0x6bf6ae98
  40c36d:	jns    0x40c3b8
  40c36f:	scas   al,BYTE PTR es:[edi]
  40c370:	xor    DWORD PTR ds:0x4dd561c5,ebx
  40c376:	jmp    0xddd6:0x3cc1ab2f
  40c37d:	adc    al,0x4d
  40c37f:	add    al,0x57
  40c381:	inc    ebp
  40c382:	sbb    ch,BYTE PTR [edx+0x0]
  40c385:	push   ds
  40c386:	cmp    BYTE PTR [ecx+eax*8+0x1b],cl
  40c38a:	mul    DWORD PTR [esi+0x30]
  40c38d:	mov    ebp,0x6b5cff7d
  40c392:	adc    DWORD PTR [esi+0x73],eax
  40c395:	or     ah,BYTE PTR [edi+ebp*4]
  40c398:	aaa    
  40c399:	dec    esp
  40c39a:	mov    ecx,0x736544d3
  40c39f:	call   0xbabe:0x7d42fc20
  40c3a6:	sar    DWORD PTR [edi],0x16
  40c3a9:	mov    ah,0x31
  40c3ab:	mov    esp,0xd21d70e5
  40c3b0:	mov    ebp,0xe53b1550
  40c3b5:	(bad)  
  40c3b6:	sbb    ebp,ebx
  40c3b8:	push   ds
  40c3b9:	mov    ds:0x243679a8,eax
  40c3be:	mov    esp,DWORD PTR [ebx+esi*2-0x193b6ade]
  40c3c5:	(bad)  
  40c3c6:	add    al,0x1b
  40c3c8:	loope  0x40c38a
  40c3ca:	adc    DWORD PTR ds:0x30413a70,0x8ed69e67
  40c3d4:	inc    edi
  40c3d5:	mov    eax,ds:0x5af36d1c
  40c3da:	xor    eax,0xb9991830
  40c3df:	es sahf 
  40c3e1:	xchg   edx,eax
  40c3e2:	mov    WORD PTR [esi],es
  40c3e4:	inc    esp
  40c3e5:	gs mov edi,eax
  40c3e8:	ins    DWORD PTR es:[edi],dx
  40c3e9:	enter  0x1141,0x52
  40c3ed:	cmp    DWORD PTR [edi+0x30],eax
  40c3f0:	mov    dl,0x48
  40c3f2:	xchg   ebx,eax
  40c3f3:	std    
  40c3f4:	pop    ecx
  40c3f5:	test   eax,0x12df8db6
  40c3fa:	out    0x13,al
  40c3fc:	lahf   
  40c3fd:	and    esi,DWORD PTR [eax-0x7c]
  40c400:	pop    esi
  40c401:	ror    ebx,cl
  40c403:	das    
  40c404:	jne    0x40c397
  40c406:	leave  
  40c407:	jge    0x40c39a
  40c409:	sbb    DWORD PTR ds:0xde7f7379,esi
  40c40f:	adc    ebx,DWORD PTR [ebx+eax*1+0x29]
  40c413:	sub    eax,0x162cec08
  40c418:	pop    esp
  40c419:	fs and eax,0x1f0f355c
  40c41f:	inc    esi
  40c420:	jno    0x40c3b1
  40c422:	xor    dl,bl
  40c424:	lods   eax,DWORD PTR ds:[esi]
  40c425:	sub    BYTE PTR [ebx+0xa],dh
  40c428:	aad    0x91
  40c42a:	dec    esp
  40c42b:	idiv   DWORD PTR [esi+0x68]
  40c42e:	push   0xffffffaf
  40c430:	(bad)  
  40c432:	call   0xbae:0x92c5784c
  40c439:	jmp    0x40c3f9
  40c43b:	and    BYTE PTR [ecx],cl
  40c43d:	add    dl,BYTE PTR [ebx]
  40c43f:	mov    ch,0xe9
  40c441:	dec    BYTE PTR [edx+0xc29bb2]
  40c447:	add    eax,0x435664a8
  40c44c:	add    al,0xf7
  40c44e:	sbb    dh,ah
  40c450:	sub    DWORD PTR [edx-0x4fcc714e],0x66
  40c457:	shl    BYTE PTR [esi+0x72d89034],cl
  40c45d:	sti    
  40c45e:	jb     0x40c42e
  40c460:	jl     0x40c467
  40c462:	scas   al,BYTE PTR es:[edi]
  40c463:	mov    ds:0x29b033af,al
  40c468:	sub    al,0x2
  40c46a:	mov    al,ds:0x4c8cf46e
  40c46f:	std    
  40c470:	inc    al
  40c472:	je     0x40c433
  40c474:	out    dx,al
  40c475:	ficom  DWORD PTR [eax+0x3c269d46]
  40c47b:	jmp    0xc779:0xb92b43
  40c482:	imul   eax,DWORD PTR [ecx+0x39],0x8c1f3848
  40c489:	cld    
  40c48a:	das    
  40c48b:	jmp    0x40c4dd
  40c48d:	adc    bh,cl
  40c48f:	dec    edx
  40c490:	push   esp
  40c491:	mov    ds:0xdfdab6f5,al
  40c496:	popa   
  40c497:	fldcw  WORD PTR ds:0xc7e58329
  40c49d:	mov    WORD PTR [edx-0x6f],?
  40c4a0:	and    DWORD PTR [ebx],ebx
  40c4a2:	loope  0x40c48e
  40c4a4:	xor    dh,BYTE PTR [edx+0x3d45c01c]
  40c4aa:	dec    esi
  40c4ab:	(bad)  
  40c4ac:	sub    DWORD PTR [ebp+0xd],esi
  40c4af:	(bad)  
  40c4b0:	and    eax,0xe5bb5a1b
  40c4b5:	xor    ch,al
  40c4b7:	hlt    
  40c4b8:	leave  
  40c4b9:	and    eax,0x8b9e1aa8
  40c4be:	outs   dx,DWORD PTR ds:[esi]
  40c4bf:	pop    ds
  40c4c0:	inc    esi
  40c4c1:	mov    edx,0x5f957197
  40c4c6:	or     eax,DWORD PTR [ecx+0x71]
  40c4c9:	sub    ch,BYTE PTR [edx]
  40c4cb:	arpl   WORD PTR [edx+0x23],sp
  40c4ce:	mov    esi,DWORD PTR [ecx+0x7faaef05]
  40c4d4:	lods   al,BYTE PTR ds:[esi]
  40c4d5:	inc    ebx
  40c4d6:	retf   0x16f8
  40c4d9:	dec    edx
  40c4da:	rol    DWORD PTR [esi+0x77eb5d1e],cl
  40c4e0:	xor    ecx,edi
  40c4e2:	pop    ecx
  40c4e3:	mov    esp,esi
  40c4e5:	ffreep st(7)
  40c4e7:	gs mov dh,0x38
  40c4ea:	xchg   ebp,eax
  40c4eb:	jmp    0xdb9f2ff1
  40c4f0:	vpcmpeqb xmm1,xmm4,XMMWORD PTR [edi]
  40c4f4:	scas   eax,DWORD PTR es:[edi]
  40c4f5:	xlat   BYTE PTR ds:[ebx]
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	out    0xd8,eax
  40c541:	xor    al,0x8e
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	enter  0xe62,0x48
  40c54f:	scas   eax,DWORD PTR es:[edi]
  40c550:	pushf  
  40c551:	ror    BYTE PTR [ebx],cl
  40c553:	pop    ds
  40c554:	push   ecx
  40c555:	fsubr  QWORD PTR [edi+eiz*2+0x11]
  40c559:	fcomi  st,st(5)
  40c55b:	call   0xdec5:0x402d4f5b
  40c562:	icebp  
  40c563:	add    DWORD PTR [edi-0x7f],ebp
  40c566:	pop    edx
  40c567:	xchg   esp,eax
  40c568:	dec    ebx
  40c569:	push   edx
  40c56a:	add    BYTE PTR ds:0xe4f0dfbc,bl
  40c570:	pop    es
  40c571:	lea    edx,[edx+0x6c125a10]
  40c577:	(bad)  
  40c578:	iret   
  40c579:	loop   0x40c5b8
  40c57b:	mov    esi,0x8fca41df
  40c580:	bound  edi,QWORD PTR [edi]
  40c582:	sub    eax,0x1aba03fc
  40c587:	adc    al,0x13
  40c589:	outs   dx,DWORD PTR ds:[esi]
  40c58a:	mov    ecx,edi
  40c58c:	dec    esp
  40c58d:	or     DWORD PTR [ebp-0x20],esi
  40c590:	js     0x40c515
  40c592:	add    dh,BYTE PTR [ebp-0x52]
  40c595:	mov    cl,0x4
  40c597:	aas    
  40c598:	dec    esi
  40c599:	or     BYTE PTR [edi],al
  40c59b:	icebp  
  40c59c:	xchg   ecx,eax
  40c59d:	mov    edi,0xa2a5a03f
  40c5a2:	xchg   ecx,eax
  40c5a3:	fcmovb st,st(1)
  40c5a5:	jmp    0x401397d8
  40c5aa:	bt     DWORD PTR [ecx+0x12],edi
  40c5ae:	xchg   ebx,eax
  40c5af:	xchg   esp,eax
  40c5b0:	inc    ebx
  40c5b1:	xchg   ebp,eax
  40c5b2:	inc    edi
  40c5b3:	mov    bl,0x89
  40c5b5:	push   eax
  40c5b6:	shl    cl,1
  40c5b8:	fnstcw WORD PTR [ebx]
  40c5ba:	mov    ah,BYTE PTR [eax+0x62]
  40c5bd:	jne    0x40c5b2
  40c5bf:	mov    eax,ds:0xe3136eb6
  40c5c4:	xor    BYTE PTR [eax+ebx*4+0x7c],dl
  40c5c8:	cld    
  40c5c9:	mov    DWORD PTR [esi],esi
  40c5cb:	jle    0x40c5f5
  40c5cd:	cs inc ebx
  40c5cf:	mov    BYTE PTR [esi],al
  40c5d1:	push   es
  40c5d2:	mov    ch,BYTE PTR [edx]
  40c5d4:	inc    ecx
  40c5d5:	cmp    esi,DWORD PTR [edi+0x7b]
  40c5d8:	pushf  
  40c5d9:	and    DWORD PTR [esi],esp
  40c5db:	jmp    0x40c57d
  40c5dd:	cmc    
  40c5de:	std    
  40c5df:	aas    
  40c5e0:	popf   
  40c5e1:	jns    0x40c650
  40c5e3:	push   0x5a9933dd
  40c5e8:	iret   
  40c5e9:	faddp  st(1),st
  40c5eb:	push   ds
  40c5ec:	dec    eax
  40c5ed:	dec    ebx
  40c5ee:	jmp    0x40c571
  40c5f0:	stos   BYTE PTR es:[edi],al
  40c5f1:	mov    ebx,0x6307613f
  40c5f6:	adc    BYTE PTR [edx+0x76e7a302],al
  40c5fc:	mov    cr6,ebx
  40c5ff:	cmp    ah,BYTE PTR [edi+0x25]
  40c602:	inc    esi
  40c603:	out    dx,eax
  40c604:	mov    dl,BYTE PTR [ecx-0x68885192]
  40c60a:	or     cl,ch
  40c60c:	jb     0x40c685
  40c60e:	daa    
  40c60f:	push   edx
  40c610:	push   edx
  40c611:	push   ecx
  40c612:	cli    
  40c613:	shl    BYTE PTR [ebp-0x45],cl
  40c616:	add    eax,0xc15bd0a3
  40c61b:	mov    ah,0x18
  40c61d:	sbb    eax,0x24828080
  40c622:	pop    DWORD PTR [ebp-0x15]
  40c625:	adc    bl,BYTE PTR [eax]
  40c627:	dec    ebp
  40c628:	outs   dx,DWORD PTR ds:[esi]
  40c629:	loop   0x40c64d
  40c62b:	xchg   esi,eax
  40c62c:	pmaddwd mm2,QWORD PTR [ecx-0x7b]
  40c630:	pop    esp
  40c631:	lock add al,0x40
  40c634:	popa   
  40c635:	or     eax,0xe9866307
  40c63a:	cmp    al,0xe7
  40c63c:	dec    ecx
  40c63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63e:	mov    cl,0x89
  40c640:	ss inc esp
  40c642:	add    BYTE PTR [esi-0x84928fc],ah
  40c648:	ds daa 
  40c64a:	and    eax,0x32b8d4ec
  40c64f:	xchg   ebx,eax
  40c650:	cdq    
  40c651:	dec    ecx
  40c652:	adc    edx,DWORD PTR [ebp-0x24db9c02]
  40c658:	aas    
  40c659:	push   ecx
  40c65a:	cld    
  40c65b:	data16 jg 0x40c6a4
  40c65e:	dec    esp
  40c65f:	mov    al,0x87
  40c661:	loope  0x40c645
  40c663:	les    ebp,FWORD PTR [ebx-0x72ee56d9]
  40c669:	shl    al,cl
  40c66b:	sbb    DWORD PTR [edi-0x17],eax
  40c66e:	jbe    0x40c69e
  40c670:	cmp    al,0xbc
  40c672:	mov    bh,0x6
  40c674:	femms  
  40c676:	xlat   BYTE PTR ds:[ebx]
  40c677:	mov    dh,0xfe
  40c679:	pop    edi
  40c67a:	xchg   ebp,eax
  40c67b:	inc    DWORD PTR [eax]
  40c67d:	or     eax,0x2c5076c6
  40c682:	out    0x87,eax
  40c684:	jge    0x40c66c
  40c686:	xchg   DWORD PTR [edx-0x2d1a7994],ecx
  40c68c:	aad    0x6
  40c68e:	pusha  
  40c68f:	ss cmp ah,dh
  40c692:	jae    0x40c668
  40c694:	sbb    esi,ebx
  40c696:	ret    0x9e09
  40c699:	sbb    ecx,DWORD PTR [eax+ebp*8-0x51]
  40c69d:	shr    DWORD PTR [edx-0x40b36943],1
  40c6a3:	and    BYTE PTR [esi],bl
  40c6a5:	stos   BYTE PTR es:[edi],al
  40c6a6:	push   es
  40c6a7:	mov    ds:0x411d5bc3,al
  40c6ac:	cli    
  40c6ad:	in     eax,dx
  40c6ae:	enter  0xa7df,0xe5
  40c6b2:	test   edi,esi
  40c6b4:	mov    DWORD PTR [edi],ebp
  40c6b6:	cmp    al,0x95
  40c6b8:	lahf   
  40c6b9:	mov    ds:0x996a333a,eax
  40c6be:	test   BYTE PTR [esi+ecx*4-0x54fcc5cd],0x78
  40c6c6:	inc    esp
  40c6c7:	jmp    0x1096d20
  40c6cc:	pop    esi
  40c6cd:	ficomp WORD PTR [eax-0x3cae6d05]
  40c6d3:	out    dx,al
  40c6d4:	(bad)  
  40c6d5:	mov    esp,0xe431e444
  40c6da:	fidivr WORD PTR [ecx-0x72c0b35e]
  40c6e0:	sub    bl,al
  40c6e2:	sbb    al,0x76
  40c6e4:	pushf  
  40c6e5:	je     0x40c6f6
  40c6e7:	sahf   
  40c6e8:	(bad)  
  40c6e9:	adc    eax,0xd95ce069
  40c6ee:	sbb    DWORD PTR [esi+0x35aaa29b],eax
  40c6f4:	mov    ?,WORD PTR [ebx-0x2faa7e85]
  40c6fa:	lds    edx,FWORD PTR [esi-0x5375ef35]
  40c700:	jmp    0x242f:0x48fa0f99
  40c707:	xchg   ebp,eax
  40c708:	adc    eax,0x85fcc6bc
  40c70d:	int3   
  40c70e:	cld    
  40c70f:	sbb    eax,0x827bb9b2
  40c714:	or     al,dl
  40c716:	ins    DWORD PTR es:[edi],dx
  40c717:	pop    es
  40c718:	pop    edx
  40c719:	inc    esp
  40c71a:	retf   
  40c71b:	(bad)  
  40c71c:	cmp    eax,DWORD PTR [ebx]
  40c71e:	sub    al,al
  40c720:	repnz push esi
  40c722:	rcr    DWORD PTR [edi+0x3d],0x2b
  40c726:	pop    edx
  40c727:	aad    0x6
  40c729:	mov    ecx,0xc295977f
  40c72e:	push   ebx
  40c72f:	xor    cl,BYTE PTR [edx-0x5c]
  40c732:	inc    esp
  40c733:	enter  0x3c24,0x2c
  40c737:	cwde   
  40c738:	mov    eax,0x87c8fa9c
  40c73d:	out    0xa4,eax
  40c73f:	iret   
  40c740:	dec    edi
  40c741:	hlt    
  40c742:	sbb    al,0x6e
  40c744:	inc    ebx
  40c745:	and    al,0xdd
  40c747:	jmp    0x9e6b:0x59989641
  40c74e:	in     eax,0x16
  40c750:	and    DWORD PTR [esi],edi
  40c752:	and    al,0x1d
  40c754:	inc    edi
  40c755:	dec    ebp
  40c756:	mov    ecx,0xaf50665
  40c75b:	sar    BYTE PTR [esi],cl
  40c75d:	jno    0x40c7c1
  40c75f:	arpl   WORD PTR [ecx-0x511c326],cx
  40c765:	int    0x5c
  40c767:	pop    edx
  40c768:	mov    ch,0x2e
  40c76a:	and    ecx,DWORD PTR [esi+eax*8+0x218ccce1]
  40c771:	jp     0x40c70c
  40c773:	or     eax,DWORD PTR [eax]
  40c775:	cdq    
  40c776:	adc    eax,0xe40106d9
  40c77b:	ins    WORD PTR es:[edi],dx
  40c77d:	and    cl,BYTE PTR [eax+edi*4]
  40c780:	jo     0x40c788
  40c782:	mov    DWORD PTR [edi],eax
  40c784:	push   ss
  40c785:	or     al,0x54
  40c787:	push   esp
  40c788:	mul    esp
  40c78a:	not    BYTE PTR [edx+0x512234a2]
  40c790:	int3   
  40c791:	mov    ch,0x86
  40c793:	cmp    BYTE PTR [eax-0x70a32206],bh
  40c799:	xchg   esi,eax
  40c79a:	inc    esi
  40c79b:	std    
  40c79c:	ror    BYTE PTR [edx+0x3732238d],1
  40c7a2:	lea    ecx,[ebp-0x20]
  40c7a5:	pop    edi
  40c7a6:	popa   
  40c7a7:	sub    DWORD PTR [edx-0x3f4e2fd9],ebx
  40c7ad:	push   edi
  40c7ae:	mov    dl,ah
  40c7b0:	stc    
  40c7b1:	jns    0x40c73c
  40c7b3:	neg    DWORD PTR [ecx-0x71c3d7b5]
  40c7b9:	dec    ecx
  40c7ba:	pop    ds
  40c7bb:	pop    ebp
  40c7bc:	popf   
  40c7bd:	arpl   WORD PTR [esi-0x2d],si
  40c7c0:	mov    ah,0x25
  40c7c2:	fst    QWORD PTR [ebp-0x62]
  40c7c5:	je     0x40c7d9
  40c7c7:	jnp    0x40c838
  40c7c9:	popa   
  40c7ca:	mov    WORD PTR [eax+0x3a],fs
  40c7cd:	jnp    0x40c756
  40c7cf:	cmp    ah,BYTE PTR [edi+ecx*1-0x153ef7c1]
  40c7d6:	dec    edx
  40c7d7:	sub    bh,ah
  40c7d9:	cmp    eax,0xc41d0c2a
  40c7de:	(bad)  
  40c7df:	push   ebp
  40c7e0:	add    BYTE PTR [ecx+0x1e],ch
  40c7e3:	icebp  
  40c7e4:	dec    edi
  40c7e5:	call   0xaaca97ad
  40c7ea:	int    0xbc
  40c7ec:	sbb    eax,0xb84db87d
  40c7f1:	xchg   esi,eax
  40c7f2:	(bad)  
  40c7f3:	adc    DWORD PTR [eax],eax
  40c7f5:	xchg   ebp,eax
  40c7f6:	pop    edx
  40c7f7:	mov    ah,BYTE PTR [ebx+0x1b]
  40c7fa:	loopne 0x40c7a5
  40c7fc:	(bad)  
  40c7fd:	dec    ebx
  40c7fe:	pusha  
  40c7ff:	mov    ah,ch
  40c801:	enter  0xccb,0x9f
  40c805:	inc    edi
  40c806:	sbb    al,0x5d
  40c808:	and    edx,DWORD PTR [esi+eiz*1+0x2e]
  40c80c:	jecxz  0x40c819
  40c80e:	clc    
  40c80f:	ret    0xb8d4
  40c812:	xchg   ecx,eax
  40c813:	inc    ecx
  40c814:	adc    BYTE PTR [ebx+0x31bf164a],dl
  40c81a:	jmp    0xf564:0xd280d95b
  40c821:	cmp    al,0x13
  40c823:	cmp    BYTE PTR [ebx],0x1b
  40c826:	and    BYTE PTR ds:0x7f4adf55,ah
  40c82c:	mov    ebp,0x70aa6fe8
  40c831:	push   es
  40c832:	cmp    edi,DWORD PTR [ecx]
  40c834:	cmp    ah,ch
  40c836:	popa   
  40c837:	mov    esi,0x74f8767d
  40c83c:	call   0x7ac9:0xed1fbf67
  40c843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c844:	js     0x40c897
  40c846:	adc    esi,DWORD PTR [eax]
  40c848:	sub    DWORD PTR [eax+0x7c],esi
  40c84b:	push   edx
  40c84c:	push   esp
  40c84d:	inc    ebp
  40c84e:	xor    eax,0x8b05ed99
  40c853:	xchg   esp,eax
  40c854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c855:	push   es
  40c856:	(bad)  
  40c858:	jmp    0xcfd1:0xcd37b74c
  40c85f:	xchg   edi,eax
  40c860:	or     dl,0x35
  40c863:	xchg   DWORD PTR [edi+0x4e],esp
  40c866:	imul   eax,DWORD PTR [esi-0x57],0xd0a3f2da
  40c86d:	scas   al,BYTE PTR es:[edi]
  40c86e:	(bad)  
  40c86f:	pop    edx
  40c870:	dec    eax
  40c871:	out    dx,al
  40c872:	mov    bh,0x22
  40c874:	loopne 0x40c8c1
  40c876:	rcr    DWORD PTR [esi-0x62],cl
  40c879:	add    ch,BYTE PTR [edi]
  40c87b:	push   eax
  40c87c:	mov    ds:0x4d84b6ed,al
  40c881:	outs   dx,DWORD PTR ds:[esi]
  40c882:	scas   al,BYTE PTR es:[edi]
  40c883:	loop   0x40c820
  40c885:	shr    DWORD PTR [edx+0xae930c8],0xd1
  40c88c:	hlt    
  40c88d:	sub    esi,ecx
  40c88f:	ja     0x40c8b0
  40c891:	fld    st(7)
  40c893:	lock jns 0x40c905
  40c896:	jbe    0x40c8fd
  40c898:	cmp    dl,bh
  40c89a:	or     dh,BYTE PTR [eax-0x57b293bb]
  40c8a0:	test   eax,0x4ce826f9
  40c8a5:	cmp    al,0x89
  40c8a7:	aaa    
  40c8a8:	into   
  40c8a9:	sahf   
  40c8aa:	inc    ecx
  40c8ab:	test   eax,0xf6afda31
  40c8b0:	cs iret 
  40c8b2:	xor    ecx,esi
  40c8b4:	xor    ecx,esp
  40c8b6:	cs mov ch,0xaf
  40c8b9:	dec    ecx
  40c8ba:	xchg   edi,eax
  40c8bb:	xchg   ebp,eax
  40c8bc:	fs xchg ecx,eax
  40c8be:	clc    
  40c8bf:	cmp    ah,BYTE PTR [ebx-0x27]
  40c8c2:	pop    eax
  40c8c3:	leave  
  40c8c4:	mov    edx,0x13c6ee72
  40c8c9:	rol    dl,1
  40c8cb:	mov    ebp,0xf7dee03a
  40c8d0:	mov    ?,WORD PTR [ecx+ebx*8+0x771211cb]
  40c8d7:	add    bl,dh
  40c8d9:	inc    edi
  40c8da:	jo     0x40c8e7
  40c8dc:	icebp  
  40c8dd:	scas   eax,DWORD PTR es:[edi]
  40c8de:	inc    ebp
  40c8df:	out    0x1,eax
  40c8e1:	cmp    ch,BYTE PTR [ebx+0x54]
  40c8e4:	shl    BYTE PTR [esi-0x512bc7d0],1
  40c8ea:	or     bl,dh
  40c8ec:	xor    BYTE PTR [ebx],bl
  40c8ee:	fwait
  40c8ef:	sbb    edi,edx
  40c8f1:	nop
  40c8f2:	(bad)  
  40c8f3:	imul   BYTE PTR [edx+0xb3e15f0]
  40c8f9:	pop    esi
  40c8fa:	cdq    
  40c8fb:	mov    bl,0x68
  40c8fd:	pop    ebx
  40c8fe:	add    BYTE PTR [ecx+0x2f1e6bc8],0x85
  40c905:	fs mov edx,ss
  40c908:	mov    al,BYTE PTR [edi]
  40c90a:	sbb    BYTE PTR [eax],0xad
  40c90d:	adc    edi,ecx
  40c90f:	ins    BYTE PTR es:[edi],dx
  40c910:	scas   al,BYTE PTR es:[edi]
  40c911:	mov    edx,0x93870e70
  40c916:	pop    esp
  40c917:	jp     0x40c931
  40c919:	mov    BYTE PTR [ebx+0x764f1846],bl
  40c91f:	sti    
  40c920:	aaa    
  40c921:	sub    eax,0x15affda0
  40c926:	jo     0x40c93d
  40c928:	leave  
  40c929:	leave  
  40c92a:	out    0xbf,al
  40c92c:	or     eax,edx
  40c92e:	jbe    0x40c8f6
  40c930:	pop    ecx
  40c931:	mov    ah,0xdf
  40c933:	and    eax,0x9978e366
  40c938:	xor    ecx,eax
  40c93a:	std    
  40c93b:	cmp    dh,dl
  40c93d:	jns    0x40c94a
  40c93f:	dec    edi
  40c940:	inc    bx
  40c942:	sub    al,0x47
  40c944:	mov    DWORD PTR [ebx],eax
  40c946:	push   ebp
  40c947:	in     al,dx
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	paddsw mm0,QWORD PTR [esi-0x6d35dc54]
  40c9a4:	jle    0x40ca24
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	ficom  DWORD PTR [edx]
  40c9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ad:	inc    eax
  40c9ae:	stos   BYTE PTR es:[edi],al
  40c9af:	inc    eax
  40c9b0:	mov    dh,0x20
  40c9b2:	xchg   DWORD PTR [esi+0x5f],ebx
  40c9b5:	xor    al,0x7c
  40c9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b8:	mov    ebx,0xd8695ba9
  40c9bd:	cli    
  40c9be:	test   al,0xa7
  40c9c0:	inc    ecx
  40c9c1:	loop   0x40c95a
  40c9c3:	adc    al,0x1f
  40c9c5:	inc    DWORD PTR [esi]
  40c9c7:	jp     0x40c988
  40c9c9:	imul   edi,DWORD PTR [esi-0x77ab4086],0xf8b2c451
  40c9d3:	imul   edx,DWORD PTR [edx+ecx*4-0x13],0xffffff95
  40c9d8:	inc    ebx
  40c9d9:	retf   
  40c9da:	inc    BYTE PTR [ebp-0x78d0018]
  40c9e0:	sub    BYTE PTR [edi-0x2e],0x5f
  40c9e4:	dec    ecx
  40c9e5:	mov    edx,DWORD PTR [eax]
  40c9e7:	sub    BYTE PTR gs:[edx+0x3d1951a5],dl
  40c9ee:	imul   ebx,DWORD PTR [esi+0x35],0x26
  40c9f2:	jns    0x40ca39
  40c9f4:	clc    
  40c9f5:	jp     0x40c9f1
  40c9f7:	in     al,dx
  40c9f8:	pop    edx
  40c9f9:	int    0x47
  40c9fb:	rcr    BYTE PTR [ebx-0x72702675],cl
  40ca01:	add    ebp,edi
  40ca03:	ins    BYTE PTR es:[edi],dx
  40ca04:	(bad)  
  40ca05:	scas   eax,DWORD PTR es:[edi]
  40ca06:	ins    BYTE PTR es:[edi],dx
  40ca07:	(bad)  
  40ca08:	pushf  
  40ca09:	jnp    0x40c9a8
  40ca0b:	cmp    eax,0x1710b72
  40ca10:	not    DWORD PTR [edi]
  40ca12:	(bad)  
  40ca13:	popa   
  40ca14:	or     BYTE PTR [edx+esi*8-0x2ecac07e],cl
  40ca1b:	jo     0x40ca17
  40ca1d:	push   0x4a2e495
  40ca22:	cli    
  40ca23:	sub    BYTE PTR [ebp+0x24],bl
  40ca26:	idiv   BYTE PTR [ebp-0x41]
  40ca29:	xor    BYTE PTR [eax-0x71],0x8f
  40ca2d:	std    
  40ca2e:	add    DWORD PTR [ecx],esi
  40ca30:	in     al,0x62
  40ca32:	adc    al,0x73
  40ca34:	jmp    0x505f:0x1b1b9e2b
  40ca3b:	xchg   esi,eax
  40ca3c:	(bad)  
  40ca3d:	lea    esi,[edx+0x5b]
  40ca40:	or     edx,ecx
  40ca42:	xchg   ebx,eax
  40ca43:	fmul   DWORD PTR [edx]
  40ca45:	les    ebx,FWORD PTR ds:0x4d0555cc
  40ca4b:	jae    0x40caa6
  40ca4d:	pop    ecx
  40ca4e:	adc    cl,BYTE PTR [edx+0x7f3487c1]
  40ca54:	xchg   cl,bl
  40ca56:	or     bl,al
  40ca58:	lods   eax,DWORD PTR ds:[esi]
  40ca59:	cmp    BYTE PTR [eax],ch
  40ca5b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ca5d:	and    DWORD PTR [esi-0x39],0x6c578188
  40ca64:	sbb    BYTE PTR [ecx-0x44290894],0x37
  40ca6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca6c:	xchg   ebp,eax
  40ca6d:	mov    bl,BYTE PTR ds:0x2dc663ef
  40ca73:	nop
  40ca74:	retf   
  40ca75:	and    esp,edx
  40ca77:	mov    dh,0x83
  40ca79:	data16 mov dl,0x9b
  40ca7c:	(bad)  
  40ca7d:	fisubr DWORD PTR ds:0xff1195d6
  40ca83:	call   0xc515:0xcf52dbf1
  40ca8a:	push   ebp
  40ca8b:	in     eax,0x7e
  40ca8d:	or     dh,BYTE PTR [ebp-0x6a7048bf]
  40ca93:	adc    BYTE PTR [ebx+0x6842539f],al
  40ca99:	fs inc ebp
  40ca9b:	mov    WORD PTR [edi+0x33],es
  40ca9e:	imul   esi,DWORD PTR [eax-0x5c],0xffffffa6
  40caa2:	sti    
  40caa3:	dec    ecx
  40caa4:	cmp    bh,BYTE PTR [edx+0xf]
  40caa7:	xchg   esi,eax
  40caa8:	std    
  40caa9:	enter  0x8a95,0xd
  40caad:	jg     0x40cad8
  40caaf:	in     eax,dx
  40cab0:	mov    ds:0x32c6f259,eax
  40cab5:	popa   
  40cab6:	call   FWORD PTR [ebp*1-0x34022131]
  40cabd:	pop    esp
  40cabe:	or     DWORD PTR [esi],eax
  40cac0:	mov    ecx,0x5428de20
  40cac5:	fsub   QWORD PTR [esi]
  40cac7:	popa   
  40cac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac9:	ins    DWORD PTR es:[edi],dx
  40caca:	ins    BYTE PTR es:[edi],dx
  40cacb:	and    esp,DWORD PTR [edi-0x2f]
  40cace:	sub    dl,BYTE PTR [ebx+0x6c76cb93]
  40cad4:	adc    dh,dl
  40cad6:	ss data16 aas 
  40cad9:	sar    BYTE PTR [eax],0x39
  40cadc:	out    0x58,al
  40cade:	shl    BYTE PTR [edx+0xc],cl
  40cae1:	rol    BYTE PTR [ecx+ebx*2+0x10],0x73
  40cae6:	test   eax,0x3253fcac
  40caeb:	mov    cl,0x58
  40caed:	lods   al,BYTE PTR ds:[esi]
  40caee:	xor    DWORD PTR [edx+0x73189289],0xf6488770
  40caf8:	or     eax,0x8e88d9ef
  40cafd:	repz push ebx
  40caff:	jg     0x40cb3b
  40cb01:	(bad)  
  40cb02:	xchg   edx,eax
  40cb03:	lock out dx,eax
  40cb05:	stc    
  40cb06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb07:	test   eax,0x10bb4da0
  40cb0c:	in     al,0x5d
  40cb0e:	es shl dh,cl
  40cb11:	lods   al,BYTE PTR ds:[esi]
  40cb12:	mov    esi,0x5bb8c285
  40cb17:	push   ebp
  40cb18:	imul   ecx,DWORD PTR [ecx+0x1377a9c9],0xffffffcf
  40cb1f:	call   0x2113:0xb7a006b6
  40cb26:	ins    BYTE PTR es:[edi],dx
  40cb27:	addr16 mov ah,0x4e
  40cb2a:	mov    WORD PTR [esi+0x12644046],fs
  40cb30:	in     al,dx
  40cb31:	loope  0x40cb31
  40cb33:	mov    bh,0x99
  40cb35:	(bad)  
  40cb36:	jg     0x40cb17
  40cb38:	xchg   edx,eax
  40cb39:	mov    ecx,0x2d106883
  40cb3e:	dec    edi
  40cb3f:	add    edi,DWORD PTR [eax]
  40cb41:	adc    al,0xb8
  40cb43:	mov    ecx,0x2bac45ca
  40cb48:	lods   eax,DWORD PTR ds:[esi]
  40cb49:	in     al,dx
  40cb4a:	push   eax
  40cb4b:	pop    edi
  40cb4c:	jae    0x40cb02
  40cb4e:	dec    eax
  40cb4f:	aad    0xac
  40cb51:	in     eax,dx
  40cb52:	xor    BYTE PTR ds:0x38070cf0,cl
  40cb58:	mov    esi,0xa92eca8c
  40cb5d:	xchg   edx,eax
  40cb5e:	inc    ecx
  40cb5f:	pusha  
  40cb60:	jle    0x40cb39
  40cb62:	es pop ss
  40cb64:	sbb    eax,0xb07a5dcc
  40cb69:	xor    ebx,DWORD PTR [ebx+0x6de053cd]
  40cb6f:	retf   
  40cb70:	scas   al,BYTE PTR es:[edi]
  40cb71:	xchg   DWORD PTR [edi-0x5c7b681],esp
  40cb77:	outs   dx,DWORD PTR ds:[esi]
  40cb78:	test   DWORD PTR [esp+ebp*8],esp
  40cb7b:	pop    esi
  40cb7c:	xor    DWORD PTR [esi],ecx
  40cb7e:	adc    BYTE PTR [edi],cl
  40cb80:	or     ecx,ecx
  40cb82:	cld    
  40cb83:	mov    ah,0xd5
  40cb85:	xor    DWORD PTR [ecx+0x58],ebx
  40cb88:	jl     0x40cbce
  40cb8a:	dec    ecx
  40cb8b:	sti    
  40cb8c:	xchg   esp,eax
  40cb8d:	sub    BYTE PTR [esi],bh
  40cb8f:	mov    ebp,0x11c365ce
  40cb94:	add    ebp,DWORD PTR [eax-0x61]
  40cb97:	inc    edx
  40cb98:	inc    eax
  40cb99:	or     al,0x1b
  40cb9b:	in     al,dx
  40cb9c:	cmp    eax,0xf57c314d
  40cba1:	sbb    ebx,DWORD PTR [edx+0x79]
  40cba4:	xor    BYTE PTR [ebp-0xc3ceca1],dh
  40cbaa:	sub    al,BYTE PTR ds:0x5bb7
  40cbaf:	lods   eax,DWORD PTR ds:[esi]
  40cbb0:	out    0x23,al
  40cbb2:	mov    ecx,0xa51bd57
  40cbb7:	adc    eax,DWORD PTR [eax+0x28837fba]
  40cbbd:	loop   0x40cbd3
  40cbbf:	mov    ds:0x1beb7f39,al
  40cbc4:	sbb    al,0xdc
  40cbc6:	loop   0x40cba6
  40cbc8:	push   es
  40cbc9:	mov    ds:0x2b652f59,al
  40cbce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbcf:	adc    cl,BYTE PTR [esi-0x22]
  40cbd2:	ins    BYTE PTR es:[edi],dx
  40cbd3:	or     edi,DWORD PTR [ebx]
  40cbd5:	lea    ebx,[ebx]
  40cbd7:	mov    ah,0xc5
  40cbd9:	scas   al,BYTE PTR es:[edi]
  40cbda:	and    al,0x8a
  40cbdc:	inc    edx
  40cbdd:	imul   ecx,DWORD PTR [esi+0x71],0xfffffff2
  40cbe1:	cld    
  40cbe2:	fldenv [ebx]
  40cbe4:	shl    BYTE PTR [edx+0x121bd4ae],1
  40cbea:	xchg   esp,eax
  40cbeb:	je     0x40cb73
  40cbed:	sub    eax,DWORD PTR [ecx-0x4]
  40cbf0:	xchg   ch,bl
  40cbf2:	mov    DWORD PTR [esi+0x2cd8e5a],edx
  40cbf8:	repz inc ecx
  40cbfa:	inc    ecx
  40cbfb:	and    DWORD PTR [eax+esi*2-0x206d5cad],ebp
  40cc02:	test   DWORD PTR [ecx+0x69b0a1d7],0x9cc4ea84
  40cc0c:	push   cs
  40cc0d:	out    0x9e,al
  40cc0f:	sub    esp,DWORD PTR [edx-0x78]
  40cc12:	jmp    0x1c04:0xeb345416
  40cc19:	cmp    edi,DWORD PTR [ecx+0xdb61c43]
  40cc1f:	mov    ah,0xb3
  40cc21:	jmp    0xffb:0x6e7967b6
  40cc28:	dec    ebp
  40cc29:	ret    
  40cc2a:	into   
  40cc2b:	retf   
  40cc2c:	xlat   BYTE PTR ds:[ebx]
  40cc2d:	mov    eax,ds:0xcd742304
  40cc32:	jg     0x40cca8
  40cc34:	and    ebp,DWORD PTR gs:0xc339933a
  40cc3b:	or     edi,ebp
  40cc3d:	inc    eax
  40cc3e:	sbb    dh,BYTE PTR [ecx+0x1]
  40cc41:	xor    cl,ch
  40cc43:	lock ss adc al,0x35
  40cc47:	pop    edi
  40cc48:	cld    
  40cc49:	cmp    dh,ch
  40cc4b:	in     al,dx
  40cc4c:	xchg   edx,eax
  40cc4d:	jne    0x40cc6e
  40cc4f:	mov    bl,0x88
  40cc51:	repnz inc ebx
  40cc53:	enter  0xdc35,0x8d
  40cc57:	mov    ss,ecx
  40cc59:	cdq    
  40cc5a:	shl    bl,0x51
  40cc5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc5e:	mov    bl,bl
  40cc60:	aas    
  40cc61:	jbe    0x40ccbb
  40cc63:	jae    0x40cc2b
  40cc65:	(bad)  [ebx+0x6172c708]
  40cc6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc6c:	fld    TBYTE PTR [ebx]
  40cc6e:	add    DWORD PTR [edx-0x1c8da907],ecx
  40cc74:	shl    BYTE PTR [esi+0x4f],cl
  40cc77:	sub    BYTE PTR [ecx],cl
  40cc79:	adc    DWORD PTR [edx],eax
  40cc7b:	adc    edx,edi
  40cc7d:	mov    DWORD PTR [ebx-0x532261b1],ecx
  40cc83:	xchg   ebx,eax
  40cc84:	push   edi
  40cc85:	aad    0x2f
  40cc87:	popa   
  40cc88:	fprem1 
  40cc8a:	(bad)  
  40cc8b:	out    0x5e,al
  40cc8d:	push   edi
  40cc8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc8f:	lock mov bh,0x38
  40cc92:	lahf   
  40cc93:	add    eax,0x75d017cc
  40cc98:	scas   eax,DWORD PTR es:[edi]
  40cc99:	xlat   BYTE PTR ds:[ebx]
  40cc9a:	xchg   edi,eax
  40cc9b:	jnp    0x40ccb2
  40cc9d:	cli    
  40cc9e:	push   eax
  40cc9f:	pop    ecx
  40cca0:	(bad)  
  40cca1:	jmp    0xc5835c97
  40cca6:	add    al,0xf
  40cca8:	or     eax,0xaae8802
  40ccad:	les    edi,FWORD PTR [ebp+0xf]
  40ccb0:	adc    bh,BYTE PTR [esi*8+0x34ccf6cb]
  40ccb7:	mov    ds:0x95383f1d,eax
  40ccbc:	jae    0x40ccb4
  40ccbe:	dec    eax
  40ccbf:	fcom   QWORD PTR [eax-0x2d7eabc4]
  40ccc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccc6:	fwait
  40ccc7:	ins    BYTE PTR es:[edi],dx
  40ccc8:	mov    ecx,0xb516dd5b
  40cccd:	inc    ecx
  40ccce:	cmp    BYTE PTR [edi-0x73],0x7c
  40ccd2:	and    ch,0xbd
  40ccd5:	mov    bl,0x8b
  40ccd7:	xchg   ebx,eax
  40ccd8:	dec    esi
  40ccd9:	add    ch,BYTE PTR [edx-0x27739c8a]
  40ccdf:	hlt    
  40cce0:	sbb    DWORD PTR [eax],esi
  40cce2:	loop   0x40ccf3
  40cce4:	or     al,0x1f
  40cce6:	xor    cl,al
  40cce8:	inc    esi
  40cce9:	cli    
  40ccea:	or     dh,ah
  40ccec:	xchg   edx,eax
  40cced:	mov    ds:0x2d5021c5,al
  40ccf2:	or     dl,dh
  40ccf4:	in     al,0xf9
  40ccf6:	sahf   
  40ccf7:	push   esi
  40ccf8:	fcomp  DWORD PTR [edx+0x58]
  40ccfb:	in     eax,dx
  40ccfc:	xlat   BYTE PTR ds:[ebx]
  40ccfd:	lahf   
  40ccfe:	mov    eax,0x7907f8ff
  40cd03:	loopne 0x40cce1
  40cd05:	ret    
  40cd06:	push   edi
  40cd07:	imul   edx
  40cd09:	xchg   edi,eax
  40cd0a:	adc    al,0x42
  40cd0c:	push   es
  40cd0d:	mov    ebx,0x5a5719
  40cd12:	adc    al,0x3
  40cd14:	pop    ecx
  40cd15:	push   edx
  40cd16:	ds lock xor al,0x60
  40cd1a:	popf   
  40cd1b:	push   0xffffff96
  40cd1d:	jb     0x40cd87
  40cd1f:	mov    cl,0x8
  40cd21:	push   0x43
  40cd23:	enter  0xd50,0xd5
  40cd27:	xor    BYTE PTR [edi],0x9b
  40cd2a:	je     0x40cd8d
  40cd2c:	scas   eax,DWORD PTR es:[edi]
  40cd2d:	mov    ds:0x81e09fb8,eax
  40cd32:	jl     0x40cda1
  40cd34:	test   eax,0x58c15758
  40cd39:	cmc    
  40cd3a:	js     0x40cd35
  40cd3c:	push   ds
  40cd3d:	int3   
  40cd3e:	std    
  40cd3f:	pop    esi
  40cd40:	aad    0xc5
  40cd42:	inc    ecx
  40cd43:	xchg   BYTE PTR [ecx+0xb9492e5],cl
  40cd49:	mov    cl,0x4c
  40cd4b:	(bad)  
  40cd4d:	iret   
  40cd4e:	adc    al,BYTE PTR [ecx-0x67]
  40cd51:	cmp    bl,BYTE PTR [ebx]
  40cd53:	jo     0x40cdc4
  40cd55:	jnp    0x40cd0f
  40cd57:	pop    ds
  40cd58:	test   eax,0xe6ad2c21
  40cd5d:	(bad)  
  40cd5e:	push   eax
  40cd5f:	pop    ecx
  40cd60:	aad    0x2
  40cd62:	lea    ecx,[edx-0x42]
  40cd65:	jno    0x40cd1a
  40cd67:	aas    
  40cd68:	push   ebp
  40cd69:	mov    ah,0x8e
  40cd6b:	imul   ecx,ebx,0xca47a6c5
  40cd71:	push   es
  40cd72:	(bad)  
  40cd73:	ja     0x40cd20
  40cd75:	dec    ebx
  40cd76:	arpl   WORD PTR [esi-0x29defb00],sp
  40cd7c:	scas   al,BYTE PTR es:[edi]
  40cd7d:	fs xchg edx,eax
  40cd7f:	pop    esp
  40cd80:	sbb    BYTE PTR [esi],dl
  40cd82:	jl     0x40cdba
  40cd84:	ret    0xdd91
  40cd87:	mov    WORD PTR [edx],cs
  40cd89:	inc    edx
  40cd8a:	mov    edi,0x627e4502
  40cd8f:	mov    edi,0xc64ba3d0
  40cd94:	pop    edi
  40cd95:	push   es
  40cd96:	nop
  40cd97:	pop    eax
  40cd98:	nop
  40cd99:	test   BYTE PTR [ebx],bh
  40cd9b:	jo     0x40ce18
  40cd9d:	jae    0x40ce1b
  40cd9f:	mov    ds:0xc54e6ee3,eax
  40cda4:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40cdab:	mov    edx,DWORD PTR [ebp-0x44]
  40cdae:	mov    edi,DWORD PTR [ebp-0xc]
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	and    al,BYTE PTR [ecx-0x6133974c]
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	fisubr DWORD PTR [eax+0x66]
  40cde8:	jo     0x40ce11
  40cdea:	push   0x17760c40
  40cdef:	scas   eax,DWORD PTR es:[edi]
  40cdf0:	sub    dl,BYTE PTR [ebx-0x63]
  40cdf3:	test   al,0xc0
  40cdf5:	cmp    DWORD PTR ds:0x8bfa5f4b,ebp
  40cdfb:	or     ch,bh
  40cdfd:	adc    ch,BYTE PTR [ebp-0x73273f7]
  40ce03:	or     ch,BYTE PTR [ebx-0x2c]
  40ce06:	jmp    0x30fc4f6d
  40ce0b:	sub    eax,0xf153414c
  40ce10:	xor    al,BYTE PTR [esi+edi*4-0x4969d566]
  40ce17:	bound  edi,QWORD PTR [ebp-0x72aff095]
  40ce1d:	pop    eax
  40ce1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce1f:	push   es
  40ce20:	sub    eax,0xc082cfda
  40ce25:	xor    al,0x4e
  40ce27:	jmp    0xd56f:0xa75f3483
  40ce2e:	test   eax,0xe8a3470e
  40ce33:	repnz into 
  40ce35:	cwde   
  40ce36:	mov    dl,0x88
  40ce38:	xor    DWORD PTR [edx-0x4c659df7],0xffffffba
  40ce3f:	push   0x15c71b87
  40ce44:	int3   
  40ce45:	mov    eax,0x6f1a54ef
  40ce4a:	sub    al,0x5
  40ce4c:	test   DWORD PTR fs:[esi+0x1fb4aa4b],edx
  40ce53:	push   ss
  40ce54:	jo     0x40ce36
  40ce56:	mov    eax,ds:0xc09b74ec
  40ce5b:	test   eax,0xe10efca
  40ce60:	push   ss
  40ce61:	jecxz  0x40ce1f
  40ce63:	sub    BYTE PTR [ebp-0x56],bl
  40ce66:	je     0x40cdf6
  40ce68:	jnp    0x40cee3
  40ce6a:	das    
  40ce6b:	outs   dx,DWORD PTR ds:[esi]
  40ce6c:	out    0xd8,eax
  40ce6e:	or     ch,dh
  40ce70:	adc    edi,DWORD PTR [ecx+0x40]
  40ce73:	enter  0xa047,0xfe
  40ce77:	pushf  
  40ce78:	lea    esp,[eax+0x1c21fea4]
  40ce7e:	(bad)  
  40ce7f:	sbb    al,0x3f
  40ce81:	xchg   edx,eax
  40ce82:	inc    edx
  40ce83:	es sbb eax,0x6d7cb3c4
  40ce89:	fbstp  TBYTE PTR [edi-0x53]
  40ce8c:	mov    fs,WORD PTR [esi]
  40ce8e:	add    al,cl
  40ce90:	or     eax,0x10fe1bf1
  40ce95:	aad    0x5b
  40ce97:	sub    al,0x31
  40ce99:	or     dl,ah
  40ce9b:	(bad)  
  40ce9c:	pop    edx
  40ce9d:	mov    ah,0xb
  40ce9f:	xor    DWORD PTR [edi+0x2c3c69de],edi
  40cea5:	push   edi
  40cea6:	push   0xffffff82
  40cea8:	out    0x83,al
  40ceaa:	imul   esi,DWORD PTR [esi+0x5],0x40c6a6ea
  40ceb1:	adc    BYTE PTR [edi-0x7],ah
  40ceb4:	sbb    eax,0x4095c239
  40ceb9:	mov    al,dh
  40cebb:	sti    
  40cebc:	out    dx,al
  40cebd:	inc    ecx
  40cebe:	lds    edi,FWORD PTR [esi+0x71]
  40cec1:	dec    ebp
  40cec2:	ins    BYTE PTR es:[edi],dx
  40cec3:	sbb    DWORD PTR [ebx-0x5f74208b],edx
  40cec9:	cld    
  40ceca:	jnp    0x40ce77
  40cecc:	push   edx
  40cecd:	sub    DWORD PTR [edi],0x73
  40ced0:	jo     0x7fdae5ac
  40ced6:	outs   dx,BYTE PTR ds:[esi]
  40ced7:	mov    cs,eax
  40ced9:	mov    ebp,0xfe129ff8
  40cede:	dec    ecx
  40cedf:	ficom  WORD PTR [eax+ebp*8]
  40cee2:	xchg   edi,eax
  40cee3:	jne    0x40ce94
  40cee5:	inc    esi
  40cee6:	mov    dl,0x37
  40cee8:	in     al,0xfe
  40ceea:	enter  0x1c26,0x69
  40ceee:	das    
  40ceef:	xchg   esi,eax
  40cef0:	sbb    eax,0x4d32ad8a
  40cef5:	stc    
  40cef6:	pusha  
  40cef7:	xadd   DWORD PTR [ebx-0x51d36ec5],eax
  40cefe:	imul   esp,DWORD PTR [edx-0xb],0x7c
  40cf02:	sbb    eax,0x3dd7b65b
  40cf07:	jecxz  0x40cf53
  40cf09:	add    dl,BYTE PTR [ecx+0x50]
  40cf0c:	pop    ebx
  40cf0d:	dec    esp
  40cf0e:	jbe    0x40ceab
  40cf10:	leave  
  40cf11:	sbb    DWORD PTR [edx],0xc957493d
  40cf17:	pop    eax
  40cf18:	fimul  DWORD PTR [ebx]
  40cf1a:	std    
  40cf1b:	xor    cl,cl
  40cf1d:	inc    edi
  40cf1e:	add    DWORD PTR [eax+edx*4-0x2e6287c4],ebx
  40cf25:	push   esp
  40cf26:	sub    eax,0x36a0adb6
  40cf2b:	jo     0x40cf71
  40cf2d:	inc    ebx
  40cf2e:	xchg   esi,eax
  40cf2f:	sar    esi,1
  40cf31:	jne    0x40cfaa
  40cf33:	ins    DWORD PTR es:[edi],dx
  40cf34:	jne    0x40cf10
  40cf36:	adc    BYTE PTR [esi+0x71a28608],bh
  40cf3c:	push   ds
  40cf3d:	dec    eax
  40cf3e:	cs test al,0x4
  40cf41:	ror    DWORD PTR [edi+0x6a2d3603],cl
  40cf47:	test   bl,ah
  40cf49:	lods   eax,DWORD PTR ds:[esi]
  40cf4a:	imul   edx,DWORD PTR [eax+0x69],0x37
  40cf4e:	adc    bl,BYTE PTR [ecx+0x55]
  40cf51:	div    DWORD PTR [ecx-0x49c2a6c6]
  40cf57:	inc    edi
  40cf58:	clc    
  40cf59:	in     al,0xd6
  40cf5b:	push   0xffffffd6
  40cf5d:	inc    esi
  40cf5e:	fild   DWORD PTR cs:[ebx]
  40cf61:	xchg   edi,eax
  40cf62:	shr    DWORD PTR [edx-0x53],cl
  40cf65:	jmp    0x173f:0x880eafa9
  40cf6c:	cmc    
  40cf6d:	(bad)  
  40cf6e:	imul   ebp,DWORD PTR [edx-0x42ae72c4],0x4a
  40cf75:	or     edi,esp
  40cf77:	push   cs
  40cf78:	push   esi
  40cf79:	jne    0x40cefc
  40cf7b:	nop
  40cf7c:	mov    dl,0x64
  40cf7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf7f:	pushf  
  40cf80:	sbb    ebp,DWORD PTR [eax+0x22]
  40cf83:	cs ret 0x5ea5
  40cf87:	jp     0x40cf42
  40cf89:	retf   
  40cf8a:	shl    esi,cl
  40cf8c:	fsubr  QWORD PTR [eax]
  40cf8e:	mov    ch,0xb9
  40cf90:	mov    dl,0xe9
  40cf92:	push   0xffffffda
  40cf94:	cs es fwait
  40cf97:	cmp    ebx,ebx
  40cf99:	mov    ecx,0x66f14a8d
  40cf9e:	jb     0x40cf80
  40cfa0:	add    dh,dh
  40cfa2:	scas   al,BYTE PTR es:[edi]
  40cfa3:	outs   dx,DWORD PTR ds:[esi]
  40cfa4:	dec    ecx
  40cfa5:	mov    dl,0x67
  40cfa7:	xchg   ebp,eax
  40cfa8:	sbb    ebx,DWORD PTR [edx]
  40cfaa:	xor    ebp,ebp
  40cfac:	push   esp
  40cfad:	or     edi,DWORD PTR [eax-0x5257f2a7]
  40cfb3:	fsubr  DWORD PTR [esi+0x37ea1a92]
  40cfb9:	adc    al,0x87
  40cfbb:	adc    ch,bl
  40cfbd:	sbb    eax,DWORD PTR [ecx+ebx*1+0x3c011739]
  40cfc4:	jns    0x40cf55
  40cfc6:	pop    edi
  40cfc7:	sub    ebx,ebp
  40cfc9:	repz mov eax,gs
  40cfcc:	push   0x5a
  40cfce:	add    eax,0x6f8f565d
  40cfd3:	xchg   bl,dh
  40cfd5:	outs   dx,DWORD PTR ds:[esi]
  40cfd6:	lods   al,BYTE PTR ds:[esi]
  40cfd7:	cmc    
  40cfd8:	retf   
  40cfd9:	xchg   ebx,eax
  40cfda:	jge    0x40cf70
  40cfdc:	sub    al,0xda
  40cfde:	push   es
  40cfdf:	cwde   
  40cfe0:	dec    edi
  40cfe1:	add    ch,bh
  40cfe3:	retf   
  40cfe4:	dec    edi
  40cfe5:	fxtract 
  40cfe7:	jae    0x40cf82
  40cfe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfea:	adc    al,bl
  40cfec:	or     DWORD PTR [ebx],ecx
  40cfee:	cmp    edx,esp
  40cff0:	or     cl,BYTE PTR [eax+0x787a2dea]
  40cff6:	add    eax,0xda3aa1b0
  40cffb:	fst    QWORD PTR [ebp-0x40]
  40cffe:	lods   eax,DWORD PTR ds:[esi]
  40cfff:	or     ebp,DWORD PTR [eax+0x62c64094]
  40d005:	adc    BYTE PTR [esi],cl
  40d007:	dec    ebx
  40d008:	and    DWORD PTR [esi-0x42],ecx
  40d00b:	rol    esi,cl
  40d00d:	(bad)  
  40d00e:	push   ebx
  40d00f:	cmc    
  40d010:	push   ss
  40d011:	lds    esp,FWORD PTR [eax+0x34]
  40d014:	ret    0x1ad7
  40d017:	fidiv  DWORD PTR [eax]
  40d019:	push   ds
  40d01a:	dec    esp
  40d01b:	sub    eax,ebp
  40d01d:	ins    DWORD PTR es:[edi],dx
  40d01e:	adc    al,BYTE PTR [edx-0x7e61ca62]
  40d024:	push   ebx
  40d025:	mov    dl,0x8e
  40d027:	gs dec esp
  40d029:	fst    DWORD PTR es:[edi]
  40d02c:	cmp    al,bl
  40d02e:	addr16 mov ebp,0xc1c5ea7f
  40d034:	in     eax,0xb2
  40d036:	pop    esi
  40d037:	lock daa 
  40d039:	inc    esi
  40d03a:	fcomp  QWORD PTR [ebp-0x20afed3]
  40d040:	(bad)  
  40d043:	mov    bl,0xcd
  40d045:	mov    ch,0xe4
  40d047:	ss test al,0x1f
  40d04a:	adc    ecx,DWORD PTR [ebx+0x3854ba3b]
  40d050:	jecxz  0x40d04c
  40d052:	loope  0x40d0bd
  40d054:	mov    gs,WORD PTR [edx+0x76]
  40d057:	sub    dh,BYTE PTR [edx-0x2e]
  40d05a:	mov    ds:0x4b2920dc,al
  40d05f:	push   es
  40d060:	stos   DWORD PTR es:[edi],eax
  40d061:	call   0x9999e9eb
  40d066:	jo     0x40d044
  40d068:	dec    ebx
  40d069:	jmp    0x40d0b2
  40d06b:	ret    
  40d06c:	push   es
  40d06d:	xlat   BYTE PTR ds:[ebx]
  40d06e:	jecxz  0x40d070
  40d070:	dec    esp
  40d071:	ja     0x40d0ea
  40d073:	mov    al,ds:0x36665e90
  40d078:	das    
  40d079:	push   0xffffffa7
  40d07b:	jl     0x40d0e0
  40d07d:	xor    BYTE PTR [edi],0xac
  40d080:	mov    eax,0xd2148a2
  40d085:	jbe    0x40d043
  40d087:	dec    esi
  40d088:	leave  
  40d089:	into   
  40d08a:	inc    eax
  40d08b:	mov    ds:0x1bf28e04,eax
  40d090:	jge    0x40d064
  40d092:	mov    BYTE PTR [edx],dl
  40d094:	xor    edx,DWORD PTR [ecx+0x22a57e4]
  40d09a:	mov    ch,0x69
  40d09c:	push   ebp
  40d09d:	or     DWORD PTR [ecx-0x12],0xfffffff1
  40d0a1:	lea    edi,[edi+0x241ce7e]
  40d0a7:	into   
  40d0a8:	push   ebp
  40d0a9:	retf   0x4db1
  40d0ac:	in     al,0x68
  40d0ae:	add    eax,0xd978aa0f
  40d0b3:	(bad)  
  40d0b4:	ficomp DWORD PTR [ebx+0x2dfeb2bb]
  40d0ba:	push   eax
  40d0bb:	fidivr DWORD PTR [esi]
  40d0bd:	mov    edi,fs
  40d0bf:	mov    eax,0xe0d1d4e7
  40d0c4:	and    eax,0x79315a6b
  40d0c9:	push   ds
  40d0ca:	lods   eax,DWORD PTR ds:[esi]
  40d0cb:	imul   edi,ecx,0x79
  40d0ce:	sub    esi,DWORD PTR [ebp+0x4979f5c8]
  40d0d4:	or     edx,DWORD PTR [esi-0x20f9db1e]
  40d0da:	add    eax,0xf47321bb
  40d0df:	enter  0xc70f,0x84
  40d0e3:	push   eax
  40d0e4:	rcl    DWORD PTR [edi+0xbe556a7],0x4a
  40d0eb:	(bad)  [ecx-0x6134d51b]
  40d0f1:	fild   QWORD PTR ds:0x4d2bbf61
  40d0f7:	repnz aam 0xa5
  40d0fa:	into   
  40d0fb:	xor    DWORD PTR [edx],ebp
  40d0fd:	xchg   edi,eax
  40d0fe:	pop    ds
  40d0ff:	arpl   WORD PTR [ecx-0x35],ax
  40d102:	inc    edx
  40d103:	repnz cmp DWORD PTR [ebx],0xffffffa0
  40d107:	lahf   
  40d108:	jmp    0xc46e:0x3bdfa26e
  40d10f:	data16 or ah,BYTE PTR ds:0xc7b4a4eb
  40d116:	mov    esp,0xb5044bc
  40d11b:	ret    0x4d4c
  40d11e:	in     al,dx
  40d11f:	jns    0x40d165
  40d121:	jbe    0x40d134
  40d123:	pop    edx
  40d124:	inc    edx
  40d125:	mov    edx,0x3aed2058
  40d12a:	push   ebp
  40d12b:	sahf   
  40d12c:	mov    ?,WORD PTR [esi+ecx*4]
  40d12f:	dec    esi
  40d130:	ficom  WORD PTR [edi]
  40d132:	loop   0x40d170
  40d134:	repz xor al,BYTE PTR [edx+0x1b4adf71]
  40d13b:	out    dx,al
  40d13c:	loop   0x40d0ed
  40d13e:	mov    edx,0xb2338841
  40d143:	push   ecx
  40d144:	test   BYTE PTR [ebp-0x4e6cf3fa],0x19
  40d14b:	clc    
  40d14c:	pusha  
  40d14d:	cmp    bx,WORD PTR [ecx+ecx*2]
  40d151:	add    ecx,edi
  40d153:	jmp    0x40d11a
  40d155:	sub    eax,0xba9bb3d
  40d15a:	push   ss
  40d15b:	jno    0x40d142
  40d15d:	sbb    ebx,ebx
  40d15f:	add    eax,0x9e92908c
  40d164:	add    eax,0x3c2e9d9d
  40d169:	popf   
  40d16a:	pop    es
  40d16b:	das    
  40d16c:	mov    ecx,0xbfc0f8f7
  40d171:	in     al,dx
  40d172:	das    
  40d173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d174:	or     DWORD PTR [edi+edi*2-0x60],esp
  40d178:	push   es
  40d179:	sbb    DWORD PTR [edi+0x7dcff20b],esi
  40d17f:	in     al,0xab
  40d181:	xor    BYTE PTR [esi-0x20],cl
  40d184:	fdivr  QWORD PTR [eax+0xc]
  40d187:	jne    0x40d1b0
  40d189:	mov    edi,0x19633aa7
  40d18e:	nop
  40d18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d190:	jge    0x40d1f9
  40d192:	mov    eax,DWORD PTR [edx+0x1fa8da4e]
  40d198:	pop    es
  40d199:	iret   
  40d19a:	int3   
  40d19b:	addr16 loop 0x40d18b
  40d19e:	xor    ah,cl
  40d1a0:	xor    DWORD PTR [eax-0x33900ab4],edi
  40d1a6:	mov    si,0xd1d0
  40d1aa:	lock pop eax
  40d1ac:	or     DWORD PTR [eax+0x549d60f4],esi
  40d1b2:	nop
  40d1b3:	or     BYTE PTR [edi-0x38],ah
  40d1b6:	(bad)  
  40d1b7:	mov    ebp,0x2af6753f
  40d1bc:	mov    esp,0x1c22b870
  40d1c1:	push   cs
  40d1c2:	cld    
  40d1c3:	jbe    0x40d212
  40d1c5:	add    BYTE PTR [eax-0x29],0x5d
  40d1c9:	(bad)  
  40d1ca:	mov    eax,ds:0x3a1e5865
  40d1cf:	jecxz  0x40d1a5
  40d1d1:	push   edi
  40d1d2:	pop    esi
  40d1d3:	sub    ch,BYTE PTR [edx-0x7c4ccef8]
  40d1d9:	js     0x40d1fc
  40d1db:	fld    QWORD PTR [edx-0x2fcc8cd1]
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	in     eax,0xf9
  40d210:	sbb    BYTE PTR ds:0x7e7e9ac6,cl
  40d216:	jo     0x40d291
  40d218:	jle    0x40d298
  40d21a:	pop    esp
  40d21b:	int3   
  40d21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d21d:	inc    esp
  40d21e:	aaa    
  40d21f:	cmp    al,BYTE PTR [esi+0x351ff0f7]
  40d225:	pop    ebx
  40d226:	ins    BYTE PTR es:[edi],dx
  40d227:	add    edi,DWORD PTR [edi]
  40d229:	mov    edx,0xed70ac99
  40d22e:	sbb    BYTE PTR [ebp+0x5b],ah
  40d231:	arpl   WORD PTR [edx+0x1fecc527],cx
  40d237:	(bad)  
  40d238:	xor    dl,BYTE PTR [esi]
  40d23a:	out    0x35,eax
  40d23c:	sti    
  40d23d:	mov    BYTE PTR [esi+0x17876389],al
  40d243:	cwde   
  40d244:	xchg   esi,eax
  40d245:	hlt    
  40d246:	lods   eax,DWORD PTR ds:[esi]
  40d247:	jmp    0x40d1f4
  40d249:	out    0x55,eax
  40d24b:	(bad)  
  40d24c:	inc    ah
  40d24e:	and    eax,0x67cba55c
  40d253:	push   ebx
  40d254:	xchg   esi,eax
  40d255:	jb     0x40d2d4
  40d257:	(bad)  
  40d258:	les    esi,FWORD PTR [ebp-0x67]
  40d25b:	lahf   
  40d25c:	adc    DWORD PTR [ebp-0x3d98af6d],eax
  40d262:	sbb    ah,BYTE PTR [ecx]
  40d264:	mov    esi,0xaa54b2c
  40d269:	imul   esi,DWORD PTR [ebx-0x691a5856],0xf83d1898
  40d273:	lock popa 
  40d275:	nop
  40d276:	pop    ecx
  40d277:	jb     0x40d2e5
  40d279:	push   edx
  40d27a:	push   ss
  40d27b:	js     0x40d204
  40d27d:	mov    edx,0xb1c7fda7
  40d282:	into   
  40d283:	ss (bad) 
  40d286:	adc    esi,DWORD PTR [ebx-0x31]
  40d289:	stos   BYTE PTR es:[edi],al
  40d28a:	cwde   
  40d28b:	cmp    BYTE PTR [ebp-0x37],0xa2
  40d28f:	mov    ss,esi
  40d291:	(bad)  
  40d292:	popa   
  40d293:	jae    0x40d251
  40d295:	xchg   edx,eax
  40d296:	xchg   ebp,eax
  40d297:	jns    0x40d2a8
  40d299:	lahf   
  40d29a:	push   esp
  40d29b:	inc    edi
  40d29c:	fwait
  40d29d:	sub    ah,BYTE PTR [eax]
  40d29f:	mov    eax,ds:0xe1d9559e
  40d2a4:	mov    bh,0xa
  40d2a6:	jp     0x40d30f
  40d2a8:	sub    DWORD PTR [edx-0x7a797614],eax
  40d2ae:	add    bh,BYTE PTR [esi+edi*1]
  40d2b1:	jle    0x40d25d
  40d2b3:	jmp    0xfe0e:0xaaaa04c4
  40d2ba:	pop    edx
  40d2bb:	mov    bl,0xdb
  40d2bd:	iret   
  40d2be:	sub    al,bl
  40d2c0:	sbb    al,0x21
  40d2c2:	repz push ds
  40d2c4:	jns    0x40d2db
  40d2c6:	lea    esi,ds:0xd55f08f7
  40d2cc:	push   ebp
  40d2cd:	mov    esp,0x4d83406e
  40d2d2:	mov    bl,0x31
  40d2d4:	in     al,0x70
  40d2d6:	dec    ebp
  40d2d7:	in     eax,0x8e
  40d2d9:	jne    0x40d264
  40d2db:	call   0x39af7e33
  40d2e0:	mov    WORD PTR [ebp+0x6670e822],gs
  40d2e6:	xchg   esp,eax
  40d2e7:	pusha  
  40d2e8:	adc    BYTE PTR [edi],bl
  40d2ea:	popf   
  40d2eb:	or     esp,DWORD PTR [edx]
  40d2ed:	pushf  
  40d2ee:	cmp    DWORD PTR [esi],esi
  40d2f0:	or     DWORD PTR [ebx],esi
  40d2f2:	inc    ebp
  40d2f3:	js     0x40d33e
  40d2f5:	loope  0x40d2c4
  40d2f7:	call   0xd71f:0xe70d7463
  40d2fe:	dec    eax
  40d2ff:	mov    ebp,0x3fac813e
  40d304:	mov    edi,0xcb5f9ca8
  40d309:	mov    edx,0xeb35d143
  40d30e:	ins    BYTE PTR es:[edi],dx
  40d30f:	mov    bh,0x19
  40d311:	pop    es
  40d312:	test   eax,0x3909c4d1
  40d317:	stos   DWORD PTR es:[edi],eax
  40d318:	popa   
  40d319:	je     0x40d2cb
  40d31b:	imul   eax,DWORD PTR [ebp+0x3f34a6e7],0x33538a3a
  40d325:	pusha  
  40d326:	jo     0x40d391
  40d328:	cs std 
  40d32a:	mov    edx,0x57365482
  40d32f:	adc    al,0x61
  40d331:	xor    al,BYTE PTR [edx-0x283c36dc]
  40d337:	outs   dx,BYTE PTR ds:[esi]
  40d338:	popf   
  40d339:	std    
  40d33a:	xor    edx,DWORD PTR [ebx+0x31]
  40d33d:	sbb    BYTE PTR [eax],bl
  40d33f:	push   0x197abbae
  40d344:	mov    al,cl
  40d346:	inc    ebp
  40d347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d348:	xchg   BYTE PTR [esi],ah
  40d34a:	xchg   edx,eax
  40d34b:	arpl   WORD PTR [esi],dx
  40d34d:	mov    eax,0xd4ce198e
  40d352:	push   esi
  40d353:	mov    ecx,0xcd525b91
  40d358:	jge    0x40d399
  40d35a:	mov    ebp,0x5dc08bda
  40d35f:	inc    ebx
  40d360:	rol    BYTE PTR ds:0x914e894a,cl
  40d366:	sub    al,0x2d
  40d368:	xor    DWORD PTR ss:[eax],0x81c40b31
  40d36f:	sti    
  40d370:	fstp   QWORD PTR [eax-0x70ff628d]
  40d376:	ret    0x960e
  40d379:	mov    eax,ds:0x3003f932
  40d37e:	cli    
  40d37f:	sbb    al,0x9b
  40d381:	in     eax,dx
  40d382:	sub    esi,DWORD PTR [eax+0x5]
  40d385:	and    eax,0x2e98d611
  40d38a:	jmp    0x40d319
  40d38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d38d:	dec    eax
  40d38e:	fs mov ebp,0x866264ea
  40d394:	stc    
  40d395:	arpl   WORD PTR cs:[edi+0x6570737],bp
  40d39c:	cmp    ah,dl
  40d39e:	sbb    edx,esi
  40d3a0:	mov    eax,ds:0xbe1636a
  40d3a5:	repnz push es
  40d3a7:	into   
  40d3a8:	stos   DWORD PTR es:[edi],eax
  40d3a9:	pushf  
  40d3aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ab:	mov    fs,esp
  40d3ad:	test   cl,0x9b
  40d3b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3b1:	popa   
  40d3b2:	inc    esp
  40d3b3:	imul   ebx,DWORD PTR [edi+ebx*8+0x3e],0x5c
  40d3b8:	jg     0x40d42d
  40d3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3bb:	sub    al,BYTE PTR [ebx+0x2a3c1e9d]
  40d3c1:	call   0xad3661cd
  40d3c6:	or     al,0xeb
  40d3c8:	pop    esi
  40d3c9:	sub    eax,0xbad7dda0
  40d3ce:	add    eax,0xf0f0e46d
  40d3d3:	cwde   
  40d3d4:	mov    ?,WORD PTR [edx]
  40d3d6:	push   esp
  40d3d7:	ret    0xf9d
  40d3da:	inc    ebx
  40d3db:	stos   DWORD PTR es:[edi],eax
  40d3dc:	or     eax,0x505c14b7
  40d3e1:	cmp    esp,DWORD PTR [edx]
  40d3e3:	jbe    0x40d3c7
  40d3e5:	outs   dx,BYTE PTR ss:[esi]
  40d3e7:	inc    esi
  40d3e8:	mov    ecx,0x2d6ea06c
  40d3ed:	and    DWORD PTR [esi-0x14d0b270],0xffffffb8
  40d3f4:	xchg   BYTE PTR [ebp+0x7c],bh
  40d3f7:	inc    esi
  40d3f8:	dec    eax
  40d3f9:	pusha  
  40d3fa:	and    DWORD PTR [ebx-0x4b],ebx
  40d3fd:	out    0xed,al
  40d3ff:	mov    bl,0xa2
  40d401:	cmc    
  40d402:	xchg   esi,eax
  40d403:	adc    BYTE PTR [ebx+0x5eb95e70],bl
  40d409:	out    0x9b,eax
  40d40b:	xor    DWORD PTR [ecx+0x2f],ecx
  40d40e:	cmp    BYTE PTR ds:0x527459bd,ah
  40d414:	ds neg esp
  40d417:	xchg   edi,eax
  40d418:	sbb    esi,esi
  40d41a:	mov    ebx,0xcf6a0620
  40d41f:	(bad)  
  40d420:	push   0x545d6653
  40d425:	lods   al,BYTE PTR ds:[esi]
  40d426:	jmp    0x513:0x4b203ede
  40d42d:	pop    ecx
  40d42e:	cmp    BYTE PTR [ebx-0x12ca6c36],dh
  40d434:	repz inc edi
  40d436:	mov    dh,0x9b
  40d438:	xchg   ebx,eax
  40d439:	mov    ch,cl
  40d43b:	test   eax,0x5fd3ffba
  40d440:	lea    esp,[ebp+0x5d36c666]
  40d446:	mov    cl,0x6f
  40d448:	popf   
  40d449:	adc    eax,0xa9a94518
  40d44e:	mov    DWORD PTR ss:[eax+0x270a15a1],ebp
  40d455:	inc    BYTE PTR ds:[ecx-0x1f12212a]
  40d45c:	jecxz  0x40d4d0
  40d45e:	jg     0x40d417
  40d460:	addr16 and eax,0xe125913d
  40d466:	cmp    DWORD PTR [ebx+ebp*1],edi
  40d469:	xchg   edi,eax
  40d46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d46b:	dec    edi
  40d46c:	inc    eax
  40d46d:	fild   DWORD PTR [eax+ebp*2+0x721f6fc9]
  40d474:	xor    dl,BYTE PTR [ecx]
  40d476:	xchg   ebp,eax
  40d477:	pop    eax
  40d478:	inc    ecx
  40d479:	(bad)  
  40d47b:	push   edx
  40d47c:	mov    ecx,0x8e4b0ded
  40d481:	sbb    eax,DWORD PTR [ecx-0x5a]
  40d484:	sbb    BYTE PTR [esi+0x7f6f9e36],bl
  40d48a:	mov    DWORD PTR [eax+esi*1+0x5ac19ac7],0xd81ed529
  40d495:	data16 jb 0x40d4f2
  40d498:	mov    dh,0xc8
  40d49a:	cmp    al,0xb6
  40d49c:	movhps xmm3,QWORD PTR [ebp+0x4e]
  40d4a0:	or     ch,BYTE PTR [esi+0x5f42f452]
  40d4a6:	jecxz  0x40d516
  40d4a8:	popf   
  40d4a9:	pop    ebx
  40d4aa:	arpl   WORD PTR [edx-0x3c588cb4],cx
  40d4b0:	inc    edx
  40d4b1:	jns    0x40d4e2
  40d4b3:	jo     0x40d478
  40d4b5:	dec    ebp
  40d4b6:	adc    ebx,0x8f094502
  40d4bc:	mov    ebp,0xe66fedb8
  40d4c1:	sub    BYTE PTR [eax+0x33ac2800],bh
  40d4c7:	std    
  40d4c8:	or     al,0x4a
  40d4ca:	hlt    
  40d4cb:	adc    al,0x78
  40d4cd:	out    0x4c,al
  40d4cf:	dec    eax
  40d4d0:	pop    ds
  40d4d1:	ret    
  40d4d2:	jp     0x40d478
  40d4d4:	xchg   esp,eax
  40d4d5:	es dec esp
  40d4d7:	mov    ecx,0x8c60ac2b
  40d4dc:	shr    DWORD PTR [edi],cl
  40d4de:	mov    ebp,0xd24fa74d
  40d4e3:	idiv   DWORD PTR [ebx+0x12]
  40d4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e7:	out    dx,al
  40d4e8:	retf   
  40d4e9:	cs call 0xc164:0x176890b6
  40d4f1:	mov    al,0x92
  40d4f3:	inc    edi
  40d4f4:	shr    BYTE PTR [esp+eiz*2+0x75081f1b],1
  40d4fb:	mov    ch,0x12
  40d4fd:	shr    BYTE PTR [esi+0x3b],1
  40d500:	lods   al,BYTE PTR ds:[esi]
  40d501:	test   al,0xaf
  40d503:	push   edi
  40d504:	sbb    DWORD PTR [ecx-0x55],ebx
  40d507:	jns    0x40d52a
  40d509:	lods   al,BYTE PTR ds:[esi]
  40d50a:	jl     0x40d52a
  40d50c:	(bad)  
  40d50e:	mov    esi,0x4a9869a
  40d513:	repnz xchg edx,eax
  40d515:	mov    ds:0x92f43546,eax
  40d51a:	mov    bl,0xb3
  40d51c:	jae    0x40d570
  40d51e:	shl    DWORD PTR [ecx-0x28],cl
  40d521:	fsubr  DWORD PTR [ebx-0x628194fc]
  40d527:	cmc    
  40d528:	mov    eax,0x2e2384b1
  40d52d:	cmp    eax,0x14fbd745
  40d532:	test   BYTE PTR [edi+0x5e],dh
  40d535:	adc    al,0x1f
  40d537:	std    
  40d538:	mov    ecx,0x5f4bb036
  40d53d:	ror    BYTE PTR [ecx+0x33],cl
  40d540:	mov    esp,0xaab9b0b9
  40d545:	fstp   DWORD PTR [eax-0x79]
  40d548:	rol    BYTE PTR [esi+0x3c],1
  40d54b:	pusha  
  40d54c:	scas   eax,DWORD PTR es:[edi]
  40d54d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d54f:	mov    bl,0x7b
  40d551:	int3   
  40d552:	push   ss
  40d553:	sbb    eax,0xc30d365
  40d558:	adc    al,0xcc
  40d55a:	pop    ds
  40d55b:	jbe    0x40d56b
  40d55d:	out    0x13,al
  40d55f:	aaa    
  40d560:	mov    ds,WORD PTR [ecx]
  40d562:	mov    dh,0x3f
  40d564:	fdivrp st(5),st
  40d566:	and    cl,BYTE PTR [edi-0x7d]
  40d569:	popa   
  40d56a:	mov    al,0x6f
  40d56c:	jmp    0x40d536
  40d56e:	sbb    eax,0xfadfc8bf
  40d573:	mov    ebp,0x8f41c64
  40d578:	faddp  st(4),st
  40d57a:	add    ch,BYTE PTR [ebx]
  40d57c:	xor    al,0xaa
  40d57e:	out    0xbd,al
  40d580:	popa   
  40d581:	mov    eax,0xf43577d1
  40d586:	mov    ecx,0xa6eee72e
  40d58b:	xor    eax,0x740c94e4
  40d590:	aaa    
  40d591:	in     eax,dx
  40d592:	sub    BYTE PTR [edi+0x43],ah
  40d595:	in     eax,dx
  40d596:	rcr    BYTE PTR [ecx+eax*8-0x2d198e9c],cl
  40d59d:	xor    esi,0x6
  40d5a0:	pop    ds
  40d5a1:	js     0x40d53f
  40d5a3:	retf   0x194a
  40d5a6:	repnz imul esp,ebx,0x4e136476
  40d5ad:	push   esp
  40d5ae:	jecxz  0x40d53e
  40d5b0:	ss adc esp,eax
  40d5b3:	jbe    0x40d589
  40d5b5:	inc    edx
  40d5b6:	mov    ebp,DWORD PTR [ecx+0x2a]
  40d5b9:	mov    es,WORD PTR [edi+0x7712530d]
  40d5bf:	leave  
  40d5c0:	ret    0x420a
  40d5c3:	jle    0x40d5e3
  40d5c5:	dec    edx
  40d5c6:	out    0xeb,al
  40d5c8:	call   0x8fdf591f
  40d5cd:	(bad)  
  40d5ce:	enter  0xe5d,0xe7
  40d5d2:	adc    esp,ebp
  40d5d4:	xchg   esp,eax
  40d5d5:	xor    BYTE PTR [edx+0x74c85e1f],dl
  40d5db:	jnp    0x40d626
  40d5dd:	cmp    esp,DWORD PTR [edx+0x53]
  40d5e0:	and    BYTE PTR [ebx+0x666d4cbb],dh
  40d5e6:	jne    0x40d627
  40d5e8:	test   DWORD PTR ds:0x7b45fb9e,edx
  40d5ee:	hlt    
  40d5ef:	ret    
  40d5f0:	test   BYTE PTR [esi+0x224853a],bh
  40d5f6:	sbb    BYTE PTR [edx+0x19],cl
  40d5f9:	inc    ecx
  40d5fa:	pop    ebx
  40d5fb:	out    0x9,eax
  40d5fd:	pop    ds
  40d5fe:	mov    al,ds:0x48eba01f
  40d603:	jo     0x40d671
  40d605:	ins    DWORD PTR es:[edi],dx
  40d606:	jne    0x40d66c
  40d608:	pop    ds
  40d609:	pop    ss
  40d60a:	xchg   ecx,eax
  40d60b:	std    
  40d60c:	aas    
  40d60d:	mov    ch,0x24
  40d60f:	mov    ecx,0x599e2e16
  40d614:	xor    ebx,eax
  40d616:	sub    edx,ecx
  40d618:	lea    edi,[edi+ebx*1+0x327299]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x6085f198
  40d64b:	inc    eax
  40d64c:	cmp    BYTE PTR [esi+0x79707e7e],ah
  40d652:	jle    0x40d6d2
  40d654:	adc    DWORD PTR [edi-0x15],edx
  40d657:	out    0x4a,eax
  40d659:	fwait
  40d65a:	lods   eax,DWORD PTR ds:[esi]
  40d65b:	test   eax,0xe52da46e
  40d660:	or     DWORD PTR [ebx+edi*4+0x2],0xa
  40d665:	sbb    al,0x27
  40d667:	xchg   ebx,eax
  40d668:	mov    ecx,0x56773202
  40d66d:	pop    esp
  40d66e:	icebp  
  40d66f:	mov    dl,0xc8
  40d671:	xor    dl,ch
  40d673:	dec    eax
  40d674:	jbe    0x40d62c
  40d676:	inc    esi
  40d677:	xchg   edi,eax
  40d678:	jae    0x40d632
  40d67a:	jno    0x40d641
  40d67c:	cmp    al,0x7
  40d67e:	fmul   st,st(4)
  40d680:	sti    
  40d681:	pushf  
  40d682:	mov    ds,WORD PTR [esi-0x5ba49a10]
  40d688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d689:	lea    ebp,[ebx]
  40d68b:	or     BYTE PTR [ebx],bl
  40d68d:	xchg   edi,eax
  40d68e:	mov    bl,bl
  40d690:	add    ecx,DWORD PTR [ebx+ebp*8]
  40d693:	cmp    BYTE PTR [ebp-0x17],dh
  40d696:	mov    BYTE PTR [ebx-0x4f],bl
  40d699:	sub    BYTE PTR [edi+0x40],ch
  40d69c:	enter  0x9fdf,0xc3
  40d6a0:	aaa    
  40d6a1:	add    bl,BYTE PTR [edi+ecx*1]
  40d6a4:	xchg   esi,eax
  40d6a5:	sub    ah,bh
  40d6a7:	or     eax,0x4c50e853
  40d6ac:	mov    dh,0xb9
  40d6ae:	cmp    bl,BYTE PTR [ebp+0x131664a3]
  40d6b4:	lods   eax,DWORD PTR ds:[esi]
  40d6b5:	(bad)  
  40d6b6:	fldl2t 
  40d6b8:	jg     0x40d66e
  40d6ba:	(bad)  
  40d6bb:	cmp    eax,0x10b46e07
  40d6c0:	mov    ch,BYTE PTR [ecx+0x33]
  40d6c3:	push   es
  40d6c4:	aaa    
  40d6c5:	add    DWORD PTR [esi-0x684abea7],ebp
  40d6cb:	arpl   cx,bx
  40d6cd:	jl     0x40d6aa
  40d6cf:	adc    edi,DWORD PTR [edx+0x21]
  40d6d2:	add    al,al
  40d6d4:	push   ds
  40d6d5:	fwait
  40d6d6:	mov    ?,eax
  40d6d8:	arpl   WORD PTR ds:0xc1e14ba9,sp
  40d6de:	(bad)  
  40d6df:	jmp    0x40d6b1
  40d6e1:	stos   DWORD PTR es:[edi],eax
  40d6e2:	test   eax,0x5c55e099
  40d6e7:	fucomi st,st(2)
  40d6e9:	mov    ds:0x9c0b7f70,al
  40d6ee:	repnz push edi
  40d6f0:	xor    edx,DWORD PTR [ecx-0x8]
  40d6f3:	cmp    al,0x54
  40d6f5:	icebp  
  40d6f6:	es and bh,BYTE PTR es:[ebx-0x51a9b9d1]
  40d6fe:	and    BYTE PTR [ebx],0xfa
  40d701:	jbe    0x40d6b8
  40d703:	pop    ebp
  40d704:	add    esi,DWORD PTR [ebx-0x22]
  40d707:	mov    edi,0xda6aa9cc
  40d70c:	xchg   esp,eax
  40d70d:	aam    0x6a
  40d70f:	iret   
  40d710:	and    al,0x7e
  40d712:	ret    
  40d713:	mov    ebx,0xf9dcbce9
  40d718:	jmp    0x8759:0x34888e30
  40d71f:	or     eax,0xb122383d
  40d724:	and    bl,cl
  40d726:	enter  0xe350,0x35
  40d72a:	jmp    0xa9db58a3
  40d72f:	xchg   edi,eax
  40d730:	data16 cmp al,0x88
  40d733:	jecxz  0x40d782
  40d735:	test   DWORD PTR [ecx+eiz*1],ebp
  40d738:	aas    
  40d739:	stc    
  40d73a:	daa    
  40d73b:	lock enter 0x6342,0xf8
  40d740:	arpl   WORD PTR [ecx+edi*1+0x6c],bx
  40d744:	loope  0x40d73f
  40d746:	cli    
  40d747:	push   ss
  40d748:	outs   dx,DWORD PTR ds:[esi]
  40d749:	jge    0x40d794
  40d74b:	repz test DWORD PTR [esi],ebx
  40d74e:	add    eax,0x32abc208
  40d753:	cmp    BYTE PTR [eax],ah
  40d755:	cs icebp 
  40d757:	cli    
  40d758:	sbb    bl,BYTE PTR [ebp+0x4c]
  40d75b:	inc    ebx
  40d75c:	enter  0xc7c6,0xb2
  40d760:	sub    bh,BYTE PTR [esi]
  40d762:	jg     0x40d7c8
  40d764:	cli    
  40d765:	mov    WORD PTR [esi],cs
  40d767:	cmp    BYTE PTR [eax-0x29],0x4f
  40d76b:	aam    0x9d
  40d76d:	ins    DWORD PTR es:[edi],dx
  40d76e:	mov    dh,0xf5
  40d770:	mov    ebx,0xef785d5d
  40d775:	xor    ecx,DWORD PTR [esi-0x67011ed2]
  40d77b:	dec    edi
  40d77c:	data16 stc 
  40d77e:	sub    bl,BYTE PTR [ecx]
  40d780:	push   ecx
  40d781:	out    dx,al
  40d782:	pop    ebp
  40d783:	xlat   BYTE PTR ds:[ebx]
  40d784:	push   0x6c585cf3
  40d789:	and    eax,0xb642368a
  40d78e:	popa   
  40d78f:	jmp    DWORD PTR [ecx-0x38]
  40d792:	or     ah,BYTE PTR [eax+0x2e]
  40d795:	mov    ds:0x1b17cade,eax
  40d79a:	clc    
  40d79b:	cmp    bh,BYTE PTR [edx-0x21]
  40d79e:	inc    ebx
  40d79f:	push   eax
  40d7a0:	imul   ecx,DWORD PTR [eax],0x6bc1b70d
  40d7a6:	push   ebp
  40d7a7:	int3   
  40d7a8:	shr    edx,1
  40d7aa:	out    0x89,al
  40d7ac:	xor    ch,BYTE PTR [eax]
  40d7ae:	pop    edx
  40d7af:	sub    al,0x67
  40d7b1:	in     al,0x32
  40d7b3:	jge    0x40d741
  40d7b5:	dec    ebp
  40d7b6:	xchg   esi,eax
  40d7b7:	jmp    0x40d7c0
  40d7b9:	jne    0x40d73d
  40d7bb:	ins    BYTE PTR es:[edi],dx
  40d7bc:	jne    0x40d7e8
  40d7be:	dec    esp
  40d7bf:	(bad)  
  40d7c0:	popf   
  40d7c1:	sbb    BYTE PTR [edx+0x106e3697],cl
  40d7c7:	mov    ds:0xee9165c0,eax
  40d7cc:	dec    di
  40d7ce:	add    eax,0xaf17e5a4
  40d7d3:	pop    ds
  40d7d4:	inc    ebx
  40d7d5:	jg     0x40d7c6
  40d7d7:	xchg   BYTE PTR [ebx+0x8dd6819],dl
  40d7dd:	cmp    al,0x69
  40d7df:	rcr    DWORD PTR [eax-0x35],0x84
  40d7e3:	xchg   esp,eax
  40d7e4:	test   al,0x27
  40d7e6:	cmp    DWORD PTR cs:[ebp-0x6f],0x8cff7a72
  40d7ee:	jmp    0xab8d:0x891175eb
  40d7f5:	loop   0x40d7d7
  40d7f7:	inc    ebx
  40d7f8:	je     0x40d879
  40d7fa:	mov    ecx,0x1c043ebd
  40d7ff:	pop    edi
  40d800:	je     0x40d7d0
  40d802:	aas    
  40d803:	push   ebp
  40d804:	push   edx
  40d805:	sub    eax,0x54c5b7dd
  40d80a:	cmp    bl,BYTE PTR [edx-0x15]
  40d80d:	mov    BYTE PTR [ebp+0xf],dh
  40d810:	fwait
  40d811:	sbb    al,0x3a
  40d813:	mov    BYTE PTR [ebx+0x8],dh
  40d816:	cwde   
  40d817:	sbb    DWORD PTR ds:0xf5f7b646,0xffffffdb
  40d81e:	cli    
  40d81f:	jg     0x40d892
  40d821:	or     ebp,esp
  40d823:	push   ebx
  40d824:	int3   
  40d825:	int    0x7f
  40d827:	jmp    0x27af:0x78d8753d
  40d82e:	js     0x40d88a
  40d830:	lds    esp,FWORD PTR [ebp+0x77]
  40d833:	mov    bl,0xb1
  40d835:	mov    edx,0x391f4915
  40d83a:	fisttp WORD PTR [ebp+0x48ad6990]
  40d840:	dec    esi
  40d841:	aad    0xf4
  40d843:	arpl   WORD PTR [eax-0xd],di
  40d846:	inc    ebx
  40d847:	cmc    
  40d848:	or     al,0x43
  40d84a:	mov    ah,0xc9
  40d84c:	ror    BYTE PTR [ecx-0x435000d8],cl
  40d852:	ficomp DWORD PTR [eax]
  40d854:	dec    eax
  40d855:	fcomp  QWORD PTR [esi-0x28]
  40d858:	retf   
  40d859:	inc    DWORD PTR ds:0x7529b844
  40d85f:	jecxz  0x40d867
  40d861:	inc    eax
  40d862:	push   ds
  40d863:	sbb    bh,BYTE PTR [edx-0x2b]
  40d866:	cmp    DWORD PTR [edi+eax*4],edi
  40d869:	adc    al,0xac
  40d86b:	push   eax
  40d86c:	mov    ds:0x8e149775,al
  40d871:	in     eax,0x1b
  40d873:	stc    
  40d874:	repz int3 
  40d876:	cwde   
  40d877:	std    
  40d878:	mov    ds:0x2cc9b9ac,eax
  40d87d:	xchg   esp,eax
  40d87e:	scas   eax,DWORD PTR es:[edi]
  40d87f:	cld    
  40d880:	mov    bl,0x2e
  40d882:	push   esp
  40d883:	fld    QWORD PTR [ebx-0x1a]
  40d886:	loop   0x40d87d
  40d888:	add    al,0xbe
  40d88a:	mov    ch,0x99
  40d88c:	setnp  BYTE PTR [edx+0x5a210677]
  40d893:	iret   
  40d894:	mov    esp,0x2b60e189
  40d899:	mov    cl,0x38
  40d89b:	sub    eax,0xb4da930
  40d8a0:	and    eax,esi
  40d8a2:	aam    0x53
  40d8a4:	shl    DWORD PTR [ebx],cl
  40d8a6:	das    
  40d8a7:	cmp    eax,0x8b127c68
  40d8ac:	data16 mov cl,ch
  40d8af:	pusha  
  40d8b0:	cmp    eax,0xc11ec2f2
  40d8b5:	and    eax,DWORD PTR [ecx*4-0x3261e0ca]
  40d8bc:	push   0xfc3cacd3
  40d8c1:	mov    ch,0x9
  40d8c3:	ins    BYTE PTR es:[edi],dx
  40d8c4:	sub    ecx,DWORD PTR [eax-0x7863651]
  40d8ca:	aas    
  40d8cb:	out    0x1c,eax
  40d8cd:	fisub  DWORD PTR [ebx]
  40d8cf:	sbb    eax,0xb6e2c32d
  40d8d4:	out    0xdc,al
  40d8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d7:	js     0x40d8e1
  40d8d9:	mov    cl,0xa7
  40d8db:	mov    ch,0x72
  40d8dd:	cmc    
  40d8de:	stc    
  40d8df:	dec    ebx
  40d8e0:	dec    esi
  40d8e1:	jbe    0x40d8cc
  40d8e3:	ins    BYTE PTR es:[edi],dx
  40d8e4:	test   BYTE PTR [edx-0x78d852bc],bl
  40d8ea:	mov    edi,0x2be51ac5
  40d8ef:	xchg   esi,eax
  40d8f0:	add    bl,BYTE PTR [edx+0x3b]
  40d8f3:	enter  0x372f,0x9f
  40d8f7:	jnp    0x40d8af
  40d8f9:	inc    ecx
  40d8fa:	push   ebp
  40d8fb:	call   FWORD PTR [eax+0xd]
  40d8fe:	mov    esp,0x9b533594
  40d903:	aas    
  40d904:	inc    edx
  40d905:	cmp    BYTE PTR [esi+edi*4],al
  40d908:	add    bh,ah
  40d90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90b:	out    dx,eax
  40d90c:	inc    edx
  40d90d:	jae    0x40d8d9
  40d90f:	nop
  40d910:	adc    al,0xab
  40d912:	ret    
  40d913:	retf   
  40d914:	mov    dl,0xc
  40d916:	cmp    DWORD PTR [esi],0x41
  40d919:	dec    ebx
  40d91a:	popf   
  40d91b:	das    
  40d91c:	push   edi
  40d91d:	xchg   ebp,eax
  40d91e:	inc    edi
  40d91f:	mov    BYTE PTR [edx],ah
  40d921:	call   0xaeb8:0x5ad65909
  40d928:	cld    
  40d929:	add    ebp,ebx
  40d92b:	jmp    0x40d94a
  40d92d:	push   ebp
  40d92e:	div    DWORD PTR [edx+0xa]
  40d931:	mov    eax,0x7e75d80f
  40d936:	or     edi,DWORD PTR [edi-0x72dd6e92]
  40d93c:	cwde   
  40d93d:	ds je  0x40d995
  40d940:	jo     0x40d8c4
  40d942:	sar    BYTE PTR [ebp+0xdcd3cb1],0x46
  40d949:	xchg   ebp,eax
  40d94a:	out    dx,al
  40d94b:	aam    0xcf
  40d94d:	sub    ebx,DWORD PTR ds:0x46559393
  40d953:	dec    ebx
  40d954:	xchg   DWORD PTR [edi-0x38],ebx
  40d957:	jo     0x40d9ba
  40d959:	xor    eax,esp
  40d95b:	cmp    cl,BYTE PTR [eax]
  40d95d:	sub    eax,0xfe579dd5
  40d962:	pop    eax
  40d963:	in     al,0xfc
  40d965:	and    edx,eax
  40d967:	jbe    0x40d96b
  40d969:	int3   
  40d96a:	and    DWORD PTR [ebx+0x24],esi
  40d96d:	inc    eax
  40d96e:	lidtd  [ecx+0x5e]
  40d972:	jb     0x40d917
  40d974:	lods   al,BYTE PTR ds:[esi]
  40d975:	(bad)  
  40d976:	mov    dl,0x48
  40d978:	dec    eax
  40d979:	mov    ebp,0x8e747fd8
  40d97e:	cld    
  40d97f:	cmp    ch,bl
  40d981:	push   edx
  40d982:	(bad)  
  40d983:	shr    DWORD PTR gs:[edi],1
  40d986:	nop
  40d987:	dec    edi
  40d988:	and    BYTE PTR ds:0x417dca86,al
  40d98e:	mov    dh,dl
  40d990:	xor    DWORD PTR [eax+0x68],esi
  40d993:	and    DWORD PTR [eax-0x1f34b629],0x15
  40d99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d99b:	imul   ebp,DWORD PTR [eax+0x50],0x7f
  40d99f:	lahf   
  40d9a0:	xchg   BYTE PTR [esi+0x65ae5b70],al
  40d9a6:	add    DWORD PTR [ecx-0x3d216009],edi
  40d9ac:	pop    ebx
  40d9ad:	xchg   ebp,eax
  40d9ae:	sub    cl,dl
  40d9b0:	pop    ebp
  40d9b1:	push   ebx
  40d9b2:	mov    al,ds:0xa8d2e20d
  40d9b7:	adc    al,ah
  40d9b9:	mov    dl,0x54
  40d9bb:	mov    edi,0x46510105
  40d9c0:	out    dx,eax
  40d9c1:	neg    DWORD PTR [ebx-0x32e86ef6]
  40d9c7:	push   esi
  40d9c8:	rol    ebx,1
  40d9ca:	in     eax,0xbb
  40d9cc:	adc    ah,bl
  40d9ce:	cmp    edx,DWORD PTR [ecx+ebp*2+0x17a747de]
  40d9d5:	pop    esi
  40d9d6:	loopne 0x40da39
  40d9d8:	scas   eax,DWORD PTR es:[edi]
  40d9d9:	add    BYTE PTR [edx+0x9cedb9],ah
  40d9df:	mov    cs,WORD PTR [edi]
  40d9e1:	mov    ch,BYTE PTR [edi]
  40d9e3:	je     0x40da43
  40d9e5:	pop    esp
  40d9e6:	push   0x5b
  40d9e8:	inc    esi
  40d9e9:	jns    0x40da16
  40d9eb:	cmp    eax,0x78a9e608
  40d9f0:	aam    0xfc
  40d9f2:	mov    edx,0xa68b23ef
  40d9f7:	mov    WORD PTR [eax+ebp*8],gs
  40d9fa:	lods   al,BYTE PTR ds:[esi]
  40d9fb:	mov    BYTE PTR [eax-0x69],bh
  40d9fe:	(bad)  
  40d9ff:	xor    BYTE PTR [ecx-0x3f],bl
  40da02:	ss push esi
  40da04:	daa    
  40da05:	jg     0x40d9c1
  40da07:	icebp  
  40da08:	cmc    
  40da09:	xlat   BYTE PTR ds:[ebx]
  40da0a:	push   ds
  40da0b:	xchg   esp,eax
  40da0c:	pop    esi
  40da0d:	push   ds
  40da0e:	shl    DWORD PTR [ebx+edx*4-0x65],1
  40da12:	bound  ecx,QWORD PTR [ebx-0x37]
  40da15:	push   ebx
  40da16:	mov    bh,0x1b
  40da18:	in     al,0x29
  40da1a:	xchg   esi,eax
  40da1b:	push   edi
  40da1c:	inc    edx
  40da1d:	or     al,BYTE PTR [ecx+0x4fcbd220]
  40da23:	imul   eax,DWORD PTR [ecx-0x2e],0x6e5bc306
  40da2a:	bound  edi,QWORD PTR [edi]
  40da2c:	popa   
  40da2d:	and    al,BYTE PTR [edx-0x2a]
  40da30:	enter  0x7017,0xdb
  40da34:	xor    dl,BYTE PTR [esi-0x1c56871]
  40da3a:	ds sahf 
  40da3c:	outs   dx,DWORD PTR ds:[esi]
  40da3d:	jp     0x40da12
  40da3f:	repz push 0xfffffff5
  40da42:	bound  ebx,QWORD PTR [ecx]
  40da44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da45:	xor    cl,ah
  40da47:	stos   DWORD PTR es:[edi],eax
  40da48:	sar    dl,cl
  40da4a:	jae    0x40da5d
  40da4c:	ucomiss xmm6,DWORD PTR [ebx]
  40da4f:	clc    
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0x95,eax
  40da6e:	dec    ecx
  40da6f:	xchg   edx,eax
  40da70:	push   ebp
  40da71:	xor    ah,BYTE PTR [edx+0x79707e7e]
  40da77:	jle    0x40daf7
  40da79:	dec    ebx
  40da7a:	lods   al,BYTE PTR ds:[esi]
  40da7b:	ds int 0xd9
  40da7e:	xor    bh,BYTE PTR [eax+0x15]
  40da81:	sbb    eax,0xd88f545
  40da86:	cmp    eax,0xe70c77ee
  40da8b:	pop    esi
  40da8c:	call   0x3dff5b7f
  40da91:	pop    ebp
  40da92:	pop    ebx
  40da93:	repnz test eax,0x898ce02a
  40da99:	adc    ch,BYTE PTR [esi+0x68]
  40da9c:	popa   
  40da9d:	mov    ecx,0x9b259f0f
  40daa2:	xchg   DWORD PTR [edi-0x35],ebp
  40daa5:	mov    bh,0xd5
  40daa7:	cmp    esp,esi
  40daa9:	(bad)  
  40daaa:	xchg   esp,eax
  40daab:	xchg   edx,eax
  40daac:	es pop eax
  40daae:	shl    DWORD PTR [esi-0x28],0xd
  40dab2:	lods   ax,WORD PTR ds:[esi]
  40dab4:	dec    DWORD PTR [edx+0x18]
  40dab7:	fbstp  TBYTE PTR [ebx-0x340d8334]
  40dabd:	cmp    DWORD PTR [esi+0x1c16465a],esp
  40dac3:	jmp    0x40db21
  40dac5:	mov    al,ds:0x7edfaefa
  40daca:	jmp    0x357ea45b
  40dacf:	outs   dx,DWORD PTR ds:[esi]
  40dad0:	pop    esp
  40dad1:	jne    0x40da5d
  40dad3:	mov    esp,0x89c3a040
  40dad8:	and    esi,DWORD PTR [ebp-0x46]
  40dadb:	ss jl  0x40daec
  40dade:	inc    ebp
  40dadf:	stos   BYTE PTR es:[edi],al
  40dae0:	cmp    al,0xd4
  40dae2:	shr    DWORD PTR [edi+edi*4-0x43cec6e2],0xc5
  40daea:	sub    BYTE PTR [ebx],bh
  40daec:	ins    DWORD PTR es:[edi],dx
  40daed:	jbe    0x40da87
  40daef:	stc    
  40daf0:	ds in  eax,dx
  40daf2:	out    0x31,al
  40daf4:	dec    edx
  40daf5:	xchg   esp,eax
  40daf6:	(bad)
  40daf9:	mov    cl,0x42
  40dafb:	outs   dx,DWORD PTR cs:[esi]
  40dafd:	clc    
  40dafe:	adc    ecx,DWORD PTR [eax]
  40db00:	xor    dh,BYTE PTR [ecx-0xe876c23]
  40db06:	mov    gs,WORD PTR [ecx]
  40db08:	popa   
  40db09:	add    al,0xb4
  40db0b:	xor    ecx,eax
  40db0d:	or     ecx,DWORD PTR [edi]
  40db0f:	stc    
  40db10:	div    DWORD PTR [esi+0x6545030c]
  40db16:	sub    bl,ch
  40db18:	shl    BYTE PTR [edx],1
  40db1a:	jl     0x40db56
  40db1c:	mov    bh,0xb7
  40db1e:	scas   al,BYTE PTR es:[edi]
  40db1f:	repnz shl ecx,1
  40db22:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40db24:	out    0x9f,eax
  40db26:	pop    ebx
  40db27:	pop    es
  40db28:	dec    eax
  40db29:	(bad)  
  40db2a:	xchg   ecx,eax
  40db2b:	mov    ebx,0xed10a6ed
  40db30:	mov    ch,0x3d
  40db32:	cmp    DWORD PTR [edi],ebx
  40db34:	fmul   DWORD PTR [ebx+0x1c]
  40db37:	mov    cl,0xd3
  40db39:	and    eax,eax
  40db3b:	mov    ds:0x82729421,al
  40db40:	fwait
  40db41:	push   ebp
  40db42:	in     al,dx
  40db43:	ins    DWORD PTR es:[edi],dx
  40db44:	int3   
  40db45:	fwait
  40db46:	es sbb eax,0xc47cabcf
  40db4c:	mov    dl,0xbd
  40db4e:	pop    ss
  40db4f:	dec    ebp
  40db50:	jp     0x40db97
  40db52:	cmp    al,0xe
  40db54:	and    DWORD PTR [eax-0x584db578],ecx
  40db5a:	and    bl,BYTE PTR ds:0x5f1bd510
  40db60:	mov    eax,ds:0x898db53
  40db65:	popa   
  40db66:	aad    0x5f
  40db68:	iret   
  40db69:	clc    
  40db6a:	(bad)  
  40db6b:	aam    0x3f
  40db6d:	sti    
  40db6e:	daa    
  40db6f:	sti    
  40db70:	(bad)  
  40db71:	enter  0x836a,0xc3
  40db75:	into   
  40db76:	arpl   si,bx
  40db78:	inc    esi
  40db79:	inc    esp
  40db7a:	fidivr WORD PTR [ecx-0x612b441e]
  40db80:	push   es
  40db81:	jge    0x40dc02
  40db83:	fisub  DWORD PTR [ebp-0x70a2b2c1]
  40db89:	leave  
  40db8a:	pop    es
  40db8b:	or     cl,bl
  40db8d:	idiv   BYTE PTR [ebx]
  40db8f:	dec    esi
  40db90:	mov    WORD PTR ss:[ebx+0x79],cs
  40db94:	xchg   edx,eax
  40db95:	pop    ebp
  40db96:	and    al,0x1f
  40db98:	aad    0xca
  40db9a:	fnstcw WORD PTR [ebx]
  40db9c:	sub    BYTE PTR [ebx+0x3f],dh
  40db9f:	push   ds
  40dba0:	xor    eax,0xa794db61
  40dba5:	popf   
  40dba6:	push   ecx
  40dba7:	js     0x40db8e
  40dba9:	jno    0x40db43
  40dbab:	aad    0xfb
  40dbad:	mov    WORD PTR [esi+0x79],cs
  40dbb0:	shl    BYTE PTR [esi],0x7c
  40dbb3:	adc    al,0xa5
  40dbb5:	add    al,BYTE PTR [eax]
  40dbb7:	shl    BYTE PTR [ebp-0x25ce90b0],1
  40dbbd:	gs popf 
  40dbbf:	inc    esi
  40dbc0:	ret    
  40dbc1:	xlat   BYTE PTR ds:[ebx]
  40dbc2:	fnstenv ds:0x9ecf6582
  40dbc8:	cmp    bh,BYTE PTR [eax-0x140aa478]
  40dbce:	test   eax,0xc9a3402e
  40dbd3:	sbb    BYTE PTR [eax-0x6e],ah
  40dbd6:	and    eax,0xfe895d60
  40dbdb:	je     0x40dbdf
  40dbdd:	test   BYTE PTR [edi-0x11],dh
  40dbe0:	jno    0x40db6b
  40dbe2:	adc    DWORD PTR [edx-0x81b55b8],esi
  40dbe8:	cli    
  40dbe9:	sbb    DWORD PTR [ebx-0x11ad5603],esp
  40dbef:	lea    edi,[eax+0x15]
  40dbf2:	cmp    eax,0x5d3e36e8
  40dbf7:	xor    al,0xd2
  40dbf9:	sub    BYTE PTR [esi],ch
  40dbfb:	sahf   
  40dbfc:	ret    
  40dbfd:	sbb    ebx,eax
  40dbff:	jo     0x40dbff
  40dc01:	test   DWORD PTR [edi+0x7c],ebx
  40dc04:	xor    ecx,ecx
  40dc06:	or     esi,ebp
  40dc08:	fbld   TBYTE PTR [edi+0x11c08c5e]
  40dc0e:	add    DWORD PTR [ebp+ecx*8+0x5320cb7c],esp
  40dc15:	fcmovu st,st(4)
  40dc17:	rcr    DWORD PTR [edi+ebp*4],0x10
  40dc1b:	inc    esi
  40dc1c:	xchg   ebp,eax
  40dc1d:	std    
  40dc1e:	dec    ebp
  40dc1f:	push   ecx
  40dc20:	aad    0x4c
  40dc22:	dec    esp
  40dc23:	xor    ecx,DWORD PTR [ebx+0x3af7f9ec]
  40dc29:	jbe    0x40dbe5
  40dc2b:	mov    edx,0x69bf609b
  40dc30:	mov    eax,0x9a92714f
  40dc35:	outs   dx,DWORD PTR ds:[esi]
  40dc36:	xchg   DWORD PTR [edi+0xce9ad6c],edi
  40dc3c:	imul   ebx,DWORD PTR [edi+0x3],0x7b9b1acb
  40dc43:	xor    al,0x26
  40dc45:	lock jb 0x40dc52
  40dc48:	sti    
  40dc49:	loopne 0x40dbf1
  40dc4b:	pop    esi
  40dc4c:	test   eax,0xb0500627
  40dc51:	in     eax,dx
  40dc52:	or     DWORD PTR [edx-0x6f],ecx
  40dc55:	jmp    0x6cbe:0x5d070959
  40dc5c:	sub    BYTE PTR [eax+0x265839ca],ch
  40dc62:	inc    ecx
  40dc63:	xchg   BYTE PTR ds:0xaffcaf6b,dl
  40dc69:	dec    esi
  40dc6a:	xchg   ebp,eax
  40dc6b:	lea    ecx,[ebx]
  40dc6d:	in     al,0x4e
  40dc6f:	loopne 0x40dc80
  40dc71:	jnp    0x40dc2e
  40dc73:	adc    al,0x33
  40dc75:	js     0x40dca0
  40dc77:	or     BYTE PTR ds:0x45590c90,bh
  40dc7d:	fidivr DWORD PTR [edi+0x5dd42db]
  40dc83:	in     al,dx
  40dc84:	sbb    BYTE PTR [ecx+eax*8+0x3aa98d3b],bh
  40dc8b:	xor    ch,BYTE PTR [ecx-0x41]
  40dc8e:	adc    DWORD PTR [edx+0x7ebb4e40],0xffffffc1
  40dc95:	adc    ah,al
  40dc97:	or     ah,0x73
  40dc9a:	imul   esi,DWORD PTR [ebx+0x6d],0x2dc861d8
  40dca1:	loopne 0x40dcb6
  40dca3:	sub    edx,DWORD PTR [esi]
  40dca5:	ss push cs
  40dca7:	daa    
  40dca8:	or     al,0x28
  40dcaa:	fnsave [ebx+0x58e0cc0a]
  40dcb0:	pop    ebp
  40dcb1:	outs   dx,BYTE PTR ds:[esi]
  40dcb2:	imul   esp,ecx,0xf7977292
  40dcb8:	les    ebp,FWORD PTR [edi+0x5ecb242f]
  40dcbe:	mov    gs,WORD PTR [ebx+0x3f74b55a]
  40dcc4:	jb     0x40dce5
  40dcc6:	repnz fimul DWORD PTR [ebx]
  40dcc9:	mov    WORD PTR [eax-0x7547391c],ds
  40dccf:	jmp    0xe5a96a66
  40dcd4:	pushf  
  40dcd5:	jmp    0xdd05ff19
  40dcda:	pop    esp
  40dcdb:	dec    esi
  40dcdc:	pop    ecx
  40dcdd:	mov    eax,0x8beb71e9
  40dce2:	fsubrp st(6),st
  40dce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dce5:	sbb    bl,bl
  40dce7:	push   ss
  40dce8:	sub    DWORD PTR [ebp-0x5f],esi
  40dceb:	cmp    DWORD PTR [edi-0x36],esp
  40dcee:	dec    ecx
  40dcef:	fstp   TBYTE PTR [ebp+0x6c]
  40dcf2:	lea    esp,[ecx]
  40dcf4:	test   al,0x2e
  40dcf6:	inc    ebp
  40dcf7:	les    edi,FWORD PTR [ecx+0x4c]
  40dcfa:	sbb    DWORD PTR [edx+0x55],ebp
  40dcfd:	imul   ecx,DWORD PTR [bp-0x46],0x7a28f828
  40dd05:	add    al,0x5d
  40dd07:	add    al,0x27
  40dd09:	cmp    eax,0xe120f1b5
  40dd0e:	into   
  40dd0f:	retf   0x3ac
  40dd12:	fucomip st,st(3)
  40dd14:	inc    ebp
  40dd15:	bound  ebp,QWORD PTR [ebx-0x89e6c36]
  40dd1b:	rcl    BYTE PTR [edi+eiz*8],0x2b
  40dd1f:	adc    ah,BYTE PTR [eax-0x57e5ca28]
  40dd25:	in     al,dx
  40dd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd27:	mov    esi,0x767d2742
  40dd2c:	xchg   BYTE PTR [edx-0x743c1fc4],dh
  40dd32:	add    eax,0x67babc8f
  40dd37:	in     al,dx
  40dd38:	jp     0x40dd00
  40dd3a:	icebp  
  40dd3b:	sbb    eax,0xae572898
  40dd40:	adc    ebp,edi
  40dd42:	pop    ecx
  40dd43:	pop    es
  40dd44:	pop    ecx
  40dd45:	(bad)  
  40dd46:	cmc    
  40dd47:	dec    ecx
  40dd48:	out    dx,al
  40dd49:	not    DWORD PTR [esi]
  40dd4b:	and    DWORD PTR [ebx+0x737de150],ebx
  40dd51:	fucomip st,st(6)
  40dd53:	test   DWORD PTR es:[edi],ebp
  40dd56:	pop    esi
  40dd57:	cld    
  40dd58:	mov    ebx,0x5a9bd2a0
  40dd5d:	push   esp
  40dd5e:	dec    ebp
  40dd5f:	xchg   DWORD PTR [ebx+0x4e],edi
  40dd62:	xor    edx,DWORD PTR [esi-0x79]
  40dd65:	sbb    ch,dl
  40dd67:	cld    
  40dd68:	mov    WORD PTR [ebx+0x66],cs
  40dd6b:	out    dx,al
  40dd6c:	push   ebx
  40dd6d:	push   0x70
  40dd6f:	or     ebp,esi
  40dd71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd72:	dec    ecx
  40dd73:	aad    0x22
  40dd75:	jae    0x40dd52
  40dd77:	dec    edi
  40dd78:	into   
  40dd79:	jbe    0x40dd66
  40dd7b:	vxorps xmm2,xmm2,XMMWORD PTR [edi+0x6d]
  40dd80:	(bad)  
  40dd81:	retf   
  40dd82:	push   esp
  40dd83:	mov    ecx,DWORD PTR [esi+ebp*8]
  40dd86:	push   0x36901399
  40dd8b:	sub    eax,DWORD PTR [ebp+0x506d347e]
  40dd91:	mov    eax,0xf885c3fb
  40dd96:	mov    ebx,ecx
  40dd98:	xor    BYTE PTR [edi-0x4f582b48],bh
  40dd9e:	xchg   esp,eax
  40dd9f:	imul   ebp,DWORD PTR [ecx+0x6ed924ec],0x4e
  40dda6:	shr    ch,1
  40dda8:	inc    ecx
  40dda9:	scas   eax,DWORD PTR es:[edi]
  40ddaa:	xchg   DWORD PTR [edx],ebp
  40ddac:	dec    edx
  40ddad:	fdivr  DWORD PTR [ebx]
  40ddaf:	pop    edx
  40ddb0:	or     eax,0x66e1ab27
  40ddb5:	jns    0x40ddd2
  40ddb7:	sbb    DWORD PTR [edx+0x115b1201],edi
  40ddbd:	adc    al,0x7e
  40ddbf:	mov    DWORD PTR [ebp-0x3adefb97],ecx
  40ddc5:	xchg   ebx,eax
  40ddc6:	push   es
  40ddc7:	not    DWORD PTR [ecx+0x2fe1422b]
  40ddcd:	cli    
  40ddce:	push   ds
  40ddcf:	sbb    al,0x89
  40ddd1:	push   ds
  40ddd2:	xor    BYTE PTR [edi+0x2bf072b0],al
  40ddd8:	lea    edx,[edi-0x28]
  40dddb:	xor    DWORD PTR [eax+0x30cf29ce],ebx
  40dde1:	jmp    0x40ddd9
  40dde3:	sub    DWORD PTR [esi],ecx
  40dde5:	outs   dx,DWORD PTR ds:[esi]
  40dde6:	mov    bl,0xb9
  40dde8:	inc    edx
  40dde9:	inc    ebp
  40ddea:	sub    DWORD PTR [edi+edi*8+0x38],0x671f438c
  40ddf2:	fnstenv [edx+0x507f9ff7]
  40ddf8:	xchg   ecx,eax
  40ddf9:	xchg   BYTE PTR [ebx],dl
  40ddfb:	test   DWORD PTR [ebp+0xd],edx
  40ddfe:	inc    esi
  40ddff:	push   esp
  40de00:	add    DWORD PTR [esi+ecx*4+0x44044699],esp
  40de07:	les    esp,FWORD PTR [ecx-0x1d390d29]
  40de0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de0e:	jmp    0x40ddbd
  40de10:	mov    dh,BYTE PTR [esi+ecx*2+0x31]
  40de14:	sti    
  40de15:	cmp    al,0x2f
  40de17:	(bad)  
  40de18:	(bad)  
  40de19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de1a:	enter  0xa818,0x8c
  40de1e:	mov    bh,0xe0
  40de20:	int    0x8e
  40de22:	adc    ecx,DWORD PTR [ecx+0x34a1ba78]
  40de28:	adc    al,0x10
  40de2a:	mov    al,0x32
  40de2c:	sar    DWORD PTR [ebp+0x6],1
  40de2f:	and    DWORD PTR [ebx-0x312eeb1f],esi
  40de35:	stos   DWORD PTR es:[edi],eax
  40de36:	and    ch,BYTE PTR [esi-0x2c]
  40de39:	pop    ebp
  40de3a:	mov    eax,DWORD PTR [edi]
  40de3c:	and    DWORD PTR [edi],ebx
  40de3e:	add    al,0x12
  40de40:	mov    eax,0xcf1c3f83
  40de45:	test   esp,ecx
  40de47:	mov    dh,ch
  40de49:	les    esp,FWORD PTR [edx-0x55]
  40de4c:	jge    0x40dec3
  40de4e:	cld    
  40de4f:	mov    ebx,0x8739d993
  40de54:	es test edx,ecx
  40de57:	xor    bh,bl
  40de59:	dec    ebp
  40de5a:	fidivr WORD PTR [edx+0x4b]
  40de5d:	xchg   BYTE PTR [eax+0x57],dl
  40de60:	mov    eax,0x358b9025
  40de65:	or     ah,cl
  40de67:	jl     0x40ddfa
  40de69:	out    0x53,al
  40de6b:	add    DWORD PTR [eax-0x1e],0x5559e645
  40de72:	mov    DWORD PTR [ecx+0x558bf855],ecx
  40de78:	loopne 0x40dead
  40de7a:	sar    BYTE PTR [edi-0x327299],1
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	jb     0x40de3d
  40de93:	jmp    FWORD PTR [ebp+0x34]
  40de96:	scas   al,BYTE PTR es:[edi]
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	loop   0x40df10
  40de9f:	enter  0x9ee9,0x3c
  40dea3:	jns    0x40de65
  40dea5:	loope  0x40def6
  40dea7:	mov    dl,0xc1
  40dea9:	cdq    
  40deaa:	jae    0x40ded1
  40deac:	dec    esi
  40dead:	mov    ds:0x4d0abcb7,al
  40deb2:	gs fdivr st(3),st
  40deb5:	clc    
  40deb6:	mov    ch,0xcd
  40deb8:	lds    esp,FWORD PTR [edx]
  40deba:	bound  edi,QWORD PTR [edx+ecx*2]
  40debd:	jmp    0xda2ba8ec
  40dec2:	push   0xd06eaaa2
  40dec7:	jle    0x40dea4
  40dec9:	(bad)  
  40deca:	mov    ch,0x4d
  40decc:	in     eax,dx
  40decd:	in     eax,0x22
  40decf:	xchg   ebp,eax
  40ded0:	int    0x93
  40ded2:	hlt    
  40ded3:	rcl    BYTE PTR [ecx+0xe61c791],1
  40ded9:	inc    ebp
  40deda:	iret   
  40dedb:	adc    BYTE PTR [edi-0x78],al
  40dede:	add    al,0xbe
  40dee0:	je     0x40de71
  40dee2:	loopne 0x40df25
  40dee4:	sahf   
  40dee5:	jecxz  0x40debe
  40dee7:	in     al,0x6a
  40dee9:	dec    eax
  40deea:	dec    eax
  40deeb:	fcmovnb st,st(4)
  40deed:	sar    ebx,1
  40deef:	mov    DWORD PTR [edx+edi*4-0x313d37aa],esi
  40def6:	pop    ecx
  40def7:	cmp    DWORD PTR ds:0x1c165727,eax
  40defd:	mov    eax,esi
  40deff:	ret    
  40df00:	int3   
  40df01:	bound  ecx,QWORD PTR [esi+0x367e5157]
  40df07:	add    esp,edx
  40df09:	es mov edi,0x814faee5
  40df0f:	in     eax,dx
  40df10:	pop    edx
  40df11:	(bad)  
  40df12:	adc    edx,edi
  40df14:	and    BYTE PTR [ebp+ecx*8+0x2613333d],ch
  40df1b:	(bad)  
  40df1c:	cld    
  40df1d:	aaa    
  40df1e:	jne    0x40df40
  40df20:	in     eax,0xa1
  40df22:	dec    edi
  40df23:	cli    
  40df24:	xchg   edi,eax
  40df25:	mov    cl,0x44
  40df27:	push   ss
  40df28:	int3   
  40df29:	repnz push es
  40df2b:	push   edx
  40df2c:	aaa    
  40df2d:	ret    0x79c1
  40df30:	loopne 0x40defe
  40df32:	add    edx,esp
  40df34:	sub    eax,0x5051c495
  40df39:	int    0x31
  40df3b:	shl    BYTE PTR [ecx],0x61
  40df3e:	div    BYTE PTR [ecx+0x2499fc55]
  40df44:	mov    eax,0xe179ab90
  40df49:	sub    ch,BYTE PTR [ebp-0x1c5484c6]
  40df4f:	and    eax,0xfc16978c
  40df54:	mov    bl,0x9a
  40df56:	ins    DWORD PTR es:[edi],dx
  40df57:	(bad)  
  40df58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df59:	jecxz  0x40df19
  40df5b:	stos   BYTE PTR es:[edi],al
  40df5c:	imul   ecx,eax,0x1a17c755
  40df62:	xchg   BYTE PTR [edi-0x10],dh
  40df65:	xchg   ebp,eax
  40df66:	call   0xc1720366
  40df6b:	add    BYTE PTR [edi],al
  40df6d:	push   edx
  40df6e:	and    eax,0x5dd70ea6
  40df73:	sub    eax,0xb26bbe06
  40df78:	(bad)  
  40df79:	out    dx,eax
  40df7a:	popa   
  40df7b:	mov    eax,ds:0x16bdabb1
  40df80:	xor    DWORD PTR [edx+0x5e],esp
  40df83:	das    
  40df84:	mov    esp,0xf21fb993
  40df89:	(bad)
  40df8c:	retf   
  40df8d:	(bad)  
  40df8e:	sub    BYTE PTR [ebx],cl
  40df90:	mov    ds:0xef772324,eax
  40df95:	fcomp  QWORD PTR [esi-0x1b]
  40df98:	mov    esp,0x94c66cc7
  40df9d:	pusha  
  40df9e:	inc    edx
  40df9f:	and    BYTE PTR ds:0x22479b34,ch
  40dfa5:	sbb    esi,DWORD PTR [ebp-0x20]
  40dfa8:	jmp    0x23ea0673
  40dfad:	stc    
  40dfae:	cdq    
  40dfaf:	(bad)  
  40dfb0:	in     al,0xdc
  40dfb2:	jnp    0x40dfc9
  40dfb4:	daa    
  40dfb5:	std    
  40dfb6:	sbb    DWORD PTR [esi+0x775ed5e5],ebp
  40dfbc:	push   esp
  40dfbd:	or     al,0x22
  40dfbf:	mov    ebx,0x9d532704
  40dfc4:	push   cs
  40dfc5:	repz dec esi
  40dfc7:	leave  
  40dfc8:	xchg   ecx,eax
  40dfc9:	xchg   BYTE PTR [esi+0x3b],ah
  40dfcc:	pop    ecx
  40dfcd:	fist   WORD PTR [eax]
  40dfcf:	std    
  40dfd0:	dec    edx
  40dfd1:	jle    0x40e03b
  40dfd3:	jmp    0xd28f5ae3
  40dfd8:	std    
  40dfd9:	xor    DWORD PTR [ebx],esi
  40dfdb:	xchg   esp,eax
  40dfdc:	cld    
  40dfdd:	jge    0x40e05d
  40dfdf:	xor    DWORD PTR [esi-0xaa8e7a9],0x28da0cc
  40dfe9:	inc    ebx
  40dfea:	sub    DWORD PTR [edi],esi
  40dfec:	and    al,0x1b
  40dfee:	rcl    BYTE PTR [edx+0x4b],0x41
  40dff2:	popa   
  40dff3:	pop    esi
  40dff4:	cmc    
  40dff5:	and    ecx,0xd413fdbb
  40dffb:	xchg   ebx,eax
  40dffc:	xor    BYTE PTR [ecx],0xd5
  40dfff:	sub    edi,ecx
  40e001:	scas   eax,DWORD PTR es:[edi]
  40e002:	inc    ebx
  40e003:	add    edx,edx
  40e005:	sbb    al,0x1d
  40e007:	cdq    
  40e008:	or     eax,DWORD PTR [ebp+0x1c847222]
  40e00e:	or     ah,ch
  40e010:	test   DWORD PTR [edi+0x45],0xde33c733
  40e017:	call   0x6642:0x994a8d3a
  40e01e:	adc    BYTE PTR [ebx],dl
  40e020:	jmp    0x61ba:0x7e4f6763
  40e027:	imul   ecx,DWORD PTR [edx-0x5feb5fd4],0xffffff92
  40e02e:	wbinvd 
  40e030:	or     DWORD PTR [edx+ecx*8],edx
  40e033:	and    bh,BYTE PTR [esi]
  40e035:	call   0x28cc8882
  40e03a:	lods   eax,DWORD PTR ds:[esi]
  40e03b:	inc    edx
  40e03c:	cwde   
  40e03d:	xor    BYTE PTR [ecx],0x46
  40e040:	adc    eax,0x47185a69
  40e045:	mov    ch,0xfb
  40e047:	mov    esp,0x45532178
  40e04c:	imul   edi,DWORD PTR [edx+edx*2+0x536b8a0b],0xeb78918f
  40e057:	lea    ecx,[eax+0x79]
  40e05a:	mov    eax,ds:0xb34d43ad
  40e05f:	push   esp
  40e060:	retf   0x7748
  40e063:	enter  0xfcb,0xbb
  40e067:	mov    ecx,0x8ccb274
  40e06c:	cld    
  40e06d:	scas   al,BYTE PTR es:[edi]
  40e06e:	scas   al,BYTE PTR es:[edi]
  40e06f:	cli    
  40e070:	outs   dx,BYTE PTR ds:[esi]
  40e071:	aaa    
  40e072:	add    ah,BYTE PTR [ecx-0x75ef0c24]
  40e078:	pop    esp
  40e079:	nop
  40e07a:	lods   eax,DWORD PTR ds:[esi]
  40e07b:	sbb    bl,BYTE PTR [ecx-0x21c0e6e9]
  40e081:	ja     0x40e07f
  40e083:	xor    BYTE PTR [ebp-0x46de0c8],al
  40e089:	cmp    al,0x27
  40e08b:	lods   al,BYTE PTR ds:[esi]
  40e08c:	stos   DWORD PTR es:[edi],eax
  40e08d:	and    edi,DWORD PTR [ebx+esi*1+0x50]
  40e091:	push   ecx
  40e092:	loope  0x40e05a
  40e094:	adc    bl,BYTE PTR [ecx-0x580095ee]
  40e09a:	fwait
  40e09b:	jecxz  0x40e029
  40e09d:	cmp    eax,0x5f931d7e
  40e0a2:	add    eax,0x1a614588
  40e0a7:	inc    edi
  40e0a8:	mov    ds:0x9c88df5b,eax
  40e0ad:	add    ch,dh
  40e0af:	rcl    DWORD PTR [edx*8-0x935eafa],0x35
  40e0b7:	cmc    
  40e0b8:	push   0x11
  40e0ba:	test   eax,0x8517481d
  40e0bf:	xor    eax,0xa262f56
  40e0c4:	mov    bl,0xef
  40e0c6:	add    edx,0x4565bfc4
  40e0cc:	push   esp
  40e0cd:	inc    eax
  40e0ce:	in     al,dx
  40e0cf:	xchg   edx,eax
  40e0d0:	not    DWORD PTR [edx+0x52]
  40e0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d4:	sbb    eax,0x78bfa11a
  40e0d9:	mov    edi,0xc254da4b
  40e0de:	dec    esi
  40e0df:	pop    esp
  40e0e0:	inc    eax
  40e0e1:	pop    ebx
  40e0e2:	cli    
  40e0e3:	push   ds
  40e0e4:	(bad)  
  40e0e6:	mov    ebp,0x881b359d
  40e0eb:	ds nop
  40e0ed:	mov    ebx,0x1151b1
  40e0f2:	jl     0x40e0bf
  40e0f4:	stc    
  40e0f5:	push   edx
  40e0f6:	mov    eax,DWORD PTR [ebx-0x49ab7378]
  40e0fc:	ins    BYTE PTR es:[edi],dx
  40e0fd:	jns    0x40e167
  40e0ff:	and    DWORD PTR ds:0xb01e1daf,eax
  40e105:	sti    
  40e106:	scas   al,BYTE PTR es:[edi]
  40e107:	mov    BYTE PTR [ebx+ebp*8-0x17],cl
  40e10b:	inc    ebp
  40e10c:	push   eax
  40e10d:	shr    BYTE PTR [edx-0x6d],1
  40e110:	mov    al,ds:0xd9823b03
  40e115:	mov    BYTE PTR [edi+0x4fbbd280],al
  40e11b:	clc    
  40e11c:	popa   
  40e11d:	jl     0x40e18f
  40e11f:	pop    ds
  40e120:	pop    esi
  40e121:	mov    DWORD PTR [edi],esi
  40e123:	xlat   BYTE PTR ds:[ebx]
  40e124:	bound  esi,QWORD PTR [edi-0x79]
  40e127:	cmp    DWORD PTR [ebx],ebp
  40e129:	push   eax
  40e12a:	add    eax,0x3f0e9f36
  40e12f:	pushf  
  40e130:	mov    eax,0x3673a684
  40e135:	je     0x40e1a6
  40e137:	sbb    al,0x3f
  40e139:	ds (bad) 
  40e13b:	inc    ebp
  40e13c:	push   ss
  40e13d:	in     eax,dx
  40e13e:	outs   dx,BYTE PTR ds:[esi]
  40e13f:	sub    eax,DWORD PTR [ecx]
  40e141:	clc    
  40e142:	and    ah,BYTE PTR ds:0xb8f1a9ef
  40e148:	cli    
  40e149:	and    DWORD PTR [eax],0xfd974c46
  40e14f:	adc    ah,BYTE PTR [edi-0x61]
  40e152:	push   ss
  40e153:	xchg   edi,eax
  40e154:	mov    esp,0x6c63fe13
  40e159:	dec    ebx
  40e15a:	and    bh,BYTE PTR [ecx-0x1e6c0fd1]
  40e160:	sub    DWORD PTR [ebx+0x7fc43b02],esp
  40e166:	retf   0x1f48
  40e169:	test   eax,0xaa72bfec
  40e16e:	xchg   edx,eax
  40e16f:	popf   
  40e170:	std    
  40e171:	push   cs
  40e172:	sbb    BYTE PTR [ebp-0x2b4744c],bl
  40e178:	test   eax,0x3b3f40ec
  40e17d:	push   ebx
  40e17e:	push   edx
  40e17f:	popa   
  40e180:	loopne 0x40e181
  40e182:	push   0x8c5978e9
  40e187:	push   cs
  40e188:	mov    ah,0x7e
  40e18a:	test   eax,0x1b4e358f
  40e18f:	push   ebp
  40e190:	int    0xbf
  40e192:	hlt    
  40e193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e194:	rep lods eax,DWORD PTR ds:[esi]
  40e196:	xchg   edx,eax
  40e197:	stos   DWORD PTR es:[edi],eax
  40e198:	mov    ch,0x5f
  40e19a:	xor    edi,DWORD PTR [edx]
  40e19c:	in     eax,0x3
  40e19e:	hlt    
  40e19f:	enter  0xca42,0x25
  40e1a3:	mov    dh,0xc5
  40e1a5:	cmp    eax,0x2dbd5350
  40e1aa:	add    esp,ecx
  40e1ac:	inc    ebx
  40e1ad:	outs   dx,DWORD PTR ds:[esi]
  40e1ae:	test   DWORD PTR es:[ebx+0x17e78698],ebp
  40e1b5:	sub    DWORD PTR [edx],esi
  40e1b7:	mov    ebx,DWORD PTR [ebx]
  40e1b9:	std    
  40e1ba:	xor    DWORD PTR [ebp-0x7a97cf95],edi
  40e1c0:	mov    cl,0xfa
  40e1c2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c4:	or     ebp,DWORD PTR ds:0xb6154c09
  40e1ca:	fcmovbe st,st(3)
  40e1cc:	add    al,0x38
  40e1ce:	dec    ebp
  40e1cf:	std    
  40e1d0:	mov    esi,0xbee4da20
  40e1d5:	push   ebx
  40e1d6:	jns    0x40e1d3
  40e1d8:	jecxz  0x40e21a
  40e1da:	pop    ebx
  40e1db:	das    
  40e1dc:	mov    DWORD PTR [esi],0x3d0ad5b4
  40e1e2:	xchg   DWORD PTR [edi-0x2a7e60e9],esp
  40e1e8:	push   esi
  40e1e9:	xor    al,0x5a
  40e1eb:	jle    0x40e1dc
  40e1ed:	adc    al,0x21
  40e1ef:	jg     0x40e1bc
  40e1f1:	test   esi,edi
  40e1f3:	ds arpl di,di
  40e1f6:	fs inc esp
  40e1f8:	ss sub ch,ch
  40e1fb:	stc    
  40e1fc:	fnstenv [edi]
  40e1fe:	and    bh,BYTE PTR [ebx]
  40e200:	cmp    ch,BYTE PTR [esi]
  40e202:	stos   DWORD PTR es:[edi],eax
  40e203:	test   esi,0xd8432b2f
  40e209:	xlat   BYTE PTR ds:[ebx]
  40e20a:	sbb    al,0xd2
  40e20c:	in     eax,0x20
  40e20e:	leave  
  40e20f:	test   DWORD PTR [ebx],ebx
  40e211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e212:	jle    0x40e1e5
  40e214:	cmc    
  40e215:	dec    ecx
  40e216:	pop    edx
  40e217:	sub    al,ch
  40e219:	test   eax,0x93665134
  40e21e:	aad    0x90
  40e220:	xor    eax,0xefd81ace
  40e225:	into   
  40e226:	mov    ah,0xbd
  40e228:	aam    0xa
  40e22a:	jp     0x40e24b
  40e22c:	stos   DWORD PTR es:[edi],eax
  40e22d:	or     BYTE PTR [edi+0x53],bh
  40e230:	cmp    eax,0x54c545ec
  40e235:	jae    0x40e22b
  40e237:	cdq    
  40e238:	dec    edx
  40e239:	out    0x79,al
  40e23b:	dec    edi
  40e23c:	jne    0x40e259
  40e23e:	jns    0x40e233
  40e240:	test   al,0x8e
  40e242:	fstp   DWORD PTR [ebp+0xe62f792]
  40e248:	int    0x9f
  40e24a:	out    dx,al
  40e24b:	adc    al,0x78
  40e24d:	neg    DWORD PTR [edx]
  40e24f:	bound  esi,QWORD PTR [ebx-0x88d2acb]
  40e255:	sbb    esi,DWORD PTR [eax+ecx*1-0x6]
  40e259:	cld    
  40e25a:	jg     0x40e275
  40e25c:	ror    BYTE PTR ds:0x304b76d9,1
  40e262:	sub    al,0x67
  40e264:	add    edx,edi
  40e266:	mov    ch,0x8
  40e268:	scas   al,BYTE PTR es:[edi]
  40e269:	mov    edx,0xdfb21a8f
  40e26e:	sbb    al,0x3a
  40e270:	ret    0xaadc
  40e273:	add    dh,BYTE PTR [eax-0x656b4c77]
  40e279:	scas   al,BYTE PTR es:[edi]
  40e27a:	push   edx
  40e27b:	fstp   TBYTE PTR [edi-0x1af208d4]
  40e281:	xor    eax,0x4893f1ef
  40e286:	fst    QWORD PTR [esi+0x11]
  40e289:	mov    al,ds:0xa9ff2a12
  40e28e:	imul   eax,DWORD PTR [edi],0xdd18967f
  40e294:	xor    BYTE PTR [esi+0x3fa2b79],dl
  40e29a:	jge    0x40e28c
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x15e5ddc
  40e2c4:	or     edi,ebx
  40e2c6:	gs cs stos BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	push   es
  40e2d0:	push   esi
  40e2d1:	call   0xf64fff84
  40e2d6:	fmul   st(5),st
  40e2d8:	repz jns 0x40e2f4
  40e2db:	test   dl,dl
  40e2dd:	iret   
  40e2de:	inc    BYTE PTR [ebx-0x2bc7f61]
  40e2e4:	or     DWORD PTR [ecx+0x7d],0x42
  40e2e8:	xchg   edi,eax
  40e2e9:	sub    BYTE PTR [eax+0x10709c08],0xba
  40e2f0:	cmp    ebx,DWORD PTR [esi+0x12]
  40e2f3:	jp     0x40e370
  40e2f5:	popf   
  40e2f6:	(bad)  
  40e2f7:	rol    BYTE PTR [esi],cl
  40e2f9:	mov    ds:0x6523e196,al
  40e2fe:	inc    ebx
  40e2ff:	arpl   di,bx
  40e301:	mov    ebp,0xd0a00950
  40e306:	aas    
  40e307:	fist   DWORD PTR [edi-0x7d52b8bc]
  40e30d:	inc    ecx
  40e30e:	test   DWORD PTR [eax-0x74aa547c],esp
  40e314:	pop    ebx
  40e315:	xchg   esp,eax
  40e316:	scas   eax,DWORD PTR es:[edi]
  40e317:	mov    esp,0x31cb5bd7
  40e31c:	sahf   
  40e31d:	inc    eax
  40e31e:	mov    DWORD PTR [ecx-0xd],esi
  40e321:	ror    BYTE PTR [edi-0x5d],0x19
  40e325:	nop
  40e326:	pop    ebx
  40e327:	les    edi,FWORD PTR [eax+0x3de00b1d]
  40e32d:	add    DWORD PTR [ebx-0x35d54a41],0x17
  40e334:	dec    esi
  40e335:	xchg   ebp,eax
  40e336:	(bad)  
  40e337:	cwde   
  40e338:	dec    esi
  40e339:	or     eax,0x72dfc46a
  40e33e:	test   al,0xc3
  40e340:	stos   BYTE PTR es:[edi],al
  40e341:	pop    esi
  40e342:	xchg   ebp,eax
  40e343:	aaa    
  40e344:	retf   
  40e345:	push   eax
  40e346:	into   
  40e347:	shr    BYTE PTR [ebx+0x6e],cl
  40e34a:	je     0x40e3c6
  40e34c:	in     eax,dx
  40e34d:	inc    edx
  40e34e:	mov    ds:0xb12b1d6c,eax
  40e353:	iret   
  40e354:	or     eax,0x214483fb
  40e359:	(bad)  
  40e35a:	cmp    al,0xb3
  40e35c:	mov    DWORD PTR [edi],edx
  40e35e:	push   esp
  40e35f:	mov    eax,ds:0xb9d0f4a7
  40e364:	xor    DWORD PTR [esi-0x7],eax
  40e367:	jmp    0x40e3ba
  40e369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e36a:	shl    BYTE PTR [esi],1
  40e36c:	pop    edx
  40e36d:	pushf  
  40e36e:	out    dx,eax
  40e36f:	outs   dx,BYTE PTR ds:[esi]
  40e370:	jp     0x40e366
  40e372:	arpl   WORD PTR [edi+edi*4-0x5d],di
  40e376:	fisub  DWORD PTR [ecx+0x1e]
  40e379:	add    BYTE PTR [esi+0x1191c045],dl
  40e37f:	out    dx,al
  40e380:	sbb    DWORD PTR [eax-0x5b],0xfffffff1
  40e384:	and    al,0xeb
  40e386:	push   edx
  40e387:	push   edi
  40e388:	vfnmaddps ymm4,ymm3,ymm6,YMMWORD PTR [edi+0xb]
  40e38f:	dec    edi
  40e390:	popa   
  40e391:	pusha  
  40e392:	sbb    eax,0xb721441d
  40e397:	dec    ebx
  40e398:	jmp    0x40e3d6
  40e39a:	and    esp,DWORD PTR [esi+eiz*2+0x54e134e7]
  40e3a1:	(bad)  
  40e3a2:	(bad)  
  40e3a3:	pop    esi
  40e3a4:	cmp    ecx,eax
  40e3a6:	and    eax,0x47ab14f6
  40e3ab:	loopne 0x40e418
  40e3ad:	dec    esi
  40e3ae:	jge    0x40e34d
  40e3b0:	adc    BYTE PTR [edi+0x31],dl
  40e3b3:	shl    bl,cl
  40e3b5:	add    ebx,DWORD PTR [edx]
  40e3b7:	cs jge 0x40e3e1
  40e3ba:	xor    BYTE PTR [esi+eiz*1],0x22
  40e3be:	clc    
  40e3bf:	push   ecx
  40e3c0:	aaa    
  40e3c1:	daa    
  40e3c2:	nop
  40e3c3:	adc    al,0x2d
  40e3c5:	cmp    BYTE PTR [esi-0x5ffe9222],0x6a
  40e3cc:	xchg   edx,eax
  40e3cd:	pop    eax
  40e3ce:	fcomp  DWORD PTR [ebx-0x38ae431e]
  40e3d4:	pushf  
  40e3d5:	(bad)  
  40e3d6:	and    BYTE PTR [ebp+0xc1bd6d3],al
  40e3dc:	psubw  mm4,QWORD PTR es:[ebx+ecx*8+0x75]
  40e3e2:	(bad)  
  40e3e3:	jns    0x40e36f
  40e3e5:	fst    DWORD PTR [ebx-0x272aec15]
  40e3eb:	cwde   
  40e3ec:	mov    es,WORD PTR [eax]
  40e3ee:	imul   ecx,esp,0xa7f39078
  40e3f4:	dec    esp
  40e3f5:	es ss push edx
  40e3f8:	pop    ebp
  40e3f9:	mov    ecx,0xa9dcb1d8
  40e3fe:	jb     0x40e3d7
  40e400:	mov    ebx,0xa4c9dace
  40e405:	daa    
  40e406:	(bad)  
  40e408:	mov    eax,0xe877b0ac
  40e40d:	cwde   
  40e40e:	mov    cl,0xc8
  40e410:	clc    
  40e411:	cmp    dh,al
  40e413:	(bad)  
  40e414:	loopne 0x40e3cb
  40e416:	popf   
  40e417:	std    
  40e418:	out    0x91,al
  40e41a:	sub    al,0xbb
  40e41c:	pop    ebp
  40e41d:	call   0x5c91feb4
  40e422:	jle    0x40e45a
  40e424:	mov    ecx,0xab552208
  40e429:	fsub   QWORD PTR [edx]
  40e42b:	sub    al,0x76
  40e42d:	ja     0x40e3f1
  40e42f:	icebp  
  40e430:	(bad)  
  40e431:	in     al,dx
  40e432:	gs mov edx,0xb6a3a6af
  40e438:	mov    ch,0x27
  40e43a:	leave  
  40e43b:	mov    bl,0xc6
  40e43d:	imul   BYTE PTR [ebx+0xd]
  40e440:	and    DWORD PTR [esi],0xa918758f
  40e446:	mov    esp,0xacba6ee2
  40e44b:	xchg   edi,eax
  40e44c:	lods   eax,DWORD PTR ds:[esi]
  40e44d:	sub    cl,BYTE PTR [ebx+0x58fbcb2a]
  40e453:	cmp    al,ah
  40e455:	inc    ebx
  40e456:	pop    edi
  40e457:	dec    ebp
  40e458:	xlat   BYTE PTR ds:[ebx]
  40e459:	push   ebp
  40e45b:	imul   eax,DWORD PTR [edi],0xe9ecef23
  40e461:	clc    
  40e462:	ss sbb cl,al
  40e465:	adc    al,0x20
  40e467:	mov    cl,0xc3
  40e469:	popf   
  40e46a:	jmp    0xba122981
  40e46f:	mov    dl,0x71
  40e471:	mov    fs,WORD PTR [ecx]
  40e473:	cmp    BYTE PTR [edi-0x32],cl
  40e476:	jmp    0x3915:0x9c050b8
  40e47d:	sbb    DWORD PTR [esi+0x63],ebx
  40e480:	mov    ah,0x11
  40e482:	pop    ss
  40e483:	pop    edx
  40e484:	cmp    ebx,ecx
  40e486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e487:	mov    ds:0xf28face6,eax
  40e48c:	cld    
  40e48d:	dec    eax
  40e48e:	lgs    esp,FWORD PTR [ebp-0x10c88af5]
  40e495:	stos   DWORD PTR es:[edi],eax
  40e496:	xchg   esp,eax
  40e497:	jge    0x40e4d6
  40e499:	dec    esp
  40e49a:	neg    ebp
  40e49c:	mov    ds:0x175c8cc6,eax
  40e4a1:	add    ecx,DWORD PTR [esi]
  40e4a3:	mov    edi,0x499eec3f
  40e4a8:	jns    0x40e4ca
  40e4aa:	adc    al,0x11
  40e4ac:	into   
  40e4ad:	aaa    
  40e4ae:	add    dl,0xbc
  40e4b1:	mov    ebp,0x2e2021ec
  40e4b6:	das    
  40e4b7:	lds    ecx,FWORD PTR [esi-0x4a2216fb]
  40e4bd:	mov    bl,0x9
  40e4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c0:	call   0x12b1db23
  40e4c5:	std    
  40e4c6:	pop    esi
  40e4c7:	test   DWORD PTR [edi+ebx*4-0x501cf7e1],ebx
  40e4ce:	cdq    
  40e4cf:	test   eax,0x76565d63
  40e4d4:	mov    ebp,0x59c558af
  40e4d9:	xor    BYTE PTR [ebx+eiz*2],bh
  40e4dc:	aas    
  40e4dd:	bound  ebp,QWORD PTR [esp+edx*8+0x23a23d8a]
  40e4e4:	inc    eax
  40e4e5:	xchg   esp,eax
  40e4e6:	call   0x9aa97313
  40e4eb:	ret    
  40e4ec:	mov    bl,0xad
  40e4ee:	pop    ebp
  40e4ef:	sub    ebp,DWORD PTR [edi+ebp*1+0x75]
  40e4f3:	xchg   edi,eax
  40e4f4:	int3   
  40e4f5:	mul    BYTE PTR [esp+eiz*2-0x3d]
  40e4f9:	ins    BYTE PTR es:[edi],dx
  40e4fa:	rcr    DWORD PTR ss:[ebx-0x67],0x25
  40e4ff:	add    al,0xd9
  40e501:	aas    
  40e502:	or     al,0xb4
  40e504:	mov    WORD PTR [eax],ss
  40e506:	mov    ecx,0xf5d9bf84
  40e50b:	mov    esp,0x44de4d61
  40e510:	inc    ebp
  40e511:	xchg   ebx,eax
  40e512:	add    al,BYTE PTR [ebp-0x7b370b09]
  40e518:	cdq    
  40e519:	icebp  
  40e51a:	stos   BYTE PTR es:[edi],al
  40e51b:	rep stos BYTE PTR es:[edi],al
  40e51d:	pop    ss
  40e51e:	pop    esi
  40e51f:	xlat   BYTE PTR ds:[ebx]
  40e520:	(bad)  
  40e521:	sbb    DWORD PTR [ebp-0x71],ebx
  40e524:	cmp    edi,DWORD PTR [esi]
  40e526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e527:	fild   QWORD PTR [ebp+0x21]
  40e52a:	ss sbb al,0x73
  40e52d:	in     al,dx
  40e52e:	call   0xa5471942
  40e533:	cmp    eax,0x8ffd6371
  40e538:	push   ebx
  40e539:	ja     0x40e535
  40e53b:	jp     0x40e571
  40e53d:	cmc    
  40e53e:	xchg   esp,eax
  40e53f:	fcmovnbe st,st(2)
  40e541:	dec    ebp
  40e542:	xchg   ebx,eax
  40e543:	nop
  40e544:	mov    al,0x4d
  40e546:	inc    edi
  40e547:	and    cl,BYTE PTR [ecx-0x46]
  40e54a:	pop    ss
  40e54b:	mov    ?,WORD PTR [ebx]
  40e54d:	push   eax
  40e54e:	sbb    DWORD PTR [edx+0x4d7e7210],ecx
  40e554:	sub    DWORD PTR [eax-0x141439f5],esp
  40e55a:	pop    ds
  40e55b:	retf   
  40e55c:	sub    cl,dh
  40e55e:	add    bh,dl
  40e560:	lea    eax,[esi+0x23]
  40e563:	sar    DWORD PTR [eax-0x69],cl
  40e566:	xchg   edi,eax
  40e567:	sbb    bh,0x62
  40e56a:	sub    al,0xc0
  40e56c:	loop   0x40e5a6
  40e56e:	sti    
  40e56f:	xor    eax,DWORD PTR [ebx+0x33]
  40e572:	popf   
  40e573:	loop   0x40e4f8
  40e575:	push   ecx
  40e576:	lds    eax,FWORD PTR [ebx-0x12]
  40e579:	mov    ch,0x48
  40e57b:	je     0x40e56b
  40e57d:	ins    BYTE PTR es:[edi],dx
  40e57e:	xchg   BYTE PTR [edx+edi*4],cl
  40e581:	jle    0x40e567
  40e583:	or     DWORD PTR [edx+0x7b45a369],edi
  40e589:	aam    0xfb
  40e58b:	mov    al,0x2e
  40e58d:	sub    esi,DWORD PTR [esi+esi*4]
  40e590:	shl    BYTE PTR [edi+0x5d0ecc53],0x5d
  40e597:	ror    BYTE PTR [ebp+0x6c],1
  40e59a:	and    edx,eax
  40e59c:	jmp    0x3e8e:0x6c43bf2c
  40e5a3:	rcl    DWORD PTR [edi],1
  40e5a5:	jnp    0x40e5f4
  40e5a7:	add    eax,0x37774754
  40e5ac:	jns    0x40e5ed
  40e5ae:	in     al,dx
  40e5af:	mov    ebx,0x9bc5818d
  40e5b4:	mov    ah,dl
  40e5b6:	imul   edx,DWORD PTR [edi-0x63],0x58fac05b
  40e5bd:	stos   DWORD PTR es:[edi],eax
  40e5be:	adc    DWORD PTR [edx-0x5e],ebx
  40e5c1:	sub    al,0x4a
  40e5c3:	jge    0x40e5e7
  40e5c5:	imul   eax,DWORD PTR [esi-0x65],0xffffff83
  40e5c9:	or     al,al
  40e5cb:	pop    edx
  40e5cc:	mov    esp,0xa8999b6d
  40e5d1:	lock (bad) 
  40e5d3:	gs pop ds
  40e5d5:	xor    ebx,DWORD PTR [ecx]
  40e5d7:	xor    BYTE PTR [ebp-0x64],cl
  40e5da:	push   0x6dfa550d
  40e5df:	mov    ecx,0x43d290ae
  40e5e4:	retf   
  40e5e5:	dec    edi
  40e5e6:	call   0x99de:0x33a0277
  40e5ed:	and    eax,0x73ff7c5c
  40e5f2:	and    eax,DWORD PTR [edx+0x4b0849a4]
  40e5f8:	shl    DWORD PTR [eax+0x130ab839],0x4f
  40e5ff:	push   edi
  40e600:	cmp    BYTE PTR [edi],ah
  40e602:	pop    ebp
  40e603:	je     0x40e5e4
  40e605:	push   eax
  40e606:	cmp    BYTE PTR ds:0x4a650232,cl
  40e60c:	mov    ecx,DWORD PTR [ebp-0x79213f64]
  40e612:	daa    
  40e613:	or     ecx,edi
  40e615:	sti    
  40e616:	sbb    edi,ecx
  40e618:	xor    al,cl
  40e61a:	(bad)  
  40e61c:	cmc    
  40e61d:	dec    ecx
  40e61e:	mov    al,0x3d
  40e620:	aaa    
  40e621:	mov    DWORD PTR [eax+0x54c38681],edi
  40e627:	add    BYTE PTR [edi+0x2e],dl
  40e62a:	cwde   
  40e62b:	adc    eax,DWORD PTR [eax-0x65e85bf4]
  40e631:	ss neg ecx
  40e634:	dec    edx
  40e635:	push   esi
  40e636:	mov    ebp,0x6bf05d0b
  40e63b:	out    dx,eax
  40e63c:	jbe    0x40e60a
  40e63e:	add    bh,BYTE PTR [eax+0xf]
  40e641:	cmp    bh,0x4d
  40e644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e645:	aam    0x1c
  40e647:	hlt    
  40e648:	sbb    esi,esp
  40e64a:	fwait
  40e64b:	in     eax,dx
  40e64c:	(bad)  
  40e64d:	adc    DWORD PTR [eax+0x579870dc],esi
  40e653:	jge    0x40e5f8
  40e655:	test   eax,0x4558f55b
  40e65a:	sahf   
  40e65b:	mov    dl,0x74
  40e65d:	stos   BYTE PTR es:[edi],al
  40e65e:	sub    DWORD PTR [edi+0xfd272fc],edx
  40e664:	mov    ebp,0xb0a5f438
  40e669:	jmp    0x40e621
  40e66b:	mov    WORD PTR [esi-0x6a],?
  40e66e:	pop    esp
  40e66f:	push   cs
  40e670:	fst    QWORD PTR [ebp+0x79]
  40e673:	gs loopne 0x40e63c
  40e676:	pop    eax
  40e677:	cmc    
  40e678:	aam    0x12
  40e67a:	bound  esp,QWORD PTR [ebp+0x578222a9]
  40e680:	rcl    DWORD PTR [esi+0x1b],1
  40e683:	pop    es
  40e684:	clc    
  40e685:	mov    eax,ds:0xbc90c0a0
  40e68a:	add    edx,DWORD PTR [edi]
  40e68c:	in     al,dx
  40e68d:	push   ss
  40e68e:	or     eax,0x4737ed48
  40e693:	lds    ebx,FWORD PTR [edx+0x1]
  40e696:	scas   eax,DWORD PTR es:[edi]
  40e697:	add    al,0xf
  40e699:	pop    esi
  40e69a:	in     eax,0x91
  40e69c:	sbb    al,0x42
  40e69e:	call   0xd21c246b
  40e6a3:	out    0xb6,eax
  40e6a5:	data16 (bad) 
  40e6a7:	xchg   esp,eax
  40e6a8:	test   DWORD PTR [esi],eax
  40e6aa:	cmp    esi,edi
  40e6ac:	in     al,0x32
  40e6ae:	pop    es
  40e6af:	cmp    bh,BYTE PTR [edi+0x46b525cd]
  40e6b5:	or     bh,BYTE PTR [ebx-0x3d]
  40e6b8:	add    al,0x90
  40e6ba:	retf   
  40e6bb:	xor    esi,ecx
  40e6bd:	(bad)  
  40e6be:	lea    esp,[edi]
  40e6c0:	je     0x40e68a
  40e6c2:	add    eax,0x9779b54b
  40e6c7:	(bad)  
  40e6c8:	sbb    DWORD PTR [edi-0x37],0xffffffc2
  40e6cc:	or     BYTE PTR [eax],al
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434713,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4346c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434647
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43463b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434603,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434637,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4346c7,0x4345df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4345eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43463b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4346d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4346d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4346d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4346d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4346d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4345eb
  40e789:	push   0x6202
  40e78e:	push   0x434788
  40e793:	push   0x434871
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4346d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4346d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4346d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43467b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43467b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43467b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43467b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43467b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43491f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43463b,0x17
  40e815:	cmp    DWORD PTR ds:0x43463b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43463b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43463b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43463b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43468b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4346bf,0x434607
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4345f3
  40e870:	and    ecx,DWORD PTR ds:0x4346cf
  40e876:	mov    DWORD PTR ds:0x4345f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434647,0x13
  40e889:	cmp    DWORD PTR ds:0x434647,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434647,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434647,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434647
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434647,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434647
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434647,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43467b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43467b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43467b,edi
  40e900:	cmp    DWORD PTR ds:0x43467b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43467b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4347f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43467b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43467b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43467b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43463f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434687
  40e958:	adc    DWORD PTR ds:0x4346b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43461b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434657
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4346b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4345ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434647,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4345fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4345fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4346f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4346c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4346ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434703,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4345f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434647,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4346bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434647,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4346bb
  40ea3e:	sub    DWORD PTR ds:0x4346bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43468f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434603,0x4346c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43468b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434603,0x43464f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4346bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43463f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4345ef,0x434603
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434603
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434693
  40eac7:	and    DWORD PTR ds:0x434643,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43470f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43463f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43463f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43463f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43463f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43463f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43463f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43463f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43463f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434647
  40eb55:	sbb    edx,DWORD PTR ds:0x434707
  40eb5b:	mov    DWORD PTR ds:0x434647,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43470b
  40eb6a:	or     DWORD PTR ds:0x4346bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434637
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43470f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43470b,0x4346c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43464f,0x434607
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4346bf,0x4346fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4345f7,0x434677
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4345e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434683,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43463b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434643,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434713,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43467b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434703,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4345e7,0x43468f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434693,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434693
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434693,eax
  40ec60:	cmp    DWORD PTR ds:0x434693,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434693,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434693
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434693,eax
  40ec91:	cmp    DWORD PTR ds:0x434693,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4345e3
  40eca5:	adc    eax,DWORD PTR ds:0x43467b
  40ecab:	mov    ds:0x4345e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43463f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4346f7,0x434603
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43467b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434637,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4346fb
  40ecfd:	or     DWORD PTR ds:0x434713,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434643,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434677,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4346d3,0x434637
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4346f7,0x4345ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434637,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434607,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43463f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434607,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4346ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434707,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4346c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4346c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4346c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4346c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43495b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4346c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43464f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4346c3,0x4346f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4345ff,0x4345ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43463b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4345ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4345ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4345ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4345ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43495b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4345ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4345ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x36
  40f16c:	sub    BYTE PTR [ebx],ah
  40f16e:	xor    DWORD PTR [eax],esp
  40f170:	mov    dh,0x7e
  40f172:	jle    0x40f168
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f120
  40f178:	rcl    DWORD PTR [ebx+0x25],1
  40f17b:	(bad)  
  40f17c:	jmp    0x40f119
  40f17e:	fld    TBYTE PTR [ebx-0x5d]
  40f181:	(bad)  
  40f182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f183:	inc    esp
  40f184:	cmp    al,0xc7
  40f186:	out    0x25,al
  40f188:	lahf   
  40f189:	push   es
  40f18a:	std    
  40f18b:	or     BYTE PTR fs:[edi-0x2d],al
  40f18f:	sub    BYTE PTR [ebx+0x678cd074],al
  40f195:	mov    fs,esi
  40f197:	mov    BYTE PTR ds:0xf1d4d1c0,dl
  40f19d:	and    DWORD PTR [ebp+0x39],edi
  40f1a0:	enter  0x7738,0x33
  40f1a4:	mov    ebx,0xa2d6f0e5
  40f1a9:	(bad)  
  40f1aa:	jae    0x40f1ff
  40f1ac:	call   0xaaa6:0x346910b0
  40f1b3:	test   dl,al
  40f1b5:	jg     0x40f214
  40f1b7:	add    BYTE PTR [eax],cl
  40f1b9:	ss mov ah,0x16
  40f1bc:	dec    esp
  40f1bd:	mov    bh,0x80
  40f1bf:	mov    ebp,0x7b78f763
  40f1c4:	(bad)  
  40f1c5:	lahf   
  40f1c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c8:	mov    al,0x29
  40f1ca:	addr16 sti 
  40f1cc:	mul    BYTE PTR [eax]
  40f1ce:	jno    0x40f199
  40f1d0:	pop    esi
  40f1d1:	in     al,dx
  40f1d2:	sbb    cl,BYTE PTR [eax]
  40f1d4:	push   esp
  40f1d5:	push   ebp
  40f1d6:	addr16 repnz mov esi,0xb31338aa
  40f1dd:	push   ss
  40f1de:	(bad)  
  40f1df:	lods   al,BYTE PTR ds:[esi]
  40f1e0:	mov    bh,0x1d
  40f1e2:	(bad)  
  40f1e3:	mov    ds:0xc896e874,al
  40f1e8:	das    
  40f1e9:	jp     0x40f24a
  40f1eb:	ja     0x40f1d2
  40f1ed:	fsubr  DWORD PTR [esi-0x64658afb]
  40f1f3:	pushf  
  40f1f4:	fimul  WORD PTR [ebx-0x384f5fbb]
  40f1fa:	in     al,0x10
  40f1fc:	inc    esi
  40f1fd:	retf   
  40f1fe:	outs   dx,DWORD PTR ds:[esi]
  40f1ff:	(bad)  
  40f200:	cwde   
  40f201:	jecxz  0x40f27d
  40f203:	pop    es
  40f204:	in     eax,dx
  40f205:	lods   eax,DWORD PTR ds:[esi]
  40f206:	cmp    al,0x31
  40f208:	imul   eax,DWORD PTR [ecx+eiz*1],0x1ab997e0
  40f20f:	fs push edx
  40f211:	es xor al,0x54
  40f214:	mov    ebx,0x7c90c563
  40f219:	pushf  
  40f21a:	shr    DWORD PTR [ecx-0x2ef68681],0xf9
  40f221:	ds mov eax,0x62c26bf4
  40f227:	lds    edx,FWORD PTR [ecx+0x34]
  40f22a:	jl     0x40f234
  40f22c:	mov    esi,0xbabf610c
  40f231:	cli    
  40f232:	mov    ecx,0x3ba9341d
  40f237:	mov    al,0xf1
  40f239:	ficom  DWORD PTR ds:[ebx]
  40f23c:	jno    0x40f239
  40f23e:	push   esp
  40f23f:	push   ss
  40f240:	xlat   BYTE PTR ds:[ebx]
  40f241:	loope  0x40f1f8
  40f243:	jo     0x40f1d2
  40f245:	lock stos BYTE PTR es:[edi],al
  40f247:	mov    eax,ds:0xe9adebb0
  40f24c:	push   0x8b61de0b
  40f251:	push   esi
  40f252:	jnp    0x40f2b3
  40f254:	(bad)  
  40f255:	add    BYTE PTR [edi+0x6c],ah
  40f258:	ins    BYTE PTR es:[edi],dx
  40f259:	scas   eax,DWORD PTR es:[edi]
  40f25a:	and    al,0x12
  40f25c:	dec    ecx
  40f25d:	mov    al,ds:0x129b7fcb
  40f262:	sub    BYTE PTR [edx+0x61],cl
  40f265:	jb     0x40f1f8
  40f267:	hlt    
  40f268:	sbb    bl,ah
  40f26a:	pushf  
  40f26b:	jmp    0x40f1f1
  40f26d:	mov    cs:0x202752f1,eax
  40f273:	test   bl,ah
  40f275:	dec    ecx
  40f276:	fcomip st,st(6)
  40f278:	mov    cl,ah
  40f27a:	mov    dh,0xd4
  40f27c:	out    0x44,eax
  40f27e:	pand   mm7,mm6
  40f281:	out    0x52,eax
  40f283:	gs mov dh,0xf4
  40f286:	call   0xfc2fa81d
  40f28b:	mov    edx,0x2afa505d
  40f290:	sub    al,BYTE PTR [ecx+0xb]
  40f293:	add    BYTE PTR [ebp-0x276e3d6d],dl
  40f299:	mov    ds:0xba6cf645,al
  40f29e:	mov    BYTE PTR [eax+0x4ff5cfb7],ch
  40f2a4:	lahf   
  40f2a5:	dec    ecx
  40f2a6:	mov    edx,0x22db0583
  40f2ab:	xchg   ebx,eax
  40f2ac:	fimul  WORD PTR [ebx]
  40f2ae:	(bad)  
  40f2af:	iret   
  40f2b0:	out    dx,al
  40f2b1:	add    BYTE PTR [eax],0x52
  40f2b4:	outs   dx,DWORD PTR ds:[esi]
  40f2b5:	jg     0x40f332
  40f2b7:	or     eax,0x4de928ed
  40f2bc:	and    al,bh
  40f2be:	mov    esp,ebp
  40f2c0:	xor    al,0xdf
  40f2c2:	cdq    
  40f2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c4:	(bad)  
  40f2c5:	sbb    eax,0xa680afc5
  40f2ca:	pop    esp
  40f2cb:	xor    DWORD PTR ds:0x66aaf1d8,esi
  40f2d1:	jae    0x40f265
  40f2d3:	in     al,0x9d
  40f2d5:	mov    gs,WORD PTR [ecx+0x2f74d2de]
  40f2db:	out    0xe9,eax
  40f2dd:	sbb    DWORD PTR [esi+0x42],ecx
  40f2e0:	(bad)  
  40f2e1:	and    al,0x64
  40f2e3:	mov    ds:0x1f4f2c4c,al
  40f2e8:	push   edi
  40f2e9:	(bad)  
  40f2ea:	int    0x12
  40f2ec:	cmp    esi,DWORD PTR [ebp+0x7d4ec66c]
  40f2f2:	or     eax,0xa5339d68
  40f2f7:	fst    st(1)
  40f2f9:	xchg   ecx,eax
  40f2fa:	or     edx,DWORD PTR [ebx]
  40f2fc:	(bad)  
  40f2fe:	cmp    BYTE PTR [edi-0x69471609],bh
  40f304:	add    DWORD PTR [ebx+ecx*1-0x8ea0bed],esp
  40f30b:	arpl   WORD PTR [edx-0x13],ax
  40f30e:	xor    bl,BYTE PTR [ebx]
  40f310:	repnz pop edx
  40f312:	mov    BYTE PTR [edi+0x4c798050],dh
  40f318:	jp     0x40f358
  40f31a:	and    eax,0x145bcfab
  40f320:	sub    eax,0xaa248e00
  40f325:	je     0x40f348
  40f327:	lahf   
  40f328:	ss mov ah,0xf0
  40f32b:	or     DWORD PTR [esi+0x6fa0e45e],ecx
  40f331:	rcr    BYTE PTR [ebx-0x45],cl
  40f334:	outs   dx,DWORD PTR ds:[esi]
  40f335:	fwait
  40f336:	pop    ebp
  40f337:	add    ebx,DWORD PTR [ecx-0x11]
  40f33a:	mov    esp,0xd6edf351
  40f33f:	mov    ah,0x4b
  40f341:	push   ss
  40f342:	push   cs
  40f343:	jmp    0x8727c4a0
  40f348:	ret    0xb6f7
  40f34b:	xchg   edi,eax
  40f34c:	and    ah,BYTE PTR [edi-0x7cf40ee2]
  40f352:	or     dh,BYTE PTR [edx+0x297e064a]
  40f358:	(bad)  
  40f359:	xchg   esp,eax
  40f35a:	jecxz  0x40f2f1
  40f35c:	inc    ebp
  40f35d:	mov    DWORD PTR [esi+ecx*1-0x32ea9347],ebp
  40f364:	lahf   
  40f365:	bswap  eax
  40f367:	popa   
  40f368:	loop   0x40f319
  40f36a:	cli    
  40f36b:	pop    edi
  40f36c:	iret   
  40f36d:	add    dh,BYTE PTR [ecx+0x76]
  40f370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f371:	popa   
  40f372:	lahf   
  40f373:	mov    esp,0xdf16d26c
  40f378:	dec    eax
  40f379:	mov    eax,ds
  40f37b:	jae    0x40f38b
  40f37d:	add    ebx,DWORD PTR [ecx]
  40f37f:	or     DWORD PTR [eax-0x7df9fbc1],esp
  40f385:	ror    ch,0x3f
  40f388:	(bad)  
  40f389:	mov    edi,DWORD PTR [ebp+0x10f5ed22]
  40f38f:	mov    al,0x71
  40f391:	fsub   DWORD PTR [edi-0x390f099c]
  40f397:	jae    0x40f321
  40f399:	aam    0x12
  40f39b:	inc    eax
  40f39c:	dec    edi
  40f39d:	les    ebx,FWORD PTR [edx+eax*4-0x2d]
  40f3a1:	mov    al,ds:0xe27cb885
  40f3a6:	cmp    eax,esi
  40f3a8:	lods   al,BYTE PTR ds:[esi]
  40f3a9:	jnp    0x40f32b
  40f3ab:	sub    al,0xcf
  40f3ad:	add    eax,0x44a6e430
  40f3b2:	pop    ds
  40f3b3:	fisttp DWORD PTR [edi-0x10]
  40f3b6:	pop    DWORD PTR [ebp-0x6d]
  40f3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ba:	loop   0x40f36e
  40f3bc:	in     eax,0x17
  40f3be:	jp     0x40f439
  40f3c0:	aaa    
  40f3c1:	mov    dh,0x19
  40f3c3:	retf   0x22f8
  40f3c6:	lods   al,BYTE PTR ds:[esi]
  40f3c7:	sbb    dl,bl
  40f3c9:	sbb    cl,ah
  40f3cb:	rcr    ch,1
  40f3cd:	pop    edi
  40f3ce:	stos   BYTE PTR es:[edi],al
  40f3cf:	pushw  0x5db7
  40f3d3:	pop    ecx
  40f3d4:	xor    BYTE PTR [eax+0x2b8266de],0x7d
  40f3db:	xlat   BYTE PTR ds:[ebx]
  40f3dc:	enter  0xc7a7,0x15
  40f3e0:	inc    edi
  40f3e1:	repz cmp cl,BYTE PTR [ecx+0x26d78b62]
  40f3e8:	mov    eax,0xde5060e5
  40f3ed:	mov    ah,0xa3
  40f3ef:	sub    eax,0x7bf42eb8
  40f3f4:	xor    al,BYTE PTR [ebp+0x0]
  40f3f7:	in     eax,0xa
  40f3f9:	pop    eax
  40f3fa:	and    dl,cl
  40f3fc:	lea    ebx,[esi+0x64bde829]
  40f402:	in     eax,dx
  40f403:	in     al,dx
  40f404:	mov    es,WORD PTR [edx-0x35]
  40f407:	ja     0x40f474
  40f409:	inc    ecx
  40f40a:	aad    0xaf
  40f40c:	mov    dl,0x7b
  40f40e:	ret    
  40f40f:	push   ds
  40f410:	lods   al,BYTE PTR ss:[esi]
  40f412:	jne    0x40f480
  40f414:	mov    esi,0x7ae367fb
  40f419:	sub    BYTE PTR [ebp-0x5f505cc3],al
  40f41f:	pop    ss
  40f420:	(bad)  
  40f421:	pop    esp
  40f422:	adc    DWORD PTR [edx+eiz*1],esi
  40f425:	repz and edi,edx
  40f428:	xor    al,0x6d
  40f42a:	nop
  40f42b:	adc    ah,BYTE PTR [ebx+0x66]
  40f42e:	jo     0x40f491
  40f430:	das    
  40f431:	pop    es
  40f432:	mov    dh,0xfe
  40f434:	ret    
  40f435:	loop   0x40f3e7
  40f437:	stos   DWORD PTR es:[edi],eax
  40f438:	jne    0x40f48e
  40f43a:	jmp    0x40f412
  40f43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f43d:	jb     0x40f403
  40f43f:	jle    0x40f49b
  40f441:	pusha  
  40f442:	fistp  WORD PTR [ecx+ecx*8+0x7df1b98a]
  40f449:	pop    eax
  40f44a:	imul   edi,DWORD PTR [ecx],0x27
  40f44d:	out    dx,al
  40f44e:	inc    edi
  40f44f:	test   al,0x44
  40f451:	fisttp WORD PTR [edx-0x52]
  40f454:	or     dh,al
  40f456:	or     BYTE PTR [eax-0x7892e1b1],bh
  40f45c:	ret    0x4a45
  40f45f:	sub    edi,ecx
  40f461:	dec    esp
  40f462:	dec    edx
  40f463:	xor    BYTE PTR [eax+esi*4],0xfe
  40f467:	and    al,0xab
  40f469:	mov    fs,WORD PTR [esi-0x49]
  40f46c:	cdq    
  40f46d:	dec    eax
  40f46e:	push   ss
  40f46f:	ds mov esp,0xd72f0f6d
  40f475:	mov    esi,cs
  40f477:	test   BYTE PTR [edx-0x7442996e],dh
  40f47d:	push   es
  40f47e:	loop   0x40f4a1
  40f480:	jbe    0x40f4bd
  40f482:	jge    0x40f487
  40f484:	je     0x40f411
  40f486:	les    edx,FWORD PTR [ecx]
  40f488:	(bad)  
  40f48a:	mov    eax,0x5ccf2406
  40f48f:	sub    DWORD PTR [esi+0x3a],edi
  40f492:	stos   BYTE PTR es:[edi],al
  40f493:	shr    DWORD PTR [ebx],1
  40f495:	xor    dl,BYTE PTR [edi-0x1eb3ff09]
  40f49b:	js     0x40f461
  40f49d:	rcr    DWORD PTR [ebp+0x63],0x83
  40f4a1:	cmp    edi,ebx
  40f4a3:	(bad)  
  40f4a4:	out    dx,al
  40f4a5:	adc    eax,ebx
  40f4a7:	xchg   esp,eax
  40f4a8:	aaa    
  40f4a9:	push   ss
  40f4aa:	push   esp
  40f4ab:	push   ds
  40f4ac:	ja     0x40f478
  40f4ae:	cmp    BYTE PTR [ebp-0x62],bh
  40f4b1:	cmp    ebx,esi
  40f4b3:	fnstsw ax
  40f4b5:	or     ecx,DWORD PTR [edi+esi*2-0x3b]
  40f4b9:	int    0x5a
  40f4bb:	jno    0x40f4e6
  40f4bd:	xchg   ebx,eax
  40f4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4bf:	imul   ebx,DWORD PTR [bp+di],0x72
  40f4c3:	push   ebp
  40f4c4:	pop    ebx
  40f4c5:	mov    DWORD PTR [edi-0x595970d7],0x9cd21c82
  40f4cf:	ficomp WORD PTR [edi-0x4bfd3d42]
  40f4d5:	mov    bh,0x5f
  40f4d7:	outs   dx,DWORD PTR ds:[esi]
  40f4d8:	je     0x40f54a
  40f4da:	and    eax,0xb5b3cf84
  40f4df:	sub    DWORD PTR [esi+edx*4],ecx
  40f4e2:	adc    ah,BYTE PTR ds:0x6d5f9403
  40f4e8:	fistp  WORD PTR [ebx+0x51fdabe0]
  40f4ee:	push   ecx
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x4346fb,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43470b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4346d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4346ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43463f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43468b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x62]
  40f561:	push   ds
  40f562:	pushf  
  40f563:	addr16 sahf 
  40f565:	mov    cl,0x7e
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f4f1
  40f56d:	mov    ds:0x3cdd36af,al
  40f572:	pop    edx
  40f573:	sahf   
  40f574:	sbb    eax,0x5acc6623
  40f579:	retf   
  40f57a:	mov    ebp,0x29d23df7
  40f57f:	mov    ecx,0x88039a7a
  40f584:	retf   0x8aa
  40f587:	cli    
  40f588:	xchg   DWORD PTR es:[ecx+0x7b],esi
  40f58c:	adc    DWORD PTR [edi+eiz*8+0x5a],0x78b9d03c
  40f594:	sub    al,0xc0
  40f596:	pop    esi
  40f597:	mov    al,0xe7
  40f599:	pop    ebp
  40f59a:	aam    0x38
  40f59c:	(bad)  
  40f59d:	adc    eax,0x931044d1
  40f5a2:	fistp  WORD PTR [ebx]
  40f5a4:	cmp    eax,0x3cbb7910
  40f5a9:	sub    dh,dl
  40f5ab:	push   0xffffffb0
  40f5ad:	adc    ecx,edi
  40f5af:	sub    eax,0xfefe2376
  40f5b4:	sub    eax,0x9d0ef913
  40f5b9:	sbb    cl,dh
  40f5bb:	add    DWORD PTR ds:[esi+eiz*2-0x550227a9],eax
  40f5c3:	ss jmp 0x7cc0:0xd8e115e4
  40f5cb:	sbb    al,0x57
  40f5cd:	push   cs
  40f5ce:	sub    bl,BYTE PTR ds:0x18c27b02
  40f5d4:	out    dx,al
  40f5d5:	in     al,dx
  40f5d6:	call   FWORD PTR [edx+ebp*2]
  40f5d9:	ins    BYTE PTR es:[edi],dx
  40f5da:	lock or ah,BYTE PTR [ecx-0x111bfe39]
  40f5e1:	or     ah,BYTE PTR [esi]
  40f5e3:	jb     0x40f605
  40f5e5:	and    BYTE PTR [ebp-0x3d],0xfc
  40f5e9:	out    0x76,al
  40f5eb:	sar    ebx,cl
  40f5ed:	std    
  40f5ee:	arpl   sp,bp
  40f5f0:	lods   al,BYTE PTR ds:[esi]
  40f5f1:	adc    eax,0x9811fb33
  40f5f6:	dec    eax
  40f5f7:	pop    ds
  40f5f8:	jns    0x40f603
  40f5fa:	cmp    ch,cl
  40f5fc:	mov    eax,ds:0x6afeb349
  40f601:	jb     0x40f5c1
  40f603:	std    
  40f604:	in     eax,0xc0
  40f606:	pop    ebp
  40f607:	rol    DWORD PTR [ecx],0x9d
  40f60a:	aaa    
  40f60b:	xor    esi,DWORD PTR ds:0xbed9be13
  40f611:	aad    0xf9
  40f613:	mov    al,0xb9
  40f615:	sti    
  40f616:	iret   
  40f617:	xchg   DWORD PTR [ecx+0x3],esp
  40f61a:	lahf   
  40f61b:	sub    al,0xd1
  40f61d:	cld    
  40f61e:	mov    bh,0xb5
  40f620:	call   0x86e6e81d
  40f625:	adc    bl,BYTE PTR [esi]
  40f627:	dec    ebp
  40f628:	inc    eax
  40f629:	sub    al,0x90
  40f62b:	sti    
  40f62c:	fbstp  TBYTE PTR [esi]
  40f62e:	mov    ebp,0x3ecd6749
  40f633:	add    DWORD PTR [ebp+0x7f],esi
  40f636:	in     al,dx
  40f637:	dec    esi
  40f638:	mov    edx,0x7ee67ab2
  40f63d:	test   DWORD PTR [edx+0x5c],esi
  40f640:	pop    esp
  40f641:	ins    DWORD PTR es:[edi],dx
  40f642:	xchg   esi,eax
  40f643:	pop    edi
  40f644:	or     DWORD PTR [ecx-0x6fd62233],ecx
  40f64a:	outs   dx,DWORD PTR ds:[esi]
  40f64b:	ins    DWORD PTR es:[edi],dx
  40f64c:	xor    dl,BYTE PTR [eax-0x61806891]
  40f652:	aaa    
  40f653:	jle    0x40f674
  40f655:	sar    BYTE PTR [ebx],0xed
  40f658:	xchg   ebx,eax
  40f659:	inc    esp
  40f65a:	sbb    al,0x2d
  40f65c:	pop    ecx
  40f65d:	lods   eax,DWORD PTR ds:[esi]
  40f65e:	dec    eax
  40f65f:	push   edi
  40f660:	dec    edx
  40f661:	mov    al,ds:0x895fa87d
  40f666:	jo     0x40f654
  40f668:	or     eax,0x45161f88
  40f66d:	mov    ecx,0xe032c679
  40f672:	dec    eax
  40f673:	mov    ah,0x7e
  40f675:	mov    ds:0xbb67cd4d,al
  40f67a:	cmp    esi,DWORD PTR [ebx+0xc]
  40f67d:	mov    bl,BYTE PTR [ebp+0x2488fe1]
  40f683:	mov    ebx,0x6390a8d7
  40f688:	mov    ds:0xe9096ff3,eax
  40f68d:	stos   DWORD PTR es:[edi],eax
  40f68e:	dec    ecx
  40f68f:	mul    BYTE PTR [edx-0x29fe9597]
  40f695:	stc    
  40f696:	ret    0x64e6
  40f699:	int3   
  40f69a:	bnd jl 0x40f63d
  40f69d:	or     bh,dh
  40f69f:	addr16 jnp 0x40f6f3
  40f6a2:	lahf   
  40f6a3:	xchg   ecx,eax
  40f6a4:	into   
  40f6a5:	rcr    BYTE PTR [ebx-0x10],1
  40f6a8:	mov    DWORD PTR [eax-0x5f],ebp
  40f6ab:	or     al,0x85
  40f6ad:	stc    
  40f6ae:	sbb    eax,0x7a8ed7c8
  40f6b3:	or     esp,esp
  40f6b5:	mov    ebp,0x7847fd96
  40f6ba:	dec    esi
  40f6bb:	mov    dl,0xdf
  40f6bd:	push   esi
  40f6be:	mov    bh,0xe
  40f6c0:	xor    ebx,DWORD PTR [ebx+0x31]
  40f6c3:	mov    ecx,0x64845ee4
  40f6c8:	mov    ds:0x4a6a405a,al
  40f6cd:	out    0xb8,eax
  40f6cf:	and    al,0x40
  40f6d1:	xchg   DWORD PTR [esp+eiz*2],edx
  40f6d4:	nop
  40f6d5:	rcl    BYTE PTR [ecx],1
  40f6d7:	jo     0x40f717
  40f6d9:	stos   DWORD PTR es:[edi],eax
  40f6da:	pusha  
  40f6db:	adc    eax,DWORD PTR [esi-0x1929e719]
  40f6e1:	mov    bh,0x97
  40f6e3:	jge    0x40f71e
  40f6e5:	ficomp DWORD PTR [ecx]
  40f6e7:	fucomp st(2)
  40f6e9:	cli    
  40f6ea:	loope  0x40f737
  40f6ec:	xchg   esi,eax
  40f6ed:	inc    esp
  40f6ee:	add    eax,0x3b659146
  40f6f3:	and    eax,0x88a1a4e3
  40f6f8:	int    0x1f
  40f6fa:	mov    al,ds:0x2ec2dc87
  40f6ff:	mul    ecx
  40f701:	mov    al,ds:0x564013ea
  40f706:	cmp    al,BYTE PTR [ebp+edi*8+0xb1e998f]
  40f70d:	pop    ds
  40f70e:	in     eax,dx
  40f70f:	stos   DWORD PTR es:[edi],eax
  40f710:	mov    ch,0xb4
  40f712:	sub    DWORD PTR [eax],ebx
  40f714:	xchg   ebp,eax
  40f715:	mov    WORD PTR ds:0xab706ac4,es
  40f71b:	push   es
  40f71c:	into   
  40f71d:	or     al,bl
  40f71f:	xor    ebx,DWORD PTR [edi+0x2ffe72a2]
  40f725:	js     0x40f6e8
  40f727:	add    cl,BYTE PTR [ebp+0x28]
  40f72a:	and    al,0x65
  40f72c:	div    DWORD PTR [ecx-0x39]
  40f72f:	(bad)  
  40f730:	lock iret 
  40f732:	rol    dh,0xdc
  40f735:	ret    
  40f736:	mov    bl,0x13
  40f738:	std    
  40f739:	popa   
  40f73a:	aas    
  40f73b:	mov    gs,ebp
  40f73d:	or     al,0x49
  40f73f:	cdq    
  40f740:	imul   ecx,DWORD PTR [edi+0x22],0xe796342f
  40f747:	(bad)  
  40f748:	int    0xdb
  40f74a:	mov    edx,0x6577c054
  40f74f:	add    BYTE PTR [edx-0x250bc7a8],0x7c
  40f756:	into   
  40f757:	repnz fistp QWORD PTR [ebp-0x417327d4]
  40f75e:	js     0x40f71a
  40f760:	(bad)  
  40f761:	fnsave [edi+ecx*8+0x3dcf010e]
  40f768:	out    dx,al
  40f769:	rcl    DWORD PTR [esi],cl
  40f76b:	fwait
  40f76c:	aam    0x46
  40f76e:	(bad)  
  40f76f:	leave  
  40f770:	scas   al,BYTE PTR es:[edi]
  40f771:	sub    esi,0x74
  40f774:	lea    esp,[edx+eax*8]
  40f777:	mov    eax,0x276c561b
  40f77c:	retf   0xfc7d
  40f77f:	xchg   esp,eax
  40f780:	shl    BYTE PTR [esi-0x6e5d73],0x6c
  40f787:	xor    edx,edx
  40f789:	mov    dh,0x47
  40f78b:	(bad)  
  40f78c:	popw   es
  40f78e:	aad    0x64
  40f790:	cli    
  40f791:	xor    DWORD PTR [ecx],esp
  40f793:	sub    eax,0x686af81a
  40f798:	sub    DWORD PTR [esi-0x46],eax
  40f79b:	imul   esi,esp,0x7bbf929d
  40f7a1:	mov    WORD PTR [ebp-0x7ba7f55d],gs
  40f7a7:	int    0x44
  40f7a9:	outs   dx,BYTE PTR ds:[esi]
  40f7aa:	jmp    0x187bdae4
  40f7af:	cdq    
  40f7b0:	je     0x40f7ab
  40f7b2:	stc    
  40f7b3:	call   0xc07d5abe
  40f7b8:	stos   BYTE PTR es:[edi],al
  40f7b9:	fld    QWORD PTR [edi+0x1350359f]
  40f7bf:	jmp    0xcc693328
  40f7c4:	lods   al,BYTE PTR ds:[esi]
  40f7c5:	fdiv   st,st(4)
  40f7c7:	and    esp,esi
  40f7c9:	push   esp
  40f7ca:	add    BYTE PTR [esi],bl
  40f7cc:	or     al,0x80
  40f7ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7cf:	test   al,0x5f
  40f7d1:	pop    edi
  40f7d2:	bound  ecx,QWORD PTR [eax+ebx*1]
  40f7d5:	call   0x939c2af2
  40f7da:	shl    BYTE PTR [ebp+edx*2-0x66b919e5],0xe6
  40f7e2:	jmp    0x40f7d4
  40f7e4:	or     BYTE PTR [esp+edx*2-0x19],cl
  40f7e8:	mov    edx,0xe5cec4de
  40f7ed:	retf   
  40f7ee:	cdq    
  40f7ef:	(bad)  
  40f7f0:	xchg   ecx,eax
  40f7f1:	push   ds
  40f7f2:	push   cs
  40f7f3:	dec    esp
  40f7f4:	dec    edi
  40f7f5:	into   
  40f7f6:	sbb    DWORD PTR [ebx],esi
  40f7f8:	mov    ds:0x52525230,eax
  40f7fd:	mov    esp,0xe3f4f238
  40f802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f803:	sbb    BYTE PTR [edx+esi*2-0xdac5f73],bh
  40f80a:	ret    
  40f80b:	inc    edx
  40f80c:	sub    eax,0x79e2c69e
  40f811:	test   al,0xb1
  40f813:	clc    
  40f814:	out    0x20,eax
  40f816:	sub    ah,BYTE PTR [edx+0x2ef5cdd2]
  40f81c:	mov    edi,0x833e06ef
  40f821:	xor    eax,DWORD PTR [esi-0x7ab84fb6]
  40f827:	outs   dx,DWORD PTR ds:[esi]
  40f828:	ror    BYTE PTR [bx-0x48],cl
  40f82c:	pop    esi
  40f82d:	xchg   ebp,eax
  40f82e:	sti    
  40f82f:	clc    
  40f830:	aad    0x6e
  40f832:	stos   DWORD PTR es:[edi],eax
  40f833:	sub    eax,0xe4bffbd2
  40f838:	mov    ebp,0xdfcdbdbf
  40f83d:	into   
  40f83e:	retf   0x7138
  40f841:	pop    es
  40f842:	sub    al,0x38
  40f844:	mov    bl,0xe2
  40f846:	ins    DWORD PTR es:[edi],dx
  40f847:	and    al,0x80
  40f849:	sahf   
  40f84a:	inc    edx
  40f84b:	cmp    BYTE PTR [ecx-0x57],bl
  40f84e:	mov    dh,0x8b
  40f850:	iret   
  40f851:	push   0xfffffff1
  40f853:	mov    ds:0x49984894,eax
  40f858:	pop    esp
  40f859:	jl     0x40f7f3
  40f85b:	dec    ebx
  40f85c:	jno    0x40f84e
  40f85e:	aam    0x23
  40f860:	pusha  
  40f861:	adc    bl,BYTE PTR [ebp-0x1badcdb4]
  40f867:	pop    ds
  40f868:	stc    
  40f869:	or     DWORD PTR [edx],edx
  40f86b:	(bad)  
  40f86c:	int    0xa7
  40f86e:	mov    dl,0x98
  40f870:	(bad)  
  40f871:	xchg   ebx,eax
  40f872:	mov    dh,0x34
  40f874:	sbb    eax,0x9c99b260
  40f879:	lock fdiv DWORD PTR [esp+ebp*4]
  40f87d:	mov    bl,0xff
  40f87f:	movq   mm5,mm4
  40f882:	fadd   DWORD PTR [esi+0x3654ef59]
  40f888:	xchg   DWORD PTR [esi+0x4a8c82ce],ecx
  40f88e:	test   eax,0x92a97988
  40f893:	int3   
  40f894:	ins    BYTE PTR es:[edi],dx
  40f895:	dec    edx
  40f896:	sub    al,0x3f
  40f898:	cmp    DWORD PTR [ebp-0x6a],esi
  40f89b:	push   0x40
  40f89d:	hlt    
  40f89e:	loop   0x40f8fb
  40f8a0:	test   DWORD PTR [esi-0x36f0c0a6],ebp
  40f8a6:	ret    
  40f8a7:	sbb    BYTE PTR [ebx+0x6ed0318c],ah
  40f8ad:	mov    bl,0x53
  40f8af:	add    BYTE PTR [esi],dl
  40f8b1:	push   ebp
  40f8b2:	add    ch,BYTE PTR [ecx]
  40f8b4:	xor    eax,0xfb20bdd0
  40f8b9:	xor    eax,0xf3db16ff
  40f8be:	gs aad 0x42
  40f8c1:	mov    bh,0x81
  40f8c3:	pop    es
  40f8c4:	push   edx
  40f8c5:	adc    edi,DWORD PTR [esi+0x415c01ba]
  40f8cb:	sti    
  40f8cc:	or     ebp,DWORD PTR [esi+0x49]
  40f8cf:	add    al,0x26
  40f8d1:	xchg   ebx,eax
  40f8d2:	dec    edi
  40f8d3:	jle    0x40f87e
  40f8d5:	mov    edx,DWORD PTR [eax+ebx*8+0x5e57be45]
  40f8dc:	add    cl,BYTE PTR [ecx]
  40f8de:	loopne 0x40f8b8
  40f8e0:	daa    
  40f8e1:	mov    ebx,0x8bfc458b
  40f8e6:	dec    ebp
  40f8e7:	or     al,0x81
  40f8e9:	xor    eax,0x43463f
  40f8ee:	iret   
  40f8ef:	inc    esi
  40f8f0:	inc    ebx
  40f8f1:	add    BYTE PTR [ebx],dh
  40f8f3:	mov    DWORD PTR [ebx],0x8b05c7c6
  40f8f9:	inc    esi
  40f8fa:	inc    ebx
  40f8fb:	add    BYTE PTR [ebx+0x3b00004b],ch
  40f901:	rol    edi,0x5
  40f904:	cmova  eax,DWORD PTR [ebx+0x0]
  40f908:	push   ebx
  40f909:	add    BYTE PTR ds:[eax],al
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434693,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4345eb
  40f921:	xor    DWORD PTR ds:0x434653,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4346bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4346bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4346bf,edx
  40f940:	cmp    DWORD PTR ds:0x4346bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43464b
  40f952:	push   0x434792
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4346bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4346bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4346bf,edx
  40f986:	cmp    DWORD PTR ds:0x4346bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4346bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	test   DWORD PTR [ebp-0x42eb8593],ecx
  40f9bf:	jle    0x40fa3f
  40f9c1:	hlt    
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40fa02
  40f9c6:	dec    esp
  40f9c7:	inc    BYTE PTR [esi-0x5b]
  40f9ca:	or     ebp,DWORD PTR [edx+eiz*1+0x16]
  40f9ce:	add    dh,BYTE PTR [edx-0x79]
  40f9d1:	cs mov ebx,0x5355f4a6
  40f9d7:	adc    dl,BYTE PTR [ebx]
  40f9d9:	pop    eax
  40f9da:	pushf  
  40f9db:	repz test al,0xe
  40f9de:	or     DWORD PTR [eax+0x33],esp
  40f9e1:	ret    0xf974
  40f9e4:	push   0xffffffe4
  40f9e6:	jmp    0x5894fde2
  40f9eb:	mov    eax,0x4cc0a3e8
  40f9f0:	xchg   esi,eax
  40f9f1:	jle    0x40f9b2
  40f9f3:	icebp  
  40f9f4:	jae    0x40f978
  40f9f6:	icebp  
  40f9f7:	ins    DWORD PTR es:[edi],dx
  40f9f8:	(bad)  
  40f9f9:	pop    ds
  40f9fa:	loope  0x40f9fe
  40f9fc:	pop    edi
  40f9fd:	add    ah,cl
  40f9ff:	push   esp
  40fa00:	mov    ebx,DWORD PTR [eax+0x44]
  40fa03:	push   0x55
  40fa05:	scas   al,BYTE PTR es:[edi]
  40fa06:	and    cl,BYTE PTR [ecx+0x22]
  40fa09:	mov    ds:0xbd210ac4,eax
  40fa0e:	nop
  40fa0f:	sbb    DWORD PTR [esi],0xffffffb5
  40fa12:	jmp    0x9d72a53b
  40fa17:	stc    
  40fa18:	(bad)  
  40fa19:	xchg   ebp,eax
  40fa1a:	xchg   ebp,eax
  40fa1b:	pusha  
  40fa1c:	outs   dx,DWORD PTR ds:[esi]
  40fa1d:	inc    ebx
  40fa1e:	ds mov cl,0x18
  40fa21:	xor    DWORD PTR [ebp+esi*1+0x5d],edi
  40fa25:	mov    ds:0xd94d2686,eax
  40fa2a:	mov    bh,0x76
  40fa2c:	in     al,dx
  40fa2d:	in     al,0x6f
  40fa2f:	out    dx,al
  40fa30:	or     edx,edx
  40fa32:	mov    edx,0x464f805a
  40fa37:	loopne 0x40f9f0
  40fa39:	(bad)  
  40fa3a:	call   0x59bd:0xf777aa22
  40fa41:	das    
  40fa42:	cmp    eax,ebx
  40fa44:	push   ebp
  40fa45:	mov    ds:0x8947d143,al
  40fa4a:	and    esi,DWORD PTR [eax]
  40fa4c:	inc    eax
  40fa4d:	mov    ?,WORD PTR [edi-0x76]
  40fa50:	pop    ss
  40fa51:	and    esp,esi
  40fa53:	mov    bh,0xa9
  40fa55:	fcomp  QWORD PTR [edx-0x783cef50]
  40fa5b:	(bad)  
  40fa5c:	push   esp
  40fa5d:	xor    al,0x8f
  40fa5f:	sbb    DWORD PTR [esi+0x7d],ecx
  40fa62:	lahf   
  40fa63:	loopne 0x40fa3d
  40fa65:	dec    ebp
  40fa66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa67:	mov    eax,ds:0x4b0dbf2d
  40fa6c:	and    dh,BYTE PTR [ebx-0x7a5c5c14]
  40fa72:	cmp    ah,BYTE PTR [ecx]
  40fa74:	icebp  
  40fa75:	je     0x40fac3
  40fa77:	add    al,0xb0
  40fa79:	adc    BYTE PTR [esi],0x6a
  40fa7c:	or     bl,cl
  40fa7e:	mov    ax,ds:0x7521c166
  40fa84:	pop    ebp
  40fa85:	mov    al,0xd2
  40fa87:	pusha  
  40fa88:	cmp    DWORD PTR ds:0x2130d18,0xffffffe6
  40fa8f:	stos   DWORD PTR es:[edi],eax
  40fa90:	data16 jg 0x40fa77
  40fa93:	out    0x59,eax
  40fa95:	xchg   ecx,eax
  40fa96:	mov    ch,0x3d
  40fa98:	inc    esi
  40fa99:	stos   DWORD PTR es:[edi],eax
  40fa9a:	adc    dl,bl
  40fa9c:	push   0xffffffc0
  40fa9e:	dec    eax
  40fa9f:	dec    ebx
  40faa0:	lods   al,BYTE PTR ds:[esi]
  40faa1:	(bad)  {k1}{z}
  40faa6:	aas    
  40faa7:	mov    ch,0x74
  40faa9:	mov    ebp,es
  40faab:	sbb    BYTE PTR [edi-0x51],dl
  40faae:	jge    0x40fafa
  40fab0:	retf   
  40fab1:	add    eax,0x9e59f628
  40fab6:	xchg   esp,eax
  40fab7:	jno    0x40fa6a
  40fab9:	push   ebx
  40faba:	pop    ebx
  40fabb:	aas    
  40fabc:	test   eax,0x2d2517d5
  40fac1:	dec    esp
  40fac2:	sub    DWORD PTR [eax],edi
  40fac4:	dec    ecx
  40fac5:	xchg   esi,eax
  40fac6:	int3   
  40fac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fac8:	mov    esp,0xb5706593
  40facd:	loope  0x40fb01
  40facf:	out    0x7,eax
  40fad1:	fimul  DWORD PTR [ebp-0x2b8dbc8a]
  40fad7:	or     cl,BYTE PTR [ecx+0x270630a6]
  40fadd:	(bad)  [edx-0x5a253262]
  40fae3:	xchg   edx,eax
  40fae4:	(bad)  
  40fae5:	retf   0xbbdf
  40fae8:	cmc    
  40fae9:	fdiv   DWORD PTR [edx+ecx*2]
  40faec:	and    DWORD PTR [edi],esp
  40faee:	fucomi st,st(0)
  40faf0:	adc    dh,BYTE PTR [ecx-0x58]
  40faf3:	loopne 0x40fb03
  40faf5:	inc    ebp
  40faf6:	xchg   DWORD PTR [ebx],eax
  40faf8:	xchg   edx,eax
  40faf9:	mov    edi,0x148392b3
  40fafe:	mov    edx,0x7f942e4e
  40fb03:	dec    ebx
  40fb04:	dec    ecx
  40fb05:	(bad)  
  40fb06:	lahf   
  40fb07:	xchg   DWORD PTR [ebx],ecx
  40fb09:	cmp    eax,0x715ca717
  40fb0e:	push   cs
  40fb0f:	icebp  
  40fb10:	push   edx
  40fb11:	retf   0x2ccd
  40fb14:	push   ebp
  40fb15:	xor    DWORD PTR [edx],0x64
  40fb18:	xchg   BYTE PTR [eax-0x4ef869e9],bl
  40fb1e:	or     BYTE PTR [ecx+0x56213abe],al
  40fb24:	inc    ecx
  40fb25:	neg    DWORD PTR [esi]
  40fb27:	test   eax,esp
  40fb29:	dec    edx
  40fb2a:	jp     0x40fadf
  40fb2c:	push   edx
  40fb2d:	cli    
  40fb2e:	jno    0x40fb42
  40fb30:	out    0xd3,al
  40fb32:	jne    0x40facc
  40fb34:	in     al,0x2e
  40fb36:	gs push esp
  40fb38:	mov    bh,0x8e
  40fb3a:	hlt    
  40fb3b:	mov    esp,0x3ab5d3ef
  40fb40:	dec    edx
  40fb41:	enter  0xfe77,0x42
  40fb45:	sub    DWORD PTR [edi-0x6c1f9efa],0xffffffb1
  40fb4c:	scas   al,BYTE PTR es:[edi]
  40fb4d:	in     eax,0x4
  40fb4f:	push   esp
  40fb50:	xlat   BYTE PTR ds:[ebx]
  40fb51:	pop    esi
  40fb52:	jecxz  0x40fba7
  40fb54:	push   eax
  40fb55:	retf   
  40fb56:	dec    ebp
  40fb57:	adc    eax,0x47b433a6
  40fb5c:	jge    0x40fb2c
  40fb5e:	xchg   esp,eax
  40fb5f:	cld    
  40fb60:	push   eax
  40fb61:	mov    cl,0x50
  40fb63:	popf   
  40fb64:	in     eax,dx
  40fb65:	cmp    eax,esp
  40fb67:	jmp    0x92df57ea
  40fb6c:	sbb    eax,0xabb600b1
  40fb71:	pop    eax
  40fb72:	js     0x40fb03
  40fb74:	es mov cl,0xe6
  40fb77:	dec    esp
  40fb78:	test   BYTE PTR [eax+0x48f94b2a],ch
  40fb7e:	cmp    dh,BYTE PTR [ebp-0x3f74e408]
  40fb84:	xchg   BYTE PTR [ebp-0x444ea91],ah
  40fb8a:	inc    esi
  40fb8b:	dec    esi
  40fb8c:	lods   eax,DWORD PTR ds:[esi]
  40fb8d:	mov    edx,0xb5675a3
  40fb92:	xor    edx,DWORD PTR [edx-0x60a48aa4]
  40fb98:	fidiv  WORD PTR [esi-0x4d2410f5]
  40fb9e:	pop    edx
  40fb9f:	rcr    DWORD PTR [ebx+edi*8],1
  40fba2:	dec    eax
  40fba3:	or     ah,BYTE PTR [eax+0xa]
  40fba6:	sbb    bh,BYTE PTR [eax]
  40fba8:	pop    ss
  40fba9:	(bad)  
  40fbaa:	psraw  mm7,QWORD PTR [ecx+eiz*1+0x2]
  40fbaf:	sahf   
  40fbb0:	mov    eax,0xaa70031b
  40fbb5:	adc    DWORD PTR [esi-0x58],eax
  40fbb8:	imul   edx,DWORD PTR [ecx+0x27],0x7126d170
  40fbbf:	xchg   ecx,eax
  40fbc0:	mov    bl,0x34
  40fbc2:	cs fcmove st,st(3)
  40fbc5:	popf   
  40fbc6:	aaa    
  40fbc7:	sbb    al,0x99
  40fbc9:	mov    al,ds:0xce7086c8
  40fbce:	arpl   di,dx
  40fbd0:	or     DWORD PTR [ecx-0x73b9f367],0xffffff89
  40fbd7:	and    ebp,DWORD PTR [ebx-0x63cb1ff8]
  40fbdd:	or     BYTE PTR [edx+0x49],al
  40fbe0:	scas   al,BYTE PTR es:[edi]
  40fbe1:	bound  edx,QWORD PTR [ebp+ebp*2-0x3e]
  40fbe5:	or     ecx,DWORD PTR [esi-0x1b1c6fce]
  40fbeb:	int    0x55
  40fbed:	retf   
  40fbee:	dec    edx
  40fbef:	das    
  40fbf0:	sti    
  40fbf1:	and    esp,ebp
  40fbf3:	or     al,0x37
  40fbf5:	jb     0x40fc73
  40fbf7:	pop    ss
  40fbf8:	int    0xc0
  40fbfa:	pop    ebp
  40fbfb:	fwait
  40fbfc:	int    0x54
  40fbfe:	dec    ebp
  40fbff:	and    DWORD PTR [ebp+0x3fee2e99],ecx
  40fc05:	aas    
  40fc06:	pusha  
  40fc07:	mov    dl,0x4
  40fc09:	add    ecx,esp
  40fc0b:	mov    al,ds:0x2e3ab9f4
  40fc10:	lock pop DWORD PTR [edi-0x588cdb6b]
  40fc17:	jg     0x40fc48
  40fc19:	sti    
  40fc1a:	fmul   st,st(0)
  40fc1c:	ss mov dl,0x37
  40fc1f:	lds    edx,FWORD PTR [esi]
  40fc21:	rol    BYTE PTR [eax+0x2f59daa3],1
  40fc27:	(bad)  
  40fc29:	xor    eax,0xe10a9822
  40fc2e:	(bad)  
  40fc30:	test   DWORD PTR [edi-0x22],esi
  40fc33:	test   BYTE PTR [ebp-0x6f],ch
  40fc36:	cmp    cl,dh
  40fc38:	rol    DWORD PTR [ecx-0xb3dc00e],cl
  40fc3e:	mul    BYTE PTR [ecx-0x1efe9864]
  40fc44:	scas   eax,DWORD PTR es:[edi]
  40fc45:	shl    BYTE PTR [ebx+0x29],cl
  40fc48:	xchg   edx,eax
  40fc49:	outs   dx,BYTE PTR ds:[esi]
  40fc4a:	fwait
  40fc4b:	pop    esp
  40fc4c:	loope  0x40fc29
  40fc4e:	pusha  
  40fc4f:	(bad)  
  40fc50:	addr16 cmp al,0xfe
  40fc53:	push   ecx
  40fc54:	dec    eax
  40fc55:	xchg   ecx,eax
  40fc56:	bound  esi,QWORD PTR [edx]
  40fc58:	jl     0x40fc84
  40fc5a:	sub    BYTE PTR [ecx+0x638bac27],al
  40fc60:	pusha  
  40fc61:	mov    ah,0xe8
  40fc63:	xchg   ebx,eax
  40fc64:	ds fcmovnu st,st(2)
  40fc67:	aas    
  40fc68:	inc    eax
  40fc69:	adc    DWORD PTR [ecx+eax*8-0x34cc9115],edx
  40fc70:	adc    al,0x3d
  40fc72:	mov    dl,0xc6
  40fc74:	mov    bl,0xd8
  40fc76:	dec    edx
  40fc77:	xchg   DWORD PTR [esi],ebx
  40fc79:	aad    0x1a
  40fc7b:	xor    DWORD PTR [esi],edx
  40fc7d:	retf   0x5f4b
  40fc80:	(bad)  
  40fc81:	jg     0x40fcc1
  40fc83:	(bad)
  40fc87:	(bad)  
  40fc88:	clc    
  40fc89:	das    
  40fc8a:	test   DWORD PTR [ecx-0x7770eeac],esp
  40fc90:	(bad)
  40fc93:	(bad)  
  40fc94:	ja     0x40fd01
  40fc96:	fs std 
  40fc98:	aad    0xdb
  40fc9a:	loope  0x40fd0e
  40fc9c:	sub    ch,BYTE PTR [esi+ecx*8-0x75]
  40fca0:	mov    cl,0xfc
  40fca2:	pop    ecx
  40fca3:	iret   
  40fca4:	dec    ecx
  40fca5:	or     ah,BYTE PTR [ecx+0x39]
  40fca8:	sub    DWORD PTR [esi-0x5e363625],eax
  40fcae:	retf   
  40fcaf:	mov    ecx,0x851b1e1e
  40fcb4:	push   esi
  40fcb5:	into   
  40fcb6:	ds mov ch,0x4c
  40fcb9:	jmp    0xcee4:0xdc3ee97e
  40fcc0:	xchg   ebx,eax
  40fcc1:	jb     0x40fcb2
  40fcc3:	sub    eax,0xafda5f8f
  40fcc8:	aas    
  40fcc9:	xchg   edx,eax
  40fcca:	dec    ebx
  40fccb:	or     DWORD PTR [edi],ebp
  40fccd:	jp     0x40fd1d
  40fccf:	or     esp,DWORD PTR [ebp+0x3b]
  40fcd2:	cmp    eax,0x2e1bf543
  40fcd7:	test   DWORD PTR [eax+0x3d],ecx
  40fcda:	sbb    bl,0xd
  40fcdd:	aaa    
  40fcde:	(bad)  
  40fcdf:	sar    esi,0x1f
  40fce2:	ja     0x40fcaf
  40fce4:	push   ebp
  40fce5:	pop    ebp
  40fce6:	es push esp
  40fce8:	push   esp
  40fce9:	dec    ebp
  40fcea:	mov    al,ds:0xa152b78e
  40fcef:	lahf   
  40fcf0:	fst    DWORD PTR [eax-0x6e226bd1]
  40fcf6:	lahf   
  40fcf7:	inc    edi
  40fcf8:	xor    ecx,DWORD PTR [esi-0x44]
  40fcfb:	jge    0x40fce1
  40fcfd:	and    eax,0x25ecd363
  40fd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd03:	pop    esi
  40fd04:	and    DWORD PTR [esi+0xc31f9bc],edx
  40fd0a:	and    BYTE PTR [ecx],0x87
  40fd0d:	sub    BYTE PTR [esi-0x28746ae0],al
  40fd13:	cmp    BYTE PTR [ecx],0x5
  40fd16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd17:	pop    ebx
  40fd18:	adc    esi,DWORD PTR [eax+0x0]
  40fd1b:	jo     0x40fd7b
  40fd1d:	push   0x2087cbf
  40fd22:	mov    al,0xdb
  40fd24:	xlat   BYTE PTR ds:[bx]
  40fd26:	jge    0x40fd04
  40fd28:	pop    ecx
  40fd29:	stos   DWORD PTR es:[edi],eax
  40fd2a:	aam    0xa0
  40fd2c:	outs   dx,DWORD PTR ds:[esi]
  40fd2d:	pusha  
  40fd2e:	jb     0x40fcbd
  40fd30:	lods   eax,DWORD PTR ds:[esi]
  40fd31:	(bad)  
  40fd32:	jnp    0x40fda0
  40fd34:	jb     0x40fd23
  40fd36:	dec    edx
  40fd37:	jns    0x40fce8
  40fd39:	mov    al,ds:0xc4ae800
  40fd3e:	add    BYTE PTR [eax],al
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	xchg   edx,eax
  40fd9d:	xor    ch,BYTE PTR [edx]
  40fd9f:	ret    
  40fda0:	cmp    BYTE PTR [eax+0x79f47e7e],0x7e
  40fda7:	jle    0x40fd79
  40fda9:	mov    esi,0x1c60d5e1
  40fdae:	mov    edx,0x906a8290
  40fdb3:	push   0x63ae462b
  40fdb8:	jle    0x40fd70
  40fdba:	(bad)  
  40fdbb:	or     al,0xa3
  40fdbd:	push   0xbefb98d0
  40fdc2:	outs   dx,BYTE PTR ds:[esi]
  40fdc3:	xchg   esi,eax
  40fdc4:	fdivr  st(3),st
  40fdc6:	fisttp DWORD PTR [esi+0x10d8f35f]
  40fdcc:	(bad)  
  40fdce:	loopne 0x40fe46
  40fdd0:	rol    BYTE PTR [edi],0xb2
  40fdd3:	out    dx,eax
  40fdd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdd5:	pop    esp
  40fdd6:	out    0xfe,eax
  40fdd8:	inc    ecx
  40fdd9:	jle    0x40fda3
  40fddb:	les    ecx,FWORD PTR [esi]
  40fddd:	push   ecx
  40fdde:	jmp    0x8720:0x3e92bd06
  40fde5:	inc    esi
  40fde6:	test   DWORD PTR [edi],edx
  40fde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde9:	add    BYTE PTR [edi+0x26a6ef9c],dl
  40fdef:	inc    ebx
  40fdf0:	push   ss
  40fdf1:	sbb    DWORD PTR [ebp+0x561c5318],esp
  40fdf7:	in     eax,dx
  40fdf8:	pop    ss
  40fdf9:	cmp    al,0x22
  40fdfb:	jmp    0x848a82a8
  40fe00:	add    al,BYTE PTR [edi+0x5c]
  40fe03:	out    dx,al
  40fe04:	shr    BYTE PTR [eax+0x2c],1
  40fe07:	adc    DWORD PTR [edx+ecx*1+0x9],edx
  40fe0b:	test   DWORD PTR [ebx+ecx*4],esp
  40fe0e:	sbb    DWORD PTR [eax-0x7654e07c],ebp
  40fe14:	bound  esp,QWORD PTR [ebx-0x4f]
  40fe17:	imul   esi,edx,0xc9639037
  40fe1d:	repnz and DWORD PTR [esi+0x4723715],esp
  40fe24:	loop   0x40fe81
  40fe26:	daa    
  40fe27:	and    al,0xf6
  40fe2a:	xchg   BYTE PTR [esp+ebp*2],dh
  40fe2d:	xor    al,0x2f
  40fe2f:	ins    DWORD PTR es:[edi],dx
  40fe30:	aad    0xe9
  40fe32:	leave  
  40fe33:	jnp    0x40fe43
  40fe35:	add    DWORD PTR [eax+0x17],esi
  40fe38:	ret    
  40fe39:	xchg   ecx,eax
  40fe3a:	std    
  40fe3b:	jmp    0x40fe04
  40fe3d:	or     ebx,DWORD PTR [ebx]
  40fe3f:	mov    ss,WORD PTR [ebx+ebp*2-0x53]
  40fe43:	sbb    al,0x80
  40fe45:	xchg   ebx,eax
  40fe46:	std    
  40fe47:	or     DWORD PTR [edi],edx
  40fe49:	cmp    BYTE PTR [ecx+edx*4],al
  40fe4c:	int3   
  40fe4d:	minps  xmm5,xmm3
  40fe50:	push   edi
  40fe51:	xchg   bl,dh
  40fe53:	ins    BYTE PTR es:[edi],dx
  40fe54:	mov    bl,0x86
  40fe56:	test   al,0x6b
  40fe58:	iret   
  40fe59:	out    0x2a,al
  40fe5b:	dec    edx
  40fe5c:	or     BYTE PTR [ecx-0x12dbd6d0],0x5e
  40fe63:	data16 xchg bh,ah
  40fe66:	arpl   WORD PTR [ebx*4+0x2e8a4048],sp
  40fe6d:	fisttp DWORD PTR [ecx+0x7d4772c4]
  40fe73:	mov    al,0x53
  40fe75:	(bad)  [edi]
  40fe77:	mov    edi,DWORD PTR [edx+0x2f99c16b]
  40fe7d:	inc    ebp
  40fe7e:	inc    ebx
  40fe7f:	mov    dh,0xe8
  40fe81:	or     al,0x36
  40fe83:	cld    
  40fe84:	int    0x43
  40fe86:	loop   0x40fef5
  40fe88:	arpl   WORD PTR [edi-0x65],cx
  40fe8b:	mov    ebx,0x4e7b81be
  40fe90:	inc    edx
  40fe91:	ins    BYTE PTR es:[edi],dx
  40fe92:	jae    0x40fed5
  40fe94:	nop
  40fe95:	ja     0x40fed9
  40fe97:	loop   0x40feec
  40fe99:	test   DWORD PTR [eax-0x3d7a4258],edx
  40fe9f:	pop    DWORD PTR [ecx]
  40fea1:	pop    esi
  40fea2:	into   
  40fea3:	jb     0x40fee9
  40fea5:	nop
  40fea6:	mov    ds:0x88fddb69,al
  40feab:	add    BYTE PTR [ecx+0x55e57c0e],ch
  40feb1:	xor    dh,ah
  40feb3:	mov    bh,dl
  40feb5:	cdq    
  40feb6:	pop    esp
  40feb7:	mov    ch,0xd7
  40feb9:	mov    edi,0x6b5fe162
  40febe:	out    dx,eax
  40febf:	sub    ebp,0x9b0d0ee8
  40fec5:	cwde   
  40fec6:	sub    BYTE PTR ds:0x6b30e8db,0xa0
  40fecd:	jb     0x40ff2c
  40fecf:	push   ss
  40fed0:	nop
  40fed1:	inc    ecx
  40fed2:	mov    ecx,0xb9f92c13
  40fed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed8:	mov    ch,0x40
  40feda:	push   ss
  40fedb:	jmp    FWORD PTR [edx+0x650ac1b]
  40fee1:	out    0x92,eax
  40fee3:	add    BYTE PTR [eax],0x22
  40fee6:	mul    BYTE PTR ds:0xda3ffc0c
  40feec:	aas    
  40feed:	nop
  40feee:	xchg   esp,eax
  40feef:	fcomp  QWORD PTR [edi-0x16]
  40fef2:	cmp    BYTE PTR [ebp+0x3b],ah
  40fef5:	jb     0x40fec2
  40fef7:	shr    BYTE PTR [edx+0x558312f5],1
  40fefd:	dec    esp
  40fefe:	aaa    
  40feff:	rol    DWORD PTR [ecx-0x6e610039],0xab
  40ff06:	dec    edi
  40ff07:	inc    esi
  40ff08:	push   esi
  40ff09:	jno    0x40fed3
  40ff0b:	xlat   BYTE PTR ds:[ebx]
  40ff0c:	mov    dh,0x9a
  40ff0e:	fidivr DWORD PTR [edx]
  40ff10:	xchg   edx,eax
  40ff11:	enter  0x1377,0x29
  40ff15:	arpl   WORD PTR [eax],bx
  40ff17:	leave  
  40ff18:	mov    esi,0xaa37cc1c
  40ff1d:	in     eax,dx
  40ff1e:	pushf  
  40ff1f:	pop    ecx
  40ff20:	pop    edi
  40ff21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff22:	dec    DWORD PTR [edx+0x7]
  40ff25:	or     edi,DWORD PTR [edx+0x5a]
  40ff28:	ror    al,cl
  40ff2a:	cs xchg edi,eax
  40ff2c:	cmc    
  40ff2d:	cmp    dh,BYTE PTR [eax]
  40ff2f:	bound  esp,QWORD PTR [esi-0xe2e5485]
  40ff35:	jg     0x40ff4b
  40ff37:	xchg   BYTE PTR [esi+0x69],ch
  40ff3a:	fbstp  TBYTE PTR [ebp-0x5efc41c]
  40ff40:	fidivr DWORD PTR [esi+ecx*8-0xdb30a98]
  40ff47:	mov    cl,0x83
  40ff49:	in     eax,0x80
  40ff4b:	leave  
  40ff4c:	inc    eax
  40ff4d:	into   
  40ff4e:	lock mov DWORD PTR [edi+0xa],ebx
  40ff52:	in     al,0x14
  40ff54:	xor    al,0x30
  40ff56:	ds mov al,0xef
  40ff59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff5a:	mov    ch,0xc3
  40ff5c:	sti    
  40ff5d:	mov    WORD PTR [esi],ds
  40ff5f:	mov    esp,0x256f2f6f
  40ff64:	push   es
  40ff65:	jmp    0xd12cc9fc
  40ff6a:	repnz add DWORD PTR [esi+0x62],edi
  40ff6e:	push   edx
  40ff6f:	xor    BYTE PTR [eax],dl
  40ff71:	and    DWORD PTR [edx],esi
  40ff73:	jl     0x40ff98
  40ff75:	cmp    eax,edi
  40ff77:	push   cs
  40ff78:	inc    BYTE PTR cs:[edx-0x2a1638e4]
  40ff7f:	rcr    DWORD PTR cs:[eax+0x617d0a4],cl
  40ff86:	mov    ah,0x49
  40ff88:	ins    DWORD PTR es:[edi],dx
  40ff89:	shl    DWORD PTR [eax],0xb9
  40ff8c:	or     eax,0xb9c16944
  40ff91:	sti    
  40ff92:	shr    BYTE PTR [ebx],0xaa
  40ff95:	rcl    BYTE PTR [ebp+0x4f],cl
  40ff98:	sub    dl,bh
  40ff9a:	lahf   
  40ff9b:	inc    ebp
  40ff9c:	xor    al,0x91
  40ff9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa0:	jge    0x41000a
  40ffa2:	leave  
  40ffa3:	cmovae edi,DWORD PTR [ecx+ebx*2+0x78]
  40ffa8:	adc    DWORD PTR [edx+edi*1+0x4cc9396a],esi
  40ffaf:	ret    0xf19c
  40ffb2:	aas    
  40ffb3:	in     al,0xd9
  40ffb5:	cmp    eax,0xdee00871
  40ffba:	clc    
  40ffbb:	iret   
  40ffbc:	jecxz  0x40ffad
  40ffbe:	pop    ds
  40ffbf:	outs   dx,BYTE PTR ds:[esi]
  40ffc0:	das    
  40ffc1:	imul   ebp,DWORD PTR [edi+0x3b9b51da],0x64995718
  40ffcb:	sbb    DWORD PTR [eax+0x65811af5],0x33179142
  40ffd5:	in     al,dx
  40ffd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd7:	xor    esp,esp
  40ffd9:	xor    DWORD PTR [edi+0x3b],edi
  40ffdc:	in     eax,dx
  40ffdd:	ds and ah,ch
  40ffe0:	xor    ah,cl
  40ffe2:	pop    ebp
  40ffe3:	out    dx,al
  40ffe4:	adc    edi,ecx
  40ffe6:	and    bl,cl
  40ffe8:	rcr    ebx,cl
  40ffea:	cdq    
  40ffeb:	sbb    eax,DWORD PTR [esi+0x136e6e92]
  40fff1:	out    dx,eax
  40fff2:	aad    0xc
  40fff4:	mov    ebx,0xd3acb8f9
  40fff9:	cwde   
  40fffa:	push   0xffffffd9
  40fffc:	cmp    esi,ebx
  40fffe:	ret    
  40ffff:	mov    BYTE PTR [ebx+0x78ec75f9],dl
  410005:	in     al,dx
  410006:	pop    esi
  410007:	ret    0x63ae
  41000a:	cmp    eax,0xbae4939a
  41000f:	pushf  
  410010:	test   al,0x33
  410012:	and    al,0x75
  410014:	sub    ebx,eax
  410016:	es xor dh,ah
  410019:	iret   
  41001a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41001b:	cwde   
  41001c:	gs inc esi
  41001e:	sub    ebx,ebx
  410020:	cwde   
  410021:	outs   dx,DWORD PTR ds:[esi]
  410022:	xlat   BYTE PTR ds:[ebx]
  410023:	push   esi
  410024:	out    0x71,al
  410026:	cs scas al,BYTE PTR es:[edi]
  410028:	(bad)  
  41002a:	xor    BYTE PTR [edi+0x5eedb701],ch
  410030:	xor    al,0x8e
  410032:	sub    dl,BYTE PTR [ebx+0x64]
  410035:	cwde   
  410036:	das    
  410037:	jbe    0x40ffc7
  410039:	pop    edx
  41003a:	jecxz  0x410021
  41003c:	pop    ebp
  41003d:	lock sub edx,ebx
  410040:	sahf   
  410041:	sbb    BYTE PTR [ecx],0x47
  410044:	fnstsw ax
  410046:	cwde   
  410047:	das    
  410048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410049:	mov    edx,0x58849e21
  41004e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004f:	mov    BYTE PTR [esi],ch
  410051:	stos   DWORD PTR es:[edi],eax
  410052:	push   edx
  410053:	mov    al,0x31
  410055:	stos   DWORD PTR es:[edi],eax
  410056:	cwde   
  410057:	pop    ss
  410058:	fadd   DWORD PTR [ecx]
  41005a:	es in  al,0x60
  41005d:	fisubr WORD PTR [edi]
  41005f:	cdq    
  410060:	jnp    0x410040
  410062:	dec    esi
  410063:	or     DWORD PTR [eax-0x3da08f4f],edx
  410069:	ins    DWORD PTR es:[edi],dx
  41006a:	jo     0x41009c
  41006c:	rcl    al,cl
  41006e:	sbb    edi,edx
  410070:	dec    ecx
  410071:	nop
  410072:	int3   
  410073:	es lahf 
  410075:	enter  0x228d,0xf1
  410079:	gs je  0x41001d
  41007c:	push   ss
  41007d:	or     edi,DWORD PTR [eax+0x5a]
  410080:	dec    esi
  410081:	retf   
  410082:	sbb    al,0x9a
  410084:	mov    ah,0xe9
  410086:	jb     0x410013
  410088:	fs cld 
  41008a:	outs   dx,DWORD PTR ds:[esi]
  41008b:	pop    ebp
  41008c:	sbb    eax,0x4c6a0157
  410091:	cmp    edx,eax
  410093:	push   0xefd35fcb
  410098:	inc    ebp
  410099:	jp     0x410040
  41009b:	rcl    bl,0xcf
  41009e:	mov    esi,0x518f2ddc
  4100a3:	or     al,0x10
  4100a5:	xchg   ecx,eax
  4100a6:	jle    0x41004b
  4100a8:	mov    ebp,0x11da4967
  4100ad:	push   ebp
  4100ae:	ror    ebp,0xb6
  4100b1:	dec    eax
  4100b2:	popf   
  4100b3:	add    DWORD PTR ds:0xae9beb,ebx
  4100b9:	mov    esp,0xb6d08174
  4100be:	xchg   ecx,eax
  4100bf:	ins    BYTE PTR es:[edi],dx
  4100c0:	sub    DWORD PTR [edx+0x5f],esi
  4100c3:	loop   0x4100d8
  4100c5:	es mov al,0xd6
  4100c8:	in     eax,0x8
  4100ca:	ret    0x4a6e
  4100cd:	in     eax,0x1a
  4100cf:	push   ebx
  4100d0:	(bad)  
  4100d1:	icebp  
  4100d2:	fild   WORD PTR [esi+0x51088162]
  4100d8:	cmp    ecx,edx
  4100da:	lods   eax,DWORD PTR ds:[esi]
  4100db:	pushf  
  4100dc:	adc    DWORD PTR [edx],eax
  4100de:	ret    
  4100df:	stos   BYTE PTR es:[edi],al
  4100e0:	out    0xc2,eax
  4100e2:	dec    edx
  4100e3:	cwde   
  4100e4:	test   DWORD PTR [ecx-0x48],ecx
  4100e7:	add    eax,0x696c2183
  4100ec:	push   0xffffffe0
  4100ee:	jmp    0xb3b4a3a8
  4100f3:	mov    edx,ecx
  4100f5:	push   es
  4100f6:	pushf  
  4100f7:	aas    
  4100f8:	cld    
  4100f9:	cli    
  4100fa:	or     al,0x55
  4100fc:	or     ebp,edi
  4100fe:	adc    cl,dl
  410100:	mov    ch,BYTE PTR [edi]
  410102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410103:	sar    DWORD PTR [ebx+0x41],1
  410106:	cmc    
  410107:	xchg   esi,eax
  410108:	les    edi,FWORD PTR [edi+0x5f35241b]
  41010e:	and    edx,DWORD PTR [ebx-0x6f0995f4]
  410114:	div    BYTE PTR [edx]
  410116:	mov    fs,WORD PTR [ecx-0x152ecaa6]
  41011c:	xor    ecx,DWORD PTR gs:[ebx-0x38cc03bb]
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    esi,eax
  410136:	gs jle 0x41011e
  410139:	js     0x41017f
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x410149
  410142:	mov    edi,0xf76b26bc
  410147:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41014a:	les    eax,FWORD PTR [ebx-0x38fbe155]
  410150:	addr16 das 
  410152:	mov    ds:0x980bb2c9,eax
  410157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410158:	mov    ds:0x3989eb9e,eax
  41015d:	xor    al,0x28
  41015f:	aam    0xd5
  410161:	xlat   BYTE PTR ds:[ebx]
  410162:	ja     0x4101dd
  410164:	stos   BYTE PTR es:[edi],al
  410165:	fwait
  410166:	popa   
  410167:	push   edx
  410168:	ror    ebp,1
  41016a:	pushf  
  41016b:	inc    esp
  41016c:	ss enter 0x694d,0x18
  410171:	stos   BYTE PTR es:[edi],al
  410172:	push   cs
  410173:	pop    ebp
  410174:	pop    ecx
  410175:	ss cmp eax,0x44f83ec5
  41017b:	xlat   BYTE PTR ds:[ebx]
  41017c:	xchg   DWORD PTR [edx-0x33],ebx
  41017f:	mov    edi,0x6551a5e5
  410184:	inc    ebx
  410185:	jl     0x410152
  410187:	xchg   BYTE PTR [eax+0x32],ah
  41018a:	in     al,dx
  41018b:	cmp    eax,0xb946b725
  410190:	mov    bh,0x35
  410192:	fsub   QWORD PTR [ebx+0x504eb140]
  410198:	xchg   esi,eax
  410199:	repnz adc ch,BYTE PTR [ecx]
  41019c:	sbb    eax,0xd3153511
  4101a1:	fldpi  
  4101a3:	add    BYTE PTR [edx+ebp*2-0x34],0x0
  4101a8:	pop    ebp
  4101a9:	(bad)  
  4101aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ab:	rol    BYTE PTR [ecx+ebx*4],cl
  4101ae:	mov    ecx,0xa64a1f50
  4101b3:	mov    ch,0xe4
  4101b5:	jl     0x4101cc
  4101b7:	inc    esi
  4101b8:	or     esi,eax
  4101ba:	stos   DWORD PTR es:[edi],eax
  4101bb:	cmp    DWORD PTR [ebx-0x3c],0xe11b0745
  4101c2:	sbb    bl,BYTE PTR [eax+0x492ba564]
  4101c8:	push   es
  4101c9:	repnz clc 
  4101cb:	daa    
  4101cc:	inc    ecx
  4101cd:	push   edi
  4101ce:	mov    eax,0x52f60195
  4101d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d4:	xor    eax,0x54c279a8
  4101d9:	les    esp,FWORD PTR [eax+edi*8+0x5267b6a4]
  4101e0:	lods   al,BYTE PTR ds:[esi]
  4101e1:	ret    0xcb19
  4101e4:	and    cl,BYTE PTR [esi+eax*4-0x62]
  4101e8:	(bad)  
  4101e9:	xchg   ecx,eax
  4101ea:	mov    edx,0xdfc8ef80
  4101ef:	add    al,0xc
  4101f1:	ins    BYTE PTR es:[edi],dx
  4101f2:	hlt    
  4101f3:	xor    cl,al
  4101f5:	and    bl,BYTE PTR [ebx+0x78cb14f4]
  4101fb:	dec    edi
  4101fc:	sbb    ah,bh
  4101fe:	inc    ecx
  4101ff:	jp     0x4101af
  410201:	out    0xbc,eax
  410203:	jne    0x410239
  410205:	jge    0x4101ea
  410207:	push   ecx
  410208:	inc    ebp
  410209:	push   es
  41020a:	pushf  
  41020b:	int    0xf3
  41020d:	enter  0xab4f,0x7e
  410211:	xor    eax,0xf13550cb
  410216:	jmp    0x7d2bb594
  41021b:	jecxz  0x410249
  41021d:	test   eax,0x7c1cf98
  410222:	outs   dx,BYTE PTR ds:[esi]
  410223:	and    DWORD PTR [esi+0x7a0e62b7],edx
  410229:	imul   ecx,DWORD PTR [edx-0x4e],0xafd9201f
  410230:	and    BYTE PTR [ebx+0x7fd4f6fd],ch
  410236:	das    
  410237:	inc    ebx
  410238:	cmp    edx,esi
  41023a:	in     al,0x24
  41023c:	std    
  41023d:	ss mov ch,0xd3
  410240:	shr    BYTE PTR [esi-0x2f55f28b],1
  410246:	ret    
  410247:	xor    eax,0x3dbd8d16
  41024c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41024d:	and    DWORD PTR [ebp+0x734f823],ebp
  410253:	(bad)  
  410254:	jp     0x4102b6
  410256:	and    al,0xec
  410258:	int3   
  410259:	fbstp  TBYTE PTR [ebx+0x7f33761d]
  41025f:	xor    ebp,DWORD PTR [eax-0x2a]
  410262:	repz mov edi,ds
  410265:	pusha  
  410266:	push   ecx
  410267:	stos   DWORD PTR es:[edi],eax
  410268:	test   BYTE PTR [eax+ecx*2+0x376bf90f],bh
  41026f:	loop   0x4102e3
  410271:	mov    al,0xb2
  410273:	repnz xchg dh,ah
  410276:	ret    0x42cb
  410279:	aam    0x91
  41027b:	jbe    0x4102cc
  41027d:	arpl   WORD PTR [ecx+0x64],sp
  410280:	push   ss
  410281:	jo     0x410232
  410283:	pop    ecx
  410284:	pop    es
  410285:	fcom   DWORD PTR [esi-0x65]
  410288:	sti    
  410289:	arpl   di,sp
  41028b:	sub    ah,BYTE PTR [eax+0xb1d3521]
  410291:	pop    ebp
  410292:	das    
  410293:	or     edi,edi
  410295:	sbb    BYTE PTR [ebx+0x44],dh
  410298:	scas   al,BYTE PTR es:[edi]
  410299:	sbb    eax,DWORD PTR [ecx]
  41029b:	scas   eax,DWORD PTR es:[edi]
  41029c:	pop    esp
  41029d:	dec    ecx
  41029e:	pop    esp
  41029f:	repz das 
  4102a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a2:	ucomiss xmm4,DWORD PTR [edi-0x36b1e6bb]
  4102a9:	loopne 0x4102e2
  4102ab:	aad    0xcd
  4102ad:	inc    ebx
  4102ae:	loop   0x4102a1
  4102b0:	idiv   BYTE PTR [ebp-0x7b]
  4102b3:	sub    DWORD PTR [ebp-0x75],ebx
  4102b6:	lahf   
  4102b7:	fcom   st(4)
  4102b9:	xchg   BYTE PTR [ebp+0x51f98ca9],cl
  4102bf:	outs   dx,DWORD PTR ds:[esi]
  4102c0:	fld    TBYTE PTR [edi+0x5e]
  4102c3:	dec    ebp
  4102c4:	pop    es
  4102c5:	loop   0x41028f
  4102c7:	dec    edx
  4102c8:	lahf   
  4102c9:	pushf  
  4102ca:	(bad)  [ebx+eiz*8]
  4102cd:	gs lahf 
  4102cf:	pop    esi
  4102d0:	std    
  4102d1:	pop    es
  4102d2:	mov    bl,0x64
  4102d4:	outs   dx,DWORD PTR ds:[esi]
  4102d5:	adc    esp,DWORD PTR [eax-0x5302324b]
  4102db:	and    DWORD PTR [esi+0x4f],edx
  4102de:	mov    ch,0x2a
  4102e0:	xchg   ebp,eax
  4102e1:	lds    ecx,FWORD PTR [edi-0x60]
  4102e4:	xchg   ebx,eax
  4102e5:	xor    al,0x1c
  4102e7:	mov    ds:0xd25954d9,al
  4102ec:	das    
  4102ed:	xor    eax,0xcda6878a
  4102f2:	cmp    ecx,DWORD PTR [ebp+0x49122dc7]
  4102f8:	lds    edi,FWORD PTR [ecx-0x47ed09b]
  4102fe:	push   ds
  4102ff:	stc    
  410300:	sbb    BYTE PTR [edi+eax*1+0x39477ca],ch
  410307:	jge    0x41029d
  410309:	jmp    0x4102f6
  41030b:	popa   
  41030c:	in     al,dx
  41030d:	jge    0x41031b
  41030f:	out    dx,eax
  410310:	mov    DWORD PTR [edi-0x90fd888],esp
  410316:	sbb    BYTE PTR [edx+0x44],bl
  410319:	ror    BYTE PTR [edi+0x717a9b99],0x87
  410320:	pextrw ecx,(bad),0xc5
  410322:	dec    esi
  410323:	mov    DWORD PTR [ebx+0x63790fd4],edx
  410329:	or     eax,0xa0018417
  41032e:	mov    ebp,0xe29d69bf
  410333:	mov    al,ds:0xae82d5a5
  410338:	outs   dx,BYTE PTR ds:[esi]
  410339:	mov    al,ds:0x7eb4240e
  41033e:	mov    ch,0xdd
  410340:	enter  0x7069,0x57
  410344:	stos   DWORD PTR es:[edi],eax
  410345:	(bad)  
  410346:	mov    ecx,0x2e3a86e7
  41034b:	(bad)
  41034e:	rol    DWORD PTR [edx-0x56],0x22
  410352:	and    edi,esp
  410354:	push   ebp
  410355:	call   0x124b13cb
  41035a:	or     BYTE PTR [edx+0x43],dh
  41035d:	lahf   
  41035e:	mov    dh,0x28
  410360:	enter  0x2131,0xcb
  410364:	sub    eax,0x92993fc5
  410369:	mov    edi,0xa7041156
  41036e:	sbb    ah,BYTE PTR [ebx+0x18]
  410371:	xor    eax,0xeec1ec3b
  410376:	add    al,0xb6
  410378:	sub    ebx,ebx
  41037a:	lahf   
  41037b:	pop    ebx
  41037c:	inc    edi
  41037d:	clc    
  41037e:	shr    WORD PTR [eax+0x19],cl
  410382:	fcom   DWORD PTR [ebx+ebp*1-0xf]
  410386:	iret   
  410387:	sbb    al,0xbd
  410389:	push   ebp
  41038a:	retf   
  41038b:	inc    esi
  41038c:	int3   
  41038d:	fwait
  41038e:	cs std 
  410390:	jle    0x4103ac
  410392:	jns    0x4103b4
  410394:	retf   
  410395:	jb     0x410327
  410397:	loop   0x410399
  410399:	mov    ch,0x83
  41039b:	jp     0x41032e
  41039d:	ror    BYTE PTR [ebx],1
  41039f:	jne    0x410324
  4103a1:	pop    esi
  4103a2:	cmp    ah,BYTE PTR [ebp+0x66c3f3f0]
  4103a8:	mov    ebp,0x8b3f5898
  4103ad:	mov    dh,0xd9
  4103af:	mov    eax,ds:0xc78078b9
  4103b4:	add    al,0x51
  4103b6:	aad    0x48
  4103b8:	je     0x4103bc
  4103ba:	call   0xee97aae4
  4103bf:	inc    esp
  4103c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c1:	mov    ch,0x69
  4103c3:	dec    eax
  4103c4:	push   ebx
  4103c5:	dec    esp
  4103c6:	hlt    
  4103c7:	cmp    DWORD PTR [ecx],eax
  4103c9:	jo     0x4103f3
  4103cb:	loop   0x410442
  4103cd:	out    0x21,al
  4103cf:	sar    ebx,cl
  4103d1:	cld    
  4103d2:	push   edi
  4103d3:	bsr    ebp,esi
  4103d6:	sub    BYTE PTR [ecx+0x481d3842],0xeb
  4103dd:	jmp    0x487ba289
  4103e2:	mov    esp,ebp
  4103e4:	int3   
  4103e5:	pop    ebp
  4103e6:	lods   eax,DWORD PTR ds:[esi]
  4103e7:	sbb    edx,DWORD PTR [esi-0x5]
  4103ea:	adc    ch,bh
  4103ec:	cdq    
  4103ed:	mov    DWORD PTR [ebp-0x750ec60d],ecx
  4103f3:	shr    DWORD PTR [ebx+edx*8],cl
  4103f6:	xor    edx,esi
  4103f8:	sub    DWORD PTR [eax],0xffffffd1
  4103fb:	int3   
  4103fc:	fiadd  WORD PTR [edx-0x1b]
  4103ff:	mov    ch,BYTE PTR [ebp-0x63c8dc5b]
  410405:	jge    0x4103c1
  410407:	shl    DWORD PTR [eax],cl
  410409:	xchg   esi,eax
  41040a:	and    al,0x73
  41040c:	dec    ebp
  41040d:	pop    es
  41040e:	sahf   
  41040f:	push   es
  410410:	mov    ds:0xb43eb57b,al
  410415:	pop    eax
  410416:	sar    DWORD PTR [edi-0xd],cl
  410419:	xchg   edi,eax
  41041a:	outs   dx,BYTE PTR ds:[esi]
  41041b:	jp     0x410483
  41041d:	js     0x4103ac
  41041f:	cmc    
  410420:	sti    
  410421:	mov    dh,0x25
  410423:	call   0x2ffd:0xa0da22ce
  41042a:	pop    ds
  41042b:	xchg   DWORD PTR [eax],ebp
  41042d:	inc    ecx
  41042e:	or     al,0x67
  410430:	fwait
  410431:	in     al,0x8
  410433:	sbb    dl,BYTE PTR [ebp+0x2e49417]
  410439:	bound  eax,QWORD PTR [ebp+0x606d4a1a]
  41043f:	mov    ch,0x4a
  410441:	push   edi
  410442:	and    eax,0xecc31acb
  410447:	ins    BYTE PTR es:[edi],dx
  410448:	adc    BYTE PTR [esi+0x5e],0x16
  41044c:	sbb    eax,0xd442c5b8
  410451:	push   ds
  410452:	repnz sub ch,BYTE PTR [ebx-0x69]
  410456:	mov    al,ds:0xb8c9dda8
  41045b:	mov    WORD PTR [ecx+0x3d],ds
  41045e:	lea    edi,[edi-0x32]
  410461:	out    0x1a,al
  410463:	and    BYTE PTR [edi],bh
  410465:	add    eax,0xf938c467
  41046a:	sub    BYTE PTR [edx],bh
  41046c:	repnz dec esp
  41046e:	jle    0x410492
  410470:	mov    dh,0x7f
  410472:	inc    ebx
  410473:	dec    ebx
  410474:	jg     0x410489
  410476:	pop    edx
  410477:	xlat   BYTE PTR ds:[ebx]
  410478:	mov    ebp,0xea2b2357
  41047d:	mov    ds:0xb11cd68d,eax
  410482:	repz fwait
  410484:	xor    esi,DWORD PTR [ebp+0x5f6a0a00]
  41048a:	inc    edx
  41048b:	fldcw  WORD PTR [edx-0x54220b2]
  410491:	cmc    
  410492:	pusha  
  410493:	imul   ebx,DWORD PTR es:[edi-0x1a],0xffffff84
  410498:	fidiv  DWORD PTR [esi-0x1d52b339]
  41049e:	lods   al,BYTE PTR ds:[esi]
  41049f:	cld    
  4104a0:	mov    edi,0x4085ac00
  4104a5:	pop    edi
  4104a6:	mov    BYTE PTR [esi],dh
  4104a8:	and    bh,al
  4104aa:	adc    BYTE PTR ds:0x1520365a,dh
  4104b0:	cmc    
  4104b1:	jecxz  0x4104c8
  4104b3:	xor    bl,BYTE PTR [esi]
  4104b5:	add    DWORD PTR [ebp+0x3],eax
  4104b8:	(bad)  
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4345f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4345f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4345f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4345f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4345f7
  410508:	dec    eax
  410509:	mov    ds:0x4345f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4345f7
  410516:	dec    eax
  410517:	mov    ds:0x4345f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434647,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43468f,0x434713
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43464f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434687
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4345eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4345eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4345eb,edx
  410571:	cmp    DWORD PTR ds:0x4345eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4345eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4345eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4345eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4345eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	je     0x410659
  4105ee:	dec    esp
  4105ef:	and    esi,esi
  4105f1:	inc    edi
  4105f2:	jle    0x410672
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x41062c
  4105f9:	sbb    eax,0x98811675
  4105fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ff:	cmc    
  410600:	mov    ds:0x1d12d852,al
  410605:	call   0xe85aba80
  41060a:	push   es
  41060b:	xor    ecx,ecx
  41060d:	add    esi,eax
  41060f:	call   0x32cc:0xd7b520e6
  410616:	jecxz  0x4105a9
  410618:	push   0x1fdc5be9
  41061d:	lods   al,BYTE PTR ds:[esi]
  41061e:	pop    es
  41061f:	mov    al,ds:0xaac2b50c
  410624:	rcr    DWORD PTR [edi],cl
  410626:	pop    ecx
  410627:	pop    esp
  410628:	arpl   WORD PTR [edi+ebp*8+0x36887e86],bx
  41062f:	outs   dx,DWORD PTR ds:[esi]
  410630:	mov    DWORD PTR [edx-0x2844e793],edx
  410636:	popa   
  410637:	js     0x4105cb
  410639:	js     0x4105df
  41063b:	adc    eax,0x3ed89b5a
  410640:	icebp  
  410641:	jns    0x410652
  410643:	pop    ds
  410644:	call   0x2f59:0xc7f8f7ad
  41064b:	mov    eax,ds:0x285a2fea
  410650:	aaa    
  410651:	pop    ebx
  410652:	or     bh,dh
  410654:	js     0x410673
  410656:	mov    DWORD PTR [ebp-0x3f],esp
  410659:	xor    eax,0xf3632b59
  41065e:	dec    esp
  41065f:	call   DWORD PTR [esi+0x7e]
  410662:	test   BYTE PTR [edx-0x21],bl
  410665:	pop    es
  410666:	dec    ecx
  410667:	test   DWORD PTR [edx-0x7b],ebp
  41066a:	push   cs
  41066b:	in     eax,0x9e
  41066d:	gs mov ah,0x3
  410670:	pop    ecx
  410671:	inc    edx
  410672:	xchg   esi,eax
  410673:	adc    BYTE PTR ds:0xb65d5226,bh
  410679:	test   eax,0x7abd0d2d
  41067e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41067f:	pushf  
  410680:	ja     0x410666
  410682:	add    ecx,DWORD PTR [ebx+0x17]
  410685:	test   DWORD PTR [edi+edx*4],0xb2b786cb
  41068c:	or     ah,BYTE PTR [edi+0x25]
  41068f:	xor    DWORD PTR [eax+0x78],0x41
  410693:	hlt    
  410694:	cmp    BYTE PTR [ecx],bh
  410696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410697:	sahf   
  410698:	lea    ecx,ds:0x932b0661
  41069e:	in     al,dx
  41069f:	add    dl,dh
  4106a1:	sub    esp,esi
  4106a3:	push   ss
  4106a4:	or     al,cl
  4106a6:	jnp    0x4106b2
  4106a8:	repnz xor al,0x9b
  4106ab:	sbb    eax,esi
  4106ad:	(bad)  [ecx]
  4106af:	ret    0xc533
  4106b2:	jge    0x4106f1
  4106b4:	(bad)  
  4106b5:	push   ebx
  4106b6:	repz mov dh,0x97
  4106b9:	inc    ebx
  4106ba:	mov    esi,0x8c7b1fb
  4106bf:	fsubr  st(2),st
  4106c1:	imul   esp,DWORD PTR [edi+0x1e],0xffffffd9
  4106c5:	xchg   ecx,eax
  4106c6:	xchg   ebx,eax
  4106c7:	push   ebx
  4106c8:	jecxz  0x410666
  4106ca:	sbb    al,0x13
  4106cc:	adc    eax,eax
  4106ce:	into   
  4106cf:	pop    ss
  4106d0:	jecxz  0x410677
  4106d2:	push   esp
  4106d3:	int3   
  4106d4:	mov    bh,0x10
  4106d6:	xor    al,0x6
  4106d8:	xchg   ebx,eax
  4106d9:	dec    esi
  4106da:	sub    DWORD PTR [esi-0x65],edi
  4106dd:	shl    DWORD PTR [edi+0x2d],1
  4106e0:	cwde   
  4106e1:	inc    esp
  4106e2:	push   esi
  4106e3:	dec    ecx
  4106e4:	popf   
  4106e5:	loop   0x41073b
  4106e7:	jne    0x4106de
  4106e9:	or     eax,0xb8643a41
  4106ee:	stos   BYTE PTR es:[edi],al
  4106ef:	sbb    al,bl
  4106f1:	mov    esi,0x9813d7ad
  4106f6:	push   es
  4106f7:	xchg   ebp,eax
  4106f8:	clc    
  4106f9:	mov    esp,es
  4106fb:	lods   al,BYTE PTR ds:[esi]
  4106fc:	inc    esp
  4106fd:	not    dh
  4106ff:	out    0x66,al
  410701:	or     eax,0xaab16c94
  410706:	push   es
  410707:	rol    BYTE PTR [esi],1
  410709:	dec    edi
  41070a:	lahf   
  41070b:	fild   WORD PTR [eax+eax*2+0x3]
  41070f:	and    BYTE PTR [eax-0x37],ch
  410712:	popf   
  410713:	pop    edx
  410714:	and    ecx,esp
  410716:	mov    dl,0x6
  410718:	mov    al,bl
  41071a:	add    bh,BYTE PTR [eax-0x365e1fb4]
  410720:	cmp    eax,0x1a63ee5a
  410725:	pop    ebx
  410726:	push   esp
  410727:	mov    gs,WORD PTR [eax+0x6ac159ff]
  41072d:	lods   eax,DWORD PTR ds:[esi]
  41072e:	stos   DWORD PTR es:[edi],eax
  41072f:	xchg   DWORD PTR [edi+0x68],esp
  410732:	inc    ax
  410734:	retf   0xa307
  410737:	inc    esi
  410738:	mov    bl,0x53
  41073a:	mov    DWORD PTR [esi+0x5f],ecx
  41073d:	call   0x6794:0xf036812
  410744:	sub    BYTE PTR [eax],bh
  410746:	pop    ebp
  410747:	shr    DWORD PTR [edx+0x4743defc],0x1e
  41074e:	push   edi
  41074f:	lods   eax,DWORD PTR ds:[esi]
  410750:	add    BYTE PTR [edx-0x476dbbb0],cl
  410756:	rdpmc  
  410758:	les    edx,FWORD PTR [edx]
  41075a:	call   0x6afc:0xcf535626
  410761:	adc    al,0xec
  410763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410764:	imul   ebx,esi,0x7562b3bb
  41076a:	jl     0x4107e7
  41076c:	xchg   DWORD PTR [esi+0x2ca78850],ebx
  410772:	pop    ebp
  410773:	xchg   edi,eax
  410774:	lods   eax,DWORD PTR ds:[esi]
  410775:	aad    0x14
  410777:	rcl    DWORD PTR [esi],0x88
  41077a:	mov    ch,0xfa
  41077c:	jo     0x410788
  41077e:	cmp    DWORD PTR [eax],edx
  410780:	cmp    eax,0x5be947b2
  410785:	dec    esp
  410786:	jo     0x4107f6
  410788:	loopne 0x410794
  41078a:	xlat   BYTE PTR ds:[ebx]
  41078b:	es jle 0x41077c
  41078e:	mov    bh,0x3a
  410790:	cdq    
  410791:	push   ds
  410792:	es cmp ecx,edi
  410795:	mov    BYTE PTR [ebx-0x6646f78b],cl
  41079b:	jb     0x4107cf
  41079d:	add    cl,ch
  41079f:	mov    dh,0x1
  4107a1:	add    BYTE PTR [eax],al
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	outs   dx,DWORD PTR ds:[esi]
  4107b0:	js     0x41076b
  4107b2:	out    dx,eax
  4107b3:	adc    al,0x41
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x4107d8
  4107bc:	adc    DWORD PTR [ecx+edx*1-0x60],ecx
  4107c0:	mov    al,0xb
  4107c2:	or     ecx,DWORD PTR [edi-0xac22b14]
  4107c8:	sub    cl,BYTE PTR [ebx-0x80]
  4107cb:	xor    esi,edx
  4107cd:	repz std 
  4107cf:	push   0x7b0ce7d2
  4107d4:	mov    esi,0xf7ecfd8
  4107d9:	pop    eax
  4107da:	bound  edx,QWORD PTR [esi+0x8327370]
  4107e0:	mov    eax,0x57b38e5d
  4107e5:	mov    ebx,0xc596880
  4107ea:	(bad)  
  4107eb:	cmp    dl,BYTE PTR [edi]
  4107ed:	inc    esi
  4107ee:	push   ecx
  4107ef:	or     eax,DWORD PTR [eax+0x3d6a6404]
  4107f5:	enter  0x8d32,0x53
  4107f9:	mov    ebx,0x1ac86c75
  4107fe:	cmp    ah,BYTE PTR [eax]
  410800:	push   edx
  410801:	push   ebp
  410802:	jbe    0x4107a3
  410804:	out    dx,al
  410805:	mov    al,ds:0xd3fe9a19
  41080a:	dec    esp
  41080b:	fisub  WORD PTR [ebx-0x364acfeb]
  410811:	push   edx
  410812:	call   0xca494da
  410817:	loope  0x4107ff
  410819:	cmp    BYTE PTR [edi],ah
  41081b:	mov    bl,0x2b
  41081d:	test   dh,al
  41081f:	dec    edi
  410820:	jns    0x410899
  410822:	ins    BYTE PTR es:[edi],dx
  410823:	(bad)  
  410824:	ins    BYTE PTR es:[edi],dx
  410825:	mov    cl,BYTE PTR [edi-0x2c]
  410828:	add    eax,0x4fa48dea
  41082d:	xor    al,0x5b
  41082f:	adc    eax,0x1a90ff6
  410834:	adc    DWORD PTR [ebp-0x25f89874],edx
  41083a:	js     0x4107d6
  41083c:	jle    0x4107cc
  41083e:	verr   WORD PTR [esi]
  410841:	mov    ecx,0xb409a62f
  410846:	fsubr  QWORD PTR [eax-0x76a565b0]
  41084c:	push   ebp
  41084d:	add    al,0xa5
  41084f:	xor    edx,ebp
  410851:	fiadd  WORD PTR [ebx-0x570b7b79]
  410857:	sub    eax,0xfc5d9479
  41085c:	xor    cl,BYTE PTR [esi-0x1b4ce01d]
  410862:	fcmovne st,st(6)
  410864:	in     eax,0xb0
  410866:	and    eax,0x11b756bf
  41086b:	das    
  41086c:	hlt    
  41086d:	ret    
  41086e:	mov    edi,0x52f74972
  410873:	mov    ds:0x512074ca,eax
  410878:	rcl    BYTE PTR [ebx-0x3433c828],cl
  41087e:	add    al,0x54
  410880:	ror    dh,1
  410882:	add    eax,0xdc451579
  410887:	adc    al,0x51
  410889:	ror    DWORD PTR [edx],0x44
  41088c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41088d:	push   ebx
  41088e:	xlat   BYTE PTR ds:[ebx]
  41088f:	in     eax,0x9c
  410891:	dec    BYTE PTR [eax+0x2cc5139]
  410897:	adc    BYTE PTR [ecx+0x6a],dh
  41089a:	and    DWORD PTR [ebp-0x7e],esp
  41089d:	adc    ebp,edi
  41089f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108a0:	sub    bh,BYTE PTR [ebp-0x4e0c452f]
  4108a6:	cmp    ebx,ebx
  4108a8:	loop   0x4108fe
  4108aa:	mov    bh,0x24
  4108ac:	sbb    al,0xa0
  4108ae:	add    DWORD PTR [ecx+ecx*1],edi
  4108b1:	fs addr16 ror eax,cl
  4108b5:	loop   0x410921
  4108b7:	mov    ds:0xc27f0cb6,al
  4108bc:	ffree  st(3)
  4108be:	std    
  4108bf:	ret    
  4108c0:	xor    BYTE PTR [ebp+0x33095d46],dh
  4108c6:	mov    DWORD PTR [ebp+0x45e8375f],0x2e10b3df
  4108d0:	pop    eax
  4108d1:	fwait
  4108d2:	daa    
  4108d3:	mov    ecx,0xc46aec45
  4108d8:	mov    dh,BYTE PTR [edx+0x697ac30c]
  4108de:	js     0x410899
  4108e0:	add    al,0xcd
  4108e2:	aas    
  4108e3:	jl     0x410937
  4108e5:	pop    ebx
  4108e6:	popf   
  4108e7:	pop    esi
  4108e8:	add    edi,eax
  4108ea:	mov    ecx,0x1a6ed842
  4108ef:	scas   eax,DWORD PTR es:[edi]
  4108f0:	les    edi,FWORD PTR [esi-0x6d549386]
  4108f6:	or     DWORD PTR [ecx+edx*8],esp
  4108f9:	xchg   esi,eax
  4108fa:	fnstsw WORD PTR [edi]
  4108fc:	xchg   edi,eax
  4108fd:	pop    edi
  4108fe:	ret    
  4108ff:	outs   dx,DWORD PTR ds:[esi]
  410900:	int    0x1
  410902:	into   
  410903:	shr    BYTE PTR [esi+0x33],0x68
  410907:	lahf   
  410908:	xchg   edi,eax
  410909:	adc    DWORD PTR [edx-0x538ec4be],ebp
  41090f:	imul   BYTE PTR [ebp+0x67]
  410912:	mov    ebp,0xb1bad9af
  410917:	out    dx,al
  410918:	test   DWORD PTR [edx+0xd],ebx
  41091b:	sbb    DWORD PTR [ebx],eax
  41091d:	fidiv  DWORD PTR [ebp-0x75]
  410920:	mov    cl,0xe5
  410922:	sub    dh,bh
  410924:	lock fst QWORD PTR [ebx-0x26a9b1dd]
  41092b:	imul   ebx,edx,0xa21715f3
  410931:	xor    al,BYTE PTR [ebx]
  410933:	push   ebp
  410934:	jae    0x410988
  410936:	push   ebp
  410937:	les    esi,FWORD PTR [ebx-0x45ac20f6]
  41093d:	jo     0x410996
  41093f:	retf   0x994
  410942:	fwait
  410943:	add    ah,BYTE PTR [edi+edi*2-0x74]
  410947:	mov    esi,0x860b8188
  41094c:	mov    dh,0xf2
  41094e:	(bad)  
  410950:	stc    
  410951:	push   ds
  410952:	sbb    BYTE PTR [edx+0x17ed2ff9],cl
  410958:	fadd   DWORD PTR [ebx]
  41095a:	sar    DWORD PTR [ecx],0x46
  41095d:	push   esp
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4345ef,0x0
  41099b:	mov    eax,ds:0x4345ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4345ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4345ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4345ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4345ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4345ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4345ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4346cf
  4109f5:	adc    DWORD PTR ds:0x4345e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4346bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434607,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	inc    edi
  410a2e:	cmp    DWORD PTR [ecx+0x46],ecx
  410a31:	stos   BYTE PTR es:[edi],al
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a58
  410a3a:	ds je  0x4109e2
  410a3d:	dec    ecx
  410a3e:	mov    al,0xa8
  410a40:	fwait
  410a41:	gs js  0x410a76
  410a44:	mov    ah,0x42
  410a46:	in     al,dx
  410a47:	add    DWORD PTR [ebx-0x9],edi
  410a4a:	test   BYTE PTR [edx],al
  410a4c:	mov    dl,0xfe
  410a4e:	dec    esi
  410a4f:	mov    bh,0x6c
  410a51:	and    esi,0x4eb90c5a
  410a57:	popa   
  410a58:	ret    
  410a59:	neg    BYTE PTR cs:[edi+0x4fcf8be2]
  410a60:	cmp    BYTE PTR [edi-0x75e8a1ba],al
  410a66:	jmp    0x3400:0xa5545162
  410a6d:	pushf  
  410a6e:	imul   ecx,DWORD PTR [edx-0x72ffe81b],0xba231533
  410a78:	in     al,dx
  410a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a7a:	xchg   edi,eax
  410a7b:	xchg   esi,eax
  410a7c:	add    ecx,DWORD PTR [ecx+0x44ecf8b2]
  410a82:	gs int 0x9e
  410a85:	mov    eax,ds:0x8667738c
  410a8a:	mov    ebx,0x2b993508
  410a8f:	arpl   WORD PTR [esi+edx*8+0x22e154d0],cx
  410a96:	js     0x410b0a
  410a98:	rcr    BYTE PTR [ebp-0x1c],cl
  410a9b:	test   BYTE PTR [edi+eax*4+0x20],dl
  410a9f:	or     al,0x2a
  410aa1:	push   ds
  410aa2:	push   ebx
  410aa3:	adc    ah,ch
  410aa5:	mov    edx,0xb7998ab7
  410aaa:	cmc    
  410aab:	mov    esi,0xa643e3ea
  410ab0:	ds mov dh,ch
  410ab3:	pop    eax
  410ab4:	pop    ebp
  410ab5:	sub    ch,BYTE PTR [edi-0x1791f7df]
  410abb:	ins    DWORD PTR es:[edi],dx
  410abc:	cmp    cl,dh
  410abe:	pop    edi
  410abf:	cmc    
  410ac0:	adc    eax,0x138d0501
  410ac5:	mov    cl,0x20
  410ac7:	jb     0x410ab9
  410ac9:	mov    es:0xed7786f4,eax
  410acf:	fptan  
  410ad1:	xchg   edx,eax
  410ad2:	xchg   ebp,eax
  410ad3:	mov    BYTE PTR ds:0x60f6f283,ah
  410ad9:	jne    0x410a60
  410adb:	mov    ebx,0x730c0642
  410ae0:	mov    esp,0x617d6158
  410ae5:	and    al,0x4c
  410ae7:	jns    0x410ad4
  410ae9:	js     0x410a7d
  410aeb:	lahf   
  410aec:	test   DWORD PTR [edi],0x9972039c
  410af2:	es cmp eax,0xf63e482d
  410af8:	adc    dl,ah
  410afa:	jmp    0x9dd257ce
  410aff:	outs   dx,BYTE PTR ds:[esi]
  410b00:	xor    DWORD PTR [ebx],ecx
  410b02:	mov    bl,0x60
  410b04:	add    BYTE PTR [ecx-0x4e],0xd9
  410b08:	lahf   
  410b09:	mov    ecx,0x3e62fe01
  410b0e:	arpl   WORD PTR [esp+edi*4-0x135dcca],dx
  410b15:	dec    ebp
  410b16:	fs repnz (bad) 
  410b1a:	cs mov edx,0xad7f23d2
  410b20:	sub    DWORD PTR [ebp+0x51c89023],0xb134b2bb
  410b2a:	shl    DWORD PTR [ebx],1
  410b2c:	mov    eax,ds:0x174e2110
  410b31:	rol    DWORD PTR [esi],cl
  410b33:	popf   
  410b34:	daa    
  410b35:	push   eax
  410b36:	int3   
  410b37:	(bad)  
  410b38:	repnz ds mov ah,0x9c
  410b3c:	and    BYTE PTR [esi+0x4aab3226],0x67
  410b43:	mul    BYTE PTR [edx]
  410b45:	dec    edx
  410b46:	push   edi
  410b47:	mov    esp,0x2f1680cc
  410b4c:	adc    edx,DWORD PTR [eax]
  410b4e:	or     DWORD PTR [edi-0x32],ebp
  410b51:	retf   0x2d58
  410b54:	cmp    dh,BYTE PTR [esi-0x303b3b7d]
  410b5a:	push   esp
  410b5b:	sbb    DWORD PTR [edi+0x56],edi
  410b5e:	shr    BYTE PTR [edi-0x10bbd29b],0x1b
  410b65:	or     bh,BYTE PTR ds:0xc450ba0b
  410b6b:	(bad)  
  410b6c:	sahf   
  410b6d:	rol    DWORD PTR [edx+edx*1+0x4e868043],0x65
  410b75:	mov    dl,al
  410b77:	adc    DWORD PTR [edi],edi
  410b79:	pusha  
  410b7a:	(bad)  
  410b7b:	xor    bl,BYTE PTR [ebp-0x5e]
  410b7e:	mov    dl,0xdb
  410b80:	push   es
  410b81:	inc    esp
  410b82:	aad    0xfc
  410b84:	imul   esp,DWORD PTR [edx],0xffffffd0
  410b87:	or     al,0x6e
  410b89:	push   0xffffffd2
  410b8b:	mov    eax,0xc7815526
  410b90:	dec    BYTE PTR [ecx+0x6b5ecd4e]
  410b96:	nop
  410b97:	pop    edi
  410b98:	lock aas 
  410b9a:	or     al,0x7e
  410b9c:	and    edi,DWORD PTR [eax-0x6f8ea83b]
  410ba2:	ds or  eax,0xddf964f5
  410ba8:	xor    eax,0x1276efd1
  410bad:	sbb    al,0xcc
  410baf:	outs   dx,BYTE PTR ds:[esi]
  410bb0:	push   edx
  410bb1:	cmc    
  410bb2:	into   
  410bb3:	repnz push esi
  410bb5:	push   0xec459c1
  410bba:	in     eax,dx
  410bbb:	xchg   ecx,eax
  410bbc:	xor    al,0xee
  410bbe:	das    
  410bbf:	cld    
  410bc0:	xchg   edi,eax
  410bc1:	xlat   BYTE PTR ds:[ebx]
  410bc2:	ins    BYTE PTR es:[edi],dx
  410bc3:	sbb    eax,0x830fbaee
  410bc8:	xchg   ebx,eax
  410bc9:	pop    edi
  410bca:	sbb    DWORD PTR [ecx],esp
  410bcc:	ins    BYTE PTR es:[edi],dx
  410bcd:	push   0x34
  410bcf:	shr    BYTE PTR [ecx-0x1a],0x73
  410bd3:	inc    ebp
  410bd4:	pcmpeqw mm1,QWORD PTR [esi]
  410bd7:	fprem1 
  410bd9:	arpl   di,si
  410bdb:	in     al,0xdf
  410bdd:	cmp    esp,DWORD PTR [edi-0x45]
  410be0:	jle    0x410be6
  410be2:	mov    ebx,0x1f7dddfe
  410be7:	(bad)  
  410be8:	pusha  
  410be9:	xchg   DWORD PTR [ecx+0x3a],edx
  410bec:	cmp    DWORD PTR [ebp-0x3f4cf70e],0x76
  410bf3:	and    eax,edx
  410bf5:	arpl   WORD PTR [edx+0x4e51e093],ax
  410bfb:	mov    al,dl
  410bfd:	stc    
  410bfe:	sub    ecx,eax
  410c00:	inc    edi
  410c01:	pop    edx
  410c02:	jge    0x410bf4
  410c04:	sbb    eax,0x93ace418
  410c09:	fidivr WORD PTR [edx+0x50]
  410c0c:	arpl   WORD PTR [edi+0x15e77159],dx
  410c12:	gs and al,0x47
  410c15:	int    0x9d
  410c17:	cli    
  410c18:	es dec edi
  410c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c1b:	sahf   
  410c1c:	dec    edi
  410c1d:	push   ds
  410c1e:	push   esp
  410c1f:	push   es
  410c20:	or     edi,DWORD PTR [ebx-0x5]
  410c23:	ficomp DWORD PTR [esi-0x1b]
  410c26:	xchg   edi,eax
  410c27:	lds    edx,FWORD PTR [ebp-0x10]
  410c2a:	loop   0x410c8f
  410c2c:	js     0x410c38
  410c2e:	dec    edi
  410c2f:	jge    0x410c40
  410c31:	push   cs
  410c32:	push   esi
  410c33:	ins    BYTE PTR es:[di],dx
  410c35:	fs call 0x369e:0x2acdbff
  410c3d:	lds    edx,FWORD PTR [ebp-0x292984aa]
  410c43:	and    eax,0x1ea5d4cb
  410c48:	sbb    eax,0xa3a40444
  410c4d:	jns    0x410bfe
  410c4f:	adc    al,0x3d
  410c51:	push   edi
  410c52:	jmp    0xc9f1644c
  410c57:	pop    esi
  410c58:	sub    al,0x64
  410c5a:	in     eax,0xcf
  410c5c:	adc    BYTE PTR [eax],dl
  410c5e:	add    edi,DWORD PTR [ebx]
  410c60:	sahf   
  410c61:	aam    0x9f
  410c63:	ds jo  0x410c16
  410c66:	cld    
  410c67:	and    BYTE PTR [esi-0x20f9e338],cl
  410c6d:	out    0xa2,eax
  410c6f:	mov    ah,0xb3
  410c71:	push   edi
  410c72:	xchg   esi,eax
  410c73:	xor    eax,0xe7a4f626
  410c78:	and    DWORD PTR [ecx+ecx*8-0x28e0c23f],ecx
  410c7f:	add    ecx,DWORD PTR [esi+0x1a]
  410c82:	std    
  410c83:	cmp    eax,0x8a88682a
  410c88:	mov    ecx,0xdecc2c9
  410c8d:	or     al,0x44
  410c8f:	fiadd  WORD PTR [ebx+0x6c]
  410c92:	loope  0x410cf3
  410c94:	ins    BYTE PTR es:[edi],dx
  410c95:	push   edx
  410c96:	push   ss
  410c97:	jb     0x410c64
  410c99:	aaa    
  410c9a:	hlt    
  410c9b:	lea    ecx,[ebx+esi*2-0x69]
  410c9f:	add    edi,ebx
  410ca1:	jp     0x410cb6
  410ca3:	xchg   ebx,eax
  410ca4:	xchg   ebx,eax
  410ca5:	jp     0x410cc3
  410ca7:	xlat   BYTE PTR ds:[ebx]
  410ca8:	cmp    dh,cl
  410caa:	ins    DWORD PTR es:[edi],dx
  410cab:	ins    BYTE PTR es:[edi],dx
  410cac:	jns    0x410cf5
  410cae:	cmp    eax,0x7ac676a
  410cb3:	mov    eax,ds:0xed6a57f4
  410cb8:	inc    ecx
  410cb9:	xchg   ebx,eax
  410cba:	pop    edi
  410cbb:	xlat   BYTE PTR ds:[ebx]
  410cbc:	stos   DWORD PTR es:[edi],eax
  410cbd:	add    ebx,edx
  410cbf:	ja     0x410c70
  410cc1:	mov    ebp,0x9334b683
  410cc6:	fbstp  TBYTE PTR [edi+0x3c14b080]
  410ccc:	sub    DWORD PTR [edx-0x6512ab99],esi
  410cd2:	repnz push bx
  410cd5:	adc    BYTE PTR [edx],0x49
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4346c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4345e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43470b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434713,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4346c7,0x434683
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434707,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43468f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx+0x7bd7f749],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d4d
  410d7a:	sbb    DWORD PTR cs:[ecx],edi
  410d7d:	push   es
  410d7e:	push   es
  410d7f:	mov    ebp,0xdf57d77a
  410d84:	daa    
  410d85:	(bad)  
  410d86:	out    dx,al
  410d87:	cs jmp 0xcb17:0x2eb88f6
  410d8f:	and    bh,BYTE PTR [eax]
  410d91:	in     al,dx
  410d92:	jp     0x410de9
  410d94:	dec    ebx
  410d95:	stc    
  410d96:	dec    ecx
  410d97:	scas   al,BYTE PTR es:[edi]
  410d98:	scas   eax,DWORD PTR es:[edi]
  410d99:	mov    DWORD PTR [ebp+0x28],esi
  410d9c:	data16 icebp 
  410d9e:	je     0x410d58
  410da0:	or     eax,0xbe1c1a25
  410da5:	lahf   
  410da6:	stos   BYTE PTR es:[edi],al
  410da7:	and    al,0xdc
  410da9:	int    0xc8
  410dab:	sbb    BYTE PTR ds:0x7cd424d4,dh
  410db1:	retf   0xc010
  410db4:	pop    edi
  410db5:	mov    ecx,0x3dc9e149
  410dba:	push   ss
  410dbb:	test   DWORD PTR [eax],0x7fd61188
  410dc1:	dec    eax
  410dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dc3:	sub    BYTE PTR [esi-0x38cca2b7],bh
  410dc9:	int3   
  410dca:	in     al,0xc3
  410dcc:	lea    ebx,[eax-0x67]
  410dcf:	repnz and al,0xbe
  410dd2:	hlt    
  410dd3:	mov    ds:0xd7cdc1a9,eax
  410dd8:	cmc    
  410dd9:	sub    eax,DWORD PTR [ecx]
  410ddb:	xchg   DWORD PTR [edi+0x5c],esp
  410dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ddf:	adc    dl,BYTE PTR [esi]
  410de1:	into   
  410de2:	pop    es
  410de3:	call   0xe50c7334
  410de8:	fist   WORD PTR [eax+0x41]
  410deb:	mov    bh,bl
  410ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dee:	inc    edi
  410def:	sbb    DWORD PTR [edi+0x1b9391b4],0xffffff83
  410df6:	xor    DWORD PTR [ecx],esp
  410df8:	jmp    0x410e6c
  410dfa:	jbe    0x410ddb
  410dfc:	les    eax,FWORD PTR [edi+esi*8]
  410dff:	out    0xfd,eax
  410e01:	pop    ebx
  410e02:	sub    al,0x8f
  410e04:	int3   
  410e05:	mov    ebp,0x26013990
  410e0a:	push   eax
  410e0b:	lods   al,BYTE PTR ds:[esi]
  410e0c:	push   ds
  410e0d:	sub    ecx,DWORD PTR [ecx]
  410e0f:	pop    ebx
  410e10:	jmp    0xb961082a
  410e15:	add    ecx,DWORD PTR [esi+0x368281f2]
  410e1b:	int    0xce
  410e1d:	inc    esp
  410e1e:	loope  0x410e90
  410e20:	lahf   
  410e21:	or     BYTE PTR [edx+ebp*1-0x64],bl
  410e25:	nop
  410e26:	in     eax,0x9d
  410e28:	mov    dl,0x54
  410e2a:	mov    ah,0x9b
  410e2c:	(bad)  
  410e2e:	(bad)  
  410e2f:	out    0x9b,eax
  410e31:	imul   ecx,DWORD PTR [ecx],0xffffff82
  410e34:	data16 mov cl,0x5b
  410e37:	clc    
  410e38:	stc    
  410e39:	aaa    
  410e3a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e3c:	mov    cl,0x2d
  410e3e:	and    al,0x5d
  410e40:	fisubr WORD PTR [ebx+0x6ee068e7]
  410e46:	(bad)  
  410e47:	mul    DWORD PTR [ebx+edx*1]
  410e4a:	jmp    0xc6fdf79d
  410e4f:	or     edi,eax
  410e51:	push   ss
  410e52:	adc    al,0xf0
  410e54:	stos   BYTE PTR es:[edi],al
  410e55:	jmp    FWORD PTR [ebx+ecx*8+0x5d]
  410e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e5a:	loope  0x410e75
  410e5c:	int    0x2e
  410e5e:	mov    eax,ds:0x802e57f2
  410e63:	inc    esp
  410e64:	inc    ecx
  410e65:	mov    dh,0x27
  410e67:	mov    al,0xa6
  410e69:	lea    eax,[edi+0x42ac227c]
  410e6f:	inc    edi
  410e70:	push   0xa28cc332
  410e75:	mov    ds:0x34931c38,al
  410e7a:	sbb    DWORD PTR [esi],0xffffffbf
  410e7d:	sbb    ch,0x0
  410e80:	ss (bad) 
  410e82:	fmul   st(7),st
  410e84:	jmp    0x410eee
  410e86:	pop    ebp
  410e87:	ret    
  410e88:	mov    DWORD PTR [ecx+0x4c6ec233],ebx
  410e8e:	pop    eax
  410e8f:	jo     0x410ee7
  410e91:	xor    al,0xff
  410e93:	(bad)  
  410e94:	std    
  410e95:	and    BYTE PTR [ecx-0x43a88730],dh
  410e9b:	pop    esi
  410e9c:	fcomp  DWORD PTR [edi]
  410e9e:	cs test eax,0x4d25a184
  410ea4:	mov    ds:0x61353274,eax
  410ea9:	jae    0x410ebd
  410eab:	jmp    0x29fa47e1
  410eb0:	imul   ebp,esi,0x12
  410eb3:	test   BYTE PTR [esi-0x69],dl
  410eb6:	adc    BYTE PTR [ecx+0x68954629],bl
  410ebc:	mov    bl,0x1b
  410ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ebf:	mov    cl,0xd2
  410ec1:	outs   dx,DWORD PTR ds:[esi]
  410ec2:	out    0xc5,al
  410ec4:	aaa    
  410ec5:	rcl    ebp,cl
  410ec7:	lods   eax,DWORD PTR ds:[esi]
  410ec8:	enter  0x3d2f,0x1e
  410ecc:	enter  0x929f,0xc0
  410ed0:	push   es
  410ed1:	loope  0x410eb8
  410ed3:	cmp    ebx,DWORD PTR [eax+0x294d7814]
  410ed9:	ja     0x410efe
  410edb:	xor    eax,0x152401a6
  410ee0:	cmc    
  410ee1:	mov    al,ds:0xd71f9dc7
  410ee6:	mov    bh,0xc2
  410ee8:	xor    ebp,edx
  410eea:	push   ecx
  410eeb:	push   ebx
  410eec:	ret    
  410eed:	adc    BYTE PTR [ecx-0x20012b49],bl
  410ef3:	call   0x493d:0x10c08d0b
  410efa:	es mov eax,0x4914e1c0
  410f00:	js     0x410efa
  410f02:	fstp   TBYTE PTR [esi-0xc5666ed]
  410f08:	cmp    dl,BYTE PTR [edi+0x1654e92a]
  410f0e:	xor    DWORD PTR [ecx+0x1b34cb62],ebp
  410f14:	(bad)  
  410f16:	sub    DWORD PTR [ebp-0x16],ebp
  410f19:	push   cs
  410f1a:	leave  
  410f1b:	pop    ds
  410f1c:	inc    esi
  410f1d:	loope  0x410eef
  410f1f:	sti    
  410f20:	xlat   BYTE PTR ds:[ebx]
  410f21:	jnp    0x410f3f
  410f23:	daa    
  410f24:	out    0x6a,eax
  410f26:	sbb    BYTE PTR [edx],al
  410f28:	xchg   DWORD PTR [edi-0x58ec75d7],ebx
  410f2e:	add    BYTE PTR [edx],dh
  410f30:	adc    cl,BYTE PTR [ebp*4+0x1bb63b21]
  410f37:	shl    BYTE PTR [edi],0xaa
  410f3a:	outs   dx,DWORD PTR ds:[esi]
  410f3b:	jmp    0x8e6b:0x900b4dfb
  410f42:	cmp    BYTE PTR [eax+0x42],0xaa
  410f46:	(bad)  
  410f47:	jbe    0x410f2c
  410f49:	mov    cl,0xa1
  410f4b:	es call 0x61906218
  410f51:	jp     0x410f08
  410f53:	xor    ax,0xa6b2
  410f57:	sub    eax,0x995255f4
  410f5c:	or     DWORD PTR [ebx],ecx
  410f5e:	test   al,0x82
  410f60:	mov    ah,0xea
  410f62:	and    eax,0x2a46b4b2
  410f67:	in     eax,dx
  410f68:	mov    fs:0x4de5c328,al
  410f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6f:	into   
  410f70:	adc    al,0x34
  410f72:	xor    bh,BYTE PTR [bx+si+0x2caa]
  410f77:	loopne 0x410fb3
  410f79:	iret   
  410f7a:	pop    esi
  410f7b:	js     0x410f72
  410f7d:	sub    ebp,esi
  410f7f:	mov    ds:0xc1b9b7da,eax
  410f84:	pop    esi
  410f85:	mov    bl,0xa5
  410f87:	mov    ebx,0x66406ed6
  410f8c:	or     esi,DWORD PTR [ecx]
  410f8e:	fdiv   QWORD PTR [edi+eax*4+0x745c650d]
  410f95:	mov    ebp,0xc6fd1dd
  410f9a:	sbb    eax,0x6216e8dc
  410f9f:	mov    esi,0x12746d86
  410fa4:	inc    esp
  410fa5:	mov    esi,0x2d823ff2
  410faa:	dec    edi
  410fab:	xor    dh,ch
  410fad:	pop    esi
  410fae:	jne    0x410f4b
  410fb0:	push   0x36b48e9c
  410fb5:	hlt    
  410fb6:	jae    0x410f82
  410fb8:	imul   edi,DWORD PTR [edi+0xce641c1],0xffffff8b
  410fbf:	mov    ebp,ds
  410fc1:	and    bh,ch
  410fc3:	push   edi
  410fc4:	jecxz  0x41100c
  410fc6:	mov    dh,0x2c
  410fc8:	mov    ds,WORD PTR [esp+eax*1-0x77e0736b]
  410fcf:	rcl    DWORD PTR [ebp-0x44],1
  410fd2:	jnp    0x410f7a
  410fd4:	xor    DWORD PTR [ecx+0x70a1d85b],ebx
  410fda:	dec    ecx
  410fdb:	dec    esi
  410fdc:	das    
  410fdd:	mov    bl,0x7d
  410fdf:	xor    DWORD PTR [ebx],edi
  410fe1:	xor    esi,eax
  410fe3:	int    0x49
  410fe5:	daa    
  410fe6:	fwait
  410fe7:	loop   0x41104d
  410fe9:	int    0xfb
  410feb:	add    bh,BYTE PTR [edi+edx*8]
  410fee:	in     al,dx
  410fef:	mov    dh,BYTE PTR [edx-0x4ada2c53]
  410ff5:	xchg   ecx,eax
  410ff6:	sbb    bl,bh
  410ff8:	in     al,0x45
  410ffa:	and    al,0x13
  410ffc:	fsubr  QWORD PTR [ecx]
  410ffe:	lods   al,BYTE PTR ds:[esi]
  410fff:	push   ds
  411000:	jmp    0x410fe1
  411002:	scas   eax,DWORD PTR es:[edi]
  411003:	sbb    DWORD PTR [esi+0x6f],edx
  411006:	pop    edx
  411007:	jp     0x411078
  411009:	cmc    
  41100a:	outs   dx,DWORD PTR ds:[esi]
  41100b:	pop    ebx
  41100c:	push   ecx
  41100d:	cs jmp 0x41108e
  411010:	je     0x411065
  411012:	fld    TBYTE PTR [esi+0x2134bd05]
  411018:	add    ecx,0xffcd8d67
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0xe2b44754
  411040:	daa    
  411041:	stos   DWORD PTR es:[edi],eax
  411042:	push   0x9d7e7e4f
  411047:	js     0x4110c7
  411049:	jle    0x41103e
  41104b:	xchg   ebx,eax
  41104c:	dec    ecx
  41104d:	or     DWORD PTR [esi+ebx*2-0x14903a32],ecx
  411054:	and    eax,DWORD PTR [ebx+0x24]
  411057:	push   ss
  411058:	mov    edi,0x4376049d
  41105d:	sbb    eax,0xae13e94c
  411062:	dec    edi
  411063:	mov    ah,0xcc
  411065:	xor    eax,0x9e89989b
  41106a:	mov    WORD PTR gs:[ebx],?
  41106d:	mov    al,0xf
  41106f:	inc    edx
  411070:	rcr    BYTE PTR [edi],1
  411072:	or     dh,bh
  411074:	fimul  DWORD PTR [edi-0x2fc6dd28]
  41107a:	rcr    BYTE PTR ds:0x51197463,1
  411080:	daa    
  411081:	inc    edx
  411082:	mov    esp,DWORD PTR [esi+0x30e6a672]
  411088:	jmp    0xd08c:0x7987866e
  41108f:	fld    DWORD PTR [esi-0x6f]
  411092:	(bad)  
  411093:	fimul  DWORD PTR [ecx]
  411095:	and    DWORD PTR [ebp+0x57cb63a4],ecx
  41109b:	cwde   
  41109c:	lods   al,BYTE PTR ds:[esi]
  41109d:	cmp    eax,0x5d10883e
  4110a2:	cmc    
  4110a3:	push   ebp
  4110a4:	and    BYTE PTR [ebp-0x7c99200a],0xd
  4110ab:	mov    al,cl
  4110ad:	jns    0x411033
  4110af:	pop    ebp
  4110b0:	aam    0xc0
  4110b2:	mov    eax,0xa5e7f8d7
  4110b7:	test   eax,0x38c18d85
  4110bc:	dec    ecx
  4110bd:	hlt    
  4110be:	jp     0x411128
  4110c0:	xlat   BYTE PTR ds:[ebx]
  4110c1:	dec    ecx
  4110c2:	rcl    BYTE PTR [ebx],0xeb
  4110c5:	jg     0x41105c
  4110c7:	mov    eax,ds:0x1d0ea0b9
  4110cc:	push   ecx
  4110cd:	loope  0x411115
  4110cf:	nop
  4110d0:	pop    ecx
  4110d1:	pop    esi
  4110d2:	leave  
  4110d3:	fcomip st,st(2)
  4110d5:	xchg   edi,eax
  4110d6:	push   ebp
  4110d7:	mul    ebx
  4110d9:	and    ebx,edi
  4110db:	push   es
  4110dc:	xchg   ecx,eax
  4110dd:	inc    ecx
  4110de:	test   eax,0x5c4e5d20
  4110e3:	in     eax,dx
  4110e4:	sbb    BYTE PTR [ebp-0x1c],0xa3
  4110e8:	test   eax,0x61d022ce
  4110ed:	and    BYTE PTR ds:0x87decc5,bh
  4110f3:	out    dx,eax
  4110f4:	cmp    eax,DWORD PTR [esi+0x5b]
  4110f7:	loopne 0x411145
  4110f9:	cmp    dh,BYTE PTR [eax+0x29]
  4110fc:	or     DWORD PTR [ecx+0x2a],esi
  4110ff:	loopne 0x41112d
  411101:	push   ss
  411102:	jmp    0x19700744
  411107:	sbb    ah,BYTE PTR [edi-0x1a]
  41110a:	mov    edi,0xfdb2276d
  41110f:	sbb    BYTE PTR [ebx-0x3361c1a],al
  411115:	or     al,0xdc
  411117:	retf   0xf52d
  41111a:	xchg   esi,eax
  41111b:	jl     0x41116a
  41111d:	test   al,0x51
  41111f:	push   es
  411120:	mov    DWORD PTR ds:0x6f09b523,0x91600978
  41112a:	jbe    0x4110e5
  41112c:	test   al,0xba
  41112e:	fcomip st,st(2)
  411130:	add    al,BYTE PTR [eax+0x69cd520e]
  411136:	pop    ebp
  411137:	aas    
  411138:	or     bl,BYTE PTR [edi+0x45bf3ef7]
  41113e:	fisubr WORD PTR [edx+0x6]
  411141:	sub    dh,bl
  411143:	jecxz  0x41115d
  411145:	mov    cl,0x95
  411147:	dec    esp
  411148:	jp     0x411111
  41114a:	stos   BYTE PTR es:[edi],al
  41114b:	mov    al,0x2b
  41114d:	repz xor DWORD PTR ss:[edi],ebx
  411151:	sub    DWORD PTR [edx-0x5c],eax
  411154:	sar    bh,0xf3
  411157:	out    0xba,al
  411159:	ret    
  41115a:	jb     0x411179
  41115c:	mov    cl,0xc
  41115e:	mov    ebx,0xe7356c27
  411163:	ret    0x5c1e
  411166:	rcl    bh,cl
  411168:	call   0x69c8aacf
  41116d:	jecxz  0x4111af
  41116f:	pop    ds
  411170:	fst    DWORD PTR [ebx-0x48616172]
  411176:	out    0x1d,eax
  411178:	xchg   esi,eax
  411179:	es je  0x411155
  41117c:	pushf  
  41117d:	lds    ebx,FWORD PTR [ebp+0x16bbebaf]
  411183:	data16 add BYTE PTR [edx],ah
  411186:	or     eax,0x70a88ad1
  41118b:	mov    bl,0x84
  41118d:	aas    
  41118e:	es cli 
  411190:	and    esi,DWORD PTR [eax]
  411192:	int    0x16
  411194:	sbb    bh,0xb
  411197:	push   0x54
  411199:	sub    al,BYTE PTR [edx-0x60]
  41119c:	xor    DWORD PTR [edx+0x5a922ff5],eax
  4111a2:	rol    DWORD PTR [ecx-0x54],1
  4111a5:	mov    eax,0x1c185464
  4111aa:	mov    cl,0xb5
  4111ac:	ret    
  4111ad:	aas    
  4111ae:	aas    
  4111af:	push   es
  4111b0:	outs   dx,BYTE PTR ds:[esi]
  4111b1:	push   edx
  4111b2:	pop    esi
  4111b3:	add    al,0x83
  4111b5:	outs   dx,BYTE PTR ds:[esi]
  4111b6:	outs   dx,DWORD PTR ds:[esi]
  4111b7:	retf   
  4111b8:	retf   
  4111b9:	nop
  4111ba:	mov    ds:0x1ada1ee8,al
  4111bf:	sbb    eax,0x5aec0f3f
  4111c4:	fbstp  TBYTE PTR [edx]
  4111c6:	xor    esi,edi
  4111c8:	fistp  QWORD PTR [ebx]
  4111ca:	mov    ebp,0xa1e490
  4111cf:	dec    esp
  4111d0:	stos   DWORD PTR es:[edi],eax
  4111d1:	aas    
  4111d2:	cmp    DWORD PTR [ebp-0x752f8d64],edi
  4111d8:	cmp    DWORD PTR [ecx+0x6305612d],ebp
  4111de:	int3   
  4111df:	sub    BYTE PTR [ebx+esi*1+0x442b9442],ah
  4111e6:	jb     0x41125e
  4111e8:	jmp    0xb1dd2be7
  4111ed:	pop    eax
  4111ee:	dec    ebp
  4111ef:	xchg   ebx,eax
  4111f0:	sub    dl,BYTE PTR [ebx+0x78]
  4111f3:	data16 jg 0x4111b6
  4111f6:	xchg   esi,eax
  4111f7:	sub    DWORD PTR [ebx],eax
  4111f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111fa:	pop    edi
  4111fb:	inc    ebx
  4111fc:	mov    edi,0xcd6f4c
  411201:	and    BYTE PTR [edi+0x10],al
  411204:	and    ah,dh
  411206:	dec    esi
  411207:	mov    al,0x95
  411209:	mov    eax,0x42080c02
  41120e:	enter  0x6bac,0xf4
  411212:	div    DWORD PTR [esi+edi*1-0x80]
  411216:	das    
  411217:	push   ds
  411218:	pop    eax
  411219:	addr16 push 0xffffffba
  41121c:	jnp    0x4111a2
  41121e:	es js  0x411272
  411221:	jl     0x411217
  411223:	test   DWORD PTR [ebx+edx*1],eax
  411226:	xor    ebx,DWORD PTR [esi-0x9]
  411229:	or     BYTE PTR [ebp+0x2e73e0af],dh
  41122f:	mov    bh,0xa2
  411231:	xor    BYTE PTR [edi+eiz*2],dl
  411234:	call   0xc7ca:0x3e5683c2
  41123b:	les    ebx,FWORD PTR [ecx+0x3a]
  41123e:	add    esi,DWORD PTR [edi]
  411240:	shl    BYTE PTR [esi+0x46],1
  411243:	pop    eax
  411244:	xor    BYTE PTR [edx-0x44],0xc8
  411248:	frstor [ecx+edi*2-0x68a4e516]
  41124f:	pop    ss
  411250:	sub    BYTE PTR [ecx],bl
  411252:	mov    edi,0x665c2052
  411257:	mov    ah,0xbb
  411259:	add    dh,BYTE PTR [esi]
  41125b:	mov    al,0x3c
  41125d:	outs   dx,DWORD PTR ds:[esi]
  41125e:	xchg   ecx,eax
  41125f:	ins    BYTE PTR es:[edi],dx
  411260:	cmc    
  411261:	adc    cl,ch
  411263:	in     al,0x69
  411265:	cmp    DWORD PTR [esi-0x23fd193],ebp
  41126b:	push   ecx
  41126c:	outs   dx,DWORD PTR ds:[esi]
  41126d:	imul   esp,DWORD PTR [ecx],0x61
  411270:	addr16 out 0x31,al
  411273:	pop    ss
  411274:	fsincos 
  411276:	ins    BYTE PTR es:[edi],dx
  411277:	jns    0x411297
  411279:	push   ebx
  41127a:	xor    ch,cl
  41127c:	les    ebx,FWORD PTR [edi]
  41127e:	mov    ebp,ds
  411280:	imul   edi,DWORD PTR [ebp+edi*8+0x3ebdb1c2],0xfffffff3
  411288:	mov    cl,BYTE PTR [ecx]
  41128a:	ret    
  41128b:	test   BYTE PTR [esi+0x7d9756e1],ah
  411291:	sbb    esp,DWORD PTR [esi-0x5d]
  411294:	adc    DWORD PTR [ecx-0x67],ebp
  411297:	jno    0x411289
  411299:	daa    
  41129a:	inc    ecx
  41129b:	and    esi,esp
  41129d:	(bad)  
  41129e:	xor    eax,0xc2920615
  4112a3:	or     eax,DWORD PTR [esi-0x53900688]
  4112a9:	pop    edi
  4112aa:	outs   dx,DWORD PTR ds:[esi]
  4112ab:	push   ebp
  4112ac:	xor    cl,BYTE PTR [eax-0x13]
  4112af:	stos   BYTE PTR es:[edi],al
  4112b0:	scas   al,BYTE PTR es:[edi]
  4112b1:	stos   DWORD PTR es:[edi],eax
  4112b2:	mov    ds:0x3ba45073,eax
  4112b7:	adc    al,0x9d
  4112b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ba:	ins    BYTE PTR es:[edi],dx
  4112bb:	fcomip st,st(2)
  4112bd:	(bad)  
  4112be:	bnd call 0x2dc77eb7
  4112c4:	sub    eax,0xa1d47e64
  4112c9:	sub    al,0x78
  4112cb:	test   BYTE PTR ds:0xa3b717fd,ch
  4112d1:	into   
  4112d2:	or     esi,esi
  4112d4:	dec    ecx
  4112d5:	ret    
  4112d6:	dec    ebx
  4112d7:	jl     0x411267
  4112d9:	sub    esp,esp
  4112db:	lock or dl,ah
  4112de:	push   0xffffffbd
  4112e0:	adc    ebp,edx
  4112e2:	push   cs
  4112e3:	cli    
  4112e4:	sbb    cl,dh
  4112e6:	cmp    DWORD PTR [esi-0x17],esp
  4112e9:	xor    esi,eax
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434703
  411346:	xor    DWORD PTR ds:0x4346cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4345ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4345ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4345ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43487a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4345ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4345ff
  411399:	dec    eax
  41139a:	mov    ds:0x4345ff,eax
  41139f:	mov    eax,ds:0x4345ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4345ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4345ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434643,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434643
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434643,eax
  4113d6:	cmp    DWORD PTR ds:0x434643,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434643,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43467f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434643,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434643
  411418:	inc    eax
  411419:	mov    ds:0x434643,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43470f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43470f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43470f,ebx
  411442:	cmp    DWORD PTR ds:0x43470f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434693
  411457:	push   0x4347db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43470f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43470f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43470f,ebx
  41147c:	cmp    DWORD PTR ds:0x43470f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4345df
  411490:	adc    DWORD PTR ds:0x4346c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434683,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434703,0x4345e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4346d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4346f7,0x4345f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4346cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4345ff,0x43463f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434713,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4345ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4345ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4345ff,edi
  411509:	cmp    DWORD PTR ds:0x4345ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434707
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4345ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4345ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4345ff,edi
  411545:	cmp    DWORD PTR ds:0x4345ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4345e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4345f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4345f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4345f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4345f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4345f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4345f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4345f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4345f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4345eb
  4115c4:	adc    DWORD PTR ds:0x4345e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43470b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43470b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43470b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43470b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43470b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43470b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43470b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43470b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x411689
  411641:	cmp    eax,0x4a8fcdd9
  411646:	jle    0x4116c6
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x411685
  41164d:	sbb    ebx,ebp
  41164f:	fidiv  WORD PTR [edx+0x6f97ab6e]
  411655:	jp     0x411629
  411657:	nop
  411658:	xchg   esp,eax
  411659:	pop    ds
  41165a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41165b:	add    al,0x76
  41165d:	test   DWORD PTR [edx],0x93e26706
  411663:	push   es
  411664:	ret    
  411665:	cmp    BYTE PTR [edx+0x7],bh
  411668:	inc    esp
  411669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41166a:	(bad)  
  41166b:	lock mov dl,dl
  41166e:	xchg   edi,eax
  41166f:	aaa    
  411670:	cmp    BYTE PTR [ecx],dl
  411672:	push   0x5ba18da1
  411677:	cdq    
  411678:	push   edi
  411679:	mov    ecx,0xdc354519
  41167e:	jne    0x4116b1
  411680:	out    0xb8,eax
  411682:	sbb    ebx,DWORD PTR [ebx+0x41]
  411685:	dec    ebx
  411686:	dec    ecx
  411687:	xor    DWORD PTR [ebx-0x7c],esi
  41168a:	dec    ebp
  41168b:	jle    0x41169c
  41168d:	loope  0x41165a
  41168f:	loopne 0x411657
  411691:	leave  
  411692:	push   eax
  411693:	sub    al,dh
  411695:	cli    
  411696:	push   es
  411697:	mov    ds:0x9ef3a1e1,al
  41169c:	sub    ah,bl
  41169e:	mov    ch,0x18
  4116a0:	arpl   WORD PTR [edx-0x3a],ax
  4116a3:	dec    esp
  4116a4:	retf   0x9597
  4116a7:	sub    ecx,edi
  4116a9:	xchg   esp,eax
  4116aa:	sub    BYTE PTR [eax+0x51],bl
  4116ad:	push   esi
  4116ae:	call   0x634f:0x79c0c12b
  4116b5:	mov    al,ds:0x4fa7d1a5
  4116ba:	repnz mov cl,0x9f
  4116bd:	xchg   esi,eax
  4116be:	push   ds
  4116bf:	je     0x411654
  4116c1:	jecxz  0x4116d3
  4116c3:	in     al,dx
  4116c4:	dec    ebp
  4116c5:	push   0xe2c817a9
  4116ca:	ss pusha 
  4116cc:	xor    ebx,DWORD PTR [edx+0x6d16e558]
  4116d2:	and    al,0x1
  4116d4:	ret    
  4116d5:	mov    BYTE PTR [eax+ecx*1-0x3917fc8c],dl
  4116dc:	sub    ecx,DWORD PTR [esi+0x49edff4d]
  4116e2:	push   ebx
  4116e3:	out    dx,eax
  4116e4:	into   
  4116e5:	dec    ebp
  4116e6:	aad    0x51
  4116e8:	add    al,0x5d
  4116ea:	mov    ds:0x673954da,al
  4116ef:	ja     0x4116e6
  4116f1:	ds sub al,0x50
  4116f4:	imul   edi,DWORD PTR [ebx],0xffffff94
  4116f7:	add    BYTE PTR [edi-0x5d31c864],bh
  4116fd:	add    DWORD PTR [ebx+0x69],ebx
  411700:	mov    edx,0xedbc8872
  411705:	dec    edi
  411706:	arpl   WORD PTR [ebx-0x6db19980],sp
  41170c:	std    
  41170d:	jae    0x411717
  41170f:	jb     0x41178b
  411711:	out    0x42,eax
  411713:	pop    es
  411714:	push   ds
  411715:	push   es
  411716:	push   ecx
  411717:	call   0xccd5:0x8ee4fe70
  41171e:	into   
  41171f:	mov    ebp,0x5db13550
  411724:	jge    0x4116e6
  411726:	ds cwde 
  411728:	mov    DWORD PTR [edx+edi*2+0x42],edi
  41172c:	sbb    ebx,0xffffff8d
  41172f:	xchg   esp,eax
  411730:	push   0xffffff95
  411732:	ret    
  411733:	mov    esi,0xac92082e
  411738:	and    DWORD PTR [esi-0x7d],esp
  41173b:	add    eax,0x43fdc68e
  411740:	(bad)  
  411741:	jb     0x411795
  411743:	fdivr  st(6),st
  411745:	and    ebx,DWORD PTR [ecx]
  411747:	xor    al,0xc
  411749:	add    BYTE PTR [di-0x3689],dh
  41174e:	inc    edx
  41174f:	ss scas al,BYTE PTR es:[edi]
  411751:	lods   eax,DWORD PTR ds:[esi]
  411752:	sub    eax,0x545b92c8
  411757:	sub    BYTE PTR [eax+0x2d],cl
  41175a:	fst    QWORD PTR [edi]
  41175c:	lock fcomp DWORD PTR [edi]
  41175f:	push   0x56489cc2
  411764:	add    al,0x0
  411766:	cs xor eax,0xfb2ea740
  41176c:	pop    ss
  41176d:	lahf   
  41176e:	mov    ebp,0x334d405c
  411773:	lock aas 
  411775:	cmp    BYTE PTR [ecx+eiz*8+0x29],0x1c
  41177a:	xchg   BYTE PTR [ebp-0x2e],dl
  41177d:	add    edx,eax
  41177f:	pop    ebp
  411780:	or     ebp,DWORD PTR [ebx+0x2]
  411783:	cld    
  411784:	push   es
  411785:	out    dx,al
  411786:	add    edx,DWORD PTR [ecx]
  411788:	icebp  
  411789:	aas    
  41178a:	push   ecx
  41178b:	std    
  41178c:	jg     0x41175c
  41178e:	ss in  al,0x76
  411791:	xor    ebx,ebx
  411793:	loope  0x41178f
  411795:	or     cl,al
  411797:	push   esi
  411798:	adc    eax,0xcb701aec
  41179d:	scas   eax,DWORD PTR es:[edi]
  41179e:	sub    ecx,ecx
  4117a0:	ret    0x928e
  4117a3:	mov    esi,0x894abc9d
  4117a8:	int    0xc6
  4117aa:	push   ss
  4117ab:	xchg   ebp,eax
  4117ac:	add    eax,0x9850e9fd
  4117b1:	rcr    BYTE PTR [edi-0x68],1
  4117b4:	aaa    
  4117b5:	pop    edi
  4117b6:	cdq    
  4117b7:	lods   eax,DWORD PTR ds:[esi]
  4117b8:	cmp    BYTE PTR [edi+ecx*4-0x7bf170c0],bl
  4117bf:	push   eax
  4117c0:	jae    0x411755
  4117c2:	mov    edi,0x371fb0d2
  4117c7:	add    al,0x4
  4117c9:	rol    esp,0xe4
  4117cc:	push   cs
  4117cd:	pop    ss
  4117ce:	call   0x9461634a
  4117d3:	sbb    ecx,DWORD PTR [ebp-0x36a6a1ae]
  4117d9:	xor    ch,cl
  4117db:	xor    DWORD PTR [ecx-0x355081f4],ebp
  4117e1:	lahf   
  4117e2:	jo     0x411816
  4117e4:	repz push ss
  4117e6:	addr16 mov cl,dh
  4117e9:	pusha  
  4117ea:	mov    ebp,0xf6fde7ad
  4117ef:	push   ss
  4117f0:	es xchg ah,ch
  4117f3:	(bad)  
  4117f4:	mov    cs,WORD PTR [esi+ebx*8-0x31]
  4117f8:	inc    edi
  4117f9:	sbb    dh,bh
  4117fb:	mov    edi,cs
  4117fd:	inc    BYTE PTR [bp+di+0x1c2d]
  411802:	cmp    BYTE PTR [edi+esi*8-0x6fe143bd],cl
  411809:	sub    BYTE PTR [edx+0x33],dl
  41180c:	in     eax,0x72
  41180e:	pop    esp
  41180f:	xor    BYTE PTR ds:0xec7c6713,bl
  411815:	adc    al,0x76
  411817:	retf   
  411818:	jae    0x41179f
  41181a:	jae    0x4117d2
  41181c:	mov    ds:0xff73314b,eax
  411821:	sub    eax,0xad5e4e36
  411826:	push   eax
  411827:	xor    eax,DWORD PTR [ebp-0x5e]
  41182a:	fimul  WORD PTR [ebx-0x32]
  41182d:	sub    cl,BYTE PTR [edx-0x42]
  411830:	jns    0x4118aa
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	pusha  
  411851:	psubusb mm1,QWORD PTR [edi]
  411854:	jmp    0x7e7f:0x597e7e54
  41185b:	jle    0x4118a0
  41185d:	jae    0x411851
  41185f:	repz ror ebx,cl
  411862:	aam    0xfe
  411864:	xor    BYTE PTR [eax-0x33],cl
  411867:	jnp    0x411826
  411869:	(bad)  
  41186a:	cld    
  41186b:	fiadd  DWORD PTR [eax]
  41186d:	ds xchg ecx,eax
  41186f:	sbb    BYTE PTR [ebx+0xea250d6],bh
  411875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411876:	jge    0x4118cf
  411878:	inc    esp
  411879:	loope  0x4118ec
  41187b:	sub    DWORD PTR [edx-0x4138f95f],eax
  411881:	inc    esi
  411882:	in     al,dx
  411883:	(bad)  
  411884:	iret   
  411885:	sti    
  411886:	adc    ebx,DWORD PTR [ecx+esi*2]
  411889:	mov    ds:0x4bcd6e6b,al
  41188e:	and    DWORD PTR [ebp+0x4edb6923],edx
  411894:	mov    ebp,DWORD PTR [eax-0x58]
  411897:	fucomi st,st(1)
  411899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41189a:	jno    0x411841
  41189c:	std    
  41189d:	nop
  41189e:	inc    esp
  41189f:	sbb    ah,bh
  4118a1:	mov    dl,0x86
  4118a3:	jbe    0x41184f
  4118a5:	add    eax,0x56f06ce
  4118aa:	mov    dl,BYTE PTR [eax+ecx*4]
  4118ad:	jno    0x411928
  4118af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b0:	popa   
  4118b1:	sub    dh,ah
  4118b3:	xchg   esp,eax
  4118b4:	sbb    eax,0x7b67daab
  4118b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ba:	seta   BYTE PTR [ecx+0x1d]
  4118be:	imul   edi,DWORD PTR [esi+0x1acd7a42],0x2e
  4118c5:	pusha  
  4118c6:	mov    al,0x7b
  4118c8:	bound  ebx,QWORD PTR [edi-0x3c9445fd]
  4118ce:	(bad)  [edx-0x51141b90]
  4118d4:	gs into 
  4118d6:	xlat   BYTE PTR ds:[ebx]
  4118d7:	mov    dh,BYTE PTR [ebx+0x6d3f5b1f]
  4118dd:	adc    cl,BYTE PTR [esi]
  4118df:	iret   
  4118e0:	cmc    
  4118e1:	adc    bh,BYTE PTR [edx+0x6b]
  4118e4:	lods   eax,DWORD PTR ds:[esi]
  4118e5:	mov    esp,0x14a3eaa9
  4118ea:	jmp    0xd684:0x47ffaf32
  4118f1:	inc    ebx
  4118f2:	adc    bl,BYTE PTR [ebx]
  4118f4:	fnstenv [edi]
  4118f6:	mov    bh,0xf8
  4118f8:	mov    DWORD PTR [edx-0x42],esp
  4118fb:	pop    edx
  4118fc:	(bad)  
  4118fd:	(bad)  
  4118fe:	call   0x467c7709
  411903:	in     eax,0x64
  411905:	pusha  
  411906:	es add eax,0x5c562095
  41190c:	popa   
  41190d:	stos   BYTE PTR es:[di],al
  41190f:	mov    ebx,0xe5563501
  411914:	push   cs
  411915:	scas   al,BYTE PTR es:[edi]
  411916:	cmp    ebp,DWORD PTR [esi+0x68]
  411919:	nop
  41191a:	loop   0x411984
  41191c:	loop   0x411925
  41191e:	mov    ds:0x634f6526,eax
  411923:	cmp    edx,DWORD PTR [edi+ebp*4-0x2f]
  411927:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411929:	mov    al,ds:0xbd8695b7
  41192e:	popa   
  41192f:	dec    al
  411931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411932:	test   al,0xe
  411934:	mov    ebx,0x46130f93
  411939:	sahf   
  41193a:	cmp    cl,BYTE PTR [esi+edx*8]
  41193d:	push   eax
  41193e:	pop    ss
  41193f:	daa    
  411940:	push   eax
  411941:	fisttp QWORD PTR [edi]
  411943:	mov    ecx,0x2d14a3b9
  411948:	dec    ecx
  411949:	jae    0x41192c
  41194b:	mov    eax,ds:0xd0e1ba95
  411950:	icebp  
  411951:	aas    
  411952:	test   eax,0x27b9f69a
  411957:	js     0x41191c
  411959:	stos   BYTE PTR es:[edi],al
  41195a:	mov    esi,eax
  41195c:	enter  0xc35e,0xe6
  411960:	daa    
  411961:	push   esi
  411962:	add    DWORD PTR [ecx+0x6472c499],esp
  411968:	inc    esi
  411969:	cmp    bh,ah
  41196b:	adc    ebp,ebp
  41196d:	pop    ebx
  41196e:	mov    edx,0xa8fbfae9
  411973:	popa   
  411974:	das    
  411975:	dec    esp
  411976:	shr    BYTE PTR [eax],0x91
  411979:	dec    edx
  41197a:	adc    ah,BYTE PTR [edx]
  41197c:	mov    edx,DWORD PTR [edx-0x7e]
  41197f:	ffree  st(2)
  411981:	inc    ebp
  411982:	jbe    0x4119c7
  411984:	mov    edi,0x9965830a
  411989:	pop    ebx
  41198a:	test   al,0x2b
  41198c:	js     0x411971
  41198e:	int    0x61
  411990:	imul   edx,esp,0x5b
  411993:	out    0xb2,al
  411995:	call   0x954f6f2b
  41199a:	int3   
  41199b:	test   edi,0x7fab9971
  4119a1:	rcl    DWORD PTR [eax+0x39fd0456],0x8e
  4119a8:	mov    bh,0x95
  4119aa:	les    edx,FWORD PTR [ecx-0x16]
  4119ad:	fild   QWORD PTR [eax+eax*1+0x17cc7c8c]
  4119b4:	mov    bh,0x51
  4119b6:	sbb    eax,0xab808e2
  4119bb:	jns    0x411975
  4119bd:	retf   
  4119be:	and    DWORD PTR [eax+0x60329ee],0x46
  4119c5:	stos   BYTE PTR es:[edi],al
  4119c6:	sub    edx,DWORD PTR [edx]
  4119c8:	std    
  4119c9:	sub    DWORD PTR [eax+0x3b94468e],edx
  4119cf:	aam    0x5c
  4119d1:	adc    bl,BYTE PTR [ecx-0x16]
  4119d4:	cmp    DWORD PTR [edi+ebp*1-0x2905d81f],ecx
  4119db:	js     0x411998
  4119dd:	push   ss
  4119de:	or     DWORD PTR [eax+0x5e],0xd
  4119e2:	fcmovb st,st(5)
  4119e4:	fisubr WORD PTR ds:0xaef9547f
  4119ea:	clc    
  4119eb:	ss pop edx
  4119ed:	mov    ?,WORD PTR [edx+eiz*1+0x77a56781]
  4119f4:	adc    DWORD PTR [eax+0x6c],eax
  4119f7:	add    edx,DWORD PTR [esi+eiz*4]
  4119fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119fb:	(bad)  
  4119fd:	gs mov ebp,0x43c88b35
  411a03:	push   ecx
  411a04:	int    0x89
  411a06:	sub    dl,dh
  411a08:	xor    esi,edi
  411a0a:	and    al,BYTE PTR [ebx-0x30249326]
  411a10:	pop    ebp
  411a11:	xchg   edx,eax
  411a12:	leave  
  411a13:	cmp    edi,DWORD PTR [edi+ebp*8+0x3ef204ab]
  411a1a:	(bad)  
  411a1b:	mov    al,ds:0x5512055f
  411a20:	mov    es,WORD PTR [edx+0x4d]
  411a23:	xor    DWORD PTR [eax-0x43],eax
  411a26:	jbe    0x4119fe
  411a28:	imul   eax,ebx,0xe63d4b2a
  411a2e:	fsincos 
  411a30:	push   0xffffffa0
  411a32:	and    DWORD PTR [ebp-0x64],eax
  411a35:	jg     0x411a93
  411a37:	shl    DWORD PTR [edx-0x55],0xb8
  411a3b:	adc    eax,0x87cd796f
  411a40:	into   
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434677
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4345f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4346cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4346cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434637,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4345ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4345eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434653,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4346c3,0x43467b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434713,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4345f3,0x4345e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43470f,0x4346cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43464f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4346b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4346b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4346b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4346b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4346b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4346b7,0x434677
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434637,0x4345e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4346b7
  411b6a:	and    ecx,DWORD PTR ds:0x43468b
  411b70:	mov    DWORD PTR ds:0x4346b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43470f,0x13
  411b83:	cmp    DWORD PTR ds:0x43470f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43470f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434810
  411ba2:	push   0x4347b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43470f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43470f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4345eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4346cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4346cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4346cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4348d5
  411bfa:	push   0x4348e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4346cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4346cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	pop    ebx
  411c72:	enter  0xb29d,0xd5
  411c76:	push   esi
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411cb1
  411c7e:	out    dx,eax
  411c7f:	out    dx,eax
  411c80:	loop   0x411c20
  411c82:	xchg   ebp,eax
  411c83:	push   eax
  411c84:	mov    BYTE PTR [ecx+0x57daa0ad],bl
  411c8a:	push   ss
  411c8b:	pop    ds
  411c8c:	repnz stos DWORD PTR es:[edi],eax
  411c8e:	ret    
  411c8f:	sub    eax,0x6fc1b52
  411c94:	enter  0xaa96,0xac
  411c98:	sub    ebx,DWORD PTR [eax-0x2c78bb94]
  411c9e:	xchg   ebp,eax
  411c9f:	mov    DWORD PTR [ebx-0x19bbae6e],esi
  411ca5:	inc    ecx
  411ca6:	push   eax
  411ca7:	jl     0x411c39
  411ca9:	in     al,0xed
  411cab:	or     BYTE PTR [ebp+0x3cb02b3],bh
  411cb1:	mov    BYTE PTR [eax],0x37
  411cb4:	dec    edi
  411cb5:	dec    esi
  411cb6:	push   0xffffff97
  411cb8:	sub    cl,BYTE PTR [ecx]
  411cba:	stos   DWORD PTR es:[edi],eax
  411cbb:	mov    ebp,0x18851ec5
  411cc0:	enter  0x3793,0x6f
  411cc4:	mov    bl,0x16
  411cc6:	xchg   ebp,eax
  411cc7:	int    0xee
  411cc9:	sub    eax,0x8c8d1ca7
  411cce:	push   es
  411ccf:	mov    DWORD PTR [eax],eax
  411cd1:	mov    eax,ds:0xd9b54fd7
  411cd6:	cmp    edx,0x5a820fd5
  411cdc:	popa   
  411cdd:	stos   DWORD PTR es:[edi],eax
  411cde:	test   DWORD PTR [eax-0x3f],edi
  411ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce2:	jmp    0x856ca768
  411ce7:	mov    ?,WORD PTR [ecx-0x33c5c8f8]
  411ced:	stos   BYTE PTR es:[edi],al
  411cee:	out    dx,eax
  411cef:	test   DWORD PTR [eax+0x12],ecx
  411cf2:	retf   0xd414
  411cf5:	add    al,0x6e
  411cf7:	mov    edi,0x47b14576
  411cfc:	rcr    DWORD PTR [edi+esi*8+0xd],cl
  411d00:	jb     0x411cdf
  411d02:	aam    0xc4
  411d04:	jb     0x411d06
  411d06:	test   al,0x66
  411d08:	stos   DWORD PTR es:[edi],eax
  411d09:	dec    ebp
  411d0a:	mov    bl,0x34
  411d0c:	inc    ebx
  411d0d:	jge    0x411d0d
  411d0f:	inc    eax
  411d10:	ror    WORD PTR [esi-0x75631c4c],0x7
  411d18:	adc    al,0x4d
  411d1a:	int    0xfc
  411d1c:	mov    dh,0x46
  411d1e:	xchg   ebp,eax
  411d1f:	push   esp
  411d20:	ds pop eax
  411d22:	cmp    BYTE PTR [esi+0x7e],ah
  411d25:	and    al,0x51
  411d27:	xlat   BYTE PTR ds:[ebx]
  411d28:	mov    esi,0x68d2e47f
  411d2d:	add    ah,BYTE PTR [ebx+0x3aa3cdb2]
  411d33:	cmp    dh,BYTE PTR [edi-0x9]
  411d36:	nop
  411d37:	out    0x65,al
  411d39:	cmp    eax,0xaf145f5
  411d3e:	cmp    BYTE PTR [eax+edi*8],bl
  411d41:	pop    esi
  411d42:	lahf   
  411d43:	add    ebx,DWORD PTR [esi]
  411d45:	lock into 
  411d47:	aas    
  411d48:	retf   
  411d49:	arpl   WORD PTR [ecx-0xb],di
  411d4c:	daa    
  411d4d:	push   edx
  411d4e:	jp     0x411dc0
  411d50:	lods   eax,DWORD PTR ds:[esi]
  411d51:	test   eax,0xbadcd8
  411d56:	xchg   DWORD PTR [edi+0x600f4e6f],eax
  411d5c:	adc    al,0x74
  411d5e:	stos   DWORD PTR es:[edi],eax
  411d5f:	les    esp,FWORD PTR [ebp-0x46b9f9d8]
  411d65:	retf   
  411d66:	push   cs
  411d67:	or     BYTE PTR [ecx+ecx*2-0x1979dea9],dh
  411d6e:	fild   QWORD PTR [eax+0x191308e0]
  411d74:	or     BYTE PTR [ebx-0x41b88945],al
  411d7a:	(bad)  
  411d7c:	or     al,0x62
  411d7e:	ja     0x411d27
  411d80:	inc    esi
  411d81:	dec    ecx
  411d82:	or     ebp,DWORD PTR [eax+ebx*1+0x3b]
  411d86:	push   ebx
  411d87:	sub    al,0x90
  411d89:	in     eax,dx
  411d8a:	lods   eax,DWORD PTR ds:[esi]
  411d8b:	daa    
  411d8c:	push   ebp
  411d8d:	(bad)  
  411d8e:	das    
  411d8f:	loopne 0x411d50
  411d91:	ficomp DWORD PTR [esi-0x49]
  411d94:	out    0xe4,al
  411d96:	ss leave 
  411d98:	push   0x2bdf0911
  411d9d:	xchg   bh,cl
  411d9f:	push   0xf
  411da1:	xchg   ecx,eax
  411da2:	push   edi
  411da3:	fcom   QWORD PTR [esi-0x41]
  411da6:	and    al,ah
  411da8:	inc    ebx
  411da9:	imul   DWORD PTR [esi]
  411dab:	cmp    al,0x92
  411dad:	sbb    cl,BYTE PTR [edx+edx*8]
  411db0:	addr16 mov edi,0xc8ac6aad
  411db6:	push   esi
  411db7:	push   ss
  411db8:	xor    ebx,DWORD PTR [esi-0x25]
  411dbb:	cwde   
  411dbc:	mov    al,0xbe
  411dbe:	retf   
  411dbf:	add    edx,edi
  411dc1:	fbstp  TBYTE PTR [ebp-0x5d]
  411dc4:	cmp    eax,eax
  411dc6:	jge    0x411df4
  411dc8:	cli    
  411dc9:	fmul   DWORD PTR [esi]
  411dcb:	bound  ecx,QWORD PTR [edi-0x23217347]
  411dd1:	dec    esi
  411dd2:	dec    esi
  411dd3:	mov    edx,0xe2a14468
  411dd8:	fld    TBYTE PTR [edi]
  411dda:	mov    edi,0x66aa7c86
  411ddf:	mov    es,esi
  411de1:	add    dh,bh
  411de3:	lea    ebx,[ecx-0x4e]
  411de6:	xor    edx,DWORD PTR [ebx-0x72e0efb3]
  411dec:	mov    al,ds:0x8651e47a
  411df1:	inc    esi
  411df2:	(bad)  
  411df3:	jge    0x411dc8
  411df5:	shl    DWORD PTR [ebx],cl
  411df7:	push   esp
  411df8:	adc    eax,edx
  411dfa:	in     al,dx
  411dfb:	jmp    0x97c6:0xc4313deb
  411e02:	fwait
  411e03:	or     bh,BYTE PTR [edi-0x1745b7a2]
  411e09:	fmul   DWORD PTR [ebx+0x31b25c7]
  411e0f:	sbb    BYTE PTR [esi-0x63],0x33
  411e13:	xlat   BYTE PTR ds:[ebx]
  411e14:	push   ebp
  411e15:	mov    ss,edx
  411e17:	lds    esi,FWORD PTR [ecx]
  411e19:	push   ds
  411e1a:	push   edx
  411e1b:	and    eax,0x5efa409c
  411e20:	sbb    al,BYTE PTR [ecx+0x6d486a06]
  411e26:	sar    BYTE PTR [edi+0x26],cl
  411e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2a:	test   DWORD PTR [ecx],ebp
  411e2c:	mov    eax,0xc3890d27
  411e31:	cmp    esp,DWORD PTR [eax+0x4f6d7fc3]
  411e37:	jno    0x411e04
  411e39:	ret    0x64d6
  411e3c:	xchg   BYTE PTR [edi],dl
  411e3e:	data16 out 0xbf,al
  411e41:	or     BYTE PTR [edx],0x3
  411e44:	sbb    al,BYTE PTR [edi+0x3e]
  411e47:	pop    ebp
  411e48:	dec    ebx
  411e49:	pop    es
  411e4a:	nop
  411e4b:	imul   edx,DWORD PTR [eax-0x7],0x7fd178ed
  411e52:	in     al,0x60
  411e54:	mov    ch,0x56
  411e56:	pop    es
  411e57:	cdq    
  411e58:	adc    dl,al
  411e5a:	cmp    eax,esp
  411e5c:	imul   ebp,DWORD PTR [edx+0x71],0xb80c0305
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	and    BYTE PTR [ebx],al
  411ec1:	shl    DWORD PTR [edi+0x30],cl
  411ec4:	push   eax
  411ec5:	jle    0x411f45
  411ec7:	pop    ecx
  411ec8:	jg     0x411f48
  411eca:	jle    0x411f24
  411ecc:	mov    al,0x65
  411ece:	imul   ebp,DWORD PTR [edi],0xd718945b
  411ed4:	mov    bh,BYTE PTR [esi-0x1]
  411ed7:	ficomp DWORD PTR cs:[ebx-0x5b2952fc]
  411ede:	mov    ah,0xf1
  411ee0:	xchg   esi,eax
  411ee1:	jg     0x411f1e
  411ee3:	je     0x411f1d
  411ee5:	aaa    
  411ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee7:	xchg   ch,dh
  411ee9:	lds    ebp,FWORD PTR [edx+edi*4-0x7f]
  411eed:	mov    ecx,0x88b53c6b
  411ef2:	mov    bh,0x94
  411ef4:	inc    ebp
  411ef5:	and    ch,dh
  411ef7:	jp     0x411e84
  411ef9:	je     0x411e7e
  411efb:	cld    
  411efc:	loop   0x411ec7
  411efe:	push   0x35cdcab9
  411f03:	adc    edi,ebx
  411f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f06:	call   FWORD PTR [ebp+0x68]
  411f09:	loop   0x411f62
  411f0b:	js     0x411e96
  411f0d:	xchg   BYTE PTR [edx],dh
  411f0f:	pop    edi
  411f10:	js     0x411ed5
  411f12:	jl     0x411f29
  411f14:	jns    0x411ea2
  411f16:	or     BYTE PTR ds:0xdda94960,bh
  411f1c:	mov    fs,WORD PTR [edx]
  411f1e:	xor    dl,BYTE PTR [edx]
  411f20:	mov    ?,WORD PTR [ecx-0x71664684]
  411f26:	lock outs dx,BYTE PTR ds:[esi]
  411f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f29:	jmp    0x411f39
  411f2b:	mov    eax,ds:0x9f86d168
  411f30:	sahf   
  411f31:	add    BYTE PTR ds:0xeafd9d0f,bl
  411f37:	pop    edx
  411f38:	mov    ah,0x71
  411f3a:	dec    eax
  411f3b:	jle    0x411ef2
  411f3d:	and    al,0xc6
  411f3f:	add    eax,0xe3fcd466
  411f44:	sbb    BYTE PTR [edx],0xe7
  411f47:	cmp    bl,BYTE PTR [ebx]
  411f49:	mov    cl,0x6e
  411f4b:	ror    BYTE PTR [edx+0x11],1
  411f4e:	stc    
  411f4f:	(bad)  
  411f50:	push   ss
  411f51:	mov    cl,0x7e
  411f53:	mov    ds:0xd5876622,eax
  411f58:	and    eax,esi
  411f5a:	ins    BYTE PTR es:[edi],dx
  411f5b:	(bad)  
  411f5c:	xchg   edx,eax
  411f5d:	jo     0x411ee6
  411f5f:	pop    edx
  411f60:	out    dx,eax
  411f61:	daa    
  411f62:	aad    0xa4
  411f64:	lods   al,BYTE PTR ds:[esi]
  411f65:	dec    edi
  411f66:	inc    edx
  411f67:	data16 in al,dx
  411f69:	es push ds
  411f6b:	mov    ds:0x305e522,al
  411f70:	out    dx,al
  411f71:	xchg   edi,ebp
  411f73:	mov    eax,0x15473c0e
  411f78:	inc    esi
  411f79:	fs mov edi,0x1a8bac9a
  411f7f:	xor    DWORD PTR ds:0x34ec6cb6,0x3b4c65a2
  411f89:	les    eax,FWORD PTR [ebx]
  411f8b:	fdiv   QWORD PTR [esi+0x5b448772]
  411f91:	scas   eax,DWORD PTR es:[edi]
  411f92:	aas    
  411f93:	push   esp
  411f94:	pop    ecx
  411f95:	jns    0x411fed
  411f97:	mov    ecx,0xa011dcbd
  411f9c:	jb     0x411f48
  411f9e:	cdq    
  411f9f:	sub    bl,ah
  411fa1:	rcl    DWORD PTR [esi+0x1],0x29
  411fa5:	mov    ebx,0x2c6b64c3
  411faa:	outs   dx,BYTE PTR ds:[esi]
  411fab:	pop    edx
  411fac:	inc    ebx
  411fad:	push   eax
  411fae:	xchg   ebp,eax
  411faf:	xchg   ebp,eax
  411fb0:	pop    ebx
  411fb1:	leave  
  411fb2:	cmp    BYTE PTR [ebx+0x4],ch
  411fb5:	pop    ds
  411fb6:	fmulp  st(1),st
  411fb8:	sub    BYTE PTR [ecx],0xf0
  411fbb:	aad    0xb3
  411fbd:	xor    BYTE PTR ds:0x6106551c,0xa0
  411fc4:	add    eax,0x847336c9
  411fc9:	lahf   
  411fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fcb:	cwde   
  411fcc:	ins    BYTE PTR es:[edi],dx
  411fcd:	xor    DWORD PTR [ebp+0xdb859ee],esp
  411fd3:	call   0xb3b7e9e
  411fd8:	cs in  al,dx
  411fda:	int3   
  411fdb:	das    
  411fdc:	call   0x552efe85
  411fe1:	inc    edi
  411fe2:	add    BYTE PTR [esi+0x554d3638],bh
  411fe8:	xor    al,0xa5
  411fea:	outs   dx,DWORD PTR ds:[esi]
  411feb:	pop    ss
  411fec:	mov    esp,DWORD PTR [edx+0x7f]
  411fef:	jmp    0x411ff1
  411ff1:	add    esi,ecx
  411ff3:	and    edi,DWORD PTR [ebx+0x70]
  411ff6:	mov    ds:0xa917233f,al
  411ffb:	jbe    0x41204d
  411ffd:	or     eax,0x4b1c0c3b
  412002:	mov    ds:0x467459e9,eax
  412007:	es sbb eax,0xcaefdd7e
  41200d:	dec    ebp
  41200e:	push   eax
  41200f:	repnz dec ebx
  412011:	fimul  DWORD PTR [eax]
  412013:	(bad)  
  412015:	mov    eax,ds:0x285040c2
  41201a:	pop    ecx
  41201b:	cwde   
  41201c:	push   ss
  41201d:	pop    ecx
  41201e:	xchg   BYTE PTR [esi+0x39],ch
  412021:	pop    es
  412022:	xor    ecx,esp
  412024:	fmul   QWORD PTR [edx]
  412026:	pop    esp
  412027:	bound  ebx,QWORD PTR [ecx+0x46b9a425]
  41202d:	pop    ecx
  41202e:	add    BYTE PTR [edi-0x4e],ch
  412031:	push   0xe88cf25f
  412036:	xor    ebx,ebp
  412038:	hlt    
  412039:	xchg   esi,eax
  41203a:	push   ecx
  41203b:	(bad)  
  41203c:	mov    edx,0x5ded0820
  412041:	xor    eax,0x5a09a312
  412046:	mov    bl,0xc1
  412048:	lea    esp,[ebx]
  41204a:	cld    
  41204b:	in     eax,dx
  41204c:	loope  0x411fe5
  41204e:	pop    edi
  41204f:	stos   DWORD PTR es:[edi],eax
  412050:	rcl    BYTE PTR [esi+0x1a],0x84
  412054:	xchg   edi,eax
  412055:	pop    es
  412056:	mov    esi,0x586d4c1d
  41205b:	pop    es
  41205c:	(bad)  
  41205d:	fnsave [ebp+edi*1-0x1abc15f1]
  412064:	push   eax
  412065:	sbb    eax,0xdd7d7e53
  41206a:	and    cl,BYTE PTR ds:0x90a60041
  412070:	std    
  412071:	mov    esp,0x99000253
  412076:	add    dh,cl
  412078:	xor    edi,esi
  41207a:	sub    eax,0x58c757da
  41207f:	jle    0x4120f5
  412081:	and    DWORD PTR ds:0xfb32b72,eax
  412087:	cwde   
  412088:	mov    al,ds:0x73ae47d
  41208d:	bnd jl 0x4120c3
  412090:	jb     0x4120b6
  412092:	dec    ebp
  412093:	xchg   esi,eax
  412094:	ja     0x412100
  412096:	mov    edx,0xfb2f78ff
  41209b:	add    ebp,edx
  41209d:	mov    gs,WORD PTR [edi]
  41209f:	mov    gs,WORD PTR ds:[esi]
  4120a2:	xor    esp,DWORD PTR [edx+0x3e8cca38]
  4120a8:	pop    eax
  4120a9:	gs mov dl,0x21
  4120ac:	fcom   QWORD PTR [esi]
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	pop    eax
  4120c6:	push   esp
  4120c7:	popf   
  4120c8:	cmc    
  4120c9:	adc    edx,DWORD PTR [edx+0x7e]
  4120cc:	jle    0x412127
  4120ce:	jg     0x41214e
  4120d0:	jle    0x4120aa
  4120d2:	xchg   esi,eax
  4120d3:	mov    ah,dl
  4120d5:	pusha  
  4120d6:	push   es
  4120d7:	mov    ah,0xda
  4120d9:	mov    ebp,0xf9a48cff
  4120de:	into   
  4120df:	ja     0x4120c6
  4120e1:	out    dx,al
  4120e2:	popf   
  4120e3:	dec    ecx
  4120e4:	in     eax,0x22
  4120e6:	popf   
  4120e7:	xchg   ecx,eax
  4120e8:	mov    al,0xd
  4120ea:	inc    ecx
  4120eb:	aam    0x8d
  4120ed:	aaa    
  4120ee:	dec    ebp
  4120ef:	or     dh,BYTE PTR [ebp-0x64]
  4120f2:	loope  0x4120dc
  4120f4:	gs cmp eax,0x3b32644c
  4120fa:	mov    esi,0x6def0b12
  4120ff:	out    dx,al
  412100:	cdq    
  412101:	sub    ebp,DWORD PTR [ebp+0x3d]
  412104:	adc    al,0xca
  412106:	stos   DWORD PTR es:[edi],eax
  412107:	mov    bl,0xf2
  412109:	cmp    bl,ch
  41210b:	(bad)  
  41210d:	sbb    DWORD PTR [edi-0x5],ebp
  412110:	outs   dx,DWORD PTR ds:[esi]
  412111:	gs add esp,0x2431627c
  412118:	in     al,0xdd
  41211a:	pop    esp
  41211b:	fcom   DWORD PTR [eax+0x40]
  41211e:	fstp   st(6)
  412120:	xor    ah,BYTE PTR [esi+0x6d]
  412123:	sbb    eax,0x729c0bc9
  412128:	out    dx,al
  412129:	adc    eax,0x93d9a6d6
  41212e:	pushf  
  41212f:	ins    BYTE PTR es:[edi],dx
  412130:	mov    esi,0x393ea29d
  412135:	(bad)  
  412136:	xlat   BYTE PTR ds:[ebx]
  412137:	(bad)  
  412138:	and    DWORD PTR [esp+ecx*2],esp
  41213b:	pop    edi
  41213c:	dec    ebp
  41213d:	cmp    edi,edx
  41213f:	hlt    
  412140:	xor    dl,BYTE PTR [eax+0x15]
  412143:	mov    ebp,0x713acc0d
  412148:	shl    BYTE PTR [edx],1
  41214a:	inc    esp
  41214b:	lea    ebx,ds:0xe4ce7d22
  412151:	cmp    eax,0xab52804c
  412156:	ja     0x41213f
  412158:	xchg   DWORD PTR [edi],edi
  41215a:	cmc    
  41215b:	stos   BYTE PTR es:[edi],al
  41215c:	mov    al,0x5e
  41215e:	mov    al,ds:0x70b22621
  412163:	test   DWORD PTR [ebx+0x10],0x31896a7c
  41216a:	bound  esi,QWORD PTR [edi-0x4f]
  41216d:	call   0xa6116919
  412172:	repz cli 
  412174:	sbb    dl,dh
  412176:	jge    0x4121a0
  412178:	or     al,0x39
  41217a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41217b:	retf   0xe253
  41217e:	rol    DWORD PTR [ebp-0x28],cl
  412181:	int3   
  412182:	push   ebx
  412183:	scas   eax,DWORD PTR es:[edi]
  412184:	xchg   edx,eax
  412185:	out    0x67,eax
  412187:	dec    DWORD PTR [ecx+0x4e]
  41218a:	out    dx,eax
  41218b:	idiv   BYTE PTR [eax]
  41218d:	adc    bl,ch
  41218f:	lahf   
  412190:	inc    ebp
  412191:	mov    bh,BYTE PTR [ebx-0x46]
  412194:	call   0x8f1d:0x29585970
  41219b:	in     eax,dx
  41219c:	fist   DWORD PTR [ebx+ebp*4-0x55]
  4121a0:	xor    al,0x1c
  4121a2:	pop    ds
  4121a3:	xor    eax,0xe9b7e0b0
  4121a8:	(bad)  
  4121a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121aa:	cwde   
  4121ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ac:	mov    es,WORD PTR ds:0x7e5d758d
  4121b2:	dec    ecx
  4121b3:	fcmovbe st,st(4)
  4121b5:	cmp    al,0xf
  4121b7:	or     DWORD PTR [edi-0x5b],esp
  4121ba:	sub    BYTE PTR gs:[edi-0x2f],bl
  4121be:	pop    ds
  4121bf:	push   0x3bdd29da
  4121c4:	fs jge 0x412174
  4121c7:	fst    DWORD PTR [esi]
  4121c9:	test   DWORD PTR [ebx],0x681a6aa3
  4121cf:	fnsave [esi]
  4121d1:	or     BYTE PTR [esi-0x1c],dl
  4121d4:	ins    BYTE PTR es:[edi],dx
  4121d5:	dec    ecx
  4121d6:	enter  0x6af9,0xca
  4121da:	sbb    edx,DWORD PTR [edi+0x225e7a32]
  4121e0:	sbb    eax,0x64cdc530
  4121e5:	into   
  4121e6:	xchg   ecx,eax
  4121e7:	push   cs
  4121e8:	adc    ecx,DWORD PTR [edx-0x6a12cb37]
  4121ee:	sub    al,0x9
  4121f0:	mov    cl,0x7f
  4121f2:	push   ecx
  4121f3:	aam    0xe7
  4121f5:	jg     0x4121e8
  4121f7:	xor    al,0x75
  4121f9:	push   edi
  4121fa:	sbb    ah,bh
  4121fc:	pop    ecx
  4121fd:	cmp    eax,0x2b03022c
  412202:	xchg   esp,eax
  412203:	jge    0x41226b
  412205:	sub    BYTE PTR [eax],dh
  412207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412208:	cmc    
  412209:	jle    0x41227d
  41220b:	(bad)  
  41220c:	into   
  41220d:	dec    ebp
  41220e:	sub    ebx,DWORD PTR [esi+esi*1+0x5a262d08]
  412215:	or     ecx,DWORD PTR [ebx-0x32]
  412218:	xchg   ecx,eax
  412219:	sbb    ebx,ecx
  41221b:	push   ebp
  41221c:	iret   
  41221d:	xchg   ebp,eax
  41221e:	scas   eax,DWORD PTR es:[edi]
  41221f:	sbb    dh,0x30
  412222:	and    eax,0x5e1fc36e
  412227:	or     dh,bh
  412229:	ins    BYTE PTR es:[edi],dx
  41222a:	adc    eax,DWORD PTR [eax+ebp*8-0x5815a173]
  412231:	jle    0x4121c6
  412233:	inc    eax
  412234:	xor    dh,BYTE PTR [ecx+edx*2]
  412237:	jns    0x412245
  412239:	dec    ecx
  41223a:	push   esp
  41223b:	pop    es
  41223c:	pop    esi
  41223d:	dec    esp
  41223e:	loope  0x4121ce
  412240:	out    0x83,al
  412242:	mov    bh,0x89
  412244:	xchg   ebx,ebp
  412246:	fmul   st,st(4)
  412248:	and    ebp,ebx
  41224a:	sub    DWORD PTR [ecx-0x514b9efc],esp
  412250:	push   esi
  412251:	sbb    esp,DWORD PTR [esi]
  412253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412254:	push   ebp
  412255:	xchg   esi,eax
  412256:	ret    0x6e4
  412259:	jle    0x412253
  41225b:	icebp  
  41225c:	and    eax,0xbea379d2
  412261:	std    
  412262:	jmp    0x4121f7
  412264:	sub    ecx,edi
  412266:	int3   
  412267:	xor    eax,DWORD PTR [ebx-0xa269130]
  41226d:	inc    esp
  41226e:	outs   dx,BYTE PTR ds:[esi]
  41226f:	in     eax,0x55
  412271:	int3   
  412272:	test   al,0x70
  412274:	and    esi,edx
  412276:	scas   al,BYTE PTR es:[edi]
  412277:	shr    DWORD PTR [edx-0x53ef0ce1],1
  41227d:	repnz pop ds
  41227f:	repnz or esp,DWORD PTR [esi+0x32]
  412283:	and    al,0xff
  412285:	daa    
  412286:	ret    
  412287:	cmp    DWORD PTR [ecx-0x7c983cd2],0xffffff8c
  41228e:	xor    al,0x64
  412290:	xchg   esp,eax
  412291:	out    0x1c,al
  412293:	pop    ebx
  412294:	shl    DWORD PTR [eax-0x72],0x6d
  412298:	jl     0x412270
  41229a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41229b:	mov    ebx,0xdfd2d9f2
  4122a0:	daa    
  4122a1:	outs   dx,DWORD PTR ds:[esi]
  4122a2:	leave  
  4122a3:	aas    
  4122a4:	stc    
  4122a5:	je     0x412319
  4122a7:	push   ebx
  4122a8:	fs out dx,eax
  4122aa:	sbb    ecx,DWORD PTR [edx-0x17]
  4122ad:	or     BYTE PTR [esi],al
  4122af:	and    ah,BYTE PTR [edi-0x762cd5c6]
  4122b5:	inc    ebp
  4122b6:	or     al,0x8b
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0x49e6ec13],ch
  4122ef:	int3   
  4122f0:	je     0x412370
  4122f2:	pop    esp
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x412346
  4122fa:	bound  ebx,QWORD PTR [ebp-0x32210507]
  412300:	ror    eax,cl
  412302:	inc    edx
  412303:	mov    edx,DWORD PTR [edx-0x6baebf3c]
  412309:	iret   
  41230a:	adc    eax,0xe0a04411
  41230f:	or     BYTE PTR [esi+0x4c47839],bh
  412315:	sub    DWORD PTR [eax-0x52],ebp
  412318:	cmp    cl,BYTE PTR [ebx-0x65]
  41231b:	xor    BYTE PTR [edx+ebp*8-0x59],al
  41231f:	mov    edi,0x2b2612b3
  412324:	or     BYTE PTR [ecx+0x3af39e89],ah
  41232a:	call   0x2474c456
  41232f:	xor    BYTE PTR [eax+0x72e48256],bl
  412335:	in     eax,0xfc
  412337:	jle    0x4122c5
  412339:	jge    0x4123a2
  41233b:	nop
  41233c:	jb     0x4122e1
  41233e:	out    0x73,eax
  412340:	ucomiss xmm3,xmm0
  412343:	std    
  412344:	fwait
  412345:	mov    esi,0x77cf371f
  41234a:	sbb    BYTE PTR [ecx+esi*1+0x74],bh
  41234e:	cmc    
  41234f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412350:	sub    eax,0x9a03348d
  412355:	mov    esp,0x9a0a6e52
  41235a:	ret    0xeef7
  41235d:	push   es
  41235e:	out    0x3,eax
  412360:	push   esi
  412361:	add    cl,BYTE PTR [eax]
  412363:	or     al,0x68
  412365:	xchg   esi,eax
  412366:	xor    bl,bh
  412368:	movlps xmm5,QWORD PTR [eax+0x6881aec2]
  41236f:	loope  0x4122f9
  412371:	and    BYTE PTR [edi],dl
  412373:	stos   DWORD PTR es:[edi],eax
  412374:	mov    esi,0x12ebdd09
  412379:	mov    dl,BYTE PTR [edx-0x422e9436]
  41237f:	shr    BYTE PTR [edi+0x4f0391d],1
  412385:	add    BYTE PTR [eax],ch
  412387:	test   DWORD PTR [ebx+edx*2-0x2c],edx
  41238b:	repnz xor al,0x56
  41238e:	sbb    DWORD PTR [edi],0x7d5e1352
  412394:	xlat   BYTE PTR ds:[ebx]
  412395:	push   ebp
  412396:	fimul  DWORD PTR [edx]
  412398:	sbb    al,0x8
  41239a:	mov    ecx,ss
  41239c:	push   ds
  41239d:	stc    
  41239e:	daa    
  41239f:	es cdq 
  4123a1:	ins    BYTE PTR es:[edi],dx
  4123a2:	sbb    DWORD PTR [ebp+0x710cd939],0x52f7c413
  4123ac:	mov    al,0x54
  4123ae:	inc    esi
  4123af:	inc    ecx
  4123b0:	jno    0x412348
  4123b2:	mov    al,ds:0xb4b93e33
  4123b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b8:	mov    al,0x12
  4123ba:	adc    dh,BYTE PTR [ecx+0x484ec762]
  4123c0:	into   
  4123c1:	ins    DWORD PTR es:[edi],dx
  4123c2:	cmc    
  4123c3:	loop   0x412439
  4123c5:	sbb    al,0x8
  4123c7:	mov    al,0x24
  4123c9:	push   0xec21a95e
  4123ce:	cmp    dh,ch
  4123d0:	inc    esp
  4123d1:	mov    esp,0xaee360ab
  4123d6:	outs   dx,DWORD PTR ds:[esi]
  4123d7:	stc    
  4123d8:	test   al,0xb5
  4123da:	push   esi
  4123db:	ret    0x4e64
  4123de:	xchg   esp,eax
  4123df:	rcl    DWORD PTR [esi],1
  4123e1:	mov    edx,0xde914cc1
  4123e6:	fucom  st(5)
  4123e8:	jnp    0x41242b
  4123ea:	sub    edx,ecx
  4123ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123ed:	dec    edx
  4123ee:	popf   
  4123ef:	mov    bl,0x8b
  4123f1:	sbb    al,0x79
  4123f3:	xor    eax,0x2d30fa35
  4123f8:	add    BYTE PTR [eax-0x2f],0xd3
  4123fc:	cmp    al,0xe9
  4123fe:	mov    ds:0x11a2fae,eax
  412403:	bound  edx,QWORD PTR es:[edx]
  412406:	or     al,0x11
  412408:	outs   dx,DWORD PTR ds:[esi]
  412409:	mov    dh,0x42
  41240b:	jl     0x412402
  41240d:	fmul   DWORD PTR [edx]
  41240f:	jo     0x4123c2
  412411:	in     al,0xb6
  412413:	mov    ds:0x6983f2e0,al
  412418:	mov    eax,ds:0x432f0e0c
  41241d:	mov    al,0xd4
  41241f:	pop    ebp
  412420:	mov    ds:0xa152ebb1,al
  412425:	push   esi
  412426:	fwait
  412427:	sbb    esi,ebx
  412429:	adc    eax,0x610982db
  41242e:	imul   edi,DWORD PTR [esi],0x884581cb
  412434:	or     bl,0xbc
  412437:	add    ah,BYTE PTR [ebp-0x28]
  41243a:	and    ch,BYTE PTR [ecx+0x1a]
  41243d:	test   ch,cl
  41243f:	mov    BYTE PTR [edx+eiz*8-0xa51c0f2],dl
  412446:	or     DWORD PTR [ecx+0x751c1e46],0x84ee96dc
  412450:	fidivr DWORD PTR [ebx+ebx*4]
  412453:	ret    
  412454:	dec    eax
  412455:	fucomip st,st(1)
  412457:	adc    eax,0x9327383
  41245c:	inc    ebx
  41245d:	mov    esp,0x5b5455fc
  412462:	dec    edi
  412463:	(bad)  
  412465:	ret    0x398b
  412468:	mov    edi,0x666c41a9
  41246d:	je     0x412441
  41246f:	bound  ebx,QWORD PTR [ebx+ecx*4+0x5f]
  412473:	jmp    0x1fdb:0x7f214a93
  41247a:	mov    ecx,0x1d896465
  41247f:	push   ss
  412480:	fucom  st(3)
  412482:	mov    ds:0x1f4301f7,eax
  412487:	cwde   
  412488:	or     DWORD PTR [edx-0x2b],edi
  41248b:	sbb    eax,0x3a74a0cb
  412490:	out    dx,al
  412491:	retf   
  412492:	fs cmp al,0x60
  412495:	das    
  412496:	or     al,0x0
  412498:	mov    ecx,0x3a9afbbe
  41249d:	fsub   DWORD PTR [ebp-0x24b5cac6]
  4124a3:	in     eax,0xca
  4124a5:	aam    0xf
  4124a7:	(bad)  
  4124a8:	ret    0x651a
  4124ab:	mov    ah,0xd4
  4124ad:	mov    edi,0x3472c367
  4124b2:	dec    esp
  4124b3:	inc    edi
  4124b4:	in     al,dx
  4124b5:	xchg   edi,eax
  4124b6:	shl    DWORD PTR [ebx+0x44f2d0fe],0xfa
  4124bd:	loope  0x4124de
  4124bf:	xchg   ebx,eax
  4124c0:	or     DWORD PTR [edx+0x41],edi
  4124c3:	adc    DWORD PTR [ebx+ecx*8+0x30ca2d58],esp
  4124ca:	jecxz  0x4124fa
  4124cc:	pop    esp
  4124cd:	sub    DWORD PTR [ebx-0xd49daac],edi
  4124d3:	sbb    eax,0x89e3a5b5
  4124d8:	test   BYTE PTR gs:[edx+0x845031a],bl
  4124df:	mov    DWORD PTR [ebp-0x10],eax
  4124e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	jmp    0x4125cc
  4125a0:	dec    eax
  4125a1:	retf   0x5d59
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x41260f
  4125ab:	cmp    al,0xc2
  4125ad:	xchg   ecx,eax
  4125ae:	leave  
  4125af:	xor    esi,ebx
  4125b1:	bound  edi,QWORD PTR [edi+ebx*1]
  4125b4:	xor    BYTE PTR [ecx],0x9b
  4125b7:	jecxz  0x4125c6
  4125b9:	and    BYTE PTR [ebx],bh
  4125bb:	cmp    DWORD PTR [ecx-0xa],esi
  4125be:	jo     0x4125ae
  4125c0:	adc    dh,bh
  4125c2:	sub    DWORD PTR [ebp+0x14],esp
  4125c5:	gs iret 
  4125c7:	dec    ebp
  4125c8:	push   0x23
  4125ca:	popa   
  4125cb:	add    al,0xd8
  4125cd:	dec    eax
  4125ce:	dec    eax
  4125cf:	fstp   TBYTE PTR [eax+0x304a8e36]
  4125d5:	adc    eax,0xcddfeb59
  4125da:	cld    
  4125db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125dc:	cmovl  esi,eax
  4125df:	es icebp 
  4125e1:	xchg   ecx,eax
  4125e2:	inc    ebp
  4125e3:	adc    bl,BYTE PTR [ebx]
  4125e5:	fmul   DWORD PTR [eax-0x78b40d69]
  4125eb:	addr16 mov ebp,0x7e97a27e
  4125f1:	adc    ah,cl
  4125f3:	inc    ebx
  4125f4:	sti    
  4125f5:	or     DWORD PTR [edi+0x58cd0f43],esp
  4125fb:	pop    edi
  4125fc:	mov    edi,0xf88890c0
  412601:	cs loopne 0x4125c7
  412604:	sbb    esi,esp
  412606:	jmp    0x412631
  412608:	add    al,0x57
  41260a:	xchg   ecx,eax
  41260b:	push   ebx
  41260c:	jns    0x412601
  41260e:	add    BYTE PTR [edx+0x70bbb0f1],dl
  412614:	push   esp
  412615:	data16 cmp BYTE PTR [ecx],ch
  412618:	test   al,0xa7
  41261a:	sub    al,0x6
  41261c:	mov    eax,ds:0x35161604
  412621:	sbb    BYTE PTR [edx],0xdb
  412624:	sahf   
  412625:	lock dec eax
  412627:	dec    ebp
  412628:	mov    ebp,0x9eb8086f
  41262d:	dec    eax
  41262e:	hlt    
  41262f:	es jmp 0x41263d
  412632:	repnz or dl,BYTE PTR [ebx]
  412635:	lahf   
  412636:	sub    dl,BYTE PTR [ebx+0x21cfad85]
  41263c:	jo     0x41263b
  41263e:	add    edx,DWORD PTR [esi+0x65c53b1e]
  412644:	mov    cl,0xb
  412646:	call   0xb4a7:0x2252bc68
  41264d:	push   ebp
  41264e:	popf   
  41264f:	mov    edi,0xcb5d4c1d
  412654:	pushf  
  412655:	push   ss
  412656:	and    BYTE PTR [ecx],cl
  412658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412659:	jno    0x4126cc
  41265b:	pushf  
  41265c:	adc    edi,DWORD PTR ss:[eax]
  41265f:	cdq    
  412660:	or     DWORD PTR [ecx-0x4df06ae0],ebp
  412666:	aas    
  412667:	and    BYTE PTR [edx-0x64],al
  41266a:	or     edx,DWORD PTR [ecx+0x7b214f90]
  412670:	aam    0x95
  412672:	pushf  
  412673:	(bad)  [ecx-0x59fc542a]
  412679:	and    dl,BYTE PTR [edx]
  41267b:	xchg   esi,eax
  41267c:	addr16 mov ds:0x93b7,al
  412680:	mov    ah,0xbc
  412682:	xor    BYTE PTR [ecx],dh
  412684:	int    0x11
  412686:	xchg   edx,eax
  412687:	mov    dl,0xe3
  412689:	and    DWORD PTR [edx+ecx*4+0x8],esi
  41268d:	jb     0x412669
  41268f:	xchg   esi,eax
  412690:	es enter 0xabad,0xba
  412695:	push   0x9e4c2fe8
  41269a:	mov    ds:0x96315faf,eax
  41269f:	cdq    
  4126a0:	js     0x412624
  4126a2:	(bad)  
  4126a4:	adc    edx,DWORD PTR [esi]
  4126a6:	and    cl,bh
  4126a8:	pusha  
  4126a9:	ds (bad) 
  4126ac:	push   esp
  4126ad:	jne    0x412706
  4126af:	mov    al,ds:0x4bb1e180
  4126b4:	mov    al,0x7e
  4126b6:	dec    edi
  4126b7:	dec    edx
  4126b8:	in     eax,dx
  4126b9:	ds pop es
  4126bb:	cmp    BYTE PTR [edx-0xb],ch
  4126be:	mov    ecx,0x32c20526
  4126c3:	in     eax,0x72
  4126c5:	mov    ebp,0x6e487f81
  4126ca:	loop   0x4126a1
  4126cc:	jo     0x4126f0
  4126ce:	(bad)  
  4126cf:	pop    ebp
  4126d0:	je     0x412735
  4126d2:	and    edi,esp
  4126d4:	sbb    DWORD PTR [eax+0x73522cb],eax
  4126da:	das    
  4126db:	xor    eax,0x99bd0af7
  4126e0:	inc    ch
  4126e2:	add    bl,al
  4126e4:	aaa    
  4126e5:	loop   0x412714
  4126e7:	xor    BYTE PTR [esp+edi*1-0x3561ada9],dh
  4126ee:	dec    edx
  4126ef:	std    
  4126f0:	dec    BYTE PTR [eax+eiz*8+0x6a4b6693]
  4126f7:	add    al,0x8b
  4126f9:	xchg   esi,eax
  4126fa:	add    DWORD PTR [eax+0x5c30890],esi
  412700:	dec    eax
  412701:	(bad)  
  412702:	sar    ah,cl
  412704:	xchg   esi,eax
  412705:	xor    eax,ebp
  412707:	mov    edi,DWORD PTR [eax+0x75]
  41270a:	cwde   
  41270b:	or     ecx,esp
  41270d:	or     bh,BYTE PTR [ebp+ecx*1-0x77]
  412711:	cwde   
  412712:	(bad)  
  412713:	lahf   
  412714:	mov    edx,0x21fa885e
  412719:	cmc    
  41271a:	xor    al,BYTE PTR [edi]
  41271c:	pushf  
  41271d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271e:	(bad)  
  41271f:	pop    esi
  412720:	add    ecx,DWORD PTR cs:[ebx+0xb]
  412724:	jmp    0x5792:0x4bfa9d0f
  41272b:	or     DWORD PTR [ebp-0x4c],0xffffffb5
  41272f:	dec    ebx
  412730:	jmp    0x1258:0xf6e942a5
  412737:	popa   
  412738:	adc    al,0xeb
  41273a:	jmp    0x97ab9ecd
  41273f:	scas   eax,DWORD PTR es:[edi]
  412740:	mov    BYTE PTR [ebp-0x2300ad11],ch
  412746:	aas    
  412747:	sub    eax,DWORD PTR [eax-0x5d]
  41274a:	ins    BYTE PTR es:[edi],dx
  41274b:	sub    al,BYTE PTR [ecx-0x2763fc7a]
  412751:	jle    0x41277f
  412753:	mov    ds:0xea230f7d,eax
  412758:	push   0xffffffce
  41275a:	daa    
  41275b:	push   eax
  41275c:	xor    dh,dh
  41275e:	(bad)  
  41275f:	mov    esi,0x4f0495
  412764:	(bad)  
  412765:	jp     0x412736
  412767:	jl     0x4127a2
  412769:	pop    ebx
  41276a:	xlat   BYTE PTR ds:[ebx]
  41276b:	out    dx,eax
  41276c:	xor    al,0x21
  41276e:	push   esp
  41276f:	and    dl,BYTE PTR [eax]
  412771:	popa   
  412772:	mov    ebx,0x19af6cbb
  412777:	jl     0x41277d
  412779:	adc    DWORD PTR [edx+0x2fd8d367],esp
  41277f:	xchg   ecx,eax
  412780:	fbstp  TBYTE PTR [ebx+edx*4-0x4f3829ce]
  412787:	cwde   
  412788:	mov    eax,0xed037d1c
  41278d:	xor    eax,ecx
  41278f:	jmp    0x41298f
  412794:	aaa    
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	dec    ecx
  4127a1:	or     eax,0x5f441bfd
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x4127a3
  4127ad:	add    edx,eax
  4127af:	out    dx,al
  4127b0:	adc    eax,0x9ac1f81c
  4127b5:	dec    edx
  4127b6:	cmp    eax,0x980c4ae6
  4127bb:	lea    edx,[ecx-0x240082bb]
  4127c1:	leave  
  4127c2:	imul   edx,DWORD PTR [esi],0xffffffd6
  4127c5:	or     DWORD PTR [edi-0x79a6ebdc],eax
  4127cb:	mov    DWORD PTR [esi+0x75575555],edx
  4127d1:	(bad)  
  4127d2:	lahf   
  4127d3:	popf   
  4127d4:	ret    
  4127d5:	mov    esi,0x58d36694
  4127da:	call   0xdabf3e37
  4127df:	ret    0x5438
  4127e2:	mov    ch,0x53
  4127e4:	push   esi
  4127e5:	stc    
  4127e6:	inc    edi
  4127e7:	xchg   ebx,eax
  4127e8:	call   0x39bb:0xe87de9eb
  4127ef:	jmp    0x49a431a8
  4127f4:	in     eax,dx
  4127f5:	aad    0x49
  4127f7:	stos   DWORD PTR es:[edi],eax
  4127f8:	ds cs fsubp st(7),st
  4127fc:	dec    esi
  4127fd:	add    al,0xed
  4127ff:	lock mov ds:0xd18d60ba,eax
  412805:	cmp    cl,BYTE PTR [edi+ecx*4]
  412808:	sti    
  412809:	and    eax,0x9853dc3
  41280e:	jmp    0x412841
  412810:	xchg   DWORD PTR [esi-0xeb06f1e],edi
  412816:	jle    0x4127e0
  412818:	mov    DWORD PTR [eax+0x35eaeb11],esp
  41281e:	pop    ebp
  41281f:	das    
  412820:	and    bh,ah
  412822:	fcmovb st,st(4)
  412824:	jno    0x41284f
  412826:	ss (bad) 
  412828:	shl    DWORD PTR [ecx-0x78],1
  41282b:	mov    WORD PTR [eax-0x68d58ae5],?
  412831:	bound  esp,QWORD PTR [esi+ebp*2]
  412834:	xchg   BYTE PTR [edi],dh
  412836:	sahf   
  412837:	cwde   
  412838:	std    
  412839:	call   0xd15b30f
  41283e:	cmp    cl,bl
  412840:	jg     0x412840
  412842:	popa   
  412843:	adc    al,0x33
  412845:	imul   esp,DWORD PTR [ecx],0x5c
  412848:	and    ch,dl
  41284a:	cmp    BYTE PTR [edi],cl
  41284c:	stc    
  41284d:	sbb    DWORD PTR [esi],0x12
  412850:	and    ch,BYTE PTR [edx-0x48c17a83]
  412856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412857:	jecxz  0x4127f8
  412859:	aaa    
  41285a:	pushf  
  41285b:	sar    BYTE PTR [edx+0x7cc32ea6],0x97
  412862:	fwait
  412863:	inc    esi
  412864:	dec    eax
  412865:	push   ss
  412866:	sub    al,0x79
  412868:	mov    fs,WORD PTR [ebp+0x34]
  41286b:	mov    ecx,DWORD PTR [ebp+0x49]
  41286e:	sar    BYTE PTR [ecx+0x4a],cl
  412871:	jp     0x41283c
  412873:	pop    esp
  412874:	mov    eax,ds:0x3a95e63b
  412879:	retf   
  41287a:	ds test al,0xd0
  41287d:	cmp    eax,0xb87ea1bb
  412882:	push   0x23
  412884:	push   cs
  412885:	(bad)  
  412886:	cmp    al,0x6d
  412888:	jmp    0x817a:0x90281477
  41288f:	ins    BYTE PTR es:[edi],dx
  412890:	icebp  
  412891:	mov    eax,0x519cf95c
  412896:	stos   DWORD PTR es:[edi],eax
  412897:	mov    ah,0x5b
  412899:	(bad)  
  41289a:	cmp    eax,0x57743446
  41289f:	push   cs
  4128a0:	je     0x412916
  4128a2:	mov    ds:0x4df5d4e4,eax
  4128a7:	xchg   BYTE PTR [ebx+edx*1-0x64b73c1b],dh
  4128ae:	data16 je 0x412876
  4128b1:	pop    esp
  4128b2:	repz and bh,BYTE PTR [si+0xb04]
  4128b8:	xor    esp,DWORD PTR fs:[edi-0x28c8a496]
  4128bf:	sbb    bl,dl
  4128c1:	inc    esp
  4128c2:	inc    edi
  4128c3:	push   ss
  4128c4:	pop    eax
  4128c5:	push   es
  4128c6:	addr16 xchg esi,eax
  4128c8:	mov    ah,0xa0
  4128ca:	call   0x9d32:0x66e9a81f
  4128d1:	ss or  al,0xfd
  4128d4:	fdivr  st(3),st
  4128d6:	cmp    bh,BYTE PTR [edi-0x188d953a]
  4128dc:	adc    al,0x64
  4128de:	ins    BYTE PTR es:[edi],dx
  4128df:	cmp    al,BYTE PTR [eax]
  4128e1:	pusha  
  4128e2:	in     eax,dx
  4128e3:	mov    dh,0x60
  4128e5:	or     dl,BYTE PTR [esi]
  4128e7:	cmc    
  4128e8:	xchg   edi,eax
  4128e9:	sub    DWORD PTR [edi+0x2c1605c2],esi
  4128ef:	inc    edi
  4128f0:	sbb    bh,BYTE PTR [ebx+0x32]
  4128f3:	sahf   
  4128f4:	popf   
  4128f5:	jmp    0x412954
  4128f7:	dec    ebx
  4128f8:	push   edx
  4128f9:	and    DWORD PTR [edi],ecx
  4128fb:	hlt    
  4128fc:	xchg   esp,eax
  4128fd:	jno    0x4128e4
  4128ff:	ds jmp 0x4128b3
  412902:	aas    
  412903:	jmp    0xb2d1b2f9
  412908:	sub    al,0xae
  41290a:	div    BYTE PTR [edi+0x3953d9b5]
  412910:	cld    
  412911:	cwde   
  412912:	(bad)  
  412913:	cmp    eax,DWORD PTR ds:0xa02c6b72
  412919:	int3   
  41291a:	sub    al,0x7f
  41291c:	bound  ebx,QWORD PTR [esi]
  41291e:	mov    dh,BYTE PTR [ecx-0x1f2e86b2]
  412924:	sub    bh,BYTE PTR [ecx]
  412926:	adc    eax,DWORD PTR ds:0xa42631bb
  41292c:	push   edx
  41292d:	data16 icebp 
  41292f:	int    0x62
  412931:	loope  0x412915
  412933:	dec    esi
  412934:	xchg   DWORD PTR [ebx-0x1e],esp
  412937:	push   edx
  412938:	cs dec ebp
  41293a:	dec    eax
  41293b:	bound  eax,QWORD PTR [edi+0x689415a4]
  412941:	pop    eax
  412942:	or     ebp,DWORD PTR [edi]
  412944:	xor    eax,0x61fea099
  412949:	loopne 0x4129c1
  41294b:	mov    bh,0x11
  41294d:	je     0x41291d
  41294f:	mov    cl,0x80
  412951:	xchg   ecx,esp
  412953:	cmp    DWORD PTR [bx-0x12],esp
  412957:	(bad)  
  412958:	xchg   edx,eax
  412959:	mul    BYTE PTR [ecx+0x4f]
  41295c:	fcmovne st,st(7)
  41295e:	dec    ebp
  41295f:	mov    ds:0x7d063326,al
  412964:	adc    al,0xd2
  412966:	push   edx
  412967:	cmc    
  412968:	mov    al,0x2a
  41296a:	fadd   QWORD PTR [ecx-0x38532f1b]
  412970:	pushf  
  412971:	xchg   ebp,eax
  412972:	test   eax,0x8bf78b94
  412977:	pop    ebp
  412978:	std    
  412979:	mov    esp,0x4388c653
  41297e:	cmp    bh,BYTE PTR [ebp+edx*1-0x41b00468]
  412985:	inc    ebp
  412986:	test   al,0x7
  412988:	fld    QWORD PTR [ebx]
  41298a:	cmp    BYTE PTR [edi],dl
  41298c:	mov    eax,ds:0xc603ab9f
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fcomp  DWORD PTR [esi-0x5f]
  4129f0:	xor    DWORD PTR [edi+eiz*4+0x59],eax
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x4129e4
  4129fb:	cld    
  4129fc:	pusha  
  4129fd:	pop    ebp
  4129fe:	xor    ecx,ebx
  412a00:	mov    DWORD PTR [ebx],ecx
  412a02:	mov    dh,0xef
  412a04:	jmp    0xc6ba9277
  412a09:	jl     0x412a55
  412a0b:	rcl    BYTE PTR [edi-0x5aa7592c],0x31
  412a12:	popf   
  412a13:	pushf  
  412a14:	add    al,0x7e
  412a16:	sub    ebx,DWORD PTR [eax+0x1e]
  412a19:	gs pop es
  412a1b:	mov    dl,0x60
  412a1d:	jg     0x412a3e
  412a1f:	std    
  412a20:	add    ah,BYTE PTR ss:[eax-0x65]
  412a24:	(bad)  
  412a25:	lock mov ch,0x2e
  412a28:	fwait
  412a29:	cmc    
  412a2a:	pop    ds
  412a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a2c:	outs   dx,DWORD PTR ds:[esi]
  412a2d:	ins    BYTE PTR es:[edi],dx
  412a2e:	rol    al,0x48
  412a31:	ds cdq 
  412a33:	and    al,0xd6
  412a35:	lods   eax,DWORD PTR ds:[esi]
  412a36:	jl     0x412a53
  412a38:	in     eax,dx
  412a39:	push   0xc2393592
  412a3e:	xchg   ebx,eax
  412a3f:	out    0xf7,eax
  412a41:	pushf  
  412a42:	xchg   esp,eax
  412a43:	sbb    al,0x79
  412a45:	gs es push edx
  412a48:	sub    al,0x95
  412a4a:	rcr    BYTE PTR [edx-0x30],0x9a
  412a4e:	data16 ins BYTE PTR es:[edi],dx
  412a50:	adc    ebx,ebp
  412a52:	mov    BYTE PTR [esi-0x1efb2249],bh
  412a58:	mov    eax,0xc8a991
  412a5d:	mov    bl,ch
  412a5f:	sub    DWORD PTR [edi+0x5ff32021],edx
  412a65:	fwait
  412a66:	leave  
  412a67:	add    al,0x73
  412a69:	and    DWORD PTR [ebp+eiz*2-0x6f],eax
  412a6d:	pop    edi
  412a6e:	or     BYTE PTR [edi-0x5e],bl
  412a71:	sbb    al,0x35
  412a73:	jge    0x412a5b
  412a75:	icebp  
  412a76:	lds    eax,FWORD PTR [edi]
  412a78:	mov    cl,0x4e
  412a7a:	stos   BYTE PTR es:[edi],al
  412a7b:	shl    esp,0xce
  412a7e:	data16 cmp ch,BYTE PTR [ebp-0x7d]
  412a82:	fist   DWORD PTR [edi]
  412a84:	out    dx,al
  412a85:	(bad)  
  412a86:	mov    esp,0xbac529ef
  412a8b:	xlat   BYTE PTR ds:[ebx]
  412a8c:	adc    eax,0xdf3f040a
  412a91:	retf   
  412a92:	scas   eax,DWORD PTR es:[edi]
  412a93:	test   bl,bl
  412a95:	mov    ecx,cr6
  412a98:	inc    si
  412a9a:	stos   BYTE PTR es:[edi],al
  412a9b:	inc    esi
  412a9c:	jno    0x412b17
  412a9e:	mov    bl,0xe3
  412aa0:	iret   
  412aa1:	pop    esi
  412aa2:	cmc    
  412aa3:	mov    dh,0x9c
  412aa5:	dec    esi
  412aa6:	xchg   ebx,eax
  412aa7:	push   esp
  412aa8:	imul   ebp,DWORD PTR [ebx],0xe88c5a74
  412aae:	add    BYTE PTR [ebx],dh
  412ab0:	add    edx,DWORD PTR [esp+ebx*2+0x6a623a98]
  412ab7:	test   bl,0xf5
  412aba:	jbe    0x412a40
  412abc:	jle    0x412aed
  412abe:	mov    dh,0x67
  412ac0:	ret    
  412ac1:	je     0x412adb
  412ac3:	clc    
  412ac4:	bound  esp,QWORD PTR [ebp-0x2a1a71b5]
  412aca:	jmp    0xcdd3:0x172cad7d
  412ad1:	(bad)  
  412ad2:	std    
  412ad3:	in     eax,0x12
  412ad5:	jge    0x412b4e
  412ad7:	fnstsw WORD PTR [edi]
  412ad9:	sahf   
  412ada:	lock xchg edi,eax
  412adc:	(bad)  
  412add:	in     al,dx
  412ade:	sbb    ch,0x26
  412ae1:	add    BYTE PTR ds:0x39b9ddb1,bl
  412ae7:	(bad)  
  412ae9:	pop    edi
  412aea:	hlt    
  412aeb:	rcl    DWORD PTR [esi],1
  412aed:	and    DWORD PTR [edx+0xb499181],esp
  412af3:	push   ebx
  412af4:	jmp    0x412acf
  412af6:	mov    ebx,?
  412af8:	cmp    al,BYTE PTR [edi-0xb]
  412afb:	(bad)
  412afe:	and    al,0xe
  412b00:	loope  0x412ab3
  412b02:	sub    ebp,esi
  412b04:	push   ds
  412b05:	adc    ch,ah
  412b07:	loop   0x412b20
  412b09:	scas   al,BYTE PTR es:[edi]
  412b0a:	leave  
  412b0b:	add    bh,BYTE PTR [ecx+0x4b918820]
  412b11:	push   0x376771c9
  412b16:	fs pop edx
  412b18:	(bad)  
  412b19:	mov    ah,0x19
  412b1b:	mov    esi,0x4dcf5a04
  412b20:	int3   
  412b21:	dec    esp
  412b22:	mov    eax,0x68052e17
  412b27:	aas    
  412b28:	mov    esp,0x8a1c241d
  412b2d:	sbb    al,0x1a
  412b2f:	js     0x412af6
  412b31:	add    DWORD PTR [eax+esi*8+0x5dbe811f],edi
  412b38:	mov    ebp,0xa58f226f
  412b3d:	dec    eax
  412b3e:	int3   
  412b3f:	mov    eax,ds:0x77ff75c4
  412b44:	aas    
  412b45:	fsubr  QWORD PTR [esi+0x7683d1c6]
  412b4b:	div    BYTE PTR [ebx+edi*8]
  412b4e:	shl    BYTE PTR [ebp-0x7c],0xe4
  412b52:	cli    
  412b53:	loop   0x412bd3
  412b55:	inc    eax
  412b56:	inc    edi
  412b57:	mov    edx,0xaa2b1036
  412b5c:	dec    ecx
  412b5d:	sti    
  412b5e:	jmp    0x1d4c32c
  412b63:	in     eax,0x42
  412b65:	out    0x91,eax
  412b67:	pop    es
  412b68:	cli    
  412b69:	aaa    
  412b6a:	in     al,0xec
  412b6c:	loopne 0x412b04
  412b6e:	mov    ecx,0xdc39a83b
  412b73:	add    eax,0x1531f273
  412b78:	cwde   
  412b79:	or     al,0xf0
  412b7b:	nop
  412b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b7d:	push   ecx
  412b7e:	(bad)  
  412b80:	dec    esi
  412b81:	ret    0xc5cb
  412b84:	lods   eax,DWORD PTR ds:[esi]
  412b85:	dec    ecx
  412b86:	sub    eax,0xb2828609
  412b8b:	cmp    ecx,DWORD PTR [ebp-0x7b]
  412b8e:	inc    ebp
  412b8f:	xor    ebp,ebp
  412b91:	(bad)  
  412b92:	cld    
  412b93:	adc    esi,ecx
  412b95:	aaa    
  412b96:	or     eax,0x6bb5cbd6
  412b9b:	pop    ss
  412b9c:	cmp    bh,BYTE PTR ds:0xf8224059
  412ba2:	sub    eax,0x6ec2a72f
  412ba7:	mov    ds:0xc8300fea,al
  412bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bad:	and    ebp,DWORD PTR [edi+0x76]
  412bb0:	sti    
  412bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb2:	fnstcw WORD PTR [eax+0x25]
  412bb5:	ret    
  412bb6:	daa    
  412bb7:	pop    edx
  412bb8:	repz mov edx,0x1a12edac
  412bbe:	xor    BYTE PTR [esi+esi*2+0x42],bh
  412bc2:	ret    0x6542
  412bc5:	cdq    
  412bc6:	xor    dl,BYTE PTR [edx-0xe]
  412bc9:	pusha  
  412bca:	inc    edi
  412bcb:	or     bl,bl
  412bcd:	fst    st(2)
  412bcf:	inc    ecx
  412bd0:	dec    ebx
  412bd1:	test   al,0xc4
  412bd3:	adc    eax,0x49dd0de8
  412bd8:	and    eax,0x83927a76
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    ecx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    eax,DWORD PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    ebp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [eax+edx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fsub   DWORD PTR [eax]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fnstenv [ebp-0x73db3526]
  414e45:	in     eax,0x0
  414e47:	add    ch,dh
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    BYTE PTR [ebx+0x6f],dh
  414e4e:	shr    ebp,1
  414e50:	aas    
  414e51:	add    DWORD PTR [ebp+0x58],ebp
  414e54:	pop    ebp
  414e55:	inc    eax
  414e56:	std    
  414e57:	(bad)  
  414e59:	mov    bl,ah
  414e5b:	shl    esi,0x6f
  414e5e:	jmp    0x1d69c94e
  414e63:	inc    ecx
  414e64:	mov    eax,0x55bc5459
  414e69:	(bad)  
  414e6a:	(bad)  
  414e6b:	mov    eax,fs:0x3bcd5881
  414e71:	int    0x39
  414e73:	sub    DWORD PTR [eax+0x7a],esp
  414e76:	fisub  DWORD PTR [ebp-0x5d04adc]
  414e7c:	aam    0x74
  414e7e:	xchg   ecx,eax
  414e7f:	cmc    
  414e80:	inc    esi
  414e81:	(bad)  
  414e82:	in     eax,dx
  414e83:	push   ebp
  414e84:	mov    gs:0x954a9647,eax
  414e8a:	add    dh,0x47
  414e8d:	xor    al,0x98
  414e8f:	mov    edx,0xd0c5b06d
  414e94:	xchg   ecx,eax
  414e95:	xor    al,BYTE PTR [ecx-0x61]
  414e98:	push   cs
  414e99:	mov    esi,0x22412a49
  414e9e:	mov    ebx,?
  414ea0:	xor    eax,0xb6b42ac3
  414ea5:	inc    ecx
  414ea6:	jo     0x414e6d
  414ea8:	push   ecx
  414ea9:	mov    eax,ds:0x1f44a6b
  414eae:	cmp    al,0x1b
  414eb0:	mov    edi,0x80fb030e
  414eb5:	and    BYTE PTR [eax],bh
  414eb7:	push   esp
  414eb8:	pusha  
  414eb9:	and    eax,0x76ee65cd
  414ebe:	sbb    eax,0xea793a39
  414ec3:	push   ss
  414ec4:	popf   
  414ec5:	xor    al,0x4f
  414ec7:	test   eax,0x83a33bcf
  414ecc:	mov    edx,0x57c6d147
  414ed1:	fadd   DWORD PTR [ecx+0x3]
  414ed4:	(bad)  
  414ed6:	fcmovb st,st(2)
  414ed8:	add    DWORD PTR ds:0x223d9e15,esp
  414ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414edf:	mov    eax,ds:0xd23b6318
  414ee4:	(bad)
  414ee7:	or     esp,ebx
  414ee9:	loop   0x414e71
  414eeb:	das    
  414eec:	out    dx,eax
  414eed:	xchg   esp,eax
  414eee:	ds jnp 0x414edc
  414ef1:	mov    dl,ah
  414ef3:	mov    eax,ds:0x9a8d4de0
  414ef8:	(bad)  
  414ef9:	mul    DWORD PTR [eax-0x77f1f621]
  414eff:	cld    
  414f00:	pop    ecx
  414f01:	lsl    ebx,WORD PTR [esi]
  414f04:	lea    edx,[eax+edi*8-0x1f0e829d]
  414f0b:	xor    eax,0x7ae2342f
  414f10:	mov    ds:0x4cf42d33,al
  414f15:	test   al,0xdb
  414f17:	aad    0x23
  414f19:	out    dx,al
  414f1a:	(bad)  
  414f1d:	mov    esi,0xee9d9d23
  414f22:	push   0x8b036898
  414f27:	into   
  414f28:	jae    0x414f6d
  414f2a:	xor    BYTE PTR [ecx-0x71],cl
  414f2d:	inc    edx
  414f2e:	call   0xbe237048
  414f33:	push   0xffffff80
  414f35:	fst    QWORD PTR [edi]
  414f37:	adc    DWORD PTR [edx+ebx*4],ecx
  414f3a:	sbb    eax,0xa70dbec3
  414f3f:	xor    al,0x6a
	...
  414fb1:	add    BYTE PTR [eax],al
  414fb3:	add    BYTE PTR [edx-0x26],bl
  414fb6:	push   esi
  414fb7:	pusha  
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0xe4a
  414fc2:	cmc    
  414fc3:	xor    DWORD PTR [ecx-0xaffff1a],eax
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR [ebx-0x67b70b72],ah
  414fd1:	ret    
  414fd2:	or     bl,0xc7
  414fd5:	mov    bl,0x84
  414fd7:	pop    edx
  414fd8:	mov    edx,0x1680702b
  414fdd:	and    al,0x22
  414fdf:	dec    ecx
  414fe0:	mov    esp,0x1e2fa415
  414fe5:	scas   eax,DWORD PTR es:[edi]
  414fe6:	out    0xad,eax
  414fe8:	or     bh,BYTE PTR [eax]
  414fea:	adc    edi,DWORD PTR [ebp+0x6]
  414fed:	call   0x6a4d:0xd0a4af25
  414ff4:	test   eax,0x71fa0281
  414ff9:	jmp    0x41503f
  414ffb:	mov    bh,bh
  414ffd:	pop    esi
  414ffe:	stos   DWORD PTR es:[edi],eax
  414fff:	call   0x96720c56
  415004:	cli    
  415005:	mov    WORD PTR [esi],ds
  415007:	dec    esi
  415008:	cmp    al,0x17
  41500a:	fs jmp 0x415022
  41500d:	fldpi  
  41500f:	lods   eax,DWORD PTR ds:[esi]
  415010:	jmp    0x65e4a863
  415015:	xchg   ebp,esi
  415017:	pusha  
  415018:	sub    al,0xc2
  41501a:	lds    ebp,FWORD PTR ds:0x3995c71c
  415020:	aaa    
  415021:	ror    BYTE PTR [edx-0x16f1943c],0xbb
  415028:	dec    ebx
  415029:	std    
  41502a:	add    ch,dh
  41502c:	pop    eax
  41502d:	add    esi,edi
  41502f:	or     esi,esp
  415031:	and    eax,0xb3e2dbff
  415036:	pop    esi
  415037:	push   cs
  415038:	out    dx,eax
  415039:	push   0x35
  41503b:	rcl    BYTE PTR [ebx],1
  41503d:	retf   0xa67d
  415040:	xchg   DWORD PTR [esi],ecx
  415042:	dec    esi
  415043:	or     cl,BYTE PTR [eax+0x17]
  415046:	test   BYTE PTR [eax+0x57d6889d],bl
  41504c:	into   
  41504d:	sub    ebx,DWORD PTR [edi+0x3e]
  415050:	(bad)  
  415051:	mov    al,0x74
  415053:	test   DWORD PTR [esi],eax
  415055:	push   eax
  415056:	sub    BYTE PTR [edx+0xcd01766],al
  41505c:	xchg   ebp,eax
  41505d:	mov    esi,0xf0be36d5
  415062:	add    BYTE PTR [ecx+edi*1],0x19
  415066:	adc    eax,0x356bfa56
  41506b:	mov    dl,0x8
  41506d:	pop    ecx
  41506e:	mov    ebx,DWORD PTR [esi+eax*4]
  415071:	jg     0x4150ef
  415073:	sub    al,0x28
  415075:	ret    
  415076:	das    
  415077:	jo     0x415070
  415079:	pop    es
  41507a:	dec    ecx
  41507b:	jb     0x4150a8
  41507d:	push   0xdd1b9845
  415082:	aas    
  415083:	push   es
  415084:	inc    ebp
  415085:	xchg   ebx,eax
  415086:	inc    BYTE PTR [esi]
  415088:	jecxz  0x415049
  41508a:	push   ebp
  41508b:	or     DWORD PTR ds:0x231073eb,eax
  415091:	es inc eax
  415093:	push   ecx
  415094:	mov    ss,WORD PTR [edi-0x49e78860]
  41509a:	jge    0x4150e7
  41509c:	pop    esp
  41509d:	pop    DWORD PTR [edi]
  41509f:	in     eax,dx
  4150a0:	lods   al,BYTE PTR ds:[esi]
  4150a1:	or     BYTE PTR [ebx-0x2e],bh
  4150a4:	sub    ebx,ebx
  4150a6:	icebp  
  4150a7:	(bad)  
  4150a8:	xor    bl,BYTE PTR [ebp-0x68e4080f]
  4150ae:	out    dx,al
  4150af:	jge    0x41505c
  4150b1:	xor    al,0x4a
  4150b3:	(bad)  
  4150b4:	fbstp  TBYTE PTR [edi]
  4150b6:	dec    ecx
  4150b7:	xor    eax,0x3af2d16
  4150bc:	mov    cl,0xa9
  4150bf:	icebp  
  4150c0:	fld    QWORD PTR [eax]
	...
  415132:	add    BYTE PTR [eax],al
  415134:	add    dl,BYTE PTR [edx]
  415136:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41513c:	adc    ah,BYTE PTR [esi+0x18e9c4d9]
  415142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415143:	xchg   DWORD PTR [esi-0x19],esi
  415146:	add    BYTE PTR [eax],al
  415148:	cmc    
  415149:	add    BYTE PTR [eax],al
  41514b:	add    BYTE PTR ds:0x63f0a1bb,ch
  415151:	cdq    
  415152:	lea    ebx,[eax-0x4abb6fb0]
  415158:	hlt    
  415159:	fst    DWORD PTR [esi+edx*2-0x6d832bd9]
  415160:	and    eax,0xdf25bc69
  415165:	mov    ecx,0x815c1ef3
  41516a:	retf   
  41516b:	out    dx,eax
  41516c:	jmp    0x50033923
  415171:	retf   0xa6e4
  415174:	mov    dl,0xb7
  415176:	jmp    FWORD PTR [eax]
  415178:	arpl   WORD PTR [edx],dx
  41517a:	shl    BYTE PTR [edi-0x423dae9a],1
  415180:	jbe    0x41519c
  415182:	mov    bh,0xd8
  415184:	pusha  
  415185:	cld    
  415186:	add    edx,edx
  415188:	xchg   ecx,eax
  415189:	push   ecx
  41518a:	fistp  DWORD PTR [edx]
  41518c:	dec    esp
  41518d:	xor    al,0xdc
  41518f:	clc    
  415190:	int3   
  415191:	jmp    0x4151cb
  415193:	popa   
  415194:	out    0xb8,al
  415196:	fincstp 
  415198:	mov    al,0x27
  41519a:	es ins BYTE PTR es:[edi],dx
  41519c:	pop    es
  41519d:	dec    esi
  41519e:	mov    ah,0x52
  4151a0:	idiv   BYTE PTR [eax+0x13]
  4151a3:	add    DWORD PTR [edi-0x33],ebp
  4151a6:	ret    0x8561
  4151a9:	inc    esi
  4151aa:	jnp    0x415197
  4151ac:	push   ebp
  4151ad:	pop    ebx
  4151ae:	ds cwde 
  4151b0:	clc    
  4151b1:	gs inc edx
  4151b3:	jecxz  0x4151bd
  4151b5:	arpl   WORD PTR [edi+eiz*4],dx
  4151b8:	cli    
  4151b9:	sbb    al,0x77
  4151bb:	mov    esi,0xd6b0aa57
  4151c0:	pop    esi
  4151c1:	jg     0x4151da
  4151c3:	dec    eax
  4151c4:	and    BYTE PTR [edx],cl
  4151c6:	add    al,0x17
  4151c8:	fs and ch,cl
  4151cb:	push   ecx
  4151cc:	es jnp 0x4151cc
  4151cf:	popf   
  4151d0:	mov    ebp,0xb08de0ca
  4151d5:	mov    ah,0x94
  4151d7:	xor    eax,DWORD PTR [edi-0x3c]
  4151da:	mov    edx,0xcee1a746
  4151e0:	mov    ch,0x8e
  4151e2:	nop
  4151e3:	pusha  
  4151e4:	aam    0xba
  4151e6:	push   edi
  4151e7:	sbb    BYTE PTR [esp+edx*1],dh
  4151ea:	sbb    eax,0xcfc9b205
  4151ef:	sub    cl,BYTE PTR [edi-0x58]
  4151f2:	add    DWORD PTR [ebx-0x58],ecx
  4151f5:	ret    0xf2d1
  4151f8:	je     0x41524c
  4151fa:	cmp    eax,0x2c42a899
  4151ff:	lahf   
  415200:	je     0x41525d
  415202:	ins    BYTE PTR es:[edi],dx
  415203:	imul   edx,DWORD PTR [esi+eiz*1+0x727c911a],0x9c69aac0
  41520e:	xchg   ebx,eax
  41520f:	sti    
  415210:	jg     0x4151e0
  415212:	jne    0x4151f1
  415214:	jp     0x41528b
  415216:	(bad)  
  415217:	xchg   esi,ebx
  415219:	shl    BYTE PTR [edi+0x3a],cl
  41521c:	sbb    al,0xf8
  41521e:	xor    dh,BYTE PTR [edx]
  415220:	xchg   DWORD PTR [ebp+0x14c492ad],ebx
  415226:	inc    esp
  415227:	push   ebx
  415228:	dec    ebp
  415229:	mov    eax,0x1d064b86
  41522e:	loope  0x41522f
  415230:	xchg   ebx,eax
  415231:	shl    DWORD PTR [edx+0x531c3ec4],cl
  415237:	mov    esi,0x90c8e41
  41523c:	sub    BYTE PTR [eax+0xcbe55a],cl
	...
  4152b2:	add    BYTE PTR [eax],al
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	shr    DWORD PTR [edx+ecx*8+0x69],0x6b
  4152c5:	call   0x13652ca
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	mov    esi,0xe3b77677
  4152d1:	out    0x19,eax
  4152d3:	enter  0x2514,0xd8
  4152d7:	aam    0x2c
  4152d9:	stos   BYTE PTR es:[edi],al
  4152da:	cmp    eax,0xeee89308
  4152df:	idiv   cl
  4152e1:	cmp    al,0xd2
  4152e3:	imul   eax,DWORD PTR [ebx-0x3],0x7c
  4152e7:	jle    0x415309
  4152e9:	fisubr WORD PTR [ebx+0x1d32b43e]
  4152ef:	jo     0x4152ad
  4152f1:	cmp    BYTE PTR [esi],ah
  4152f3:	je     0x415354
  4152f5:	test   eax,0x886ade81
  4152fa:	inc    eax
  4152fb:	dec    ecx
  4152fc:	imul   edx,DWORD PTR [eax-0x78bfcb0b],0x2e
  415303:	push   eax
  415304:	inc    esp
  415305:	aad    0xb1
  415307:	iret   
  415308:	xchg   BYTE PTR [edx-0xf979755],dh
  41530e:	enter  0xcefd,0xf
  415312:	lods   eax,DWORD PTR ds:[esi]
  415313:	shr    ecx,0x86
  415316:	adc    eax,0xff814b89
  41531b:	sbb    dh,BYTE PTR [edi+0x23]
  41531e:	fs jo  0x41531e
  415321:	dec    ebx
  415322:	rcl    DWORD PTR [edi+0x133438fb],0x1b
  415329:	loopne 0x41530e
  41532b:	cwde   
  41532c:	jmp    0xf726:0x18113008
  415333:	nop
  415334:	and    edi,DWORD PTR [ebx]
  415336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415337:	test   DWORD PTR ds:0x2ad0ea29,0x1147f245
  415341:	arpl   WORD PTR [esi-0xb],si
  415344:	xlat   BYTE PTR ds:[ebx]
  415345:	repnz mov BYTE PTR ss:[edi],al
  415349:	dec    edi
  41534a:	jmp    0x82e36537
  41534f:	ja     0x4153cc
  415351:	mov    ah,BYTE PTR [edx+0x60]
  415354:	jmp    0x2ab0b1a6
  415359:	lahf   
  41535a:	icebp  
  41535b:	mov    eax,0x8a6edf60
  415360:	dec    esp
  415361:	icebp  
  415362:	out    dx,al
  415363:	fdiv   st(0),st
  415365:	cwde   
  415366:	out    0xaa,al
  415368:	shl    DWORD PTR [edx-0x4c3f7287],cl
  41536e:	xchg   esp,eax
  41536f:	dec    ebp
  415370:	mov    eax,0x88d37971
  415375:	stos   DWORD PTR es:[edi],eax
  415376:	or     esi,DWORD PTR [ebp-0x6ad3140b]
  41537c:	rcl    DWORD PTR [esi+0x4350ed34],cl
  415382:	and    DWORD PTR [edi-0x35],0x2e
  415386:	leave  
  415387:	dec    esp
  415388:	test   DWORD PTR [edx+edx*8-0x416f2464],eax
  41538f:	je     0x4153f3
  415391:	dec    eax
  415392:	inc    ebp
  415393:	xchg   esp,eax
  415394:	mov    esp,0x28d8f422
  415399:	push   ecx
  41539a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539b:	bswap  edx
  41539d:	mov    ds:0xd8a7cea7,al
  4153a2:	test   eax,0x12d56689
  4153a7:	xchg   ebp,eax
  4153a8:	sub    DWORD PTR [ecx],0x3c4923e9
  4153ae:	add    DWORD PTR [ecx+ebp*8],esi
  4153b1:	enter  0x5f0b,0xfd
  4153b5:	xor    DWORD PTR [eax+edx*4-0x10],ebx
  4153b9:	xchg   edx,eax
  4153ba:	sub    DWORD PTR [esi],edx
  4153bc:	aam    0x3
  4153be:	and    BYTE PTR [ecx+0x9],dl
	...
  415431:	add    BYTE PTR [eax],al
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	repz xchg edi,eax
  415442:	test   al,0xc0
  415444:	pusha  
  415445:	jmp    0x136544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	inc    eax
  41544d:	inc    esi
  41544e:	mov    DWORD PTR [ecx],eax
  415450:	ret    
  415451:	and    DWORD PTR [esi+0x6dbbf9cb],eax
  415457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415458:	shl    BYTE PTR [edi],1
  41545a:	add    edi,edx
  41545c:	shl    DWORD PTR [edi+0x681cff11],0x15
  415463:	push   edx
  415464:	fmul   DWORD PTR [ebx]
  415466:	mov    bh,0xe5
  415468:	cwde   
  415469:	xchg   ebx,eax
  41546a:	dec    edi
  41546b:	and    DWORD PTR [edx+0x4384feb3],edi
  415471:	pop    esp
  415472:	ja     0x415496
  415474:	xlat   BYTE PTR ds:[ebx]
  415475:	mov    ds:0x48d3f701,al
  41547a:	aas    
  41547b:	cld    
  41547c:	sub    dh,BYTE PTR [eax+0xb]
  41547f:	mov    eax,0xeec3c9ea
  415484:	popa   
  415485:	pop    ds
  415486:	popa   
  415487:	ficomp WORD PTR [eax-0x5e093b14]
  41548d:	or     eax,0x549a195f
  415492:	xor    DWORD PTR [edx+0xe2772f0],edi
  415498:	or     BYTE PTR [esi-0x1a],al
  41549b:	mov    cl,0x7
  41549d:	jecxz  0x415458
  41549f:	cld    
  4154a0:	sub    DWORD PTR [edi-0x6c],ebp
  4154a3:	and    DWORD PTR [ecx-0x8],eax
  4154a6:	inc    ecx
  4154a7:	and    al,0x22
  4154a9:	and    eax,0x9c102586
  4154ae:	ret    0x5e70
  4154b1:	test   eax,0x9c9c6344
  4154b6:	cmp    bh,ch
  4154b8:	je     0x415539
  4154ba:	jmp    0x186d:0xc4268db1
  4154c1:	rcl    BYTE PTR [ecx-0x3],0xee
  4154c5:	or     ah,0xdb
  4154c8:	add    al,0x5d
  4154ca:	and    eax,esp
  4154cc:	fsubr  DWORD PTR [ebp-0x3f]
  4154cf:	inc    ebp
  4154d0:	add    DWORD PTR [ebx],eax
  4154d2:	ins    BYTE PTR es:[edi],dx
  4154d3:	xchg   ebp,eax
  4154d4:	fcom   DWORD PTR [edx+0x58]
  4154d7:	push   ecx
  4154d8:	mov    WORD PTR [edx+0x7df2be44],?
  4154de:	pushf  
  4154df:	sub    edi,ebp
  4154e1:	lock rol BYTE PTR [edi],cl
  4154e4:	xor    DWORD PTR [ebx-0x3cd01753],edx
  4154ea:	xor    DWORD PTR [ebx+0x5a],0x898a7c95
  4154f1:	mov    cl,0xe2
  4154f3:	or     dh,BYTE PTR [ebx+0x77]
  4154f6:	jbe    0x415545
  4154f8:	sbb    eax,ebx
  4154fa:	loop   0x4154e1
  4154fc:	cmp    bl,BYTE PTR [ebx+0x14]
  4154ff:	push   eax
  415500:	add    dh,bl
  415502:	push   ebx
  415503:	adc    ah,BYTE PTR [edi+edx*1+0x3afb574d]
  41550a:	jb     0x4154d6
  41550c:	and    DWORD PTR [edi+0x38],esi
  41550f:	or     BYTE PTR [ecx+0x44c04bad],bh
  415515:	and    BYTE PTR [edx],cl
  415517:	fwait
  415518:	jo     0x415568
  41551a:	popf   
  41551b:	mov    ds:0xffab45b,al
  415520:	mov    edx,DWORD PTR [ebx]
  415522:	or     eax,0xa8c7388a
  415527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415528:	adc    eax,0xd8ab27bb
  41552d:	mov    ch,0x63
  41552f:	aad    0xdb
  415531:	mov    esp,0x8b443510
  415536:	fist   DWORD PTR [edx+0xc]
  415539:	mov    dh,BYTE PTR [eax+0x1f]
  41553c:	js     0x415506
  41553e:	adc    eax,0x2b2f
	...
  4155b3:	add    BYTE PTR [edi+0x5e],bh
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	stc    
  4155c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c2:	xor    al,0x65
  4155c4:	push   ebp
  4155c5:	jmp    0x0:0xf50000
  4155cc:	push   0xc3696536
  4155d1:	sub    cl,BYTE PTR [esi+ecx*1]
  4155d4:	dec    edx
  4155d5:	jge    0x415641
  4155d7:	mov    al,ds:0x94448afb
  4155dc:	lds    esp,FWORD PTR [ecx-0x7f4de4db]
  4155e2:	adc    eax,0x9d6788bc
  4155e7:	xchg   ecx,eax
  4155e8:	adc    al,0xba
  4155ea:	adc    esi,DWORD PTR [edx]
  4155ec:	clc    
  4155ed:	cwde   
  4155ee:	call   0x32edd468
  4155f3:	les    ebp,FWORD PTR [eax]
  4155f5:	xchg   esi,eax
  4155f6:	imul   edx,DWORD PTR [ebp+0x79],0xf12b6a42
  4155fd:	fiadd  DWORD PTR [edi-0x78]
  415600:	xor    BYTE PTR [edi-0x6290112b],ch
  415606:	or     DWORD PTR [eax+0x2526333e],eax
  41560c:	mov    ecx,0x4a486558
  415611:	into   
  415612:	lock ins BYTE PTR es:[edi],dx
  415614:	imul   esi,DWORD PTR [eax+0x2f407f98],0x31dbfd21
  41561e:	stos   BYTE PTR es:[edi],al
  41561f:	sbb    bl,BYTE PTR [ecx+eiz*4]
  415622:	test   eax,0xe3a9b03e
  415627:	mov    WORD PTR [edx+0x38efb3aa],?
  41562d:	push   ebx
  41562e:	movntq QWORD PTR [ebp+0x59],mm1
  415632:	cmp    ebx,ebp
  415634:	adc    bl,BYTE PTR [ecx+0x1a]
  415637:	inc    edi
  415638:	lods   al,BYTE PTR ds:[esi]
  415639:	dec    edi
  41563a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41563b:	cdq    
  41563c:	inc    edx
  41563d:	xor    al,0xa8
  41563f:	adc    bl,cl
  415641:	pop    ebp
  415642:	jge    0xfd034318
  415648:	add    DWORD PTR [ebx],esi
  41564a:	mov    fs,WORD PTR [ebx+ecx*1]
  41564d:	jno    0x4155e8
  41564f:	pop    eax
  415650:	xchg   esp,eax
  415651:	out    0xb0,eax
  415653:	call   0xdea03972
  415658:	inc    edx
  415659:	ror    ch,1
  41565b:	sub    BYTE PTR [edx],ah
  41565d:	cli    
  41565e:	add    al,0x21
  415660:	add    eax,DWORD PTR ds:0xa4c9abd3
  415666:	lods   al,BYTE PTR ds:[esi]
  415667:	push   edi
  415668:	into   
  415669:	(bad)
  41566d:	or     ebp,0x5a
  415670:	pop    es
  415671:	outs   dx,DWORD PTR ds:[esi]
  415672:	repz sbb BYTE PTR [eax-0x284e9f7f],dl
  415679:	pop    ds
  41567a:	ins    BYTE PTR es:[edi],dx
  41567b:	dec    eax
  41567c:	mov    bh,0x48
  41567e:	push   ebx
  41567f:	inc    edi
  415680:	in     eax,0x24
  415682:	fdiv   QWORD PTR [ecx]
  415684:	and    bl,cl
  415686:	push   ss
  415687:	es push edi
  415689:	aam    0x1
  41568b:	mov    ds:0x370018ce,al
  415690:	dec    esp
  415691:	addps  xmm3,XMMWORD PTR [edx-0x2]
  415695:	std    
  415696:	push   ss
  415697:	(bad)  
  415698:	repnz pop ds
  41569a:	ret    
  41569b:	jmp    0xf5194f17
  4156a0:	out    0xb9,al
  4156a2:	add    BYTE PTR ds:0x5252193d,dl
  4156a8:	lods   al,BYTE PTR ds:[esi]
  4156a9:	sbb    al,0xf1
  4156ab:	push   esi
  4156ac:	test   al,0x54
  4156ae:	lock or ebp,0x21844df9
  4156b5:	mov    eax,ds:0x983c5c09
  4156ba:	mov    ds:0xc878ae7d,eax
  4156bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c0:	ret    0x0
	...
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0x49f71dd3
  415743:	cld    
  415744:	dec    edx
  415745:	jmp    0x415747
  415747:	add    ch,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [ebx-0x51a56ab7],al
  415751:	mov    WORD PTR [eax+edx*2],ss
  415754:	xchg   ebx,eax
  415755:	mov    dh,0x60
  415757:	aam    0x20
  415759:	lds    edi,FWORD PTR [eax+edx*4-0x26]
  41575d:	fs in  eax,dx
  41575f:	addr16 fcomi st,st(3)
  415762:	fs out dx,al
  415764:	sub    edx,esp
  415766:	loope  0x415704
  415768:	sub    BYTE PTR [esp+ebx*8-0x66],ch
  41576c:	push   esp
  41576d:	or     edi,DWORD PTR [ebp+0x52]
  415770:	fld    st(2)
  415772:	dec    ebp
  415773:	cli    
  415774:	pop    esi
  415775:	ja     0x4157f4
  415777:	test   BYTE PTR [edx],dl
  415779:	cwde   
  41577a:	xlat   BYTE PTR ds:[ebx]
  41577b:	adc    al,0xde
  41577d:	mov    ah,0xa
  41577f:	scas   eax,DWORD PTR es:[edi]
  415780:	(bad)  
  415781:	test   BYTE PTR [ebp-0x1c5b2499],0x30
  415788:	lahf   
  415789:	fstp   TBYTE PTR [ebx+0x72]
  41578c:	jnp    0x41577e
  41578e:	inc    ebp
  41578f:	xor    BYTE PTR [eax+0x5f],dl
  415792:	inc    esi
  415793:	push   ecx
  415794:	xchg   BYTE PTR [esp+eax*8],bh
  415797:	lods   al,BYTE PTR ds:[esi]
  415798:	mov    ah,0x4e
  41579a:	or     al,0xe
  41579c:	mov    esi,0xaa939121
  4157a1:	in     al,0x17
  4157a3:	xchg   esp,eax
  4157a4:	inc    edx
  4157a5:	sbb    eax,0x69151bd1
  4157aa:	arpl   cx,ax
  4157ac:	dec    edx
  4157ad:	push   ebx
  4157ae:	jne    0x41576c
  4157b0:	jg     0x4157f2
  4157b2:	aas    
  4157b3:	sub    eax,0xb4b8d885
  4157b8:	pop    eax
  4157b9:	(bad)  
  4157ba:	call   0xa4c1f348
  4157bf:	adc    DWORD PTR [ebx],0x49
  4157c2:	aam    0x98
  4157c4:	int    0x6b
  4157c6:	sbb    bl,BYTE PTR [ecx+0x6f59db25]
  4157cc:	test   eax,0xb8b112b4
  4157d1:	push   eax
  4157d2:	shr    BYTE PTR [eax+0x7565e915],cl
  4157d8:	xchg   ebp,eax
  4157d9:	jl     0x41576b
  4157db:	pushf  
  4157dc:	lahf   
  4157dd:	xchg   edx,eax
  4157de:	imul   ecx,DWORD PTR [edx-0x9],0xbd7bf3ca
  4157e5:	mov    ah,0x5f
  4157e7:	xchg   ebp,eax
  4157e8:	cmc    
  4157e9:	adc    ebp,0x36
  4157ec:	mov    DWORD PTR [ecx-0x2d5bcdfa],ebx
  4157f2:	adc    BYTE PTR [eax-0x17],dh
  4157f5:	mov    ds:0x4962e22c,eax
  4157fa:	in     al,dx
  4157fb:	or     DWORD PTR [ecx],ebp
  4157fd:	jecxz  0x415791
  4157ff:	(bad)  
  415800:	cmp    eax,0x369dffce
  415805:	xor    ah,bh
  415807:	mov    eax,ds:0x850f5d02
  41580c:	mov    bl,0x70
  41580e:	std    
  41580f:	inc    ebp
  415810:	jmp    0x6454:0xf4bd256f
  415817:	xchg   DWORD PTR [edi],ebx
  415819:	int3   
  41581a:	mov    ah,0x67
  41581c:	xchg   ecx,eax
  41581d:	sub    eax,0xbe17abcf
  415822:	out    dx,al
  415823:	lods   eax,DWORD PTR ds:[esi]
  415824:	mov    fs,WORD PTR [esi-0x70]
  415827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415828:	lods   al,BYTE PTR ds:[esi]
  415829:	inc    ebp
  41582a:	mov    WORD PTR ds:[ebx+edi*8-0x45578f9c],?
  415832:	imul   ecx,DWORD PTR [eax-0x7137220f],0xffffffc6
  415839:	or     al,0x27
  41583b:	ret    0x98a3
  41583e:	mov    ah,0xd6
  415840:	test   BYTE PTR [eax],al
	...
  4158b2:	add    BYTE PTR [eax],al
  4158b4:	or     edi,DWORD PTR [esi-0x2e]
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0xe042c2fe
  4158c3:	xchg   edi,eax
  4158c4:	aas    
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    BYTE PTR [eax+0x3541cdc9],ch
  4158d1:	pop    esi
  4158d2:	loop   0x415919
  4158d4:	adc    al,0x33
  4158d6:	shl    DWORD PTR [edi-0x7a],0xf
  4158da:	js     0x415899
  4158dc:	jp     0x4158b7
  4158de:	or     ebp,DWORD PTR [edx]
  4158e0:	push   0x61a10c37
  4158e5:	adc    BYTE PTR [ebx],bh
  4158e7:	popa   
  4158e8:	cld    
  4158e9:	cmp    esi,DWORD PTR [edi+0x63478fdf]
  4158ef:	xor    eax,0xab1db2ba
  4158f4:	fidivr WORD PTR [edx]
  4158f6:	(bad)
  4158f9:	inc    esp
  4158fa:	dec    edi
  4158fb:	xchg   BYTE PTR [ecx-0x5ed3ea13],ah
  415901:	dec    ecx
  415902:	sti    
  415903:	jns    0x4158bc
  415905:	mov    ebp,DWORD PTR [edx]
  415907:	cdq    
  415908:	push   es
  415909:	sub    eax,0xf9f72708
  41590e:	mov    ds:0xdafcb6ac,al
  415913:	clc    
  415914:	pop    edx
  415915:	call   0x67bbf586
  41591a:	out    dx,eax
  41591b:	adc    DWORD PTR [ebx+0xf62a132],ebp
  415921:	stos   DWORD PTR es:[edi],eax
  415922:	(bad)  
  415923:	push   edi
  415924:	inc    esp
  415925:	dec    esp
  415926:	loop   0x415957
  415928:	pop    ds
  415929:	xchg   DWORD PTR [ecx-0x6d],eax
  41592c:	mov    ebp,0x3a1a60e6
  415931:	daa    
  415932:	out    dx,eax
  415933:	mov    DWORD PTR [ebx],ebp
  415935:	lds    ebp,FWORD PTR [eax+0x3f]
  415938:	ins    BYTE PTR es:[edi],dx
  415939:	(bad)  
  41593a:	std    
  41593b:	add    bl,BYTE PTR [ebx]
  41593d:	rcl    DWORD PTR [ecx],cl
  41593f:	and    dl,BYTE PTR [ecx]
  415941:	gs pop esp
  415943:	call   0x51116068
  415948:	test   eax,0x62993aa5
  41594d:	mov    BYTE PTR [ebx-0x3f1f3a67],dh
  415953:	jg     0x415904
  415955:	out    dx,eax
  415956:	push   es
  415957:	jl     0x415990
  415959:	xchg   BYTE PTR [edx-0x4abb311e],bl
  41595f:	add    al,0xbf
  415961:	enter  0x54d6,0x9c
  415965:	or     DWORD PTR [edx],0x6
  415968:	jb     0x4158f8
  41596a:	dec    ebx
  41596b:	out    dx,eax
  41596c:	xor    al,0xd6
  41596e:	inc    ebx
  41596f:	test   eax,0xc9a0e079
  415974:	out    0x48,eax
  415976:	xor    esp,DWORD PTR [eax]
  415978:	push   esp
  415979:	sub    al,BYTE PTR [edx+ebx*4+0x61]
  41597d:	mov    cl,0xd5
  41597f:	pop    ds
  415980:	(bad)  
  415981:	rcl    BYTE PTR [ebx],cl
  415983:	mov    cl,0x67
  415985:	push   ss
  415986:	or     al,0x92
  415988:	je     0x415940
  41598a:	mov    DWORD PTR [esi-0x462afd58],edx
  415990:	adc    ch,BYTE PTR [ecx]
  415992:	aad    0x24
  415994:	jae    0x41599a
  415996:	jl     0x4159b8
  415998:	xor    edi,ebp
  41599a:	out    0x9c,eax
  41599c:	xlat   BYTE PTR ds:[ebx]
  41599d:	fld    QWORD PTR [ecx]
  41599f:	out    dx,al
  4159a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159a1:	test   BYTE PTR ds:[ecx+0x4dfd464f],ah
  4159a8:	and    eax,0x33afc1ba
  4159ad:	pop    ds
  4159ae:	inc    esp
  4159af:	test   esi,ebp
  4159b1:	je     0x415978
  4159b3:	sahf   
  4159b4:	xor    esp,ecx
  4159b6:	outs   dx,BYTE PTR ds:[esi]
  4159b7:	pushf  
  4159b8:	mov    ds:0xf2740dbf,al
  4159bd:	cmp    eax,DWORD PTR [eax-0x5a]
  4159c0:	add    eax,0x0
	...
  415a31:	add    BYTE PTR [eax],al
  415a33:	add    BYTE PTR [edi+0x7e363ed9],bl
  415a39:	neg    DWORD PTR [edi+0x4f7241f9]
  415a3f:	lahf   
  415a40:	pop    ebx
  415a41:	repz daa 
  415a43:	cwde   
  415a44:	xor    al,0xed
  415a46:	add    BYTE PTR [eax],al
  415a48:	cmc    
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [ecx-0x64],ah
  415a4e:	pop    eax
  415a4f:	repz fmul QWORD PTR [ebp-0x64]
  415a53:	push   eax
  415a54:	jo     0x415a83
  415a56:	mov    ah,0xfc
  415a58:	test   al,0xff
  415a5a:	sbb    bh,ah
  415a5c:	xor    bl,0xf8
  415a5f:	repnz mov dl,0xa9
  415a62:	inc    ecx
  415a63:	dec    ebx
  415a64:	inc    eax
  415a65:	inc    eax
  415a66:	and    dl,BYTE PTR [ebp+0xd5f076e]
  415a6c:	cmp    DWORD PTR [ebx-0x39eaa278],esi
  415a72:	push   es
  415a73:	xchg   BYTE PTR [eax-0xe],ah
  415a76:	test   al,0xf3
  415a78:	int3   
  415a79:	dec    esi
  415a7a:	leave  
  415a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7c:	clc    
  415a7d:	leave  
  415a7e:	add    esi,ebp
  415a80:	cdq    
  415a81:	dec    edx
  415a82:	and    esp,ebp
  415a84:	xchg   esp,eax
  415a85:	and    eax,0x490543d3
  415a8a:	jo     0x415a88
  415a8c:	shr    DWORD PTR [edx-0x2b019b35],0xa9
  415a93:	mov    edx,eax
  415a95:	sar    DWORD PTR ds:0xfde4580,1
  415a9b:	cmp    BYTE PTR [esi-0x44],ch
  415a9e:	pusha  
  415a9f:	and    DWORD PTR [esi],edx
  415aa1:	mov    ebp,0x5ae90ea3
  415aa6:	sub    bl,BYTE PTR [eax-0x3023c714]
  415aac:	push   edx
  415aad:	push   0xffffffc8
  415aaf:	loopne 0x415b06
  415ab1:	dec    edi
  415ab2:	dec    esi
  415ab3:	adc    al,0xbf
  415ab5:	aaa    
  415ab6:	mov    dl,BYTE PTR [esi]
  415ab8:	into   
  415ab9:	ror    BYTE PTR [esp+edi*2],1
  415abc:	and    bh,al
  415abe:	xor    DWORD PTR [edi+0x6916824c],0x45ac5e0c
  415ac8:	add    ebx,DWORD PTR [eax+ecx*4]
  415acb:	(bad)  
  415acc:	jmp    0x8816235b
  415ad1:	out    0xce,al
  415ad3:	cmp    DWORD PTR [esi+0xcf27076],ebx
  415ad9:	sub    al,0xa9
  415adb:	mov    ds:0x535225db,eax
  415ae0:	retf   
  415ae1:	sbb    al,0xdc
  415ae3:	dec    esi
  415ae4:	mov    ch,bh
  415ae6:	and    edx,DWORD PTR [esp+ebp*4-0x3c]
  415aea:	iret   
  415aeb:	xlat   BYTE PTR ds:[ebx]
  415aec:	test   eax,0x5b5a7b6f
  415af1:	mov    ebx,0x574b615a
  415af6:	mov    esi,0xbcfe461f
  415afb:	sti    
  415afc:	and    DWORD PTR [edx-0x1d],ebx
  415aff:	rcl    BYTE PTR [eax],1
  415b01:	push   eax
  415b02:	mov    ah,0xc3
  415b04:	inc    edi
  415b05:	call   0x9fa7583
  415b0a:	sub    cl,ah
  415b0c:	enter  0x7c02,0x5a
  415b10:	sub    bh,BYTE PTR [ecx-0xb]
  415b13:	sahf   
  415b14:	clc    
  415b15:	and    eax,DWORD PTR [eax+0x72]
  415b18:	std    
  415b19:	xchg   ebp,eax
  415b1a:	pop    es
  415b1b:	jne    0x415b6b
  415b1d:	sub    BYTE PTR [eax-0x1bce32e3],ch
  415b23:	(bad)  
  415b24:	popf   
  415b25:	mov    eax,ds:0x61381bd3
  415b2a:	jno    0x415b10
  415b2c:	pop    esp
  415b2d:	push   ss
  415b2e:	xchg   esi,eax
  415b2f:	or     esp,DWORD PTR [ecx-0x2]
  415b32:	repz mov dl,0xa5
  415b35:	mov    ah,0xfb
  415b37:	mov    eax,0xfac0a5d2
  415b3c:	mov    ah,0xf1
  415b3e:	sar    BYTE PTR [edi+edx*4],1
	...
  415bb1:	add    BYTE PTR [eax],al
  415bb3:	add    BYTE PTR [esp+eiz*2],dh
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	pop    edx
  415bc1:	pop    eax
  415bc2:	xlat   BYTE PTR ds:[ebx]
  415bc3:	cmp    BYTE PTR [ecx],ch
  415bc5:	out    dx,al
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [ebp+0x1f],ch
  415bce:	push   0x1a
  415bd0:	xor    ch,BYTE PTR [edi]
  415bd2:	or     eax,0xec537ff4
  415bd7:	mov    esp,DWORD PTR [edx+0xa32431d]
  415bdd:	test   al,0xfc
  415bdf:	sbb    BYTE PTR [ebp+0x34068bbc],dl
  415be5:	stos   DWORD PTR es:[edi],eax
  415be6:	inc    edi
  415be7:	sub    al,0xd4
  415be9:	inc    DWORD PTR [edi+0x48]
  415bec:	and    DWORD PTR [esi+0x15],0xd4374c10
  415bf3:	ret    
  415bf4:	ret    
  415bf5:	pop    eax
  415bf6:	jmp    0xadd7:0x5cfbd9a1
  415bfd:	dec    ecx
  415bfe:	cli    
  415bff:	sbb    DWORD PTR ds:0x9156844a,0x26a2e6a5
  415c09:	int3   
  415c0a:	fwait
  415c0b:	popf   
  415c0c:	cli    
  415c0d:	fstp   DWORD PTR ds:0x1739facb
  415c13:	and    DWORD PTR [ebp-0x319e8fa1],eax
  415c19:	(bad)  
  415c1a:	test   eax,0x33021b33
  415c1f:	hlt    
  415c20:	jmp    0x53af:0x54a00f12
  415c27:	icebp  
  415c28:	sub    esp,edi
  415c2a:	popa   
  415c2b:	lock push edx
  415c2d:	cs mov dl,0x68
  415c30:	xor    eax,0x5069e9e4
  415c35:	fadd   DWORD PTR [esi+0x63b7307f]
  415c3b:	andps  xmm2,XMMWORD PTR [edi+0x50b158aa]
  415c42:	jmp    0x6ff2794c
  415c47:	or     ch,ch
  415c49:	aas    
  415c4a:	sub    esi,DWORD PTR [esi]
  415c4c:	stos   BYTE PTR es:[edi],al
  415c4d:	sbb    esp,DWORD PTR [eax+0x1c3cbfe8]
  415c53:	pop    esp
  415c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c55:	in     eax,0x99
  415c57:	push   eax
  415c58:	mov    ds:0x7159869,eax
  415c5d:	add    sp,WORD PTR [eax+0x723b9b08]
  415c64:	inc    ecx
  415c65:	stc    
  415c66:	test   al,0x3
  415c68:	inc    esp
  415c69:	add    eax,0xfd4bc506
  415c6e:	xor    eax,0xe59317cb
  415c73:	or     esi,DWORD PTR [edx]
  415c75:	ja     0x415c0a
  415c77:	sbb    al,0x97
  415c79:	sub    BYTE PTR [ecx+ebx*2],ah
  415c7c:	xchg   ebp,eax
  415c7e:	imul   edi,DWORD PTR [eax],0x71
  415c81:	or     al,0xa1
  415c83:	test   al,0xd4
  415c85:	mov    ebx,0x4d736e60
  415c8a:	(bad)  
  415c8b:	mov    edi,0x29bece6
  415c90:	scas   al,BYTE PTR es:[edi]
  415c91:	ret    
  415c92:	inc    eax
  415c93:	xchg   ebx,eax
  415c94:	xchg   DWORD PTR [eax-0x10],edi
  415c97:	sub    bl,cl
  415c99:	in     eax,dx
  415c9a:	jle    0x415cc6
  415c9c:	retf   0x6e3f
  415c9f:	pop    esp
  415ca0:	fwait
  415ca1:	push   cs
  415ca2:	and    BYTE PTR [edi+0x2a],bl
  415ca5:	jmp    0x826a3ec5
  415caa:	mov    eax,DWORD PTR [edx+0x4175d4d1]
  415cb0:	out    0x4d,al
  415cb2:	pop    esp
  415cb3:	push   ebp
  415cb4:	mov    ah,0x88
  415cb6:	add    esp,ebx
  415cb8:	push   ss
  415cb9:	pop    edi
  415cba:	add    bl,BYTE PTR [eax]
  415cbc:	dec    esp
  415cbd:	outs   dx,DWORD PTR ds:[esi]
  415cbe:	ret    
  415cbf:	cwde   
  415cc0:	mov    DWORD PTR [eax],eax
	...
  415d32:	add    BYTE PTR [eax],al
  415d34:	mov    bh,0x99
  415d36:	adc    dl,BYTE PTR [ecx-0x404864c2]
  415d3c:	pop    ebp
  415d3d:	jmp    0x6ad7:0xb6cbe72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [ecx-0xcd6afe9],dl
  415d51:	or     eax,0x728a84bc
  415d56:	jnp    0x415daa
  415d58:	pusha  
  415d59:	mov    esp,0xb28f058
  415d5e:	std    
  415d5f:	xor    ebp,ebp
  415d61:	mov    dl,0x26
  415d63:	xor    bh,bh
  415d65:	jno    0x415ce8
  415d67:	outs   dx,DWORD PTR ds:[esi]
  415d68:	inc    esp
  415d69:	sub    bl,BYTE PTR gs:[edx]
  415d6c:	sub    ch,BYTE PTR [esi-0x1ab9235a]
  415d72:	test   eax,0x72f62653
  415d77:	and    DWORD PTR [ecx-0x712668c2],esi
  415d7d:	jo     0x415de0
  415d7f:	mov    ch,0x3c
  415d81:	jae    0x415d04
  415d83:	std    
  415d84:	es ret 
  415d86:	call   0xf31b:0x6cf1766f
  415d8d:	leave  
  415d8e:	sahf   
  415d8f:	dec    edi
  415d90:	inc    ecx
  415d91:	mov    ah,0x1c
  415d93:	das    
  415d94:	clc    
  415d95:	jge    0x415df0
  415d97:	or     DWORD PTR [esp+ecx*8-0x735262d8],ebx
  415d9e:	dec    dx
  415da0:	sub    al,BYTE PTR [edx+0x70b3c33a]
  415da6:	mov    cs,ecx
  415da8:	fimul  WORD PTR [ecx]
  415daa:	jnp    0x415d2c
  415dac:	inc    eax
  415dad:	sub    eax,0x590e5abb
  415db2:	(bad)  
  415db3:	mov    dh,0x8e
  415db5:	inc    esi
  415db6:	sti    
  415db7:	cmp    eax,0xdae83ae3
  415dbc:	jno    0x415d42
  415dbe:	dec    ebx
  415dbf:	retf   
  415dc0:	inc    ebx
  415dc1:	add    DWORD PTR [ebp+0x337f7ab1],ebp
  415dc7:	std    
  415dc8:	je     0x415e3f
  415dca:	mov    bh,0x43
  415dcc:	jmp    0x415d9d
  415dce:	xor    DWORD PTR [ecx+0x20],esp
  415dd1:	push   0xef311f34
  415dd6:	mov    BYTE PTR [ebp-0x2ac5dde],ch
  415ddc:	adc    ebp,DWORD PTR [ecx+0x7cdfcf09]
  415de2:	lock test eax,0xa2aa515d
  415de8:	aad    0x30
  415dea:	daa    
  415deb:	sbb    eax,0x4f53c2fd
  415df0:	mov    esi,0x9300ae54
  415df5:	jbe    0x415e01
  415df7:	xchg   ecx,eax
  415df8:	inc    ebx
  415df9:	or     esi,ebp
  415dfb:	out    dx,al
  415dfc:	hlt    
  415dfd:	outs   dx,BYTE PTR ds:[esi]
  415dfe:	cli    
  415dff:	jmp    0xdbc8:0x8e0673fe
  415e06:	mov    ebx,0x7925cdb7
  415e0b:	je     0x415e58
  415e0d:	and    ch,BYTE PTR [ebx+0x3f32df1c]
  415e13:	(bad)  
  415e14:	fld    QWORD PTR [esi-0x76]
  415e17:	dec    ecx
  415e18:	mov    edx,0x2d58daa
  415e1d:	push   eax
  415e1e:	retf   
  415e1f:	push   ss
  415e20:	not    DWORD PTR [edx]
  415e22:	pop    esi
  415e23:	sbb    DWORD PTR [ebp-0x297f0738],esp
  415e29:	cmp    al,0xd4
  415e2b:	fidiv  DWORD PTR [edx+0x453dac24]
  415e31:	jno    0x415dc3
  415e33:	loopne 0x415e82
  415e35:	and    eax,0x5542bb40
  415e3a:	pop    ebp
  415e3b:	jge    0x415eac
  415e3d:	pop    edi
  415e3e:	mov    ds:0x8393,al
	...
  415eb3:	add    BYTE PTR [edi],dh
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs aad 0xe
  415ec2:	das    
  415ec3:	cmp    edx,DWORD PTR [ebx]
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	cmc    
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	add    BYTE PTR [ecx-0x51],al
  415ece:	(bad)  
  415ecf:	lea    eax,ds:0x1da9406e
  415ed5:	test   BYTE PTR ds:0xb63351fa,0x2c
  415edc:	(bad)  
  415edd:	mov    dl,0x86
  415edf:	aas    
  415ee0:	fxtract 
  415ee2:	ja     0x415e98
  415ee4:	out    dx,eax
  415ee5:	rcr    DWORD PTR [ebx],cl
  415ee7:	sub    ebx,esp
  415ee9:	xchg   edi,eax
  415eea:	jle    0x415f4f
  415eec:	ss pop esp
  415eee:	arpl   WORD PTR [edi-0x72],bx
  415ef1:	add    DWORD PTR [edx+0x392d6bd4],ebp
  415ef7:	cmp    cl,BYTE PTR [edi+eax*4+0x31]
  415efb:	cld    
  415efc:	jmp    0x415ebb
  415efe:	fidiv  DWORD PTR [edx+0x3c05fdb6]
  415f04:	js     0x415f4e
  415f06:	dec    edx
  415f07:	push   eax
  415f08:	mov    dh,0x9d
  415f0a:	enter  0x1eb8,0xd3
  415f0e:	out    0xd7,eax
  415f10:	pop    esp
  415f11:	ins    DWORD PTR es:[edi],dx
  415f12:	test   DWORD PTR [edx],ebx
  415f14:	out    0x75,eax
  415f16:	or     al,BYTE PTR [edx]
  415f18:	dec    esp
  415f19:	in     al,0x49
  415f1b:	je     0x415f62
  415f1d:	pop    ebx
  415f1e:	lock adc ecx,DWORD PTR [ebx]
  415f21:	ficom  WORD PTR [edx]
  415f23:	xchg   DWORD PTR [eax],ebx
  415f25:	retf   
  415f26:	in     al,0xb4
  415f28:	inc    esi
  415f29:	and    BYTE PTR [edi-0x5bd1e3ab],al
  415f2f:	(bad)  
  415f30:	fst    QWORD PTR [ecx+0x1]
  415f33:	jno    0x415f17
  415f35:	nop
  415f36:	dec    esp
  415f37:	adc    eax,DWORD PTR [ebx-0x2a5dd9e2]
  415f3d:	stc    
  415f3e:	jnp    0x415fb1
  415f40:	pop    esp
  415f41:	dec    esp
  415f42:	sbb    BYTE PTR [si],bh
  415f45:	test   DWORD PTR [ebp+0x15d1b34a],0xf8f971c
  415f4f:	test   al,0x4d
  415f51:	xlat   BYTE PTR ds:[ebx]
  415f52:	xchg   esp,eax
  415f53:	cmp    DWORD PTR [esp+edx*8-0xeda1a6e],ebx
  415f5a:	mov    DWORD PTR [eax+ecx*2-0x2bde4c1b],ecx
  415f61:	or     dl,BYTE PTR fs:[edx+0x2771c558]
  415f68:	ss adc BYTE PTR cs:[edi-0x37],0x41
  415f6e:	adc    ebx,DWORD PTR [esi]
  415f70:	push   ebx
  415f71:	popf   
  415f72:	jo     0x415f41
  415f74:	addr16 leave 
  415f76:	repnz push edi
  415f78:	or     ebp,esp
  415f7a:	dec    ebx
  415f7b:	xor    BYTE PTR [ebp-0x771ec922],dh
  415f81:	retf   0xc25e
  415f84:	ret    
  415f85:	push   eax
  415f86:	pop    ebx
  415f87:	daa    
  415f88:	cmp    DWORD PTR ds:0xfa032504,0xffffffd9
  415f8f:	bound  esi,QWORD PTR [eax+0x39]
  415f92:	xchg   ebp,eax
  415f93:	xchg   ebp,eax
  415f94:	cdq    
  415f95:	stos   BYTE PTR es:[edi],al
  415f96:	icebp  
  415f97:	push   ebx
  415f98:	add    eax,edi
  415f9a:	(bad)  
  415f9b:	dec    esp
  415f9c:	xchg   esp,eax
  415f9d:	push   eax
  415f9e:	mov    edi,0xbbbdaabe
  415fa3:	ins    BYTE PTR es:[edi],dx
  415fa4:	cwde   
  415fa5:	cmp    DWORD PTR [esi+eax*8-0x386fe4e1],edx
  415fac:	sub    DWORD PTR [ecx+0x2ec82f4f],0x5f
  415fb3:	popf   
  415fb4:	test   al,0xcc
  415fb6:	add    BYTE PTR ds:0xac7def13,al
  415fbc:	inc    esp
  415fbd:	pop    esp
  415fbe:	sti    
  415fbf:	inc    esi
  415fc0:	push   edi
	...
  416031:	add    BYTE PTR [eax],al
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   ebx,DWORD PTR [esi+0x8f40e8b],0xfffffff1
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    BYTE PTR [edi-0x6e],al
  41604e:	int3   
  41604f:	push   0xffffffce
  416051:	std    
  416052:	push   ds
  416053:	sbb    ch,dl
  416055:	pop    edx
  416056:	fld    DWORD PTR [ecx-0x38]
  416059:	loopne 0x416066
  41605b:	fidivr WORD PTR [edx]
  41605d:	xchg   ebx,eax
  41605e:	inc    ebx
  41605f:	test   eax,0xf970ead9
  416064:	imul   ebx,DWORD PTR [edx],0x5b
  416067:	or     eax,0x47fdc2d0
  41606c:	or     BYTE PTR [edx+0x62fea2f4],dl
  416072:	sbb    DWORD PTR [eax+0x32],edx
  416075:	shl    ah,0x9e
  416078:	inc    eax
  416079:	inc    ebx
  41607a:	sub    eax,0x675c3d84
  41607f:	imul   eax,ebp,0xec9e36c4
  416085:	aad    0xf2
  416087:	pop    es
  416088:	(bad)  
  416089:	fisubr WORD PTR [ecx+ecx*2-0x2a0a14e1]
  416090:	mov    ebp,DWORD PTR [edx+ecx*4+0x7d]
  416094:	mov    ecx,0x9d1e1396
  416099:	cmp    BYTE PTR [ebp-0x9],0x4a
  41609d:	shl    DWORD PTR [ebx],0x62
  4160a0:	cld    
  4160a1:	std    
  4160a2:	rcl    BYTE PTR [ecx],0x7d
  4160a5:	or     ebp,DWORD PTR [esi+ecx*1+0x2a]
  4160a9:	aaa    
  4160aa:	mov    esp,0x5ca43de
  4160af:	and    eax,DWORD PTR fs:[edi+ebx*2+0x23220f62]
  4160b7:	mov    eax,0x910ae568
  4160bc:	and    BYTE PTR [ebx+0x50],dh
  4160bf:	call   0xcfd9:0x112772e7
  4160c6:	lahf   
  4160c7:	xor    al,0x45
  4160c9:	push   eax
  4160ca:	vpaddq xmm0,xmm4,xmm2
  4160cf:	rcr    DWORD PTR [edx],0xe7
  4160d2:	stos   BYTE PTR es:[edi],al
  4160d3:	jecxz  0x416078
  4160d5:	or     DWORD PTR [edi-0x4a],eax
  4160d8:	sbb    BYTE PTR [ebx],dh
  4160da:	mov    esp,0x79f75682
  4160df:	jge    0x4160d5
  4160e1:	cli    
  4160e2:	adc    DWORD PTR [ebx-0x5a],ecx
  4160e5:	sbb    al,0x33
  4160e7:	xchg   ebp,eax
  4160e8:	mov    DWORD PTR [edx],ebp
  4160ea:	sub    cl,BYTE PTR [edi]
  4160ec:	cmp    BYTE PTR [eax+ebp*4],bh
  4160ef:	mov    bl,0x39
  4160f1:	mov    al,0xe0
  4160f3:	push   0x76
  4160f5:	mov    edi,0xbf60667d
  4160fa:	push   0xf7398067
  4160ff:	push   0x57
  416101:	mov    ds:0x79f74a0f,al
  416106:	daa    
  416107:	pusha  
  416108:	call   DWORD PTR [eax-0x5cb8c625]
  41610e:	mov    bl,0x23
  416110:	or     eax,DWORD PTR [edi]
  416112:	add    al,BYTE PTR [esi-0x1f64d680]
  416118:	out    0xb1,eax
  41611a:	inc    esi
  41611b:	icebp  
  41611c:	xchg   esp,eax
  41611d:	and    al,0x26
  41611f:	bound  ecx,QWORD PTR [esi]
  416121:	inc    ebp
  416122:	xlat   BYTE PTR ds:[ebx]
  416123:	mov    esp,0x3ea0e562
  416128:	push   0x61c45b56
  41612d:	popf   
  41612e:	adc    BYTE PTR [ebx],cl
  416130:	and    edi,DWORD PTR [ebx+0x4c60e82f]
  416136:	mov    edi,0x6b41320d
  41613b:	cmp    al,0xf8
  41613d:	scas   eax,DWORD PTR es:[edi]
  41613e:	adc    eax,0x4332
	...
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    eax,esi
  4161c1:	cld    
  4161c2:	push   0xffffffbd
  4161c4:	std    
  4161c5:	icebp  
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	cmc    
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    bh,ah
  4161cd:	push   edx
  4161ce:	mov    ah,0x15
  4161d0:	and    edx,DWORD PTR ds:0x761fb04b
  4161d6:	das    
  4161d7:	or     al,0x1a
  4161d9:	(bad)  
  4161da:	mov    esi,0x9cfa1b24
  4161df:	dec    ebp
  4161e0:	daa    
  4161e1:	sahf   
  4161e2:	loopne 0x4161c9
  4161e4:	push   esp
  4161e5:	fimul  WORD PTR [edi-0x28]
  4161e8:	ret    0xf7f0
  4161eb:	retf   0xfd32
  4161ee:	adc    cl,BYTE PTR [esi-0x72]
  4161f1:	mov    cl,dl
  4161f3:	dec    edx
  4161f4:	jecxz  0x4161b3
  4161f6:	call   0xc859:0x779a07bf
  4161fd:	in     al,dx
  4161fe:	in     al,dx
  4161ff:	cmp    BYTE PTR ds:[edx+0x4a],ah
  416203:	rol    BYTE PTR [ecx-0x3c3eac4],0xcc
  41620a:	test   BYTE PTR [ebx+0x69],0x55
  41620e:	in     eax,0xce
  416210:	jae    0x4161f7
  416212:	mov    ebx,0xc42b097b
  416217:	mov    ds:0x3924180a,eax
  41621c:	mov    al,BYTE PTR [esi+0x5f]
  41621f:	xchg   ecx,eax
  416220:	push   esp
  416221:	pop    esp
  416222:	add    eax,0x22ce7958
  416227:	in     al,dx
  416228:	add    dh,BYTE PTR [edx+0x77]
  41622b:	fild   WORD PTR [ebp-0x23fec34e]
  416231:	and    DWORD PTR [esp+ebx*8+0x3a],ecx
  416235:	ins    BYTE PTR es:[edi],dx
  416236:	es scas eax,DWORD PTR es:[edi]
  416238:	mov    bl,0xa0
  41623a:	mov    eax,ds:0x2b63a362
  41623f:	je     0x4161f4
  416241:	js     0x4161f3
  416243:	push   cs
  416244:	jmp    0xbe88d972
  416249:	jo     0x416210
  41624b:	das    
  41624c:	scas   eax,DWORD PTR es:[edi]
  41624d:	mov    ebx,fs
  41624f:	dec    edx
  416250:	mov    edx,0x25096f0e
  416255:	js     0x41626b
  416257:	into   
  416258:	in     al,dx
  416259:	push   0x8333fe3
  41625e:	shl    dh,1
  416260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416261:	jno    0x416208
  416263:	xchg   BYTE PTR [esi-0x63a383e8],bh
  416269:	jnp    0x416283
  41626b:	jl     0x4161f3
  41626d:	aaa    
  41626e:	(bad)  
  41626f:	dec    edx
  416270:	jge    0x416279
  416272:	std    
  416273:	mov    ch,0x93
  416275:	cmp    al,0x40
  416277:	fmul   st(1),st
  416279:	push   ecx
  41627a:	push   edi
  41627b:	add    ebp,ebx
  41627d:	daa    
  41627e:	mov    cl,0x28
  416280:	test   al,0xf7
  416282:	xchg   ebp,eax
  416283:	push   0xe5acb1c
  416288:	mov    ds:0x369745a0,al
  41628d:	xchg   BYTE PTR [esp+ecx*1],al
  416290:	ins    BYTE PTR es:[edi],dx
  416291:	rcr    DWORD PTR [edx+ecx*1],0x7d
  416295:	xchg   ebx,eax
  416296:	mov    esi,0x58bfef61
  41629b:	jne    0x416318
  41629d:	xchg   ebp,eax
  41629e:	adc    al,0x4d
  4162a0:	ss push ds
  4162a2:	test   DWORD PTR [ebp-0x31],esp
  4162a5:	in     eax,dx
  4162a6:	xchg   esp,eax
  4162a7:	add    DWORD PTR [edi],esi
  4162a9:	ss dec esp
  4162ab:	and    DWORD PTR [eax+0x5e],edx
  4162ae:	jnp    0x416257
  4162b0:	xor    al,0x78
  4162b2:	in     al,dx
  4162b3:	or     al,0x26
  4162b5:	rcl    DWORD PTR [ebx-0x26498101],cl
  4162bb:	inc    eax
  4162bc:	sbb    dh,BYTE PTR [ebx+ebp*8-0xa]
  4162c0:	ret    0x0
	...
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fstp   QWORD PTR [esp+edx*8-0xd0d68c3]
  416346:	add    BYTE PTR [eax],al
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    BYTE PTR [ebx],bl
  41634d:	out    0xf5,eax
  41634f:	and    al,0xb6
  416351:	push   esp
  416352:	mov    al,ds:0xec81f8f0
  416357:	lock fs inc ebx
  41635a:	sbb    ecx,eax
  41635c:	mov    eax,esi
  41635e:	inc    eax
  41635f:	mov    edi,0xc1f43085
  416364:	xchg   edx,eax
  416365:	loop   0x416354
  416367:	pop    esi
  416368:	xor    bl,BYTE PTR [esi+eiz*4-0x564e6e50]
  41636f:	sub    al,0x64
  416371:	call   0xf264:0xaa73f86f
  416378:	test   al,0xd9
  41637a:	rcl    DWORD PTR [eax],0x35
  41637d:	fnsave [ecx]
  41637f:	or     edx,esp
  416381:	fwait
  416382:	dec    ebp
  416383:	dec    esi
  416384:	out    dx,al
  416385:	xlat   BYTE PTR ds:[ebx]
  416386:	cwde   
  416387:	shl    DWORD PTR [eax+0x4b1e09b2],0x2a
  41638e:	mov    eax,0x758c3dec
  416393:	imul   esi,DWORD PTR [edx+0x5cf4a1b],0x23e300bd
  41639d:	jae    0x4163a4
  41639f:	pop    edx
  4163a0:	jp     0x4163c9
  4163a2:	sub    bh,BYTE PTR [edi]
  4163a4:	inc    edx
  4163a5:	push   esi
  4163a6:	(bad)  
  4163a7:	sbb    eax,0xd748cb91
  4163ac:	ja     0x416373
  4163ae:	push   ebp
  4163af:	fld    QWORD PTR [edi-0x1031f362]
  4163b5:	ss mov ch,0xe8
  4163b8:	mov    dh,0x5d
  4163ba:	mov    bh,0xfb
  4163bc:	iret   
  4163bd:	into   
  4163be:	scas   eax,DWORD PTR es:[edi]
  4163bf:	cli    
  4163c0:	jg     0x41636a
  4163c2:	inc    ebp
  4163c3:	shr    eax,0xe7
  4163c6:	xor    dh,dl
  4163c8:	inc    edx
  4163c9:	pop    ds
  4163ca:	jbe    0x4163b7
  4163cc:	(bad)  
  4163cd:	rcl    ebp,cl
  4163cf:	pop    edx
  4163d0:	or     BYTE PTR [ebx-0x71db192c],ah
  4163d6:	mov    dh,BYTE PTR [eax]
  4163d8:	int    0xd
  4163da:	mov    cr6,ebx
  4163dd:	repz fadd st(0),st
  4163e0:	adc    DWORD PTR [ebx+0x37],eax
  4163e3:	xor    eax,DWORD PTR [eax]
  4163e5:	arpl   WORD PTR [esi+0x54818820],si
  4163eb:	minps  xmm6,XMMWORD PTR [eax]
  4163ee:	mov    edx,0x972e6dd1
  4163f3:	xor    eax,DWORD PTR [eax+0x5bbcb478]
  4163f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163fa:	test   eax,0x3849c847
  4163ff:	fcom   QWORD PTR [ebp-0x62]
  416402:	mov    BYTE PTR [ecx-0x44],dl
  416405:	scas   al,BYTE PTR es:[edi]
  416406:	fdivr  QWORD PTR [ebp-0xb]
  416409:	bound  edi,QWORD PTR [ebx+0x208e0b9]
  41640f:	inc    esp
  416410:	add    eax,0x97efaeea
  416415:	sbb    BYTE PTR [ebx],bl
  416417:	sbb    eax,0xa16bc623
  41641c:	(bad)  
  41641d:	xchg   esi,eax
  41641e:	sar    DWORD PTR [ecx+0x738cb247],cl
  416424:	and    DWORD PTR [eax-0x42],esi
  416427:	nop
  416428:	sub    DWORD PTR [edx+0x4f188a92],ebx
  41642e:	ret    0x2c4a
  416431:	dec    edi
  416432:	icebp  
  416433:	jg     0x416466
  416435:	pop    eax
  416436:	mov    esi,0x7ee92b78
  41643b:	push   eax
  41643c:	xchg   esp,eax
  41643d:	in     al,dx
  41643e:	pop    ss
  41643f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416440:	inc    esp
	...
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	and    ebp,DWORD PTR [ecx-0xc1803f4]
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [esi-0x6ff966e9],cl
  4164d1:	push   cs
  4164d2:	ja     0xaa47f81a
  4164d8:	dec    esp
  4164d9:	mov    eax,0x6ac0cf2b
  4164de:	dec    ebx
  4164df:	lea    esp,[edi-0x49]
  4164e2:	retf   
  4164e3:	pusha  
  4164e4:	pop    esi
  4164e5:	scas   al,BYTE PTR es:[edi]
  4164e6:	dec    edx
  4164e7:	call   0xa989:0xa814b2f5
  4164ee:	or     eax,0xa33e7452
  4164f3:	out    dx,eax
  4164f4:	retf   
  4164f5:	fidiv  WORD PTR [eax-0x33605b8e]
  4164fb:	or     al,0x38
  4164fd:	push   0x6e
  4164ff:	lods   eax,DWORD PTR ds:[esi]
  416500:	mov    esi,0x51699e3f
  416505:	addr16 jp 0x4164c2
  416508:	jge    0x416524
  41650a:	call   0x1d1c:0x59a7e046
  416511:	pop    es
  416512:	test   DWORD PTR [esi],ecx
  416514:	cdq    
  416515:	rcl    BYTE PTR [edx+0x61bccb57],1
  41651b:	fbld   TBYTE PTR [edi-0xc]
  41651e:	inc    ecx
  41651f:	sar    cl,0xaa
  416522:	ret    
  416523:	mov    ebp,DWORD PTR [ebp-0x6cb47d5e]
  416529:	push   ds
  41652a:	jne    0x4164be
  41652c:	or     cl,al
  41652e:	das    
  41652f:	and    al,BYTE PTR [eax-0x64]
  416532:	mov    eax,ds:0x9cd7e80
  416537:	add    eax,0xa5bc24ad
  41653c:	and    eax,0x9531acd1
  416541:	addr16 retf 
  416543:	push   edx
  416544:	pop    edi
  416545:	loop   0x4164dd
  416547:	sub    al,0x65
  416549:	mov    eax,ds:0x122f9afc
  41654e:	cmp    bl,BYTE PTR [eax-0x5bc8e412]
  416554:	push   edx
  416555:	and    DWORD PTR [ebx],edx
  416557:	test   BYTE PTR [ecx+0x94da9a0],cl
  41655d:	lods   al,BYTE PTR ds:[esi]
  41655e:	ror    edi,1
  416560:	sbb    al,0xfb
  416562:	cld    
  416563:	mov    al,0xb
  416565:	les    edx,FWORD PTR [ebx+0x6]
  416568:	xchg   edx,eax
  416569:	pop    es
  41656a:	fs out 0x84,eax
  41656d:	jg     0x4165a2
  41656f:	push   cs
  416570:	mov    eax,DWORD PTR [edx]
  416572:	mov    ds:0x61e14565,eax
  416577:	push   0x6dc782cb
  41657c:	mov    ah,0x9b
  41657e:	and    al,0x29
  416580:	out    dx,al
  416581:	loop   0x41655c
  416583:	inc    edx
  416584:	shl    BYTE PTR [eax-0x6],0x20
  416588:	add    ah,BYTE PTR [esi+0x6e]
  41658b:	ins    BYTE PTR es:[edi],dx
  41658c:	ret    
  41658d:	mov    gs,WORD PTR [esi+0x3a]
  416590:	mov    DWORD PTR [edx+edi*1],eax
  416593:	jno    0x4165a3
  416595:	aad    0xe
  416597:	jg     0x416553
  416599:	call   0xca1f:0x5b13c160
  4165a0:	cmp    eax,esi
  4165a2:	rcr    BYTE PTR [esi+0x2f4a7047],cl
  4165a8:	clc    
  4165a9:	dec    ecx
  4165aa:	scas   eax,DWORD PTR es:[edi]
  4165ab:	stos   BYTE PTR es:[edi],al
  4165ac:	std    
  4165ad:	out    0x89,eax
  4165af:	dec    ebp
  4165b0:	pop    ecx
  4165b1:	jns    0x41659f
  4165b3:	push   esp
  4165b4:	in     al,dx
  4165b5:	add    eax,0xf71b20ac
  4165ba:	daa    
  4165bb:	lahf   
  4165bc:	mov    bl,0xe2
  4165be:	add    eax,DWORD PTR [edx+0x76]
	...
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	call   0xbafd:0x67ff45bc
  41663c:	retf   
  41663d:	sbb    ah,dh
  41663f:	aad    0x87
  416641:	sub    al,0x66
  416643:	mov    bh,0xdc
  416645:	hlt    
  416646:	add    BYTE PTR [eax],al
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [esi+0xbd78d4],bh
  416651:	icebp  
  416652:	in     eax,dx
  416653:	ret    
  416654:	or     al,0x2b
  416656:	mov    bl,0x8f
  416658:	and    al,0x80
  41665a:	xchg   esp,eax
  41665b:	mov    dl,0x78
  41665d:	xor    bl,dh
  41665f:	xchg   ebx,eax
  416660:	arpl   WORD PTR [edi],bx
  416662:	mov    bh,0x42
  416664:	push   ebx
  416665:	in     eax,dx
  416666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416667:	out    dx,al
  416668:	mov    al,ds:0x72a1203b
  41666d:	outs   dx,BYTE PTR ds:[esi]
  41666e:	cmp    BYTE PTR [edx],bl
  416670:	stos   BYTE PTR es:[edi],al
  416671:	inc    esi
  416672:	jp     0x4166bd
  416674:	cmp    al,ah
  416676:	or     eax,0x5ec2a44f
  41667b:	je     0x416611
  41667d:	call   0x7c90:0xfb5f6a8d
  416684:	xor    edi,ebp
  416686:	rol    BYTE PTR [ebx-0x77e6a5e8],cl
  41668c:	or     edi,ebp
  41668e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41668f:	sar    BYTE PTR [edx],cl
  416691:	cdq    
  416692:	popa   
  416693:	and    eax,0xf1a91890
  416698:	mov    bh,0xd6
  41669a:	mov    ?,WORD PTR fs:[edx+ebp*2-0x71f5ead3]
  4166a2:	mov    ds:0xaf6f0337,eax
  4166a7:	(bad)  
  4166a8:	neg    BYTE PTR [esi+edx*2-0x48]
  4166ac:	dec    esp
  4166ad:	add    BYTE PTR [ebp+0x6c44856f],ch
  4166b3:	fst    QWORD PTR [edx]
  4166b5:	mov    ds,ebx
  4166b7:	(bad)  
  4166b8:	out    0x4d,al
  4166ba:	dec    eax
  4166bb:	xor    al,0x33
  4166bd:	cmp    eax,0x9a2251b1
  4166c2:	or     al,0x1c
  4166c4:	xchg   esp,eax
  4166c5:	dec    esp
  4166c6:	(bad)  
  4166c7:	into   
  4166c8:	sub    al,0xf6
  4166ca:	or     al,0x37
  4166cc:	mov    ah,0x9c
  4166ce:	dec    ecx
  4166cf:	iret   
  4166d0:	mov    ebp,0xc18e37e1
  4166d5:	push   ss
  4166d6:	pop    eax
  4166d7:	mov    eax,es:0xf71570a3
  4166dd:	sahf   
  4166de:	imul   eax,DWORD PTR [edx-0x2dcf62a1],0xffffffbd
  4166e5:	add    esp,ecx
  4166e7:	ins    DWORD PTR es:[edi],dx
  4166e8:	arpl   si,dx
  4166ea:	jo     0x4166ca
  4166ec:	sbb    esp,0x671de7e2
  4166f2:	call   esp
  4166f4:	pop    edx
  4166f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166f6:	sbb    DWORD PTR [ecx],eax
  4166f8:	bound  ecx,QWORD PTR [ebx+ecx*2-0x1fea2d04]
  4166ff:	sar    BYTE PTR [edi],cl
  416701:	rcr    BYTE PTR [ebx],cl
  416703:	popf   
  416704:	cwde   
  416705:	mov    bh,0xc9
  416707:	fmul   DWORD PTR [eax]
  416709:	xchg   ch,ch
  41670b:	aad    0xc0
  41670d:	(bad)  
  41670e:	cmp    DWORD PTR [ebx-0x65],ebp
  416711:	sbb    al,0xe1
  416713:	sbb    BYTE PTR gs:[ecx+ebx*8+0x5c],dh
  416718:	mov    esi,0x4dc17dd3
  41671d:	mov    ebx,0x63d73d0
  416722:	jmp    0x416718
  416724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416725:	mov    ebx,0xfaa9dd41
  41672a:	mov    WORD PTR [ecx+0x14e3876a],cs
  416730:	scas   eax,DWORD PTR es:[edi]
  416731:	xchg   edx,eax
  416732:	mov    ch,0x2e
  416734:	inc    eax
  416735:	fs mov gs,ebx
  416738:	or     bl,BYTE PTR [ecx+0x7ce20404]
  41673e:	mov    esi,0x1aad
	...
  4167b3:	add    bl,cl
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm6,DWORD PTR [ebp-0x2eec13fb]
  4167c5:	cmc    
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	cmc    
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    al,dh
  4167cd:	mov    cl,0x48
  4167cf:	repnz (bad) 
  4167d1:	sar    DWORD PTR [ebx+0x71],1
  4167d4:	sbb    ah,BYTE PTR ds:0x43ec89f0
  4167da:	xchg   ebx,eax
  4167db:	mov    bh,0x49
  4167dd:	je     0x4167d7
  4167df:	pop    esi
  4167e0:	pop    ebp
  4167e1:	(bad)  
  4167e2:	push   esi
  4167e3:	cld    
  4167e4:	or     DWORD PTR [esi],eax
  4167e6:	mov    edi,DWORD PTR [eax-0x3248f1d5]
  4167ec:	or     cl,0xcb
  4167ef:	clc    
  4167f0:	adc    BYTE PTR ds:0xfaa1c47e,dl
  4167f6:	mov    ch,0xce
  4167f8:	adc    ecx,DWORD PTR ds:0xefbf8d1a
  4167fe:	pop    es
  4167ff:	cmp    ebx,edx
  416801:	sub    ecx,ebp
  416803:	enter  0x3e31,0xbe
  416807:	or     cl,dh
  416809:	add    ebx,ecx
  41680b:	out    0x12,eax
  41680d:	or     BYTE PTR [eax+0x8],dl
  416810:	stos   DWORD PTR es:[edi],eax
  416811:	adc    al,0xe6
  416813:	ret    
  416814:	xor    DWORD PTR [edx+0x4fabcd62],ecx
  41681a:	inc    edx
  41681b:	(bad)  
  41681c:	sar    cl,1
  41681e:	push   eax
  41681f:	fadd   st(7),st
  416821:	mov    al,ds:0xbc4d9bd
  416826:	inc    eax
  416827:	push   0xab21a97f
  41682c:	fiadd  WORD PTR [eax-0x68d295b7]
  416832:	xor    ecx,DWORD PTR [edx-0x6d4929c4]
  416838:	xor    bl,cl
  41683a:	mov    esi,0xeb278085
  41683f:	in     eax,dx
  416840:	retf   0x3a93
  416843:	ins    BYTE PTR es:[edi],dx
  416844:	mov    esi,edi
  416846:	mov    al,0xdb
  416848:	mov    cl,0x28
  41684a:	mov    ds:0x2d3c089b,eax
  41684f:	icebp  
  416850:	jns    0x416884
  416852:	(bad)  
  416853:	sti    
  416854:	imul   ebp,DWORD PTR [ebx+0x32],0xff874d47
  41685b:	rol    BYTE PTR [ebp+eax*8+0x7a],cl
  41685f:	jge    0x416839
  416861:	cmp    ah,dh
  416863:	sub    ch,al
  416865:	icebp  
  416866:	add    dl,BYTE PTR [edx-0x464edbcd]
  41686c:	or     eax,0xa6a67b6f
  416871:	imul   ebx,DWORD PTR [ebx],0x1cdb2e00
  416877:	neg    BYTE PTR [edx]
  416879:	dec    edi
  41687a:	outs   dx,BYTE PTR ds:[esi]
  41687b:	xor    ebp,ebx
  41687d:	test   al,0xd6
  41687f:	jmp    0xf823:0xf26c74aa
  416886:	in     al,0xda
  416888:	leave  
  416889:	int3   
  41688a:	jo     0x416873
  41688c:	mov    ebp,0x8214bf00
  416891:	sbb    eax,0xa302d88c
  416896:	xchg   esi,eax
  416897:	(bad)  
  416898:	imul   edi,DWORD PTR [edi+0x30c2be87],0x54
  41689f:	pop    edx
  4168a0:	or     DWORD PTR [edi+0x6c4a17da],edx
  4168a6:	mov    ah,0x66
  4168a8:	sub    ebp,0xffffffb0
  4168ab:	jbe    0x4168ed
  4168ad:	(bad)  
  4168ae:	sub    DWORD PTR [esi-0x242b6be],edi
  4168b4:	sti    
  4168b5:	adc    ebx,ecx
  4168b7:	push   edi
  4168b8:	sub    bl,BYTE PTR [ecx+0xc932e23]
  4168be:	cmp    bl,BYTE PTR [ebp+0xcf]
	...
  416934:	inc    ebp
  416935:	mov    BYTE PTR [edi+esi*2],ch
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [ebx],ebx
  416941:	scas   eax,DWORD PTR es:[edi]
  416942:	enter  0xc6d2,0xf6
  416946:	add    BYTE PTR [eax],al
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    BYTE PTR [esi],bl
  41694d:	adc    esi,DWORD PTR [ecx+eax*8]
  416950:	mov    bl,0x6d
  416952:	fistp  QWORD PTR [edi+eax*2]
  416955:	cmc    
  416956:	sahf   
  416957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416958:	or     al,dl
  41695a:	cmp    dl,BYTE PTR [ecx+ebp*8+0x4d6090a6]
  416961:	pop    ecx
  416962:	mov    eax,ds:0x48f25975
  416967:	int    0x70
  416969:	loop   0x41698b
  41696b:	xor    ebp,DWORD PTR [ebx+0x50bd513c]
  416971:	ins    DWORD PTR es:[edi],dx
  416972:	add    eax,0x993fb86e
  416977:	fild   QWORD PTR [ecx-0x644959d9]
  41697d:	mov    edi,0xc6f8d310
  416982:	scas   eax,DWORD PTR es:[edi]
  416983:	cmp    eax,0x5a749d8a
  416988:	adc    BYTE PTR [esi+0x7f],bl
  41698b:	cmp    DWORD PTR [ebx],esi
  41698d:	stc    
  41698e:	inc    edx
  41698f:	xor    al,BYTE PTR [ecx-0x796f35dd]
  416995:	imul   ebx,DWORD PTR [edi-0x22],0xffffffab
  416999:	stc    
  41699a:	and    ecx,DWORD PTR [ebp+0x2d96772a]
  4169a0:	fst    DWORD PTR [esi-0x190a1591]
  4169a6:	icebp  
  4169a7:	inc    ebx
  4169a8:	add    edi,DWORD PTR [edi+0x44]
  4169ab:	inc    ebx
  4169ac:	dec    eax
  4169ae:	add    eax,0x2675c94f
  4169b3:	xor    ebp,eax
  4169b5:	sub    BYTE PTR [edx+0x51],bh
  4169b8:	or     DWORD PTR [edx+0x8],esp
  4169bb:	repz es retf 0x97c
  4169c0:	inc    eax
  4169c1:	pop    ecx
  4169c2:	in     al,dx
  4169c3:	fdiv   DWORD PTR [edi+0x6910da0b]
  4169c9:	sub    BYTE PTR [edi],ah
  4169cb:	adc    DWORD PTR [eax+esi*4+0x92942c2],ebp
  4169d2:	js     0x416a01
  4169d4:	cmp    cl,BYTE PTR [ebx]
  4169d6:	mov    WORD PTR [edx],ds
  4169d8:	jl     0x416a36
  4169da:	cmp    dh,BYTE PTR ds:0xa6e89ec3
  4169e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e1:	mov    esi,DWORD PTR [ebx-0x32e0a90b]
  4169e7:	jmp    0xee88b978
  4169ec:	push   0x50
  4169ee:	ss in  eax,dx
  4169f0:	push   ebx
  4169f1:	je     0x416a05
  4169f3:	sub    DWORD PTR [ecx],ebx
  4169f5:	adc    eax,0x7d448271
  4169fa:	mov    BYTE PTR [edx],dh
  4169fc:	xor    DWORD PTR [edx+0x572229c3],eax
  416a02:	xchg   ebp,eax
  416a03:	xor    al,0xa4
  416a05:	xchg   BYTE PTR [edx-0x46],bl
  416a08:	shr    DWORD PTR [eax+ebp*1-0x101620c1],0x84
  416a10:	ret    
  416a11:	jecxz  0x416a0d
  416a13:	gs imul esi,esp,0xf3b32027
  416a1a:	adc    dl,al
  416a1c:	clc    
  416a1d:	add    eax,0xe5d72bc4
  416a22:	mov    ebp,0xd59963b7
  416a27:	mov    ebx,0xed5df5d7
  416a2c:	arpl   WORD PTR [ebp-0xab61492],sp
  416a32:	or     DWORD PTR [ebx+0x5eef835],edx
  416a38:	dec    edi
  416a39:	enter  0x2bad,0x64
  416a3d:	cmp    BYTE PTR ds:0xb3e9,bh
	...
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x6e013252]
  416ac3:	leave  
  416ac4:	mov    ebx,0xf50000f7
  416ac9:	add    BYTE PTR [eax],al
  416acb:	add    BYTE PTR [esi+0x4f895906],ch
  416ad1:	jp     0x416b2d
  416ad3:	jmp    0x416ac2
  416ad5:	test   DWORD PTR [edx-0x4f],esp
  416ad8:	stc    
  416ad9:	jno    0x416aa9
  416adb:	sbb    al,0x35
  416add:	fst    DWORD PTR [ebx]
  416adf:	rol    DWORD PTR [edi-0x38],0xf7
  416ae3:	jmp    0x67fa1e75
  416ae8:	arpl   dx,bp
  416aea:	je     0x416b38
  416aec:	xchg   esp,eax
  416aed:	pop    esp
  416aee:	leave  
  416aef:	sbb    BYTE PTR [edx+0x2a5de311],bh
  416af5:	dec    edi
  416af6:	adc    cl,dh
  416af8:	push   ecx
  416af9:	sbb    esp,ebx
  416afb:	mov    edi,0x24a213a6
  416b00:	pop    ss
  416b01:	cmp    ecx,DWORD PTR [edi]
  416b03:	pop    edi
  416b04:	push   edx
  416b05:	pop    ecx
  416b06:	and    DWORD PTR [ecx],ebp
  416b08:	mov    ebp,DWORD PTR [eax+0x48bc5d7d]
  416b0e:	out    dx,al
  416b0f:	pop    eax
  416b10:	outs   dx,BYTE PTR ds:[esi]
  416b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b12:	pusha  
  416b13:	shl    BYTE PTR [edi-0x56e74d5c],1
  416b19:	mov    esp,0x92ccc01f
  416b1e:	lock inc eax
  416b20:	jmp    0xa4db90a5
  416b25:	mov    eax,0xf4fd8015
  416b2a:	test   ch,ch
  416b2c:	pop    edx
  416b2d:	xor    dh,BYTE PTR [esi]
  416b2f:	je     0x416b39
  416b31:	xchg   al,bl
  416b33:	fisub  DWORD PTR [edx]
  416b35:	push   es
  416b36:	jnp    0x416ae2
  416b38:	pop    es
  416b39:	inc    edx
  416b3a:	jmp    0x416b1b
  416b3c:	dec    ebx
  416b3d:	jecxz  0x416b5d
  416b3f:	ins    DWORD PTR es:[edi],dx
  416b40:	xor    bh,BYTE PTR [esi-0x52]
  416b43:	xchg   esp,eax
  416b44:	xor    dl,cl
  416b46:	push   esp
  416b47:	jb     0x416b0b
  416b49:	add    dh,bl
  416b4b:	das    
  416b4c:	call   0x264d1a5b
  416b51:	ss push edi
  416b53:	push   cs
  416b54:	jno    0x416b04
  416b56:	cmp    DWORD PTR [edi+0x22],edi
  416b59:	mov    dh,0xcd
  416b5b:	or     al,0xf
  416b5d:	popf   
  416b5e:	jnp    0x416bb3
  416b60:	dec    edi
  416b61:	xchg   DWORD PTR [edx+0x7f70cd51],eax
  416b67:	mov    ebp,0x7f7e6bf9
  416b6c:	mov    esp,0xe9d936cd
  416b71:	sar    ebx,1
  416b73:	jo     0x416ba4
  416b75:	repnz mov ch,BYTE PTR [edx+edi*8-0x796ef91b]
  416b7d:	(bad)  
  416b7e:	cmc    
  416b7f:	in     al,0xb1
  416b81:	push   0x90343165
  416b86:	cwde   
  416b87:	mov    bh,0x7d
  416b89:	cmp    DWORD PTR [ebx],eax
  416b8b:	mov    WORD PTR [eax],gs
  416b8d:	fst    DWORD PTR [ebx+0x3fc1b861]
  416b93:	(bad)  
  416b94:	mov    WORD PTR [esp+edx*8-0x93b4ec4],?
  416b9b:	int    0xb7
  416b9d:	cmp    BYTE PTR [ecx],dl
  416b9f:	jle    0x416bfa
  416ba1:	cmc    
  416ba2:	and    eax,0xf6c45872
  416ba7:	push   ds
  416ba8:	scas   ax,WORD PTR es:[edi]
  416baa:	jae    0x416c10
  416bac:	sahf   
  416bad:	xchg   DWORD PTR [ebx],ebp
  416baf:	ins    DWORD PTR es:[edi],dx
  416bb0:	sbb    bh,bl
  416bb2:	cdq    
  416bb3:	sub    eax,0x752dc39
  416bb8:	ret    0x7ecd
  416bbb:	lods   eax,DWORD PTR ds:[esi]
  416bbc:	cdq    
  416bbd:	pop    ecx
  416bbe:	in     eax,dx
  416bbf:	mov    bh,0xe3
	...
  416c31:	add    BYTE PTR [eax],al
  416c33:	add    BYTE PTR [edx],bh
  416c35:	adc    BYTE PTR [edi-0x444040c4],bh
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    ecx,ebx
  416c41:	iret   
  416c42:	ror    edx,0xb0
  416c45:	clc    
  416c46:	add    BYTE PTR [eax],al
  416c48:	cmc    
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    BYTE PTR [ecx-0x57],cl
  416c4e:	jp     0x416c34
  416c50:	inc    eax
  416c51:	js     0x416c32
  416c53:	sbb    eax,0x278d56ce
  416c58:	shl    BYTE PTR [ebx-0x3d6a12fb],1
  416c5e:	(bad)  
  416c5f:	jmp    0x5482077
  416c64:	jge    0x416cbd
  416c66:	lods   eax,DWORD PTR ds:[esi]
  416c67:	scas   al,BYTE PTR es:[edi]
  416c68:	mov    esp,0x768aa7d6
  416c6d:	ins    BYTE PTR es:[edi],dx
  416c6e:	inc    edi
  416c6f:	or     al,0x90
  416c71:	cdq    
  416c72:	mov    ebp,0xb3413ad3
  416c77:	xchg   BYTE PTR [edx-0xdc7adbc],ah
  416c7d:	push   0x31
  416c7f:	das    
  416c80:	jae    0x416c48
  416c82:	push   esi
  416c83:	shr    ebp,0xdf
  416c86:	sahf   
  416c87:	mov    edi,0x16098e1f
  416c8c:	daa    
  416c8d:	(bad)
  416c90:	mov    edi,DWORD PTR [ebx-0x63c566d5]
  416c96:	into   
  416c97:	ja     0x416cb8
  416c99:	cmp    DWORD PTR [edx+0x29adc1fd],ebx
  416c9f:	stos   DWORD PTR es:[edi],eax
  416ca0:	pop    esp
  416ca1:	push   esi
  416ca2:	mov    eax,ds:0x5fada575
  416ca7:	cmp    ah,BYTE PTR [ebx-0x84c889f]
  416cad:	xchg   edi,eax
  416cae:	mov    ecx,0xcac36b65
  416cb3:	ss sbb eax,0x36b2a8fc
  416cb9:	xor    esi,DWORD PTR [ebx-0x4d]
  416cbc:	sbb    eax,0x65536348
  416cc1:	sbb    ah,cl
  416cc3:	mov    eax,0xbde47e91
  416cc8:	fadd   DWORD PTR [ebx+0x63]
  416ccb:	cmovg  esp,DWORD PTR [edx+0x15]
  416ccf:	imul   dh
  416cd1:	scas   eax,DWORD PTR es:[edi]
  416cd2:	inc    ecx
  416cd3:	adc    esp,DWORD PTR [esi]
  416cd5:	push   cs
  416cd6:	rcl    DWORD PTR [ebx+eax*1-0x74670d85],1
  416cdd:	lahf   
  416cde:	test   DWORD PTR [eax+0x1b],ebx
  416ce1:	clc    
  416ce2:	ins    DWORD PTR es:[edi],dx
  416ce3:	les    edx,FWORD PTR [edi+0x66]
  416ce6:	mov    dl,0x11
  416ce8:	(bad)  
  416cea:	call   0xe5d7371c
  416cef:	sbb    ecx,DWORD PTR [ecx-0x654d9604]
  416cf5:	push   0xffffffbf
  416cf7:	or     eax,DWORD PTR [esi+esi*2-0x789fe98c]
  416cfe:	mov    ah,0x2d
  416d00:	push   ss
  416d01:	std    
  416d02:	(bad)  
  416d03:	mov    DWORD PTR [eax+0x6f],ecx
  416d06:	mov    al,ds:0x88ff72d9
  416d0b:	test   al,0x3b
  416d0d:	jno    0x416cc0
  416d0f:	pop    esi
  416d10:	in     al,dx
  416d11:	pop    ss
  416d12:	xor    dl,BYTE PTR [ecx+ebp*1-0x64]
  416d16:	loop   0x416d0d
  416d18:	rcl    BYTE PTR [esi+edx*2+0x5a],cl
  416d1c:	pop    ecx
  416d1d:	add    dh,BYTE PTR [esi*1-0x49e2c5b5]
  416d24:	push   edi
  416d25:	push   ebx
  416d26:	push   edi
  416d27:	jbe    0x416cf8
  416d29:	pop    ebx
  416d2a:	mov    al,0xab
  416d2c:	stos   DWORD PTR es:[edi],eax
  416d2d:	fiadd  WORD PTR [esi+0xba2cad2]
  416d33:	pop    esp
  416d34:	mov    edi,0x567db0b5
  416d39:	inc    edi
  416d3a:	and    dl,ah
  416d3c:	xchg   BYTE PTR [ebx],bl
  416d3e:	xor    eax,0xc195
	...
  416db3:	add    dh,ch
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x9e4b2859
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [ebp+0x2c17d19c],ch
  416dd1:	call   0x7a26:0xcc8e2839
  416dd8:	idiv   DWORD PTR [edx]
  416dda:	stc    
  416ddb:	and    eax,0xbfad5b3c
  416de0:	and    al,0x16
  416de2:	repnz ficomp DWORD PTR [ebx]
  416de5:	jle    0x416e32
  416de7:	inc    eax
  416de8:	and    DWORD PTR [esi+ecx*8],0x0
  416dec:	or     ecx,0xcb6dbed3
  416df2:	retf   
  416df3:	xchg   ecx,eax
  416df4:	jge    0x416e44
  416df6:	adc    esp,DWORD PTR [ebp+0x4ba70aa1]
  416dfc:	xchg   edx,eax
  416dfd:	add    eax,0xb6667e57
  416e02:	out    0x55,eax
  416e04:	xchg   bl,cl
  416e06:	pushf  
  416e07:	sbb    BYTE PTR [eax-0x22c578aa],0x3
  416e0e:	and    eax,0xae103216
  416e13:	sahf   
  416e14:	cwde   
  416e15:	fs add al,0xd5
  416e18:	fidivr DWORD PTR [ecx]
  416e1a:	jae    0x416db8
  416e1c:	cmp    BYTE PTR [esi-0x2428b36b],bh
  416e22:	imul   ecx,ecx,0xc
  416e25:	loope  0x416dbc
  416e27:	outs   dx,DWORD PTR ds:[esi]
  416e28:	cmp    eax,0xb2bf7977
  416e2d:	dec    ebx
  416e2e:	ins    DWORD PTR es:[edi],dx
  416e2f:	inc    edx
  416e30:	add    DWORD PTR ds:0x6f891f2a,edi
  416e36:	iret   
  416e37:	push   es
  416e38:	outs   dx,BYTE PTR ds:[esi]
  416e39:	fwait
  416e3a:	rcr    BYTE PTR [edi+0x4d],0xfb
  416e3e:	out    0xe6,eax
  416e40:	push   esp
  416e41:	pop    esp
  416e42:	cmp    DWORD PTR [eax-0x146dbfed],0xffffff88
  416e49:	fwait
  416e4a:	dec    esp
  416e4b:	xchg   ebp,eax
  416e4c:	pop    ebp
  416e4d:	(bad)  
  416e4e:	pop    eax
  416e4f:	dec    ecx
  416e50:	sbb    eax,0x68d083d6
  416e55:	aaa    
  416e56:	mov    edi,ecx
  416e58:	cs repnz and al,0xa3
  416e5c:	push   ebp
  416e5d:	mov    ebx,0x24e00cde
  416e62:	mov    bh,0xdf
  416e64:	jg     0x416ebd
  416e66:	dec    ecx
  416e67:	and    BYTE PTR [ecx-0x38],0xca
  416e6b:	loop   0x416e23
  416e6d:	push   0xffffffe2
  416e6f:	lock lock and esi,eax
  416e73:	mov    dh,ch
  416e75:	int3   
  416e76:	mov    ebp,0x2b0fc6bf
  416e7b:	pop    ecx
  416e7c:	test   BYTE PTR [edx+eiz*2],bh
  416e7f:	dec    ecx
  416e80:	push   0x6a82dcba
  416e85:	mov    ch,0x33
  416e87:	pop    ebx
  416e88:	les    eax,FWORD PTR [ebx-0xe927fc1]
  416e8e:	sbb    ebx,DWORD PTR cs:[ebx]
  416e91:	pushf  
  416e92:	adc    eax,0x5b085e56
  416e97:	pop    ebx
  416e98:	ja     0x416f09
  416e9a:	addr16 test al,0x7a
  416e9d:	arpl   WORD PTR [edi],bp
  416e9f:	cmp    eax,0xc7375c85
  416ea4:	mov    edx,0x75f72896
  416ea9:	jb     0x416eac
  416eab:	bound  esp,QWORD PTR [eax+0x2b2ccb31]
  416eb1:	mov    ecx,0x8796dbae
  416eb6:	sub    DWORD PTR [edi],edi
  416eb8:	lods   al,BYTE PTR ds:[esi]
  416eb9:	pop    edx
  416eba:	xchg   edi,eax
  416ebb:	in     al,dx
  416ebc:	jb     0x416f1f
  416ebe:	aad    0xc1
  416ec0:	xchg   ecx,eax
	...
  416f31:	add    BYTE PTR [eax],al
  416f33:	add    BYTE PTR [edi],dl
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	repnz in al,0xd9
  416f43:	scas   eax,DWORD PTR es:[edi]
  416f44:	call   0x0:0xf50000fa
  416f4b:	add    BYTE PTR [edx-0xcd6dd1f],bh
  416f51:	xor    al,0xc2
  416f53:	repz or ah,bh
  416f56:	imul   eax,DWORD PTR [ebx*4-0x4a54b5ff],0xffffffd5
  416f5e:	lds    eax,FWORD PTR [edx]
  416f60:	sar    BYTE PTR [ecx-0x76196b1],0xe8
  416f67:	xor    DWORD PTR ds:0xec7c7795,ebx
  416f6d:	fidivr DWORD PTR [esi+eiz*8+0x1c]
  416f71:	repnz (bad) 
  416f73:	mov    esi,0x2f97b02d
  416f78:	int    0x59
  416f7a:	pop    eax
  416f7b:	lods   al,BYTE PTR ds:[esi]
  416f7c:	jl     0x416fcc
  416f7e:	mov    ecx,0x51ee041a
  416f83:	loopne 0x416fb6
  416f85:	into   
  416f86:	jmp    0x416f8c
  416f88:	stc    
  416f89:	loope  0x416fde
  416f8b:	es enter 0xd9d9,0xcf
  416f90:	jne    0x416fc1
  416f92:	mov    esp,0xde17f19a
  416f97:	mov    bh,0x4b
  416f99:	and    BYTE PTR [eax+0x29],dl
  416f9c:	pop    esp
  416f9d:	sti    
  416f9e:	(bad)  
  416f9f:	mov    esp,0xa9d1ba36
  416fa4:	mov    ecx,0x8b54f11
  416fa9:	lods   al,BYTE PTR es:[esi]
  416fab:	jmp    FWORD PTR [esi-0x2c]
  416fae:	(bad)  
  416faf:	in     eax,0x7d
  416fb1:	xchg   edx,eax
  416fb2:	push   eax
  416fb3:	retf   
  416fb4:	sar    esp,0xa0
  416fb7:	nop
  416fb8:	jbe    0x416f57
  416fba:	and    al,0x75
  416fbc:	fild   DWORD PTR [esi-0x20]
  416fbf:	das    
  416fc0:	or     DWORD PTR ds:0x3dd3425d,esi
  416fc6:	mov    ds:0xb4060d88,al
  416fcb:	dec    ebx
  416fcc:	mov    eax,0x681bf640
  416fd1:	and    BYTE PTR [ebp+0x61],al
  416fd4:	(bad)  
  416fd5:	popf   
  416fd6:	fbld   TBYTE PTR [ecx-0x21ed26df]
  416fdc:	(bad)  
  416fdd:	pop    ebp
  416fde:	inc    esi
  416fdf:	repnz xchg edx,eax
  416fe1:	mov    dl,0xf4
  416fe3:	loop   0x416fe0
  416fe5:	shr    DWORD PTR [esi+ebp*4],1
  416fe8:	ret    0x547b
  416feb:	xchg   ebx,eax
  416fec:	(bad)  
  416fed:	jae    0x416ff9
  416fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff0:	dec    edi
  416ff1:	pushf  
  416ff2:	lods   al,BYTE PTR ds:[esi]
  416ff3:	scas   eax,DWORD PTR es:[edi]
  416ff4:	ins    BYTE PTR es:[edi],dx
  416ff5:	mov    ah,0x68
  416ff7:	mov    WORD PTR [eax],cs
  416ff9:	loopne 0x417015
  416ffb:	xor    BYTE PTR [edx],ch
  416ffd:	ja     0x416fe2
  416fff:	add    DWORD PTR [edx+0xd],ebx
  417002:	mov    esp,0x8a2f101c
  417007:	xor    eax,0xe983a0ce
  41700c:	mov    eax,0xf452897b
  417011:	sub    BYTE PTR es:[eax+0x643cd00a],ah
  417018:	pop    esp
  417019:	push   ebp
  41701a:	sar    esi,0x92
  41701d:	popf   
  41701e:	pop    esi
  41701f:	cwde   
  417020:	sub    esp,DWORD PTR [ebx]
  417022:	or     BYTE PTR [esi+eiz*1+0x97b5217],ch
  417029:	push   esp
  41702a:	outs   dx,BYTE PTR ds:[esi]
  41702b:	(bad)  
  41702c:	and    dh,BYTE PTR [ecx-0x1]
  41702f:	mov    ds:0x9687d104,eax
  417034:	repnz and DWORD PTR ds:0x3df26ae6,ecx
  41703b:	(bad)  [edx+0x64]
  41703e:	jns    0x4170ab
  417040:	jge    0x417042
	...
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	and    cl,ch
  4170b6:	cmp    ebx,esi
  4170b8:	sti    
  4170b9:	fsubrp st(5),st
  4170bb:	dec    DWORD PTR [ecx+0x49]
  4170be:	ret    
  4170bf:	sbb    DWORD PTR [edx-0x6f],0x6d
  4170c3:	fisttp WORD PTR [edi-0xaffff05]
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    al,dl
  4170cd:	lock cwde 
  4170cf:	(bad)  
  4170d0:	push   0x7bfad3b2
  4170d5:	or     DWORD PTR [eax+edi*8],edx
  4170d8:	and    al,0xa9
  4170da:	xor    al,BYTE PTR [ebx-0x776f65b]
  4170e0:	js     0x41712a
  4170e2:	mov    ebx,0xc3d878c8
  4170e7:	jno    0x4170d9
  4170e9:	test   eax,0x74a9aef5
  4170ee:	hlt    
  4170ef:	push   esi
  4170f0:	sub    eax,0x17682d0b
  4170f5:	add    eax,0xc93d827c
  4170fa:	xchg   edi,eax
  4170fb:	cmp    al,0x9e
  4170fd:	lahf   
  4170fe:	mov    ?,ecx
  417100:	xchg   dh,dh
  417102:	cmp    al,BYTE PTR [eax+0x11]
  417105:	push   si
  417107:	bound  ebx,QWORD PTR [edi+0x207dd6e]
  41710d:	cmp    edi,esi
  41710f:	repnz stc 
  417111:	jge    0x41713a
  417113:	imul   ecx,DWORD PTR [ebx-0x75],0x497f82d3
  41711a:	mov    dh,0x91
  41711c:	loop   0x41716e
  41711e:	ins    BYTE PTR es:[edi],dx
  41711f:	mov    BYTE PTR [ecx],cl
  417121:	into   
  417122:	mov    DWORD PTR [edx],0xee7650a6
  417128:	xchg   eax,esp
  41712a:	jp     0x417169
  41712c:	cmp    eax,0x89853d16
  417131:	mov    edx,0x69f9a073
  417136:	mov    eax,ds:0x79b6f4e0
  41713b:	scas   al,BYTE PTR es:[edi]
  41713c:	pop    ds
  41713d:	add    edx,esi
  41713f:	xchg   edx,eax
  417140:	mov    edi,0x3d30afda
  417145:	mov    edi,DWORD PTR [ecx+ecx*4+0x3b]
  417149:	mov    al,ch
  41714b:	adc    al,0xe4
  41714d:	shl    edi,0xa7
  417150:	or     DWORD PTR [ebp+0x4b],edi
  417153:	push   cs
  417154:	jge    0x4170e1
  417156:	lock (bad) [esi]
  417159:	mov    ebp,0x5ae70fdc
  41715e:	aad    0xc3
  417160:	push   eax
  417161:	(bad)  
  417163:	out    0x15,eax
  417165:	sbb    cl,BYTE PTR [ecx]
  417167:	inc    edx
  417168:	add    BYTE PTR [esi],0xa9
  41716b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41716c:	mov    esp,ebp
  41716e:	mov    BYTE PTR [ecx-0x3d],cl
  417171:	mov    al,0x74
  417173:	cs push ss
  417175:	in     al,0xd2
  417177:	repz sub eax,0x20b8ff00
  41717d:	std    
  41717e:	ja     0x417135
  417180:	push   esp
  417181:	mov    DWORD PTR [edi],ecx
  417183:	mov    BYTE PTR [ebx],bh
  417185:	mov    eax,ds:0x5b2260ab
  41718a:	sub    al,0xe9
  41718c:	out    0x39,al
  41718e:	push   esp
  41718f:	push   eax
  417190:	inc    ecx
  417191:	outs   dx,DWORD PTR ds:[esi]
  417192:	sub    ecx,DWORD PTR [ebp-0x63]
  417195:	mov    esp,0x2498a01e
  41719a:	cmp    dl,ch
  41719c:	jo     0x417134
  41719e:	cmp    BYTE PTR cs:[ecx+0x4f],al
  4171a2:	pop    esi
  4171a3:	shl    DWORD PTR [esi+0x19631117],1
  4171a9:	pop    edi
  4171aa:	retf   0xb60c
  4171ad:	jp     0x41717d
  4171af:	mov    fs,ecx
  4171b1:	adc    al,0x3c
  4171b3:	call   0x30d8:0x3e832131
  4171ba:	and    bl,BYTE PTR [eax]
  4171bc:	mov    eax,ds:0xd600d4b7
	...
  417231:	add    BYTE PTR [eax],al
  417233:	add    BYTE PTR [ebx],ah
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	xor    ah,BYTE PTR ds:0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 or al,0x33
  417242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417243:	nop
  417244:	test   ah,bh
  417246:	add    BYTE PTR [eax],al
  417248:	cmc    
  417249:	add    BYTE PTR [eax],al
  41724b:	add    BYTE PTR [ecx-0x15],bh
  41724e:	jnp    0x417259
  417250:	(bad)  
  417251:	mov    esi,0x6cf6729
  417256:	mov    ebx,0xfb80378b
  41725b:	shr    DWORD PTR [ecx],0x52
  41725e:	ret    0x8c74
  417261:	adc    bh,ch
  417263:	push   ds
  417264:	sub    BYTE PTR [edi+0x17],dl
  417267:	push   ds
  417268:	sub    BYTE PTR [edi-0x9374117],ch
  41726e:	mov    dl,0xb1
  417270:	jmp    0xf3277823
  417275:	dec    ebp
  417276:	sub    ch,BYTE PTR [edi]
  417278:	inc    esi
  417279:	mov    edx,0xcbc4ac21
  41727e:	sbb    DWORD PTR [edx-0x5a112ef],esp
  417284:	adc    eax,0x54b76883
  417289:	scas   al,BYTE PTR es:[edi]
  41728a:	repz leave 
  41728c:	cmp    eax,0x3bfc319d
  417291:	stos   DWORD PTR es:[edi],eax
  417292:	xor    ebp,DWORD PTR [eax-0x4a2ec211]
  417298:	mov    bl,0x5b
  41729a:	add    ebx,DWORD PTR [esp+ecx*2-0x51d21eda]
  4172a1:	pop    edi
  4172a2:	pop    eax
  4172a3:	fisubr DWORD PTR [edi+0x2e]
  4172a6:	(bad)  
  4172a7:	mov    ecx,0x6354ccf
  4172ac:	or     bl,BYTE PTR [edx]
  4172ae:	push   ds
  4172af:	inc    edx
  4172b0:	mov    al,ds:0x4ea0dafe
  4172b5:	sbb    eax,edi
  4172b7:	mov    sp,0xe31e
  4172bb:	into   
  4172bc:	inc    esp
  4172bd:	sbb    DWORD PTR ss:[edx+0x44],edi
  4172c1:	xchg   esp,eax
  4172c2:	adc    eax,0x339a46e3
  4172c7:	not    DWORD PTR [ecx+0x46a361d]
  4172cd:	add    BYTE PTR [bp+si-0x61a0],ah
  4172d2:	popaw  
  4172d4:	xchg   edi,eax
  4172d5:	inc    edi
  4172d6:	mov    ebx,0x531676b2
  4172db:	int3   
  4172dc:	mov    ebx,0xd957a58e
  4172e1:	mov    ebp,0x6d3397f9
  4172e6:	sti    
  4172e7:	adc    eax,0xf79b78e5
  4172ec:	out    dx,eax
  4172ed:	and    al,0xc7
  4172ef:	add    ebp,ecx
  4172f1:	cli    
  4172f2:	cmp    al,0x97
  4172f4:	mov    cl,0xa5
  4172f7:	pusha  
  4172f8:	xchg   edx,eax
  4172f9:	jo     0x4172f3
  4172fb:	xchg   ecx,eax
  4172fc:	pop    ss
  4172fd:	inc    ecx
  4172fe:	cmp    bl,BYTE PTR [ebx+0x2dd6c9f4]
  417304:	(bad)  
  417306:	jbe    0x41733b
  417308:	xchg   ebp,eax
  417309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41730a:	loopne 0x417331
  41730c:	cwde   
  41730d:	test   BYTE PTR [ecx+0xc887a45],dl
  417313:	aad    0x2e
  417315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417316:	ins    BYTE PTR es:[edi],dx
  417317:	fisttp DWORD PTR [ebx]
  417319:	push   ecx
  41731a:	fdivr  QWORD PTR [esp+ebp*4-0x48]
  41731e:	pop    ebp
  41731f:	sub    BYTE PTR [eax-0x2b],0x6b
  417323:	push   ebx
  417324:	les    esp,FWORD PTR [edi-0x40b3e74f]
  41732a:	xchg   esp,eax
  41732b:	inc    edi
  41732c:	inc    edi
  41732d:	fimul  DWORD PTR [ecx+0x34eb0b8b]
  417333:	clc    
  417334:	push   edx
  417335:	cmc    
  417336:	mov    ecx,DWORD PTR [ecx]
  417338:	inc    edx
  417339:	jl     0x4173a5
  41733b:	mov    dh,BYTE PTR [ecx-0x47]
  41733e:	scas   al,BYTE PTR es:[edi]
  41733f:	xchg   edx,eax
  417340:	sub    BYTE PTR [eax],al
	...
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x3c
  4173c1:	pop    es
  4173c2:	nop    DWORD PTR [ecx-0x3]
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	cmc    
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    BYTE PTR [eax-0x5f],ah
  4173ce:	inc    ebp
  4173cf:	sbb    BYTE PTR [eax-0x1cc2f6e2],bh
  4173d5:	lods   al,BYTE PTR ds:[esi]
  4173d6:	dec    eax
  4173d7:	xlat   BYTE PTR ds:[ebx]
  4173d8:	and    ebx,edx
  4173da:	pushf  
  4173db:	push   esp
  4173dc:	cmp    cl,0x3f
  4173df:	or     DWORD PTR [edi],esi
  4173e1:	xchg   ebx,eax
  4173e2:	pusha  
  4173e3:	das    
  4173e4:	mov    ebx,0xbebad8cc
  4173e9:	xchg   ebp,eax
  4173ea:	mov    bh,0x9f
  4173ec:	push   es
  4173ed:	stos   BYTE PTR es:[edi],al
  4173ee:	test   BYTE PTR [edx-0x10],dh
  4173f1:	and    eax,0x4422f9b5
  4173f6:	mov    eax,ds:0x8ad1ec03
  4173fb:	adc    al,0x66
  4173fd:	or     al,0x1e
  4173ff:	stc    
  417400:	pop    edi
  417401:	hlt    
  417402:	adc    eax,0x92e4cdd4
  417407:	ror    DWORD PTR [ecx+0x39af4efd],1
  41740d:	inc    ecx
  41740e:	adc    al,0x38
  417410:	xchg   edx,eax
  417411:	int    0x84
  417413:	push   ebx
  417414:	and    DWORD PTR [ebp-0x2],edi
  417417:	adc    bl,bh
  417419:	clc    
  41741a:	std    
  41741b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41741c:	mov    edx,0xab701ab6
  417421:	pop    ecx
  417422:	mov    ebx,DWORD PTR [ecx+edi*4+0x206fdb72]
  417429:	aaa    
  41742a:	mov    ch,0xc4
  41742c:	int    0x43
  41742e:	adc    eax,0x8af7cbc6
  417433:	pushf  
  417434:	mov    eax,0x9a56bd0b
  417439:	sub    edx,DWORD PTR [ecx+0x23fb77fc]
  41743f:	adc    al,0x36
  417441:	push   ebx
  417442:	out    dx,al
  417443:	or     ah,cl
  417445:	cli    
  417446:	aas    
  417447:	es dec esi
  417449:	out    0x81,eax
  41744b:	adc    BYTE PTR [esp+edi*1],dh
  41744e:	pop    esi
  41744f:	fadd   st(6),st
  417451:	dec    edx
  417452:	outs   dx,DWORD PTR ds:[esi]
  417453:	pop    ebp
  417454:	lahf   
  417455:	pop    es
  417456:	in     al,0xde
  417458:	cwde   
  417459:	std    
  41745a:	xchg   ebx,eax
  41745b:	js     0x4173f6
  41745d:	jg     0x417499
  41745f:	push   esi
  417460:	mov    ds:0x1f741fab,al
  417465:	push   ss
  417466:	mov    esi,0x13df1d26
  41746b:	out    0x86,al
  41746d:	mov    eax,fs
  41746f:	dec    ecx
  417470:	sub    al,BYTE PTR [ebx+eax*1-0x72]
  417474:	dec    eax
  417475:	xchg   esi,eax
  417476:	jb     0x4174de
  417478:	jp     0x417496
  41747a:	lods   eax,DWORD PTR ds:[esi]
  41747b:	inc    ecx
  41747c:	or     al,0xbe
  41747e:	(bad)  
  41747f:	cld    
  417480:	jge    0x4174f6
  417482:	pop    ebx
  417483:	ret    
  417484:	pop    ebp
  417485:	imul   esi,DWORD PTR [eax-0x7ddf4cf6],0x3087ab0
  41748f:	adc    eax,0xf0302b63
  417494:	outs   dx,BYTE PTR ds:[esi]
  417495:	mov    ebx,0x5a9690d5
  41749a:	mov    ss,edx
  41749c:	(bad)  
  41749d:	(bad)  
  41749e:	popa   
  41749f:	xor    DWORD PTR [edi+0x58],ebx
  4174a2:	mov    ss,WORD PTR [ecx+esi*4-0x73]
  4174a6:	sub    cl,BYTE PTR [edx]
  4174a8:	es dec esi
  4174aa:	sbb    DWORD PTR gs:[edi-0x50fdf275],0xb49386ff
  4174b5:	test   bl,0x1a
  4174b8:	xor    eax,0x4b926550
  4174bd:	out    0xe0,eax
  4174bf:	(bad)  
  4174c0:	adc    DWORD PTR [eax],eax
	...
  417532:	add    BYTE PTR [eax],al
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x877d3b7a
  417542:	mov    ecx,0xfe6e66
  417547:	add    ch,dh
  417549:	add    BYTE PTR [eax],al
  41754b:	add    ah,ch
  41754d:	add    dh,BYTE PTR ds:0x9d758798
  417553:	add    al,0xc0
  417555:	in     eax,0xdf
  417557:	adc    BYTE PTR [ecx+eiz*4+0xaaf1564],al
  41755e:	test   al,0x7
  417560:	adc    al,0xde
  417562:	iret   
  417563:	inc    ebp
  417564:	hlt    
  417565:	mov    BYTE PTR [eax-0x21002786],ah
  41756b:	mov    ecx,0xb511a93c
  417570:	jno    0x4175c4
  417572:	push   ds
  417573:	dec    edi
  417574:	adc    al,0xc8
  417576:	dec    ebx
  417577:	xchg   esp,eax
  417578:	fdivr  QWORD PTR [ebp+0x56d05ac3]
  41757e:	mov    edi,0x3ee5d37f
  417583:	(bad)  
  417584:	jecxz  0x4175b6
  417586:	or     al,0x6f
  417588:	add    esi,DWORD PTR [eax]
  41758a:	jmp    0x7e0546e6
  41758f:	cmp    eax,0x38254b41
  417594:	xchg   edi,eax
  417595:	icebp  
  417596:	std    
  417597:	inc    ch
  417599:	ficom  DWORD PTR [edx]
  41759b:	mov    DWORD PTR [ebx+0x5f87545e],ecx
  4175a1:	stos   BYTE PTR es:[edi],al
  4175a2:	mov    ebp,0xc633192d
  4175a7:	and    esi,DWORD PTR [esi+0x74]
  4175aa:	pop    esp
  4175ab:	(bad)  
  4175ad:	out    0x37,eax
  4175af:	popf   
  4175b0:	push   ecx
  4175b1:	je     0x417620
  4175b3:	jmp    0x417552
  4175b5:	repnz out dx,eax
  4175b7:	gs xchg eax,ebx
  4175ba:	xor    bl,cl
  4175bc:	rcl    BYTE PTR [eax+esi*8+0x31],1
  4175c0:	pusha  
  4175c1:	and    al,0x7d
  4175c3:	popa   
  4175c4:	xchg   ebp,eax
  4175c5:	das    
  4175c6:	xchg   DWORD PTR [edi],esp
  4175c8:	push   ss
  4175c9:	dec    esi
  4175ca:	mov    ds:0x7b3d28d4,eax
  4175cf:	xchg   DWORD PTR [ebx],edx
  4175d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d3:	test   DWORD PTR [eax+edi*4+0x6d],esi
  4175d7:	sub    dl,BYTE PTR [ebp+0xb973fcc]
  4175dd:	pop    eax
  4175de:	mov    eax,0x62a38431
  4175e3:	dec    edi
  4175e4:	xor    al,0x54
  4175e6:	add    eax,0xf80073f0
  4175eb:	mov    edi,0x2c2c5943
  4175f0:	push   edi
  4175f1:	lods   eax,DWORD PTR ds:[esi]
  4175f2:	fcomip st,st(5)
  4175f4:	rol    DWORD PTR [ebx+0x78],0xfd
  4175f8:	and    DWORD PTR [edi-0x30],ecx
  4175fb:	stos   BYTE PTR es:[edi],al
  4175fc:	inc    DWORD PTR [edx+ebp*4-0xa]
  417600:	mov    bh,dh
  417602:	bound  ebx,QWORD PTR ds:0xa66bfaf0
  417608:	repz imul ebx
  41760b:	icebp  
  41760c:	jecxz  0x41761c
  41760e:	pop    ss
  41760f:	pop    es
  417610:	push   esp
  417611:	jg     0x4175a6
  417613:	push   ecx
  417614:	ja     0x4175f8
  417616:	stos   BYTE PTR es:[edi],al
  417617:	test   bl,0x9b
  41761a:	jns    0x417674
  41761c:	or     al,0xb6
  41761e:	fwait
  41761f:	mov    esi,0x3c5dbeb
  417624:	shl    BYTE PTR [edx],cl
  417626:	arpl   WORD PTR [ebx],bp
  417628:	ins    DWORD PTR es:[edi],dx
  417629:	jmp    0x4cc8:0x27656c4e
  417630:	push   es
  417631:	cmp    BYTE PTR [edx+0x71],0x24
  417635:	push   0xb
  417637:	sub    BYTE PTR [ebp-0x45],bh
  41763a:	jp     0x4175c6
  41763c:	jg     0x417617
  41763e:	stos   BYTE PTR es:[edi],al
  41763f:	pushf  
  417640:	popa   
	...
  4176b1:	add    BYTE PTR [eax],al
  4176b3:	add    ah,al
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	cmp    bh,BYTE PTR [eax+eiz*1+0xff63b0]
  4176c7:	add    ch,dh
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [edi+0x7b3e94f0],dh
  4176d1:	ins    DWORD PTR es:[edi],dx
  4176d2:	ss jmp 0x4176b6
  4176d5:	inc    ebx
  4176d6:	adc    BYTE PTR [ebx],ah
  4176d8:	inc    edi
  4176d9:	jne    0x41771e
  4176db:	pop    eax
  4176dc:	or     eax,0xac2b18d8
  4176e1:	in     al,0xf2
  4176e3:	sbb    eax,0x7605d9ad
  4176e8:	sub    cl,BYTE PTR [ebx-0x41]
  4176eb:	cmp    al,0x1b
  4176ed:	les    esi,FWORD PTR [ebp-0x6c13210d]
  4176f3:	dec    ecx
  4176f4:	pop    ecx
  4176f5:	mov    al,ds:0xac2f60a5
  4176fa:	mov    edi,0xf5edd92
  4176ff:	dec    ebx
  417700:	stc    
  417701:	or     esp,DWORD PTR [ebx+0x11fb34f5]
  417707:	lahf   
  417708:	imul   esp,DWORD PTR [edi-0x3f01f9c5],0xffffffe2
  41770f:	mov    esp,0x7c519f65
  417714:	or     BYTE PTR cs:[ebx],ah
  417717:	mov    ss,WORD PTR [eax-0xb12a9b1]
  41771d:	in     eax,dx
  41771e:	loope  0x4176a8
  417720:	push   0x7e98a06f
  417725:	mov    dh,0xc4
  417727:	xchg   ebx,eax
  417728:	pop    edi
  417729:	scas   eax,DWORD PTR es:[edi]
  41772a:	cli    
  41772b:	mov    dl,0x93
  41772d:	sub    DWORD PTR [eax],esp
  41772f:	out    0xb0,al
  417731:	(bad)  
  417732:	fdiv   DWORD PTR [ecx-0x7f]
  417735:	(bad)  
  417736:	jns    0x417786
  417738:	adc    esp,DWORD PTR [edx+esi*2]
  41773b:	ficom  WORD PTR [ebx]
  41773d:	cwde   
  41773e:	sub    ch,bl
  417740:	out    dx,al
  417741:	and    esi,esi
  417743:	fcomp  QWORD PTR [ebx-0x40]
  417746:	ins    DWORD PTR es:[edi],dx
  417747:	arpl   WORD PTR [ebp-0x217fbbbd],sp
  41774d:	pop    edi
  41774e:	or     eax,0x67e87bd2
  417753:	sahf   
  417754:	mov    esi,0xf4bf9431
  417759:	cmp    eax,0x1301d05f
  41775e:	cwde   
  41775f:	add    DWORD PTR [ecx-0x3],edi
  417762:	jmp    0xe4341f7
  417767:	cwde   
  417768:	and    edi,DWORD PTR [esi+0x15a959c3]
  41776e:	stc    
  41776f:	or     al,0x7b
  417771:	pop    ebx
  417772:	push   ecx
  417774:	inc    edx
  417775:	pop    DWORD PTR [edi]
  417777:	xchg   ecx,eax
  417778:	out    0x40,al
  41777a:	add    eax,0x546d906d
  41777f:	jo     0x4177b7
  417781:	adc    BYTE PTR [edi-0x72ee6335],0x7b
  417788:	or     eax,DWORD PTR [ebx-0x1111cacd]
  41778e:	xchg   BYTE PTR [eax],bl
  417790:	xchg   ebp,eax
  417791:	pop    edi
  417792:	push   ds
  417793:	aad    0xfa
  417795:	add    eax,0x708c477e
  41779a:	add    BYTE PTR [edi+0x61f920f5],0x1e
  4177a1:	into   
  4177a2:	or     edi,esi
  4177a4:	(bad)  
  4177a5:	xor    al,0xdb
  4177a7:	jne    0x417828
  4177a9:	pop    ss
  4177aa:	sub    DWORD PTR [eax],edx
  4177ac:	xchg   edx,eax
  4177ad:	out    dx,al
  4177ae:	cmp    al,0x8f
  4177b0:	and    DWORD PTR [ebp+0x22],ebp
  4177b3:	lods   eax,DWORD PTR ds:[esi]
  4177b4:	adc    ch,BYTE PTR [ebx]
  4177b6:	outs   dx,BYTE PTR ds:[esi]
  4177b7:	mov    DWORD PTR [ecx-0x2ca9ed92],ebp
  4177bd:	jnp    0x4177bf
  4177bf:	xchg   ebp,eax
  4177c0:	pop    DWORD PTR [eax]
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0xdb7d6e99
  417841:	add    DWORD PTR [edx+0x10058a2],esp
  417847:	add    ch,dh
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [edi-0x50ce4ca2],bl
  417851:	(bad)  
  417853:	push   esi
  417854:	lea    ecx,[edi]
  417856:	jno    0x41781b
  417858:	cmp    ecx,edx
  41785a:	sub    al,0x38
  41785c:	and    bh,BYTE PTR [edx]
  41785e:	sbb    ebp,ebp
  417860:	pop    edi
  417861:	rcl    bh,cl
  417863:	dec    edx
  417864:	test   DWORD PTR [edi-0x3d],edx
  417867:	jb     0x417878
  417869:	loope  0x417897
  41786b:	xchg   edi,eax
  41786c:	rol    cl,cl
  41786e:	jnp    0x41780c
  417870:	fistp  WORD PTR ds:0xd93bcaee
  417876:	pusha  
  417877:	mov    ebp,0xeb9f2a4f
  41787c:	push   ss
  41787d:	cli    
  41787e:	fsub   QWORD PTR ds:0xf0e90710
  417884:	mov    cl,BYTE PTR [ecx]
  417886:	jae    0x417830
  417888:	das    
  417889:	(bad)  
  41788a:	scas   eax,DWORD PTR es:[edi]
  41788b:	jecxz  0x41789d
  41788d:	mov    al,ds:0x77dae391
  417892:	sbb    edi,DWORD PTR [eax+0x6ea8566f]
  417898:	test   ch,0x55
  41789b:	pop    edi
  41789c:	repz push esi
  41789e:	jmp    DWORD PTR [esi+0x43]
  4178a1:	cmp    DWORD PTR [eax],0x414e7e42
  4178a7:	sbb    al,0xff
  4178a9:	push   ds
  4178aa:	(bad)  
  4178ab:	jp     0x417844
  4178ad:	rcl    DWORD PTR [ebx+0x2c],1
  4178b0:	repz aam 0xe2
  4178b3:	fucom  st(7)
  4178b5:	lahf   
  4178b6:	or     dh,dl
  4178b8:	or     ebx,DWORD PTR [ecx+0x19bc5f00]
  4178be:	jecxz  0x41786f
  4178c0:	cmp    BYTE PTR [eax],0xb4
  4178c3:	call   DWORD PTR [eax-0x1f]
  4178c6:	xchg   ebp,eax
  4178c7:	arpl   bx,dx
  4178c9:	nop
  4178ca:	jno    0x417918
  4178cc:	mov    dh,0x8e
  4178ce:	adc    al,0x43
  4178d0:	sub    eax,DWORD PTR [ebx-0x4e]
  4178d3:	mov    al,0x9f
  4178d5:	mov    ?,WORD PTR [edx]
  4178d7:	push   ecx
  4178d8:	jns    0x417943
  4178da:	pop    esp
  4178db:	jmp    0xec5b941e
  4178e0:	dec    ebp
  4178e1:	imul   esp,DWORD PTR [ebx-0x19],0x95a352e7
  4178e8:	mov    BYTE PTR [esi+edi*1],al
  4178eb:	(bad)  
  4178ec:	std    
  4178ed:	sub    DWORD PTR [ecx-0x6af8ed8],0x6012c082
  4178f7:	adc    eax,0xf5485df5
  4178fc:	push   cs
  4178fd:	pop    ds
  4178fe:	call   0xaefa099c
  417903:	jmp    0x9599:0xe4a4a98
  41790a:	sbb    bl,bl
  41790c:	xchg   DWORD PTR [edx],ebp
  41790e:	icebp  
  41790f:	outs   dx,BYTE PTR ds:[esi]
  417910:	fucomi st,st(0)
  417912:	pop    cx
  417914:	call   0x69c5add0
  417919:	pop    edx
  41791a:	inc    eax
  41791b:	loop   0x417981
  41791d:	ds jnp 0x417947
  417920:	bound  edx,QWORD PTR [ecx+0x4d]
  417923:	test   BYTE PTR [eax-0x43e5605d],bh
  417929:	push   edx
  41792a:	stos   BYTE PTR es:[edi],al
  41792b:	xor    esp,DWORD PTR [edi+0x7]
  41792e:	jp     0x417927
  417930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417931:	push   ss
  417932:	mov    edi,0xdddc783b
  417937:	es pop ecx
  417939:	imul   esi,DWORD PTR [edx],0xffffffc8
  41793c:	and    BYTE PTR [ecx+0xb2a28e],ah
	...
  4179b2:	add    BYTE PTR [eax],al
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x64a0c980]
  4179c2:	cmp    al,0xe1
  4179c4:	dec    ebp
  4179c5:	add    DWORD PTR [ecx],eax
  4179c7:	add    ch,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    BYTE PTR [edx],dh
  4179cd:	xcrypt-ecb (bad)
  4179ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179cf:	leave  
  4179d0:	mov    edi,0x8127e432
  4179d5:	cs daa 
  4179d7:	jecxz  0x41795a
  4179d9:	loop   0x417989
  4179db:	enter  0xeb75,0xf7
  4179df:	ins    BYTE PTR es:[edi],dx
  4179e0:	mov    cl,0x87
  4179e2:	neg    DWORD PTR [ecx]
  4179e4:	lods   al,BYTE PTR ds:[esi]
  4179e5:	mov    dl,0x2d
  4179e7:	mov    ah,0xb1
  4179e9:	rdseed ebx
  4179ec:	sbb    al,0x4d
  4179ee:	outs   dx,DWORD PTR ds:[esi]
  4179ef:	mov    bh,0x38
  4179f1:	sub    al,0x0
  4179f3:	add    edx,esp
  4179f5:	stos   DWORD PTR es:[edi],eax
  4179f6:	neg    DWORD PTR [ebp+0x1a]
  4179f9:	or     BYTE PTR [ecx],dl
  4179fb:	xchg   esi,eax
  4179fc:	dec    esp
  4179fd:	lea    ecx,[ecx-0x993ae39]
  417a03:	sbb    BYTE PTR [ebx+esi*4+0x10],cl
  417a07:	fisub  DWORD PTR [eax-0x346c6c7b]
  417a0d:	mov    eax,ds:0xc8f5a14
  417a12:	mov    edi,DWORD PTR [ebx+0x1f28d32b]
  417a18:	cmp    eax,0x87778754
  417a1d:	popa   
  417a1e:	lods   eax,DWORD PTR ds:[esi]
  417a1f:	xor    edi,esp
  417a21:	pop    ss
  417a22:	aas    
  417a23:	add    dl,bh
  417a25:	mov    edi,0x35b280fe
  417a2a:	pop    esi
  417a2b:	xor    esi,ecx
  417a2d:	inc    edi
  417a2e:	shl    ebp,1
  417a30:	jmp    DWORD PTR [ebx-0x31]
  417a33:	push   es
  417a34:	bound  edx,QWORD PTR [esi+0x6b]
  417a37:	(bad)  
  417a38:	mov    eax,ds:0xe12e249e
  417a3d:	dec    DWORD PTR [ebp+0x2a]
  417a40:	cmp    eax,0x4d767f5a
  417a45:	(bad)  
  417a46:	push   0x72
  417a48:	mov    WORD PTR [edi+0x4c],?
  417a4b:	cli    
  417a4c:	mov    ecx,0xf334f37e
  417a51:	sbb    al,BYTE PTR [ebp-0x35]
  417a54:	popa   
  417a55:	mov    WORD PTR [eax],ss
  417a57:	jo     0x417aa6
  417a59:	or     al,0xe1
  417a5b:	cwde   
  417a5c:	push   es
  417a5d:	aad    0x43
  417a5f:	lea    ebx,ds:0xfda0cf6d
  417a65:	jb     0x4179fb
  417a67:	daa    
  417a68:	fst    QWORD PTR [esi-0x18]
  417a6b:	inc    eax
  417a6c:	adc    al,0x47
  417a6e:	sub    al,0xa
  417a70:	les    edx,FWORD PTR [edx]
  417a72:	clc    
  417a73:	push   esi
  417a74:	(bad)  
  417a75:	inc    esi
  417a76:	mov    eax,ds:0xa4c1d1eb
  417a7b:	xchg   ecx,eax
  417a7c:	mov    al,ds:0x2b4a0905
  417a81:	and    al,0x16
  417a83:	mov    esp,DWORD PTR [ebp+edi*8-0x66]
  417a87:	jp     0x417aa5
  417a89:	test   DWORD PTR [esi-0x25],ebx
  417a8c:	dec    esp
  417a8d:	jg     0x417a36
  417a8f:	and    edx,DWORD PTR [edi+0x3d5aa787]
  417a95:	mov    al,ds:0xcb207a58
  417a9a:	xchg   esp,eax
  417a9b:	lds    ebp,FWORD PTR [ebp+0x30]
  417a9e:	xor    eax,0xee7787d9
  417aa3:	neg    bl
  417aa5:	adc    DWORD PTR [ebx],edi
  417aa7:	shl    BYTE PTR [ecx+0x76e8de33],cl
  417aad:	addr16 adc al,0x11
  417ab0:	push   edx
  417ab1:	cdq    
  417ab2:	clc    
  417ab3:	jg     0x417a77
  417ab5:	jmp    0xb63f3b18
  417aba:	push   edx
  417abb:	aas    
  417abc:	or     edi,eax
  417abe:	jg     0x417ab1
  417ac0:	dec    ecx
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0x65fef5f7
  417b41:	pop    esi
  417b42:	imul   edi,DWORD PTR ds:0x10242,0xf5
  417b4c:	inc    ebp
  417b4d:	sbb    ah,dl
  417b4f:	cwde   
  417b50:	jmp    0xaa221210
  417b55:	xor    BYTE PTR [eax+0x13],dl
  417b58:	xchg   DWORD PTR [ebp-0x636debab],esi
  417b5e:	adc    esi,DWORD PTR [eax-0x440547c5]
  417b64:	mov    eax,0xf11cc71e
  417b69:	dec    ebx
  417b6a:	in     al,0xdb
  417b6c:	push   0xe3e7c14f
  417b71:	pop    edx
  417b72:	arpl   WORD PTR [esi],ax
  417b74:	dec    esp
  417b75:	add    edx,DWORD PTR [eax-0x1b6cba00]
  417b7b:	or     DWORD PTR ds:0x763f7793,0x462246d2
  417b85:	adc    bh,bh
  417b87:	pop    ds
  417b88:	dec    edi
  417b89:	daa    
  417b8a:	in     eax,0x5f
  417b8c:	cmp    ebx,edi
  417b8e:	pop    esp
  417b8f:	sub    ch,BYTE PTR [ebx]
  417b91:	cmp    ah,BYTE PTR ds:0x914c929a
  417b97:	cmp    cl,BYTE PTR [ecx]
  417b99:	mov    eax,0x7a6bceee
  417b9e:	push   ebx
  417b9f:	bound  edi,QWORD PTR [esp+eax*8-0x48]
  417ba3:	inc    edx
  417ba4:	mov    dl,cl
  417ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ba7:	bound  edi,QWORD PTR [ecx-0x6f69fa91]
  417bad:	add    eax,0xe5040eae
  417bb2:	int    0x5d
  417bb4:	lods   al,BYTE PTR ds:[esi]
  417bb5:	pop    es
  417bb6:	out    dx,eax
  417bb7:	cmp    eax,0x85284db7
  417bbc:	mov    cl,BYTE PTR [edx]
  417bbe:	or     eax,0xbd967e50
  417bc3:	fist   WORD PTR [edi]
  417bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc6:	jno    0x417c1c
  417bc8:	cmp    eax,ebp
  417bca:	sub    ecx,DWORD PTR [esi-0x65]
  417bcd:	clc    
  417bce:	into   
  417bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bd0:	add    ebp,DWORD PTR [edi+0xbe7cab9]
  417bd6:	neg    DWORD PTR [edx]
  417bd8:	imul   BYTE PTR [ebx-0x21]
  417bdb:	mov    esp,0xce24cea2
  417be0:	into   
  417be1:	(bad)  
  417be2:	sti    
  417be3:	(bad)  
  417be5:	inc    ebp
  417be6:	push   edi
  417be7:	xchg   esi,eax
  417be8:	ja     0x417ba8
  417bea:	inc    edx
  417beb:	adc    DWORD PTR [esi+0x676a80c],esp
  417bf1:	nop
  417bf2:	loop   0x417c51
  417bf4:	scas   al,BYTE PTR es:[edi]
  417bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bf6:	scas   al,BYTE PTR es:[edi]
  417bf7:	test   BYTE PTR [ecx],ah
  417bf9:	inc    eax
  417bfa:	mov    ds:0xb8ada2eb,al
  417bff:	rcr    ah,0x32
  417c02:	mov    ax,0xc657
  417c06:	fiadd  WORD PTR [edx-0x27]
  417c09:	cmp    bh,BYTE PTR [ebx+0x7765a6b8]
  417c0f:	dec    ecx
  417c10:	jns    0x417bcc
  417c12:	or     eax,0x1a2f8cfa
  417c17:	mov    eax,DWORD PTR [edi]
  417c19:	ins    DWORD PTR es:[edi],dx
  417c1a:	cdq    
  417c1b:	jnp    0x417c1a
  417c1d:	mov    ds:0xb9ab6241,eax
  417c22:	hlt    
  417c23:	push   ss
  417c24:	push   es
  417c25:	ret    0xf7ac
  417c28:	pop    edx
  417c29:	bound  ebp,QWORD PTR [ecx+0x4b]
  417c2c:	inc    esi
  417c2d:	repz xor al,0xfa
  417c30:	mov    ch,0x75
  417c32:	add    bl,BYTE PTR [esi]
  417c34:	dec    edi
  417c35:	mov    WORD PTR [edi+edi*2+0x60],fs
  417c39:	push   ss
  417c3a:	lods   al,BYTE PTR ds:[esi]
  417c3b:	and    DWORD PTR [edi+ebp*1],edx
  417c3e:	or     ch,bl
  417c40:	aas    
	...
  417cb1:	add    BYTE PTR [eax],al
  417cb3:	add    BYTE PTR [ecx],ah
  417cb5:	xchg   ebx,eax
  417cb6:	mov    DWORD PTR [edi-0x60d84045],ebp
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    esi,edx
  417cc1:	adc    al,0x1d
  417cc3:	pop    edx
  417cc4:	aaa    
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    ch,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [edx+0x3e],cl
  417cce:	ror    cl,cl
  417cd0:	in     al,0xbd
  417cd2:	ret    0x73fc
  417cd5:	add    bl,BYTE PTR [ebp+0x16affce1]
  417cdb:	repnz mov edx,0xdb4ef67c
  417ce1:	jmp    0x3af5:0x19e727a6
  417ce8:	(bad)  
  417ce9:	repz (bad)
  417cec:	clc    
  417ced:	out    0x1f,al
  417cef:	push   0xffffff93
  417cf1:	scas   eax,DWORD PTR es:[edi]
  417cf2:	call   0xfc58:0x3027bdbe
  417cf9:	fmul   QWORD PTR [ecx]
  417cfb:	retf   
  417cfc:	sub    DWORD PTR [ebp+eax*1+0x54798116],esp
  417d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d04:	lods   al,BYTE PTR ds:[esi]
  417d05:	pop    ebp
  417d06:	mov    edi,0xfbf37173
  417d0b:	inc    ecx
  417d0c:	nop
  417d0d:	sahf   
  417d0e:	es sti 
  417d10:	adc    al,0x6c
  417d12:	add    al,0x38
  417d14:	loop   0x417d5f
  417d16:	push   0xffffffdc
  417d18:	ret    0xba1e
  417d1b:	add    eax,0x76cfd47b
  417d20:	outs   dx,DWORD PTR ds:[esi]
  417d21:	sub    bh,BYTE PTR [ecx]
  417d23:	mov    ch,0x86
  417d25:	(bad)  
  417d26:	and    al,BYTE PTR [edi+0x48e338b9]
  417d2c:	fisubr WORD PTR ds:[edx-0x55381930]
  417d33:	or     eax,DWORD PTR [esi-0x25]
  417d36:	push   ds
  417d37:	(bad)  
  417d38:	pop    ebx
  417d39:	push   ebx
  417d3a:	ins    DWORD PTR es:[edi],dx
  417d3b:	jmp    0xdd9107a9
  417d40:	inc    esp
  417d41:	inc    edx
  417d42:	cld    
  417d43:	jns    0x417d5c
  417d45:	mov    esp,0xf60fbbc6
  417d4a:	adc    ebx,DWORD PTR [ecx+0x63]
  417d4d:	sub    ecx,DWORD PTR [edx]
  417d4f:	fistp  WORD PTR [esi-0x19]
  417d52:	sahf   
  417d53:	pusha  
  417d54:	iret   
  417d55:	loopne 0x417cf7
  417d57:	inc    esp
  417d58:	and    eax,0xd18314a0
  417d5d:	loopne 0x417cf7
  417d5f:	dec    ebp
  417d60:	addr16 aaa 
  417d62:	cmp    BYTE PTR [esi+0x31],al
  417d65:	add    BYTE PTR [esi+0x4dba3a58],dh
  417d6b:	pop    esi
  417d6c:	(bad)  
  417d6d:	and    DWORD PTR [edx],ebp
  417d6f:	jecxz  0x417def
  417d71:	jle    0x417db8
  417d73:	sub    al,0xee
  417d75:	ror    DWORD PTR [eax+0x19b4b1fd],1
  417d7b:	fldenv [esi+0x5c0ef225]
  417d81:	js     0x417dfc
  417d83:	fsubr  st,st(3)
  417d85:	xor    ch,BYTE PTR [ecx+0x28f2eedd]
  417d8b:	dec    edi
  417d8c:	push   0x1d6cd460
  417d91:	out    dx,eax
  417d92:	mov    edi,DWORD PTR [edx-0x15]
  417d95:	cmp    al,BYTE PTR [ecx-0x6a]
  417d98:	daa    
  417d99:	mov    ds:0xad0e2370,al
  417d9e:	pusha  
  417d9f:	push   ecx
  417da0:	stos   DWORD PTR es:[edi],eax
  417da1:	dec    ecx
  417da2:	ret    
  417da3:	out    0x80,eax
  417da5:	xor    al,0x48
  417da7:	mov    eax,ds:0x2b292429
  417dac:	xchg   BYTE PTR gs:[edi+eiz*2],bl
  417db0:	pop    ebp
  417db1:	es push 0x60
  417db4:	mov    DWORD PTR [edi+esi*8],ecx
  417db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db8:	ins    BYTE PTR es:[edi],dx
  417db9:	repz jnp 0x417d99
  417dbc:	scas   al,BYTE PTR es:[edi]
  417dbd:	ror    DWORD PTR [edx],cl
  417dbf:	sub    eax,0x78
	...
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	test   al,0x7
  417e42:	cmp    DWORD PTR [esp+ebp*1-0xafffefc],esp
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [esi+ebp*8+0x1d128ac9],dl
  417e52:	mov    ah,0x17
  417e54:	sub    ah,dh
  417e56:	mov    eax,ds:0xc2ba4b6d
  417e5b:	adc    DWORD PTR [eax+ebp*2-0x6a7ff95e],0x2820c936
  417e66:	cdq    
  417e67:	leave  
  417e68:	mov    dh,0xa
  417e6a:	int3   
  417e6b:	mov    ch,0x64
  417e6d:	xchg   DWORD PTR [ebx+ebx*8-0x2c9d662e],ebx
  417e74:	and    BYTE PTR [ecx+edi*8+0x6c1a488d],dh
  417e7b:	imul   BYTE PTR [ecx]
  417e7d:	cld    
  417e7e:	(bad)  
  417e7f:	icebp  
  417e80:	jae    0x417ec4
  417e82:	clc    
  417e83:	add    al,0xdc
  417e85:	shl    DWORD PTR [edi-0x4c],0x3e
  417e89:	and    ch,BYTE PTR [eax+0x1b]
  417e8c:	pop    esp
  417e8d:	lods   eax,DWORD PTR ds:[esi]
  417e8e:	sti    
  417e8f:	stc    
  417e90:	aam    0xff
  417e92:	mov    ecx,0xab4ec5
  417e97:	stos   BYTE PTR es:[edi],al
  417e98:	iret   
  417e99:	jecxz  0x417e1b
  417e9b:	adc    ecx,DWORD PTR [ebx-0x237641c7]
  417ea1:	lds    ebx,FWORD PTR [eax-0x27857132]
  417ea7:	dec    esp
  417ea8:	jns    0x417eb8
  417eaa:	jge    0x417f28
  417eac:	ja     0x417e4c
  417eae:	call   0xedebb5db
  417eb3:	adc    edi,DWORD PTR [ebx-0x163c8524]
  417eb9:	sti    
  417eba:	cmp    eax,0x22b3ff6a
  417ebf:	xchg   edx,eax
  417ec0:	cmp    dl,ah
  417ec2:	mov    ch,0x7e
  417ec4:	imul   edx,DWORD PTR ds:0x45e0dcba,0x3beac356
  417ece:	jecxz  0x417e95
  417ed0:	dec    esp
  417ed1:	pusha  
  417ed2:	adc    bh,BYTE PTR [edx]
  417ed4:	mov    edx,0xe89a77ee
  417ed9:	add    dh,BYTE PTR [eax+0x5f656960]
  417edf:	clc    
  417ee0:	mov    al,0x73
  417ee2:	popf   
  417ee3:	nop
  417ee4:	add    al,0x81
  417ee6:	out    dx,eax
  417ee7:	add    eax,0xb31a0863
  417eec:	push   ebp
  417eed:	out    0xc8,eax
  417eef:	dec    edi
  417ef0:	push   eax
  417ef1:	xchg   edx,eax
  417ef2:	fcomp  DWORD PTR [esi+esi*8]
  417ef5:	push   ebp
  417ef6:	call   0xbbdf:0xadb97b70
  417efd:	jae    0x417ea5
  417eff:	sbb    BYTE PTR [edi+0x2be4eae6],0xd8
  417f06:	bound  eax,QWORD PTR [esp+esi*1]
  417f09:	jnp    0x417eb5
  417f0b:	push   ecx
  417f0c:	xor    ebx,eax
  417f0e:	dec    edi
  417f0f:	mov    ds:0xd8eb7ef9,al
  417f14:	ffree  st(6)
  417f16:	xor    al,0x89
  417f18:	xor    edi,DWORD PTR [esi+0xcb79f97]
  417f1e:	sahf   
  417f1f:	pop    ecx
  417f20:	popf   
  417f21:	mul    ch
  417f23:	xor    eax,0xd493b319
  417f28:	rcl    BYTE PTR [esi+eax*4-0x2a156cf6],0xba
  417f30:	adc    eax,0x396138e3
  417f35:	sbb    DWORD PTR [edi+0x6e728cc8],ebp
  417f3b:	pop    ebp
  417f3c:	call   0x0:0xa466d577
	...
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fc1:	daa    
  417fc2:	scas   al,BYTE PTR es:[edi]
  417fc3:	push   ds
  417fc4:	and    DWORD PTR ds:0xf50001,eax
  417fca:	add    BYTE PTR [eax],al
  417fcc:	sbb    al,0xee
  417fce:	sbb    edi,DWORD PTR [edi]
  417fd0:	cmp    ecx,edx
  417fd2:	inc    esp
  417fd3:	cmp    edx,DWORD PTR [ecx+ecx*2]
  417fd6:	and    BYTE PTR [esi],ah
  417fd8:	mov    cl,0x79
  417fda:	rcl    DWORD PTR gs:[edx+edx*8+0x68],0x2f
  417fe0:	sub    BYTE PTR [ebx+0x1a],al
  417fe3:	stos   DWORD PTR es:[edi],eax
  417fe4:	mov    esp,0xee278d96
  417fe9:	(bad)  
  417fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417feb:	ret    
  417fec:	test   BYTE PTR [eax],al
  417fee:	mov    esi,DWORD PTR [ebx+0x56aceed6]
  417ff4:	hlt    
  417ff5:	in     eax,dx
  417ff6:	cli    
  417ff7:	cmp    BYTE PTR [ebp-0x490a82c1],cl
  417ffd:	leave  
  417ffe:	inc    edx
  417fff:	xchg   dl,ah
  418001:	or     BYTE PTR [edx+0x7a],bl
  418004:	adc    edx,DWORD PTR [esi-0x38]
  418007:	mov    es,eax
  418009:	pop    esi
  41800a:	jae    0x417fa9
  41800c:	fadd   QWORD PTR [eax+0x442a245e]
  418012:	test   DWORD PTR [edi*4+0x60bb1ce0],ecx
  418019:	xchg   ebp,eax
  41801a:	dec    ebx
  41801b:	sbb    BYTE PTR [eax],0x72
  41801e:	loopne 0x417fe4
  418020:	mov    esp,0xb51701cb
  418025:	xchg   edx,eax
  418026:	cs loope 0x417ffb
  418029:	popa   
  41802a:	sbb    BYTE PTR [ebp+0x4],dl
  41802d:	and    esp,DWORD PTR [ebx-0x5713d2f7]
  418033:	push   ebx
  418034:	adc    DWORD PTR [edx],esi
  418036:	xor    DWORD PTR [ebx-0x1e],eax
  418039:	imul   edx,DWORD PTR [ecx+0x52],0xffffffc8
  41803d:	outs   dx,DWORD PTR ds:[esi]
  41803e:	inc    ebx
  41803f:	mov    dh,0xa6
  418041:	or     BYTE PTR [edi-0x3237dbba],bh
  418047:	data16 jecxz 0x418076
  41804a:	xor    ch,cl
  41804c:	sbb    ah,BYTE PTR fs:[eax]
  41804f:	jns    0x418086
  418051:	lock and DWORD PTR [ebx-0x18136a05],edi
  418058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418059:	loopne 0x41805c
  41805b:	cmp    DWORD PTR [edx],eax
  41805d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41805e:	xor    bl,BYTE PTR [ebx+edi*8-0xb]
  418062:	in     al,dx
  418063:	cli    
  418064:	mov    bl,0xbb
  418066:	dec    edx
  418067:	or     BYTE PTR [ebp-0x35],cl
  41806a:	mov    ah,0xb7
  41806c:	fcom   DWORD PTR [edi-0x25]
  41806f:	adc    al,0x41
  418071:	loop   0x418047
  418073:	pop    esp
  418074:	nop
  418075:	clc    
  418076:	ja     0x41808f
  418078:	(bad)  
  41807a:	cdq    
  41807b:	cdq    
  41807c:	xchg   ebx,eax
  41807d:	jns    0x41801f
  41807f:	push   cs
  418080:	out    0x9f,al
  418082:	int3   
  418083:	dec    eax
  418084:	out    dx,al
  418085:	add    BYTE PTR [esi+0x72b4ae21],ah
  41808b:	jmp    0x306bb218
  418090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418091:	mov    esp,0x3f18fa0b
  418096:	dec    esi
  418097:	push   0xffffffbf
  418099:	mov    edi,0x4228c0a8
  41809e:	and    ch,BYTE PTR [eax]
  4180a0:	out    dx,eax
  4180a1:	mov    bl,0xf7
  4180a3:	and    BYTE PTR [ebp+0xf9c8f6f],bh
  4180a9:	inc    esp
  4180aa:	and    eax,0x9b5343c8
  4180af:	or     al,0x5a
  4180b1:	das    
  4180b2:	repz push 0x51
  4180b5:	cwde   
  4180b6:	mov    al,ds:0x14edf02e
  4180bb:	(bad)  
  4180bd:	sub    BYTE PTR [esp+ebx*8+0xf0],dl
	...
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	mov    cl,0x14
  418142:	and    eax,0x1061696
  418147:	add    ch,dh
  418149:	add    BYTE PTR [eax],al
  41814b:	add    BYTE PTR [ecx],ah
  41814d:	xchg   ebp,eax
  41814e:	scas   al,BYTE PTR es:[edi]
  41814f:	pop    ds
  418150:	and    al,0x78
  418152:	pop    ss
  418153:	outs   dx,DWORD PTR ds:[esi]
  418154:	in     eax,0xcf
  418156:	xor    BYTE PTR fs:[edi+0x77],al
  41815a:	add    DWORD PTR [ebx+ebx*2],0xdbb070b4
  418161:	das    
  418162:	jl     0x418160
  418164:	bnd jnp 0x418111
  418167:	ins    DWORD PTR es:[edi],dx
  418168:	loopne 0x418164
  41816a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41816b:	(bad)  
  41816c:	scas   eax,DWORD PTR es:[edi]
  41816d:	popf   
  41816e:	test   DWORD PTR [eax+eax*2+0x1682acbd],esi
  418175:	jge    0x4181e8
  418177:	addr16 mov dl,0x5b
  41817a:	pop    edi
  41817b:	and    BYTE PTR [ebx+0x54],bh
  41817e:	pop    esp
  41817f:	sti    
  418180:	fcmovbe st,st(2)
  418182:	mov    ebx,0xd481d9c3
  418187:	sub    ebp,DWORD PTR [ebx]
  418189:	fbstp  TBYTE PTR [edx]
  41818b:	xlat   BYTE PTR ds:[ebx]
  41818c:	ja     0x418170
  41818e:	xchg   sp,ax
  418190:	add    al,0x70
  418192:	iret   
  418193:	jno    0x4181bb
  418195:	xchg   ecx,eax
  418196:	retf   0x1e21
  418199:	mov    edi,tr0
  41819c:	push   0x41
  41819e:	clc    
  41819f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a0:	pop    esi
  4181a1:	mov    eax,ds:0xb4895d90
  4181a6:	(bad)  
  4181a7:	ins    DWORD PTR es:[edi],dx
  4181a8:	sbb    al,0xed
  4181aa:	add    edx,DWORD PTR [ebx+esi*8-0x46511e1d]
  4181b1:	out    dx,al
  4181b2:	dec    edi
  4181b3:	jbe    0x418173
  4181b5:	push   0xfd85b854
  4181ba:	dec    ecx
  4181bb:	fadd   QWORD PTR [ebp-0x5b]
  4181be:	sub    DWORD PTR [edx+0x43d9f0d7],ecx
  4181c4:	jp     0x41817f
  4181c6:	in     al,0x4d
  4181c8:	ja     0x41820b
  4181ca:	outs   dx,BYTE PTR ds:[esi]
  4181cb:	inc    edx
  4181cc:	popf   
  4181cd:	aam    0x82
  4181cf:	inc    ebx
  4181d0:	call   0x1af53874
  4181d5:	nop
  4181d6:	into   
  4181d7:	jae    0x418189
  4181d9:	mov    BYTE PTR [edi-0x6724b741],al
  4181df:	or     BYTE PTR [edi+0x4],bl
  4181e2:	xor    eax,ecx
  4181e4:	(bad)  
  4181e5:	into   
  4181e6:	and    DWORD PTR [eax+edi*1],esp
  4181e9:	mov    ch,0x87
  4181eb:	jmp    0x418221
  4181ed:	jns    0x41817c
  4181ef:	sub    BYTE PTR ds:0xa3d59c0b,bl
  4181f5:	in     eax,0x3f
  4181f7:	fldenv [esi-0x45]
  4181fa:	ins    DWORD PTR es:[edi],dx
  4181fb:	mov    dh,0x41
  4181fd:	xchg   edx,eax
  4181fe:	leave  
  4181ff:	and    dh,BYTE PTR [ecx+0x4c]
  418202:	add    DWORD PTR [ebx],edi
  418204:	adc    esi,DWORD PTR [ebx+ebp*2-0x38]
  418208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418209:	fimul  WORD PTR ds:0xe1b1b73a
  41820f:	mov    ah,0x36
  418211:	mov    dh,0xf
  418213:	sbb    dh,dh
  418215:	ins    DWORD PTR es:[edi],dx
  418216:	je     0x4181c9
  418218:	cmp    DWORD PTR [eax+0xb582ed5],edi
  41821e:	mov    al,ds:0x5151c5ec
  418223:	sub    ecx,ecx
  418225:	int    0x97
  418227:	xor    eax,0x3480cb9c
  41822c:	gs inc esi
  41822e:	fld    DWORD PTR [ebp-0x5b]
  418231:	test   eax,0x927da873
  418236:	rol    DWORD PTR [esp+edx*8+0x744831be],0x28
  41823e:	call   0x0:0x306f
	...
  4182b1:	add    BYTE PTR [eax],al
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	test   ah,ch
  4182c2:	jge    0x41833c
  4182c4:	or     eax,DWORD PTR [edi]
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	cmc    
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [eax],ch
  4182cd:	in     eax,dx
  4182ce:	icebp  
  4182cf:	push   edi
  4182d0:	sahf   
  4182d1:	mov    bl,0xc9
  4182d3:	dec    ebp
  4182d4:	data16 sub BYTE PTR [eax+0x2c7aa28d],bh
  4182db:	cmc    
  4182dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182dd:	loopne 0x418278
  4182df:	or     al,0x1e
  4182e1:	bswap  ebx
  4182e3:	jnp    0x41826a
  4182e5:	data16 loopne 0x41829f
  4182e8:	pusha  
  4182e9:	xor    al,0x33
  4182eb:	push   cs
  4182ec:	xor    al,0x50
  4182ee:	mov    cs,WORD PTR [eax]
  4182f0:	lds    ebp,FWORD PTR [ebp+0x16]
  4182f3:	xchg   ebx,eax
  4182f4:	test   al,0xaa
  4182f6:	sbb    ecx,DWORD PTR [ebp-0x52]
  4182f9:	ret    
  4182fa:	sahf   
  4182fb:	mov    ds:0xfe42482f,eax
  418300:	dec    edx
  418301:	push   cs
  418302:	pop    esp
  418303:	rol    BYTE PTR [edx-0x31],cl
  418306:	inc    edi
  418307:	dec    esi
  418308:	pop    esi
  418309:	retf   0xc367
  41830c:	cdq    
  41830d:	aaa    
  41830e:	push   0x3866f894
  418313:	xchg   ecx,eax
  418314:	cwde   
  418315:	sbb    edi,DWORD PTR [ebx-0xc]
  418318:	adc    eax,0x1ad9e496
  41831d:	adc    eax,0xa04c1eda
  418322:	fmul   DWORD PTR [ecx+0x6727e15d]
  418328:	cmp    DWORD PTR [esi+eax*2],eax
  41832b:	inc    esp
  41832c:	lahf   
  41832d:	les    edi,FWORD PTR [esi+0x2e51db93]
  418333:	ss cli 
  418335:	fdivr  st,st(4)
  418337:	aas    
  418338:	clc    
  418339:	or     al,0xe6
  41833b:	mov    ds:0xebd5e9a1,al
  418340:	in     al,dx
  418341:	xchg   esi,eax
  418342:	sub    edx,0x72
  418345:	ret    0xcf6c
  418348:	and    al,0x8d
  41834a:	add    DWORD PTR [ecx-0x1f],edx
  41834d:	jmp    0x9327adc9
  418352:	(bad)  
  418353:	sti    
  418354:	(bad)  
  418355:	repnz and dl,BYTE PTR [edi+0x47]
  418359:	jl     0x418308
  41835b:	lods   al,BYTE PTR ds:[esi]
  41835c:	inc    ebx
  41835d:	imul   BYTE PTR [edx]
  41835f:	xchg   edx,eax
  418360:	div    BYTE PTR [ebx-0x2d]
  418363:	stos   DWORD PTR es:[edi],eax
  418364:	xlat   BYTE PTR ds:[ebx]
  418365:	xchg   ebx,edi
  418367:	adc    bl,BYTE PTR [eax+0x1dcf39dd]
  41836d:	ja     0x4183b2
  41836f:	jge    0x4183e8
  418371:	out    0xdc,eax
  418373:	out    dx,al
  418374:	inc    ebx
  418375:	push   eax
  418376:	inc    edx
  418377:	mov    WORD PTR [ebx],es
  418379:	mov    eax,fs
  41837b:	fcom   QWORD PTR [esi-0x2d28c86f]
  418381:	cmp    DWORD PTR [edx-0x323cf693],eax
  418387:	cdq    
  418388:	or     DWORD PTR [eax-0x6a9bae12],ebx
  41838e:	jmp    0xa79b01d0
  418393:	mov    eax,DWORD PTR [eax-0x7a]
  418396:	jns    0x418361
  418398:	clc    
  418399:	dec    edx
  41839a:	xlat   BYTE PTR ds:[ebx]
  41839b:	inc    edi
  41839c:	and    al,0x5b
  41839e:	jno    0x4183be
  4183a0:	push   eax
  4183a1:	(bad)  
  4183a2:	sub    al,0xeb
  4183a4:	inc    ebx
  4183a5:	dec    ebp
  4183a6:	push   esp
  4183a7:	jmp    0x313f891b
  4183ac:	push   esp
  4183ad:	(bad)  
  4183ae:	mov    eax,0x869daeaf
  4183b3:	aam    0xc8
  4183b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b6:	sub    al,0x12
  4183b8:	mov    ebp,0x36b6a7c4
  4183bd:	scas   eax,DWORD PTR es:[edi]
  4183be:	sar    DWORD PTR ds:0xdf,cl
	...
  418434:	xchg   ecx,eax
  418435:	mov    edx,0xdc6b0c6a
  41843a:	idiv   DWORD PTR [edi-0x233270d3]
  418440:	ds mov dl,0xa2
  418443:	imul   eax,DWORD PTR [eax],0xf5000108
  418449:	add    BYTE PTR [eax],al
  41844b:	add    al,ch
  41844d:	xor    cl,BYTE PTR [ebx+eiz*1]
  418450:	aad    0x89
  418452:	or     ah,0x56
  418455:	add    BYTE PTR [edi-0x6d],bh
  418458:	sbb    eax,0xddfc0c27
  41845d:	nop
  41845e:	scas   eax,DWORD PTR es:[edi]
  41845f:	mov    dh,BYTE PTR [ebx-0x53ed017a]
  418465:	clc    
  418466:	lock scas al,BYTE PTR es:[edi]
  418468:	mov    BYTE PTR ds:0x1cd0b230,dh
  41846e:	sub    al,0xa9
  418470:	mov    eax,ds:0xcf62dfdb
  418475:	retf   
  418476:	mov    bh,ch
  418478:	push   esp
  418479:	(bad)  
  41847a:	jo     0x4184ac
  41847c:	push   edi
  41847d:	test   BYTE PTR [ecx-0x80],dl
  418480:	jg     0x41849c
  418482:	or     BYTE PTR [eax-0x686fbe7b],bh
  418488:	push   ebp
  418489:	adc    DWORD PTR [edx-0x713ba5b6],0x8620d97f
  418493:	aaa    
  418494:	add    eax,0x46312b04
  418499:	mov    DWORD PTR [ebp+0x73],edx
  41849c:	cdq    
  41849d:	adc    al,0xb0
  41849f:	sub    eax,0x9c1430c
  4184a4:	adc    BYTE PTR [ebp-0x675f0e9d],dl
  4184aa:	or     BYTE PTR [ebp-0x76d2d004],al
  4184b0:	mov    edx,0x8633f267
  4184b5:	push   0xce78246d
  4184ba:	push   ss
  4184bb:	inc    esp
  4184bc:	jmp    0x73b4f174
  4184c1:	jns    0x4184f5
  4184c3:	mov    al,ds:0x21748907
  4184c8:	pushf  
  4184c9:	push   eax
  4184ca:	(bad)  
  4184cb:	ffree  st(3)
  4184cd:	xor    al,0x81
  4184cf:	cmp    BYTE PTR [edi+0x49],0xb5
  4184d3:	fild   WORD PTR [edi]
  4184d5:	in     al,dx
  4184d6:	xchg   edi,eax
  4184d7:	ret    
  4184d8:	jnp    0x4184b6
  4184da:	popf   
  4184db:	out    dx,al
  4184dc:	push   esi
  4184dd:	ja     0x41850d
  4184df:	icebp  
  4184e0:	jne    0x418520
  4184e2:	sub    BYTE PTR [ecx+0xf],0xde
  4184e6:	mov    ebx,0x62f5b182
  4184eb:	in     eax,dx
  4184ec:	adc    esp,ebx
  4184ee:	pop    ss
  4184ef:	push   eax
  4184f0:	push   esp
  4184f1:	test   eax,0xee2e9b8
  4184f6:	inc    esp
  4184f7:	call   0x7127:0xfdb9f18a
  4184fe:	mov    BYTE PTR [edi],ch
  418500:	je     0x4184e5
  418502:	mov    ds:0x83156482,al
  418507:	push   edx
  418508:	iret   
  418509:	mov    BYTE PTR [edx-0x3d84c577],ch
  41850f:	aaa    
  418510:	sub    al,0x7b
  418512:	je     0x418535
  418514:	push   cs
  418515:	cmp    bl,BYTE PTR [edx-0x7c1146c6]
  41851b:	bswap  eax
  41851d:	stc    
  41851e:	loop   0x41856e
  418520:	push   esp
  418521:	jg     0x41857e
  418523:	outs   dx,BYTE PTR ds:[esi]
  418524:	jl     0x4184a6
  418526:	pop    es
  418527:	int    0xa6
  418529:	dec    ebp
  41852a:	push   0x183bd38e
  41852f:	and    eax,0x19adabf9
  418534:	fdiv   QWORD PTR [edi+edi*4+0x67fa3cd3]
  41853b:	sti    
  41853c:	sbb    BYTE PTR [ecx-0x34],ah
  41853f:	mov    ebp,0x2e
	...
  4185b4:	test   eax,0xdf4fd367
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	shl    BYTE PTR ds:0x8f5e870,cl
  4185c6:	add    DWORD PTR [eax],eax
  4185c8:	cmc    
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [edx-0x652f95e3],bl
  4185d1:	xchg   ebx,eax
  4185d2:	stos   BYTE PTR es:[edi],al
  4185d3:	fnsave [edi-0x19]
  4185d6:	jno    0x418630
  4185d8:	leave  
  4185d9:	out    0xec,eax
  4185db:	lods   eax,DWORD PTR ds:[esi]
  4185dc:	das    
  4185dd:	jno    0x4185d1
  4185df:	mov    edx,0xd1434f76
  4185e4:	pop    ss
  4185e5:	fs daa 
  4185e7:	mov    ecx,0x1da1da3e
  4185ec:	pop    ecx
  4185ed:	lahf   
  4185ee:	je     0x418620
  4185f0:	out    0xc1,al
  4185f2:	fimul  DWORD PTR [edi+0x9]
  4185f5:	dec    eax
  4185f6:	inc    ecx
  4185f7:	push   eax
  4185f8:	in     eax,dx
  4185f9:	xor    ebp,DWORD PTR [eax+0x12d555e8]
  4185ff:	fstp   st(5)
  418601:	mov    ch,0x82
  418603:	inc    eax
  418604:	inc    edi
  418605:	test   ecx,esp
  418607:	mov    al,ds:0x3360f330
  41860c:	or     eax,edx
  41860e:	and    ebp,ecx
  418610:	(bad)  
  418611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418612:	xchg   DWORD PTR [esi],esp
  418614:	ss xchg ecx,eax
  418616:	loopne 0x4185a9
  418618:	dec    ebp
  418619:	shr    ah,0x9a
  41861c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41861d:	xchg   esi,eax
  41861e:	imul   ebx,DWORD PTR [esi+0x1f],0xe39469
  418625:	ss mov ch,0x46
  418628:	mov    WORD PTR [edx],?
  41862a:	mov    ds:0x9f6642de,eax
  41862f:	pop    ecx
  418630:	pop    ebp
  418631:	mov    cl,0x37
  418633:	jp     0x41862c
  418635:	mov    ds:0xdcd24c5,eax
  41863a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41863b:	xchg   ebp,eax
  41863c:	jns    0x4186b8
  41863e:	push   ds
  41863f:	out    dx,eax
  418640:	xor    al,0x10
  418642:	jmp    0x41864b
  418644:	mov    bl,BYTE PTR [edx-0x1d]
  418647:	nop
  418648:	pop    ebp
  418649:	inc    ebp
  41864a:	xchg   DWORD PTR [ecx],eax
  41864c:	pop    ss
  41864d:	shr    DWORD PTR [eax],1
  41864f:	mov    dl,0xca
  418651:	sub    DWORD PTR [edi],0x233bb98d
  418657:	fstp   TBYTE PTR [edi]
  418659:	pop    ss
  41865a:	imul   ebx,DWORD PTR [edx],0x15d55c82
  418660:	mov    ds:0xaf3d6cde,al
  418665:	pop    eax
  418666:	or     eax,0x4bcec77b
  41866b:	test   al,0xa8
  41866d:	loope  0x4186e3
  41866f:	adc    al,0x5e
  418671:	add    al,0xc9
  418673:	xor    cl,0x38
  418676:	lock dec eax
  418678:	sub    edi,DWORD PTR [eax-0x3b]
  41867b:	stos   BYTE PTR es:[edi],al
  41867c:	loop   0x4186f7
  41867e:	add    DWORD PTR [edx],0xffffffd4
  418681:	in     al,dx
  418682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418683:	je     0x418611
  418685:	adc    cl,al
  418687:	mov    ebx,0x5d5b310f
  41868c:	push   0x11
  41868e:	mov    ah,0x25
  418690:	sbb    eax,0xe0685e8b
  418695:	dec    eax
  418696:	stos   DWORD PTR es:[edi],eax
  418697:	xchg   ebx,eax
  418698:	or     DWORD PTR [eax+eax*2+0x7615f2d9],esi
  41869f:	mov    ebx,0x1250f245
  4186a4:	cdq    
  4186a5:	mov    cl,0xe9
  4186a7:	dec    ebp
  4186a8:	std    
  4186a9:	adc    dh,BYTE PTR [ecx-0x2ff612c]
  4186af:	jo     0x418648
  4186b1:	idiv   BYTE PTR [edi]
  4186b3:	cmp    eax,0x4dcd3c5d
  4186b8:	fidiv  DWORD PTR [ebx+edi*1-0x75f3ad63]
  4186bf:	ins    DWORD PTR es:[edi],dx
  4186c0:	xchg   ecx,eax
	...
  418731:	add    BYTE PTR [eax],al
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    edx,DWORD PTR [edi-0x1583d395]
  418745:	or     DWORD PTR [ecx],eax
  418747:	add    ch,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    dh,cl
  41874d:	pop    ss
  41874e:	add    ebx,DWORD PTR [ecx-0xb]
  418751:	pop    ebp
  418752:	jg     0x418735
  418754:	and    al,0x31
  418756:	or     eax,0x2d3e5b2f
  41875b:	daa    
  41875c:	fs aad 0x62
  41875f:	jnp    0x41876e
  418761:	icebp  
  418762:	ins    DWORD PTR es:[edi],dx
  418763:	sbb    DWORD PTR [ebx],edx
  418765:	cdq    
  418766:	or     cl,BYTE PTR [edi-0x2f]
  418769:	push   cs
  41876a:	dec    ebx
  41876b:	mov    al,BYTE PTR [esi-0xa08949]
  418771:	jmp    0x5296de37
  418776:	jp     0x418798
  418778:	(bad)  
  418779:	out    dx,eax
  41877a:	pusha  
  41877b:	jg     0x4187df
  41877d:	mov    edi,0xb46d4dfd
  418782:	sbb    ch,BYTE PTR [ecx]
  418784:	inc    si
  418786:	ja     0x418793
  418788:	outs   dx,DWORD PTR ds:[esi]
  418789:	test   al,0x37
  41878b:	pop    DWORD PTR [esi+0x3b]
  41878e:	mov    ecx,0x673baecf
  418793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418794:	fbld   TBYTE PTR [ecx]
  418796:	xchg   esp,eax
  418797:	xor    BYTE PTR [ecx-0x6c],al
  41879a:	retf   
  41879b:	dec    esi
  41879c:	adc    dl,ch
  41879e:	push   ds
  41879f:	stos   DWORD PTR es:[edi],eax
  4187a0:	jae    0x41874a
  4187a2:	test   DWORD PTR [esi],eax
  4187a4:	lahf   
  4187a5:	jmp    0xd1e9110a
  4187aa:	pop    DWORD PTR [eax+ebp*2]
  4187ad:	jb     0x41877c
  4187af:	inc    ebx
  4187b0:	mov    BYTE PTR [esi*4-0x6ab2b9c5],bl
  4187b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b8:	sbb    eax,0x5a8a4979
  4187bd:	and    eax,0xa5a07ee
  4187c2:	push   ds
  4187c3:	pusha  
  4187c4:	or     DWORD PTR [ebp+0xd624ef3],esp
  4187ca:	or     bh,BYTE PTR ds:0x578fe7b
  4187d0:	sbb    edi,DWORD PTR [ebx-0x6eec3b03]
  4187d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d7:	sbb    BYTE PTR [edx+0x461e352],0x54
  4187de:	pop    eax
  4187df:	jmp    0x9e94b3ea
  4187e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e5:	sub    DWORD PTR [esi],esp
  4187e7:	mov    WORD PTR [ecx+0x12],ss
  4187ea:	iret   
  4187eb:	push   cs
  4187ec:	(bad)  
  4187ed:	push   ecx
  4187ee:	out    0x52,eax
  4187f0:	dec    esp
  4187f1:	sub    al,0x40
  4187f3:	inc    ecx
  4187f4:	mov    edx,DWORD PTR [esp+esi*2]
  4187f7:	add    eax,0xc046d7ba
  4187fc:	mov    bl,0xd4
  4187fe:	pop    ebx
  4187ff:	aam    0xdf
  418801:	jge    0x418818
  418803:	mov    ah,0xf2
  418805:	lds    eax,FWORD PTR [edx+0x4d]
  418808:	mov    dh,0x4c
  41880a:	je     0x4187eb
  41880c:	mov    al,BYTE PTR [edx-0x2486029f]
  418812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418813:	and    al,0x84
  418815:	inc    edi
  418816:	mov    DWORD PTR [esi],edx
  418818:	push   DWORD PTR [ebx-0x77ae10bb]
  41881e:	jp     0x418861
  418820:	loope  0x41880e
  418822:	repz push cs
  418824:	jns    0x4187f8
  418826:	(bad)  
  418828:	mov    al,BYTE PTR [edx-0x750d75a]
  41882e:	mov    bh,0x6d
  418830:	into   
  418831:	arpl   WORD PTR [ebp-0x6b],ax
  418834:	aam    0x5d
  418836:	jne    0x4188b0
  418838:	jmp    0xba0ed3df
  41883d:	nop
  41883e:	pop    ecx
  41883f:	outs   dx,BYTE PTR ds:[esi]
  418840:	mov    WORD PTR [eax],es
	...
  4188b2:	add    BYTE PTR [eax],al
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0x7c164932,al
  4188c3:	or     ebx,edi
  4188c5:	or     al,BYTE PTR [ecx]
  4188c7:	add    ch,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    al,dh
  4188cd:	sub    BYTE PTR [edi-0xa],al
  4188d0:	and    DWORD PTR [eax-0x4bd1792],esi
  4188d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188d7:	repnz call FWORD PTR [ecx-0x1e66bdef]
  4188de:	xlat   BYTE PTR ds:[ebx]
  4188df:	mov    dh,0xaf
  4188e1:	popf   
  4188e2:	jp     0x41894a
  4188e4:	shr    DWORD PTR [ecx+eax*1+0x5f3773ce],0x76
  4188ec:	jle    0x41895d
  4188ee:	add    al,0x62
  4188f0:	(bad)  
  4188f1:	jmp    0x418965
  4188f3:	jmp    0x418931
  4188f5:	mov    ebp,0x5bd8b64b
  4188fa:	mov    ss,WORD PTR [esi]
  4188fc:	(bad)  
  4188fd:	fcmovnbe st,st(0)
  4188ff:	mov    esi,0xd0568090
  418904:	mov    eax,0xb624565f
  418909:	(bad)  
  41890a:	cmp    eax,0x17fca6e
  41890f:	push   ebx
  418910:	bound  esi,QWORD PTR [esi]
  418912:	lods   al,BYTE PTR ds:[esi]
  418913:	xor    eax,0xcc577210
  418918:	jns    0x4188d2
  41891a:	stc    
  41891b:	jb     0x4188fa
  41891d:	mov    esi,0xc9a8e931
  418922:	clc    
  418923:	or     al,BYTE PTR [ebx]
  418925:	mov    dh,0xa7
  418927:	pop    edi
  418928:	ds mov esi,0x2de76141
  41892e:	les    esi,FWORD PTR [ebp+0x69ad74cb]
  418934:	pop    eax
  418935:	dec    ecx
  418936:	push   ss
  418937:	push   es
  418938:	inc    eax
  418939:	clc    
  41893a:	push   edx
  41893b:	fdivr  QWORD PTR [eax+0x56]
  41893e:	out    0xde,eax
  418940:	movups XMMWORD PTR [ecx],xmm3
  418943:	jmp    0x418944
  418945:	dec    esp
  418946:	jmp    0xe4b4:0xd1a60d57
  41894d:	or     ebx,DWORD PTR fs:[eax+0x20]
  418951:	jg     0x4189b0
  418953:	lods   eax,DWORD PTR ds:[esi]
  418954:	pushf  
  418955:	out    dx,al
  418956:	dec    esi
  418957:	sub    dl,dl
  418959:	sub    bh,ah
  41895b:	inc    edx
  41895c:	cdq    
  41895d:	popa   
  41895e:	fwait
  41895f:	cmp    BYTE PTR [ebp+0x62ddc99e],ch
  418965:	mov    dl,0xb6
  418967:	nop
  418968:	push   edi
  418969:	enter  0xf1fd,0x11
  41896d:	adc    dl,BYTE PTR [eax+eax*1+0x2c]
  418971:	mov    dh,0xc6
  418973:	pop    ebp
  418974:	ds jbe 0x4189d2
  418977:	sub    eax,0x5feead3e
  41897c:	cwde   
  41897d:	dec    esi
  41897e:	cmp    eax,0x49cc5d73
  418983:	sub    DWORD PTR [eax-0x2441a986],esi
  418989:	int3   
  41898a:	inc    edi
  41898b:	lahf   
  41898c:	xor    esp,edi
  41898e:	rep ins DWORD PTR es:[edi],dx
  418990:	sar    BYTE PTR [edi-0x45b832b0],1
  418996:	stc    
  418997:	addr16 push es
  418999:	fdiv   DWORD PTR [edi]
  41899b:	cmc    
  41899c:	in     eax,0x5d
  41899e:	mov    dl,0x49
  4189a0:	inc    esi
  4189a1:	mov    ebx,0x6debcb1e
  4189a6:	mov    bl,0xca
  4189a8:	call   0x4874:0xebb9b44e
  4189af:	(bad)  [edx]
  4189b1:	sbb    edi,DWORD PTR [ebx-0x4a6a780d]
  4189b7:	add    edx,eax
  4189b9:	lock fidivr WORD PTR cs:[eax+edi*4-0x56]
  4189bf:	jmp    0x0:0x6a
	...
  418a32:	add    BYTE PTR [eax],al
  418a34:	das    
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	sub    al,0xf1
  418a42:	not    dl
  418a44:	aam    0xb
  418a46:	add    DWORD PTR [eax],eax
  418a48:	cmc    
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [ebx+0x77],dl
  418a4e:	(bad)  
  418a4f:	fdiv   st(3),st
  418a51:	mov    esi,0x3224cd2a
  418a56:	scas   al,BYTE PTR es:[edi]
  418a57:	sbb    al,0x2c
  418a59:	dec    edi
  418a5a:	js     0x4189f2
  418a5c:	shl    BYTE PTR [bp+di-0x38],1
  418a60:	add    al,0x95
  418a62:	fild   QWORD PTR [esi+0x23]
  418a65:	shr    BYTE PTR [ecx],0x56
  418a68:	xlat   BYTE PTR ds:[ebx]
  418a69:	and    ebx,esi
  418a6b:	xor    bh,ch
  418a6d:	xor    eax,0x6ad017bc
  418a72:	xor    al,0x7f
  418a74:	aam    0xc7
  418a76:	cmp    dh,BYTE PTR [ebx+0x279a3dba]
  418a7c:	pusha  
  418a7d:	add    dh,dh
  418a7f:	ins    DWORD PTR es:[edi],dx
  418a80:	push   0xfffffff9
  418a82:	sub    al,0xed
  418a84:	paddsw mm5,mm4
  418a87:	and    DWORD PTR [ecx+ecx*2-0x559d93b7],eax
  418a8e:	adc    esp,ebx
  418a90:	js     0x418a8b
  418a92:	adc    eax,0x31a45913
  418a97:	call   0x86bd7236
  418a9c:	inc    ecx
  418a9d:	sub    dh,BYTE PTR [esi]
  418a9f:	daa    
  418aa0:	in     eax,0x80
  418aa2:	int    0xa0
  418aa4:	(bad)  
  418aa5:	repnz add eax,0x7e05e58f
  418aab:	mov    ebx,0x977950d2
  418ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab1:	aaa    
  418ab2:	aad    0x60
  418ab4:	pop    esp
  418ab5:	add    al,0x8
  418ab7:	retf   
  418ab8:	cmp    bl,ah
  418aba:	push   eax
  418abb:	mov    edi,0xefa2930d
  418ac0:	dec    edx
  418ac1:	ret    0xd0fb
  418ac4:	inc    edi
  418ac5:	and    ch,al
  418ac7:	sar    BYTE PTR [ebx],1
  418ac9:	push   edx
  418aca:	jo     0x418b17
  418acc:	inc    esp
  418acd:	mov    ?,ecx
  418acf:	sub    al,bh
  418ad1:	push   esi
  418ad2:	fnstsw WORD PTR [esi+0x64]
  418ad5:	retf   0x2870
  418ad8:	fldcw  WORD PTR [eax+eiz*4-0xd2e3f83]
  418adf:	lods   al,BYTE PTR ds:[esi]
  418ae0:	mov    WORD PTR [edx+0x65],es
  418ae3:	inc    esp
  418ae4:	mov    ebx,0xb633d10
  418ae9:	aaa    
  418aea:	pop    ecx
  418aeb:	shr    DWORD PTR [eax-0x19fb78bf],0x97
  418af2:	jns    0x418a76
  418af4:	and    eax,0x8af49f8b
  418af9:	fild   QWORD PTR [edx]
  418afb:	dec    edi
  418afc:	les    esp,FWORD PTR [eax+0x43]
  418aff:	aad    0xa6
  418b01:	mov    dh,0x1f
  418b03:	fldcw  WORD PTR [esi-0x34f790c1]
  418b09:	(bad)  
  418b0a:	mov    esp,0x2a7a1685
  418b0f:	scas   al,BYTE PTR es:[edi]
  418b10:	ror    BYTE PTR [esi+0x45c20c98],1
  418b16:	mov    al,0x3a
  418b18:	(bad)  
  418b19:	out    0xb4,al
  418b1b:	and    BYTE PTR [eax-0x24],0x3c
  418b1f:	mov    esp,0x2508d72d
  418b24:	gs lahf 
  418b26:	cmp    al,0xdd
  418b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b29:	mov    ds:0x90a3f22b,al
  418b2e:	pop    edi
  418b2f:	xchg   ebp,eax
  418b30:	cmc    
  418b31:	scas   al,BYTE PTR es:[edi]
  418b32:	jp     0x418b82
  418b34:	test   bh,cl
  418b36:	push   esi
  418b37:	in     eax,dx
  418b38:	dec    DWORD PTR [ecx-0x4e]
  418b3b:	leave  
  418b3c:	or     BYTE PTR [eax-0x27],dh
  418b3f:	or     eax,0xf4
	...
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	sahf   
  418bc1:	stos   BYTE PTR es:[edi],al
  418bc2:	mov    bl,0x61
  418bc4:	leave  
  418bc5:	or     al,0x1
  418bc7:	add    ch,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [edi-0x1f],dh
  418bce:	ret    0x38eb
  418bd1:	sub    eax,0x364ff1be
  418bd6:	xchg   DWORD PTR [edx-0x6fb6ab38],ebx
  418bdc:	popf   
  418bdd:	call   0xb8e1:0xd8f99b84
  418be4:	jno    0x418b91
  418be6:	lahf   
  418be7:	dec    ecx
  418be8:	inc    ebx
  418bea:	pop    es
  418beb:	sub    DWORD PTR [eax+0x177abc09],0xe9900d52
  418bf5:	adc    bl,BYTE PTR [esi]
  418bf7:	out    0xa5,eax
  418bf9:	fmul   QWORD PTR [edx+0x3152fa4a]
  418bff:	repnz push 0x1f
  418c02:	popa   
  418c03:	popa   
  418c04:	into   
  418c05:	fs push 0xffffffee
  418c08:	test   BYTE PTR [edx],bl
  418c0a:	pop    ss
  418c0b:	xor    esp,DWORD PTR [ecx+edi*1]
  418c0e:	ja     0x418c29
  418c10:	icebp  
  418c11:	adc    eax,0xada26d36
  418c16:	hlt    
  418c17:	and    bh,BYTE PTR [ecx-0x428afb88]
  418c1d:	mov    ss,WORD PTR [eax+0x33bdf54e]
  418c23:	adc    al,0x1
  418c25:	pop    esp
  418c26:	dec    esp
  418c27:	and    eax,0xe3ceaba6
  418c2c:	pop    ebp
  418c2d:	in     eax,dx
  418c2e:	aam    0x6e
  418c30:	outs   dx,BYTE PTR ds:[esi]
  418c31:	and    DWORD PTR [ebp-0x5f616dcc],eax
  418c37:	icebp  
  418c38:	js     0x418c59
  418c3a:	bound  esi,QWORD PTR [ebx+0x6c]
  418c3d:	mov    esp,0x4a7e962c
  418c42:	and    esi,ecx
  418c44:	sbb    al,0xce
  418c46:	hlt    
  418c47:	retf   
  418c48:	cdq    
  418c49:	das    
  418c4a:	aas    
  418c4b:	sbb    DWORD PTR [ebx+0x28],0x79
  418c4f:	nop
  418c50:	aad    0x21
  418c52:	cdq    
  418c53:	sti    
  418c54:	repz leave 
  418c56:	inc    ebp
  418c57:	call   0x5ea94248
  418c5c:	add    al,0x7e
  418c5e:	mov    ecx,0x323e5a3c
  418c63:	data16 cmp al,0xe8
  418c66:	inc    esi
  418c67:	sub    BYTE PTR [ebx+0x35b9f855],dl
  418c6d:	sbb    eax,0xd206f17d
  418c72:	jo     0x418c66
  418c74:	or     al,ch
  418c76:	pop    ebx
  418c77:	out    0x12,al
  418c79:	inc    edx
  418c7a:	mov    esi,0xb994c67d
  418c7f:	hlt    
  418c80:	mov    edx,0xbd857dc0
  418c85:	repz adc al,0x7c
  418c88:	or     BYTE PTR [eax-0x52],bl
  418c8b:	les    eax,FWORD PTR [ebx+0x23]
  418c8e:	pop    ss
  418c8f:	xchg   esp,eax
  418c90:	std    
  418c91:	dec    edi
  418c92:	sub    dl,BYTE PTR [edi-0x3b64ee71]
  418c98:	je     0x418c60
  418c9a:	(bad)  [ebx-0x21]
  418c9d:	or     BYTE PTR [edx+0xe8c32bf],dl
  418ca3:	in     eax,0x69
  418ca5:	jg     0x418c8d
  418ca7:	push   es
  418ca8:	pop    ss
  418ca9:	rcl    eax,0xbf
  418cac:	add    DWORD PTR [ecx+0x7003b77],0xf6a99d46
  418cb6:	add    ebx,DWORD PTR [edi-0x7a9318b0]
  418cbc:	pop    ebx
  418cbd:	mov    ch,0x2d
  418cbf:	call   DWORD PTR [ebx+0x0]
	...
  418d32:	add    BYTE PTR [eax],al
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x19401a61
  418d43:	ins    BYTE PTR es:[edi],dx
  418d44:	mov    esi,0xf500010d
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    BYTE PTR [ecx],cl
  418d4d:	pop    es
  418d4e:	out    0x5f,al
  418d50:	push   cs
  418d51:	mov    esi,?
  418d53:	xchg   esp,eax
  418d54:	fstp   DWORD PTR [esi]
  418d56:	cmp    DWORD PTR [eax+0x3],esi
  418d59:	inc    ebx
  418d5a:	inc    esi
  418d5b:	add    DWORD PTR [ecx-0x56],ebp
  418d5e:	push   ecx
  418d5f:	loope  0x418ce6
  418d61:	pop    ebx
  418d62:	pop    ss
  418d63:	(bad)  
  418d64:	shl    DWORD PTR [eax-0x5d],1
  418d67:	sti    
  418d68:	xor    al,0x30
  418d6a:	in     eax,0x6f
  418d6c:	lock mov edx,0xed724df4
  418d72:	pop    ss
  418d73:	js     0x418dc7
  418d75:	dec    ebx
  418d76:	and    BYTE PTR [eax-0x3f],al
  418d79:	mov    ds:0xf2f140ee,al
  418d7e:	push   0x4b
  418d80:	or     DWORD PTR [ecx+0x15],ebx
  418d83:	cmp    BYTE PTR [esi-0x36],bl
  418d86:	mov    al,ds:0xf7ffcdd5
  418d8b:	cld    
  418d8c:	stos   DWORD PTR es:[edi],eax
  418d8d:	ja     0x418dec
  418d8f:	inc    edx
  418d90:	or     al,0xd6
  418d92:	or     DWORD PTR [edi+ebp*4+0x4d],edi
  418d96:	in     eax,0xc1
  418d98:	jo     0x418d91
  418d9a:	rcr    DWORD PTR [edx+0x6e87f0cd],0xe4
  418da1:	mov    BYTE PTR [edx],bl
  418da3:	xchg   ebp,eax
  418da4:	jg     0x418dcc
  418da6:	inc    ebx
  418da7:	sbb    eax,0x87cfd40b
  418dac:	pop    ss
  418dad:	hlt    
  418dae:	push   edi
  418daf:	push   esp
  418db0:	call   0xac0a:0x807fe2b2
  418db7:	pop    es
  418db8:	popf   
  418db9:	rcl    bh,0x72
  418dbc:	shr    ecx,1
  418dbe:	jp     0x418dfe
  418dc0:	out    0xfa,al
  418dc2:	cmp    DWORD PTR [edx],0xa2e0b511
  418dc8:	dec    edx
  418dc9:	stos   BYTE PTR es:[edi],al
  418dca:	add    ebp,ecx
  418dcc:	leave  
  418dcd:	sub    DWORD PTR [ebp-0x6c0ace70],ecx
  418dd3:	stc    
  418dd4:	or     eax,0xd19db083
  418dd9:	sub    BYTE PTR [edx+eiz*2+0x2b],ch
  418ddd:	rol    BYTE PTR [edx+0x3c4599f4],cl
  418de3:	jmp    0xdff9f741
  418de8:	mov    esi,0x896e3210
  418ded:	out    dx,al
  418dee:	push   esp
  418def:	fimul  WORD PTR [esi+0x31]
  418df2:	(bad)  
  418df3:	std    
  418df4:	les    ecx,FWORD PTR [edi+0x240a7cf2]
  418dfa:	xor    ebx,edi
  418dfc:	jg     0x418d8d
  418dfe:	stos   DWORD PTR es:[edi],eax
  418dff:	popf   
  418e00:	lock adc ah,al
  418e03:	mov    ?,WORD PTR [ebx+ebp*8+0x6]
  418e07:	lea    ebp,[eax+ebp*8]
  418e0a:	or     ah,BYTE PTR [edi]
  418e0c:	mov    edx,0x93763a4a
  418e11:	rol    DWORD PTR ds:0x3f99e1f,cl
  418e17:	dec    ecx
  418e18:	cmp    ch,bl
  418e1a:	inc    ebx
  418e1b:	sbb    DWORD PTR [ebp+0x5b],ebp
  418e1e:	stos   DWORD PTR es:[edi],eax
  418e1f:	mov    ecx,DWORD PTR [ebx+edx*1-0x6a]
  418e23:	mov    ds:0x16d36905,al
  418e28:	sbb    BYTE PTR [ecx+0x5e],dh
  418e2b:	jecxz  0x418dcd
  418e2d:	jne    0x418db1
  418e2f:	loope  0x418e42
  418e31:	int    0x11
  418e33:	or     BYTE PTR [ebp+0x22],dh
  418e36:	cmp    al,0x72
  418e38:	mov    ah,0xe2
  418e3a:	sbb    DWORD PTR ds:0xf8ca9b6f,esi
  418e40:	push   esi
	...
  418eb1:	add    BYTE PTR [eax],al
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	pushf  
  418ec1:	pop    ss
  418ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec3:	and    esi,DWORD PTR [ebx-0xafffef2]
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    BYTE PTR [edx],bl
  418ecd:	inc    ebp
  418ece:	mov    eax,0x725902a6
  418ed3:	js     0x418ee1
  418ed5:	fnstenv ds:0xcfc40aae
  418edb:	loope  0x418f04
  418edd:	cmp    DWORD PTR [edx],edx
  418edf:	in     eax,0xeb
  418ee1:	(bad)  
  418ee2:	push   edi
  418ee3:	loopne 0x418f04
  418ee5:	or     al,0x86
  418ee7:	pop    ebx
  418ee8:	mov    esp,0xfce28f1a
  418eed:	sbb    DWORD PTR [edi+0x742c4373],edi
  418ef3:	fimul  WORD PTR [ebx]
  418ef5:	iret   
  418ef6:	add    bh,cl
  418ef8:	fisttp DWORD PTR [edi+0x33]
  418efb:	push   edi
  418efc:	sar    BYTE PTR [esi],1
  418efe:	or     DWORD PTR [eax],ecx
  418f00:	sbb    esp,ecx
  418f02:	add    BYTE PTR [esi-0x11],cl
  418f05:	pop    ds
  418f06:	jns    0x418efd
  418f08:	jno    0x418f19
  418f0a:	sahf   
  418f0b:	fs mov edx,esp
  418f0e:	scas   al,BYTE PTR es:[edi]
  418f0f:	imul   esp,DWORD PTR [ecx-0x2397634a],0xffffffb1
  418f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f17:	clc    
  418f18:	add    ebp,DWORD PTR [ecx-0x2cb37913]
  418f1e:	int    0xd9
  418f20:	inc    ebx
  418f21:	sbb    BYTE PTR [ebx+edx*2],bh
  418f24:	mov    esp,0xb9e415a4
  418f29:	leave  
  418f2a:	(bad)  
  418f2c:	outs   dx,DWORD PTR ds:[esi]
  418f2d:	fld    DWORD PTR [ebx]
  418f2f:	sbb    eax,0x743bfb71
  418f34:	and    dl,BYTE PTR [ecx+0x4f]
  418f37:	or     al,BYTE PTR [ebp+0x59]
  418f3a:	repnz xchg ecx,eax
  418f3c:	ret    0x520a
  418f3f:	inc    ebx
  418f40:	retf   0xd85a
  418f43:	adc    DWORD PTR [ebx+ecx*1+0x41f675bd],eax
  418f4a:	inc    ebx
  418f4b:	cmp    BYTE PTR [esi+0x76],dh
  418f4e:	or     al,dh
  418f50:	popf   
  418f51:	xor    DWORD PTR [esi],0x12a85f86
  418f57:	sub    bh,ch
  418f59:	xchg   DWORD PTR [edx+0x70],eax
  418f5c:	add    DWORD PTR [ebp+0x155124f4],ecx
  418f62:	inc    eax
  418f63:	popf   
  418f64:	jl     0x418f78
  418f66:	jmp    0x6c683e3f
  418f6b:	sar    bh,1
  418f6d:	xchg   ecx,eax
  418f6e:	pcmpeqw mm1,QWORD PTR [eax]
  418f71:	fisttp QWORD PTR [ecx-0x24]
  418f74:	iret   
  418f75:	fs out 0xbb,al
  418f78:	outs   dx,DWORD PTR ds:[esi]
  418f79:	aad    0xff
  418f7b:	loop   0x418f98
  418f7d:	or     al,0xf0
  418f7f:	push   ebx
  418f80:	std    
  418f81:	dec    edx
  418f82:	pop    ebp
  418f83:	xchg   esp,eax
  418f84:	out    0xf7,al
  418f86:	lods   al,BYTE PTR ds:[esi]
  418f87:	imul   ecx,ebp,0xd
  418f8a:	mov    ch,0xfe
  418f8c:	fisub  DWORD PTR [esi+0x7feb4308]
  418f92:	out    dx,eax
  418f93:	in     eax,0x5c
  418f95:	jno    0x419000
  418f97:	sub    eax,0x55c8a154
  418f9c:	sub    DWORD PTR [esp+eax*1-0x70],edx
  418fa0:	xchg   esi,eax
  418fa1:	push   ds
  418fa2:	mov    al,0x24
  418fa4:	pop    esp
  418fa5:	or     eax,0x2fda7b16
  418faa:	rcr    BYTE PTR [esi],0x6b
  418fad:	mov    WORD PTR [ebx+esi*4+0x76],?
  418fb1:	cmp    edi,DWORD PTR [edi+esi*4-0x4e]
  418fb5:	add    eax,0xff1aa048
  418fba:	popa   
  418fbb:	sbb    BYTE PTR [eax+0x598ee704],ah
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	rol    bh,cl
  419041:	pushf  
  419042:	sub    DWORD PTR [eax-0x58],0xf500010f
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR [eax+0xf],al
  41904e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41904f:	adc    al,0xf5
  419051:	loopne 0x419049
  419053:	xchg   ebx,eax
  419054:	adc    bh,cl
  419056:	mov    dl,0x15
  419058:	adc    DWORD PTR [ecx-0x2],esp
  41905b:	stc    
  41905c:	and    DWORD PTR [ebp+0x382f4d67],esi
  419062:	repz inc edi
  419064:	enter  0xf9cd,0x43
  419068:	adc    esp,DWORD PTR [ecx-0x10]
  41906b:	push   ebp
  41906c:	loopne 0x41908d
  41906e:	rcl    BYTE PTR [edx-0x52b99890],0x2a
  419075:	sub    cl,BYTE PTR [bx]
  419078:	sahf   
  419079:	mov    ebp,ecx
  41907b:	cmc    
  41907c:	std    
  41907d:	inc    DWORD PTR [ebx+0x8b3e81a]
  419083:	push   ebp
  419084:	int3   
  419085:	data16 mov ds:0xe16f6a6,al
  41908b:	mov    ds,WORD PTR [ebp-0xf]
  41908e:	add    esp,esp
  419090:	inc    ebx
  419091:	call   0xd777:0x653c8041
  419098:	push   ecx
  419099:	and    eax,0x385678a2
  41909e:	out    0x36,eax
  4190a0:	std    
  4190a1:	jne    0x41909e
  4190a3:	cmc    
  4190a4:	or     BYTE PTR [esi-0x3bf4d2bc],bl
  4190aa:	pop    eax
  4190ab:	cdq    
  4190ac:	pop    ebp
  4190ad:	xor    DWORD PTR [edx-0x79],edx
  4190b0:	fbstp  TBYTE PTR [ebx-0x1a]
  4190b3:	rol    DWORD PTR [edi],0x55
  4190b6:	inc    eax
  4190b7:	mov    esi,0x629f994d
  4190bc:	icebp  
  4190bd:	(bad)  
  4190be:	ror    DWORD PTR [edi],0xe2
  4190c1:	jl     0x419075
  4190c3:	mov    bl,0xcc
  4190c5:	push   ebx
  4190c6:	mov    WORD PTR [ecx-0x6a88c6fb],?
  4190cc:	dec    bp
  4190ce:	call   0x267c:0xff831158
  4190d5:	daa    
  4190d6:	sti    
  4190d7:	int3   
  4190d8:	mov    BYTE PTR [edx+0x55],cl
  4190db:	sub    BYTE PTR [edx+ebx*2+0x6],ch
  4190df:	loope  0x41912e
  4190e1:	sbb    ecx,DWORD PTR [esi-0x6210829f]
  4190e7:	popa   
  4190e8:	cli    
  4190e9:	sub    ecx,ebx
  4190eb:	test   ah,dh
  4190ed:	nop
  4190ee:	stc    
  4190ef:	mov    ch,0x46
  4190f1:	sub    al,0xdd
  4190f3:	push   cs
  4190f4:	xchg   ecx,eax
  4190f5:	imul   ecx,DWORD PTR [eax],0xd02076fd
  4190fb:	xlat   BYTE PTR ds:[ebx]
  4190fc:	push   ecx
  4190fd:	mov    ebx,0xe78abc91
  419102:	ins    BYTE PTR es:[edi],dx
  419103:	aam    0x29
  419105:	pusha  
  419106:	iret   
  419107:	shl    ebp,1
  419109:	test   DWORD PTR [edi+0x45],eax
  41910c:	int    0x45
  41910e:	stos   DWORD PTR es:[edi],eax
  41910f:	mov    eax,0xaf81e9c4
  419114:	mov    dh,0xec
  419116:	adc    al,0x7a
  419118:	jne    0x4190f7
  41911a:	sbb    eax,0xd7483d72
  41911f:	out    0x27,al
  419121:	inc    ebx
  419122:	inc    edi
  419123:	pushf  
  419124:	jmp    0x4190be
  419126:	hlt    
  419127:	dec    eax
  419128:	xchg   ebx,eax
  419129:	sbb    ebx,DWORD PTR [ebx]
  41912b:	push   ebp
  41912c:	and    edi,esp
  41912e:	sti    
  41912f:	pop    es
  419130:	loop   0x4191a1
  419132:	mov    ah,0xbc
  419134:	mov    eax,ds:0xe274955e
  419139:	imul   edi,DWORD PTR [eax-0x4],0xe973e114
  419140:	test   al,0x0
	...
  4191b2:	add    BYTE PTR [eax],al
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	push   0x9d7a6a2b
  4191c5:	adc    BYTE PTR [ecx],al
  4191c7:	add    ch,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [edx-0x604ff760],bl
  4191d1:	adc    BYTE PTR [eax+0x5f080001],0x3d
  4191d8:	shl    ah,1
  4191da:	sbb    ecx,DWORD PTR [esi-0x794d2f33]
  4191e0:	push   esi
  4191e1:	cmp    al,0xae
  4191e3:	fsub   QWORD PTR [ebx+0x3d]
  4191e6:	push   0x491091e3
  4191eb:	test   BYTE PTR [edi+ebx*8+0x3ea9be8a],al
  4191f2:	add    DWORD PTR [ecx-0x28],esi
  4191f5:	xor    ebp,ecx
  4191f7:	fnstsw WORD PTR [ecx-0x5f]
  4191fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191fb:	rol    BYTE PTR [ebp-0xf],cl
  4191fe:	int3   
  4191ff:	mov    cl,0xec
  419201:	dec    ebx
  419202:	sub    eax,0x5a338bb
  419207:	rcr    BYTE PTR [ebx],1
  419209:	outs   dx,BYTE PTR ds:[esi]
  41920a:	bts    edi,0x5e
  41920e:	repnz jmp 0x3240:0xe5aa9122
  419216:	jmp    0xfc71c26d
  41921b:	leave  
  41921c:	retf   
  41921d:	and    cl,bh
  41921f:	out    dx,eax
  419220:	retf   
  419221:	test   al,0xb3
  419223:	pusha  
  419224:	mov    dh,BYTE PTR [edx-0x5]
  419227:	fisubr WORD PTR [ecx+0x75190ab7]
  41922d:	mov    dl,ch
  41922f:	inc    esi
  419230:	test   al,0x54
  419232:	push   0x880b1efb
  419237:	mov    esp,DWORD PTR [edx]
  419239:	and    bl,BYTE PTR [ebx+ecx*8]
  41923c:	mov    eax,0xf0ccb1d7
  419241:	mov    cs,ebx
  419243:	imul   BYTE PTR [edx+0x52]
  419246:	test   edi,esi
  419248:	adc    ch,dl
  41924a:	out    0xa7,eax
  41924c:	adc    dh,BYTE PTR cs:[esi]
  41924f:	es daa 
  419251:	adc    DWORD PTR [esi],edi
  419253:	cmp    eax,ecx
  419255:	push   cs
  419256:	inc    edx
  419257:	jne    0x4191f7
  419259:	push   esi
  41925a:	xor    al,0x7
  41925c:	inc    esp
  41925d:	jg     0x4191f1
  41925f:	jns    0x4192c3
  419261:	dec    ebp
  419262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419263:	es scas al,BYTE PTR es:[edi]
  419265:	fild   QWORD PTR [ecx]
  419267:	xchg   esi,eax
  419268:	sub    edi,DWORD PTR [edi-0x16]
  41926b:	imul   DWORD PTR [ecx+0x6a]
  41926e:	sub    ax,0xe9d4
  419272:	sub    BYTE PTR [ebx],cl
  419274:	cmp    ecx,ebp
  419276:	into   
  419277:	xor    BYTE PTR [eax],dl
  419279:	dec    BYTE PTR [edx]
  41927b:	add    eax,0x9fe484b8
  419280:	leave  
  419281:	rcl    DWORD PTR [ebx],cl
  419283:	push   edx
  419284:	rcr    BYTE PTR [ebx+0x645dc530],1
  41928a:	inc    ebx
  41928b:	push   ecx
  41928c:	nop
  41928d:	je     0x4192b6
  41928f:	repz scas eax,DWORD PTR es:[edi]
  419291:	mov    cl,0x8b
  419293:	cdq    
  419294:	gs mov esp,?
  419297:	sbb    ecx,eax
  419299:	into   
  41929a:	sbb    edi,ebx
  41929c:	gs rol edx,cl
  41929f:	dec    esp
  4192a0:	lahf   
  4192a1:	push   cs
  4192a2:	pushf  
  4192a3:	fdiv   QWORD PTR [ecx-0x6d08492e]
  4192a9:	sbb    al,0x1
  4192ab:	stos   DWORD PTR es:[edi],eax
  4192ac:	mov    DWORD PTR [eax],ebx
  4192ae:	xchg   ebp,eax
  4192af:	lds    si,DWORD PTR [ebp-0x5ea6a8b9]
  4192b6:	dec    esp
  4192b7:	popa   
  4192b8:	jp     0x4192ed
  4192ba:	push   ebp
  4192bb:	push   edi
  4192bc:	cwde   
  4192bd:	jb     0x4192a3
  4192bf:	xchg   ebp,eax
  4192c0:	adc    eax,DWORD PTR [eax]
	...
  419332:	add    BYTE PTR [eax],al
  419334:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	push   ebp
  419341:	cmp    eax,0x1192e6c8
  419346:	add    DWORD PTR [eax],eax
  419348:	cmc    
  419349:	add    BYTE PTR [eax],al
  41934b:	add    bh,bh
  41934d:	mov    dh,0x2f
  41934f:	scas   al,BYTE PTR es:[edi]
  419350:	pushf  
  419351:	call   FWORD PTR [edi+0x2e0fc95c]
  419357:	sti    
  419358:	lods   al,BYTE PTR ds:[esi]
  419359:	or     BYTE PTR [ebp+0x57],0x6a
  41935d:	not    dh
  41935f:	jmp    FWORD PTR [esi-0x54]
  419362:	push   edi
  419363:	shl    DWORD PTR [ecx],1
  419365:	mov    edx,0x19dd7d01
  41936a:	xchg   ebx,eax
  41936b:	mov    eax,ds:0x98b83d71
  419370:	loopne 0x4193ce
  419372:	dec    ebx
  419373:	sbb    eax,0x9916acb0
  419378:	lods   eax,DWORD PTR ds:[esi]
  419379:	mov    ebp,0xf56d9f06
  41937e:	ins    BYTE PTR es:[edi],dx
  41937f:	mov    eax,gs:0xfaf9cdb0
  419385:	sub    DWORD PTR [edi-0x42],edx
  419388:	push   edi
  419389:	lds    esi,FWORD PTR [ebp-0x2c]
  41938c:	xor    BYTE PTR [ebx],ch
  41938e:	mov    cl,0xf9
  419390:	xor    esp,DWORD PTR [ebx-0x31]
  419393:	pushf  
  419394:	cs in  eax,0xaa
  419397:	ins    BYTE PTR es:[edi],dx
  419398:	adc    DWORD PTR ds:0x958f404f,ebx
  41939e:	adc    al,0x88
  4193a0:	cmp    eax,0x8cc71564
  4193a5:	sbb    BYTE PTR [edi-0x4e70c2d6],ah
  4193ab:	sub    ah,BYTE PTR [ebx-0x53]
  4193ae:	ret    
  4193af:	stos   DWORD PTR es:[edi],eax
  4193b0:	div    DWORD PTR [ebx-0x73]
  4193b3:	int3   
  4193b4:	shl    eax,cl
  4193b6:	les    ebx,FWORD PTR [esi+0x3dad8d26]
  4193bc:	and    esi,DWORD PTR [ebx]
  4193be:	mov    al,0xbb
  4193c0:	dec    esi
  4193c1:	aas    
  4193c2:	mov    bl,0x6b
  4193c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c5:	fcomip st,st(0)
  4193c7:	mov    ds:0x5cbc33ab,al
  4193cc:	or     ch,BYTE PTR [edi+0xa90098f]
  4193d2:	inc    ebx
  4193d3:	cwde   
  4193d4:	scas   al,BYTE PTR es:[edi]
  4193d5:	aam    0x18
  4193d7:	nop
  4193d8:	cmc    
  4193d9:	jbe    0x41944e
  4193db:	mov    ecx,0xd32d4068
  4193e0:	lods   eax,DWORD PTR ds:[esi]
  4193e1:	push   0x68
  4193e3:	pushf  
  4193e4:	mov    esi,0x57bcea71
  4193e9:	xchg   esi,eax
  4193ea:	ret    0xd2f
  4193ed:	add    ebx,esi
  4193ef:	int    0x94
  4193f1:	icebp  
  4193f2:	push   eax
  4193f3:	in     eax,dx
  4193f4:	jbe    0x4193a5
  4193f6:	cwde   
  4193f7:	push   0x12625ba5
  4193fc:	dec    ebx
  4193fd:	pop    eax
  4193fe:	dec    ebx
  4193ff:	xchg   DWORD PTR [edx+0x6aa08df0],edx
  419405:	cmp    BYTE PTR [ebp+0x76278d17],0xb2
  41940c:	mov    ebp,0xd0ac3cbc
  419411:	xchg   ebp,eax
  419412:	xchg   esi,eax
  419413:	sbb    DWORD PTR cs:[ecx-0x24],edx
  419417:	dec    ebp
  419418:	inc    eax
  419419:	iret   
  41941a:	push   0x48
  41941c:	iret   
  41941d:	or     DWORD PTR [edi+0x61],esp
  419420:	jmp    0x419460
  419422:	rcr    DWORD PTR [edi+0x40],cl
  419425:	repnz scas al,BYTE PTR es:[edi]
  419427:	mov    ds,WORD PTR [esi+ecx*1-0x1e]
  41942b:	cmc    
  41942c:	imul   edx,DWORD PTR [edx-0xc14f203],0xece13b52
  419436:	push   esp
  419437:	push   eax
  419438:	(bad)  
  419439:	into   
  41943a:	push   edi
  41943b:	adc    ebx,DWORD PTR [eax]
  41943d:	pop    es
  41943e:	les    edx,FWORD PTR [ecx-0x1b]
	...
  4194b1:	add    BYTE PTR [eax],al
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	cdq    
  4194c1:	xchg   DWORD PTR [ecx-0x57],edi
  4194c4:	xchg   DWORD PTR [edx],edx
  4194c6:	add    DWORD PTR [eax],eax
  4194c8:	cmc    
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [ecx-0x4d],dl
  4194ce:	xor    DWORD PTR [eax],eax
  4194d0:	stc    
  4194d1:	in     al,0xfe
  4194d3:	push   ds
  4194d4:	popa   
  4194d5:	or     DWORD PTR [edx+0x5f],0x60
  4194d9:	andnps xmm6,XMMWORD PTR ds:0xd070f63e
  4194e0:	xlat   BYTE PTR ds:[ebx]
  4194e1:	frstor [esi-0x7]
  4194e4:	test   eax,0x7176cc9b
  4194e9:	push   0xdbb1d258
  4194ee:	xchg   ecx,eax
  4194ef:	mov    esi,ebp
  4194f1:	add    DWORD PTR [ecx],ecx
  4194f3:	pop    eax
  4194f4:	pop    esp
  4194f5:	fdiv   DWORD PTR [edx+0x14983697]
  4194fb:	add    al,BYTE PTR [eax]
  4194fd:	rcl    DWORD PTR [esi+0x73f279a5],0xe3
  419504:	mov    ss,WORD PTR [ebp+0x5c44cb0]
  41950a:	fist   WORD PTR [edi]
  41950c:	in     eax,0x9c
  41950e:	mov    bl,al
  419510:	cmp    DWORD PTR [ebx],0xffffff85
  419513:	jbe    0x419551
  419515:	mov    ebp,0x3a9bccfc
  41951a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41951b:	sbb    DWORD PTR [ebp+0x34],0xffffff86
  41951f:	pop    edi
  419520:	in     al,0xcb
  419522:	popf   
  419523:	push   ecx
  419524:	mov    gs,WORD PTR [eax]
  419526:	mov    dl,0xd5
  419528:	popw   ss
  41952a:	push   esp
  41952b:	lock mov eax,0x65374cf0
  419531:	mov    bh,0x31
  419533:	cmp    al,0xcc
  419535:	pop    ebx
  419536:	aam    0xd7
  419538:	imul   eax,DWORD PTR [ebx],0xf92a8415
  41953e:	aad    0x8f
  419540:	dec    esi
  419541:	sbb    al,0x9b
  419543:	(bad)  
  419545:	mov    esi,0x6b278468
  41954a:	(bad)  
  41954b:	das    
  41954c:	not    dl
  41954e:	cwde   
  41954f:	lds    edi,FWORD PTR [edx]
  419551:	rcl    DWORD PTR [ecx-0x6],0x27
  419555:	cdq    
  419556:	add    dh,BYTE PTR [ebp+0x69103c70]
  41955c:	call   0x2464:0x13e1a04a
  419563:	or     al,0x79
  419565:	scas   eax,DWORD PTR es:[edi]
  419566:	loop   0x41956a
  419568:	pop    edi
  419569:	sbb    ch,bl
  41956b:	ja     0x419597
  41956d:	xor    DWORD PTR [ebx],ecx
  41956f:	push   ebp
  419570:	xchg   edx,eax
  419571:	push   ebx
  419572:	aaa    
  419573:	popa   
  419574:	mov    edx,0xd1b9c335
  419579:	mov    esp,0x1e1186a2
  41957e:	test   al,0xd8
  419580:	cmp    BYTE PTR [eax],cl
  419582:	fnsave [ecx]
  419584:	fstp   TBYTE PTR [edi]
  419586:	jb     0x41955c
  419588:	adc    ebp,ebx
  41958a:	aam    0x38
  41958c:	xor    eax,0x15b480
  419591:	jb     0x4195d0
  419593:	add    bh,al
  419595:	push   edi
  419596:	pop    es
  419597:	mov    ch,BYTE PTR [esi+0x18]
  41959a:	icebp  
  41959b:	shr    BYTE PTR [ebx+ebp*8-0x1a],1
  41959f:	jne    0x419554
  4195a1:	dec    ebp
  4195a2:	push   ss
  4195a3:	pop    esp
  4195a4:	inc    ebx
  4195a5:	mov    ?,WORD PTR [edi]
  4195a7:	retf   
  4195a8:	xchg   ecx,ebx
  4195aa:	and    eax,0xae2deb76
  4195af:	or     ah,bh
  4195b1:	and    DWORD PTR [ecx],0x29a69070
  4195b7:	fdivr  DWORD PTR [edx]
  4195b9:	sbb    eax,0x66565b61
  4195be:	and    bh,BYTE PTR [edx+0x78]
	...
  419631:	add    BYTE PTR [eax],al
  419633:	add    BYTE PTR [ebx-0x44c35fd8],dl
  419639:	mov    esp,0xad76af9f
  41963e:	or     esp,DWORD PTR [eax+0x3fbcc6c]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [edi+0x2a],ch
  41964e:	fwait
  41964f:	jbe    0x4195dc
  419651:	xchg   edi,eax
  419652:	imul   ebx,DWORD PTR [eax],0xbcb017c2
  419658:	jp     0x4196c5
  41965a:	retf   
  41965b:	out    dx,eax
  41965c:	pop    ss
  41965d:	enter  0x83b6,0x3b
  419661:	ins    DWORD PTR es:[edi],dx
  419662:	pop    esi
  419663:	stos   BYTE PTR es:[edi],al
  419664:	sub    BYTE PTR [esi],al
  419666:	lahf   
  419667:	pop    eax
  419668:	and    al,0x37
  41966a:	inc    ebp
  41966b:	stos   BYTE PTR es:[edi],al
  41966c:	ins    BYTE PTR es:[edi],dx
  41966d:	dec    edi
  41966e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966f:	jns    0x4195f9
  419671:	add    al,0xe2
  419673:	bound  esi,QWORD PTR [ecx+edi*2-0x23]
  419677:	push   esp
  419678:	mov    ah,bl
  41967a:	push   esp
  41967b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41967c:	cld    
  41967d:	ins    DWORD PTR es:[edi],dx
  41967e:	mov    WORD PTR [ebp+eax*2+0x1d],fs
  419682:	sub    BYTE PTR [edi+eax*1-0x5f4bdcb1],bh
  419689:	test   al,0xf9
  41968b:	loopne 0x419699
  41968d:	cld    
  41968e:	pop    esi
  41968f:	mov    eax,DWORD PTR [edx+ecx*1]
  419692:	arpl   WORD PTR [edx+0x6f],bx
  419695:	aad    0xb5
  419697:	dec    edx
  419698:	or     al,0x46
  41969a:	ret    
  41969b:	mov    DWORD PTR [edi+0x6f],ebp
  41969e:	std    
  41969f:	dec    ebx
  4196a0:	push   edx
  4196a1:	jno    0x41967b
  4196a3:	sbb    ah,BYTE PTR [edx+eiz*4+0x5d]
  4196a7:	aad    0x95
  4196a9:	gs jg  0x41968e
  4196ac:	aad    0x4e
  4196ae:	mov    edx,0xf1143476
  4196b3:	jnp    0x41972a
  4196b5:	in     eax,0xbc
  4196b7:	(bad)  
  4196b8:	and    edx,ecx
  4196ba:	(bad)  
  4196bb:	shr    DWORD PTR [edi],0x44
  4196be:	pop    es
  4196bf:	mov    bh,0x62
  4196c1:	and    bh,BYTE PTR [ebx+0x59230951]
  4196c7:	inc    ebp
  4196c8:	rol    ebp,0xcf
  4196cb:	adc    ebp,DWORD PTR [esi+edx*8-0x22005982]
  4196d2:	loop   0x419747
  4196d4:	test   DWORD PTR [ecx],edx
  4196d6:	inc    eax
  4196d7:	cwde   
  4196d8:	adc    esp,DWORD PTR [ecx-0x26]
  4196db:	and    ebp,edi
  4196dd:	push   0x27
  4196df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e0:	std    
  4196e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e2:	ja     0x4196b4
  4196e4:	mov    ah,0x63
  4196e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196e7:	add    cl,ah
  4196e9:	mov    ?,WORD PTR [edx]
  4196eb:	aam    0xa8
  4196ed:	int3   
  4196ee:	sbb    DWORD PTR ds:0x849c5822,ecx
  4196f4:	jg     0x4196f2
  4196f6:	ins    BYTE PTR es:[edi],dx
  4196f7:	out    0x2a,eax
  4196f9:	sub    BYTE PTR [edi+0x5c0a636c],bh
  4196ff:	mov    esp,DWORD PTR [esi]
  419701:	out    0x2e,eax
  419703:	mov    DWORD PTR [ebp-0x2c725166],0xcaeee7ea
  41970d:	mov    esp,cs
  41970f:	out    0xf0,al
  419711:	sar    BYTE PTR [esi-0x32f0ee6f],cl
  419717:	or     al,0x37
  419719:	adc    DWORD PTR [bp+di+0x7281],edi
  41971e:	and    esi,DWORD PTR [edx]
  419720:	jbe    0x419723
  419722:	mov    edx,0x506b99e0
  419727:	and    ebp,DWORD PTR [eax+esi*8-0x8e9a8bb]
  41972e:	mov    cl,0x7c
  419730:	iret   
  419731:	lds    ebp,FWORD PTR [edi-0x7e32c754]
  419737:	sti    
  419738:	popa   
  419739:	repnz jecxz 0x419767
  41973c:	push   ebp
  41973d:	xor    al,0x3a
  41973f:	out    0x23,eax
	...
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx+0x2827cbe9]
  4197c1:	add    eax,0x14711bc1
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	cmc    
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [edi-0x5b1a6aef],ah
  4197d1:	sub    esp,esi
  4197d3:	mov    dl,0xd2
  4197d5:	enter  0x5dbb,0xd6
  4197d9:	inc    eax
  4197da:	and    eax,0x9480de87
  4197df:	mov    eax,ds:0x9c99fd9
  4197e4:	jne    0x419773
  4197e6:	imul   DWORD PTR [edx+0x4b1e819]
  4197ec:	mov    ebp,0x79c07905
  4197f1:	sbb    BYTE PTR [ebx],ch
  4197f3:	in     al,0x37
  4197f5:	ficom  WORD PTR [edx]
  4197f7:	xor    cl,BYTE PTR [eax]
  4197f9:	cmp    BYTE PTR [edx+edx*1-0x7f],dh
  4197fd:	ret    0x541
  419800:	sub    BYTE PTR [eax+eiz*4+0xb705b06],dl
  419807:	inc    ebx
  419808:	iret   
  419809:	ret    
  41980a:	fisubr WORD PTR ds:0x98ad5f78
  419810:	inc    eax
  419811:	rcl    al,1
  419813:	je     0x4197f6
  419815:	inc    ebx
  419816:	jo     0x419846
  419818:	adc    al,0x1b
  41981a:	sub    eax,0x4b26b880
  41981f:	jge    0x4197b1
  419821:	xor    bl,ch
  419823:	pop    edx
  419824:	(bad)  
  419825:	cli    
  419826:	pop    edx
  419827:	out    0xee,eax
  419829:	sbb    bh,BYTE PTR [esi]
  41982b:	jg     0x419800
  41982d:	iret   
  41982e:	(bad)  
  41982f:	repz add edx,DWORD PTR [ecx+edi*2-0x15fceae0]
  419837:	lods   eax,DWORD PTR ds:[esi]
  419838:	sbb    edx,DWORD PTR [ebx+0xa]
  41983b:	jecxz  0x4197c0
  41983d:	(bad)  
  41983e:	add    al,0xba
  419840:	adc    DWORD PTR [edx+0x324011cb],0x7b
  419847:	inc    eax
  419848:	pop    ebx
  419849:	jae    0x419886
  41984b:	div    ch
  41984d:	cmp    bl,BYTE PTR [esi]
  41984f:	dec    edx
  419850:	ins    BYTE PTR es:[edi],dx
  419851:	adc    eax,DWORD PTR [ebx]
  419853:	cdq    
  419854:	pusha  
  419855:	(bad)  
  419856:	cld    
  419857:	mov    dl,BYTE PTR [eax+0x2f]
  41985a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985b:	xchg   edx,eax
  41985c:	mov    eax,ds:0x7cf70fa6
  419861:	stos   DWORD PTR es:[edi],eax
  419862:	dec    edx
  419863:	push   edi
  419864:	hlt    
  419865:	shl    BYTE PTR [edx],0x0
  419868:	pop    es
  419869:	es stos BYTE PTR es:[edi],al
  41986b:	xor    edi,edx
  41986d:	into   
  41986e:	adc    DWORD PTR [ebx-0x16],esp
  419871:	bsr    esi,DWORD PTR [ecx]
  419874:	popf   
  419875:	fldcw  WORD PTR [edi]
  419877:	xchg   ebp,edi
  419879:	lods   eax,DWORD PTR ds:[esi]
  41987a:	hlt    
  41987b:	push   cs
  41987c:	sbb    ebp,DWORD PTR [eax]
  41987e:	mov    bl,0x32
  419880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419881:	popa   
  419882:	adc    al,0x2b
  419884:	nop
  419885:	pmaddwd mm3,QWORD PTR [edx]
  419888:	aas    
  419889:	into   
  41988a:	imul   DWORD PTR [edi+0x50fce862]
  419890:	and    eax,0xe2760f2
  419895:	lods   eax,DWORD PTR ds:[esi]
  419896:	cmp    BYTE PTR [edx+0x535a862c],dh
  41989c:	test   DWORD PTR [edx-0x42],edi
  41989f:	pop    DWORD PTR [ebx-0x68]
  4198a2:	in     eax,0x7f
  4198a4:	xchg   ecx,eax
  4198a5:	jg     0x41988a
  4198a7:	mov    ch,BYTE PTR [esi]
  4198a9:	add    BYTE PTR [ebp+0x57fc58ae],0x93
  4198b0:	bound  esi,QWORD PTR [edx+0x24116d16]
  4198b6:	jl     0x4198dd
  4198b8:	inc    edx
  4198b9:	sar    DWORD PTR [edi],cl
  4198bb:	aas    
  4198bc:	jle    0x419891
  4198be:	loop   0x4198fc
  4198c0:	push   edx
	...
  419931:	add    BYTE PTR [eax],al
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	daa    
  419941:	icebp  
  419942:	repnz out 0x66,al
  419945:	adc    eax,0xf50001
  41994a:	add    BYTE PTR [eax],al
  41994c:	ret    0x749f
  41994f:	jl     0x4199b3
  419951:	xor    BYTE PTR [ebx-0x698d83b8],dh
  419957:	dec    DWORD PTR [ecx-0x4a]
  41995a:	bound  edx,QWORD PTR [edx+0x1f4f714a]
  419960:	inc    edi
  419961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419962:	push   0x888a3bad
  419967:	or     al,0xaf
  419969:	shl    DWORD PTR [ebp-0x1a],1
  41996c:	das    
  41996d:	pop    ds
  41996e:	push   es
  41996f:	push   ds
  419970:	sbb    DWORD PTR [eax],eax
  419972:	jnp    0x4199bc
  419974:	xor    al,cl
  419976:	add    BYTE PTR [esi-0x26],al
  419979:	mov    gs,esp
  41997b:	retf   0x6a7c
  41997e:	mov    esp,0xb0926763
  419983:	into   
  419984:	outs   dx,BYTE PTR ds:[esi]
  419985:	iret   
  419986:	(bad)  
  419987:	mov    ecx,0xaf0380e0
  41998c:	mov    ah,0x83
  41998e:	jo     0x419a08
  419990:	and    edi,esi
  419992:	xchg   ecx,eax
  419993:	enter  0xd2c6,0x6b
  419997:	sbb    al,0xf6
  419999:	pusha  
  41999a:	(bad)  
  41999b:	xchg   edi,eax
  41999c:	outs   dx,DWORD PTR ds:[esi]
  41999d:	push   0x4de5ecdc
  4199a2:	in     al,0x6e
  4199a4:	push   eax
  4199a5:	int3   
  4199a6:	outs   dx,DWORD PTR ds:[esi]
  4199a7:	mov    al,0x47
  4199a9:	pop    ebp
  4199aa:	mov    ebx,0xe602656b
  4199af:	add    eax,0x246f5e56
  4199b4:	fidiv  DWORD PTR [ebp+0x26]
  4199b7:	sbb    ecx,ebp
  4199b9:	int3   
  4199ba:	imul   esi,DWORD PTR [esi+0x4571a45],0xd97c44d2
  4199c4:	dec    ebx
  4199c5:	popf   
  4199c6:	cdq    
  4199c7:	lahf   
  4199c8:	mov    edx,0x854f3d34
  4199cd:	cmp    BYTE PTR [ebx],ah
  4199cf:	cmp    al,BYTE PTR [eax+0x66]
  4199d2:	cmp    edi,DWORD PTR [ecx-0x73bf2cb8]
  4199d8:	mov    eax,0x28d8a10d
  4199dd:	xor    eax,0xc119dace
  4199e2:	loop   0x4199c7
  4199e4:	je     0x4199a0
  4199e6:	mov    DWORD PTR [eax],eax
  4199e8:	ret    0x84ae
  4199eb:	fisub  WORD PTR [ebx+0x2e50c35c]
  4199f1:	test   BYTE PTR [edx-0x3],cl
  4199f4:	adc    al,0x4b
  4199f6:	loop   0x419983
  4199f8:	in     eax,0xa5
  4199fa:	sub    al,0xac
  4199fc:	in     eax,dx
  4199fd:	pop    edi
  4199fe:	add    DWORD PTR [ecx],esi
  419a00:	push   0x5cec3025
  419a05:	fwait
  419a06:	in     al,dx
  419a07:	push   ebx
  419a08:	sti    
  419a09:	push   0x6
  419a0b:	aad    0x25
  419a0d:	fwait
  419a0e:	ror    ah,1
  419a10:	xor    ebx,ecx
  419a12:	mov    ds:0x49a5becf,eax
  419a17:	aam    0x55
  419a19:	and    DWORD PTR [edi+0x1d5a13a8],edi
  419a1f:	jmp    0x32bc:0x3168d057
  419a26:	(bad)  
  419a28:	dec    edx
  419a29:	xor    ebx,DWORD PTR [ebx-0x41fd8b65]
  419a2f:	cmp    eax,0x7daf3d09
  419a34:	cwde   
  419a35:	push   esi
  419a36:	or     esp,edi
  419a38:	fsub   DWORD PTR [esi+0x12ec7665]
  419a3e:	dec    edx
  419a3f:	or     DWORD PTR [eax+eax*1],esi
	...
  419ab2:	add    BYTE PTR [eax],al
  419ab4:	jl     0x419ac9
  419ab6:	test   DWORD PTR [edx],esi
  419ab8:	out    dx,eax
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x8c357b47
  419ac1:	jmp    0x169d1fef
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	cmc    
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    BYTE PTR [ecx],cl
  419acd:	lods   eax,DWORD PTR ds:[esi]
  419ace:	imul   edx,edi,0xbbf714f0
  419ad4:	rcr    DWORD PTR [ebp+0x3f222b25],0xaf
  419adb:	call   0x99c8f8f5
  419ae0:	(bad)  
  419ae1:	jnp    0x419aa7
  419ae3:	mov    bh,0x35
  419ae5:	xchg   esi,esp
  419ae7:	sbb    BYTE PTR [ebp-0x47a6e104],0x4
  419aee:	sahf   
  419aef:	stos   BYTE PTR es:[edi],al
  419af0:	pop    ecx
  419af1:	fwait
  419af2:	pop    edx
  419af3:	push   ebp
  419af4:	dec    ebx
  419af5:	iret   
  419af6:	cmp    BYTE PTR [esp+ebp*2-0x30a7f079],bh
  419afd:	jnp    0x419ab1
  419aff:	test   BYTE PTR [ebx+edx*4],cl
  419b02:	add    ah,BYTE PTR [esi+ebx*1+0x6d]
  419b06:	xchg   edx,eax
  419b07:	fwait
  419b08:	out    dx,al
  419b09:	les    ebp,FWORD PTR ds:0x599109d2
  419b0f:	mov    esp,0x4fe49912
  419b14:	push   0xffffffb4
  419b16:	outs   dx,BYTE PTR ds:[esi]
  419b17:	add    al,0x84
  419b19:	popf   
  419b1a:	int    0x54
  419b1c:	test   al,0x69
  419b1e:	jle    0x419b94
  419b20:	and    al,0x8b
  419b22:	pop    ecx
  419b23:	jmp    0x6f48:0xe13157cd
  419b2a:	add    esi,edx
  419b2c:	aam    0x9b
  419b2e:	cs jle 0x419b06
  419b31:	fabs   
  419b33:	je     0x419b75
  419b35:	inc    ebp
  419b36:	imul   ecx,edx,0x675d54dd
  419b3c:	hlt    
  419b3d:	in     al,dx
  419b3e:	out    0x5d,al
  419b40:	jmp    0xa369:0x4086ec16
  419b47:	das    
  419b48:	xor    eax,0xc294fcfb
  419b4d:	call   0x9da8:0x68c6034e
  419b54:	icebp  
  419b55:	mov    DWORD PTR ds:0xb32255f,ebp
  419b5b:	push   cs
  419b5c:	cmp    DWORD PTR [ebx-0x24],ecx
  419b5f:	cmp    cl,dh
  419b61:	mov    ds:0xfce54460,al
  419b66:	pop    esi
  419b67:	push   cs
  419b68:	iret   
  419b69:	sub    DWORD PTR [edi+eiz*2+0x3be9b482],edi
  419b70:	cld    
  419b71:	jg     0x419b74
  419b73:	cmp    eax,0x9a7c85a1
  419b78:	rcl    BYTE PTR [eax-0x6a],0x67
  419b7c:	dec    ecx
  419b7d:	push   es
  419b7e:	and    BYTE PTR [ebp-0x73ec8d4a],cl
  419b84:	shl    DWORD PTR [esp+ebx*1+0x48],0xff
  419b89:	nop
  419b8a:	dec    edx
  419b8b:	loopne 0x419b1f
  419b8d:	in     al,0x3d
  419b8f:	scas   eax,DWORD PTR es:[edi]
  419b90:	fsub   DWORD PTR ds:0x75b348fb
  419b96:	shr    BYTE PTR [edx-0xb706087],1
  419b9c:	out    dx,eax
  419b9d:	repnz (bad) 
  419b9f:	xchg   edi,eax
  419ba0:	add    DWORD PTR [ebx-0x48],ecx
  419ba3:	fwait
  419ba4:	mov    cl,0xa3
  419ba6:	or     al,0x86
  419ba8:	sbb    ebx,ebx
  419baa:	mov    ebp,0xe7ef0704
  419baf:	addr16 (bad) 
  419bb1:	lock sbb edi,edi
  419bb4:	pop    DWORD PTR [eax-0x16]
  419bb7:	std    
  419bb8:	imul   esp,DWORD PTR [bx+0x2407],0xffffffca
  419bbe:	push   edx
  419bbf:	stos   DWORD PTR es:[edi],eax
  419bc0:	mov    al,ds:0x0
	...
  419c31:	add    BYTE PTR [eax],al
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xffffffca
  419c41:	daa    
  419c42:	sbb    bl,BYTE PTR [esi]
  419c44:	push   eax
  419c45:	pop    ss
  419c46:	add    DWORD PTR [eax],eax
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    BYTE PTR [ecx+esi*8],cl
  419c4e:	arpl   WORD PTR [esi],ax
  419c50:	or     BYTE PTR [edx+0x3a],dh
  419c53:	xchg   ch,ch
  419c55:	add    eax,0x6838e1f8
  419c5a:	rol    BYTE PTR [eax+eiz*2],0x98
  419c5e:	mov    eax,ds:0x81a5f39e
  419c63:	lods   eax,DWORD PTR ds:[esi]
  419c64:	inc    eax
  419c65:	mov    ds:0x607450ad,al
  419c6a:	push   ecx
  419c6b:	shl    DWORD PTR [ebp+0x4],cl
  419c6e:	stos   BYTE PTR es:[edi],al
  419c6f:	shr    DWORD PTR [edi-0x21],0x23
  419c73:	and    DWORD PTR [ebp-0x11],edi
  419c76:	mov    ebx,0xbf70a0ac
  419c7b:	or     DWORD PTR [edx],0xffffffb7
  419c7e:	addr16 out dx,eax
  419c80:	mov    bl,0xa6
  419c82:	pop    esp
  419c83:	mov    ah,BYTE PTR [eax-0x3cc80967]
  419c89:	jae    0x419cc3
  419c8b:	repnz push es
  419c8d:	outs   dx,BYTE PTR ds:[esi]
  419c8e:	into   
  419c8f:	mov    ebx,0x4f602220
  419c94:	lds    ebx,FWORD PTR [ebp+0x66]
  419c97:	add    eax,0x581aea1d
  419c9c:	je     0x419c42
  419c9e:	pop    edx
  419c9f:	stos   DWORD PTR es:[edi],eax
  419ca0:	pop    esp
  419ca1:	dec    esp
  419ca2:	mov    cl,0x5f
  419ca4:	fadd   QWORD PTR [edi-0x2f50a3a1]
  419caa:	int    0x52
  419cac:	cmp    ecx,DWORD PTR [esi+0x11]
  419caf:	repz test eax,0x224b5844
  419cb5:	in     al,0x10
  419cb7:	mov    esi,0xf776ddd7
  419cbc:	iret   
  419cbd:	pop    ecx
  419cbe:	mov    ebx,0xa48bb31a
  419cc3:	(bad)
  419cc6:	inc    ecx
  419cc7:	cld    
  419cc8:	and    ebp,DWORD PTR [eax-0x56]
  419ccb:	xchg   edx,eax
  419ccc:	sbb    ebx,DWORD PTR [edi]
  419cce:	mov    ch,0xc7
  419cd0:	clc    
  419cd1:	and    edx,DWORD PTR [ecx+esi*4]
  419cd4:	pop    ebp
  419cd5:	fcos   
  419cd7:	enter  0xd964,0x51
  419cdb:	fmul   DWORD PTR [edx+edi*8-0x41]
  419cdf:	push   0xda0b3de2
  419ce4:	pop    ss
  419ce5:	outs   dx,BYTE PTR ds:[esi]
  419ce6:	adc    dl,BYTE PTR [edx]
  419ce8:	pop    es
  419ce9:	push   eax
  419cea:	ret    0xad1c
  419ced:	fwait
  419cee:	(bad)  
  419cf1:	aad    0xf8
  419cf3:	pop    ds
  419cf4:	cmp    BYTE PTR [edi+0x13],bl
  419cf7:	jnp    0x419cd5
  419cf9:	or     al,BYTE PTR [ebx+0x2f]
  419cfc:	sub    BYTE PTR [edx+edx*1+0x3a],0xf4
  419d01:	xor    eax,0x9b138a04
  419d06:	loopne 0x419c92
  419d08:	ss iret 
  419d0a:	push   edi
  419d0b:	mov    ch,0x46
  419d0d:	dec    edi
  419d0e:	hlt    
  419d0f:	das    
  419d10:	mov    dh,BYTE PTR [esi+ebx*4+0x30f24f78]
  419d17:	lock xchg esi,eax
  419d19:	inc    ebx
  419d1a:	mov    bh,0xd5
  419d1c:	dec    ebx
  419d1d:	sbb    ecx,DWORD PTR [edi+0x4a]
  419d20:	test   dh,dh
  419d22:	sub    dh,BYTE PTR [eax]
  419d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d25:	in     eax,dx
  419d26:	jb     0x419d94
  419d28:	sahf   
  419d29:	test   eax,0xff7501ed
  419d2e:	sub    al,0x42
  419d30:	outs   dx,DWORD PTR ds:[esi]
  419d31:	mov    ebx,0x7d776070
  419d36:	dec    ebx
  419d37:	mov    dl,0x91
  419d39:	cs popf 
  419d3b:	(bad)  
  419d3c:	adc    ecx,ebp
  419d3e:	jg     0x419d3c
  419d40:	dec    ecx
	...
  419db1:	add    BYTE PTR [eax],al
  419db3:	add    BYTE PTR [esi],cl
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	mov    WORD PTR [edx],gs
  419dc2:	jge    0x419d4b
  419dc4:	inc    ebp
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    ch,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [esp+edx*1-0x12],ah
  419dcf:	pusha  
  419dd0:	mov    bh,0xe3
  419dd2:	(bad)
  419dd6:	mov    bh,BYTE PTR [eax-0x4a]
  419dd9:	adc    eax,0x9e2d1046
  419dde:	add    DWORD PTR [ebx-0x4e8239c7],edi
  419de4:	pop    eax
  419de5:	jmp    0x3d1706c0
  419dea:	and    edi,DWORD PTR [eax]
  419dec:	popa   
  419ded:	mov    esp,0x2641d851
  419df2:	or     cl,BYTE PTR [ebx+edi*4-0x1a799922]
  419df9:	adc    edi,DWORD PTR [edx+0x65d8000c]
  419dff:	mov    WORD PTR [ecx],?
  419e01:	and    BYTE PTR [edx],0xca
  419e04:	jg     0x419e02
  419e06:	mov    ch,0x70
  419e08:	pop    ebx
  419e09:	retf   0x70f5
  419e0c:	push   esi
  419e0d:	repnz pop ds
  419e0f:	pop    ebp
  419e10:	cmp    dh,BYTE PTR [esi+edx*1]
  419e13:	sti    
  419e14:	femms  
  419e16:	mov    dh,al
  419e18:	pop    ebx
  419e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e1a:	inc    eax
  419e1b:	push   ds
  419e1c:	int3   
  419e1d:	pop    ebp
  419e1e:	sbb    ch,BYTE PTR [ecx]
  419e20:	aas    
  419e21:	fidiv  DWORD PTR [ecx+0x20]
  419e24:	aam    0x2d
  419e26:	pop    esi
  419e27:	stos   DWORD PTR es:[edi],eax
  419e28:	outs   dx,BYTE PTR ds:[esi]
  419e29:	shl    bl,0xf7
  419e2c:	push   ss
  419e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e2e:	(bad)  
  419e30:	popa   
  419e31:	xchg   ecx,eax
  419e32:	icebp  
  419e33:	popa   
  419e34:	mov    bh,0xa4
  419e36:	ds add esp,ebx
  419e39:	sub    BYTE PTR [edi+ecx*1-0x37],0x1e
  419e3e:	pop    esi
  419e3f:	or     al,BYTE PTR [esi-0x72]
  419e42:	sub    ebx,DWORD PTR [edx+0x58]
  419e45:	jmp    0xa7af2271
  419e4a:	inc    eax
  419e4b:	push   es
  419e4c:	inc    esp
  419e4d:	in     al,dx
  419e4e:	call   0x37ddc80a
  419e53:	xchg   BYTE PTR [eax+edx*4+0x2e],ch
  419e57:	xor    ecx,ebp
  419e59:	cwde   
  419e5a:	xchg   BYTE PTR ds:0x114253c0,al
  419e60:	jmp    0x4188e910
  419e65:	push   eax
  419e66:	adc    BYTE PTR [ecx+edi*8-0x7adc46d3],dl
  419e6d:	sbb    DWORD PTR [edi],edx
  419e6f:	sub    cl,BYTE PTR [edi+0x22a4313f]
  419e75:	inc    esi
  419e76:	jo     0x419e4c
  419e78:	mov    eax,ds:0xa646e91d
  419e7d:	arpl   ax,di
  419e7f:	ror    ebp,cl
  419e81:	push   ebx
  419e82:	xchg   esp,eax
  419e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e84:	adc    eax,0x258eaf20
  419e89:	pushf  
  419e8a:	imul   edx,DWORD PTR [edi+0x1f],0x6c23ca4
  419e91:	in     al,0xbf
  419e93:	xchg   edi,eax
  419e94:	in     eax,0x83
  419e96:	in     eax,0x6a
  419e98:	inc    esi
  419e99:	ret    0x7866
  419e9c:	and    esi,DWORD PTR [ebx+0x53]
  419e9f:	or     al,0xe9
  419ea1:	add    eax,0xcc330b5
  419ea6:	sub    bh,cl
  419ea8:	ror    DWORD PTR [ecx-0x65],cl
  419eab:	inc    esi
  419eac:	xchg   DWORD PTR [edi+0x60b218a5],ecx
  419eb2:	push   es
  419eb3:	fucom  st(6)
  419eb5:	xor    ebp,DWORD PTR [ecx+esi*8-0x52]
  419eb9:	dec    esi
  419eba:	mov    bl,0x6e
  419ebc:	out    dx,al
  419ebd:	data16 jecxz 0x419ece
  419ec0:	dec    eax
	...
  419f31:	add    BYTE PTR [eax],al
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x4661f4b7]
  419f41:	test   al,0xd0
  419f43:	adc    DWORD PTR [edx],edi
  419f45:	sbb    DWORD PTR [ecx],eax
  419f47:	add    ch,dh
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    BYTE PTR [eax],bl
  419f4d:	clc    
  419f4e:	jbe    0x419f9e
  419f50:	addr16 inc ecx
  419f52:	sahf   
  419f53:	pop    esp
  419f54:	mov    ebx,0x21e17484
  419f59:	xor    al,0x7d
  419f5b:	out    dx,eax
  419f5c:	pushf  
  419f5d:	(bad)  
  419f5f:	mov    WORD PTR [esi],?
  419f61:	(bad)  
  419f63:	stos   BYTE PTR es:[edi],al
  419f64:	and    eax,0x396453a
  419f69:	imul   ebx,DWORD PTR [eax+esi*4+0x5b],0x1e
  419f6e:	test   BYTE PTR [ebp+0x68],al
  419f71:	lahf   
  419f72:	inc    ebx
  419f73:	jns    0x419f2a
  419f75:	in     al,dx
  419f76:	push   ebp
  419f77:	inc    edi
  419f78:	inc    edi
  419f79:	loop   0x419fb8
  419f7b:	xchg   edx,eax
  419f7c:	out    0x7a,al
  419f7e:	ins    BYTE PTR es:[edi],dx
  419f7f:	popa   
  419f80:	inc    esi
  419f81:	test   eax,0x4fb71abd
  419f86:	or     eax,0xae550086
  419f8b:	cmp    DWORD PTR [edx+0x6c],ebp
  419f8e:	inc    ebx
  419f8f:	scas   al,BYTE PTR es:[edi]
  419f90:	and    bh,cl
  419f92:	jecxz  0x41a004
  419f94:	test   DWORD PTR [edx+ebp*4],edi
  419f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f98:	hlt    
  419f99:	fwait
  419f9a:	ja     0x419fd6
  419f9c:	sub    al,0x7e
  419f9e:	aas    
  419f9f:	popf   
  419fa0:	repz (bad) 
  419fa2:	push   ecx
  419fa3:	arpl   dx,sp
  419fa5:	cmp    al,0xbb
  419fa7:	ss mov esi,0xc51295e6
  419fad:	popa   
  419fae:	pop    ebx
  419faf:	mov    DWORD PTR ds:0x8c717afc,ebx
  419fb5:	jb     0x419fb2
  419fb7:	jne    0x419fb4
  419fb9:	mov    eax,0xd27e6c45
  419fbe:	retf   0xed75
  419fc1:	loopne 0x419f74
  419fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc4:	xchg   edi,eax
  419fc5:	adc    eax,0x426c088b
  419fca:	and    DWORD PTR [eax+0x6f],edx
  419fcd:	xor    eax,0xac97b67b
  419fd2:	leave  
  419fd3:	ficom  WORD PTR [eax+esi*2]
  419fd6:	test   eax,0x7df0e28
  419fdb:	enter  0x5e41,0x5b
  419fdf:	jno    0x419f6c
  419fe1:	cmp    ah,BYTE PTR [ecx+0x7b]
  419fe4:	or     eax,0x38e51202
  419fe9:	test   DWORD PTR [ecx-0x37],0x76a3370e
  419ff0:	adc    al,0xec
  419ff2:	imul   esi,ebp,0xfffffff8
  419ff5:	xchg   ebx,eax
  419ff6:	cmp    BYTE PTR [ebx],0x4
  419ff9:	aam    0x8
  419ffb:	fisub  WORD PTR [ebp+0x238ab911]
  41a001:	mov    ecx,0x590bf3a0
  41a006:	mov    ah,0xad
  41a008:	cmp    DWORD PTR [ebp+0x68],ebp
  41a00b:	adc    al,BYTE PTR [edi+0x4a]
  41a00e:	jmp    0x3a81:0x5a21ca3c
  41a015:	xor    eax,0x8b198738
  41a01a:	push   0xfffffff8
  41a01c:	xor    al,0x70
  41a01e:	leave  
  41a01f:	sub    eax,0x2f8b1040
  41a024:	xchg   BYTE PTR [eax+0x9],ch
  41a027:	dec    esi
  41a028:	shl    al,0xeb
  41a02b:	(bad)  
  41a02c:	mov    ds:0xceaf5ac3,al
  41a031:	imul   esp,DWORD PTR [ecx+0x1],0xfffffffa
  41a035:	mov    WORD PTR [ecx],?
  41a037:	rcl    BYTE PTR [ecx+0x777a83fb],0xc8
  41a03e:	nop
  41a03f:	fnstcw WORD PTR [ebp+0x0]
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	test   DWORD PTR [esi-0xa441be],ebx
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x28304a2
  41a0c2:	cmp    DWORD PTR [edx+0x2f],ebx
  41a0c5:	sbb    al,BYTE PTR [ecx]
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [esi],bl
  41a0cd:	push   ebx
  41a0ce:	test   ebp,edi
  41a0d0:	jge    0x41a138
  41a0d2:	mov    ecx,DWORD PTR [edi]
  41a0d4:	sub    edi,DWORD PTR [edi]
  41a0d6:	xchg   ebp,eax
  41a0d7:	lods   al,BYTE PTR ds:[esi]
  41a0d8:	ret    
  41a0d9:	sub    BYTE PTR [eax],bh
  41a0db:	pop    edx
  41a0dc:	cmp    BYTE PTR [edi],ah
  41a0de:	adc    eax,0x51e9e4dd
  41a0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e4:	lods   al,BYTE PTR ds:[esi]
  41a0e5:	mov    cl,0x66
  41a0e7:	or     BYTE PTR [ebx-0x52cc9845],bl
  41a0ed:	and    DWORD PTR [eax+0x24c50418],edx
  41a0f3:	push   ecx
  41a0f4:	cdq    
  41a0f5:	pop    ecx
  41a0f6:	push   edx
  41a0f7:	imul   esp,DWORD PTR ds:0x7236d983,0xc651a5ea
  41a101:	sbb    DWORD PTR [ebx+esi*4-0x1267f629],edi
  41a108:	imul   esi,DWORD PTR [ebx+0x109832cf],0x49a5514f
  41a112:	ret    0x7846
  41a115:	push   esi
  41a116:	xchg   ecx,eax
  41a117:	in     eax,0x5c
  41a119:	jns    0x41a0f8
  41a11b:	neg    BYTE PTR [edi+0x56]
  41a11e:	xchg   BYTE PTR [eax-0x68],ch
  41a121:	rol    DWORD PTR [edx-0xa],cl
  41a124:	lahf   
  41a125:	push   es
  41a126:	iret   
  41a127:	pop    ebx
  41a128:	pop    ecx
  41a129:	mov    bl,0xc1
  41a12b:	pop    edx
  41a12c:	jg     0x41a129
  41a12e:	das    
  41a12f:	out    dx,eax
  41a130:	retf   
  41a131:	add    ebx,DWORD PTR [ebp-0x56750a46]
  41a137:	push   0x22
  41a139:	cmp    eax,0x81e3fa7a
  41a13e:	ss pop edi
  41a140:	jp     0x41a196
  41a142:	add    eax,0xbc6bfc1f
  41a147:	xchg   DWORD PTR [esi+eax*1+0x455e159],edx
  41a14e:	add    BYTE PTR [esi],0xbc
  41a151:	jmp    0x396d4ab7
  41a156:	mov    ecx,0xacbab828
  41a15b:	sub    dl,BYTE PTR [ebp-0x3be5499b]
  41a161:	lods   eax,DWORD PTR ds:[esi]
  41a162:	sub    cl,BYTE PTR [ebx]
  41a164:	pop    ecx
  41a165:	scas   al,BYTE PTR es:[edi]
  41a166:	shr    BYTE PTR [edi+eiz*2+0x5c],cl
  41a16a:	jl     0x41a104
  41a16c:	or     eax,0x2cb96bd
  41a171:	ins    DWORD PTR es:[edi],dx
  41a172:	cwde   
  41a173:	jae    0x41a1da
  41a175:	in     al,0x41
  41a177:	pusha  
  41a178:	add    BYTE PTR [ebx+ebp*1-0x72],cl
  41a17c:	je     0x41a167
  41a17e:	sub    al,0x81
  41a180:	lock pop esi
  41a182:	push   edx
  41a183:	iret   
  41a184:	jns    0x41a17c
  41a186:	cmp    BYTE PTR [ecx+0x1406e084],dh
  41a18c:	pop    ecx
  41a18d:	pop    ds
  41a18e:	shr    ecx,0x27
  41a191:	add    bl,BYTE PTR ds:0xdb6f024a
  41a197:	data16 data16 xchg BYTE PTR [eax+0x46],al
  41a19c:	mov    al,cl
  41a19e:	mov    esp,0x63b6cad9
  41a1a3:	cmc    
  41a1a4:	ins    BYTE PTR es:[edi],dx
  41a1a5:	xchg   ecx,eax
  41a1a6:	and    al,0xa3
  41a1a8:	add    eax,0x5efe1f3a
  41a1ad:	int3   
  41a1ae:	mov    cs,WORD PTR ds:0x8a1aab55
  41a1b4:	xor    eax,0xf4dccdc0
  41a1b9:	stos   DWORD PTR es:[edi],eax
  41a1ba:	daa    
  41a1bb:	xor    ecx,edi
  41a1bd:	imul   edi,DWORD PTR [ebx],0xffffffdb
  41a1c0:	xchg   ecx,eax
	...
  41a231:	add    BYTE PTR [eax],al
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	test   BYTE PTR ds:0x2449d1c6,0x1b
  41a246:	add    DWORD PTR [eax],eax
  41a248:	cmc    
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [esi],al
  41a24d:	adc    BYTE PTR [ecx+ebp*1-0x3b101a1d],ah
  41a254:	shr    BYTE PTR [edi+0x66],1
  41a257:	inc    ebx
  41a258:	pop    ebx
  41a259:	pop    ecx
  41a25a:	ds stos DWORD PTR es:[edi],eax
  41a25c:	dec    edi
  41a25d:	dec    edi
  41a25e:	out    dx,eax
  41a25f:	rcr    ch,cl
  41a261:	ja     0x41a2a6
  41a263:	push   ebx
  41a264:	aas    
  41a265:	push   ss
  41a266:	add    eax,DWORD PTR [edi+0x6b9e87b2]
  41a26c:	idiv   DWORD PTR [eax]
  41a26e:	lods   al,BYTE PTR ds:[esi]
  41a26f:	stc    
  41a270:	dec    edi
  41a271:	sub    al,0x26
  41a273:	push   esp
  41a274:	aas    
  41a275:	(bad)  
  41a276:	xchg   esp,eax
  41a277:	outs   dx,BYTE PTR ds:[esi]
  41a278:	out    0xea,al
  41a27a:	jnp    0x41a250
  41a27c:	xchg   DWORD PTR ds:0xdd80976b,eax
  41a282:	imul   edi,DWORD PTR [ebp+0xdf30548],0x9452b045
  41a28c:	add    cl,bh
  41a28e:	shl    edi,0xe8
  41a291:	adc    eax,DWORD PTR [eax+0x2c]
  41a294:	inc    esi
  41a295:	retf   0x7510
  41a298:	sbb    BYTE PTR [ebp-0x4586e1d4],0x94
  41a29f:	retf   
  41a2a0:	repz xchg esp,eax
  41a2a2:	cdq    
  41a2a3:	retf   
  41a2a4:	or     bl,BYTE PTR [edi]
  41a2a6:	xor    BYTE PTR [ebx],ch
  41a2a8:	ja     0x41a2c6
  41a2aa:	iret   
  41a2ab:	jb     0x41a267
  41a2ad:	jne    0x41a2de
  41a2af:	sbb    BYTE PTR gs:[ebp+0x50b955ad],dl
  41a2b6:	imul   edi,DWORD PTR [ecx+0x361c8e7],0x883814fd
  41a2c0:	add    esp,0xfbc4f99a
  41a2c6:	and    al,0x5
  41a2c8:	sbb    DWORD PTR [edi+ebx*4+0x7ba81634],0xffffffb9
  41a2d0:	add    esp,ebx
  41a2d2:	loope  0x41a2db
  41a2d4:	shl    BYTE PTR [esi+0x7f5b05b0],1
  41a2da:	test   eax,0x495b031e
  41a2df:	sti    
  41a2e0:	repnz dec ebp
  41a2e2:	mov    bh,0xdd
  41a2e4:	(bad)  
  41a2e5:	or     bh,BYTE PTR [esi]
  41a2e7:	pop    si
  41a2e9:	sbb    BYTE PTR [eax],ah
  41a2eb:	adc    BYTE PTR [esi],0xda
  41a2ee:	and    BYTE PTR [edx+ebx*4],ah
  41a2f1:	fwait
  41a2f2:	out    0x9b,al
  41a2f4:	sahf   
  41a2f5:	les    ecx,FWORD PTR [edx-0x6b]
  41a2f8:	loope  0x41a288
  41a2fa:	xchg   BYTE PTR [ecx-0x60],ch
  41a2fd:	push   0xffffffe9
  41a2ff:	adc    ah,BYTE PTR [eax]
  41a301:	xchg   ecx,eax
  41a302:	mov    ebp,0x1cb574da
  41a307:	and    esp,eax
  41a309:	sub    DWORD PTR [edx],esi
  41a30b:	cs jne 0x41a2d4
  41a30e:	(bad)  
  41a30f:	pop    edx
  41a310:	jbe    0x41a2fb
  41a312:	cld    
  41a313:	jmp    0x13df5f96
  41a318:	cdq    
  41a319:	in     al,dx
  41a31a:	xor    eax,0x1c633ade
  41a31f:	adc    eax,0x9a19cba4
  41a324:	xor    ecx,DWORD PTR [edi]
  41a326:	in     eax,dx
  41a327:	adc    eax,0x894681d8
  41a32c:	xor    BYTE PTR ds:0xd3505385,0x80
  41a333:	add    ebx,edi
  41a335:	dec    ebx
  41a336:	(bad)  [ecx-0xb]
  41a339:	inc    eax
  41a33a:	fdivp  st(5),st
  41a33c:	mov    BYTE PTR [edi+eax*1+0x54],bl
  41a340:	enter  0x0,0x0
	...
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	adc    DWORD PTR [esi+0x1c199efc],0x1
  41a3c7:	add    ch,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ecx],dl
  41a3cd:	mov    al,0x7a
  41a3cf:	jae    0x41a3bd
  41a3d1:	in     eax,dx
  41a3d2:	test   al,0x8a
  41a3d4:	add    al,0xc5
  41a3d6:	or     ebp,DWORD PTR [eax]
  41a3d8:	and    bl,BYTE PTR [eax+ecx*8]
  41a3db:	mov    ah,0x2d
  41a3dd:	push   es
  41a3de:	adc    al,BYTE PTR [edi+edx*2-0x39]
  41a3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e3:	or     al,0x87
  41a3e5:	scas   eax,DWORD PTR es:[edi]
  41a3e6:	pop    ebx
  41a3e7:	adc    ebp,0xf9926a66
  41a3ed:	ins    BYTE PTR es:[edi],dx
  41a3ee:	jmp    0xfb8b:0x54a5caa3
  41a3f5:	mov    edi,0xd26d210e
  41a3fa:	add    al,0x75
  41a3fc:	or     ecx,DWORD PTR [ecx+0x66]
  41a3ff:	adc    eax,0x3f7ba615
  41a404:	mov    ah,0x6
  41a406:	int    0xc0
  41a408:	sbb    dl,BYTE PTR [ebx]
  41a40a:	xchg   BYTE PTR [esi+0x5100d8dc],ah
  41a410:	dec    eax
  41a411:	int3   
  41a412:	xchg   ecx,eax
  41a413:	daa    
  41a414:	cmp    al,dl
  41a416:	sbb    DWORD PTR [edx+0x2d],ebx
  41a419:	push   ds
  41a41a:	addr16 xchg esp,eax
  41a41c:	test   ecx,0x48d92082
  41a422:	push   ds
  41a423:	dec    ebx
  41a424:	xchg   ecx,eax
  41a425:	cmp    BYTE PTR [ecx+0x70e4b67b],bl
  41a42b:	dec    edi
  41a42c:	jbe    0x41a4a7
  41a42e:	std    
  41a42f:	pop    esp
  41a430:	xchg   ebp,eax
  41a431:	into   
  41a432:	int    0xb2
  41a434:	xchg   DWORD PTR [ebx+0x4c99bbc4],esi
  41a43a:	push   0x51
  41a43c:	add    edi,DWORD PTR [edi+0x58]
  41a43f:	adc    esp,esp
  41a441:	nop
  41a442:	mov    WORD PTR [eax],?
  41a444:	add    al,0xb
  41a446:	retf   0x994
  41a449:	int    0x5d
  41a44b:	gs leave 
  41a44d:	cmp    cl,BYTE PTR [eax-0x7d043e77]
  41a453:	cmp    eax,0x8330036b
  41a458:	lods   al,BYTE PTR ds:[esi]
  41a459:	pop    ds
  41a45a:	mov    ?,WORD PTR [edx+0x21f38029]
  41a460:	cld    
  41a461:	fisttp DWORD PTR [esi-0x9b37d03]
  41a467:	inc    ebp
  41a468:	xchg   edx,eax
  41a469:	jp     0x41a425
  41a46b:	push   esp
  41a46c:	add    edx,DWORD PTR [ecx+0x4d3d8c81]
  41a472:	sub    bl,ah
  41a474:	sti    
  41a475:	bound  edx,QWORD PTR [ebx+0x2c]
  41a478:	(bad)  
  41a479:	(bad)  [edx+edi*2]
  41a47c:	push   ds
  41a47d:	fld    QWORD PTR [esi-0xb93b732]
  41a483:	add    DWORD PTR [eax-0x44],ebx
  41a486:	out    0xdb,eax
  41a488:	inc    ebx
  41a489:	sub    BYTE PTR [ebx+0x59a9c6fa],dl
  41a48f:	ror    esp,1
  41a491:	mov    WORD PTR [edi],?
  41a493:	pop    ds
  41a494:	jmp    0x21846211
  41a499:	popa   
  41a49a:	add    BYTE PTR [ebx-0x1],ah
  41a49d:	ins    BYTE PTR es:[edi],dx
  41a49e:	pop    ss
  41a49f:	sub    eax,0x99785baa
  41a4a4:	inc    edi
  41a4a5:	(bad)  
  41a4a6:	jmp    0xe4558704
  41a4ab:	and    ah,BYTE PTR [ecx+0x39080eb8]
  41a4b1:	scas   eax,DWORD PTR es:[edi]
  41a4b2:	add    DWORD PTR [edx+0x7ea2d559],eax
  41a4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4b9:	cli    
  41a4ba:	and    ecx,DWORD PTR [ebx+edi*1+0x5b90e956]
	...
  41a531:	add    BYTE PTR [eax],al
  41a533:	add    BYTE PTR [edi-0x9d722c],ch
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x15e9e0aa]
  41a541:	fst    DWORD PTR [ebx]
  41a543:	mov    ecx,0x11d0e
  41a548:	cmc    
  41a549:	add    BYTE PTR [eax],al
  41a54b:	add    BYTE PTR [esi-0x513f0c79],dl
  41a551:	es push cs
  41a553:	or     edx,ebx
  41a555:	xchg   edi,eax
  41a556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a557:	cmp    dl,BYTE PTR [edx-0x34ce8aaf]
  41a55d:	push   eax
  41a55e:	(bad)  
  41a55f:	sbb    eax,0xc2c4b4d2
  41a564:	lahf   
  41a565:	pop    edx
  41a566:	shl    DWORD PTR [ebp-0x4a],0x5b
  41a56a:	out    0x95,eax
  41a56c:	xchg   edi,eax
  41a56d:	push   ds
  41a56e:	imul   esi,DWORD PTR [esi+0x3f],0x512f9ee9
  41a575:	test   al,0x99
  41a577:	mov    bl,0xa9
  41a579:	adc    BYTE PTR [ecx],0xb7
  41a57c:	call   0xc199:0xb4e374d1
  41a583:	icebp  
  41a584:	sub    DWORD PTR [ecx-0x4138410b],edi
  41a58a:	mov    edi,?
  41a58c:	cmc    
  41a58d:	les    edx,FWORD PTR ds:0x20361852
  41a593:	out    dx,eax
  41a594:	lock pop ebp
  41a596:	inc    ecx
  41a597:	test   eax,0xfc9496f0
  41a59c:	rcl    BYTE PTR [eax-0x26],0x2c
  41a5a0:	adc    eax,0xc1d186c4
  41a5a5:	xchg   ax,ax
  41a5a7:	(bad)  
  41a5a8:	out    0xf7,al
  41a5aa:	jmp    0x8cb3e1b5
  41a5af:	test   DWORD PTR [esi],edi
  41a5b1:	jbe    0x41a58b
  41a5b3:	dec    edi
  41a5b4:	jb     0x41a589
  41a5b6:	cdq    
  41a5b7:	in     al,0xbd
  41a5b9:	dec    dl
  41a5bb:	or     edx,edi
  41a5bd:	xchg   DWORD PTR [edi],eax
  41a5bf:	lahf   
  41a5c0:	push   eax
  41a5c1:	(bad)  
  41a5c2:	cs aam 0xcf
  41a5c5:	cmp    ebp,DWORD PTR [ecx+eiz*1]
  41a5c8:	mov    al,ds:0x78e55fd0
  41a5cd:	bound  edi,QWORD PTR [esi]
  41a5cf:	mov    al,ds:0x2af39116
  41a5d4:	sbb    al,0x67
  41a5d6:	retf   0x8f4a
  41a5d9:	addr16 out dx,eax
  41a5db:	xchg   ebx,eax
  41a5dc:	mov    ecx,0x26eae22c
  41a5e1:	inc    edx
  41a5e2:	sub    BYTE PTR [ecx+0x6f4a4293],bh
  41a5e8:	xchg   edx,eax
  41a5e9:	bound  esp,QWORD PTR [ecx+0x589ce502]
  41a5ef:	das    
  41a5f0:	ins    DWORD PTR es:[edi],dx
  41a5f1:	sbb    BYTE PTR [edx-0x32ab75b5],bh
  41a5f7:	leave  
  41a5f8:	inc    esp
  41a5f9:	xchg   bl,bl
  41a5fb:	dec    edx
  41a5fc:	out    dx,al
  41a5fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5fe:	inc    esp
  41a5ff:	add    BYTE PTR [ebx-0x1],0x1
  41a603:	ds xchg ebp,eax
  41a605:	rcr    DWORD PTR ds:0x4f0c0000,cl
  41a60b:	and    eax,0x9000fe38
  41a610:	repnz pushf 
  41a612:	test   esp,edx
  41a614:	cmp    BYTE PTR [ebx+0x72aaecb9],ch
  41a61a:	addr16 fwait
  41a61c:	in     al,dx
  41a61d:	push   es
  41a61e:	push   ebx
  41a61f:	and    eax,0x21dfeb70
  41a624:	sub    BYTE PTR [ebp+0x6dcb4788],0x39
  41a62b:	mov    ds:0xa07c67fe,al
  41a630:	sub    ecx,DWORD PTR [esp+ebp*2]
  41a633:	xchg   ch,ah
  41a635:	outs   dx,DWORD PTR ds:[esi]
  41a636:	xor    BYTE PTR [ecx+0x430859c1],ch
  41a63c:	inc    eax
  41a63e:	xor    BYTE PTR [ebx+0x5c],bh
	...
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0xb9
  41a6c1:	sub    ebp,eax
  41a6c3:	mov    BYTE PTR [ebx],0x1e
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	cmc    
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    bl,al
  41a6cd:	mov    ch,0xad
  41a6cf:	dec    ecx
  41a6d0:	addr16 pop es
  41a6d2:	push   ebx
  41a6d3:	pushf  
  41a6d4:	mov    dl,0x13
  41a6d6:	loope  0x41a721
  41a6d8:	xor    ecx,ecx
  41a6da:	fnsave [ecx]
  41a6dc:	mov    ebp,edi
  41a6de:	mov    BYTE PTR [esi],al
  41a6e0:	pop    ebx
  41a6e1:	xor    eax,0x4166cfcc
  41a6e6:	cmp    bl,dh
  41a6e8:	add    bh,BYTE PTR [esi-0x3cb4c73b]
  41a6ee:	loop   0x41a6c8
  41a6f0:	mov    bh,0x88
  41a6f2:	pushf  
  41a6f3:	cmp    al,0xad
  41a6f5:	iret   
  41a6f6:	xchg   edi,eax
  41a6f7:	sar    BYTE PTR [esi+edi*8+0x188bf282],1
  41a6fe:	fisttp DWORD PTR [ecx+0x34]
  41a701:	jb     0x41a6e7
  41a703:	xchg   ebp,eax
  41a704:	cmp    eax,DWORD PTR [edi-0x2]
  41a707:	mov    ds:0x81d5e8ee,eax
  41a70c:	shl    DWORD PTR [eax-0x292d05f1],1
  41a712:	or     al,0x1c
  41a714:	cmp    al,0x3b
  41a716:	pop    esi
  41a717:	pop    ebx
  41a718:	les    ebx,FWORD PTR [ecx-0x139f47f8]
  41a71e:	dec    eax
  41a71f:	mov    ebp,0xfea7ec18
  41a724:	jge    0x41a74a
  41a726:	retf   
  41a727:	adc    DWORD PTR [ecx],edx
  41a729:	arpl   WORD PTR [esi+ebp*2-0x24f64fb7],di
  41a730:	mov    ch,0x90
  41a732:	mov    DWORD PTR [edi-0x7a53fc1c],ebp
  41a738:	in     al,dx
  41a739:	xchg   esi,eax
  41a73a:	ja     0x41a77b
  41a73c:	pop    esi
  41a73d:	sub    eax,DWORD PTR [edx-0xe]
  41a740:	imul   ebx,DWORD PTR [esi],0x80432bd4
  41a746:	jg     0x41a6d0
  41a748:	push   ebp
  41a749:	sbb    DWORD PTR [edx-0x68efeac],esp
  41a74f:	push   ecx
  41a750:	jne    0x41a6f4
  41a752:	mov    BYTE PTR [edi+0x5f2b96b6],dh
  41a758:	mov    ebp,0x23e06e2a
  41a75d:	pop    ds
  41a75e:	fistp  QWORD PTR [eax+0x5]
  41a761:	scas   eax,DWORD PTR es:[edi]
  41a762:	js     0x41a7b8
  41a764:	ds mov ch,0x14
  41a767:	xchg   BYTE PTR [eax-0x50244804],cl
  41a76d:	pop    eax
  41a76e:	stos   DWORD PTR es:[edi],eax
  41a76f:	add    eax,0xc809043
  41a774:	pop    ss
  41a775:	xchg   esi,eax
  41a776:	jle    0x41a6fe
  41a778:	into   
  41a779:	inc    esp
  41a77a:	mov    dh,0x4
  41a77c:	je     0x41a71c
  41a77e:	dec    esi
  41a77f:	out    0x98,al
  41a781:	jne    0x41a725
  41a783:	pop    ds
  41a784:	and    dl,ch
  41a786:	xor    al,0xf6
  41a788:	or     eax,0x9f0cc768
  41a78d:	xchg   esi,eax
  41a78e:	lods   eax,DWORD PTR ds:[esi]
  41a78f:	inc    ecx
  41a790:	adc    DWORD PTR [edx-0x58],ebx
  41a793:	mov    eax,ds:0xae0cee70
  41a798:	dec    esi
  41a799:	test   esi,esi
  41a79b:	sbb    BYTE PTR [edx+0x3a61fe2d],dh
  41a7a1:	or     DWORD PTR [ebp-0x66],esp
  41a7a4:	and    al,0x40
  41a7a6:	cdq    
  41a7a7:	ret    0x7dd2
  41a7aa:	dec    ebx
  41a7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ad:	jae    0x41a753
  41a7af:	mov    cl,0x19
  41a7b1:	inc    eax
  41a7b2:	pop    ss
  41a7b3:	(bad)  
  41a7b4:	outs   dx,BYTE PTR ds:[esi]
  41a7b5:	jmp    0x7dabeee4
  41a7ba:	adc    cl,0x41
  41a7bd:	push   ebp
  41a7be:	adc    bl,BYTE PTR [ecx+0x44]
	...
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a850
  41a841:	fdivr  QWORD PTR [edx-0x24]
  41a844:	clc    
  41a845:	push   ds
  41a846:	add    DWORD PTR [eax],eax
  41a848:	cmc    
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    dl,bl
  41a84d:	ret    0x8e9a
  41a850:	inc    ebx
  41a851:	xchg   DWORD PTR [esi-0x6f1e5b40],ebx
  41a857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a858:	sub    BYTE PTR [eax-0x6d5c360f],0x46
  41a85f:	cmp    eax,0xdc9f206f
  41a864:	push   0x46d65e4b
  41a869:	or     eax,0x4c60b3e5
  41a86e:	aaa    
  41a86f:	sub    ebp,DWORD PTR [esi-0x3a55cdad]
  41a875:	out    0x11,al
  41a877:	(bad)  [eax-0x38]
  41a87a:	ja     0x41a8a0
  41a87c:	jmp    0xde2cfe48
  41a881:	inc    ecx
  41a882:	mov    eax,ds:0xe35a1e5a
  41a887:	iret   
  41a888:	push   ecx
  41a889:	mov    bh,BYTE PTR [ecx]
  41a88b:	and    al,0xf7
  41a88d:	cmp    eax,0x224f389e
  41a892:	mov    ah,0x44
  41a894:	mov    edx,0x9b06d842
  41a899:	iret   
  41a89a:	mov    edx,0x560f6173
  41a89f:	bound  esp,QWORD PTR [ebp-0x47cbe84]
  41a8a5:	cmp    dl,BYTE PTR [eax-0x7a]
  41a8a8:	sub    esi,DWORD PTR [esi+edx*1-0x5e]
  41a8ac:	or     eax,0xddb9637e
  41a8b1:	dec    ecx
  41a8b2:	dec    edx
  41a8b3:	out    0xcc,al
  41a8b5:	ins    DWORD PTR es:[edi],dx
  41a8b6:	dec    BYTE PTR [ebp-0x25]
  41a8b9:	outs   dx,DWORD PTR ds:[esi]
  41a8ba:	inc    edi
  41a8bb:	push   0x9606d7ae
  41a8c0:	or     esi,0xffffffb7
  41a8c3:	imul   edx,DWORD PTR [ecx-0x73],0xffffff8a
  41a8c7:	fstp   QWORD PTR [eax]
  41a8c9:	mov    ah,0xb8
  41a8cb:	int3   
  41a8cc:	call   0xfd421636
  41a8d1:	aam    0xf7
  41a8d3:	cmp    ah,BYTE PTR [esp+eiz*8-0x6fefcb39]
  41a8da:	push   ds
  41a8db:	dec    edx
  41a8dc:	lea    ecx,[esi]
  41a8de:	mov    ebx,0x3584f2e5
  41a8e3:	mov    edi,0xb31e379c
  41a8e8:	push   es
  41a8e9:	push   ebx
  41a8ea:	xchg   ebx,eax
  41a8eb:	gs jno 0x41a89e
  41a8ee:	adc    dl,ah
  41a8f0:	nop
  41a8f1:	jl     0x41a8a8
  41a8f3:	fcomp  DWORD PTR [ebx-0x74001a9d]
  41a8f9:	addr16 test eax,0x26d2feb0
  41a8ff:	pop    esi
  41a900:	xchg   esi,eax
  41a901:	sbb    al,0x1b
  41a903:	xor    al,0x9
  41a905:	outs   dx,DWORD PTR ds:[esi]
  41a906:	hlt    
  41a907:	mov    bh,BYTE PTR [edx+0x6e]
  41a90a:	dec    DWORD PTR cs:[edx-0x4c]
  41a90e:	imul   eax,esp,0x84da1454
  41a914:	pop    ds
  41a915:	(bad)  
  41a916:	(bad)  
  41a917:	rcl    BYTE PTR [eax+ebx*1],cl
  41a91a:	dec    esi
  41a91b:	fild   DWORD PTR [edi-0x38]
  41a91e:	jg     0x41a999
  41a920:	push   edi
  41a921:	sti    
  41a922:	inc    ebx
  41a923:	shl    DWORD PTR [eax-0x522ce2e9],0x14
  41a92a:	test   BYTE PTR [ebx],cl
  41a92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a92d:	ret    
  41a92e:	jno    0x41a935
  41a930:	xor    cl,al
  41a932:	jge    0x41a93f
  41a934:	hlt    
  41a935:	outs   dx,DWORD PTR ds:[esi]
  41a936:	xchg   esp,eax
  41a937:	fstp   QWORD PTR [eax-0x356c0e9b]
  41a93d:	adc    al,0x2c
  41a93f:	(bad)  
  41a940:	adc    al,BYTE PTR [eax]
	...
  41a9b2:	add    BYTE PTR [eax],al
  41a9b4:	xor    esi,DWORD PTR [ecx]
  41a9b6:	xchg   ebx,eax
  41a9b7:	lds    edx,FWORD PTR [ebx-0x46088819]
  41a9bd:	icebp  
  41a9be:	cmp    eax,0xb4d9ce9e
  41a9c3:	sbb    ebp,ebp
  41a9c5:	pop    ds
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    al,ch
  41a9cd:	hlt    
  41a9ce:	outs   dx,BYTE PTR ds:[esi]
  41a9cf:	in     al,dx
  41a9d0:	cmc    
  41a9d1:	sub    BYTE PTR [esi],al
  41a9d3:	sub    BYTE PTR [edi-0x5fb0de81],dh
  41a9d9:	repz int3 
  41a9db:	mov    BYTE PTR [ebp-0x24],dh
  41a9de:	(bad)  
  41a9df:	lds    edi,FWORD PTR [ebx]
  41a9e1:	repz xor al,0x4e
  41a9e4:	cmp    DWORD PTR [ebx+0x4cacd834],0x6d
  41a9eb:	pop    edx
  41a9ec:	sbb    bh,ah
  41a9ee:	mov    ?,WORD PTR [eax-0x59]
  41a9f1:	and    edi,DWORD PTR ds:0x3146e1e5
  41a9f7:	dec    eax
  41a9f8:	jnp    0x41aa74
  41a9fa:	mov    eax,0x30921bfd
  41a9ff:	fstp   QWORD PTR [ebp-0x69]
  41aa02:	pop    ebp
  41aa03:	aas    
  41aa04:	nop
  41aa05:	push   0xde29537f
  41aa0a:	idiv   DWORD PTR [esi+0x3]
  41aa0d:	sbb    al,0xa3
  41aa0f:	ds ror edi,cl
  41aa12:	sbb    al,0x22
  41aa14:	or     al,0x1d
  41aa16:	(bad)  
  41aa17:	repz mov edi,0xe78245bd
  41aa1d:	aam    0xd6
  41aa1f:	(bad)  
  41aa20:	or     eax,0xa4077027
  41aa25:	add    BYTE PTR [ebx],cl
  41aa27:	push   es
  41aa28:	cmp    al,0x8a
  41aa2a:	js     0x41aa72
  41aa2c:	sbb    eax,0x793b6e61
  41aa31:	in     eax,dx
  41aa32:	(bad)  [eax+0x34]
  41aa35:	sub    ax,WORD PTR [ebp-0x46]
  41aa39:	je     0x41a9f6
  41aa3b:	mov    bh,0x5f
  41aa3d:	pop    esp
  41aa3e:	mov    BYTE PTR [ebx+ecx*4-0x3679f01e],ch
  41aa45:	sub    ebx,0xd4c1c019
  41aa4b:	repnz mov ds:0x50be4a,eax
  41aa51:	xor    ah,BYTE PTR [ebp+0x1bec4475]
  41aa57:	cmp    ebp,DWORD PTR [ebx]
  41aa59:	dec    BYTE PTR [eax+0x74]
  41aa5c:	fldcw  WORD PTR [eax+0x3cfdb7c0]
  41aa62:	sub    edi,DWORD PTR [esi]
  41aa64:	ins    DWORD PTR es:[edi],dx
  41aa65:	cmp    DWORD PTR [edx-0x37],esi
  41aa68:	mov    ebp,0x71c80d4
  41aa6d:	imul   eax,DWORD PTR [eax-0x4e],0xef72b8ae
  41aa74:	mov    eax,0x8a63e58a
  41aa79:	clc    
  41aa7a:	cmp    DWORD PTR [eax-0x74],0xe367c7c
  41aa81:	inc    esp
  41aa82:	pop    esp
  41aa83:	and    DWORD PTR [edx+0x67784b9f],esi
  41aa89:	cs out dx,ax
  41aa8c:	shl    DWORD PTR [eax+0x46],cl
  41aa8f:	or     BYTE PTR [edi-0x4434e49f],dl
  41aa95:	or     esi,esp
  41aa97:	cmp    BYTE PTR [ebx-0x263b743e],bh
  41aa9d:	jecxz  0x41aa30
  41aa9f:	xor    ebp,DWORD PTR [edi+edx*4]
  41aaa2:	repnz into 
  41aaa4:	dec    eax
  41aaa5:	aad    0x5f
  41aaa7:	dec    esi
  41aaa8:	jae    0x41ab26
  41aaaa:	mov    edx,cs
  41aaac:	or     al,BYTE PTR [edx-0x1bdaf3ab]
  41aab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab3:	and    ebp,DWORD PTR [edi]
  41aab5:	push   ecx
  41aab6:	adc    BYTE PTR [eax-0x5cd59853],dl
  41aabc:	inc    eax
  41aabd:	fild   WORD PTR ds:0x5903
	...
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi+0x1d]
  41ab41:	rcl    edi,0x3
  41ab44:	loop   0x41ab66
  41ab46:	add    DWORD PTR [eax],eax
  41ab48:	cmc    
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    ch,bh
  41ab4d:	jg     0x41ab43
  41ab4f:	mov    eax,ds:0x9cc1ddc7
  41ab54:	xlat   BYTE PTR ds:[ebx]
  41ab55:	stc    
  41ab56:	inc    edx
  41ab57:	jp     0x41ab2a
  41ab59:	cmp    al,0x30
  41ab5b:	push   ebp
  41ab5c:	adc    esi,DWORD PTR [edx-0x1e]
  41ab5f:	add    eax,edi
  41ab61:	fild   DWORD PTR [esi+0x76]
  41ab64:	lods   eax,DWORD PTR ds:[esi]
  41ab65:	(bad)  
  41ab66:	call   0xea83abfe
  41ab6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab6c:	arpl   bx,dx
  41ab6e:	clc    
  41ab6f:	scas   al,BYTE PTR es:[edi]
  41ab70:	std    
  41ab71:	cwde   
  41ab72:	fld    DWORD PTR [di-0x53]
  41ab76:	pop    ecx
  41ab77:	(bad)  
  41ab78:	mov    DWORD PTR [esi+0x7156d7e],edx
  41ab7e:	push   0x6183bc88
  41ab83:	sar    DWORD PTR [edx],1
  41ab85:	arpl   WORD PTR [edi],si
  41ab87:	jo     0x41ab2c
  41ab89:	cld    
  41ab8a:	push   ss
  41ab8b:	dec    ecx
  41ab8c:	hlt    
  41ab8d:	mov    cl,0x5d
  41ab8f:	out    dx,al
  41ab90:	and    al,0xaf
  41ab92:	int    0x18
  41ab94:	nop
  41ab95:	sbb    BYTE PTR [ebp-0x15],bh
  41ab98:	call   0x7e5a:0xb91e9f42
  41ab9f:	mov    db1,edx
  41aba2:	xor    al,0xb3
  41aba4:	add    ch,BYTE PTR [eax+eiz*1-0x5530ccb]
  41abab:	push   es
  41abac:	imul   ebx,DWORD PTR [eax],0x6e
  41abaf:	out    0x70,eax
  41abb1:	out    dx,eax
  41abb2:	cmp    BYTE PTR [ecx],cl
  41abb4:	and    eax,0x4f88110e
  41abb9:	data16 std 
  41abbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abbc:	inc    eax
  41abbd:	sub    ebx,eax
  41abbf:	xor    DWORD PTR [ebp-0x57],ecx
  41abc2:	rcr    DWORD PTR [esi-0x270f16d1],0x92
  41abc9:	jg     0x41abe0
  41abcb:	in     eax,0x1d
  41abcd:	push   0xfffffffd
  41abcf:	into   
  41abd0:	mov    ah,0xde
  41abd2:	inc    esi
  41abd3:	jmp    0x41abe1
  41abd5:	xlat   BYTE PTR ds:[ebx]
  41abd6:	(bad)  
  41abd7:	lods   al,BYTE PTR ds:[esi]
  41abd8:	cmp    esi,DWORD PTR ds:0xf4a03967
  41abde:	clc    
  41abdf:	test   DWORD PTR [ebx],eax
  41abe1:	lods   eax,DWORD PTR ds:[esi]
  41abe2:	mov    cl,0x5c
  41abe4:	mov    esi,0xc9bbbd52
  41abe9:	mov    al,0xc0
  41abeb:	je     0x41ab98
  41abed:	fldenv ds:0x4f40d0e8
  41abf3:	push   edi
  41abf4:	sub    ebp,DWORD PTR [esi]
  41abf6:	out    dx,eax
  41abf7:	pop    esp
  41abf8:	out    dx,eax
  41abf9:	pop    ds
  41abfa:	pop    esi
  41abfb:	mov    ebx,0x2446f46b
  41ac00:	mov    esp,0xf452b554
  41ac05:	pop    esi
  41ac06:	shr    DWORD PTR [edi-0x3f],1
  41ac09:	dec    esp
  41ac0a:	jp     0x41abbe
  41ac0c:	sub    BYTE PTR [ebx-0x5e878b7b],dl
  41ac12:	ror    DWORD PTR [esi+0x4f61ed81],cl
  41ac18:	jge    0x41ac33
  41ac1a:	push   ecx
  41ac1b:	adc    eax,0x7c839427
  41ac20:	mov    ah,0x88
  41ac23:	or     ebx,DWORD PTR [edx]
  41ac25:	cmp    eax,0xe7f0e03f
  41ac2a:	in     al,dx
  41ac2b:	adc    DWORD PTR [esi+0x5adc591d],0xeff27159
  41ac35:	xor    DWORD PTR [ecx-0x14e50969],edx
  41ac3b:	in     al,0xc0
  41ac3d:	mov    ecx,0xa1a515
	...
  41acb2:	add    BYTE PTR [eax],al
  41acb4:	lock xchg edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xeb61be02
  41acc3:	mov    bh,dl
  41acc5:	and    DWORD PTR [ecx],eax
  41acc7:	add    ch,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    BYTE PTR [ebp+0x7b],bl
  41acce:	sub    bl,BYTE PTR [ebp-0x4751514e]
  41acd4:	add    eax,0x64e03872
  41acd9:	cmp    BYTE PTR [edx+0x15],al
  41acdc:	pop    ecx
  41acdd:	cmp    BYTE PTR [edx-0x2],cl
  41ace0:	add    DWORD PTR [esi],0x5f
  41ace3:	gs xchg ebx,eax
  41ace5:	bound  esi,QWORD PTR [ebx]
  41ace7:	pop    es
  41ace8:	dec    ebp
  41ace9:	inc    edi
  41acea:	push   cs
  41aceb:	data16 mov bl,0x96
  41acee:	outs   dx,BYTE PTR ds:[esi]
  41acef:	add    eax,edx
  41acf1:	dec    ebp
  41acf2:	ss daa 
  41acf4:	rol    bh,cl
  41acf6:	pusha  
  41acf7:	jnp    0x41ad1a
  41acf9:	xchg   edi,eax
  41acfa:	in     al,dx
  41acfb:	mov    al,0x14
  41acfd:	jb     0x41acdc
  41acff:	mov    ebx,0x58a67a51
  41ad04:	dec    edi
  41ad05:	shl    BYTE PTR [eax],cl
  41ad07:	shl    BYTE PTR [edx-0x4952ee12],cl
  41ad0d:	jae    0x41ac91
  41ad0f:	add    dl,BYTE PTR es:[ebp+esi*8-0x74]
  41ad14:	dec    ebx
  41ad15:	mov    ecx,0xc7addd54
  41ad1a:	cmc    
  41ad1b:	and    BYTE PTR [esi],dl
  41ad1d:	jmp    0x7814:0xdab31c07
  41ad24:	add    eax,0x93d84ba8
  41ad29:	test   eax,0x148da1f8
  41ad2e:	fimul  DWORD PTR [ecx]
  41ad30:	push   ds
  41ad31:	test   eax,0x4cbd680a
  41ad36:	(bad)  
  41ad37:	mov    ebx,0x2ea25430
  41ad3c:	rcr    BYTE PTR [ebx-0x65],cl
  41ad3f:	stos   BYTE PTR es:[edi],al
  41ad40:	pusha  
  41ad41:	dec    edx
  41ad42:	cmp    al,0x12
  41ad44:	fwait
  41ad45:	pop    esp
  41ad46:	mov    esi,DWORD PTR [edi]
  41ad48:	dec    edx
  41ad49:	pop    ecx
  41ad4a:	add    al,0x22
  41ad4c:	stc    
  41ad4d:	int    0x1d
  41ad4f:	sub    esp,edi
  41ad51:	pop    ds
  41ad52:	sahf   
  41ad53:	lock xor dl,BYTE PTR [edi+ecx*2]
  41ad57:	enter  0x166f,0xc4
  41ad5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad5c:	mov    cl,0x27
  41ad5e:	imul   ebp,eax,0x74
  41ad61:	adc    eax,0x1040bd9d
  41ad66:	inc    eax
  41ad67:	jmp    0x41adc7
  41ad69:	call   0x646e:0x37c8c594
  41ad70:	sbb    eax,0xcbd421d2
  41ad75:	xlat   BYTE PTR ds:[ebx]
  41ad76:	aad    0x69
  41ad78:	add    ebp,DWORD PTR es:[esi]
  41ad7b:	aas    
  41ad7c:	aam    0xe5
  41ad7e:	mov    ebp,0x82c63375
  41ad83:	sbb    al,0xf
  41ad85:	cmp    ebp,edx
  41ad87:	xchg   ecx,eax
  41ad88:	mov    bp,0x17a7
  41ad8c:	mov    gs,WORD PTR [edi]
  41ad8e:	jb     0x41ad72
  41ad90:	mov    dl,0x4a
  41ad92:	mov    bl,0x62
  41ad94:	and    ah,0xc1
  41ad97:	xor    ebp,esp
  41ad99:	ror    dl,0x82
  41ad9c:	dec    ebx
  41ad9d:	retf   0x7f7e
  41ada0:	aaa    
  41ada1:	xor    dl,BYTE PTR [edx-0x1111d47a]
  41ada7:	jl     0x41ad64
  41ada9:	dec    edi
  41adaa:	mul    esi
  41adac:	jne    0x41adfc
  41adae:	xor    DWORD PTR [edx],edi
  41adb0:	push   ss
  41adb1:	aad    0x9c
  41adb3:	idiv   BYTE PTR [edi+ebp*1-0x76]
  41adb7:	cmp    ebp,ecx
  41adb9:	jmp    0x41adac
  41adbb:	leave  
  41adbc:	jne    0x41adf7
  41adbe:	and    BYTE PTR [ecx+0x1d],al
	...
  41ae31:	add    BYTE PTR [eax],al
  41ae33:	add    BYTE PTR [edi+0x5fc517d8],al
  41ae39:	iret   
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi-0x68888be3]
  41ae41:	xchg   edi,eax
  41ae42:	sbb    DWORD PTR [esi-0x34],ecx
  41ae45:	and    al,BYTE PTR [ecx]
  41ae47:	add    ch,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    BYTE PTR [ebp+0x5afc3632],ah
  41ae51:	mov    eax,ds:0xff52fb9
  41ae56:	lods   al,BYTE PTR ds:[esi]
  41ae57:	pop    ds
  41ae58:	xchg   BYTE PTR ds:[ecx],bh
  41ae5b:	cmp    al,BYTE PTR [edx+0x73326f7c]
  41ae61:	scas   al,BYTE PTR es:[edi]
  41ae62:	add    eax,0xd4861db5
  41ae67:	adc    ebx,esp
  41ae69:	or     ebp,DWORD PTR ds:0x25470d34
  41ae6f:	xchg   esi,eax
  41ae70:	or     BYTE PTR [esi],al
  41ae72:	jb     0x41aecf
  41ae74:	push   eax
  41ae75:	rcl    DWORD PTR [ecx],1
  41ae77:	adc    dh,BYTE PTR [ecx+0x245ea039]
  41ae7d:	inc    edi
  41ae7e:	push   ebp
  41ae7f:	imul   ecx,DWORD PTR [esi-0x64f118a2],0xffffffc5
  41ae86:	jb     0x41aecc
  41ae88:	push   0xffffffa9
  41ae8a:	(bad)  
  41ae8b:	and    esp,edx
  41ae8d:	mov    cl,0x12
  41ae8f:	cmc    
  41ae90:	push   ds
  41ae91:	outs   dx,BYTE PTR ds:[esi]
  41ae92:	fdivr  st,st(5)
  41ae94:	outs   dx,DWORD PTR ds:[esi]
  41ae95:	ja     0x41aec0
  41ae97:	xor    al,0x6d
  41ae99:	jns    0x41ae21
  41ae9b:	xchg   ebx,eax
  41ae9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae9d:	arpl   WORD PTR [esi-0x5b43fe9a],bx
  41aea3:	sbb    DWORD PTR [eax-0x27],eax
  41aea6:	mov    ds,WORD PTR [ecx-0x76b0cc2c]
  41aeac:	jbe    0x41aede
  41aeae:	mov    dh,0x8f
  41aeb0:	out    0xb6,al
  41aeb2:	jge    0x41ae92
  41aeb4:	push   edx
  41aeb5:	mov    ?,WORD PTR [edx]
  41aeb7:	dec    ebx
  41aeb8:	loop   0x41ae96
  41aeba:	mov    ebp,0x886f07de
  41aebf:	outs   dx,DWORD PTR ds:[esi]
  41aec0:	cmp    eax,0x7b7fabf3
  41aec5:	pushf  
  41aec6:	jg     0x41ae90
  41aec8:	scas   al,BYTE PTR es:[edi]
  41aec9:	iret   
  41aeca:	outs   dx,DWORD PTR ds:[esi]
  41aecb:	push   ebp
  41aecc:	enter  0x4e1d,0xf5
  41aed0:	adc    BYTE PTR [eax],ah
  41aed2:	mul    DWORD PTR [eax+0x5]
  41aed5:	pop    ebx
  41aed6:	imul   esp,eax,0x3e52f2b3
  41aedc:	adc    eax,0xcfee8ad6
  41aee1:	sbb    BYTE PTR [ecx-0x27],al
  41aee4:	dec    ecx
  41aee5:	sbb    BYTE PTR [eax+0x28],cl
  41aee8:	call   0xb34f:0x1837455f
  41aeef:	ret    
  41aef0:	add    al,BYTE PTR [ebx]
  41aef2:	jb     0x41af36
  41aef4:	mov    BYTE PTR [edi-0x7f],dh
  41aef7:	jnp    0x41aea2
  41aef9:	bound  esp,QWORD PTR [esi-0x6785c1b6]
  41aeff:	das    
  41af00:	jb     0x41af7f
  41af02:	je     0x41af66
  41af04:	pop    edi
  41af05:	xchg   BYTE PTR [eax-0x60],cl
  41af08:	mov    esp,0x4b25985d
  41af0d:	add    DWORD PTR [ebx-0x52],ebx
  41af10:	scas   eax,DWORD PTR es:[edi]
  41af11:	ins    DWORD PTR es:[edi],dx
  41af12:	inc    ebp
  41af13:	sbb    cl,BYTE PTR [edi+0xd]
  41af16:	sbb    eax,0x30f62677
  41af1b:	jne    0x41af33
  41af1d:	cs pop edi
  41af1f:	out    dx,eax
  41af20:	rcr    esp,cl
  41af22:	sub    al,0x6b
  41af24:	and    DWORD PTR [edi-0x7d],eax
  41af27:	retf   
  41af28:	mov    al,ds:0x1101b611
  41af2d:	pop    ds
  41af2e:	add    DWORD PTR [eax-0x2d],0x563914cb
  41af35:	inc    ebx
  41af36:	xchg   ebp,eax
  41af37:	sbb    BYTE PTR [edi-0x6b],dh
  41af3a:	ins    BYTE PTR es:[edi],dx
  41af3b:	dec    edi
  41af3c:	pop    ecx
  41af3d:	(bad)  
  41af3e:	loop   0x41af13
  41af40:	jae    0x41af42
	...
  41afb2:	add    BYTE PTR [eax],al
  41afb4:	dec    esi
  41afb5:	jmp    0x41afe1
  41afb7:	dec    esi
  41afb8:	scas   eax,DWORD PTR es:[edi]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x1c
  41afc1:	jnp    0x41b038
  41afc3:	cld    
  41afc4:	shl    DWORD PTR [ebx],0x1
  41afc7:	add    ch,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [ecx+0x30],al
  41afce:	jnp    0x41b02d
  41afd0:	icebp  
  41afd1:	ds retf 
  41afd3:	sahf   
  41afd4:	fwait
  41afd5:	mov    ebx,0x43989b8c
  41afda:	jge    0x41af77
  41afdc:	hlt    
  41afdd:	xchg   edx,eax
  41afde:	mov    eax,0xe014e255
  41afe3:	add    cl,dh
  41afe5:	pushf  
  41afe6:	sub    al,0x5c
  41afe8:	add    DWORD PTR [ecx+0x4d5de575],0xd5c8d855
  41aff2:	outs   dx,BYTE PTR ds:[esi]
  41aff3:	inc    edx
  41aff4:	or     ebx,DWORD PTR [eax+0x61]
  41aff7:	and    bh,BYTE PTR [edi-0x4a]
  41affa:	sbb    eax,0x171f10f9
  41afff:	jg     0x41b046
  41b001:	repz jns 0x41b079
  41b004:	dec    eax
  41b005:	mov    cl,0xac
  41b007:	mov    ds:0xb0b155dd,eax
  41b00c:	and    al,0x21
  41b00e:	xchg   BYTE PTR [esi-0x49],dh
  41b011:	add    DWORD PTR [esi-0xc3fe50e],esi
  41b017:	adc    eax,0x4eac1bcb
  41b01c:	mov    esp,0x3454259
  41b021:	or     eax,0xec0304c8
  41b026:	in     eax,dx
  41b027:	rcr    DWORD PTR [ecx+0x237ddcbe],1
  41b02d:	push   ds
  41b02e:	add    BYTE PTR [ebx+0x7b],cl
  41b031:	call   0xc967a0c0
  41b036:	(bad)  
  41b037:	adc    al,0xb3
  41b039:	dec    eax
  41b03a:	sub    cl,BYTE PTR [ebx+ecx*4-0x22]
  41b03e:	ins    DWORD PTR es:[edi],dx
  41b03f:	repz pop edx
  41b041:	les    esi,FWORD PTR [eax]
  41b043:	add    ch,BYTE PTR [esi]
  41b045:	xchg   DWORD PTR [ecx],edi
  41b047:	dec    ebx
  41b048:	and    cl,BYTE PTR [eax+0x186ebb4e]
  41b04e:	or     bh,BYTE PTR ss:[ebx+0x4c1276f3]
  41b055:	pushf  
  41b056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b057:	push   esi
  41b058:	jge    0x41b017
  41b05a:	mov    dl,0x58
  41b05c:	sub    eax,0xab20a86b
  41b061:	inc    ebx
  41b062:	xchg   ecx,eax
  41b063:	mov    edi,0x8ca23eb5
  41b068:	push   ecx
  41b069:	lahf   
  41b06a:	lods   eax,DWORD PTR ds:[esi]
  41b06b:	mov    ebp,0x3c7f4ceb
  41b070:	sbb    eax,0xf9921e69
  41b075:	shl    DWORD PTR [eax-0x627fd9fc],1
  41b07b:	cmp    eax,0xbebd32e8
  41b080:	sub    al,0xdd
  41b082:	or     DWORD PTR [ecx],esp
  41b084:	sahf   
  41b085:	dec    ebp
  41b086:	mov    DWORD PTR ds:0x707d7b44,edx
  41b08c:	pop    esi
  41b08d:	lods   al,BYTE PTR ds:[esi]
  41b08e:	xor    BYTE PTR [edi+esi*4-0x36b36b2c],bl
  41b095:	push   ecx
  41b096:	lds    eax,FWORD PTR [esi+esi*4-0x39b97938]
  41b09d:	mov    al,bh
  41b09f:	out    0x58,eax
  41b0a1:	add    eax,0x9850d2b7
  41b0a6:	mov    bl,BYTE PTR [eax]
  41b0a8:	pop    ebp
  41b0a9:	stos   BYTE PTR es:[edi],al
  41b0aa:	cmc    
  41b0ab:	jge    0x41b0b3
  41b0ad:	jl     0x41b0c0
  41b0af:	xor    DWORD PTR [edx+0x2581490d],ecx
  41b0b5:	test   BYTE PTR [edx+0x6309a6ac],0x55
  41b0bc:	or     DWORD PTR [ebp-0x7a],ebx
  41b0bf:	or     DWORD PTR [eax+eax*1+0x0],edx
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	sub    ch,BYTE PTR [ecx]
  41b142:	lea    ebx,[esi+esi*4-0xafffedc]
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR [ebx+0x19],ah
  41b14e:	jl     0x41b136
  41b150:	jge    0x41b148
  41b152:	jecxz  0x41b155
  41b154:	arpl   bx,ax
  41b156:	retf   0x8311
  41b159:	(bad)  
  41b15a:	mov    esi,0xd6d2aee8
  41b15f:	cmp    BYTE PTR [esi+0x6cc4e427],0x9b
  41b166:	je     0x41b142
  41b168:	(bad)  
  41b169:	and    BYTE PTR [ebx],al
  41b16b:	sub    esp,ebp
  41b16d:	add    al,0x46
  41b16f:	bound  edi,QWORD PTR [edx]
  41b171:	sbb    eax,0xd5aa883e
  41b176:	sbb    BYTE PTR [edx+ebp*1+0x366ab0bf],0xa5
  41b17e:	xor    DWORD PTR [edi],eax
  41b180:	pop    ebp
  41b181:	xor    al,0xb2
  41b183:	xchg   edx,eax
  41b184:	mov    ds:0xac36b9d6,eax
  41b189:	jnp    0x41b130
  41b18b:	ss jne 0x41b203
  41b18e:	jae    0x41b162
  41b190:	outs   dx,BYTE PTR ds:[esi]
  41b191:	std    
  41b192:	or     eax,0x3403384b
  41b197:	or     al,0xd5
  41b199:	fdiv   st(4),st
  41b19b:	and    dl,cl
  41b19d:	push   ss
  41b19e:	cmp    BYTE PTR [ebp-0x7d845139],al
  41b1a4:	arpl   WORD PTR [ebx-0x4d60275c],bx
  41b1aa:	(bad)  
  41b1ac:	mov    edx,0xfb430470
  41b1b1:	sbb    DWORD PTR fs:[ebx+0x54],ebp
  41b1b5:	popa   
  41b1b6:	popf   
  41b1b7:	fcmovnu st,st(6)
  41b1b9:	jp     0x41b1b4
  41b1bb:	mov    ebx,0x29e85d71
  41b1c0:	push   ds
  41b1c1:	dec    esp
  41b1c2:	and    BYTE PTR [ecx-0x2b1709bd],bh
  41b1c8:	mov    cl,0xa8
  41b1ca:	xor    al,0x72
  41b1cc:	das    
  41b1cd:	popf   
  41b1ce:	pop    ds
  41b1cf:	imul   BYTE PTR [edx]
  41b1d1:	cli    
  41b1d2:	outs   dx,DWORD PTR ds:[esi]
  41b1d3:	dec    edi
  41b1d4:	mov    edi,DWORD PTR [edx]
  41b1d6:	iret   
  41b1d7:	shr    DWORD PTR [esi-0x5b871229],cl
  41b1dd:	pop    esp
  41b1de:	(bad)  
  41b1df:	and    dh,BYTE PTR [ebx-0x1c]
  41b1e2:	push   ss
  41b1e3:	jmp    0x41b21e
  41b1e5:	dec    bh
  41b1e7:	popa   
  41b1e8:	jle    0x41b1bd
  41b1ea:	das    
  41b1eb:	mov    edi,0x7397f194
  41b1f0:	inc    eax
  41b1f1:	call   0xb138:0x3d6fb6b5
  41b1f8:	test   al,0xcd
  41b1fa:	push   ecx
  41b1fb:	dec    edx
  41b1fc:	cmp    eax,0xc8c2c40
  41b201:	push   ebp
  41b202:	popa   
  41b203:	push   cs
  41b204:	cmc    
  41b205:	cmp    ebx,DWORD PTR [edi]
  41b207:	mov    ecx,0xdd08f740
  41b20c:	(bad)  
  41b20d:	jge    0x41b21b
  41b20f:	inc    ecx
  41b210:	imul   eax,ebx,0x11ca5eb9
  41b216:	mov    cl,0xf6
  41b218:	ins    DWORD PTR es:[edi],dx
  41b219:	gs cdq 
  41b21b:	lds    eax,FWORD PTR [eax]
  41b21d:	push   ds
  41b21e:	adc    al,0x9e
  41b220:	sbb    dl,bl
  41b222:	add    BYTE PTR [eax-0x5aabf28e],0x63
  41b229:	mov    edx,0x5ddf0739
  41b22e:	fisttp QWORD PTR [edx-0x68]
  41b231:	sub    edi,edi
  41b233:	jo     0x41b27d
  41b235:	fucomi st,st(7)
  41b237:	inc    esp
  41b238:	xor    DWORD PTR [edx-0x11],ecx
  41b23b:	rcl    ecx,1
  41b23d:	pushf  
  41b23e:	ins    DWORD PTR es:[edi],dx
  41b23f:	pop    eax
  41b240:	pop    eax
	...
  41b2b1:	add    BYTE PTR [eax],al
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	or     DWORD PTR [ebp+0x71],ebp
  41b2c3:	push   esp
  41b2c4:	stos   DWORD PTR es:[edi],eax
  41b2c5:	and    eax,0xf50001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	dec    edi
  41b2cd:	outs   dx,BYTE PTR ds:[esi]
  41b2ce:	(bad)  
  41b2cf:	sar    DWORD PTR [edi-0x14],cl
  41b2d2:	or     DWORD PTR [edx+0x9],ecx
  41b2d5:	and    DWORD PTR [ebx-0x1b324884],eax
  41b2db:	mov    ch,0xd2
  41b2dd:	das    
  41b2de:	addr16 jl 0x41b35e
  41b2e1:	mov    al,0xfc
  41b2e3:	or     esi,DWORD PTR [ecx-0x1bcef5be]
  41b2e9:	push   ds
  41b2ea:	repnz sbb eax,0xd060614c
  41b2f0:	mov    ebp,0xd431e54b
  41b2f5:	sbb    DWORD PTR [ebx-0x187c3e80],eax
  41b2fb:	repnz rol dh,cl
  41b2fe:	(bad)  [esi-0x5229385a]
  41b304:	popa   
  41b305:	or     ecx,ecx
  41b307:	(bad)  
  41b308:	test   al,0xeb
  41b30a:	loopne 0x41b345
  41b30c:	int    0x76
  41b30e:	sahf   
  41b30f:	add    DWORD PTR [esi+0x4f89ab93],eax
  41b315:	out    dx,eax
  41b316:	lahf   
  41b317:	loope  0x41b391
  41b319:	enter  0x67bd,0x82
  41b31d:	adc    ch,dh
  41b31f:	jno    0x41b37a
  41b321:	jecxz  0x41b382
  41b323:	cs sub al,0x12
  41b326:	xor    ebx,DWORD PTR [ecx+0x60]
  41b329:	arpl   WORD PTR [edi+0x5364e571],sp
  41b32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b330:	mov    al,0x3e
  41b332:	call   0x834:0x38f6d0c4
  41b339:	dec    ebp
  41b33a:	(bad)  
  41b33b:	adc    ch,al
  41b33d:	xchg   ebp,eax
  41b33e:	fstp   DWORD PTR [ecx]
  41b340:	call   0x3059:0x70b8be27
  41b347:	mov    edx,0x85644c14
  41b34c:	push   ds
  41b34d:	not    BYTE PTR ds:[ebx]
  41b350:	mov    bl,0xf9
  41b352:	not    ebx
  41b354:	xchg   ebp,eax
  41b355:	pop    eax
  41b356:	add    ah,al
  41b358:	shl    BYTE PTR [esi],0xfd
  41b35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b35e:	jl     0x41b302
  41b360:	ret    0x2c9a
  41b363:	mov    edx,DWORD PTR [esi-0x6bdff4e2]
  41b369:	scas   al,BYTE PTR es:[edi]
  41b36a:	ret    0x91b3
  41b36d:	sub    bl,BYTE PTR [esi-0x59]
  41b370:	sub    al,0x76
  41b372:	ja     0x41b3bc
  41b374:	out    dx,al
  41b375:	sbb    al,0xc0
  41b377:	pop    edi
  41b378:	sar    BYTE PTR [edx+0x60281f8],1
  41b37e:	(bad)
  41b381:	push   ebp
  41b382:	jns    0x41b3a5
  41b384:	das    
  41b385:	les    eax,FWORD PTR [esi-0x3c0714c2]
  41b38b:	fsubr  st(1),st
  41b38d:	sub    eax,0x276a440
  41b392:	push   es
  41b393:	int3   
  41b394:	jns    0x41b3d5
  41b396:	(bad)  
  41b397:	(bad)  
  41b398:	iret   
  41b399:	mov    cl,0xea
  41b39b:	sar    DWORD PTR [edx+0x1d],cl
  41b39e:	outs   dx,BYTE PTR ds:[esi]
  41b39f:	std    
  41b3a0:	pushf  
  41b3a1:	xchg   edi,eax
  41b3a2:	xchg   bx,ax
  41b3a4:	inc    esp
  41b3a5:	xchg   edx,eax
  41b3a6:	fisub  DWORD PTR [eax]
  41b3a8:	pushf  
  41b3a9:	int3   
  41b3aa:	pop    ebx
  41b3ab:	test   bh,ch
  41b3ad:	pop    eax
  41b3ae:	bound  eax,QWORD PTR fs:[edx+0x3c]
  41b3b2:	xor    eax,0x199effb6
  41b3b7:	push   cs
  41b3b8:	push   ebx
  41b3b9:	lock scas eax,DWORD PTR es:[edi]
  41b3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3bc:	pusha  
  41b3bd:	imul   ebx,esi,0xffffffa9
  41b3c0:	pushf  
	...
  41b431:	add    BYTE PTR [eax],al
  41b433:	add    BYTE PTR [edi-0xf0307e],bh
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	test   al,0xb2
  41b442:	mov    ah,0x78
  41b444:	mov    al,ds:0xf5000126
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    ah,ch
  41b44d:	loop   0x41b3e5
  41b44f:	xchg   ebp,eax
  41b450:	in     eax,0x4b
  41b452:	mov    dl,0x5b
  41b454:	out    0x4a,al
  41b456:	and    ebp,edi
  41b458:	xor    DWORD PTR [ebx+0x1],0xba9859d0
  41b45f:	xchg   ebx,eax
  41b460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b461:	jns    0x41b4e2
  41b463:	loopne 0x41b45f
  41b465:	sub    cl,BYTE PTR [edx-0x7e]
  41b468:	adc    dh,BYTE PTR [esi]
  41b46a:	mov    edx,0x8d740e4e
  41b46f:	mov    eax,0xa51d855f
  41b474:	test   al,0xdb
  41b476:	xor    dh,BYTE PTR [eax]
  41b478:	dec    eax
  41b479:	adc    al,0xa6
  41b47b:	xor    dh,al
  41b47d:	fisub  DWORD PTR [edi+ebx*2-0xdf9e8a4]
  41b484:	push   esp
  41b485:	cmovnp ebx,ebx
  41b488:	lds    eax,FWORD PTR [ebx]
  41b48a:	jbe    0x41b509
  41b48c:	sbb    DWORD PTR ds:0x7b61bb0b,eax
  41b492:	sbb    ebp,eax
  41b494:	cmp    BYTE PTR [ecx+0x6c25818c],dh
  41b49a:	sub    bh,BYTE PTR [ebx-0x5b49d743]
  41b4a0:	inc    edi
  41b4a1:	repnz into 
  41b4a3:	mov    ch,0xad
  41b4a5:	pop    ebp
  41b4a6:	push   edi
  41b4a7:	cld    
  41b4a8:	repz inc ebp
  41b4aa:	add    esp,DWORD PTR [ebx-0x441dca79]
  41b4b0:	div    BYTE PTR [ecx+0x12]
  41b4b3:	jle    0x41b436
  41b4b5:	add    al,0x8d
  41b4b7:	push   ebx
  41b4b8:	(bad)  
  41b4b9:	mov    al,ds:0xac8765b3
  41b4be:	and    BYTE PTR [edi-0x7e3ec61b],ch
  41b4c4:	mov    dl,0xda
  41b4c6:	fsubr  QWORD PTR [edi-0x23]
  41b4c9:	sbb    DWORD PTR [edx-0x1fa94586],esp
  41b4cf:	jecxz  0x41b45f
  41b4d1:	and    ch,0x83
  41b4d4:	xor    BYTE PTR [edi-0xc],dh
  41b4d7:	cmp    DWORD PTR [edx],esi
  41b4d9:	iret   
  41b4da:	xor    BYTE PTR [ebp-0x2b2986a2],ah
  41b4e0:	in     eax,dx
  41b4e1:	sub    DWORD PTR [esi-0x7ce96d0e],0x665130fe
  41b4eb:	fsubr  QWORD PTR [ecx-0x75]
  41b4ee:	dec    ecx
  41b4ef:	dec    eax
  41b4f0:	rcr    DWORD PTR [ecx+0x7c],cl
  41b4f3:	sbb    BYTE PTR [ebp+esi*8+0x4a971f42],dl
  41b4fa:	jbe    0x41b543
  41b4fc:	and    al,0x90
  41b4fe:	shl    ah,cl
  41b500:	inc    eax
  41b501:	adc    ch,BYTE PTR [eax-0x34]
  41b504:	pop    ebp
  41b505:	popa   
  41b506:	mov    DWORD PTR [ebx],edi
  41b508:	and    al,0x39
  41b50a:	xchg   edx,eax
  41b50b:	jbe    0x41b538
  41b50d:	mov    esi,0x615474f2
  41b512:	xchg   edi,eax
  41b513:	xor    al,0x4a
  41b515:	fisub  DWORD PTR [eax+0x57816612]
  41b51b:	mov    ebx,0xcaa6bc44
  41b520:	adc    BYTE PTR [bp+di+0x77],dl
  41b524:	fs inc ecx
  41b526:	test   eax,0xbb5fd1df
  41b52b:	jg     0x41b5a9
  41b52d:	dec    eax
  41b52e:	mov    ch,0x6f
  41b530:	and    dh,0x5a
  41b533:	mov    ds:0xf01343f0,eax
  41b538:	out    dx,al
  41b539:	jmp    0x41b555
  41b53b:	push   cs
  41b53c:	mov    ebx,ecx
  41b53e:	inc    edi
  41b53f:	jle    0x41b4c7
	...
  41b5b1:	add    BYTE PTR [eax],al
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0xb8
  41b5c1:	mov    dl,0x81
  41b5c3:	nop
  41b5c4:	xchg   ebp,eax
  41b5c5:	daa    
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	cmc    
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR ds:0x41d7045a,bl
  41b5d1:	push   ebp
  41b5d2:	pop    edx
  41b5d3:	sbb    BYTE PTR ds:0x980b3385,ch
  41b5d9:	add    eax,0xcedee0c
  41b5de:	ins    DWORD PTR es:[edi],dx
  41b5df:	lea    ebx,[edx]
  41b5e1:	fisttp WORD PTR [esi+edi*2]
  41b5e4:	lods   eax,DWORD PTR ds:[esi]
  41b5e5:	imul   ecx,DWORD PTR [ecx],0x2a4ee8d9
  41b5eb:	lea    eax,[ebx-0x1991a9d2]
  41b5f1:	jae    0x41b5a4
  41b5f3:	push   ss
  41b5f4:	sbb    eax,0x8ff78b12
  41b5f9:	dec    eax
  41b5fa:	xchg   ebx,eax
  41b5fb:	cmp    DWORD PTR [edi],esp
  41b5fd:	dec    edx
  41b5fe:	xchg   DWORD PTR [ecx+0x13f04f72],ebx
  41b604:	dec    ebx
  41b605:	mov    esi,0x7813823f
  41b60a:	push   ebp
  41b60b:	adc    edx,edi
  41b60d:	or     DWORD PTR [edx-0x7f],esi
  41b610:	sbb    BYTE PTR [esi+0x46],bl
  41b613:	xlat   BYTE PTR ds:[ebx]
  41b614:	xchg   BYTE PTR [eax-0x41884c0d],cl
  41b61a:	cmp    eax,0xa7281e0
  41b61f:	inc    BYTE PTR [edx-0x3d]
  41b622:	enter  0x2cdc,0x49
  41b626:	pop    eax
  41b627:	mov    esp,0xf6582b42
  41b62c:	and    ah,BYTE PTR [ebx]
  41b62e:	xor    DWORD PTR [eax+0x1f],edi
  41b631:	mov    al,0x4e
  41b633:	mov    dh,0xb2
  41b635:	fst    DWORD PTR ds:0x731aa0dd
  41b63b:	sub    esi,eax
  41b63d:	or     eax,0x3bf975c9
  41b642:	jbe    0x41b68c
  41b644:	xor    dl,al
  41b646:	cmp    eax,0x211fe9a9
  41b64b:	cmp    dh,BYTE PTR [ebp-0x7eb9e29c]
  41b651:	dec    ecx
  41b652:	xor    ch,ah
  41b654:	cmp    ch,BYTE PTR [ecx]
  41b656:	add    bh,BYTE PTR [edx]
  41b658:	xor    bh,BYTE PTR [ecx+eax*2+0xb]
  41b65c:	dec    eax
  41b65e:	in     al,0xd6
  41b660:	aam    0x69
  41b662:	aaa    
  41b663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b664:	mov    al,0xed
  41b666:	outs   dx,BYTE PTR ds:[esi]
  41b667:	push   0xffffffa4
  41b669:	push   0x6b1cbcb3
  41b66e:	xchg   ebx,eax
  41b66f:	and    BYTE PTR [ebx-0x46a7fce6],bh
  41b675:	pop    ss
  41b676:	cmp    al,BYTE PTR [ecx]
  41b678:	xor    ah,dh
  41b67a:	test   DWORD PTR [edx+0x1808ce1e],ebx
  41b680:	push   0xffffff8a
  41b682:	cdq    
  41b683:	inc    esp
  41b684:	pop    ebp
  41b685:	or     esp,0x32cbcd0
  41b68b:	ret    0x1b49
  41b68e:	xchg   edi,eax
  41b68f:	add    al,0xd6
  41b691:	jb     0x41b627
  41b693:	fs pop edi
  41b695:	mov    ah,0x87
  41b697:	nop
  41b698:	xchg   DWORD PTR [ecx+0x61],eax
  41b69b:	mov    cs:0x792da147,eax
  41b6a1:	(bad)  
  41b6a2:	ret    0xb845
  41b6a5:	jae    0x41b6cf
  41b6a7:	popf   
  41b6a8:	pop    es
  41b6a9:	dec    ebx
  41b6aa:	fistp  QWORD PTR [eax]
  41b6ac:	pop    ebp
  41b6ad:	pop    sp
  41b6af:	adc    DWORD PTR [eax],eax
  41b6b1:	sub    BYTE PTR [edx+0x6f962428],0xe7
  41b6b8:	mov    al,0x5e
  41b6ba:	ins    BYTE PTR es:[edi],dx
  41b6bb:	mov    esp,0x8e2863a8
  41b6c0:	outs   dx,BYTE PTR ds:[esi]
	...
  41b731:	add    BYTE PTR [eax],al
  41b733:	add    bl,dh
  41b735:	xchg   edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [ebp+0x6a],bh
  41b742:	mov    edi,0x1288a08
  41b747:	add    ch,dh
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [eax+ecx*8],ah
  41b74e:	pop    es
  41b74f:	xchg   esp,eax
  41b750:	adc    BYTE PTR [edi+0x395faa95],cl
  41b756:	ins    DWORD PTR es:[edi],dx
  41b757:	pop    esi
  41b758:	sbb    bl,BYTE PTR [ebx+0x5c]
  41b75b:	js     0x41b770
  41b75d:	fiadd  DWORD PTR [edi-0x55]
  41b760:	sub    BYTE PTR [edi],bh
  41b762:	stc    
  41b763:	or     ebx,DWORD PTR [edi]
  41b765:	gs ins DWORD PTR es:[edi],dx
  41b767:	inc    edi
  41b768:	imul   edi,DWORD PTR [ebp-0x4cfa49ef],0xffffffd7
  41b76f:	add    al,0x8c
  41b771:	or     BYTE PTR [edi-0x7cae73ea],cl
  41b777:	in     eax,dx
  41b778:	jmp    0x41b746
  41b77a:	pop    eax
  41b77b:	aam    0x4d
  41b77d:	jp     0x41b7fc
  41b77f:	xlat   BYTE PTR ds:[ebx]
  41b780:	lea    ebx,[esi+0x71]
  41b783:	dec    esi
  41b784:	cdq    
  41b785:	cmp    DWORD PTR [edi+0x3c25c04c],edx
  41b78b:	outs   dx,BYTE PTR ds:[esi]
  41b78c:	ret    
  41b78d:	inc    esp
  41b78e:	jae    0x41b79e
  41b790:	push   0x3
  41b792:	cmp    edx,esp
  41b794:	mov    al,BYTE PTR [edx+0x21ead06e]
  41b79a:	xor    BYTE PTR [ecx+0x54732818],dh
  41b7a0:	call   0x6bdd:0x1affa5b
  41b7a7:	aas    
  41b7a8:	jle    0x41b7b0
  41b7aa:	xor    ecx,ebx
  41b7ac:	(bad)  
  41b7ad:	jno    0x41b762
  41b7af:	jecxz  0x41b824
  41b7b1:	gs mov cl,0x51
  41b7b4:	mov    ds:0x9b478e84,al
  41b7b9:	push   ss
  41b7ba:	fmul   QWORD PTR [ebp+eax*2-0x78ec7594]
  41b7c1:	int    0xf8
  41b7c3:	adc    al,0xba
  41b7c5:	sbb    esp,ecx
  41b7c7:	jmp    0x5cce5ab7
  41b7cc:	out    0x58,al
  41b7ce:	mov    ds:0xe13ff9e5,eax
  41b7d3:	push   ebp
  41b7d4:	pop    edi
  41b7d5:	pop    esi
  41b7d6:	loope  0x41b83c
  41b7d8:	mov    ds:0xebb93d85,eax
  41b7dd:	fild   DWORD PTR [ebx+eiz*4]
  41b7e0:	popa   
  41b7e1:	retf   
  41b7e2:	mov    esi,0xb1b3060d
  41b7e7:	ficomp WORD PTR ds:0xfd6b20a3
  41b7ed:	pusha  
  41b7ee:	es xor dl,al
  41b7f1:	(bad)  
  41b7f2:	pop    ebp
  41b7f3:	push   edx
  41b7f4:	cld    
  41b7f5:	xor    eax,0xe4df9d97
  41b7fa:	clc    
  41b7fb:	int3   
  41b7fc:	add    BYTE PTR [ecx-0x14],cl
  41b7ff:	or     ebx,DWORD PTR ds:0x36464d28
  41b805:	jne    0x41b869
  41b807:	or     DWORD PTR [ecx-0x6c],esp
  41b80a:	jae    0x41b823
  41b80c:	pop    ebx
  41b80d:	sub    eax,0x6a011179
  41b812:	inc    ebp
  41b813:	push   0xba3a395f
  41b818:	das    
  41b819:	mov    edi,0xaf8edcb
  41b81e:	pop    eax
  41b81f:	(bad)  
  41b820:	and    eax,0x9f9de7ea
  41b825:	jno    0x41b860
  41b827:	push   0x57bca35f
  41b82c:	add    ch,BYTE PTR ds:0x4e066909
  41b832:	xchg   DWORD PTR [eax+0x49],edx
  41b835:	cs mov al,0x48
  41b838:	popf   
  41b839:	push   cs
  41b83a:	je     0x41b836
  41b83c:	cdq    
  41b83d:	pusha  
  41b83e:	or     eax,0x718e
	...
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	sub    esi,esp
  41b8c2:	and    ecx,edi
  41b8c4:	jg     0x41b8ef
  41b8c6:	add    DWORD PTR [eax],eax
  41b8c8:	cmc    
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [edi-0x61d74f3a],al
  41b8d1:	loop   0x41b8ea
  41b8d3:	mov    esp,0x6b9b287c
  41b8d8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41b8da:	ins    BYTE PTR es:[edi],dx
  41b8db:	jbe    0x41b92b
  41b8dd:	retf   0x2178
  41b8e0:	loope  0x41b872
  41b8e2:	out    0xf6,eax
  41b8e4:	out    0xd5,al
  41b8e6:	sti    
  41b8e7:	mov    ecx,0x39efa860
  41b8ec:	lods   al,BYTE PTR ds:[esi]
  41b8ed:	sbb    eax,0xb17624b5
  41b8f2:	pop    edi
  41b8f3:	cmp    eax,0x9b936fbb
  41b8f8:	jp     0x41b934
  41b8fa:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b8fc:	mov    eax,ds:0xd9e38417
  41b901:	popa   
  41b902:	mov    eax,0xfa0390f6
  41b907:	(bad)  
  41b908:	pusha  
  41b909:	and    bl,BYTE PTR [eax+ebx*4-0x15819aef]
  41b910:	jp     0x41b8fe
  41b912:	mov    dh,0xe7
  41b914:	dec    esi
  41b915:	pop    es
  41b916:	test   al,0x8a
  41b918:	rol    edx,1
  41b91a:	inc    ebx
  41b91b:	jnp    0x41b986
  41b91d:	stos   BYTE PTR es:[edi],al
  41b91e:	outs   dx,BYTE PTR ds:[esi]
  41b91f:	push   esp
  41b920:	dec    ecx
  41b921:	dec    ebp
  41b922:	sbb    al,BYTE PTR [edx]
  41b924:	pop    es
  41b925:	inc    ebx
  41b926:	sub    eax,0x49816990
  41b92b:	inc    esi
  41b92c:	or     al,0x9b
  41b92e:	fsubrp st(0),st
  41b930:	rcl    DWORD PTR [edx],0x90
  41b933:	test   eax,ecx
  41b935:	imul   ecx,DWORD PTR [ecx-0x9],0xf
  41b939:	rol    esi,0x66
  41b93c:	ror    esi,0xa8
  41b93f:	xchg   edx,eax
  41b940:	int    0x4e
  41b942:	cmp    cl,BYTE PTR [ecx-0x34]
  41b945:	pop    es
  41b946:	cs pop ecx
  41b948:	test   eax,0xb734144f
  41b94d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b94e:	inc    esp
  41b94f:	mov    eax,ds:0x50dc7e88
  41b954:	sti    
  41b955:	push   0x1139789b
  41b95a:	ja     0x41b9a0
  41b95c:	out    dx,eax
  41b95d:	sub    DWORD PTR [edi+0x5bb3ab55],edi
  41b963:	sub    DWORD PTR [esi],esi
  41b965:	imul   ecx,DWORD PTR [edx-0x4c],0xffffffbe
  41b969:	lods   al,BYTE PTR ds:[esi]
  41b96a:	xchg   ebp,eax
  41b96b:	mov    bh,0xac
  41b96d:	(bad)  
  41b96e:	push   ebp
  41b96f:	xchg   ebp,eax
  41b970:	dec    ebx
  41b971:	in     eax,0xc0
  41b973:	data16 mov dl,0x73
  41b976:	dec    edi
  41b977:	dec    ebp
  41b978:	xor    al,0x54
  41b97a:	pop    esp
  41b97b:	xchg   edx,eax
  41b97c:	daa    
  41b97d:	xchg   edx,eax
  41b97e:	dec    ecx
  41b97f:	xchg   ebx,eax
  41b980:	mov    al,0x73
  41b982:	and    edi,esi
  41b984:	outs   dx,BYTE PTR ds:[esi]
  41b985:	jo     0x41b97a
  41b987:	loope  0x41b970
  41b989:	mov    ds:0x91655c99,eax
  41b98e:	bnd je 0x41b9b0
  41b991:	test   DWORD PTR [ebx],0xf2864637
  41b997:	sbb    BYTE PTR [edx-0x4194a055],bh
  41b99d:	dec    edi
  41b99e:	cli    
  41b99f:	jmp    0x8930b2eb
  41b9a4:	into   
  41b9a5:	push   eax
  41b9a6:	add    ebp,DWORD PTR [eax+eiz*4-0x63]
  41b9aa:	sbb    esp,DWORD PTR [ebx]
  41b9ac:	imul   esp,esp,0x3e
  41b9af:	sti    
  41b9b0:	pop    ecx
  41b9b1:	test   al,0x37
  41b9b3:	sbb    al,0x58
  41b9b5:	loopne 0x41ba1b
  41b9b7:	imul   edi,DWORD PTR [ebx+ecx*4],0xad9d372
  41b9be:	sub    al,BYTE PTR [ebx-0x69]
	...
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	pushf  
  41ba41:	mov    edi,0x2a74bb3b
  41ba46:	add    DWORD PTR [eax],eax
  41ba48:	cmc    
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    bl,bh
  41ba4d:	xchg   esi,eax
  41ba4e:	fucom  st(5)
  41ba50:	sbb    al,0xb
  41ba52:	jb     0x41b9fe
  41ba54:	mov    WORD PTR [edx],fs
  41ba56:	push   ebx
  41ba57:	das    
  41ba58:	fnsave [ebx+ebp*1-0x5]
  41ba5c:	jne    0x41ba20
  41ba5e:	mov    bl,0xa8
  41ba60:	xor    eax,0x6cce9f9f
  41ba65:	icebp  
  41ba66:	fnstcw WORD PTR ds:0x3e274144
  41ba6c:	clc    
  41ba6d:	add    al,0xd2
  41ba6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba70:	or     edx,DWORD PTR [esi+0x30]
  41ba73:	jl     0x41ba6b
  41ba75:	xchg   edi,eax
  41ba76:	add    eax,0x545b7aeb
  41ba7b:	or     esi,ebx
  41ba7d:	(bad)  
  41ba7f:	ins    BYTE PTR es:[edi],dx
  41ba80:	test   al,0x57
  41ba82:	das    
  41ba83:	loopne 0x41bab4
  41ba85:	es stos DWORD PTR es:[edi],eax
  41ba87:	cs jmp 0x41bad3
  41ba8a:	inc    BYTE PTR [ecx-0x28]
  41ba8d:	in     al,0xf0
  41ba8f:	idiv   BYTE PTR [eax+eiz*8]
  41ba92:	cmp    BYTE PTR [eax-0x13],bh
  41ba95:	faddp  st(5),st
  41ba97:	sbb    ebx,eax
  41ba99:	cmp    dl,ah
  41ba9b:	mov    ebp,0xa41b0f9
  41baa0:	cmp    dl,BYTE PTR [edx-0x3a185850]
  41baa6:	and    bl,BYTE PTR [ebx+eax*8]
  41baa9:	sti    
  41baaa:	jns    0x41ba72
  41baac:	pop    ebp
  41baad:	sar    ebp,0x6e
  41bab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bab1:	arpl   WORD PTR [ebx-0x46],sp
  41bab4:	retf   
  41bab5:	iret   
  41bab6:	xchg   edi,eax
  41bab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab8:	hlt    
  41bab9:	mov    ss,edx
  41babb:	das    
  41babc:	into   
  41babd:	adc    DWORD PTR [eax-0xcc770d0],ebp
  41bac3:	test   BYTE PTR [ecx-0x70],0xed
  41bac7:	sbb    al,0xee
  41bac9:	mov    esp,0xa7cf3832
  41bace:	push   ebp
  41bacf:	jns    0x41ba77
  41bad1:	cld    
  41bad2:	ins    DWORD PTR es:[edi],dx
  41bad3:	push   esi
  41bad4:	stos   DWORD PTR es:[edi],eax
  41bad5:	and    al,0xa6
  41bad7:	ret    0x5af9
  41bada:	out    0x73,al
  41badc:	cmc    
  41badd:	fstp   QWORD PTR [edx+ebp*4+0x2bba3940]
  41bae4:	aad    0x8c
  41bae6:	int    0x55
  41bae8:	or     ebp,DWORD PTR [ebx]
  41baea:	mov    edx,0x6efdc367
  41baef:	cmp    eax,0x63d7c76b
  41baf4:	sti    
  41baf5:	outs   dx,DWORD PTR ds:[esi]
  41baf6:	rcl    bl,0x1e
  41baf9:	or     DWORD PTR [esi],ebx
  41bafb:	push   ebx
  41bafc:	and    al,0x93
  41bafe:	push   0xffffff95
  41bb00:	iret   
  41bb01:	out    dx,eax
  41bb02:	sub    eax,0xbfd91198
  41bb07:	dec    edi
  41bb08:	jo     0x41bb30
  41bb0a:	pop    ebx
  41bb0b:	bound  ebp,QWORD PTR [ecx-0x54077930]
  41bb11:	add    eax,0xaf5505da
  41bb16:	sub    BYTE PTR [edx],0x2e
  41bb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb1a:	fdivr  st(2),st
  41bb1c:	in     al,0x42
  41bb1e:	imul   ecx,DWORD PTR [edi-0x8],0xde532869
  41bb25:	sub    dl,al
  41bb27:	jns    0x41bb71
  41bb29:	call   0x39d0bdf5
  41bb2e:	lods   al,BYTE PTR ds:[esi]
  41bb2f:	add    BYTE PTR [eax-0x24784c1b],dl
  41bb35:	xor    ecx,esp
  41bb37:	and    edx,DWORD PTR [esi-0xe5dc9e3]
  41bb3d:	das    
  41bb3e:	int3   
  41bb3f:	jb     0x41bb29
	...
  41bbb1:	add    BYTE PTR [eax],al
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	and    DWORD PTR [eax],edi
  41bbc2:	test   DWORD PTR [edi],0x12b69
  41bbc8:	cmc    
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    BYTE PTR [edi-0x5c647bf],dl
  41bbd1:	cmp    ecx,DWORD PTR [edi+0x47]
  41bbd4:	sbb    al,0x7a
  41bbd6:	retf   0x4c13
  41bbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbda:	push   ebp
  41bbdb:	pop    ebp
  41bbdc:	mov    ch,0x62
  41bbde:	js     0x41bba0
  41bbe0:	sbb    eax,0x236fee05
  41bbe5:	jbe    0x41bc1e
  41bbe7:	mov    ebx,0x81747f17
  41bbec:	icebp  
  41bbed:	mov    BYTE PTR [edi-0x7f],al
  41bbf0:	ret    
  41bbf1:	ror    esi,0x65
  41bbf4:	jmp    0xd32b3a96
  41bbf9:	aam    0xb5
  41bbfb:	inc    ebp
  41bbfc:	daa    
  41bbfd:	loopne 0x41bbcb
  41bbff:	mov    eax,0x2a362327
  41bc04:	mov    edi,0x8ed7a9e6
  41bc09:	pop    ecx
  41bc0a:	ds sub al,0xea
  41bc0d:	icebp  
  41bc0e:	mov    WORD PTR [edx+0x50],ds
  41bc11:	xchg   esp,eax
  41bc12:	fsub   QWORD PTR [edx]
  41bc14:	xor    eax,0xe5ea1c16
  41bc19:	ins    DWORD PTR es:[edi],dx
  41bc1a:	clc    
  41bc1b:	adc    DWORD PTR [eax-0x515b3cd7],0xa147595b
  41bc25:	in     eax,0xf3
  41bc27:	std    
  41bc28:	add    esi,DWORD PTR [esi+ebx*2-0xe863c3e]
  41bc2f:	dec    edx
  41bc30:	cdq    
  41bc31:	inc    ebx
  41bc32:	test   eax,0xe072c39b
  41bc37:	shl    esi,cl
  41bc39:	inc    edx
  41bc3a:	add    DWORD PTR [ecx-0x1c0f1c45],ebx
  41bc40:	pop    esi
  41bc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc42:	je     0x41bbee
  41bc44:	add    eax,0xd4505bbc
  41bc49:	test   al,0x3b
  41bc4b:	adc    ebx,esi
  41bc4d:	aam    0x27
  41bc4f:	ins    DWORD PTR es:[edi],dx
  41bc50:	push   esi
  41bc51:	jb     0x41bc25
  41bc53:	arpl   WORD PTR [esi+eiz*2],cx
  41bc56:	jb     0x41bc60
  41bc58:	out    dx,eax
  41bc59:	jle    0x41bc88
  41bc5b:	pop    ebx
  41bc5c:	mov    al,ds:0xe5bae5ff
  41bc61:	pop    ds
  41bc62:	push   0xffffffe4
  41bc64:	adc    eax,0xfa0d89ec
  41bc69:	mov    ebp,0x2d36f7f2
  41bc6e:	sub    DWORD PTR [eax+0x1e],ebx
  41bc71:	xchg   esp,eax
  41bc72:	jmp    0xd720edeb
  41bc77:	adc    DWORD PTR [eax+ebp*1+0x7d],0xc1575f30
  41bc7f:	loop   0x41bc36
  41bc81:	pop    edi
  41bc82:	sahf   
  41bc83:	cmp    esp,DWORD PTR [eax+0x4f3a2cc1]
  41bc89:	imul   BYTE PTR [esi+edx*1]
  41bc8c:	cmp    edx,DWORD PTR [edx]
  41bc8e:	pusha  
  41bc8f:	aas    
  41bc90:	push   edi
  41bc91:	stc    
  41bc92:	fisttp QWORD PTR [edi-0x367a29fe]
  41bc98:	(bad)  
  41bc99:	xor    bl,bh
  41bc9b:	pop    esi
  41bc9c:	or     BYTE PTR [edx+0x70],0xd1
  41bca0:	fcmovne st,st(5)
  41bca2:	push   eax
  41bca3:	scas   al,BYTE PTR es:[edi]
  41bca4:	jmp    0x7c3949b3
  41bca9:	bound  ecx,QWORD PTR [edi]
  41bcab:	in     eax,0x1d
  41bcad:	sub    esi,DWORD PTR [eax+0x7b879574]
  41bcb3:	dec    ebx
  41bcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb5:	mov    DWORD PTR [ebp+0xcf00b71],edi
  41bcbb:	faddp  st(0),st
  41bcbd:	and    ebx,0x40ff
	...
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0xc9bf1c9a
  41bd41:	stos   DWORD PTR es:[edi],eax
  41bd42:	test   al,0xe0
  41bd44:	pop    esi
  41bd45:	sub    al,0x1
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    BYTE PTR [esp+edx*1],dl
  41bd4e:	lahf   
  41bd4f:	imul   ebp,DWORD PTR [esi+0x18455124],0xac2624c7
  41bd59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd5a:	or     BYTE PTR [ecx],dh
  41bd5c:	cmp    DWORD PTR [ecx+0x2d],esp
  41bd5f:	pushf  
  41bd60:	test   BYTE PTR [eax],ch
  41bd62:	add    al,0x6b
  41bd64:	xor    cl,dh
  41bd66:	scas   al,BYTE PTR es:[edi]
  41bd67:	push   ebp
  41bd68:	mov    ch,0xa9
  41bd6a:	arpl   sp,sp
  41bd6c:	shr    esp,1
  41bd6e:	add    BYTE PTR [esi-0x76],bl
  41bd71:	sub    ecx,DWORD PTR [ebp+0x136b9cbd]
  41bd77:	mov    dl,0xa8
  41bd79:	sub    dh,cl
  41bd7b:	sbb    ch,dh
  41bd7d:	xchg   esi,eax
  41bd7e:	or     BYTE PTR [edx],ah
  41bd80:	jmp    0x41bd6e
  41bd82:	rcr    esp,0xdd
  41bd85:	dec    ebx
  41bd86:	mov    BYTE PTR [edx-0x18],dl
  41bd89:	sbb    BYTE PTR [edi-0x2d],0xa2
  41bd8d:	lods   al,BYTE PTR ds:[esi]
  41bd8e:	popa   
  41bd8f:	neg    DWORD PTR [edx-0x59]
  41bd92:	or     DWORD PTR [edi],0xffffffc6
  41bd95:	js     0x41bd9a
  41bd97:	pushw  0x74
  41bd9a:	or     BYTE PTR [ecx+esi*4-0x44],0xc
  41bd9f:	push   es
  41bda0:	popa   
  41bda1:	and    al,0x9c
  41bda3:	shl    BYTE PTR [esi+eiz*4-0x24],1
  41bda7:	and    DWORD PTR [eax-0x51],eax
  41bdaa:	int    0xb
  41bdac:	cmp    BYTE PTR [edx+0xd],ch
  41bdaf:	add    eax,0x8ae87b50
  41bdb4:	ins    DWORD PTR es:[edi],dx
  41bdb5:	sbb    bl,0x5d
  41bdb8:	xchg   ebp,eax
  41bdb9:	add    bl,BYTE PTR [ebx-0x6f]
  41bdbc:	lds    edi,FWORD PTR [edx-0x6b0b5fea]
  41bdc2:	fcomp  QWORD PTR [eax+0x77e5058f]
  41bdc8:	push   eax
  41bdc9:	shrd   DWORD PTR [edi-0x23],ebp,0xea
  41bdce:	and    eax,0x945ca233
  41bdd3:	sbb    BYTE PTR [ecx+0x69],ch
  41bdd6:	jns    0x41bdb7
  41bdd8:	inc    esi
  41bdd9:	jp     0x41be13
  41bddb:	daa    
  41bddc:	dec    edi
  41bddd:	sbb    BYTE PTR [edi+0x45],ah
  41bde0:	shl    dl,1
  41bde2:	(bad)  
  41bde3:	(bad)  
  41bde4:	pop    esi
  41bde5:	jbe    0x41bdae
  41bde7:	dec    esi
  41bde8:	daa    
  41bde9:	scas   al,BYTE PTR es:[edi]
  41bdea:	dec    esi
  41bdeb:	jmp    0x75e213db
  41bdf0:	out    0x69,al
  41bdf2:	pusha  
  41bdf3:	fisub  WORD PTR [ebx-0x418d0d08]
  41bdf9:	inc    edi
  41bdfa:	sub    al,0x8d
  41bdfc:	outs   dx,BYTE PTR ds:[esi]
  41bdfd:	adc    al,0x1
  41bdff:	cmp    bl,BYTE PTR [ebp-0x165202d6]
  41be05:	or     BYTE PTR [ebx],al
  41be07:	adc    DWORD PTR [ebx+0x2aefb992],esi
  41be0d:	pop    eax
  41be0e:	mov    al,ds:0x3fecc197
  41be13:	add    BYTE PTR [edx],ch
  41be15:	push   esp
  41be16:	fbstp  TBYTE PTR [edi-0x17]
  41be19:	stc    
  41be1a:	int3   
  41be1b:	mov    bl,0xed
  41be1d:	pop    eax
  41be1e:	or     al,0xfc
  41be20:	jge    0x41be22
  41be22:	inc    esi
  41be23:	sub    eax,0xd0336a5b
  41be28:	mov    ecx,0x95710313
  41be2d:	les    ecx,FWORD PTR cs:[eax-0x64965254]
  41be34:	(bad)  
  41be35:	sbb    ecx,DWORD PTR [eax-0x7c]
  41be38:	mov    al,0x62
  41be3a:	dec    ecx
  41be3b:	push   esi
  41be3c:	(bad)  
  41be3d:	das    
  41be3e:	cld    
  41be3f:	les    ecx,FWORD PTR [ecx]
	...
  41beb1:	add    BYTE PTR [eax],al
  41beb3:	add    ch,al
  41beb5:	stc    
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	psllw  mm2,QWORD PTR [eax+0x2d537cd9]
  41bec6:	add    DWORD PTR [eax],eax
  41bec8:	cmc    
  41bec9:	add    BYTE PTR [eax],al
  41becb:	add    BYTE PTR [edi-0x5c],dh
  41bece:	mov    eax,ds:0x6d87bf65
  41bed3:	mov    al,ds:0x8957670f
  41bed8:	mul    BYTE PTR [edi+esi*8+0x4e]
  41bedc:	xor    ch,BYTE PTR [eax-0x36]
  41bedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee0:	lock adc eax,esi
  41bee3:	std    
  41bee4:	into   
  41bee5:	mov    ecx,ss
  41bee7:	(bad)  
  41bee8:	shl    DWORD PTR [edi-0x3f1cf3da],0x7c
  41beef:	push   edx
  41bef0:	push   edx
  41bef1:	out    dx,eax
  41bef2:	dec    ebp
  41bef3:	xor    al,ch
  41bef5:	in     al,0x27
  41bef7:	outs   dx,DWORD PTR ds:[esi]
  41bef8:	xchg   esi,eax
  41bef9:	jg     0x41be8b
  41befb:	fcom   DWORD PTR [esp+ecx*1]
  41befe:	mov    esi,0x7e25c44a
  41bf03:	push   edi
  41bf04:	addr16 aad 0x26
  41bf07:	push   ebp
  41bf08:	mov    esi,0x84dd2ce4
  41bf0d:	pop    ebx
  41bf0e:	leave  
  41bf0f:	stos   DWORD PTR es:[edi],eax
  41bf10:	iret   
  41bf11:	inc    eax
  41bf12:	mov    edx,DWORD PTR ds:0xed6a4589
  41bf18:	add    DWORD PTR [eax+0x4f],0x94aa20a
  41bf1f:	mov    ebx,0x2159d3cc
  41bf24:	adc    eax,0xf3db40ff
  41bf29:	dec    esi
  41bf2a:	xchg   BYTE PTR [ebx+0x2bdab220],ch
  41bf30:	shr    BYTE PTR [ebp+0x1c802767],0xfc
  41bf37:	mov    dl,0xaf
  41bf39:	inc    ebx
  41bf3a:	push   ecx
  41bf3b:	or     BYTE PTR [esi-0x91ebd76],bh
  41bf41:	cvtps2pd xmm7,QWORD PTR [edx+0x6b]
  41bf45:	ins    BYTE PTR es:[edi],dx
  41bf46:	retf   
  41bf47:	add    dh,BYTE PTR [edx]
  41bf49:	cli    
  41bf4a:	setp   BYTE PTR [edx-0x1b40ede7]
  41bf51:	cmc    
  41bf52:	(bad)  
  41bf54:	adc    DWORD PTR [esi+0x433b3ea1],ebp
  41bf5a:	sahf   
  41bf5b:	sbb    bh,bl
  41bf5d:	jle    0x41bf21
  41bf5f:	out    0x42,eax
  41bf61:	and    edx,DWORD PTR cs:[ebx+0x17f5961c]
  41bf68:	js     0x41bf52
  41bf6a:	xor    BYTE PTR [ecx],cl
  41bf6c:	xchg   ecx,eax
  41bf6d:	aas    
  41bf6e:	movsx  ebx,WORD PTR [ebp+0x79]
  41bf72:	inc    ecx
  41bf73:	fidivr WORD PTR [edi]
  41bf75:	fs (bad) 
  41bf77:	lock cmp BYTE PTR [ecx-0x765f4cb0],dl
  41bf7e:	sub    al,cl
  41bf80:	aam    0x94
  41bf82:	add    BYTE PTR [ebx],dl
  41bf84:	lds    edi,FWORD PTR [eax+ebp*4]
  41bf87:	add    DWORD PTR ds:0x47947eb7,ecx
  41bf8d:	in     eax,0xa4
  41bf8f:	in     eax,dx
  41bf90:	aas    
  41bf91:	jne    0x41bf9e
  41bf93:	out    0x47,al
  41bf95:	push   edx
  41bf96:	cmp    eax,0xcda6e7df
  41bf9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf9c:	add    ah,BYTE PTR [esi]
  41bf9e:	inc    edi
  41bf9f:	and    al,BYTE PTR [edx+0x3fed171]
  41bfa5:	mov    ds:0x8dfa684a,eax
  41bfaa:	mov    cl,0xf5
  41bfac:	in     al,dx
  41bfad:	scas   eax,DWORD PTR es:[edi]
  41bfae:	mov    dh,0xcf
  41bfb0:	mov    dh,0x2e
  41bfb2:	dec    ecx
  41bfb3:	inc    ebx
  41bfb4:	sub    bl,BYTE PTR [edx+0x2]
  41bfb7:	rcl    BYTE PTR [edx],cl
  41bfb9:	cdq    
  41bfba:	jae    0x41bf4f
  41bfbc:	mov    WORD PTR [ecx+0x3fce57],ss
	...
  41c032:	add    BYTE PTR [eax],al
  41c034:	(bad)  
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi-0x1844657f]
  41c041:	pop    ds
  41c042:	call   0xf500:0x12e4856
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    BYTE PTR [edx-0x64],al
  41c04e:	fiadd  WORD PTR [ebx+ecx*2+0x58fd38ee]
  41c055:	push   ebx
  41c056:	push   0x28
  41c058:	push   esp
  41c059:	pop    edi
  41c05a:	dec    edi
  41c05b:	int    0x74
  41c05d:	ret    
  41c05e:	je     0x41c032
  41c060:	aaa    
  41c061:	lock mov ecx,DWORD PTR [eax-0x358eeb3a]
  41c068:	test   eax,0x789c3461
  41c06d:	data16 icebp 
  41c06f:	dec    ebx
  41c070:	data16 jmp 0x41c087
  41c073:	leave  
  41c074:	stc    
  41c075:	mov    ds:0x193bd72d,eax
  41c07a:	dec    ecx
  41c07b:	imul   edx,DWORD PTR [esi+ebx*4],0x21
  41c07f:	add    dh,bh
  41c081:	cmp    DWORD PTR [ebx+0x4f],eax
  41c084:	gs xor al,0x7e
  41c087:	xchg   ebp,eax
  41c088:	jb     0x41c073
  41c08a:	xchg   DWORD PTR [ecx],eax
  41c08c:	xchg   esp,eax
  41c08d:	jae    0x41c0b8
  41c08f:	mov    edi,0xeca1cf43
  41c094:	xchg   ecx,eax
  41c095:	mov    WORD PTR [ebp-0x205a81fe],ds
  41c09b:	jg     0x41c0c8
  41c09d:	sti    
  41c09e:	cmp    eax,DWORD PTR [edx+eiz*2+0x618ed858]
  41c0a5:	aad    0x8c
  41c0a7:	nop
  41c0a8:	pop    edi
  41c0a9:	xchg   ebx,eax
  41c0aa:	imul   edi,DWORD PTR [ecx+0x1ed06fe3],0xffffff93
  41c0b1:	xor    BYTE PTR [ecx],0x67
  41c0b4:	or     DWORD PTR [ebp+0x49],ebp
  41c0b7:	dec    edx
  41c0b8:	mov    eax,0xe9dde304
  41c0bd:	push   0x9b2848db
  41c0c2:	cdq    
  41c0c3:	(bad)  
  41c0c5:	dec    ebp
  41c0c6:	sbb    eax,esp
  41c0c8:	cwde   
  41c0c9:	mov    dl,0xce
  41c0cb:	mov    dh,0x71
  41c0cd:	scas   al,BYTE PTR es:[edi]
  41c0ce:	jmp    0x8b12:0xba1fd247
  41c0d5:	pop    esi
  41c0d6:	xlat   BYTE PTR ds:[ebx]
  41c0d7:	mov    ah,0x6e
  41c0d9:	arpl   WORD PTR [edx-0x11573512],dx
  41c0df:	retf   
  41c0e0:	lahf   
  41c0e1:	push   eax
  41c0e2:	inc    edx
  41c0e3:	in     eax,dx
  41c0e4:	xchg   esp,eax
  41c0e5:	push   0xaaa56e7
  41c0ea:	mov    ebp,0x9c6e6655
  41c0ef:	jnp    0x41c086
  41c0f1:	sub    DWORD PTR [ebx],0x5b88d2c9
  41c0f7:	jnp    0x41c0b0
  41c0f9:	inc    ecx
  41c0fa:	(bad)  
  41c0fb:	mov    al,ds:0xc96c9835
  41c100:	jo     0x41c171
  41c102:	cli    
  41c103:	dec    esi
  41c104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c105:	repz cdq 
  41c107:	or     ah,BYTE PTR [esi]
  41c109:	xchg   BYTE PTR [esi+0x4bc53fe5],dh
  41c10f:	mov    dh,0x7
  41c111:	pop    eax
  41c112:	rcl    DWORD PTR [eax-0x44dacdbf],cl
  41c118:	inc    DWORD PTR [ecx]
  41c11a:	pushf  
  41c11b:	sbb    ah,BYTE PTR [ebx+0x2c]
  41c11e:	adc    al,BYTE PTR [ebx+ebx*2-0x80]
  41c122:	add    dl,BYTE PTR [edi+0x34]
  41c125:	lea    edx,[eax]
  41c127:	push   ebp
  41c128:	sbb    esi,DWORD PTR [edi+0x75c566b1]
  41c12e:	ins    DWORD PTR es:[edi],dx
  41c12f:	mov    ds:0xd423afa1,al
  41c134:	nop
  41c135:	jecxz  0x41c126
  41c137:	adc    ecx,edx
  41c139:	daa    
  41c13a:	jo     0x41c0bf
  41c13c:	nop
  41c13d:	inc    ebx
  41c13e:	jmp    0x41c11b
  41c140:	jbe    0x41c142
	...
  41c1b2:	add    BYTE PTR [eax],al
  41c1b4:	mov    fs,WORD PTR [ebp-0x13941f97]
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x2d831910
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [ecx-0x1b83cf65],ah
  41c1d1:	pop    ss
  41c1d2:	aad    0xba
  41c1d4:	sub    BYTE PTR [ebx+0x4eb9bbba],0xf6
  41c1db:	adc    edi,DWORD PTR [edi+0x21]
  41c1de:	pop    esp
  41c1df:	fbstp  TBYTE PTR [eax+0xa]
  41c1e2:	jne    0x41c21a
  41c1e4:	rcr    BYTE PTR [esi-0x12ca9d11],0x48
  41c1eb:	pop    edi
  41c1ec:	add    edi,esp
  41c1ee:	sar    BYTE PTR [ebp+0x4e],cl
  41c1f1:	aam    0xa6
  41c1f3:	and    eax,0x7d937b4c
  41c1f8:	xor    al,0x94
  41c1fa:	cli    
  41c1fb:	leave  
  41c1fc:	pop    ss
  41c1fd:	xor    al,0xc8
  41c1ff:	loopne 0x41c250
  41c201:	lea    ebx,[edx+eax*4-0x34]
  41c205:	push   esi
  41c206:	(bad)  
  41c207:	mov    eax,0xba3bb7e6
  41c20c:	inc    ebx
  41c20d:	mov    ah,0x5d
  41c20f:	lods   al,BYTE PTR ds:[esi]
  41c210:	dec    edi
  41c211:	mov    bh,0x1
  41c213:	dec    ecx
  41c214:	sbb    al,0xea
  41c216:	add    ah,bh
  41c218:	pop    edi
  41c219:	cwde   
  41c21a:	jge    0x41c26a
  41c21c:	fs (bad) 
  41c21e:	jmp    0xbfd5e8a1
  41c223:	imul   eax,DWORD PTR [eax-0x63fd6cd7],0xffffffc3
  41c22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c22b:	aam    0x3c
  41c22d:	inc    edi
  41c22e:	fdiv   st,st(2)
  41c230:	jle    0x41c1bb
  41c232:	icebp  
  41c233:	fs jle 0x41c1fe
  41c236:	fadd   DWORD PTR [ebp+0x254db7e8]
  41c23c:	pop    eax
  41c23d:	push   ds
  41c23e:	lock adc ebp,esp
  41c241:	mov    dl,0x88
  41c243:	call   DWORD PTR [ecx-0x1f]
  41c246:	ins    BYTE PTR es:[edi],dx
  41c247:	jmp    0x727e3dd9
  41c24c:	xor    edi,esp
  41c24e:	xchg   edi,eax
  41c24f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c250:	xlat   BYTE PTR ds:[ebx]
  41c251:	push   esi
  41c252:	ja     0x41c2bc
  41c254:	cmp    eax,0x4d04912b
  41c259:	mov    esp,0x3fb8164d
  41c25e:	lods   al,BYTE PTR ds:[esi]
  41c25f:	scas   al,BYTE PTR es:[edi]
  41c260:	mov    eax,0xad6c6dd5
  41c265:	rcr    BYTE PTR [ecx],1
  41c267:	jo     0x41c24a
  41c269:	repnz loope 0x41c232
  41c26c:	aad    0x36
  41c26e:	fldenv [ecx]
  41c270:	xchg   ecx,eax
  41c271:	in     eax,0xe
  41c273:	in     eax,0x93
  41c275:	es popf 
  41c277:	pusha  
  41c278:	lock sub eax,0xdfa0649b
  41c27e:	jns    0x41c28a
  41c280:	pusha  
  41c281:	pusha  
  41c282:	adc    dh,BYTE PTR [ebp-0x20]
  41c285:	pop    ss
  41c286:	call   0xd75a:0x410c5d44
  41c28d:	dec    ebx
  41c28e:	pop    esi
  41c28f:	call   0x4d6a:0x653a3bb1
  41c296:	pop    ss
  41c297:	repz or BYTE PTR [ebx+0xe],dl
  41c29b:	fwait
  41c29c:	shl    BYTE PTR [ebp-0x401bbf92],1
  41c2a2:	out    0xa9,eax
  41c2a4:	cmp    ebp,DWORD PTR [esi-0x1b596ca2]
  41c2aa:	je     0x41c281
  41c2ac:	shl    DWORD PTR [ebx+0x35fb2264],1
  41c2b2:	jl     0x41c25c
  41c2b4:	mov    al,0xac
  41c2b6:	lahf   
  41c2b7:	add    cl,BYTE PTR [ebp-0x26]
  41c2ba:	or     esi,esp
  41c2bc:	sub    dh,BYTE PTR [edx+0xf3cdd3]
	...
  41c332:	add    BYTE PTR [eax],al
  41c334:	dec    eax
  41c335:	or     eax,0xbb5dab1d
  41c33a:	(bad)  
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	cli    
  41c341:	adc    DWORD PTR [ebx-0x57],eax
  41c344:	xor    dh,BYTE PTR [eax]
  41c346:	add    DWORD PTR [eax],eax
  41c348:	cmc    
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [esi-0x690003b0],al
  41c351:	lahf   
  41c352:	jl     0x41c330
  41c354:	or     esi,DWORD PTR [edx+0x6f]
  41c357:	dec    esi
  41c358:	jbe    0x41c33a
  41c35a:	repnz sbb eax,0xf68eb7dc
  41c360:	jae    0x41c36c
  41c362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c363:	push   ecx
  41c364:	add    eax,0xd9bcf66c
  41c369:	outs   dx,BYTE PTR ds:[esi]
  41c36a:	push   eax
  41c36b:	mov    esp,0x4d0cff69
  41c370:	mov    ds:0x13010ec0,eax
  41c375:	or     eax,0x8cda2b7c
  41c37a:	cmp    ebp,DWORD PTR [eax]
  41c37c:	es in  eax,dx
  41c37e:	call   0x3aa2:0xae4e84fc
  41c385:	cmp    edi,DWORD PTR [edx+0x79]
  41c388:	cli    
  41c389:	jge    0x41c30f
  41c38b:	outs   dx,BYTE PTR ds:[esi]
  41c38c:	fucompp 
  41c38e:	das    
  41c38f:	loop   0x41c378
  41c391:	fnstenv [ebx]
  41c393:	arpl   WORD PTR [edi-0x5f518f49],di
  41c399:	sahf   
  41c39a:	mov    eax,0x96ed80b6
  41c39f:	cmp    al,0xdf
  41c3a1:	loopne 0x41c412
  41c3a3:	push   ecx
  41c3a4:	or     DWORD PTR [ebx+0x76dae642],0x61
  41c3ab:	push   cs
  41c3ac:	cld    
  41c3ad:	mov    ecx,0xae9143c
  41c3b2:	arpl   WORD PTR [eax+0x16b536e6],di
  41c3b8:	jecxz  0x41c3ab
  41c3ba:	push   ebx
  41c3bb:	test   BYTE PTR [ecx],0x7c
  41c3be:	lock pop ss
  41c3c0:	adc    eax,0x58f243ea
  41c3c5:	out    0xaa,eax
  41c3c7:	aas    
  41c3c8:	mov    ch,0x39
  41c3ca:	mov    ds:0x877645d7,al
  41c3cf:	mov    dl,0xa6
  41c3d1:	inc    DWORD PTR es:[ecx+eiz*2]
  41c3d5:	ja     0x41c401
  41c3d7:	lods   eax,DWORD PTR ds:[esi]
  41c3d8:	jmp    0xecae:0xb887124f
  41c3df:	sub    esi,ebx
  41c3e1:	cmp    dh,bl
  41c3e3:	dec    esi
  41c3e4:	pop    es
  41c3e5:	jecxz  0x41c422
  41c3e7:	in     al,dx
  41c3e8:	scas   eax,DWORD PTR es:[edi]
  41c3e9:	xchg   esi,eax
  41c3ea:	js     0x41c385
  41c3ec:	xchg   DWORD PTR [esi+0x5d],ebp
  41c3ef:	outs   dx,BYTE PTR ds:[esi]
  41c3f0:	cmp    eax,0xf6d4bf60
  41c3f5:	or     eax,0xb875b459
  41c3fa:	ja     0x41c3a6
  41c3fc:	sti    
  41c3fd:	jnp    0x41c39a
  41c3ff:	and    eax,0x86468b5b
  41c404:	test   al,0x5b
  41c406:	or     BYTE PTR [ebp+0x32],dh
  41c409:	jnp    0x41c3e4
  41c40b:	cmp    eax,0xd5354bae
  41c410:	dec    ecx
  41c411:	xchg   esi,eax
  41c412:	es repnz in eax,dx
  41c415:	es xchg ebx,eax
  41c417:	outs   dx,BYTE PTR ds:[esi]
  41c418:	call   0x6d0:0xdc3555e8
  41c41f:	aam    0x5d
  41c421:	push   edi
  41c422:	mov    eax,ds:0x94674729
  41c427:	jecxz  0x41c410
  41c429:	add    bh,BYTE PTR [esi+0x4c92f2d8]
  41c42f:	mov    ah,BYTE PTR [edx]
  41c431:	jno    0x41c471
  41c433:	inc    esp
  41c434:	hlt    
  41c435:	in     eax,dx
  41c436:	and    bl,dh
  41c438:	mov    ?,esp
  41c43a:	faddp  st(6),st
  41c43c:	lods   eax,DWORD PTR ds:[esi]
  41c43d:	(bad)  
  41c43e:	dec    edi
  41c43f:	add    al,0x9c
	...
  41c4b1:	add    BYTE PTR [eax],al
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x34c75b72]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [ebx+0xf77e1a2],bh
  41c4d1:	dec    edi
  41c4d2:	inc    esi
  41c4d3:	push   es
  41c4d4:	mov    al,ds:0xf9b148fc
  41c4d9:	jmp    0x24e2936a
  41c4de:	or     BYTE PTR [ebp-0x46],dh
  41c4e1:	push   es
  41c4e2:	inc    edi
  41c4e3:	add    edx,DWORD PTR [eax+0x240c8df0]
  41c4e9:	sub    eax,0xfac021fa
  41c4ee:	scas   al,BYTE PTR es:[edi]
  41c4ef:	mov    WORD PTR [esi],es
  41c4f1:	test   BYTE PTR [ebp-0x61],dl
  41c4f4:	jmp    0x6653:0x98725084
  41c4fb:	dec    esi
  41c4fc:	add    DWORD PTR [ebp+0x650f231],esp
  41c502:	dec    ebp
  41c503:	inc    esi
  41c504:	in     eax,0x55
  41c506:	aaa    
  41c507:	jo     0x41c4d8
  41c509:	jmp    0x41c4ae
  41c50b:	icebp  
  41c50c:	sbb    esp,ebx
  41c50e:	mov    ecx,0x4eac7a24
  41c513:	hlt    
  41c514:	cmp    eax,0xd81f23c5
  41c519:	xor    edi,edi
  41c51b:	mov    cl,BYTE PTR ds:0x1738a8e1
  41c521:	iret   
  41c522:	and    DWORD PTR [eax+0x3],edi
  41c525:	inc    edx
  41c526:	(bad)
  41c52a:	outs   dx,DWORD PTR ds:[esi]
  41c52b:	and    eax,ecx
  41c52d:	xor    eax,0x12fee64d
  41c532:	inc    BYTE PTR [esi+edi*1+0x61897728]
  41c539:	scas   al,BYTE PTR es:[edi]
  41c53a:	mov    ds:0x9855bbb6,al
  41c53f:	add    edi,esi
  41c541:	sub    BYTE PTR ds:0xbc996e9,al
  41c547:	adc    ecx,0x60
  41c54a:	imul   edx,DWORD PTR [ebp-0x80],0x8b07a167
  41c551:	sahf   
  41c552:	aaa    
  41c553:	cmp    ch,BYTE PTR [ebp-0x1d]
  41c556:	sar    BYTE PTR [ebp-0x6a],1
  41c559:	jle    0x41c4fc
  41c55b:	dec    ecx
  41c55c:	dec    edi
  41c55d:	xor    DWORD PTR [ecx+0x35151444],eax
  41c563:	sbb    DWORD PTR [edi-0x7ae5f0e8],esp
  41c569:	xchg   edx,eax
  41c56a:	sbb    eax,0x40720015
  41c56f:	xor    al,0x3
  41c571:	mov    edi,0xd0d5824a
  41c576:	into   
  41c577:	(bad)  
  41c578:	nop
  41c579:	sub    ebx,DWORD PTR [edi+0x70]
  41c57c:	cli    
  41c57d:	mov    esp,0x69579e0
  41c582:	mov    ds:0x5bbcc94b,eax
  41c587:	clc    
  41c588:	ds or  esp,edx
  41c58b:	jl     0x41c57a
  41c58d:	ins    BYTE PTR es:[edi],dx
  41c58e:	xchg   ebp,eax
  41c58f:	test   al,0xeb
  41c591:	jp     0x41c548
  41c593:	sub    bl,BYTE PTR [ebx]
  41c595:	fidiv  WORD PTR [ebx]
  41c597:	mov    cl,0x23
  41c599:	dec    ebx
  41c59a:	push   ss
  41c59b:	pop    esp
  41c59c:	xchg   edx,eax
  41c59d:	push   ecx
  41c59e:	lods   eax,DWORD PTR ds:[esi]
  41c59f:	sbb    al,0x90
  41c5a1:	in     al,0xb2
  41c5a3:	retf   
  41c5a4:	cld    
  41c5a5:	pusha  
  41c5a6:	push   0xbc4ba1ec
  41c5ab:	mov    al,ds:0x5bc931b
  41c5b0:	cli    
  41c5b1:	inc    eax
  41c5b2:	mov    ebx,0x9a03e8df
  41c5b7:	pop    edi
  41c5b8:	inc    eax
  41c5b9:	xor    eax,0xa8446ba4
  41c5be:	and    DWORD PTR ds:0x9e,0x0
	...
  41c631:	add    BYTE PTR [eax],al
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	fisttp WORD PTR [edx+0x321cdc0a]
  41c646:	add    DWORD PTR [eax],eax
  41c648:	cmc    
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [edx+eiz*4-0x6b5c9138],dh
  41c652:	jle    0x41c5fb
  41c654:	arpl   WORD PTR [esi],cx
  41c656:	loope  0x41c6b4
  41c658:	cmp    eax,0x563036e1
  41c65d:	icebp  
  41c65e:	xchg   ebp,eax
  41c65f:	jmp    0x41c6c5
  41c661:	ss jmp 0x41c69d
  41c664:	cmp    ecx,ecx
  41c666:	popa   
  41c667:	je     0x41c65a
  41c669:	adc    al,0x6d
  41c66b:	in     al,0xa4
  41c66d:	jp     0x41c665
  41c66f:	aas    
  41c670:	enter  0x75f4,0x13
  41c674:	adc    ecx,esp
  41c676:	jmp    0xda33:0xcb57e0
  41c67d:	fwait
  41c67e:	pop    eax
  41c67f:	mov    dl,0x79
  41c681:	aad    0x5b
  41c683:	shr    DWORD PTR [esp+ebx*4],cl
  41c686:	add    DWORD PTR [bx-0x671f],0xffffffe3
  41c68c:	aam    0xb5
  41c68e:	inc    ebx
  41c68f:	and    al,ah
  41c691:	mov    ecx,0xc74012b1
  41c696:	lods   al,BYTE PTR ds:[esi]
  41c697:	cmp    al,0xb8
  41c699:	(bad)  
  41c69a:	push   esi
  41c69b:	outs   dx,BYTE PTR ds:[esi]
  41c69c:	inc    edi
  41c69d:	call   FWORD PTR [esi]
  41c69f:	adc    eax,0x282a80d2
  41c6a4:	xchg   esi,eax
  41c6a5:	jo     0x41c6c9
  41c6a7:	ja     0x41c673
  41c6a9:	mov    ebp,edi
  41c6ab:	push   cs
  41c6ac:	ficomp DWORD PTR [esi]
  41c6ae:	fdiv   DWORD PTR [ebx-0x57993782]
  41c6b4:	jecxz  0x41c6df
  41c6b6:	in     al,dx
  41c6b7:	int3   
  41c6b8:	idiv   BYTE PTR [ecx]
  41c6ba:	stos   DWORD PTR es:[edi],eax
  41c6bb:	sbb    eax,0xd77854a3
  41c6c0:	pop    ds
  41c6c1:	pop    ds
  41c6c2:	fist   DWORD PTR [eax+ebx*8+0x45b9fef8]
  41c6c9:	ror    BYTE PTR [edx],0x81
  41c6cc:	mov    dl,BYTE PTR [ecx]
  41c6ce:	xor    cl,BYTE PTR [edi-0x3e]
  41c6d1:	sbb    BYTE PTR [edx-0x32],ch
  41c6d4:	shl    DWORD PTR [eax+0x297ef26d],0xe
  41c6db:	loop   0x41c661
  41c6dd:	out    0x89,al
  41c6df:	cmp    BYTE PTR [edi+0x24e1e164],bl
  41c6e5:	popa   
  41c6e6:	dec    ebp
  41c6e7:	out    0x4f,eax
  41c6e9:	ja     0x41c6da
  41c6eb:	imul   edi,DWORD PTR [esp+eiz*4-0x15130151],0xe1db52ab
  41c6f6:	fdivr  QWORD PTR [esi+ebx*2+0x6f086cc3]
  41c6fd:	mov    esi,0x8544f828
  41c702:	out    0x3,eax
  41c704:	aaa    
  41c705:	and    ebx,eax
  41c707:	bound  ecx,QWORD PTR ds:0xe14d04a7
  41c70d:	in     al,dx
  41c70e:	je     0x41c6f1
  41c710:	xchg   ecx,eax
  41c711:	test   eax,0xfd6e077d
  41c716:	cmc    
  41c717:	sub    esi,DWORD PTR [edi+0x46b840e9]
  41c71d:	fsub   QWORD PTR [eax+0x5695ca90]
  41c723:	and    BYTE PTR [ecx],0xed
  41c726:	mov    esp,0x80f83483
  41c72b:	jns    0x41c76b
  41c72d:	out    0x0,eax
  41c72f:	or     ecx,DWORD PTR [ebp+edi*4-0x5]
  41c733:	adc    al,0xba
  41c736:	pop    esi
  41c737:	ss lock push esi
  41c73a:	in     al,0x84
  41c73c:	aad    0x8d
  41c73e:	and    edx,DWORD PTR [edi+eax*2]
	...
  41c7b1:	add    BYTE PTR [eax],al
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0xf8641d54
  41c7c3:	pop    es
  41c7c4:	adc    DWORD PTR [ebx],esi
  41c7c6:	add    DWORD PTR [eax],eax
  41c7c8:	cmc    
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [ebx+0x45],al
  41c7ce:	push   ebx
  41c7cf:	test   BYTE PTR [ebp+0x7f],ch
  41c7d2:	test   BYTE PTR [ebx+0x18],dh
  41c7d5:	fidiv  WORD PTR [eax-0x12]
  41c7d8:	inc    edx
  41c7d9:	xchg   DWORD PTR [eax],esi
  41c7db:	sbb    dh,dh
  41c7dd:	dec    ebp
  41c7de:	das    
  41c7df:	push   0xadac2b90
  41c7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e5:	ret    
  41c7e6:	add    eax,0x26993545
  41c7eb:	xchg   esi,eax
  41c7ec:	or     eax,0xfea98913
  41c7f1:	retf   0xbe05
  41c7f4:	lahf   
  41c7f5:	imul   eax,DWORD PTR [ebx+ecx*8],0xffffffa7
  41c7f9:	bnd jae 0x41c84e
  41c7fc:	sahf   
  41c7fd:	sbb    edx,edx
  41c7ff:	pushf  
  41c800:	stos   BYTE PTR es:[edi],al
  41c801:	sub    bh,BYTE PTR [eax-0x7f530a5f]
  41c807:	push   ss
  41c808:	push   edx
  41c809:	and    al,BYTE PTR [ebp+0x23]
  41c80c:	fndisi(8087 only) 
  41c80e:	cs adc al,0x9d
  41c811:	ror    BYTE PTR [esi-0xdf09083],1
  41c817:	mov    bh,0xed
  41c819:	mov    bl,dl
  41c81b:	dec    ecx
  41c81c:	imul   edi,DWORD PTR [edx],0xffffffed
  41c81f:	mov    eax,ds:0x38f7b02d
  41c824:	out    0x65,al
  41c826:	jbe    0x41c88c
  41c828:	out    0xd2,al
  41c82a:	ja     0x41c7d8
  41c82c:	push   edx
  41c82d:	push   es
  41c82e:	inc    esp
  41c82f:	push   esi
  41c830:	add    DWORD PTR [ebp+ebp*2-0x4daa43e0],ecx
  41c837:	and    eax,0xe30d3728
  41c83c:	and    bh,cl
  41c83e:	clc    
  41c83f:	inc    edi
  41c840:	push   es
  41c841:	pop    ebx
  41c842:	out    0xf8,al
  41c844:	mov    dh,0xd7
  41c846:	pop    ebx
  41c847:	mov    bl,0xd0
  41c849:	push   ds
  41c84a:	cwde   
  41c84b:	out    0xfb,al
  41c84d:	and    eax,0x442f5143
  41c852:	scas   eax,DWORD PTR es:[edi]
  41c853:	test   al,ch
  41c855:	or     BYTE PTR [ecx-0x2d],bh
  41c858:	push   cs
  41c859:	popa   
  41c85a:	cmp    eax,0x3d
  41c85d:	(bad)  
  41c85e:	daa    
  41c85f:	shl    BYTE PTR [ebx-0x6adc7299],cl
  41c865:	aas    
  41c866:	nop
  41c867:	push   DWORD PTR [ebx]
  41c869:	ds push ebx
  41c86b:	cmp    DWORD PTR [esi-0x6cee111],ecx
  41c871:	mov    ?,eax
  41c873:	ret    
  41c874:	push   esi
  41c875:	add    al,0x71
  41c877:	mov    ?,ebp
  41c879:	cmp    al,0x62
  41c87b:	xor    BYTE PTR [ebp-0x7c],dl
  41c87e:	mov    bl,0x1c
  41c880:	stos   BYTE PTR es:[edi],al
  41c881:	gs push esp
  41c883:	pusha  
  41c884:	in     eax,dx
  41c885:	mov    dl,0xf
  41c887:	add    al,0x5d
  41c889:	jl     0x41c85b
  41c88b:	popa   
  41c88c:	in     al,dx
  41c88d:	in     al,dx
  41c88e:	push   ebx
  41c88f:	xor    eax,0x23a4668e
  41c894:	xchg   ebx,eax
  41c895:	call   0xbc9f:0xb90ecfb9
  41c89c:	ret    
  41c89d:	pop    ds
  41c89e:	sub    ebp,DWORD PTR [eax+0x24]
  41c8a1:	sar    BYTE PTR [edx+0xb001c2d],1
  41c8a7:	jl     0x41c844
  41c8a9:	inc    eax
  41c8aa:	call   0xc0a7:0xd49a0cf
  41c8b1:	mov    ecx,0x23bc5d61
  41c8b6:	inc    edi
  41c8b7:	adc    eax,DWORD PTR [edi+0x57]
  41c8ba:	xchg   esp,eax
  41c8bb:	sub    eax,0xe320d2e4
  41c8c0:	leave  
	...
  41c931:	add    BYTE PTR [eax],al
  41c933:	add    bl,al
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	aad    0xb6
  41c942:	push   edi
  41c943:	cdq    
  41c944:	push   es
  41c945:	xor    al,0x1
  41c947:	add    ch,dh
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    bl,bh
  41c94d:	in     al,dx
  41c94e:	retf   
  41c94f:	xchg   edx,eax
  41c950:	out    0x26,al
  41c952:	xchg   esp,eax
  41c953:	adc    ebp,DWORD PTR [esi-0x57]
  41c956:	das    
  41c957:	mov    ds:0xa7db0584,eax
  41c95c:	out    0x5b,eax
  41c95e:	add    ebp,edx
  41c960:	js     0x41c9cf
  41c962:	mov    eax,0xc20b1fe0
  41c967:	cli    
  41c968:	jp     0x41c999
  41c96a:	aaa    
  41c96b:	and    DWORD PTR [eax+0x18],eax
  41c96e:	ja     0x41c9ce
  41c970:	gs mov esi,0xdb346c0e
  41c976:	and    eax,0xfb9cb095
  41c97b:	pusha  
  41c97c:	and    bl,BYTE PTR [ecx+0x60]
  41c97f:	pop    eax
  41c980:	pop    ss
  41c981:	arpl   di,dx
  41c983:	dec    ebx
  41c984:	jg     0x41c98a
  41c986:	nop
  41c987:	stc    
  41c988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c989:	pop    ss
  41c98a:	dec    ebp
  41c98b:	pop    ebp
  41c98c:	imul   ebp,edx,0x65
  41c98f:	retf   
  41c990:	mov    ds:0x3c6028bc,al
  41c995:	mov    esi,DWORD PTR [eax+0xf]
  41c998:	add    al,0x8c
  41c99a:	stos   BYTE PTR es:[edi],al
  41c99b:	add    DWORD PTR [eax+0x7791265f],esp
  41c9a1:	jmp    0xefcc22cf
  41c9a6:	fdivr  DWORD PTR [esi+0x3a]
  41c9a9:	mov    bl,0x7d
  41c9ab:	add    ch,BYTE PTR [ebp+0x8]
  41c9ae:	(bad)  
  41c9b0:	push   es
  41c9b1:	jne    0x41ca07
  41c9b3:	jmp    0xdeab:0x6deb5e40
  41c9ba:	xchg   edi,eax
  41c9bb:	sub    eax,0xd46d2cf9
  41c9c0:	add    al,0x24
  41c9c2:	lods   eax,DWORD PTR ds:[esi]
  41c9c3:	neg    ecx
  41c9c5:	les    edx,FWORD PTR [edi]
  41c9c7:	lahf   
  41c9c8:	ins    BYTE PTR es:[edi],dx
  41c9c9:	sbb    al,0x19
  41c9cb:	add    dh,al
  41c9cd:	pop    eax
  41c9ce:	scas   eax,DWORD PTR es:[edi]
  41c9cf:	cld    
  41c9d0:	inc    esi
  41c9d1:	enter  0x3c3c,0x9b
  41c9d5:	ror    DWORD PTR [ebx+ecx*4-0x4c8dede9],0x11
  41c9dd:	or     bl,BYTE PTR [edi]
  41c9df:	or     DWORD PTR [ecx],esp
  41c9e1:	enter  0xb6bb,0x8b
  41c9e5:	jle    0x41ca30
  41c9e7:	ret    0xbbe6
  41c9ea:	pop    esp
  41c9eb:	jmp    0x9d87:0xcaa63117
  41c9f2:	ins    DWORD PTR es:[edi],dx
  41c9f3:	test   DWORD PTR [eax+0x448f87fe],ebx
  41c9f9:	dec    esi
  41c9fa:	jae    0x41c9e9
  41c9fc:	or     bh,al
  41c9fe:	out    0xd9,eax
  41ca00:	cld    
  41ca01:	mov    dh,al
  41ca03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca04:	das    
  41ca05:	push   esp
  41ca06:	pop    edi
  41ca07:	mov    ebx,0xc718f1a
  41ca0c:	popf   
  41ca0d:	addr16 inc eax
  41ca0f:	lods   eax,DWORD PTR ds:[esi]
  41ca10:	or     bl,al
  41ca12:	addr16 cmp edx,0x73
  41ca16:	pop    edi
  41ca17:	scas   eax,DWORD PTR es:[edi]
  41ca18:	mov    BYTE PTR [edx],ch
  41ca1a:	sbb    ah,bh
  41ca1c:	mov    BYTE PTR gs:[ebp+0x52],cl
  41ca20:	mov    DWORD PTR [esi+eiz*8-0x1f],ecx
  41ca24:	les    edi,FWORD PTR [ecx-0x2050fcb]
  41ca2a:	aas    
  41ca2b:	cli    
  41ca2c:	or     DWORD PTR [ecx+0x38],edx
  41ca2f:	sbb    ah,bl
  41ca31:	pop    es
  41ca32:	cmp    esp,DWORD PTR [esi+ebx*4-0x72f05279]
  41ca39:	pop    es
  41ca3a:	sti    
  41ca3b:	addr16 add eax,0x874d05b5
	...
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0x27e2887e
  41cac1:	lods   al,BYTE PTR ds:[esi]
  41cac2:	mov    BYTE PTR [edx+0x134fb],ah
  41cac8:	cmc    
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    dh,bh
  41cacd:	xor    dl,BYTE PTR [ebx-0x7e]
  41cad0:	xchg   ecx,eax
  41cad1:	add    al,0xb2
  41cad3:	sti    
  41cad4:	dec    ebp
  41cad5:	pop    eax
  41cad6:	clc    
  41cad7:	frstor [edi]
  41cad9:	not    DWORD PTR [ebp+0x3cc81839]
  41cadf:	daa    
  41cae0:	arpl   WORD PTR [esi+0x1cf39ece],bx
  41cae6:	xchg   esi,eax
  41cae7:	sahf   
  41cae8:	imul   edi,edx,0x726a0d10
  41caee:	or     BYTE PTR [edi-0x2416496],0x23
  41caf5:	gs pop edx
  41caf7:	loopne 0x41ca96
  41caf9:	sub    al,0x71
  41cafb:	fs jo  0x41cb58
  41cafe:	shr    esi,1
  41cb00:	cdq    
  41cb01:	loop   0x41cabf
  41cb03:	sbb    al,0x86
  41cb05:	ret    
  41cb06:	retf   
  41cb07:	add    esp,eax
  41cb09:	pop    esp
  41cb0a:	dec    esp
  41cb0b:	inc    eax
  41cb0c:	mov    edx,0xf49de652
  41cb11:	int    0x87
  41cb13:	mov    esi,DWORD PTR [edi+0x2e4d4526]
  41cb19:	jp     0x41cacf
  41cb1b:	lods   eax,DWORD PTR ds:[esi]
  41cb1c:	xchg   edi,eax
  41cb1d:	dec    eax
  41cb1e:	xor    cl,bh
  41cb20:	outs   dx,WORD PTR ds:[esi]
  41cb22:	or     edi,DWORD PTR [ebp-0x40bc86d9]
  41cb28:	dec    edx
  41cb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb2a:	sub    al,0x72
  41cb2c:	and    edi,ebp
  41cb2e:	sub    al,0x3e
  41cb30:	mov    ah,0x6b
  41cb32:	adc    al,0x39
  41cb34:	dec    ebx
  41cb35:	pop    esp
  41cb36:	pop    esi
  41cb37:	imul   edi,DWORD PTR [ecx+0xb],0xc8057f7f
  41cb3e:	jl     0x41cb91
  41cb40:	jmp    0x49bc:0x108e4207
  41cb47:	rcl    eax,0xa
  41cb4a:	dec    edi
  41cb4b:	pop    edi
  41cb4c:	cdq    
  41cb4d:	push   ecx
  41cb4e:	sbb    BYTE PTR [ecx+eiz*2],cl
  41cb51:	fnsetpm(287 only) 
  41cb53:	dec    ebp
  41cb54:	cwde   
  41cb55:	pop    ebx
  41cb56:	adc    bh,BYTE PTR [esi-0x7ae05f49]
  41cb5c:	or     al,BYTE PTR [esi+0x2de96a4]
  41cb62:	sbb    ah,ah
  41cb64:	mov    ds:0xf89d17ae,eax
  41cb69:	popa   
  41cb6a:	or     al,0x8d
  41cb6c:	adc    esi,eax
  41cb6e:	pop    ebp
  41cb6f:	mov    cl,BYTE PTR [esi+0x76dcffb]
  41cb75:	adc    eax,0x218c3f58
  41cb7a:	rol    DWORD PTR [eax-0xdd28a13],0xc5
  41cb81:	sub    eax,0xe6db801e
  41cb86:	adc    DWORD PTR [edi],ebp
  41cb88:	shl    BYTE PTR [ecx-0x4dcee0ca],cl
  41cb8e:	test   al,0x91
  41cb90:	adc    ecx,DWORD PTR [eax]
  41cb92:	cld    
  41cb93:	in     eax,0xaa
  41cb95:	dec    edi
  41cb96:	loopne 0x41cb69
  41cb98:	test   eax,0xfc65d0ea
  41cb9d:	(bad)  
  41cb9e:	call   0x9dd3f264
  41cba3:	retf   
  41cba4:	jmp    0xca5edd9c
  41cba9:	cwde   
  41cbaa:	outs   dx,BYTE PTR gs:[esi]
  41cbac:	add    edi,DWORD PTR [ecx]
  41cbae:	je     0x41cb34
  41cbb0:	loop   0x41cba4
  41cbb2:	jmp    0x7ed0:0x1ea23924
  41cbb9:	shr    DWORD PTR [ebx],0xf8
  41cbbc:	test   BYTE PTR [ebp+0x19],bh
  41cbbf:	sbb    BYTE PTR [eax],cl
	...
  41cc31:	add    BYTE PTR [eax],al
  41cc33:	add    dl,dl
  41cc35:	xor    bh,dl
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0xc2
  41cc41:	(bad)  
  41cc42:	in     eax,dx
  41cc43:	das    
  41cc44:	lock xor eax,0xf50001
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	daa    
  41cc4d:	loop   0x41cc8c
  41cc4f:	mov    cl,0xff
  41cc51:	lock fmul st,st(4)
  41cc54:	sar    DWORD PTR [esi-0x6959bffa],1
  41cc5a:	(bad)  
  41cc5b:	jge    0x41ccc7
  41cc5d:	dec    edx
  41cc5f:	jno    0x41cc44
  41cc61:	sbb    al,0x4
  41cc63:	sti    
  41cc64:	mov    WORD PTR [edi],?
  41cc66:	mov    ecx,0xb429dddd
  41cc6b:	call   0xf9a8:0x4a372893
  41cc72:	jb     0x41ccb0
  41cc74:	jo     0x41cc4c
  41cc76:	cwde   
  41cc77:	out    dx,ax
  41cc79:	(bad)  
  41cc7a:	jp     0x41ccd9
  41cc7c:	call   0xf2bd:0x570b4733
  41cc83:	sti    
  41cc84:	scas   eax,DWORD PTR es:[edi]
  41cc85:	and    BYTE PTR ds:0x4ce17f78,ch
  41cc8b:	jle    0x41cc1a
  41cc8d:	sub    al,bl
  41cc8f:	cdq    
  41cc90:	inc    ecx
  41cc91:	lahf   
  41cc92:	sbb    BYTE PTR [eax],ah
  41cc94:	add    ecx,DWORD PTR [ebx+0x2e]
  41cc97:	(bad)  
  41cc98:	(bad)  
  41cc99:	xchg   WORD PTR [ebx+ebp*4],bx
  41cc9d:	repz push ss
  41cc9f:	stos   DWORD PTR es:[edi],eax
  41cca0:	(bad)  
  41cca2:	and    DWORD PTR fs:[edx],esp
  41cca5:	cdq    
  41cca6:	adc    eax,0x6ad992ca
  41ccab:	sbb    esi,DWORD PTR [ebx+0x79]
  41ccae:	jns    0x41cc3a
  41ccb0:	add    eax,DWORD PTR [esi]
  41ccb2:	les    eax,FWORD PTR [eax+eax*8-0x1ad75553]
  41ccb9:	fbld   TBYTE PTR [edx-0x765dcbf7]
  41ccbf:	shr    DWORD PTR [edx+0x5645e95f],1
  41ccc5:	xchg   edx,eax
  41ccc6:	mov    dl,0x2b
  41ccc8:	mov    ah,0x19
  41ccca:	call   0xc746:0x17b35662
  41ccd1:	clc    
  41ccd2:	rcr    BYTE PTR ds:0x9b2b70c7,0x68
  41ccd9:	loope  0x41cd3b
  41ccdb:	mov    ds:0xa3260320,eax
  41cce0:	pusha  
  41cce1:	cmp    ecx,esp
  41cce3:	mov    ebp,0x30b6edda
  41cce8:	gs inc ebp
  41ccea:	push   0x3607eb5e
  41ccef:	nop
  41ccf0:	(bad)  
  41ccf1:	jno    0x41cc84
  41ccf3:	push   0x9
  41ccf5:	pop    ss
  41ccf6:	addr16 into 
  41ccf8:	xchg   esp,eax
  41ccf9:	popa   
  41ccfa:	jmp    DWORD PTR [edi]
  41ccfc:	fdivr  QWORD PTR [edi+ebp*4-0x559f9469]
  41cd03:	push   es
  41cd04:	fcomi  st,st(0)
  41cd06:	shl    BYTE PTR [ebx+esi*8],cl
  41cd09:	daa    
  41cd0a:	xchg   ebp,eax
  41cd0b:	retf   0xd46f
  41cd0e:	or     al,0x7
  41cd10:	mov    al,ds:0x48bb6287
  41cd15:	pop    edx
  41cd16:	jle    0x41ccbe
  41cd18:	jecxz  0x41cccb
  41cd1a:	sahf   
  41cd1b:	mov    dl,0x27
  41cd1e:	icebp  
  41cd1f:	jne    0x41cd3f
  41cd21:	pop    ebp
  41cd22:	pop    ebx
  41cd23:	lds    edi,FWORD PTR [edx-0x6e78759c]
  41cd29:	dec    ebp
  41cd2a:	in     al,dx
  41cd2b:	cld    
  41cd2c:	and    bh,BYTE PTR [ecx]
  41cd2e:	cmp    DWORD PTR fs:[ecx-0x31],ecx
  41cd32:	ins    BYTE PTR es:[edi],dx
  41cd33:	call   0x52b1:0xd345bcaa
  41cd3a:	xchg   DWORD PTR [ecx+0x63],ebp
  41cd3d:	add    bh,BYTE PTR [ebp-0x5a]
  41cd40:	cmp    al,BYTE PTR [eax]
	...
  41cdb2:	add    BYTE PTR [eax],al
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0x7226:0xb856b1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    BYTE PTR [ecx+edx*4],ch
  41cdce:	push   cs
  41cdcf:	inc    ecx
  41cdd0:	jl     0x41ce0f
  41cdd2:	jecxz  0x41ce0d
  41cdd4:	lods   al,BYTE PTR ds:[esi]
  41cdd5:	lahf   
  41cdd6:	and    al,0xdd
  41cdd8:	in     eax,dx
  41cdd9:	jno    0x41cde1
  41cddb:	icebp  
  41cddc:	add    DWORD PTR [edx],edx
  41cdde:	jl     0x41ce4f
  41cde0:	dec    ecx
  41cde1:	push   ebp
  41cde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde3:	and    DWORD PTR [edx+esi*8+0x5d816bcd],esi
  41cdea:	mov    edi,0xd12e3ce5
  41cdef:	adc    dh,dl
  41cdf1:	mov    DWORD PTR [ebx],ebp
  41cdf3:	mov    ebx,0xcba959c4
  41cdf9:	xor    esi,DWORD PTR [eax+0x53b5d8cf]
  41cdff:	mov    esi,0x57bc976c
  41ce04:	fs retf 
  41ce06:	sti    
  41ce07:	test   eax,0x2c84a73d
  41ce0c:	or     DWORD PTR [edi],ecx
  41ce0e:	add    ebp,DWORD PTR [eax-0x13532b45]
  41ce14:	xchg   ebx,eax
  41ce15:	xlat   BYTE PTR ds:[ebx]
  41ce16:	pop    eax
  41ce18:	(bad)  
  41ce19:	mov    esp,0x796776d1
  41ce1e:	cmp    eax,0x4b95202a
  41ce23:	add    al,0xa6
  41ce25:	jns    0x41ce08
  41ce27:	lods   eax,DWORD PTR ds:[esi]
  41ce28:	xchg   ebp,eax
  41ce29:	lods   al,BYTE PTR ds:[esi]
  41ce2a:	push   eax
  41ce2b:	mov    esi,DWORD PTR [ebx+eax*8]
  41ce2e:	xor    dh,al
  41ce30:	mov    dl,BYTE PTR [esi-0x4c]
  41ce33:	dec    ebp
  41ce34:	js     0x41ce8e
  41ce36:	fwait
  41ce37:	sub    al,0x4d
  41ce39:	sbb    eax,0xbd2b315f
  41ce3e:	push   ds
  41ce3f:	les    esp,FWORD PTR [eax+0x61]
  41ce42:	int    0xd1
  41ce44:	ficomp DWORD PTR [edx+0x20966082]
  41ce4a:	mov    bh,0x36
  41ce4c:	sbb    ecx,edi
  41ce4e:	push   cs
  41ce4f:	aaa    
  41ce50:	mov    dh,0x58
  41ce52:	ins    DWORD PTR es:[edi],dx
  41ce53:	dec    edx
  41ce54:	push   cs
  41ce55:	int    0x79
  41ce57:	xchg   ebp,eax
  41ce58:	push   0x29c2dc46
  41ce5d:	inc    eax
  41ce5e:	or     ebp,edi
  41ce60:	addr16 inc ebx
  41ce62:	and    eax,0x601275e6
  41ce67:	pushf  
  41ce68:	stos   BYTE PTR es:[edi],al
  41ce69:	sub    BYTE PTR [edx+0x21],0x8a
  41ce6d:	cli    
  41ce6e:	and    BYTE PTR [ecx+esi*4],dh
  41ce71:	int    0x3b
  41ce73:	clc    
  41ce74:	ss dec edi
  41ce76:	daa    
  41ce77:	lods   al,BYTE PTR ds:[esi]
  41ce78:	or     DWORD PTR [esi+0x7d],eax
  41ce7b:	mov    al,ds:0x13834098
  41ce80:	test   eax,0xc4727200
  41ce85:	push   es
  41ce86:	sar    BYTE PTR [eax+0x48e557c3],0x8a
  41ce8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce8e:	mov    dh,0xb0
  41ce90:	std    
  41ce91:	mov    al,ds:0x34c69bbf
  41ce96:	add    DWORD PTR [edx+0x4d8bff9c],edx
  41ce9c:	cwde   
  41ce9d:	leave  
  41ce9e:	add    cl,bl
  41cea0:	aam    0x5b
  41cea2:	add    bl,BYTE PTR [ebx+0x6f31fe9]
  41cea8:	jbe    0x41cef7
  41ceaa:	mov    ch,0x40
  41ceac:	cmp    BYTE PTR [eax-0x7c63ca1f],al
  41ceb2:	xchg   esi,eax
  41ceb3:	mov    dh,0x36
  41ceb5:	dec    eax
  41ceb6:	fmul   DWORD PTR [ebx+0x5a]
  41ceb9:	pop    ebx
  41ceba:	fld    QWORD PTR [eax+0x5b8b8a3b]
  41cec0:	fiadd  WORD PTR [eax]
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	es sahf 
  41cf42:	xor    al,0x39
  41cf44:	fidiv  DWORD PTR [edi]
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	cmc    
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [esi-0x7a],ah
  41cf4e:	wrmsr  
  41cf50:	mov    dh,0x54
  41cf52:	add    eax,0x6e07a567
  41cf57:	loope  0x41cfd2
  41cf59:	xchg   BYTE PTR [ebx-0x4dea807c],bh
  41cf5f:	sub    al,0xb2
  41cf61:	outs   dx,BYTE PTR ds:[esi]
  41cf62:	aaa    
  41cf63:	sar    BYTE PTR [edi+0x7],0x3c
  41cf67:	mov    ebp,0x2cd52b37
  41cf6c:	repnz dec ecx
  41cf6e:	imul   ecx,DWORD PTR [ebx+edx*8],0xdee4657f
  41cf75:	push   ebx
  41cf76:	rcr    DWORD PTR [ebx],0x1
  41cf79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf7a:	mov    ecx,0xb5b374e8
  41cf7f:	fbld   TBYTE PTR [edi+0x31]
  41cf82:	cs jmp 0x41cf23
  41cf85:	call   0x3a33:0xb09676d3
  41cf8c:	jbe    0x41cf83
  41cf8e:	lods   al,BYTE PTR ds:[esi]
  41cf8f:	shl    DWORD PTR [edi+ecx*2+0x71dcee12],0x37
  41cf97:	(bad)  
  41cf98:	cli    
  41cf99:	jp     0x41cfcd
  41cf9b:	fisubr WORD PTR ds:0x619b1b2
  41cfa1:	cmc    
  41cfa2:	jnp    0x41cf51
  41cfa4:	push   cs
  41cfa5:	xchg   BYTE PTR [eax+esi*1-0x35],bh
  41cfa9:	mov    WORD PTR [eax+0x1b],?
  41cfac:	push   ss
  41cfad:	mov    ebp,DWORD PTR [di-0x7f]
  41cfb1:	pop    ebp
  41cfb2:	jnp    0x41d025
  41cfb4:	mov    ecx,0xdb2c99d4
  41cfb9:	push   ecx
  41cfba:	add    cl,0x3
  41cfbd:	push   ds
  41cfbe:	rcl    BYTE PTR [ebp+0x11733bff],1
  41cfc4:	lock push 0x49
  41cfc7:	push   edi
  41cfc8:	call   0xd214:0x9328124e
  41cfcf:	adc    eax,0xfd5c3cd4
  41cfd4:	jae    0x41d049
  41cfd6:	enter  0x8306,0x72
  41cfda:	jne    0x41cf5f
  41cfdc:	test   al,0x20
  41cfde:	data16 out 0xdb,al
  41cfe1:	inc    edx
  41cfe2:	jg     0x41cfe2
  41cfe4:	push   ss
  41cfe5:	in     al,0xb6
  41cfe7:	push   eax
  41cfe8:	iret   
  41cfe9:	xchg   bl,bl
  41cfeb:	pop    esi
  41cfec:	adc    edi,DWORD PTR [ecx-0x554319a8]
  41cff2:	jae    0x41cff9
  41cff4:	test   DWORD PTR [edx-0x7e],0x619f6916
  41cffb:	out    dx,eax
  41cffc:	cwde   
  41cffd:	call   0xfeed232d
  41d002:	and    eax,0xdb5989c1
  41d007:	aas    
  41d008:	add    BYTE PTR [ecx],bl
  41d00a:	stos   DWORD PTR es:[edi],eax
  41d00b:	outs   dx,BYTE PTR ds:[esi]
  41d00c:	adc    eax,0xaff791c7
  41d011:	push   ss
  41d012:	jecxz  0x41d048
  41d014:	out    0x18,eax
  41d016:	push   0x9640e71b
  41d01b:	jmp    0x77a5293b
  41d020:	(bad)  
  41d021:	fwait
  41d022:	(bad)  
  41d023:	retf   0xc785
  41d026:	packssdw mm5,QWORD PTR [ebp+0x723de774]
  41d02d:	dec    ecx
  41d02e:	xor    eax,0x3ac09d44
  41d033:	mov    ecx,0x5acb64aa
  41d038:	pop    ebx
  41d039:	sbb    eax,0x228f8bc4
  41d03e:	fsub   QWORD PTR [edi+edx*1+0x0]
	...
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx-0x1a7f5868],0xffffffa2
  41d0c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c3:	mov    ch,0xcf
  41d0c5:	cmp    BYTE PTR [ecx],al
  41d0c7:	add    ch,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [esi],bl
  41d0cd:	(bad)  
  41d0cf:	jle    0x41d12c
  41d0d1:	fimul  DWORD PTR ds:0xd40ed4ab
  41d0d7:	fsub   st(4),st
  41d0d9:	push   esi
  41d0da:	enter  0xfd1a,0xfc
  41d0de:	imul   DWORD PTR [edx+0x74]
  41d0e1:	push   0xffffffcf
  41d0e3:	retf   0x6654
  41d0e6:	loop   0x41d07a
  41d0e8:	inc    esp
  41d0e9:	add    DWORD PTR [edx],0x2dc8a99b
  41d0ef:	cld    
  41d0f0:	add    al,0x5c
  41d0f2:	sbb    eax,DWORD PTR [eax+0x38891a92]
  41d0f8:	xor    DWORD PTR [esp+ebx*1+0x1117b6e7],ecx
  41d0ff:	daa    
  41d100:	into   
  41d101:	xchg   esp,eax
  41d102:	les    eax,FWORD PTR [ebx]
  41d104:	into   
  41d105:	in     al,dx
  41d106:	xor    edi,ebx
  41d108:	int3   
  41d109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10a:	mov    bh,0xfc
  41d10c:	mov    eax,es:0xd801159e
  41d112:	xor    BYTE PTR [ebx+0x42],cl
  41d115:	inc    eax
  41d116:	sbb    al,0xef
  41d118:	dec    ebp
  41d119:	sub    ah,BYTE PTR [eax+0x55]
  41d11c:	mov    eax,ds:0x49778e18
  41d121:	in     eax,dx
  41d122:	aad    0xf6
  41d124:	xchg   BYTE PTR [esi+ebp*2+0x77fef7c6],bl
  41d12b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d12e:	inc    esp
  41d12f:	ret    
  41d130:	sbb    eax,0xedbfbb21
  41d135:	push   edx
  41d136:	xchg   ebp,eax
  41d137:	push   ebp
  41d138:	scas   eax,DWORD PTR es:[edi]
  41d139:	sbb    al,ch
  41d13b:	int    0x6c
  41d13d:	sub    al,0x2d
  41d13f:	dec    ecx
  41d140:	inc    ebx
  41d141:	pop    ecx
  41d142:	adc    eax,0xa35f0f40
  41d147:	sbb    al,BYTE PTR [eax]
  41d149:	jae    0x41d12c
  41d14b:	mov    esi,edi
  41d14d:	push   esi
  41d14e:	mov    cl,0xd0
  41d150:	test   eax,0x29b4f9c5
  41d156:	lds    esp,FWORD PTR [esi]
  41d158:	jae    0x41d1c3
  41d15a:	fdivr  QWORD PTR [edx+0x2fd5c2a3]
  41d160:	add    esi,ecx
  41d162:	pop    esp
  41d163:	fs pop esi
  41d165:	xchg   DWORD PTR [edi+0x7ceda481],edi
  41d16b:	pop    edx
  41d16c:	(bad)  
  41d16d:	fistp  DWORD PTR ds:0x1560907
  41d173:	adc    BYTE PTR [ebx-0x91f4e70],0x37
  41d17a:	lods   eax,DWORD PTR ds:[esi]
  41d17b:	inc    esp
  41d17c:	enter  0x8499,0x1
  41d180:	jecxz  0x41d161
  41d182:	retf   
  41d183:	stc    
  41d184:	or     ebp,DWORD PTR [eax-0x31]
  41d187:	nop
  41d188:	xchg   BYTE PTR [ebp+0x11],al
  41d18b:	fcomp  QWORD PTR [esi-0x306d8b7a]
  41d191:	test   eax,esp
  41d193:	cmp    edi,edx
  41d195:	xchg   ecx,edx
  41d197:	gs pop ecx
  41d199:	xchg   ebx,eax
  41d19a:	sub    DWORD PTR [ebp-0x115ec167],edi
  41d1a0:	adc    BYTE PTR [edx],cl
  41d1a2:	sbb    cl,ch
  41d1a4:	dec    edi
  41d1a5:	nop
  41d1a6:	(bad)  
  41d1a7:	repz (bad) 
  41d1a9:	loope  0x41d1fa
  41d1ab:	cdq    
  41d1ac:	pop    ecx
  41d1ad:	cld    
  41d1ae:	xor    eax,0x15ed82d1
  41d1b3:	fst    QWORD PTR [ecx-0x2]
  41d1b6:	mov    dh,0x8c
  41d1b8:	sbb    al,BYTE PTR [ebx-0x6369e373]
  41d1be:	jb     0x41d1f0
  41d1c0:	cmc    
	...
  41d231:	add    BYTE PTR [eax],al
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	pop    es
  41d241:	iret   
  41d242:	jo     0x41d1e7
  41d244:	les    edi,FWORD PTR [ecx]
  41d246:	add    DWORD PTR [eax],eax
  41d248:	cmc    
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    bl,dh
  41d24d:	aad    0x16
  41d24f:	stos   BYTE PTR es:[edi],al
  41d250:	jae    0x41d1e5
  41d252:	inc    edi
  41d253:	ins    BYTE PTR es:[edi],dx
  41d254:	add    DWORD PTR [eax-0x1f],0x6
  41d258:	and    BYTE PTR [eax],0x95
  41d25b:	int    0xcc
  41d25d:	inc    esi
  41d25e:	push   DWORD PTR [ecx-0x4c]
  41d261:	stos   DWORD PTR es:[edi],eax
  41d262:	mov    bh,0x81
  41d264:	xchg   esp,eax
  41d265:	cmp    bl,BYTE PTR [ecx]
  41d267:	stos   DWORD PTR es:[edi],eax
  41d268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d269:	adc    dl,dh
  41d26b:	stc    
  41d26c:	inc    edi
  41d26d:	dec    esi
  41d26e:	jmp    0x91f4:0xe2630cb5
  41d275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d276:	add    eax,0x8d5e54e9
  41d27b:	jae    0x41d294
  41d27d:	stc    
  41d27e:	fwait
  41d27f:	test   eax,0xa759874d
  41d284:	(bad)  
  41d285:	retf   0xd282
  41d288:	scas   eax,DWORD PTR es:[edi]
  41d289:	push   ecx
  41d28a:	hlt    
  41d28b:	jge    0x41d2c5
  41d28d:	cli    
  41d28e:	fwait
  41d28f:	fs clc 
  41d291:	test   DWORD PTR [ebp-0x53d89351],eax
  41d297:	push   esp
  41d298:	fisttp WORD PTR [edi-0x4951e8d9]
  41d29e:	pop    edx
  41d29f:	stos   BYTE PTR es:[edi],al
  41d2a0:	lock sub cl,BYTE PTR [edx-0x407c12a6]
  41d2a7:	mov    edi,0x726b5e3d
  41d2ac:	out    0xf0,al
  41d2ae:	mov    edx,0xa441dbbf
  41d2b3:	xchg   ecx,eax
  41d2b4:	mov    ds:0x4fee8f0b,al
  41d2b9:	mov    al,ds:0x28fa3e18
  41d2be:	adc    bl,BYTE PTR [edx-0x120af98f]
  41d2c4:	sub    edi,DWORD PTR [eax-0x72]
  41d2c7:	imul   edx,DWORD PTR [ebp+0x530d0967],0x6cf687fd
  41d2d1:	jmp    0x7729:0xcea28c0a
  41d2d8:	scas   eax,DWORD PTR es:[edi]
  41d2d9:	cmp    BYTE PTR ds:0x2097a4d3,bh
  41d2df:	push   eax
  41d2e0:	inc    ebx
  41d2e1:	fist   WORD PTR [ebx+0x787194ae]
  41d2e7:	jae    0x41d2db
  41d2e9:	xchg   DWORD PTR [eax+0x3705b4d3],ebx
  41d2ef:	adc    esp,0x954c687a
  41d2f5:	(bad)  
  41d2f6:	and    dl,BYTE PTR [esi]
  41d2f8:	cmc    
  41d2f9:	jl     0x41d340
  41d2fb:	sub    DWORD PTR [esi+edi*8],ebp
  41d2fe:	add    eax,0x8c364f6d
  41d303:	add    DWORD PTR [ecx-0x72a0b8db],0xffffffe3
  41d30a:	scas   al,BYTE PTR es:[edi]
  41d30b:	pop    edx
  41d30c:	sbb    eax,DWORD PTR [esp+ebp*2]
  41d30f:	mov    al,0xfd
  41d311:	push   eax
  41d312:	jnp    0x41d2f7
  41d314:	pop    edi
  41d315:	imul   ecx,esp,0xabc06076
  41d31b:	daa    
  41d31c:	mov    DWORD PTR [edi],0x8303c1f1
  41d322:	dec    esi
  41d323:	mov    edx,0x707f47c5
  41d328:	stc    
  41d329:	dec    esi
  41d32a:	ins    DWORD PTR es:[edi],dx
  41d32b:	xor    eax,0x25783597
  41d330:	push   ds
  41d331:	stos   BYTE PTR es:[edi],al
  41d332:	int3   
  41d333:	out    0xfc,al
  41d335:	mov    dh,0x49
  41d337:	push   0x0
  41d339:	xor    BYTE PTR [eax-0x60],cl
  41d33c:	jne    0x41d3b3
  41d33e:	jne    0x41d2e0
  41d340:	nop
	...
  41d3b1:	add    BYTE PTR [eax],al
  41d3b3:	add    BYTE PTR [ebx+0x20],dl
  41d3b6:	mov    al,ds:0x5faef3ae
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	jecxz  0x41d367
  41d3c2:	mov    ds:0x13ab95d,eax
  41d3c7:	add    ch,dh
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [ebx],ah
  41d3cd:	jae    0x41d388
  41d3cf:	pushw  es
  41d3d1:	and    DWORD PTR [edx+0x36],eax
  41d3d4:	jo     0x41d37b
  41d3d6:	ja     0x41d35c
  41d3d8:	out    0xa9,eax
  41d3da:	push   ecx
  41d3db:	jge    0x41d436
  41d3dd:	call   0x8eb34e44
  41d3e2:	std    
  41d3e3:	faddp  st(1),st
  41d3e5:	add    DWORD PTR [esi],edi
  41d3e7:	test   al,0xb0
  41d3e9:	hlt    
  41d3ea:	push   esp
  41d3eb:	add    BYTE PTR [eax-0x103ecab8],dl
  41d3f1:	push   es
  41d3f2:	xchg   esi,eax
  41d3f3:	xor    ebx,DWORD PTR [esi+ebx*4+0x67f84333]
  41d3fa:	enter  0xda90,0x2e
  41d3fe:	ins    BYTE PTR es:[edi],dx
  41d3ff:	and    BYTE PTR [edi],al
  41d401:	jb     0x41d3a4
  41d403:	dec    esi
  41d404:	sahf   
  41d405:	add    DWORD PTR [edi],edi
  41d407:	sbb    eax,0x40ebf899
  41d40c:	pop    es
  41d40d:	cmp    dl,dl
  41d40f:	xchg   ebp,eax
  41d410:	(bad)  
  41d411:	push   ebp
  41d412:	fcomi  st,st(6)
  41d414:	aam    0xf0
  41d416:	in     eax,0xd
  41d418:	jecxz  0x41d3e5
  41d41a:	sahf   
  41d41b:	bound  edi,QWORD PTR [edx]
  41d41d:	jno    0x41d431
  41d41f:	aam    0xf7
  41d421:	out    0x37,al
  41d423:	pushf  
  41d424:	inc    edi
  41d425:	(bad)  
  41d426:	js     0x41d484
  41d428:	stos   BYTE PTR es:[edi],al
  41d429:	retf   0xa2f2
  41d42c:	dec    ebx
  41d42d:	lods   eax,DWORD PTR ds:[esi]
  41d42e:	les    ebp,FWORD PTR [ecx+0x23ce3ef7]
  41d434:	add    eax,0x5ee649e6
  41d439:	ficom  DWORD PTR [ebx]
  41d43b:	cmp    BYTE PTR [esi+0x3b],bh
  41d43e:	lea    esp,[edx+0x8]
  41d441:	shl    DWORD PTR ds:0xa8a2bb99,0x95
  41d448:	lahf   
  41d449:	xchg   esp,eax
  41d44a:	xchg   bh,cl
  41d44c:	ret    0x5f3b
  41d44f:	ins    DWORD PTR es:[edi],dx
  41d450:	aad    0x7f
  41d452:	adc    DWORD PTR [ebx],ecx
  41d454:	sysret 
  41d456:	mov    edx,0x3c2bc2c1
  41d45b:	fisub  WORD PTR [ecx]
  41d45d:	jo     0x41d3e3
  41d45f:	call   0xeb40d56d
  41d464:	lods   eax,DWORD PTR ds:[esi]
  41d465:	jae    0x41d435
  41d467:	ret    0x40ec
  41d46a:	inc    ebp
  41d46b:	sbb    al,BYTE PTR [edi]
  41d46d:	or     eax,0x51dee008
  41d472:	cmp    bh,BYTE PTR [edx]
  41d474:	pop    ebx
  41d475:	arpl   WORD PTR [edx],di
  41d477:	jmp    DWORD PTR [ebx]
  41d479:	scas   al,BYTE PTR es:[edi]
  41d47a:	jns    0x41d496
  41d47c:	icebp  
  41d47d:	add    cl,BYTE PTR [edi]
  41d47f:	retf   
  41d480:	sbb    BYTE PTR [eax+0x5717aaf1],al
  41d486:	enter  0x98e9,0x83
  41d48a:	(bad)  
  41d48b:	mov    ah,0x9d
  41d48d:	jecxz  0x41d46d
  41d48f:	mov    dh,0xd8
  41d491:	nop
  41d492:	jnp    0x41d481
  41d494:	(bad)  
  41d495:	clc    
  41d496:	cld    
  41d497:	dec    edx
  41d498:	ficom  DWORD PTR [edi+eiz*4+0x418724d3]
  41d49f:	mov    edx,0x559ec65c
  41d4a4:	out    dx,al
  41d4a5:	dec    edx
  41d4a6:	ja     0x41d457
  41d4a8:	clc    
  41d4a9:	loopne 0x41d4c5
  41d4ab:	pop    ebx
  41d4ac:	out    dx,eax
  41d4ad:	and    al,0xa9
  41d4af:	fmul   DWORD PTR [edi]
  41d4b1:	nop
  41d4b2:	jle    0x41d4b0
  41d4b4:	mov    ah,0xde
  41d4b6:	fdivrp st(7),st
  41d4b8:	mov    al,ds:0x84563fa8
  41d4bd:	sahf   
  41d4be:	adc    al,0x5d
  41d4c0:	push   ecx
	...
  41d531:	add    BYTE PTR [eax],al
  41d533:	add    ch,al
  41d535:	and    edx,DWORD PTR [ecx-0xa4808db]
  41d53b:	jecxz  0x41d58e
  41d53d:	or     edi,DWORD PTR [edx+ecx*8-0x6d151bdd]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [edi],dl
  41d54d:	in     al,dx
  41d54e:	clc    
  41d54f:	add    esp,DWORD PTR [ebp-0x56]
  41d552:	cmp    bl,al
  41d554:	std    
  41d555:	and    eax,0xb8f5a7b0
  41d55a:	dec    ebx
  41d55b:	mov    eax,0x6e894939
  41d560:	outs   dx,DWORD PTR ds:[esi]
  41d561:	loope  0x41d570
  41d563:	jbe    0x41d579
  41d565:	xchg   esp,eax
  41d566:	xchg   ecx,eax
  41d567:	(bad)  
  41d568:	cli    
  41d569:	rcr    DWORD PTR [edi-0x3a],0xb5
  41d56d:	scas   al,BYTE PTR es:[edi]
  41d56e:	pushf  
  41d56f:	jecxz  0x41d51d
  41d571:	popa   
  41d572:	cmp    eax,0x8f07f5a2
  41d577:	cli    
  41d578:	mov    al,ds:0x1e910769
  41d57d:	jbe    0x41d5f7
  41d57f:	fwait
  41d580:	dec    esi
  41d581:	xchg   ecx,eax
  41d582:	jmp    0x41d52b
  41d584:	aad    0xe7
  41d586:	jno    0x41d52e
  41d588:	ror    edx,cl
  41d58a:	frstor [esi-0x6]
  41d58d:	mov    DWORD PTR [edx+eax*8-0x63],ecx
  41d591:	dec    edx
  41d592:	adc    ah,dl
  41d594:	jmp    0x2db0:0xe321042d
  41d59b:	adc    ebp,DWORD PTR [edx+eax*1-0x6cbcab1d]
  41d5a2:	push   0x30
  41d5a4:	or     al,0xe5
  41d5a6:	mov    cs,WORD PTR [edx-0x4a]
  41d5a9:	adc    ebx,DWORD PTR [eax-0x29]
  41d5ac:	and    eax,0xf28f3039
  41d5b1:	xchg   edi,eax
  41d5b2:	leave  
  41d5b3:	leave  
  41d5b4:	sbb    BYTE PTR [edx-0x24fcf7aa],bh
  41d5ba:	jg     0x5d4b3c08
  41d5c0:	add    eax,0x421aa0b1
  41d5c5:	ins    DWORD PTR es:[edi],dx
  41d5c6:	mov    al,0x41
  41d5c8:	mov    WORD PTR [ecx+0x4b5903f],fs
  41d5ce:	push   ss
  41d5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d0:	cwde   
  41d5d1:	sbb    bh,BYTE PTR [ebx+0x9]
  41d5d4:	test   eax,0xa90b8860
  41d5d9:	pop    es
  41d5da:	add    al,0x4c
  41d5dc:	mov    gs,WORD PTR [ebx-0x21]
  41d5df:	jbe    0x41d5cb
  41d5e1:	ret    
  41d5e2:	jle    0x41d5b9
  41d5e4:	(bad)  
  41d5e6:	data16 icebp 
  41d5e8:	lods   eax,DWORD PTR ds:[esi]
  41d5e9:	add    cl,BYTE PTR [edx]
  41d5eb:	je     0x41d63c
  41d5ed:	cmp    BYTE PTR [edx+0x79],dl
  41d5f0:	addr16 retf 
  41d5f2:	repnz xor BYTE PTR [edx],dl
  41d5f5:	sahf   
  41d5f6:	jae    0x41d66c
  41d5f8:	test   bh,bh
  41d5fa:	daa    
  41d5fb:	dec    edi
  41d5fc:	xor    DWORD PTR [ecx],0x5b
  41d5ff:	ret    
  41d600:	ss jl  0x41d5d7
  41d603:	mov    ?,esp
  41d605:	mov    ebp,0x86433c1
  41d60a:	test   eax,0x99bfa24a
  41d60f:	dec    ebx
  41d610:	xchg   edi,eax
  41d611:	mov    dh,0xa3
  41d613:	imul   edi,DWORD PTR [ecx],0xd3bb0fd2
  41d619:	sub    al,0xc
  41d61b:	repz pop esi
  41d61d:	ret    0xb794
  41d620:	(bad)  
  41d621:	jnp    0x41d5bc
  41d623:	and    DWORD PTR [ebx+0x276b0138],0x85bb3ba6
  41d62d:	push   es
  41d62e:	pop    ss
  41d62f:	std    
  41d630:	adc    DWORD PTR [edx+eiz*4-0x114043ee],esi
  41d637:	(bad)  
  41d639:	push   ss
  41d63a:	(bad)  
  41d63b:	repnz adc eax,0x91783ef9
	...
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0xd1790a3b
  41d6c2:	mov    ebp,0x13ca320
  41d6c7:	add    ch,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [ecx-0x55],dh
  41d6ce:	xchg   esi,eax
  41d6cf:	mov    eax,0xd06e2f24
  41d6d4:	pop    ecx
  41d6d5:	or     DWORD PTR [eax-0x61],0xffffffa1
  41d6d9:	xchg   ebp,eax
  41d6da:	pop    esp
  41d6db:	pop    ss
  41d6dc:	jmp    0xe9281c0b
  41d6e1:	aas    
  41d6e2:	cmp    esi,esp
  41d6e4:	shr    DWORD PTR [eax-0x38fbf5ec],0x73
  41d6eb:	scas   al,BYTE PTR es:[edi]
  41d6ec:	mov    esi,0x5355ce29
  41d6f1:	stos   BYTE PTR es:[di],al
  41d6f3:	adc    ebx,DWORD PTR [ecx-0x5292b382]
  41d6f9:	outs   dx,BYTE PTR ds:[esi]
  41d6fa:	adc    ebx,DWORD PTR [edi+ecx*1-0x1d]
  41d6fe:	out    dx,eax
  41d6ff:	jnp    0x41d6b6
  41d701:	or     eax,0x9ed63fe1
  41d706:	arpl   WORD PTR [ecx+0x45],ax
  41d709:	dec    edi
  41d70a:	pop    es
  41d70b:	in     al,dx
  41d70c:	add    ah,BYTE PTR [esi+eax*1+0x47]
  41d710:	lock dec ebp
  41d712:	jle    0xcb746a6e
  41d718:	hlt    
  41d719:	jae    0x41d759
  41d71b:	pusha  
  41d71c:	cmc    
  41d71d:	outs   dx,BYTE PTR ds:[esi]
  41d71e:	das    
  41d71f:	pop    es
  41d720:	mov    esp,0x4372d549
  41d725:	inc    eax
  41d726:	data16 addr16 int3 
  41d729:	ror    BYTE PTR [edi-0x4cde63e],cl
  41d72f:	(bad)
  41d734:	cmp    DWORD PTR ss:[edx+0x6f],edx
  41d738:	pop    esi
  41d739:	lods   al,BYTE PTR ds:[esi]
  41d73a:	repz adc BYTE PTR [ebp+0x2fc5ffa1],bh
  41d741:	(bad)  
  41d742:	idiv   BYTE PTR [esi]
  41d744:	xchg   ah,bl
  41d746:	pop    ds
  41d747:	xor    bl,BYTE PTR [ebx+0x7af77261]
  41d74d:	inc    BYTE PTR [edi]
  41d74f:	xor    ebx,DWORD PTR [ebp+0x55]
  41d752:	sar    BYTE PTR [eax],1
  41d754:	fwait
  41d755:	cld    
  41d756:	mov    al,ds:0x4e67fb93
  41d75b:	mov    al,0x84
  41d75d:	inc    ecx
  41d75f:	add    esi,DWORD PTR [eax]
  41d761:	xchg   bp,ax
  41d763:	or     DWORD PTR ds:0x41df6fea,eax
  41d769:	iret   
  41d76a:	(bad)  [edi-0x4]
  41d76d:	mov    edi,0x7abbf267
  41d772:	sbb    cl,BYTE PTR [edx]
  41d774:	add    eax,0x3c22d5a7
  41d779:	call   0x551e7122
  41d77e:	mov    al,ds:0x139e8248
  41d783:	inc    ebp
  41d784:	arpl   ax,ax
  41d786:	in     eax,0x33
  41d788:	pop    ebx
  41d789:	test   eax,0x8c516a2
  41d78e:	sahf   
  41d78f:	mov    WORD PTR [edi+0x4d6d1fe6],ss
  41d795:	or     eax,eax
  41d797:	mov    edx,0x686c0327
  41d79c:	xchg   BYTE PTR [eax],bl
  41d79e:	xchg   al,dl
  41d7a0:	inc    edi
  41d7a1:	and    dl,dh
  41d7a3:	arpl   WORD PTR [ecx+0x64c4908b],bp
  41d7a9:	mov    cs:0x2afaab72,al
  41d7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7b0:	mov    edx,0xde1a87e4
  41d7b5:	loop   0x41d7f2
  41d7b7:	jg     0x41d82a
  41d7b9:	add    BYTE PTR [ecx-0x15],0xe9
  41d7bd:	ror    DWORD PTR fs:[edi+0x68],1
	...
  41d831:	add    BYTE PTR [eax],al
  41d833:	add    BYTE PTR [ebx+0x34],ah
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	xor    al,0xff
  41d839:	mov    ebp,0xf28777fb
  41d83e:	pop    es
  41d83f:	add    esp,DWORD PTR [ebx-0x67e2cedc]
  41d845:	cmp    eax,0xf50001
  41d84a:	add    BYTE PTR [eax],al
  41d84c:	mov    dl,0x83
  41d84e:	dec    eax
  41d84f:	jp     0x41d844
  41d851:	in     eax,dx
  41d852:	repz fnsave [eax]
  41d855:	test   al,0xfe
  41d857:	aaa    
  41d858:	ret    0x959e
  41d85b:	std    
  41d85c:	xchg   BYTE PTR [ecx+0x25c305e9],bl
  41d862:	dec    ebx
  41d863:	sub    cl,al
  41d865:	pop    ss
  41d866:	or     dh,BYTE PTR [ebx-0x25]
  41d869:	xchg   esp,eax
  41d86a:	dec    edi
  41d86b:	sub    BYTE PTR [esp],bl
  41d86e:	cmp    edi,esi
  41d870:	sti    
  41d871:	int    0xae
  41d873:	ret    0xc3c1
  41d876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d877:	fdiv   st,st(3)
  41d879:	mov    bl,0x40
  41d87b:	shl    BYTE PTR [ecx+0x44a378e1],1
  41d881:	test   DWORD PTR [eax],edi
  41d883:	sbb    bh,0xf9
  41d886:	push   ebp
  41d887:	popf   
  41d888:	jp     0x17b5fbf4
  41d88e:	cld    
  41d88f:	test   esi,esp
  41d891:	jne    0x41d902
  41d893:	scas   al,BYTE PTR es:[edi]
  41d894:	adc    ecx,eax
  41d896:	shl    BYTE PTR [edi+0x637c39ec],cl
  41d89c:	ficomp WORD PTR [edx+0x475c5900]
  41d8a2:	adc    al,0x1
  41d8a4:	and    ecx,esi
  41d8a6:	mov    ds:0xd652c365,al
  41d8ab:	jle    0x41d8cc
  41d8ad:	jno    0x41d83e
  41d8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b0:	repz loopne 0x41d84b
  41d8b3:	jmp    0x40b50935
  41d8b8:	outs   dx,DWORD PTR ds:[esi]
  41d8b9:	xor    BYTE PTR [edx+edx*2-0x3f],0xef
  41d8be:	jge    0x41d883
  41d8c0:	loope  0x41d932
  41d8c2:	push   esp
  41d8c3:	mov    ah,0x8e
  41d8c5:	ja     0x41d84e
  41d8c7:	cmp    DWORD PTR [ebx-0x39],0x116a8f47
  41d8ce:	out    dx,al
  41d8cf:	dec    edi
  41d8d0:	fnstenv [ebx]
  41d8d2:	outs   dx,BYTE PTR es:[esi]
  41d8d4:	sar    edx,cl
  41d8d6:	lock xor eax,0xf2159948
  41d8dc:	xor    ch,dh
  41d8de:	dec    ebx
  41d8df:	adc    BYTE PTR [eax-0x22],cl
  41d8e2:	aas    
  41d8e3:	jae    0x41d8f9
  41d8e5:	cmp    BYTE PTR [eax-0x67],cl
  41d8e8:	jg     0x41d872
  41d8ea:	jo     0x41d93f
  41d8ec:	xchg   edx,eax
  41d8ed:	je     0x41d8fe
  41d8ef:	ficom  WORD PTR [esi+0x6d]
  41d8f2:	jge    0x41d973
  41d8f4:	jg     0x41d94c
  41d8f6:	es lock mov eax,0x99bbd9fe
  41d8fd:	cmp    ah,BYTE PTR [ebp-0x54a303e8]
  41d903:	or     ecx,eax
  41d905:	inc    ecx
  41d906:	jns    0x41d904
  41d908:	sub    eax,0x6e692c61
  41d90d:	(bad)  
  41d90e:	cwde   
  41d90f:	mov    al,ds:0xc31d2ec1
  41d914:	ds adc ebp,ebx
  41d917:	mov    ds:0x4ce6e4f0,al
  41d91c:	add    eax,ecx
  41d91e:	add    dh,ah
  41d920:	fwait
  41d921:	add    esi,eax
  41d923:	aas    
  41d924:	and    ah,ch
  41d926:	lea    ecx,[ebx]
  41d928:	cld    
  41d929:	fs retf 0x14b2
  41d92d:	das    
  41d92e:	and    eax,0x1273e47e
  41d933:	(bad)  
  41d934:	iret   
  41d935:	div    esp
  41d937:	jne    0x41d90f
  41d939:	ret    0x74a0
  41d93c:	jb     0x41d984
  41d93e:	stc    
  41d93f:	test   DWORD PTR [edx],0x0
	...
  41d9b1:	add    BYTE PTR [eax],al
  41d9b3:	add    al,dh
  41d9b5:	retf   0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x3db9121c
  41d9c3:	push   ss
  41d9c4:	lea    edi,[esi]
  41d9c6:	add    DWORD PTR [eax],eax
  41d9c8:	cmc    
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    BYTE PTR [eax+ebx*8-0x5456b7ab],bh
  41d9d2:	push   esi
  41d9d3:	add    ch,ah
  41d9d5:	imul   eax,DWORD PTR [edx-0x66],0x8dd7f773
  41d9dc:	xor    ah,0xc
  41d9df:	ret    0xed26
  41d9e2:	fcmovnu st,st(6)
  41d9e4:	push   esp
  41d9e5:	xor    edi,esi
  41d9e7:	jmp    0x293f:0xa069d561
  41d9ee:	cwde   
  41d9ef:	sub    BYTE PTR [ebx+0x5b38a49],ah
  41d9f5:	sub    eax,0xf6e4100
  41d9fa:	mov    al,0xce
  41d9fc:	lds    esi,FWORD PTR [esi+0x170195da]
  41da02:	clc    
  41da03:	mov    edi,0x4dd118f7
  41da08:	fmul   st(5),st
  41da0a:	dec    eax
  41da0b:	cmp    esi,DWORD PTR [ebp-0x18e079df]
  41da11:	imul   esi,ebp,0x4de14a75
  41da17:	xchg   edi,ebx
  41da19:	out    0x7,al
  41da1b:	mov    esp,0xc95d499c
  41da20:	fnstsw WORD PTR [esi+0x3b]
  41da23:	fdivr  DWORD PTR [eax+eiz*2+0x47]
  41da27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da28:	adc    dh,dl
  41da2a:	push   0x13
  41da2c:	lods   eax,DWORD PTR ds:[esi]
  41da2d:	sbb    BYTE PTR [eax-0x63313130],bl
  41da33:	jl     0x41da2c
  41da35:	loop   0x41da69
  41da37:	mov    WORD PTR [eax],?
  41da39:	xchg   ebx,eax
  41da3a:	rcl    DWORD PTR [ebx],cl
  41da3c:	xchg   BYTE PTR [eax-0x6a77eac6],cl
  41da42:	out    0x83,al
  41da44:	push   ecx
  41da45:	aam    0xa6
  41da47:	push   es
  41da48:	int3   
  41da49:	mov    ah,0xff
  41da4b:	call   0x5d9:0x889f4965
  41da52:	push   ecx
  41da53:	xor    al,0xfa
  41da55:	int    0xb5
  41da57:	aad    0x78
  41da59:	loope  0x41dab2
  41da5b:	pop    ecx
  41da5d:	fcom   DWORD PTR [edi]
  41da5f:	test   ebx,esp
  41da61:	mov    al,0xd1
  41da63:	mov    ds:0xa7b8a9dd,al
  41da68:	and    al,0x67
  41da6a:	cmp    BYTE PTR [ecx+0x3229aeaf],0x29
  41da71:	outs   dx,DWORD PTR ss:[si]
  41da74:	mov    esi,0xc70fb1cf
  41da79:	xchg   ecx,eax
  41da7a:	push   ecx
  41da7b:	pop    esi
  41da7c:	aas    
  41da7d:	xchg   edi,eax
  41da7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da7f:	push   0x35283bf2
  41da84:	icebp  
  41da85:	imul   edi,DWORD PTR [eax+0x46],0x40
  41da89:	dec    ecx
  41da8a:	(bad)  
  41da8b:	sub    edx,eax
  41da8d:	(bad)  
  41da8e:	add    eax,edi
  41da90:	daa    
  41da91:	push   ss
  41da92:	inc    ebp
  41da93:	sub    al,0x20
  41da95:	dec    ebp
  41da96:	dec    ebp
  41da97:	aaa    
  41da98:	pop    ss
  41da99:	dec    ecx
  41da9a:	in     al,0x26
  41da9c:	cmp    BYTE PTR [edi-0x1d97e192],ah
  41daa2:	(bad)  
  41daa3:	aam    0xb7
  41daa5:	fdiv   DWORD PTR [edi-0xb]
  41daa8:	loopne 0x41da4b
  41daaa:	cmc    
  41daab:	sti    
  41daac:	xchg   ebx,eax
  41daad:	mov    ebx,0x344417f
  41dab2:	mov    DWORD PTR [ebx],ebx
  41dab4:	jmp    DWORD PTR [esi+0x63bc109d]
  41daba:	addr16 mov edx,0x73929268
  41dac0:	in     eax,dx
	...
  41db31:	add    BYTE PTR [eax],al
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	pop    edx
  41db41:	popa   
  41db42:	adc    eax,esi
  41db44:	cmp    BYTE PTR [edi],0x1
  41db47:	add    ch,dh
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    ch,ch
  41db4d:	inc    ecx
  41db4e:	test   DWORD PTR [eax],esp
  41db50:	pop    eax
  41db51:	add    al,0x59
  41db53:	stos   DWORD PTR es:[edi],eax
  41db54:	mov    bl,0x29
  41db56:	xchg   BYTE PTR [edi+0x49],dl
  41db59:	jge    0x41db09
  41db5b:	push   ds
  41db5c:	shl    DWORD PTR [ebx+ebp*2],cl
  41db5f:	xor    cl,BYTE PTR [ebx]
  41db61:	dec    ebx
  41db62:	pop    esi
  41db63:	dec    esi
  41db64:	jmp    0x3710:0xee868f20
  41db6b:	or     ch,dl
  41db6d:	mov    ecx,0xe6fd20ff
  41db72:	das    
  41db73:	cmp    al,0xbc
  41db75:	das    
  41db76:	mov    al,dh
  41db78:	mov    cl,0x56
  41db7a:	shl    esp,0x69
  41db7d:	sub    ebp,DWORD PTR [edi+0x4f]
  41db80:	or     cl,BYTE PTR [edx]
  41db82:	loop   0x41dbe4
  41db84:	inc    BYTE PTR [esi-0x3bad8115]
  41db8a:	jne    0x41db61
  41db8c:	dec    edx
  41db8d:	enter  0x2e2c,0xec
  41db91:	sub    dh,BYTE PTR [ecx]
  41db93:	aad    0x1c
  41db95:	popf   
  41db96:	adc    bh,BYTE PTR [eax-0x24]
  41db99:	dec    ebx
  41db9a:	test   DWORD PTR [eax+0x4],ecx
  41db9d:	repnz push ds
  41db9f:	or     dl,0x84
  41dba2:	repz (bad) 
  41dba4:	jge    0x41db7b
  41dba6:	sbb    eax,0x3f39c02c
  41dbab:	sbb    al,0x90
  41dbad:	stos   BYTE PTR es:[edi],al
  41dbae:	cmp    BYTE PTR [esi-0x19],bh
  41dbb1:	int3   
  41dbb2:	jmp    0x41dbb4
  41dbb4:	ds cli 
  41dbb6:	dec    ebx
  41dbb7:	inc    esi
  41dbb8:	movd   DWORD PTR [ecx-0x517a36b8],mm6
  41dbbf:	mov    esi,0xf8bfbf9
  41dbc4:	(bad)  
  41dbc5:	les    esi,FWORD PTR [ebp+ecx*4-0x42]
  41dbc9:	std    
  41dbca:	loope  0x41dbda
  41dbcc:	mov    al,ds:0x2589fd64
  41dbd1:	repz mov edx,0xf2927aaf
  41dbd7:	lock pusha 
  41dbd9:	cwde   
  41dbda:	xchg   esp,eax
  41dbdb:	je     0x41db69
  41dbdd:	shr    DWORD PTR [esi+0x53],0xad
  41dbe1:	out    dx,eax
  41dbe2:	dec    ecx
  41dbe3:	xlat   BYTE PTR ds:[ebx]
  41dbe4:	push   ebp
  41dbe5:	dec    esi
  41dbe6:	ror    ebx,0x16
  41dbe9:	cdq    
  41dbea:	cld    
  41dbeb:	(bad)  
  41dbec:	xor    esp,DWORD PTR [eax]
  41dbee:	inc    ecx
  41dbef:	mov    ah,BYTE PTR [edi+0x3]
  41dbf2:	jae    0x41dc0e
  41dbf4:	jp     0x41dbf2
  41dbf6:	retf   0xb4ea
  41dbf9:	rep stos DWORD PTR es:[edi],eax
  41dbfb:	dec    DWORD PTR [ebx+0x6b557279]
  41dc01:	cmp    DWORD PTR [edx],edi
  41dc03:	pop    eax
  41dc04:	cwde   
  41dc05:	pop    ebx
  41dc06:	cmp    eax,0xdb2061a9
  41dc0b:	push   ds
  41dc0c:	(bad)  
  41dc0d:	leave  
  41dc0e:	(bad)  
  41dc0f:	sub    al,0x3d
  41dc11:	sbb    BYTE PTR [ebx+edx*2+0x7093eec7],dh
  41dc18:	out    0x36,al
  41dc1a:	mov    ds:0x16c20ae4,al
  41dc1f:	sub    cl,BYTE PTR [edx]
  41dc21:	jb     0x41dc5e
  41dc23:	mul    DWORD PTR ds:0x5f85cf24
  41dc29:	mov    al,ds:0x758cf2c4
  41dc2e:	adc    al,0xc
  41dc30:	or     ebx,DWORD PTR [ebp+0x34013769]
  41dc36:	push   0xfffffff7
  41dc38:	xchg   ebx,eax
  41dc39:	dec    ecx
  41dc3a:	push   0x47
  41dc3c:	imul   ebx,DWORD PTR [eax],0xffffffdc
  41dc3f:	or     edx,0x0
	...
  41dcb2:	add    BYTE PTR [eax],al
  41dcb4:	pusha  
  41dcb5:	cdq    
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x4b
  41dcc1:	shr    bl,cl
  41dcc3:	js     0x41dd3c
  41dcc5:	inc    eax
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	cmc    
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	add    bl,bh
  41dccd:	les    ebx,FWORD PTR [eax]
  41dccf:	xchg   esp,eax
  41dcd0:	retf   
  41dcd1:	mov    ds:0xe2c4b9ee,al
  41dcd6:	out    dx,eax
  41dcd7:	add    esi,DWORD PTR [edx+0x75]
  41dcda:	rcr    BYTE PTR ds:0x8a74aea9,1
  41dce0:	fucomip st,st(5)
  41dce2:	cdq    
  41dce3:	pop    ebp
  41dce4:	cmp    al,0x44
  41dce6:	sbb    dh,BYTE PTR [ecx]
  41dce8:	inc    eax
  41dce9:	cmp    ah,dh
  41dceb:	fs mov dl,0x43
  41dcee:	xchg   esp,eax
  41dcef:	sub    BYTE PTR [edi-0xf47d55b],dl
  41dcf5:	cmc    
  41dcf6:	mov    dh,0xfa
  41dcf8:	add    al,BYTE PTR [edx]
  41dcfa:	mov    dh,0x5
  41dcfc:	loope  0x41dd54
  41dcfe:	inc    eax
  41dcff:	jecxz  0x41dcca
  41dd01:	inc    eax
  41dd02:	mov    dl,0x7a
  41dd04:	nop
  41dd05:	adc    ecx,DWORD PTR [eax+0x3683f39e]
  41dd0b:	mov    esp,0x2ab7f90b
  41dd10:	cli    
  41dd11:	push   ebp
  41dd12:	imul   ebp,esi,0x6a24bc69
  41dd18:	xor    eax,0xf0a88981
  41dd1d:	mov    al,0x35
  41dd1f:	cmp    dl,BYTE PTR [esi-0x52]
  41dd22:	stos   BYTE PTR es:[edi],al
  41dd23:	sahf   
  41dd24:	mov    dl,0x30
  41dd26:	in     al,dx
  41dd27:	mov    ds:0xfa77feb9,eax
  41dd2c:	push   ebx
  41dd2d:	add    DWORD PTR [edi],edx
  41dd2f:	lahf   
  41dd30:	fldcw  WORD PTR [ebp+ecx*4+0x3f]
  41dd34:	repz pop ecx
  41dd36:	pop    ss
  41dd37:	scas   al,BYTE PTR es:[edi]
  41dd38:	jg     0x41dd0d
  41dd3a:	rcl    cl,0xa1
  41dd3d:	sub    eax,0xe3c9113a
  41dd42:	dec    esp
  41dd43:	lods   eax,DWORD PTR ds:[esi]
  41dd44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd45:	std    
  41dd46:	xchg   edi,eax
  41dd47:	pushf  
  41dd48:	jne    0x41dd9f
  41dd4a:	sub    ebp,DWORD PTR [esi]
  41dd4c:	adc    DWORD PTR [esi+ebx*8],esp
  41dd4f:	(bad)  
  41dd50:	(bad)  
  41dd52:	sti    
  41dd53:	sub    bh,BYTE PTR ds:0x82002ead
  41dd59:	push   ebp
  41dd5a:	xor    DWORD PTR [esi-0x75],edx
  41dd5d:	push   ecx
  41dd5e:	nop
  41dd5f:	stc    
  41dd60:	mov    eax,0xd903ca52
  41dd65:	add    al,0x99
  41dd67:	js     0x41dd64
  41dd69:	or     ebx,ecx
  41dd6b:	jecxz  0x41ddc7
  41dd6d:	cmp    eax,0x2688a8cf
  41dd72:	cmc    
  41dd73:	mov    edx,0x2b19eafb
  41dd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd79:	outs   dx,DWORD PTR ds:[esi]
  41dd7a:	push   ds
  41dd7b:	out    0xcb,al
  41dd7d:	sti    
  41dd7e:	xchg   ecx,eax
  41dd7f:	call   0x604cf950
  41dd84:	sti    
  41dd85:	lods   eax,DWORD PTR ds:[esi]
  41dd86:	xchg   ebp,eax
  41dd87:	mov    edx,0xd7e03796
  41dd8c:	clc    
  41dd8d:	mov    ah,0xf4
  41dd8f:	xchg   DWORD PTR [ecx+0x68],esp
  41dd92:	retf   0xd137
  41dd95:	dec    ebx
  41dd96:	xchg   edi,eax
  41dd97:	push   ebx
  41dd98:	xor    eax,DWORD PTR [edi+0x29]
  41dd9b:	ret    
  41dd9c:	mov    dl,0x80
  41dd9e:	(bad)  
  41dd9f:	loopne 0x41dd5e
  41dda1:	and    BYTE PTR ss:[esi],bl
  41dda4:	test   BYTE PTR fs:[esi+0x571c1c32],cl
  41ddab:	jge    0x41de1c
  41ddad:	inc    edi
  41ddae:	ror    DWORD PTR ds:0x20fb1176,1
  41ddb4:	mov    ecx,0x30a110bc
  41ddb9:	or     dh,ch
  41ddbb:	lds    eax,FWORD PTR [ecx-0x4b]
  41ddbe:	sbb    edx,DWORD PTR [ecx]
  41ddc0:	cwde   
	...
  41de31:	add    BYTE PTR [eax],al
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	adc    BYTE PTR [ebp+0x1e],dl
  41de43:	xor    ch,BYTE PTR [ecx+eax*2+0x1]
  41de47:	add    ch,dh
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    BYTE PTR [edi+0x6c],bl
  41de4e:	sub    ebp,DWORD PTR [ecx-0x61ff22b5]
  41de54:	leave  
  41de55:	test   ah,dh
  41de57:	sbb    ecx,edx
  41de59:	adc    ebx,esp
  41de5b:	lds    eax,FWORD PTR [esi+0x1a131454]
  41de61:	rcl    cl,0x2a
  41de64:	push   0xc462c644
  41de69:	arpl   WORD PTR [ebx],ax
  41de6b:	inc    eax
  41de6c:	adc    edx,eax
  41de6e:	inc    esp
  41de6f:	push   ebp
  41de70:	push   DWORD PTR ds:0x25426378
  41de76:	fcomp  DWORD PTR [eax+0x1]
  41de79:	lahf   
  41de7a:	rol    DWORD PTR [esi+0xb],1
  41de7d:	test   al,0x70
  41de7f:	aas    
  41de80:	test   al,dl
  41de82:	stc    
  41de83:	dec    edx
  41de84:	push   ecx
  41de85:	push   esp
  41de86:	inc    ebx
  41de87:	dec    ecx
  41de88:	push   cs
  41de89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de8a:	test   BYTE PTR [eax],dl
  41de8c:	repz mov ecx,0xb2a3aae0
  41de92:	mov    WORD PTR [ebp+eiz*1+0x5],ds
  41de96:	mov    es,WORD PTR [edi+0x62]
  41de99:	outs   dx,BYTE PTR ds:[esi]
  41de9a:	lds    ebx,FWORD PTR [eax-0x26ae3e4e]
  41dea0:	xchg   esi,eax
  41dea1:	sub    DWORD PTR [ebx-0x7b],eax
  41dea4:	xchg   ebp,eax
  41dea5:	jge    0x41de58
  41dea7:	mov    ch,0x75
  41dea9:	and    DWORD PTR [ecx+0x13630cbf],ebp
  41deaf:	sar    ecx,1
  41deb1:	pusha  
  41deb2:	(bad)  
  41deb3:	jno    0x41deab
  41deb5:	cli    
  41deb6:	pop    ecx
  41deb7:	pop    esi
  41deb8:	sub    eax,0xa73dfef3
  41debd:	iret   
  41debe:	aaa    
  41debf:	mov    eax,ds:0xc8deeb04
  41dec4:	inc    ecx
  41dec5:	jecxz  0x41decb
  41dec7:	mov    ecx,0xed096ff0
  41decc:	or     eax,ecx
  41dece:	pop    esp
  41decf:	fcomp  DWORD PTR [ebp-0x39a054fc]
  41ded5:	(bad)  
  41ded7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded8:	xlat   BYTE PTR ds:[ebx]
  41ded9:	pop    ss
  41deda:	mov    edx,0xe32bf603
  41dedf:	cmp    DWORD PTR [edx+0x58],edi
  41dee2:	mov    esi,0x3c9c35c1
  41dee7:	push   eax
  41dee8:	dec    edx
  41dee9:	lock mov DWORD PTR [ebp+0x1b],ecx
  41deed:	fcomp  QWORD PTR [eax]
  41deef:	inc    ebp
  41def0:	mov    edx,0x29d8925a
  41def5:	sbb    BYTE PTR [eax+0xe],ah
  41def8:	jo     0x41df13
  41defa:	and    ebx,esi
  41defc:	(bad)  
  41defd:	stos   DWORD PTR es:[edi],eax
  41defe:	dec    edx
  41deff:	add    ch,BYTE PTR [edx+0x26]
  41df02:	test   DWORD PTR [esi+0x2e7a75c3],ecx
  41df08:	inc    edx
  41df09:	out    dx,eax
  41df0a:	sub    bl,BYTE PTR [edx-0x73f49198]
  41df10:	jl     0x41df3b
  41df12:	fimul  DWORD PTR [ebx-0x17]
  41df15:	adc    eax,0xf5616633
  41df1a:	ins    DWORD PTR es:[edi],dx
  41df1b:	fcomp  QWORD PTR [eax-0x108aa2e3]
  41df21:	dec    ebp
  41df22:	pop    ecx
  41df23:	dec    edx
  41df24:	ins    BYTE PTR es:[edi],dx
  41df25:	data16 mov bl,0x95
  41df28:	fcmove st,st(0)
  41df2a:	mov    ebp,0xdd945259
  41df2f:	xchg   ecx,eax
  41df30:	ss fadd st(6),st
  41df33:	lahf   
  41df34:	int3   
  41df35:	(bad)  
  41df36:	adc    DWORD PTR [ebx+0x0],edx
  41df39:	scas   eax,DWORD PTR es:[edi]
  41df3a:	inc    ecx
  41df3b:	fbstp  TBYTE PTR [eax]
  41df3d:	jmp    0xdaa9ea
	...
  41dfb2:	add    BYTE PTR [eax],al
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	sbb    bh,dl
  41dfc2:	push   ecx
  41dfc3:	mov    ah,BYTE PTR [ecx+0x42]
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    bl,ah
  41dfcd:	pop    esp
  41dfce:	pusha  
  41dfcf:	push   esp
  41dfd0:	pushf  
  41dfd1:	push   ss
  41dfd2:	add    bh,BYTE PTR es:[eax]
  41dfd5:	stos   BYTE PTR es:[edi],al
  41dfd6:	(bad)  
  41dfd7:	mov    dh,0x2b
  41dfd9:	and    DWORD PTR [edx],esi
  41dfdb:	and    edi,DWORD PTR [ebx]
  41dfdd:	sub    ah,BYTE PTR [edi]
  41dfdf:	out    0xf3,eax
  41dfe1:	and    eax,DWORD PTR [edx-0x39]
  41dfe4:	imul   esp,ebx,0x2cd81ab3
  41dfea:	jg     0x41df9f
  41dfec:	gs ret 
  41dfee:	dec    esi
  41dfef:	cwde   
  41dff0:	test   BYTE PTR [edx+0x54e0dd30],bl
  41dff6:	inc    ecx
  41dff7:	in     eax,0x1d
  41dff9:	mov    eax,ds:0x56ddad2b
  41dffe:	sbb    DWORD PTR [esi+0x4a9fb7ea],edi
  41e004:	imul   ebp,DWORD PTR [ebx-0x48a1dd61],0x5f
  41e00b:	in     al,0xce
  41e00d:	repnz cmp ebp,edi
  41e010:	dec    esp
  41e011:	xchg   esp,esp
  41e013:	mov    bl,BYTE PTR [eax-0x16]
  41e016:	mov    edx,DWORD PTR [edi]
  41e018:	addr16 retf 0xc545
  41e01c:	(bad)
  41e01f:	push   edi
  41e020:	xchg   ebx,eax
  41e021:	dec    ebp
  41e022:	ret    0xd29d
  41e025:	call   0xc0b79eb4
  41e02a:	out    dx,al
  41e02b:	xchg   esi,eax
  41e02c:	pop    ebx
  41e02d:	js     0x41e08a
  41e02f:	push   0x5a
  41e031:	mov    ah,0xf9
  41e033:	or     edi,edx
  41e035:	gs xchg ebx,eax
  41e037:	repz cwde 
  41e039:	aad    0xea
  41e03b:	xor    eax,0xd665e47f
  41e040:	push   esp
  41e041:	and    dl,BYTE PTR [ebx]
  41e043:	inc    esp
  41e044:	pop    ds
  41e045:	test   BYTE PTR [ebp+ebx*4+0x2600a609],bl
  41e04c:	inc    DWORD PTR [eax]
  41e04e:	popa   
  41e04f:	std    
  41e050:	in     eax,0xd4
  41e052:	loopne 0x41e075
  41e054:	stc    
  41e055:	test   eax,0x273350a1
  41e05a:	ins    BYTE PTR es:[edi],dx
  41e05b:	or     BYTE PTR [ecx],bh
  41e05d:	sbb    dl,BYTE PTR [edi]
  41e05f:	dec    ebp
  41e060:	push   ds
  41e061:	pop    eax
  41e062:	mov    ax,sp
  41e065:	aad    0xf5
  41e067:	popf   
  41e068:	pop    es
  41e069:	sub    bh,bh
  41e06b:	xor    bl,BYTE PTR [esp+eax*2]
  41e06e:	cmc    
  41e06f:	push   0x4d
  41e071:	mov    edi,0xae8fb8bf
  41e076:	sbb    BYTE PTR [ecx],0x57
  41e079:	jns    0x41e095
  41e07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07c:	jg     0x41e033
  41e07e:	mov    ds:0x672351be,al
  41e083:	(bad)  
  41e084:	retf   
  41e085:	ficomp DWORD PTR [ecx]
  41e087:	cwde   
  41e088:	pushf  
  41e089:	imul   edx,DWORD PTR [ebx],0x98100c35
  41e08f:	add    al,BYTE PTR [edx+0x58e874da]
  41e095:	jno    0x41e0da
  41e097:	jbe    0x41e0e0
  41e099:	dec    eax
  41e09a:	call   0x5845:0xe9e3cac7
  41e0a1:	sbb    DWORD PTR [edx+0x23],ebx
  41e0a4:	or     BYTE PTR [esi+0x7],cl
  41e0a7:	in     al,0x3a
  41e0a9:	adc    DWORD PTR [bx+di+0x7f],edi
  41e0ad:	clc    
  41e0ae:	mov    eax,ds:0x109ca705
  41e0b3:	push   ebp
  41e0b4:	mov    esp,0xf6edf6b2
  41e0b9:	cdq    
  41e0ba:	imul   ebx,DWORD PTR [ecx+0x5c],0x62
  41e0be:	xor    bl,BYTE PTR [edi]
  41e0c0:	adc    eax,0x0
	...
  41e131:	add    BYTE PTR [eax],al
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	loop   0x41e0ee
  41e142:	mov    edx,DWORD PTR [ecx+0x56]
  41e145:	inc    ebx
  41e146:	add    DWORD PTR [eax],eax
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [eax],bl
  41e14d:	lods   al,BYTE PTR ds:[esi]
  41e14e:	cdq    
  41e14f:	test   al,0xde
  41e151:	or     BYTE PTR [eax+0x37cb2cdd],ch
  41e157:	jg     0x41e157
  41e159:	int3   
  41e15a:	jb     0x41e19c
  41e15c:	not    eax
  41e15e:	daa    
  41e15f:	fsub   DWORD PTR [ebx+0x77]
  41e162:	cli    
  41e163:	shr    dh,0x8e
  41e166:	push   ebx
  41e167:	call   0xefa9:0x8b4ba45e
  41e16e:	pop    eax
  41e16f:	pop    ds
  41e170:	sub    al,0xd9
  41e172:	test   ebx,ecx
  41e174:	add    esp,DWORD PTR [ebx-0x49]
  41e177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e178:	ss adc eax,0xfdad2971
  41e17e:	pop    ecx
  41e17f:	aaa    
  41e180:	mov    eax,ds:0x30008842
  41e185:	mov    al,0x4
  41e187:	mov    ds:0x9d76e2e1,al
  41e18c:	addr16 push eax
  41e18e:	fcmovne st,st(2)
  41e190:	jbe    0x41e19e
  41e192:	ret    0xe03e
  41e195:	out    dx,eax
  41e196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e197:	jne    0x41e1d6
  41e199:	sbb    eax,0x41c37863
  41e19e:	sbb    DWORD PTR [edi-0x7d844f59],0xffffff89
  41e1a5:	call   0x70bd657e
  41e1aa:	pushf  
  41e1ab:	or     DWORD PTR [edx+0x5761f171],eax
  41e1b1:	jno    0x41e1ae
  41e1b3:	stos   BYTE PTR es:[edi],al
  41e1b4:	or     eax,0xbd114347
  41e1b9:	jne    0x41e1b9
  41e1bb:	cmovno eax,DWORD PTR [esi]
  41e1be:	jp     0x41e175
  41e1c0:	adc    al,0xef
  41e1c2:	cmp    BYTE PTR [esi+ebp*1],dh
  41e1c5:	aaa    
  41e1c6:	sub    eax,DWORD PTR [ebx+0x36]
  41e1c9:	les    edi,FWORD PTR [ecx+0x544ea48b]
  41e1cf:	cmp    eax,0x88502c59
  41e1d4:	imul   ebx,DWORD PTR [ebx],0xffffff86
  41e1d7:	xchg   edi,eax
  41e1d8:	jb     0x41e194
  41e1da:	push   ds
  41e1db:	pop    edi
  41e1dc:	(bad)  [edx]
  41e1de:	addr16 or eax,0xa32000ce
  41e1e4:	pop    ds
  41e1e5:	xor    ah,bh
  41e1e7:	and    ebx,DWORD PTR [ebx-0x27]
  41e1ea:	pushf  
  41e1eb:	popf   
  41e1ec:	int3   
  41e1ed:	mov    esp,0xe5d9fd3f
  41e1f2:	push   esi
  41e1f3:	inc    esi
  41e1f4:	jmp    0xb954:0x85f3cc2a
  41e1fb:	je     0x41e200
  41e1fd:	icebp  
  41e1fe:	mov    al,0x73
  41e200:	xchg   edi,eax
  41e201:	test   DWORD PTR [ebx],ecx
  41e203:	rol    eax,0x4
  41e206:	in     eax,dx
  41e207:	cld    
  41e208:	sub    eax,0xbf89ca1f
  41e20d:	pop    ebp
  41e20e:	sub    ecx,DWORD PTR ds:0xf9ad5d9d
  41e214:	sbb    DWORD PTR [edx*2-0x36ce6a67],ebx
  41e21b:	or     al,0x6b
  41e21d:	loop   0x41e23b
  41e21f:	test   al,0x59
  41e221:	or     al,0xa3
  41e223:	add    ch,BYTE PTR [eax-0x5e]
  41e226:	push   edx
  41e227:	test   al,0x81
  41e229:	sar    BYTE PTR [ecx],1
  41e22b:	(bad)  
  41e22c:	adc    al,0x18
  41e22e:	scas   eax,DWORD PTR es:[edi]
  41e22f:	jle    0x41e2a0
  41e231:	mov    ebx,0x54822f4a
  41e236:	test   al,0xe2
  41e238:	(bad)  
  41e23a:	push   cs
  41e23b:	outs   dx,DWORD PTR ds:[esi]
  41e23c:	js     0x41e246
  41e23e:	pop    esi
  41e23f:	mov    ch,0x3c
	...
  41e2b1:	add    BYTE PTR [eax],al
  41e2b3:	add    dh,bh
  41e2b5:	cmp    cl,0x54
  41e2b8:	(bad)  
  41e2b9:	jge    0x41e2ba
  41e2bb:	stos   BYTE PTR es:[edi],al
  41e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bd:	push   esi
  41e2be:	arpl   WORD PTR [ebx-0x40],di
  41e2c1:	adc    ebx,DWORD PTR [ebx]
  41e2c3:	mov    esi,0x1444b
  41e2c8:	cmc    
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [edx+ecx*4+0x1d],cl
  41e2cf:	into   
  41e2d0:	bound  ebx,QWORD PTR [edx+0x1a]
  41e2d3:	dec    ebp
  41e2d4:	jmp    0x41e2fe
  41e2d6:	and    dl,cl
  41e2d8:	enter  0xa0f,0x17
  41e2dc:	ror    DWORD PTR [eax+0x74],1
  41e2df:	hlt    
  41e2e0:	gs cs xchg edx,eax
  41e2e3:	xchg   ecx,eax
  41e2e4:	loopne 0x41e334
  41e2e6:	scas   al,BYTE PTR es:[edi]
  41e2e7:	cmp    al,ah
  41e2e9:	inc    edi
  41e2ea:	dec    edi
  41e2eb:	cmp    BYTE PTR [esi],ah
  41e2ed:	fwait
  41e2ee:	pop    esp
  41e2ef:	pushf  
  41e2f0:	and    BYTE PTR [edi+0x20212f73],al
  41e2f6:	pop    esi
  41e2f7:	cmp    DWORD PTR [ebx+0x14],0x6f
  41e2fb:	xchg   ebx,eax
  41e2fc:	push   ebx
  41e2fd:	nop
  41e2fe:	into   
  41e2ff:	push   esi
  41e300:	mov    dh,ch
  41e302:	fst    QWORD PTR [esi-0x46f74b3a]
  41e308:	in     eax,0x17
  41e30a:	xlat   BYTE PTR ds:[ebx]
  41e30b:	xor    esi,DWORD PTR [esi-0x33]
  41e30e:	ins    BYTE PTR es:[edi],dx
  41e30f:	retf   
  41e310:	inc    edi
  41e311:	sahf   
  41e312:	shl    DWORD PTR [ebp+esi*8-0x11b3a45b],1
  41e319:	adc    al,0xd1
  41e31b:	and    eax,0x46900597
  41e320:	mov    bl,0x11
  41e322:	mov    ds,WORD PTR [esi-0x467aa45f]
  41e328:	jecxz  0x41e2dc
  41e32a:	iret   
  41e32b:	or     DWORD PTR [esi+0x75],ebx
  41e32e:	jl     0x41e32d
  41e330:	inc    edi
  41e331:	cmp    ebx,DWORD PTR [ecx]
  41e333:	out    0x7,eax
  41e335:	addr16 sahf 
  41e337:	sbb    eax,0x6197fd19
  41e33c:	mov    eax,0x880b9ab7
  41e341:	retf   0x93af
  41e344:	or     esp,DWORD PTR [edx+0x1e746cc4]
  41e34a:	cmp    BYTE PTR [esi-0x66b74cab],0xc9
  41e351:	push   ecx
  41e352:	pop    edx
  41e353:	lock xor bh,cl
  41e356:	cmp    dl,ch
  41e358:	stos   DWORD PTR es:[edi],eax
  41e359:	adc    al,0x54
  41e35b:	ja     0x41e30c
  41e35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e35e:	dec    ecx
  41e35f:	xchg   BYTE PTR ds:0x39a46646,bh
  41e365:	push   edi
  41e366:	shl    edx,0xf0
  41e369:	sahf   
  41e36a:	popf   
  41e36b:	fwait
  41e36c:	je     0x41e309
  41e36e:	add    edx,0x811400cb
  41e374:	leave  
  41e375:	sbb    BYTE PTR [ecx],ch
  41e377:	pop    edi
  41e378:	(bad)  
  41e379:	aad    0xe9
  41e37b:	rcl    bl,cl
  41e37d:	pop    esi
  41e37e:	pop    esp
  41e37f:	jbe    0x41e390
  41e381:	retf   
  41e382:	sbb    DWORD PTR ss:[edi],0xb8e2871f
  41e389:	daa    
  41e38a:	mov    edi,0xae33b828
  41e38f:	xor    al,0x7e
  41e391:	jge    0x41e35e
  41e393:	out    0xdc,al
  41e395:	inc    eax
  41e396:	leave  
  41e397:	and    BYTE PTR [eax],ch
  41e399:	adc    dl,BYTE PTR [edx-0x68]
  41e39c:	ret    
  41e39d:	or     BYTE PTR [ebx+0x5a5676be],al
  41e3a3:	aad    0x50
  41e3a5:	mov    DWORD PTR [edx],edx
  41e3a7:	iret   
  41e3a8:	mov    dl,0x7f
  41e3aa:	push   ss
  41e3ab:	das    
  41e3ac:	pusha  
  41e3ad:	sbb    BYTE PTR [edi+0x2],0x31
  41e3b1:	shl    DWORD PTR [esi],cl
  41e3b3:	pop    es
  41e3b4:	retf   
  41e3b5:	jge    0x41e411
  41e3b7:	inc    eax
  41e3b8:	sbb    edx,esi
  41e3ba:	stc    
  41e3bb:	cmp    dl,BYTE PTR [ecx-0x33]
  41e3be:	rcl    DWORD PTR [ebp+0x59],1
	...
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0xf2b7fead,al
  41e442:	push   edi
  41e443:	test   DWORD PTR [eax+0x45],eax
  41e446:	add    DWORD PTR [eax],eax
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    BYTE PTR [esi-0x29],al
  41e44e:	xchg   esi,eax
  41e44f:	cli    
  41e450:	mov    ecx,0xf3450a3e
  41e455:	jbe    0x41e487
  41e457:	sbb    DWORD PTR ds:0x4b7fd558,esi
  41e45d:	stc    
  41e45e:	dec    edx
  41e45f:	idiv   DWORD PTR [edi+0x42]
  41e462:	pop    ds
  41e463:	mov    ah,0xb3
  41e465:	mov    esp,0xf63a0db8
  41e46a:	test   eax,0x474fdd62
  41e46f:	ret    0x7f81
  41e472:	or     ebx,ebp
  41e474:	popa   
  41e475:	clc    
  41e476:	lock fnstenv [ecx+0x744bbc58]
  41e47d:	(bad)  
  41e47e:	xchg   ebx,eax
  41e47f:	mov    DWORD PTR [esi+0x366246eb],ebx
  41e485:	push   edx
  41e486:	pop    ebx
  41e487:	test   eax,0x9eea63a2
  41e48c:	xor    DWORD PTR [eax],ebx
  41e48e:	dec    ebx
  41e48f:	inc    ebx
  41e490:	sbb    BYTE PTR [ecx],cl
  41e492:	add    dl,BYTE PTR [eax-0x4d]
  41e495:	hlt    
  41e496:	xchg   ebp,eax
  41e497:	lahf   
  41e498:	jno    0x41e433
  41e49a:	inc    ebp
  41e49b:	std    
  41e49c:	sbb    eax,esp
  41e49e:	ret    0x754a
  41e4a1:	and    cl,0x5b
  41e4a4:	aam    0x13
  41e4a6:	ss call 0xc40b4dd7
  41e4ac:	sub    esp,DWORD PTR [eax-0x6]
  41e4af:	ret    
  41e4b0:	mov    esp,0xfab334b8
  41e4b5:	fmul   QWORD PTR [edx+0x46]
  41e4b8:	lahf   
  41e4b9:	sub    ebp,ebx
  41e4bb:	mov    bx,0x1c9d
  41e4bf:	or     BYTE PTR [esi+0x16],al
  41e4c2:	push   edi
  41e4c3:	dec    esp
  41e4c4:	or     dh,BYTE PTR [esi+ecx*2]
  41e4c7:	arpl   WORD PTR [eax],bp
  41e4c9:	(bad)  
  41e4ca:	mov    ds:0x6fe3085b,al
  41e4cf:	daa    
  41e4d0:	xchg   ebx,eax
  41e4d1:	xor    eax,0x263d6667
  41e4d6:	jle    0x41e524
  41e4d8:	call   0x8a01:0xa52e1385
  41e4df:	inc    esi
  41e4e0:	sub    BYTE PTR [eax-0x28],ch
  41e4e3:	xor    BYTE PTR [ecx+0x562b2aa5],dh
  41e4e9:	push   ebx
  41e4ea:	sub    eax,0x8ad7069d
  41e4ef:	mov    dl,0xda
  41e4f1:	mov    ds:0x1356fde9,al
  41e4f6:	add    DWORD PTR [ebp+eax*2-0x3a],ebp
  41e4fa:	pusha  
  41e4fb:	or     DWORD PTR [ecx-0x2ee8e2b3],0x6ccfdc8
  41e505:	push   eax
  41e506:	inc    edi
  41e507:	add    eax,0xc115f4d8
  41e50c:	out    dx,eax
  41e50d:	test   BYTE PTR [ebx+0x8a80d67],0x70
  41e514:	xor    cl,BYTE PTR [ecx+0x184b3927]
  41e51a:	pop    es
  41e51b:	cdq    
  41e51c:	adc    al,0x9a
  41e51e:	pop    edx
  41e51f:	sub    ah,bh
  41e521:	clc    
  41e522:	bound  esi,QWORD PTR [ebp-0x169bc39c]
  41e528:	imul   ebp,DWORD PTR [ebx-0x10],0xaf7ff788
  41e52f:	xor    eax,0xff47dd22
  41e534:	sub    esp,DWORD PTR [esi+0x1a]
  41e537:	jg     0x41e51a
  41e539:	shl    BYTE PTR [esi+0x526086d6],cl
  41e53f:	out    0xd8,al
	...
  41e5b1:	add    BYTE PTR [eax],al
  41e5b3:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz inc eax
  41e5c1:	jle    0x41e5b9
  41e5c3:	nop
  41e5c4:	xor    eax,0xf5000146
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    BYTE PTR [ebx],al
  41e5cd:	(bad)  
  41e5ce:	xor    al,0x45
  41e5d0:	(bad)  
  41e5d2:	push   0x5d
  41e5d4:	sbb    al,0x38
  41e5d6:	stc    
  41e5d7:	jns    0x41e591
  41e5d9:	jne    0x41e60c
  41e5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5dc:	imul   esi,edi,0x53
  41e5df:	push   es
  41e5e0:	jno    0x41e57c
  41e5e2:	push   esp
  41e5e3:	xchg   edx,eax
  41e5e4:	lahf   
  41e5e5:	xchg   ebx,eax
  41e5e6:	shl    BYTE PTR [ebx],cl
  41e5e8:	and    BYTE PTR [ecx-0x6c100018],bh
  41e5ee:	add    al,0x9f
  41e5f0:	jne    0x41e5b8
  41e5f2:	push   edi
  41e5f3:	loope  0x41e58c
  41e5f5:	nop
  41e5f6:	sub    al,0xf4
  41e5f8:	mov    bh,0x1c
  41e5fa:	test   eax,0x9cc07818
  41e5ff:	and    DWORD PTR [edi+0x1466d27a],0xac489c4
  41e609:	dec    ecx
  41e60a:	jl     0x41e5b1
  41e60c:	mov    DWORD PTR [ecx-0x6b18ea9f],ecx
  41e612:	cmp    al,0x5d
  41e614:	dec    eax
  41e615:	clc    
  41e616:	gs pop esp
  41e618:	xlat   BYTE PTR ds:[ebx]
  41e619:	push   0x78
  41e61b:	and    dl,dh
  41e61d:	sbb    eax,0x279309b6
  41e622:	je     0x41e623
  41e624:	jmp    0x6ab083a3
  41e629:	xchg   edx,eax
  41e62a:	ret    0x4ec4
  41e62d:	add    ecx,edi
  41e62f:	xchg   esi,eax
  41e630:	scas   eax,DWORD PTR es:[edi]
  41e631:	cmp    eax,0xf0db1270
  41e636:	inc    ecx
  41e637:	xchg   edi,eax
  41e638:	(bad)  
  41e639:	push   ds
  41e63a:	mov    ds:0x19ad8e53,al
  41e63f:	xchg   ecx,eax
  41e640:	push   es
  41e641:	pushf  
  41e642:	push   esi
  41e643:	inc    eax
  41e644:	mov    edi,0x311006e8
  41e649:	xchg   ebx,eax
  41e64a:	imul   edi,DWORD PTR [edi],0xdb15cedc
  41e650:	out    dx,eax
  41e651:	mov    bl,0xe6
  41e653:	ja     0x41e5d9
  41e655:	add    al,0x8c
  41e657:	cmp    DWORD PTR [edi],edi
  41e659:	cli    
  41e65a:	mov    ebp,0x7a49398c
  41e65f:	mov    bh,dh
  41e661:	test   al,0xfc
  41e663:	sbb    BYTE PTR ds:0x6f3f93e7,ah
  41e669:	dec    esi
  41e66a:	ret    0x5fc7
  41e66d:	(bad)  
  41e66e:	(bad)  
  41e670:	cmc    
  41e671:	sub    esi,ecx
  41e673:	idiv   BYTE PTR [edi-0x1fd96fea]
  41e679:	out    0xa,eax
  41e67b:	jnp    0x41e670
  41e67d:	cmp    dh,bh
  41e67f:	lods   al,BYTE PTR ds:[esi]
  41e680:	xchg   esp,eax
  41e681:	sub    DWORD PTR [ebx-0x5f],0x78
  41e685:	stc    
  41e686:	cmp    BYTE PTR [ebx-0x7d],cl
  41e689:	adc    ah,BYTE PTR [edx+0x2442f08c]
  41e68f:	cmp    BYTE PTR [ebp+0x686148e9],0x22
  41e696:	jl     0x41e647
  41e698:	jle    0x41e6e8
  41e69a:	pop    es
  41e69b:	aad    0x15
  41e69d:	mov    ?,edi
  41e69f:	cmp    eax,0x155d3a01
  41e6a4:	push   ebx
  41e6a5:	mov    eax,ds:0x749ecc4f
  41e6aa:	xchg   ebp,eax
  41e6ab:	push   ss
  41e6ac:	dec    ebp
  41e6ad:	(bad)  [edi+0x1e]
  41e6b0:	(bad)  
  41e6b1:	fisttp QWORD PTR [ebx+0x68]
  41e6b4:	jns    0x41e69c
  41e6b6:	lds    ebp,FWORD PTR [edi]
  41e6b8:	pop    ss
  41e6b9:	cmp    DWORD PTR [edi+0x5f],esi
  41e6bc:	xchg   BYTE PTR [eax+ecx*4],bh
  41e6bf:	push   cs
  41e6c0:	push   eax
	...
  41e731:	add    BYTE PTR [eax],al
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx+0xac44326]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    bh,bl
  41e74d:	clc    
  41e74e:	mov    dl,0x87
  41e750:	dec    eax
  41e751:	cwde   
  41e752:	test   DWORD PTR [ebx],ecx
  41e754:	or     eax,0x31508a19
  41e759:	std    
  41e75a:	pop    edx
  41e75b:	ds push esp
  41e75d:	scas   al,BYTE PTR es:[edi]
  41e75e:	(bad)  
  41e75f:	push   0x358bd292
  41e764:	outs   dx,DWORD PTR ds:[esi]
  41e765:	jo     0x41e762
  41e767:	in     eax,dx
  41e768:	mov    bl,bl
  41e76a:	sub    eax,0x53291535
  41e76f:	jge    0x41e712
  41e771:	jo     0x41e755
  41e773:	mov    ecx,0xf0ff9f2c
  41e778:	mov    edi,0xa1827d77
  41e77d:	mov    ch,0xb1
  41e77f:	dec    esi
  41e780:	fdiv   QWORD PTR [esi]
  41e782:	(bad)  
  41e783:	out    0xca,eax
  41e785:	addr16 mov esi,0xbbbe6d79
  41e78b:	sbb    BYTE PTR [eax-0x7d],ch
  41e78e:	mov    al,BYTE PTR [eax+edi*4+0x15]
  41e792:	jge    0x41e7ca
  41e794:	xchg   DWORD PTR [ecx-0x1],ebp
  41e797:	lahf   
  41e798:	retf   
  41e799:	sahf   
  41e79a:	retf   0x4c4f
  41e79d:	fisttp QWORD PTR [ecx+0x6f4bf299]
  41e7a3:	add    DWORD PTR [ebp+0x54],0x8ab21bcc
  41e7aa:	and    eax,0x48ae2b0d
  41e7af:	inc    ecx
  41e7b0:	xchg   esi,eax
  41e7b1:	xor    DWORD PTR [eax+0x3681bc6e],eax
  41e7b7:	sar    edx,cl
  41e7b9:	mov    al,BYTE PTR [ecx]
  41e7bb:	pop    ebp
  41e7bc:	cld    
  41e7bd:	mul    dl
  41e7bf:	dec    ebp
  41e7c0:	pop    edx
  41e7c1:	fisubr WORD PTR [edi]
  41e7c3:	sbb    DWORD PTR [edi],esi
  41e7c5:	pop    edi
  41e7c6:	(bad)  
  41e7c7:	out    0x99,al
  41e7c9:	cmp    BYTE PTR ds:0xff7030c4,ah
  41e7cf:	sar    BYTE PTR [esi],cl
  41e7d1:	inc    eax
  41e7d2:	test   eax,0xc4b8164b
  41e7d7:	popf   
  41e7d8:	or     BYTE PTR [ecx+0x39],al
  41e7db:	sub    bh,BYTE PTR [ecx+0x3e]
  41e7de:	push   ds
  41e7df:	sti    
  41e7e0:	addr16 inc ebp
  41e7e2:	aad    0x90
  41e7e4:	xor    BYTE PTR [edx],bh
  41e7e6:	mov    esi,0xc7b22804
  41e7eb:	int3   
  41e7ec:	cdq    
  41e7ed:	xor    eax,0x860ed7d2
  41e7f2:	push   ecx
  41e7f3:	int    0xc7
  41e7f5:	xor    DWORD PTR [ecx+0x6e],0x16417640
  41e7fc:	std    
  41e7fd:	pop    bx
  41e7ff:	in     eax,dx
  41e800:	add    BYTE PTR [edx+0x21],ah
  41e803:	fstp   TBYTE PTR [edi+0x75481646]
  41e809:	ds jmp 0x41e82d
  41e80c:	add    al,BYTE PTR [esi-0x482e0d7c]
  41e812:	jmp    0xed18:0xdc94cba5
  41e819:	(bad)  
  41e81a:	les    edx,FWORD PTR [edi+0x200a1c60]
  41e820:	lea    edx,[eax+0x75099397]
  41e826:	pop    ebx
  41e827:	inc    ecx
  41e828:	or     al,0x58
  41e82a:	stc    
  41e82b:	repnz cmp dl,BYTE PTR [edx+0x10c57418]
  41e832:	imul   ecx,esi,0x4
  41e835:	(bad)
  41e839:	sub    al,0x1a
  41e83b:	dec    esp
  41e83c:	mov    ah,0x68
  41e83e:	iret   
  41e83f:	jmp    0x41e851
	...
  41e8b1:	add    BYTE PTR [eax],al
  41e8b3:	add    ah,al
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	pop    es
  41e8b7:	pushf  
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	rol    BYTE PTR [ebp+0x481fea3e],1
  41e8c6:	add    DWORD PTR [eax],eax
  41e8c8:	cmc    
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    al,dl
  41e8cd:	mov    dl,0x84
  41e8cf:	pop    ebp
  41e8d0:	jg     0x41e91b
  41e8d2:	jb     0x41e949
  41e8d4:	repnz int3 
  41e8d6:	xlat   BYTE PTR ds:[ebx]
  41e8d7:	in     al,dx
  41e8d8:	sub    cl,bl
  41e8da:	mov    cl,0xa3
  41e8dc:	test   eax,0xdbc73d7a
  41e8e1:	es inc ecx
  41e8e3:	pop    eax
  41e8e4:	(bad)  
  41e8e5:	icebp  
  41e8e6:	inc    ecx
  41e8e7:	mov    WORD PTR [esi+0x79],?
  41e8ea:	das    
  41e8eb:	cs rcl ch,cl
  41e8ee:	push   ss
  41e8ef:	jg     0x41e954
  41e8f1:	mov    ah,0x15
  41e8f3:	imul   ebp,DWORD PTR [edx+0x5e],0xa1bf8a36
  41e8fa:	jge    0x41e95a
  41e8fc:	xchg   ebx,eax
  41e8fd:	jecxz  0x41e956
  41e8ff:	dec    ebx
  41e900:	or     al,0xa4
  41e902:	mov    DWORD PTR [ecx+0x30ed53f2],esp
  41e908:	mov    DWORD PTR [esi+0x537ea9d1],ecx
  41e90e:	mov    DWORD PTR [edi],edi
  41e910:	pop    esi
  41e911:	mov    BYTE PTR [edx+0x1c],al
  41e914:	jmp    0xb199:0x130bd3c0
  41e91b:	pop    ss
  41e91c:	(bad)  
  41e91d:	fcomp  DWORD PTR [ecx+0x40]
  41e920:	push   esp
  41e921:	mov    esi,0x5b3d3e11
  41e926:	in     eax,0x40
  41e928:	jl     0x41e8df
  41e92a:	xchg   dx,ax
  41e92c:	and    BYTE PTR [edi-0x3a],bh
  41e92f:	push   ds
  41e930:	pop    edi
  41e931:	mov    ch,0x67
  41e933:	jecxz  0x41e9ab
  41e935:	into   
  41e936:	push   edi
  41e937:	lods   eax,DWORD PTR ds:[esi]
  41e938:	inc    ecx
  41e939:	gs int 0xc7
  41e93c:	leave  
  41e93d:	mov    edi,0x12dc7c0e
  41e942:	test   eax,0xb0eb0606
  41e947:	and    edi,DWORD PTR [edx+esi*4-0x9]
  41e94b:	adc    BYTE PTR [edx-0x6faaa0da],bl
  41e951:	push   ecx
  41e952:	jmp    0x957eedbf
  41e957:	ret    0x1da3
  41e95a:	in     al,0x3b
  41e95c:	or     bl,BYTE PTR [esi+0x28]
  41e95f:	add    BYTE PTR [esi-0x6],0x95
  41e963:	or     BYTE PTR [esi],dh
  41e965:	adc    DWORD PTR [edi+0x5bf1b2f8],eax
  41e96b:	xlat   BYTE PTR ds:[ebx]
  41e96c:	sbb    BYTE PTR [edx-0x7dd5e922],cl
  41e972:	inc    esp
  41e973:	mov    bh,0xe5
  41e975:	mov    esp,0x6567e360
  41e97a:	pop    ebx
  41e97b:	xchg   esp,eax
  41e97c:	mov    bh,0x25
  41e97e:	jb     0x41e964
  41e980:	mov    ah,0xd7
  41e982:	(bad)  
  41e983:	aad    0xd9
  41e985:	push   es
  41e986:	add    dh,BYTE PTR [esp+eax*1-0x6593d2f2]
  41e98d:	cmp    al,0xaa
  41e98f:	in     al,0xd7
  41e991:	cmp    BYTE PTR [esi],0xa5
  41e994:	(bad)  
  41e995:	mov    ah,0x60
  41e997:	sub    ch,BYTE PTR [edx]
  41e999:	dec    esp
  41e99a:	(bad)  
  41e99b:	cld    
  41e99c:	mov    edi,ebx
  41e99e:	and    DWORD PTR [eax-0x66],ecx
  41e9a1:	push   ss
  41e9a2:	and    al,0xdb
  41e9a4:	clc    
  41e9a5:	sti    
  41e9a6:	ret    
  41e9a7:	mov    cl,0x2a
  41e9a9:	jp     0x41e987
  41e9ab:	mov    ebx,0x68b789b9
  41e9b0:	pop    edi
  41e9b1:	xor    DWORD PTR [ebp+0x41],ebx
  41e9b4:	push   edi
  41e9b5:	or     ax,0x8669
  41e9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9ba:	cli    
  41e9bb:	push   0xffffff92
  41e9bd:	push   ecx
  41e9be:	cli    
  41e9bf:	int    0x1d
	...
  41ea31:	add    BYTE PTR [eax],al
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	frstor [esi+0x4d]
  41ea42:	adc    eax,0x14914ef
  41ea47:	add    ch,dh
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [eax+0x6],ah
  41ea4e:	lea    eax,[edx-0x46]
  41ea51:	mov    al,0x5a
  41ea53:	xchg   DWORD PTR [ebp+eiz*8-0x49be2736],edi
  41ea5a:	ds push ebx
  41ea5c:	push   esp
  41ea5d:	jp     0x41ea4a
  41ea5f:	outs   dx,BYTE PTR ds:[esi]
  41ea60:	jb     0x41ea27
  41ea62:	jg     0x41eabd
  41ea64:	mov    cl,0xf0
  41ea66:	add    ebp,esi
  41ea68:	push   es
  41ea69:	sbb    al,0x25
  41ea6b:	push   0x3a0658d8
  41ea70:	mul    BYTE PTR [ecx]
  41ea72:	stos   BYTE PTR es:[edi],al
  41ea73:	cmp    dl,BYTE PTR [esi+0x57]
  41ea76:	push   edi
  41ea77:	mov    eax,DWORD PTR [edx]
  41ea79:	mov    bh,0xb8
  41ea7b:	jne    0x41ea3b
  41ea7d:	stos   BYTE PTR es:[edi],al
  41ea7e:	arpl   WORD PTR [ecx],di
  41ea80:	and    DWORD PTR [edx-0x55],esp
  41ea83:	dec    ecx
  41ea84:	pop    edx
  41ea85:	ins    DWORD PTR es:[edi],dx
  41ea86:	scas   al,BYTE PTR es:[edi]
  41ea87:	adc    eax,0x3b765fdb
  41ea8c:	and    ebp,edx
  41ea8e:	sbb    cl,BYTE PTR [esi]
  41ea90:	fwait
  41ea91:	stos   BYTE PTR es:[edi],al
  41ea92:	ss jno 0x41ea60
  41ea95:	push   edi
  41ea96:	mov    ebp,0x54830bbc
  41ea9b:	cmc    
  41ea9c:	enter  0xcccc,0x3d
  41eaa0:	dec    esi
  41eaa1:	mov    esi,0x464c3d1b
  41eaa6:	das    
  41eaa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa8:	imul   ecx,DWORD PTR [ecx],0x8f25677f
  41eaae:	(bad)  
  41eaaf:	dec    eax
  41eab0:	je     0x41eade
  41eab2:	and    ch,BYTE PTR [ebp+0x2ed6e4fc]
  41eab8:	add    dl,BYTE PTR [ebp-0x80b8e59]
  41eabe:	inc    ebx
  41eabf:	inc    ecx
  41eac0:	mov    ds:0xaecd8d2,al
  41eac5:	(bad)  
  41eac6:	shl    BYTE PTR [ebx-0x80],1
  41eac9:	mov    eax,ds:0xc3ef188d
  41eace:	mov    cl,BYTE PTR [esi]
  41ead0:	ror    DWORD PTR [ebx+ecx*1+0x49],0x49
  41ead5:	fadd   st(2),st
  41ead7:	mov    eax,ds:0x94fa1ee2
  41eadc:	jg     0x41eb40
  41eade:	pop    edi
  41eadf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae0:	ss xchg ecx,eax
  41eae2:	xor    eax,0xedc5420e
  41eae7:	bnd jb 0x41eaaa
  41eaea:	jle    0x41eb2c
  41eaec:	dec    esi
  41eaed:	mov    ebx,0x5b9dd902
  41eaf2:	mov    ds:0xd9438e61,al
  41eaf7:	dec    esi
  41eaf8:	and    ebp,DWORD PTR [edi-0x15bb9cd5]
  41eafe:	adc    BYTE PTR [ecx],dh
  41eb00:	cli    
  41eb01:	cmp    DWORD PTR [ebp-0x50dcc3ee],esp
  41eb07:	stos   DWORD PTR es:[edi],eax
  41eb08:	out    dx,eax
  41eb09:	xchg   edi,eax
  41eb0a:	add    eax,0x867a8cd4
  41eb0f:	push   ss
  41eb10:	mov    esp,0xf3b51edf
  41eb15:	cmp    eax,DWORD PTR [ecx+0x6a61c66]
  41eb1b:	jle    0x41eb94
  41eb1d:	sub    al,0x6a
  41eb1f:	xchg   esi,eax
  41eb20:	mov    al,0x16
  41eb22:	mov    ecx,0x2bd589c3
  41eb27:	ds jae 0x41eb41
  41eb2a:	mov    eax,ds:0x6aad98c1
  41eb2f:	add    esp,esi
  41eb31:	cmp    cl,dh
  41eb33:	scas   al,BYTE PTR es:[edi]
  41eb34:	push   edx
  41eb35:	cmp    esp,esi
  41eb37:	sub    bl,dl
  41eb39:	adc    al,0x3d
  41eb3b:	xor    DWORD PTR ds:0xda3b99d9,edx
	...
  41ebb1:	add    BYTE PTR [eax],al
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	inc    ecx
  41ebc1:	sbb    al,0x92
  41ebc3:	outs   dx,DWORD PTR ds:[esi]
  41ebc4:	or     DWORD PTR [edx+0x1],ecx
  41ebc7:	add    ch,dh
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [ebx],ah
  41ebcd:	add    al,0x60
  41ebcf:	pop    eax
  41ebd0:	jge    0x41ec04
  41ebd2:	cmc    
  41ebd3:	xchg   ecx,eax
  41ebd4:	xchg   ch,dh
  41ebd6:	out    dx,al
  41ebd7:	in     al,0x33
  41ebd9:	mov    eax,ds:0x9f515fef
  41ebde:	adc    esi,DWORD PTR ds:0x71eadc4a
  41ebe4:	in     al,dx
  41ebe5:	(bad)  
  41ebe6:	add    WORD PTR [esi+0x69],0x9719
  41ebec:	loop   0x41ebd8
  41ebee:	pop    ebp
  41ebef:	popf   
  41ebf0:	jbe    0x41eb7a
  41ebf2:	jp     0x41ec0a
  41ebf4:	push   eax
  41ebf5:	je     0x41eba5
  41ebf7:	hlt    
  41ebf8:	cwde   
  41ebf9:	repnz pop es
  41ebfb:	pop    eax
  41ebfc:	sbb    bl,dl
  41ebfe:	(bad)  
  41ebff:	fnsave [edx]
  41ec01:	dec    esi
  41ec02:	pop    edi
  41ec03:	xchg   esp,eax
  41ec04:	add    ebx,DWORD PTR [ecx+0x2bf9a184]
  41ec0a:	sbb    dh,BYTE PTR [eax+0x574ebde7]
  41ec10:	xchg   edi,eax
  41ec11:	adc    BYTE PTR [edi],cl
  41ec13:	arpl   bx,ax
  41ec15:	adc    ah,al
  41ec17:	pop    ecx
  41ec18:	in     eax,dx
  41ec19:	push   0x66
  41ec1b:	mov    esp,ebp
  41ec1d:	xchg   ebp,eax
  41ec1e:	add    DWORD PTR [ecx-0x608dbbf],0x3c
  41ec25:	std    
  41ec26:	popf   
  41ec27:	inc    esp
  41ec28:	pop    edx
  41ec29:	aas    
  41ec2a:	adc    ebx,DWORD PTR [ecx]
  41ec2c:	sbb    eax,0x78197d83
  41ec31:	inc    eax
  41ec32:	shl    DWORD PTR [ebp-0x4cb0cd81],1
  41ec38:	xchg   edi,eax
  41ec39:	mov    cl,0x72
  41ec3b:	into   
  41ec3c:	mov    edx,0x4ccad369
  41ec41:	fisubr WORD PTR [ecx+ecx*4-0x6efa16fb]
  41ec48:	test   eax,0x21f3047a
  41ec4d:	jbe    0x41ecc8
  41ec4f:	sub    BYTE PTR [esi-0x4acb1a69],al
  41ec55:	pop    ss
  41ec56:	pop    ebp
  41ec57:	mov    dh,0x42
  41ec59:	push   0xd713996a
  41ec5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec5f:	jo     0x41ecc9
  41ec61:	push   0xe7cbcbdc
  41ec66:	(bad)  
  41ec67:	push   0x46d08762
  41ec6c:	repz ret 0xd81a
  41ec70:	test   al,dl
  41ec72:	mov    dh,0x1f
  41ec74:	(bad)  
  41ec75:	adc    al,0x62
  41ec77:	gs call 0x716d:0xc89c9a41
  41ec7f:	or     eax,0xd52fec12
  41ec84:	jbe    0x41ecfc
  41ec86:	pop    edi
  41ec87:	lock mov WORD PTR ds:0x67617e53,ds
  41ec8e:	or     DWORD PTR [edx+0xe4647c3],esi
  41ec94:	outs   dx,DWORD PTR ds:[esi]
  41ec95:	push   ebp
  41ec96:	ins    BYTE PTR es:[edi],dx
  41ec97:	jp     0x41ecd7
  41ec99:	cmp    ch,al
  41ec9b:	scas   al,BYTE PTR es:[edi]
  41ec9c:	dec    edi
  41ec9d:	sbb    DWORD PTR [eax],ecx
  41ec9f:	jl     0x41ec4a
  41eca1:	bound  edi,QWORD PTR [ecx-0x28fbd091]
  41eca7:	pop    ds
  41eca8:	sbb    al,0x1a
  41ecaa:	mov    ebx,0xd76d7bd8
  41ecaf:	sub    esp,DWORD PTR [ebx+0x7c]
  41ecb2:	sbb    eax,0xa13785eb
  41ecb7:	push   ebx
  41ecb8:	(bad)  
  41ecb9:	push   ss
  41ecba:	push   eax
  41ecbb:	inc    ebp
  41ecbc:	sub    edx,DWORD PTR [eax+0xc86a10]
	...
  41ed32:	add    BYTE PTR [eax],al
  41ed34:	and    bl,dh
  41ed36:	das    
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	mov    eax,esp
  41ed42:	add    dl,dl
  41ed44:	dec    BYTE PTR [edx+0x1]
  41ed47:	add    ch,dh
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    BYTE PTR [ebp+0x522f4fea],bh
  41ed51:	inc    edx
  41ed52:	adc    al,0x7f
  41ed54:	pop    esp
  41ed55:	lods   eax,DWORD PTR ds:[esi]
  41ed56:	fdiv   st,st(5)
  41ed58:	jo     0x41edb8
  41ed5a:	jle    0x41ed9e
  41ed5c:	and    edx,DWORD PTR [eax+0x5a702ca2]
  41ed62:	sbb    al,0xa8
  41ed64:	shl    BYTE PTR [edi+0x27],1
  41ed67:	in     al,dx
  41ed68:	sbb    edx,esi
  41ed6a:	sub    al,0x33
  41ed6c:	repnz cmp eax,0x6923d704
  41ed72:	lahf   
  41ed73:	clc    
  41ed74:	mov    dh,BYTE PTR [eax]
  41ed76:	ds inc ebx
  41ed78:	scas   al,BYTE PTR es:[edi]
  41ed79:	fidiv  WORD PTR [esp+edi*2-0x2c]
  41ed7d:	xchg   DWORD PTR [edx-0x4f],ecx
  41ed80:	push   esi
  41ed82:	iret   
  41ed83:	mov    cs,WORD PTR [ecx+0x5c405cfc]
  41ed89:	and    ebx,edx
  41ed8b:	cmc    
  41ed8c:	inc    ebp
  41ed8d:	dec    esi
  41ed8e:	test   DWORD PTR [edx+0x25b877a1],eax
  41ed94:	inc    esi
  41ed95:	xor    DWORD PTR [esi-0x67],edi
  41ed98:	div    BYTE PTR [ecx]
  41ed9a:	lods   eax,DWORD PTR ds:[esi]
  41ed9b:	into   
  41ed9c:	imul   eax,DWORD PTR [ebx+eiz*1-0x2f],0x43ccc7a8
  41eda4:	icebp  
  41eda5:	rcr    DWORD PTR [ecx+0x4078ecfc],cl
  41edab:	fnsave [edi]
  41edad:	in     al,0x1e
  41edaf:	cmp    esp,DWORD PTR [edi]
  41edb1:	popa   
  41edb2:	or     DWORD PTR [ebx+ecx*2],ebp
  41edb5:	sub    BYTE PTR [ebx-0x66b5551e],0xe3
  41edbc:	add    ah,BYTE PTR [edx]
  41edbe:	lock pop ebx
  41edc0:	jo     0x41ed82
  41edc2:	call   0xfe72:0xab30d8e0
  41edc9:	mov    ds:0xa4341c85,eax
  41edce:	idiv   DWORD PTR [eax]
  41edd0:	in     eax,0x13
  41edd2:	call   0x30e5:0x346ed2b4
  41edd9:	pushf  
  41edda:	mov    eax,0x48905a2c
  41eddf:	clc    
  41ede0:	out    dx,eax
  41ede1:	aas    
  41ede2:	sbb    DWORD PTR [ebp+0x71],edx
  41ede5:	cmp    BYTE PTR [esi-0x3a251cea],al
  41edeb:	dec    ebx
  41edec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eded:	jge    0x41edf7
  41edef:	mov    ecx,0xa95d8ca0
  41edf4:	(bad)  
  41edf5:	shr    DWORD PTR [ebx+0x76],1
  41edf8:	xchg   ecx,eax
  41edf9:	cmp    BYTE PTR [ecx+0x11],0x38
  41edfd:	je     0x41ee05
  41edff:	aaa    
  41ee00:	add    dl,BYTE PTR [ebp+eiz*2+0x4a]
  41ee04:	ins    BYTE PTR es:[edi],dx
  41ee05:	xchg   BYTE PTR [esi],ah
  41ee07:	call   0x90d5:0x9d24808e
  41ee0e:	icebp  
  41ee0f:	sub    eax,0xa72e56
  41ee14:	or     eax,0x852c1cf9
  41ee19:	daa    
  41ee1a:	sbb    ebp,esp
  41ee1c:	jo     0x41ee6b
  41ee1e:	xchg   ecx,eax
  41ee1f:	cmp    eax,0x3d5a0185
  41ee24:	pop    ss
  41ee25:	aas    
  41ee26:	pop    esp
  41ee27:	mov    esi,0x87fc6e09
  41ee2c:	pop    edx
  41ee2d:	xchg   ecx,ebx
  41ee2f:	and    eax,0xfcf5f1d0
  41ee34:	push   edx
  41ee35:	or     dl,BYTE PTR ds:0xe5fd5d09
  41ee3b:	inc    edx
  41ee3c:	lea    eax,[ebx-0x25]
  41ee3f:	aad    0x2d
	...
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	retf   
  41eec1:	cmp    DWORD PTR [esi],esi
  41eec3:	xor    eax,0x14bf3
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    bh,ch
  41eecd:	jge    0x41ef30
  41eecf:	out    dx,al
  41eed0:	xchg   ebp,eax
  41eed1:	jnp    0x41eea4
  41eed3:	in     al,0x1d
  41eed5:	push   ebx
  41eed6:	lea    esp,[ecx+0x7fc033ed]
  41eedc:	(bad)  
  41eedd:	adc    DWORD PTR ds:0xd59dbf1f,esi
  41eee3:	inc    esp
  41eee4:	call   0x9103406d
  41eee9:	hlt    
  41eeea:	in     al,dx
  41eeeb:	nop
  41eeec:	adc    al,0xba
  41eeee:	fcom   QWORD PTR [edi+0x23]
  41eef1:	cli    
  41eef2:	adc    DWORD PTR [ecx+0x1d607a9e],ebx
  41eef8:	inc    esp
  41eef9:	add    DWORD PTR [edi+0x195ebef5],0x57e5b66b
  41ef03:	loope  0x41eee4
  41ef05:	lods   al,BYTE PTR ds:[esi]
  41ef06:	jbe    0x41ee8c
  41ef08:	push   ebp
  41ef09:	xchg   ebp,eax
  41ef0a:	icebp  
  41ef0b:	add    BYTE PTR ds:0xa68c4459,bh
  41ef11:	icebp  
  41ef12:	adc    esi,DWORD PTR [ebx]
  41ef14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef15:	jle    0x41eef1
  41ef17:	jp     0x41eede
  41ef19:	loop   0x41ef47
  41ef1b:	fld    DWORD PTR [esi-0x54f5724]
  41ef21:	push   esp
  41ef22:	gs repz mov ebp,0xff8ca5de
  41ef29:	daa    
  41ef2a:	mov    bh,0x9a
  41ef2c:	xchg   edx,eax
  41ef2d:	outs   dx,DWORD PTR ds:[esi]
  41ef2e:	sub    al,0x16
  41ef30:	xor    ebx,DWORD PTR [esp+edx*1]
  41ef33:	mov    bl,0x5
  41ef35:	(bad)  
  41ef36:	and    DWORD PTR [eax+0x4653c475],esi
  41ef3c:	adc    ebp,DWORD PTR [ebx-0x44]
  41ef3f:	push   edi
  41ef40:	push   esi
  41ef41:	sub    ch,BYTE PTR [esi+0x41]
  41ef44:	ss adc al,dl
  41ef47:	cs loop 0x41ef0d
  41ef4a:	jns    0x41ef25
  41ef4c:	sub    eax,0xc82a2389
  41ef51:	lock call 0xcea5:0x6b4feb79
  41ef59:	jnp    0x41ef57
  41ef5b:	call   0x50a1065
  41ef60:	les    esi,FWORD PTR [edx-0x42]
  41ef63:	mov    al,0xec
  41ef65:	dec    ecx
  41ef66:	or     al,0x7e
  41ef68:	popf   
  41ef69:	and    al,0x1e
  41ef6b:	xchg   esp,eax
  41ef6c:	int3   
  41ef6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef6e:	daa    
  41ef6f:	add    al,0x43
  41ef71:	inc    ebx
  41ef72:	push   ss
  41ef73:	or     DWORD PTR [ecx-0xd],eax
  41ef76:	mov    edi,0xeed69f45
  41ef7b:	jb     0x41ef80
  41ef7d:	jb     0x41ef32
  41ef7f:	mov    eax,0xd4e06260
  41ef84:	mov    esp,DWORD PTR [esi+ecx*1-0x22ac37eb]
  41ef8b:	(bad)  
  41ef8c:	dec    ebp
  41ef8d:	out    dx,eax
  41ef8e:	pop    es
  41ef8f:	aam    0x32
  41ef91:	(bad)  
  41ef92:	sahf   
  41ef93:	mov    ds:0x630fd4e7,eax
  41ef98:	xlat   BYTE PTR ds:[ebx]
  41ef99:	inc    esi
  41ef9a:	in     eax,dx
  41ef9b:	inc    ebp
  41ef9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef9d:	xchg   ah,bh
  41ef9f:	xor    DWORD PTR [esi-0x17],ecx
  41efa2:	(bad)  
  41efa4:	in     eax,dx
  41efa5:	icebp  
  41efa6:	stos   DWORD PTR es:[edi],eax
  41efa7:	stos   BYTE PTR es:[edi],al
  41efa8:	jne    0x41ef8c
  41efaa:	mov    DWORD PTR [ecx+0x7e0b10a6],edi
  41efb0:	jg     0x41ef7b
  41efb2:	int3   
  41efb3:	sbb    esp,ebx
  41efb5:	in     al,dx
  41efb6:	push   edx
  41efb7:	in     al,dx
  41efb8:	ror    BYTE PTR [esi+0x2f19e4d7],cl
  41efbe:	jb     0x41ef64
  41efc0:	add    BYTE PTR es:[eax],al
	...
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4-0xe]
  41f041:	(bad)
  41f045:	dec    esp
  41f046:	add    DWORD PTR [eax],eax
  41f048:	cmc    
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [edx+ebx*1],al
  41f04e:	push   ebx
  41f04f:	xchg   BYTE PTR [di-0x1f],al
  41f053:	push   eax
  41f054:	and    DWORD PTR [edi+0x19],esi
  41f057:	mov    ah,dl
  41f059:	sub    al,bl
  41f05b:	add    al,0x64
  41f05d:	iret   
  41f05e:	rcl    DWORD PTR [esi+0x23],1
  41f061:	jb     0x41f0d5
  41f063:	repz jle 0x41f07b
  41f066:	xchg   edi,eax
  41f067:	std    
  41f068:	dec    eax
  41f069:	stos   BYTE PTR es:[edi],al
  41f06a:	or     BYTE PTR [eax],al
  41f06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f06d:	dec    ecx
  41f06e:	arpl   WORD PTR gs:0xcba3d252,cx
  41f075:	xor    BYTE PTR [edx],ch
  41f077:	loope  0x41f034
  41f079:	hlt    
  41f07a:	jmp    0xf9e3e843
  41f07f:	sub    DWORD PTR [eax+0x12],esp
  41f082:	add    al,0xf2
  41f084:	push   DWORD PTR [eax-0x51460df3]
  41f08a:	adc    cl,dl
  41f08c:	fs jae 0x41f098
  41f08f:	push   eax
  41f090:	mov    ecx,0x13c7d02a
  41f095:	and    eax,0x50f8e90
  41f09a:	cdq    
  41f09b:	daa    
  41f09c:	xor    esp,DWORD PTR [esi+ebp*8-0x1a]
  41f0a0:	or     eax,0x1384de32
  41f0a5:	scas   al,BYTE PTR es:[edi]
  41f0a6:	add    esi,ebx
  41f0a8:	mov    ecx,0xe0e1225b
  41f0ad:	je     0x41f080
  41f0af:	and    cl,ch
  41f0b1:	sub    eax,edx
  41f0b3:	(bad)  
  41f0b4:	(bad)  
  41f0b5:	(bad)  
  41f0b6:	ins    DWORD PTR es:[edi],dx
  41f0b7:	jnp    0x41f0bf
  41f0b9:	jb     0x41f09a
  41f0bb:	sub    eax,0x7ef0f5bf
  41f0c0:	pop    ebp
  41f0c1:	push   esi
  41f0c2:	fistp  DWORD PTR ds:0x5c31df58
  41f0c8:	sti    
  41f0c9:	or     BYTE PTR [eax+0x6c],dl
  41f0cc:	mov    DWORD PTR [edx-0x55],eax
  41f0cf:	popf   
  41f0d0:	xchg   BYTE PTR [edi+0x6d],dh
  41f0d3:	push   ss
  41f0d4:	nop
  41f0d5:	jle    0x41f135
  41f0d7:	imul   ecx,ecx,0x3198dfb5
  41f0dd:	fsub   st(6),st
  41f0df:	arpl   si,dx
  41f0e1:	in     al,dx
  41f0e2:	or     bh,0x5c
  41f0e5:	xchg   DWORD PTR [esi+0x6f],esi
  41f0e8:	dec    esi
  41f0e9:	dec    esp
  41f0ea:	outs   dx,BYTE PTR ds:[esi]
  41f0eb:	iret   
  41f0ec:	js     0x41f0f8
  41f0ee:	repnz arpl WORD PTR [edi+0x45],ax
  41f0f2:	or     DWORD PTR [ebx-0x43],ebp
  41f0f5:	mov    ebp,0xbd7e1cc7
  41f0fa:	ret    0x8525
  41f0fd:	cmp    al,0xc
  41f100:	mov    WORD PTR [edi-0x6122c77],?
  41f106:	sub    eax,0x676d0b37
  41f10b:	xchg   DWORD PTR [ecx+edx*1+0x3],esp
  41f10f:	loopne 0x41f093
  41f111:	fidivr DWORD PTR [edi+ecx*1-0x4536ca20]
  41f118:	lods   al,BYTE PTR ds:[esi]
  41f119:	cwde   
  41f11a:	in     eax,dx
  41f11b:	(bad)
  41f11e:	stos   BYTE PTR es:[edi],al
  41f11f:	or     bl,ah
  41f121:	mov    edi,0xf9537ade
  41f126:	and    eax,0xe1482e3b
  41f12b:	sbb    al,0xbf
  41f12d:	fst    QWORD PTR [ecx-0x6c]
  41f130:	add    DWORD PTR fs:0x709c867a,ebx
  41f137:	adc    eax,0x293fd9d4
  41f13c:	jb     0x41f140
  41f13e:	mov    eax,0xef75
	...
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [ecx+0x6f],eax
  41f1c2:	inc    esp
  41f1c3:	(bad)  
  41f1c4:	fisttp QWORD PTR [ebp+0x1]
  41f1c7:	add    ch,dh
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [esi+0x70f5980b],ch
  41f1d1:	outs   dx,BYTE PTR ds:[esi]
  41f1d2:	imul   edi,DWORD PTR [ebp-0x7b],0x3f
  41f1d6:	mov    ch,0xf5
  41f1d8:	jno    0x41f1c0
  41f1da:	jmp    0x41f1e3
  41f1dc:	ins    DWORD PTR es:[edi],dx
  41f1dd:	in     al,dx
  41f1de:	scas   eax,DWORD PTR es:[edi]
  41f1df:	inc    edx
  41f1e0:	stc    
  41f1e1:	imul   ebx,DWORD PTR [ecx+0x4d],0xffffff80
  41f1e5:	or     DWORD PTR [eax+0x2bcb27ed],ecx
  41f1eb:	ror    DWORD PTR [esp+ecx*8],1
  41f1ee:	pop    dx
  41f1f0:	or     bh,ah
  41f1f2:	shl    BYTE PTR [eax-0x44],cl
  41f1f5:	enter  0x27,0x27
  41f1f9:	pop    edi
  41f1fa:	jno    0x41f20a
  41f1fc:	xlat   BYTE PTR cs:[ebx]
  41f1fe:	mov    dh,0x75
  41f200:	in     eax,dx
  41f201:	xor    eax,0xdd8ef39f
  41f206:	clc    
  41f207:	inc    esi
  41f208:	adc    DWORD PTR [edx+0x43],ecx
  41f20b:	adc    DWORD PTR [eax+0x7f570e4a],ecx
  41f211:	ror    bh,0x32
  41f214:	jbe    0x41f23b
  41f216:	pop    ds
  41f217:	sub    esi,esi
  41f219:	xchg   ecx,eax
  41f21a:	sbb    DWORD PTR [edx-0x6],eax
  41f21d:	sti    
  41f21e:	inc    BYTE PTR [eax]
  41f220:	rol    dl,1
  41f222:	pop    dx
  41f224:	pop    es
  41f225:	sub    eax,ebp
  41f227:	test   eax,0xbd9d0853
  41f22c:	addr16 inc edx
  41f22e:	dec    eax
  41f22f:	dec    eax
  41f230:	push   edi
  41f231:	js     0x41f244
  41f233:	imul   edx,edi,0xffffffb6
  41f236:	pop    eax
  41f237:	(bad)  
  41f238:	repz mov edi,0xa90c1a86
  41f23e:	xchg   edx,eax
  41f23f:	adc    eax,0x198a45f4
  41f244:	daa    
  41f245:	shr    BYTE PTR [eax-0x57],0xc
  41f249:	xor    esp,esp
  41f24b:	nop
  41f24c:	pop    esp
  41f24d:	repnz stos DWORD PTR es:[edi],eax
  41f24f:	push   ss
  41f250:	pop    esp
  41f251:	stos   BYTE PTR es:[edi],al
  41f252:	push   edx
  41f253:	stos   DWORD PTR es:[edi],eax
  41f254:	mov    ebp,0xa8aa6f15
  41f259:	add    al,0x3f
  41f25b:	and    DWORD PTR [esi-0x7132438b],ecx
  41f261:	addr16 mov eax,0xe748a3cf
  41f267:	and    esi,DWORD PTR [ebp+0x2f2bb52b]
  41f26d:	and    eax,0xc4ba034a
  41f272:	out    0xd0,al
  41f274:	adc    dh,BYTE PTR [ebp-0x6]
  41f277:	adc    BYTE PTR [ebx-0x20],bl
  41f27a:	je     0x41f2df
  41f27c:	cwde   
  41f27d:	mov    dl,0x3e
  41f27f:	and    eax,0xfd0af505
  41f284:	lods   eax,DWORD PTR ds:[esi]
  41f285:	cld    
  41f286:	mov    ds,WORD PTR [esi+0x7c]
  41f289:	xchg   esp,eax
  41f28a:	adc    eax,0x79c1e8c8
  41f28f:	sub    DWORD PTR [eax+ebx*2-0x6f],0xfffffff9
  41f294:	xor    eax,0x4db375b5
  41f299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f29a:	repz sbb al,0x69
  41f29d:	popa   
  41f29e:	dec    eax
  41f29f:	iret   
  41f2a0:	push   0x84d8b5dd
  41f2a5:	out    0x16,al
  41f2a7:	ss cwde 
  41f2a9:	mov    edi,0x675f8f9
  41f2ae:	in     al,dx
  41f2af:	gs (bad) 
  41f2b1:	aaa    
  41f2b2:	sti    
  41f2b3:	and    BYTE PTR [edx],0x15
  41f2b6:	retf   0xdae4
  41f2b9:	mov    ebx,0x1fe0fbec
  41f2be:	dec    ecx
  41f2bf:	lods   eax,DWORD PTR ds:[esi]
  41f2c0:	cmp    BYTE PTR [eax],al
	...
  41f332:	add    BYTE PTR [eax],al
  41f334:	mov    DWORD PTR [edx],edx
  41f336:	ja     0x41f357
  41f338:	(bad)  
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x103:0x1a9531a0
  41f343:	(bad)  
  41f345:	dec    esi
  41f346:	add    DWORD PTR [eax],eax
  41f348:	cmc    
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    BYTE PTR [ebx-0x42],dh
  41f34e:	sbb    eax,0x51dcce2b
  41f353:	cdq    
  41f354:	sub    DWORD PTR [ebx-0xb0e04e1],ebx
  41f35a:	pop    ebp
  41f35b:	cli    
  41f35c:	shr    BYTE PTR [eax+eax*8+0x8b58a05],0x7b
  41f364:	xchg   DWORD PTR [ebx-0xb56e1ef],ebx
  41f36a:	aam    0x6d
  41f36c:	fild   DWORD PTR [esi-0x78311847]
  41f372:	(bad)  
  41f373:	xchg   esp,eax
  41f374:	sar    DWORD PTR [ecx],1
  41f376:	sbb    DWORD PTR [edi-0x58],ebp
  41f379:	aaa    
  41f37a:	cmp    eax,0x752742f2
  41f37f:	add    eax,0x19510468
  41f384:	add    al,BYTE PTR [eax-0x2f]
  41f387:	cmp    esi,DWORD PTR [ebx-0xb352313]
  41f38d:	leave  
  41f38e:	push   0x1e
  41f390:	push   edx
  41f391:	stos   BYTE PTR es:[edi],al
  41f392:	dec    edx
  41f393:	push   ebx
  41f394:	loope  0x41f364
  41f396:	sbb    DWORD PTR [ecx+0x20af77d],ebp
  41f39c:	dec    esi
  41f39d:	mov    al,0x50
  41f39f:	add    ebx,DWORD PTR [eax+esi*2-0x6d561d07]
  41f3a6:	mov    esp,0x158c373d
  41f3ab:	(bad)
  41f3ae:	inc    esp
  41f3af:	je     0x41f35f
  41f3b1:	jne    0x41f385
  41f3b3:	inc    eax
  41f3b4:	shl    BYTE PTR [edi-0x29d03f9d],0xc3
  41f3bb:	push   edx
  41f3bc:	sbb    al,0xc1
  41f3be:	pop    esp
  41f3bf:	lock push edi
  41f3c1:	mov    ds:0xc41fcf67,al
  41f3c6:	mov    eax,ds:0xb6fb3ce4
  41f3cb:	inc    edi
  41f3cc:	jl     0x41f3d3
  41f3ce:	loope  0x41f35f
  41f3d0:	ja     0x41f394
  41f3d2:	mov    bh,0x59
  41f3d4:	dec    eax
  41f3d5:	rcr    DWORD PTR [ebp-0x4a],1
  41f3d8:	and    ah,bh
  41f3da:	xchg   esi,eax
  41f3db:	jb     0x41f418
  41f3dd:	iret   
  41f3de:	pop    esi
  41f3df:	xchg   ebp,eax
  41f3e0:	test   eax,0xe6171412
  41f3e5:	idiv   al
  41f3e7:	xchg   DWORD PTR [eax+ecx*4],eax
  41f3ea:	xchg   ebx,eax
  41f3eb:	out    0xa8,al
  41f3ed:	ss aad 0x8c
  41f3f0:	lock pushf 
  41f3f2:	ss jp  0x41f41d
  41f3f5:	xchg   esp,eax
  41f3f6:	xor    dh,cl
  41f3f8:	pop    es
  41f3f9:	loope  0x41f467
  41f3fb:	adc    eax,0x52c798ee
  41f400:	mov    WORD PTR [ecx],?
  41f402:	cmp    DWORD PTR [ebp-0x20],edi
  41f405:	aad    0xc8
  41f407:	mov    esp,0x92ff23d6
  41f40c:	ror    edi,1
  41f40e:	mov    eax,DWORD PTR [edx-0x49590f16]
  41f414:	xchg   ebx,eax
  41f415:	xor    eax,0xea2f69fe
  41f41a:	das    
  41f41b:	add    al,0xce
  41f41d:	sub    ebx,0x43
  41f420:	fistp  DWORD PTR [eax+ebp*8-0x7e]
  41f424:	mov    esi,0xd7d3f393
  41f429:	add    al,0x26
  41f42b:	or     cl,BYTE PTR [edi]
  41f42d:	jnp    0x41f425
  41f42f:	dec    edi
  41f430:	dec    esp
  41f431:	pop    esp
  41f432:	and    al,0x5c
  41f434:	sbb    BYTE PTR [eax-0x4ec80755],ch
  41f43a:	test   eax,0x1ad6066a
  41f43f:	loop   0x41f3d4
	...
  41f4b1:	add    BYTE PTR [eax],al
  41f4b3:	add    BYTE PTR [eax],ah
  41f4b5:	push   0xffffffcb
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0xb1
  41f4c1:	xchg   esp,eax
  41f4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4c3:	dec    edi
  41f4c4:	(bad)  
  41f4c5:	dec    edi
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	cmc    
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    BYTE PTR [ecx],bl
  41f4cd:	add    al,0xe9
  41f4cf:	aas    
  41f4d0:	push   ss
  41f4d1:	pop    esp
  41f4d2:	inc    esp
  41f4d3:	sahf   
  41f4d4:	hlt    
  41f4d5:	mov    esp,0xb68cd29f
  41f4da:	xchg   ebp,eax
  41f4db:	mov    ds:0xc636b92e,al
  41f4e0:	into   
  41f4e1:	in     eax,0x8c
  41f4e3:	push   edx
  41f4e4:	cmp    eax,0x218996ae
  41f4e9:	sbb    BYTE PTR [ebx+0x1c370ba5],0x89
  41f4f0:	cmc    
  41f4f1:	inc    edi
  41f4f2:	adc    eax,0x7da57937
  41f4f7:	jp     0x41f48a
  41f4f9:	imul   eax,DWORD PTR [eax],0x6e
  41f4fc:	and    al,0xb3
  41f4fe:	inc    ebx
  41f4ff:	sub    eax,0xcc63f3cc
  41f504:	daa    
  41f505:	dec    eax
  41f506:	sbb    eax,0x2a52429c
  41f50b:	ja     0x41f57d
  41f50d:	adc    BYTE PTR [esi],dl
  41f50f:	mov    cs,WORD PTR [ebx]
  41f511:	xor    edx,esi
  41f513:	mov    ch,0xb3
  41f515:	enter  0x6cbe,0x1a
  41f519:	not    BYTE PTR [eax+0x51]
  41f51c:	cld    
  41f51d:	sub    eax,0x46d0df93
  41f522:	sti    
  41f523:	push   ebp
  41f524:	mov    ?,WORD PTR [edi]
  41f526:	fwait
  41f527:	ins    BYTE PTR es:[edi],dx
  41f528:	xchg   edx,eax
  41f529:	cmp    BYTE PTR [edi+0x51],ch
  41f52c:	aam    0x6b
  41f52e:	jbe    0x41f4f9
  41f530:	adc    al,0x24
  41f532:	and    DWORD PTR [ebp-0x43],edx
  41f535:	icebp  
  41f536:	sub    bl,0xd8
  41f539:	inc    esi
  41f53a:	add    ecx,DWORD PTR [eax+0x4a]
  41f53d:	test   eax,0xf5a0b67e
  41f542:	or     esp,ecx
  41f544:	cmp    DWORD PTR [ecx-0x735685dc],esi
  41f54a:	aaa    
  41f54b:	xchg   DWORD PTR [esi+esi*8],esi
  41f54e:	cmp    DWORD PTR [ecx+0x69],esp
  41f551:	lods   al,BYTE PTR ds:[esi]
  41f552:	rcr    DWORD PTR [esi],cl
  41f554:	mov    ds:0xfd91eb01,al
  41f559:	leave  
  41f55a:	fistp  QWORD PTR [esi+0x7443a7bc]
  41f560:	ror    cl,0x37
  41f563:	pop    ebx
  41f564:	push   ss
  41f565:	shl    DWORD PTR [ecx-0xe],cl
  41f568:	jns    0x41f5c0
  41f56a:	xlat   BYTE PTR ds:[ebx]
  41f56b:	mov    edi,0xc29300b2
  41f570:	pushf  
  41f571:	cmp    BYTE PTR [edx-0x40755e4],ch
  41f577:	fcomp  st(5)
  41f579:	stos   DWORD PTR es:[edi],eax
  41f57a:	leave  
  41f57b:	fwait
  41f57c:	xor    eax,0x9c301745
  41f581:	ins    BYTE PTR es:[edi],dx
  41f582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f583:	fwait
  41f584:	and    eax,DWORD PTR [eax]
  41f586:	adc    eax,0x50daafee
  41f58b:	fst    DWORD PTR [edi+0x56]
  41f58e:	int3   
  41f58f:	jg     0x41f5de
  41f591:	push   ecx
  41f592:	cmp    eax,0xefcfcf01
  41f597:	repz mov al,ds:0x877fbb77
  41f59d:	sub    al,bl
  41f59f:	in     al,dx
  41f5a0:	sub    al,BYTE PTR [edx+0x43]
  41f5a3:	inc    esp
  41f5a4:	je     0x41f611
  41f5a6:	sbb    dl,BYTE PTR [edi-0x1f]
  41f5a9:	cmp    eax,0x7b7263d4
  41f5ae:	std    
  41f5af:	push   ebx
  41f5b0:	dec    edx
  41f5b1:	daa    
  41f5b2:	pusha  
  41f5b3:	cwde   
  41f5b4:	inc    eax
  41f5b5:	push   ebx
  41f5b6:	sub    ecx,DWORD PTR [eax+0x5b]
  41f5b9:	jo     0x41f5f4
  41f5bb:	inc    esp
  41f5bc:	add    BYTE PTR ds:0xdfbe,dl
	...
  41f631:	add    BYTE PTR [eax],al
  41f633:	add    ch,al
  41f635:	cwde   
  41f636:	loope  0x41f68d
  41f638:	std    
  41f639:	jge    0x41f630
  41f63b:	cwde   
  41f63c:	and    eax,0x7a01e835
  41f641:	fnstcw WORD PTR [edx+ebp*4-0x44]
  41f645:	push   eax
  41f646:	add    DWORD PTR [eax],eax
  41f648:	cmc    
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    ch,ch
  41f64d:	sbb    ah,cl
  41f64f:	dec    esi
  41f650:	hlt    
  41f651:	lahf   
  41f652:	loope  0x41f648
  41f654:	xor    dl,BYTE PTR [eax+0x68]
  41f657:	mov    ah,0xf4
  41f659:	jns    0x41f67a
  41f65b:	pop    ebp
  41f65c:	call   0x9418:0xe462f293
  41f663:	jmp    0x41f643
  41f665:	inc    edx
  41f666:	fstp   QWORD PTR ds:0xd8b5ff40
  41f66c:	mov    al,ds:0x68e2f96b
  41f671:	xchg   ebx,eax
  41f672:	xor    DWORD PTR [edx+0x2afd07ca],esp
  41f678:	std    
  41f679:	add    DWORD PTR [eax+0x77],0x382ec879
  41f680:	iret   
  41f681:	call   0x20a1:0xec3a3782
  41f688:	loop   0x41f6f0
  41f68a:	mov    edx,0x6683b37d
  41f68f:	mov    al,ds:0xecfb847f
  41f694:	aaa    
  41f695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f696:	xchg   BYTE PTR [esi-0x3a],al
  41f699:	mov    ?,ecx
  41f69b:	call   0xe61e1afb
  41f6a0:	fs xchg edx,eax
  41f6a2:	dec    esi
  41f6a3:	xor    eax,0x40a36268
  41f6a8:	mov    ah,0x89
  41f6aa:	dec    esi
  41f6ab:	(bad)  
  41f6ac:	sbb    BYTE PTR [edx-0x1],bl
  41f6af:	sbb    eax,0xc7c45d00
  41f6b4:	mov    bh,0x7f
  41f6b6:	fisttp DWORD PTR [eax+ebx*4+0x1d7b93cd]
  41f6bd:	xchg   edx,eax
  41f6be:	fstp   QWORD PTR [ecx]
  41f6c0:	mov    ah,0x97
  41f6c2:	pop    eax
  41f6c3:	pop    esp
  41f6c4:	arpl   dx,cx
  41f6c6:	int3   
  41f6c7:	clc    
  41f6c8:	jae    0x41f687
  41f6ca:	mov    al,ds:0xcec974c3
  41f6cf:	mov    edi,0xd2560a1b
  41f6d4:	pushf  
  41f6d5:	out    dx,eax
  41f6d6:	aad    0x56
  41f6d8:	(bad)  
  41f6d9:	popf   
  41f6da:	jecxz  0x41f74f
  41f6dc:	pop    edx
  41f6dd:	push   es
  41f6de:	aam    0xcf
  41f6e0:	and    ch,BYTE PTR ds:0xa76b51ab
  41f6e6:	and    DWORD PTR ds:[ecx-0x657dc3e6],esp
  41f6ed:	mov    ebx,0xa288ff80
  41f6f2:	mov    esp,DWORD PTR fs:[ebp-0x57]
  41f6f6:	popa   
  41f6f7:	and    esi,DWORD PTR ds:0x1ad4fb9c
  41f6fd:	inc    ebp
  41f6fe:	loopne 0x41f6cb
  41f700:	sub    DWORD PTR [esi],ebp
  41f702:	sub    al,0x6d
  41f704:	push   eax
  41f705:	jmp    0x6c884173
  41f70a:	sar    DWORD PTR [esi],1
  41f70c:	rol    dl,1
  41f70e:	or     esp,eax
  41f710:	pop    ds
  41f711:	outs   dx,BYTE PTR ds:[esi]
  41f712:	clc    
  41f713:	jmp    0x41f70c
  41f715:	mov    fs,WORD PTR [ecx]
  41f717:	mov    cl,0xd5
  41f719:	popf   
  41f71a:	xor    edi,DWORD PTR [ebx+0xb]
  41f71d:	stc    
  41f71e:	jmp    0x9382:0xa9bc90ab
  41f725:	add    al,0x95
  41f727:	lods   eax,DWORD PTR ds:[esi]
  41f728:	sub    eax,0x422e01e1
  41f72d:	and    eax,ebp
  41f72f:	cs push edx
  41f731:	out    dx,eax
  41f732:	mov    edx,0x9981f4b5
  41f737:	out    0x1f,eax
  41f739:	pop    es
  41f73a:	pop    ebx
  41f73b:	aas    
  41f73c:	jo     0x41f711
  41f73e:	sbb    dh,dh
  41f740:	adc    DWORD PTR [eax],eax
	...
  41f7b2:	add    BYTE PTR [eax],al
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	popf   
  41f7c1:	add    BYTE PTR [ebx],ch
  41f7c3:	mov    ds:0x151b1,al
  41f7c8:	cmc    
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [edx],bh
  41f7cd:	fucom  st(6)
  41f7cf:	nop
  41f7d0:	push   0x83ffdb33
  41f7d5:	ror    BYTE PTR [edx+0x52461bb1],1
  41f7db:	popf   
  41f7dc:	pop    eax
  41f7dd:	pop    ecx
  41f7de:	pop    es
  41f7df:	sub    BYTE PTR [ebp+ebp*2-0x70],0xcd
  41f7e4:	fild   WORD PTR [eax-0x3d4c577]
  41f7ea:	pop    ss
  41f7eb:	pushf  
  41f7ec:	repz shr WORD PTR [ebx],0x33
  41f7f1:	out    dx,al
  41f7f2:	cwde   
  41f7f3:	push   0x9167a52c
  41f7f8:	shl    DWORD PTR [eax],1
  41f7fa:	push   ss
  41f7fb:	dec    eax
  41f7fc:	loop   0x41f81b
  41f7fe:	xor    DWORD PTR [eax],edi
  41f800:	mov    WORD PTR [edi+0x5e53e093],?
  41f806:	test   DWORD PTR [esi-0x35fdac6d],edx
  41f80c:	in     al,0xd0
  41f80e:	sbb    esi,0x81d6a1f1
  41f814:	arpl   WORD PTR [esi-0x2e2958c6],di
  41f81a:	fwait
  41f81b:	jbe    0xa5ce3f5
  41f821:	mov    edi,ebx
  41f823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f824:	pusha  
  41f825:	lock lods al,BYTE PTR ds:[esi]
  41f827:	scas   al,BYTE PTR es:[edi]
  41f828:	mov    al,dl
  41f82a:	xlat   BYTE PTR es:[ebx]
  41f82c:	sub    BYTE PTR [ecx+ecx*2+0x2d],bl
  41f830:	pushf  
  41f831:	jb     0x41f87e
  41f833:	cmc    
  41f834:	jbe    0x41f846
  41f836:	rol    dh,0x67
  41f839:	repnz pop edx
  41f83b:	loop   0x41f8a1
  41f83d:	out    0x3b,al
  41f83f:	push   edx
  41f840:	sbb    BYTE PTR [ecx-0x44],0x3f
  41f844:	mov    BYTE PTR [eax],ah
  41f846:	daa    
  41f847:	dec    edi
  41f848:	fcomp  DWORD PTR [edi+0x5a9d6e94]
  41f84e:	(bad)  
  41f84f:	sub    edi,DWORD PTR ds:0xa4e0595f
  41f855:	push   ebx
  41f856:	icebp  
  41f857:	sbb    esi,esi
  41f859:	add    esi,DWORD PTR [edi+0x6824fa3]
  41f85f:	add    esp,DWORD PTR [edx]
  41f861:	je     0x41f864
  41f863:	mov    dh,BYTE PTR [ecx+0x75de134b]
  41f869:	cld    
  41f86a:	scas   eax,DWORD PTR es:[edi]
  41f86b:	mov    ebp,cs
  41f86d:	sub    ch,BYTE PTR [edi-0x13]
  41f870:	js     0x41f8e0
  41f872:	xor    BYTE PTR [ecx],ah
  41f874:	scas   al,BYTE PTR es:[edi]
  41f875:	push   esp
  41f876:	mov    ebx,0x80326608
  41f87b:	jl     0x41f8d7
  41f87d:	or     al,0x73
  41f87f:	push   0x76ed2ea0
  41f884:	mov    eax,0x8fe79bae
  41f889:	xchg   DWORD PTR [esi-0x68],esp
  41f88c:	cs (bad) 
  41f88e:	rdtsc  
  41f890:	loop   0x41f850
  41f892:	cs (bad) 
  41f894:	jp     0x41f8cc
  41f896:	(bad)  
  41f897:	adc    DWORD PTR [esi],esi
  41f899:	(bad)  
  41f89a:	xchg   edi,eax
  41f89b:	out    dx,al
  41f89c:	dec    ecx
  41f89d:	es mov cl,0xb9
  41f8a0:	rol    DWORD PTR [edx+0x69],1
  41f8a3:	push   ebx
  41f8a4:	xchg   ecx,eax
  41f8a5:	xor    dh,BYTE PTR [edi-0x5a7770fd]
  41f8ab:	xor    eax,eax
  41f8ad:	shl    BYTE PTR [eax],cl
  41f8af:	mov    ecx,0x67049a2
  41f8b4:	dec    ecx
  41f8b5:	stos   BYTE PTR es:[edi],al
  41f8b6:	(bad)  
  41f8b7:	xor    ecx,0xafdb0828
  41f8bd:	xor    DWORD PTR [ecx+edx*4],esp
  41f8c0:	rol    DWORD PTR [eax],cl
	...
  41f932:	add    BYTE PTR [eax],al
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0xb19ffef7
  41f941:	ret    
  41f942:	dec    edi
  41f943:	out    0xa6,al
  41f945:	push   edx
  41f946:	add    DWORD PTR [eax],eax
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    ah,bh
  41f94d:	push   es
  41f94e:	in     al,0xcb
  41f950:	mov    esp,es
  41f952:	jge    0x41f9d1
  41f954:	(bad)  
  41f955:	int3   
  41f956:	mov    cl,0x59
  41f958:	test   eax,0x9b528467
  41f95d:	xor    BYTE PTR [edi-0x1b03446d],ah
  41f963:	(bad)  
  41f964:	pop    eax
  41f965:	or     eax,0xe0ebf36
  41f96a:	or     BYTE PTR [edi-0x5bfafa1f],al
  41f970:	icebp  
  41f971:	das    
  41f972:	mov    eax,ds:0x364bc8f1
  41f977:	imul   edi,DWORD PTR [ecx-0x3e],0x634d9ead
  41f97e:	stos   BYTE PTR es:[edi],al
  41f97f:	es and eax,0xda2cc5bf
  41f985:	dec    ecx
  41f986:	enter  0x2312,0xc
  41f98a:	xor    esi,DWORD PTR [edx]
  41f98c:	inc    esp
  41f98d:	or     BYTE PTR [edi+0x677cd6bc],dh
  41f993:	push   eax
  41f994:	daa    
  41f995:	pop    ebx
  41f996:	xor    DWORD PTR [edi+edi*8-0x69821388],esp
  41f99d:	and    ah,BYTE PTR [esi]
  41f99f:	sbb    eax,esp
  41f9a1:	mov    eax,0x7cf96cf6
  41f9a6:	xchg   DWORD PTR [edx-0x27],ebx
  41f9a9:	dec    edx
  41f9aa:	cs push ebp
  41f9ac:	mov    cl,0xb7
  41f9ae:	and    BYTE PTR [edi],dl
  41f9b0:	jmp    FWORD PTR [edi-0x2b65867]
  41f9b6:	jns    0x41f953
  41f9b8:	adc    eax,DWORD PTR [ebp+0x2]
  41f9bb:	add    esp,DWORD PTR [edi+edi*8-0x2e]
  41f9bf:	call   0xacb2:0x27ec68f6
  41f9c6:	fidivr WORD PTR [edx+0x433caa9d]
  41f9cc:	mov    esp,0x282143c2
  41f9d1:	mov    ah,ch
  41f9d3:	pusha  
  41f9d4:	xchg   edi,eax
  41f9d5:	pop    edx
  41f9d6:	ja     0x41fa4f
  41f9d8:	mov    bh,BYTE PTR [ecx+0x3c]
  41f9db:	inc    edi
  41f9dc:	iret   
  41f9dd:	ja     0x41f96e
  41f9df:	mov    dl,0xef
  41f9e1:	hlt    
  41f9e2:	or     edi,eax
  41f9e4:	jl     0x41f9d1
  41f9e6:	mov    cl,dh
  41f9e8:	retf   
  41f9e9:	push   0x304dadb0
  41f9ee:	cmp    eax,0x3213946
  41f9f3:	xchg   ecx,eax
  41f9f4:	jmp    0x41fa3e
  41f9f6:	add    eax,0x5d468e27
  41f9fb:	cmp    dh,BYTE PTR [ebx+0x60877d79]
  41fa01:	stos   DWORD PTR es:[edi],eax
  41fa02:	mov    ebp,0x7ec18e3b
  41fa07:	(bad)  
  41fa08:	das    
  41fa09:	add    eax,0xc18767b4
  41fa0e:	enter  0x983,0xb3
  41fa12:	cmp    BYTE PTR [ecx+0x6b],bh
  41fa15:	inc    ecx
  41fa16:	imul   eax,esi,0xbc0520ed
  41fa1c:	sbb    eax,0x4abf7099
  41fa21:	fs or  eax,0x1a79839f
  41fa27:	inc    ecx
  41fa28:	pop    ds
  41fa29:	retf   
  41fa2a:	pop    ebx
  41fa2b:	scas   al,BYTE PTR es:[edi]
  41fa2c:	adc    ah,dh
  41fa2e:	cmp    esi,DWORD PTR [eax+0x3e]
  41fa31:	pushf  
  41fa32:	xchg   edx,eax
  41fa33:	int    0x21
  41fa35:	and    esi,esi
  41fa37:	jnp    0x41fa88
  41fa39:	add    BYTE PTR [eax+0x3a706e28],cl
  41fa3f:	repnz mov edx,0x0
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	jle    0x41fb30
  41fac2:	jns    0x41fb10
  41fac4:	fwait
  41fac5:	push   ebx
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	cmc    
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    bl,ah
  41facd:	mov    eax,0x9d1349d0
  41fad2:	sub    eax,0x8515b9ed
  41fad7:	pop    edx
  41fad8:	mov    edx,0x5a946c34
  41fadd:	ret    
  41fade:	stc    
  41fadf:	jns    0x41fab9
  41fae1:	pop    ebp
  41fae2:	mov    ebx,0x454b8b27
  41fae7:	inc    esi
  41fae8:	cld    
  41fae9:	jl     0x41fabb
  41faeb:	daa    
  41faec:	hlt    
  41faed:	mov    dh,0x9f
  41faef:	or     dh,BYTE PTR [esp+eiz*2+0x68]
  41faf3:	xchg   esi,esp
  41faf5:	idiv   BYTE PTR cs:[edi]
  41faf8:	fs loopne 0x41fb76
  41fafb:	cmp    edi,DWORD PTR [edx-0x6514aca8]
  41fb01:	xor    edx,DWORD PTR [edi-0x2a0f0b71]
  41fb07:	jl     0x41fb6a
  41fb09:	(bad)  
  41fb0a:	out    dx,eax
  41fb0b:	test   DWORD PTR [eax-0x26755878],0x42237e2f
  41fb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb16:	mov    edi,0xf40bd7c
  41fb1b:	popa   
  41fb1c:	out    0x9,al
  41fb1e:	pop    ss
  41fb1f:	jle    0x41fb96
  41fb21:	xor    ebx,ebp
  41fb23:	cli    
  41fb24:	push   ebp
  41fb25:	and    ebp,DWORD PTR [ebp+esi*1+0x35e421e0]
  41fb2c:	cmp    BYTE PTR [eax-0x308d06a5],cl
  41fb32:	pop    ecx
  41fb33:	mov    ebx,0x269116a2
  41fb38:	lods   eax,DWORD PTR ds:[esi]
  41fb39:	mul    BYTE PTR [eax-0x2e]
  41fb3c:	jne    0x41faf3
  41fb3e:	lds    esi,FWORD PTR ds:0x5397b344
  41fb44:	inc    edi
  41fb45:	mov    cl,0x61
  41fb47:	and    ah,al
  41fb49:	rcl    BYTE PTR [ecx+0x7499700e],0x95
  41fb50:	pop    ecx
  41fb51:	jbe    0x41faea
  41fb53:	into   
  41fb54:	outs   dx,DWORD PTR ds:[esi]
  41fb55:	jnp    0x41faf7
  41fb57:	pop    esi
  41fb58:	jp     0x41fb30
  41fb5a:	into   
  41fb5b:	pop    edi
  41fb5c:	push   edx
  41fb5d:	aas    
  41fb5e:	push   cs
  41fb5f:	popa   
  41fb60:	pop    ss
  41fb61:	push   ds
  41fb62:	sti    
  41fb63:	mov    ah,0x89
  41fb65:	push   cs
  41fb66:	dec    edx
  41fb67:	pushf  
  41fb68:	xchg   al,bh
  41fb6a:	jle    0x41fb6b
  41fb6c:	in     al,dx
  41fb6d:	jae    0x41fb21
  41fb6f:	xchg   esp,eax
  41fb70:	xor    edi,DWORD PTR [ebx+0x70]
  41fb73:	mov    ebp,0xe2bb62e3
  41fb78:	sub    ebx,DWORD PTR [esp+edi*1-0x60]
  41fb7c:	adc    edx,ebp
  41fb7e:	xchg   ebx,eax
  41fb7f:	rcr    DWORD PTR [edi+0x15f1bd9b],cl
  41fb85:	mov    ds:0x1e44f146,al
  41fb8a:	das    
  41fb8b:	push   edi
  41fb8c:	dec    edi
  41fb8d:	mov    ds:0xe6247e45,al
  41fb92:	pop    es
  41fb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb94:	and    al,cl
  41fb96:	jg     0x41fbe8
  41fb98:	(bad)  
  41fb99:	nop
  41fb9a:	push   ebx
  41fb9b:	push   ss
  41fb9c:	jmp    0xd093ebd6
  41fba1:	call   0x7c9:0xb6dabe86
  41fba8:	popf   
  41fba9:	lahf   
  41fbaa:	mov    esp,0x6911a2b0
  41fbaf:	push   ebp
  41fbb0:	jae    0x41fbdb
  41fbb2:	popa   
  41fbb3:	fcomi  st,st(4)
  41fbb5:	sub    eax,0x5b2d0302
  41fbba:	and    al,BYTE PTR [edx+edi*8-0x67]
  41fbbe:	ja     0x41fb74
  41fbc0:	jmp    0x0:0x0
	...
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x51628ad2
  41fc42:	mov    ds:0x15490d2,al
  41fc47:	add    ch,dh
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    BYTE PTR [esi-0x2],bh
  41fc4e:	mov    esi,0xa7a35d55
  41fc53:	popa   
  41fc54:	add    DWORD PTR [ebp-0x6bb682b9],esp
  41fc5a:	fistp  QWORD PTR [ebp+0x17]
  41fc5d:	add    BYTE PTR ds:0x68bf1b57,dh
  41fc63:	xchg   ecx,eax
  41fc64:	imul   ecx,DWORD PTR [ebp+0x4e],0xffffffe8
  41fc68:	lods   al,BYTE PTR ds:[esi]
  41fc69:	mov    bh,0xa0
  41fc6b:	xchg   esi,eax
  41fc6c:	aad    0xfc
  41fc6e:	jmp    0x825e55a3
  41fc73:	stc    
  41fc74:	jle    0x41fcc6
  41fc76:	or     edx,ecx
  41fc78:	sub    BYTE PTR [esi+0x4f],0x8b
  41fc7c:	jae    0x41fc5d
  41fc7e:	sub    eax,0x70a8d273
  41fc83:	pusha  
  41fc84:	push   edi
  41fc85:	mov    ds:0xb007a15a,al
  41fc8a:	pushf  
  41fc8b:	push   ds
  41fc8c:	icebp  
  41fc8d:	add    BYTE PTR ds:0xfaeab5a0,dh
  41fc93:	dec    edi
  41fc94:	push   ebx
  41fc95:	push   cs
  41fc96:	mov    dh,0x14
  41fc98:	pop    eax
  41fc99:	dec    ebx
  41fc9a:	adc    ecx,ecx
  41fc9c:	outs   dx,BYTE PTR ds:[esi]
  41fc9d:	mov    eax,ds:0xe1647829
  41fca2:	pushf  
  41fca3:	iret   
  41fca4:	test   BYTE PTR [esi+0x1b],ch
  41fca7:	call   0x44de:0xbfda9311
  41fcae:	jecxz  0x41fc4c
  41fcb0:	sbb    eax,0xbe6f82d7
  41fcb5:	mov    esp,0xd1d72dea
  41fcba:	xor    BYTE PTR [esi],al
  41fcbc:	seto   BYTE PTR [ebp+0x7a]
  41fcc0:	jne    0x41fd3e
  41fcc2:	loope  0x41fc8f
  41fcc4:	mov    dh,0x62
  41fcc6:	out    0xe4,eax
  41fcc8:	jns    0x41fcae
  41fcca:	ja     0x41fd2c
  41fccc:	into   
  41fccd:	push   ebx
  41fcce:	jns    0x41fcfd
  41fcd0:	xchg   edx,eax
  41fcd1:	adc    eax,0x8f47ae58
  41fcd6:	inc    esi
  41fcd7:	sbb    eax,0x9580b9a3
  41fcdc:	inc    eax
  41fcdd:	and    edx,DWORD PTR [edi-0x59]
  41fce0:	(bad)  
  41fce1:	cld    
  41fce2:	loopne 0x41fcf5
  41fce4:	jbe    0x41fcb1
  41fce6:	or     BYTE PTR [ebx+0x36e54b4b],cl
  41fcec:	or     ebp,esp
  41fcee:	mov    esi,0x65f5f618
  41fcf3:	xchg   BYTE PTR [eax-0x3ed0e8d8],ch
  41fcf9:	adc    esi,DWORD PTR [edi]
  41fcfb:	in     eax,0xd1
  41fcfd:	dec    esp
  41fcfe:	add    eax,0xc68c418e
  41fd03:	pop    DWORD PTR [eax+0x20435ad9]
  41fd09:	cld    
  41fd0a:	jo     0x41fd5c
  41fd0c:	adc    al,dh
  41fd0e:	mov    ch,0xe4
  41fd10:	fmul   QWORD PTR [ebx+0x4d69417b]
  41fd16:	ds dec esp
  41fd18:	(bad)  
  41fd19:	(bad)  
  41fd1a:	in     al,0x83
  41fd1c:	lahf   
  41fd1d:	mov    cs,WORD PTR [edx-0x7d008577]
  41fd23:	sbb    edx,ebp
  41fd25:	arpl   WORD PTR [esi+0x64081faa],bp
  41fd2b:	inc    edx
  41fd2c:	lds    ecx,FWORD PTR [eax-0x5c543b2a]
  41fd32:	pushf  
  41fd33:	nop
  41fd34:	mov    dh,0xf9
  41fd36:	aam    0x24
  41fd38:	jns    0x41fcc4
  41fd3a:	inc    ecx
  41fd3b:	scas   al,BYTE PTR es:[edi]
  41fd3c:	jns    0x41fd5d
  41fd3e:	clc    
  41fd3f:	push   es
  41fd40:	mov    esi,0x0
	...
  41fdb1:	add    BYTE PTR [eax],al
  41fdb3:	add    BYTE PTR ds:0x7b197956,al
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	adc    BYTE PTR [eax],dl
  41fdc2:	pushf  
  41fdc3:	dec    ecx
  41fdc4:	test   DWORD PTR [ebp+0x1],edx
  41fdc7:	add    ch,dh
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    al,bl
  41fdcd:	fstp   QWORD PTR [eax+0x4b9d435c]
  41fdd3:	or     BYTE PTR [eax-0x5d],0xe1
  41fdd7:	cdq    
  41fdd8:	mov    BYTE PTR [esi+0xd61ff59],0x6f
  41fddf:	or     al,0xe3
  41fde1:	dec    esi
  41fde2:	imul   ebx,esp,0xded50d3b
  41fde8:	ds jmp 0x63b4:0xb419ba83
  41fdf0:	cwde   
  41fdf1:	ds jmp 0x41fdf7
  41fdf4:	or     eax,0x3ab97dbd
  41fdf9:	sbb    al,0x95
  41fdfb:	add    cl,BYTE PTR [esi-0x7a]
  41fdfe:	rcl    DWORD PTR [ebx+0x37bb320b],1
  41fe04:	mov    dh,0x31
  41fe06:	xlat   BYTE PTR ds:[ebx]
  41fe07:	sbb    DWORD PTR [edx],ebp
  41fe09:	shl    ebp,0x53
  41fe0c:	inc    edx
  41fe0d:	xor    BYTE PTR [esi-0x35],bh
  41fe10:	in     eax,dx
  41fe11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe12:	dec    esp
  41fe13:	mov    cl,0xf6
  41fe15:	mov    dh,0xb
  41fe17:	out    dx,eax
  41fe18:	push   cs
  41fe19:	mov    eax,0x760a716
  41fe1e:	jnp    0x41fe00
  41fe20:	xchg   bl,al
  41fe22:	data16 cs sub al,0x78
  41fe26:	ret    
  41fe27:	add    eax,0x3ecc3c21
  41fe2c:	jmpw   0xe658
  41fe30:	mov    ds:0x6c168642,al
  41fe35:	jae    0x41fe60
  41fe37:	js     0x41fea3
  41fe39:	imul   edi,DWORD PTR [esi-0x705f6115],0xb
  41fe40:	retf   0x8122
  41fe43:	repz mov edi,0x4893a440
  41fe49:	jp     0x41fde4
  41fe4b:	sub    ebx,DWORD PTR [ebp-0x743cbe91]
  41fe51:	scas   al,BYTE PTR es:[edi]
  41fe52:	or     eax,0xcc2119f9
  41fe57:	xchg   edi,eax
  41fe58:	push   eax
  41fe59:	stos   BYTE PTR es:[edi],al
  41fe5a:	shr    BYTE PTR [ecx],1
  41fe5c:	imul   esi,DWORD PTR ds:0xcf62273d,0x8aea7a92
  41fe66:	jnp    0x41fe9c
  41fe68:	cmp    eax,0x93b4ec5a
  41fe6d:	mov    bh,0x78
  41fe6f:	sub    al,0x49
  41fe71:	mov    esi,DWORD PTR [eax-0x5b]
  41fe74:	mov    eax,ds:0xdae02059
  41fe79:	xchg   ecx,eax
  41fe7a:	and    al,0xf8
  41fe7c:	aam    0xe3
  41fe7e:	ins    DWORD PTR es:[edi],dx
  41fe7f:	retf   
  41fe80:	xor    edx,DWORD PTR [esi-0x2f1b7b45]
  41fe86:	mov    ah,0x23
  41fe88:	pushf  
  41fe89:	xor    DWORD PTR [esi+0x4d880ef0],ebx
  41fe8f:	or     al,0x50
  41fe91:	adc    BYTE PTR fs:[edx-0x75],dl
  41fe95:	sub    ax,0x18a8
  41fe99:	adc    eax,DWORD PTR [ecx+ebx*4]
  41fe9c:	in     al,dx
  41fe9d:	or     bh,cl
  41fe9f:	mov    eax,0x92ee9c36
  41fea4:	idiv   BYTE PTR [esi-0x68]
  41fea7:	arpl   si,bp
  41fea9:	arpl   WORD PTR [edi-0x7f],sp
  41feac:	jo     0x41fe72
  41feae:	fcomp  QWORD PTR [edx+0x791504f6]
  41feb4:	xchg   esp,ebp
  41feb6:	sbb    ch,0x9b
  41feb9:	sbb    eax,0x618ca87d
  41febe:	adc    BYTE PTR [edx],ch
  41fec0:	les    eax,FWORD PTR [eax]
	...
  41ff32:	add    BYTE PTR [eax],al
  41ff34:	mov    ecx,0xff25bf5d
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x20d95b7d],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    BYTE PTR [esi],dh
  41ff4d:	retf   
  41ff4e:	dec    ecx
  41ff4f:	xchg   DWORD PTR ds:0xac51341b,edi
  41ff55:	and    eax,eax
  41ff57:	push   esp
  41ff58:	mov    dh,0xbd
  41ff5a:	call   0x9a43:0x8f6c96c
  41ff61:	test   DWORD PTR [edx+0x67],edx
  41ff64:	int3   
  41ff65:	xor    al,0x3
  41ff67:	mov    ebx,0xf360bbca
  41ff6c:	push   es
  41ff6d:	pop    ds
  41ff6e:	xor    ecx,edx
  41ff70:	cmp    eax,0xa4bc2f5e
  41ff75:	ja     0x41ffbd
  41ff77:	jmp    0x41ff11
  41ff79:	mov    edx,0x16a10a89
  41ff7e:	xlat   BYTE PTR ds:[ebx]
  41ff7f:	add    al,0x5
  41ff81:	cld    
  41ff82:	add    edx,DWORD PTR [ebp+0x7b]
  41ff85:	test   eax,0x1778b30a
  41ff8a:	or     al,0x7b
  41ff8c:	push   es
  41ff8d:	push   DWORD PTR [ecx+0x34]
  41ff90:	dec    ebp
  41ff91:	sahf   
  41ff92:	lock imul esp,DWORD PTR [ebp-0x5af16f1a],0x9863fc74
  41ff9d:	add    al,0x46
  41ff9f:	jnp    0x41ffc6
  41ffa1:	vprotb xmm2,xmm5,xmm5
  41ffa6:	cmp    DWORD PTR [eax],esp
  41ffa8:	jmp    0xc02c:0xa364e1
  41ffaf:	cmp    al,0x69
  41ffb1:	mov    WORD PTR [esi-0x47],ds
  41ffb4:	pop    ebx
  41ffb5:	cmp    DWORD PTR [edi],0xcb944db1
  41ffbb:	pushf  
  41ffbc:	retf   
  41ffbd:	imul   edi,DWORD PTR [edi+0x7fdfbd16],0xeba8ed79
  41ffc7:	add    DWORD PTR [esi-0x6da6e341],edi
  41ffcd:	mov    esi,0xf1e70fc6
  41ffd2:	xor    ah,BYTE PTR [edi-0x61]
  41ffd5:	xlat   BYTE PTR ds:[ebx]
  41ffd6:	test   BYTE PTR [ebx+0x7e],cl
  41ffd9:	xchg   BYTE PTR [edx+esi*1-0x4ce1cb33],ah
  41ffe0:	lds    esi,FWORD PTR [esi+0x16]
  41ffe3:	ins    BYTE PTR es:[edi],dx
  41ffe4:	inc    ebx
  41ffe5:	pop    eax
  41ffe6:	mov    eax,0xb240b492
  41ffeb:	add    esp,DWORD PTR [ecx-0x75de7f55]
  41fff1:	dec    ebx
  41fff2:	icebp  
  41fff3:	int    0x55
  41fff5:	pop    edi
  41fff6:	jo     0x41ff8d
  41fff8:	jae    0x42006a
  41fffa:	jmp    0x89eb74e0
  41ffff:	popa   
  420000:	jae    0x41ffda
  420002:	test   DWORD PTR [ebx-0x1a9657ba],ebx
  420008:	jle    0x42002d
  42000a:	js     0x42005f
  42000c:	pop    es
  42000d:	xor    al,0x6e
  42000f:	bnd jbe 0x41ffa0
  420012:	popf   
  420013:	pop    ebp
  420014:	ret    0x725c
  420017:	xor    esp,esi
  420019:	icebp  
  42001a:	aaa    
  42001b:	push   cs
  42001c:	cli    
  42001d:	pop    eax
  42001e:	aaa    
  42001f:	stc    
  420020:	imul   edi,DWORD PTR [ebp-0x2704402e],0x33
  420027:	test   al,0x72
  420029:	call   0x13832a9a
  42002e:	fadd   st(2),st
  420030:	jbe    0x42004d
  420032:	xor    al,0x4a
  420034:	jbe    0x4200ae
  420036:	and    al,bh
  420038:	pop    ds
  420039:	dec    edi
  42003a:	inc    ebp
  42003b:	out    0x2,eax
  42003d:	cmp    al,0x8
  42003f:	and    bl,bl
	...
  4200b1:	add    BYTE PTR [eax],al
  4200b3:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax+0x445f8c4e],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    BYTE PTR [edx-0x9],ch
  4200ce:	rol    DWORD PTR [ebp-0x1730ef61],1
  4200d4:	and    DWORD PTR [ebp-0x30],ebx
  4200d7:	sbb    dl,bh
  4200d9:	fisttp QWORD PTR [ebp+0x75a64fc4]
  4200df:	mov    edx,0x9ef7c3fc
  4200e4:	retf   
  4200e5:	pop    es
  4200e6:	pusha  
  4200e7:	and    eax,0x159eae11
  4200ec:	pop    esp
  4200ed:	test   edx,esi
  4200ef:	push   0x26064fb4
  4200f4:	and    ecx,eax
  4200f6:	sahf   
  4200f7:	scas   eax,DWORD PTR es:[edi]
  4200f8:	xor    esi,DWORD PTR [ebx-0x3c]
  4200fb:	ret    
  4200fc:	jg     0x4200b4
  4200fe:	pop    esi
  4200ff:	add    ch,BYTE PTR ds:[edi]
  420102:	sbb    dh,BYTE PTR [ecx+esi*2+0x1c]
  420106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420107:	pop    edx
  420108:	mov    edi,0xd9e58ab2
  42010d:	push   ebp
  42010e:	cmc    
  42010f:	icebp  
  420110:	sub    ecx,ebx
  420112:	jle    0x420101
  420114:	jle    0x420132
  420116:	push   ds
  420117:	push   edi
  420118:	push   edi
  420119:	xor    BYTE PTR [ebp-0x67],bh
  42011c:	hlt    
  42011d:	dec    esp
  42011e:	inc    ecx
  42011f:	aam    0x46
  420121:	push   es
  420122:	ret    
  420123:	mov    eax,0x937f2ccc
  420128:	js     0x420174
  42012a:	sbb    DWORD PTR [edx+0x5e],0xfffffffe
  42012e:	in     eax,0xa5
  420130:	sbb    eax,0xa1733ae4
  420135:	and    ebp,DWORD PTR [ecx-0x5b]
  420138:	inc    ecx
  420139:	fbstp  TBYTE PTR [edx+0x76]
  42013c:	mov    dl,0xc4
  42013e:	mov    ds:0x6ccd9324,eax
  420143:	adc    eax,0x4c87bf6a
  420148:	test   eax,0x7661df58
  42014d:	dec    esp
  42014e:	cwde   
  42014f:	ror    BYTE PTR [eax-0x662027d5],cl
  420155:	ins    BYTE PTR es:[edi],dx
  420156:	adc    al,0xf5
  420158:	mov    dl,0xb4
  42015a:	in     eax,dx
  42015b:	or     eax,0x5f320633
  420160:	stos   BYTE PTR es:[edi],al
  420161:	mov    al,ds:0x1d8db467
  420166:	push   0xfffffff6
  420168:	mov    esi,0x674f55a5
  42016d:	shr    DWORD PTR [ebx+0x53d9284],1
  420173:	xchg   esi,eax
  420174:	retf   
  420175:	sub    DWORD PTR [ecx+0x7f],0x1e
  420179:	lods   eax,DWORD PTR ds:[esi]
  42017a:	cmp    al,0x5b
  42017c:	mov    cl,0x6c
  42017e:	dec    esi
  42017f:	sbb    ch,BYTE PTR [eax-0x6116f3d2]
  420185:	mov    eax,0xe4146c53
  42018a:	cmp    BYTE PTR [eax+0x6de3b9d5],al
  420190:	dec    ecx
  420191:	stos   DWORD PTR es:[edi],eax
  420192:	mov    WORD PTR [ecx+0x69],cs
  420195:	pop    eax
  420196:	fs mov cl,0xfd
  420199:	cmp    ebx,DWORD PTR [esp+esi*8+0x7ea86ad1]
  4201a0:	jg     0x4201dc
  4201a2:	sub    BYTE PTR [edx],dl
  4201a4:	(bad)  
  4201a5:	fs jno 0x42018b
  4201a8:	cli    
  4201a9:	(bad)  
  4201aa:	icebp  
  4201ab:	fimul  DWORD PTR [esi+0x60]
  4201ae:	pop    eax
  4201af:	jmp    0x5ee6:0x25623b39
  4201b6:	addr16 jbe 0x4201ab
  4201b9:	ins    BYTE PTR es:[edi],dx
  4201ba:	cmc    
  4201bb:	mov    al,0x4a
  4201bd:	jge    0x420221
  4201bf:	fcom   DWORD PTR [esi]
	...
  420231:	add    BYTE PTR [eax],al
  420233:	add    BYTE PTR [ecx+0x1b],dl
  420236:	jmp    DWORD PTR [esi-0x1]
  420239:	out    0xd9,al
  42023b:	aas    
  42023c:	mov    DWORD PTR ds:0x89fad010,ebx
  420242:	adc    dh,BYTE PTR ds:0x15864
  420248:	cmc    
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [esi+0x1c4ec5de],cl
  420251:	add    bh,ah
  420253:	mov    esp,0x6f7ed992
  420258:	pop    esp
  420259:	xor    al,0xa1
  42025b:	cmp    eax,0x9a0cfe67
  420260:	push   esp
  420261:	ins    DWORD PTR es:[edi],dx
  420262:	sub    edx,edx
  420264:	or     BYTE PTR [ebx+0x4d],dl
  420267:	das    
  420268:	xchg   ecx,eax
  420269:	mov    edi,0x2fb055d7
  42026e:	arpl   WORD PTR [edx+0xc],ax
  420271:	xchg   edx,eax
  420272:	jmp    0x4e22:0xb7a7d827
  420279:	mov    ecx,0x4f595c60
  42027e:	mov    al,0x94
  420280:	int3   
  420281:	rol    BYTE PTR [ebx-0x17],cl
  420284:	(bad)  
  420285:	cld    
  420286:	push   ecx
  420287:	jmp    0xfcb1:0x57d85d9f
  42028e:	scas   eax,DWORD PTR es:[edi]
  42028f:	lods   eax,DWORD PTR ds:[esi]
  420290:	dec    ecx
  420291:	sar    bl,cl
  420293:	adc    esp,DWORD PTR [edx+0x26]
  420296:	aad    0x28
  420298:	inc    ecx
  420299:	iret   
  42029a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029b:	cmp    edi,ecx
  42029d:	pop    eax
  42029e:	mov    ds:0x74d96277,al
  4202a3:	xlat   BYTE PTR ds:[ebx]
  4202a4:	sub    DWORD PTR [edx*4+0x3659b09b],ebp
  4202ab:	hlt    
  4202ac:	ja     0x4202ab
  4202ae:	jg     0x4202ea
  4202b0:	xchg   DWORD PTR [edi],esp
  4202b2:	out    0x9b,eax
  4202b4:	iret   
  4202b5:	pop    es
  4202b6:	fisub  DWORD PTR [edi]
  4202b8:	xor    eax,0x8
  4202bb:	fimul  DWORD PTR [esp+ebx*1+0x53]
  4202bf:	(bad)  
  4202c0:	jge    0x420263
  4202c2:	sahf   
  4202c3:	rcl    eax,0xdd
  4202c6:	fs push ss
  4202c8:	rcl    DWORD PTR [ebp-0x52],0xb2
  4202cc:	or     ebp,ebp
  4202ce:	jecxz  0x420336
  4202d0:	mov    dl,BYTE PTR [esi-0x51]
  4202d3:	nop
  4202d4:	push   ss
  4202d5:	shl    DWORD PTR [ebx],0xba
  4202d8:	jmp    0x98c1a249
  4202dd:	cwde   
  4202de:	push   esi
  4202df:	imul   DWORD PTR [ebx+0x134688ee]
  4202e5:	(bad)  
  4202e7:	inc    ebp
  4202e8:	sbb    DWORD PTR [esi-0xbd7f3cf],0x69
  4202ef:	stos   BYTE PTR es:[edi],al
  4202f0:	popf   
  4202f1:	(bad)  
  4202f2:	cld    
  4202f3:	push   edi
  4202f4:	jmp    0xea4b2afb
  4202f9:	cmp    DWORD PTR [eax+0x22],0x7e5393cc
  420300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420301:	(bad)  
  420302:	shr    DWORD PTR [ecx+0x1bc6adcf],1
  420308:	jmp    0x6d99:0xcd09236a
  42030f:	adc    al,0x6b
  420311:	shl    BYTE PTR [ecx],cl
  420313:	and    DWORD PTR [edi+0x4c587653],ecx
  420319:	pop    esi
  42031a:	cmp    BYTE PTR [edx],ah
  42031c:	mov    bl,0xab
  42031e:	xchg   edi,eax
  42031f:	outs   dx,BYTE PTR ds:[esi]
  420320:	dec    esi
  420321:	repz aam 0x66
  420324:	mov    bh,0x80
  420326:	nop
  420327:	pushf  
  420328:	sar    ah,0xdf
  42032b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42032c:	xor    eax,0x32e0a251
  420331:	call   0x47728cde
  420336:	stos   DWORD PTR es:[edi],eax
  420337:	and    BYTE PTR [eax],bh
  420339:	aad    0x80
  42033b:	std    
  42033c:	xchg   esi,eax
  42033d:	bnd jg 0x420373
  420340:	ja     0x420342
	...
  4203b2:	add    BYTE PTR [eax],al
  4203b4:	cmp    al,0xe7
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [edi-0x5b],si
  4203c2:	fisttp QWORD PTR [ebx+0x59]
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	cmc    
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR [edx],dl
  4203cd:	lods   al,BYTE PTR ds:[esi]
  4203cf:	outs   dx,BYTE PTR ds:[esi]
  4203d0:	fcom   st(7)
  4203d2:	inc    edi
  4203d3:	mov    eax,esp
  4203d5:	xabort 0x15
  4203d8:	clc    
  4203d9:	stos   BYTE PTR es:[edi],al
  4203da:	inc    edx
  4203db:	push   DWORD PTR [ebx-0x2b8b3b04]
  4203e1:	retf   
  4203e2:	clc    
  4203e3:	or     cl,BYTE PTR fs:[edx]
  4203e6:	jns    0x42041f
  4203e8:	fidiv  DWORD PTR [edx+ecx*1]
  4203eb:	aam    0x22
  4203ed:	sub    BYTE PTR [eax],0x53
  4203f0:	(bad)
  4203f3:	xchg   ebp,eax
  4203f4:	jl     0x420435
  4203f6:	or     dh,BYTE PTR [ebx+0x1aafd572]
  4203fc:	stos   BYTE PTR es:[edi],al
  4203fd:	call   DWORD PTR [eax-0x34]
  420400:	cli    
  420401:	rcr    BYTE PTR [ebp-0x6be8700f],0xb4
  420408:	jge    0x420473
  42040a:	int3   
  42040b:	dec    ecx
  42040c:	sub    al,dl
  42040e:	fs push esp
  420410:	(bad)  
  420411:	iret   
  420412:	std    
  420413:	rsm    
  420415:	gs or  bh,cl
  420418:	mov    dl,0x24
  42041a:	sbb    BYTE PTR [esi-0x78],ah
  42041d:	mov    esi,0xbc194a88
  420422:	pop    es
  420423:	lock push ss
  420425:	xor    DWORD PTR cs:[esi+0x6a0c216f],0xffffffca
  42042d:	test   BYTE PTR [esi],cl
  42042f:	mov    ds:0x198517e0,eax
  420434:	dec    ebp
  420435:	sbb    al,0xb0
  420437:	aad    0x2c
  420439:	inc    edx
  42043a:	in     al,0x61
  42043c:	js     0x420414
  42043e:	lods   eax,DWORD PTR ds:[esi]
  42043f:	jns    0x420409
  420441:	jne    0x4204ba
  420443:	dec    edi
  420444:	lea    esi,ss:[ebp+0x3c]
  420448:	xchg   ecx,eax
  420449:	add    al,0xd0
  42044b:	push   esi
  42044c:	jae    0x420418
  42044e:	jmp    0xa2173bf0
  420453:	xchg   esi,eax
  420454:	xchg   edi,eax
  420455:	mov    ebx,0x38676505
  42045a:	es gs (bad) 
  42045d:	inc    esp
  42045e:	add    BYTE PTR [ecx+0x52],ch
  420461:	fld    DWORD PTR [ebx+eax*2+0x32]
  420465:	stc    
  420466:	push   es
  420467:	add    cl,cl
  420469:	leave  
  42046a:	xtest  
  42046d:	sub    dl,dl
  42046f:	inc    ecx
  420470:	js     0x420442
  420472:	cmp    al,0x23
  420474:	and    ch,bl
  420476:	inc    ecx
  420477:	call   0x71ad:0xc47f746
  42047e:	in     al,dx
  42047f:	add    al,0xa4
  420481:	mov    al,ds:0x80de002f
  420486:	xor    cl,ch
  420488:	and    ebx,ebp
  42048a:	mov    esp,0x7fa152cd
  42048f:	cmp    dl,bl
  420491:	aam    0xf4
  420493:	push   edx
  420494:	xor    BYTE PTR [ebx+0xa],0x3b
  420498:	call   0xfe9b188b
  42049d:	sbb    DWORD PTR [ecx+0x65],edx
  4204a0:	xchg   ebp,eax
  4204a1:	or     ah,BYTE PTR [ebx-0x1f]
  4204a4:	mov    WORD PTR [edi-0x19],es
  4204a7:	pop    ebp
  4204a8:	fisubr WORD PTR [ecx-0x164b13e]
  4204ae:	shr    BYTE PTR [ebp-0xd3e1358],1
  4204b4:	fld    QWORD PTR [edi-0x1674072e]
  4204ba:	push   ebx
  4204bb:	ret    0xc6c4
  4204be:	aad    0x56
  4204c0:	add    BYTE PTR ds:[eax],al
	...
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	mov    eax,0x4e745978
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	cmc    
  420549:	add    BYTE PTR [eax],al
  42054b:	add    bh,bh
  42054d:	adc    eax,0x4a8afd17
  420552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420553:	push   es
  420554:	sub    BYTE PTR ss:[esi+0x5d3119e7],dh
  42055b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42055c:	xor    dh,cl
  42055e:	sub    eax,eax
  420560:	adc    eax,0xad140794
  420565:	sysexit 
  420567:	jne    0x42059a
  420569:	jp     0x4205cb
  42056b:	das    
  42056c:	mov    bx,0x2a66
  420570:	mov    al,0x89
  420572:	cli    
  420573:	addr16 push edi
  420575:	fadd   DWORD PTR [ecx+0xdf1b7b0]
  42057b:	ins    DWORD PTR es:[edi],dx
  42057c:	test   BYTE PTR [ecx+0x68a16db8],bl
  420582:	out    dx,al
  420583:	retf   0x663a
  420586:	pushf  
  420587:	jno    0x4205fe
  420589:	fwait
  42058a:	lea    esp,[esp+edx*2+0x21]
  42058e:	cmp    BYTE PTR ds:0x6b595697,cl
  420594:	pop    es
  420595:	sbb    al,0x0
  420597:	inc    edx
  420598:	ret    
  420599:	(bad)  
  42059a:	in     al,0xd3
  42059c:	int    0xc5
  42059e:	add    eax,DWORD PTR [ecx+0x71164d73]
  4205a4:	adc    eax,eax
  4205a6:	xor    eax,0xa7de1b9
  4205ab:	push   ebx
  4205ac:	push   es
  4205ad:	repnz fwait
  4205af:	pop    ebx
  4205b0:	xchg   edx,eax
  4205b1:	popf   
  4205b2:	add    edi,edi
  4205b4:	in     al,dx
  4205b5:	int3   
  4205b6:	hlt    
  4205b7:	aam    0xdc
  4205b9:	pop    edx
  4205ba:	pop    ds
  4205bb:	pop    ss
  4205bc:	cli    
  4205bd:	ss jge 0x420590
  4205c0:	cdq    
  4205c1:	jmp    0xcb8eceb6
  4205c6:	xlat   BYTE PTR ds:[ebx]
  4205c7:	xchg   ebx,eax
  4205c8:	sub    eax,0xe18df391
  4205cd:	test   BYTE PTR [ebx-0x72f9a27e],cl
  4205d3:	xchg   ch,dh
  4205d5:	adc    edx,DWORD PTR [edx]
  4205d7:	sub    al,0x67
  4205d9:	dec    esi
  4205da:	jp     0x42055d
  4205dc:	ins    DWORD PTR es:[edi],dx
  4205dd:	push   eax
  4205de:	xor    al,0xae
  4205e0:	sbb    DWORD PTR [edx+0x1b2e204e],edi
  4205e6:	xor    ecx,DWORD PTR [esi-0x3309beff]
  4205ec:	test   al,0xd3
  4205ee:	(bad)  
  4205ef:	ret    0x8bb9
  4205f2:	inc    BYTE PTR [esp+ebx*1+0x6a]
  4205f6:	add    edi,ebx
  4205f8:	mov    WORD PTR [edx+0x44a00f7a],cs
  4205fe:	cs retf 0x5a6e
  420602:	les    ebx,FWORD PTR [ebx-0x2d]
  420605:	retf   
  420606:	mov    ah,0xc6
  420608:	ja     0x42061f
  42060a:	jbe    0x420594
  42060c:	int    0xb6
  42060e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060f:	(bad)  
  420610:	adc    esi,DWORD PTR [ebx]
  420612:	ins    BYTE PTR es:[edi],dx
  420613:	das    
  420614:	lods   al,BYTE PTR ds:[esi]
  420615:	(bad)  
  420616:	in     al,0xf0
  420618:	adc    edi,DWORD PTR [eax+0x4aa72574]
  42061e:	outs   dx,BYTE PTR ds:[esi]
  42061f:	ins    DWORD PTR es:[edi],dx
  420620:	shl    DWORD PTR [esi-0x8],cl
  420623:	pop    ds
  420624:	out    dx,eax
  420625:	lods   al,BYTE PTR ds:[esi]
  420626:	cmp    edi,DWORD PTR [ecx-0x6bc62605]
  42062c:	aas    
  42062d:	mov    ch,0x2
  42062f:	or     ebp,DWORD PTR [ecx+0x68e427dd]
  420635:	mov    esi,eax
  420637:	add    dh,dl
  420639:	mov    eax,0xd9484a5b
  42063e:	xchg   eax,esp
  420640:	out    dx,eax
	...
  4206b1:	add    BYTE PTR [eax],al
  4206b3:	add    BYTE PTR [edx-0x5081dcc4],dl
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	fcom   QWORD PTR [esi+0x5b43f634]
  4206c6:	add    DWORD PTR [eax],eax
  4206c8:	cmc    
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [edx+edx*8],bl
  4206ce:	mov    ah,0xfd
  4206d0:	retf   
  4206d1:	rol    dl,cl
  4206d3:	jmp    0x1844c756
  4206d8:	jns    0x420666
  4206da:	outs   dx,BYTE PTR ds:[esi]
  4206db:	ffreep st(2)
  4206dd:	push   eax
  4206de:	add    ah,BYTE PTR [ecx]
  4206e0:	fsub   st(6),st
  4206e2:	repz mov ah,0xe7
  4206e5:	inc    eax
  4206e6:	shl    edi,1
  4206e8:	jmp    0x4206e6
  4206ea:	in     al,0x21
  4206ec:	push   eax
  4206ed:	pop    eax
  4206ee:	mov    ah,0xe9
  4206f0:	dec    edi
  4206f1:	sar    BYTE PTR [edx+0x3e],1
  4206f4:	stc    
  4206f5:	mov    fs,WORD PTR [edi-0x5]
  4206f8:	daa    
  4206f9:	xchg   ebx,eax
  4206fa:	(bad)  
  4206fb:	imul   esi,DWORD PTR [ecx+0x1d9cf7e7],0x1f3fc1e0
  420705:	xchg   esp,eax
  420706:	xchg   BYTE PTR [ecx+0x758dd1df],al
  42070c:	aas    
  42070d:	call   0xb807:0x6feb9c5a
  420714:	mov    eax,0x154b436e
  420719:	xchg   ecx,eax
  42071a:	loopne 0x42077d
  42071c:	(bad)  
  42071d:	push   ds
  42071e:	mov    ebx,0x1ac88506
  420723:	mov    ch,0xb2
  420725:	mov    ebx,0x7c6062f1
  42072a:	lods   eax,DWORD PTR ds:[esi]
  42072b:	mov    ah,0xce
  42072d:	jmp    0xc158:0xad21f220
  420734:	out    0xa2,al
  420736:	sar    BYTE PTR [ebp+ecx*1-0x71],cl
  42073a:	or     edx,esi
  42073c:	inc    esi
  42073d:	sbb    dl,BYTE PTR [edx-0x3ecf43da]
  420743:	mov    cl,0x77
  420745:	mov    ebp,DWORD PTR [esi]
  420747:	fs mov ds,esp
  42074a:	in     eax,0xb9
  42074c:	sbb    ch,0x11
  42074f:	mov    ebx,0xf9423db6
  420754:	out    0xcf,al
  420756:	dec    DWORD PTR [edx]
  420758:	and    al,0xbd
  42075a:	imul   eax,DWORD PTR [esi],0x6c6bb912
  420760:	xor    esp,DWORD PTR [ebp-0x427c3a55]
  420766:	out    0xda,eax
  420768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420769:	in     eax,0x18
  42076b:	pop    es
  42076c:	xchg   esp,eax
  42076d:	dec    ecx
  42076e:	in     eax,0xe5
  420770:	sub    al,0xc1
  420772:	stos   BYTE PTR es:[edi],al
  420773:	or     eax,0xe459f008
  420778:	and    eax,0xdb9512ef
  42077d:	push   edi
  42077e:	cmp    edi,DWORD PTR [esi+0x5e]
  420781:	add    esp,DWORD PTR [ebx+0x72dd2f0c]
  420787:	les    esp,FWORD PTR [eax-0x312de144]
  42078d:	and    eax,0xf660a89f
  420792:	pop    esp
  420793:	inc    ebp
  420794:	lods   eax,DWORD PTR ds:[esi]
  420795:	clc    
  420796:	and    DWORD PTR ds:0x446b9bf0,0x20
  42079d:	mov    eax,ds:0xd99d43ec
  4207a2:	mov    ecx,0xa766ca37
  4207a7:	clc    
  4207a8:	add    DWORD PTR cs:[eax+0x7],ebp
  4207ac:	gs retf 0xb823
  4207b0:	inc    eax
  4207b1:	daa    
  4207b2:	js     0x42073e
  4207b4:	ins    DWORD PTR es:[edi],dx
  4207b5:	aaa    
  4207b6:	inc    eax
  4207b7:	adc    bl,0x49
  4207ba:	dec    ebp
  4207bb:	sti    
  4207bc:	or     ah,al
  4207be:	shr    BYTE PTR ds:0x15,cl
	...
  420834:	mov    eax,ds:0x3b920b9a
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0xb9
  420841:	and    ebx,eax
  420843:	aaa    
  420844:	cmp    BYTE PTR [ecx+eax*1+0x0],bl
  420848:	cmc    
  420849:	add    BYTE PTR [eax],al
  42084b:	add    BYTE PTR [edx+0x11],bh
  42084e:	mov    BYTE PTR [ebp-0x14c4e429],dh
  420854:	call   0x23ec71f7
  420859:	test   DWORD PTR [eax],eax
  42085b:	adc    al,0x9e
  42085d:	mov    es,WORD PTR [ebx+0x77]
  420860:	aaa    
  420861:	mov    al,ds:0xd845f52b
  420866:	pop    ebp
  420867:	call   0xded9f99b
  42086c:	xchg   ecx,eax
  42086d:	lods   eax,DWORD PTR ds:[si]
  42086f:	sbb    al,0xe3
  420871:	das    
  420872:	sbb    dh,BYTE PTR [eax-0x1f291db8]
  420878:	imul   ebp,DWORD PTR [edx-0x17],0x7b30449a
  42087f:	xchg   BYTE PTR [ebx-0x1c],ch
  420882:	or     eax,0x911f18a8
  420887:	sbb    cl,BYTE PTR [ecx+ebp*2]
  42088a:	pop    edx
  42088b:	xor    edx,ebp
  42088d:	gs popf 
  42088f:	ds sub al,0x2e
  420892:	imul   esp,DWORD PTR [ebx+0x6f],0x526c5d19
  420899:	icebp  
  42089a:	xchg   edx,eax
  42089b:	xchg   edx,eax
  42089c:	fwait
  42089d:	lods   al,BYTE PTR ds:[esi]
  42089e:	mov    eax,0x3183a6e0
  4208a3:	inc    eax
  4208a4:	xor    DWORD PTR [edx+0x36],esi
  4208a7:	or     dh,dl
  4208a9:	bound  ecx,QWORD PTR [esp+edx*4-0x35f7cfb]
  4208b0:	and    al,dl
  4208b2:	push   cs
  4208b3:	sub    DWORD PTR [ecx+ebp*1],esi
  4208b6:	daa    
  4208b7:	ds dec esp
  4208b9:	iret   
  4208ba:	(bad)  
  4208bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208bd:	xor    al,0xf6
  4208bf:	xchg   edx,eax
  4208c0:	das    
  4208c1:	sub    bh,al
  4208c3:	mov    bh,0x3b
  4208c5:	jo     0x42091c
  4208c7:	dec    esi
  4208c8:	and    DWORD PTR [eax-0x47e390d8],ebx
  4208ce:	div    BYTE PTR [ebp-0x46]
  4208d1:	into   
  4208d2:	rcr    BYTE PTR [edi],cl
  4208d4:	mov    dh,0x87
  4208d6:	nop
  4208d7:	(bad)  
  4208d8:	mov    esp,0xa420a19e
  4208dd:	ffreep st(0)
  4208df:	je     0x4208d6
  4208e1:	lods   eax,DWORD PTR ds:[esi]
  4208e2:	jecxz  0x420948
  4208e4:	outs   dx,DWORD PTR ds:[esi]
  4208e5:	not    BYTE PTR [edi-0x1f]
  4208e8:	inc    ebp
  4208e9:	add    al,bh
  4208eb:	in     eax,0x95
  4208ed:	push   edx
  4208ee:	inc    ebx
  4208ef:	dec    edi
  4208f0:	ins    DWORD PTR es:[edi],dx
  4208f1:	pop    edx
  4208f2:	push   0x10
  4208f4:	sti    
  4208f5:	inc    edx
  4208f6:	aaa    
  4208f7:	out    dx,al
  4208f8:	xchg   ebp,eax
  4208f9:	add    ch,cl
  4208fb:	dec    ecx
  4208fc:	shr    dh,cl
  4208fe:	mov    edx,0xa53543c6
  420903:	jp     0x4208ae
  420905:	fisttp WORD PTR [esi+0x32]
  420908:	fnstsw WORD PTR [ecx-0x22541b57]
  42090e:	test   ecx,edi
  420910:	xchg   DWORD PTR [ebx+0x1e7480dc],eax
  420916:	call   FWORD PTR [esi]
  420918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420919:	fimul  DWORD PTR [ebp+0x26d815c1]
  42091f:	push   edx
  420920:	hlt    
  420921:	test   al,0x1b
  420923:	or     eax,0x7ff751bf
  420928:	sbb    ebp,DWORD PTR [eax-0x52f7832e]
  42092e:	je     0x42094b
  420930:	rol    DWORD PTR [ebx+0x6f],1
  420933:	pop    ss
  420934:	scas   al,BYTE PTR es:[edi]
  420935:	mov    bh,0x8d
  420937:	jb     0x4208ed
  420939:	sbb    eax,0x575813ec
  42093e:	fwait
  42093f:	xor    al,0xcf
	...
  4209b1:	add    BYTE PTR [eax],al
  4209b3:	add    BYTE PTR [edx],cl
  4209b5:	inc    ecx
  4209b6:	mov    bh,0xa1
  4209b8:	push   edi
  4209ba:	push   ds
  4209bb:	jmp    0x42097d
  4209bd:	sahf   
  4209be:	fisub  WORD PTR [esi+0x24]
  4209c1:	outs   dx,DWORD PTR ds:[esi]
  4209c2:	loop   0x42095e
  4209c4:	sub    eax,0xf500015d
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    BYTE PTR [ebp-0x54],dl
  4209ce:	mov    esi,0x60b5302
  4209d3:	mov    BYTE PTR [edi],cl
  4209d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d6:	add    al,0xa2
  4209d8:	mov    esp,0x1debe985
  4209dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209de:	adc    eax,0xc2a47f9a
  4209e3:	add    dl,bl
  4209e5:	adc    bh,BYTE PTR [esi+0x15]
  4209e8:	jmp    0x8bfe:0x9b33b9bd
  4209ef:	repnz xor cl,BYTE PTR [ecx+0x1b]
  4209f3:	add    eax,0xdcfbf07b
  4209f8:	xchg   DWORD PTR [edi+ebp*2-0x5a07e89b],ecx
  4209ff:	not    cl
  420a01:	pop    ds
  420a02:	fiadd  WORD PTR [eax+eiz*8-0x5f]
  420a06:	xchg   edx,eax
  420a07:	fst    DWORD PTR [ecx-0x74074442]
  420a0d:	sub    edi,edx
  420a0f:	jmp    0xd3f1ca8b
  420a14:	jp     0x4209c9
  420a16:	icebp  
  420a17:	dec    ebp
  420a18:	aas    
  420a19:	mov    eax,ds:0xbbee6f74
  420a1e:	out    dx,al
  420a1f:	in     eax,dx
  420a20:	push   0xffffffa1
  420a22:	sbb    eax,0xb15fcd98
  420a27:	sahf   
  420a28:	mov    ebx,0x56b1401a
  420a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a2e:	mov    ecx,0xc3936127
  420a33:	pop    ecx
  420a34:	sub    eax,0x1dad311f
  420a39:	in     al,0xe8
  420a3b:	(bad)  [ebx-0x5d02f572]
  420a41:	push   es
  420a42:	pusha  
  420a43:	out    dx,eax
  420a44:	retf   
  420a45:	mov    cl,0xd3
  420a47:	sub    dl,BYTE PTR [ebp-0x23]
  420a4a:	test   eax,0x96f49ea8
  420a4f:	adc    al,0xd7
  420a51:	sar    BYTE PTR [edx-0x5ffbaeab],cl
  420a57:	std    
  420a58:	outs   dx,DWORD PTR ds:[esi]
  420a59:	arpl   si,ax
  420a5b:	push   ecx
  420a5c:	dec    BYTE PTR [eax+0x7860bbf]
  420a62:	in     al,dx
  420a63:	call   0x98c73cfa
  420a68:	out    0x28,al
  420a6a:	int    0x38
  420a6c:	pop    ss
  420a6d:	sub    BYTE PTR [ebp-0x36f1a951],al
  420a73:	sbb    bh,BYTE PTR [edx+0xa]
  420a76:	shr    DWORD PTR [esi],0x27
  420a79:	lds    edx,FWORD PTR [ebp+0x13]
  420a7c:	leave  
  420a7d:	push   ecx
  420a7e:	gs arpl bx,ax
  420a81:	jl     0x420a95
  420a83:	imul   ebx,DWORD PTR [ebx-0x19],0xf06fc607
  420a8a:	add    DWORD PTR [edx-0x43],ebx
  420a8d:	push   esp
  420a8e:	aam    0xe5
  420a90:	mov    ah,0xc6
  420a92:	mov    esp,0xc5419566
  420a97:	mov    ch,0x2
  420a99:	adc    DWORD PTR [edx+0x4e0a024c],edi
  420a9f:	adc    DWORD PTR [edx],ebp
  420aa1:	leave  
  420aa2:	sub    DWORD PTR [ecx+0x34],eax
  420aa5:	jns    0x420ab5
  420aa7:	xchg   esp,eax
  420aa8:	repz pushf 
  420aaa:	fcmovu st,st(7)
  420aac:	int3   
  420aad:	xchg   BYTE PTR [esi+0x74e1be38],cl
  420ab3:	and    ebp,ebx
  420ab5:	call   0xabec:0xe61fcee6
  420abc:	mov    bh,0x57
  420abe:	repnz mov edx,0x73
	...
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	psrad  mm5,QWORD PTR [edx]
  420b42:	leave  
  420b43:	test   BYTE PTR [edx],ah
  420b45:	pop    esi
  420b46:	add    DWORD PTR [eax],eax
  420b48:	cmc    
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [esi],al
  420b4d:	add    al,0x2a
  420b4f:	out    0xf,al
  420b51:	push   ebp
  420b52:	sub    DWORD PTR [ecx-0x239007f5],0x90a0ae0
  420b5c:	push   edx
  420b5d:	mov    BYTE PTR [ebx],ah
  420b5f:	test   al,0x6b
  420b61:	pushf  
  420b62:	scas   al,BYTE PTR es:[edi]
  420b63:	dec    ebx
  420b64:	mov    ebx,0x5480a2bd
  420b69:	push   ecx
  420b6a:	js     0x420b72
  420b6c:	test   eax,0xe3b5cb36
  420b71:	pop    esp
  420b72:	iret   
  420b73:	imul   edi,DWORD PTR [eax],0x120bd7a9
  420b79:	or     dh,BYTE PTR [eax+eiz*1+0x72]
  420b7d:	jp     0x420bfd
  420b7f:	xor    al,0xc
  420b81:	inc    ebp
  420b82:	cmp    dl,cl
  420b84:	es dec ebx
  420b86:	jle    0x420b8c
  420b88:	sbb    edi,DWORD PTR [edx]
  420b8a:	ja     0x420b3e
  420b8c:	adc    al,BYTE PTR [edx]
  420b8e:	or     eax,DWORD PTR [edi]
  420b90:	outs   dx,DWORD PTR ds:[esi]
  420b91:	fwait
  420b92:	test   al,0xea
  420b94:	loop   0x420b54
  420b96:	lods   eax,DWORD PTR ds:[esi]
  420b97:	daa    
  420b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b99:	xchg   edi,eax
  420b9a:	sti    
  420b9b:	repz push ss
  420b9d:	push   0x5b7ab6a
  420ba2:	test   BYTE PTR [ebx-0x56],0xff
  420ba6:	xchg   esp,eax
  420ba7:	pusha  
  420ba8:	test   eax,0x57c96687
  420bad:	xor    eax,DWORD PTR [edx+0x58]
  420bb0:	jg     0x420bdd
  420bb2:	and    eax,0x412b8527
  420bb7:	or     bh,0x38
  420bba:	mov    dh,0x2a
  420bbc:	inc    esp
  420bbd:	inc    edi
  420bbe:	lods   eax,DWORD PTR ds:[esi]
  420bbf:	mov    ebp,0xcecfea64
  420bc4:	add    eax,0x595fdd6a
  420bc9:	pop    edi
  420bca:	and    DWORD PTR [eax+0x6b],edi
  420bcd:	jnp    0x420c35
  420bcf:	punpckhdq mm1,mm2
  420bd2:	outs   dx,DWORD PTR es:[esi]
  420bd4:	lds    edi,FWORD PTR [ecx-0x32e5c8eb]
  420bda:	mov    ss,WORD PTR [esi+0x6cd36e16]
  420be0:	lods   al,BYTE PTR ds:[esi]
  420be1:	xchg   esi,eax
  420be2:	inc    esp
  420be3:	mov    bl,BYTE PTR [ebx+esi*8]
  420be6:	mov    ebp,0x7f308797
  420beb:	fchs   
  420bed:	loope  0x420b83
  420bef:	scas   al,BYTE PTR es:[edi]
  420bf0:	mov    dl,0x60
  420bf2:	or     BYTE PTR [esi-0x23],bl
  420bf5:	push   esi
  420bf6:	jl     0x420bab
  420bf8:	adc    al,0xea
  420bfa:	inc    eax
  420bfb:	imul   ebp,DWORD PTR [edi],0x42dc2110
  420c01:	dec    edx
  420c02:	inc    ebp
  420c03:	nop    ebx
  420c06:	push   ebp
  420c07:	popa   
  420c08:	data16 into 
  420c0a:	cmp    al,0x28
  420c0c:	lods   eax,DWORD PTR ds:[esi]
  420c0d:	cmp    ah,bl
  420c0f:	mov    ds:0x66ba9770,eax
  420c14:	fwait
  420c15:	dec    esp
  420c16:	loop   0x420c57
  420c18:	pop    eax
  420c19:	jne    0x420c42
  420c1b:	mov    eax,ds:0xe1195d4d
  420c20:	popf   
  420c21:	jle    0x420c09
  420c23:	outs   dx,BYTE PTR ds:[esi]
  420c24:	leave  
  420c25:	outs   dx,DWORD PTR ds:[esi]
  420c26:	aad    0xf2
  420c28:	ins    DWORD PTR es:[edi],dx
  420c29:	pop    edi
  420c2a:	outs   dx,BYTE PTR ds:[esi]
  420c2b:	ret    0x2fbd
  420c2e:	cmp    al,0xec
  420c30:	lea    ebx,[ebp-0x5b]
  420c33:	dec    eax
  420c34:	daa    
  420c35:	aas    
  420c36:	add    al,0xd8
  420c38:	out    dx,eax
  420c39:	scas   al,BYTE PTR es:[edi]
  420c3a:	add    al,0xb9
  420c3c:	jge    0x420bc0
  420c3e:	mov    dh,0x69
  420c40:	and    al,BYTE PTR [eax]
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0xd3ffd85f
  420cc3:	xor    BYTE PTR [edi],dl
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    BYTE PTR [ecx],ah
  420ccd:	rcl    DWORD PTR [ecx],cl
  420ccf:	add    BYTE PTR [ebp-0x6982b978],bh
  420cd5:	popa   
  420cd6:	lahf   
  420cd7:	mov    eax,ds:0x303e31b4
  420cdc:	bound  ebp,QWORD PTR [ecx-0x10]
  420cdf:	push   esp
  420ce0:	dec    esp
  420ce1:	mov    ds:0x8242ee9,eax
  420ce6:	orps   xmm1,XMMWORD PTR [edi+0x6a18095c]
  420ced:	int3   
  420cee:	mov    ebx,0x908f3941
  420cf3:	fwait
  420cf4:	mov    bh,0x36
  420cf6:	in     al,0x62
  420cf8:	lock sbb edi,DWORD PTR [edi]
  420cfb:	aad    0xf8
  420cfd:	pusha  
  420cfe:	jno    0x420d2d
  420d00:	cld    
  420d01:	aaa    
  420d02:	ja     0x420c88
  420d04:	pushf  
  420d05:	xor    DWORD PTR [esi+eax*4],edx
  420d08:	aad    0xa2
  420d0a:	es adc bh,0x0
  420d0e:	fs cli 
  420d10:	(bad)  
  420d11:	jno    0x420d13
  420d13:	pop    ebx
  420d14:	leave  
  420d15:	xchg   edi,eax
  420d16:	test   BYTE PTR [ebx],bl
  420d18:	dec    esi
  420d19:	inc    edx
  420d1a:	push   edx
  420d1b:	lock pop es
  420d1d:	pop    ds
  420d1e:	mov    edi,0x4e4784fd
  420d23:	imul   esi,DWORD PTR [edi+0x2f3043cc],0x4e35e20a
  420d2d:	ss push ebx
  420d2f:	pusha  
  420d30:	xor    eax,0xcb3db756
  420d35:	repnz pop edx
  420d37:	and    edi,0x97208650
  420d3d:	push   edi
  420d3e:	fistp  DWORD PTR [eax]
  420d40:	outs   dx,DWORD PTR ds:[esi]
  420d41:	inc    ecx
  420d42:	jg     0x420cf5
  420d44:	xchg   ecx,eax
  420d45:	call   0x86e6e25
  420d4a:	outs   dx,DWORD PTR ds:[esi]
  420d4b:	jecxz  0x420db8
  420d4d:	push   0xffffff80
  420d4f:	(bad)  
  420d50:	iret   
  420d51:	and    eax,0x96cf9ac2
  420d56:	pop    eax
  420d57:	xor    DWORD PTR [ecx-0x17],esi
  420d5a:	arpl   WORD PTR [esi+0x4],di
  420d5d:	push   esp
  420d5e:	xchg   edx,eax
  420d5f:	dec    edx
  420d60:	sub    BYTE PTR [ecx+0x46e90456],ah
  420d66:	add    dh,al
  420d68:	test   BYTE PTR [edi+0x5d],ch
  420d6b:	cdq    
  420d6c:	push   ecx
  420d6d:	sub    DWORD PTR [ebx-0x35],edi
  420d70:	retf   
  420d71:	inc    eax
  420d72:	out    dx,al
  420d73:	inc    edi
  420d74:	sbb    al,0x4f
  420d76:	gs sub al,0x59
  420d79:	repz inc edx
  420d7b:	and    al,0xf1
  420d7d:	pop    es
  420d7e:	or     BYTE PTR [edi+0x7180cc2d],dh
  420d84:	je     0x420d28
  420d86:	jae    0x420d3b
  420d88:	jnp    0x420d8f
  420d8a:	and    DWORD PTR [ecx-0x78428b38],ebp
  420d90:	cwde   
  420d91:	or     cl,BYTE PTR [ebx-0x7a]
  420d94:	sahf   
  420d95:	sahf   
  420d96:	popf   
  420d97:	scas   al,BYTE PTR es:[edi]
  420d98:	(bad)  
  420d99:	jp     0x420d4f
  420d9b:	les    esp,FWORD PTR [ebp-0x42963a01]
  420da1:	push   esi
  420da2:	xchg   edi,eax
  420da3:	mov    esp,0x15dbfea
  420da8:	cmp    BYTE PTR [edi],cl
  420daa:	dec    edx
  420dab:	mov    cl,0x53
  420dad:	mov    ds:0x7e339731,al
  420db2:	add    al,BYTE PTR [edi]
  420db4:	add    al,0xa4
  420db6:	pop    edi
  420db7:	pusha  
  420db8:	adc    BYTE PTR [edx+eax*4],0xac
  420dbc:	sbb    eax,0x77baa301
	...
  420e31:	add    BYTE PTR [eax],al
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	aas    
  420e41:	sahf   
  420e42:	and    eax,0x1600c13
  420e47:	add    ch,dh
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    BYTE PTR [eax-0x1d7cada5],cl
  420e51:	cmc    
  420e52:	ds jl  0x420de3
  420e55:	lahf   
  420e56:	vshufps xmm5,xmm4,XMMWORD PTR [esi+0x7330da2d],0xb9
  420e5f:	sbb    BYTE PTR ds:0x35b65d75,ch
  420e65:	gs ja  0x420ee1
  420e68:	jmp    0xc3e2c1e3
  420e6d:	test   BYTE PTR [ecx],bh
  420e6f:	push   ds
  420e70:	inc    ecx
  420e71:	push   ebx
  420e72:	push   ss
  420e73:	xor    al,0x8a
  420e75:	mov    ecx,0x7ca1536f
  420e7a:	aam    0x6c
  420e7c:	test   BYTE PTR [esi],bh
  420e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e7f:	mov    bh,0x37
  420e81:	mov    edi,0x74a817bb
  420e86:	cmc    
  420e87:	pop    ecx
  420e88:	leave  
  420e89:	xchg   di,ax
  420e8b:	stc    
  420e8c:	popf   
  420e8d:	and    ebx,DWORD PTR [ecx+0x2d]
  420e90:	in     eax,0x9a
  420e92:	lock xor bl,dh
  420e95:	or     eax,0x9a31ceea
  420e9a:	retf   0x2bfd
  420e9d:	sub    eax,0x2ba8abe2
  420ea2:	test   DWORD PTR ds:0x75adece5,0xf2868e07
  420eac:	inc    eax
  420ead:	inc    edi
  420eae:	scas   eax,DWORD PTR es:[edi]
  420eaf:	or     ch,dl
  420eb1:	iret   
  420eb2:	pop    ebx
  420eb3:	dec    esi
  420eb4:	jmp    0x5c0d:0xf28ec559
  420ebb:	ss sub al,0xeb
  420ebe:	shl    DWORD PTR [esi],0x10
  420ec1:	dec    ebp
  420ec2:	sti    
  420ec3:	push   0x7b1a3366
  420ec8:	jle    0x420ee9
  420eca:	(bad)  [edi-0x242af095]
  420ed0:	in     al,dx
  420ed1:	in     al,0x68
  420ed3:	mov    cl,0x82
  420ed5:	push   ds
  420ed6:	dec    edi
  420ed7:	and    edi,DWORD PTR [edx+0x1d2e1f6e]
  420edd:	add    dl,BYTE PTR [edx]
  420edf:	and    eax,0xc397d67e
  420ee4:	(bad)  
  420ee5:	fdiv   QWORD PTR [edx-0x12652fb9]
  420eeb:	daa    
  420eec:	xor    DWORD PTR [esi+esi*2-0x4c],edx
  420ef0:	add    dh,BYTE PTR [ecx-0x71]
  420ef3:	pusha  
  420ef4:	retf   0xe0df
  420ef7:	sub    eax,0xa408d246
  420efc:	pop    ecx
  420efd:	xor    al,0x18
  420eff:	stos   DWORD PTR es:[edi],eax
  420f00:	jo     0x420e9b
  420f02:	or     esi,esp
  420f04:	jge    0x420ed3
  420f06:	ud0    edi,DWORD PTR [edi-0x150cefa2]
  420f0d:	sbb    eax,0x61639e1b
  420f12:	push   0x9e18ac4
  420f17:	sbb    dh,BYTE PTR [edi-0x32]
  420f1a:	push   eax
  420f1b:	ret    
  420f1c:	loopne 0x420f13
  420f1e:	mov    dl,0x87
  420f20:	push   ecx
  420f21:	push   ebp
  420f22:	mov    edi,0xbddc8507
  420f27:	pop    eax
  420f28:	xchg   esp,eax
  420f29:	rol    DWORD PTR [ecx+0x4e01fd48],1
  420f2f:	psubq  mm0,QWORD PTR [ebx-0x28]
  420f33:	dec    eax
  420f34:	push   edx
  420f35:	xchg   ah,dh
  420f37:	dec    esp
  420f38:	pop    ds
  420f39:	dec    ecx
  420f3a:	clc    
  420f3b:	loopne 0x420efd
  420f3d:	cdq    
  420f3e:	lods   eax,DWORD PTR ds:[esi]
  420f3f:	mov    ecx,ecx
	...
  420fb1:	add    BYTE PTR [eax],al
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffffd8
  420fc1:	add    al,0x9
  420fc3:	mov    esp,0x16101
  420fc8:	cmc    
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    BYTE PTR [edx+ebp*1-0x35faa4f0],cl
  420fd2:	hlt    
  420fd3:	adc    al,BYTE PTR ds:0xcb11c2
  420fd9:	fs push ebx
  420fdb:	rcl    ebx,1
  420fdd:	add    dl,cl
  420fdf:	sbb    ch,BYTE PTR [ecx-0x6871c66a]
  420fe5:	fistp  QWORD PTR [ebp-0x61b4fe73]
  420feb:	push   eax
  420fec:	sbb    al,ah
  420fee:	mov    al,0x4a
  420ff0:	or     eax,0x9960add9
  420ff5:	test   BYTE PTR [eax-0x1164b4aa],ah
  420ffb:	sbb    DWORD PTR [ebx+edx*1+0x43],eax
  420fff:	popa   
  421000:	inc    ecx
  421001:	mov    BYTE PTR [ebp-0x50497052],dl
  421007:	xchg   edx,eax
  421008:	pop    esp
  421009:	push   ss
  42100a:	cmp    al,0xe0
  42100c:	cld    
  42100d:	in     al,0x6c
  42100f:	jns    0x421065
  421011:	sbb    DWORD PTR [esi],edi
  421013:	push   es
  421014:	sahf   
  421015:	or     BYTE PTR [esi-0x47],dl
  421018:	stos   DWORD PTR es:[edi],eax
  421019:	jb     0x420fd6
  42101b:	push   es
  42101c:	int3   
  42101d:	mov    ebx,0xee468392
  421022:	xor    al,0x65
  421024:	test   cl,0xf6
  421027:	(bad)  
  421029:	pop    esp
  42102a:	jb     0x421004
  42102c:	iret   
  42102d:	mov    ah,0x92
  42102f:	mov    ds:0x537adbb2,eax
  421034:	jns    0x421051
  421036:	jmp    0xd273:0xd6f8dd70
  42103d:	xchg   edi,eax
  42103e:	push   edx
  42103f:	nop
  421040:	ja     0x42104d
  421042:	fistp  WORD PTR [ebp+ebx*8+0x3b]
  421046:	dec    edx
  421047:	cmp    eax,DWORD PTR [ecx-0x8]
  42104a:	fmul   QWORD PTR [ebx+0x33]
  42104d:	fsincos 
  42104f:	int    0xad
  421051:	add    al,0x26
  421053:	mov    cl,0x94
  421055:	retf   
  421056:	(bad)  
  421057:	sti    
  421058:	jb     0x4210ca
  42105a:	and    ebp,ebx
  42105c:	inc    edi
  42105d:	in     eax,0x77
  42105f:	cs xor al,ah
  421062:	add    BYTE PTR [ebx+0x14],bh
  421065:	xor    eax,0xa70df059
  42106a:	dec    edi
  42106b:	jmp    0x39e9:0x4ae6abd1
  421072:	mov    bl,0x57
  421074:	imul   BYTE PTR [ebx]
  421076:	mov    BYTE PTR [esi],cl
  421078:	adc    eax,0x6b60d31b
  42107d:	push   es
  42107e:	icebp  
  42107f:	jb     0x421017
  421081:	arpl   WORD PTR [edi],sp
  421083:	pop    es
  421084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421085:	sub    cl,BYTE PTR [edx]
  421087:	push   esp
  421088:	nop
  421089:	loopne 0x4210c2
  42108b:	test   edx,esp
  42108d:	mov    esp,0x5d1a7ccf
  421092:	mov    edx,0x4c1be3c7
  421097:	loope  0x421063
  421099:	sahf   
  42109a:	sti    
  42109b:	inc    edi
  42109c:	loopne 0x4210e1
  42109e:	inc    edx
  42109f:	ret    0x6f46
  4210a2:	inc    edx
  4210a3:	add    eax,0x6afdb915
  4210a8:	imul   DWORD PTR [edi+eiz*8+0x76009c9d]
  4210af:	inc    ebx
  4210b0:	xchg   ecx,eax
  4210b1:	hlt    
  4210b2:	mov    bl,0x8b
  4210b4:	ds push esi
  4210b6:	mov    ds:0xbe6a7e88,al
  4210bb:	test   DWORD PTR [ebx],0xfd40f990
	...
  421131:	add    BYTE PTR [eax],al
  421133:	add    BYTE PTR [ebx-0x31],dh
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x421170
  421141:	or     al,0xd4
  421143:	div    dh
  421145:	popa   
  421146:	add    DWORD PTR [eax],eax
  421148:	cmc    
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [ebx+0x7be26e9c],ch
  421151:	outs   dx,DWORD PTR ds:[esi]
  421152:	(bad)  
  421154:	or     BYTE PTR [ebx-0x790ac1d8],ch
  42115a:	add    al,0xff
  42115c:	stos   BYTE PTR es:[edi],al
  42115d:	dec    esi
  42115e:	bound  ebp,QWORD PTR [ebx+0x20]
  421161:	rcl    DWORD PTR [esi],cl
  421163:	xchg   esi,eax
  421164:	xlat   BYTE PTR ds:[ebx]
  421165:	test   eax,0x6565c0c6
  42116a:	xchg   ebp,eax
  42116b:	add    bh,BYTE PTR [di]
  42116e:	cli    
  42116f:	ins    DWORD PTR es:[edi],dx
  421170:	mov    eax,ds:0x58d71201
  421175:	cmp    edi,esp
  421177:	xor    edi,esp
  421179:	add    ah,bl
  42117b:	stos   BYTE PTR es:[edi],al
  42117c:	add    ebx,eax
  42117e:	cld    
  42117f:	mov    BYTE PTR [ebp+0x3e],ah
  421182:	aad    0x20
  421184:	dec    ebp
  421185:	dec    edx
  421186:	xchg   ebx,eax
  421187:	and    al,0xee
  421189:	std    
  42118a:	cli    
  42118b:	das    
  42118c:	cli    
  42118d:	inc    ecx
  42118e:	ror    BYTE PTR [eax+0x468c4204],1
  421194:	mov    cl,0x2d
  421196:	cmp    DWORD PTR [ecx+0x58],esp
  421199:	xchg   BYTE PTR [eax+0x47],bl
  42119c:	fadd   st,st(5)
  42119e:	enter  0xa4ce,0xc0
  4211a2:	loop   0x4211d9
  4211a4:	adc    dh,bl
  4211a6:	or     cl,ah
  4211a8:	cmp    al,0x2f
  4211aa:	pop    ecx
  4211ab:	adc    al,0xad
  4211ad:	ins    BYTE PTR es:[edi],dx
  4211ae:	push   0xffffffec
  4211b0:	push   esp
  4211b1:	fbstp  TBYTE PTR [edx+0x2300793e]
  4211b7:	loope  0x4211d8
  4211b9:	inc    ebx
  4211ba:	xlat   BYTE PTR ds:[ebx]
  4211bb:	inc    esi
  4211bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211bd:	sti    
  4211be:	int3   
  4211bf:	sbb    esi,DWORD PTR [ebx-0x75]
  4211c2:	jmp    0xcda90f10
  4211c7:	add    BYTE PTR [eax],al
  4211c9:	lea    edi,[ebp+0x37]
  4211cc:	jg     0x421166
  4211ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211cf:	adc    al,0x3b
  4211d1:	scas   al,BYTE PTR es:[edi]
  4211d2:	xchg   edx,eax
  4211d3:	ss cli 
  4211d5:	pop    es
  4211d6:	not    ebp
  4211d8:	repz jp 0x421252
  4211db:	(bad)  [ecx]
  4211dd:	or     dh,bh
  4211df:	cs mov ebp,0x571da4ff
  4211e5:	add    ebp,edx
  4211e7:	fiadd  WORD PTR ds:0x3702c486
  4211ed:	cmp    al,0xf
  4211ef:	icebp  
  4211f0:	stos   DWORD PTR es:[edi],eax
  4211f1:	out    0x89,al
  4211f3:	mov    al,ds:0x26f0d97b
  4211f8:	and    BYTE PTR [esi-0x73692ee8],dl
  4211fe:	cmc    
  4211ff:	ficom  WORD PTR [ecx-0x4c]
  421202:	(bad)  
  421203:	popa   
  421204:	or     ebp,DWORD PTR [edx]
  421206:	mov    al,ds:0x51aba4c9
  42120b:	sub    ah,BYTE PTR [ebx+0x3ebbeb02]
  421211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421212:	pop    edx
  421213:	mov    esp,0x70f69d96
  421218:	cmc    
  421219:	fwait
  42121a:	je     0x421289
  42121c:	enter  0xb392,0x48
  421220:	hlt    
  421221:	mov    bl,0x37
  421223:	imul   edx,edx,0xcbe0a0cc
  421229:	ja     0x42129c
  42122b:	stc    
  42122c:	jo     0x421285
  42122e:	xchg   si,ax
  421230:	(bad)  
  421232:	push   ss
  421233:	add    BYTE PTR [ebp+esi*8-0x6e],al
  421237:	xor    al,0x4
  421239:	hlt    
  42123a:	jle    0x4212a7
  42123c:	lahf   
  42123d:	ss leave 
  42123f:	bound  edi,QWORD PTR ds:0x0
	...
  4212b1:	add    BYTE PTR [eax],al
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0xfa83dc15
  4212c1:	mov    al,0x89
  4212c3:	test   eax,0x162eb
  4212c8:	cmc    
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR [ecx-0xa],bh
  4212ce:	mov    ebx,0x3b6c0a9b
  4212d3:	xchg   ecx,eax
  4212d4:	inc    esi
  4212d5:	jg     0x42128a
  4212d7:	(bad)  
  4212d9:	xchg   ecx,eax
  4212da:	sahf   
  4212db:	in     al,dx
  4212dc:	sub    al,0xec
  4212de:	mov    dl,0x66
  4212e0:	addr16 call 0x38:0x4543b92a
  4212e8:	imul   esp,DWORD PTR [esi],0xffffffa3
  4212eb:	xor    bh,al
  4212ed:	jmp    0xcff4:0x51310ceb
  4212f4:	xor    DWORD PTR [edx+0x5e],eax
  4212f7:	jmp    0x7c7b9ce6
  4212fc:	or     DWORD PTR [eax+0x34668728],esi
  421302:	dec    edi
  421303:	jmp    0x421337
  421305:	dec    esi
  421306:	adc    esi,DWORD PTR [ebx+0x52]
  421309:	push   ds
  42130a:	and    eax,0x40c2a9f
  42130f:	and    BYTE PTR [edi],0xe2
  421312:	sar    BYTE PTR ds:0x240f6d90,cl
  421318:	or     eax,0x34f59d82
  42131d:	hlt    
  42131e:	dec    edx
  42131f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421320:	xchg   ebx,eax
  421321:	outs   dx,BYTE PTR ds:[esi]
  421322:	imul   edi,DWORD PTR [ebx],0xffffffcb
  421325:	lods   al,BYTE PTR ds:[esi]
  421326:	mov    bl,0x85
  421328:	add    bl,BYTE PTR [ebx-0x36]
  42132b:	xchg   esp,eax
  42132c:	jle    0x421371
  42132e:	test   dl,al
  421330:	or     esi,eax
  421332:	xchg   edi,eax
  421333:	dec    eax
  421334:	xor    DWORD PTR [ecx+eax*1-0x2b],edx
  421338:	aam    0xe4
  42133a:	push   ss
  42133b:	cmp    BYTE PTR [edx+edi*4],bl
  42133e:	loope  0x42133d
  421340:	pop    eax
  421341:	inc    esp
  421342:	push   ebx
  421343:	pusha  
  421344:	imul   edi,DWORD PTR [eax+0x188567c7],0xffffff90
  42134b:	inc    esi
  42134c:	push   ecx
  42134d:	pop    ebp
  42134e:	clc    
  42134f:	inc    ebp
  421350:	fcomi  st,st(5)
  421352:	out    0x37,al
  421354:	lds    ebx,FWORD PTR [ebx-0x74522943]
  42135a:	fisubr WORD PTR [edi+0x68]
  42135d:	pause  
  42135f:	repz jmp 0x574398ae
  421365:	mov    al,ds:0xb8918b87
  42136a:	neg    DWORD PTR [edi+ebx*1]
  42136d:	sub    al,0x8a
  42136f:	int3   
  421370:	aaa    
  421371:	(bad)  
  421372:	stc    
  421373:	adc    eax,0x40b1a582
  421378:	add    eax,0x9db42406
  42137d:	sbb    eax,ebp
  42137f:	mov    cl,0x35
  421381:	lahf   
  421382:	les    ecx,FWORD PTR [eax+ecx*8+0x17]
  421386:	sub    ecx,DWORD PTR [edi-0x8]
  421389:	jmp    0xe98aa6de
  42138e:	arpl   WORD PTR [ebx-0x4],si
  421391:	cmp    DWORD PTR [ecx],edi
  421393:	and    al,0x64
  421395:	mov    ds:0x4afef16f,al
  42139a:	add    ah,cl
  42139c:	push   es
  42139d:	push   0xdc99f636
  4213a2:	add    ecx,DWORD PTR [ecx+0x7e]
  4213a5:	jae    0x42139e
  4213a7:	addr16 pusha 
  4213a9:	scas   al,BYTE PTR es:[edi]
  4213aa:	rcl    DWORD PTR [eax],0x35
  4213ad:	push   ss
  4213ae:	or     ecx,DWORD PTR [esi+0x735f3959]
  4213b4:	(bad)  
  4213b5:	lock push esp
  4213b7:	not    ch
  4213b9:	ret    
  4213ba:	add    eax,ecx
  4213bc:	xor    ebx,DWORD PTR [ebp+0x72d9de]
	...
  421432:	add    BYTE PTR [eax],al
  421434:	scas   al,BYTE PTR es:[edi]
  421435:	xchg   esp,eax
  421436:	push   edi
  421437:	adc    bh,BYTE PTR [edi-0x2d]
  42143a:	out    dx,eax
  42143b:	mov    esp,0x960320e2
  421440:	sbb    eax,0xe0b980d5
  421445:	arpl   WORD PTR [ecx],ax
  421447:	add    ch,dh
  421449:	add    BYTE PTR [eax],al
  42144b:	add    BYTE PTR [ebp-0x119580c6],dh
  421451:	and    BYTE PTR [edx],al
  421453:	cmp    al,0xb6
  421455:	cwde   
  421456:	je     0x4214b9
  421458:	mov    bl,0xa
  42145a:	push   ds
  42145b:	iret   
  42145c:	test   DWORD PTR [edx-0x52685154],ebx
  421462:	fsubr  QWORD PTR [edi+eax*1]
  421465:	push   ds
  421466:	arpl   WORD PTR [edi],sp
  421468:	jns    0x42143f
  42146a:	aam    0x49
  42146c:	repnz std 
  42146e:	pop    ss
  42146f:	test   DWORD PTR [edi-0x61],0x3f5fa3dd
  421476:	int    0x35
  421478:	push   ecx
  421479:	and    DWORD PTR [esi+esi*1+0x44046],0x15
  421481:	add    dl,ch
  421483:	(bad)  
  421484:	ficomp DWORD PTR [esi-0x52]
  421487:	push   cs
  421488:	push   ecx
  421489:	sbb    al,0xcc
  42148b:	pop    ebp
  42148c:	lea    ecx,[ecx]
  42148e:	loope  0x4214f6
  421490:	sar    DWORD PTR ds:0xaacde318,0x2f
  421497:	cs clc 
  421499:	xlat   BYTE PTR ds:[ebx]
  42149a:	or     DWORD PTR [ecx-0x6],esp
  42149d:	mov    esp,0xc10d8f22
  4214a2:	inc    ecx
  4214a3:	enter  0x8c23,0xa8
  4214a7:	or     ebp,eax
  4214a9:	cld    
  4214aa:	shr    BYTE PTR ds:0xbeca525d,0x4f
  4214b1:	mov    DWORD PTR [edx],ecx
  4214b3:	jmp    edi
  4214b5:	cs jo  0x42143d
  4214b8:	or     al,0xe5
  4214ba:	mov    eax,0x2dfcb694
  4214bf:	mov    eax,0xbf7b3ee4
  4214c4:	stos   BYTE PTR es:[edi],al
  4214c5:	ror    DWORD PTR [edx-0x3da7e876],cl
  4214cb:	cdq    
  4214cc:	pushf  
  4214cd:	add    BYTE PTR [ecx],dl
  4214cf:	or     BYTE PTR [edx-0x27d9ae63],0xb4
  4214d6:	lea    ebp,[ecx+0x6794456a]
  4214dc:	je     0x4214ba
  4214de:	xor    ecx,DWORD PTR [ecx+eax*2]
  4214e1:	jge    0x421503
  4214e3:	mov    bl,0x16
  4214e5:	pop    ss
  4214e6:	enter  0x2673,0xe
  4214ea:	pop    es
  4214eb:	sub    ah,BYTE PTR [edi+0x14]
  4214ee:	daa    
  4214ef:	mov    eax,0xd9f3cda9
  4214f4:	int    0xe7
  4214f6:	test   DWORD PTR [edx-0x6b42c293],ecx
  4214fc:	rol    BYTE PTR [edx-0x44],cl
  4214ff:	mov    eax,ds:0x9bab4ea
  421504:	xor    al,0x3b
  421506:	sbb    BYTE PTR [ebx],bl
  421508:	mov    edi,0xfc60143d
  42150d:	inc    edx
  42150e:	lock fsubr st,st(7)
  421511:	ins    DWORD PTR es:[edi],dx
  421512:	scas   eax,DWORD PTR es:[edi]
  421513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421514:	pop    ecx
  421515:	jns    0x421568
  421517:	or     dl,al
  421519:	jae    0x4214f6
  42151b:	in     al,0x91
  42151d:	les    edi,FWORD PTR [ebp+0x50518b83]
  421523:	shl    DWORD PTR [esi+0x7c],cl
  421526:	mov    ch,0xf6
  421528:	dec    edx
  421529:	xor    eax,0xcf09f62d
  42152e:	(bad)  
  421530:	int3   
  421531:	inc    edi
  421532:	inc    ebp
  421533:	(bad)  
  421534:	iret   
  421535:	adc    bl,BYTE PTR [ebx-0x684773c3]
  42153b:	xchg   DWORD PTR [ecx-0x519737ac],eax
	...
  4215b1:	add    BYTE PTR [eax],al
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	in     al,dx
  4215c1:	dec    edx
  4215c2:	int    0xb0
  4215c4:	aad    0x64
  4215c6:	add    DWORD PTR [eax],eax
  4215c8:	cmc    
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    BYTE PTR [ebp+0x68],dl
  4215ce:	or     al,0x3c
  4215d0:	xor    ecx,edx
  4215d2:	jecxz  0x421555
  4215d4:	cmc    
  4215d5:	sbb    DWORD PTR [ebx+ebp*1-0x7],ecx
  4215d9:	fnstsw WORD PTR [eax+ebx*8]
  4215dc:	pushf  
  4215dd:	retf   0xa54c
  4215e0:	inc    edx
  4215e1:	push   ebp
  4215e2:	adc    ch,BYTE PTR [esi-0x78952a3f]
  4215e8:	fldz   
  4215ea:	xor    esi,DWORD PTR [ecx+ebp*1+0x11]
  4215ee:	add    edi,DWORD PTR [ecx]
  4215f0:	idiv   DWORD PTR ds:0xf6f49838
  4215f6:	je     0x42162b
  4215f8:	out    0x3d,eax
  4215fa:	(bad)  
  4215fb:	jno    0x4215e8
  4215fd:	bound  ebp,QWORD PTR [ecx]
  4215ff:	or     ebx,DWORD PTR [edx-0x48e8674f]
  421605:	add    DWORD PTR [edi],ecx
  421607:	popf   
  421608:	jmp    0xb2f5db80
  42160d:	push   ds
  42160e:	out    0x8e,eax
  421610:	out    0xc9,eax
  421612:	xchg   DWORD PTR [ebx-0x48],ecx
  421615:	int3   
  421616:	xchg   ebx,eax
  421617:	pop    ss
  421618:	adc    ah,ch
  42161a:	mov    eax,ds:0x8796339
  42161f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421620:	dec    ebx
  421621:	pop    esp
  421622:	mov    DWORD PTR [ebx+0x33],edi
  421625:	pop    ecx
  421626:	jecxz  0x4215c6
  421628:	fstp   TBYTE PTR [esi+0x519bc0b7]
  42162e:	hlt    
  42162f:	push   ds
  421630:	mov    WORD PTR gs:[esi+edx*2+0x46],gs
  421635:	pop    esi
  421636:	pop    esi
  421637:	xchg   ecx,eax
  421638:	mov    BYTE PTR [edx+esi*8+0x32],bl
  42163c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42163d:	call   0x8360666c
  421642:	in     al,dx
  421643:	scas   al,BYTE PTR es:[edi]
  421644:	pop    esi
  421645:	loope  0x42162a
  421647:	or     al,0x1e
  421649:	or     BYTE PTR [edi+0x1696cbda],ah
  42164f:	lahf   
  421650:	xor    al,0xde
  421652:	xor    DWORD PTR [esi+0x21],esi
  421655:	je     0x4215f6
  421657:	adc    DWORD PTR [edi+0x4323b0bf],edx
  42165d:	lahf   
  42165e:	cmp    ebp,edi
  421660:	jp     0x421619
  421662:	pop    esi
  421663:	sbb    ebx,ecx
  421665:	xor    eax,0x2186aba7
  42166a:	mov    cl,0x78
  42166c:	adc    ah,BYTE PTR [ebx-0x4f71e0b8]
  421672:	test   DWORD PTR [ecx+0x309bd29f],0xcc5638
  42167c:	pop    edx
  42167d:	pop    edi
  42167e:	or     al,0x72
  421680:	repnz stc 
  421682:	dec    ebx
  421683:	or     esp,DWORD PTR [ebp+0x5ce019f1]
  421689:	pop    ecx
  42168a:	mov    BYTE PTR ds:0xea46278e,ah
  421690:	inc    eax
  421691:	cli    
  421692:	inc    ebx
  421693:	lahf   
  421694:	xchg   edx,eax
  421695:	(bad)  
  421696:	scas   al,BYTE PTR es:[edi]
  421697:	mov    edi,0xabfe6a41
  42169c:	stc    
  42169d:	out    0x43,al
  42169f:	mov    bh,BYTE PTR [eax-0x3a2eef63]
  4216a5:	test   BYTE PTR [eax-0x47715338],ah
  4216ab:	aaa    
  4216ac:	shl    BYTE PTR [edx],1
  4216ae:	aas    
  4216af:	test   eax,0xf13ef643
  4216b4:	mov    ebx,0x43d13e44
  4216b9:	lahf   
  4216ba:	popa   
  4216bb:	jge    0x421678
  4216bd:	ins    DWORD PTR es:[edi],dx
  4216be:	xor    ebx,DWORD PTR fs:[ebx]
	...
  421731:	add    BYTE PTR [eax],al
  421733:	add    BYTE PTR [ecx-0x587fdad1],cl
  421739:	mov    ch,BYTE PTR [ebp-0x7e7b35d1]
  42173f:	cmp    esp,DWORD PTR [ecx-0x52]
  421742:	cld    
  421743:	jb     0x42170f
  421745:	add    DWORD PTR gs:[eax],eax
  421748:	cmc    
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR [eax],bh
  42174d:	mov    ch,BYTE PTR [edi-0x616a9d22]
  421753:	and    bh,BYTE PTR [eax]
  421755:	push   ds
  421756:	cmp    BYTE PTR [ecx-0x8313027],bl
  42175c:	mov    eax,ds:0x1acf9843
  421761:	mov    bl,0x4
  421763:	out    0xf4,al
  421765:	cdq    
  421766:	nop
  421767:	lds    ecx,FWORD PTR fs:[ecx-0x7a]
  42176b:	mov    ebx,0xfef2d87f
  421770:	add    DWORD PTR [edx+0x6d],ebp
  421773:	dec    edx
  421774:	jnp    0x4217e8
  421776:	js     0x4217c8
  421778:	das    
  421779:	les    eax,FWORD PTR [esi+0x2b9f1247]
  42177f:	and    al,0x37
  421781:	outs   dx,DWORD PTR ds:[esi]
  421782:	inc    ecx
  421783:	cdq    
  421784:	dec    edi
  421785:	inc    esi
  421786:	and    esi,edi
  421788:	xchg   esi,eax
  421789:	icebp  
  42178a:	call   0x2e69:0xede68a29
  421791:	fsubr  st(5),st
  421793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421794:	in     eax,dx
  421795:	add    al,0xbe
  421797:	add    al,BYTE PTR [eax-0x36]
  42179a:	data16 mov al,ds:0xd61bf5af
  4217a0:	mov    ah,0x85
  4217a2:	das    
  4217a3:	mov    al,dh
  4217a5:	test   eax,0x3ad3b82a
  4217aa:	dec    eax
  4217ab:	in     eax,dx
  4217ac:	outs   dx,DWORD PTR ds:[esi]
  4217ad:	mov    ah,al
  4217af:	mov    bh,0xe4
  4217b1:	sbb    al,0x7f
  4217b3:	retf   0x9eed
  4217b6:	add    al,0x9e
  4217b8:	dec    ebx
  4217b9:	jae    0x42174d
  4217bb:	lock les esi,FWORD PTR [ecx+0x1]
  4217bf:	test   ebp,eax
  4217c1:	adc    bh,bl
  4217c3:	(bad)  
  4217c5:	add    eax,0xec236c7c
  4217ca:	jae    0x421762
  4217cc:	stos   BYTE PTR es:[edi],al
  4217cd:	call   0x7562:0x7217892d
  4217d4:	jl     0x42184a
  4217d6:	mov    eax,ds:0x86217220
  4217db:	bswap  esi
  4217dd:	push   ss
  4217de:	aad    0x36
  4217e0:	fiadd  WORD PTR [edx+0x74]
  4217e3:	cld    
  4217e4:	and    eax,0xd32c619a
  4217e9:	inc    eax
  4217ea:	in     eax,0x35
  4217ec:	or     eax,0xd7f74db5
  4217f1:	adc    BYTE PTR [edx-0x3c],bh
  4217f4:	std    
  4217f5:	push   es
  4217f6:	xchg   ecx,eax
  4217f7:	dec    edx
  4217f8:	and    bh,BYTE PTR [edx-0x65]
  4217fb:	iret   
  4217fc:	popa   
  4217fd:	push   ss
  4217fe:	add    cl,BYTE PTR [esi-0x5d]
  421801:	ret    0x7f20
  421804:	ret    0x3da5
  421807:	mov    ds:0x2b391818,eax
  42180c:	pop    es
  42180d:	hlt    
  42180e:	out    0x8f,eax
  421810:	repz pop eax
  421812:	fnstcw WORD PTR [ebx-0x3b]
  421815:	mov    esi,0x8233f505
  42181a:	ins    BYTE PTR es:[edi],dx
  42181b:	mov    ds:0x720c326,al
  421820:	lds    ecx,FWORD PTR [ebp+0x64d25789]
  421826:	enter  0x35f5,0xcc
  42182a:	scas   eax,DWORD PTR es:[edi]
  42182b:	sbb    al,0xdf
  42182d:	pop    ebp
  42182e:	jg     0x4218a0
  421830:	jne    0x42184e
  421832:	sbb    al,BYTE PTR ss:[ebp+0x2e]
  421836:	pushf  
  421837:	ins    BYTE PTR es:[edi],dx
  421838:	mov    dh,0xd8
  42183a:	stos   DWORD PTR es:[edi],eax
  42183b:	stc    
  42183c:	(bad)  
  42183d:	cmp    eax,0xdb8ae3
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    edx,DWORD PTR [eax+0x26]
  4218c2:	and    eax,0x166bf1b
  4218c7:	add    ch,dh
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [edi-0x22c37de4],cl
  4218d1:	loopne 0x4218db
  4218d3:	ds inc eax
  4218d5:	retf   0xe8ea
  4218d8:	aam    0xe5
  4218da:	push   eax
  4218db:	ins    DWORD PTR es:[edi],dx
  4218dc:	cmp    eax,0xcae8c437
  4218e1:	push   eax
  4218e2:	les    eax,FWORD PTR [esi+0x2b62aa63]
  4218e8:	or     dl,BYTE PTR [ebx+eax*8]
  4218eb:	(bad)  
  4218ec:	repnz out 0xa1,al
  4218ef:	add    eax,0x43f3613f
  4218f4:	out    dx,al
  4218f5:	ja     0x4218ab
  4218f7:	xchg   edx,eax
  4218f8:	adc    ah,bl
  4218fa:	mov    edx,DWORD PTR [edx-0x3a83fb83]
  421900:	loopne 0x4218fd
  421902:	mov    eax,0x9df4806e
  421907:	mov    al,BYTE PTR [eax+0x16]
  42190a:	mov    bh,0xe2
  42190c:	es cmp al,0xcf
  42190f:	shl    DWORD PTR [ebx-0x66ca22ea],cl
  421915:	cmc    
  421916:	mov    ebx,0x8749e59e
  42191b:	popa   
  42191c:	mov    BYTE PTR [edx+0x5f4040c6],cl
  421922:	into   
  421923:	xchg   edx,eax
  421924:	scas   eax,DWORD PTR es:[edi]
  421925:	sbb    eax,0xfbe0fba
  42192a:	jp     0x4218e5
  42192c:	and    bl,BYTE PTR ds:0x5746c266
  421932:	jns    0x421964
  421934:	repz xlat BYTE PTR ds:[ebx]
  421936:	fidivr DWORD PTR [edx+ebx*2-0x31]
  42193a:	mov    edi,0x9d417d20
  42193f:	inc    edi
  421940:	fs cmp cl,0xfa
  421944:	div    BYTE PTR [ecx-0x5e]
  421947:	mov    dh,0xcb
  421949:	and    esp,DWORD PTR [edi+eiz*8]
  42194c:	pop    eax
  42194d:	fnstenv [ebp+0x5c6fcd3a]
  421953:	popf   
  421954:	adc    eax,0xd8d3f8ea
  421959:	mov    ch,0xc6
  42195b:	push   0x129737df
  421960:	scas   eax,DWORD PTR es:[edi]
  421961:	cwde   
  421962:	repnz cmp eax,0x9e28763d
  421968:	fld    DWORD PTR [edi-0x8962a4e]
  42196e:	sahf   
  42196f:	push   ebp
  421970:	leave  
  421971:	cmp    esp,ebp
  421973:	mov    dh,dl
  421975:	in     eax,0x1c
  421977:	sti    
  421978:	xchg   DWORD PTR [edx-0x3b5e7ee],eax
  42197e:	loop   0x421989
  421980:	inc    eax
  421981:	ror    DWORD PTR [ecx+eax*2],1
  421984:	(bad)  
  421985:	cmp    dl,BYTE PTR [esp+edx*8]
  421988:	fcmovnbe st,st(3)
  42198a:	ret    0xb85b
  42198d:	cmp    al,0x3b
  42198f:	push   ecx
  421990:	shl    ebx,cl
  421992:	xchg   esi,eax
  421993:	in     al,0xb0
  421995:	jge    0x421927
  421997:	imul   edi,edi,0x9
  42199a:	aad    0x3c
  42199c:	stos   DWORD PTR es:[edi],eax
  42199d:	jne    0x42196c
  42199f:	xchg   esi,eax
  4219a0:	mov    BYTE PTR [ebp-0x97f8b94],dh
  4219a6:	iret   
  4219a7:	(bad)  
  4219a8:	and    eax,0x3d0fb448
  4219ad:	adc    BYTE PTR [edi+0x356dc05a],0x84
  4219b4:	int    0x1f
  4219b6:	inc    edx
  4219b7:	fmul   QWORD PTR [ebp+0x5d]
  4219ba:	fwait
  4219bb:	stc    
  4219bc:	jmp    0x0:0xab3ebaa5
	...
  421a33:	add    bh,bl
  421a35:	xor    ch,BYTE PTR [edi-0x6010ed]
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x5cd09fb3]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    dh,ah
  421a4d:	add    DWORD PTR ds:0x56a99255,esp
  421a53:	das    
  421a54:	data16 sbb BYTE PTR [ebp+0xf4db14b],bl
  421a5b:	cmp    BYTE PTR [edx],cl
  421a5d:	pop    ebx
  421a5e:	pop    edi
  421a5f:	test   al,0xd2
  421a61:	das    
  421a62:	ror    BYTE PTR [edx-0x7f],1
  421a65:	sub    DWORD PTR [edx],ebx
  421a67:	pusha  
  421a68:	out    dx,al
  421a69:	pop    ebp
  421a6a:	add    edx,DWORD PTR [edi-0x18c03811]
  421a70:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a72:	iret   
  421a73:	pop    ds
  421a74:	jbe    0x421ac2
  421a76:	in     eax,0xb9
  421a78:	push   ds
  421a79:	fcomp  DWORD PTR [ebx+0x7d]
  421a7c:	sub    DWORD PTR [eax+0xb],edi
  421a7f:	xchg   esi,eax
  421a80:	mov    BYTE PTR [ebx],bh
  421a82:	jge    0x421ac5
  421a84:	les    esi,FWORD PTR [eax-0x7b21cc3]
  421a8a:	push   ss
  421a8b:	scas   al,BYTE PTR es:[edi]
  421a8c:	nop
  421a8d:	adc    BYTE PTR [edi],ch
  421a8f:	sbb    eax,0x670fded7
  421a94:	cmp    al,0x7c
  421a96:	stc    
  421a97:	fwait
  421a98:	jnp    0x421ad2
  421a9a:	sbb    DWORD PTR [eax],esp
  421a9c:	(bad)  
  421a9d:	das    
  421a9e:	mov    eax,ds:0x6a89cc32
  421aa3:	mov    ecx,0xd6fe5697
  421aa8:	retf   0xce06
  421aab:	cmp    al,0xc7
  421aad:	ds mov bh,0x75
  421ab0:	test   DWORD PTR [edx],ebx
  421ab2:	mov    ebp,DWORD PTR [edi]
  421ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ab5:	or     ch,al
  421ab7:	adc    dl,BYTE PTR [eax+0x62705e43]
  421abd:	sub    BYTE PTR [edx-0x5c],dh
  421ac0:	in     eax,dx
  421ac1:	lods   al,BYTE PTR ds:[esi]
  421ac2:	push   edx
  421ac3:	ins    DWORD PTR es:[edi],dx
  421ac4:	loope  0x421ae9
  421ac6:	call   0xa011c9b1
  421acb:	and    edi,DWORD PTR [eax+0x2a]
  421ace:	mov    DWORD PTR [edx],eax
  421ad0:	push   ebx
  421ad1:	ret    
  421ad2:	mov    dh,0x94
  421ad4:	rcl    BYTE PTR [eax-0x3f277a90],cl
  421ada:	in     al,0x5e
  421adc:	or     eax,0x840c746a
  421ae1:	xchg   ebx,eax
  421ae2:	jecxz  0x421a89
  421ae4:	in     al,dx
  421ae5:	pop    ecx
  421ae6:	daa    
  421ae7:	loope  0x421b04
  421ae9:	mov    esi,0x4de3f37a
  421aee:	and    DWORD PTR [eax-0x25746a3a],eax
  421af4:	shl    DWORD PTR [ecx+0x733979d],0xd3
  421afb:	and    eax,0xfe3b44af
  421b00:	sub    edx,edi
  421b02:	fnstcw WORD PTR [esi]
  421b04:	push   esi
  421b05:	xor    esp,DWORD PTR [eax+eiz*8-0x4e]
  421b09:	imul   eax,DWORD PTR [edi],0x2d337bab
  421b0f:	sar    cl,1
  421b11:	dec    eax
  421b12:	bound  esi,QWORD PTR [ebp+0x6a192b20]
  421b18:	xchg   edx,eax
  421b19:	add    dh,BYTE PTR [ebx+0x757f3a6c]
  421b1f:	push   cs
  421b20:	mov    ebx,0xef81d6d3
  421b25:	shl    DWORD PTR [ebx],1
  421b27:	lahf   
  421b28:	aaa    
  421b29:	adc    bl,BYTE PTR [ecx-0xe]
  421b2c:	mov    dl,0xbf
  421b2e:	add    BYTE PTR [eax],bh
  421b30:	sti    
  421b31:	inc    ebp
  421b32:	mov    dl,BYTE PTR [ebx-0x6ef77866]
  421b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b39:	mov    ebp,0x861e26c
  421b3e:	jmp    0x431570
	...
  421bb3:	add    BYTE PTR [edx-0x604ef4eb],cl
  421bb9:	mov    edi,0x2d6a3fba
  421bbe:	scas   al,BYTE PTR es:[edi]
  421bbf:	sub    eax,DWORD PTR [eax]
  421bc1:	retf   
  421bc2:	sbb    DWORD PTR [edx+0x168a9],esi
  421bc8:	cmc    
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [ebp-0x370c818e],ah
  421bd1:	push   cs
  421bd2:	sbb    DWORD PTR [esi],ecx
  421bd4:	mov    ebx,DWORD PTR [esi+0xb40a01c]
  421bda:	sbb    BYTE PTR [ecx+0x3a1f0fc8],bh
  421be0:	and    ah,BYTE PTR [eax-0x52]
  421be3:	xchg   DWORD PTR [esi+0x4b73bd42],edx
  421be9:	xor    al,0xca
  421beb:	xchg   ecx,eax
  421bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bed:	cld    
  421bee:	ja     0x421b8b
  421bf0:	pop    edi
  421bf1:	out    dx,al
  421bf2:	dec    esi
  421bf3:	fild   DWORD PTR [ebp+0x3e82930f]
  421bf9:	cmp    BYTE PTR [edx+0x77],bh
  421bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bfd:	ins    BYTE PTR es:[edi],dx
  421bfe:	add    al,0x47
  421c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c01:	scas   eax,DWORD PTR es:[edi]
  421c02:	dec    ebx
  421c03:	sti    
  421c04:	lahf   
  421c05:	addr16 ss mov dl,bh
  421c09:	mov    bl,0x48
  421c0b:	mov    ebp,0xf1a675c0
  421c10:	or     BYTE PTR [eax-0x54],cl
  421c13:	(bad)  
  421c14:	push   bp
  421c16:	(bad)  
  421c17:	or     dh,al
  421c19:	adc    DWORD PTR [ebx+0x364b9cd1],ecx
  421c1f:	push   cs
  421c20:	xchg   esi,eax
  421c21:	ret    0x44a7
  421c24:	mov    esp,cs
  421c26:	arpl   WORD PTR [ecx],sp
  421c28:	xor    ecx,DWORD PTR [edi-0x77649df4]
  421c2e:	rcl    ecx,0xad
  421c31:	jl     0x421c98
  421c33:	xor    bh,dl
  421c35:	mov    bl,0x98
  421c37:	adc    BYTE PTR [esi],dh
  421c39:	mov    eax,ds:0xcb56f2aa
  421c3e:	dec    edi
  421c3f:	and    BYTE PTR [ebp+0x17ca038f],bl
  421c45:	mov    esi,0x2ac2bc63
  421c4a:	(bad)  
  421c4b:	mov    edi,0xa4d934f
  421c50:	cs aam 0x8a
  421c53:	mov    ch,0xa9
  421c55:	jg     0x421cc2
  421c57:	test   DWORD PTR [edx+ecx*8+0x3fc73974],edx
  421c5e:	xor    BYTE PTR [esi-0x5ea398ff],dl
  421c64:	cmp    ch,BYTE PTR [edx+ecx*8]
  421c67:	(bad)  
  421c68:	mov    eax,ds:0xc1a82a91
  421c6d:	add    BYTE PTR [edx+0x175f5626],0xe4
  421c74:	mov    dl,0xa
  421c76:	sub    eax,0x2a3cc8e1
  421c7b:	adc    DWORD PTR es:[edx+0x45],ecx
  421c7f:	xor    bl,al
  421c81:	mov    al,0x35
  421c83:	mov    cl,0xa4
  421c85:	inc    ebx
  421c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c87:	sbb    DWORD PTR [edx+0x535856da],esp
  421c8d:	sub    esp,ebp
  421c8f:	fnstcw WORD PTR [ecx+0x5d]
  421c92:	mov    al,ds:0x252d5428
  421c97:	jmp    0xbc89:0x72693d3a
  421c9e:	mov    al,ds:0x7a35eb4c
  421ca3:	pop    esp
  421ca4:	in     al,0x19
  421ca6:	test   DWORD PTR [ebx+0x15bbd243],esp
  421cac:	push   ds
  421cad:	cmp    ebp,DWORD PTR ds:[edx-0xc978986]
  421cb4:	ja     0x421cad
  421cb6:	mov    ds:0x4d6b877e,eax
  421cbb:	fs add eax,0x88f8255d
	...
  421d31:	add    BYTE PTR [eax],al
  421d33:	add    bh,ah
  421d35:	push   ds
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	xchg   ecx,eax
  421d41:	enter  0xee7e,0x9e
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    cl,dh
  421d4d:	sbb    DWORD PTR [edx+ebp*2],ecx
  421d50:	mov    edi,0x3e125c7e
  421d55:	sbb    al,0xa1
  421d57:	inc    esi
  421d58:	mov    esp,0x16e08910
  421d5d:	dec    ebx
  421d5e:	jp     0x421d82
  421d60:	sahf   
  421d61:	xor    dl,BYTE PTR [esi+0x2b]
  421d64:	sbb    BYTE PTR [esi],0x9d
  421d67:	or     al,0x42
  421d69:	outs   dx,BYTE PTR ds:[esi]
  421d6a:	je     0x421d16
  421d6c:	mov    dh,0x2a
  421d6e:	std    
  421d6f:	push   esp
  421d70:	fidivr WORD PTR [ebp+0x7afda312]
  421d76:	ficom  WORD PTR [ebx]
  421d78:	or     dh,BYTE PTR [edx]
  421d7a:	call   0x8e94:0xd98ec9b8
  421d81:	xor    dl,BYTE PTR [ebx+0x74712d8b]
  421d87:	fild   WORD PTR [esi-0x5f5c2735]
  421d8d:	cmp    bl,al
  421d8f:	ror    BYTE PTR [ecx+0x6399b22e],cl
  421d95:	jg     0x421dcc
  421d97:	ds aaa 
  421d99:	inc    esp
  421d9a:	test   BYTE PTR [edi-0x2f1d7589],al
  421da0:	pop    eax
  421da1:	add    al,0xfe
  421da3:	dec    esi
  421da4:	js     0x421dc7
  421da6:	retf   
  421da7:	jg     0x421d75
  421da9:	pop    ss
  421daa:	cdq    
  421dab:	cmp    ah,BYTE PTR [edi-0x22]
  421dae:	xor    esi,0x27
  421db1:	into   
  421db2:	hlt    
  421db3:	or     dh,BYTE PTR [edx-0x25]
  421db6:	jmp    0x421df2
  421db8:	mov    al,bh
  421dba:	pop    es
  421dbb:	outs   dx,BYTE PTR ds:[esi]
  421dbc:	xor    bl,BYTE PTR [ecx]
  421dbe:	cli    
  421dbf:	repnz retf 
  421dc1:	leave  
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	sbb    al,0x5a
  421dc5:	pop    ss
  421dc6:	sbb    ah,bh
  421dc8:	xor    DWORD PTR [ebx+eiz*4],0xf9f3bc72
  421dcf:	sbb    eax,0xe714cc80
  421dd4:	dec    edx
  421dd5:	mov    dl,0x4a
  421dd7:	jns    0x421e13
  421dd9:	pop    ecx
  421dda:	iret   
  421ddb:	xchg   edi,eax
  421ddc:	pop    eax
  421ddd:	leave  
  421dde:	das    
  421ddf:	mov    bl,0x7d
  421de1:	loope  0x421d9f
  421de3:	mov    dl,0xac
  421de5:	mov    WORD PTR es:[esi],cs
  421de8:	mov    esp,0x535b6feb
  421ded:	or     cl,bl
  421def:	mov    edx,0x16b3e6c1
  421df4:	pop    ecx
  421df5:	add    dh,BYTE PTR [ebx+esi*1]
  421df8:	test   eax,0xb5ae1aee
  421dfd:	sub    DWORD PTR ds:0x8883e40a,esp
  421e03:	in     eax,dx
  421e04:	fcom   QWORD PTR [eax+0x38]
  421e07:	pop    ebx
  421e08:	sbb    al,0x36
  421e0a:	sti    
  421e0b:	sub    eax,esi
  421e0d:	and    al,ah
  421e0f:	xlat   BYTE PTR ds:[ebx]
  421e10:	xor    dl,dh
  421e12:	lahf   
  421e13:	in     eax,dx
  421e14:	mov    esi,0xffc552b9
  421e19:	fistp  WORD PTR [ebx+0xb943741]
  421e1f:	mov    ecx,0xd60de0f4
  421e24:	mov    esi,0x8526ef2f
  421e29:	mov    al,ds:0x79ef21bb
  421e2e:	popf   
  421e2f:	adc    ebx,DWORD PTR [edi]
  421e31:	sbb    DWORD PTR [ebx],esi
  421e33:	mov    eax,ds:0xcc179fb3
  421e38:	lahf   
  421e39:	fwait
  421e3a:	mov    ds:0x3818c6c0,eax
  421e3f:	and    ch,BYTE PTR [eax+eax*1]
	...
  421eb2:	add    BYTE PTR [eax],al
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421ef9
  421ec1:	stos   DWORD PTR es:[edi],eax
  421ec2:	mov    dh,0x89
  421ec4:	xchg   ebx,eax
  421ec5:	push   0x1
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [edx+esi*8],bh
  421ece:	outs   dx,BYTE PTR ds:[esi]
  421ecf:	xor    BYTE PTR [ecx-0x7d],ah
  421ed2:	add    al,0xb
  421ed4:	clc    
  421ed5:	aam    0x33
  421ed7:	das    
  421ed8:	scas   eax,DWORD PTR es:[edi]
  421ed9:	leave  
  421eda:	push   es
  421edb:	push   ds
  421edc:	repnz mov ebx,0x4b6e8bce
  421ee2:	fstp   TBYTE PTR [ebx+0x7f]
  421ee5:	pop    ebx
  421ee6:	push   esi
  421ee7:	ins    DWORD PTR es:[edi],dx
  421ee8:	dec    eax
  421ee9:	sbb    BYTE PTR [ebx-0x6176511],0xc3
  421ef0:	pop    es
  421ef1:	jns    0x421ef5
  421ef3:	mov    ch,0x67
  421ef5:	hlt    
  421ef6:	jnp    0x421f77
  421ef8:	jb     0x421f1f
  421efa:	jmp    0xeda06943
  421eff:	or     BYTE PTR [edx+esi*8],ah
  421f02:	or     bl,ah
  421f04:	add    DWORD PTR ds:0xa945c598,0x3c
  421f0b:	mov    esp,0xda0b4012
  421f10:	hlt    
  421f11:	sbb    al,0xba
  421f13:	jmp    0x421ed5
  421f15:	sbb    al,0xcc
  421f17:	mov    WORD PTR [ebx+0x684961ad],?
  421f1d:	xor    eax,esp
  421f1f:	cmp    ebx,edx
  421f21:	fs ret 
  421f23:	push   ecx
  421f24:	gs clc 
  421f26:	daa    
  421f27:	jne    0x421f04
  421f29:	push   esi
  421f2a:	and    DWORD PTR [ebx-0x5d7b4abc],esi
  421f30:	sti    
  421f31:	mov    es,esi
  421f33:	popa   
  421f34:	pop    edi
  421f35:	mov    al,0xb
  421f37:	mov    ecx,0x3d60a1d
  421f3c:	inc    edx
  421f3d:	aam    0x68
  421f3f:	jnp    0x421f5c
  421f41:	push   eax
  421f42:	xchg   ebx,eax
  421f43:	jecxz  0x421efa
  421f45:	loopne 0x421ef1
  421f47:	fcom   QWORD PTR [esi+esi*1+0x5c05ed52]
  421f4e:	xor    BYTE PTR [edx],dh
  421f50:	les    esp,FWORD PTR ss:[edx-0x47059778]
  421f57:	test   BYTE PTR [edi],dh
  421f59:	mov    eax,fs
  421f5b:	push   cs
  421f5c:	in     eax,dx
  421f5d:	out    dx,al
  421f5e:	cdq    
  421f5f:	enter  0xfea3,0xc4
  421f63:	xchg   DWORD PTR [ebx-0x3608a85b],edi
  421f69:	mov    ds:0x7d439717,al
  421f6e:	jno    0x421f3a
  421f70:	out    dx,al
  421f71:	imul   ebx,DWORD PTR [ebx-0x1d7359ff],0x8b510b9
  421f7b:	xor    DWORD PTR [esi+esi*4+0x20c4823d],edi
  421f82:	jg     0x421f4d
  421f84:	test   bh,bl
  421f86:	test   eax,0xe02eacda
  421f8b:	jmp    0x8fbb:0x856db190
  421f92:	or     DWORD PTR [edi+0x7f8887c1],edi
  421f98:	jb     0x421ff7
  421f9a:	or     ecx,DWORD PTR [ecx+eiz*8]
  421f9d:	outs   dx,BYTE PTR ds:[esi]
  421f9e:	aaa    
  421f9f:	mov    eax,0x75c039cd
  421fa4:	inc    edi
  421fa5:	sub    ebp,ebx
  421fa7:	sbb    BYTE PTR [ebp+0x606d7f7e],ah
  421fad:	fcomp  QWORD PTR [eax+0x70]
  421fb0:	jg     0x422003
  421fb2:	aaa    
  421fb3:	jl     0x421fee
  421fb5:	mov    cl,0xd7
  421fb7:	mov    cs,WORD PTR ds:0xe3983cd0
  421fbd:	clc    
  421fbe:	mov    bh,BYTE PTR [ebx+0xf]
	...
  422031:	add    BYTE PTR [eax],al
  422033:	add    BYTE PTR [edi-0x243925a2],bl
  422039:	(bad)  
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x91a4b28b
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR [edi],ch
  42204d:	or     al,cl
  42204f:	push   esp
  422050:	inc    edi
  422051:	into   
  422052:	fimul  DWORD PTR [esi+0x28e618b4]
  422058:	adc    eax,0x1b839ed5
  42205d:	adc    al,0xbc
  42205f:	xor    al,0xdc
  422061:	push   es
  422062:	dec    BYTE PTR [esp+esi*8-0xca89978]
  422069:	inc    ecx
  42206a:	mov    al,0x64
  42206c:	(bad)  
  42206d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42206e:	js     0x422072
  422070:	jp     0x42207a
  422072:	sub    al,dh
  422074:	sub    BYTE PTR [ecx-0x337eb425],ah
  42207a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42207b:	sbb    al,0x25
  42207d:	jle    0x42203b
  42207f:	inc    ecx
  422080:	jb     0x42206b
  422082:	sub    al,0x10
  422084:	jnp    0x4220e5
  422086:	mov    ah,0x21
  422088:	adc    edx,DWORD PTR [eax-0x1558e458]
  42208e:	push   ebx
  42208f:	adc    cl,BYTE PTR [esi+0x4c]
  422092:	fistp  WORD PTR [eax]
  422094:	call   0x1d67:0x8eb576ff
  42209b:	adc    ebx,esp
  42209d:	in     eax,0x31
  42209f:	aad    0xf1
  4220a1:	cwde   
  4220a2:	dec    esp
  4220a3:	stc    
  4220a4:	mov    edx,0x1099d792
  4220a9:	sub    esp,edi
  4220ab:	xchg   edi,eax
  4220ac:	sub    ecx,DWORD PTR [esi+0x6e24e353]
  4220b2:	pop    esi
  4220b3:	pushf  
  4220b4:	push   DWORD PTR [edx-0x7f]
  4220b7:	xor    eax,0x94709b29
  4220bc:	mov    eax,ds:0xec9fe343
  4220c1:	sbb    cl,cl
  4220c3:	ins    BYTE PTR es:[edi],dx
  4220c4:	mov    edx,0x1baa7228
  4220c9:	cld    
  4220ca:	aam    0xb8
  4220cc:	fcomp  DWORD PTR [edx-0x16]
  4220cf:	cmp    BYTE PTR [ecx-0x7a],ch
  4220d2:	jno    0x422074
  4220d4:	test   eax,0xc93a4936
  4220d9:	xchg   edx,eax
  4220da:	jns    0x4220c6
  4220dc:	mov    dh,0xde
  4220de:	(bad)  
  4220df:	ins    DWORD PTR es:[edi],dx
  4220e0:	mov    ds:0x9857f1bc,al
  4220e5:	push   eax
  4220e6:	sar    al,0x90
  4220e9:	jns    0x42209f
  4220eb:	aam    0xea
  4220ed:	xor    ebp,0x60
  4220f0:	sahf   
  4220f1:	xor    eax,0x6ca49b22
  4220f6:	dec    ebp
  4220f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220f8:	pop    ebp
  4220f9:	aas    
  4220fa:	fwait
  4220fb:	stc    
  4220fc:	fs add esp,ecx
  4220ff:	jnp    0x4220fd
  422101:	push   cs
  422102:	or     ah,BYTE PTR [ebx+ebx*2]
  422105:	(bad)  
  422106:	push   ss
  422107:	test   DWORD PTR ds:0x460927de,ebx
  42210d:	xor    BYTE PTR [edx],bl
  42210f:	in     al,dx
  422110:	mov    ss,WORD PTR [ecx]
  422112:	jmp    FWORD PTR [edi]
  422114:	cmc    
  422115:	xor    dl,cl
  422117:	pop    esp
  422118:	cwde   
  422119:	cmp    bh,dh
  42211b:	scas   al,BYTE PTR es:[edi]
  42211c:	fmul   QWORD PTR [esi]
  42211e:	xchg   BYTE PTR [edx],ah
  422120:	test   ch,dl
  422122:	adc    al,0x1a
  422124:	mov    esi,0x85d19e03
  422129:	cdq    
  42212a:	sub    BYTE PTR es:[esi-0xc],0xe4
  42212f:	lds    eax,FWORD PTR [ebx+0x4820e589]
  422135:	mov    fs,WORD PTR [ebp+ecx*2+0x30b7e6a1]
  42213c:	or     BYTE PTR [edx+0x2e],ch
  42213f:	popf   
  422140:	cdq    
	...
  4221b1:	add    BYTE PTR [eax],al
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0x82
  4221c1:	hlt    
  4221c2:	nop
  4221c3:	mov    esi,0x16c7d
  4221c8:	cmc    
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [edi-0xcc148f7],dh
  4221d1:	sub    eax,0x39d51f8f
  4221d6:	dec    eax
  4221d7:	jno    0x4221f9
  4221d9:	aas    
  4221da:	ror    BYTE PTR [esi-0x2cb70b5b],0x53
  4221e1:	sbb    BYTE PTR [esi],cl
  4221e3:	dec    ebx
  4221e4:	jp     0x4221a9
  4221e6:	fnstsw WORD PTR [esi]
  4221e8:	pop    edx
  4221e9:	mov    ecx,0xff3bb980
  4221ee:	aad    0xa6
  4221f0:	inc    esp
  4221f1:	fbld   TBYTE PTR [ebp+0x32]
  4221f4:	scas   al,BYTE PTR es:[edi]
  4221f5:	push   ss
  4221f6:	stc    
  4221f7:	pop    ebx
  4221f8:	sub    bh,BYTE PTR [edx-0x4d3c63ee]
  4221fe:	sbb    cl,0xdc
  422201:	mov    WORD PTR [ecx-0x625cd870],cs
  422207:	stos   DWORD PTR es:[edi],eax
  422208:	shl    bl,0x61
  42220b:	repz push ecx
  42220d:	sahf   
  42220e:	ja     0x4221f8
  422210:	cmp    BYTE PTR ds:0x6a40249e,cl
  422216:	sub    BYTE PTR [edi+0x66],al
  422219:	das    
  42221a:	ins    BYTE PTR es:[edi],dx
  42221b:	mov    DWORD PTR [bx],edi
  42221e:	ins    BYTE PTR es:[edi],dx
  42221f:	xor    al,0xcc
  422221:	sub    eax,0x84658882
  422226:	mov    ch,0xa
  422228:	jns    0x422203
  42222a:	rol    BYTE PTR [esi],1
  42222c:	jecxz  0x422254
  42222e:	mov    al,0x85
  422230:	(bad)  
  422231:	jecxz  0x422218
  422233:	push   edx
  422234:	mov    cl,0x32
  422236:	aas    
  422237:	ficomp WORD PTR [ebx]
  422239:	dec    esi
  42223a:	jecxz  0x4221e2
  42223c:	add    ebx,0xd1b1f439
  422242:	mov    ebx,0x95d53b76
  422247:	or     al,0xf2
  422249:	inc    esi
  42224a:	fnstcw WORD PTR [edi-0x1f]
  42224d:	jo     0x422224
  42224f:	fidiv  DWORD PTR [esi]
  422251:	jmp    0x422218
  422253:	je     0x422258
  422255:	cwde   
  422256:	fwait
  422257:	sbb    ah,bl
  422259:	mov    eax,0x684a32c
  42225e:	push   cs
  42225f:	sbb    al,0xe0
  422261:	enter  0xcaf0,0xde
  422265:	inc    esi
  422266:	mov    ch,BYTE PTR [ebp+0x1b818b5c]
  42226c:	(bad)  
  42226e:	dec    edx
  42226f:	xor    esp,edi
  422271:	jns    0x4221f6
  422273:	pusha  
  422274:	jg     0x42222c
  422276:	fwait
  422277:	mov    ebp,0x9bf3502f
  42227c:	fwait
  42227d:	dec    ebp
  42227e:	(bad)  
  42227f:	(bad)  
  422280:	jle    0x42226c
  422282:	fldcw  WORD PTR [ebx]
  422284:	inc    ebx
  422285:	xor    eax,0x74b8d185
  42228a:	and    ah,ah
  42228c:	push   0x67f22a8b
  422291:	jle    0x42223b
  422293:	stc    
  422294:	dec    edx
  422295:	sub    BYTE PTR [eax-0x276a0880],dl
  42229b:	mov    dh,0xa3
  42229d:	dec    esi
  42229e:	add    al,0xfd
  4222a0:	mov    cl,0x83
  4222a2:	adc    ecx,0x4b
  4222a5:	push   ss
  4222a6:	adc    al,0x5f
  4222a8:	push   ds
  4222a9:	call   0x63f90ee
  4222ae:	lods   al,BYTE PTR ds:[esi]
  4222af:	mov    ecx,0x7573bc25
  4222b4:	xchg   esp,eax
  4222b5:	push   eax
  4222b6:	jmp    0x4222fa
  4222b8:	mov    bl,0x58
  4222ba:	inc    eax
  4222bb:	add    eax,0x34eb2a78
  4222c0:	dec    ebp
	...
  422331:	add    BYTE PTR [eax],al
  422333:	add    dh,bh
  422335:	(bad)  
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	jne    0x4222d6
  422342:	dec    esi
  422343:	jg     0x4223b7
  422345:	ins    DWORD PTR es:[edi],dx
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [esi+0x793f547f],ch
  422351:	(bad)  [esi]
  422353:	ror    BYTE PTR [edx],1
  422355:	ja     0x4222ef
  422357:	pop    esi
  422358:	dec    ebx
  422359:	add    BYTE PTR [edi+0x2004578],dh
  42235f:	ror    BYTE PTR [edx-0x79],1
  422362:	cmp    eax,0xb68420ac
  422367:	mov    edi,0x4c9c02e8
  42236c:	cmc    
  42236d:	jge    0x422382
  42236f:	imul   ecx,eax,0xa4ad6886
  422375:	lea    edx,[edi-0x25]
  422378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422379:	push   ss
  42237a:	push   ds
  42237b:	fisttp WORD PTR [esi]
  42237d:	sbb    eax,0xcb909a18
  422382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422383:	mov    ebx,0x8160fea
  422388:	or     cl,BYTE PTR [esi]
  42238a:	cs inc edx
  42238c:	adc    esp,ebx
  42238e:	xor    eax,0xe81f07ea
  422393:	bound  esi,QWORD PTR [edi]
  422395:	add    BYTE PTR ds:0x42603cee,dl
  42239b:	jmp    0x422326
  42239d:	cdq    
  42239e:	jmp    0x1102:0xb4eeb17b
  4223a5:	add    BYTE PTR [edx+0x77],al
  4223a8:	into   
  4223a9:	dec    edi
  4223aa:	adc    eax,0x4342bf71
  4223af:	xor    BYTE PTR [ecx+0x77],ch
  4223b2:	cwde   
  4223b3:	stos   BYTE PTR es:[edi],al
  4223b4:	mov    ebp,0x2fb546fd
  4223b9:	stc    
  4223ba:	xor    al,0x3
  4223bc:	mov    bl,0x54
  4223be:	add    al,bl
  4223c0:	dec    edi
  4223c1:	in     eax,dx
  4223c2:	sbb    edi,DWORD PTR [esi-0x64]
  4223c5:	pop    ecx
  4223c6:	loopne 0x42236c
  4223c8:	data16 sub al,0x45
  4223cb:	or     ch,cl
  4223cd:	enter  0x4a7,0xa3
  4223d1:	(bad)  
  4223d2:	mov    bh,0x71
  4223d4:	and    eax,0x8a814cb2
  4223d9:	sub    al,0x3f
  4223db:	mov    esp,0xecedcea2
  4223e0:	push   eax
  4223e1:	cmp    ebp,eax
  4223e3:	sbb    DWORD PTR [edx+0x45846],ecx
  4223e9:	test   BYTE PTR ds:0x460aa82d,dl
  4223ef:	fild   WORD PTR [eax+0x40]
  4223f2:	xchg   BYTE PTR [edi-0x89750a6],ah
  4223f8:	inc    edi
  4223f9:	retf   
  4223fa:	xchg   ebp,eax
  4223fb:	cwde   
  4223fc:	xor    al,0xfa
  4223fe:	fdivr  st(2),st
  422400:	push   eax
  422401:	push   ebx
  422402:	sub    BYTE PTR fs:[esi-0x62846592],dl
  422409:	clc    
  42240a:	xor    ecx,DWORD PTR [edx-0x31]
  42240d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42240e:	enter  0xadc8,0x9e
  422412:	xchg   edx,eax
  422413:	(bad)  
  422414:	sbb    cl,dl
  422416:	vmread DWORD PTR [ecx],edx
  422419:	popf   
  42241a:	adc    ecx,DWORD PTR [ecx+ebx*8+0x61]
  42241e:	sub    edx,eax
  422420:	add    al,0xd4
  422422:	cli    
  422423:	mov    eax,0xa74bc6c4
  422428:	nop
  422429:	adc    BYTE PTR [eax-0x3778d1aa],0xe4
  422430:	addr16 or al,0x83
  422433:	mov    edi,esp
  422435:	call   0xe434:0x75b76498
  42243c:	test   eax,0x300d38a3
	...
  4224b1:	add    BYTE PTR [eax],al
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0xeeec9f7c
  4224c2:	or     al,0x68
  4224c4:	outs   dx,BYTE PTR ds:[si]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	cmc    
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [edx],al
  4224cd:	imul   eax,DWORD PTR [ecx],0x13
  4224d0:	sub    DWORD PTR [edx-0x4ad1a10f],edi
  4224d6:	xchg   edx,eax
  4224d7:	and    DWORD PTR [eax],esp
  4224d9:	xor    esi,DWORD PTR [ecx-0x5f3fe579]
  4224df:	sti    
  4224e0:	ins    DWORD PTR es:[edi],dx
  4224e1:	scas   al,BYTE PTR es:[edi]
  4224e2:	ins    DWORD PTR es:[edi],dx
  4224e3:	imul   ebp,DWORD PTR [ecx],0x66
  4224e6:	(bad)  
  4224e7:	and    DWORD PTR [ecx-0x45c3d9a4],eax
  4224ed:	xlat   BYTE PTR ds:[ebx]
  4224ee:	les    edx,FWORD PTR [esi]
  4224f0:	(bad)  
  4224f1:	sbb    DWORD PTR [edi],ecx
  4224f3:	scas   eax,DWORD PTR es:[edi]
  4224f4:	int    0x21
  4224f6:	out    0x7b,al
  4224f8:	sti    
  4224f9:	retf   0x3616
  4224fc:	sbb    ebp,0xfffffff2
  4224ff:	xchg   ecx,eax
  422500:	dec    edi
  422501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422502:	mov    al,0xd1
  422504:	sbb    DWORD PTR [eax],eax
  422506:	jns    0x4224c8
  422508:	sbb    dh,BYTE PTR [eax]
  42250a:	mov    ebx,0x4df04a2c
  42250f:	in     eax,dx
  422510:	dec    esi
  422511:	lods   eax,DWORD PTR ds:[esi]
  422512:	jae    0x422555
  422514:	pop    eax
  422515:	jmp    0x9e2f104d
  42251a:	mov    esi,0x59abe50d
  422520:	fisttp WORD PTR [esi+0x37be529e]
  422526:	pop    ebp
  422527:	lods   eax,DWORD PTR ds:[esi]
  422528:	xor    DWORD PTR [ecx-0x6c4ade27],0x32c1eebb
  422532:	mov    ebx,0xc95c92a0
  422537:	outs   dx,DWORD PTR ds:[esi]
  422538:	aad    0xdd
  42253a:	push   esi
  42253b:	pop    DWORD PTR [ecx-0x77b4adf6]
  422541:	xlat   BYTE PTR ds:[ebx]
  422542:	xchg   BYTE PTR [eax+edx*4+0xd1bc436],dl
  422549:	lds    ebx,FWORD PTR [edx]
  42254b:	fnstsw WORD PTR [ebx]
  42254d:	outs   dx,DWORD PTR ds:[esi]
  42254e:	repz ror DWORD PTR [edi-0xc],1
  422552:	in     eax,dx
  422553:	fistp  QWORD PTR [ebx+0x420ccf1b]
  422559:	push   ebp
  42255a:	sti    
  42255b:	popf   
  42255c:	fsubr  DWORD PTR [esi+0x59]
  42255f:	push   ss
  422560:	ins    DWORD PTR es:[edi],dx
  422561:	mov    ah,0x68
  422563:	pop    eax
  422564:	push   edi
  422565:	(bad)  
  422567:	sub    bl,BYTE PTR [edi]
  422569:	push   0xeae43416
  42256e:	pop    edx
  42256f:	mov    al,0xc8
  422571:	fistp  QWORD PTR [ebp-0x236714b5]
  422577:	imul   ecx,DWORD PTR [edi],0x3f
  42257a:	mov    bh,0xec
  42257c:	addr16 inc eax
  42257e:	inc    esp
  42257f:	jns    0x42258d
  422581:	cli    
  422582:	xor    bl,dh
  422584:	pop    eax
  422585:	cdq    
  422586:	lods   al,BYTE PTR ds:[esi]
  422587:	xor    al,0xa5
  422589:	mov    ?,WORD PTR [esi-0x8]
  42258c:	imul   esi,DWORD PTR [edx-0xd],0xffffffd5
  422590:	rcr    edi,0x74
  422593:	sbb    BYTE PTR [edi+0x18016883],dl
  422599:	fdivp  st(0),st
  42259b:	leave  
  42259c:	xor    edx,DWORD PTR [esi+0x33ac0f55]
  4225a2:	or     ecx,DWORD PTR [ebp+0x78]
  4225a5:	addr16 sbb edx,0x66
  4225a9:	sti    
  4225aa:	jecxz  0x422551
  4225ac:	xchg   esp,eax
  4225ad:	dec    eax
  4225ae:	dec    edi
  4225af:	push   ss
  4225b0:	jmp    0xf822:0xb81180f4
  4225b7:	jg     0x42254f
  4225b9:	test   al,0x9f
  4225bb:	out    dx,al
  4225bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225bd:	push   eax
  4225be:	fmul   DWORD PTR [edx+0x28]
	...
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	lahf   
  422641:	mov    dh,0xd3
  422643:	enter  0x6f5c,0x1
  422647:	add    ch,dh
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [ebx-0x493d2d7a],ah
  422651:	imul   al
  422653:	and    ch,dl
  422655:	sti    
  422656:	mov    BYTE PTR [edi-0x4f6bb6b2],0x36
  42265d:	outs   dx,BYTE PTR ds:[esi]
  42265e:	sbb    bl,BYTE PTR [eax]
  422660:	xor    ecx,eax
  422662:	push   ebx
  422663:	dec    esp
  422664:	mov    ds:0xc3309781,eax
  422669:	jle    0x422603
  42266b:	fbld   TBYTE PTR es:[edi]
  42266e:	hlt    
  42266f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422670:	or     DWORD PTR [ebx+0x13a4cd51],0xffffffde
  422677:	sub    esi,esp
  422679:	lods   al,BYTE PTR ds:[esi]
  42267a:	mov    ch,0x7
  42267c:	mov    ch,0x6d
  42267e:	adc    eax,0xa54b5f6c
  422683:	shl    DWORD PTR [edi+0x3a2083d8],0x18
  42268a:	jmp    0x42267f
  42268c:	sbb    eax,0xa79fc8b8
  422691:	adc    BYTE PTR [esi+ecx*1+0x57],ah
  422695:	ds daa 
  422697:	pop    esi
  422698:	and    al,0x76
  42269a:	stos   DWORD PTR es:[edi],eax
  42269b:	mov    ds:0x3f0daaea,eax
  4226a0:	int    0x1d
  4226a2:	add    al,dl
  4226a4:	gs inc ebp
  4226a6:	jle    0x42265c
  4226a8:	repz sbb al,0xdf
  4226ab:	sbb    eax,0xfd5810b2
  4226b0:	or     eax,0xdd613bcd
  4226b5:	dec    edi
  4226b6:	loopne 0x42272c
  4226b8:	or     ah,ah
  4226ba:	lods   eax,DWORD PTR ds:[esi]
  4226bb:	jl     0x422700
  4226bd:	clc    
  4226be:	retf   
  4226bf:	mov    ah,BYTE PTR [edi+0x53]
  4226c2:	mov    ebp,0xbbadc47a
  4226c7:	fmulp  st(3),st
  4226c9:	xchg   ecx,eax
  4226ca:	add    eax,0x1ede7770
  4226cf:	inc    edx
  4226d0:	mov    dh,0xd0
  4226d2:	pop    eax
  4226d3:	in     al,0xad
  4226d5:	mov    bl,0x42
  4226d7:	mov    eax,ds:0xfd54acf3
  4226dc:	test   eax,0x41c8f7e
  4226e1:	lock popf 
  4226e3:	ret    0xe80b
  4226e6:	scas   al,BYTE PTR es:[edi]
  4226e7:	or     eax,0x7eb188e4
  4226ec:	stos   BYTE PTR es:[edi],al
  4226ed:	push   ebx
  4226ee:	jge    0x422747
  4226f0:	add    bl,bh
  4226f2:	pop    edx
  4226f3:	inc    edi
  4226f4:	popf   
  4226f5:	mov    al,0x86
  4226f7:	mov    ebp,0x1e9bc56a
  4226fc:	sub    eax,0x6dca6b7
  422701:	mov    dl,0xd8
  422703:	sbb    BYTE PTR [edx+0x8],ch
  422706:	data16 mov cl,0xa5
  422709:	sti    
  42270a:	xor    al,0xd4
  42270c:	les    esp,FWORD PTR [ebp+ebx*1-0x5377dd8a]
  422713:	or     al,0x9b
  422715:	mov    dl,0x84
  422717:	fwait
  422718:	jge    0x42271e
  42271a:	add    al,0xdf
  42271c:	mov    dl,0x56
  42271e:	add    BYTE PTR [edx+0x4ffab055],0x4b
  422725:	pop    ebp
  422726:	pop    ebx
  422727:	out    0x74,eax
  422729:	xchg   esp,eax
  42272a:	xchg   ebx,eax
  42272b:	sti    
  42272c:	fnstsw WORD PTR [ecx+0x28b89efb]
  422732:	jecxz  0x422787
  422734:	cli    
  422735:	call   0x31a6653a
  42273a:	fcom   QWORD PTR [eax]
  42273c:	aaa    
  42273d:	fwait
  42273e:	xchg   edx,eax
  42273f:	fwait
  422740:	sbb    eax,DWORD PTR [eax]
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	add    DWORD PTR [esi+0x7051fb9f],ebp
  4227c6:	add    DWORD PTR [eax],eax
  4227c8:	cmc    
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    cl,ch
  4227cd:	js     0x422832
  4227cf:	push   ds
  4227d0:	mov    edi,0xf8118c68
  4227d5:	mov    ds:0x753c8b68,al
  4227da:	sar    BYTE PTR [edx+0x6504987a],cl
  4227e0:	mov    ?,WORD PTR [eax+0x4457e9a9]
  4227e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e7:	sub    al,0x4d
  4227e9:	pop    ss
  4227ea:	xchg   edx,eax
  4227eb:	or     eax,0xefdd55f6
  4227f0:	div    BYTE PTR ds:0x5af4f2af
  4227f6:	or     ecx,DWORD PTR [ecx+0x70373e05]
  4227fc:	add    esi,DWORD PTR [esi]
  4227fe:	sbb    ebp,edi
  422800:	sub    bl,BYTE PTR [eax-0x44]
  422803:	mov    esp,0x4f584c33
  422808:	inc    ecx
  422809:	fidiv  DWORD PTR [ebx+esi*4+0x1b836623]
  422810:	push   ss
  422811:	pop    esi
  422812:	add    DWORD PTR [edi],edx
  422814:	pushf  
  422815:	dec    edi
  422816:	scas   eax,DWORD PTR es:[edi]
  422817:	xchg   edx,eax
  422818:	add    BYTE PTR [edi-0x4223da09],ah
  42281e:	dec    ebp
  42281f:	xor    al,0xa4
  422821:	popf   
  422822:	cmp    DWORD PTR [edi-0x9625c60],ecx
  422828:	mov    esp,0x2de1cd74
  42282d:	dec    eax
  42282e:	fbld   TBYTE PTR [ebp-0x31]
  422831:	sub    bl,BYTE PTR [edx-0x1448a465]
  422837:	push   cs
  422838:	nop
  422839:	mov    BYTE PTR [ebx-0x70a5ce29],ah
  42283f:	cmc    
  422840:	jl     0x4228a8
  422842:	stos   DWORD PTR es:[edi],eax
  422843:	add    BYTE PTR [ebp-0x42d0494d],bl
  422849:	imul   esp,DWORD PTR [esi+0x37d28974],0x4d
  422850:	imul   eax,esi,0xffffffea
  422853:	in     eax,0xa1
  422855:	cli    
  422856:	xchg   edi,eax
  422857:	out    0x3c,eax
  422859:	pop    esp
  42285a:	call   0x432a8e1c
  42285f:	push   cs
  422860:	xor    ebp,ebx
  422862:	int    0xc
  422864:	pop    eax
  422865:	out    dx,al
  422866:	imul   eax,ebp,0x693bea81
  42286c:	dec    ebx
  42286d:	push   esp
  42286e:	aaa    
  42286f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422870:	xchg   edi,eax
  422871:	mov    bh,bl
  422873:	fs cdq 
  422875:	sbb    bl,BYTE PTR [ecx]
  422877:	dec    eax
  422878:	stc    
  422879:	and    eax,0x9705bd3b
  42287e:	or     esi,eax
  422880:	push   es
  422881:	iret   
  422882:	xchg   ebx,eax
  422883:	sbb    al,0xb1
  422885:	pop    ds
  422886:	aam    0x6f
  422888:	fldenv [esi-0x6c2211bb]
  42288e:	loopne 0x422878
  422890:	sub    edi,esi
  422892:	leave  
  422893:	xor    DWORD PTR [ebx-0x42],ebp
  422896:	mov    es,WORD PTR [edi-0xe9a47aa]
  42289c:	or     dh,al
  42289e:	js     0x4228b1
  4228a0:	das    
  4228a1:	xor    ah,BYTE PTR [edi-0x2f2d9647]
  4228a7:	stc    
  4228a8:	dec    esi
  4228a9:	dec    esp
  4228aa:	pop    eax
  4228ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ac:	inc    sp
  4228ae:	dec    esp
  4228af:	xor    eax,0x2793bcb4
  4228b4:	and    DWORD PTR [edx-0x68bf3e94],esi
  4228ba:	inc    esi
  4228bb:	jecxz  0x42292b
  4228bd:	xchg   ebp,eax
  4228be:	icebp  
  4228bf:	pusha  
  4228c0:	in     al,dx
	...
  422931:	add    BYTE PTR [eax],al
  422933:	add    dh,bh
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	test   eax,0x460157a4
  422945:	jno    0x422948
  422947:	add    ch,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [ebx-0x18],dh
  42294e:	xor    ah,BYTE PTR [edx]
  422950:	mov    ds:0x1c992adb,eax
  422955:	scas   eax,DWORD PTR es:[edi]
  422956:	mov    DWORD PTR [ecx+0x47],edx
  422959:	push   edi
  42295a:	(bad)  
  42295b:	out    0xe9,al
  42295d:	xor    ch,dh
  42295f:	nop
  422960:	retf   0xe636
  422963:	arpl   WORD PTR [edx],bp
  422965:	pop    ss
  422966:	sub    al,0xd
  422968:	push   0xffffffa0
  42296a:	and    esp,ecx
  42296c:	enter  0xc2a8,0x81
  422970:	imul   ecx,DWORD PTR ds:0x38f2ab4f,0x18
  422977:	mov    dl,0x3f
  422979:	test   cl,al
  42297b:	or     DWORD PTR [esp+ecx*8+0x79],0xe5deda2d
  422983:	adc    edx,DWORD PTR [esi-0x4f8d034c]
  422989:	imul   esp,DWORD PTR [esp+ebx*1+0x3f08106b],0xffffffcf
  422991:	or     dl,BYTE PTR [edx+eiz*2+0x2950f070]
  422998:	loope  0x422993
  42299a:	push   ebp
  42299b:	pop    es
  42299c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42299d:	xchg   ebx,eax
  42299e:	neg    BYTE PTR [edi-0x193341b9]
  4229a4:	xchg   BYTE PTR [edi+0x1a96dcfe],dh
  4229aa:	xchg   ecx,eax
  4229ab:	ret    0x719c
  4229ae:	and    eax,0x76bedd12
  4229b3:	stos   DWORD PTR es:[edi],eax
  4229b4:	xlat   BYTE PTR ds:[ebx]
  4229b5:	pusha  
  4229b6:	nop
  4229b7:	jle    0x4229ab
  4229b9:	aas    
  4229ba:	ret    0x638
  4229bd:	fbstp  TBYTE PTR [ebp+0x3d]
  4229c0:	repnz (bad) [ebp-0x790710cd]
  4229c7:	idiv   BYTE PTR [ebx-0x6c5190e2]
  4229cd:	or     DWORD PTR [eax-0x3c],ecx
  4229d0:	test   al,0xa3
  4229d2:	ret    0xec41
  4229d5:	xor    edi,DWORD PTR [ebx]
  4229d7:	dec    edi
  4229d8:	mov    DWORD PTR [di+0x74],eax
  4229dc:	les    ebp,FWORD PTR [edx+0x2d801ce5]
  4229e2:	mov    cl,0x56
  4229e4:	data16 mov ch,0x14
  4229e7:	push   ecx
  4229e8:	push   ds
  4229e9:	sub    BYTE PTR [ecx+0x27ea6bc9],0xf6
  4229f0:	retf   0xfa00
  4229f3:	ss ins BYTE PTR es:[edi],dx
  4229f5:	pop    esp
  4229f6:	and    ebp,ecx
  4229f8:	inc    ecx
  4229f9:	fild   DWORD PTR [ecx]
  4229fb:	mov    ds:0xf4522fab,eax
  422a00:	lds    edx,FWORD PTR [ecx-0x4dbde3e]
  422a06:	mov    ch,0xd4
  422a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a09:	les    esp,FWORD PTR [esi+0x4e]
  422a0c:	push   ss
  422a0d:	jmp    0x8c8bd688
  422a12:	fucomip st,st(5)
  422a14:	inc    ebp
  422a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a16:	add    BYTE PTR [ebp+0x85d899d],ch
  422a1c:	cs jmp 0x550e:0x9e950dfd
  422a24:	out    dx,al
  422a25:	scas   eax,DWORD PTR es:[edi]
  422a26:	rcr    DWORD PTR [ecx-0x6a],1
  422a29:	scas   eax,DWORD PTR es:[edi]
  422a2a:	mov    WORD PTR [edx],ds
  422a2c:	les    esp,FWORD PTR [esi-0x59]
  422a2f:	(bad)  
  422a30:	ss dec edi
  422a32:	outs   dx,BYTE PTR ds:[esi]
  422a33:	cdq    
  422a34:	mov    edx,0x338f79cb
  422a39:	and    DWORD PTR [ebp-0x74],esp
  422a3c:	pop    edi
  422a3d:	adc    DWORD PTR [ecx+0x6f],0x4f
	...
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	arpl   WORD PTR [ecx-0x5d],ax
  422ac3:	push   ebx
  422ac4:	cmp    esi,DWORD PTR [edx+0x1]
  422ac7:	add    ch,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [edx+0x5b],dh
  422ace:	mov    ah,0x87
  422ad0:	(bad)  
  422ad2:	enter  0x89f3,0xb1
  422ad6:	in     al,dx
  422ad7:	inc    ebp
  422ad8:	add    ebp,DWORD PTR [edi+edi*8-0x6e]
  422adc:	sbb    ebp,DWORD PTR [ebx]
  422ade:	adc    eax,0x62774d84
  422ae3:	mov    WORD PTR [edx-0x773944a2],cs
  422ae9:	and    eax,0x9649975e
  422aee:	in     eax,dx
  422aef:	or     eax,0xc26148a3
  422af4:	mov    al,0x8d
  422af6:	add    bl,bl
  422af8:	ds int3 
  422afa:	loop   0x422a9a
  422afc:	pop    ebx
  422afd:	rcl    DWORD PTR [ebx],0xf5
  422b00:	fsubr  DWORD PTR [ecx]
  422b02:	into   
  422b03:	fsub   st,st(6)
  422b05:	jl     0x422b2a
  422b07:	gs es out dx,eax
  422b0a:	xchg   edx,eax
  422b0b:	loopne 0x422b58
  422b0d:	fs jp  0x422b3e
  422b10:	push   edx
  422b11:	dec    ebp
  422b12:	xchg   BYTE PTR [ebx],dl
  422b14:	push   cs
  422b15:	adc    DWORD PTR [esi],esi
  422b17:	sub    BYTE PTR [eax+eiz*4-0x3f],bl
  422b1b:	in     eax,0x78
  422b1d:	add    ebx,DWORD PTR fs:[ebx+0x67dcd301]
  422b24:	test   DWORD PTR [eax],ecx
  422b26:	(bad)  
  422b27:	inc    ebp
  422b29:	in     al,0x52
  422b2b:	mov    ebp,0x3addca70
  422b30:	in     al,0xbd
  422b32:	xchg   edx,eax
  422b33:	hlt    
  422b34:	stos   DWORD PTR es:[edi],eax
  422b35:	and    al,0x2d
  422b37:	(bad)  
  422b38:	and    al,0xd8
  422b3a:	and    edx,DWORD PTR [eax]
  422b3c:	dec    ecx
  422b3d:	ins    BYTE PTR es:[edi],dx
  422b3e:	cld    
  422b3f:	cmp    eax,DWORD PTR [ebp-0x209802f6]
  422b45:	(bad)  
  422b47:	cmp    al,0x80
  422b49:	cli    
  422b4a:	(bad)  
  422b4c:	jge    0x422b8a
  422b4e:	dec    esi
  422b4f:	pop    ds
  422b50:	or     cl,ah
  422b52:	call   0x623cc0e3
  422b57:	or     dh,BYTE PTR ds:0xa6ac2f33
  422b5d:	into   
  422b5e:	imul   edx,DWORD PTR [eax],0x73ccbac7
  422b64:	xor    al,0x42
  422b66:	push   esp
  422b67:	xchg   edx,eax
  422b68:	xlat   BYTE PTR ds:[ebx]
  422b69:	test   edx,0x2e5bba25
  422b6f:	nop
  422b70:	jnp    0x422b14
  422b72:	xor    al,0xdc
  422b74:	ins    BYTE PTR es:[edi],dx
  422b75:	cmp    bh,BYTE PTR [eax+0x1f]
  422b78:	pop    ebx
  422b79:	or     bh,bl
  422b7b:	cmp    al,0xb2
  422b7d:	cwde   
  422b7e:	dec    edx
  422b7f:	aam    0x9f
  422b81:	cmpxchg DWORD PTR [ecx+0x4d],esi
  422b85:	inc    ebx
  422b86:	fadd   QWORD PTR [edi+0x61dea8aa]
  422b8c:	jecxz  0x422c0c
  422b8e:	push   ebx
  422b8f:	push   edi
  422b90:	fnstcw WORD PTR [esi]
  422b92:	xor    esi,esi
  422b94:	pushf  
  422b95:	pushf  
  422b96:	inc    edi
  422b97:	jns    0x422bb6
  422b99:	sahf   
  422b9a:	enter  0x91a5,0xb5
  422b9e:	sbb    bl,0x2b
  422ba1:	push   es
  422ba2:	mov    edx,0xfcc79c88
  422ba7:	sub    eax,0x8a673519
  422bac:	dec    edi
  422bad:	dec    ebx
  422bae:	popf   
  422baf:	mov    dh,0x50
  422bb1:	inc    ebx
  422bb2:	mov    ds:0x2ec65a73,al
  422bb7:	add    al,BYTE PTR [ebx-0x29]
  422bba:	dec    edi
  422bbb:	xor    BYTE PTR [eax],dh
  422bbd:	arpl   WORD PTR [edi+0x8765],si
	...
  422c33:	add    BYTE PTR [eax-0x1a4a95],dh
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	test   BYTE PTR [eax+0x7330e299],dh
  422c46:	add    DWORD PTR [eax],eax
  422c48:	cmc    
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    ch,cl
  422c4d:	cmp    edi,esp
  422c4f:	inc    esp
  422c50:	or     BYTE PTR [ebx-0x36],0x66
  422c54:	mov    esi,0xa55b4d2a
  422c59:	push   edx
  422c5a:	pop    ss
  422c5b:	inc    ebp
  422c5c:	clc    
  422c5d:	sbb    BYTE PTR [edi+0x4c4285a7],dh
  422c63:	fidiv  WORD PTR [ebx]
  422c65:	xor    ah,BYTE PTR [ebp+0x662b495a]
  422c6b:	out    dx,al
  422c6c:	loop   0x422c65
  422c6e:	in     eax,0x33
  422c70:	inc    ebx
  422c71:	and    edi,DWORD PTR [edi+ecx*8-0x985374f]
  422c78:	stos   DWORD PTR es:[edi],eax
  422c79:	ror    BYTE PTR [esi],1
  422c7b:	push   ebx
  422c7c:	in     eax,dx
  422c7d:	imul   esi,DWORD PTR [ebx+0x2be717d1],0xd289a69b
  422c87:	mov    ah,0x9e
  422c89:	xor    eax,0xddc0afd2
  422c8e:	daa    
  422c8f:	aam    0xe6
  422c91:	call   0xd9e7cbe0
  422c96:	dec    ebx
  422c97:	in     al,dx
  422c98:	fld    TBYTE PTR ds:0x352b9f07
  422c9e:	ja     0x422c21
  422ca0:	add    bl,BYTE PTR [esi+ebx*1-0x3f]
  422ca4:	nop
  422ca5:	adc    ah,ch
  422ca7:	mov    al,0x2b
  422ca9:	mov    ebp,DWORD PTR [esi+0x2180ebdd]
  422caf:	or     edx,DWORD PTR [edi-0x13dd7692]
  422cb5:	xchg   esi,eax
  422cb6:	cli    
  422cb7:	push   esp
  422cb8:	sbb    edx,edx
  422cba:	loop   0x422c9b
  422cbc:	fcomp  QWORD PTR [ebx-0x61]
  422cbf:	repnz mov gs,WORD PTR [esi-0x48]
  422cc3:	cmp    esp,eax
  422cc5:	loope  0x422d0e
  422cc7:	mov    al,ds:0xeb7a36b1
  422ccc:	inc    eax
  422ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cce:	frstpm(287 only) 
  422cd0:	pop    ecx
  422cd1:	bound  ebp,QWORD PTR [ecx]
  422cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cd4:	out    0x4,al
  422cd6:	ins    DWORD PTR es:[edi],dx
  422cd7:	mov    al,0xe2
  422cd9:	pop    ss
  422cda:	lods   al,BYTE PTR ds:[esi]
  422cdb:	popf   
  422cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cdd:	and    DWORD PTR [ebx-0x1c7add4e],edi
  422ce3:	mov    ds:0x104ccd9f,al
  422ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce9:	aam    0x7c
  422ceb:	inc    esi
  422cec:	and    DWORD PTR [ebx+0x4fa48b9a],esi
  422cf2:	nop
  422cf3:	int    0x4e
  422cf5:	mov    eax,ds:0xa004a79d
  422cfa:	test   eax,0xf78d3906
  422cff:	into   
  422d00:	add    edi,ecx
  422d02:	call   FWORD PTR [ecx]
  422d04:	or     eax,0x54294f09
  422d09:	adc    BYTE PTR [ebp-0x37813a75],al
  422d0f:	xor    al,0x27
  422d11:	shl    BYTE PTR [ecx+0x54],1
  422d14:	sub    al,0x54
  422d16:	arpl   dx,sp
  422d18:	xor    ebx,eax
  422d1a:	dec    esp
  422d1b:	in     al,dx
  422d1c:	pop    ebx
  422d1d:	cld    
  422d1e:	icebp  
  422d1f:	cmp    DWORD PTR [ebp-0x19f0a762],0xfffffffe
  422d26:	sahf   
  422d27:	dec    edi
  422d28:	dec    ebx
  422d29:	mov    dh,0x55
  422d2b:	pop    edx
  422d2c:	icebp  
  422d2d:	ss ins DWORD PTR es:[edi],dx
  422d2f:	je     0x422cdc
  422d31:	dec    ecx
  422d32:	jle    0x422d84
  422d34:	sbb    eax,0x60b1f1b9
  422d39:	pop    esp
  422d3a:	or     BYTE PTR [edi+ecx*2+0x52],ch
  422d3e:	sub    edi,edi
  422d40:	or     al,0x0
	...
  422db2:	add    BYTE PTR [eax],al
  422db4:	iret   
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0xe59af9f7
  422dc2:	scas   eax,DWORD PTR es:[edi]
  422dc3:	(bad)  
  422dc4:	and    eax,0xf5000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    ch,bl
  422dcd:	popa   
  422dce:	xchg   esi,eax
  422dcf:	sbb    al,0xc2
  422dd1:	cs mov dh,0xae
  422dd4:	jmp    0xc1a3db9c
  422dd9:	loop   0x422e33
  422ddb:	pop    eax
  422ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ddd:	add    esp,DWORD PTR [ebp+0x65]
  422de0:	add    BYTE PTR [edi-0x4b22a527],al
  422de6:	adc    al,0x4a
  422de8:	(bad)  
  422de9:	out    0x15,eax
  422deb:	dec    ebp
  422dec:	ja     0x422d7f
  422dee:	pop    edi
  422def:	and    ecx,esi
  422df1:	(bad)  
  422df2:	or     DWORD PTR [edx+0x4e520d26],esi
  422df8:	or     eax,0xe77785fb
  422dfd:	(bad)  
  422dfe:	(bad)  
  422dff:	jmp    0xb82d0c99
  422e04:	(bad)  [ebp-0x47]
  422e07:	jmp    DWORD PTR [ecx+0x4c]
  422e0a:	push   esp
  422e0b:	push   ss
  422e0c:	aam    0x46
  422e0e:	std    
  422e0f:	loop   0x422d9a
  422e11:	das    
  422e12:	xor    al,0x24
  422e14:	or     eax,0xa48fd98e
  422e19:	jp     0x422e6a
  422e1b:	cli    
  422e1c:	push   0x9c7b452
  422e21:	mov    ebx,0xed845dfd
  422e26:	adc    ah,BYTE PTR [edi-0x1f15c41a]
  422e2c:	mov    bh,0xe7
  422e2e:	push   eax
  422e2f:	test   DWORD PTR [ebx],0xf9fa26f0
  422e35:	cmp    DWORD PTR ds:[edi-0x17],eax
  422e39:	dec    ebp
  422e3a:	add    eax,ebp
  422e3c:	out    dx,eax
  422e3d:	bound  ecx,QWORD PTR [edi-0x3c]
  422e40:	mov    bh,0x3
  422e42:	fidiv  WORD PTR [ebp-0x28f2bbe9]
  422e48:	je     0x422ebc
  422e4a:	out    dx,eax
  422e4b:	ins    BYTE PTR es:[edi],dx
  422e4c:	xchg   ecx,eax
  422e4d:	add    al,0xdb
  422e4f:	test   al,0xc6
  422e51:	(bad)  
  422e52:	lods   eax,DWORD PTR ds:[esi]
  422e53:	in     eax,0x78
  422e55:	jmp    0x422e6c
  422e57:	adc    bh,BYTE PTR [edx]
  422e59:	jae    0x422e11
  422e5b:	shr    eax,cl
  422e5d:	ins    DWORD PTR es:[edi],dx
  422e5e:	inc    ebp
  422e5f:	sub    ecx,DWORD PTR [esi-0x4affcb2d]
  422e65:	push   ebx
  422e66:	add    ecx,esi
  422e68:	push   es
  422e69:	repz adc BYTE PTR [edi+0x69],ah
  422e6d:	sbb    al,dl
  422e6f:	into   
  422e70:	sub    bl,BYTE PTR ss:[bx+di]
  422e74:	ins    BYTE PTR es:[edi],dx
  422e75:	xchg   esp,eax
  422e76:	dec    edi
  422e77:	inc    ebx
  422e78:	mov    ds:0xad3dea53,al
  422e7d:	sahf   
  422e7e:	(bad)  
  422e80:	adc    DWORD PTR [ebx+ebp*1+0x4b],0xafd8ac20
  422e88:	or     DWORD PTR [ebx-0xb],0x76606709
  422e8f:	jg     0x422e46
  422e91:	in     eax,0xf8
  422e93:	cmp    DWORD PTR [edx+eax*8-0x1d],ebp
  422e97:	xchg   DWORD PTR [esi-0xb],edx
  422e9a:	test   BYTE PTR [eax+ebx*4-0x55],bl
  422e9e:	sbb    ecx,esi
  422ea0:	pushf  
  422ea1:	dec    esp
  422ea2:	enter  0xb2e8,0x14
  422ea6:	ds int3 
  422ea8:	rcl    BYTE PTR [ebp-0x76cbc65e],0xe9
  422eaf:	les    ebp,FWORD PTR [ebp-0x2193103f]
  422eb5:	repz cmp DWORD PTR [eax+eax*1],esp
  422eb9:	jb     0x422ec4
  422ebb:	out    0x62,al
  422ebd:	push   cs
  422ebe:	loop   0x422f37
  422ec0:	pop    esp
	...
  422f31:	add    BYTE PTR [eax],al
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    dh,BYTE PTR fs:[bx+si-0x5b1c]
  422f43:	sub    DWORD PTR [edx],ebx
  422f45:	jne    0x422f48
  422f47:	add    ch,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    BYTE PTR [ecx-0x49],ah
  422f4e:	cli    
  422f4f:	es (bad) 
  422f51:	adc    ah,bh
  422f53:	mov    ebx,0x71e83daa
  422f58:	xchg   edx,eax
  422f59:	(bad)  
  422f5b:	in     eax,dx
  422f5c:	xchg   edx,eax
  422f5d:	neg    ah
  422f5f:	mov    eax,0xba0e0928
  422f64:	cmp    DWORD PTR [ebp+0x72],edx
  422f67:	call   0x982f0058
  422f6c:	adc    DWORD PTR [ecx+0x71],eax
  422f6f:	lods   eax,DWORD PTR ds:[esi]
  422f70:	es dec ebx
  422f72:	loopne 0x422f87
  422f74:	inc    esi
  422f75:	js     0x422f24
  422f77:	dec    eax
  422f78:	adc    eax,0xb99beda9
  422f7d:	repnz loopne 0x422fdd
  422f80:	adc    DWORD PTR [edi+0x6e],ecx
  422f83:	imul   edx,DWORD PTR [edi-0x4],0x28
  422f87:	frstor [edi-0x2a]
  422f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8b:	js     0x422fc4
  422f8d:	mov    eax,ds:0xab292a31
  422f92:	fs aam 0x5d
  422f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f96:	fcomp  QWORD PTR [edx-0x28cd3477]
  422f9c:	sbb    bh,bl
  422f9e:	sub    eax,0xcc10d85c
  422fa3:	jg     0x422fe9
  422fa5:	add    DWORD PTR [eax],ebx
  422fa7:	out    dx,eax
  422fa8:	out    0x11,al
  422faa:	pusha  
  422fab:	(bad)  
  422fad:	xlat   BYTE PTR ds:[ebx]
  422fae:	xchg   DWORD PTR [ebx+0x56028c71],esp
  422fb4:	jae    0x422fff
  422fb6:	in     al,dx
  422fb7:	daa    
  422fb8:	adc    dh,BYTE PTR [eax-0x7bd7a5bc]
  422fbe:	int    0xcb
  422fc0:	push   eax
  422fc1:	mov    eax,ds:0x626d6e7e
  422fc6:	hlt    
  422fc7:	push   ecx
  422fc8:	cmp    cl,BYTE PTR [ecx+0x3c]
  422fcb:	les    esp,FWORD PTR ds:0x7d61682f
  422fd1:	sub    ecx,DWORD PTR [edi-0x79]
  422fd4:	test   BYTE PTR ds:0xd6dd8a47,ah
  422fda:	ror    al,cl
  422fdc:	sbb    BYTE PTR [ebx-0x30f7087],dh
  422fe2:	ja     0x422fb7
  422fe4:	jno    0x422fb2
  422fe6:	in     eax,dx
  422fe7:	xchg   ebx,eax
  422fe8:	mov    DWORD PTR [edx+esi*4+0x17da5641],esp
  422fef:	ins    DWORD PTR es:[edi],dx
  422ff0:	mov    bl,0x65
  422ff2:	aam    0x9a
  422ff4:	pop    ecx
  422ff5:	fs add eax,0xd7e9ec2
  422ffb:	(bad)  
  422ffc:	int    0xc4
  422ffe:	sbb    al,0x94
  423000:	jp     0x422fed
  423002:	jle    0x422fd8
  423004:	nop
  423005:	nop
  423006:	jnp    0x42302e
  423008:	clc    
  423009:	lods   al,BYTE PTR ds:[esi]
  42300a:	cmp    edi,eax
  42300c:	dec    esi
  42300d:	fbstp  TBYTE PTR [edx+0x416c3aff]
  423013:	test   BYTE PTR [edx],ah
  423015:	std    
  423016:	or     DWORD PTR [ebp+esi*4-0x7],ebx
  42301a:	loop   0x422fd3
  42301c:	jnp    0x423007
  42301e:	and    al,0xe4
  423020:	dec    ecx
  423021:	ja     0x42307a
  423023:	cmp    BYTE PTR [ecx+ebp*2-0x4941d036],bh
  42302a:	into   
  42302b:	sub    eax,0xc721d6d2
  423030:	mov    dh,0xc9
  423032:	out    0xeb,al
  423034:	(bad)  
  423035:	outs   dx,DWORD PTR ds:[esi]
  423036:	jecxz  0x4230ab
  423038:	and    BYTE PTR [ecx+0x45],0xbd
  42303c:	xchg   esi,eax
  42303d:	ins    BYTE PTR es:[edi],dx
  42303e:	ja     0x422fc1
  423040:	push   edx
	...
  4230b1:	add    BYTE PTR [eax],al
  4230b3:	add    BYTE PTR [esi-0x284ae],ah
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	inc    BYTE PTR [esi-0x7c]
  4230c3:	pop    ebp
  4230c4:	pcmpeqd mm0,QWORD PTR [ecx]
  4230c7:	add    ch,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    dl,bl
  4230cd:	leave  
  4230ce:	jp     0x4230b1
  4230d0:	push   edi
  4230d1:	fidiv  DWORD PTR [ebx+0x6f2a8f74]
  4230d7:	lea    edx,[ebp-0x7e517e96]
  4230dd:	xchg   edi,eax
  4230de:	add    al,0x7
  4230e0:	std    
  4230e1:	pop    ebp
  4230e2:	imul   edi,ecx,0xe2f865de
  4230e8:	mov    ebx,0xcd7515a1
  4230ed:	pop    ds
  4230ee:	pop    edx
  4230ef:	repz push ecx
  4230f1:	scas   al,BYTE PTR es:[edi]
  4230f2:	hlt    
  4230f3:	sub    eax,0xf712c54d
  4230f8:	push   cs
  4230f9:	cmp    dh,dl
  4230fb:	inc    ebx
  4230fc:	leave  
  4230fd:	jmp    0x6bd17e77
  423102:	aas    
  423103:	leave  
  423104:	(bad)
  423108:	sub    al,0x1d
  42310a:	or     eax,0xebab53d
  42310f:	inc    ecx
  423110:	outs   dx,BYTE PTR ds:[esi]
  423111:	ss mov edx,0x4d98a372
  423117:	pop    ds
  423118:	or     al,0x83
  42311a:	mov    dl,0xdb
  42311c:	or     al,0x5f
  42311e:	test   BYTE PTR [esi],bh
  423120:	adc    al,0x44
  423122:	push   ecx
  423123:	jbe    0x423128
  423125:	push   es
  423126:	lock ds xchg ebp,eax
  423129:	out    0x8b,al
  42312b:	outs   dx,BYTE PTR ds:[esi]
  42312c:	call   0xc514:0xe64e4bca
  423133:	mov    ecx,0xbdac60e6
  423138:	cwde   
  423139:	xor    eax,0x57f087c7
  42313e:	mov    ebx,DWORD PTR [ebx+esi*4]
  423141:	add    al,0xaf
  423143:	xchg   ecx,eax
  423144:	cmp    BYTE PTR [esi-0x74ed841a],ah
  42314a:	mov    dh,0xd9
  42314c:	xor    esp,esp
  42314e:	fbstp  TBYTE PTR [edx-0x3a9c3ee7]
  423154:	ss dec ebp
  423156:	cmp    BYTE PTR [edi+ebp*4],dh
  423159:	in     al,0x5d
  42315b:	and    esi,DWORD PTR ss:[edx]
  42315e:	in     eax,dx
  42315f:	fmul   DWORD PTR [eax]
  423161:	daa    
  423162:	mov    gs,WORD PTR [ebx]
  423164:	jp     0x423104
  423166:	jg     0x42314a
  423168:	jne    0x4231d7
  42316a:	scas   eax,DWORD PTR es:[edi]
  42316b:	jno    0x4231c3
  42316d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42316e:	xor    ebx,DWORD PTR [edi-0x3d3d6d2d]
  423174:	xor    al,bh
  423176:	(bad)  
  423177:	or     DWORD PTR [ecx-0x12],eax
  42317a:	jae    0x423136
  42317c:	icebp  
  42317d:	cli    
  42317e:	mov    fs,ebx
  423180:	mov    bh,0x1f
  423182:	sti    
  423183:	test   DWORD PTR [edi],eax
  423185:	sbb    BYTE PTR [esi+0x76c1f392],al
  42318b:	and    BYTE PTR [ebx],ah
  42318d:	sbb    eax,esp
  42318f:	jno    0x423162
  423191:	fist   WORD PTR [ebx-0x33c253a3]
  423197:	mov    al,ds:0x7e226283
  42319c:	xchg   cx,ax
  42319e:	or     al,0x36
  4231a0:	or     ecx,DWORD PTR [ecx-0x3b63e903]
  4231a6:	mov    bl,0x65
  4231a8:	fld    TBYTE PTR [ebx-0x523a6825]
  4231ae:	lods   al,BYTE PTR ds:[esi]
  4231af:	fwait
  4231b0:	cwde   
  4231b1:	jmp    0xb067:0x2f19f54b
  4231b8:	mov    esi,0xc49c4037
  4231bd:	pop    edi
  4231be:	mov    bh,0x7c
  4231c0:	test   al,0x0
	...
  423232:	add    BYTE PTR [eax],al
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0xcec248b0
  423243:	repz add al,0x77
  423246:	add    DWORD PTR [eax],eax
  423248:	cmc    
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [ecx+0x48b28b03],al
  423251:	or     eax,0x1dac0af4
  423256:	sub    DWORD PTR [ebx+0x46d75441],ecx
  42325c:	dec    edi
  42325d:	push   ebx
  42325e:	je     0x4231e7
  423260:	mov    ecx,0x9adb8795
  423265:	pop    esp
  423266:	push   ss
  423267:	adc    bh,BYTE PTR [eax+0x73f9dd40]
  42326d:	or     esp,eax
  42326f:	shl    DWORD PTR [ebx+0x35],cl
  423272:	xlat   BYTE PTR ds:[ebx]
  423273:	lds    edi,FWORD PTR [edi+0xa]
  423276:	dec    edi
  423277:	lahf   
  423278:	ss jp  0x4232db
  42327b:	inc    ebx
  42327c:	sbb    dl,dl
  42327e:	test   eax,0x6b55072a
  423283:	push   ecx
  423284:	mov    ecx,0x8d02b1d2
  423289:	push   es
  42328a:	(bad)  
  42328b:	jnp    0x4232cd
  42328d:	leave  
  42328e:	or     eax,0x38
  423291:	sbb    bl,BYTE PTR [edx]
  423293:	sub    BYTE PTR [eax-0x317d304a],bh
  423299:	push   es
  42329a:	xchg   ebp,eax
  42329b:	mov    BYTE PTR [ebp-0x46],ah
  42329e:	dec    ebp
  42329f:	mov    dh,BYTE PTR [eax+0x43]
  4232a2:	jnp    0x42327a
  4232a4:	add    eax,0x518b917e
  4232a9:	mov    dl,0x13
  4232ab:	xchg   ebx,eax
  4232ac:	add    BYTE PTR [edx+0x18],cl
  4232af:	push   ebp
  4232b0:	or     bh,BYTE PTR [esi-0x487d8690]
  4232b6:	adc    cl,BYTE PTR [edi]
  4232b8:	cmp    bh,ah
  4232ba:	(bad)  
  4232bb:	out    0x3b,eax
  4232bd:	ror    BYTE PTR [ecx-0x7f99104a],cl
  4232c3:	cld    
  4232c4:	add    al,0xa4
  4232c6:	pop    ds
  4232c7:	imul   eax,DWORD PTR [ebx+ebp*8+0x70a74474],0xffffffb4
  4232cf:	fistp  QWORD PTR [ebx-0x2adb7060]
  4232d5:	ss leave 
  4232d7:	fs stos BYTE PTR es:[edi],al
  4232d9:	pop    esp
  4232da:	mov    esi,0x2fb73f92
  4232df:	lods   eax,DWORD PTR ds:[esi]
  4232e0:	or     DWORD PTR [edx+0x5fc066f7],ebx
  4232e6:	mov    eax,ds:0x7fb85254
  4232eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ec:	(bad)  
  4232ed:	popa   
  4232ee:	(bad)  
  4232ef:	ins    BYTE PTR es:[edi],dx
  4232f0:	cmp    BYTE PTR [edi+0x22],dl
  4232f3:	dec    ebx
  4232f4:	scas   al,BYTE PTR es:[edi]
  4232f5:	dec    edx
  4232f6:	jg     0x42332f
  4232f8:	idiv   DWORD PTR [ecx-0x1d]
  4232fb:	iret   
  4232fc:	iret   
  4232fd:	mov    gs,WORD PTR [ebp-0x716b6aee]
  423303:	addr16 xchg ebx,eax
  423305:	push   esi
  423306:	dec    ecx
  423307:	adc    al,0xe0
  423309:	imul   esp,eax,0x5007ba5b
  42330f:	popf   
  423310:	xor    eax,0x951d0b20
  423315:	mov    DWORD PTR ss:[eax],ebx
  423318:	lahf   
  423319:	(bad)  
  42331a:	call   0xc4250bc
  42331f:	shl    BYTE PTR [ecx-0x66aef303],cl
  423325:	outs   dx,DWORD PTR ds:[esi]
  423326:	mov    bl,0x25
  423328:	ja     0x4232cf
  42332a:	jo     0x4232b5
  42332c:	dec    edx
  42332d:	add    eax,0xde636dd
  423332:	lds    ecx,FWORD PTR [edx]
  423334:	es mov bl,0xad
  423337:	push   esi
  423338:	jns    0x423321
  42333a:	and    cl,BYTE PTR [ebp+0x6e342f59]
  423340:	call   0x0:0x0
	...
  4233b3:	add    BYTE PTR [edx-0x7e],dl
  4233b6:	cs imul edi,esi,0x4bb57ed
  4233bd:	mov    eax,ds:0xaabc8e4a
  4233c2:	xchg   esp,eax
  4233c3:	and    edi,ecx
  4233c5:	ja     0x4233c8
  4233c7:	add    ch,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    BYTE PTR [eax+edx*8],dh
  4233ce:	retf   
  4233cf:	fisttp QWORD PTR [esi]
  4233d1:	paddd  mm4,QWORD PTR [eax+0x4561badd]
  4233d8:	aad    0xc3
  4233da:	xor    ebx,DWORD PTR [eax+0x72fd798c]
  4233e0:	mov    DWORD PTR [edi],ecx
  4233e2:	test   DWORD PTR [ebx],eax
  4233e4:	nop
  4233e5:	loope  0x42338a
  4233e7:	(bad)  
  4233e8:	mov    al,ds:0xeeff0c53
  4233ed:	imul   ecx,DWORD PTR [edx-0x4f],0xe152f57f
  4233f4:	test   eax,0x97f94788
  4233f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233fa:	data16 fdivr DWORD PTR [edi-0x4281ab89]
  423401:	xchg   edi,eax
  423402:	arpl   WORD PTR [ecx-0x2c],si
  423405:	loop   0x4233a1
  423407:	jae    0x4233b5
  423409:	inc    esi
  42340a:	inc    ebp
  42340b:	fiadd  WORD PTR [ebx-0x59]
  42340e:	call   0x36d0:0x9351b37d
  423415:	adc    ah,BYTE PTR [eax+0x676af922]
  42341b:	adc    bl,bl
  42341d:	inc    ebx
  42341e:	inc    edx
  42341f:	out    dx,eax
  423420:	mov    BYTE PTR [ebx+eax*2-0x3fb13661],bl
  423427:	dec    edx
  423428:	jns    0x42348a
  42342a:	hlt    
  42342b:	test   BYTE PTR [esi+edi*2],ah
  42342e:	mov    bl,0xd9
  423430:	fidivr DWORD PTR [ecx]
  423432:	out    0x7d,al
  423434:	sub    ecx,DWORD PTR [ebx+esi*1-0x2e8eccb4]
  42343b:	mov    ?,WORD PTR ds:0xae5b0d75
  423441:	call   0x3d769db3
  423446:	push   cs
  423447:	jbe    0x42344d
  423449:	jg     0x42345d
  42344b:	and    DWORD PTR [ebp+0x6edd32ed],ebp
  423451:	pop    esi
  423452:	add    DWORD PTR [ebx+0x5e],esp
  423455:	push   ss
  423456:	fidiv  WORD PTR [edx]
  423458:	dec    esi
  423459:	lock int 0x7
  42345c:	xor    ah,BYTE PTR [edx-0x58]
  42345f:	daa    
  423460:	(bad)  
  423461:	push   ds
  423462:	jbe    0x4233fc
  423464:	ror    DWORD PTR [ebx+0x1067a913],cl
  42346a:	jmp    0x4234d6
  42346c:	push   ebx
  42346d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42346e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42346f:	xchg   edx,eax
  423470:	inc    eax
  423471:	rcr    edi,cl
  423473:	pop    ds
  423474:	sti    
  423475:	sti    
  423476:	xchg   esp,eax
  423477:	dec    ebp
  423478:	pop    esp
  423479:	es test eax,0x190b6077
  42347f:	mov    esi,0xb616c6f1
  423484:	lahf   
  423485:	jg     0x423464
  423487:	mov    DWORD PTR [eax],ebp
  423489:	pop    es
  42348a:	mov    ebp,0xc4dedeba
  42348f:	sar    BYTE PTR [ebx+edi*4-0x4622661e],1
  423496:	(bad)  
  423497:	dec    ebx
  423498:	dec    edx
  423499:	repnz lea ecx,[eax+0xf]
  42349d:	neg    BYTE PTR [edx]
  42349f:	in     al,0xa
  4234a1:	sbb    esp,DWORD PTR [ecx+0x358c4d1a]
  4234a7:	int3   
  4234a8:	cmp    BYTE PTR [ebx-0x44411725],bh
  4234ae:	ja     0x423441
  4234b0:	in     al,0x87
  4234b2:	popf   
  4234b3:	arpl   WORD PTR [esp+eiz*4+0x24f3a9ef],dx
  4234ba:	jae    0x423450
  4234bc:	adc    eax,0x5d58f533
	...
  423531:	add    BYTE PTR [eax],al
  423533:	add    BYTE PTR [edx-0x40887052],bl
  423539:	ja     0x423535
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x44
  423541:	sub    al,0xeb
  423543:	adc    al,0xee
  423545:	js     0x423548
  423547:	add    ch,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    dh,al
  42354d:	xchg   BYTE PTR [eax+0x7dab3e5e],dh
  423553:	jmp    0x6f11:0xaeb5f437
  42355a:	ficomp DWORD PTR [ebx+0x35]
  42355d:	mov    edi,0x8ee75756
  423562:	lods   al,BYTE PTR ds:[esi]
  423563:	out    0x35,al
  423565:	es push eax
  423567:	mov    ch,0x29
  423569:	je     0x42357a
  42356b:	out    0xd9,eax
  42356d:	ja     0x42351f
  42356f:	pop    edx
  423570:	and    BYTE PTR gs:[edx],bh
  423573:	jmp    0x42350a
  423575:	mov    ebp,0x1033337c
  42357a:	test   DWORD PTR [edx-0x2d],ebx
  42357d:	ins    BYTE PTR es:[edi],dx
  42357e:	mov    ds:0xb4dab07f,al
  423583:	call   FWORD PTR [edi]
  423585:	cmp    BYTE PTR [ecx+0x402d7c1],ch
  42358b:	add    al,0x67
  42358d:	sti    
  42358e:	xor    al,0x17
  423590:	call   0x5c75d50a
  423595:	sub    eax,0x8ba37f99
  42359a:	sbb    DWORD PTR [esi-0x1a],eax
  42359d:	mov    eax,0x80a3ea51
  4235a2:	cmp    eax,0xe99109b0
  4235a7:	sar    al,0xc7
  4235aa:	mov    ecx,0xfb4349b2
  4235af:	fldcw  WORD PTR [esi+0xe]
  4235b2:	pop    ebp
  4235b3:	adc    esi,DWORD PTR [esi]
  4235b5:	inc    eax
  4235b6:	mov    al,ds:0x8cd29417
  4235bb:	repnz stos BYTE PTR es:[edi],al
  4235bd:	or     DWORD PTR [edx],0x4e10328f
  4235c3:	ret    
  4235c4:	imul   ebx,DWORD PTR [edi+0xf],0x3616d222
  4235cb:	dec    BYTE PTR [edx]
  4235cd:	jno    0x4235eb
  4235cf:	fistp  WORD PTR [ebx+0x6d2ffbf1]
  4235d5:	adc    ah,bh
  4235d7:	cmc    
  4235d8:	mov    edi,0x5e1b1958
  4235dd:	mov    bh,BYTE PTR [ebp-0x7]
  4235e0:	out    0x64,eax
  4235e2:	push   cs
  4235e3:	in     al,dx
  4235e4:	gs addr16 and eax,0xcf77c0dd
  4235eb:	in     al,0xac
  4235ed:	add    al,0x79
  4235ef:	test   BYTE PTR [edx-0x21],cl
  4235f2:	add    BYTE PTR [eax-0x5c],bh
  4235f5:	jbe    0x423594
  4235f7:	xor    DWORD PTR [ebx+esi*8],0x9
  4235fb:	mov    ds:0xb477f1b5,al
  423600:	add    ah,al
  423602:	es fs (bad) 
  423605:	dec    ecx
  423606:	dec    eax
  423607:	(bad)  
  423608:	stc    
  423609:	sbb    eax,0xfaabf017
  42360e:	or     BYTE PTR fs:[edi-0x53330272],cl
  423615:	sbb    al,0xf8
  423617:	adc    cl,BYTE PTR [edx+0x6587492a]
  42361d:	dec    ebp
  42361e:	pop    esp
  42361f:	or     edx,edx
  423621:	retf   
  423622:	test   al,0xc
  423624:	(bad)  
  423625:	xchg   edi,eax
  423626:	(bad)  
  423627:	outs   dx,DWORD PTR ds:[esi]
  423628:	fst    DWORD PTR [esi-0x3f5838db]
  42362e:	xor    eax,0xa1b3630e
  423633:	mov    ds:0xc7040f5,eax
  423638:	sub    BYTE PTR [ecx],0x52
  42363b:	sar    DWORD PTR ds:0xc26d430b,1
	...
  4236b1:	add    BYTE PTR [eax],al
  4236b3:	add    BYTE PTR [edi],ah
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm3,QWORD PTR [ebx+0x6]
  4236c2:	sub    eax,0x179e37f
  4236c7:	add    ch,dh
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    BYTE PTR [edi+0x6f],dl
  4236ce:	ins    BYTE PTR es:[edi],dx
  4236cf:	outs   dx,DWORD PTR ds:[esi]
  4236d0:	test   DWORD PTR [edi-0x6a8b25ee],0xb68e6c43
  4236da:	out    dx,al
  4236db:	push   ebx
  4236dc:	push   eax
  4236dd:	xor    al,0x5e
  4236df:	add    bl,BYTE PTR [ecx]
  4236e1:	pop    ebx
  4236e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236e3:	xchg   edx,eax
  4236e4:	call   0x2e613042
  4236e9:	into   
  4236ea:	jnp    0x423737
  4236ec:	leave  
  4236ed:	inc    ebx
  4236ee:	fldcw  WORD PTR [ebp-0x6fee7a58]
  4236f4:	imul   ebp,esi,0x903d6e7
  4236fa:	add    ch,dl
  4236fc:	jmp    0x8d9e5734
  423701:	cmp    eax,0x1177ce00
  423706:	into   
  423707:	sti    
  423708:	cmc    
  423709:	jae    0x423690
  42370b:	jg     0x423731
  42370d:	aas    
  42370e:	mov    esi,0xafa767f6
  423713:	push   0xa00e7db0
  423718:	(bad)  
  423719:	adc    eax,0x7cb40c93
  42371e:	jnp    0x42371e
  423720:	enter  0x86ab,0x5f
  423724:	test   al,0xbc
  423726:	mov    dl,0x59
  423728:	jo     0x4236cd
  42372a:	outs   dx,DWORD PTR ds:[esi]
  42372b:	push   esp
  42372c:	nop
  42372d:	lahf   
  42372e:	ror    eax,cl
  423730:	xchg   esp,eax
  423731:	pop    edi
  423732:	sbb    DWORD PTR ds:0x75a11520,ebp
  423738:	push   esp
  423739:	iret   
  42373a:	sbb    eax,esi
  42373c:	mov    esi,0x76a09288
  423741:	into   
  423742:	popa   
  423743:	sti    
  423744:	addr16 pop esp
  423746:	pop    edx
  423747:	pop    edi
  423748:	mov    ds:0x4f3cdbe9,eax
  42374d:	pop    ebx
  42374e:	bound  edx,QWORD PTR [edi-0x17]
  423751:	out    dx,eax
  423752:	inc    esi
  423753:	pop    edi
  423754:	mov    ds,WORD PTR [edi]
  423756:	outs   dx,DWORD PTR ds:[esi]
  423757:	test   DWORD PTR [ecx-0x6e],edi
  42375a:	jbe    0x4237c9
  42375c:	inc    edi
  42375d:	sahf   
  42375e:	mov    ds:0x81799c5e,eax
  423763:	leave  
  423764:	push   edi
  423765:	fcomp  QWORD PTR [ecx]
  423767:	mov    ch,0xa9
  423769:	mov    ss,WORD PTR [ebp+0x402fb691]
  42376f:	aaa    
  423770:	jb     0x4237b7
  423772:	popa   
  423773:	xor    BYTE PTR [eax+0x2dd4d243],ah
  423779:	jl     0x423712
  42377b:	xchg   edx,eax
  42377c:	pop    ebx
  42377d:	push   0xd7cc0dc2
  423782:	jmp    DWORD PTR [esi+0x70]
  423785:	(bad)  
  423786:	adc    esi,edx
  423788:	in     eax,0x28
  42378a:	pushf  
  42378b:	std    
  42378c:	push   edx
  42378d:	push   esp
  42378e:	mov    BYTE PTR [ecx-0x7737911a],al
  423794:	pop    es
  423795:	or     bh,ah
  423797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423798:	cmc    
  423799:	mov    eax,ebx
  42379b:	or     BYTE PTR [ebp+0x110a6a05],bh
  4237a1:	push   ecx
  4237a2:	xchg   ebx,eax
  4237a3:	and    ebx,DWORD PTR [ebx]
  4237a5:	mov    eax,0x7979ec40
  4237aa:	inc    ebp
  4237ab:	cdq    
  4237ac:	retf   
  4237ad:	cs jo  0x4237f1
  4237b0:	sub    BYTE PTR [ebx+0x4d],dl
  4237b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237b4:	mov    eax,0x4a1fa565
  4237b9:	push   0x9adc6f0b
  4237be:	in     al,dx
  4237bf:	push   ds
  4237c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  423831:	add    BYTE PTR [eax],al
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	inc    ebp
  423841:	jle    0x4238b1
  423843:	or     eax,ebx
  423845:	jp     0x423848
  423847:	add    ch,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    ch,dh
  42384d:	mov    cs,WORD PTR [edi+edx*8-0x18]
  423851:	mov    bh,0xef
  423853:	into   
  423854:	(bad)  
  423855:	push   es
  423856:	imul   esp,DWORD PTR [ebp-0x3f0c572e],0x7d
  42385d:	sti    
  42385e:	inc    esi
  42385f:	sub    BYTE PTR [esi+0x9],dl
  423862:	add    bh,dh
  423864:	in     al,0x33
  423866:	fld    st(7)
  423868:	stc    
  423869:	sbb    eax,DWORD PTR [edx]
  42386b:	pop    ds
  42386c:	hlt    
  42386d:	jbe    0x42387d
  42386f:	mov    esp,0x8ac08447
  423874:	or     esp,DWORD PTR [edx+edi*4+0x58]
  423878:	popa   
  423879:	retf   
  42387a:	sahf   
  42387b:	and    eax,DWORD PTR [ebp+0x25c4c5a4]
  423881:	mov    al,0x2b
  423883:	sbb    DWORD PTR [ebx-0x43],eax
  423886:	jecxz  0x4238e0
  423888:	mov    ch,0xd7
  42388a:	or     bl,BYTE PTR [edx]
  42388c:	iret   
  42388d:	jo     0x4238ba
  42388f:	je     0x42390b
  423891:	and    BYTE PTR [ebp+0x1b19a61d],dl
  423897:	loop   0x4238d1
  423899:	xchg   esp,eax
  42389a:	repz mov eax,ds:0x8737bf46
  4238a0:	shl    BYTE PTR [ecx-0xbec8ad0],cl
  4238a6:	fld    DWORD PTR [ebp+edx*2-0x13]
  4238aa:	je     0x4238dc
  4238ac:	dec    eax
  4238ad:	xchg   edx,eax
  4238ae:	(bad)  
  4238b0:	mov    dl,0x57
  4238b2:	sub    al,0xbe
  4238b4:	ror    DWORD PTR [ebp-0x6ab0d723],1
  4238ba:	push   edi
  4238bb:	jl     0x423867
  4238bd:	jle    0x42391e
  4238bf:	or     ebp,DWORD PTR [edi+esi*2]
  4238c2:	xor    ebp,DWORD PTR [ecx]
  4238c4:	(bad)  
  4238c5:	test   al,0xdb
  4238c7:	das    
  4238c8:	mov    eax,0x835448d8
  4238cd:	add    al,0xfc
  4238cf:	pop    ecx
  4238d0:	addr16 std 
  4238d2:	lahf   
  4238d3:	iret   
  4238d4:	pusha  
  4238d5:	rcl    BYTE PTR [edi],1
  4238d7:	in     al,0x40
  4238d9:	jle    0x42391f
  4238db:	dec    ebx
  4238dc:	add    ecx,DWORD PTR [edx]
  4238de:	sub    edx,DWORD PTR [edi]
  4238e0:	push   es
  4238e1:	push   ds
  4238e2:	fs jecxz 0x4238dc
  4238e5:	pop    ss
  4238e6:	push   ebp
  4238e7:	neg    esi
  4238e9:	push   ds
  4238ea:	sbb    al,0x27
  4238ec:	jae    0x42393a
  4238ee:	add    eax,0x58a86678
  4238f3:	jp     0x423911
  4238f5:	xchg   ebp,eax
  4238f6:	mov    dh,0xe9
  4238f8:	pushf  
  4238f9:	and    BYTE PTR [ebx-0x49],0x97
  4238fd:	and    dh,dl
  4238ff:	into   
  423900:	in     al,0xfb
  423902:	xor    edx,DWORD PTR [edx]
  423904:	mov    ecx,?
  423906:	fnstcw WORD PTR [edx]
  423908:	jmp    0xaab259c1
  42390d:	cmp    BYTE PTR [ebx+0x2c],ch
  423910:	mov    dh,0x78
  423912:	jno    0x4238ad
  423914:	rol    DWORD PTR [eax],cl
  423916:	push   esp
  423917:	stos   DWORD PTR es:[edi],eax
  423918:	aam    0x80
  42391a:	leave  
  42391b:	mov    ah,0x62
  42391d:	fisubr DWORD PTR [ecx+ecx*2]
  423920:	inc    edx
  423921:	retf   
  423922:	push   es
  423923:	stos   DWORD PTR es:[edi],eax
  423924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423925:	push   ds
  423926:	or     ah,BYTE PTR [eax-0x39]
  423929:	mov    ebp,edi
  42392b:	icebp  
  42392c:	mov    dh,0x25
  42392e:	fs dec ebx
  423930:	mov    al,0xbf
  423932:	dec    eax
  423933:	pop    esp
  423934:	add    eax,0xdcb27c57
  423939:	jbe    0x423965
  42393b:	inc    esp
  42393c:	pop    ebx
  42393d:	lea    ecx,[edi+0xbef0]
	...
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [esi],ds
  4239c1:	xor    ecx,ebx
  4239c3:	test   ch,0x7b
  4239c6:	add    DWORD PTR [eax],eax
  4239c8:	cmc    
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    BYTE PTR [edx],dl
  4239cd:	in     eax,0x37
  4239cf:	stos   BYTE PTR es:[edi],al
  4239d0:	xor    DWORD PTR [esi],ebx
  4239d2:	dec    edx
  4239d3:	stos   BYTE PTR es:[edi],al
  4239d4:	(bad)  
  4239d6:	lds    ecx,FWORD PTR [edi-0x33]
  4239d9:	(bad)  
  4239da:	xchg   ecx,eax
  4239db:	push   esp
  4239dc:	das    
  4239dd:	sbb    eax,edx
  4239df:	jns    0x4239b7
  4239e1:	ret    
  4239e2:	pop    ecx
  4239e3:	mov    ds:0x739609b8,eax
  4239e8:	int    0x20
  4239ea:	fsubr  QWORD PTR [edi-0x4f]
  4239ed:	adc    DWORD PTR [ebx-0x31],ebp
  4239f0:	dec    ecx
  4239f1:	test   DWORD PTR [edi+ebp*2-0x3b],ecx
  4239f5:	and    al,0x19
  4239f7:	imul   esp,DWORD PTR [ecx-0xa7a1a76],0x27
  4239fe:	sbb    BYTE PTR [edi],bl
  423a00:	jbe    0x423a13
  423a02:	iret   
  423a03:	mov    esp,DWORD PTR [ebp+0x13c2df4c]
  423a09:	sub    ebp,DWORD PTR [esi+0x7c]
  423a0c:	aam    0x3c
  423a0e:	ror    DWORD PTR [ebx-0x6696f90],1
  423a14:	mov    ch,0x2d
  423a16:	repz sbb bh,BYTE PTR [ebx-0x4f997889]
  423a1d:	add    DWORD PTR [esi-0x5b2776f8],ecx
  423a23:	scas   al,BYTE PTR es:[edi]
  423a24:	inc    edi
  423a25:	sbb    BYTE PTR [ecx],bl
  423a27:	jle    0x423a95
  423a29:	shr    DWORD PTR [ebx+0x2b1909e2],0xc4
  423a30:	xchg   DWORD PTR [esi+eax*1+0xb0cce9e],ebp
  423a37:	std    
  423a38:	(bad)  
  423a39:	mov    esp,0xfe8029e2
  423a3e:	popf   
  423a3f:	cdq    
  423a40:	push   edx
  423a41:	cmc    
  423a42:	ror    BYTE PTR [edi+esi*8],0x1d
  423a46:	ds test eax,0x6e24a058
  423a4c:	xchg   esp,eax
  423a4d:	inc    ecx
  423a4e:	mov    edx,0xd7cae589
  423a53:	sub    al,al
  423a55:	or     DWORD PTR [ebx],eax
  423a57:	test   BYTE PTR [ebx],0xa3
  423a5a:	call   0x6d41293b
  423a5f:	shl    BYTE PTR [ecx],0xae
  423a62:	mov    dl,0xc6
  423a64:	jmp    0x4481:0x71d24bdb
  423a6b:	test   eax,0xdfeaf9fc
  423a70:	fnstenv [eax-0x3f3a896d]
  423a76:	mov    eax,ds:0x37d77ae7
  423a7b:	dec    eax
  423a7c:	int    0x55
  423a7e:	jne    0x423ac1
  423a80:	loope  0x423a23
  423a82:	mov    edi,0xf1a9db9a
  423a87:	add    edx,DWORD PTR [edi]
  423a89:	or     DWORD PTR [ebx+0x668e6487],ecx
  423a8f:	push   ds
  423a90:	data16 ffree st(6)
  423a93:	aam    0xe2
  423a95:	nop
  423a96:	cmp    DWORD PTR [ecx-0x730a983e],edi
  423a9c:	xchg   BYTE PTR [ebx-0x58],bl
  423a9f:	add    eax,0x3a624f1
  423aa4:	mov    ecx,0x80a3b2fb
  423aa9:	leave  
  423aaa:	(bad)  
  423aac:	dec    esp
  423aad:	sub    BYTE PTR [ecx],bh
  423aaf:	adc    al,al
  423ab1:	xor    eax,0xe398310c
  423ab6:	fisubr DWORD PTR [edi+edi*8+0x78420fc6]
  423abd:	pop    ecx
  423abe:	outs   dx,BYTE PTR ds:[esi]
  423abf:	shl    DWORD PTR [eax+eax*1+0x0],0x0
	...
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0xc8
  423b41:	pusha  
  423b42:	dec    edi
  423b43:	test   eax,0x17cc2
  423b48:	cmc    
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [edx+0x6cf3526c],ah
  423b51:	xchg   BYTE PTR [eax-0x13],cl
  423b54:	inc    ebp
  423b55:	pop    es
  423b56:	lods   eax,DWORD PTR ds:[esi]
  423b57:	mov    edi,0x66afb1b1
  423b5c:	das    
  423b5d:	sub    DWORD PTR [edi-0x679268bd],ebp
  423b63:	in     al,0x2f
  423b65:	fimul  WORD PTR [edi]
  423b67:	inc    edx
  423b68:	sub    eax,0xf918f037
  423b6d:	sti    
  423b6e:	mul    ebx
  423b70:	mov    ebp,0xb5276a00
  423b75:	arpl   WORD PTR [ebx+0x5b953fb8],bx
  423b7b:	sbb    DWORD PTR [edi],esi
  423b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b7e:	or     esi,edx
  423b80:	pop    ebp
  423b81:	add    edi,DWORD PTR [esi+0x44c91d11]
  423b87:	setg   BYTE PTR [edx]
  423b8a:	xlat   BYTE PTR ds:[ebx]
  423b8b:	fild   QWORD PTR [edx]
  423b8d:	aaa    
  423b8e:	xchg   esp,eax
  423b8f:	mov    ds:0xd82556e1,eax
  423b94:	stos   DWORD PTR es:[edi],eax
  423b95:	in     al,0x92
  423b97:	mov    ch,0x1d
  423b99:	mov    edx,ebp
  423b9b:	mov    eax,?
  423b9d:	cvttps2pi mm7,QWORD PTR [ecx+edi*1]
  423ba1:	adc    si,si
  423ba4:	lods   eax,DWORD PTR ds:[esi]
  423ba5:	push   cs
  423ba6:	pop    esp
  423ba7:	loopne 0x423bfc
  423ba9:	rcr    DWORD PTR [ecx],0xb7
  423bac:	pop    ecx
  423bad:	ficomp WORD PTR [edi]
  423baf:	mul    BYTE PTR [edi-0xdc3ee5]
  423bb5:	hlt    
  423bb6:	mov    edi,0x5976bd69
  423bbb:	and    al,0x4e
  423bbd:	mov    cs,WORD PTR [esi-0x1e28c538]
  423bc3:	scas   al,BYTE PTR es:[edi]
  423bc4:	sahf   
  423bc5:	jmp    0x423b7a
  423bc7:	sub    cl,al
  423bc9:	in     eax,dx
  423bca:	mov    ah,0xae
  423bcc:	pop    eax
  423bcd:	inc    edi
  423bce:	inc    esp
  423bcf:	mov    esp,0xaafb484b
  423bd4:	add    BYTE PTR [edx],0x5d
  423bd7:	jmp    0x4982:0x5eca626c
  423bde:	push   edx
  423bdf:	or     al,0x6c
  423be1:	leave  
  423be2:	mov    BYTE PTR [edx+edi*2],ah
  423be5:	xor    al,0x9
  423be7:	jo     0x423c57
  423be9:	xlat   BYTE PTR ds:[ebx]
  423bea:	sti    
  423beb:	(bad)  
  423bec:	in     al,0xac
  423bee:	dec    edi
  423bef:	lahf   
  423bf0:	mov    esi,0xe338c199
  423bf5:	xchg   DWORD PTR [edi],ebx
  423bf7:	inc    edi
  423bf8:	adc    ecx,DWORD PTR [eax-0x55495116]
  423bfe:	std    
  423bff:	ror    BYTE PTR [esp+eax*8+0x532b69ca],1
  423c06:	loopne 0x423c24
  423c08:	bound  ecx,QWORD PTR [edi+0x63]
  423c0b:	xlat   BYTE PTR ds:[ebx]
  423c0c:	sar    DWORD PTR [ecx-0x10],1
  423c0f:	push   0x561ad751
  423c14:	fs jb  0x423b9f
  423c17:	or     al,0x3c
  423c19:	xor    DWORD PTR [eax+ebx*1],edi
  423c1c:	dec    edx
  423c1d:	jl     0x423c5f
  423c1f:	add    eax,0x8c960a89
  423c24:	outs   dx,BYTE PTR ds:[esi]
  423c25:	mov    ah,BYTE PTR [ecx-0x4867eb76]
  423c2b:	jne    0x423c41
  423c2d:	cmp    al,0xf4
  423c2f:	out    dx,al
  423c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c31:	add    eax,0xfdc4b905
  423c36:	xor    eax,0xba1392ca
  423c3b:	test   eax,0xeeca3f35
  423c40:	jno    0x423c42
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0xd210,0x8f
  423cc3:	adc    al,0xb7
  423cc5:	jge    0x423cc8
  423cc7:	add    ch,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [ebx-0x9],bh
  423cce:	retf   0x469
  423cd1:	and    cl,BYTE PTR [edx+edi*8]
  423cd4:	mov    ds:0xb208ab77,eax
  423cd9:	cdq    
  423cda:	(bad)  
  423cdb:	jne    0x423cff
  423cdd:	mov    edi,0x4a4bcfd2
  423ce2:	cs xbegin 0xf74aa58f
  423ce9:	xchg   esi,eax
  423cea:	adc    al,0x58
  423cec:	cmp    al,0xd0
  423cee:	call   0xd009:0x38230394
  423cf5:	test   DWORD PTR [ebx],ecx
  423cf7:	out    dx,al
  423cf8:	cwde   
  423cf9:	nop
  423cfa:	inc    eax
  423cfb:	push   ebx
  423cfc:	mov    DWORD PTR [esp+ebp*4-0x1cf49670],esp
  423d03:	and    ebp,DWORD PTR [eax]
  423d05:	xor    BYTE PTR [eax],ch
  423d07:	push   esi
  423d08:	fsubr  QWORD PTR [ecx-0xf8fc8ad]
  423d0e:	test   al,0x9f
  423d10:	es dec esi
  423d12:	call   0xe0f0314d
  423d17:	jl     0x423ca0
  423d19:	sub    ebp,eax
  423d1b:	std    
  423d1c:	mov    ah,ah
  423d1e:	out    dx,eax
  423d1f:	jmp    0x423d2d
  423d21:	add    esi,DWORD PTR [edx]
  423d23:	cmp    al,0x8
  423d25:	adc    al,0x25
  423d27:	jmp    0x423cc5
  423d29:	xchg   ebx,eax
  423d2a:	loop   0x423ce2
  423d2c:	cmp    al,0x9c
  423d2e:	into   
  423d2f:	retf   0x188a
  423d32:	ins    BYTE PTR es:[edi],dx
  423d33:	out    0x70,eax
  423d35:	push   edi
  423d36:	std    
  423d37:	inc    esi
  423d38:	sub    al,ah
  423d3a:	iret   
  423d3b:	or     DWORD PTR [edi-0x36],esi
  423d3e:	and    ch,BYTE PTR [edi+0x54]
  423d41:	retf   
  423d42:	aas    
  423d43:	fimul  WORD PTR [esi]
  423d45:	jecxz  0x423da7
  423d47:	mov    cr5,eax
  423d4a:	lea    edx,es:[eax+eiz*2]
  423d4e:	sub    eax,0x3099e505
  423d53:	jmp    0x2e352452
  423d58:	push   esi
  423d59:	mov    ecx,DWORD PTR [ebx-0x24]
  423d5c:	ss ins BYTE PTR es:[edi],dx
  423d5e:	xchg   esp,eax
  423d5f:	in     eax,0xf0
  423d61:	pop    ss
  423d62:	mov    edi,0x8e376d14
  423d67:	sub    ecx,DWORD PTR [eax-0x537a986f]
  423d6d:	shr    DWORD PTR [esi-0x1667c829],cl
  423d73:	push   esp
  423d74:	add    al,0x5f
  423d76:	stos   BYTE PTR es:[edi],al
  423d77:	stos   BYTE PTR es:[edi],al
  423d78:	bound  ecx,QWORD PTR [ebp+0x25]
  423d7b:	aad    0x7
  423d7d:	cs ret 0x3d02
  423d81:	jmp    0x423d30
  423d83:	das    
  423d84:	lea    esp,[edi]
  423d86:	lods   al,BYTE PTR ds:[esi]
  423d88:	mov    ecx,0x82a29773
  423d8d:	hlt    
  423d8e:	and    BYTE PTR [eax],ch
  423d90:	mov    ch,0xc1
  423d92:	mov    edx,0x40a473c1
  423d97:	das    
  423d98:	inc    ecx
  423d99:	clc    
  423d9a:	(bad)  
  423d9b:	repnz or ecx,DWORD PTR [ecx-0x339a24f9]
  423da2:	mov    edx,0x1b22b2f1
  423da7:	push   cs
  423da8:	stc    
  423da9:	and    ecx,DWORD PTR [ecx+0xf7c20e6]
  423daf:	retf   0x34d3
  423db2:	das    
  423db3:	mov    esi,0x5f0f072a
  423db8:	jb     0x423e14
  423dba:	retf   0xaa9c
  423dbd:	repnz test cl,cl
  423dc0:	xchg   DWORD PTR [eax],eax
	...
  423e32:	add    BYTE PTR [eax],al
  423e34:	adc    DWORD PTR [ebp-0x78],0x19
  423e38:	(bad)  
  423e3a:	xchg   ebx,eax
  423e3b:	ffreep st(6)
  423e3d:	dec    eax
  423e3e:	imul   ebp,edi,0x62
  423e41:	mov    al,0xed
  423e43:	retf   0x7eac
  423e46:	add    DWORD PTR [eax],eax
  423e48:	cmc    
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [esi-0x2],cl
  423e4e:	cmc    
  423e4f:	adc    DWORD PTR [edx-0x21],ebp
  423e52:	mov    ebp,DWORD PTR ds:0x1df18992
  423e58:	ret    
  423e59:	push   edx
  423e5a:	sahf   
  423e5b:	dec    ebp
  423e5c:	scas   eax,DWORD PTR es:[edi]
  423e5d:	xor    al,0xef
  423e5f:	jmp    0x69b9:0x8afcd5f2
  423e66:	push   0x59
  423e68:	sub    al,0x90
  423e6a:	in     eax,dx
  423e6b:	sar    dl,cl
  423e6d:	test   BYTE PTR [edx-0x3a9b69f7],ah
  423e73:	cmp    edi,DWORD PTR [edi-0x10]
  423e76:	nop
  423e77:	xchg   esi,eax
  423e78:	into   
  423e79:	xor    eax,0x6a7acb29
  423e7e:	cmp    BYTE PTR [eax-0x7f929527],0xee
  423e85:	cmp    BYTE PTR [edi+0x3b],dl
  423e88:	mov    cl,BYTE PTR [ecx]
  423e8a:	clc    
  423e8b:	xchg   ecx,eax
  423e8c:	pusha  
  423e8d:	or     edi,DWORD PTR [edi-0x48]
  423e90:	pop    ss
  423e91:	jae    0x423e37
  423e93:	call   FWORD PTR [ecx]
  423e95:	xchg   esp,eax
  423e96:	xchg   DWORD PTR [ebp+0x1],esp
  423e99:	popfw  
  423e9b:	jns    0x423ea9
  423e9d:	xchg   esp,eax
  423e9e:	out    dx,al
  423e9f:	xchg   edi,eax
  423ea0:	pop    ds
  423ea1:	push   ss
  423ea2:	xchg   ecx,eax
  423ea3:	rol    DWORD PTR [eax+0x78],cl
  423ea6:	and    al,0x8d
  423ea8:	test   eax,0xd79fcd0d
  423ead:	(bad)  
  423eaf:	je     0x423eed
  423eb1:	pop    es
  423eb2:	lahf   
  423eb3:	in     al,0xbf
  423eb5:	push   ss
  423eb6:	pop    ebx
  423eb7:	je     0x423ebf
  423eb9:	mov    dh,0xd
  423ebb:	mov    ecx,ebx
  423ebd:	mov    cs,WORD PTR [ecx-0x2f399c24]
  423ec3:	out    0x6c,al
  423ec5:	xchg   edx,eax
  423ec6:	jmp    0x423f2e
  423ec8:	les    esi,FWORD PTR [esi+edx*2+0x4825a000]
  423ecf:	fistp  WORD PTR [ecx-0x6d9dbdb8]
  423ed5:	xor    DWORD PTR [esi+0x48fbc7ce],eax
  423edb:	sbb    ah,dl
  423edd:	and    BYTE PTR [edx+0x1d],bl
  423ee0:	xlat   BYTE PTR ds:[ebx]
  423ee1:	or     eax,0xf35043d2
  423ee6:	sub    bl,dl
  423ee8:	repz dec edx
  423eea:	stos   BYTE PTR es:[edi],al
  423eeb:	lods   al,BYTE PTR ds:[esi]
  423eec:	xchg   ebp,eax
  423eed:	stos   BYTE PTR es:[edi],al
  423eee:	jecxz  0x423e76
  423ef0:	mov    ch,BYTE PTR [eax+esi*2]
  423ef3:	mov    ecx,0xd27bb218
  423ef8:	sub    esp,ebx
  423efa:	add    eax,0xc81303b8
  423eff:	jne    0x423e88
  423f01:	or     esp,DWORD PTR [edx]
  423f03:	out    dx,al
  423f04:	jp     0x423e86
  423f06:	in     al,0x6f
  423f08:	(bad)  
  423f09:	mov    eax,ds:0xdfa87971
  423f0e:	les    ebx,FWORD PTR [edx]
  423f10:	push   ebx
  423f11:	rol    BYTE PTR [ecx+edi*2+0x2c8bb2b9],cl
  423f18:	nop
  423f19:	push   edi
  423f1a:	aaa    
  423f1b:	dec    edx
  423f1c:	push   0x5f481c41
  423f21:	clc    
  423f22:	popa   
  423f23:	test   eax,0x4bff31cc
  423f28:	push   edi
  423f29:	xchg   DWORD PTR [esi+0x29],eax
  423f2c:	ja     0x423f39
  423f2e:	cmp    al,0xa7
  423f30:	or     BYTE PTR [ebx-0x3a],bh
  423f33:	cmp    al,0x3f
  423f35:	retf   0xa625
  423f38:	or     al,0xf1
  423f3a:	cmp    eax,0xf6443093
  423f3f:	and    eax,0xa9
	...
  423fb4:	inc    esi
  423fb5:	in     al,0x62
  423fb7:	mov    dl,ah
  423fb9:	mov    gs,esi
  423fbb:	out    dx,al
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx+0x2b],dh
  423fc1:	mov    bl,0xb
  423fc3:	in     al,0xa1
  423fc5:	jg     0x423fc8
  423fc7:	add    ch,dh
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    BYTE PTR [ecx+0x3c],bh
  423fce:	into   
  423fcf:	adc    BYTE PTR [eax-0x5897b4fb],0xbc
  423fd6:	add    BYTE PTR [edi+0x7bf7e6e9],bl
  423fdc:	add    DWORD PTR [edi],edi
  423fde:	xchg   eax,ebx
  423fe0:	inc    edi
  423fe1:	(bad)  
  423fe2:	push   ds
  423fe3:	adc    edx,edx
  423fe5:	add    al,0xf5
  423fe7:	push   0x4d
  423fe9:	sbb    BYTE PTR [edx+0x78b3073b],ch
  423fef:	stc    
  423ff0:	test   al,0xee
  423ff2:	sub    esi,esi
  423ff4:	xchg   edx,eax
  423ff5:	les    ebp,FWORD PTR [ebx+eiz*1]
  423ff8:	(bad)  
  423ffa:	fwait
  423ffb:	retf   0xca5e
  423ffe:	dec    ecx
  423fff:	xchg   esi,eax
  424000:	(bad)  
  424001:	je     0x423ff8
  424003:	into   
  424004:	stos   BYTE PTR es:[edi],al
  424005:	dec    edi
  424006:	inc    ebx
  424007:	ins    DWORD PTR es:[edi],dx
  424008:	lods   al,BYTE PTR ds:[esi]
  424009:	mov    ds:0x616526a5,al
  42400e:	pusha  
  42400f:	scas   al,BYTE PTR es:[edi]
  424010:	(bad)  
  424011:	jne    0x424054
  424013:	cmc    
  424014:	test   DWORD PTR [edi+esi*4-0x10],eax
  424018:	leave  
  424019:	aaa    
  42401a:	(bad)  
  42401c:	push   ss
  42401d:	adc    al,0xe6
  42401f:	inc    eax
  424020:	inc    eax
  424021:	pop    ss
  424022:	test   al,0xd2
  424024:	or     cl,BYTE PTR ds:0xb5ef94cb
  42402a:	xor    DWORD PTR [ebp-0x1f9eb6e3],0x1b
  424031:	fwait
  424032:	(bad)  
  424033:	das    
  424034:	cs test ah,dh
  424037:	jge    0x42408f
  424039:	stos   DWORD PTR es:[edi],eax
  42403a:	and    al,0xeb
  42403c:	push   0x11
  42403e:	xchg   esp,eax
  42403f:	mov    BYTE PTR [esi+0x3170ce3b],cl
  424045:	mov    ebx,0xc3cc5dde
  42404a:	lds    esi,FWORD PTR [eax+ebp*8+0x2]
  42404e:	add    DWORD PTR [esi],edi
  424050:	inc    eax
  424051:	rcr    DWORD PTR [edi+0x986cca4],cl
  424057:	dec    edi
  424058:	iret   
  424059:	jge    0x424040
  42405b:	mov    WORD PTR [ebx+0x5a735fdd],fs
  424061:	xchg   esi,eax
  424062:	js     0x424037
  424064:	outs   dx,DWORD PTR ds:[esi]
  424065:	mov    edi,0x59478332
  42406a:	pop    eax
  42406b:	jmp    0x4240c3
  42406d:	push   edi
  42406e:	pop    esp
  42406f:	jns    0x4240a7
  424071:	out    dx,eax
  424072:	adc    DWORD PTR [esi+0x1237ba6],esi
  424078:	sbb    al,0x66
  42407a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42407c:	rcr    edx,0xd2
  42407f:	xchg   ebp,eax
  424080:	mov    ah,0x8f
  424082:	sub    DWORD PTR [edi+0x4],esi
  424085:	push   ebx
  424086:	out    dx,eax
  424087:	dec    ecx
  424088:	pop    esp
  424089:	mov    ah,0x8e
  42408b:	add    dl,bl
  42408d:	shl    BYTE PTR [ebx+0xddeca31],0xb1
  424094:	mov    ebp,0x20205b80
  424099:	adc    ebx,DWORD PTR [ebp+edx*4+0x49]
  42409d:	lods   eax,DWORD PTR ds:[esi]
  42409e:	mov    bl,cl
  4240a0:	in     al,dx
  4240a1:	fcmovnu st,st(3)
  4240a3:	push   ecx
  4240a4:	add    esi,DWORD PTR [ebx]
  4240a6:	test   DWORD PTR ds:[edx],edx
  4240a9:	dec    eax
  4240aa:	(bad)  
  4240ab:	stc    
  4240ac:	sub    eax,0xbc32ee8a
  4240b1:	sbb    esi,DWORD PTR [ecx]
  4240b3:	sbb    DWORD PTR [edi+edi*2],edi
  4240b6:	dec    ebx
  4240b7:	push   0x3e
  4240b9:	ja     0x4240cd
  4240bb:	ja     0x4240af
  4240bd:	inc    esi
  4240be:	add    ebx,ecx
  4240c0:	jb     0x4240c2
	...
  424132:	add    BYTE PTR [eax],al
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax+0x690d7b6a]
  424142:	dec    eax
  424143:	pop    es
  424144:	xchg   esi,eax
  424145:	add    BYTE PTR [ecx],0x0
  424148:	cmc    
  424149:	add    BYTE PTR [eax],al
  42414b:	add    dl,ch
  42414d:	jae    0x42412a
  42414f:	mov    esi,0x254f3ce4
  424154:	cdq    
  424155:	jb     0x4241ad
  424157:	jnp    0x4241b7
  424159:	jecxz  0x42418a
  42415b:	daa    
  42415c:	and    eax,0xa28471b3
  424161:	pop    ecx
  424162:	mov    edi,0x209bb6a3
  424167:	inc    ebx
  424168:	int    0x20
  42416a:	sbb    BYTE PTR [ecx+0x43],0xaa
  42416e:	adc    DWORD PTR [eax-0x30],ebx
  424171:	shl    BYTE PTR [eax+0x28],cl
  424174:	adc    eax,0x3c649ded
  424179:	adc    edi,esp
  42417b:	mov    dh,0xf3
  42417d:	mov    eax,0xf27aa084
  424182:	or     esi,0x2c24747
  424188:	cmp    al,0x92
  42418a:	dec    edi
  42418b:	cdq    
  42418c:	arpl   WORD PTR [ecx],sp
  42418e:	push   0x945d9363
  424193:	gs cmp edi,0xfffffffb
  424197:	sahf   
  424198:	ja     0x424156
  42419a:	mov    ch,0x84
  42419c:	leave  
  42419d:	sub    eax,0xc1165122
  4241a2:	loop   0x424205
  4241a4:	imul   ecx,DWORD PTR [edx+0x5dfa17f0],0xffffffc5
  4241ab:	out    0x7d,al
  4241ad:	sub    eax,0xb71a3e84
  4241b2:	jle    0x4241d5
  4241b4:	adc    BYTE PTR [ebx-0x27ccc9ea],bh
  4241ba:	mov    dl,BYTE PTR [ecx+0x7b51310f]
  4241c0:	and    BYTE PTR [edx-0x77321f92],ah
  4241c6:	cs inc edx
  4241c8:	out    dx,eax
  4241c9:	jo     0x42415a
  4241cb:	jno    0x424199
  4241cd:	or     edi,DWORD PTR [ecx-0x7e]
  4241d0:	sub    eax,0x98b55469
  4241d5:	sbb    eax,0x92bf61f1
  4241da:	cmp    BYTE PTR ss:[edi],ch
  4241dd:	inc    esi
  4241de:	xchg   esi,eax
  4241df:	xchg   edi,eax
  4241e0:	aam    0x47
  4241e2:	pop    es
  4241e3:	jnp    0x4241e2
  4241e5:	xor    bl,BYTE PTR [eax-0x7dabb084]
  4241eb:	sub    DWORD PTR [ebp+0x3d08c49b],esp
  4241f1:	inc    esi
  4241f2:	sbb    BYTE PTR [edx],dl
  4241f4:	cmc    
  4241f5:	mov    edi,0x8603ff88
  4241fa:	mov    bl,0x2e
  4241fc:	pop    edx
  4241fd:	xchg   DWORD PTR [esi-0x58],ecx
  424200:	push   esp
  424201:	sbb    al,0xbd
  424203:	jg     0x4241dc
  424205:	int    0x69
  424207:	xor    eax,0xf4eeb632
  42420c:	add    eax,0xee948ee7
  424211:	retf   
  424212:	inc    ebp
  424213:	out    0xe0,al
  424215:	push   eax
  424216:	enter  0x76aa,0x18
  42421a:	iret   
  42421b:	imul   esi,ebx,0x5e979862
  424221:	pusha  
  424222:	push   es
  424223:	rcr    DWORD PTR [ecx-0x4a9593e4],1
  424229:	mov    ch,0x37
  42422b:	cli    
  42422c:	popa   
  42422d:	xchg   ebx,eax
  42422e:	cmp    al,0x9b
  424230:	icebp  
  424231:	imul   eax,esi,0xffffffb4
  424234:	aad    0x4c
  424236:	adc    esi,edi
  424238:	dec    ebp
  424239:	sahf   
  42423a:	lods   al,BYTE PTR ds:[esi]
  42423b:	ror    BYTE PTR [edi-0x4],cl
  42423e:	dec    ecx
  42423f:	mov    ebp,0xa0
	...
  4242b4:	clc    
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0xe618a4bf,eax
  4242c2:	sahf   
  4242c3:	xchg   DWORD PTR [ebx-0xafffe7f],ecx
  4242c9:	add    BYTE PTR [eax],al
  4242cb:	add    BYTE PTR ds:0xa2d47654,dl
  4242d1:	pop    esi
  4242d2:	pop    edi
  4242d3:	and    ecx,DWORD PTR [edx]
  4242d5:	(bad)  
  4242d6:	dec    esi
  4242d7:	jp     0x4242aa
  4242d9:	je     0x4242a6
  4242db:	adc    edx,DWORD PTR [ecx+edi*2]
  4242de:	jne    0x424307
  4242e0:	inc    ebp
  4242e1:	(bad)
  4242e4:	cli    
  4242e5:	ror    DWORD PTR [esi],0x3f
  4242e8:	aam    0xe
  4242ea:	adc    DWORD PTR [esi+0x55],esi
  4242ed:	fld    DWORD PTR ss:[esi+0x1e3467d8]
  4242f4:	jp     0x42429d
  4242f6:	cmp    cl,BYTE PTR [eax-0x32]
  4242f9:	xchg   ecx,eax
  4242fa:	push   edi
  4242fb:	mov    ch,0xee
  4242fd:	lock in eax,0x6d
  424300:	ror    DWORD PTR [esi],cl
  424302:	pop    edx
  424303:	stc    
  424304:	inc    ebp
  424305:	mov    DWORD PTR [eax+0x6afd1b42],esi
  42430b:	and    eax,0x3a76adf1
  424310:	adc    eax,0x83f988e6
  424315:	push   0x25
  424317:	not    BYTE PTR [edx]
  424319:	pop    edi
  42431a:	loope  0x4242ca
  42431c:	push   ebx
  42431d:	mov    esi,0xb1ded977
  424322:	cdq    
  424323:	(bad)  
  424324:	cmc    
  424325:	repnz in al,dx
  424327:	jp     0x4242e1
  424329:	mov    ds:0x1764d97c,al
  42432e:	xchg   ecx,eax
  42432f:	adc    DWORD PTR [ebx+ebx*2],ecx
  424332:	es inc ebp
  424334:	fmul   DWORD PTR [esi-0x582274ab]
  42433a:	cli    
  42433b:	mov    WORD PTR [ebx],?
  42433d:	hlt    
  42433e:	mov    BYTE PTR ds:[ecx+0x1dab278d],ch
  424345:	loop   0x424304
  424347:	stos   DWORD PTR es:[edi],eax
  424348:	or     al,0x4
  42434a:	sub    eax,0x33bcd3d9
  42434f:	rcl    DWORD PTR [ecx+edx*4+0x25ddc83a],cl
  424356:	ja     0x42430d
  424358:	mov    esp,0x3b73a538
  42435d:	(bad)  
  42435e:	icebp  
  42435f:	cld    
  424360:	push   esp
  424361:	inc    edi
  424362:	or     eax,0xf496094c
  424367:	xchg   bl,ah
  424369:	or     DWORD PTR [esi+0x5a78e56b],ebx
  42436f:	pop    ebp
  424370:	jb     0x4243a3
  424372:	mov    al,0xfa
  424374:	fistp  WORD PTR [ecx+eiz*4+0x3fc128bf]
  42437b:	jp     0x424308
  42437d:	dec    esi
  42437e:	adc    al,0xcb
  424380:	loop   0x42432f
  424382:	inc    edi
  424383:	mov    ecx,0xf184d6b4
  424388:	test   BYTE PTR [ebp-0x6cbac14a],bl
  42438e:	pop    eax
  42438f:	fs xchg ebp,eax
  424391:	(bad)  
  424392:	hlt    
  424393:	aam    0x86
  424395:	xor    ebx,DWORD PTR [esi-0x41827722]
  42439b:	jge    0x424347
  42439d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42439e:	mov    ebp,0xae8721be
  4243a3:	pop    es
  4243a4:	jmp    0x424362
  4243a6:	iret   
  4243a7:	xchg   ecx,eax
  4243a8:	sub    DWORD PTR [ebx-0x1273d3f6],eax
  4243ae:	push   esp
  4243af:	outs   dx,BYTE PTR ds:[esi]
  4243b0:	retf   0xfe39
  4243b3:	out    dx,al
  4243b4:	push   0x7afb11c0
  4243b9:	cwde   
  4243ba:	arpl   cx,ax
  4243bc:	in     eax,dx
  4243bd:	mov    eax,0x5e5b1a
	...
  424432:	add    BYTE PTR [eax],al
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	out    dx,eax
  424441:	(bad)  
  424442:	and    BYTE PTR [ecx],bl
  424444:	add    BYTE PTR [edx+0xf50001],0x0
  42444b:	add    BYTE PTR [edx],ah
  42444d:	mov    ecx,0xecf7e491
  424452:	outs   dx,BYTE PTR ds:[esi]
  424453:	and    DWORD PTR [esi+eiz*8+0x642cd3cb],edx
  42445a:	hlt    
  42445b:	or     ah,BYTE PTR [edx]
  42445d:	cdq    
  42445e:	add    ecx,DWORD PTR [ecx]
  424460:	inc    esp
  424461:	cmp    BYTE PTR [ecx+0x735a8757],bl
  424467:	xchg   ebx,eax
  424468:	pop    edx
  424469:	and    DWORD PTR [esi],eax
  42446b:	icebp  
  42446c:	loopne 0x424469
  42446e:	adc    ebp,DWORD PTR [edx-0x3]
  424471:	sub    al,BYTE PTR [eax]
  424473:	outs   dx,DWORD PTR ds:[esi]
  424474:	or     ebx,edi
  424476:	and    al,0xe7
  424478:	mov    esi,0xf61c0732
  42447d:	jae    0x4244b9
  42447f:	add    ch,BYTE PTR [ebp-0x2731f998]
  424485:	mov    al,0x4b
  424487:	loop   0x4244dc
  424489:	and    eax,0x6c6fcfbb
  42448e:	dec    esp
  42448f:	stos   DWORD PTR es:[edi],eax
  424490:	mov    al,ds:0xd989c9bc
  424495:	mov    esp,0x8c7da7b5
  42449a:	shl    DWORD PTR [ecx-0xe34d0ff],0xd3
  4244a1:	mov    DWORD PTR [ebx],esp
  4244a3:	out    0x87,eax
  4244a5:	gs inc esp
  4244a7:	scas   al,BYTE PTR es:[edi]
  4244a8:	mov    esp,0x70a216ce
  4244ad:	pop    ebp
  4244ae:	mov    BYTE PTR [ebp+0x799209f8],bh
  4244b4:	push   edi
  4244b5:	cmp    bl,BYTE PTR [eax+0x62554e1a]
  4244bb:	stc    
  4244bc:	xor    DWORD PTR [edi+0x32],0x34
  4244c0:	je     0x424471
  4244c2:	daa    
  4244c3:	fs dec ebx
  4244c5:	and    ch,bh
  4244c7:	cmp    bh,BYTE PTR [edi]
  4244c9:	sbb    esp,eax
  4244cb:	in     al,0xed
  4244cd:	popf   
  4244ce:	xchg   edx,eax
  4244cf:	and    esi,ebp
  4244d1:	jbe    0x424467
  4244d3:	pop    edx
  4244d4:	ins    DWORD PTR es:[edi],dx
  4244d5:	clc    
  4244d6:	xchg   esi,eax
  4244d7:	jmp    0x9a8a:0x8cfeeecb
  4244de:	in     eax,0x9d
  4244e0:	pop    ss
  4244e1:	scas   al,BYTE PTR es:[edi]
  4244e2:	sbb    eax,0x9f1f5754
  4244e7:	pop    es
  4244e8:	int3   
  4244e9:	cmc    
  4244ea:	add    eax,0x90bc3106
  4244ef:	pop    es
  4244f0:	jge    0x4244cc
  4244f2:	shl    DWORD PTR [eax-0x6b],cl
  4244f5:	ja     0x42449e
  4244f7:	or     al,0x6c
  4244f9:	xor    esi,DWORD PTR [edi+0x71]
  4244fc:	add    al,0x2b
  4244fe:	mov    al,ds:0x8219d350
  424503:	jg     0x42452a
  424505:	in     al,dx
  424506:	fdivp  st(5),st
  424508:	adc    BYTE PTR [edx-0x56],bl
  42450b:	inc    eax
  42450c:	cld    
  42450d:	int3   
  42450e:	das    
  42450f:	sbb    dh,0x79
  424512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424513:	lock jmp 0x42449e
  424516:	cld    
  424517:	ret    0x361b
  42451a:	repz (bad)
  42451d:	test   eax,0xbd5010b8
  424522:	fdiv   st(4),st
  424524:	pop    ebx
  424525:	imul   ecx,DWORD PTR [edx],0xffffffd8
  424528:	dec    ebx
  424529:	fsubrp st(3),st
  42452b:	xchg   ecx,eax
  42452c:	add    DWORD PTR [ecx+edi*8-0x75d3eb5],ecx
  424533:	mov    ebp,0xb380acdf
  424538:	push   ecx
  424539:	xchg   BYTE PTR [ebp+0x3035bdd6],dh
  42453f:	data16 repz add BYTE PTR [eax],al
	...
  4245b3:	add    BYTE PTR [eax+0x7f747c8f],al
  4245b9:	test   DWORD PTR [eax+0x6c527eff],0xebd88531
  4245c3:	and    eax,0x18375
  4245c8:	cmc    
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [eax+0x410c24d9],cl
  4245d1:	mov    eax,0x3e83fce7
  4245d6:	jp     0x424622
  4245d8:	sbb    al,0xda
  4245da:	push   ebx
  4245db:	sub    edi,DWORD PTR [ebp-0x1e43cd7c]
  4245e1:	sahf   
  4245e2:	mov    al,0x5
  4245e4:	push   edi
  4245e5:	hlt    
  4245e6:	xor    eax,0x89fc180f
  4245eb:	loop   0x424622
  4245ed:	test   DWORD PTR [ebx],0x532b183
  4245f3:	inc    esi
  4245f4:	(bad)  
  4245f5:	sub    eax,0x98a8e370
  4245fa:	jle    0x424586
  4245fc:	mov    ds:0xde4b7faa,al
  424601:	rcl    DWORD PTR [edx+edx*4+0x3b],0xeb
  424606:	xchg   ch,dh
  424608:	shr    DWORD PTR [ecx],cl
  42460a:	in     eax,dx
  42460b:	push   ebp
  42460c:	sti    
  42460d:	(bad)  
  42460e:	cmp    edx,ebx
  424610:	loopne 0x4245e1
  424612:	imul   edx,eax,0x4b33508b
  424618:	jb     0x4245c9
  42461a:	loope  0x424612
  42461c:	sbb    eax,0xe64a8a80
  424621:	sbb    al,0x5f
  424623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424624:	push   eax
  424625:	dec    edx
  424626:	fstp   TBYTE PTR [ecx+0x38]
  424629:	rcr    BYTE PTR [ecx+0x5009f353],0x7
  424630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424631:	add    dl,dl
  424633:	sub    DWORD PTR [edi+0x20],ebp
  424636:	out    dx,eax
  424637:	stos   BYTE PTR es:[edi],al
  424638:	push   ebx
  424639:	gs fs xchg edx,eax
  42463c:	aam    0x98
  42463e:	mov    al,ds:0xb4cad242
  424643:	idiv   DWORD PTR [edi+0x3e]
  424646:	popa   
  424647:	scas   al,BYTE PTR es:[edi]
  424648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424649:	lock mov eax,0x56715249
  42464f:	add    ch,BYTE PTR [ebx-0x44cfc498]
  424655:	pop    ss
  424656:	aas    
  424657:	jle    0x424695
  424659:	cli    
  42465a:	cmp    al,0xb4
  42465c:	pop    eax
  42465d:	inc    esp
  42465e:	sub    al,0x7f
  424660:	jecxz  0x4246a5
  424662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424663:	and    dh,BYTE PTR [edi]
  424665:	mov    edx,0x534e4a56
  42466a:	pushf  
  42466b:	test   eax,0xb1e5574c
  424670:	or     ah,BYTE PTR [eax+0x3dc6a35d]
  424676:	(bad)  
  424677:	mov    ebx,0x5dca2724
  42467c:	mov    dl,0xcd
  42467e:	or     eax,0x5b371ea3
  424683:	daa    
  424684:	or     eax,0xa910ac6c
  424689:	inc    ebx
  42468a:	xchg   ecx,eax
  42468b:	sub    DWORD PTR [esi],ecx
  42468d:	or     al,BYTE PTR [edx]
  42468f:	imul   edx,DWORD PTR [esi+edi*8-0x24],0xffffffce
  424694:	push   edx
  424695:	inc    ebx
  424696:	push   ebx
  424697:	push   0x8fdb1ea4
  42469c:	mov    eax,ds:0x319a8825
  4246a1:	add    BYTE PTR [edi],0x58
  4246a4:	ins    DWORD PTR es:[edi],dx
  4246a5:	test   eax,0x5743ad52
  4246aa:	push   ecx
  4246ab:	jbe    0x4246ca
  4246ad:	push   edx
  4246ae:	mov    ah,0xbd
  4246b0:	inc    esp
  4246b1:	and    esi,ebp
  4246b3:	(bad)  
  4246b4:	enter  0x63e,0xd8
  4246b8:	push   esp
  4246b9:	test   BYTE PTR [edx+0x4d94a63e],dh
  4246bf:	pop    ss
  4246c0:	push   edx
	...
  424731:	add    BYTE PTR [eax],al
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fst    QWORD PTR [edx+0x6ab8255d]
  424745:	test   BYTE PTR [ecx],al
  424747:	add    ch,dh
  424749:	add    BYTE PTR [eax],al
  42474b:	add    bl,ah
  42474d:	ins    DWORD PTR es:[edi],dx
  42474e:	sti    
  42474f:	dec    esi
  424750:	mov    DWORD PTR ds:0x12a9e2bf,ebp
  424756:	xor    DWORD PTR [eax],ecx
  424758:	sbb    ecx,DWORD PTR [ebp-0x4232f5ee]
  42475e:	bound  esp,QWORD PTR [eax]
  424760:	xchg   ebp,eax
  424761:	jle    0x42474f
  424763:	jl     0x424777
  424765:	inc    edx
  424766:	sbb    DWORD PTR ds:0xd7680f2d,ecx
  42476c:	test   ch,dh
  42476e:	sbb    al,0x46
  424770:	das    
  424771:	adc    eax,0x672efdab
  424776:	cwde   
  424777:	mov    ecx,DWORD PTR [esi-0x74]
  42477a:	nop
  42477b:	pop    esi
  42477c:	das    
  42477d:	data16 int3 
  42477f:	mov    bh,0x40
  424781:	mov    ds:0xa9750baa,eax
  424786:	dec    esi
  424787:	cmc    
  424788:	sub    al,0x7a
  42478a:	loopne 0x424711
  42478c:	(bad)  
  42478d:	sub    eax,0xde79bb92
  424792:	mul    BYTE PTR [eax]
  424794:	mov    ds:0xaf15e74a,eax
  424799:	xlat   BYTE PTR ds:[ebx]
  42479a:	test   al,0xe0
  42479c:	xchg   edi,eax
  42479d:	push   0x7b0ac434
  4247a2:	aam    0x61
  4247a4:	dec    ebp
  4247a5:	pop    ecx
  4247a6:	xchg   ebx,eax
  4247a7:	inc    eax
  4247a8:	inc    ebx
  4247a9:	test   ecx,eax
  4247ab:	out    0xe3,eax
  4247ad:	jo     0x42473c
  4247af:	mov    bl,0x66
  4247b1:	mov    dl,0x1f
  4247b3:	pop    ds
  4247b4:	inc    BYTE PTR gs:[eax-0x48]
  4247b8:	add    eax,0x357206e4
  4247bd:	in     al,dx
  4247be:	shl    BYTE PTR [ecx+0x5c1aaae8],cl
  4247c4:	(bad)  
  4247c7:	sbb    esi,esp
  4247c9:	cmp    dl,BYTE PTR [esi]
  4247cb:	sbb    BYTE PTR [ebp+0x4b28a79c],bh
  4247d1:	shl    BYTE PTR [edi],cl
  4247d3:	inc    edx
  4247d4:	inc    ecx
  4247d5:	out    dx,eax
  4247d6:	mov    eax,0xe93f6026
  4247db:	add    esp,esi
  4247dd:	pusha  
  4247de:	pop    ss
  4247df:	inc    ebp
  4247e0:	out    0xf1,eax
  4247e2:	sbb    al,0x45
  4247e4:	xchg   edx,eax
  4247e5:	out    0x30,eax
  4247e7:	neg    BYTE PTR [edx]
  4247e9:	jnp    0x424840
  4247eb:	dec    ecx
  4247ec:	jbe    0x42479c
  4247ee:	and    DWORD PTR ds:0xefa37940,0x93a4a8f2
  4247f8:	aaa    
  4247f9:	sbb    ebx,DWORD PTR [ebx+0x70]
  4247fc:	push   edi
  4247fd:	inc    esi
  4247fe:	(bad)  
  4247ff:	mov    DWORD PTR [ebx+0x79],edi
  424802:	inc    eax
  424803:	sub    eax,0x7bc045b5
  424808:	dec    ebx
  424809:	pop    es
  42480a:	addr16 aad 0x60
  42480d:	popa   
  42480e:	retf   
  42480f:	enter  0xb7a0,0x1e
  424813:	jmp    0xa87c:0x6e35123c
  42481a:	dec    ebx
  42481b:	dec    ebp
  42481c:	push   0xffffffb8
  42481e:	ss (bad) 
  424821:	pop    esp
  424822:	rol    BYTE PTR [edx-0x3c],1
  424825:	lock inc esp
  424827:	push   edx
  424828:	rcr    BYTE PTR [ebx-0x415af53c],cl
  42482e:	xor    al,0x85
  424830:	add    eax,0xeb221d70
  424835:	fs adc al,0x7a
  424838:	icebp  
  424839:	and    DWORD PTR [edx+esi*1-0x5bc1ff20],esi
  424840:	push   esi
	...
  4248b1:	add    BYTE PTR [eax],al
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x42491d
  4248c1:	adc    BYTE PTR [ebx],dh
  4248c3:	push   ebp
  4248c4:	pop    edi
  4248c5:	test   DWORD PTR [ecx],eax
  4248c7:	add    ch,dh
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    ah,ah
  4248cd:	and    DWORD PTR [esi+0x10087fd5],ebp
  4248d3:	ret    
  4248d4:	in     eax,0x3a
  4248d6:	pop    edi
  4248d7:	imul   ebp,eax,0xc2622ed5
  4248dd:	cmp    edi,DWORD PTR [eax+0x5f2a3592]
  4248e3:	mov    esi,DWORD PTR [ebp-0x5dad0548]
  4248e9:	fst    st(7)
  4248eb:	mov    dl,0x56
  4248ed:	shl    BYTE PTR [eax+0x48],1
  4248f0:	sub    dl,BYTE PTR [ebp+edx*4+0x10c81087]
  4248f7:	add    DWORD PTR [esp+esi*4],esp
  4248fa:	jle    0x4248db
  4248fc:	cwde   
  4248fd:	scas   al,BYTE PTR es:[edi]
  4248fe:	loopne 0x424923
  424900:	imul   ebp,DWORD PTR [edx-0x2a2fa3d4],0xaa11449f
  42490a:	add    edx,0x57092b7a
  424910:	test   al,0x9e
  424912:	pop    edi
  424913:	adc    DWORD PTR [edx-0x72],eax
  424916:	rdtsc  
  424918:	in     al,dx
  424919:	hlt    
  42491a:	sbb    DWORD PTR [esi],ebx
  42491c:	add    edi,edx
  42491e:	out    0x3e,al
  424920:	das    
  424921:	mov    eax,ds:0xbc8c2de3
  424926:	mov    esi,DWORD PTR [ecx-0x79ce9c15]
  42492c:	sub    bl,bh
  42492e:	hlt    
  42492f:	fcmovu st,st(6)
  424931:	test   BYTE PTR ss:[ebx+0x18605129],bl
  424938:	ror    DWORD PTR [eax],1
  42493a:	inc    ecx
  42493b:	rcl    DWORD PTR [edx+edx*8],0x12
  42493f:	mov    eax,0xf4bfc2bb
  424944:	mov    cl,0x14
  424946:	rcl    ebx,cl
  424948:	cdq    
  424949:	sar    ch,0x6d
  42494c:	mov    esp,0xcc208e95
  424951:	(bad)  
  424952:	int3   
  424953:	jecxz  0x424982
  424955:	ins    BYTE PTR es:[edi],dx
  424956:	es cmp eax,0x3dbb92ab
  42495c:	sbb    DWORD PTR ds:0x2139ab3f,edi
  424962:	xchg   ecx,eax
  424963:	retf   
  424964:	or     DWORD PTR [ebx+0x41911f23],0xe0d3e24
  42496e:	pop    ebx
  42496f:	jmp    0xe74f:0x5f12c11e
  424976:	dec    edx
  424977:	(bad)  
  424978:	sahf   
  424979:	mov    edx,0xced42cd9
  42497e:	hlt    
  42497f:	jmp    0x4249f9
  424981:	jno    0x424966
  424983:	(bad)  
  424984:	scas   eax,DWORD PTR es:[edi]
  424985:	fcom   DWORD PTR [esi+0x6fef3d4d]
  42498b:	into   
  42498c:	aas    
  42498d:	into   
  42498e:	in     eax,dx
  42498f:	pop    ecx
  424990:	fs out dx,al
  424992:	pop    edx
  424993:	cwde   
  424994:	push   ss
  424995:	adc    al,0x8
  424997:	pop    eax
  424998:	jne    0x4249dd
  42499a:	stos   BYTE PTR es:[edi],al
  42499b:	(bad)  
  42499c:	out    0x3c,al
  42499e:	mov    BYTE PTR [edx],al
  4249a0:	dec    edx
  4249a1:	xchg   edx,eax
  4249a3:	rcr    BYTE PTR [esi-0x75f9b0f6],cl
  4249a9:	scas   al,BYTE PTR es:[edi]
  4249aa:	sub    al,0x8
  4249ac:	retf   
  4249ad:	mov    ah,0x22
  4249af:	mov    dl,0xfb
  4249b1:	imul   ebx,DWORD PTR ds:0xc5ae504,0xb1017cc1
  4249bb:	mov    al,ds:0x608d24fd
  4249c0:	inc    DWORD PTR [eax]
	...
  424a32:	add    BYTE PTR [eax],al
  424a34:	xor    BYTE PTR ds:0xdf7d9f75,bh
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	adc    dh,BYTE PTR [ebx-0x20]
  424a43:	sbb    eax,0x18654
  424a48:	cmc    
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    dh,ch
  424a4d:	dec    ebp
  424a4e:	cmp    edi,DWORD PTR [ebx-0x1]
  424a51:	int3   
  424a52:	mov    WORD PTR [eax],ds
  424a54:	data16 (bad) 
  424a56:	jle    0x424a62
  424a58:	daa    
  424a59:	out    dx,eax
  424a5a:	fsub   QWORD PTR [ecx]
  424a5c:	and    al,0x8c
  424a5e:	jle    0x424a72
  424a60:	add    eax,0x52acee80
  424a65:	scas   eax,DWORD PTR es:[edi]
  424a66:	adc    dh,BYTE PTR [edx+eax*4-0x5cc37741]
  424a6d:	dec    ecx
  424a6e:	push   esi
  424a6f:	mov    bl,0x88
  424a71:	dec    ebp
  424a72:	fistp  WORD PTR [eax-0x57]
  424a75:	adc    eax,0x7fbe402a
  424a7a:	fcomp  DWORD PTR [edi]
  424a7c:	js     0x424a36
  424a7e:	pop    edi
  424a7f:	or     DWORD PTR [ebp+esi*1-0x4c],ebp
  424a83:	jbe    0x424a37
  424a85:	push   esp
  424a86:	adc    DWORD PTR [ebx+edx*1],0x45
  424a8a:	adc    BYTE PTR [ebp-0x54d76cc],dh
  424a90:	not    edi
  424a92:	xor    eax,0xad4e6ce5
  424a97:	cmp    eax,0x2f60574
  424a9c:	enter  0x6dfb,0xf7
  424aa0:	or     eax,DWORD PTR [esp+esi*2-0x55]
  424aa4:	sbb    eax,0xe8ea85d2
  424aa9:	pop    eax
  424aaa:	adc    al,0x8d
  424aac:	add    al,0xf9
  424aae:	push   eax
  424aaf:	jmp    0x424b15
  424ab1:	icebp  
  424ab2:	push   ss
  424ab3:	cmp    ebx,ebx
  424ab5:	inc    edx
  424ab6:	ss mov ecx,0x66f03e3b
  424abc:	sbb    al,bl
  424abe:	xlat   BYTE PTR ds:[ebx]
  424abf:	adc    eax,0xea2a15ea
  424ac4:	dec    ebp
  424ac5:	repz into 
  424ac7:	mov    dl,dl
  424ac9:	iret   
  424aca:	(bad)  
  424acb:	retf   
  424acc:	rcr    edi,cl
  424ace:	jmp    0x2e68:0xc5c039e1
  424ad5:	mov    dh,0xaf
  424ad7:	ss scas eax,DWORD PTR es:[edi]
  424ad9:	cmp    edi,0xffffffd8
  424adc:	push   edi
  424add:	lock xchg BYTE PTR [esi],cl
  424ae0:	js     0x424a87
  424ae2:	test   al,0x8b
  424ae4:	pop    ebx
  424ae5:	in     eax,0x24
  424ae7:	mov    ebp,0x5ea9614a
  424aec:	int    0x5e
  424aee:	lods   al,BYTE PTR ds:[esi]
  424aef:	mov    eax,0x307e7053
  424af4:	pop    ss
  424af5:	pop    eax
  424af6:	ficom  DWORD PTR [esi+0x364e1f0f]
  424afc:	call   FWORD PTR [ebx+0x778d3bff]
  424b02:	es sbb al,0x4f
  424b05:	aam    0xf9
  424b07:	mov    al,0x4a
  424b09:	jo     0x424a90
  424b0b:	xor    DWORD PTR [ebp+0x16],0x4f
  424b0f:	or     DWORD PTR [edx],0x781d7ca
  424b15:	or     al,0x16
  424b17:	push   ds
  424b18:	(bad)  
  424b19:	(bad)  
  424b1a:	jo     0x424b13
  424b1c:	push   ebp
  424b1d:	pop    ds
  424b1e:	push   es
  424b1f:	sub    esi,DWORD PTR [bp+di]
  424b22:	in     al,dx
  424b23:	push   ecx
  424b24:	mov    edx,0x3da2cb9b
  424b29:	mov    ecx,0x26395fee
  424b2e:	or     eax,0xca4c6648
  424b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b34:	jg     0x424afe
  424b36:	fidivr WORD PTR [edx]
  424b38:	pop    esi
  424b39:	imul   esp,DWORD PTR [esi+0x254c236b],0xffffffc2
  424b40:	ret    0x0
	...
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x59b9f881]
  424bc1:	loope  0x424c28
  424bc3:	pop    ebx
  424bc4:	dec    ecx
  424bc5:	xchg   DWORD PTR [ecx],eax
  424bc7:	add    ch,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [ebp+0x5df55879],dh
  424bd1:	inc    edi
  424bd2:	fild   WORD PTR [ecx+0xa]
  424bd5:	xor    bh,BYTE PTR [ecx-0x7e071d53]
  424bdb:	or     al,0xfb
  424bdd:	out    dx,eax
  424bde:	mov    ecx,0xaca81779
  424be3:	pop    esp
  424be4:	pop    ecx
  424be5:	sub    al,0xd2
  424be7:	popa   
  424be8:	push   es
  424be9:	mov    edx,0x3f1170f8
  424bee:	ficomp WORD PTR [edi-0x12]
  424bf1:	inc    esi
  424bf2:	pop    ecx
  424bf3:	xchg   edi,eax
  424bf4:	add    al,0x25
  424bf6:	mov    edi,0x6e616ed
  424bfb:	cdq    
  424bfc:	stc    
  424bfd:	sbb    eax,0x9c8d6ee4
  424c02:	xor    ecx,DWORD PTR [edi]
  424c04:	mov    esp,0xe628ec4d
  424c09:	fcomp  QWORD PTR [eax+ebx*2]
  424c0c:	sub    eax,0xb8eb9db
  424c11:	ss jnp 0x424c68
  424c14:	xchg   ebp,eax
  424c15:	scas   eax,DWORD PTR es:[edi]
  424c16:	mov    DWORD PTR [ebx+0x7d],ebx
  424c19:	adc    DWORD PTR ds:0x474bfec8,esp
  424c1f:	and    eax,0x42eae200
  424c24:	adc    eax,0x7540a89a
  424c29:	jae    0x424bc8
  424c2b:	pop    ds
  424c2c:	adc    ch,BYTE PTR [esi-0x3c0349b1]
  424c32:	add    bl,BYTE PTR [esi*8+0x740c236e]
  424c39:	jnp    0x424be7
  424c3b:	loop   0x424bee
  424c3d:	and    al,0x54
  424c3f:	add    eax,0x6fb7848b
  424c44:	jp     0x424c45
  424c46:	pop    esp
  424c47:	xchg   edx,eax
  424c48:	enter  0x4778,0x4f
  424c4c:	xchg   edi,eax
  424c4d:	into   
  424c4e:	cmp    bh,dh
  424c50:	adc    eax,0x4fb0ae66
  424c55:	jmp    0x2818bc15
  424c5a:	jno    0x424c6e
  424c5c:	sahf   
  424c5d:	add    eax,0xb4e9795d
  424c62:	dec    ebx
  424c63:	and    eax,0x72bafe6c
  424c68:	pop    ebp
  424c69:	inc    edi
  424c6a:	cmp    eax,0xd43da9cb
  424c6f:	stos   BYTE PTR es:[edi],al
  424c70:	ret    0x796d
  424c73:	xor    eax,0xe31a0ad6
  424c78:	enter  0x3447,0xf6
  424c7c:	and    DWORD PTR [ebx-0x26],eax
  424c7f:	inc    eax
  424c80:	and    dh,BYTE PTR [edx+0x114a125a]
  424c86:	retf   
  424c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c88:	mov    bl,0x80
  424c8a:	sti    
  424c8b:	and    al,0xa
  424c8d:	loope  0x424c8f
  424c8f:	or     BYTE PTR [eax+0x4ece381],ch
  424c95:	xchg   DWORD PTR [edi-0x76],ebx
  424c98:	xchg   edi,eax
  424c99:	imul   ebx,DWORD PTR [edx-0x40],0x2deb86cb
  424ca0:	push   eax
  424ca1:	xchg   ebp,eax
  424ca2:	xor    eax,0xb26f179b
  424ca7:	cli    
  424ca8:	sti    
  424ca9:	call   0x95c5:0xaea2cfb7
  424cb0:	mov    eax,ds:0x8a49d43d
  424cb5:	push   esi
  424cb6:	test   al,0xb1
  424cb8:	jmp    0xb599:0x70e4423a
  424cbf:	ss xchg ebp,eax
	...
  424d31:	add    BYTE PTR [eax],al
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4+0x6ab494d7]
  424d42:	pop    esi
  424d43:	xrelease mov BYTE PTR ds:[ecx],al
  424d47:	add    ch,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    bl,ah
  424d4d:	mov    ss,WORD PTR [ecx]
  424d4f:	and    cl,BYTE PTR [ebx]
  424d51:	sbb    esp,DWORD PTR [edi-0x6b]
  424d54:	sahf   
  424d55:	mov    eax,0x7a841d5a
  424d5a:	mov    eax,ds:0x42eb26a
  424d5f:	mov    dh,0x99
  424d61:	aam    0xc6
  424d63:	mul    BYTE PTR [ebx-0x1f]
  424d66:	pop    ds
  424d67:	inc    esi
  424d68:	(bad)  
  424d6c:	repnz std 
  424d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d6f:	and    al,0xe7
  424d71:	add    al,0x94
  424d73:	fst    DWORD PTR [esi+ecx*2]
  424d76:	inc    esi
  424d77:	cwde   
  424d78:	mov    dl,0x2b
  424d7a:	cmp    eax,0xf3846792
  424d7f:	mov    al,0xdf
  424d81:	cld    
  424d82:	repnz ins BYTE PTR es:[edi],dx
  424d84:	add    edx,edi
  424d86:	xchg   BYTE PTR [ecx-0x41c4ee7d],dh
  424d8c:	not    DWORD PTR [edx-0x1b]
  424d8f:	(bad)  [ebx+0x26]
  424d92:	pop    edi
  424d93:	jo     0x424de0
  424d95:	jo     0x424dff
  424d97:	in     al,0x80
  424d99:	xchg   ebx,eax
  424d9a:	enter  0xf3ef,0xf5
  424d9e:	jmp    DWORD PTR ds:0x774c7926
  424da4:	cmc    
  424da5:	mov    esp,0x38f39d3
  424daa:	adc    DWORD PTR [edi-0x6cd30b7b],eax
  424db0:	call   eax
  424db2:	jae    0x424e2b
  424db4:	retf   0x7bfc
  424db7:	inc    edi
  424db8:	test   BYTE PTR [ecx+0x30],ah
  424dbb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dbd:	popa   
  424dbe:	out    0x32,al
  424dc0:	retf   0x90db
  424dc3:	jmp    0x4391:0x49fc5ba8
  424dca:	inc    esi
  424dcb:	dec    edx
  424dcc:	ins    DWORD PTR es:[edi],dx
  424dcd:	sbb    BYTE PTR [ebx+0x4a],dh
  424dd0:	mov    ebp,0x6f6bae5d
  424dd5:	sub    edx,DWORD PTR [edi+0x44]
  424dd8:	sbb    DWORD PTR [esi+0x414b487],ecx
  424dde:	pop    esi
  424ddf:	mov    edx,0x9bd7d821
  424de4:	jb     0x424db2
  424de6:	sub    ch,dh
  424de8:	ror    esi,0x9b
  424deb:	adc    DWORD PTR [ebx+ebx*4+0x4a],esp
  424def:	cmp    esp,DWORD PTR [eax+edx*2-0x2f]
  424df3:	xchg   ebp,eax
  424df4:	xchg   DWORD PTR [edi+0x3e],eax
  424df7:	mov    esi,ebx
  424df9:	fisub  DWORD PTR [edx]
  424dfb:	fwait
  424dfc:	mov    ds:0xfff6d1c4,eax
  424e01:	xor    edi,0xa
  424e04:	or     DWORD PTR [esi-0x55],eax
  424e07:	and    eax,0x694f2415
  424e0c:	jmp    0xce447b55
  424e11:	sbb    BYTE PTR [ecx],al
  424e13:	push   edi
  424e14:	mov    ch,0xb7
  424e16:	fld    st(5)
  424e18:	jo     0x424e44
  424e1a:	jp     0x424e31
  424e1c:	(bad)  
  424e1d:	push   ecx
  424e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e1f:	vmovapd YMMWORD PTR [ecx+edi*4],ymm4
  424e24:	js     0x424e4b
  424e26:	cmc    
  424e27:	cwde   
  424e28:	es int 0x23
  424e2b:	ins    BYTE PTR es:[edi],dx
  424e2c:	test   DWORD PTR [eax-0xa711ab3],ebx
  424e32:	inc    ecx
  424e33:	xchg   ebx,eax
  424e34:	ret    0xa0b1
  424e37:	call   0x5e12:0xb7c6a7f4
  424e3e:	test   DWORD PTR [esi+0x2d],ebp
	...
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx+0x5a1cce77]
  424ec4:	xor    ecx,DWORD PTR [ecx+0xf50001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	xchg   ebx,eax
  424ecd:	mov    edx,0x68a01cfb
  424ed2:	mov    al,ds:0x1162f4a3
  424ed7:	mov    ah,0x20
  424ed9:	push   0x53
  424edb:	mov    dl,0x9
  424edd:	cld    
  424ede:	lods   al,BYTE PTR ds:[esi]
  424edf:	cwde   
  424ee0:	and    DWORD PTR [edx+0x1f],esp
  424ee3:	dec    esi
  424ee4:	imul   edx,DWORD PTR [eax-0x39],0xc0d41f45
  424eeb:	mov    esp,0xa8f8da1a
  424ef0:	mov    edi,DWORD PTR [esi-0x52]
  424ef3:	data16 mov bh,0xa8
  424ef6:	sbb    esi,edi
  424ef8:	push   cs
  424ef9:	loope  0x424ede
  424efb:	xor    dh,BYTE PTR [ecx]
  424efd:	je     0x424e98
  424eff:	shr    DWORD PTR [eax+0x6e2257a9],0xb6
  424f06:	mov    ch,BYTE PTR [ecx+esi*8]
  424f09:	ins    BYTE PTR es:[edi],dx
  424f0a:	push   ds
  424f0b:	call   0x9f6f:0x9c0044ec
  424f12:	sbb    BYTE PTR [edx],dl
  424f14:	(bad)  
  424f15:	mov    bh,0xa1
  424f17:	adc    eax,0x348dc69e
  424f1c:	lea    eax,[edi+0x7e]
  424f1f:	or     BYTE PTR [esi+eiz*2-0x51],dh
  424f23:	mov    ch,0xe2
  424f25:	inc    esp
  424f26:	pop    ebp
  424f27:	inc    esp
  424f28:	scas   al,BYTE PTR es:[edi]
  424f29:	imul   esi,DWORD PTR [ecx],0x2b5f5b61
  424f2f:	inc    ebp
  424f30:	pop    esp
  424f31:	stos   BYTE PTR es:[edi],al
  424f32:	mov    ds:0x27350f6b,eax
  424f37:	xchg   edx,eax
  424f38:	sub    BYTE PTR [ebx+0x476be225],ah
  424f3e:	xlat   BYTE PTR ds:[ebx]
  424f3f:	add    DWORD PTR [edi+0x7064f89a],esi
  424f45:	test   eax,0x8d95db8a
  424f4a:	out    dx,al
  424f4b:	ins    BYTE PTR es:[edi],dx
  424f4c:	sar    BYTE PTR [edi],cl
  424f4e:	or     eax,0xe058c53b
  424f53:	cmp    al,0xfe
  424f55:	pushf  
  424f56:	imul   DWORD PTR [esi]
  424f58:	mov    edx,0xd4dbc84b
  424f5d:	mov    esi,0x314bd7fc
  424f62:	ins    BYTE PTR es:[edi],dx
  424f63:	hlt    
  424f64:	sub    eax,0xfad5b1bc
  424f69:	add    ah,dh
  424f6b:	pop    es
  424f6c:	imul   ebp,esp,0x78d7f964
  424f72:	arpl   WORD PTR [edx-0x46],bx
  424f75:	xchg   edi,eax
  424f76:	mov    DWORD PTR [esi],edi
  424f78:	cmp    DWORD PTR [ebp+0x8],0x7a
  424f7c:	adc    al,0x79
  424f7e:	sub    al,0xdc
  424f80:	sub    al,BYTE PTR [edx]
  424f82:	(bad)  
  424f83:	call   0x5f11e127
  424f88:	outs   dx,DWORD PTR ds:[esi]
  424f89:	mov    cl,0xed
  424f8b:	nop
  424f8c:	clc    
  424f8d:	mul    BYTE PTR [esi+0x7b1f03d4]
  424f93:	pop    eax
  424f94:	inc    BYTE PTR [esi-0x2b]
  424f97:	inc    edi
  424f98:	hlt    
  424f99:	sbb    esi,DWORD PTR [edx+0x57b4a069]
  424f9f:	sti    
  424fa0:	cmp    BYTE PTR ds:0xd12d5ca0,0x47
  424fa7:	pop    ecx
  424fa8:	mov    ah,0x6d
  424faa:	xchg   ecx,eax
  424fab:	push   es
  424fac:	and    al,0xfd
  424fae:	hlt    
  424faf:	add    eax,0x719db6bb
  424fb4:	sub    ecx,DWORD PTR [ebp+eax*1+0x3c]
  424fb8:	ja     0x424fa6
  424fba:	push   esp
  424fbb:	and    BYTE PTR [eax+0x2b176f15],dl
	...
  425031:	add    BYTE PTR [eax],al
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	in     eax,dx
  425041:	jmp    0x8a6ab975
  425046:	add    DWORD PTR [eax],eax
  425048:	cmc    
  425049:	add    BYTE PTR [eax],al
  42504b:	add    BYTE PTR [esi],bl
  42504d:	shl    DWORD PTR [esi-0x28],1
  425050:	push   0x5d
  425052:	fist   DWORD PTR [ebp-0x526bc8b3]
  425058:	aad    0x9a
  42505a:	retf   0xe23
  42505d:	or     cl,BYTE PTR ds:0xf4948494
  425063:	imul   esi,DWORD PTR [ebx+edi*1],0xd5ca767f
  42506a:	arpl   WORD PTR [esi+0x50],si
  42506d:	inc    edx
  42506e:	lods   eax,DWORD PTR ds:[esi]
  42506f:	pushf  
  425070:	daa    
  425071:	mov    edx,esi
  425073:	sub    bl,dl
  425075:	jns    0x4250db
  425077:	je     0x42503a
  425079:	mov    fs,WORD PTR [ecx-0x11924ac0]
  42507f:	mov    ds:0x7a1871f7,al
  425084:	push   edi
  425085:	popa   
  425086:	mov    ds:0x80445608,al
  42508b:	xor    al,0xad
  42508d:	lods   eax,DWORD PTR ds:[esi]
  42508e:	(bad)  
  42508f:	popf   
  425090:	inc    eax
  425091:	xor    eax,0xba7ac9e8
  425096:	cmp    al,0x4f
  425098:	aad    0xb
  42509a:	mov    bh,0x46
  42509c:	imul   ebx,DWORD PTR [esi+0x2c],0xffffffbd
  4250a0:	jle    0x4250b4
  4250a2:	sbb    eax,0x21867173
  4250a7:	rol    DWORD PTR [ebx],cl
  4250a9:	pusha  
  4250aa:	push   ebp
  4250ab:	sub    eax,0xfd5e6c7
  4250b0:	or     al,al
  4250b2:	fst    DWORD PTR [edi]
  4250b4:	jnp    0x425069
  4250b6:	mov    dl,0x22
  4250b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250b9:	stos   DWORD PTR es:[edi],eax
  4250ba:	mul    BYTE PTR [edx-0x7a6628ce]
  4250c0:	out    dx,eax
  4250c1:	loop   0x425137
  4250c3:	mov    ah,0xf3
  4250c5:	and    esi,ebp
  4250c7:	push   es
  4250c8:	pop    esi
  4250c9:	adc    esi,0xffffff98
  4250cc:	iret   
  4250cd:	sbb    ah,bh
  4250cf:	aaa    
  4250d0:	loope  0x425077
  4250d2:	pop    edi
  4250d3:	jmp    0xa5c843c0
  4250d8:	pop    ecx
  4250d9:	cli    
  4250da:	mov    al,ds:0x5961500d
  4250df:	xchg   esp,eax
  4250e0:	les    si,DWORD PTR [edx]
  4250e3:	outs   dx,BYTE PTR ds:[esi]
  4250e4:	scas   eax,DWORD PTR es:[edi]
  4250e5:	mov    esi,0xb079bb3f
  4250ea:	add    ecx,DWORD PTR [ebx+0x22e9e373]
  4250f0:	mov    edx,0x8ab69a2b
  4250f5:	mov    ebx,0x16d408ba
  4250fa:	inc    ebx
  4250fb:	inc    ebp
  4250fc:	add    eax,0xf652a58e
  425101:	pop    ebx
  425102:	xor    al,0x81
  425104:	mov    ds:0x18702763,al
  425109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42510a:	sbb    DWORD PTR [eax+0x628f289],ecx
  425110:	cmc    
  425111:	add    edi,ebx
  425113:	push   edi
  425114:	inc    ebp
  425115:	jle    0x425173
  425117:	imul   esp,DWORD PTR [eax-0x4c],0xfffffff1
  42511b:	xor    eax,0xac20e353
  425120:	call   0xfca0dce
  425125:	dec    eax
  425126:	data16 repnz out 0xb1,al
  42512a:	scas   eax,DWORD PTR es:[edi]
  42512b:	mov    al,0xf7
  42512d:	jb     0x42515a
  42512f:	lods   eax,DWORD PTR ds:[esi]
  425130:	cmc    
  425131:	inc    esi
  425132:	pop    ebp
  425133:	jge    0x425167
  425135:	inc    esi
  425136:	jmp    0x425114
  425138:	push   eax
  425139:	jno    0x4250d5
  42513b:	(bad)  
  42513c:	ja     0x425138
  42513e:	add    al,0x8a
  425140:	in     eax,dx
	...
  4251b1:	add    BYTE PTR [eax],al
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	lock icebp 
  4251c2:	mov    ds,WORD PTR [ebp+0x1d]
  4251c5:	mov    eax,DWORD PTR [ecx]
  4251c7:	add    ch,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    ch,bl
  4251cd:	push   ss
  4251ce:	xor    DWORD PTR [edi],ecx
  4251d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251d1:	pop    esi
  4251d2:	pop    esp
  4251d3:	xchg   ebx,eax
  4251d4:	mov    bl,0x9e
  4251d6:	sar    BYTE PTR [esi+ebx*4],1
  4251d9:	mov    edx,0xd53ce88
  4251de:	outs   dx,BYTE PTR ds:[esi]
  4251df:	cwde   
  4251e0:	pop    edi
  4251e1:	les    eax,FWORD PTR [ebx+edi*8-0x668c2886]
  4251e8:	in     al,dx
  4251e9:	add    al,0xab
  4251eb:	addr16 jp 0x4251d3
  4251ee:	pop    eax
  4251ef:	cli    
  4251f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f1:	(bad)  
  4251f2:	mov    al,BYTE PTR [ebx]
  4251f4:	pop    edx
  4251f5:	ss push 0xffffffbf
  4251f8:	in     al,dx
  4251f9:	out    dx,eax
  4251fa:	arpl   ax,dx
  4251fc:	jb     0x425217
  4251fe:	cli    
  4251ff:	push   ebx
  425200:	lds    esi,FWORD PTR [ebx-0x1b2fafcd]
  425206:	add    bl,al
  425208:	outs   dx,BYTE PTR ds:[esi]
  425209:	jb     0x425231
  42520b:	dec    ecx
  42520c:	mov    WORD PTR [ebp-0x3a],cs
  42520f:	mov    cl,0x16
  425211:	pushf  
  425212:	clc    
  425213:	imul   edi,DWORD PTR [ecx],0xc06f8b92
  425219:	push   0xffffff83
  42521b:	lds    edi,FWORD PTR [ebx-0x1d]
  42521e:	cmc    
  42521f:	adc    ch,cl
  425221:	mov    ah,0x95
  425223:	gs aas 
  425225:	call   0x7f60:0x484558c5
  42522c:	int3   
  42522d:	fcom   st(0)
  42522f:	and    dl,ch
  425231:	xlat   BYTE PTR ds:[ebx]
  425232:	loop   0x425208
  425234:	sti    
  425235:	aas    
  425236:	add    dh,BYTE PTR [ebp+0x13]
  425239:	sbb    al,0x7d
  42523b:	fist   DWORD PTR [ebx]
  42523d:	cmp    DWORD PTR [edi],0x66f21104
  425243:	cmc    
  425244:	jne    0x4251ce
  425246:	fstp   QWORD PTR [ecx-0x85946da]
  42524c:	mov    esp,0x24ffb7ac
  425251:	lods   al,BYTE PTR ds:[esi]
  425252:	mov    bl,0x1b
  425254:	out    dx,eax
  425255:	sub    BYTE PTR [edi-0x7dd3abb9],cl
  42525b:	pop    edx
  42525c:	push   ebx
  42525d:	clc    
  42525e:	out    dx,al
  42525f:	imul   ecx,DWORD PTR [eax-0x30],0x2a5d7f07
  425266:	mov    eax,0x5c3484b0
  42526b:	jbe    0x425244
  42526d:	jp     0x4252b3
  42526f:	icebp  
  425270:	fwait
  425271:	xor    eax,0xdad932b
  425276:	rcr    DWORD PTR [eax-0x7ae8b2f],cl
  42527c:	in     al,0x37
  42527e:	out    0x9f,eax
  425280:	or     ecx,DWORD PTR ds:0x503e8158
  425286:	jnp    0x4252e3
  425288:	into   
  425289:	sub    edi,DWORD PTR es:[ebx+edx*8]
  42528d:	mov    ?,WORD PTR [eax]
  42528f:	mov    dh,0xe3
  425291:	jmp    0x391cf155
  425296:	jne    0x42524b
  425298:	mov    eax,ds:0xeb4e6117
  42529d:	cmp    BYTE PTR [edi],ch
  42529f:	xor    dh,BYTE PTR [edx]
  4252a1:	sbb    ah,BYTE PTR [ebp-0x2e]
  4252a4:	mov    BYTE PTR [ecx+0x2f],0x88
  4252a8:	pop    es
  4252a9:	shl    DWORD PTR [esi-0x6c],1
  4252ac:	loop   0x425318
  4252ae:	ds mov dl,0xd6
  4252b1:	xchg   edi,eax
  4252b2:	add    dh,BYTE PTR [edi-0x483bc5f]
  4252b8:	lods   eax,DWORD PTR ds:[esi]
  4252b9:	mov    bl,0x80
  4252bb:	scas   al,BYTE PTR es:[edi]
  4252bc:	in     eax,dx
  4252bd:	inc    ebx
  4252be:	or     eax,0x7e5c
	...
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz add BYTE PTR [edi],al
  425342:	add    DWORD PTR [edi],ecx
  425344:	adc    cl,BYTE PTR [ecx+eax*1+0xf500]
  42534b:	add    BYTE PTR [ebx+0x3a6e6684],bl
  425351:	imul   edi,DWORD PTR [edi-0x15],0xffffff90
  425355:	cmp    eax,0x851efd7f
  42535a:	pop    esi
  42535b:	jns    0x42536b
  42535d:	push   cs
  42535e:	add    al,0x79
  425360:	repz loopne 0x425395
  425363:	repz call 0xa998e906
  425369:	aam    0x84
  42536b:	cmp    BYTE PTR [ecx+0x4d],al
  42536e:	(bad)  
  425370:	shl    esi,1
  425372:	rol    edi,cl
  425374:	idiv   bh
  425376:	mov    ds:0x25a346ee,al
  42537b:	adc    al,0x27
  42537d:	sbb    ebp,DWORD PTR [eax-0x58]
  425380:	or     DWORD PTR [esi+0x3e],esp
  425383:	sub    DWORD PTR [edi],ebp
  425385:	push   ebx
  425386:	(bad)  
  425388:	mov    dl,0x47
  42538a:	cwde   
  42538b:	int3   
  42538c:	inc    edx
  42538d:	mov    ds,WORD PTR [eax]
  42538f:	mov    ?,WORD PTR [ecx]
  425391:	fsub   QWORD PTR [esi]
  425393:	mov    bh,0xf6
  425395:	pop    ds
  425396:	popf   
  425397:	jns    0x4253f3
  425399:	lock xchg ecx,eax
  42539b:	stc    
  42539c:	jge    0x4253c9
  42539e:	in     eax,0x84
  4253a0:	test   esi,0xe4ce8988
  4253a6:	ss sbb cl,cl
  4253a9:	cli    
  4253aa:	rcr    BYTE PTR [edi+0x42],1
  4253ad:	mov    al,ds:0xdd56c0e6
  4253b2:	test   ecx,ecx
  4253b4:	cmp    al,0x7e
  4253b6:	add    DWORD PTR [esi],esi
  4253b8:	cld    
  4253b9:	and    al,0x39
  4253bb:	push   edx
  4253bc:	inc    ecx
  4253bd:	mov    cl,0xa
  4253bf:	mov    eax,0x62e18bd2
  4253c4:	outs   dx,BYTE PTR ds:[esi]
  4253c5:	test   al,0x25
  4253c7:	mov    dh,0x58
  4253c9:	push   ds
  4253ca:	sbb    ah,bl
  4253cc:	sbb    ch,BYTE PTR [esp+ecx*2-0x1e]
  4253d0:	shl    DWORD PTR [eax+eax*4],cl
  4253d3:	add    al,0x76
  4253d5:	inc    eax
  4253d6:	stos   DWORD PTR es:[edi],eax
  4253d7:	xlat   BYTE PTR ds:[ebx]
  4253d8:	sub    al,0x3b
  4253da:	push   es
  4253db:	jmp    0x4253c4
  4253dd:	gs xchg esi,eax
  4253df:	or     DWORD PTR [edx],ecx
  4253e1:	push   ds
  4253e2:	sbb    eax,0x22142ecc
  4253e7:	sbb    DWORD PTR [ebp+esi*1+0x5e],eax
  4253eb:	push   ecx
  4253ec:	dec    ecx
  4253ed:	dec    ebx
  4253ee:	fdiv   st(7),st
  4253f0:	and    ah,BYTE PTR [ebp-0x3f]
  4253f3:	mov    dh,0x67
  4253f5:	int3   
  4253f6:	pop    DWORD PTR [edx+0x4]
  4253f9:	cmp    DWORD PTR [eax+0x31755239],ebp
  4253ff:	push   cs
  425400:	cmp    esi,DWORD PTR [edi-0x5600ae10]
  425406:	push   ds
  425407:	sbb    ebp,DWORD PTR [ebx+0x5a]
  42540a:	mov    eax,0x193748f4
  42540f:	aaa    
  425410:	fs mov ecx,0x28bb7b33
  425416:	push   ebp
  425417:	mov    esp,DWORD PTR [edx+0x657fdf4b]
  42541d:	mov    al,ds:0x50d3caba
  425422:	not    bl
  425424:	fidivr DWORD PTR [ebx-0x40e30d46]
  42542a:	xchg   edi,eax
  42542b:	adc    DWORD PTR ds:0x6c3ff590,edi
  425431:	add    al,ch
  425433:	dec    edx
  425434:	jle    0x425456
  425436:	and    al,0x3d
  425438:	push   eax
  425439:	js     0x42544a
  42543b:	or     al,0xe2
  42543d:	aad    0x20
  42543f:	mov    ?,WORD PTR [esi+0x0]
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	jmp    0x77bcc1b
  4254c5:	lea    eax,[ecx]
  4254c7:	add    ch,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [edx-0x2e],bl
  4254ce:	inc    esi
  4254cf:	push   ecx
  4254d0:	out    0x14,al
  4254d2:	inc    eax
  4254d3:	mov    ebp,0x35419125
  4254d8:	xlat   BYTE PTR ds:[ebx]
  4254d9:	fdivr  QWORD PTR ds:0xcad4affa
  4254df:	inc    ebx
  4254e0:	in     eax,0x42
  4254e2:	test   BYTE PTR [edi],dh
  4254e4:	out    0xa1,eax
  4254e6:	and    al,0xcc
  4254e8:	add    BYTE PTR [ebp-0x3c1cd309],ch
  4254ee:	pop    ebp
  4254ef:	push   ebx
  4254f0:	lea    edi,[edi]
  4254f2:	mov    eax,0xeefb625d
  4254f7:	sub    DWORD PTR [ebx],esp
  4254f9:	inc    eax
  4254fa:	fsub   st(3),st
  4254fc:	js     0x4254ea
  4254fe:	mov    ah,0x9e
  425500:	sahf   
  425501:	mov    edi,0xd7905861
  425506:	mov    eax,ds:0x95408332
  42550b:	push   0x2e
  42550d:	dec    ecx
  42550e:	pop    edx
  42550f:	(bad)  
  425510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425511:	mov    esp,DWORD PTR [ebx-0x733ea01]
  425517:	test   eax,0x720e4778
  42551c:	mov    esi,0x46482b7e
  425521:	ds in  eax,0x37
  425524:	stc    
  425525:	mov    eax,0x69e2d4fc
  42552a:	inc    esi
  42552b:	push   es
  42552c:	(bad)  
  42552e:	outs   dx,BYTE PTR ds:[esi]
  42552f:	mov    edi,0x7c98d0b8
  425534:	xchg   esi,eax
  425535:	imul   edi,DWORD PTR [esi+0x7172939a],0xffffffae
  42553c:	inc    edx
  42553d:	pop    es
  42553e:	ds leave 
  425540:	push   edx
  425541:	rcr    ah,0x27
  425544:	jnp    0x42552f
  425546:	xor    eax,0xfecfe16e
  42554b:	jae    0x4255cb
  42554d:	xor    cl,BYTE PTR [edi+eiz*2+0x4b161356]
  425554:	inc    eax
  425555:	js     0x4255b9
  425557:	jb     0x4255bb
  425559:	or     esi,ecx
  42555b:	adc    BYTE PTR [ecx+0x7d992a67],al
  425561:	hlt    
  425562:	nop
  425563:	mov    al,0x1c
  425565:	sbb    BYTE PTR [edx+0x4f],bl
  425568:	mov    bh,0x36
  42556a:	mov    esp,0xeb8c4904
  42556f:	retf   0x9563
  425572:	xor    eax,DWORD PTR [ecx]
  425574:	sub    DWORD PTR [edx-0x6fad6474],ebp
  42557a:	cmp    BYTE PTR [ebx-0xc],0xa0
  42557e:	pop    eax
  42557f:	push   ecx
  425580:	jb     0x42555f
  425582:	and    BYTE PTR [ebx-0x60],0x86
  425586:	adc    cl,bh
  425588:	aaa    
  425589:	adc    al,0x71
  42558b:	dec    ebp
  42558c:	inc    eax
  42558d:	sbb    al,0xf1
  42558f:	out    dx,al
  425590:	or     eax,0xca4d9876
  425595:	clc    
  425596:	rol    ebx,0x14
  425599:	pop    ebp
  42559a:	cmp    al,0xa1
  42559c:	mov    DWORD PTR [eax-0x8],ebp
  42559f:	cmp    DWORD PTR [edx+0x35],eax
  4255a2:	mov    ch,0x1e
  4255a4:	xchg   DWORD PTR [ebp+0x389dd62a],ebp
  4255aa:	cld    
  4255ab:	pushf  
  4255ac:	sbb    DWORD PTR [edi],esp
  4255ae:	test   DWORD PTR [edi-0x7e36b65f],ebp
  4255b4:	scas   al,BYTE PTR es:[edi]
  4255b5:	mov    cl,0x7c
  4255b7:	hlt    
  4255b8:	retf   
  4255b9:	dec    edx
  4255ba:	mov    ds:0x2252dddf,al
  4255bf:	hlt    
  4255c0:	nop
	...
  425631:	add    BYTE PTR [eax],al
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	pop    edi
  425641:	jle    0x42562a
  425643:	(bad)  
  425644:	cld    
  425645:	lea    eax,[ecx]
  425647:	add    ch,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [ebx+0x42],cl
  42564e:	daa    
  42564f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425650:	sbb    eax,0xa98198d7
  425655:	repnz in eax,dx
  425657:	add    eax,DWORD PTR [ebx-0x20b1bea7]
  42565d:	jp     0x4256af
  42565f:	adc    al,0x0
  425661:	inc    eax
  425662:	xchg   bh,ah
  425664:	mov    al,0xd5
  425666:	or     DWORD PTR [eax],ebp
  425668:	cmp    ebp,esp
  42566a:	jno    0x425697
  42566c:	cmp    edi,esp
  42566e:	in     al,dx
  42566f:	pop    eax
  425670:	cmp    BYTE PTR [edi+0x4b4ac89d],0xbf
  425677:	int    0xe3
  425679:	sbb    BYTE PTR [ecx],al
  42567b:	or     eax,0x828c537c
  425680:	push   cs
  425681:	jns    0x4256fe
  425683:	mov    WORD PTR [edx],?
  425685:	fiadd  DWORD PTR ds:0x86d12ec3
  42568b:	fsub   DWORD PTR [eax+ebp*8+0x28405def]
  425692:	loop   0x425627
  425694:	mov    ah,BYTE PTR [edx-0xc1cdf3a]
  42569a:	jb     0x425717
  42569c:	data16 daa 
  42569e:	addr16 (bad) 
  4256a1:	push   es
  4256a2:	out    0x38,eax
  4256a4:	mov    cl,0xd8
  4256a6:	inc    eax
  4256a7:	das    
  4256a8:	jnp    0x42567c
  4256aa:	jae    0x4256f9
  4256ac:	push   es
  4256ad:	add    DWORD PTR [esi+0x16d24a53],ecx
  4256b3:	push   edi
  4256b4:	stc    
  4256b5:	xor    eax,DWORD PTR [esi+eax*1+0x7f]
  4256b9:	xchg   edi,eax
  4256ba:	push   ecx
  4256bb:	addr16 loop 0x42572b
  4256be:	xchg   ecx,eax
  4256bf:	xchg   edi,eax
  4256c0:	pop    ds
  4256c1:	nop
  4256c2:	push   edi
  4256c3:	sahf   
  4256c4:	ins    DWORD PTR es:[edi],dx
  4256c5:	ror    BYTE PTR [edi-0x47],1
  4256c8:	imul   esi,DWORD PTR [ecx-0x3ffabf57],0xffffffe2
  4256cf:	mov    edx,esi
  4256d1:	enter  0x145f,0xa9
  4256d5:	or     al,0xf4
  4256d7:	xor    al,0x18
  4256d9:	push   cs
  4256da:	fwait
  4256db:	push   esp
  4256dc:	inc    esp
  4256dd:	and    ecx,DWORD PTR [edi-0x3e]
  4256e0:	(bad)  
  4256e1:	push   edx
  4256e2:	iret   
  4256e3:	adc    DWORD PTR [eax+0x3ef69853],0x34dd0bb5
  4256ed:	fcomp  QWORD PTR [ecx+0x65b00153]
  4256f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256f4:	iret   
  4256f5:	mov    DWORD PTR [eax+0x5f58fbc4],ecx
  4256fb:	mov    al,ds:0xf7200cb
  425700:	jae    0x425752
  425702:	test   BYTE PTR [ebx],dl
  425704:	fmulp  st(4),st
  425706:	lock popf 
  425708:	jge    0x42572e
  42570a:	pusha  
  42570b:	in     eax,0xbc
  42570d:	inc    ecx
  42570e:	dec    edi
  42570f:	xor    ch,dh
  425711:	adc    eax,0x61d05a8c
  425716:	movlps QWORD PTR [esi-0x2e],xmm1
  42571a:	ret    0xadcd
  42571d:	into   
  42571e:	push   0xffffffa2
  425720:	jno    0x4256c7
  425722:	mov    ecx,0x4468b0d7
  425727:	cli    
  425728:	je     0x4256c6
  42572a:	push   cs
  42572b:	mov    bl,0x9d
  42572d:	stos   BYTE PTR es:[edi],al
  42572e:	adc    al,0x3c
  425730:	out    dx,al
  425731:	sahf   
  425732:	xchg   edi,eax
  425733:	imul   DWORD PTR ds:0xcf3c5500
  425739:	outs   dx,BYTE PTR ds:[esi]
  42573a:	fsub   DWORD PTR [edi]
  42573c:	call   0x0:0xd4fb0fd3
	...
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	arpl   WORD PTR [ecx-0x710e865d],si
  4257c6:	add    DWORD PTR [eax],eax
  4257c8:	cmc    
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [edx-0x6ea38a15],bh
  4257d1:	sub    eax,DWORD PTR [ebx]
  4257d3:	popa   
  4257d4:	hlt    
  4257d5:	or     DWORD PTR [ecx],esi
  4257d7:	cld    
  4257d8:	out    0x13,eax
  4257da:	cmp    bl,BYTE PTR [eax+0x4b11bc2c]
  4257e0:	jns    0x425822
  4257e2:	ror    DWORD PTR [ecx],0xe6
  4257e5:	aam    0x89
  4257e7:	cwde   
  4257e8:	lock xor dl,bl
  4257eb:	push   es
  4257ec:	dec    esi
  4257ed:	dec    ebp
  4257ee:	jmp    0x4257db
  4257f0:	adc    ebx,DWORD PTR [ecx+0x5203f35b]
  4257f6:	sbb    bh,BYTE PTR [ebx+0x11]
  4257f9:	call   0x3ce0:0x3d979c13
  425800:	mov    dh,0xf3
  425802:	popf   
  425803:	shl    esp,cl
  425805:	ds jle 0x425799
  425808:	(bad)  
  425809:	int3   
  42580a:	and    al,0x85
  42580c:	push   esp
  42580d:	push   ds
  42580e:	inc    ecx
  42580f:	adc    eax,0x3dda11db
  425814:	aas    
  425815:	xchg   ebp,eax
  425816:	hlt    
  425817:	sbb    eax,0x28f21e3d
  42581c:	bound  ebx,QWORD PTR [ebx]
  42581e:	ret    0x1675
  425821:	stc    
  425822:	and    al,0x5d
  425824:	push   0xffffffd7
  425826:	fdiv   QWORD PTR [ebx-0xc167ab]
  42582c:	pop    esi
  42582d:	mov    ecx,DWORD PTR [esi*4+0x5685014b]
  425834:	jns    0x42586c
  425836:	adc    esp,DWORD PTR [ecx-0xd]
  425839:	mov    dh,0x8
  42583b:	imul   ecx,DWORD PTR [esi+0x40b20b53],0x5be82e27
  425845:	push   ebp
  425846:	(bad)  
  425847:	outs   dx,DWORD PTR ds:[esi]
  425848:	cmp    esp,DWORD PTR [ebp-0x45]
  42584b:	ds cmp eax,0xfc198d5b
  425851:	or     al,0x25
  425853:	xchg   ebx,eax
  425854:	xor    al,0xaf
  425856:	or     ecx,DWORD PTR [esi]
  425858:	test   DWORD PTR [edx-0x523087e3],ecx
  42585e:	aas    
  42585f:	jno    0x425883
  425861:	adc    ebx,DWORD PTR ss:[esi-0x4f]
  425865:	jp     0x4257f4
  425867:	(bad)
  42586a:	inc    ecx
  42586b:	cld    
  42586c:	xchg   edi,eax
  42586d:	xchg   esi,eax
  42586e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42586f:	push   sp
  425871:	sub    BYTE PTR [ebp-0x2b],dh
  425874:	jnp    0x4258e3
  425876:	sub    edx,ebp
  425878:	cli    
  425879:	das    
  42587a:	push   es
  42587b:	dec    ecx
  42587c:	mov    ebp,0xdfaef5de
  425881:	das    
  425882:	mov    cl,0x8c
  425884:	daa    
  425885:	in     al,0x6c
  425887:	cli    
  425888:	out    0x9a,al
  42588a:	inc    esi
  42588b:	stc    
  42588c:	call   0xc6d168a1
  425891:	mov    esp,0xa940c6dd
  425896:	in     al,dx
  425897:	inc    esp
  425898:	repnz mov ds:0x145cb049,al
  42589e:	adc    BYTE PTR [esi],cl
  4258a0:	xor    BYTE PTR [ebp-0x3f6c21eb],0x23
  4258a7:	arpl   WORD PTR [eax],bp
  4258a9:	cli    
  4258aa:	mov    cl,0x5a
  4258ac:	adc    DWORD PTR [ecx+0x13],ebp
  4258af:	jle    0x42587e
  4258b1:	or     eax,0xe3be0df1
  4258b6:	and    esp,DWORD PTR [ecx+0x13]
  4258b9:	outs   dx,DWORD PTR ds:[esi]
  4258ba:	sbb    esi,DWORD PTR [edi+edx*1-0x71]
  4258be:	test   BYTE PTR [ebx+0xd9],dl
	...
  425934:	imul   ebx,DWORD PTR [eax],0x63
  425937:	push   0x73
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	lods   eax,DWORD PTR ds:[esi]
  425941:	mov    al,dh
  425943:	iret   
  425944:	out    0x8f,al
  425946:	add    DWORD PTR [eax],eax
  425948:	cmc    
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [ebx+edi*4],dl
  42594e:	dec    ebp
  42594f:	dec    ebx
  425950:	xor    esi,DWORD PTR [edi+0x7ea20bca]
  425956:	add    eax,0x75dff422
  42595b:	sbb    eax,DWORD PTR [esi-0x47]
  42595e:	jb     0x4259c5
  425960:	sbb    bl,BYTE PTR [eax-0x2efc15ea]
  425966:	cmp    al,0xfa
  425968:	mov    dh,0xba
  42596a:	retf   0xf9fc
  42596d:	ja     0x425979
  42596f:	mov    bl,0xc9
  425971:	jl     0x425904
  425973:	imul   ecx,DWORD PTR [edx+0x49],0xceda7a0c
  42597a:	aas    
  42597b:	sub    bl,bh
  42597d:	mov    ebx,0x2a835f69
  425982:	in     eax,dx
  425983:	out    0x58,al
  425985:	popa   
  425986:	xlat   BYTE PTR ds:[ebx]
  425987:	repz mov esp,0xefdbf590
  42598d:	cmp    eax,0x300fc919
  425992:	(bad)  
  425993:	mov    edx,0xec405239
  425998:	das    
  425999:	das    
  42599a:	(bad)  
  42599b:	cmp    BYTE PTR [eax-0x5d4c5244],bh
  4259a1:	enter  0x79d8,0x53
  4259a5:	rol    BYTE PTR [ecx],0x60
  4259a8:	imul   edi,DWORD PTR [ecx],0xd2a01c72
  4259ae:	add    BYTE PTR [eax],cl
  4259b0:	and    ebp,DWORD PTR [ebx]
  4259b2:	inc    ecx
  4259b3:	aad    0xb4
  4259b5:	push   ds
  4259b6:	pop    ebx
  4259b7:	call   0x6dcd6828
  4259bc:	add    edx,ebx
  4259be:	(bad)  
  4259bf:	dec    ebp
  4259c0:	(bad)  
  4259c1:	push   ebx
  4259c2:	pop    esp
  4259c3:	sub    dh,BYTE PTR [edx]
  4259c5:	cld    
  4259c6:	jmp    0x425a02
  4259c8:	(bad)  
  4259c9:	fs jo  0x425a07
  4259cc:	mov    bh,0x33
  4259ce:	scas   al,BYTE PTR es:[edi]
  4259cf:	dec    ebx
  4259d0:	cmp    DWORD PTR [ebp+ebx*2-0x38919159],ebp
  4259d7:	inc    ebx
  4259d8:	mov    ds:0xcadf24af,al
  4259dd:	xor    ch,bl
  4259df:	jns    0x4259d8
  4259e1:	jmp    0xeefd:0x2beecad2
  4259e8:	out    0x31,al
  4259ea:	mov    WORD PTR [edi-0x3a43932],?
  4259f0:	ins    BYTE PTR es:[edi],dx
  4259f1:	adc    bh,BYTE PTR [ebp+0x28ec7e57]
  4259f7:	popf   
  4259f8:	sub    ch,BYTE PTR [ebx-0x78d75e1f]
  4259fe:	mov    edx,0x4e207ac7
  425a03:	xchg   ebx,eax
  425a04:	icebp  
  425a05:	mov    edx,0x9a791bcf
  425a0a:	or     al,0xee
  425a0c:	and    ah,BYTE PTR gs:[edx+0x300eefdb]
  425a13:	sub    eax,DWORD PTR [ebp-0x28086703]
  425a19:	mov    bh,0xc4
  425a1b:	mov    dh,0xc5
  425a1d:	stos   DWORD PTR es:[edi],eax
  425a1e:	mov    ds:0xbe1a43c,al
  425a23:	adc    ebp,DWORD PTR [edi+0x69]
  425a26:	popf   
  425a27:	jbe    0x425a98
  425a29:	(bad)  
  425a2a:	adc    al,0xe
  425a2c:	shl    BYTE PTR [ecx+ebx*4+0x62],cl
  425a30:	(bad)
  425a35:	adc    bl,BYTE PTR [eax]
  425a37:	xlat   BYTE PTR ds:[ebx]
  425a38:	xchg   edx,eax
  425a39:	jge    0x4259fa
  425a3b:	cs add al,cl
  425a3e:	ins    DWORD PTR es:[edi],dx
  425a3f:	sub    eax,0x79
	...
  425ab4:	push   es
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	in     al,dx
  425ac1:	or     BYTE PTR [edx],bl
  425ac3:	out    0xdb,eax
  425ac5:	nop
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	cmc    
  425ac9:	add    BYTE PTR [eax],al
  425acb:	add    BYTE PTR [esi-0x20b27e27],dl
  425ad1:	mov    ?,WORD PTR [ebp+0x21b89b1b]
  425ad7:	push   ss
  425ad8:	cmc    
  425ad9:	into   
  425ada:	pop    ecx
  425adb:	cs mov ch,0x38
  425ade:	sti    
  425adf:	jmp    0x425a67
  425ae1:	ror    DWORD PTR [eax+eiz*8+0x4780fa6c],cl
  425ae8:	cmp    eax,0x30e0acbf
  425aed:	sti    
  425aee:	inc    ebx
  425aef:	cdq    
  425af0:	xlat   BYTE PTR ds:[ebx]
  425af1:	jl     0x425b15
  425af3:	cmp    dl,ah
  425af5:	xchg   ecx,eax
  425af6:	jmp    0xc6c49ac2
  425afb:	loop   0x425b59
  425afd:	mov    ds:0x886994de,eax
  425b02:	icebp  
  425b03:	neg    esi
  425b05:	add    edi,eax
  425b07:	outs   dx,BYTE PTR ds:[esi]
  425b08:	fisttp DWORD PTR ds:0xa3579ddd
  425b0e:	std    
  425b0f:	mov    ds:0x37858fbc,al
  425b14:	jmp    0xfd60:0xa18fdf31
  425b1b:	inc    ecx
  425b1c:	sti    
  425b1d:	mov    esi,0xa2d5129f
  425b22:	pusha  
  425b23:	lds    edx,FWORD PTR [edi+0x25]
  425b26:	jne    0x425afe
  425b28:	js     0x425ae2
  425b2a:	leave  
  425b2b:	jo     0x425afa
  425b2d:	js     0x425acd
  425b2f:	aaa    
  425b30:	add    DWORD PTR [eax],ebp
  425b32:	sub    al,0x57
  425b34:	mov    bh,0x76
  425b36:	add    ebp,esi
  425b38:	push   ebp
  425b39:	ins    DWORD PTR es:[edi],dx
  425b3a:	mov    bl,0x6b
  425b3c:	mov    ah,0x6c
  425b3e:	push   edx
  425b3f:	or     DWORD PTR [edx-0x59a97809],0x4ac73b8f
  425b49:	jmp    0x3ef1098a
  425b4e:	cmp    DWORD PTR [eax+0x34a1e49e],ebx
  425b54:	jne    0x425adc
  425b56:	adc    al,0x5b
  425b58:	mov    edx,0xe9804b9e
  425b5e:	xlat   BYTE PTR ds:[ebx]
  425b5f:	ins    WORD PTR es:[edi],dx
  425b61:	or     al,0x98
  425b63:	int3   
  425b64:	ret    
  425b65:	pop    ebp
  425b66:	cmp    BYTE PTR [ebp+ebp*8+0x6a],al
  425b6a:	adc    al,0x78
  425b6c:	ss add al,0xf7
  425b6f:	daa    
  425b70:	and    DWORD PTR [edx-0x5ed148c9],ecx
  425b76:	dec    ebp
  425b77:	les    eax,FWORD PTR [esi+0x7b]
  425b7a:	jecxz  0x425b2c
  425b7c:	pop    es
  425b7d:	inc    eax
  425b7e:	push   edi
  425b7f:	repnz lods al,BYTE PTR ds:[esi]
  425b81:	or     DWORD PTR [edi-0x2b],ebp
  425b84:	iret   
  425b85:	(bad)  
  425b86:	aam    0x74
  425b88:	imul   ebx,ebx,0x21
  425b8b:	ffreep st(3)
  425b8d:	bound  ebp,QWORD PTR [edi]
  425b8f:	retf   
  425b90:	xor    eax,0x9d429bd0
  425b95:	out    dx,eax
  425b96:	mov    bh,0x85
  425b98:	neg    edx
  425b9a:	jmp    0x86ebdd81
  425b9f:	add    bh,BYTE PTR [edx-0x6fd8daf8]
  425ba5:	sbb    ch,al
  425ba7:	pusha  
  425ba8:	sub    al,0x93
  425baa:	mov    ebp,0xac64f01b
  425baf:	dec    eax
  425bb0:	sub    al,0x2e
  425bb2:	mov    eax,ds:0xda4a75f1
  425bb7:	clc    
  425bb8:	xchg   ecx,eax
  425bb9:	or     eax,0x1557ec04
  425bbe:	out    dx,eax
  425bbf:	test   eax,0xd1
	...
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0xb7feb8c8
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    BYTE PTR [ecx-0x1c],ah
  425c4e:	retf   
  425c4f:	or     BYTE PTR [eax-0x4a],0x8f
  425c53:	pop    edi
  425c54:	cmp    al,0x6a
  425c56:	sub    eax,0x5dc3be3a
  425c5b:	pop    ecx
  425c5c:	in     eax,0x8f
  425c5e:	adc    ch,BYTE PTR [edi-0x39]
  425c61:	lea    eax,[edx-0x73]
  425c64:	cdq    
  425c65:	imul   ebx,ecx,0xb9927fef
  425c6b:	inc    esp
  425c6c:	into   
  425c6d:	loop   0x425c03
  425c6f:	xor    ecx,DWORD PTR [ecx+ecx*1]
  425c72:	std    
  425c73:	pop    ebp
  425c74:	(bad)  
  425c75:	shr    DWORD PTR [ebx-0x15],1
  425c78:	popf   
  425c79:	test   eax,0xd0ed148b
  425c7e:	adc    al,0x5b
  425c80:	scas   eax,DWORD PTR es:[edi]
  425c81:	sahf   
  425c82:	pop    esp
  425c83:	mov    WORD PTR [ebp+0x17],cs
  425c86:	sub    eax,0x13d1d594
  425c8b:	leave  
  425c8c:	xor    bh,bl
  425c8e:	adc    BYTE PTR [ebp+0x7f],dl
  425c91:	and    eax,0x10d06613
  425c96:	fs ds fcom st(5)
  425c9a:	sbb    dl,BYTE PTR [edi+0x24ffc48e]
  425ca0:	mov    DWORD PTR [eax-0x54223e32],ecx
  425ca6:	push   edi
  425ca7:	retf   
  425ca8:	test   BYTE PTR es:[esi-0x4f5181d4],cl
  425caf:	std    
  425cb0:	mov    esp,0x15548d32
  425cb5:	xor    bl,BYTE PTR [ecx]
  425cb7:	repz iret 
  425cb9:	loopne 0x425cf4
  425cbb:	mov    bh,0xc7
  425cbd:	retf   0x286e
  425cc0:	mov    WORD PTR [ecx],fs
  425cc2:	inc    edi
  425cc3:	mov    esi,0xbd3107c8
  425cc8:	jne    0x425d05
  425cca:	and    bl,ah
  425ccc:	int    0xe8
  425cce:	arpl   WORD PTR [ebx-0x32d4a8bd],bx
  425cd4:	jae    0x425d07
  425cd6:	cmp    eax,0x5ee6083d
  425cdb:	icebp  
  425cdc:	pop    esi
  425cdd:	stos   DWORD PTR es:[edi],eax
  425cde:	push   es
  425cdf:	jl     0x425cc1
  425ce1:	mov    esi,0x7eabcacc
  425ce6:	nop
  425ce7:	jns    0x425ca5
  425ce9:	push   esi
  425cea:	stc    
  425ceb:	mov    esp,edi
  425ced:	mov    edi,0xb6be56c9
  425cf2:	and    eax,0x774fedcc
  425cf7:	and    ah,BYTE PTR [ecx-0x7c4f3825]
  425cfd:	call   0x43a0d1d5
  425d02:	sbb    eax,0x2b948b92
  425d07:	pop    ss
  425d08:	pushf  
  425d09:	mov    ebx,0x10d395db
  425d0e:	inc    esp
  425d0f:	(bad)  
  425d10:	inc    esp
  425d11:	adc    esi,DWORD PTR [esp+edx*2+0x33]
  425d15:	cmp    ch,BYTE PTR [esi]
  425d17:	inc    eax
  425d18:	dec    DWORD PTR [edx]
  425d1a:	push   ecx
  425d1b:	popf   
  425d1c:	int3   
  425d1d:	call   0x9095674a
  425d22:	sub    al,BYTE PTR [edi+0x47]
  425d25:	mov    cl,ch
  425d27:	sar    DWORD PTR [eax+0x724f247b],cl
  425d2d:	loopne 0x425d00
  425d2f:	xchg   ebx,eax
  425d30:	inc    ecx
  425d31:	sbb    al,BYTE PTR [edi+0x1d1a7776]
  425d37:	jbe    0x425d28
  425d39:	sbb    eax,0x27f2b429
  425d3e:	xlat   BYTE PTR ds:[ebx]
  425d3f:	js     0x425cd4
	...
  425db1:	add    BYTE PTR [eax],al
  425db3:	add    BYTE PTR ds:0xf361d20c,bh
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	dec    eax
  425dc1:	pushf  
  425dc2:	xchg   edi,eax
  425dc3:	mov    ds:0x192c5,al
  425dc8:	cmc    
  425dc9:	add    BYTE PTR [eax],al
  425dcb:	add    BYTE PTR [edi+ebp*2+0x44],bl
  425dcf:	jo     0x425d6e
  425dd1:	xor    bh,BYTE PTR [edx+0x2b]
  425dd4:	std    
  425dd5:	in     eax,dx
  425dd6:	inc    edx
  425dd7:	mov    edi,0x4bf52624
  425ddc:	mov    ah,BYTE PTR [edi+0x53]
  425ddf:	jb     0x425e41
  425de1:	and    eax,0x98ef71cd
  425de6:	inc    ecx
  425de7:	mov    edx,0x703db7d6
  425dec:	mov    dh,0x75
  425dee:	adc    bl,BYTE PTR [esp+ebp*2+0x3f5a3839]
  425df5:	inc    ebx
  425df6:	out    0x23,eax
  425df8:	in     al,dx
  425df9:	xor    BYTE PTR [eax+0x61a0a791],ch
  425dff:	mov    BYTE PTR [esp],dh
  425e02:	ja     0x425e0b
  425e04:	jo     0x425e35
  425e06:	add    BYTE PTR [eax],bl
  425e08:	push   ebx
  425e09:	pop    edi
  425e0a:	jno    0x425dd2
  425e0c:	pop    esp
  425e0d:	cmp    DWORD PTR [ebx+0x39],edi
  425e10:	out    dx,al
  425e11:	imul   esi,DWORD PTR [eax-0x6001a63e],0xd4601117
  425e1b:	int3   
  425e1c:	not    DWORD PTR [ecx-0x3b]
  425e1f:	cmp    bh,BYTE PTR [eax+ebx*8+0x2374c6d6]
  425e26:	inc    esp
  425e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e28:	scas   al,BYTE PTR es:[edi]
  425e29:	mov    cl,0x54
  425e2b:	jl     0x425e58
  425e2d:	ja     0x425e2d
  425e2f:	lahf   
  425e30:	xor    BYTE PTR [edx+0x520bbdf4],dl
  425e36:	arpl   WORD PTR [eax+0x306c747d],bp
  425e3c:	xchg   esi,eax
  425e3d:	out    0xac,eax
  425e3f:	adc    eax,0x5bf03517
  425e44:	pop    esp
  425e45:	push   ebx
  425e46:	sub    BYTE PTR [ebx],ch
  425e48:	shl    al,0xc8
  425e4b:	outs   dx,BYTE PTR ds:[esi]
  425e4d:	sbb    al,0x47
  425e4f:	hlt    
  425e50:	sbb    DWORD PTR [ebx+0x843faca],esi
  425e56:	adc    dh,BYTE PTR [ebp-0x6c]
  425e59:	pushf  
  425e5a:	mov    bh,0x8a
  425e5c:	cmp    ah,ch
  425e5e:	lea    ebx,[edx-0x208c779e]
  425e64:	inc    esi
  425e65:	ret    
  425e66:	dec    esi
  425e67:	cwde   
  425e68:	fld    QWORD PTR [ecx]
  425e6a:	add    DWORD PTR [ebx],edx
  425e6c:	xchg   ebp,eax
  425e6d:	and    BYTE PTR [esi-0x4a],ch
  425e70:	mov    ds:0x98e7ac25,eax
  425e75:	sbb    DWORD PTR [eax+0x48b5d44d],edx
  425e7b:	jo     0x425e0a
  425e7d:	pushf  
  425e7e:	bswap  esi
  425e80:	mov    cl,0x1f
  425e82:	mov    al,ds:0xd0c4bd5c
  425e87:	or     eax,0x32a42d99
  425e8c:	mov    ch,0xfc
  425e8e:	dec    eax
  425e8f:	and    DWORD PTR [ecx-0x12753b5],esi
  425e95:	and    eax,0x81ce8774
  425e9a:	sbb    al,0xe0
  425e9c:	icebp  
  425e9d:	out    dx,eax
  425e9e:	push   eax
  425e9f:	push   0xf49b653d
  425ea4:	(bad)  
  425ea6:	lods   eax,DWORD PTR ds:[esi]
  425ea7:	sub    dl,BYTE PTR ds:0x88f0a18a
  425ead:	adc    dl,BYTE PTR [edi+ebx*4]
  425eb0:	js     0x425e9d
  425eb2:	(bad)  
  425eb3:	stos   DWORD PTR es:[edi],eax
  425eb4:	pop    ecx
  425eb5:	ins    DWORD PTR es:[edi],dx
  425eb6:	in     al,dx
  425eb7:	xor    al,0xfa
  425eb9:	and    al,0xd
  425ebb:	sub    BYTE PTR [ecx-0x6c7b0b55],0x0
	...
  425f32:	add    BYTE PTR [eax],al
  425f34:	dec    ebx
  425f35:	push   ss
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx-0x61]
  425f41:	outs   dx,DWORD PTR ds:[esi]
  425f42:	fld    DWORD PTR [ecx]
  425f44:	mov    edx,0xf5000193
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    BYTE PTR [ebx-0x5d094a79],cl
  425f51:	inc    ebx
  425f52:	(bad)  
  425f53:	scas   eax,DWORD PTR es:[edi]
  425f54:	scas   eax,DWORD PTR es:[edi]
  425f55:	jmp    0x3d8a:0x8220d853
  425f5c:	outs   dx,DWORD PTR ds:[esi]
  425f5d:	jge    0x425f44
  425f5f:	sbb    BYTE PTR [ebx+edx*4],0x1d
  425f63:	jg     0x425fdf
  425f65:	fild   QWORD PTR [ebp+0x3e]
  425f68:	imul   ecx,DWORD PTR [ecx],0xe27ae31
  425f6e:	xchg   bp,ax
  425f70:	push   ebp
  425f71:	retf   
  425f72:	mov    cs,ebp
  425f74:	jmp    0x425f93
  425f76:	cmp    eax,0x798eff01
  425f7b:	cmp    eax,0x760f4d47
  425f80:	sbb    DWORD PTR [ebp+0x2b],ebx
  425f83:	bound  esi,QWORD PTR [ebx-0x3a930b3c]
  425f89:	sub    ecx,eax
  425f8b:	pop    es
  425f8c:	jmp    0x5aa71157
  425f91:	enter  0xf2d7,0x93
  425f95:	push   es
  425f96:	mov    edi,0x539aa3a3
  425f9b:	imul   ecx,ecx,0x1f
  425f9e:	jae    0x425fd5
  425fa0:	cld    
  425fa1:	inc    ebp
  425fa2:	dec    ebx
  425fa3:	shr    DWORD PTR [eax+edx*2],1
  425fa6:	aad    0x64
  425fa8:	jge    0x425f81
  425faa:	or     esi,edx
  425fac:	pop    ss
  425fad:	push   0xe
  425faf:	xor    dl,BYTE PTR [esi-0x6d659388]
  425fb5:	xor    al,0x2e
  425fb7:	jns    0x425f9b
  425fb9:	out    dx,al
  425fba:	aas    
  425fbb:	jne    0x425f87
  425fbd:	and    eax,DWORD PTR [ebx+0x5c]
  425fc0:	cmp    al,0xd
  425fc2:	mov    edi,0xa34dfb36
  425fc7:	pop    es
  425fc8:	xchg   ebp,eax
  425fc9:	cmp    DWORD PTR [edx+0x401415ed],esi
  425fcf:	(bad)  
  425fd0:	cmp    DWORD PTR [esi+0x19b0e42a],ecx
  425fd6:	jmp    0xd53a4cf7
  425fdb:	aas    
  425fdc:	fs int 0x3
  425fdf:	inc    eax
  425fe0:	push   ebx
  425fe1:	mov    ebp,0x65ea9811
  425fe6:	mov    WORD PTR [edi-0x6562d2d9],fs
  425fec:	push   ss
  425fed:	ficom  WORD PTR [esi+0x1faec79a]
  425ff3:	xchg   ebp,eax
  425ff4:	aam    0x8c
  425ff6:	pop    eax
  425ff7:	sbb    eax,0xf009d097
  425ffc:	xchg   ecx,eax
  425ffd:	mov    DWORD PTR [esi+0x708977e6],eax
  426003:	in     eax,dx
  426004:	test   BYTE PTR [edx-0x74],al
  426007:	int3   
  426008:	push   ss
  426009:	in     al,0x2f
  42600b:	mov    eax,ds:0xa4aebb6e
  426010:	push   0x20acae3d
  426015:	test   ecx,esp
  426017:	pop    edx
  426018:	mov    eax,0xec9528f9
  42601d:	mov    ah,0x95
  42601f:	clc    
  426020:	test   eax,0x9b1af3c7
  426025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426026:	inc    esi
  426027:	sub    DWORD PTR [edi],0x670444cc
  42602d:	out    0x36,eax
  42602f:	jge    0x426084
  426031:	data16 fstp DWORD PTR [eax+0x18]
  426035:	je     0x425fce
  426037:	adc    dl,ah
  426039:	push   0x4b
  42603b:	fisub  WORD PTR [edi+0x502972a0]
	...
  4260b1:	add    BYTE PTR [eax],al
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x3230cc1a
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    bl,dh
  4260cd:	das    
  4260ce:	jecxz  0x4260a7
  4260d0:	std    
  4260d1:	add    eax,ebp
  4260d3:	lea    ecx,[ecx-0x581aed7c]
  4260d9:	loopne 0x4260ac
  4260db:	mov    WORD PTR [ecx-0x302f1a21],cs
  4260e1:	out    0xde,eax
  4260e3:	div    bl
  4260e5:	or     al,0x4
  4260e7:	not    DWORD PTR [edi-0xc]
  4260ea:	xchg   ecx,eax
  4260eb:	outs   dx,DWORD PTR ds:[esi]
  4260ec:	xchg   ebx,eax
  4260ed:	and    al,BYTE PTR [ebx-0x17c59677]
  4260f3:	test   al,0x28
  4260f5:	clc    
  4260f6:	xor    al,0x50
  4260f8:	xchg   esp,eax
  4260f9:	jne    0x42612c
  4260fb:	scas   eax,DWORD PTR es:[edi]
  4260fc:	adc    edx,ecx
  4260fe:	push   es
  4260ff:	push   es
  426100:	add    ebx,DWORD PTR [ebx+0x14306485]
  426106:	out    dx,al
  426107:	in     al,0x81
  426109:	adc    al,0x45
  42610b:	fistp  WORD PTR [ecx+0x45831a3f]
  426111:	jno    0x4260a0
  426113:	add    edi,DWORD PTR [ecx+0x5b]
  426116:	push   es
  426117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426118:	push   esi
  426119:	aaa    
  42611a:	imul   ecx,DWORD PTR [edx+0x29],0xeff8b5f2
  426121:	cmp    eax,0xeacf27d7
  426126:	pop    edx
  426127:	inc    esp
  426128:	loopne 0x426159
  42612a:	pushf  
  42612b:	jo     0x426109
  42612d:	push   edx
  42612e:	ret    0x3481
  426131:	adc    eax,0xc955969
  426136:	scas   al,BYTE PTR es:[edi]
  426137:	aad    0x8
  426139:	mov    eax,ds:0xc7593fbf
  42613e:	test   BYTE PTR [ecx],bl
  426140:	dec    ebp
  426141:	mov    bh,0xb9
  426143:	or     DWORD PTR [esi],ecx
  426145:	xor    ah,BYTE PTR [edi-0x80]
  426148:	jmp    0x4261af
  42614a:	inc    edx
  42614b:	inc    ebp
  42614c:	jle    0x426121
  42614e:	retf   0x2e71
  426151:	inc    edx
  426152:	and    edi,DWORD PTR [eax+0x6d]
  426155:	fdivr  st,st(5)
  426157:	std    
  426158:	pop    esi
  426159:	stc    
  42615a:	fwait
  42615b:	mov    eax,0xcedca881
  426160:	xchg   edi,ecx
  426162:	jge    0x42610b
  426164:	out    0xaa,eax
  426166:	mov    cl,0xe0
  426168:	jmp    0x15b1:0x7a3f7a10
  42616f:	daa    
  426170:	repnz in al,dx
  426172:	cmp    eax,0xa4e5232d
  426177:	and    DWORD PTR [edx-0x2f],0xffffff85
  42617b:	pop    eax
  42617c:	lahf   
  42617d:	out    dx,al
  42617e:	ror    BYTE PTR [ebp+0x61e5c1cb],1
  426184:	iret   
  426185:	(bad)  
  426186:	les    esp,FWORD PTR [esi-0x3698a242]
  42618c:	loope  0x42618d
  42618e:	cmp    al,0x51
  426190:	xchg   edx,eax
  426191:	push   ebp
  426192:	inc    ecx
  426193:	dec    edx
  426194:	xchg   esi,eax
  426195:	pop    ebp
  426196:	cwde   
  426197:	repz inc ecx
  426199:	in     eax,dx
  42619a:	dec    eax
  42619b:	mov    esi,0x773c49d5
  4261a0:	repnz mov edi,DWORD PTR [ebx+0x5]
  4261a4:	adc    al,0x95
  4261a6:	adc    BYTE PTR [edi+eax*4-0x5576db7e],al
  4261ad:	imul   eax,DWORD PTR [esi+edi*4-0x4a],0x4f74f6ae
  4261b5:	stc    
  4261b6:	cmp    eax,0x9eed0ee6
  4261bb:	repz pop esi
  4261bd:	mov    esp,0x2b74f8
	...
  426232:	add    BYTE PTR [eax],al
  426234:	lods   al,BYTE PTR ds:[esi]
  426235:	les    esi,FWORD PTR [ebx-0x32]
  426238:	jnp    0x426239
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x71
  426241:	inc    ebx
  426242:	out    dx,al
  426243:	stos   DWORD PTR es:[edi],eax
  426244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426245:	xchg   ebp,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	cmc    
  426249:	add    BYTE PTR [eax],al
  42624b:	add    BYTE PTR [ecx+ecx*1],ah
  42624e:	and    dh,BYTE PTR [ebp-0x4531533b]
  426254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426255:	lods   al,BYTE PTR ds:[esi]
  426256:	neg    DWORD PTR [esi]
  426258:	sbb    eax,0x5b4f5ed7
  42625d:	xchg   esi,eax
  42625e:	fs test al,0xbc
  426261:	mov    BYTE PTR [edx+0x1a],ch
  426264:	jmp    0x42625b
  426266:	cmp    al,0xce
  426268:	and    DWORD PTR [edi+0x1e],0x10
  42626c:	jge    0x42621f
  42626e:	cld    
  42626f:	push   es
  426270:	shl    BYTE PTR [edx],cl
  426272:	sub    ebp,ecx
  426274:	push   ebp
  426275:	and    eax,0xc33b4b2b
  42627a:	repnz fwait
  42627c:	jno    0x426244
  42627e:	out    0xe1,eax
  426280:	lods   al,BYTE PTR ds:[esi]
  426281:	in     al,dx
  426282:	mov    edx,0xe136acbd
  426287:	inc    edi
  426288:	(bad)  
  42628a:	jae    0x4262e5
  42628c:	aam    0xab
  42628e:	inc    ecx
  42628f:	out    dx,eax
  426290:	adc    ch,BYTE PTR [ebp-0xba2b6ef]
  426296:	cld    
  426297:	and    BYTE PTR [eax],bl
  426299:	scas   al,BYTE PTR es:[edi]
  42629a:	adc    al,0xd0
  42629c:	rsm    
  42629e:	test   BYTE PTR [ebp-0x2e],dl
  4262a1:	fsub   QWORD PTR [eax+0x7be94241]
  4262a7:	push   esp
  4262a8:	push   0x6c375129
  4262ad:	loop   0x426323
  4262af:	(bad)  
  4262b0:	loope  0x42623e
  4262b2:	ja     0x42630e
  4262b4:	jecxz  0x42623d
  4262b6:	push   es
  4262b7:	push   ds
  4262b8:	hlt    
  4262b9:	push   edx
  4262ba:	sub    al,0x88
  4262bc:	push   esi
  4262bd:	jo     0x4262ff
  4262bf:	inc    edx
  4262c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262c1:	and    eax,0x2d4f8f61
  4262c6:	jmp    0xf47c:0x76c471ed
  4262cd:	push   esp
  4262ce:	add    BYTE PTR cs:[eax+0x3f],cl
  4262d2:	xchg   edx,eax
  4262d3:	push   esi
  4262d4:	(bad)  [ecx]
  4262d6:	and    eax,0x19fec42d
  4262db:	xor    eax,0xa7835545
  4262e0:	arpl   WORD PTR [ecx+0x80d500b],dx
  4262e6:	or     eax,0x3c2d7650
  4262eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ec:	mov    ds:0x8248ba61,al
  4262f1:	xchg   ecx,eax
  4262f2:	fsubr  DWORD PTR [eax+0x61ef96a8]
  4262f8:	daa    
  4262f9:	mov    esp,0x431a6bd8
  4262fe:	fwait
  4262ff:	je     0x4262d0
  426301:	int    0x46
  426303:	pop    ss
  426304:	ins    DWORD PTR es:[edi],dx
  426305:	jp     0x426350
  426307:	xchg   BYTE PTR [ebx+ebp*2-0x9],bl
  42630b:	fistp  WORD PTR [ebp-0x223d97]
  426311:	cs leave 
  426313:	sahf   
  426314:	or     edx,0xffffffe1
  426317:	mov    al,ds:0x47d884e7
  42631c:	scas   al,BYTE PTR es:[edi]
  42631d:	jo     0x4262e2
  42631f:	cli    
  426320:	sub    DWORD PTR [edi+0x5b],eax
  426323:	mov    esi,0xcbb9f2f9
  426328:	jns    0x42632a
  42632a:	xchg   ecx,esi
  42632c:	lahf   
  42632d:	mov    edx,esp
  42632f:	ja     0x426359
  426331:	int    0x7d
  426333:	outs   dx,BYTE PTR ds:[esi]
  426334:	mov    edx,ecx
  426336:	and    ebp,DWORD PTR [esi-0x54489796]
  42633c:	dec    esi
  42633d:	aam    0xa9
  42633f:	rcl    DWORD PTR [edx],0x0
	...
  4263b2:	add    BYTE PTR [eax],al
  4263b4:	inc    edx
  4263b5:	or     esp,eax
  4263b7:	test   eax,0xeb6fedcf
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	loop   0x4263a3
  4263c2:	imul   eax,edx,0x19699
  4263c8:	cmc    
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    BYTE PTR [ebx-0x239bca47],dl
  4263d1:	pop    edx
  4263d2:	pop    ecx
  4263d3:	pop    edx
  4263d4:	retf   
  4263d5:	inc    ebx
  4263d6:	jae    0x42641f
  4263d8:	jmp    0x1196:0x63083f58
  4263df:	retf   0xab40
  4263e2:	retf   0x1643
  4263e5:	and    al,0x85
  4263e7:	add    DWORD PTR [ecx+edi*4],0xffffffa3
  4263eb:	xchg   ecx,eax
  4263ec:	shl    BYTE PTR [edi],0x17
  4263ef:	jne    0x4263de
  4263f1:	push   edi
  4263f2:	pop    ebp
  4263f3:	loope  0x42642c
  4263f5:	mov    ebp,0x9879d79c
  4263fa:	(bad)  
  4263fb:	ror    BYTE PTR [ebx-0xf],1
  4263fe:	pop    DWORD PTR [edx]
  426400:	int    0x62
  426402:	push   0x45
  426404:	not    DWORD PTR [eax-0x297c1780]
  42640a:	loop   0x426430
  42640c:	xchg   ebp,eax
  42640d:	adc    DWORD PTR ds:0xc1c87d55,0xffffffb4
  426414:	dec    ebx
  426415:	inc    eax
  426416:	stos   BYTE PTR es:[edi],al
  426417:	les    edi,FWORD PTR [edi+eax*1]
  42641a:	ss jno 0x42645a
  42641d:	icebp  
  42641e:	push   edx
  42641f:	mov    DWORD PTR [eax],edi
  426421:	push   ebx
  426422:	lea    ebx,[ebp+0x5c]
  426425:	not    BYTE PTR [ebp-0x68]
  426428:	ja     0x426451
  42642a:	push   cs
  42642b:	cmp    esp,DWORD PTR ds:[ecx+0xa8bc37b]
  426432:	pushf  
  426433:	or     BYTE PTR [esi-0x6a45f0b6],bh
  426439:	jb     0x426428
  42643b:	leave  
  42643c:	test   DWORD PTR [edi+0xb6c67d2],ecx
  426442:	and    bh,BYTE PTR [ecx+0x71]
  426445:	fs ins DWORD PTR es:[edi],dx
  426447:	mov    edi,0x208b0d49
  42644c:	add    ah,BYTE PTR [edi+0x51e90bd8]
  426452:	dec    ecx
  426453:	mov    gs,ecx
  426455:	lahf   
  426456:	fidiv  WORD PTR [edi]
  426459:	push   esi
  42645a:	ror    DWORD PTR [edx-0x3d568170],1
  426460:	jne    0x42641e
  426462:	cld    
  426463:	mov    bl,0x5b
  426465:	cmp    eax,0xf57f24e5
  42646a:	(bad)
  42646d:	mov    bh,0xf6
  42646f:	ret    
  426470:	mov    edi,0xf0eb3e4c
  426475:	adc    DWORD PTR [ebp+0x3b],0x7
  426479:	xlat   BYTE PTR ds:[ebx]
  42647a:	sub    eax,0xc7d6fd4a
  42647f:	lahf   
  426480:	(bad)  
  426481:	cs ret 
  426483:	push   ecx
  426484:	cmc    
  426485:	test   al,0x4c
  426487:	into   
  426488:	push   edx
  426489:	popa   
  42648a:	rol    BYTE PTR [edi],0x3d
  42648d:	popf   
  42648e:	adc    DWORD PTR [edx],ecx
  426490:	jae    0x4264c2
  426492:	leave  
  426493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426494:	xor    esi,ebx
  426496:	and    al,bl
  426498:	fisubr DWORD PTR [esp+edi*2-0x4e07e416]
  42649f:	pop    ss
  4264a0:	push   ebx
  4264a1:	out    0x88,eax
  4264a3:	jmp    0x4feb:0xe97e257b
  4264aa:	xchg   esp,eax
  4264ab:	aas    
  4264ac:	aas    
  4264ad:	(bad)  [ebx-0x6d]
  4264b0:	test   BYTE PTR [ecx],cl
  4264b2:	pop    esp
  4264b3:	not    ecx
  4264b5:	jg     0x426489
  4264b7:	mov    edi,0xba39254
  4264bc:	xchg   ebx,eax
  4264bd:	mov    ds:0xf4939,eax
	...
  426532:	add    BYTE PTR [eax],al
  426534:	(bad)  
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	cvttps2pi mm0,xmm1
  426543:	dec    ecx
  426544:	mov    ss,WORD PTR [edi+0xf50001]
  42654a:	add    BYTE PTR [eax],al
  42654c:	jo     0x42658d
  42654e:	das    
  42654f:	jl     0x42652f
  426551:	fs div al
  426554:	sbb    bh,BYTE PTR [ecx+0x401ab508]
  42655a:	in     eax,dx
  42655b:	mov    edi,0xed7d4ec
  426560:	fbstp  TBYTE PTR [ebx-0x7f148ba6]
  426566:	dec    ebp
  426567:	xor    bh,BYTE PTR [eax]
  426569:	sub    al,0x9b
  42656b:	or     eax,0x7e78e4d
  426570:	setbe  BYTE PTR [ecx+0x7944eba3]
  426577:	cmp    ah,cl
  426579:	outs   dx,DWORD PTR ds:[esi]
  42657a:	xchg   edi,eax
  42657b:	inc    eax
  42657c:	push   eax
  42657d:	daa    
  42657e:	and    BYTE PTR [edi],cl
  426580:	lock jge 0x4265af
  426583:	outs   dx,BYTE PTR ds:[esi]
  426584:	repnz fisub DWORD PTR [ebx-0x74]
  426588:	push   ebp
  426589:	mov    ecx,0x6f26f75e
  42658e:	sub    bl,dh
  426590:	or     dl,ch
  426592:	mov    ecx,0xc1008046
  426597:	jp     0x4265dd
  426599:	mov    ecx,gs
  42659b:	(bad)  
  42659c:	push   eax
  42659d:	inc    esp
  42659e:	fild   DWORD PTR [esp+eax*1]
  4265a1:	ins    BYTE PTR es:[edi],dx
  4265a2:	mov    ebx,cs
  4265a4:	dec    edx
  4265a5:	arpl   cx,dx
  4265a7:	mov    es,WORD PTR [esi]
  4265a9:	and    al,0x53
  4265ab:	and    al,0x69
  4265ad:	pop    edi
  4265ae:	loope  0x42659b
  4265b0:	aam    0x8b
  4265b2:	frstor [eax]
  4265b4:	(bad)
  4265b8:	or     al,0xe
  4265ba:	shr    dl,1
  4265bc:	cmp    al,0xa3
  4265be:	imul   eax
  4265c0:	inc    eax
  4265c1:	mov    dh,0xf5
  4265c3:	push   edi
  4265c4:	xlat   BYTE PTR ds:[ebx]
  4265c5:	mov    ds:0xaa6595,eax
  4265ca:	pop    es
  4265cb:	xchg   ebp,eax
  4265cc:	pop    edi
  4265cd:	retf   0xe0fc
  4265d0:	or     bl,dh
  4265d2:	js     0x4265ec
  4265d4:	or     eax,0x1577f9d0
  4265d9:	push   esp
  4265da:	mov    esp,?
  4265dc:	leave  
  4265dd:	icebp  
  4265de:	pop    ecx
  4265df:	sub    DWORD PTR [eax-0x72],esp
  4265e2:	test   BYTE PTR gs:[edx-0x5cb58469],cl
  4265e9:	mov    eax,0x8922ee3b
  4265ee:	mov    dh,0x7
  4265f0:	xchg   edi,eax
  4265f1:	adc    eax,ecx
  4265f3:	push   eax
  4265f4:	test   eax,0xdec65cda
  4265f9:	cmc    
  4265fa:	popf   
  4265fb:	adc    eax,0xa1f8bfed
  426600:	cs pushf 
  426602:	(bad)  
  426603:	pop    ss
  426604:	rcl    ebx,cl
  426606:	or     al,0xf
  426608:	mov    ds:0x6fee66ed,al
  42660d:	cmp    ecx,DWORD PTR [esi]
  42660f:	xchg   ebp,eax
  426610:	mov    al,ds:0x230aa191
  426615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426616:	mov    dl,BYTE PTR [ebx-0x11]
  426619:	test   eax,0xbbe22de9
  42661e:	pushf  
  42661f:	ins    DWORD PTR es:[edi],dx
  426620:	and    ah,BYTE PTR [edx]
  426622:	mov    esi,0x85c35175
  426627:	dec    eax
  426628:	arpl   WORD PTR [ecx],di
  42662a:	sahf   
  42662b:	in     al,0x6
  42662d:	jge    0x426612
  42662f:	mov    ah,0xa
  426631:	std    
  426632:	pusha  
  426633:	retf   
  426634:	push   ecx
  426635:	xchg   ebp,eax
  426636:	test   BYTE PTR [ebp-0x6f],0xe2
  42663a:	sub    ah,ah
  42663c:	(bad)  
  42663d:	pop    ss
  42663e:	cmp    eax,0x3083
	...
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	cmp    ebx,DWORD PTR [edi]
  4266c2:	ret    
  4266c3:	dec    eax
  4266c4:	sbb    DWORD PTR [eax+0xf50001],0x0
  4266cb:	add    BYTE PTR [ebp+0x6556f890],cl
  4266d1:	enter  0x9d80,0xed
  4266d5:	retf   
  4266d6:	push   ecx
  4266d7:	inc    edx
  4266d8:	cld    
  4266d9:	cmc    
  4266da:	jecxz  0x426724
  4266dc:	mov    BYTE PTR [eax],al
  4266de:	and    al,0xaf
  4266e0:	mov    dh,0x5a
  4266e2:	lods   al,BYTE PTR ds:[esi]
  4266e3:	mov    al,ds:0x8d568482
  4266e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266e9:	sti    
  4266ea:	mov    ds:0xe2761596,eax
  4266ef:	outs   dx,BYTE PTR ds:[esi]
  4266f0:	jl     0x426744
  4266f2:	sbb    DWORD PTR [ebx],0xb095a4e1
  4266f8:	and    al,0xa7
  4266fa:	repz out dx,al
  4266fc:	sbb    al,BYTE PTR [ebx+0x79]
  4266ff:	push   ebx
  426700:	push   ecx
  426701:	cmp    eax,0xffffffac
  426704:	scas   eax,DWORD PTR es:[edi]
  426705:	test   BYTE PTR ss:[eax],0x8c
  426709:	cmp    DWORD PTR [ebx-0x2cf7988b],edi
  42670f:	shr    DWORD PTR [ebx+0x65],1
  426712:	rcl    BYTE PTR [esi-0x2780d1ac],cl
  426718:	add    edi,DWORD PTR [edx+0x6ea9b13e]
  42671e:	test   edx,ebp
  426720:	scas   eax,DWORD PTR es:[edi]
  426721:	pop    es
  426722:	je     0x426728
  426724:	push   0xfffffffa
  426726:	outs   dx,DWORD PTR ds:[esi]
  426728:	ins    DWORD PTR es:[edi],dx
  426729:	adc    esi,ebp
  42672b:	mov    WORD PTR [ebx+ebx*1],gs
  42672e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42672f:	aam    0x9c
  426731:	inc    edx
  426732:	and    ecx,esi
  426734:	sub    al,0x16
  426736:	or     ebx,eax
  426738:	rcr    BYTE PTR [ebx],0xe
  42673b:	push   edi
  42673c:	and    eax,0x3321a3c8
  426741:	cmp    DWORD PTR [eax+0x5],edx
  426744:	sar    dl,1
  426746:	fwait
  426747:	adc    DWORD PTR [edx+0x6699f00],0xffffff88
  42674e:	icebp  
  42674f:	cwde   
  426750:	fwait
  426751:	mov    dh,0x16
  426753:	popa   
  426754:	or     ebx,DWORD PTR [ecx+eiz*4-0x46266291]
  42675b:	mov    WORD PTR [edi-0x5bbd6b12],?
  426761:	xor    BYTE PTR [esi-0x149a2af1],ch
  426767:	aaa    
  426768:	ds xchg ebx,eax
  42676a:	fcomp  DWORD PTR [ecx+eiz*4]
  42676d:	cmc    
  42676e:	xchg   edx,eax
  42676f:	aam    0xa3
  426771:	xor    DWORD PTR [esi+edi*1-0x4ccf5551],edx
  426778:	rol    BYTE PTR [ebx-0x31ff415c],cl
  42677e:	sbb    eax,0xe4cb05da
  426783:	repnz adc ah,cl
  426786:	ja     0x4267fa
  426788:	adc    al,BYTE PTR [ecx]
  42678a:	jne    0x4267ff
  42678c:	popf   
  42678d:	add    eax,0xfc44ba5c
  426792:	inc    esi
  426793:	cmp    DWORD PTR [esi-0x5d6bacd],ebx
  426799:	cld    
  42679a:	dec    ecx
  42679b:	lods   al,BYTE PTR ds:[esi]
  42679c:	retf   
  42679d:	push   esi
  42679e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42679f:	sbb    BYTE PTR ds:0x65f8f009,al
  4267a5:	dec    eax
  4267a6:	rcr    dh,0xc5
  4267a9:	push   cs
  4267aa:	rep lods al,BYTE PTR ds:[esi]
  4267ac:	and    DWORD PTR [edi+eax*1],ebx
  4267af:	test   eax,0x52fab45a
  4267b4:	pop    ss
  4267b5:	push   edi
  4267b6:	mov    esp,0x534b7ea4
  4267bb:	jmp    0x4267eb
  4267bd:	add    eax,0xd41371
	...
  426832:	add    BYTE PTR [eax],al
  426834:	pop    esp
  426835:	push   edx
  426836:	nop
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0xcf9c134],cl
  426843:	sar    BYTE PTR [eax-0x67],cl
  426846:	add    DWORD PTR [eax],eax
  426848:	cmc    
  426849:	add    BYTE PTR [eax],al
  42684b:	add    BYTE PTR [esi],cl
  42684d:	sahf   
  42684e:	and    eax,0xc9dc663f
  426853:	sbb    edi,DWORD PTR [ebx+0x8fbfe1c]
  426859:	retf   0xce8e
  42685c:	out    dx,al
  42685d:	sti    
  42685e:	adc    BYTE PTR [ebx-0x11],0x46
  426862:	imul   ebp,ebp,0x15
  426865:	inc    ecx
  426866:	jge    0x4268cd
  426868:	sti    
  426869:	mov    bh,0xc8
  42686b:	or     bh,0x64
  42686e:	dec    edx
  42686f:	retf   0x1c5d
  426872:	(bad)  [ebx]
  426874:	in     al,dx
  426875:	test   BYTE PTR [eax-0x27],0xdb
  426879:	inc    edi
  42687a:	fdiv   DWORD PTR [esi+eiz*1-0x5e0781a6]
  426881:	sbb    DWORD PTR [ebx-0xba0611f],esi
  426887:	bound  esi,QWORD PTR [ecx+0x34]
  42688a:	das    
  42688b:	cli    
  42688c:	cmp    BYTE PTR [ebx],0xac
  42688f:	pushf  
  426890:	cwde   
  426891:	pop    eax
  426892:	imul   esi,DWORD PTR [ecx],0xffffffdc
  426895:	jmp    0xe7c9:0xb622ee45
  42689c:	or     DWORD PTR [esi-0x1fdaea85],ebx
  4268a2:	push   eax
  4268a3:	mov    esi,0xc6a77055
  4268a8:	mov    ebp,0xc94c910c
  4268ad:	sbb    edi,edx
  4268af:	xchg   esi,eax
  4268b0:	push   edi
  4268b1:	dec    esi
  4268b2:	jne    0x4268ba
  4268b4:	mov    bh,bl
  4268b6:	xor    cl,BYTE PTR [ecx-0x48]
  4268b9:	mov    dl,0x2f
  4268bc:	in     eax,0x34
  4268be:	outs   dx,BYTE PTR ds:[esi]
  4268bf:	(bad)  
  4268c0:	sahf   
  4268c1:	dec    ebx
  4268c2:	jp     0x426860
  4268c4:	xor    DWORD PTR ds:0x7a63960,ecx
  4268ca:	call   0xbd1f:0x347b41ff
  4268d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268d2:	out    dx,eax
  4268d3:	pop    ecx
  4268d4:	dec    esi
  4268d5:	jmp    0xcf180167
  4268da:	pop    eax
  4268db:	ffree  st(3)
  4268dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268de:	fs rol BYTE PTR gs:[eax+0x69],1
  4268e3:	pop    esi
  4268e4:	leave  
  4268e5:	mov    ebx,ecx
  4268e7:	call   0x9e258996
  4268ec:	ja     0x42688c
  4268ee:	fstp   DWORD PTR [ebx-0x33d537df]
  4268f4:	jo     0x42689b
  4268f6:	or     ebx,DWORD PTR [edi+0x31ba1ff0]
  4268fc:	jg     0x42692b
  4268fe:	and    al,0x5d
  426900:	das    
  426901:	js     0x42694d
  426903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426904:	mov    fs,WORD PTR [eax+0x27b59e96]
  42690a:	jnp    0x4268ad
  42690c:	ss inc ecx
  42690e:	push   cs
  42690f:	repz loope 0x42692e
  426912:	sub    ebp,DWORD PTR [eax-0x2901e37e]
  426918:	(bad)  
  426919:	and    al,0x18
  42691b:	jge    0x4268fe
  42691d:	jl     0x4268c1
  42691f:	popf   
  426920:	aas    
  426921:	cdq    
  426922:	js     0x4269a1
  426924:	xor    esi,DWORD PTR [ebx+0x14]
  426927:	add    ch,BYTE PTR [eax]
  426929:	add    esp,DWORD PTR [ebx+0x14]
  42692c:	pop    es
  42692d:	fcmovbe st,st(6)
  42692f:	lods   al,BYTE PTR ds:[esi]
  426930:	jne    0x426973
  426932:	stos   DWORD PTR es:[edi],eax
  426933:	cmc    
  426934:	or     eax,0xc02b6ffb
  426939:	sti    
  42693a:	call   0xd7901d48
  42693f:	xchg   ebp,eax
  426940:	xor    DWORD PTR [eax],eax
	...
  4269b2:	add    BYTE PTR [eax],al
  4269b4:	shl    DWORD PTR [ebx+0x4],0x67
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	xchg   DWORD PTR [edx],ebp
  4269c2:	jae    0x426a13
  4269c4:	ins    DWORD PTR es:[edi],dx
  4269c5:	call   0x0:0xf50001
  4269cc:	adc    edx,ecx
  4269ce:	sets   BYTE PTR [edi+0x6f1d7aa0]
  4269d5:	sti    
  4269d6:	ret    0x499f
  4269d9:	scas   al,BYTE PTR es:[edi]
  4269da:	mov    ds:0xbbd4a604,al
  4269df:	push   ebx
  4269e0:	fist   DWORD PTR [edi+0x1f]
  4269e3:	xor    ecx,DWORD PTR [eax]
  4269e5:	cmovnp esp,eax
  4269e8:	dec    eax
  4269e9:	add    eax,0xa7639ae6
  4269ee:	cmp    al,BYTE PTR [ebx+eax*8+0x4b7b1c49]
  4269f5:	leave  
  4269f6:	pop    eax
  4269f7:	rcr    DWORD PTR [eax+eax*4-0x5f],cl
  4269fb:	mov    WORD PTR [ecx-0x24185302],?
  426a01:	inc    edi
  426a02:	(bad)  
  426a03:	aam    0x50
  426a05:	mov    edx,0xbbd7f11d
  426a0a:	mov    dl,0x3b
  426a0c:	mov    ds:0x8888e83c,al
  426a11:	pop    eax
  426a12:	mov    bh,0x24
  426a14:	fwait
  426a15:	je     0x426a03
  426a17:	int    0xe0
  426a19:	loope  0x4269b4
  426a1b:	(bad)  
  426a1c:	aaa    
  426a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a1f:	or     eax,0xf028b5d8
  426a24:	neg    edi
  426a26:	stos   DWORD PTR es:[edi],eax
  426a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a28:	mov    esp,0x5b761981
  426a2d:	enter  0x280c,0x21
  426a31:	dec    esp
  426a32:	cli    
  426a33:	adc    al,0x91
  426a35:	cdq    
  426a36:	or     ecx,DWORD PTR [ecx+0x4c669b18]
  426a3c:	jb     0x4269e9
  426a3e:	and    al,0xea
  426a40:	cmp    al,BYTE PTR [ecx-0xb]
  426a43:	jae    0x426a05
  426a45:	arpl   ax,si
  426a47:	dec    ebp
  426a48:	xor    eax,0xf7202f5d
  426a4d:	fs xchg esp,eax
  426a4f:	pop    esp
  426a50:	mov    ds:0xa5df3dcd,al
  426a55:	data16 cs addr16 aaa 
  426a59:	out    dx,eax
  426a5a:	mov    esp,0xc656197c
  426a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a60:	sub    dh,BYTE PTR [ebx-0x7bbb5928]
  426a66:	cmp    bl,dl
  426a68:	pop    ecx
  426a69:	loop   0x426a06
  426a6b:	das    
  426a6c:	ss xchg esi,eax
  426a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a6f:	xchg   edx,eax
  426a70:	xor    DWORD PTR [esi-0x5d],ebx
  426a73:	add    DWORD PTR [esi],esp
  426a75:	dec    ebx
  426a76:	hlt    
  426a77:	jg     0x426a2d
  426a79:	push   edx
  426a7a:	jnp    0x426a76
  426a7c:	adc    DWORD PTR [esi],0x1d
  426a7f:	lods   eax,DWORD PTR ds:[esi]
  426a80:	mov    WORD PTR [edi],ds
  426a82:	jecxz  0x426a0e
  426a84:	add    eax,0xb7bef87f
  426a89:	jmp    0x4992a6c5
  426a8e:	dec    esi
  426a8f:	jnp    0x426aed
  426a91:	fld    TBYTE PTR [esi]
  426a93:	jge    0x426a29
  426a95:	test   eax,0x58d171b5
  426a9a:	outs   dx,BYTE PTR ds:[esi]
  426a9b:	imul   edx,DWORD PTR ds:0x1a6260c0,0x9d762c52
  426aa5:	sbb    esp,DWORD PTR [ecx+ebx*2]
  426aa8:	leave  
  426aa9:	out    0x6b,al
  426aab:	repnz mov esp,0x4e3a08c3
  426ab1:	hlt    
  426ab2:	scas   al,BYTE PTR es:[edi]
  426ab3:	xchg   ch,bl
  426ab5:	xchg   ecx,eax
  426ab6:	aad    0x77
  426ab8:	jmp    0x426b0c
  426aba:	lock inc edx
  426abc:	ficom  WORD PTR [esi]
  426abe:	loope  0x426ae1
  426ac0:	cwde   
	...
  426b31:	add    BYTE PTR [eax],al
  426b33:	add    ah,al
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	ja     0x426baa
  426b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b43:	ret    0x9b62
  426b46:	add    DWORD PTR [eax],eax
  426b48:	cmc    
  426b49:	add    BYTE PTR [eax],al
  426b4b:	add    al,al
  426b4d:	imul   esi,DWORD PTR [ebx+edx*2+0x35],0xffffffee
  426b52:	xchg   ecx,eax
  426b53:	xor    DWORD PTR [esi-0xa],esi
  426b56:	lock xchg esp,eax
  426b58:	in     al,0x7d
  426b5a:	gs loopne 0x426b94
  426b5d:	mov    WORD PTR [ecx-0x6e563c3d],fs
  426b63:	pop    ds
  426b64:	mov    eax,ds:0x8bc10974
  426b69:	test   al,0x33
  426b6b:	or     al,0xb8
  426b6d:	lock jnp 0x426b34
  426b70:	sub    cl,ch
  426b72:	xor    BYTE PTR [ebp+0x37fa71],al
  426b78:	or     BYTE PTR [ebp+0x7d],al
  426b7b:	cmp    al,0x7
  426b7d:	leave  
  426b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b7f:	mov    ah,BYTE PTR [edi+0x5]
  426b82:	daa    
  426b83:	das    
  426b84:	retf   
  426b85:	pop    ds
  426b86:	sti    
  426b87:	mov    ecx,DWORD PTR [esi+0x240d5a88]
  426b8d:	andps  xmm2,xmm6
  426b90:	push   es
  426b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b92:	cmp    BYTE PTR [ebp-0x607c0b6c],ah
  426b98:	shl    BYTE PTR es:[edx+0x1a],1
  426b9c:	repz sbb al,0x6f
  426b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ba0:	dec    edi
  426ba1:	fsubr  st(5),st
  426ba3:	jmp    0x4f9f:0x6179b0cd
  426baa:	dec    eax
  426bab:	and    bl,BYTE PTR [edx+edi*8+0x64eb8e3a]
  426bb2:	push   cs
  426bb3:	xor    ecx,DWORD PTR [ecx-0x6e]
  426bb6:	cs jge 0x426c1d
  426bb9:	ror    ecx,cl
  426bbb:	dec    ebx
  426bbc:	stos   DWORD PTR es:[edi],eax
  426bbd:	pop    esp
  426bbe:	mov    ds:0xd71b398a,eax
  426bc3:	je     0x426bee
  426bc5:	out    dx,al
  426bc6:	fdivr  st,st(4)
  426bc8:	dec    ecx
  426bc9:	std    
  426bca:	jb     0x426ba8
  426bcc:	xchg   BYTE PTR [ebx+0x2f],ch
  426bcf:	inc    edi
  426bd0:	test   eax,0xdc54a61b
  426bd5:	pop    ebx
  426bd6:	sub    DWORD PTR [esi-0x66],ebp
  426bd9:	add    ch,BYTE PTR [eax+edi*1+0x7c]
  426bdd:	mov    cl,0x6d
  426bdf:	fcom   DWORD PTR [edx+ebp*4+0x14e292c6]
  426be6:	(bad)  
  426be7:	call   0x13137dda
  426bec:	(bad)  
  426bed:	dec    eax
  426bee:	daa    
  426bef:	int    0xa1
  426bf1:	in     al,0xe0
  426bf3:	popf   
  426bf4:	ss sbb al,0xea
  426bf7:	shr    BYTE PTR [edi+0x77e0a301],cl
  426bfd:	repnz mov BYTE PTR [edx],bh
  426c00:	or     al,0xbc
  426c02:	or     eax,0x66ee6ebe
  426c07:	out    0xa,al
  426c09:	daa    
  426c0a:	sbb    al,0x4
  426c0c:	jb     0x426c12
  426c0e:	jo     0x426ba6
  426c10:	jo     0x426bfd
  426c12:	jae    0x426be9
  426c14:	lock mov ds:0x2283c18f,al
  426c1a:	push   ds
  426c1b:	or     ebx,DWORD PTR [ecx+0x5b]
  426c1e:	and    al,0xc3
  426c20:	loopne 0x426c2e
  426c22:	xchg   edi,eax
  426c23:	aaa    
  426c24:	sub    dl,BYTE PTR [esi-0x1e826bbc]
  426c2a:	ds enter 0xd4cc,0xaf
  426c2f:	push   0x60
  426c31:	gs sub al,0x1d
  426c34:	push   esi
  426c35:	mov    ch,0xbf
  426c37:	scas   al,BYTE PTR es:[edi]
  426c38:	loope  0x426c2d
  426c3a:	fdivr  QWORD PTR [esi-0x688cbc4a]
  426c40:	mov    DWORD PTR [eax],eax
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	aad    0x2a
  426cc2:	test   al,0x3f
  426cc4:	push   edi
  426cc5:	pushf  
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	cmc    
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    al,dh
  426ccd:	mov    esi,gs
  426ccf:	inc    eax
  426cd0:	sub    al,0x4b
  426cd2:	loop   0x426c6c
  426cd4:	pop    esp
  426cd5:	rol    DWORD PTR [edx+0x73],1
  426cd8:	stos   DWORD PTR es:[edi],eax
  426cd9:	add    edi,DWORD PTR [eax+0x6cdf902]
  426cdf:	(bad)  [edx]
  426ce1:	jmp    0x748f:0x8614a1f8
  426ce8:	popf   
  426ce9:	fmul   st(4),st
  426ceb:	mov    WORD PTR [edx],es
  426ced:	dec    esp
  426cee:	pop    edx
  426cef:	fidiv  DWORD PTR [ebx]
  426cf1:	jle    0x426cc0
  426cf3:	dec    esi
  426cf4:	xchg   ebp,eax
  426cf5:	xchg   edx,eax
  426cf6:	pop    ecx
  426cf7:	sbb    al,0x78
  426cf9:	sub    dh,BYTE PTR [esi+0x2aecff9b]
  426cff:	and    BYTE PTR [ebx-0x45aee780],bl
  426d05:	mov    WORD PTR [ebp+0x44],?
  426d08:	dec    esi
  426d09:	jg     0x426cae
  426d0b:	loop   0x426cc3
  426d0d:	ret    0x7d2
  426d10:	jno    0x426d83
  426d12:	inc    ecx
  426d13:	add    BYTE PTR [esi+edi*4-0x36],bh
  426d17:	je     0x426d74
  426d19:	push   ecx
  426d1a:	test   ah,dl
  426d1c:	xchg   ebx,eax
  426d1d:	or     ah,bh
  426d1f:	mov    esi,0xdf8eb42a
  426d24:	(bad)  
  426d25:	out    0xc4,eax
  426d27:	call   0xa41a18af
  426d2c:	or     BYTE PTR [ebx],dl
  426d2e:	and    edi,DWORD PTR [esi+0x30]
  426d31:	rcl    DWORD PTR [ebx+ebx*1],0xa6
  426d35:	unpckhps xmm5,XMMWORD PTR [esp+ecx*2]
  426d39:	sub    ah,BYTE PTR [edx-0x44]
  426d3c:	stc    
  426d3d:	sub    bl,dl
  426d3f:	mov    ds:0x1210973d,ax
  426d45:	push   esi
  426d46:	fisubr WORD PTR [ebp+0xc0b7cdc]
  426d4c:	out    0x39,eax
  426d4e:	jl     0x426d00
  426d50:	pushf  
  426d51:	sub    al,0x53
  426d53:	fistp  WORD PTR [ebp-0x2a]
  426d56:	add    ecx,DWORD PTR [esi-0x17f97818]
  426d5c:	sbb    DWORD PTR [eax+0x4],ebp
  426d5f:	or     al,0x47
  426d61:	jo     0x426d47
  426d63:	out    dx,eax
  426d64:	(bad)  
  426d65:	push   edi
  426d66:	pop    es
  426d67:	pop    esi
  426d68:	(bad)  
  426d69:	ins    DWORD PTR es:[edi],dx
  426d6a:	xchg   esi,eax
  426d6b:	xor    eax,0x97a3067a
  426d70:	push   edi
  426d71:	ror    BYTE PTR [esi+0x3e],0x37
  426d75:	dec    eax
  426d76:	pop    ebx
  426d77:	ficomp WORD PTR [eax-0x17]
  426d7a:	loope  0x426d43
  426d7c:	std    
  426d7d:	push   esi
  426d7e:	pusha  
  426d7f:	icebp  
  426d80:	add    DWORD PTR [edx-0x4e],0x2446f1c2
  426d87:	pop    esi
  426d88:	(bad)  
  426d89:	out    0x4b,eax
  426d8b:	retf   
  426d8c:	adc    eax,DWORD PTR [ebx+0x6b388214]
  426d92:	dec    edx
  426d93:	mov    edx,0xb67cdd8
  426d98:	or     eax,0xee7b9f9a
  426d9d:	jecxz  0x426d36
  426d9f:	xchg   DWORD PTR [ebp-0x7b1c708f],ebx
  426da5:	and    al,0x2b
  426da7:	std    
  426da8:	in     eax,dx
  426da9:	jno    0x426dd1
  426dab:	js     0x426dca
  426dad:	adc    dh,BYTE PTR [edx-0x5f6fc2e4]
  426db3:	(bad)  
  426db5:	xchg   esp,eax
  426db6:	loopne 0x426d98
  426db8:	sub    DWORD PTR [edi],esp
  426dba:	sub    ebx,esp
  426dbc:	push   0xffffffca
  426dbe:	pop    esi
  426dbf:	push   0xffffffa8
	...
  426e31:	add    BYTE PTR [eax],al
  426e33:	add    dh,al
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	pop    ecx
  426e41:	xchg   ebx,eax
  426e42:	lods   al,BYTE PTR ds:[esi]
  426e43:	cmovl  ebx,DWORD PTR [ebp+0xf50001]
  426e4a:	add    BYTE PTR [eax],al
  426e4c:	dec    edx
  426e4d:	stos   BYTE PTR es:[edi],al
  426e4e:	(bad)  
  426e4f:	push   cs
  426e50:	mov    bl,0x27
  426e52:	inc    esp
  426e53:	ds shl ebp,1
  426e56:	retf   0x6918
  426e59:	pop    eax
  426e5a:	xchg   ebx,esi
  426e5c:	stos   BYTE PTR es:[edi],al
  426e5d:	add    eax,0x23e934d2
  426e62:	inc    esp
  426e63:	lds    ecx,FWORD PTR [ecx-0x6a97f8e6]
  426e69:	(bad)  
  426e6a:	sar    DWORD PTR [ecx+0x7863bb06],cl
  426e70:	and    ch,cl
  426e72:	inc    edi
  426e73:	popf   
  426e74:	inc    ebp
  426e75:	mov    cl,ah
  426e77:	in     eax,0x2
  426e79:	inc    esp
  426e7a:	cmp    al,0xd9
  426e7c:	push   ebx
  426e7d:	cmc    
  426e7e:	jno    0x426e5f
  426e80:	dec    eax
  426e81:	inc    esi
  426e82:	sub    DWORD PTR [ebp+eiz*1+0x6],ebx
  426e86:	sbb    BYTE PTR [esi+0x71],ah
  426e89:	cmp    eax,0x4e5856b7
  426e8e:	adc    ebp,ecx
  426e90:	rol    eax,0x30
  426e93:	xchg   BYTE PTR [eax+0x7c1c57a2],al
  426e99:	jnp    0x426ef5
  426e9b:	fstp   QWORD PTR [edi]
  426e9d:	es sub ecx,ecx
  426ea0:	loopne 0x426f17
  426ea2:	xchg   DWORD PTR [edi+ecx*1-0x60],ebp
  426ea6:	and    DWORD PTR [ebp+0x3e2ba6c0],edi
  426eac:	sti    
  426ead:	js     0x426e3d
  426eaf:	pushf  
  426eb0:	iret   
  426eb1:	jmp    0x1917:0x68b66bef
  426eb8:	not    eax
  426eba:	lea    ecx,[edi]
  426ebc:	add    ecx,DWORD PTR [ebp-0x22]
  426ebf:	lock mov BYTE PTR [ecx-0x4b],cl
  426ec3:	call   0xcb5e:0x123cede2
  426eca:	or     DWORD PTR [ecx+0x10a29d1f],esp
  426ed0:	pop    esp
  426ed1:	push   edi
  426ed2:	or     al,0xf5
  426ed4:	pop    ebx
  426ed5:	cdq    
  426ed6:	nop
  426ed7:	mov    eax,ds:0x9906a730
  426edc:	dec    esp
  426edd:	mov    al,ds:0x62f55507
  426ee2:	mul    DWORD PTR [edi+eax*8]
  426ee5:	retf   0x327c
  426ee8:	push   eax
  426ee9:	inc    edx
  426eea:	push   ebp
  426eeb:	(bad)  
  426eec:	xchg   ebp,eax
  426eed:	(bad)  
  426eef:	popa   
  426ef0:	in     eax,0xbe
  426ef2:	dec    eax
  426ef3:	out    0x77,eax
  426ef5:	mov    eax,0xe70d55df
  426efa:	sub    eax,0xec1fb60b
  426eff:	aas    
  426f00:	addr16 inc edx
  426f02:	in     al,0xc
  426f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f05:	push   esi
  426f06:	es leave 
  426f08:	(bad)  
  426f09:	jmp    0x5bf25c63
  426f0e:	dec    eax
  426f0f:	mov    eax,ds:0x48bd75ef
  426f14:	xor    ch,BYTE PTR [ecx]
  426f16:	(bad)  
  426f17:	jmp    0x9b17ee41
  426f1c:	outs   dx,DWORD PTR ds:[esi]
  426f1d:	les    esi,FWORD PTR [esi]
  426f1f:	in     eax,dx
  426f20:	retf   
  426f21:	sub    ch,bl
  426f23:	loope  0x426ee5
  426f25:	ins    DWORD PTR es:[edi],dx
  426f26:	loop   0x426f1e
  426f28:	popf   
  426f29:	ins    DWORD PTR es:[edi],dx
  426f2a:	push   DWORD PTR [edi]
  426f2c:	mov    dl,0x63
  426f2e:	jle    0x426f74
  426f30:	into   
  426f31:	aam    0x8a
  426f33:	lods   eax,DWORD PTR ds:[esi]
  426f34:	test   DWORD PTR [ecx+edx*2],ebx
  426f37:	(bad)  
  426f39:	jne    0x426ebd
  426f3b:	inc    ebp
  426f3c:	add    DWORD PTR [edi],ebp
  426f3e:	rep outs dx,BYTE PTR ds:[esi]
  426f40:	test   DWORD PTR [eax],eax
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	xor    DWORD PTR [edi],0x9e4148a3
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [esp+ebx*2+0x8e0c61f],bl
  426fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fd3:	cmp    edx,DWORD PTR [edi+0xc]
  426fd6:	push   edi
  426fd7:	mov    al,BYTE PTR [ebp-0x4d0645b5]
  426fdd:	aad    0x7d
  426fdf:	mov    ds:0x777a6c68,eax
  426fe4:	inc    ebp
  426fe5:	into   
  426fe6:	sti    
  426fe7:	push   ss
  426fe8:	outs   dx,DWORD PTR ds:[esi]
  426fe9:	cmp    ebp,DWORD PTR [ebx-0x2000d8e6]
  426fef:	je     0x426fcd
  426ff1:	aad    0xcf
  426ff3:	xor    eax,0x1c328605
  426ff8:	int    0x86
  426ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ffb:	sbb    al,0xbc
  426ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ffe:	inc    ebp
  426fff:	ret    
  427000:	fmul   QWORD PTR [ecx-0x10]
  427003:	dec    ecx
  427004:	lahf   
  427005:	ja     0x427037
  427007:	inc    edi
  427008:	or     cl,BYTE PTR [eax]
  42700a:	and    ecx,DWORD PTR [ebp-0x1969a1ac]
  427010:	xchg   ebx,eax
  427011:	xor    DWORD PTR [edx],esi
  427013:	cli    
  427014:	test   DWORD PTR ds:0xa226385e,ebp
  42701a:	push   0x60
  42701c:	or     cl,BYTE PTR [edi]
  42701e:	jecxz  0x42700a
  427020:	outs   dx,DWORD PTR ds:[esi]
  427021:	pop    esi
  427022:	mov    ds:0x571a61fc,al
  427027:	pushf  
  427028:	jmp    0x451f:0x1491f8f
  42702f:	xchg   edi,eax
  427030:	mov    bl,0xd3
  427032:	jbe    0x427067
  427034:	call   0x1715:0x59dd346
  42703b:	xor    bl,ch
  42703d:	add    ebx,esp
  42703f:	jns    0x426ffc
  427041:	push   edx
  427042:	iret   
  427043:	mov    ah,0x9f
  427045:	mov    ebx,0xccb235d3
  42704a:	mov    bl,BYTE PTR [eax]
  42704c:	loopne 0x4270ba
  42704e:	mov    bh,0xfb
  427050:	out    0x9e,al
  427052:	(bad)  
  427053:	cli    
  427054:	out    dx,eax
  427055:	cli    
  427056:	mov    ss,ebp
  427058:	jmp    0x42707e
  42705a:	pushf  
  42705b:	inc    esp
  42705c:	jmp    0xf59d:0x10bca461
  427063:	lods   eax,DWORD PTR ds:[esi]
  427064:	rcr    DWORD PTR [ecx],1
  427066:	popf   
  427067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427068:	daa    
  427069:	mov    WORD PTR [ebx],es
  42706b:	out    0x9,al
  42706d:	mov    bl,0xc5
  42706f:	ror    DWORD PTR [edi],0x61
  427072:	jbe    0x42706b
  427074:	jbe    0x427005
  427076:	lahf   
  427077:	jmp    0x799d0930
  42707c:	ret    0x8f1f
  42707f:	mov    ch,0x3b
  427081:	and    eax,0x38
  427084:	xor    eax,0x956dafd3
  427089:	ret    
  42708a:	mov    DWORD PTR [ecx],ebp
  42708c:	idiv   BYTE PTR [ebx+0x6e9cddc9]
  427092:	or     dh,BYTE PTR [edx-0x7def73a6]
  427098:	pop    esi
  427099:	loopne 0x4270ea
  42709b:	and    BYTE PTR [esi+0x42],0xc2
  42709f:	pop    edi
  4270a0:	test   BYTE PTR [ebx-0x63079f0e],bh
  4270a6:	les    esp,FWORD PTR [esp+eiz*8+0x2b]
  4270aa:	enter  0x2024,0xc1
  4270ae:	push   ecx
  4270af:	stos   DWORD PTR es:[edi],eax
  4270b0:	shl    BYTE PTR [ebp-0x52],0xc3
  4270b4:	or     DWORD PTR [eax-0x7da9802a],0x35
  4270bb:	pop    ds
  4270bc:	or     dl,0x7c
  4270bf:	imul   eax,DWORD PTR [ebp+0x0],0x0
	...
  427132:	add    BYTE PTR [eax],al
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0xe9
  427141:	into   
  427142:	lods   al,BYTE PTR ds:[esi]
  427143:	test   eax,0x19f36
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    BYTE PTR [ebx],bh
  42714d:	xchg   ebx,eax
  42714e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42714f:	and    al,0xdf
  427151:	sbb    ebx,DWORD PTR [esi]
  427153:	call   0x3eefeb38
  427158:	push   es
  427159:	mov    ds:0xce3d67ef,eax
  42715e:	(bad)  
  42715f:	dec    ecx
  427160:	cli    
  427161:	push   cs
  427162:	ret    
  427163:	rol    eax,0xb2
  427166:	add    DWORD PTR [eax+esi*1],esp
  427169:	popf   
  42716a:	jge    0x427165
  42716c:	scas   al,BYTE PTR es:[edi]
  42716d:	jp     0x427195
  42716f:	mov    dh,BYTE PTR [edx]
  427171:	add    DWORD PTR [eax-0x29],0x77bdab5e
  427178:	rcr    BYTE PTR [ebp-0x5997eff2],1
  42717e:	push   es
  42717f:	pop    edi
  427180:	cmp    eax,0x7ca6e95
  427185:	mov    ebx,0xe8497af1
  42718a:	push   edi
  42718b:	(bad)  [ecx]
  42718d:	push   ebp
  42718e:	fnsave [ebp-0x31]
  427191:	xchg   ebp,eax
  427192:	sub    edi,0x509c03b0
  427198:	xlat   BYTE PTR ds:[ebx]
  427199:	inc    esi
  42719a:	mov    al,ds:0x930b37c6
  42719f:	int    0x35
  4271a1:	adc    al,BYTE PTR [ecx]
  4271a3:	xchg   DWORD PTR [ecx-0x5e6b8838],ebx
  4271a9:	cmp    dl,BYTE PTR [edi]
  4271ab:	scas   eax,DWORD PTR es:[edi]
  4271ac:	aaa    
  4271ad:	or     ah,BYTE PTR [ecx-0x2e]
  4271b0:	shl    DWORD PTR [ecx-0x41],1
  4271b3:	push   ebp
  4271b4:	jp     0x42713a
  4271b6:	mov    dl,0xc8
  4271b8:	and    al,0x92
  4271ba:	cld    
  4271bb:	or     DWORD PTR [esi-0x6e],edx
  4271be:	(bad)  
  4271bf:	scas   eax,DWORD PTR es:[edi]
  4271c0:	popf   
  4271c1:	and    bh,bh
  4271c3:	nop
  4271c4:	aam    0xa8
  4271c6:	cwde   
  4271c7:	jae    0x4271e1
  4271c9:	cwde   
  4271ca:	je     0x4271dc
  4271cc:	mov    esi,0xcf3315e
  4271d1:	and    dh,dl
  4271d3:	cmp    ah,0xaa
  4271d6:	test   eax,0xe72010c8
  4271db:	(bad)  
  4271dc:	lock dec edi
  4271de:	mov    ah,0xaf
  4271e1:	popa   
  4271e2:	dec    eax
  4271e3:	mov    dl,0x9d
  4271e5:	push   cs
  4271e6:	sub    al,0x93
  4271e8:	out    dx,eax
  4271e9:	or     esi,DWORD PTR [edi+0x3a1d6f98]
  4271ef:	test   esp,0xa97e0c3c
  4271f5:	mov    cl,0x61
  4271f7:	cdq    
  4271f8:	cmc    
  4271f9:	lahf   
  4271fa:	jl     0x4271af
  4271fc:	fisttp DWORD PTR [ebx-0x5e]
  4271ff:	jmp    0x427245
  427201:	call   0x9238:0xe7cc6490
  427208:	out    0x59,al
  42720a:	outs   dx,BYTE PTR ds:[esi]
  42720b:	cdq    
  42720c:	std    
  42720d:	icebp  
  42720e:	call   0xcd7dc453
  427213:	lods   al,BYTE PTR ds:[esi]
  427214:	xchg   esi,eax
  427215:	fistp  WORD PTR [edi+0x36b3c1f]
  42721b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42721c:	add    BYTE PTR [ebx+edi*2+0x1faab699],ah
  427223:	sbb    ecx,DWORD PTR [eax-0x28]
  427226:	daa    
  427227:	sbb    eax,0x9fbe6abe
  42722c:	mov    esi,0xec51312e
  427231:	mov    ch,0x55
  427233:	mov    ecx,0xa02f206b
  427238:	jae    0x427260
  42723a:	in     eax,0x71
  42723c:	pop    ebp
  42723d:	idiv   BYTE PTR [eax+0xdb92]
	...
  4272b3:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4272b7:	dec    esi
  4272b8:	std    
  4272b9:	out    dx,al
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0xd269f346
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	sbb    cl,BYTE PTR [ecx]
  4272ce:	sub    DWORD PTR [edi-0x48],eax
  4272d1:	dec    edx
  4272d2:	cdq    
  4272d3:	(bad)  
  4272d5:	sub    ebp,DWORD PTR [ebx-0x46]
  4272d8:	ja     0x427303
  4272da:	mov    al,ds:0x39bf36b2
  4272df:	jp     0x4272f5
  4272e1:	ins    DWORD PTR es:[edi],dx
  4272e2:	ret    0x15ad
  4272e5:	fmul   st(4),st
  4272e7:	repz mov dl,dl
  4272ea:	fucom  st(1)
  4272ec:	pop    ebp
  4272ed:	(bad)
  4272f1:	cli    
  4272f2:	mov    eax,ds:0x3504409
  4272f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272f8:	sbb    DWORD PTR [ecx-0x70e07967],edi
  4272fe:	sbb    eax,0x4b12771
  427303:	xor    esp,ecx
  427305:	mov    esp,0xad14f60e
  42730b:	ds jbe 0x42732f
  42730e:	das    
  42730f:	sub    bl,BYTE PTR [ecx-0x4c]
  427312:	sahf   
  427313:	das    
  427314:	push   cs
  427315:	jecxz  0x4272d2
  427317:	(bad)  
  427318:	xor    al,0xff
  42731a:	mov    edx,0x42e7d3aa
  42731f:	daa    
  427320:	mov    ah,0xae
  427322:	es sub eax,0xa0905a68
  427328:	pop    esi
  427329:	lahf   
  42732a:	out    dx,al
  42732b:	ins    BYTE PTR es:[edi],dx
  42732c:	or     BYTE PTR [ebx],bl
  42732e:	out    0xc3,al
  427330:	xor    DWORD PTR [edx],ebp
  427332:	push   ecx
  427333:	aad    0xd2
  427335:	cmp    bh,BYTE PTR fs:[esi+0x33]
  427339:	xor    edi,DWORD PTR [eax+esi*4-0x47842062]
  427340:	outs   dx,DWORD PTR ds:[esi]
  427341:	les    edi,FWORD PTR [ebx]
  427343:	push   edi
  427344:	in     al,0x36
  427346:	lods   al,BYTE PTR ds:[esi]
  427347:	xchg   ebx,eax
  427348:	pop    esp
  427349:	mov    ds:0x4209caa8,eax
  42734e:	stc    
  42734f:	call   0x7032e876
  427354:	leave  
  427355:	adc    BYTE PTR [edi-0x45d38a3c],ah
  42735b:	or     DWORD PTR [esp+esi*2+0x6a568edc],0x94485a19
  427366:	cli    
  427367:	add    ecx,eax
  427369:	icebp  
  42736a:	mov    dh,0x6c
  42736c:	fsub   st,st(3)
  42736e:	cdq    
  42736f:	cmp    DWORD PTR [ebp+0x30bbf20a],0x66
  427376:	adc    DWORD PTR [eax],0xb9935666
  42737c:	(bad)  
  42737d:	inc    DWORD PTR [ebx+esi*8]
  427380:	mov    cl,0xf9
  427382:	inc    esi
  427383:	into   
  427384:	int    0xdc
  427386:	fstp   TBYTE PTR ds:0x90fa0cb1
  42738c:	pop    esi
  42738d:	fcmove st,st(6)
  42738f:	sar    DWORD PTR [ebp-0x25646dd8],1
  427395:	dec    ebx
  427396:	or     BYTE PTR [edi+edx*8],al
  427399:	popa   
  42739a:	inc    edx
  42739b:	dec    esp
  42739c:	scas   eax,DWORD PTR es:[edi]
  42739d:	sahf   
  42739e:	(bad)  
  42739f:	sbb    eax,0x17ddc15c
  4273a4:	mov    ebp,0x7be9a6c7
  4273a9:	jle    0x4273d0
  4273ab:	cmp    al,0xc0
  4273ad:	iret   
  4273ae:	jmp    0x427428
  4273b0:	mov    ds:0xab3e9e89,eax
  4273b5:	sub    al,0x90
  4273b7:	or     eax,0x93ddf25f
  4273bc:	rcl    ebp,cl
  4273be:	sub    ah,dh
  4273c0:	cmc    
	...
  427431:	add    BYTE PTR [eax],al
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa120:0x88667704
  427446:	add    DWORD PTR [eax],eax
  427448:	cmc    
  427449:	add    BYTE PTR [eax],al
  42744b:	add    BYTE PTR [ecx-0x1eed73df],al
  427451:	adc    bl,BYTE PTR [edi]
  427453:	aaa    
  427454:	test   eax,0x83c8f74
  427459:	retf   
  42745a:	nop
  42745b:	aas    
  42745c:	xor    al,0x98
  42745e:	add    eax,0xe03e95f
  427463:	popf   
  427464:	and    ah,BYTE PTR [edx-0x7b]
  427467:	outs   dx,DWORD PTR ds:[esi]
  427468:	mov    esi,0xc49e9d5a
  42746d:	pop    edi
  42746e:	sbb    ah,bh
  427470:	mov    esp,0xc225baaf
  427475:	dec    ecx
  427476:	cli    
  427477:	mov    bh,0xae
  427479:	or     al,dh
  42747b:	loope  0x427446
  42747d:	xchg   edx,eax
  42747e:	adc    BYTE PTR [ecx],0x17
  427481:	mov    dl,0xd0
  427483:	out    0x2a,eax
  427485:	and    eax,0x2f9ef578
  42748a:	sub    DWORD PTR [edx],ecx
  42748c:	(bad)  
  42748d:	in     al,0xe5
  42748f:	xchg   ebp,eax
  427490:	xor    eax,0xb7033218
  427495:	arpl   WORD PTR [ecx],cx
  427497:	adc    edx,ebx
  427499:	pusha  
  42749a:	sbb    DWORD PTR [edx-0x13408268],edx
  4274a0:	loopne 0x4274af
  4274a2:	push   es
  4274a3:	mov    ah,0xe3
  4274a5:	rol    BYTE PTR [ebx+eiz*4+0x5b],cl
  4274a9:	add    edi,DWORD PTR [esi-0xb]
  4274ac:	fldcw  WORD PTR ds:0x77cf5ff1
  4274b2:	(bad)  
  4274b3:	lock sub al,0x78
  4274b6:	inc    esp
  4274b7:	les    ebp,FWORD PTR [ebx]
  4274b9:	mov    ds:0xae7d1f2d,eax
  4274be:	mov    esp,0x59d8efcd
  4274c3:	retf   0xa390
  4274c6:	aaa    
  4274c7:	in     eax,0x1a
  4274c9:	dec    ebp
  4274ca:	jnp    0x4274de
  4274cc:	xor    edi,DWORD PTR [edx-0x381f7080]
  4274d2:	(bad)  
  4274d3:	dec    esp
  4274d4:	pop    edi
  4274d5:	not    DWORD PTR [edx]
  4274d7:	bound  esp,QWORD PTR [edx]
  4274d9:	lahf   
  4274da:	fistp  WORD PTR ds:0x8b06e70b
  4274e0:	mov    ds,WORD PTR [esi]
  4274e2:	xor    DWORD PTR [ecx+0x52],edx
  4274e5:	cld    
  4274e6:	mov    ah,0xe1
  4274e8:	sub    DWORD PTR [edi+0x5036cd8e],edx
  4274ee:	dec    esi
  4274ef:	cs jmp 0x5306afd6
  4274f5:	adc    eax,0x2c7f9d6d
  4274fa:	in     eax,dx
  4274fb:	icebp  
  4274fc:	push   edi
  4274fd:	jecxz  0x4274d8
  4274ff:	and    ah,cl
  427501:	lods   al,BYTE PTR ds:[esi]
  427502:	lods   eax,DWORD PTR ds:[esi]
  427503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427504:	mov    esp,0xa935a2e9
  427509:	cli    
  42750a:	xchg   ecx,eax
  42750b:	add    al,0x3f
  42750d:	xor    al,0x3
  42750f:	mov    ah,0x6d
  427511:	xor    dl,ch
  427513:	xor    eax,0x595e3f1
  427518:	and    al,0x5
  42751a:	sub    eax,0xea40419d
  42751f:	mov    cl,0xf3
  427521:	test   eax,0x6aaf1aeb
  427526:	jg     0x4274ee
  427528:	mov    ds:0xf9894632,al
  42752d:	ins    DWORD PTR es:[edi],dx
  42752e:	xlat   BYTE PTR ds:[ebx]
  42752f:	and    eax,0xbcb6b90d
  427534:	jp     0x427524
  427536:	test   al,0x47
  427538:	(bad)  
  427539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42753a:	jmp    0x92e91ddd
  42753f:	scas   al,BYTE PTR es:[edi]
	...
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xce9a8b87,al
  4275c1:	cdq    
  4275c2:	retf   
  4275c3:	jg     0x4275da
  4275c5:	mov    ds:0xf50001,al
  4275ca:	add    BYTE PTR [eax],al
  4275cc:	inc    eax
  4275cd:	mov    ds:0xfa23225,eax
  4275d2:	stc    
  4275d3:	jno    0x427654
  4275d5:	mov    WORD PTR [edi+0x3b6b3cae],?
  4275db:	or     BYTE PTR [eax+0x5b33547c],cl
  4275e1:	jbe    0x42759d
  4275e3:	pop    esi
  4275e4:	xchg   edi,eax
  4275e5:	push   0x3a
  4275e7:	scas   eax,DWORD PTR es:[edi]
  4275e8:	cmc    
  4275e9:	mov    eax,0xcfcbd90d
  4275ee:	ret    0x4ea
  4275f1:	ins    DWORD PTR es:[edi],dx
  4275f2:	lods   eax,DWORD PTR ds:[esi]
  4275f3:	fwait
  4275f4:	push   edx
  4275f5:	sbb    al,0xb3
  4275f7:	pop    es
  4275f8:	adc    DWORD PTR [edi+0x20],esi
  4275fb:	push   ds
  4275fc:	lods   al,BYTE PTR ds:[esi]
  4275fd:	rcl    BYTE PTR ds:0xb8d109e3,cl
  427603:	mov    dh,0xf
  427605:	leave  
  427606:	js     0x42762f
  427608:	mov    ebx,0xfc37f487
  42760d:	inc    esi
  42760e:	add    eax,0xa9b8650d
  427613:	pushf  
  427614:	xor    DWORD PTR [eax+0x70],ecx
  427617:	pop    ds
  427618:	dec    esp
  427619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42761a:	ret    
  42761b:	mov    bl,0xa1
  42761d:	mov    bl,0x82
  42761f:	mov    dh,0x7c
  427621:	in     al,dx
  427622:	push   ebp
  427623:	jae    0x427647
  427625:	(bad)  
  427626:	nop
  427627:	dec    ebp
  427628:	ins    DWORD PTR es:[edi],dx
  427629:	ds in  eax,dx
  42762b:	jmp    DWORD PTR [esi]
  42762d:	sbb    BYTE PTR [ecx+0x1],bl
  427630:	outs   dx,DWORD PTR gs:[esi]
  427632:	std    
  427633:	inc    eax
  427634:	or     eax,0x8697e7f0
  427639:	push   eax
  42763a:	mov    bl,0xd9
  42763c:	sub    DWORD PTR [edx-0x34519b85],esi
  427642:	retf   0x3e28
  427645:	sub    eax,0x1d90e228
  42764a:	lods   ax,WORD PTR ds:[esi]
  42764c:	xor    cl,bh
  42764e:	outs   dx,DWORD PTR ds:[esi]
  42764f:	xlat   BYTE PTR ds:[ebx]
  427650:	je     0x4275e1
  427652:	sbb    al,0x60
  427654:	push   ebx
  427655:	(bad)  
  427656:	jo     0x4275d8
  427658:	outs   dx,DWORD PTR ds:[esi]
  427659:	or     eax,0xd896fb40
  42765e:	jl     0x4276d3
  427660:	mov    cl,0xae
  427662:	dec    eax
  427663:	and    eax,0x7f720857
  427668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42766a:	sbb    cl,dh
  42766c:	pop    esi
  42766d:	xchg   esp,eax
  42766e:	sbb    DWORD PTR [ecx-0x33],0x29
  427672:	jae    0x4276c8
  427674:	xchg   ebp,eax
  427675:	push   ebx
  427676:	nop
  427677:	and    DWORD PTR [esi],ecx
  427679:	imul   edx,DWORD PTR [ecx],0x4bebc0e8
  42767f:	push   edx
  427680:	xor    al,0x0
  427682:	inc    esp
  427683:	loopne 0x42766c
  427685:	xchg   edi,eax
  427686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427687:	push   ds
  427688:	xor    BYTE PTR [ecx-0x6b],bl
  42768b:	stos   DWORD PTR es:[edi],eax
  42768c:	fwait
  42768d:	out    0xf,al
  42768f:	mov    BYTE PTR [ebx+0x77f4cd72],ah
  427695:	sbb    al,0x5
  427697:	xlat   BYTE PTR ds:[ebx]
  427698:	fcom   st(7)
  42769a:	outs   dx,DWORD PTR ds:[esi]
  42769b:	mov    ds:0xeaa30fc3,al
  4276a0:	adc    eax,0xf6fb0a05
  4276a5:	sbb    eax,0xeed7853d
  4276aa:	mov    bl,0x1d
  4276ac:	add    esp,DWORD PTR ss:[edx]
  4276af:	inc    edi
  4276b0:	push   ds
  4276b1:	ret    0xb06
  4276b4:	inc    eax
  4276b5:	scas   eax,DWORD PTR es:[edi]
  4276b6:	sti    
  4276b7:	cmp    BYTE PTR [eax],0x6e
  4276ba:	mov    BYTE PTR [esi+0x28],dh
  4276bd:	jno    0x42773c
  4276bf:	lods   eax,DWORD PTR gs:[esi]
	...
  427731:	add    BYTE PTR [eax],al
  427733:	add    BYTE PTR [eax-0xd53173],bh
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	adc    DWORD PTR [ecx-0x5cf5705a],edi
  427746:	add    DWORD PTR [eax],eax
  427748:	cmc    
  427749:	add    BYTE PTR [eax],al
  42774b:	add    BYTE PTR [eax],dh
  42774d:	sbb    al,0x99
  42774f:	pop    esp
  427750:	(bad)  
  427751:	pop    ecx
  427752:	(bad)  
  427754:	pop    ds
  427755:	mov    ds:0x3240bf65,eax
  42775a:	data16 loopne 0x427792
  42775d:	lods   al,BYTE PTR ds:[esi]
  42775e:	xor    al,0xb8
  427760:	sbb    esp,DWORD PTR [ebp+0x1d25e57f]
  427766:	dec    ecx
  427767:	pop    ebx
  427768:	cmp    eax,0x6239311
  42776d:	out    0x6f,eax
  42776f:	sub    eax,0x3c033992
  427774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427775:	adc    eax,0xc84b621e
  42777a:	push   0xffffff9f
  42777c:	repnz and al,0xab
  42777f:	jle    0x4277b5
  427781:	push   0x833538d4
  427786:	mov    ah,0xc6
  427788:	test   BYTE PTR [esi],dl
  42778a:	cmc    
  42778b:	mov    edi,0xc612a759
  427790:	pop    edx
  427791:	xchg   BYTE PTR [edi],bl
  427793:	fisttp DWORD PTR [esi+0x6a]
  427796:	pop    edx
  427797:	jp     0x4277d9
  427799:	cs inc esi
  42779b:	int3   
  42779c:	jae    0x427723
  42779e:	shl    DWORD PTR [ebp-0x786d8ce6],0xaa
  4277a5:	out    dx,al
  4277a6:	leave  
  4277a7:	inc    ebp
  4277a8:	ja     0x42779f
  4277aa:	mov    edx,0x298e6ff
  4277af:	xchg   BYTE PTR [ebx+0x4002d8c0],dl
  4277b5:	mov    ebx,0x1f15f006
  4277ba:	or     BYTE PTR [eax+0x68],0x65
  4277be:	xchg   ebp,eax
  4277bf:	mov    esi,0xe56937e4
  4277c4:	(bad)  
  4277c5:	fistp  DWORD PTR [edx]
  4277c7:	cmp    eax,0x8eed37c1
  4277cc:	mov    eax,0x25b9a4ee
  4277d1:	ins    BYTE PTR es:[edi],dx
  4277d2:	mov    ch,0xd8
  4277d4:	imul   esp,DWORD PTR [eax],0xe9311f13
  4277da:	stc    
  4277db:	mov    ch,0x44
  4277dd:	push   DWORD PTR [ebp-0x4a8b552b]
  4277e3:	inc    esp
  4277e4:	fistp  DWORD PTR ds:0x6eb65ff
  4277ea:	push   ds
  4277eb:	push   ebx
  4277ec:	dec    edx
  4277ed:	sahf   
  4277ee:	je     0x427786
  4277f0:	inc    edx
  4277f1:	pop    DWORD PTR [ebp+ebp*1-0x78]
  4277f5:	int3   
  4277f6:	mov    edx,0xbc3607c7
  4277fb:	adc    eax,0xe78f8a35
  427800:	cmp    DWORD PTR [esi],eax
  427802:	xchg   edx,eax
  427803:	das    
  427804:	jl     0x42781f
  427806:	fistp  QWORD PTR [ebx+0x733b4875]
  42780c:	sub    al,0x30
  42780e:	(bad)  
  42780f:	push   edx
  427810:	call   0xd431:0xc7a15335
  427817:	xor    dl,al
  427819:	jns    0x427868
  42781b:	pop    esi
  42781c:	cmc    
  42781d:	inc    ebp
  42781e:	fidiv  WORD PTR [ebx+ebp*2-0x3ff6dc17]
  427825:	aaa    
  427826:	add    edi,DWORD PTR [ebx-0x69]
  427829:	mov    ds:0x4e065e84,eax
  42782e:	cwde   
  42782f:	push   es
  427830:	xor    eax,0xdbe8e82c
  427835:	pusha  
  427836:	sub    BYTE PTR [ecx+0x1a],bh
  427839:	rol    BYTE PTR [ebx-0x64],0x8c
  42783d:	std    
  42783e:	mov    bh,0xf
  427840:	je     0x427842
	...
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	cmp    BYTE PTR [edx+0x22],al
  4278c3:	stos   BYTE PTR es:[edi],al
  4278c4:	jmp    DWORD PTR [ebx+0xf50001]
  4278ca:	add    BYTE PTR [eax],al
  4278cc:	ret    0xc10f
  4278cf:	jecxz  0x42789c
  4278d1:	loopne 0x427869
  4278d3:	push   0xffffffc4
  4278d5:	pop    ebx
  4278d6:	lods   al,BYTE PTR ds:[esi]
  4278d7:	mov    ?,WORD PTR [esi+0xe7c396e]
  4278dd:	ins    BYTE PTR es:[edi],dx
  4278de:	cmc    
  4278df:	inc    ecx
  4278e0:	icebp  
  4278e1:	call   0x33f8:0xf28144e
  4278e8:	pop    ss
  4278e9:	mov    edi,0xfc5ac23d
  4278ee:	pop    esi
  4278ef:	ret    
  4278f0:	out    dx,eax
  4278f1:	or     eax,0x4709eee6
  4278f6:	or     BYTE PTR ds:0xc711cb5d,al
  4278fc:	ret    0xf20e
  4278ff:	xchg   DWORD PTR ds:0x3ccd803a,edi
  427905:	mov    fs,ebp
  427907:	jb     0x42794d
  427909:	jae    0x427902
  42790b:	jns    0x427902
  42790d:	push   esp
  42790e:	mov    esi,0xd4f5d3b5
  427913:	sub    al,0x54
  427915:	add    bl,bl
  427917:	cmp    DWORD PTR [ecx],edi
  427919:	jne    0x42792c
  42791b:	test   ebp,0xc2e17991
  427921:	pop    ebp
  427922:	mov    ecx,0xdb397e17
  427927:	aaa    
  427928:	int    0x4a
  42792a:	mov    eax,ds:0x8e089189
  42792f:	leave  
  427930:	sbb    edi,DWORD PTR [ebx-0x71]
  427933:	int3   
  427934:	cli    
  427935:	in     eax,dx
  427936:	pop    ecx
  427937:	mov    bh,0x71
  427939:	mov    ebx,0xde0df45f
  42793e:	jmp    0xf227e08f
  427943:	loopne 0x427927
  427945:	bound  ebx,QWORD PTR [edi-0x7d17c32e]
  42794b:	bound  edx,QWORD PTR [ecx]
  42794d:	dec    ecx
  42794e:	jne    0x427916
  427950:	shl    BYTE PTR [edi],cl
  427952:	jecxz  0x4279ae
  427954:	cmp    ebx,DWORD PTR ds:0xe5ff5c5e
  42795a:	pop    edi
  42795b:	and    al,cl
  42795d:	(bad)  
  42795e:	sbb    al,0x97
  427960:	or     eax,0x24d724e1
  427965:	push   ebx
  427966:	xlat   BYTE PTR ds:[ebx]
  427967:	loop   0x42797a
  427969:	xchg   edx,eax
  42796a:	mov    ebx,0x89784117
  42796f:	rol    BYTE PTR [ebp-0x38],0x67
  427973:	int    0xac
  427975:	inc    eax
  427976:	and    bh,BYTE PTR [edx]
  427978:	aaa    
  427979:	out    dx,al
  42797a:	aam    0x31
  42797c:	popa   
  42797d:	add    BYTE PTR ss:[ebp-0x1238c9b3],0x4c
  427985:	mov    dh,ah
  427987:	adc    al,0xcd
  427989:	cmp    DWORD PTR [ebx+ecx*1+0x540ece6a],edi
  427990:	mov    bh,bh
  427992:	fbld   TBYTE PTR [eax]
  427994:	push   esi
  427995:	test   DWORD PTR [edx],ebp
  427997:	xor    ah,BYTE PTR [ebx+0x43]
  42799a:	loopne 0x4279f8
  42799c:	fstp   QWORD PTR es:[eax+0x1f]
  4279a0:	imul   DWORD PTR [ecx-0x5ace2a80]
  4279a6:	out    dx,eax
  4279a7:	inc    esi
  4279a8:	repz sbb esi,ecx
  4279ab:	adc    eax,0x37ab337a
  4279b0:	enter  0xa52c,0x26
  4279b4:	stos   DWORD PTR es:[edi],eax
  4279b5:	inc    ecx
  4279b6:	and    esp,DWORD PTR [ecx]
  4279b8:	xchg   DWORD PTR [esi+0x21],ecx
  4279bb:	jb     0x42795b
  4279bd:	fwait
  4279be:	jge    0x427a31
  4279c0:	jnp    0x4279c2
	...
  427a32:	add    BYTE PTR [eax],al
  427a34:	cdq    
  427a35:	sub    BYTE PTR ds:0xdb77bd56,cl
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0xf
  427a41:	mov    eax,DWORD PTR [ecx+eiz*1+0x1a4f4]
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [eax-0x6c13706b],bh
  427a51:	push   eax
  427a52:	or     BYTE PTR [edi],bl
  427a54:	in     al,dx
  427a55:	add    eax,0x19dad865
  427a5a:	test   ebp,edi
  427a5c:	pop    ecx
  427a5d:	rcl    BYTE PTR [ebx],cl
  427a5f:	push   cs
  427a60:	xchg   ecx,eax
  427a61:	test   eax,0x33d08341
  427a66:	pop    ss
  427a67:	lods   al,BYTE PTR ds:[esi]
  427a68:	pop    esp
  427a69:	fdivr  QWORD PTR [esi]
  427a6b:	fcomp  DWORD PTR [edx]
  427a6d:	inc    DWORD PTR [edi-0x619570b8]
  427a73:	cmc    
  427a74:	ja     0x427a92
  427a76:	fsubr  QWORD PTR [edx+0x0]
  427a79:	out    0xf1,al
  427a7b:	xsave  [eax]
  427a7e:	jp     0x427aed
  427a80:	pusha  
  427a81:	adc    edi,DWORD PTR [eax-0xa]
  427a84:	lods   eax,DWORD PTR ds:[esi]
  427a85:	push   esp
  427a86:	fidivr DWORD PTR [edx-0x34]
  427a89:	ret    
  427a8a:	sub    dh,BYTE PTR [ecx]
  427a8c:	sub    ch,BYTE PTR [edi]
  427a8e:	xor    edi,ebp
  427a90:	loopne 0x427afb
  427a92:	je     0x427ac9
  427a94:	fst    QWORD PTR ds:0xeca49f8b
  427a9a:	push   esp
  427a9b:	push   ss
  427a9c:	inc    edx
  427a9d:	push   ecx
  427a9e:	(bad)  
  427a9f:	out    dx,al
  427aa0:	mov    edx,0xbabd071f
  427aa5:	jl     0x427a8c
  427aa7:	pop    edi
  427aa8:	dec    edi
  427aa9:	test   eax,0x5e43ad05
  427aae:	jge    0x427a32
  427ab0:	cmp    ecx,edi
  427ab2:	mov    dl,0xac
  427ab4:	cmp    BYTE PTR [esi+ebp*1],ch
  427ab7:	jnp    0x427add
  427ab9:	pop    edi
  427aba:	mov    ebp,0x19de496b
  427abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ac0:	sub    ebx,DWORD PTR [ecx]
  427ac2:	jnp    0x427a7b
  427ac4:	mov    gs,WORD PTR [edx+0x60c5631b]
  427aca:	jns    0x427adf
  427acc:	dec    eax
  427acd:	jnp    0x427a9d
  427acf:	lock dec esi
  427ad1:	jl     0x427b15
  427ad3:	cmp    cx,di
  427ad6:	or     esp,esp
  427ad8:	mov    esi,0x672fd85f
  427add:	push   edi
  427ade:	pop    ecx
  427adf:	xlat   BYTE PTR ds:[ebx]
  427ae0:	pushf  
  427ae1:	adc    eax,0x5bf2874c
  427ae6:	mov    edi,0xdc95a50
  427aeb:	imul   ebx,DWORD PTR [ebx-0x32150d71],0xc342e43b
  427af5:	sbb    eax,0xdd3bf519
  427afa:	jp     0x427b2f
  427afc:	add    BYTE PTR [edx+edx*1+0x0],bh
  427b00:	and    BYTE PTR [ecx-0x74e8d624],0xf6
  427b07:	and    bl,ah
  427b09:	xchg   BYTE PTR [ebp-0x4d],bh
  427b0c:	cmp    eax,0xdc629358
  427b11:	push   eax
  427b12:	aad    0x40
  427b14:	push   eax
  427b15:	pop    ebp
  427b16:	clc    
  427b17:	pop    eax
  427b18:	or     BYTE PTR [ebx],bl
  427b1a:	and    al,0x12
  427b1c:	inc    ecx
  427b1d:	mov    gs,WORD PTR [edi+0x63]
  427b20:	int    0xd0
  427b22:	loopne 0x427b2f
  427b24:	retf   
  427b25:	dec    edx
  427b26:	(bad)  
  427b28:	idiv   cl
  427b2a:	push   0x7f
  427b2c:	and    BYTE PTR [ebx+0x1255cff9],bh
  427b32:	adc    eax,0xae852d2f
  427b37:	inc    ebp
  427b38:	jo     0x427b61
  427b3a:	mov    esp,0xeef83de0
  427b3f:	pop    esp
  427b40:	cmp    eax,0x0
	...
  427bb1:	add    BYTE PTR [eax],al
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x7b14fe65
  427bc1:	mov    ebp,0xa5e9650a
  427bc6:	add    DWORD PTR [eax],eax
  427bc8:	cmc    
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [edx],cl
  427bcd:	rcl    DWORD PTR [edx-0x3ef8db23],0xd2
  427bd4:	sub    al,0x65
  427bd6:	aad    0x95
  427bd8:	cmp    eax,0x8f02af15
  427bdd:	dec    ecx
  427bde:	loopne 0x427b7e
  427be0:	xchg   BYTE PTR [edx+0x797d8cba],ah
  427be6:	jecxz  0x427c5d
  427be8:	pop    ebx
  427be9:	add    BYTE PTR [edx+0x4d5ef258],dl
  427bef:	inc    ebx
  427bf0:	call   DWORD PTR [eax-0xa]
  427bf3:	bound  eax,QWORD PTR [eax+edi*2-0x2a]
  427bf7:	test   BYTE PTR [ebp+0x3a],cl
  427bfa:	xchg   edi,eax
  427bfb:	xchg   esp,eax
  427bfc:	jo     0x427b82
  427bfe:	retf   0x645
  427c01:	cmp    ah,bh
  427c03:	pop    esp
  427c04:	pop    es
  427c05:	mov    al,ds:0x101cbff0
  427c0a:	rcl    bh,1
  427c0c:	jnp    0x427bd4
  427c0e:	xchg   esp,eax
  427c0f:	frstor [ebp+esi*1+0x3176a6f]
  427c16:	sahf   
  427c17:	mov    WORD PTR [ecx],?
  427c19:	pop    ss
  427c1a:	push   ds
  427c1b:	sub    edx,0x84e61846
  427c21:	jle    0x427bf4
  427c23:	inc    ecx
  427c24:	sbb    edx,ebp
  427c26:	push   ax
  427c28:	(bad)  
  427c29:	fcmovnbe st,st(1)
  427c2b:	lods   eax,DWORD PTR ds:[esi]
  427c2c:	adc    eax,0x3a25e457
  427c31:	mov    esi,0xed7a1a73
  427c36:	sbb    ebx,DWORD PTR [esi+0x12]
  427c39:	lds    eax,FWORD PTR [edx]
  427c3b:	nop
  427c3c:	aam    0x49
  427c3e:	lock or BYTE PTR [ebx+0x2d75e403],bh
  427c45:	fimul  WORD PTR [esi+esi*4+0x57]
  427c49:	cmp    esi,esi
  427c4b:	jo     0x427c10
  427c4d:	in     eax,dx
  427c4e:	cmp    bl,bl
  427c50:	cmp    eax,0x6bd4a68d
  427c55:	xchg   ecx,eax
  427c56:	mov    al,0xb7
  427c58:	dec    ecx
  427c59:	jmp    0x945c2c9
  427c5e:	push   edi
  427c5f:	retf   0x6b
  427c62:	and    WORD PTR [ebp-0x3a],si
  427c66:	ret    0xfd52
  427c69:	xchg   esi,edi
  427c6b:	cld    
  427c6c:	ins    DWORD PTR es:[edi],dx
  427c6d:	sbb    ch,BYTE PTR [edi+0x693f9d4c]
  427c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c74:	jmp    0x427c7e
  427c76:	dec    ebx
  427c77:	iret   
  427c78:	sar    ecx,cl
  427c7a:	ins    BYTE PTR es:[edi],dx
  427c7b:	mov    cl,0x11
  427c7d:	cmp    eax,0xa34db6a5
  427c82:	pop    esp
  427c83:	jmp    0x5cdc3ef8
  427c88:	aad    0x5c
  427c8a:	mov    ecx,DWORD PTR [ebx-0x5d]
  427c8d:	mov    esi,0x5054a1c9
  427c92:	aad    0x1c
  427c94:	sub    al,0xab
  427c96:	cmp    al,BYTE PTR [edx]
  427c98:	dec    ebp
  427c99:	fstp   DWORD PTR [edi]
  427c9b:	call   0x60b7:0xc4e3c905
  427ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ca3:	sub    eax,0x8821524f
  427ca8:	in     eax,0x1f
  427caa:	xlat   BYTE PTR ds:[ebx]
  427cab:	(bad)  
  427cac:	daa    
  427cad:	arpl   sp,bp
  427caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cb0:	imul   edi,DWORD PTR [ebx],0xfffffff3
  427cb3:	mov    ebp,0x9f24e26f
  427cb8:	dec    DWORD PTR [ecx-0x65]
  427cbb:	aad    0x2b
  427cbd:	mov    ah,0xe8
  427cbf:	mov    ds:0x6c,eax
	...
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0xd0a1:0xdc63ecf9
  427d41:	shl    DWORD PTR ds:0x1a6decf,1
  427d47:	add    ch,dh
  427d49:	add    BYTE PTR [eax],al
  427d4b:	add    BYTE PTR [esi-0x7f25fc8b],ch
  427d51:	xor    ebx,DWORD PTR [edi+0x6b]
  427d54:	cs into 
  427d56:	cmc    
  427d57:	inc    edx
  427d58:	inc    eax
  427d59:	iret   
  427d5a:	in     eax,0x46
  427d5c:	sbb    al,0x3b
  427d5e:	(bad)  
  427d5f:	shl    BYTE PTR [edi],cl
  427d61:	wbinvd 
  427d63:	add    DWORD PTR [ebp-0xc46feb0],edi
  427d69:	outs   dx,BYTE PTR ds:[esi]
  427d6a:	call   0x5ea0:0xf0044756
  427d71:	(bad)
  427d74:	mov    dh,0xbd
  427d76:	int3   
  427d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d78:	mov    dh,BYTE PTR ds:0xadc5a712
  427d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d7f:	sbb    eax,0xc65bfbb2
  427d84:	push   ebx
  427d86:	imul   ebx,DWORD PTR [ebx],0xc09777d8
  427d8c:	sbb    al,0x3f
  427d8e:	dec    ecx
  427d8f:	sub    DWORD PTR [edx-0x39271c0b],edx
  427d95:	push   0x9d6a6797
  427d9a:	mov    ebp,gs
  427d9c:	cmp    eax,0x9d9ea0de
  427da1:	push   es
  427da2:	scas   eax,DWORD PTR es:[edi]
  427da3:	push   ebx
  427da4:	sbb    edi,ebx
  427da6:	iret   
  427da7:	inc    ebp
  427da8:	hlt    
  427da9:	fisub  WORD PTR [esi]
  427dab:	(bad)  
  427dac:	jecxz  0x427ddb
  427dae:	jo     0x427df1
  427db0:	xchg   ebx,eax
  427db1:	xor    esp,DWORD PTR [ebp+ebp*1-0x1f0ed090]
  427db8:	sub    DWORD PTR ds:0x7f086da2,edi
  427dbe:	jecxz  0x427d9a
  427dc0:	mov    bh,0x6
  427dc2:	or     eax,0xbeaefd40
  427dc7:	test   DWORD PTR [ecx+0x4a355d63],ecx
  427dcd:	sbb    dl,BYTE PTR [ecx-0x6]
  427dd0:	sbb    BYTE PTR [ebx-0x5f],ch
  427dd3:	push   0xed2d5f03
  427dd8:	cmp    cl,BYTE PTR [edi-0x640dadfa]
  427dde:	into   
  427ddf:	xchg   esp,eax
  427de0:	shr    BYTE PTR [edx],1
  427de2:	loope  0x427d6a
  427de4:	xchg   ecx,eax
  427de5:	mov    ch,BYTE PTR [edi]
  427de7:	es jmp 0x5c2760e5
  427ded:	lea    ebx,es:[esi-0x38]
  427df1:	rcr    ebp,1
  427df3:	ins    BYTE PTR es:[edi],dx
  427df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427df5:	or     eax,0xc1e4e0e6
  427dfa:	scas   al,BYTE PTR es:[edi]
  427dfb:	in     eax,0xfa
  427dfd:	stos   BYTE PTR es:[edi],al
  427dfe:	adc    BYTE PTR [eax],0x4a
  427e01:	xchg   edx,eax
  427e02:	(bad)
  427e06:	mov    ecx,0xe00595ab
  427e0b:	je     0x427db5
  427e0d:	mov    dl,0x58
  427e0f:	push   ss
  427e10:	mov    bl,0xca
  427e12:	push   es
  427e13:	stos   BYTE PTR es:[edi],al
  427e14:	xlat   BYTE PTR ds:[ebx]
  427e15:	xor    DWORD PTR [ecx+0x27],0xd46753ca
  427e1c:	icebp  
  427e1d:	das    
  427e1e:	shl    DWORD PTR [edx+edx*4-0x2f],0xdb
  427e23:	push   es
  427e24:	or     dl,BYTE PTR [edx+0x65]
  427e27:	xor    eax,0x1a5cb566
  427e2c:	test   al,0xa1
  427e2e:	sub    ebp,DWORD PTR ds:0xc5e980b4
  427e34:	es mov bh,0xfe
  427e37:	lds    edi,FWORD PTR [edx-0x1e]
  427e3a:	pushf  
  427e3b:	sub    al,0xa4
  427e3d:	daa    
  427e3e:	add    BYTE PTR [esi-0x29],ch
	...
  427eb1:	add    BYTE PTR [eax],al
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	inc    esi
  427ec1:	jne    0x427e46
  427ec3:	in     al,0xd3
  427ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ec6:	add    DWORD PTR [eax],eax
  427ec8:	cmc    
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    cl,bh
  427ecd:	call   0xdbf6:0xc9a1a7c1
  427ed4:	inc    edx
  427ed5:	mov    ecx,0x208d119c
  427eda:	fsub   st,st(4)
  427edc:	mov    ch,0x26
  427ede:	scas   al,BYTE PTR es:[edi]
  427edf:	mov    al,ds:0xcf157d5d
  427ee4:	mov    ebx,0xe47942cf
  427ee9:	frstor [edx]
  427eeb:	in     al,0xff
  427eed:	sbb    dh,BYTE PTR [ebx-0x364bb43a]
  427ef3:	fild   DWORD PTR [ecx]
  427ef5:	leave  
  427ef6:	ja     0x427f6d
  427ef8:	xor    dh,BYTE PTR [ebx-0x45]
  427efb:	and    cl,BYTE PTR [ecx]
  427efd:	xor    DWORD PTR [ecx-0x4a7a5576],esp
  427f03:	loopne 0x427f21
  427f05:	pop    eax
  427f06:	and    esi,esi
  427f08:	lods   al,BYTE PTR ds:[esi]
  427f09:	mov    BYTE PTR [edi],dl
  427f0b:	and    BYTE PTR [ecx],bh
  427f0d:	sbb    eax,0xe3498d84
  427f12:	mov    dl,0x50
  427f14:	sub    al,0xe1
  427f16:	enter  0x730c,0x3b
  427f1a:	mov    dl,0x9e
  427f1c:	test   BYTE PTR [esi+0x4a],bh
  427f1f:	mov    al,BYTE PTR [edx+ebx*8-0x17390ede]
  427f26:	shl    DWORD PTR [eax],1
  427f28:	jns    0x427fa5
  427f2a:	jmp    0x2a5e58de
  427f2f:	jmp    0x427f70
  427f31:	pop    esi
  427f32:	and    bh,BYTE PTR [edx]
  427f34:	pop    eax
  427f35:	scas   al,BYTE PTR es:[edi]
  427f36:	clc    
  427f37:	ds cdq 
  427f39:	sub    ecx,ebp
  427f3b:	test   eax,0x4065b65d
  427f40:	mov    ds:0xe7ad22e8,eax
  427f45:	mov    edx,0xfe9b906
  427f4a:	loopne 0x427f49
  427f4c:	pop    ds
  427f4d:	push   edx
  427f4e:	in     al,dx
  427f4f:	stos   BYTE PTR es:[edi],al
  427f50:	xchg   edx,eax
  427f51:	xor    al,bl
  427f53:	adc    ch,ah
  427f55:	bound  eax,QWORD PTR [esi-0x4f]
  427f58:	shr    bh,0xab
  427f5b:	(bad)  
  427f5d:	pop    ds
  427f5e:	pop    ebx
  427f5f:	xchg   esp,eax
  427f60:	fsub   st(0),st
  427f62:	inc    ebx
  427f63:	ret    
  427f64:	inc    esp
  427f65:	xchg   esp,eax
  427f66:	lock mov ebp,DWORD PTR [eax]
  427f69:	xchg   ebx,eax
  427f6a:	imul   esi,DWORD PTR [ecx+0x4ed76e8a],0x38070981
  427f74:	test   al,0xaf
  427f76:	or     ebp,DWORD PTR [edx]
  427f78:	std    
  427f79:	mov    DWORD PTR [ecx-0x6f],edi
  427f7c:	mov    bh,0x90
  427f7e:	push   cs
  427f7f:	test   ah,0x20
  427f82:	test   ch,cl
  427f84:	jbe    0x427f12
  427f86:	(bad)  
  427f87:	data16 xor al,0x64
  427f8a:	sub    BYTE PTR [ebx],0x7e
  427f8d:	mov    bh,bh
  427f8f:	mov    bl,bl
  427f91:	jp     0x427f94
  427f93:	dec    eax
  427f94:	mov    edi,ecx
  427f96:	enter  0xb5fd,0x3e
  427f9a:	xor    eax,0x3ba82193
  427f9f:	pop    esi
  427fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fa1:	pop    esp
  427fa2:	xchg   esi,eax
  427fa3:	bswap  esi
  427fa5:	inc    eax
  427fa6:	mov    al,0xeb
  427fa8:	sub    edi,ebx
  427faa:	loop   0x427fb0
  427fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fad:	jnp    0x427fd7
  427faf:	jb     0x427fbc
  427fb1:	mov    BYTE PTR [ebx+ecx*4+0x456e230a],ch
  427fb8:	cmp    al,0x62
  427fba:	push   ecx
  427fbb:	call   0x29:0xa944a545
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [eax+0x2],ebp
  428042:	jnp    0x428065
  428044:	enter  0x1a8,0x0
  428048:	cmc    
  428049:	add    BYTE PTR [eax],al
  42804b:	add    BYTE PTR [ebx+eiz*4-0x14776c9d],bl
  428052:	loope  0x42803b
  428054:	sub    al,bl
  428056:	push   es
  428057:	jl     0x428048
  428059:	jns    0x428046
  42805b:	jg     0x42802c
  42805d:	pop    edx
  42805e:	push   ecx
  42805f:	sti    
  428060:	mov    ecx,0xa840b95b
  428065:	or     ah,dh
  428067:	cmp    al,0xa3
  428069:	mov    dl,0x18
  42806b:	fidivr DWORD PTR [edi+0x2c]
  42806e:	inc    edx
  42806f:	mov    al,ds:0x4cd85a4a
  428074:	cmp    eax,0x7a2a945
  428079:	stos   DWORD PTR es:[edi],eax
  42807a:	add    dl,cl
  42807c:	sbb    edx,DWORD PTR [ecx+ebx*1+0x6c]
  428080:	shr    DWORD PTR [edx],0xec
  428083:	and    eax,0x7872226b
  428088:	enter  0xac2b,0xb3
  42808c:	push   ebp
  42808e:	ret    
  42808f:	enter  0xd11a,0x1e
  428093:	sub    DWORD PTR [esi],edx
  428095:	fs retf 0x7d11
  428099:	push   es
  42809a:	adc    al,0x88
  42809c:	enter  0xd39c,0xa7
  4280a0:	aad    0x78
  4280a2:	arpl   WORD PTR [esi+0x2f00af6a],sp
  4280a8:	mov    ds:0x96e1c24,al
  4280ad:	mov    edx,0xa4016d42
  4280b2:	(bad)
  4280b6:	aaa    
  4280b7:	(bad)  
  4280b8:	std    
  4280b9:	inc    esi
  4280ba:	or     eax,0x3c0c205c
  4280bf:	mov    ss,WORD PTR [ecx+ebx*8+0x61]
  4280c3:	pop    ecx
  4280c4:	fbstp  TBYTE PTR [ebp-0x4249dd2a]
  4280ca:	push   edi
  4280cb:	xchg   esp,eax
  4280cc:	jmp    0xf6e34f24
  4280d1:	repz add cl,BYTE PTR [esi+0x3802e3de]
  4280d8:	mov    ebp,0x1ed489cf
  4280dd:	addr16 add eax,0x5cc33424
  4280e3:	repz inc ebp
  4280e5:	inc    edi
  4280e6:	cmp    edi,DWORD PTR [ebx-0x59]
  4280e9:	repnz adc ebx,DWORD PTR [esi+0x58]
  4280ed:	xlat   BYTE PTR ds:[ebx]
  4280ee:	fisubr WORD PTR [eax-0x49]
  4280f1:	push   ds
  4280f2:	mov    BYTE PTR [eax-0x4d35f075],cl
  4280f8:	ss repz inc esp
  4280fb:	xchg   esp,eax
  4280fc:	gs in  eax,dx
  4280fe:	xor    edi,DWORD PTR [edx-0x9]
  428101:	retf   
  428102:	mov    esi,0xe1bb6742
  428107:	mov    DWORD PTR [edx],edx
  428109:	add    BYTE PTR [edx-0x34],ch
  42810c:	jnp    0x4280a0
  42810e:	add    bh,BYTE PTR ds:0x6121b185
  428114:	xchg   ebp,eax
  428115:	lods   eax,DWORD PTR ds:[esi]
  428116:	xor    DWORD PTR es:[edx],edi
  428119:	sbb    BYTE PTR [esp+edi*8+0x75],ch
  42811d:	adc    al,0xa1
  42811f:	dec    ebp
  428120:	xchg   esi,eax
  428121:	mov    WORD PTR [edx+0x85cf8fb],fs
  428127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428128:	aaa    
  428129:	mov    ds:0x57fae5be,al
  42812e:	data16 adc ch,BYTE PTR [ecx-0x60]
  428132:	repnz retf 
  428134:	push   ebp
  428135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428136:	scas   eax,DWORD PTR es:[edi]
  428137:	jg     0x428157
  428139:	sbb    BYTE PTR es:[ebp-0x368f9f4b],cl
  428140:	add    DWORD PTR [eax],0x0
	...
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0x25fcd94f
  4281c3:	adc    edi,DWORD PTR [ebp-0xafffe57]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [esi-0x5a4938a1],bh
  4281d1:	ins    BYTE PTR es:[edi],dx
  4281d2:	push   esi
  4281d3:	popa   
  4281d4:	inc    eax
  4281d5:	or     DWORD PTR [edx+0x19],edx
  4281d8:	pushf  
  4281d9:	je     0x42817f
  4281db:	mov    cl,0x2d
  4281dd:	repz arpl WORD PTR ds:0x6c097bd8,sp
  4281e4:	cld    
  4281e5:	ret    0x74a5
  4281e8:	cmc    
  4281e9:	scas   eax,DWORD PTR es:[edi]
  4281ea:	add    eax,DWORD PTR [edx]
  4281ec:	sub    DWORD PTR [ebp+ebp*1+0x54699ae8],ecx
  4281f3:	rcl    esp,1
  4281f5:	and    ebx,DWORD PTR [edx-0x332c6c46]
  4281fb:	adc    esi,DWORD PTR [ebx+0x32]
  4281fe:	icebp  
  4281ff:	xor    ecx,DWORD PTR [eax+0x4341aba4]
  428205:	jbe    0x4281a6
  428207:	fstp   QWORD PTR [eax+0x594190df]
  42820d:	pop    esp
  42820e:	fst    QWORD PTR [ebp-0x49]
  428211:	add    DWORD PTR [ebp-0x63afd94b],ebp
  428217:	jnp    0x42825f
  428219:	sti    
  42821a:	arpl   WORD PTR [edx*2+0x7e76fa9d],di
  428221:	sbb    BYTE PTR [ecx-0x6a],al
  428224:	adc    ecx,edi
  428226:	cmp    al,BYTE PTR [esi-0x56]
  428229:	mov    ds:0x1121d835,eax
  42822e:	or     BYTE PTR [esi-0x50],0xf8
  428232:	fsubrp st(2),st
  428234:	mov    al,ds:0x213c962a
  428239:	and    ecx,esi
  42823b:	retf   0xfb82
  42823e:	(bad)  
  42823f:	ds jmp 0xbdcd:0x63037c26
  428247:	inc    edx
  428248:	out    dx,al
  428249:	das    
  42824a:	sub    dl,BYTE PTR [ebp-0x71603d5f]
  428250:	mov    ebp,0x657d6e7f
  428255:	inc    esp
  428256:	retf   0x415c
  428259:	sbb    eax,0xca533523
  42825e:	sbb    DWORD PTR [edi+0x7c],esp
  428261:	fwait
  428262:	mov    bh,0x26
  428264:	xor    DWORD PTR [edi+0xd13d603],0x5783a5fd
  42826e:	mov    bl,0xb
  428270:	popf   
  428271:	stos   DWORD PTR es:[edi],eax
  428272:	xor    al,0x44
  428274:	mov    ds,WORD PTR [ebp-0x12689f5c]
  42827a:	(bad)  
  42827b:	xor    al,0x6b
  42827d:	imul   ebx,ebp,0x3a29994d
  428283:	mov    WORD PTR [edx+0x783027b2],ss
  428289:	jne    0x42821d
  42828b:	sbb    BYTE PTR [ebx-0x1b325bf7],dl
  428291:	push   cs
  428292:	mov    BYTE PTR [ecx+0x3945b9e8],bl
  428298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428299:	add    eax,0x26fd5602
  42829e:	xchg   esi,eax
  42829f:	xchg   ebp,eax
  4282a0:	xor    esi,DWORD PTR [ecx-0x3eb3b059]
  4282a6:	sbb    eax,0x4460df3a
  4282ab:	icebp  
  4282ac:	repnz ror BYTE PTR ds:0x1b3d7b7a,cl
  4282b3:	push   eax
  4282b4:	int3   
  4282b5:	cmc    
  4282b6:	bswap  eax
  4282b8:	mov    ebx,0xf6e2d6cf
  4282bd:	cmp    al,0x0
  4282bf:	sbb    DWORD PTR [ebp+0x0],0x0
	...
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	lock sbb BYTE PTR [ebx+0x1aab213],0x0
  428348:	cmc    
  428349:	add    BYTE PTR [eax],al
  42834b:	add    BYTE PTR [esi-0x2d],bh
  42834e:	xchg   ebp,eax
  42834f:	(bad)  
  428350:	out    0x38,al
  428352:	fs test eax,0x6ea43102
  428358:	jg     0x428303
  42835a:	xchg   edi,eax
  42835b:	dec    esp
  42835c:	icebp  
  42835d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42835e:	(bad)  
  428361:	adc    al,0x96
  428363:	aad    0xc9
  428365:	jno    0x42835a
  428367:	stos   BYTE PTR es:[edi],al
  428368:	push   edx
  428369:	aam    0xf6
  42836b:	repnz inc edi
  42836d:	push   ds
  42836e:	out    dx,al
  42836f:	adc    edi,DWORD PTR [ebx]
  428371:	jo     0x42839b
  428373:	fld    DWORD PTR [esp+esi*4+0x30]
  428377:	mov    al,BYTE PTR [ebp-0x4d]
  42837a:	jmp    0x195d:0x674af03c
  428381:	int    0x97
  428383:	fcom   DWORD PTR [edx+eiz*4]
  428386:	(bad)  
  428388:	adc    al,0xb2
  42838a:	cwde   
  42838b:	dec    si
  42838d:	inc    edi
  42838e:	lock dec ecx
  428390:	xchg   esi,eax
  428391:	inc    esp
  428392:	clc    
  428393:	retf   
  428394:	jmp    0x4283b7
  428396:	mov    ebx,0x63dabe0f
  42839b:	add    al,0x72
  42839d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42839e:	rol    BYTE PTR [edi+0x4f],0xf0
  4283a2:	push   esi
  4283a3:	fwait
  4283a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283a5:	cmp    esi,0x38
  4283a8:	dec    eax
  4283a9:	rcl    esp,0x6
  4283ac:	retf   
  4283ad:	dec    eax
  4283ae:	sbb    edx,DWORD PTR [edx+0x5]
  4283b1:	adc    ch,BYTE PTR [esi-0x11]
  4283b4:	mov    eax,0x996cb9b8
  4283b9:	xchg   edx,eax
  4283ba:	sub    eax,0xb971dc7
  4283bf:	mov    edi,DWORD PTR [esi+0x3f]
  4283c2:	dec    edi
  4283c3:	aas    
  4283c4:	xchg   esp,eax
  4283c5:	imul   ecx,DWORD PTR [edi-0x2d985cb9],0x9d0f6fd6
  4283cf:	pop    es
  4283d0:	or     al,0x63
  4283d2:	ja     0x42835c
  4283d4:	mov    gs,edx
  4283d6:	loop   0x428367
  4283d8:	and    ebx,DWORD PTR [ebp-0x16]
  4283db:	popa   
  4283dc:	or     BYTE PTR [ebp-0x6d575f6d],cl
  4283e2:	and    BYTE PTR [edi-0x3e4acd1e],cl
  4283e8:	mov    ebp,DWORD PTR [ebx-0x30]
  4283eb:	fisub  DWORD PTR [ecx-0x67]
  4283ee:	sbb    eax,0x5586609c
  4283f3:	or     al,0x1
  4283f5:	imul   esi,edx,0x1e
  4283f8:	js     0x4283b7
  4283fa:	fsubr  DWORD PTR [esi-0x37f145f9]
  428400:	pop    ss
  428401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428402:	fmul   QWORD PTR [ecx-0x1a]
  428405:	fwait
  428406:	ror    eax,0xc4
  428409:	push   ebx
  42840a:	(bad)  
  42840b:	neg    DWORD PTR [edi]
  42840d:	ds jmp 0x4283d1
  428410:	test   BYTE PTR [edi-0x79],bl
  428413:	mov    edx,0xc89b42c6
  428418:	stos   DWORD PTR es:[edi],eax
  428419:	jecxz  0x4283be
  42841b:	mov    ah,BYTE PTR [esp+ebx*2]
  42841e:	inc    edx
  42841f:	gs dec esp
  428421:	shr    DWORD PTR [ecx-0x2130d464],cl
  428427:	mov    ebp,0x2e13a5a6
  42842c:	xchg   DWORD PTR [ebp+0xbb0c044],ebx
  428432:	mov    gs:0x57a321c3,eax
  428438:	in     eax,dx
  428439:	xor    BYTE PTR [esi-0x7b],cl
  42843c:	clc    
  42843d:	loop   0x4283c9
  42843f:	fbld   TBYTE PTR [ecx+0x0]
	...
  4284b1:	add    BYTE PTR [eax],al
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx+0x4b6b3407]
  4284c1:	dec    ebx
  4284c2:	sub    ch,dl
  4284c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c5:	stos   DWORD PTR es:[edi],eax
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	cmc    
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    BYTE PTR [ecx+ebp*8-0x2df9f70b],bh
  4284d2:	and    DWORD PTR ds:0x470e1fa4,ebx
  4284d8:	cmp    esi,ebp
  4284da:	sub    ch,dh
  4284dc:	fwait
  4284dd:	lds    esp,FWORD PTR [edi+ebp*2+0x5f]
  4284e1:	xor    eax,0xcca948cf
  4284e6:	stc    
  4284e7:	pop    ecx
  4284e8:	push   esp
  4284e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284ea:	shr    edx,cl
  4284ec:	jecxz  0x4284b8
  4284ee:	push   esp
  4284ef:	and    al,0x90
  4284f1:	push   eax
  4284f2:	dec    ebp
  4284f3:	loopne 0x428572
  4284f5:	or     eax,0xcbe69ebf
  4284fa:	iret   
  4284fb:	loopne 0x4284b5
  4284fd:	std    
  4284fe:	in     eax,0xf5
  428500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428501:	adc    ah,BYTE PTR [esi-0x3727edc2]
  428507:	shl    DWORD PTR [edx],cl
  428509:	(bad)  
  42850a:	fdivr  DWORD PTR [ebp+0x4]
  42850d:	add    DWORD PTR gs:[ebx],edx
  428510:	push   ss
  428511:	pop    ebx
  428512:	lods   al,BYTE PTR ds:[esi]
  428513:	gs in  eax,0xef
  428516:	xchg   ebp,eax
  428517:	xchg   ebp,eax
  428518:	sub    BYTE PTR [ecx-0x3b],0x6b
  42851c:	data16 das 
  42851e:	icebp  
  42851f:	xor    edi,DWORD PTR [edx]
  428521:	pop    ds
  428522:	adc    BYTE PTR [ecx],0xe2
  428525:	aad    0xc9
  428527:	push   ds
  428528:	iret   
  428529:	sar    DWORD PTR [ebp-0x34180665],0x74
  428530:	rcr    DWORD PTR [eax],cl
  428532:	xlat   BYTE PTR ds:[ebx]
  428533:	jae    0x4284dc
  428535:	xchg   esi,eax
  428536:	pop    edx
  428537:	sbb    edi,DWORD PTR [edx-0x5b28b82b]
  42853d:	aad    0x83
  42853f:	xchg   esi,eax
  428540:	cmp    DWORD PTR ds:0x770639e8,ebx
  428546:	shl    edx,0x2
  428549:	in     eax,0x28
  42854b:	imul   ecx,DWORD PTR ds:0xcd61811f,0xffffffb1
  428552:	(bad)  
  428553:	stc    
  428554:	test   DWORD PTR [ecx-0x71a112ba],0x3a26e534
  42855e:	rol    BYTE PTR [ebx-0x4a11b57e],0xe5
  428565:	or     DWORD PTR [ecx+0x46],esp
  428568:	xchg   edx,eax
  428569:	retf   0x3254
  42856c:	push   ss
  42856d:	aas    
  42856e:	xchg   edx,eax
  42856f:	stos   BYTE PTR es:[edi],al
  428570:	in     eax,dx
  428571:	xchg   DWORD PTR [eax-0x46016d14],ebp
  428577:	scas   eax,DWORD PTR es:[edi]
  428578:	jle    0x42858d
  42857a:	fucomp st(4)
  42857c:	inc    esp
  42857d:	sbb    DWORD PTR [ebx+0x6247cb52],0xffffff9b
  428584:	pop    ss
  428585:	pop    esp
  428586:	mov    ebx,0xe506f3b9
  42858b:	sbb    eax,0xa3cae84a
  428590:	or     ecx,DWORD PTR [eax+0x5c247e9e]
  428596:	(bad)  
  428597:	outs   dx,BYTE PTR ds:[esi]
  428598:	stos   BYTE PTR es:[edi],al
  428599:	lea    edx,[eax]
  42859b:	xor    eax,0xd9f40fa2
  4285a0:	cld    
  4285a1:	sbb    DWORD PTR [edx-0x3aaba899],esi
  4285a7:	lea    esp,[esi-0x47]
  4285aa:	jmp    0x1b5e:0xf67e3985
  4285b1:	(bad)  
  4285b3:	lea    ebp,[edi-0x516e1c98]
  4285b9:	pop    ds
  4285ba:	mov    ah,0x73
  4285bc:	addr16 pop ebx
  4285be:	mov    ebx,0xca57
	...
  428633:	add    BYTE PTR [ecx],al
  428635:	push   esi
  428636:	nop
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	cli    
  428641:	sahf   
  428642:	adc    al,0x11
  428644:	pushf  
  428645:	lods   al,BYTE PTR ds:[esi]
  428646:	add    DWORD PTR [eax],eax
  428648:	cmc    
  428649:	add    BYTE PTR [eax],al
  42864b:	add    al,dh
  42864d:	scas   al,BYTE PTR es:[edi]
  42864e:	sbb    eax,DWORD PTR [edx+0x35]
  428651:	inc    esp
  428652:	dec    edi
  428653:	or     BYTE PTR [edx+0x4e3f6a55],cl
  428659:	mov    esi,0x8a90f751
  42865e:	jle    0x42863d
  428660:	call   0x12318830
  428665:	sbb    BYTE PTR [edx-0x79f82da4],dl
  42866b:	jle    0x428604
  42866d:	mov    BYTE PTR [ebx-0x44],dl
  428670:	push   edx
  428671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428672:	cmc    
  428673:	fs mov al,0x82
  428676:	sti    
  428677:	ja     0x428600
  428679:	sbb    esi,ecx
  42867b:	or     BYTE PTR [edi+0x4c],ch
  42867e:	in     eax,0x38
  428680:	scas   al,BYTE PTR es:[edi]
  428681:	mov    esp,0x3cbf6a94
  428686:	sub    BYTE PTR [edx],bl
  428688:	sub    DWORD PTR [ebx-0x1c8b056e],ebx
  42868e:	xchg   edx,eax
  42868f:	or     al,0xa5
  428691:	xlat   BYTE PTR ds:[ebx]
  428692:	dec    eax
  428693:	or     edi,esi
  428695:	loop   0x42864a
  428697:	pop    esi
  428698:	outs   dx,DWORD PTR ds:[esi]
  428699:	pop    eax
  42869a:	mov    ss,WORD PTR [edx-0x76]
  42869d:	sbb    al,0x3f
  42869f:	and    esp,edi
  4286a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286a2:	scas   eax,DWORD PTR es:[edi]
  4286a3:	xor    eax,0xba2eb5ff
  4286a8:	push   eax
  4286a9:	mov    al,gs:0x6ad1181c
  4286af:	dec    esi
  4286b0:	dec    ecx
  4286b1:	add    dl,BYTE PTR [esi+0x4bd6f438]
  4286b7:	cmp    al,0x8b
  4286b9:	in     al,0x9
  4286bb:	bound  ecx,QWORD PTR [edx]
  4286bd:	add    ah,BYTE PTR [esi+0x33b5b478]
  4286c3:	retf   0x1e57
  4286c6:	add    esp,DWORD PTR [ebx]
  4286c8:	lahf   
  4286c9:	ss jno 0x42870e
  4286cc:	inc    esp
  4286cd:	dec    ecx
  4286ce:	jne    0x428692
  4286d0:	pop    edi
  4286d1:	lods   eax,DWORD PTR ds:[esi]
  4286d2:	icebp  
  4286d3:	push   ss
  4286d4:	push   esi
  4286d5:	xor    ecx,ecx
  4286d7:	in     al,dx
  4286d8:	out    dx,eax
  4286d9:	jbe    0x42865e
  4286db:	push   cs
  4286dc:	stos   DWORD PTR es:[edi],eax
  4286dd:	(bad)  
  4286de:	clc    
  4286df:	stos   DWORD PTR es:[edi],eax
  4286e0:	add    al,0x47
  4286e2:	dec    eax
  4286e3:	push   es
  4286e4:	or     dl,bh
  4286e6:	jmp    DWORD PTR ds:0x341e15b0
  4286ec:	pop    ebp
  4286ed:	mov    eax,0xa06ad845
  4286f2:	aam    0x4c
  4286f4:	retf   
  4286f5:	(bad)  
  4286f6:	fwait
  4286f7:	sti    
  4286f8:	outs   dx,BYTE PTR ds:[esi]
  4286f9:	lahf   
  4286fa:	daa    
  4286fb:	xchg   BYTE PTR [eax-0x5],ch
  4286fe:	outs   dx,BYTE PTR ds:[esi]
  4286ff:	sbb    BYTE PTR [ebx+edx*8],bh
  428702:	and    al,0x96
  428704:	retf   
  428705:	arpl   ax,di
  428707:	test   eax,0x2ea19b0c
  42870c:	shl    BYTE PTR [esp+ebx*2-0x3],0x32
  428711:	cmp    DWORD PTR [edi],edx
  428713:	pushf  
  428714:	pop    edi
  428715:	pop    edi
  428716:	clc    
  428717:	xchg   ebp,eax
  428718:	pop    esp
  428719:	push   ds
  42871a:	push   ds
  42871b:	sbb    dl,al
  42871d:	inc    esp
  42871e:	dec    ecx
  42871f:	dec    ecx
  428720:	fyl2xp1 
  428722:	ficom  DWORD PTR [ebx+0x5b]
  428725:	out    dx,al
  428726:	sub    BYTE PTR [edi+0x62c90575],ch
  42872c:	jl     0x42876d
  42872e:	rol    BYTE PTR [edx],cl
  428730:	ja     0x4286d3
  428732:	cmp    al,BYTE PTR [edi+edi*2-0x77]
  428736:	xchg   BYTE PTR [ebp-0x53249ffc],dh
  42873c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42873d:	lea    edi,[eax+0x7a]
  428740:	scas   eax,DWORD PTR es:[edi]
	...
  4287b1:	add    BYTE PTR [eax],al
  4287b3:	add    BYTE PTR [edx],bl
  4287b5:	mov    cl,BYTE PTR [ebx]
  4287b7:	inc    ebp
  4287b8:	fwait
  4287b9:	lds    ebx,FWORD PTR [esi-0x21]
  4287bc:	xor    edi,DWORD PTR [edx+0x6031299e]
  4287c2:	lahf   
  4287c3:	add    edx,DWORD PTR [ecx-0xafffe53]
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [ebp-0x3e555d48],al
  4287d1:	xchg   esp,eax
  4287d2:	push   ebp
  4287d3:	push   es
  4287d4:	add    eax,0x47bc551a
  4287d9:	xchg   BYTE PTR [ebp-0x19c1c49c],ch
  4287df:	ss sub eax,0xce02b828
  4287e5:	add    dl,BYTE PTR [edx+0x1abde577]
  4287eb:	jp     0x428800
  4287ed:	fcmovnu st,st(4)
  4287ef:	fadd   DWORD PTR ds:0x6c4b8402
  4287f5:	xadd   DWORD PTR [esi],ebx
  4287f8:	or     cl,0x12
  4287fb:	mov    ds:0x7942cca,eax
  428800:	jg     0x428785
  428802:	xchg   ecx,eax
  428803:	cld    
  428804:	pop    ds
  428805:	pop    edi
  428806:	inc    esp
  428807:	fidiv  DWORD PTR [esi-0x79]
  42880a:	inc    ecx
  42880b:	clc    
  42880c:	bound  edx,QWORD PTR [edx+0x63]
  42880f:	mov    ecx,0x612babbd
  428814:	dec    edx
  428815:	mov    eax,edx
  428817:	(bad)  
  428818:	mov    DWORD PTR [edi],eax
  42881a:	jl     0x4287c3
  42881c:	cmp    ebx,edi
  42881e:	in     eax,0x25
  428820:	aas    
  428821:	pop    edi
  428822:	clc    
  428823:	cs adc eax,0xf17dd5d2
  428829:	mov    ebx,esp
  42882b:	pushf  
  42882c:	ja     0x42885d
  42882e:	rcl    ebx,cl
  428830:	push   edx
  428831:	adc    BYTE PTR [esi-0x6b],bl
  428834:	cli    
  428835:	push   ebx
  428836:	pop    ds
  428837:	add    eax,0x8f6e3de2
  42883c:	cvtdq2ps xmm1,xmm3
  42883f:	sahf   
  428840:	loop   0x42887b
  428842:	lods   al,BYTE PTR ds:[esi]
  428843:	sub    edx,DWORD PTR [edx+0x1]
  428846:	(bad)  
  428847:	hlt    
  428848:	ss aas 
  42884a:	mov    eax,0x8875dfe5
  42884f:	xor    esp,esp
  428851:	mov    esi,0x6702f43e
  428856:	inc    eax
  428857:	or     BYTE PTR [ebp+0x7f],ch
  42885a:	mov    edx,0xd96c16fb
  42885f:	add    BYTE PTR [ebx+0x4f34f8e5],al
  428865:	stos   DWORD PTR es:[edi],eax
  428866:	hlt    
  428867:	ret    
  428868:	daa    
  428869:	(bad)  
  42886a:	out    dx,al
  42886b:	and    eax,0x6300d6ba
  428870:	and    al,0x1
  428872:	fild   DWORD PTR [ebp-0xd]
  428875:	dec    edx
  428876:	ins    DWORD PTR es:[edi],dx
  428877:	xchg   ecx,eax
  428878:	push   esi
  428879:	jo     0x428838
  42887b:	and    DWORD PTR [edx-0x5e942331],ebp
  428881:	mov    eax,0x451c77c0
  428886:	pop    ebp
  428887:	jb     0x4288df
  428889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42888a:	dec    ebp
  42888b:	cmp    ecx,DWORD PTR [ebx+0x66]
  42888e:	imul   eax,DWORD PTR [eax],0x2cbaf4d7
  428894:	mov    ah,0x7b
  428896:	hlt    
  428897:	jnp    0x42886c
  428899:	or     eax,0x8d584d8b
  42889e:	mov    ebp,0xfa8316cb
  4288a3:	not    BYTE PTR ds:0x8e8e1e2
  4288a9:	int    0x59
  4288ab:	cmp    eax,0x8f264e7d
  4288b0:	pop    es
  4288b1:	or     al,0xbe
  4288b3:	mov    bh,0x65
  4288b5:	sub    eax,0x13f606a0
  4288ba:	mov    esi,0xcb075b64
  4288bf:	inc    esp
  4288c0:	and    eax,0x0
	...
  428931:	add    BYTE PTR [eax],al
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	lahf   
  428941:	cmp    DWORD PTR [ebp+ecx*1-0x7a],0xf50001ae
  428949:	add    BYTE PTR [eax],al
  42894b:	add    BYTE PTR ds:0x79ff5e23,cl
  428951:	enter  0xd315,0x28
  428955:	mov    esi,0x3ea2688f
  42895a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42895b:	ds jb  0x428977
  42895e:	mov    edx,DWORD PTR [ecx+0xd]
  428961:	mov    al,ds:0x263cb046
  428966:	loopne 0x42899f
  428968:	pop    edi
  428969:	jecxz  0x42893b
  42896b:	out    dx,al
  42896c:	mov    esp,DWORD PTR [edx-0x4fb30192]
  428972:	iret   
  428973:	inc    esp
  428974:	add    eax,0xbb47612b
  428979:	adc    BYTE PTR [ecx+0x7c],cl
  42897c:	or     DWORD PTR [ebx-0x4b0954eb],esp
  428982:	and    DWORD PTR [ecx-0x5e],0xb89fd80e
  428989:	cmp    al,0xaa
  42898b:	cmc    
  42898c:	cmp    bl,bl
  42898e:	lock das 
  428990:	and    DWORD PTR [ebx+0x126a3615],ebp
  428996:	pusha  
  428997:	pop    esi
  428998:	xchg   esi,ecx
  42899a:	scas   eax,DWORD PTR es:[edi]
  42899b:	mov    dl,0x0
  42899d:	or     DWORD PTR [edi+0x6a79024a],edi
  4289a3:	retf   0x86f9
  4289a6:	lods   al,BYTE PTR ds:[esi]
  4289a7:	fdivp  st(7),st
  4289a9:	cmp    al,0xf7
  4289ab:	and    ebx,0xfedf3647
  4289b1:	jg     0x428934
  4289b3:	fcmovbe st,st(6)
  4289b5:	pusha  
  4289b6:	sbb    al,0x47
  4289b8:	mov    ah,0x89
  4289ba:	jo     0x4289bd
  4289bc:	shl    BYTE PTR [edi+ebp*8+0x45],0x1c
  4289c1:	(bad)  
  4289c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289c3:	mov    edi,eax
  4289c5:	test   BYTE PTR [eax-0x61],bl
  4289c8:	loope  0x42898c
  4289ca:	stc    
  4289cb:	pop    eax
  4289cc:	std    
  4289cd:	and    DWORD PTR [edi],ecx
  4289cf:	mov    edi,0x6ecf11ea
  4289d4:	inc    edi
  4289d5:	adc    BYTE PTR [eax-0x367e195c],ch
  4289db:	sub    BYTE PTR [esi-0x63],cl
  4289de:	pop    esi
  4289df:	rcl    eax,cl
  4289e1:	inc    ecx
  4289e2:	lds    esp,FWORD PTR [esi-0x9989c52]
  4289e8:	sbb    DWORD PTR [edi-0x37],ebp
  4289eb:	inc    esp
  4289ec:	bound  esp,QWORD PTR [edi+0x10]
  4289ef:	inc    eax
  4289f0:	test   ecx,ebp
  4289f2:	dec    esp
  4289f3:	imul   ebp,ebx,0x58
  4289f6:	push   ebx
  4289f7:	push   ebx
  4289f8:	in     eax,0x53
  4289fa:	or     dh,BYTE PTR [eax+eax*8-0x151e26dc]
  428a01:	(bad)  
  428a02:	out    dx,al
  428a03:	adc    eax,0xd1311956
  428a08:	aad    0x54
  428a0a:	out    dx,eax
  428a0b:	lods   al,BYTE PTR ds:[esi]
  428a0c:	mov    al,0x2f
  428a0e:	sbb    edx,edx
  428a10:	xchg   esp,eax
  428a11:	xchg   ebx,eax
  428a12:	mov    al,0xda
  428a14:	icebp  
  428a15:	repz jo 0x428a52
  428a18:	leave  
  428a19:	call   DWORD PTR [ecx+esi*2-0x5e6ac862]
  428a20:	add    edi,DWORD PTR [ecx]
  428a22:	adc    BYTE PTR [edi],dh
  428a24:	ins    BYTE PTR es:[edi],dx
  428a25:	pusha  
  428a26:	cmp    ecx,ebp
  428a28:	add    esp,DWORD PTR [eax+0x493897d5]
  428a2e:	add    al,0xd
  428a30:	clc    
  428a31:	jmp    0x42bc:0xc001bd40
  428a38:	xchg   esp,eax
  428a39:	inc    esp
  428a3a:	and    al,0xb4
  428a3c:	lods   eax,DWORD PTR ds:[esi]
  428a3d:	cmp    DWORD PTR [ebx],eax
  428a3f:	push   ss
  428a40:	in     al,0x0
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0xcd5af691
  428ac2:	in     eax,dx
  428ac3:	sub    al,0x7b
  428ac5:	scas   eax,DWORD PTR es:[edi]
  428ac6:	add    DWORD PTR [eax],eax
  428ac8:	cmc    
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    bl,al
  428acd:	mov    DWORD PTR [ecx+0x14],edx
  428ad0:	jp     0x428a77
  428ad2:	nop
  428ad3:	add    cl,BYTE PTR [ebx-0x28abc41]
  428ad9:	fcomi  st,st(5)
  428adb:	mov    eax,ds:0xa4447608
  428ae0:	cmp    eax,ebp
  428ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ae3:	jecxz  0x428adf
  428ae5:	in     eax,0xc1
  428ae7:	lods   eax,DWORD PTR ds:[esi]
  428ae8:	push   esi
  428ae9:	es dec ebp
  428aeb:	jl     0x428add
  428aed:	in     al,0xdc
  428aef:	aam    0x29
  428af1:	xor    BYTE PTR [ebx],bh
  428af3:	adc    BYTE PTR [esi-0x33],dl
  428af6:	pop    ebp
  428af7:	dec    esp
  428af8:	pop    esp
  428af9:	(bad)  
  428afb:	div    BYTE PTR [eax+0x2b]
  428afe:	ja     0x428b7b
  428b00:	pop    edi
  428b01:	icebp  
  428b02:	adc    bh,BYTE PTR [ebx+eiz*4-0x33]
  428b06:	scas   eax,DWORD PTR es:[edi]
  428b07:	sbb    bh,ah
  428b09:	mov    dl,0xf6
  428b0b:	ins    BYTE PTR es:[edi],dx
  428b0c:	repnz cmp edx,edx
  428b0f:	sti    
  428b10:	sbb    DWORD PTR [ebp+0x52],edx
  428b13:	adc    eax,0x730411e1
  428b18:	(bad)  
  428b19:	sbb    ax,0x6a70
  428b1d:	fwait
  428b1e:	and    DWORD PTR [edx+0x3ce25c8e],ebx
  428b24:	push   eax
  428b25:	xchg   esi,eax
  428b26:	xchg   edx,eax
  428b27:	stos   DWORD PTR es:[edi],eax
  428b28:	inc    edi
  428b29:	cs inc edi
  428b2b:	addr16 (bad) 
  428b2d:	(bad)  
  428b2e:	or     ah,BYTE PTR [ecx-0x4f]
  428b31:	clc    
  428b32:	pop    ss
  428b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b34:	mov    bh,0x19
  428b36:	ins    BYTE PTR es:[edi],dx
  428b37:	test   DWORD PTR [eax-0x5cdcb44a],0x721ded2f
  428b41:	jmp    0x7a35:0x53604349
  428b48:	out    0xe4,eax
  428b4a:	stos   DWORD PTR es:[edi],eax
  428b4b:	fst    st(5)
  428b4d:	push   ebx
  428b4e:	add    bh,BYTE PTR [edx]
  428b50:	(bad)  
  428b51:	and    eax,0x70e7ed5a
  428b56:	shl    ah,1
  428b58:	popf   
  428b59:	inc    ebx
  428b5a:	mov    eax,edi
  428b5c:	and    DWORD PTR [ecx-0x61],ecx
  428b5f:	pop    ebx
  428b60:	jbe    0x428b17
  428b62:	mov    gs,WORD PTR [eax+eiz*4+0x5da87579]
  428b69:	push   ds
  428b6a:	scas   eax,DWORD PTR es:[edi]
  428b6b:	cmp    eax,edx
  428b6d:	push   0xfffffff4
  428b6f:	inc    ebp
  428b70:	jmp    0x9797:0x3abc3fbd
  428b77:	push   ebx
  428b78:	add    al,0xe
  428b7a:	cmp    edi,edi
  428b7c:	mov    ecx,0x701ed261
  428b81:	dec    ebp
  428b82:	stos   BYTE PTR es:[edi],al
  428b83:	in     eax,0xd2
  428b85:	popf   
  428b86:	cmp    cl,al
  428b88:	cmc    
  428b89:	arpl   WORD PTR ds:0x7cdac134,dx
  428b8f:	out    0x7c,eax
  428b91:	inc    ecx
  428b92:	lahf   
  428b93:	call   0xaa9a12ae
  428b98:	outs   dx,DWORD PTR ds:[esi]
  428b99:	add    bh,ch
  428b9b:	outs   dx,DWORD PTR ds:[esi]
  428b9c:	paddsb mm0,QWORD PTR [ecx-0x18f1f2fb]
  428ba3:	mov    esi,0xcc85bb41
  428ba8:	jne    0x428b67
  428baa:	mov    ch,0xf2
  428bac:	pop    edx
  428bad:	inc    edx
  428bae:	scas   al,BYTE PTR es:[edi]
  428baf:	push   ds
  428bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428bb1:	dec    ebp
  428bb2:	xor    cl,BYTE PTR [edi-0x4ad4d0a9]
  428bb8:	and    ecx,DWORD PTR [eax+esi*4+0x4f]
  428bbc:	dec    edi
  428bbd:	loopne 0x428c1b
  428bbf:	and    bh,BYTE PTR [ebx+0x0]
	...
  428c32:	add    BYTE PTR [eax],al
  428c34:	mov    ds:0xf343b050,eax
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x3dd7a28f
  428c41:	sub    ecx,DWORD PTR [edi]
  428c43:	clc    
  428c44:	jo     0x428bf6
  428c46:	add    DWORD PTR [eax],eax
  428c48:	cmc    
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [edx+0x1c96b629],dl
  428c51:	repz mov eax,0x6d7548ba
  428c57:	scas   al,BYTE PTR es:[edi]
  428c58:	push   ss
  428c59:	(bad)  
  428c5a:	je     0x428cab
  428c5c:	mov    al,ds:0x88c8390d
  428c61:	adc    BYTE PTR [edi],0x19
  428c64:	push   ds
  428c65:	fldenv [bp+di+0x7de0]
  428c6a:	xor    eax,0xcf2c3939
  428c6f:	sbb    edi,DWORD PTR [edi]
  428c71:	mov    bh,0x4d
  428c73:	push   ebp
  428c74:	adc    edx,DWORD PTR [esp+edx*8+0x23]
  428c78:	xchg   BYTE PTR [esi],bl
  428c7a:	jnp    0x428c71
  428c7c:	mov    ebp,0x17a0decd
  428c81:	jge    0x428ccc
  428c83:	cdq    
  428c84:	mov    edx,0x28721819
  428c89:	inc    edi
  428c8a:	sub    DWORD PTR [esi+ecx*1],ecx
  428c8d:	test   DWORD PTR [eax+0x39],edx
  428c90:	mov    edi,0xbc4837c9
  428c95:	adc    al,0x64
  428c97:	fwait
  428c98:	pusha  
  428c99:	aad    0xc0
  428c9b:	sbb    al,0x35
  428c9d:	ins    BYTE PTR es:[edi],dx
  428c9e:	gs dec ecx
  428ca0:	and    BYTE PTR [ecx],dh
  428ca2:	inc    esi
  428ca3:	or     dl,cl
  428ca5:	std    
  428ca6:	inc    edi
  428ca7:	sub    bl,BYTE PTR [edx+ebp*2]
  428caa:	bound  esi,QWORD PTR [eax-0x63862542]
  428cb0:	ror    bl,1
  428cb2:	sbb    BYTE PTR [esi+0x5e],dh
  428cb5:	xor    DWORD PTR [edx+eiz*1-0xf3eaf6d],esp
  428cbc:	dec    esp
  428cbd:	inc    ebx
  428cbe:	jge    0x428c6c
  428cc0:	nop
  428cc1:	push   edi
  428cc2:	sbb    DWORD PTR [edi+0x5327949b],0xffffff99
  428cc9:	xchg   edi,eax
  428cca:	sar    BYTE PTR [esp+ebx*2],1
  428ccd:	sti    
  428cce:	icebp  
  428ccf:	mov    eax,0xdd02f62a
  428cd4:	xor    al,0x31
  428cd6:	test   DWORD PTR [ebx],ebx
  428cd8:	and    ah,BYTE PTR [ebx+edi*1+0x29]
  428cdc:	or     dl,dh
  428cde:	or     ch,al
  428ce0:	inc    ebp
  428ce1:	jae    0x428c66
  428ce3:	mov    esp,cs
  428ce5:	js     0x428d54
  428ce7:	and    al,0xc3
  428ce9:	push   esi
  428cea:	outs   dx,BYTE PTR ds:[esi]
  428ceb:	push   0xbdcc11eb
  428cf0:	mov    edx,0x74770da3
  428cf5:	pop    ss
  428cf6:	fmul   DWORD PTR [eax]
  428cf8:	test   BYTE PTR [esi],dh
  428cfa:	cli    
  428cfb:	push   ecx
  428cfc:	int3   
  428cfd:	mov    bl,ah
  428cff:	push   esp
  428d00:	or     eax,0xc1cf5ae4
  428d05:	mov    ebx,0x9e9f7727
  428d0a:	popa   
  428d0b:	aam    0xec
  428d0d:	push   es
  428d0e:	pop    esp
  428d0f:	ret    0x820d
  428d12:	ds cmp ebx,esi
  428d15:	dec    BYTE PTR [ebx]
  428d17:	mov    ds,WORD PTR [edx]
  428d19:	xor    DWORD PTR [edx-0x353d6ba0],0xe0e00a5d
  428d23:	out    0x28,eax
  428d25:	xchg   ebx,eax
  428d26:	in     al,0xe7
  428d28:	(bad)  
  428d29:	sbb    ah,BYTE PTR ds:[edx+ebp*4]
  428d2d:	jno    0x428da1
  428d2f:	ins    DWORD PTR es:[edi],dx
  428d30:	loop   0x428cc4
  428d32:	nop
  428d33:	repnz int3 
  428d35:	sti    
  428d36:	mov    ecx,0xf788f9c7
  428d3b:	jne    0x428d15
  428d3d:	fcmovbe st,st(1)
  428d3f:	mov    bh,0x13
	...
  428db1:	add    BYTE PTR [eax],al
  428db3:	add    BYTE PTR [eax+0x6d3c25f1],bh
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x49e9e59a
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    ah,dh
  428dcd:	or     al,0xe4
  428dcf:	ja     0x428ddf
  428dd1:	cmp    DWORD PTR [edx],edi
  428dd3:	inc    esp
  428dd4:	xor    dl,ch
  428dd6:	push   ds
  428dd7:	cmp    DWORD PTR [ebx+0x60],0x69
  428ddb:	hlt    
  428ddc:	aaa    
  428ddd:	sbb    eax,0xf426cf46
  428de2:	jp     0x428def
  428de4:	ds xchg ebx,eax
  428de6:	inc    edx
  428de7:	data16 add al,0xe6
  428dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428deb:	xchg   DWORD PTR [ebx+ebp*1-0x2b],ebx
  428def:	fisttp QWORD PTR [ecx]
  428df1:	(bad)  
  428df2:	xchg   DWORD PTR [edx],edi
  428df4:	ja     0x428e61
  428df6:	dec    ecx
  428df7:	sti    
  428df8:	loopne 0x428dc3
  428dfa:	xor    al,0x77
  428dfc:	xchg   ecx,eax
  428dfd:	cmp    BYTE PTR [edi-0x12],dh
  428e00:	mov    dh,0x67
  428e02:	adc    al,0xa2
  428e04:	call   0x8330:0x1d54d0a4
  428e0b:	pop    ecx
  428e0c:	fisub  WORD PTR [eax-0x868d92d]
  428e12:	test   eax,0x484c733b
  428e17:	sar    esi,0x86
  428e1a:	mov    al,0x69
  428e1c:	pop    es
  428e1d:	mov    ds:0x7e268f6d,al
  428e22:	push   eax
  428e23:	jbe    0x428dd4
  428e25:	fcomip st,st(4)
  428e27:	adc    bh,ah
  428e29:	push   ebp
  428e2a:	mov    bh,0xae
  428e2c:	inc    edi
  428e2d:	arpl   cx,bp
  428e2f:	xchg   DWORD PTR [esi-0x43],ecx
  428e32:	nop
  428e33:	dec    edi
  428e34:	out    dx,al
  428e35:	and    BYTE PTR [eax],ch
  428e37:	xor    eax,0x222c6d76
  428e3c:	push   cs
  428e3d:	pop    ebx
  428e3e:	mov    ds:0xb422250a,al
  428e43:	mov    ds:0x4b12946c,eax
  428e48:	pusha  
  428e49:	rcl    BYTE PTR [ecx-0x2d],1
  428e4c:	jo     0x428e1f
  428e4e:	dec    edx
  428e4f:	xchg   edx,eax
  428e50:	icebp  
  428e51:	push   esp
  428e52:	aaa    
  428e53:	inc    edx
  428e54:	in     al,0xe5
  428e56:	std    
  428e57:	sbb    ebp,DWORD PTR [ebx+ecx*2-0x6]
  428e5b:	sbb    DWORD PTR [ebx+ebx*2+0xa],ecx
  428e5f:	jne    0x428eb7
  428e61:	retf   0x8af2
  428e64:	jecxz  0x428e47
  428e66:	mov    ds:0x83bb4958,al
  428e6b:	dec    esi
  428e6c:	scas   eax,DWORD PTR es:[di]
  428e6e:	in     eax,dx
  428e6f:	jle    0x428e46
  428e71:	xchg   ecx,eax
  428e72:	or     ebx,DWORD PTR [ebp-0x133fd5b4]
  428e78:	fs or  al,0xc0
  428e7b:	nop
  428e7c:	sub    BYTE PTR [edx-0x27],al
  428e7f:	retf   0x9561
  428e82:	xor    ecx,ebx
  428e84:	loopne 0x428eb0
  428e86:	loopne 0x428e42
  428e88:	fs in  eax,0x42
  428e8b:	push   ds
  428e8c:	xor    ecx,ebp
  428e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e8f:	jno    0x428eb5
  428e91:	daa    
  428e92:	js     0x428e17
  428e94:	inc    esi
  428e95:	sub    edi,ebp
  428e97:	mov    edx,0xf55bf033
  428e9c:	inc    ebp
  428e9d:	xor    esi,DWORD PTR [ebp-0x65b61beb]
  428ea3:	mov    al,ds:0x24c6233c
  428ea8:	sti    
  428ea9:	sbb    al,0xe4
  428eab:	imul   eax,DWORD PTR [edi-0x33bbeade],0x778911d8
  428eb5:	push   edx
  428eb6:	mov    DWORD PTR [esi+0x1fec9e37],ecx
  428ebc:	mov    edi,0xa7844818
	...
  428f31:	add    BYTE PTR [eax],al
  428f33:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	jae    0x428f8d
  428f42:	shr    DWORD PTR [edx+ebx*2-0xafffe4e],cl
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [ebp+0x54],cl
  428f4e:	cmc    
  428f4f:	cmp    esi,edx
  428f51:	adc    eax,0xfc7a140e
  428f56:	xor    edx,esi
  428f58:	add    eax,0xb89f18aa
  428f5d:	jg     0x428f9d
  428f5f:	xor    esi,DWORD PTR [eax-0xa]
  428f62:	inc    edi
  428f63:	js     0x428f1a
  428f65:	cmp    ebp,DWORD PTR [ebx-0x61]
  428f68:	shl    BYTE PTR [eax-0x1f],1
  428f6b:	mov    al,ds:0xe7f52c35
  428f70:	imul   ecx,esp,0x23
  428f73:	adc    DWORD PTR [ebx-0x329e5da4],eax
  428f79:	xlat   BYTE PTR ds:[ebx]
  428f7a:	mov    eax,0xb17710c
  428f7f:	add    DWORD PTR [esi+eax*8+0x4e7e11e2],eax
  428f86:	repz push edi
  428f88:	inc    esp
  428f89:	fild   QWORD PTR [ecx-0x40]
  428f8c:	lds    eax,FWORD PTR [ecx]
  428f8e:	push   ds
  428f8f:	push   0xffffff8c
  428f91:	mov    al,0xa3
  428f93:	ins    DWORD PTR es:[edi],dx
  428f94:	add    eax,0x7a9b7df4
  428f99:	pusha  
  428f9a:	mov    al,ds:0x9afa5d4c
  428f9f:	mov    esi,DWORD PTR [ebx+0x77]
  428fa2:	xchg   edx,eax
  428fa3:	pop    edi
  428fa4:	or     ah,0xa7
  428fa7:	loop   0x428fe8
  428fa9:	lea    ecx,[eax-0x2]
  428fac:	(bad)  
  428fad:	rcl    BYTE PTR [eax-0x36],0x21
  428fb1:	sbb    DWORD PTR [ebx-0x65],ebx
  428fb4:	rcl    BYTE PTR es:[edi],1
  428fb7:	xor    al,0x94
  428fb9:	cs fmul st,st(1)
  428fbc:	mov    esp,DWORD PTR [esi]
  428fbe:	sbb    BYTE PTR [eax+0x12a42c6e],ch
  428fc4:	cmp    BYTE PTR [ebx-0xb],bh
  428fc7:	xchg   edx,eax
  428fc8:	push   ebx
  428fc9:	(bad)  [eax]
  428fcb:	cld    
  428fcc:	jecxz  0x429038
  428fce:	sbb    al,BYTE PTR [ebp+0x6ca7b06c]
  428fd4:	cmp    BYTE PTR [eax],ch
  428fd6:	out    dx,eax
  428fd7:	inc    ecx
  428fd8:	sbb    al,0x17
  428fda:	inc    esi
  428fdb:	add    bh,BYTE PTR es:[ebp-0x6f]
  428fdf:	xor    al,0xa8
  428fe1:	rcr    DWORD PTR [esi+0x0],0xcd
  428fe5:	imul   ebx,DWORD PTR [edx+0x52],0x39976e7e
  428fec:	int    0x33
  428fee:	dec    ebx
  428fef:	and    eax,0xa80644cc
  428ff4:	test   al,0x2b
  428ff6:	ss pop ebp
  428ff8:	aaa    
  428ff9:	call   FWORD PTR [eax+0x8]
  428ffc:	dec    ebp
  428ffd:	xchg   ebp,eax
  428ffe:	cmp    DWORD PTR [edx+ebp*1+0x244ab31f],edi
  429005:	lock hlt 
  429007:	outs   dx,DWORD PTR ds:[esi]
  429008:	enter  0x752e,0x69
  42900c:	jle    0x42905c
  42900e:	sub    al,0xe2
  429010:	adc    ebp,DWORD PTR [edi+ebp*2]
  429013:	cmp    DWORD PTR [esi],ebx
  429015:	add    eax,0xfefdea1d
  42901a:	data16 add cl,BYTE PTR [eax-0x34231435]
  429021:	xchg   DWORD PTR [edx],esi
  429023:	xchg   esp,eax
  429024:	inc    ebp
  429025:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  429027:	adc    esi,DWORD PTR [eax]
  429029:	xor    BYTE PTR [esi-0x4c],ah
  42902c:	dec    ecx
  42902d:	and    ch,BYTE PTR [edx-0x1b2ec80a]
  429033:	pop    esi
  429034:	icebp  
  429035:	inc    edi
  429036:	and    BYTE PTR [edx],bh
  429038:	es ret 0xfed2
  42903c:	js     0x429017
  42903e:	mov    bh,0x87
  429040:	push   edx
	...
  4290b1:	add    BYTE PTR [eax],al
  4290b3:	add    bh,bl
  4290b5:	out    dx,al
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x54b66cf7
  4290c1:	push   ebx
  4290c2:	xchg   ebp,ecx
  4290c4:	dec    edi
  4290c5:	mov    bl,0x1
  4290c7:	add    ch,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [esi],ch
  4290cd:	in     al,dx
  4290ce:	sub    eax,0x89e9f070
  4290d3:	das    
  4290d4:	xor    eax,0x98b47e96
  4290d9:	mov    eax,ds:0xa28c5997
  4290de:	in     eax,dx
  4290df:	push   esi
  4290e0:	ss je  0x4290c9
  4290e3:	push   ebp
  4290e4:	scas   eax,DWORD PTR es:[edi]
  4290e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290e6:	xor    al,0xf1
  4290e8:	daa    
  4290e9:	sub    esi,ecx
  4290eb:	test   BYTE PTR [ebx+0x47d6adfd],al
  4290f1:	xchg   edx,eax
  4290f2:	push   ecx
  4290f3:	rol    BYTE PTR [ebp+0x54],1
  4290f6:	jge    0x42915d
  4290f8:	ja     0x429100
  4290fa:	in     al,0x5d
  4290fc:	loop   0x4290d5
  4290fe:	in     al,dx
  4290ff:	pop    esi
  429100:	jp     0x42912e
  429102:	add    BYTE PTR [eax+0x56],al
  429105:	arpl   WORD PTR [ebp+0x640627b0],si
  42910b:	push   edi
  42910c:	push   es
  42910d:	jae    0x42912d
  42910f:	out    0x59,al
  429111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429112:	lahf   
  429113:	repnz in al,0xb5
  429116:	or     dl,dl
  429118:	jmp    0xe18eeb0e
  42911d:	pop    ecx
  42911e:	and    BYTE PTR [edi],cl
  429120:	fwait
  429121:	data16 jge 0x429142
  429124:	into   
  429125:	pop    eax
  429126:	(bad)  
  429127:	data16 xor bh,bl
  42912a:	add    edx,DWORD PTR [esi]
  42912c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42912d:	adc    DWORD PTR [esi-0x59f37fb6],ebp
  429133:	inc    esi
  429134:	adc    bh,bh
  429136:	jmp    0xf16b:0x1f60d9da
  42913d:	popf   
  42913e:	fnstcw WORD PTR [edx+0x17b92930]
  429144:	mov    bl,0xfa
  429146:	mov    ?,ebp
  429148:	pop    ebp
  429149:	(bad)  
  42914a:	mov    al,ds:0x70e71737
  42914f:	call   FWORD PTR [edx+0x48]
  429152:	or     DWORD PTR [ebx-0x1b],esi
  429155:	not    bl
  429157:	sbb    eax,0x1b73884a
  42915c:	xor    cl,dh
  42915e:	xor    cl,ch
  429160:	lods   eax,DWORD PTR ds:[esi]
  429161:	jmp    0x327a3d0f
  429166:	retf   
  429167:	lahf   
  429168:	mov    eax,0xed056500
  42916d:	stc    
  42916e:	mov    ?,WORD PTR [edi]
  429170:	loopne 0x429112
  429172:	bound  eax,QWORD PTR [edi+ebp*8]
  429175:	push   eax
  429176:	imul   ecx,DWORD PTR [ecx+0x2d],0x2c08924e
  42917d:	jnp    0x429136
  42917f:	call   0x8b5e0345
  429184:	loop   0x429138
  429186:	pop    eax
  429187:	sar    ecx,0x3b
  42918a:	ret    
  42918b:	outs   dx,BYTE PTR ds:[esi]
  42918c:	inc    esp
  42918d:	dec    ecx
  42918e:	inc    ebx
  42918f:	test   BYTE PTR [esi-0xb],0xde
  429193:	test   eax,0x67da9abf
  429198:	mov    es,edi
  42919a:	inc    ecx
  42919b:	add    dh,0xf0
  42919e:	adc    eax,0x3266d414
  4291a3:	xchg   ebx,eax
  4291a4:	jecxz  0x4291d7
  4291a6:	bound  esi,QWORD PTR [esi+0x17]
  4291a9:	cli    
  4291aa:	int    0x2d
  4291ac:	push   cs
  4291ad:	adc    eax,0x29558629
  4291b2:	cli    
  4291b3:	mov    esp,0x2bbd0f1c
  4291b8:	pop    ss
  4291b9:	cmp    eax,0xaf860b1d
  4291be:	loop   0x4291a8
  4291c0:	(bad)  
	...
  429231:	add    BYTE PTR [eax],al
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	(bad)  
  429241:	ss scas eax,DWORD PTR es:[edi]
  429243:	rol    DWORD PTR [esp+esi*4+0x1],0x0
  429248:	cmc    
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [ecx-0x31],ch
  42924e:	xor    eax,0x306845ff
  429253:	inc    esp
  429254:	call   0x554d8739
  429259:	cmp    BYTE PTR gs:[eax-0x7e],0x14
  42925e:	jp     0x42921f
  429260:	push   edi
  429261:	nop
  429262:	xor    DWORD PTR [esi-0x3d646aed],0xc1aee5ef
  42926c:	jno    0x42922b
  42926e:	mov    dl,0x9a
  429270:	jecxz  0x429267
  429272:	inc    BYTE PTR [ecx]
  429274:	or     bl,BYTE PTR [edi]
  429276:	cwde   
  429277:	iret   
  429278:	movd   mm2,DWORD PTR [edi+0x4c062b16]
  42927f:	mov    WORD PTR [edi-0x1b],?
  429282:	aaa    
  429283:	retf   
  429284:	rol    BYTE PTR [edx],cl
  429286:	inc    ebp
  429287:	outs   dx,DWORD PTR ds:[esi]
  429288:	dec    edx
  429289:	stos   BYTE PTR es:[edi],al
  42928a:	sbb    al,0x67
  42928c:	sbb    DWORD PTR [edx-0x16],ecx
  42928f:	sar    BYTE PTR [ebp-0x3728947c],1
  429295:	mov    ecx,ebp
  429297:	dec    ebp
  429298:	mov    eax,0xabd00fa3
  42929d:	je     0x429301
  42929f:	mov    ebx,0x3cc0bbaf
  4292a4:	test   BYTE PTR [esi+0x27e9d558],al
  4292aa:	jbe    0x42930d
  4292ac:	popf   
  4292ad:	add    ah,al
  4292af:	add    al,0xd4
  4292b1:	push   edi
  4292b2:	test   BYTE PTR ds:0xa9a7cecd,0x90
  4292b9:	push   esp
  4292ba:	mov    dh,0x4f
  4292bc:	mov    ecx,0xb25e80ae
  4292c1:	icebp  
  4292c2:	sub    al,0xa6
  4292c4:	mov    ah,0x7c
  4292c6:	mov    ds:0x7dca75ee,al
  4292cb:	(bad)  
  4292cc:	cmp    al,0x7a
  4292ce:	nop
  4292cf:	cdq    
  4292d0:	stos   DWORD PTR es:[edi],eax
  4292d1:	(bad)  
  4292d2:	xor    eax,0x78535519
  4292d7:	jge    0x429336
  4292d9:	mov    ds:0x26116c24,eax
  4292de:	test   eax,0x25e13a1
  4292e3:	jne    0x42930b
  4292e5:	movups xmm7,xmm6
  4292e8:	daa    
  4292e9:	enter  0x72bf,0x3a
  4292ed:	aad    0x4f
  4292ef:	bound  edi,QWORD PTR [eax-0x59]
  4292f2:	cld    
  4292f3:	fidivr WORD PTR [ebx+0x22cbb408]
  4292f9:	xchg   edx,eax
  4292fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4292fb:	push   ebp
  4292fc:	dec    edi
  4292fd:	jno    0x4292d9
  4292ff:	jecxz  0x4292ad
  429301:	cmp    ebx,DWORD PTR [eax]
  429303:	adc    esi,esi
  429305:	je     0x4292de
  429307:	and    BYTE PTR [edx+0x3b],0x8a
  42930b:	inc    esi
  42930c:	pop    esi
  42930d:	sahf   
  42930e:	jg     0x429355
  429310:	or     eax,0xc37be9ed
  429315:	jo     0x4292ef
  429317:	sbb    al,dl
  429319:	stos   DWORD PTR es:[edi],eax
  42931a:	mov    ecx,0x42ad673d
  42931f:	std    
  429320:	fiadd  WORD PTR [ecx]
  429322:	jmp    0x4292e6
  429324:	jbe    0x429358
  429326:	xchg   BYTE PTR [esi],bh
  429328:	xor    DWORD PTR [eax],ebp
  42932a:	xchg   ebp,eax
  42932b:	push   esi
  42932c:	int    0xca
  42932e:	inc    ebx
  42932f:	xchg   esp,eax
  429330:	cli    
  429331:	fs pop esi
  429333:	mov    cl,0xf1
  429335:	xor    eax,0x5382c903
  42933a:	sbb    dh,bh
  42933c:	xchg   ecx,eax
  42933d:	or     DWORD PTR [esi],edi
  42933f:	cwde   
  429340:	ret    
	...
  4293b1:	add    BYTE PTR [eax],al
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	fist   WORD PTR [edx]
  4293c2:	daa    
  4293c3:	mov    al,ds:0x1b539
  4293c8:	cmc    
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    BYTE PTR [ecx-0x79],cl
  4293ce:	jle    0x4293b4
  4293d0:	add    edi,DWORD PTR [eax-0x42]
  4293d3:	xor    DWORD PTR [ebp+0x48],esp
  4293d6:	int3   
  4293d7:	cmp    al,0xb2
  4293d9:	ret    0x5e82
  4293dc:	aad    0x6c
  4293de:	cdq    
  4293df:	nop
  4293e0:	jge    0x429395
  4293e2:	xor    DWORD PTR [ebp-0x4c],edx
  4293e5:	inc    edi
  4293e6:	dec    esp
  4293e7:	cmp    DWORD PTR [ecx-0x1aa7b6a],ebp
  4293ed:	arpl   WORD PTR [eax+0x8],dx
  4293f0:	inc    edx
  4293f1:	call   0x24810440
  4293f6:	pop    edx
  4293f7:	inc    ecx
  4293f8:	rcr    BYTE PTR [esi+0xe],1
  4293fb:	imul   ebp,DWORD PTR [edi],0x8
  4293fe:	jle    0x42945c
  429400:	push   cs
  429401:	test   al,0xb2
  429403:	imul   ebx,DWORD PTR [edi+0x6247e4ee],0xe3c532f8
  42940d:	jnp    0x429451
  42940f:	fwait
  429410:	push   edx
  429411:	aad    0x9d
  429413:	sbb    al,0xbe
  429415:	stos   DWORD PTR es:[edi],eax
  429416:	scas   eax,DWORD PTR es:[edi]
  429417:	lea    esp,[edi-0x64]
  42941a:	es mov edx,0xd2468db7
  429420:	imul   esp,DWORD PTR [edi+0x33e73a1e],0xb4997420
  42942a:	aas    
  42942b:	ja     0x42945b
  42942d:	mov    DWORD PTR [esp+ebx*2-0x8],ebp
  429431:	jmp    0xb98e2d61
  429436:	pop    esi
  429437:	mov    dh,0xe6
  429439:	lods   eax,DWORD PTR ds:[esi]
  42943a:	scas   al,BYTE PTR es:[edi]
  42943b:	std    
  42943c:	pop    ebp
  42943d:	js     0x4294bb
  42943f:	cs aam 0x55
  429442:	mov    ebp,esi
  429444:	push   es
  429445:	out    0x41,al
  429447:	ins    DWORD PTR es:[edi],dx
  429448:	jmp    0x429450
  42944a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42944b:	xor    al,0xf4
  42944d:	jecxz  0x429493
  42944f:	mov    ecx,0xa3557f55
  429454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429455:	inc    edi
  429456:	mov    eax,0xf4c26349
  42945b:	cmc    
  42945c:	arpl   WORD PTR [esi],si
  42945e:	sub    eax,0xd6bceae
  429463:	mov    ds:0xf6cad3ea,eax
  429468:	xchg   DWORD PTR [edx+0x4cdea033],eax
  42946e:	push   esp
  42946f:	mov    ebx,0x886d1bb3
  429474:	dec    esi
  429475:	xor    eax,0x145f0e7a
  42947a:	pop    ds
  42947b:	mov    ebx,0xc9165364
  429480:	adc    al,BYTE PTR [ebp+ebx*1+0x50d38669]
  429487:	test   DWORD PTR [si-0x5e],eax
  42948b:	(bad)  
  42948d:	mov    ebp,0x21d8f32f
  429492:	addr16 inc edx
  429494:	bound  edi,QWORD PTR [esi+0x5ec6e27a]
  42949a:	aas    
  42949b:	loopne 0x429515
  42949d:	pop    ecx
  42949e:	out    dx,eax
  42949f:	sub    eax,0x7c8aace
  4294a4:	aam    0x53
  4294a6:	sar    esi,cl
  4294a8:	mov    ds:0x35b42055,al
  4294ad:	mov    eax,ss
  4294af:	in     al,0x3d
  4294b1:	push   esp
  4294b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294b3:	cmp    al,0x11
  4294b5:	pop    ebp
  4294b6:	ror    BYTE PTR [bx+di],1
  4294b9:	jmp    0x2baf308c
  4294be:	psllq  mm1,mm7
	...
  429531:	add    BYTE PTR [eax],al
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x7df3c4f3
  429542:	lahf   
  429543:	fild   QWORD PTR [esi]
  429545:	mov    dh,0x1
  429547:	add    ch,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [edi-0x2e],ah
  42954e:	arpl   WORD PTR [ebx+0x11],cx
  429551:	ins    DWORD PTR es:[di],dx
  429553:	jge    0x429595
  429555:	jne    0x42955b
  429557:	daa    
  429558:	xchg   ebp,eax
  429559:	sub    eax,0x7df7f1a0
  42955e:	inc    edx
  42955f:	shl    BYTE PTR [esi],1
  429561:	imul   esp,DWORD PTR [ecx+0x653ed603],0x19
  429568:	int3   
  429569:	and    BYTE PTR [ebp+0x6b08aa03],dh
  42956f:	mov    edx,0x2db69f70
  429574:	inc    ebx
  429575:	xchg   edi,eax
  429576:	pop    edi
  429577:	mov    esi,0xf8a039d9
  42957c:	sbb    al,0x26
  42957e:	rcr    ebx,0x79
  429581:	sub    eax,0x70ee9fee
  429586:	dec    esp
  429587:	loope  0x429542
  429589:	xchg   ebx,eax
  42958a:	in     al,dx
  42958b:	jge    0x42953a
  42958d:	xor    DWORD PTR [esi],ebp
  42958f:	(bad)  
  429590:	hlt    
  429591:	fiadd  WORD PTR [esi+edx*8-0x53]
  429595:	retf   0x3a44
  429598:	cmp    DWORD PTR [edx+0x127a3100],0xffffffdb
  42959f:	inc    ebp
  4295a0:	inc    BYTE PTR [edi]
  4295a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295a3:	and    edi,DWORD PTR [esi]
  4295a5:	outs   dx,DWORD PTR ds:[esi]
  4295a6:	in     eax,dx
  4295a7:	and    ecx,edi
  4295a9:	sbb    bl,bl
  4295ab:	pusha  
  4295ac:	test   BYTE PTR [eax],bl
  4295ae:	mov    ebx,es
  4295b0:	xor    bh,BYTE PTR [eax-0x602bfa74]
  4295b6:	popa   
  4295b7:	clc    
  4295b8:	jb     0x4295e6
  4295ba:	pop    eax
  4295bb:	adc    eax,0x32c9df7
  4295c0:	fs push ss
  4295c2:	push   0x91beac1b
  4295c7:	leave  
  4295c8:	(bad)  
  4295ca:	cmp    eax,0x3f8638d1
  4295cf:	mov    DWORD PTR [ecx],edx
  4295d1:	sbb    eax,0xce7e9995
  4295d6:	sub    cl,al
  4295d8:	xor    al,0x6d
  4295da:	adc    DWORD PTR ds:0x1d1f8110,0x7d6dedd1
  4295e4:	shl    dh,0x97
  4295e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295e8:	dec    ebx
  4295e9:	sbb    al,0xe1
  4295eb:	adc    bl,BYTE PTR [ecx+0x5d7bacfc]
  4295f1:	sub    BYTE PTR [ebx-0x328b4ab5],ch
  4295f7:	adc    DWORD PTR [edi+esi*2-0x7e],0xdbd25ee1
  4295ff:	or     al,0x7
  429601:	je     0x42961f
  429603:	mov    eax,ds:0x6f2ebd65
  429608:	jle    0x4295f2
  42960a:	test   ebp,edx
  42960c:	add    al,0xc3
  42960e:	out    0xea,eax
  429610:	pop    edi
  429611:	jno    0x4295d3
  429613:	lea    ecx,[ecx+edi*2]
  429616:	cmp    ch,ch
  429618:	mov    dl,0x5b
  42961a:	ss sbb al,0xf8
  42961d:	addr16 add al,0x8a
  429620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429621:	xchg   ebp,eax
  429622:	inc    edi
  429623:	jo     0x4295fb
  429625:	out    0xf,eax
  429627:	xchg   ebx,eax
  429628:	mov    dl,cl
  42962a:	pop    ebx
  42962b:	dec    ebx
  42962c:	cld    
  42962d:	(bad)  
  42962e:	mov    ebx,0x5a0013f5
  429633:	jne    0x42960e
  429635:	xchg   esp,eax
  429636:	xor    esi,DWORD PTR [edi]
  429638:	sbb    BYTE PTR ds:0x4a6f24b8,bh
  42963e:	daa    
  42963f:	sbb    BYTE PTR [ebp+0x0],ah
	...
  4296b1:	add    BYTE PTR [eax],al
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	ficomp WORD PTR [eax]
  4296c2:	(bad)  
  4296c3:	push   ebx
  4296c4:	and    esi,DWORD PTR [edi+0xf50001]
  4296ca:	add    BYTE PTR [eax],al
  4296cc:	xor    DWORD PTR [edx-0x26],esi
  4296cf:	outs   dx,DWORD PTR ds:[esi]
  4296d0:	mov    ah,0xa
  4296d2:	pop    eax
  4296d3:	retf   
  4296d4:	aam    0x7f
  4296d6:	sub    esi,esi
  4296d8:	ss aaa 
  4296da:	add    eax,0xa1cb220c
  4296df:	jmp    0x1c26:0x7824089
  4296e6:	data16 mov bh,0x4d
  4296e9:	aaa    
  4296ea:	call   0xaae6e1af
  4296ef:	neg    ebp
  4296f1:	aam    0xa0
  4296f3:	ror    DWORD PTR [ecx],0x8f
  4296f6:	adc    al,0x13
  4296f8:	jp     0x429696
  4296fa:	fidiv  DWORD PTR [eax-0x106433f4]
  429700:	ds or  edx,ebx
  429703:	ins    DWORD PTR es:[edi],dx
  429704:	xchg   esp,eax
  429705:	test   BYTE PTR [edi+0x1b],dh
  429708:	jmp    0xd1304ab3
  42970d:	and    DWORD PTR [edx-0x63e36c31],esi
  429713:	mov    eax,0xccb3379
  429718:	push   edi
  429719:	repz sahf 
  42971b:	mov    ah,0x94
  42971d:	sbb    al,bh
  42971f:	jmp    0xd0c7:0x1242236e
  429726:	pushf  
  429727:	sub    BYTE PTR [edi+edx*2],dh
  42972a:	pop    es
  42972b:	or     eax,DWORD PTR [edi-0x2700af46]
  429731:	or     bh,ah
  429733:	pusha  
  429734:	mov    ebx,0xf56663b4
  429739:	mov    ecx,0x4c812655
  42973e:	push   edi
  42973f:	xor    bh,al
  429741:	lods   al,BYTE PTR ds:[esi]
  429742:	push   cs
  429743:	and    BYTE PTR [ebx],bh
  429745:	inc    edi
  429746:	dec    ecx
  429747:	shl    BYTE PTR [ecx+0x53b87a6e],cl
  42974d:	or     eax,0xe769eb38
  429752:	push   0x421f62b4
  429757:	adc    eax,0x1b265727
  42975c:	push   ebx
  42975d:	(bad)  
  42975e:	das    
  42975f:	dec    esp
  429760:	int3   
  429761:	rol    DWORD PTR [eax+0x13],cl
  429764:	cmp    esp,DWORD PTR [ebx]
  429766:	(bad)  
  429767:	in     al,0xf8
  429769:	adc    ah,BYTE PTR [esi+0x5f]
  42976c:	push   ebp
  42976d:	adc    cl,ah
  42976f:	clc    
  429770:	cs js  0x4297ae
  429773:	(bad)  
  429774:	push   ebp
  429775:	or     al,0x72
  429777:	push   es
  429778:	jge    0x429735
  42977a:	mov    ds:0x7850c2d7,eax
  42977f:	popa   
  429780:	inc    edi
  429781:	cmp    eax,0x39a226d6
  429786:	loope  0x429788
  429788:	test   DWORD PTR [edx-0x54],ebx
  42978b:	xchg   esp,eax
  42978c:	adc    eax,0x1b1154f6
  429791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429792:	(bad)  
  429793:	jae    0x4297df
  429795:	outs   dx,BYTE PTR ds:[esi]
  429796:	retf   0x3bdf
  429799:	push   edx
  42979a:	stc    
  42979b:	es cmp bh,al
  42979e:	test   eax,0xefaeb229
  4297a3:	dec    esp
  4297a4:	fisubr DWORD PTR [edi-0x3efee3c1]
  4297aa:	js     0x42981d
  4297ac:	jp     0x429739
  4297ae:	push   cs
  4297af:	ss loop 0x42981d
  4297b2:	int3   
  4297b3:	lahf   
  4297b4:	out    0x3,eax
  4297b6:	loop   0x4297aa
  4297b8:	sub    edx,DWORD PTR [eax+0x20]
  4297bb:	xchg   edi,eax
  4297bc:	inc    esp
  4297bd:	cmp    cl,BYTE PTR [ebx+0x46]
  4297c0:	push   edi
	...
  429831:	add    BYTE PTR [eax],al
  429833:	add    BYTE PTR [esi],ah
  429835:	jp     0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [esp+ebx*8],ecx
  429842:	leave  
  429843:	cmp    DWORD PTR [eax],ebx
  429845:	mov    eax,0xf50001
  42984a:	add    BYTE PTR [eax],al
  42984c:	push   ecx
  42984d:	es out 0x7f,eax
  429850:	xchg   esi,eax
  429851:	das    
  429852:	xchg   edx,eax
  429853:	lods   al,BYTE PTR ds:[esi]
  429854:	jns    0x4298c4
  429856:	cli    
  429857:	and    al,0x9b
  429859:	add    eax,DWORD PTR [esi+0x2e4789b4]
  42985f:	jnp    0x4298e0
  429861:	(bad)  
  429862:	jmp    0x4298ad
  429864:	idiv   dh
  429866:	test   eax,0x2255e9ae
  42986b:	les    ebp,FWORD PTR [ebx+0x26]
  42986e:	fadd   QWORD PTR [ecx+0x3e4ba902]
  429874:	leave  
  429875:	jmp    0x25fd:0xd41ff587
  42987c:	or     al,0xf0
  42987e:	add    DWORD PTR [eax+0x4f],ecx
  429881:	cmc    
  429882:	mov    ah,0xcc
  429884:	not    al
  429886:	cli    
  429887:	add    BYTE PTR [esi+0x7fbce768],bl
  42988d:	js     0x4298c8
  42988f:	(bad)  
  429890:	idiv   DWORD PTR [ebx+0x7]
  429893:	mov    eax,ds:0x268fb0b0
  429898:	jp     0x429879
  42989a:	add    eax,0x22858cd0
  42989f:	mov    al,0xcd
  4298a1:	aas    
  4298a2:	mov    ecx,0x23be1c52
  4298a7:	ficomp DWORD PTR [eax+ebx*4]
  4298aa:	out    dx,eax
  4298ab:	sub    eax,0x148352d5
  4298b0:	mov    ecx,0x9dcafd03
  4298b5:	iret   
  4298b6:	sub    al,0x5c
  4298b8:	sub    ch,BYTE PTR [edi]
  4298ba:	inc    DWORD PTR [ebx]
  4298bc:	adc    eax,0x3cbbf6ca
  4298c1:	push   edx
  4298c2:	xchg   esp,eax
  4298c3:	xchg   edx,eax
  4298c4:	clc    
  4298c5:	inc    esi
  4298c6:	dec    ecx
  4298c7:	arpl   bx,di
  4298c9:	leave  
  4298ca:	call   0x37a46125
  4298cf:	cwde   
  4298d0:	fincstp 
  4298d2:	jo     0x4c476f40
  4298d8:	and    ebp,0x9ced9de4
  4298de:	jno    0x429932
  4298e0:	mov    cl,0xdb
  4298e2:	push   ds
  4298e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298e4:	or     BYTE PTR [ecx-0x3d9d6461],0xa7
  4298eb:	fisub  DWORD PTR [ebx]
  4298ed:	les    ecx,FWORD PTR [ecx+0x4aae130]
  4298f3:	jp     0x4298bd
  4298f5:	or     al,0xe7
  4298f7:	xchg   edx,eax
  4298f8:	or     DWORD PTR [edx+esi*2-0x60c08056],edi
  4298ff:	pop    ebx
  429900:	adc    edi,edi
  429902:	mov    esp,0x1b912f2a
  429907:	pop    edx
  429908:	ror    BYTE PTR [edi],0x53
  42990b:	into   
  42990c:	fs xchg ebp,eax
  42990e:	test   al,0xa2
  429910:	mov    dl,0xf7
  429912:	xchg   esi,eax
  429913:	mov    eax,0x87be1e3a
  429918:	add    DWORD PTR [eax],0x3d
  42991b:	jl     0x429943
  42991d:	daa    
  42991e:	xchg   BYTE PTR [ecx],dh
  429920:	daa    
  429921:	cld    
  429922:	xchg   dh,bh
  429924:	mov    eax,0xef569cc9
  429929:	push   ecx
  42992a:	sub    ah,0x18
  42992d:	jp     0x4298b3
  42992f:	mov    esi,0x293df8ab
  429934:	pop    eax
  429935:	jge    0x429910
  429937:	in     al,dx
  429938:	ins    DWORD PTR es:[edi],dx
  429939:	ret    
  42993a:	call   0x9f98254
  42993f:	pusha  
  429940:	and    eax,DWORD PTR [eax]
	...
  4299b2:	add    BYTE PTR [eax],al
  4299b4:	dec    ebp
  4299b5:	or     al,0xf8
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR ds:0xd327aac,ebp
  4299c5:	mov    ecx,0xf50001
  4299ca:	add    BYTE PTR [eax],al
  4299cc:	test   al,0xfb
  4299ce:	js     0x429a3a
  4299d0:	rcr    BYTE PTR [ecx+0x4fcf5149],1
  4299d6:	push   ebp
  4299d7:	data16 jl 0x429a0c
  4299da:	mul    DWORD PTR [edi-0x4e4522d4]
  4299e0:	mov    cl,0x82
  4299e2:	lods   eax,DWORD PTR ds:[esi]
  4299e3:	or     esp,DWORD PTR [ecx-0x5704c200]
  4299e9:	inc    ecx
  4299ea:	adc    DWORD PTR [esi],edi
  4299ec:	xchg   BYTE PTR [eax+0x3a],al
  4299ef:	shl    DWORD PTR ds:0xb7b2ad42,1
  4299f5:	pop    ebp
  4299f6:	cmp    al,0x3b
  4299f8:	test   eax,0xa91f0b79
  4299fd:	sahf   
  4299fe:	mov    eax,ds:0x2b91bfbe
  429a03:	pop    esi
  429a04:	mov    eax,0xe5d47ecd
  429a09:	mov    al,0x93
  429a0b:	push   ebx
  429a0c:	inc    ecx
  429a0d:	pop    es
  429a0e:	xor    BYTE PTR [edx-0x7a],dl
  429a11:	cmp    edi,edi
  429a13:	jnp    0x429a4c
  429a15:	adc    bl,bl
  429a17:	retf   0x829
  429a1a:	jmp    0x1a43:0x69569afb
  429a21:	mov    dl,0x90
  429a23:	mov    bl,0x9d
  429a25:	or     DWORD PTR [eax+0x4223df99],ebp
  429a2b:	xchg   BYTE PTR [ebx+0x70],dh
  429a2e:	push   ebx
  429a2f:	ja     0x429a91
  429a31:	fild   DWORD PTR [esi+0x19]
  429a34:	cmp    al,0x21
  429a36:	(bad)  
  429a37:	into   
  429a38:	dec    eax
  429a39:	std    
  429a3a:	xchg   ecx,eax
  429a3b:	ror    BYTE PTR ds:0xaa145f78,0x74
  429a42:	push   ebx
  429a43:	mov    WORD PTR ds:0x999b8fa9,gs
  429a49:	fwait
  429a4a:	and    BYTE PTR [edi+0x6ba9d276],dh
  429a50:	popa   
  429a51:	enter  0x1cc2,0xf3
  429a55:	xor    BYTE PTR [ebp-0x61bad530],al
  429a5b:	xchg   edx,eax
  429a5c:	cmp    eax,0x28c9b7eb
  429a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a62:	sbb    bl,BYTE PTR [ebp+0x35f5a820]
  429a68:	xor    al,0xe7
  429a6a:	iret   
  429a6b:	test   eax,0x2d0103f7
  429a70:	add    DWORD PTR [ebx+ecx*4+0x8],edi
  429a74:	push   ecx
  429a75:	mov    ebx,0x9a34c544
  429a7a:	sar    BYTE PTR [ebx],1
  429a7c:	push   ebx
  429a7d:	into   
  429a7e:	idiv   BYTE PTR [ebp+0x221879e9]
  429a84:	xchg   ecx,eax
  429a85:	bound  ebx,QWORD PTR [edx+edx*4+0x48]
  429a89:	addr16 aas 
  429a8b:	test   BYTE PTR [ebx-0xb],bl
  429a8e:	add    BYTE PTR [eax+0x22],al
  429a91:	mov    esi,esi
  429a93:	pop    ecx
  429a94:	sub    al,0xb5
  429a96:	adc    al,0x55
  429a98:	(bad)  
  429a99:	cld    
  429a9a:	retf   0xf4f0
  429a9d:	mov    esp,?
  429a9f:	fld    QWORD PTR [eax-0x2e13787f]
  429aa5:	mov    bl,0xa1
  429aa7:	jb     0x429a64
  429aa9:	mov    ebx,0xed8501b3
  429aae:	bts    DWORD PTR [ebp-0x126de3d5],ebp
  429ab5:	fs mov ebp,0xb81a2b02
  429abb:	push   cs
  429abc:	or     edx,DWORD PTR es:[edx+0x69]
  429ac0:	or     eax,DWORD PTR [eax]
	...
  429b32:	add    BYTE PTR [eax],al
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0xfd73
  429b42:	clc    
  429b43:	jge    0x429b47
  429b45:	mov    edx,0xf50001
  429b4a:	add    BYTE PTR [eax],al
  429b4c:	in     eax,0x73
  429b4e:	xor    BYTE PTR [eax+0x6f],ah
  429b51:	cmp    BYTE PTR [edx-0x1a8a9fe5],0x6b
  429b58:	jge    0x429adc
  429b5a:	daa    
  429b5b:	pop    DWORD PTR [ebx-0x65cc22a7]
  429b61:	adc    BYTE PTR [ecx-0x46411936],dh
  429b67:	jns    0x429b15
  429b69:	imul   esp,DWORD PTR [esi+0x72230099],0x9a2a34a2
  429b73:	scas   al,BYTE PTR es:[edi]
  429b74:	jnp    0x429b3e
  429b76:	mov    al,0x6e
  429b78:	and    bl,BYTE PTR [edx]
  429b7a:	out    0xe4,eax
  429b7c:	fisubr WORD PTR [eax-0x80]
  429b7f:	cmp    eax,0x32c95877
  429b84:	sti    
  429b85:	or     DWORD PTR [edx-0x25],0x673e3b1c
  429b8c:	sub    al,BYTE PTR [eax+edi*8]
  429b8f:	add    DWORD PTR ds:[eax],edi
  429b92:	and    DWORD PTR [edx-0x47],ebx
  429b95:	jbe    0x6acf7b11
  429b9b:	stos   DWORD PTR es:[edi],eax
  429b9c:	in     al,0xad
  429b9e:	into   
  429b9f:	outs   dx,BYTE PTR ds:[esi]
  429ba0:	mov    al,0x2
  429ba2:	int    0x76
  429ba4:	fnstsw WORD PTR [edx-0x21]
  429ba7:	add    DWORD PTR [edi+ebx*4-0x50],ebp
  429bab:	sbb    al,BYTE PTR [ebx-0x26a64347]
  429bb1:	xchg   ebx,eax
  429bb2:	loope  0x429c32
  429bb4:	aaa    
  429bb5:	loope  0x429b3f
  429bb7:	xchg   BYTE PTR [ebx],cl
  429bb9:	jae    0x429bdd
  429bbb:	test   al,0x93
  429bbd:	add    BYTE PTR [ebx-0x7a],cl
  429bc0:	jecxz  0x429c34
  429bc2:	shr    BYTE PTR [eax-0x1148b8ce],cl
  429bc8:	xchg   edi,eax
  429bc9:	dec    eax
  429bca:	out    0x46,eax
  429bcc:	cmp    al,0xba
  429bce:	xor    eax,0xa11ff574
  429bd3:	dec    edi
  429bd4:	dec    ebp
  429bd5:	loop   0x429bd8
  429bd7:	shr    DWORD PTR [ecx+0x11020283],cl
  429bdd:	cwde   
  429bde:	pop    eax
  429bdf:	in     eax,0x30
  429be1:	jns    0x429c2f
  429be3:	push   0x30
  429be5:	fstp   QWORD PTR [eax+0x5d]
  429be8:	enter  0x257d,0x2b
  429bec:	fld    QWORD PTR [eax]
  429bef:	jo     0x429b97
  429bf1:	sbb    al,0x3f
  429bf3:	dec    esi
  429bf4:	sbb    al,0x5
  429bf6:	loope  0x429bc0
  429bf8:	xchg   edi,eax
  429bf9:	add    eax,0x5ea0b5a2
  429bfe:	adc    al,0xb4
  429c00:	sub    ah,BYTE PTR [edi]
  429c02:	repz xchg edi,eax
  429c04:	xor    al,0x52
  429c06:	dec    edi
  429c07:	mov    WORD PTR [edx],gs
  429c09:	mov    al,ds:0xc278378d
  429c0e:	test   al,0x3
  429c10:	and    al,0xdf
  429c12:	call   0x313babe1
  429c17:	mov    ecx,0x14500f44
  429c1c:	test   al,ah
  429c1e:	mov    esi,DWORD PTR [ebx]
  429c20:	lock js 0x429c7f
  429c23:	lds    ebp,FWORD PTR [esi+0x4b]
  429c26:	in     al,0xc1
  429c28:	dec    ebp
  429c29:	push   ss
  429c2a:	clc    
  429c2b:	and    eax,0xc84ac11a
  429c30:	jo     0x429beb
  429c32:	das    
  429c33:	loope  0x429bc3
  429c35:	rol    DWORD PTR [ebx+edx*4-0x4b],0xa6
  429c3a:	into   
  429c3b:	or     ah,ch
  429c3d:	xor    ch,ch
  429c3f:	sub    esi,ebx
	...
  429cb1:	add    BYTE PTR [eax],al
  429cb3:	add    BYTE PTR [ecx-0xace0e4b],al
  429cb9:	jne    0x429c7c
  429cbb:	mov    ch,0xdf
  429cbd:	xlat   BYTE PTR ds:[ebx]
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	add    ebp,DWORD PTR [eax-0x450882f3]
  429cc6:	add    DWORD PTR [eax],eax
  429cc8:	cmc    
  429cc9:	add    BYTE PTR [eax],al
  429ccb:	add    BYTE PTR [esp+edx*1-0x7ebb0f53],cl
  429cd2:	call   0xb0d:0x770dccc4
  429cd9:	fmul   st,st(0)
  429cdb:	pop    ebp
  429cdc:	fsub   QWORD PTR [ebp-0x43]
  429cdf:	xor    ah,BYTE PTR [edi+0x1e]
  429ce2:	pop    edx
  429ce3:	mov    dl,0x8e
  429ce5:	(bad)  
  429ce6:	aam    0xe4
  429ce8:	mov    bl,BYTE PTR [edx]
  429cea:	mov    DWORD PTR [esi+0x76],edi
  429ced:	adc    DWORD PTR [ebx],esp
  429cef:	inc    eax
  429cf0:	inc    edi
  429cf1:	outs   dx,BYTE PTR ds:[esi]
  429cf2:	(bad)  
  429cf3:	pop    edx
  429cf4:	ins    BYTE PTR es:[edi],dx
  429cf5:	sbb    al,0xff
  429cf7:	or     esp,edx
  429cf9:	cmp    al,0xe2
  429cfb:	test   eax,0x7b7b8656
  429d00:	nop
  429d01:	mov    esi,0xa82b6af8
  429d06:	fs cmp eax,0x30e04796
  429d0c:	mov    dh,0xc5
  429d0e:	pop    ebp
  429d0f:	dec    edx
  429d10:	push   0x4f
  429d12:	jb     0x429ce0
  429d14:	sub    al,0xef
  429d16:	xchg   ecx,eax
  429d17:	add    eax,0x100a3959
  429d1c:	test   DWORD PTR [eax-0x5b],esp
  429d1f:	sub    BYTE PTR [edx],bl
  429d21:	mov    al,ds:0x36ac64ed
  429d26:	mov    ?,WORD PTR [edx+0x55]
  429d29:	stos   BYTE PTR es:[edi],al
  429d2a:	in     al,dx
  429d2b:	sbb    dh,bh
  429d2d:	lods   eax,DWORD PTR ds:[esi]
  429d2e:	test   BYTE PTR [esi+0x78],al
  429d31:	jno    0x429d33
  429d33:	fst    DWORD PTR [ecx-0x3578698d]
  429d39:	cmc    
  429d3a:	mov    edi,0x956b39c6
  429d3f:	repz mov eax,ds:0x32ffbada
  429d45:	scas   al,BYTE PTR es:[edi]
  429d46:	cdq    
  429d47:	adc    BYTE PTR [esi],dl
  429d49:	sti    
  429d4a:	gs (bad) 
  429d4c:	or     dl,dl
  429d4e:	test   BYTE PTR [edi+0x24071bc0],cl
  429d54:	je     0x429dd3
  429d56:	jge    0x429dbe
  429d58:	mov    BYTE PTR [ebx],al
  429d5a:	xor    DWORD PTR es:[edi-0x215a2d86],ebx
  429d61:	push   edx
  429d62:	mov    ebx,0x8e42caa4
  429d67:	xchg   ecx,eax
  429d68:	(bad)  
  429d69:	test   BYTE PTR [edi],0xe6
  429d6c:	imul   ebx,DWORD PTR [eax+0x7433350e],0x5d
  429d73:	and    ebx,DWORD PTR [edi+0x57b80df7]
  429d79:	sbb    BYTE PTR [esi+0x32],dl
  429d7c:	fs cld 
  429d7e:	xchg   BYTE PTR [ebx+ebx*2+0x36],bh
  429d82:	fsub   QWORD PTR [edi-0x4f]
  429d85:	out    dx,eax
  429d86:	fsubr  DWORD PTR [edx-0x641de7f]
  429d8c:	int    0x29
  429d8e:	cli    
  429d8f:	xchg   edi,eax
  429d90:	xchg   esi,eax
  429d91:	pop    edi
  429d92:	fisubr DWORD PTR [esi+0x62]
  429d95:	lea    eax,[esp+eax*4-0x7ca3e26]
  429d9c:	adc    BYTE PTR [eax],dl
  429d9e:	mov    dl,0x41
  429da0:	not    BYTE PTR [ebp+0x7d]
  429da3:	mov    dl,0x2f
  429da5:	inc    ebp
  429da6:	sti    
  429da7:	mov    ss,esi
  429da9:	xchg   ecx,eax
  429daa:	pop    esp
  429dab:	and    ebp,ecx
  429dad:	in     al,dx
  429dae:	jne    0x429d92
  429db0:	fisttp DWORD PTR [eax]
  429db2:	ret    0x4b98
  429db5:	std    
  429db6:	fstp   DWORD PTR [ebx-0x7a]
  429db9:	out    dx,al
  429dba:	sub    esp,edi
  429dbc:	jg     0x429de4
  429dbe:	or     al,0xd6
  429dc0:	fiadd  WORD PTR [eax]
	...
  429e32:	add    BYTE PTR [eax],al
  429e34:	dec    edi
  429e35:	pop    ebp
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x244e2ee0]
  429e41:	ror    DWORD PTR [esi+0x11],0xec
  429e45:	mov    ebx,0xf50001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	xor    bl,BYTE PTR [ebx]
  429e4e:	enter  0x9860,0xfd
  429e52:	push   ds
  429e53:	and    BYTE PTR [ecx],al
  429e55:	fdivr  QWORD PTR [eax]
  429e57:	adc    ch,ah
  429e59:	sub    cl,ch
  429e5b:	(bad)  
  429e5c:	icebp  
  429e5d:	in     eax,0x6b
  429e5f:	jb     0x429de3
  429e61:	loope  0x429e0b
  429e63:	sbb    BYTE PTR [ebx+0x796a1aa4],cl
  429e69:	rcl    BYTE PTR es:[ecx+0x354bb22a],0x2c
  429e71:	aaa    
  429e72:	push   ds
  429e73:	(bad)  
  429e75:	jle    0x429e99
  429e77:	xor    eax,0xbd693ea3
  429e7c:	sub    esi,DWORD PTR [edi]
  429e7e:	or     ebx,DWORD PTR [ebx+0x75eb960d]
  429e84:	mov    esi,0x61904ec6
  429e89:	loopne 0x429e10
  429e8b:	mov    ds:0x548c8065,al
  429e90:	lds    eax,FWORD PTR [edi]
  429e92:	mov    edx,0x5ea6179c
  429e97:	sar    DWORD PTR [edx],1
  429e99:	imul   esp,DWORD PTR [ebx+0x61e3590f],0xa7c8ff77
  429ea3:	sbb    edi,DWORD PTR [si-0x3d]
  429ea7:	mov    DWORD PTR [esi+0x65f3418b],ebx
  429ead:	adc    eax,0xa869fd6c
  429eb2:	inc    edi
  429eb3:	loopne 0x429eb1
  429eb5:	jne    0x429eb6
  429eb7:	in     eax,dx
  429eb8:	push   edi
  429eb9:	mov    eax,0x4961e266
  429ebe:	test   DWORD PTR [edi-0x7b],ebp
  429ec1:	imul   esi,esi,0x24
  429ec4:	imul   edx,edi,0x978d8232
  429eca:	repz int3 
  429ecc:	jl     0x429eff
  429ece:	inc    edx
  429ecf:	jp     0x429e5b
  429ed1:	jecxz  0x429efa
  429ed3:	bound  ebp,QWORD PTR [esi+0x7cfdf0d1]
  429ed9:	(bad)  
  429eda:	pop    ds
  429edb:	shl    DWORD PTR [ebx],0x7f
  429ede:	and    DWORD PTR [ebx+0x2c929e6d],ebp
  429ee4:	sub    BYTE PTR [edi+0x779eac10],cl
  429eea:	or     cl,BYTE PTR [ebx]
  429eec:	and    BYTE PTR [ebp-0x6411691],dh
  429ef2:	add    al,0xda
  429ef4:	stos   BYTE PTR es:[edi],al
  429ef5:	pop    ebx
  429ef6:	adc    DWORD PTR [edx-0x33],ebx
  429ef9:	mov    dh,0x6b
  429efb:	pop    ds
  429efc:	js     0x429ee0
  429efe:	test   BYTE PTR [ebx+ebp*8-0x7a],dh
  429f02:	push   esp
  429f03:	(bad)  
  429f04:	test   eax,0xeb9c9e05
  429f09:	or     eax,0x102915f6
  429f0e:	xor    al,0x32
  429f10:	(bad)  
  429f11:	pop    ecx
  429f12:	jne    0x429ee4
  429f14:	and    edi,DWORD PTR [ebx+eax*1]
  429f17:	add    edx,esi
  429f19:	pop    edx
  429f1a:	push   ds
  429f1b:	push   ecx
  429f1c:	pop    ebp
  429f1d:	pop    eax
  429f1e:	fnsave [ebp-0x2e9fd6e1]
  429f24:	xor    BYTE PTR [ebx],bh
  429f26:	push   eax
  429f27:	jp     0x429f24
  429f29:	add    eax,0xe5fca7bf
  429f2e:	sbb    dl,BYTE PTR [ecx+0x5b]
  429f31:	mov    eax,ds:0x4b1ab177
  429f36:	fwait
  429f37:	mov    eax,ds:0x308cb293
  429f3c:	mov    dh,bl
  429f3e:	icebp  
  429f3f:	arpl   WORD PTR [eax+eax*1],sp
	...
  429fb2:	add    BYTE PTR [eax],al
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x6c6b6d7b]
  429fc2:	(bad)  
  429fc3:	adc    al,0xe1
  429fc5:	mov    esp,0xf50001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	in     al,0xfc
  429fce:	sbb    eax,0xb314508c
  429fd3:	pop    ss
  429fd4:	aas    
  429fd5:	mov    ?,WORD PTR [edx-0x5549976f]
  429fdb:	ret    0xfc93
  429fde:	popf   
  429fdf:	and    al,0x9e
  429fe1:	shr    BYTE PTR [ecx+0x1e6cd994],cl
  429fe7:	scas   al,BYTE PTR es:[edi]
  429fe8:	ficom  WORD PTR [ecx-0x56]
  429feb:	loop   0x429fd9
  429fed:	xchg   DWORD PTR [eax],eax
  429fef:	call   0x6dd7433d
  429ff4:	jg     0x42a070
  429ff6:	add    al,0x56
  429ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ff9:	inc    edx
  429ffa:	adc    DWORD PTR [ebp-0x46e29bf7],ecx
  42a000:	mov    DWORD PTR [ecx-0x5795238c],esp
  42a006:	sbb    BYTE PTR [edi-0x58e4fc3f],ah
  42a00c:	adc    dh,bh
  42a00e:	lds    ecx,FWORD PTR [eax+eax*4-0x7742b400]
  42a015:	mov    ah,0xda
  42a017:	jo     0x42a08d
  42a019:	mov    bl,bh
  42a01b:	(bad)  
  42a01c:	adc    eax,0x6be86d58
  42a021:	jl     0x42a058
  42a023:	out    0x9b,al
  42a025:	cmp    ch,cl
  42a027:	outs   dx,DWORD PTR ds:[esi]
  42a028:	imul   ebx,esi,0xffffffa9
  42a02b:	mov    ds,WORD PTR ds:0x93f0b038
  42a031:	fsubr  st,st(4)
  42a033:	das    
  42a034:	sbb    ebp,DWORD PTR ds:0x2e92d5e5
  42a03a:	in     al,dx
  42a03b:	cdq    
  42a03c:	jbe    0x42a0a5
  42a03e:	sbb    eax,0xd55193e1
  42a043:	xor    ecx,DWORD PTR [ebp+0x25]
  42a046:	data16 xlat BYTE PTR ds:[ebx]
  42a048:	add    eax,ebx
  42a04a:	aas    
  42a04b:	test   DWORD PTR [ebp-0x3e9b3c53],edx
  42a051:	adc    al,0x1d
  42a053:	out    dx,al
  42a054:	dec    ecx
  42a055:	sar    eax,cl
  42a057:	mov    ds:0xab74c9d7,eax
  42a05c:	outs   dx,BYTE PTR ds:[esi]
  42a05d:	arpl   WORD PTR [ebp+edx*1+0x2f],bp
  42a061:	cmp    al,dh
  42a063:	je     0x42a058
  42a065:	mov    ah,0x5e
  42a067:	xchg   esi,eax
  42a068:	ins    BYTE PTR es:[edi],dx
  42a069:	stos   BYTE PTR es:[edi],al
  42a06a:	in     eax,dx
  42a06b:	sbb    edi,ecx
  42a06d:	adc    BYTE PTR [edi],ch
  42a06f:	fisub  DWORD PTR [edi]
  42a071:	je     0x42a0dd
  42a073:	mov    dh,0x58
  42a075:	mov    esi,ebx
  42a077:	cmp    ebx,edx
  42a079:	mov    ds:0x2ce4b41,al
  42a07e:	das    
  42a07f:	mov    bl,BYTE PTR ds:0xdc0adcd9
  42a085:	jge    0x42a089
  42a087:	xchg   BYTE PTR [ebx-0x48],al
  42a08a:	pop    ecx
  42a08b:	jp     0x42a090
  42a08d:	repz jno 0x42a02b
  42a090:	or     dl,BYTE PTR [esi-0x5f]
  42a093:	fs inc ecx
  42a095:	in     eax,0xc7
  42a097:	das    
  42a098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a099:	mov    cl,BYTE PTR [eax+eiz*2]
  42a09c:	test   ebx,ebp
  42a09e:	jnp    0x42a0a6
  42a0a0:	add    eax,0xa78c1176
  42a0a5:	add    ah,dh
  42a0a7:	js     0x42a039
  42a0a9:	aad    0x5d
  42a0ab:	adc    cl,0x23
  42a0ae:	test   dl,bl
  42a0b0:	out    0x1a,al
  42a0b2:	xchg   edi,eax
  42a0b3:	mov    eax,0xdff1c42
  42a0b8:	sub    DWORD PTR [eax],ebx
  42a0ba:	inc    DWORD PTR [edx+0x198e19d6]
  42a0c0:	loop   0x42a0c2
	...
  42a132:	add    BYTE PTR [eax],al
  42a134:	push   esi
  42a135:	xchg   ebp,edi
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	mov    ebx,DWORD PTR [edi-0x42296bc7]
  42a146:	add    DWORD PTR [eax],eax
  42a148:	cmc    
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    BYTE PTR [eiz*8+0x362d3deb],dh
  42a152:	pop    ds
  42a153:	ins    BYTE PTR es:[edi],dx
  42a154:	pop    ds
  42a155:	aaa    
  42a156:	iret   
  42a157:	pop    esi
  42a158:	cmp    eax,edi
  42a15a:	jge    0x42a120
  42a15c:	jmp    0xc37b:0x3ba861b1
  42a163:	ins    DWORD PTR es:[edi],dx
  42a164:	push   DWORD PTR [ebp+0x4a]
  42a167:	or     DWORD PTR [edx-0x113c053b],ebp
  42a16d:	mov    edx,0xaf924810
  42a172:	call   DWORD PTR [eax+edi*2]
  42a175:	hlt    
  42a176:	bound  ebx,QWORD PTR [ebx+0x2c8b56b1]
  42a17c:	shl    BYTE PTR [esi+0x1f],0x15
  42a180:	mov    ebx,DWORD PTR [ebx]
  42a182:	jne    0x42a106
  42a184:	loope  0x42a1e1
  42a186:	cs dec ebp
  42a188:	jmp    0xe871:0xa48f9f2b
  42a18f:	or     al,0x97
  42a191:	and    BYTE PTR [esi],ah
  42a193:	adc    eax,0xb2cf887c
  42a198:	retf   
  42a199:	jbe    0x42a1d3
  42a19b:	mov    cl,cl
  42a19d:	rcl    ebp,0x3f
  42a1a0:	rcr    DWORD PTR ds:0xf0a41ac3,1
  42a1a6:	jo     0x42a1b3
  42a1a8:	sbb    DWORD PTR [edi+eiz*8],esp
  42a1ab:	test   eax,0x54fe210e
  42a1b0:	es mov edx,0x27fe49e6
  42a1b6:	sub    BYTE PTR [eax+0x3c],al
  42a1b9:	mov    eax,ds:0x3d1b406a
  42a1be:	jmp    0xf1ca:0x7be9f855
  42a1c5:	ins    DWORD PTR es:[edi],dx
  42a1c6:	pop    ebx
  42a1c7:	dec    esi
  42a1c8:	sub    ah,BYTE PTR [ecx]
  42a1ca:	(bad)  
  42a1cb:	jge    0x42a1ba
  42a1cd:	add    eax,0x85ad2f4c
  42a1d2:	ret    0xd983
  42a1d5:	cld    
  42a1d6:	push   ebp
  42a1d7:	(bad)  
  42a1d9:	or     al,0x98
  42a1db:	mov    ebx,esi
  42a1dd:	mov    bl,0xa9
  42a1df:	sbb    BYTE PTR [ebp+eax*1+0x588c72b9],al
  42a1e6:	call   0x3ce3f3e0
  42a1eb:	jmp    0xb178:0x8ca16321
  42a1f2:	jge    0x42a180
  42a1f4:	(bad)  
  42a1f6:	aas    
  42a1f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1f8:	les    ebp,FWORD PTR [ebx]
  42a1fa:	std    
  42a1fb:	retf   
  42a1fc:	cmp    BYTE PTR [ebp+0x27d679cb],al
  42a202:	int    0x92
  42a204:	cmp    DWORD PTR [ecx+0x1],esp
  42a207:	sti    
  42a208:	xchg   DWORD PTR [esi+0x58],edx
  42a20b:	jne    0x42a1a0
  42a20d:	mov    DWORD PTR ds:0xf7c955a4,0x6cc22dd1
  42a217:	xor    BYTE PTR [eax-0x6a68cbc],0x9c
  42a21e:	fcmovbe st,st(2)
  42a220:	mov    DWORD PTR [esi-0x4f],ebx
  42a223:	xor    ch,BYTE PTR [ebx]
  42a225:	popa   
  42a226:	outs   dx,DWORD PTR ds:[esi]
  42a227:	shl    DWORD PTR [ebp+0x7c],1
  42a22a:	mov    esi,0xfdd088cb
  42a22f:	mov    eax,ds:0xe58bc599
  42a234:	xlat   BYTE PTR ds:[ebx]
  42a235:	cdq    
  42a236:	aad    0x5c
  42a238:	ds popf 
  42a23a:	push   ebp
  42a23b:	xor    bh,BYTE PTR [ecx+0x2ee56de1]
	...
  42a2b1:	add    BYTE PTR [eax],al
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x247f8ab9
  42a2c1:	scas   al,BYTE PTR es:[edi]
  42a2c2:	mov    eax,0x1becb62
  42a2c7:	add    ch,dh
  42a2c9:	add    BYTE PTR [eax],al
  42a2cb:	add    BYTE PTR [ecx],cl
  42a2cd:	xor    al,0x9c
  42a2cf:	add    eax,0x7a2a7928
  42a2d4:	loope  0x42a2f5
  42a2d6:	call   0xcffec106
  42a2db:	call   0xe682:0x1de256b1
  42a2e2:	mov    al,ch
  42a2e4:	add    DWORD PTR [ecx-0x7ff3755c],0x29
  42a2eb:	stc    
  42a2ec:	mov    al,ds:0x981a2892
  42a2f1:	aas    
  42a2f2:	popa   
  42a2f3:	pushf  
  42a2f4:	inc    cl
  42a2f6:	adc    BYTE PTR [edx+0x79],ch
  42a2f9:	pop    edi
  42a2fa:	xchg   esi,eax
  42a2fb:	bound  edx,QWORD PTR [eax+0x31]
  42a2fe:	(bad)  
  42a2ff:	mov    ebp,0xc1a489d6
  42a304:	fdivrp st(6),st
  42a306:	frstor [esi+edi*8+0x23]
  42a30a:	mov    al,0xc6
  42a30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a30d:	iret   
  42a30e:	mov    DWORD PTR [ebx],0xbc515950
  42a314:	sbb    bl,dl
  42a316:	out    0xfc,al
  42a318:	lock pop ss
  42a31a:	pop    esi
  42a31b:	outs   dx,DWORD PTR ds:[esi]
  42a31c:	stc    
  42a31d:	cmp    eax,0x62f282c9
  42a322:	push   bp
  42a324:	xchg   ecx,eax
  42a325:	mov    BYTE PTR [ebp+0x56c481cb],ah
  42a32b:	cmp    BYTE PTR [esi-0x64],al
  42a32e:	dec    edi
  42a32f:	lahf   
  42a330:	inc    esp
  42a331:	cli    
  42a332:	and    al,0x7d
  42a334:	mov    ah,0x95
  42a336:	push   ds
  42a337:	cmc    
  42a338:	xchg   ecx,eax
  42a339:	imul   ecx,DWORD PTR fs:[eax-0x4f6b0d07],0xffffffa8
  42a341:	test   eax,0x7474f818
  42a346:	push   0x7db30ff6
  42a34b:	pusha  
  42a34c:	rcl    DWORD PTR [ebx+0x44],1
  42a34f:	neg    DWORD PTR [esi+0x7514bba9]
  42a355:	dec    ebx
  42a356:	and    ecx,DWORD PTR [esi]
  42a358:	outs   dx,DWORD PTR ds:[esi]
  42a359:	iret   
  42a35a:	cmp    DWORD PTR [eax+0x41],ecx
  42a35d:	repz aad 0xaa
  42a360:	sub    BYTE PTR [ebx],bl
  42a362:	fld    QWORD PTR ds:0x5f617bec
  42a368:	inc    esp
  42a369:	fild   WORD PTR [edi+0x57]
  42a36c:	outs   dx,DWORD PTR ds:[esi]
  42a36d:	pop    ss
  42a36e:	push   edx
  42a36f:	push   ecx
  42a370:	outs   dx,DWORD PTR ds:[esi]
  42a371:	mov    al,ds:0x40f7ceb5
  42a376:	mov    ?,WORD PTR [edx-0x6598cf9c]
  42a37c:	mov    edx,0x240c09e3
  42a381:	mov    ds:0x4e5e3586,al
  42a386:	mov    ds:0x4d1b8d60,eax
  42a38b:	fst    QWORD PTR [eax+0x18]
  42a38e:	pop    esp
  42a38f:	out    0x57,eax
  42a391:	jl     0x42a3a6
  42a393:	(bad)  
  42a394:	popa   
  42a395:	mov    dh,0x5
  42a397:	out    dx,al
  42a398:	push   esi
  42a399:	xlat   BYTE PTR ds:[ebx]
  42a39a:	mul    BYTE PTR [edx-0x56040f3c]
  42a3a0:	sub    ebx,DWORD PTR [edi]
  42a3a2:	sub    al,0x57
  42a3a4:	dec    ebx
  42a3a5:	test   esi,edi
  42a3a7:	lds    ebp,FWORD PTR [eax+0x217677e0]
  42a3ad:	jne    0x42a3fb
  42a3af:	enter  0xe9c3,0x8a
  42a3b3:	fiadd  DWORD PTR [ebx-0x10]
  42a3b6:	mov    cl,0xf3
  42a3b8:	add    ch,bl
  42a3ba:	xor    edx,DWORD PTR [eax+eax*2+0x36]
  42a3be:	(bad)  
  42a3bf:	enter  0x85,0x0
	...
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a3f1
  42a441:	sbb    eax,0xbfc01bd8
  42a446:	add    DWORD PTR [eax],eax
  42a448:	cmc    
  42a449:	add    BYTE PTR [eax],al
  42a44b:	add    ch,dl
  42a44d:	xor    DWORD PTR [esp+edx*1+0x6b],0x5f495b8
  42a455:	jne    0x42a4b1
  42a457:	(bad)  
  42a458:	aam    0x93
  42a45a:	out    0xfb,al
  42a45c:	cmc    
  42a45d:	stc    
  42a45e:	ret    
  42a45f:	jg     0x42a43a
  42a461:	mov    ah,0x6
  42a463:	add    DWORD PTR [edi+ebx*8-0x72a4c69f],ecx
  42a46a:	(bad)  
  42a46b:	(bad)  
  42a46c:	xchg   esp,eax
  42a46d:	loopne 0x42a4c3
  42a46f:	and    al,0xc4
  42a471:	sub    eax,0xa7cc5901
  42a476:	xor    BYTE PTR [ecx+0x27a64cf1],dh
  42a47c:	and    eax,0xfbf70d57
  42a481:	mov    cl,0x95
  42a483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a484:	hlt    
  42a485:	addr16 inc ebx
  42a487:	adc    BYTE PTR [edi-0x64bbb6e],bh
  42a48d:	add    esi,DWORD PTR [ebx-0x67dc78a4]
  42a493:	inc    esp
  42a494:	(bad)
  42a498:	(bad)  
  42a499:	adc    edi,DWORD PTR [edi]
  42a49b:	add    DWORD PTR ds:0xd06b514d,edx
  42a4a1:	pop    ebx
  42a4a2:	or     al,0x0
  42a4a4:	mov    edi,DWORD PTR [edx-0xb]
  42a4a7:	jno    0x42a459
  42a4a9:	xchg   ebx,eax
  42a4aa:	test   al,0x86
  42a4ac:	xchg   esi,eax
  42a4ad:	cs inc ebx
  42a4af:	push   edi
  42a4b0:	push   0xb95de800
  42a4b5:	clc    
  42a4b6:	mov    ds:0xc9bdd5ce,eax
  42a4bb:	fsub   QWORD PTR [edi-0x4a482dbb]
  42a4c1:	sti    
  42a4c2:	inc    eax
  42a4c3:	pop    eax
  42a4c4:	sub    al,0xb9
  42a4c6:	pop    esi
  42a4c7:	dec    ecx
  42a4c8:	call   0x8388cb7a
  42a4cd:	aam    0x6e
  42a4cf:	fs loope 0x42a540
  42a4d2:	sar    BYTE PTR ds:0xf9c30597,1
  42a4d8:	ret    
  42a4d9:	adc    eax,0xaffbae5
  42a4de:	cld    
  42a4df:	popa   
  42a4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4e1:	xchg   DWORD PTR [eax],edx
  42a4e3:	lods   eax,DWORD PTR ds:[esi]
  42a4e4:	dec    edx
  42a4e5:	imul   eax,DWORD PTR [ecx],0xffffffe4
  42a4e8:	(bad)  
  42a4e9:	mov    ds:0xcfc9ad2e,al
  42a4ee:	cdq    
  42a4ef:	cdq    
  42a4f0:	xor    eax,0xc88d9e37
  42a4f5:	or     DWORD PTR [esi],0x1d
  42a4f8:	push   esi
  42a4f9:	or     BYTE PTR [esp+ebx*1+0xa],0xa
  42a4fe:	fptan  
  42a500:	nop
  42a501:	iret   
  42a502:	or     ah,al
  42a504:	xor    DWORD PTR [edx+edx*2-0x69],eax
  42a508:	mov    DWORD PTR [eax+0x4a836268],ebx
  42a50e:	jb     0x42a540
  42a510:	in     al,0xb9
  42a512:	xor    dl,bh
  42a514:	test   al,0x4f
  42a516:	sti    
  42a517:	adc    al,0xaa
  42a519:	dec    ebx
  42a51a:	jns    0x42a4ee
  42a51c:	xchg   esp,eax
  42a51d:	int3   
  42a51e:	mov    BYTE PTR [edx],cl
  42a520:	int    0x34
  42a522:	rcr    BYTE PTR [ebx+0x1e],0x4e
  42a526:	data16 das 
  42a528:	mov    edx,0xb8a83016
  42a52d:	lea    edx,[esi-0x7f]
  42a530:	jle    0x42a5ac
  42a532:	mov    esi,0x40e497c3
  42a537:	stos   DWORD PTR es:[edi],eax
  42a538:	sub    al,0xb8
  42a53a:	sub    dh,BYTE PTR [ecx+0x70]
  42a53d:	pop    ds
  42a53e:	cmp    edi,DWORD PTR [ebx]
  42a540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42a5b1:	add    BYTE PTR [eax],al
  42a5b3:	add    BYTE PTR [ebp+0x1d],ch
  42a5b6:	out    0xc0,al
  42a5b8:	idiv   bl
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	shr    DWORD PTR ds:0xc0b5d4a0,0x1
  42a5c7:	add    ch,dh
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    dl,dh
  42a5cd:	jne    0x42a646
  42a5cf:	jecxz  0x42a555
  42a5d1:	int    0x5b
  42a5d3:	in     al,dx
  42a5d4:	push   cs
  42a5d5:	inc    ecx
  42a5d6:	add    BYTE PTR [esp+eax*1-0x2f141d07],dl
  42a5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5de:	aam    0x7f
  42a5e0:	fiadd  WORD PTR [ecx+0x4400abf5]
  42a5e6:	outs   dx,DWORD PTR ds:[esi]
  42a5e7:	or     bh,BYTE PTR [eax-0x19489a24]
  42a5ed:	jne    0x42a5a1
  42a5ef:	push   ebx
  42a5f0:	mov    edx,0xb2c7afcd
  42a5f5:	pop    esi
  42a5f6:	mov    dl,0xf0
  42a5f8:	ja     0x42a5c9
  42a5fa:	xor    BYTE PTR ds:0xecf91ce8,cl
  42a600:	or     BYTE PTR [ebx+0x71bc1a0a],bh
  42a606:	and    al,0x19
  42a608:	inc    ebp
  42a609:	rcr    ebx,0x35
  42a60c:	in     al,dx
  42a60d:	push   esi
  42a60e:	aad    0x78
  42a610:	push   edx
  42a611:	arpl   WORD PTR [esi],cx
  42a613:	mov    dh,0x86
  42a615:	jg     0x42a689
  42a617:	inc    ecx
  42a618:	or     BYTE PTR [edx+eiz*1-0x5c],ch
  42a61c:	(bad)  
  42a61e:	sub    al,0xf3
  42a620:	std    
  42a621:	mov    dh,0x4
  42a623:	ror    DWORD PTR [esp+esi*4-0x6],cl
  42a627:	jmp    0xb764:0x5be84249
  42a62e:	jno    0x42a5f7
  42a630:	xor    edx,DWORD PTR [ebp-0x60067fc7]
  42a636:	sub    dh,0xb0
  42a639:	icebp  
  42a63a:	int    0xf7
  42a63c:	(bad)  
  42a63d:	jg     0x42a6b9
  42a63f:	add    eax,0xc5f63a4d
  42a644:	sbb    ch,BYTE PTR [eax+eiz*4]
  42a647:	or     BYTE PTR [eax+0x33],cl
  42a64a:	push   cs
  42a64b:	test   al,0x3b
  42a64d:	or     BYTE PTR [ebp+0x41],dh
  42a650:	jne    0x42a63f
  42a652:	push   edx
  42a653:	cmp    dl,BYTE PTR [ecx-0x34]
  42a656:	xchg   edx,eax
  42a657:	mov    al,ds:0x18c0891f
  42a65c:	iret   
  42a65d:	mov    BYTE PTR [edx],bh
  42a65f:	xor    al,0xcf
  42a661:	jne    0x42a6a4
  42a663:	pop    esp
  42a664:	in     al,dx
  42a665:	fdivr  DWORD PTR [eax]
  42a667:	cld    
  42a668:	stos   DWORD PTR es:[edi],eax
  42a669:	dec    esp
  42a66a:	scas   al,BYTE PTR es:[edi]
  42a66b:	stos   BYTE PTR es:[edi],al
  42a66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a66d:	xor    DWORD PTR [edi-0x105c6f5],esp
  42a673:	inc    ecx
  42a674:	ja     0x42a60c
  42a676:	(bad)  
  42a677:	adc    eax,0x74977c5c
  42a67c:	xor    BYTE PTR [ebp-0x1e070c9e],al
  42a682:	xchg   ebx,eax
  42a683:	sbb    BYTE PTR ds:0xeef8e786,ah
  42a689:	and    DWORD PTR [edi],ebp
  42a68b:	adc    eax,0xfb47e612
  42a690:	dec    esp
  42a691:	add    edi,DWORD PTR [esp+eax*1-0x15]
  42a695:	iret   
  42a696:	xor    cl,BYTE PTR [eax+0x692a9236]
  42a69c:	xchg   ebx,eax
  42a69d:	cmp    BYTE PTR [eax],cl
  42a69f:	ds push ebx
  42a6a1:	jp     0x42a68e
  42a6a3:	dec    edi
  42a6a4:	inc    ebp
  42a6a5:	fbld   TBYTE PTR [edx-0x41]
  42a6a8:	dec    esi
  42a6a9:	je     0x42a69b
  42a6ab:	int    0xd6
  42a6ad:	fld    DWORD PTR [ebx]
  42a6af:	mov    al,ds:0x15854496
  42a6b4:	js     0x42a65a
  42a6b6:	test   eax,0xccc50020
  42a6bb:	jnp    0x42a65e
  42a6bd:	and    ch,cl
  42a6bf:	fs aas 
	...
  42a731:	add    BYTE PTR [eax],al
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	inc    esp
  42a741:	mov    ch,0x20
  42a743:	mov    edi,0x1c1aa
  42a748:	cmc    
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [esp+eax*8],al
  42a74e:	adc    dl,BYTE PTR [edi-0x5789f6cd]
  42a754:	cwde   
  42a755:	lods   eax,DWORD PTR ds:[esi]
  42a756:	sbb    DWORD PTR [edx+edx*8+0x7c],0xed9643fa
  42a75e:	or     BYTE PTR [ecx+0x2004de15],al
  42a764:	jg     0x42a722
  42a766:	and    BYTE PTR [edi-0x2761ce52],ch
  42a76c:	inc    ebp
  42a76d:	retf   0x3910
  42a770:	in     al,dx
  42a771:	xor    DWORD PTR [edx-0x51],0xf37be4ad
  42a778:	sub    BYTE PTR [esi+0x1f6efcdf],bh
  42a77e:	stos   BYTE PTR es:[edi],al
  42a77f:	xchg   edx,eax
  42a780:	pop    ebx
  42a781:	and    dl,0x77
  42a784:	jb     0x42a770
  42a786:	scas   eax,DWORD PTR es:[edi]
  42a787:	test   DWORD PTR [edx],esi
  42a789:	mov    ds:0xfaebcf8c,al
  42a78e:	fimul  WORD PTR [edx-0x69]
  42a791:	push   es
  42a792:	mov    ecx,0x20134f83
  42a797:	daa    
  42a798:	pusha  
  42a799:	xor    ebp,ebx
  42a79b:	mov    ebp,edx
  42a79d:	repz std 
  42a79f:	sub    ah,BYTE PTR [ebx+0x494f0b0e]
  42a7a5:	inc    ebp
  42a7a6:	aas    
  42a7a7:	push   edx
  42a7a8:	adc    edx,DWORD PTR [esi-0x35]
  42a7ab:	adc    al,0xa9
  42a7ad:	fbstp  TBYTE PTR [esi+eax*1-0xaad5ef]
  42a7b4:	mov    edx,0x96354b66
  42a7b9:	aad    0x76
  42a7bb:	sahf   
  42a7bc:	push   eax
  42a7bd:	dec    ebx
  42a7be:	jg     0x42a7df
  42a7c0:	cmp    ebx,DWORD PTR [eax+ebx*4-0x6]
  42a7c4:	inc    eax
  42a7c5:	outs   dx,DWORD PTR ds:[esi]
  42a7c6:	mov    ebp,0x19ab5c8f
  42a7cb:	fsqrt  
  42a7cd:	inc    esp
  42a7ce:	aad    0xbb
  42a7d0:	adc    DWORD PTR [ecx],esi
  42a7d2:	mov    ds:0xa4833c8c,al
  42a7d7:	mov    esp,0xb8f26ad9
  42a7dc:	or     eax,0xb8e96af9
  42a7e1:	add    al,0x5a
  42a7e3:	(bad)  
  42a7e4:	mov    bl,0xb2
  42a7e6:	xchg   ecx,eax
  42a7e7:	test   ecx,ebp
  42a7e9:	pop    ds
  42a7ea:	cmp    edi,DWORD PTR [ebx-0x759fc6bc]
  42a7f0:	aam    0x51
  42a7f2:	aaa    
  42a7f3:	dec    edx
  42a7f4:	mov    ah,0x6e
  42a7f6:	int3   
  42a7f7:	mov    bl,0x15
  42a7f9:	mov    ah,0x7
  42a7fb:	pushf  
  42a7fc:	ds (bad) 
  42a7fe:	adc    edx,ecx
  42a800:	into   
  42a801:	dec    eax
  42a802:	pop    ecx
  42a803:	xchg   esi,eax
  42a804:	mov    ds,WORD PTR [edx-0x4e]
  42a807:	es daa 
  42a809:	pop    si
  42a80b:	sub    edx,edx
  42a80d:	fidivr WORD PTR [edx+ecx*4-0x31]
  42a811:	and    eax,0x465166ab
  42a816:	mov    BYTE PTR [esi],0x2f
  42a819:	(bad)  
  42a81a:	icebp  
  42a81b:	(bad)  
  42a81d:	fisub  WORD PTR [edx-0x6b]
  42a820:	or     BYTE PTR [edi+0x72],bl
  42a823:	xchg   edx,eax
  42a824:	jmp    DWORD PTR [eax+edi*1]
  42a827:	fmul   DWORD PTR [edx+0x4bb4f107]
  42a82d:	xor    eax,0xd652296b
  42a832:	in     eax,0xb3
  42a834:	add    DWORD PTR [ebx+0x21],edx
  42a837:	mov    BYTE PTR [edx+0x48a196a0],bl
  42a83d:	sub    BYTE PTR [edx-0x7a],0xa9
	...
  42a8b1:	add    BYTE PTR [eax],al
  42a8b3:	add    BYTE PTR [edi+0x68],dl
  42a8b6:	fistp  QWORD PTR fs:[edi-0x21]
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	outs   dx,DWORD PTR ds:[esi]
  42a8c1:	js     0x42a8aa
  42a8c3:	jnp    0x42a864
  42a8c5:	ret    0x1
  42a8c8:	cmc    
  42a8c9:	add    BYTE PTR [eax],al
  42a8cb:	add    BYTE PTR [esi-0x28],cl
  42a8ce:	imul   edx,DWORD PTR [eax-0x3f],0xc09e02f6
  42a8d5:	jo     0x42a916
  42a8d7:	repnz cmp edx,DWORD PTR [edi]
  42a8da:	cdq    
  42a8db:	jno    0x42a908
  42a8dd:	and    esi,eax
  42a8df:	xor    bl,BYTE PTR [edi]
  42a8e1:	and    al,0x8
  42a8e3:	rol    BYTE PTR [esi+0xd2b144],cl
  42a8e9:	ror    DWORD PTR [edx],cl
  42a8eb:	jae    0x42a908
  42a8ed:	(bad)  
  42a8ee:	loop   0x42a910
  42a8f0:	int    0x18
  42a8f2:	and    ebp,DWORD PTR [edi-0x80]
  42a8f5:	sahf   
  42a8f6:	push   ebp
  42a8f7:	daa    
  42a8f8:	neg    BYTE PTR [eax]
  42a8fa:	mov    ds:0x2dc80195,al
  42a8ff:	xchg   BYTE PTR ds:0xc4d6061c,cl
  42a905:	cmp    BYTE PTR [ebp+ebx*4-0x7b],cl
  42a909:	sub    esi,ebx
  42a90b:	inc    esi
  42a90c:	or     DWORD PTR [ecx-0x45d55ea8],ebp
  42a912:	inc    ebp
  42a913:	loop   0x42a96b
  42a915:	xchg   BYTE PTR [ebx+0x5b],al
  42a918:	int3   
  42a919:	jmp    0x42a8a9
  42a91b:	sub    DWORD PTR ds:0x27951753,edi
  42a922:	lea    edx,[ecx+0x5f]
  42a925:	aas    
  42a926:	daa    
  42a927:	and    eax,DWORD PTR [edi]
  42a929:	imul   ebp,DWORD PTR [ecx-0x49],0x3d2ddd1f
  42a930:	enter  0x3aa2,0x5
  42a934:	lods   al,BYTE PTR ds:[esi]
  42a935:	adc    ebp,DWORD PTR [edi+0x8]
  42a938:	or     edi,edi
  42a93a:	fbld   TBYTE PTR es:[ecx+0x3a24f800]
  42a941:	cmp    BYTE PTR [edi-0x3f],bh
  42a944:	leave  
  42a945:	lahf   
  42a946:	icebp  
  42a947:	aaa    
  42a948:	dec    ebx
  42a949:	mov    BYTE PTR [edi+0x7c],ch
  42a94c:	imul   ebx,DWORD PTR [edi+ebx*8+0x54f188b7],0xffffffe5
  42a954:	xor    bl,0xc8
  42a957:	aad    0xc
  42a959:	leave  
  42a95a:	mov    ds:0x728eec53,al
  42a95f:	in     al,dx
  42a960:	mov    al,0xfe
  42a962:	mov    ecx,ebx
  42a964:	add    eax,0xadcbe0ba
  42a969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a96a:	and    al,0x6e
  42a96c:	or     DWORD PTR [esi+0x753b5b84],ebp
  42a972:	ss jns 0x42a992
  42a975:	or     ebx,edx
  42a977:	jg     0x42a974
  42a979:	fucomip st,st(0)
  42a97b:	gs xor eax,0xccb0ad30
  42a981:	inc    esp
  42a982:	mov    ecx,0xd375667a
  42a987:	(bad)
  42a98b:	enter  0xdcf3,0x77
  42a98f:	sub    cl,BYTE PTR [edx]
  42a991:	inc    esp
  42a992:	mov    al,ds:0x1c5231cd
  42a997:	xchg   edx,eax
  42a998:	or     eax,0x4408e75b
  42a99d:	loop   0x42a9cb
  42a99f:	add    ebx,ecx
  42a9a1:	popf   
  42a9a2:	enter  0x2222,0x60
  42a9a6:	out    dx,eax
  42a9a7:	dec    ebp
  42a9a8:	mov    ah,0x4e
  42a9aa:	adc    eax,0x403108fd
  42a9af:	jno    0x42aa0c
  42a9b1:	mov    ds:0x6e005959,al
  42a9b6:	mov    al,ds:0xad1dd6d7
  42a9bb:	stos   DWORD PTR es:[edi],eax
  42a9bc:	jge    0x42a99d
  42a9be:	push   esp
  42a9bf:	fild   WORD PTR [esi]
	...
  42aa31:	add    BYTE PTR [eax],al
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	(bad)  
  42aa42:	sti    
  42aa43:	hlt    
  42aa44:	xchg   esp,eax
  42aa45:	ret    
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	cmc    
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    BYTE PTR [edi+0x1d],dl
  42aa4e:	and    cl,bh
  42aa50:	cmp    DWORD PTR [ebp+0x754a1946],ecx
  42aa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa57:	xchg   ecx,eax
  42aa58:	dec    edx
  42aa59:	jmp    0x5afbdffd
  42aa5e:	clc    
  42aa5f:	xor    DWORD PTR [esi],edx
  42aa61:	dec    esi
  42aa62:	mov    cl,0x23
  42aa64:	pop    ds
  42aa65:	out    0xf7,al
  42aa67:	call   0x7f1:0x77373789
  42aa6e:	pop    edi
  42aa6f:	xchg   DWORD PTR [esi+0x7ef83b54],esi
  42aa75:	xor    eax,0xdc66228e
  42aa7a:	retf   0x3c3
  42aa7d:	add    edx,DWORD PTR [esi-0x31]
  42aa80:	not    BYTE PTR [edi]
  42aa82:	jecxz  0x42aa7f
  42aa84:	sbb    BYTE PTR [ecx+esi*4+0xc969066],0xcb
  42aa8c:	mov    BYTE PTR [ecx-0xcb26896],cl
  42aa92:	cmp    ah,BYTE PTR [esi+0x7]
  42aa95:	ins    BYTE PTR es:[edi],dx
  42aa96:	jmp    0x70b9ad88
  42aa9b:	retf   0x58a3
  42aa9e:	sbb    eax,0x73599c33
  42aaa3:	push   ebp
  42aaa4:	loop   0x42ab19
  42aaa6:	or     BYTE PTR ds:0x4708e913,0x2a
  42aaad:	(bad)  
  42aaaf:	test   al,0x0
  42aab1:	retf   
  42aab2:	ret    
  42aab3:	xchg   ebx,eax
  42aab4:	loope  0x42aa4e
  42aab6:	outs   dx,BYTE PTR ds:[esi]
  42aab7:	dec    BYTE PTR [esi-0x3c65a771]
  42aabd:	(bad)  
  42aabe:	aad    0xac
  42aac0:	push   esp
  42aac1:	shr    DWORD PTR [ecx+ebp*8-0x7a],0x19
  42aac6:	aam    0x6f
  42aac8:	cmp    al,0x40
  42aaca:	or     eax,0xc0ffa7ce
  42aacf:	pop    ss
  42aad0:	add    esp,0xfffffff9
  42aad3:	addr16 aas 
  42aad5:	dec    edi
  42aad6:	int3   
  42aad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aad9:	inc    edi
  42aada:	push   esp
  42aadb:	and    BYTE PTR [edx+edi*4],al
  42aade:	into   
  42aadf:	xchg   esp,eax
  42aae0:	jg     0x42aad5
  42aae2:	adc    dh,BYTE PTR [eax]
  42aae4:	mov    DWORD PTR [esi+0x65],eax
  42aae7:	push   ds
  42aae8:	and    dl,BYTE PTR [eax+ecx*8-0x1e]
  42aaec:	test   ah,dh
  42aaee:	jge    0x42aacb
  42aaf0:	les    eax,FWORD PTR [edx]
  42aaf2:	(bad)  
  42aaf3:	adc    esi,eax
  42aaf5:	add    al,0x8e
  42aaf7:	sbb    ebp,DWORD PTR ds:0xc24dfa77
  42aafd:	push   ds
  42aafe:	addr16 icebp 
  42ab00:	retf   0x805f
  42ab03:	jo     0x42ab18
  42ab05:	fstp   TBYTE PTR [edx]
  42ab07:	jmp    0x42aab2
  42ab09:	cmp    eax,0x2f5ca845
  42ab0e:	sub    BYTE PTR [ebp+ecx*4-0x1e252982],0x9f
  42ab16:	in     al,dx
  42ab17:	jb     0x42ab7b
  42ab19:	xchg   ebx,eax
  42ab1a:	add    al,0x3b
  42ab1d:	mov    cl,0xf1
  42ab1f:	mov    ch,0xee
  42ab21:	push   edx
  42ab22:	adc    DWORD PTR [eax-0x167cabfe],0x3a
  42ab29:	ss iret 
  42ab2b:	js     0x42ab19
  42ab2d:	add    ah,0x3d
  42ab30:	push   ds
  42ab31:	xchg   ebp,eax
  42ab32:	and    al,0xd0
  42ab34:	cld    
  42ab35:	mov    edi,0x3827dfd1
  42ab3a:	cs sub al,0x16
  42ab3d:	and    eax,0x7a2d09
	...
  42abb2:	add    BYTE PTR [eax],al
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	pop    ebx
  42abc1:	dec    edx
  42abc2:	xchg   edx,eax
  42abc3:	pop    ebx
  42abc4:	mov    esp,eax
  42abc6:	add    DWORD PTR [eax],eax
  42abc8:	cmc    
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [esi-0x7d9ab931],bl
  42abd1:	jp     0x42abef
  42abd3:	ficomp DWORD PTR [edx+ebx*1+0x6]
  42abd7:	mov    al,0xa
  42abd9:	nop
  42abda:	pop    ss
  42abdb:	lahf   
  42abdc:	pop    ebp
  42abdd:	xchg   edx,eax
  42abde:	inc    esi
  42abdf:	cmp    ah,BYTE PTR [ebp+0x39]
  42abe2:	aam    0x74
  42abe4:	test   esp,ebp
  42abe6:	jmp    0x2f4e5936
  42abeb:	xlat   BYTE PTR ds:[ebx]
  42abec:	arpl   si,sp
  42abee:	mov    ch,0x31
  42abf0:	retf   0x49b5
  42abf3:	pop    ss
  42abf4:	push   cs
  42abf5:	outs   dx,DWORD PTR ds:[esi]
  42abf6:	sub    DWORD PTR [esi-0x5699dcde],edi
  42abfc:	push   esp
  42abfd:	jmp    0x49c6:0x54543f81
  42ac04:	retf   
  42ac05:	xchg   esp,ebx
  42ac07:	sub    DWORD PTR [ebx],eax
  42ac09:	and    DWORD PTR [ecx+0x7e],esi
  42ac0c:	retf   
  42ac0d:	xor    edi,0x26
  42ac10:	jmp    0x42ac36
  42ac12:	in     al,dx
  42ac13:	(bad)  
  42ac15:	frstor [esi+0x5b4e0bc3]
  42ac1b:	or     BYTE PTR [edi+ebp*8],ch
  42ac1e:	addps  xmm4,XMMWORD PTR [edx-0x35f48e40]
  42ac25:	lea    edi,[esi]
  42ac27:	and    eax,0x23479148
  42ac2c:	push   0x1
  42ac2e:	cmp    eax,0x548173dc
  42ac33:	cld    
  42ac34:	js     0x42ac27
  42ac36:	push   cs
  42ac37:	sbb    edi,eax
  42ac39:	dec    eax
  42ac3a:	sub    edx,esp
  42ac3c:	test   al,0x8c
  42ac3e:	fistp  WORD PTR [eax]
  42ac40:	xchg   ebp,eax
  42ac41:	rcr    BYTE PTR [edx+0x76347b09],0x9f
  42ac48:	cwde   
  42ac49:	mov    bl,BYTE PTR ss:[ecx+0x1817c8b8]
  42ac50:	std    
  42ac51:	push   eax
  42ac52:	aas    
  42ac53:	(bad)  
  42ac54:	dec    ebp
  42ac55:	mov    bh,0xde
  42ac57:	int3   
  42ac58:	push   ecx
  42ac59:	mov    esp,0x2412995e
  42ac5e:	out    dx,al
  42ac5f:	adc    bl,bh
  42ac61:	dec    ebp
  42ac62:	mov    ch,BYTE PTR [ebx-0x45a2c00f]
  42ac68:	jmp    0xec84:0x80720927
  42ac6f:	retf   0xda00
  42ac72:	mov    ?,WORD PTR [eax]
  42ac74:	pushf  
  42ac75:	(bad)  
  42ac76:	in     al,0xe9
  42ac78:	test   DWORD PTR [eax-0x1a],esi
  42ac7b:	push   ebp
  42ac7c:	enter  0x54ef,0x3a
  42ac80:	in     al,0x8
  42ac82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac83:	loop   0x42acc0
  42ac85:	sbb    BYTE PTR [eax+eiz*2],dh
  42ac88:	outs   dx,BYTE PTR ds:[esi]
  42ac89:	push   edi
  42ac8a:	or     al,0xb
  42ac8c:	jno    0x42ac99
  42ac8e:	mov    esp,0xd88e4215
  42ac93:	leave  
  42ac94:	loopne 0x42ac4e
  42ac96:	mov    ds:0x5e83a573,eax
  42ac9b:	arpl   WORD PTR ds:0x3cc0a7be,dx
  42aca1:	sub    edi,DWORD PTR [ecx+0x5547d78f]
  42aca7:	nop
  42aca8:	lahf   
  42aca9:	out    0x44,eax
  42acab:	(bad)  
  42acae:	mov    dh,al
  42acb0:	xor    BYTE PTR [ecx+0x6f12bd24],bh
  42acb6:	sub    eax,0x61375599
  42acbb:	stos   DWORD PTR es:[edi],eax
  42acbc:	out    dx,al
  42acbd:	adc    al,0x74
  42acbf:	(bad)  
  42acc0:	cmp    al,BYTE PTR [eax]
	...
  42ad32:	add    BYTE PTR [eax],al
  42ad34:	fwait
  42ad35:	mov    bh,0xc4
  42ad37:	or     al,0xec
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	nop    DWORD PTR [esi+0x50]
  42ad43:	inc    edi
  42ad44:	jle    0x42ad0b
  42ad46:	add    DWORD PTR [eax],eax
  42ad48:	cmc    
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    BYTE PTR [edi+0x1b],ch
  42ad4e:	sbb    edx,ebp
  42ad50:	jo     0x42ad81
  42ad52:	(bad)  
  42ad53:	sbb    cl,BYTE PTR [edx-0x61]
  42ad56:	xor    dl,BYTE PTR cs:[esi+0xd]
  42ad5a:	fisubr DWORD PTR [ecx+eax*8]
  42ad5d:	adc    al,0x1e
  42ad5f:	mov    cl,0xdb
  42ad61:	adc    bl,ah
  42ad63:	iret   
  42ad64:	xor    edx,ecx
  42ad66:	mov    ch,BYTE PTR [eax+0x77]
  42ad69:	(bad)  
  42ad6a:	aad    0xa4
  42ad6c:	bound  ecx,QWORD PTR [edi+edx*1+0x7777da08]
  42ad73:	scas   eax,DWORD PTR es:[edi]
  42ad74:	dec    ebx
  42ad75:	cmp    bl,BYTE PTR [ebp-0x761fd72]
  42ad7b:	jle    0x42ad07
  42ad7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad7e:	and    BYTE PTR [eax-0x32],dl
  42ad81:	dec    ecx
  42ad82:	pop    ebp
  42ad83:	push   es
  42ad84:	adc    ah,dh
  42ad86:	leave  
  42ad87:	jnp    0x42ad12
  42ad89:	icebp  
  42ad8a:	xor    al,0xdc
  42ad8c:	xchg   edx,eax
  42ad8d:	ds push eax
  42ad8f:	ja     0x42ad7e
  42ad91:	sub    edi,eax
  42ad93:	rcr    BYTE PTR [ebp-0x1fcf2164],1
  42ad99:	push   ebp
  42ad9a:	aas    
  42ad9b:	js     0x42ad50
  42ad9d:	inc    ecx
  42ad9e:	push   ebp
  42ad9f:	(bad)  
  42ada0:	scas   eax,DWORD PTR es:[edi]
  42ada1:	out    dx,eax
  42ada2:	fwait
  42ada3:	cmp    eax,0xbe5c8e83
  42ada8:	mov    ah,0x6b
  42adaa:	push   es
  42adab:	rcl    BYTE PTR [edi],0x3
  42adae:	xor    esp,DWORD PTR [eax*8+0x1a0d3700]
  42adb5:	mov    ch,0xb
  42adb7:	bound  eax,QWORD PTR [edi-0x74]
  42adba:	out    0xa4,eax
  42adbc:	cld    
  42adbd:	pop    ecx
  42adbe:	stos   DWORD PTR es:[edi],eax
  42adbf:	stos   BYTE PTR es:[edi],al
  42adc0:	push   ecx
  42adc1:	xor    BYTE PTR [esi],bh
  42adc3:	sub    esi,edi
  42adc5:	ret    0xbea4
  42adc8:	inc    eax
  42adc9:	(bad)  
  42adcc:	lods   al,BYTE PTR ds:[esi]
  42adcd:	inc    ebx
  42adce:	inc    esp
  42adcf:	pop    ebp
  42add0:	fucomip st,st(6)
  42add2:	xchg   esp,eax
  42add3:	outs   dx,BYTE PTR ds:[esi]
  42add4:	fucomp st(1)
  42add6:	retf   0xdc05
  42add9:	ins    BYTE PTR es:[edi],dx
  42adda:	sub    edi,DWORD PTR [eax]
  42addc:	fcomp  DWORD PTR [edi+edx*4]
  42addf:	hlt    
  42ade0:	adc    BYTE PTR [edx-0x73],bh
  42ade3:	mov    cl,0xd
  42ade5:	retf   
  42ade6:	or     ch,BYTE PTR [ecx]
  42ade8:	push   edi
  42ade9:	test   al,0xf7
  42adeb:	xchg   DWORD PTR [esi-0x4f],ecx
  42adee:	mov    eax,0xcf444d0b
  42adf3:	neg    ebp
  42adf5:	mov    DWORD PTR [esi-0x7da45a75],ebx
  42adfb:	and    dh,cl
  42adfd:	adc    al,0xed
  42ae00:	add    ch,BYTE PTR ss:[ecx+ecx*4]
  42ae04:	sbb    eax,0x788ba212
  42ae09:	mov    edx,edx
  42ae0b:	and    BYTE PTR [ecx-0x15],bh
  42ae0e:	scas   eax,DWORD PTR es:[edi]
  42ae0f:	bound  esi,QWORD PTR [ebp+0x693351df]
  42ae15:	mov    edx,0x6952d837
  42ae1a:	fs in  eax,dx
  42ae1c:	sub    ecx,DWORD PTR ds:0xe80815ff
  42ae22:	mov    ds:0x57c37c9,al
  42ae27:	and    eax,0xbd2fcb96
  42ae2c:	dec    ecx
  42ae2d:	or     al,0x34
  42ae2f:	clc    
  42ae30:	fsubr  DWORD PTR [ecx-0x4bf9f047]
  42ae36:	neg    BYTE PTR [edi+0x388fc529]
  42ae3c:	test   BYTE PTR [ebp+0x488c17],dl
	...
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	xor    ebx,ebp
  42aec2:	push   ebp
  42aec3:	mov    esi,0x1c673
  42aec8:	cmc    
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    dl,cl
  42aecd:	cmc    
  42aece:	pushf  
  42aecf:	scas   al,BYTE PTR es:[edi]
  42aed0:	inc    edi
  42aed1:	jnp    0x42aeda
  42aed3:	mov    ecx,0xadb627bf
  42aed8:	mov    edi,0x5c1d4825
  42aedd:	fstp   DWORD PTR [esi]
  42aedf:	jge    0x42ae82
  42aee1:	les    esp,FWORD PTR ss:[esi+0xf283ce5]
  42aee8:	push   ds
  42aee9:	xchg   edi,eax
  42aeea:	fldcw  WORD PTR [eax]
  42aeec:	mov    ebx,0xfde4c640
  42aef1:	sub    eax,0x801b8407
  42aef6:	push   edi
  42aef7:	fisttp WORD PTR [esi]
  42aef9:	jp     0x42af4a
  42aefb:	jmp    0x42aea0
  42aefd:	pushf  
  42aefe:	xlat   BYTE PTR ds:[ebx]
  42aeff:	push   es
  42af00:	sub    BYTE PTR [ebp+0xabb1a87],al
  42af06:	xor    DWORD PTR [edi+0x4c],esi
  42af09:	mov    edx,esp
  42af0b:	int    0x12
  42af0d:	push   esp
  42af0e:	xor    edi,DWORD PTR [edi+0x5e117cd9]
  42af14:	call   0xd96f:0xe8b43faa
  42af1b:	jnp    0x42af1a
  42af1d:	ins    BYTE PTR es:[edi],dx
  42af1e:	sbb    DWORD PTR [edi+0x3614f463],ecx
  42af24:	mov    dh,0x50
  42af26:	adc    al,0xaa
  42af28:	and    BYTE PTR [edx-0x3034a9f2],dl
  42af2e:	imul   esi,eax,0xffffffe1
  42af31:	jo     0x42aee9
  42af33:	dec    esi
  42af34:	ret    
  42af35:	mov    ds:0xfaaa5a5e,eax
  42af3a:	dec    edx
  42af3b:	not    DWORD PTR [edx-0x42a2ac6f]
  42af41:	xor    ah,BYTE PTR [edx+0x64f32346]
  42af47:	gs jnp 0x42af2d
  42af4a:	mov    edi,0x28ff81c0
  42af4f:	rep outs dx,BYTE PTR ds:[esi]
  42af51:	cmp    al,0xd
  42af53:	pop    ss
  42af54:	adc    al,0xcf
  42af56:	(bad)  [ebx]
  42af58:	cmc    
  42af59:	xchg   edx,eax
  42af5a:	cs ret 
  42af5c:	test   eax,0x20619551
  42af61:	sub    cl,BYTE PTR [eax+0x45]
  42af64:	jp     0x42afcc
  42af66:	inc    edx
  42af67:	or     al,0x93
  42af69:	mov    cl,0x2
  42af6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af6c:	outs   dx,BYTE PTR ds:[esi]
  42af6d:	mov    dl,0x4f
  42af6f:	sahf   
  42af70:	popa   
  42af71:	push   edx
  42af72:	and    cl,cl
  42af74:	sub    esi,DWORD PTR [edi+0x4f]
  42af77:	shl    al,1
  42af79:	inc    edx
  42af7a:	jecxz  0x42af5b
  42af7c:	fild   DWORD PTR [esi+edx*1-0x6c]
  42af80:	je     0x42afe0
  42af82:	sbb    ecx,DWORD PTR ds:0xc596d758
  42af88:	sbb    ch,BYTE PTR [eax+ecx*2]
  42af8b:	data16 sbb BYTE PTR [edi+0x5b],dh
  42af8f:	sub    DWORD PTR [eax+0x7d],ebx
  42af92:	jns    0x42af30
  42af94:	add    BYTE PTR [edx-0x35],bl
  42af97:	lods   eax,DWORD PTR ds:[esi]
  42af98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af99:	ret    0x420b
  42af9c:	ins    DWORD PTR es:[edi],dx
  42af9d:	sub    DWORD PTR [edi+0x9],ebx
  42afa0:	inc    ebx
  42afa1:	(bad)  
  42afa2:	cdq    
  42afa3:	pop    ebp
  42afa4:	into   
  42afa5:	push   edx
  42afa6:	jmp    0x42b022
  42afa8:	xchg   dh,dh
  42afaa:	aas    
  42afab:	mov    ds:0x4bea9c27,al
  42afb0:	test   al,0x4
  42afb2:	mov    al,fs:0xdb68d5c7
  42afb8:	dec    ebp
  42afb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afba:	xor    eax,0x3118eb5d
  42afbf:	cmc    
  42afc0:	xchg   edi,eax
	...
  42b031:	add    BYTE PTR [eax],al
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x3068
  42b042:	jnp    0x42b094
  42b044:	push   0xf50001c7
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [edx+0x5ae8cd38],ch
  42b051:	lahf   
  42b052:	mov    al,BYTE PTR [eax-0x3334c3f1]
  42b058:	shr    DWORD PTR [edx-0x2a4eebe],0x81
  42b05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b060:	sub    BYTE PTR [ecx],dl
  42b062:	xor    eax,0x1183d29
  42b067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b068:	jnp    0x42b033
  42b06a:	dec    eax
  42b06b:	lahf   
  42b06c:	ja     0x42b06c
  42b06e:	xchg   edi,eax
  42b06f:	mov    al,0x96
  42b071:	imul   esp,DWORD PTR gs:[esi+0xb2eb0d7],0xbc6fc851
  42b07c:	jp     0x42b0f7
  42b07e:	push   0x5d
  42b080:	jmp    0x5514:0xd41c32c
  42b087:	cmp    DWORD PTR [ebx+0x11],ebx
  42b08a:	mov    eax,0x6d69cc7a
  42b08f:	aam    0x99
  42b091:	adc    dh,BYTE PTR [ecx]
  42b093:	rol    DWORD PTR [edi+0x66d6e2c8],0x8a
  42b09a:	ret    
  42b09b:	adc    al,0xcb
  42b09d:	push   ebx
  42b09e:	or     al,BYTE PTR [ebx+0x32]
  42b0a1:	jp     0x42b028
  42b0a3:	push   0x9ea8c188
  42b0a8:	inc    esp
  42b0a9:	adc    eax,0xdfd57567
  42b0ae:	jecxz  0x42b0d7
  42b0b0:	inc    eax
  42b0b1:	or     DWORD PTR es:[edx],0x701b8ad7
  42b0b8:	dec    ebp
  42b0b9:	lahf   
  42b0ba:	or     cl,dl
  42b0bc:	adc    DWORD PTR [eax+0x58bac853],0xf863895f
  42b0c6:	mov    al,BYTE PTR [edx+0x77]
  42b0c9:	fcomp  st(6)
  42b0cb:	in     eax,dx
  42b0cc:	mov    dl,0x10
  42b0ce:	jecxz  0x42b07f
  42b0d0:	or     bh,BYTE PTR [edx+eiz*1+0x27]
  42b0d4:	dec    edx
  42b0d5:	(bad)  
  42b0d6:	ds pop ss
  42b0d8:	sub    eax,DWORD PTR [eax-0x5]
  42b0db:	or     cl,BYTE PTR ds:0x44261958
  42b0e1:	mul    DWORD PTR [ebx]
  42b0e3:	sub    BYTE PTR [esi],bl
  42b0e5:	jle    0x42b0e0
  42b0e7:	mov    ds:0x39f4bfd1,al
  42b0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0ed:	pop    edx
  42b0ee:	lea    di,[edx]
  42b0f1:	ja     0x42b0fd
  42b0f3:	push   ebp
  42b0f4:	jmp    0xc1c396f3
  42b0f9:	and    DWORD PTR fs:[ebx+0x35],eax
  42b0fd:	loop   0x42b105
  42b0ff:	pop    es
  42b100:	jns    0x42b084
  42b102:	adc    dl,BYTE PTR [ecx+ecx*2+0x43d3a53c]
  42b109:	sub    al,0x16
  42b10b:	jne    0x42b184
  42b10d:	and    al,0x55
  42b10f:	xor    dl,cl
  42b111:	fadd   QWORD PTR [edi]
  42b113:	les    ebp,FWORD PTR [ebp-0x5df739ce]
  42b119:	sbb    BYTE PTR [edi-0x2b],ah
  42b11c:	inc    ebp
  42b11d:	inc    edx
  42b11e:	rol    DWORD PTR [eax-0x22cef025],cl
  42b124:	push   ecx
  42b125:	popa   
  42b126:	(bad)  
  42b128:	stc    
  42b129:	cli    
  42b12a:	mov    al,BYTE PTR [ebx]
  42b12c:	xlat   BYTE PTR ds:[ebx]
  42b12d:	sar    DWORD PTR [esi+0x725802f1],0xe7
  42b134:	inc    esp
  42b135:	sti    
  42b136:	jmp    0x42b148
  42b138:	(bad)  
  42b139:	clc    
  42b13a:	ins    DWORD PTR es:[edi],dx
  42b13b:	movd   edi,mm4
  42b13e:	mov    esi,0x2941
	...
  42b1b3:	add    BYTE PTR [ebx],ch
  42b1b5:	test   DWORD PTR [ebp-0x50e640e7],edx
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	jns    0x42b160
  42b1c2:	xor    ecx,ecx
  42b1c4:	pop    ebp
  42b1c5:	enter  0x1,0xf5
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    BYTE PTR [ebp+0x3769ca35],bl
  42b1d1:	push   ss
  42b1d2:	adc    bl,BYTE PTR [edi-0x4c]
  42b1d5:	not    DWORD PTR [ebx]
  42b1d7:	adc    edi,DWORD PTR [ebx-0x23]
  42b1da:	mov    ds:0x56a0d1cd,eax
  42b1df:	imul   edi,esi,0xffffffea
  42b1e2:	int3   
  42b1e3:	and    al,0xa8
  42b1e5:	push   ss
  42b1e6:	mov    DWORD PTR [esi+eax*4+0x21],eax
  42b1ea:	(bad)  
  42b1eb:	pop    eax
  42b1ec:	shl    BYTE PTR [eax+0x78],0x50
  42b1f0:	cld    
  42b1f1:	inc    eax
  42b1f2:	push   ebx
  42b1f3:	stc    
  42b1f4:	lahf   
  42b1f5:	mov    esp,0x2768f564
  42b1fa:	ins    BYTE PTR es:[edi],dx
  42b1fb:	jl     0x42b203
  42b1fd:	and    ah,BYTE PTR fs:[eax+0x1d]
  42b201:	into   
  42b202:	lods   al,BYTE PTR ds:[esi]
  42b203:	in     eax,0x1f
  42b205:	sbb    cl,bl
  42b207:	mov    esi,DWORD PTR [eax]
  42b209:	aad    0xb3
  42b20b:	or     DWORD PTR [esi-0x69ecfe9a],esp
  42b211:	mov    al,al
  42b213:	aaa    
  42b214:	push   0x14
  42b216:	mov    ebx,DWORD PTR [eax-0x164d7a6c]
  42b21c:	xchg   BYTE PTR [ebx-0x20],dl
  42b21f:	push   ebx
  42b220:	mov    edx,0xb14ce919
  42b225:	inc    ebx
  42b226:	push   ebx
  42b227:	pushf  
  42b228:	ret    0xbb84
  42b22b:	and    bl,BYTE PTR [eax-0x38]
  42b22e:	aam    0x58
  42b230:	inc    ecx
  42b231:	push   edi
  42b232:	(bad)  
  42b233:	sub    esi,DWORD PTR [esi+0x667d125]
  42b239:	mov    ah,0x7d
  42b23b:	mov    edx,0xdd246b21
  42b240:	stc    
  42b241:	inc    ebx
  42b242:	mov    al,0xb6
  42b244:	add    ah,ah
  42b246:	pop    ecx
  42b247:	mov    eax,ds:0xdd91c4f2
  42b24c:	shl    BYTE PTR [eax-0x29],1
  42b24f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b250:	icebp  
  42b251:	add    eax,0xc4989509
  42b256:	out    dx,al
  42b257:	cmp    ebp,esi
  42b259:	inc    esi
  42b25a:	push   cs
  42b25b:	fst    DWORD PTR [edx-0x1cfc1f38]
  42b261:	jne    0x42b243
  42b263:	dec    eax
  42b264:	outs   dx,DWORD PTR ds:[esi]
  42b265:	ja     0x42b2d2
  42b267:	xor    BYTE PTR [eax-0x4a],bl
  42b26a:	in     al,dx
  42b26b:	das    
  42b26c:	push   es
  42b26d:	and    eax,0x9cf25ee3
  42b272:	or     BYTE PTR [esi-0x39bd6b20],ch
  42b278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b279:	adc    DWORD PTR [edx+ebx*1],0x41ae159e
  42b280:	jecxz  0x42b26a
  42b282:	mov    ah,0xeb
  42b284:	mov    ecx,ss
  42b286:	xor    eax,0xe43d1f32
  42b28b:	dec    esp
  42b28c:	or     DWORD PTR [edi+0x4ba1f9f5],ebx
  42b292:	out    dx,al
  42b293:	cli    
  42b294:	mov    ebp,0x698ec427
  42b299:	or     eax,0xa9bda01e
  42b29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b29f:	rcl    BYTE PTR [edx+0x1c],1
  42b2a2:	stos   DWORD PTR es:[edi],eax
  42b2a3:	je     0x42b22f
  42b2a5:	xlat   BYTE PTR ds:[ebx]
  42b2a6:	sub    BYTE PTR [ecx],al
  42b2a8:	jns    0x42b325
  42b2aa:	test   BYTE PTR [ebx+0x2d],bh
  42b2ad:	scas   al,BYTE PTR es:[edi]
  42b2ae:	imul   ebx,DWORD PTR [edi],0xffffff82
  42b2b1:	pf2iw  mm5,QWORD PTR [ebx]
  42b2b5:	xchg   edi,eax
  42b2b6:	inc    esi
  42b2b7:	push   edx
  42b2b8:	scas   eax,DWORD PTR es:[edi]
  42b2b9:	in     eax,0xcc
  42b2bb:	or     al,BYTE PTR ds:0x8de88370
	...
  42b331:	add    BYTE PTR [eax],al
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax+0x40],esi
  42b341:	push   ebx
  42b342:	dec    ebx
  42b343:	arpl   WORD PTR [edx-0x37],dx
  42b346:	add    DWORD PTR [eax],eax
  42b348:	cmc    
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    BYTE PTR [eax],dh
  42b34d:	in     al,dx
  42b34e:	xchg   ebp,eax
  42b34f:	repnz sbb al,0xc8
  42b352:	sub    BYTE PTR [ebp-0x7a],dl
  42b355:	pop    edx
  42b356:	jp     0x42b343
  42b358:	popa   
  42b359:	jge    0x42b342
  42b35b:	js     0x42b39d
  42b35d:	cmp    eax,0x29146bf6
  42b362:	retf   
  42b363:	sbb    edi,ecx
  42b365:	sub    al,0x4c
  42b367:	mov    ch,BYTE PTR [ebx-0x60]
  42b36a:	mov    BYTE PTR [ecx+ebx*8],cl
  42b36d:	lods   eax,DWORD PTR ds:[esi]
  42b36e:	inc    eax
  42b36f:	pop    eax
  42b370:	shl    DWORD PTR ds:0xe859a7b7,0xfc
  42b377:	enter  0xcde1,0x8f
  42b37b:	fcomp  DWORD PTR [ebx+0x61c8d9cf]
  42b381:	cld    
  42b382:	lahf   
  42b383:	fild   WORD PTR [edx]
  42b385:	xor    edx,0xffffffac
  42b388:	xor    DWORD PTR [ecx],0x298e3021
  42b38e:	pop    eax
  42b38f:	adc    ebx,DWORD PTR [ecx+0x17]
  42b392:	pop    ds
  42b393:	(bad)  
  42b394:	(bad)  
  42b395:	add    dl,BYTE PTR [edx]
  42b397:	pusha  
  42b398:	les    ebx,FWORD PTR [ebx+0x27240484]
  42b39e:	popf   
  42b39f:	push   cs
  42b3a0:	into   
  42b3a1:	outs   dx,DWORD PTR ds:[esi]
  42b3a2:	push   ss
  42b3a3:	xchg   edx,eax
  42b3a4:	(bad)  
  42b3a5:	jae    0x42b38e
  42b3a7:	stos   DWORD PTR es:[edi],eax
  42b3a8:	add    BYTE PTR [edi-0x2],ah
  42b3ab:	xchg   BYTE PTR [ebx],bl
  42b3ad:	dec    ebx
  42b3ae:	cld    
  42b3af:	xor    BYTE PTR [edi-0x4fc4fb44],ch
  42b3b5:	pop    eax
  42b3b6:	inc    edi
  42b3b7:	inc    esp
  42b3b8:	dec    ecx
  42b3b9:	call   0xbea1568f
  42b3be:	js     0x42b435
  42b3c0:	cld    
  42b3c1:	lods   eax,DWORD PTR ds:[esi]
  42b3c2:	gs pushf 
  42b3c4:	jbe    0x42b389
  42b3c6:	push   ss
  42b3c7:	dec    esi
  42b3c8:	shl    DWORD PTR [eax+0x21],1
  42b3cb:	xchg   DWORD PTR [eiz*4+0x45702e97],edi
  42b3d2:	js     0x42b43c
  42b3d4:	pop    edi
  42b3d5:	sbb    edi,esi
  42b3d7:	dec    eax
  42b3d8:	sub    bh,dl
  42b3da:	and    edx,esi
  42b3dc:	(bad)  
  42b3dd:	fcmovne st,st(0)
  42b3df:	pop    ss
  42b3e0:	and    ch,BYTE PTR [ecx+ebp*1]
  42b3e3:	sub    bl,bh
  42b3e5:	(bad)  
  42b3e6:	into   
  42b3e7:	add    eax,0x78d1154b
  42b3ec:	mov    BYTE PTR [edi+0x5e311969],bh
  42b3f2:	pop    edx
  42b3f3:	bound  ebx,QWORD PTR [edi+0x325c9c21]
  42b3f9:	sub    cl,dh
  42b3fb:	(bad)  
  42b3fc:	js     0x42b463
  42b3fe:	mov    ebx,0xa50f79e3
  42b403:	jge    0x42b3e0
  42b405:	add    ebx,DWORD PTR [ecx+0x3c8667c3]
  42b40b:	sub    al,BYTE PTR [esi]
  42b40d:	xchg   DWORD PTR [edx],ecx
  42b40f:	lods   al,BYTE PTR ds:[esi]
  42b410:	mov    bh,0xe
  42b412:	or     BYTE PTR [esi+ebp*1-0xc75598e],al
  42b419:	xchg   edi,eax
  42b41a:	mov    dh,0x9
  42b41c:	xchg   ebx,eax
  42b41d:	imul   BYTE PTR ds:0xb6b355d
  42b423:	push   cs
  42b424:	ret    0x412a
  42b427:	bound  ebx,QWORD PTR [edx+edx*8]
  42b42a:	add    eax,DWORD PTR [ebx]
  42b42c:	mov    edx,0x87e20dce
  42b431:	pop    ebx
  42b432:	outs   dx,DWORD PTR ds:[esi]
  42b433:	sahf   
  42b434:	mov    ecx,0x87ac88ac
  42b439:	loopne 0x42b3d3
  42b43b:	inc    ecx
  42b43c:	xor    eax,0xb756806a
	...
  42b4b1:	add    BYTE PTR [eax],al
  42b4b3:	add    BYTE PTR [eax],bl
  42b4b5:	dec    edi
  42b4b6:	pop    ss
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	xchg   si,ax
  42b4c2:	xor    eax,DWORD PTR [ebx+0x47]
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    dh,dl
  42b4cd:	xlat   BYTE PTR ds:[ebx]
  42b4ce:	mov    BYTE PTR [edi-0x38],bl
  42b4d1:	xchg   esp,eax
  42b4d2:	pop    esp
  42b4d3:	xor    esp,DWORD PTR [edx]
  42b4d5:	outs   dx,BYTE PTR ds:[esi]
  42b4d6:	popf   
  42b4d7:	rol    DWORD PTR [edi],1
  42b4d9:	push   0x22
  42b4db:	mov    ah,0x53
  42b4dd:	and    al,0x63
  42b4df:	cmp    esp,esi
  42b4e1:	imul   ebx,DWORD PTR [ebp-0x193a5e1f],0xc353a21
  42b4eb:	cmp    dl,BYTE PTR [ebp-0x3ef85e4c]
  42b4f1:	adc    al,0xe0
  42b4f3:	sbb    ebx,DWORD PTR [edi+ecx*2-0x16603340]
  42b4fa:	shl    DWORD PTR [edx+0x31],0xd
  42b4fe:	outs   dx,BYTE PTR ds:[esi]
  42b4ff:	out    0x86,al
  42b501:	in     al,0x7
  42b503:	popf   
  42b504:	mov    esp,DWORD PTR [edx]
  42b506:	cmp    BYTE PTR [edx+ecx*1-0x10],0xc3
  42b50b:	ins    BYTE PTR es:[edi],dx
  42b50c:	(bad)  
  42b50d:	sub    al,0x6c
  42b50f:	lods   eax,DWORD PTR ds:[esi]
  42b510:	xchg   edi,eax
  42b511:	lahf   
  42b512:	iret   
  42b513:	cmp    DWORD PTR fs:[edx+esi*8+0x58eb5b6f],ebx
  42b51b:	mov    ecx,0xdbaaa74e
  42b520:	nop
  42b521:	pushf  
  42b522:	popf   
  42b523:	arpl   WORD PTR [edi-0x6fb7f374],bp
  42b529:	mov    ch,0x9d
  42b52b:	outs   dx,BYTE PTR ds:[esi]
  42b52c:	cli    
  42b52d:	loop   0x42b575
  42b52f:	fst    DWORD PTR [edx+0x1608b1c1]
  42b535:	adc    BYTE PTR [ebx-0x18],dl
  42b538:	popa   
  42b539:	retf   
  42b53a:	mov    eax,0x6086e49d
  42b53f:	and    DWORD PTR [ecx-0xb9f5783],eax
  42b545:	icebp  
  42b546:	dec    ecx
  42b547:	mov    ch,0x11
  42b549:	sub    DWORD PTR [ecx-0x12],esp
  42b54c:	push   eax
  42b54d:	xchg   DWORD PTR [ecx-0x2d],edi
  42b550:	sbb    DWORD PTR [eax-0x1b25f6f8],ebp
  42b556:	xor    cl,0x48
  42b559:	dec    eax
  42b55a:	mov    bh,0xaf
  42b55c:	aas    
  42b55d:	mov    dl,0x56
  42b55f:	push   ss
  42b560:	sub    BYTE PTR [esi-0x50],ah
  42b563:	dec    edi
  42b564:	ret    
  42b565:	call   0x30a8:0x59133485
  42b56c:	psubusb mm0,mm6
  42b56f:	sub    esp,DWORD PTR [edi+ecx*4]
  42b572:	sysret 
  42b574:	cmp    DWORD PTR [ebx+0x4382c883],ebx
  42b57a:	push   0xffffffb9
  42b57c:	scas   eax,DWORD PTR es:[edi]
  42b57d:	outs   dx,DWORD PTR ds:[esi]
  42b57e:	mov    ?,esi
  42b580:	or     al,0xba
  42b582:	imul   ebp,ecx,0x741786f2
  42b588:	and    dl,BYTE PTR [edx-0xe]
  42b58b:	aas    
  42b58c:	adc    DWORD PTR [ecx+0x379b84be],ecx
  42b592:	rol    BYTE PTR [esi+0x6bfc5f1a],cl
  42b598:	inc    edx
  42b599:	ss push ebp
  42b59b:	jae    0x42b614
  42b59d:	arpl   WORD PTR [esi+0x5fcb0fe2],bp
  42b5a3:	icebp  
  42b5a4:	jns    0x42b60d
  42b5a6:	push   es
  42b5a7:	test   eax,0xe030e18d
  42b5ac:	int    0x1
  42b5ae:	fcmovbe st,st(0)
  42b5b0:	imul   ebp,esp,0x6d
  42b5b3:	(bad)  
  42b5b4:	mov    ah,0x71
  42b5b6:	push   ebp
  42b5b7:	ss xor DWORD PTR cs:[ebx+eax*2-0x6af29d18],ebx
  42b5c0:	ja     0x42b5c2
	...
  42b632:	add    BYTE PTR [eax],al
  42b634:	and    al,0x16
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    ah,BYTE PTR [esi+eiz*1]
  42b642:	xchg   edi,eax
  42b643:	cmp    BYTE PTR [ebx+ecx*8],bh
  42b646:	add    DWORD PTR [eax],eax
  42b648:	cmc    
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    BYTE PTR [ecx+0x4],al
  42b64e:	mov    DWORD PTR [esi],ecx
  42b650:	xor    al,0x8f
  42b652:	xchg   ecx,eax
  42b653:	arpl   WORD PTR [ecx-0x63],di
  42b656:	mov    BYTE PTR [ebx],al
  42b658:	jmp    0xe76f694d
  42b65d:	cli    
  42b65e:	rcl    DWORD PTR [esi],1
  42b660:	pop    ds
  42b661:	stc    
  42b662:	out    dx,eax
  42b663:	arpl   WORD PTR [edi],sp
  42b665:	push   esp
  42b666:	loope  0x42b66d
  42b668:	retf   0x588f
  42b66b:	call   0xee2:0x8cdafe89
  42b672:	test   DWORD PTR [edx],0xb72d23c4
  42b678:	pusha  
  42b679:	push   es
  42b67a:	sbb    ebx,ebx
  42b67c:	mov    bh,0x66
  42b67e:	mov    ebx,0xd47756fe
  42b683:	std    
  42b684:	inc    eax
  42b685:	enter  0xfa53,0xd0
  42b689:	dec    edx
  42b68a:	xchg   esp,eax
  42b68b:	dec    ebx
  42b68c:	cs push edx
  42b68e:	jg     0x42b6fb
  42b690:	scas   al,BYTE PTR es:[edi]
  42b691:	xor    DWORD PTR [ebx+ebx*1-0x75],esi
  42b695:	mov    ebx,0x35a824ee
  42b69a:	pop    ecx
  42b69b:	add    eax,0xc9321abf
  42b6a0:	scas   al,BYTE PTR es:[edi]
  42b6a1:	add    eax,DWORD PTR [ebx]
  42b6a3:	mov    ch,0x22
  42b6a5:	mov    edx,0x9b90b1f0
  42b6aa:	fisub  DWORD PTR [edx]
  42b6ac:	mov    WORD PTR [ecx*2-0x4211b7b0],cs
  42b6b3:	inc    ecx
  42b6b4:	push   ebx
  42b6b5:	adc    eax,0x99bf3f8c
  42b6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6bb:	mov    BYTE PTR [ecx],bl
  42b6bd:	fistp  QWORD PTR [edx+ebx*8]
  42b6c0:	and    eax,DWORD PTR [edi+0x5382db1c]
  42b6c6:	or     al,0xdf
  42b6c8:	pop    ebp
  42b6c9:	xor    DWORD PTR [ebp+eax*1+0x12],ecx
  42b6cd:	jnp    0x42b690
  42b6cf:	mov    WORD PTR [edi+0x6e],ds
  42b6d2:	mov    bh,0x19
  42b6d4:	push   eax
  42b6d5:	inc    ebx
  42b6d6:	dec    ecx
  42b6d7:	in     al,dx
  42b6d8:	lds    eax,FWORD PTR [edi+0x3e]
  42b6db:	sub    DWORD PTR [ebp+0x7de97f50],ebx
  42b6e1:	cld    
  42b6e2:	in     eax,0x86
  42b6e4:	push   edi
  42b6e5:	mov    eax,DWORD PTR [ecx+0x39a388c9]
  42b6eb:	mov    ds:0x276264f2,al
  42b6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6f1:	test   BYTE PTR [eax+0x30],bl
  42b6f4:	sahf   
  42b6f5:	and    eax,0xc8d86027
  42b6fa:	mov    bh,0xd9
  42b6fc:	(bad)  
  42b6fd:	mul    DWORD PTR [ebp-0x69]
  42b700:	cld    
  42b701:	stos   DWORD PTR es:[edi],eax
  42b702:	ret    
  42b703:	add    esi,ecx
  42b705:	or     al,0xd6
  42b707:	or     DWORD PTR [ebx+0x6],edi
  42b70a:	(bad)  
  42b70b:	push   DWORD PTR [esi+0x3f]
  42b70e:	ins    DWORD PTR es:[edi],dx
  42b70f:	push   esi
  42b710:	retf   0xde05
  42b713:	mov    dl,0xd4
  42b715:	ret    0xfe2e
  42b718:	xchg   ecx,eax
  42b719:	pop    esp
  42b71a:	pop    ebx
  42b71b:	scas   al,BYTE PTR es:[edi]
  42b71c:	aas    
  42b71d:	sub    ah,BYTE PTR [ebp+0x0]
  42b720:	xchg   edi,eax
  42b721:	call   0xe767:0x9ba472b0
  42b728:	cmp    eax,DWORD PTR [ecx+edx*1+0x26]
  42b72c:	and    DWORD PTR [edi],edi
  42b72e:	inc    edi
  42b72f:	xor    edi,DWORD PTR [edx+0x72cf7d84]
  42b735:	mov    ebx,?
  42b737:	call   0x3415f2b3
  42b73c:	mov    dl,0xe0
  42b73e:	sbb    al,0x17
  42b740:	test   eax,0x0
	...
  42b7b1:	add    BYTE PTR [eax],al
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0xd24a2cfb
  42b7c3:	in     eax,0x31
  42b7c5:	int3   
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    cl,bl
  42b7cd:	test   BYTE PTR [esi+eax*8],bh
  42b7d0:	dec    eax
  42b7d1:	jae    0x42b846
  42b7d3:	sbb    dl,ah
  42b7d5:	xchg   esp,eax
  42b7d6:	test   ebx,esi
  42b7d8:	cmp    eax,0xd3ea5c7f
  42b7dd:	mov    ebp,0x77625408
  42b7e2:	in     al,0x2f
  42b7e4:	aas    
  42b7e5:	sti    
  42b7e6:	push   edi
  42b7e7:	outs   dx,BYTE PTR ds:[esi]
  42b7e8:	jl     0x42b7a6
  42b7ea:	outs   dx,DWORD PTR ds:[esi]
  42b7eb:	cwde   
  42b7ec:	pop    es
  42b7ed:	popa   
  42b7ee:	pushf  
  42b7ef:	ins    BYTE PTR es:[edi],dx
  42b7f0:	lods   eax,DWORD PTR ds:[esi]
  42b7f1:	and    ah,bl
  42b7f3:	fistp  WORD PTR [esi]
  42b7f5:	mov    ebp,0x961332f5
  42b7fa:	add    DWORD PTR [ebx-0x39],ecx
  42b7fd:	ret    0x1eda
  42b800:	imul   ecx,DWORD PTR [ebp+0x9a26b19],0xd6dc3aae
  42b80a:	daa    
  42b80b:	into   
  42b80c:	cmc    
  42b80d:	xchg   edi,eax
  42b80e:	aam    0xa5
  42b810:	push   ecx
  42b811:	div    BYTE PTR [edi+0x17f07ee6]
  42b817:	pop    edx
  42b818:	and    ebx,DWORD PTR [ebx-0x9ff2db3]
  42b81e:	mov    bh,0xd
  42b820:	dec    ebx
  42b821:	hlt    
  42b822:	repnz rol BYTE PTR [ebp+0x72],cl
  42b826:	and    dh,BYTE PTR [ebp+0x55]
  42b829:	movzx  edi,sp
  42b82c:	sub    al,0x87
  42b82e:	inc    ecx
  42b82f:	mov    esp,0xc0d87147
  42b834:	add    eax,0x45
  42b837:	(bad)
  42b83a:	xchg   ch,dh
  42b83c:	and    ch,ch
  42b83e:	push   ebx
  42b83f:	cs in  eax,0x5
  42b842:	mov    bl,0x3
  42b844:	lods   al,BYTE PTR ds:[si]
  42b846:	sbb    esi,0x884572b
  42b84c:	adc    al,0x8d
  42b84e:	in     eax,dx
  42b84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b850:	jne    0x42b8cf
  42b852:	push   ecx
  42b853:	sub    DWORD PTR [ebp+eiz*4-0x3b77e41d],0x62
  42b85b:	xor    BYTE PTR [ebx],cl
  42b85d:	or     eax,0xb2d1634f
  42b862:	mov    eax,0xb323ef78
  42b867:	sub    esi,ecx
  42b869:	bound  esi,QWORD PTR [eax+0x793d7eb9]
  42b86f:	cs dec ebx
  42b871:	clc    
  42b872:	mov    ah,0x71
  42b874:	js     0x42b8db
  42b876:	mov    dh,0x34
  42b878:	mov    dl,0x6a
  42b87a:	(bad)  
  42b87b:	mov    ecx,0xa6e5344d
  42b880:	xor    BYTE PTR [edi+0x79],ch
  42b883:	sbb    BYTE PTR [esi+ecx*1-0x6f33f67c],ah
  42b88a:	pop    eax
  42b88b:	pop    esi
  42b88c:	pop    esi
  42b88d:	test   eax,0xaee2134b
  42b892:	call   0x3a307340
  42b897:	jge    0x42b8ca
  42b899:	mov    esi,0x645fffcf
  42b89e:	popf   
  42b89f:	xchg   ebx,eax
  42b8a0:	jp     0x42b906
  42b8a2:	iret   
  42b8a3:	les    ecx,FWORD PTR [ecx+ebx*1]
  42b8a6:	ja     0x42b877
  42b8a8:	pop    ebp
  42b8a9:	sub    bl,bh
  42b8ab:	int    0xf8
  42b8ad:	and    cl,dl
  42b8af:	gs int 0xac
  42b8b2:	ret    0x34fd
  42b8b5:	dec    esp
  42b8b6:	outs   dx,DWORD PTR ds:[esi]
  42b8b7:	sub    ebp,DWORD PTR [ebx-0x60]
  42b8ba:	aad    0xc
  42b8bc:	jl     0x42b86b
  42b8be:	jno    0x42b91a
  42b8c0:	mov    DWORD PTR [eax],0x0
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	sub    eax,0x2627a833
  42b945:	int    0x1
  42b947:	add    ch,dh
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    cl,al
  42b94d:	and    al,0xc9
  42b94f:	nop
  42b950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b951:	sbb    al,0xb
  42b953:	gs adc dl,0xde
  42b957:	mov    al,0x50
  42b959:	dec    edi
  42b95a:	xor    BYTE PTR [ecx],bl
  42b95c:	sbb    esp,esi
  42b95e:	shl    BYTE PTR [edi+ebp*1-0x5d977405],cl
  42b965:	and    al,BYTE PTR [esi]
  42b967:	stc    
  42b968:	outs   dx,DWORD PTR ds:[esi]
  42b969:	push   cs
  42b96a:	cmp    DWORD PTR [eax-0x4c44c63b],esp
  42b970:	out    dx,al
  42b971:	aam    0x8f
  42b973:	jne    0x42b99b
  42b975:	xchg   ecx,eax
  42b976:	xor    al,0x39
  42b978:	ins    DWORD PTR es:[edi],dx
  42b979:	mov    ah,BYTE PTR [edx]
  42b97b:	xor    eax,DWORD PTR [edi]
  42b97d:	rol    DWORD PTR [eax-0x5ebbe3a9],cl
  42b983:	inc    esi
  42b984:	sub    BYTE PTR [edi-0x64],ch
  42b987:	neg    edi
  42b989:	js     0x42b974
  42b98b:	clc    
  42b98c:	jge    0x42b93f
  42b98e:	clc    
  42b98f:	jge    0x42b9a4
  42b991:	jbe    0x42b973
  42b993:	data16 mov ch,0xc2
  42b996:	pop    esp
  42b997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b998:	jmp    0x42b99e
  42b99a:	sbb    al,0xf8
  42b99c:	or     esi,DWORD PTR [edi+ebp*4-0x29]
  42b9a0:	leave  
  42b9a1:	mov    dh,0xbf
  42b9a3:	push   ecx
  42b9a4:	push   DWORD PTR [edx]
  42b9a6:	push   ecx
  42b9a7:	hlt    
  42b9a8:	and    bl,ah
  42b9aa:	fwait
  42b9ab:	adc    al,0x90
  42b9ad:	mov    ds:0xb0dd33b,al
  42b9b2:	sbb    BYTE PTR [esi+edi*8-0x78ec191f],dl
  42b9b9:	push   ss
  42b9ba:	ins    BYTE PTR es:[edi],dx
  42b9bb:	cwde   
  42b9bc:	fadd   QWORD PTR [ebx]
  42b9be:	imul   esp,DWORD PTR [esi-0x28],0x45
  42b9c2:	adc    edx,DWORD PTR [edi+0x4133fcdc]
  42b9c8:	shl    edx,cl
  42b9ca:	pop    es
  42b9cb:	leave  
  42b9cc:	test   eax,0x4c707786
  42b9d1:	dec    esi
  42b9d2:	inc    ebp
  42b9d3:	ins    BYTE PTR es:[edi],dx
  42b9d4:	jae    0x42ba1d
  42b9d6:	adc    DWORD PTR [esi+ebp*1],eax
  42b9d9:	and    eax,0x530b8e85
  42b9de:	push   ebx
  42b9df:	gs push esi
  42b9e1:	xchg   esi,eax
  42b9e2:	push   es
  42b9e3:	sub    BYTE PTR [edi+edx*2-0x2b],al
  42b9e7:	lds    ecx,FWORD PTR [ebx+0x5a]
  42b9ea:	dec    esp
  42b9eb:	fcmovu st,st(3)
  42b9ed:	and    eax,0x5e3df3a9
  42b9f2:	mov    cl,0xc0
  42b9f4:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42b9f6:	(bad)  
  42b9f7:	xchg   esp,eax
  42b9f8:	and    DWORD PTR [eax],eax
  42b9fa:	dec    esp
  42b9fb:	popa   
  42b9fc:	mov    WORD PTR [esi-0x70dd0f4f],ss
  42ba02:	sbb    ecx,ebx
  42ba04:	call   0x1f21036d
  42ba09:	push   edi
  42ba0a:	dec    ecx
  42ba0b:	xchg   ecx,eax
  42ba0c:	sub    edx,DWORD PTR ss:[edi]
  42ba0f:	mov    edi,0xefbb1e29
  42ba14:	es in  eax,0xd4
  42ba17:	(bad)  
  42ba18:	dec    esi
  42ba19:	push   ss
  42ba1a:	lds    eax,FWORD PTR [ecx]
  42ba1c:	ja     0x42ba08
  42ba1e:	ror    DWORD PTR [ecx-0x62f21d62],cl
  42ba24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba25:	sub    eax,0x99fb0671
  42ba2a:	fild   WORD PTR [ebx]
  42ba2c:	xchg   edi,eax
  42ba2d:	scas   eax,DWORD PTR es:[edi]
  42ba2e:	retf   0xcb0f
  42ba31:	jb     0x42ba12
  42ba33:	push   ecx
  42ba34:	xchg   ah,ah
  42ba36:	pop    eax
  42ba37:	(bad)  
  42ba38:	sbb    ebx,DWORD PTR [esi+esi*2-0x46835e55]
  42ba3f:	jg     0x42b9ff
	...
  42bab1:	add    BYTE PTR [eax],al
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x700f434c]
  42bac2:	push   esi
  42bac3:	nop
  42bac4:	sbb    ecx,esi
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [esi],bl
  42bacd:	test   BYTE PTR [edx+0x55],dh
  42bad0:	adc    BYTE PTR [eax+esi*4-0x5cf5bb9],al
  42bad7:	jge    0x42bb0e
  42bad9:	cmp    eax,DWORD PTR [edx]
  42badb:	out    dx,eax
  42badc:	jae    0x42bb48
  42bade:	sub    al,0x2e
  42bae0:	ja     0x42ba85
  42bae2:	repnz mov esi,0x36a961eb
  42bae8:	pause  
  42baea:	sub    DWORD PTR [eax],esp
  42baec:	mov    al,ds:0xb53b356a
  42baf1:	pop    eax
  42baf2:	dec    ebp
  42baf3:	cdq    
  42baf4:	repnz mov al,0x66
  42baf7:	mov    ds:0x55688744,al
  42bafc:	lock stos BYTE PTR es:[edi],al
  42bafe:	mov    bl,0x65
  42bb00:	bound  edx,QWORD PTR [edx]
  42bb02:	lds    esp,FWORD PTR [edi+eiz*2]
  42bb05:	add    eax,0x767cc54b
  42bb0a:	sub    esp,esi
  42bb0c:	(bad)  
  42bb0d:	adc    esp,esi
  42bb0f:	pop    ss
  42bb10:	mov    al,0xfe
  42bb12:	mov    ecx,0x92235830
  42bb17:	dec    esi
  42bb18:	popa   
  42bb19:	cmp    eax,edi
  42bb1b:	pop    ebp
  42bb1c:	add    al,0x7e
  42bb1e:	(bad)  
  42bb1f:	xchg   ecx,eax
  42bb20:	or     eax,0x2572c8c1
  42bb25:	push   0x73
  42bb27:	loopne 0x42bae4
  42bb29:	jae    0x42bb46
  42bb2b:	adc    eax,0x2760aaa1
  42bb30:	pop    ss
  42bb31:	mov    bl,BYTE PTR [ebx-0x18]
  42bb34:	shl    BYTE PTR [ecx+0x57076769],1
  42bb3a:	(bad)  
  42bb3b:	jne    0x42bb23
  42bb3d:	shl    DWORD PTR [ebx+edx*1],cl
  42bb40:	fld    DWORD PTR [esi+0x6d]
  42bb43:	cmp    al,0x22
  42bb45:	and    bh,BYTE PTR [edi]
  42bb47:	jbe    0x42bb55
  42bb49:	add    ch,BYTE PTR [ecx-0x747a354d]
  42bb4f:	test   eax,0x8d3d4534
  42bb54:	repnz jmp 0x35da:0x4ede2392
  42bb5c:	fwait
  42bb5d:	and    DWORD PTR [esi-0x768c8869],0x4353f86e
  42bb67:	int    0x65
  42bb69:	test   DWORD PTR [edi+0x77b43cdf],0x5a6cc93b
  42bb73:	dec    ebp
  42bb74:	outs   dx,BYTE PTR ds:[esi]
  42bb75:	mov    ebx,0x74ea2f75
  42bb7a:	jo     0x42bbb5
  42bb7c:	xchg   esp,eax
  42bb7d:	jl     0x42bb00
  42bb7f:	adc    BYTE PTR [edi],cl
  42bb81:	adc    bh,BYTE PTR [ebx+0x2dc50d61]
  42bb87:	push   es
  42bb88:	inc    ebx
  42bb89:	rcr    BYTE PTR [ecx],cl
  42bb8b:	arpl   WORD PTR [ecx],bp
  42bb8d:	xchg   ebx,eax
  42bb8e:	das    
  42bb8f:	pop    esi
  42bb90:	mov    ah,BYTE PTR [ebx-0x4e8f6118]
  42bb96:	xor    eax,0x4d6a2951
  42bb9b:	jmp    0x6188:0x4c657d06
  42bba2:	pop    esp
  42bba3:	dec    ebp
  42bba4:	and    BYTE PTR [ebp-0x4702f681],ah
  42bbaa:	sar    eax,cl
  42bbac:	cmp    eax,0x742f41fd
  42bbb1:	test   al,0x72
  42bbb3:	ds cld 
  42bbb5:	xor    eax,0xb58684ec
  42bbba:	cmp    al,0xa5
  42bbbc:	sub    eax,edx
  42bbbe:	sbb    eax,0x6033
	...
  42bc33:	add    cl,ch
  42bc35:	xor    bl,BYTE PTR [edx+edi*1]
  42bc38:	fistp  QWORD PTR [esi]
  42bc3a:	out    dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x9b
  42bc41:	pop    edi
  42bc42:	sti    
  42bc43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc44:	adc    bh,cl
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [ebp-0x16],bl
  42bc4e:	imul   edi,DWORD PTR [esi],0xec6502fd
  42bc54:	aad    0x7a
  42bc56:	sahf   
  42bc57:	inc    eax
  42bc58:	and    eax,0xcde806ca
  42bc5d:	ss mov al,0xed
  42bc60:	retf   
  42bc61:	add    BYTE PTR [ecx-0x2c],0x8d
  42bc65:	out    dx,eax
  42bc66:	sub    bl,BYTE PTR [ebp-0x7d502988]
  42bc6c:	jo     0x42bcb7
  42bc6e:	pop    ecx
  42bc6f:	je     0x42bc7d
  42bc71:	js     0x42bc4d
  42bc73:	jg     0x42bca3
  42bc75:	push   esi
  42bc76:	mov    al,0x76
  42bc78:	int3   
  42bc79:	(bad)  
  42bc7a:	dec    ebp
  42bc7b:	sti    
  42bc7c:	pusha  
  42bc7d:	mov    al,ds:0xb25c490a
  42bc82:	aad    0x99
  42bc84:	cli    
  42bc85:	xchg   esi,eax
  42bc86:	mov    ds:0x4b3bfef2,eax
  42bc8b:	pop    eax
  42bc8c:	cwde   
  42bc8d:	sahf   
  42bc8e:	jge    0x42bcac
  42bc90:	imul   edx,DWORD PTR ds:0xef078816,0x6c8d03cb
  42bc9a:	xor    al,0x8d
  42bc9c:	sub    edi,esp
  42bc9e:	xor    DWORD PTR cs:[ebx+edi*8-0x7b],eax
  42bca3:	stc    
  42bca4:	jb     0x42bcc3
  42bca6:	rol    DWORD PTR [edi+0x7c],1
  42bca9:	dec    edx
  42bcaa:	dec    ebx
  42bcab:	imul   esp,DWORD PTR [ebx-0x51],0xffffff94
  42bcaf:	scas   eax,DWORD PTR es:[edi]
  42bcb0:	pop    ebx
  42bcb1:	sub    BYTE PTR [esi],0x54
  42bcb4:	and    esp,esp
  42bcb6:	xchg   esp,eax
  42bcb7:	ins    BYTE PTR es:[edi],dx
  42bcb8:	(bad)  
  42bcb9:	(bad)  
  42bcba:	retf   0xde5a
  42bcbd:	shl    DWORD PTR [ecx],0xa0
  42bcc0:	aas    
  42bcc1:	and    ebp,DWORD PTR [eax]
  42bcc3:	and    BYTE PTR [edx+0x40819c60],bh
  42bcc9:	(bad)  
  42bcca:	lock mov al,ds:0x7ad057e5
  42bcd0:	outs   dx,BYTE PTR ds:[esi]
  42bcd1:	arpl   WORD PTR [esi+eax*8-0x47],ax
  42bcd5:	(bad)  
  42bcd6:	neg    BYTE PTR [esi]
  42bcd8:	imul   eax,DWORD PTR [esi+0x23f12c07],0xffffff8e
  42bcdf:	jg     0x42bc90
  42bce1:	out    dx,eax
  42bce2:	or     al,0x12
  42bce4:	push   edi
  42bce5:	stc    
  42bce6:	scas   al,BYTE PTR es:[edi]
  42bce7:	xchg   esi,eax
  42bce8:	clc    
  42bce9:	cmp    al,cl
  42bceb:	or     al,dh
  42bced:	mov    al,0xe5
  42bcef:	jecxz  0x42bd4c
  42bcf1:	sbb    dl,0x76
  42bcf4:	es mov eax,0xc4c8d4a4
  42bcfa:	shr    DWORD PTR [edx+0x113e7cc0],cl
  42bd00:	cmp    DWORD PTR [ebx+ebp*8],eax
  42bd03:	and    al,0x55
  42bd05:	call   0x2e09:0xecaaa521
  42bd0c:	xchg   esp,eax
  42bd0d:	popf   
  42bd0e:	pushf  
  42bd0f:	adc    ebp,DWORD PTR [edx+0x5ff767ca]
  42bd15:	call   0x4f81:0x670f8b1a
  42bd1c:	add    al,0x73
  42bd1e:	lods   eax,DWORD PTR ds:[esi]
  42bd1f:	std    
  42bd20:	cmp    DWORD PTR ds:0x9147df4c,ebp
  42bd26:	mov    BYTE PTR gs:[edi+0x25bc9357],al
  42bd2d:	mov    ss,WORD PTR [ebp-0x7b6f154b]
  42bd33:	xchg   esi,eax
  42bd34:	sbb    DWORD PTR [esi],esp
  42bd36:	leave  
  42bd37:	push   esi
  42bd38:	es aad 0xd2
  42bd3b:	add    al,0x68
  42bd3d:	xor    edi,DWORD PTR [ebx+0xb6aa]
	...
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	cmp    eax,0x5b80174
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    ch,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [ebx-0x972b3e7],ch
  42bdd1:	(bad)
  42bdd5:	sub    eax,0x2b1d6fa8
  42bdda:	sbb    dh,BYTE PTR [edx]
  42bddc:	pop    edi
  42bddd:	mov    ch,0xf8
  42bddf:	jp     0x42bde1
  42bde1:	pushf  
  42bde2:	in     al,0x9d
  42bde4:	shl    DWORD PTR [ebx+0xf],1
  42bde7:	jge    0x42bdfb
  42bde9:	sbb    edi,esp
  42bdeb:	sbb    DWORD PTR [edx],eax
  42bded:	push   eax
  42bdee:	mov    ebx,0x6716f7c7
  42bdf3:	inc    ebx
  42bdf4:	das    
  42bdf5:	(bad)  
  42bdf7:	loop   0x42be46
  42bdf9:	stos   DWORD PTR es:[edi],eax
  42bdfa:	cmp    eax,0xa6c45cd6
  42bdff:	inc    esp
  42be00:	ror    BYTE PTR [eax+0x118b10e1],1
  42be06:	ds pop edx
  42be08:	vcmpps ymm4,ymm0,ymm1,0xae
  42be0d:	imul   esp,DWORD PTR [ebp+0x3d06b088],0xffffffd3
  42be14:	pop    ebx
  42be15:	adc    bl,BYTE PTR [edi]
  42be17:	dec    esi
  42be18:	xlat   BYTE PTR ds:[ebx]
  42be19:	cwde   
  42be1a:	cmp    ebp,ecx
  42be1c:	pop    ecx
  42be1d:	shl    BYTE PTR [ecx+0x50],cl
  42be20:	and    dh,BYTE PTR [eax+0x1773d3fa]
  42be26:	imul   esi,edx,0x231d778a
  42be2c:	inc    ebp
  42be2d:	pop    es
  42be2e:	test   al,0x11
  42be30:	xchg   ebx,eax
  42be31:	mov    ch,0x75
  42be33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be34:	and    bl,BYTE PTR [edi+0x2eb9dbbe]
  42be3a:	fimul  WORD PTR [esi]
  42be3c:	push   cs
  42be3d:	rcr    BYTE PTR [ecx+0x3a],cl
  42be40:	xor    cl,ch
  42be42:	(bad)  
  42be43:	dec    esi
  42be44:	test   bh,0xea
  42be47:	into   
  42be48:	or     ah,BYTE PTR [edx+edi*1+0x59]
  42be4c:	and    al,0x3f
  42be4e:	xor    ah,0x27
  42be51:	aaa    
  42be52:	(bad)  
  42be53:	mov    ebp,0x877c9607
  42be58:	mov    al,0xa8
  42be5a:	test   al,0xa2
  42be5c:	jb     0x42be17
  42be5e:	inc    BYTE PTR [edx]
  42be60:	inc    edi
  42be61:	(bad)  
  42be62:	mov    al,0xf7
  42be64:	push   eax
  42be65:	fucomi st,st(2)
  42be67:	push   ebx
  42be68:	cmp    eax,0xc3ba03f7
  42be6d:	add    al,0x5c
  42be6f:	in     eax,0xb3
  42be71:	jg     0x42be89
  42be73:	je     0x42be58
  42be75:	cmp    eax,0xa9064474
  42be7a:	xchg   DWORD PTR [edx-0x47],esp
  42be7d:	fwait
  42be7e:	das    
  42be7f:	je     0x42be21
  42be81:	in     eax,dx
  42be82:	mov    edi,0xd7887a6e
  42be87:	sub    dl,al
  42be89:	repnz sar BYTE PTR [edx],cl
  42be8c:	imul   esp,DWORD PTR [edi+ecx*1+0x38cca957],0x21
  42be94:	add    ebx,DWORD PTR [edi-0x57]
  42be97:	and    al,0xe2
  42be99:	lods   al,BYTE PTR ds:[esi]
  42be9a:	mov    edi,0xd0deee88
  42be9f:	out    dx,eax
  42bea0:	jo     0x42bea6
  42bea2:	imul   eax,DWORD PTR [ecx],0xffffffa1
  42bea5:	inc    esi
  42bea6:	xor    eax,edx
  42bea8:	scas   al,BYTE PTR es:[edi]
  42bea9:	inc    edi
  42beaa:	int3   
  42beab:	sbb    DWORD PTR [esi],0xffffffce
  42beae:	inc    esi
  42beaf:	and    al,0x45
  42beb1:	dec    eax
  42beb2:	jb     0x42be5f
  42beb4:	mov    fs,edi
  42beb6:	arpl   WORD PTR [ecx],bp
  42beb8:	xchg   esi,eax
  42beb9:	fadd   st(5),st
  42bebb:	xchg   edx,eax
  42bebc:	cmp    esi,DWORD PTR [esi+0x2]
  42bebf:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  42bf31:	add    BYTE PTR [eax],al
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	dec    edx
  42bf41:	popa   
  42bf42:	push   ebp
  42bf43:	or     al,0xfa
  42bf45:	rol    BYTE PTR [ecx],1
  42bf47:	add    ch,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    cl,bh
  42bf4d:	inc    esp
  42bf4e:	ret    0x4dd4
  42bf51:	mov    edx,0x987df862
  42bf56:	fist   DWORD PTR [eax]
  42bf58:	dec    esi
  42bf59:	(bad)  
  42bf5a:	fs dec ebx
  42bf5c:	into   
  42bf5d:	mul    DWORD PTR [esi]
  42bf5f:	aam    0x33
  42bf61:	pop    esp
  42bf62:	loope  0x42bf35
  42bf64:	idiv   DWORD PTR [ecx-0x35ed4e26]
  42bf6a:	adc    al,0x2d
  42bf6c:	hlt    
  42bf6d:	daa    
  42bf6e:	dec    esp
  42bf6f:	add    ch,dl
  42bf71:	in     al,0x37
  42bf73:	stos   BYTE PTR es:[edi],al
  42bf74:	test   al,0x8e
  42bf76:	push   eax
  42bf77:	jo     0x42bfc2
  42bf79:	test   DWORD PTR [edx-0x207a433],0xbf445cd9
  42bf83:	dec    esi
  42bf84:	rcl    dh,cl
  42bf86:	in     al,dx
  42bf87:	in     al,0x6d
  42bf89:	pop    ebx
  42bf8a:	push   eax
  42bf8b:	gs push eax
  42bf8d:	loopne 0x42bf8e
  42bf8f:	repz jae 0x42bfb8
  42bf92:	xchg   esp,eax
  42bf93:	or     BYTE PTR [edx-0x58],al
  42bf96:	xlat   BYTE PTR ds:[ebx]
  42bf97:	pop    esi
  42bf98:	mov    ebp,0x8eddf3c9
  42bf9d:	lds    eax,FWORD PTR [ebx+0x44]
  42bfa0:	outs   dx,BYTE PTR ds:[esi]
  42bfa1:	xchg   edi,eax
  42bfa2:	daa    
  42bfa3:	lods   eax,DWORD PTR ds:[esi]
  42bfa4:	push   0xa4d48364
  42bfa9:	out    0x77,al
  42bfab:	mul    ebp
  42bfad:	add    DWORD PTR [edi],esi
  42bfaf:	cmp    al,0xda
  42bfb1:	mov    ds:0x20c8a914,eax
  42bfb6:	sahf   
  42bfb7:	push   edi
  42bfb8:	pusha  
  42bfb9:	sub    al,0x1a
  42bfbb:	mov    bl,0xc8
  42bfbd:	add    al,0x7f
  42bfbf:	push   0x2654544c
  42bfc4:	jns    0x42bf63
  42bfc6:	frstor [eax]
  42bfc8:	scas   al,BYTE PTR es:[edi]
  42bfc9:	push   cs
  42bfca:	mov    al,ds:0x8811d7b1
  42bfcf:	xchg   ebp,eax
  42bfd0:	mov    DWORD PTR [esi+ebx*1+0x7c119038],edx
  42bfd7:	sub    esi,DWORD PTR [edx]
  42bfd9:	push   es
  42bfda:	adc    esi,eax
  42bfdc:	out    0xdd,eax
  42bfde:	fbld   TBYTE PTR [esi+0x6eaabbe]
  42bfe4:	arpl   di,dx
  42bfe6:	push   esi
  42bfe7:	mov    ds:0xa6032dbc,eax
  42bfec:	retf   
  42bfed:	mov    ah,0x34
  42bfef:	ret    0x4c0a
  42bff2:	fist   WORD PTR [eax+0x79bf11d7]
  42bff8:	lods   eax,DWORD PTR ds:[esi]
  42bff9:	test   al,0xab
  42bffb:	mov    dl,0x5f
  42bffd:	pop    es
  42bffe:	pusha  
  42bfff:	jl     0x42c03c
  42c001:	jp     0x42c082
  42c003:	inc    eax
  42c004:	dec    ebp
  42c005:	push   ecx
  42c006:	fist   DWORD PTR [edi-0x6135ba6d]
  42c00c:	xchg   BYTE PTR [eax],bh
  42c00e:	dec    edi
  42c00f:	fisubr WORD PTR [edx+0x5241eb1d]
  42c015:	xchg   BYTE PTR [ebp+0x0],bl
  42c018:	lahf   
  42c019:	popf   
  42c01a:	xchg   edi,eax
  42c01b:	mov    ebp,0x8dbdcdb0
  42c020:	rcl    BYTE PTR [esi],cl
  42c022:	adc    edi,DWORD PTR es:[ecx+0x24]
  42c026:	cmp    eax,0x772dce6d
  42c02b:	sahf   
  42c02c:	adc    DWORD PTR [ebp-0x47],esi
  42c02f:	icebp  
  42c030:	push   eax
  42c031:	mov    dh,0x6f
  42c033:	cmp    ah,BYTE PTR [esi-0x3d73bd44]
  42c039:	jge    0x42c087
  42c03b:	xor    edi,0xdcb4af5a
	...
  42c0b1:	add    BYTE PTR [eax],al
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xaf942915
  42c0c1:	shl    BYTE PTR [edi],1
  42c0c3:	cdq    
  42c0c4:	out    dx,eax
  42c0c5:	rol    DWORD PTR [ecx],1
  42c0c7:	add    ch,dh
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    BYTE PTR [esi+eiz*4],ah
  42c0ce:	push   0x19
  42c0d0:	push   edi
  42c0d1:	push   ss
  42c0d2:	jae    0x42c055
  42c0d4:	hlt    
  42c0d5:	cli    
  42c0d6:	retf   
  42c0d7:	sbb    eax,0x2d8c30af
  42c0dc:	enter  0x6d6,0xc3
  42c0e0:	mov    dl,0xad
  42c0e2:	nop
  42c0e3:	lock sti 
  42c0e5:	stc    
  42c0e6:	loope  0x42c079
  42c0e8:	sbb    BYTE PTR [edi],al
  42c0ea:	adc    eax,0xe9cc532d
  42c0ef:	ss push ds
  42c0f1:	mov    bh,0x15
  42c0f3:	push   esi
  42c0f4:	clc    
  42c0f5:	fisttp QWORD PTR [ecx+eax*2+0x2a]
  42c0f9:	and    bh,bl
  42c0fb:	jo     0x42c0a9
  42c0fd:	and    BYTE PTR [edi+0x493eeed3],ah
  42c103:	mov    edx,0xd5a0641f
  42c108:	mov    ecx,ebx
  42c10a:	and    al,0x85
  42c10c:	and    BYTE PTR [ebp+eax*2+0x302360f4],dh
  42c113:	sub    edx,DWORD PTR [ecx-0x32]
  42c116:	bound  ebp,QWORD PTR [ecx+0x22dcfeb1]
  42c11c:	push   cs
  42c11d:	enter  0x1947,0xd1
  42c121:	fldenv [ecx+0x3f]
  42c124:	popf   
  42c125:	mov    bh,0xda
  42c127:	sahf   
  42c128:	push   cs
  42c129:	jp     0x42c104
  42c12b:	mov    ?,WORD PTR [ebp*8-0x3d4b730b]
  42c132:	xchg   esp,eax
  42c133:	or     eax,0xd09b2fd5
  42c138:	push   0xd1f261e5
  42c13d:	mov    dh,0x88
  42c140:	inc    ecx
  42c141:	fimul  WORD PTR [edx]
  42c143:	or     al,0x1
  42c145:	add    DWORD PTR [ecx],0x44
  42c148:	out    0x83,eax
  42c14a:	push   0xfd21fa20
  42c14f:	push   edi
  42c150:	pushf  
  42c151:	imul   ebp,DWORD PTR [eax]
  42c154:	inc    eax
  42c155:	push   ds
  42c156:	xor    DWORD PTR [esi+0x7748305a],esi
  42c15c:	jmp    0x42c10c
  42c15e:	in     eax,dx
  42c15f:	clc    
  42c160:	aas    
  42c161:	mov    dl,BYTE PTR [ecx-0xfaaa64b]
  42c167:	sahf   
  42c168:	jle    0x42c1dc
  42c16a:	pop    ecx
  42c16b:	rcl    BYTE PTR [edi],0x40
  42c16e:	ins    DWORD PTR es:[edi],dx
  42c16f:	mov    ah,0x9b
  42c171:	(bad)  
  42c172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c173:	mov    DWORD PTR [esi+0x1a],edi
  42c176:	push   ebp
  42c177:	imul   esi,DWORD PTR [ebx],0x1c
  42c17a:	gs cwde 
  42c17c:	and    BYTE PTR ds:0xced72931,dh
  42c182:	mov    al,ds:0x3eda33db
  42c187:	sbb    WORD PTR [esi+ebp*2],cx
  42c18b:	adc    DWORD PTR [eax],ebp
  42c18d:	jne    0x42c1b9
  42c18f:	jmp    0xe76e9fd7
  42c194:	adc    esi,esi
  42c196:	out    0xe8,eax
  42c198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c199:	cwde   
  42c19a:	mov    ds:0xe4d46bb6,al
  42c19f:	pushf  
  42c1a0:	jnp    0x42c1c5
  42c1a2:	or     BYTE PTR [edx+ebx*4],bh
  42c1a5:	test   al,0x89
  42c1a7:	in     al,dx
  42c1a8:	xchg   esp,eax
  42c1a9:	cmp    BYTE PTR [ebp*4+0x65f252a9],0xe4
  42c1b1:	ins    DWORD PTR es:[edi],dx
  42c1b2:	xchg   esp,eax
  42c1b3:	dec    esi
  42c1b4:	gs data16 sahf 
  42c1b7:	std    
  42c1b8:	imul   edi,DWORD PTR [edi+0xf549d5],0x7d
  42c1bf:	push   ds
  42c1c0:	mov    BYTE PTR [eax],0x0
	...
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1-0x66]
  42c241:	jb     0x42c272
  42c243:	fsub   st,st(4)
  42c245:	rol    BYTE PTR [ecx],cl
  42c247:	add    ch,dh
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [esi+0x4e],al
  42c24e:	gs pop eax
  42c250:	sub    BYTE PTR [ecx+0x53271031],dh
  42c256:	sbb    DWORD PTR [edi],0xffffffb0
  42c259:	jno    0x42c235
  42c25b:	jmp    FWORD PTR [ecx]
  42c25d:	lock inc esp
  42c25f:	jle    0x42c217
  42c261:	pop    esp
  42c262:	cs rol dl,0xfd
  42c266:	out    0x69,eax
  42c268:	lods   eax,DWORD PTR ds:[esi]
  42c269:	lock ds test al,0x10
  42c26d:	mov    ecx,0xb1b755ac
  42c272:	push   ds
  42c273:	push   ss
  42c274:	daa    
  42c275:	xchg   esi,eax
  42c276:	jns    0x42c2ca
  42c278:	test   BYTE PTR [ebx-0x37ddaa5],0x8c
  42c27f:	push   edi
  42c280:	jge    0x42c2e3
  42c282:	mov    BYTE PTR [edi],cl
  42c284:	push   es
  42c285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c286:	xor    BYTE PTR [edi],ch
  42c288:	xlat   BYTE PTR ds:[ebx]
  42c289:	ds fadd st,st(5)
  42c28c:	(bad)  
  42c28d:	mov    esi,0xf8fe28a7
  42c292:	repz setbe BYTE PTR [eax]
  42c296:	cmp    ecx,DWORD PTR [ebx]
  42c298:	aam    0x1c
  42c29a:	jne    0x42c24b
  42c29c:	rcl    DWORD PTR [edi+0x4d786d6d],0xd0
  42c2a3:	pop    ebx
  42c2a4:	dec    esp
  42c2a5:	jge    0x42c29c
  42c2a7:	mov    edx,0x38c52b14
  42c2ac:	cmp    ch,ch
  42c2ae:	fnstenv [ebx+0x4a]
  42c2b1:	cld    
  42c2b2:	jecxz  0x42c2a6
  42c2b4:	js     0x42c307
  42c2b6:	fbld   TBYTE PTR ds:0xbe47e3b0
  42c2bc:	dec    edi
  42c2bd:	stos   DWORD PTR es:[edi],eax
  42c2be:	push   esi
  42c2bf:	jmp    FWORD PTR ds:0xfae74627
  42c2c5:	xor    al,0x71
  42c2c7:	and    DWORD PTR es:[edx+0x19],ecx
  42c2cb:	xor    ah,BYTE PTR [eax+ebx*4+0x1cc566d2]
  42c2d2:	push   edx
  42c2d3:	repz mov bh,0x3
  42c2d6:	or     ebp,DWORD PTR [edi-0x2a]
  42c2d9:	scas   al,BYTE PTR es:[edi]
  42c2da:	jmp    0x42c35a
  42c2dc:	aas    
  42c2dd:	adc    ah,BYTE PTR [edi]
  42c2df:	sbb    dl,bh
  42c2e1:	cli    
  42c2e2:	scas   al,BYTE PTR es:[edi]
  42c2e3:	jmp    0x40b234f9
  42c2e8:	(bad)  
  42c2e9:	jle    0x42c364
  42c2eb:	mov    al,ds:0xd1bbfdb3
  42c2f0:	out    0x7e,eax
  42c2f2:	(bad)  
  42c2f3:	loope  0x42c2b3
  42c2f5:	or     edi,edx
  42c2f7:	aam    0x3e
  42c2f9:	(bad)  [esi+0x25]
  42c2fc:	jle    0x42c350
  42c2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2ff:	jmp    0x8398064e
  42c304:	(bad)  
  42c305:	(bad)  
  42c306:	repnz mov edx,0x440bfea6
  42c30c:	sar    DWORD PTR [edx+0x67f89679],cl
  42c312:	cmp    eax,0xc5aadd6e
  42c317:	fs out 0xe2,eax
  42c31a:	jnp    0x42c361
  42c31c:	and    bh,bl
  42c31e:	icebp  
  42c31f:	std    
  42c320:	fnstenv ds:0x800c03a
  42c326:	xor    BYTE PTR [ecx-0xc262c0f],al
  42c32c:	in     al,dx
  42c32d:	jg     0x42c3a3
  42c32f:	push   ds
  42c330:	cwde   
  42c331:	jmp    0x42c368
  42c333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c334:	out    dx,al
  42c335:	lahf   
  42c336:	outs   dx,DWORD PTR ds:[esi]
  42c337:	xor    eax,0xa7d4a6b6
  42c33c:	mov    al,0x9f
  42c33e:	imul   edi,DWORD PTR [esi+0x58],0x0
	...
  42c3b1:	add    BYTE PTR [eax],al
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x45]
  42c3c1:	aaa    
  42c3c2:	imul   esi,esi,0xffffffd9
  42c3c5:	rol    DWORD PTR [ecx],cl
  42c3c7:	add    ch,dh
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [ecx-0x3003f789],dl
  42c3d1:	fidiv  WORD PTR [edi+ebx*4-0x3b]
  42c3d5:	or     esi,DWORD PTR [edx+0x6a]
  42c3d8:	mov    esi,0xff6153b4
  42c3dd:	test   eax,0x167f4e26
  42c3e2:	aas    
  42c3e3:	aad    0x76
  42c3e5:	xchg   esi,eax
  42c3e6:	jmp    0x42c392
  42c3e8:	jmp    0x42c436
  42c3ea:	adc    ebp,DWORD PTR ss:[edx]
  42c3ed:	sub    eax,0x606a3d8b
  42c3f2:	jmp    0xc483bed3
  42c3f7:	inc    eax
  42c3f8:	imul   eax,DWORD PTR [ecx+0x3d],0x1e9fb7d3
  42c3ff:	mov    ecx,0x1a4d9762
  42c404:	mov    esi,edx
  42c406:	adc    eax,0xa38d352
  42c40b:	scas   eax,DWORD PTR es:[edi]
  42c40c:	cmp    al,0xaf
  42c40e:	cli    
  42c40f:	mov    ecx,0x72459cf8
  42c414:	jno    0x42c3a0
  42c416:	pop    ecx
  42c417:	sub    BYTE PTR [edx-0x5cab31e0],bl
  42c41d:	lods   eax,DWORD PTR ds:[esi]
  42c41e:	sbb    dh,bh
  42c420:	adc    dl,BYTE PTR [esi+ecx*8+0x1683db64]
  42c427:	outs   dx,DWORD PTR ds:[esi]
  42c428:	shl    DWORD PTR [ebx+0x4c],cl
  42c42b:	xor    eax,esp
  42c42d:	ds push 0x444cfb35
  42c433:	lods   eax,DWORD PTR ds:[esi]
  42c434:	sbb    al,0x6c
  42c436:	cmp    edx,DWORD PTR [ebx-0x40965271]
  42c43c:	inc    ebp
  42c43d:	or     cl,ch
  42c43f:	xchg   edi,eax
  42c440:	adc    bh,BYTE PTR [eax-0x54]
  42c443:	imul   eax,DWORD PTR [ebp+0x51],0xe
  42c447:	sub    edx,DWORD PTR [edx+eiz*2]
  42c44a:	inc    ebp
  42c44b:	mov    dl,0x8c
  42c44d:	ja     0x42c423
  42c44f:	add    BYTE PTR [edi+0x2],0x9a
  42c453:	dec    ecx
  42c454:	test   bh,ch
  42c456:	or     BYTE PTR [esi+0x31],ah
  42c459:	into   
  42c45a:	and    BYTE PTR [edi+0x361f2f6f],al
  42c460:	dec    bh
  42c462:	test   BYTE PTR [edx],0x9b
  42c465:	mov    ds:0xa3d62e8a,eax
  42c46a:	shl    cl,cl
  42c46c:	(bad)  
  42c46d:	rcr    edi,cl
  42c46f:	push   ss
  42c470:	jmp    0x77bc1161
  42c475:	mov    ch,0xd
  42c477:	loop   0x42c48a
  42c479:	push   0x553c8fe
  42c47e:	fmul   DWORD PTR [eax-0x59]
  42c481:	imul   ebp,DWORD PTR gs:[edi-0x31],0xffffffa0
  42c486:	dec    eax
  42c487:	cmp    BYTE PTR [ebp-0x1d229129],0xb7
  42c48e:	jmp    0x42c503
  42c490:	pop    edx
  42c491:	xchg   ebx,eax
  42c492:	imul   edi,DWORD PTR [ecx],0xffffff9b
  42c495:	or     bh,BYTE PTR [eax+0x76]
  42c498:	jmp    0x7a904f25
  42c49d:	hlt    
  42c49e:	imul   esp,DWORD PTR [ecx],0xc4a9865a
  42c4a4:	mov    ds:0xb1c6c3c1,eax
  42c4a9:	cdq    
  42c4aa:	jmp    DWORD PTR [eax+0x8090702]
  42c4b0:	ins    BYTE PTR es:[edi],dx
  42c4b1:	ret    
  42c4b2:	add    eax,0x47383bd3
  42c4b7:	(bad)  
  42c4b8:	mov    bl,0xf0
  42c4ba:	mov    bl,0xe4
  42c4bc:	xchg   esp,eax
  42c4bd:	lahf   
  42c4be:	jmp    0x4334a2
	...
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	arpl   WORD PTR [ebx],ax
  42c542:	sti    
  42c543:	test   dh,cl
  42c545:	aam    0x1
  42c547:	add    ch,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    cl,dl
  42c54d:	cdq    
  42c54e:	jp     0x42c5a8
  42c550:	js     0x42c5a5
  42c552:	rcr    BYTE PTR [eax-0x3f],1
  42c555:	aad    0xad
  42c557:	outs   dx,DWORD PTR ds:[esi]
  42c558:	jb     0x42c558
  42c55a:	sub    BYTE PTR [edi+0x7c],bh
  42c55d:	test   BYTE PTR [ebp-0x10],cl
  42c560:	and    ah,al
  42c562:	iret   
  42c563:	inc    esp
  42c564:	sbb    ch,cl
  42c566:	cmp    bh,BYTE PTR [ebx+0x3c]
  42c569:	iret   
  42c56a:	cli    
  42c56b:	fwait
  42c56c:	inc    esi
  42c56d:	mov    ds:0xea2e6766,eax
  42c572:	cwde   
  42c573:	sbb    cl,dl
  42c575:	sbb    eax,0x1f43b518
  42c57a:	outs   dx,BYTE PTR ds:[esi]
  42c57b:	enter  0x7096,0xec
  42c57f:	das    
  42c580:	mov    dh,0x36
  42c582:	out    dx,eax
  42c583:	(bad)  
  42c584:	addr16 jns 0x42c539
  42c587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c588:	arpl   WORD PTR [ecx],dx
  42c58a:	xor    eax,0x7c36d755
  42c58f:	sub    esi,DWORD PTR [ebp+esi*2-0x33]
  42c593:	mov    al,0x43
  42c595:	rcr    BYTE PTR [ecx],0x36
  42c598:	mov    dh,0x9
  42c59a:	push   0x49
  42c59c:	inc    ebp
  42c59d:	je     0x42c5b0
  42c59f:	outs   dx,BYTE PTR ds:[esi]
  42c5a0:	mov    cl,0x5e
  42c5a2:	xor    eax,0x11397e1b
  42c5a7:	pop    esi
  42c5a8:	pusha  
  42c5a9:	or     bl,ah
  42c5ab:	mov    ah,0x5c
  42c5ad:	dec    DWORD PTR [edi+0xf011143]
  42c5b3:	out    dx,eax
  42c5b4:	daa    
  42c5b5:	ficomp DWORD PTR [edi+0x7c663b6b]
  42c5bb:	mov    al,ds:0x15e6577
  42c5c0:	mov    al,ds:0x26c2a206
  42c5c5:	leave  
  42c5c6:	sub    dh,BYTE PTR [ecx-0x36]
  42c5c9:	adc    esp,edx
  42c5cb:	inc    eax
  42c5cc:	arpl   bx,bp
  42c5ce:	sti    
  42c5cf:	mov    DWORD PTR ds:0x6baa9549,eax
  42c5d5:	popf   
  42c5d6:	sahf   
  42c5d7:	push   edx
  42c5d8:	test   DWORD PTR [ebp+0x4a],esi
  42c5db:	fistp  DWORD PTR [edx+0x152b04ed]
  42c5e1:	mov    edx,0x609ffe71
  42c5e6:	xor    al,0x74
  42c5e8:	and    esp,DWORD PTR [ebx+0x20]
  42c5eb:	cld    
  42c5ec:	aad    0x6b
  42c5ee:	stos   BYTE PTR es:[edi],al
  42c5ef:	cdq    
  42c5f0:	adc    cl,BYTE PTR [ecx]
  42c5f2:	sub    al,0xf8
  42c5f4:	(bad)  
  42c5f5:	fnsave [eax]
  42c5f7:	ret    
  42c5f8:	mov    esp,0xabecf96a
  42c5fd:	cmp    eax,0x9bfb14a5
  42c602:	aaa    
  42c603:	pop    ds
  42c604:	stos   BYTE PTR es:[edi],al
  42c605:	cld    
  42c606:	test   al,0x51
  42c608:	ins    BYTE PTR es:[edi],dx
  42c609:	dec    ebx
  42c60a:	mov    eax,0x28944183
  42c60f:	push   es
  42c610:	jge    0x42c592
  42c612:	in     al,0x3a
  42c614:	push   esi
  42c615:	and    dl,BYTE PTR [ebp-0x2d6a3b8]
  42c61b:	arpl   WORD PTR [ecx+eax*4],dx
  42c61e:	push   0xfffffff8
  42c620:	inc    ebp
  42c621:	pop    ebp
  42c622:	pop    ebp
  42c623:	jmp    0x840a:0x6250ad47
  42c62a:	shl    DWORD PTR [esp+edi*1],1
  42c62d:	mov    ds:0xacf5b423,eax
  42c632:	bswap  edx
  42c634:	ret    
  42c635:	pop    ebp
  42c636:	mov    BYTE PTR [ecx],bl
  42c638:	cmp    esp,edx
  42c63a:	inc    ecx
  42c63b:	mov    ah,0xd6
  42c63d:	aad    0x33
  42c63f:	sbb    esp,esp
	...
  42c6b1:	add    BYTE PTR [eax],al
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x7abe,0x8e
  42c6c2:	(bad)  
  42c6c4:	ret    
  42c6c5:	aad    0x1
  42c6c7:	add    ch,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [esi-0x45],dl
  42c6ce:	push   edx
  42c6cf:	pop    edx
  42c6d0:	sub    edx,edi
  42c6d2:	aaa    
  42c6d3:	ins    DWORD PTR es:[edi],dx
  42c6d4:	mov    WORD PTR [esi+ebp*4-0x4d],cs
  42c6d8:	into   
  42c6d9:	rcl    BYTE PTR ds:0xbb1862a,cl
  42c6df:	fld    QWORD PTR [edx]
  42c6e1:	dec    esp
  42c6e2:	call   0xb8ec:0x53591b84
  42c6e9:	sbb    eax,0xb4dbbe16
  42c6ee:	fimul  WORD PTR [ecx-0x20]
  42c6f1:	push   esi
  42c6f2:	(bad)  
  42c6f4:	stos   DWORD PTR es:[edi],eax
  42c6f5:	test   DWORD PTR [esi+0x26250f94],ebp
  42c6fb:	xchg   ecx,eax
  42c6fc:	cs pop edi
  42c6fe:	imul   eax,ecx,0x7b
  42c701:	xor    al,0xbf
  42c703:	mov    ds:0xd6e168a,eax
  42c708:	cld    
  42c709:	adc    edi,DWORD PTR [edi+esi*2-0xe]
  42c70d:	xchg   cl,ch
  42c70f:	add    al,BYTE PTR [ecx+edi*8+0x2e8f9750]
  42c716:	(bad)  
  42c717:	mov    dl,0x77
  42c719:	cmp    BYTE PTR [ecx+0x9],dh
  42c71c:	mov    esi,0x6905aeea
  42c721:	mov    eax,0x14a9c089
  42c726:	cmp    bh,0x3c
  42c729:	or     eax,0xe0374f53
  42c72e:	icebp  
  42c72f:	push   ss
  42c730:	rol    DWORD PTR [ecx+0x1901606b],cl
  42c736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c737:	cmp    eax,0xfb15e578
  42c73c:	sbb    BYTE PTR [esi],al
  42c73e:	in     eax,dx
  42c73f:	popf   
  42c740:	shr    DWORD PTR [esi],1
  42c742:	jo     0x42c72e
  42c744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c745:	mov    al,ds:0xb174d015
  42c74a:	lods   al,BYTE PTR ds:[esi]
  42c74b:	xlat   BYTE PTR ds:[ebx]
  42c74c:	mov    ds:0x21a712cc,al
  42c751:	js     0x42c780
  42c753:	and    DWORD PTR [edi-0x6466d10b],ecx
  42c759:	add    BYTE PTR ds:0x21a81de9,bh
  42c75f:	or     dh,BYTE PTR [ecx]
  42c761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c762:	dec    esp
  42c763:	sbb    DWORD PTR [ecx+0x694b3af8],esp
  42c769:	mov    ebp,0x36d0b252
  42c76e:	mov    DWORD PTR [edx],0x98f35559
  42c774:	dec    eax
  42c775:	fwait
  42c776:	mov    bl,0x93
  42c778:	(bad)  
  42c779:	leave  
  42c77a:	jge    0x42c77b
  42c77c:	dec    edx
  42c77d:	aas    
  42c77e:	out    0xe0,eax
  42c780:	sub    DWORD PTR [edx],esp
  42c782:	sbb    ah,dh
  42c784:	jo     0x42c789
  42c786:	(bad)  
  42c787:	cmc    
  42c788:	mov    ecx,0x3b17b29a
  42c78d:	xor    ah,dh
  42c78f:	push   ebx
  42c790:	lock push ebp
  42c792:	or     DWORD PTR [ecx-0x6e6790b0],0xffffffca
  42c799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c79a:	dec    esp
  42c79b:	loop   0x42c7bc
  42c79d:	inc    eax
  42c79e:	les    ecx,FWORD PTR [ebp+0x79]
  42c7a1:	and    al,0x9e
  42c7a3:	sub    BYTE PTR [ecx],bl
  42c7a5:	dec    edx
  42c7a6:	sbb    BYTE PTR [edx+ebp*2-0x36ef6dc8],bl
  42c7ad:	xor    BYTE PTR [edx+0x26a52b0c],bh
  42c7b3:	or     sp,WORD PTR [ecx+0x7a]
  42c7b7:	je     0x42c822
  42c7b9:	sub    bh,cl
  42c7bb:	push   ds
  42c7bc:	jbe    0x42c7ae
  42c7be:	add    ecx,DWORD PTR [esi+0x79]
	...
  42c831:	add    BYTE PTR [eax],al
  42c833:	add    al,ch
  42c835:	popf   
  42c836:	mov    esi,0xf9e7ffe7
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xf95cd364
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    BYTE PTR ds:0xbf264ee4,dl
  42c851:	mov    es,WORD PTR [edi+0x72743c2e]
  42c857:	mov    edi,ecx
  42c859:	retf   
  42c85a:	cdq    
  42c85b:	nop
  42c85c:	sbb    al,0xd5
  42c85e:	cli    
  42c85f:	sahf   
  42c860:	or     eax,0x17523f96
  42c865:	shl    BYTE PTR [edx-0x22],0xc
  42c869:	xor    al,BYTE PTR [ebp+0x39]
  42c86c:	shl    BYTE PTR [edx],0x46
  42c86f:	mov    ecx,0x2f91c909
  42c874:	jno    0x42c88e
  42c876:	dec    ebx
  42c877:	pop    eax
  42c878:	hlt    
  42c879:	xor    DWORD PTR [edx],0x5817de5d
  42c87f:	cli    
  42c880:	pop    ds
  42c881:	in     al,0x3c
  42c883:	push   0xffffffbc
  42c885:	adc    eax,DWORD PTR [esi]
  42c887:	xor    edi,ebp
  42c889:	and    DWORD PTR [esi],edi
  42c88b:	std    
  42c88c:	xlat   BYTE PTR ds:[ebx]
  42c88d:	sbb    BYTE PTR [edx],bh
  42c88f:	gs fcomp st(5)
  42c892:	mov    ebx,0x29cb2319
  42c897:	into   
  42c898:	adc    BYTE PTR [eax],0xac
  42c89b:	add    cl,BYTE PTR [ebp-0x14]
  42c89e:	test   eax,0xb13beca7
  42c8a3:	dec    esp
  42c8a4:	pop    es
  42c8a5:	pop    ebp
  42c8a6:	and    DWORD PTR [ecx-0x10],esp
  42c8a9:	inc    ebx
  42c8aa:	sti    
  42c8ab:	int    0xc1
  42c8ad:	inc    esi
  42c8ae:	jnp    0x42c84a
  42c8b0:	rcl    BYTE PTR [ecx],0xf8
  42c8b3:	mov    ch,0xd8
  42c8b5:	push   edi
  42c8b6:	stos   DWORD PTR es:[edi],eax
  42c8b7:	pop    ebx
  42c8b8:	aaa    
  42c8b9:	dec    ecx
  42c8ba:	cld    
  42c8bb:	shr    DWORD PTR [edx],0x97
  42c8be:	sbb    edx,esp
  42c8c0:	pop    esp
  42c8c1:	dec    eax
  42c8c2:	adc    al,0x60
  42c8c4:	ss je  0x42c8d5
  42c8c7:	cmp    BYTE PTR gs:[eax-0x746cef62],dh
  42c8ce:	stos   BYTE PTR es:[edi],al
  42c8cf:	(bad)  
  42c8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8d1:	jl     0x42c902
  42c8d3:	or     al,0x95
  42c8d5:	mov    ds:0x52948455,eax
  42c8da:	stos   BYTE PTR es:[edi],al
  42c8db:	imul   ecx,DWORD PTR [ebx-0x6c],0x7abb82a2
  42c8e2:	xor    DWORD PTR [edx],edi
  42c8e4:	add    eax,0xd84498b1
  42c8e9:	ret    0xd55a
  42c8ec:	lds    edi,FWORD PTR [eax-0x4cf817d2]
  42c8f2:	mov    dh,0x99
  42c8f4:	lock es mov bh,0xf1
  42c8f8:	inc    edi
  42c8f9:	fcmovbe st,st(0)
  42c8fb:	mov    al,ds:0x2f024ee
  42c900:	je     0x42c925
  42c902:	pusha  
  42c903:	cdq    
  42c904:	adc    al,BYTE PTR [edx-0x19]
  42c907:	lea    edx,[eax]
  42c909:	push   edx
  42c90a:	push   esi
  42c90b:	sbb    BYTE PTR [esi-0x6635a2e6],al
  42c911:	jge    0x42c95f
  42c913:	in     eax,dx
  42c914:	daa    
  42c915:	jbe    0x42c957
  42c917:	mov    ebp,0x46d99e33
  42c91c:	xor    BYTE PTR [edi+0x4a],bh
  42c91f:	outs   dx,BYTE PTR ds:[esi]
  42c920:	out    0x3b,al
  42c922:	pop    es
  42c923:	jmp    0x42c90c
  42c925:	mov    ebx,0xeaecee71
  42c92a:	push   edi
  42c92b:	add    eax,DWORD PTR [ebx-0x5b28d554]
  42c931:	sbb    eax,0xa1ffd0f8
  42c936:	pop    ebx
  42c937:	(bad)  
  42c938:	in     al,0x4a
  42c93a:	icebp  
  42c93b:	mov    bl,0x2b
  42c93d:	cmovg  esp,DWORD PTR [edi+ebx*4]
	...
  42c9b1:	add    BYTE PTR [eax],al
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    cl,BYTE PTR [edx]
  42c9c1:	in     eax,dx
  42c9c2:	mov    edi,0x1d7ad19
  42c9c7:	add    ch,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR ds:0x2c2123fe,ch
  42c9d1:	jo     0x42c9bf
  42c9d3:	push   ebp
  42c9d4:	in     eax,dx
  42c9d5:	hlt    
  42c9d6:	sar    DWORD PTR ds:0x7ed463bc,cl
  42c9dc:	imul   ebp,DWORD PTR [edi-0x6d],0x0
  42c9e0:	inc    ebp
  42c9e1:	popf   
  42c9e2:	sti    
  42c9e3:	or     esp,DWORD PTR [edx-0x10d98b49]
  42c9e9:	mov    eax,DWORD PTR [edx+0x3e72b500]
  42c9ef:	ret    0x7dad
  42c9f2:	mov    esi,0xf7e76ee3
  42c9f7:	repz inc esp
  42c9f9:	inc    edx
  42c9fa:	out    0xbc,eax
  42c9fc:	mov    cl,0xbe
  42c9fe:	lahf   
  42c9ff:	js     0x42ca2d
  42ca01:	adc    eax,0x9c0ba847
  42ca06:	jge    0x42c9ff
  42ca08:	push   ebx
  42ca09:	aam    0x96
  42ca0b:	push   ss
  42ca0c:	or     al,0xb4
  42ca0e:	and    esp,DWORD PTR [ecx+0x551235f2]
  42ca14:	fidiv  WORD PTR [edx-0x52]
  42ca17:	mov    ebp,0x284c4cc3
  42ca1c:	mov    dl,0xac
  42ca1e:	shr    BYTE PTR [ebp+0x21],cl
  42ca21:	jp     0x42ca85
  42ca23:	jnp    0x42c9ba
  42ca25:	mov    esi,0x6c30546
  42ca2a:	lods   eax,DWORD PTR ds:[esi]
  42ca2b:	imul   esi,DWORD PTR [ebx+0x38b92bf6],0xffffffb3
  42ca32:	call   DWORD PTR [eax+ecx*8-0x12b8396]
  42ca39:	xor    DWORD PTR [esp+eax*2-0x2f98b4c6],ebp
  42ca40:	add    al,0xf0
  42ca42:	cwde   
  42ca43:	and    DWORD PTR [ebp+0x48e2882e],ebx
  42ca49:	mov    DWORD PTR [ecx-0x1be27a76],edi
  42ca4f:	xor    esp,DWORD PTR [edi]
  42ca51:	push   0x68d2c13
  42ca56:	shl    BYTE PTR [edi+esi*8-0x78],0xc7
  42ca5b:	jns    0x42ca8b
  42ca5d:	mov    al,ds:0xbc0e7307
  42ca62:	shl    dh,cl
  42ca64:	or     al,0x9d
  42ca66:	mov    dl,0x33
  42ca68:	sub    al,0xf6
  42ca6a:	cmp    al,0x7c
  42ca6c:	dec    ebx
  42ca6d:	add    eax,0x5bf2f676
  42ca72:	add    DWORD PTR [ecx],ebp
  42ca74:	and    edi,esp
  42ca76:	loop   0x42caca
  42ca78:	leave  
  42ca79:	scas   eax,DWORD PTR es:[edi]
  42ca7a:	enter  0x53a0,0x27
  42ca7e:	shl    DWORD PTR [ecx],cl
  42ca80:	mov    ecx,DWORD PTR [ecx+edx*1]
  42ca83:	and    eax,0xb57cae46
  42ca88:	and    eax,0x2420d89
  42ca8d:	push   esp
  42ca8e:	adc    al,0xa3
  42ca90:	fwait
  42ca91:	aad    0xd7
  42ca93:	cld    
  42ca94:	frstpm(287 only) 
  42ca96:	imul   ebx,ecx,0xb12c3f60
  42ca9c:	(bad)  
  42ca9d:	and    bh,BYTE PTR [esi]
  42ca9f:	stc    
  42caa0:	into   
  42caa1:	adc    DWORD PTR [edx+0x7f],ebp
  42caa4:	les    esi,FWORD PTR [edx+ebp*2+0x29e8833b]
  42caab:	loope  0x42cacb
  42caad:	rol    DWORD PTR [ebx+0x7c],cl
  42cab0:	add    al,0x1c
  42cab2:	mov    ecx,0x55c44b5a
  42cab7:	xchg   edx,eax
  42cab8:	fistp  DWORD PTR [ebp-0x18]
  42cabb:	(bad)  
  42cabc:	call   0xcf4e55fe
	...
  42cb31:	add    BYTE PTR [eax],al
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	mov    esi,0xa2e8209a
  42cb45:	fadd   DWORD PTR [ecx]
  42cb47:	add    ch,dh
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [ebx],dh
  42cb4d:	sbb    DWORD PTR [ecx+0x589e2f68],edi
  42cb53:	xchg   edx,eax
  42cb54:	ins    DWORD PTR es:[edi],dx
  42cb55:	mov    ecx,0xf91dc235
  42cb5a:	lea    ebp,[eax+eax*4]
  42cb5d:	js     0x42cb19
  42cb5f:	sbb    eax,0x84d8270e
  42cb64:	sub    DWORD PTR [edi-0x68],0xfffffff4
  42cb68:	test   al,0xeb
  42cb6a:	mov    BYTE PTR [edi+0x50],ah
  42cb6d:	and    eax,0x40a471d8
  42cb72:	mov    ecx,0x97f44ec1
  42cb77:	loop   0x42cbf6
  42cb79:	mov    es,WORD PTR [ecx+0x4004d41]
  42cb7f:	je     0x42cb4a
  42cb81:	pop    ebx
  42cb82:	xchg   DWORD PTR [eax-0x2c90410],esi
  42cb88:	stos   DWORD PTR es:[edi],eax
  42cb89:	cwde   
  42cb8a:	pop    ecx
  42cb8b:	fistp  QWORD PTR [edx+0xd]
  42cb8e:	sub    eax,0x93c8c122
  42cb93:	les    esp,FWORD PTR [eax-0x3bf76b8a]
  42cb99:	sbb    ebp,eax
  42cb9b:	outs   dx,DWORD PTR ds:[esi]
  42cb9c:	je     0x42cc1a
  42cb9e:	add    eax,0x62446e0f
  42cba3:	es out dx,al
  42cba5:	adc    al,0xf3
  42cba7:	jle    0x42cb2a
  42cba9:	aam    0x36
  42cbab:	call   0xe067:0x8bb76106
  42cbb2:	cdq    
  42cbb3:	pop    esp
  42cbb4:	adc    eax,ecx
  42cbb6:	xchg   ebx,eax
  42cbb7:	scas   eax,DWORD PTR es:[edi]
  42cbb8:	or     al,0x71
  42cbba:	jns    0x42cc10
  42cbbc:	sbb    eax,0xca7f8c67
  42cbc1:	cmp    al,ah
  42cbc3:	and    eax,0x45860890
  42cbc9:	jmp    0x63f4:0x683678ef
  42cbd0:	icebp  
  42cbd1:	jae    0x42cbaf
  42cbd3:	ror    BYTE PTR [ebx],0xa8
  42cbd6:	jmp    0x40d2:0xd3cd0e07
  42cbdd:	test   ah,0x51
  42cbe0:	xchg   ebp,eax
  42cbe1:	ss dec eax
  42cbe3:	and    al,0xc0
  42cbe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbe6:	jo     0x42cbb8
  42cbe8:	push   ebx
  42cbe9:	cmp    dh,BYTE PTR [eax]
  42cbeb:	dec    ebp
  42cbec:	mov    esi,DWORD PTR [edx-0xc2a431b]
  42cbf2:	(bad)  
  42cbf3:	mov    eax,ss
  42cbf5:	pop    edi
  42cbf6:	inc    esp
  42cbf7:	sub    eax,0x362314c6
  42cbfc:	dec    ecx
  42cbfd:	push   0x97b84d5d
  42cc02:	enter  0xd862,0xc6
  42cc06:	es and al,0xfe
  42cc09:	jle    0x42cc54
  42cc0b:	xor    DWORD PTR [ebp-0x6a],ebp
  42cc0e:	mov    ds:0x62a39ed,eax
  42cc13:	jg     0x42cc28
  42cc15:	push   edi
  42cc16:	div    BYTE PTR [ebp-0x1d]
  42cc19:	in     al,dx
  42cc1a:	mov    WORD PTR [ecx-0x63],gs
  42cc1d:	mov    bh,0x67
  42cc1f:	pushf  
  42cc20:	cs dec edx
  42cc22:	shr    BYTE PTR [edi-0x64],1
  42cc25:	lock sti 
  42cc27:	and    cl,BYTE PTR [ecx-0x316178e1]
  42cc2d:	fwait
  42cc2e:	loopne 0x42cc5c
  42cc30:	mov    edx,0xd5492a38
  42cc35:	bnd jae 0x42cc18
  42cc38:	enter  0xfc64,0x60
  42cc3c:	pop    ds
  42cc3d:	add    ecx,DWORD PTR es:[eax+0x64]
	...
  42ccb1:	add    BYTE PTR [eax],al
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    ecx,DWORD PTR [eax-0x68360053]
  42ccc5:	fld    DWORD PTR [ecx]
  42ccc7:	add    ch,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ebp+0x4d29d349],bl
  42ccd1:	out    0x5a,eax
  42ccd3:	add    esp,DWORD PTR [ebp+0x76]
  42ccd6:	test   al,0xe5
  42ccd8:	add    DWORD PTR ds:0x69eb6af2,esp
  42ccde:	fsubr  QWORD PTR [ecx+0x2f]
  42cce1:	and    bh,BYTE PTR [edx]
  42cce3:	mov    DWORD PTR [ebp-0xf],esi
  42cce6:	and    DWORD PTR [ebx-0x40],eax
  42cce9:	sbb    ah,ch
  42cceb:	cld    
  42ccec:	es mov eax,0x55d2b9a3
  42ccf2:	in     al,0x72
  42ccf4:	sbb    eax,esp
  42ccf6:	addr16 push ebp
  42ccf8:	fwait
  42ccf9:	call   0x284f4f3e
  42ccfe:	mov    ecx,0x9cf277ee
  42cd03:	out    dx,al
  42cd04:	aaa    
  42cd05:	sub    al,0xfc
  42cd07:	sbb    DWORD PTR [esi],0xffffffa4
  42cd0a:	idiv   BYTE PTR [edx]
  42cd0c:	or     al,0x4f
  42cd0e:	sbb    eax,DWORD PTR [eax]
  42cd10:	ror    BYTE PTR [esp+ecx*2-0x29],cl
  42cd14:	arpl   WORD PTR [esi-0x38],dx
  42cd17:	adc    eax,0x1515c994
  42cd1c:	repz add esi,DWORD PTR [eax]
  42cd1f:	cmp    DWORD PTR [eax+0x422bf892],0x6c
  42cd26:	dec    edx
  42cd27:	retf   0x986e
  42cd2a:	sub    al,0xfc
  42cd2c:	loopne 0x42cd5f
  42cd2e:	sti    
  42cd2f:	or     ebx,DWORD PTR [ecx-0x19e32867]
  42cd35:	nop
  42cd36:	adc    cl,BYTE PTR [edi]
  42cd38:	pop    ecx
  42cd39:	dec    edx
  42cd3a:	outs   dx,BYTE PTR ds:[esi]
  42cd3b:	cmc    
  42cd3c:	in     eax,dx
  42cd3d:	out    0x5c,eax
  42cd3f:	push   es
  42cd40:	or     BYTE PTR [ebx-0x2c],ah
  42cd43:	clc    
  42cd44:	imul   edi,ebx,0x0
  42cd47:	add    bl,dh
  42cd49:	ret    0xf3ed
  42cd4c:	ror    bl,cl
  42cd4e:	push   edi
  42cd4f:	xor    al,0xda
  42cd51:	mov    ecx,DWORD PTR [esi-0x2b]
  42cd54:	test   al,0x93
  42cd56:	mov    ds:0xc7abcc02,al
  42cd5b:	adc    DWORD PTR [esi+0x73],ecx
  42cd5e:	fwait
  42cd5f:	ds inc ebp
  42cd61:	cli    
  42cd62:	mov    bl,0x3a
  42cd64:	shl    BYTE PTR [ebx],1
  42cd66:	sbb    BYTE PTR [ebp+0x4d8149e1],ch
  42cd6c:	push   edi
  42cd6d:	or     ebx,DWORD PTR [edi]
  42cd6f:	es mov al,0xc6
  42cd72:	push   ss
  42cd73:	add    ecx,esi
  42cd75:	jle    0x42ccf9
  42cd77:	mov    bl,0xbd
  42cd79:	xchg   esp,eax
  42cd7a:	ins    DWORD PTR es:[edi],dx
  42cd7b:	nop
  42cd7c:	retf   
  42cd7d:	retf   0x2f32
  42cd80:	mov    dh,0xd8
  42cd82:	xlat   BYTE PTR ds:[ebx]
  42cd83:	jmp    0x5f24cd1c
  42cd88:	xor    al,0x24
  42cd8a:	loopne 0x42cd1c
  42cd8c:	aad    0x13
  42cd8e:	xlat   BYTE PTR ds:[ebx]
  42cd8f:	dec    ebx
  42cd90:	mov    dl,0xbd
  42cd92:	and    eax,0xb93389c
  42cd97:	push   edi
  42cd98:	ror    DWORD PTR [eax+esi*8+0x1a],cl
  42cd9c:	sub    al,0x91
  42cd9e:	(bad)  
  42cd9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cda0:	sub    esi,DWORD PTR cs:[ebp+0x5a9307a4]
  42cda7:	test   al,0x42
  42cda9:	lock jmp DWORD PTR [ebx-0x6befc4b3]
  42cdb0:	xchg   edi,eax
  42cdb1:	pop    esp
  42cdb2:	pushf  
  42cdb3:	dec    eax
  42cdb4:	push   ss
  42cdb5:	leave  
  42cdb6:	test   BYTE PTR [edi-0x2fd7a0f],cl
  42cdbc:	cmp    edx,DWORD PTR [ebp+0x66]
  42cdbf:	pop    edx
  42cdc0:	rol    BYTE PTR [eax],0x0
	...
  42ce33:	add    BYTE PTR [edi-0x825b8e0],dl
  42ce39:	call   FWORD PTR [edi+0x410aba6d]
  42ce3f:	sbb    DWORD PTR [ebx],esi
  42ce41:	sbb    BYTE PTR ds:0x1da8c31,ah
  42ce47:	add    ch,dh
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    BYTE PTR ds:0x94ee97b6,bl
  42ce51:	sub    al,BYTE PTR [ebx]
  42ce53:	lods   al,BYTE PTR ds:[esi]
  42ce54:	and    BYTE PTR [ecx+ebp*1+0x4216beef],dh
  42ce5b:	xchg   esi,eax
  42ce5c:	mov    ss,WORD PTR [ebx]
  42ce5e:	scas   al,BYTE PTR es:[edi]
  42ce5f:	out    0x6d,eax
  42ce61:	push   edx
  42ce62:	repnz rcr BYTE PTR [ecx],0x3e
  42ce66:	pop    ebx
  42ce67:	mov    al,ds:0xd448c6f0
  42ce6c:	pushf  
  42ce6d:	jmp    DWORD PTR [ebx]
  42ce6f:	add    eax,0xe335ccdb
  42ce74:	bound  edx,QWORD PTR [esi+0x1c]
  42ce77:	xchg   ebx,eax
  42ce78:	mov    ds:0x875028d2,al
  42ce7d:	fldenv [eax+0x6f]
  42ce80:	pop    edi
  42ce81:	mov    dl,0xc6
  42ce83:	adc    ecx,0x50
  42ce86:	imul   ebx,DWORD PTR [edi-0x47],0x9321c869
  42ce8d:	aad    0x86
  42ce8f:	mov    al,ah
  42ce91:	in     al,0x52
  42ce93:	outs   dx,DWORD PTR ds:[esi]
  42ce94:	xchg   esi,eax
  42ce95:	pop    es
  42ce96:	ds sahf 
  42ce98:	cmp    DWORD PTR [edi+0x22cbaaff],edx
  42ce9e:	pop    ss
  42ce9f:	aas    
  42cea0:	push   eax
  42cea1:	pop    ecx
  42cea2:	retf   0x6dea
  42cea5:	or     edx,eax
  42cea7:	adc    edx,ecx
  42cea9:	xor    edx,ebx
  42ceab:	pop    ebp
  42ceac:	sub    BYTE PTR [ecx-0x2fc5cc20],0x2e
  42ceb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ceb5:	add    eax,0xf336f2c3
  42ceba:	ins    DWORD PTR es:[edi],dx
  42cebb:	mov    ebx,0xccfb638
  42cec0:	adc    BYTE PTR [eax],bh
  42cec2:	in     al,0x49
  42cec4:	adc    ebx,edi
  42cec6:	pop    esi
  42cec7:	adc    al,0x62
  42cec9:	arpl   si,bp
  42cecb:	jmp    0x42ceab
  42cecd:	and    dl,ah
  42cecf:	and    eax,ecx
  42ced1:	add    BYTE PTR [eax-0x5e],bl
  42ced4:	jb     0x42ceef
  42ced6:	(bad)  
  42ced7:	mov    dh,0x7a
  42ced9:	stos   BYTE PTR es:[edi],al
  42ceda:	pop    eax
  42cedb:	sbb    BYTE PTR [edi+0x5f],dh
  42cede:	fwait
  42cedf:	cmp    al,0x12
  42cee1:	cmp    al,0xa7
  42cee3:	(bad)  
  42cee4:	aas    
  42cee5:	fistp  QWORD PTR [edi]
  42cee7:	jl     0x42cedf
  42cee9:	cmp    BYTE PTR [esi+0x2a],0xa9
  42ceed:	adc    BYTE PTR [ecx],dh
  42ceef:	lock xor ebx,DWORD PTR [ecx+0x33]
  42cef3:	pop    es
  42cef4:	inc    esp
  42cef5:	retf   
  42cef6:	jmp    0x42ce93
  42cef8:	mov    dl,0x7b
  42cefa:	adc    BYTE PTR [edi],bh
  42cefc:	cmp    al,0xc7
  42cefe:	add    BYTE PTR [ebp+0x2642c1b1],bl
  42cf04:	in     eax,0x34
  42cf06:	and    DWORD PTR [edi],esi
  42cf08:	dec    esi
  42cf09:	jmp    0xc8185a8c
  42cf0e:	je     0x42cf67
  42cf10:	mov    bl,0xf2
  42cf12:	ficom  WORD PTR [ebp+0x28]
  42cf15:	daa    
  42cf16:	or     dl,al
  42cf18:	pop    ebp
  42cf19:	sub    DWORD PTR [eax],eax
  42cf1b:	push   ds
  42cf1c:	xchg   DWORD PTR [ebx],esi
  42cf1e:	das    
  42cf1f:	(bad)  
  42cf20:	repz sahf 
  42cf22:	je     0x42cf50
  42cf24:	(bad)
  42cf27:	sti    
  42cf28:	xchg   esp,eax
  42cf29:	xchg   edi,eax
  42cf2a:	stos   BYTE PTR es:[edi],al
  42cf2b:	pop    eax
  42cf2c:	add    al,0x20
  42cf2e:	fwait
  42cf2f:	mov    edi,0xfcc0cc5f
  42cf34:	int3   
  42cf35:	dec    eax
  42cf36:	call   0xc45e384
  42cf3b:	jbe    0x42cee3
  42cf3d:	scas   eax,DWORD PTR es:[edi]
  42cf3e:	rcr    DWORD PTR [edx],1
  42cf40:	jae    0x42cf42
	...
  42cfb2:	add    BYTE PTR [eax],al
  42cfb4:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x9a
  42cfc1:	jns    0x42cf4a
  42cfc3:	fild   WORD PTR [ecx-0xafffe25]
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [ebx],ah
  42cfcd:	xor    eax,0xc43f189d
  42cfd2:	pop    eax
  42cfd3:	adc    DWORD PTR ds:0xb462af68,edi
  42cfd9:	rcl    BYTE PTR [ebp-0x447df495],1
  42cfdf:	mov    ebx,0x554c1838
  42cfe4:	xchg   esi,eax
  42cfe5:	test   DWORD PTR [edx+0x363cd6b8],0x83e587b0
  42cfef:	(bad)  
  42cff0:	addr16 mov ch,0xdd
  42cff3:	xor    eax,0x98343a9c
  42cff8:	sbb    al,0x8e
  42cffa:	sbb    esi,DWORD PTR [edi]
  42cffc:	dec    esp
  42cffd:	adc    esp,ecx
  42cfff:	(bad)  
  42d000:	cmp    eax,eax
  42d002:	aas    
  42d003:	mov    esp,0x6bddfded
  42d008:	test   al,0x63
  42d00a:	sub    esi,esp
  42d00c:	das    
  42d00d:	mov    edx,0xb7c3fa99
  42d012:	repz mov edx,DWORD PTR [ebx]
  42d015:	in     al,dx
  42d016:	adc    BYTE PTR [ebx+0x45],0x3e
  42d01a:	mov    ?,WORD PTR [ecx]
  42d01c:	cwde   
  42d01d:	xchg   ebp,eax
  42d01e:	test   eax,0x8f2630b
  42d023:	sub    eax,0x242b3b5d
  42d028:	adc    dh,al
  42d02a:	push   es
  42d02b:	(bad)  
  42d02c:	pop    edi
  42d02d:	(bad)  
  42d02e:	stc    
  42d02f:	jae    0x42d070
  42d031:	adc    BYTE PTR [edi+edi*1+0x78],0xd
  42d036:	pop    ds
  42d037:	aas    
  42d038:	pop    ebp
  42d039:	ins    BYTE PTR es:[edi],dx
  42d03a:	or     ebp,edi
  42d03c:	push   ebp
  42d03d:	pop    ss
  42d03e:	jbe    0x42d058
  42d040:	ficomp WORD PTR [edi-0x60]
  42d043:	in     eax,0x46
  42d045:	clc    
  42d046:	lods   al,BYTE PTR ds:[esi]
  42d047:	mov    esp,DWORD PTR [ecx-0x55]
  42d04a:	push   edi
  42d04b:	in     al,dx
  42d04c:	xor    esp,DWORD PTR ds:0x737535c4
  42d052:	jl     0x42d018
  42d054:	and    ebx,DWORD PTR [ebx]
  42d056:	ins    BYTE PTR es:[edi],dx
  42d057:	xchg   ebx,eax
  42d058:	xchg   esp,eax
  42d059:	push   ss
  42d05a:	bound  ecx,QWORD PTR [edx+edx*4+0x56]
  42d05e:	mov    ebp,0x1c3c8817
  42d063:	mov    eax,ds:0x67a8b629
  42d068:	sar    ebx,1
  42d06a:	xchg   edx,eax
  42d06b:	inc    edx
  42d06c:	mov    DWORD PTR [ebx-0x5a],eax
  42d06f:	jg     0x42d035
  42d071:	push   cs
  42d072:	sbb    al,0x5
  42d074:	std    
  42d075:	into   
  42d076:	jp     0x42d054
  42d078:	sub    al,0xff
  42d07a:	xchg   ebp,eax
  42d07b:	out    dx,al
  42d07c:	inc    edx
  42d07d:	sub    eax,0x7e863abc
  42d082:	xchg   ebp,eax
  42d083:	ror    DWORD PTR [ebp+0x6d],0x54
  42d087:	es pop ebp
  42d089:	xor    eax,0x8b9bdfc0
  42d08e:	(bad)  
  42d08f:	xchg   ebp,eax
  42d090:	shr    BYTE PTR [ebx],cl
  42d092:	sahf   
  42d093:	inc    esp
  42d094:	(bad)  
  42d095:	imul   edi,DWORD PTR [esp+edi*1+0x2c],0xf528ce4d
  42d09d:	xor    BYTE PTR [edi+0x2214a115],0xe3
  42d0a4:	fmulp  st(7),st
  42d0a6:	stos   BYTE PTR es:[edi],al
  42d0a7:	or     al,0xc6
  42d0a9:	shr    DWORD PTR [ebx-0x7885ca2c],0x4e
  42d0b0:	mov    cl,0xc8
  42d0b2:	in     eax,dx
  42d0b3:	mov    dh,0xaf
  42d0b5:	ret    0xfa68
  42d0b8:	mov    dl,0x7a
  42d0ba:	or     DWORD PTR [ecx+0x72],ecx
  42d0bd:	inc    edi
  42d0be:	jmp    0x433a5b
	...
  42d133:	add    BYTE PTR [ecx-0x7e],ch
  42d136:	int    0xae
  42d138:	out    dx,eax
  42d139:	out    dx,eax
  42d13a:	imul   eax,edi,0x41
  42d13d:	cdq    
  42d13e:	xor    eax,0xa624d250
  42d143:	das    
  42d144:	jbe    0x42d122
  42d146:	add    DWORD PTR [eax],eax
  42d148:	cmc    
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    bh,bh
  42d14d:	mov    WORD PTR [ebx-0x3d87f1de],ax
  42d154:	xchg   edi,eax
  42d155:	push   cs
  42d156:	lea    esi,[edi-0x630a7c67]
  42d15c:	cmp    eax,0x13622c82
  42d161:	ds add al,0x7e
  42d164:	cmp    DWORD PTR [edi],0x21
  42d167:	sub    al,0xe2
  42d169:	jp     0x42d11c
  42d16b:	in     al,0xc1
  42d16d:	ins    BYTE PTR es:[edi],dx
  42d16e:	aam    0xe4
  42d170:	(bad)  
  42d171:	cmp    BYTE PTR [edx+edi*4+0x3e],dh
  42d175:	adc    eax,0xcf0a27f4
  42d17a:	jl     0x42d1e2
  42d17c:	icebp  
  42d17d:	bound  esp,QWORD PTR [ebp+eax*2+0x5c953285]
  42d184:	(bad)
  42d188:	test   edx,ebp
  42d18a:	das    
  42d18b:	pop    es
  42d18c:	(bad)  
  42d18d:	(bad)  
  42d18e:	int3   
  42d18f:	inc    ecx
  42d190:	daa    
  42d191:	retf   
  42d192:	jbe    0x42d12d
  42d194:	cs cs xchg edx,eax
  42d197:	leave  
  42d198:	pop    DWORD PTR [esi+eax*8]
  42d19b:	and    DWORD PTR [esi],ebx
  42d19d:	push   esi
  42d19e:	cmp    ch,ah
  42d1a0:	push   0xfd05985
  42d1a5:	mov    dl,0x25
  42d1a7:	mov    bl,0xb6
  42d1a9:	xchg   edi,eax
  42d1aa:	(bad)  
  42d1ac:	push   ebx
  42d1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1ae:	ret    0xd9e2
  42d1b1:	mov    bh,0x90
  42d1b3:	stos   BYTE PTR es:[edi],al
  42d1b4:	test   DWORD PTR [edi-0x34f3da1],edx
  42d1ba:	mov    ebx,ss
  42d1bc:	pop    ss
  42d1bd:	cmp    dl,BYTE PTR [eax+0x7834cd09]
  42d1c3:	jmp    0x407f:0xbb4e5be6
  42d1ca:	dec    esi
  42d1cb:	stos   BYTE PTR es:[edi],al
  42d1cc:	(bad)
  42d1cf:	adc    DWORD PTR [edi+0x61],ecx
  42d1d2:	es cs adc al,0x6f
  42d1d6:	dec    esi
  42d1d7:	and    cl,BYTE PTR [esi]
  42d1d9:	mov    dh,0x58
  42d1db:	scas   al,BYTE PTR es:[edi]
  42d1dc:	push   0x26218d44
  42d1e1:	jb     0x42d165
  42d1e3:	inc    edx
  42d1e4:	mov    eax,ds:0x9bb857fd
  42d1e9:	add    ah,cl
  42d1eb:	cld    
  42d1ec:	repz mov ah,0x1e
  42d1ef:	push   0xffffffe8
  42d1f1:	aam    0x2b
  42d1f3:	jne    0x42d22e
  42d1f5:	fsubr  st,st(5)
  42d1f7:	push   es
  42d1f8:	adc    eax,0xcc695931
  42d1fd:	push   0xc659740d
  42d202:	cdq    
  42d203:	jle    0x42d27f
  42d205:	push   cs
  42d206:	cld    
  42d207:	mov    ecx,0xf04113b1
  42d20c:	fcom   QWORD PTR [edi-0x76a923c3]
  42d212:	call   0xb6d9:0x8d1837ec
  42d219:	push   eax
  42d21a:	ins    BYTE PTR es:[edi],dx
  42d21b:	mov    ?,WORD PTR [esi-0x49]
  42d21e:	vpunpckhwd ymm6,ymm6,YMMWORD PTR [ebx+ecx*2+0x4d]
  42d224:	ror    DWORD PTR [ebx+0x7b],cl
  42d227:	jg     0x42d207
  42d229:	xlat   BYTE PTR ds:[ebx]
  42d22a:	adc    edx,0x76
  42d22d:	and    eax,0xcc2dabcc
  42d232:	add    eax,0x28c0e642
  42d237:	(bad)  
  42d238:	cmp    al,0x28
  42d23a:	jmp    0x69d598d5
  42d23f:	pop    esi
  42d240:	sahf   
	...
  42d2b1:	add    BYTE PTR [eax],al
  42d2b3:	add    dh,ah
  42d2b5:	psubusw mm5,QWORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	mov    ebp,0x6b5c4f39
  42d2c5:	fld    QWORD PTR [ecx]
  42d2c7:	add    ch,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [esi-0x70a6a1f6],bl
  42d2d1:	cld    
  42d2d2:	sub    bl,BYTE PTR [ecx]
  42d2d4:	fxch   st(6)
  42d2d6:	test   DWORD PTR [edi-0x7b],ebp
  42d2d9:	into   
  42d2da:	mov    edi,ss
  42d2dc:	jnp    0x42d338
  42d2de:	or     DWORD PTR [esi-0x6],ecx
  42d2e1:	cmp    eax,0xedcc703f
  42d2e6:	cwde   
  42d2e7:	dec    eax
  42d2e8:	cmp    BYTE PTR [ecx+0x74],cl
  42d2eb:	data16 and al,0xf5
  42d2ee:	dec    ebx
  42d2ef:	pop    ss
  42d2f0:	inc    edi
  42d2f1:	ss call 0x9d09:0x13f91e87
  42d2f9:	jbe    0x42d35a
  42d2fb:	xchg   edx,eax
  42d2fc:	es or  al,0xcd
  42d2ff:	xor    ebp,ebx
  42d301:	mov    edx,0x6221bb99
  42d306:	imul   ebx,ebx,0x68218210
  42d30c:	mov    eax,0xa8440d3d
  42d311:	add    dl,bl
  42d313:	je     0x42d31e
  42d315:	adc    DWORD PTR [edi+0x122d50d6],ecx
  42d31b:	adc    esp,DWORD PTR [edi+ebx*2+0x74]
  42d31f:	dec    esp
  42d320:	and    eax,0x56ca5654
  42d325:	aad    0xaf
  42d327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d328:	into   
  42d329:	push   es
  42d32a:	sub    bh,BYTE PTR [ebp+0xbc39e80]
  42d330:	test   al,0xd7
  42d332:	rep ins BYTE PTR es:[edi],dx
  42d334:	pushf  
  42d335:	pop    ecx
  42d336:	and    ecx,DWORD PTR [ecx]
  42d338:	push   0xffffffe0
  42d33a:	xchg   BYTE PTR [edx],bh
  42d33c:	das    
  42d33d:	nop
  42d33e:	sti    
  42d33f:	ror    DWORD PTR [eax-0x6e],1
  42d342:	cld    
  42d343:	push   es
  42d344:	dec    edx
  42d345:	je     0x42d345
  42d347:	pop    ebp
  42d348:	in     eax,0x4
  42d34a:	inc    edi
  42d34b:	clc    
  42d34c:	sbb    eax,0x32a1718f
  42d351:	jecxz  0x42d2e0
  42d353:	gs jle 0x42d388
  42d356:	push   cs
  42d357:	mov    cs,WORD PTR [eax-0x6d]
  42d35a:	ret    0xadd0
  42d35d:	mov    ?,edx
  42d35f:	stc    
  42d360:	in     eax,0x0
  42d362:	clc    
  42d363:	push   ss
  42d364:	or     BYTE PTR [ecx+0x6b],0xea
  42d368:	lods   al,BYTE PTR ds:[esi]
  42d369:	push   ebx
  42d36a:	out    dx,eax
  42d36b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d36c:	xchg   ecx,eax
  42d36d:	mov    ebx,0xac4d2bdb
  42d372:	sub    eax,0x3f83b705
  42d377:	add    BYTE PTR [ebx-0x25],al
  42d37a:	add    esi,DWORD PTR ds:0x548ec04e
  42d380:	sbb    BYTE PTR [ebp+0x51],ch
  42d383:	std    
  42d384:	call   0xd303:0x82860966
  42d38b:	imul   edi,DWORD PTR [ebp+0x3a],0xfffffff5
  42d38f:	popa   
  42d390:	jmp    0x526d21a
  42d395:	out    dx,al
  42d396:	fimul  WORD PTR [ebx-0x64]
  42d399:	leave  
  42d39a:	add    al,0x58
  42d39c:	xchg   edx,eax
  42d39d:	jmp    0xba3f:0xed1d0940
  42d3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3a5:	push   eax
  42d3a6:	outs   dx,BYTE PTR ds:[esi]
  42d3a7:	adc    dl,BYTE PTR [ebx-0x7e]
  42d3aa:	dec    esi
  42d3ab:	inc    edi
  42d3ac:	xchg   ebx,eax
  42d3ad:	gs sbb ah,0x59
  42d3b1:	aas    
  42d3b2:	aad    0xea
  42d3b4:	add    ebx,DWORD PTR [esi+0x6110788a]
  42d3ba:	jmp    0x9cf0d3db
  42d3bf:	xchg   BYTE PTR [ecx],dh
	...
  42d431:	add    BYTE PTR [eax],al
  42d433:	add    ah,ch
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xfbda0781
  42d442:	inc    esi
  42d443:	xchg   DWORD PTR [eax-0x22],esp
  42d446:	add    DWORD PTR [eax],eax
  42d448:	cmc    
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [edx+0x56],dh
  42d44e:	cmp    eax,0x52f96d7d
  42d453:	in     al,dx
  42d454:	ss fcmovbe st,st(4)
  42d457:	bound  edi,QWORD PTR [edi]
  42d459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d45a:	mov    BYTE PTR [ebp+ebp*4+0x5a],dh
  42d45e:	fnstenv [ebp+0x318d00f2]
  42d464:	pusha  
  42d465:	jo     0x42d4dd
  42d467:	shl    DWORD PTR [edi+0x2ec9a821],1
  42d46d:	mov    dl,0x73
  42d46f:	pop    edi
  42d470:	cmp    esp,edx
  42d472:	enter  0xa79c,0xe6
  42d476:	mov    ah,0x31
  42d478:	pusha  
  42d479:	push   edx
  42d47a:	jo     0x42d4a0
  42d47c:	fwait
  42d47d:	jecxz  0x42d447
  42d47f:	push   es
  42d480:	(bad)  
  42d481:	repz dec eax
  42d483:	ror    esp,1
  42d485:	out    dx,eax
  42d486:	es inc ebx
  42d488:	xor    bh,BYTE PTR [ecx+0x5ff47f6d]
  42d48e:	icebp  
  42d48f:	ficom  DWORD PTR [ebx+eax*2+0x1a6fcdaf]
  42d496:	mov    ah,0xc8
  42d498:	cmp    edi,DWORD PTR [edi]
  42d49a:	mov    al,BYTE PTR ds:0x11f48866
  42d4a0:	stos   DWORD PTR es:[edi],eax
  42d4a1:	or     ebp,ebp
  42d4a3:	push   esi
  42d4a4:	or     eax,DWORD PTR [eax]
  42d4a6:	aam    0x8c
  42d4a8:	clc    
  42d4a9:	sbb    BYTE PTR [edi],bl
  42d4ab:	lea    edx,[edx+ebx*1+0x54d82c08]
  42d4b2:	fcom   QWORD PTR [edi-0x35179da9]
  42d4b8:	mov    ah,0x64
  42d4ba:	popa   
  42d4bb:	lods   eax,DWORD PTR ds:[esi]
  42d4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4bd:	push   ss
  42d4be:	push   es
  42d4bf:	sahf   
  42d4c0:	call   0x3c1a:0xfddc3b2
  42d4c7:	fsub   QWORD PTR [ebp+0x5a724c57]
  42d4cd:	mov    esp,0xd048dc8a
  42d4d2:	je     0x42d459
  42d4d4:	fst    QWORD PTR [esi+esi*8]
  42d4d7:	push   0xffffffcf
  42d4d9:	lds    esp,FWORD PTR [ecx+0x4d]
  42d4dc:	ja     0x42d51f
  42d4de:	mov    ah,bl
  42d4e0:	inc    ebp
  42d4e1:	data16 xor bh,BYTE PTR ss:[edi+eiz*2-0x4262e37e]
  42d4ea:	bound  ebp,QWORD PTR [edi+0x1f]
  42d4ed:	cs sub dl,bh
  42d4f0:	stos   DWORD PTR es:[edi],eax
  42d4f1:	(bad)  
  42d4f2:	dec    ebx
  42d4f3:	push   ebx
  42d4f4:	sub    BYTE PTR [edx],ah
  42d4f6:	xor    edi,DWORD PTR [ebx]
  42d4f8:	xchg   BYTE PTR [eax],cl
  42d4fa:	(bad)  
  42d4fb:	out    0x8f,al
  42d4fd:	adc    eax,0x1df3d5da
  42d502:	pop    ebp
  42d503:	and    al,0x42
  42d505:	dec    edi
  42d506:	xchg   esi,eax
  42d507:	adc    al,BYTE PTR [edi]
  42d509:	lock mov ah,0xd
  42d50c:	push   eax
  42d50d:	sbb    al,0xb1
  42d50f:	adc    eax,0xe8d871fa
  42d514:	add    eax,0xc526af78
  42d519:	stos   BYTE PTR es:[edi],al
  42d51a:	es lock cmp ax,0xabfb
  42d520:	lock fs jp 0x42d55c
  42d524:	mov    eax,ds:0x28c040e2
  42d529:	push   ecx
  42d52a:	cmp    cl,BYTE PTR [ebp-0x70]
  42d52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d52e:	sub    al,ch
  42d530:	sar    BYTE PTR [ecx-0x37cef26],cl
  42d536:	int    0x3e
  42d538:	mov    ebp,ecx
  42d53a:	push   ss
  42d53b:	push   ecx
  42d53c:	ins    DWORD PTR es:[edi],dx
  42d53d:	out    dx,eax
  42d53e:	mov    eax,0xdfd0
	...
  42d5b3:	add    BYTE PTR [ebp+0x48],bl
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	(bad)  
  42d5c1:	mov    WORD PTR ss:[edx*2-0xafffe21],cs
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [edx],dl
  42d5cd:	sub    al,0xff
  42d5cf:	jne    0x42d61f
  42d5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5d2:	adc    al,0xa1
  42d5d4:	shr    edi,cl
  42d5d6:	inc    eax
  42d5d7:	aad    0x62
  42d5d9:	or     eax,0xcea2bc95
  42d5de:	mov    BYTE PTR [edi+0x323e748b],bl
  42d5e4:	ret    0x855b
  42d5e7:	mov    dl,0xf1
  42d5e9:	adc    dh,ah
  42d5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5ec:	push   0x69038598
  42d5f1:	inc    ecx
  42d5f2:	nop
  42d5f3:	jecxz  0x42d61c
  42d5f5:	clc    
  42d5f6:	pushf  
  42d5f7:	popa   
  42d5f8:	jbe    0xc1589968
  42d5fe:	jae    0x42d63a
  42d600:	rcr    BYTE PTR [edx-0x75],cl
  42d603:	aaa    
  42d604:	(bad)  
  42d605:	addr16 push 0xe94bc326
  42d60b:	je     0x42d5d3
  42d60d:	mov    DWORD PTR [edi],eax
  42d60f:	stos   BYTE PTR es:[edi],al
  42d610:	and    bh,BYTE PTR [eax]
  42d612:	std    
  42d613:	and    al,0x3b
  42d615:	or     al,0xd1
  42d617:	lods   eax,DWORD PTR ds:[esi]
  42d618:	sub    eax,0x11a06576
  42d61d:	lods   eax,DWORD PTR ds:[esi]
  42d61e:	mov    dh,BYTE PTR [ebx]
  42d620:	dec    ebx
  42d621:	ret    
  42d622:	hlt    
  42d623:	(bad)  {k5}{z}
  42d628:	aam    0x45
  42d62a:	push   esp
  42d62b:	stc    
  42d62c:	add    ch,BYTE PTR [eax-0x6634b914]
  42d632:	sbb    al,dl
  42d634:	(bad)  [edi-0x7ed0a01d]
  42d63a:	xchg   ecx,eax
  42d63b:	loop   0x42d6b0
  42d63d:	inc    ebp
  42d63e:	mov    DWORD PTR [ebx],ebp
  42d640:	xor    al,0x71
  42d642:	and    dh,BYTE PTR [edi+0x7b]
  42d645:	lds    esi,FWORD PTR [ebx-0x7f]
  42d648:	test   esp,ebx
  42d64a:	test   BYTE PTR [ebp+0x5b],bh
  42d64d:	pushf  
  42d64e:	stc    
  42d64f:	es xchg esp,eax
  42d651:	(bad)  
  42d652:	sub    ebx,DWORD PTR [edx+esi*2]
  42d655:	pop    edx
  42d656:	jb     0x42d679
  42d658:	or     DWORD PTR [eax+eax*1],ecx
  42d65b:	push   ds
  42d65c:	ret    
  42d65d:	out    0x85,eax
  42d65f:	sub    al,0x32
  42d661:	cwde   
  42d662:	call   0x22ec:0xc944f8ae
  42d669:	cld    
  42d66a:	adc    al,0x5
  42d66c:	(bad)  
  42d66d:	jno    0x42d63f
  42d66f:	dec    ebp
  42d670:	repnz sbb al,0xac
  42d673:	or     BYTE PTR [edx-0xb],bl
  42d676:	add    al,0xa8
  42d678:	add    al,BYTE PTR [ebx-0x2254103e]
  42d67e:	mov    edx,edx
  42d680:	jmp    0xe593:0x307e1456
  42d687:	sub    dh,dl
  42d689:	data16 out dx,al
  42d68b:	add    ecx,DWORD PTR [ebx]
  42d68d:	enter  0x0,0xf1
  42d691:	enter  0xf9c9,0x7
  42d695:	loopne 0x42d62a
  42d697:	cs xor bl,ch
  42d69a:	sbb    BYTE PTR [edi-0x18],0x2
  42d69e:	inc    ebp
  42d69f:	jl     0x42d6ce
  42d6a1:	inc    ebx
  42d6a2:	inc    edi
  42d6a3:	lock dec edx
  42d6a5:	cs mov ebx,0x4a193b02
  42d6ab:	inc    ecx
  42d6ac:	jo     0x42d6a3
  42d6ae:	sub    eax,0xf692251
  42d6b3:	(bad)  
  42d6b4:	into   
  42d6b5:	std    
  42d6b6:	out    0xc2,eax
  42d6b8:	les    ebp,FWORD PTR [esi+ebp*4-0x266ae79f]
  42d6bf:	out    0x11,eax
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	rcl    BYTE PTR [edi-0x1fb5c8e2],cl
  42d746:	add    DWORD PTR [eax],eax
  42d748:	cmc    
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [esi+0x3329ad01],al
  42d751:	sub    eax,0x41ce8dfc
  42d756:	dec    esp
  42d757:	(bad)  
  42d758:	cmc    
  42d759:	popf   
  42d75a:	imul   ecx,DWORD PTR [edx+0x33],0xdab5cf8c
  42d761:	cmp    DWORD PTR [ecx-0x15a058fe],edi
  42d767:	outs   dx,DWORD PTR ds:[esi]
  42d768:	loopne 0x42d7c4
  42d76a:	cmp    edx,DWORD PTR [ebx]
  42d76c:	rcl    BYTE PTR [ebp+ebp*1-0x6d6afaf3],1
  42d773:	loopne 0x42d700
  42d775:	in     eax,0x71
  42d777:	fstp   DWORD PTR [ebx]
  42d779:	pop    ebx
  42d77a:	push   0xe416ce2b
  42d77f:	in     al,0x71
  42d781:	jae    0x42d729
  42d783:	ret    0x39bd
  42d786:	xor    al,0xbc
  42d788:	dec    ecx
  42d789:	repz mov edx,DWORD PTR [esi-0x6a4c573a]
  42d790:	and    al,0x63
  42d792:	inc    edx
  42d793:	sub    DWORD PTR [ebx],ecx
  42d795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d796:	rcl    dh,cl
  42d798:	cmp    eax,edi
  42d79a:	leave  
  42d79b:	jle    0x42d757
  42d79d:	pusha  
  42d79e:	test   eax,0xdb96f0f5
  42d7a3:	mov    bh,0x27
  42d7a5:	in     eax,0x30
  42d7a7:	dec    edi
  42d7a8:	lds    esi,FWORD PTR [eax-0x3118c5d6]
  42d7ae:	push   0x5f9a95e9
  42d7b3:	clc    
  42d7b4:	inc    esi
  42d7b5:	js     0x42d7be
  42d7b7:	repnz aaa 
  42d7b9:	in     al,dx
  42d7ba:	je     0x42d806
  42d7bc:	and    cl,cl
  42d7be:	daa    
  42d7bf:	inc    ecx
  42d7c0:	shl    DWORD PTR [edi],cl
  42d7c2:	stos   BYTE PTR es:[edi],al
  42d7c3:	mov    cl,0x49
  42d7c5:	sbb    dl,ah
  42d7c7:	xor    eax,DWORD PTR [ebp+edx*1+0x2cd0bc8c]
  42d7ce:	out    dx,eax
  42d7cf:	int    0x9d
  42d7d1:	in     al,dx
  42d7d2:	out    0x4f,al
  42d7d4:	xor    DWORD PTR [ecx],edx
  42d7d6:	(bad)  [ecx-0x26]
  42d7d9:	aam    0xf8
  42d7db:	mov    ds:0x4b69aeb5,al
  42d7e0:	arpl   cx,si
  42d7e2:	push   edi
  42d7e3:	mov    bl,0x7a
  42d7e5:	lds    ebp,FWORD PTR [ebx-0x1b]
  42d7e8:	outs   dx,BYTE PTR ds:[esi]
  42d7e9:	fs pop es
  42d7eb:	adc    esi,DWORD PTR [esi]
  42d7ed:	add    al,0xd0
  42d7ef:	mov    dl,0x43
  42d7f1:	lea    esp,[eax+0x13]
  42d7f4:	jecxz  0x42d852
  42d7f6:	mov    gs,WORD PTR [edx-0x1f563208]
  42d7fc:	push   cs
  42d7fd:	xor    ch,ch
  42d7ff:	test   edi,eax
  42d801:	into   
  42d802:	xor    al,0x9
  42d804:	test   al,0x71
  42d806:	ja     0x42d820
  42d808:	rcr    BYTE PTR [edi],cl
  42d80a:	mov    ebx,0x52a2d7ec
  42d80f:	mov    ah,BYTE PTR [edi+0x64]
  42d812:	mov    cl,0x5a
  42d814:	mov    al,ds:0x495d2ede
  42d819:	mov    ds:0x51424719,al
  42d81e:	int    0xfe
  42d820:	shl    DWORD PTR [ebx],0xd3
  42d823:	jmp    0xfcd76360
  42d828:	inc    edx
  42d829:	ret    0x1ec7
  42d82c:	addr16 xchg ebx,eax
  42d82e:	pop    eax
  42d82f:	pop    es
  42d830:	daa    
  42d831:	xchg   BYTE PTR [esi],ch
  42d833:	out    dx,al
  42d834:	xor    BYTE PTR [ebx-0x17],0x5
  42d838:	cmp    ah,dh
  42d83a:	bound  eax,QWORD PTR [ebx-0x55]
  42d83d:	scas   al,BYTE PTR es:[edi]
  42d83e:	lock imul ebx,DWORD PTR [esi+0x0],0x0
	...
  42d8b1:	add    BYTE PTR [eax],al
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x3fdcc254
  42d8c1:	jbe    0x42d93d
  42d8c3:	mov    cl,0x3f
  42d8c5:	loope  0x42d8c8
  42d8c7:	add    ch,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [edi],bl
  42d8cd:	leave  
  42d8ce:	cmp    BYTE PTR [ebp+0x1085eb62],cl
  42d8d4:	and    bh,BYTE PTR [edi+0x65]
  42d8d7:	call   0x9333740a
  42d8dc:	mov    ah,0x24
  42d8de:	enter  0x65de,0xf3
  42d8e2:	mov    DWORD PTR [ebp-0x5],esi
  42d8e5:	xlat   BYTE PTR ds:[ebx]
  42d8e6:	push   esp
  42d8e7:	loope  0x42d939
  42d8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8ea:	clc    
  42d8eb:	push   ds
  42d8ec:	arpl   WORD PTR [ebp+0x44e4ae8b],bx
  42d8f2:	lds    edx,FWORD PTR [esi+0x13]
  42d8f5:	pop    ds
  42d8f6:	and    eax,0x425508d
  42d8fb:	fsubr  QWORD PTR [ebp-0x6ebad21]
  42d901:	push   cs
  42d902:	std    
  42d903:	int3   
  42d904:	mov    cl,BYTE PTR [edx+0x17]
  42d907:	retf   
  42d908:	pop    esp
  42d909:	push   cs
  42d90a:	test   al,0x26
  42d90c:	cs and cl,dh
  42d90f:	pop    ecx
  42d910:	fcom   QWORD PTR [edx-0x3f]
  42d913:	pop    ds
  42d914:	jg     0x42d91f
  42d916:	dec    ecx
  42d917:	lds    ebx,FWORD PTR [esi-0x43]
  42d91a:	xor    cl,cl
  42d91c:	push   esp
  42d91d:	ret    
  42d91e:	push   ss
  42d91f:	inc    esp
  42d920:	scas   eax,DWORD PTR es:[edi]
  42d921:	movzx  eax,BYTE PTR [eax+0x14]
  42d925:	push   eax
  42d926:	pop    DWORD PTR [edi]
  42d928:	lods   eax,DWORD PTR ds:[esi]
  42d929:	mov    BYTE PTR [ebp-0x3f],cl
  42d92c:	add    al,0x38
  42d92e:	jmp    0x12e6:0xdd453f48
  42d935:	xchg   esp,eax
  42d936:	aas    
  42d937:	and    ah,bh
  42d939:	fst    st(7)
  42d93b:	aas    
  42d93c:	test   eax,0xd7d8a53a
  42d941:	push   edx
  42d942:	add    BYTE PTR [esi],dl
  42d944:	add    BYTE PTR [edx-0x13a4541c],0x7d
  42d94b:	and    bh,BYTE PTR [ebp-0x32]
  42d94e:	lahf   
  42d94f:	cli    
  42d950:	add    ebx,DWORD PTR [esi-0x479a6f5b]
  42d956:	ret    0x19b3
  42d959:	repz into 
  42d95b:	or     eax,0xba922b33
  42d960:	ins    DWORD PTR es:[edi],dx
  42d961:	fnop   
  42d963:	jl     0x42d99c
  42d965:	add    edi,DWORD PTR [edx+0x74]
  42d968:	jmp    0xf1a165a5
  42d96d:	jle    0x42d912
  42d96f:	xor    eax,0xc84750b8
  42d974:	call   0xad96:0x5a2ab390
  42d97b:	outs   dx,BYTE PTR ds:[esi]
  42d97c:	aas    
  42d97d:	lahf   
  42d97e:	xlat   BYTE PTR ds:[ebx]
  42d97f:	(bad)  
  42d980:	and    al,0xff
  42d982:	sub    BYTE PTR [esi],0xa5
  42d985:	sar    BYTE PTR cs:[edx+0x3d573345],1
  42d98c:	aaa    
  42d98d:	out    dx,al
  42d98e:	cmp    esi,0xd97e821c
  42d994:	jg     0x42d944
  42d996:	shl    dl,0xd1
  42d999:	sub    al,0xd9
  42d99b:	cmp    al,0x89
  42d99d:	mov    DWORD PTR [esi+0x60],ebp
  42d9a0:	xchg   ebx,eax
  42d9a1:	push   ecx
  42d9a3:	push   cs
  42d9a4:	jne    0x42d93c
  42d9a6:	and    edi,edi
  42d9a8:	mov    ah,BYTE PTR [ecx+0x2422f50]
  42d9ae:	xchg   edi,eax
  42d9af:	sbb    eax,eax
  42d9b1:	xchg   ebp,eax
  42d9b2:	jno    0x42da23
  42d9b4:	jecxz  0x42d973
  42d9b6:	ds inc eax
  42d9b8:	arpl   ax,cx
  42d9ba:	pop    ecx
  42d9bb:	(bad)  
  42d9bc:	mov    ah,0x21
  42d9be:	adc    DWORD PTR [ebx+0x20],esi
	...
  42da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da35:	fimul  DWORD PTR [eax-0x10ac02bf]
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	pop    esi
  42da41:	sahf   
  42da42:	cmp    al,0x98
  42da44:	xor    al,0xe2
  42da46:	add    DWORD PTR [eax],eax
  42da48:	cmc    
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [edx+0x39],bl
  42da4e:	add    DWORD PTR [edi],esp
  42da50:	mov    ch,0x60
  42da52:	xchg   DWORD PTR [ebx],esp
  42da54:	shr    DWORD PTR [eax],1
  42da56:	pusha  
  42da57:	mov    al,ds:0x4cc7cbfc
  42da5c:	dec    ebp
  42da5d:	jmp    0x42dabd
  42da5f:	(bad)  
  42da60:	in     al,dx
  42da61:	jmp    0xd64:0x66806617
  42da68:	xor    dl,BYTE PTR [ecx+0x7e]
  42da6b:	ret    0xb865
  42da6e:	out    0xaf,al
  42da70:	pop    edx
  42da71:	jmp    0xf970:0xf54b64a7
  42da78:	lods   al,BYTE PTR ds:[esi]
  42da79:	in     al,0xda
  42da7b:	pop    eax
  42da7c:	nop
  42da7d:	and    eax,0x956f8b8f
  42da82:	inc    edi
  42da83:	or     BYTE PTR [edx+0x45],dl
  42da86:	mov    ebp,0x9865bc0a
  42da8b:	xor    ah,BYTE PTR ds:0xb0821825
  42da91:	arpl   WORD PTR [edi-0x7a],bx
  42da94:	pusha  
  42da95:	jae    0x42da81
  42da97:	fstp   QWORD PTR [esi+0x1ff6eaf6]
  42da9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da9e:	push   edx
  42da9f:	aad    0xb6
  42daa1:	cmp    DWORD PTR [ebp+eiz*8+0x1ac3401c],edx
  42daa8:	xor    al,0xa5
  42daaa:	xchg   edi,eax
  42daab:	xchg   BYTE PTR [ebp+edx*2-0x27],al
  42daaf:	or     DWORD PTR [eax+edi*2],eax
  42dab2:	add    eax,0x30f2b7c4
  42dab7:	jmp    0x42da3e
  42dab9:	aaa    
  42daba:	mov    eax,DWORD PTR [esi-0x79]
  42dabd:	rcl    DWORD PTR [edx],0x79
  42dac0:	shl    BYTE PTR [eax+ecx*8],cl
  42dac3:	lods   al,BYTE PTR ds:[esi]
  42dac4:	mov    dl,0x29
  42dac6:	pop    esi
  42dac7:	mov    ebx,0x6548786f
  42dacc:	call   0xad3b:0x4b7f053b
  42dad3:	shl    DWORD PTR [edi],1
  42dad5:	mov    edi,0x3eef705b
  42dada:	push   0x20
  42dadc:	pop    ebx
  42dadd:	mov    ah,0xac
  42dadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dae0:	les    esi,FWORD PTR [edi]
  42dae2:	dec    edi
  42dae3:	push   eax
  42dae4:	jge    0x42dad6
  42dae6:	fwait
  42dae7:	push   ds
  42dae8:	mov    ecx,ebx
  42daea:	jl     0x42daac
  42daec:	hlt    
  42daed:	fdiv   DWORD PTR [edi]
  42daef:	test   DWORD PTR [edx],esp
  42daf1:	(bad)  
  42daf2:	xlat   BYTE PTR ds:[ebx]
  42daf3:	pop    ebx
  42daf4:	pop    esp
  42daf5:	xor    BYTE PTR [eax-0x8],ch
  42daf8:	mov    esi,0x3f5b8841
  42dafd:	xor    ebx,DWORD PTR [esi+0x6cbab919]
  42db03:	xchg   ebp,eax
  42db04:	ficomp WORD PTR [eax-0x42]
  42db07:	push   es
  42db08:	call   0x9589:0x8fc4c668
  42db0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db10:	popa   
  42db11:	mov    ebx,0xd4a53740
  42db16:	test   dl,cl
  42db18:	mov    edx,0x768aea76
  42db1d:	mov    ds:0xe4245313,eax
  42db22:	sar    DWORD PTR [edi-0x262fcb1c],1
  42db28:	xor    eax,0x76b9273c
  42db2d:	stc    
  42db2e:	in     eax,dx
  42db2f:	lods   eax,DWORD PTR ds:[esi]
  42db30:	(bad)  
  42db32:	xchg   esp,eax
  42db33:	inc    ecx
  42db34:	leave  
  42db35:	nop
  42db36:	(bad)  
  42db37:	mov    al,ds:0xfa4fc309
  42db3c:	mov    al,0xa7
  42db3e:	(bad)  
  42db3f:	lods   al,BYTE PTR ds:[esi]
  42db40:	jo     0x42db42
	...
  42dbb2:	add    BYTE PTR [eax],al
  42dbb4:	jg     0x42dbb8
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xc9280637,al
  42dbc3:	adc    DWORD PTR [ecx],ebp
  42dbc5:	jecxz  0x42dbc8
  42dbc7:	add    ch,dh
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    BYTE PTR [eax+0x1ceeff00],ah
  42dbd1:	push   edx
  42dbd2:	call   0x69fa5b9e
  42dbd7:	mov    BYTE PTR ds:0xe63515d2,ah
  42dbdd:	cmp    al,BYTE PTR [esi]
  42dbdf:	sbb    DWORD PTR [edi-0x20],0x64c1c0d1
  42dbe6:	fistp  QWORD PTR ds:0xa75f91d9
  42dbec:	dec    ebx
  42dbed:	xchg   edx,eax
  42dbee:	dec    edx
  42dbef:	pushf  
  42dbf0:	test   al,0xf7
  42dbf2:	leave  
  42dbf3:	outs   dx,BYTE PTR ds:[esi]
  42dbf4:	mov    esp,0x152047f4
  42dbf9:	sub    DWORD PTR [esi],esi
  42dbfb:	pusha  
  42dbfc:	inc    eax
  42dbfd:	es mov ebp,0x73106aed
  42dc03:	cmp    DWORD PTR [ebp+0x2a6332eb],0x74
  42dc0a:	adc    BYTE PTR [eax],dl
  42dc0c:	and    al,0x4
  42dc0e:	jg     0x42dbc7
  42dc10:	repnz test eax,0xe90f3707
  42dc16:	ficom  WORD PTR [ecx]
  42dc18:	jbe    0x42dc14
  42dc1a:	out    0x99,eax
  42dc1c:	cwde   
  42dc1d:	enter  0xc119,0xff
  42dc21:	pop    ss
  42dc22:	inc    esi
  42dc23:	or     edx,esp
  42dc25:	jp     0x42dc7d
  42dc27:	div    BYTE PTR [ecx+0x6e]
  42dc2a:	test   DWORD PTR [eax+0x5f146e18],eax
  42dc30:	or     ah,ch
  42dc32:	scas   al,BYTE PTR es:[edi]
  42dc33:	clc    
  42dc34:	sbb    al,0x58
  42dc36:	call   0xbee7:0xdc915872
  42dc3d:	mov    eax,0xf5f421c
  42dc42:	idiv   BYTE PTR [ecx-0x75]
  42dc45:	std    
  42dc46:	stc    
  42dc47:	cmp    dh,BYTE PTR [ecx]
  42dc49:	gs cld 
  42dc4b:	xchg   DWORD PTR [ecx+0x71],edx
  42dc4e:	push   0xffffffad
  42dc50:	add    eax,0x6aa837f
  42dc55:	imul   edx,ecx,0x957b3dd
  42dc5b:	cmp    ecx,DWORD PTR [ebx-0x2fac21e9]
  42dc61:	js     0x42dbfc
  42dc63:	scas   eax,DWORD PTR es:[edi]
  42dc64:	xchg   edx,eax
  42dc65:	or     edi,DWORD PTR [ebp+0x25]
  42dc68:	cld    
  42dc69:	sbb    ah,BYTE PTR [esi-0x45ea9428]
  42dc6f:	jnp    0x42dc15
  42dc71:	pop    esp
  42dc72:	sub    ebx,ebp
  42dc74:	mov    dh,0x4
  42dc76:	or     dh,al
  42dc78:	adc    eax,0x6178685b
  42dc7d:	cmp    DWORD PTR [esi+esi*1],ebx
  42dc80:	in     al,0x44
  42dc82:	sbb    ecx,ebx
  42dc84:	repnz dec eax
  42dc86:	add    al,0xb3
  42dc88:	xor    eax,edx
  42dc8a:	retf   
  42dc8b:	adc    esp,DWORD PTR [ecx-0x3e14aac2]
  42dc91:	jl     0x42dc58
  42dc93:	aam    0x4e
  42dc95:	and    esp,DWORD PTR [ecx-0x73]
  42dc98:	rol    DWORD PTR [ebp+0x66],cl
  42dc9b:	out    0x25,al
  42dc9d:	shl    DWORD PTR [ecx-0x53735776],cl
  42dca3:	lock jnp 0x42dcf5
  42dca6:	in     eax,dx
  42dca7:	add    BYTE PTR [esi],dh
  42dca9:	cmp    bl,BYTE PTR [eax+0x19]
  42dcac:	je     0x42dcd2
  42dcae:	stos   BYTE PTR es:[edi],al
  42dcaf:	inc    edi
  42dcb0:	or     BYTE PTR [ecx-0x556e651c],dl
  42dcb6:	test   eax,esi
  42dcb8:	dec    esi
  42dcb9:	push   esp
  42dcba:	(bad)
  42dcbd:	ret    0x9755
  42dcc0:	mov    ds:0x0,al
	...
  42dd31:	add    BYTE PTR [eax],al
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx+0x4d82e068]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [ebp-0x790d4d8d],bh
  42dd51:	push   0x8386b718
  42dd56:	sbb    al,0x1a
  42dd58:	xchg   ebx,eax
  42dd59:	mov    dl,0xeb
  42dd5b:	push   edi
  42dd5c:	je     0x42dd15
  42dd5e:	mov    al,0xbc
  42dd60:	mov    edi,0xa10481fe
  42dd65:	in     eax,dx
  42dd66:	aam    0x7b
  42dd68:	stos   BYTE PTR es:[edi],al
  42dd69:	loope  0x42dd2d
  42dd6b:	in     al,dx
  42dd6c:	nop
  42dd6d:	ins    DWORD PTR es:[edi],dx
  42dd6e:	cli    
  42dd6f:	jecxz  0x42ddb0
  42dd71:	inc    ebx
  42dd72:	xchg   esi,eax
  42dd73:	sub    eax,0x7e42fab2
  42dd78:	mov    edi,0xc37babe3
  42dd7d:	xchg   ebx,eax
  42dd7e:	fnsave [esi]
  42dd80:	imul   esp,esp,0xccd89fcb
  42dd86:	adc    eax,0x39c7fa24
  42dd8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd8c:	les    ecx,FWORD PTR [edx-0x1c869d97]
  42dd92:	push   eax
  42dd93:	(bad)  [ebp+0x4]
  42dd96:	imul   esp,esi,0x18
  42dd99:	and    DWORD PTR [edx+0x1c],ecx
  42dd9c:	mov    edx,0x57f34801
  42dda1:	jp     0x42dda0
  42dda3:	xchg   edi,eax
  42dda4:	iret   
  42dda5:	mov    edi,ebp
  42dda7:	into   
  42dda8:	dec    edi
  42dda9:	pop    es
  42ddaa:	shl    DWORD PTR [ebx-0x33ae455c],0x35
  42ddb1:	clc    
  42ddb2:	adc    BYTE PTR [edx+0x53],dh
  42ddb5:	sub    BYTE PTR [ebx-0x521b94fd],ch
  42ddbb:	push   cs
  42ddbc:	inc    ecx
  42ddbd:	jg     0x42ddfb
  42ddbf:	aam    0x95
  42ddc1:	cmp    DWORD PTR [ecx+0x33],esp
  42ddc4:	xor    eax,0x378692da
  42ddc9:	push   edi
  42ddca:	sar    ebp,1
  42ddcc:	jecxz  0x42de25
  42ddce:	fisub  WORD PTR [ebp-0x6b]
  42ddd1:	inc    esp
  42ddd2:	fisub  DWORD PTR [ebx-0x10fb076c]
  42ddd8:	test   DWORD PTR [edx],edx
  42ddda:	leave  
  42dddb:	xchg   edi,eax
  42dddc:	jmp    0x6d48:0xf161d523
  42dde3:	sub    cl,BYTE PTR [edx]
  42dde5:	xchg   cx,ax
  42dde7:	and    edx,DWORD PTR [esi]
  42dde9:	jmp    DWORD PTR [edx]
  42ddeb:	or     al,0xde
  42ddee:	popa   
  42ddef:	jne    0x42de4e
  42ddf1:	test   BYTE PTR [ebx],bl
  42ddf3:	cmp    BYTE PTR [ebx+edi*1+0x2e],ch
  42ddf7:	inc    eax
  42ddf8:	push   esi
  42ddf9:	cmp    eax,0xd872c3af
  42ddfe:	xchg   edx,eax
  42ddff:	dec    esp
  42de00:	out    dx,al
  42de01:	pop    eax
  42de02:	push   ss
  42de03:	jl     0x42dd98
  42de05:	inc    edi
  42de06:	jmp    DWORD PTR [ecx]
  42de08:	push   esi
  42de09:	push   eax
  42de0a:	fld    TBYTE PTR [ebx+0x6e]
  42de0d:	xor    al,BYTE PTR [eax+esi*8-0x6c]
  42de11:	push   0xffffffd2
  42de13:	sbb    bl,BYTE PTR [ecx]
  42de15:	lahf   
  42de16:	aas    
  42de17:	xor    al,al
  42de19:	jbe    0x42de93
  42de1b:	neg    BYTE PTR [eax+edi*4]
  42de1e:	sbb    DWORD PTR [edx+0x77bc7b5b],ebx
  42de24:	out    0x94,al
  42de26:	retf   0x3cd4
  42de29:	fst    QWORD PTR [eax]
  42de2b:	cmp    ch,bh
  42de2d:	mov    esp,es
  42de2f:	in     eax,0xff
  42de31:	neg    BYTE PTR [esp+ecx*2+0xa38e5db]
  42de38:	dec    edi
  42de39:	jmp    0x3d1f130c
  42de3e:	(bad)  
  42de3f:	stos   DWORD PTR es:[edi],eax
  42de40:	push   ds
	...
  42deb1:	add    BYTE PTR [eax],al
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi-0x438637f4]
  42dec3:	mov    ds:0x1e513,al
  42dec8:	cmc    
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ecx+ebx*8+0x1c3a03bb],dh
  42ded2:	cmp    DWORD PTR [edi-0x7f],eax
  42ded5:	inc    esp
  42ded6:	jl     0x42de7b
  42ded8:	aaa    
  42ded9:	fdivr  st,st(3)
  42dedb:	pop    esp
  42dedc:	pop    es
  42dedd:	push   ds
  42dede:	add    al,0x4d
  42dee0:	push   esp
  42dee1:	stc    
  42dee2:	pop    eax
  42dee3:	sub    edx,DWORD PTR [ebx-0xcf0bbcf]
  42dee9:	mov    ch,0xc1
  42deeb:	lods   eax,DWORD PTR ds:[esi]
  42deec:	mov    eax,ds:0xf868237a
  42def1:	clc    
  42def2:	add    DWORD PTR [eax-0x53880105],esi
  42def8:	lods   eax,DWORD PTR ds:[esi]
  42def9:	lods   al,BYTE PTR ds:[esi]
  42defa:	leave  
  42defb:	dec    ebx
  42defc:	cmp    eax,0x38e611b7
  42df01:	add    cl,dh
  42df03:	jp     0x42df7a
  42df05:	clc    
  42df06:	sahf   
  42df07:	pop    esi
  42df08:	test   al,0x1
  42df0a:	out    dx,eax
  42df0b:	int3   
  42df0c:	out    0x34,al
  42df0e:	inc    ebx
  42df0f:	pusha  
  42df10:	push   0xfffffff0
  42df12:	fcomp  DWORD PTR [eax-0x75]
  42df15:	std    
  42df16:	scas   al,BYTE PTR es:[edi]
  42df17:	and    al,0x84
  42df19:	ds and al,0xb7
  42df1c:	lahf   
  42df1d:	out    dx,al
  42df1e:	cmp    BYTE PTR [esi-0xf],bl
  42df21:	mov    eax,esi
  42df23:	mov    cx,0xfeee
  42df27:	sbb    eax,0x84089685
  42df2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df2d:	jecxz  0x42df7d
  42df2f:	sbb    esi,edi
  42df31:	mov    al,0xa1
  42df33:	in     al,dx
  42df34:	into   
  42df35:	pop    eax
  42df36:	mov    BYTE PTR [ebx],dh
  42df38:	dec    ebp
  42df39:	outs   dx,DWORD PTR ds:[esi]
  42df3a:	rcl    BYTE PTR [ebx],1
  42df3c:	fs adc edx,edx
  42df3f:	dec    ebp
  42df40:	(bad)  
  42df41:	pop    ss
  42df42:	in     eax,0x2b
  42df44:	jmp    ebx
  42df46:	and    al,ch
  42df48:	fcom   QWORD PTR [eax-0x7c]
  42df4b:	int3   
  42df4c:	inc    BYTE PTR [ecx+0x5a]
  42df4f:	and    BYTE PTR [edx-0x44394151],dl
  42df55:	rcr    DWORD PTR [esi-0x9],cl
  42df58:	or     DWORD PTR [ecx-0x7c9a4b7f],ebp
  42df5e:	fwait
  42df5f:	dec    esp
  42df60:	pop    ebp
  42df61:	das    
  42df62:	dec    edi
  42df63:	in     eax,0x18
  42df65:	outs   dx,BYTE PTR ds:[esi]
  42df66:	dec    edx
  42df67:	rol    BYTE PTR [eax+eiz*8-0x17],0xf7
  42df6c:	sub    DWORD PTR ds:0x8ee97120,ebp
  42df72:	push   edi
  42df73:	dec    eax
  42df74:	out    0x90,eax
  42df76:	or     eax,0x5c29f4e5
  42df7b:	adc    eax,0xc8463c9c
  42df80:	mov    esp,0x5193732b
  42df85:	mov    ds:0xebbf8af2,al
  42df8a:	in     al,0xdc
  42df8c:	adc    DWORD PTR [edi],eax
  42df8e:	jae    0x42df29
  42df90:	push   ebx
  42df91:	pop    ebx
  42df92:	(bad)  
  42df93:	mul    edx
  42df95:	lahf   
  42df96:	loopne 0x42e013
  42df98:	pop    ebp
  42df99:	js     0x42df75
  42df9b:	and    al,0x19
  42df9d:	dec    ebp
  42df9e:	(bad)  
  42df9f:	repnz and eax,0x5be663a2
  42dfa5:	sub    edi,ecx
  42dfa7:	inc    eax
  42dfa8:	mov    esi,0x5c5f52fa
  42dfad:	sub    eax,ecx
  42dfaf:	mov    gs,WORD PTR [eax-0x21d0724f]
  42dfb5:	dec    esp
  42dfb6:	and    al,bl
  42dfb8:	push   ax
  42dfba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfbb:	sbb    eax,0x4ec2aa0c
  42dfc0:	add    DWORD PTR [eax],eax
	...
  42e032:	add    BYTE PTR [eax],al
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx-0x713dfd1e],0x73
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    BYTE PTR [edi],dl
  42e04d:	fisub  WORD PTR [ebx+0x71339e3f]
  42e053:	mov    ebx,0x261d9adf
  42e058:	dec    edi
  42e059:	std    
  42e05a:	repz jnp 0x42e052
  42e05d:	mov    esp,0x7d4cdb46
  42e062:	ja     0x42e0b1
  42e064:	mov    bh,0x7
  42e066:	xchg   ebx,eax
  42e067:	scas   eax,DWORD PTR es:[edi]
  42e068:	test   DWORD PTR [edx-0x37],edi
  42e06b:	les    ecx,FWORD PTR [ebx-0x549f0f78]
  42e071:	mov    edi,0xf68f2b93
  42e076:	pop    esp
  42e077:	sbb    eax,0xd5580d4
  42e07c:	cli    
  42e07d:	shr    cl,0xa1
  42e080:	mov    ebx,0xf533d1ca
  42e085:	pushf  
  42e086:	push   0xedb69f0f
  42e08b:	dec    ebx
  42e08c:	icebp  
  42e08d:	out    dx,eax
  42e08e:	push   0x648e3bff
  42e093:	cli    
  42e094:	mov    ecx,0xc222fb61
  42e099:	hlt    
  42e09a:	cmp    ecx,ebx
  42e09c:	loope  0x42e0b0
  42e09e:	pop    ss
  42e09f:	not    BYTE PTR [ecx]
  42e0a1:	hlt    
  42e0a2:	mov    cl,0x20
  42e0a4:	test   BYTE PTR [esi],0x19
  42e0a7:	jno    0x42e10e
  42e0a9:	aad    0x96
  42e0ab:	in     al,0x61
  42e0ad:	xor    edi,DWORD PTR [ebx-0x68]
  42e0b0:	ja     0x42e0b9
  42e0b2:	push   ecx
  42e0b3:	loopne 0x42e05c
  42e0b5:	push   0xe4e10e29
  42e0ba:	mov    ds:0x7cba24f0,al
  42e0bf:	pop    ds
  42e0c0:	scas   al,BYTE PTR es:[edi]
  42e0c1:	mov    ch,dh
  42e0c3:	inc    esp
  42e0c4:	cs push 0xbd257651
  42e0ca:	mov    al,gs:0x7c9c8104
  42e0d0:	mov    ecx,0xd4eaf02b
  42e0d5:	push   edi
  42e0d6:	pop    ebx
  42e0d7:	nop
  42e0d8:	into   
  42e0d9:	shl    BYTE PTR [esi-0x3d],1
  42e0dc:	xchg   DWORD PTR [eax],esp
  42e0de:	aaa    
  42e0df:	(bad)  
  42e0e0:	sub    dl,BYTE PTR [ecx+0x7bb67872]
  42e0e6:	pop    ebx
  42e0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0e8:	lock mov edx,0x2c26d2a3
  42e0ee:	lahf   
  42e0ef:	inc    edi
  42e0f0:	or     BYTE PTR [esp+eiz*8+0x68],0x7e
  42e0f5:	scas   al,BYTE PTR es:[edi]
  42e0f6:	dec    ebp
  42e0f7:	les    esi,FWORD PTR [ebx+0x2]
  42e0fa:	add    eax,0xebb5218e
  42e0ff:	aaa    
  42e100:	jmp    0x42e115
  42e102:	push   cs
  42e103:	adc    DWORD PTR [edx+0x23],eax
  42e106:	push   es
  42e107:	and    esi,eax
  42e109:	sub    BYTE PTR [eax-0x249602fc],0x14
  42e110:	fidiv  WORD PTR [edi+0x54]
  42e113:	lods   al,BYTE PTR ds:[esi]
  42e114:	dec    esi
  42e115:	call   0x842e:0x81db233d
  42e11c:	xor    eax,0x11bfcb76
  42e121:	pop    ds
  42e122:	adc    eax,0x318ba28d
  42e127:	test   edi,ebp
  42e129:	jo     0x42e15b
  42e12b:	dec    esi
  42e12c:	fwait
  42e12d:	stc    
  42e12e:	jg     0x42e18f
  42e130:	xchg   ebx,eax
  42e131:	(bad)  [ecx+0x2b]
  42e134:	popa   
  42e135:	enter  0xcd0e,0xeb
  42e139:	daa    
  42e13a:	add    edx,eax
  42e13c:	into   
  42e13d:	pop    ebp
  42e13e:	fndisi(8087 only) 
  42e140:	push   ebx
	...
  42e1b1:	add    BYTE PTR [eax],al
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x65175d71
  42e1c3:	xchg   edx,eax
  42e1c4:	std    
  42e1c5:	out    0x1,al
  42e1c7:	add    ch,dh
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    BYTE PTR [ecx+0x32efbd79],dl
  42e1d1:	fwait
  42e1d2:	and    al,0xb3
  42e1d4:	and    ebx,DWORD PTR [ebx]
  42e1d6:	clc    
  42e1d7:	inc    ebx
  42e1d8:	imul   ecx,DWORD PTR [edi],0xffffffb9
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	in     eax,0x56
  42e1de:	sub    al,0x31
  42e1e0:	push   ds
  42e1e1:	fist   WORD PTR [edi+0x77]
  42e1e4:	sbb    BYTE PTR [edx+0x6341a7b4],cl
  42e1ea:	scas   al,BYTE PTR es:[edi]
  42e1eb:	addr16 dec ebp
  42e1ed:	fdiv   DWORD PTR [edi-0xd]
  42e1f0:	rcl    BYTE PTR [ecx-0x43],0xed
  42e1f4:	pop    esp
  42e1f5:	cmp    dh,cl
  42e1f7:	faddp  st(4),st
  42e1f9:	shl    BYTE PTR [eax+edi*4+0x12],cl
  42e1fd:	aam    0x7d
  42e1ff:	xor    DWORD PTR [ecx],ecx
  42e201:	adc    BYTE PTR [ebx-0x399b6d9d],dh
  42e207:	dec    edi
  42e208:	aas    
  42e209:	mov    edx,0x198a7e91
  42e20e:	pushf  
  42e20f:	jns    0x42e1c4
  42e211:	popa   
  42e212:	mov    al,0x4
  42e214:	sub    DWORD PTR ds:[ebx],eax
  42e217:	adc    eax,0xad6772c7
  42e21c:	pop    ss
  42e21d:	shr    DWORD PTR ds:0xdba38da4,1
  42e223:	dec    ebp
  42e224:	mov    edx,0xe8682c15
  42e229:	add    ebp,DWORD PTR [edx]
  42e22b:	dec    esp
  42e22c:	cmp    dl,BYTE PTR [ebp+0x73d7944f]
  42e232:	mov    bh,0x1c
  42e234:	pop    eax
  42e235:	test   BYTE PTR [ebx+0x77],bh
  42e238:	inc    eax
  42e239:	outs   dx,DWORD PTR ds:[esi]
  42e23a:	nop
  42e23b:	sub    eax,0xa8d6fe48
  42e240:	inc    esp
  42e241:	mul    DWORD PTR [ebp+0x8]
  42e244:	(bad)  
  42e245:	or     al,0x58
  42e247:	mov    ah,0xb8
  42e249:	call   0x8639:0x999599d
  42e250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e251:	imul   edx,ebx,0x85c4d57f
  42e257:	cld    
  42e258:	add    edx,ecx
  42e25a:	jmp    0xf14b:0x9b96151d
  42e261:	inc    ebx
  42e262:	push   edx
  42e263:	sub    DWORD PTR [ecx],eax
  42e265:	or     al,0x4f
  42e267:	mov    cl,0x79
  42e269:	sti    
  42e26a:	inc    esp
  42e26b:	or     al,0x7a
  42e26d:	xor    BYTE PTR [ebx+0x16],dh
  42e270:	xor    ah,BYTE PTR [esi]
  42e272:	call   0x70fa7fec
  42e277:	or     dl,BYTE PTR [ebp-0x233a97ce]
  42e27d:	add    ebx,ecx
  42e27f:	in     eax,0x7b
  42e281:	ficom  DWORD PTR [edx-0x72]
  42e284:	sbb    al,0xbb
  42e286:	sbb    DWORD PTR [ecx-0x3d],ebp
  42e289:	pusha  
  42e28a:	fwait
  42e28b:	jnp    0x42e258
  42e28d:	xlat   BYTE PTR ds:[ebx]
  42e28e:	lahf   
  42e28f:	pushf  
  42e290:	lea    ecx,[ebx+0x5716f174]
  42e296:	adc    DWORD PTR [eax-0x1ab8cc86],eax
  42e29c:	(bad)  
  42e29d:	cwde   
  42e29e:	push   edi
  42e29f:	sub    edi,DWORD PTR [eax+0x10]
  42e2a2:	(bad)  
  42e2a3:	sub    DWORD PTR [edx-0xc8c8959],ebx
  42e2a9:	neg    BYTE PTR [ecx]
  42e2ab:	fcmovnbe st,st(3)
  42e2ad:	aad    0x83
  42e2af:	jmp    0xf5afe4e6
  42e2b4:	outs   dx,DWORD PTR ds:[esi]
  42e2b5:	mov    eax,0x9a0a898d
  42e2ba:	ins    BYTE PTR es:[edi],dx
  42e2bb:	dec    edx
  42e2bc:	lods   eax,DWORD PTR ds:[esi]
  42e2bd:	jge    0x42e268
  42e2bf:	syscall 
	...
  42e331:	add    BYTE PTR [eax],al
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [edi],ebp
  42e341:	xchg   edi,eax
  42e342:	add    ebp,DWORD PTR [ebp-0xe]
  42e345:	out    0x1,eax
  42e347:	add    ch,dh
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    BYTE PTR [ebp-0x62],dl
  42e34e:	mov    ecx,0xb2516c09
  42e353:	dec    ecx
  42e354:	xor    DWORD PTR [edi+0x4048e1d9],edi
  42e35a:	xchg   dh,ch
  42e35c:	sub    al,0x8d
  42e35e:	or     al,0x15
  42e360:	jp     0x42e3d0
  42e362:	mov    eax,ds:0x8a386681
  42e367:	lea    eax,[ebx]
  42e369:	ja     0x42e36a
  42e36b:	sbb    DWORD PTR [edi],esp
  42e36d:	push   ss
  42e36e:	outs   dx,BYTE PTR ds:[esi]
  42e36f:	js     0x42e354
  42e371:	mov    ebp,0xb34cfc0d
  42e376:	inc    edx
  42e377:	push   edx
  42e378:	fdivr  QWORD PTR [edx+0x313321ea]
  42e37e:	inc    edx
  42e37f:	dec    ebp
  42e380:	sub    al,0x2f
  42e382:	jecxz  0x42e3cd
  42e384:	fld    st(0)
  42e386:	push   cs
  42e387:	mov    ds:0xf8a6bca9,al
  42e38c:	cmp    DWORD PTR [ecx-0x4c],ebp
  42e38f:	xor    DWORD PTR [ebx+0x42],ecx
  42e392:	mov    ss,WORD PTR [edx-0x1a]
  42e395:	xchg   BYTE PTR [eax-0xc8e9744],cl
  42e39b:	and    ah,BYTE PTR [esp+ecx*8]
  42e39e:	outs   dx,BYTE PTR ds:[esi]
  42e39f:	push   cs
  42e3a0:	cmp    ah,BYTE PTR [edx-0x28]
  42e3a3:	xor    esi,ebx
  42e3a5:	cmp    DWORD PTR [ecx-0x743e8c48],edx
  42e3ab:	pop    ebx
  42e3ac:	mov    al,0x7e
  42e3ae:	sahf   
  42e3af:	in     eax,0xcc
  42e3b1:	cwde   
  42e3b2:	repnz pop esi
  42e3b4:	fstp   DWORD PTR [edi+0x3f]
  42e3b7:	loope  0x42e351
  42e3b9:	adc    edx,DWORD PTR [edx-0x49606468]
  42e3bf:	arpl   WORD PTR [esi-0x44],sp
  42e3c2:	add    al,0x8b
  42e3c4:	or     eax,0x7c924b54
  42e3c9:	inc    edx
  42e3ca:	js     0x42e42b
  42e3cc:	nop
  42e3cd:	and    eax,0xee7a6cdf
  42e3d2:	in     eax,0x46
  42e3d4:	jg     0x42e41c
  42e3d6:	inc    ecx
  42e3d7:	and    esp,eax
  42e3d9:	cli    
  42e3da:	(bad)  
  42e3db:	jp     0x42e3df
  42e3dd:	lea    ecx,[ecx]
  42e3df:	and    DWORD PTR [ebx-0x6],ecx
  42e3e2:	mov    dh,0xa9
  42e3e4:	pop    ds
  42e3e5:	sbb    edx,eax
  42e3e7:	cdq    
  42e3e8:	(bad)  
  42e3e9:	lea    edi,[ebx-0x11fb5f75]
  42e3ef:	cmc    
  42e3f0:	mov    DWORD PTR [eax],eax
  42e3f2:	mov    eax,ecx
  42e3f4:	call   0xcfb8:0xb4be0f78
  42e3fb:	add    DWORD PTR [ecx],ebx
  42e3fd:	aas    
  42e3fe:	inc    edi
  42e3ff:	dec    edx
  42e400:	hlt    
  42e401:	aad    0xa1
  42e403:	lock xor dl,BYTE PTR [edi-0x6d3c1f3b]
  42e40a:	test   DWORD PTR [eax+eiz*4+0x38],eax
  42e40e:	xchg   bl,ch
  42e410:	mov    bh,0x55
  42e412:	repnz push 0xffffffc1
  42e415:	sbb    eax,0xccb08431
  42e41a:	inc    edi
  42e41b:	jmp    0xf797c805
  42e420:	out    0x35,al
  42e422:	mov    al,ds:0xa4d2124c
  42e427:	pop    ds
  42e428:	test   BYTE PTR [edi+0x2f],dh
  42e42b:	les    edx,FWORD PTR [edx+0x50]
  42e42e:	into   
  42e42f:	inc    edi
  42e430:	mov    ch,0x1
  42e432:	cmp    bl,al
  42e434:	jae    0x42e3e3
  42e436:	cdq    
  42e437:	and    al,0x85
  42e439:	jmp    0xd579a479
  42e43e:	dec    ebp
  42e43f:	and    edx,DWORD PTR ds:0x0
	...
  42e4b1:	add    BYTE PTR [eax],al
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0xd74ab335
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [edi+0x60a15cf3],bh
  42e4d1:	jmp    0xee05:0x4a21cd63
  42e4d8:	retf   
  42e4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4da:	adc    edi,esi
  42e4dc:	outs   dx,BYTE PTR ds:[esi]
  42e4dd:	bound  ecx,QWORD PTR [ecx+eax*8+0xb]
  42e4e1:	add    dh,ch
  42e4e3:	enter  0x82a3,0x5e
  42e4e7:	jbe    0x42e548
  42e4e9:	jo     0x42e4c0
  42e4eb:	jmp    0x1507408
  42e4f0:	add    BYTE PTR [ecx],0x95
  42e4f3:	in     eax,dx
  42e4f4:	in     al,0x8
  42e4f6:	mov    WORD PTR [ebp+0x7e],ss
  42e4f9:	push   ds
  42e4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4fb:	xchg   BYTE PTR [esi-0x71f3e1b0],dh
  42e501:	adc    DWORD PTR [esi-0x2],ecx
  42e504:	xor    eax,0x6a13f34c
  42e509:	(bad)  
  42e50a:	iret   
  42e50b:	mov    dh,bh
  42e50d:	mov    ebp,0xf1ea70e4
  42e512:	jno    0x42e4fe
  42e514:	jg     0x42e575
  42e516:	adc    ecx,DWORD PTR [ecx+0x3b]
  42e519:	pop    edx
  42e51a:	test   al,0xd5
  42e51c:	sub    DWORD PTR [ebx-0x71b6a808],0xbd7e0cdb
  42e526:	jecxz  0x42e5a4
  42e528:	add    DWORD PTR [esi+0x56],edx
  42e52b:	mov    dl,0x39
  42e52d:	dec    edi
  42e52e:	mov    al,0xde
  42e530:	xlat   BYTE PTR ds:[ebx]
  42e531:	pop    eax
  42e532:	push   esi
  42e533:	out    dx,eax
  42e534:	sub    BYTE PTR [ecx+ebp*1-0x52cd4519],cl
  42e53b:	jmp    0x42e5b4
  42e53d:	ja     0x42e58f
  42e53f:	jb     0x42e563
  42e541:	stos   BYTE PTR es:[edi],al
  42e542:	add    bh,BYTE PTR [ecx+0x24]
  42e545:	(bad)  
  42e546:	mov    ch,0xd2
  42e548:	neg    DWORD PTR [eax+0x53]
  42e54b:	xchg   esp,eax
  42e54c:	pop    ebp
  42e54d:	js     0x42e4f9
  42e54f:	into   
  42e550:	mov    ds:0xf6227af5,eax
  42e555:	ds mov bl,0xba
  42e558:	xor    bh,BYTE PTR [eax-0x396796b3]
  42e55e:	cmp    BYTE PTR [eax],0xb
  42e561:	hlt    
  42e562:	jp     0x42e5c6
  42e564:	jno    0x42e5ad
  42e566:	ja     0x42e54c
  42e568:	mov    ds:0x346baccd,al
  42e56d:	adc    al,bh
  42e56f:	push   ecx
  42e570:	sbb    BYTE PTR ds:0x9300bd6b,bh
  42e576:	lds    ebp,FWORD PTR [ecx-0x48efa6e9]
  42e57c:	sti    
  42e57d:	mov    ?,WORD PTR [edx]
  42e57f:	call   DWORD PTR [ebp-0x6b]
  42e582:	dec    esp
  42e583:	xchg   esi,ebp
  42e585:	adc    dh,BYTE PTR [ebx+0x22]
  42e588:	and    eax,DWORD PTR [ecx+0x7702ee8d]
  42e58e:	jo     0x42e561
  42e590:	pop    ebp
  42e591:	std    
  42e592:	sub    eax,0xd52fbb54
  42e597:	pop    eax
  42e598:	xchg   DWORD PTR [ecx+0x6316968c],ebp
  42e59e:	adc    edi,ecx
  42e5a0:	inc    esi
  42e5a1:	or     DWORD PTR [eax-0x73],0x3eab9422
  42e5a8:	sbb    eax,0x68254ded
  42e5ad:	test   eax,0x61878f35
  42e5b2:	pop    esp
  42e5b3:	out    0xb2,eax
  42e5b5:	mov    ecx,0x76eaec6b
  42e5ba:	dec    edi
  42e5bb:	outs   dx,DWORD PTR ds:[esi]
  42e5bc:	(bad)  
  42e5bd:	pop    esi
  42e5be:	push   0x27
  42e5c0:	jae    0x42e5c2
	...
  42e632:	add    BYTE PTR [eax],al
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	pushf  
  42e641:	fs stos BYTE PTR es:[edi],al
  42e643:	adc    esp,ebx
  42e645:	jmp    0x137e64b
  42e64a:	add    BYTE PTR [eax],al
  42e64c:	push   esp
  42e64d:	jge    0x42e686
  42e64f:	add    al,0x4
  42e651:	retf   0x35fa
  42e654:	sub    al,0xfa
  42e656:	fsub   DWORD PTR [eax+edi*8]
  42e659:	or     eax,ebx
  42e65b:	clc    
  42e65c:	ss pop ebp
  42e65e:	sahf   
  42e65f:	xlat   BYTE PTR ds:[ebx]
  42e660:	lods   eax,DWORD PTR ds:[esi]
  42e661:	outs   dx,BYTE PTR ds:[esi]
  42e662:	sub    eax,0x9373c2fd
  42e667:	mov    ch,0x7e
  42e669:	lock stos BYTE PTR es:[edi],al
  42e66b:	pop    ebx
  42e66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e66d:	add    BYTE PTR [edx+0x57],bh
  42e670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e671:	mov    DWORD PTR [ebx+0x523eabd9],ecx
  42e677:	ds aam 0x59
  42e67a:	xchg   ecx,eax
  42e67b:	mov    ds,esp
  42e67d:	xor    eax,0x81c863c3
  42e682:	cs push es
  42e684:	pop    edi
  42e685:	or     BYTE PTR [eax],0xc6
  42e688:	xchg   edi,eax
  42e689:	sub    al,0x57
  42e68b:	sbb    BYTE PTR [edi+edi*2+0x44],ah
  42e68f:	ss icebp 
  42e691:	shl    DWORD PTR [ebp-0x25],0xe5
  42e695:	mov    esi,0xe4812e6
  42e69a:	aaa    
  42e69b:	mov    esp,0x49c6a6cf
  42e6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6a1:	stos   DWORD PTR es:[edi],eax
  42e6a2:	push   ebx
  42e6a3:	stos   DWORD PTR es:[edi],eax
  42e6a4:	ins    BYTE PTR es:[edi],dx
  42e6a5:	xchg   edx,eax
  42e6a6:	call   0x2cc0:0x7f343f6a
  42e6ad:	adc    eax,0xea07c3fc
  42e6b2:	jno    0x42e675
  42e6b4:	arpl   WORD PTR [ebx],dx
  42e6b6:	icebp  
  42e6b7:	loope  0x42e730
  42e6b9:	mov    ah,0x79
  42e6bb:	cmc    
  42e6bc:	mov    ecx,0xbf9fa1ab
  42e6c1:	fstp   st(0)
  42e6c3:	and    DWORD PTR [ebp-0x5b3a304a],ebx
  42e6c9:	xor    DWORD PTR [edi-0x7],ebx
  42e6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6cd:	sti    
  42e6ce:	in     eax,dx
  42e6cf:	add    eax,0xa3bb9327
  42e6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6d5:	js     0x42e6bf
  42e6d7:	(bad)  
  42e6d8:	popf   
  42e6d9:	cs mov bl,0x37
  42e6dc:	iret   
  42e6dd:	sbb    al,0x58
  42e6df:	mov    bh,0x39
  42e6e1:	sub    BYTE PTR [eax-0x1b117023],ah
  42e6e7:	mov    esi,0xbd99adc6
  42e6ec:	std    
  42e6ed:	cs xchg esp,eax
  42e6ef:	adc    al,0xb5
  42e6f1:	lods   al,BYTE PTR ds:[esi]
  42e6f2:	aam    0x30
  42e6f4:	or     edx,DWORD PTR [edi-0x24]
  42e6f7:	loopne 0x42e6fd
  42e6f9:	cmp    BYTE PTR ds:0x978602d4,cl
  42e6ff:	pop    ebx
  42e700:	les    esp,FWORD PTR [eax-0x4f]
  42e703:	daa    
  42e704:	mov    ds:0x21c40095,al
  42e709:	push   0xf6be089a
  42e70e:	iret   
  42e70f:	fwait
  42e710:	rcr    DWORD PTR [ebx-0x3fb14601],cl
  42e716:	inc    ebp
  42e717:	hlt    
  42e718:	int    0x4f
  42e71a:	fwait
  42e71b:	mov    al,0xed
  42e71d:	cmp    al,0xa1
  42e71f:	out    dx,al
  42e720:	cmp    eax,0x2b5d675d
  42e725:	and    DWORD PTR [edi-0x2146bbec],edx
  42e72b:	push   edx
  42e72c:	adc    bl,BYTE PTR [edi+0x670b8638]
  42e732:	popa   
  42e733:	scas   al,BYTE PTR es:[edi]
  42e734:	xor    eax,0xa2d0c0c
  42e739:	sub    edi,ebp
  42e73b:	xchg   ebx,eax
  42e73c:	xchg   esp,eax
  42e73d:	ds pop ss
  42e73f:	cs sub eax,0x0
	...
  42e7b1:	add    BYTE PTR [eax],al
  42e7b3:	add    BYTE PTR [esi-0x62a06765],dl
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi-0x3f2aa8a]
  42e7c1:	ds ret 0xd111
  42e7c5:	jmp    0x0:0xf50001
  42e7cc:	jmp    0xb9cdec91
  42e7d1:	gs out 0x42,eax
  42e7d4:	in     eax,dx
  42e7d5:	retf   
  42e7d6:	jo     0x42e79f
  42e7d8:	add    eax,0x294b297e
  42e7dd:	mov    eax,0xcc6cd2f2
  42e7e2:	lahf   
  42e7e3:	rcl    BYTE PTR [edi+0x5f],cl
  42e7e6:	lods   al,BYTE PTR ds:[esi]
  42e7e7:	jmp    0xcd213c03
  42e7ec:	retf   
  42e7ed:	mov    dl,0xec
  42e7ef:	push   ebx
  42e7f0:	cwde   
  42e7f1:	cmc    
  42e7f2:	mov    ebx,0x81beb6a9
  42e7f7:	xchg   ecx,eax
  42e7f8:	add    ah,BYTE PTR [edi]
  42e7fa:	cmove  eax,ebp
  42e7fd:	pop    es
  42e7fe:	sti    
  42e7ff:	and    cl,BYTE PTR [esi+0x23]
  42e802:	pop    eax
  42e803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e804:	sbb    esp,0x3deafa43
  42e80a:	mov    ebp,0x6fd9818d
  42e80f:	(bad)  
  42e810:	add    ecx,DWORD PTR ss:[eax]
  42e813:	das    
  42e814:	adc    eax,0x3f68afca
  42e819:	ja     0x42e877
  42e81b:	mov    ecx,0xd548cb2a
  42e820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e821:	mov    al,ds:0xe587aa9b
  42e826:	outs   dx,BYTE PTR ds:[esi]
  42e827:	outs   dx,BYTE PTR ds:[esi]
  42e828:	jmp    0x2166fada
  42e82d:	jle    0x42e83d
  42e82f:	jne    0x42e878
  42e831:	sar    BYTE PTR [edx],cl
  42e833:	(bad)  
  42e834:	xlat   BYTE PTR ds:[ebx]
  42e835:	ja     0x42e83b
  42e837:	push   ss
  42e838:	or     eax,0xb68b7427
  42e83d:	(bad)  
  42e83e:	aad    0x46
  42e840:	add    ecx,DWORD PTR ss:[esi]
  42e843:	lods   eax,DWORD PTR ds:[esi]
  42e844:	jge    0x42e878
  42e846:	push   ebx
  42e847:	lea    ebp,[ecx-0x158d916e]
  42e84d:	imul   ebx,DWORD PTR [bp-0x11],0x6401642f
  42e855:	xor    DWORD PTR ds:0x47c07a5a,ebp
  42e85b:	mov    DWORD PTR ds:0xd90dd76c,edi
  42e861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e862:	std    
  42e863:	fmul   DWORD PTR [ebp-0x10aadde]
  42e869:	inc    eax
  42e86a:	fs cmp esp,ebx
  42e86d:	outs   dx,BYTE PTR ds:[esi]
  42e86e:	popa   
  42e86f:	mov    edx,0x3b88e453
  42e874:	jb     0x42e89e
  42e876:	test   al,0xa4
  42e878:	jno    0x42e8b2
  42e87a:	cmc    
  42e87b:	dec    edi
  42e87c:	jbe    0x42e829
  42e87e:	mov    ebp,0x4080e810
  42e883:	mov    BYTE PTR [ecx],cl
  42e885:	add    esi,DWORD PTR [ecx]
  42e887:	mov    bh,0xff
  42e889:	test   BYTE PTR [esi],bl
  42e88b:	scas   al,BYTE PTR es:[edi]
  42e88c:	push   edi
  42e88d:	sbb    cl,BYTE PTR ds:0x2cdc612b
  42e893:	repnz inc esp
  42e895:	data16 adc ch,bh
  42e898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e899:	mov    cl,0xbc
  42e89b:	lods   eax,DWORD PTR ds:[esi]
  42e89c:	add    ah,bl
  42e89e:	push   esp
  42e89f:	cs pushf 
  42e8a1:	inc    edi
  42e8a2:	sahf   
  42e8a3:	mov    eax,ds:0x46458a94
  42e8a8:	in     al,0xd5
  42e8aa:	and    BYTE PTR [eax],al
  42e8ac:	inc    ebp
  42e8ad:	cmp    esi,DWORD PTR [ebx]
  42e8af:	mov    BYTE PTR [ebp+0x4dd0386f],bl
  42e8b5:	retf   0x1fc
  42e8b8:	pushf  
  42e8b9:	mov    ecx,0x5d859e0c
  42e8be:	or     al,dh
  42e8c0:	sub    BYTE PTR [eax],al
	...
  42e932:	add    BYTE PTR [eax],al
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x87
  42e941:	mov    al,0xca
  42e943:	stos   DWORD PTR es:[edi],eax
  42e944:	(bad)  
  42e945:	jmp    0x42e948
  42e947:	add    ch,dh
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    BYTE PTR [ebp+0xa],ch
  42e94e:	(bad)  
  42e950:	jecxz  0x42e992
  42e952:	pop    DWORD PTR [eax]
  42e954:	cdq    
  42e955:	imul   edi,edx
  42e958:	imul   ebx,DWORD PTR [ebx],0xffffffb2
  42e95b:	fild   QWORD PTR [eax+0x62]
  42e95e:	stos   BYTE PTR es:[edi],al
  42e95f:	fcmovnb st,st(6)
  42e961:	cwde   
  42e962:	ja     0x42e96b
  42e964:	(bad)  
  42e965:	int3   
  42e966:	in     al,dx
  42e967:	sub    eax,0xa72453ad
  42e96c:	ds mov dl,0x80
  42e96f:	jg     0x42e96d
  42e971:	sbb    eax,0x51e1cca5
  42e976:	dec    esp
  42e977:	je     0x42e923
  42e979:	push   es
  42e97a:	int3   
  42e97b:	push   ecx
  42e97c:	leave  
  42e97d:	call   0x8a4d:0xedf8e463
  42e984:	add    eax,0x3119850d
  42e989:	out    0x27,eax
  42e98b:	aas    
  42e98c:	test   DWORD PTR cs:[edx+0x1d3ed827],edx
  42e993:	add    BYTE PTR es:[eax+0x19b45173],0x97
  42e99b:	xor    DWORD PTR [esi],ebp
  42e99d:	pop    eax
  42e99e:	inc    esp
  42e99f:	repnz add BYTE PTR [edx+0x1ca3d7bf],al
  42e9a6:	mov    al,0x6c
  42e9a8:	pop    es
  42e9a9:	mov    ecx,0x2ab527f2
  42e9ae:	(bad)  [ebp+0x642d22a0]
  42e9b4:	inc    ecx
  42e9b5:	dec    edi
  42e9b6:	xor    DWORD PTR [esi+0x4989eae4],ecx
  42e9bc:	aaa    
  42e9bd:	push   ecx
  42e9be:	ss xor al,bh
  42e9c1:	push   0xffffffe5
  42e9c3:	enter  0x4c03,0x9e
  42e9c7:	addr16 pop ds
  42e9c9:	add    ebx,ecx
  42e9cb:	fistp  WORD PTR [esi+0x47061c44]
  42e9d1:	cmp    eax,edx
  42e9d3:	sbb    DWORD PTR [edi+0x3c],ebx
  42e9d6:	xor    DWORD PTR [ebx],ecx
  42e9d8:	add    DWORD PTR [ecx],0x8acce99
  42e9de:	sbb    edi,DWORD PTR [eax]
  42e9e0:	stos   BYTE PTR es:[edi],al
  42e9e1:	punpcklwd mm4,mm6
  42e9e4:	add    eax,0x6bd9b406
  42e9e9:	shl    BYTE PTR [eax-0x59126b9e],1
  42e9ef:	in     eax,dx
  42e9f0:	xlat   BYTE PTR ds:[ebx]
  42e9f1:	and    ah,BYTE PTR [edx]
  42e9f3:	bound  esp,QWORD PTR [ebp+ebp*2+0x6e6b1506]
  42e9fa:	jb     0x42e98a
  42e9fc:	sbb    DWORD PTR [ebx],ebx
  42e9fe:	std    
  42e9ff:	adc    eax,0x84104059
  42ea04:	sub    al,0x12
  42ea06:	mov    esi,0x40367797
  42ea0b:	loop   0x42ea33
  42ea0d:	or     ebp,ebx
  42ea0f:	pop    esi
  42ea10:	mov    BYTE PTR [edx-0x71],bl
  42ea13:	stc    
  42ea14:	ds sbb ebx,DWORD PTR ss:0xa66688e9
  42ea1c:	push   esi
  42ea1d:	in     al,0x50
  42ea1f:	xchg   esp,eax
  42ea20:	pusha  
  42ea21:	add    ah,bh
  42ea23:	mov    BYTE PTR [esi+ebx*2],bl
  42ea26:	adc    eax,DWORD PTR [eax-0x79]
  42ea29:	sub    dl,BYTE PTR [edx+0x1d]
  42ea2c:	sbb    eax,0x3e151377
  42ea31:	int    0x9a
  42ea33:	addr16 into 
  42ea35:	retf   
  42ea36:	enter  0x5564,0x6d
  42ea3a:	call   0xcd37:0x23fb7aa9
	...
  42eab1:	add    BYTE PTR [eax],al
  42eab3:	add    BYTE PTR [eax-0x2093e086],dh
  42eab9:	ins    DWORD PTR es:[edi],dx
  42eaba:	repz dec BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	mov    edi,0xbb7a6ddd
  42eac5:	in     al,dx
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	cmc    
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    al,bh
  42eacd:	adc    ebx,DWORD PTR [esi-0x37]
  42ead0:	inc    ebp
  42ead1:	mov    ebx,0x1f809c8a
  42ead6:	ror    BYTE PTR [ebp-0xc],cl
  42ead9:	scas   eax,DWORD PTR es:[edi]
  42eada:	cwde   
  42eadb:	std    
  42eadc:	leave  
  42eadd:	mov    dl,0x62
  42eadf:	push   DWORD PTR [edx-0x1b968296]
  42eae5:	xchg   edi,eax
  42eae6:	inc    edi
  42eae7:	sub    al,0xee
  42eae9:	mov    al,0x7a
  42eaeb:	mov    esp,0xbc0f6117
  42eaf0:	xchg   ebx,eax
  42eaf1:	xor    eax,0x17dd3259
  42eaf6:	scas   al,BYTE PTR es:[edi]
  42eaf7:	stos   BYTE PTR es:[edi],al
  42eaf8:	(bad)  
  42eaf9:	mov    cl,0xf5
  42eafb:	and    al,0xa3
  42eafd:	nop
  42eafe:	call   0x9981:0x7221712e
  42eb05:	mov    ch,BYTE PTR [ebx]
  42eb07:	jmp    0xb47:0xc5f42af2
  42eb0e:	add    eax,0x934ba0be
  42eb13:	mov    eax,ds:0x3612f9ee
  42eb18:	add    eax,0xe7389076
  42eb1d:	mov    bl,BYTE PTR [esi+0x2f99f972]
  42eb23:	mov    ebx,ebx
  42eb25:	call   0xb6f0755b
  42eb2a:	cmp    DWORD PTR [ecx-0x3],esi
  42eb2d:	adc    al,0x65
  42eb2f:	fwait
  42eb30:	xor    al,0xa
  42eb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb33:	ret    0x2a25
  42eb36:	jp     0x42eb50
  42eb38:	fist   DWORD PTR [ebx+0x3f]
  42eb3b:	push   edx
  42eb3c:	(bad)  
  42eb3d:	shl    BYTE PTR [esi+0x2eeea29b],0x75
  42eb44:	xor    DWORD PTR fs:[edi],eax
  42eb47:	cdq    
  42eb48:	stos   DWORD PTR es:[edi],eax
  42eb49:	dec    ecx
  42eb4a:	pop    ds
  42eb4b:	scas   eax,DWORD PTR es:[edi]
  42eb4c:	sbb    al,0xb1
  42eb4e:	shr    DWORD PTR [ecx+edx*1+0xe],cl
  42eb52:	and    ah,BYTE PTR [eax]
  42eb54:	xor    ecx,DWORD PTR [ebp-0xb]
  42eb57:	fadd   DWORD PTR [eax]
  42eb59:	shl    DWORD PTR [ebx+0xb57474f],0x4a
  42eb60:	fild   DWORD PTR [ebp+0x1f62a3ab]
  42eb66:	sub    ah,al
  42eb68:	dec    esi
  42eb69:	push   0xf54acdcd
  42eb6e:	jbe    0x42ebb8
  42eb70:	push   ss
  42eb71:	xchg   ebx,eax
  42eb72:	push   ebx
  42eb73:	dec    BYTE PTR [ebx+0x36fbeefb]
  42eb79:	in     al,0xd1
  42eb7b:	hlt    
  42eb7c:	cmp    al,BYTE PTR [esi]
  42eb7e:	and    al,BYTE PTR [edx+eax*2-0x51beeb76]
  42eb85:	mov    edi,0x49227b9f
  42eb8a:	(bad)  
  42eb8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb8c:	mov    eax,ds:0x4319b77d
  42eb91:	fimul  WORD PTR [ebp+0x7b838d47]
  42eb97:	out    0x77,eax
  42eb99:	sbb    eax,0x71e8a769
  42eb9e:	ins    BYTE PTR es:[edi],dx
  42eb9f:	retf   
  42eba0:	pop    ecx
  42eba1:	aas    
  42eba2:	xor    eax,0xdeb57262
  42eba7:	add    DWORD PTR [esi-0x4d],edx
  42ebaa:	dec    edi
  42ebab:	push   eax
  42ebac:	sbb    eax,0x8539174c
  42ebb1:	int3   
  42ebb2:	inc    edx
  42ebb3:	sub    al,0x5e
  42ebb5:	dec    edi
  42ebb6:	(bad)  
  42ebb7:	dec    edi
  42ebb8:	mov    al,ds:0x87d64f0a
  42ebbd:	lahf   
  42ebbe:	retf   
  42ebbf:	and    ecx,eax
	...
  42ec31:	add    BYTE PTR [eax],al
  42ec33:	add    BYTE PTR [ecx],bh
  42ec35:	mov    bh,0x6d
  42ec37:	pxor   mm3,mm7
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4-0x7a091d97]
  42ec43:	in     al,0xb0
  42ec45:	in     eax,dx
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	cmc    
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    BYTE PTR [esi],cl
  42ec4d:	xor    ah,BYTE PTR [esp+edi*4]
  42ec50:	arpl   WORD PTR [eax+0x355bc488],bx
  42ec56:	pop    edx
  42ec57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec58:	fwait
  42ec59:	inc    ecx
  42ec5a:	call   0x38f1:0x6f9ea6cd
  42ec61:	and    eax,0xdc473b55
  42ec66:	xlat   BYTE PTR ds:[ebx]
  42ec67:	pushf  
  42ec68:	ficom  DWORD PTR [ecx-0x5f4ec897]
  42ec6e:	adc    eax,0x8931a215
  42ec73:	ret    
  42ec74:	(bad)  
  42ec75:	jp     0x42ec9a
  42ec77:	mov    bh,0xd3
  42ec79:	retf   
  42ec7a:	enter  0xea56,0xd4
  42ec7e:	adc    al,0x54
  42ec80:	daa    
  42ec81:	in     eax,0xe6
  42ec83:	jne    0x42ec9f
  42ec85:	shl    BYTE PTR [ebx+0x10ec9e29],0xbe
  42ec8c:	sub    ebx,DWORD PTR [edx-0xe0a4ca5]
  42ec92:	adc    cl,bl
  42ec94:	pop    eax
  42ec95:	pop    ss
  42ec96:	add    DWORD PTR [eax+0x45],ecx
  42ec99:	push   esp
  42ec9a:	or     al,BYTE PTR [ebp-0x41ffab63]
  42eca0:	add    BYTE PTR [edx+0x6f],ah
  42eca3:	fwait
  42eca4:	enter  0x98f1,0x9
  42eca8:	mov    esi,0xc9447c1e
  42ecad:	gs dec ebx
  42ecaf:	or     eax,0x60560ccb
  42ecb4:	mov    eax,DWORD PTR [eax]
  42ecb6:	pop    edx
  42ecb7:	sub    ebx,0xc0ce296
  42ecbd:	add    al,BYTE PTR [ebp+0x1a]
  42ecc0:	add    bl,BYTE PTR [ecx+esi*8+0x1ba19008]
  42ecc7:	fild   QWORD PTR [ebp+0x51]
  42ecca:	or     bh,al
  42eccc:	jae    0x42ec6c
  42ecce:	and    eax,0x292d0e4b
  42ecd3:	adc    bl,BYTE PTR ds:0x66229025
  42ecd9:	dec    ebx
  42ecda:	dec    edx
  42ecdb:	clc    
  42ecdc:	in     al,dx
  42ecdd:	push   edi
  42ecde:	jne    0x42ec89
  42ece0:	and    BYTE PTR [edx+0x23c153b],0x8
  42ece7:	pop    esp
  42ece8:	push   edi
  42ece9:	sbb    DWORD PTR [edi-0x12e69b2d],eax
  42ecef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecf0:	fidivr DWORD PTR [esi-0x20d8bfa6]
  42ecf6:	rcl    esp,0x42
  42ecf9:	test   al,0xe7
  42ecfb:	push   es
  42ecfc:	lahf   
  42ecfd:	xor    edx,edx
  42ecff:	loope  0x42ec9e
  42ed01:	(bad)  
  42ed02:	scas   al,BYTE PTR es:[edi]
  42ed03:	add    esi,ecx
  42ed05:	sbb    BYTE PTR [eax],0xfe
  42ed08:	fs pushf 
  42ed0a:	out    0x4e,al
  42ed0c:	fistp  WORD PTR [ebx-0x6256607d]
  42ed12:	sbb    DWORD PTR [edi+0x6f61710f],edx
  42ed18:	les    eax,FWORD PTR [edx+ebp*2]
  42ed1b:	cld    
  42ed1c:	mov    dh,0x36
  42ed1e:	add    esp,esi
  42ed20:	imul   esp,DWORD PTR [edi],0x8a861a88
  42ed26:	dec    esi
  42ed27:	cmc    
  42ed28:	test   al,0x87
  42ed2a:	rcl    DWORD PTR [ecx],cl
  42ed2c:	out    dx,al
  42ed2d:	scas   al,BYTE PTR es:[edi]
  42ed2e:	cwde   
  42ed2f:	pop    ds
  42ed30:	js     0x42ecfe
  42ed32:	ds jmp 0x42ed14
  42ed35:	sbb    DWORD PTR [eax],edi
  42ed37:	and    DWORD PTR [edx],edx
  42ed39:	das    
  42ed3a:	mov    cl,cl
  42ed3c:	daa    
  42ed3d:	dec    edx
  42ed3e:	jl     0x42edb6
  42ed40:	int3   
	...
  42edb1:	add    BYTE PTR [eax],al
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x94367d55
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [ebp-0x79],bh
  42edce:	mov    dl,0x15
  42edd0:	enter  0xa185,0x21
  42edd4:	or     eax,0xb21906fe
  42edd9:	mov    eax,0xd9dbeb78
  42edde:	dec    esi
  42eddf:	jae    0x42ed78
  42ede1:	mov    ecx,0x3aa2289c
  42ede6:	(bad)  
  42ede7:	mov    bh,0xe0
  42ede9:	sub    ah,BYTE PTR [ebp-0x1a921289]
  42edef:	cmp    al,0xf7
  42edf1:	jge    0x42ed81
  42edf3:	test   al,0xc2
  42edf5:	sbb    ah,al
  42edf7:	and    BYTE PTR [ebx+0x4f47bcef],bl
  42edfd:	dec    DWORD PTR [edx+edi*8-0x4c]
  42ee01:	fcmovnbe st,st(4)
  42ee03:	adc    eax,0x7df552e0
  42ee08:	lock cdq 
  42ee0a:	popf   
  42ee0b:	addr16 and ecx,edi
  42ee0e:	xor    al,0xe
  42ee10:	lds    edx,FWORD PTR [esi-0x31]
  42ee13:	retf   0x7631
  42ee16:	xchg   esp,eax
  42ee17:	xchg   ecx,eax
  42ee18:	push   edx
  42ee19:	rcl    BYTE PTR [edi-0x33],1
  42ee1c:	aas    
  42ee1d:	cmc    
  42ee1e:	scas   al,BYTE PTR es:[edi]
  42ee1f:	sbb    al,0x76
  42ee21:	mov    ds:0xff7539ca,al
  42ee26:	iret   
  42ee27:	xchg   esp,eax
  42ee28:	pop    ebp
  42ee29:	cdq    
  42ee2a:	ret    0xd996
  42ee2d:	pop    eax
  42ee2e:	or     ah,BYTE PTR [edi]
  42ee30:	mov    bh,al
  42ee32:	add    DWORD PTR [ebp+0x3d],ebx
  42ee35:	(bad)  
  42ee37:	aaa    
  42ee38:	enter  0x9203,0xb0
  42ee3c:	pop    ds
  42ee3d:	sub    edi,DWORD PTR [ecx+0x5b9b535e]
  42ee43:	xchg   BYTE PTR [esp+eiz*8-0x6d],ah
  42ee47:	aam    0x30
  42ee49:	rcl    DWORD PTR [esi+0x7cfad742],cl
  42ee4f:	pop    esp
  42ee50:	inc    edi
  42ee51:	(bad)  
  42ee52:	cmc    
  42ee53:	inc    esi
  42ee54:	inc    DWORD PTR [esp+edx*4-0x2ab88fe]
  42ee5b:	ret    
  42ee5c:	push   0x76
  42ee5e:	mov    edi,DWORD PTR [ecx+esi*8-0x6c]
  42ee62:	pop    eax
  42ee63:	out    0x45,al
  42ee65:	inc    ecx
  42ee66:	xchg   ebp,eax
  42ee67:	cld    
  42ee68:	push   eax
  42ee69:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42ee6b:	cwde   
  42ee6c:	mov    ebx,0xf4b5f1f4
  42ee71:	xlat   BYTE PTR ds:[ebx]
  42ee72:	pop    ebx
  42ee73:	outs   dx,BYTE PTR ds:[esi]
  42ee74:	mov    cl,0xa9
  42ee76:	inc    ebx
  42ee77:	mov    ecx,0x4129d963
  42ee7c:	jmp    0x7e94:0xd022413
  42ee83:	adc    esp,DWORD PTR [eax-0x3e]
  42ee86:	mov    dh,0xed
  42ee88:	pop    es
  42ee89:	repnz rcr esp,cl
  42ee8c:	or     ah,BYTE PTR fs:[bp+si]
  42ee90:	push   edi
  42ee91:	dec    ecx
  42ee92:	retf   0xbd19
  42ee95:	push   ds
  42ee96:	ins    BYTE PTR es:[edi],dx
  42ee97:	pushf  
  42ee98:	sub    BYTE PTR [esi-0x7],0x94
  42ee9c:	jno    0x42ef04
  42ee9e:	arpl   WORD PTR [ecx+0x52],di
  42eea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eea2:	pop    eax
  42eea3:	jno    0x42ee2c
  42eea5:	dec    ebx
  42eea6:	nop
  42eea7:	hlt    
  42eea8:	pop    esp
  42eea9:	xchg   ecx,eax
  42eeaa:	shl    edi,1
  42eeac:	dec    esp
  42eead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eeae:	je     0x42eee6
  42eeb0:	sub    cl,BYTE PTR [ecx+0x22f4b880]
  42eeb6:	dec    ebp
  42eeb7:	out    0x36,al
  42eeb9:	cwde   
  42eeba:	and    al,0xe7
  42eebc:	cmp    al,0xb3
  42eebe:	add    eax,0x11c5
	...
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	bnd ret 
  42ef41:	iret   
  42ef42:	cmovl  ebx,DWORD PTR [edx-0xafffe11]
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    BYTE PTR [ecx+0x69],bh
  42ef4e:	sub    cl,dl
  42ef50:	and    ah,ch
  42ef52:	loop   0x42ef1e
  42ef54:	jg     0x42efad
  42ef56:	mov    bh,0xfd
  42ef58:	fiadd  WORD PTR [esi+0x54f8e750]
  42ef5e:	fst    DWORD PTR [edx+ebx*8-0x43]
  42ef62:	inc    ecx
  42ef63:	je     0x42ef0c
  42ef65:	mov    ah,0x44
  42ef67:	pop    ebp
  42ef68:	mov    edx,0xda806289
  42ef6d:	imul   edi,DWORD PTR ds:0xdff26e63,0xd24f063e
  42ef78:	or     DWORD PTR [edx+0x4e],esi
  42ef7b:	cdq    
  42ef7c:	out    dx,al
  42ef7d:	pop    edi
  42ef7e:	xchg   ecx,eax
  42ef7f:	mov    al,ds:0x4ba54f3
  42ef84:	call   0x2761b598
  42ef89:	add    eax,0x7bce6ae2
  42ef8e:	sub    BYTE PTR [eax],ch
  42ef90:	jmp    0x7417:0x1b5cbebf
  42ef97:	and    dh,BYTE PTR [ecx+0x48c0093c]
  42ef9d:	ja     0x42efed
  42ef9f:	call   0x9f6a:0x8c13fc9d
  42efa6:	into   
  42efa7:	ret    0xf1ce
  42efaa:	sub    dh,BYTE PTR [edx+0x6f]
  42efad:	xor    DWORD PTR [edx+ebp*2-0x174984c9],eax
  42efb4:	clc    
  42efb5:	mov    al,ds:0x96233b31
  42efba:	fs jle 0x42efdf
  42efbd:	or     al,0x44
  42efbf:	push   0x22
  42efc1:	inc    edx
  42efc2:	push   ecx
  42efc3:	aad    0xc3
  42efc5:	pushf  
  42efc6:	ret    
  42efc7:	mov    ds,WORD PTR [ecx+0x449f2060]
  42efcd:	pop    esi
  42efce:	in     al,dx
  42efcf:	les    edx,FWORD PTR [esi-0x67]
  42efd2:	mov    eax,0x4351e792
  42efd7:	(bad)  
  42efd8:	jnp    0x42efdb
  42efda:	inc    ecx
  42efdb:	cmp    al,al
  42efdd:	add    eax,0x36fa916d
  42efe2:	outs   dx,BYTE PTR ds:[esi]
  42efe3:	sbb    eax,DWORD PTR [ecx]
  42efe5:	cmc    
  42efe6:	mov    dl,0x69
  42efe8:	loope  0x42f03b
  42efea:	bound  eax,QWORD PTR [ebx+0x635289c0]
  42eff0:	push   esp
  42eff1:	je     0x42efec
  42eff3:	arpl   WORD PTR [edx],si
  42eff5:	and    esi,0xfffffff6
  42eff8:	xchg   edi,eax
  42eff9:	in     al,dx
  42effa:	mov    ecx,0x482c41b0
  42efff:	daa    
  42f000:	pushf  
  42f001:	(bad)  
  42f002:	cmp    eax,0xebeb4470
  42f007:	retf   0x3ee1
  42f00a:	jne    0x42f041
  42f00c:	push   edx
  42f00d:	add    ebp,DWORD PTR [edi+edx*1-0x73]
  42f011:	ins    DWORD PTR es:[edi],dx
  42f012:	mov    ah,0xb3
  42f014:	or     BYTE PTR [ebx-0x7dfd4e60],bh
  42f01a:	fs hlt 
  42f01c:	mov    edi,0xbaa70df8
  42f021:	mov    dh,0xa3
  42f023:	xchg   edx,eax
  42f024:	lea    esp,[ebx+edi*4+0x1c10b30b]
  42f02b:	fcom   DWORD PTR [ecx]
  42f02d:	scas   al,BYTE PTR es:[edi]
  42f02e:	adc    ebx,ebp
  42f030:	pop    ds
  42f031:	xor    edx,DWORD PTR [ebx-0x2e]
  42f034:	mov    eax,0x8bdcbdcb
  42f039:	xor    al,0xe
  42f03b:	lock xchg edx,eax
  42f03d:	imul   eax,DWORD PTR [edi-0x62],0x4b
	...
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	(bad)  
  42f0c0:	fisub  WORD PTR [edi-0xf70d070]
  42f0c6:	add    DWORD PTR [eax],eax
  42f0c8:	cmc    
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR [ebx],ah
  42f0cd:	adc    ebx,ecx
  42f0cf:	aas    
  42f0d0:	rcl    DWORD PTR [edi],0xb5
  42f0d3:	lock outs dx,DWORD PTR ds:[esi]
  42f0d5:	pushf  
  42f0d6:	add    al,0xb2
  42f0d8:	push   eax
  42f0d9:	add    DWORD PTR gs:[ecx+0x3ca0b9f7],0x77a8005e
  42f0e4:	cmc    
  42f0e5:	add    eax,0xf95031ee
  42f0ea:	std    
  42f0eb:	iret   
  42f0ec:	pop    edi
  42f0ed:	arpl   WORD PTR [edx],bx
  42f0ef:	pop    edi
  42f0f0:	xchg   edx,eax
  42f0f1:	imul   ebp,DWORD PTR [ecx-0x156721d0],0xfffffff0
  42f0f8:	mov    ds:0xdb4dc142,al
  42f0fd:	lahf   
  42f0fe:	ins    BYTE PTR es:[edi],dx
  42f0ff:	in     al,0x7b
  42f101:	rcl    BYTE PTR [edx],1
  42f103:	rcl    ah,cl
  42f105:	mov    bh,0xc6
  42f107:	add    bh,BYTE PTR [edx+ecx*8-0xd]
  42f10b:	ins    DWORD PTR es:[edi],dx
  42f10c:	les    esp,FWORD PTR [edi-0x6ecf006]
  42f112:	xor    esp,ebx
  42f114:	in     eax,0x9d
  42f116:	test   al,0x20
  42f118:	test   al,0xd0
  42f11a:	mov    edx,0xabe7a97f
  42f11f:	fld    TBYTE PTR [ecx]
  42f121:	cmp    edx,0x3c
  42f124:	jne    0x42f151
  42f126:	rol    bl,1
  42f128:	mov    ?,WORD PTR [edi]
  42f12a:	dec    esp
  42f12b:	jb     0x42f157
  42f12d:	imul   ebx,DWORD PTR [ecx+0x3a43d831],0x50c3ba7c
  42f137:	scas   eax,DWORD PTR es:[edi]
  42f138:	add    BYTE PTR [ebx],dl
  42f13a:	lods   al,BYTE PTR ds:[esi]
  42f13b:	mov    esp,0xd6ef1e25
  42f140:	mov    ch,0xbc
  42f142:	retf   
  42f143:	pop    eax
  42f144:	xor    DWORD PTR [edx+0x3d],edx
  42f147:	adc    eax,0xdfac6636
  42f14c:	(bad)  
  42f14d:	mov    sp,0xb1ee
  42f151:	shl    BYTE PTR [ebp+0x48],1
  42f154:	dec    edx
  42f155:	popf   
  42f156:	dec    edi
  42f157:	pop    ebx
  42f158:	inc    esp
  42f159:	arpl   WORD PTR [edi+0x20962c23],di
  42f15f:	lahf   
  42f160:	and    BYTE PTR [eax],bh
  42f162:	shl    ch,0xc
  42f165:	into   
  42f166:	cmp    dh,BYTE PTR [esi]
  42f168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f169:	mov    edx,0x708c50b5
  42f16e:	inc    ebx
  42f170:	movzx  esi,WORD PTR [edx]
  42f173:	out    dx,al
  42f174:	inc    ebx
  42f175:	loope  0x42f16a
  42f177:	hlt    
  42f178:	fisttp WORD PTR [ebx+0x30]
  42f17b:	cmp    bl,al
  42f17d:	mov    ebp,0x98d93bf6
  42f182:	retf   0xe522
  42f185:	test   eax,0x1f200544
  42f18a:	and    BYTE PTR [edi-0x7],dl
  42f18d:	sbb    ebx,esp
  42f18f:	xor    BYTE PTR [edi],ah
  42f191:	shr    dl,cl
  42f193:	fistp  QWORD PTR ds:0x84eb701a
  42f199:	popa   
  42f19a:	ret    0x1583
  42f19d:	int    0xb9
  42f19f:	sub    BYTE PTR [edx+0x1a],bh
  42f1a2:	sub    dh,BYTE PTR [ebp+0x5b]
  42f1a5:	arpl   WORD PTR [eax+eax*2+0x6e1b163f],sp
  42f1ac:	xor    eax,0xe63b58f4
  42f1b1:	in     al,dx
  42f1b2:	mov    cl,0x80
  42f1b4:	push   0x5a
  42f1b6:	jecxz  0x42f15d
  42f1b8:	or     al,0xfd
  42f1ba:	not    DWORD PTR [ebx+eiz*2+0x321d7fe6]
	...
  42f231:	add    BYTE PTR [eax],al
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	push   cs
  42f241:	clc    
  42f242:	(bad)  
  42f243:	ja     0x42f1c9
  42f245:	icebp  
  42f246:	add    DWORD PTR [eax],eax
  42f248:	cmc    
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [eax+ecx*8],bl
  42f24e:	mov    eax,ds:0x4750a6a6
  42f253:	pop    edx
  42f254:	push   0x766dd2e9
  42f259:	mov    ds:0xb94743de,al
  42f25e:	clc    
  42f25f:	cmp    DWORD PTR [esi+esi*2+0x17],esp
  42f263:	aaa    
  42f264:	fwait
  42f265:	xor    edx,DWORD PTR [esi]
  42f267:	jp     0x42f27b
  42f269:	rcl    BYTE PTR [eax-0x7c393368],0xf5
  42f270:	sbb    edi,DWORD PTR [ecx]
  42f272:	jne    0x42f220
  42f274:	push   esp
  42f275:	ds call 0x315:0x60aac517
  42f27d:	pop    edi
  42f27e:	mov    ds:0x9abeee89,eax
  42f283:	call   0xebac:0xfaa84b2b
  42f28a:	add    DWORD PTR [edx+0xaf31b7d],ebx
  42f290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f291:	jb     0x42f251
  42f293:	test   al,0x5b
  42f295:	jge    0x42f2dc
  42f297:	sbb    BYTE PTR [ebx],cl
  42f299:	mov    ds:0x54102cfb,eax
  42f29e:	adc    al,0x21
  42f2a0:	or     eax,0xaf595e24
  42f2a5:	loopne 0x42f2a8
  42f2a7:	lock push ecx
  42f2a9:	test   al,0x3b
  42f2ab:	push   cs
  42f2ac:	and    eax,0xa66e71c5
  42f2b1:	lods   eax,DWORD PTR ds:[esi]
  42f2b2:	add    esi,DWORD PTR [eax-0x22d351dd]
  42f2b8:	neg    BYTE PTR [ecx+0x22]
  42f2bb:	push   ebx
  42f2bc:	shl    DWORD PTR [esi+0x1f],0x10
  42f2c0:	push   ss
  42f2c1:	rcl    al,0x40
  42f2c4:	and    al,0xb2
  42f2c6:	xor    al,0xa5
  42f2c8:	add    eax,0x7940a073
  42f2cd:	add    BYTE PTR ds:0x406f574d,0x49
  42f2d4:	or     eax,0xb8520e78
  42f2d9:	repz aad 0x66
  42f2dc:	out    0xc7,al
  42f2de:	mov    eax,ds:0xbfbfb59b
  42f2e3:	mov    al,0x57
  42f2e5:	cmp    al,0x73
  42f2e7:	fstp   TBYTE PTR [ebp+0x2a]
  42f2ea:	nop
  42f2eb:	or     ebp,0x28
  42f2ee:	push   es
  42f2ef:	scas   eax,DWORD PTR es:[edi]
  42f2f0:	daa    
  42f2f1:	xor    eax,DWORD PTR [ebx-0x34]
  42f2f4:	loopne 0x42f334
  42f2f6:	ins    BYTE PTR es:[edi],dx
  42f2f7:	scas   al,BYTE PTR es:[edi]
  42f2f8:	aam    0xfe
  42f2fa:	adc    DWORD PTR [ebx-0x307edf39],0x61
  42f301:	idiv   al
  42f303:	push   esp
  42f304:	data16 mov bl,ah
  42f307:	push   es
  42f308:	cmp    al,0x9d
  42f30a:	dec    esp
  42f30b:	mov    BYTE PTR [eax],dh
  42f30d:	pop    edi
  42f30e:	add    BYTE PTR [edi+eax*4-0x5e],ah
  42f312:	xchg   ebp,eax
  42f313:	adc    al,BYTE PTR [ebx]
  42f315:	out    dx,eax
  42f316:	iret   
  42f317:	mov    edx,0x8dea41e7
  42f31c:	xchg   esp,eax
  42f31e:	xor    DWORD PTR es:[eax+0x64],ebx
  42f322:	(bad)  
  42f323:	ficom  DWORD PTR [edi-0x100439f9]
  42f329:	int    0xfc
  42f32b:	ret    0xbb68
  42f32e:	adc    eax,0xc8ac49e6
  42f333:	sbb    edi,ebx
  42f335:	xlat   BYTE PTR ds:[ebx]
  42f336:	dec    eax
  42f337:	std    
  42f338:	shl    edx,0x2b
  42f33b:	adc    al,0x1d
  42f33d:	imul   esi,DWORD PTR [edi],0xd305
	...
  42f3b3:	add    dl,ah
  42f3b5:	mov    ebp,0xe7dfc7dc
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	xchg   ebp,eax
  42f3c1:	fistp  QWORD PTR [ebp+0x1f279d4]
  42f3c7:	add    ch,dh
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [eax],bh
  42f3cd:	inc    eax
  42f3ce:	jnp    0x42f41a
  42f3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3d1:	xchg   ebx,eax
  42f3d2:	sbb    cl,BYTE PTR [eax+ebx*8+0x28af4dc0]
  42f3d9:	add    dh,BYTE PTR [esp+esi*4-0x27]
  42f3dd:	clc    
  42f3de:	jg     0x42f3a5
  42f3e0:	push   ecx
  42f3e1:	add    dl,BYTE PTR ds:0x45980e85
  42f3e7:	loopne 0x42f40e
  42f3e9:	shl    BYTE PTR [edi+0x18],0xa
  42f3ed:	sbb    ebx,DWORD PTR [esi-0x2238c90b]
  42f3f3:	push   ds
  42f3f4:	fsub   QWORD PTR [ecx+0x3c]
  42f3f7:	test   eax,0x626ef1d0
  42f3fd:	stos   BYTE PTR es:[edi],al
  42f3fe:	add    al,BYTE PTR [eax-0x7a0cfa80]
  42f404:	repnz mov edx,0xa6337162
  42f40a:	add    DWORD PTR [ecx-0x7f],eax
  42f40d:	mov    gs,WORD PTR ds:0x3dca1ab
  42f413:	cmc    
  42f414:	and    eax,0xc3e5563e
  42f419:	mov    ch,0x5a
  42f41b:	push   ecx
  42f41c:	(bad)  
  42f41d:	in     al,0x78
  42f41f:	jg     0x42f3b8
  42f421:	test   al,0x58
  42f423:	les    ebx,FWORD PTR [edi-0x18]
  42f426:	(bad)  
  42f428:	test   al,0xc8
  42f42a:	adc    al,0x4c
  42f42c:	xchg   ebx,eax
  42f42d:	adc    eax,0x52af552a
  42f432:	test   BYTE PTR [ebx+0x239c5974],ah
  42f438:	push   ss
  42f439:	mov    esp,0x7d35d481
  42f43e:	mov    ds:0x9889b4f5,al
  42f443:	ins    BYTE PTR es:[edi],dx
  42f444:	pop    ds
  42f445:	mov    esp,0xa510a4bb
  42f44a:	xchg   esi,eax
  42f44b:	xchg   edi,eax
  42f44c:	add    DWORD PTR [ebp+0x17],esp
  42f44f:	pop    ecx
  42f450:	fld    TBYTE PTR [edx+0x54]
  42f453:	ins    BYTE PTR es:[edi],dx
  42f454:	data16 (bad) 
  42f456:	ins    DWORD PTR es:[edi],dx
  42f457:	ret    
  42f458:	jae    0x42f4c9
  42f45a:	ja     0x42f44c
  42f45c:	push   edx
  42f45d:	xor    eax,0xbf5e7fbb
  42f462:	in     al,dx
  42f463:	into   
  42f464:	data16 popfw 
  42f467:	jge    0x42f45d
  42f469:	out    dx,eax
  42f46a:	mov    edi,DWORD PTR [ecx+0xe]
  42f46d:	popa   
  42f46e:	shl    BYTE PTR [eax+0x3b],cl
  42f471:	rcr    DWORD PTR [ecx+0x48db8808],1
  42f477:	and    BYTE PTR [edx-0x4d],dl
  42f47a:	iret   
  42f47b:	rcl    ebp,cl
  42f47d:	push   ds
  42f47e:	ja     0x42f4e3
  42f480:	mov    ah,0xc0
  42f482:	imul   ebx,DWORD PTR [ebx-0x1],0xffffffee
  42f486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f487:	xchg   edx,eax
  42f488:	or     al,0xf5
  42f48a:	shufps xmm2,XMMWORD PTR [ecx+ecx*4+0x6d67f52d],0xb7
  42f493:	sub    eax,0x649b1d2d
  42f498:	jl     0x42f46a
  42f49a:	push   0xffffffe9
  42f49c:	aam    0xeb
  42f49e:	xor    ecx,DWORD PTR [ecx]
  42f4a0:	mov    bh,0xb
  42f4a2:	mov    ah,0x6c
  42f4a4:	pop    ebx
  42f4a5:	stos   BYTE PTR es:[edi],al
  42f4a6:	mul    BYTE PTR [eax+0x5c]
  42f4a9:	std    
  42f4aa:	inc    ecx
  42f4ab:	cmp    BYTE PTR [ebp+ecx*1+0x12e16c21],ch
  42f4b2:	cwde   
  42f4b3:	rcr    DWORD PTR [ebx],cl
  42f4b5:	sub    al,0xbf
  42f4b7:	rcl    BYTE PTR [esi-0x30079124],cl
  42f4bd:	pop    ds
  42f4be:	mov    eax,0x2513
	...
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi+0x28],bh
  42f541:	mov    ecx,0xf36ea25b
  42f546:	add    DWORD PTR [eax],eax
  42f548:	cmc    
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    BYTE PTR [esi+ebp*1-0x660da2c6],al
  42f552:	push   es
  42f553:	push   0x2b
  42f555:	popf   
  42f556:	test   eax,0x3d685908
  42f55b:	or     eax,0xb1a706ae
  42f560:	stos   DWORD PTR es:[edi],eax
  42f561:	lahf   
  42f562:	sbb    al,dh
  42f564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f566:	sub    DWORD PTR [edx],esi
  42f568:	adc    BYTE PTR ds:0xf06b985c,0xa5
  42f56f:	test   eax,0x508e05dd
  42f574:	imul   eax,DWORD PTR [ebp-0x53],0x2e15671a
  42f57b:	mov    al,ds:0x6eb852ff
  42f580:	mov    bh,0xfc
  42f582:	jl     0x42f53c
  42f584:	xor    al,BYTE PTR [eax+ebp*2]
  42f587:	lods   al,BYTE PTR ds:[esi]
  42f588:	jecxz  0x42f59c
  42f58a:	mov    bh,0x28
  42f58c:	jno    0x42f566
  42f58e:	mov    ebp,0xddc61b26
  42f593:	popa   
  42f594:	or     BYTE PTR [ebp+eax*2-0x7f],ah
  42f598:	mov    dl,0x21
  42f59a:	ds xchg ebp,eax
  42f59c:	dec    DWORD PTR [ebx+edx*8-0x45f9a2c1]
  42f5a3:	pop    ds
  42f5a4:	jno    0x42f620
  42f5a6:	inc    eax
  42f5a7:	and    BYTE PTR [ecx],bl
  42f5a9:	cli    
  42f5aa:	mov    ds:0xe847d1d7,al
  42f5af:	sub    eax,0x687e2fd2
  42f5b4:	pop    ecx
  42f5b5:	push   0xffffffb5
  42f5b7:	cmp    BYTE PTR [edi+0x3d],cl
  42f5ba:	out    dx,al
  42f5bb:	pop    esi
  42f5bc:	adc    BYTE PTR [ebp-0x644a88af],dh
  42f5c2:	mov    al,0x78
  42f5c4:	or     DWORD PTR [ecx],eax
  42f5c6:	retf   
  42f5c7:	sub    eax,0xe686978f
  42f5cc:	jmp    0xda86:0xcdee64f8
  42f5d3:	adc    BYTE PTR [ebx],bh
  42f5d5:	and    eax,0xa97617a1
  42f5da:	outs   dx,DWORD PTR ds:[esi]
  42f5db:	xor    eax,0xff2007c9
  42f5e0:	(bad)  
  42f5e1:	xor    bh,dl
  42f5e3:	stos   DWORD PTR es:[edi],eax
  42f5e4:	enter  0xad75,0x58
  42f5e8:	mov    ah,0xf1
  42f5ea:	in     al,dx
  42f5eb:	call   0x69c08b5f
  42f5f0:	add    ah,bl
  42f5f2:	push   eax
  42f5f3:	out    0xa8,eax
  42f5f5:	fisub  DWORD PTR ds:0x58954d0f
  42f5fb:	mov    bl,0xe9
  42f5fd:	ret    
  42f5fe:	ror    BYTE PTR [ecx+0x517878a6],0xec
  42f605:	push   0x1f
  42f607:	pop    esp
  42f608:	or     DWORD PTR [edx],ebp
  42f60a:	mov    eax,ds:0x29456d57
  42f60f:	sbb    ebp,ebx
  42f611:	sbb    al,0xfa
  42f613:	test   eax,0xfbf8e55d
  42f619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f61a:	hlt    
  42f61b:	mov    al,0x59
  42f61d:	repnz in al,dx
  42f61f:	sbb    al,0x65
  42f621:	xchg   BYTE PTR [ebx+0x7ddf542e],al
  42f627:	fidiv  WORD PTR [esi-0xb]
  42f62a:	and    al,0x0
  42f62c:	inc    ebx
  42f62d:	adc    BYTE PTR [ebx],ch
  42f62f:	and    BYTE PTR [ebx+edi*4-0x67c27d6b],al
  42f636:	push   0xffffffa2
  42f638:	lahf   
  42f639:	ins    DWORD PTR es:[edi],dx
  42f63a:	retf   
  42f63b:	dec    ebp
  42f63c:	ror    edx,cl
  42f63e:	sbb    eax,esp
  42f640:	pop    edi
	...
  42f6b1:	add    BYTE PTR [eax],al
  42f6b3:	add    BYTE PTR [edx+0x39],bl
  42f6b6:	dec    esi
  42f6b7:	sub    eax,0x7f7b7f6f
  42f6bc:	or     DWORD PTR [edi-0x453fcd1d],esi
  42f6c2:	and    BYTE PTR [eax+0x1f463],dh
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [ecx+0x3e9b54c3],ch
  42f6d1:	and    DWORD PTR [eax+0x5dac5815],esp
  42f6d7:	(bad)  
  42f6d8:	adc    eax,DWORD PTR [ebx+ebx*4-0x242b5242]
  42f6df:	out    dx,eax
  42f6e0:	mov    eax,ds:0x34fe7cda
  42f6e5:	pop    es
  42f6e6:	mov    al,0x49
  42f6e8:	inc    ebx
  42f6e9:	mov    ebp,0x31a47c7a
  42f6ee:	je     0x42f742
  42f6f0:	sbb    eax,0xb1933a8b
  42f6f5:	dec    esp
  42f6f6:	add    cl,BYTE PTR [edx+0x2b]
  42f6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6fa:	add    eax,0xf8ce8eb5
  42f6ff:	data16 jno 0x42f715
  42f702:	loop   0x42f6d1
  42f704:	xchg   esp,eax
  42f705:	sub    bh,ch
  42f707:	xchg   esp,eax
  42f708:	shl    ebx,1
  42f70a:	shl    esi,1
  42f70c:	pop    ecx
  42f70d:	aas    
  42f70e:	rol    eax,1
  42f710:	data16 fidiv WORD PTR [eax+0x7de1d7f0]
  42f717:	push   esi
  42f718:	sbb    al,0xf0
  42f71b:	push   eax
  42f71c:	dec    esp
  42f71d:	pushf  
  42f71e:	add    al,0x9d
  42f720:	int3   
  42f721:	xor    al,0x31
  42f723:	into   
  42f724:	cmp    al,0xca
  42f726:	aam    0xca
  42f728:	mov    bh,0xf7
  42f72a:	mov    dh,0xd8
  42f72c:	cs cmp dl,bh
  42f72f:	mov    dh,0x22
  42f731:	add    al,0xd9
  42f733:	imul   BYTE PTR [ebx+0x139e7fc3]
  42f739:	inc    esp
  42f73a:	stos   DWORD PTR es:[edi],eax
  42f73b:	data16 jbe 0x42f766
  42f73e:	not    al
  42f740:	pop    ebp
  42f741:	push   ds
  42f742:	dec    esp
  42f743:	sbb    DWORD PTR [eax+0x4e67a240],0xffffffb6
  42f74a:	ret    
  42f74b:	mov    ds:0xe3bc18ff,al
  42f750:	mov    ecx,0x9ecf3172
  42f755:	xor    cl,ch
  42f757:	cwde   
  42f758:	mov    esp,0x3099f7b0
  42f75d:	and    eax,esi
  42f75f:	jle    0x42f6fc
  42f761:	hlt    
  42f762:	xchg   esi,eax
  42f763:	mov    al,0xe2
  42f765:	test   DWORD PTR [ecx-0x787092ee],esi
  42f76b:	sub    eax,0x91a60a70
  42f770:	or     DWORD PTR [ecx],ebp
  42f772:	and    eax,0x6e0af1d3
  42f777:	mov    fs,WORD PTR [eax-0x426185cb]
  42f77d:	cmc    
  42f77e:	xor    DWORD PTR [edx-0x47],eax
  42f781:	mov    al,ds:0xacf61161
  42f786:	cdq    
  42f787:	dec    esi
  42f788:	cmp    bl,BYTE PTR [ebx]
  42f78a:	mov    ebx,0x8847ffaf
  42f78f:	sbb    eax,0x538abce6
  42f794:	jmp    0xf7b125cd
  42f799:	dec    edx
  42f79a:	mov    cl,0xda
  42f79c:	xlat   BYTE PTR ds:[ebx]
  42f79d:	mov    cl,0x58
  42f79f:	mov    cl,0x5e
  42f7a1:	into   
  42f7a2:	ja     0x42f7f8
  42f7a4:	loope  0x42f824
  42f7a6:	xchg   edx,eax
  42f7a7:	call   0x7a5d:0x74410550
  42f7ae:	out    0x16,al
  42f7b0:	int3   
  42f7b1:	mov    ds:0xd18408b2,al
  42f7b6:	inc    ecx
  42f7b7:	(bad)  [esi-0x5e]
  42f7ba:	jnp    0x42f7e3
  42f7bc:	xor    DWORD PTR [ecx],esp
  42f7be:	dec    ebx
  42f7bf:	push   esp
  42f7c0:	out    0x0,al
	...
  42f832:	add    BYTE PTR [eax],al
  42f834:	ret    
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x6faf3771]
  42f841:	xchg   edx,eax
  42f842:	dec    eax
  42f843:	pop    ax
  42f845:	cmc    
  42f846:	add    DWORD PTR [eax],eax
  42f848:	cmc    
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [ebp-0x16],dl
  42f84e:	iret   
  42f84f:	mov    ch,0x55
  42f851:	stc    
  42f852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f853:	push   eax
  42f854:	lock or BYTE PTR [edx+ebx*8+0x29],0x51
  42f85a:	scas   eax,DWORD PTR es:[edi]
  42f85b:	dec    edi
  42f85c:	adc    eax,0x92a83dc
  42f861:	jmp    0x42f860
  42f863:	call   0x2a433ebf
  42f868:	jne    0x42f8d2
  42f86a:	jo     0x42f850
  42f86c:	test   bh,bh
  42f86e:	lods   eax,DWORD PTR ds:[esi]
  42f86f:	ja     0x42f7fc
  42f871:	(bad)  
  42f872:	push   edx
  42f873:	mov    ch,BYTE PTR [esi+0x6]
  42f876:	jle    0x42f814
  42f878:	mov    edi,0xce89599e
  42f87d:	sbb    DWORD PTR ds:0x46b4f02a,edi
  42f883:	es popf 
  42f885:	mov    ebx,0x47358437
  42f88a:	fs inc esi
  42f88c:	push   ds
  42f88d:	inc    ebx
  42f88e:	and    eax,0xa46d3a58
  42f893:	cwde   
  42f894:	mov    ecx,0x6321ecea
  42f899:	(bad)  
  42f89a:	fild   WORD PTR [edx+0x1859c000]
  42f8a0:	adc    BYTE PTR [esi-0x66],cl
  42f8a3:	clc    
  42f8a4:	int    0x13
  42f8a6:	and    al,0xa3
  42f8a8:	xchg   esp,eax
  42f8a9:	gs xchg edi,eax
  42f8ab:	mov    bl,0x36
  42f8ad:	jecxz  0x42f896
  42f8af:	out    dx,eax
  42f8b0:	rcr    DWORD PTR [esi-0x3f],cl
  42f8b3:	idiv   DWORD PTR [eax]
  42f8b5:	(bad)  
  42f8b6:	mov    dl,BYTE PTR [edx-0xe611db9]
  42f8bc:	pop    esp
  42f8bd:	cmp    al,0x6f
  42f8bf:	or     al,0xc6
  42f8c1:	push   eax
  42f8c2:	out    0xcf,eax
  42f8c4:	fnstenv [esi+0x77118e4e]
  42f8ca:	adc    eax,0x5ff6a654
  42f8cf:	jne    0x42f91b
  42f8d1:	push   ss
  42f8d2:	push   ebx
  42f8d3:	push   ss
  42f8d4:	cli    
  42f8d5:	jmp    0xd73:0x42427bf0
  42f8dc:	mov    al,ds:0x4282d033
  42f8e1:	inc    edx
  42f8e2:	arpl   WORD PTR [ecx+0x64091d25],di
  42f8e8:	or     DWORD PTR [edi-0x60],esp
  42f8eb:	cmp    BYTE PTR [eax],al
  42f8ed:	push   0x7b
  42f8ef:	fs cmp bl,bl
  42f8f2:	xchg   BYTE PTR [ecx+0x396b2a6e],bh
  42f8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f8f9:	fcom   QWORD PTR [esi-0xe]
  42f8fc:	mov    DWORD PTR [ecx],ebx
  42f8fe:	and    DWORD PTR [esi],esp
  42f900:	mov    esi,0xb8f3bfca
  42f905:	cmp    edi,DWORD PTR [ecx+0xb0ff1a3]
  42f90b:	int    0xdb
  42f90d:	fild   WORD PTR [edx+0x88cd790]
  42f913:	lods   al,BYTE PTR ds:[esi]
  42f914:	jl     0x42f906
  42f916:	in     eax,dx
  42f917:	and    esi,DWORD PTR [eax]
  42f919:	mov    eax,ds:0xbb129bbb
  42f91e:	push   0x3d
  42f920:	cmp    BYTE PTR [edx-0x6c83ab98],ch
  42f926:	adc    esi,edi
  42f928:	and    DWORD PTR [eax-0x50],0xa6b7e7b3
  42f92f:	and    DWORD PTR [edx-0x4e],0x229ed50a
  42f936:	lahf   
  42f937:	in     al,dx
  42f938:	mov    al,0x40
  42f93a:	cmp    al,BYTE PTR [ecx-0x3ddd2ac2]
  42f940:	add    BYTE PTR ss:[eax],al
	...
  42f9b3:	add    ch,ah
  42f9b5:	mov    edx,0xebdfe392
  42f9ba:	cmc    
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	in     al,0x5f
  42f9c2:	or     BYTE PTR [ebx+0x4d],ah
  42f9c5:	test   BYTE PTR [ecx],0x0
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    bl,dh
  42f9cd:	imul   eax,DWORD PTR [esi+0x2738f994],0x781f360e
  42f9d7:	and    eax,0xfcb81346
  42f9dc:	cld    
  42f9dd:	call   0x96146ca9
  42f9e2:	les    ebp,FWORD PTR [edi+0x5d210012]
  42f9e8:	push   ebx
  42f9e9:	jmp    0x42fa3b
  42f9eb:	xchg   ebx,eax
  42f9ec:	push   esp
  42f9ed:	mov    edi,0x3f188ab9
  42f9f2:	push   es
  42f9f3:	adc    bh,0xf6
  42f9f6:	push   esi
  42f9f7:	mov    bh,0x31
  42f9f9:	lahf   
  42f9fa:	pusha  
  42f9fb:	mov    ds:0xa6d69419,al
  42fa00:	lea    ecx,[eax+0x7d]
  42fa03:	cmc    
  42fa04:	jbe    0x42f9b1
  42fa06:	sub    bl,BYTE PTR [ebx+0x79]
  42fa09:	inc    edi
  42fa0a:	(bad)  
  42fa0b:	clc    
  42fa0c:	test   edx,0xc5c2ba5b
  42fa12:	xor    DWORD PTR [ecx-0x62514dd3],ebx
  42fa18:	retf   
  42fa19:	jmp    0x42fa16
  42fa1b:	xor    BYTE PTR [edi+0x6bd5b255],dh
  42fa21:	jns    0x42f9ec
  42fa23:	jae    0x42f9e4
  42fa25:	fldcw  WORD PTR [edx+eiz*1+0x5e401684]
  42fa2c:	mov    edi,0xb920959d
  42fa31:	dec    ebx
  42fa32:	leave  
  42fa33:	sub    al,0xf
  42fa35:	xchg   edx,eax
  42fa36:	mov    ebp,0x8d5c9362
  42fa3b:	pop    edx
  42fa3c:	mov    esp,0x9da031e
  42fa41:	loope  0x42f9c7
  42fa43:	sar    BYTE PTR [ecx+0x5e88c480],cl
  42fa49:	addr16 adc al,0x57
  42fa4c:	bound  ebx,QWORD PTR [ecx+0x62970184]
  42fa52:	and    DWORD PTR [esi+0x5aaa5285],eax
  42fa58:	les    edx,FWORD PTR ds:0x39ce57c1
  42fa5e:	xchg   ecx,eax
  42fa5f:	sub    eax,0x5da1b399
  42fa64:	int    0x4e
  42fa66:	push   ebx
  42fa67:	xchg   BYTE PTR [eax],bl
  42fa69:	gs inc eax
  42fa6b:	dec    esi
  42fa6c:	sbb    edx,esi
  42fa6e:	mov    cl,0x35
  42fa70:	cwde   
  42fa71:	inc    esp
  42fa72:	mov    WORD PTR [ecx+0x41],?
  42fa75:	fbld   TBYTE PTR [ebx+0x16]
  42fa78:	in     al,0xfc
  42fa7a:	stos   DWORD PTR es:[edi],eax
  42fa7b:	int    0x70
  42fa7d:	daa    
  42fa7e:	cmp    ecx,esi
  42fa80:	int    0x6c
  42fa82:	mov    esi,0x483aff18
  42fa87:	ins    BYTE PTR es:[edi],dx
  42fa88:	ret    
  42fa89:	pop    ds
  42fa8a:	jo     0x42fa62
  42fa8c:	adc    BYTE PTR [ecx],cl
  42fa8e:	mov    esp,0xeb666271
  42fa93:	add    eax,0x76e6caa3
  42fa98:	daa    
  42fa99:	test   eax,ebp
  42fa9b:	ds push 0x8e997f90
  42faa1:	dec    edx
  42faa2:	outs   dx,BYTE PTR ds:[esi]
  42faa3:	adc    DWORD PTR [edx+0x13],edi
  42faa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42faa7:	lock push esp
  42faa9:	shl    DWORD PTR [eax],0x91
  42faac:	or     esi,DWORD PTR [edx+0x6380cc73]
  42fab2:	pop    esi
  42fab3:	pop    di
  42fab5:	leave  
  42fab6:	xchg   DWORD PTR [eax],eax
  42fab8:	in     al,dx
  42fab9:	push   ds
  42faba:	imul   BYTE PTR [esi+0x22]
  42fabd:	imul   ebp,DWORD PTR [esi+0x78],0xffffffba
	...
  42fb31:	add    BYTE PTR [eax],al
  42fb33:	add    BYTE PTR [esi+0x41],bh
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	js     0x42fb17
  42fb42:	sub    DWORD PTR [edx+eax*2-0xafffe09],0x0
  42fb4a:	add    BYTE PTR [eax],al
  42fb4c:	xor    al,0x8e
  42fb4e:	push   cs
  42fb4f:	cmp    BYTE PTR [ecx-0x2873e792],ch
  42fb55:	into   
  42fb56:	out    0x3b,al
  42fb58:	nop
  42fb59:	pusha  
  42fb5a:	and    al,0xe5
  42fb5c:	fldenv [ecx-0x1a77764b]
  42fb62:	push   es
  42fb63:	popf   
  42fb64:	sar    eax,cl
  42fb66:	or     al,0x65
  42fb68:	push   eax
  42fb69:	repnz jecxz 0x42fba0
  42fb6c:	lods   eax,DWORD PTR ds:[esi]
  42fb6d:	push   ebp
  42fb6e:	and    eax,0xf7ef2ce9
  42fb73:	push   edi
  42fb74:	out    dx,al
  42fb75:	(bad)  
  42fb76:	loope  0x42fbf4
  42fb78:	(bad)  
  42fb7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb7b:	out    dx,eax
  42fb7c:	dec    edi
  42fb7d:	inc    edi
  42fb7e:	jmp    0x42fb06
  42fb80:	aaa    
  42fb81:	and    al,0x26
  42fb83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb84:	lods   al,BYTE PTR ds:[esi]
  42fb85:	sub    DWORD PTR [ebx+0x25],ebx
  42fb88:	dec    eax
  42fb89:	mov    ebx,0xdf82aa30
  42fb8e:	cli    
  42fb8f:	cmp    esp,DWORD PTR [edx-0x8]
  42fb92:	test   BYTE PTR [esi-0x5b],0xdf
  42fb96:	push   esp
  42fb97:	push   0x44
  42fb99:	test   al,0x5a
  42fb9b:	leave  
  42fb9c:	in     eax,0xad
  42fb9e:	lods   al,BYTE PTR ds:[esi]
  42fb9f:	shl    DWORD PTR [ebp-0x1acb8bb9],0x40
  42fba6:	sbb    eax,DWORD PTR [eax-0x37]
  42fba9:	mov    edx,0x3aba2bff
  42fbae:	xor    al,0xff
  42fbb0:	test   eax,0xd551f21d
  42fbb5:	adc    al,0xb7
  42fbb7:	pop    esp
  42fbb8:	test   DWORD PTR [ebx+0x3f0c87c1],eax
  42fbbe:	jge    0x42fb9f
  42fbc0:	out    dx,eax
  42fbc1:	inc    esi
  42fbc2:	mov    al,ds:0xfcf9c8e3
  42fbc7:	shr    DWORD PTR [eax+0x20],1
  42fbca:	add    eax,0x4fcb2cc2
  42fbcf:	lds    ax,DWORD PTR [ebx+0x455afc16]
  42fbd6:	ss pushf 
  42fbd8:	xor    dh,bh
  42fbda:	arpl   WORD PTR [ebx],ax
  42fbdc:	jnp    0x42fb6c
  42fbde:	dec    edi
  42fbdf:	push   ds
  42fbe0:	sub    al,0x45
  42fbe2:	dec    ebp
  42fbe3:	inc    ebx
  42fbe4:	cli    
  42fbe5:	sub    dh,bh
  42fbe7:	int    0xa1
  42fbe9:	jp     0x42fc1f
  42fbeb:	or     dl,BYTE PTR [eax+esi*2]
  42fbee:	mov    ebx,0xf4e8dc61
  42fbf3:	push   esi
  42fbf4:	xchg   ecx,eax
  42fbf5:	pop    edx
  42fbf6:	pop    ecx
  42fbf7:	outs   dx,BYTE PTR ds:[esi]
  42fbf8:	pop    eax
  42fbf9:	hlt    
  42fbfa:	es push es
  42fbfc:	loopne 0x42fc2b
  42fbfe:	xchg   BYTE PTR [edi+0x5c],dh
  42fc01:	and    dl,dl
  42fc03:	mov    BYTE PTR [edx+0x76667286],al
  42fc09:	jp     0x42fbe7
  42fc0b:	mov    ds:0x943df454,al
  42fc10:	adc    BYTE PTR [edx],ah
  42fc12:	push   esp
  42fc13:	sbb    DWORD PTR [esi+0x44ce81c4],0xad012a5d
  42fc1d:	add    DWORD PTR [ebp+eiz*4-0x2c69998a],ecx
  42fc24:	push   cs
  42fc25:	jl     0x42fbe0
  42fc27:	call   0x5110:0x408ec345
  42fc2e:	mov    esi,DWORD PTR [edi-0x649631d6]
  42fc34:	cmp    BYTE PTR [esi-0x63],al
  42fc37:	sbb    eax,0x8e63ebb3
  42fc3c:	xchg   ecx,eax
  42fc3d:	adc    DWORD PTR [edx],0x4f75
	...
  42fcb3:	add    BYTE PTR [edx],ch
  42fcb5:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42fcbb:	test   BYTE PTR [ecx-0x7946a3c4],0x73
  42fcc2:	push   0x55
  42fcc4:	aaa    
  42fcc5:	clc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    BYTE PTR [edx],bh
  42fccd:	retf   
  42fcce:	mov    edx,0xc0e88db4
  42fcd3:	mov    bh,0x4
  42fcd5:	sub    eax,0xda8d8dbe
  42fcda:	mov    BYTE PTR [eax+0x46d08b94],al
  42fce0:	cs stc 
  42fce2:	mov    cl,0xe2
  42fce4:	(bad)  
  42fce5:	jge    0x42fcda
  42fce7:	pop    DWORD PTR [esi]
  42fce9:	clc    
  42fcea:	gs (bad) 
  42fcec:	mov    DWORD PTR [edi-0x63],esp
  42fcef:	xchg   esp,eax
  42fcf0:	(bad)  [edi]
  42fcf2:	mov    ebx,0x333b1a67
  42fcf7:	mov    bh,BYTE PTR [ebx+0x5b]
  42fcfa:	pop    es
  42fcfb:	cmp    cl,BYTE PTR [eax+0x7f9a0e84]
  42fd01:	lods   al,BYTE PTR ds:[esi]
  42fd02:	inc    edx
  42fd03:	sbb    eax,0x4855b93b
  42fd08:	sbb    edx,DWORD PTR [edi-0x70d5948f]
  42fd0e:	add    ah,ch
  42fd10:	sub    esi,ebx
  42fd12:	leave  
  42fd13:	mov    DWORD PTR [eax-0x48],esp
  42fd16:	dec    ecx
  42fd17:	aam    0x11
  42fd19:	jmp    0xf7665cef
  42fd1e:	imul   ecx,DWORD PTR [ecx-0xcef52f3],0x74
  42fd25:	movsx  ebx,BYTE PTR [ebx+0xc704138]
  42fd2c:	add    ch,BYTE PTR [ebp+0x46a9feb1]
  42fd32:	adc    eax,0x4647239a
  42fd37:	xchg   edi,eax
  42fd38:	lahf   
  42fd39:	and    esp,DWORD PTR [ebp+0x4c]
  42fd3c:	icebp  
  42fd3d:	call   0xd36a:0xc359996c
  42fd44:	icebp  
  42fd45:	jle    0x42fcd4
  42fd47:	mov    esi,0x713c147c
  42fd4c:	jbe    0x42fd37
  42fd4e:	mov    WORD PTR [edx],fs
  42fd50:	scas   eax,DWORD PTR es:[edi]
  42fd51:	xchg   BYTE PTR [ebx],bl
  42fd53:	xchg   DWORD PTR [edi+0x534dbd1],esi
  42fd59:	pop    DWORD PTR [eax+0x72cc421e]
  42fd5f:	cmp    al,0x3a
  42fd61:	repnz jecxz 0x42fd76
  42fd64:	mov    dh,0xdb
  42fd66:	aam    0xf6
  42fd68:	les    ax,DWORD PTR [edx+0x28]
  42fd6c:	rol    BYTE PTR [ebx],1
  42fd6e:	xchg   ebx,eax
  42fd6f:	stos   BYTE PTR es:[edi],al
  42fd70:	shr    al,0xe8
  42fd73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd74:	dec    ebx
  42fd75:	push   ebx
  42fd76:	push   eax
  42fd77:	push   ds
  42fd78:	scas   eax,DWORD PTR es:[edi]
  42fd79:	stos   DWORD PTR es:[edi],eax
  42fd7a:	imul   esi,esp,0xffffffe1
  42fd7d:	or     bh,BYTE PTR [esi]
  42fd7f:	or     ah,BYTE PTR [ecx+0x1d]
  42fd82:	jno    0x42fd28
  42fd84:	dec    edx
  42fd85:	idiv   DWORD PTR [edx+0x648b85e4]
  42fd8b:	mov    ecx,0x1024f733
  42fd90:	jecxz  0x42fddb
  42fd92:	ret    
  42fd93:	add    cl,ah
  42fd95:	pop    ds
  42fd96:	test   dl,bh
  42fd98:	or     BYTE PTR [ebx-0x7c],dh
  42fd9b:	fdiv   QWORD PTR [ebx-0x163de25f]
  42fda1:	xchg   ebp,eax
  42fda2:	sub    eax,0x10a4b705
  42fda7:	jp     0x42fdda
  42fda9:	add    bh,BYTE PTR ds:0x60b74580
  42fdaf:	add    ah,ah
  42fdb1:	(bad)  
  42fdb2:	imul   ecx,esp,0x48
  42fdb5:	popa   
  42fdb6:	jb     0x42fde3
  42fdb8:	fsubp  st(2),st
  42fdba:	fidiv  DWORD PTR [edx]
  42fdbc:	sti    
  42fdbd:	add    edi,ecx
  42fdbf:	inc    ebp
  42fdc0:	jg     0x42fdc2
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	pop    esi
  42fe41:	pop    ss
  42fe42:	push   edi
  42fe43:	or     ch,BYTE PTR [ecx+edi*8]
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [edx],dl
  42fe4d:	enter  0x4701,0x85
  42fe51:	inc    esi
  42fe52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe53:	push   ebp
  42fe54:	stc    
  42fe55:	ret    
  42fe56:	xchg   ebx,eax
  42fe57:	bound  edx,QWORD PTR [ebp+0xa]
  42fe5a:	js     0x42fec3
  42fe5c:	cdq    
  42fe5d:	(bad)  
  42fe5e:	sbb    eax,0xcbba6586
  42fe63:	xlat   BYTE PTR ds:[ebx]
  42fe64:	jnp    0x42fe66
  42fe66:	mov    DWORD PTR [ecx+0x48],ebx
  42fe69:	cmp    DWORD PTR [edx-0x2],ebp
  42fe6c:	lods   al,BYTE PTR ds:[esi]
  42fe6d:	stos   DWORD PTR es:[edi],eax
  42fe6e:	shr    DWORD PTR [edi],cl
  42fe70:	xchg   edi,eax
  42fe71:	sbb    eax,0x987a41c2
  42fe76:	mov    cl,0x68
  42fe78:	sti    
  42fe79:	mov    DWORD PTR [edx-0x7f],0x15e5707e
  42fe80:	mov    al,ds:0xaccc3340
  42fe85:	cmc    
  42fe86:	pop    es
  42fe87:	or     al,0x2a
  42fe89:	imul   eax,DWORD PTR [ecx],0x7b0099c3
  42fe8f:	add    DWORD PTR [eax-0x1303fdb0],eax
  42fe95:	mov    ds:0x5c4c06af,al
  42fe9a:	mov    ebx,DWORD PTR [edi-0x13]
  42fe9d:	das    
  42fe9e:	or     cl,cl
  42fea0:	add    esp,DWORD PTR [ecx]
  42fea2:	mov    eax,ds:0xae169e9e
  42fea7:	call   0x543508d7
  42feac:	call   0x51896b10
  42feb1:	push   edx
  42feb2:	jmp    0xd8fb:0x58368bc7
  42feb9:	bound  ecx,QWORD PTR [ebx]
  42febb:	jl     0x42ff10
  42febd:	mov    edx,0xa851efac
  42fec2:	mov    ds:0x154d4918,eax
  42fec7:	jbe    0x42feb0
  42fec9:	aas    
  42feca:	fwait
  42fecb:	jmp    0xe63f:0xe5c08f90
  42fed2:	inc    edx
  42fed3:	loope  0x42fe74
  42fed5:	fnstenv [edx-0x4c]
  42fed8:	call   DWORD PTR [ecx]
  42feda:	push   es
  42fedb:	test   eax,ebp
  42fedd:	adc    al,0x5d
  42fedf:	lods   al,BYTE PTR cs:[esi]
  42fee1:	sti    
  42fee2:	aad    0x82
  42fee4:	dec    ebp
  42fee5:	xchg   BYTE PTR es:[eax+0x175b8c46],dl
  42feec:	rcl    bl,cl
  42feee:	or     BYTE PTR [ebp+0x750fec40],ch
  42fef4:	es loopne 0x42ff4a
  42fef7:	add    al,0x47
  42fef9:	sub    al,0x6d
  42fefb:	repz fmulp st(3),st
  42fefe:	add    bl,bl
  42ff00:	je     0x42ff45
  42ff02:	hlt    
  42ff03:	nop
  42ff04:	lea    edx,[eax]
  42ff06:	mov    dl,0x8f
  42ff08:	ins    DWORD PTR es:[edi],dx
  42ff09:	pop    esp
  42ff0a:	mov    edi,?
  42ff0c:	jns    0x42ff4c
  42ff0e:	mul    BYTE PTR [ecx-0x6e]
  42ff11:	div    DWORD PTR [edi-0x7e4db414]
  42ff17:	xchg   edi,eax
  42ff18:	fucomi st,st(4)
  42ff1a:	ins    DWORD PTR es:[edi],dx
  42ff1b:	sti    
  42ff1c:	sub    ebp,DWORD PTR [edi-0x41]
  42ff1f:	ror    DWORD PTR [edi-0x1a],cl
  42ff22:	cmp    al,0x4a
  42ff24:	xchg   esi,eax
  42ff25:	fiadd  WORD PTR [esi+0x7]
  42ff28:	sbb    bh,BYTE PTR [ebx-0xb]
  42ff2b:	(bad)  
  42ff2c:	fdivr  st,st(4)
  42ff2e:	mov    ecx,0xdfe293e8
  42ff33:	adc    BYTE PTR [edi+0x74b1f6ab],0x22
  42ff3a:	mov    ch,0xc7
  42ff3c:	loope  0x42fed6
  42ff3e:	dec    edi
  42ff3f:	pop    esi
  42ff40:	adc    al,BYTE PTR [eax]
	...
  42ffb2:	add    BYTE PTR [eax],al
  42ffb4:	adc    bh,BYTE PTR [esi]
  42ffb6:	int    0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx+0x16897fea]
  42ffc1:	lock add ah,BYTE PTR [ecx+eiz*1-0xafffe06]
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [eax+0x74],dh
  42ffce:	pop    ds
  42ffcf:	bnd jp 0x42ff9a
  42ffd2:	js     0x42ffc3
  42ffd4:	jmp    0x42ffd6
  42ffd6:	in     eax,0x6
  42ffd8:	lods   al,BYTE PTR ds:[esi]
  42ffd9:	push   ebx
  42ffda:	push   ecx
  42ffdb:	add    BYTE PTR [ecx+0x391c781c],0x7b
  42ffe2:	or     BYTE PTR [eax],dl
  42ffe4:	dec    esi
  42ffe5:	scas   al,BYTE PTR es:[edi]
  42ffe6:	repnz mov al,0x29
  42ffe9:	jmp    0x430002
  42ffeb:	call   0x8e6c3220
  42fff0:	cmc    
  42fff1:	imul   edi,DWORD PTR [eax-0x7b],0x156c940f
  42fff8:	push   0xffffff9f
  42fffa:	push   ds
  42fffb:	mov    ch,0xc6
  42fffd:	imul   edi,DWORD PTR [ecx+eax*4+0x57a9280f],0x1f
  430005:	pusha  
  430006:	daa    
  430007:	inc    bp
  430009:	xchg   esp,eax
  43000a:	cwde   
  43000b:	fisub  WORD PTR [edi]
  43000d:	cli    
  43000e:	addr16 test ebp,edi
  430011:	call   0xea4:0xf7ff7b61
  430018:	xor    dl,al
  43001a:	mov    eax,0x3e060cbe
  43001f:	jo     0x42ffe5
  430021:	xchg   DWORD PTR [ebx],eax
  430023:	call   0xa1d:0xd4d2cbfd
  43002a:	xchg   ecx,eax
  43002b:	sub    DWORD PTR [eax],edi
  43002d:	mov    edi,0x908806ea
  430032:	mov    ebx,0xded54d8d
  430037:	int    0xf7
  430039:	repz jl 0x42ffdb
  43003c:	retf   0x4005
  43003f:	add    ch,dh
  430041:	mov    dh,0x4c
  430044:	pusha  
  430045:	jmp    0x1bc1:0x3f2a2076
  43004c:	mov    esp,eax
  43004e:	dec    esi
  43004f:	push   0x2
  430051:	idiv   ecx
  430053:	ret    
  430054:	out    0x5a,eax
  430056:	jle    0x43003f
  430058:	lods   eax,DWORD PTR ds:[esi]
  430059:	fild   WORD PTR [ebp-0x1ebf5aff]
  43005f:	in     eax,dx
  430060:	mov    eax,0x22f3fcf
  430065:	clc    
  430066:	lods   eax,DWORD PTR ds:[esi]
  430067:	sbb    dl,dl
  430069:	inc    esi
  43006a:	leave  
  43006b:	dec    ebp
  43006c:	push   edx
  43006d:	mov    edx,0xa053e7c4
  430072:	je     0x4300da
  430074:	daa    
  430075:	int    0x36
  430077:	ins    BYTE PTR es:[edi],dx
  430078:	call   DWORD PTR [edi]
  43007a:	push   es
  43007b:	sbb    BYTE PTR [esi-0x698f2e1b],ah
  430081:	xchg   edx,esp
  430083:	inc    esp
  430084:	pop    ds
  430085:	jl     0x430041
  430087:	or     DWORD PTR [ecx-0x7dd3aa0],edx
  43008d:	aaa    
  43008e:	cld    
  43008f:	xchg   ebx,eax
  430090:	cwde   
  430091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430092:	aas    
  430093:	pop    ebp
  430094:	mov    fs,WORD PTR [edx]
  430096:	jne    0x430112
  430098:	push   edi
  430099:	dec    ebx
  43009a:	cmp    eax,0x574d1624
  43009f:	cwde   
  4300a0:	fdivr  DWORD PTR [eax]
  4300a2:	imul   edi,DWORD PTR [eax],0x51
  4300a5:	xlat   BYTE PTR ds:[ebx]
  4300a6:	inc    ecx
  4300a7:	xchg   esp,eax
  4300a8:	(bad)  
  4300a9:	sbb    al,0xc8
  4300ab:	jb     0x430067
  4300ad:	mov    esi,0x98597ece
  4300b2:	mov    bh,0x2e
  4300b4:	dec    ecx
  4300b5:	in     al,0x7c
  4300b7:	icebp  
  4300b8:	in     al,0x2
  4300ba:	mov    ecx,0x57fb8eb4
  4300bf:	mov    al,ds:0x54
	...
  430134:	pop    edx
  430135:	es jecxz 0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x65a9:0xcdfba608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    dh,ah
  43014d:	leave  
  43014e:	mov    al,0x61
  430150:	stos   BYTE PTR es:[edi],al
  430151:	xchg   edi,eax
  430152:	sbb    DWORD PTR [esi+0x6a08ccf7],eax
  430158:	mov    ebp,0x1f0ecc7e
  43015d:	seto   BYTE PTR [eax+0x42e3f0d4]
  430164:	mov    esi,0xcd74b19c
  430169:	inc    eax
  43016a:	push   0xaa0a960f
  43016f:	enter  0xcddc,0xcd
  430173:	inc    esi
  430174:	cmp    BYTE PTR [ecx+0x1cdb300c],bh
  43017a:	pop    esp
  43017b:	adc    al,0xa6
  43017d:	xchg   esp,eax
  43017e:	cmp    esi,ecx
  430180:	into   
  430181:	push   eax
  430182:	jnp    0x430137
  430184:	stc    
  430185:	ins    BYTE PTR es:[edi],dx
  430186:	(bad)  
  430187:	imul   ebp,DWORD PTR [edx-0x7c643bf2],0xa30e1d03
  430191:	push   es
  430192:	push   cs
  430193:	daa    
  430194:	and    eax,0x64eb15c6
  430199:	fldenv [eax+esi*2-0x552bb37a]
  4301a0:	or     DWORD PTR [edi-0x5f],ebp
  4301a3:	outs   dx,DWORD PTR ds:[esi]
  4301a4:	dec    edi
  4301a5:	lock mov ecx,0x672637b4
  4301ab:	fdivrp st(1),st
  4301ad:	aas    
  4301ae:	inc    edx
  4301af:	and    DWORD PTR [eax-0x6cc8c3f6],edi
  4301b5:	int3   
  4301b6:	ds fxam 
  4301b9:	sub    DWORD PTR [eax-0x2d],ebx
  4301bc:	retf   
  4301bd:	fldcw  WORD PTR [edi+0x40]
  4301c0:	shl    BYTE PTR [edi+esi*2],1
  4301c3:	shl    BYTE PTR [edi],0x69
  4301c6:	and    al,0x3e
  4301c8:	fsubr  DWORD PTR ds:0xab5a7e56
  4301ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301cf:	pop    ebp
  4301d0:	cmp    eax,esp
  4301d2:	push   ebx
  4301d3:	(bad)  
  4301d4:	adc    bh,BYTE PTR [ecx-0x37537ee]
  4301da:	scas   eax,DWORD PTR es:[edi]
  4301db:	add    eax,0xfaa9a75c
  4301e0:	dec    edx
  4301e1:	aam    0x6d
  4301e3:	sub    DWORD PTR [edi],ebp
  4301e5:	cwde   
  4301e6:	jecxz  0x430218
  4301e8:	add    DWORD PTR [ecx+0x6b],ebx
  4301eb:	in     al,dx
  4301ec:	jp     0x43018c
  4301ee:	jge    0x430233
  4301f0:	or     al,0xd4
  4301f2:	and    DWORD PTR [ecx-0x78],0x68
  4301f6:	bound  edx,QWORD PTR [esi-0x54]
  4301f9:	mov    eax,0x2e7723d8
  4301fe:	mov    ch,0x9c
  430200:	dec    eax
  430201:	js     0x430242
  430203:	rcr    edi,1
  430205:	out    0x44,eax
  430207:	out    0xde,eax
  430209:	jno    0x430190
  43020b:	add    ah,BYTE PTR [ebx]
  43020d:	cmp    eax,esp
  43020f:	out    dx,eax
  430210:	(bad)  
  430211:	retf   
  430212:	pusha  
  430213:	test   eax,0xced85fd3
  430218:	mov    esp,0xdc050a9f
  43021d:	add    DWORD PTR ds:0xbaf3eeba,ebx
  430223:	adc    ecx,DWORD PTR ds:0xcca892b6
  430229:	sbb    eax,0xc230e283
  43022e:	mov    ebp,0x993fd5ca
  430233:	pop    esi
  430234:	fwait
  430235:	ss mov ch,0xf4
  430238:	int    0x85
  43023a:	clc    
  43023b:	jecxz  0x430208
  43023d:	mov    eax,ds:0x131f8f
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	int3   
  4302c1:	mov    dh,0xf5
  4302c3:	adc    ecx,DWORD PTR [ebx]
  4302c5:	cld    
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [edx+0x7c],cl
  4302ce:	(bad)  
  4302cf:	clc    
  4302d0:	cmp    ecx,edi
  4302d2:	cmp    edi,DWORD PTR [esi]
  4302d4:	mov    esp,0x1c71acc9
  4302d9:	aaa    
  4302da:	xor    bh,BYTE PTR es:[eax-0x64185c4f]
  4302e1:	xor    eax,0x6372e79e
  4302e6:	jns    0x43035d
  4302e8:	push   0x9701e969
  4302ed:	jecxz  0x4302e8
  4302ef:	push   0x21
  4302f1:	mov    ds:0x5ac1e67f,eax
  4302f6:	les    ecx,FWORD PTR [edx]
  4302f8:	push   ss
  4302f9:	hlt    
  4302fa:	push   0x44
  4302fc:	jo     0x4302ae
  4302fe:	call   0xa34f:0xa407ca26
  430305:	sub    al,0x57
  430307:	lock push 0x7ca72c9
  43030d:	ss jae 0x430371
  430310:	jae    0x4302ef
  430312:	repz or DWORD PTR ds:0x8dcff9b8,0xbdc94c1
  43031d:	mov    ds:0x4c33ae20,eax
  430322:	int    0x7a
  430324:	jnp    0x4302d8
  430326:	test   eax,0x7c0827
  43032b:	jmp    0xf113eb33
  430330:	loop   0x430359
  430332:	jge    0x430317
  430334:	fdiv   DWORD PTR [esi+ebx*1-0x30f2966d]
  43033b:	xchg   edi,eax
  43033c:	sahf   
  43033d:	mov    ebx,esi
  43033f:	pop    edx
  430340:	ja     0x43034d
  430342:	sbb    bl,BYTE PTR [edx+0x765a660e]
  430348:	and    DWORD PTR [esi+0x202c8d43],eax
  43034e:	loop   0x430311
  430350:	inc    eax
  430351:	stc    
  430352:	adc    bh,dh
  430354:	(bad)  
  430355:	into   
  430356:	pop    esp
  430357:	js     0x4303d6
  430359:	and    DWORD PTR [edx],0xa01885e2
  43035f:	aam    0xd5
  430361:	call   0xe7f6794f
  430366:	add    DWORD PTR [edx-0xfd16181],ebx
  43036c:	xchg   esi,eax
  43036d:	add    eax,0x91077307
  430372:	add    al,0xe9
  430374:	jge    0x4303a0
  430376:	int    0xc7
  430378:	scas   al,BYTE PTR es:[edi]
  430379:	adc    ebp,eax
  43037b:	fistp  WORD PTR [ecx+0x34615ac5]
  430381:	inc    esi
  430382:	push   0x862225d3
  430387:	mov    eax,0x6b1b946a
  43038c:	pop    ds
  43038d:	xor    al,BYTE PTR [ecx-0x26]
  430390:	xchg   esp,eax
  430391:	shl    DWORD PTR [esi-0x68e7a665],0xfa
  430398:	fs cmp eax,0xf1b68af1
  43039e:	hlt    
  43039f:	dec    esp
  4303a0:	jge    0x43034b
  4303a2:	aad    0x66
  4303a4:	mov    al,0xc0
  4303a6:	xchg   esp,eax
  4303a7:	mov    ebx,ecx
  4303a9:	push   ds
  4303aa:	jae    0x43041a
  4303ac:	icebp  
  4303ad:	sbb    al,0xfd
  4303af:	ja     0x43042e
  4303b1:	pop    es
  4303b2:	rcl    BYTE PTR [edx+eiz*4],0x42
  4303b6:	mov    BYTE PTR [esi+0x1c5a2597],dh
  4303bc:	gs sbb al,0x30
  4303bf:	sub    bh,cl
	...
  430431:	add    BYTE PTR [eax],al
  430433:	add    BYTE PTR [edi],dh
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0x881d5e59
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    BYTE PTR [edi],dh
  43044d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43044e:	mov    esp,0x84157e19
  430453:	pop    ss
  430454:	inc    ebp
  430455:	sub    DWORD PTR [ecx+edi*4+0x40],edx
  430459:	stos   BYTE PTR es:[edi],al
  43045a:	cwde   
  43045b:	imul   eax,DWORD PTR [ebx+0x68c90e25],0x98f23ed2
  430465:	lds    esi,FWORD PTR [edx-0x36]
  430468:	(bad)  
  430469:	jl     0x430454
  43046b:	clc    
  43046c:	loop   0x430414
  43046e:	mov    ch,0xea
  430470:	sbb    DWORD PTR [ebp-0x57ab61c0],0xd618ec20
  43047a:	add    BYTE PTR [edi-0x232c9ce5],dl
  430480:	sbb    bh,ch
  430482:	mov    eax,0xd30874d
  430487:	lock mov eax,0xac0052d2
  43048d:	inc    ecx
  43048e:	pop    es
  43048f:	fsub   DWORD PTR [ecx-0x56]
  430492:	stos   BYTE PTR es:[edi],al
  430493:	mov    dl,0xf
  430495:	xor    eax,0xf2821c63
  43049a:	push   ss
  43049b:	in     al,0x9c
  43049d:	pusha  
  43049e:	daa    
  43049f:	xor    ebx,ebx
  4304a1:	cli    
  4304a2:	push   0x7
  4304a4:	adc    eax,0x9ad22dc7
  4304a9:	dec    esi
  4304aa:	xchg   DWORD PTR [esp+ecx*4-0x7a],edi
  4304ae:	ja     0x430482
  4304b0:	and    ah,bl
  4304b2:	dec    eax
  4304b3:	loopne 0x4304da
  4304b5:	jecxz  0x430470
  4304b7:	lock dec edi
  4304b9:	js     0x430505
  4304bb:	fsub   st,st(4)
  4304bd:	loop   0x430505
  4304bf:	adc    al,0x8c
  4304c1:	fcomp  QWORD PTR [edi]
  4304c3:	popf   
  4304c4:	lods   eax,DWORD PTR ds:[esi]
  4304c5:	stos   DWORD PTR es:[edi],eax
  4304c6:	(bad)  
  4304c7:	mov    dh,0x62
  4304c9:	ret    
  4304ca:	pop    ss
  4304cb:	jbe    0x43045f
  4304cd:	mov    bh,0xe4
  4304cf:	sbb    DWORD PTR [eax-0x7c481833],esp
  4304d5:	ficom  WORD PTR [edx+0x61fe93df]
  4304db:	adc    al,0xa0
  4304dd:	dec    edx
  4304df:	adc    edi,DWORD PTR [ebx-0x6e]
  4304e2:	retf   0x96a8
  4304e5:	rcr    BYTE PTR [edx+ebp*8-0x50],1
  4304e9:	aaa    
  4304ea:	imul   edx,DWORD PTR [edi],0x145f84d0
  4304f0:	adc    al,0x92
  4304f2:	push   ss
  4304f3:	outs   dx,BYTE PTR ds:[esi]
  4304f4:	mov    ch,BYTE PTR [edx]
  4304f6:	sbb    bh,BYTE PTR [edx+0x4a]
  4304f9:	jbe    0x43055d
  4304fb:	aas    
  4304fc:	aam    0x93
  4304fe:	mov    eax,0x86f05627
  430503:	dec    edi
  430504:	fs or  esp,eax
  430507:	sbb    esp,DWORD PTR [ecx-0x59fe964]
  43050d:	dec    ebx
  43050e:	scas   al,BYTE PTR es:[edi]
  43050f:	scas   eax,DWORD PTR es:[edi]
  430510:	mov    ecx,0x9df6993a
  430515:	sub    al,0x2b
  430517:	and    al,0x38
  430519:	mov    bl,0x9c
  43051b:	pusha  
  43051c:	push   ss
  43051d:	je     0x4304da
  43051f:	neg    BYTE PTR cs:[esi-0x7b21c24a]
  430526:	mov    esi,0x959be980
  43052b:	xor    al,0x82
  43052d:	ins    BYTE PTR es:[edi],dx
  43052e:	mov    ch,0xe3
  430530:	ret    
  430531:	fsub   st,st(4)
  430533:	sbb    DWORD PTR [eax-0x77],edx
  430536:	jl     0x4304ec
  430538:	jmp    0x82ea:0xcfbe4239
  43053f:	xor    al,0x5c
	...
  4305b1:	add    BYTE PTR [eax],al
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x65]
  4305c1:	es xchg ebp,eax
  4305c3:	(bad)  
  4305c4:	cmc    
  4305c5:	std    
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [ebx+0x66169f98],bh
  4305d1:	cmp    ah,dl
  4305d3:	jmp    0x4305cf
  4305d5:	sub    BYTE PTR [esi-0x4f],cl
  4305d8:	jle    0x43059d
  4305da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305db:	dec    ebx
  4305dc:	bound  edx,QWORD PTR [edi+0x29]
  4305df:	arpl   WORD PTR [edx],ax
  4305e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305e2:	cmp    al,0xf0
  4305e4:	push   ds
  4305e5:	push   ss
  4305e6:	loop   0x4305cd
  4305e8:	pop    ecx
  4305e9:	jmp    0x8a63:0x2c486b27
  4305f0:	mov    dl,0x81
  4305f2:	adc    al,0x2
  4305f4:	neg    DWORD PTR [edx-0x4d326b61]
  4305fa:	popa   
  4305fb:	adc    esp,DWORD PTR [edi]
  4305fd:	sbb    dh,BYTE PTR [esi+ecx*8]
  430600:	mov    dl,0xff
  430602:	int    0x73
  430604:	or     eax,0xc5d0e89f
  430609:	popa   
  43060a:	or     eax,0x51942cc8
  43060f:	loopne 0x4305e8
  430611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430612:	push   0x36
  430614:	aad    0x32
  430616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430617:	popf   
  430618:	clc    
  430619:	mov    dl,BYTE PTR [ebp-0x45]
  43061c:	pop    ds
  43061d:	mov    ah,0x8f
  43061f:	cmp    dl,BYTE PTR [ebx+0x33103c62]
  430625:	test   DWORD PTR gs:[edi+0x450a830c],edx
  43062c:	pop    ecx
  43062d:	add    edi,DWORD PTR [eax+ebp*8+0x31]
  430631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430632:	test   al,0x1a
  430634:	outs   dx,BYTE PTR ds:[esi]
  430635:	xor    al,0x55
  430637:	sar    DWORD PTR [ecx-0x4a],1
  43063a:	xor    BYTE PTR [ebp+0x7e58f0d5],dh
  430640:	push   ebp
  430641:	ss (bad) 
  430643:	xor    eax,0x90a324d7
  430648:	and    eax,0x3e5e4607
  43064d:	sub    DWORD PTR [edx+0x18],0xe6fc8898
  430654:	ret    
  430655:	mov    al,0xb7
  430657:	mov    BYTE PTR [esi],dl
  430659:	inc    esi
  43065a:	push   ds
  43065b:	out    0xc9,eax
  43065d:	xor    al,0x3e
  43065f:	jecxz  0x4306c5
  430661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430662:	fdivr  st(3),st
  430664:	rol    DWORD PTR [eax+0x24],cl
  430667:	es push esi
  430669:	lock lock jp 0x4306cd
  43066d:	jmp    DWORD PTR [eax+esi*1-0x2ed0a03e]
  430674:	xchg   ebp,eax
  430675:	inc    ecx
  430676:	pop    ebx
  430677:	mov    ds:0xf5cbdaad,al
  43067c:	les    esp,FWORD PTR [ecx-0x32]
  43067f:	lock loop 0x43062f
  430682:	inc    edi
  430683:	mov    edi,0x1fd36c3f
  430688:	cmp    BYTE PTR [ebx],0xe7
  43068b:	push   edi
  43068c:	out    0xaf,al
  43068e:	(bad)  
  43068f:	jno    0x4306ca
  430691:	inc    esi
  430692:	jb     0x4306af
  430694:	mov    al,0x9
  430696:	cmp    al,0x4
  430698:	ins    BYTE PTR es:[edi],dx
  430699:	add    DWORD PTR [ebx],esp
  43069b:	lock xchg edi,eax
  43069d:	call   0xc7955b3a
  4306a2:	and    eax,0x23ac96b8
  4306a7:	push   ebp
  4306a8:	mov    ecx,0x69e96b32
  4306ad:	and    dl,al
  4306af:	jmp    0x4306de
  4306b1:	cmp    ch,BYTE PTR [esi+0x799d2663]
  4306b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4306b8:	enter  0x5664,0x1e
  4306bc:	xor    al,0x3d
  4306be:	scas   al,BYTE PTR es:[edi]
  4306bf:	imul   edx,esi,0x0
	...
  430731:	add    BYTE PTR [eax],al
  430733:	add    BYTE PTR [ecx-0x5f],dh
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x9a
  430741:	push   cs
  430742:	dec    edi
  430743:	xchg   esp,eax
  430744:	jmp    0x0:0xf50001fe
  43074b:	add    BYTE PTR [edx-0x32],cl
  43074e:	pop    ecx
  43074f:	je     0x430780
  430751:	and    ah,BYTE PTR [edi+ecx*8]
  430754:	xchg   ebp,eax
  430755:	addr16 xchg edi,eax
  430757:	push   esi
  430758:	pop    es
  430759:	popa   
  43075a:	pop    esi
  43075b:	adc    eax,0x8058a455
  430760:	push   esp
  430761:	aad    0x7e
  430763:	cmp    al,0x9f
  430765:	lock push edx
  430767:	(bad)  
  430769:	aaa    
  43076a:	jmp    0x8018:0xa0247d3e
  430771:	lahf   
  430772:	adc    eax,0x1a64fca8
  430777:	ror    DWORD PTR [esi+edx*4],1
  43077a:	sbb    DWORD PTR [ecx+0x9],edi
  43077d:	sti    
  43077e:	addr16 mov al,0xc5
  430781:	cmp    DWORD PTR [eax+0x77],0x16ced530
  430788:	mov    esi,0x8afe3870
  43078d:	test   al,0x90
  43078f:	cmp    eax,0x590a8860
  430794:	or     eax,DWORD PTR [ecx-0x41]
  430797:	mov    ecx,0x13a2bf97
  43079c:	mov    edi,ebp
  43079e:	dec    ebx
  43079f:	das    
  4307a0:	aaa    
  4307a1:	or     BYTE PTR [ebp+0x6d],al
  4307a4:	jb     0x430763
  4307a6:	js     0x4307d8
  4307a8:	xor    al,0xe3
  4307aa:	mov    al,fs:0x3c6a86b1
  4307b0:	add    eax,0x3576e18e
  4307b5:	adc    eax,0xc88ba69d
  4307ba:	xor    bl,BYTE PTR [edi-0x6463c13b]
  4307c0:	das    
  4307c1:	push   0xffffffa7
  4307c3:	or     DWORD PTR [edi],edx
  4307c5:	or     bh,bh
  4307c7:	inc    eax
  4307c8:	popf   
  4307c9:	push   ecx
  4307ca:	sbb    eax,0x70eb3e58
  4307cf:	ins    DWORD PTR es:[edi],dx
  4307d0:	sub    al,0x21
  4307d2:	mov    ds:0x82f50be5,al
  4307d7:	stos   DWORD PTR es:[edi],eax
  4307d8:	and    al,0xc8
  4307da:	pop    es
  4307db:	xchg   edi,eax
  4307dc:	retf   0xb379
  4307df:	or     BYTE PTR [ecx+ebx*2-0x68],ch
  4307e3:	fs repnz inc ebp
  4307e6:	retf   0xe900
  4307e9:	sbb    eax,0x64035a76
  4307ee:	xchg   ebp,eax
  4307ef:	xchg   ebp,eax
  4307f0:	fucomi st,st(1)
  4307f2:	ror    DWORD PTR [ecx],1
  4307f4:	xor    DWORD PTR [ebp+0x29b45be],edi
  4307fa:	sbb    BYTE PTR [ebp+0x658f0d63],ch
  430800:	mov    eax,ds:0x49bdd370
  430805:	inc    edx
  430806:	jae    0x430813
  430808:	sub    edi,DWORD PTR [edi]
  43080a:	std    
  43080b:	dec    esi
  43080c:	sbb    DWORD PTR [edx-0x35],ebp
  43080f:	jmp    0xe719:0x195447aa
  430816:	pusha  
  430817:	ins    DWORD PTR es:[edi],dx
  430818:	cmp    bl,BYTE PTR [edx+edx*1+0x6dabc2e4]
  43081f:	jg     0x4307c7
  430821:	repz jp 0x4307e0
  430824:	fwait
  430825:	xchg   ecx,eax
  430826:	lods   al,BYTE PTR ds:[esi]
  430827:	mov    bl,0x6d
  430829:	mul    BYTE PTR [edx-0x6b]
  43082c:	mov    edi,0xab76d3ee
  430831:	jecxz  0x430839
  430833:	lods   al,BYTE PTR ds:[esi]
  430834:	hlt    
  430835:	scas   eax,DWORD PTR es:[edi]
  430836:	jmp    0xca2ede62
  43083b:	sbb    dl,BYTE PTR [ebp-0xf329eb0]
	...
  4308b1:	add    BYTE PTR [eax],al
  4308b3:	add    BYTE PTR [esp+esi*2],dl
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	jno    0x4308e5
  4308c2:	jg     0x430872
  4308c4:	(bad)  
  4308c6:	add    DWORD PTR [eax],eax
  4308c8:	cmc    
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    dl,dl
  4308cd:	push   0x71
  4308cf:	bswap  ebx
  4308d1:	adc    eax,0xd66a68e1
  4308d6:	mov    esp,0x8c9aacbd
  4308db:	mov    ebp,0xde57b3d
  4308e0:	bound  ebp,QWORD PTR [esi]
  4308e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308e3:	mov    bl,0xb7
  4308e5:	xchg   esi,eax
  4308e6:	push   cs
  4308e7:	mov    esi,ecx
  4308e9:	mov    bl,0xb5
  4308eb:	push   ds
  4308ec:	mov    eax,0x1e5cb4d3
  4308f1:	mov    bl,0xcc
  4308f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308f4:	or     eax,0x9e505238
  4308f9:	xor    ah,BYTE PTR [ecx+0x94e3adb]
  4308ff:	sub    bl,BYTE PTR [ebx-0x7ca78e19]
  430905:	and    al,0x3f
  430907:	xor    al,0xe1
  430909:	or     DWORD PTR [edi+ebx*1-0x2f],ebx
  43090d:	mov    ch,BYTE PTR [eax+0x4795a531]
  430913:	lds    ebx,FWORD PTR [esi]
  430915:	je     0x4308bf
  430917:	pop    ecx
  430918:	(bad)  
  430919:	iret   
  43091a:	repnz sub cl,ch
  43091d:	sub    eax,0xd1c1f262
  430922:	mov    edi,0x9b3fc889
  430927:	mov    esi,0x3da94b68
  43092c:	test   BYTE PTR [edi+0x1a88563],al
  430932:	cdq    
  430933:	cmp    DWORD PTR [edx+0x2c],edx
  430936:	repnz xchg esi,eax
  430938:	adc    eax,0x143de32a
  43093d:	ret    0x554
  430940:	add    al,0x9c
  430942:	mov    edi,0xa91cf435
  430947:	fdiv   QWORD PTR [ebp-0x5c8d174e]
  43094d:	push   es
  43094e:	sti    
  43094f:	jbe    0x4308e5
  430951:	arpl   WORD PTR [esi-0x577c70de],si
  430957:	fmul   DWORD PTR [esi]
  430959:	mov    ds:0xdb0e288,al
  43095e:	ds stos DWORD PTR es:[edi],eax
  430960:	stc    
  430961:	sub    dl,BYTE PTR ds:0x3eaa2dfd
  430967:	lods   eax,DWORD PTR ds:[esi]
  430968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430969:	xor    esp,esi
  43096b:	fcom   QWORD PTR [eax-0x1a]
  43096e:	in     eax,0xf0
  430970:	jge    0x4309a6
  430972:	or     BYTE PTR [edi-0x5065a3c6],ah
  430978:	inc    eax
  430979:	pop    edx
  43097a:	dec    ecx
  43097b:	out    dx,al
  43097c:	sahf   
  43097d:	(bad)  
  43097e:	push   esp
  43097f:	(bad)  
  430980:	mov    bh,0x68
  430982:	sahf   
  430983:	inc    esi
  430984:	sahf   
  430985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430986:	mov    ah,0x38
  430988:	add    DWORD PTR [edx-0x5b],ecx
  43098b:	lods   al,BYTE PTR ds:[esi]
  43098c:	sub    DWORD PTR [eax-0x484cebd8],esp
  430992:	cli    
  430993:	jno    0x4309ea
  430995:	adc    BYTE PTR [edx+edx*8],0xfe
  430999:	test   eax,0xc198fbce
  43099e:	pop    edi
  43099f:	sahf   
  4309a0:	call   0x72d567a6
  4309a5:	push   edx
  4309a6:	popf   
  4309a7:	dec    eax
  4309a8:	adc    DWORD PTR [edi+0x7e54d0b1],edi
  4309ae:	rcl    DWORD PTR [ecx],cl
  4309b0:	(bad)
  4309b3:	mov    dl,0x8
  4309b5:	gs ret 0x42c7
  4309b9:	and    esp,DWORD PTR [ecx*2+0x5e94f6e2]
  4309c0:	push   ebx
	...
  430a31:	add    BYTE PTR [eax],al
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0xa311c37
  430a43:	enter  0xd4,0x2
  430a47:	add    ch,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    dl,bh
  430a4d:	pop    esi
  430a4e:	js     0x430a25
  430a50:	stos   BYTE PTR es:[edi],al
  430a51:	jmp    0x430a18
  430a53:	sar    ecx,cl
  430a55:	scas   al,BYTE PTR es:[edi]
  430a56:	dec    eax
  430a57:	jp     0x430a0f
  430a59:	pop    esi
  430a5a:	nop
  430a5b:	add    al,BYTE PTR [eax+edi*8+0x26948cb5]
  430a62:	xor    esp,esi
  430a64:	push   edx
  430a65:	fldcw  WORD PTR [ebx+0x1e]
  430a68:	mov    ch,dh
  430a6a:	icebp  
  430a6b:	xchg   edx,eax
  430a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a6d:	repz jge 0x430a37
  430a70:	push   esi
  430a71:	mov    ds:0xcf67cac9,eax
  430a76:	inc    edi
  430a77:	cmp    DWORD PTR [ebx+eiz*2-0x6132099e],0x4e
  430a7f:	mov    bh,ch
  430a81:	xchg   ecx,eax
  430a82:	jp     0x430a73
  430a84:	mov    dh,0x66
  430a86:	xor    eax,DWORD PTR [edx]
  430a88:	sar    BYTE PTR [ebx+0x4e],0x85
  430a8c:	daa    
  430a8d:	sbb    esi,eax
  430a8f:	test   DWORD PTR [edx],ecx
  430a91:	jmp    0x430ab8
  430a93:	repnz inc ebx
  430a95:	(bad)  
  430a96:	in     eax,dx
  430a97:	nop
  430a98:	mov    esi,esp
  430a9a:	dec    ebp
  430a9b:	sahf   
  430a9c:	(bad)  
  430a9d:	dec    ebp
  430a9e:	pusha  
  430a9f:	arpl   bx,sp
  430aa1:	cdq    
  430aa2:	rcr    BYTE PTR [edx-0x23],1
  430aa5:	xor    eax,0x501790c6
  430aaa:	or     bl,BYTE PTR [ecx-0x7d]
  430aad:	nop
  430aae:	jge    0x430ae1
  430ab0:	mov    cl,0x46
  430ab2:	mov    BYTE PTR [edi-0x4d91e577],dh
  430ab8:	test   BYTE PTR [ebp+edx*4+0x2f],ah
  430abc:	imul   ecx,DWORD PTR cs:[ebx],0xffffffd5
  430ac0:	aaa    
  430ac1:	jnp    0x430b05
  430ac3:	adc    BYTE PTR [edi+0x47d79131],dl
  430ac9:	adc    cl,BYTE PTR [ebx-0x4e4e962d]
  430acf:	into   
  430ad0:	or     cl,BYTE PTR [ebp+eiz*2-0x694a2cdd]
  430ad7:	ja     0x430ad5
  430ad9:	adc    BYTE PTR [eax*1+0x3f76487f],ch
  430ae0:	xchg   BYTE PTR [edi-0x1c3196c3],bh
  430ae6:	pop    ss
  430ae7:	int    0xe4
  430ae9:	rol    DWORD PTR [eax-0x1d],1
  430aec:	es into 
  430aee:	xchg   DWORD PTR [edx+0x39a960c8],esp
  430af4:	jecxz  0x430b73
  430af6:	out    0x35,al
  430af8:	pop    ebx
  430af9:	add    dh,dl
  430afb:	xchg   DWORD PTR [edx+0x55],edx
  430afe:	mov    ds:0xe41ee3de,eax
  430b03:	(bad)  
  430b04:	adc    al,0x79
  430b06:	jmp    0x4e58:0x2903b933
  430b0d:	loopne 0x430add
  430b0f:	call   0x53bb:0x97682c03
  430b16:	bound  ecx,QWORD PTR [esi+0x219aec5b]
  430b1c:	inc    edx
  430b1d:	mov    ds:0xf82b6c05,eax
  430b22:	cdq    
  430b23:	cmp    al,0xd3
  430b25:	lods   al,BYTE PTR ds:[esi]
  430b26:	add    edi,ecx
  430b28:	test   al,dh
  430b2a:	scas   al,BYTE PTR es:[edi]
  430b2b:	mov    ch,BYTE PTR [ebx+eiz*4-0x27]
  430b2f:	add    eax,0xa4f8b381
  430b34:	arpl   WORD PTR [ebx+0x3d],ax
  430b37:	add    BYTE PTR [edi],0xe1
  430b3a:	in     al,dx
  430b3b:	fdivr  st(4),st
  430b3d:	inc    edx
  430b3e:	shr    BYTE PTR [edi+0x1d],1
	...
  430bb1:	add    BYTE PTR [eax],al
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0x9109:0x3f4217e6
  430bc2:	sbb    ah,BYTE PTR [edx+0x201c9]
  430bc8:	cmc    
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    BYTE PTR [ecx+ebx*1+0x41c7dc7a],al
  430bd2:	(bad)  
  430bd3:	sbb    DWORD PTR [edx+0x600a6502],ecx
  430bd9:	dec    esp
  430bda:	test   eax,0x73eb5b61
  430bdf:	push   es
  430be0:	push   es
  430be1:	dec    eax
  430be2:	mov    eax,0x70a7641f
  430be7:	lock pushf 
  430be9:	enter  0x9fd0,0xef
  430bed:	loop   0x430b7f
  430bef:	mov    ch,0x99
  430bf1:	xor    DWORD PTR ds:0x3c5d44ee,eax
  430bf7:	jmp    0xbfb:0x26485b94
  430bfe:	push   ds
  430bff:	push   ebx
  430c00:	sbb    DWORD PTR [edi-0x65],esp
  430c03:	jmp    0x8407:0x816491f5
  430c0a:	dec    ebx
  430c0b:	cmp    ah,BYTE PTR ss:[edx]
  430c0e:	dec    ebp
  430c0f:	dec    ebp
  430c10:	push   esi
  430c11:	mov    bl,0x42
  430c13:	sub    ah,BYTE PTR [ebx+0x49]
  430c16:	push   esp
  430c17:	clc    
  430c18:	pop    esi
  430c19:	mov    bl,0xa8
  430c1b:	sub    BYTE PTR [ebp-0x44],cl
  430c1e:	push   ecx
  430c1f:	aas    
  430c20:	icebp  
  430c21:	mov    ecx,0x565510db
  430c26:	data16 stc 
  430c28:	rcr    BYTE PTR [eax+edx*4-0x40],0x3c
  430c2d:	pop    eax
  430c2e:	lea    esi,[edi]
  430c30:	push   0xca731421
  430c35:	jmp    0xee85d55a
  430c3a:	in     al,dx
  430c3b:	imul   esp,DWORD PTR [edi-0x6b],0xaee7018e
  430c42:	push   edx
  430c43:	in     eax,dx
  430c44:	add    dl,BYTE PTR [edi+0x7]
  430c47:	(bad)  
  430c48:	gs fwait
  430c4a:	pop    ebx
  430c4b:	mov    edi,0x297dc10a
  430c50:	int    0x59
  430c52:	mov    ah,0xe7
  430c54:	hlt    
  430c55:	mov    edi,0xaa60d577
  430c5a:	inc    edi
  430c5b:	bound  ecx,QWORD PTR [esi+eax*8]
  430c5e:	cmp    DWORD PTR [eax],ebp
  430c60:	mov    edi,0x68949d7b
  430c65:	mov    ebx,esp
  430c67:	xchg   esi,eax
  430c68:	jb     0x430c91
  430c6a:	mov    ah,0xf6
  430c6c:	ss sti 
  430c6e:	bnd jbe 0x430c23
  430c71:	mov    edi,0x92a606df
  430c76:	dec    edx
  430c77:	jg     0x430c13
  430c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c7a:	cmc    
  430c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c7c:	cmp    edx,DWORD PTR [esi]
  430c7e:	jbe    0x430c87
  430c80:	lds    ebx,FWORD PTR [eax-0x51]
  430c83:	or     BYTE PTR [ecx+0x439ad59d],ch
  430c89:	mov    dl,0x75
  430c8b:	ret    
  430c8c:	add    edx,0xffffffe6
  430c8f:	cmp    esi,ebp
  430c91:	nop
  430c92:	ret    
  430c93:	push   ecx
  430c94:	push   esi
  430c95:	or     eax,0x93ed5491
  430c9a:	sbb    ah,BYTE PTR [edx+0x3626a4fb]
  430ca0:	mov    eax,ds:0x4327d7af
  430ca5:	xchg   esi,eax
  430ca6:	and    DWORD PTR [edx-0xf00c8ff],ebp
  430cac:	xor    eax,0x5f33b4c9
  430cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cb2:	outs   dx,BYTE PTR ds:[esi]
  430cb3:	and    al,0xbf
  430cb5:	ja     0x430cb1
  430cb7:	(bad)  
  430cb8:	fcomi  st,st(1)
  430cba:	dec    esp
  430cbb:	jmp    0x430cb4
  430cbd:	mov    edi,DWORD PTR [eax]
  430cbf:	icebp  
  430cc0:	mov    ch,0x0
	...
  430d32:	add    BYTE PTR [eax],al
  430d34:	dec    eax
  430d35:	rol    dl,0xf0
  430d38:	retf   0x7af2
  430d3b:	clc    
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430da7
  430d41:	fisubr DWORD PTR [edi]
  430d43:	xor    eax,0x202be
  430d48:	cmc    
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [ebx-0x14b81c49],ch
  430d51:	leave  
  430d52:	loope  0x430d10
  430d54:	jnp    0x430d72
  430d56:	pop    es
  430d57:	pop    ebx
  430d58:	retf   
  430d59:	jg     0x430db6
  430d5b:	mov    ds:0x4f525e42,al
  430d60:	in     eax,0xfb
  430d62:	mov    ebx,0xc4d94fcd
  430d68:	mov    esp,0x97044635
  430d6d:	and    BYTE PTR [ecx-0x7b],dh
  430d70:	dec    ebp
  430d71:	in     eax,dx
  430d72:	popa   
  430d73:	pop    ebp
  430d74:	pop    edi
  430d75:	add    ecx,eax
  430d77:	js     0x430d6b
  430d79:	ja     0x430daf
  430d7b:	push   ds
  430d7c:	outs   dx,BYTE PTR ds:[esi]
  430d7d:	push   edx
  430d7e:	fsub   DWORD PTR [ecx]
  430d80:	adc    eax,0x3f3d65d1
  430d85:	add    BYTE PTR [ebp-0x32319216],0x7f
  430d8c:	cmp    BYTE PTR [ecx+0x577c674b],ah
  430d92:	push   0x9ecb2f57
  430d97:	push   edx
  430d98:	dec    ebp
  430d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d9a:	jle    0x430e13
  430d9c:	retf   
  430d9d:	adc    edi,0x5a
  430da0:	pop    ecx
  430da1:	jns    0x430d38
  430da3:	dec    esi
  430da4:	xchg   ecx,eax
  430da5:	sahf   
  430da6:	add    cl,dh
  430da8:	test   BYTE PTR ds:0x243075fc,dl
  430dae:	and    al,0xd8
  430db0:	mov    DWORD PTR [ebp+0x5a8e3000],esi
  430db6:	nop
  430db7:	cmp    al,0x65
  430db9:	cld    
  430dba:	aaa    
  430dbb:	fsub   DWORD PTR [edx+0x41]
  430dbe:	int    0xc8
  430dc0:	or     eax,0x4123aa55
  430dc5:	fs jns 0x430d93
  430dc8:	loop   0x430e3d
  430dca:	adc    al,BYTE PTR [ebx-0xe]
  430dcd:	into   
  430dce:	add    edx,edx
  430dd0:	xchg   edi,eax
  430dd1:	mov    dl,0x9a
  430dd3:	stos   DWORD PTR es:[edi],eax
  430dd4:	scas   eax,DWORD PTR es:[edi]
  430dd5:	cmp    esp,DWORD PTR [ecx-0x47]
  430dd8:	jp     0x430e52
  430dda:	mov    dh,0x98
  430ddc:	sbb    ch,BYTE PTR ds:0x9334424f
  430de2:	or     eax,0x3179dc53
  430de7:	or     ch,dh
  430de9:	jle    0x430e1c
  430deb:	sbb    DWORD PTR [ebx],ecx
  430ded:	mov    bh,0x15
  430def:	repz sub edx,DWORD PTR [edi-0x6d7b827c]
  430df6:	xor    bh,BYTE PTR [esi]
  430df8:	or     DWORD PTR [ebx+edx*1-0x3f],esi
  430dfc:	and    BYTE PTR [edx-0x36],dl
  430dff:	repnz pop ebp
  430e01:	ror    DWORD PTR [eax+0x23],cl
  430e04:	pushf  
  430e05:	pop    ebx
  430e06:	xchg   edi,eax
  430e07:	sbb    al,0x2
  430e09:	pushf  
  430e0a:	mov    ebp,DWORD PTR [ebp+0xf4a9ad4]
  430e10:	mov    cl,bl
  430e12:	lea    esp,[edx+0x71]
  430e15:	rcl    DWORD PTR [eax+0x6f],cl
  430e18:	mov    ah,0xb1
  430e1a:	pop    ss
  430e1b:	inc    esp
  430e1c:	stos   DWORD PTR es:[edi],eax
  430e1d:	sbb    al,0x1d
  430e1f:	lahf   
  430e20:	jl     0x430ea0
  430e22:	mov    dh,dl
  430e24:	into   
  430e25:	dec    esp
  430e26:	hlt    
  430e27:	pop    ss
  430e28:	neg    BYTE PTR ds:0x86a31e2b
  430e2e:	adc    BYTE PTR [esi],ch
  430e30:	mov    edx,0xb41b1748
  430e35:	pop    ss
  430e36:	jg     0x430e21
  430e38:	cmc    
  430e39:	out    dx,eax
  430e3a:	dec    esi
  430e3b:	lods   eax,DWORD PTR ds:[esi]
  430e3c:	jne    0x430eab
  430e3e:	push   esi
  430e3f:	cmp    ecx,edx
	...
  430eb1:	add    BYTE PTR [eax],al
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430eb6
  430ec1:	push   ebp
  430ec2:	sbb    al,0x63
  430ec4:	mov    bl,0x3
  430ec6:	add    al,BYTE PTR [eax]
  430ec8:	cmc    
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR [ecx-0x2e],ch
  430ece:	jae    0x430e6b
  430ed0:	rcr    BYTE PTR [edx+0x1220f0a0],cl
  430ed6:	adc    eax,0x3f243675
  430edb:	mov    ?,eax
  430edd:	pop    edx
  430ede:	dec    ecx
  430edf:	mov    dl,0x3a
  430ee1:	sub    BYTE PTR [eax-0xd],ah
  430ee4:	adc    DWORD PTR [ebx+0x33e79c3d],0xffffff89
  430eeb:	add    BYTE PTR [ecx+0x19be301a],dh
  430ef1:	lods   eax,DWORD PTR ds:[esi]
  430ef2:	push   eax
  430ef3:	mov    esi,0xe258d063
  430ef8:	ins    DWORD PTR es:[edi],dx
  430ef9:	repz sbb eax,0xde6d6321
  430eff:	cs xor cl,dl
  430f02:	cmp    al,bl
  430f04:	pop    es
  430f05:	(bad)  
  430f06:	xor    DWORD PTR [edx],eax
  430f08:	mov    dh,0xde
  430f0a:	inc    ebp
  430f0b:	push   ss
  430f0c:	adc    DWORD PTR [eax+0x78cb4504],eax
  430f12:	jmp    0x430eac
  430f14:	push   ss
  430f15:	and    eax,0xaa78a5ad
  430f1a:	gs pop ss
  430f1c:	pop    eax
  430f1d:	inc    ebp
  430f1e:	and    dh,BYTE PTR [bx+si-0x9]
  430f22:	mov    BYTE PTR [edx],dl
  430f24:	or     eax,0xbd631916
  430f29:	push   esp
  430f2a:	add    cl,cl
  430f2c:	cli    
  430f2d:	jb     0x430f58
  430f2f:	or     cl,BYTE PTR [ecx-0x73]
  430f32:	sub    al,BYTE PTR [eax+0x543dd45b]
  430f38:	and    eax,0x2bf577b
  430f3d:	outs   dx,DWORD PTR ds:[esi]
  430f3e:	jmp    0x430f5f
  430f40:	pop    esp
  430f41:	aas    
  430f42:	and    eax,0xf0ee6743
  430f47:	or     al,BYTE PTR [eax+0x77f931c8]
  430f4d:	pop    ecx
  430f4e:	pop    edi
  430f4f:	pop    esi
  430f50:	push   edi
  430f51:	mov    al,ds:0xbdbc1aeb
  430f56:	mov    ebx,0x56bfaf50
  430f5b:	out    0x34,al
  430f5d:	or     BYTE PTR [edx+0x3dfe3ce7],0x1a
  430f64:	sbb    eax,0xfdb9ca32
  430f69:	(bad)  
  430f6a:	ret    0x99a3
  430f6d:	fst    QWORD PTR [edi]
  430f6f:	pushf  
  430f70:	and    al,0x5
  430f72:	gs jae 0x430f02
  430f75:	jmp    0x430fb3
  430f77:	call   0xaccbf632
  430f7c:	popf   
  430f7d:	clc    
  430f7e:	mov    edx,0xeb7cddc
  430f83:	mov    dh,0xa1
  430f85:	test   esp,edi
  430f87:	clc    
  430f88:	xchg   BYTE PTR [ebx+0x7358dee6],ch
  430f8e:	adc    DWORD PTR [eax],0xe4733aeb
  430f94:	mov    cl,0x98
  430f96:	xchg   ebx,eax
  430f97:	mov    bh,0xbe
  430f99:	xchg   ebp,eax
  430f9a:	mov    ecx,0x41f310ab
  430f9f:	enter  0xe9,0x7b
  430fa3:	test   BYTE PTR [ebx-0x19efd382],0xa7
  430faa:	shr    DWORD PTR [eax-0x31],1
  430fad:	rcr    DWORD PTR [ebp+0xbc0ca00],0x5c
  430fb4:	jl     0x430fc1
  430fb6:	adc    eax,0xf9b66f75
  430fbb:	test   ch,ah
  430fbd:	sahf   
  430fbe:	xor    esp,esi
  430fc0:	sbb    al,BYTE PTR [eax]
	...
  431032:	add    BYTE PTR [eax],al
  431034:	(bad)  
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	inc    esp
  431041:	sbb    al,dl
  431043:	jg     0x430fed
  431045:	add    al,0x2
  431047:	add    BYTE PTR [eax],bl
  431049:	add    BYTE PTR [eax],al
  43104b:	add    dl,bl
  43104d:	dec    edx
  43104e:	sbb    eax,0x6c2f7c91
  431053:	add    bh,dh
  431055:	outs   dx,DWORD PTR ds:[esi]
  431056:	(bad)  
  431057:	push   0xca9a9858
  43105c:	inc    esi
  43105d:	jno    0x4310be
  43105f:	or     ebp,0x56
  431062:	xlat   BYTE PTR ds:[ebx]
  431063:	lds    eax,FWORD PTR [eax]
	...
  4310b1:	add    BYTE PTR [eax],al
  4310b3:	add    BYTE PTR [ebp+0x55],cl
  4310b6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  4310bc:	mov    esp,ebp
  4310be:	or     al,ah
  4310c0:	dec    ebp
  4310c1:	add    bh,al
  4310c3:	add    BYTE PTR [eax],cl
  4310c5:	add    BYTE PTR [eax],al
  4310c7:	mov    DWORD PTR [eax],0x3ef44545
  4310cd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  4310d4:	retf   
  4310d5:	(bad)  
  4310d6:	enter  0x4d45,0xb8
  4310da:	mov    edi,DWORD PTR [ecx]
  4310dc:	hlt    
  4310dd:	test   ebx,ecx
  4310df:	pushf  
  4310e0:	enter  0x4df8,0x8b
  4310e4:	mov    DWORD PTR [ebp+0x8],0x894708
  4310eb:	inc    ebp
  4310ec:	mov    ebp,0xff8bfffc
  4310f1:	dec    ebp
  4310f2:	mov    ch,0xf4
  4310f4:	call   DWORD PTR [ebx-0x1]
  4310f7:	mov    ebx,0x8005122
  4310fc:	call   DWORD PTR [ecx+0x8]
  4310ff:	pop    es
  431100:	jmp    0xb8:0x9cb4533
  431107:	cdq    
  431108:	mov    esi,DWORD PTR [edx-0xc]
  43110b:	xor    al,bl
  43110d:	add    BYTE PTR [ecx+0x3c83203],bl
  431113:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431119:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43111f:	xor    eax,DWORD PTR [eax]
  431121:	retf   
  431122:	ret    
  431123:	add    eax,esi
  431125:	enter  0x8945,0x64
  431129:	dec    ebp
  43112a:	sbb    ah,cl
  43112c:	add    BYTE PTR [ebx-0xb87b277],cl
  431132:	dec    DWORD PTR [ebx-0xbcfb275]
  431138:	test   DWORD PTR [ebx],esi
  43113a:	dec    ebx
  43113c:	inc    DWORD PTR [ebx]
  43113e:	inc    eax
  43113f:	enter  0x8989,0x64
  431143:	(bad)  
  431144:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431148:	cld    
  431149:	dec    DWORD PTR [ebp-0xa90001]
  43114f:	push   edi
  431150:	mov    BYTE PTR [edx+0x1],ch
  431153:	and    BYTE PTR [eax],al
  431155:	pop    ecx
  431156:	inc    ebp
  431157:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43115d:	push   0xffffff89
  43115f:	pop    ecx
  431160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431161:	dec    ebp
  431162:	add    BYTE PTR [ecx+0x45fc088b],cl
  431168:	jne    0x4311b2
  43116a:	lea    eax,[eax]
  43116c:	fs (bad) 
  43116e:	dec    DWORD PTR [eax]
  431170:	mov    DWORD PTR [eax],eax
  431172:	test   al,0x0
  431174:	add    BYTE PTR [ebp-0x18],cl
  431177:	xor    ebp,DWORD PTR [edx]
  431179:	add    eax,DWORD PTR [eax]
  43117b:	mov    eax,eax
  43117d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431184:	inc    ebp
  431185:	mov    DWORD PTR [ebx+0x459408],ecx
  43118b:	popa   
  43118c:	mov    esp,DWORD PTR [ebp-0x75]
  43118f:	(bad)  
  431190:	cld    
  431191:	inc    eax
  431192:	cmp    bh,0x1
  431195:	lea    eax,[eax]
  431197:	and    BYTE PTR [eax],al
  431199:	inc    DWORD PTR [ecx-0x18]
  43119c:	mov    ecx,DWORD PTR [ebx]
  43119e:	cld    
  43119f:	add    BYTE PTR [ecx+0x75014d],cl
  4311a5:	(bad)  
  4311a6:	xchg   ebp,eax
  4311a7:	sar    bh,1
  4311a9:	inc    eax
  4311aa:	inc    DWORD PTR [eax]
  4311ac:	mov    eax,DWORD PTR [ebp-0x4]
  4311af:	xor    edx,DWORD PTR [edx+0x7201be]
  4311b5:	add    BYTE PTR [edx],dl
  4311b7:	(bad)  
  4311b8:	nop
  4311b9:	inc    ebp
  4311ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4311c0:	mov    al,0xff
  4311c2:	add    bh,bh
  4311c4:	add    BYTE PTR [ebx],dh
  4311c6:	inc    DWORD PTR [ebx]
  4311c8:	sbb    al,0x89
  4311ca:	jne    0x4311a8
  4311cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4311d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4311d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4311df:	inc    DWORD PTR [ebp-0x75]
  4311e2:	(bad)  [esi+ebp*8]
  4311e5:	test   DWORD PTR [esi-0x1],esp
  4311e8:	inc    ebp
  4311e9:	(bad)  
  4311ea:	aas    
  4311eb:	inc    ebp
  4311ec:	(bad)  
  4311ed:	lea    edi,[eax+edi*2-0x1]
  4311f1:	inc    edi
  4311f3:	mov    DWORD PTR [ecx],edi
  4311f5:	mov    al,ds:0x8b8000c7
  4311fa:	call   0x45d0f4fb
  4311ff:	(bad)  
  431200:	out    dx,al
  431201:	(bad)  
  431202:	fisttp WORD PTR [eax+0x8801c7]
  431208:	jecxz  0x43124f
  43120a:	call   0xe83f580e
  43120f:	lea    edi,[edi]
  431211:	(bad)  
  431212:	call   0xcb3d16
  431217:	add    DWORD PTR [ebx-0x7f570400],ecx
  43121d:	add    BYTE PTR [ecx],al
  43121f:	test   DWORD PTR [eax],eax
  431221:	wrmsr  
  431223:	jae    0x431212
  431225:	add    BYTE PTR [eax],al
  431227:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43122d:	add    esp,edi
  43122f:	add    BYTE PTR [eax+0x450108],al
  431235:	mov    edi,DWORD PTR [ebp-0x6c]
  431238:	add    DWORD PTR [eax],0x4
  43123b:	mov    eax,DWORD PTR [ebp+0x3]
  43123e:	mov    edi,DWORD PTR [esp+edi*8]
  431241:	dec    ebp
  431242:	nop
  431243:	mov    eax,DWORD PTR [ecx]
  431245:	fadd   DWORD PTR [eax]
  431247:	add    BYTE PTR [esi],al
  431249:	lea    eax,[eax]
  43124b:	pusha  
  43124c:	push   eax
  43124d:	inc    DWORD PTR [ebp+0x52]
  431250:	call   DWORD PTR [ebp-0x7b]
  431253:	mov    esi,DWORD PTR [ebp-0x74]
  431256:	mov    eax,DWORD PTR [eax]
  431258:	cld    
  431259:	mov    eax,DWORD PTR [eax+0x880103]
  43125f:	add    BYTE PTR [ebp+0x6a],bh
  431262:	cmp    edi,0x10
  431265:	mov    WORD PTR [ebp+0x0],es
  431268:	mov    edx,DWORD PTR [edx-0x4]
  43126b:	push   ecx
  43126c:	nop
  43126d:	inc    DWORD PTR [ecx]
  43126f:	cld    
  431270:	add    BYTE PTR [ebp-0x24],bh
  431273:	mov    eax,DWORD PTR [eax]
  431275:	cld    
  431276:	push   eax
  431277:	nop
  431278:	inc    ebp
  431279:	add    edi,edi
  43127b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431281:	jmp    0xe33b:0x9403c733
  431288:	movntq QWORD PTR [esi],mm6
  43128b:	mov    DWORD PTR [eax],0xb87e8b98
  431291:	test   ebx,eax
  431293:	jmp    DWORD PTR [edi-0x1]
  431296:	int    0xe9
  431298:	sub    esp,esi
  43129a:	add    eax,DWORD PTR [ebp-0x30]
  43129d:	fild   WORD PTR [ebp+0x3f]
  4312a0:	cmp    eax,edi
  4312a2:	je     0xcc43f8c4
  4312a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4312af:	(bad)  
  4312b0:	jne    0x43123e
  4312b2:	mov    ebx,ecx
  4312b4:	cld    
  4312b5:	jle    0x4312fc
  4312b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4312bd:	inc    ebp
  4312be:	call   0xeb3c4e
  4312c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4312c9:	add    DWORD PTR es:[eax],eax
  4312cc:	add    al,al
  4312ce:	xor    BYTE PTR [eax+0x41],dl
  4312d1:	inc    ebp
  4312d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4312d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4312de:	add    DWORD PTR [ecx+0x458be845],ecx
  4312e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4312ea:	cld    
  4312eb:	call   0xd83db0
  4312f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4312f6:	add    al,al
  4312f8:	push   eax
  4312f9:	es inc ebp
  4312fb:	inc    ebp
  4312fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431302:	dec    DWORD PTR [ebx-0x3ff70301]
  431308:	mov    DWORD PTR gs:[eax],eax
  43130b:	call   0x8b6b58d0
  431310:	inc    ebp
  431311:	mov    eax,0xe8d8008b
  431316:	add    BYTE PTR [ecx],ch
  431318:	mov    eax,DWORD PTR [eax]
  43131a:	cld    
  43131b:	mov    eax,eax
  43131d:	call   0x462b2377
  431322:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431328:	cld    
  431329:	mov    BYTE PTR [eax+0x8401c1],0x1
  431330:	xor    BYTE PTR [eax],al
  431332:	push   edi
  431333:	inc    ebp
  431334:	mov    DWORD PTR [ebx],esi
  431336:	in     al,0xb9
  431338:	inc    ebp
  431339:	lea    ecx,[ebx-0x3c370301]
  43133f:	dec    ebp
  431340:	cdq    
  431341:	mov    esi,DWORD PTR [edx]
  431343:	or     BYTE PTR [ebx],al
  431345:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43134c:	call   0x433c96
  431351:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431357:	jge    0x43138c
  431359:	mov    eax,DWORD PTR [ebx]
  43135b:	cld    
  43135c:	lea    edx,[eax+0xff0120]
  431362:	call   0x433cf6
  431367:	push   eax
  431368:	inc    DWORD PTR [ebp-0x1c]
  43136b:	mov    ecx,DWORD PTR [ebp-0x58]
  43136e:	xor    eax,DWORD PTR [eax]
  431370:	add    edi,edi
  431372:	cmp    ebp,eax
  431374:	jne    0x43139c
  431376:	mov    DWORD PTR [eax],0x8b004dd8
  43137c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431383:	mov    eax,ebx
  431385:	cld    
  431386:	test   BYTE PTR [eax+0x320199],bh
  43138c:	mov    DWORD PTR [ebp+0x8],esi
  43138f:	xor    eax,DWORD PTR [ebp-0x73]
  431392:	test   DWORD PTR [esp+esi*2-0x1],edi
  431396:	mov    ebp,eax
  431398:	mov    eax,0x33004d29
  43139d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4313a3:	add    DWORD PTR [eax],eax
  4313a5:	add    BYTE PTR [ebp+0x30],al
  4313a8:	mov    edx,DWORD PTR [edi-0x48]
  4313ab:	add    ebx,0xffffffe4
  4313ae:	addr16 test ebp,ecx
  4313b1:	je     0x4313de
  4313b3:	mov    eax,DWORD PTR [ebx]
  4313b5:	cld    
  4313b6:	sar    BYTE PTR [eax+0x3b0145],1
  4313bc:	pcmpeqw mm4,mm6
  4313bf:	xor    edi,edi
  4313c1:	lea    ecx,[ebx-0x239c7470]
  4313c7:	add    BYTE PTR [ebp+0x50],cl
  4313ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4313cd:	mov    ebp,DWORD PTR [eax-0x68]
  4313d0:	test   DWORD PTR [eax],eax
  4313d2:	clc    
  4313d3:	push   DWORD PTR [ebp-0x1]
  4313d6:	lea    ecx,[eax]
  4313d8:	int3   
  4313d9:	inc    ebp
  4313da:	call   0xfb446a
  4313df:	jne    0x4313d9
  4313e1:	xor    edi,DWORD PTR [ebp-0x41]
  4313e4:	jmp    0x431458
  4313e6:	mov    eax,DWORD PTR [eax]
  4313e8:	mov    eax,0x339545c7
  4313ed:	inc    DWORD PTR [ebx]
  4313ef:	push   DWORD PTR [ecx]
  4313f1:	aaa    
  4313f2:	mov    eax,DWORD PTR [eax]
  4313f4:	jmp    0x431446
  4313f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4313f9:	mov    eax,eax
  4313fb:	cld    
  4313fc:	clc    
  4313fd:	ret    
  4313fe:	test   bh,al
  431400:	pop    es
  431401:	xchg   ebp,eax
  431402:	add    bh,bh
  431404:	inc    ebp
  431405:	dec    DWORD PTR [edi]
  431407:	and    DWORD PTR [ebx],ebp
  431409:	add    BYTE PTR [eax],al
  43140b:	push   eax
  43140c:	jbe    0x431463
  43140e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431414:	or     al,0xcf
  431416:	inc    eax
  431417:	enter  0x745,0x72
  43141b:	inc    ebp
  43141c:	mov    eax,DWORD PTR [ecx]
  43141e:	int3   
  43141f:	add    BYTE PTR [ebp-0x75],al
  431422:	ss mov eax,0x33c74d9c
  431428:	ror    BYTE PTR [ebp+0x72f80885],1
  43142e:	inc    ebp
  43142f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431435:	fadd   st,st(6)
  431437:	rol    BYTE PTR [ebp+0x12],0x8b
  43143b:	inc    ebp
  43143c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431442:	inc    ebp
  431443:	test   bh,al
  431445:	cdq    
  431446:	clc    
  431447:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43144d:	inc    ebp
  43144e:	cmp    BYTE PTR [ebx],dh
  431450:	pushf  
  431451:	mov    ecx,0xffb48dc7
  431456:	test   eax,ecx
  431458:	clc    
  431459:	dec    ebp
  43145a:	inc    ebp
  43145b:	mov    edi,DWORD PTR [edx]
  43145d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431464:	test   edi,edi
  431466:	clc    
  431467:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43146e:	(bad)  
  43146f:	enter  0x18e8,0x85
  431473:	ss clc 
  431475:	pushf  
  431476:	inc    ebp
  431477:	dec    DWORD PTR [ebx-0x3cba0f04]
  43147d:	push   eax
  43147e:	xabort 0x7d
  431481:	add    BYTE PTR [ebx],bh
  431483:	mov    ecx,DWORD PTR [edi]
  431485:	mov    DWORD PTR [eax],ebx
  431487:	les    eax,FWORD PTR [eax]
  431489:	adc    ebp,ecx
  43148b:	dec    ebp
  43148c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431492:	mov    ecx,esi
  431494:	lock or al,cl
  431497:	clc    
  431498:	inc    ebp
  431499:	add    esi,DWORD PTR [ebx]
  43149b:	jge    0x4314a0
  43149d:	xor    edi,DWORD PTR [ebx]
  43149f:	cmp    ecx,DWORD PTR [edi]
  4314a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4314a6:	mov    edi,DWORD PTR [ecx]
  4314a8:	test   al,0xcc
  4314aa:	dec    ebp
  4314ab:	test   BYTE PTR [ebx],dh
  4314ad:	pop    es
  4314ae:	xor    eax,DWORD PTR [eax]
  4314b0:	add    ecx,DWORD PTR [esi]
  4314b2:	add    ecx,eax
  4314b4:	psraw  mm0,mm1
  4314b7:	sub    BYTE PTR [ebp+0x38],cl
  4314ba:	mov    edi,DWORD PTR [ebx]
  4314bc:	lock int3 
  4314be:	shl    edx,1
  4314c0:	rol    BYTE PTR [ebp+0xc],1
  4314c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4314ca:	jmp    0x7c1514
  4314cf:	pushf  
  4314d0:	inc    ebp
  4314d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4314d7:	xor    ecx,ebx
  4314d9:	add    ecx,esi
  4314db:	mov    esi,eax
  4314dd:	enter  0x45af,0x8b
  4314e1:	xor    ecx,eax
  4314e3:	add    edx,DWORD PTR [ebp-0x77]
  4314e6:	sub    ecx,DWORD PTR [eax]
  4314e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4314eb:	(bad)  
  4314ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4314f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4314f9:	cmp    esi,DWORD PTR [ebx]
  4314fb:	pushf  
  4314fc:	xor    eax,edi
  4314fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431505:	inc    ebp
  431506:	dec    ebp
  431507:	cmp    eax,0xc7f09c8b
  43150c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431513:	inc    ebp
  431514:	jmp    0x431555
  431516:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43151d:	dec    ebp
  43151e:	xor    esi,DWORD PTR [ebx]
  431520:	add    eax,DWORD PTR [ebx]
  431522:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431528:	dec    ebp
  431529:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43152f:	out    dx,eax
  431530:	rol    BYTE PTR [eax],1
  431532:	add    eax,0xebc8458b
  431537:	dec    ebp
  431538:	mov    ebp,DWORD PTR [ebx]
  43153a:	mov    esp,0x33f84d8b
  43153f:	ret    
  431540:	xor    eax,esi
  431542:	add    ecx,eax
  431544:	add    eax,DWORD PTR [edx+0xc1010f]
  43154a:	dec    ebp
  43154b:	inc    ebp
  43154c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431552:	ror    bl,1
  431554:	add    eax,0xebc645ce
  431559:	scas   eax,DWORD PTR es:[edi]
  43155a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431560:	xor    ebp,DWORD PTR [ebx]
  431562:	xor    edi,DWORD PTR [ebx]
  431564:	add    esi,DWORD PTR [edi+0x3]
  431567:	mov    ecx,DWORD PTR [edi]
  431569:	clc    
  43156a:	rol    ebx,0x4d
  43156d:	(bad)  
  43156e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431575:	mov    ah,0x45
  431577:	dec    ebp
  431578:	jbe    0x4315ad
  43157a:	mov    esi,DWORD PTR [ebx]
  43157c:	call   0x33466284
  431581:	rdpmc  
  431583:	rol    DWORD PTR [ebx],0x4d
  431586:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43158c:	inc    ebp
  43158d:	ror    BYTE PTR [ebx+0x45450808],1
  431593:	jmp    0x10b1623
  431598:	inc    ebp
  431599:	inc    ebp
  43159a:	(bad)  
  43159b:	mov    ebx,eax
  43159d:	clc    
  43159e:	test   ebx,eax
  4315a0:	clc    
  4315a1:	retf   
  4315a2:	inc    ebp
  4315a3:	into   
  4315a4:	mov    esi,0x8b85afec
  4315aa:	clc    
  4315ab:	enter  0x5545,0x38
  4315af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4315b6:	ret    
  4315b7:	mov    ah,0xc6
  4315b9:	addr16 push 0x338b4545
  4315bf:	clc    
  4315c0:	add    eax,ebx
  4315c2:	loopne 0x43158f
  4315c4:	dec    ebp
  4315c5:	into   
  4315c6:	mov    al,dh
  4315c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4315ce:	inc    ebp
  4315cf:	push   ebp
  4315d0:	mov    ebp,DWORD PTR [ebx]
  4315d2:	in     al,dx
  4315d3:	cmp    eax,ebx
  4315d5:	ja     0x43161c
  4315d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4315dd:	inc    ebp
  4315de:	cdq    
  4315df:	mov    esi,DWORD PTR [edx]
  4315e1:	clc    
  4315e2:	mov    bl,al
  4315e4:	xlat   BYTE PTR ds:[ebx]
  4315e5:	retf   
  4315e6:	inc    ebp
  4315e7:	into   
  4315e8:	mov    eax,esi
  4315ea:	in     al,dx
  4315eb:	scas   eax,DWORD PTR es:[edi]
  4315ec:	retf   
  4315ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4315f0:	mov    edx,DWORD PTR [ebp-0x24]
  4315f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4315fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431601:	mov    eax,DWORD PTR [ebx]
  431603:	clc    
  431604:	loopne 0x4315c9
  431606:	push   ebp
  431607:	retf   
  431608:	mov    dh,al
  43160a:	adc    esi,ecx
  43160c:	jb     0x4315bd
  43160e:	add    BYTE PTR [ebx+0x558bc845],cl
  431614:	in     al,dx
  431615:	sub    eax,ebx
  431617:	cmp    ecx,ebx
  431619:	mov    eax,esi
  43161b:	mov    esp,0x45af03ce
  431620:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431626:	mov    eax,ebx
  431628:	in     al,dx
  431629:	into   
  43162a:	dec    ebp
  43162b:	(bad)  
  43162c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431632:	rol    DWORD PTR [ebp+0x4d],0x89
  431636:	xor    esp,esp
  431638:	sub    eax,DWORD PTR [ebp-0x75]
  43163b:	add    ebp,esp
  43163d:	mov    al,0x55
  43163f:	inc    ebp
  431640:	xor    esi,DWORD PTR [esi]
  431642:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431649:	inc    ebp
  43164a:	xor    edi,DWORD PTR [ecx]
  43164c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431653:	test   DWORD PTR [eax],eax
  431655:	clc    
  431656:	enter  0x8645,0x33
  43165a:	inc    DWORD PTR [ebx]
  43165c:	(bad)  
  43165d:	jmp    0x4316a4
  43165f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431665:	inc    ebp
  431666:	(bad)  
  431667:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43166d:	cdq    
  43166e:	retf   
  43166f:	xor    al,cl
  431671:	mov    BYTE PTR [ebp+0xb],cl
  431674:	lea    eax,[ebp+0x8]
  431677:	xor    esi,DWORD PTR [edx+0x3]
  43167a:	add    al,ah
  43167c:	inc    ebp
  43167d:	dec    ebp
  43167e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431684:	addr16 add ch,cl
  431687:	inc    ebp
  431688:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43168e:	inc    ebp
  43168f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431695:	push   ebp
  431696:	(bad)  
  431697:	mov    BYTE PTR [edi+0xf723b11],ch
  43169d:	add    ch,ch
  43169f:	inc    ebp
  4316a0:	dec    DWORD PTR [ebx-0x34332775]
  4316a6:	add    al,0x4d
  4316a8:	inc    ebp
  4316a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4316af:	cdq    
  4316b0:	add    DWORD PTR [edx],esi
  4316b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4316b8:	push   DWORD PTR [ebx]
  4316ba:	int3   
  4316bb:	xor    eax,DWORD PTR [eax]
  4316bd:	add    edx,DWORD PTR [eax+0x3]
  4316c0:	mov    DWORD PTR [edi],ecx
  4316c2:	call   0x4288d788
  4316c7:	mov    DWORD PTR [ebp-0x20],esp
  4316ca:	add    BYTE PTR [ebp+0x7d],al
  4316cd:	mov    eax,DWORD PTR [eax]
  4316cf:	in     al,0x15
  4316d1:	ret    
  4316d2:	iret   
  4316d3:	(bad)  
  4316d4:	enter  0x14af,0x8b
  4316d8:	(bad)  
  4316d9:	in     al,dx
  4316da:	or     bl,cl
  4316dc:	adc    cl,al
  4316de:	push   ebp
  4316df:	dec    ebp
  4316e0:	inc    eax
  4316e1:	mov    edx,DWORD PTR [ebp-0x20]
  4316e4:	jb     0x4316b1
  4316e6:	mov    ecx,esi
  4316e8:	cld    
  4316e9:	scas   eax,DWORD PTR es:[edi]
  4316ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4316f1:	mov    BYTE PTR [eax],0x8c
  4316f4:	push   0xffffff99
  4316f6:	push   edi
  4316f7:	xor    dl,BYTE PTR [eax+0x3b]
  4316fa:	mov    ecx,DWORD PTR [edi]
  4316fc:	call   0x8c425c5f
  431701:	mov    eax,eax
  431703:	in     al,dx
  431704:	jge    0x431753
  431706:	mov    DWORD PTR [ebx],esi
  431708:	int3   
  431709:	add    eax,DWORD PTR [ebp+0xf]
  43170c:	xor    eax,ecx
  43170e:	(bad)  
  43170f:	dec    ebp
  431710:	pushf  
  431711:	xor    ecx,esi
  431713:	add    edi,DWORD PTR [edi]
  431715:	mov    eax,DWORD PTR [ebp-0x38]
  431718:	(bad)  
  431719:	test   dh,dl
  43171b:	cdq    
  43171c:	add    esi,DWORD PTR [edx]
  43171e:	jmp    0x4316a9
  431720:	mov    cl,al
  431722:	add    eax,0x14330f45
  431727:	mov    ecx,0xff448d80
  43172c:	jmp    0xc99026f9
  431731:	mov    edx,ecx
  431733:	rol    BYTE PTR [ebp+0x330155],1
  431739:	add    ecx,DWORD PTR [ebp+0xf]
  43173c:	xor    eax,edx
  43173e:	(bad)  
  43173f:	ror    DWORD PTR [eax],0x86
  431742:	jb     0x431741
  431744:	add    bh,bh
  431746:	clc    
  431747:	inc    ebp
  431748:	jb     0x4317b4
  43174a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431750:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431758:	ret    
  431759:	xor    al,bh
  43175b:	add    BYTE PTR [ebp+0x75],al
  43175e:	ss push 0xffffff9c
  431761:	inc    edi
  431763:	adc    al,0xe8
  431765:	inc    ebp
  431766:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43176c:	mov    ecx,DWORD PTR [eax]
  43176e:	cld    
  43176f:	or     DWORD PTR [ebp-0x34],0x33
  431773:	jbe    0x431778
  431775:	mov    edx,DWORD PTR [ecx+0x2b]
  431778:	dec    ebp
  431779:	mov    cl,BYTE PTR [ebx+0x45d801]
  43177f:	mov    BYTE PTR [ebx],dh
  431781:	mov    eax,DWORD PTR [ebx]
  431783:	or     BYTE PTR [ecx+0x3b],dl
  431786:	dec    ebp
  431787:	int3   
  431788:	xor    ebp,edi
  43178a:	add    eax,DWORD PTR [ebp+0x51]
  43178d:	mov    ecx,DWORD PTR [ebp-0x28]
  431790:	xor    eax,DWORD PTR [eax]
  431792:	add    ebp,DWORD PTR [eax+0x51]
  431795:	adc    BYTE PTR [eax+0x0],0x8b
  431799:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43179f:	inc    ebp
  4317a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4317a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4317ac:	dec    ebp
  4317ad:	mov    esi,DWORD PTR [ebx]
  4317af:	hlt    
  4317b0:	add    eax,ebx
  4317b2:	push   ecx
  4317b3:	inc    ebp
  4317b4:	dec    ebp
  4317b5:	(bad)  
  4317b6:	call   esi
  4317b8:	in     al,0xc7
  4317ba:	retf   
  4317bb:	mov    al,ds:0xc1ff39ce
  4317c0:	adc    al,0xc6
  4317c2:	inc    ebp
  4317c3:	and    eax,0x9c0f4c85
  4317c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4317cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4317d3:	mov    dh,0xc7
  4317d5:	cmp    eax,eax
  4317d7:	jne    0x45441023
  4317dd:	mov    edi,DWORD PTR [eax]
  4317df:	mov    eax,0x848bcb9c
  4317e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4317eb:	or     BYTE PTR [edi],cl
  4317ed:	(bad)  
  4317ee:	dec    ebp
  4317ef:	inc    edi
  4317f0:	add    bh,0x51
  4317f3:	or     cl,ch
  4317f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4317fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431801:	mov    esp,0xf802b588
  431806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431807:	inc    ebp
  431808:	(bad)  
  431809:	cmp    bh,bh
  43180b:	pushf  
  43180c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431813:	mov    ecx,DWORD PTR [ebp-0x340018]
  431819:	into   
  43181a:	dec    DWORD PTR [ebx-0x7f72431c]
  431820:	push   0x5000ff01
  431825:	retf   
  431826:	inc    ebp
  431827:	into   
  431828:	dec    DWORD PTR [ebx-0x343f3ff4]
  43182e:	push   eax
  43182f:	into   
  431830:	call   0x4b1cc0
  431835:	retf   
  431836:	add    dh,cl
  431838:	add    bh,bh
  43183a:	mov    DWORD PTR [eax+ecx*1],edx
  43183d:	clc    
  43183e:	inc    ebp
  43183f:	inc    ebp
  431840:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431846:	push   0x1
  431848:	push   edi
  431849:	add    BYTE PTR [eax-0x35],dl
  43184c:	mov    ecx,esi
  43184e:	cld    
  43184f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431855:	into   
  431856:	ror    BYTE PTR [ebx+0x75000800],0x50
  43185d:	xor    eax,DWORD PTR [ebp+0x3]
  431860:	jne    0x4318b3
  431862:	call   DWORD PTR [eax-0x3c]
  431865:	mov    DWORD PTR [ecx-0x18],edx
  431868:	mov    edi,edi
  43186a:	call   0x8b465df3
  43186f:	add    ah,ah
  431871:	rol    BYTE PTR [ebp-0x7c],0xeb
  431875:	add    edi,edi
  431877:	add    al,ch
  431879:	inc    ebp
  43187a:	push   ecx
  43187b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431881:	mov    al,0xc7
  431883:	test   esp,esp
  431885:	clc    
  431886:	test   DWORD PTR [ebp-0x8],ecx
  431889:	add    BYTE PTR [ebp+0x51],0x39
  43188d:	jmp    0x8bcca12e
  431892:	in     al,dx
  431893:	or     BYTE PTR [ebp-0xf],al
  431896:	xor    eax,DWORD PTR [eax+0x4f896703]
  43189c:	hlt    
  43189d:	mov    eax,DWORD PTR [ebp-0x50]
  4318a0:	xor    esi,ecx
  4318a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4318a8:	inc    ebp
  4318a9:	adc    esi,0x68
  4318ac:	pushf  
  4318ad:	inc    edi
  4318af:	add    al,ch
  4318b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318b2:	test   edi,edi
  4318b4:	clc    
  4318b5:	inc    DWORD PTR [ebp-0x73]
  4318b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4318bc:	(bad)  
  4318bd:	push   ecx
  4318be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318bf:	jne    0x431846
  4318c1:	push   eax
  4318c2:	clc    
  4318c3:	test   DWORD PTR [ebp-0x1],eax
  4318c6:	cmp    eax,0xc78b9cff
  4318cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4318d2:	inc    ebp
  4318d3:	push   edi
  4318d4:	aas    
  4318d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4318dc:	dec    ebp
  4318dd:	add    BYTE PTR [ebx],dh
  4318df:	inc    ebp
  4318e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4318e6:	enter  0x8401,0x0
  4318ea:	add    al,BYTE PTR [eax]
  4318ec:	add    bh,bh
  4318ee:	out    dx,eax
  4318ef:	sbb    BYTE PTR [eax],al
  4318f1:	dec    ebp
  4318f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4318f8:	sub    esi,DWORD PTR [ebx]
  4318fa:	mov    ebp,DWORD PTR [eax-0x8]
  4318fd:	add    bl,0x0
  431900:	(bad)  
  431901:	cmp    eax,ecx
  431903:	or     BYTE PTR [edx+0x750114],al
  431909:	inc    DWORD PTR [ebp+0x18]
  43190c:	mov    eax,DWORD PTR [ebp-0x8]
  43190f:	mov    ebx,eax
  431911:	(bad)  
  431912:	retf   
  431913:	inc    ebp
  431914:	into   
  431915:	mov    esi,eax
  431917:	int3   
  431918:	scas   eax,DWORD PTR es:[edi]
  431919:	push   es
  43191a:	mov    esi,DWORD PTR [ebp-0xc]
  43191d:	call   DWORD PTR [ebp+0x18]
  431920:	sub    edi,DWORD PTR [ebp+0x3b]
  431923:	mov    esi,DWORD PTR [edi-0x34]
  431926:	mov    eax,DWORD PTR [ebp-0x8]
  431929:	ss ret 
  43192b:	pushf  
  43192c:	mov    bh,0xbc
  43192f:	fadd   QWORD PTR [eax]
  431931:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431937:	mov    esi,DWORD PTR [ebx]
  431939:	in     al,0x33
  43193b:	ret    
  43193c:	add    eax,esi
  43193e:	add    eax,DWORD PTR [ebp+0xf]
  431941:	mov    eax,ecx
  431943:	in     al,0x4d
  431945:	ret    
  431946:	mov    eax,esi
  431948:	in     al,dx
  431949:	inc    ebp
  43194a:	rol    edi,1
  43194c:	sar    al,1
  43194e:	or     BYTE PTR [ebp+0x45e9f845],al
  431954:	add    BYTE PTR [eax],bh
  431956:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43195d:	test   ebx,eax
  43195f:	clc    
  431960:	retf   
  431961:	inc    ebp
  431962:	into   
  431963:	cmp    al,dh
  431965:	pushf  
  431966:	scas   eax,DWORD PTR es:[edi]
  431967:	(bad)  
  431968:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43196f:	inc    ebp
  431970:	cmp    edi,DWORD PTR [edi+esi*2]
  431973:	pushf  
  431974:	mov    eax,edi
  431976:	mov    esp,0x458567a8
  43197b:	clc    
  43197c:	mov    eax,DWORD PTR [ebp-0x8]
  43197f:	mov    eax,ebx
  431981:	in     al,dx
  431982:	retf   
  431983:	ret    
  431984:	into   
  431985:	mov    dh,0x7d
  431988:	scas   eax,DWORD PTR es:[edi]
  431989:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43198f:	add    BYTE PTR [ebx],ch
  431991:	jmp    0xba1ad1
  431996:	mov    eax,DWORD PTR [ebp-0x5c]
  431999:	mov    eax,DWORD PTR [ebp-0x14]
  43199c:	inc    ebp
  43199d:	enter  0x458b,0xf8
  4319a1:	xor    eax,ebx
  4319a3:	add    ecx,ebx
  4319a5:	cmp    ecx,esi
  4319a7:	shufps xmm7,xmm4,0xaf
  4319ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4319b1:	dec    ebp
  4319b2:	sub    esi,DWORD PTR [ebx]
  4319b4:	cmp    esi,DWORD PTR [ebx]
  4319b6:	ja     0x4319bb
  4319b8:	mov    eax,DWORD PTR [ebx]
  4319ba:	lods   al,BYTE PTR ds:[esi]
  4319bb:	mov    db0,ecx
  4319be:	inc    ebp
  4319bf:	dec    ebp
  4319c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4319c6:	retf   
  4319c7:	rol    dh,1
  4319c9:	or     al,0xce
  4319cb:	inc    ebp
  4319cc:	scas   eax,DWORD PTR es:[edi]
  4319cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4319d3:	add    BYTE PTR [ebx],ch
  4319d5:	add    BYTE PTR [ebx],bh
  4319d7:	inc    ebp
  4319d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4319de:	inc    ebp
  4319df:	retf   
  4319e0:	mov    ecx,esi
  4319e2:	clc    
  4319e3:	(bad)  
  4319e4:	retf   
  4319e5:	scas   eax,DWORD PTR es:[edi]
  4319e6:	ret    
  4319e7:	mov    ecx,esi
  4319e9:	hlt    
  4319ea:	(bad)  
  4319eb:	push   ebp
  4319ec:	scas   eax,DWORD PTR es:[edi]
  4319ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4319f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4319f9:	add    BYTE PTR [ebx],al
  4319fb:	mov    eax,eax
  4319fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319fe:	inc    ebp
  4319ff:	dec    ebp
  431a00:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a08:	inc    ebp
  431a09:	(bad)  
  431a0b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a13:	sar    eax,1
  431a15:	rol    BYTE PTR [ebp+0x5],1
  431a18:	xor    eax,DWORD PTR [ebp+0x3]
  431a1b:	jmp    0x431a08
  431a1d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431a23:	xor    eax,DWORD PTR [ebp+0x33]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	rol    BYTE PTR [ebx],1
  431a2a:	test   BYTE PTR [edi],cl
  431a2c:	cdq    
  431a2d:	shl    DWORD PTR [edx],0x4d
  431a30:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431a36:	xor    edx,eax
  431a38:	add    eax,DWORD PTR ds:0xeb4d45e0
  431a3e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431a44:	add    BYTE PTR [ebx],dh
  431a46:	inc    ebp
  431a47:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431a4d:	rdpmc  
  431a4f:	rol    DWORD PTR [ebx],0x4d
  431a52:	loopne 0x4319df
  431a54:	push   ebp
  431a55:	in     al,dx
  431a56:	mov    cl,dl
  431a58:	adc    eax,edx
  431a5a:	jb     0x431a61
  431a5c:	add    BYTE PTR [ebp+0x45],al
  431a5f:	jmp    0x4319ec
  431a61:	mov    ebx,eax
  431a63:	test   al,0xcb
  431a65:	dec    ebp
  431a66:	dec    ebp
  431a67:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431a6d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431a73:	dec    ebp
  431a74:	mov    al,0x8b
  431a76:	dec    ebp
  431a77:	in     al,dx
  431a78:	xor    edx,ecx
  431a7a:	xor    edx,eax
  431a7c:	add    eax,DWORD PTR [ebp+0x3]
  431a7f:	jbe    0x431a90
  431a81:	mov    eax,ecx
  431a83:	test   al,0x45
  431a85:	dec    ebp
  431a86:	mov    DWORD PTR [ebx],esi
  431a88:	loopne 0x431abd
  431a8a:	inc    ebp
  431a8b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431a91:	rol    esi,0x45
  431a94:	scas   eax,DWORD PTR es:[edi]
  431a95:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431a9b:	mov    eax,ecx
  431a9d:	hlt    
  431a9e:	dec    ebp
  431a9f:	inc    ebp
  431aa0:	mov    eax,edi
  431aa2:	loopne 0x431a7c
  431aa4:	retf   
  431aa5:	test   esi,ecx
  431aa7:	clc    
  431aa8:	scas   eax,DWORD PTR es:[edi]
  431aa9:	inc    ebp
  431aaa:	mov    eax,edi
  431aac:	fdiv   st,st(0)
  431aae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431ab4:	cdq    
  431ab5:	cmp    BYTE PTR [edx],dh
  431ab7:	pushf  
  431ab8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431abe:	inc    esi
  431ac0:	mov    ebp,DWORD PTR [eax-0x10]
  431ac3:	inc    ebp
  431ac4:	dec    ebp
  431ac5:	xor    esi,DWORD PTR [ebx]
  431ac7:	add    eax,DWORD PTR [ebx]
  431ac9:	loopne 0x431ada
  431acb:	dec    ebp
  431acc:	ror    DWORD PTR [edx+0x7233084d],0x3
  431ad3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431ad9:	lock cdq 
  431adb:	ret    
  431adc:	xor    al,BYTE PTR [ebp-0x77]
  431adf:	mov    esi,esp
  431ae1:	rol    BYTE PTR [ebp-0x7c],1
  431ae4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431aea:	call   edi
  431aec:	enter  0x4d45,0x8b
  431af0:	mov    esi,eax
  431af2:	fmul   st(3),st
  431af4:	push   ebp
  431af5:	dec    ebp
  431af6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431afc:	ret    0xc199
  431aff:	xor    al,BYTE PTR [esi-0x280276]
  431b05:	dec    ebp
  431b06:	jne    0x431b3b
  431b08:	mov    eax,DWORD PTR [ebx]
  431b0a:	cld    
  431b0b:	loopne 0x431abd
  431b0d:	push   ebp
  431b0e:	add    DWORD PTR [eax+0x72851100],ecx
  431b14:	inc    DWORD PTR [eax]
  431b16:	inc    DWORD PTR [ebp-0x75]
  431b19:	mov    edi,esp
  431b1b:	lock add bl,0x1
  431b1f:	retf   
  431b20:	add    dh,al
  431b22:	xor    dh,cl
  431b24:	inc    ebp
  431b25:	scas   eax,DWORD PTR es:[edi]
  431b26:	mov    eax,DWORD PTR [ebx]
  431b28:	shl    al,0x0
  431b2b:	inc    ebp
  431b2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431b32:	call   0x462d6a
  431b37:	ud0    eax,ecx
  431b3a:	adc    al,0x4d
  431b3c:	inc    ebp
  431b3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431b43:	lock push 0x338055
  431b49:	add    eax,DWORD PTR [eax]
  431b4b:	ud0    ecx,edx
  431b4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431b51:	xor    ecx,ecx
  431b53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431b5a:	push   ecx
  431b5b:	add    BYTE PTR [ebp-0x38],cl
  431b5e:	mov    DWORD PTR [esi-0x740004],eax
  431b64:	cld    
  431b65:	inc    ebp
  431b66:	nop
  431b67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431b6d:	xabort 0xaf
  431b70:	icebp  
  431b71:	mov    esi,DWORD PTR [ebp-0x28]
  431b74:	(bad)  
  431b75:	retf   
  431b76:	or     ecx,eax
  431b78:	(bad)  
  431b79:	dec    ebp
  431b7a:	pop    es
  431b7b:	(bad)  
  431b7c:	(bad)  
  431b7d:	or     BYTE PTR [esi],al
  431b7f:	jb     0x431b47
  431b81:	add    BYTE PTR [ebx],al
  431b83:	inc    ebp
  431b84:	(bad)  
  431b85:	mov    ecx,DWORD PTR [edx]
  431b87:	fadd   st(6),st
  431b89:	ret    
  431b8a:	add    ah,BYTE PTR [edi-0x37]
  431b8d:	int    0x55
  431b8f:	sub    ebp,esp
  431b91:	add    edx,DWORD PTR [ecx-0x14]
  431b94:	inc    ebp
  431b95:	inc    ebp
  431b96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431b9c:	cld    
  431b9d:	(bad)  
  431b9e:	mov    WORD PTR [edi+0xf893be0],gs
  431ba4:	mov    ebp,ebp
  431ba6:	clc    
  431ba7:	push   eax
  431ba9:	push   DWORD PTR [ebp-0x4]
  431bac:	mov    BYTE PTR [ebp+0xa],0xff
  431bb0:	(bad)  
  431bb1:	int3   
  431bb2:	or     BYTE PTR [eax],al
  431bb4:	(bad)  
  431bb5:	lea    eax,[edi]
  431bb7:	ins    BYTE PTR es:[edi],dx
  431bb8:	(bad)  
  431bb9:	inc    DWORD PTR [ecx]
  431bbb:	push   eax
  431bbc:	mov    BYTE PTR [ebp+0x9],0x8b
  431bc0:	leave  
  431bc1:	les    edx,FWORD PTR [ebp+0x0]
  431bc4:	in     al,dx
  431bc5:	call   DWORD PTR [ecx-0x75]
  431bc8:	inc    ebp
  431bc9:	cld    
  431bca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431bd0:	cld    
  431bd1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431bd7:	std    
  431bd8:	mov    eax,DWORD PTR [eax]
  431bda:	clc    
  431bdb:	test   eax,esi
  431bdd:	je     0x431c54
  431bdf:	mov    eax,esi
  431be1:	cld    
  431be2:	add    al,0x80
  431be4:	add    WORD PTR [ecx+0x0],ax
  431be8:	fiadd  DWORD PTR [eax]
  431bea:	mov    BYTE PTR [eax],0xd6
  431bed:	push   0xffffffc3
  431bef:	push   edi
  431bf0:	mov    edx,DWORD PTR [eax+0x51]
  431bf3:	pop    edi
  431bf4:	lea    ebx,[ebx-0x8]
  431bf7:	ret    0x45
  431bfa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c00:	xchg   eax,edi
  431c02:	mov    DWORD PTR [ebp-0x75],ecx
  431c05:	push   esi
  431c06:	clc    
  431c07:	jne    0x431bd9
  431c09:	mov    ecx,0xf8450b0b
  431c0e:	(bad)  
  431c0f:	push   cs
  431c10:	or     BYTE PTR [ebp-0x3a],dh
  431c13:	cmp    eax,DWORD PTR [ecx]
  431c15:	pop    esi
  431c16:	(bad)  
  431c17:	or     al,0x5
  431c19:	inc    eax
  431c1a:	leave  
  431c1b:	jmp    0x40cf:0x21564204
  431c22:	leave  
  431c23:	jmp    0xdace5d27
  431c28:	mov    eax,DWORD PTR [edx-0x3a]
  431c2b:	jle    0x431c23
  431c2d:	inc    eax
  431c2e:	nop
  431c2f:	in     al,dx
  431c30:	inc    ebx
  431c32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431c38:	add    eax,0xff45e8f8
  431c3d:	push   esi
  431c3e:	push   DWORD PTR [ebp-0x39]
  431c41:	mov    eax,0x7e9da46
  431c46:	or     al,0x6
  431c48:	push   DWORD PTR [ebp-0x3a]
  431c4b:	cmp    eax,DWORD PTR [edx]
  431c4d:	pop    esi
  431c4e:	ret    
  431c4f:	or     al,0x56
  431c51:	inc    ecx
  431c52:	push   ebp
  431c53:	jle    0x431c41
  431c55:	inc    edx
  431c56:	inc    ebp
  431c57:	leave  
  431c58:	add    DWORD PTR [ecx+0x28],eax
  431c5b:	and    esp,edi
  431c5d:	inc    ecx
  431c5e:	jne    0x431c47
  431c60:	add    DWORD PTR [edx+0x1c],eax
  431c63:	retf   0xc38b
  431c66:	adc    al,0x8b
  431c68:	xchg   edx,eax
  431c69:	push   ecx
  431c6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431c70:	rcl    DWORD PTR [esi-0x9],cl
  431c73:	jne    0x431cc5
  431c75:	mov    eax,0x7c80ece
  431c7a:	rol    DWORD PTR [esi],cl
  431c7c:	div    DWORD PTR [ebp+0x50]
  431c7f:	cmp    ecx,edx
  431c81:	pop    esi
  431c82:	dec    BYTE PTR [edx]
  431c84:	in     al,dx
  431c85:	inc    edx
  431c86:	sub    ebp,ebp
  431c88:	inc    eax
  431c89:	(bad)  
  431c8a:	push   eax
  431c8b:	add    edx,DWORD PTR [eax-0x13]
  431c8e:	push   edi
  431c8f:	add    dh,dh
  431c91:	leave  
  431c92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431c96:	add    BYTE PTR [ecx+0x0],dl
  431c99:	inc    ebp
  431c9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ca0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ca6:	add    al,0x2
  431ca8:	jmp    0x57ec802
  431cad:	jne    0x431c97
  431caf:	mov    eax,DWORD PTR [edx]
  431cb1:	or     BYTE PTR [eax],al
  431cb3:	inc    ecx
  431cb4:	stc    
  431cb5:	jmp    0xe7825cf0
  431cba:	jge    0x431cfd
  431cbc:	mov    esi,ebp
  431cbe:	lock ret 0x7d
  431cc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431cc8:	add    bh,bh
  431cca:	aad    0xd7
  431ccc:	add    dh,cl
  431cce:	clts   
  431cd0:	(bad)  
  431cd1:	call   0xffce1bd6
  431cd6:	hlt    
  431cd7:	iret   
  431cd8:	jge    0x431cb0
  431cda:	rol    DWORD PTR [esi-0x80],cl
  431cdd:	cmc    
  431cde:	or     BYTE PTR [edi-0x27],cl
  431ce1:	(bad)  
  431ce2:	out    dx,al
  431ce3:	mov    eax,DWORD PTR [ebx]
  431ce5:	(bad)  
  431ce6:	pop    esi
  431ce7:	push   es
  431ce8:	cmp    al,0xe8
  431cea:	sar    edi,0x8
  431ced:	inc    DWORD PTR [edi]
  431cef:	inc    esi
  431cf0:	(bad)  
  431cf1:	in     al,dx
  431cf2:	jle    0x431d4b
  431cf4:	push   cs
  431cf5:	push   ebx
  431cf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431cfc:	add    BYTE PTR [ebp+0x50],al
  431cff:	push   eax
  431d00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d06:	sub    edx,DWORD PTR [esi-0x24]
  431d09:	jne    0x431cc1
  431d0b:	lods   eax,DWORD PTR ds:[esi]
  431d0c:	mov    edx,DWORD PTR [edx-0x34]
  431d0f:	dec    esi
  431d10:	out    0x83,eax
  431d12:	into   
  431d13:	push   edi
  431d15:	loopne 0x431ce5
  431d17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431d22:	rol    DWORD PTR [edx],0x8
  431d25:	mov    esp,ecx
  431d27:	cmp    DWORD PTR [ebx],0xc
  431d2a:	mov    esi,0x5001c0
  431d2f:	push   eax
  431d30:	push   cs
  431d31:	push   eax
  431d32:	(bad)  
  431d33:	sub    edx,edi
  431d35:	push   esi
  431d36:	adc    al,0xcb
  431d38:	ins    DWORD PTR es:[edi],dx
  431d39:	mov    eax,0x203e8
  431d3e:	add    al,ah
  431d40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431d47:	add    dh,al
  431d49:	add    ah,ch
  431d4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431d51:	pop    ecx
  431d52:	or     eax,ebx
  431d54:	cli    
  431d55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431d5b:	lea    ebp,[ebx]
  431d5d:	mov    edx,DWORD PTR [edx-0x4]
  431d60:	dec    ecx
  431d61:	inc    ebp
  431d62:	shr    BYTE PTR [ebx],0x4b
  431d65:	and    al,0x0
  431d67:	(bad)  
  431d68:	jne    0x431daf
  431d6a:	pop    eax
  431d6b:	mov    al,0x5a
  431d6d:	call   0x1421fcc
  431d72:	and    al,0x85
  431d74:	push   edx
  431d75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431d79:	dec    ebp
  431d7a:	mov    cl,0x23
  431d7c:	jmp    0x431d6a
  431d7e:	mov    al,0xe7
  431d80:	call   0x139206e
  431d85:	shr    DWORD PTR [eax+ebx*2],cl
  431d88:	lock (bad) 
  431d8a:	adc    eax,0x757f008d
  431d8f:	out    0x58,eax
  431d91:	cmp    al,0x7
  431d93:	pop    edx
  431d94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431d9b:	push   ecx
  431d9c:	cld    
  431d9d:	mov    esi,0x3b0175
  431da2:	and    al,0xb0
  431da4:	xor    BYTE PTR [edx+0x1],0x8b
  431da8:	add    ah,bh
  431daa:	mov    edi,DWORD PTR [ebp-0x4]
  431dad:	psubsw mm7,QWORD PTR [edi]
  431db0:	add    DWORD PTR [ebp+0x0],ebp
  431db3:	rcr    eax,1
  431db5:	mov    edi,ecx
  431db7:	and    eax,DWORD PTR [eax]
  431db9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431dbf:	call   0x13020a8
  431dc4:	add    al,cl
  431dc6:	mov    ebp,esi
  431dc8:	aam    0x83
  431dca:	or     DWORD PTR [ecx],eax
  431dcc:	jne    0x431dbf
  431dce:	mov    eax,DWORD PTR [eax]
  431dd0:	aam    0x0
  431dd2:	dec    ebp
  431dd3:	jne    0x431d60
  431dd5:	cmp    ebx,eax
  431dd7:	jb     0x431e26
  431dd9:	jmp    0x431d66
  431ddb:	mov    ebx,esp
  431ddd:	int3   
  431dde:	dec    ebp
  431ddf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431de6:	mov    edx,0x8b0a8b
  431deb:	cmp    ecx,DWORD PTR [eax]
  431ded:	jb     0x431dc6
  431def:	pop    edx
  431df0:	push   edi
  431df1:	cli    
  431df2:	pop    es
  431df3:	mov    eax,ecx
  431df5:	jb     0x431df9
  431df7:	add    DWORD PTR [ebx],0xa
  431dfa:	mov    eax,DWORD PTR [ebx]
  431dfc:	int3   
  431dfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431e03:	jmp    0x431d90
  431e05:	mov    al,0xe8
  431e07:	call   0x1042089
  431e0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e0f:	pop    edi
  431e10:	or     BYTE PTR [ecx-0x73],bl
  431e13:	pop    ecx
  431e14:	inc    edi
  431e15:	xor    al,0xeb
  431e17:	push   ecx
  431e18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e1e:	call   0xb21f23
  431e23:	int3   
  431e24:	sbb    BYTE PTR [esi],ch
  431e26:	inc    ebp
  431e27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431e2d:	call   0x9c209c
  431e32:	or     BYTE PTR [ebx-0x73],dl
  431e35:	cmp    al,0x47
  431e37:	mov    al,0x1
  431e39:	jb     0x431e3b
  431e3b:	mov    al,0x10
  431e3d:	push   eax
  431e3e:	add    al,0x75
  431e40:	add    BYTE PTR [ebx],ch
  431e42:	add    ebx,esp
  431e44:	int3   
  431e45:	jne    0x431e57
  431e47:	movsx  edx,cl
  431e4a:	add    DWORD PTR [eax],eax
  431e4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431e53:	mov    gs,edi
  431e55:	add    BYTE PTR [eax-0x50],ch
  431e58:	add    al,ch
  431e5a:	mov    eax,DWORD PTR [ecx]
  431e5c:	sub    eax,DWORD PTR [eax]
  431e5e:	jb     0x431ed5
  431e60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431e64:	jge    0x431e4e
  431e66:	add    al,0x1
  431e68:	add    DWORD PTR [eax],0x0
  431e6b:	jne    0x431e6d
  431e6d:	je     0x431eb4
  431e6f:	mov    eax,DWORD PTR [edi]
  431e71:	ror    BYTE PTR [ebp+0x4d],1
  431e74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431e7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431e81:	mov    DWORD PTR [ebx],ebp
  431e83:	fadd   DWORD PTR [eax+0x75]
  431e86:	inc    eax
  431e87:	pop    eax
  431e88:	lea    ebx,[ecx+0x4f]
  431e8b:	push   0xb1000003
  431e90:	out    dx,eax
  431e91:	add    ebp,DWORD PTR [edx+edx*2]
  431e94:	add    BYTE PTR [ebx+ecx*4],bh
  431e97:	mov    ch,BYTE PTR [ebx]
  431e99:	jb     0x431f0d
  431e9b:	add    al,0x89
  431e9d:	push   eax
  431e9e:	call   0x842b6c10
  431ea3:	add    DWORD PTR [eax+eax*1],eax
  431ea6:	jae    0x431ebc
  431ea8:	icebp  
  431ea9:	inc    ebp
  431eaa:	mov    eax,DWORD PTR gs:[ecx]
  431ead:	int3   
  431eae:	out    dx,al
  431eaf:	loopne 0x431efe
  431eb1:	sub    eax,DWORD PTR [edx]
  431eb3:	push   0xffffff83
  431eb5:	pop    esi
  431eb6:	push   cs
  431eb7:	jl     0x431ed2
  431eb9:	add    al,0xaf
  431ebb:	xor    eax,0x832b6d00
  431ec0:	mov    eax,DWORD PTR [edx]
  431ec2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431ec8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431ece:	inc    ebp
  431ecf:	shr    ebx,0x3
  431ed2:	or     DWORD PTR [eax],0x4
  431ed5:	push   0xffffffa5
  431ed7:	pop    esi
  431ed8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431edf:	jmp    0x431f3e
  431ee1:	mov    edi,0xff0272
  431ee6:	fdivr  QWORD PTR [ebp+0x5d]
  431ee9:	push   0x4e
  431eeb:	pop    ecx
  431eec:	call   0x4362f1
  431ef1:	mov    DWORD PTR [ebx],eax
  431ef3:	in     al,0xc8
  431ef5:	rol    BYTE PTR [ebp-0x75],0xc1
  431ef9:	call   0xad20da
  431efe:	pop    esi
  431eff:	enter  0xceff,0x8b
  431f03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f0e:	je     0x431f10
  431f10:	or     DWORD PTR [ebx-0x74183b24],eax
  431f16:	jne    0x431efc
  431f18:	jmp    0x431f13
  431f1a:	push   DWORD PTR [edx-0x24]
  431f1d:	push   0x4d
  431f1f:	pop    ecx
  431f20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431f24:	jge    0x431f2c
  431f26:	mov    eax,eax
  431f28:	sub    ebp,DWORD PTR [edx+0x24]
  431f2b:	pop    esi
  431f2c:	inc    ebp
  431f2d:	mov    esp,0x8b6077
  431f32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431f38:	lods   al,BYTE PTR ds:[esi]
  431f39:	add    BYTE PTR [ebx],bh
  431f3b:	enter  0xce73,0x49
  431f3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431f47:	stc    
  431f48:	jge    0x431fbc
  431f4a:	jnp    0xdd42a2b9
  431f50:	call   0xc62026
  431f55:	fadd   st(0),st
  431f57:	dec    esi
  431f58:	ins    BYTE PTR es:[edi],dx
  431f59:	stc    
  431f5a:	cmp    al,0x73
  431f5c:	push   ebp
  431f5d:	mov    eax,0xf8028b
  431f62:	jne    0x431f25
  431f64:	mov    esi,ecx
  431f66:	mov    esp,DWORD PTR [ebp+0x2c]
  431f69:	add    edi,DWORD PTR [ebp-0x24]
  431f6c:	sub    esp,eax
  431f6e:	and    al,0x45
  431f70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431f76:	sbb    al,0xee
  431f78:	pop    esi
  431f79:	call   0x831fa9
  431f7e:	fsubr  st,st(3)
  431f80:	sti    
  431f81:	add    BYTE PTR gs:[ecx],bh
  431f84:	add    eax,esp
  431f86:	add    DWORD PTR [esi],eax
  431f88:	rol    DWORD PTR [ebp+0x8],0x29
  431f8c:	mov    esp,eax
  431f8e:	clc    
  431f8f:	jne    0x432006
  431f91:	mov    eax,0x8b0673
  431f96:	loopne 0x431fdd
  431f98:	loopne 0x431f23
  431f9a:	lods   al,BYTE PTR ds:[esi]
  431f9b:	int3   
  431f9c:	inc    ebp
  431f9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431fa1:	add    al,0xc3
  431fa3:	sub    ecx,DWORD PTR [ebp+0x47]
  431fa6:	(bad)  
  431fa8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431fac:	add    eax,DWORD PTR [eax]
  431fae:	call   0x644e0b3
  431fb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431fb9:	dec    esi
  431fba:	ins    DWORD PTR es:[edi],dx
  431fbb:	in     al,dx
  431fbc:	lea    eax,[eax]
  431fbe:	inc    ebp
  431fbf:	inc    ebp
  431fc0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431fc6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431fd0:	and    al,0xdc
  431fd2:	ror    DWORD PTR [edx+0x24],0xf7
  431fd6:	or     BYTE PTR [ebp+0x4c],dh
  431fd9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431fdd:	stos   BYTE PTR es:[edi],al
  431fde:	adc    edx,edi
  431fe0:	inc    esp
  431fe1:	add    edi,DWORD PTR [eax]
  431fe3:	jne    0x431fc8
  431fe5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431feb:	cmp    ecx,DWORD PTR [edi]
  431fed:	sub    BYTE PTR [ebp-0x7e],dl
  431ff0:	sar    ebp,0xb
  431ff3:	jmp    FWORD PTR [edi+0x2400392a]
  431ff9:	sub    esi,DWORD PTR [ebx-0x73]
  431ffc:	mov    esp,DWORD PTR [ecx+edi*4]
  431fff:	mov    ecx,DWORD PTR [eax]
  432001:	and    BYTE PTR [eax],al
  432003:	jne    0x431fcf
  432005:	sub    ebp,ecx
  432007:	sbb    BYTE PTR [esi+0x32],ah
  43200a:	dec    ebp
  43200b:	push   ebp
  43200c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432012:	ret    
  432013:	mov    edx,ebp
  432015:	leave  
  432016:	sub    DWORD PTR [esi+0x24],ebx
  432019:	ret    0x2b
  43201c:	pop    ax
  43201e:	push   ebp
  43201f:	rol    BYTE PTR [ebx],0xeb
  432022:	add    DWORD PTR [ecx+0x6c0001],0x40
  432029:	jb     0x432080
  43202b:	ret    
  43202c:	in     al,dx
  43202d:	jecxz  0x431fba
  43202f:	push   esi
  432030:	xchg   esp,eax
  432031:	jne    0x432033
  432033:	cmp    edx,DWORD PTR [esi+0x1c]
  432036:	jne    0x43201c
  432038:	mov    eax,DWORD PTR [ebp-0x77]
  43203b:	ror    DWORD PTR [ebx+0x899408],0xe0
  432042:	mov    esi,DWORD PTR [ebp-0x75]
  432045:	pop    esi
  432046:	nop
  432047:	mov    eax,DWORD PTR [eax]
  432049:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  43204f:	add    al,0x0
  432051:	inc    ebp
  432052:	mov    eax,DWORD PTR [ebx]
  432054:	mov    ebp,ebx
  432056:	cmp    al,0xf
  432058:	or     al,al
  43205a:	inc    ebp
  43205b:	inc    ebp
  43205c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  432064:	mov    bh,0xc0
  432066:	push   ss
  432067:	ins    BYTE PTR es:[edi],dx
  432068:	push   ecx
  432069:	add    BYTE PTR [ecx-0x5],dl
  43206c:	add    eax,0x17200
  432071:	sbb    al,0x85
  432073:	dec    esp
  432074:	je     0x4320ae
  432076:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43207a:	add    BYTE PTR [ebx],bh
  43207c:	(bad)  
  43207d:	and    al,0x39
  43207f:	jae    0x43201d
  432081:	mov    cl,cl
  432083:	inc    DWORD PTR [esp]
  432086:	push   ebp
  432087:	shr    esp,0x8
  43208a:	in     al,dx
  43208b:	push   esp
  43208c:	add    DWORD PTR [eax],esp
  43208e:	add    bl,cl
  432090:	inc    ebp
  432091:	mov    bh,0x89
  432093:	add    ah,bh
  432095:	jmp    0xca7c2fdf
  43209a:	pushf  
  43209b:	dec    esp
  43209c:	mov    edx,0xf8178520
  4320a1:	fst    DWORD PTR [ebp+0x0]
  4320a4:	mov    BYTE PTR [eax],0xc4
  4320a7:	sub    edx,DWORD PTR [ebx-0x3f]
  4320aa:	inc    ebp
  4320ab:	add    eax,0xc601da
  4320b0:	mov    al,0xc6
  4320b3:	ins    BYTE PTR es:[edi],dx
  4320b4:	mov    DWORD PTR [eax+0x57],0x280545c1
  4320bb:	dec    esp
  4320bc:	jmp    DWORD PTR [eax]
  4320be:	inc    ebp
  4320bf:	fnstcw WORD PTR [esi+0x29]
  4320c2:	test   BYTE PTR [eax],0xc6
  4320c5:	rol    BYTE PTR [eax],0xc0
  4320c8:	lea    ecx,[ebp-0x3cf0dbcb]
  4320ce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4320d4:	inc    esi
  4320d5:	add    DWORD PTR [eax],ebx
  4320d7:	add    dh,bh
  4320d9:	mov    esi,DWORD PTR [edx+0x8]
  4320dc:	(bad)  
  4320dd:	fdiv   QWORD PTR ss:[ecx]
  4320e0:	(bad)  
  4320e1:	mov    bl,ch
  4320e3:	add    esi,eax
  4320e5:	add    dh,bl
  4320e7:	or     esi,eax
  4320e9:	mov    dl,0xdf
  4320eb:	add    esi,eax
  4320ed:	add    al,ah
  4320ef:	push   cs
  4320f0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  4320f7:	or     BYTE PTR [ebx],dh
  4320f9:	dec    ecx
  4320fa:	lea    eax,[ebx]
  4320fc:	xor    eax,0x18fc0fc7
  432101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432102:	repz clc 
  432104:	add    eax,DWORD PTR [ebp+0x46]
  432107:	prefetcht0 BYTE PTR [ecx-0x2]
  43210b:	xor    eax,0x7c60872
  432110:	mov    esp,0xbd32c699
  432115:	pop    esi
  432116:	mov    cl,0xbe
  432119:	or     al,0xc6
  43211b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432122:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432129:	add    dh,al
  43212b:	mov    eax,ebx
  43212d:	xor    DWORD PTR [ebx],0x35008dbc
  432133:	mov    ecx,DWORD PTR [edi]
  432135:	sbb    al,0x18
  432137:	inc    ebp
  432138:	xrelease mov DWORD PTR [ebx],0x188546f4
  43213f:	clc    
  432140:	(bad)  
  432141:	ss jb  0x4320e0
  432144:	lea    ecx,[ecx+0x45ffe838]
  43214a:	mov    ebp,esp
  43214c:	fadd   st,st(6)
  43214e:	dec    ebp
  43214f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432155:	out    0x1,eax
  432157:	inc    ebp
  432158:	lea    ebp,[ecx]
  43215a:	inc    esi
  43215c:	dec    eax
  43215e:	enter  0xa33,0xc6
  432162:	push   ebp
  432163:	leave  
  432164:	(bad)  
  432165:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43216b:	add    BYTE PTR [ebp+0x44],al
  43216e:	mov    eax,esp
  432170:	mov    WORD PTR [esi+0x44398300],?
  432176:	psubusw mm4,QWORD PTR [eax-0x78]
  43217a:	add    BYTE PTR [ebx-0x1303f975],al
  432180:	add    BYTE PTR [ebp+0x1],0xeb
  432184:	add    BYTE PTR [ebp+0x38],al
  432187:	jmp    0xdbce66d1
  43218c:	add    BYTE PTR [ebp+0x0],0xe8
  432190:	mov    DWORD PTR [ebp-0x48],eax
  432193:	sub    DWORD PTR [edi+0x45],ecx
  432196:	add    BYTE PTR [eax],ch
  432198:	js     0x4321df
  43219a:	data16 jle 0x432122
  43219d:	idiv   bh
  43219f:	inc    esp
  4321a0:	(bad)  
  4321a1:	fadd   st(7),st
  4321a3:	mov    dh,0x89
  4321a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4321a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4321af:	pop    es
  4321b0:	push   0x8d45ffec
  4321b5:	jmp    0xe6cc66bd
  4321ba:	push   0x45
  4321bc:	jmp    edx
  4321be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4321c2:	mov    DWORD PTR [ebp+0x6c],eax
  4321c5:	(bad)  
  4321c7:	inc    ebp
  4321c8:	(bad)  
  4321c9:	out    dx,al
  4321ca:	add    al,0x45
  4321cc:	mov    edi,esp
  4321ce:	outs   dx,BYTE PTR ds:[esi]
  4321cf:	inc    ebp
  4321d0:	(bad)  
  4321d1:	jle    0x432156
  4321d3:	idiv   BYTE PTR ds:0x70bc8944
  4321d9:	mov    dh,0xff
  4321db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4321e2:	jb     0x432167
  4321e4:	dec    DWORD PTR [eax]
  4321e6:	mov    ebp,esp
  4321e8:	test   WORD PTR [ebp-0x1],ax
  4321ef:	inc    ebp
  4321f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4321f7:	adc    edi,edi
  4321f9:	mov    ebp,edi
  4321fb:	mov    eax,DWORD PTR [eax]
  4321fd:	cmp    BYTE PTR [esi-0x1],ah
  432200:	test   DWORD PTR [ebx],edi
  432202:	push   DWORD PTR [ebp-0x1]
  432205:	mov    DWORD PTR [esi-0x48],ebp
  432208:	add    BYTE PTR [ebp+0x66],al
  43220b:	jmp    0x432192
  43220d:	pushf  
  43220e:	dec    DWORD PTR [ebx-0x7f940301]
  432214:	add    BYTE PTR [ecx],al
  432216:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43221d:	add    al,al
  43221f:	add    BYTE PTR [esi+0x45],ah
  432222:	test   DWORD PTR [ebx+0xff7cff],ecx
  432228:	inc    eax
  432229:	mov    DWORD PTR [eax],eax
  43222b:	mov    esp,DWORD PTR [esi-0x4]
  43222e:	inc    ebp
  43222f:	cmp    BYTE PTR [eax+0x4701],0x38
  432236:	mov    DWORD PTR [ebp-0x7e],ebp
  432239:	add    BYTE PTR [edi-0x73],al
  43223c:	push   0xffffffcd
  43223e:	mov    WORD PTR [ebp+0x64],ax
  432242:	(bad)  
  432243:	call   eax
  432245:	mov    esp,esi
  432247:	data16 cmc 
  432249:	test   DWORD PTR [ebp-0x1],eax
  43224c:	(bad)  
  43224e:	out    0xc0,eax
  432250:	lea    esp,[esi-0x30]
  432253:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432259:	inc    edi
  43225a:	jmp    0x75ff:0x40858866
  432261:	dec    DWORD PTR [ebp-0x7a992f40]
  432267:	test   esi,edi
  432269:	(bad)  
  43226a:	(bad)  
  43226b:	inc    DWORD PTR [ebp-0x9901b9]
  432271:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432277:	rcl    BYTE PTR [ecx+0x66],0x33
  43227b:	test   DWORD PTR [ebx+0xff72ff],edi
  432281:	inc    edi
  432282:	ret    
  432283:	mov    ax,WORD PTR [ebp-0x3f0004]
  43228a:	push   eax
  43228b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432292:	add    BYTE PTR [ebx-0x764f0839],al
  432298:	push   DWORD PTR [esi+0x1]
  43229b:	inc    DWORD PTR [eax]
  43229d:	mov    eax,0xff99ff
  4322a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4322a8:	jne    0x432262
  4322aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4322b4:	mov    ecx,0xd74fb8
  4322b9:	add    cl,al
  4322bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4322c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4322c8:	(bad)  
  4322c9:	(bad)  
  4322ca:	std    
  4322cb:	mov    eax,0x8c2789
  4322d0:	ret    0x6689
  4322d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4322d7:	add    bh,ah
  4322d9:	mov    WORD PTR [ebp-0x70],ax
  4322dd:	(bad)  
  4322de:	ret    0x6605
  4322e1:	or     BYTE PTR [ebp-0x77],dl
  4322e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4322eb:	loop   0x432276
  4322ed:	(bad)  
  4322ee:	xchg   esi,eax
  4322ef:	aam    0xcf
  4322f1:	out    dx,al
  4322f2:	mov    DWORD PTR [esi-0x68],edi
  4322f5:	inc    ebp
  4322f6:	dec    edx
  4322f7:	pop    ecx
  4322f8:	mov    edx,DWORD PTR [eax]
  4322fa:	repnz push bp
  4322fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432304:	(bad)  
  432305:	repnz cmp eax,0xa0898945
  43230b:	mov    ah,0x89
  43230d:	jmp    DWORD PTR [edx+0x66b0418d]
  432313:	inc    DWORD PTR [ebp+0x50]
  432316:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43231a:	mov    DWORD PTR [eax],ecx
  43231c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43231d:	pop    es
  43231e:	inc    ecx
  43231f:	(bad)  
  432320:	cwd    
  432322:	inc    ebp
  432323:	xor    ah,BYTE PTR [esi+0x3]
  432326:	dec    ebp
  432327:	push   eax
  432328:	inc    bp
  43232a:	jge    0x4322af
  43232c:	mov    esp,DWORD PTR [esi-0x18]
  43232f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432335:	add    DWORD PTR [ebx],esi
  432337:	add    BYTE PTR [ebx],al
  432339:	test   DWORD PTR [ebx],esi
  43233b:	(bad)  
  43233c:	inc    WORD PTR [ebp+0x0]
  432340:	mov    eax,DWORD PTR [eax]
  432342:	call   0x8898da77
  432347:	mov    esi,eax
  432349:	clc    
  43234a:	ret    
  43234b:	rol    cl,0xa
  43234e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432354:	mov    edx,edi
  432356:	pushf  
  432357:	pop    es
  432358:	jmp    DWORD PTR [edx+0x66]
  43235b:	add    BYTE PTR [ebp-0x990175],al
  432361:	inc    ebp
  432362:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432368:	push   ebp
  432369:	mov    edi,eax
  43236b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432371:	push   ebp
  432372:	add    BYTE PTR [ebx-0x764b0777],al
  432378:	dec    DWORD PTR [esi+0x661851e8]
  43237e:	add    BYTE PTR [ebp-0x7b],dl
  432381:	cmp    esi,0x3
  432384:	dec    DWORD PTR [ecx+0x51fe9285]
  43238a:	jmp    DWORD PTR [esi-0x75]
  43238d:	push   ebp
  43238e:	hlt    
  43238f:	data16 (bad) 
  432391:	dec    ebp
  432392:	ret    
  432393:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432399:	lea    edx,[eax-0x1]
  43239c:	jne    0x43236f
  43239e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4323a4:	dec    BYTE PTR [ecx+0x51559eff]
  4323aa:	mov    DWORD PTR [esi-0x4c],esp
  4323ad:	push   ebp
  4323ae:	jmp    DWORD PTR [esi-0x18]
  4323b1:	inc    ebp
  4323b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4323b8:	(bad)  
  4323b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323ba:	inc    eax
  4323bc:	test   DWORD PTR [esi-0x2],esp
  4323bf:	inc    ebp
  4323c0:	dec    DWORD PTR [ebp-0x760bde75]
  4323c6:	(bad)  
  4323c7:	test   al,0xc3
  4323c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4323cf:	lods   al,BYTE PTR ds:[esi]
  4323d0:	push   eax
  4323d1:	inc    ebp
  4323d2:	jne    0x4323e3
  4323d4:	dec    DWORD PTR [ebp+0x8]
  4323d7:	mov    eax,DWORD PTR [edi]
  4323d9:	sbb    al,0x0
  4323db:	(bad)  
  4323dc:	mov    eax,0xc14fc3
  4323e1:	mov    DWORD PTR [eax-0x64],edi
  4323e4:	inc    bp
  4323e6:	test   DWORD PTR [edi],ecx
  4323e8:	dec    DWORD PTR [ebp-0x1]
  4323eb:	xor    eax,edi
  4323ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4323f3:	inc    ebp
  4323f4:	xor    DWORD PTR [ebx],0x43
  4323f7:	mov    WORD PTR [ebp-0x1bc],ax
  4323fe:	lea    ecx,[ecx-0x7677fe]
  432404:	inc    esi
  432405:	(bad)  
  432406:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43240d:	pushf  
  43240e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432415:	add    bh,bh
  432417:	add    BYTE PTR [edi],cl
  432419:	test   DWORD PTR [eax],eax
  43241b:	(bad)  
  43241c:	dec    WORD PTR [ebp-0xff002d]
  432423:	mov    DWORD PTR [eax-0x48],esi
  432426:	add    bh,bh
  432428:	lea    cx,[ebp-0x50]
  43242f:	push   eax
  432430:	rol    BYTE PTR [ebp+0x0],1
  432433:	xor    esp,DWORD PTR [esi+0x3]
  432436:	lea    edx,[eax-0x1]
  432439:	test   edi,edi
  43243b:	dec    DWORD PTR [ebp-0x1]
  43243e:	mov    edi,edi
  432440:	dec    eax
  432441:	clc    
  432442:	call   DWORD PTR [ebp-0x73]
  432445:	lea    esi,[eax+0x51ffff88]
  43244b:	lea    ecx,[ebp-0x78]
  43244e:	test   WORD PTR [ebp-0x2],ax
  432455:	popf   
  432456:	push   ecx
  432457:	add    BYTE PTR [ecx-0x77],dl
  43245a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432460:	cdq    
  432461:	mov    al,0x32
  432463:	inc    DWORD PTR [ebx]
  432465:	push   eax
  432466:	push   ecx
  432467:	inc    ebp
  432468:	shl    BYTE PTR [ebx],1
  43246a:	lea    eax,[ebx]
  43246c:	call   DWORD PTR [eax-0x1]
  43246f:	test   DWORD PTR [ebx],esi
  432471:	inc    DWORD PTR [eax-0x1]
  432474:	(bad)  
  432475:	(bad)  
  432476:	(bad)  
  432477:	clc    
  432478:	call   DWORD PTR [ebp+0x50]
  43247b:	jmp    0xcc25f5
  432480:	inc    esp
  432481:	jae    0x432482
  432483:	add    BYTE PTR [ecx-0x384f73],cl
  432489:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43248f:	mov    eax,DWORD PTR [ecx]
  432491:	data16 add BYTE PTR [ebp-0xb50077],al
  432498:	inc    eax
  43249a:	lea    esp,[esi+0x1c]
  43249d:	test   DWORD PTR [ecx-0xb301],ecx
  4324a3:	inc    edi
  4324a4:	(bad)  
  4324a5:	dec    si
  4324a7:	test   edi,edi
  4324a9:	push   DWORD PTR [ecx]
  4324ab:	(bad)  
  4324ac:	jnp    0x4324fd
  4324ae:	(bad)  
  4324af:	mov    edx,DWORD PTR [edx-0x7d]
  4324b2:	(bad)  
  4324b3:	mov    ebx,0x563a8935
  4324b8:	(bad)  
  4324b9:	call   FWORD PTR [esi-0x47]
  4324bc:	inc    DWORD PTR ds:0x893000e2
  4324c2:	(bad)  
  4324c3:	pop    eax
  4324c4:	mov    ah,0xff
  4324c6:	(bad)  
  4324c7:	mov    ecx,0x5745
  4324cc:	dec    DWORD PTR [ecx-0xf7a501]
  4324d2:	(bad)  
  4324d3:	mov    ecx,0x456108
  4324d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4324de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4324e4:	inc    BYTE PTR gs:[eax]
  4324e7:	inc    DWORD PTR [ebp-0x73]
  4324ea:	ss (bad) 
  4324ec:	pushf  
  4324ed:	inc    edi
  4324ef:	mov    ebx,eax
  4324f1:	hlt    
  4324f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4324f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4324fe:	lock into 
  432500:	test   eax,eax
  432502:	clc    
  432503:	mov    ebx,0x367245
  432508:	lahf   
  432509:	retf   
  43250a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432510:	add    edi,edi
  432512:	add    BYTE PTR [ecx+0x45],dl
  432515:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43251c:	mov    edx,DWORD PTR [ecx-0x74]
  43251f:	inc    DWORD PTR [eax]
  432521:	cld    
  432522:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432528:	add    BYTE PTR [ebp-0x1b0177],al
  43252e:	jge    0x432575
  432530:	test   DWORD PTR [ebx+0xff9875],ecx
  432536:	sbb    BYTE PTR [esi+0x55],ah
  432539:	xchg   ebp,eax
  43253a:	call   0x43203e
  43253f:	push   edi
  432540:	inc    ebp
  432541:	mov    dx,WORD PTR [ebp-0xfc0075]
  432548:	cmp    al,0x85
  43254a:	ud0    eax,DWORD PTR [ebp-0x1]
  43254e:	test   DWORD PTR [edi+0x74],ecx
  432551:	dec    edi
  432552:	inc    DWORD PTR [ebp-0xf70004]
  432558:	dec    DWORD PTR [edi-0x75]
  43255b:	dec    edi
  43255c:	cld    
  43255d:	test   DWORD PTR [eax+0xff01ff],eax
  432563:	icebp  
  432564:	add    BYTE PTR [edi-0x3a],cl
  432567:	test   ebx,eax
  432569:	inc    BYTE PTR [ebp-0x1]
  43256c:	jne    0x43256e
  43256e:	mov    eax,DWORD PTR [eax]
  432570:	cld    
  432571:	xor    BYTE PTR [ecx+0x500155],cl
  432577:	push   ebp
  432578:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43257e:	add    BYTE PTR [ebp+0x35e90f50],al
  432584:	add    al,BYTE PTR [eax]
  432586:	add    BYTE PTR [ebx-0x38fe4f80],al
  43258c:	add    ah,ch
  43258e:	or     BYTE PTR [ebp+0x4501f845],dh
  432594:	jmp    0xdf288f
  432599:	(bad)  
  43259a:	nop    ecx
  43259d:	test   DWORD PTR [ebp+0x4502f8],eax
  4325a3:	cmp    BYTE PTR [ebp-0x64],cl
  4325a6:	mov    eax,edi
  4325a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4325ab:	add    eax,0x45fef885
  4325b0:	dec    DWORD PTR [ebx+0x339445]
  4325b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4325bc:	dec    DWORD PTR [ebx-0x460f0375]
  4325c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325c3:	add    esi,edi
  4325c5:	add    bh,bh
  4325c7:	rdpmc  
  4325c9:	add    BYTE PTR [ebx],0x1
  4325cc:	mov    DWORD PTR [eax],eax
  4325ce:	add    al,0x45
  4325d0:	dec    DWORD PTR [ecx-0x360b3373]
  4325d6:	dec    DWORD PTR [esi]
  4325d8:	push   eax
  4325d9:	jne    0x432620
  4325db:	mov    esi,DWORD PTR [ebx]
  4325dd:	cld    
  4325de:	add    ebp,ebx
  4325e0:	push   eax
  4325e1:	inc    DWORD PTR [ebp-0x75]
  4325e4:	add    eax,0x800e4
  4325e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4325ef:	mov    DWORD PTR [ecx],eax
  4325f1:	sbb    al,0x0
  4325f3:	leave  
  4325f4:	test   DWORD PTR [edi-0x2],eax
  4325f7:	jne    0x4325f8
  4325f9:	call   0xff4410fe
  4325fe:	xor    BYTE PTR [ebp+0x4d],al
  432601:	mov    edi,edi
  432603:	enter  0x8,0x4d
  432607:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43260d:	mov    eax,DWORD PTR [eax]
  43260f:	cld    
  432610:	add    DWORD PTR [ecx],ebx
  432612:	inc    ebp
  432613:	dec    ebp
  432614:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43261a:	inc    eax
  43261b:	dec    DWORD PTR [ecx-0x270375]
  432621:	add    BYTE PTR [ebx-0x39d72701],cl
  432627:	xchg   ecx,eax
  432628:	ret    
  432629:	add    BYTE PTR [ebp-0x830075],al
  43262f:	add    BYTE PTR [ebp-0x75],al
  432632:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432638:	lea    edi,[edi-0xc]
  43263b:	add    bh,bh
  43263d:	mov    edx,DWORD PTR [eax-0x7b]
  432640:	inc    ebp
  432641:	rdpmc  
  432643:	jne    0x432648
  432645:	add    BYTE PTR [eax-0x75],dl
  432648:	inc    ebp
  432649:	clc    
  43264a:	add    eax,0x400009
  43264f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432655:	mov    eax,DWORD PTR [ecx]
  432657:	in     al,dx
  432658:	add    dh,al
  43265a:	test   ebx,eax
  43265c:	inc    BYTE PTR [ebp-0xff0001]
  432662:	add    BYTE PTR [ebp-0x43],al
  432665:	cmp    esi,0xfffffff8
  432668:	(bad)  
  432669:	push   DWORD PTR [eax]
  43266b:	add    BYTE PTR [ebp-0x3a],dl
  43266e:	test   ebx,eax
  432670:	je     0x4325f7
  432672:	mov    edi,edi
  432674:	sbb    al,0xff
  432676:	test   DWORD PTR gs:[eax],eax
  432679:	(bad)  
  43267a:	js     0x43267b
  43267c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432682:	sub    eax,ebx
  432684:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43268a:	add    eax,DWORD PTR [eax]
  43268c:	dec    ebp
  43268d:	push   eax
  43268e:	mov    al,BYTE PTR [ebp+0x1]
  432691:	mov    eax,DWORD PTR [ebp-0x68]
  432694:	mov    eax,DWORD PTR [eax]
  432696:	sbb    bh,al
  432698:	or     ah,dh
  43269a:	dec    ebp
  43269b:	inc    DWORD PTR [eax+0x4]
  43269e:	push   ecx
  43269f:	add    BYTE PTR [edx-0x1],dh
  4326a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4326a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4326b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4326b8:	push   ecx
  4326b9:	cmp    BYTE PTR [ebx],al
  4326bb:	inc    ebp
  4326bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4326c2:	(bad)  
  4326c3:	(bad)  
  4326c4:	in     al,0xff
  4326c6:	add    BYTE PTR [ebp+0x0],al
  4326c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4326cf:	add    al,bh
  4326d1:	(bad)  
  4326d2:	jmp    0x8d85:0x74b0558d
  4326d9:	dec    DWORD PTR [eax]
  4326db:	call   DWORD PTR [ebp-0x7b]
  4326de:	mov    edi,esi
  4326e0:	lock call DWORD PTR [ebp-0x75]
  4326e4:	mov    esi,esp
  4326e6:	mov    ah,0xc6
  4326e8:	mov    bh,0xc3
  4326ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4326f0:	add    DWORD PTR [eax],0x450050ff
  4326f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4326fc:	inc    edi
  4326fe:	push   esp
  432700:	jmp    0xcd00:0x670481ff
  432707:	mov    DWORD PTR [ebx],esi
  432709:	clc    
  43270a:	cmp    edi,0xff9cff3b
  432710:	jne    0x43271a
  432712:	mov    eax,eax
  432714:	add    esi,DWORD PTR [eax]
  432716:	int3   
  432717:	inc    ebp
  432718:	cmp    al,0x83
  43271a:	add    BYTE PTR [eax],bl
  43271c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432722:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432728:	mov    edi,eax
  43272a:	cmp    BYTE PTR [ebp+0x45],cl
  43272d:	jmp    0x4326ba
  43272f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432732:	inc    ebp
  432733:	or     al,0x2
  432735:	dec    DWORD PTR [ebp+0x18]
  432738:	jne    0x43278f
  43273a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432740:	mov    edi,DWORD PTR [ebx]
  432742:	in     al,0x50
  432744:	xchg   ecx,eax
  432745:	jmp    0x343764a
  43274a:	adc    al,0x8b
  43274c:	inc    ebp
  43274d:	mov    al,ds:0x8b04008b
  432752:	push   ebp
  432753:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432759:	push   ebp
  43275a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432760:	inc    ebp
  432761:	dec    ebp
  432762:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432768:	mov    DWORD PTR [eax],0xe9ff00f4
  43276e:	add    al,0x0
  432770:	add    BYTE PTR [eax],al
  432772:	mov    eax,edx
  432774:	push   eax
  432775:	rol    DWORD PTR [ebp-0xf0177],1
  43277b:	bound  eax,QWORD PTR [ebp+0x50]
  43277e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432784:	add    BYTE PTR [ecx+0x558df0ff],cl
  43278a:	mov    al,0xf
  43278c:	test   DWORD PTR [edx],edx
  43278e:	call   DWORD PTR [ebp-0x7a0001]
  432794:	(bad)  
  432795:	loop   0x432796
  432797:	jnp    0xc6991b9d
  43279d:	mov    eax,ebx
  43279f:	cmp    al,0x8b
  4327a1:	(bad)  
  4327a2:	cld    
  4327a3:	shr    esi,0xc
  4327a6:	add    dl,al
  4327a8:	push   eax
  4327a9:	lea    eax,[ebp-0x1]
  4327ac:	mov    edx,esi
  4327ae:	cwde   
  4327af:	cli    
  4327b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4327b6:	or     BYTE PTR [eax],cl
  4327b8:	inc    ebp
  4327b9:	dec    ebp
  4327ba:	inc    DWORD PTR [ebx+0x74803914]
  4327c0:	add    DWORD PTR [ebx+0x451800],ecx
  4327c6:	call   DWORD PTR [eax+edx*1]
  4327c9:	add    ecx,DWORD PTR [ebp-0x34]
  4327cc:	push   edi
  4327cd:	adc    al,0x8
  4327cf:	mov    edx,DWORD PTR [ebp-0x14]
  4327d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4327d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4327d9:	inc    DWORD PTR [eax+esi*8]
  4327dc:	inc    ebp
  4327dd:	stos   BYTE PTR es:[edi],al
  4327de:	mov    edx,DWORD PTR [ebp-0x4]
  4327e1:	add    DWORD PTR [ebp-0x1c],eax
  4327e4:	mov    edx,DWORD PTR [ebp-0x70]
  4327e7:	cmp    eax,DWORD PTR [eax]
  4327e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4327ea:	mov    eax,DWORD PTR [eax]
  4327ec:	cld    
  4327ed:	jae    0x43276f
  4327ef:	add    eax,DWORD PTR [ecx]
  4327f1:	clc    
  4327f2:	add    BYTE PTR [eax+0x30],dl
  4327f5:	mov    DWORD PTR [ecx],esi
  4327f7:	clc    
  4327f8:	pop    ds
  4327f9:	inc    ebp
  4327fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432800:	(bad)  
  432801:	push   DWORD PTR [edi]
  432803:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432809:	(bad)  
  43280a:	jae    0x43280b
  43280c:	mov    eax,DWORD PTR [ebp-0x740175]
  432812:	sub    eax,DWORD PTR [eax]
  432814:	add    eax,DWORD PTR [eax]
  432816:	mov    DWORD PTR [ecx+0x5f],eax
  432819:	mov    DWORD PTR [ebx-0x4],ebx
  43281c:	ret    0xff
  43281f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432825:	ret    
  432826:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43282c:	add    BYTE PTR [ebp-0x7d],al
  43282f:	mov    DWORD PTR [eax],eax
  432831:	add    al,0x84
  432833:	inc    DWORD PTR [ecx]
  432835:	lea    eax,[eax]
  432837:	hlt    
  432838:	sar    bh,cl
  43283a:	test   BYTE PTR [eax+0x1],dl
  43283d:	inc    ebp
  43283e:	add    BYTE PTR [ebx],dh
  432840:	test   BYTE PTR [ebx],0x84
  432843:	push   eax
  432844:	add    BYTE PTR [ebp+0x0],al
  432847:	add    eax,0x86
  43284c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432852:	add    BYTE PTR [ecx],al
  432854:	add    BYTE PTR [eax],al
  432856:	mov    esi,0x550030
  43285b:	mov    ecx,DWORD PTR [edi]
  43285d:	cld    
  43285e:	fidiv  DWORD PTR [ebp+0x0]
  432861:	mov    edi,DWORD PTR [ecx]
  432863:	xor    BYTE PTR [eax+eax*1],0x84
  432867:	add    eax,DWORD PTR [eax]
  432869:	sbb    BYTE PTR [eax],al
  43286b:	jne    0x43281e
  43286d:	mov    eax,DWORD PTR [ecx]
  43286f:	sbb    BYTE PTR [eax],al
  432871:	mov    DWORD PTR [ebp-0x1],esp
  432874:	add    BYTE PTR [eax+0x30e45ca],bh
  43287a:	ret    0xb7fc
  43287d:	dec    ebp
  43287e:	or     al,0x89
  432880:	dec    ebp
  432881:	cld    
  432882:	cmovne ecx,DWORD PTR [eax-0x75]
  432886:	add    edi,esp
  432888:	seto   BYTE PTR [esi-0x72ffffff]
  43288f:	inc    ebp
  432890:	adc    al,0x8b
  432892:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432899:	cmp    DWORD PTR [edi+0x72],edx
  43289c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4328a2:	gs cmp al,0x0
  4328a5:	je     0x43287d
  4328a7:	push   eax
  4328a8:	sar    BYTE PTR [eax],1
  4328aa:	mov    bh,0x3e
  4328ac:	push   cs
  4328ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4328b3:	add    DWORD PTR [ecx+0x12],ebp
  4328b6:	dec    edx
  4328b7:	(bad)  
  4328b8:	mov    eax,edx
  4328ba:	in     al,dx
  4328bb:	adc    DWORD PTR [ecx],esi
  4328bd:	pop    esi
  4328be:	inc    ecx
  4328bf:	leave  
  4328c0:	or     DWORD PTR [eax],ebx
  4328c2:	gs push ebp
  4328c4:	add    ah,ch
  4328c6:	into   
  4328c7:	in     al,dx
  4328c8:	enter  0xb756,0xf0
  4328cc:	push   cs
  4328cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4328d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4328dd:	jnp    0x7443ade5
  4328e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4328e9:	add    BYTE PTR [edi],cl
  4328eb:	mov    edi,DWORD PTR [ecx-0x78]
  4328ee:	ltr    WORD PTR [ecx-0x7b]
  4328f2:	dec    DWORD PTR [edi]
  4328f4:	clc    
  4328f5:	out    0x45,eax
  4328f7:	add    BYTE PTR [eax],cl
  4328f9:	cmp    ebx,0xffffff8c
  4328fc:	jge    0x4328fe
  4328fe:	jb     0x432910
  432900:	je     0x522980
  432906:	pop    edx
  432907:	push   esi
  432908:	mov    ecx,DWORD PTR [edi]
  43290a:	in     al,dx
  43290b:	rol    DWORD PTR [ebp+0x0],1
  43290e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432915:	cmp    DWORD PTR [ecx],0xfffffff0
  432918:	hlt    
  432919:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43291f:	(bad)  
  432921:	push   eax
  432922:	jns    0xb8430da0
  432928:	lock push cs
  43292a:	ror    edx,0x3
  43292d:	test   BYTE PTR [ecx+0x5500e800],cl
  432933:	dec    eax
  432934:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432938:	(bad)  
  432939:	mov    esi,0x7f33ff5f
  43293e:	inc    eax
  43293f:	test   DWORD PTR [edx],eax
  432941:	je     0x432903
  432943:	mov    ecx,ecx
  432945:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432949:	and    eax,DWORD PTR [eax+0xf0103]
  43294f:	jp     0x43293d
  432951:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432955:	add    edx,DWORD PTR [edi+0x74]
  432958:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43295e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432964:	je     0x4328e9
  432966:	cmp    eax,edi
  432968:	js     0x43298d
  43296a:	add    eax,0xeb0fc003
  43296f:	jns    0x4328fc
  432971:	vmread DWORD PTR [ecx+0x45],ebx
  432975:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43297b:	adc    al,0x8b
  43297d:	jge    0x432993
  43297f:	mov    edi,DWORD PTR [eax-0x4]
  432982:	add    edi,DWORD PTR [edi]
  432984:	or     bh,bh
  432986:	push   ebp
  432987:	push   es
  432988:	mov    DWORD PTR [ebp-0x4],ebx
  43298b:	add    edi,esi
  43298d:	pop    es
  43298e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432994:	mov    DWORD PTR [esp+esi*8],ecx
  432997:	inc    ebp
  432998:	pop    ebp
  432999:	xor    DWORD PTR [esi-0x4],0x3b
  43299d:	add    edx,DWORD PTR [ecx+edi*1]
  4329a0:	push   es
  4329a1:	clc    
  4329a2:	mov    bh,0xdb
  4329a4:	jp     0x43295d
  4329a6:	add    cl,BYTE PTR [esi]
  4329a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4329ae:	test   edi,edi
  4329b0:	je     0x4329a6
  4329b2:	mov    eax,ecx
  4329b4:	or     BYTE PTR [ebx],al
  4329b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4329bc:	jbe    0x432a30
  4329be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4329c4:	add    ecx,DWORD PTR [esi]
  4329c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4329cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4329d2:	je     0x432a21
  4329d4:	mov    DWORD PTR [ecx],edi
  4329d6:	mov    esi,eax
  4329d8:	hlt    
  4329d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4329e0:	jb     0x4329a2
  4329e2:	jmp    0x4329cf
  4329e4:	xor    esi,DWORD PTR [ebx]
  4329e6:	pop    edi
  4329e7:	pop    esi
  4329e8:	pop    ebx
  4329e9:	ret    
  4329ea:	ret    0x8b
  4329ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4329f3:	xor    DWORD PTR [esi],0xc
  4329f6:	pushf  
  4329f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4329fd:	(bad)  
  4329ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a06:	dec    ebp
  432a07:	ret    
  432a08:	mov    edi,DWORD PTR [esi-0x4]
  432a0b:	pop    eax
  432a0c:	dec    ebp
  432a0d:	jne    0x43299a
  432a0f:	xor    edi,esp
  432a11:	inc    eax
  432a12:	dec    ebp
  432a13:	jbe    0x432a68
  432a15:	inc    eax
  432a16:	pop    ebp
  432a17:	add    edx,DWORD PTR [esi+0x8]
  432a1a:	push   ecx
  432a1b:	dec    eax
  432a1c:	push   ecx
  432a1d:	mov    eax,edi
  432a1f:	and    al,0xf0
  432a21:	jo     0x432a0e
  432a23:	mov    eax,DWORD PTR [ebx]
  432a25:	sbb    BYTE PTR [ebp+0x4d],cl
  432a28:	mov    eax,DWORD PTR [ebx]
  432a2a:	nop
  432a2b:	or     BYTE PTR [eax],al
  432a2d:	jne    0x432a86
  432a2f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432a35:	cld    
  432a36:	xor    edi,edi
  432a38:	add    edi,DWORD PTR [ebp+0x3]
  432a3b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432a41:	js     0x4329c7
  432a43:	jae    0x432a47
  432a45:	(bad)  
  432a47:	xor    al,0x5d
  432a49:	jmp    0x4329d6
  432a4b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432a52:	fdecstp 
  432a54:	test   BYTE PTR [edi],ah
  432a56:	add    bh,BYTE PTR [ebp+0x0]
  432a59:	add    ebx,DWORD PTR [ebp-0x77]
  432a5c:	mov    edi,eax
  432a5e:	cmp    al,0x0
  432a61:	adc    dh,BYTE PTR [ebx]
  432a63:	jge    0x432a68
  432a65:	mov    edi,DWORD PTR [ebx]
  432a67:	jl     0x432a78
  432a69:	clc    
  432a6a:	dec    edi
  432a6b:	jge    0x432a6d
  432a6d:	mov    eax,DWORD PTR [ebx]
  432a6f:	jb     0x432a79
  432a71:	mov    ecx,DWORD PTR [ebp-0x8]
  432a74:	mov    edi,edi
  432a76:	xor    edx,DWORD PTR [eax]
  432a78:	add    edi,DWORD PTR [ebx]
  432a7a:	mov    DWORD PTR [ebp-0x10],edi
  432a7d:	inc    edi
  432a7e:	pop    ebp
  432a7f:	jge    0x432abc
  432a81:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432a85:	mov    edx,0xc05d87f0
  432a8a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432a8e:	fimul  WORD PTR [eax]
  432a90:	fist   WORD PTR [ebp+0x1c]
  432a93:	in     al,dx
  432a94:	jne    0x432a82
  432a96:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432a9c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432aa0:	fdivp  st(0),st
  432aa2:	fild   WORD PTR [ebp+0x4510f85c]
  432aa8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432aae:	inc    ebp
  432aaf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432ab5:	mov    ebp,DWORD PTR [ebx-0x4]
  432ab8:	adc    al,0x8b
  432aba:	rcl    DWORD PTR [eax],0x48
  432abd:	mov    esi,0x7080803
  432ac2:	fiadd  WORD PTR [ebp+0x4d]
  432ac5:	mov    WORD PTR [ebx+0x558bfc52],cs
  432acb:	cld    
  432acc:	xor    ebx,DWORD PTR [ebx+0x330103]
  432ad2:	mov    DWORD PTR [edi+0x872dc],edi
  432ad8:	xlat   BYTE PTR ds:[ebx]
  432ad9:	into   
  432ada:	ffreep st(6)
  432adc:	retf   0x6c7
  432adf:	iret   
  432ae0:	dec    ebp
  432ae1:	inc    ebp
  432ae2:	mov    DWORD PTR [ebx],edi
  432ae4:	fmul   QWORD PTR [edi]
  432ae6:	dec    ebp
  432ae7:	jnp    0x432b1c
  432ae9:	add    BYTE PTR [ebx],al
  432aeb:	mov    ecx,DWORD PTR [esp+edi*8]
  432aee:	inc    ebp
  432aef:	dec    ebp
  432af0:	lea    esi,[ebx]
  432af2:	add    DWORD PTR [ebx],eax
  432af4:	jb     0x432b31
  432af6:	add    BYTE PTR [edi],cl
  432af8:	inc    ebp
  432af9:	imul   eax,edi,0x858bd800
  432aff:	cld    
  432b00:	clc    
  432b01:	mov    DWORD PTR [ebp+0x0],eax
  432b04:	inc    DWORD PTR [eax]
  432b06:	or     al,0xde
  432b08:	sbb    bh,0x1
  432b0b:	retf   
  432b0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b13:	dec    ebp
  432b14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b1a:	enter  0x12de,0xdf
  432b1e:	inc    ebp
  432b1f:	pop    ebp
  432b20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432b26:	add    DWORD PTR [edx],edx
  432b28:	add    BYTE PTR [ebp+0x50],dl
  432b2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432b31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432b37:	or     ah,al
  432b39:	pop    ss
  432b3a:	cdq    
  432b3b:	push   ebp
  432b3c:	clc    
  432b3d:	mov    eax,DWORD PTR [ebp-0x4]
  432b40:	xor    edx,edx
  432b42:	add    esi,DWORD PTR [ebx]
  432b44:	cmp    eax,DWORD PTR [ebx]
  432b46:	hlt    
  432b47:	cmp    DWORD PTR [ebx],esp
  432b49:	or     al,BYTE PTR [ebp+0xf]
  432b4c:	mov    eax,DWORD PTR [edx]
  432b4e:	loopne 0x432b50
  432b50:	(bad)  
  432b51:	mov    ecx,esi
  432b53:	cld    
  432b54:	pushf  
  432b55:	pop    ebp
  432b56:	cdq    
  432b57:	mov    esi,DWORD PTR [edx]
  432b59:	lock mov eax,eax
  432b5c:	adc    BYTE PTR [ebx],al
  432b5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432b65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432b6b:	dec    ebp
  432b6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432b72:	(bad)  
  432b73:	iret   
  432b74:	inc    ebp
  432b75:	(bad)  
  432b76:	jne    0x432bc5
  432b78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432b7e:	(bad)  
  432b7f:	cmp    ebx,eax
  432b81:	je     0x432b09
  432b83:	add    edi,edi
  432b85:	or     bh,bh
  432b87:	dec    ebp
  432b88:	inc    ebp
  432b89:	mov    esi,DWORD PTR [ebx]
  432b8b:	cld    
  432b8c:	add    ecx,esi
  432b8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432b91:	mov    edx,DWORD PTR [edi]
  432b93:	or     BYTE PTR [ebp-0x7c],al
  432b96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432b9c:	test   BYTE PTR [ecx+ebx*4],cl
  432b9f:	inc    ebp
  432ba0:	xor    bh,BYTE PTR ds:0x8be89c89
  432ba6:	out    dx,eax
  432ba7:	adc    BYTE PTR [eax],al
  432ba9:	jne    0x432b72
  432bab:	mov    ebp,esp
  432bad:	fcomp  DWORD PTR [ebx]
  432baf:	add    BYTE PTR [ecx],al
  432bb1:	inc    DWORD PTR [ebp-0x75]
  432bb4:	mov    esp,?
  432bb6:	add    al,0xce
  432bb8:	mov    ecx,edi
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	fidivr WORD PTR [ebx]
  432bbe:	fbstp  TBYTE PTR [ebp-0x3e]
  432bc1:	mov    eax,DWORD PTR [eax]
  432bc3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432bc9:	fadd   st,st(7)
  432bcb:	add    BYTE PTR [ebp-0x1],al
  432bce:	mov    ecx,DWORD PTR [esp+edi*8]
  432bd1:	inc    ebp
  432bd2:	mov    bh,0xc7
  432bd5:	loopne 0x432c1c
  432bd7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432bdd:	add    DWORD PTR [ebx],esi
  432bdf:	pushf  
  432be0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432be6:	mov    eax,edi
  432be8:	cwde   
  432be9:	inc    ebp
  432bea:	inc    ebp
  432beb:	jne    0x432b78
  432bed:	mov    esp,esp
  432bef:	clc    
  432bf0:	add    al,0x4d
  432bf2:	mov    DWORD PTR [ebx],esi
  432bf4:	or     al,0x33
  432bf6:	inc    ebp
  432bf7:	lea    ecx,[ebx-0x398d13fd]
  432bfd:	add    bh,al
  432bff:	inc    ebp
  432c00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c07:	add    ebp,esp
  432c09:	shufps xmm1,xmm3,0xc7
  432c0d:	(bad)  
  432c0e:	jmp    0x74886737
  432c13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c19:	hlt    
  432c1a:	mov    ecx,DWORD PTR [edi]
  432c1c:	fadd   DWORD PTR [ebp+0x0]
  432c1f:	xor    ecx,DWORD PTR [edi]
  432c21:	add    ecx,ecx
  432c23:	cmp    edi,edi
  432c25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432c29:	(bad)  
  432c2a:	jmp    0x432bb7
  432c2c:	mov    edi,esp
  432c2e:	or     al,0xc6
  432c30:	inc    ebp
  432c31:	(bad)  
  432c32:	mov    eax,DWORD PTR [ebp+0x10]
  432c35:	jne    0x432bc0
  432c37:	mov    eax,DWORD PTR [ecx]
  432c39:	clc    
  432c3a:	add    BYTE PTR [ebp-0x40],cl
  432c3d:	xor    edx,DWORD PTR [eax-0x73]
  432c40:	jne    0x432c43
  432c42:	push   DWORD PTR [edx+0x8]
  432c45:	add    BYTE PTR [ebp+0x45],al
  432c48:	mov    ebp,ecx
  432c4a:	cld    
  432c4b:	add    BYTE PTR [ebp+0x0],cl
  432c4e:	xor    eax,DWORD PTR [ebp+0x3]
  432c51:	mov    ?,WORD PTR [ebx]
  432c53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432c59:	sub    eax,0x5d330e4d
  432c5e:	lea    esi,[ebx]
  432c60:	add    DWORD PTR [ebx],eax
  432c62:	jb     0x432c4d
  432c64:	add    BYTE PTR [eax],al
  432c66:	inc    ebp
  432c67:	add    bl,ch
  432c69:	inc    ebp
  432c6a:	mov    esi,DWORD PTR [ebx]
  432c6c:	or     al,0x3
  432c6e:	(bad)  
  432c6f:	mov    edi,eax
  432c71:	in     al,dx
  432c72:	scas   eax,DWORD PTR es:[edi]
  432c73:	inc    ebp
  432c74:	mov    esi,DWORD PTR [ebx]
  432c76:	in     al,0x3
  432c78:	add    al,0x89
  432c7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432c7d:	dec    ebp
  432c7e:	(bad)  
  432c7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432c86:	mov    ecx,eax
  432c88:	cld    
  432c89:	push   es
  432c8a:	dec    ebp
  432c8b:	add    al,0x33
  432c8d:	mov    DWORD PTR [ebx],eax
  432c8f:	in     al,dx
  432c90:	cmp    DWORD PTR [ebp-0x67],eax
  432c93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432c99:	mov    edx,DWORD PTR [ebp-0x4]
  432c9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432c9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ca2:	cmp    DWORD PTR [ebx],0x8b327498
  432ca8:	xor    edi,esp
  432caa:	jmp    0xff7729fc
  432caf:	add    ecx,DWORD PTR [ebp-0x3f]
  432cb2:	xor    ebx,DWORD PTR [edi]
  432cb4:	add    eax,ecx
  432cb6:	cmp    ebx,DWORD PTR [eax]
  432cb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432cbb:	mov    ecx,DWORD PTR [eax]
  432cbd:	adc    BYTE PTR [ebp-0x80],al
  432cc0:	jmp    0x432cc3
  432cc2:	mov    eax,DWORD PTR [eax]
  432cc4:	cld    
  432cc5:	mov    bh,0xc6
  432cc7:	push   ecx
  432cc8:	(bad)  
  432cc9:	jne    0x432d29
  432ccb:	dec    ecx
  432ccd:	or     BYTE PTR [ecx+ebx*1],cl
  432cd0:	push   ebp
  432cd1:	inc    ebp
  432cd2:	in     al,dx
  432cd3:	add    ebp,esp
  432cd5:	or     bh,al
  432cd7:	dec    ebp
  432cd8:	cld    
  432cd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432cdf:	cmp    DWORD PTR [ecx],0x2
  432ce2:	pushf  
  432ce3:	dec    DWORD PTR [ebx+0x45510cf4]
  432ce9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432cef:	mov    edx,DWORD PTR [ecx+0xc]
  432cf2:	xor    eax,esi
  432cf4:	mov    edx,0xc172c7
  432cf9:	inc    ebp
  432cfa:	mov    esi,DWORD PTR [ebp+0x8]
  432cfd:	mov    eax,edx
  432cff:	call   0x84c7f3f4
  432d04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d0a:	mov    ebp,eax
  432d0c:	or     BYTE PTR [eax],dl
  432d0e:	jo     0x432d5d
  432d10:	push   edi
  432d11:	xor    esi,DWORD PTR [ebp+0x3]
  432d14:	(bad)  
  432d15:	pmulhuw mm0,mm1
  432d18:	test   DWORD PTR [ebp-0x8],ecx
  432d1b:	mov    DWORD PTR [ebp-0x67],eax
  432d1e:	mov    eax,DWORD PTR [ebp-0x4]
  432d21:	xor    edi,DWORD PTR [ebp-0x73]
  432d24:	xor    eax,DWORD PTR [ebx]
  432d26:	xor    esi,DWORD PTR [edx+0x3]
  432d29:	add    BYTE PTR [ecx],bh
  432d2b:	inc    ebp
  432d2c:	(bad)  
  432d2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432d33:	mov    DWORD PTR [eax],0x750f0004
  432d39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432d3f:	lock add BYTE PTR [ebp+0x0],cl
  432d43:	mov    esi,DWORD PTR [ebp-0x18]
  432d46:	mov    ebp,edx
  432d48:	or     al,0x72
  432d4a:	ja     0x432d4c
  432d4c:	mov    edx,esi
  432d4e:	cld    
  432d4f:	(bad)  
  432d52:	cli    
  432d53:	mov    esi,DWORD PTR [ebp-0x4]
  432d56:	cmp    ecx,esi
  432d58:	bswap  edi
  432d5a:	(bad)
  432d5e:	mov    esi,DWORD PTR [ebp-0x4]
  432d61:	mov    esi,ecx
  432d63:	clc    
  432d64:	repnz add esi,DWORD PTR [ebp+0x45]
  432d68:	push   ebx
  432d69:	xor    eax,DWORD PTR [ebp+0x3]
  432d6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432d6f:	pop    ebx
  432d70:	jmp    0x432e37
  432d75:	mov    esi,DWORD PTR [ebp-0x7d]
  432d78:	xor    ebp,DWORD PTR [eax]
  432d7a:	lea    eax,[ebp-0x8]
  432d7d:	ss repnz pushf 
  432d80:	out    dx,eax
  432d81:	(bad)  
  432d82:	neg    eax
  432d84:	ins    DWORD PTR es:[edi],dx
  432d85:	test   esi,edi
  432d87:	clc    
  432d88:	pop    esp
  432d89:	inc    ebp
  432d8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432d90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432d96:	add    cl,al
  432d98:	jne    0x432d33
  432d9a:	mov    esi,DWORD PTR [edx]
  432d9c:	in     al,dx
  432d9d:	push   esi
  432d9e:	xor    BYTE PTR [ebp-0xe],dh
  432da1:	add    edi,esi
  432da3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432da9:	add    cl,bh
  432dab:	mov    edi,DWORD PTR [ebp+0x8]
  432dae:	mov    DWORD PTR [ebp-0x14],esi
  432db1:	add    esi,DWORD PTR [ebp+0x3c]
  432db4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432dba:	mov    ah,0x3d
  432dbc:	cdq    
  432dbd:	pushf  
  432dbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432dc4:	jne    0x432d51
  432dc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432dc9:	icebp  
  432dca:	icebp  
  432dcb:	shl    edx,0xf2
  432dce:	(bad)  
  432dcf:	mov    ah,0x16
  432dd1:	inc    eax
  432dd2:	jne    0x432d67
  432dd4:	mov    ecx,DWORD PTR [edi]
  432dd6:	in     al,dx
  432dd7:	jmp    0x432dca
  432dd9:	add    dl,dh
  432ddb:	mov    edi,esi
  432ddd:	or     al,0x8
  432ddf:	inc    ebp
  432de0:	jne    0x432de5
  432de2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432de8:	ret    
  432de9:	or     bh,bh
  432deb:	jge    0x432dd5
  432ded:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432df3:	xor    edi,eax
  432df5:	add    esi,DWORD PTR [ebp-0x77]
  432df8:	mov    ebx,esp
  432dfa:	clc    
  432dfb:	neg    DWORD PTR [ebp-0x7c]
  432dfe:	xor    eax,DWORD PTR [eax]
  432e00:	cmp    eax,DWORD PTR [eax]
  432e02:	repz jne 0x432d9a
  432e05:	xor    eax,DWORD PTR [ecx]
  432e07:	add    ebx,DWORD PTR [eax]
  432e09:	mov    DWORD PTR [ebp-0x8],eax
  432e0c:	mov    eax,edi
  432e0e:	cld    
  432e0f:	lock pop eax
  432e11:	test   DWORD PTR [ebx],esi
  432e13:	clc    
  432e14:	add    edx,DWORD PTR [edi-0x740bff77]
  432e1a:	fdivp  st(4),st
  432e1c:	test   ecx,esi
  432e1e:	(bad)  
  432e1f:	jnp    0x432e20
  432e21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432e27:	jae    0x432db4
  432e29:	sub    edi,esp
  432e2b:	(bad)  
  432e2c:	shl    DWORD PTR [eax-0x3e],0x89
  432e30:	leave  
  432e31:	call   0x8198e53e
  432e36:	in     al,dx
  432e37:	(bad)  
  432e38:	in     al,dx
  432e39:	add    bh,al
  432e3b:	mov    esp,edi
  432e3d:	in     al,dx
  432e3e:	test   DWORD PTR [ebp-0x8],edi
  432e41:	mov    eax,DWORD PTR [ebp+0x2b]
  432e44:	cmp    DWORD PTR [ebx],eax
  432e46:	pushf  
  432e47:	jnp    0x57322a80
  432e4d:	xor    edx,DWORD PTR [ecx-0x77]
  432e50:	push   ecx
  432e51:	loopne 0x432e86
  432e53:	jne    0x432e10
  432e55:	mov    esi,DWORD PTR [edx-0x20]
  432e58:	add    BYTE PTR [ebp-0x3d],bh
  432e5b:	xor    eax,DWORD PTR [ebp-0x73]
  432e5e:	mov    edi,DWORD PTR [esi]
  432e60:	cld    
  432e61:	jb     0x432e29
  432e63:	add    bl,al
  432e65:	jne    0x432eac
  432e67:	mov    edx,DWORD PTR [edi-0x10]
  432e6a:	jge    0x432ee9
  432e6c:	mov    esi,DWORD PTR [ebx]
  432e6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432e72:	xor    esi,DWORD PTR [ebp-0x77]
  432e75:	mov    esi,eax
  432e77:	lock inc ebp
  432e79:	jge    0x432eb1
  432e7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432e82:	dec    ebp
  432e83:	mov    esi,DWORD PTR [ebx]
  432e85:	loopne 0x432e10
  432e87:	jge    0x432e81
  432e89:	add    DWORD PTR [ebp-0x7d],eax
  432e8c:	test   BYTE PTR [edx],0x9c
  432e8f:	dec    ebp
  432e90:	mov    esi,DWORD PTR [ebp-0xc]
  432e93:	mov    ecx,DWORD PTR [ebp-0xc]
  432e96:	xor    ebx,DWORD PTR [ebp-0x77]
  432e99:	mov    esi,esp
  432e9b:	in     al,0x45
  432e9d:	jge    0x432ed9
  432e9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432ea6:	dec    ebp
  432ea7:	inc    esp
  432ea8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432eae:	inc    ebp
  432eaf:	hlt    
  432eb0:	ss jne 0x432e52
  432eb3:	mov    edi,DWORD PTR [eax+0xf19504]
  432eb9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432ebd:	cmp    eax,DWORD PTR [ebp+0xf]
  432ec0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432ec4:	fistp  WORD PTR [ebx+0x0]
  432ec7:	inc    ebp
  432ec8:	mov    ebx,DWORD PTR [edi+0xc]
  432ecb:	add    eax,eax
  432ecd:	inc    ebp
  432ece:	test   BYTE PTR [ebx],dh
  432ed0:	add    eax,DWORD PTR [ebx]
  432ed2:	add    BYTE PTR [esi+0x45],bl
  432ed5:	ret    0x85
  432ed8:	jnp    0x5443b2a7
  432ede:	inc    bp
  432ee0:	inc    ebp
  432ee1:	ss mov ecx,0xc78a9c
  432ee7:	fdiv   QWORD PTR [ebx]
  432ee9:	test   DWORD PTR [ecx+0x453af8],edi
  432eef:	push   ebx
  432ef0:	add    edi,DWORD PTR [esi+0x708088b]
  432ef6:	cmp    esi,eax
  432ef8:	setns  BYTE PTR [ecx-0x74fcffce]
  432eff:	mov    esp,edi
  432f01:	call   0x33ce7453
  432f06:	or     BYTE PTR [ebx],al
  432f08:	inc    ecx
  432f09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f15:	lock add cl,al
  432f18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f1f:	mov    ch,0x45
  432f21:	clc    
  432f22:	xor    eax,DWORD PTR [ebp+0x3]
  432f25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432f2b:	inc    ebp
  432f2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432f32:	mov    edi,eax
  432f34:	mov    eax,DWORD PTR [ebp+0x3c]
  432f37:	mov    ecx,DWORD PTR [eax]
  432f39:	hlt    
  432f3a:	inc    ebp
  432f3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432f42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432f48:	push   ebp
  432f49:	mov    edi,DWORD PTR [ebx]
  432f4b:	in     al,dx
  432f4c:	jne    0x432f0f
  432f4e:	mov    eax,DWORD PTR [ebp-0x28]
  432f51:	add    DWORD PTR [eax],0xe8058dec
  432f57:	clc    
  432f58:	mov    esi,DWORD PTR [edi-0x8]
  432f5b:	add    dh,dl
  432f5d:	rol    WORD PTR [ebp-0x1],cl
  432f61:	mov    edx,DWORD PTR [eax+0x8]
  432f64:	jne    0x432f26
  432f66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432f6d:	inc    ebp
  432f6e:	push   esp
  432f6f:	test   DWORD PTR [ecx+0xf],ecx
  432f72:	sub    edx,esp
  432f74:	add    eax,DWORD PTR [eax]
  432f76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432f7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432f83:	mov    eax,DWORD PTR [ecx]
  432f85:	and    BYTE PTR [eax],al
  432f87:	cmp    BYTE PTR [eax],dl
  432f89:	add    BYTE PTR [ebp+0x66],al
  432f8c:	inc    ecx
  432f8e:	push   esp
  432f8f:	(bad)  
  432f90:	jne    0x432f92
  432f92:	push   edx
  432f93:	enterw 0xc1,0x4d
  432f98:	mov    esp,DWORD PTR [esi+0x20]
  432f9b:	add    DWORD PTR [ecx-0x7b],eax
  432f9e:	add    eax,DWORD PTR [ebx]
  432fa0:	str    WORD PTR [eax+0x45]
  432fa4:	lea    ecx,[ebx+0x45890801]
  432faa:	sbb    BYTE PTR [ebx],al
  432fac:	dec    ebp
  432fad:	cmp    al,0xf
  432faf:	inc    ebp
  432fb0:	push   eax
  432fb1:	mov    esi,DWORD PTR [ebx]
  432fb3:	push   eax
  432fb4:	add    eax,eax
  432fb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432fbd:	inc    ebp
  432fbe:	add    BYTE PTR [esi],dh
  432fc0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432fc7:	(bad)  
  432fc8:	mov    ebx,eax
  432fca:	loopne 0x433011
  432fcc:	dec    ebp
  432fcd:	mov    ecx,DWORD PTR [edi]
  432fcf:	cld    
  432fd0:	push   eax
  432fd1:	xchg   DWORD PTR [ebx],esi
  432fd3:	add    DWORD PTR [ebx],ebp
  432fd5:	add    BYTE PTR [ebx],ch
  432fd7:	or     BYTE PTR [ecx],bh
  432fd9:	dec    ecx
  432fda:	loopne 0x432fdf
  432fdc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432fe2:	push   ebp
  432fe3:	add    DWORD PTR [ebx+0x55100800],eax
  432fe9:	dec    ebp
  432fea:	jmp    0x432f75
  432fec:	mov    esp,DWORD PTR [eax]
  432fee:	sbb    dl,dl
  432ff0:	inc    eax
  432ff1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ff7:	add    BYTE PTR [ebx+0x74528555],cl
  432ffd:	push   ebp
  432ffe:	div    DWORD PTR [ebx]
  433000:	and    eax,DWORD PTR [ebx]
  433002:	add    edx,DWORD PTR [edx-0x30]
  433005:	jno    0x432f92
  433007:	inc    DWORD PTR [eax+eiz*1]
  43300a:	inc    ebp
  43300b:	push   eax
  43300c:	push   eax
  43300d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433013:	mov    edi,esp
  433015:	push   eax
  433016:	inc    ebp
  433017:	enter  0x458b,0x8
  43301b:	push   ecx
  43301c:	(bad)  
  43301d:	call   0x10d39f5
  433022:	pop    ss
  433023:	push   ebp
  433024:	mov    ecx,DWORD PTR [ebx+0x489408]
  43302a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  433030:	push   ecx
  433031:	jo     0x43301b
  433033:	inc    DWORD PTR [edi]
  433035:	or     BYTE PTR [eax],al
  433037:	call   0xce3781
  43303c:	fmul   QWORD PTR [ebp+0x55]
  43303f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  433045:	mov    bh,0x8c
  433047:	adc    al,0x99
  433049:	dec    esp
  43304a:	xor    bl,BYTE PTR [eax]
  43304c:	mov    ecx,DWORD PTR [ebp+0xc]
  43304f:	mov    eax,DWORD PTR [ebp-0x4]
  433052:	mov    esi,DWORD PTR [edi-0x3148f924]
  433058:	push   es
  433059:	retf   
  43305a:	mov    BYTE PTR [ebp-0x30],0x3b
  43305e:	inc    ebp
  43305f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  433066:	retf   0x83fc
  433069:	into   
  43306a:	dec    ebp
  43306b:	retf   
  43306c:	mov    ecx,DWORD PTR [ebp-0x74]
  43306f:	mov    eax,DWORD PTR [eax]
  433071:	fdiv   QWORD PTR [ebx]
  433073:	mov    bh,0x3
  433075:	push   es
  433076:	mov    esi,ecx
  433078:	sbb    cl,dl
  43307a:	dec    ebp
  43307b:	sar    DWORD PTR [ebx],cl
  43307d:	push   ebp
  43307e:	jne    0x43308f
  433080:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433086:	lea    ebx,[eax]
  433088:	call   0xf4ccbc4f
  43308d:	sbb    dh,dl
  43308f:	add    edx,ebx
  433091:	push   ebp
  433092:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433098:	push   ecx
  433099:	mov    DWORD PTR [eax-0x30],edx
  43309c:	test   DWORD PTR [edx],eax
  43309e:	xadd   esp,esi
  4330a1:	pop    es
  4330a2:	add    cl,dl
  4330a4:	mov    eax,ecx
  4330a6:	or     al,0x45
  4330a8:	(bad)  
  4330a9:	push   eax
  4330aa:	add    DWORD PTR [edx+0x0],eax
  4330ad:	add    ecx,DWORD PTR [ecx]
  4330af:	and    dh,cl
  4330b1:	call   0xc73981
  4330b6:	add    DWORD PTR [ebp+0x0],edx
  4330b9:	mov    esp,DWORD PTR [ebp+0x18]
  4330bc:	add    BYTE PTR [eax+0x48],cl
  4330bf:	xor    eax,DWORD PTR [eax]
  4330c1:	add    esp,DWORD PTR [esi+0x3b]
  4330c4:	inc    ebp
  4330c5:	je     0x43304a
  4330c7:	push   ecx
  4330c8:	push   es
  4330c9:	dec    ebp
  4330ca:	mov    DWORD PTR [ebx],eax
  4330cc:	(bad)  
  4330cd:	or     al,0x5e
  4330cf:	inc    eax
  4330d0:	add    BYTE PTR [ebx],al
  4330d2:	data16 and BYTE PTR [ebp+0x50],al
  4330d6:	sub    DWORD PTR [ecx],0xfffffff8
  4330d9:	add    BYTE PTR [ebp-0x75],ah
  4330dc:	add    BYTE PTR [eax],bl
  4330de:	enter  0x894d,0x8b
  4330e2:	int3   
  4330e3:	loopne 0x43311f
  4330e5:	rol    BYTE PTR [eax],0x33
  4330e8:	lea    cx,[ebp+0xa]
  4330ec:	data16 jb 0x433134
  4330ef:	add    BYTE PTR [ebx+0x44890855],cl
  4330f5:	sbb    ah,al
  4330f7:	inc    ebp
  4330f8:	cmp    BYTE PTR [edi],cl
  4330fa:	add    BYTE PTR [edx+0x66],dl
  4330fd:	xor    ecx,DWORD PTR [eax]
  4330ff:	sub    edi,esi
  433101:	mov    eax,DWORD PTR [eax]
  433103:	or     al,0x66
  433105:	ror    edx,cl
  433107:	dec    ebp
  433108:	inc    ebp
  433109:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43310f:	cld    
  433110:	or     BYTE PTR [edi+0x4501dd],dl
  433116:	ret    0xe8ce
  433119:	retf   
  43311a:	(bad)  
  43311b:	dec    ebp
  43311c:	mov    al,0x8b
  43311e:	in     al,dx
  43311f:	and    BYTE PTR [ebx],bh
  433121:	or     al,BYTE PTR [ebp+0x27]
  433124:	in     al,dx
  433125:	xchg   eax,ebp
  433127:	add    edi,eax
  433129:	add    BYTE PTR [eax+0x3f52ed55],bh
  43312f:	push   ebp
  433130:	inc    ebp
  433131:	xor    ebx,edx
  433133:	add    ebp,eax
  433135:	push   edx
  433136:	push   bp
  433138:	inc    ebp
  433139:	(bad)  
  43313a:	jmp    0xc342f793
  43313f:	sbb    al,0x33
  433141:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433148:	add    BYTE PTR [ebp+0x44],0x8b
  43314c:	jmp    0xf98b:0x100041c8
  433153:	xor    esi,DWORD PTR [edx+0x3]
  433156:	mov    ecx,DWORD PTR [edi]
  433158:	fmul   DWORD PTR [edx]
  43315a:	add    BYTE PTR [eax],al
  43315c:	lea    eax,[ebx-0x4700273c]
  433162:	add    al,0x4f
  433164:	pop    DWORD PTR [eax]
  433166:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43316c:	push   edx
  43316d:	inc    WORD PTR [ebp+0x8]
  433171:	mov    eax,0x514f4d
  433176:	(bad)
  43317a:	add    al,al
  43317c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433182:	test   DWORD PTR [esi+0x74],esp
  433185:	inc    ebp
  433186:	mov    DWORD PTR [eax+0xa4f08],edi
  43318c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433192:	or     dh,cl
  433194:	or     eax,0x8b8d5045
  433199:	inc    ebp
  43319a:	mov    WORD PTR [ecx+0x3b8a00],?
  4331a0:	jne    0x4331d5
  4331a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4331a8:	add    DWORD PTR [ebx],eax
  4331aa:	add    bh,bh
  4331ac:	adc    DWORD PTR [eax],ecx
  4331ae:	adc    DWORD PTR [ebp+0x55],edi
  4331b1:	push   es
  4331b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4331b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4331bf:	inc    ebp
  4331c0:	mov    esp,edi
  4331c2:	or     al,0xda
  4331c4:	push   eax
  4331c5:	(bad)  
  4331c6:	jne    0x43317c
  4331c8:	call   0x3b2ab7
  4331cd:	inc    ebp
  4331ce:	rol    ah,0x84
  4331d1:	call   0xbc43f8d6
  4331d6:	jne    0x4331b2
  4331d8:	mov    ebx,ebx
  4331da:	inc    edi
  4331dc:	and    al,al
  4331de:	fs jmp 0x7ec877e3
  4331e4:	bswap  ecx
  4331e6:	scas   al,BYTE PTR es:[edi]
  4331e7:	inc    esp
  4331e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4331ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4331f6:	call   DWORD PTR [edi]
  4331f8:	shr    ah,0x84
  4331fb:	xchg   DWORD PTR [eax],eax
  4331fd:	add    DWORD PTR [eax],eax
  4331ff:	add    bh,bh
  433201:	dec    ebp
  433202:	and    BYTE PTR [ecx-0x38],dl
  433205:	push   eax
  433206:	dec    DWORD PTR [ebx+0xfd885]
  43320c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433212:	mov    WORD PTR [ecx+0x0],ss
  433215:	lea    ecx,[ebx+0x108b20d8]
  43321b:	mov    WORD PTR [edx],ds
  43321d:	add    BYTE PTR [edi+0xff01ff],al
  433223:	mov    ecx,DWORD PTR [ebp-0x28]
  433226:	push   ecx
  433227:	shl    BYTE PTR [ebp+0x3a],0x8b
  43322b:	inc    ebp
  43322c:	in     al,0xeb
  43322e:	jno    0x4331bb
  433230:	push   edx
  433231:	mov    DWORD PTR [eax-0x28],edx
  433234:	mov    eax,DWORD PTR [ebp+0x20]
  433237:	je     0x4331c0
  433239:	mov    eax,DWORD PTR [ecx]
  43323b:	sbb    BYTE PTR [eax],al
  43323d:	pop    DWORD PTR [eax]
  43323f:	add    esi,eax
  433241:	add    bl,al
  433243:	adc    DWORD PTR [edi],esi
  433245:	jmp    0x8bce8297
  43324a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433251:	jne    0x4331de
  433253:	mov    ecx,DWORD PTR [eax]
  433255:	in     al,0x75
  433257:	pop    DWORD PTR [ecx+0x5101]
  43325d:	push   edx
  43325e:	inc    DWORD PTR [ebx]
  433260:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433266:	add    BYTE PTR [edi+0x9],dl
  433269:	call   DWORD PTR [esi]
  43326b:	and    dl,al
  43326d:	and    bh,bh
  43326f:	inc    edi
  433271:	test   eax,edx
  433273:	sldt   ebx
  433276:	cmp    DWORD PTR [eax],eax
  433278:	pushf  
  433279:	(bad)  
  43327a:	jmp    0x433288
  43327c:	mov    eax,edi
  43327e:	or     al,0x75
  433280:	inc    eax
  433281:	call   0x432989
  433286:	mov    eax,eax
  433288:	loopne 0x43320e
  43328a:	inc    ebp
  43328b:	add    BYTE PTR [ebx+0x1451c00],cl
  433291:	mov    eax,DWORD PTR [ebp+0x20]
  433294:	add    edi,ecx
  433296:	add    BYTE PTR [eax],ch
  433298:	cmp    edi,0x18
  43329b:	test   DWORD PTR [ebp+0xf],esi
  43329e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4332a5:	jne    0x4332a9
  4332a7:	call   0xffa22d6c
  4332ac:	leave  
  4332ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4332b1:	add    ah,ch
  4332b3:	add    BYTE PTR [edi-0x48fef979],dh
  4332b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4332c0:	inc    esp
  4332c1:	mov    ebx,DWORD PTR [eax]
  4332c3:	fcom   st(2)
  4332c5:	add    BYTE PTR [edi],bl
  4332c7:	lea    ecx,[eax-0x18]
  4332ca:	(bad)  
  4332cb:	push   DWORD PTR [ecx]
  4332cd:	call   0xffb5802f
  4332d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4332d6:	fstp   DWORD PTR [esi+ebx*8]
  4332d9:	push   ebp
  4332da:	pop    ebp
  4332db:	mov    esi,DWORD PTR [edx-0x38]
  4332de:	add    DWORD PTR [eax],0x28
  4332e1:	mov    edi,DWORD PTR [ebx]
  4332e3:	xor    esi,DWORD PTR [edx+0x3]
  4332e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4332ea:	pop    ebp
  4332eb:	or     al,0x4
  4332ed:	inc    ecx
  4332ee:	push   ebp
  4332ef:	(bad)  
  4332f0:	in     al,dx
  4332f1:	or     ah,ch
  4332f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332f4:	xbegin 0xffc8a8ea
  4332fa:	clc    
  4332fb:	adc    al,0x45
  4332fd:	idiv   BYTE PTR [ecx]
  4332ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433306:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43330c:	add    BYTE PTR [ecx+0x66],dh
  43330f:	add    eax,DWORD PTR [ebp+0x52]
  433312:	adc    eax,0x20
  433315:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43331b:	test   DWORD PTR [eax],eax
  43331d:	clc    
  43331e:	data16 or al,BYTE PTR [ebp+0x45]
  433322:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433329:	rol    BYTE PTR [ebp+0x45],1
  43332c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433332:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433338:	push   ebx
  433339:	add    BYTE PTR [ecx+0x0],dl
  43333c:	push   ecx
  43333d:	jge    0x433372
  43333f:	add    BYTE PTR [esi+0x4],dl
  433342:	jne    0x4333a9
  433344:	mov    edx,0x457200
  433349:	jmp    0x43330d
  43334b:	xor    edi,DWORD PTR [ebx]
  43334d:	pop    edi
  43334e:	cvtdq2ps xmm7,xmm0
  433351:	ret    0x0
  433354:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43335a:	xor    ecx,DWORD PTR [edi]
  43335c:	add    eax,DWORD PTR [ecx+0x3b]
  43335f:	push   ebx
  433360:	rdpmc  
  433362:	out    0x8d,al
  433364:	add    BYTE PTR [eax],cl
  433366:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43336c:	ret    0x450c
  43336f:	sbb    al,0x8b
  433371:	cmp    eax,esi
  433373:	or     cl,al
  433375:	or     al,0xc2
  433377:	pop    eax
  433378:	inc    ebp
  433379:	add    ecx,DWORD PTR [edi]
  43337b:	add    esi,DWORD PTR [ebp+0x39]
  43337e:	invd   
  433380:	jge    0x43338c
  433382:	mov    eax,0x478ac0
  433387:	cli    
  433388:	xor    esp,ecx
  43338a:	mov    ebx,0x5b8ac0
  43338f:	ret    0x33
  433392:	mov    eax,0x833a8b
  433397:	sub    BYTE PTR [ebx],al
  433399:	inc    ebp
  43339a:	data16 ss clc 
  43339d:	pushf  
  43339e:	inc    bh
  4333a0:	mov    esp,esp
  4333a2:	hlt    
  4333a3:	test   DWORD PTR [ebp-0x8],esi
  4333a6:	mov    eax,DWORD PTR [ebp-0x14]
  4333a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4333af:	dec    edi
  4333b0:	or     BYTE PTR [eax],al
  4333b2:	jne    0x43333d
  4333b4:	mov    esi,esp
  4333b6:	call   0x77a9bf7b
  4333bb:	inc    ebp
  4333bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4333c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4333c8:	add    BYTE PTR [esi+0x7d],ah
  4333cb:	inc    ebp
  4333cc:	mov    bx,WORD PTR [ebp+0x8]
  4333d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4333d7:	inc    ebp
  4333d8:	mov    bx,di
  4333db:	lock test BYTE PTR [ecx+0x7000801],bh
  4333e2:	jge    0x4333a5
  4333e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4333ea:	cli    
  4333eb:	xor    bl,bh
  4333ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4333f3:	test   BYTE PTR [eax],cl
  4333f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4333fc:	cmp    ebp,eax
  4333fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433405:	test   BYTE PTR [ebp+0x1],bh
  433408:	mov    ebx,0x458a00
  43340d:	xor    esi,DWORD PTR [ebx]
  43340f:	add    esp,DWORD PTR [esi-0x77]
  433412:	pop    ebp
  433413:	loopne 0x43347b
  433415:	inc    ebp
  433416:	clc    
  433417:	xor    edi,DWORD PTR [ebx]
  433419:	add    esi,DWORD PTR [edx-0x77]
  43341c:	data16 fdivr QWORD PTR [ebp-0x49]
  433420:	mov    ebx,0xb78afc
  433425:	hlt    
  433426:	xor    edi,DWORD PTR [eax]
  433428:	data16 add BYTE PTR [ebp+0x66],bl
  43342c:	data16 lock clc 
  43342f:	cmp    BYTE PTR [ebx],bh
  433431:	add    BYTE PTR [edi+0x66],dh
  433434:	psubq  mm7,QWORD PTR [ebp-0x2]
  433438:	ltr    WORD PTR [ebp+0x66]
  43343c:	add    esi,eax
  43343e:	add    di,WORD PTR [ebp+0x2b]
  433442:	data16 data16 jge 0x4334c3
  433446:	mov    ebx,0xe08a8b
  43344b:	jge    0x433480
  43344d:	data16 data16 xor al,0x5d
  433451:	data16 data16 jne 0x43344d
  433455:	mov    edi,DWORD PTR [ebx]
  433457:	fdiv   QWORD PTR [edx+0x7d]
  43345a:	data16 data16 jge 0x433492
  43345e:	mov    ebx,0x758a66
  433463:	mov    esi,0x667233
  433468:	pop    ebp
  433469:	or     BYTE PTR [esi+0x0],ah
  43346c:	clc    
  43346d:	mov    edi,DWORD PTR [ebx]
  43346f:	lock ja 0x4333fd
  433472:	(bad)  
  433474:	jge    0x43346d
  433476:	invd   
  433478:	pop    ebp
  433479:	add    BYTE PTR [ebx],al
  43347b:	(bad)  
  43347c:	cmp    di,WORD PTR [ebp+0xf]
  433480:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433484:	mov    bx,WORD PTR [ebp-0x10]
  433488:	pop    bp
  43348a:	fbstp  TBYTE PTR [ebx]
  43348c:	test   DWORD PTR [ebx],eax
  43348e:	add    BYTE PTR [ebx],bh
  433490:	add    BYTE PTR [esi+0x7d],ah
  433493:	jge    0x433420
  433495:	data16 in al,dx
  433497:	pop    ebp
  433498:	stc    
  433499:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4334a0:	mov    edi,ebx
  4334a2:	in     al,dx
  4334a3:	test   BYTE PTR [ebp+0x0],bh
  4334a6:	mov    eax,DWORD PTR [eax]
  4334a8:	call   0xbd402e38
  4334ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4334b3:	sti    
  4334b4:	call   0x8b4bb244
  4334b9:	add    ebp,esp
  4334bb:	mov    bx,di
  4334be:	jnp    0x4334e6
  4334c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4334c6:	mov    eax,DWORD PTR [eax]
  4334c8:	call   0x7c3ec033
  4334cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4334d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4334d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4334e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4334e8:	(bad)  
  4334e9:	cld    
  4334ea:	jne    0x433524
  4334ec:	xor    eax,DWORD PTR [eax]
  4334ee:	mov    esp,DWORD PTR [esi-0x10]
  4334f1:	sti    
  4334f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4334f9:	data16 adc bl,bh
  4334fc:	push   ebp
  4334fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433504:	mov    WORD PTR [eax],es
  433506:	cdq    
  433507:	data16 xor bh,bl
  43350a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433510:	mov    esp,DWORD PTR [esi-0x14]
  433513:	fisttp WORD PTR [ebx-0x3748a9f2]
  433519:	or     al,0x2b
  43351b:	mov    bh,0xba
  43351d:	hlt    
  43351e:	mov    bh,bl
  433520:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433526:	dec    edi
  433527:	or     al,0x0
  433529:	mov    edi,DWORD PTR [ebx]
  43352b:	or     BYTE PTR [ebp+0x3b],dh
  43352e:	mov    ecx,DWORD PTR [edi]
  433530:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433536:	xor    al,0xd8
  433538:	pop    bp
  43353a:	lock xor esi,DWORD PTR [ebx]
  43353d:	lea    esp,[esi+0x1f]
  433540:	icebp  
  433541:	jb     0x433547
  433543:	add    al,al
  433545:	jge    0x433553
  433547:	mov    eax,eax
  433549:	fsubr  st,st(3)
  43354b:	pop    ebp
  43354c:	mov    esi,DWORD PTR [ebx]
  43354e:	in     al,0x8d
  433550:	rcr    DWORD PTR [edi],0xc2
  433553:	jb     0x4335b3
  433555:	add    cl,cl
  433557:	jge    0x433565
  433559:	mov    edx,DWORD PTR [ebp-0x20]
  43355c:	in     al,dx
  43355d:	pop    ebp
  43355e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433563:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433567:	mov    ebp,DWORD PTR [ebx]
  433569:	fdivr  QWORD PTR [esi+0x668a5d]
  43356f:	cmp    al,0x33
  433571:	mov    si,0x4f7d
  433575:	mov    eax,DWORD PTR [eax]
  433577:	lock inc ebp
  433579:	mov    esi,DWORD PTR [edi]
  43357b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433582:	clc    
  433583:	(bad)  
  433584:	cmp    edi,DWORD PTR [ebx]
  433586:	je     0x433597
  433588:	push   ebx
  433589:	loopne 0x43359a
  43358b:	dec    ecx
  43358d:	mov    esp,DWORD PTR [edi-0x1c]
  433590:	int    0xf1
  433592:	mov    esi,0x703084d
  433597:	pcmpgtd mm6,mm1
  43359a:	add    BYTE PTR [ebp+0x66],dh
  43359d:	jmp    0x43356a
  43359f:	mov    eax,DWORD PTR [ebx]
  4335a1:	lock push ebp
  4335a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4335a9:	or     bh,dl
  4335ab:	jb     0x4335ab
  4335ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4335b3:	loopne 0x4335b5
  4335b5:	jne    0x4335b5
  4335b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4335bb:	mov    ecx,ebx
  4335bd:	data16 cmp cl,dh
  4335c0:	add    BYTE PTR [eax],bh
  4335c2:	data16 add bl,cl
  4335c5:	data16 cmp dh,dl
  4335c8:	add    BYTE PTR [edx],bh
  4335ca:	data16 add bl,cl
  4335cd:	enterw 0x4df1,0x19
  4335d2:	pop    edi
  4335d3:	jne    0x433556
  4335d5:	mov    esi,DWORD PTR [edi]
  4335d7:	call   0x77b7c178
  4335dc:	xor    ebp,DWORD PTR [ebx]
  4335de:	lea    esp,[esi+0x48]
  4335e1:	repnz in eax,0x3b
  4335e4:	add    BYTE PTR [ebp-0x37],dh
  4335e7:	xor    edx,DWORD PTR [ebp-0x15]
  4335ea:	in     al,dx
  4335eb:	xor    edx,DWORD PTR [esi+0x40]
  4335ee:	mov    DWORD PTR [edi],0x338545fc
  4335f4:	clc    
  4335f5:	add    esi,DWORD PTR [esi]
  4335f7:	pop    edi
  4335f8:	pushf  
  4335f9:	pop    ebx
  4335fa:	call   0xff4435c1
  4335ff:	mov    edi,eax
  433601:	push   ecx
  433602:	pop    es
  433603:	mov    edi,DWORD PTR [edx]
  433605:	push   esi
  433606:	inc    esp
  433607:	(bad)  
  433608:	jle    0x43360a
  43360a:	popa   
  43360b:	data16 (bad) 
  43360d:	into   
  43360e:	addr16 cmp ch,cl
  433611:	add    BYTE PTR [ecx+0x7ce0866],bh
  433617:	cmp    ah,BYTE PTR [esi+0x0]
  43361a:	add    bh,al
  43361c:	(bad)  
  43361d:	cld    
  43361e:	add    BYTE PTR [ebp+0x36c3f866],al
  433624:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43362b:	pop    ebp
  43362c:	or     BYTE PTR [edi+0x0],dl
  43362f:	mov    bh,0x66
  433631:	mov    edi,0xff038dc3
  433636:	jne    0x433689
  433638:	lea    edx,[ecx+0x1]
  43363b:	mov    ebx,0xd64ff1
  433640:	sar    DWORD PTR [ebx],1
  433642:	test   BYTE PTR [ebp+0x32],dh
  433645:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433649:	push   edi
  43364a:	xor    BYTE PTR [ebx],0x3a
  43364d:	mov    esi,ebx
  43364f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433655:	xor    al,BYTE PTR [ebp+0x64]
  433658:	pop    ebx
  433659:	mov    ebx,0x9c3a37
  43365e:	je     0x43368b
  433660:	xor    edi,DWORD PTR [ebx+0x668a33]
  433666:	mov    WORD PTR [ebx],?
  433668:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43366e:	pop    edi
  43366f:	cmp    ecx,ecx
  433671:	jne    0x4336c8
  433673:	mov    ebp,esp
  433675:	cld    
  433676:	push   esi
  433677:	pop    ebx
  433678:	inc    ebp
  433679:	stc    
  43367a:	aaa    
  43367b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433682:	clc    
  433683:	test   dl,dl
  433685:	xor    al,0xff
  433687:	fs pop si
  43368a:	or     bl,al
  43368c:	dec    BYTE PTR [ebx+0x57665100]
  433692:	retf   0x3845
  433695:	aaa    
  433696:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43369d:	clc    
  43369e:	add    BYTE PTR [ebx+0x66],bl
  4336a1:	dec    edx
  4336a3:	mov    edx,DWORD PTR [edi-0x76]
  4336a6:	push   edi
  4336a7:	add    al,0xb7
  4336a9:	xor    al,0xba
  4336ab:	cmp    al,0x8d
  4336ad:	je     0x4336ae
  4336af:	mov    edx,DWORD PTR [ecx-0x46]
  4336b2:	push   ecx
  4336b3:	lea    edi,[ebx+0x514fff]
  4336b9:	push   ecx
  4336ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4336bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4336c3:	add    BYTE PTR [ebx],dh
  4336c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4336cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4336d2:	mov    ebx,0x3b3a00
  4336d7:	jne    0x433704
  4336d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4336df:	xor    esi,DWORD PTR [ebx]
  4336e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4336e7:	push   edi
  4336e8:	cmp    esp,ebp
  4336ea:	jne    0x4336ec
  4336ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4336f2:	clc    
  4336f3:	inc    esp
  4336f4:	pop    ebx
  4336f5:	sti    
  4336f6:	add    eax,0xeb8bc075
  4336fb:	cld    
  4336fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433702:	mov    ecx,DWORD PTR [ecx+edx*2]
  433705:	rol    DWORD PTR [ebp-0x37],0xf
  433709:	mov    DWORD PTR [eax],ecx
  43370b:	inc    edi
  43370c:	(bad)  
  43370d:	in     eax,0x2
  43370f:	add    bh,bh
  433711:	(bad)  
  433712:	mov    esi,0xc38a5e
  433717:	mov    esi,DWORD PTR [ebx]
  433719:	push   ecx
  43371a:	mov    edi,0xfc4fc7
  43371f:	test   DWORD PTR [ebp-0x8],edx
  433722:	data16 ss (bad) 
  433725:	pushf  
  433726:	sub    ebp,eax
  433728:	inc    ebp
  433729:	(bad)  
  43372a:	sub    edi,edi
  43372c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433732:	inc    ebp
  433733:	add    BYTE PTR [esi+0x2b],ah
  433736:	or     bh,BYTE PTR [edx+0xf8ac2]
  43373c:	cmp    al,0x33
  43373e:	mov    edi,DWORD PTR [edx+0x24f81]
  433744:	(bad)  
  433745:	cmp    esi,DWORD PTR [ebx]
  433747:	je     0x433701
  433749:	push   ebx
  43374a:	dec    edi
  43374b:	str    ecx
  43374e:	cmp    esp,DWORD PTR [edi+0x75]
  433751:	int    0x33
  433753:	mov    edi,0x789085f
  433758:	mov    ecx,DWORD PTR [eax]
  43375a:	cld    
  43375b:	add    cl,cl
  43375d:	data16 add al,0xcb
  433760:	push   ebp
  433761:	add    ebp,esp
  433763:	jne    0x433751
  433765:	(bad)  
  433766:	mov    DWORD PTR [ecx],0xd685f7ec
  43376c:	clc    
  43376d:	xlat   BYTE PTR ds:[ebx]
  43376e:	inc    ebp
  43376f:	mov    edi,DWORD PTR [ecx]
  433771:	push   eax
  433772:	pushf  
  433773:	in     eax,0x8b
  433775:	add    ah,ch
  433777:	(bad)  
  433778:	push   ecx
  433779:	add    BYTE PTR [ecx+0x66],dl
  43377c:	add    eax,0x3872cb
  433781:	add    BYTE PTR [ebp+0x66],al
  433784:	(bad)  
  433785:	retf   
  433786:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43378d:	retf   
  43378e:	cmp    cl,al
  433790:	pushf  
  433791:	jge    0x43375a
  433793:	aaa    
  433794:	cld    
  433795:	pushf  
  433796:	test   DWORD PTR [edi-0x8],ebx
  433799:	je     0x4337e0
  43379b:	xor    esi,DWORD PTR ds:0x7020840
  4337a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4337a5:	push   ebp
  4337a6:	add    esp,ebp
  4337a8:	jb     0x433735
  4337aa:	add    BYTE PTR [eax],cl
  4337ac:	dec    ebp
  4337ad:	mov    bh,0x81
  4337af:	push   esi
  4337b0:	push   ecx
  4337b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4337b8:	xor    al,BYTE PTR [eax]
  4337ba:	mov    edx,DWORD PTR [edi+0x10]
  4337bd:	(bad)  
  4337be:	scas   eax,DWORD PTR es:[edi]
  4337bf:	cmp    bh,BYTE PTR [ebx]
  4337c1:	add    BYTE PTR [edi],cl
  4337c3:	mov    ebp,ebp
  4337c5:	cld    
  4337c6:	add    BYTE PTR [ebx],bh
  4337c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4337cc:	dec    ebp
  4337cd:	or     BYTE PTR [ebx],ch
  4337cf:	ret    0x458b
  4337d2:	lock jmp 0x4337c6
  4337d5:	mov    ecx,DWORD PTR [eax]
  4337d7:	or     BYTE PTR [edi],al
  4337d9:	mov    ecx,eax
  4337db:	xor    DWORD PTR [edx+0x2],0x0
  4337df:	mov    bh,0xc1
  4337e1:	adc    BYTE PTR [eax],dh
  4337e3:	iret   
  4337e4:	inc    ebp
  4337e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4337eb:	inc    BYTE PTR [ebx]
  4337ed:	cmp    bh,al
  4337ef:	add    BYTE PTR [ecx],dl
  4337f1:	data16 adc al,bh
  4337f4:	dec    ecx
  4337f5:	fisttp WORD PTR [ecx+0x456604c0]
  4337fb:	add    dh,BYTE PTR ds:0x75e0845
  433801:	ret    0x4d
  433804:	lea    ecx,[ebx+0x18728301]
  43380a:	add    BYTE PTR [ebp+0x45],al
  43380d:	ss jmp 0x10a38af
  433813:	call   0xf8cebd5d
  433818:	clc    
  433819:	inc    ebp
  43381a:	shl    DWORD PTR ds:0x781084d,0x51
  433821:	cdq    
  433822:	push   ecx
  433823:	xor    al,BYTE PTR [ecx+0x32f89989]
  433829:	inc    ebp
  43382a:	cmp    edi,DWORD PTR [esi]
  43382c:	jbe    0x4337ca
  43382e:	mov    eax,edi
  433830:	or     ah,dh
  433832:	inc    ebp
  433833:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433839:	cmp    BYTE PTR [ebx-0x74747664],cl
  43383f:	in     al,dx
  433840:	hlt    
  433841:	push   ecx
  433842:	push   ecx
  433843:	push   ecx
  433844:	push   ecx
  433845:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43384b:	cdq    
  43384c:	cdq    
  43384d:	xor    dh,BYTE PTR [edx]
  43384f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433855:	or     BYTE PTR [ebp+0x7],al
  433858:	mov    eax,ecx
  43385a:	clc    
  43385b:	jb     0x43381e
  43385d:	add    BYTE PTR [ebp+0x55],cl
  433860:	or     DWORD PTR [edi],0xc251d151
  433866:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433870:	mov    edi,eax
  433872:	or     cl,al
  433874:	inc    ebp
  433875:	dec    ebp
  433876:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43387c:	or     WORD PTR [ecx],0x8999
  433881:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433887:	mov    edx,DWORD PTR [ecx+0x8]
  43388a:	mov    eax,DWORD PTR [ebp-0x8]
  43388d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433894:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43389a:	inc    ebp
  43389b:	dec    eax
  43389c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4338a2:	add    edx,DWORD PTR [ecx-0x8]
  4338a5:	mov    ecx,DWORD PTR [ecx]
  4338a7:	clc    
  4338a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4338af:	mov    ecx,ebp
  4338b1:	clc    
  4338b2:	(bad)  
  4338b3:	popf   
  4338b4:	inc    DWORD PTR [eax]
  4338b6:	ret    0x8b
  4338b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4338bf:	mov    edi,esp
  4338c1:	hlt    
  4338c2:	test   ecx,esi
  4338c4:	clc    
  4338c5:	or     BYTE PTR [ebp+0x7],al
  4338c8:	cmp    ecx,eax
  4338ca:	pushf  
  4338cb:	jb     0x433900
  4338cd:	add    BYTE PTR [eax-0x3f],al
  4338d0:	inc    eax
  4338d1:	daa    
  4338d2:	inc    ebp
  4338d3:	inc    ebp
  4338d4:	xor    eax,0x7f80803
  4338d9:	dec    ebp
  4338da:	cdq    
  4338db:	add    esi,DWORD PTR [edx]
  4338dd:	clc    
  4338de:	cmp    DWORD PTR [ecx],ecx
  4338e0:	or     al,0x8
  4338e2:	add    al,BYTE PTR [ebp+0x2c]
  4338e5:	xor    eax,0x7350845
  4338ea:	or     BYTE PTR [ebp+0x7],cl
  4338ed:	lea    ebx,[ecx-0x748dcdff]
  4338f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4338fa:	mov    edx,DWORD PTR [eax]
  4338fc:	cld    
  4338fd:	dec    ebp
  4338fe:	push   ecx
  4338ff:	sub    edx,DWORD PTR [ecx-0x75]
  433902:	add    eax,0xf172fc
  433907:	or     BYTE PTR [ebp+0x7],cl
  43390a:	add    eax,ecx
  43390c:	or     al,0x72
  43390e:	add    DWORD PTR [eax],eax
  433910:	mov    ebx,0x29c2c1
  433915:	inc    ebp
  433916:	mov    eax,DWORD PTR [ebx]
  433918:	cmp    eax,0x3004d1c
  43391e:	xbegin 0x66c8c518
  433924:	clc    
  433925:	or     BYTE PTR [ebp+0x45],al
  433928:	cmp    DWORD PTR ds:0x78b089c,esi
  43392e:	adc    BYTE PTR [ebp+0x45],cl
  433931:	lea    eax,[ebp+0x33727501]
  433937:	add    cl,ch
  433939:	inc    ebp
  43393a:	add    bl,ch
  43393c:	add    BYTE PTR [ebx+0x45850845],cl
  433942:	je     0x4338cf
  433944:	push   ebx
  433945:	or     al,0x85
  433947:	dec    ebp
  433948:	std    
  433949:	mov    bh,bh
  43394b:	mov    BYTE PTR [ebp-0x75],al
  43394e:	mov    edi,eax
  433950:	or     al,0x89
  433952:	inc    ebp
  433953:	clc    
  433954:	mov    esp,esp
  433956:	hlt    
  433957:	call   DWORD PTR [edi-0x37]
  43395a:	push   ecx
  43395b:	or     al,0x51
  43395d:	push   ebp
  43395e:	xor    ebp,esp
  433960:	mov    esi,0x457251
  433965:	ss (bad) 
  433967:	pushf  
  433968:	inc    ebp
  433969:	(bad)  
  43396a:	mov    edi,eax
  43396c:	or     al,0x85
  43396e:	add    al,bh
  433970:	inc    eax
  433972:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433976:	or     ah,bh
  433978:	inc    eax
  433979:	push   ecx
  43397a:	jmp    0x4339cd
  43397c:	mov    eax,DWORD PTR ds:0xe8720c
  433982:	mov    DWORD PTR [ebp-0x8],eax
  433985:	jne    0x4339cc
  433987:	jmp    0x433914
  433989:	mov    ebp,DWORD PTR [eax]
  43398b:	clc    
  43398c:	retf   0xff51
  43398f:	push   ecx
  433990:	mov    DWORD PTR ds:0x757210,eax
  433996:	mov    ecx,DWORD PTR [ebp-0x4]
  433999:	sub    esp,DWORD PTR [ebx-0x77]
  43399c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4339a3:	or     ah,bh
  4339a5:	pop    es
  4339a6:	ds cdq 
  4339a8:	push   DWORD PTR [edx]
  4339aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4339b0:	(bad)  
  4339b1:	mov    bh,bh
  4339b3:	jmp    0x4339a1
  4339b5:	leave  
  4339b6:	jne    0x4339c0
  4339b8:	call   0x303312
  4339bd:	in     al,dx
  4339be:	dec    ebp
  4339bf:	add    dh,BYTE PTR [ebx]
  4339c1:	add    BYTE PTR [ebx],al
  4339c3:	inc    ebp
  4339c4:	cmp    esi,DWORD PTR [esi]
  4339c6:	je     0x433964
  4339c8:	mov    eax,edi
  4339ca:	or     al,0xf0
  4339cc:	add    BYTE PTR [ebp+0x458bf845],al
  4339d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4339d8:	adc    al,0x7
  4339da:	enter  0x9fc0,0xa5
  4339de:	rol    BYTE PTR [eax],0x5e
  4339e1:	mov    ecx,ecx
  4339e3:	or     al,0xc
  4339e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4339ec:	jmp    0x4339ed
  4339ee:	push   ebp
  4339ef:	mov    esp,ebp
  4339f1:	cld    
  4339f2:	inc    ebp
  4339f3:	inc    ebp
  4339f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4339fb:	push   esi
  4339fc:	push   esi
  4339fd:	mov    edi,0x7af080f
  433a02:	add    bh,al
  433a04:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a0a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a10:	mov    ebp,eax
  433a12:	mov    ebp,edi
  433a14:	lock call edx
  433a17:	fcom   DWORD PTR [ebp+0x45]
  433a1a:	mov    eax,0x148a8b
  433a1f:	push   ecx
  433a20:	enter  0xc145,0x83
  433a24:	cmp    cl,BYTE PTR [eax]
  433a26:	add    BYTE PTR [ebp+0x4d],al
  433a29:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433a2f:	call   0xffa3359e
  433a34:	cmp    eax,DWORD PTR [ebp-0xc]
  433a37:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433a3b:	push   ebp
  433a3c:	(bad)
  433a3f:	std    
  433a40:	lock push DWORD PTR [edi+0x5d08fcdb]
  433a47:	inc    ebp
  433a48:	(bad)  
  433a49:	call   0xff7d36d9
  433a4e:	add    al,BYTE PTR [ebp+0x37]
  433a51:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433a57:	jne    0x433a59
  433a59:	(bad)  
  433a5a:	cmp    edi,esp
  433a5c:	jne    0x433a8f
  433a5e:	mov    edi,edi
  433a60:	or     BYTE PTR [ebx-0x307f0b49],cl
  433a66:	pop    ds
  433a67:	into   
  433a68:	je     0x433a2b
  433a6a:	mov    ebx,DWORD PTR [esi]
  433a6c:	or     BYTE PTR [ebp-0x49],al
  433a6f:	mov    esp,DWORD PTR [esi-0x77]
  433a72:	mov    esi,0xfe451f0c
  433a77:	mov    eax,DWORD PTR [eax]
  433a79:	or     al,0x66
  433a7b:	sar    bl,0x3b
  433a7e:	xor    esi,DWORD PTR [ebp+0x66]
  433a81:	xor    ecx,edi
  433a83:	pop    edi
  433a84:	adc    bl,BYTE PTR [ebx+0x7e]
  433a87:	ret    0xff
  433a8a:	cld    
  433a8b:	inc    ebp
  433a8c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433a92:	cld    
  433a93:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433a9a:	push   0xffffff83
  433a9c:	pop    edi
  433a9d:	or     BYTE PTR [ebp+0x53],dh
  433aa0:	xorps  xmm1,xmm2
  433aa3:	test   BYTE PTR [eax+eax*1],bh
  433aa6:	add    BYTE PTR [eax],al
  433aa8:	adc    eax,eax
  433aaa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433ab2:	jmp    DWORD PTR [eax]
  433ab4:	ror    al,0x5e
  433ab7:	inc    ebp
  433ab8:	leave  
  433ab9:	xor    ecx,DWORD PTR [eax]
  433abb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433ac1:	add    ch,al
  433ac3:	xor    edi,edi
  433ac5:	xor    DWORD PTR [ebx],0x660033fe
  433acb:	mov    DWORD PTR [ebp-0xc],ecx
  433ace:	pcmpgtw mm0,mm0
  433ad1:	add    dl,ah
  433ad3:	leave  
  433ad4:	mov    edi,DWORD PTR [eax-0x7d]
  433ad7:	push   ax
  433ad9:	dec    ebp
  433ada:	mov    esi,DWORD PTR [ebx-0x75]
  433add:	lea    ebp,[eax-0x7c00fffe]
  433ae3:	xor    eax,DWORD PTR [eax]
  433ae5:	sysret 
  433ae7:	dec    ebp
  433ae8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433aef:	push   WORD PTR [ecx+0x8]
  433af3:	jne    0x433ab6
  433af5:	ud0    ecx,DWORD PTR [ecx]
  433af8:	mov    edi,DWORD PTR [edx]
  433afa:	lods   al,BYTE PTR ds:[esi]
  433afb:	add    BYTE PTR [eax],al
  433afd:	data16 (bad) 
  433aff:	iret   
  433b00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b07:	cli    
  433b08:	inc    ebp
  433b09:	cmp    al,0x8d
  433b0b:	add    BYTE PTR [esi+0x2d],ah
  433b0e:	inc    ebp
  433b0f:	pop    ebp
  433b10:	lea    ecx,[edi]
  433b12:	mov    dl,bh
  433b14:	add    BYTE PTR [edi],cl
  433b16:	mov    DWORD PTR [eax+eax*8],edi
  433b19:	mov    ebx,0x3a87
  433b1e:	add    BYTE PTR [ebx],ch
  433b20:	inc    ebp
  433b21:	data16 (bad) 
  433b23:	clc    
  433b24:	int3   
  433b25:	cmp    eax,DWORD PTR [eax]
  433b27:	je     0x433ab2
  433b29:	push   0xffffffc8
  433b2b:	pop    edi
  433b2c:	xchg   DWORD PTR [ebp+0x0],eax
  433b2f:	data16 add BYTE PTR [ebp+0x45],cl
  433b33:	lea    cx,[ebp+0x10]
  433b37:	jb     0x433b39
  433b39:	jmp    0x433ac4
  433b3b:	call   eax
  433b3d:	clc    
  433b3e:	xchg   DWORD PTR [edi+0x1],edi
  433b41:	mov    eax,DWORD PTR [eax]
  433b43:	or     BYTE PTR [ebp-0x49],al
  433b46:	lea    eax,[eax+0x74003154]
  433b4c:	push   edi
  433b4d:	inc    edx
  433b4e:	jge    0x433b4f
  433b50:	mov    DWORD PTR [edi],ecx
  433b52:	fdiv   DWORD PTR [edi-0x6]
  433b55:	inc    DWORD PTR [eax]
  433b57:	xor    edx,DWORD PTR [eax+0x5f]
  433b5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433b5d:	ret    0x0
  433b60:	xor    BYTE PTR [ebp-0x51],cl
  433b63:	cmp    edi,0xf0ff8902
  433b69:	data16 ror al,0x84
  433b6d:	rol    BYTE PTR [eax],0x3b
  433b70:	add    al,dh
  433b72:	dec    eax
  433b73:	xchg   esp,eax
  433b74:	push   ebx
  433b75:	jmp    0x433b02
  433b77:	push   ebp
  433b78:	add    esp,ebp
  433b7a:	add    ebp,esp
  433b7c:	mov    edx,DWORD PTR [edi+0x24]
  433b7f:	clc    
  433b80:	dec    esi
  433b81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433b87:	cmp    BYTE PTR [ebx],al
  433b89:	jne    0x433b14
  433b8b:	xor    esp,eax
  433b8d:	jmp    0x463d10
  433b92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433b95:	jne    0x433b8b
  433b97:	call   0xffcd38f1
  433b9c:	clc    
  433b9d:	xchg   edi,eax
  433b9e:	sti    
  433b9f:	add    DWORD PTR [ebx],eax
  433ba1:	add    BYTE PTR [ebp+0x47],bl
  433ba4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433baa:	pop    ebp
  433bab:	mov    DWORD PTR [esi-0x48],esi
  433bae:	jmp    0x433bf7
  433bb0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433bb6:	(bad)  
  433bb8:	cmp    al,0x0
  433bba:	cmp    eax,DWORD PTR [ebp+0x18]
  433bbd:	lea    ebx,[ebp-0x56]
  433bc0:	jle    0x433bc2
  433bc2:	jae    0x433b4d
  433bc4:	mov    eax,esp
  433bc6:	call   0xb900:0x8b005587
  433bcd:	inc    ebp
  433bce:	push   ebp
  433bcf:	lea    ecx,[ebp-0x27ff4f12]
  433bd5:	mov    eax,edi
  433bd7:	int3   
  433bd8:	push   ebp
  433bd9:	xchg   edi,eax
  433bdb:	add    esp,ebp
  433bdd:	add    BYTE PTR [eax],al
  433bdf:	inc    ebp
  433be0:	add    BYTE PTR [ebp+0x8b3255],cl
  433be6:	cld    
  433be7:	mov    DWORD PTR [edx],edi
  433be9:	aam    0x75
  433beb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433bf1:	mov    DWORD PTR [ebx-0x50],edx
  433bf4:	test   BYTE PTR [ebp-0x1],0xe8
  433bf8:	mov    eax,DWORD PTR [eax]
  433bfa:	hlt    
  433bfb:	add    al,al
  433bfd:	mov    eax,DWORD PTR ds:0x890045a8
  433c03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c09:	inc    DWORD PTR [eax*2+0xf75854d]
  433c10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c16:	call   0x72999957
  433c1b:	je     0x433c7b
  433c1d:	js     0x433c7e
  433c1f:	lock ret 0x7e
  433c23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433c29:	mov    edi,edi
  433c2b:	sbb    al,bl
  433c2d:	clc    
  433c2e:	add    BYTE PTR [ebp-0x73],bh
  433c31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433c37:	ror    BYTE PTR [eax],1
  433c39:	dec    ebp
  433c3a:	xchg   ebp,eax
  433c3b:	mov    edi,edi
  433c3d:	in     al,0x8b
  433c3f:	jge    0x433bca
  433c41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433c47:	clc    
  433c48:	pop    esi
  433c49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433c4f:	clc    
  433c50:	add    al,0x6e
  433c52:	mov    eax,DWORD PTR [ebx]
  433c54:	mov    BYTE PTR [ebp+0x0],dl
  433c57:	mov    edx,DWORD PTR [ebx-0x20]
  433c5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433c60:	add    eax,0x3b3a73
  433c65:	adc    al,0x89
  433c67:	pop    eax
  433c68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433c6c:	ret    0xf08
  433c6f:	cmp    al,0x2
  433c71:	mov    DWORD PTR [edx],edi
  433c73:	cld    
  433c74:	add    BYTE PTR [ebp+0x66],dl
  433c77:	add    eax,ebx
  433c79:	add    esp,eax
  433c7b:	sub    eax,eax
  433c7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433c83:	add    BYTE PTR [eax],al
  433c85:	mov    DWORD PTR [ebx-0x24],ebx
  433c88:	push   edi
  433c89:	push   ebp
  433c8a:	clc    
  433c8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433c92:	out    0xff,eax
  433c94:	add    edx,DWORD PTR [eax]
  433c96:	jmp    0x433c80
  433c98:	cmp    ch,0x44
  433c9b:	(bad)  
  433c9c:	jmp    0x40c8c4ee
  433ca1:	je     0x433c2d
  433ca3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ca9:	inc    ebp
  433caa:	add    BYTE PTR [ebx-0x770375],al
  433cb0:	add    ah,ch
  433cb2:	add    edx,esp
  433cb4:	pop    edi
  433cb5:	pop    ebp
  433cb6:	push   ebp
  433cb7:	inc    ebx
  433cb8:	in     al,dx
  433cb9:	pop    ebp
  433cba:	in     al,dx
  433cbb:	cmp    edx,DWORD PTR [edi-0x8]
  433cbe:	ss xchg esp,eax
  433cc0:	pushf  
  433cc1:	pop    ebx
  433cc2:	mov    ecx,ecx
  433cc4:	call   0x899883cd
  433cc9:	in     al,dx
  433cca:	in     al,0x45
  433ccc:	dec    ebp
  433ccd:	push   esi
  433cce:	test   DWORD PTR [eax+0xfb010f],esi
  433cd4:	add    BYTE PTR [eax+0xc018b],dh
  433cda:	leave  
  433cdb:	inc    ebp
  433cdc:	test   al,ch
  433cde:	add    dh,bh
  433ce0:	add    bh,bh
  433ce2:	dec    ebp
  433ce3:	push   cs
  433ce4:	mov    DWORD PTR [ecx],eax
  433ce6:	hlt    
  433ce7:	push   es
  433ce8:	dec    ebp
  433ce9:	leave  
  433cea:	mov    DWORD PTR [eax],ecx
  433cec:	clc    
  433ced:	cmovge eax,ecx
  433cf0:	mov    ecx,0x85c2f0
  433cf6:	clc    
  433cf7:	pop    DWORD PTR [ebp+0x1]
  433cfa:	push   ebx
  433cfb:	add    BYTE PTR [ebp-0x15],bh
  433cfe:	push   esi
  433cff:	xor    eax,0x898a45
  433d04:	cld    
  433d05:	inc    BYTE PTR [ebp+0x0]
  433d08:	cmp    BYTE PTR [esi-0x64],ah
  433d0b:	add    DWORD PTR [esi+0x78308c1],edi
  433d11:	add    ah,BYTE PTR [edi-0x49]
  433d14:	int    0xbb
  433d16:	mov    ecx,DWORD PTR [edi+0xc]
  433d19:	add    dh,al
  433d1b:	cmp    ecx,ebx
  433d1d:	jne    0x433ce7
  433d1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433d22:	jmp    0xca3d28
  433d27:	add    DWORD PTR [ebp+0x0],eax
  433d2a:	mov    eax,ebx
  433d2c:	or     al,0x8b
  433d2e:	(bad)  
  433d2f:	mov    ecx,esi
  433d31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433d38:	mov    eax,edi
  433d3a:	or     BYTE PTR [edx],cl
  433d3c:	shl    cl,cl
  433d3e:	icebp  
  433d3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433d43:	or     BYTE PTR [edx+eax*2],cl
  433d46:	(bad)  
  433d47:	or     cl,dh
  433d49:	stc    
  433d4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433d4e:	xor    al,0x0
  433d50:	inc    ebp
  433d51:	xchg   BYTE PTR [ebx],al
  433d53:	add    esp,edi
  433d55:	add    BYTE PTR [ebp-0x39],cl
  433d58:	mov    al,bl
  433d5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433d60:	sub    al,0xbf
  433d62:	jmp    0x433ce9
  433d64:	mov    edi,eax
  433d66:	lock jge 0x433d5a
  433d69:	lea    esi,[edx-0x74bad5fd]
  433d6f:	mov    ebp,esp
  433d71:	or     cl,dh
  433d73:	leave  
  433d74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433d7b:	dec    ebp
  433d7c:	dec    ebp
  433d7d:	test   DWORD PTR [ebx],eax
  433d7f:	paddb  mm6,mm0
  433d82:	add    DWORD PTR [eax],eax
  433d84:	dec    ebp
  433d85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433d8b:	mov    esi,DWORD PTR [edx]
  433d8d:	or     al,0x2b
  433d8f:	dec    ebp
  433d90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433d96:	mov    esp,edx
  433d98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433d9f:	mov    DWORD PTR [ebx],ebp
  433da1:	call   0xc76c6d1
  433da6:	mov    DWORD PTR [ebp+0x10],ecx
  433da9:	(bad)  
  433daa:	push   0x8b85ff10
  433daf:	clc    
  433db0:	or     al,0x51
  433db2:	(bad)  
  433db3:	push   ecx
  433db4:	retf   
  433db5:	mov    ebx,0xff4d8dc8
  433dba:	mov    DWORD PTR [ebp+0x8],eax
  433dbd:	xor    eax,DWORD PTR [ebp-0x75]
  433dc0:	cmp    ebp,DWORD PTR [ebx]
  433dc2:	lsl    ebx,WORD PTR [edi-0x8]
  433dc6:	call   DWORD PTR [ebx-0x741bff75]
  433dcc:	(bad)  
  433dcd:	or     al,0x5b
  433dcf:	dec    ebp
  433dd0:	or     BYTE PTR [ebx],dh
  433dd2:	inc    ebp
  433dd3:	xor    esi,DWORD PTR ds:0x708088d
  433dd9:	in     eax,0x99
  433ddb:	add    BYTE PTR [edx],dh
  433ddd:	inc    ebp
  433dde:	pop    edi
  433ddf:	xor    eax,edx
  433de1:	test   DWORD PTR [eax],0x81108b8b
  433de7:	dec    ebp
  433de8:	sub    al,0x33
  433dea:	add    BYTE PTR [ebx],dh
  433dec:	push   esi
  433ded:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433df3:	mov    edi,eax
  433df5:	or     BYTE PTR [ebp+0x45],al
  433df8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433dfe:	ss leave 
  433e00:	pushf  
  433e01:	push   es
  433e02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e0a:	inc    ebp
  433e0b:	cmp    BYTE PTR [esi],0x51
  433e0e:	pushf  
  433e0f:	addr16 (bad) 
  433e11:	shl    esp,1
  433e13:	dec    ebp
  433e14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e1a:	(bad)  
  433e1b:	jmp    0x8c0b10f7
  433e20:	aam    0x8
  433e22:	test   DWORD PTR [ebp-0x8],ecx
  433e25:	mov    BYTE PTR [ebp-0x75],al
  433e28:	or     BYTE PTR [eax],cl
  433e2a:	add    BYTE PTR [ebp-0x75],dl
  433e2d:	mov    eax,0xfc728b
  433e32:	dec    ebp
  433e33:	enter  0xceba,0x8
  433e37:	retf   0x1807
  433e3a:	ret    0x994d
  433e3d:	mov    esi,DWORD PTR [edx]
  433e3f:	or     al,0x33
  433e41:	into   
  433e42:	add    edx,esi
  433e44:	add    ecx,edx
  433e46:	bswap  eax
  433e48:	ror    esi,0x98
  433e4b:	dec    ebp
  433e4c:	add    cl,ch
  433e4e:	mov    edi,edi
  433e50:	hlt    
  433e51:	inc    esi
  433e53:	inc    ebp
  433e54:	ret    0x4533
  433e57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433e5d:	or     BYTE PTR [ebx],dh
  433e5f:	dec    ebp
  433e60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433e66:	jne    0xff8d3e2d
  433e6c:	inc    ebp
  433e6d:	inc    ebp
  433e6e:	mov    esi,DWORD PTR [ebx]
  433e70:	clc    
  433e71:	pop    esi
  433e72:	ret    0xcaeb
  433e75:	mov    eax,esi
  433e77:	call   0x5204904a
  433e7c:	dec    ebp
  433e7d:	add    eax,0xf8728b
  433e82:	adc    eax,0xce0ccac9
  433e87:	push   ebp
  433e88:	ret    0xc6ec
  433e8b:	in     al,dx
  433e8c:	call   0x33438b95
  433e91:	push   edi
  433e92:	add    edi,eax
  433e94:	xor    eax,eax
  433e96:	jmp    0x433edd
  433e98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433e9e:	add    eax,edi
  433ea0:	shr    eax,cl
  433ea2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433ea8:	mov    edi,DWORD PTR [ecx]
  433eaa:	in     al,dx
  433eab:	pushf  
  433eac:	ret    0x84c7
  433eaf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433eb5:	inc    ebp
  433eb6:	in     al,dx
  433eb7:	ss inc ebp
  433eb9:	pushf  
  433eba:	mov    eax,edi
  433ebc:	cld    
  433ebd:	fmul   st(2),st
  433ebf:	sbb    dl,al
  433ec1:	jmp    0x9c3b:0x374d45c1
  433ec8:	jbe    0x433e91
  433eca:	mov    esp,eax
  433ecc:	clc    
  433ecd:	add    BYTE PTR [ebp+0x0],cl
  433ed0:	mov    ecx,ecx
  433ed2:	lea    eax,[ebp-0x5]
  433ed5:	mov    edi,edi
  433ed7:	call   0x51ce9021
  433edc:	hlt    
  433edd:	xor    eax,edx
  433edf:	mov    esi,0x997284
  433ee4:	xor    cl,dl
  433ee6:	mov    esi,eax
  433ee8:	hlt    
  433ee9:	into   
  433eea:	inc    ebp
  433eeb:	scas   eax,DWORD PTR es:[edi]
  433eec:	mov    ebp,ecx
  433eee:	cld    
  433eef:	add    dl,cl
  433ef1:	add    dl,al
  433ef3:	inc    ebp
  433ef4:	shr    DWORD PTR [ebx],0x4d
  433ef7:	xor    edi,DWORD PTR [ebx]
  433ef9:	mov    DWORD PTR [edi],ecx
  433efb:	clc    
  433efc:	dec    esi
  433efd:	inc    ebp
  433efe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f04:	ret    0xc6ca
  433f07:	mov    BYTE PTR [ebp-0x32],0x53
  433f0b:	scas   eax,DWORD PTR es:[edi]
  433f0c:	inc    ebp
  433f0d:	jmp    0x433f46
  433f0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f16:	pop    ebx
  433f17:	xor    ecx,DWORD PTR [ebp+0x3]
  433f1a:	mov    eax,DWORD PTR [ebx]
  433f1c:	clc    
  433f1d:	test   edx,ecx
  433f1f:	mov    ecx,esi
  433f21:	cld    
  433f22:	call   0x8ab7846c
  433f27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433f2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433f33:	fdiv   QWORD PTR [ebx]
  433f35:	retf   0xce89
  433f38:	in     al,0xc1
  433f3a:	inc    ebp
  433f3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433f41:	into   
  433f42:	mov    dh,0xc1
  433f45:	call   0x8c1784ce
  433f4a:	(bad)  
  433f4b:	cld    
  433f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433f4f:	xor    eax,ecx
  433f51:	lea    eax,[ebp+0x8]
  433f54:	mov    esi,DWORD PTR [edx-0x4]
  433f57:	add    dl,al
  433f59:	inc    ebp
  433f5a:	mov    esp,0x32d8998b
  433f5f:	dec    ebp
  433f60:	mov    esi,DWORD PTR [ebx]
  433f62:	cld    
  433f63:	xor    eax,edx
  433f65:	sub    esp,DWORD PTR [edi-0x75]
  433f68:	int    0xec
  433f6a:	sub    ecx,eax
  433f6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433f72:	mov    esi,esp
  433f74:	call   0x34178cfd
  433f79:	inc    DWORD PTR [ebx]
  433f7b:	mov    edi,DWORD PTR [ebx]
  433f7d:	cld    
  433f7e:	jne    0x433fcd
  433f80:	mov    esi,DWORD PTR [ebx]
  433f82:	aam    0x8d
  433f84:	dec    ebp
  433f85:	or     BYTE PTR [ebx],dh
  433f87:	jb     0x433f8c
  433f89:	add    BYTE PTR [edi+0x45],bl
  433f8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433f93:	xor    ebp,esp
  433f95:	xor    eax,edi
  433f97:	sub    edi,esp
  433f99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433f9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433fa6:	inc    ebp
  433fa7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433fad:	clc    
  433fae:	mov    eax,edi
  433fb0:	nop
  433fb1:	fadd   QWORD PTR [eax]
  433fb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433fb9:	jmp    0x433f44
  433fbb:	mov    eax,DWORD PTR [ecx]
  433fbd:	fadd   DWORD PTR [eax]
  433fbf:	inc    ebp
  433fc0:	or     DWORD PTR [ebx],esi
  433fc2:	dec    eax
  433fc3:	add    edx,DWORD PTR [ebx-0x2d]
  433fc6:	dec    ebp
  433fc7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433fcd:	inc    ebp
  433fce:	push   ecx
  433fcf:	mov    dl,BYTE PTR [ecx-0xd]
  433fd2:	xor    ecx,DWORD PTR [ebp-0x45]
  433fd5:	(bad)  
  433fd7:	rol    BYTE PTR [eax],0xc1
  433fda:	ret    
  433fdb:	inc    ebp
  433fdc:	inc    ebp
  433fdd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433fe3:	xor    eax,ebx
  433fe5:	add    eax,DWORD PTR [ebp+0x23]
  433fe8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433fee:	cmp    edi,0xc
  433ff1:	dec    ebp
  433ff2:	inc    ebp
  433ff3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ff9:	inc    ebp
  433ffa:	mov    esi,DWORD PTR [ebx]
  433ffc:	clc    
  433ffd:	lea    eax,[ebp+0x45725407]
  434003:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434007:	xor    edi,DWORD PTR [eax]
  434009:	mov    ecx,0xff8b8d4d
  43400e:	push   esp
  43400f:	enter  0x4df7,0x23
  434013:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434019:	mov    eax,DWORD PTR [ebx]
  43401b:	loopne 0x434008
  43401d:	ret    0xc68b
  434020:	push   esp
  434021:	enter  0x9745,0x8b
  434025:	inc    ebp
  434026:	cld    
  434027:	mov    eax,edi
  434029:	clc    
  43402a:	ret    
  43402b:	ret    0xc645
  43402e:	mov    esi,DWORD PTR [ebx]
  434030:	cld    
  434031:	pop    esi
  434032:	mov    ebx,0x83458bc3
  434038:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43403c:	dec    ebp
  43403d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  434045:	clc    
  434046:	fcom   DWORD PTR [ebp+0x45]
  434049:	mov    edi,DWORD PTR [eax]
  43404b:	adc    al,0x9c
  43404d:	inc    ebp
  43404e:	(bad)  
  43404f:	mov    ebx,eax
  434051:	adc    al,0x85
  434053:	cmp    al,0x1
  434056:	inc    ebp
  434057:	add    BYTE PTR [edx],bh
  434059:	dec    ebp
  43405a:	pushf  
  43405b:	mov    ebp,ecx
  43405d:	mov    eax,DWORD PTR [ebx]
  43405f:	nop
  434060:	add    BYTE PTR [eax],al
  434062:	inc    ebp
  434063:	mov    esi,DWORD PTR [ebx]
  434065:	add    eax,DWORD PTR [ebx]
  434067:	cmp    al,0x89
  434069:	mov    esp,esi
  43406b:	clc    
  43406c:	inc    ebp
  43406d:	inc    ebp
  43406e:	add    edx,DWORD PTR [esi+0xc]
  434071:	mov    edi,0x7ff0845
  434076:	in     al,dx
  434077:	(bad)  
  434078:	jne    0x434013
  43407a:	mov    esi,DWORD PTR [edx]
  43407c:	clc    
  43407d:	add    ebp,DWORD PTR [esi]
  43407f:	mov    edi,edi
  434081:	in     al,dx
  434082:	mov    DWORD PTR [ebp-0x10],eax
  434085:	xor    eax,DWORD PTR [ebp+0x3]
  434088:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434090:	(bad)  
  434091:	push   eax
  434092:	ret    
  434093:	call   0xd4ffca25
  434098:	call   0xffcf38e2
  43409d:	cmp    BYTE PTR [ebp+0x4d],al
  4340a0:	test   DWORD PTR [eax+0x74],ecx
  4340a3:	inc    ecx
  4340a4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4340aa:	ret    
  4340ab:	inc    eax
  4340ac:	dec    DWORD PTR [ebx+0x4945f8f0]
  4340b2:	push   eax
  4340b3:	dec    eax
  4340b4:	test   al,0xd0
  4340b6:	dec    eax
  4340b8:	mov    eax,DWORD PTR [ebp-0x14]
  4340bb:	mov    eax,DWORD PTR [ebp+0x38]
  4340be:	mov    eax,ecx
  4340c0:	fadd   DWORD PTR [ebx]
  4340c2:	dec    ebp
  4340c3:	inc    eax
  4340c4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4340ca:	inc    ebp
  4340cb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4340d1:	fadd   QWORD PTR [ebx]
  4340d3:	inc    ebp
  4340d4:	or     al,0x33
  4340d6:	dec    ebp
  4340d7:	add    edi,DWORD PTR [ebx]
  4340d9:	mov    DWORD PTR [edx-0x28],esi
  4340dc:	mov    eax,DWORD PTR [ebp-0x10]
  4340df:	mov    eax,DWORD PTR [eax+0x10]
  4340e2:	mov    eax,edi
  4340e4:	lock ret 
  4340e6:	inc    ecx
  4340e7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  4340ed:	fsubr  st,st(5)
  4340ef:	test   DWORD PTR [eax],eax
  4340f1:	clc    
  4340f2:	push   0x45
  4340f4:	(bad)  
  4340f5:	cmp    ebp,esp
  4340f7:	pushf  
  4340f8:	inc    ebp
  4340f9:	(bad)  
  4340fa:	push   eax
  4340fb:	fsub   DWORD PTR [eax-0x7b]
  4340fe:	(bad)  
  4340ff:	clc    
  434100:	mov    eax,0xf8008584
  434105:	mov    eax,DWORD PTR [ebp-0x4]
  434108:	mov    edi,0x4585c3cc
  43410e:	clc    
  43410f:	mov    eax,DWORD PTR [ebp+0x14]
  434112:	cmp    BYTE PTR [ebp-0x64],al
  434115:	mov    edi,eax
  434117:	in     al,dx
  434118:	les    esi,FWORD PTR [ebp-0x7b]
  43411b:	mov    edi,eax
  43411d:	or     al,0x4d
  43411f:	dec    ebp
  434120:	mov    eax,ebp
  434122:	in     al,0xf2
  434124:	dec    ebp
  434125:	dec    DWORD PTR [ecx+0x4dc7e045]
  43412b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434131:	inc    ebp
  434132:	mov    DWORD PTR [ebx],esi
  434134:	fadd   QWORD PTR [ebx]
  434136:	dec    ebp
  434137:	push   eax
  434138:	xor    eax,DWORD PTR [ebp+0x3]
  43413b:	push   eax
  43413c:	mov    DWORD PTR [eax+ebx*8],ebx
  43413f:	push   esi
  434141:	mov    eax,DWORD PTR [eax]
  434143:	lock cmp eax,0xf84e85c0
  434149:	inc    ebp
  43414a:	test   BYTE PTR [ebx],dh
  43414c:	add    DWORD PTR [ebx],eax
  43414e:	add    BYTE PTR [eax+0x4d],dl
  434151:	jne    0x434186
  434153:	lea    ecx,[ebx-0x7617fc44]
  434159:	div    ah
  43415b:	inc    DWORD PTR [ebp+0x45]
  43415e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434164:	jb     0x4340f1
  434166:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43416d:	mov    ecx,DWORD PTR [ebp-0x10]
  434170:	xor    ecx,DWORD PTR [ebp+0x3]
  434173:	mov    edi,DWORD PTR [ebx]
  434175:	adc    BYTE PTR [ebp+0x41],dh
  434178:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43417e:	ret    
  43417f:	push   ss
  434180:	push   0x45
  434182:	lea    ecx,[ebx+0x4de80cb0]
  434188:	sti    
  434189:	add    edi,edi
  43418b:	or     BYTE PTR [ebp+0x4d],al
  43418e:	mov    ebp,DWORD PTR [ebx]
  434190:	xor    ebp,ecx
  434192:	mov    al,BYTE PTR [edx]
  434194:	add    eax,0xc7200
  434199:	jne    0x4341e8
  43419b:	lea    esi,[ebx]
  43419d:	mov    al,0xf
  43419f:	call   0xf3864
  4341a4:	shl    DWORD PTR [esi],0x84
  4341a7:	pushf  
  4341a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4341ae:	mov    edi,DWORD PTR [ecx]
  4341b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4341b7:	test   DWORD PTR [eax],eax
  4341b9:	clc    
  4341ba:	dec    ebp
  4341bb:	inc    ebp
  4341bc:	xor    edi,DWORD PTR [ebx]
  4341be:	setl   al
  4341c1:	(bad)  
  4341c2:	retf   
  4341c3:	rol    cl,1
  4341c5:	dec    ebp
  4341c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4341cc:	inc    ebp
  4341cd:	lea    ecx,[ebx-0x75b2cc38]
  4341d3:	lea    eax,ds:0x4d72c4
  4341d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4341dc:	xor    ecx,edi
  4341de:	bswap  ebx
  4341e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4341e4:	rol    DWORD PTR [ecx],0x84
  4341e7:	add    BYTE PTR [ecx],al
  4341e9:	cmp    BYTE PTR [eax],al
  4341eb:	pushf  
  4341ec:	inc    ebp
  4341ed:	jnp    0x8a4375f0
  4341f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4341f9:	lock dec ebp
  4341fb:	retf   
  4341fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4341ff:	mov    eax,eax
  434201:	fmul   st,st(3)
  434203:	test   ecx,0x1998484
  434209:	xor    al,BYTE PTR [eax]
  43420b:	mov    DWORD PTR [ebp-0x28],eax
  43420e:	mov    eax,DWORD PTR [ebp+0x33]
  434211:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434217:	ret    
  434218:	add    al,cl
  43421a:	dec    ebp
  43421b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434221:	add    ecx,DWORD PTR ds:0xc7250
  434227:	inc    ebp
  434228:	rcl    DWORD PTR [eax+0x4d],0x2b
  43422c:	mov    edi,edi
  43422e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434234:	jb     0x4341fd
  434236:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43423d:	mov    esi,DWORD PTR [ebx]
  43423f:	cld    
  434240:	mov    cl,bh
  434242:	or     eax,0x372b6
  434247:	cmp    ecx,eax
  434249:	jne    0x4342c6
  43424f:	mov    eax,DWORD PTR [ebp-0x20]
  434252:	mov    eax,DWORD PTR [eax]
  434254:	xor    eax,edi
  434256:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43425d:	mov    ecx,DWORD PTR [ebp-0x4]
  434260:	mov    ecx,edi
  434262:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434268:	jb     0x434279
  43426a:	add    BYTE PTR [edi-0x3f],dl
  43426d:	add    BYTE PTR [ebp-0x75],cl
  434270:	mov    esi,eax
  434272:	xor    eax,DWORD PTR [eax]
  434274:	mov    al,bh
  434276:	or     eax,0x497284
  43427b:	xor    al,cl
  43427d:	mov    ecx,DWORD PTR [ebp-0x4]
  434280:	mov    ecx,edi
  434282:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434288:	jb     0x434299
  43428a:	add    BYTE PTR [edi],dh
  43428c:	enter  0x8500,0x8b
  434290:	add    ah,bl
  434292:	add    BYTE PTR [eax],al
  434294:	inc    ebp
  434295:	(bad)  
  434296:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43429d:	mov    esi,DWORD PTR [edx-0x4]
  4342a0:	add    bh,cl
  4342a2:	dec    ebp
  4342a3:	mov    dh,0x8b
  4342a5:	add    esi,DWORD PTR [ebx]
  4342a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4342ad:	add    BYTE PTR [eax],al
  4342af:	mov    eax,ecx
  4342b1:	loopne 0x434300
  4342b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4342b9:	dec    ecx
  4342ba:	or     eax,0x8b7232
  4342bf:	in     al,0xc1
  4342c1:	or     DWORD PTR [ebp-0x31],ecx
  4342c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4342cb:	xor    dh,BYTE PTR [edx-0x75]
  4342ce:	add    al,dh
  4342d0:	enter  0x4f09,0xcf
  4342d4:	inc    ebp
  4342d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4342db:	or     al,BYTE PTR ds:0xe4728b
  4342e1:	or     DWORD PTR [ebp-0x31],ecx
  4342e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4342eb:	cmp    dh,BYTE PTR [edx+0xf]
  4342ee:	add    bl,dl
  4342f0:	rol    DWORD PTR [eax],0x4d
  4342f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4342f9:	(bad)  
  4342fa:	or     eax,0x497284
  4342ff:	xor    al,cl
  434301:	mov    ecx,DWORD PTR [ebp-0x20]
  434304:	mov    ecx,DWORD PTR [ecx]
  434306:	xor    ecx,edi
  434308:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43430f:	xor    cl,al
  434311:	mov    ecx,DWORD PTR [edi]
  434313:	fadd   QWORD PTR [ebp+0x9]
  434316:	call   0xffd03dea
  43431b:	dec    ecx
  43431c:	dec    ebp
  43431d:	xor    bh,BYTE PTR [ebx]
  43431f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434323:	loopne 0x434321
  434325:	or     edi,eax
  434327:	iret   
  434328:	ret    
  434329:	mov    WORD PTR [ebp+0x4d],es
  43432c:	mov    esi,DWORD PTR [edx]
  43432e:	call   0x84530a6d
  434333:	(bad)  
  434334:	cdq    
  434335:	add    BYTE PTR [edx],dh
  434337:	mov    esi,DWORD PTR [ebx]
  434339:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43433f:	test   BYTE PTR [ebx],dh
  434341:	dec    ecx
  434342:	add    esi,DWORD PTR [edx]
  434344:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43434a:	dec    edi
  43434c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434353:	xor    al,BYTE PTR [ebx]
  434355:	mov    edi,DWORD PTR [ebx]
  434357:	in     al,0x75
  434359:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43435f:	dec    ecx
  434360:	xor    esi,DWORD PTR [edx]
  434362:	lea    ecx,[edx]
  434364:	or     BYTE PTR [ebx+0x900f072],cl
  43436a:	ja     0x43433b
  43436c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434373:	cmp    ch,al
  434375:	jne    0x43436a
  434377:	mov    edi,edi
  434379:	fadd   QWORD PTR [ebp+0x0]
  43437c:	mov    eax,edi
  43437e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434385:	mov    edx,DWORD PTR [ebx]
  434387:	in     al,0x45
  434389:	or     DWORD PTR [ebx],esi
  43438b:	iret   
  43438c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434393:	xor    dl,BYTE PTR [eax-0x75]
  434396:	sbb    al,0xe0
  434398:	dec    DWORD PTR [ecx]
  43439a:	mov    ecx,edi
  43439c:	in     al,dx
  43439d:	mov    eax,es
  43439f:	dec    ecx
  4343a0:	mov    DWORD PTR [edx],esi
  4343a2:	fmul   QWORD PTR [edx]
  4343a4:	jne    0x434331
  4343a6:	(bad)  
  4343a7:	(bad)  
  4343a9:	or     DWORD PTR [ebp-0x31],eax
  4343ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4343b3:	cmp    bh,bh
  4343b5:	jne    0x4343fc
  4343b7:	lea    ecx,[ebx-0x38372750]
  4343bd:	inc    ebx
  4343bf:	mov    eax,ecx
  4343c1:	mov    eax,0xa00c111
  4343c6:	jne    0x43440d
  4343c8:	mov    esi,DWORD PTR [ebx]
  4343ca:	test   al,0x3
  4343cc:	inc    ebp
  4343cd:	mov    DWORD PTR [eax-0xc],edx
  4343d0:	loop   0x434417
  4343d2:	push   DWORD PTR [ebx]
  4343d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4343da:	add    DWORD PTR [eax],eax
  4343dc:	mov    eax,edi
  4343de:	lods   al,BYTE PTR ds:[esi]
  4343df:	dec    ebp
  4343e0:	inc    ebp
  4343e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4343e7:	retf   
  4343e8:	mov    edx,ecx
  4343ea:	adc    al,0x84
  4343ec:	(bad)  
  4343ed:	std    
  4343ee:	ret    
  4343ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4343f5:	hlt    
  4343f6:	rol    edi,0x82
  4343f9:	ret    
  4343fa:	cld    
  4343fb:	enter  0x11ff,0x45
  4343ff:	inc    ebp
  434400:	pop    edi
  434401:	mov    ebx,DWORD PTR [ebx+0x14]
  434404:	ret    0xc7
  434407:	test   BYTE PTR [ebx+0x45325199],cl
  43440d:	jmp    0x43439a
  43440f:	push   0x8
  434411:	call   DWORD PTR [esi]
  434413:	in     al,dx
  434414:	add    BYTE PTR [ebp+0x1],0x50
  434418:	add    bh,ah
  43441a:	add    bh,bh
  43441c:	icebp  
  43441d:	mov    ecx,DWORD PTR [eax]
  43441f:	cld    
  434420:	pop    es
  434421:	dec    ebp
  434422:	shl    DWORD PTR [ebx],0x72
  434425:	add    eax,DWORD PTR [eax]
  434427:	cmp    edx,ecx
  434429:	je     0x43443b
  43442b:	mov    esi,DWORD PTR [ebp-0x4]
  43442e:	inc    edi
  434430:	or     al,0xc3
  434432:	jmp    FWORD PTR [edx-0x18]
  434435:	(bad)  
  434436:	sti    
  434437:	cwde   
  434438:	(bad)  
  434439:	call   0xffa13d44
  43443e:	or     al,0x45
  434440:	push   ebp
  434441:	sub    esp,0x18
  434444:	push   ebx
  434445:	inc    ebp
  434446:	mov    edi,edi
  434448:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43444f:	test   al,0x51
  434451:	inc    ebp
  434452:	push   ecx
  434453:	push   eax
  434454:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43445a:	add    ah,bh
  43445c:	(bad)  
  43445d:	dec    ebp
  43445e:	add    DWORD PTR [ebx],esi
  434460:	inc    ebp
  434461:	add    ecx,DWORD PTR [ebx+0x74943b]
  434467:	push   0xffffff8b
  434469:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43446f:	add    eax,DWORD PTR [ecx]
  434471:	or     BYTE PTR [eax],al
  434473:	call   0xff853c78
  434478:	mov    eax,DWORD PTR [ebp+0x14]
  43447b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434481:	inc    ebp
  434482:	dec    ecx
  434483:	add    ebp,DWORD PTR [edx+0x14]
  434486:	push   0x8b3045
  43448b:	call   0x33ad9200
  434490:	inc    DWORD PTR [ebx]
  434492:	mov    DWORD PTR [edi],ecx
  434494:	mov    eax,ecx
  434496:	or     BYTE PTR [ebp-0x3d],cl
  434499:	cmp    eax,edi
  43449b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4344a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4344a6:	adc    al,0xc9
  4344a8:	inc    ebp
  4344a9:	adc    BYTE PTR [eax+0x55],dl
  4344ac:	jne    0x43449a
  4344ae:	call   0xff54443e
  4344b3:	dec    ebp
  4344b4:	inc    ebp
  4344b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4344bb:	add    BYTE PTR [ebx],bh
  4344bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4344c1:	push   ecx
  4344c2:	or     al,0x51
  4344c4:	dec    ebp
  4344c5:	xor    DWORD PTR [ebx],0xf320399
  4344cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4344ce:	mov    edi,edi
  4344d0:	pop    edi
  4344d1:	adc    BYTE PTR [ebx+0x75],bl
  4344d4:	ret    0x50
  4344d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4344db:	(bad)  
  4344dc:	clc    
  4344dd:	mov    esp,ebp
  4344df:	pop    ecx
  4344e0:	mov    ecx,0xf80085c2
  4344e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4344e8:	push   esi
  4344e9:	push   esi
  4344ea:	(bad)  
  4344eb:	lock add eax,DWORD PTR [ebp+0x44]
  4344ef:	mov    edx,DWORD PTR [eax]
  4344f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4344f5:	or     BYTE PTR [ecx+0x7],dl
  4344f8:	push   ecx
  4344f9:	ret    
  4344fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434500:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434506:	or     al,0x80
  434508:	jge    0x43450b
  43450a:	mov    DWORD PTR [eax],eax
  43450c:	and    al,0x8
  43450e:	cmp    DWORD PTR [ebp+0x10],eax
  434511:	mov    edx,DWORD PTR [esi]
  434513:	xchg   esp,eax
  434514:	dec    esp
  434515:	add    BYTE PTR [eax],dl
  434517:	mov    ecx,edx
  434519:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43451d:	dec    ebp
  43451e:	into   
  43451f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434525:	mov    edx,DWORD PTR [eax+0x14]
  434528:	das    
  434529:	add    al,0x45
  43452b:	add    BYTE PTR [ebp+0x0],dh
  43452e:	mov    edi,edi
  434530:	and    al,0x50
  434532:	mov    eax,DWORD PTR [eax]
  434534:	and    al,0xd1
  434536:	xor    eax,DWORD PTR [esi]
  434538:	lea    eax,[ebp+0x8]
  43453b:	xor    esi,DWORD PTR [edx+0x3]
  43453e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434544:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43454a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434554:	cmp    edi,edi
  434556:	pushf  
  434557:	mov    edi,edi
  434559:	or     BYTE PTR [esi+ecx*1],cl
  43455c:	jne    0x434521
  43455e:	call   0xc452a
  434563:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434567:	mov    ebx,DWORD PTR [eax]
  434569:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43456d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434575:	pop    esi
  434576:	(bad)  
  434577:	leave  
  434578:	call   DWORD PTR [eax]
  43457a:	call   DWORD PTR [ebp+0x24]
  43457d:	in     al,dx
  43457e:	jmp    esp
  434580:	and    al,0x83
  434582:	call   0xff7a4397
  434587:	pushf  
  434588:	inc    esp
  434589:	mov    DWORD PTR [esp],ecx
  43458c:	pop    esi
  43458d:	push   edi
  43458e:	in     eax,0x41
  434590:	ret    0x89
  434593:	and    al,0xe
  434595:	mov    edi,DWORD PTR [eax]
  434597:	and    al,0x75
  434599:	mov    edx,0x7750885
  43459e:	or     dl,bh
  4345a0:	call   FWORD PTR [ecx+0x3243224]
  4345a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4345ac:	dec    DWORD PTR [esp]
  4345af:	jl     0x43453c
  4345b1:	adc    al,0xc
  4345b3:	dec    ebp
  4345b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4345b7:	mov    ecx,DWORD PTR [eax]
  4345b9:	and    al,0x10
  4345bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4345c2:	test   DWORD PTR [edi],ecx
  4345c4:	jge    0x434590
  4345c6:	push   0x8908ff4c
  4345cb:	jmp    0x4345f1
  4345cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4345d1:	dec    esp
  4345d2:	pop    ebp
  4345d3:	ret    0x8999
  4345d6:	push   0x74f89cf8
  4345db:	jmp    0x434651
  4345dd:	mov    edi,0x104fd55f
  4345e2:	add    BYTE PTR [eax],dh
  4345e4:	adc    BYTE PTR ds:[eax],al
  4345e7:	or     edx,DWORD PTR gs:[eax]
  4345ea:	add    BYTE PTR [ecx],ch
  4345ec:	add    eax,0x35270010
  4345f1:	adc    BYTE PTR [eax],al
  4345f3:	std    
  4345f4:	dec    eax
  4345f5:	adc    BYTE PTR [eax],al
  4345f7:	(bad)  
  4345f8:	outs   dx,BYTE PTR ds:[esi]
  4345f9:	adc    BYTE PTR [eax],al
  4345fb:	sahf   
  4345fc:	xor    DWORD PTR [eax],edx
  4345fe:	add    BYTE PTR [esi+0x0],al
  434601:	adc    BYTE PTR [eax],al
  434603:	fs jae 0x434616
  434606:	add    BYTE PTR [ebx-0x20ffefac],bh
  43460c:	inc    ebp
  43460d:	inc    ebx
  43460e:	add    bl,ah
  434610:	inc    ebp
  434611:	inc    ebx
  434612:	add    bh,ah
  434614:	inc    ebp
  434615:	inc    ebx
  434616:	add    bl,ch
  434618:	inc    ebp
  434619:	inc    ebx
  43461a:	add    bh,ch
  43461c:	inc    ebp
  43461d:	inc    ebx
  43461e:	add    bl,dh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    bh,dh
  434624:	inc    ebp
  434625:	inc    ebx
  434626:	add    bl,bh
  434628:	inc    ebp
  434629:	inc    ebx
  43462a:	add    bh,bh
  43462c:	inc    ebp
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [ebx],al
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [edi],al
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43463d:	adc    BYTE PTR [eax],al
  43463f:	adc    dh,BYTE PTR [ecx+0x10]
  434642:	add    BYTE PTR [edi+0x2c001065],al
  434648:	push   0x5aa20010
  43464d:	adc    BYTE PTR [eax],al
  43464f:	rol    DWORD PTR [eax+edx*1],0x0
  434653:	int    0x6f
  434655:	adc    BYTE PTR [eax],al
  434657:	aaa    
  434658:	inc    esi
  434659:	inc    ebx
  43465a:	add    BYTE PTR [ebx],bh
  43465c:	inc    esi
  43465d:	inc    ebx
  43465e:	add    BYTE PTR [edi],bh
  434660:	inc    esi
  434661:	inc    ebx
  434662:	add    BYTE PTR [ebx+0x46],al
  434665:	inc    ebx
  434666:	add    BYTE PTR [edi+0x46],al
  434669:	inc    ebx
  43466a:	add    BYTE PTR [ebx+0x46],cl
  43466d:	inc    ebx
  43466e:	add    BYTE PTR [edi+0x46],cl
  434671:	inc    ebx
  434672:	add    BYTE PTR [ebx+0x46],dl
  434675:	inc    ebx
  434676:	add    BYTE PTR [ebx+0x54001005],dh
  43467c:	push   ebp
  43467d:	adc    BYTE PTR [eax],al
  43467f:	sbb    bh,BYTE PTR [eax]
  434681:	adc    BYTE PTR [eax],al
  434683:	mov    edx,0x2f001013
  434688:	dec    edx
  434689:	adc    BYTE PTR [eax],al
  43468b:	inc    ecx
  43468c:	or     edx,DWORD PTR [eax]
  43468e:	add    BYTE PTR [ebx+0x19],ch
  434691:	adc    BYTE PTR [eax],al
  434693:	mov    esp,0x7700103e
  434698:	inc    esi
  434699:	inc    ebx
  43469a:	add    BYTE PTR [ebx+0x46],bh
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [edi+0x46],bh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346a8:	inc    esi
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [ebx-0x70ffbcba],cl
  4346b0:	inc    esi
  4346b1:	inc    ebx
  4346b2:	add    BYTE PTR [ebx-0x50ffbcba],dl
  4346b8:	push   0x10
  4346ba:	add    al,bl
  4346bc:	imul   edx,DWORD PTR [eax],0x0
  4346bf:	sahf   
  4346c0:	push   ss
  4346c1:	adc    BYTE PTR [eax],al
  4346c3:	jle    0x4346ff
  4346c5:	adc    BYTE PTR [eax],al
  4346c7:	jbe    0x4346de
  4346c9:	adc    BYTE PTR [eax],al
  4346cb:	cmp    DWORD PTR [edi+0x10],edx
  4346ce:	add    BYTE PTR [ebp+0x59001066],bl
  4346d4:	adc    al,0x10
  4346d6:	add    BYTE PTR [edi-0x44ffbcba],dh
  4346dc:	inc    esi
  4346dd:	inc    ebx
  4346de:	add    BYTE PTR [edi-0x3cffbcba],bh
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4346fc:	inc    ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	dec    ebx
  434700:	dec    eax
  434701:	adc    BYTE PTR [eax],al
  434703:	dec    ebx
  434704:	popa   
  434705:	adc    BYTE PTR [eax],al
  434707:	adc    al,BYTE PTR [eax+edx*1]
  43470a:	add    dh,dl
  43470c:	push   ds
  43470d:	adc    BYTE PTR [eax],al
  43470f:	hlt    
  434710:	pop    ds
  434711:	adc    BYTE PTR [eax],al
  434713:	dec    ecx
  434714:	pop    eax
  434715:	adc    BYTE PTR [eax],al
  434717:	test   DWORD PTR [esi+0x43],0x4346fb00
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [ebp+0x57],cl
  434739:	xor    DWORD PTR [ecx],esi
  43473b:	cmp    BYTE PTR [edi+ebx*2],dh
  43473e:	push   ecx
  43473f:	add    BYTE PTR [edx+0x33],dl
  434742:	push   esi
  434743:	xor    eax,0x3849515f
  434748:	xor    al,0x59
  43474a:	push   edi
  43474b:	add    BYTE PTR [ebx+0x54],al
  43474e:	inc    ebp
  43474f:	pop    edi
  434750:	dec    ebx
  434751:	push   edx
  434752:	push   ebp
  434753:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434758:	pop    edi
  434759:	aaa    
  43475a:	xor    al,0x32
  43475c:	xor    BYTE PTR [edi+0x5f],al
  43475f:	inc    ebx
  434760:	pop    edx
  434761:	add    BYTE PTR [edi+0x4e],al
  434764:	cmp    DWORD PTR [edi+0x47],ebx
  434767:	push   ebx
  434768:	cmp    DWORD PTR [edi+0x4e],edx
  43476b:	add    BYTE PTR [ecx+0x44],dl
  43476e:	cmp    BYTE PTR [edi+0x33],bl
  434771:	cmp    BYTE PTR [eax],dh
  434773:	pop    edi
  434774:	inc    ecx
  434775:	dec    edi
  434776:	inc    esi
  434777:	push   eax
  434778:	add    BYTE PTR [edx+0x43],dl
  43477b:	xor    eax,0x41305f30
  434780:	xor    BYTE PTR [esi+0x5f],al
  434783:	inc    ebx
  434784:	xor    dh,BYTE PTR [edx]
  434786:	xor    eax,0x36545200
  43478b:	xor    al,0x5f
  43478d:	dec    esi
  43478e:	xor    esi,DWORD PTR [edx]
  434790:	add    BYTE PTR ss:[eax+0x4b],cl
  434794:	inc    ebx
  434795:	pop    edi
  434796:	ss xor al,0x34
  434799:	pop    edi
  43479a:	inc    ecx
  43479b:	push   esp
  43479c:	dec    edi
  43479d:	add    BYTE PTR [esi+0x52],dl
  4347a0:	push   esi
  4347a1:	pop    edi
  4347a2:	inc    esi
  4347a3:	push   ecx
  4347a4:	push   ebp
  4347a5:	push   edx
  4347a6:	dec    eax
  4347a7:	add    BYTE PTR [esi+0x41],cl
  4347aa:	inc    edx
  4347ab:	pop    edi
  4347ac:	xor    DWORD PTR [ecx],edi
  4347ae:	push   edi
  4347af:	pop    edi
  4347b0:	pop    edx
  4347b1:	xor    eax,0x47003934
  4347b6:	push   edx
  4347b7:	push   ebp
  4347b8:	pop    edi
  4347b9:	xor    al,BYTE PTR [edx+0x30]
  4347bc:	push   ebx
  4347bd:	dec    esi
  4347be:	xor    eax,0x38564300
  4347c3:	xor    al,0x5f
  4347c5:	xor    bl,BYTE PTR [eax+0x36]
  4347c8:	inc    edx
  4347c9:	pop    edi
  4347ca:	pop    ecx
  4347cb:	xor    al,BYTE PTR [ecx+0x0]
  4347ce:	push   edi
  4347cf:	dec    ecx
  4347d0:	push   ebx
  4347d1:	xor    DWORD PTR [eax],edi
  4347d3:	pop    edi
  4347d4:	push   ecx
  4347d5:	xor    BYTE PTR [edx+0x5f],cl
  4347d8:	inc    ecx
  4347d9:	add    BYTE PTR ss:[edx+0x45],al
  4347dd:	push   edi
  4347de:	cmp    DWORD PTR [eax],edi
  4347e0:	pop    edi
  4347e1:	inc    edx
  4347e2:	xor    eax,0x36520057
  4347e7:	aaa    
  4347e8:	xor    BYTE PTR [edi],dh
  4347ea:	pop    edi
  4347eb:	inc    edx
  4347ec:	cmp    DWORD PTR [edi+0x52],eax
  4347ef:	dec    esp
  4347f0:	pop    edi
  4347f1:	dec    ebx
  4347f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4347f6:	pop    edi
  4347f7:	push   ebp
  4347f8:	push   ebx
  4347f9:	aaa    
  4347fa:	dec    ebp
  4347fb:	pop    edi
  4347fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4347ff:	dec    ebx
  434800:	dec    edx
  434801:	add    BYTE PTR [edi+0x47],al
  434804:	xor    eax,0x534e5f32
  434809:	push   esp
  43480a:	pop    edi
  43480b:	push   esp
  43480c:	inc    edx
  43480d:	inc    esi
  43480e:	inc    esp
  43480f:	add    BYTE PTR [ebp+0x4e],al
  434812:	inc    edi
  434813:	cmp    DWORD PTR [edi+0x57],ebx
  434816:	push   eax
  434817:	push   ecx
  434818:	pop    edi
  434819:	dec    edi
  43481a:	inc    ebx
  43481b:	push   edi
  43481c:	pop    edi
  43481d:	inc    edi
  43481e:	add    BYTE PTR [edi+0x45],dl
  434821:	inc    esi
  434822:	pop    edi
  434823:	push   edx
  434824:	inc    edx
  434825:	pop    eax
  434826:	inc    edi
  434827:	ss pop edi
  434829:	push   esi
  43482a:	inc    ebx
  43482b:	dec    esi
  43482c:	inc    esp
  43482d:	add    BYTE PTR [edi+0x4d],cl
  434830:	inc    edi
  434831:	xor    ebx,DWORD PTR [edi+0x34]
  434834:	dec    esi
  434835:	pop    edx
  434836:	cmp    BYTE PTR [edi+0x58],bl
  434839:	cmp    BYTE PTR [eax],al
  43483b:	push   edx
  43483c:	pop    eax
  43483d:	push   ecx
  43483e:	pop    edi
  43483f:	dec    esp
  434840:	push   edx
  434841:	dec    ecx
  434842:	dec    edi
  434843:	inc    esp
  434844:	pop    edi
  434845:	dec    edi
  434846:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43484a:	push   eax
  43484b:	inc    ebp
  43484c:	pop    edi
  43484d:	xor    eax,0x565f3945
  434852:	add    BYTE PTR [edi+0x4e],al
  434855:	push   esi
  434856:	pop    edi
  434857:	inc    edi
  434858:	push   esp
  434859:	dec    eax
  43485a:	xor    dh,BYTE PTR [ecx]
  43485c:	pop    edi
  43485d:	dec    edi
  43485e:	xor    eax,DWORD PTR ss:[eax]
  434861:	inc    esp
  434862:	inc    ebp
  434863:	dec    ecx
  434864:	pop    edi
  434865:	push   edx
  434866:	dec    eax
  434867:	xor    al,0x48
  434869:	dec    ecx
  43486a:	ss pop edi
  43486c:	aaa    
  43486d:	aaa    
  43486e:	dec    ecx
  43486f:	dec    ebp
  434870:	add    BYTE PTR [eax+0x54],cl
  434873:	ss pop edi
  434875:	inc    esi
  434876:	inc    edx
  434877:	xor    dh,BYTE PTR [eax+eax*1]
  43487a:	dec    esi
  43487b:	ss dec edx
  43487d:	pop    edi
  43487e:	dec    ecx
  43487f:	dec    esp
  434880:	inc    edi
  434881:	inc    esp
  434882:	dec    eax
  434883:	xor    BYTE PTR [eax],bh
  434885:	xor    eax,0x34004f00
  43488a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43488e:	add    BYTE PTR [edi],dh
  434890:	add    BYTE PTR [eax],dh
  434892:	add    BYTE PTR [edi+0x0],bl
  434895:	inc    esp
  434896:	add    BYTE PTR [edi+0x0],al
  434899:	dec    ebx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [ecx+0x0],al
  43489f:	inc    ebx
  4348a0:	add    BYTE PTR [eax],al
  4348a2:	add    BYTE PTR [edi+0x0],cl
  4348a5:	xor    al,BYTE PTR [eax]
  4348a7:	xor    eax,DWORD PTR [eax]
  4348a9:	pop    edi
  4348aa:	add    BYTE PTR [edi+0x0],dl
  4348ad:	xor    al,BYTE PTR [eax]
  4348af:	dec    edi
  4348b0:	add    BYTE PTR [edi+0x0],bl
  4348b3:	pop    edx
  4348b4:	add    BYTE PTR [eax],al
  4348b6:	add    BYTE PTR [eax+0x0],bl
  4348b9:	dec    esp
  4348ba:	add    BYTE PTR [ecx],bh
  4348bc:	add    BYTE PTR [edi+0x0],bl
  4348bf:	dec    ebx
  4348c0:	add    BYTE PTR [ecx+0x0],al
  4348c3:	dec    edx
  4348c4:	add    BYTE PTR [esi+0x0],al
  4348c7:	xor    DWORD PTR [eax],eax
  4348c9:	xor    al,0x0
  4348cb:	pop    edi
  4348cc:	add    BYTE PTR [eax+0x0],bl
  4348cf:	inc    edi
  4348d0:	add    BYTE PTR [edx+0x0],al
  4348d3:	add    BYTE PTR [eax],al
  4348d5:	push   eax
  4348d6:	add    BYTE PTR [ebx],dh
  4348d8:	add    BYTE PTR [esi+0x0],cl
  4348db:	pop    edi
  4348dc:	add    BYTE PTR [eax+0x0],cl
  4348df:	xor    eax,0x5f005300
  4348e4:	add    BYTE PTR [eax+0x0],cl
  4348e7:	add    BYTE PTR [eax],al
  4348e9:	dec    ebp
  4348ea:	add    BYTE PTR [eax],dh
  4348ec:	add    BYTE PTR [edx+0x0],al
  4348ef:	pop    edi
  4348f0:	add    BYTE PTR [edx+0x0],cl
  4348f3:	pop    eax
  4348f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4348f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4348fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434900:	add    BYTE PTR [ecx+0x0],al
  434903:	xor    eax,DWORD PTR [eax]
  434905:	xor    BYTE PTR [eax],al
  434907:	pop    edi
  434908:	add    BYTE PTR [ecx+0x0],al
  43490b:	pop    edx
  43490c:	add    BYTE PTR [ecx+0x0],dl
  43490f:	pop    edx
  434910:	add    BYTE PTR [ecx],bh
  434912:	add    BYTE PTR [esi],dh
  434914:	add    BYTE PTR [edi+0x0],bl
  434917:	dec    eax
  434918:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43491c:	add    BYTE PTR [eax],al
  43491e:	add    BYTE PTR [ecx+0x0],dl
  434921:	push   edi
  434922:	add    BYTE PTR [ecx+0x0],bl
  434925:	pop    edi
  434926:	add    BYTE PTR [esi+0x0],dl
  434929:	xor    al,0x0
  43492b:	inc    esp
  43492c:	add    BYTE PTR [ecx],dh
  43492e:	add    BYTE PTR [eax],bh
  434930:	add    BYTE PTR [edx],dh
  434932:	add    BYTE PTR [edi+0x0],bl
  434935:	cmp    DWORD PTR [eax],eax
  434937:	push   esp
  434938:	add    BYTE PTR [eax+eax*1+0x0],dl
  43493c:	add    BYTE PTR [esi+0x0],dl
  43493f:	dec    edi
  434940:	add    BYTE PTR [edi+0x0],al
  434943:	add    BYTE PTR ss:[edi+0x0],bl
  434947:	dec    edi
  434948:	add    BYTE PTR [edx+0x0],bl
  43494b:	inc    ebp
  43494c:	add    BYTE PTR [eax],dh
  43494e:	add    BYTE PTR [ebp+0x0],al
  434951:	xor    BYTE PTR [eax],al
  434953:	pop    edi
  434954:	add    BYTE PTR [eax],dh
  434956:	add    BYTE PTR ds:0x4f000000,dh
  43495c:	add    BYTE PTR ds:0x5f005700,dh
  434962:	add    BYTE PTR [edi],dh
  434964:	add    BYTE PTR [ebx+0x0],dl
  434967:	push   ebp
  434968:	add    BYTE PTR [edi+0x0],al
  43496b:	xor    al,0x0
  43496d:	pop    edi
  43496e:	add    BYTE PTR [ecx+0x0],dl
  434971:	inc    esp
  434972:	add    BYTE PTR [eax],al
  434974:	add    BYTE PTR [edx+0x0],dl
  434977:	push   esp
  434978:	add    BYTE PTR ds:0x52005f00,dh
  43497e:	add    BYTE PTR [edi+0x0],dl
  434981:	xor    al,BYTE PTR [eax]
  434983:	xor    al,BYTE PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	xor    BYTE PTR [eax],al
  434989:	pop    edi
  43498a:	add    BYTE PTR [esi],dh
  43498c:	add    BYTE PTR [eax],al
  43498e:	add    BYTE PTR [eax+0x0],cl
  434991:	inc    ebp
  434992:	add    BYTE PTR [eax+eax*1+0x30],cl
  434996:	add    BYTE PTR [edi+0x0],bl
  434999:	dec    edx
  43499a:	add    BYTE PTR [edx],dh
  43499c:	add    BYTE PTR [edi],dh
  43499e:	add    BYTE PTR [ebp+0x0],dl
  4349a1:	add    BYTE PTR ss:[eax],dh
  4349a4:	add    BYTE PTR [eax],al
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	cmp    BYTE PTR [eax],al
  4349ab:	dec    edi
  4349ac:	add    BYTE PTR [ecx],bh
  4349ae:	add    BYTE PTR [edi+0x0],bl
  4349b1:	pop    eax
  4349b2:	add    BYTE PTR [edx+0x0],bl
  4349b5:	dec    esp
  4349b6:	add    BYTE PTR [ebx+0x0],cl
  4349b9:	add    BYTE PTR [eax],al
  4349bb:	dec    ecx
  4349bc:	add    BYTE PTR [ebp+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [eax],al
  4349c2:	add    BYTE PTR [edx+0x53],dl
  4349c5:	inc    esp
  4349c6:	push   ebx
  4349c7:	mov    ebp,0x781c2a8d
  4349cc:	sbb    BYTE PTR [edx+ecx*2],bl
  4349cf:	mov    ah,0x6d
  4349d1:	lahf   
  4349d2:	dec    edi
  4349d3:	pop    ebp
  4349d4:	imul   esp,DWORD PTR [esi],0x1aa5
  4349da:	add    BYTE PTR [ebx+0x3a],dl
  4349dd:	pop    esp
  4349de:	popa   
  4349df:	jbe    0x434a56
  4349e1:	jns    0x434a50
  4349e3:	dec    ecx
  4349e4:	jb     0x434a60
  4349e6:	pop    esp
  4349e7:	bound  di,DWORD PTR [edx+0x52]
  4349eb:	gs fs push ax
  4349ef:	arpl   WORD PTR [esi+0x5c],si
  4349f2:	js     0x434a4e
  4349f4:	je     0x434a3d
  4349f6:	jno    0x434a3a
  4349f8:	jno    0x434a61
  4349fa:	bound  ebp,QWORD PTR [esi]
  4349fc:	jo     0x434a62
  4349fe:	bound  eax,QWORD PTR [eax]
